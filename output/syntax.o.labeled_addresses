reset_expand_highlight	FOR,0:DO,0:IF,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,0	10
0xc89f	              0x55	                                push rbp	      6467	syntax.c	FUNCTION_98
0xc8a0	          0x4889e5	                            mov rbp, rsp	      6467	syntax.c	FUNCTION_98
0xc8a3	    0xc70500000000	               mov dword [0x0400c8ed], 0	      6468	syntax.c	FUNCTION_98
0xc8ad	    0x8b0500000000	            mov eax, dword [0x0400c8f3] 	      6468	syntax.c	FUNCTION_98
0xc8b3	    0x890500000000	            mov dword [0x0400c8f9], eax 	      6468	syntax.c	FUNCTION_98
0xc8b9	    0x8b0500000000	            mov eax, dword [0x0400c8ff] 	      6468	syntax.c	FUNCTION_98
0xc8bf	    0x890500000000	            mov dword [0x0400c905], eax 	      6468	syntax.c	FUNCTION_98
0xc8c5	              0x90	                                     nop	      6469	syntax.c	FUNCTION_98
0xc8c6	              0x5d	                                 pop rbp	      6469	syntax.c	FUNCTION_98
0xc8c7	              0xc3	                                     ret	      6469	syntax.c	FUNCTION_98
syn_sync	FOR,4:DO,0:IF,27:SWITCH,0:functions,0:ELSE,11:WHILE,1:CALL,30	409
0x5d7	              0x55	                                push rbp	       741	syntax.c	FUNCTION_5
0x5d8	          0x4889e5	                            mov rbp, rsp	       741	syntax.c	FUNCTION_5
0x5db	    0x4881eca00000	                           sub rsp, 0xa0	       741	syntax.c	FUNCTION_5
0x5e2	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	       741	syntax.c	FUNCTION_5
0x5e9	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	       741	syntax.c	FUNCTION_5
0x5f0	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	       741	syntax.c	FUNCTION_5
0x5f7	    0xc74584000000	               mov dword [rbp - 0x7c], 0	       753	syntax.c	FUNCTION_5
0x5fe	    0xc74588000000	               mov dword [rbp - 0x78], 0	       754	syntax.c	FUNCTION_5
0x605	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       755	syntax.c	FUNCTION_5
0x60d	    0xc7458c000000	               mov dword [rbp - 0x74], 0	       756	syntax.c	FUNCTION_5
0x614	      0xe88d200000	       call sym.invalidate_current_state	       763	syntax.c	FUNCTION_5	CALL_1
0x619	    0x488b05000000	            mov rax, qword [0x04000660] 	       773	syntax.c	FUNCTION_5	IF_1
0x620	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	       773	syntax.c	FUNCTION_5	IF_1
0x627	    0x483b8570ffff	             cmp rax, qword [rbp - 0x90]	       773	syntax.c	FUNCTION_5	IF_1
0x62e	            0x7e10	                           jle 0x4000680	       773	syntax.c	FUNCTION_5	IF_1
0x630	    0x48c78570ffff	               mov qword [rbp - 0x90], 1	       774	syntax.c	FUNCTION_5	IF_1
0x63b	      0xe9cf000000	                           jmp 0x400074f	       774	syntax.c	FUNCTION_5	IF_1
0x640	    0x488b05000000	            mov rax, qword [0x04000687] 	       777	syntax.c	FUNCTION_5	ELSE_1	IF_2
0x647	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	       777	syntax.c	FUNCTION_5	ELSE_1	IF_2
0x64e	        0x4883f801	                              cmp rax, 1	       777	syntax.c	FUNCTION_5	ELSE_1	IF_2
0x652	            0x750a	                           jne 0x400069e	       777	syntax.c	FUNCTION_5	ELSE_1	IF_2
0x654	    0x48c745980100	               mov qword [rbp - 0x68], 1	       778	syntax.c	FUNCTION_5	ELSE_1	IF_2
0x65c	            0xeb53	                           jmp 0x40006f1	       778	syntax.c	FUNCTION_5	ELSE_1	IF_2
0x65e	    0x488b05000000	            mov rax, qword [0x040006a5] 	       779	syntax.c	FUNCTION_5	ELSE_1	ELSE_2	IF_3
0x665	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	       779	syntax.c	FUNCTION_5	ELSE_1	ELSE_2	IF_3
0x66c	        0x4883f809	                              cmp rax, 9	       779	syntax.c	FUNCTION_5	ELSE_1	ELSE_2	IF_3
0x670	            0x7f17	                            jg 0x40006c9	       779	syntax.c	FUNCTION_5	ELSE_1	ELSE_2	IF_3
0x672	    0x488b05000000	            mov rax, qword [0x040006b9] 	       780	syntax.c	FUNCTION_5	ELSE_1	ELSE_2	IF_3
0x679	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	       780	syntax.c	FUNCTION_5	ELSE_1	ELSE_2	IF_3
0x680	          0x4801c0	                            add rax, rax	       780	syntax.c	FUNCTION_5	ELSE_1	ELSE_2	IF_3
0x683	        0x48894598	             mov qword [rbp - 0x68], rax	       780	syntax.c	FUNCTION_5	ELSE_1	ELSE_2	IF_3
0x687	            0xeb28	                           jmp 0x40006f1	       780	syntax.c	FUNCTION_5	ELSE_1	ELSE_2	IF_3
0x689	    0x488b05000000	            mov rax, qword [0x040006d0] 	       782	syntax.c	FUNCTION_5	ELSE_1	ELSE_3
0x690	    0x488b90a80200	           mov rdx, qword [rax + 0x2a8] 	       782	syntax.c	FUNCTION_5	ELSE_1	ELSE_3
0x697	          0x4889d0	                            mov rax, rdx	       782	syntax.c	FUNCTION_5	ELSE_1	ELSE_3
0x69a	          0x4801c0	                            add rax, rax	       782	syntax.c	FUNCTION_5	ELSE_1	ELSE_3
0x69d	          0x4801d0	                            add rax, rdx	       782	syntax.c	FUNCTION_5	ELSE_1	ELSE_3
0x6a0	          0x4889c2	                            mov rdx, rax	       782	syntax.c	FUNCTION_5	ELSE_1	ELSE_3
0x6a3	        0x48c1ea3f	                           shr rdx, 0x3f	       782	syntax.c	FUNCTION_5	ELSE_1	ELSE_3
0x6a7	          0x4801d0	                            add rax, rdx	       782	syntax.c	FUNCTION_5	ELSE_1	ELSE_3
0x6aa	          0x48d1f8	                              sar rax, 1	       782	syntax.c	FUNCTION_5	ELSE_1	ELSE_3
0x6ad	        0x48894598	             mov qword [rbp - 0x68], rax	       782	syntax.c	FUNCTION_5	ELSE_1	ELSE_3
0x6b1	    0x488b05000000	            mov rax, qword [0x040006f8] 	       783	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x6b8	    0x488b80b00200	           mov rax, qword [rax + 0x2b0] 	       783	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x6bf	          0x4885c0	                           test rax, rax	       783	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x6c2	            0x7426	                            je 0x400072a	       783	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x6c4	    0x488b05000000	            mov rax, qword [0x0400070b] 	       784	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x6cb	    0x488b80b00200	           mov rax, qword [rax + 0x2b0] 	       784	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x6d2	        0x483b4598	             cmp rax, qword [rbp - 0x68]	       784	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x6d6	            0x7d12	                           jge 0x400072a	       784	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x6d8	    0x488b05000000	            mov rax, qword [0x0400071f] 	       785	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x6df	    0x488b80b00200	           mov rax, qword [rax + 0x2b0] 	       785	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x6e6	        0x48894598	             mov qword [rbp - 0x68], rax	       785	syntax.c	FUNCTION_5	ELSE_1	IF_4
0x6ea	        0x488b4598	             mov rax, qword [rbp - 0x68]	       786	syntax.c	FUNCTION_5	ELSE_1	IF_5
0x6ee	    0x483b8570ffff	             cmp rax, qword [rbp - 0x90]	       786	syntax.c	FUNCTION_5	ELSE_1	IF_5
0x6f5	            0x7c0d	                            jl 0x4000744	       786	syntax.c	FUNCTION_5	ELSE_1	IF_5
0x6f7	    0x48c78570ffff	               mov qword [rbp - 0x90], 1	       787	syntax.c	FUNCTION_5	ELSE_1	IF_5
0x702	            0xeb0b	                           jmp 0x400074f	       787	syntax.c	FUNCTION_5	ELSE_1	IF_5
0x704	        0x488b4598	             mov rax, qword [rbp - 0x68]	       789	syntax.c	FUNCTION_5	ELSE_1	ELSE_4
0x708	    0x48298570ffff	             sub qword [rbp - 0x90], rax	       789	syntax.c	FUNCTION_5	ELSE_1	ELSE_4
0x70f	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       791	syntax.c	FUNCTION_5	ELSE_4
0x716	    0x488905000000	            mov qword [0x0400075d], rax 	       791	syntax.c	FUNCTION_5	ELSE_4
0x71d	    0x488b05000000	            mov rax, qword [0x04000764] 	       796	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x724	    0x8b809c020000	           mov eax, dword [rax + 0x29c] 	       796	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x72a	          0x83e001	                              and eax, 1	       796	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x72d	            0x85c0	                           test eax, eax	       796	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x72f	     0xf84cf010000	                            je 0x4000944	       796	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x735	    0x488b05000000	            mov rax, qword [0x0400077c] 	       800	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x73c	        0x488945b8	             mov qword [rbp - 0x48], rax	       800	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x740	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       801	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x747	    0x488905000000	            mov qword [0x0400078e], rax 	       801	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x74e	    0x488b05000000	            mov rax, qword [0x04000795] 	       802	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x755	        0x488945c0	             mov qword [rbp - 0x40], rax	       802	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x759	    0x488b05000000	            mov rax, qword [0x040007a0] 	       803	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x760	    0x488905000000	            mov qword [0x040007a7], rax 	       803	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x767	            0xeb48	                           jmp 0x40007f1	       808	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1
0x769	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       810	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	CALL_2
0x770	        0x4883e801	                              sub rax, 1	       810	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	CALL_2
0x774	          0x4889c7	                            mov rdi, rax	       810	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	CALL_2
0x777	      0xe800000000	                          call 0x40007bc	       810	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	CALL_2
0x77c	        0x488945c8	             mov qword [rbp - 0x38], rax	       810	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	CALL_2
0x780	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x784	           0xfb600	                   movzx eax, byte [rax]	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x787	            0x84c0	                             test al, al	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x789	            0x7430	                            je 0x40007fb	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x78b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x78f	          0x4889c7	                            mov rdi, rax	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x792	      0xe800000000	                          call 0x40007d7	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x797	        0x488d50ff	                      lea rdx, [rax - 1]	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x79b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x79f	          0x4801d0	                            add rax, rdx	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x7a2	           0xfb600	                   movzx eax, byte [rax]	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x7a5	            0x3c5c	                            cmp al, 0x5c	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x7a7	            0x7512	                           jne 0x40007fb	       811	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1	IF_7	CALL_3
0x7a9	    0x4883ad70ffff	               sub qword [rbp - 0x90], 1	       808	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1
0x7b1	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 1	       808	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1
0x7b9	            0x7fae	                            jg 0x40007a9	       808	syntax.c	FUNCTION_5	ELSE_4	IF_6	FOR_1
0x7bb	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       814	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x7c2	    0x488905000000	            mov qword [0x04000809], rax 	       814	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x7c9	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       817	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x7d0	        0x488b5040	            mov rdx, qword [rax + 0x40] 	       817	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x7d4	        0x488b4038	            mov rax, qword [rax + 0x38] 	       817	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x7d8	        0x488945e0	             mov qword [rbp - 0x20], rax	       817	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x7dc	        0x488955e8	             mov qword [rbp - 0x18], rdx	       817	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x7e0	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       818	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x7e7	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       818	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x7ee	        0x48895038	             mov qword [rax + 0x38], rdx	       818	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x7f2	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       819	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x7f9	    0xc74040000000	               mov dword [rax + 0x40], 0	       819	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x800	    0x488b05000000	            mov rax, qword [0x04000847] 	       826	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	CALL_4
0x807	    0x488b80b00200	           mov rax, qword [rax + 0x2b0] 	       826	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	CALL_4
0x80e	            0x89c7	                            mov edi, eax	       826	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	CALL_4
0x810	      0xe800000000	                          call 0x4000855	       826	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	CALL_4
0x815	          0x4885c0	                           test rax, rax	       826	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	CALL_4
0x818	     0xf84b4000000	                            je 0x4000912	       826	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	CALL_4
0x81e	    0x488b05000000	            mov rax, qword [0x04000865] 	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x825	    0x8b8060020000	           mov eax, dword [rax + 0x260] 	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x82b	          0x894580	             mov dword [rbp - 0x80], eax	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x82e	      0xe98e000000	                           jmp 0x4000901	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x833	    0x488b05000000	            mov rax, qword [0x0400087a] 	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_5
0x83a	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_5
0x841	          0x8b4580	             mov eax, dword [rbp - 0x80]	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_5
0x844	          0x4863d0	                         movsxd rdx, eax	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_5
0x847	          0x4889d0	                            mov rax, rdx	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_5
0x84a	        0x48c1e002	                              shl rax, 2	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_5
0x84e	          0x4801d0	                            add rax, rdx	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_5
0x851	        0x48c1e005	                              shl rax, 5	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_5
0x855	          0x4801c8	                            add rax, rcx	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_5
0x858	         0xfb75054	           movzx edx, word [rax + 0x54] 	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_5
0x85c	    0x488b05000000	            mov rax, qword [0x040008a3] 	       830	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x863	     0xfb780a00200	          movzx eax, word [rax + 0x2a0] 	       830	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x86a	          0x6639c2	                              cmp dx, ax	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_5
0x86d	            0x7552	                           jne 0x4000901	       829	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_5
0x86f	    0x488b05000000	            mov rax, qword [0x040008b6] 	       831	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_6
0x876	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	       831	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_6
0x87d	          0x8b4580	             mov eax, dword [rbp - 0x80]	       831	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_6
0x880	          0x4863d0	                         movsxd rdx, eax	       831	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_6
0x883	          0x4889d0	                            mov rax, rdx	       831	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_6
0x886	        0x48c1e002	                              shl rax, 2	       831	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_6
0x88a	          0x4801d0	                            add rax, rdx	       831	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_6
0x88d	        0x48c1e005	                              shl rax, 5	       831	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_6
0x891	          0x4801c8	                            add rax, rcx	       831	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_6
0x894	           0xfb600	                   movzx eax, byte [rax]	       831	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_6
0x897	            0x3c02	                               cmp al, 2	       831	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_6
0x899	            0x7526	                           jne 0x4000901	       831	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_6
0x89b	      0xe8311e0000	         call sym.validate_current_state	       833	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_7
0x8a0	          0x8b4580	             mov eax, dword [rbp - 0x80]	       834	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	IF_10	CALL_8
0x8a3	            0x89c7	                            mov edi, eax	       834	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	IF_10	CALL_8
0x8a5	      0xe845420000	             call sym.push_current_state	       834	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	IF_10	CALL_8
0x8aa	          0x83f801	                              cmp eax, 1	       834	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	IF_10	CALL_8
0x8ad	            0x7522	                           jne 0x4000911	       834	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	IF_10	CALL_8
0x8af	    0x8b0500000000	            mov eax, dword [0x040008f5] 	       835	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_9
0x8b5	          0x83e801	                              sub eax, 1	       835	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_9
0x8b8	            0x89c7	                            mov edi, eax	       835	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_9
0x8ba	      0xe8073c0000	                 call sym.update_si_attr	       835	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9	CALL_9
0x8bf	            0xeb10	                           jmp 0x4000911	       836	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x8c1	        0x836d8001	               sub dword [rbp - 0x80], 1	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x8c5	        0x837d8000	               cmp dword [rbp - 0x80], 0	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x8c9	     0xf8964ffffff	                           jns 0x4000873	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x8cf	            0xeb01	                           jmp 0x4000912	       828	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2
0x8d1	              0x90	                                     nop	       836	syntax.c	FUNCTION_5	ELSE_4	IF_6	IF_8	FOR_2	IF_9
0x8d2	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	       841	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x8d9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       841	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x8dd	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       841	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x8e1	        0x48894138	             mov qword [rcx + 0x38], rax	       841	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x8e5	        0x48895140	             mov qword [rcx + 0x40], rdx	       841	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x8e9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       842	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x8ed	    0x488905000000	            mov qword [0x04000934], rax 	       842	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x8f4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       843	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x8f8	    0x488905000000	            mov qword [0x0400093f], rax 	       843	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x8ff	      0xe905040000	                           jmp 0x4000d49	       843	syntax.c	FUNCTION_5	ELSE_4	IF_6
0x904	    0x488b05000000	            mov rax, qword [0x0400094b] 	       849	syntax.c	FUNCTION_5	ELSE_5	IF_11
0x90b	    0x8b809c020000	           mov eax, dword [rax + 0x29c] 	       849	syntax.c	FUNCTION_5	ELSE_5	IF_11
0x911	          0x83e002	                              and eax, 2	       849	syntax.c	FUNCTION_5	ELSE_5	IF_11
0x914	            0x85c0	                           test eax, eax	       849	syntax.c	FUNCTION_5	ELSE_5	IF_11
0x916	     0xf84ed030000	                            je 0x4000d49	       849	syntax.c	FUNCTION_5	ELSE_5	IF_11
0x91c	    0x488b05000000	            mov rax, qword [0x04000963] 	       851	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x923	    0x488b80b00200	           mov rax, qword [rax + 0x2b0] 	       851	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x92a	          0x4885c0	                           test rax, rax	       851	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x92d	            0x7438	                            je 0x40009a7	       851	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x92f	    0x488b05000000	            mov rax, qword [0x04000976] 	       852	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x936	    0x488b80b00200	           mov rax, qword [rax + 0x2b0] 	       852	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x93d	    0x483b8570ffff	             cmp rax, qword [rbp - 0x90]	       852	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x944	            0x7d21	                           jge 0x40009a7	       852	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x946	    0x488b05000000	            mov rax, qword [0x0400098d] 	       853	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x94d	    0x488b80b00200	           mov rax, qword [rax + 0x2b0] 	       853	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x954	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       853	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x95b	          0x4829c2	                            sub rdx, rax	       853	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x95e	          0x4889d0	                            mov rax, rdx	       853	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x961	        0x488945a8	             mov qword [rbp - 0x58], rax	       853	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x965	            0xeb08	                           jmp 0x40009af	       853	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_12
0x967	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       855	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6
0x96f	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       857	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6
0x977	    0xc745f8000000	                  mov dword [rbp - 8], 0	       858	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6
0x97e	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       859	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6
0x985	        0x488945a0	             mov qword [rbp - 0x60], rax	       859	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6
0x989	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       860	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6
0x990	        0x48894598	             mov qword [rbp - 0x68], rax	       860	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6
0x994	      0xe93f030000	                           jmp 0x4000d18	       861	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1
0x999	      0xe800000000	                          call 0x40009de	       864	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	CALL_10
0x99e	    0x8b0500000000	            mov eax, dword [0x040009e4] 	       865	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13
0x9a4	            0x85c0	                           test eax, eax	       865	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13
0x9a6	            0x7418	                            je 0x4000a00	       865	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13
0x9a8	      0xe8f91c0000	       call sym.invalidate_current_state	       867	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13	CALL_11
0x9ad	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       868	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13
0x9b4	    0x488905000000	            mov qword [0x040009fb], rax 	       868	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13
0x9bb	      0xe92b030000	                           jmp 0x4000d2b	       869	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_13
0x9c0	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	       873	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14
0x9c8	            0x7425	                            je 0x4000a2f	       873	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14
0x9ca	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       873	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14
0x9d1	        0x488b4008	                mov rax, qword [rax + 8]	       873	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14
0x9d5	        0x483b4598	             cmp rax, qword [rbp - 0x68]	       873	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14
0x9d9	            0x7514	                           jne 0x4000a2f	       873	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14
0x9db	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       875	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14	CALL_12
0x9e2	          0x4889c7	                            mov rdi, rax	       875	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14	CALL_12
0x9e5	      0xe80e160000	             call sym.load_current_state	       875	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14	CALL_12
0x9ea	      0xe9fc020000	                           jmp 0x4000d2b	       876	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_14
0x9ef	      0x48837d9801	               cmp qword [rbp - 0x68], 1	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_13
0x9f4	            0x7e19	                           jle 0x4000a4f	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_13
0x9f6	        0x488b4598	             mov rax, qword [rbp - 0x68]	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_13
0x9fa	        0x4883e801	                              sub rax, 1	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_13
0x9fe	          0x4889c7	                            mov rdi, rax	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_13
0xa01	      0xe8d4030000	             call sym.syn_match_linecont	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_13
0xa06	            0x85c0	                           test eax, eax	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_13
0xa08	            0x7405	                            je 0x4000a4f	       882	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15	CALL_13
0xa0a	      0xe9c9020000	                           jmp 0x4000d18	       883	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	IF_15
0xa0f	      0xe8bd1c0000	         call sym.validate_current_state	       888	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	CALL_14
0xa14	        0x488b4598	             mov rax, qword [rbp - 0x68]	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0xa18	    0x488905000000	            mov qword [0x04000a5f], rax 	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0xa1f	      0xe9a9010000	                           jmp 0x4000c0d	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0xa24	      0xe890040000	                 call sym.syn_start_line	       892	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	CALL_15
0xa29	      0xbf01000000	                              mov edi, 1	       895	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	CALL_16
0xa2e	      0xe8491d0000	                call sym.syn_finish_line	       895	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	CALL_16
0xa33	          0x894590	             mov dword [rbp - 0x70], eax	       895	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	CALL_16
0xa36	        0x837d9000	               cmp dword [rbp - 0x70], 0	       900	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0xa3a	     0xf847b010000	                            je 0x4000bfb	       900	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0xa40	    0x8b0500000000	            mov eax, dword [0x04000a86] 	       900	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0xa46	            0x85c0	                           test eax, eax	       900	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0xa48	     0xf846d010000	                            je 0x4000bfb	       900	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0xa4e	    0x488b0d000000	            mov rcx, qword [0x04000a95] 	       902	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	CALL_17
0xa55	    0x8b0500000000	            mov eax, dword [0x04000a9b] 	       902	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	CALL_17
0xa5b	          0x4863d0	                         movsxd rdx, eax	       902	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	CALL_17
0xa5e	          0x4889d0	                            mov rax, rdx	       902	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	CALL_17
0xa61	        0x48c1e003	                              shl rax, 3	       902	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	CALL_17
0xa65	          0x4801d0	                            add rax, rdx	       902	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	CALL_17
0xa68	        0x48c1e004	                              shl rax, 4	       902	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	CALL_17
0xa6c	    0x482d90000000	                           sub rax, 0x90	       902	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	CALL_17
0xa72	          0x4801c8	                            add rax, rcx	       902	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	CALL_17
0xa75	        0x488945d0	             mov qword [rbp - 0x30], rax	       902	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	CALL_17
0xa79	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       903	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0xa7d	        0x488b4018	            mov rax, qword [rax + 0x18] 	       903	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0xa81	    0x483b8570ffff	             cmp rax, qword [rbp - 0x90]	       903	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0xa88	            0x7e10	                           jle 0x4000ada	       903	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0xa8a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       906	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0xa8e	    0x488905000000	            mov qword [0x04000ad5], rax 	       906	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0xa95	      0xe921010000	                           jmp 0x4000bfb	       907	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_17
0xa9a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       909	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_18
0xa9e	            0x8b00	                    mov eax, dword [rax]	       909	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_18
0xaa0	            0x85c0	                           test eax, eax	       909	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_18
0xaa2	            0x7910	                           jns 0x4000af4	       909	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_18
0xaa4	    0xc74584000000	               mov dword [rbp - 0x7c], 0	       912	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_18
0xaab	    0xc74588ffffff	     mov dword [rbp - 0x78], 0xffffffff 	       913	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_18
0xab2	            0xeb40	                           jmp 0x4000b34	       913	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_18
0xab4	    0x488b05000000	            mov rax, qword [0x04000afb] 	       917	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7	CALL_18
0xabb	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	       917	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7	CALL_18
0xac2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       917	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7	CALL_18
0xac6	            0x8b00	                    mov eax, dword [rax]	       917	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7	CALL_18
0xac8	          0x4863d0	                         movsxd rdx, eax	       917	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7	CALL_18
0xacb	          0x4889d0	                            mov rax, rdx	       917	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7	CALL_18
0xace	        0x48c1e002	                              shl rax, 2	       917	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7	CALL_18
0xad2	          0x4801d0	                            add rax, rdx	       917	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7	CALL_18
0xad5	        0x48c1e005	                              shl rax, 5	       917	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7	CALL_18
0xad9	          0x4801c8	                            add rax, rcx	       917	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7	CALL_18
0xadc	        0x488945d8	             mov qword [rbp - 0x28], rax	       917	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7	CALL_18
0xae0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       918	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0xae4	          0x8b4024	            mov eax, dword [rax + 0x24] 	       918	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0xae7	          0x894584	             mov dword [rbp - 0x7c], eax	       918	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0xaea	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       919	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0xaee	          0x8b4030	            mov eax, dword [rax + 0x30] 	       919	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0xaf1	          0x894588	             mov dword [rbp - 0x78], eax	       919	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_7
0xaf4	    0x488b05000000	            mov rax, qword [0x04000b3b] 	       921	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0xafb	        0x488945b0	             mov qword [rbp - 0x50], rax	       921	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0xaff	    0x8b0500000000	            mov eax, dword [0x04000b45] 	       922	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0xb05	          0x89458c	             mov dword [rbp - 0x74], eax	       922	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0xb08	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       923	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0xb0c	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       923	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0xb10	        0x488b4018	            mov rax, qword [rax + 0x18] 	       923	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0xb14	        0x488945f0	             mov qword [rbp - 0x10], rax	       923	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0xb18	        0x488955f8	                mov qword [rbp - 8], rdx	       923	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0xb1c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       928	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19
0xb20	    0x488b05000000	            mov rax, qword [0x04000b67] 	       928	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19
0xb27	          0x4839c2	                            cmp rdx, rax	       928	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19
0xb2a	            0x7e23	                           jle 0x4000b8f	       928	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19
0xb2c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       930	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19
0xb30	    0x488905000000	            mov qword [0x04000b77], rax 	       930	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19
0xb37	          0x8b45f8	                mov eax, dword [rbp - 8]	       931	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19
0xb3a	    0x890500000000	            mov dword [0x04000b80], eax 	       931	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19
0xb40	    0x488b05000000	            mov rax, qword [0x04000b87] 	       932	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19	IF_20
0xb47	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	       932	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19	IF_20
0xb4b	            0x7c29	                            jl 0x4000bb6	       932	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19	IF_20
0xb4d	            0xeb6c	                           jmp 0x4000bfb	       933	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_19	IF_20
0xb4f	          0x8b55f8	                mov edx, dword [rbp - 8]	       935	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_8	IF_21
0xb52	    0x8b0500000000	            mov eax, dword [0x04000b98] 	       935	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_8	IF_21
0xb58	            0x39c2	                            cmp edx, eax	       935	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_8	IF_21
0xb5a	            0x7e0b	                           jle 0x4000ba7	       935	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_8	IF_21
0xb5c	          0x8b45f8	                mov eax, dword [rbp - 8]	       936	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_8	IF_21
0xb5f	    0x890500000000	            mov dword [0x04000ba5], eax 	       936	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_8	IF_21
0xb65	            0xeb0f	                           jmp 0x4000bb6	       936	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_8	IF_21
0xb67	    0x8b0500000000	            mov eax, dword [0x04000bad] 	       938	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_9
0xb6d	          0x83c001	                              add eax, 1	       938	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_9
0xb70	    0x890500000000	            mov dword [0x04000bb6], eax 	       938	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	ELSE_9
0xb76	    0x8b0500000000	            mov eax, dword [0x04000bbc] 	       943	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0xb7c	          0x894594	             mov dword [rbp - 0x6c], eax	       943	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0xb7f	      0xe8a94c0000	                 call sym.syn_getcurline	       944	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22	CALL_19
0xb84	          0x4889c2	                            mov rdx, rax	       944	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22	CALL_19
0xb87	    0x8b0500000000	            mov eax, dword [0x04000bcd] 	       944	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22	CALL_19
0xb8d	            0x4898	                                    cdqe	       944	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22	CALL_19
0xb8f	          0x4801d0	                            add rax, rdx	       944	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22	CALL_19
0xb92	           0xfb600	                   movzx eax, byte [rax]	       944	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22	CALL_19
0xb95	            0x84c0	                             test al, al	       944	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22	CALL_19
0xb97	            0x740f	                            je 0x4000be8	       944	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22	CALL_19
0xb99	    0x8b0500000000	            mov eax, dword [0x04000bdf] 	       945	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22
0xb9f	          0x83c001	                              add eax, 1	       945	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22
0xba2	    0x890500000000	            mov dword [0x04000be8], eax 	       945	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	IF_22
0xba8	      0xe8eb350000	               call sym.check_state_ends	       946	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16	CALL_20
0xbad	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       947	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0xbb0	    0x890500000000	            mov dword [0x04000bf6], eax 	       947	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	IF_16
0xbb6	      0xe96efeffff	                           jmp 0x4000a69	       951	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3	FOR_4	ELSE_10
0xbbb	    0x488b05000000	            mov rax, qword [0x04000c02] 	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0xbc2	        0x4883c001	                              add rax, 1	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0xbc6	    0x488905000000	            mov qword [0x04000c0d], rax 	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0xbcd	    0x488b05000000	            mov rax, qword [0x04000c14] 	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0xbd4	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0xbd8	     0xf8c46feffff	                            jl 0x4000a64	       890	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	FOR_3
0xbde	        0x837d8400	               cmp dword [rbp - 0x7c], 0	       957	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23
0xbe2	     0xf84e3000000	                            je 0x4000d0b	       957	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23
0xbe8	      0xe885f9ffff	            call sym.clear_current_state	       964	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	CALL_21
0xbed	        0x837d8800	               cmp dword [rbp - 0x78], 0	       965	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_24
0xbf1	            0x781f	                            js 0x4000c52	       965	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_24
0xbf3	          0x8b4588	             mov eax, dword [rbp - 0x78]	       966	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_24	CALL_22
0xbf6	            0x89c7	                            mov edi, eax	       966	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_24	CALL_22
0xbf8	      0xe8f23e0000	             call sym.push_current_state	       966	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_24	CALL_22
0xbfd	          0x83f801	                              cmp eax, 1	       966	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_24	CALL_22
0xc00	            0x7510	                           jne 0x4000c52	       966	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_24	CALL_22
0xc02	    0x8b0500000000	            mov eax, dword [0x04000c48] 	       967	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	CALL_23
0xc08	          0x83e801	                              sub eax, 1	       967	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	CALL_23
0xc0b	            0x89c7	                            mov edi, eax	       967	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	CALL_23
0xc0d	      0xe8b4380000	                 call sym.update_si_attr	       967	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	CALL_23
0xc12	          0x8b4584	             mov eax, dword [rbp - 0x7c]	       975	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0xc15	          0x83e010	                           and eax, 0x10	       975	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0xc18	            0x85c0	                           test eax, eax	       975	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0xc1a	     0xf849b000000	                            je 0x4000cfb	       975	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0xc20	    0x8b0500000000	            mov eax, dword [0x04000c66] 	       977	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0xc26	            0x85c0	                           test eax, eax	       977	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0xc28	            0x745f	                            je 0x4000cc9	       977	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0xc2a	    0x488b0d000000	            mov rcx, qword [0x04000c71] 	       979	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_24
0xc31	    0x8b0500000000	            mov eax, dword [0x04000c77] 	       979	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_24
0xc37	          0x4863d0	                         movsxd rdx, eax	       979	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_24
0xc3a	          0x4889d0	                            mov rax, rdx	       979	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_24
0xc3d	        0x48c1e003	                              shl rax, 3	       979	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_24
0xc41	          0x4801d0	                            add rax, rdx	       979	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_24
0xc44	        0x48c1e004	                              shl rax, 4	       979	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_24
0xc48	    0x482d90000000	                           sub rax, 0x90	       979	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_24
0xc4e	          0x4801c8	                            add rax, rcx	       979	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_24
0xc51	        0x488945d0	             mov qword [rbp - 0x30], rax	       979	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_24
0xc55	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       980	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0xc59	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       980	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0xc5d	        0x48895028	             mov qword [rax + 0x28], rdx	       980	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0xc61	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       981	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0xc65	          0x8b558c	             mov edx, dword [rbp - 0x74]	       981	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0xc68	          0x895030	             mov dword [rax + 0x30], edx	       981	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26
0xc6b	    0x8b0d00000000	            mov ecx, dword [0x04000cb1] 	       982	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_25
0xc71	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       982	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_25
0xc75	      0xba01000000	                              mov edx, 1	       982	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_25
0xc7a	            0x89ce	                            mov esi, ecx	       982	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_25
0xc7c	          0x4889c7	                            mov rdi, rax	       982	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_25
0xc7f	      0xe8b73c0000	                  call sym.update_si_end	       982	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_25
0xc84	      0xe8b83a0000	                  call sym.check_keepend	       983	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	IF_26	CALL_26
0xc89	          0x8b45f8	                mov eax, dword [rbp - 8]	       985	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0xc8c	    0x890500000000	            mov dword [0x04000cd2], eax 	       985	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0xc92	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       986	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0xc96	    0x488905000000	            mov qword [0x04000cdd], rax 	       986	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0xc9d	      0xbf00000000	                              mov edi, 0	       987	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	CALL_27
0xca2	      0xe8d51a0000	                call sym.syn_finish_line	       987	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25	CALL_27
0xca7	    0x488b05000000	            mov rax, qword [0x04000cee] 	       988	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0xcae	        0x4883c001	                              add rax, 1	       988	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0xcb2	    0x488905000000	            mov qword [0x04000cf9], rax 	       988	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	IF_25
0xcb9	            0xeb30	                           jmp 0x4000d2b	       993	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23
0xcbb	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       991	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	ELSE_11
0xcc2	    0x488905000000	            mov qword [0x04000d09], rax 	       991	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23	ELSE_11
0xcc9	            0xeb20	                           jmp 0x4000d2b	       993	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	ELSE_10	IF_23
0xccb	        0x488b4598	             mov rax, qword [rbp - 0x68]	       996	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1
0xccf	        0x488945a0	             mov qword [rbp - 0x60], rax	       996	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1
0xcd3	      0xe8ce190000	       call sym.invalidate_current_state	       997	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1	CALL_28
0xcd8	      0x48836d9801	               sub qword [rbp - 0x68], 1	       861	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1
0xcdd	        0x488b4598	             mov rax, qword [rbp - 0x68]	       861	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1
0xce1	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       861	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1
0xce5	     0xf8faefcffff	                            jg 0x40009d9	       861	syntax.c	FUNCTION_5	ELSE_5	IF_11	ELSE_6	WHILE_1
0xceb	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1001	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_27
0xcef	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      1001	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_27
0xcf3	            0x7f14	                            jg 0x4000d49	      1001	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_27
0xcf5	      0xe8ac190000	       call sym.invalidate_current_state	      1003	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_27	CALL_29
0xcfa	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1004	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_27
0xcfe	        0x4883c001	                              add rax, 1	      1004	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_27
0xd02	    0x488905000000	            mov qword [0x04000d49], rax 	      1004	syntax.c	FUNCTION_5	ELSE_5	IF_11	IF_27
0xd09	      0xe8c3190000	         call sym.validate_current_state	      1008	syntax.c	FUNCTION_5	CALL_30
0xd0e	              0x90	                                     nop	      1009	syntax.c	FUNCTION_5
0xd0f	              0xc9	                                   leave	      1009	syntax.c	FUNCTION_5
0xd10	              0xc3	                                     ret	      1009	syntax.c	FUNCTION_5
hl_do_font	FOR,0:DO,0:IF,10:SWITCH,0:functions,0:ELSE,1:WHILE,0:CALL,19	63
0x10e34	              0x55	                                push rbp	      8632	syntax.c	FUNCTION_129
0x10e35	          0x4889e5	                            mov rbp, rsp	      8632	syntax.c	FUNCTION_129
0x10e38	              0x53	                                push rbx	      8632	syntax.c	FUNCTION_129
0x10e39	        0x4883ec28	                           sub rsp, 0x28	      8632	syntax.c	FUNCTION_129
0x10e3d	          0x897dec	             mov dword [rbp - 0x14], edi	      8632	syntax.c	FUNCTION_129
0x10e40	        0x488975e0	             mov qword [rbp - 0x20], rsi	      8632	syntax.c	FUNCTION_129
0x10e44	          0x8955e8	             mov dword [rbp - 0x18], edx	      8632	syntax.c	FUNCTION_129
0x10e47	          0x894ddc	             mov dword [rbp - 0x24], ecx	      8632	syntax.c	FUNCTION_129
0x10e4a	        0x448945d8	             mov dword [rbp - 0x28], r8d	      8632	syntax.c	FUNCTION_129
0x10e4e	        0x44894dd4	             mov dword [rbp - 0x2c], r9d	      8632	syntax.c	FUNCTION_129
0x10e52	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      8692	syntax.c	FUNCTION_129	ELSE_1	IF_7
0x10e56	            0x7430	                            je 0x4010ec8	      8692	syntax.c	FUNCTION_129	ELSE_1	IF_7
0x10e58	    0x488b0d000000	            mov rcx, qword [0x04010e9f] 	      8693	syntax.c	FUNCTION_129	ELSE_1	CALL_13
0x10e5f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      8693	syntax.c	FUNCTION_129	ELSE_1	CALL_13
0x10e62	          0x4863d0	                         movsxd rdx, eax	      8693	syntax.c	FUNCTION_129	ELSE_1	CALL_13
0x10e65	          0x4889d0	                            mov rax, rdx	      8693	syntax.c	FUNCTION_129	ELSE_1	CALL_13
0x10e68	        0x48c1e003	                              shl rax, 3	      8693	syntax.c	FUNCTION_129	ELSE_1	CALL_13
0x10e6c	          0x4801d0	                            add rax, rdx	      8693	syntax.c	FUNCTION_129	ELSE_1	CALL_13
0x10e6f	          0x4801c0	                            add rax, rax	      8693	syntax.c	FUNCTION_129	ELSE_1	CALL_13
0x10e72	          0x4801d0	                            add rax, rdx	      8693	syntax.c	FUNCTION_129	ELSE_1	CALL_13
0x10e75	        0x48c1e003	                              shl rax, 3	      8693	syntax.c	FUNCTION_129	ELSE_1	CALL_13
0x10e79	          0x4801c8	                            add rax, rcx	      8693	syntax.c	FUNCTION_129	ELSE_1	CALL_13
0x10e7c	        0x488b4058	            mov rax, qword [rax + 0x58] 	      8693	syntax.c	FUNCTION_129	ELSE_1	CALL_13
0x10e80	          0x4889c7	                            mov rdi, rax	      8693	syntax.c	FUNCTION_129	ELSE_1	CALL_13
0x10e83	      0xe800000000	                          call 0x4010ec8	      8693	syntax.c	FUNCTION_129	ELSE_1	CALL_13
0x10e88	    0x488b0d000000	            mov rcx, qword [0x04010ecf] 	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_15
0x10e8f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_15
0x10e92	          0x4863d0	                         movsxd rdx, eax	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_15
0x10e95	          0x4889d0	                            mov rax, rdx	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_15
0x10e98	        0x48c1e003	                              shl rax, 3	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_15
0x10e9c	          0x4801d0	                            add rax, rdx	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_15
0x10e9f	          0x4801c0	                            add rax, rax	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_15
0x10ea2	          0x4801d0	                            add rax, rdx	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_15
0x10ea5	        0x48c1e003	                              shl rax, 3	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_15
0x10ea9	        0x488d1c01	                    lea rbx, [rcx + rax]	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_15
0x10ead	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_15
0x10eb1	          0x4889c7	                            mov rdi, rax	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_15
0x10eb4	      0xe840ffffff	               call sym.font_name2handle	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_15
0x10eb9	        0x48894358	             mov qword [rbx + 0x58], rax	      8694	syntax.c	FUNCTION_129	ELSE_1	CALL_15
0x10ebd	    0x488b0d000000	            mov rcx, qword [0x04010f04] 	      8697	syntax.c	FUNCTION_129	ELSE_1	IF_8	CALL_16
0x10ec4	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      8697	syntax.c	FUNCTION_129	ELSE_1	IF_8	CALL_16
0x10ec7	          0x4863d0	                         movsxd rdx, eax	      8697	syntax.c	FUNCTION_129	ELSE_1	IF_8	CALL_16
0x10eca	          0x4889d0	                            mov rax, rdx	      8697	syntax.c	FUNCTION_129	ELSE_1	IF_8	CALL_16
0x10ecd	        0x48c1e003	                              shl rax, 3	      8697	syntax.c	FUNCTION_129	ELSE_1	IF_8	CALL_16
0x10ed1	          0x4801d0	                            add rax, rdx	      8697	syntax.c	FUNCTION_129	ELSE_1	IF_8	CALL_16
0x10ed4	          0x4801c0	                            add rax, rax	      8697	syntax.c	FUNCTION_129	ELSE_1	IF_8	CALL_16
0x10ed7	          0x4801d0	                            add rax, rdx	      8697	syntax.c	FUNCTION_129	ELSE_1	IF_8	CALL_16
0x10eda	        0x48c1e003	                              shl rax, 3	      8697	syntax.c	FUNCTION_129	ELSE_1	IF_8	CALL_16
0x10ede	          0x4801c8	                            add rax, rcx	      8697	syntax.c	FUNCTION_129	ELSE_1	IF_8	CALL_16
0x10ee1	        0x488b4058	            mov rax, qword [rax + 0x58] 	      8697	syntax.c	FUNCTION_129	ELSE_1	IF_8	CALL_16
0x10ee5	          0x4885c0	                           test rax, rax	      8697	syntax.c	FUNCTION_129	ELSE_1	IF_8	CALL_16
0x10ee8	            0x7417	                            je 0x4010f41	      8697	syntax.c	FUNCTION_129	ELSE_1	IF_8	CALL_16
0x10eea	        0x837de800	               cmp dword [rbp - 0x18], 0	      8699	syntax.c	FUNCTION_129	ELSE_1	IF_8	IF_9
0x10eee	            0x7411	                            je 0x4010f41	      8699	syntax.c	FUNCTION_129	ELSE_1	IF_8	IF_9
0x10ef0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8700	syntax.c	FUNCTION_129	ELSE_1	IF_8	CALL_17
0x10ef4	      0xbe00000000	                              mov esi, 0	      8700	syntax.c	FUNCTION_129	ELSE_1	IF_8	CALL_17
0x10ef9	          0x4889c7	                            mov rdi, rax	      8700	syntax.c	FUNCTION_129	ELSE_1	IF_8	CALL_17
0x10efc	      0xe800000000	                          call 0x4010f41	      8700	syntax.c	FUNCTION_129	ELSE_1	IF_8	CALL_17
0x10f01	              0x90	                                     nop	      8712	syntax.c	FUNCTION_129
0x10f02	        0x4883c428	                           add rsp, 0x28	      8712	syntax.c	FUNCTION_129
0x10f06	              0x5b	                                 pop rbx	      8712	syntax.c	FUNCTION_129
0x10f07	              0x5d	                                 pop rbp	      8712	syntax.c	FUNCTION_129
0x10f08	              0xc3	                                     ret	      8712	syntax.c	FUNCTION_129
syn_match_msg	FOR,0:DO,0:IF,1:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,5	23
0x7321	              0x55	                                push rbp	      4049	syntax.c	FUNCTION_65
0x7322	          0x4889e5	                            mov rbp, rsp	      4049	syntax.c	FUNCTION_65
0x7325	    0x488b05000000	            mov rax, qword [0x0400736c] 	      4050	syntax.c	FUNCTION_65	IF_1
0x732c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4050	syntax.c	FUNCTION_65	IF_1
0x7330	    0x488b80b80200	           mov rax, qword [rax + 0x2b8] 	      4050	syntax.c	FUNCTION_65	IF_1
0x7337	          0x4885c0	                           test rax, rax	      4050	syntax.c	FUNCTION_65	IF_1
0x733a	            0x7e3e	                           jle 0x40073ba	      4050	syntax.c	FUNCTION_65	IF_1
0x733c	      0xbf00000000	                              mov edi, 0	      4052	syntax.c	FUNCTION_65	IF_1	CALL_2
0x7341	      0xe800000000	                          call 0x4007386	      4052	syntax.c	FUNCTION_65	IF_1	CALL_2
0x7346	          0x4889c7	                            mov rdi, rax	      4052	syntax.c	FUNCTION_65	IF_1	CALL_2
0x7349	      0xe800000000	                          call 0x400738e	      4052	syntax.c	FUNCTION_65	IF_1	CALL_2
0x734e	    0x488b05000000	            mov rax, qword [0x04007395] 	      4053	syntax.c	FUNCTION_65	IF_1	CALL_3
0x7355	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4053	syntax.c	FUNCTION_65	IF_1	CALL_3
0x7359	    0x488b80b80200	           mov rax, qword [rax + 0x2b8] 	      4053	syntax.c	FUNCTION_65	IF_1	CALL_3
0x7360	          0x4889c7	                            mov rdi, rax	      4053	syntax.c	FUNCTION_65	IF_1	CALL_3
0x7363	      0xe800000000	                          call 0x40073a8	      4053	syntax.c	FUNCTION_65	IF_1	CALL_3
0x7368	      0xbf00000000	                              mov edi, 0	      4054	syntax.c	FUNCTION_65	IF_1	CALL_5
0x736d	      0xe800000000	                          call 0x40073b2	      4054	syntax.c	FUNCTION_65	IF_1	CALL_5
0x7372	          0x4889c7	                            mov rdi, rax	      4054	syntax.c	FUNCTION_65	IF_1	CALL_5
0x7375	      0xe800000000	                          call 0x40073ba	      4054	syntax.c	FUNCTION_65	IF_1	CALL_5
0x737a	              0x90	                                     nop	      4056	syntax.c	FUNCTION_65
0x737b	              0x5d	                                 pop rbp	      4056	syntax.c	FUNCTION_65
0x737c	              0xc3	                                     ret	      4056	syntax.c	FUNCTION_65
find_endpos	FOR,4:DO,0:IF,22:SWITCH,0:functions,0:ELSE,5:WHILE,0:CALL,20	405
0x4bfe	              0x55	                                push rbp	      2944	syntax.c	FUNCTION_37
0x4bff	          0x4889e5	                            mov rbp, rsp	      2944	syntax.c	FUNCTION_37
0x4c02	    0x4881ec600300	                          sub rsp, 0x360	      2944	syntax.c	FUNCTION_37
0x4c09	    0x89bddcfcffff	            mov dword [rbp - 0x324], edi	      2944	syntax.c	FUNCTION_37
0x4c0f	    0x4889b5d0fcff	            mov qword [rbp - 0x330], rsi	      2944	syntax.c	FUNCTION_37
0x4c16	    0x488995c8fcff	            mov qword [rbp - 0x338], rdx	      2944	syntax.c	FUNCTION_37
0x4c1d	    0x48898dc0fcff	            mov qword [rbp - 0x340], rcx	      2944	syntax.c	FUNCTION_37
0x4c24	    0x4c8985b8fcff	             mov qword [rbp - 0x348], r8	      2944	syntax.c	FUNCTION_37
0x4c2b	    0x4c898db0fcff	             mov qword [rbp - 0x350], r9	      2944	syntax.c	FUNCTION_37
0x4c32	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      2944	syntax.c	FUNCTION_37
0x4c36	    0x488985a8fcff	            mov qword [rbp - 0x358], rax	      2944	syntax.c	FUNCTION_37
0x4c3d	        0x488b4518	            mov rax, qword [rbp + 0x18] 	      2944	syntax.c	FUNCTION_37
0x4c41	    0x488985a0fcff	            mov qword [rbp - 0x360], rax	      2944	syntax.c	FUNCTION_37
0x4c48	    0x64488b042528	                mov rax, qword fs:[0x28]	      2944	syntax.c	FUNCTION_37
0x4c51	        0x488945f8	                mov qword [rbp - 8], rax	      2944	syntax.c	FUNCTION_37
0x4c55	            0x31c0	                            xor eax, eax	      2944	syntax.c	FUNCTION_37
0x4c57	    0xc785ecfcffff	              mov dword [rbp - 0x314], 0	      2953	syntax.c	FUNCTION_37
0x4c61	    0x83bddcfcffff	              cmp dword [rbp - 0x324], 0	      2957	syntax.c	FUNCTION_37	IF_1
0x4c68	     0xf8858070000	                            js 0x4005406	      2957	syntax.c	FUNCTION_37	IF_1
0x4c6e	    0x488b05000000	            mov rax, qword [0x04004cb5] 	      2965	syntax.c	FUNCTION_37	CALL_1
0x4c75	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      2965	syntax.c	FUNCTION_37	CALL_1
0x4c7c	    0x8b85dcfcffff	            mov eax, dword [rbp - 0x324]	      2965	syntax.c	FUNCTION_37	CALL_1
0x4c82	          0x4863d0	                         movsxd rdx, eax	      2965	syntax.c	FUNCTION_37	CALL_1
0x4c85	          0x4889d0	                            mov rax, rdx	      2965	syntax.c	FUNCTION_37	CALL_1
0x4c88	        0x48c1e002	                              shl rax, 2	      2965	syntax.c	FUNCTION_37	CALL_1
0x4c8c	          0x4801d0	                            add rax, rdx	      2965	syntax.c	FUNCTION_37	CALL_1
0x4c8f	        0x48c1e005	                              shl rax, 5	      2965	syntax.c	FUNCTION_37	CALL_1
0x4c93	          0x4801c8	                            add rax, rcx	      2965	syntax.c	FUNCTION_37	CALL_1
0x4c96	    0x48898510fdff	            mov qword [rbp - 0x2f0], rax	      2965	syntax.c	FUNCTION_37	CALL_1
0x4c9d	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	      2966	syntax.c	FUNCTION_37	IF_2
0x4ca4	           0xfb600	                   movzx eax, byte [rax]	      2966	syntax.c	FUNCTION_37	IF_2
0x4ca7	            0x3c02	                               cmp al, 2	      2966	syntax.c	FUNCTION_37	IF_2
0x4ca9	            0x7421	                            je 0x4004d0c	      2966	syntax.c	FUNCTION_37	IF_2
0x4cab	    0x488b8dc0fcff	            mov rcx, qword [rbp - 0x340]	      2968	syntax.c	FUNCTION_37	IF_2
0x4cb2	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	      2968	syntax.c	FUNCTION_37	IF_2
0x4cb9	        0x488b5008	                mov rdx, qword [rax + 8]	      2968	syntax.c	FUNCTION_37	IF_2
0x4cbd	          0x488b00	                    mov rax, qword [rax]	      2968	syntax.c	FUNCTION_37	IF_2
0x4cc0	          0x488901	                    mov qword [rcx], rax	      2968	syntax.c	FUNCTION_37	IF_2
0x4cc3	        0x48895108	                mov qword [rcx + 8], rdx	      2968	syntax.c	FUNCTION_37	IF_2
0x4cc7	      0xe9fb060000	                           jmp 0x4005407	      2969	syntax.c	FUNCTION_37	IF_2
0x4ccc	    0x488b05000000	            mov rax, qword [0x04004d13] 	      2977	syntax.c	FUNCTION_37	FOR_1	CALL_2
0x4cd3	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      2977	syntax.c	FUNCTION_37	FOR_1	CALL_2
0x4cda	    0x8b85dcfcffff	            mov eax, dword [rbp - 0x324]	      2977	syntax.c	FUNCTION_37	FOR_1	CALL_2
0x4ce0	          0x4863d0	                         movsxd rdx, eax	      2977	syntax.c	FUNCTION_37	FOR_1	CALL_2
0x4ce3	          0x4889d0	                            mov rax, rdx	      2977	syntax.c	FUNCTION_37	FOR_1	CALL_2
0x4ce6	        0x48c1e002	                              shl rax, 2	      2977	syntax.c	FUNCTION_37	FOR_1	CALL_2
0x4cea	          0x4801d0	                            add rax, rdx	      2977	syntax.c	FUNCTION_37	FOR_1	CALL_2
0x4ced	        0x48c1e005	                              shl rax, 5	      2977	syntax.c	FUNCTION_37	FOR_1	CALL_2
0x4cf1	          0x4801c8	                            add rax, rcx	      2977	syntax.c	FUNCTION_37	FOR_1	CALL_2
0x4cf4	    0x48898510fdff	            mov qword [rbp - 0x2f0], rax	      2977	syntax.c	FUNCTION_37	FOR_1	CALL_2
0x4cfb	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	      2978	syntax.c	FUNCTION_37	FOR_1	IF_3
0x4d02	           0xfb600	                   movzx eax, byte [rax]	      2978	syntax.c	FUNCTION_37	FOR_1	IF_3
0x4d05	            0x3c02	                               cmp al, 2	      2978	syntax.c	FUNCTION_37	FOR_1	IF_3
0x4d07	            0x7509	                           jne 0x4004d52	      2978	syntax.c	FUNCTION_37	FOR_1	IF_3
0x4d09	    0x8385dcfcffff	              add dword [rbp - 0x324], 1	      2980	syntax.c	FUNCTION_37	FOR_1
0x4d10	            0xebba	                           jmp 0x4004d0c	      2981	syntax.c	FUNCTION_37	FOR_1
0x4d12	              0x90	                                     nop	      2979	syntax.c	FUNCTION_37	FOR_1	IF_3
0x4d13	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	      2986	syntax.c	FUNCTION_37	IF_4
0x4d1a	           0xfb600	                   movzx eax, byte [rax]	      2986	syntax.c	FUNCTION_37	IF_4
0x4d1d	            0x3c04	                               cmp al, 4	      2986	syntax.c	FUNCTION_37	IF_4
0x4d1f	            0x7517	                           jne 0x4004d78	      2986	syntax.c	FUNCTION_37	IF_4
0x4d21	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	      2988	syntax.c	FUNCTION_37	IF_4
0x4d28	    0x48898508fdff	            mov qword [rbp - 0x2f8], rax	      2988	syntax.c	FUNCTION_37	IF_4
0x4d2f	    0x8385dcfcffff	              add dword [rbp - 0x324], 1	      2989	syntax.c	FUNCTION_37	IF_4
0x4d36	            0xeb0b	                           jmp 0x4004d83	      2989	syntax.c	FUNCTION_37	IF_4
0x4d38	    0x48c78508fdff	              mov qword [rbp - 0x2f8], 0	      2992	syntax.c	FUNCTION_37	ELSE_1
0x4d43	    0x488b05000000	            mov rax, qword [0x04004d8a] 	      2995	syntax.c	FUNCTION_37	CALL_3
0x4d4a	          0x4889c7	                            mov rdi, rax	      2995	syntax.c	FUNCTION_37	CALL_3
0x4d4d	      0xe800000000	                          call 0x4004d92	      2995	syntax.c	FUNCTION_37	CALL_3
0x4d52	    0x488b85a0fcff	            mov rax, qword [rbp - 0x360]	      2996	syntax.c	FUNCTION_37	CALL_4
0x4d59	          0x4889c7	                            mov rdi, rax	      2996	syntax.c	FUNCTION_37	CALL_4
0x4d5c	      0xe800000000	                          call 0x4004da1	      2996	syntax.c	FUNCTION_37	CALL_4
0x4d61	    0x488905000000	            mov qword [0x04004da8], rax 	      2996	syntax.c	FUNCTION_37	CALL_4
0x4d68	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	      2998	syntax.c	FUNCTION_37
0x4d6f	          0x8b4008	                mov eax, dword [rax + 8]	      2998	syntax.c	FUNCTION_37
0x4d72	    0x8985e4fcffff	            mov dword [rbp - 0x31c], eax	      2998	syntax.c	FUNCTION_37
0x4d78	    0x8b85dcfcffff	            mov eax, dword [rbp - 0x324]	      2999	syntax.c	FUNCTION_37
0x4d7e	    0x8985f8fcffff	            mov dword [rbp - 0x308], eax	      2999	syntax.c	FUNCTION_37
0x4d84	    0xc78590feffff	              mov dword [rbp - 0x170], 0	      3000	syntax.c	FUNCTION_37
0x4d8e	        0x488d45d0	                   lea rax, [rbp - 0x30]	      3003	syntax.c	FUNCTION_37	CALL_5
0x4d92	          0x4889c7	                            mov rdi, rax	      3003	syntax.c	FUNCTION_37	CALL_5
0x4d95	      0xe877bfffff	                   call sym.save_chartab	      3003	syntax.c	FUNCTION_37	CALL_5
0x4d9a	    0xc785e8fcffff	    mov dword [rbp - 0x318], 0xffffffff 	      3010	syntax.c	FUNCTION_37	FOR_2
0x4da4	    0x8b85f8fcffff	            mov eax, dword [rbp - 0x308]	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4daa	    0x8985dcfcffff	            mov dword [rbp - 0x324], eax	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4db0	      0xe941010000	                           jmp 0x4004f36	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4db5	    0x8b85e4fcffff	            mov eax, dword [rbp - 0x31c]	      3013	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4dbb	    0x8985f0fcffff	            mov dword [rbp - 0x310], eax	      3013	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4dc1	    0x488b05000000	            mov rax, qword [0x04004e08] 	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_6
0x4dc8	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_6
0x4dcf	    0x8b85dcfcffff	            mov eax, dword [rbp - 0x324]	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_6
0x4dd5	          0x4863d0	                         movsxd rdx, eax	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_6
0x4dd8	          0x4889d0	                            mov rax, rdx	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_6
0x4ddb	        0x48c1e002	                              shl rax, 2	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_6
0x4ddf	          0x4801d0	                            add rax, rdx	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_6
0x4de2	        0x48c1e005	                              shl rax, 5	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_6
0x4de6	          0x4801c8	                            add rax, rcx	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_6
0x4de9	    0x48898510fdff	            mov qword [rbp - 0x2f0], rax	      3016	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_6
0x4df0	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	      3017	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x4df7	           0xfb600	                   movzx eax, byte [rax]	      3017	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x4dfa	            0x3c03	                               cmp al, 3	      3017	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x4dfc	     0xf850f010000	                           jne 0x4004f51	      3017	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x4e02	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	      3019	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4e09	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3019	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4e0c	    0x2985f0fcffff	            sub dword [rbp - 0x310], eax	      3019	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4e12	    0x83bdf0fcffff	              cmp dword [rbp - 0x310], 0	      3020	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_6
0x4e19	            0x790a	                           jns 0x4004e65	      3020	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_6
0x4e1b	    0xc785f0fcffff	              mov dword [rbp - 0x310], 0	      3021	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_6
0x4e25	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	      3023	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4e2c	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      3023	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4e2f	    0x898578feffff	            mov dword [rbp - 0x188], eax	      3023	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4e35	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	      3024	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4e3c	        0x488b4068	            mov rax, qword [rax + 0x68] 	      3024	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4e40	    0x48898530fdff	            mov qword [rbp - 0x2d0], rax	      3024	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4e47	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	      3025	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_7
0x4e4e	        0x488d4870	                   lea rcx, [rax + 0x70]	      3025	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_7
0x4e52	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	      3025	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_7
0x4e59	          0x488b30	                    mov rsi, qword [rax]	      3025	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_7
0x4e5c	    0x8b95f0fcffff	            mov edx, dword [rbp - 0x310]	      3025	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_7
0x4e62	    0x488d8530fdff	                  lea rax, [rbp - 0x2d0]	      3025	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_7
0x4e69	          0x4889c7	                            mov rdi, rax	      3025	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_7
0x4e6c	      0xe8e0090000	                    call sym.syn_regexec	      3025	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_7
0x4e71	    0x8985fcfcffff	            mov dword [rbp - 0x304], eax	      3025	syntax.c	FUNCTION_37	FOR_2	FOR_3	CALL_7
0x4e77	    0x488b9530fdff	            mov rdx, qword [rbp - 0x2d0]	      3027	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4e7e	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	      3027	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4e85	        0x48895068	             mov qword [rax + 0x68], rdx	      3027	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4e89	    0x83bdfcfcffff	              cmp dword [rbp - 0x304], 0	      3028	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7
0x4e90	            0x745d	                            je 0x4004f2f	      3028	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7
0x4e92	    0x83bde8fcffff	cmp dword [rbp - 0x318], 0xffffffffffffffff	      3030	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4e99	            0x7410	                            je 0x4004eeb	      3030	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4e9b	    0x8b9540fdffff	            mov edx, dword [rbp - 0x2c0]	      3030	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4ea1	    0x8b8590feffff	            mov eax, dword [rbp - 0x170]	      3031	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4ea7	            0x39c2	                            cmp edx, eax	      3030	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4ea9	            0x7d44	                           jge 0x4004f2f	      3030	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4eab	    0x8b85dcfcffff	            mov eax, dword [rbp - 0x324]	      3033	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4eb1	    0x8985e8fcffff	            mov dword [rbp - 0x318], eax	      3033	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4eb7	    0x488b8538fdff	            mov rax, qword [rbp - 0x2c8]	      3034	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4ebe	    0x488b9540fdff	            mov rdx, qword [rbp - 0x2c0]	      3034	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4ec5	    0x48898588feff	            mov qword [rbp - 0x178], rax	      3034	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4ecc	    0x48899590feff	            mov qword [rbp - 0x170], rdx	      3034	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4ed3	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      3035	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4eda	    0x488b95e0fdff	            mov rdx, qword [rbp - 0x220]	      3035	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4ee1	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      3035	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4ee8	    0x48899530ffff	             mov qword [rbp - 0xd0], rdx	      3035	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_7	IF_8
0x4eef	    0x8385dcfcffff	              add dword [rbp - 0x324], 1	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4ef6	    0x488b05000000	            mov rax, qword [0x04004f3d] 	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4efd	    0x8b8060020000	           mov eax, dword [rax + 0x260] 	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4f03	    0x3b85dcfcffff	            cmp eax, dword [rbp - 0x324]	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4f09	     0xf8fa6feffff	                            jg 0x4004df5	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4f0f	            0xeb01	                           jmp 0x4004f52	      3011	syntax.c	FUNCTION_37	FOR_2	FOR_3
0x4f11	              0x90	                                     nop	      3018	syntax.c	FUNCTION_37	FOR_2	FOR_3	IF_5
0x4f12	    0x83bde8fcffff	cmp dword [rbp - 0x318], 0xffffffffffffffff	      3044	syntax.c	FUNCTION_37	FOR_2	IF_9
0x4f19	     0xf8461040000	                            je 0x40053c0	      3044	syntax.c	FUNCTION_37	FOR_2	IF_9
0x4f1f	    0x4883bd08fdff	              cmp qword [rbp - 0x2f8], 0	      3051	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4f27	     0xf84ae010000	                            je 0x400511b	      3051	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4f2d	    0x488b8508fdff	            mov rax, qword [rbp - 0x2f8]	      3053	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4f34	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3053	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4f37	    0x8b95e4fcffff	            mov edx, dword [rbp - 0x31c]	      3053	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4f3d	            0x29c2	                            sub edx, eax	      3053	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4f3f	            0x89d0	                            mov eax, edx	      3053	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4f41	    0x8985f4fcffff	            mov dword [rbp - 0x30c], eax	      3053	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4f47	    0x83bdf4fcffff	              cmp dword [rbp - 0x30c], 0	      3056	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_11
0x4f4e	            0x790a	                           jns 0x4004f9a	      3056	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_11
0x4f50	    0xc785f4fcffff	              mov dword [rbp - 0x30c], 0	      3057	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_11
0x4f5a	    0x488b8508fdff	            mov rax, qword [rbp - 0x2f8]	      3058	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4f61	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      3058	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4f64	    0x898578feffff	            mov dword [rbp - 0x188], eax	      3058	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4f6a	    0x488b8508fdff	            mov rax, qword [rbp - 0x2f8]	      3059	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4f71	        0x488b4068	            mov rax, qword [rax + 0x68] 	      3059	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4f75	    0x48898530fdff	            mov qword [rbp - 0x2d0], rax	      3059	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4f7c	    0x488b8508fdff	            mov rax, qword [rbp - 0x2f8]	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_9
0x4f83	        0x488d4870	                   lea rcx, [rax + 0x70]	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_9
0x4f87	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_9
0x4f8e	          0x488b30	                    mov rsi, qword [rax]	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_9
0x4f91	    0x8b95f4fcffff	            mov edx, dword [rbp - 0x30c]	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_9
0x4f97	    0x488d8530fdff	                  lea rax, [rbp - 0x2d0]	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_9
0x4f9e	          0x4889c7	                            mov rdi, rax	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_9
0x4fa1	      0xe8ab080000	                    call sym.syn_regexec	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_9
0x4fa6	    0x898500fdffff	            mov dword [rbp - 0x300], eax	      3060	syntax.c	FUNCTION_37	FOR_2	IF_10	CALL_9
0x4fac	    0x488b9530fdff	            mov rdx, qword [rbp - 0x2d0]	      3062	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4fb3	    0x488b8508fdff	            mov rax, qword [rbp - 0x2f8]	      3062	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4fba	        0x48895068	             mov qword [rax + 0x68], rdx	      3062	syntax.c	FUNCTION_37	FOR_2	IF_10
0x4fbe	    0x83bd00fdffff	              cmp dword [rbp - 0x300], 0	      3063	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12
0x4fc5	     0xf8410010000	                            je 0x400511b	      3063	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12
0x4fcb	    0x8b9540fdffff	            mov edx, dword [rbp - 0x2c0]	      3063	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12
0x4fd1	    0x8b8590feffff	            mov eax, dword [rbp - 0x170]	      3064	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12
0x4fd7	            0x39c2	                            cmp edx, eax	      3063	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12
0x4fd9	     0xf8ffc000000	                            jg 0x400511b	      3063	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12
0x4fdf	    0x488b9508fdff	            mov rdx, qword [rbp - 0x2f8]	      3069	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_11
0x4fe6	    0x488db530fdff	                  lea rsi, [rbp - 0x2d0]	      3069	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_11
0x4fed	    0x488d8520fdff	                  lea rax, [rbp - 0x2e0]	      3069	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_11
0x4ff4	    0x41b801000000	                              mov r8d, 1	      3069	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_11
0x4ffa	      0xb901000000	                              mov ecx, 1	      3069	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_11
0x4fff	          0x4889c7	                            mov rdi, rax	      3069	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_11
0x5002	      0xe88d040000	                call sym.syn_add_end_off	      3069	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_11
0x5007	    0x488b9520fdff	            mov rdx, qword [rbp - 0x2e0]	      3073	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_13
0x500e	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	      3073	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_13
0x5015	          0x488b00	                    mov rax, qword [rax]	      3073	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_13
0x5018	          0x4839c2	                            cmp rdx, rax	      3073	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_13
0x501b	     0xf8f62030000	                            jg 0x40053c3	      3073	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_13
0x5021	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	      3076	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_12
0x5028	          0x488b08	                    mov rcx, qword [rax]	      3076	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_12
0x502b	    0x488b05000000	            mov rax, qword [0x04005072] 	      3076	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_12
0x5032	      0xba00000000	                              mov edx, 0	      3076	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_12
0x5037	          0x4889ce	                            mov rsi, rcx	      3076	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_12
0x503a	          0x4889c7	                            mov rdi, rax	      3076	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_12
0x503d	      0xe800000000	                          call 0x4005082	      3076	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_12
0x5042	    0x48898518fdff	            mov qword [rbp - 0x2e8], rax	      3076	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_12
0x5049	    0x488b8518fdff	            mov rax, qword [rbp - 0x2e8]	      3077	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_13
0x5050	          0x4889c7	                            mov rdi, rax	      3077	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_13
0x5053	      0xe800000000	                          call 0x4005098	      3077	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_13
0x5058	    0x898504fdffff	            mov dword [rbp - 0x2fc], eax	      3077	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	CALL_13
0x505e	    0x8b8528fdffff	            mov eax, dword [rbp - 0x2d8]	      3080	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_14
0x5064	    0x3b85e4fcffff	            cmp eax, dword [rbp - 0x31c]	      3080	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_14
0x506a	            0x7f09	                            jg 0x40050b5	      3080	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_14
0x506c	    0x8385e4fcffff	              add dword [rbp - 0x31c], 1	      3081	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_14
0x5073	            0xeb4f	                           jmp 0x4005104	      3081	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_14
0x5075	    0x8b9528fdffff	            mov edx, dword [rbp - 0x2d8]	      3082	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_2	IF_15
0x507b	    0x8b85e0fdffff	            mov eax, dword [rbp - 0x220]	      3082	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_2	IF_15
0x5081	            0x39c2	                            cmp edx, eax	      3082	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_2	IF_15
0x5083	            0x7f0e	                            jg 0x40050d3	      3082	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_2	IF_15
0x5085	    0x8b8528fdffff	            mov eax, dword [rbp - 0x2d8]	      3083	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_2	IF_15
0x508b	    0x8985e4fcffff	            mov dword [rbp - 0x31c], eax	      3083	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_2	IF_15
0x5091	            0xeb31	                           jmp 0x4005104	      3083	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_2	IF_15
0x5093	    0x8b85e0fdffff	            mov eax, dword [rbp - 0x220]	      3086	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x5099	    0x8985e4fcffff	            mov dword [rbp - 0x31c], eax	      3086	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x509f	            0xeb07	                           jmp 0x40050e8	      3086	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x50a1	    0x8385e4fcffff	              add dword [rbp - 0x31c], 1	      3088	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x50a8	    0x8b85e4fcffff	            mov eax, dword [rbp - 0x31c]	      3086	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x50ae	    0x3b8504fdffff	            cmp eax, dword [rbp - 0x2fc]	      3086	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x50b4	            0x7d0e	                           jge 0x4005104	      3086	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x50b6	    0x8b8528fdffff	            mov eax, dword [rbp - 0x2d8]	      3087	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x50bc	    0x3b85e4fcffff	            cmp eax, dword [rbp - 0x31c]	      3087	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x50c2	            0x7fdd	                            jg 0x40050e1	      3087	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	ELSE_3	FOR_4
0x50c4	    0x8b85e4fcffff	            mov eax, dword [rbp - 0x31c]	      3092	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_16
0x50ca	    0x3b8504fdffff	            cmp eax, dword [rbp - 0x2fc]	      3092	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_16
0x50d0	     0xf8db0020000	                           jge 0x40053c6	      3092	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_16
0x50d6	      0xe9bffcffff	                           jmp 0x4004dda	      3155	syntax.c	FUNCTION_37	FOR_2
0x50db	    0x488b05000000	            mov rax, qword [0x04005122] 	      3103	syntax.c	FUNCTION_37	FOR_2	CALL_14
0x50e2	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      3103	syntax.c	FUNCTION_37	FOR_2	CALL_14
0x50e9	    0x8b85e8fcffff	            mov eax, dword [rbp - 0x318]	      3103	syntax.c	FUNCTION_37	FOR_2	CALL_14
0x50ef	          0x4863d0	                         movsxd rdx, eax	      3103	syntax.c	FUNCTION_37	FOR_2	CALL_14
0x50f2	          0x4889d0	                            mov rax, rdx	      3103	syntax.c	FUNCTION_37	FOR_2	CALL_14
0x50f5	        0x48c1e002	                              shl rax, 2	      3103	syntax.c	FUNCTION_37	FOR_2	CALL_14
0x50f9	          0x4801d0	                            add rax, rdx	      3103	syntax.c	FUNCTION_37	FOR_2	CALL_14
0x50fc	        0x48c1e005	                              shl rax, 5	      3103	syntax.c	FUNCTION_37	FOR_2	CALL_14
0x5100	          0x4801c8	                            add rax, rcx	      3103	syntax.c	FUNCTION_37	FOR_2	CALL_14
0x5103	    0x48898510fdff	            mov qword [rbp - 0x2f0], rax	      3103	syntax.c	FUNCTION_37	FOR_2	CALL_14
0x510a	    0x488b9510fdff	            mov rdx, qword [rbp - 0x2f0]	      3104	syntax.c	FUNCTION_37	FOR_2	CALL_15
0x5111	    0x488db580feff	                  lea rsi, [rbp - 0x180]	      3104	syntax.c	FUNCTION_37	FOR_2	CALL_15
0x5118	    0x488b85c8fcff	            mov rax, qword [rbp - 0x338]	      3104	syntax.c	FUNCTION_37	FOR_2	CALL_15
0x511f	    0x41b801000000	                              mov r8d, 1	      3104	syntax.c	FUNCTION_37	FOR_2	CALL_15
0x5125	      0xb901000000	                              mov ecx, 1	      3104	syntax.c	FUNCTION_37	FOR_2	CALL_15
0x512a	          0x4889c7	                            mov rdi, rax	      3104	syntax.c	FUNCTION_37	FOR_2	CALL_15
0x512d	      0xe862030000	                call sym.syn_add_end_off	      3104	syntax.c	FUNCTION_37	FOR_2	CALL_15
0x5132	    0x488b85c8fcff	            mov rax, qword [rbp - 0x338]	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x5139	          0x488b10	                    mov rdx, qword [rax]	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x513c	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x5143	          0x488b00	                    mov rax, qword [rax]	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x5146	          0x4839c2	                            cmp rdx, rax	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x5149	            0x752c	                           jne 0x40051b7	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x514b	    0x488b85c8fcff	            mov rax, qword [rbp - 0x338]	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x5152	          0x8b5008	                mov edx, dword [rax + 8]	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x5155	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x515c	          0x8b4008	                mov eax, dword [rax + 8]	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x515f	            0x39c2	                            cmp edx, eax	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x5161	            0x7d14	                           jge 0x40051b7	      3106	syntax.c	FUNCTION_37	FOR_2	IF_17
0x5163	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	      3107	syntax.c	FUNCTION_37	FOR_2	IF_17
0x516a	          0x8b5008	                mov edx, dword [rax + 8]	      3107	syntax.c	FUNCTION_37	FOR_2	IF_17
0x516d	    0x488b85c8fcff	            mov rax, qword [rbp - 0x338]	      3107	syntax.c	FUNCTION_37	FOR_2	IF_17
0x5174	          0x895008	                mov dword [rax + 8], edx	      3107	syntax.c	FUNCTION_37	FOR_2	IF_17
0x5177	    0x488b9510fdff	            mov rdx, qword [rbp - 0x2f0]	      3109	syntax.c	FUNCTION_37	FOR_2	CALL_16
0x517e	    0x488db580feff	                  lea rsi, [rbp - 0x180]	      3109	syntax.c	FUNCTION_37	FOR_2	CALL_16
0x5185	    0x488b85b0fcff	            mov rax, qword [rbp - 0x350]	      3109	syntax.c	FUNCTION_37	FOR_2	CALL_16
0x518c	    0x41b801000000	                              mov r8d, 1	      3109	syntax.c	FUNCTION_37	FOR_2	CALL_16
0x5192	      0xb903000000	                              mov ecx, 3	      3109	syntax.c	FUNCTION_37	FOR_2	CALL_16
0x5197	          0x4889c7	                            mov rdi, rax	      3109	syntax.c	FUNCTION_37	FOR_2	CALL_16
0x519a	      0xe8f5020000	                call sym.syn_add_end_off	      3109	syntax.c	FUNCTION_37	FOR_2	CALL_16
0x519f	    0x488b85b0fcff	            mov rax, qword [rbp - 0x350]	      3111	syntax.c	FUNCTION_37	FOR_2	IF_18
0x51a6	          0x488b10	                    mov rdx, qword [rax]	      3111	syntax.c	FUNCTION_37	FOR_2	IF_18
0x51a9	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	      3111	syntax.c	FUNCTION_37	FOR_2	IF_18
0x51b0	          0x488b00	                    mov rax, qword [rax]	      3111	syntax.c	FUNCTION_37	FOR_2	IF_18
0x51b3	          0x4839c2	                            cmp rdx, rax	      3111	syntax.c	FUNCTION_37	FOR_2	IF_18
0x51b6	            0x752c	                           jne 0x4005224	      3111	syntax.c	FUNCTION_37	FOR_2	IF_18
0x51b8	    0x488b85b0fcff	            mov rax, qword [rbp - 0x350]	      3112	syntax.c	FUNCTION_37	FOR_2	IF_18
0x51bf	          0x8b5008	                mov edx, dword [rax + 8]	      3112	syntax.c	FUNCTION_37	FOR_2	IF_18
0x51c2	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	      3112	syntax.c	FUNCTION_37	FOR_2	IF_18
0x51c9	          0x8b4008	                mov eax, dword [rax + 8]	      3112	syntax.c	FUNCTION_37	FOR_2	IF_18
0x51cc	            0x39c2	                            cmp edx, eax	      3112	syntax.c	FUNCTION_37	FOR_2	IF_18
0x51ce	            0x7d14	                           jge 0x4005224	      3112	syntax.c	FUNCTION_37	FOR_2	IF_18
0x51d0	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	      3113	syntax.c	FUNCTION_37	FOR_2	IF_18
0x51d7	          0x8b5008	                mov edx, dword [rax + 8]	      3113	syntax.c	FUNCTION_37	FOR_2	IF_18
0x51da	    0x488b85b0fcff	            mov rax, qword [rbp - 0x350]	      3113	syntax.c	FUNCTION_37	FOR_2	IF_18
0x51e1	          0x895008	                mov dword [rax + 8], edx	      3113	syntax.c	FUNCTION_37	FOR_2	IF_18
0x51e4	    0x488b95c8fcff	            mov rdx, qword [rbp - 0x338]	      3115	syntax.c	FUNCTION_37	FOR_2	CALL_17
0x51eb	    0x488b85b0fcff	            mov rax, qword [rbp - 0x350]	      3115	syntax.c	FUNCTION_37	FOR_2	CALL_17
0x51f2	          0x4889d6	                            mov rsi, rdx	      3115	syntax.c	FUNCTION_37	FOR_2	CALL_17
0x51f5	          0x4889c7	                            mov rdi, rax	      3115	syntax.c	FUNCTION_37	FOR_2	CALL_17
0x51f8	      0xe8e0010000	                      call sym.limit_pos	      3115	syntax.c	FUNCTION_37	FOR_2	CALL_17
0x51fd	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	      3120	syntax.c	FUNCTION_37	FOR_2	IF_19
0x5204	         0xfb75002	               movzx edx, word [rax + 2]	      3120	syntax.c	FUNCTION_37	FOR_2	IF_19
0x5208	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	      3120	syntax.c	FUNCTION_37	FOR_2	IF_19
0x520f	         0xfb74054	           movzx eax, word [rax + 0x54] 	      3120	syntax.c	FUNCTION_37	FOR_2	IF_19
0x5213	          0x6639c2	                              cmp dx, ax	      3120	syntax.c	FUNCTION_37	FOR_2	IF_19
0x5216	     0xf8418010000	                            je 0x4005374	      3120	syntax.c	FUNCTION_37	FOR_2	IF_19
0x521c	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	      3120	syntax.c	FUNCTION_37	FOR_2	IF_19
0x5223	         0xfb74002	               movzx eax, word [rax + 2]	      3120	syntax.c	FUNCTION_37	FOR_2	IF_19
0x5227	          0x6685c0	                             test ax, ax	      3120	syntax.c	FUNCTION_37	FOR_2	IF_19
0x522a	     0xf8404010000	                            je 0x4005374	      3120	syntax.c	FUNCTION_37	FOR_2	IF_19
0x5230	    0x488b85a8fcff	            mov rax, qword [rbp - 0x358]	      3122	syntax.c	FUNCTION_37	FOR_2	IF_19
0x5237	    0x8b95e8fcffff	            mov edx, dword [rbp - 0x318]	      3122	syntax.c	FUNCTION_37	FOR_2	IF_19
0x523d	            0x8910	                    mov dword [rax], edx	      3122	syntax.c	FUNCTION_37	FOR_2	IF_19
0x523f	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	      3123	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x5246	         0xfb74004	               movzx eax, word [rax + 4]	      3123	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x524a	              0x98	                                    cwde	      3123	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x524b	      0x2500100000	                         and eax, 0x1000	      3123	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x5250	            0x85c0	                           test eax, eax	      3123	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x5252	            0x7423	                            je 0x40052b7	      3123	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x5254	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	      3125	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x525b	    0x488b85c0fcff	            mov rax, qword [rbp - 0x340]	      3125	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x5262	          0x488910	                    mov qword [rax], rdx	      3125	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x5265	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	      3126	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x526b	    0x488b85c0fcff	            mov rax, qword [rbp - 0x340]	      3126	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x5272	          0x895008	                mov dword [rax + 8], edx	      3126	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x5275	            0xeb21	                           jmp 0x40052d8	      3126	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_20
0x5277	    0x488b9588feff	            mov rdx, qword [rbp - 0x178]	      3130	syntax.c	FUNCTION_37	FOR_2	IF_19	ELSE_4
0x527e	    0x488b85c0fcff	            mov rax, qword [rbp - 0x340]	      3130	syntax.c	FUNCTION_37	FOR_2	IF_19	ELSE_4
0x5285	          0x488910	                    mov qword [rax], rdx	      3130	syntax.c	FUNCTION_37	FOR_2	IF_19	ELSE_4
0x5288	    0x8b9590feffff	            mov edx, dword [rbp - 0x170]	      3131	syntax.c	FUNCTION_37	FOR_2	IF_19	ELSE_4
0x528e	    0x488b85c0fcff	            mov rax, qword [rbp - 0x340]	      3131	syntax.c	FUNCTION_37	FOR_2	IF_19	ELSE_4
0x5295	          0x895008	                mov dword [rax + 8], edx	      3131	syntax.c	FUNCTION_37	FOR_2	IF_19	ELSE_4
0x5298	    0x488b85c0fcff	            mov rax, qword [rbp - 0x340]	      3133	syntax.c	FUNCTION_37	FOR_2	IF_19
0x529f	          0x8b5008	                mov edx, dword [rax + 8]	      3133	syntax.c	FUNCTION_37	FOR_2	IF_19
0x52a2	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	      3133	syntax.c	FUNCTION_37	FOR_2	IF_19
0x52a9	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      3133	syntax.c	FUNCTION_37	FOR_2	IF_19
0x52ac	             0x1c2	                            add edx, eax	      3133	syntax.c	FUNCTION_37	FOR_2	IF_19
0x52ae	    0x488b85c0fcff	            mov rax, qword [rbp - 0x340]	      3133	syntax.c	FUNCTION_37	FOR_2	IF_19
0x52b5	          0x895008	                mov dword [rax + 8], edx	      3133	syntax.c	FUNCTION_37	FOR_2	IF_19
0x52b8	    0x488b85c0fcff	            mov rax, qword [rbp - 0x340]	      3136	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x52bf	          0x488b10	                    mov rdx, qword [rax]	      3136	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x52c2	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	      3136	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x52c9	          0x488b00	                    mov rax, qword [rax]	      3136	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x52cc	          0x4839c2	                            cmp rdx, rax	      3136	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x52cf	            0x752c	                           jne 0x400533d	      3136	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x52d1	    0x488b85c0fcff	            mov rax, qword [rbp - 0x340]	      3137	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x52d8	          0x8b5008	                mov edx, dword [rax + 8]	      3137	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x52db	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	      3137	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x52e2	          0x8b4008	                mov eax, dword [rax + 8]	      3137	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x52e5	            0x39c2	                            cmp edx, eax	      3137	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x52e7	            0x7d14	                           jge 0x400533d	      3137	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x52e9	    0x488b85d0fcff	            mov rax, qword [rbp - 0x330]	      3138	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x52f0	          0x8b5008	                mov edx, dword [rax + 8]	      3138	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x52f3	    0x488b85c0fcff	            mov rax, qword [rbp - 0x340]	      3138	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x52fa	          0x895008	                mov dword [rax + 8], edx	      3138	syntax.c	FUNCTION_37	FOR_2	IF_19	IF_21
0x52fd	    0x488b95c8fcff	            mov rdx, qword [rbp - 0x338]	      3139	syntax.c	FUNCTION_37	FOR_2	IF_19	CALL_18
0x5304	    0x488b85c0fcff	            mov rax, qword [rbp - 0x340]	      3139	syntax.c	FUNCTION_37	FOR_2	IF_19	CALL_18
0x530b	          0x4889d6	                            mov rsi, rdx	      3139	syntax.c	FUNCTION_37	FOR_2	IF_19	CALL_18
0x530e	          0x4889c7	                            mov rdi, rax	      3139	syntax.c	FUNCTION_37	FOR_2	IF_19	CALL_18
0x5311	      0xe8c7000000	                      call sym.limit_pos	      3139	syntax.c	FUNCTION_37	FOR_2	IF_19	CALL_18
0x5316	    0x488b8dc8fcff	            mov rcx, qword [rbp - 0x338]	      3143	syntax.c	FUNCTION_37	FOR_2	IF_19
0x531d	    0x488b85c0fcff	            mov rax, qword [rbp - 0x340]	      3143	syntax.c	FUNCTION_37	FOR_2	IF_19
0x5324	        0x488b5008	                mov rdx, qword [rax + 8]	      3143	syntax.c	FUNCTION_37	FOR_2	IF_19
0x5328	          0x488b00	                    mov rax, qword [rax]	      3143	syntax.c	FUNCTION_37	FOR_2	IF_19
0x532b	          0x488901	                    mov qword [rcx], rax	      3143	syntax.c	FUNCTION_37	FOR_2	IF_19
0x532e	        0x48895108	                mov qword [rcx + 8], rdx	      3143	syntax.c	FUNCTION_37	FOR_2	IF_19
0x5332	            0xeb29	                           jmp 0x400539d	      3143	syntax.c	FUNCTION_37	FOR_2	IF_19
0x5334	    0x488b85a8fcff	            mov rax, qword [rbp - 0x358]	      3147	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x533b	    0xc70000000000	                      mov dword [rax], 0	      3147	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x5341	    0x488b8dc0fcff	            mov rcx, qword [rbp - 0x340]	      3148	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x5348	    0x488b85b0fcff	            mov rax, qword [rbp - 0x350]	      3148	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x534f	        0x488b5008	                mov rdx, qword [rax + 8]	      3148	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x5353	          0x488b00	                    mov rax, qword [rax]	      3148	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x5356	          0x488901	                    mov qword [rcx], rax	      3148	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x5359	        0x48895108	                mov qword [rcx + 8], rdx	      3148	syntax.c	FUNCTION_37	FOR_2	ELSE_5
0x535d	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	      3151	syntax.c	FUNCTION_37	FOR_2
0x5364	          0x8b4024	            mov eax, dword [rax + 0x24] 	      3151	syntax.c	FUNCTION_37	FOR_2
0x5367	          0x4863d0	                         movsxd rdx, eax	      3151	syntax.c	FUNCTION_37	FOR_2
0x536a	    0x488b85b8fcff	            mov rax, qword [rbp - 0x348]	      3151	syntax.c	FUNCTION_37	FOR_2
0x5371	          0x488910	                    mov qword [rax], rdx	      3151	syntax.c	FUNCTION_37	FOR_2
0x5374	    0xc785ecfcffff	              mov dword [rbp - 0x314], 1	      3153	syntax.c	FUNCTION_37	FOR_2
0x537e	            0xeb07	                           jmp 0x40053c7	      3154	syntax.c	FUNCTION_37	FOR_2
0x5380	              0x90	                                     nop	      3045	syntax.c	FUNCTION_37	FOR_2	IF_9
0x5381	            0xeb04	                           jmp 0x40053c7	      3045	syntax.c	FUNCTION_37	FOR_2	IF_9
0x5383	              0x90	                                     nop	      3074	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_13
0x5384	            0xeb01	                           jmp 0x40053c7	      3074	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_13
0x5386	              0x90	                                     nop	      3093	syntax.c	FUNCTION_37	FOR_2	IF_10	IF_12	IF_16
0x5387	    0x83bdecfcffff	              cmp dword [rbp - 0x314], 0	      3158	syntax.c	FUNCTION_37	IF_22
0x538e	            0x750e	                           jne 0x40053de	      3158	syntax.c	FUNCTION_37	IF_22
0x5390	    0x488b85c8fcff	            mov rax, qword [rbp - 0x338]	      3159	syntax.c	FUNCTION_37	IF_22
0x5397	    0x48c700000000	                      mov qword [rax], 0	      3159	syntax.c	FUNCTION_37	IF_22
0x539e	        0x488d45d0	                   lea rax, [rbp - 0x30]	      3161	syntax.c	FUNCTION_37	CALL_19
0x53a2	          0x4889c7	                            mov rdi, rax	      3161	syntax.c	FUNCTION_37	CALL_19
0x53a5	      0xe8e1b9ffff	                call sym.restore_chartab	      3161	syntax.c	FUNCTION_37	CALL_19
0x53aa	    0x488b05000000	            mov rax, qword [0x040053f1] 	      3164	syntax.c	FUNCTION_37	CALL_20
0x53b1	          0x4889c7	                            mov rdi, rax	      3164	syntax.c	FUNCTION_37	CALL_20
0x53b4	      0xe800000000	                          call 0x40053f9	      3164	syntax.c	FUNCTION_37	CALL_20
0x53b9	    0x48c705000000	               mov qword [0x04005404], 0	      3165	syntax.c	FUNCTION_37
0x53c4	            0xeb01	                           jmp 0x4005407	      3165	syntax.c	FUNCTION_37
0x53c6	              0x90	                                     nop	      2958	syntax.c	FUNCTION_37	IF_1
0x53c7	        0x488b45f8	                mov rax, qword [rbp - 8]	      3166	syntax.c	FUNCTION_37
0x53cb	    0x644833042528	                xor rax, qword fs:[0x28]	      3166	syntax.c	FUNCTION_37
0x53d4	            0x7405	                            je 0x400541b	      3166	syntax.c	FUNCTION_37
0x53d6	      0xe800000000	                          call 0x400541b	      3166	syntax.c	FUNCTION_37
0x53db	              0xc9	                                   leave	      3166	syntax.c	FUNCTION_37
0x53dc	              0xc3	                                     ret	      3166	syntax.c	FUNCTION_37
syn_check_cluster	FOR,0:DO,0:IF,2:SWITCH,0:functions,0:ELSE,1:WHILE,0:CALL,4	32
0xaa0c	              0x55	                                push rbp	      5577	syntax.c	FUNCTION_86
0xaa0d	          0x4889e5	                            mov rbp, rsp	      5577	syntax.c	FUNCTION_86
0xaa10	        0x4883ec20	                           sub rsp, 0x20	      5577	syntax.c	FUNCTION_86
0xaa14	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5577	syntax.c	FUNCTION_86
0xaa18	          0x8975e4	             mov dword [rbp - 0x1c], esi	      5577	syntax.c	FUNCTION_86
0xaa1b	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      5581	syntax.c	FUNCTION_86	CALL_1
0xaa1e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5581	syntax.c	FUNCTION_86	CALL_1
0xaa22	            0x89d6	                            mov esi, edx	      5581	syntax.c	FUNCTION_86	CALL_1
0xaa24	          0x4889c7	                            mov rdi, rax	      5581	syntax.c	FUNCTION_86	CALL_1
0xaa27	      0xe800000000	                          call 0x400aa6c	      5581	syntax.c	FUNCTION_86	CALL_1
0xaa2c	        0x488945f8	                mov qword [rbp - 8], rax	      5581	syntax.c	FUNCTION_86	CALL_1
0xaa30	      0x48837df800	                  cmp qword [rbp - 8], 0	      5582	syntax.c	FUNCTION_86	IF_1
0xaa35	            0x7507	                           jne 0x400aa7e	      5582	syntax.c	FUNCTION_86	IF_1
0xaa37	      0xb800000000	                              mov eax, 0	      5583	syntax.c	FUNCTION_86	IF_1
0xaa3c	            0xeb35	                           jmp 0x400aab3	      5583	syntax.c	FUNCTION_86	IF_1
0xaa3e	        0x488b45f8	                mov rax, qword [rbp - 8]	      5585	syntax.c	FUNCTION_86	CALL_2
0xaa42	          0x4889c7	                            mov rdi, rax	      5585	syntax.c	FUNCTION_86	CALL_2
0xaa45	      0xe88cfeffff	                call sym.syn_scl_name2id	      5585	syntax.c	FUNCTION_86	CALL_2
0xaa4a	          0x8945f4	              mov dword [rbp - 0xc], eax	      5585	syntax.c	FUNCTION_86	CALL_2
0xaa4d	        0x837df400	                cmp dword [rbp - 0xc], 0	      5586	syntax.c	FUNCTION_86	IF_2
0xaa51	            0x7511	                           jne 0x400aaa4	      5586	syntax.c	FUNCTION_86	IF_2
0xaa53	        0x488b45f8	                mov rax, qword [rbp - 8]	      5587	syntax.c	FUNCTION_86	CALL_3
0xaa57	          0x4889c7	                            mov rdi, rax	      5587	syntax.c	FUNCTION_86	CALL_3
0xaa5a	      0xe816000000	                call sym.syn_add_cluster	      5587	syntax.c	FUNCTION_86	CALL_3
0xaa5f	          0x8945f4	              mov dword [rbp - 0xc], eax	      5587	syntax.c	FUNCTION_86	CALL_3
0xaa62	            0xeb0c	                           jmp 0x400aab0	      5587	syntax.c	FUNCTION_86	CALL_3
0xaa64	        0x488b45f8	                mov rax, qword [rbp - 8]	      5589	syntax.c	FUNCTION_86	CALL_4
0xaa68	          0x4889c7	                            mov rdi, rax	      5589	syntax.c	FUNCTION_86	CALL_4
0xaa6b	      0xe800000000	                          call 0x400aab0	      5589	syntax.c	FUNCTION_86	CALL_4
0xaa70	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5590	syntax.c	FUNCTION_86
0xaa73	              0xc9	                                   leave	      5591	syntax.c	FUNCTION_86
0xaa74	              0xc3	                                     ret	      5591	syntax.c	FUNCTION_86
syn_id2cterm_bg	FOR,0:DO,0:IF,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,2	35
0x133b8	              0x55	                                push rbp	      9860	syntax.c	FUNCTION_158
0x133b9	          0x4889e5	                            mov rbp, rsp	      9860	syntax.c	FUNCTION_158
0x133bc	        0x4883ec30	                           sub rsp, 0x30	      9860	syntax.c	FUNCTION_158
0x133c0	          0x897dec	             mov dword [rbp - 0x14], edi	      9860	syntax.c	FUNCTION_158
0x133c3	        0x488975e0	             mov qword [rbp - 0x20], rsi	      9860	syntax.c	FUNCTION_158
0x133c7	        0x488955d8	             mov qword [rbp - 0x28], rdx	      9860	syntax.c	FUNCTION_158
0x133cb	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9863	syntax.c	FUNCTION_158	CALL_1
0x133ce	            0x89c7	                            mov edi, eax	      9863	syntax.c	FUNCTION_158	CALL_1
0x133d0	      0xe800000000	                          call 0x4013415	      9863	syntax.c	FUNCTION_158	CALL_1
0x133d5	          0x8945ec	             mov dword [rbp - 0x14], eax	      9863	syntax.c	FUNCTION_158	CALL_1
0x133d8	    0x488b0d000000	            mov rcx, qword [0x0401341f] 	      9864	syntax.c	FUNCTION_158	CALL_2
0x133df	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9864	syntax.c	FUNCTION_158	CALL_2
0x133e2	          0x4863d0	                         movsxd rdx, eax	      9864	syntax.c	FUNCTION_158	CALL_2
0x133e5	          0x4889d0	                            mov rax, rdx	      9864	syntax.c	FUNCTION_158	CALL_2
0x133e8	        0x48c1e003	                              shl rax, 3	      9864	syntax.c	FUNCTION_158	CALL_2
0x133ec	          0x4801d0	                            add rax, rdx	      9864	syntax.c	FUNCTION_158	CALL_2
0x133ef	          0x4801c0	                            add rax, rax	      9864	syntax.c	FUNCTION_158	CALL_2
0x133f2	          0x4801d0	                            add rax, rdx	      9864	syntax.c	FUNCTION_158	CALL_2
0x133f5	        0x48c1e003	                              shl rax, 3	      9864	syntax.c	FUNCTION_158	CALL_2
0x133f9	    0x482d98000000	                           sub rax, 0x98	      9864	syntax.c	FUNCTION_158	CALL_2
0x133ff	          0x4801c8	                            add rax, rcx	      9864	syntax.c	FUNCTION_158	CALL_2
0x13402	        0x488945f8	                mov qword [rbp - 8], rax	      9864	syntax.c	FUNCTION_158	CALL_2
0x13406	        0x488b45f8	                mov rax, qword [rbp - 8]	      9865	syntax.c	FUNCTION_158
0x1340a	          0x8b4034	            mov eax, dword [rax + 0x34] 	      9865	syntax.c	FUNCTION_158
0x1340d	          0x8d50ff	                      lea edx, [rax - 1]	      9865	syntax.c	FUNCTION_158
0x13410	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9865	syntax.c	FUNCTION_158
0x13414	            0x8910	                    mov dword [rax], edx	      9865	syntax.c	FUNCTION_158
0x13416	        0x488b45f8	                mov rax, qword [rbp - 8]	      9866	syntax.c	FUNCTION_158
0x1341a	          0x8b4038	            mov eax, dword [rax + 0x38] 	      9866	syntax.c	FUNCTION_158
0x1341d	          0x8d50ff	                      lea edx, [rax - 1]	      9866	syntax.c	FUNCTION_158
0x13420	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9866	syntax.c	FUNCTION_158
0x13424	            0x8910	                    mov dword [rax], edx	      9866	syntax.c	FUNCTION_158
0x13426	              0x90	                                     nop	      9867	syntax.c	FUNCTION_158
0x13427	              0xc9	                                   leave	      9867	syntax.c	FUNCTION_158
0x13428	              0xc3	                                     ret	      9867	syntax.c	FUNCTION_158
syn_id2attr	FOR,0:DO,0:IF,2:SWITCH,0:functions,0:ELSE,2:WHILE,0:CALL,2	43
0x132b7	              0x55	                                push rbp	      9815	syntax.c	FUNCTION_156
0x132b8	          0x4889e5	                            mov rbp, rsp	      9815	syntax.c	FUNCTION_156
0x132bb	        0x4883ec20	                           sub rsp, 0x20	      9815	syntax.c	FUNCTION_156
0x132bf	          0x897dec	             mov dword [rbp - 0x14], edi	      9815	syntax.c	FUNCTION_156
0x132c2	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9819	syntax.c	FUNCTION_156	CALL_1
0x132c5	            0x89c7	                            mov edi, eax	      9819	syntax.c	FUNCTION_156	CALL_1
0x132c7	      0xe800000000	                          call 0x401330c	      9819	syntax.c	FUNCTION_156	CALL_1
0x132cc	          0x8945ec	             mov dword [rbp - 0x14], eax	      9819	syntax.c	FUNCTION_156	CALL_1
0x132cf	    0x488b0d000000	            mov rcx, qword [0x04013316] 	      9820	syntax.c	FUNCTION_156	CALL_2
0x132d6	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9820	syntax.c	FUNCTION_156	CALL_2
0x132d9	          0x4863d0	                         movsxd rdx, eax	      9820	syntax.c	FUNCTION_156	CALL_2
0x132dc	          0x4889d0	                            mov rax, rdx	      9820	syntax.c	FUNCTION_156	CALL_2
0x132df	        0x48c1e003	                              shl rax, 3	      9820	syntax.c	FUNCTION_156	CALL_2
0x132e3	          0x4801d0	                            add rax, rdx	      9820	syntax.c	FUNCTION_156	CALL_2
0x132e6	          0x4801c0	                            add rax, rax	      9820	syntax.c	FUNCTION_156	CALL_2
0x132e9	          0x4801d0	                            add rax, rdx	      9820	syntax.c	FUNCTION_156	CALL_2
0x132ec	        0x48c1e003	                              shl rax, 3	      9820	syntax.c	FUNCTION_156	CALL_2
0x132f0	    0x482d98000000	                           sub rax, 0x98	      9820	syntax.c	FUNCTION_156	CALL_2
0x132f6	          0x4801c8	                            add rax, rcx	      9820	syntax.c	FUNCTION_156	CALL_2
0x132f9	        0x488945f8	                mov qword [rbp - 8], rax	      9820	syntax.c	FUNCTION_156	CALL_2
0x132fd	    0x8b0500000000	            mov eax, dword [0x04013343] 	      9826	syntax.c	FUNCTION_156	IF_1
0x13303	            0x85c0	                           test eax, eax	      9826	syntax.c	FUNCTION_156	IF_1
0x13305	            0x740c	                            je 0x4013353	      9826	syntax.c	FUNCTION_156	IF_1
0x13307	        0x488b45f8	                mov rax, qword [rbp - 8]	      9827	syntax.c	FUNCTION_156	IF_1
0x1330b	          0x8b4068	            mov eax, dword [rax + 0x68] 	      9827	syntax.c	FUNCTION_156	IF_1
0x1330e	          0x8945f4	              mov dword [rbp - 0xc], eax	      9827	syntax.c	FUNCTION_156	IF_1
0x13311	            0xeb2b	                           jmp 0x401337e	      9827	syntax.c	FUNCTION_156	IF_1
0x13313	    0x8b0500000000	            mov eax, dword [0x04013359] 	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x13319	          0x83f801	                              cmp eax, 1	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x1331c	            0x7f0a	                            jg 0x4013368	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x1331e	    0x8b0500000000	            mov eax, dword [0x04013364] 	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x13324	            0x85c0	                           test eax, eax	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x13326	            0x740c	                            je 0x4013374	      9830	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x13328	        0x488b45f8	                mov rax, qword [rbp - 8]	      9831	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x1332c	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      9831	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x1332f	          0x8945f4	              mov dword [rbp - 0xc], eax	      9831	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x13332	            0xeb0a	                           jmp 0x401337e	      9831	syntax.c	FUNCTION_156	ELSE_1	IF_2
0x13334	        0x488b45f8	                mov rax, qword [rbp - 8]	      9833	syntax.c	FUNCTION_156	ELSE_2
0x13338	          0x8b4028	            mov eax, dword [rax + 0x28] 	      9833	syntax.c	FUNCTION_156	ELSE_2
0x1333b	          0x8945f4	              mov dword [rbp - 0xc], eax	      9833	syntax.c	FUNCTION_156	ELSE_2
0x1333e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      9835	syntax.c	FUNCTION_156	ELSE_2
0x13341	              0xc9	                                   leave	      9836	syntax.c	FUNCTION_156	ELSE_2
0x13342	              0xc3	                                     ret	      9836	syntax.c	FUNCTION_156	ELSE_2
store_current_state	FOR,3:DO,0:IF,13:SWITCH,0:functions,0:ELSE,6:WHILE,0:CALL,15	305
0x1b11	              0x55	                                push rbp	      1471	syntax.c	FUNCTION_19
0x1b12	          0x4889e5	                            mov rbp, rsp	      1471	syntax.c	FUNCTION_19
0x1b15	              0x53	                                push rbx	      1471	syntax.c	FUNCTION_19
0x1b16	        0x4883ec38	                           sub rsp, 0x38	      1471	syntax.c	FUNCTION_19
0x1b1a	    0x488b05000000	            mov rax, qword [0x04001b61] 	      1476	syntax.c	FUNCTION_19	CALL_1
0x1b21	          0x4889c7	                            mov rdi, rax	      1476	syntax.c	FUNCTION_19	CALL_1
0x1b24	      0xe87fffffff	           call sym.syn_stack_find_entry	      1476	syntax.c	FUNCTION_19	CALL_1
0x1b29	        0x488945e0	             mov qword [rbp - 0x20], rax	      1476	syntax.c	FUNCTION_19	CALL_1
0x1b2d	    0x8b0500000000	            mov eax, dword [0x04001b73] 	      1482	syntax.c	FUNCTION_19	FOR_1
0x1b33	          0x83e801	                              sub eax, 1	      1482	syntax.c	FUNCTION_19	FOR_1
0x1b36	          0x8945cc	             mov dword [rbp - 0x34], eax	      1482	syntax.c	FUNCTION_19	FOR_1
0x1b39	      0xe981000000	                           jmp 0x4001bff	      1482	syntax.c	FUNCTION_19	FOR_1
0x1b3e	    0x488b0d000000	            mov rcx, qword [0x04001b85] 	      1484	syntax.c	FUNCTION_19	FOR_1	CALL_2
0x1b45	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1484	syntax.c	FUNCTION_19	FOR_1	CALL_2
0x1b48	          0x4863d0	                         movsxd rdx, eax	      1484	syntax.c	FUNCTION_19	FOR_1	CALL_2
0x1b4b	          0x4889d0	                            mov rax, rdx	      1484	syntax.c	FUNCTION_19	FOR_1	CALL_2
0x1b4e	        0x48c1e003	                              shl rax, 3	      1484	syntax.c	FUNCTION_19	FOR_1	CALL_2
0x1b52	          0x4801d0	                            add rax, rdx	      1484	syntax.c	FUNCTION_19	FOR_1	CALL_2
0x1b55	        0x48c1e004	                              shl rax, 4	      1484	syntax.c	FUNCTION_19	FOR_1	CALL_2
0x1b59	          0x4801c8	                            add rax, rcx	      1484	syntax.c	FUNCTION_19	FOR_1	CALL_2
0x1b5c	        0x488945e8	             mov qword [rbp - 0x18], rax	      1484	syntax.c	FUNCTION_19	FOR_1	CALL_2
0x1b60	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1485	syntax.c	FUNCTION_19	FOR_1	IF_1
0x1b64	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1485	syntax.c	FUNCTION_19	FOR_1	IF_1
0x1b68	    0x488b05000000	            mov rax, qword [0x04001baf] 	      1485	syntax.c	FUNCTION_19	FOR_1	IF_1
0x1b6f	          0x4839c2	                            cmp rdx, rax	      1485	syntax.c	FUNCTION_19	FOR_1	IF_1
0x1b72	            0x7d55	                           jge 0x4001c09	      1485	syntax.c	FUNCTION_19	FOR_1	IF_1
0x1b74	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1486	syntax.c	FUNCTION_19	FOR_1	IF_1
0x1b78	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1486	syntax.c	FUNCTION_19	FOR_1	IF_1
0x1b7c	    0x488b05000000	            mov rax, qword [0x04001bc3] 	      1486	syntax.c	FUNCTION_19	FOR_1	IF_1
0x1b83	          0x4839c2	                            cmp rdx, rax	      1486	syntax.c	FUNCTION_19	FOR_1	IF_1
0x1b86	            0x7d41	                           jge 0x4001c09	      1486	syntax.c	FUNCTION_19	FOR_1	IF_1
0x1b88	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x1b8c	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x1b90	    0x488b05000000	            mov rax, qword [0x04001bd7] 	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x1b97	          0x4839c2	                            cmp rdx, rax	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x1b9a	            0x7d2d	                           jge 0x4001c09	      1487	syntax.c	FUNCTION_19	FOR_1	IF_1
0x1b9c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1488	syntax.c	FUNCTION_19	FOR_1	IF_1
0x1ba0	          0x8b4058	            mov eax, dword [rax + 0x58] 	      1488	syntax.c	FUNCTION_19	FOR_1	IF_1
0x1ba3	            0x85c0	                           test eax, eax	      1488	syntax.c	FUNCTION_19	FOR_1	IF_1
0x1ba5	            0x7414	                            je 0x4001bfb	      1488	syntax.c	FUNCTION_19	FOR_1	IF_1
0x1ba7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1489	syntax.c	FUNCTION_19	FOR_1	IF_1
0x1bab	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      1489	syntax.c	FUNCTION_19	FOR_1	IF_1
0x1baf	    0x488b05000000	            mov rax, qword [0x04001bf6] 	      1489	syntax.c	FUNCTION_19	FOR_1	IF_1
0x1bb6	          0x4839c2	                            cmp rdx, rax	      1489	syntax.c	FUNCTION_19	FOR_1	IF_1
0x1bb9	            0x7d0e	                           jge 0x4001c09	      1489	syntax.c	FUNCTION_19	FOR_1	IF_1
0x1bbb	        0x836dcc01	               sub dword [rbp - 0x34], 1	      1482	syntax.c	FUNCTION_19	FOR_1
0x1bbf	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      1482	syntax.c	FUNCTION_19	FOR_1
0x1bc3	     0xf8975ffffff	                           jns 0x4001b7e	      1482	syntax.c	FUNCTION_19	FOR_1
0x1bc9	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      1492	syntax.c	FUNCTION_19	IF_2
0x1bcd	     0xf88a4000000	                            js 0x4001cb7	      1492	syntax.c	FUNCTION_19	IF_2
0x1bd3	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1494	syntax.c	FUNCTION_19	IF_2	IF_3
0x1bd8	     0xf84aa010000	                            je 0x4001dc8	      1494	syntax.c	FUNCTION_19	IF_2	IF_3
0x1bde	    0x488b05000000	            mov rax, qword [0x04001c25] 	      1497	syntax.c	FUNCTION_19	IF_2	IF_3	IF_4
0x1be5	    0x488b80200300	           mov rax, qword [rax + 0x320] 	      1497	syntax.c	FUNCTION_19	IF_2	IF_3	IF_4
0x1bec	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      1497	syntax.c	FUNCTION_19	IF_2	IF_3	IF_4
0x1bf0	            0x7517	                           jne 0x4001c49	      1497	syntax.c	FUNCTION_19	IF_2	IF_3	IF_4
0x1bf2	    0x488b05000000	            mov rax, qword [0x04001c39] 	      1499	syntax.c	FUNCTION_19	IF_2	IF_3	IF_4
0x1bf9	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1499	syntax.c	FUNCTION_19	IF_2	IF_3	IF_4
0x1bfd	          0x488b12	                    mov rdx, qword [rdx]	      1499	syntax.c	FUNCTION_19	IF_2	IF_3	IF_4
0x1c00	    0x488990200300	            mov qword [rax + 0x320], rdx	      1499	syntax.c	FUNCTION_19	IF_2	IF_3	IF_4
0x1c07	            0xeb4b	                           jmp 0x4001c94	      1499	syntax.c	FUNCTION_19	IF_2	IF_3	IF_4
0x1c09	    0x488b05000000	            mov rax, qword [0x04001c50] 	      1503	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2
0x1c10	    0x488b80200300	           mov rax, qword [rax + 0x320] 	      1503	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2
0x1c17	        0x488945d0	             mov qword [rbp - 0x30], rax	      1503	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2
0x1c1b	            0xeb18	                           jmp 0x4001c75	      1503	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2
0x1c1d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x1c21	          0x488b00	                    mov rax, qword [rax]	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x1c24	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x1c28	            0x7414	                            je 0x4001c7e	      1504	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x1c2a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1503	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2
0x1c2e	          0x488b00	                    mov rax, qword [rax]	      1503	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2
0x1c31	        0x488945d0	             mov qword [rbp - 0x30], rax	      1503	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2
0x1c35	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      1503	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2
0x1c3a	            0x75e1	                           jne 0x4001c5d	      1503	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2
0x1c3c	            0xeb01	                           jmp 0x4001c7f	      1503	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2
0x1c3e	              0x90	                                     nop	      1505	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	FOR_2	IF_5
0x1c3f	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      1506	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	IF_6
0x1c44	            0x740e	                            je 0x4001c94	      1506	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	IF_6
0x1c46	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1507	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	IF_6
0x1c4a	          0x488b10	                    mov rdx, qword [rax]	      1507	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	IF_6
0x1c4d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1507	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	IF_6
0x1c51	          0x488910	                    mov qword [rax], rdx	      1507	syntax.c	FUNCTION_19	IF_2	IF_3	ELSE_1	IF_6
0x1c54	    0x488b05000000	            mov rax, qword [0x04001c9b] 	      1509	syntax.c	FUNCTION_19	IF_2	IF_3	CALL_3
0x1c5b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1509	syntax.c	FUNCTION_19	IF_2	IF_3	CALL_3
0x1c5f	          0x4889d6	                            mov rsi, rdx	      1509	syntax.c	FUNCTION_19	IF_2	IF_3	CALL_3
0x1c62	          0x4889c7	                            mov rdi, rax	      1509	syntax.c	FUNCTION_19	IF_2	IF_3	CALL_3
0x1c65	      0xe8e7fdffff	           call sym.syn_stack_free_entry	      1509	syntax.c	FUNCTION_19	IF_2	IF_3	CALL_3
0x1c6a	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1510	syntax.c	FUNCTION_19	IF_2	IF_3
0x1c72	      0xe911010000	                           jmp 0x4001dc8	      1510	syntax.c	FUNCTION_19	IF_2	IF_3
0x1c77	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1513	syntax.c	FUNCTION_19	ELSE_2	IF_7
0x1c7c	            0x7418	                            je 0x4001cd6	      1513	syntax.c	FUNCTION_19	ELSE_2	IF_7
0x1c7e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1513	syntax.c	FUNCTION_19	ELSE_2	IF_7
0x1c82	        0x488b5008	                mov rdx, qword [rax + 8]	      1513	syntax.c	FUNCTION_19	ELSE_2	IF_7
0x1c86	    0x488b05000000	            mov rax, qword [0x04001ccd] 	      1513	syntax.c	FUNCTION_19	ELSE_2	IF_7
0x1c8d	          0x4839c2	                            cmp rdx, rax	      1513	syntax.c	FUNCTION_19	ELSE_2	IF_7
0x1c90	     0xf84f2000000	                            je 0x4001dc8	      1513	syntax.c	FUNCTION_19	ELSE_2	IF_7
0x1c96	    0x488b05000000	            mov rax, qword [0x04001cdd] 	      1519	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8
0x1c9d	    0x8b8030030000	           mov eax, dword [rax + 0x330] 	      1519	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8
0x1ca3	            0x85c0	                           test eax, eax	      1519	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8
0x1ca5	            0x7518	                           jne 0x4001cff	      1519	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8
0x1ca7	      0xe889fbffff	              call sym.syn_stack_cleanup	      1521	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8	CALL_4
0x1cac	    0x488b05000000	            mov rax, qword [0x04001cf3] 	      1523	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8	CALL_5
0x1cb3	          0x4889c7	                            mov rdi, rax	      1523	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8	CALL_5
0x1cb6	      0xe8edfdffff	           call sym.syn_stack_find_entry	      1523	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8	CALL_5
0x1cbb	        0x488945e0	             mov qword [rbp - 0x20], rax	      1523	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_8	CALL_5
0x1cbf	    0x488b05000000	            mov rax, qword [0x04001d06] 	      1526	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_9
0x1cc6	    0x8b8030030000	           mov eax, dword [rax + 0x330] 	      1526	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_9
0x1ccc	            0x85c0	                           test eax, eax	      1526	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_9
0x1cce	            0x750d	                           jne 0x4001d1d	      1526	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_9
0x1cd0	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1527	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_9
0x1cd8	      0xe9ab000000	                           jmp 0x4001dc8	      1527	syntax.c	FUNCTION_19	ELSE_2	IF_7	IF_9
0x1cdd	    0x488b05000000	            mov rax, qword [0x04001d24] 	      1532	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x1ce4	    0x488b80280300	           mov rax, qword [rax + 0x328] 	      1532	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x1ceb	        0x488945d0	             mov qword [rbp - 0x30], rax	      1532	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x1cef	    0x488b05000000	            mov rax, qword [0x04001d36] 	      1533	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x1cf6	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1533	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x1cfa	          0x488b12	                    mov rdx, qword [rdx]	      1533	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x1cfd	    0x488990280300	            mov qword [rax + 0x328], rdx	      1533	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x1d04	    0x488b05000000	            mov rax, qword [0x04001d4b] 	      1534	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x1d0b	    0x8b9030030000	           mov edx, dword [rax + 0x330] 	      1534	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x1d11	          0x83ea01	                              sub edx, 1	      1534	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x1d14	    0x899030030000	            mov dword [rax + 0x330], edx	      1534	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x1d1a	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1535	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x1d1f	            0x7529	                           jne 0x4001d8a	      1535	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x1d21	    0x488b05000000	            mov rax, qword [0x04001d68] 	      1538	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x1d28	    0x488b90200300	           mov rdx, qword [rax + 0x320] 	      1538	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x1d2f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1538	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x1d33	          0x488910	                    mov qword [rax], rdx	      1538	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x1d36	    0x488b05000000	            mov rax, qword [0x04001d7d] 	      1539	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x1d3d	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1539	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x1d41	    0x488990200300	            mov qword [rax + 0x320], rdx	      1539	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x1d48	            0xeb19	                           jmp 0x4001da3	      1539	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	IF_10
0x1d4a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1544	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	ELSE_4
0x1d4e	          0x488b10	                    mov rdx, qword [rax]	      1544	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	ELSE_4
0x1d51	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1544	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	ELSE_4
0x1d55	          0x488910	                    mov qword [rax], rdx	      1544	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	ELSE_4
0x1d58	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1545	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	ELSE_4
0x1d5c	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1545	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	ELSE_4
0x1d60	          0x488910	                    mov qword [rax], rdx	      1545	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3	ELSE_4
0x1d63	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1547	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x1d67	        0x488945e0	             mov qword [rbp - 0x20], rax	      1547	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x1d6b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1548	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x1d6f	    0xc780bc000000	               mov dword [rax + 0xbc], 0	      1548	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x1d79	    0x488b15000000	            mov rdx, qword [0x04001dc0] 	      1549	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x1d80	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1549	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x1d84	        0x48895008	                mov qword [rax + 8], rdx	      1549	syntax.c	FUNCTION_19	ELSE_2	IF_7	ELSE_3
0x1d88	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1552	syntax.c	FUNCTION_19	IF_11
0x1d8d	     0xf8450020000	                            je 0x4002023	      1552	syntax.c	FUNCTION_19	IF_11
0x1d93	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1555	syntax.c	FUNCTION_19	IF_11	CALL_6
0x1d97	          0x4889c7	                            mov rdi, rax	      1555	syntax.c	FUNCTION_19	IF_11	CALL_6
0x1d9a	      0xe814e7ffff	                call sym.clear_syn_state	      1555	syntax.c	FUNCTION_19	IF_11	CALL_6
0x1d9f	    0x8b1500000000	            mov edx, dword [0x04001de5] 	      1556	syntax.c	FUNCTION_19	IF_11
0x1da5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1556	syntax.c	FUNCTION_19	IF_11
0x1da9	    0x8990bc000000	             mov dword [rax + 0xbc], edx	      1556	syntax.c	FUNCTION_19	IF_11
0x1daf	    0x8b0500000000	            mov eax, dword [0x04001df5] 	      1557	syntax.c	FUNCTION_19	IF_11	IF_12
0x1db5	          0x83f807	                              cmp eax, 7	      1557	syntax.c	FUNCTION_19	IF_11	IF_12
0x1db8	            0x7e61	                           jle 0x4001e5b	      1557	syntax.c	FUNCTION_19	IF_11	IF_12
0x1dba	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1561	syntax.c	FUNCTION_19	IF_11	IF_12	CALL_7
0x1dbe	        0x4883c010	                           add rax, 0x10	      1561	syntax.c	FUNCTION_19	IF_11	IF_12	CALL_7
0x1dc2	      0xba01000000	                              mov edx, 1	      1561	syntax.c	FUNCTION_19	IF_11	IF_12	CALL_7
0x1dc7	      0xbe18000000	                           mov esi, 0x18	      1561	syntax.c	FUNCTION_19	IF_11	IF_12	CALL_7
0x1dcc	          0x4889c7	                            mov rdi, rax	      1561	syntax.c	FUNCTION_19	IF_11	IF_12	CALL_7
0x1dcf	      0xe800000000	                          call 0x4001e14	      1561	syntax.c	FUNCTION_19	IF_11	IF_12	CALL_7
0x1dd4	    0x8b0500000000	            mov eax, dword [0x04001e1a] 	      1562	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13	CALL_8
0x1dda	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1562	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13	CALL_8
0x1dde	        0x4883c210	                           add rdx, 0x10	      1562	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13	CALL_8
0x1de2	            0x89c6	                            mov esi, eax	      1562	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13	CALL_8
0x1de4	          0x4889d7	                            mov rdi, rdx	      1562	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13	CALL_8
0x1de7	      0xe800000000	                          call 0x4001e2c	      1562	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13	CALL_8
0x1dec	            0x85c0	                           test eax, eax	      1562	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13	CALL_8
0x1dee	            0x7510	                           jne 0x4001e40	      1562	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13	CALL_8
0x1df0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1563	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13
0x1df4	    0xc780bc000000	               mov dword [rax + 0xbc], 0	      1563	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13
0x1dfe	            0xeb0d	                           jmp 0x4001e4d	      1563	syntax.c	FUNCTION_19	IF_11	IF_12	IF_13
0x1e00	    0x8b1500000000	            mov edx, dword [0x04001e46] 	      1565	syntax.c	FUNCTION_19	IF_11	IF_12	ELSE_5
0x1e06	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1565	syntax.c	FUNCTION_19	IF_11	IF_12	ELSE_5
0x1e0a	          0x895010	             mov dword [rax + 0x10], edx	      1565	syntax.c	FUNCTION_19	IF_11	IF_12	ELSE_5
0x1e0d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1566	syntax.c	FUNCTION_19	IF_11	IF_12	CALL_9
0x1e11	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1566	syntax.c	FUNCTION_19	IF_11	IF_12	CALL_9
0x1e15	        0x488945d8	             mov qword [rbp - 0x28], rax	      1566	syntax.c	FUNCTION_19	IF_11	IF_12	CALL_9
0x1e19	            0xeb0c	                           jmp 0x4001e67	      1566	syntax.c	FUNCTION_19	IF_11	IF_12	CALL_9
0x1e1b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1569	syntax.c	FUNCTION_19	IF_11	ELSE_6
0x1e1f	        0x4883c010	                           add rax, 0x10	      1569	syntax.c	FUNCTION_19	IF_11	ELSE_6
0x1e23	        0x488945d8	             mov qword [rbp - 0x28], rax	      1569	syntax.c	FUNCTION_19	IF_11	ELSE_6
0x1e27	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x1e2e	      0xe95a010000	                           jmp 0x4001fcd	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x1e33	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_10
0x1e36	          0x4863d0	                         movsxd rdx, eax	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_10
0x1e39	          0x4889d0	                            mov rax, rdx	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_10
0x1e3c	          0x4801c0	                            add rax, rax	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_10
0x1e3f	          0x4801d0	                            add rax, rdx	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_10
0x1e42	        0x48c1e003	                              shl rax, 3	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_10
0x1e46	          0x4889c2	                            mov rdx, rax	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_10
0x1e49	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_10
0x1e4d	        0x488d0c02	                    lea rcx, [rdx + rax]	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_10
0x1e51	    0x488b35000000	            mov rsi, qword [0x04001e98] 	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_10
0x1e58	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_10
0x1e5b	          0x4863d0	                         movsxd rdx, eax	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_10
0x1e5e	          0x4889d0	                            mov rax, rdx	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_10
0x1e61	        0x48c1e003	                              shl rax, 3	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_10
0x1e65	          0x4801d0	                            add rax, rdx	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_10
0x1e68	        0x48c1e004	                              shl rax, 4	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_10
0x1e6c	          0x4801f0	                            add rax, rsi	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_10
0x1e6f	            0x8b00	                    mov eax, dword [rax]	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_10
0x1e71	            0x8901	                    mov dword [rcx], eax	      1572	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_10
0x1e73	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_11
0x1e76	          0x4863d0	                         movsxd rdx, eax	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_11
0x1e79	          0x4889d0	                            mov rax, rdx	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_11
0x1e7c	          0x4801c0	                            add rax, rax	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_11
0x1e7f	          0x4801d0	                            add rax, rdx	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_11
0x1e82	        0x48c1e003	                              shl rax, 3	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_11
0x1e86	          0x4889c2	                            mov rdx, rax	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_11
0x1e89	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_11
0x1e8d	        0x488d0c02	                    lea rcx, [rdx + rax]	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_11
0x1e91	    0x488b35000000	            mov rsi, qword [0x04001ed8] 	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_11
0x1e98	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_11
0x1e9b	          0x4863d0	                         movsxd rdx, eax	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_11
0x1e9e	          0x4889d0	                            mov rax, rdx	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_11
0x1ea1	        0x48c1e003	                              shl rax, 3	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_11
0x1ea5	          0x4801d0	                            add rax, rdx	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_11
0x1ea8	        0x48c1e004	                              shl rax, 4	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_11
0x1eac	          0x4801f0	                            add rax, rsi	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_11
0x1eaf	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_11
0x1eb3	          0x894104	                mov dword [rcx + 4], eax	      1573	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_11
0x1eb6	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_12
0x1eb9	          0x4863d0	                         movsxd rdx, eax	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_12
0x1ebc	          0x4889d0	                            mov rax, rdx	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_12
0x1ebf	          0x4801c0	                            add rax, rax	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_12
0x1ec2	          0x4801d0	                            add rax, rdx	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_12
0x1ec5	        0x48c1e003	                              shl rax, 3	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_12
0x1ec9	          0x4889c2	                            mov rdx, rax	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_12
0x1ecc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_12
0x1ed0	        0x488d0c02	                    lea rcx, [rdx + rax]	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_12
0x1ed4	    0x488b35000000	            mov rsi, qword [0x04001f1b] 	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_12
0x1edb	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_12
0x1ede	          0x4863d0	                         movsxd rdx, eax	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_12
0x1ee1	          0x4889d0	                            mov rax, rdx	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_12
0x1ee4	        0x48c1e003	                              shl rax, 3	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_12
0x1ee8	          0x4801d0	                            add rax, rdx	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_12
0x1eeb	        0x48c1e004	                              shl rax, 4	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_12
0x1eef	          0x4801f0	                            add rax, rsi	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_12
0x1ef2	          0x8b4070	            mov eax, dword [rax + 0x70] 	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_12
0x1ef5	          0x894108	                mov dword [rcx + 8], eax	      1575	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_12
0x1ef8	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_13
0x1efb	          0x4863d0	                         movsxd rdx, eax	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_13
0x1efe	          0x4889d0	                            mov rax, rdx	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_13
0x1f01	          0x4801c0	                            add rax, rax	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_13
0x1f04	          0x4801d0	                            add rax, rdx	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_13
0x1f07	        0x48c1e003	                              shl rax, 3	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_13
0x1f0b	          0x4889c2	                            mov rdx, rax	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_13
0x1f0e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_13
0x1f12	        0x488d0c02	                    lea rcx, [rdx + rax]	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_13
0x1f16	    0x488b35000000	            mov rsi, qword [0x04001f5d] 	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_13
0x1f1d	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_13
0x1f20	          0x4863d0	                         movsxd rdx, eax	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_13
0x1f23	          0x4889d0	                            mov rax, rdx	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_13
0x1f26	        0x48c1e003	                              shl rax, 3	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_13
0x1f2a	          0x4801d0	                            add rax, rdx	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_13
0x1f2d	        0x48c1e004	                              shl rax, 4	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_13
0x1f31	          0x4801f0	                            add rax, rsi	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_13
0x1f34	          0x8b4074	            mov eax, dword [rax + 0x74] 	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_13
0x1f37	          0x89410c	              mov dword [rcx + 0xc], eax	      1576	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_13
0x1f3a	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_15
0x1f3d	          0x4863d0	                         movsxd rdx, eax	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_15
0x1f40	          0x4889d0	                            mov rax, rdx	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_15
0x1f43	          0x4801c0	                            add rax, rax	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_15
0x1f46	          0x4801d0	                            add rax, rdx	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_15
0x1f49	        0x48c1e003	                              shl rax, 3	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_15
0x1f4d	          0x4889c2	                            mov rdx, rax	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_15
0x1f50	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_15
0x1f54	        0x488d1c02	                    lea rbx, [rdx + rax]	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_15
0x1f58	    0x488b0d000000	            mov rcx, qword [0x04001f9f] 	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_15
0x1f5f	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_15
0x1f62	          0x4863d0	                         movsxd rdx, eax	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_15
0x1f65	          0x4889d0	                            mov rax, rdx	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_15
0x1f68	        0x48c1e003	                              shl rax, 3	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_15
0x1f6c	          0x4801d0	                            add rax, rdx	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_15
0x1f6f	        0x48c1e004	                              shl rax, 4	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_15
0x1f73	          0x4801c8	                            add rax, rcx	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_15
0x1f76	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_15
0x1f7d	          0x4889c7	                            mov rdi, rax	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_15
0x1f80	      0xe800000000	                          call 0x4001fc5	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_15
0x1f85	        0x48894310	             mov qword [rbx + 0x10], rax	      1578	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3	CALL_15
0x1f89	        0x8345cc01	               add dword [rbp - 0x34], 1	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x1f8d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x1f91	    0x8b80bc000000	            mov eax, dword [rax + 0xbc] 	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x1f97	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x1f9a	     0xf8f93feffff	                            jg 0x4001e73	      1570	syntax.c	FUNCTION_19	IF_11	ELSE_6	FOR_3
0x1fa0	    0x8b1500000000	            mov edx, dword [0x04001fe6] 	      1580	syntax.c	FUNCTION_19	IF_11
0x1fa6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1580	syntax.c	FUNCTION_19	IF_11
0x1faa	    0x8990b8000000	             mov dword [rax + 0xb8], edx	      1580	syntax.c	FUNCTION_19	IF_11
0x1fb0	    0x488b15000000	            mov rdx, qword [0x04001ff7] 	      1581	syntax.c	FUNCTION_19	IF_11
0x1fb7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1581	syntax.c	FUNCTION_19	IF_11
0x1fbb	    0x488990c00000	             mov qword [rax + 0xc0], rdx	      1581	syntax.c	FUNCTION_19	IF_11
0x1fc2	     0xfb715000000	           movzx edx, word [0x04002009] 	      1582	syntax.c	FUNCTION_19	IF_11
0x1fc9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1582	syntax.c	FUNCTION_19	IF_11
0x1fcd	    0x668990c80000	               mov word [rax + 0xc8], dx	      1582	syntax.c	FUNCTION_19	IF_11
0x1fd4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1583	syntax.c	FUNCTION_19	IF_11
0x1fd8	    0x48c780d00000	               mov qword [rax + 0xd0], 0	      1583	syntax.c	FUNCTION_19	IF_11
0x1fe3	    0xc70500000000	               mov dword [0x0400202d], 1	      1585	syntax.c	FUNCTION_19
0x1fed	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1586	syntax.c	FUNCTION_19
0x1ff1	        0x4883c438	                           add rsp, 0x38	      1587	syntax.c	FUNCTION_19
0x1ff5	              0x5b	                                 pop rbx	      1587	syntax.c	FUNCTION_19
0x1ff6	              0x5d	                                 pop rbp	      1587	syntax.c	FUNCTION_19
0x1ff7	              0xc3	                                     ret	      1587	syntax.c	FUNCTION_19
syn_regexec	FOR,0:DO,0:IF,6:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,5	100
0x5851	              0x55	                                push rbp	      3318	syntax.c	FUNCTION_43
0x5852	          0x4889e5	                            mov rbp, rsp	      3318	syntax.c	FUNCTION_43
0x5855	        0x4883ec50	                           sub rsp, 0x50	      3318	syntax.c	FUNCTION_43
0x5859	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      3318	syntax.c	FUNCTION_43
0x585d	        0x488975c0	             mov qword [rbp - 0x40], rsi	      3318	syntax.c	FUNCTION_43
0x5861	          0x8955bc	             mov dword [rbp - 0x44], edx	      3318	syntax.c	FUNCTION_43
0x5864	        0x48894db0	             mov qword [rbp - 0x50], rcx	      3318	syntax.c	FUNCTION_43
0x5868	    0x64488b042528	                mov rax, qword fs:[0x28]	      3318	syntax.c	FUNCTION_43
0x5871	        0x488945f8	                mov qword [rbp - 8], rax	      3318	syntax.c	FUNCTION_43
0x5875	            0x31c0	                            xor eax, eax	      3318	syntax.c	FUNCTION_43
0x5877	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      3321	syntax.c	FUNCTION_43
0x587e	    0x8b0500000000	            mov eax, dword [0x040058c4] 	      3326	syntax.c	FUNCTION_43	IF_1
0x5884	            0x85c0	                           test eax, eax	      3326	syntax.c	FUNCTION_43	IF_1
0x5886	            0x740c	                            je 0x40058d4	      3326	syntax.c	FUNCTION_43	IF_1
0x5888	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3327	syntax.c	FUNCTION_43	CALL_1
0x588c	          0x4889c7	                            mov rdi, rax	      3327	syntax.c	FUNCTION_43	CALL_1
0x588f	      0xe800000000	                          call 0x40058d4	      3327	syntax.c	FUNCTION_43	CALL_1
0x5894	    0x488b05000000	            mov rax, qword [0x040058db] 	      3330	syntax.c	FUNCTION_43
0x589b	    0x488b80981500	          mov rax, qword [rax + 0x1598] 	      3330	syntax.c	FUNCTION_43
0x58a2	            0x89c2	                            mov edx, eax	      3330	syntax.c	FUNCTION_43
0x58a4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3330	syntax.c	FUNCTION_43
0x58a8	    0x89904c010000	            mov dword [rax + 0x14c], edx	      3330	syntax.c	FUNCTION_43
0x58ae	    0x4c8b0d000000	              mov r9, qword [0x040058f5]	      3331	syntax.c	FUNCTION_43	CALL_2
0x58b5	    0x488b15000000	            mov rdx, qword [0x040058fc] 	      3331	syntax.c	FUNCTION_43	CALL_2
0x58bc	    0x488b35000000	            mov rsi, qword [0x04005903] 	      3331	syntax.c	FUNCTION_43	CALL_2
0x58c3	        0x448b45bc	             mov r8d, dword [rbp - 0x44]	      3331	syntax.c	FUNCTION_43	CALL_2
0x58c7	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      3331	syntax.c	FUNCTION_43	CALL_2
0x58cb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3331	syntax.c	FUNCTION_43	CALL_2
0x58cf	        0x4883ec08	                              sub rsp, 8	      3331	syntax.c	FUNCTION_43	CALL_2
0x58d3	        0x488d7dd8	                   lea rdi, [rbp - 0x28]	      3331	syntax.c	FUNCTION_43	CALL_2
0x58d7	              0x57	                                push rdi	      3331	syntax.c	FUNCTION_43	CALL_2
0x58d8	          0x4889c7	                            mov rdi, rax	      3331	syntax.c	FUNCTION_43	CALL_2
0x58db	      0xe800000000	                          call 0x4005920	      3331	syntax.c	FUNCTION_43	CALL_2
0x58e0	        0x4883c410	                           add rsp, 0x10	      3331	syntax.c	FUNCTION_43	CALL_2
0x58e4	          0x8945dc	             mov dword [rbp - 0x24], eax	      3331	syntax.c	FUNCTION_43	CALL_2
0x58e7	    0x8b0500000000	            mov eax, dword [0x0400592d] 	      3340	syntax.c	FUNCTION_43	IF_2
0x58ed	            0x85c0	                           test eax, eax	      3340	syntax.c	FUNCTION_43	IF_2
0x58ef	            0x747c	                            je 0x40059ad	      3340	syntax.c	FUNCTION_43	IF_2
0x58f1	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3342	syntax.c	FUNCTION_43	IF_2	CALL_3
0x58f5	          0x4889c7	                            mov rdi, rax	      3342	syntax.c	FUNCTION_43	IF_2	CALL_3
0x58f8	      0xe800000000	                          call 0x400593d	      3342	syntax.c	FUNCTION_43	IF_2	CALL_3
0x58fd	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3343	syntax.c	FUNCTION_43	IF_2	CALL_4
0x5901	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      3343	syntax.c	FUNCTION_43	IF_2	CALL_4
0x5905	          0x4889d6	                            mov rsi, rdx	      3343	syntax.c	FUNCTION_43	IF_2	CALL_4
0x5908	          0x4889c7	                            mov rdi, rax	      3343	syntax.c	FUNCTION_43	IF_2	CALL_4
0x590b	      0xe800000000	                          call 0x4005950	      3343	syntax.c	FUNCTION_43	IF_2	CALL_4
0x5910	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x5914	        0x488d5010	                   lea rdx, [rax + 0x10]	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x5918	        0x488d45e0	                   lea rax, [rbp - 0x20]	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x591c	          0x4889d6	                            mov rsi, rdx	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x591f	          0x4889c7	                            mov rdi, rax	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x5922	      0xe800000000	                          call 0x4005967	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x5927	            0x85c0	                           test eax, eax	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x5929	            0x7914	                           jns 0x400597f	      3344	syntax.c	FUNCTION_43	IF_2	IF_3	CALL_5
0x592b	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	      3345	syntax.c	FUNCTION_43	IF_2	IF_3
0x592f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3345	syntax.c	FUNCTION_43	IF_2	IF_3
0x5933	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3345	syntax.c	FUNCTION_43	IF_2	IF_3
0x5937	        0x48894110	             mov qword [rcx + 0x10], rax	      3345	syntax.c	FUNCTION_43	IF_2	IF_3
0x593b	        0x48895118	             mov qword [rcx + 0x18], rdx	      3345	syntax.c	FUNCTION_43	IF_2	IF_3
0x593f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3346	syntax.c	FUNCTION_43	IF_2
0x5943	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3346	syntax.c	FUNCTION_43	IF_2
0x5947	        0x488d5001	                      lea rdx, [rax + 1]	      3346	syntax.c	FUNCTION_43	IF_2
0x594b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3346	syntax.c	FUNCTION_43	IF_2
0x594f	        0x48895020	             mov qword [rax + 0x20], rdx	      3346	syntax.c	FUNCTION_43	IF_2
0x5953	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3347	syntax.c	FUNCTION_43	IF_2	IF_4
0x5957	            0x7e14	                           jle 0x40059ad	      3347	syntax.c	FUNCTION_43	IF_2	IF_4
0x5959	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3348	syntax.c	FUNCTION_43	IF_2	IF_4
0x595d	        0x488b4028	            mov rax, qword [rax + 0x28] 	      3348	syntax.c	FUNCTION_43	IF_2	IF_4
0x5961	        0x488d5001	                      lea rdx, [rax + 1]	      3348	syntax.c	FUNCTION_43	IF_2	IF_4
0x5965	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3348	syntax.c	FUNCTION_43	IF_2	IF_4
0x5969	        0x48895028	             mov qword [rax + 0x28], rdx	      3348	syntax.c	FUNCTION_43	IF_2	IF_4
0x596d	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      3352	syntax.c	FUNCTION_43	IF_5
0x5970	            0x85c0	                           test eax, eax	      3352	syntax.c	FUNCTION_43	IF_5
0x5972	            0x7415	                            je 0x40059c9	      3352	syntax.c	FUNCTION_43	IF_5
0x5974	    0x488b05000000	            mov rax, qword [0x040059bb] 	      3353	syntax.c	FUNCTION_43	IF_5
0x597b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3353	syntax.c	FUNCTION_43	IF_5
0x597f	    0xc78054020000	              mov dword [rax + 0x254], 1	      3353	syntax.c	FUNCTION_43	IF_5
0x5989	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      3356	syntax.c	FUNCTION_43	IF_6
0x598d	            0x7e3b	                           jle 0x4005a0a	      3356	syntax.c	FUNCTION_43	IF_6
0x598f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3358	syntax.c	FUNCTION_43	IF_6
0x5993	        0x488b5008	                mov rdx, qword [rax + 8]	      3358	syntax.c	FUNCTION_43	IF_6
0x5997	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3358	syntax.c	FUNCTION_43	IF_6
0x599b	          0x4801c2	                            add rdx, rax	      3358	syntax.c	FUNCTION_43	IF_6
0x599e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3358	syntax.c	FUNCTION_43	IF_6
0x59a2	        0x48895008	                mov qword [rax + 8], rdx	      3358	syntax.c	FUNCTION_43	IF_6
0x59a6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3359	syntax.c	FUNCTION_43	IF_6
0x59aa	    0x488b90a80000	            mov rdx, qword [rax + 0xa8] 	      3359	syntax.c	FUNCTION_43	IF_6
0x59b1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      3359	syntax.c	FUNCTION_43	IF_6
0x59b5	          0x4801c2	                            add rdx, rax	      3359	syntax.c	FUNCTION_43	IF_6
0x59b8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3359	syntax.c	FUNCTION_43	IF_6
0x59bc	    0x488990a80000	             mov qword [rax + 0xa8], rdx	      3359	syntax.c	FUNCTION_43	IF_6
0x59c3	      0xb801000000	                              mov eax, 1	      3360	syntax.c	FUNCTION_43	IF_6
0x59c8	            0xeb05	                           jmp 0x4005a0f	      3360	syntax.c	FUNCTION_43	IF_6
0x59ca	      0xb800000000	                              mov eax, 0	      3362	syntax.c	FUNCTION_43
0x59cf	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3363	syntax.c	FUNCTION_43
0x59d3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      3363	syntax.c	FUNCTION_43
0x59dc	            0x7405	                            je 0x4005a23	      3363	syntax.c	FUNCTION_43
0x59de	      0xe800000000	                          call 0x4005a23	      3363	syntax.c	FUNCTION_43
0x59e3	              0xc9	                                   leave	      3363	syntax.c	FUNCTION_43
0x59e4	              0xc3	                                     ret	      3363	syntax.c	FUNCTION_43
syn_cmd_off	FOR,0:DO,0:IF,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,1	12
0x6dfa	              0x55	                                push rbp	      3910	syntax.c	FUNCTION_61
0x6dfb	          0x4889e5	                            mov rbp, rsp	      3910	syntax.c	FUNCTION_61
0x6dfe	        0x4883ec10	                           sub rsp, 0x10	      3910	syntax.c	FUNCTION_61
0x6e02	        0x48897df8	                mov qword [rbp - 8], rdi	      3910	syntax.c	FUNCTION_61
0x6e06	          0x8975f4	              mov dword [rbp - 0xc], esi	      3910	syntax.c	FUNCTION_61
0x6e09	        0x488b45f8	                mov rax, qword [rbp - 8]	      3911	syntax.c	FUNCTION_61	CALL_1
0x6e0d	      0xbe00000000	                              mov esi, 0	      3911	syntax.c	FUNCTION_61	CALL_1
0x6e12	          0x4889c7	                            mov rdi, rax	      3911	syntax.c	FUNCTION_61	CALL_1
0x6e15	      0xe803000000	                  call sym.syn_cmd_onoff	      3911	syntax.c	FUNCTION_61	CALL_1
0x6e1a	              0x90	                                     nop	      3912	syntax.c	FUNCTION_61
0x6e1b	              0xc9	                                   leave	      3912	syntax.c	FUNCTION_61
0x6e1c	              0xc3	                                     ret	      3912	syntax.c	FUNCTION_61
get_attr_entry	FOR,2:DO,0:IF,9:SWITCH,0:functions,0:ELSE,3:WHILE,0:CALL,10	269
0x11078	              0x55	                                push rbp	      8789	syntax.c	FUNCTION_131
0x11079	          0x4889e5	                            mov rbp, rsp	      8789	syntax.c	FUNCTION_131
0x1107c	        0x4883ec20	                           sub rsp, 0x20	      8789	syntax.c	FUNCTION_131
0x11080	        0x48897de8	             mov qword [rbp - 0x18], rdi	      8789	syntax.c	FUNCTION_131
0x11084	        0x488975e0	             mov qword [rbp - 0x20], rsi	      8789	syntax.c	FUNCTION_131
0x11088	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8797	syntax.c	FUNCTION_131
0x1108c	    0xc74008280000	               mov dword [rax + 8], 0x28	      8797	syntax.c	FUNCTION_131
0x11093	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8798	syntax.c	FUNCTION_131
0x11097	    0xc7400c070000	                mov dword [rax + 0xc], 7	      8798	syntax.c	FUNCTION_131
0x1109e	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      8803	syntax.c	FUNCTION_131	FOR_1
0x110a5	      0xe9b5010000	                           jmp 0x401129f	      8803	syntax.c	FUNCTION_131	FOR_1
0x110aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8805	syntax.c	FUNCTION_131	FOR_1
0x110ae	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      8805	syntax.c	FUNCTION_131	FOR_1
0x110b2	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      8805	syntax.c	FUNCTION_131	FOR_1
0x110b5	          0x4863d0	                         movsxd rdx, eax	      8805	syntax.c	FUNCTION_131	FOR_1
0x110b8	          0x4889d0	                            mov rax, rdx	      8805	syntax.c	FUNCTION_131	FOR_1
0x110bb	        0x48c1e002	                              shl rax, 2	      8805	syntax.c	FUNCTION_131	FOR_1
0x110bf	          0x4801d0	                            add rax, rdx	      8805	syntax.c	FUNCTION_131	FOR_1
0x110c2	        0x48c1e003	                              shl rax, 3	      8805	syntax.c	FUNCTION_131	FOR_1
0x110c6	          0x4801c8	                            add rax, rcx	      8805	syntax.c	FUNCTION_131	FOR_1
0x110c9	        0x488945f8	                mov qword [rbp - 8], rax	      8805	syntax.c	FUNCTION_131	FOR_1
0x110cd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x110d1	           0xfb710	                   movzx edx, word [rax]	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x110d4	        0x488b45f8	                mov rax, qword [rbp - 8]	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x110d8	           0xfb700	                   movzx eax, word [rax]	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x110db	          0x6639c2	                              cmp dx, ax	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x110de	     0xf8577010000	                           jne 0x401129b	      8806	syntax.c	FUNCTION_131	FOR_1	IF_1
0x110e4	    0x48817de80000	               cmp qword [rbp - 0x18], 0	      8807	syntax.c	FUNCTION_131	FOR_1	IF_1
0x110ec	            0x7558	                           jne 0x4011186	      8807	syntax.c	FUNCTION_131	FOR_1	IF_1
0x110ee	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8810	syntax.c	FUNCTION_131	FOR_1	IF_1
0x110f2	        0x488b5008	                mov rdx, qword [rax + 8]	      8810	syntax.c	FUNCTION_131	FOR_1	IF_1
0x110f6	        0x488b45f8	                mov rax, qword [rbp - 8]	      8810	syntax.c	FUNCTION_131	FOR_1	IF_1
0x110fa	        0x488b4008	                mov rax, qword [rax + 8]	      8810	syntax.c	FUNCTION_131	FOR_1	IF_1
0x110fe	          0x4839c2	                            cmp rdx, rax	      8810	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11101	            0x7543	                           jne 0x4011186	      8810	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11103	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8811	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11107	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      8811	syntax.c	FUNCTION_131	FOR_1	IF_1
0x1110b	        0x488b45f8	                mov rax, qword [rbp - 8]	      8812	syntax.c	FUNCTION_131	FOR_1	IF_1
0x1110f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8812	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11113	          0x4839c2	                            cmp rdx, rax	      8811	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11116	            0x752e	                           jne 0x4011186	      8811	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11118	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8813	syntax.c	FUNCTION_131	FOR_1	IF_1
0x1111c	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      8813	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11120	        0x488b45f8	                mov rax, qword [rbp - 8]	      8814	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11124	        0x488b4018	            mov rax, qword [rax + 0x18] 	      8814	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11128	          0x4839c2	                            cmp rdx, rax	      8813	syntax.c	FUNCTION_131	FOR_1	IF_1
0x1112b	            0x7519	                           jne 0x4011186	      8813	syntax.c	FUNCTION_131	FOR_1	IF_1
0x1112d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8815	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11131	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      8815	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11135	        0x488b45f8	                mov rax, qword [rbp - 8]	      8815	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11139	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8815	syntax.c	FUNCTION_131	FOR_1	IF_1
0x1113d	          0x4839c2	                            cmp rdx, rax	      8815	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11140	     0xf8408010000	                            je 0x401128e	      8815	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11146	    0x48817de80000	               cmp qword [rbp - 0x18], 0	      8820	syntax.c	FUNCTION_131	FOR_1	IF_1
0x1114e	     0xf859c000000	                           jne 0x4011230	      8820	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11154	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11158	        0x488b4008	                mov rax, qword [rax + 8]	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x1115c	          0x4885c0	                           test rax, rax	      8824	syntax.c	FUNCTION_131	FOR_1	IF_1
0x1115f	           0xf95c2	                                setne dl	      8824	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11162	        0x488b45f8	                mov rax, qword [rbp - 8]	      8824	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11166	        0x488b4008	                mov rax, qword [rax + 8]	      8824	syntax.c	FUNCTION_131	FOR_1	IF_1
0x1116a	          0x4885c0	                           test rax, rax	      8824	syntax.c	FUNCTION_131	FOR_1	IF_1
0x1116d	           0xf94c0	                                 sete al	      8824	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11170	            0x31d0	                            xor eax, edx	      8824	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11172	            0x84c0	                             test al, al	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11174	            0x747a	                            je 0x4011230	      8823	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11176	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8825	syntax.c	FUNCTION_131	FOR_1	IF_1
0x1117a	        0x488b4008	                mov rax, qword [rax + 8]	      8825	syntax.c	FUNCTION_131	FOR_1	IF_1
0x1117e	          0x4885c0	                           test rax, rax	      8825	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11181	            0x741f	                            je 0x40111e2	      8825	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11183	        0x488b45f8	                mov rax, qword [rbp - 8]	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x11187	        0x488b5008	                mov rdx, qword [rax + 8]	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x1118b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x1118f	        0x488b4008	                mov rax, qword [rax + 8]	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x11193	          0x4889d6	                            mov rsi, rdx	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x11196	          0x4889c7	                            mov rdi, rax	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x11199	      0xe800000000	                          call 0x40111de	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x1119e	            0x85c0	                           test eax, eax	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x111a0	            0x754e	                           jne 0x4011230	      8826	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_1
0x111a2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x111a6	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x111aa	          0x4885c0	                           test rax, rax	      8829	syntax.c	FUNCTION_131	FOR_1	IF_1
0x111ad	           0xf95c2	                                setne dl	      8829	syntax.c	FUNCTION_131	FOR_1	IF_1
0x111b0	        0x488b45f8	                mov rax, qword [rbp - 8]	      8829	syntax.c	FUNCTION_131	FOR_1	IF_1
0x111b4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8829	syntax.c	FUNCTION_131	FOR_1	IF_1
0x111b8	          0x4885c0	                           test rax, rax	      8829	syntax.c	FUNCTION_131	FOR_1	IF_1
0x111bb	           0xf94c0	                                 sete al	      8829	syntax.c	FUNCTION_131	FOR_1	IF_1
0x111be	            0x31d0	                            xor eax, edx	      8829	syntax.c	FUNCTION_131	FOR_1	IF_1
0x111c0	            0x84c0	                             test al, al	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x111c2	            0x742c	                            je 0x4011230	      8828	syntax.c	FUNCTION_131	FOR_1	IF_1
0x111c4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8830	syntax.c	FUNCTION_131	FOR_1	IF_1
0x111c8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8830	syntax.c	FUNCTION_131	FOR_1	IF_1
0x111cc	          0x4885c0	                           test rax, rax	      8830	syntax.c	FUNCTION_131	FOR_1	IF_1
0x111cf	            0x747d	                            je 0x401128e	      8830	syntax.c	FUNCTION_131	FOR_1	IF_1
0x111d1	        0x488b45f8	                mov rax, qword [rbp - 8]	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x111d5	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x111d9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x111dd	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x111e1	          0x4889d6	                            mov rsi, rdx	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x111e4	          0x4889c7	                            mov rdi, rax	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x111e7	      0xe800000000	                          call 0x401122c	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x111ec	            0x85c0	                           test eax, eax	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x111ee	            0x745e	                            je 0x401128e	      8831	syntax.c	FUNCTION_131	FOR_1	IF_1	CALL_2
0x111f0	    0x48817de80000	               cmp qword [rbp - 0x18], 0	      8833	syntax.c	FUNCTION_131	FOR_1	IF_1
0x111f8	            0x7561	                           jne 0x401129b	      8833	syntax.c	FUNCTION_131	FOR_1	IF_1
0x111fa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8834	syntax.c	FUNCTION_131	FOR_1	IF_1
0x111fe	         0xfb75008	               movzx edx, word [rax + 8]	      8834	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11202	        0x488b45f8	                mov rax, qword [rbp - 8]	      8835	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11206	         0xfb74008	               movzx eax, word [rax + 8]	      8835	syntax.c	FUNCTION_131	FOR_1	IF_1
0x1120a	          0x6639c2	                              cmp dx, ax	      8834	syntax.c	FUNCTION_131	FOR_1	IF_1
0x1120d	            0x754c	                           jne 0x401129b	      8834	syntax.c	FUNCTION_131	FOR_1	IF_1
0x1120f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8836	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11213	         0xfb7500a	            movzx edx, word [rax + 0xa] 	      8836	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11217	        0x488b45f8	                mov rax, qword [rbp - 8]	      8837	syntax.c	FUNCTION_131	FOR_1	IF_1
0x1121b	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      8837	syntax.c	FUNCTION_131	FOR_1	IF_1
0x1121f	          0x6639c2	                              cmp dx, ax	      8836	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11222	            0x7537	                           jne 0x401129b	      8836	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11224	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8839	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11228	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      8839	syntax.c	FUNCTION_131	FOR_1	IF_1
0x1122c	        0x488b45f8	                mov rax, qword [rbp - 8]	      8840	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11230	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8840	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11234	          0x4839c2	                            cmp rdx, rax	      8839	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11237	            0x7522	                           jne 0x401129b	      8839	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11239	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8841	syntax.c	FUNCTION_131	FOR_1	IF_1
0x1123d	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      8841	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11241	        0x488b45f8	                mov rax, qword [rbp - 8]	      8842	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11245	        0x488b4018	            mov rax, qword [rax + 0x18] 	      8842	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11249	          0x4839c2	                            cmp rdx, rax	      8841	syntax.c	FUNCTION_131	FOR_1	IF_1
0x1124c	            0x750d	                           jne 0x401129b	      8841	syntax.c	FUNCTION_131	FOR_1	IF_1
0x1124e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      8846	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11251	       0x500010000	                          add eax, 0x100	      8846	syntax.c	FUNCTION_131	FOR_1	IF_1
0x11256	      0xe91f020000	                           jmp 0x40114ba	      8846	syntax.c	FUNCTION_131	FOR_1	IF_1
0x1125b	        0x8345f401	                add dword [rbp - 0xc], 1	      8803	syntax.c	FUNCTION_131	FOR_1
0x1125f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8803	syntax.c	FUNCTION_131	FOR_1
0x11263	            0x8b00	                    mov eax, dword [rax]	      8803	syntax.c	FUNCTION_131	FOR_1
0x11265	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      8803	syntax.c	FUNCTION_131	FOR_1
0x11268	     0xf8f3cfeffff	                            jg 0x40110ea	      8803	syntax.c	FUNCTION_131	FOR_1
0x1126e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8849	syntax.c	FUNCTION_131	IF_2
0x11272	            0x8b00	                    mov eax, dword [rax]	      8849	syntax.c	FUNCTION_131	IF_2
0x11274	       0x500010000	                          add eax, 0x100	      8849	syntax.c	FUNCTION_131	IF_2
0x11279	      0x3dffff0000	                         cmp eax, 0xffff	      8849	syntax.c	FUNCTION_131	IF_2
0x1127e	            0x7e6b	                           jle 0x401132b	      8849	syntax.c	FUNCTION_131	IF_2
0x11280	    0x8b0500000000	            mov eax, dword [0x040112c6] 	      8856	syntax.c	FUNCTION_131	IF_2	IF_3
0x11286	            0x85c0	                           test eax, eax	      8856	syntax.c	FUNCTION_131	IF_2	IF_3
0x11288	            0x741c	                            je 0x40112e6	      8856	syntax.c	FUNCTION_131	IF_2	IF_3
0x1128a	      0xbf00000000	                              mov edi, 0	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x1128f	      0xe800000000	                          call 0x40112d4	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x11294	          0x4889c7	                            mov rdi, rax	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x11297	      0xe800000000	                          call 0x40112dc	      8858	syntax.c	FUNCTION_131	IF_2	IF_3	CALL_4
0x1129c	      0xb800000000	                              mov eax, 0	      8859	syntax.c	FUNCTION_131	IF_2	IF_3
0x112a1	      0xe9d4010000	                           jmp 0x40114ba	      8859	syntax.c	FUNCTION_131	IF_2	IF_3
0x112a6	    0xc70500000000	               mov dword [0x040112f0], 1	      8861	syntax.c	FUNCTION_131	IF_2
0x112b0	      0xe800000000	                          call 0x40112f5	      8863	syntax.c	FUNCTION_131	IF_2	CALL_5
0x112b5	    0xc70500000000	           mov dword [0x040112ff], 0x32 	      8865	syntax.c	FUNCTION_131	IF_2
0x112bf	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x112c6	            0xeb0e	                           jmp 0x4011316	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x112c8	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      8868	syntax.c	FUNCTION_131	IF_2	CALL_6
0x112cb	            0x89c7	                            mov edi, eax	      8868	syntax.c	FUNCTION_131	IF_2	CALL_6
0x112cd	      0xe8a8170000	                    call sym.set_hl_attr	      8868	syntax.c	FUNCTION_131	IF_2	CALL_6
0x112d2	        0x8345f401	                add dword [rbp - 0xc], 1	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x112d6	    0x8b0500000000	            mov eax, dword [0x0401131c] 	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x112dc	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x112df	            0x7fe7	                            jg 0x4011308	      8867	syntax.c	FUNCTION_131	IF_2	FOR_2
0x112e1	    0xc70500000000	               mov dword [0x0401132b], 0	      8870	syntax.c	FUNCTION_131	IF_2
0x112eb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x112ef	      0xbe01000000	                              mov esi, 1	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x112f4	          0x4889c7	                            mov rdi, rax	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x112f7	      0xe800000000	                          call 0x401133c	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x112fc	            0x85c0	                           test eax, eax	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x112fe	            0x750a	                           jne 0x401134a	      8876	syntax.c	FUNCTION_131	IF_4	CALL_7
0x11300	      0xb800000000	                              mov eax, 0	      8877	syntax.c	FUNCTION_131	IF_4
0x11305	      0xe970010000	                           jmp 0x40114ba	      8877	syntax.c	FUNCTION_131	IF_4
0x1130a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8879	syntax.c	FUNCTION_131
0x1130e	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      8879	syntax.c	FUNCTION_131
0x11312	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8879	syntax.c	FUNCTION_131
0x11316	            0x8b00	                    mov eax, dword [rax]	      8879	syntax.c	FUNCTION_131
0x11318	          0x4863d0	                         movsxd rdx, eax	      8879	syntax.c	FUNCTION_131
0x1131b	          0x4889d0	                            mov rax, rdx	      8879	syntax.c	FUNCTION_131
0x1131e	        0x48c1e002	                              shl rax, 2	      8879	syntax.c	FUNCTION_131
0x11322	          0x4801d0	                            add rax, rdx	      8879	syntax.c	FUNCTION_131
0x11325	        0x48c1e003	                              shl rax, 3	      8879	syntax.c	FUNCTION_131
0x11329	          0x4801c8	                            add rax, rcx	      8879	syntax.c	FUNCTION_131
0x1132c	        0x488945f8	                mov qword [rbp - 8], rax	      8879	syntax.c	FUNCTION_131
0x11330	        0x488b45f8	                mov rax, qword [rbp - 8]	      8880	syntax.c	FUNCTION_131	CALL_8
0x11334	      0xba28000000	                           mov edx, 0x28	      8880	syntax.c	FUNCTION_131	CALL_8
0x11339	      0xbe00000000	                              mov esi, 0	      8880	syntax.c	FUNCTION_131	CALL_8
0x1133e	          0x4889c7	                            mov rdi, rax	      8880	syntax.c	FUNCTION_131	CALL_8
0x11341	      0xe800000000	                          call 0x4011386	      8880	syntax.c	FUNCTION_131	CALL_8
0x11346	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8881	syntax.c	FUNCTION_131
0x1134a	           0xfb710	                   movzx edx, word [rax]	      8881	syntax.c	FUNCTION_131
0x1134d	        0x488b45f8	                mov rax, qword [rbp - 8]	      8881	syntax.c	FUNCTION_131
0x11351	          0x668910	                      mov word [rax], dx	      8881	syntax.c	FUNCTION_131
0x11354	    0x48817de80000	               cmp qword [rbp - 0x18], 0	      8883	syntax.c	FUNCTION_131	IF_5
0x1135c	            0x7540	                           jne 0x40113de	      8883	syntax.c	FUNCTION_131	IF_5
0x1135e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8885	syntax.c	FUNCTION_131	IF_5
0x11362	        0x488b5008	                mov rdx, qword [rax + 8]	      8885	syntax.c	FUNCTION_131	IF_5
0x11366	        0x488b45f8	                mov rax, qword [rbp - 8]	      8885	syntax.c	FUNCTION_131	IF_5
0x1136a	        0x48895008	                mov qword [rax + 8], rdx	      8885	syntax.c	FUNCTION_131	IF_5
0x1136e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8886	syntax.c	FUNCTION_131	IF_5
0x11372	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      8886	syntax.c	FUNCTION_131	IF_5
0x11376	        0x488b45f8	                mov rax, qword [rbp - 8]	      8886	syntax.c	FUNCTION_131	IF_5
0x1137a	        0x48895010	             mov qword [rax + 0x10], rdx	      8886	syntax.c	FUNCTION_131	IF_5
0x1137e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8887	syntax.c	FUNCTION_131	IF_5
0x11382	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      8887	syntax.c	FUNCTION_131	IF_5
0x11386	        0x488b45f8	                mov rax, qword [rbp - 8]	      8887	syntax.c	FUNCTION_131	IF_5
0x1138a	        0x48895018	             mov qword [rax + 0x18], rdx	      8887	syntax.c	FUNCTION_131	IF_5
0x1138e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8888	syntax.c	FUNCTION_131	IF_5
0x11392	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      8888	syntax.c	FUNCTION_131	IF_5
0x11396	        0x488b45f8	                mov rax, qword [rbp - 8]	      8888	syntax.c	FUNCTION_131	IF_5
0x1139a	        0x48895020	             mov qword [rax + 0x20], rdx	      8888	syntax.c	FUNCTION_131	IF_5
0x1139e	    0x48817de80000	               cmp qword [rbp - 0x18], 0	      8894	syntax.c	FUNCTION_131	IF_6
0x113a6	            0x756e	                           jne 0x4011456	      8894	syntax.c	FUNCTION_131	IF_6
0x113a8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8896	syntax.c	FUNCTION_131	IF_6	IF_7
0x113ac	        0x488b4008	                mov rax, qword [rax + 8]	      8896	syntax.c	FUNCTION_131	IF_6	IF_7
0x113b0	          0x4885c0	                           test rax, rax	      8896	syntax.c	FUNCTION_131	IF_6	IF_7
0x113b3	            0x750e	                           jne 0x4011403	      8896	syntax.c	FUNCTION_131	IF_6	IF_7
0x113b5	        0x488b45f8	                mov rax, qword [rbp - 8]	      8897	syntax.c	FUNCTION_131	IF_6	IF_7
0x113b9	    0x48c740080000	                  mov qword [rax + 8], 0	      8897	syntax.c	FUNCTION_131	IF_6	IF_7
0x113c1	            0xeb1b	                           jmp 0x401141e	      8897	syntax.c	FUNCTION_131	IF_6	IF_7
0x113c3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8899	syntax.c	FUNCTION_131	IF_6	CALL_9
0x113c7	        0x488b4008	                mov rax, qword [rax + 8]	      8899	syntax.c	FUNCTION_131	IF_6	CALL_9
0x113cb	          0x4889c7	                            mov rdi, rax	      8899	syntax.c	FUNCTION_131	IF_6	CALL_9
0x113ce	      0xe800000000	                          call 0x4011413	      8899	syntax.c	FUNCTION_131	IF_6	CALL_9
0x113d3	          0x4889c2	                            mov rdx, rax	      8899	syntax.c	FUNCTION_131	IF_6	CALL_9
0x113d6	        0x488b45f8	                mov rax, qword [rbp - 8]	      8899	syntax.c	FUNCTION_131	IF_6	CALL_9
0x113da	        0x48895008	                mov qword [rax + 8], rdx	      8899	syntax.c	FUNCTION_131	IF_6	CALL_9
0x113de	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8900	syntax.c	FUNCTION_131	IF_6	IF_8
0x113e2	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8900	syntax.c	FUNCTION_131	IF_6	IF_8
0x113e6	          0x4885c0	                           test rax, rax	      8900	syntax.c	FUNCTION_131	IF_6	IF_8
0x113e9	            0x750e	                           jne 0x4011439	      8900	syntax.c	FUNCTION_131	IF_6	IF_8
0x113eb	        0x488b45f8	                mov rax, qword [rbp - 8]	      8901	syntax.c	FUNCTION_131	IF_6	IF_8
0x113ef	    0x48c740100000	               mov qword [rax + 0x10], 0	      8901	syntax.c	FUNCTION_131	IF_6	IF_8
0x113f7	            0xeb67	                           jmp 0x40114a0	      8901	syntax.c	FUNCTION_131	IF_6	IF_8
0x113f9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8903	syntax.c	FUNCTION_131	IF_6	CALL_10
0x113fd	        0x488b4010	            mov rax, qword [rax + 0x10] 	      8903	syntax.c	FUNCTION_131	IF_6	CALL_10
0x11401	          0x4889c7	                            mov rdi, rax	      8903	syntax.c	FUNCTION_131	IF_6	CALL_10
0x11404	      0xe800000000	                          call 0x4011449	      8903	syntax.c	FUNCTION_131	IF_6	CALL_10
0x11409	          0x4889c2	                            mov rdx, rax	      8903	syntax.c	FUNCTION_131	IF_6	CALL_10
0x1140c	        0x488b45f8	                mov rax, qword [rbp - 8]	      8903	syntax.c	FUNCTION_131	IF_6	CALL_10
0x11410	        0x48895010	             mov qword [rax + 0x10], rdx	      8903	syntax.c	FUNCTION_131	IF_6	CALL_10
0x11414	            0xeb4a	                           jmp 0x40114a0	      8903	syntax.c	FUNCTION_131	IF_6	CALL_10
0x11416	    0x48817de80000	               cmp qword [rbp - 0x18], 0	      8905	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x1141e	            0x7540	                           jne 0x40114a0	      8905	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x11420	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8907	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x11424	         0xfb75008	               movzx edx, word [rax + 8]	      8907	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x11428	        0x488b45f8	                mov rax, qword [rbp - 8]	      8907	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x1142c	        0x66895008	                  mov word [rax + 8], dx	      8907	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x11430	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8908	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x11434	         0xfb7500a	            movzx edx, word [rax + 0xa] 	      8908	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x11438	        0x488b45f8	                mov rax, qword [rbp - 8]	      8908	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x1143c	        0x6689500a	                mov word [rax + 0xa], dx	      8908	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x11440	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8910	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x11444	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      8910	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x11448	        0x488b45f8	                mov rax, qword [rbp - 8]	      8910	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x1144c	        0x48895010	             mov qword [rax + 0x10], rdx	      8910	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x11450	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8911	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x11454	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      8911	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x11458	        0x488b45f8	                mov rax, qword [rbp - 8]	      8911	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x1145c	        0x48895018	             mov qword [rax + 0x18], rdx	      8911	syntax.c	FUNCTION_131	ELSE_3	IF_9
0x11460	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8914	syntax.c	FUNCTION_131
0x11464	            0x8b00	                    mov eax, dword [rax]	      8914	syntax.c	FUNCTION_131
0x11466	          0x8d5001	                      lea edx, [rax + 1]	      8914	syntax.c	FUNCTION_131
0x11469	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8914	syntax.c	FUNCTION_131
0x1146d	            0x8910	                    mov dword [rax], edx	      8914	syntax.c	FUNCTION_131
0x1146f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8915	syntax.c	FUNCTION_131
0x11473	            0x8b00	                    mov eax, dword [rax]	      8915	syntax.c	FUNCTION_131
0x11475	       0x5ff000000	                           add eax, 0xff	      8915	syntax.c	FUNCTION_131
0x1147a	              0xc9	                                   leave	      8916	syntax.c	FUNCTION_131
0x1147b	              0xc3	                                     ret	      8916	syntax.c	FUNCTION_131
get_syntax_attr	FOR,0:DO,0:IF,4:SWITCH,0:functions,0:ELSE,0:WHILE,1:CALL,4	73
0x288f	              0x55	                                push rbp	      1849	syntax.c	FUNCTION_27
0x2890	          0x4889e5	                            mov rbp, rsp	      1849	syntax.c	FUNCTION_27
0x2893	        0x4883ec20	                           sub rsp, 0x20	      1849	syntax.c	FUNCTION_27
0x2897	          0x897dec	             mov dword [rbp - 0x14], edi	      1849	syntax.c	FUNCTION_27
0x289a	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1849	syntax.c	FUNCTION_27
0x289e	          0x8955e8	             mov dword [rbp - 0x18], edx	      1849	syntax.c	FUNCTION_27
0x28a1	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1850	syntax.c	FUNCTION_27
0x28a8	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1852	syntax.c	FUNCTION_27	IF_1
0x28ad	            0x7444	                            je 0x4002933	      1852	syntax.c	FUNCTION_27	IF_1
0x28af	    0x488b05000000	            mov rax, qword [0x040028f6] 	      1855	syntax.c	FUNCTION_27	IF_1
0x28b6	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	      1855	syntax.c	FUNCTION_27	IF_1
0x28bc	            0x85c0	                           test eax, eax	      1857	syntax.c	FUNCTION_27	IF_1
0x28be	            0x7517	                           jne 0x4002917	      1857	syntax.c	FUNCTION_27	IF_1
0x28c0	    0x488b05000000	            mov rax, qword [0x04002907] 	      1856	syntax.c	FUNCTION_27	IF_1
0x28c7	    0x8b8090020000	           mov eax, dword [rax + 0x290] 	      1856	syntax.c	FUNCTION_27	IF_1
0x28cd	            0x85c0	                           test eax, eax	      1856	syntax.c	FUNCTION_27	IF_1
0x28cf	           0xf94c0	                                 sete al	      1856	syntax.c	FUNCTION_27	IF_1
0x28d2	           0xfb6c0	                           movzx eax, al	      1857	syntax.c	FUNCTION_27	IF_1
0x28d5	            0xeb16	                           jmp 0x400292d	      1857	syntax.c	FUNCTION_27	IF_1
0x28d7	    0x488b05000000	            mov rax, qword [0x0400291e] 	      1857	syntax.c	FUNCTION_27	IF_1
0x28de	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	      1857	syntax.c	FUNCTION_27	IF_1
0x28e4	          0x83f801	                              cmp eax, 1	      1857	syntax.c	FUNCTION_27	IF_1
0x28e7	           0xf94c0	                                 sete al	      1857	syntax.c	FUNCTION_27	IF_1
0x28ea	           0xfb6c0	                           movzx eax, al	      1857	syntax.c	FUNCTION_27	IF_1
0x28ed	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1855	syntax.c	FUNCTION_27	IF_1
0x28f1	            0x8902	                    mov dword [rdx], eax	      1855	syntax.c	FUNCTION_27	IF_1
0x28f3	    0x488b05000000	            mov rax, qword [0x0400293a] 	      1860	syntax.c	FUNCTION_27	IF_2
0x28fa	    0x488b80100300	           mov rax, qword [rax + 0x310] 	      1860	syntax.c	FUNCTION_27	IF_2
0x2901	          0x4885c0	                           test rax, rax	      1860	syntax.c	FUNCTION_27	IF_2
0x2904	            0x750a	                           jne 0x4002950	      1860	syntax.c	FUNCTION_27	IF_2
0x2906	      0xb800000000	                              mov eax, 0	      1861	syntax.c	FUNCTION_27	IF_2
0x290b	      0xe9b5000000	                           jmp 0x4002a05	      1861	syntax.c	FUNCTION_27	IF_2
0x2910	    0x488b05000000	            mov rax, qword [0x04002957] 	      1864	syntax.c	FUNCTION_27	IF_3
0x2917	    0x488b80981500	          mov rax, qword [rax + 0x1598] 	      1864	syntax.c	FUNCTION_27	IF_3
0x291e	          0x4885c0	                           test rax, rax	      1864	syntax.c	FUNCTION_27	IF_3
0x2921	            0x7e47	                           jle 0x40029aa	      1864	syntax.c	FUNCTION_27	IF_3
0x2923	    0x488b05000000	            mov rax, qword [0x0400296a] 	      1864	syntax.c	FUNCTION_27	IF_3
0x292a	    0x488b80981500	          mov rax, qword [rax + 0x1598] 	      1864	syntax.c	FUNCTION_27	IF_3
0x2931	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      1864	syntax.c	FUNCTION_27	IF_3
0x2934	            0x7f34	                            jg 0x40029aa	      1864	syntax.c	FUNCTION_27	IF_3
0x2936	      0xe837dcffff	            call sym.clear_current_state	      1866	syntax.c	FUNCTION_27	IF_3	CALL_1
0x293b	    0xc70500000000	               mov dword [0x04002985], 0	      1868	syntax.c	FUNCTION_27	IF_3
0x2945	    0xc70500000000	               mov dword [0x0400298f], 0	      1869	syntax.c	FUNCTION_27	IF_3
0x294f	    0xc70500000000	               mov dword [0x04002999], 0	      1872	syntax.c	FUNCTION_27	IF_3
0x2959	    0xc70500000000	               mov dword [0x040029a3], 0	      1873	syntax.c	FUNCTION_27	IF_3
0x2963	      0xb800000000	                              mov eax, 0	      1875	syntax.c	FUNCTION_27	IF_3
0x2968	            0xeb5b	                           jmp 0x4002a05	      1875	syntax.c	FUNCTION_27	IF_3
0x296a	    0x8b0500000000	            mov eax, dword [0x040029b0] 	      1879	syntax.c	FUNCTION_27	IF_4	CALL_2
0x2970	            0x85c0	                           test eax, eax	      1879	syntax.c	FUNCTION_27	IF_4	CALL_2
0x2972	            0x7543	                           jne 0x40029f7	      1879	syntax.c	FUNCTION_27	IF_4	CALL_2
0x2974	      0xe858fdffff	         call sym.validate_current_state	      1880	syntax.c	FUNCTION_27	CALL_3
0x2979	            0xeb3c	                           jmp 0x40029f7	      1885	syntax.c	FUNCTION_27	WHILE_1
0x297b	    0x8b0500000000	            mov eax, dword [0x040029c1] 	      1888	syntax.c	FUNCTION_27	WHILE_1
0x2981	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_4
0x2984	            0x7505	                           jne 0x40029cb	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_4
0x2986	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_4
0x2989	            0xeb05	                           jmp 0x40029d0	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_4
0x298b	      0xb800000000	                              mov eax, 0	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_4
0x2990	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_4
0x2994	            0x89c1	                            mov ecx, eax	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_4
0x2996	      0xbe01000000	                              mov esi, 1	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_4
0x299b	      0xbf00000000	                              mov edi, 0	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_4
0x29a0	      0xe822000000	               call sym.syn_current_attr	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_4
0x29a5	          0x8945fc	                mov dword [rbp - 4], eax	      1887	syntax.c	FUNCTION_27	WHILE_1	CALL_4
0x29a8	    0x8b0500000000	            mov eax, dword [0x040029ee] 	      1889	syntax.c	FUNCTION_27	WHILE_1
0x29ae	          0x83c001	                              add eax, 1	      1889	syntax.c	FUNCTION_27	WHILE_1
0x29b1	    0x890500000000	            mov dword [0x040029f7], eax 	      1889	syntax.c	FUNCTION_27	WHILE_1
0x29b7	    0x8b0500000000	            mov eax, dword [0x040029fd] 	      1885	syntax.c	FUNCTION_27	WHILE_1
0x29bd	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      1885	syntax.c	FUNCTION_27	WHILE_1
0x29c0	            0x7eb9	                           jle 0x40029bb	      1885	syntax.c	FUNCTION_27	WHILE_1
0x29c2	          0x8b45fc	                mov eax, dword [rbp - 4]	      1892	syntax.c	FUNCTION_27
0x29c5	              0xc9	                                   leave	      1893	syntax.c	FUNCTION_27
0x29c6	              0xc3	                                     ret	      1893	syntax.c	FUNCTION_27
syn_cmd_include	FOR,0:DO,0:IF,9:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,15	170
0x8db2	              0x55	                                push rbp	      4819	syntax.c	FUNCTION_78
0x8db3	          0x4889e5	                            mov rbp, rsp	      4819	syntax.c	FUNCTION_78
0x8db6	              0x53	                                push rbx	      4819	syntax.c	FUNCTION_78
0x8db7	        0x4883ec58	                           sub rsp, 0x58	      4819	syntax.c	FUNCTION_78
0x8dbb	        0x48897da8	             mov qword [rbp - 0x58], rdi	      4819	syntax.c	FUNCTION_78
0x8dbf	          0x8975a4	             mov dword [rbp - 0x5c], esi	      4819	syntax.c	FUNCTION_78
0x8dc2	    0x64488b042528	                mov rax, qword fs:[0x28]	      4819	syntax.c	FUNCTION_78
0x8dcb	        0x488945e8	             mov qword [rbp - 0x18], rax	      4819	syntax.c	FUNCTION_78
0x8dcf	            0x31c0	                            xor eax, eax	      4819	syntax.c	FUNCTION_78
0x8dd1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4820	syntax.c	FUNCTION_78
0x8dd5	          0x488b00	                    mov rax, qword [rax]	      4820	syntax.c	FUNCTION_78
0x8dd8	        0x488945d8	             mov qword [rbp - 0x28], rax	      4820	syntax.c	FUNCTION_78
0x8ddc	    0xc745b8010000	               mov dword [rbp - 0x48], 1	      4821	syntax.c	FUNCTION_78
0x8de3	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      4824	syntax.c	FUNCTION_78
0x8deb	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      4827	syntax.c	FUNCTION_78
0x8df2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4829	syntax.c	FUNCTION_78	CALL_1
0x8df6	          0x4889c7	                            mov rdi, rax	      4829	syntax.c	FUNCTION_78	CALL_1
0x8df9	      0xe800000000	                          call 0x4008e3e	      4829	syntax.c	FUNCTION_78	CALL_1
0x8dfe	          0x4889c2	                            mov rdx, rax	      4829	syntax.c	FUNCTION_78	CALL_1
0x8e01	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4829	syntax.c	FUNCTION_78	CALL_1
0x8e05	        0x48895008	                mov qword [rax + 8], rdx	      4829	syntax.c	FUNCTION_78	CALL_1
0x8e09	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4830	syntax.c	FUNCTION_78	IF_1
0x8e0d	          0x8b4030	            mov eax, dword [rax + 0x30] 	      4830	syntax.c	FUNCTION_78	IF_1
0x8e10	            0x85c0	                           test eax, eax	      4830	syntax.c	FUNCTION_78	IF_1
0x8e12	     0xf8501020000	                           jne 0x4009059	      4830	syntax.c	FUNCTION_78	IF_1
0x8e18	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4833	syntax.c	FUNCTION_78	IF_2
0x8e1c	           0xfb600	                   movzx eax, byte [rax]	      4833	syntax.c	FUNCTION_78	IF_2
0x8e1f	            0x3c40	                            cmp al, 0x40	      4833	syntax.c	FUNCTION_78	IF_2
0x8e21	            0x7573	                           jne 0x4008ed6	      4833	syntax.c	FUNCTION_78	IF_2
0x8e23	      0x488345d801	               add qword [rbp - 0x28], 1	      4835	syntax.c	FUNCTION_78	IF_2
0x8e28	        0x488d55c8	                   lea rdx, [rbp - 0x38]	      4836	syntax.c	FUNCTION_78	IF_2	CALL_2
0x8e2c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4836	syntax.c	FUNCTION_78	IF_2	CALL_2
0x8e30	          0x4889d6	                            mov rsi, rdx	      4836	syntax.c	FUNCTION_78	IF_2	CALL_2
0x8e33	          0x4889c7	                            mov rdi, rax	      4836	syntax.c	FUNCTION_78	IF_2	CALL_2
0x8e36	      0xe8aff7ffff	                 call sym.get_group_name	      4836	syntax.c	FUNCTION_78	IF_2	CALL_2
0x8e3b	        0x488945e0	             mov qword [rbp - 0x20], rax	      4836	syntax.c	FUNCTION_78	IF_2	CALL_2
0x8e3f	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4837	syntax.c	FUNCTION_78	IF_2	IF_3
0x8e44	            0x7517	                           jne 0x4008e9d	      4837	syntax.c	FUNCTION_78	IF_2	IF_3
0x8e46	      0xbf00000000	                              mov edi, 0	      4839	syntax.c	FUNCTION_78	IF_2	IF_3	CALL_4
0x8e4b	      0xe800000000	                          call 0x4008e90	      4839	syntax.c	FUNCTION_78	IF_2	IF_3	CALL_4
0x8e50	          0x4889c7	                            mov rdi, rax	      4839	syntax.c	FUNCTION_78	IF_2	IF_3	CALL_4
0x8e53	      0xe800000000	                          call 0x4008e98	      4839	syntax.c	FUNCTION_78	IF_2	IF_3	CALL_4
0x8e58	      0xe9c3010000	                           jmp 0x4009060	      4840	syntax.c	FUNCTION_78	IF_2	IF_3
0x8e5d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x8e61	          0x4889c2	                            mov rdx, rax	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x8e64	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x8e68	          0x4829c2	                            sub rdx, rax	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x8e6b	          0x4889d0	                            mov rax, rdx	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x8e6e	            0x89c2	                            mov edx, eax	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x8e70	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x8e74	            0x89d6	                            mov esi, edx	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x8e76	          0x4889c7	                            mov rdi, rax	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x8e79	      0xe88e1b0000	              call sym.syn_check_cluster	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x8e7e	          0x8945b8	             mov dword [rbp - 0x48], eax	      4842	syntax.c	FUNCTION_78	IF_2	CALL_5
0x8e81	        0x837db800	               cmp dword [rbp - 0x48], 0	      4843	syntax.c	FUNCTION_78	IF_2	IF_4
0x8e85	     0xf8491010000	                            je 0x400905c	      4843	syntax.c	FUNCTION_78	IF_2	IF_4
0x8e8b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4846	syntax.c	FUNCTION_78	IF_2
0x8e8f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4846	syntax.c	FUNCTION_78	IF_2
0x8e93	          0x488910	                    mov qword [rax], rdx	      4846	syntax.c	FUNCTION_78	IF_2
0x8e96	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4853	syntax.c	FUNCTION_78
0x8e9a	        0x488b4028	            mov rax, qword [rax + 0x28] 	      4853	syntax.c	FUNCTION_78
0x8e9e	        0x4883c818	                            or rax, 0x18	      4853	syntax.c	FUNCTION_78
0x8ea2	          0x4889c2	                            mov rdx, rax	      4853	syntax.c	FUNCTION_78
0x8ea5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4853	syntax.c	FUNCTION_78
0x8ea9	        0x48895028	             mov qword [rax + 0x28], rdx	      4853	syntax.c	FUNCTION_78
0x8ead	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4854	syntax.c	FUNCTION_78	CALL_6
0x8eb1	          0x4889c7	                            mov rdi, rax	      4854	syntax.c	FUNCTION_78	CALL_6
0x8eb4	      0xe800000000	                          call 0x4008ef9	      4854	syntax.c	FUNCTION_78	CALL_6
0x8eb9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x8ebd	          0x488b00	                    mov rax, qword [rax]	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x8ec0	           0xfb600	                   movzx eax, byte [rax]	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x8ec3	            0x3c3c	                            cmp al, 0x3c	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x8ec5	            0x7421	                            je 0x4008f28	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x8ec7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x8ecb	          0x488b00	                    mov rax, qword [rax]	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x8ece	           0xfb600	                   movzx eax, byte [rax]	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x8ed1	            0x3c24	                            cmp al, 0x24	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x8ed3	            0x7413	                            je 0x4008f28	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x8ed5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x8ed9	          0x488b00	                    mov rax, qword [rax]	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x8edc	          0x4889c7	                            mov rdi, rax	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x8edf	      0xe800000000	                          call 0x4008f24	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x8ee4	            0x85c0	                           test eax, eax	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x8ee6	            0x7443	                            je 0x4008f6b	      4855	syntax.c	FUNCTION_78	IF_5	CALL_7
0x8ee8	    0xc745bc010000	               mov dword [rbp - 0x44], 1	      4860	syntax.c	FUNCTION_78	IF_5
0x8eef	    0x488b0d000000	            mov rcx, qword [0x04008f36] 	      4861	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_8
0x8ef6	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      4861	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_8
0x8efa	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4861	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_8
0x8efe	          0x4889ce	                            mov rsi, rcx	      4861	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_8
0x8f01	          0x4889c7	                            mov rdi, rax	      4861	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_8
0x8f04	      0xe800000000	                          call 0x4008f49	      4861	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_8
0x8f09	            0x85c0	                           test eax, eax	      4861	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_8
0x8f0b	            0x751e	                           jne 0x4008f6b	      4861	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_8
0x8f0d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4863	syntax.c	FUNCTION_78	IF_5	IF_6	IF_7
0x8f11	          0x4885c0	                           test rax, rax	      4863	syntax.c	FUNCTION_78	IF_5	IF_6	IF_7
0x8f14	     0xf8405010000	                            je 0x400905f	      4863	syntax.c	FUNCTION_78	IF_5	IF_6	IF_7
0x8f1a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4864	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_9
0x8f1e	          0x4889c7	                            mov rdi, rax	      4864	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_9
0x8f21	      0xe800000000	                          call 0x4008f66	      4864	syntax.c	FUNCTION_78	IF_5	IF_6	CALL_9
0x8f26	      0xe9f4000000	                           jmp 0x400905f	      4865	syntax.c	FUNCTION_78	IF_5	IF_6
0x8f2b	    0x8b0500000000	            mov eax, dword [0x04008f71] 	      4873	syntax.c	FUNCTION_78	IF_8
0x8f31	      0x3de6030000	                          cmp eax, 0x3e6	      4873	syntax.c	FUNCTION_78	IF_8
0x8f36	            0x7e17	                           jle 0x4008f8f	      4873	syntax.c	FUNCTION_78	IF_8
0x8f38	      0xbf00000000	                              mov edi, 0	      4875	syntax.c	FUNCTION_78	IF_8	CALL_11
0x8f3d	      0xe800000000	                          call 0x4008f82	      4875	syntax.c	FUNCTION_78	IF_8	CALL_11
0x8f42	          0x4889c7	                            mov rdi, rax	      4875	syntax.c	FUNCTION_78	IF_8	CALL_11
0x8f45	      0xe800000000	                          call 0x4008f8a	      4875	syntax.c	FUNCTION_78	IF_8	CALL_11
0x8f4a	      0xe9d1000000	                           jmp 0x4009060	      4876	syntax.c	FUNCTION_78	IF_8
0x8f4f	    0x8b0500000000	            mov eax, dword [0x04008f95] 	      4878	syntax.c	FUNCTION_78
0x8f55	          0x8945c0	             mov dword [rbp - 0x40], eax	      4878	syntax.c	FUNCTION_78
0x8f58	    0x8b0500000000	            mov eax, dword [0x04008f9e] 	      4879	syntax.c	FUNCTION_78
0x8f5e	          0x83c001	                              add eax, 1	      4879	syntax.c	FUNCTION_78
0x8f61	    0x890500000000	            mov dword [0x04008fa7], eax 	      4879	syntax.c	FUNCTION_78
0x8f67	    0x8b0500000000	            mov eax, dword [0x04008fad] 	      4879	syntax.c	FUNCTION_78
0x8f6d	    0x890500000000	            mov dword [0x04008fb3], eax 	      4879	syntax.c	FUNCTION_78
0x8f73	    0x488b05000000	            mov rax, qword [0x04008fba] 	      4880	syntax.c	FUNCTION_78
0x8f7a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4880	syntax.c	FUNCTION_78
0x8f7e	    0x8b8004030000	           mov eax, dword [rax + 0x304] 	      4880	syntax.c	FUNCTION_78
0x8f84	          0x8945c4	             mov dword [rbp - 0x3c], eax	      4880	syntax.c	FUNCTION_78
0x8f87	    0x488b05000000	            mov rax, qword [0x04008fce] 	      4881	syntax.c	FUNCTION_78
0x8f8e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4881	syntax.c	FUNCTION_78
0x8f92	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      4881	syntax.c	FUNCTION_78
0x8f95	    0x899004030000	            mov dword [rax + 0x304], edx	      4881	syntax.c	FUNCTION_78
0x8f9b	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x8f9f	            0x7420	                            je 0x4009001	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x8fa1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x8fa5	          0x488b00	                    mov rax, qword [rax]	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x8fa8	      0xba00000000	                              mov edx, 0	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x8fad	      0xbe00000000	                              mov esi, 0	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x8fb2	          0x4889c7	                            mov rdi, rax	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x8fb5	      0xe800000000	                          call 0x4008ffa	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x8fba	            0x85c0	                           test eax, eax	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x8fbc	           0xf94c0	                                 sete al	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x8fbf	            0xeb19	                           jmp 0x400901a	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x8fc1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4883	syntax.c	FUNCTION_78	IF_9	CALL_13
0x8fc5	          0x488b00	                    mov rax, qword [rax]	      4883	syntax.c	FUNCTION_78	IF_9	CALL_13
0x8fc8	      0xbe01000000	                              mov esi, 1	      4883	syntax.c	FUNCTION_78	IF_9	CALL_13
0x8fcd	          0x4889c7	                            mov rdi, rax	      4883	syntax.c	FUNCTION_78	IF_9	CALL_13
0x8fd0	      0xe800000000	                          call 0x4009015	      4883	syntax.c	FUNCTION_78	IF_9	CALL_13
0x8fd5	            0x85c0	                           test eax, eax	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x8fd7	           0xf94c0	                                 sete al	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x8fda	            0x84c0	                             test al, al	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x8fdc	            0x741c	                            je 0x400903a	      4882	syntax.c	FUNCTION_78	IF_9	CALL_12
0x8fde	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4884	syntax.c	FUNCTION_78	CALL_15
0x8fe2	          0x488b18	                    mov rbx, qword [rax]	      4884	syntax.c	FUNCTION_78	CALL_15
0x8fe5	      0xbf00000000	                              mov edi, 0	      4884	syntax.c	FUNCTION_78	CALL_15
0x8fea	      0xe800000000	                          call 0x400902f	      4884	syntax.c	FUNCTION_78	CALL_15
0x8fef	          0x4889de	                            mov rsi, rbx	      4884	syntax.c	FUNCTION_78	CALL_15
0x8ff2	          0x4889c7	                            mov rdi, rax	      4884	syntax.c	FUNCTION_78	CALL_15
0x8ff5	      0xe800000000	                          call 0x400903a	      4884	syntax.c	FUNCTION_78	CALL_15
0x8ffa	    0x488b05000000	            mov rax, qword [0x04009041] 	      4885	syntax.c	FUNCTION_78
0x9001	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4885	syntax.c	FUNCTION_78
0x9005	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      4885	syntax.c	FUNCTION_78
0x9008	    0x899004030000	            mov dword [rax + 0x304], edx	      4885	syntax.c	FUNCTION_78
0x900e	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      4886	syntax.c	FUNCTION_78
0x9011	    0x890500000000	            mov dword [0x04009057], eax 	      4886	syntax.c	FUNCTION_78
0x9017	            0xeb07	                           jmp 0x4009060	      4886	syntax.c	FUNCTION_78
0x9019	              0x90	                                     nop	      4831	syntax.c	FUNCTION_78	IF_1
0x901a	            0xeb04	                           jmp 0x4009060	      4831	syntax.c	FUNCTION_78	IF_1
0x901c	              0x90	                                     nop	      4844	syntax.c	FUNCTION_78	IF_2	IF_4
0x901d	            0xeb01	                           jmp 0x4009060	      4844	syntax.c	FUNCTION_78	IF_2	IF_4
0x901f	              0x90	                                     nop	      4865	syntax.c	FUNCTION_78	IF_5	IF_6
0x9020	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4887	syntax.c	FUNCTION_78
0x9024	    0x644833042528	                xor rax, qword fs:[0x28]	      4887	syntax.c	FUNCTION_78
0x902d	            0x7405	                            je 0x4009074	      4887	syntax.c	FUNCTION_78
0x902f	      0xe800000000	                          call 0x4009074	      4887	syntax.c	FUNCTION_78
0x9034	        0x4883c458	                           add rsp, 0x58	      4887	syntax.c	FUNCTION_78
0x9038	              0x5b	                                 pop rbx	      4887	syntax.c	FUNCTION_78
0x9039	              0x5d	                                 pop rbp	      4887	syntax.c	FUNCTION_78
0x903a	              0xc3	                                     ret	      4887	syntax.c	FUNCTION_78
get_highlight_name_ext	FOR,0:DO,0:IF,7:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,2	90
0x148db	              0x55	                                push rbp	     10315	syntax.c	FUNCTION_168
0x148dc	          0x4889e5	                            mov rbp, rsp	     10315	syntax.c	FUNCTION_168
0x148df	        0x48897df8	                mov qword [rbp - 8], rdi	     10315	syntax.c	FUNCTION_168
0x148e3	          0x8975f4	              mov dword [rbp - 0xc], esi	     10315	syntax.c	FUNCTION_168
0x148e6	          0x8955f0	             mov dword [rbp - 0x10], edx	     10315	syntax.c	FUNCTION_168
0x148e9	        0x837df400	                cmp dword [rbp - 0xc], 0	     10316	syntax.c	FUNCTION_168	IF_1
0x148ed	            0x790a	                           jns 0x4014939	     10316	syntax.c	FUNCTION_168	IF_1
0x148ef	      0xb800000000	                              mov eax, 0	     10317	syntax.c	FUNCTION_168	IF_1
0x148f4	      0xe920010000	                           jmp 0x4014a59	     10317	syntax.c	FUNCTION_168	IF_1
0x148f9	        0x837df000	               cmp dword [rbp - 0x10], 0	     10321	syntax.c	FUNCTION_168	IF_2	CALL_1
0x148fd	            0x7440	                            je 0x401497f	     10321	syntax.c	FUNCTION_168	IF_2	CALL_1
0x148ff	    0x8b0500000000	            mov eax, dword [0x04014945] 	     10321	syntax.c	FUNCTION_168	IF_2	CALL_1
0x14905	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	     10321	syntax.c	FUNCTION_168	IF_2	CALL_1
0x14908	            0x7e35	                           jle 0x401497f	     10321	syntax.c	FUNCTION_168	IF_2	CALL_1
0x1490a	    0x488b0d000000	            mov rcx, qword [0x04014951] 	     10321	syntax.c	FUNCTION_168	IF_2	CALL_1
0x14911	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     10321	syntax.c	FUNCTION_168	IF_2	CALL_1
0x14914	          0x4863d0	                         movsxd rdx, eax	     10321	syntax.c	FUNCTION_168	IF_2	CALL_1
0x14917	          0x4889d0	                            mov rax, rdx	     10321	syntax.c	FUNCTION_168	IF_2	CALL_1
0x1491a	        0x48c1e003	                              shl rax, 3	     10321	syntax.c	FUNCTION_168	IF_2	CALL_1
0x1491e	          0x4801d0	                            add rax, rdx	     10321	syntax.c	FUNCTION_168	IF_2	CALL_1
0x14921	          0x4801c0	                            add rax, rax	     10321	syntax.c	FUNCTION_168	IF_2	CALL_1
0x14924	          0x4801d0	                            add rax, rdx	     10321	syntax.c	FUNCTION_168	IF_2	CALL_1
0x14927	        0x48c1e003	                              shl rax, 3	     10321	syntax.c	FUNCTION_168	IF_2	CALL_1
0x1492b	          0x4801c8	                            add rax, rcx	     10321	syntax.c	FUNCTION_168	IF_2	CALL_1
0x1492e	          0x8b4010	            mov eax, dword [rax + 0x10] 	     10321	syntax.c	FUNCTION_168	IF_2	CALL_1
0x14931	            0x85c0	                           test eax, eax	     10321	syntax.c	FUNCTION_168	IF_2	CALL_1
0x14933	            0x740a	                            je 0x401497f	     10321	syntax.c	FUNCTION_168	IF_2	CALL_1
0x14935	      0xb800000000	                              mov eax, 0	     10322	syntax.c	FUNCTION_168	IF_2
0x1493a	      0xe9da000000	                           jmp 0x4014a59	     10322	syntax.c	FUNCTION_168	IF_2
0x1493f	    0x8b0500000000	            mov eax, dword [0x04014985] 	     10325	syntax.c	FUNCTION_168	IF_3
0x14945	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	     10325	syntax.c	FUNCTION_168	IF_3
0x14948	            0x7514	                           jne 0x401499e	     10325	syntax.c	FUNCTION_168	IF_3
0x1494a	    0x8b0500000000	            mov eax, dword [0x04014990] 	     10325	syntax.c	FUNCTION_168	IF_3
0x14950	            0x85c0	                           test eax, eax	     10325	syntax.c	FUNCTION_168	IF_3
0x14952	            0x740a	                            je 0x401499e	     10325	syntax.c	FUNCTION_168	IF_3
0x14954	      0xb800000000	                              mov eax, 0	     10326	syntax.c	FUNCTION_168	IF_3
0x14959	      0xe9bb000000	                           jmp 0x4014a59	     10326	syntax.c	FUNCTION_168	IF_3
0x1495e	    0x8b1500000000	            mov edx, dword [0x040149a4] 	     10327	syntax.c	FUNCTION_168	IF_4
0x14964	    0x8b0500000000	            mov eax, dword [0x040149aa] 	     10327	syntax.c	FUNCTION_168	IF_4
0x1496a	             0x1d0	                            add eax, edx	     10327	syntax.c	FUNCTION_168	IF_4
0x1496c	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	     10327	syntax.c	FUNCTION_168	IF_4
0x1496f	            0x7514	                           jne 0x40149c5	     10327	syntax.c	FUNCTION_168	IF_4
0x14971	    0x8b0500000000	            mov eax, dword [0x040149b7] 	     10327	syntax.c	FUNCTION_168	IF_4
0x14977	            0x85c0	                           test eax, eax	     10327	syntax.c	FUNCTION_168	IF_4
0x14979	            0x740a	                            je 0x40149c5	     10327	syntax.c	FUNCTION_168	IF_4
0x1497b	      0xb800000000	                              mov eax, 0	     10328	syntax.c	FUNCTION_168	IF_4
0x14980	      0xe994000000	                           jmp 0x4014a59	     10328	syntax.c	FUNCTION_168	IF_4
0x14985	    0x8b1500000000	            mov edx, dword [0x040149cb] 	     10329	syntax.c	FUNCTION_168	IF_5
0x1498b	    0x8b0500000000	            mov eax, dword [0x040149d1] 	     10329	syntax.c	FUNCTION_168	IF_5
0x14991	             0x1c2	                            add edx, eax	     10329	syntax.c	FUNCTION_168	IF_5
0x14993	    0x8b0500000000	            mov eax, dword [0x040149d9] 	     10329	syntax.c	FUNCTION_168	IF_5
0x14999	             0x1d0	                            add eax, edx	     10329	syntax.c	FUNCTION_168	IF_5
0x1499b	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	     10329	syntax.c	FUNCTION_168	IF_5
0x1499e	            0x7511	                           jne 0x40149f1	     10329	syntax.c	FUNCTION_168	IF_5
0x149a0	    0x8b0500000000	            mov eax, dword [0x040149e6] 	     10330	syntax.c	FUNCTION_168	IF_5
0x149a6	            0x85c0	                           test eax, eax	     10330	syntax.c	FUNCTION_168	IF_5
0x149a8	            0x7407	                            je 0x40149f1	     10330	syntax.c	FUNCTION_168	IF_5
0x149aa	      0xb800000000	                              mov eax, 0	     10331	syntax.c	FUNCTION_168	IF_5
0x149af	            0xeb68	                           jmp 0x4014a59	     10331	syntax.c	FUNCTION_168	IF_5
0x149b1	    0x8b1500000000	            mov edx, dword [0x040149f7] 	     10332	syntax.c	FUNCTION_168	IF_6
0x149b7	    0x8b0500000000	            mov eax, dword [0x040149fd] 	     10332	syntax.c	FUNCTION_168	IF_6
0x149bd	             0x1c2	                            add edx, eax	     10332	syntax.c	FUNCTION_168	IF_6
0x149bf	    0x8b0500000000	            mov eax, dword [0x04014a05] 	     10332	syntax.c	FUNCTION_168	IF_6
0x149c5	             0x1d0	                            add eax, edx	     10332	syntax.c	FUNCTION_168	IF_6
0x149c7	          0x83c001	                              add eax, 1	     10332	syntax.c	FUNCTION_168	IF_6
0x149ca	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	     10332	syntax.c	FUNCTION_168	IF_6
0x149cd	            0x7511	                           jne 0x4014a20	     10332	syntax.c	FUNCTION_168	IF_6
0x149cf	    0x8b0500000000	            mov eax, dword [0x04014a15] 	     10333	syntax.c	FUNCTION_168	IF_6
0x149d5	            0x85c0	                           test eax, eax	     10333	syntax.c	FUNCTION_168	IF_6
0x149d7	            0x7407	                            je 0x4014a20	     10333	syntax.c	FUNCTION_168	IF_6
0x149d9	      0xb800000000	                              mov eax, 0	     10334	syntax.c	FUNCTION_168	IF_6
0x149de	            0xeb39	                           jmp 0x4014a59	     10334	syntax.c	FUNCTION_168	IF_6
0x149e0	    0x8b0500000000	            mov eax, dword [0x04014a26] 	     10336	syntax.c	FUNCTION_168	IF_7
0x149e6	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	     10336	syntax.c	FUNCTION_168	IF_7
0x149e9	            0x7f07	                            jg 0x4014a32	     10336	syntax.c	FUNCTION_168	IF_7
0x149eb	      0xb800000000	                              mov eax, 0	     10337	syntax.c	FUNCTION_168	IF_7
0x149f0	            0xeb27	                           jmp 0x4014a59	     10337	syntax.c	FUNCTION_168	IF_7
0x149f2	    0x488b0d000000	            mov rcx, qword [0x04014a39] 	     10338	syntax.c	FUNCTION_168	CALL_2
0x149f9	          0x8b45f4	              mov eax, dword [rbp - 0xc]	     10338	syntax.c	FUNCTION_168	CALL_2
0x149fc	          0x4863d0	                         movsxd rdx, eax	     10338	syntax.c	FUNCTION_168	CALL_2
0x149ff	          0x4889d0	                            mov rax, rdx	     10338	syntax.c	FUNCTION_168	CALL_2
0x14a02	        0x48c1e003	                              shl rax, 3	     10338	syntax.c	FUNCTION_168	CALL_2
0x14a06	          0x4801d0	                            add rax, rdx	     10338	syntax.c	FUNCTION_168	CALL_2
0x14a09	          0x4801c0	                            add rax, rax	     10338	syntax.c	FUNCTION_168	CALL_2
0x14a0c	          0x4801d0	                            add rax, rdx	     10338	syntax.c	FUNCTION_168	CALL_2
0x14a0f	        0x48c1e003	                              shl rax, 3	     10338	syntax.c	FUNCTION_168	CALL_2
0x14a13	          0x4801c8	                            add rax, rcx	     10338	syntax.c	FUNCTION_168	CALL_2
0x14a16	          0x488b00	                    mov rax, qword [rax]	     10338	syntax.c	FUNCTION_168	CALL_2
0x14a19	              0x5d	                                 pop rbp	     10339	syntax.c	FUNCTION_168
0x14a1a	              0xc3	                                     ret	     10339	syntax.c	FUNCTION_168
syn_clear_pattern	FOR,0:DO,0:IF,1:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,11	83
0x67e9	              0x55	                                push rbp	      3727	syntax.c	FUNCTION_53
0x67ea	          0x4889e5	                            mov rbp, rsp	      3727	syntax.c	FUNCTION_53
0x67ed	        0x4883ec10	                           sub rsp, 0x10	      3727	syntax.c	FUNCTION_53
0x67f1	        0x48897df8	                mov qword [rbp - 8], rdi	      3727	syntax.c	FUNCTION_53
0x67f5	          0x8975f4	              mov dword [rbp - 0xc], esi	      3727	syntax.c	FUNCTION_53
0x67f8	        0x488b45f8	                mov rax, qword [rbp - 8]	      3728	syntax.c	FUNCTION_53	CALL_2
0x67fc	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      3728	syntax.c	FUNCTION_53	CALL_2
0x6803	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3728	syntax.c	FUNCTION_53	CALL_2
0x6806	          0x4863d0	                         movsxd rdx, eax	      3728	syntax.c	FUNCTION_53	CALL_2
0x6809	          0x4889d0	                            mov rax, rdx	      3728	syntax.c	FUNCTION_53	CALL_2
0x680c	        0x48c1e002	                              shl rax, 2	      3728	syntax.c	FUNCTION_53	CALL_2
0x6810	          0x4801d0	                            add rax, rdx	      3728	syntax.c	FUNCTION_53	CALL_2
0x6813	        0x48c1e005	                              shl rax, 5	      3728	syntax.c	FUNCTION_53	CALL_2
0x6817	          0x4801c8	                            add rax, rcx	      3728	syntax.c	FUNCTION_53	CALL_2
0x681a	        0x488b4060	            mov rax, qword [rax + 0x60] 	      3728	syntax.c	FUNCTION_53	CALL_2
0x681e	          0x4889c7	                            mov rdi, rax	      3728	syntax.c	FUNCTION_53	CALL_2
0x6821	      0xe800000000	                          call 0x4006866	      3728	syntax.c	FUNCTION_53	CALL_2
0x6826	        0x488b45f8	                mov rax, qword [rbp - 8]	      3729	syntax.c	FUNCTION_53	CALL_4
0x682a	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      3729	syntax.c	FUNCTION_53	CALL_4
0x6831	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3729	syntax.c	FUNCTION_53	CALL_4
0x6834	          0x4863d0	                         movsxd rdx, eax	      3729	syntax.c	FUNCTION_53	CALL_4
0x6837	          0x4889d0	                            mov rax, rdx	      3729	syntax.c	FUNCTION_53	CALL_4
0x683a	        0x48c1e002	                              shl rax, 2	      3729	syntax.c	FUNCTION_53	CALL_4
0x683e	          0x4801d0	                            add rax, rdx	      3729	syntax.c	FUNCTION_53	CALL_4
0x6841	        0x48c1e005	                              shl rax, 5	      3729	syntax.c	FUNCTION_53	CALL_4
0x6845	          0x4801c8	                            add rax, rcx	      3729	syntax.c	FUNCTION_53	CALL_4
0x6848	        0x488b4068	            mov rax, qword [rax + 0x68] 	      3729	syntax.c	FUNCTION_53	CALL_4
0x684c	          0x4889c7	                            mov rdi, rax	      3729	syntax.c	FUNCTION_53	CALL_4
0x684f	      0xe800000000	                          call 0x4006894	      3729	syntax.c	FUNCTION_53	CALL_4
0x6854	        0x837df400	                cmp dword [rbp - 0xc], 0	      3731	syntax.c	FUNCTION_53	IF_1	CALL_5
0x6858	            0x7433	                            je 0x40068cd	      3731	syntax.c	FUNCTION_53	IF_1	CALL_5
0x685a	        0x488b45f8	                mov rax, qword [rbp - 8]	      3731	syntax.c	FUNCTION_53	IF_1	CALL_5
0x685e	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      3731	syntax.c	FUNCTION_53	IF_1	CALL_5
0x6865	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3731	syntax.c	FUNCTION_53	IF_1	CALL_5
0x6868	          0x4863d0	                         movsxd rdx, eax	      3731	syntax.c	FUNCTION_53	IF_1	CALL_5
0x686b	          0x4889d0	                            mov rax, rdx	      3731	syntax.c	FUNCTION_53	IF_1	CALL_5
0x686e	        0x48c1e002	                              shl rax, 2	      3731	syntax.c	FUNCTION_53	IF_1	CALL_5
0x6872	          0x4801d0	                            add rax, rdx	      3731	syntax.c	FUNCTION_53	IF_1	CALL_5
0x6875	        0x48c1e005	                              shl rax, 5	      3731	syntax.c	FUNCTION_53	IF_1	CALL_5
0x6879	    0x482da0000000	                           sub rax, 0xa0	      3731	syntax.c	FUNCTION_53	IF_1	CALL_5
0x687f	          0x4801c8	                            add rax, rcx	      3731	syntax.c	FUNCTION_53	IF_1	CALL_5
0x6882	           0xfb600	                   movzx eax, byte [rax]	      3731	syntax.c	FUNCTION_53	IF_1	CALL_5
0x6885	            0x3c02	                               cmp al, 2	      3731	syntax.c	FUNCTION_53	IF_1	CALL_5
0x6887	     0xf848a000000	                            je 0x4006957	      3731	syntax.c	FUNCTION_53	IF_1	CALL_5
0x688d	        0x488b45f8	                mov rax, qword [rbp - 8]	      3733	syntax.c	FUNCTION_53	IF_1	CALL_7
0x6891	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      3733	syntax.c	FUNCTION_53	IF_1	CALL_7
0x6898	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3733	syntax.c	FUNCTION_53	IF_1	CALL_7
0x689b	          0x4863d0	                         movsxd rdx, eax	      3733	syntax.c	FUNCTION_53	IF_1	CALL_7
0x689e	          0x4889d0	                            mov rax, rdx	      3733	syntax.c	FUNCTION_53	IF_1	CALL_7
0x68a1	        0x48c1e002	                              shl rax, 2	      3733	syntax.c	FUNCTION_53	IF_1	CALL_7
0x68a5	          0x4801d0	                            add rax, rdx	      3733	syntax.c	FUNCTION_53	IF_1	CALL_7
0x68a8	        0x48c1e005	                              shl rax, 5	      3733	syntax.c	FUNCTION_53	IF_1	CALL_7
0x68ac	          0x4801c8	                            add rax, rcx	      3733	syntax.c	FUNCTION_53	IF_1	CALL_7
0x68af	        0x488b4040	            mov rax, qword [rax + 0x40] 	      3733	syntax.c	FUNCTION_53	IF_1	CALL_7
0x68b3	          0x4889c7	                            mov rdi, rax	      3733	syntax.c	FUNCTION_53	IF_1	CALL_7
0x68b6	      0xe800000000	                          call 0x40068fb	      3733	syntax.c	FUNCTION_53	IF_1	CALL_7
0x68bb	        0x488b45f8	                mov rax, qword [rbp - 8]	      3734	syntax.c	FUNCTION_53	IF_1	CALL_9
0x68bf	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      3734	syntax.c	FUNCTION_53	IF_1	CALL_9
0x68c6	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3734	syntax.c	FUNCTION_53	IF_1	CALL_9
0x68c9	          0x4863d0	                         movsxd rdx, eax	      3734	syntax.c	FUNCTION_53	IF_1	CALL_9
0x68cc	          0x4889d0	                            mov rax, rdx	      3734	syntax.c	FUNCTION_53	IF_1	CALL_9
0x68cf	        0x48c1e002	                              shl rax, 2	      3734	syntax.c	FUNCTION_53	IF_1	CALL_9
0x68d3	          0x4801d0	                            add rax, rdx	      3734	syntax.c	FUNCTION_53	IF_1	CALL_9
0x68d6	        0x48c1e005	                              shl rax, 5	      3734	syntax.c	FUNCTION_53	IF_1	CALL_9
0x68da	          0x4801c8	                            add rax, rcx	      3734	syntax.c	FUNCTION_53	IF_1	CALL_9
0x68dd	        0x488b4048	            mov rax, qword [rax + 0x48] 	      3734	syntax.c	FUNCTION_53	IF_1	CALL_9
0x68e1	          0x4889c7	                            mov rdi, rax	      3734	syntax.c	FUNCTION_53	IF_1	CALL_9
0x68e4	      0xe800000000	                          call 0x4006929	      3734	syntax.c	FUNCTION_53	IF_1	CALL_9
0x68e9	        0x488b45f8	                mov rax, qword [rbp - 8]	      3735	syntax.c	FUNCTION_53	IF_1	CALL_11
0x68ed	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      3735	syntax.c	FUNCTION_53	IF_1	CALL_11
0x68f4	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3735	syntax.c	FUNCTION_53	IF_1	CALL_11
0x68f7	          0x4863d0	                         movsxd rdx, eax	      3735	syntax.c	FUNCTION_53	IF_1	CALL_11
0x68fa	          0x4889d0	                            mov rax, rdx	      3735	syntax.c	FUNCTION_53	IF_1	CALL_11
0x68fd	        0x48c1e002	                              shl rax, 2	      3735	syntax.c	FUNCTION_53	IF_1	CALL_11
0x6901	          0x4801d0	                            add rax, rdx	      3735	syntax.c	FUNCTION_53	IF_1	CALL_11
0x6904	        0x48c1e005	                              shl rax, 5	      3735	syntax.c	FUNCTION_53	IF_1	CALL_11
0x6908	          0x4801c8	                            add rax, rcx	      3735	syntax.c	FUNCTION_53	IF_1	CALL_11
0x690b	        0x488b4058	            mov rax, qword [rax + 0x58] 	      3735	syntax.c	FUNCTION_53	IF_1	CALL_11
0x690f	          0x4889c7	                            mov rdi, rax	      3735	syntax.c	FUNCTION_53	IF_1	CALL_11
0x6912	      0xe800000000	                          call 0x4006957	      3735	syntax.c	FUNCTION_53	IF_1	CALL_11
0x6917	              0x90	                                     nop	      3737	syntax.c	FUNCTION_53
0x6918	              0xc9	                                   leave	      3737	syntax.c	FUNCTION_53
0x6919	              0xc3	                                     ret	      3737	syntax.c	FUNCTION_53
push_current_state	FOR,0:DO,0:IF,1:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,4	39
0x4aef	              0x55	                                push rbp	      2897	syntax.c	FUNCTION_35
0x4af0	          0x4889e5	                            mov rbp, rsp	      2897	syntax.c	FUNCTION_35
0x4af3	        0x4883ec10	                           sub rsp, 0x10	      2897	syntax.c	FUNCTION_35
0x4af7	          0x897dfc	                mov dword [rbp - 4], edi	      2897	syntax.c	FUNCTION_35
0x4afa	      0xbe01000000	                              mov esi, 1	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4aff	      0xbf00000000	                              mov edi, 0	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4b04	      0xe800000000	                          call 0x4004b49	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4b09	            0x85c0	                           test eax, eax	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4b0b	            0x7507	                           jne 0x4004b54	      2898	syntax.c	FUNCTION_35	IF_1	CALL_1
0x4b0d	      0xb800000000	                              mov eax, 0	      2899	syntax.c	FUNCTION_35	IF_1
0x4b12	            0xeb6e	                           jmp 0x4004bc2	      2899	syntax.c	FUNCTION_35	IF_1
0x4b14	    0x488b0d000000	            mov rcx, qword [0x04004b5b] 	      2900	syntax.c	FUNCTION_35	CALL_3
0x4b1b	    0x8b0500000000	            mov eax, dword [0x04004b61] 	      2900	syntax.c	FUNCTION_35	CALL_3
0x4b21	          0x4863d0	                         movsxd rdx, eax	      2900	syntax.c	FUNCTION_35	CALL_3
0x4b24	          0x4889d0	                            mov rax, rdx	      2900	syntax.c	FUNCTION_35	CALL_3
0x4b27	        0x48c1e003	                              shl rax, 3	      2900	syntax.c	FUNCTION_35	CALL_3
0x4b2b	          0x4801d0	                            add rax, rdx	      2900	syntax.c	FUNCTION_35	CALL_3
0x4b2e	        0x48c1e004	                              shl rax, 4	      2900	syntax.c	FUNCTION_35	CALL_3
0x4b32	          0x4801c8	                            add rax, rcx	      2900	syntax.c	FUNCTION_35	CALL_3
0x4b35	      0xba90000000	                           mov edx, 0x90	      2900	syntax.c	FUNCTION_35	CALL_3
0x4b3a	      0xbe00000000	                              mov esi, 0	      2900	syntax.c	FUNCTION_35	CALL_3
0x4b3f	          0x4889c7	                            mov rdi, rax	      2900	syntax.c	FUNCTION_35	CALL_3
0x4b42	      0xe800000000	                          call 0x4004b87	      2900	syntax.c	FUNCTION_35	CALL_3
0x4b47	    0x488b0d000000	            mov rcx, qword [0x04004b8e] 	      2901	syntax.c	FUNCTION_35	CALL_4
0x4b4e	    0x8b0500000000	            mov eax, dword [0x04004b94] 	      2901	syntax.c	FUNCTION_35	CALL_4
0x4b54	          0x4863d0	                         movsxd rdx, eax	      2901	syntax.c	FUNCTION_35	CALL_4
0x4b57	          0x4889d0	                            mov rax, rdx	      2901	syntax.c	FUNCTION_35	CALL_4
0x4b5a	        0x48c1e003	                              shl rax, 3	      2901	syntax.c	FUNCTION_35	CALL_4
0x4b5e	          0x4801d0	                            add rax, rdx	      2901	syntax.c	FUNCTION_35	CALL_4
0x4b61	        0x48c1e004	                              shl rax, 4	      2901	syntax.c	FUNCTION_35	CALL_4
0x4b65	        0x488d1401	                    lea rdx, [rcx + rax]	      2901	syntax.c	FUNCTION_35	CALL_4
0x4b69	          0x8b45fc	                mov eax, dword [rbp - 4]	      2901	syntax.c	FUNCTION_35	CALL_4
0x4b6c	            0x8902	                    mov dword [rdx], eax	      2901	syntax.c	FUNCTION_35	CALL_4
0x4b6e	    0x8b0500000000	            mov eax, dword [0x04004bb4] 	      2902	syntax.c	FUNCTION_35
0x4b74	          0x83c001	                              add eax, 1	      2902	syntax.c	FUNCTION_35
0x4b77	    0x890500000000	            mov dword [0x04004bbd], eax 	      2902	syntax.c	FUNCTION_35
0x4b7d	      0xb801000000	                              mov eax, 1	      2903	syntax.c	FUNCTION_35
0x4b82	              0xc9	                                   leave	      2904	syntax.c	FUNCTION_35
0x4b83	              0xc3	                                     ret	      2904	syntax.c	FUNCTION_35
syn_stack_free_all	FOR,0:DO,0:IF,0:SWITCH,0:functions,1:ELSE,0:WHILE,0:CALL,1	30
0x11cf	              0x55	                                push rbp	      1204	syntax.c	FUNCTION_12
0x11d0	          0x4889e5	                            mov rbp, rsp	      1204	syntax.c	FUNCTION_12
0x11d3	        0x4883ec20	                           sub rsp, 0x20	      1204	syntax.c	FUNCTION_12
0x11d7	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1204	syntax.c	FUNCTION_12
0x11db	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1209	syntax.c	FUNCTION_12	CALL_1
0x11df	          0x4889c7	                            mov rdi, rax	      1209	syntax.c	FUNCTION_12	CALL_1
0x11e2	      0xe85affffff	           call sym.syn_stack_free_block	      1209	syntax.c	FUNCTION_12	CALL_1
0x11e7	    0x488b05000000	            mov rax, qword [0x0400122e] 	      1213	syntax.c	FUNCTION_12
0x11ee	        0x488945f8	                mov qword [rbp - 8], rax	      1213	syntax.c	FUNCTION_12
0x11f2	            0xeb36	                           jmp 0x400126a	      1213	syntax.c	FUNCTION_12
0x11f4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x11f8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x11fc	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x1200	            0x751c	                           jne 0x400125e	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x1202	        0x488b45f8	                mov rax, qword [rbp - 8]	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x1206	          0x4889c7	                            mov rdi, rax	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x1209	      0xe800000000	                          call 0x400124e	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x120e	            0x85c0	                           test eax, eax	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x1210	            0x740c	                            je 0x400125e	      1215	syntax.c	FUNCTION_12	FUNCTION_1	IF_1	CALL_1
0x1212	        0x488b45f8	                mov rax, qword [rbp - 8]	      1216	syntax.c	FUNCTION_12	FUNCTION_1	CALL_2
0x1216	          0x4889c7	                            mov rdi, rax	      1216	syntax.c	FUNCTION_12	FUNCTION_1	CALL_2
0x1219	      0xe800000000	                          call 0x400125e	      1216	syntax.c	FUNCTION_12	FUNCTION_1	CALL_2
0x121e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1213	syntax.c	FUNCTION_12
0x1222	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1213	syntax.c	FUNCTION_12
0x1226	        0x488945f8	                mov qword [rbp - 8], rax	      1213	syntax.c	FUNCTION_12
0x122a	      0x48837df800	                  cmp qword [rbp - 8], 0	      1213	syntax.c	FUNCTION_12
0x122f	            0x75c3	                           jne 0x4001234	      1213	syntax.c	FUNCTION_12
0x1231	              0x90	                                     nop	      1219	syntax.c	FUNCTION_12
0x1232	              0xc9	                                   leave	      1219	syntax.c	FUNCTION_12
0x1233	              0xc3	                                     ret	      1219	syntax.c	FUNCTION_12
syn_name2id	FOR,1:DO,0:IF,1:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,5	62
0x12d46	              0x55	                                push rbp	      9632	syntax.c	FUNCTION_148
0x12d47	          0x4889e5	                            mov rbp, rsp	      9632	syntax.c	FUNCTION_148
0x12d4a	    0x4881ecf00000	                           sub rsp, 0xf0	      9632	syntax.c	FUNCTION_148
0x12d51	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	      9632	syntax.c	FUNCTION_148
0x12d58	    0x64488b042528	                mov rax, qword fs:[0x28]	      9632	syntax.c	FUNCTION_148
0x12d61	        0x488945f8	                mov qword [rbp - 8], rax	      9632	syntax.c	FUNCTION_148
0x12d65	            0x31c0	                            xor eax, eax	      9632	syntax.c	FUNCTION_148
0x12d67	    0x488b8d18ffff	             mov rcx, qword [rbp - 0xe8]	      9639	syntax.c	FUNCTION_148	CALL_1
0x12d6e	    0x488d8530ffff	                   lea rax, [rbp - 0xd0]	      9639	syntax.c	FUNCTION_148	CALL_1
0x12d75	      0xbac7000000	                           mov edx, 0xc7	      9639	syntax.c	FUNCTION_148	CALL_1
0x12d7a	          0x4889ce	                            mov rsi, rcx	      9639	syntax.c	FUNCTION_148	CALL_1
0x12d7d	          0x4889c7	                            mov rdi, rax	      9639	syntax.c	FUNCTION_148	CALL_1
0x12d80	      0xe800000000	                          call 0x4012dc5	      9639	syntax.c	FUNCTION_148	CALL_1
0x12d85	    0x488d8530ffff	                   lea rax, [rbp - 0xd0]	      9640	syntax.c	FUNCTION_148	CALL_2
0x12d8c	          0x4889c7	                            mov rdi, rax	      9640	syntax.c	FUNCTION_148	CALL_2
0x12d8f	      0xe800000000	                          call 0x4012dd4	      9640	syntax.c	FUNCTION_148	CALL_2
0x12d94	    0x8b0500000000	            mov eax, dword [0x04012dda] 	      9641	syntax.c	FUNCTION_148	FOR_1
0x12d9a	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	      9641	syntax.c	FUNCTION_148	FOR_1
0x12da0	            0xeb71	                           jmp 0x4012e53	      9641	syntax.c	FUNCTION_148	FOR_1
0x12da2	    0x488b0d000000	            mov rcx, qword [0x04012de9] 	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x12da9	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x12daf	          0x4863d0	                         movsxd rdx, eax	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x12db2	          0x4889d0	                            mov rax, rdx	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x12db5	        0x48c1e003	                              shl rax, 3	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x12db9	          0x4801d0	                            add rax, rdx	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x12dbc	          0x4801c0	                            add rax, rax	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x12dbf	          0x4801d0	                            add rax, rdx	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x12dc2	        0x48c1e003	                              shl rax, 3	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x12dc6	          0x4801c8	                            add rax, rcx	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x12dc9	        0x488b4008	                mov rax, qword [rax + 8]	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x12dcd	          0x4885c0	                           test rax, rax	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x12dd0	            0x7441	                            je 0x4012e53	      9642	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_3
0x12dd2	    0x488b0d000000	            mov rcx, qword [0x04012e19] 	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_5
0x12dd9	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_5
0x12ddf	          0x4863d0	                         movsxd rdx, eax	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_5
0x12de2	          0x4889d0	                            mov rax, rdx	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_5
0x12de5	        0x48c1e003	                              shl rax, 3	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_5
0x12de9	          0x4801d0	                            add rax, rdx	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_5
0x12dec	          0x4801c0	                            add rax, rax	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_5
0x12def	          0x4801d0	                            add rax, rdx	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_5
0x12df2	        0x48c1e003	                              shl rax, 3	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_5
0x12df6	          0x4801c8	                            add rax, rcx	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_5
0x12df9	        0x488b5008	                mov rdx, qword [rax + 8]	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_5
0x12dfd	    0x488d8530ffff	                   lea rax, [rbp - 0xd0]	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_5
0x12e04	          0x4889d6	                            mov rsi, rdx	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_5
0x12e07	          0x4889c7	                            mov rdi, rax	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_5
0x12e0a	      0xe800000000	                          call 0x4012e4f	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_5
0x12e0f	            0x85c0	                           test eax, eax	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_5
0x12e11	            0x7416	                            je 0x4012e69	      9643	syntax.c	FUNCTION_148	FOR_1	IF_1	CALL_5
0x12e13	    0x83ad2cffffff	               sub dword [rbp - 0xd4], 1	      9641	syntax.c	FUNCTION_148	FOR_1
0x12e1a	    0x83bd2cffffff	               cmp dword [rbp - 0xd4], 0	      9641	syntax.c	FUNCTION_148	FOR_1
0x12e21	     0xf897bffffff	                           jns 0x4012de2	      9641	syntax.c	FUNCTION_148	FOR_1
0x12e27	            0xeb01	                           jmp 0x4012e6a	      9641	syntax.c	FUNCTION_148	FOR_1
0x12e29	              0x90	                                     nop	      9644	syntax.c	FUNCTION_148	FOR_1	IF_1
0x12e2a	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      9645	syntax.c	FUNCTION_148
0x12e30	          0x83c001	                              add eax, 1	      9645	syntax.c	FUNCTION_148
0x12e33	        0x488b75f8	                mov rsi, qword [rbp - 8]	      9646	syntax.c	FUNCTION_148
0x12e37	    0x644833342528	                xor rsi, qword fs:[0x28]	      9646	syntax.c	FUNCTION_148
0x12e40	            0x7405	                            je 0x4012e87	      9646	syntax.c	FUNCTION_148
0x12e42	      0xe800000000	                          call 0x4012e87	      9646	syntax.c	FUNCTION_148
0x12e47	              0xc9	                                   leave	      9646	syntax.c	FUNCTION_148
0x12e48	              0xc3	                                     ret	      9646	syntax.c	FUNCTION_148
hl_set_fg_color_name	FOR,0:DO,0:IF,2:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,4	41
0x10d67	              0x55	                                push rbp	      8579	syntax.c	FUNCTION_126
0x10d68	          0x4889e5	                            mov rbp, rsp	      8579	syntax.c	FUNCTION_126
0x10d6b	        0x4883ec20	                           sub rsp, 0x20	      8579	syntax.c	FUNCTION_126
0x10d6f	        0x48897de8	             mov qword [rbp - 0x18], rdi	      8579	syntax.c	FUNCTION_126
0x10d73	      0x48837de800	               cmp qword [rbp - 0x18], 0	      8582	syntax.c	FUNCTION_126	IF_1
0x10d78	            0x747c	                            je 0x4010e36	      8582	syntax.c	FUNCTION_126	IF_1
0x10d7a	      0xbf00000000	                              mov edi, 0	      8584	syntax.c	FUNCTION_126	IF_1	CALL_1
0x10d7f	      0xe800000000	                          call 0x4010dc4	      8584	syntax.c	FUNCTION_126	IF_1	CALL_1
0x10d84	          0x8945fc	                mov dword [rbp - 4], eax	      8584	syntax.c	FUNCTION_126	IF_1	CALL_1
0x10d87	        0x837dfc00	                  cmp dword [rbp - 4], 0	      8585	syntax.c	FUNCTION_126	IF_1	IF_2
0x10d8b	            0x7e69	                           jle 0x4010e36	      8585	syntax.c	FUNCTION_126	IF_1	IF_2
0x10d8d	    0x488b0d000000	            mov rcx, qword [0x04010dd4] 	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_3
0x10d94	          0x8b45fc	                mov eax, dword [rbp - 4]	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_3
0x10d97	          0x4863d0	                         movsxd rdx, eax	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_3
0x10d9a	          0x4889d0	                            mov rax, rdx	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_3
0x10d9d	        0x48c1e003	                              shl rax, 3	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_3
0x10da1	          0x4801d0	                            add rax, rdx	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_3
0x10da4	          0x4801c0	                            add rax, rax	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_3
0x10da7	          0x4801d0	                            add rax, rdx	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_3
0x10daa	        0x48c1e003	                              shl rax, 3	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_3
0x10dae	    0x482d98000000	                           sub rax, 0x98	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_3
0x10db4	          0x4801c8	                            add rax, rcx	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_3
0x10db7	        0x488b4070	            mov rax, qword [rax + 0x70] 	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_3
0x10dbb	          0x4889c7	                            mov rdi, rax	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_3
0x10dbe	      0xe800000000	                          call 0x4010e03	      8587	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_3
0x10dc3	    0x488b0d000000	            mov rcx, qword [0x04010e0a] 	      8588	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_4
0x10dca	          0x8b45fc	                mov eax, dword [rbp - 4]	      8588	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_4
0x10dcd	          0x4863d0	                         movsxd rdx, eax	      8588	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_4
0x10dd0	          0x4889d0	                            mov rax, rdx	      8588	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_4
0x10dd3	        0x48c1e003	                              shl rax, 3	      8588	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_4
0x10dd7	          0x4801d0	                            add rax, rdx	      8588	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_4
0x10dda	          0x4801c0	                            add rax, rax	      8588	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_4
0x10ddd	          0x4801d0	                            add rax, rdx	      8588	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_4
0x10de0	        0x48c1e003	                              shl rax, 3	      8588	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_4
0x10de4	    0x482d98000000	                           sub rax, 0x98	      8588	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_4
0x10dea	        0x488d1401	                    lea rdx, [rcx + rax]	      8588	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_4
0x10dee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8588	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_4
0x10df2	        0x48894270	             mov qword [rdx + 0x70], rax	      8588	syntax.c	FUNCTION_126	IF_1	IF_2	CALL_4
0x10df6	              0x90	                                     nop	      8591	syntax.c	FUNCTION_126
0x10df7	              0xc9	                                   leave	      8591	syntax.c	FUNCTION_126
0x10df8	              0xc3	                                     ret	      8591	syntax.c	FUNCTION_126
update_si_attr	FOR,0:DO,0:IF,7:SWITCH,0:functions,0:ELSE,3:WHILE,0:CALL,8	168
0x44c6	              0x55	                                push rbp	      2716	syntax.c	ELSE_2	FUNCTION_32
0x44c7	          0x4889e5	                            mov rbp, rsp	      2716	syntax.c	ELSE_2	FUNCTION_32
0x44ca	        0x4883ec20	                           sub rsp, 0x20	      2716	syntax.c	ELSE_2	FUNCTION_32
0x44ce	          0x897dec	             mov dword [rbp - 0x14], edi	      2716	syntax.c	ELSE_2	FUNCTION_32
0x44d1	    0x488b0d000000	            mov rcx, qword [0x04004518] 	      2717	syntax.c	ELSE_2	FUNCTION_32	CALL_1
0x44d8	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2717	syntax.c	ELSE_2	FUNCTION_32	CALL_1
0x44db	          0x4863d0	                         movsxd rdx, eax	      2717	syntax.c	ELSE_2	FUNCTION_32	CALL_1
0x44de	          0x4889d0	                            mov rax, rdx	      2717	syntax.c	ELSE_2	FUNCTION_32	CALL_1
0x44e1	        0x48c1e003	                              shl rax, 3	      2717	syntax.c	ELSE_2	FUNCTION_32	CALL_1
0x44e5	          0x4801d0	                            add rax, rdx	      2717	syntax.c	ELSE_2	FUNCTION_32	CALL_1
0x44e8	        0x48c1e004	                              shl rax, 4	      2717	syntax.c	ELSE_2	FUNCTION_32	CALL_1
0x44ec	          0x4801c8	                            add rax, rcx	      2717	syntax.c	ELSE_2	FUNCTION_32	CALL_1
0x44ef	        0x488945f0	             mov qword [rbp - 0x10], rax	      2717	syntax.c	ELSE_2	FUNCTION_32	CALL_1
0x44f3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2721	syntax.c	ELSE_2	FUNCTION_32	IF_1
0x44f7	            0x8b00	                    mov eax, dword [rax]	      2721	syntax.c	ELSE_2	FUNCTION_32	IF_1
0x44f9	            0x85c0	                           test eax, eax	      2721	syntax.c	ELSE_2	FUNCTION_32	IF_1
0x44fb	     0xf883d020000	                            js 0x400477e	      2721	syntax.c	ELSE_2	FUNCTION_32	IF_1
0x4501	    0x488b05000000	            mov rax, qword [0x04004548] 	      2724	syntax.c	ELSE_2	FUNCTION_32	CALL_2
0x4508	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      2724	syntax.c	ELSE_2	FUNCTION_32	CALL_2
0x450f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2724	syntax.c	ELSE_2	FUNCTION_32	CALL_2
0x4513	            0x8b00	                    mov eax, dword [rax]	      2724	syntax.c	ELSE_2	FUNCTION_32	CALL_2
0x4515	          0x4863d0	                         movsxd rdx, eax	      2724	syntax.c	ELSE_2	FUNCTION_32	CALL_2
0x4518	          0x4889d0	                            mov rax, rdx	      2724	syntax.c	ELSE_2	FUNCTION_32	CALL_2
0x451b	        0x48c1e002	                              shl rax, 2	      2724	syntax.c	ELSE_2	FUNCTION_32	CALL_2
0x451f	          0x4801d0	                            add rax, rdx	      2724	syntax.c	ELSE_2	FUNCTION_32	CALL_2
0x4522	        0x48c1e005	                              shl rax, 5	      2724	syntax.c	ELSE_2	FUNCTION_32	CALL_2
0x4526	          0x4801c8	                            add rax, rcx	      2724	syntax.c	ELSE_2	FUNCTION_32	CALL_2
0x4529	        0x488945f8	                mov qword [rbp - 8], rax	      2724	syntax.c	ELSE_2	FUNCTION_32	CALL_2
0x452d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2725	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x4531	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2725	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x4535	          0x83e040	                           and eax, 0x40	      2725	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x4538	          0x4885c0	                           test rax, rax	      2725	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x453b	            0x7414	                            je 0x4004591	      2725	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x453d	        0x488b45f8	                mov rax, qword [rbp - 8]	      2726	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x4541	         0xfb74002	               movzx eax, word [rax + 2]	      2726	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x4545	           0xfbfd0	                           movsx edx, ax	      2726	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x4548	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2726	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x454c	          0x895004	                mov dword [rax + 4], edx	      2726	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x454f	            0xeb12	                           jmp 0x40045a3	      2726	syntax.c	ELSE_2	FUNCTION_32	IF_2
0x4551	        0x488b45f8	                mov rax, qword [rbp - 8]	      2728	syntax.c	ELSE_2	FUNCTION_32	ELSE_1
0x4555	         0xfb74054	           movzx eax, word [rax + 0x54] 	      2728	syntax.c	ELSE_2	FUNCTION_32	ELSE_1
0x4559	           0xfbfd0	                           movsx edx, ax	      2728	syntax.c	ELSE_2	FUNCTION_32	ELSE_1
0x455c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2728	syntax.c	ELSE_2	FUNCTION_32	ELSE_1
0x4560	          0x895004	                mov dword [rax + 4], edx	      2728	syntax.c	ELSE_2	FUNCTION_32	ELSE_1
0x4563	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2729	syntax.c	ELSE_2	FUNCTION_32	CALL_3
0x4567	          0x8b4004	                mov eax, dword [rax + 4]	      2729	syntax.c	ELSE_2	FUNCTION_32	CALL_3
0x456a	            0x89c7	                            mov edi, eax	      2729	syntax.c	ELSE_2	FUNCTION_32	CALL_3
0x456c	      0xe800000000	                          call 0x40045b1	      2729	syntax.c	ELSE_2	FUNCTION_32	CALL_3
0x4571	            0x89c2	                            mov edx, eax	      2729	syntax.c	ELSE_2	FUNCTION_32	CALL_3
0x4573	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2729	syntax.c	ELSE_2	FUNCTION_32	CALL_3
0x4577	          0x895060	             mov dword [rax + 0x60], edx	      2729	syntax.c	ELSE_2	FUNCTION_32	CALL_3
0x457a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2730	syntax.c	ELSE_2	FUNCTION_32
0x457e	          0x8b5004	                mov edx, dword [rax + 4]	      2730	syntax.c	ELSE_2	FUNCTION_32
0x4581	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2730	syntax.c	ELSE_2	FUNCTION_32
0x4585	          0x895008	                mov dword [rax + 8], edx	      2730	syntax.c	ELSE_2	FUNCTION_32
0x4588	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2731	syntax.c	ELSE_2	FUNCTION_32	IF_3
0x458c	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2731	syntax.c	ELSE_2	FUNCTION_32	IF_3
0x4590	          0x83e040	                           and eax, 0x40	      2731	syntax.c	ELSE_2	FUNCTION_32	IF_3
0x4593	          0x4885c0	                           test rax, rax	      2731	syntax.c	ELSE_2	FUNCTION_32	IF_3
0x4596	            0x740e	                            je 0x40045e6	      2731	syntax.c	ELSE_2	FUNCTION_32	IF_3
0x4598	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2732	syntax.c	ELSE_2	FUNCTION_32	IF_3
0x459c	    0x48c740780000	               mov qword [rax + 0x78], 0	      2732	syntax.c	ELSE_2	FUNCTION_32	IF_3
0x45a4	            0xeb10	                           jmp 0x40045f6	      2732	syntax.c	ELSE_2	FUNCTION_32	IF_3
0x45a6	        0x488b45f8	                mov rax, qword [rbp - 8]	      2734	syntax.c	FUNCTION_32
0x45aa	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2734	syntax.c	FUNCTION_32
0x45ae	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2734	syntax.c	FUNCTION_32
0x45b2	        0x48895078	             mov qword [rax + 0x78], rdx	      2734	syntax.c	FUNCTION_32
0x45b6	        0x488b45f8	                mov rax, qword [rbp - 8]	      2741	syntax.c	FUNCTION_32	IF_4
0x45ba	          0x8b4024	            mov eax, dword [rax + 0x24] 	      2741	syntax.c	FUNCTION_32	IF_4
0x45bd	          0x83e002	                              and eax, 2	      2741	syntax.c	FUNCTION_32	IF_4
0x45c0	            0x85c0	                           test eax, eax	      2741	syntax.c	FUNCTION_32	IF_4
0x45c2	     0xf8477010000	                            je 0x400477f	      2741	syntax.c	FUNCTION_32	IF_4
0x45c8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2741	syntax.c	FUNCTION_32	IF_4
0x45cc	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2741	syntax.c	FUNCTION_32	IF_4
0x45d0	          0x83e040	                           and eax, 0x40	      2741	syntax.c	FUNCTION_32	IF_4
0x45d3	          0x4885c0	                           test rax, rax	      2741	syntax.c	FUNCTION_32	IF_4
0x45d6	     0xf8563010000	                           jne 0x400477f	      2741	syntax.c	FUNCTION_32	IF_4
0x45dc	        0x837dec00	               cmp dword [rbp - 0x14], 0	      2743	syntax.c	FUNCTION_32	IF_4	IF_5
0x45e0	            0x7538	                           jne 0x400465a	      2743	syntax.c	FUNCTION_32	IF_4	IF_5
0x45e2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2745	syntax.c	FUNCTION_32	IF_4	IF_5
0x45e6	    0xc74060000000	               mov dword [rax + 0x60], 0	      2745	syntax.c	FUNCTION_32	IF_4	IF_5
0x45ed	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2746	syntax.c	FUNCTION_32	IF_4	IF_5
0x45f1	    0xc74008000000	                  mov dword [rax + 8], 0	      2746	syntax.c	FUNCTION_32	IF_4	IF_5
0x45f8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2747	syntax.c	FUNCTION_32	IF_4	IF_5	IF_6
0x45fc	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2747	syntax.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4600	          0x4885c0	                           test rax, rax	      2747	syntax.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4603	     0xf8536010000	                           jne 0x400477f	      2747	syntax.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4609	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2748	syntax.c	FUNCTION_32	IF_4	IF_5	IF_6
0x460d	    0x48c74078ffff	mov qword [rax + 0x78], 0xffffffffffffffff	      2748	syntax.c	FUNCTION_32	IF_4	IF_5	IF_6
0x4615	      0xe925010000	                           jmp 0x400477f	      2748	syntax.c	FUNCTION_32	IF_4	IF_5	IF_6
0x461a	    0x488b0d000000	            mov rcx, qword [0x04004661] 	      2752	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_4
0x4621	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2752	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_4
0x4624	          0x4863d0	                         movsxd rdx, eax	      2752	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_4
0x4627	          0x4889d0	                            mov rax, rdx	      2752	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_4
0x462a	        0x48c1e003	                              shl rax, 3	      2752	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_4
0x462e	          0x4801d0	                            add rax, rdx	      2752	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_4
0x4631	        0x48c1e004	                              shl rax, 4	      2752	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_4
0x4635	    0x482d90000000	                           sub rax, 0x90	      2752	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_4
0x463b	          0x4801c8	                            add rax, rcx	      2752	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_4
0x463e	          0x8b5060	            mov edx, dword [rax + 0x60] 	      2752	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_4
0x4641	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2752	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_4
0x4645	          0x895060	             mov dword [rax + 0x60], edx	      2752	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_4
0x4648	    0x488b0d000000	            mov rcx, qword [0x0400468f] 	      2753	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_5
0x464f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2753	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_5
0x4652	          0x4863d0	                         movsxd rdx, eax	      2753	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_5
0x4655	          0x4889d0	                            mov rax, rdx	      2753	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_5
0x4658	        0x48c1e003	                              shl rax, 3	      2753	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_5
0x465c	          0x4801d0	                            add rax, rdx	      2753	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_5
0x465f	        0x48c1e004	                              shl rax, 4	      2753	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_5
0x4663	    0x482d90000000	                           sub rax, 0x90	      2753	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_5
0x4669	          0x4801c8	                            add rax, rcx	      2753	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_5
0x466c	          0x8b5008	                mov edx, dword [rax + 8]	      2753	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_5
0x466f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2753	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_5
0x4673	          0x895008	                mov dword [rax + 8], edx	      2753	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_5
0x4676	    0x488b0d000000	            mov rcx, qword [0x040046bd] 	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_6
0x467d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_6
0x4680	          0x4863d0	                         movsxd rdx, eax	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_6
0x4683	          0x4889d0	                            mov rax, rdx	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_6
0x4686	        0x48c1e003	                              shl rax, 3	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_6
0x468a	          0x4801d0	                            add rax, rdx	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_6
0x468d	        0x48c1e004	                              shl rax, 4	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_6
0x4691	    0x482d90000000	                           sub rax, 0x90	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_6
0x4697	          0x4801c8	                            add rax, rcx	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_6
0x469a	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_6
0x469e	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_6
0x46a2	        0x488b4028	            mov rax, qword [rax + 0x28] 	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_6
0x46a6	        0x48894128	             mov qword [rcx + 0x28], rax	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_6
0x46aa	        0x48895130	             mov qword [rcx + 0x30], rdx	      2754	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_6
0x46ae	    0x488b0d000000	            mov rcx, qword [0x040046f5] 	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_7
0x46b5	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_7
0x46b8	          0x4863d0	                         movsxd rdx, eax	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_7
0x46bb	          0x4889d0	                            mov rax, rdx	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_7
0x46be	        0x48c1e003	                              shl rax, 3	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_7
0x46c2	          0x4801d0	                            add rax, rdx	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_7
0x46c5	        0x48c1e004	                              shl rax, 4	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_7
0x46c9	    0x482d90000000	                           sub rax, 0x90	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_7
0x46cf	          0x4801c8	                            add rax, rcx	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_7
0x46d2	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_7
0x46d6	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_7
0x46da	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_7
0x46de	        0x48894138	             mov qword [rcx + 0x38], rax	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_7
0x46e2	        0x48895140	             mov qword [rcx + 0x40], rdx	      2755	syntax.c	FUNCTION_32	IF_4	ELSE_3	CALL_7
0x46e6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2756	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x46ea	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2756	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x46ee	          0x4885c0	                           test rax, rax	      2756	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x46f1	            0x754c	                           jne 0x400477f	      2756	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x46f3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2758	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x46f7	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2758	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x46fb	    0x480d00000100	                         or rax, 0x10000	      2758	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x4701	          0x4889c2	                            mov rdx, rax	      2758	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x4704	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2758	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x4708	        0x48895068	             mov qword [rax + 0x68], rdx	      2758	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7
0x470c	    0x488b0d000000	            mov rcx, qword [0x04004753] 	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7	CALL_8
0x4713	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7	CALL_8
0x4716	          0x4863d0	                         movsxd rdx, eax	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7	CALL_8
0x4719	          0x4889d0	                            mov rax, rdx	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7	CALL_8
0x471c	        0x48c1e003	                              shl rax, 3	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7	CALL_8
0x4720	          0x4801d0	                            add rax, rdx	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7	CALL_8
0x4723	        0x48c1e004	                              shl rax, 4	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7	CALL_8
0x4727	    0x482d90000000	                           sub rax, 0x90	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7	CALL_8
0x472d	          0x4801c8	                            add rax, rcx	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7	CALL_8
0x4730	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7	CALL_8
0x4734	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7	CALL_8
0x4738	        0x48895078	             mov qword [rax + 0x78], rdx	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7	CALL_8
0x473c	            0xeb01	                           jmp 0x400477f	      2759	syntax.c	FUNCTION_32	IF_4	ELSE_3	IF_7	CALL_8
0x473e	              0x90	                                     nop	      2722	syntax.c	ELSE_2	FUNCTION_32	IF_1
0x473f	              0xc9	                                   leave	      2763	syntax.c	FUNCTION_32	ELSE_2
0x4740	              0xc3	                                     ret	      2763	syntax.c	FUNCTION_32	ELSE_2
put_id_list	FOR,1:DO,0:IF,6:SWITCH,0:functions,0:ELSE,5:WHILE,0:CALL,13	112
0x7a62	              0x55	                                push rbp	      4227	syntax.c	FUNCTION_69
0x7a63	          0x4889e5	                            mov rbp, rsp	      4227	syntax.c	FUNCTION_69
0x7a66	        0x4883ec30	                           sub rsp, 0x30	      4227	syntax.c	FUNCTION_69
0x7a6a	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4227	syntax.c	FUNCTION_69
0x7a6e	        0x488975e0	             mov qword [rbp - 0x20], rsi	      4227	syntax.c	FUNCTION_69
0x7a72	          0x8955dc	             mov dword [rbp - 0x24], edx	      4227	syntax.c	FUNCTION_69
0x7a75	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      4230	syntax.c	FUNCTION_69	CALL_1
0x7a78	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4230	syntax.c	FUNCTION_69	CALL_1
0x7a7c	            0x89d6	                            mov esi, edx	      4230	syntax.c	FUNCTION_69	CALL_1
0x7a7e	          0x4889c7	                            mov rdi, rax	      4230	syntax.c	FUNCTION_69	CALL_1
0x7a81	      0xe800000000	                          call 0x4007ac6	      4230	syntax.c	FUNCTION_69	CALL_1
0x7a86	      0xbf3d000000	                           mov edi, 0x3d	      4231	syntax.c	FUNCTION_69	CALL_2
0x7a8b	      0xe800000000	                          call 0x4007ad0	      4231	syntax.c	FUNCTION_69	CALL_2
0x7a90	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4232	syntax.c	FUNCTION_69	FOR_1
0x7a94	        0x488945f8	                mov qword [rbp - 8], rax	      4232	syntax.c	FUNCTION_69	FOR_1
0x7a98	      0xe94d010000	                           jmp 0x4007c2a	      4232	syntax.c	FUNCTION_69	FOR_1
0x7a9d	        0x488b45f8	                mov rax, qword [rbp - 8]	      4234	syntax.c	FUNCTION_69	FOR_1	IF_1
0x7aa1	           0xfb700	                   movzx eax, word [rax]	      4234	syntax.c	FUNCTION_69	FOR_1	IF_1
0x7aa4	        0x663d1f4e	                          cmp ax, 0x4e1f	      4234	syntax.c	FUNCTION_69	FOR_1	IF_1
0x7aa8	            0x7e3b	                           jle 0x4007b25	      4234	syntax.c	FUNCTION_69	FOR_1	IF_1
0x7aaa	        0x488b45f8	                mov rax, qword [rbp - 8]	      4234	syntax.c	FUNCTION_69	FOR_1	IF_1
0x7aae	           0xfb700	                   movzx eax, word [rax]	      4234	syntax.c	FUNCTION_69	FOR_1	IF_1
0x7ab1	        0x663d0752	                          cmp ax, 0x5207	      4234	syntax.c	FUNCTION_69	FOR_1	IF_1
0x7ab5	            0x7f2e	                            jg 0x4007b25	      4234	syntax.c	FUNCTION_69	FOR_1	IF_1
0x7ab7	        0x488b45f8	                mov rax, qword [rbp - 8]	      4236	syntax.c	FUNCTION_69	FOR_1	IF_1	IF_2
0x7abb	        0x4883c002	                              add rax, 2	      4236	syntax.c	FUNCTION_69	FOR_1	IF_1	IF_2
0x7abf	           0xfb700	                   movzx eax, word [rax]	      4236	syntax.c	FUNCTION_69	FOR_1	IF_1	IF_2
0x7ac2	          0x6685c0	                             test ax, ax	      4236	syntax.c	FUNCTION_69	FOR_1	IF_1	IF_2
0x7ac5	            0x740f	                            je 0x4007b16	      4236	syntax.c	FUNCTION_69	FOR_1	IF_1	IF_2
0x7ac7	      0xbf00000000	                              mov edi, 0	      4237	syntax.c	FUNCTION_69	FOR_1	IF_1	CALL_3
0x7acc	      0xe800000000	                          call 0x4007b11	      4237	syntax.c	FUNCTION_69	FOR_1	IF_1	CALL_3
0x7ad1	      0xe9f5000000	                           jmp 0x4007c0b	      4236	syntax.c	FUNCTION_69	FOR_1	IF_1	IF_2
0x7ad6	      0xbf00000000	                              mov edi, 0	      4239	syntax.c	FUNCTION_69	FOR_1	IF_1	CALL_4
0x7adb	      0xe800000000	                          call 0x4007b20	      4239	syntax.c	FUNCTION_69	FOR_1	IF_1	CALL_4
0x7ae0	      0xe9e6000000	                           jmp 0x4007c0b	      4236	syntax.c	FUNCTION_69	FOR_1	IF_1	IF_2
0x7ae5	        0x488b45f8	                mov rax, qword [rbp - 8]	      4241	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3
0x7ae9	           0xfb700	                   movzx eax, word [rax]	      4241	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3
0x7aec	        0x663d0752	                          cmp ax, 0x5207	      4241	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3
0x7af0	            0x7e1c	                           jle 0x4007b4e	      4241	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3
0x7af2	        0x488b45f8	                mov rax, qword [rbp - 8]	      4241	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3
0x7af6	           0xfb700	                   movzx eax, word [rax]	      4241	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3
0x7af9	        0x663def55	                          cmp ax, 0x55ef	      4241	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3
0x7afd	            0x7f0f	                            jg 0x4007b4e	      4241	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3
0x7aff	      0xbf00000000	                              mov edi, 0	      4243	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3	CALL_5
0x7b04	      0xe800000000	                          call 0x4007b49	      4243	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3	CALL_5
0x7b09	      0xe9bd000000	                           jmp 0x4007c0b	      4243	syntax.c	FUNCTION_69	FOR_1	ELSE_2	IF_3	CALL_5
0x7b0e	        0x488b45f8	                mov rax, qword [rbp - 8]	      4245	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4
0x7b12	           0xfb700	                   movzx eax, word [rax]	      4245	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4
0x7b15	        0x663def55	                          cmp ax, 0x55ef	      4245	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4
0x7b19	            0x7e1c	                           jle 0x4007b77	      4245	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4
0x7b1b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4245	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4
0x7b1f	           0xfb700	                   movzx eax, word [rax]	      4245	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4
0x7b22	        0x663dd759	                          cmp ax, 0x59d7	      4245	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4
0x7b26	            0x7f0f	                            jg 0x4007b77	      4245	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4
0x7b28	      0xbf00000000	                              mov edi, 0	      4247	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4	CALL_6
0x7b2d	      0xe800000000	                          call 0x4007b72	      4247	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4	CALL_6
0x7b32	      0xe994000000	                           jmp 0x4007c0b	      4247	syntax.c	FUNCTION_69	FOR_1	ELSE_3	IF_4	CALL_6
0x7b37	        0x488b45f8	                mov rax, qword [rbp - 8]	      4249	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5
0x7b3b	           0xfb700	                   movzx eax, word [rax]	      4249	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5
0x7b3e	        0x663dd759	                          cmp ax, 0x59d7	      4249	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5
0x7b42	            0x7e4d	                           jle 0x4007bd1	      4249	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5
0x7b44	        0x488b45f8	                mov rax, qword [rbp - 8]	      4251	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5
0x7b48	           0xfb700	                   movzx eax, word [rax]	      4251	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5
0x7b4b	        0x662dd859	                          sub ax, 0x59d8	      4251	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5
0x7b4f	        0x668945f6	                mov word [rbp - 0xa], ax	      4251	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5
0x7b53	      0xbf40000000	                           mov edi, 0x40	      4253	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_7
0x7b58	      0xe800000000	                          call 0x4007b9d	      4253	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_7
0x7b5d	    0x488b05000000	            mov rax, qword [0x04007ba4] 	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_9
0x7b64	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_9
0x7b68	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_9
0x7b6f	      0x480fbf55f6	             movsx rdx, word [rbp - 0xa]	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_9
0x7b74	          0x4889d0	                            mov rax, rdx	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_9
0x7b77	          0x4801c0	                            add rax, rax	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_9
0x7b7a	          0x4801d0	                            add rax, rdx	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_9
0x7b7d	        0x48c1e003	                              shl rax, 3	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_9
0x7b81	          0x4801c8	                            add rax, rcx	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_9
0x7b84	          0x488b00	                    mov rax, qword [rax]	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_9
0x7b87	          0x4889c7	                            mov rdi, rax	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_9
0x7b8a	      0xe800000000	                          call 0x4007bcf	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_9
0x7b8f	            0xeb3a	                           jmp 0x4007c0b	      4254	syntax.c	FUNCTION_69	FOR_1	ELSE_4	IF_5	CALL_9
0x7b91	    0x488b0d000000	            mov rcx, qword [0x04007bd8] 	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_11
0x7b98	        0x488b45f8	                mov rax, qword [rbp - 8]	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_11
0x7b9c	           0xfb700	                   movzx eax, word [rax]	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_11
0x7b9f	        0x480fbfd0	                           movsx rdx, ax	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_11
0x7ba3	          0x4889d0	                            mov rax, rdx	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_11
0x7ba6	        0x48c1e003	                              shl rax, 3	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_11
0x7baa	          0x4801d0	                            add rax, rdx	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_11
0x7bad	          0x4801c0	                            add rax, rax	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_11
0x7bb0	          0x4801d0	                            add rax, rdx	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_11
0x7bb3	        0x48c1e003	                              shl rax, 3	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_11
0x7bb7	    0x482d98000000	                           sub rax, 0x98	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_11
0x7bbd	          0x4801c8	                            add rax, rcx	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_11
0x7bc0	          0x488b00	                    mov rax, qword [rax]	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_11
0x7bc3	          0x4889c7	                            mov rdi, rax	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_11
0x7bc6	      0xe800000000	                          call 0x4007c0b	      4257	syntax.c	FUNCTION_69	FOR_1	CALL_11
0x7bcb	        0x488b45f8	                mov rax, qword [rbp - 8]	      4258	syntax.c	FUNCTION_69	FOR_1	IF_6
0x7bcf	        0x4883c002	                              add rax, 2	      4258	syntax.c	FUNCTION_69	FOR_1	IF_6
0x7bd3	           0xfb700	                   movzx eax, word [rax]	      4258	syntax.c	FUNCTION_69	FOR_1	IF_6
0x7bd6	          0x6685c0	                             test ax, ax	      4258	syntax.c	FUNCTION_69	FOR_1	IF_6
0x7bd9	            0x740a	                            je 0x4007c25	      4258	syntax.c	FUNCTION_69	FOR_1	IF_6
0x7bdb	      0xbf2c000000	                           mov edi, 0x2c	      4259	syntax.c	FUNCTION_69	FOR_1	CALL_12
0x7be0	      0xe800000000	                          call 0x4007c25	      4259	syntax.c	FUNCTION_69	FOR_1	CALL_12
0x7be5	      0x488345f802	                  add qword [rbp - 8], 2	      4232	syntax.c	FUNCTION_69	FOR_1
0x7bea	        0x488b45f8	                mov rax, qword [rbp - 8]	      4232	syntax.c	FUNCTION_69	FOR_1
0x7bee	           0xfb700	                   movzx eax, word [rax]	      4232	syntax.c	FUNCTION_69	FOR_1
0x7bf1	          0x6685c0	                             test ax, ax	      4232	syntax.c	FUNCTION_69	FOR_1
0x7bf4	     0xf85a3feffff	                           jne 0x4007add	      4232	syntax.c	FUNCTION_69	FOR_1
0x7bfa	      0xbf20000000	                           mov edi, 0x20	      4261	syntax.c	FUNCTION_69	CALL_13
0x7bff	      0xe800000000	                          call 0x4007c44	      4261	syntax.c	FUNCTION_69	CALL_13
0x7c04	              0x90	                                     nop	      4262	syntax.c	FUNCTION_69
0x7c05	              0xc9	                                   leave	      4262	syntax.c	FUNCTION_69
0x7c06	              0xc3	                                     ret	      4262	syntax.c	FUNCTION_69
syn_lines_msg	FOR,0:DO,0:IF,4:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,10	56
0x7225	              0x55	                                push rbp	      4026	syntax.c	FUNCTION_64
0x7226	          0x4889e5	                            mov rbp, rsp	      4026	syntax.c	FUNCTION_64
0x7229	    0x488b05000000	            mov rax, qword [0x04007270] 	      4027	syntax.c	FUNCTION_64	IF_1
0x7230	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4027	syntax.c	FUNCTION_64	IF_1
0x7234	    0x488b80b00200	           mov rax, qword [rax + 0x2b0] 	      4027	syntax.c	FUNCTION_64	IF_1
0x723b	          0x4885c0	                           test rax, rax	      4027	syntax.c	FUNCTION_64	IF_1
0x723e	            0x7f1b	                            jg 0x400729b	      4027	syntax.c	FUNCTION_64	IF_1
0x7240	    0x488b05000000	            mov rax, qword [0x04007287] 	      4028	syntax.c	FUNCTION_64	IF_1
0x7247	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4028	syntax.c	FUNCTION_64	IF_1
0x724b	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	      4028	syntax.c	FUNCTION_64	IF_1
0x7252	          0x4885c0	                           test rax, rax	      4028	syntax.c	FUNCTION_64	IF_1
0x7255	     0xf8ec3000000	                           jle 0x400735e	      4028	syntax.c	FUNCTION_64	IF_1
0x725b	      0xbf00000000	                              mov edi, 0	      4030	syntax.c	FUNCTION_64	IF_1	CALL_1
0x7260	      0xe800000000	                          call 0x40072a5	      4030	syntax.c	FUNCTION_64	IF_1	CALL_1
0x7265	    0x488b05000000	            mov rax, qword [0x040072ac] 	      4031	syntax.c	FUNCTION_64	IF_1	IF_2
0x726c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4031	syntax.c	FUNCTION_64	IF_1	IF_2
0x7270	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	      4031	syntax.c	FUNCTION_64	IF_1	IF_2
0x7277	          0x4885c0	                           test rax, rax	      4031	syntax.c	FUNCTION_64	IF_1	IF_2
0x727a	            0x7e4d	                           jle 0x4007309	      4031	syntax.c	FUNCTION_64	IF_1	IF_2
0x727c	      0xbf00000000	                              mov edi, 0	      4033	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x7281	      0xe800000000	                          call 0x40072c6	      4033	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x7286	          0x4889c7	                            mov rdi, rax	      4033	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x7289	      0xe800000000	                          call 0x40072ce	      4033	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_3
0x728e	    0x488b05000000	            mov rax, qword [0x040072d5] 	      4034	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_4
0x7295	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4034	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_4
0x7299	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	      4034	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_4
0x72a0	          0x4889c7	                            mov rdi, rax	      4034	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_4
0x72a3	      0xe800000000	                          call 0x40072e8	      4034	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_4
0x72a8	    0x488b05000000	            mov rax, qword [0x040072ef] 	      4035	syntax.c	FUNCTION_64	IF_1	IF_2	IF_3
0x72af	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4035	syntax.c	FUNCTION_64	IF_1	IF_2	IF_3
0x72b3	    0x488b80b00200	           mov rax, qword [rax + 0x2b0] 	      4035	syntax.c	FUNCTION_64	IF_1	IF_2	IF_3
0x72ba	          0x4885c0	                           test rax, rax	      4035	syntax.c	FUNCTION_64	IF_1	IF_2	IF_3
0x72bd	            0x740a	                            je 0x4007309	      4035	syntax.c	FUNCTION_64	IF_1	IF_2	IF_3
0x72bf	      0xbf00000000	                              mov edi, 0	      4036	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_5
0x72c4	      0xe800000000	                          call 0x4007309	      4036	syntax.c	FUNCTION_64	IF_1	IF_2	CALL_5
0x72c9	    0x488b05000000	            mov rax, qword [0x04007310] 	      4038	syntax.c	FUNCTION_64	IF_1	IF_4
0x72d0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4038	syntax.c	FUNCTION_64	IF_1	IF_4
0x72d4	    0x488b80b00200	           mov rax, qword [rax + 0x2b0] 	      4038	syntax.c	FUNCTION_64	IF_1	IF_4
0x72db	          0x4885c0	                           test rax, rax	      4038	syntax.c	FUNCTION_64	IF_1	IF_4
0x72de	            0x7e2c	                           jle 0x400734c	      4038	syntax.c	FUNCTION_64	IF_1	IF_4
0x72e0	      0xbf00000000	                              mov edi, 0	      4040	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_7
0x72e5	      0xe800000000	                          call 0x400732a	      4040	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_7
0x72ea	          0x4889c7	                            mov rdi, rax	      4040	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_7
0x72ed	      0xe800000000	                          call 0x4007332	      4040	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_7
0x72f2	    0x488b05000000	            mov rax, qword [0x04007339] 	      4041	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x72f9	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4041	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x72fd	    0x488b80b00200	           mov rax, qword [rax + 0x2b0] 	      4041	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x7304	          0x4889c7	                            mov rdi, rax	      4041	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x7307	      0xe800000000	                          call 0x400734c	      4041	syntax.c	FUNCTION_64	IF_1	IF_4	CALL_8
0x730c	      0xbf00000000	                              mov edi, 0	      4043	syntax.c	FUNCTION_64	IF_1	CALL_10
0x7311	      0xe800000000	                          call 0x4007356	      4043	syntax.c	FUNCTION_64	IF_1	CALL_10
0x7316	          0x4889c7	                            mov rdi, rax	      4043	syntax.c	FUNCTION_64	IF_1	CALL_10
0x7319	      0xe800000000	                          call 0x400735e	      4043	syntax.c	FUNCTION_64	IF_1	CALL_10
0x731e	              0x90	                                     nop	      4045	syntax.c	FUNCTION_64
0x731f	              0x5d	                                 pop rbp	      4045	syntax.c	FUNCTION_64
0x7320	              0xc3	                                     ret	      4045	syntax.c	FUNCTION_64
add_keyword	FOR,0:DO,0:IF,5:SWITCH,0:functions,0:ELSE,3:WHILE,0:CALL,13	138
0x8391	              0x55	                                push rbp	      4523	syntax.c	FUNCTION_74
0x8392	          0x4889e5	                            mov rbp, rsp	      4523	syntax.c	FUNCTION_74
0x8395	    0x4881ecc00000	                           sub rsp, 0xc0	      4523	syntax.c	FUNCTION_74
0x839c	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      4523	syntax.c	FUNCTION_74
0x83a3	    0x89b564ffffff	             mov dword [rbp - 0x9c], esi	      4523	syntax.c	FUNCTION_74
0x83a9	    0x899560ffffff	             mov dword [rbp - 0xa0], edx	      4523	syntax.c	FUNCTION_74
0x83af	    0x48898d58ffff	             mov qword [rbp - 0xa8], rcx	      4523	syntax.c	FUNCTION_74
0x83b6	    0x4c898550ffff	              mov qword [rbp - 0xb0], r8	      4523	syntax.c	FUNCTION_74
0x83bd	    0x44898d4cffff	             mov dword [rbp - 0xb4], r9d	      4523	syntax.c	FUNCTION_74
0x83c4	    0x64488b042528	                mov rax, qword fs:[0x28]	      4523	syntax.c	FUNCTION_74
0x83cd	        0x488945f8	                mov qword [rbp - 8], rax	      4523	syntax.c	FUNCTION_74
0x83d1	            0x31c0	                            xor eax, eax	      4523	syntax.c	FUNCTION_74
0x83d3	    0x488b05000000	            mov rax, qword [0x0400841a] 	      4531	syntax.c	FUNCTION_74	IF_1
0x83da	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4531	syntax.c	FUNCTION_74	IF_1
0x83de	    0x8b8058020000	           mov eax, dword [rax + 0x258] 	      4531	syntax.c	FUNCTION_74	IF_1
0x83e4	            0x85c0	                           test eax, eax	      4531	syntax.c	FUNCTION_74	IF_1
0x83e6	            0x742f	                            je 0x4008457	      4531	syntax.c	FUNCTION_74	IF_1
0x83e8	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x83ef	          0x4889c7	                            mov rdi, rax	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x83f2	      0xe800000000	                          call 0x4008437	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x83f7	            0x89c6	                            mov esi, eax	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x83f9	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x83fd	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x8404	      0xb951000000	                           mov ecx, 0x51	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x8409	          0x4889c7	                            mov rdi, rax	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x840c	      0xe800000000	                          call 0x4008451	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x8411	        0x48894580	             mov qword [rbp - 0x80], rax	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x8415	            0xeb0b	                           jmp 0x4008462	      4532	syntax.c	FUNCTION_74	IF_1	CALL_2
0x8417	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4535	syntax.c	FUNCTION_74	ELSE_1
0x841e	        0x48894580	             mov qword [rbp - 0x80], rax	      4535	syntax.c	FUNCTION_74	ELSE_1
0x8422	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4536	syntax.c	FUNCTION_74	CALL_4
0x8426	          0x4889c7	                            mov rdi, rax	      4536	syntax.c	FUNCTION_74	CALL_4
0x8429	      0xe800000000	                          call 0x400846e	      4536	syntax.c	FUNCTION_74	CALL_4
0x842e	          0x83c030	                           add eax, 0x30	      4536	syntax.c	FUNCTION_74	CALL_4
0x8431	            0x89c7	                            mov edi, eax	      4536	syntax.c	FUNCTION_74	CALL_4
0x8433	      0xe800000000	                          call 0x4008478	      4536	syntax.c	FUNCTION_74	CALL_4
0x8438	        0x48894588	             mov qword [rbp - 0x78], rax	      4536	syntax.c	FUNCTION_74	CALL_4
0x843c	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      4537	syntax.c	FUNCTION_74	IF_2
0x8441	     0xf848c010000	                            je 0x4008613	      4537	syntax.c	FUNCTION_74	IF_2
0x8447	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4539	syntax.c	FUNCTION_74	CALL_5
0x844b	        0x488d5028	                   lea rdx, [rax + 0x28]	      4539	syntax.c	FUNCTION_74	CALL_5
0x844f	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4539	syntax.c	FUNCTION_74	CALL_5
0x8453	          0x4889c6	                            mov rsi, rax	      4539	syntax.c	FUNCTION_74	CALL_5
0x8456	          0x4889d7	                            mov rdi, rdx	      4539	syntax.c	FUNCTION_74	CALL_5
0x8459	      0xe800000000	                          call 0x400849e	      4539	syntax.c	FUNCTION_74	CALL_5
0x845e	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      4540	syntax.c	FUNCTION_74
0x8464	            0x89c2	                            mov edx, eax	      4540	syntax.c	FUNCTION_74
0x8466	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4540	syntax.c	FUNCTION_74
0x846a	        0x6689500c	                mov word [rax + 0xc], dx	      4540	syntax.c	FUNCTION_74
0x846e	    0x8b1500000000	            mov edx, dword [0x040084b4] 	      4541	syntax.c	FUNCTION_74
0x8474	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4541	syntax.c	FUNCTION_74
0x8478	          0x895008	                mov dword [rax + 8], edx	      4541	syntax.c	FUNCTION_74
0x847b	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4542	syntax.c	FUNCTION_74
0x847f	    0x8b9560ffffff	             mov edx, dword [rbp - 0xa0]	      4542	syntax.c	FUNCTION_74
0x8485	          0x895020	             mov dword [rax + 0x20], edx	      4542	syntax.c	FUNCTION_74
0x8488	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4543	syntax.c	FUNCTION_74
0x848c	    0x8b954cffffff	             mov edx, dword [rbp - 0xb4]	      4543	syntax.c	FUNCTION_74
0x8492	          0x895024	             mov dword [rax + 0x24], edx	      4543	syntax.c	FUNCTION_74
0x8495	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4544	syntax.c	FUNCTION_74	CALL_6
0x849c	          0x4889c7	                            mov rdi, rax	      4544	syntax.c	FUNCTION_74	CALL_6
0x849f	      0xe83f3d0000	                   call sym.copy_id_list	      4544	syntax.c	FUNCTION_74	CALL_6
0x84a4	          0x4889c2	                            mov rdx, rax	      4544	syntax.c	FUNCTION_74	CALL_6
0x84a7	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4544	syntax.c	FUNCTION_74	CALL_6
0x84ab	        0x48895010	             mov qword [rax + 0x10], rdx	      4544	syntax.c	FUNCTION_74	CALL_6
0x84af	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      4545	syntax.c	FUNCTION_74	IF_3
0x84b7	            0x7415	                            je 0x400850e	      4545	syntax.c	FUNCTION_74	IF_3
0x84b9	    0x488b05000000	            mov rax, qword [0x04008500] 	      4546	syntax.c	FUNCTION_74	IF_3
0x84c0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4546	syntax.c	FUNCTION_74	IF_3
0x84c4	    0xc78098020000	              mov dword [rax + 0x298], 1	      4546	syntax.c	FUNCTION_74	IF_3
0x84ce	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4547	syntax.c	FUNCTION_74	CALL_7
0x84d5	          0x4889c7	                            mov rdi, rax	      4547	syntax.c	FUNCTION_74	CALL_7
0x84d8	      0xe8063d0000	                   call sym.copy_id_list	      4547	syntax.c	FUNCTION_74	CALL_7
0x84dd	          0x4889c2	                            mov rdx, rax	      4547	syntax.c	FUNCTION_74	CALL_7
0x84e0	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4547	syntax.c	FUNCTION_74	CALL_7
0x84e4	        0x48895018	             mov qword [rax + 0x18], rdx	      4547	syntax.c	FUNCTION_74	CALL_7
0x84e8	    0x488b05000000	            mov rax, qword [0x0400852f] 	      4549	syntax.c	FUNCTION_74	IF_4
0x84ef	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4549	syntax.c	FUNCTION_74	IF_4
0x84f3	    0x8b8058020000	           mov eax, dword [rax + 0x258] 	      4549	syntax.c	FUNCTION_74	IF_4
0x84f9	            0x85c0	                           test eax, eax	      4549	syntax.c	FUNCTION_74	IF_4
0x84fb	            0x741a	                            je 0x4008557	      4549	syntax.c	FUNCTION_74	IF_4
0x84fd	    0x488b05000000	            mov rax, qword [0x04008544] 	      4550	syntax.c	FUNCTION_74	IF_4
0x8504	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4550	syntax.c	FUNCTION_74	IF_4
0x8508	    0x480528010000	                          add rax, 0x128	      4550	syntax.c	FUNCTION_74	IF_4
0x850e	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      4550	syntax.c	FUNCTION_74	IF_4
0x8515	            0xeb12	                           jmp 0x4008569	      4550	syntax.c	FUNCTION_74	IF_4
0x8517	    0x488b05000000	            mov rax, qword [0x0400855e] 	      4552	syntax.c	FUNCTION_74	ELSE_2
0x851e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4552	syntax.c	FUNCTION_74	ELSE_2
0x8522	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      4552	syntax.c	FUNCTION_74	ELSE_2
0x8529	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4554	syntax.c	FUNCTION_74	CALL_8
0x852d	        0x4883c028	                           add rax, 0x28	      4554	syntax.c	FUNCTION_74	CALL_8
0x8531	          0x4889c7	                            mov rdi, rax	      4554	syntax.c	FUNCTION_74	CALL_8
0x8534	      0xe800000000	                          call 0x4008579	      4554	syntax.c	FUNCTION_74	CALL_8
0x8539	        0x48894590	             mov qword [rbp - 0x70], rax	      4554	syntax.c	FUNCTION_74	CALL_8
0x853d	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4555	syntax.c	FUNCTION_74	CALL_9
0x8541	        0x488d4828	                   lea rcx, [rax + 0x28]	      4555	syntax.c	FUNCTION_74	CALL_9
0x8545	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      4555	syntax.c	FUNCTION_74	CALL_9
0x8549	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4555	syntax.c	FUNCTION_74	CALL_9
0x8550	          0x4889ce	                            mov rsi, rcx	      4555	syntax.c	FUNCTION_74	CALL_9
0x8553	          0x4889c7	                            mov rdi, rax	      4555	syntax.c	FUNCTION_74	CALL_9
0x8556	      0xe800000000	                          call 0x400859b	      4555	syntax.c	FUNCTION_74	CALL_9
0x855b	        0x48894598	             mov qword [rbp - 0x68], rax	      4555	syntax.c	FUNCTION_74	CALL_9
0x855f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4556	syntax.c	FUNCTION_74	IF_5	CALL_10
0x8563	        0x488b4008	                mov rax, qword [rax + 8]	      4556	syntax.c	FUNCTION_74	IF_5	CALL_10
0x8567	          0x4885c0	                           test rax, rax	      4556	syntax.c	FUNCTION_74	IF_5	CALL_10
0x856a	            0x7410	                            je 0x40085bc	      4556	syntax.c	FUNCTION_74	IF_5	CALL_10
0x856c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4556	syntax.c	FUNCTION_74	IF_5	CALL_10
0x8570	        0x488b4008	                mov rax, qword [rax + 8]	      4556	syntax.c	FUNCTION_74	IF_5	CALL_10
0x8574	    0x483d00000000	                              cmp rax, 0	      4556	syntax.c	FUNCTION_74	IF_5	CALL_10
0x857a	            0x7532	                           jne 0x40085ee	      4556	syntax.c	FUNCTION_74	IF_5	CALL_10
0x857c	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4559	syntax.c	FUNCTION_74	IF_5
0x8580	    0x48c700000000	                      mov qword [rax], 0	      4559	syntax.c	FUNCTION_74	IF_5
0x8587	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x858b	        0x488d7828	                   lea rdi, [rax + 0x28]	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x858f	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x8593	        0x488b7598	             mov rsi, qword [rbp - 0x68]	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x8597	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x859e	          0x4889d1	                            mov rcx, rdx	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x85a1	          0x4889fa	                            mov rdx, rdi	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x85a4	          0x4889c7	                            mov rdi, rax	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x85a7	      0xe800000000	                          call 0x40085ec	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x85ac	            0xeb26	                           jmp 0x4008614	      4560	syntax.c	FUNCTION_74	IF_5	CALL_11
0x85ae	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4565	syntax.c	FUNCTION_74	ELSE_3	CALL_12
0x85b2	        0x488b4008	                mov rax, qword [rax + 8]	      4565	syntax.c	FUNCTION_74	ELSE_3	CALL_12
0x85b6	        0x488d50d8	                   lea rdx, [rax - 0x28]	      4565	syntax.c	FUNCTION_74	ELSE_3	CALL_12
0x85ba	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4565	syntax.c	FUNCTION_74	ELSE_3	CALL_12
0x85be	          0x488910	                    mov qword [rax], rdx	      4565	syntax.c	FUNCTION_74	ELSE_3	CALL_12
0x85c1	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4566	syntax.c	FUNCTION_74	ELSE_3	CALL_13
0x85c5	        0x488d5028	                   lea rdx, [rax + 0x28]	      4566	syntax.c	FUNCTION_74	ELSE_3	CALL_13
0x85c9	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4566	syntax.c	FUNCTION_74	ELSE_3	CALL_13
0x85cd	        0x48895008	                mov qword [rax + 8], rdx	      4566	syntax.c	FUNCTION_74	ELSE_3	CALL_13
0x85d1	            0xeb01	                           jmp 0x4008614	      4566	syntax.c	FUNCTION_74	ELSE_3	CALL_13
0x85d3	              0x90	                                     nop	      4538	syntax.c	FUNCTION_74	IF_2
0x85d4	        0x488b45f8	                mov rax, qword [rbp - 8]	      4568	syntax.c	FUNCTION_74
0x85d8	    0x644833042528	                xor rax, qword fs:[0x28]	      4568	syntax.c	FUNCTION_74
0x85e1	            0x7405	                            je 0x4008628	      4568	syntax.c	FUNCTION_74
0x85e3	      0xe800000000	                          call 0x4008628	      4568	syntax.c	FUNCTION_74
0x85e8	              0xc9	                                   leave	      4568	syntax.c	FUNCTION_74
0x85e9	              0xc3	                                     ret	      4568	syntax.c	FUNCTION_74
clear_current_state	FOR,1:DO,0:IF,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,2	28
0x572	              0x55	                                push rbp	       717	syntax.c	FUNCTION_4
0x573	          0x4889e5	                            mov rbp, rsp	       717	syntax.c	FUNCTION_4
0x576	        0x4883ec10	                           sub rsp, 0x10	       717	syntax.c	FUNCTION_4
0x57a	    0x488b05000000	            mov rax, qword [0x040005c1] 	       721	syntax.c	FUNCTION_4
0x581	        0x488945f8	                mov qword [rbp - 8], rax	       721	syntax.c	FUNCTION_4
0x585	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       722	syntax.c	FUNCTION_4	FOR_1
0x58c	            0xeb31	                           jmp 0x40005ff	       722	syntax.c	FUNCTION_4	FOR_1
0x58e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       723	syntax.c	FUNCTION_4	CALL_1
0x591	          0x4863d0	                         movsxd rdx, eax	       723	syntax.c	FUNCTION_4	CALL_1
0x594	          0x4889d0	                            mov rax, rdx	       723	syntax.c	FUNCTION_4	CALL_1
0x597	        0x48c1e003	                              shl rax, 3	       723	syntax.c	FUNCTION_4	CALL_1
0x59b	          0x4801d0	                            add rax, rdx	       723	syntax.c	FUNCTION_4	CALL_1
0x59e	        0x48c1e004	                              shl rax, 4	       723	syntax.c	FUNCTION_4	CALL_1
0x5a2	          0x4889c2	                            mov rdx, rax	       723	syntax.c	FUNCTION_4	CALL_1
0x5a5	        0x488b45f8	                mov rax, qword [rbp - 8]	       723	syntax.c	FUNCTION_4	CALL_1
0x5a9	          0x4801d0	                            add rax, rdx	       723	syntax.c	FUNCTION_4	CALL_1
0x5ac	    0x488b80880000	            mov rax, qword [rax + 0x88] 	       723	syntax.c	FUNCTION_4	CALL_1
0x5b3	          0x4889c7	                            mov rdi, rax	       723	syntax.c	FUNCTION_4	CALL_1
0x5b6	      0xe800000000	                          call 0x40005fb	       723	syntax.c	FUNCTION_4	CALL_1
0x5bb	        0x8345f401	                add dword [rbp - 0xc], 1	       722	syntax.c	FUNCTION_4	FOR_1
0x5bf	    0x8b0500000000	            mov eax, dword [0x04000605] 	       722	syntax.c	FUNCTION_4	FOR_1
0x5c5	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       722	syntax.c	FUNCTION_4	FOR_1
0x5c8	            0x7fc4	                            jg 0x40005ce	       722	syntax.c	FUNCTION_4	FOR_1
0x5ca	      0xbf00000000	                              mov edi, 0	       724	syntax.c	FUNCTION_4	CALL_2
0x5cf	      0xe800000000	                          call 0x4000614	       724	syntax.c	FUNCTION_4	CALL_2
0x5d4	              0x90	                                     nop	       725	syntax.c	FUNCTION_4
0x5d5	              0xc9	                                   leave	       725	syntax.c	FUNCTION_4
0x5d6	              0xc3	                                     ret	       725	syntax.c	FUNCTION_4
syn_update_ends	FOR,3:DO,0:IF,7:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,6	146
0xf10	              0x55	                                push rbp	      1087	syntax.c	FUNCTION_10
0xf11	          0x4889e5	                            mov rbp, rsp	      1087	syntax.c	FUNCTION_10
0xf14	        0x4883ec20	                           sub rsp, 0x20	      1087	syntax.c	FUNCTION_10
0xf18	          0x897dec	             mov dword [rbp - 0x14], edi	      1087	syntax.c	FUNCTION_10
0xf1b	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1092	syntax.c	FUNCTION_10	IF_1
0xf1f	     0xf84e2000000	                            je 0x4001047	      1092	syntax.c	FUNCTION_10	IF_1
0xf25	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0xf2c	      0xe9c7000000	                           jmp 0x4001038	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0xf31	    0x488b0d000000	            mov rcx, qword [0x04000f78] 	      1098	syntax.c	FUNCTION_10	IF_1	FOR_1	CALL_1
0xf38	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1098	syntax.c	FUNCTION_10	IF_1	FOR_1	CALL_1
0xf3b	          0x4863d0	                         movsxd rdx, eax	      1098	syntax.c	FUNCTION_10	IF_1	FOR_1	CALL_1
0xf3e	          0x4889d0	                            mov rax, rdx	      1098	syntax.c	FUNCTION_10	IF_1	FOR_1	CALL_1
0xf41	        0x48c1e003	                              shl rax, 3	      1098	syntax.c	FUNCTION_10	IF_1	FOR_1	CALL_1
0xf45	          0x4801d0	                            add rax, rdx	      1098	syntax.c	FUNCTION_10	IF_1	FOR_1	CALL_1
0xf48	        0x48c1e004	                              shl rax, 4	      1098	syntax.c	FUNCTION_10	IF_1	FOR_1	CALL_1
0xf4c	          0x4801c8	                            add rax, rcx	      1098	syntax.c	FUNCTION_10	IF_1	FOR_1	CALL_1
0xf4f	        0x488945f8	                mov qword [rbp - 8], rax	      1098	syntax.c	FUNCTION_10	IF_1	FOR_1	CALL_1
0xf53	        0x488b45f8	                mov rax, qword [rbp - 8]	      1099	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0xf57	            0x8b00	                    mov eax, dword [rax]	      1099	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0xf59	            0x85c0	                           test eax, eax	      1099	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0xf5b	     0xf8893000000	                            js 0x4001034	      1099	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0xf61	    0x488b05000000	            mov rax, qword [0x04000fa8] 	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2	CALL_2
0xf68	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2	CALL_2
0xf6f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2	CALL_2
0xf73	            0x8b00	                    mov eax, dword [rax]	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2	CALL_2
0xf75	          0x4863d0	                         movsxd rdx, eax	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2	CALL_2
0xf78	          0x4889d0	                            mov rax, rdx	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2	CALL_2
0xf7b	        0x48c1e002	                              shl rax, 2	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2	CALL_2
0xf7f	          0x4801d0	                            add rax, rdx	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2	CALL_2
0xf82	        0x48c1e005	                              shl rax, 5	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2	CALL_2
0xf86	          0x4801c8	                            add rax, rcx	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2	CALL_2
0xf89	           0xfb600	                   movzx eax, byte [rax]	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2	CALL_2
0xf8c	            0x3c01	                               cmp al, 1	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2	CALL_2
0xf8e	            0x7564	                           jne 0x4001034	      1100	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2	CALL_2
0xf90	        0x488b45f8	                mov rax, qword [rbp - 8]	      1102	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0xf94	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      1102	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0xf98	    0x488b05000000	            mov rax, qword [0x04000fdf] 	      1102	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0xf9f	          0x4839c2	                            cmp rdx, rax	      1102	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0xfa2	            0x7d50	                           jge 0x4001034	      1102	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0xfa4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1104	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0xfa8	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1104	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0xfac	          0x80cc80	                             or ah, 0x80	      1104	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0xfaf	          0x4889c2	                            mov rdx, rax	      1104	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0xfb2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1104	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0xfb6	        0x48895068	             mov qword [rax + 0x68], rdx	      1104	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0xfba	        0x488b45f8	                mov rax, qword [rbp - 8]	      1105	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0xfbe	    0x48c740180000	               mov qword [rax + 0x18], 0	      1105	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0xfc6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1106	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0xfca	    0xc74020000000	               mov dword [rax + 0x20], 0	      1106	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0xfd1	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1107	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0xfd5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1107	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0xfd9	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      1107	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0xfdd	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1107	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0xfe1	        0x48894138	             mov qword [rcx + 0x38], rax	      1107	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0xfe5	        0x48895140	             mov qword [rcx + 0x40], rdx	      1107	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0xfe9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1108	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0xfed	    0xc7405c010000	               mov dword [rax + 0x5c], 1	      1108	syntax.c	FUNCTION_10	IF_1	FOR_1	IF_2
0xff4	        0x8345f001	               add dword [rbp - 0x10], 1	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0xff8	    0x8b0500000000	            mov eax, dword [0x0400103e] 	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0xffe	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x1001	     0xf8f2affffff	                            jg 0x4000f71	      1096	syntax.c	FUNCTION_10	IF_1	FOR_1
0x1007	    0x8b0500000000	            mov eax, dword [0x0400104d] 	      1122	syntax.c	FUNCTION_10
0x100d	          0x83e801	                              sub eax, 1	      1122	syntax.c	FUNCTION_10
0x1010	          0x8945f0	             mov dword [rbp - 0x10], eax	      1122	syntax.c	FUNCTION_10
0x1013	    0x8b0500000000	            mov eax, dword [0x04001059] 	      1123	syntax.c	FUNCTION_10	IF_3
0x1019	            0x85c0	                           test eax, eax	      1123	syntax.c	FUNCTION_10	IF_3
0x101b	            0x7840	                            js 0x400109d	      1123	syntax.c	FUNCTION_10	IF_3
0x101d	            0xeb30	                           jmp 0x400108f	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
0x101f	    0x488b0d000000	            mov rcx, qword [0x04001066] 	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4	CALL_3
0x1026	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4	CALL_3
0x1029	          0x4863d0	                         movsxd rdx, eax	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4	CALL_3
0x102c	          0x4889d0	                            mov rax, rdx	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4	CALL_3
0x102f	        0x48c1e003	                              shl rax, 3	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4	CALL_3
0x1033	          0x4801d0	                            add rax, rdx	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4	CALL_3
0x1036	        0x48c1e004	                              shl rax, 4	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4	CALL_3
0x103a	          0x4801c8	                            add rax, rcx	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4	CALL_3
0x103d	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4	CALL_3
0x1041	      0x2500400000	                         and eax, 0x4000	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4	CALL_3
0x1046	          0x4885c0	                           test rax, rax	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4	CALL_3
0x1049	            0x7511	                           jne 0x400109c	      1125	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4	CALL_3
0x104b	        0x836df001	               sub dword [rbp - 0x10], 1	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
0x104f	    0x8b0500000000	            mov eax, dword [0x04001095] 	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
0x1055	          0x3945f0	            cmp dword [rbp - 0x10], eax 	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
0x1058	            0x7fc5	                            jg 0x400105f	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
0x105a	            0xeb01	                           jmp 0x400109d	      1124	syntax.c	FUNCTION_10	IF_3	FOR_2
0x105c	              0x90	                                     nop	      1126	syntax.c	FUNCTION_10	IF_3	FOR_2	IF_4
0x105d	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1128	syntax.c	FUNCTION_10
0x1064	      0xe9c1000000	                           jmp 0x400116a	      1129	syntax.c	FUNCTION_10	FOR_3
0x1069	    0x488b0d000000	            mov rcx, qword [0x040010b0] 	      1131	syntax.c	FUNCTION_10	FOR_3	CALL_4
0x1070	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      1131	syntax.c	FUNCTION_10	FOR_3	CALL_4
0x1073	          0x4863d0	                         movsxd rdx, eax	      1131	syntax.c	FUNCTION_10	FOR_3	CALL_4
0x1076	          0x4889d0	                            mov rax, rdx	      1131	syntax.c	FUNCTION_10	FOR_3	CALL_4
0x1079	        0x48c1e003	                              shl rax, 3	      1131	syntax.c	FUNCTION_10	FOR_3	CALL_4
0x107d	          0x4801d0	                            add rax, rdx	      1131	syntax.c	FUNCTION_10	FOR_3	CALL_4
0x1080	        0x48c1e004	                              shl rax, 4	      1131	syntax.c	FUNCTION_10	FOR_3	CALL_4
0x1084	          0x4801c8	                            add rax, rcx	      1131	syntax.c	FUNCTION_10	FOR_3	CALL_4
0x1087	        0x488945f8	                mov qword [rbp - 8], rax	      1131	syntax.c	FUNCTION_10	FOR_3	CALL_4
0x108b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1132	syntax.c	FUNCTION_10	FOR_3	IF_5
0x108f	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1132	syntax.c	FUNCTION_10	FOR_3	IF_5
0x1093	      0x2500040000	                          and eax, 0x400	      1132	syntax.c	FUNCTION_10	FOR_3	IF_5
0x1098	          0x4885c0	                           test rax, rax	      1132	syntax.c	FUNCTION_10	FOR_3	IF_5
0x109b	            0x7520	                           jne 0x40010fd	      1132	syntax.c	FUNCTION_10	FOR_3	IF_5
0x109d	        0x837df400	                cmp dword [rbp - 0xc], 0	      1133	syntax.c	FUNCTION_10	FOR_3	IF_5
0x10a1	            0x7406	                            je 0x40010e9	      1133	syntax.c	FUNCTION_10	FOR_3	IF_5
0x10a3	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1133	syntax.c	FUNCTION_10	FOR_3	IF_5
0x10a7	            0x7414	                            je 0x40010fd	      1133	syntax.c	FUNCTION_10	FOR_3	IF_5
0x10a9	    0x8b0500000000	            mov eax, dword [0x040010ef] 	      1134	syntax.c	FUNCTION_10	FOR_3	IF_5
0x10af	          0x83e801	                              sub eax, 1	      1134	syntax.c	FUNCTION_10	FOR_3	IF_5
0x10b2	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	      1134	syntax.c	FUNCTION_10	FOR_3	IF_5
0x10b5	            0x756f	                           jne 0x4001166	      1134	syntax.c	FUNCTION_10	FOR_3	IF_5
0x10b7	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1134	syntax.c	FUNCTION_10	FOR_3	IF_5
0x10bb	            0x7469	                            je 0x4001166	      1134	syntax.c	FUNCTION_10	FOR_3	IF_5
0x10bd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1136	syntax.c	FUNCTION_10	FOR_3	IF_5
0x10c1	    0xc74030000000	               mov dword [rax + 0x30], 0	      1136	syntax.c	FUNCTION_10	FOR_3	IF_5
0x10c8	    0x488b15000000	            mov rdx, qword [0x0400110f] 	      1137	syntax.c	FUNCTION_10	FOR_3	IF_5
0x10cf	        0x488b45f8	                mov rax, qword [rbp - 8]	      1137	syntax.c	FUNCTION_10	FOR_3	IF_5
0x10d3	        0x48895028	             mov qword [rax + 0x28], rdx	      1137	syntax.c	FUNCTION_10	FOR_3	IF_5
0x10d7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1139	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_6
0x10db	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1139	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_6
0x10df	      0x2500800000	                         and eax, 0x8000	      1139	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_6
0x10e4	          0x4885c0	                           test rax, rax	      1139	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_6
0x10e7	            0x751e	                           jne 0x4001147	      1139	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_6
0x10e9	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_5
0x10ed	           0xf94c0	                                 sete al	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_5
0x10f0	           0xfb6d0	                           movzx edx, al	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_5
0x10f3	    0x8b0d00000000	            mov ecx, dword [0x04001139] 	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_5
0x10f9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_5
0x10fd	            0x89ce	                            mov esi, ecx	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_5
0x10ff	          0x4889c7	                            mov rdi, rax	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_5
0x1102	      0xe834380000	                  call sym.update_si_end	      1140	syntax.c	FUNCTION_10	FOR_3	IF_5	CALL_5
0x1107	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1142	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_7
0x110b	            0x7519	                           jne 0x4001166	      1142	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_7
0x110d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1142	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_7
0x1111	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1142	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_7
0x1115	      0x2500040000	                          and eax, 0x400	      1142	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_7
0x111a	          0x4885c0	                           test rax, rax	      1142	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_7
0x111d	            0x7407	                            je 0x4001166	      1142	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_7
0x111f	    0xc745f4010000	                mov dword [rbp - 0xc], 1	      1143	syntax.c	FUNCTION_10	FOR_3	IF_5	IF_7
0x1126	        0x8345f001	               add dword [rbp - 0x10], 1	      1129	syntax.c	FUNCTION_10	FOR_3
0x112a	    0x8b0500000000	            mov eax, dword [0x04001170] 	      1129	syntax.c	FUNCTION_10	FOR_3
0x1130	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	      1129	syntax.c	FUNCTION_10	FOR_3
0x1133	     0xf8f30ffffff	                            jg 0x40010a9	      1129	syntax.c	FUNCTION_10	FOR_3
0x1139	      0xe803360000	                  call sym.check_keepend	      1146	syntax.c	FUNCTION_10	CALL_6
0x113e	              0x90	                                     nop	      1147	syntax.c	FUNCTION_10
0x113f	              0xc9	                                   leave	      1147	syntax.c	FUNCTION_10
0x1140	              0xc3	                                     ret	      1147	syntax.c	FUNCTION_10
syn_clear_keyword	FOR,2:DO,0:IF,4:SWITCH,0:functions,0:ELSE,3:WHILE,0:CALL,9	86
0x817d	              0x55	                                push rbp	      4437	syntax.c	FUNCTION_72
0x817e	          0x4889e5	                            mov rbp, rsp	      4437	syntax.c	FUNCTION_72
0x8181	        0x4883ec40	                           sub rsp, 0x40	      4437	syntax.c	FUNCTION_72
0x8185	          0x897dcc	             mov dword [rbp - 0x34], edi	      4437	syntax.c	FUNCTION_72
0x8188	        0x488975c0	             mov qword [rbp - 0x40], rsi	      4437	syntax.c	FUNCTION_72
0x818c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4444	syntax.c	FUNCTION_72	CALL_1
0x8190	          0x4889c7	                            mov rdi, rax	      4444	syntax.c	FUNCTION_72	CALL_1
0x8193	      0xe800000000	                          call 0x40081d8	      4444	syntax.c	FUNCTION_72	CALL_1
0x8198	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4445	syntax.c	FUNCTION_72
0x819c	        0x488b4008	                mov rax, qword [rax + 8]	      4445	syntax.c	FUNCTION_72
0x81a0	          0x8945dc	             mov dword [rbp - 0x24], eax	      4445	syntax.c	FUNCTION_72
0x81a3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4446	syntax.c	FUNCTION_72	FOR_1
0x81a7	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4446	syntax.c	FUNCTION_72	FOR_1
0x81ab	        0x488945e0	             mov qword [rbp - 0x20], rax	      4446	syntax.c	FUNCTION_72	FOR_1
0x81af	      0xe9fc000000	                           jmp 0x40082f0	      4446	syntax.c	FUNCTION_72	FOR_1
0x81b4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x81b8	        0x488b4008	                mov rax, qword [rax + 8]	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x81bc	          0x4885c0	                           test rax, rax	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x81bf	     0xf84e6000000	                            je 0x40082eb	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x81c5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x81c9	        0x488b4008	                mov rax, qword [rax + 8]	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x81cd	    0x483d00000000	                              cmp rax, 0	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x81d3	     0xf84d2000000	                            je 0x40082eb	      4448	syntax.c	FUNCTION_72	FOR_1	IF_1	CALL_2
0x81d9	        0x836ddc01	               sub dword [rbp - 0x24], 1	      4450	syntax.c	FUNCTION_72	FOR_1	IF_1
0x81dd	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      4451	syntax.c	FUNCTION_72	FOR_1	IF_1
0x81e5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	CALL_3
0x81e9	        0x488b4008	                mov rax, qword [rax + 8]	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	CALL_3
0x81ed	        0x4883e828	                           sub rax, 0x28	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	CALL_3
0x81f1	        0x488945e8	             mov qword [rbp - 0x18], rax	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	CALL_3
0x81f5	      0xe9a6000000	                           jmp 0x40082e0	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	CALL_3
0x81fa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4454	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x81fe	         0xfb7400c	            movzx eax, word [rax + 0xc] 	      4454	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x8202	              0x98	                                    cwde	      4454	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x8203	          0x3b45cc	             cmp eax, dword [rbp - 0x34]	      4454	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x8206	     0xf8581000000	                           jne 0x40082cd	      4454	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x820c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4456	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x8210	          0x488b00	                    mov rax, qword [rax]	      4456	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x8213	        0x488945f8	                mov qword [rbp - 8], rax	      4456	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x8217	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4457	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x821c	            0x752e	                           jne 0x400828c	      4457	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x821e	      0x48837df800	                  cmp qword [rbp - 8], 0	      4459	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	IF_4
0x8223	            0x7515	                           jne 0x400827a	      4459	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	IF_4
0x8225	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4460	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_4
0x8229	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4460	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_4
0x822d	          0x4889d6	                            mov rsi, rdx	      4460	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_4
0x8230	          0x4889c7	                            mov rdi, rax	      4460	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_4
0x8233	      0xe800000000	                          call 0x4008278	      4460	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_4
0x8238	            0xeb1d	                           jmp 0x4008297	      4460	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_4
0x823a	        0x488b45f8	                mov rax, qword [rbp - 8]	      4462	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_5
0x823e	        0x488d5028	                   lea rdx, [rax + 0x28]	      4462	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_5
0x8242	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4462	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_5
0x8246	        0x48895008	                mov qword [rax + 8], rdx	      4462	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_5
0x824a	            0xeb0b	                           jmp 0x4008297	      4462	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	IF_3	CALL_5
0x824c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4465	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	ELSE_2
0x8250	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4465	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	ELSE_2
0x8254	          0x488910	                    mov qword [rax], rdx	      4465	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	ELSE_2
0x8257	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4466	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_6
0x825b	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4466	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_6
0x825f	          0x4889c7	                            mov rdi, rax	      4466	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_6
0x8262	      0xe800000000	                          call 0x40082a7	      4466	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_6
0x8267	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4467	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_7
0x826b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4467	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_7
0x826f	          0x4889c7	                            mov rdi, rax	      4467	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_7
0x8272	      0xe800000000	                          call 0x40082b7	      4467	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_7
0x8277	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4468	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_8
0x827b	          0x4889c7	                            mov rdi, rax	      4468	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_8
0x827e	      0xe800000000	                          call 0x40082c3	      4468	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2	CALL_8
0x8283	        0x488b45f8	                mov rax, qword [rbp - 8]	      4469	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x8287	        0x488945e8	             mov qword [rbp - 0x18], rax	      4469	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x828b	            0xeb13	                           jmp 0x40082e0	      4469	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	IF_2
0x828d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4473	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	ELSE_3
0x8291	        0x488945f0	             mov qword [rbp - 0x10], rax	      4473	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	ELSE_3
0x8295	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4474	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	ELSE_3
0x8299	          0x488b00	                    mov rax, qword [rax]	      4474	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	ELSE_3
0x829c	        0x488945e8	             mov qword [rbp - 0x18], rax	      4474	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	ELSE_3
0x82a0	      0x48837de800	               cmp qword [rbp - 0x18], 0	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	CALL_3
0x82a5	     0xf854fffffff	                           jne 0x400823a	      4452	syntax.c	FUNCTION_72	FOR_1	IF_1	FOR_2	CALL_3
0x82ab	      0x488345e010	            add qword [rbp - 0x20], 0x10	      4446	syntax.c	FUNCTION_72	FOR_1
0x82b0	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      4446	syntax.c	FUNCTION_72	FOR_1
0x82b4	     0xf8ffafeffff	                            jg 0x40081f4	      4446	syntax.c	FUNCTION_72	FOR_1
0x82ba	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4479	syntax.c	FUNCTION_72	CALL_9
0x82be	          0x4889c7	                            mov rdi, rax	      4479	syntax.c	FUNCTION_72	CALL_9
0x82c1	      0xe800000000	                          call 0x4008306	      4479	syntax.c	FUNCTION_72	CALL_9
0x82c6	              0x90	                                     nop	      4480	syntax.c	FUNCTION_72
0x82c7	              0xc9	                                   leave	      4480	syntax.c	FUNCTION_72
0x82c8	              0xc3	                                     ret	      4480	syntax.c	FUNCTION_72
clear_keywtab	FOR,2:DO,0:IF,1:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,7	55
0x82c9	              0x55	                                push rbp	      4487	syntax.c	FUNCTION_73
0x82ca	          0x4889e5	                            mov rbp, rsp	      4487	syntax.c	FUNCTION_73
0x82cd	        0x4883ec30	                           sub rsp, 0x30	      4487	syntax.c	FUNCTION_73
0x82d1	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      4487	syntax.c	FUNCTION_73
0x82d5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4493	syntax.c	FUNCTION_73
0x82d9	        0x488b4008	                mov rax, qword [rax + 8]	      4493	syntax.c	FUNCTION_73
0x82dd	          0x8945e4	             mov dword [rbp - 0x1c], eax	      4493	syntax.c	FUNCTION_73
0x82e0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4494	syntax.c	FUNCTION_73	FOR_1
0x82e4	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4494	syntax.c	FUNCTION_73	FOR_1
0x82e8	        0x488945e8	             mov qword [rbp - 0x18], rax	      4494	syntax.c	FUNCTION_73	FOR_1
0x82ec	            0xeb7e	                           jmp 0x40083ac	      4494	syntax.c	FUNCTION_73	FOR_1
0x82ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x82f2	        0x488b4008	                mov rax, qword [rax + 8]	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x82f6	          0x4885c0	                           test rax, rax	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x82f9	            0x746c	                            je 0x40083a7	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x82fb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x82ff	        0x488b4008	                mov rax, qword [rax + 8]	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x8303	    0x483d00000000	                              cmp rax, 0	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x8309	            0x745c	                            je 0x40083a7	      4496	syntax.c	FUNCTION_73	FOR_1	IF_1	CALL_1
0x830b	        0x836de401	               sub dword [rbp - 0x1c], 1	      4498	syntax.c	FUNCTION_73	FOR_1	IF_1
0x830f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_2
0x8313	        0x488b4008	                mov rax, qword [rax + 8]	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_2
0x8317	        0x4883e828	                           sub rax, 0x28	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_2
0x831b	        0x488945f0	             mov qword [rbp - 0x10], rax	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_2
0x831f	            0xeb3f	                           jmp 0x40083a0	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_2
0x8321	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4501	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2
0x8325	          0x488b00	                    mov rax, qword [rax]	      4501	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2
0x8328	        0x488945f8	                mov qword [rbp - 8], rax	      4501	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2
0x832c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4502	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_3
0x8330	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4502	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_3
0x8334	          0x4889c7	                            mov rdi, rax	      4502	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_3
0x8337	      0xe800000000	                          call 0x400837c	      4502	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_3
0x833c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4503	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_4
0x8340	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4503	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_4
0x8344	          0x4889c7	                            mov rdi, rax	      4503	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_4
0x8347	      0xe800000000	                          call 0x400838c	      4503	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_4
0x834c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4504	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_5
0x8350	          0x4889c7	                            mov rdi, rax	      4504	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_5
0x8353	      0xe800000000	                          call 0x4008398	      4504	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_5
0x8358	        0x488b45f8	                mov rax, qword [rbp - 8]	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_2
0x835c	        0x488945f0	             mov qword [rbp - 0x10], rax	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_2
0x8360	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_2
0x8365	            0x75ba	                           jne 0x4008361	      4499	syntax.c	FUNCTION_73	FOR_1	IF_1	FOR_2	CALL_2
0x8367	      0x488345e810	            add qword [rbp - 0x18], 0x10	      4494	syntax.c	FUNCTION_73	FOR_1
0x836c	        0x837de400	               cmp dword [rbp - 0x1c], 0	      4494	syntax.c	FUNCTION_73	FOR_1
0x8370	     0xf8f78ffffff	                            jg 0x400832e	      4494	syntax.c	FUNCTION_73	FOR_1
0x8376	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4508	syntax.c	FUNCTION_73	CALL_6
0x837a	          0x4889c7	                            mov rdi, rax	      4508	syntax.c	FUNCTION_73	CALL_6
0x837d	      0xe800000000	                          call 0x40083c2	      4508	syntax.c	FUNCTION_73	CALL_6
0x8382	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4509	syntax.c	FUNCTION_73	CALL_7
0x8386	          0x4889c7	                            mov rdi, rax	      4509	syntax.c	FUNCTION_73	CALL_7
0x8389	      0xe800000000	                          call 0x40083ce	      4509	syntax.c	FUNCTION_73	CALL_7
0x838e	              0x90	                                     nop	      4510	syntax.c	FUNCTION_73
0x838f	              0xc9	                                   leave	      4510	syntax.c	FUNCTION_73
0x8390	              0xc3	                                     ret	      4510	syntax.c	FUNCTION_73
highlight_list	FOR,2:DO,0:IF,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,3	24
0x147e2	              0x55	                                push rbp	     10278	syntax.c	FUNCTION_165
0x147e3	          0x4889e5	                            mov rbp, rsp	     10278	syntax.c	FUNCTION_165
0x147e6	        0x4883ec10	                           sub rsp, 0x10	     10278	syntax.c	FUNCTION_165
0x147ea	    0xc745fc0a0000	                mov dword [rbp - 4], 0xa	     10281	syntax.c	FUNCTION_165	FOR_1
0x147f1	            0xeb12	                           jmp 0x4014845	     10281	syntax.c	FUNCTION_165	FOR_1
0x147f3	    0x8b1500000000	            mov edx, dword [0x04014839] 	     10282	syntax.c	FUNCTION_165	CALL_2
0x147f9	          0x8b45fc	                mov eax, dword [rbp - 4]	     10282	syntax.c	FUNCTION_165	CALL_2
0x147fc	            0x89d6	                            mov esi, edx	     10282	syntax.c	FUNCTION_165	CALL_2
0x147fe	            0x89c7	                            mov edi, eax	     10282	syntax.c	FUNCTION_165	CALL_2
0x14800	      0xe82f000000	             call sym.highlight_list_two	     10282	syntax.c	FUNCTION_165	CALL_2
0x14805	        0x836dfc01	                  sub dword [rbp - 4], 1	     10281	syntax.c	FUNCTION_165	FOR_1
0x14809	        0x837dfc00	                  cmp dword [rbp - 4], 0	     10281	syntax.c	FUNCTION_165	FOR_1
0x1480d	            0x79e4	                           jns 0x4014833	     10281	syntax.c	FUNCTION_165	FOR_1
0x1480f	    0xc745fc280000	               mov dword [rbp - 4], 0x28	     10283	syntax.c	FUNCTION_165	FOR_2
0x14816	            0xeb0f	                           jmp 0x4014867	     10283	syntax.c	FUNCTION_165	FOR_2
0x14818	      0xbe00000000	                              mov esi, 0	     10284	syntax.c	FUNCTION_165	CALL_3
0x1481d	      0xbf63000000	                           mov edi, 0x63	     10284	syntax.c	FUNCTION_165	CALL_3
0x14822	      0xe80d000000	             call sym.highlight_list_two	     10284	syntax.c	FUNCTION_165	CALL_3
0x14827	        0x836dfc01	                  sub dword [rbp - 4], 1	     10283	syntax.c	FUNCTION_165	FOR_2
0x1482b	        0x837dfc00	                  cmp dword [rbp - 4], 0	     10283	syntax.c	FUNCTION_165	FOR_2
0x1482f	            0x79e7	                           jns 0x4014858	     10283	syntax.c	FUNCTION_165	FOR_2
0x14831	              0x90	                                     nop	     10285	syntax.c	FUNCTION_165
0x14832	              0xc9	                                   leave	     10285	syntax.c	FUNCTION_165
0x14833	              0xc3	                                     ret	     10285	syntax.c	FUNCTION_165
in_id_list	FOR,0:DO,0:IF,14:SWITCH,0:functions,0:ELSE,3:WHILE,2:CALL,5	176
0xc261	              0x55	                                push rbp	      6232	syntax.c	FUNCTION_94
0xc262	          0x4889e5	                            mov rbp, rsp	      6232	syntax.c	FUNCTION_94
0xc265	        0x4883ec40	                           sub rsp, 0x40	      6232	syntax.c	FUNCTION_94
0xc269	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      6232	syntax.c	FUNCTION_94
0xc26d	        0x488975d0	             mov qword [rbp - 0x30], rsi	      6232	syntax.c	FUNCTION_94
0xc271	        0x488955c8	             mov qword [rbp - 0x38], rdx	      6232	syntax.c	FUNCTION_94
0xc275	          0x894dc4	             mov dword [rbp - 0x3c], ecx	      6232	syntax.c	FUNCTION_94
0xc278	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6236	syntax.c	FUNCTION_94
0xc27c	         0xfb74004	               movzx eax, word [rax + 4]	      6236	syntax.c	FUNCTION_94
0xc280	        0x668945ee	               mov word [rbp - 0x12], ax	      6236	syntax.c	FUNCTION_94
0xc284	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      6241	syntax.c	FUNCTION_94	IF_1
0xc289	     0xf84d7000000	                            je 0x400c3a6	      6241	syntax.c	FUNCTION_94	IF_1
0xc28f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6241	syntax.c	FUNCTION_94	IF_1
0xc293	        0x488b4008	                mov rax, qword [rax + 8]	      6241	syntax.c	FUNCTION_94	IF_1
0xc297	          0x4885c0	                           test rax, rax	      6241	syntax.c	FUNCTION_94	IF_1
0xc29a	     0xf84c6000000	                            je 0x400c3a6	      6241	syntax.c	FUNCTION_94	IF_1
0xc2a0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6242	syntax.c	FUNCTION_94	IF_1
0xc2a4	        0x488b4068	            mov rax, qword [rax + 0x68] 	      6242	syntax.c	FUNCTION_94	IF_1
0xc2a8	          0x83e040	                           and eax, 0x40	      6242	syntax.c	FUNCTION_94	IF_1
0xc2ab	          0x4885c0	                           test rax, rax	      6242	syntax.c	FUNCTION_94	IF_1
0xc2ae	     0xf85b2000000	                           jne 0x400c3a6	      6242	syntax.c	FUNCTION_94	IF_1
0xc2b4	            0xeb08	                           jmp 0x400c2fe	      6246	syntax.c	FUNCTION_94	IF_1	WHILE_1
0xc2b6	    0x48816dd89000	            sub qword [rbp - 0x28], 0x90	      6248	syntax.c	FUNCTION_94	IF_1	WHILE_1
0xc2be	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6246	syntax.c	FUNCTION_94	IF_1	WHILE_1
0xc2c2	        0x488b4068	            mov rax, qword [rax + 0x68] 	      6246	syntax.c	FUNCTION_94	IF_1	WHILE_1
0xc2c6	      0x2500000100	                        and eax, 0x10000	      6246	syntax.c	FUNCTION_94	IF_1	WHILE_1
0xc2cb	          0x4885c0	                           test rax, rax	      6246	syntax.c	FUNCTION_94	IF_1	WHILE_1
0xc2ce	            0x740d	                            je 0x400c31d	      6246	syntax.c	FUNCTION_94	IF_1	WHILE_1
0xc2d0	    0x488b05000000	            mov rax, qword [0x0400c317] 	      6247	syntax.c	FUNCTION_94	IF_1	WHILE_1
0xc2d7	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      6247	syntax.c	FUNCTION_94	IF_1	WHILE_1
0xc2db	            0x72d9	                            jb 0x400c2f6	      6247	syntax.c	FUNCTION_94	IF_1	WHILE_1
0xc2dd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0xc2e1	            0x8b00	                    mov eax, dword [rax]	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0xc2e3	            0x85c0	                           test eax, eax	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0xc2e5	            0x787f	                            js 0x400c3a6	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0xc2e7	    0x488b05000000	            mov rax, qword [0x0400c32e] 	      6252	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_3
0xc2ee	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      6252	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_3
0xc2f5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6252	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_3
0xc2f9	            0x8b00	                    mov eax, dword [rax]	      6252	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_3
0xc2fb	          0x4863d0	                         movsxd rdx, eax	      6252	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_3
0xc2fe	          0x4889d0	                            mov rax, rdx	      6252	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_3
0xc301	        0x48c1e002	                              shl rax, 2	      6252	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_3
0xc305	          0x4801d0	                            add rax, rdx	      6252	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_3
0xc308	        0x48c1e005	                              shl rax, 5	      6252	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_3
0xc30c	          0x4801c8	                            add rax, rcx	      6252	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_3
0xc30f	          0x8b4024	            mov eax, dword [rax + 0x24] 	      6252	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_3
0xc312	          0x83e001	                              and eax, 1	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0xc315	            0x89c1	                            mov ecx, eax	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0xc317	    0x488b05000000	            mov rax, qword [0x0400c35e] 	      6251	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_2
0xc31e	    0x488bb0700200	           mov rsi, qword [rax + 0x270] 	      6251	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_2
0xc325	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6251	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_2
0xc329	            0x8b00	                    mov eax, dword [rax]	      6251	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_2
0xc32b	          0x4863d0	                         movsxd rdx, eax	      6251	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_2
0xc32e	          0x4889d0	                            mov rax, rdx	      6251	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_2
0xc331	        0x48c1e002	                              shl rax, 2	      6251	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_2
0xc335	          0x4801d0	                            add rax, rdx	      6251	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_2
0xc338	        0x48c1e005	                              shl rax, 5	      6251	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_2
0xc33c	          0x4801f0	                            add rax, rsi	      6251	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_2
0xc33f	        0x488d5050	                   lea rdx, [rax + 0x50]	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0xc343	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0xc347	        0x488b4008	                mov rax, qword [rax + 8]	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0xc34b	          0x4889c6	                            mov rsi, rax	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0xc34e	      0xbf00000000	                              mov edi, 0	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0xc353	      0xe809ffffff	                     call sym.in_id_list	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0xc358	            0x85c0	                           test eax, eax	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0xc35a	            0x740a	                            je 0x400c3a6	      6250	syntax.c	FUNCTION_94	IF_1	IF_2	CALL_1
0xc35c	      0xb801000000	                              mov eax, 1	      6253	syntax.c	FUNCTION_94	IF_1	IF_2
0xc361	      0xe9af010000	                           jmp 0x400c555	      6253	syntax.c	FUNCTION_94	IF_1	IF_2
0xc366	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      6256	syntax.c	FUNCTION_94	IF_3
0xc36b	            0x750a	                           jne 0x400c3b7	      6256	syntax.c	FUNCTION_94	IF_3
0xc36d	      0xb800000000	                              mov eax, 0	      6257	syntax.c	FUNCTION_94	IF_3
0xc372	      0xe99e010000	                           jmp 0x400c555	      6257	syntax.c	FUNCTION_94	IF_3
0xc377	      0x48837dd0ff	cmp qword [rbp - 0x30], 0xffffffffffffffff	      6263	syntax.c	FUNCTION_94	IF_4
0xc37c	            0x750f	                           jne 0x400c3cd	      6263	syntax.c	FUNCTION_94	IF_4
0xc37e	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      6264	syntax.c	FUNCTION_94	IF_4
0xc382	           0xf94c0	                                 sete al	      6264	syntax.c	FUNCTION_94	IF_4
0xc385	           0xfb6c0	                           movzx eax, al	      6264	syntax.c	FUNCTION_94	IF_4
0xc388	      0xe988010000	                           jmp 0x400c555	      6264	syntax.c	FUNCTION_94	IF_4
0xc38d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6271	syntax.c	FUNCTION_94
0xc391	           0xfb700	                   movzx eax, word [rax]	      6271	syntax.c	FUNCTION_94
0xc394	        0x668945ec	               mov word [rbp - 0x14], ax	      6271	syntax.c	FUNCTION_94
0xc398	    0x66817dec1f4e	          cmp word [rbp - 0x14], 0x4e1f 	      6272	syntax.c	FUNCTION_94	IF_5
0xc39e	     0xf8e9b000000	                           jle 0x400c47f	      6272	syntax.c	FUNCTION_94	IF_5
0xc3a4	    0x66817decd759	          cmp word [rbp - 0x14], 0x59d7 	      6272	syntax.c	FUNCTION_94	IF_5
0xc3aa	     0xf8f8f000000	                            jg 0x400c47f	      6272	syntax.c	FUNCTION_94	IF_5
0xc3b0	    0x66817dec0752	          cmp word [rbp - 0x14], 0x5207 	      6274	syntax.c	FUNCTION_94	IF_5	IF_6
0xc3b6	            0x7f1e	                            jg 0x400c416	      6274	syntax.c	FUNCTION_94	IF_5	IF_6
0xc3b8	         0xfbf45ec	            movsx eax, word [rbp - 0x14]	      6277	syntax.c	FUNCTION_94	IF_5	IF_6	IF_7
0xc3bc	    0x8d90e0b1ffff	                 lea edx, [rax - 0x4e20]	      6277	syntax.c	FUNCTION_94	IF_5	IF_6	IF_7
0xc3c2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6277	syntax.c	FUNCTION_94	IF_5	IF_6	IF_7
0xc3c6	            0x8b00	                    mov eax, dword [rax]	      6277	syntax.c	FUNCTION_94	IF_5	IF_6	IF_7
0xc3c8	            0x39c2	                            cmp edx, eax	      6277	syntax.c	FUNCTION_94	IF_5	IF_6	IF_7
0xc3ca	            0x745a	                            je 0x400c466	      6277	syntax.c	FUNCTION_94	IF_5	IF_6	IF_7
0xc3cc	      0xb800000000	                              mov eax, 0	      6278	syntax.c	FUNCTION_94	IF_5	IF_6	IF_7
0xc3d1	      0xe93f010000	                           jmp 0x400c555	      6278	syntax.c	FUNCTION_94	IF_5	IF_6	IF_7
0xc3d6	    0x66817decef55	          cmp word [rbp - 0x14], 0x55ef 	      6280	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8
0xc3dc	            0x7f24	                            jg 0x400c442	      6280	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8
0xc3de	         0xfbf45ec	            movsx eax, word [rbp - 0x14]	      6283	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8	IF_9
0xc3e2	    0x8d90f8adffff	                 lea edx, [rax - 0x5208]	      6283	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8	IF_9
0xc3e8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6283	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8	IF_9
0xc3ec	            0x8b00	                    mov eax, dword [rax]	      6283	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8	IF_9
0xc3ee	            0x39c2	                            cmp edx, eax	      6283	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8	IF_9
0xc3f0	            0x7506	                           jne 0x400c438	      6283	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8	IF_9
0xc3f2	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      6283	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8	IF_9
0xc3f6	            0x742e	                            je 0x400c466	      6283	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8	IF_9
0xc3f8	      0xb800000000	                              mov eax, 0	      6284	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8	IF_9
0xc3fd	      0xe913010000	                           jmp 0x400c555	      6284	syntax.c	FUNCTION_94	IF_5	ELSE_1	IF_8	IF_9
0xc402	         0xfbf45ec	            movsx eax, word [rbp - 0x14]	      6289	syntax.c	FUNCTION_94	IF_5	ELSE_2	IF_10
0xc406	    0x8d9010aaffff	                 lea edx, [rax - 0x55f0]	      6289	syntax.c	FUNCTION_94	IF_5	ELSE_2	IF_10
0xc40c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6289	syntax.c	FUNCTION_94	IF_5	ELSE_2	IF_10
0xc410	            0x8b00	                    mov eax, dword [rax]	      6289	syntax.c	FUNCTION_94	IF_5	ELSE_2	IF_10
0xc412	            0x39c2	                            cmp edx, eax	      6289	syntax.c	FUNCTION_94	IF_5	ELSE_2	IF_10
0xc414	            0x7506	                           jne 0x400c45c	      6289	syntax.c	FUNCTION_94	IF_5	ELSE_2	IF_10
0xc416	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      6289	syntax.c	FUNCTION_94	IF_5	ELSE_2	IF_10
0xc41a	            0x750a	                           jne 0x400c466	      6289	syntax.c	FUNCTION_94	IF_5	ELSE_2	IF_10
0xc41c	      0xb800000000	                              mov eax, 0	      6290	syntax.c	FUNCTION_94	IF_5	ELSE_2	IF_10
0xc421	      0xe9ef000000	                           jmp 0x400c555	      6290	syntax.c	FUNCTION_94	IF_5	ELSE_2	IF_10
0xc426	      0x488345d002	               add qword [rbp - 0x30], 2	      6292	syntax.c	FUNCTION_94	IF_5
0xc42b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6292	syntax.c	FUNCTION_94	IF_5
0xc42f	           0xfb700	                   movzx eax, word [rax]	      6292	syntax.c	FUNCTION_94	IF_5
0xc432	        0x668945ec	               mov word [rbp - 0x14], ax	      6292	syntax.c	FUNCTION_94	IF_5
0xc436	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      6293	syntax.c	FUNCTION_94	IF_5
0xc43d	            0xeb07	                           jmp 0x400c486	      6293	syntax.c	FUNCTION_94	IF_5
0xc43f	    0xc745f0010000	               mov dword [rbp - 0x10], 1	      6296	syntax.c	FUNCTION_94	ELSE_3
0xc446	      0xe9b5000000	                           jmp 0x400c540	      6301	syntax.c	FUNCTION_94	ELSE_3	WHILE_2
0xc44b	         0xfb745ec	            movzx eax, word [rbp - 0x14]	      6303	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_11
0xc44f	        0x663b45ee	               cmp ax, word [rbp - 0x12]	      6303	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_11
0xc453	            0x7508	                           jne 0x400c49d	      6303	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_11
0xc455	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      6304	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_11
0xc458	      0xe9b8000000	                           jmp 0x400c555	      6304	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_11
0xc45d	    0x66817decd759	          cmp word [rbp - 0x14], 0x59d7 	      6305	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12
0xc463	     0xf8e87000000	                           jle 0x400c530	      6305	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12
0xc469	    0x488b05000000	            mov rax, qword [0x0400c4b0] 	      6307	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	CALL_4
0xc470	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      6307	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	CALL_4
0xc477	      0x480fbf55ec	            movsx rdx, word [rbp - 0x14]	      6307	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	CALL_4
0xc47c	          0x4889d0	                            mov rax, rdx	      6307	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	CALL_4
0xc47f	          0x4801c0	                            add rax, rax	      6307	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	CALL_4
0xc482	          0x4801d0	                            add rax, rdx	      6307	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	CALL_4
0xc485	        0x48c1e003	                              shl rax, 3	      6307	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	CALL_4
0xc489	    0x482d406c0800	                        sub rax, 0x86c40	      6307	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	CALL_4
0xc48f	          0x4801c8	                            add rax, rcx	      6307	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	CALL_4
0xc492	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6307	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	CALL_4
0xc496	        0x488945f8	                mov qword [rbp - 8], rax	      6307	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	CALL_4
0xc49a	      0x48837df800	                  cmp qword [rbp - 8], 0	      6310	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0xc49f	            0x744f	                            je 0x400c530	      6310	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0xc4a1	    0x8b0500000000	            mov eax, dword [0x0400c4e7] 	      6310	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0xc4a7	          0x83f81d	                           cmp eax, 0x1d	      6310	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0xc4aa	            0x7f44	                            jg 0x400c530	      6310	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0xc4ac	    0x8b0500000000	            mov eax, dword [0x0400c4f2] 	      6312	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0xc4b2	          0x83c001	                              add eax, 1	      6312	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0xc4b5	    0x890500000000	            mov dword [0x0400c4fb], eax 	      6312	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0xc4bb	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      6313	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	CALL_5
0xc4be	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      6313	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	CALL_5
0xc4c2	        0x488b45f8	                mov rax, qword [rbp - 8]	      6313	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	CALL_5
0xc4c6	          0x4889c6	                            mov rsi, rax	      6313	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	CALL_5
0xc4c9	      0xbf00000000	                              mov edi, 0	      6313	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	CALL_5
0xc4ce	      0xe88efdffff	                     call sym.in_id_list	      6313	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	CALL_5
0xc4d3	          0x8945f4	              mov dword [rbp - 0xc], eax	      6313	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	CALL_5
0xc4d6	    0x8b0500000000	            mov eax, dword [0x0400c51c] 	      6314	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0xc4dc	          0x83e801	                              sub eax, 1	      6314	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0xc4df	    0x890500000000	            mov dword [0x0400c525], eax 	      6314	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13
0xc4e5	        0x837df400	                cmp dword [rbp - 0xc], 0	      6315	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	IF_14
0xc4e9	            0x7405	                            je 0x400c530	      6315	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	IF_14
0xc4eb	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      6316	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	IF_14
0xc4ee	            0xeb25	                           jmp 0x400c555	      6316	syntax.c	FUNCTION_94	ELSE_3	WHILE_2	IF_12	IF_13	IF_14
0xc4f0	      0x488345d002	               add qword [rbp - 0x30], 2	      6319	syntax.c	FUNCTION_94	ELSE_3	WHILE_2
0xc4f5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6319	syntax.c	FUNCTION_94	ELSE_3	WHILE_2
0xc4f9	           0xfb700	                   movzx eax, word [rax]	      6319	syntax.c	FUNCTION_94	ELSE_3	WHILE_2
0xc4fc	        0x668945ec	               mov word [rbp - 0x14], ax	      6319	syntax.c	FUNCTION_94	ELSE_3	WHILE_2
0xc500	      0x66837dec00	                cmp word [rbp - 0x14], 0	      6301	syntax.c	FUNCTION_94	ELSE_3	WHILE_2
0xc505	     0xf8540ffffff	                           jne 0x400c48b	      6301	syntax.c	FUNCTION_94	ELSE_3	WHILE_2
0xc50b	        0x837df000	               cmp dword [rbp - 0x10], 0	      6321	syntax.c	FUNCTION_94
0xc50f	           0xf94c0	                                 sete al	      6321	syntax.c	FUNCTION_94
0xc512	           0xfb6c0	                           movzx eax, al	      6321	syntax.c	FUNCTION_94
0xc515	              0xc9	                                   leave	      6322	syntax.c	FUNCTION_94
0xc516	              0xc3	                                     ret	      6322	syntax.c	FUNCTION_94
get_group_name	FOR,0:DO,0:IF,1:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,3	32
0x85ea	              0x55	                                push rbp	      4579	syntax.c	FUNCTION_75
0x85eb	          0x4889e5	                            mov rbp, rsp	      4579	syntax.c	FUNCTION_75
0x85ee	        0x4883ec20	                           sub rsp, 0x20	      4579	syntax.c	FUNCTION_75
0x85f2	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4579	syntax.c	FUNCTION_75
0x85f6	        0x488975e0	             mov qword [rbp - 0x20], rsi	      4579	syntax.c	FUNCTION_75
0x85fa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4582	syntax.c	FUNCTION_75	CALL_1
0x85fe	          0x4889c7	                            mov rdi, rax	      4582	syntax.c	FUNCTION_75	CALL_1
0x8601	      0xe800000000	                          call 0x4008646	      4582	syntax.c	FUNCTION_75	CALL_1
0x8606	          0x4889c2	                            mov rdx, rax	      4582	syntax.c	FUNCTION_75	CALL_1
0x8609	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4582	syntax.c	FUNCTION_75	CALL_1
0x860d	          0x488910	                    mov qword [rax], rdx	      4582	syntax.c	FUNCTION_75	CALL_1
0x8610	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4583	syntax.c	FUNCTION_75	CALL_2
0x8614	          0x488b00	                    mov rax, qword [rax]	      4583	syntax.c	FUNCTION_75	CALL_2
0x8617	          0x4889c7	                            mov rdi, rax	      4583	syntax.c	FUNCTION_75	CALL_2
0x861a	      0xe800000000	                          call 0x400865f	      4583	syntax.c	FUNCTION_75	CALL_2
0x861f	        0x488945f8	                mov qword [rbp - 8], rax	      4583	syntax.c	FUNCTION_75	CALL_2
0x8623	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x8627	           0xfb600	                   movzx eax, byte [rax]	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x862a	           0xfb6c0	                           movzx eax, al	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x862d	            0x89c7	                            mov edi, eax	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x862f	      0xe800000000	                          call 0x4008674	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x8634	            0x85c0	                           test eax, eax	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x8636	            0x750b	                           jne 0x4008683	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x8638	        0x488b45f8	                mov rax, qword [rbp - 8]	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x863c	           0xfb600	                   movzx eax, byte [rax]	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x863f	            0x84c0	                             test al, al	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x8641	            0x7507	                           jne 0x400868a	      4589	syntax.c	FUNCTION_75	IF_1	CALL_3
0x8643	      0xb800000000	                              mov eax, 0	      4590	syntax.c	FUNCTION_75	IF_1
0x8648	            0xeb04	                           jmp 0x400868e	      4590	syntax.c	FUNCTION_75	IF_1
0x864a	        0x488b45f8	                mov rax, qword [rbp - 8]	      4591	syntax.c	FUNCTION_75
0x864e	              0xc9	                                   leave	      4592	syntax.c	FUNCTION_75
0x864f	              0xc3	                                     ret	      4592	syntax.c	FUNCTION_75
syn_add_start_off	FOR,0:DO,0:IF,5:SWITCH,0:functions,0:ELSE,2:WHILE,2:CALL,5	143
0x5648	              0x55	                                push rbp	      3256	syntax.c	FUNCTION_41
0x5649	          0x4889e5	                            mov rbp, rsp	      3256	syntax.c	FUNCTION_41
0x564c	        0x4883ec40	                           sub rsp, 0x40	      3256	syntax.c	FUNCTION_41
0x5650	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3256	syntax.c	FUNCTION_41
0x5654	        0x488975d0	             mov qword [rbp - 0x30], rsi	      3256	syntax.c	FUNCTION_41
0x5658	        0x488955c8	             mov qword [rbp - 0x38], rdx	      3256	syntax.c	FUNCTION_41
0x565c	          0x894dc4	             mov dword [rbp - 0x3c], ecx	      3256	syntax.c	FUNCTION_41
0x565f	        0x448945c0	             mov dword [rbp - 0x40], r8d	      3256	syntax.c	FUNCTION_41
0x5663	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3262	syntax.c	FUNCTION_41	IF_1
0x5667	         0xfb74004	               movzx eax, word [rax + 4]	      3262	syntax.c	FUNCTION_41	IF_1
0x566b	           0xfbfd0	                           movsx edx, ax	      3262	syntax.c	FUNCTION_41	IF_1
0x566e	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      3262	syntax.c	FUNCTION_41	IF_1
0x5671	          0x83c007	                              add eax, 7	      3262	syntax.c	FUNCTION_41	IF_1
0x5674	            0x89c1	                            mov ecx, eax	      3262	syntax.c	FUNCTION_41	IF_1
0x5676	            0xd3fa	                             sar edx, cl	      3262	syntax.c	FUNCTION_41	IF_1
0x5678	            0x89d0	                            mov eax, edx	      3262	syntax.c	FUNCTION_41	IF_1
0x567a	          0x83e001	                              and eax, 1	      3262	syntax.c	FUNCTION_41	IF_1
0x567d	            0x85c0	                           test eax, eax	      3262	syntax.c	FUNCTION_41	IF_1
0x567f	            0x7437	                            je 0x40056f8	      3262	syntax.c	FUNCTION_41	IF_1
0x5681	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3264	syntax.c	FUNCTION_41	IF_1
0x5685	    0x488b90a80000	            mov rdx, qword [rax + 0xa8] 	      3264	syntax.c	FUNCTION_41	IF_1
0x568c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3264	syntax.c	FUNCTION_41	IF_1
0x5690	          0x488910	                    mov qword [rax], rdx	      3264	syntax.c	FUNCTION_41	IF_1
0x5693	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3265	syntax.c	FUNCTION_41	IF_1
0x5697	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      3265	syntax.c	FUNCTION_41	IF_1
0x569d	          0x8945e8	             mov dword [rbp - 0x18], eax	      3265	syntax.c	FUNCTION_41	IF_1
0x56a0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3266	syntax.c	FUNCTION_41	IF_1
0x56a4	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      3266	syntax.c	FUNCTION_41	IF_1
0x56a7	          0x4863d2	                         movsxd rdx, edx	      3266	syntax.c	FUNCTION_41	IF_1
0x56aa	        0x8b549008	       mov edx, dword [rax + rdx*4 + 8] 	      3266	syntax.c	FUNCTION_41	IF_1
0x56ae	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      3266	syntax.c	FUNCTION_41	IF_1
0x56b1	             0x1d0	                            add eax, edx	      3266	syntax.c	FUNCTION_41	IF_1
0x56b3	          0x8945ec	             mov dword [rbp - 0x14], eax	      3266	syntax.c	FUNCTION_41	IF_1
0x56b6	            0xeb2a	                           jmp 0x4005722	      3266	syntax.c	FUNCTION_41	IF_1
0x56b8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3270	syntax.c	FUNCTION_41	ELSE_1
0x56bc	        0x488b5008	                mov rdx, qword [rax + 8]	      3270	syntax.c	FUNCTION_41	ELSE_1
0x56c0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3270	syntax.c	FUNCTION_41	ELSE_1
0x56c4	          0x488910	                    mov qword [rax], rdx	      3270	syntax.c	FUNCTION_41	ELSE_1
0x56c7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3271	syntax.c	FUNCTION_41	ELSE_1
0x56cb	          0x8b4010	            mov eax, dword [rax + 0x10] 	      3271	syntax.c	FUNCTION_41	ELSE_1
0x56ce	          0x8945e8	             mov dword [rbp - 0x18], eax	      3271	syntax.c	FUNCTION_41	ELSE_1
0x56d1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3272	syntax.c	FUNCTION_41	ELSE_1
0x56d5	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      3272	syntax.c	FUNCTION_41	ELSE_1
0x56d8	          0x4863d2	                         movsxd rdx, edx	      3272	syntax.c	FUNCTION_41	ELSE_1
0x56db	        0x8b449008	       mov eax, dword [rax + rdx*4 + 8] 	      3272	syntax.c	FUNCTION_41	ELSE_1
0x56df	          0x8945ec	             mov dword [rbp - 0x14], eax	      3272	syntax.c	FUNCTION_41	ELSE_1
0x56e2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3274	syntax.c	FUNCTION_41	IF_2
0x56e6	          0x488b10	                    mov rdx, qword [rax]	      3274	syntax.c	FUNCTION_41	IF_2
0x56e9	    0x488b05000000	            mov rax, qword [0x04005730] 	      3274	syntax.c	FUNCTION_41	IF_2
0x56f0	          0x488b00	                    mov rax, qword [rax]	      3274	syntax.c	FUNCTION_41	IF_2
0x56f3	          0x4839c2	                            cmp rdx, rax	      3274	syntax.c	FUNCTION_41	IF_2
0x56f6	            0x7e3a	                           jle 0x4005772	      3274	syntax.c	FUNCTION_41	IF_2
0x56f8	    0x488b05000000	            mov rax, qword [0x0400573f] 	      3277	syntax.c	FUNCTION_41	IF_2
0x56ff	          0x488b10	                    mov rdx, qword [rax]	      3277	syntax.c	FUNCTION_41	IF_2
0x5702	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3277	syntax.c	FUNCTION_41	IF_2
0x5706	          0x488910	                    mov qword [rax], rdx	      3277	syntax.c	FUNCTION_41	IF_2
0x5709	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3278	syntax.c	FUNCTION_41	IF_2	CALL_2
0x570d	          0x488b08	                    mov rcx, qword [rax]	      3278	syntax.c	FUNCTION_41	IF_2	CALL_2
0x5710	    0x488b05000000	            mov rax, qword [0x04005757] 	      3278	syntax.c	FUNCTION_41	IF_2	CALL_2
0x5717	      0xba00000000	                              mov edx, 0	      3278	syntax.c	FUNCTION_41	IF_2	CALL_2
0x571c	          0x4889ce	                            mov rsi, rcx	      3278	syntax.c	FUNCTION_41	IF_2	CALL_2
0x571f	          0x4889c7	                            mov rdi, rax	      3278	syntax.c	FUNCTION_41	IF_2	CALL_2
0x5722	      0xe800000000	                          call 0x4005767	      3278	syntax.c	FUNCTION_41	IF_2	CALL_2
0x5727	          0x4889c7	                            mov rdi, rax	      3278	syntax.c	FUNCTION_41	IF_2	CALL_2
0x572a	      0xe800000000	                          call 0x400576f	      3278	syntax.c	FUNCTION_41	IF_2	CALL_2
0x572f	          0x8945e8	             mov dword [rbp - 0x18], eax	      3278	syntax.c	FUNCTION_41	IF_2	CALL_2
0x5732	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3280	syntax.c	FUNCTION_41	IF_3
0x5736	     0xf84e4000000	                            je 0x4005860	      3280	syntax.c	FUNCTION_41	IF_3
0x573c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3282	syntax.c	FUNCTION_41	IF_3	CALL_3
0x5740	          0x488b08	                    mov rcx, qword [rax]	      3282	syntax.c	FUNCTION_41	IF_3	CALL_3
0x5743	    0x488b05000000	            mov rax, qword [0x0400578a] 	      3282	syntax.c	FUNCTION_41	IF_3	CALL_3
0x574a	      0xba00000000	                              mov edx, 0	      3282	syntax.c	FUNCTION_41	IF_3	CALL_3
0x574f	          0x4889ce	                            mov rsi, rcx	      3282	syntax.c	FUNCTION_41	IF_3	CALL_3
0x5752	          0x4889c7	                            mov rdi, rax	      3282	syntax.c	FUNCTION_41	IF_3	CALL_3
0x5755	      0xe800000000	                          call 0x400579a	      3282	syntax.c	FUNCTION_41	IF_3	CALL_3
0x575a	        0x488945f8	                mov qword [rbp - 8], rax	      3282	syntax.c	FUNCTION_41	IF_3	CALL_3
0x575e	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      3283	syntax.c	FUNCTION_41	IF_3
0x5761	          0x4863d0	                         movsxd rdx, eax	      3283	syntax.c	FUNCTION_41	IF_3
0x5764	        0x488b45f8	                mov rax, qword [rbp - 8]	      3283	syntax.c	FUNCTION_41	IF_3
0x5768	          0x4801d0	                            add rax, rdx	      3283	syntax.c	FUNCTION_41	IF_3
0x576b	        0x488945f0	             mov qword [rbp - 0x10], rax	      3283	syntax.c	FUNCTION_41	IF_3
0x576f	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3284	syntax.c	FUNCTION_41	IF_3	IF_4
0x5773	            0x7e43	                           jle 0x40057f8	      3284	syntax.c	FUNCTION_41	IF_3	IF_4
0x5775	            0xeb27	                           jmp 0x40057de	      3286	syntax.c	FUNCTION_41	IF_3	IF_4	WHILE_1
0x5777	    0x8b0500000000	            mov eax, dword [0x040057bd] 	      3287	syntax.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x577d	            0x85c0	                           test eax, eax	      3287	syntax.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x577f	            0x7412	                            je 0x40057d3	      3287	syntax.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x5781	    0x488b05000000	            mov rax, qword [0x040057c8] 	      3287	syntax.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x5788	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3287	syntax.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x578c	          0x4889d7	                            mov rdi, rdx	      3287	syntax.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x578f	            0xffd0	                                call rax	      3287	syntax.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x5791	            0xeb05	                           jmp 0x40057d8	      3287	syntax.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x5793	      0xb801000000	                              mov eax, 1	      3287	syntax.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x5798	            0x4898	                                    cdqe	      3287	syntax.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x579a	        0x480145f0	            add qword [rbp - 0x10], rax 	      3287	syntax.c	FUNCTION_41	IF_3	IF_4	CALL_4
0x579e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3286	syntax.c	FUNCTION_41	IF_3	IF_4	WHILE_1
0x57a1	          0x8d50ff	                      lea edx, [rax - 1]	      3286	syntax.c	FUNCTION_41	IF_3	IF_4	WHILE_1
0x57a4	          0x8955ec	             mov dword [rbp - 0x14], edx	      3286	syntax.c	FUNCTION_41	IF_3	IF_4	WHILE_1
0x57a7	            0x85c0	                           test eax, eax	      3286	syntax.c	FUNCTION_41	IF_3	IF_4	WHILE_1
0x57a9	            0x7464	                            je 0x400584f	      3286	syntax.c	FUNCTION_41	IF_3	IF_4	WHILE_1
0x57ab	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3286	syntax.c	FUNCTION_41	IF_3	IF_4	WHILE_1
0x57af	           0xfb600	                   movzx eax, byte [rax]	      3286	syntax.c	FUNCTION_41	IF_3	IF_4	WHILE_1
0x57b2	            0x84c0	                             test al, al	      3286	syntax.c	FUNCTION_41	IF_3	IF_4	WHILE_1
0x57b4	            0x75c1	                           jne 0x40057b7	      3286	syntax.c	FUNCTION_41	IF_3	IF_4	WHILE_1
0x57b6	            0xeb57	                           jmp 0x400584f	      3286	syntax.c	FUNCTION_41	IF_3	IF_4	WHILE_1
0x57b8	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3289	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5
0x57bc	            0x7951	                           jns 0x400584f	      3289	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5
0x57be	            0xeb38	                           jmp 0x4005838	      3291	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	WHILE_2
0x57c0	    0x8b0500000000	            mov eax, dword [0x04005806] 	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x57c6	            0x85c0	                           test eax, eax	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x57c8	            0x7420	                            je 0x400582a	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x57ca	    0x488b05000000	            mov rax, qword [0x04005811] 	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x57d1	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x57d5	        0x488d4aff	                      lea rcx, [rdx - 1]	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x57d9	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x57dd	          0x4889ce	                            mov rsi, rcx	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x57e0	          0x4889d7	                            mov rdi, rdx	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x57e3	            0xffd0	                                call rax	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x57e5	          0x83c001	                              add eax, 1	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x57e8	            0xeb05	                           jmp 0x400582f	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x57ea	      0xb801000000	                              mov eax, 1	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x57ef	            0x4898	                                    cdqe	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x57f1	          0x48f7d8	                                 neg rax	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x57f4	        0x480145f0	            add qword [rbp - 0x10], rax 	      3292	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	CALL_5
0x57f8	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3291	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	WHILE_2
0x57fb	          0x8d5001	                      lea edx, [rax + 1]	      3291	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	WHILE_2
0x57fe	          0x8955ec	             mov dword [rbp - 0x14], edx	      3291	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	WHILE_2
0x5801	            0x85c0	                           test eax, eax	      3291	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	WHILE_2
0x5803	            0x740a	                            je 0x400584f	      3291	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	WHILE_2
0x5805	        0x488b45f8	                mov rax, qword [rbp - 8]	      3291	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	WHILE_2
0x5809	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      3291	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	WHILE_2
0x580d	            0x72b1	                            jb 0x4005800	      3291	syntax.c	FUNCTION_41	IF_3	ELSE_2	IF_5	WHILE_2
0x580f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3294	syntax.c	FUNCTION_41	IF_3
0x5813	        0x488b45f8	                mov rax, qword [rbp - 8]	      3294	syntax.c	FUNCTION_41	IF_3
0x5817	          0x4829c2	                            sub rdx, rax	      3294	syntax.c	FUNCTION_41	IF_3
0x581a	          0x4889d0	                            mov rax, rdx	      3294	syntax.c	FUNCTION_41	IF_3
0x581d	          0x8945e8	             mov dword [rbp - 0x18], eax	      3294	syntax.c	FUNCTION_41	IF_3
0x5820	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3296	syntax.c	FUNCTION_41
0x5824	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      3296	syntax.c	FUNCTION_41
0x5827	          0x895008	                mov dword [rax + 8], edx	      3296	syntax.c	FUNCTION_41
0x582a	              0x90	                                     nop	      3297	syntax.c	FUNCTION_41
0x582b	              0xc9	                                   leave	      3297	syntax.c	FUNCTION_41
0x582c	              0xc3	                                     ret	      3297	syntax.c	FUNCTION_41
syn_cmd_conceal	FOR,0:DO,0:IF,5:SWITCH,0:functions,0:ELSE,4:WHILE,0:CALL,10	86
0x5cbc	              0x55	                                push rbp	      3461	syntax.c	FUNCTION_45
0x5cbd	          0x4889e5	                            mov rbp, rsp	      3461	syntax.c	FUNCTION_45
0x5cc0	        0x4883ec20	                           sub rsp, 0x20	      3461	syntax.c	FUNCTION_45
0x5cc4	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3461	syntax.c	FUNCTION_45
0x5cc8	          0x8975e4	             mov dword [rbp - 0x1c], esi	      3461	syntax.c	FUNCTION_45
0x5ccb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3463	syntax.c	FUNCTION_45
0x5ccf	          0x488b00	                    mov rax, qword [rax]	      3463	syntax.c	FUNCTION_45
0x5cd2	        0x488945f0	             mov qword [rbp - 0x10], rax	      3463	syntax.c	FUNCTION_45
0x5cd6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3466	syntax.c	FUNCTION_45	CALL_1
0x5cda	          0x4889c7	                            mov rdi, rax	      3466	syntax.c	FUNCTION_45	CALL_1
0x5cdd	      0xe800000000	                          call 0x4005d22	      3466	syntax.c	FUNCTION_45	CALL_1
0x5ce2	          0x4889c2	                            mov rdx, rax	      3466	syntax.c	FUNCTION_45	CALL_1
0x5ce5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3466	syntax.c	FUNCTION_45	CALL_1
0x5ce9	        0x48895008	                mov qword [rax + 8], rdx	      3466	syntax.c	FUNCTION_45	CALL_1
0x5ced	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3467	syntax.c	FUNCTION_45	IF_1
0x5cf1	          0x8b4030	            mov eax, dword [rax + 0x30] 	      3467	syntax.c	FUNCTION_45	IF_1
0x5cf4	            0x85c0	                           test eax, eax	      3467	syntax.c	FUNCTION_45	IF_1
0x5cf6	     0xf8506010000	                           jne 0x4005e42	      3467	syntax.c	FUNCTION_45	IF_1
0x5cfc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3470	syntax.c	FUNCTION_45	CALL_2
0x5d00	          0x4889c7	                            mov rdi, rax	      3470	syntax.c	FUNCTION_45	CALL_2
0x5d03	      0xe800000000	                          call 0x4005d48	      3470	syntax.c	FUNCTION_45	CALL_2
0x5d08	        0x488945f8	                mov qword [rbp - 8], rax	      3470	syntax.c	FUNCTION_45	CALL_2
0x5d0c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3471	syntax.c	FUNCTION_45	IF_2
0x5d10	           0xfb600	                   movzx eax, byte [rax]	      3471	syntax.c	FUNCTION_45	IF_2
0x5d13	            0x84c0	                             test al, al	      3471	syntax.c	FUNCTION_45	IF_2
0x5d15	            0x7543	                           jne 0x4005d9a	      3471	syntax.c	FUNCTION_45	IF_2
0x5d17	    0x488b05000000	            mov rax, qword [0x04005d5e] 	      3473	syntax.c	FUNCTION_45	IF_2	IF_3
0x5d1e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3473	syntax.c	FUNCTION_45	IF_2	IF_3
0x5d22	    0x8b8008030000	           mov eax, dword [rax + 0x308] 	      3473	syntax.c	FUNCTION_45	IF_2	IF_3
0x5d28	            0x85c0	                           test eax, eax	      3473	syntax.c	FUNCTION_45	IF_2	IF_3
0x5d2a	            0x7417	                            je 0x4005d83	      3473	syntax.c	FUNCTION_45	IF_2	IF_3
0x5d2c	      0xbf00000000	                              mov edi, 0	      3474	syntax.c	FUNCTION_45	IF_2	CALL_4
0x5d31	      0xe800000000	                          call 0x4005d76	      3474	syntax.c	FUNCTION_45	IF_2	CALL_4
0x5d36	          0x4889c7	                            mov rdi, rax	      3474	syntax.c	FUNCTION_45	IF_2	CALL_4
0x5d39	      0xe800000000	                          call 0x4005d7e	      3474	syntax.c	FUNCTION_45	IF_2	CALL_4
0x5d3e	      0xe9c0000000	                           jmp 0x4005e43	      3474	syntax.c	FUNCTION_45	IF_2	CALL_4
0x5d43	      0xbf00000000	                              mov edi, 0	      3476	syntax.c	FUNCTION_45	IF_2	CALL_6
0x5d48	      0xe800000000	                          call 0x4005d8d	      3476	syntax.c	FUNCTION_45	IF_2	CALL_6
0x5d4d	          0x4889c7	                            mov rdi, rax	      3476	syntax.c	FUNCTION_45	IF_2	CALL_6
0x5d50	      0xe800000000	                          call 0x4005d95	      3476	syntax.c	FUNCTION_45	IF_2	CALL_6
0x5d55	      0xe9a9000000	                           jmp 0x4005e43	      3476	syntax.c	FUNCTION_45	IF_2	CALL_6
0x5d5a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x5d5e	      0xba02000000	                              mov edx, 2	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x5d63	      0xbe00000000	                              mov esi, 0	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x5d68	          0x4889c7	                            mov rdi, rax	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x5d6b	      0xe800000000	                          call 0x4005db0	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x5d70	            0x85c0	                           test eax, eax	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x5d72	            0x752b	                           jne 0x4005ddf	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x5d74	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x5d78	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x5d7c	          0x4829c2	                            sub rdx, rax	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x5d7f	          0x4889d0	                            mov rax, rdx	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x5d82	        0x4883f802	                              cmp rax, 2	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x5d86	            0x7517	                           jne 0x4005ddf	      3478	syntax.c	FUNCTION_45	ELSE_2	IF_4	CALL_7
0x5d88	    0x488b05000000	            mov rax, qword [0x04005dcf] 	      3479	syntax.c	FUNCTION_45	ELSE_2	IF_4
0x5d8f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3479	syntax.c	FUNCTION_45	ELSE_2	IF_4
0x5d93	    0xc78008030000	              mov dword [rax + 0x308], 1	      3479	syntax.c	FUNCTION_45	ELSE_2	IF_4
0x5d9d	            0xeb64	                           jmp 0x4005e43	      3479	syntax.c	FUNCTION_45	ELSE_2	IF_4
0x5d9f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x5da3	      0xba03000000	                              mov edx, 3	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x5da8	      0xbe00000000	                              mov esi, 0	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x5dad	          0x4889c7	                            mov rdi, rax	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x5db0	      0xe800000000	                          call 0x4005df5	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x5db5	            0x85c0	                           test eax, eax	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x5db7	            0x752b	                           jne 0x4005e24	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x5db9	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x5dbd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x5dc1	          0x4829c2	                            sub rdx, rax	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x5dc4	          0x4889d0	                            mov rax, rdx	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x5dc7	        0x4883f803	                              cmp rax, 3	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x5dcb	            0x7517	                           jne 0x4005e24	      3480	syntax.c	FUNCTION_45	ELSE_3	IF_5	CALL_8
0x5dcd	    0x488b05000000	            mov rax, qword [0x04005e14] 	      3481	syntax.c	FUNCTION_45	ELSE_3	IF_5
0x5dd4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3481	syntax.c	FUNCTION_45	ELSE_3	IF_5
0x5dd8	    0xc78008030000	              mov dword [rax + 0x308], 0	      3481	syntax.c	FUNCTION_45	ELSE_3	IF_5
0x5de2	            0xeb1f	                           jmp 0x4005e43	      3481	syntax.c	FUNCTION_45	ELSE_3	IF_5
0x5de4	      0xbf00000000	                              mov edi, 0	      3483	syntax.c	FUNCTION_45	CALL_10
0x5de9	      0xe800000000	                          call 0x4005e2e	      3483	syntax.c	FUNCTION_45	CALL_10
0x5dee	          0x4889c2	                            mov rdx, rax	      3483	syntax.c	FUNCTION_45	CALL_10
0x5df1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3483	syntax.c	FUNCTION_45	CALL_10
0x5df5	          0x4889c6	                            mov rsi, rax	      3483	syntax.c	FUNCTION_45	CALL_10
0x5df8	          0x4889d7	                            mov rdi, rdx	      3483	syntax.c	FUNCTION_45	CALL_10
0x5dfb	      0xe800000000	                          call 0x4005e40	      3483	syntax.c	FUNCTION_45	CALL_10
0x5e00	            0xeb01	                           jmp 0x4005e43	      3483	syntax.c	FUNCTION_45	CALL_10
0x5e02	              0x90	                                     nop	      3468	syntax.c	FUNCTION_45	IF_1
0x5e03	              0xc9	                                   leave	      3485	syntax.c	FUNCTION_45
0x5e04	              0xc3	                                     ret	      3485	syntax.c	FUNCTION_45
syntax_sync_clear	FOR,1:DO,0:IF,1:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,6	75
0x65b6	              0x55	                                push rbp	      3679	syntax.c	FUNCTION_51
0x65b7	          0x4889e5	                            mov rbp, rsp	      3679	syntax.c	FUNCTION_51
0x65ba	        0x4883ec10	                           sub rsp, 0x10	      3679	syntax.c	FUNCTION_51
0x65be	    0x488b05000000	            mov rax, qword [0x04006605] 	      3683	syntax.c	FUNCTION_51	FOR_1
0x65c5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3683	syntax.c	FUNCTION_51	FOR_1
0x65c9	    0x8b8060020000	           mov eax, dword [rax + 0x260] 	      3683	syntax.c	FUNCTION_51	FOR_1
0x65cf	          0x8945fc	                mov dword [rbp - 4], eax	      3683	syntax.c	FUNCTION_51	FOR_1
0x65d2	            0xeb49	                           jmp 0x400665d	      3683	syntax.c	FUNCTION_51	FOR_1
0x65d4	    0x488b05000000	            mov rax, qword [0x0400661b] 	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1	CALL_1
0x65db	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1	CALL_1
0x65df	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1	CALL_1
0x65e6	          0x8b45fc	                mov eax, dword [rbp - 4]	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1	CALL_1
0x65e9	          0x4863d0	                         movsxd rdx, eax	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1	CALL_1
0x65ec	          0x4889d0	                            mov rax, rdx	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1	CALL_1
0x65ef	        0x48c1e002	                              shl rax, 2	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1	CALL_1
0x65f3	          0x4801d0	                            add rax, rdx	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1	CALL_1
0x65f6	        0x48c1e005	                              shl rax, 5	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1	CALL_1
0x65fa	          0x4801c8	                            add rax, rcx	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1	CALL_1
0x65fd	         0xfb64001	               movzx eax, byte [rax + 1]	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1	CALL_1
0x6601	            0x84c0	                             test al, al	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1	CALL_1
0x6603	            0x7418	                            je 0x400665d	      3684	syntax.c	FUNCTION_51	FOR_1	IF_1	CALL_1
0x6605	    0x488b05000000	            mov rax, qword [0x0400664c] 	      3685	syntax.c	FUNCTION_51	FOR_1	IF_1
0x660c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3685	syntax.c	FUNCTION_51	FOR_1	IF_1
0x6610	          0x8b55fc	                mov edx, dword [rbp - 4]	      3685	syntax.c	FUNCTION_51	FOR_1	IF_1
0x6613	            0x89d6	                            mov esi, edx	      3685	syntax.c	FUNCTION_51	FOR_1	IF_1
0x6615	          0x4889c7	                            mov rdi, rax	      3685	syntax.c	FUNCTION_51	FOR_1	IF_1
0x6618	      0xe807010000	             call sym.syn_remove_pattern	      3685	syntax.c	FUNCTION_51	FOR_1	IF_1
0x661d	        0x836dfc01	                  sub dword [rbp - 4], 1	      3683	syntax.c	FUNCTION_51	FOR_1
0x6621	        0x837dfc00	                  cmp dword [rbp - 4], 0	      3683	syntax.c	FUNCTION_51	FOR_1
0x6625	            0x79ad	                           jns 0x4006614	      3683	syntax.c	FUNCTION_51	FOR_1
0x6627	    0x488b05000000	            mov rax, qword [0x0400666e] 	      3687	syntax.c	FUNCTION_51
0x662e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3687	syntax.c	FUNCTION_51
0x6632	    0xc7809c020000	              mov dword [rax + 0x29c], 0	      3687	syntax.c	FUNCTION_51
0x663c	    0x488b05000000	            mov rax, qword [0x04006683] 	      3688	syntax.c	FUNCTION_51
0x6643	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3688	syntax.c	FUNCTION_51
0x6647	    0x48c780a80200	              mov qword [rax + 0x2a8], 0	      3688	syntax.c	FUNCTION_51
0x6652	    0x488b05000000	            mov rax, qword [0x04006699] 	      3689	syntax.c	FUNCTION_51
0x6659	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3689	syntax.c	FUNCTION_51
0x665d	    0x48c780b00200	              mov qword [rax + 0x2b0], 0	      3689	syntax.c	FUNCTION_51
0x6668	    0x488b05000000	            mov rax, qword [0x040066af] 	      3690	syntax.c	FUNCTION_51
0x666f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3690	syntax.c	FUNCTION_51
0x6673	    0x48c780b80200	              mov qword [rax + 0x2b8], 0	      3690	syntax.c	FUNCTION_51
0x667e	    0x488b05000000	            mov rax, qword [0x040066c5] 	      3692	syntax.c	FUNCTION_51	CALL_3
0x6685	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3692	syntax.c	FUNCTION_51	CALL_3
0x6689	    0x488b80c80200	           mov rax, qword [rax + 0x2c8] 	      3692	syntax.c	FUNCTION_51	CALL_3
0x6690	          0x4889c7	                            mov rdi, rax	      3692	syntax.c	FUNCTION_51	CALL_3
0x6693	      0xe800000000	                          call 0x40066d8	      3692	syntax.c	FUNCTION_51	CALL_3
0x6698	    0x488b05000000	            mov rax, qword [0x040066df] 	      3693	syntax.c	FUNCTION_51
0x669f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3693	syntax.c	FUNCTION_51
0x66a3	    0x48c780c80200	              mov qword [rax + 0x2c8], 0	      3693	syntax.c	FUNCTION_51
0x66ae	    0x488b05000000	            mov rax, qword [0x040066f5] 	      3694	syntax.c	FUNCTION_51	CALL_4
0x66b5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3694	syntax.c	FUNCTION_51	CALL_4
0x66b9	    0x488b80c00200	           mov rax, qword [rax + 0x2c0] 	      3694	syntax.c	FUNCTION_51	CALL_4
0x66c0	          0x4885c0	                           test rax, rax	      3694	syntax.c	FUNCTION_51	CALL_4
0x66c3	            0x7430	                            je 0x4006735	      3694	syntax.c	FUNCTION_51	CALL_4
0x66c5	    0x488b05000000	            mov rax, qword [0x0400670c] 	      3694	syntax.c	FUNCTION_51	CALL_4
0x66cc	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3694	syntax.c	FUNCTION_51	CALL_4
0x66d0	    0x488b80c00200	           mov rax, qword [rax + 0x2c0] 	      3694	syntax.c	FUNCTION_51	CALL_4
0x66d7	          0x4889c7	                            mov rdi, rax	      3694	syntax.c	FUNCTION_51	CALL_4
0x66da	      0xe800000000	                          call 0x400671f	      3694	syntax.c	FUNCTION_51	CALL_4
0x66df	    0x488b05000000	            mov rax, qword [0x04006726] 	      3694	syntax.c	FUNCTION_51	CALL_4
0x66e6	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3694	syntax.c	FUNCTION_51	CALL_4
0x66ea	    0x48c780c00200	              mov qword [rax + 0x2c0], 0	      3694	syntax.c	FUNCTION_51	CALL_4
0x66f5	    0x488b05000000	            mov rax, qword [0x0400673c] 	      3695	syntax.c	FUNCTION_51	CALL_5
0x66fc	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3695	syntax.c	FUNCTION_51	CALL_5
0x6700	    0x4805b0040000	                          add rax, 0x4b0	      3695	syntax.c	FUNCTION_51	CALL_5
0x6706	          0x4889c7	                            mov rdi, rax	      3695	syntax.c	FUNCTION_51	CALL_5
0x6709	      0xe800000000	                          call 0x400674e	      3695	syntax.c	FUNCTION_51	CALL_5
0x670e	    0x488b05000000	            mov rax, qword [0x04006755] 	      3697	syntax.c	FUNCTION_51	CALL_6
0x6715	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3697	syntax.c	FUNCTION_51	CALL_6
0x6719	          0x4889c7	                            mov rdi, rax	      3697	syntax.c	FUNCTION_51	CALL_6
0x671c	      0xe800000000	                          call 0x4006761	      3697	syntax.c	FUNCTION_51	CALL_6
0x6721	              0x90	                                     nop	      3698	syntax.c	FUNCTION_51
0x6722	              0xc9	                                   leave	      3698	syntax.c	FUNCTION_51
0x6723	              0xc3	                                     ret	      3698	syntax.c	FUNCTION_51
syn_list_cluster	FOR,0:DO,0:IF,3:SWITCH,0:functions,0:ELSE,1:WHILE,0:CALL,11	76
0x7940	              0x55	                                push rbp	      4200	syntax.c	FUNCTION_68
0x7941	          0x4889e5	                            mov rbp, rsp	      4200	syntax.c	FUNCTION_68
0x7944	        0x4883ec20	                           sub rsp, 0x20	      4200	syntax.c	FUNCTION_68
0x7948	          0x897dec	             mov dword [rbp - 0x14], edi	      4200	syntax.c	FUNCTION_68
0x794b	    0xc745fc0f0000	                mov dword [rbp - 4], 0xf	      4201	syntax.c	FUNCTION_68
0x7952	      0xbf0a000000	                            mov edi, 0xa	      4204	syntax.c	FUNCTION_68	CALL_1
0x7957	      0xe800000000	                          call 0x400799c	      4204	syntax.c	FUNCTION_68	CALL_1
0x795c	    0x488b05000000	            mov rax, qword [0x040079a3] 	      4205	syntax.c	FUNCTION_68	CALL_3
0x7963	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4205	syntax.c	FUNCTION_68	CALL_3
0x7967	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      4205	syntax.c	FUNCTION_68	CALL_3
0x796e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4205	syntax.c	FUNCTION_68	CALL_3
0x7971	          0x4863d0	                         movsxd rdx, eax	      4205	syntax.c	FUNCTION_68	CALL_3
0x7974	          0x4889d0	                            mov rax, rdx	      4205	syntax.c	FUNCTION_68	CALL_3
0x7977	          0x4801c0	                            add rax, rax	      4205	syntax.c	FUNCTION_68	CALL_3
0x797a	          0x4801d0	                            add rax, rdx	      4205	syntax.c	FUNCTION_68	CALL_3
0x797d	        0x48c1e003	                              shl rax, 3	      4205	syntax.c	FUNCTION_68	CALL_3
0x7981	          0x4801c8	                            add rax, rcx	      4205	syntax.c	FUNCTION_68	CALL_3
0x7984	          0x488b00	                    mov rax, qword [rax]	      4205	syntax.c	FUNCTION_68	CALL_3
0x7987	          0x4889c7	                            mov rdi, rax	      4205	syntax.c	FUNCTION_68	CALL_3
0x798a	      0xe800000000	                          call 0x40079cf	      4205	syntax.c	FUNCTION_68	CALL_3
0x798f	    0x8b0500000000	            mov eax, dword [0x040079d5] 	      4207	syntax.c	FUNCTION_68	IF_1
0x7995	          0x3b45fc	                cmp eax, dword [rbp - 4]	      4207	syntax.c	FUNCTION_68	IF_1
0x7998	            0x7c0c	                            jl 0x40079e6	      4207	syntax.c	FUNCTION_68	IF_1
0x799a	    0x8b0500000000	            mov eax, dword [0x040079e0] 	      4208	syntax.c	FUNCTION_68	IF_1
0x79a0	          0x83c001	                              add eax, 1	      4208	syntax.c	FUNCTION_68	IF_1
0x79a3	          0x8945fc	                mov dword [rbp - 4], eax	      4208	syntax.c	FUNCTION_68	IF_1
0x79a6	          0x8b45fc	                mov eax, dword [rbp - 4]	      4209	syntax.c	FUNCTION_68	IF_2
0x79a9	          0x4863d0	                         movsxd rdx, eax	      4209	syntax.c	FUNCTION_68	IF_2
0x79ac	    0x488b05000000	            mov rax, qword [0x040079f3] 	      4209	syntax.c	FUNCTION_68	IF_2
0x79b3	          0x4839c2	                            cmp rdx, rax	      4209	syntax.c	FUNCTION_68	IF_2
0x79b6	            0x7c0d	                            jl 0x4007a05	      4209	syntax.c	FUNCTION_68	IF_2
0x79b8	    0x488b05000000	            mov rax, qword [0x040079ff] 	      4210	syntax.c	FUNCTION_68	IF_2
0x79bf	          0x83e801	                              sub eax, 1	      4210	syntax.c	FUNCTION_68	IF_2
0x79c2	          0x8945fc	                mov dword [rbp - 4], eax	      4210	syntax.c	FUNCTION_68	IF_2
0x79c5	          0x8b45fc	                mov eax, dword [rbp - 4]	      4212	syntax.c	FUNCTION_68	CALL_4
0x79c8	            0x89c7	                            mov edi, eax	      4212	syntax.c	FUNCTION_68	CALL_4
0x79ca	      0xe800000000	                          call 0x4007a0f	      4212	syntax.c	FUNCTION_68	CALL_4
0x79cf	    0x488b05000000	            mov rax, qword [0x04007a16] 	      4213	syntax.c	FUNCTION_68	IF_3	CALL_5
0x79d6	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4213	syntax.c	FUNCTION_68	IF_3	CALL_5
0x79da	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      4213	syntax.c	FUNCTION_68	IF_3	CALL_5
0x79e1	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4213	syntax.c	FUNCTION_68	IF_3	CALL_5
0x79e4	          0x4863d0	                         movsxd rdx, eax	      4213	syntax.c	FUNCTION_68	IF_3	CALL_5
0x79e7	          0x4889d0	                            mov rax, rdx	      4213	syntax.c	FUNCTION_68	IF_3	CALL_5
0x79ea	          0x4801c0	                            add rax, rax	      4213	syntax.c	FUNCTION_68	IF_3	CALL_5
0x79ed	          0x4801d0	                            add rax, rdx	      4213	syntax.c	FUNCTION_68	IF_3	CALL_5
0x79f0	        0x48c1e003	                              shl rax, 3	      4213	syntax.c	FUNCTION_68	IF_3	CALL_5
0x79f4	          0x4801c8	                            add rax, rcx	      4213	syntax.c	FUNCTION_68	IF_3	CALL_5
0x79f7	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4213	syntax.c	FUNCTION_68	IF_3	CALL_5
0x79fb	          0x4885c0	                           test rax, rax	      4213	syntax.c	FUNCTION_68	IF_3	CALL_5
0x79fe	            0x7443	                            je 0x4007a83	      4213	syntax.c	FUNCTION_68	IF_3	CALL_5
0x7a00	    0x8b0d00000000	            mov ecx, dword [0x04007a46] 	      4215	syntax.c	FUNCTION_68	IF_3	CALL_7
0x7a06	    0x488b05000000	            mov rax, qword [0x04007a4d] 	      4215	syntax.c	FUNCTION_68	IF_3	CALL_7
0x7a0d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4215	syntax.c	FUNCTION_68	IF_3	CALL_7
0x7a11	    0x488bb0880200	           mov rsi, qword [rax + 0x288] 	      4215	syntax.c	FUNCTION_68	IF_3	CALL_7
0x7a18	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4215	syntax.c	FUNCTION_68	IF_3	CALL_7
0x7a1b	          0x4863d0	                         movsxd rdx, eax	      4215	syntax.c	FUNCTION_68	IF_3	CALL_7
0x7a1e	          0x4889d0	                            mov rax, rdx	      4215	syntax.c	FUNCTION_68	IF_3	CALL_7
0x7a21	          0x4801c0	                            add rax, rax	      4215	syntax.c	FUNCTION_68	IF_3	CALL_7
0x7a24	          0x4801d0	                            add rax, rdx	      4215	syntax.c	FUNCTION_68	IF_3	CALL_7
0x7a27	        0x48c1e003	                              shl rax, 3	      4215	syntax.c	FUNCTION_68	IF_3	CALL_7
0x7a2b	          0x4801f0	                            add rax, rsi	      4215	syntax.c	FUNCTION_68	IF_3	CALL_7
0x7a2e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4215	syntax.c	FUNCTION_68	IF_3	CALL_7
0x7a32	            0x89ca	                            mov edx, ecx	      4215	syntax.c	FUNCTION_68	IF_3	CALL_7
0x7a34	          0x4889c6	                            mov rsi, rax	      4215	syntax.c	FUNCTION_68	IF_3	CALL_7
0x7a37	      0xbf00000000	                              mov edi, 0	      4215	syntax.c	FUNCTION_68	IF_3	CALL_7
0x7a3c	      0xe821000000	                    call sym.put_id_list	      4215	syntax.c	FUNCTION_68	IF_3	CALL_7
0x7a41	            0xeb1c	                           jmp 0x4007a9f	      4223	syntax.c	FUNCTION_68
0x7a43	    0x8b0500000000	            mov eax, dword [0x04007a89] 	      4220	syntax.c	FUNCTION_68	ELSE_1	CALL_10
0x7a49	            0x89c6	                            mov esi, eax	      4220	syntax.c	FUNCTION_68	ELSE_1	CALL_10
0x7a4b	      0xbf00000000	                              mov edi, 0	      4220	syntax.c	FUNCTION_68	ELSE_1	CALL_10
0x7a50	      0xe800000000	                          call 0x4007a95	      4220	syntax.c	FUNCTION_68	ELSE_1	CALL_10
0x7a55	      0xbf00000000	                              mov edi, 0	      4221	syntax.c	FUNCTION_68	ELSE_1	CALL_11
0x7a5a	      0xe800000000	                          call 0x4007a9f	      4221	syntax.c	FUNCTION_68	ELSE_1	CALL_11
0x7a5f	              0x90	                                     nop	      4223	syntax.c	FUNCTION_68
0x7a60	              0xc9	                                   leave	      4223	syntax.c	FUNCTION_68
0x7a61	              0xc3	                                     ret	      4223	syntax.c	FUNCTION_68
syn_clear_time	FOR,0:DO,0:IF,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,2	18
0xce1e	              0x55	                                push rbp	      6690	syntax.c	FUNCTION_108
0xce1f	          0x4889e5	                            mov rbp, rsp	      6690	syntax.c	FUNCTION_108
0xce22	        0x4883ec10	                           sub rsp, 0x10	      6690	syntax.c	FUNCTION_108
0xce26	        0x48897df8	                mov qword [rbp - 8], rdi	      6690	syntax.c	FUNCTION_108
0xce2a	        0x488b45f8	                mov rax, qword [rbp - 8]	      6691	syntax.c	FUNCTION_108	CALL_1
0xce2e	          0x4889c7	                            mov rdi, rax	      6691	syntax.c	FUNCTION_108	CALL_1
0xce31	      0xe800000000	                          call 0x400ce76	      6691	syntax.c	FUNCTION_108	CALL_1
0xce36	        0x488b45f8	                mov rax, qword [rbp - 8]	      6692	syntax.c	FUNCTION_108	CALL_2
0xce3a	        0x4883c010	                           add rax, 0x10	      6692	syntax.c	FUNCTION_108	CALL_2
0xce3e	          0x4889c7	                            mov rdi, rax	      6692	syntax.c	FUNCTION_108	CALL_2
0xce41	      0xe800000000	                          call 0x400ce86	      6692	syntax.c	FUNCTION_108	CALL_2
0xce46	        0x488b45f8	                mov rax, qword [rbp - 8]	      6693	syntax.c	FUNCTION_108
0xce4a	    0x48c740200000	               mov qword [rax + 0x20], 0	      6693	syntax.c	FUNCTION_108
0xce52	        0x488b45f8	                mov rax, qword [rbp - 8]	      6694	syntax.c	FUNCTION_108
0xce56	    0x48c740280000	               mov qword [rax + 0x28], 0	      6694	syntax.c	FUNCTION_108
0xce5e	              0x90	                                     nop	      6695	syntax.c	FUNCTION_108
0xce5f	              0xc9	                                   leave	      6695	syntax.c	FUNCTION_108
0xce60	              0xc3	                                     ret	      6695	syntax.c	FUNCTION_108
syn_cmd_clear	FOR,0:DO,0:IF,8:SWITCH,0:functions,0:ELSE,5:WHILE,1:CALL,20	168
0x69b2	              0x55	                                push rbp	      3755	syntax.c	FUNCTION_55
0x69b3	          0x4889e5	                            mov rbp, rsp	      3755	syntax.c	FUNCTION_55
0x69b6	        0x4883ec30	                           sub rsp, 0x30	      3755	syntax.c	FUNCTION_55
0x69ba	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3755	syntax.c	FUNCTION_55
0x69be	          0x8975d4	             mov dword [rbp - 0x2c], esi	      3755	syntax.c	FUNCTION_55
0x69c1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3756	syntax.c	FUNCTION_55
0x69c5	          0x488b00	                    mov rax, qword [rax]	      3756	syntax.c	FUNCTION_55
0x69c8	        0x488945f0	             mov qword [rbp - 0x10], rax	      3756	syntax.c	FUNCTION_55
0x69cc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3760	syntax.c	FUNCTION_55	CALL_1
0x69d0	          0x4889c7	                            mov rdi, rax	      3760	syntax.c	FUNCTION_55	CALL_1
0x69d3	      0xe800000000	                          call 0x4006a18	      3760	syntax.c	FUNCTION_55	CALL_1
0x69d8	          0x4889c2	                            mov rdx, rax	      3760	syntax.c	FUNCTION_55	CALL_1
0x69db	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3760	syntax.c	FUNCTION_55	CALL_1
0x69df	        0x48895008	                mov qword [rax + 8], rdx	      3760	syntax.c	FUNCTION_55	CALL_1
0x69e3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3761	syntax.c	FUNCTION_55	IF_1
0x69e7	          0x8b4030	            mov eax, dword [rax + 0x30] 	      3761	syntax.c	FUNCTION_55	IF_1
0x69ea	            0x85c0	                           test eax, eax	      3761	syntax.c	FUNCTION_55	IF_1
0x69ec	     0xf8546020000	                           jne 0x4006c78	      3761	syntax.c	FUNCTION_55	IF_1
0x69f2	    0x488b05000000	            mov rax, qword [0x04006a39] 	      3770	syntax.c	FUNCTION_55	IF_2
0x69f9	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3770	syntax.c	FUNCTION_55	IF_2
0x69fd	    0x8b8004030000	           mov eax, dword [rax + 0x304] 	      3770	syntax.c	FUNCTION_55	IF_2
0x6a03	            0x85c0	                           test eax, eax	      3770	syntax.c	FUNCTION_55	IF_2
0x6a05	     0xf8530020000	                           jne 0x4006c7b	      3770	syntax.c	FUNCTION_55	IF_2
0x6a0b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3773	syntax.c	FUNCTION_55	IF_3	CALL_2
0x6a0f	           0xfb600	                   movzx eax, byte [rax]	      3773	syntax.c	FUNCTION_55	IF_3	CALL_2
0x6a12	           0xfb6c0	                           movzx eax, al	      3773	syntax.c	FUNCTION_55	IF_3	CALL_2
0x6a15	            0x89c7	                            mov edi, eax	      3773	syntax.c	FUNCTION_55	IF_3	CALL_2
0x6a17	      0xe800000000	                          call 0x4006a5c	      3773	syntax.c	FUNCTION_55	IF_3	CALL_2
0x6a1c	            0x85c0	                           test eax, eax	      3773	syntax.c	FUNCTION_55	IF_3	CALL_2
0x6a1e	     0xf84dc010000	                            je 0x4006c40	      3773	syntax.c	FUNCTION_55	IF_3	CALL_2
0x6a24	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3778	syntax.c	FUNCTION_55	IF_3	IF_4
0x6a28	            0x740a	                            je 0x4006a74	      3778	syntax.c	FUNCTION_55	IF_3	IF_4
0x6a2a	      0xe887fbffff	              call sym.syntax_sync_clear	      3779	syntax.c	FUNCTION_55	IF_3	CALL_3
0x6a2f	      0xe9e5010000	                           jmp 0x4006c59	      3779	syntax.c	FUNCTION_55	IF_3	CALL_3
0x6a34	    0x488b05000000	            mov rax, qword [0x04006a7b] 	      3782	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_4
0x6a3b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3782	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_4
0x6a3f	          0x4889c7	                            mov rdi, rax	      3782	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_4
0x6a42	      0xe800000000	                          call 0x4006a87	      3782	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_4
0x6a47	    0x488b05000000	            mov rax, qword [0x04006a8e] 	      3783	syntax.c	FUNCTION_55	IF_3	ELSE_1	IF_5
0x6a4e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      3783	syntax.c	FUNCTION_55	IF_3	ELSE_1	IF_5
0x6a52	    0x488b05000000	            mov rax, qword [0x04006a99] 	      3783	syntax.c	FUNCTION_55	IF_3	ELSE_1	IF_5
0x6a59	        0x488b4008	                mov rax, qword [rax + 8]	      3783	syntax.c	FUNCTION_55	IF_3	ELSE_1	IF_5
0x6a5d	    0x480568170000	                         add rax, 0x1768	      3783	syntax.c	FUNCTION_55	IF_3	ELSE_1	IF_5
0x6a63	          0x4839c2	                            cmp rdx, rax	      3783	syntax.c	FUNCTION_55	IF_3	ELSE_1	IF_5
0x6a66	            0x750f	                           jne 0x4006ab7	      3783	syntax.c	FUNCTION_55	IF_3	ELSE_1	IF_5
0x6a68	      0xbe01000000	                              mov esi, 1	      3784	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_5
0x6a6d	      0xbf00000000	                              mov edi, 0	      3784	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_5
0x6a72	      0xe800000000	                          call 0x4006ab7	      3784	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_5
0x6a77	      0xbe01000000	                              mov esi, 1	      3785	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_6
0x6a7c	      0xbf00000000	                              mov edi, 0	      3785	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_6
0x6a81	      0xe800000000	                          call 0x4006ac6	      3785	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_6
0x6a86	      0xe98e010000	                           jmp 0x4006c59	      3785	syntax.c	FUNCTION_55	IF_3	ELSE_1	CALL_6
0x6a8b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3795	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_8
0x6a8f	          0x4889c7	                            mov rdi, rax	      3795	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_8
0x6a92	      0xe800000000	                          call 0x4006ad7	      3795	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_8
0x6a97	        0x488945f8	                mov qword [rbp - 8], rax	      3795	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_8
0x6a9b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3796	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6
0x6a9f	           0xfb600	                   movzx eax, byte [rax]	      3796	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6
0x6aa2	            0x3c40	                            cmp al, 0x40	      3796	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6
0x6aa4	     0xf85f2000000	                           jne 0x4006bdc	      3796	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6
0x6aaa	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3798	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	CALL_9
0x6aae	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3798	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	CALL_9
0x6ab2	          0x4829c2	                            sub rdx, rax	      3798	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	CALL_9
0x6ab5	          0x4889d0	                            mov rax, rdx	      3798	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	CALL_9
0x6ab8	          0x83e801	                              sub eax, 1	      3798	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	CALL_9
0x6abb	            0x89c2	                            mov edx, eax	      3798	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	CALL_9
0x6abd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3798	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	CALL_9
0x6ac1	        0x4883c001	                              add rax, 1	      3798	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	CALL_9
0x6ac5	            0x89d6	                            mov esi, edx	      3798	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	CALL_9
0x6ac7	          0x4889c7	                            mov rdi, rax	      3798	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	CALL_9
0x6aca	      0xe8eb3e0000	               call sym.syn_scl_namen2id	      3798	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	CALL_9
0x6acf	          0x8945ec	             mov dword [rbp - 0x14], eax	      3798	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	CALL_9
0x6ad2	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3799	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7
0x6ad6	            0x7521	                           jne 0x4006b39	      3799	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7
0x6ad8	      0xbf00000000	                              mov edi, 0	      3801	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7	CALL_11
0x6add	      0xe800000000	                          call 0x4006b22	      3801	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7	CALL_11
0x6ae2	          0x4889c2	                            mov rdx, rax	      3801	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7	CALL_11
0x6ae5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3801	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7	CALL_11
0x6ae9	          0x4889c6	                            mov rsi, rax	      3801	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7	CALL_11
0x6aec	          0x4889d7	                            mov rdi, rdx	      3801	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7	CALL_11
0x6aef	      0xe800000000	                          call 0x4006b34	      3801	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7	CALL_11
0x6af4	      0xe920010000	                           jmp 0x4006c59	      3802	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	IF_7
0x6af9	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3811	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3
0x6afc	        0x662dd859	                          sub ax, 0x59d8	      3811	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3
0x6b00	        0x668945ea	               mov word [rbp - 0x16], ax	      3811	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3
0x6b04	    0x488b05000000	            mov rax, qword [0x04006b4b] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x6b0b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x6b0f	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x6b16	      0x480fbf55ea	            movsx rdx, word [rbp - 0x16]	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x6b1b	          0x4889d0	                            mov rax, rdx	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x6b1e	          0x4801c0	                            add rax, rax	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x6b21	          0x4801d0	                            add rax, rdx	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x6b24	        0x48c1e003	                              shl rax, 3	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x6b28	          0x4801c8	                            add rax, rcx	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x6b2b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x6b2f	          0x4885c0	                           test rax, rax	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x6b32	     0xf84b8000000	                            je 0x4006c30	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x6b38	    0x488b05000000	            mov rax, qword [0x04006b7f] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x6b3f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x6b43	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x6b4a	      0x480fbf55ea	            movsx rdx, word [rbp - 0x16]	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x6b4f	          0x4889d0	                            mov rax, rdx	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x6b52	          0x4801c0	                            add rax, rax	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x6b55	          0x4801d0	                            add rax, rdx	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x6b58	        0x48c1e003	                              shl rax, 3	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x6b5c	          0x4801c8	                            add rax, rcx	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x6b5f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x6b63	          0x4889c7	                            mov rdi, rax	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x6b66	      0xe800000000	                          call 0x4006bab	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x6b6b	    0x488b05000000	            mov rax, qword [0x04006bb2] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x6b72	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x6b76	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x6b7d	      0x480fbf55ea	            movsx rdx, word [rbp - 0x16]	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x6b82	          0x4889d0	                            mov rax, rdx	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x6b85	          0x4801c0	                            add rax, rax	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x6b88	          0x4801d0	                            add rax, rdx	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x6b8b	        0x48c1e003	                              shl rax, 3	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x6b8f	          0x4801c8	                            add rax, rcx	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x6b92	    0x48c740100000	               mov qword [rax + 0x10], 0	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x6b9a	            0xeb54	                           jmp 0x4006c30	      3813	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	IF_6	ELSE_3	CALL_13
0x6b9c	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3818	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x6ba0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3818	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x6ba4	          0x4829c2	                            sub rdx, rax	      3818	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x6ba7	          0x4889d0	                            mov rax, rdx	      3818	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x6baa	            0x89c2	                            mov edx, eax	      3818	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x6bac	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3818	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x6bb0	            0x89d6	                            mov esi, edx	      3818	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x6bb2	          0x4889c7	                            mov rdi, rax	      3818	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x6bb5	      0xe800000000	                          call 0x4006bfa	      3818	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x6bba	          0x8945ec	             mov dword [rbp - 0x14], eax	      3818	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_14
0x6bbd	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3819	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8
0x6bc1	            0x751e	                           jne 0x4006c21	      3819	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8
0x6bc3	      0xbf00000000	                              mov edi, 0	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_16
0x6bc8	      0xe800000000	                          call 0x4006c0d	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_16
0x6bcd	          0x4889c2	                            mov rdx, rax	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_16
0x6bd0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_16
0x6bd4	          0x4889c6	                            mov rsi, rax	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_16
0x6bd7	          0x4889d7	                            mov rdi, rdx	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_16
0x6bda	      0xe800000000	                          call 0x4006c1f	      3821	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_16
0x6bdf	            0xeb38	                           jmp 0x4006c59	      3822	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	IF_8
0x6be1	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      3825	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_17
0x6be4	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3825	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_17
0x6be7	            0x89d6	                            mov esi, edx	      3825	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_17
0x6be9	            0x89c7	                            mov edi, eax	      3825	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_17
0x6beb	      0xe84e000000	                  call sym.syn_clear_one	      3825	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	ELSE_4	CALL_17
0x6bf0	        0x488b45f8	                mov rax, qword [rbp - 8]	      3827	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_18
0x6bf4	          0x4889c7	                            mov rdi, rax	      3827	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_18
0x6bf7	      0xe800000000	                          call 0x4006c3c	      3827	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_18
0x6bfc	        0x488945f0	             mov qword [rbp - 0x10], rax	      3827	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_18
0x6c00	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3793	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_7
0x6c04	           0xfb600	                   movzx eax, byte [rax]	      3793	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_7
0x6c07	           0xfb6c0	                           movzx eax, al	      3793	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_7
0x6c0a	            0x89c7	                            mov edi, eax	      3793	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_7
0x6c0c	      0xe800000000	                          call 0x4006c51	      3793	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_7
0x6c11	            0x85c0	                           test eax, eax	      3793	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_7
0x6c13	     0xf8472feffff	                            je 0x4006acb	      3793	syntax.c	FUNCTION_55	ELSE_2	WHILE_1	CALL_7
0x6c19	      0xbf23000000	                           mov edi, 0x23	      3830	syntax.c	FUNCTION_55	CALL_19
0x6c1e	      0xe800000000	                          call 0x4006c63	      3830	syntax.c	FUNCTION_55	CALL_19
0x6c23	    0x488b05000000	            mov rax, qword [0x04006c6a] 	      3831	syntax.c	FUNCTION_55	CALL_20
0x6c2a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3831	syntax.c	FUNCTION_55	CALL_20
0x6c2e	          0x4889c7	                            mov rdi, rax	      3831	syntax.c	FUNCTION_55	CALL_20
0x6c31	      0xe800000000	                          call 0x4006c76	      3831	syntax.c	FUNCTION_55	CALL_20
0x6c36	            0xeb04	                           jmp 0x4006c7c	      3831	syntax.c	FUNCTION_55	CALL_20
0x6c38	              0x90	                                     nop	      3762	syntax.c	FUNCTION_55	IF_1
0x6c39	            0xeb01	                           jmp 0x4006c7c	      3762	syntax.c	FUNCTION_55	IF_1
0x6c3b	              0x90	                                     nop	      3771	syntax.c	FUNCTION_55	IF_2
0x6c3c	              0xc9	                                   leave	      3832	syntax.c	FUNCTION_55
0x6c3d	              0xc3	                                     ret	      3832	syntax.c	FUNCTION_55
ex_syntax	FOR,2:DO,0:IF,5:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,7	103
0xc517	              0x55	                                push rbp	      6360	syntax.c	FUNCTION_95
0xc518	          0x4889e5	                            mov rbp, rsp	      6360	syntax.c	FUNCTION_95
0xc51b	        0x4883ec30	                           sub rsp, 0x30	      6360	syntax.c	FUNCTION_95
0xc51f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      6360	syntax.c	FUNCTION_95
0xc523	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6361	syntax.c	FUNCTION_95
0xc527	          0x488b00	                    mov rax, qword [rax]	      6361	syntax.c	FUNCTION_95
0xc52a	        0x488945f0	             mov qword [rbp - 0x10], rax	      6361	syntax.c	FUNCTION_95
0xc52e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6366	syntax.c	FUNCTION_95
0xc532	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6366	syntax.c	FUNCTION_95
0xc536	    0x488905000000	            mov qword [0x0400c57d], rax 	      6366	syntax.c	FUNCTION_95
0xc53d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0xc541	        0x488945e8	             mov qword [rbp - 0x18], rax	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0xc545	            0xeb05	                           jmp 0x400c58c	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0xc547	      0x488345e801	               add qword [rbp - 0x18], 1	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0xc54c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0xc550	           0xfb600	                   movzx eax, byte [rax]	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0xc553	           0xfb6c0	                           movzx eax, al	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0xc556	          0x83e841	                           sub eax, 0x41	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0xc559	          0x83f819	                           cmp eax, 0x19	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0xc55c	            0x76e9	                           jbe 0x400c587	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0xc55e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0xc562	           0xfb600	                   movzx eax, byte [rax]	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0xc565	           0xfb6c0	                           movzx eax, al	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0xc568	          0x83e861	                           sub eax, 0x61	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0xc56b	          0x83f819	                           cmp eax, 0x19	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0xc56e	            0x76d7	                           jbe 0x400c587	      6369	syntax.c	FUNCTION_95	FOR_1	CALL_1
0xc570	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      6371	syntax.c	FUNCTION_95	CALL_2
0xc574	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6371	syntax.c	FUNCTION_95	CALL_2
0xc578	          0x4829c2	                            sub rdx, rax	      6371	syntax.c	FUNCTION_95	CALL_2
0xc57b	          0x4889d0	                            mov rax, rdx	      6371	syntax.c	FUNCTION_95	CALL_2
0xc57e	            0x89c2	                            mov edx, eax	      6371	syntax.c	FUNCTION_95	CALL_2
0xc580	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6371	syntax.c	FUNCTION_95	CALL_2
0xc584	            0x89d6	                            mov esi, edx	      6371	syntax.c	FUNCTION_95	CALL_2
0xc586	          0x4889c7	                            mov rdi, rax	      6371	syntax.c	FUNCTION_95	CALL_2
0xc589	      0xe800000000	                          call 0x400c5ce	      6371	syntax.c	FUNCTION_95	CALL_2
0xc58e	        0x488945f8	                mov qword [rbp - 8], rax	      6371	syntax.c	FUNCTION_95	CALL_2
0xc592	      0x48837df800	                  cmp qword [rbp - 8], 0	      6372	syntax.c	FUNCTION_95	IF_1
0xc597	     0xf84e2000000	                            je 0x400c6bf	      6372	syntax.c	FUNCTION_95	IF_1
0xc59d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6374	syntax.c	FUNCTION_95	IF_1	IF_2
0xc5a1	          0x8b4030	            mov eax, dword [rax + 0x30] 	      6374	syntax.c	FUNCTION_95	IF_1	IF_2
0xc5a4	            0x85c0	                           test eax, eax	      6374	syntax.c	FUNCTION_95	IF_1	IF_2
0xc5a6	            0x740f	                            je 0x400c5f7	      6374	syntax.c	FUNCTION_95	IF_1	IF_2
0xc5a8	    0x8b0500000000	            mov eax, dword [0x0400c5ee] 	      6375	syntax.c	FUNCTION_95	IF_1	IF_2
0xc5ae	          0x83c001	                              add eax, 1	      6375	syntax.c	FUNCTION_95	IF_1	IF_2
0xc5b1	    0x890500000000	            mov dword [0x0400c5f7], eax 	      6375	syntax.c	FUNCTION_95	IF_1	IF_2
0xc5b7	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      6376	syntax.c	FUNCTION_95	IF_1	FOR_2
0xc5be	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      6378	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3
0xc5c1	            0x4898	                                    cdqe	      6378	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3
0xc5c3	        0x48c1e004	                              shl rax, 4	      6378	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3
0xc5c7	    0x480500000000	                              add rax, 0	      6378	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3
0xc5cd	          0x488b00	                    mov rax, qword [rax]	      6378	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3
0xc5d0	          0x4885c0	                           test rax, rax	      6378	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3
0xc5d3	            0x751e	                           jne 0x400c633	      6378	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3
0xc5d5	      0xbf00000000	                              mov edi, 0	      6380	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3	CALL_4
0xc5da	      0xe800000000	                          call 0x400c61f	      6380	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3	CALL_4
0xc5df	          0x4889c2	                            mov rdx, rax	      6380	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3	CALL_4
0xc5e2	        0x488b45f8	                mov rax, qword [rbp - 8]	      6380	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3	CALL_4
0xc5e6	          0x4889c6	                            mov rsi, rax	      6380	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3	CALL_4
0xc5e9	          0x4889d7	                            mov rdi, rdx	      6380	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3	CALL_4
0xc5ec	      0xe800000000	                          call 0x400c631	      6380	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3	CALL_4
0xc5f1	            0xeb66	                           jmp 0x400c699	      6381	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_3
0xc5f3	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      6383	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_5
0xc5f6	            0x4898	                                    cdqe	      6383	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_5
0xc5f8	        0x48c1e004	                              shl rax, 4	      6383	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_5
0xc5fc	    0x480500000000	                              add rax, 0	      6383	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_5
0xc602	          0x488b10	                    mov rdx, qword [rax]	      6383	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_5
0xc605	        0x488b45f8	                mov rax, qword [rbp - 8]	      6383	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_5
0xc609	          0x4889d6	                            mov rsi, rdx	      6383	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_5
0xc60c	          0x4889c7	                            mov rdi, rax	      6383	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_5
0xc60f	      0xe800000000	                          call 0x400c654	      6383	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_5
0xc614	            0x85c0	                           test eax, eax	      6383	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_5
0xc616	            0x7538	                           jne 0x400c690	      6383	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_5
0xc618	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6385	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_6
0xc61c	          0x4889c7	                            mov rdi, rax	      6385	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_6
0xc61f	      0xe800000000	                          call 0x400c664	      6385	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_6
0xc624	          0x4889c2	                            mov rdx, rax	      6385	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_6
0xc627	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6385	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_6
0xc62b	          0x488910	                    mov qword [rax], rdx	      6385	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4	CALL_6
0xc62e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      6386	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0xc631	            0x4898	                                    cdqe	      6386	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0xc633	        0x48c1e004	                              shl rax, 4	      6386	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0xc637	    0x480500000000	                              add rax, 0	      6386	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0xc63d	          0x488b00	                    mov rax, qword [rax]	      6386	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0xc640	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      6386	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0xc644	      0xbe00000000	                              mov esi, 0	      6386	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0xc649	          0x4889d7	                            mov rdi, rdx	      6386	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0xc64c	            0xffd0	                                call rax	      6386	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0xc64e	            0xeb09	                           jmp 0x400c699	      6387	syntax.c	FUNCTION_95	IF_1	FOR_2	IF_4
0xc650	        0x8345e401	               add dword [rbp - 0x1c], 1	      6376	syntax.c	FUNCTION_95	IF_1	FOR_2
0xc654	      0xe965ffffff	                           jmp 0x400c5fe	      6389	syntax.c	FUNCTION_95	IF_1	FOR_2
0xc659	        0x488b45f8	                mov rax, qword [rbp - 8]	      6390	syntax.c	FUNCTION_95	IF_1	CALL_7
0xc65d	          0x4889c7	                            mov rdi, rax	      6390	syntax.c	FUNCTION_95	IF_1	CALL_7
0xc660	      0xe800000000	                          call 0x400c6a5	      6390	syntax.c	FUNCTION_95	IF_1	CALL_7
0xc665	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6391	syntax.c	FUNCTION_95	IF_1	IF_5
0xc669	          0x8b4030	            mov eax, dword [rax + 0x30] 	      6391	syntax.c	FUNCTION_95	IF_1	IF_5
0xc66c	            0x85c0	                           test eax, eax	      6391	syntax.c	FUNCTION_95	IF_1	IF_5
0xc66e	            0x740f	                            je 0x400c6bf	      6391	syntax.c	FUNCTION_95	IF_1	IF_5
0xc670	    0x8b0500000000	            mov eax, dword [0x0400c6b6] 	      6392	syntax.c	FUNCTION_95	IF_1	IF_5
0xc676	          0x83e801	                              sub eax, 1	      6392	syntax.c	FUNCTION_95	IF_1	IF_5
0xc679	    0x890500000000	            mov dword [0x0400c6bf], eax 	      6392	syntax.c	FUNCTION_95	IF_1	IF_5
0xc67f	              0x90	                                     nop	      6394	syntax.c	FUNCTION_95
0xc680	              0xc9	                                   leave	      6394	syntax.c	FUNCTION_95
0xc681	              0xc3	                                     ret	      6394	syntax.c	FUNCTION_95
syn_cmd_onoff	FOR,0:DO,0:IF,1:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,4	40
0x6e1d	              0x55	                                push rbp	      3916	syntax.c	FUNCTION_62
0x6e1e	          0x4889e5	                            mov rbp, rsp	      3916	syntax.c	FUNCTION_62
0x6e21	        0x4883c480	             add rsp, 0xffffffffffffff80	      3916	syntax.c	FUNCTION_62
0x6e25	        0x48897d88	             mov qword [rbp - 0x78], rdi	      3916	syntax.c	FUNCTION_62
0x6e29	        0x48897580	             mov qword [rbp - 0x80], rsi	      3916	syntax.c	FUNCTION_62
0x6e2d	    0x64488b042528	                mov rax, qword fs:[0x28]	      3916	syntax.c	FUNCTION_62
0x6e36	        0x488945f8	                mov qword [rbp - 8], rax	      3916	syntax.c	FUNCTION_62
0x6e3a	            0x31c0	                            xor eax, eax	      3916	syntax.c	FUNCTION_62
0x6e3c	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3919	syntax.c	FUNCTION_62	CALL_1
0x6e40	          0x488b00	                    mov rax, qword [rax]	      3919	syntax.c	FUNCTION_62	CALL_1
0x6e43	          0x4889c7	                            mov rdi, rax	      3919	syntax.c	FUNCTION_62	CALL_1
0x6e46	      0xe800000000	                          call 0x4006e8b	      3919	syntax.c	FUNCTION_62	CALL_1
0x6e4b	          0x4889c2	                            mov rdx, rax	      3919	syntax.c	FUNCTION_62	CALL_1
0x6e4e	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3919	syntax.c	FUNCTION_62	CALL_1
0x6e52	        0x48895008	                mov qword [rax + 8], rdx	      3919	syntax.c	FUNCTION_62	CALL_1
0x6e56	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3920	syntax.c	FUNCTION_62	IF_1
0x6e5a	          0x8b4030	            mov eax, dword [rax + 0x30] 	      3920	syntax.c	FUNCTION_62	IF_1
0x6e5d	            0x85c0	                           test eax, eax	      3920	syntax.c	FUNCTION_62	IF_1
0x6e5f	            0x753c	                           jne 0x4006edd	      3920	syntax.c	FUNCTION_62	IF_1
0x6e61	        0x488d4590	                   lea rax, [rbp - 0x70]	      3922	syntax.c	FUNCTION_62	IF_1	CALL_2
0x6e65	    0xc700736f2000	               mov dword [rax], 0x206f73	      3922	syntax.c	FUNCTION_62	IF_1	CALL_2
0x6e6b	        0x488d4590	                   lea rax, [rbp - 0x70]	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x6e6f	        0x4883c003	                              add rax, 3	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x6e73	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x6e77	          0x4889d1	                            mov rcx, rdx	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x6e7a	      0xba00000000	                              mov edx, 0	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x6e7f	      0xbe61000000	                           mov esi, 0x61	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x6e84	          0x4889c7	                            mov rdi, rax	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x6e87	      0xb800000000	                              mov eax, 0	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x6e8c	      0xe800000000	                          call 0x4006ed1	      3923	syntax.c	FUNCTION_62	IF_1	CALL_3
0x6e91	        0x488d4590	                   lea rax, [rbp - 0x70]	      3924	syntax.c	FUNCTION_62	IF_1	CALL_4
0x6e95	          0x4889c7	                            mov rdi, rax	      3924	syntax.c	FUNCTION_62	IF_1	CALL_4
0x6e98	      0xe800000000	                          call 0x4006edd	      3924	syntax.c	FUNCTION_62	IF_1	CALL_4
0x6e9d	              0x90	                                     nop	      3926	syntax.c	FUNCTION_62
0x6e9e	        0x488b45f8	                mov rax, qword [rbp - 8]	      3926	syntax.c	FUNCTION_62
0x6ea2	    0x644833042528	                xor rax, qword fs:[0x28]	      3926	syntax.c	FUNCTION_62
0x6eab	            0x7405	                            je 0x4006ef2	      3926	syntax.c	FUNCTION_62
0x6ead	      0xe800000000	                          call 0x4006ef2	      3926	syntax.c	FUNCTION_62
0x6eb2	              0xc9	                                   leave	      3926	syntax.c	FUNCTION_62
0x6eb3	              0xc3	                                     ret	      3926	syntax.c	FUNCTION_62
did_match_already	FOR,2:DO,0:IF,2:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,3	68
0x3cc1	              0x55	                                push rbp	      2495	syntax.c	FUNCTION_29
0x3cc2	          0x4889e5	                            mov rbp, rsp	      2495	syntax.c	FUNCTION_29
0x3cc5	          0x897dec	             mov dword [rbp - 0x14], edi	      2495	syntax.c	FUNCTION_29
0x3cc8	        0x488975e0	             mov qword [rbp - 0x20], rsi	      2495	syntax.c	FUNCTION_29
0x3ccc	    0x8b0500000000	            mov eax, dword [0x04003d12] 	      2498	syntax.c	FUNCTION_29	FOR_1
0x3cd2	          0x8945fc	                mov dword [rbp - 4], eax	      2498	syntax.c	FUNCTION_29	FOR_1
0x3cd5	      0xe983000000	                           jmp 0x4003d9d	      2498	syntax.c	FUNCTION_29	FOR_1
0x3cda	    0x488b0d000000	            mov rcx, qword [0x04003d21] 	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_1
0x3ce1	          0x8b45fc	                mov eax, dword [rbp - 4]	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_1
0x3ce4	          0x4863d0	                         movsxd rdx, eax	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_1
0x3ce7	          0x4889d0	                            mov rax, rdx	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_1
0x3cea	        0x48c1e003	                              shl rax, 3	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_1
0x3cee	          0x4801d0	                            add rax, rdx	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_1
0x3cf1	        0x48c1e004	                              shl rax, 4	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_1
0x3cf5	          0x4801c8	                            add rax, rcx	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_1
0x3cf8	          0x8b5010	            mov edx, dword [rax + 0x10] 	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_1
0x3cfb	    0x8b0500000000	            mov eax, dword [0x04003d41] 	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_1
0x3d01	            0x39c2	                            cmp edx, eax	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_1
0x3d03	            0x7558	                           jne 0x4003d9d	      2499	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_1
0x3d05	    0x488b0d000000	            mov rcx, qword [0x04003d4c] 	      2500	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_2
0x3d0c	          0x8b45fc	                mov eax, dword [rbp - 4]	      2500	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_2
0x3d0f	          0x4863d0	                         movsxd rdx, eax	      2500	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_2
0x3d12	          0x4889d0	                            mov rax, rdx	      2500	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_2
0x3d15	        0x48c1e003	                              shl rax, 3	      2500	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_2
0x3d19	          0x4801d0	                            add rax, rdx	      2500	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_2
0x3d1c	        0x48c1e004	                              shl rax, 4	      2500	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_2
0x3d20	          0x4801c8	                            add rax, rcx	      2500	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_2
0x3d23	          0x8b400c	              mov eax, dword [rax + 0xc]	      2500	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_2
0x3d26	    0x488b15000000	            mov rdx, qword [0x04003d6d] 	      2500	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_2
0x3d2d	            0x39d0	                            cmp eax, edx	      2500	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_2
0x3d2f	            0x752c	                           jne 0x4003d9d	      2500	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_2
0x3d31	    0x488b0d000000	            mov rcx, qword [0x04003d78] 	      2501	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_3
0x3d38	          0x8b45fc	                mov eax, dword [rbp - 4]	      2501	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_3
0x3d3b	          0x4863d0	                         movsxd rdx, eax	      2501	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_3
0x3d3e	          0x4889d0	                            mov rax, rdx	      2501	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_3
0x3d41	        0x48c1e003	                              shl rax, 3	      2501	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_3
0x3d45	          0x4801d0	                            add rax, rdx	      2501	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_3
0x3d48	        0x48c1e004	                              shl rax, 4	      2501	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_3
0x3d4c	          0x4801c8	                            add rax, rcx	      2501	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_3
0x3d4f	            0x8b00	                    mov eax, dword [rax]	      2501	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_3
0x3d51	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      2501	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_3
0x3d54	            0x7507	                           jne 0x4003d9d	      2501	syntax.c	FUNCTION_29	FOR_1	IF_1	CALL_3
0x3d56	      0xb801000000	                              mov eax, 1	      2502	syntax.c	FUNCTION_29	FOR_1	IF_1
0x3d5b	            0xeb4b	                           jmp 0x4003de8	      2502	syntax.c	FUNCTION_29	FOR_1	IF_1
0x3d5d	        0x836dfc01	                  sub dword [rbp - 4], 1	      2498	syntax.c	FUNCTION_29	FOR_1
0x3d61	        0x837dfc00	                  cmp dword [rbp - 4], 0	      2498	syntax.c	FUNCTION_29	FOR_1
0x3d65	     0xf896fffffff	                           jns 0x4003d1a	      2498	syntax.c	FUNCTION_29	FOR_1
0x3d6b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2506	syntax.c	FUNCTION_29	FOR_2
0x3d6f	            0x8b00	                    mov eax, dword [rax]	      2506	syntax.c	FUNCTION_29	FOR_2
0x3d71	          0x8945fc	                mov dword [rbp - 4], eax	      2506	syntax.c	FUNCTION_29	FOR_2
0x3d74	            0xeb23	                           jmp 0x4003dd9	      2506	syntax.c	FUNCTION_29	FOR_2
0x3d76	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2507	syntax.c	FUNCTION_29	FOR_2	IF_2
0x3d7a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      2507	syntax.c	FUNCTION_29	FOR_2	IF_2
0x3d7e	          0x8b55fc	                mov edx, dword [rbp - 4]	      2507	syntax.c	FUNCTION_29	FOR_2	IF_2
0x3d81	          0x4863d2	                         movsxd rdx, edx	      2507	syntax.c	FUNCTION_29	FOR_2	IF_2
0x3d84	        0x48c1e202	                              shl rdx, 2	      2507	syntax.c	FUNCTION_29	FOR_2	IF_2
0x3d88	          0x4801d0	                            add rax, rdx	      2507	syntax.c	FUNCTION_29	FOR_2	IF_2
0x3d8b	            0x8b00	                    mov eax, dword [rax]	      2507	syntax.c	FUNCTION_29	FOR_2	IF_2
0x3d8d	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      2507	syntax.c	FUNCTION_29	FOR_2	IF_2
0x3d90	            0x7507	                           jne 0x4003dd9	      2507	syntax.c	FUNCTION_29	FOR_2	IF_2
0x3d92	      0xb801000000	                              mov eax, 1	      2508	syntax.c	FUNCTION_29	FOR_2	IF_2
0x3d97	            0xeb0f	                           jmp 0x4003de8	      2508	syntax.c	FUNCTION_29	FOR_2	IF_2
0x3d99	        0x836dfc01	                  sub dword [rbp - 4], 1	      2506	syntax.c	FUNCTION_29	FOR_2
0x3d9d	        0x837dfc00	                  cmp dword [rbp - 4], 0	      2506	syntax.c	FUNCTION_29	FOR_2
0x3da1	            0x79d3	                           jns 0x4003db6	      2506	syntax.c	FUNCTION_29	FOR_2
0x3da3	      0xb800000000	                              mov eax, 0	      2510	syntax.c	FUNCTION_29
0x3da8	              0x5d	                                 pop rbp	      2511	syntax.c	FUNCTION_29
0x3da9	              0xc3	                                     ret	      2511	syntax.c	FUNCTION_29
do_highlight	FOR,6:DO,0:IF,132:SWITCH,0:functions,0:ELSE,43:WHILE,4:CALL,249	2347
0xd85d	              0x55	                                push rbp	      7364	syntax.c	FUNCTION_116
0xd85e	          0x4889e5	                            mov rbp, rsp	      7364	syntax.c	FUNCTION_116
0xd861	              0x53	                                push rbx	      7364	syntax.c	FUNCTION_116
0xd862	    0x4881ecf80100	                          sub rsp, 0x1f8	      7364	syntax.c	FUNCTION_116
0xd869	    0x4889bd08feff	            mov qword [rbp - 0x1f8], rdi	      7364	syntax.c	FUNCTION_116
0xd870	    0x89b504feffff	            mov dword [rbp - 0x1fc], esi	      7364	syntax.c	FUNCTION_116
0xd876	    0x899500feffff	            mov dword [rbp - 0x200], edx	      7364	syntax.c	FUNCTION_116
0xd87c	    0x64488b042528	                mov rax, qword fs:[0x28]	      7364	syntax.c	FUNCTION_116
0xd885	        0x488945e8	             mov qword [rbp - 0x18], rax	      7364	syntax.c	FUNCTION_116
0xd889	            0x31c0	                            xor eax, eax	      7364	syntax.c	FUNCTION_116
0xd88b	    0x48c78578feff	              mov qword [rbp - 0x188], 0	      7370	syntax.c	FUNCTION_116
0xd896	    0x48c78580feff	              mov qword [rbp - 0x180], 0	      7370	syntax.c	FUNCTION_116
0xd8a1	    0xc78524feffff	              mov dword [rbp - 0x1dc], 0	      7378	syntax.c	FUNCTION_116
0xd8ab	    0xc78528feffff	              mov dword [rbp - 0x1d8], 0	      7379	syntax.c	FUNCTION_116
0xd8b5	    0xc7852cfeffff	              mov dword [rbp - 0x1d4], 0	      7380	syntax.c	FUNCTION_116
0xd8bf	    0xc78530feffff	              mov dword [rbp - 0x1d0], 0	      7381	syntax.c	FUNCTION_116
0xd8c9	    0xc78534feffff	              mov dword [rbp - 0x1cc], 0	      7382	syntax.c	FUNCTION_116
0xd8d3	    0xc7853cfeffff	              mov dword [rbp - 0x1c4], 0	      7384	syntax.c	FUNCTION_116
0xd8dd	    0xc78540feffff	              mov dword [rbp - 0x1c0], 0	      7386	syntax.c	FUNCTION_116
0xd8e7	    0xc78544feffff	              mov dword [rbp - 0x1bc], 0	      7398	syntax.c	FUNCTION_116
0xd8f1	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      7404	syntax.c	FUNCTION_116	IF_1	CALL_1
0xd8f8	           0xfb600	                   movzx eax, byte [rax]	      7404	syntax.c	FUNCTION_116	IF_1	CALL_1
0xd8fb	           0xfb6c0	                           movzx eax, al	      7404	syntax.c	FUNCTION_116	IF_1	CALL_1
0xd8fe	            0x89c7	                            mov edi, eax	      7404	syntax.c	FUNCTION_116	IF_1	CALL_1
0xd900	      0xe800000000	                          call 0x400d945	      7404	syntax.c	FUNCTION_116	IF_1	CALL_1
0xd905	            0x85c0	                           test eax, eax	      7404	syntax.c	FUNCTION_116	IF_1	CALL_1
0xd907	            0x7447	                            je 0x400d990	      7404	syntax.c	FUNCTION_116	IF_1	CALL_1
0xd909	    0x48c78588feff	              mov qword [rbp - 0x178], 1	      7406	syntax.c	FUNCTION_116	IF_1	FOR_1
0xd914	            0xeb16	                           jmp 0x400d96c	      7406	syntax.c	FUNCTION_116	IF_1	FOR_1
0xd916	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      7408	syntax.c	FUNCTION_116	IF_1	CALL_2
0xd91d	            0x89c7	                            mov edi, eax	      7408	syntax.c	FUNCTION_116	IF_1	CALL_2
0xd91f	      0xe898430000	             call sym.highlight_list_one	      7408	syntax.c	FUNCTION_116	IF_1	CALL_2
0xd924	    0x48838588feff	              add qword [rbp - 0x178], 1	      7406	syntax.c	FUNCTION_116	IF_1	FOR_1
0xd92c	    0x8b0500000000	            mov eax, dword [0x0400d972] 	      7406	syntax.c	FUNCTION_116	IF_1	FOR_1
0xd932	            0x4898	                                    cdqe	      7406	syntax.c	FUNCTION_116	IF_1	FOR_1
0xd934	    0x483b8588feff	            cmp rax, qword [rbp - 0x178]	      7406	syntax.c	FUNCTION_116	IF_1	FOR_1
0xd93b	     0xf8c6e270000	                            jl 0x40100ef	      7406	syntax.c	FUNCTION_116	IF_1	FOR_1
0xd941	    0x8b0500000000	            mov eax, dword [0x0400d987] 	      7406	syntax.c	FUNCTION_116	IF_1	FOR_1
0xd947	            0x85c0	                           test eax, eax	      7406	syntax.c	FUNCTION_116	IF_1	FOR_1
0xd949	            0x74cb	                            je 0x400d956	      7406	syntax.c	FUNCTION_116	IF_1	FOR_1
0xd94b	      0xe95f270000	                           jmp 0x40100ef	      7409	syntax.c	FUNCTION_116	IF_1
0xd950	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      7415	syntax.c	FUNCTION_116	CALL_3
0xd957	          0x4889c7	                            mov rdi, rax	      7415	syntax.c	FUNCTION_116	CALL_3
0xd95a	      0xe800000000	                          call 0x400d99f	      7415	syntax.c	FUNCTION_116	CALL_3
0xd95f	    0x48898560feff	            mov qword [rbp - 0x1a0], rax	      7415	syntax.c	FUNCTION_116	CALL_3
0xd966	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      7416	syntax.c	FUNCTION_116	CALL_4
0xd96d	          0x4889c7	                            mov rdi, rax	      7416	syntax.c	FUNCTION_116	CALL_4
0xd970	      0xe800000000	                          call 0x400d9b5	      7416	syntax.c	FUNCTION_116	CALL_4
0xd975	    0x48898568feff	            mov qword [rbp - 0x198], rax	      7416	syntax.c	FUNCTION_116	CALL_4
0xd97c	    0x488b9560feff	            mov rdx, qword [rbp - 0x1a0]	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0xd983	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0xd98a	          0x4829c2	                            sub rdx, rax	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0xd98d	          0x4889d0	                            mov rax, rdx	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0xd990	          0x4889c2	                            mov rdx, rax	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0xd993	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0xd99a	      0xbe00000000	                              mov esi, 0	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0xd99f	          0x4889c7	                            mov rdi, rax	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0xd9a2	      0xe800000000	                          call 0x400d9e7	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0xd9a7	            0x85c0	                           test eax, eax	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0xd9a9	            0x7544	                           jne 0x400da2f	      7421	syntax.c	FUNCTION_116	IF_2	CALL_5
0xd9ab	    0xc78528feffff	              mov dword [rbp - 0x1d8], 1	      7423	syntax.c	FUNCTION_116	IF_2
0xd9b5	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7424	syntax.c	FUNCTION_116	IF_2
0xd9bc	    0x48898508feff	            mov qword [rbp - 0x1f8], rax	      7424	syntax.c	FUNCTION_116	IF_2
0xd9c3	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      7425	syntax.c	FUNCTION_116	IF_2	CALL_6
0xd9ca	          0x4889c7	                            mov rdi, rax	      7425	syntax.c	FUNCTION_116	IF_2	CALL_6
0xd9cd	      0xe800000000	                          call 0x400da12	      7425	syntax.c	FUNCTION_116	IF_2	CALL_6
0xd9d2	    0x48898560feff	            mov qword [rbp - 0x1a0], rax	      7425	syntax.c	FUNCTION_116	IF_2	CALL_6
0xd9d9	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      7426	syntax.c	FUNCTION_116	IF_2	CALL_7
0xd9e0	          0x4889c7	                            mov rdi, rax	      7426	syntax.c	FUNCTION_116	IF_2	CALL_7
0xd9e3	      0xe800000000	                          call 0x400da28	      7426	syntax.c	FUNCTION_116	IF_2	CALL_7
0xd9e8	    0x48898568feff	            mov qword [rbp - 0x198], rax	      7426	syntax.c	FUNCTION_116	IF_2	CALL_7
0xd9ef	    0x488b9560feff	            mov rdx, qword [rbp - 0x1a0]	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0xd9f6	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0xd9fd	          0x4829c2	                            sub rdx, rax	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0xda00	          0x4889d0	                            mov rax, rdx	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0xda03	          0x4889c2	                            mov rdx, rax	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0xda06	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0xda0d	      0xbe00000000	                              mov esi, 0	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0xda12	          0x4889c7	                            mov rdi, rax	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0xda15	      0xe800000000	                          call 0x400da5a	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0xda1a	            0x85c0	                           test eax, eax	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0xda1c	            0x750a	                           jne 0x400da68	      7432	syntax.c	FUNCTION_116	IF_3	CALL_8
0xda1e	    0xc7852cfeffff	              mov dword [rbp - 0x1d4], 1	      7433	syntax.c	FUNCTION_116	IF_3
0xda28	    0x488b9560feff	            mov rdx, qword [rbp - 0x1a0]	      7434	syntax.c	FUNCTION_116	IF_4	CALL_9
0xda2f	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      7434	syntax.c	FUNCTION_116	IF_4	CALL_9
0xda36	          0x4829c2	                            sub rdx, rax	      7434	syntax.c	FUNCTION_116	IF_4	CALL_9
0xda39	          0x4889d0	                            mov rax, rdx	      7434	syntax.c	FUNCTION_116	IF_4	CALL_9
0xda3c	          0x4889c2	                            mov rdx, rax	      7434	syntax.c	FUNCTION_116	IF_4	CALL_9
0xda3f	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      7434	syntax.c	FUNCTION_116	IF_4	CALL_9
0xda46	      0xbe00000000	                              mov esi, 0	      7434	syntax.c	FUNCTION_116	IF_4	CALL_9
0xda4b	          0x4889c7	                            mov rdi, rax	      7434	syntax.c	FUNCTION_116	IF_4	CALL_9
0xda4e	      0xe800000000	                          call 0x400da93	      7434	syntax.c	FUNCTION_116	IF_4	CALL_9
0xda53	            0x85c0	                           test eax, eax	      7434	syntax.c	FUNCTION_116	IF_4	CALL_9
0xda55	            0x750a	                           jne 0x400daa1	      7434	syntax.c	FUNCTION_116	IF_4	CALL_9
0xda57	    0xc78530feffff	              mov dword [rbp - 0x1d0], 1	      7435	syntax.c	FUNCTION_116	IF_4
0xda61	    0x83bd2cfeffff	              cmp dword [rbp - 0x1d4], 0	      7440	syntax.c	FUNCTION_116	IF_5	CALL_10
0xda68	     0xf8591000000	                           jne 0x400db3f	      7440	syntax.c	FUNCTION_116	IF_5	CALL_10
0xda6e	    0x83bd30feffff	              cmp dword [rbp - 0x1d0], 0	      7440	syntax.c	FUNCTION_116	IF_5	CALL_10
0xda75	     0xf8584000000	                           jne 0x400db3f	      7440	syntax.c	FUNCTION_116	IF_5	CALL_10
0xda7b	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7440	syntax.c	FUNCTION_116	IF_5	CALL_10
0xda82	           0xfb600	                   movzx eax, byte [rax]	      7440	syntax.c	FUNCTION_116	IF_5	CALL_10
0xda85	           0xfb6c0	                           movzx eax, al	      7440	syntax.c	FUNCTION_116	IF_5	CALL_10
0xda88	            0x89c7	                            mov edi, eax	      7440	syntax.c	FUNCTION_116	IF_5	CALL_10
0xda8a	      0xe800000000	                          call 0x400dacf	      7440	syntax.c	FUNCTION_116	IF_5	CALL_10
0xda8f	            0x85c0	                           test eax, eax	      7440	syntax.c	FUNCTION_116	IF_5	CALL_10
0xda91	            0x746c	                            je 0x400db3f	      7440	syntax.c	FUNCTION_116	IF_5	CALL_10
0xda93	    0x488b9560feff	            mov rdx, qword [rbp - 0x1a0]	      7442	syntax.c	FUNCTION_116	IF_5	CALL_11
0xda9a	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      7442	syntax.c	FUNCTION_116	IF_5	CALL_11
0xdaa1	          0x4829c2	                            sub rdx, rax	      7442	syntax.c	FUNCTION_116	IF_5	CALL_11
0xdaa4	          0x4889d0	                            mov rax, rdx	      7442	syntax.c	FUNCTION_116	IF_5	CALL_11
0xdaa7	            0x89c2	                            mov edx, eax	      7442	syntax.c	FUNCTION_116	IF_5	CALL_11
0xdaa9	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      7442	syntax.c	FUNCTION_116	IF_5	CALL_11
0xdab0	            0x89d6	                            mov esi, edx	      7442	syntax.c	FUNCTION_116	IF_5	CALL_11
0xdab2	          0x4889c7	                            mov rdi, rax	      7442	syntax.c	FUNCTION_116	IF_5	CALL_11
0xdab5	      0xe800000000	                          call 0x400dafa	      7442	syntax.c	FUNCTION_116	IF_5	CALL_11
0xdaba	    0x898550feffff	            mov dword [rbp - 0x1b0], eax	      7442	syntax.c	FUNCTION_116	IF_5	CALL_11
0xdac0	    0x83bd50feffff	              cmp dword [rbp - 0x1b0], 0	      7443	syntax.c	FUNCTION_116	IF_5	IF_6
0xdac7	            0x7524	                           jne 0x400db2d	      7443	syntax.c	FUNCTION_116	IF_5	IF_6
0xdac9	      0xbf00000000	                              mov edi, 0	      7444	syntax.c	FUNCTION_116	IF_5	CALL_13
0xdace	      0xe800000000	                          call 0x400db13	      7444	syntax.c	FUNCTION_116	IF_5	CALL_13
0xdad3	          0x4889c2	                            mov rdx, rax	      7444	syntax.c	FUNCTION_116	IF_5	CALL_13
0xdad6	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      7444	syntax.c	FUNCTION_116	IF_5	CALL_13
0xdadd	          0x4889c6	                            mov rsi, rax	      7444	syntax.c	FUNCTION_116	IF_5	CALL_13
0xdae0	          0x4889d7	                            mov rdi, rdx	      7444	syntax.c	FUNCTION_116	IF_5	CALL_13
0xdae3	      0xe800000000	                          call 0x400db28	      7444	syntax.c	FUNCTION_116	IF_5	CALL_13
0xdae8	      0xe9cc250000	                           jmp 0x40100f9	      7447	syntax.c	FUNCTION_116	IF_5
0xdaed	    0x8b8550feffff	            mov eax, dword [rbp - 0x1b0]	      7446	syntax.c	FUNCTION_116	IF_5	CALL_14
0xdaf3	            0x89c7	                            mov edi, eax	      7446	syntax.c	FUNCTION_116	IF_5	CALL_14
0xdaf5	      0xe8c2410000	             call sym.highlight_list_one	      7446	syntax.c	FUNCTION_116	IF_5	CALL_14
0xdafa	      0xe9ba250000	                           jmp 0x40100f9	      7447	syntax.c	FUNCTION_116	IF_5
0xdaff	    0x83bd30feffff	              cmp dword [rbp - 0x1d0], 0	      7453	syntax.c	FUNCTION_116	IF_7
0xdb06	     0xf8410040000	                            je 0x400df5c	      7453	syntax.c	FUNCTION_116	IF_7
0xdb0c	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7455	syntax.c	FUNCTION_116	IF_7
0xdb13	    0x488985c0feff	            mov qword [rbp - 0x140], rax	      7455	syntax.c	FUNCTION_116	IF_7
0xdb1a	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      7462	syntax.c	FUNCTION_116	IF_7	CALL_15
0xdb21	          0x4889c7	                            mov rdi, rax	      7462	syntax.c	FUNCTION_116	IF_7	CALL_15
0xdb24	      0xe800000000	                          call 0x400db69	      7462	syntax.c	FUNCTION_116	IF_7	CALL_15
0xdb29	    0x488985c8feff	            mov qword [rbp - 0x138], rax	      7462	syntax.c	FUNCTION_116	IF_7	CALL_15
0xdb30	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	      7463	syntax.c	FUNCTION_116	IF_7	CALL_16
0xdb37	          0x4889c7	                            mov rdi, rax	      7463	syntax.c	FUNCTION_116	IF_7	CALL_16
0xdb3a	      0xe800000000	                          call 0x400db7f	      7463	syntax.c	FUNCTION_116	IF_7	CALL_16
0xdb3f	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      7463	syntax.c	FUNCTION_116	IF_7	CALL_16
0xdb46	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7464	syntax.c	FUNCTION_116	IF_7	CALL_17
0xdb4d	          0x4889c7	                            mov rdi, rax	      7464	syntax.c	FUNCTION_116	IF_7	CALL_17
0xdb50	      0xe800000000	                          call 0x400db95	      7464	syntax.c	FUNCTION_116	IF_7	CALL_17
0xdb55	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      7464	syntax.c	FUNCTION_116	IF_7	CALL_17
0xdb5c	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0xdb63	           0xfb600	                   movzx eax, byte [rax]	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0xdb66	           0xfb6c0	                           movzx eax, al	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0xdb69	            0x89c7	                            mov edi, eax	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0xdb6b	      0xe800000000	                          call 0x400dbb0	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0xdb70	            0x85c0	                           test eax, eax	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0xdb72	            0x7518	                           jne 0x400dbcc	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0xdb74	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0xdb7b	           0xfb600	                   movzx eax, byte [rax]	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0xdb7e	           0xfb6c0	                           movzx eax, al	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0xdb81	            0x89c7	                            mov edi, eax	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0xdb83	      0xe800000000	                          call 0x400dbc8	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0xdb88	            0x85c0	                           test eax, eax	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0xdb8a	            0x7424	                            je 0x400dbf0	      7466	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_19
0xdb8c	      0xbf00000000	                              mov edi, 0	      7468	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_21
0xdb91	      0xe800000000	                          call 0x400dbd6	      7468	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_21
0xdb96	          0x4889c2	                            mov rdx, rax	      7468	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_21
0xdb99	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      7468	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_21
0xdba0	          0x4889c6	                            mov rsi, rax	      7468	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_21
0xdba3	          0x4889d7	                            mov rdi, rdx	      7468	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_21
0xdba6	      0xe800000000	                          call 0x400dbeb	      7468	syntax.c	FUNCTION_116	IF_7	IF_8	CALL_21
0xdbab	      0xe909250000	                           jmp 0x40100f9	      7470	syntax.c	FUNCTION_116	IF_7	IF_8
0xdbb0	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      7473	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_23
0xdbb7	          0x4889c7	                            mov rdi, rax	      7473	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_23
0xdbba	      0xe800000000	                          call 0x400dbff	      7473	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_23
0xdbbf	           0xfb600	                   movzx eax, byte [rax]	      7473	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_23
0xdbc2	           0xfb6c0	                           movzx eax, al	      7473	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_23
0xdbc5	            0x89c7	                            mov edi, eax	      7473	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_23
0xdbc7	      0xe800000000	                          call 0x400dc0c	      7473	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_23
0xdbcc	            0x85c0	                           test eax, eax	      7473	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_23
0xdbce	            0x7524	                           jne 0x400dc34	      7473	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_23
0xdbd0	      0xbf00000000	                              mov edi, 0	      7475	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_25
0xdbd5	      0xe800000000	                          call 0x400dc1a	      7475	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_25
0xdbda	          0x4889c2	                            mov rdx, rax	      7475	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_25
0xdbdd	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      7475	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_25
0xdbe4	          0x4889c6	                            mov rsi, rax	      7475	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_25
0xdbe7	          0x4889d7	                            mov rdi, rdx	      7475	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_25
0xdbea	      0xe800000000	                          call 0x400dc2f	      7475	syntax.c	FUNCTION_116	IF_7	IF_9	CALL_25
0xdbef	      0xe9c5240000	                           jmp 0x40100f9	      7476	syntax.c	FUNCTION_116	IF_7	IF_9
0xdbf4	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	      7479	syntax.c	FUNCTION_116	IF_7	CALL_26
0xdbfb	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      7479	syntax.c	FUNCTION_116	IF_7	CALL_26
0xdc02	          0x4829c2	                            sub rdx, rax	      7479	syntax.c	FUNCTION_116	IF_7	CALL_26
0xdc05	          0x4889d0	                            mov rax, rdx	      7479	syntax.c	FUNCTION_116	IF_7	CALL_26
0xdc08	            0x89c2	                            mov edx, eax	      7479	syntax.c	FUNCTION_116	IF_7	CALL_26
0xdc0a	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	      7479	syntax.c	FUNCTION_116	IF_7	CALL_26
0xdc11	            0x89d6	                            mov esi, edx	      7479	syntax.c	FUNCTION_116	IF_7	CALL_26
0xdc13	          0x4889c7	                            mov rdi, rax	      7479	syntax.c	FUNCTION_116	IF_7	CALL_26
0xdc16	      0xe800000000	                          call 0x400dc5b	      7479	syntax.c	FUNCTION_116	IF_7	CALL_26
0xdc1b	    0x898554feffff	            mov dword [rbp - 0x1ac], eax	      7479	syntax.c	FUNCTION_116	IF_7	CALL_26
0xdc21	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7480	syntax.c	FUNCTION_116	IF_7	IF_10	CALL_27
0xdc28	      0xba04000000	                              mov edx, 4	      7480	syntax.c	FUNCTION_116	IF_7	IF_10	CALL_27
0xdc2d	      0xbe00000000	                              mov esi, 0	      7480	syntax.c	FUNCTION_116	IF_7	IF_10	CALL_27
0xdc32	          0x4889c7	                            mov rdi, rax	      7480	syntax.c	FUNCTION_116	IF_7	IF_10	CALL_27
0xdc35	      0xe800000000	                          call 0x400dc7a	      7480	syntax.c	FUNCTION_116	IF_7	IF_10	CALL_27
0xdc3a	            0x85c0	                           test eax, eax	      7480	syntax.c	FUNCTION_116	IF_7	IF_10	CALL_27
0xdc3c	            0x750c	                           jne 0x400dc8a	      7480	syntax.c	FUNCTION_116	IF_7	IF_10	CALL_27
0xdc3e	    0xc78548feffff	              mov dword [rbp - 0x1b8], 0	      7481	syntax.c	FUNCTION_116	IF_7	IF_10
0xdc48	            0xeb2d	                           jmp 0x400dcb7	      7481	syntax.c	FUNCTION_116	IF_7	IF_10
0xdc4a	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      7483	syntax.c	FUNCTION_116	IF_7	CALL_28
0xdc51	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7483	syntax.c	FUNCTION_116	IF_7	CALL_28
0xdc58	          0x4829c2	                            sub rdx, rax	      7483	syntax.c	FUNCTION_116	IF_7	CALL_28
0xdc5b	          0x4889d0	                            mov rax, rdx	      7483	syntax.c	FUNCTION_116	IF_7	CALL_28
0xdc5e	            0x89c2	                            mov edx, eax	      7483	syntax.c	FUNCTION_116	IF_7	CALL_28
0xdc60	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      7483	syntax.c	FUNCTION_116	IF_7	CALL_28
0xdc67	            0x89d6	                            mov esi, edx	      7483	syntax.c	FUNCTION_116	IF_7	CALL_28
0xdc69	          0x4889c7	                            mov rdi, rax	      7483	syntax.c	FUNCTION_116	IF_7	CALL_28
0xdc6c	      0xe800000000	                          call 0x400dcb1	      7483	syntax.c	FUNCTION_116	IF_7	CALL_28
0xdc71	    0x898548feffff	            mov dword [rbp - 0x1b8], eax	      7483	syntax.c	FUNCTION_116	IF_7	CALL_28
0xdc77	    0x83bd54feffff	              cmp dword [rbp - 0x1ac], 0	      7485	syntax.c	FUNCTION_116	IF_7	IF_11	CALL_29
0xdc7e	     0xf8e2e240000	                           jle 0x40100f2	      7485	syntax.c	FUNCTION_116	IF_7	IF_11	CALL_29
0xdc84	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      7485	syntax.c	FUNCTION_116	IF_7	IF_11	CALL_29
0xdc8b	            0x743b	                            je 0x400dd08	      7485	syntax.c	FUNCTION_116	IF_7	IF_11	CALL_29
0xdc8d	    0x488b0d000000	            mov rcx, qword [0x0400dcd4] 	      7485	syntax.c	FUNCTION_116	IF_7	IF_11	CALL_29
0xdc94	    0x8b8554feffff	            mov eax, dword [rbp - 0x1ac]	      7485	syntax.c	FUNCTION_116	IF_7	IF_11	CALL_29
0xdc9a	          0x4863d0	                         movsxd rdx, eax	      7485	syntax.c	FUNCTION_116	IF_7	IF_11	CALL_29
0xdc9d	          0x4889d0	                            mov rax, rdx	      7485	syntax.c	FUNCTION_116	IF_7	IF_11	CALL_29
0xdca0	        0x48c1e003	                              shl rax, 3	      7485	syntax.c	FUNCTION_116	IF_7	IF_11	CALL_29
0xdca4	          0x4801d0	                            add rax, rdx	      7485	syntax.c	FUNCTION_116	IF_7	IF_11	CALL_29
0xdca7	          0x4801c0	                            add rax, rax	      7485	syntax.c	FUNCTION_116	IF_7	IF_11	CALL_29
0xdcaa	          0x4801d0	                            add rax, rdx	      7485	syntax.c	FUNCTION_116	IF_7	IF_11	CALL_29
0xdcad	        0x48c1e003	                              shl rax, 3	      7485	syntax.c	FUNCTION_116	IF_7	IF_11	CALL_29
0xdcb1	    0x482d98000000	                           sub rax, 0x98	      7485	syntax.c	FUNCTION_116	IF_7	IF_11	CALL_29
0xdcb7	          0x4801c8	                            add rax, rcx	      7485	syntax.c	FUNCTION_116	IF_7	IF_11	CALL_29
0xdcba	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      7485	syntax.c	FUNCTION_116	IF_7	IF_11	CALL_29
0xdcc0	            0x85c0	                           test eax, eax	      7485	syntax.c	FUNCTION_116	IF_7	IF_11	CALL_29
0xdcc2	     0xf85ea230000	                           jne 0x40100f2	      7485	syntax.c	FUNCTION_116	IF_7	IF_11	CALL_29
0xdcc8	    0x83bd48feffff	              cmp dword [rbp - 0x1b8], 0	      7491	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12
0xdccf	            0x7e62	                           jle 0x400dd73	      7491	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12
0xdcd1	    0x83bd04feffff	              cmp dword [rbp - 0x1fc], 0	      7491	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12
0xdcd8	            0x7559	                           jne 0x400dd73	      7491	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12
0xdcda	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      7491	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12
0xdce1	            0x7550	                           jne 0x400dd73	      7491	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12
0xdce3	    0x8b8554feffff	            mov eax, dword [rbp - 0x1ac]	      7492	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_30
0xdce9	          0x8d50ff	                      lea edx, [rax - 1]	      7492	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_30
0xdcec	    0x8b8528feffff	            mov eax, dword [rbp - 0x1d8]	      7492	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_30
0xdcf2	            0x89c6	                            mov esi, eax	      7492	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_30
0xdcf4	            0x89d7	                            mov edi, edx	      7492	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_30
0xdcf6	      0xe817240000	                call sym.hl_has_settings	      7492	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_30
0xdcfb	            0x85c0	                           test eax, eax	      7492	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_30
0xdcfd	            0x7434	                            je 0x400dd73	      7492	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_30
0xdcff	    0x488b05000000	            mov rax, qword [0x0400dd46] 	      7494	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	IF_13
0xdd06	          0x4885c0	                           test rax, rax	      7494	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	IF_13
0xdd09	     0xf8507020000	                           jne 0x400df56	      7494	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	IF_13
0xdd0f	    0x83bd28feffff	              cmp dword [rbp - 0x1d8], 0	      7494	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	IF_13
0xdd16	     0xf85fa010000	                           jne 0x400df56	      7494	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	IF_13
0xdd1c	      0xbf00000000	                              mov edi, 0	      7495	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_32
0xdd21	      0xe800000000	                          call 0x400dd66	      7495	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_32
0xdd26	          0x4889c7	                            mov rdi, rax	      7495	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_32
0xdd29	      0xe800000000	                          call 0x400dd6e	      7495	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	CALL_32
0xdd2e	      0xe9e3010000	                           jmp 0x400df56	      7494	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	IF_13
0xdd33	    0x488b0d000000	            mov rcx, qword [0x0400dd7a] 	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_33
0xdd3a	    0x8b8554feffff	            mov eax, dword [rbp - 0x1ac]	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_33
0xdd40	          0x4863d0	                         movsxd rdx, eax	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_33
0xdd43	          0x4889d0	                            mov rax, rdx	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_33
0xdd46	        0x48c1e003	                              shl rax, 3	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_33
0xdd4a	          0x4801d0	                            add rax, rdx	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_33
0xdd4d	          0x4801c0	                            add rax, rax	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_33
0xdd50	          0x4801d0	                            add rax, rdx	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_33
0xdd53	        0x48c1e003	                              shl rax, 3	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_33
0xdd57	    0x482d98000000	                           sub rax, 0x98	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_33
0xdd5d	          0x4801c8	                            add rax, rcx	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_33
0xdd60	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_33
0xdd66	    0x3b8548feffff	            cmp eax, dword [rbp - 0x1b8]	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_33
0xdd6c	            0x7575	                           jne 0x400de23	      7497	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_33
0xdd6e	    0x488b0d000000	            mov rcx, qword [0x0400ddb5] 	      7499	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_34
0xdd75	    0x8b8554feffff	            mov eax, dword [rbp - 0x1ac]	      7499	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_34
0xdd7b	          0x4863d0	                         movsxd rdx, eax	      7499	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_34
0xdd7e	          0x4889d0	                            mov rax, rdx	      7499	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_34
0xdd81	        0x48c1e003	                              shl rax, 3	      7499	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_34
0xdd85	          0x4801d0	                            add rax, rdx	      7499	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_34
0xdd88	          0x4801c0	                            add rax, rax	      7499	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_34
0xdd8b	          0x4801d0	                            add rax, rdx	      7499	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_34
0xdd8e	        0x48c1e003	                              shl rax, 3	      7499	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_34
0xdd92	    0x482d98000000	                           sub rax, 0x98	      7499	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_34
0xdd98	          0x4801c8	                            add rax, rcx	      7499	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_34
0xdd9b	    0x8b9090000000	            mov edx, dword [rax + 0x90] 	      7499	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_34
0xdda1	    0x8b0500000000	            mov eax, dword [0x0400dde7] 	      7499	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_34
0xdda7	            0x39c2	                            cmp edx, eax	      7499	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_34
0xdda9	            0x7538	                           jne 0x400de23	      7499	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_34
0xddab	    0x488b0d000000	            mov rcx, qword [0x0400ddf2] 	      7501	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_35
0xddb2	    0x8b8554feffff	            mov eax, dword [rbp - 0x1ac]	      7501	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_35
0xddb8	          0x4863d0	                         movsxd rdx, eax	      7501	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_35
0xddbb	          0x4889d0	                            mov rax, rdx	      7501	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_35
0xddbe	        0x48c1e003	                              shl rax, 3	      7501	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_35
0xddc2	          0x4801d0	                            add rax, rdx	      7501	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_35
0xddc5	          0x4801c0	                            add rax, rax	      7501	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_35
0xddc8	          0x4801d0	                            add rax, rdx	      7501	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_35
0xddcb	        0x48c1e003	                              shl rax, 3	      7501	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_35
0xddcf	    0x482d98000000	                           sub rax, 0x98	      7501	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_35
0xddd5	          0x4801c8	                            add rax, rcx	      7501	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_35
0xddd8	          0x8b4010	            mov eax, dword [rax + 0x10] 	      7501	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_35
0xdddb	            0x85c0	                           test eax, eax	      7501	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_35
0xdddd	     0xf84cf220000	                            je 0x40100f2	      7501	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_35
0xdde3	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      7503	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	IF_15
0xddea	            0x7569	                           jne 0x400de95	      7503	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	IF_15
0xddec	    0x488b0d000000	            mov rcx, qword [0x0400de33] 	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_36
0xddf3	    0x8b8554feffff	            mov eax, dword [rbp - 0x1ac]	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_36
0xddf9	          0x4863d0	                         movsxd rdx, eax	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_36
0xddfc	          0x4889d0	                            mov rax, rdx	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_36
0xddff	        0x48c1e003	                              shl rax, 3	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_36
0xde03	          0x4801d0	                            add rax, rdx	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_36
0xde06	          0x4801c0	                            add rax, rax	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_36
0xde09	          0x4801d0	                            add rax, rdx	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_36
0xde0c	        0x48c1e003	                              shl rax, 3	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_36
0xde10	    0x482d98000000	                           sub rax, 0x98	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_36
0xde16	          0x4801c1	                            add rcx, rax	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_36
0xde19	    0x488b35000000	            mov rsi, qword [0x0400de60] 	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_36
0xde20	    0x8b8554feffff	            mov eax, dword [rbp - 0x1ac]	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_36
0xde26	          0x4863d0	                         movsxd rdx, eax	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_36
0xde29	          0x4889d0	                            mov rax, rdx	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_36
0xde2c	        0x48c1e003	                              shl rax, 3	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_36
0xde30	          0x4801d0	                            add rax, rdx	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_36
0xde33	          0x4801c0	                            add rax, rax	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_36
0xde36	          0x4801d0	                            add rax, rdx	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_36
0xde39	        0x48c1e003	                              shl rax, 3	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_36
0xde3d	    0x482d98000000	                           sub rax, 0x98	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_36
0xde43	          0x4801f0	                            add rax, rsi	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_36
0xde46	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_36
0xde4c	          0x83c808	                               or eax, 8	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_36
0xde4f	    0x89818c000000	             mov dword [rcx + 0x8c], eax	      7504	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_36
0xde55	    0x488b0d000000	            mov rcx, qword [0x0400de9c] 	      7505	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_37
0xde5c	    0x8b8554feffff	            mov eax, dword [rbp - 0x1ac]	      7505	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_37
0xde62	          0x4863d0	                         movsxd rdx, eax	      7505	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_37
0xde65	          0x4889d0	                            mov rax, rdx	      7505	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_37
0xde68	        0x48c1e003	                              shl rax, 3	      7505	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_37
0xde6c	          0x4801d0	                            add rax, rdx	      7505	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_37
0xde6f	          0x4801c0	                            add rax, rax	      7505	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_37
0xde72	          0x4801d0	                            add rax, rdx	      7505	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_37
0xde75	        0x48c1e003	                              shl rax, 3	      7505	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_37
0xde79	    0x482d98000000	                           sub rax, 0x98	      7505	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_37
0xde7f	        0x488d1401	                    lea rdx, [rcx + rax]	      7505	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_37
0xde83	    0x8b8548feffff	            mov eax, dword [rbp - 0x1b8]	      7505	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_37
0xde89	    0x898288000000	             mov dword [rdx + 0x88], eax	      7505	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_37
0xde8f	    0x488b0d000000	            mov rcx, qword [0x0400ded6] 	      7507	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_38
0xde96	    0x8b8554feffff	            mov eax, dword [rbp - 0x1ac]	      7507	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_38
0xde9c	          0x4863d0	                         movsxd rdx, eax	      7507	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_38
0xde9f	          0x4889d0	                            mov rax, rdx	      7507	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_38
0xdea2	        0x48c1e003	                              shl rax, 3	      7507	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_38
0xdea6	          0x4801d0	                            add rax, rdx	      7507	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_38
0xdea9	          0x4801c0	                            add rax, rax	      7507	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_38
0xdeac	          0x4801d0	                            add rax, rdx	      7507	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_38
0xdeaf	        0x48c1e003	                              shl rax, 3	      7507	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_38
0xdeb3	    0x482d98000000	                           sub rax, 0x98	      7507	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_38
0xdeb9	        0x488d1401	                    lea rdx, [rcx + rax]	      7507	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_38
0xdebd	    0x8b0500000000	            mov eax, dword [0x0400df03] 	      7507	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_38
0xdec3	    0x898290000000	             mov dword [rdx + 0x90], eax	      7507	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_38
0xdec9	    0x488b0d000000	            mov rcx, qword [0x0400df10] 	      7509	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_39
0xded0	    0x8b8554feffff	            mov eax, dword [rbp - 0x1ac]	      7509	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_39
0xded6	          0x4863d0	                         movsxd rdx, eax	      7509	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_39
0xded9	          0x4889d0	                            mov rax, rdx	      7509	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_39
0xdedc	        0x48c1e003	                              shl rax, 3	      7509	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_39
0xdee0	          0x4801d0	                            add rax, rdx	      7509	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_39
0xdee3	          0x4801c0	                            add rax, rax	      7509	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_39
0xdee6	          0x4801d0	                            add rax, rdx	      7509	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_39
0xdee9	        0x48c1e003	                              shl rax, 3	      7509	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_39
0xdeed	    0x482d98000000	                           sub rax, 0x98	      7509	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_39
0xdef3	          0x4801c8	                            add rax, rcx	      7509	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_39
0xdef6	    0xc74010000000	               mov dword [rax + 0x10], 0	      7509	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_39
0xdefd	      0xbf23000000	                           mov edi, 0x23	      7510	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_40
0xdf02	      0xe800000000	                          call 0x400df47	      7510	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14	CALL_40
0xdf07	    0xc70500000000	               mov dword [0x0400df51], 1	      7513	syntax.c	FUNCTION_116	IF_7	IF_11	ELSE_3	IF_14
0xdf11	      0xe99c210000	                           jmp 0x40100f2	      7517	syntax.c	FUNCTION_116	IF_7
0xdf16	              0x90	                                     nop	      7494	syntax.c	FUNCTION_116	IF_7	IF_11	IF_12	IF_13
0xdf17	      0xe996210000	                           jmp 0x40100f2	      7517	syntax.c	FUNCTION_116	IF_7
0xdf1c	    0x83bd2cfeffff	              cmp dword [rbp - 0x1d4], 0	      7520	syntax.c	FUNCTION_116	IF_16
0xdf23	     0xf84cd000000	                            je 0x400e036	      7520	syntax.c	FUNCTION_116	IF_16
0xdf29	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7525	syntax.c	FUNCTION_116	IF_16
0xdf30	    0x48898508feff	            mov qword [rbp - 0x1f8], rax	      7525	syntax.c	FUNCTION_116	IF_16
0xdf37	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      7526	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_41
0xdf3e	           0xfb600	                   movzx eax, byte [rax]	      7526	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_41
0xdf41	           0xfb6c0	                           movzx eax, al	      7526	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_41
0xdf44	            0x89c7	                            mov edi, eax	      7526	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_41
0xdf46	      0xe800000000	                          call 0x400df8b	      7526	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_41
0xdf4b	            0x85c0	                           test eax, eax	      7526	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_41
0xdf4d	            0x747b	                            je 0x400e00a	      7526	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_41
0xdf4f	      0xbe01000000	                              mov esi, 1	      7573	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_49
0xdf54	      0xbf00000000	                              mov edi, 0	      7573	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_49
0xdf59	      0xe800000000	                          call 0x400df9e	      7573	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_49
0xdf5e	      0xe800000000	                          call 0x400dfa3	      7575	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_50
0xdf63	    0xc78520feffff	              mov dword [rbp - 0x1e0], 0	      7580	syntax.c	FUNCTION_116	IF_16	IF_17	FOR_2
0xdf6d	            0xeb14	                           jmp 0x400dfc3	      7580	syntax.c	FUNCTION_116	IF_16	IF_17	FOR_2
0xdf6f	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7581	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_51
0xdf75	            0x89c7	                            mov edi, eax	      7581	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_51
0xdf77	      0xe88f230000	                call sym.highlight_clear	      7581	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_51
0xdf7c	    0x838520feffff	              add dword [rbp - 0x1e0], 1	      7580	syntax.c	FUNCTION_116	IF_16	IF_17	FOR_2
0xdf83	    0x8b0500000000	            mov eax, dword [0x0400dfc9] 	      7580	syntax.c	FUNCTION_116	IF_16	IF_17	FOR_2
0xdf89	    0x3b8520feffff	            cmp eax, dword [rbp - 0x1e0]	      7580	syntax.c	FUNCTION_116	IF_16	IF_17	FOR_2
0xdf8f	            0x7fde	                            jg 0x400dfaf	      7580	syntax.c	FUNCTION_116	IF_16	IF_17	FOR_2
0xdf91	      0xbe01000000	                              mov esi, 1	      7582	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_52
0xdf96	      0xbf01000000	                              mov edi, 1	      7582	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_52
0xdf9b	      0xe800000000	                          call 0x400dfe0	      7582	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_52
0xdfa0	    0x8b0500000000	            mov eax, dword [0x0400dfe6] 	      7584	syntax.c	FUNCTION_116	IF_16	IF_17	IF_20
0xdfa6	            0x85c0	                           test eax, eax	      7584	syntax.c	FUNCTION_116	IF_16	IF_17	IF_20
0xdfa8	            0x750a	                           jne 0x400dff4	      7584	syntax.c	FUNCTION_116	IF_16	IF_17	IF_20
0xdfaa	    0x8b0500000000	            mov eax, dword [0x0400dff0] 	      7584	syntax.c	FUNCTION_116	IF_16	IF_17	IF_20
0xdfb0	            0x85c0	                           test eax, eax	      7584	syntax.c	FUNCTION_116	IF_16	IF_17	IF_20
0xdfb2	            0x7407	                            je 0x400dffb	      7584	syntax.c	FUNCTION_116	IF_16	IF_17	IF_20
0xdfb4	      0xe800000000	                          call 0x400dff9	      7585	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_53
0xdfb9	            0xeb05	                           jmp 0x400e000	      7585	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_53
0xdfbb	      0xe800000000	                          call 0x400e000	      7588	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_54
0xdfc0	      0xe800000000	                          call 0x400e005	      7589	syntax.c	FUNCTION_116	IF_16	IF_17	CALL_55
0xdfc5	      0xe9ef200000	                           jmp 0x40100f9	      7590	syntax.c	FUNCTION_116	IF_16	IF_17
0xdfca	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      7592	syntax.c	FUNCTION_116	IF_16	CALL_56
0xdfd1	          0x4889c7	                            mov rdi, rax	      7592	syntax.c	FUNCTION_116	IF_16	CALL_56
0xdfd4	      0xe800000000	                          call 0x400e019	      7592	syntax.c	FUNCTION_116	IF_16	CALL_56
0xdfd9	    0x48898560feff	            mov qword [rbp - 0x1a0], rax	      7592	syntax.c	FUNCTION_116	IF_16	CALL_56
0xdfe0	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      7593	syntax.c	FUNCTION_116	IF_16	CALL_57
0xdfe7	          0x4889c7	                            mov rdi, rax	      7593	syntax.c	FUNCTION_116	IF_16	CALL_57
0xdfea	      0xe800000000	                          call 0x400e02f	      7593	syntax.c	FUNCTION_116	IF_16	CALL_57
0xdfef	    0x48898568feff	            mov qword [rbp - 0x198], rax	      7593	syntax.c	FUNCTION_116	IF_16	CALL_57
0xdff6	    0x488b9560feff	            mov rdx, qword [rbp - 0x1a0]	      7599	syntax.c	FUNCTION_116	CALL_58
0xdffd	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      7599	syntax.c	FUNCTION_116	CALL_58
0xe004	          0x4829c2	                            sub rdx, rax	      7599	syntax.c	FUNCTION_116	CALL_58
0xe007	          0x4889d0	                            mov rax, rdx	      7599	syntax.c	FUNCTION_116	CALL_58
0xe00a	            0x89c2	                            mov edx, eax	      7599	syntax.c	FUNCTION_116	CALL_58
0xe00c	    0x488b8508feff	            mov rax, qword [rbp - 0x1f8]	      7599	syntax.c	FUNCTION_116	CALL_58
0xe013	            0x89d6	                            mov esi, edx	      7599	syntax.c	FUNCTION_116	CALL_58
0xe015	          0x4889c7	                            mov rdi, rax	      7599	syntax.c	FUNCTION_116	CALL_58
0xe018	      0xe800000000	                          call 0x400e05d	      7599	syntax.c	FUNCTION_116	CALL_58
0xe01d	    0x898550feffff	            mov dword [rbp - 0x1b0], eax	      7599	syntax.c	FUNCTION_116	CALL_58
0xe023	    0x83bd50feffff	              cmp dword [rbp - 0x1b0], 0	      7600	syntax.c	FUNCTION_116	IF_21
0xe02a	     0xf8485200000	                            je 0x40100f5	      7600	syntax.c	FUNCTION_116	IF_21
0xe030	    0x8b8550feffff	            mov eax, dword [rbp - 0x1b0]	      7602	syntax.c	FUNCTION_116
0xe036	          0x83e801	                              sub eax, 1	      7602	syntax.c	FUNCTION_116
0xe039	    0x898520feffff	            mov dword [rbp - 0x1e0], eax	      7602	syntax.c	FUNCTION_116
0xe03f	    0x83bd28feffff	              cmp dword [rbp - 0x1d8], 0	      7605	syntax.c	FUNCTION_116	IF_22	CALL_59
0xe046	            0x741a	                            je 0x400e0a2	      7605	syntax.c	FUNCTION_116	IF_22	CALL_59
0xe048	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7605	syntax.c	FUNCTION_116	IF_22	CALL_59
0xe04e	      0xbe01000000	                              mov esi, 1	      7605	syntax.c	FUNCTION_116	IF_22	CALL_59
0xe053	            0x89c7	                            mov edi, eax	      7605	syntax.c	FUNCTION_116	IF_22	CALL_59
0xe055	      0xe8b8200000	                call sym.hl_has_settings	      7605	syntax.c	FUNCTION_116	IF_22	CALL_59
0xe05a	            0x85c0	                           test eax, eax	      7605	syntax.c	FUNCTION_116	IF_22	CALL_59
0xe05c	     0xf8556200000	                           jne 0x40100f8	      7605	syntax.c	FUNCTION_116	IF_22	CALL_59
0xe062	    0x488b0d000000	            mov rcx, qword [0x0400e0a9] 	      7609	syntax.c	FUNCTION_116	CALL_60
0xe069	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7609	syntax.c	FUNCTION_116	CALL_60
0xe06f	          0x4863d0	                         movsxd rdx, eax	      7609	syntax.c	FUNCTION_116	CALL_60
0xe072	          0x4889d0	                            mov rax, rdx	      7609	syntax.c	FUNCTION_116	CALL_60
0xe075	        0x48c1e003	                              shl rax, 3	      7609	syntax.c	FUNCTION_116	CALL_60
0xe079	          0x4801d0	                            add rax, rdx	      7609	syntax.c	FUNCTION_116	CALL_60
0xe07c	          0x4801c0	                            add rax, rax	      7609	syntax.c	FUNCTION_116	CALL_60
0xe07f	          0x4801d0	                            add rax, rdx	      7609	syntax.c	FUNCTION_116	CALL_60
0xe082	        0x48c1e003	                              shl rax, 3	      7609	syntax.c	FUNCTION_116	CALL_60
0xe086	        0x488d1401	                    lea rdx, [rcx + rax]	      7609	syntax.c	FUNCTION_116	CALL_60
0xe08a	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	      7609	syntax.c	FUNCTION_116	CALL_60
0xe091	          0x4889d6	                            mov rsi, rdx	      7609	syntax.c	FUNCTION_116	CALL_60
0xe094	      0xba13000000	                           mov edx, 0x13	      7609	syntax.c	FUNCTION_116	CALL_60
0xe099	          0x4889c7	                            mov rdi, rax	      7609	syntax.c	FUNCTION_116	CALL_60
0xe09c	          0x4889d1	                            mov rcx, rdx	      7609	syntax.c	FUNCTION_116	CALL_60
0xe09f	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	      7609	syntax.c	FUNCTION_116	CALL_60
0xe0a2	    0x488b0d000000	            mov rcx, qword [0x0400e0e9] 	      7611	syntax.c	FUNCTION_116	IF_23	CALL_62
0xe0a9	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7611	syntax.c	FUNCTION_116	IF_23	CALL_62
0xe0af	          0x4863d0	                         movsxd rdx, eax	      7611	syntax.c	FUNCTION_116	IF_23	CALL_62
0xe0b2	          0x4889d0	                            mov rax, rdx	      7611	syntax.c	FUNCTION_116	IF_23	CALL_62
0xe0b5	        0x48c1e003	                              shl rax, 3	      7611	syntax.c	FUNCTION_116	IF_23	CALL_62
0xe0b9	          0x4801d0	                            add rax, rdx	      7611	syntax.c	FUNCTION_116	IF_23	CALL_62
0xe0bc	          0x4801c0	                            add rax, rax	      7611	syntax.c	FUNCTION_116	IF_23	CALL_62
0xe0bf	          0x4801d0	                            add rax, rdx	      7611	syntax.c	FUNCTION_116	IF_23	CALL_62
0xe0c2	        0x48c1e003	                              shl rax, 3	      7611	syntax.c	FUNCTION_116	IF_23	CALL_62
0xe0c6	          0x4801c8	                            add rax, rcx	      7611	syntax.c	FUNCTION_116	IF_23	CALL_62
0xe0c9	        0x488b4008	                mov rax, qword [rax + 8]	      7611	syntax.c	FUNCTION_116	IF_23	CALL_62
0xe0cd	      0xbe00000000	                              mov esi, 0	      7611	syntax.c	FUNCTION_116	IF_23	CALL_62
0xe0d2	          0x4889c7	                            mov rdi, rax	      7611	syntax.c	FUNCTION_116	IF_23	CALL_62
0xe0d5	      0xe800000000	                          call 0x400e11a	      7611	syntax.c	FUNCTION_116	IF_23	CALL_62
0xe0da	            0x85c0	                           test eax, eax	      7611	syntax.c	FUNCTION_116	IF_23	CALL_62
0xe0dc	            0x750c	                           jne 0x400e12a	      7611	syntax.c	FUNCTION_116	IF_23	CALL_62
0xe0de	    0xc7853cfeffff	              mov dword [rbp - 0x1c4], 1	      7612	syntax.c	FUNCTION_116	IF_23
0xe0e8	            0xeb46	                           jmp 0x400e170	      7612	syntax.c	FUNCTION_116	IF_23
0xe0ea	    0x488b0d000000	            mov rcx, qword [0x0400e131] 	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_64
0xe0f1	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_64
0xe0f7	          0x4863d0	                         movsxd rdx, eax	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_64
0xe0fa	          0x4889d0	                            mov rax, rdx	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_64
0xe0fd	        0x48c1e003	                              shl rax, 3	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_64
0xe101	          0x4801d0	                            add rax, rdx	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_64
0xe104	          0x4801c0	                            add rax, rax	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_64
0xe107	          0x4801d0	                            add rax, rdx	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_64
0xe10a	        0x48c1e003	                              shl rax, 3	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_64
0xe10e	          0x4801c8	                            add rax, rcx	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_64
0xe111	        0x488b4008	                mov rax, qword [rax + 8]	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_64
0xe115	      0xbe00000000	                              mov esi, 0	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_64
0xe11a	          0x4889c7	                            mov rdi, rax	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_64
0xe11d	      0xe800000000	                          call 0x400e162	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_64
0xe122	            0x85c0	                           test eax, eax	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_64
0xe124	            0x750a	                           jne 0x400e170	      7614	syntax.c	FUNCTION_116	ELSE_5	IF_24	CALL_64
0xe126	    0xc78540feffff	              mov dword [rbp - 0x1c0], 1	      7615	syntax.c	FUNCTION_116	ELSE_5	IF_24
0xe130	    0x83bd2cfeffff	              cmp dword [rbp - 0x1d4], 0	      7627	syntax.c	FUNCTION_116	IF_28
0xe137	            0x7512	                           jne 0x400e18b	      7627	syntax.c	FUNCTION_116	IF_28
0xe139	    0x83bd04feffff	              cmp dword [rbp - 0x1fc], 0	      7627	syntax.c	FUNCTION_116	IF_28
0xe140	            0x7450	                            je 0x400e1d2	      7627	syntax.c	FUNCTION_116	IF_28
0xe142	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      7627	syntax.c	FUNCTION_116	IF_28
0xe149	            0x7447	                            je 0x400e1d2	      7627	syntax.c	FUNCTION_116	IF_28
0xe14b	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7629	syntax.c	FUNCTION_116	IF_28	CALL_71
0xe151	            0x89c7	                            mov edi, eax	      7629	syntax.c	FUNCTION_116	IF_28	CALL_71
0xe153	      0xe8b3210000	                call sym.highlight_clear	      7629	syntax.c	FUNCTION_116	IF_28	CALL_71
0xe158	    0x83bd2cfeffff	              cmp dword [rbp - 0x1d4], 0	      7630	syntax.c	FUNCTION_116	IF_28	IF_29
0xe15f	            0x7531	                           jne 0x400e1d2	      7630	syntax.c	FUNCTION_116	IF_28	IF_29
0xe161	    0x488b0d000000	            mov rcx, qword [0x0400e1a8] 	      7631	syntax.c	FUNCTION_116	IF_28	CALL_72
0xe168	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7631	syntax.c	FUNCTION_116	IF_28	CALL_72
0xe16e	          0x4863d0	                         movsxd rdx, eax	      7631	syntax.c	FUNCTION_116	IF_28	CALL_72
0xe171	          0x4889d0	                            mov rax, rdx	      7631	syntax.c	FUNCTION_116	IF_28	CALL_72
0xe174	        0x48c1e003	                              shl rax, 3	      7631	syntax.c	FUNCTION_116	IF_28	CALL_72
0xe178	          0x4801d0	                            add rax, rdx	      7631	syntax.c	FUNCTION_116	IF_28	CALL_72
0xe17b	          0x4801c0	                            add rax, rax	      7631	syntax.c	FUNCTION_116	IF_28	CALL_72
0xe17e	          0x4801d0	                            add rax, rdx	      7631	syntax.c	FUNCTION_116	IF_28	CALL_72
0xe181	        0x48c1e003	                              shl rax, 3	      7631	syntax.c	FUNCTION_116	IF_28	CALL_72
0xe185	          0x4801c8	                            add rax, rcx	      7631	syntax.c	FUNCTION_116	IF_28	CALL_72
0xe188	    0xc7808c000000	               mov dword [rax + 0x8c], 0	      7631	syntax.c	FUNCTION_116	IF_28	CALL_72
0xe192	    0x83bd2cfeffff	              cmp dword [rbp - 0x1d4], 0	      7634	syntax.c	FUNCTION_116	IF_30
0xe199	     0xf85ea1c0000	                           jne 0x400fec9	      7634	syntax.c	FUNCTION_116	IF_30
0xe19f	      0xe9c31c0000	                           jmp 0x400fea7	      7635	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_73
0xe1a4	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7637	syntax.c	FUNCTION_116	IF_30	WHILE_1
0xe1ab	    0x48898590feff	            mov qword [rbp - 0x170], rax	      7637	syntax.c	FUNCTION_116	IF_30	WHILE_1
0xe1b2	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7638	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31
0xe1b9	           0xfb600	                   movzx eax, byte [rax]	      7638	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31
0xe1bc	            0x3c3d	                            cmp al, 0x3d	      7638	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31
0xe1be	            0x7536	                           jne 0x400e236	      7638	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31
0xe1c0	      0xbf00000000	                              mov edi, 0	      7640	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31	CALL_75
0xe1c5	      0xe800000000	                          call 0x400e20a	      7640	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31	CALL_75
0xe1ca	          0x4889c2	                            mov rdx, rax	      7640	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31	CALL_75
0xe1cd	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7640	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31	CALL_75
0xe1d4	          0x4889c6	                            mov rsi, rax	      7640	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31	CALL_75
0xe1d7	          0x4889d7	                            mov rdi, rdx	      7640	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31	CALL_75
0xe1da	      0xe800000000	                          call 0x400e21f	      7640	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31	CALL_75
0xe1df	    0xc78534feffff	              mov dword [rbp - 0x1cc], 1	      7641	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31
0xe1e9	      0xe99b1c0000	                           jmp 0x400fec9	      7642	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_31
0xe1ee	    0x48838568feff	              add qword [rbp - 0x198], 1	      7650	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2
0xe1f6	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_76
0xe1fd	           0xfb600	                   movzx eax, byte [rax]	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_76
0xe200	            0x84c0	                             test al, al	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_76
0xe202	            0x742a	                            je 0x400e26e	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_76
0xe204	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_76
0xe20b	           0xfb600	                   movzx eax, byte [rax]	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_76
0xe20e	            0x3c20	                            cmp al, 0x20	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_76
0xe210	            0x741c	                            je 0x400e26e	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_76
0xe212	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_76
0xe219	           0xfb600	                   movzx eax, byte [rax]	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_76
0xe21c	            0x3c09	                               cmp al, 9	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_76
0xe21e	            0x740e	                            je 0x400e26e	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_76
0xe220	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_76
0xe227	           0xfb600	                   movzx eax, byte [rax]	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_76
0xe22a	            0x3c3d	                            cmp al, 0x3d	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_76
0xe22c	            0x75c0	                           jne 0x400e22e	      7649	syntax.c	FUNCTION_116	IF_30	WHILE_1	WHILE_2	CALL_76
0xe22e	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      7651	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_77
0xe235	          0x4889c7	                            mov rdi, rax	      7651	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_77
0xe238	      0xe800000000	                          call 0x400e27d	      7651	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_77
0xe23d	    0x488b9568feff	            mov rdx, qword [rbp - 0x198]	      7652	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_78
0xe244	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7652	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_78
0xe24b	          0x4829c2	                            sub rdx, rax	      7652	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_78
0xe24e	          0x4889d0	                            mov rax, rdx	      7652	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_78
0xe251	            0x89c2	                            mov edx, eax	      7652	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_78
0xe253	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7652	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_78
0xe25a	            0x89d6	                            mov esi, edx	      7652	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_78
0xe25c	          0x4889c7	                            mov rdi, rax	      7652	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_78
0xe25f	      0xe800000000	                          call 0x400e2a4	      7652	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_78
0xe264	    0x48898578feff	            mov qword [rbp - 0x188], rax	      7652	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_78
0xe26b	    0x4883bd78feff	              cmp qword [rbp - 0x188], 0	      7653	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_32
0xe273	            0x750f	                           jne 0x400e2c4	      7653	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_32
0xe275	    0xc78534feffff	              mov dword [rbp - 0x1cc], 1	      7655	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_32
0xe27f	      0xe9051c0000	                           jmp 0x400fec9	      7656	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_32
0xe284	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7658	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_79
0xe28b	          0x4889c7	                            mov rdi, rax	      7658	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_79
0xe28e	      0xe800000000	                          call 0x400e2d3	      7658	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_79
0xe293	    0x48898568feff	            mov qword [rbp - 0x198], rax	      7658	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_79
0xe29a	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      7660	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	CALL_80
0xe2a1	      0xbe00000000	                              mov esi, 0	      7660	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	CALL_80
0xe2a6	          0x4889c7	                            mov rdi, rax	      7660	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	CALL_80
0xe2a9	      0xe800000000	                          call 0x400e2ee	      7660	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	CALL_80
0xe2ae	            0x85c0	                           test eax, eax	      7660	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	CALL_80
0xe2b0	     0xf85b6000000	                           jne 0x400e3ac	      7660	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	CALL_80
0xe2b6	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_81
0xe2bd	            0x7435	                            je 0x400e334	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_81
0xe2bf	    0x488b0d000000	            mov rcx, qword [0x0400e306] 	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_81
0xe2c6	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_81
0xe2cc	          0x4863d0	                         movsxd rdx, eax	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_81
0xe2cf	          0x4889d0	                            mov rax, rdx	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_81
0xe2d2	        0x48c1e003	                              shl rax, 3	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_81
0xe2d6	          0x4801d0	                            add rax, rdx	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_81
0xe2d9	          0x4801c0	                            add rax, rax	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_81
0xe2dc	          0x4801d0	                            add rax, rdx	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_81
0xe2df	        0x48c1e003	                              shl rax, 3	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_81
0xe2e3	          0x4801c8	                            add rax, rcx	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_81
0xe2e6	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_81
0xe2ec	            0x85c0	                           test eax, eax	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_81
0xe2ee	     0xf85731b0000	                           jne 0x400fea7	      7662	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_81
0xe2f4	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      7664	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	IF_35
0xe2fb	            0x755d	                           jne 0x400e39a	      7664	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	IF_35
0xe2fd	    0x488b0d000000	            mov rcx, qword [0x0400e344] 	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_82
0xe304	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_82
0xe30a	          0x4863d0	                         movsxd rdx, eax	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_82
0xe30d	          0x4889d0	                            mov rax, rdx	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_82
0xe310	        0x48c1e003	                              shl rax, 3	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_82
0xe314	          0x4801d0	                            add rax, rdx	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_82
0xe317	          0x4801c0	                            add rax, rax	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_82
0xe31a	          0x4801d0	                            add rax, rdx	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_82
0xe31d	        0x48c1e003	                              shl rax, 3	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_82
0xe321	          0x4801c1	                            add rcx, rax	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_82
0xe324	    0x488b35000000	            mov rsi, qword [0x0400e36b] 	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_82
0xe32b	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_82
0xe331	          0x4863d0	                         movsxd rdx, eax	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_82
0xe334	          0x4889d0	                            mov rax, rdx	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_82
0xe337	        0x48c1e003	                              shl rax, 3	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_82
0xe33b	          0x4801d0	                            add rax, rdx	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_82
0xe33e	          0x4801c0	                            add rax, rax	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_82
0xe341	          0x4801d0	                            add rax, rdx	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_82
0xe344	        0x48c1e003	                              shl rax, 3	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_82
0xe348	          0x4801f0	                            add rax, rsi	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_82
0xe34b	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_82
0xe351	          0x83c807	                               or eax, 7	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_82
0xe354	    0x89818c000000	             mov dword [rcx + 0x8c], eax	      7665	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_82
0xe35a	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7666	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_83
0xe360	            0x89c7	                            mov edi, eax	      7666	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_83
0xe362	      0xe8a41f0000	                call sym.highlight_clear	      7666	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33	IF_34	CALL_83
0xe367	      0xe9fb1a0000	                           jmp 0x400fea7	      7668	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_33
0xe36c	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7674	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36
0xe373	           0xfb600	                   movzx eax, byte [rax]	      7674	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36
0xe376	            0x3c3d	                            cmp al, 0x3d	      7674	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36
0xe378	            0x742e	                            je 0x400e3e8	      7674	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36
0xe37a	      0xbf00000000	                              mov edi, 0	      7676	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36	CALL_85
0xe37f	      0xe800000000	                          call 0x400e3c4	      7676	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36	CALL_85
0xe384	          0x4889c2	                            mov rdx, rax	      7676	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36	CALL_85
0xe387	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7676	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36	CALL_85
0xe38e	          0x4889c6	                            mov rsi, rax	      7676	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36	CALL_85
0xe391	          0x4889d7	                            mov rdi, rdx	      7676	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36	CALL_85
0xe394	      0xe800000000	                          call 0x400e3d9	      7676	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36	CALL_85
0xe399	    0xc78534feffff	              mov dword [rbp - 0x1cc], 1	      7677	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36
0xe3a3	      0xe9e11a0000	                           jmp 0x400fec9	      7678	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_36
0xe3a8	    0x48838568feff	              add qword [rbp - 0x198], 1	      7680	syntax.c	FUNCTION_116	IF_30	WHILE_1
0xe3b0	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7685	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_86
0xe3b7	          0x4889c7	                            mov rdi, rax	      7685	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_86
0xe3ba	      0xe800000000	                          call 0x400e3ff	      7685	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_86
0xe3bf	    0x48898568feff	            mov qword [rbp - 0x198], rax	      7685	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_86
0xe3c6	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7686	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37
0xe3cd	           0xfb600	                   movzx eax, byte [rax]	      7686	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37
0xe3d0	            0x3c27	                            cmp al, 0x27	      7686	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37
0xe3d2	            0x7569	                           jne 0x400e47d	      7686	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37
0xe3d4	    0x48838568feff	              add qword [rbp - 0x198], 1	      7688	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37
0xe3dc	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7688	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37
0xe3e3	    0x48898570feff	            mov qword [rbp - 0x190], rax	      7688	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37
0xe3ea	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7689	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	CALL_87
0xe3f1	      0xbe27000000	                           mov esi, 0x27	      7689	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	CALL_87
0xe3f6	          0x4889c7	                            mov rdi, rax	      7689	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	CALL_87
0xe3f9	      0xe800000000	                          call 0x400e43e	      7689	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	CALL_87
0xe3fe	    0x48898568feff	            mov qword [rbp - 0x198], rax	      7689	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	CALL_87
0xe405	    0x4883bd68feff	              cmp qword [rbp - 0x198], 0	      7690	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	IF_38
0xe40d	            0x7552	                           jne 0x400e4a1	      7690	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	IF_38
0xe40f	      0xbf00000000	                              mov edi, 0	      7692	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	IF_38	CALL_89
0xe414	      0xe800000000	                          call 0x400e459	      7692	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	IF_38	CALL_89
0xe419	          0x4889c2	                            mov rdx, rax	      7692	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	IF_38	CALL_89
0xe41c	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7692	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	IF_38	CALL_89
0xe423	          0x4889c6	                            mov rsi, rax	      7692	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	IF_38	CALL_89
0xe426	          0x4889d7	                            mov rdi, rdx	      7692	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	IF_38	CALL_89
0xe429	      0xe800000000	                          call 0x400e46e	      7692	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	IF_38	CALL_89
0xe42e	    0xc78534feffff	              mov dword [rbp - 0x1cc], 1	      7693	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	IF_38
0xe438	      0xe94c1a0000	                           jmp 0x400fec9	      7694	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_37	IF_38
0xe43d	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7699	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_9
0xe444	    0x48898570feff	            mov qword [rbp - 0x190], rax	      7699	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_9
0xe44b	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7700	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_9	CALL_90
0xe452	          0x4889c7	                            mov rdi, rax	      7700	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_9	CALL_90
0xe455	      0xe800000000	                          call 0x400e49a	      7700	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_9	CALL_90
0xe45a	    0x48898568feff	            mov qword [rbp - 0x198], rax	      7700	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_9	CALL_90
0xe461	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7702	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_39
0xe468	    0x483b8570feff	            cmp rax, qword [rbp - 0x190]	      7702	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_39
0xe46f	            0x752e	                           jne 0x400e4df	      7702	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_39
0xe471	      0xbf00000000	                              mov edi, 0	      7704	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_39	CALL_92
0xe476	      0xe800000000	                          call 0x400e4bb	      7704	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_39	CALL_92
0xe47b	          0x4889c2	                            mov rdx, rax	      7704	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_39	CALL_92
0xe47e	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7704	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_39	CALL_92
0xe485	          0x4889c6	                            mov rsi, rax	      7704	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_39	CALL_92
0xe488	          0x4889d7	                            mov rdi, rdx	      7704	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_39	CALL_92
0xe48b	      0xe800000000	                          call 0x400e4d0	      7704	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_39	CALL_92
0xe490	    0xc78534feffff	              mov dword [rbp - 0x1cc], 1	      7705	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_39
0xe49a	      0xe9ea190000	                           jmp 0x400fec9	      7706	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_39
0xe49f	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7708	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_93
0xe4a6	          0x4889c7	                            mov rdi, rax	      7708	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_93
0xe4a9	      0xe800000000	                          call 0x400e4ee	      7708	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_93
0xe4ae	    0x488b9568feff	            mov rdx, qword [rbp - 0x198]	      7709	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_94
0xe4b5	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      7709	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_94
0xe4bc	          0x4829c2	                            sub rdx, rax	      7709	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_94
0xe4bf	          0x4889d0	                            mov rax, rdx	      7709	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_94
0xe4c2	            0x89c2	                            mov edx, eax	      7709	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_94
0xe4c4	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      7709	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_94
0xe4cb	            0x89d6	                            mov esi, edx	      7709	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_94
0xe4cd	          0x4889c7	                            mov rdi, rax	      7709	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_94
0xe4d0	      0xe800000000	                          call 0x400e515	      7709	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_94
0xe4d5	    0x48898580feff	            mov qword [rbp - 0x180], rax	      7709	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_94
0xe4dc	    0x4883bd80feff	              cmp qword [rbp - 0x180], 0	      7710	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_40
0xe4e4	            0x750f	                           jne 0x400e535	      7710	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_40
0xe4e6	    0xc78534feffff	              mov dword [rbp - 0x1cc], 1	      7712	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_40
0xe4f0	      0xe994190000	                           jmp 0x400fec9	      7713	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_40
0xe4f5	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7715	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_41
0xe4fc	           0xfb600	                   movzx eax, byte [rax]	      7715	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_41
0xe4ff	            0x3c27	                            cmp al, 0x27	      7715	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_41
0xe501	            0x7508	                           jne 0x400e54b	      7715	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_41
0xe503	    0x48838568feff	              add qword [rbp - 0x198], 1	      7716	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_41
0xe50b	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      7721	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_95
0xe512	      0xbe00000000	                              mov esi, 0	      7721	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_95
0xe517	          0x4889c7	                            mov rdi, rax	      7721	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_95
0xe51a	      0xe800000000	                          call 0x400e55f	      7721	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_95
0xe51f	            0x85c0	                           test eax, eax	      7721	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_95
0xe521	            0x7434	                            je 0x400e597	      7721	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_95
0xe523	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      7722	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_96
0xe52a	      0xbe00000000	                              mov esi, 0	      7722	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_96
0xe52f	          0x4889c7	                            mov rdi, rax	      7722	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_96
0xe532	      0xe800000000	                          call 0x400e577	      7722	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_96
0xe537	            0x85c0	                           test eax, eax	      7722	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_96
0xe539	            0x741c	                            je 0x400e597	      7722	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_96
0xe53b	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      7723	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_97
0xe542	      0xbe00000000	                              mov esi, 0	      7723	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_97
0xe547	          0x4889c7	                            mov rdi, rax	      7723	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_97
0xe54a	      0xe800000000	                          call 0x400e58f	      7723	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_97
0xe54f	            0x85c0	                           test eax, eax	      7723	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_97
0xe551	     0xf851f040000	                           jne 0x400e9b6	      7723	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	CALL_97
0xe557	    0xc7851cfeffff	              mov dword [rbp - 0x1e4], 0	      7725	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42
0xe561	    0xc78514feffff	              mov dword [rbp - 0x1ec], 0	      7726	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42
0xe56b	      0xe9f2000000	                           jmp 0x400e6a2	      7727	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3
0xe570	    0x48c78588feff	            mov qword [rbp - 0x178], 0xa	      7729	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3
0xe57b	            0xeb79	                           jmp 0x400e636	      7729	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3
0xe57d	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      7731	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	CALL_98
0xe584	    0x488b04c50000	                  mov rax, qword [rax*8]	      7731	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	CALL_98
0xe58c	          0x4889c7	                            mov rdi, rax	      7731	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	CALL_98
0xe58f	      0xe800000000	                          call 0x400e5d4	      7731	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	CALL_98
0xe594	    0x898518feffff	            mov dword [rbp - 0x1e8], eax	      7731	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	CALL_98
0xe59a	    0x8b8518feffff	            mov eax, dword [rbp - 0x1e8]	      7732	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43	CALL_99
0xe5a0	          0x4863d0	                         movsxd rdx, eax	      7732	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43	CALL_99
0xe5a3	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      7732	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43	CALL_99
0xe5aa	    0x488b04c50000	                  mov rax, qword [rax*8]	      7732	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43	CALL_99
0xe5b2	    0x8b8d14feffff	            mov ecx, dword [rbp - 0x1ec]	      7732	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43	CALL_99
0xe5b8	          0x4863f1	                         movsxd rsi, ecx	      7732	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43	CALL_99
0xe5bb	    0x488b8d80feff	            mov rcx, qword [rbp - 0x180]	      7732	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43	CALL_99
0xe5c2	          0x4801f1	                            add rcx, rsi	      7732	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43	CALL_99
0xe5c5	          0x4889c6	                            mov rsi, rax	      7732	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43	CALL_99
0xe5c8	          0x4889cf	                            mov rdi, rcx	      7732	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43	CALL_99
0xe5cb	      0xe800000000	                          call 0x400e610	      7732	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43	CALL_99
0xe5d0	            0x85c0	                           test eax, eax	      7732	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43	CALL_99
0xe5d2	            0x7522	                           jne 0x400e636	      7732	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43	CALL_99
0xe5d4	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      7734	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43
0xe5db	    0x8b0485000000	                  mov eax, dword [rax*4]	      7734	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43
0xe5e2	     0x9851cfeffff	             or dword [rbp - 0x1e4], eax	      7734	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43
0xe5e8	    0x8b8518feffff	            mov eax, dword [rbp - 0x1e8]	      7735	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43
0xe5ee	     0x18514feffff	            add dword [rbp - 0x1ec], eax	      7735	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43
0xe5f4	            0xeb16	                           jmp 0x400e64c	      7736	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3	IF_43
0xe5f6	    0x4883ad88feff	              sub qword [rbp - 0x178], 1	      7729	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3
0xe5fe	    0x4883bd88feff	              cmp qword [rbp - 0x178], 0	      7729	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3
0xe606	     0xf8971ffffff	                           jns 0x400e5bd	      7729	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	FOR_3
0xe60c	    0x4883bd88feff	              cmp qword [rbp - 0x178], 0	      7739	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_44
0xe614	            0x792b	                           jns 0x400e681	      7739	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_44
0xe616	      0xbf00000000	                              mov edi, 0	      7741	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_44	CALL_101
0xe61b	      0xe800000000	                          call 0x400e660	      7741	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_44	CALL_101
0xe620	          0x4889c2	                            mov rdx, rax	      7741	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_44	CALL_101
0xe623	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7741	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_44	CALL_101
0xe62a	          0x4889c6	                            mov rsi, rax	      7741	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_44	CALL_101
0xe62d	          0x4889d7	                            mov rdi, rdx	      7741	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_44	CALL_101
0xe630	      0xe800000000	                          call 0x400e675	      7741	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_44	CALL_101
0xe635	    0xc78534feffff	              mov dword [rbp - 0x1cc], 1	      7742	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_44
0xe63f	            0xeb3f	                           jmp 0x400e6c0	      7743	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_44
0xe641	    0x8b8514feffff	            mov eax, dword [rbp - 0x1ec]	      7745	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_45
0xe647	          0x4863d0	                         movsxd rdx, eax	      7745	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_45
0xe64a	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7745	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_45
0xe651	          0x4801d0	                            add rax, rdx	      7745	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_45
0xe654	           0xfb600	                   movzx eax, byte [rax]	      7745	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_45
0xe657	            0x3c2c	                            cmp al, 0x2c	      7745	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_45
0xe659	            0x7507	                           jne 0x400e6a2	      7745	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_45
0xe65b	    0x838514feffff	              add dword [rbp - 0x1ec], 1	      7746	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3	IF_45
0xe662	    0x8b8514feffff	            mov eax, dword [rbp - 0x1ec]	      7727	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3
0xe668	          0x4863d0	                         movsxd rdx, eax	      7727	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3
0xe66b	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7727	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3
0xe672	          0x4801d0	                            add rax, rdx	      7727	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3
0xe675	           0xfb600	                   movzx eax, byte [rax]	      7727	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3
0xe678	            0x84c0	                             test al, al	      7727	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3
0xe67a	     0xf85f0feffff	                           jne 0x400e5b0	      7727	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	WHILE_3
0xe680	    0x83bd34feffff	              cmp dword [rbp - 0x1cc], 0	      7748	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_46
0xe687	     0xf85f8170000	                           jne 0x400fec5	      7748	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_46
0xe68d	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      7750	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47
0xe694	           0xfb600	                   movzx eax, byte [rax]	      7750	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47
0xe697	            0x3c54	                            cmp al, 0x54	      7750	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47
0xe699	     0xf85dd000000	                           jne 0x400e7bc	      7750	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47
0xe69f	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_102
0xe6a6	            0x7438	                            je 0x400e720	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_102
0xe6a8	    0x488b0d000000	            mov rcx, qword [0x0400e6ef] 	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_102
0xe6af	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_102
0xe6b5	          0x4863d0	                         movsxd rdx, eax	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_102
0xe6b8	          0x4889d0	                            mov rax, rdx	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_102
0xe6bb	        0x48c1e003	                              shl rax, 3	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_102
0xe6bf	          0x4801d0	                            add rax, rdx	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_102
0xe6c2	          0x4801c0	                            add rax, rax	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_102
0xe6c5	          0x4801d0	                            add rax, rdx	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_102
0xe6c8	        0x48c1e003	                              shl rax, 3	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_102
0xe6cc	          0x4801c8	                            add rax, rcx	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_102
0xe6cf	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_102
0xe6d5	          0x83e001	                              and eax, 1	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_102
0xe6d8	            0x85c0	                           test eax, eax	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_102
0xe6da	     0xf85d1160000	                           jne 0x400fdf1	      7752	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_102
0xe6e0	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      7754	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	IF_49
0xe6e7	            0x755d	                           jne 0x400e786	      7754	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	IF_49
0xe6e9	    0x488b0d000000	            mov rcx, qword [0x0400e730] 	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_103
0xe6f0	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_103
0xe6f6	          0x4863d0	                         movsxd rdx, eax	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_103
0xe6f9	          0x4889d0	                            mov rax, rdx	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_103
0xe6fc	        0x48c1e003	                              shl rax, 3	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_103
0xe700	          0x4801d0	                            add rax, rdx	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_103
0xe703	          0x4801c0	                            add rax, rax	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_103
0xe706	          0x4801d0	                            add rax, rdx	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_103
0xe709	        0x48c1e003	                              shl rax, 3	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_103
0xe70d	          0x4801c1	                            add rcx, rax	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_103
0xe710	    0x488b35000000	            mov rsi, qword [0x0400e757] 	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_103
0xe717	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_103
0xe71d	          0x4863d0	                         movsxd rdx, eax	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_103
0xe720	          0x4889d0	                            mov rax, rdx	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_103
0xe723	        0x48c1e003	                              shl rax, 3	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_103
0xe727	          0x4801d0	                            add rax, rdx	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_103
0xe72a	          0x4801c0	                            add rax, rax	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_103
0xe72d	          0x4801d0	                            add rax, rdx	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_103
0xe730	        0x48c1e003	                              shl rax, 3	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_103
0xe734	          0x4801f0	                            add rax, rsi	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_103
0xe737	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_103
0xe73d	          0x83c801	                               or eax, 1	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_103
0xe740	    0x89818c000000	             mov dword [rcx + 0x8c], eax	      7755	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_103
0xe746	    0x488b0d000000	            mov rcx, qword [0x0400e78d] 	      7756	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_104
0xe74d	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7756	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_104
0xe753	          0x4863d0	                         movsxd rdx, eax	      7756	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_104
0xe756	          0x4889d0	                            mov rax, rdx	      7756	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_104
0xe759	        0x48c1e003	                              shl rax, 3	      7756	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_104
0xe75d	          0x4801d0	                            add rax, rdx	      7756	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_104
0xe760	          0x4801c0	                            add rax, rax	      7756	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_104
0xe763	          0x4801d0	                            add rax, rdx	      7756	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_104
0xe766	        0x48c1e003	                              shl rax, 3	      7756	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_104
0xe76a	        0x488d1401	                    lea rdx, [rcx + rax]	      7756	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_104
0xe76e	    0x8b851cfeffff	            mov eax, dword [rbp - 0x1e4]	      7756	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_104
0xe774	          0x894214	             mov dword [rdx + 0x14], eax	      7756	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47	IF_48	CALL_104
0xe777	      0xe935160000	                           jmp 0x400fdf1	      7750	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47
0xe77c	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      7759	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50
0xe783	           0xfb600	                   movzx eax, byte [rax]	      7759	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50
0xe786	            0x3c43	                            cmp al, 0x43	      7759	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50
0xe788	     0xf850b010000	                           jne 0x400e8d9	      7759	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50
0xe78e	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_105
0xe795	            0x7438	                            je 0x400e80f	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_105
0xe797	    0x488b0d000000	            mov rcx, qword [0x0400e7de] 	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_105
0xe79e	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_105
0xe7a4	          0x4863d0	                         movsxd rdx, eax	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_105
0xe7a7	          0x4889d0	                            mov rax, rdx	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_105
0xe7aa	        0x48c1e003	                              shl rax, 3	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_105
0xe7ae	          0x4801d0	                            add rax, rdx	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_105
0xe7b1	          0x4801c0	                            add rax, rax	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_105
0xe7b4	          0x4801d0	                            add rax, rdx	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_105
0xe7b7	        0x48c1e003	                              shl rax, 3	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_105
0xe7bb	          0x4801c8	                            add rax, rcx	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_105
0xe7be	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_105
0xe7c4	          0x83e002	                              and eax, 2	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_105
0xe7c7	            0x85c0	                           test eax, eax	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_105
0xe7c9	     0xf85e2150000	                           jne 0x400fdf1	      7761	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_105
0xe7cf	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      7763	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	IF_52
0xe7d6	            0x755d	                           jne 0x400e875	      7763	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	IF_52
0xe7d8	    0x488b0d000000	            mov rcx, qword [0x0400e81f] 	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_106
0xe7df	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_106
0xe7e5	          0x4863d0	                         movsxd rdx, eax	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_106
0xe7e8	          0x4889d0	                            mov rax, rdx	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_106
0xe7eb	        0x48c1e003	                              shl rax, 3	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_106
0xe7ef	          0x4801d0	                            add rax, rdx	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_106
0xe7f2	          0x4801c0	                            add rax, rax	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_106
0xe7f5	          0x4801d0	                            add rax, rdx	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_106
0xe7f8	        0x48c1e003	                              shl rax, 3	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_106
0xe7fc	          0x4801c1	                            add rcx, rax	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_106
0xe7ff	    0x488b35000000	            mov rsi, qword [0x0400e846] 	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_106
0xe806	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_106
0xe80c	          0x4863d0	                         movsxd rdx, eax	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_106
0xe80f	          0x4889d0	                            mov rax, rdx	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_106
0xe812	        0x48c1e003	                              shl rax, 3	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_106
0xe816	          0x4801d0	                            add rax, rdx	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_106
0xe819	          0x4801c0	                            add rax, rax	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_106
0xe81c	          0x4801d0	                            add rax, rdx	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_106
0xe81f	        0x48c1e003	                              shl rax, 3	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_106
0xe823	          0x4801f0	                            add rax, rsi	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_106
0xe826	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_106
0xe82c	          0x83c802	                               or eax, 2	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_106
0xe82f	    0x89818c000000	             mov dword [rcx + 0x8c], eax	      7764	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_106
0xe835	    0x488b0d000000	            mov rcx, qword [0x0400e87c] 	      7765	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_107
0xe83c	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7765	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_107
0xe842	          0x4863d0	                         movsxd rdx, eax	      7765	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_107
0xe845	          0x4889d0	                            mov rax, rdx	      7765	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_107
0xe848	        0x48c1e003	                              shl rax, 3	      7765	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_107
0xe84c	          0x4801d0	                            add rax, rdx	      7765	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_107
0xe84f	          0x4801c0	                            add rax, rax	      7765	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_107
0xe852	          0x4801d0	                            add rax, rdx	      7765	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_107
0xe855	        0x48c1e003	                              shl rax, 3	      7765	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_107
0xe859	        0x488d1401	                    lea rdx, [rcx + rax]	      7765	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_107
0xe85d	    0x8b851cfeffff	            mov eax, dword [rbp - 0x1e4]	      7765	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_107
0xe863	          0x89422c	             mov dword [rdx + 0x2c], eax	      7765	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_107
0xe866	    0x488b0d000000	            mov rcx, qword [0x0400e8ad] 	      7766	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_108
0xe86d	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7766	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_108
0xe873	          0x4863d0	                         movsxd rdx, eax	      7766	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_108
0xe876	          0x4889d0	                            mov rax, rdx	      7766	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_108
0xe879	        0x48c1e003	                              shl rax, 3	      7766	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_108
0xe87d	          0x4801d0	                            add rax, rdx	      7766	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_108
0xe880	          0x4801c0	                            add rax, rax	      7766	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_108
0xe883	          0x4801d0	                            add rax, rdx	      7766	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_108
0xe886	        0x48c1e003	                              shl rax, 3	      7766	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_108
0xe88a	          0x4801c8	                            add rax, rcx	      7766	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_108
0xe88d	    0xc74030000000	               mov dword [rax + 0x30], 0	      7766	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_10	IF_50	IF_51	CALL_108
0xe894	      0xe918150000	                           jmp 0x400fdf1	      7750	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47
0xe899	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_109
0xe8a0	            0x7438	                            je 0x400e91a	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_109
0xe8a2	    0x488b0d000000	            mov rcx, qword [0x0400e8e9] 	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_109
0xe8a9	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_109
0xe8af	          0x4863d0	                         movsxd rdx, eax	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_109
0xe8b2	          0x4889d0	                            mov rax, rdx	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_109
0xe8b5	        0x48c1e003	                              shl rax, 3	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_109
0xe8b9	          0x4801d0	                            add rax, rdx	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_109
0xe8bc	          0x4801c0	                            add rax, rax	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_109
0xe8bf	          0x4801d0	                            add rax, rdx	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_109
0xe8c2	        0x48c1e003	                              shl rax, 3	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_109
0xe8c6	          0x4801c8	                            add rax, rcx	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_109
0xe8c9	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_109
0xe8cf	          0x83e004	                              and eax, 4	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_109
0xe8d2	            0x85c0	                           test eax, eax	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_109
0xe8d4	     0xf85d7140000	                           jne 0x400fdf1	      7772	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_109
0xe8da	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      7774	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	IF_54
0xe8e1	            0x755d	                           jne 0x400e980	      7774	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	IF_54
0xe8e3	    0x488b0d000000	            mov rcx, qword [0x0400e92a] 	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_110
0xe8ea	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_110
0xe8f0	          0x4863d0	                         movsxd rdx, eax	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_110
0xe8f3	          0x4889d0	                            mov rax, rdx	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_110
0xe8f6	        0x48c1e003	                              shl rax, 3	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_110
0xe8fa	          0x4801d0	                            add rax, rdx	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_110
0xe8fd	          0x4801c0	                            add rax, rax	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_110
0xe900	          0x4801d0	                            add rax, rdx	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_110
0xe903	        0x48c1e003	                              shl rax, 3	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_110
0xe907	          0x4801c1	                            add rcx, rax	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_110
0xe90a	    0x488b35000000	            mov rsi, qword [0x0400e951] 	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_110
0xe911	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_110
0xe917	          0x4863d0	                         movsxd rdx, eax	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_110
0xe91a	          0x4889d0	                            mov rax, rdx	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_110
0xe91d	        0x48c1e003	                              shl rax, 3	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_110
0xe921	          0x4801d0	                            add rax, rdx	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_110
0xe924	          0x4801c0	                            add rax, rax	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_110
0xe927	          0x4801d0	                            add rax, rdx	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_110
0xe92a	        0x48c1e003	                              shl rax, 3	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_110
0xe92e	          0x4801f0	                            add rax, rsi	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_110
0xe931	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_110
0xe937	          0x83c804	                               or eax, 4	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_110
0xe93a	    0x89818c000000	             mov dword [rcx + 0x8c], eax	      7775	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_110
0xe940	    0x488b0d000000	            mov rcx, qword [0x0400e987] 	      7776	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_111
0xe947	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7776	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_111
0xe94d	          0x4863d0	                         movsxd rdx, eax	      7776	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_111
0xe950	          0x4889d0	                            mov rax, rdx	      7776	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_111
0xe953	        0x48c1e003	                              shl rax, 3	      7776	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_111
0xe957	          0x4801d0	                            add rax, rdx	      7776	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_111
0xe95a	          0x4801c0	                            add rax, rax	      7776	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_111
0xe95d	          0x4801d0	                            add rax, rdx	      7776	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_111
0xe960	        0x48c1e003	                              shl rax, 3	      7776	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_111
0xe964	        0x488d1401	                    lea rdx, [rcx + rax]	      7776	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_111
0xe968	    0x8b851cfeffff	            mov eax, dword [rbp - 0x1e4]	      7776	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_111
0xe96e	          0x89426c	             mov dword [rdx + 0x6c], eax	      7776	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	ELSE_11	IF_53	CALL_111
0xe971	      0xe93b140000	                           jmp 0x400fdf1	      7750	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47
0xe976	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      7781	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	CALL_112
0xe97d	      0xbe00000000	                              mov esi, 0	      7781	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	CALL_112
0xe982	          0x4889c7	                            mov rdi, rax	      7781	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	CALL_112
0xe985	      0xe800000000	                          call 0x400e9ca	      7781	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	CALL_112
0xe98a	            0x85c0	                           test eax, eax	      7781	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	CALL_112
0xe98c	     0xf8580020000	                           jne 0x400ec52	      7781	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	CALL_112
0xe992	    0x488b0d000000	            mov rcx, qword [0x0400e9d9] 	      7785	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_113
0xe999	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7785	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_113
0xe99f	          0x4863d0	                         movsxd rdx, eax	      7785	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_113
0xe9a2	          0x4889d0	                            mov rax, rdx	      7785	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_113
0xe9a5	        0x48c1e003	                              shl rax, 3	      7785	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_113
0xe9a9	          0x4801d0	                            add rax, rdx	      7785	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_113
0xe9ac	          0x4801c0	                            add rax, rax	      7785	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_113
0xe9af	          0x4801d0	                            add rax, rdx	      7785	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_113
0xe9b2	        0x48c1e003	                              shl rax, 3	      7785	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_113
0xe9b6	          0x4801c8	                            add rax, rcx	      7785	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_113
0xe9b9	        0x488b4060	            mov rax, qword [rax + 0x60] 	      7785	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_113
0xe9bd	          0x4885c0	                           test rax, rax	      7785	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_113
0xe9c0	            0x7445	                            je 0x400ea47	      7785	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_113
0xe9c2	    0x488b0d000000	            mov rcx, qword [0x0400ea09] 	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_115
0xe9c9	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_115
0xe9cf	          0x4863d0	                         movsxd rdx, eax	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_115
0xe9d2	          0x4889d0	                            mov rax, rdx	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_115
0xe9d5	        0x48c1e003	                              shl rax, 3	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_115
0xe9d9	          0x4801d0	                            add rax, rdx	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_115
0xe9dc	          0x4801c0	                            add rax, rax	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_115
0xe9df	          0x4801d0	                            add rax, rdx	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_115
0xe9e2	        0x48c1e003	                              shl rax, 3	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_115
0xe9e6	          0x4801c8	                            add rax, rcx	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_115
0xe9e9	        0x488b4060	            mov rax, qword [rax + 0x60] 	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_115
0xe9ed	    0x488b9580feff	            mov rdx, qword [rbp - 0x180]	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_115
0xe9f4	          0x4889d6	                            mov rsi, rdx	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_115
0xe9f7	          0x4889c7	                            mov rdi, rax	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_115
0xe9fa	      0xe800000000	                          call 0x400ea3f	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_115
0xe9ff	            0x85c0	                           test eax, eax	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_115
0xea01	     0xf84ae130000	                            je 0x400fdf5	      7786	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	IF_56	CALL_115
0xea07	    0x8b0500000000	            mov eax, dword [0x0400ea4d] 	      7790	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57
0xea0d	            0x85c0	                           test eax, eax	      7790	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57
0xea0f	            0x757d	                           jne 0x400eace	      7790	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57
0xea11	    0x488b0d000000	            mov rcx, qword [0x0400ea58] 	      7793	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_117
0xea18	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7793	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_117
0xea1e	          0x4863d0	                         movsxd rdx, eax	      7793	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_117
0xea21	          0x4889d0	                            mov rax, rdx	      7793	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_117
0xea24	        0x48c1e003	                              shl rax, 3	      7793	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_117
0xea28	          0x4801d0	                            add rax, rdx	      7793	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_117
0xea2b	          0x4801c0	                            add rax, rax	      7793	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_117
0xea2e	          0x4801d0	                            add rax, rdx	      7793	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_117
0xea31	        0x48c1e003	                              shl rax, 3	      7793	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_117
0xea35	          0x4801c8	                            add rax, rcx	      7793	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_117
0xea38	        0x488b4060	            mov rax, qword [rax + 0x60] 	      7793	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_117
0xea3c	          0x4889c7	                            mov rdi, rax	      7793	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_117
0xea3f	      0xe800000000	                          call 0x400ea84	      7793	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_117
0xea44	    0x488b0d000000	            mov rcx, qword [0x0400ea8b] 	      7794	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_119
0xea4b	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7794	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_119
0xea51	          0x4863d0	                         movsxd rdx, eax	      7794	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_119
0xea54	          0x4889d0	                            mov rax, rdx	      7794	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_119
0xea57	        0x48c1e003	                              shl rax, 3	      7794	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_119
0xea5b	          0x4801d0	                            add rax, rdx	      7794	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_119
0xea5e	          0x4801c0	                            add rax, rax	      7794	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_119
0xea61	          0x4801d0	                            add rax, rdx	      7794	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_119
0xea64	        0x48c1e003	                              shl rax, 3	      7794	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_119
0xea68	        0x488d1c01	                    lea rbx, [rcx + rax]	      7794	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_119
0xea6c	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7794	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_119
0xea73	          0x4889c7	                            mov rdi, rax	      7794	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_119
0xea76	      0xe800000000	                          call 0x400eabb	      7794	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_119
0xea7b	        0x48894360	             mov qword [rbx + 0x60], rax	      7794	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57	CALL_119
0xea7f	    0xc78524feffff	              mov dword [rbp - 0x1dc], 1	      7795	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57
0xea89	      0xe927130000	                           jmp 0x400fdf5	      7795	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_13	IF_57
0xea8e	    0x488b0d000000	            mov rcx, qword [0x0400ead5] 	      7799	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_120
0xea95	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7799	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_120
0xea9b	          0x4863d0	                         movsxd rdx, eax	      7799	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_120
0xea9e	          0x4889d0	                            mov rax, rdx	      7799	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_120
0xeaa1	        0x48c1e003	                              shl rax, 3	      7799	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_120
0xeaa5	          0x4801d0	                            add rax, rdx	      7799	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_120
0xeaa8	          0x4801c0	                            add rax, rax	      7799	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_120
0xeaab	          0x4801d0	                            add rax, rdx	      7799	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_120
0xeaae	        0x48c1e003	                              shl rax, 3	      7799	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_120
0xeab2	          0x4801c8	                            add rax, rcx	      7799	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_120
0xeab5	        0x488b4058	            mov rax, qword [rax + 0x58] 	      7799	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_120
0xeab9	    0x48898598feff	            mov qword [rbp - 0x168], rax	      7799	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_120
0xeac0	    0x488b0d000000	            mov rcx, qword [0x0400eb07] 	      7809	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_122
0xeac7	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7809	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_122
0xeacd	          0x4863d0	                         movsxd rdx, eax	      7809	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_122
0xead0	          0x4889d0	                            mov rax, rdx	      7809	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_122
0xead3	        0x48c1e003	                              shl rax, 3	      7809	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_122
0xead7	          0x4801d0	                            add rax, rdx	      7809	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_122
0xeada	          0x4801c0	                            add rax, rax	      7809	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_122
0xeadd	          0x4801d0	                            add rax, rdx	      7809	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_122
0xeae0	        0x48c1e003	                              shl rax, 3	      7809	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_122
0xeae4	          0x4801c8	                            add rax, rcx	      7809	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_122
0xeae7	    0x48c740580000	               mov qword [rax + 0x58], 0	      7809	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_122
0xeaef	    0x8b953cfeffff	            mov edx, dword [rbp - 0x1c4]	      7813	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_124
0xeaf5	    0x488bb580feff	            mov rsi, qword [rbp - 0x180]	      7813	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_124
0xeafc	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7813	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_124
0xeb02	    0x41b900000000	                              mov r9d, 0	      7813	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_124
0xeb08	    0x41b800000000	                              mov r8d, 0	      7813	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_124
0xeb0e	      0xb900000000	                              mov ecx, 0	      7813	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_124
0xeb13	            0x89c7	                            mov edi, eax	      7813	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_124
0xeb15	      0xe81a230000	                     call sym.hl_do_font	      7813	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_124
0xeb1a	    0x488b0d000000	            mov rcx, qword [0x0400eb61] 	      7829	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_132
0xeb21	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7829	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_132
0xeb27	          0x4863d0	                         movsxd rdx, eax	      7829	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_132
0xeb2a	          0x4889d0	                            mov rax, rdx	      7829	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_132
0xeb2d	        0x48c1e003	                              shl rax, 3	      7829	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_132
0xeb31	          0x4801d0	                            add rax, rdx	      7829	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_132
0xeb34	          0x4801c0	                            add rax, rax	      7829	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_132
0xeb37	          0x4801d0	                            add rax, rdx	      7829	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_132
0xeb3a	        0x48c1e003	                              shl rax, 3	      7829	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_132
0xeb3e	          0x4801c8	                            add rax, rcx	      7829	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_132
0xeb41	        0x488b4058	            mov rax, qword [rax + 0x58] 	      7829	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_132
0xeb45	          0x4885c0	                           test rax, rax	      7829	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_132
0xeb48	     0xf848c000000	                            je 0x400ec1a	      7829	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_132
0xeb4e	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      7833	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_133
0xeb55	          0x4889c7	                            mov rdi, rax	      7833	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_133
0xeb58	      0xe800000000	                          call 0x400eb9d	      7833	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_133
0xeb5d	    0x488b0d000000	            mov rcx, qword [0x0400eba4] 	      7834	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_135
0xeb64	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7834	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_135
0xeb6a	          0x4863d0	                         movsxd rdx, eax	      7834	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_135
0xeb6d	          0x4889d0	                            mov rax, rdx	      7834	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_135
0xeb70	        0x48c1e003	                              shl rax, 3	      7834	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_135
0xeb74	          0x4801d0	                            add rax, rdx	      7834	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_135
0xeb77	          0x4801c0	                            add rax, rax	      7834	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_135
0xeb7a	          0x4801d0	                            add rax, rdx	      7834	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_135
0xeb7d	        0x48c1e003	                              shl rax, 3	      7834	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_135
0xeb81	          0x4801c8	                            add rax, rcx	      7834	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_135
0xeb84	        0x488b4060	            mov rax, qword [rax + 0x60] 	      7834	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_135
0xeb88	          0x4889c7	                            mov rdi, rax	      7834	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_135
0xeb8b	      0xe800000000	                          call 0x400ebd0	      7834	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_135
0xeb90	    0x488b0d000000	            mov rcx, qword [0x0400ebd7] 	      7835	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_137
0xeb97	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7835	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_137
0xeb9d	          0x4863d0	                         movsxd rdx, eax	      7835	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_137
0xeba0	          0x4889d0	                            mov rax, rdx	      7835	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_137
0xeba3	        0x48c1e003	                              shl rax, 3	      7835	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_137
0xeba7	          0x4801d0	                            add rax, rdx	      7835	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_137
0xebaa	          0x4801c0	                            add rax, rax	      7835	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_137
0xebad	          0x4801d0	                            add rax, rdx	      7835	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_137
0xebb0	        0x48c1e003	                              shl rax, 3	      7835	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_137
0xebb4	        0x488d1c01	                    lea rbx, [rcx + rax]	      7835	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_137
0xebb8	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7835	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_137
0xebbf	          0x4889c7	                            mov rdi, rax	      7835	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_137
0xebc2	      0xe800000000	                          call 0x400ec07	      7835	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_137
0xebc7	        0x48894360	             mov qword [rbx + 0x60], rax	      7835	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59	CALL_137
0xebcb	    0xc78524feffff	              mov dword [rbp - 0x1dc], 1	      7836	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59
0xebd5	      0xe9db110000	                           jmp 0x400fdf5	      7836	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	IF_59
0xebda	    0x488b0d000000	            mov rcx, qword [0x0400ec21] 	      7839	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_138
0xebe1	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7839	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_138
0xebe7	          0x4863d0	                         movsxd rdx, eax	      7839	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_138
0xebea	          0x4889d0	                            mov rax, rdx	      7839	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_138
0xebed	        0x48c1e003	                              shl rax, 3	      7839	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_138
0xebf1	          0x4801d0	                            add rax, rdx	      7839	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_138
0xebf4	          0x4801c0	                            add rax, rax	      7839	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_138
0xebf7	          0x4801d0	                            add rax, rdx	      7839	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_138
0xebfa	        0x48c1e003	                              shl rax, 3	      7839	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_138
0xebfe	        0x488d1401	                    lea rdx, [rcx + rax]	      7839	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_138
0xec02	    0x488b8598feff	            mov rax, qword [rbp - 0x168]	      7839	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_138
0xec09	        0x48894258	             mov qword [rdx + 0x58], rax	      7839	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_138
0xec0d	      0xe9a3110000	                           jmp 0x400fdf5	      7839	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_12	IF_55	ELSE_14	CALL_138
0xec12	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_140
0xec19	      0xbe00000000	                              mov esi, 0	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_140
0xec1e	          0x4889c7	                            mov rdi, rax	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_140
0xec21	      0xe800000000	                          call 0x400ec66	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_140
0xec26	            0x85c0	                           test eax, eax	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_140
0xec28	            0x741c	                            je 0x400ec86	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_140
0xec2a	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_140
0xec31	      0xbe00000000	                              mov esi, 0	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_140
0xec36	          0x4889c7	                            mov rdi, rax	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_140
0xec39	      0xe800000000	                          call 0x400ec7e	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_140
0xec3e	            0x85c0	                           test eax, eax	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_140
0xec40	     0xf85d0060000	                           jne 0x400f356	      7843	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	CALL_140
0xec46	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_141
0xec4d	            0x7438	                            je 0x400ecc7	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_141
0xec4f	    0x488b0d000000	            mov rcx, qword [0x0400ec96] 	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_141
0xec56	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_141
0xec5c	          0x4863d0	                         movsxd rdx, eax	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_141
0xec5f	          0x4889d0	                            mov rax, rdx	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_141
0xec62	        0x48c1e003	                              shl rax, 3	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_141
0xec66	          0x4801d0	                            add rax, rdx	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_141
0xec69	          0x4801c0	                            add rax, rax	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_141
0xec6c	          0x4801d0	                            add rax, rdx	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_141
0xec6f	        0x48c1e003	                              shl rax, 3	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_141
0xec73	          0x4801c8	                            add rax, rcx	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_141
0xec76	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_141
0xec7c	          0x83e002	                              and eax, 2	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_141
0xec7f	            0x85c0	                           test eax, eax	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_141
0xec81	     0xf852d110000	                           jne 0x400fdf4	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_141
0xec87	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      7847	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_62
0xec8e	            0x755d	                           jne 0x400ed2d	      7847	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_62
0xec90	    0x488b0d000000	            mov rcx, qword [0x0400ecd7] 	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_142
0xec97	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_142
0xec9d	          0x4863d0	                         movsxd rdx, eax	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_142
0xeca0	          0x4889d0	                            mov rax, rdx	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_142
0xeca3	        0x48c1e003	                              shl rax, 3	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_142
0xeca7	          0x4801d0	                            add rax, rdx	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_142
0xecaa	          0x4801c0	                            add rax, rax	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_142
0xecad	          0x4801d0	                            add rax, rdx	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_142
0xecb0	        0x48c1e003	                              shl rax, 3	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_142
0xecb4	          0x4801c1	                            add rcx, rax	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_142
0xecb7	    0x488b35000000	            mov rsi, qword [0x0400ecfe] 	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_142
0xecbe	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_142
0xecc4	          0x4863d0	                         movsxd rdx, eax	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_142
0xecc7	          0x4889d0	                            mov rax, rdx	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_142
0xecca	        0x48c1e003	                              shl rax, 3	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_142
0xecce	          0x4801d0	                            add rax, rdx	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_142
0xecd1	          0x4801c0	                            add rax, rax	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_142
0xecd4	          0x4801d0	                            add rax, rdx	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_142
0xecd7	        0x48c1e003	                              shl rax, 3	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_142
0xecdb	          0x4801f0	                            add rax, rsi	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_142
0xecde	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_142
0xece4	          0x83c802	                               or eax, 2	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_142
0xece7	    0x89818c000000	             mov dword [rcx + 0x8c], eax	      7848	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_142
0xeced	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_143
0xecf4	        0x4883c005	                              add rax, 5	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_143
0xecf8	           0xfb600	                   movzx eax, byte [rax]	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_143
0xecfb	            0x3c46	                            cmp al, 0x46	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_143
0xecfd	     0xf85b7000000	                           jne 0x400edfa	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_143
0xed03	    0x488b0d000000	            mov rcx, qword [0x0400ed4a] 	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_143
0xed0a	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_143
0xed10	          0x4863d0	                         movsxd rdx, eax	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_143
0xed13	          0x4889d0	                            mov rax, rdx	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_143
0xed16	        0x48c1e003	                              shl rax, 3	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_143
0xed1a	          0x4801d0	                            add rax, rdx	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_143
0xed1d	          0x4801c0	                            add rax, rax	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_143
0xed20	          0x4801d0	                            add rax, rdx	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_143
0xed23	        0x48c1e003	                              shl rax, 3	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_143
0xed27	          0x4801c8	                            add rax, rcx	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_143
0xed2a	          0x8b4030	            mov eax, dword [rax + 0x30] 	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_143
0xed2d	            0x85c0	                           test eax, eax	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_143
0xed2f	     0xf8485000000	                            je 0x400edfa	      7852	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_143
0xed35	    0x488b0d000000	            mov rcx, qword [0x0400ed7c] 	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_144
0xed3c	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_144
0xed42	          0x4863d0	                         movsxd rdx, eax	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_144
0xed45	          0x4889d0	                            mov rax, rdx	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_144
0xed48	        0x48c1e003	                              shl rax, 3	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_144
0xed4c	          0x4801d0	                            add rax, rdx	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_144
0xed4f	          0x4801c0	                            add rax, rax	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_144
0xed52	          0x4801d0	                            add rax, rdx	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_144
0xed55	        0x48c1e003	                              shl rax, 3	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_144
0xed59	          0x4801c1	                            add rcx, rax	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_144
0xed5c	    0x488b35000000	            mov rsi, qword [0x0400eda3] 	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_144
0xed63	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_144
0xed69	          0x4863d0	                         movsxd rdx, eax	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_144
0xed6c	          0x4889d0	                            mov rax, rdx	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_144
0xed6f	        0x48c1e003	                              shl rax, 3	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_144
0xed73	          0x4801d0	                            add rax, rdx	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_144
0xed76	          0x4801c0	                            add rax, rax	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_144
0xed79	          0x4801d0	                            add rax, rdx	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_144
0xed7c	        0x48c1e003	                              shl rax, 3	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_144
0xed80	          0x4801f0	                            add rax, rsi	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_144
0xed83	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_144
0xed86	          0x83e0fd	                     and eax, 0xfffffffd	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_144
0xed89	          0x89412c	             mov dword [rcx + 0x2c], eax	      7854	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_144
0xed8c	    0x488b0d000000	            mov rcx, qword [0x0400edd3] 	      7855	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_145
0xed93	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7855	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_145
0xed99	          0x4863d0	                         movsxd rdx, eax	      7855	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_145
0xed9c	          0x4889d0	                            mov rax, rdx	      7855	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_145
0xed9f	        0x48c1e003	                              shl rax, 3	      7855	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_145
0xeda3	          0x4801d0	                            add rax, rdx	      7855	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_145
0xeda6	          0x4801c0	                            add rax, rax	      7855	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_145
0xeda9	          0x4801d0	                            add rax, rdx	      7855	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_145
0xedac	        0x48c1e003	                              shl rax, 3	      7855	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_145
0xedb0	          0x4801c8	                            add rax, rcx	      7855	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_145
0xedb3	    0xc74030000000	               mov dword [rax + 0x30], 0	      7855	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_63	CALL_145
0xedba	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7858	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_64	CALL_146
0xedc1	           0xfb600	                   movzx eax, byte [rax]	      7858	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_64	CALL_146
0xedc4	           0xfb6c0	                           movzx eax, al	      7858	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_64	CALL_146
0xedc7	          0x83e830	                           sub eax, 0x30	      7858	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_64	CALL_146
0xedca	          0x83f809	                              cmp eax, 9	      7858	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_64	CALL_146
0xedcd	            0x771a	                            ja 0x400ee29	      7858	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_64	CALL_146
0xedcf	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7859	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_147
0xedd6	          0x4889c7	                            mov rdi, rax	      7859	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_147
0xedd9	      0xe800000000	                          call 0x400ee1e	      7859	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_147
0xedde	    0x898538feffff	            mov dword [rbp - 0x1c8], eax	      7859	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_147
0xede4	      0xe9c9020000	                           jmp 0x400f0f2	      7859	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_147
0xede9	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7860	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	CALL_148
0xedf0	      0xbe00000000	                              mov esi, 0	      7860	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	CALL_148
0xedf5	          0x4889c7	                            mov rdi, rax	      7860	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	CALL_148
0xedf8	      0xe800000000	                          call 0x400ee3d	      7860	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	CALL_148
0xedfd	            0x85c0	                           test eax, eax	      7860	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	CALL_148
0xedff	            0x753f	                           jne 0x400ee80	      7860	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	CALL_148
0xee01	    0x8b0500000000	            mov eax, dword [0x0400ee47] 	      7862	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	IF_66
0xee07	            0x85c0	                           test eax, eax	      7862	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	IF_66
0xee09	            0x7414	                            je 0x400ee5f	      7862	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	IF_66
0xee0b	    0x8b0500000000	            mov eax, dword [0x0400ee51] 	      7863	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	IF_66
0xee11	          0x83e801	                              sub eax, 1	      7863	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	IF_66
0xee14	    0x898538feffff	            mov dword [rbp - 0x1c8], eax	      7863	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	IF_66
0xee1a	      0xe993020000	                           jmp 0x400f0f2	      7863	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	IF_66
0xee1f	      0xbf00000000	                              mov edi, 0	      7866	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	ELSE_19	CALL_150
0xee24	      0xe800000000	                          call 0x400ee69	      7866	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	ELSE_19	CALL_150
0xee29	          0x4889c7	                            mov rdi, rax	      7866	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	ELSE_19	CALL_150
0xee2c	      0xe800000000	                          call 0x400ee71	      7866	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	ELSE_19	CALL_150
0xee31	    0xc78534feffff	              mov dword [rbp - 0x1cc], 1	      7867	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	ELSE_19
0xee3b	      0xe949100000	                           jmp 0x400fec9	      7868	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_18	IF_65	ELSE_19
0xee40	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7871	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	CALL_151
0xee47	      0xbe00000000	                              mov esi, 0	      7871	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	CALL_151
0xee4c	          0x4889c7	                            mov rdi, rax	      7871	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	CALL_151
0xee4f	      0xe800000000	                          call 0x400ee94	      7871	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	CALL_151
0xee54	            0x85c0	                           test eax, eax	      7871	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	CALL_151
0xee56	            0x753f	                           jne 0x400eed7	      7871	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	CALL_151
0xee58	    0x8b0500000000	            mov eax, dword [0x0400ee9e] 	      7873	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	IF_68
0xee5e	            0x85c0	                           test eax, eax	      7873	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	IF_68
0xee60	            0x7e14	                           jle 0x400eeb6	      7873	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	IF_68
0xee62	    0x8b0500000000	            mov eax, dword [0x0400eea8] 	      7874	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	IF_68
0xee68	          0x83e801	                              sub eax, 1	      7874	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	IF_68
0xee6b	    0x898538feffff	            mov dword [rbp - 0x1c8], eax	      7874	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	IF_68
0xee71	      0xe93c020000	                           jmp 0x400f0f2	      7874	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	IF_68
0xee76	      0xbf00000000	                              mov edi, 0	      7877	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	ELSE_21	CALL_153
0xee7b	      0xe800000000	                          call 0x400eec0	      7877	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	ELSE_21	CALL_153
0xee80	          0x4889c7	                            mov rdi, rax	      7877	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	ELSE_21	CALL_153
0xee83	      0xe800000000	                          call 0x400eec8	      7877	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	ELSE_21	CALL_153
0xee88	    0xc78534feffff	              mov dword [rbp - 0x1cc], 1	      7878	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	ELSE_21
0xee92	      0xe9f20f0000	                           jmp 0x400fec9	      7879	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_20	IF_67	ELSE_21
0xee97	    0xc78510feffff	              mov dword [rbp - 0x1f0], 2	      7884	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22
0xeea1	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_155
0xeea8	           0xfb600	                   movzx eax, byte [rax]	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_155
0xeeab	            0x3c60	                            cmp al, 0x60	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_155
0xeead	            0x760e	                           jbe 0x400eefd	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_155
0xeeaf	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_155
0xeeb6	           0xfb600	                   movzx eax, byte [rax]	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_155
0xeeb9	            0x3c7a	                            cmp al, 0x7a	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_155
0xeebb	            0x760f	                           jbe 0x400ef0c	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_155
0xeebd	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_155
0xeec4	           0xfb600	                   movzx eax, byte [rax]	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_155
0xeec7	           0xfb6c0	                           movzx eax, al	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_155
0xeeca	            0xeb10	                           jmp 0x400ef1c	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_155
0xeecc	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_155
0xeed3	           0xfb600	                   movzx eax, byte [rax]	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_155
0xeed6	           0xfb6c0	                           movzx eax, al	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_155
0xeed9	          0x83e820	                           sub eax, 0x20	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_155
0xeedc	    0x898514feffff	            mov dword [rbp - 0x1ec], eax	      7894	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_155
0xeee2	    0x48c78588feff	          mov qword [rbp - 0x178], 0x1c 	      7895	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4
0xeeed	            0xeb4a	                           jmp 0x400ef79	      7895	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4
0xeeef	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      7896	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70
0xeef6	    0x488b04c50000	                  mov rax, qword [rax*8]	      7896	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70
0xeefe	           0xfb600	                   movzx eax, byte [rax]	      7896	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70
0xef01	           0xfbec0	                           movsx eax, al	      7896	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70
0xef04	    0x3b8514feffff	            cmp eax, dword [rbp - 0x1ec]	      7896	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70
0xef0a	            0x752d	                           jne 0x400ef79	      7896	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70
0xef0c	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      7897	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70	CALL_156
0xef13	    0x488b04c50000	                  mov rax, qword [rax*8]	      7897	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70	CALL_156
0xef1b	        0x488d5001	                      lea rdx, [rax + 1]	      7897	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70	CALL_156
0xef1f	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7897	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70	CALL_156
0xef26	        0x4883c001	                              add rax, 1	      7897	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70	CALL_156
0xef2a	          0x4889d6	                            mov rsi, rdx	      7897	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70	CALL_156
0xef2d	          0x4889c7	                            mov rdi, rax	      7897	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70	CALL_156
0xef30	      0xe800000000	                          call 0x400ef75	      7897	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70	CALL_156
0xef35	            0x85c0	                           test eax, eax	      7897	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70	CALL_156
0xef37	            0x7414	                            je 0x400ef8d	      7897	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70	CALL_156
0xef39	    0x4883ad88feff	              sub qword [rbp - 0x178], 1	      7895	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4
0xef41	    0x4883bd88feff	              cmp qword [rbp - 0x178], 0	      7895	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4
0xef49	            0x79a4	                           jns 0x400ef2f	      7895	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4
0xef4b	            0xeb01	                           jmp 0x400ef8e	      7895	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4
0xef4d	              0x90	                                     nop	      7898	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	FOR_4	IF_70
0xef4e	    0x4883bd88feff	              cmp qword [rbp - 0x178], 0	      7899	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_71
0xef56	            0x792e	                           jns 0x400efc6	      7899	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_71
0xef58	      0xbf00000000	                              mov edi, 0	      7901	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_71	CALL_158
0xef5d	      0xe800000000	                          call 0x400efa2	      7901	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_71	CALL_158
0xef62	          0x4889c2	                            mov rdx, rax	      7901	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_71	CALL_158
0xef65	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7901	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_71	CALL_158
0xef6c	          0x4889c6	                            mov rsi, rax	      7901	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_71	CALL_158
0xef6f	          0x4889d7	                            mov rdi, rdx	      7901	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_71	CALL_158
0xef72	      0xe800000000	                          call 0x400efb7	      7901	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_71	CALL_158
0xef77	    0xc78534feffff	              mov dword [rbp - 0x1cc], 1	      7902	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_71
0xef81	      0xe9030f0000	                           jmp 0x400fec9	      7902	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_71
0xef86	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      7906	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_159
0xef8d	        0x4883c005	                              add rax, 5	      7906	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_159
0xef91	           0xfb600	                   movzx eax, byte [rax]	      7906	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_159
0xef94	            0x3c46	                            cmp al, 0x46	      7906	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_159
0xef96	           0xf94c0	                                 sete al	      7906	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_159
0xef99	           0xfb6c0	                           movzx eax, al	      7906	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_159
0xef9c	    0x488b9588feff	            mov rdx, qword [rbp - 0x178]	      7906	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_159
0xefa3	            0x89d1	                            mov ecx, edx	      7906	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_159
0xefa5	    0x488d9510feff	                  lea rdx, [rbp - 0x1f0]	      7906	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_159
0xefac	            0x89c6	                            mov esi, eax	      7906	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_159
0xefae	            0x89cf	                            mov edi, ecx	      7906	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_159
0xefb0	      0xe800000000	                          call 0x400eff5	      7906	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_159
0xefb5	    0x898538feffff	            mov dword [rbp - 0x1c8], eax	      7906	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	CALL_159
0xefbb	    0x8b8510feffff	            mov eax, dword [rbp - 0x1f0]	      7910	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0xefc1	          0x83f801	                              cmp eax, 1	      7910	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0xefc4	     0xf8587000000	                           jne 0x400f091	      7910	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72
0xefca	    0x488b0d000000	            mov rcx, qword [0x0400f011] 	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_160
0xefd1	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_160
0xefd7	          0x4863d0	                         movsxd rdx, eax	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_160
0xefda	          0x4889d0	                            mov rax, rdx	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_160
0xefdd	        0x48c1e003	                              shl rax, 3	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_160
0xefe1	          0x4801d0	                            add rax, rdx	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_160
0xefe4	          0x4801c0	                            add rax, rax	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_160
0xefe7	          0x4801d0	                            add rax, rdx	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_160
0xefea	        0x48c1e003	                              shl rax, 3	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_160
0xefee	          0x4801c1	                            add rcx, rax	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_160
0xeff1	    0x488b35000000	            mov rsi, qword [0x0400f038] 	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_160
0xeff8	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_160
0xeffe	          0x4863d0	                         movsxd rdx, eax	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_160
0xf001	          0x4889d0	                            mov rax, rdx	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_160
0xf004	        0x48c1e003	                              shl rax, 3	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_160
0xf008	          0x4801d0	                            add rax, rdx	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_160
0xf00b	          0x4801c0	                            add rax, rax	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_160
0xf00e	          0x4801d0	                            add rax, rdx	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_160
0xf011	        0x48c1e003	                              shl rax, 3	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_160
0xf015	          0x4801f0	                            add rax, rsi	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_160
0xf018	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_160
0xf01b	          0x83c802	                               or eax, 2	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_160
0xf01e	          0x89412c	             mov dword [rcx + 0x2c], eax	      7912	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_160
0xf021	    0x488b0d000000	            mov rcx, qword [0x0400f068] 	      7913	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_161
0xf028	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7913	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_161
0xf02e	          0x4863d0	                         movsxd rdx, eax	      7913	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_161
0xf031	          0x4889d0	                            mov rax, rdx	      7913	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_161
0xf034	        0x48c1e003	                              shl rax, 3	      7913	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_161
0xf038	          0x4801d0	                            add rax, rdx	      7913	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_161
0xf03b	          0x4801c0	                            add rax, rax	      7913	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_161
0xf03e	          0x4801d0	                            add rax, rdx	      7913	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_161
0xf041	        0x48c1e003	                              shl rax, 3	      7913	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_161
0xf045	          0x4801c8	                            add rax, rcx	      7913	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_161
0xf048	    0xc74030010000	               mov dword [rax + 0x30], 1	      7913	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_161
0xf04f	            0xeb61	                           jmp 0x400f0f2	      7913	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	IF_72	CALL_161
0xf051	    0x8b8510feffff	            mov eax, dword [rbp - 0x1f0]	      7915	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0xf057	            0x85c0	                           test eax, eax	      7915	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0xf059	            0x7557	                           jne 0x400f0f2	      7915	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0xf05b	    0x488b0d000000	            mov rcx, qword [0x0400f0a2] 	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0xf062	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0xf068	          0x4863d0	                         movsxd rdx, eax	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0xf06b	          0x4889d0	                            mov rax, rdx	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0xf06e	        0x48c1e003	                              shl rax, 3	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0xf072	          0x4801d0	                            add rax, rdx	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0xf075	          0x4801c0	                            add rax, rax	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0xf078	          0x4801d0	                            add rax, rdx	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0xf07b	        0x48c1e003	                              shl rax, 3	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0xf07f	          0x4801c1	                            add rcx, rax	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0xf082	    0x488b35000000	            mov rsi, qword [0x0400f0c9] 	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0xf089	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0xf08f	          0x4863d0	                         movsxd rdx, eax	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0xf092	          0x4889d0	                            mov rax, rdx	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0xf095	        0x48c1e003	                              shl rax, 3	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0xf099	          0x4801d0	                            add rax, rdx	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0xf09c	          0x4801c0	                            add rax, rax	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0xf09f	          0x4801d0	                            add rax, rdx	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0xf0a2	        0x48c1e003	                              shl rax, 3	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0xf0a6	          0x4801f0	                            add rax, rsi	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0xf0a9	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0xf0ac	          0x83e0fd	                     and eax, 0xfffffffd	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0xf0af	          0x89412c	             mov dword [rcx + 0x2c], eax	      7916	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_22	ELSE_23	IF_73
0xf0b2	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      7921	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74
0xf0b9	        0x4883c005	                              add rax, 5	      7921	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74
0xf0bd	           0xfb600	                   movzx eax, byte [rax]	      7921	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74
0xf0c0	            0x3c46	                            cmp al, 0x46	      7921	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74
0xf0c2	     0xf85d5000000	                           jne 0x400f1dd	      7921	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74
0xf0c8	    0x488b0d000000	            mov rcx, qword [0x0400f10f] 	      7923	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	CALL_163
0xf0cf	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7923	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	CALL_163
0xf0d5	          0x4863d0	                         movsxd rdx, eax	      7923	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	CALL_163
0xf0d8	          0x4889d0	                            mov rax, rdx	      7923	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	CALL_163
0xf0db	        0x48c1e003	                              shl rax, 3	      7923	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	CALL_163
0xf0df	          0x4801d0	                            add rax, rdx	      7923	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	CALL_163
0xf0e2	          0x4801c0	                            add rax, rax	      7923	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	CALL_163
0xf0e5	          0x4801d0	                            add rax, rdx	      7923	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	CALL_163
0xf0e8	        0x48c1e003	                              shl rax, 3	      7923	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	CALL_163
0xf0ec	          0x4801c8	                            add rax, rcx	      7923	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	CALL_163
0xf0ef	    0x8b9538feffff	            mov edx, dword [rbp - 0x1c8]	      7923	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	CALL_163
0xf0f5	          0x83c201	                              add edx, 1	      7923	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	CALL_163
0xf0f8	          0x895034	             mov dword [rax + 0x34], edx	      7923	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	CALL_163
0xf0fb	    0x83bd3cfeffff	              cmp dword [rbp - 0x1c4], 0	      7924	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75
0xf102	     0xf84ac0c0000	                            je 0x400fdf4	      7924	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75
0xf108	    0x8b8538feffff	            mov eax, dword [rbp - 0x1c8]	      7926	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75
0xf10e	          0x83c001	                              add eax, 1	      7926	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75
0xf111	    0x890500000000	            mov dword [0x0400f157], eax 	      7926	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75
0xf117	    0x488b0d000000	            mov rcx, qword [0x0400f15e] 	      7927	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	CALL_164
0xf11e	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7927	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	CALL_164
0xf124	          0x4863d0	                         movsxd rdx, eax	      7927	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	CALL_164
0xf127	          0x4889d0	                            mov rax, rdx	      7927	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	CALL_164
0xf12a	        0x48c1e003	                              shl rax, 3	      7927	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	CALL_164
0xf12e	          0x4801d0	                            add rax, rdx	      7927	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	CALL_164
0xf131	          0x4801c0	                            add rax, rax	      7927	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	CALL_164
0xf134	          0x4801d0	                            add rax, rdx	      7927	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	CALL_164
0xf137	        0x48c1e003	                              shl rax, 3	      7927	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	CALL_164
0xf13b	          0x4801c8	                            add rax, rcx	      7927	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	CALL_164
0xf13e	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      7927	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	CALL_164
0xf141	          0x83e002	                              and eax, 2	      7927	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	CALL_164
0xf144	    0x890500000000	            mov dword [0x0400f18a], eax 	      7927	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	CALL_164
0xf14a	    0x8b0500000000	            mov eax, dword [0x0400f190] 	      7930	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76
0xf150	            0x85c0	                           test eax, eax	      7930	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76
0xf152	     0xf855c0c0000	                           jne 0x400fdf4	      7930	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76
0xf158	    0x8b0500000000	            mov eax, dword [0x0400f19e] 	      7930	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76
0xf15e	            0x85c0	                           test eax, eax	      7930	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76
0xf160	     0xf854e0c0000	                           jne 0x400fdf4	      7930	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76
0xf166	    0xc70500000000	           mov dword [0x0400f1b0], 0x32 	      7933	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76
0xf170	    0x8b0500000000	            mov eax, dword [0x0400f1b6] 	      7934	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76	IF_77
0xf176	            0x85c0	                           test eax, eax	      7934	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76	IF_77
0xf178	     0xf84360c0000	                            je 0x400fdf4	      7934	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76	IF_77
0xf17e	    0x83bd38feffff	              cmp dword [rbp - 0x1c8], 0	      7934	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76	IF_77
0xf185	     0xf88290c0000	                            js 0x400fdf4	      7934	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76	IF_77
0xf18b	    0x8b8538feffff	            mov eax, dword [rbp - 0x1c8]	      7935	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76	CALL_165
0xf191	            0x89c7	                            mov edi, eax	      7935	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76	CALL_165
0xf193	      0xe800000000	                          call 0x400f1d8	      7935	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	IF_74	IF_75	IF_76	CALL_165
0xf198	      0xe9170c0000	                           jmp 0x400fdf4	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_141
0xf19d	    0x488b0d000000	            mov rcx, qword [0x0400f1e4] 	      7941	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	CALL_166
0xf1a4	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7941	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	CALL_166
0xf1aa	          0x4863d0	                         movsxd rdx, eax	      7941	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	CALL_166
0xf1ad	          0x4889d0	                            mov rax, rdx	      7941	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	CALL_166
0xf1b0	        0x48c1e003	                              shl rax, 3	      7941	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	CALL_166
0xf1b4	          0x4801d0	                            add rax, rdx	      7941	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	CALL_166
0xf1b7	          0x4801c0	                            add rax, rax	      7941	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	CALL_166
0xf1ba	          0x4801d0	                            add rax, rdx	      7941	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	CALL_166
0xf1bd	        0x48c1e003	                              shl rax, 3	      7941	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	CALL_166
0xf1c1	          0x4801c8	                            add rax, rcx	      7941	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	CALL_166
0xf1c4	    0x8b9538feffff	            mov edx, dword [rbp - 0x1c8]	      7941	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	CALL_166
0xf1ca	          0x83c201	                              add edx, 1	      7941	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	CALL_166
0xf1cd	          0x895038	             mov dword [rax + 0x38], edx	      7941	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	CALL_166
0xf1d0	    0x83bd3cfeffff	              cmp dword [rbp - 0x1c4], 0	      7942	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78
0xf1d7	     0xf84d70b0000	                            je 0x400fdf4	      7942	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78
0xf1dd	    0x8b8538feffff	            mov eax, dword [rbp - 0x1c8]	      7944	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78
0xf1e3	          0x83c001	                              add eax, 1	      7944	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78
0xf1e6	    0x890500000000	            mov dword [0x0400f22c], eax 	      7944	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78
0xf1ec	    0x8b0500000000	            mov eax, dword [0x0400f232] 	      7947	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79
0xf1f2	            0x85c0	                           test eax, eax	      7947	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79
0xf1f4	     0xf85ba0b0000	                           jne 0x400fdf4	      7947	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79
0xf1fa	    0x8b0500000000	            mov eax, dword [0x0400f240] 	      7947	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79
0xf200	            0x85c0	                           test eax, eax	      7947	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79
0xf202	     0xf85ac0b0000	                           jne 0x400fdf4	      7947	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79
0xf208	    0xc70500000000	           mov dword [0x0400f252], 0x32 	      7950	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79
0xf212	    0x83bd38feffff	              cmp dword [rbp - 0x1c8], 0	      7951	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80
0xf219	     0xf88950b0000	                            js 0x400fdf4	      7951	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80
0xf21f	    0xc7854cfeffff	    mov dword [rbp - 0x1b4], 0xffffffff 	      7953	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80
0xf229	    0x8b0500000000	            mov eax, dword [0x0400f26f] 	      7955	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_81
0xf22f	            0x85c0	                           test eax, eax	      7955	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_81
0xf231	            0x740d	                            je 0x400f280	      7955	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_81
0xf233	    0x8b8538feffff	            mov eax, dword [rbp - 0x1c8]	      7956	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	CALL_167
0xf239	            0x89c7	                            mov edi, eax	      7956	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	CALL_167
0xf23b	      0xe800000000	                          call 0x400f280	      7956	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	CALL_167
0xf240	    0x8b0500000000	            mov eax, dword [0x0400f286] 	      7957	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_82
0xf246	          0x83f80f	                            cmp eax, 0xf	      7957	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_82
0xf249	            0x7f26	                            jg 0x400f2b1	      7957	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_82
0xf24b	    0x83bd38feffff	              cmp dword [rbp - 0x1c8], 0	      7958	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_82
0xf252	            0x7409	                            je 0x400f29d	      7958	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_82
0xf254	    0x83bd38feffff	              cmp dword [rbp - 0x1c8], 4	      7958	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_82
0xf25b	            0x7507	                           jne 0x400f2a4	      7958	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_82
0xf25d	      0xb801000000	                              mov eax, 1	      7958	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_82
0xf262	            0xeb05	                           jmp 0x400f2a9	      7958	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_82
0xf264	      0xb800000000	                              mov eax, 0	      7958	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_82
0xf269	    0x89854cfeffff	            mov dword [rbp - 0x1b4], eax	      7958	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_82
0xf26f	            0xeb2d	                           jmp 0x400f2de	      7958	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_82
0xf271	    0x83bd38feffff	           cmp dword [rbp - 0x1c8], 0xf 	      7960	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	ELSE_25	IF_83
0xf278	            0x7f24	                            jg 0x400f2de	      7960	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	ELSE_25	IF_83
0xf27a	    0x83bd38feffff	              cmp dword [rbp - 0x1c8], 6	      7961	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	ELSE_25	IF_83
0xf281	            0x7e09	                           jle 0x400f2cc	      7961	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	ELSE_25	IF_83
0xf283	    0x83bd38feffff	              cmp dword [rbp - 0x1c8], 8	      7961	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	ELSE_25	IF_83
0xf28a	            0x7507	                           jne 0x400f2d3	      7961	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	ELSE_25	IF_83
0xf28c	      0xb801000000	                              mov eax, 1	      7961	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	ELSE_25	IF_83
0xf291	            0xeb05	                           jmp 0x400f2d8	      7961	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	ELSE_25	IF_83
0xf293	      0xb800000000	                              mov eax, 0	      7961	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	ELSE_25	IF_83
0xf298	    0x89854cfeffff	            mov dword [rbp - 0x1b4], eax	      7961	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	ELSE_25	IF_83
0xf29e	    0x83bd4cfeffff	cmp dword [rbp - 0x1b4], 0xffffffffffffffff	      7964	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84
0xf2a5	     0xf84090b0000	                            je 0x400fdf4	      7964	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84
0xf2ab	    0x488b05000000	            mov rax, qword [0x0400f2f2] 	      7965	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84
0xf2b2	           0xfb600	                   movzx eax, byte [rax]	      7965	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84
0xf2b5	            0x3c64	                            cmp al, 0x64	      7965	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84
0xf2b7	           0xf94c0	                                 sete al	      7965	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84
0xf2ba	           0xfb6c0	                           movzx eax, al	      7965	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84
0xf2bd	    0x3b854cfeffff	            cmp eax, dword [rbp - 0x1b4]	      7965	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84
0xf2c3	     0xf84eb0a0000	                            je 0x400fdf4	      7965	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84
0xf2c9	      0xbf00000000	                              mov edi, 0	      7966	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_168
0xf2ce	      0xe800000000	                          call 0x400f313	      7966	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_168
0xf2d3	            0x85c0	                           test eax, eax	      7966	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_168
0xf2d5	     0xf85d90a0000	                           jne 0x400fdf4	      7966	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_168
0xf2db	    0x83bd4cfeffff	              cmp dword [rbp - 0x1b4], 0	      7968	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_169
0xf2e2	            0x7407	                            je 0x400f32b	      7968	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_169
0xf2e4	      0xb800000000	                              mov eax, 0	      7968	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_169
0xf2e9	            0xeb05	                           jmp 0x400f330	      7968	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_169
0xf2eb	      0xb800000000	                              mov eax, 0	      7968	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_169
0xf2f0	      0xb900000000	                              mov ecx, 0	      7968	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_169
0xf2f5	          0x4889c2	                            mov rdx, rax	      7968	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_169
0xf2f8	      0xbe00000000	                              mov esi, 0	      7968	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_169
0xf2fd	      0xbf00000000	                              mov edi, 0	      7968	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_169
0xf302	      0xe800000000	                          call 0x400f347	      7968	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_169
0xf307	      0xbf00000000	                              mov edi, 0	      7970	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_170
0xf30c	      0xe800000000	                          call 0x400f351	      7970	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	ELSE_24	IF_78	IF_79	IF_80	IF_84	CALL_170
0xf311	      0xe99e0a0000	                           jmp 0x400fdf4	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_141
0xf316	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      7978	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	CALL_171
0xf31d	      0xbe00000000	                              mov esi, 0	      7978	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	CALL_171
0xf322	          0x4889c7	                            mov rdi, rax	      7978	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	CALL_171
0xf325	      0xe800000000	                          call 0x400f36a	      7978	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	CALL_171
0xf32a	            0x85c0	                           test eax, eax	      7978	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	CALL_171
0xf32c	     0xf85fb010000	                           jne 0x400f56d	      7978	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	CALL_171
0xf332	    0x488b0d000000	            mov rcx, qword [0x0400f379] 	      7981	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	CALL_172
0xf339	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7981	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	CALL_172
0xf33f	          0x4863d0	                         movsxd rdx, eax	      7981	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	CALL_172
0xf342	          0x4889d0	                            mov rax, rdx	      7981	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	CALL_172
0xf345	        0x48c1e003	                              shl rax, 3	      7981	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	CALL_172
0xf349	          0x4801d0	                            add rax, rdx	      7981	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	CALL_172
0xf34c	          0x4801c0	                            add rax, rax	      7981	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	CALL_172
0xf34f	          0x4801d0	                            add rax, rdx	      7981	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	CALL_172
0xf352	        0x48c1e003	                              shl rax, 3	      7981	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	CALL_172
0xf356	          0x4801c8	                            add rax, rcx	      7981	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	CALL_172
0xf359	        0x4883c070	                           add rax, 0x70	      7981	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	CALL_172
0xf35d	    0x488985a0feff	            mov qword [rbp - 0x160], rax	      7981	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	CALL_172
0xf364	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_173
0xf36b	            0x7438	                            je 0x400f3e5	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_173
0xf36d	    0x488b0d000000	            mov rcx, qword [0x0400f3b4] 	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_173
0xf374	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_173
0xf37a	          0x4863d0	                         movsxd rdx, eax	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_173
0xf37d	          0x4889d0	                            mov rax, rdx	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_173
0xf380	        0x48c1e003	                              shl rax, 3	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_173
0xf384	          0x4801d0	                            add rax, rdx	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_173
0xf387	          0x4801c0	                            add rax, rax	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_173
0xf38a	          0x4801d0	                            add rax, rdx	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_173
0xf38d	        0x48c1e003	                              shl rax, 3	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_173
0xf391	          0x4801c8	                            add rax, rcx	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_173
0xf394	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_173
0xf39a	          0x83e004	                              and eax, 4	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_173
0xf39d	            0x85c0	                           test eax, eax	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_173
0xf39f	     0xf85100a0000	                           jne 0x400fdf5	      7983	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_173
0xf3a5	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      7985	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_87
0xf3ac	            0x755d	                           jne 0x400f44b	      7985	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_87
0xf3ae	    0x488b0d000000	            mov rcx, qword [0x0400f3f5] 	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_174
0xf3b5	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_174
0xf3bb	          0x4863d0	                         movsxd rdx, eax	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_174
0xf3be	          0x4889d0	                            mov rax, rdx	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_174
0xf3c1	        0x48c1e003	                              shl rax, 3	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_174
0xf3c5	          0x4801d0	                            add rax, rdx	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_174
0xf3c8	          0x4801c0	                            add rax, rax	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_174
0xf3cb	          0x4801d0	                            add rax, rdx	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_174
0xf3ce	        0x48c1e003	                              shl rax, 3	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_174
0xf3d2	          0x4801c1	                            add rcx, rax	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_174
0xf3d5	    0x488b35000000	            mov rsi, qword [0x0400f41c] 	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_174
0xf3dc	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_174
0xf3e2	          0x4863d0	                         movsxd rdx, eax	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_174
0xf3e5	          0x4889d0	                            mov rax, rdx	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_174
0xf3e8	        0x48c1e003	                              shl rax, 3	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_174
0xf3ec	          0x4801d0	                            add rax, rdx	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_174
0xf3ef	          0x4801c0	                            add rax, rax	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_174
0xf3f2	          0x4801d0	                            add rax, rdx	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_174
0xf3f5	        0x48c1e003	                              shl rax, 3	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_174
0xf3f9	          0x4801f0	                            add rax, rsi	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_174
0xf3fc	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_174
0xf402	          0x83c804	                               or eax, 4	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_174
0xf405	    0x89818c000000	             mov dword [rcx + 0x8c], eax	      7986	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_174
0xf40b	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7990	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_175
0xf412	          0x4889c7	                            mov rdi, rax	      7990	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_175
0xf415	      0xe800000000	                          call 0x400f45a	      7990	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_175
0xf41a	    0x48898588feff	            mov qword [rbp - 0x178], rax	      7990	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	CALL_175
0xf421	    0x4881bd88feff	cmp qword [rbp - 0x178], 0xffffffffffffd499	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_176
0xf42c	            0x7534	                           jne 0x400f4a2	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_176
0xf42e	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_176
0xf435	      0xbe00000000	                              mov esi, 0	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_176
0xf43a	          0x4889c7	                            mov rdi, rax	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_176
0xf43d	      0xe800000000	                          call 0x400f482	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_176
0xf442	            0x85c0	                           test eax, eax	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_176
0xf444	            0x741c	                            je 0x400f4a2	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_176
0xf446	    0x8b0500000000	            mov eax, dword [0x0400f48c] 	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_176
0xf44c	            0x85c0	                           test eax, eax	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_176
0xf44e	     0xf8561090000	                           jne 0x400fdf5	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_176
0xf454	    0x8b0500000000	            mov eax, dword [0x0400f49a] 	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_176
0xf45a	            0x85c0	                           test eax, eax	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_176
0xf45c	     0xf8553090000	                           jne 0x400fdf5	      7991	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_176
0xf462	    0x488b0d000000	            mov rcx, qword [0x0400f4a9] 	      7993	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_177
0xf469	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      7993	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_177
0xf46f	          0x4863d0	                         movsxd rdx, eax	      7993	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_177
0xf472	          0x4889d0	                            mov rax, rdx	      7993	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_177
0xf475	        0x48c1e003	                              shl rax, 3	      7993	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_177
0xf479	          0x4801d0	                            add rax, rdx	      7993	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_177
0xf47c	          0x4801c0	                            add rax, rax	      7993	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_177
0xf47f	          0x4801d0	                            add rax, rdx	      7993	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_177
0xf482	        0x48c1e003	                              shl rax, 3	      7993	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_177
0xf486	        0x488d1401	                    lea rdx, [rcx + rax]	      7993	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_177
0xf48a	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      7993	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_177
0xf491	        0x48894240	             mov qword [rdx + 0x40], rax	      7993	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	CALL_177
0xf495	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      7995	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_178
0xf49c	          0x488b00	                    mov rax, qword [rax]	      7995	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_178
0xf49f	          0x4885c0	                           test rax, rax	      7995	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_178
0xf4a2	            0x7424	                            je 0x400f508	      7995	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_178
0xf4a4	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      7995	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_178
0xf4ab	          0x488b00	                    mov rax, qword [rax]	      7995	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_178
0xf4ae	    0x488b9580feff	            mov rdx, qword [rbp - 0x180]	      7995	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_178
0xf4b5	          0x4889d6	                            mov rsi, rdx	      7995	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_178
0xf4b8	          0x4889c7	                            mov rdi, rax	      7995	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_178
0xf4bb	      0xe800000000	                          call 0x400f500	      7995	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_178
0xf4c0	            0x85c0	                           test eax, eax	      7995	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_178
0xf4c2	     0xf84ed080000	                            je 0x400fdf5	      7995	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_178
0xf4c8	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      7997	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_179
0xf4cf	          0x488b00	                    mov rax, qword [rax]	      7997	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_179
0xf4d2	          0x4889c7	                            mov rdi, rax	      7997	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_179
0xf4d5	      0xe800000000	                          call 0x400f51a	      7997	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_179
0xf4da	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7998	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	IF_90	CALL_180
0xf4e1	      0xbe00000000	                              mov esi, 0	      7998	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	IF_90	CALL_180
0xf4e6	          0x4889c7	                            mov rdi, rax	      7998	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	IF_90	CALL_180
0xf4e9	      0xe800000000	                          call 0x400f52e	      7998	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	IF_90	CALL_180
0xf4ee	            0x85c0	                           test eax, eax	      7998	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	IF_90	CALL_180
0xf4f0	            0x741e	                            je 0x400f550	      7998	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	IF_90	CALL_180
0xf4f2	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7999	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_181
0xf4f9	          0x4889c7	                            mov rdi, rax	      7999	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_181
0xf4fc	      0xe800000000	                          call 0x400f541	      7999	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_181
0xf501	          0x4889c2	                            mov rdx, rax	      7999	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_181
0xf504	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      7999	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_181
0xf50b	          0x488910	                    mov qword [rax], rdx	      7999	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_181
0xf50e	            0xeb0e	                           jmp 0x400f55e	      7999	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	CALL_181
0xf510	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	      8001	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	ELSE_27
0xf517	    0x48c700000000	                      mov qword [rax], 0	      8001	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	ELSE_27
0xf51e	    0xc78524feffff	              mov dword [rbp - 0x1dc], 1	      8002	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	ELSE_27
0xf528	      0xe988080000	                           jmp 0x400fdf5	      8002	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_26	IF_85	IF_86	IF_88	IF_89	ELSE_27
0xf52d	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      8029	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	CALL_182
0xf534	      0xbe00000000	                              mov esi, 0	      8029	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	CALL_182
0xf539	          0x4889c7	                            mov rdi, rax	      8029	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	CALL_182
0xf53c	      0xe800000000	                          call 0x400f581	      8029	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	CALL_182
0xf541	            0x85c0	                           test eax, eax	      8029	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	CALL_182
0xf543	     0xf85fb010000	                           jne 0x400f784	      8029	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	CALL_182
0xf549	    0x488b0d000000	            mov rcx, qword [0x0400f590] 	      8032	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	CALL_183
0xf550	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8032	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	CALL_183
0xf556	          0x4863d0	                         movsxd rdx, eax	      8032	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	CALL_183
0xf559	          0x4889d0	                            mov rax, rdx	      8032	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	CALL_183
0xf55c	        0x48c1e003	                              shl rax, 3	      8032	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	CALL_183
0xf560	          0x4801d0	                            add rax, rdx	      8032	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	CALL_183
0xf563	          0x4801c0	                            add rax, rax	      8032	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	CALL_183
0xf566	          0x4801d0	                            add rax, rdx	      8032	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	CALL_183
0xf569	        0x48c1e003	                              shl rax, 3	      8032	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	CALL_183
0xf56d	          0x4801c8	                            add rax, rcx	      8032	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	CALL_183
0xf570	        0x4883c078	                           add rax, 0x78	      8032	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	CALL_183
0xf574	    0x488985a8feff	            mov qword [rbp - 0x158], rax	      8032	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	CALL_183
0xf57b	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_184
0xf582	            0x7438	                            je 0x400f5fc	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_184
0xf584	    0x488b0d000000	            mov rcx, qword [0x0400f5cb] 	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_184
0xf58b	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_184
0xf591	          0x4863d0	                         movsxd rdx, eax	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_184
0xf594	          0x4889d0	                            mov rax, rdx	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_184
0xf597	        0x48c1e003	                              shl rax, 3	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_184
0xf59b	          0x4801d0	                            add rax, rdx	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_184
0xf59e	          0x4801c0	                            add rax, rax	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_184
0xf5a1	          0x4801d0	                            add rax, rdx	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_184
0xf5a4	        0x48c1e003	                              shl rax, 3	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_184
0xf5a8	          0x4801c8	                            add rax, rcx	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_184
0xf5ab	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_184
0xf5b1	          0x83e004	                              and eax, 4	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_184
0xf5b4	            0x85c0	                           test eax, eax	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_184
0xf5b6	     0xf85f9070000	                           jne 0x400fdf5	      8034	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_184
0xf5bc	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      8036	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_96
0xf5c3	            0x755d	                           jne 0x400f662	      8036	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_96
0xf5c5	    0x488b0d000000	            mov rcx, qword [0x0400f60c] 	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_185
0xf5cc	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_185
0xf5d2	          0x4863d0	                         movsxd rdx, eax	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_185
0xf5d5	          0x4889d0	                            mov rax, rdx	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_185
0xf5d8	        0x48c1e003	                              shl rax, 3	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_185
0xf5dc	          0x4801d0	                            add rax, rdx	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_185
0xf5df	          0x4801c0	                            add rax, rax	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_185
0xf5e2	          0x4801d0	                            add rax, rdx	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_185
0xf5e5	        0x48c1e003	                              shl rax, 3	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_185
0xf5e9	          0x4801c1	                            add rcx, rax	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_185
0xf5ec	    0x488b35000000	            mov rsi, qword [0x0400f633] 	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_185
0xf5f3	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_185
0xf5f9	          0x4863d0	                         movsxd rdx, eax	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_185
0xf5fc	          0x4889d0	                            mov rax, rdx	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_185
0xf5ff	        0x48c1e003	                              shl rax, 3	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_185
0xf603	          0x4801d0	                            add rax, rdx	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_185
0xf606	          0x4801c0	                            add rax, rax	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_185
0xf609	          0x4801d0	                            add rax, rdx	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_185
0xf60c	        0x48c1e003	                              shl rax, 3	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_185
0xf610	          0x4801f0	                            add rax, rsi	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_185
0xf613	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_185
0xf619	          0x83c804	                               or eax, 4	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_185
0xf61c	    0x89818c000000	             mov dword [rcx + 0x8c], eax	      8037	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_185
0xf622	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      8041	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_186
0xf629	          0x4889c7	                            mov rdi, rax	      8041	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_186
0xf62c	      0xe800000000	                          call 0x400f671	      8041	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_186
0xf631	    0x48898588feff	            mov qword [rbp - 0x178], rax	      8041	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	CALL_186
0xf638	    0x4881bd88feff	cmp qword [rbp - 0x178], 0xffffffffffffd499	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_187
0xf643	            0x7534	                           jne 0x400f6b9	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_187
0xf645	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_187
0xf64c	      0xbe00000000	                              mov esi, 0	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_187
0xf651	          0x4889c7	                            mov rdi, rax	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_187
0xf654	      0xe800000000	                          call 0x400f699	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_187
0xf659	            0x85c0	                           test eax, eax	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_187
0xf65b	            0x741c	                            je 0x400f6b9	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_187
0xf65d	    0x8b0500000000	            mov eax, dword [0x0400f6a3] 	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_187
0xf663	            0x85c0	                           test eax, eax	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_187
0xf665	     0xf854a070000	                           jne 0x400fdf5	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_187
0xf66b	    0x8b0500000000	            mov eax, dword [0x0400f6b1] 	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_187
0xf671	            0x85c0	                           test eax, eax	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_187
0xf673	     0xf853c070000	                           jne 0x400fdf5	      8042	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_187
0xf679	    0x488b0d000000	            mov rcx, qword [0x0400f6c0] 	      8044	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_188
0xf680	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8044	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_188
0xf686	          0x4863d0	                         movsxd rdx, eax	      8044	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_188
0xf689	          0x4889d0	                            mov rax, rdx	      8044	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_188
0xf68c	        0x48c1e003	                              shl rax, 3	      8044	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_188
0xf690	          0x4801d0	                            add rax, rdx	      8044	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_188
0xf693	          0x4801c0	                            add rax, rax	      8044	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_188
0xf696	          0x4801d0	                            add rax, rdx	      8044	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_188
0xf699	        0x48c1e003	                              shl rax, 3	      8044	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_188
0xf69d	        0x488d1401	                    lea rdx, [rcx + rax]	      8044	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_188
0xf6a1	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      8044	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_188
0xf6a8	        0x48894248	             mov qword [rdx + 0x48], rax	      8044	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	CALL_188
0xf6ac	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      8046	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_189
0xf6b3	          0x488b00	                    mov rax, qword [rax]	      8046	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_189
0xf6b6	          0x4885c0	                           test rax, rax	      8046	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_189
0xf6b9	            0x7424	                            je 0x400f71f	      8046	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_189
0xf6bb	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      8046	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_189
0xf6c2	          0x488b00	                    mov rax, qword [rax]	      8046	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_189
0xf6c5	    0x488b9580feff	            mov rdx, qword [rbp - 0x180]	      8046	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_189
0xf6cc	          0x4889d6	                            mov rsi, rdx	      8046	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_189
0xf6cf	          0x4889c7	                            mov rdi, rax	      8046	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_189
0xf6d2	      0xe800000000	                          call 0x400f717	      8046	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_189
0xf6d7	            0x85c0	                           test eax, eax	      8046	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_189
0xf6d9	     0xf84d6060000	                            je 0x400fdf5	      8046	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_189
0xf6df	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      8048	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_190
0xf6e6	          0x488b00	                    mov rax, qword [rax]	      8048	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_190
0xf6e9	          0x4889c7	                            mov rdi, rax	      8048	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_190
0xf6ec	      0xe800000000	                          call 0x400f731	      8048	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_190
0xf6f1	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      8049	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	IF_99	CALL_191
0xf6f8	      0xbe00000000	                              mov esi, 0	      8049	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	IF_99	CALL_191
0xf6fd	          0x4889c7	                            mov rdi, rax	      8049	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	IF_99	CALL_191
0xf700	      0xe800000000	                          call 0x400f745	      8049	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	IF_99	CALL_191
0xf705	            0x85c0	                           test eax, eax	      8049	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	IF_99	CALL_191
0xf707	            0x741e	                            je 0x400f767	      8049	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	IF_99	CALL_191
0xf709	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      8050	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_192
0xf710	          0x4889c7	                            mov rdi, rax	      8050	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_192
0xf713	      0xe800000000	                          call 0x400f758	      8050	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_192
0xf718	          0x4889c2	                            mov rdx, rax	      8050	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_192
0xf71b	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      8050	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_192
0xf722	          0x488910	                    mov qword [rax], rdx	      8050	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_192
0xf725	            0xeb0e	                           jmp 0x400f775	      8050	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	CALL_192
0xf727	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      8052	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	ELSE_29
0xf72e	    0x48c700000000	                      mov qword [rax], 0	      8052	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	ELSE_29
0xf735	    0xc78524feffff	              mov dword [rbp - 0x1dc], 1	      8053	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	ELSE_29
0xf73f	      0xe971060000	                           jmp 0x400fdf5	      8053	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_28	IF_94	IF_95	IF_97	IF_98	ELSE_29
0xf744	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      8080	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	CALL_193
0xf74b	      0xbe00000000	                              mov esi, 0	      8080	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	CALL_193
0xf750	          0x4889c7	                            mov rdi, rax	      8080	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	CALL_193
0xf753	      0xe800000000	                          call 0x400f798	      8080	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	CALL_193
0xf758	            0x85c0	                           test eax, eax	      8080	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	CALL_193
0xf75a	     0xf85ed010000	                           jne 0x400f98d	      8080	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	CALL_193
0xf760	    0x488b0d000000	            mov rcx, qword [0x0400f7a7] 	      8083	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	CALL_194
0xf767	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8083	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	CALL_194
0xf76d	          0x4863d0	                         movsxd rdx, eax	      8083	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	CALL_194
0xf770	          0x4889d0	                            mov rax, rdx	      8083	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	CALL_194
0xf773	        0x48c1e003	                              shl rax, 3	      8083	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	CALL_194
0xf777	          0x4801d0	                            add rax, rdx	      8083	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	CALL_194
0xf77a	          0x4801c0	                            add rax, rax	      8083	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	CALL_194
0xf77d	          0x4801d0	                            add rax, rdx	      8083	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	CALL_194
0xf780	        0x48c1e003	                              shl rax, 3	      8083	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	CALL_194
0xf784	          0x4801c8	                            add rax, rcx	      8083	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	CALL_194
0xf787	        0x4883e880	             sub rax, 0xffffffffffffff80	      8083	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	CALL_194
0xf78b	    0x488985b0feff	            mov qword [rbp - 0x150], rax	      8083	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	CALL_194
0xf792	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_195
0xf799	            0x7438	                            je 0x400f813	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_195
0xf79b	    0x488b0d000000	            mov rcx, qword [0x0400f7e2] 	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_195
0xf7a2	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_195
0xf7a8	          0x4863d0	                         movsxd rdx, eax	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_195
0xf7ab	          0x4889d0	                            mov rax, rdx	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_195
0xf7ae	        0x48c1e003	                              shl rax, 3	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_195
0xf7b2	          0x4801d0	                            add rax, rdx	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_195
0xf7b5	          0x4801c0	                            add rax, rax	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_195
0xf7b8	          0x4801d0	                            add rax, rdx	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_195
0xf7bb	        0x48c1e003	                              shl rax, 3	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_195
0xf7bf	          0x4801c8	                            add rax, rcx	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_195
0xf7c2	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_195
0xf7c8	          0x83e004	                              and eax, 4	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_195
0xf7cb	            0x85c0	                           test eax, eax	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_195
0xf7cd	     0xf85e2050000	                           jne 0x400fdf5	      8085	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_195
0xf7d3	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      8087	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_105
0xf7da	            0x755d	                           jne 0x400f879	      8087	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_105
0xf7dc	    0x488b0d000000	            mov rcx, qword [0x0400f823] 	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_196
0xf7e3	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_196
0xf7e9	          0x4863d0	                         movsxd rdx, eax	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_196
0xf7ec	          0x4889d0	                            mov rax, rdx	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_196
0xf7ef	        0x48c1e003	                              shl rax, 3	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_196
0xf7f3	          0x4801d0	                            add rax, rdx	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_196
0xf7f6	          0x4801c0	                            add rax, rax	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_196
0xf7f9	          0x4801d0	                            add rax, rdx	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_196
0xf7fc	        0x48c1e003	                              shl rax, 3	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_196
0xf800	          0x4801c1	                            add rcx, rax	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_196
0xf803	    0x488b35000000	            mov rsi, qword [0x0400f84a] 	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_196
0xf80a	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_196
0xf810	          0x4863d0	                         movsxd rdx, eax	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_196
0xf813	          0x4889d0	                            mov rax, rdx	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_196
0xf816	        0x48c1e003	                              shl rax, 3	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_196
0xf81a	          0x4801d0	                            add rax, rdx	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_196
0xf81d	          0x4801c0	                            add rax, rax	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_196
0xf820	          0x4801d0	                            add rax, rdx	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_196
0xf823	        0x48c1e003	                              shl rax, 3	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_196
0xf827	          0x4801f0	                            add rax, rsi	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_196
0xf82a	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_196
0xf830	          0x83c804	                               or eax, 4	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_196
0xf833	    0x89818c000000	             mov dword [rcx + 0x8c], eax	      8088	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_196
0xf839	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      8091	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_197
0xf840	          0x4889c7	                            mov rdi, rax	      8091	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_197
0xf843	      0xe800000000	                          call 0x400f888	      8091	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_197
0xf848	    0x48898588feff	            mov qword [rbp - 0x178], rax	      8091	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	CALL_197
0xf84f	    0x4881bd88feff	cmp qword [rbp - 0x178], 0xffffffffffffd499	      8092	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_198
0xf85a	            0x7526	                           jne 0x400f8c2	      8092	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_198
0xf85c	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      8092	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_198
0xf863	      0xbe00000000	                              mov esi, 0	      8092	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_198
0xf868	          0x4889c7	                            mov rdi, rax	      8092	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_198
0xf86b	      0xe800000000	                          call 0x400f8b0	      8092	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_198
0xf870	            0x85c0	                           test eax, eax	      8092	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_198
0xf872	            0x740e	                            je 0x400f8c2	      8092	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_198
0xf874	    0x8b0500000000	            mov eax, dword [0x0400f8ba] 	      8092	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_198
0xf87a	            0x85c0	                           test eax, eax	      8092	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_198
0xf87c	     0xf8533050000	                           jne 0x400fdf5	      8092	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_198
0xf882	    0x488b0d000000	            mov rcx, qword [0x0400f8c9] 	      8094	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_199
0xf889	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8094	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_199
0xf88f	          0x4863d0	                         movsxd rdx, eax	      8094	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_199
0xf892	          0x4889d0	                            mov rax, rdx	      8094	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_199
0xf895	        0x48c1e003	                              shl rax, 3	      8094	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_199
0xf899	          0x4801d0	                            add rax, rdx	      8094	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_199
0xf89c	          0x4801c0	                            add rax, rax	      8094	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_199
0xf89f	          0x4801d0	                            add rax, rdx	      8094	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_199
0xf8a2	        0x48c1e003	                              shl rax, 3	      8094	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_199
0xf8a6	        0x488d1401	                    lea rdx, [rcx + rax]	      8094	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_199
0xf8aa	    0x488b8588feff	            mov rax, qword [rbp - 0x178]	      8094	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_199
0xf8b1	        0x48894250	             mov qword [rdx + 0x50], rax	      8094	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	CALL_199
0xf8b5	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      8096	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_200
0xf8bc	          0x488b00	                    mov rax, qword [rax]	      8096	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_200
0xf8bf	          0x4885c0	                           test rax, rax	      8096	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_200
0xf8c2	            0x7424	                            je 0x400f928	      8096	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_200
0xf8c4	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      8096	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_200
0xf8cb	          0x488b00	                    mov rax, qword [rax]	      8096	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_200
0xf8ce	    0x488b9580feff	            mov rdx, qword [rbp - 0x180]	      8096	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_200
0xf8d5	          0x4889d6	                            mov rsi, rdx	      8096	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_200
0xf8d8	          0x4889c7	                            mov rdi, rax	      8096	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_200
0xf8db	      0xe800000000	                          call 0x400f920	      8096	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_200
0xf8e0	            0x85c0	                           test eax, eax	      8096	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_200
0xf8e2	     0xf84cd040000	                            je 0x400fdf5	      8096	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_200
0xf8e8	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      8098	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_201
0xf8ef	          0x488b00	                    mov rax, qword [rax]	      8098	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_201
0xf8f2	          0x4889c7	                            mov rdi, rax	      8098	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_201
0xf8f5	      0xe800000000	                          call 0x400f93a	      8098	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_201
0xf8fa	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      8099	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	IF_108	CALL_202
0xf901	      0xbe00000000	                              mov esi, 0	      8099	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	IF_108	CALL_202
0xf906	          0x4889c7	                            mov rdi, rax	      8099	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	IF_108	CALL_202
0xf909	      0xe800000000	                          call 0x400f94e	      8099	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	IF_108	CALL_202
0xf90e	            0x85c0	                           test eax, eax	      8099	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	IF_108	CALL_202
0xf910	            0x741e	                            je 0x400f970	      8099	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	IF_108	CALL_202
0xf912	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      8100	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_203
0xf919	          0x4889c7	                            mov rdi, rax	      8100	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_203
0xf91c	      0xe800000000	                          call 0x400f961	      8100	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_203
0xf921	          0x4889c2	                            mov rdx, rax	      8100	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_203
0xf924	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      8100	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_203
0xf92b	          0x488910	                    mov qword [rax], rdx	      8100	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_203
0xf92e	            0xeb0e	                           jmp 0x400f97e	      8100	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	CALL_203
0xf930	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      8102	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	ELSE_31
0xf937	    0x48c700000000	                      mov qword [rax], 0	      8102	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	ELSE_31
0xf93e	    0xc78524feffff	              mov dword [rbp - 0x1dc], 1	      8103	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	ELSE_31
0xf948	      0xe968040000	                           jmp 0x400fdf5	      8103	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_30	IF_103	IF_104	IF_106	IF_107	ELSE_31
0xf94d	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      8111	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_205
0xf954	      0xbe00000000	                              mov esi, 0	      8111	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_205
0xf959	          0x4889c7	                            mov rdi, rax	      8111	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_205
0xf95c	      0xe800000000	                          call 0x400f9a1	      8111	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_205
0xf961	            0x85c0	                           test eax, eax	      8111	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_205
0xf963	            0x741c	                            je 0x400f9c1	      8111	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_205
0xf965	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      8111	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_205
0xf96c	      0xbe00000000	                              mov esi, 0	      8111	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_205
0xf971	          0x4889c7	                            mov rdi, rax	      8111	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_205
0xf974	      0xe800000000	                          call 0x400f9b9	      8111	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_205
0xf979	            0x85c0	                           test eax, eax	      8111	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_205
0xf97b	     0xf8502040000	                           jne 0x400fdc3	      8111	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_205
0xf981	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      8116	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_110
0xf988	            0x755d	                           jne 0x400fa27	      8116	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_110
0xf98a	    0x488b0d000000	            mov rcx, qword [0x0400f9d1] 	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_206
0xf991	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_206
0xf997	          0x4863d0	                         movsxd rdx, eax	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_206
0xf99a	          0x4889d0	                            mov rax, rdx	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_206
0xf99d	        0x48c1e003	                              shl rax, 3	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_206
0xf9a1	          0x4801d0	                            add rax, rdx	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_206
0xf9a4	          0x4801c0	                            add rax, rax	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_206
0xf9a7	          0x4801d0	                            add rax, rdx	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_206
0xf9aa	        0x48c1e003	                              shl rax, 3	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_206
0xf9ae	          0x4801c1	                            add rcx, rax	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_206
0xf9b1	    0x488b35000000	            mov rsi, qword [0x0400f9f8] 	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_206
0xf9b8	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_206
0xf9be	          0x4863d0	                         movsxd rdx, eax	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_206
0xf9c1	          0x4889d0	                            mov rax, rdx	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_206
0xf9c4	        0x48c1e003	                              shl rax, 3	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_206
0xf9c8	          0x4801d0	                            add rax, rdx	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_206
0xf9cb	          0x4801c0	                            add rax, rax	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_206
0xf9ce	          0x4801d0	                            add rax, rdx	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_206
0xf9d1	        0x48c1e003	                              shl rax, 3	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_206
0xf9d5	          0x4801f0	                            add rax, rsi	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_206
0xf9d8	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_206
0xf9de	          0x83c801	                               or eax, 1	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_206
0xf9e1	    0x89818c000000	             mov dword [rcx + 0x8c], eax	      8117	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_206
0xf9e7	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      8123	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	CALL_207
0xf9ee	      0xba02000000	                              mov edx, 2	      8123	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	CALL_207
0xf9f3	      0xbe00000000	                              mov esi, 0	      8123	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	CALL_207
0xf9f8	          0x4889c7	                            mov rdi, rax	      8123	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	CALL_207
0xf9fb	      0xe800000000	                          call 0x400fa40	      8123	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	CALL_207
0xfa00	            0x85c0	                           test eax, eax	      8123	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	CALL_207
0xfa02	     0xf85a1010000	                           jne 0x400fbe9	      8123	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	CALL_207
0xfa08	    0xc78514feffff	              mov dword [rbp - 0x1ec], 0	      8125	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111
0xfa12	        0xc6458000	                mov byte [rbp - 0x80], 0	      8126	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111
0xfa16	      0xe96b010000	                           jmp 0x400fbc6	      8127	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4
0xfa1b	    0xc78518feffff	              mov dword [rbp - 0x1e8], 0	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0xfa25	            0xeb07	                           jmp 0x400fa6e	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0xfa27	    0x838518feffff	              add dword [rbp - 0x1e8], 1	      8131	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0xfa2e	    0x8b9514feffff	            mov edx, dword [rbp - 0x1ec]	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0xfa34	    0x8b8518feffff	            mov eax, dword [rbp - 0x1e8]	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0xfa3a	             0x1d0	                            add eax, edx	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0xfa3c	          0x4863d0	                         movsxd rdx, eax	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0xfa3f	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0xfa46	          0x4801d0	                            add rax, rdx	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0xfa49	           0xfb600	                   movzx eax, byte [rax]	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0xfa4c	            0x84c0	                             test al, al	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0xfa4e	            0x7422	                            je 0x400fab2	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0xfa50	    0x8b9514feffff	            mov edx, dword [rbp - 0x1ec]	      8131	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0xfa56	    0x8b8518feffff	            mov eax, dword [rbp - 0x1e8]	      8131	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0xfa5c	             0x1d0	                            add eax, edx	      8131	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0xfa5e	          0x4863d0	                         movsxd rdx, eax	      8131	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0xfa61	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      8131	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0xfa68	          0x4801d0	                            add rax, rdx	      8131	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0xfa6b	           0xfb600	                   movzx eax, byte [rax]	      8131	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0xfa6e	            0x3c2c	                            cmp al, 0x2c	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0xfa70	            0x75b5	                           jne 0x400fa67	      8130	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	FOR_5
0xfa72	    0x8b8514feffff	            mov eax, dword [rbp - 0x1ec]	      8133	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_208
0xfa78	          0x4863d0	                         movsxd rdx, eax	      8133	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_208
0xfa7b	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      8133	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_208
0xfa82	          0x4801c2	                            add rdx, rax	      8133	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_208
0xfa85	    0x8b8518feffff	            mov eax, dword [rbp - 0x1e8]	      8133	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_208
0xfa8b	            0x89c6	                            mov esi, eax	      8133	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_208
0xfa8d	          0x4889d7	                            mov rdi, rdx	      8133	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_208
0xfa90	      0xe800000000	                          call 0x400fad5	      8133	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_208
0xfa95	    0x488985b8feff	            mov qword [rbp - 0x148], rax	      8133	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_208
0xfa9c	    0x4883bdb8feff	              cmp qword [rbp - 0x148], 0	      8134	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_112
0xfaa4	            0x750f	                           jne 0x400faf5	      8134	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_112
0xfaa6	    0xc78534feffff	              mov dword [rbp - 0x1cc], 1	      8136	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_112
0xfab0	      0xe9a7010000	                           jmp 0x400fc9c	      8137	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_112
0xfab5	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	      8140	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_209
0xfabc	          0x4889c7	                            mov rdi, rax	      8140	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_209
0xfabf	      0xe800000000	                          call 0x400fb04	      8140	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_209
0xfac4	    0x48898558feff	            mov qword [rbp - 0x1a8], rax	      8140	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_209
0xfacb	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	      8141	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_210
0xfad2	          0x4889c7	                            mov rdi, rax	      8141	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_210
0xfad5	      0xe800000000	                          call 0x400fb1a	      8141	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_210
0xfada	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      8142	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_113
0xfae1	          0x4885c0	                           test rax, rax	      8142	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_113
0xfae4	            0x750b	                           jne 0x400fb31	      8142	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_113
0xfae6	    0x48c78558feff	              mov qword [rbp - 0x1a8], 0	      8143	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_113
0xfaf1	        0x488d4580	                   lea rax, [rbp - 0x80]	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_212
0xfaf5	          0x4889c7	                            mov rdi, rax	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_212
0xfaf8	      0xe800000000	                          call 0x400fb3d	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_212
0xfafd	            0x89c3	                            mov ebx, eax	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_212
0xfaff	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_212
0xfb06	          0x4889c7	                            mov rdi, rax	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_212
0xfb09	      0xe800000000	                          call 0x400fb4e	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_212
0xfb0e	             0x1d8	                            add eax, ebx	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_212
0xfb10	          0x83f862	                           cmp eax, 0x62	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_212
0xfb13	            0x7e2e	                           jle 0x400fb83	      8146	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_212
0xfb15	      0xbf00000000	                              mov edi, 0	      8148	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_214
0xfb1a	      0xe800000000	                          call 0x400fb5f	      8148	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_214
0xfb1f	          0x4889c2	                            mov rdx, rax	      8148	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_214
0xfb22	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      8148	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_214
0xfb29	          0x4889c6	                            mov rsi, rax	      8148	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_214
0xfb2c	          0x4889d7	                            mov rdi, rdx	      8148	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_214
0xfb2f	      0xe800000000	                          call 0x400fb74	      8148	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114	CALL_214
0xfb34	    0xc78534feffff	              mov dword [rbp - 0x1cc], 1	      8149	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114
0xfb3e	      0xe919010000	                           jmp 0x400fc9c	      8150	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_114
0xfb43	    0x488b9558feff	            mov rdx, qword [rbp - 0x1a8]	      8152	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_215
0xfb4a	        0x488d4580	                   lea rax, [rbp - 0x80]	      8152	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_215
0xfb4e	          0x4889d6	                            mov rsi, rdx	      8152	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_215
0xfb51	          0x4889c7	                            mov rdi, rax	      8152	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_215
0xfb54	      0xe800000000	                          call 0x400fb99	      8152	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	CALL_215
0xfb59	    0x8b8518feffff	            mov eax, dword [rbp - 0x1e8]	      8155	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4
0xfb5f	     0x18514feffff	            add dword [rbp - 0x1ec], eax	      8155	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4
0xfb65	    0x8b8514feffff	            mov eax, dword [rbp - 0x1ec]	      8156	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_115
0xfb6b	          0x4863d0	                         movsxd rdx, eax	      8156	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_115
0xfb6e	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      8156	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_115
0xfb75	          0x4801d0	                            add rax, rdx	      8156	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_115
0xfb78	           0xfb600	                   movzx eax, byte [rax]	      8156	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_115
0xfb7b	            0x3c2c	                            cmp al, 0x2c	      8156	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_115
0xfb7d	            0x7507	                           jne 0x400fbc6	      8156	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_115
0xfb7f	    0x838514feffff	              add dword [rbp - 0x1ec], 1	      8157	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4	IF_115
0xfb86	    0x8b8514feffff	            mov eax, dword [rbp - 0x1ec]	      8127	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4
0xfb8c	          0x4863d0	                         movsxd rdx, eax	      8127	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4
0xfb8f	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      8127	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4
0xfb96	          0x4801d0	                            add rax, rdx	      8127	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4
0xfb99	           0xfb600	                   movzx eax, byte [rax]	      8127	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4
0xfb9c	            0x84c0	                             test al, al	      8127	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4
0xfb9e	     0xf8577feffff	                           jne 0x400fa5b	      8127	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4
0xfba4	      0xe9b3000000	                           jmp 0x400fc9c	      8127	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_111	WHILE_4
0xfba9	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      8165	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6
0xfbb0	    0x48898558feff	            mov qword [rbp - 0x1a8], rax	      8165	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6
0xfbb7	    0xc78514feffff	              mov dword [rbp - 0x1ec], 0	      8165	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6
0xfbc1	            0xeb71	                           jmp 0x400fc74	      8165	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6
0xfbc3	    0x8b8514feffff	            mov eax, dword [rbp - 0x1ec]	      8167	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	CALL_216
0xfbc9	            0x4898	                                    cdqe	      8167	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	CALL_216
0xfbcb	        0x488d5580	                   lea rdx, [rbp - 0x80]	      8167	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	CALL_216
0xfbcf	        0x488d3402	                    lea rsi, [rdx + rax]	      8167	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	CALL_216
0xfbd3	    0x488d8558feff	                  lea rax, [rbp - 0x1a8]	      8167	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	CALL_216
0xfbda	      0xb900000000	                              mov ecx, 0	      8167	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	CALL_216
0xfbdf	      0xba00000000	                              mov edx, 0	      8167	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	CALL_216
0xfbe4	          0x4889c7	                            mov rdi, rax	      8167	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	CALL_216
0xfbe7	      0xe800000000	                          call 0x400fc2c	      8167	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	CALL_216
0xfbec	    0x898518feffff	            mov dword [rbp - 0x1e8], eax	      8167	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	CALL_216
0xfbf2	    0x83bd18feffff	              cmp dword [rbp - 0x1e8], 0	      8168	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	IF_116
0xfbf9	            0x7e0e	                           jle 0x400fc49	      8168	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	IF_116
0xfbfb	    0x8b8518feffff	            mov eax, dword [rbp - 0x1e8]	      8169	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	IF_116
0xfc01	     0x18514feffff	            add dword [rbp - 0x1ec], eax	      8169	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	IF_116
0xfc07	            0xeb2b	                           jmp 0x400fc74	      8169	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	IF_116
0xfc09	    0x8b9514feffff	            mov edx, dword [rbp - 0x1ec]	      8171	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	ELSE_34
0xfc0f	          0x8d4201	                      lea eax, [rdx + 1]	      8171	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	ELSE_34
0xfc12	    0x898514feffff	            mov dword [rbp - 0x1ec], eax	      8171	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	ELSE_34
0xfc18	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      8171	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	ELSE_34
0xfc1f	        0x488d4801	                      lea rcx, [rax + 1]	      8171	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	ELSE_34
0xfc23	    0x48898d58feff	            mov qword [rbp - 0x1a8], rcx	      8171	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	ELSE_34
0xfc2a	           0xfb608	                   movzx ecx, byte [rax]	      8171	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	ELSE_34
0xfc2d	          0x4863c2	                         movsxd rax, edx	      8171	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	ELSE_34
0xfc30	        0x884c0580	         mov byte [rbp + rax - 0x80], cl	      8171	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6	ELSE_34
0xfc34	    0x83bd14feffff	          cmp dword [rbp - 0x1ec], 0x5d 	      8165	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6
0xfc3b	            0x7f12	                            jg 0x400fc8f	      8165	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6
0xfc3d	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      8165	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6
0xfc44	           0xfb600	                   movzx eax, byte [rax]	      8165	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6
0xfc47	            0x84c0	                             test al, al	      8165	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6
0xfc49	     0xf8574ffffff	                           jne 0x400fc03	      8165	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33	FOR_6
0xfc4f	    0x8b8514feffff	            mov eax, dword [rbp - 0x1ec]	      8173	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33
0xfc55	            0x4898	                                    cdqe	      8173	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33
0xfc57	      0xc644058000	          mov byte [rbp + rax - 0x80], 0	      8173	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_33
0xfc5c	    0x83bd34feffff	              cmp dword [rbp - 0x1cc], 0	      8175	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_117
0xfc63	     0xf851f020000	                           jne 0x400fec8	      8175	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_117
0xfc69	        0x488d4580	                   lea rax, [rbp - 0x80]	      8178	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_118	CALL_217
0xfc6d	      0xbe00000000	                              mov esi, 0	      8178	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_118	CALL_217
0xfc72	          0x4889c7	                            mov rdi, rax	      8178	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_118	CALL_217
0xfc75	      0xe800000000	                          call 0x400fcba	      8178	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_118	CALL_217
0xfc7a	            0x85c0	                           test eax, eax	      8178	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_118	CALL_217
0xfc7c	            0x750d	                           jne 0x400fccb	      8178	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_118	CALL_217
0xfc7e	    0x48c78558feff	              mov qword [rbp - 0x1a8], 0	      8179	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_118
0xfc89	            0xeb13	                           jmp 0x400fcde	      8179	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_118
0xfc8b	        0x488d4580	                   lea rax, [rbp - 0x80]	      8181	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_218
0xfc8f	          0x4889c7	                            mov rdi, rax	      8181	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_218
0xfc92	      0xe800000000	                          call 0x400fcd7	      8181	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_218
0xfc97	    0x48898558feff	            mov qword [rbp - 0x1a8], rax	      8181	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	CALL_218
0xfc9e	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      8182	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119
0xfca5	        0x4883c002	                              add rax, 2	      8182	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119
0xfca9	           0xfb600	                   movzx eax, byte [rax]	      8182	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119
0xfcac	            0x3c41	                            cmp al, 0x41	      8182	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119
0xfcae	            0x756b	                           jne 0x400fd5b	      8182	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119
0xfcb0	    0x488b0d000000	            mov rcx, qword [0x0400fcf7] 	      8184	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_220
0xfcb7	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8184	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_220
0xfcbd	          0x4863d0	                         movsxd rdx, eax	      8184	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_220
0xfcc0	          0x4889d0	                            mov rax, rdx	      8184	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_220
0xfcc3	        0x48c1e003	                              shl rax, 3	      8184	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_220
0xfcc7	          0x4801d0	                            add rax, rdx	      8184	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_220
0xfcca	          0x4801c0	                            add rax, rax	      8184	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_220
0xfccd	          0x4801d0	                            add rax, rdx	      8184	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_220
0xfcd0	        0x48c1e003	                              shl rax, 3	      8184	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_220
0xfcd4	          0x4801c8	                            add rax, rcx	      8184	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_220
0xfcd7	        0x488b4018	            mov rax, qword [rax + 0x18] 	      8184	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_220
0xfcdb	          0x4889c7	                            mov rdi, rax	      8184	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_220
0xfcde	      0xe800000000	                          call 0x400fd23	      8184	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_220
0xfce3	    0x488b0d000000	            mov rcx, qword [0x0400fd2a] 	      8185	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_221
0xfcea	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8185	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_221
0xfcf0	          0x4863d0	                         movsxd rdx, eax	      8185	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_221
0xfcf3	          0x4889d0	                            mov rax, rdx	      8185	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_221
0xfcf6	        0x48c1e003	                              shl rax, 3	      8185	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_221
0xfcfa	          0x4801d0	                            add rax, rdx	      8185	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_221
0xfcfd	          0x4801c0	                            add rax, rax	      8185	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_221
0xfd00	          0x4801d0	                            add rax, rdx	      8185	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_221
0xfd03	        0x48c1e003	                              shl rax, 3	      8185	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_221
0xfd07	        0x488d1401	                    lea rdx, [rcx + rax]	      8185	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_221
0xfd0b	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      8185	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_221
0xfd12	        0x48894218	             mov qword [rdx + 0x18], rax	      8185	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_119	CALL_221
0xfd16	      0xe99a000000	                           jmp 0x400fdf5	      8112	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109
0xfd1b	    0x488b0d000000	            mov rcx, qword [0x0400fd62] 	      8189	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_223
0xfd22	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8189	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_223
0xfd28	          0x4863d0	                         movsxd rdx, eax	      8189	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_223
0xfd2b	          0x4889d0	                            mov rax, rdx	      8189	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_223
0xfd2e	        0x48c1e003	                              shl rax, 3	      8189	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_223
0xfd32	          0x4801d0	                            add rax, rdx	      8189	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_223
0xfd35	          0x4801c0	                            add rax, rax	      8189	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_223
0xfd38	          0x4801d0	                            add rax, rdx	      8189	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_223
0xfd3b	        0x48c1e003	                              shl rax, 3	      8189	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_223
0xfd3f	          0x4801c8	                            add rax, rcx	      8189	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_223
0xfd42	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8189	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_223
0xfd46	          0x4889c7	                            mov rdi, rax	      8189	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_223
0xfd49	      0xe800000000	                          call 0x400fd8e	      8189	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_223
0xfd4e	    0x488b0d000000	            mov rcx, qword [0x0400fd95] 	      8190	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_224
0xfd55	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8190	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_224
0xfd5b	          0x4863d0	                         movsxd rdx, eax	      8190	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_224
0xfd5e	          0x4889d0	                            mov rax, rdx	      8190	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_224
0xfd61	        0x48c1e003	                              shl rax, 3	      8190	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_224
0xfd65	          0x4801d0	                            add rax, rdx	      8190	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_224
0xfd68	          0x4801c0	                            add rax, rax	      8190	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_224
0xfd6b	          0x4801d0	                            add rax, rdx	      8190	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_224
0xfd6e	        0x48c1e003	                              shl rax, 3	      8190	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_224
0xfd72	        0x488d1401	                    lea rdx, [rcx + rax]	      8190	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_224
0xfd76	    0x488b8558feff	            mov rax, qword [rbp - 0x1a8]	      8190	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_224
0xfd7d	        0x48894220	             mov qword [rdx + 0x20], rax	      8190	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	ELSE_36	CALL_224
0xfd81	            0xeb32	                           jmp 0x400fdf5	      8112	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109
0xfd83	      0xbf00000000	                              mov edi, 0	      8195	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_37	CALL_226
0xfd88	      0xe800000000	                          call 0x400fdcd	      8195	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_37	CALL_226
0xfd8d	          0x4889c2	                            mov rdx, rax	      8195	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_37	CALL_226
0xfd90	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      8195	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_37	CALL_226
0xfd97	          0x4889c6	                            mov rsi, rax	      8195	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_37	CALL_226
0xfd9a	          0x4889d7	                            mov rdi, rdx	      8195	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_37	CALL_226
0xfd9d	      0xe800000000	                          call 0x400fde2	      8195	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_37	CALL_226
0xfda2	    0xc78534feffff	              mov dword [rbp - 0x1cc], 1	      8196	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_37
0xfdac	      0xe9d8000000	                           jmp 0x400fec9	      8197	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_37
0xfdb1	              0x90	                                     nop	      7750	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47
0xfdb2	            0xeb01	                           jmp 0x400fdf5	      7750	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_47
0xfdb4	              0x90	                                     nop	      7845	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_17	IF_60	IF_61	CALL_141
0xfdb5	    0x488b0d000000	            mov rcx, qword [0x0400fdfc] 	      8199	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_227
0xfdbc	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8199	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_227
0xfdc2	          0x4863d0	                         movsxd rdx, eax	      8199	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_227
0xfdc5	          0x4889d0	                            mov rax, rdx	      8199	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_227
0xfdc8	        0x48c1e003	                              shl rax, 3	      8199	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_227
0xfdcc	          0x4801d0	                            add rax, rdx	      8199	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_227
0xfdcf	          0x4801c0	                            add rax, rax	      8199	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_227
0xfdd2	          0x4801d0	                            add rax, rdx	      8199	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_227
0xfdd5	        0x48c1e003	                              shl rax, 3	      8199	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_227
0xfdd9	          0x4801c8	                            add rax, rcx	      8199	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_227
0xfddc	    0xc74010000000	               mov dword [rax + 0x10], 0	      8199	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_227
0xfde3	    0x83bd00feffff	              cmp dword [rbp - 0x200], 0	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120	CALL_228
0xfdea	            0x7434	                            je 0x400fe60	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120	CALL_228
0xfdec	    0x488b0d000000	            mov rcx, qword [0x0400fe33] 	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120	CALL_228
0xfdf3	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120	CALL_228
0xfdf9	          0x4863d0	                         movsxd rdx, eax	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120	CALL_228
0xfdfc	          0x4889d0	                            mov rax, rdx	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120	CALL_228
0xfdff	        0x48c1e003	                              shl rax, 3	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120	CALL_228
0xfe03	          0x4801d0	                            add rax, rdx	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120	CALL_228
0xfe06	          0x4801c0	                            add rax, rax	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120	CALL_228
0xfe09	          0x4801d0	                            add rax, rdx	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120	CALL_228
0xfe0c	        0x48c1e003	                              shl rax, 3	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120	CALL_228
0xfe10	          0x4801c8	                            add rax, rcx	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120	CALL_228
0xfe13	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120	CALL_228
0xfe19	          0x83e008	                              and eax, 8	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120	CALL_228
0xfe1c	            0x85c0	                           test eax, eax	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120	CALL_228
0xfe1e	            0x7531	                           jne 0x400fe91	      8204	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_120	CALL_228
0xfe20	    0x488b0d000000	            mov rcx, qword [0x0400fe67] 	      8205	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_229
0xfe27	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8205	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_229
0xfe2d	          0x4863d0	                         movsxd rdx, eax	      8205	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_229
0xfe30	          0x4889d0	                            mov rax, rdx	      8205	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_229
0xfe33	        0x48c1e003	                              shl rax, 3	      8205	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_229
0xfe37	          0x4801d0	                            add rax, rdx	      8205	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_229
0xfe3a	          0x4801c0	                            add rax, rax	      8205	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_229
0xfe3d	          0x4801d0	                            add rax, rdx	      8205	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_229
0xfe40	        0x48c1e003	                              shl rax, 3	      8205	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_229
0xfe44	          0x4801c8	                            add rax, rcx	      8205	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_229
0xfe47	    0xc78088000000	               mov dword [rax + 0x88], 0	      8205	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_229
0xfe51	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      8210	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_230
0xfe58	          0x4889c7	                            mov rdi, rax	      8210	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_230
0xfe5b	      0xe800000000	                          call 0x400fea0	      8210	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_230
0xfe60	    0x48898568feff	            mov qword [rbp - 0x198], rax	      8210	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_230
0xfe67	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	      7635	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_73
0xfe6e	           0xfb600	                   movzx eax, byte [rax]	      7635	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_73
0xfe71	           0xfb6c0	                           movzx eax, al	      7635	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_73
0xfe74	            0x89c7	                            mov edi, eax	      7635	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_73
0xfe76	      0xe800000000	                          call 0x400febb	      7635	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_73
0xfe7b	            0x85c0	                           test eax, eax	      7635	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_73
0xfe7d	     0xf8421e3ffff	                            je 0x400e1e4	      7635	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_73
0xfe83	            0xeb04	                           jmp 0x400fec9	      7635	syntax.c	FUNCTION_116	IF_30	WHILE_1	CALL_73
0xfe85	              0x90	                                     nop	      7749	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_46
0xfe86	            0xeb01	                           jmp 0x400fec9	      7749	syntax.c	FUNCTION_116	IF_30	WHILE_1	IF_42	IF_46
0xfe88	              0x90	                                     nop	      8176	syntax.c	FUNCTION_116	IF_30	WHILE_1	ELSE_31	ELSE_32	IF_109	IF_117
0xfe89	    0x83bd34feffff	              cmp dword [rbp - 0x1cc], 0	      8216	syntax.c	FUNCTION_116	IF_121
0xfe90	            0x7418	                            je 0x400feea	      8216	syntax.c	FUNCTION_116	IF_121
0xfe92	    0x8b0500000000	            mov eax, dword [0x0400fed8] 	      8216	syntax.c	FUNCTION_116	IF_121
0xfe98	    0x3b8520feffff	            cmp eax, dword [rbp - 0x1e0]	      8216	syntax.c	FUNCTION_116	IF_121
0xfe9e	            0x750a	                           jne 0x400feea	      8216	syntax.c	FUNCTION_116	IF_121
0xfea0	      0xe897330000	                call sym.syn_unadd_group	      8217	syntax.c	FUNCTION_116	CALL_231
0xfea5	      0xe973010000	                           jmp 0x401005d	      8217	syntax.c	FUNCTION_116	CALL_231
0xfeaa	    0x83bd3cfeffff	              cmp dword [rbp - 0x1c4], 0	      8220	syntax.c	FUNCTION_116	ELSE_38	IF_122
0xfeb1	     0xf84bd000000	                            je 0x400ffb4	      8220	syntax.c	FUNCTION_116	ELSE_38	IF_122
0xfeb7	    0x488b0d000000	            mov rcx, qword [0x0400fefe] 	      8222	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_232
0xfebe	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8222	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_232
0xfec4	          0x4863d0	                         movsxd rdx, eax	      8222	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_232
0xfec7	          0x4889d0	                            mov rax, rdx	      8222	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_232
0xfeca	        0x48c1e003	                              shl rax, 3	      8222	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_232
0xfece	          0x4801d0	                            add rax, rdx	      8222	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_232
0xfed1	          0x4801c0	                            add rax, rax	      8222	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_232
0xfed4	          0x4801d0	                            add rax, rdx	      8222	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_232
0xfed7	        0x48c1e003	                              shl rax, 3	      8222	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_232
0xfedb	          0x4801c8	                            add rax, rcx	      8222	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_232
0xfede	    0xc74028000000	               mov dword [rax + 0x28], 0	      8222	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_232
0xfee5	    0x488b0d000000	            mov rcx, qword [0x0400ff2c] 	      8223	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_233
0xfeec	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8223	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_233
0xfef2	          0x4863d0	                         movsxd rdx, eax	      8223	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_233
0xfef5	          0x4889d0	                            mov rax, rdx	      8223	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_233
0xfef8	        0x48c1e003	                              shl rax, 3	      8223	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_233
0xfefc	          0x4801d0	                            add rax, rdx	      8223	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_233
0xfeff	          0x4801c0	                            add rax, rax	      8223	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_233
0xff02	          0x4801d0	                            add rax, rdx	      8223	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_233
0xff05	        0x48c1e003	                              shl rax, 3	      8223	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_233
0xff09	          0x4801c8	                            add rax, rcx	      8223	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_233
0xff0c	    0xc7403c000000	               mov dword [rax + 0x3c], 0	      8223	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_233
0xff13	    0x488b0d000000	            mov rcx, qword [0x0400ff5a] 	      8225	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_234
0xff1a	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8225	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_234
0xff20	          0x4863d0	                         movsxd rdx, eax	      8225	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_234
0xff23	          0x4889d0	                            mov rax, rdx	      8225	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_234
0xff26	        0x48c1e003	                              shl rax, 3	      8225	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_234
0xff2a	          0x4801d0	                            add rax, rdx	      8225	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_234
0xff2d	          0x4801c0	                            add rax, rax	      8225	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_234
0xff30	          0x4801d0	                            add rax, rdx	      8225	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_234
0xff33	        0x48c1e003	                              shl rax, 3	      8225	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_234
0xff37	          0x4801c8	                            add rax, rcx	      8225	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_234
0xff3a	    0xc74068000000	               mov dword [rax + 0x68], 0	      8225	syntax.c	FUNCTION_116	ELSE_38	IF_122	CALL_234
0xff41	    0x8b0500000000	            mov eax, dword [0x0400ff87] 	      8232	syntax.c	FUNCTION_116	ELSE_38	IF_122	IF_123
0xff47	            0x85c0	                           test eax, eax	      8232	syntax.c	FUNCTION_116	ELSE_38	IF_122	IF_123
0xff49	            0x750e	                           jne 0x400ff99	      8232	syntax.c	FUNCTION_116	ELSE_38	IF_122	IF_123
0xff4b	    0x8b0500000000	            mov eax, dword [0x0400ff91] 	      8232	syntax.c	FUNCTION_116	ELSE_38	IF_122	IF_123
0xff51	            0x85c0	                           test eax, eax	      8232	syntax.c	FUNCTION_116	ELSE_38	IF_122	IF_123
0xff53	     0xf8490000000	                            je 0x4010029	      8232	syntax.c	FUNCTION_116	ELSE_38	IF_122	IF_123
0xff59	      0xe800000000	                          call 0x400ff9e	      8234	syntax.c	FUNCTION_116	ELSE_38	IF_122	IF_123	CALL_235
0xff5e	    0xc78544feffff	              mov dword [rbp - 0x1bc], 1	      8235	syntax.c	FUNCTION_116	ELSE_38	IF_122	IF_123
0xff68	      0xbf28000000	                           mov edi, 0x28	      8236	syntax.c	FUNCTION_116	ELSE_38	IF_122	IF_123	CALL_236
0xff6d	      0xe800000000	                          call 0x400ffb2	      8236	syntax.c	FUNCTION_116	ELSE_38	IF_122	IF_123	CALL_236
0xff72	            0xeb75	                           jmp 0x4010029	      8236	syntax.c	FUNCTION_116	ELSE_38	IF_122	IF_123	CALL_236
0xff74	    0x83bd40feffff	              cmp dword [rbp - 0x1c0], 0	      8241	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0xff7b	            0x745f	                            je 0x401001c	      8241	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0xff7d	    0x488b0d000000	            mov rcx, qword [0x0400ffc4] 	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0xff84	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0xff8a	          0x4863d0	                         movsxd rdx, eax	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0xff8d	          0x4889d0	                            mov rax, rdx	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0xff90	        0x48c1e003	                              shl rax, 3	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0xff94	          0x4801d0	                            add rax, rdx	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0xff97	          0x4801c0	                            add rax, rax	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0xff9a	          0x4801d0	                            add rax, rdx	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0xff9d	        0x48c1e003	                              shl rax, 3	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0xffa1	          0x4801c8	                            add rax, rcx	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0xffa4	          0x8b4838	            mov ecx, dword [rax + 0x38] 	      8242	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124	CALL_237
0xffa7	    0x488b35000000	            mov rsi, qword [0x0400ffee] 	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0xffae	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0xffb4	          0x4863d0	                         movsxd rdx, eax	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0xffb7	          0x4889d0	                            mov rax, rdx	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0xffba	        0x48c1e003	                              shl rax, 3	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0xffbe	          0x4801d0	                            add rax, rdx	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0xffc1	          0x4801c0	                            add rax, rax	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0xffc4	          0x4801d0	                            add rax, rdx	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0xffc7	        0x48c1e003	                              shl rax, 3	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0xffcb	          0x4801f0	                            add rax, rsi	      8243	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124
0xffce	          0x8b4034	            mov eax, dword [rax + 0x34] 	      8242	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124	CALL_237
0xffd1	            0x89ce	                            mov esi, ecx	      8242	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124	CALL_237
0xffd3	            0x89c7	                            mov edi, eax	      8242	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124	CALL_237
0xffd5	      0xe800000000	                          call 0x401001a	      8242	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124	CALL_237
0xffda	            0xeb0d	                           jmp 0x4010029	      8242	syntax.c	FUNCTION_116	ELSE_38	ELSE_39	IF_124	CALL_237
0xffdc	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8267	syntax.c	FUNCTION_116	ELSE_38	CALL_243
0xffe2	            0x89c7	                            mov edi, eax	      8267	syntax.c	FUNCTION_116	ELSE_38	CALL_243
0xffe4	      0xe8912a0000	                    call sym.set_hl_attr	      8267	syntax.c	FUNCTION_116	ELSE_38	CALL_243
0xffe9	    0x488b0d000000	            mov rcx, qword [0x04010030] 	      8269	syntax.c	FUNCTION_116	ELSE_38	CALL_244
0xfff0	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8269	syntax.c	FUNCTION_116	ELSE_38	CALL_244
0xfff6	          0x4863d0	                         movsxd rdx, eax	      8269	syntax.c	FUNCTION_116	ELSE_38	CALL_244
0xfff9	          0x4889d0	                            mov rax, rdx	      8269	syntax.c	FUNCTION_116	ELSE_38	CALL_244
0xfffc	        0x48c1e003	                              shl rax, 3	      8269	syntax.c	FUNCTION_116	ELSE_38	CALL_244
0x10000	          0x4801d0	                            add rax, rdx	      8269	syntax.c	FUNCTION_116	ELSE_38	CALL_244
0x10003	          0x4801c0	                            add rax, rax	      8269	syntax.c	FUNCTION_116	ELSE_38	CALL_244
0x10006	          0x4801d0	                            add rax, rdx	      8269	syntax.c	FUNCTION_116	ELSE_38	CALL_244
0x10009	        0x48c1e003	                              shl rax, 3	      8269	syntax.c	FUNCTION_116	ELSE_38	CALL_244
0x1000d	        0x488d1401	                    lea rdx, [rcx + rax]	      8269	syntax.c	FUNCTION_116	ELSE_38	CALL_244
0x10011	    0x8b0500000000	            mov eax, dword [0x04010057] 	      8269	syntax.c	FUNCTION_116	ELSE_38	CALL_244
0x10017	    0x898290000000	             mov dword [rdx + 0x90], eax	      8269	syntax.c	FUNCTION_116	ELSE_38	CALL_244
0x1001d	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      8273	syntax.c	FUNCTION_116	CALL_245
0x10024	          0x4889c7	                            mov rdi, rax	      8273	syntax.c	FUNCTION_116	CALL_245
0x10027	      0xe800000000	                          call 0x401006c	      8273	syntax.c	FUNCTION_116	CALL_245
0x1002c	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      8274	syntax.c	FUNCTION_116	CALL_246
0x10033	          0x4889c7	                            mov rdi, rax	      8274	syntax.c	FUNCTION_116	CALL_246
0x10036	      0xe800000000	                          call 0x401007b	      8274	syntax.c	FUNCTION_116	CALL_246
0x1003b	    0x83bd24feffff	              cmp dword [rbp - 0x1dc], 0	      8278	syntax.c	FUNCTION_116	IF_131
0x10042	            0x7542	                           jne 0x40100c6	      8278	syntax.c	FUNCTION_116	IF_131
0x10044	    0x488b0d000000	            mov rcx, qword [0x0401008b] 	      8279	syntax.c	FUNCTION_116	IF_131	CALL_248
0x1004b	    0x8b8520feffff	            mov eax, dword [rbp - 0x1e0]	      8279	syntax.c	FUNCTION_116	IF_131	CALL_248
0x10051	          0x4863d0	                         movsxd rdx, eax	      8279	syntax.c	FUNCTION_116	IF_131	CALL_248
0x10054	          0x4889d0	                            mov rax, rdx	      8279	syntax.c	FUNCTION_116	IF_131	CALL_248
0x10057	        0x48c1e003	                              shl rax, 3	      8279	syntax.c	FUNCTION_116	IF_131	CALL_248
0x1005b	          0x4801d0	                            add rax, rdx	      8279	syntax.c	FUNCTION_116	IF_131	CALL_248
0x1005e	          0x4801c0	                            add rax, rax	      8279	syntax.c	FUNCTION_116	IF_131	CALL_248
0x10061	          0x4801d0	                            add rax, rdx	      8279	syntax.c	FUNCTION_116	IF_131	CALL_248
0x10064	        0x48c1e003	                              shl rax, 3	      8279	syntax.c	FUNCTION_116	IF_131	CALL_248
0x10068	          0x4801c1	                            add rcx, rax	      8279	syntax.c	FUNCTION_116	IF_131	CALL_248
0x1006b	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	      8279	syntax.c	FUNCTION_116	IF_131	CALL_248
0x10072	      0xba98000000	                           mov edx, 0x98	      8279	syntax.c	FUNCTION_116	IF_131	CALL_248
0x10077	          0x4889c6	                            mov rsi, rax	      8279	syntax.c	FUNCTION_116	IF_131	CALL_248
0x1007a	          0x4889cf	                            mov rdi, rcx	      8279	syntax.c	FUNCTION_116	IF_131	CALL_248
0x1007d	      0xe800000000	                          call 0x40100c2	      8279	syntax.c	FUNCTION_116	IF_131	CALL_248
0x10082	            0x85c0	                           test eax, eax	      8279	syntax.c	FUNCTION_116	IF_131	CALL_248
0x10084	            0x7433	                            je 0x40100f9	      8279	syntax.c	FUNCTION_116	IF_131	CALL_248
0x10086	    0x83bd44feffff	              cmp dword [rbp - 0x1bc], 0	      8281	syntax.c	FUNCTION_116	IF_131
0x1008d	            0x752a	                           jne 0x40100f9	      8281	syntax.c	FUNCTION_116	IF_131
0x1008f	    0x8b0500000000	            mov eax, dword [0x040100d5] 	      8288	syntax.c	FUNCTION_116	IF_131	IF_132
0x10095	            0x85c0	                           test eax, eax	      8288	syntax.c	FUNCTION_116	IF_131	IF_132
0x10097	            0x750a	                           jne 0x40100e3	      8288	syntax.c	FUNCTION_116	IF_131	IF_132
0x10099	      0xbf28000000	                           mov edi, 0x28	      8289	syntax.c	FUNCTION_116	IF_131	CALL_249
0x1009e	      0xe800000000	                          call 0x40100e3	      8289	syntax.c	FUNCTION_116	IF_131	CALL_249
0x100a3	    0xc70500000000	               mov dword [0x040100ed], 1	      8290	syntax.c	FUNCTION_116	IF_131
0x100ad	            0xeb0a	                           jmp 0x40100f9	      8290	syntax.c	FUNCTION_116	IF_131
0x100af	              0x90	                                     nop	      7409	syntax.c	FUNCTION_116	IF_1
0x100b0	            0xeb07	                           jmp 0x40100f9	      7409	syntax.c	FUNCTION_116	IF_1
0x100b2	              0x90	                                     nop	      7517	syntax.c	FUNCTION_116	IF_7
0x100b3	            0xeb04	                           jmp 0x40100f9	      7517	syntax.c	FUNCTION_116	IF_7
0x100b5	              0x90	                                     nop	      7601	syntax.c	FUNCTION_116	IF_21
0x100b6	            0xeb01	                           jmp 0x40100f9	      7601	syntax.c	FUNCTION_116	IF_21
0x100b8	              0x90	                                     nop	      7606	syntax.c	FUNCTION_116	IF_22
0x100b9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8292	syntax.c	FUNCTION_116
0x100bd	    0x644833042528	                xor rax, qword fs:[0x28]	      8292	syntax.c	FUNCTION_116
0x100c6	            0x7405	                            je 0x401010d	      8292	syntax.c	FUNCTION_116
0x100c8	      0xe800000000	                          call 0x401010d	      8292	syntax.c	FUNCTION_116
0x100cd	    0x4881c4f80100	                          add rsp, 0x1f8	      8292	syntax.c	FUNCTION_116
0x100d4	              0x5b	                                 pop rbx	      8292	syntax.c	FUNCTION_116
0x100d5	              0x5d	                                 pop rbp	      8292	syntax.c	FUNCTION_116
0x100d6	              0xc3	                                     ret	      8292	syntax.c	FUNCTION_116
set_context_in_highlight_cmd	FOR,0:DO,0:IF,8:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,11	119
0x14621	              0x55	                                push rbp	     10228	syntax.c	FUNCTION_164
0x14622	          0x4889e5	                            mov rbp, rsp	     10228	syntax.c	FUNCTION_164
0x14625	        0x4883ec20	                           sub rsp, 0x20	     10228	syntax.c	FUNCTION_164
0x14629	        0x48897de8	             mov qword [rbp - 0x18], rdi	     10228	syntax.c	FUNCTION_164
0x1462d	        0x488975e0	             mov qword [rbp - 0x20], rsi	     10228	syntax.c	FUNCTION_164
0x14631	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10232	syntax.c	FUNCTION_164
0x14635	    0xc7000d000000	                    mov dword [rax], 0xd	     10232	syntax.c	FUNCTION_164
0x1463b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10233	syntax.c	FUNCTION_164
0x1463f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10233	syntax.c	FUNCTION_164
0x14643	        0x48895008	                mov qword [rax + 8], rdx	     10233	syntax.c	FUNCTION_164
0x14647	    0xc70500000000	               mov dword [0x04014691], 2	     10234	syntax.c	FUNCTION_164
0x14651	    0xc70500000000	               mov dword [0x0401469b], 1	     10235	syntax.c	FUNCTION_164
0x1465b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10238	syntax.c	FUNCTION_164	IF_1
0x1465f	           0xfb600	                   movzx eax, byte [rax]	     10238	syntax.c	FUNCTION_164	IF_1
0x14662	            0x84c0	                             test al, al	     10238	syntax.c	FUNCTION_164	IF_1
0x14664	     0xf8475010000	                            je 0x401481f	     10238	syntax.c	FUNCTION_164	IF_1
0x1466a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10240	syntax.c	FUNCTION_164	IF_1	CALL_1
0x1466e	          0x4889c7	                            mov rdi, rax	     10240	syntax.c	FUNCTION_164	IF_1	CALL_1
0x14671	      0xe800000000	                          call 0x40146b6	     10240	syntax.c	FUNCTION_164	IF_1	CALL_1
0x14676	        0x488945f8	                mov qword [rbp - 8], rax	     10240	syntax.c	FUNCTION_164	IF_1	CALL_1
0x1467a	        0x488b45f8	                mov rax, qword [rbp - 8]	     10241	syntax.c	FUNCTION_164	IF_1	IF_2
0x1467e	           0xfb600	                   movzx eax, byte [rax]	     10241	syntax.c	FUNCTION_164	IF_1	IF_2
0x14681	            0x84c0	                             test al, al	     10241	syntax.c	FUNCTION_164	IF_1	IF_2
0x14683	     0xf8456010000	                            je 0x401481f	     10241	syntax.c	FUNCTION_164	IF_1	IF_2
0x14689	    0xc70500000000	               mov dword [0x040146d3], 0	     10243	syntax.c	FUNCTION_164	IF_1	IF_2
0x14693	        0x488b55f8	                mov rdx, qword [rbp - 8]	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x14697	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x1469b	          0x4829c2	                            sub rdx, rax	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x1469e	          0x4889d0	                            mov rax, rdx	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x146a1	          0x4889c2	                            mov rdx, rax	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x146a4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x146a8	          0x4889c6	                            mov rsi, rax	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x146ab	      0xbf00000000	                              mov edi, 0	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x146b0	      0xe800000000	                          call 0x40146f5	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x146b5	            0x85c0	                           test eax, eax	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x146b7	            0x752c	                           jne 0x4014725	     10244	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_2
0x146b9	        0x488b45f8	                mov rax, qword [rbp - 8]	     10246	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_3
0x146bd	          0x4889c7	                            mov rdi, rax	     10246	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_3
0x146c0	      0xe800000000	                          call 0x4014705	     10246	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_3
0x146c5	        0x488945e0	             mov qword [rbp - 0x20], rax	     10246	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_3
0x146c9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10247	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3
0x146cd	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	     10247	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3
0x146d1	        0x48895008	                mov qword [rax + 8], rdx	     10247	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3
0x146d5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10248	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_4
0x146d9	          0x4889c7	                            mov rdi, rax	     10248	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_4
0x146dc	      0xe800000000	                          call 0x4014721	     10248	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_4
0x146e1	        0x488945f8	                mov qword [rbp - 8], rax	     10248	syntax.c	FUNCTION_164	IF_1	IF_2	IF_3	CALL_4
0x146e5	        0x488b45f8	                mov rax, qword [rbp - 8]	     10250	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4
0x146e9	           0xfb600	                   movzx eax, byte [rax]	     10250	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4
0x146ec	            0x84c0	                             test al, al	     10250	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4
0x146ee	     0xf84eb000000	                            je 0x401481f	     10250	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4
0x146f4	    0xc70500000000	               mov dword [0x0401473e], 0	     10252	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4
0x146fe	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x14702	        0x4883c001	                              add rax, 1	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x14706	           0xfb600	                   movzx eax, byte [rax]	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x14709	            0x3c69	                            cmp al, 0x69	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x1470b	            0x7510	                           jne 0x401475d	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x1470d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x14711	           0xfb600	                   movzx eax, byte [rax]	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x14714	            0x3c4e	                            cmp al, 0x4e	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x14716	            0x7505	                           jne 0x401475d	     10253	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_5
0x14718	      0xe8c5000000	                 call sym.highlight_list	     10254	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	CALL_5
0x1471d	        0x488b55f8	                mov rdx, qword [rbp - 8]	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x14721	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x14725	          0x4829c2	                            sub rdx, rax	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x14728	          0x4889d0	                            mov rax, rdx	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x1472b	          0x4889c2	                            mov rdx, rax	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x1472e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x14732	          0x4889c6	                            mov rsi, rax	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x14735	      0xbf00000000	                              mov edi, 0	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x1473a	      0xe800000000	                          call 0x401477f	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x1473f	            0x85c0	                           test eax, eax	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x14741	            0x7426	                            je 0x40147a9	     10255	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_6
0x14743	        0x488b55f8	                mov rdx, qword [rbp - 8]	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x14747	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x1474b	          0x4829c2	                            sub rdx, rax	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x1474e	          0x4889d0	                            mov rax, rdx	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x14751	          0x4889c2	                            mov rdx, rax	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x14754	        0x488b45e0	             mov rax, qword [rbp - 0x20]	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x14758	          0x4889c6	                            mov rsi, rax	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x1475b	      0xbf00000000	                              mov edi, 0	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x14760	      0xe800000000	                          call 0x40147a5	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x14765	            0x85c0	                           test eax, eax	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x14767	            0x7561	                           jne 0x401480a	     10256	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_7
0x14769	        0x488b45f8	                mov rax, qword [rbp - 8]	     10258	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_8
0x1476d	          0x4889c7	                            mov rdi, rax	     10258	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_8
0x14770	      0xe800000000	                          call 0x40147b5	     10258	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_8
0x14775	          0x4889c2	                            mov rdx, rax	     10258	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_8
0x14778	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10258	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_8
0x1477c	        0x48895008	                mov qword [rax + 8], rdx	     10258	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_8
0x14780	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10259	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_9
0x14784	        0x488b4008	                mov rax, qword [rax + 8]	     10259	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_9
0x14788	          0x4889c7	                            mov rdi, rax	     10259	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_9
0x1478b	      0xe800000000	                          call 0x40147d0	     10259	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_9
0x14790	        0x488945f8	                mov qword [rbp - 8], rax	     10259	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	CALL_9
0x14794	        0x488b45f8	                mov rax, qword [rbp - 8]	     10260	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7
0x14798	           0xfb600	                   movzx eax, byte [rax]	     10260	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7
0x1479b	            0x84c0	                             test al, al	     10260	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7
0x1479d	            0x742b	                            je 0x401480a	     10260	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7
0x1479f	        0x488b45f8	                mov rax, qword [rbp - 8]	     10262	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_10
0x147a3	          0x4889c7	                            mov rdi, rax	     10262	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_10
0x147a6	      0xe800000000	                          call 0x40147eb	     10262	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_10
0x147ab	          0x4889c2	                            mov rdx, rax	     10262	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_10
0x147ae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10262	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_10
0x147b2	        0x48895008	                mov qword [rax + 8], rdx	     10262	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_10
0x147b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10263	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_11
0x147ba	        0x488b4008	                mov rax, qword [rax + 8]	     10263	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_11
0x147be	          0x4889c7	                            mov rdi, rax	     10263	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_11
0x147c1	      0xe800000000	                          call 0x4014806	     10263	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_11
0x147c6	        0x488945f8	                mov qword [rbp - 8], rax	     10263	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_6	IF_7	CALL_11
0x147ca	        0x488b45f8	                mov rax, qword [rbp - 8]	     10266	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_8
0x147ce	           0xfb600	                   movzx eax, byte [rax]	     10266	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_8
0x147d1	            0x84c0	                             test al, al	     10266	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_8
0x147d3	            0x740a	                            je 0x401481f	     10266	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_8
0x147d5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10267	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_8
0x147d9	    0xc70000000000	                      mov dword [rax], 0	     10267	syntax.c	FUNCTION_164	IF_1	IF_2	IF_4	IF_8
0x147df	              0x90	                                     nop	     10271	syntax.c	FUNCTION_164
0x147e0	              0xc9	                                   leave	     10271	syntax.c	FUNCTION_164
0x147e1	              0xc3	                                     ret	     10271	syntax.c	FUNCTION_164
highlight_color	FOR,0:DO,0:IF,17:SWITCH,0:functions,0:ELSE,6:WHILE,0:CALL,22	419
0x122de	              0x55	                                push rbp	      9362	syntax.c	FUNCTION_144
0x122df	          0x4889e5	                            mov rbp, rsp	      9362	syntax.c	FUNCTION_144
0x122e2	        0x4883ec30	                           sub rsp, 0x30	      9362	syntax.c	FUNCTION_144
0x122e6	          0x897ddc	             mov dword [rbp - 0x24], edi	      9362	syntax.c	FUNCTION_144
0x122e9	        0x488975d0	             mov qword [rbp - 0x30], rsi	      9362	syntax.c	FUNCTION_144
0x122ed	          0x8955d8	             mov dword [rbp - 0x28], edx	      9362	syntax.c	FUNCTION_144
0x122f0	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      9365	syntax.c	FUNCTION_144
0x122f7	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      9366	syntax.c	FUNCTION_144
0x122fe	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      9367	syntax.c	FUNCTION_144
0x12305	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      9369	syntax.c	FUNCTION_144	IF_1
0x12309	            0x7e0b	                           jle 0x4012356	      9369	syntax.c	FUNCTION_144	IF_1
0x1230b	    0x8b0500000000	            mov eax, dword [0x04012351] 	      9369	syntax.c	FUNCTION_144	IF_1
0x12311	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      9369	syntax.c	FUNCTION_144	IF_1
0x12314	            0x7d0a	                           jge 0x4012360	      9369	syntax.c	FUNCTION_144	IF_1
0x12316	      0xb800000000	                              mov eax, 0	      9370	syntax.c	FUNCTION_144	IF_1
0x1231b	      0xe95b050000	                           jmp 0x40128bb	      9370	syntax.c	FUNCTION_144	IF_1
0x12320	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x12324	           0xfb600	                   movzx eax, byte [rax]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x12327	            0x3c40	                            cmp al, 0x40	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x12329	            0x760b	                           jbe 0x4012376	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x1232b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x1232f	           0xfb600	                   movzx eax, byte [rax]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x12332	            0x3c5a	                            cmp al, 0x5a	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x12334	            0x760d	                           jbe 0x4012383	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x12336	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x1233a	           0xfb600	                   movzx eax, byte [rax]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x1233d	            0x3c66	                            cmp al, 0x66	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x1233f	            0x7557	                           jne 0x40123d8	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x12341	            0xeb0b	                           jmp 0x401238e	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x12343	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x12347	           0xfb600	                   movzx eax, byte [rax]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x1234a	            0x3c46	                            cmp al, 0x46	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x1234c	            0x754a	                           jne 0x40123d8	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x1234e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x12352	        0x4883c001	                              add rax, 1	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x12356	           0xfb600	                   movzx eax, byte [rax]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x12359	            0x3c40	                            cmp al, 0x40	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x1235b	            0x760f	                           jbe 0x40123ac	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x1235d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x12361	        0x4883c001	                              add rax, 1	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x12365	           0xfb600	                   movzx eax, byte [rax]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x12368	            0x3c5a	                            cmp al, 0x5a	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x1236a	            0x7611	                           jbe 0x40123bd	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x1236c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x12370	        0x4883c001	                              add rax, 1	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x12374	           0xfb600	                   movzx eax, byte [rax]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x12377	            0x3c67	                            cmp al, 0x67	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x12379	            0x751d	                           jne 0x40123d8	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x1237b	            0xeb0f	                           jmp 0x40123cc	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x1237d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x12381	        0x4883c001	                              add rax, 1	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x12385	           0xfb600	                   movzx eax, byte [rax]	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x12388	            0x3c47	                            cmp al, 0x47	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x1238a	            0x750c	                           jne 0x40123d8	      9372	syntax.c	FUNCTION_144	IF_2	CALL_2
0x1238c	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	      9373	syntax.c	FUNCTION_144	IF_2
0x12393	      0xe9ef010000	                           jmp 0x40125c7	      9373	syntax.c	FUNCTION_144	IF_2
0x12398	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x1239c	           0xfb600	                   movzx eax, byte [rax]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x1239f	            0x3c40	                            cmp al, 0x40	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x123a1	            0x760b	                           jbe 0x40123ee	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x123a3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x123a7	           0xfb600	                   movzx eax, byte [rax]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x123aa	            0x3c5a	                            cmp al, 0x5a	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x123ac	            0x7611	                           jbe 0x40123ff	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x123ae	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x123b2	           0xfb600	                   movzx eax, byte [rax]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x123b5	            0x3c66	                            cmp al, 0x66	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x123b7	     0xf85df000000	                           jne 0x40124dc	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x123bd	            0xeb0f	                           jmp 0x401240e	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x123bf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x123c3	           0xfb600	                   movzx eax, byte [rax]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x123c6	            0x3c46	                            cmp al, 0x46	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x123c8	     0xf85ce000000	                           jne 0x40124dc	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x123ce	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x123d2	        0x4883c001	                              add rax, 1	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x123d6	           0xfb600	                   movzx eax, byte [rax]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x123d9	            0x3c40	                            cmp al, 0x40	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x123db	            0x760f	                           jbe 0x401242c	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x123dd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x123e1	        0x4883c001	                              add rax, 1	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x123e5	           0xfb600	                   movzx eax, byte [rax]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x123e8	            0x3c5a	                            cmp al, 0x5a	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x123ea	            0x7615	                           jbe 0x4012441	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x123ec	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x123f0	        0x4883c001	                              add rax, 1	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x123f4	           0xfb600	                   movzx eax, byte [rax]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x123f7	            0x3c6f	                            cmp al, 0x6f	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x123f9	     0xf859d000000	                           jne 0x40124dc	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x123ff	            0xeb13	                           jmp 0x4012454	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x12401	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x12405	        0x4883c001	                              add rax, 1	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x12409	           0xfb600	                   movzx eax, byte [rax]	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x1240c	            0x3c4f	                            cmp al, 0x4f	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x1240e	     0xf8588000000	                           jne 0x40124dc	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x12414	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x12418	        0x4883c002	                              add rax, 2	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x1241c	           0xfb600	                   movzx eax, byte [rax]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x1241f	            0x3c40	                            cmp al, 0x40	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x12421	            0x760f	                           jbe 0x4012472	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x12423	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x12427	        0x4883c002	                              add rax, 2	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x1242b	           0xfb600	                   movzx eax, byte [rax]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x1242e	            0x3c5a	                            cmp al, 0x5a	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x12430	            0x7611	                           jbe 0x4012483	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x12432	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x12436	        0x4883c002	                              add rax, 2	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x1243a	           0xfb600	                   movzx eax, byte [rax]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x1243d	            0x3c6e	                            cmp al, 0x6e	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x1243f	            0x755b	                           jne 0x40124dc	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x12441	            0xeb0f	                           jmp 0x4012492	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x12443	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x12447	        0x4883c002	                              add rax, 2	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x1244b	           0xfb600	                   movzx eax, byte [rax]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x1244e	            0x3c4e	                            cmp al, 0x4e	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x12450	            0x754a	                           jne 0x40124dc	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x12452	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x12456	        0x4883c003	                              add rax, 3	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x1245a	           0xfb600	                   movzx eax, byte [rax]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x1245d	            0x3c40	                            cmp al, 0x40	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x1245f	            0x760f	                           jbe 0x40124b0	      9374	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_4
0x12461	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x12465	        0x4883c003	                              add rax, 3	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x12469	           0xfb600	                   movzx eax, byte [rax]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x1246c	            0x3c5a	                            cmp al, 0x5a	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x1246e	            0x7611	                           jbe 0x40124c1	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x12470	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x12474	        0x4883c003	                              add rax, 3	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x12478	           0xfb600	                   movzx eax, byte [rax]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x1247b	            0x3c74	                            cmp al, 0x74	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x1247d	            0x751d	                           jne 0x40124dc	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x1247f	            0xeb0f	                           jmp 0x40124d0	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x12481	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x12485	        0x4883c003	                              add rax, 3	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x12489	           0xfb600	                   movzx eax, byte [rax]	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x1248c	            0x3c54	                            cmp al, 0x54	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x1248e	            0x750c	                           jne 0x40124dc	      9375	syntax.c	FUNCTION_144	ELSE_1	IF_3	CALL_6
0x12490	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      9376	syntax.c	FUNCTION_144	ELSE_1	IF_3
0x12497	      0xe9eb000000	                           jmp 0x40125c7	      9376	syntax.c	FUNCTION_144	ELSE_1	IF_3
0x1249c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x124a0	           0xfb600	                   movzx eax, byte [rax]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x124a3	            0x3c40	                            cmp al, 0x40	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x124a5	            0x760b	                           jbe 0x40124f2	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x124a7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x124ab	           0xfb600	                   movzx eax, byte [rax]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x124ae	            0x3c5a	                            cmp al, 0x5a	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x124b0	            0x760d	                           jbe 0x40124ff	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x124b2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x124b6	           0xfb600	                   movzx eax, byte [rax]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x124b9	            0x3c73	                            cmp al, 0x73	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x124bb	            0x7554	                           jne 0x4012551	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x124bd	            0xeb0b	                           jmp 0x401250a	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x124bf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x124c3	           0xfb600	                   movzx eax, byte [rax]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x124c6	            0x3c53	                            cmp al, 0x53	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x124c8	            0x7547	                           jne 0x4012551	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x124ca	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x124ce	        0x4883c001	                              add rax, 1	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x124d2	           0xfb600	                   movzx eax, byte [rax]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x124d5	            0x3c40	                            cmp al, 0x40	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x124d7	            0x760f	                           jbe 0x4012528	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x124d9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x124dd	        0x4883c001	                              add rax, 1	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x124e1	           0xfb600	                   movzx eax, byte [rax]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x124e4	            0x3c5a	                            cmp al, 0x5a	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x124e6	            0x7611	                           jbe 0x4012539	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x124e8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x124ec	        0x4883c001	                              add rax, 1	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x124f0	           0xfb600	                   movzx eax, byte [rax]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x124f3	            0x3c70	                            cmp al, 0x70	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x124f5	            0x751a	                           jne 0x4012551	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x124f7	            0xeb0f	                           jmp 0x4012548	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x124f9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x124fd	        0x4883c001	                              add rax, 1	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x12501	           0xfb600	                   movzx eax, byte [rax]	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x12504	            0x3c50	                            cmp al, 0x50	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x12506	            0x7509	                           jne 0x4012551	      9377	syntax.c	FUNCTION_144	ELSE_2	IF_4	CALL_8
0x12508	    0xc745e8010000	               mov dword [rbp - 0x18], 1	      9378	syntax.c	FUNCTION_144	ELSE_2	IF_4
0x1250f	            0xeb76	                           jmp 0x40125c7	      9378	syntax.c	FUNCTION_144	ELSE_2	IF_4
0x12511	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x12515	           0xfb600	                   movzx eax, byte [rax]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x12518	            0x3c40	                            cmp al, 0x40	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x1251a	            0x760b	                           jbe 0x4012567	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x1251c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x12520	           0xfb600	                   movzx eax, byte [rax]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x12523	            0x3c5a	                            cmp al, 0x5a	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x12525	            0x760d	                           jbe 0x4012574	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x12527	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x1252b	           0xfb600	                   movzx eax, byte [rax]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x1252e	            0x3c62	                            cmp al, 0x62	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x12530	            0x754b	                           jne 0x40125bd	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x12532	            0xeb0b	                           jmp 0x401257f	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x12534	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x12538	           0xfb600	                   movzx eax, byte [rax]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x1253b	            0x3c42	                            cmp al, 0x42	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x1253d	            0x753e	                           jne 0x40125bd	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x1253f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x12543	        0x4883c001	                              add rax, 1	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x12547	           0xfb600	                   movzx eax, byte [rax]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x1254a	            0x3c40	                            cmp al, 0x40	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x1254c	            0x760f	                           jbe 0x401259d	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x1254e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x12552	        0x4883c001	                              add rax, 1	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x12556	           0xfb600	                   movzx eax, byte [rax]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x12559	            0x3c5a	                            cmp al, 0x5a	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x1255b	            0x7611	                           jbe 0x40125ae	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x1255d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x12561	        0x4883c001	                              add rax, 1	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x12565	           0xfb600	                   movzx eax, byte [rax]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x12568	            0x3c67	                            cmp al, 0x67	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x1256a	            0x7511	                           jne 0x40125bd	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x1256c	            0xeb19	                           jmp 0x40125c7	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x1256e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x12572	        0x4883c001	                              add rax, 1	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x12576	           0xfb600	                   movzx eax, byte [rax]	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x12579	            0x3c47	                            cmp al, 0x47	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x1257b	            0x740a	                            je 0x40125c7	      9379	syntax.c	FUNCTION_144	ELSE_3	IF_5	CALL_10
0x1257d	      0xb800000000	                              mov eax, 0	      9380	syntax.c	FUNCTION_144	ELSE_3	IF_5
0x12582	      0xe9f4020000	                           jmp 0x40128bb	      9380	syntax.c	FUNCTION_144	ELSE_3	IF_5
0x12587	        0x837dd867	           cmp dword [rbp - 0x28], 0x67 	      9381	syntax.c	FUNCTION_144	IF_6
0x1258b	     0xf852a020000	                           jne 0x40127fb	      9381	syntax.c	FUNCTION_144	IF_6
0x12591	        0x837dec00	               cmp dword [rbp - 0x14], 0	      9386	syntax.c	FUNCTION_144	IF_6	IF_7
0x12595	            0x7433	                            je 0x401260a	      9386	syntax.c	FUNCTION_144	IF_6	IF_7
0x12597	    0x488b0d000000	            mov rcx, qword [0x040125de] 	      9387	syntax.c	FUNCTION_144	IF_6	CALL_11
0x1259e	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9387	syntax.c	FUNCTION_144	IF_6	CALL_11
0x125a1	          0x4863d0	                         movsxd rdx, eax	      9387	syntax.c	FUNCTION_144	IF_6	CALL_11
0x125a4	          0x4889d0	                            mov rax, rdx	      9387	syntax.c	FUNCTION_144	IF_6	CALL_11
0x125a7	        0x48c1e003	                              shl rax, 3	      9387	syntax.c	FUNCTION_144	IF_6	CALL_11
0x125ab	          0x4801d0	                            add rax, rdx	      9387	syntax.c	FUNCTION_144	IF_6	CALL_11
0x125ae	          0x4801c0	                            add rax, rax	      9387	syntax.c	FUNCTION_144	IF_6	CALL_11
0x125b1	          0x4801d0	                            add rax, rdx	      9387	syntax.c	FUNCTION_144	IF_6	CALL_11
0x125b4	        0x48c1e003	                              shl rax, 3	      9387	syntax.c	FUNCTION_144	IF_6	CALL_11
0x125b8	    0x482d98000000	                           sub rax, 0x98	      9387	syntax.c	FUNCTION_144	IF_6	CALL_11
0x125be	          0x4801c8	                            add rax, rcx	      9387	syntax.c	FUNCTION_144	IF_6	CALL_11
0x125c1	        0x488b4060	            mov rax, qword [rax + 0x60] 	      9387	syntax.c	FUNCTION_144	IF_6	CALL_11
0x125c5	      0xe9b1020000	                           jmp 0x40128bb	      9387	syntax.c	FUNCTION_144	IF_6	CALL_11
0x125ca	    0x8b0500000000	            mov eax, dword [0x04012610] 	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x125d0	            0x85c0	                           test eax, eax	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x125d2	            0x750e	                           jne 0x4012622	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x125d4	    0x8b0500000000	            mov eax, dword [0x0401261a] 	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x125da	            0x85c0	                           test eax, eax	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x125dc	     0xf8431010000	                            je 0x4012753	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x125e2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x125e6	        0x4883c002	                              add rax, 2	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x125ea	           0xfb600	                   movzx eax, byte [rax]	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x125ed	            0x3c23	                            cmp al, 0x23	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x125ef	     0xf851e010000	                           jne 0x4012753	      9391	syntax.c	FUNCTION_144	IF_6	IF_8
0x125f5	        0x837de400	               cmp dword [rbp - 0x1c], 0	      9397	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x125f9	            0x7434	                            je 0x401266f	      9397	syntax.c	FUNCTION_144	IF_6	IF_8	IF_9
0x125fb	    0x488b0d000000	            mov rcx, qword [0x04012642] 	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_12
0x12602	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_12
0x12605	          0x4863d0	                         movsxd rdx, eax	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_12
0x12608	          0x4889d0	                            mov rax, rdx	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_12
0x1260b	        0x48c1e003	                              shl rax, 3	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_12
0x1260f	          0x4801d0	                            add rax, rdx	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_12
0x12612	          0x4801c0	                            add rax, rax	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_12
0x12615	          0x4801d0	                            add rax, rdx	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_12
0x12618	        0x48c1e003	                              shl rax, 3	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_12
0x1261c	    0x482d98000000	                           sub rax, 0x98	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_12
0x12622	          0x4801c8	                            add rax, rcx	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_12
0x12625	        0x488b4040	            mov rax, qword [rax + 0x40] 	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_12
0x12629	        0x488945f0	             mov qword [rbp - 0x10], rax	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_12
0x1262d	            0xeb6c	                           jmp 0x40126db	      9398	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_12
0x1262f	        0x837de800	               cmp dword [rbp - 0x18], 0	      9399	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x12633	            0x7434	                            je 0x40126a9	      9399	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x12635	    0x488b0d000000	            mov rcx, qword [0x0401267c] 	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x1263c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x1263f	          0x4863d0	                         movsxd rdx, eax	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x12642	          0x4889d0	                            mov rax, rdx	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x12645	        0x48c1e003	                              shl rax, 3	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x12649	          0x4801d0	                            add rax, rdx	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x1264c	          0x4801c0	                            add rax, rax	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x1264f	          0x4801d0	                            add rax, rdx	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x12652	        0x48c1e003	                              shl rax, 3	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x12656	    0x482d98000000	                           sub rax, 0x98	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x1265c	          0x4801c8	                            add rax, rcx	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x1265f	        0x488b4050	            mov rax, qword [rax + 0x50] 	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x12663	        0x488945f0	             mov qword [rbp - 0x10], rax	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x12667	            0xeb32	                           jmp 0x40126db	      9401	syntax.c	FUNCTION_144	IF_6	IF_8	ELSE_4	IF_10
0x12669	    0x488b0d000000	            mov rcx, qword [0x040126b0] 	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_14
0x12670	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_14
0x12673	          0x4863d0	                         movsxd rdx, eax	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_14
0x12676	          0x4889d0	                            mov rax, rdx	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_14
0x12679	        0x48c1e003	                              shl rax, 3	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_14
0x1267d	          0x4801d0	                            add rax, rdx	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_14
0x12680	          0x4801c0	                            add rax, rax	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_14
0x12683	          0x4801d0	                            add rax, rdx	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_14
0x12686	        0x48c1e003	                              shl rax, 3	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_14
0x1268a	    0x482d98000000	                           sub rax, 0x98	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_14
0x12690	          0x4801c8	                            add rax, rcx	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_14
0x12693	        0x488b4048	            mov rax, qword [rax + 0x48] 	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_14
0x12697	        0x488945f0	             mov qword [rbp - 0x10], rax	      9406	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_14
0x1269b	    0x48817df099d4	cmp qword [rbp - 0x10], 0xffffffffffffd499	      9407	syntax.c	FUNCTION_144	IF_6	IF_8	IF_11
0x126a3	            0x750a	                           jne 0x40126ef	      9407	syntax.c	FUNCTION_144	IF_6	IF_8	IF_11
0x126a5	      0xb800000000	                              mov eax, 0	      9408	syntax.c	FUNCTION_144	IF_6	IF_8	IF_11
0x126aa	      0xe9cc010000	                           jmp 0x40128bb	      9408	syntax.c	FUNCTION_144	IF_6	IF_8	IF_11
0x126af	    0x8b0500000000	            mov eax, dword [0x040126f5] 	      9409	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_15
0x126b5	            0x85c0	                           test eax, eax	      9409	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_15
0x126b7	            0x7407	                            je 0x4012700	      9409	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_15
0x126b9	      0xba00000000	                              mov edx, 0	      9409	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_15
0x126be	            0xeb05	                           jmp 0x4012705	      9409	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_15
0x126c0	      0xba00000000	                              mov edx, 0	      9409	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_15
0x126c5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      9409	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_15
0x126c9	          0x4889c7	                            mov rdi, rax	      9409	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_15
0x126cc	            0xffd2	                                call rdx	      9409	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_15
0x126ce	        0x488945f8	                mov qword [rbp - 8], rax	      9409	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_15
0x126d2	        0x488b45f8	                mov rax, qword [rbp - 8]	      9413	syntax.c	FUNCTION_144	IF_6	IF_8
0x126d6	           0xfb6d0	                           movzx edx, al	      9410	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_16
0x126d9	        0x488b45f8	                mov rax, qword [rbp - 8]	      9412	syntax.c	FUNCTION_144	IF_6	IF_8
0x126dd	        0x48c1e808	                              shr rax, 8	      9412	syntax.c	FUNCTION_144	IF_6	IF_8
0x126e1	           0xfb6c0	                           movzx eax, al	      9410	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_16
0x126e4	        0x488b4df8	                mov rcx, qword [rbp - 8]	      9411	syntax.c	FUNCTION_144	IF_6	IF_8
0x126e8	        0x48c1e910	                           shr rcx, 0x10	      9411	syntax.c	FUNCTION_144	IF_6	IF_8
0x126ec	            0x89ce	                            mov esi, ecx	      9410	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_16
0x126ee	          0x4189d0	                            mov r8d, edx	      9410	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_16
0x126f1	            0x89c1	                            mov ecx, eax	      9410	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_16
0x126f3	            0x89f2	                            mov edx, esi	      9410	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_16
0x126f5	      0xbe00000000	                              mov esi, 0	      9410	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_16
0x126fa	      0xbf00000000	                              mov edi, 0	      9410	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_16
0x126ff	      0xb800000000	                              mov eax, 0	      9410	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_16
0x12704	      0xe800000000	                          call 0x4012749	      9410	syntax.c	FUNCTION_144	IF_6	IF_8	CALL_16
0x12709	      0xb800000000	                              mov eax, 0	      9414	syntax.c	FUNCTION_144	IF_6	IF_8
0x1270e	      0xe968010000	                           jmp 0x40128bb	      9414	syntax.c	FUNCTION_144	IF_6	IF_8
0x12713	        0x837de400	               cmp dword [rbp - 0x1c], 0	      9417	syntax.c	FUNCTION_144	IF_6	IF_12
0x12717	            0x7433	                            je 0x401278c	      9417	syntax.c	FUNCTION_144	IF_6	IF_12
0x12719	    0x488b0d000000	            mov rcx, qword [0x04012760] 	      9418	syntax.c	FUNCTION_144	IF_6	CALL_17
0x12720	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9418	syntax.c	FUNCTION_144	IF_6	CALL_17
0x12723	          0x4863d0	                         movsxd rdx, eax	      9418	syntax.c	FUNCTION_144	IF_6	CALL_17
0x12726	          0x4889d0	                            mov rax, rdx	      9418	syntax.c	FUNCTION_144	IF_6	CALL_17
0x12729	        0x48c1e003	                              shl rax, 3	      9418	syntax.c	FUNCTION_144	IF_6	CALL_17
0x1272d	          0x4801d0	                            add rax, rdx	      9418	syntax.c	FUNCTION_144	IF_6	CALL_17
0x12730	          0x4801c0	                            add rax, rax	      9418	syntax.c	FUNCTION_144	IF_6	CALL_17
0x12733	          0x4801d0	                            add rax, rdx	      9418	syntax.c	FUNCTION_144	IF_6	CALL_17
0x12736	        0x48c1e003	                              shl rax, 3	      9418	syntax.c	FUNCTION_144	IF_6	CALL_17
0x1273a	    0x482d98000000	                           sub rax, 0x98	      9418	syntax.c	FUNCTION_144	IF_6	CALL_17
0x12740	          0x4801c8	                            add rax, rcx	      9418	syntax.c	FUNCTION_144	IF_6	CALL_17
0x12743	        0x488b4070	            mov rax, qword [rax + 0x70] 	      9418	syntax.c	FUNCTION_144	IF_6	CALL_17
0x12747	      0xe92f010000	                           jmp 0x40128bb	      9418	syntax.c	FUNCTION_144	IF_6	CALL_17
0x1274c	        0x837de800	               cmp dword [rbp - 0x18], 0	      9419	syntax.c	FUNCTION_144	IF_6	IF_13
0x12750	            0x7436	                            je 0x40127c8	      9419	syntax.c	FUNCTION_144	IF_6	IF_13
0x12752	    0x488b0d000000	            mov rcx, qword [0x04012799] 	      9420	syntax.c	FUNCTION_144	IF_6	CALL_18
0x12759	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9420	syntax.c	FUNCTION_144	IF_6	CALL_18
0x1275c	          0x4863d0	                         movsxd rdx, eax	      9420	syntax.c	FUNCTION_144	IF_6	CALL_18
0x1275f	          0x4889d0	                            mov rax, rdx	      9420	syntax.c	FUNCTION_144	IF_6	CALL_18
0x12762	        0x48c1e003	                              shl rax, 3	      9420	syntax.c	FUNCTION_144	IF_6	CALL_18
0x12766	          0x4801d0	                            add rax, rdx	      9420	syntax.c	FUNCTION_144	IF_6	CALL_18
0x12769	          0x4801c0	                            add rax, rax	      9420	syntax.c	FUNCTION_144	IF_6	CALL_18
0x1276c	          0x4801d0	                            add rax, rdx	      9420	syntax.c	FUNCTION_144	IF_6	CALL_18
0x1276f	        0x48c1e003	                              shl rax, 3	      9420	syntax.c	FUNCTION_144	IF_6	CALL_18
0x12773	    0x482d98000000	                           sub rax, 0x98	      9420	syntax.c	FUNCTION_144	IF_6	CALL_18
0x12779	          0x4801c8	                            add rax, rcx	      9420	syntax.c	FUNCTION_144	IF_6	CALL_18
0x1277c	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      9420	syntax.c	FUNCTION_144	IF_6	CALL_18
0x12783	      0xe9f3000000	                           jmp 0x40128bb	      9420	syntax.c	FUNCTION_144	IF_6	CALL_18
0x12788	    0x488b0d000000	            mov rcx, qword [0x040127cf] 	      9421	syntax.c	FUNCTION_144	IF_6	CALL_19
0x1278f	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9421	syntax.c	FUNCTION_144	IF_6	CALL_19
0x12792	          0x4863d0	                         movsxd rdx, eax	      9421	syntax.c	FUNCTION_144	IF_6	CALL_19
0x12795	          0x4889d0	                            mov rax, rdx	      9421	syntax.c	FUNCTION_144	IF_6	CALL_19
0x12798	        0x48c1e003	                              shl rax, 3	      9421	syntax.c	FUNCTION_144	IF_6	CALL_19
0x1279c	          0x4801d0	                            add rax, rdx	      9421	syntax.c	FUNCTION_144	IF_6	CALL_19
0x1279f	          0x4801c0	                            add rax, rax	      9421	syntax.c	FUNCTION_144	IF_6	CALL_19
0x127a2	          0x4801d0	                            add rax, rdx	      9421	syntax.c	FUNCTION_144	IF_6	CALL_19
0x127a5	        0x48c1e003	                              shl rax, 3	      9421	syntax.c	FUNCTION_144	IF_6	CALL_19
0x127a9	    0x482d98000000	                           sub rax, 0x98	      9421	syntax.c	FUNCTION_144	IF_6	CALL_19
0x127af	          0x4801c8	                            add rax, rcx	      9421	syntax.c	FUNCTION_144	IF_6	CALL_19
0x127b2	        0x488b4078	            mov rax, qword [rax + 0x78] 	      9421	syntax.c	FUNCTION_144	IF_6	CALL_19
0x127b6	      0xe9c0000000	                           jmp 0x40128bb	      9421	syntax.c	FUNCTION_144	IF_6	CALL_19
0x127bb	        0x837dec00	               cmp dword [rbp - 0x14], 0	      9423	syntax.c	FUNCTION_144	IF_14
0x127bf	            0x7506	                           jne 0x4012807	      9423	syntax.c	FUNCTION_144	IF_14
0x127c1	        0x837de800	               cmp dword [rbp - 0x18], 0	      9423	syntax.c	FUNCTION_144	IF_14
0x127c5	            0x740a	                            je 0x4012811	      9423	syntax.c	FUNCTION_144	IF_14
0x127c7	      0xb800000000	                              mov eax, 0	      9424	syntax.c	FUNCTION_144	IF_14
0x127cc	      0xe9aa000000	                           jmp 0x40128bb	      9424	syntax.c	FUNCTION_144	IF_14
0x127d1	        0x837dd863	           cmp dword [rbp - 0x28], 0x63 	      9425	syntax.c	FUNCTION_144	IF_15
0x127d5	     0xf859b000000	                           jne 0x40128b6	      9425	syntax.c	FUNCTION_144	IF_15
0x127db	        0x837de400	               cmp dword [rbp - 0x1c], 0	      9427	syntax.c	FUNCTION_144	IF_15	IF_16
0x127df	            0x7435	                            je 0x4012856	      9427	syntax.c	FUNCTION_144	IF_15	IF_16
0x127e1	    0x488b0d000000	            mov rcx, qword [0x04012828] 	      9428	syntax.c	FUNCTION_144	IF_15	CALL_20
0x127e8	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9428	syntax.c	FUNCTION_144	IF_15	CALL_20
0x127eb	          0x4863d0	                         movsxd rdx, eax	      9428	syntax.c	FUNCTION_144	IF_15	CALL_20
0x127ee	          0x4889d0	                            mov rax, rdx	      9428	syntax.c	FUNCTION_144	IF_15	CALL_20
0x127f1	        0x48c1e003	                              shl rax, 3	      9428	syntax.c	FUNCTION_144	IF_15	CALL_20
0x127f5	          0x4801d0	                            add rax, rdx	      9428	syntax.c	FUNCTION_144	IF_15	CALL_20
0x127f8	          0x4801c0	                            add rax, rax	      9428	syntax.c	FUNCTION_144	IF_15	CALL_20
0x127fb	          0x4801d0	                            add rax, rdx	      9428	syntax.c	FUNCTION_144	IF_15	CALL_20
0x127fe	        0x48c1e003	                              shl rax, 3	      9428	syntax.c	FUNCTION_144	IF_15	CALL_20
0x12802	    0x482d98000000	                           sub rax, 0x98	      9428	syntax.c	FUNCTION_144	IF_15	CALL_20
0x12808	          0x4801c8	                            add rax, rcx	      9428	syntax.c	FUNCTION_144	IF_15	CALL_20
0x1280b	          0x8b4034	            mov eax, dword [rax + 0x34] 	      9428	syntax.c	FUNCTION_144	IF_15	CALL_20
0x1280e	          0x83e801	                              sub eax, 1	      9428	syntax.c	FUNCTION_144	IF_15	CALL_20
0x12811	          0x8945e0	             mov dword [rbp - 0x20], eax	      9428	syntax.c	FUNCTION_144	IF_15	CALL_20
0x12814	            0xeb33	                           jmp 0x4012889	      9428	syntax.c	FUNCTION_144	IF_15	CALL_20
0x12816	    0x488b0d000000	            mov rcx, qword [0x0401285d] 	      9430	syntax.c	FUNCTION_144	IF_15	CALL_21
0x1281d	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9430	syntax.c	FUNCTION_144	IF_15	CALL_21
0x12820	          0x4863d0	                         movsxd rdx, eax	      9430	syntax.c	FUNCTION_144	IF_15	CALL_21
0x12823	          0x4889d0	                            mov rax, rdx	      9430	syntax.c	FUNCTION_144	IF_15	CALL_21
0x12826	        0x48c1e003	                              shl rax, 3	      9430	syntax.c	FUNCTION_144	IF_15	CALL_21
0x1282a	          0x4801d0	                            add rax, rdx	      9430	syntax.c	FUNCTION_144	IF_15	CALL_21
0x1282d	          0x4801c0	                            add rax, rax	      9430	syntax.c	FUNCTION_144	IF_15	CALL_21
0x12830	          0x4801d0	                            add rax, rdx	      9430	syntax.c	FUNCTION_144	IF_15	CALL_21
0x12833	        0x48c1e003	                              shl rax, 3	      9430	syntax.c	FUNCTION_144	IF_15	CALL_21
0x12837	    0x482d98000000	                           sub rax, 0x98	      9430	syntax.c	FUNCTION_144	IF_15	CALL_21
0x1283d	          0x4801c8	                            add rax, rcx	      9430	syntax.c	FUNCTION_144	IF_15	CALL_21
0x12840	          0x8b4038	            mov eax, dword [rax + 0x38] 	      9430	syntax.c	FUNCTION_144	IF_15	CALL_21
0x12843	          0x83e801	                              sub eax, 1	      9430	syntax.c	FUNCTION_144	IF_15	CALL_21
0x12846	          0x8945e0	             mov dword [rbp - 0x20], eax	      9430	syntax.c	FUNCTION_144	IF_15	CALL_21
0x12849	        0x837de000	               cmp dword [rbp - 0x20], 0	      9431	syntax.c	FUNCTION_144	IF_15	IF_17
0x1284d	            0x7907	                           jns 0x4012896	      9431	syntax.c	FUNCTION_144	IF_15	IF_17
0x1284f	      0xb800000000	                              mov eax, 0	      9432	syntax.c	FUNCTION_144	IF_15	IF_17
0x12854	            0xeb25	                           jmp 0x40128bb	      9432	syntax.c	FUNCTION_144	IF_15	IF_17
0x12856	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      9433	syntax.c	FUNCTION_144	IF_15	CALL_22
0x12859	            0x89c2	                            mov edx, eax	      9433	syntax.c	FUNCTION_144	IF_15	CALL_22
0x1285b	      0xbe00000000	                              mov esi, 0	      9433	syntax.c	FUNCTION_144	IF_15	CALL_22
0x12860	      0xbf00000000	                              mov edi, 0	      9433	syntax.c	FUNCTION_144	IF_15	CALL_22
0x12865	      0xb800000000	                              mov eax, 0	      9433	syntax.c	FUNCTION_144	IF_15	CALL_22
0x1286a	      0xe800000000	                          call 0x40128af	      9433	syntax.c	FUNCTION_144	IF_15	CALL_22
0x1286f	      0xb800000000	                              mov eax, 0	      9434	syntax.c	FUNCTION_144	IF_15
0x12874	            0xeb05	                           jmp 0x40128bb	      9434	syntax.c	FUNCTION_144	IF_15
0x12876	      0xb800000000	                              mov eax, 0	      9437	syntax.c	FUNCTION_144
0x1287b	              0xc9	                                   leave	      9438	syntax.c	FUNCTION_144
0x1287c	              0xc3	                                     ret	      9438	syntax.c	FUNCTION_144
highlight_list_arg	FOR,1:DO,0:IF,8:SWITCH,0:functions,0:ELSE,2:WHILE,0:CALL,11	124
0x11fd3	              0x55	                                push rbp	      9276	syntax.c	FUNCTION_142
0x11fd4	          0x4889e5	                            mov rbp, rsp	      9276	syntax.c	FUNCTION_142
0x11fd7	              0x53	                                push rbx	      9276	syntax.c	FUNCTION_142
0x11fd8	    0x4881eca80000	                           sub rsp, 0xa8	      9276	syntax.c	FUNCTION_142
0x11fdf	    0x89bd6cffffff	             mov dword [rbp - 0x94], edi	      9276	syntax.c	FUNCTION_142
0x11fe5	    0x89b568ffffff	             mov dword [rbp - 0x98], esi	      9276	syntax.c	FUNCTION_142
0x11feb	    0x899564ffffff	             mov dword [rbp - 0x9c], edx	      9276	syntax.c	FUNCTION_142
0x11ff1	    0x898d60ffffff	             mov dword [rbp - 0xa0], ecx	      9276	syntax.c	FUNCTION_142
0x11ff7	    0x4c898558ffff	              mov qword [rbp - 0xa8], r8	      9276	syntax.c	FUNCTION_142
0x11ffe	    0x4c898d50ffff	              mov qword [rbp - 0xb0], r9	      9276	syntax.c	FUNCTION_142
0x12005	    0x64488b042528	                mov rax, qword fs:[0x28]	      9276	syntax.c	FUNCTION_142
0x1200e	        0x488945e8	             mov qword [rbp - 0x18], rax	      9276	syntax.c	FUNCTION_142
0x12012	            0x31c0	                            xor eax, eax	      9276	syntax.c	FUNCTION_142
0x12014	    0x8b0500000000	            mov eax, dword [0x0401205a] 	      9281	syntax.c	FUNCTION_142	IF_1
0x1201a	            0x85c0	                           test eax, eax	      9281	syntax.c	FUNCTION_142	IF_1
0x1201c	            0x740a	                            je 0x4012068	      9281	syntax.c	FUNCTION_142	IF_1
0x1201e	      0xb800000000	                              mov eax, 0	      9282	syntax.c	FUNCTION_142	IF_1
0x12023	      0xe9b8010000	                           jmp 0x4012220	      9282	syntax.c	FUNCTION_142	IF_1
0x12028	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 2	      9283	syntax.c	FUNCTION_142	IF_2
0x1202f	            0x750d	                           jne 0x401207e	      9283	syntax.c	FUNCTION_142	IF_2
0x12031	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      9283	syntax.c	FUNCTION_142	IF_2
0x12039	           0xf95c0	                                setne al	      9283	syntax.c	FUNCTION_142	IF_2
0x1203c	            0xeb0a	                           jmp 0x4012088	      9283	syntax.c	FUNCTION_142	IF_2
0x1203e	    0x83bd60ffffff	               cmp dword [rbp - 0xa0], 0	      9283	syntax.c	FUNCTION_142	IF_2
0x12045	           0xf95c0	                                setne al	      9283	syntax.c	FUNCTION_142	IF_2
0x12048	            0x84c0	                             test al, al	      9283	syntax.c	FUNCTION_142	IF_2
0x1204a	     0xf848a010000	                            je 0x401221a	      9283	syntax.c	FUNCTION_142	IF_2
0x12050	        0x488d4580	                   lea rax, [rbp - 0x80]	      9285	syntax.c	FUNCTION_142	IF_2
0x12054	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      9285	syntax.c	FUNCTION_142	IF_2
0x1205b	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 3	      9286	syntax.c	FUNCTION_142	IF_2	IF_3
0x12062	            0x7524	                           jne 0x40120c8	      9286	syntax.c	FUNCTION_142	IF_2	IF_3
0x12064	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	      9287	syntax.c	FUNCTION_142	IF_2	CALL_1
0x1206a	          0x8d50ff	                      lea edx, [rax - 1]	      9287	syntax.c	FUNCTION_142	IF_2	CALL_1
0x1206d	        0x488d4580	                   lea rax, [rbp - 0x80]	      9287	syntax.c	FUNCTION_142	IF_2	CALL_1
0x12071	      0xbe00000000	                              mov esi, 0	      9287	syntax.c	FUNCTION_142	IF_2	CALL_1
0x12076	          0x4889c7	                            mov rdi, rax	      9287	syntax.c	FUNCTION_142	IF_2	CALL_1
0x12079	      0xb800000000	                              mov eax, 0	      9287	syntax.c	FUNCTION_142	IF_2	CALL_1
0x1207e	      0xe800000000	                          call 0x40120c3	      9287	syntax.c	FUNCTION_142	IF_2	CALL_1
0x12083	      0xe9bc000000	                           jmp 0x4012184	      9287	syntax.c	FUNCTION_142	IF_2	CALL_1
0x12088	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 2	      9288	syntax.c	FUNCTION_142	IF_2	ELSE_1	IF_4
0x1208f	            0x7513	                           jne 0x40120e4	      9288	syntax.c	FUNCTION_142	IF_2	ELSE_1	IF_4
0x12091	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      9289	syntax.c	FUNCTION_142	IF_2	ELSE_1	IF_4
0x12098	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      9289	syntax.c	FUNCTION_142	IF_2	ELSE_1	IF_4
0x1209f	      0xe9a0000000	                           jmp 0x4012184	      9289	syntax.c	FUNCTION_142	IF_2	ELSE_1	IF_4
0x120a4	        0xc6458000	                mov byte [rbp - 0x80], 0	      9292	syntax.c	FUNCTION_142	IF_2	ELSE_2
0x120a8	    0xc78574ffffff	               mov dword [rbp - 0x8c], 0	      9293	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1
0x120b2	            0xeb79	                           jmp 0x401216d	      9293	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1
0x120b4	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      9295	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5
0x120ba	            0x4898	                                    cdqe	      9295	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5
0x120bc	    0x8b0485000000	                  mov eax, dword [rax*4]	      9295	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5
0x120c3	    0x238560ffffff	             and eax, dword [rbp - 0xa0]	      9295	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5
0x120c9	            0x85c0	                           test eax, eax	      9295	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5
0x120cb	            0x7459	                            je 0x4012166	      9295	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5
0x120cd	         0xfb64580	            movzx eax, byte [rbp - 0x80]	      9297	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	IF_6
0x120d1	            0x84c0	                             test al, al	      9297	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	IF_6
0x120d3	            0x7416	                            je 0x401212b	      9297	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	IF_6
0x120d5	        0x488d4580	                   lea rax, [rbp - 0x80]	      9298	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	CALL_2
0x120d9	      0xba64000000	                           mov edx, 0x64	      9298	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	CALL_2
0x120de	      0xbe00000000	                              mov esi, 0	      9298	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	CALL_2
0x120e3	          0x4889c7	                            mov rdi, rax	      9298	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	CALL_2
0x120e6	      0xe800000000	                          call 0x401212b	      9298	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	CALL_2
0x120eb	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      9299	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	CALL_3
0x120f1	            0x4898	                                    cdqe	      9299	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	CALL_3
0x120f3	    0x488b0cc50000	                  mov rcx, qword [rax*8]	      9299	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	CALL_3
0x120fb	        0x488d4580	                   lea rax, [rbp - 0x80]	      9299	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	CALL_3
0x120ff	      0xba64000000	                           mov edx, 0x64	      9299	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	CALL_3
0x12104	          0x4889ce	                            mov rsi, rcx	      9299	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	CALL_3
0x12107	          0x4889c7	                            mov rdi, rax	      9299	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	CALL_3
0x1210a	      0xe800000000	                          call 0x401214f	      9299	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5	CALL_3
0x1210f	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      9300	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5
0x12115	            0x4898	                                    cdqe	      9300	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5
0x12117	    0x8b0485000000	                  mov eax, dword [rax*4]	      9300	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5
0x1211e	            0xf7d0	                                 not eax	      9300	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5
0x12120	    0x218560ffffff	             and dword [rbp - 0xa0], eax	      9300	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1	IF_5
0x12126	    0x838574ffffff	               add dword [rbp - 0x8c], 1	      9293	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1
0x1212d	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      9293	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1
0x12133	            0x4898	                                    cdqe	      9293	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1
0x12135	    0x8b0485000000	                  mov eax, dword [rax*4]	      9293	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1
0x1213c	            0x85c0	                           test eax, eax	      9293	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1
0x1213e	     0xf8570ffffff	                           jne 0x40120f4	      9293	syntax.c	FUNCTION_142	IF_2	ELSE_2	FOR_1
0x12144	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      9306	syntax.c	FUNCTION_142	IF_2	CALL_6
0x1214b	          0x4889c7	                            mov rdi, rax	      9306	syntax.c	FUNCTION_142	IF_2	CALL_6
0x1214e	      0xe800000000	                          call 0x4012193	      9306	syntax.c	FUNCTION_142	IF_2	CALL_6
0x12153	            0x89c3	                            mov ebx, eax	      9305	syntax.c	FUNCTION_142	IF_2	CALL_4
0x12155	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      9306	syntax.c	FUNCTION_142	IF_2	CALL_6
0x1215c	          0x4889c7	                            mov rdi, rax	      9306	syntax.c	FUNCTION_142	IF_2	CALL_6
0x1215f	      0xe800000000	                          call 0x40121a4	      9306	syntax.c	FUNCTION_142	IF_2	CALL_6
0x12164	             0x1d8	                            add eax, ebx	      9305	syntax.c	FUNCTION_142	IF_2	CALL_4
0x12166	          0x83c001	                              add eax, 1	      9305	syntax.c	FUNCTION_142	IF_2	CALL_4
0x12169	            0x89c1	                            mov ecx, eax	      9305	syntax.c	FUNCTION_142	IF_2	CALL_4
0x1216b	    0x8b956cffffff	             mov edx, dword [rbp - 0x94]	      9305	syntax.c	FUNCTION_142	IF_2	CALL_4
0x12171	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      9305	syntax.c	FUNCTION_142	IF_2	CALL_4
0x12177	            0x89ce	                            mov esi, ecx	      9305	syntax.c	FUNCTION_142	IF_2	CALL_4
0x12179	            0x89c7	                            mov edi, eax	      9305	syntax.c	FUNCTION_142	IF_2	CALL_4
0x1217b	      0xe8c4070000	                call sym.syn_list_header	      9305	syntax.c	FUNCTION_142	IF_2	CALL_4
0x12180	    0xc78568ffffff	               mov dword [rbp - 0x98], 1	      9307	syntax.c	FUNCTION_142	IF_2
0x1218a	    0x8b0500000000	            mov eax, dword [0x040121d0] 	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x12190	            0x85c0	                           test eax, eax	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x12192	            0x7546	                           jne 0x401221a	      9308	syntax.c	FUNCTION_142	IF_2	IF_7
0x12194	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      9310	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8
0x1219b	           0xfb600	                   movzx eax, byte [rax]	      9310	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8
0x1219e	            0x84c0	                             test al, al	      9310	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8
0x121a0	            0x7429	                            je 0x401220b	      9310	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8
0x121a2	    0x8b1500000000	            mov edx, dword [0x040121e8] 	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_8
0x121a8	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_8
0x121af	            0x89d6	                            mov esi, edx	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_8
0x121b1	          0x4889c7	                            mov rdi, rax	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_8
0x121b4	      0xe800000000	                          call 0x40121f9	      9312	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_8
0x121b9	    0x8b0500000000	            mov eax, dword [0x040121ff] 	      9313	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_10
0x121bf	            0x89c6	                            mov esi, eax	      9313	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_10
0x121c1	      0xbf00000000	                              mov edi, 0	      9313	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_10
0x121c6	      0xe800000000	                          call 0x401220b	      9313	syntax.c	FUNCTION_142	IF_2	IF_7	IF_8	CALL_10
0x121cb	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_11
0x121d2	          0x4889c7	                            mov rdi, rax	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_11
0x121d5	      0xe800000000	                          call 0x401221a	      9315	syntax.c	FUNCTION_142	IF_2	IF_7	CALL_11
0x121da	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      9318	syntax.c	FUNCTION_142
0x121e0	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      9319	syntax.c	FUNCTION_142
0x121e4	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      9319	syntax.c	FUNCTION_142
0x121ed	            0x7405	                            je 0x4012234	      9319	syntax.c	FUNCTION_142
0x121ef	      0xe800000000	                          call 0x4012234	      9319	syntax.c	FUNCTION_142
0x121f4	    0x4881c4a80000	                           add rsp, 0xa8	      9319	syntax.c	FUNCTION_142
0x121fb	              0x5b	                                 pop rbx	      9319	syntax.c	FUNCTION_142
0x121fc	              0x5d	                                 pop rbp	      9319	syntax.c	FUNCTION_142
0x121fd	              0xc3	                                     ret	      9319	syntax.c	FUNCTION_142
hl_set_bg_color_name	FOR,0:DO,0:IF,2:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,4	41
0x10cd5	              0x55	                                push rbp	      8558	syntax.c	FUNCTION_125
0x10cd6	          0x4889e5	                            mov rbp, rsp	      8558	syntax.c	FUNCTION_125
0x10cd9	        0x4883ec20	                           sub rsp, 0x20	      8558	syntax.c	FUNCTION_125
0x10cdd	        0x48897de8	             mov qword [rbp - 0x18], rdi	      8558	syntax.c	FUNCTION_125
0x10ce1	      0x48837de800	               cmp qword [rbp - 0x18], 0	      8561	syntax.c	FUNCTION_125	IF_1
0x10ce6	            0x747c	                            je 0x4010da4	      8561	syntax.c	FUNCTION_125	IF_1
0x10ce8	      0xbf00000000	                              mov edi, 0	      8563	syntax.c	FUNCTION_125	IF_1	CALL_1
0x10ced	      0xe800000000	                          call 0x4010d32	      8563	syntax.c	FUNCTION_125	IF_1	CALL_1
0x10cf2	          0x8945fc	                mov dword [rbp - 4], eax	      8563	syntax.c	FUNCTION_125	IF_1	CALL_1
0x10cf5	        0x837dfc00	                  cmp dword [rbp - 4], 0	      8564	syntax.c	FUNCTION_125	IF_1	IF_2
0x10cf9	            0x7e69	                           jle 0x4010da4	      8564	syntax.c	FUNCTION_125	IF_1	IF_2
0x10cfb	    0x488b0d000000	            mov rcx, qword [0x04010d42] 	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_3
0x10d02	          0x8b45fc	                mov eax, dword [rbp - 4]	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_3
0x10d05	          0x4863d0	                         movsxd rdx, eax	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_3
0x10d08	          0x4889d0	                            mov rax, rdx	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_3
0x10d0b	        0x48c1e003	                              shl rax, 3	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_3
0x10d0f	          0x4801d0	                            add rax, rdx	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_3
0x10d12	          0x4801c0	                            add rax, rax	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_3
0x10d15	          0x4801d0	                            add rax, rdx	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_3
0x10d18	        0x48c1e003	                              shl rax, 3	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_3
0x10d1c	    0x482d98000000	                           sub rax, 0x98	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_3
0x10d22	          0x4801c8	                            add rax, rcx	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_3
0x10d25	        0x488b4078	            mov rax, qword [rax + 0x78] 	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_3
0x10d29	          0x4889c7	                            mov rdi, rax	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_3
0x10d2c	      0xe800000000	                          call 0x4010d71	      8566	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_3
0x10d31	    0x488b0d000000	            mov rcx, qword [0x04010d78] 	      8567	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_4
0x10d38	          0x8b45fc	                mov eax, dword [rbp - 4]	      8567	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_4
0x10d3b	          0x4863d0	                         movsxd rdx, eax	      8567	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_4
0x10d3e	          0x4889d0	                            mov rax, rdx	      8567	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_4
0x10d41	        0x48c1e003	                              shl rax, 3	      8567	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_4
0x10d45	          0x4801d0	                            add rax, rdx	      8567	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_4
0x10d48	          0x4801c0	                            add rax, rax	      8567	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_4
0x10d4b	          0x4801d0	                            add rax, rdx	      8567	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_4
0x10d4e	        0x48c1e003	                              shl rax, 3	      8567	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_4
0x10d52	    0x482d98000000	                           sub rax, 0x98	      8567	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_4
0x10d58	        0x488d1401	                    lea rdx, [rcx + rax]	      8567	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_4
0x10d5c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8567	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_4
0x10d60	        0x48894278	             mov qword [rdx + 0x78], rax	      8567	syntax.c	FUNCTION_125	IF_1	IF_2	CALL_4
0x10d64	              0x90	                                     nop	      8570	syntax.c	FUNCTION_125
0x10d65	              0xc9	                                   leave	      8570	syntax.c	FUNCTION_125
0x10d66	              0xc3	                                     ret	      8570	syntax.c	FUNCTION_125
save_chartab	FOR,0:DO,0:IF,1:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,2	28
0xd11	              0x55	                                push rbp	      1013	syntax.c	FUNCTION_6
0xd12	          0x4889e5	                            mov rbp, rsp	      1013	syntax.c	FUNCTION_6
0xd15	        0x4883ec10	                           sub rsp, 0x10	      1013	syntax.c	FUNCTION_6
0xd19	        0x48897df8	                mov qword [rbp - 8], rdi	      1013	syntax.c	FUNCTION_6
0xd1d	    0x488b05000000	            mov rax, qword [0x04000d64] 	      1014	syntax.c	FUNCTION_6	IF_1
0xd24	    0x488b90b00400	           mov rdx, qword [rax + 0x4b0] 	      1014	syntax.c	FUNCTION_6	IF_1
0xd2b	    0x488b05000000	            mov rax, qword [0x04000d72] 	      1014	syntax.c	FUNCTION_6	IF_1
0xd32	          0x4839c2	                            cmp rdx, rax	      1014	syntax.c	FUNCTION_6	IF_1
0xd35	            0x7451	                            je 0x4000dc8	      1014	syntax.c	FUNCTION_6	IF_1
0xd37	    0x488b05000000	            mov rax, qword [0x04000d7e] 	      1016	syntax.c	FUNCTION_6	IF_1	CALL_1
0xd3e	    0x488d88a00900	                  lea rcx, [rax + 0x9a0]	      1016	syntax.c	FUNCTION_6	IF_1	CALL_1
0xd45	        0x488b45f8	                mov rax, qword [rbp - 8]	      1016	syntax.c	FUNCTION_6	IF_1	CALL_1
0xd49	      0xba20000000	                           mov edx, 0x20	      1016	syntax.c	FUNCTION_6	IF_1	CALL_1
0xd4e	          0x4889ce	                            mov rsi, rcx	      1016	syntax.c	FUNCTION_6	IF_1	CALL_1
0xd51	          0x4889c7	                            mov rdi, rax	      1016	syntax.c	FUNCTION_6	IF_1	CALL_1
0xd54	      0xe800000000	                          call 0x4000d99	      1016	syntax.c	FUNCTION_6	IF_1	CALL_1
0xd59	    0x488b05000000	            mov rax, qword [0x04000da0] 	      1017	syntax.c	FUNCTION_6	IF_1	CALL_2
0xd60	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1017	syntax.c	FUNCTION_6	IF_1	CALL_2
0xd64	    0x488d888c0400	                  lea rcx, [rax + 0x48c]	      1017	syntax.c	FUNCTION_6	IF_1	CALL_2
0xd6b	    0x488b05000000	            mov rax, qword [0x04000db2] 	      1017	syntax.c	FUNCTION_6	IF_1	CALL_2
0xd72	    0x4805a0090000	                          add rax, 0x9a0	      1017	syntax.c	FUNCTION_6	IF_1	CALL_2
0xd78	      0xba20000000	                           mov edx, 0x20	      1017	syntax.c	FUNCTION_6	IF_1	CALL_2
0xd7d	          0x4889ce	                            mov rsi, rcx	      1017	syntax.c	FUNCTION_6	IF_1	CALL_2
0xd80	          0x4889c7	                            mov rdi, rax	      1017	syntax.c	FUNCTION_6	IF_1	CALL_2
0xd83	      0xe800000000	                          call 0x4000dc8	      1017	syntax.c	FUNCTION_6	IF_1	CALL_2
0xd88	              0x90	                                     nop	      1020	syntax.c	FUNCTION_6
0xd89	              0xc9	                                   leave	      1020	syntax.c	FUNCTION_6
0xd8a	              0xc3	                                     ret	      1020	syntax.c	FUNCTION_6
check_keepend	FOR,2:DO,0:IF,6:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,5	135
0x4741	              0x55	                                push rbp	      2771	syntax.c	FUNCTION_33
0x4742	          0x4889e5	                            mov rbp, rsp	      2771	syntax.c	FUNCTION_33
0x4745	        0x4883ec40	                           sub rsp, 0x40	      2771	syntax.c	FUNCTION_33
0x4749	    0x64488b042528	                mov rax, qword fs:[0x28]	      2771	syntax.c	FUNCTION_33
0x4752	        0x488945f8	                mov qword [rbp - 8], rax	      2771	syntax.c	FUNCTION_33
0x4756	            0x31c0	                            xor eax, eax	      2771	syntax.c	FUNCTION_33
0x4758	    0x8b0500000000	            mov eax, dword [0x0400479e] 	      2781	syntax.c	FUNCTION_33	IF_1
0x475e	            0x85c0	                           test eax, eax	      2781	syntax.c	FUNCTION_33	IF_1
0x4760	     0xf88be010000	                            js 0x4004964	      2781	syntax.c	FUNCTION_33	IF_1
0x4766	    0x8b0500000000	            mov eax, dword [0x040047ac] 	      2789	syntax.c	FUNCTION_33	FOR_1
0x476c	          0x83e801	                              sub eax, 1	      2789	syntax.c	FUNCTION_33	FOR_1
0x476f	          0x8945c4	             mov dword [rbp - 0x3c], eax	      2789	syntax.c	FUNCTION_33	FOR_1
0x4772	            0xeb30	                           jmp 0x40047e4	      2789	syntax.c	FUNCTION_33	FOR_1
0x4774	    0x488b0d000000	            mov rcx, qword [0x040047bb] 	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2	CALL_1
0x477b	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2	CALL_1
0x477e	          0x4863d0	                         movsxd rdx, eax	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2	CALL_1
0x4781	          0x4889d0	                            mov rax, rdx	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2	CALL_1
0x4784	        0x48c1e003	                              shl rax, 3	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2	CALL_1
0x4788	          0x4801d0	                            add rax, rdx	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2	CALL_1
0x478b	        0x48c1e004	                              shl rax, 4	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2	CALL_1
0x478f	          0x4801c8	                            add rax, rcx	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2	CALL_1
0x4792	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2	CALL_1
0x4796	      0x2500400000	                         and eax, 0x4000	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2	CALL_1
0x479b	          0x4885c0	                           test rax, rax	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2	CALL_1
0x479e	            0x7511	                           jne 0x40047f1	      2790	syntax.c	FUNCTION_33	FOR_1	IF_2	CALL_1
0x47a0	        0x836dc401	               sub dword [rbp - 0x3c], 1	      2789	syntax.c	FUNCTION_33	FOR_1
0x47a4	    0x8b0500000000	            mov eax, dword [0x040047ea] 	      2789	syntax.c	FUNCTION_33	FOR_1
0x47aa	          0x3945c4	            cmp dword [rbp - 0x3c], eax 	      2789	syntax.c	FUNCTION_33	FOR_1
0x47ad	            0x7fc5	                            jg 0x40047b4	      2789	syntax.c	FUNCTION_33	FOR_1
0x47af	            0xeb01	                           jmp 0x40047f2	      2789	syntax.c	FUNCTION_33	FOR_1
0x47b1	              0x90	                                     nop	      2791	syntax.c	FUNCTION_33	FOR_1	IF_2
0x47b2	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      2793	syntax.c	FUNCTION_33
0x47ba	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      2794	syntax.c	FUNCTION_33
0x47c1	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      2795	syntax.c	FUNCTION_33
0x47c9	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      2796	syntax.c	FUNCTION_33
0x47d0	      0xe93e010000	                           jmp 0x4004953	      2797	syntax.c	FUNCTION_33	FOR_2
0x47d5	    0x488b0d000000	            mov rcx, qword [0x0400481c] 	      2799	syntax.c	FUNCTION_33	FOR_2	CALL_2
0x47dc	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2799	syntax.c	FUNCTION_33	FOR_2	CALL_2
0x47df	          0x4863d0	                         movsxd rdx, eax	      2799	syntax.c	FUNCTION_33	FOR_2	CALL_2
0x47e2	          0x4889d0	                            mov rax, rdx	      2799	syntax.c	FUNCTION_33	FOR_2	CALL_2
0x47e5	        0x48c1e003	                              shl rax, 3	      2799	syntax.c	FUNCTION_33	FOR_2	CALL_2
0x47e9	          0x4801d0	                            add rax, rdx	      2799	syntax.c	FUNCTION_33	FOR_2	CALL_2
0x47ec	        0x48c1e004	                              shl rax, 4	      2799	syntax.c	FUNCTION_33	FOR_2	CALL_2
0x47f0	          0x4801c8	                            add rax, rcx	      2799	syntax.c	FUNCTION_33	FOR_2	CALL_2
0x47f3	        0x488945c8	             mov qword [rbp - 0x38], rax	      2799	syntax.c	FUNCTION_33	FOR_2	CALL_2
0x47f7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2800	syntax.c	FUNCTION_33	FOR_2	IF_3
0x47fb	          0x4885c0	                           test rax, rax	      2800	syntax.c	FUNCTION_33	FOR_2	IF_3
0x47fe	            0x7450	                            je 0x4004890	      2800	syntax.c	FUNCTION_33	FOR_2	IF_3
0x4800	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2802	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_3
0x4804	        0x488d5018	                   lea rdx, [rax + 0x18]	      2802	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_3
0x4808	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2802	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_3
0x480c	          0x4889c6	                            mov rsi, rax	      2802	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_3
0x480f	          0x4889d7	                            mov rdi, rdx	      2802	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_3
0x4812	      0xe8330c0000	                 call sym.limit_pos_zero	      2802	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_3
0x4817	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2803	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_4
0x481b	        0x488d5038	                   lea rdx, [rax + 0x38]	      2803	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_4
0x481f	        0x488d45e0	                   lea rax, [rbp - 0x20]	      2803	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_4
0x4823	          0x4889c6	                            mov rsi, rax	      2803	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_4
0x4826	          0x4889d7	                            mov rdi, rdx	      2803	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_4
0x4829	      0xe81c0c0000	                 call sym.limit_pos_zero	      2803	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_4
0x482e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2804	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_5
0x4832	        0x488d5048	                   lea rdx, [rax + 0x48]	      2804	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_5
0x4836	        0x488d45d0	                   lea rax, [rbp - 0x30]	      2804	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_5
0x483a	          0x4889c6	                            mov rsi, rax	      2804	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_5
0x483d	          0x4889d7	                            mov rdi, rdx	      2804	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_5
0x4840	      0xe8050c0000	                 call sym.limit_pos_zero	      2804	syntax.c	FUNCTION_33	FOR_2	IF_3	CALL_5
0x4845	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2805	syntax.c	FUNCTION_33	FOR_2	IF_3
0x4849	    0xc7405c010000	               mov dword [rax + 0x5c], 1	      2805	syntax.c	FUNCTION_33	FOR_2	IF_3
0x4850	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x4854	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x4857	            0x85c0	                           test eax, eax	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x4859	     0xf84b0000000	                            je 0x400494f	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x485f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x4863	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x4867	      0x2500040000	                          and eax, 0x400	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x486c	          0x4885c0	                           test rax, rax	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x486f	     0xf849a000000	                            je 0x400494f	      2807	syntax.c	FUNCTION_33	FOR_2	IF_4
0x4875	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2809	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x4879	          0x4885c0	                           test rax, rax	      2809	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x487c	            0x7430	                            je 0x40048ee	      2809	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x487e	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2810	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x4882	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2810	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x4886	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2810	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x488a	          0x4839c2	                            cmp rdx, rax	      2810	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x488d	            0x7f1f	                            jg 0x40048ee	      2810	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x488f	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2811	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x4893	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2811	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x4897	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2811	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x489b	          0x4839c2	                            cmp rdx, rax	      2811	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x489e	            0x7522	                           jne 0x4004902	      2811	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x48a0	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      2812	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x48a3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2812	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x48a7	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2812	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x48aa	            0x39c2	                            cmp edx, eax	      2812	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x48ac	            0x7e14	                           jle 0x4004902	      2812	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x48ae	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2813	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x48b2	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2813	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x48b6	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2813	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x48ba	        0x488945d0	             mov qword [rbp - 0x30], rax	      2813	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x48be	        0x488955d8	             mov qword [rbp - 0x28], rdx	      2813	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_5
0x48c2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2814	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x48c6	          0x4885c0	                           test rax, rax	      2814	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x48c9	            0x7430	                            je 0x400493b	      2814	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x48cb	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2815	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x48cf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2815	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x48d3	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2815	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x48d7	          0x4839c2	                            cmp rdx, rax	      2815	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x48da	            0x7f1f	                            jg 0x400493b	      2815	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x48dc	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      2816	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x48e0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2816	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x48e4	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2816	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x48e8	          0x4839c2	                            cmp rdx, rax	      2816	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x48eb	            0x7522	                           jne 0x400494f	      2816	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x48ed	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      2817	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x48f0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2817	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x48f4	          0x8b4040	            mov eax, dword [rax + 0x40] 	      2817	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x48f7	            0x39c2	                            cmp edx, eax	      2817	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x48f9	            0x7e14	                           jle 0x400494f	      2817	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x48fb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      2818	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x48ff	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2818	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4903	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2818	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x4907	        0x488945e0	             mov qword [rbp - 0x20], rax	      2818	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x490b	        0x488955e8	             mov qword [rbp - 0x18], rdx	      2818	syntax.c	FUNCTION_33	FOR_2	IF_4	IF_6
0x490f	        0x8345c401	               add dword [rbp - 0x3c], 1	      2797	syntax.c	FUNCTION_33	FOR_2
0x4913	    0x8b0500000000	            mov eax, dword [0x04004959] 	      2797	syntax.c	FUNCTION_33	FOR_2
0x4919	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	      2797	syntax.c	FUNCTION_33	FOR_2
0x491c	     0xf8fb3feffff	                            jg 0x4004815	      2797	syntax.c	FUNCTION_33	FOR_2
0x4922	            0xeb01	                           jmp 0x4004965	      2797	syntax.c	FUNCTION_33	FOR_2
0x4924	              0x90	                                     nop	      2782	syntax.c	FUNCTION_33	IF_1
0x4925	        0x488b45f8	                mov rax, qword [rbp - 8]	      2821	syntax.c	FUNCTION_33
0x4929	    0x644833042528	                xor rax, qword fs:[0x28]	      2821	syntax.c	FUNCTION_33
0x4932	            0x7405	                            je 0x4004979	      2821	syntax.c	FUNCTION_33
0x4934	      0xe800000000	                          call 0x4004979	      2821	syntax.c	FUNCTION_33
0x4939	              0xc9	                                   leave	      2821	syntax.c	FUNCTION_33
0x493a	              0xc3	                                     ret	      2821	syntax.c	FUNCTION_33
syn_get_final_id	FOR,1:DO,0:IF,2:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,1	42
0x13429	              0x55	                                push rbp	      9875	syntax.c	FUNCTION_159
0x1342a	          0x4889e5	                            mov rbp, rsp	      9875	syntax.c	FUNCTION_159
0x1342d	          0x897dec	             mov dword [rbp - 0x14], edi	      9875	syntax.c	FUNCTION_159
0x13430	    0x8b0500000000	            mov eax, dword [0x04013476] 	      9879	syntax.c	FUNCTION_159	IF_1
0x13436	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      9879	syntax.c	FUNCTION_159	IF_1
0x13439	            0x7c06	                            jl 0x4013481	      9879	syntax.c	FUNCTION_159	IF_1
0x1343b	        0x837dec00	               cmp dword [rbp - 0x14], 0	      9879	syntax.c	FUNCTION_159	IF_1
0x1343f	            0x7f07	                            jg 0x4013488	      9879	syntax.c	FUNCTION_159	IF_1
0x13441	      0xb800000000	                              mov eax, 0	      9880	syntax.c	FUNCTION_159	IF_1
0x13446	            0xeb73	                           jmp 0x40134fb	      9880	syntax.c	FUNCTION_159	IF_1
0x13448	    0xc745f4640000	            mov dword [rbp - 0xc], 0x64 	      9886	syntax.c	FUNCTION_159	FOR_1
0x1344f	            0xeb5d	                           jmp 0x40134ee	      9886	syntax.c	FUNCTION_159	FOR_1
0x13451	    0x488b0d000000	            mov rcx, qword [0x04013498] 	      9888	syntax.c	FUNCTION_159	FOR_1	CALL_1
0x13458	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9888	syntax.c	FUNCTION_159	FOR_1	CALL_1
0x1345b	          0x4863d0	                         movsxd rdx, eax	      9888	syntax.c	FUNCTION_159	FOR_1	CALL_1
0x1345e	          0x4889d0	                            mov rax, rdx	      9888	syntax.c	FUNCTION_159	FOR_1	CALL_1
0x13461	        0x48c1e003	                              shl rax, 3	      9888	syntax.c	FUNCTION_159	FOR_1	CALL_1
0x13465	          0x4801d0	                            add rax, rdx	      9888	syntax.c	FUNCTION_159	FOR_1	CALL_1
0x13468	          0x4801c0	                            add rax, rax	      9888	syntax.c	FUNCTION_159	FOR_1	CALL_1
0x1346b	          0x4801d0	                            add rax, rdx	      9888	syntax.c	FUNCTION_159	FOR_1	CALL_1
0x1346e	        0x48c1e003	                              shl rax, 3	      9888	syntax.c	FUNCTION_159	FOR_1	CALL_1
0x13472	    0x482d98000000	                           sub rax, 0x98	      9888	syntax.c	FUNCTION_159	FOR_1	CALL_1
0x13478	          0x4801c8	                            add rax, rcx	      9888	syntax.c	FUNCTION_159	FOR_1	CALL_1
0x1347b	        0x488945f8	                mov qword [rbp - 8], rax	      9888	syntax.c	FUNCTION_159	FOR_1	CALL_1
0x1347f	        0x488b45f8	                mov rax, qword [rbp - 8]	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x13483	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x13489	            0x85c0	                           test eax, eax	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x1348b	            0x742b	                            je 0x40134f8	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x1348d	        0x488b45f8	                mov rax, qword [rbp - 8]	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x13491	    0x8b9088000000	            mov edx, dword [rax + 0x88] 	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x13497	    0x8b0500000000	            mov eax, dword [0x040134dd] 	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x1349d	            0x39c2	                            cmp edx, eax	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x1349f	            0x7f17	                            jg 0x40134f8	      9889	syntax.c	FUNCTION_159	FOR_1	IF_2
0x134a1	        0x488b45f8	                mov rax, qword [rbp - 8]	      9891	syntax.c	FUNCTION_159	FOR_1
0x134a5	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      9891	syntax.c	FUNCTION_159	FOR_1
0x134ab	          0x8945ec	             mov dword [rbp - 0x14], eax	      9891	syntax.c	FUNCTION_159	FOR_1
0x134ae	        0x836df401	                sub dword [rbp - 0xc], 1	      9886	syntax.c	FUNCTION_159	FOR_1
0x134b2	        0x837df400	                cmp dword [rbp - 0xc], 0	      9886	syntax.c	FUNCTION_159	FOR_1
0x134b6	            0x7999	                           jns 0x4013491	      9886	syntax.c	FUNCTION_159	FOR_1
0x134b8	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9894	syntax.c	FUNCTION_159
0x134bb	              0x5d	                                 pop rbp	      9895	syntax.c	FUNCTION_159
0x134bc	              0xc3	                                     ret	      9895	syntax.c	FUNCTION_159
syn_stack_equal	FOR,2:DO,0:IF,10:SWITCH,0:functions,0:ELSE,1:WHILE,0:CALL,8	190
0x237f	              0x55	                                push rbp	      1641	syntax.c	FUNCTION_21
0x2380	          0x4889e5	                            mov rbp, rsp	      1641	syntax.c	FUNCTION_21
0x2383	        0x4883ec30	                           sub rsp, 0x30	      1641	syntax.c	FUNCTION_21
0x2387	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1641	syntax.c	FUNCTION_21
0x238b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1647	syntax.c	FUNCTION_21	IF_1
0x238f	    0x8b90bc000000	            mov edx, dword [rax + 0xbc] 	      1647	syntax.c	FUNCTION_21	IF_1
0x2395	    0x8b0500000000	            mov eax, dword [0x040023db] 	      1647	syntax.c	FUNCTION_21	IF_1
0x239b	            0x39c2	                            cmp edx, eax	      1647	syntax.c	FUNCTION_21	IF_1
0x239d	     0xf8597020000	                           jne 0x400267a	      1647	syntax.c	FUNCTION_21	IF_1
0x23a3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1648	syntax.c	FUNCTION_21	IF_1
0x23a7	    0x488b90c00000	            mov rdx, qword [rax + 0xc0] 	      1648	syntax.c	FUNCTION_21	IF_1
0x23ae	    0x488b05000000	            mov rax, qword [0x040023f5] 	      1648	syntax.c	FUNCTION_21	IF_1
0x23b5	          0x4839c2	                            cmp rdx, rax	      1648	syntax.c	FUNCTION_21	IF_1
0x23b8	     0xf857c020000	                           jne 0x400267a	      1648	syntax.c	FUNCTION_21	IF_1
0x23be	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1651	syntax.c	FUNCTION_21	IF_1	IF_2
0x23c2	    0x8b80bc000000	            mov eax, dword [rax + 0xbc] 	      1651	syntax.c	FUNCTION_21	IF_1	IF_2
0x23c8	          0x83f807	                              cmp eax, 7	      1651	syntax.c	FUNCTION_21	IF_1	IF_2
0x23cb	            0x7e0e	                           jle 0x400241b	      1651	syntax.c	FUNCTION_21	IF_1	IF_2
0x23cd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1652	syntax.c	FUNCTION_21	IF_1	CALL_1
0x23d1	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1652	syntax.c	FUNCTION_21	IF_1	CALL_1
0x23d5	        0x488945e8	             mov qword [rbp - 0x18], rax	      1652	syntax.c	FUNCTION_21	IF_1	CALL_1
0x23d9	            0xeb0c	                           jmp 0x4002427	      1652	syntax.c	FUNCTION_21	IF_1	CALL_1
0x23db	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1654	syntax.c	FUNCTION_21	IF_1	ELSE_1
0x23df	        0x4883c010	                           add rax, 0x10	      1654	syntax.c	FUNCTION_21	IF_1	ELSE_1
0x23e3	        0x488945e8	             mov qword [rbp - 0x18], rax	      1654	syntax.c	FUNCTION_21	IF_1	ELSE_1
0x23e7	    0x8b0500000000	            mov eax, dword [0x0400242d] 	      1656	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1
0x23ed	          0x8945e0	             mov dword [rbp - 0x20], eax	      1656	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1
0x23f0	      0xe924020000	                           jmp 0x4002659	      1656	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1
0x23f5	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3	CALL_2
0x23f8	          0x4863d0	                         movsxd rdx, eax	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3	CALL_2
0x23fb	          0x4889d0	                            mov rax, rdx	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3	CALL_2
0x23fe	          0x4801c0	                            add rax, rax	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3	CALL_2
0x2401	          0x4801d0	                            add rax, rdx	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3	CALL_2
0x2404	        0x48c1e003	                              shl rax, 3	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3	CALL_2
0x2408	          0x4889c2	                            mov rdx, rax	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3	CALL_2
0x240b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3	CALL_2
0x240f	          0x4801d0	                            add rax, rdx	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3	CALL_2
0x2412	            0x8b08	                    mov ecx, dword [rax]	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3	CALL_2
0x2414	    0x488b35000000	            mov rsi, qword [0x0400245b] 	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3	CALL_2
0x241b	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3	CALL_2
0x241e	          0x4863d0	                         movsxd rdx, eax	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3	CALL_2
0x2421	          0x4889d0	                            mov rax, rdx	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3	CALL_2
0x2424	        0x48c1e003	                              shl rax, 3	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3	CALL_2
0x2428	          0x4801d0	                            add rax, rdx	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3	CALL_2
0x242b	        0x48c1e004	                              shl rax, 4	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3	CALL_2
0x242f	          0x4801f0	                            add rax, rsi	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3	CALL_2
0x2432	            0x8b00	                    mov eax, dword [rax]	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3	CALL_2
0x2434	            0x39c1	                            cmp ecx, eax	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3	CALL_2
0x2436	     0xf85ed010000	                           jne 0x4002669	      1659	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3	CALL_2
0x243c	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	CALL_3
0x243f	          0x4863d0	                         movsxd rdx, eax	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	CALL_3
0x2442	          0x4889d0	                            mov rax, rdx	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	CALL_3
0x2445	          0x4801c0	                            add rax, rax	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	CALL_3
0x2448	          0x4801d0	                            add rax, rdx	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	CALL_3
0x244b	        0x48c1e003	                              shl rax, 3	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	CALL_3
0x244f	          0x4889c2	                            mov rdx, rax	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	CALL_3
0x2452	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	CALL_3
0x2456	          0x4801d0	                            add rax, rdx	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	CALL_3
0x2459	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	CALL_3
0x245d	    0x488b35000000	            mov rsi, qword [0x040024a4] 	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	CALL_3
0x2464	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	CALL_3
0x2467	          0x4863d0	                         movsxd rdx, eax	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	CALL_3
0x246a	          0x4889d0	                            mov rax, rdx	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	CALL_3
0x246d	        0x48c1e003	                              shl rax, 3	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	CALL_3
0x2471	          0x4801d0	                            add rax, rdx	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	CALL_3
0x2474	        0x48c1e004	                              shl rax, 4	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	CALL_3
0x2478	          0x4801f0	                            add rax, rsi	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	CALL_3
0x247b	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	CALL_3
0x2482	          0x4839c1	                            cmp rcx, rax	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	CALL_3
0x2485	     0xf848e010000	                            je 0x4002659	      1661	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	CALL_3
0x248b	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1666	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x248e	          0x4863d0	                         movsxd rdx, eax	      1666	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x2491	          0x4889d0	                            mov rax, rdx	      1666	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x2494	          0x4801c0	                            add rax, rax	      1666	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x2497	          0x4801d0	                            add rax, rdx	      1666	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x249a	        0x48c1e003	                              shl rax, 3	      1666	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x249e	          0x4889c2	                            mov rdx, rax	      1666	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x24a1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1666	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x24a5	          0x4801d0	                            add rax, rdx	      1666	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x24a8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1666	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x24ac	        0x488945f0	             mov qword [rbp - 0x10], rax	      1666	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4
0x24b0	    0x488b0d000000	            mov rcx, qword [0x040024f7] 	      1667	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	CALL_4
0x24b7	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1667	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	CALL_4
0x24ba	          0x4863d0	                         movsxd rdx, eax	      1667	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	CALL_4
0x24bd	          0x4889d0	                            mov rax, rdx	      1667	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	CALL_4
0x24c0	        0x48c1e003	                              shl rax, 3	      1667	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	CALL_4
0x24c4	          0x4801d0	                            add rax, rdx	      1667	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	CALL_4
0x24c7	        0x48c1e004	                              shl rax, 4	      1667	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	CALL_4
0x24cb	          0x4801c8	                            add rax, rcx	      1667	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	CALL_4
0x24ce	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      1667	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	CALL_4
0x24d5	        0x488945f8	                mov qword [rbp - 8], rax	      1667	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	CALL_4
0x24d9	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1670	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x24de	     0xf8449010000	                            je 0x400266d	      1670	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x24e4	      0x48837df800	                  cmp qword [rbp - 8], 0	      1670	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x24e9	     0xf843e010000	                            je 0x400266d	      1670	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_5
0x24ef	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1672	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2
0x24f6	      0xe90b010000	                           jmp 0x4002646	      1672	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2
0x24fb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1676	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6
0x24ff	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1676	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6
0x2502	          0x4863d2	                         movsxd rdx, edx	      1676	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6
0x2505	      0x488b4cd008	       mov rcx, qword [rax + rdx*8 + 8] 	      1676	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6
0x250a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1676	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6
0x250e	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1676	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6
0x2511	          0x4863d2	                         movsxd rdx, edx	      1676	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6
0x2514	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1676	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6
0x2519	          0x4839c1	                            cmp rcx, rax	      1676	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6
0x251c	     0xf84e0000000	                            je 0x4002642	      1676	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6
0x2522	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1681	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x2526	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1681	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x2529	          0x4863d2	                         movsxd rdx, edx	      1681	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x252c	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1681	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x2531	          0x4885c0	                           test rax, rax	      1681	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x2534	     0xf84d9000000	                            je 0x4002653	      1681	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x253a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1682	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x253e	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1682	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x2541	          0x4863d2	                         movsxd rdx, edx	      1682	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x2544	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1682	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x2549	          0x4885c0	                           test rax, rax	      1682	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x254c	     0xf84c1000000	                            je 0x4002653	      1682	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_7
0x2552	    0x488b05000000	            mov rax, qword [0x04002599] 	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x2559	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x2560	    0x488b35000000	            mov rsi, qword [0x040025a7] 	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x2567	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x256a	          0x4863d0	                         movsxd rdx, eax	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x256d	          0x4889d0	                            mov rax, rdx	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x2570	        0x48c1e003	                              shl rax, 3	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x2574	          0x4801d0	                            add rax, rdx	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x2577	        0x48c1e004	                              shl rax, 4	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x257b	          0x4801f0	                            add rax, rsi	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x257e	            0x8b00	                    mov eax, dword [rax]	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x2580	          0x4863d0	                         movsxd rdx, eax	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x2583	          0x4889d0	                            mov rax, rdx	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x2586	        0x48c1e002	                              shl rax, 2	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x258a	          0x4801d0	                            add rax, rdx	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x258d	        0x48c1e005	                              shl rax, 5	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x2591	          0x4801c8	                            add rax, rcx	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x2594	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x2597	            0x85c0	                           test eax, eax	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x2599	            0x7435	                            je 0x4002610	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x259b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1685	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_7
0x259f	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1685	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_7
0x25a2	          0x4863d2	                         movsxd rdx, edx	      1685	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_7
0x25a5	      0x488b4cd008	       mov rcx, qword [rax + rdx*8 + 8] 	      1685	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_7
0x25aa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1685	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_7
0x25ae	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1685	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_7
0x25b1	          0x4863d2	                         movsxd rdx, edx	      1685	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_7
0x25b4	      0x488b44d008	       mov rax, qword [rax + rdx*8 + 8] 	      1685	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_7
0x25b9	      0xbaffffff7f	                     mov edx, 0x7fffffff	      1685	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_7
0x25be	          0x4889ce	                            mov rsi, rcx	      1685	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_7
0x25c1	          0x4889c7	                            mov rdi, rax	      1685	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_7
0x25c4	      0xe800000000	                          call 0x4002609	      1685	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_7
0x25c9	            0x85c0	                           test eax, eax	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x25cb	           0xf95c0	                                setne al	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x25ce	            0xeb2e	                           jmp 0x400263e	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x25d0	        0x488b45f8	                mov rax, qword [rbp - 8]	      1687	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_8
0x25d4	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1687	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_8
0x25d7	          0x4863d2	                         movsxd rdx, edx	      1687	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_8
0x25da	      0x488b54d008	       mov rdx, qword [rax + rdx*8 + 8] 	      1687	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_8
0x25df	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1687	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_8
0x25e3	          0x8b4de4	             mov ecx, dword [rbp - 0x1c]	      1687	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_8
0x25e6	          0x4863c9	                         movsxd rcx, ecx	      1687	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_8
0x25e9	      0x488b44c808	       mov rax, qword [rax + rcx*8 + 8] 	      1687	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_8
0x25ee	          0x4889d6	                            mov rsi, rdx	      1687	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_8
0x25f1	          0x4889c7	                            mov rdi, rax	      1687	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_8
0x25f4	      0xe800000000	                          call 0x4002639	      1687	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_8
0x25f9	            0x85c0	                           test eax, eax	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x25fb	           0xf95c0	                                setne al	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x25fe	            0x84c0	                             test al, al	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x2600	            0x7510	                           jne 0x4002652	      1684	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8	CALL_6
0x2602	        0x8345e401	               add dword [rbp - 0x1c], 1	      1672	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2
0x2606	        0x837de409	               cmp dword [rbp - 0x1c], 9	      1672	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2
0x260a	     0xf8eebfeffff	                           jle 0x400253b	      1672	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2
0x2610	            0xeb01	                           jmp 0x4002653	      1672	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2
0x2612	              0x90	                                     nop	      1688	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	FOR_2	IF_6	IF_8
0x2613	        0x837de40a	            cmp dword [rbp - 0x1c], 0xa 	      1691	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_9
0x2617	            0x7513	                           jne 0x400266c	      1691	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_9
0x2619	        0x836de001	               sub dword [rbp - 0x20], 1	      1656	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1
0x261d	        0x837de000	               cmp dword [rbp - 0x20], 0	      1656	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1
0x2621	     0xf89cefdffff	                           jns 0x4002435	      1656	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1
0x2627	            0xeb04	                           jmp 0x400266d	      1656	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1
0x2629	              0x90	                                     nop	      1660	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3
0x262a	            0xeb01	                           jmp 0x400266d	      1660	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_3
0x262c	              0x90	                                     nop	      1692	syntax.c	FUNCTION_21	IF_1	ELSE_1	FOR_1	IF_4	IF_9
0x262d	        0x837de000	               cmp dword [rbp - 0x20], 0	      1695	syntax.c	FUNCTION_21	IF_1	IF_10
0x2631	            0x7907	                           jns 0x400267a	      1695	syntax.c	FUNCTION_21	IF_1	IF_10
0x2633	      0xb801000000	                              mov eax, 1	      1696	syntax.c	FUNCTION_21	IF_1	IF_10
0x2638	            0xeb05	                           jmp 0x400267f	      1696	syntax.c	FUNCTION_21	IF_1	IF_10
0x263a	      0xb800000000	                              mov eax, 0	      1698	syntax.c	FUNCTION_21
0x263f	              0xc9	                                   leave	      1699	syntax.c	FUNCTION_21
0x2640	              0xc3	                                     ret	      1699	syntax.c	FUNCTION_21
syn_cmd_iskeyword	FOR,0:DO,0:IF,4:SWITCH,0:functions,0:ELSE,3:WHILE,0:CALL,16	129
0x6123	              0x55	                                push rbp	      3560	syntax.c	FUNCTION_48
0x6124	          0x4889e5	                            mov rbp, rsp	      3560	syntax.c	FUNCTION_48
0x6127	              0x53	                                push rbx	      3560	syntax.c	FUNCTION_48
0x6128	        0x4883ec58	                           sub rsp, 0x58	      3560	syntax.c	FUNCTION_48
0x612c	        0x48897da8	             mov qword [rbp - 0x58], rdi	      3560	syntax.c	FUNCTION_48
0x6130	          0x8975a4	             mov dword [rbp - 0x5c], esi	      3560	syntax.c	FUNCTION_48
0x6133	    0x64488b042528	                mov rax, qword fs:[0x28]	      3560	syntax.c	FUNCTION_48
0x613c	        0x488945e8	             mov qword [rbp - 0x18], rax	      3560	syntax.c	FUNCTION_48
0x6140	            0x31c0	                            xor eax, eax	      3560	syntax.c	FUNCTION_48
0x6142	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3561	syntax.c	FUNCTION_48
0x6146	          0x488b00	                    mov rax, qword [rax]	      3561	syntax.c	FUNCTION_48
0x6149	        0x488945b0	             mov qword [rbp - 0x50], rax	      3561	syntax.c	FUNCTION_48
0x614d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      3565	syntax.c	FUNCTION_48	IF_1
0x6151	          0x8b4030	            mov eax, dword [rax + 0x30] 	      3565	syntax.c	FUNCTION_48	IF_1
0x6154	            0x85c0	                           test eax, eax	      3565	syntax.c	FUNCTION_48	IF_1
0x6156	     0xf85fe010000	                           jne 0x400639a	      3565	syntax.c	FUNCTION_48	IF_1
0x615c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3568	syntax.c	FUNCTION_48	CALL_1
0x6160	          0x4889c7	                            mov rdi, rax	      3568	syntax.c	FUNCTION_48	CALL_1
0x6163	      0xe800000000	                          call 0x40061a8	      3568	syntax.c	FUNCTION_48	CALL_1
0x6168	        0x488945b0	             mov qword [rbp - 0x50], rax	      3568	syntax.c	FUNCTION_48	CALL_1
0x616c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3569	syntax.c	FUNCTION_48	IF_2
0x6170	           0xfb600	                   movzx eax, byte [rax]	      3569	syntax.c	FUNCTION_48	IF_2
0x6173	            0x84c0	                             test al, al	      3569	syntax.c	FUNCTION_48	IF_2
0x6175	            0x7568	                           jne 0x400621f	      3569	syntax.c	FUNCTION_48	IF_2
0x6177	      0xbf00000000	                              mov edi, 0	      3571	syntax.c	FUNCTION_48	IF_2	CALL_2
0x617c	      0xe800000000	                          call 0x40061c1	      3571	syntax.c	FUNCTION_48	IF_2	CALL_2
0x6181	      0xbf00000000	                              mov edi, 0	      3572	syntax.c	FUNCTION_48	IF_2	CALL_4
0x6186	      0xe800000000	                          call 0x40061cb	      3572	syntax.c	FUNCTION_48	IF_2	CALL_4
0x618b	          0x4889c7	                            mov rdi, rax	      3572	syntax.c	FUNCTION_48	IF_2	CALL_4
0x618e	      0xe800000000	                          call 0x40061d3	      3572	syntax.c	FUNCTION_48	IF_2	CALL_4
0x6193	    0x488b05000000	            mov rax, qword [0x040061da] 	      3573	syntax.c	FUNCTION_48	IF_2	IF_3
0x619a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3573	syntax.c	FUNCTION_48	IF_2	IF_3
0x619e	    0x488b90b00400	           mov rdx, qword [rax + 0x4b0] 	      3573	syntax.c	FUNCTION_48	IF_2	IF_3
0x61a5	    0x488b05000000	            mov rax, qword [0x040061ec] 	      3573	syntax.c	FUNCTION_48	IF_2	IF_3
0x61ac	          0x4839c2	                            cmp rdx, rax	      3573	syntax.c	FUNCTION_48	IF_2	IF_3
0x61af	            0x741f	                            je 0x4006210	      3573	syntax.c	FUNCTION_48	IF_2	IF_3
0x61b1	    0x488b05000000	            mov rax, qword [0x040061f8] 	      3574	syntax.c	FUNCTION_48	IF_2	CALL_5
0x61b8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3574	syntax.c	FUNCTION_48	IF_2	CALL_5
0x61bc	    0x488b80b00400	           mov rax, qword [rax + 0x4b0] 	      3574	syntax.c	FUNCTION_48	IF_2	CALL_5
0x61c3	          0x4889c7	                            mov rdi, rax	      3574	syntax.c	FUNCTION_48	IF_2	CALL_5
0x61c6	      0xe800000000	                          call 0x400620b	      3574	syntax.c	FUNCTION_48	IF_2	CALL_5
0x61cb	      0xe974010000	                           jmp 0x4006384	      3574	syntax.c	FUNCTION_48	IF_2	CALL_5
0x61d0	      0xbf00000000	                              mov edi, 0	      3576	syntax.c	FUNCTION_48	IF_2	CALL_6
0x61d5	      0xe800000000	                          call 0x400621a	      3576	syntax.c	FUNCTION_48	IF_2	CALL_6
0x61da	      0xe965010000	                           jmp 0x4006384	      3576	syntax.c	FUNCTION_48	IF_2	CALL_6
0x61df	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3580	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_7
0x61e3	      0xba05000000	                              mov edx, 5	      3580	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_7
0x61e8	      0xbe00000000	                              mov esi, 0	      3580	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_7
0x61ed	          0x4889c7	                            mov rdi, rax	      3580	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_7
0x61f0	      0xe800000000	                          call 0x4006235	      3580	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_7
0x61f5	            0x85c0	                           test eax, eax	      3580	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_7
0x61f7	            0x754d	                           jne 0x4006286	      3580	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_7
0x61f9	    0x488b05000000	            mov rax, qword [0x04006240] 	      3582	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_8
0x6200	    0x488d88a00900	                  lea rcx, [rax + 0x9a0]	      3582	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_8
0x6207	    0x488b05000000	            mov rax, qword [0x0400624e] 	      3582	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_8
0x620e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3582	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_8
0x6212	    0x48058c040000	                          add rax, 0x48c	      3582	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_8
0x6218	      0xba20000000	                           mov edx, 0x20	      3582	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_8
0x621d	          0x4889ce	                            mov rsi, rcx	      3582	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_8
0x6220	          0x4889c7	                            mov rdi, rax	      3582	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_8
0x6223	      0xe800000000	                          call 0x4006268	      3582	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_8
0x6228	    0x488b05000000	            mov rax, qword [0x0400626f] 	      3584	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_9
0x622f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3584	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_9
0x6233	    0x4805b0040000	                          add rax, 0x4b0	      3584	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_9
0x6239	          0x4889c7	                            mov rdi, rax	      3584	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_9
0x623c	      0xe800000000	                          call 0x4006281	      3584	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_9
0x6241	      0xe9fe000000	                           jmp 0x4006384	      3584	syntax.c	FUNCTION_48	ELSE_2	IF_4	CALL_9
0x6246	    0x488b05000000	            mov rax, qword [0x0400628d] 	      3588	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_10
0x624d	    0x488d88a00900	                  lea rcx, [rax + 0x9a0]	      3588	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_10
0x6254	        0x488d45c0	                   lea rax, [rbp - 0x40]	      3588	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_10
0x6258	      0xba20000000	                           mov edx, 0x20	      3588	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_10
0x625d	          0x4889ce	                            mov rsi, rcx	      3588	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_10
0x6260	          0x4889c7	                            mov rdi, rax	      3588	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_10
0x6263	      0xe800000000	                          call 0x40062a8	      3588	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_10
0x6268	    0x488b05000000	            mov rax, qword [0x040062af] 	      3589	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x626f	    0x488b80b81400	          mov rax, qword [rax + 0x14b8] 	      3589	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x6276	        0x488945b8	             mov qword [rbp - 0x48], rax	      3589	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x627a	    0x488b1d000000	            mov rbx, qword [0x040062c1] 	      3590	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_11
0x6281	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      3590	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_11
0x6285	          0x4889c7	                            mov rdi, rax	      3590	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_11
0x6288	      0xe800000000	                          call 0x40062cd	      3590	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_11
0x628d	    0x488983b81400	          mov qword [rbx + 0x14b8], rax 	      3590	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_11
0x6294	    0x488b05000000	            mov rax, qword [0x040062db] 	      3592	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_12
0x629b	      0xbe00000000	                              mov esi, 0	      3592	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_12
0x62a0	          0x4889c7	                            mov rdi, rax	      3592	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_12
0x62a3	      0xe800000000	                          call 0x40062e8	      3592	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_12
0x62a8	    0x488b05000000	            mov rax, qword [0x040062ef] 	      3593	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_13
0x62af	    0x488d88a00900	                  lea rcx, [rax + 0x9a0]	      3593	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_13
0x62b6	    0x488b05000000	            mov rax, qword [0x040062fd] 	      3593	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_13
0x62bd	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3593	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_13
0x62c1	    0x48058c040000	                          add rax, 0x48c	      3593	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_13
0x62c7	      0xba20000000	                           mov edx, 0x20	      3593	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_13
0x62cc	          0x4889ce	                            mov rsi, rcx	      3593	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_13
0x62cf	          0x4889c7	                            mov rdi, rax	      3593	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_13
0x62d2	      0xe800000000	                          call 0x4006317	      3593	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_13
0x62d7	    0x488b05000000	            mov rax, qword [0x0400631e] 	      3595	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_14
0x62de	    0x488d88a00900	                  lea rcx, [rax + 0x9a0]	      3595	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_14
0x62e5	        0x488d45c0	                   lea rax, [rbp - 0x40]	      3595	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_14
0x62e9	      0xba20000000	                           mov edx, 0x20	      3595	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_14
0x62ee	          0x4889c6	                            mov rsi, rax	      3595	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_14
0x62f1	          0x4889cf	                            mov rdi, rcx	      3595	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_14
0x62f4	      0xe800000000	                          call 0x4006339	      3595	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_14
0x62f9	    0x488b05000000	            mov rax, qword [0x04006340] 	      3596	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_15
0x6300	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3596	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_15
0x6304	    0x4805b0040000	                          add rax, 0x4b0	      3596	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_15
0x630a	          0x4889c7	                            mov rdi, rax	      3596	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_15
0x630d	      0xe800000000	                          call 0x4006352	      3596	syntax.c	FUNCTION_48	ELSE_2	ELSE_3	CALL_15
0x6312	    0x488b05000000	            mov rax, qword [0x04006359] 	      3597	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x6319	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3597	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x631d	    0x488b15000000	            mov rdx, qword [0x04006364] 	      3597	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x6324	    0x488b92b81400	          mov rdx, qword [rdx + 0x14b8] 	      3597	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x632b	    0x488990b00400	            mov qword [rax + 0x4b0], rdx	      3597	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x6332	    0x488b05000000	            mov rax, qword [0x04006379] 	      3598	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x6339	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      3598	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x633d	    0x488990b81400	          mov qword [rax + 0x14b8], rdx 	      3598	syntax.c	FUNCTION_48	ELSE_2	ELSE_3
0x6344	    0x488b05000000	            mov rax, qword [0x0400638b] 	      3601	syntax.c	FUNCTION_48	CALL_16
0x634b	      0xbe28000000	                           mov esi, 0x28	      3601	syntax.c	FUNCTION_48	CALL_16
0x6350	          0x4889c7	                            mov rdi, rax	      3601	syntax.c	FUNCTION_48	CALL_16
0x6353	      0xe800000000	                          call 0x4006398	      3601	syntax.c	FUNCTION_48	CALL_16
0x6358	            0xeb01	                           jmp 0x400639b	      3601	syntax.c	FUNCTION_48	CALL_16
0x635a	              0x90	                                     nop	      3566	syntax.c	FUNCTION_48	IF_1
0x635b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3602	syntax.c	FUNCTION_48
0x635f	    0x644833042528	                xor rax, qword fs:[0x28]	      3602	syntax.c	FUNCTION_48
0x6368	            0x7405	                            je 0x40063af	      3602	syntax.c	FUNCTION_48
0x636a	      0xe800000000	                          call 0x40063af	      3602	syntax.c	FUNCTION_48
0x636f	        0x4883c458	                           add rsp, 0x58	      3602	syntax.c	FUNCTION_48
0x6373	              0x5b	                                 pop rbx	      3602	syntax.c	FUNCTION_48
0x6374	              0x5d	                                 pop rbp	      3602	syntax.c	FUNCTION_48
0x6375	              0xc3	                                     ret	      3602	syntax.c	FUNCTION_48
get_syntime_arg	FOR,0:DO,0:IF,0:SWITCH,1:functions,0:ELSE,0:WHILE,0:CALL,0	28
0xcef2	              0x55	                                push rbp	      6725	syntax.c	FUNCTION_110
0xcef3	          0x4889e5	                            mov rbp, rsp	      6725	syntax.c	FUNCTION_110
0xcef6	        0x48897df8	                mov qword [rbp - 8], rdi	      6725	syntax.c	FUNCTION_110
0xcefa	          0x8975f4	              mov dword [rbp - 0xc], esi	      6725	syntax.c	FUNCTION_110
0xcefd	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      6726	syntax.c	FUNCTION_110	SWITCH_1
0xcf00	          0x83f801	                              cmp eax, 1	      6726	syntax.c	FUNCTION_110	SWITCH_1
0xcf03	            0x741e	                            je 0x400cf63	      6726	syntax.c	FUNCTION_110	SWITCH_1
0xcf05	          0x83f801	                              cmp eax, 1	      6726	syntax.c	FUNCTION_110	SWITCH_1
0xcf08	            0x7f06	                            jg 0x400cf50	      6726	syntax.c	FUNCTION_110	SWITCH_1
0xcf0a	            0x85c0	                           test eax, eax	      6726	syntax.c	FUNCTION_110	SWITCH_1
0xcf0c	            0x740e	                            je 0x400cf5c	      6726	syntax.c	FUNCTION_110	SWITCH_1
0xcf0e	            0xeb28	                           jmp 0x400cf78	      6726	syntax.c	FUNCTION_110	SWITCH_1
0xcf10	          0x83f802	                              cmp eax, 2	      6726	syntax.c	FUNCTION_110	SWITCH_1
0xcf13	            0x7415	                            je 0x400cf6a	      6726	syntax.c	FUNCTION_110	SWITCH_1
0xcf15	          0x83f803	                              cmp eax, 3	      6726	syntax.c	FUNCTION_110	SWITCH_1
0xcf18	            0x7417	                            je 0x400cf71	      6726	syntax.c	FUNCTION_110	SWITCH_1
0xcf1a	            0xeb1c	                           jmp 0x400cf78	      6726	syntax.c	FUNCTION_110	SWITCH_1
0xcf1c	      0xb800000000	                              mov eax, 0	      6728	syntax.c	FUNCTION_110	SWITCH_1
0xcf21	            0xeb1a	                           jmp 0x400cf7d	      6728	syntax.c	FUNCTION_110	SWITCH_1
0xcf23	      0xb800000000	                              mov eax, 0	      6729	syntax.c	FUNCTION_110	SWITCH_1
0xcf28	            0xeb13	                           jmp 0x400cf7d	      6729	syntax.c	FUNCTION_110	SWITCH_1
0xcf2a	      0xb800000000	                              mov eax, 0	      6730	syntax.c	FUNCTION_110	SWITCH_1
0xcf2f	            0xeb0c	                           jmp 0x400cf7d	      6730	syntax.c	FUNCTION_110	SWITCH_1
0xcf31	      0xb800000000	                              mov eax, 0	      6731	syntax.c	FUNCTION_110	SWITCH_1
0xcf36	            0xeb05	                           jmp 0x400cf7d	      6731	syntax.c	FUNCTION_110	SWITCH_1
0xcf38	      0xb800000000	                              mov eax, 0	      6733	syntax.c	FUNCTION_110
0xcf3d	              0x5d	                                 pop rbp	      6734	syntax.c	FUNCTION_110
0xcf3e	              0xc3	                                     ret	      6734	syntax.c	FUNCTION_110
syn_cmd_list	FOR,2:DO,0:IF,11:SWITCH,0:functions,0:ELSE,7:WHILE,1:CALL,39	226
0x6eb4	              0x55	                                push rbp	      3935	syntax.c	FUNCTION_63
0x6eb5	          0x4889e5	                            mov rbp, rsp	      3935	syntax.c	FUNCTION_63
0x6eb8	        0x4883ec30	                           sub rsp, 0x30	      3935	syntax.c	FUNCTION_63
0x6ebc	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3935	syntax.c	FUNCTION_63
0x6ec0	          0x8975d4	             mov dword [rbp - 0x2c], esi	      3935	syntax.c	FUNCTION_63
0x6ec3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3936	syntax.c	FUNCTION_63
0x6ec7	          0x488b00	                    mov rax, qword [rax]	      3936	syntax.c	FUNCTION_63
0x6eca	        0x488945f0	             mov qword [rbp - 0x10], rax	      3936	syntax.c	FUNCTION_63
0x6ece	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3940	syntax.c	FUNCTION_63	CALL_1
0x6ed2	          0x4889c7	                            mov rdi, rax	      3940	syntax.c	FUNCTION_63	CALL_1
0x6ed5	      0xe800000000	                          call 0x4006f1a	      3940	syntax.c	FUNCTION_63	CALL_1
0x6eda	          0x4889c2	                            mov rdx, rax	      3940	syntax.c	FUNCTION_63	CALL_1
0x6edd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3940	syntax.c	FUNCTION_63	CALL_1
0x6ee1	        0x48895008	                mov qword [rax + 8], rdx	      3940	syntax.c	FUNCTION_63	CALL_1
0x6ee5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3941	syntax.c	FUNCTION_63	IF_1
0x6ee9	          0x8b4030	            mov eax, dword [rax + 0x30] 	      3941	syntax.c	FUNCTION_63	IF_1
0x6eec	            0x85c0	                           test eax, eax	      3941	syntax.c	FUNCTION_63	IF_1
0x6eee	     0xf852e030000	                           jne 0x4007262	      3941	syntax.c	FUNCTION_63	IF_1
0x6ef4	    0x488b05000000	            mov rax, qword [0x04006f3b] 	      3944	syntax.c	FUNCTION_63	IF_2	CALL_2
0x6efb	          0x4889c7	                            mov rdi, rax	      3944	syntax.c	FUNCTION_63	IF_2	CALL_2
0x6efe	      0xe800000000	                          call 0x4006f43	      3944	syntax.c	FUNCTION_63	IF_2	CALL_2
0x6f03	            0x85c0	                           test eax, eax	      3944	syntax.c	FUNCTION_63	IF_2	CALL_2
0x6f05	            0x7517	                           jne 0x4006f5e	      3944	syntax.c	FUNCTION_63	IF_2	CALL_2
0x6f07	      0xbf00000000	                              mov edi, 0	      3946	syntax.c	FUNCTION_63	IF_2	CALL_4
0x6f0c	      0xe800000000	                          call 0x4006f51	      3946	syntax.c	FUNCTION_63	IF_2	CALL_4
0x6f11	          0x4889c7	                            mov rdi, rax	      3946	syntax.c	FUNCTION_63	IF_2	CALL_4
0x6f14	      0xe800000000	                          call 0x4006f59	      3946	syntax.c	FUNCTION_63	IF_2	CALL_4
0x6f19	      0xe905030000	                           jmp 0x4007263	      3947	syntax.c	FUNCTION_63	IF_2
0x6f1e	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      3950	syntax.c	FUNCTION_63	IF_3
0x6f22	     0xf843c010000	                            je 0x40070a4	      3950	syntax.c	FUNCTION_63	IF_3
0x6f28	    0x488b05000000	            mov rax, qword [0x04006f6f] 	      3952	syntax.c	FUNCTION_63	IF_3	IF_4
0x6f2f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3952	syntax.c	FUNCTION_63	IF_3	IF_4
0x6f33	    0x8b809c020000	           mov eax, dword [rax + 0x29c] 	      3952	syntax.c	FUNCTION_63	IF_3	IF_4
0x6f39	          0x83e001	                              and eax, 1	      3952	syntax.c	FUNCTION_63	IF_3	IF_4
0x6f3c	            0x85c0	                           test eax, eax	      3952	syntax.c	FUNCTION_63	IF_3	IF_4
0x6f3e	            0x7421	                            je 0x4006fa1	      3952	syntax.c	FUNCTION_63	IF_3	IF_4
0x6f40	      0xbf00000000	                              mov edi, 0	      3954	syntax.c	FUNCTION_63	IF_3	IF_4	CALL_6
0x6f45	      0xe800000000	                          call 0x4006f8a	      3954	syntax.c	FUNCTION_63	IF_3	IF_4	CALL_6
0x6f4a	          0x4889c7	                            mov rdi, rax	      3954	syntax.c	FUNCTION_63	IF_3	IF_4	CALL_6
0x6f4d	      0xe800000000	                          call 0x4006f92	      3954	syntax.c	FUNCTION_63	IF_3	IF_4	CALL_6
0x6f52	      0xe8ce020000	                  call sym.syn_lines_msg	      3955	syntax.c	FUNCTION_63	IF_3	IF_4	CALL_7
0x6f57	      0xe8c5030000	                  call sym.syn_match_msg	      3956	syntax.c	FUNCTION_63	IF_3	IF_4	CALL_8
0x6f5c	      0xe9c2020000	                           jmp 0x4007263	      3957	syntax.c	FUNCTION_63	IF_3	IF_4
0x6f61	    0x488b05000000	            mov rax, qword [0x04006fa8] 	      3959	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5
0x6f68	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3959	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5
0x6f6c	    0x8b809c020000	           mov eax, dword [rax + 0x29c] 	      3959	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5
0x6f72	          0x83e002	                              and eax, 2	      3959	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5
0x6f75	            0x85c0	                           test eax, eax	      3959	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5
0x6f77	            0x7576	                           jne 0x400702f	      3959	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5
0x6f79	    0x488b05000000	            mov rax, qword [0x04006fc0] 	      3961	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	IF_6
0x6f80	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3961	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	IF_6
0x6f84	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	      3961	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	IF_6
0x6f8b	          0x4885c0	                           test rax, rax	      3961	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	IF_6
0x6f8e	            0x7517	                           jne 0x4006fe7	      3961	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	IF_6
0x6f90	      0xbf00000000	                              mov edi, 0	      3962	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	CALL_10
0x6f95	      0xe800000000	                          call 0x4006fda	      3962	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	CALL_10
0x6f9a	          0x4889c7	                            mov rdi, rax	      3962	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	CALL_10
0x6f9d	      0xe800000000	                          call 0x4006fe2	      3962	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	CALL_10
0x6fa2	      0xe97c020000	                           jmp 0x4007263	      3970	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5
0x6fa7	      0xbf00000000	                              mov edi, 0	      3965	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_12
0x6fac	      0xe800000000	                          call 0x4006ff1	      3965	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_12
0x6fb1	          0x4889c7	                            mov rdi, rax	      3965	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_12
0x6fb4	      0xe800000000	                          call 0x4006ff9	      3965	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_12
0x6fb9	    0x488b05000000	            mov rax, qword [0x04007000] 	      3966	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_13
0x6fc0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3966	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_13
0x6fc4	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	      3966	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_13
0x6fcb	          0x4889c7	                            mov rdi, rax	      3966	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_13
0x6fce	      0xe800000000	                          call 0x4007013	      3966	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_13
0x6fd3	      0xbf00000000	                              mov edi, 0	      3967	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_15
0x6fd8	      0xe800000000	                          call 0x400701d	      3967	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_15
0x6fdd	          0x4889c7	                            mov rdi, rax	      3967	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_15
0x6fe0	      0xe800000000	                          call 0x4007025	      3967	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_15
0x6fe5	      0xe837030000	                  call sym.syn_match_msg	      3968	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5	ELSE_2	CALL_16
0x6fea	      0xe934020000	                           jmp 0x4007263	      3970	syntax.c	FUNCTION_63	IF_3	ELSE_1	IF_5
0x6fef	      0xbf00000000	                              mov edi, 0	      3972	syntax.c	FUNCTION_63	IF_3	CALL_18
0x6ff4	      0xe800000000	                          call 0x4007039	      3972	syntax.c	FUNCTION_63	IF_3	CALL_18
0x6ff9	          0x4889c7	                            mov rdi, rax	      3972	syntax.c	FUNCTION_63	IF_3	CALL_18
0x6ffc	      0xe800000000	                          call 0x4007041	      3972	syntax.c	FUNCTION_63	IF_3	CALL_18
0x7001	    0x488b05000000	            mov rax, qword [0x04007048] 	      3973	syntax.c	FUNCTION_63	IF_3	IF_7
0x7008	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3973	syntax.c	FUNCTION_63	IF_3	IF_7
0x700c	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	      3973	syntax.c	FUNCTION_63	IF_3	IF_7
0x7013	          0x4885c0	                           test rax, rax	      3973	syntax.c	FUNCTION_63	IF_3	IF_7
0x7016	            0x7f2e	                            jg 0x4007086	      3973	syntax.c	FUNCTION_63	IF_3	IF_7
0x7018	    0x488b05000000	            mov rax, qword [0x0400705f] 	      3974	syntax.c	FUNCTION_63	IF_3	IF_7
0x701f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3974	syntax.c	FUNCTION_63	IF_3	IF_7
0x7023	    0x488b80b00200	           mov rax, qword [rax + 0x2b0] 	      3974	syntax.c	FUNCTION_63	IF_3	IF_7
0x702a	          0x4885c0	                           test rax, rax	      3974	syntax.c	FUNCTION_63	IF_3	IF_7
0x702d	            0x7f17	                            jg 0x4007086	      3974	syntax.c	FUNCTION_63	IF_3	IF_7
0x702f	    0x488b05000000	            mov rax, qword [0x04007076] 	      3975	syntax.c	FUNCTION_63	IF_3	IF_7
0x7036	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3975	syntax.c	FUNCTION_63	IF_3	IF_7
0x703a	    0x488b80b80200	           mov rax, qword [rax + 0x2b8] 	      3975	syntax.c	FUNCTION_63	IF_3	IF_7
0x7041	          0x4885c0	                           test rax, rax	      3975	syntax.c	FUNCTION_63	IF_3	IF_7
0x7044	            0x7e30	                           jle 0x40070b6	      3975	syntax.c	FUNCTION_63	IF_3	IF_7
0x7046	      0xbf00000000	                              mov edi, 0	      3977	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_20
0x704b	      0xe800000000	                          call 0x4007090	      3977	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_20
0x7050	          0x4889c7	                            mov rdi, rax	      3977	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_20
0x7053	      0xe800000000	                          call 0x4007098	      3977	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_20
0x7058	      0xe8c8010000	                  call sym.syn_lines_msg	      3978	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_21
0x705d	      0xe8bf020000	                  call sym.syn_match_msg	      3979	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_22
0x7062	            0xeb12	                           jmp 0x40070b6	      3979	syntax.c	FUNCTION_63	IF_3	IF_7	CALL_22
0x7064	      0xbf00000000	                              mov edi, 0	      3983	syntax.c	FUNCTION_63	CALL_24
0x7069	      0xe800000000	                          call 0x40070ae	      3983	syntax.c	FUNCTION_63	CALL_24
0x706e	          0x4889c7	                            mov rdi, rax	      3983	syntax.c	FUNCTION_63	CALL_24
0x7071	      0xe800000000	                          call 0x40070b6	      3983	syntax.c	FUNCTION_63	CALL_24
0x7076	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3984	syntax.c	FUNCTION_63	IF_8	CALL_25
0x707a	           0xfb600	                   movzx eax, byte [rax]	      3984	syntax.c	FUNCTION_63	IF_8	CALL_25
0x707d	           0xfb6c0	                           movzx eax, al	      3984	syntax.c	FUNCTION_63	IF_8	CALL_25
0x7080	            0x89c7	                            mov edi, eax	      3984	syntax.c	FUNCTION_63	IF_8	CALL_25
0x7082	      0xe800000000	                          call 0x40070c7	      3984	syntax.c	FUNCTION_63	IF_8	CALL_25
0x7087	            0x85c0	                           test eax, eax	      3984	syntax.c	FUNCTION_63	IF_8	CALL_25
0x7089	     0xf8457010000	                            je 0x4007226	      3984	syntax.c	FUNCTION_63	IF_8	CALL_25
0x708f	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x7096	            0xeb18	                           jmp 0x40070f0	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x7098	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      3990	syntax.c	FUNCTION_63	IF_8	CALL_26
0x709b	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3990	syntax.c	FUNCTION_63	IF_8	CALL_26
0x709e	      0xba00000000	                              mov edx, 0	      3990	syntax.c	FUNCTION_63	IF_8	CALL_26
0x70a3	            0x89ce	                            mov esi, ecx	      3990	syntax.c	FUNCTION_63	IF_8	CALL_26
0x70a5	            0x89c7	                            mov edi, eax	      3990	syntax.c	FUNCTION_63	IF_8	CALL_26
0x70a7	      0xe8d1020000	                   call sym.syn_list_one	      3990	syntax.c	FUNCTION_63	IF_8	CALL_26
0x70ac	        0x8345ec01	               add dword [rbp - 0x14], 1	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x70b0	    0x8b0500000000	            mov eax, dword [0x040070f6] 	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x70b6	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x70b9	            0x7c0a	                            jl 0x4007105	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x70bb	    0x8b0500000000	            mov eax, dword [0x04007101] 	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x70c1	            0x85c0	                           test eax, eax	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x70c3	            0x74d3	                            je 0x40070d8	      3989	syntax.c	FUNCTION_63	IF_8	FOR_1
0x70c5	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x70cc	            0xeb0e	                           jmp 0x400711c	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x70ce	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3992	syntax.c	FUNCTION_63	IF_8	CALL_27
0x70d1	            0x89c7	                            mov edi, eax	      3992	syntax.c	FUNCTION_63	IF_8	CALL_27
0x70d3	      0xe868080000	               call sym.syn_list_cluster	      3992	syntax.c	FUNCTION_63	IF_8	CALL_27
0x70d8	        0x8345ec01	               add dword [rbp - 0x14], 1	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x70dc	    0x488b05000000	            mov rax, qword [0x04007123] 	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x70e3	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x70e7	    0x8b8078020000	           mov eax, dword [rax + 0x278] 	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x70ed	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x70f0	     0xf8e13010000	                           jle 0x4007249	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x70f6	    0x8b0500000000	            mov eax, dword [0x0400713c] 	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x70fc	            0x85c0	                           test eax, eax	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x70fe	            0x74ce	                            je 0x400710e	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x7100	      0xe904010000	                           jmp 0x4007249	      3991	syntax.c	FUNCTION_63	IF_8	FOR_2
0x7105	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4001	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_29
0x7109	          0x4889c7	                            mov rdi, rax	      4001	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_29
0x710c	      0xe800000000	                          call 0x4007151	      4001	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_29
0x7111	        0x488945f8	                mov qword [rbp - 8], rax	      4001	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_29
0x7115	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4002	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9
0x7119	           0xfb600	                   movzx eax, byte [rax]	      4002	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9
0x711c	            0x3c40	                            cmp al, 0x40	      4002	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9
0x711e	            0x755d	                           jne 0x40071bd	      4002	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9
0x7120	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4004	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_30
0x7124	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4004	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_30
0x7128	          0x4829c2	                            sub rdx, rax	      4004	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_30
0x712b	          0x4889d0	                            mov rax, rdx	      4004	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_30
0x712e	          0x83e801	                              sub eax, 1	      4004	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_30
0x7131	            0x89c2	                            mov edx, eax	      4004	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_30
0x7133	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4004	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_30
0x7137	        0x4883c001	                              add rax, 1	      4004	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_30
0x713b	            0x89d6	                            mov esi, edx	      4004	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_30
0x713d	          0x4889c7	                            mov rdi, rax	      4004	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_30
0x7140	      0xe875380000	               call sym.syn_scl_namen2id	      4004	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_30
0x7145	          0x8945ec	             mov dword [rbp - 0x14], eax	      4004	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_30
0x7148	        0x837dec00	               cmp dword [rbp - 0x14], 0	      4005	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	IF_10
0x714c	            0x751e	                           jne 0x40071ac	      4005	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	IF_10
0x714e	      0xbf00000000	                              mov edi, 0	      4006	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_32
0x7153	      0xe800000000	                          call 0x4007198	      4006	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_32
0x7158	          0x4889c2	                            mov rdx, rax	      4006	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_32
0x715b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4006	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_32
0x715f	          0x4889c6	                            mov rsi, rax	      4006	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_32
0x7162	          0x4889d7	                            mov rdi, rdx	      4006	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_32
0x7165	      0xe800000000	                          call 0x40071aa	      4006	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_32
0x716a	            0xeb6a	                           jmp 0x4007216	      4006	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_32
0x716c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4008	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_33
0x716f	      0x2dd8590000	                         sub eax, 0x59d8	      4008	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_33
0x7174	            0x89c7	                            mov edi, eax	      4008	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_33
0x7176	      0xe8c5070000	               call sym.syn_list_cluster	      4008	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_33
0x717b	            0xeb59	                           jmp 0x4007216	      4008	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	IF_9	CALL_33
0x717d	        0x488b55f8	                mov rdx, qword [rbp - 8]	      4012	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_34
0x7181	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4012	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_34
0x7185	          0x4829c2	                            sub rdx, rax	      4012	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_34
0x7188	          0x4889d0	                            mov rax, rdx	      4012	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_34
0x718b	            0x89c2	                            mov edx, eax	      4012	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_34
0x718d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4012	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_34
0x7191	            0x89d6	                            mov esi, edx	      4012	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_34
0x7193	          0x4889c7	                            mov rdi, rax	      4012	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_34
0x7196	      0xe800000000	                          call 0x40071db	      4012	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_34
0x719b	          0x8945ec	             mov dword [rbp - 0x14], eax	      4012	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_34
0x719e	        0x837dec00	               cmp dword [rbp - 0x14], 0	      4013	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	IF_11
0x71a2	            0x751e	                           jne 0x4007202	      4013	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	IF_11
0x71a4	      0xbf00000000	                              mov edi, 0	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x71a9	      0xe800000000	                          call 0x40071ee	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x71ae	          0x4889c2	                            mov rdx, rax	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x71b1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x71b5	          0x4889c6	                            mov rsi, rax	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x71b8	          0x4889d7	                            mov rdi, rdx	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x71bb	      0xe800000000	                          call 0x4007200	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x71c0	            0xeb14	                           jmp 0x4007216	      4014	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_36
0x71c2	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      4016	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_37
0x71c5	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4016	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_37
0x71c8	      0xba01000000	                              mov edx, 1	      4016	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_37
0x71cd	            0x89ce	                            mov esi, ecx	      4016	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_37
0x71cf	            0x89c7	                            mov edi, eax	      4016	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_37
0x71d1	      0xe8a7010000	                   call sym.syn_list_one	      4016	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	ELSE_6	CALL_37
0x71d6	        0x488b45f8	                mov rax, qword [rbp - 8]	      4018	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_38
0x71da	          0x4889c7	                            mov rdi, rax	      4018	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_38
0x71dd	      0xe800000000	                          call 0x4007222	      4018	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_38
0x71e2	        0x488945f0	             mov qword [rbp - 0x10], rax	      4018	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_38
0x71e6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x71ea	           0xfb600	                   movzx eax, byte [rax]	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x71ed	           0xfb6c0	                           movzx eax, al	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x71f0	            0x89c7	                            mov edi, eax	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x71f2	      0xe800000000	                          call 0x4007237	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x71f7	            0x85c0	                           test eax, eax	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x71f9	            0x750e	                           jne 0x4007249	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x71fb	    0x8b0500000000	            mov eax, dword [0x04007241] 	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x7201	            0x85c0	                           test eax, eax	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x7203	     0xf84fcfeffff	                            je 0x4007145	      3999	syntax.c	FUNCTION_63	ELSE_4	WHILE_1	CALL_28
0x7209	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4021	syntax.c	FUNCTION_63	CALL_39
0x720d	          0x4889c7	                            mov rdi, rax	      4021	syntax.c	FUNCTION_63	CALL_39
0x7210	      0xe800000000	                          call 0x4007255	      4021	syntax.c	FUNCTION_63	CALL_39
0x7215	          0x4889c2	                            mov rdx, rax	      4021	syntax.c	FUNCTION_63	CALL_39
0x7218	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4021	syntax.c	FUNCTION_63	CALL_39
0x721c	        0x48895008	                mov qword [rax + 8], rdx	      4021	syntax.c	FUNCTION_63	CALL_39
0x7220	            0xeb01	                           jmp 0x4007263	      4021	syntax.c	FUNCTION_63	CALL_39
0x7222	              0x90	                                     nop	      3942	syntax.c	FUNCTION_63	IF_1
0x7223	              0xc9	                                   leave	      4022	syntax.c	FUNCTION_63
0x7224	              0xc3	                                     ret	      4022	syntax.c	FUNCTION_63
ex_ownsyntax	FOR,0:DO,0:IF,4:SWITCH,0:functions,0:ELSE,1:WHILE,0:CALL,16	99
0xc682	              0x55	                                push rbp	      6398	syntax.c	FUNCTION_96
0xc683	          0x4889e5	                            mov rbp, rsp	      6398	syntax.c	FUNCTION_96
0xc686	              0x53	                                push rbx	      6398	syntax.c	FUNCTION_96
0xc687	        0x4883ec28	                           sub rsp, 0x28	      6398	syntax.c	FUNCTION_96
0xc68b	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      6398	syntax.c	FUNCTION_96
0xc68f	    0x488b05000000	            mov rax, qword [0x0400c6d6] 	      6402	syntax.c	FUNCTION_96	IF_1
0xc696	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      6402	syntax.c	FUNCTION_96	IF_1
0xc69a	    0x488b05000000	            mov rax, qword [0x0400c6e1] 	      6402	syntax.c	FUNCTION_96	IF_1
0xc6a1	        0x488b4008	                mov rax, qword [rax + 8]	      6402	syntax.c	FUNCTION_96	IF_1
0xc6a5	    0x480568170000	                         add rax, 0x1768	      6402	syntax.c	FUNCTION_96	IF_1
0xc6ab	          0x4839c2	                            cmp rdx, rax	      6402	syntax.c	FUNCTION_96	IF_1
0xc6ae	     0xf85d3000000	                           jne 0x400c7c7	      6402	syntax.c	FUNCTION_96	IF_1
0xc6b4	    0x488b1d000000	            mov rbx, qword [0x0400c6fb] 	      6404	syntax.c	FUNCTION_96	IF_1	CALL_1
0xc6bb	      0xbfb8040000	                          mov edi, 0x4b8	      6404	syntax.c	FUNCTION_96	IF_1	CALL_1
0xc6c0	      0xe800000000	                          call 0x400c705	      6404	syntax.c	FUNCTION_96	IF_1	CALL_1
0xc6c5	        0x48894310	             mov qword [rbx + 0x10], rax	      6404	syntax.c	FUNCTION_96	IF_1	CALL_1
0xc6c9	    0x488b05000000	            mov rax, qword [0x0400c710] 	      6405	syntax.c	FUNCTION_96	IF_1	CALL_2
0xc6d0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6405	syntax.c	FUNCTION_96	IF_1	CALL_2
0xc6d4	      0xbab8040000	                          mov edx, 0x4b8	      6405	syntax.c	FUNCTION_96	IF_1	CALL_2
0xc6d9	      0xbe00000000	                              mov esi, 0	      6405	syntax.c	FUNCTION_96	IF_1	CALL_2
0xc6de	          0x4889c7	                            mov rdi, rax	      6405	syntax.c	FUNCTION_96	IF_1	CALL_2
0xc6e1	      0xe800000000	                          call 0x400c726	      6405	syntax.c	FUNCTION_96	IF_1	CALL_2
0xc6e6	    0x488b05000000	            mov rax, qword [0x0400c72d] 	      6406	syntax.c	FUNCTION_96	IF_1	CALL_3
0xc6ed	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6406	syntax.c	FUNCTION_96	IF_1	CALL_3
0xc6f1	          0x4889c7	                            mov rdi, rax	      6406	syntax.c	FUNCTION_96	IF_1	CALL_3
0xc6f4	      0xe800000000	                          call 0x400c739	      6406	syntax.c	FUNCTION_96	IF_1	CALL_3
0xc6f9	    0x488b05000000	            mov rax, qword [0x0400c740] 	      6407	syntax.c	FUNCTION_96	IF_1	CALL_4
0xc700	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6407	syntax.c	FUNCTION_96	IF_1	CALL_4
0xc704	    0x480528010000	                          add rax, 0x128	      6407	syntax.c	FUNCTION_96	IF_1	CALL_4
0xc70a	          0x4889c7	                            mov rdi, rax	      6407	syntax.c	FUNCTION_96	IF_1	CALL_4
0xc70d	      0xe800000000	                          call 0x400c752	      6407	syntax.c	FUNCTION_96	IF_1	CALL_4
0xc712	    0x488b05000000	            mov rax, qword [0x0400c759] 	      6410	syntax.c	FUNCTION_96	IF_1
0xc719	    0xc78068020000	              mov dword [rax + 0x268], 0	      6410	syntax.c	FUNCTION_96	IF_1
0xc723	    0x488b05000000	            mov rax, qword [0x0400c76a] 	      6411	syntax.c	FUNCTION_96	IF_1	CALL_5
0xc72a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6411	syntax.c	FUNCTION_96	IF_1	CALL_5
0xc72e	    0x480568040000	                          add rax, 0x468	      6411	syntax.c	FUNCTION_96	IF_1	CALL_5
0xc734	          0x4889c7	                            mov rdi, rax	      6411	syntax.c	FUNCTION_96	IF_1	CALL_5
0xc737	      0xe800000000	                          call 0x400c77c	      6411	syntax.c	FUNCTION_96	IF_1	CALL_5
0xc73c	    0x488b05000000	            mov rax, qword [0x0400c783] 	      6412	syntax.c	FUNCTION_96	IF_1	CALL_6
0xc743	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6412	syntax.c	FUNCTION_96	IF_1	CALL_6
0xc747	    0x480578040000	                          add rax, 0x478	      6412	syntax.c	FUNCTION_96	IF_1	CALL_6
0xc74d	          0x4889c7	                            mov rdi, rax	      6412	syntax.c	FUNCTION_96	IF_1	CALL_6
0xc750	      0xe800000000	                          call 0x400c795	      6412	syntax.c	FUNCTION_96	IF_1	CALL_6
0xc755	    0x488b05000000	            mov rax, qword [0x0400c79c] 	      6413	syntax.c	FUNCTION_96	IF_1	CALL_7
0xc75c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6413	syntax.c	FUNCTION_96	IF_1	CALL_7
0xc760	    0x480580040000	                          add rax, 0x480	      6413	syntax.c	FUNCTION_96	IF_1	CALL_7
0xc766	          0x4889c7	                            mov rdi, rax	      6413	syntax.c	FUNCTION_96	IF_1	CALL_7
0xc769	      0xe800000000	                          call 0x400c7ae	      6413	syntax.c	FUNCTION_96	IF_1	CALL_7
0xc76e	    0x488b05000000	            mov rax, qword [0x0400c7b5] 	      6415	syntax.c	FUNCTION_96	IF_1	CALL_8
0xc775	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6415	syntax.c	FUNCTION_96	IF_1	CALL_8
0xc779	    0x4805b0040000	                          add rax, 0x4b0	      6415	syntax.c	FUNCTION_96	IF_1	CALL_8
0xc77f	          0x4889c7	                            mov rdi, rax	      6415	syntax.c	FUNCTION_96	IF_1	CALL_8
0xc782	      0xe800000000	                          call 0x400c7c7	      6415	syntax.c	FUNCTION_96	IF_1	CALL_8
0xc787	      0xbf00000000	                              mov edi, 0	      6419	syntax.c	FUNCTION_96	CALL_9
0xc78c	      0xe800000000	                          call 0x400c7d1	      6419	syntax.c	FUNCTION_96	CALL_9
0xc791	        0x488945e0	             mov qword [rbp - 0x20], rax	      6419	syntax.c	FUNCTION_96	CALL_9
0xc795	      0x48837de000	               cmp qword [rbp - 0x20], 0	      6420	syntax.c	FUNCTION_96	IF_2
0xc79a	            0x7410	                            je 0x400c7ec	      6420	syntax.c	FUNCTION_96	IF_2
0xc79c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6421	syntax.c	FUNCTION_96	CALL_10
0xc7a0	          0x4889c7	                            mov rdi, rax	      6421	syntax.c	FUNCTION_96	CALL_10
0xc7a3	      0xe800000000	                          call 0x400c7e8	      6421	syntax.c	FUNCTION_96	CALL_10
0xc7a8	        0x488945e0	             mov qword [rbp - 0x20], rax	      6421	syntax.c	FUNCTION_96	CALL_10
0xc7ac	    0x488b0d000000	            mov rcx, qword [0x0400c7f3] 	      6425	syntax.c	FUNCTION_96	CALL_11
0xc7b3	    0x488b05000000	            mov rax, qword [0x0400c7fa] 	      6425	syntax.c	FUNCTION_96	CALL_11
0xc7ba	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      6425	syntax.c	FUNCTION_96	CALL_11
0xc7c1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6425	syntax.c	FUNCTION_96	CALL_11
0xc7c5	          0x488b00	                    mov rax, qword [rax]	      6425	syntax.c	FUNCTION_96	CALL_11
0xc7c8	          0x4989c8	                             mov r8, rcx	      6425	syntax.c	FUNCTION_96	CALL_11
0xc7cb	      0xb901000000	                              mov ecx, 1	      6425	syntax.c	FUNCTION_96	CALL_11
0xc7d0	          0x4889c6	                            mov rsi, rax	      6425	syntax.c	FUNCTION_96	CALL_11
0xc7d3	      0xbf4c000000	                           mov edi, 0x4c	      6425	syntax.c	FUNCTION_96	CALL_11
0xc7d8	      0xe800000000	                          call 0x400c81d	      6425	syntax.c	FUNCTION_96	CALL_11
0xc7dd	      0xbf00000000	                              mov edi, 0	      6428	syntax.c	FUNCTION_96	CALL_12
0xc7e2	      0xe800000000	                          call 0x400c827	      6428	syntax.c	FUNCTION_96	CALL_12
0xc7e7	        0x488945e8	             mov qword [rbp - 0x18], rax	      6428	syntax.c	FUNCTION_96	CALL_12
0xc7eb	      0x48837de800	               cmp qword [rbp - 0x18], 0	      6429	syntax.c	FUNCTION_96	IF_3
0xc7f0	            0x7411	                            je 0x400c843	      6429	syntax.c	FUNCTION_96	IF_3
0xc7f2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6430	syntax.c	FUNCTION_96	CALL_13
0xc7f6	          0x4889c6	                            mov rsi, rax	      6430	syntax.c	FUNCTION_96	CALL_13
0xc7f9	      0xbf00000000	                              mov edi, 0	      6430	syntax.c	FUNCTION_96	CALL_13
0xc7fe	      0xe800000000	                          call 0x400c843	      6430	syntax.c	FUNCTION_96	CALL_13
0xc803	      0x48837de000	               cmp qword [rbp - 0x20], 0	      6433	syntax.c	FUNCTION_96	IF_4
0xc808	            0x7511	                           jne 0x400c85b	      6433	syntax.c	FUNCTION_96	IF_4
0xc80a	      0xbe01000000	                              mov esi, 1	      6434	syntax.c	FUNCTION_96	CALL_14
0xc80f	      0xbf00000000	                              mov edi, 0	      6434	syntax.c	FUNCTION_96	CALL_14
0xc814	      0xe800000000	                          call 0x400c859	      6434	syntax.c	FUNCTION_96	CALL_14
0xc819	            0xeb1d	                           jmp 0x400c878	      6440	syntax.c	FUNCTION_96
0xc81b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6437	syntax.c	FUNCTION_96	ELSE_1	CALL_15
0xc81f	          0x4889c6	                            mov rsi, rax	      6437	syntax.c	FUNCTION_96	ELSE_1	CALL_15
0xc822	      0xbf00000000	                              mov edi, 0	      6437	syntax.c	FUNCTION_96	ELSE_1	CALL_15
0xc827	      0xe800000000	                          call 0x400c86c	      6437	syntax.c	FUNCTION_96	ELSE_1	CALL_15
0xc82c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6438	syntax.c	FUNCTION_96	ELSE_1	CALL_16
0xc830	          0x4889c7	                            mov rdi, rax	      6438	syntax.c	FUNCTION_96	ELSE_1	CALL_16
0xc833	      0xe800000000	                          call 0x400c878	      6438	syntax.c	FUNCTION_96	ELSE_1	CALL_16
0xc838	              0x90	                                     nop	      6440	syntax.c	FUNCTION_96
0xc839	        0x4883c428	                           add rsp, 0x28	      6440	syntax.c	FUNCTION_96
0xc83d	              0x5b	                                 pop rbx	      6440	syntax.c	FUNCTION_96
0xc83e	              0x5d	                                 pop rbp	      6440	syntax.c	FUNCTION_96
0xc83f	              0xc3	                                     ret	      6440	syntax.c	FUNCTION_96
syn_cmd_region	FOR,4:DO,0:IF,29:SWITCH,0:functions,0:ELSE,9:WHILE,2:CALL,54	621
0x9a9b	              0x55	                                push rbp	      5131	syntax.c	FUNCTION_81
0x9a9c	          0x4889e5	                            mov rbp, rsp	      5131	syntax.c	FUNCTION_81
0x9a9f	    0x4881ecd00000	                           sub rsp, 0xd0	      5131	syntax.c	FUNCTION_81
0x9aa6	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	      5131	syntax.c	FUNCTION_81
0x9aad	    0x89b534ffffff	             mov dword [rbp - 0xcc], esi	      5131	syntax.c	FUNCTION_81
0x9ab3	    0x64488b042528	                mov rax, qword fs:[0x28]	      5131	syntax.c	FUNCTION_81
0x9abc	        0x488945f8	                mov qword [rbp - 8], rax	      5131	syntax.c	FUNCTION_81
0x9ac0	            0x31c0	                            xor eax, eax	      5131	syntax.c	FUNCTION_81
0x9ac2	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      5132	syntax.c	FUNCTION_81
0x9ac9	          0x488b00	                    mov rax, qword [rax]	      5132	syntax.c	FUNCTION_81
0x9acc	        0x48894598	             mov qword [rbp - 0x68], rax	      5132	syntax.c	FUNCTION_81
0x9ad0	    0x48c745880000	               mov qword [rbp - 0x78], 0	      5136	syntax.c	FUNCTION_81
0x9ad8	    0xc78554ffffff	               mov dword [rbp - 0xac], 0	      5152	syntax.c	FUNCTION_81
0x9ae2	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	      5154	syntax.c	FUNCTION_81
0x9aec	    0xc7855cffffff	               mov dword [rbp - 0xa4], 0	      5155	syntax.c	FUNCTION_81
0x9af6	    0xc78560ffffff	               mov dword [rbp - 0xa0], 0	      5156	syntax.c	FUNCTION_81
0x9b00	    0xc78564ffffff	               mov dword [rbp - 0x9c], 0	      5157	syntax.c	FUNCTION_81
0x9b0a	    0xc7854cffffff	               mov dword [rbp - 0xb4], 0	      5160	syntax.c	FUNCTION_81
0x9b14	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      5163	syntax.c	FUNCTION_81	CALL_1
0x9b1b	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5163	syntax.c	FUNCTION_81	CALL_1
0x9b1f	          0x4889d6	                            mov rsi, rdx	      5163	syntax.c	FUNCTION_81	CALL_1
0x9b22	          0x4889c7	                            mov rdi, rax	      5163	syntax.c	FUNCTION_81	CALL_1
0x9b25	      0xe8c0eaffff	                 call sym.get_group_name	      5163	syntax.c	FUNCTION_81	CALL_1
0x9b2a	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      5163	syntax.c	FUNCTION_81	CALL_1
0x9b31	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      5165	syntax.c	FUNCTION_81
0x9b39	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      5166	syntax.c	FUNCTION_81
0x9b41	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      5167	syntax.c	FUNCTION_81
0x9b49	      0xe83f140000	              call sym.init_syn_patterns	      5169	syntax.c	FUNCTION_81	CALL_2
0x9b4e	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      5171	syntax.c	FUNCTION_81
0x9b55	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      5172	syntax.c	FUNCTION_81
0x9b5c	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      5173	syntax.c	FUNCTION_81
0x9b64	        0xc645c001	                mov byte [rbp - 0x40], 1	      5174	syntax.c	FUNCTION_81
0x9b68	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      5175	syntax.c	FUNCTION_81
0x9b70	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      5176	syntax.c	FUNCTION_81
0x9b78	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      5177	syntax.c	FUNCTION_81
0x9b80	      0xe9e7030000	                           jmp 0x4009fac	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x9b85	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x9b8c	          0x8b4830	            mov ecx, dword [rax + 0x30] 	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x9b8f	    0x488d954cffff	                   lea rdx, [rbp - 0xb4]	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x9b96	        0x488d75b0	                   lea rsi, [rbp - 0x50]	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x9b9a	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x9ba1	          0x4889c7	                            mov rdi, rax	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x9ba4	      0xe8a7eaffff	                call sym.get_syn_options	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x9ba9	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      5185	syntax.c	FUNCTION_81	WHILE_1	CALL_4
0x9bb0	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x9bb8	     0xf84d7030000	                            je 0x4009fd5	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x9bbe	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x9bc5	           0xfb600	                   movzx eax, byte [rax]	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x9bc8	           0xfb6c0	                           movzx eax, al	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x9bcb	            0x89c7	                            mov edi, eax	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x9bcd	      0xe800000000	                          call 0x4009c12	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x9bd2	            0x85c0	                           test eax, eax	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x9bd4	     0xf85bb030000	                           jne 0x4009fd5	      5186	syntax.c	FUNCTION_81	WHILE_1	IF_1	CALL_5
0x9bda	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5190	syntax.c	FUNCTION_81	WHILE_1
0x9be1	        0x48894580	             mov qword [rbp - 0x80], rax	      5190	syntax.c	FUNCTION_81	WHILE_1
0x9be5	            0xeb05	                           jmp 0x4009c2c	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x9be7	      0x4883458001	               add qword [rbp - 0x80], 1	      5192	syntax.c	FUNCTION_81	WHILE_1	WHILE_2
0x9bec	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x9bf0	           0xfb600	                   movzx eax, byte [rax]	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x9bf3	            0x84c0	                             test al, al	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x9bf5	            0x7421	                            je 0x4009c58	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x9bf7	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x9bfb	           0xfb600	                   movzx eax, byte [rax]	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x9bfe	            0x3c20	                            cmp al, 0x20	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x9c00	            0x7416	                            je 0x4009c58	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x9c02	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x9c06	           0xfb600	                   movzx eax, byte [rax]	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x9c09	            0x3c09	                               cmp al, 9	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x9c0b	            0x740b	                            je 0x4009c58	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x9c0d	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x9c11	           0xfb600	                   movzx eax, byte [rax]	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x9c14	            0x3c3d	                            cmp al, 0x3d	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x9c16	            0x75cf	                           jne 0x4009c27	      5191	syntax.c	FUNCTION_81	WHILE_1	WHILE_2	CALL_6
0x9c18	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5193	syntax.c	FUNCTION_81	WHILE_1	CALL_7
0x9c1c	          0x4889c7	                            mov rdi, rax	      5193	syntax.c	FUNCTION_81	WHILE_1	CALL_7
0x9c1f	      0xe800000000	                          call 0x4009c64	      5193	syntax.c	FUNCTION_81	WHILE_1	CALL_7
0x9c24	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      5194	syntax.c	FUNCTION_81	WHILE_1	CALL_8
0x9c28	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5194	syntax.c	FUNCTION_81	WHILE_1	CALL_8
0x9c2f	          0x4829c2	                            sub rdx, rax	      5194	syntax.c	FUNCTION_81	WHILE_1	CALL_8
0x9c32	          0x4889d0	                            mov rax, rdx	      5194	syntax.c	FUNCTION_81	WHILE_1	CALL_8
0x9c35	            0x89c2	                            mov edx, eax	      5194	syntax.c	FUNCTION_81	WHILE_1	CALL_8
0x9c37	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5194	syntax.c	FUNCTION_81	WHILE_1	CALL_8
0x9c3e	            0x89d6	                            mov esi, edx	      5194	syntax.c	FUNCTION_81	WHILE_1	CALL_8
0x9c40	          0x4889c7	                            mov rdi, rax	      5194	syntax.c	FUNCTION_81	WHILE_1	CALL_8
0x9c43	      0xe800000000	                          call 0x4009c88	      5194	syntax.c	FUNCTION_81	WHILE_1	CALL_8
0x9c48	        0x48894588	             mov qword [rbp - 0x78], rax	      5194	syntax.c	FUNCTION_81	WHILE_1	CALL_8
0x9c4c	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      5195	syntax.c	FUNCTION_81	WHILE_1	IF_2
0x9c51	            0x7510	                           jne 0x4009ca3	      5195	syntax.c	FUNCTION_81	WHILE_1	IF_2
0x9c53	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      5197	syntax.c	FUNCTION_81	WHILE_1	IF_2
0x9c5e	      0xe932030000	                           jmp 0x4009fd5	      5198	syntax.c	FUNCTION_81	WHILE_1	IF_2
0x9c63	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5200	syntax.c	FUNCTION_81	WHILE_1	IF_3	CALL_9
0x9c67	      0xbe00000000	                              mov esi, 0	      5200	syntax.c	FUNCTION_81	WHILE_1	IF_3	CALL_9
0x9c6c	          0x4889c7	                            mov rdi, rax	      5200	syntax.c	FUNCTION_81	WHILE_1	IF_3	CALL_9
0x9c6f	      0xe800000000	                          call 0x4009cb4	      5200	syntax.c	FUNCTION_81	WHILE_1	IF_3	CALL_9
0x9c74	            0x85c0	                           test eax, eax	      5200	syntax.c	FUNCTION_81	WHILE_1	IF_3	CALL_9
0x9c76	            0x750c	                           jne 0x4009cc4	      5200	syntax.c	FUNCTION_81	WHILE_1	IF_3	CALL_9
0x9c78	    0xc78550ffffff	               mov dword [rbp - 0xb0], 3	      5201	syntax.c	FUNCTION_81	WHILE_1	IF_3
0x9c82	            0xeb7d	                           jmp 0x4009d41	      5201	syntax.c	FUNCTION_81	WHILE_1	IF_3
0x9c84	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5202	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4	CALL_10
0x9c88	      0xbe00000000	                              mov esi, 0	      5202	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4	CALL_10
0x9c8d	          0x4889c7	                            mov rdi, rax	      5202	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4	CALL_10
0x9c90	      0xe800000000	                          call 0x4009cd5	      5202	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4	CALL_10
0x9c95	            0x85c0	                           test eax, eax	      5202	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4	CALL_10
0x9c97	            0x750c	                           jne 0x4009ce5	      5202	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4	CALL_10
0x9c99	    0xc78550ffffff	               mov dword [rbp - 0xb0], 0	      5203	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4
0x9ca3	            0xeb5c	                           jmp 0x4009d41	      5203	syntax.c	FUNCTION_81	WHILE_1	ELSE_1	IF_4
0x9ca5	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x9ca9	      0xbe00000000	                              mov esi, 0	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x9cae	          0x4889c7	                            mov rdi, rax	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x9cb1	      0xe800000000	                          call 0x4009cf6	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x9cb6	            0x85c0	                           test eax, eax	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x9cb8	            0x750c	                           jne 0x4009d06	      5204	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5	CALL_11
0x9cba	    0xc78550ffffff	               mov dword [rbp - 0xb0], 2	      5205	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5
0x9cc4	            0xeb3b	                           jmp 0x4009d41	      5205	syntax.c	FUNCTION_81	WHILE_1	ELSE_2	IF_5
0x9cc6	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5206	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	CALL_12
0x9cca	      0xbe00000000	                              mov esi, 0	      5206	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	CALL_12
0x9ccf	          0x4889c7	                            mov rdi, rax	      5206	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	CALL_12
0x9cd2	      0xe800000000	                          call 0x4009d17	      5206	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	CALL_12
0x9cd7	            0x85c0	                           test eax, eax	      5206	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	CALL_12
0x9cd9	     0xf85b5020000	                           jne 0x4009fd4	      5206	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	CALL_12
0x9cdf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5208	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	IF_7
0x9ce3	          0x4885c0	                           test rax, rax	      5208	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	IF_7
0x9ce6	            0x740f	                            je 0x4009d37	      5208	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	IF_7
0x9ce8	    0xc78560ffffff	               mov dword [rbp - 0xa0], 1	      5210	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	IF_7
0x9cf2	      0xe99e020000	                           jmp 0x4009fd5	      5211	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6	IF_7
0x9cf7	    0xc78550ffffff	               mov dword [rbp - 0xb0], 1	      5213	syntax.c	FUNCTION_81	WHILE_1	ELSE_3	IF_6
0x9d01	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5217	syntax.c	FUNCTION_81	WHILE_1	CALL_13
0x9d05	          0x4889c7	                            mov rdi, rax	      5217	syntax.c	FUNCTION_81	WHILE_1	CALL_13
0x9d08	      0xe800000000	                          call 0x4009d4d	      5217	syntax.c	FUNCTION_81	WHILE_1	CALL_13
0x9d0d	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      5217	syntax.c	FUNCTION_81	WHILE_1	CALL_13
0x9d14	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5218	syntax.c	FUNCTION_81	WHILE_1	IF_8
0x9d1b	           0xfb600	                   movzx eax, byte [rax]	      5218	syntax.c	FUNCTION_81	WHILE_1	IF_8
0x9d1e	            0x3c3d	                            cmp al, 0x3d	      5218	syntax.c	FUNCTION_81	WHILE_1	IF_8
0x9d20	            0x742c	                            je 0x4009d8e	      5218	syntax.c	FUNCTION_81	WHILE_1	IF_8
0x9d22	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      5220	syntax.c	FUNCTION_81	WHILE_1	IF_8
0x9d2d	      0xbf00000000	                              mov edi, 0	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x9d32	      0xe800000000	                          call 0x4009d77	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x9d37	          0x4889c2	                            mov rdx, rax	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x9d3a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x9d3e	          0x4889c6	                            mov rsi, rax	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x9d41	          0x4889d7	                            mov rdi, rdx	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x9d44	      0xe800000000	                          call 0x4009d89	      5221	syntax.c	FUNCTION_81	WHILE_1	IF_8	CALL_15
0x9d49	      0xe947020000	                           jmp 0x4009fd5	      5222	syntax.c	FUNCTION_81	WHILE_1	IF_8
0x9d4e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5224	syntax.c	FUNCTION_81	WHILE_1	CALL_16
0x9d55	        0x4883c001	                              add rax, 1	      5224	syntax.c	FUNCTION_81	WHILE_1	CALL_16
0x9d59	          0x4889c7	                            mov rdi, rax	      5224	syntax.c	FUNCTION_81	WHILE_1	CALL_16
0x9d5c	      0xe800000000	                          call 0x4009da1	      5224	syntax.c	FUNCTION_81	WHILE_1	CALL_16
0x9d61	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      5224	syntax.c	FUNCTION_81	WHILE_1	CALL_16
0x9d68	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5225	syntax.c	FUNCTION_81	WHILE_1	IF_9
0x9d6f	           0xfb600	                   movzx eax, byte [rax]	      5225	syntax.c	FUNCTION_81	WHILE_1	IF_9
0x9d72	            0x84c0	                             test al, al	      5225	syntax.c	FUNCTION_81	WHILE_1	IF_9
0x9d74	            0x750f	                           jne 0x4009dc5	      5225	syntax.c	FUNCTION_81	WHILE_1	IF_9
0x9d76	    0xc7855cffffff	               mov dword [rbp - 0xa4], 1	      5227	syntax.c	FUNCTION_81	WHILE_1	IF_9
0x9d80	      0xe910020000	                           jmp 0x4009fd5	      5228	syntax.c	FUNCTION_81	WHILE_1	IF_9
0x9d85	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 3	      5231	syntax.c	FUNCTION_81	WHILE_1	IF_10
0x9d8c	     0xf85bb000000	                           jne 0x4009e8d	      5231	syntax.c	FUNCTION_81	WHILE_1	IF_10
0x9d92	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5233	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_17
0x9d99	          0x4889c7	                            mov rdi, rax	      5233	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_17
0x9d9c	      0xe800000000	                          call 0x4009de1	      5233	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_17
0x9da1	        0x488945a0	             mov qword [rbp - 0x60], rax	      5233	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_17
0x9da5	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x9da9	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x9db0	          0x4829c2	                            sub rdx, rax	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x9db3	          0x4889d0	                            mov rax, rdx	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x9db6	        0x4883f804	                              cmp rax, 4	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x9dba	            0x751d	                           jne 0x4009e19	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x9dbc	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x9dc3	      0xba04000000	                              mov edx, 4	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x9dc8	      0xbe00000000	                              mov esi, 0	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x9dcd	          0x4889c7	                            mov rdi, rax	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x9dd0	      0xe800000000	                          call 0x4009e15	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x9dd5	            0x85c0	                           test eax, eax	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x9dd7	            0x740e	                            je 0x4009e27	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x9dd9	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x9de0	          0x8b4030	            mov eax, dword [rax + 0x30] 	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x9de3	            0x85c0	                           test eax, eax	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x9de5	            0x740c	                            je 0x4009e33	      5234	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11	CALL_18
0x9de7	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	      5235	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11
0x9df1	            0xeb42	                           jmp 0x4009e75	      5235	syntax.c	FUNCTION_81	WHILE_1	IF_10	IF_11
0x9df3	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      5238	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	CALL_19
0x9df7	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5238	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	CALL_19
0x9dfe	          0x4829c2	                            sub rdx, rax	      5238	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	CALL_19
0x9e01	          0x4889d0	                            mov rax, rdx	      5238	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	CALL_19
0x9e04	            0x89c2	                            mov edx, eax	      5238	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	CALL_19
0x9e06	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5238	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	CALL_19
0x9e0d	            0x89d6	                            mov esi, edx	      5238	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	CALL_19
0x9e0f	          0x4889c7	                            mov rdi, rax	      5238	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	CALL_19
0x9e12	      0xe800000000	                          call 0x4009e57	      5238	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	CALL_19
0x9e17	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	      5238	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	CALL_19
0x9e1d	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 0	      5239	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	IF_12
0x9e24	            0x750f	                           jne 0x4009e75	      5239	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	IF_12
0x9e26	    0xc78560ffffff	               mov dword [rbp - 0xa0], 1	      5241	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	IF_12
0x9e30	      0xe960010000	                           jmp 0x4009fd5	      5242	syntax.c	FUNCTION_81	WHILE_1	IF_10	ELSE_5	IF_12
0x9e35	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5245	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_20
0x9e39	          0x4889c7	                            mov rdi, rax	      5245	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_20
0x9e3c	      0xe800000000	                          call 0x4009e81	      5245	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_20
0x9e41	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      5245	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_20
0x9e48	      0xe91f010000	                           jmp 0x4009fac	      5245	syntax.c	FUNCTION_81	WHILE_1	IF_10	CALL_20
0x9e4d	      0xbf18000000	                           mov edi, 0x18	      5254	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_21
0x9e52	      0xe800000000	                          call 0x4009e97	      5254	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_21
0x9e57	        0x48894590	             mov qword [rbp - 0x70], rax	      5254	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_21
0x9e5b	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      5255	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_13
0x9e60	            0x7510	                           jne 0x4009eb2	      5255	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_13
0x9e62	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      5257	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_13
0x9e6d	      0xe923010000	                           jmp 0x4009fd5	      5258	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_13
0x9e72	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      5260	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x9e78	            0x4898	                                    cdqe	      5260	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x9e7a	      0x488b54c5e0	     mov rdx, qword [rbp + rax*8 - 0x20]	      5260	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x9e7f	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5260	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x9e83	        0x48895010	             mov qword [rax + 0x10], rdx	      5260	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x9e87	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      5261	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x9e8d	            0x4898	                                    cdqe	      5261	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x9e8f	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      5261	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x9e93	      0x488954c5e0	     mov qword [rbp + rax*8 - 0x20], rdx	      5261	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x9e98	      0xbfa0000000	                           mov edi, 0xa0	      5262	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_22
0x9e9d	      0xe800000000	                          call 0x4009ee2	      5262	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_22
0x9ea2	          0x4889c2	                            mov rdx, rax	      5262	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_22
0x9ea5	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5262	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_22
0x9ea9	          0x488910	                    mov qword [rax], rdx	      5262	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_22
0x9eac	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5263	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_14
0x9eb0	          0x488b00	                    mov rax, qword [rax]	      5263	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_14
0x9eb3	          0x4885c0	                           test rax, rax	      5263	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_14
0x9eb6	            0x7510	                           jne 0x4009f08	      5263	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_14
0x9eb8	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      5265	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_14
0x9ec3	      0xe9cd000000	                           jmp 0x4009fd5	      5266	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_14
0x9ec8	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 0	      5273	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_15
0x9ecf	            0x750c	                           jne 0x4009f1d	      5273	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_15
0x9ed1	    0xc70500000000	               mov dword [0x04009f1b], 1	      5274	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_15
0x9edb	            0xeb1c	                           jmp 0x4009f39	      5274	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_15
0x9edd	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 1	      5275	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	ELSE_7	IF_16
0x9ee4	            0x7409	                            je 0x4009f2f	      5275	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	ELSE_7	IF_16
0x9ee6	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 2	      5275	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	ELSE_7	IF_16
0x9eed	            0x750a	                           jne 0x4009f39	      5275	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	ELSE_7	IF_16
0x9eef	    0xc70500000000	               mov dword [0x04009f39], 2	      5276	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	ELSE_7	IF_16
0x9ef9	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x9efd	          0x488b10	                    mov rdx, qword [rax]	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x9f00	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x9f07	          0x4889d6	                            mov rsi, rdx	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x9f0a	          0x4889c7	                            mov rdi, rax	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x9f0d	      0xe8ac100000	                call sym.get_syn_pattern	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x9f12	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      5277	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	CALL_23
0x9f19	    0xc70500000000	               mov dword [0x04009f63], 0	      5278	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x9f23	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 2	      5279	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17	CALL_24
0x9f2a	            0x752c	                           jne 0x4009f98	      5279	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17	CALL_24
0x9f2c	      0xe800000000	                          call 0x4009f71	      5279	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17	CALL_24
0x9f31	            0x85c0	                           test eax, eax	      5279	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17	CALL_24
0x9f33	            0x7423	                            je 0x4009f98	      5279	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17	CALL_24
0x9f35	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      5280	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x9f38	      0x2500080000	                          and eax, 0x800	      5280	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x9f3d	            0x85c0	                           test eax, eax	      5280	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x9f3f	            0x7517	                           jne 0x4009f98	      5280	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x9f41	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5281	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x9f45	          0x488b00	                    mov rax, qword [rax]	      5281	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x9f48	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      5281	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x9f4c	          0x488b12	                    mov rdx, qword [rdx]	      5281	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x9f4f	          0x8b5224	            mov edx, dword [rdx + 0x24] 	      5281	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x9f52	          0x83ca08	                               or edx, 8	      5281	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x9f55	          0x895024	             mov dword [rax + 0x24], edx	      5281	syntax.c	FUNCTION_81	WHILE_1	ELSE_6	IF_17
0x9f58	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5282	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x9f5c	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	      5282	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x9f62	          0x895008	                mov dword [rax + 8], edx	      5282	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x9f65	    0x838554ffffff	               add dword [rbp - 0xac], 1	      5283	syntax.c	FUNCTION_81	WHILE_1	ELSE_6
0x9f6c	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x9f74	            0x741f	                            je 0x4009fd5	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x9f76	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x9f7d	           0xfb600	                   movzx eax, byte [rax]	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x9f80	           0xfb6c0	                           movzx eax, al	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x9f83	            0x89c7	                            mov edi, eax	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x9f85	      0xe800000000	                          call 0x4009fca	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x9f8a	            0x85c0	                           test eax, eax	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x9f8c	     0xf84f3fbffff	                            je 0x4009bc5	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x9f92	            0xeb01	                           jmp 0x4009fd5	      5182	syntax.c	FUNCTION_81	WHILE_1	CALL_3
0x9f94	              0x90	                                     nop	      5216	syntax.c	FUNCTION_81	WHILE_1	ELSE_4
0x9f95	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5286	syntax.c	FUNCTION_81	CALL_25
0x9f99	          0x4889c7	                            mov rdi, rax	      5286	syntax.c	FUNCTION_81	CALL_25
0x9f9c	      0xe800000000	                          call 0x4009fe1	      5286	syntax.c	FUNCTION_81	CALL_25
0x9fa1	    0x83bd60ffffff	               cmp dword [rbp - 0xa0], 0	      5287	syntax.c	FUNCTION_81	IF_18
0x9fa8	            0x7509	                           jne 0x4009ff3	      5287	syntax.c	FUNCTION_81	IF_18
0x9faa	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      5287	syntax.c	FUNCTION_81	IF_18
0x9fb1	            0x740b	                            je 0x4009ffe	      5287	syntax.c	FUNCTION_81	IF_18
0x9fb3	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      5288	syntax.c	FUNCTION_81	IF_18
0x9fbe	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      5293	syntax.c	FUNCTION_81	IF_19
0x9fc6	            0x7427	                            je 0x400a02f	      5293	syntax.c	FUNCTION_81	IF_19
0x9fc8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5293	syntax.c	FUNCTION_81	IF_19
0x9fcc	          0x4885c0	                           test rax, rax	      5293	syntax.c	FUNCTION_81	IF_19
0x9fcf	            0x7409	                            je 0x400a01a	      5293	syntax.c	FUNCTION_81	IF_19
0x9fd1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5294	syntax.c	FUNCTION_81	IF_19
0x9fd5	          0x4885c0	                           test rax, rax	      5293	syntax.c	FUNCTION_81	IF_19
0x9fd8	            0x7515	                           jne 0x400a02f	      5293	syntax.c	FUNCTION_81	IF_19
0x9fda	    0xc7855cffffff	               mov dword [rbp - 0xa4], 1	      5296	syntax.c	FUNCTION_81	IF_19
0x9fe4	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      5297	syntax.c	FUNCTION_81	IF_19
0x9fef	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      5300	syntax.c	FUNCTION_81	IF_20
0x9ff7	     0xf8472040000	                            je 0x400a4af	      5300	syntax.c	FUNCTION_81	IF_20
0x9ffd	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5306	syntax.c	FUNCTION_81	IF_20	CALL_26
0xa004	          0x4889c7	                            mov rdi, rax	      5306	syntax.c	FUNCTION_81	IF_20	CALL_26
0xa007	      0xe800000000	                          call 0x400a04c	      5306	syntax.c	FUNCTION_81	IF_20	CALL_26
0xa00c	          0x4889c2	                            mov rdx, rax	      5306	syntax.c	FUNCTION_81	IF_20	CALL_26
0xa00f	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      5306	syntax.c	FUNCTION_81	IF_20	CALL_26
0xa016	        0x48895008	                mov qword [rax + 8], rdx	      5306	syntax.c	FUNCTION_81	IF_20	CALL_26
0xa01a	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0xa021	           0xfb600	                   movzx eax, byte [rax]	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0xa024	           0xfb6c0	                           movzx eax, al	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0xa027	            0x89c7	                            mov edi, eax	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0xa029	      0xe800000000	                          call 0x400a06e	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0xa02e	            0x85c0	                           test eax, eax	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0xa030	            0x740e	                            je 0x400a080	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0xa032	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0xa039	          0x8b4030	            mov eax, dword [rax + 0x30] 	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0xa03c	            0x85c0	                           test eax, eax	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0xa03e	            0x7410	                            je 0x400a090	      5307	syntax.c	FUNCTION_81	IF_20	IF_21	CALL_27
0xa040	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	      5308	syntax.c	FUNCTION_81	IF_20	IF_21
0xa04b	      0xe91f040000	                           jmp 0x400a4af	      5308	syntax.c	FUNCTION_81	IF_20	IF_21
0xa050	    0x488b05000000	            mov rax, qword [0x0400a097] 	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0xa057	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0xa05b	    0x488d90600200	                  lea rdx, [rax + 0x260]	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0xa062	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0xa068	            0x89c6	                            mov esi, eax	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0xa06a	          0x4889d7	                            mov rdi, rdx	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0xa06d	      0xe800000000	                          call 0x400a0b2	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0xa072	            0x85c0	                           test eax, eax	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0xa074	     0xf84f5030000	                            je 0x400a4af	      5309	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_28
0xa07a	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      5311	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0xa081	          0x4889c2	                            mov rdx, rax	      5311	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0xa084	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5311	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0xa088	          0x4829c2	                            sub rdx, rax	      5311	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0xa08b	          0x4889d0	                            mov rax, rdx	      5311	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0xa08e	            0x89c2	                            mov edx, eax	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0xa090	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0xa094	            0x89d6	                            mov esi, edx	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0xa096	          0x4889c7	                            mov rdi, rax	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0xa099	      0xe800000000	                          call 0x400a0de	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0xa09e	    0x89856cffffff	             mov dword [rbp - 0x94], eax	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0xa0a4	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0xa0ab	     0xf84be030000	                            je 0x400a4af	      5310	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_29
0xa0b1	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      5313	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_30
0xa0b5	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      5313	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_30
0xa0bb	          0x4889d6	                            mov rsi, rdx	      5313	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_30
0xa0be	            0x89c7	                            mov edi, eax	      5313	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_30
0xa0c0	      0xe8d8ebffff	              call sym.syn_incl_toplevel	      5313	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_30
0xa0c5	    0x488b05000000	            mov rax, qword [0x0400a10c] 	      5317	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0xa0cc	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5317	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0xa0d0	    0x8b8060020000	           mov eax, dword [rax + 0x260] 	      5317	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0xa0d6	    0x898568ffffff	             mov dword [rbp - 0x98], eax	      5317	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0xa0dc	    0xc78550ffffff	               mov dword [rbp - 0xb0], 0	      5318	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1
0xa0e6	      0xe950030000	                           jmp 0x400a47b	      5318	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1
0xa0eb	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0xa0f1	            0x4898	                                    cdqe	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0xa0f3	      0x488b44c5e0	     mov rax, qword [rbp + rax*8 - 0x20]	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0xa0f8	        0x48894590	             mov qword [rbp - 0x70], rax	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0xa0fc	      0xe928030000	                           jmp 0x400a469	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0xa101	    0x488b05000000	            mov rax, qword [0x0400a148] 	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_31
0xa108	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_31
0xa10c	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_31
0xa113	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_31
0xa119	          0x4863d0	                         movsxd rdx, eax	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_31
0xa11c	          0x4889d0	                            mov rax, rdx	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_31
0xa11f	        0x48c1e002	                              shl rax, 2	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_31
0xa123	          0x4801d0	                            add rax, rdx	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_31
0xa126	        0x48c1e005	                              shl rax, 5	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_31
0xa12a	        0x488d1401	                    lea rdx, [rcx + rax]	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_31
0xa12e	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_31
0xa132	          0x488b00	                    mov rax, qword [rax]	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_31
0xa135	          0x4889c6	                            mov rsi, rax	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_31
0xa138	      0xb814000000	                           mov eax, 0x14	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_31
0xa13d	          0x4889d7	                            mov rdi, rdx	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_31
0xa140	          0x4889c1	                            mov rcx, rax	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_31
0xa143	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	      5322	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_31
0xa146	    0x488b05000000	            mov rax, qword [0x0400a18d] 	      5323	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_32
0xa14d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5323	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_32
0xa151	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5323	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_32
0xa158	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      5323	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_32
0xa15e	          0x4863d0	                         movsxd rdx, eax	      5323	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_32
0xa161	          0x4889d0	                            mov rax, rdx	      5323	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_32
0xa164	        0x48c1e002	                              shl rax, 2	      5323	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_32
0xa168	          0x4801d0	                            add rax, rdx	      5323	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_32
0xa16b	        0x48c1e005	                              shl rax, 5	      5323	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_32
0xa16f	          0x4801c8	                            add rax, rcx	      5323	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_32
0xa172	    0x8b9534ffffff	             mov edx, dword [rbp - 0xcc]	      5323	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_32
0xa178	          0x885001	                  mov byte [rax + 1], dl	      5323	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_32
0xa17b	    0x488b05000000	            mov rax, qword [0x0400a1c2] 	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_33
0xa182	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_33
0xa186	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_33
0xa18d	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_33
0xa193	          0x4863d0	                         movsxd rdx, eax	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_33
0xa196	          0x4889d0	                            mov rax, rdx	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_33
0xa199	        0x48c1e002	                              shl rax, 2	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_33
0xa19d	          0x4801d0	                            add rax, rdx	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_33
0xa1a0	        0x48c1e005	                              shl rax, 5	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_33
0xa1a4	        0x488d1401	                    lea rdx, [rcx + rax]	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_33
0xa1a8	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 0	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_33
0xa1af	            0x7417	                            je 0x400a208	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_33
0xa1b1	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 1	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_33
0xa1b8	            0x7507	                           jne 0x400a201	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_33
0xa1ba	      0xb804000000	                              mov eax, 4	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_33
0xa1bf	            0xeb0c	                           jmp 0x400a20d	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_33
0xa1c1	      0xb803000000	                              mov eax, 3	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_33
0xa1c6	            0xeb05	                           jmp 0x400a20d	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_33
0xa1c8	      0xb802000000	                              mov eax, 2	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_33
0xa1cd	            0x8802	                      mov byte [rdx], al	      5324	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_33
0xa1cf	    0x488b05000000	            mov rax, qword [0x0400a216] 	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_34
0xa1d6	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_34
0xa1da	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_34
0xa1e1	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_34
0xa1e7	          0x4863d0	                         movsxd rdx, eax	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_34
0xa1ea	          0x4889d0	                            mov rax, rdx	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_34
0xa1ed	        0x48c1e002	                              shl rax, 2	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_34
0xa1f1	          0x4801d0	                            add rax, rdx	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_34
0xa1f4	        0x48c1e005	                              shl rax, 5	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_34
0xa1f8	          0x4801c1	                            add rcx, rax	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_34
0xa1fb	    0x488b05000000	            mov rax, qword [0x0400a242] 	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_34
0xa202	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_34
0xa206	    0x488bb0700200	           mov rsi, qword [rax + 0x270] 	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_34
0xa20d	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_34
0xa213	          0x4863d0	                         movsxd rdx, eax	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_34
0xa216	          0x4889d0	                            mov rax, rdx	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_34
0xa219	        0x48c1e002	                              shl rax, 2	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_34
0xa21d	          0x4801d0	                            add rax, rdx	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_34
0xa220	        0x48c1e005	                              shl rax, 5	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_34
0xa224	          0x4801f0	                            add rax, rsi	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_34
0xa227	          0x8b5024	            mov edx, dword [rax + 0x24] 	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_34
0xa22a	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_34
0xa22d	             0x9d0	                             or eax, edx	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_34
0xa22f	          0x894124	             mov dword [rcx + 0x24], eax	      5327	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_34
0xa232	    0x488b05000000	            mov rax, qword [0x0400a279] 	      5328	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_35
0xa239	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5328	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_35
0xa23d	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5328	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_35
0xa244	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      5328	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_35
0xa24a	          0x4863d0	                         movsxd rdx, eax	      5328	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_35
0xa24d	          0x4889d0	                            mov rax, rdx	      5328	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_35
0xa250	        0x48c1e002	                              shl rax, 2	      5328	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_35
0xa254	          0x4801d0	                            add rax, rdx	      5328	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_35
0xa257	        0x48c1e005	                              shl rax, 5	      5328	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_35
0xa25b	          0x4801c8	                            add rax, rcx	      5328	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_35
0xa25e	    0x8b956cffffff	             mov edx, dword [rbp - 0x94]	      5328	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_35
0xa264	        0x66895054	               mov word [rax + 0x54], dx	      5328	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_35
0xa268	    0x488b05000000	            mov rax, qword [0x0400a2af] 	      5329	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_36
0xa26f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5329	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_36
0xa273	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5329	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_36
0xa27a	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      5329	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_36
0xa280	          0x4863d0	                         movsxd rdx, eax	      5329	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_36
0xa283	          0x4889d0	                            mov rax, rdx	      5329	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_36
0xa286	        0x48c1e002	                              shl rax, 2	      5329	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_36
0xa28a	          0x4801d0	                            add rax, rdx	      5329	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_36
0xa28d	        0x48c1e005	                              shl rax, 5	      5329	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_36
0xa291	        0x488d1401	                    lea rdx, [rcx + rax]	      5329	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_36
0xa295	    0x8b0500000000	            mov eax, dword [0x0400a2db] 	      5329	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_36
0xa29b	          0x894250	             mov dword [rdx + 0x50], eax	      5329	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_36
0xa29e	    0x488b05000000	            mov rax, qword [0x0400a2e5] 	      5331	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_37
0xa2a5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5331	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_37
0xa2a9	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5331	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_37
0xa2b0	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      5331	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_37
0xa2b6	          0x4863d0	                         movsxd rdx, eax	      5331	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_37
0xa2b9	          0x4889d0	                            mov rax, rdx	      5331	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_37
0xa2bc	        0x48c1e002	                              shl rax, 2	      5331	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_37
0xa2c0	          0x4801d0	                            add rax, rdx	      5331	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_37
0xa2c3	        0x48c1e005	                              shl rax, 5	      5331	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_37
0xa2c7	        0x488d1401	                    lea rdx, [rcx + rax]	      5331	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_37
0xa2cb	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5332	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0xa2cf	          0x8b4008	                mov eax, dword [rax + 8]	      5332	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0xa2d2	        0x66894202	                  mov word [rdx + 2], ax	      5331	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_37
0xa2d6	    0x488b05000000	            mov rax, qword [0x0400a31d] 	      5334	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_38
0xa2dd	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5334	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_38
0xa2e1	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5334	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_38
0xa2e8	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      5334	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_38
0xa2ee	          0x4863d0	                         movsxd rdx, eax	      5334	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_38
0xa2f1	          0x4889d0	                            mov rax, rdx	      5334	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_38
0xa2f4	        0x48c1e002	                              shl rax, 2	      5334	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_38
0xa2f8	          0x4801d0	                            add rax, rdx	      5334	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_38
0xa2fb	        0x48c1e005	                              shl rax, 5	      5334	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_38
0xa2ff	        0x488d1401	                    lea rdx, [rcx + rax]	      5334	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_38
0xa303	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	      5334	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_38
0xa309	          0x894228	             mov dword [rdx + 0x28], eax	      5334	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	CALL_38
0xa30c	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 0	      5336	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0xa313	     0xf85bd000000	                           jne 0x400a416	      5336	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0xa319	    0x488b05000000	            mov rax, qword [0x0400a360] 	      5338	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_39
0xa320	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5338	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_39
0xa324	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5338	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_39
0xa32b	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      5338	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_39
0xa331	          0x4863d0	                         movsxd rdx, eax	      5338	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_39
0xa334	          0x4889d0	                            mov rax, rdx	      5338	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_39
0xa337	        0x48c1e002	                              shl rax, 2	      5338	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_39
0xa33b	          0x4801d0	                            add rax, rdx	      5338	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_39
0xa33e	        0x48c1e005	                              shl rax, 5	      5338	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_39
0xa342	        0x488d1401	                    lea rdx, [rcx + rax]	      5338	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_39
0xa346	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5339	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0xa34a	        0x48894240	             mov qword [rdx + 0x40], rax	      5338	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_39
0xa34e	    0x488b05000000	            mov rax, qword [0x0400a395] 	      5340	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_40
0xa355	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5340	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_40
0xa359	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5340	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_40
0xa360	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      5340	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_40
0xa366	          0x4863d0	                         movsxd rdx, eax	      5340	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_40
0xa369	          0x4889d0	                            mov rax, rdx	      5340	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_40
0xa36c	        0x48c1e002	                              shl rax, 2	      5340	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_40
0xa370	          0x4801d0	                            add rax, rdx	      5340	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_40
0xa373	        0x48c1e005	                              shl rax, 5	      5340	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_40
0xa377	        0x488d1401	                    lea rdx, [rcx + rax]	      5340	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_40
0xa37b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5341	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0xa37f	        0x48894258	             mov qword [rdx + 0x58], rax	      5340	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_40
0xa383	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5342	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	IF_24
0xa387	          0x4885c0	                           test rax, rax	      5342	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	IF_24
0xa38a	            0x7415	                            je 0x400a3e1	      5342	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	IF_24
0xa38c	    0x488b05000000	            mov rax, qword [0x0400a3d3] 	      5343	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	IF_24
0xa393	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5343	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	IF_24
0xa397	    0xc78098020000	              mov dword [rax + 0x298], 1	      5343	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	IF_24
0xa3a1	    0x488b05000000	            mov rax, qword [0x0400a3e8] 	      5344	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_41
0xa3a8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5344	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_41
0xa3ac	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5344	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_41
0xa3b3	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      5344	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_41
0xa3b9	          0x4863d0	                         movsxd rdx, eax	      5344	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_41
0xa3bc	          0x4889d0	                            mov rax, rdx	      5344	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_41
0xa3bf	        0x48c1e002	                              shl rax, 2	      5344	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_41
0xa3c3	          0x4801d0	                            add rax, rdx	      5344	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_41
0xa3c6	        0x48c1e005	                              shl rax, 5	      5344	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_41
0xa3ca	        0x488d1401	                    lea rdx, [rcx + rax]	      5344	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_41
0xa3ce	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5345	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23
0xa3d2	        0x48894248	             mov qword [rdx + 0x48], rax	      5344	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_23	CALL_41
0xa3d6	    0x488b05000000	            mov rax, qword [0x0400a41d] 	      5347	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0xa3dd	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5347	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0xa3e1	    0x8b9060020000	           mov edx, dword [rax + 0x260] 	      5347	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0xa3e7	          0x83c201	                              add edx, 1	      5347	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0xa3ea	    0x899060020000	            mov dword [rax + 0x260], edx	      5347	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0xa3f0	    0x838568ffffff	               add dword [rbp - 0x98], 1	      5348	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0xa3f7	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      5350	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_25
0xa3fa	      0x2500200000	                         and eax, 0x2000	      5350	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_25
0xa3ff	            0x85c0	                           test eax, eax	      5350	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_25
0xa401	            0x741a	                            je 0x400a45d	      5350	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_25
0xa403	    0x488b05000000	            mov rax, qword [0x0400a44a] 	      5351	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_25
0xa40a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5351	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_25
0xa40e	    0x8b900c030000	           mov edx, dword [rax + 0x30c] 	      5351	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_25
0xa414	          0x83c201	                              add edx, 1	      5351	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_25
0xa417	    0x89900c030000	            mov dword [rax + 0x30c], edx	      5351	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2	IF_25
0xa41d	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0xa421	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0xa425	        0x48894590	             mov qword [rbp - 0x70], rax	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0xa429	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0xa42e	     0xf85cdfcffff	                           jne 0x400a141	      5320	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1	FOR_2
0xa434	    0x838550ffffff	               add dword [rbp - 0xb0], 1	      5318	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1
0xa43b	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 2	      5318	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1
0xa442	     0xf8ea3fcffff	                           jle 0x400a12b	      5318	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	FOR_1
0xa448	      0xbf23000000	                           mov edi, 0x23	      5356	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_42
0xa44d	      0xe800000000	                          call 0x400a492	      5356	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_42
0xa452	    0x488b05000000	            mov rax, qword [0x0400a499] 	      5357	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_43
0xa459	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5357	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_43
0xa45d	          0x4889c7	                            mov rdi, rax	      5357	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_43
0xa460	      0xe800000000	                          call 0x400a4a5	      5357	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22	CALL_43
0xa465	    0xc78564ffffff	               mov dword [rbp - 0x9c], 1	      5358	syntax.c	FUNCTION_81	IF_20	ELSE_8	IF_22
0xa46f	    0xc78550ffffff	               mov dword [rbp - 0xb0], 0	      5365	syntax.c	FUNCTION_81	FOR_3
0xa479	            0xeb7f	                           jmp 0x400a53a	      5365	syntax.c	FUNCTION_81	FOR_3
0xa47b	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0xa481	            0x4898	                                    cdqe	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0xa483	      0x488b44c5e0	     mov rax, qword [rbp + rax*8 - 0x20]	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0xa488	        0x48894590	             mov qword [rbp - 0x70], rax	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0xa48c	            0xeb5e	                           jmp 0x400a52c	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0xa48e	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	      5368	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26
0xa495	            0x7526	                           jne 0x400a4fd	      5368	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26
0xa497	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5370	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_44
0xa49b	          0x488b00	                    mov rax, qword [rax]	      5370	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_44
0xa49e	        0x488b4068	            mov rax, qword [rax + 0x68] 	      5370	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_44
0xa4a2	          0x4889c7	                            mov rdi, rax	      5370	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_44
0xa4a5	      0xe800000000	                          call 0x400a4ea	      5370	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_44
0xa4aa	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5371	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_45
0xa4ae	          0x488b00	                    mov rax, qword [rax]	      5371	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_45
0xa4b1	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5371	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_45
0xa4b5	          0x4889c7	                            mov rdi, rax	      5371	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_45
0xa4b8	      0xe800000000	                          call 0x400a4fd	      5371	syntax.c	FUNCTION_81	FOR_3	FOR_4	IF_26	CALL_45
0xa4bd	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5373	syntax.c	FUNCTION_81	FOR_3	FOR_4	CALL_46
0xa4c1	          0x488b00	                    mov rax, qword [rax]	      5373	syntax.c	FUNCTION_81	FOR_3	FOR_4	CALL_46
0xa4c4	          0x4889c7	                            mov rdi, rax	      5373	syntax.c	FUNCTION_81	FOR_3	FOR_4	CALL_46
0xa4c7	      0xe800000000	                          call 0x400a50c	      5373	syntax.c	FUNCTION_81	FOR_3	FOR_4	CALL_46
0xa4cc	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5374	syntax.c	FUNCTION_81	FOR_3	FOR_4
0xa4d0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5374	syntax.c	FUNCTION_81	FOR_3	FOR_4
0xa4d4	        0x488945a8	             mov qword [rbp - 0x58], rax	      5374	syntax.c	FUNCTION_81	FOR_3	FOR_4
0xa4d8	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5375	syntax.c	FUNCTION_81	FOR_3	FOR_4	CALL_47
0xa4dc	          0x4889c7	                            mov rdi, rax	      5375	syntax.c	FUNCTION_81	FOR_3	FOR_4	CALL_47
0xa4df	      0xe800000000	                          call 0x400a524	      5375	syntax.c	FUNCTION_81	FOR_3	FOR_4	CALL_47
0xa4e4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0xa4e8	        0x48894590	             mov qword [rbp - 0x70], rax	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0xa4ec	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0xa4f1	            0x759b	                           jne 0x400a4ce	      5366	syntax.c	FUNCTION_81	FOR_3	FOR_4
0xa4f3	    0x838550ffffff	               add dword [rbp - 0xb0], 1	      5365	syntax.c	FUNCTION_81	FOR_3
0xa4fa	    0x83bd50ffffff	               cmp dword [rbp - 0xb0], 2	      5365	syntax.c	FUNCTION_81	FOR_3
0xa501	     0xf8e74ffffff	                           jle 0x400a4bb	      5365	syntax.c	FUNCTION_81	FOR_3
0xa507	    0x83bd64ffffff	               cmp dword [rbp - 0x9c], 0	      5378	syntax.c	FUNCTION_81	IF_27
0xa50e	            0x757a	                           jne 0x400a5ca	      5378	syntax.c	FUNCTION_81	IF_27
0xa510	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5380	syntax.c	FUNCTION_81	IF_27	CALL_48
0xa514	          0x4889c7	                            mov rdi, rax	      5380	syntax.c	FUNCTION_81	IF_27	CALL_48
0xa517	      0xe800000000	                          call 0x400a55c	      5380	syntax.c	FUNCTION_81	IF_27	CALL_48
0xa51c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5381	syntax.c	FUNCTION_81	IF_27	CALL_49
0xa520	          0x4889c7	                            mov rdi, rax	      5381	syntax.c	FUNCTION_81	IF_27	CALL_49
0xa523	      0xe800000000	                          call 0x400a568	      5381	syntax.c	FUNCTION_81	IF_27	CALL_49
0xa528	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5382	syntax.c	FUNCTION_81	IF_27	CALL_50
0xa52c	          0x4889c7	                            mov rdi, rax	      5382	syntax.c	FUNCTION_81	IF_27	CALL_50
0xa52f	      0xe800000000	                          call 0x400a574	      5382	syntax.c	FUNCTION_81	IF_27	CALL_50
0xa534	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      5383	syntax.c	FUNCTION_81	IF_27	IF_28
0xa53b	            0x741e	                            je 0x400a59b	      5383	syntax.c	FUNCTION_81	IF_27	IF_28
0xa53d	      0xbf00000000	                              mov edi, 0	      5384	syntax.c	FUNCTION_81	IF_27	CALL_52
0xa542	      0xe800000000	                          call 0x400a587	      5384	syntax.c	FUNCTION_81	IF_27	CALL_52
0xa547	          0x4889c2	                            mov rdx, rax	      5384	syntax.c	FUNCTION_81	IF_27	CALL_52
0xa54a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5384	syntax.c	FUNCTION_81	IF_27	CALL_52
0xa54e	          0x4889c6	                            mov rsi, rax	      5384	syntax.c	FUNCTION_81	IF_27	CALL_52
0xa551	          0x4889d7	                            mov rdi, rdx	      5384	syntax.c	FUNCTION_81	IF_27	CALL_52
0xa554	      0xe800000000	                          call 0x400a599	      5384	syntax.c	FUNCTION_81	IF_27	CALL_52
0xa559	            0xeb2f	                           jmp 0x400a5ca	      5388	syntax.c	FUNCTION_81
0xa55b	    0x83bd60ffffff	               cmp dword [rbp - 0xa0], 0	      5385	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0xa562	            0x750a	                           jne 0x400a5ae	      5385	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0xa564	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      5385	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0xa56c	            0x751c	                           jne 0x400a5ca	      5385	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0xa56e	      0xbf00000000	                              mov edi, 0	      5386	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0xa573	      0xe800000000	                          call 0x400a5b8	      5386	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0xa578	          0x4889c2	                            mov rdx, rax	      5386	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0xa57b	        0x488b4598	             mov rax, qword [rbp - 0x68]	      5386	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0xa57f	          0x4889c6	                            mov rsi, rax	      5386	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0xa582	          0x4889d7	                            mov rdi, rdx	      5386	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0xa585	      0xe800000000	                          call 0x400a5ca	      5386	syntax.c	FUNCTION_81	IF_27	ELSE_9	IF_29
0xa58a	              0x90	                                     nop	      5388	syntax.c	FUNCTION_81
0xa58b	        0x488b45f8	                mov rax, qword [rbp - 8]	      5388	syntax.c	FUNCTION_81
0xa58f	    0x644833042528	                xor rax, qword fs:[0x28]	      5388	syntax.c	FUNCTION_81
0xa598	            0x7405	                            je 0x400a5df	      5388	syntax.c	FUNCTION_81
0xa59a	      0xe800000000	                          call 0x400a5df	      5388	syntax.c	FUNCTION_81
0xa59f	              0xc9	                                   leave	      5388	syntax.c	FUNCTION_81
0xa5a0	              0xc3	                                     ret	      5388	syntax.c	FUNCTION_81
syn_stack_apply_changes_block	FOR,1:DO,0:IF,7:SWITCH,0:functions,0:ELSE,2:WHILE,0:CALL,1	112
0x164e	              0x55	                                push rbp	      1322	syntax.c	FUNCTION_15
0x164f	          0x4889e5	                            mov rbp, rsp	      1322	syntax.c	FUNCTION_15
0x1652	        0x4883ec30	                           sub rsp, 0x30	      1322	syntax.c	FUNCTION_15
0x1656	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1322	syntax.c	FUNCTION_15
0x165a	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1322	syntax.c	FUNCTION_15
0x165e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1326	syntax.c	FUNCTION_15	IF_1
0x1662	    0x488b80100300	           mov rax, qword [rax + 0x310] 	      1326	syntax.c	FUNCTION_15	IF_1
0x1669	          0x4885c0	                           test rax, rax	      1326	syntax.c	FUNCTION_15	IF_1
0x166c	     0xf84c0010000	                            je 0x4001872	      1326	syntax.c	FUNCTION_15	IF_1
0x1672	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1329	syntax.c	FUNCTION_15
0x167a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1330	syntax.c	FUNCTION_15	FOR_1
0x167e	    0x488b80200300	           mov rax, qword [rax + 0x320] 	      1330	syntax.c	FUNCTION_15	FOR_1
0x1685	        0x488945e0	             mov qword [rbp - 0x20], rax	      1330	syntax.c	FUNCTION_15	FOR_1
0x1689	      0xe997010000	                           jmp 0x4001865	      1330	syntax.c	FUNCTION_15	FOR_1
0x168e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x1692	        0x488b5008	                mov rdx, qword [rax + 8]	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x1696	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x169a	    0x488b80b80200	           mov rax, qword [rax + 0x2b8] 	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x16a1	          0x4801c2	                            add rdx, rax	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x16a4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x16a8	    0x488b80100100	           mov rax, qword [rax + 0x110] 	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x16af	          0x4839c2	                            cmp rdx, rax	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x16b2	     0xf8e5a010000	                           jle 0x4001852	      1332	syntax.c	FUNCTION_15	FOR_1	IF_2
0x16b8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1334	syntax.c	FUNCTION_15	FOR_1	IF_2
0x16bc	        0x488b5008	                mov rdx, qword [rax + 8]	      1334	syntax.c	FUNCTION_15	FOR_1	IF_2
0x16c0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1334	syntax.c	FUNCTION_15	FOR_1	IF_2
0x16c4	    0x488b80200100	           mov rax, qword [rax + 0x120] 	      1334	syntax.c	FUNCTION_15	FOR_1	IF_2
0x16cb	          0x4801d0	                            add rax, rdx	      1334	syntax.c	FUNCTION_15	FOR_1	IF_2
0x16ce	        0x488945f0	             mov qword [rbp - 0x10], rax	      1334	syntax.c	FUNCTION_15	FOR_1	IF_2
0x16d2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1335	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x16d6	    0x488b80180100	           mov rax, qword [rax + 0x118] 	      1335	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x16dd	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      1335	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x16e1	            0x7c4e	                            jl 0x4001771	      1335	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x16e3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1338	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x16e7	          0x488b00	                    mov rax, qword [rax]	      1338	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x16ea	        0x488945f8	                mov qword [rbp - 8], rax	      1338	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x16ee	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1339	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	IF_4
0x16f3	            0x7511	                           jne 0x4001746	      1339	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	IF_4
0x16f5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1340	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	IF_4
0x16f9	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1340	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	IF_4
0x16fd	    0x488990200300	            mov qword [rax + 0x320], rdx	      1340	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	IF_4
0x1704	            0xeb0b	                           jmp 0x4001751	      1340	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	IF_4
0x1706	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1342	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	ELSE_1
0x170a	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1342	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	ELSE_1
0x170e	          0x488910	                    mov qword [rax], rdx	      1342	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	ELSE_1
0x1711	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1343	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	CALL_1
0x1715	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1343	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	CALL_1
0x1719	          0x4889d6	                            mov rsi, rdx	      1343	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	CALL_1
0x171c	          0x4889c7	                            mov rdi, rax	      1343	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	CALL_1
0x171f	      0xe82d030000	           call sym.syn_stack_free_entry	      1343	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3	CALL_1
0x1724	        0x488b45f8	                mov rax, qword [rbp - 8]	      1344	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x1728	        0x488945e0	             mov qword [rbp - 0x20], rax	      1344	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x172c	      0xe9f4000000	                           jmp 0x4001865	      1345	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_3
0x1731	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1350	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5
0x1735	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	      1350	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5
0x173c	          0x4885c0	                           test rax, rax	      1350	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5
0x173f	     0xf8480000000	                            je 0x4001805	      1350	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5
0x1745	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1350	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5
0x1749	    0x488b90d00000	            mov rdx, qword [rax + 0xd0] 	      1350	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5
0x1750	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1350	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5
0x1754	    0x488b80100100	           mov rax, qword [rax + 0x110] 	      1350	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5
0x175b	          0x4839c2	                            cmp rdx, rax	      1350	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5
0x175e	            0x7e65	                           jle 0x4001805	      1350	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5
0x1760	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1352	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x1764	    0x488b90d00000	            mov rdx, qword [rax + 0xd0] 	      1352	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x176b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1352	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x176f	    0x488b80200100	           mov rax, qword [rax + 0x120] 	      1352	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x1776	          0x4801c2	                            add rdx, rax	      1352	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x1779	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1352	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x177d	    0x488b80100100	           mov rax, qword [rax + 0x110] 	      1352	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x1784	          0x4839c2	                            cmp rdx, rax	      1352	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x1787	            0x7e26	                           jle 0x40017ef	      1352	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x1789	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1353	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x178d	    0x488b90d00000	            mov rdx, qword [rax + 0xd0] 	      1353	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x1794	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1353	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x1798	    0x488b80200100	           mov rax, qword [rax + 0x120] 	      1353	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x179f	          0x4801c2	                            add rdx, rax	      1353	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x17a2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1353	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x17a6	    0x488990d00000	             mov qword [rax + 0xd0], rdx	      1353	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x17ad	            0xeb16	                           jmp 0x4001805	      1353	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	IF_6
0x17af	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1355	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	ELSE_2
0x17b3	    0x488b90100100	           mov rdx, qword [rax + 0x110] 	      1355	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	ELSE_2
0x17ba	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1355	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	ELSE_2
0x17be	    0x488990d00000	             mov qword [rax + 0xd0], rdx	      1355	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_5	ELSE_2
0x17c5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1357	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x17c9	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	      1357	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x17d0	          0x4885c0	                           test rax, rax	      1357	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x17d3	            0x741b	                            je 0x4001830	      1357	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x17d5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1358	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x17d9	    0x488b90d00000	            mov rdx, qword [rax + 0xd0] 	      1358	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x17e0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1358	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x17e4	    0x488b80180100	           mov rax, qword [rax + 0x118] 	      1358	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x17eb	          0x4839c2	                            cmp rdx, rax	      1358	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x17ee	            0x7d16	                           jge 0x4001846	      1358	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x17f0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1359	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x17f4	    0x488b90180100	           mov rdx, qword [rax + 0x118] 	      1359	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x17fb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1359	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x17ff	    0x488990d00000	             mov qword [rax + 0xd0], rdx	      1359	syntax.c	FUNCTION_15	FOR_1	IF_2	IF_7
0x1806	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1361	syntax.c	FUNCTION_15	FOR_1	IF_2
0x180a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1361	syntax.c	FUNCTION_15	FOR_1	IF_2
0x180e	        0x48895008	                mov qword [rax + 8], rdx	      1361	syntax.c	FUNCTION_15	FOR_1	IF_2
0x1812	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1363	syntax.c	FUNCTION_15	FOR_1
0x1816	        0x488945e8	             mov qword [rbp - 0x18], rax	      1363	syntax.c	FUNCTION_15	FOR_1
0x181a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1364	syntax.c	FUNCTION_15	FOR_1
0x181e	          0x488b00	                    mov rax, qword [rax]	      1364	syntax.c	FUNCTION_15	FOR_1
0x1821	        0x488945e0	             mov qword [rbp - 0x20], rax	      1364	syntax.c	FUNCTION_15	FOR_1
0x1825	      0x48837de000	               cmp qword [rbp - 0x20], 0	      1330	syntax.c	FUNCTION_15	FOR_1
0x182a	     0xf855efeffff	                           jne 0x40016ce	      1330	syntax.c	FUNCTION_15	FOR_1
0x1830	            0xeb01	                           jmp 0x4001873	      1330	syntax.c	FUNCTION_15	FOR_1
0x1832	              0x90	                                     nop	      1327	syntax.c	FUNCTION_15	IF_1
0x1833	              0xc9	                                   leave	      1366	syntax.c	FUNCTION_15
0x1834	              0xc3	                                     ret	      1366	syntax.c	FUNCTION_15
syntax_check_changed	FOR,0:DO,0:IF,3:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,5	37
0x26ec	              0x55	                                push rbp	      1751	syntax.c	FUNCTION_25
0x26ed	          0x4889e5	                            mov rbp, rsp	      1751	syntax.c	FUNCTION_25
0x26f0	        0x4883ec20	                           sub rsp, 0x20	      1751	syntax.c	FUNCTION_25
0x26f4	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1751	syntax.c	FUNCTION_25
0x26f8	    0xc745f4010000	                mov dword [rbp - 0xc], 1	      1752	syntax.c	FUNCTION_25
0x26ff	    0x8b0500000000	            mov eax, dword [0x04002745] 	      1762	syntax.c	FUNCTION_25	IF_1	CALL_1
0x2705	            0x85c0	                           test eax, eax	      1762	syntax.c	FUNCTION_25	IF_1	CALL_1
0x2707	            0x746e	                            je 0x40027b7	      1762	syntax.c	FUNCTION_25	IF_1	CALL_1
0x2709	    0x488b05000000	            mov rax, qword [0x04002750] 	      1762	syntax.c	FUNCTION_25	IF_1	CALL_1
0x2710	        0x4883c001	                              add rax, 1	      1762	syntax.c	FUNCTION_25	IF_1	CALL_1
0x2714	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1762	syntax.c	FUNCTION_25	IF_1	CALL_1
0x2718	            0x755d	                           jne 0x40027b7	      1762	syntax.c	FUNCTION_25	IF_1	CALL_1
0x271a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1764	syntax.c	FUNCTION_25	IF_1	CALL_2
0x271e	          0x4889c7	                            mov rdi, rax	      1764	syntax.c	FUNCTION_25	IF_1	CALL_2
0x2721	      0xe882f3ffff	           call sym.syn_stack_find_entry	      1764	syntax.c	FUNCTION_25	IF_1	CALL_2
0x2726	        0x488945f8	                mov qword [rbp - 8], rax	      1764	syntax.c	FUNCTION_25	IF_1	CALL_2
0x272a	      0x48837df800	                  cmp qword [rbp - 8], 0	      1765	syntax.c	FUNCTION_25	IF_1	IF_2
0x272f	            0x7446	                            je 0x40027b7	      1765	syntax.c	FUNCTION_25	IF_1	IF_2
0x2731	        0x488b45f8	                mov rax, qword [rbp - 8]	      1765	syntax.c	FUNCTION_25	IF_1	IF_2
0x2735	        0x488b4008	                mov rax, qword [rax + 8]	      1765	syntax.c	FUNCTION_25	IF_1	IF_2
0x2739	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1765	syntax.c	FUNCTION_25	IF_1	IF_2
0x273d	            0x7538	                           jne 0x40027b7	      1765	syntax.c	FUNCTION_25	IF_1	IF_2
0x273f	      0xbf00000000	                              mov edi, 0	      1771	syntax.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x2744	      0xe833000000	                call sym.syn_finish_line	      1771	syntax.c	FUNCTION_25	IF_1	IF_2	CALL_3
0x2749	        0x488b45f8	                mov rax, qword [rbp - 8]	      1777	syntax.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_4
0x274d	          0x4889c7	                            mov rdi, rax	      1777	syntax.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_4
0x2750	      0xe82afcffff	                call sym.syn_stack_equal	      1777	syntax.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_4
0x2755	            0x85c0	                           test eax, eax	      1777	syntax.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_4
0x2757	            0x7407	                            je 0x40027a0	      1777	syntax.c	FUNCTION_25	IF_1	IF_2	IF_3	CALL_4
0x2759	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1778	syntax.c	FUNCTION_25	IF_1	IF_2	IF_3
0x2760	    0x488b05000000	            mov rax, qword [0x040027a7] 	      1783	syntax.c	FUNCTION_25	IF_1	IF_2
0x2767	        0x4883c001	                              add rax, 1	      1783	syntax.c	FUNCTION_25	IF_1	IF_2
0x276b	    0x488905000000	            mov qword [0x040027b2], rax 	      1783	syntax.c	FUNCTION_25	IF_1	IF_2
0x2772	      0xe89af3ffff	            call sym.store_current_state	      1784	syntax.c	FUNCTION_25	IF_1	IF_2	CALL_5
0x2777	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1788	syntax.c	FUNCTION_25
0x277a	              0xc9	                                   leave	      1789	syntax.c	FUNCTION_25
0x277b	              0xc3	                                     ret	      1789	syntax.c	FUNCTION_25
syntime_report	FOR,2:DO,0:IF,6:SWITCH,0:functions,0:ELSE,1:WHILE,0:CALL,46	275
0xcf74	              0x55	                                push rbp	      6765	syntax.c	FUNCTION_112
0xcf75	          0x4889e5	                            mov rbp, rsp	      6765	syntax.c	FUNCTION_112
0xcf78	        0x4883ec60	                           sub rsp, 0x60	      6765	syntax.c	FUNCTION_112
0xcf7c	    0x64488b042528	                mov rax, qword fs:[0x28]	      6765	syntax.c	FUNCTION_112
0xcf85	        0x488945f8	                mov qword [rbp - 8], rax	      6765	syntax.c	FUNCTION_112
0xcf89	            0x31c0	                            xor eax, eax	      6765	syntax.c	FUNCTION_112
0xcf8b	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      6773	syntax.c	FUNCTION_112
0xcf92	    0x488b05000000	            mov rax, qword [0x0400cfd9] 	      6777	syntax.c	FUNCTION_112	IF_1	CALL_1
0xcf99	          0x4889c7	                            mov rdi, rax	      6777	syntax.c	FUNCTION_112	IF_1	CALL_1
0xcf9c	      0xe800000000	                          call 0x400cfe1	      6777	syntax.c	FUNCTION_112	IF_1	CALL_1
0xcfa1	            0x85c0	                           test eax, eax	      6777	syntax.c	FUNCTION_112	IF_1	CALL_1
0xcfa3	            0x7517	                           jne 0x400cffc	      6777	syntax.c	FUNCTION_112	IF_1	CALL_1
0xcfa5	      0xbf00000000	                              mov edi, 0	      6779	syntax.c	FUNCTION_112	IF_1	CALL_3
0xcfaa	      0xe800000000	                          call 0x400cfef	      6779	syntax.c	FUNCTION_112	IF_1	CALL_3
0xcfaf	          0x4889c7	                            mov rdi, rax	      6779	syntax.c	FUNCTION_112	IF_1	CALL_3
0xcfb2	      0xe800000000	                          call 0x400cff7	      6779	syntax.c	FUNCTION_112	IF_1	CALL_3
0xcfb7	      0xe904040000	                           jmp 0x400d400	      6779	syntax.c	FUNCTION_112	IF_1	CALL_3
0xcfbc	        0x488d45e0	                   lea rax, [rbp - 0x20]	      6783	syntax.c	FUNCTION_112	CALL_4
0xcfc0	      0xba32000000	                           mov edx, 0x32	      6783	syntax.c	FUNCTION_112	CALL_4
0xcfc5	      0xbe48000000	                           mov esi, 0x48	      6783	syntax.c	FUNCTION_112	CALL_4
0xcfca	          0x4889c7	                            mov rdi, rax	      6783	syntax.c	FUNCTION_112	CALL_4
0xcfcd	      0xe800000000	                          call 0x400d012	      6783	syntax.c	FUNCTION_112	CALL_4
0xcfd2	        0x488d45d0	                   lea rax, [rbp - 0x30]	      6784	syntax.c	FUNCTION_112	CALL_5
0xcfd6	          0x4889c7	                            mov rdi, rax	      6784	syntax.c	FUNCTION_112	CALL_5
0xcfd9	      0xe800000000	                          call 0x400d01e	      6784	syntax.c	FUNCTION_112	CALL_5
0xcfde	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	      6785	syntax.c	FUNCTION_112	FOR_1
0xcfe5	      0xe961010000	                           jmp 0x400d18b	      6785	syntax.c	FUNCTION_112	FOR_1
0xcfea	    0x488b05000000	            mov rax, qword [0x0400d031] 	      6787	syntax.c	FUNCTION_112	FOR_1	CALL_6
0xcff1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6787	syntax.c	FUNCTION_112	FOR_1	CALL_6
0xcff5	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      6787	syntax.c	FUNCTION_112	FOR_1	CALL_6
0xcffc	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      6787	syntax.c	FUNCTION_112	FOR_1	CALL_6
0xcfff	          0x4863d0	                         movsxd rdx, eax	      6787	syntax.c	FUNCTION_112	FOR_1	CALL_6
0xd002	          0x4889d0	                            mov rax, rdx	      6787	syntax.c	FUNCTION_112	FOR_1	CALL_6
0xd005	        0x48c1e002	                              shl rax, 2	      6787	syntax.c	FUNCTION_112	FOR_1	CALL_6
0xd009	          0x4801d0	                            add rax, rdx	      6787	syntax.c	FUNCTION_112	FOR_1	CALL_6
0xd00c	        0x48c1e005	                              shl rax, 5	      6787	syntax.c	FUNCTION_112	FOR_1	CALL_6
0xd010	          0x4801c8	                            add rax, rcx	      6787	syntax.c	FUNCTION_112	FOR_1	CALL_6
0xd013	        0x488945b0	             mov qword [rbp - 0x50], rax	      6787	syntax.c	FUNCTION_112	FOR_1	CALL_6
0xd017	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      6788	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd01b	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      6788	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd022	          0x4885c0	                           test rax, rax	      6788	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd025	     0xf8e1c010000	                           jle 0x400d187	      6788	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd02b	        0x488d45e0	                   lea rax, [rbp - 0x20]	      6790	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_7
0xd02f	      0xbe01000000	                              mov esi, 1	      6790	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_7
0xd034	          0x4889c7	                            mov rdi, rax	      6790	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_7
0xd037	      0xe800000000	                          call 0x400d07c	      6790	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_7
0xd03c	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      6791	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd040	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      6791	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd043	          0x4863d0	                         movsxd rdx, eax	      6791	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd046	          0x4889d0	                            mov rax, rdx	      6791	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd049	        0x48c1e003	                              shl rax, 3	      6791	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd04d	          0x4801d0	                            add rax, rdx	      6791	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd050	        0x48c1e003	                              shl rax, 3	      6791	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd054	          0x4801c8	                            add rax, rcx	      6791	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd057	        0x488945b8	             mov qword [rbp - 0x48], rax	      6791	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd05b	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      6792	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd05f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      6792	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd063	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      6792	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd067	        0x488b4070	            mov rax, qword [rax + 0x70] 	      6792	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd06b	          0x488901	                    mov qword [rcx], rax	      6792	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd06e	        0x48895108	                mov qword [rcx + 8], rdx	      6792	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd072	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      6793	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_8
0xd076	        0x488d5070	                   lea rdx, [rax + 0x70]	      6793	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_8
0xd07a	        0x488d45d0	                   lea rax, [rbp - 0x30]	      6793	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_8
0xd07e	          0x4889d6	                            mov rsi, rdx	      6793	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_8
0xd081	          0x4889c7	                            mov rdi, rax	      6793	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_8
0xd084	      0xe800000000	                          call 0x400d0c9	      6793	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_8
0xd089	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      6794	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd08d	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      6794	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd094	            0x89c2	                            mov edx, eax	      6794	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd096	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6794	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd09a	          0x895010	             mov dword [rax + 0x10], edx	      6794	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd09d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      6795	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd0a1	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      6795	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd0a8	            0x89c2	                            mov edx, eax	      6795	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd0aa	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6795	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd0ae	          0x895014	             mov dword [rax + 0x14], edx	      6795	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd0b1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      6796	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd0b5	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      6796	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd0bc	            0x89c2	                            mov edx, eax	      6796	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd0be	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      6796	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd0c1	             0x1d0	                            add eax, edx	      6796	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd0c3	          0x8945ac	             mov dword [rbp - 0x54], eax	      6796	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd0c6	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      6797	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd0ca	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      6797	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd0ce	    0x488b90880000	            mov rdx, qword [rax + 0x88] 	      6797	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd0d5	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      6797	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd0dc	        0x48894118	             mov qword [rcx + 0x18], rax	      6797	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd0e0	        0x48895120	             mov qword [rcx + 0x20], rdx	      6797	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd0e4	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      6799	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_9
0xd0e8	    0x488b80900000	            mov rax, qword [rax + 0x90] 	      6799	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_9
0xd0ef	            0x89c6	                            mov esi, eax	      6799	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_9
0xd0f1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      6799	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_9
0xd0f5	        0x488d4870	                   lea rcx, [rax + 0x70]	      6799	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_9
0xd0f9	        0x488d45c0	                   lea rax, [rbp - 0x40]	      6799	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_9
0xd0fd	          0x4889c2	                            mov rdx, rax	      6799	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_9
0xd100	          0x4889cf	                            mov rdi, rcx	      6799	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_9
0xd103	      0xe800000000	                          call 0x400d148	      6799	syntax.c	FUNCTION_112	FOR_1	IF_2	CALL_9
0xd108	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      6800	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd10c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6800	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd110	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      6800	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd114	        0x48894128	             mov qword [rcx + 0x28], rax	      6800	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd118	        0x48895130	             mov qword [rcx + 0x30], rdx	      6800	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd11c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      6802	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd120	         0xfb74054	           movzx eax, word [rax + 0x54] 	      6802	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd124	           0xfbfd0	                           movsx edx, ax	      6802	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd127	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6802	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd12b	          0x895038	             mov dword [rax + 0x38], edx	      6802	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd12e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      6803	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd132	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      6803	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd136	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6803	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd13a	        0x48895040	             mov qword [rax + 0x40], rdx	      6803	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd13e	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      6804	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd141	          0x83c001	                              add eax, 1	      6804	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd144	          0x8945e0	             mov dword [rbp - 0x20], eax	      6804	syntax.c	FUNCTION_112	FOR_1	IF_2
0xd147	        0x8345a401	               add dword [rbp - 0x5c], 1	      6785	syntax.c	FUNCTION_112	FOR_1
0xd14b	    0x488b05000000	            mov rax, qword [0x0400d192] 	      6785	syntax.c	FUNCTION_112	FOR_1
0xd152	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6785	syntax.c	FUNCTION_112	FOR_1
0xd156	    0x8b8060020000	           mov eax, dword [rax + 0x260] 	      6785	syntax.c	FUNCTION_112	FOR_1
0xd15c	          0x3b45a4	             cmp eax, dword [rbp - 0x5c]	      6785	syntax.c	FUNCTION_112	FOR_1
0xd15f	     0xf8f85feffff	                            jg 0x400d02a	      6785	syntax.c	FUNCTION_112	FOR_1
0xd165	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      6810	syntax.c	FUNCTION_112	IF_3
0xd168	          0x83f801	                              cmp eax, 1	      6810	syntax.c	FUNCTION_112	IF_3
0xd16b	            0x7e1c	                           jle 0x400d1c9	      6810	syntax.c	FUNCTION_112	IF_3
0xd16d	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      6811	syntax.c	FUNCTION_112	IF_3	CALL_10
0xd170	          0x4863f0	                         movsxd rsi, eax	      6811	syntax.c	FUNCTION_112	IF_3	CALL_10
0xd173	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6811	syntax.c	FUNCTION_112	IF_3	CALL_10
0xd177	      0xb900000000	                              mov ecx, 0	      6811	syntax.c	FUNCTION_112	IF_3	CALL_10
0xd17c	      0xba48000000	                           mov edx, 0x48	      6811	syntax.c	FUNCTION_112	IF_3	CALL_10
0xd181	          0x4889c7	                            mov rdi, rax	      6811	syntax.c	FUNCTION_112	IF_3	CALL_10
0xd184	      0xe800000000	                          call 0x400d1c9	      6811	syntax.c	FUNCTION_112	IF_3	CALL_10
0xd189	      0xbf00000000	                              mov edi, 0	      6814	syntax.c	FUNCTION_112	CALL_12
0xd18e	      0xe800000000	                          call 0x400d1d3	      6814	syntax.c	FUNCTION_112	CALL_12
0xd193	          0x4889c7	                            mov rdi, rax	      6814	syntax.c	FUNCTION_112	CALL_12
0xd196	      0xe800000000	                          call 0x400d1db	      6814	syntax.c	FUNCTION_112	CALL_12
0xd19b	      0xbf00000000	                              mov edi, 0	      6815	syntax.c	FUNCTION_112	CALL_13
0xd1a0	      0xe800000000	                          call 0x400d1e5	      6815	syntax.c	FUNCTION_112	CALL_13
0xd1a5	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	      6816	syntax.c	FUNCTION_112	FOR_2
0xd1ac	      0xe9a4010000	                           jmp 0x400d395	      6816	syntax.c	FUNCTION_112	FOR_2
0xd1b1	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	      6818	syntax.c	FUNCTION_112	FOR_2
0xd1b5	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      6818	syntax.c	FUNCTION_112	FOR_2
0xd1b8	          0x4863d0	                         movsxd rdx, eax	      6818	syntax.c	FUNCTION_112	FOR_2
0xd1bb	          0x4889d0	                            mov rax, rdx	      6818	syntax.c	FUNCTION_112	FOR_2
0xd1be	        0x48c1e003	                              shl rax, 3	      6818	syntax.c	FUNCTION_112	FOR_2
0xd1c2	          0x4801d0	                            add rax, rdx	      6818	syntax.c	FUNCTION_112	FOR_2
0xd1c5	        0x48c1e003	                              shl rax, 3	      6818	syntax.c	FUNCTION_112	FOR_2
0xd1c9	          0x4801c8	                            add rax, rcx	      6818	syntax.c	FUNCTION_112	FOR_2
0xd1cc	        0x488945b8	             mov qword [rbp - 0x48], rax	      6818	syntax.c	FUNCTION_112	FOR_2
0xd1d0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6820	syntax.c	FUNCTION_112	FOR_2	CALL_15
0xd1d4	          0x4889c7	                            mov rdi, rax	      6820	syntax.c	FUNCTION_112	FOR_2	CALL_15
0xd1d7	      0xe800000000	                          call 0x400d21c	      6820	syntax.c	FUNCTION_112	FOR_2	CALL_15
0xd1dc	          0x4889c7	                            mov rdi, rax	      6820	syntax.c	FUNCTION_112	FOR_2	CALL_15
0xd1df	      0xe800000000	                          call 0x400d224	      6820	syntax.c	FUNCTION_112	FOR_2	CALL_15
0xd1e4	      0xbf00000000	                              mov edi, 0	      6821	syntax.c	FUNCTION_112	FOR_2	CALL_16
0xd1e9	      0xe800000000	                          call 0x400d22e	      6821	syntax.c	FUNCTION_112	FOR_2	CALL_16
0xd1ee	      0xbf0d000000	                            mov edi, 0xd	      6822	syntax.c	FUNCTION_112	FOR_2	CALL_17
0xd1f3	      0xe800000000	                          call 0x400d238	      6822	syntax.c	FUNCTION_112	FOR_2	CALL_17
0xd1f8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6823	syntax.c	FUNCTION_112	FOR_2	CALL_18
0xd1fc	          0x8b4010	            mov eax, dword [rax + 0x10] 	      6823	syntax.c	FUNCTION_112	FOR_2	CALL_18
0xd1ff	            0x4898	                                    cdqe	      6823	syntax.c	FUNCTION_112	FOR_2	CALL_18
0xd201	          0x4889c7	                            mov rdi, rax	      6823	syntax.c	FUNCTION_112	FOR_2	CALL_18
0xd204	      0xe800000000	                          call 0x400d249	      6823	syntax.c	FUNCTION_112	FOR_2	CALL_18
0xd209	      0xbf00000000	                              mov edi, 0	      6824	syntax.c	FUNCTION_112	FOR_2	CALL_19
0xd20e	      0xe800000000	                          call 0x400d253	      6824	syntax.c	FUNCTION_112	FOR_2	CALL_19
0xd213	      0xbf14000000	                           mov edi, 0x14	      6825	syntax.c	FUNCTION_112	FOR_2	CALL_20
0xd218	      0xe800000000	                          call 0x400d25d	      6825	syntax.c	FUNCTION_112	FOR_2	CALL_20
0xd21d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6826	syntax.c	FUNCTION_112	FOR_2	CALL_21
0xd221	          0x8b4014	            mov eax, dword [rax + 0x14] 	      6826	syntax.c	FUNCTION_112	FOR_2	CALL_21
0xd224	            0x4898	                                    cdqe	      6826	syntax.c	FUNCTION_112	FOR_2	CALL_21
0xd226	          0x4889c7	                            mov rdi, rax	      6826	syntax.c	FUNCTION_112	FOR_2	CALL_21
0xd229	      0xe800000000	                          call 0x400d26e	      6826	syntax.c	FUNCTION_112	FOR_2	CALL_21
0xd22e	      0xbf00000000	                              mov edi, 0	      6827	syntax.c	FUNCTION_112	FOR_2	CALL_22
0xd233	      0xe800000000	                          call 0x400d278	      6827	syntax.c	FUNCTION_112	FOR_2	CALL_22
0xd238	      0xbf1a000000	                           mov edi, 0x1a	      6828	syntax.c	FUNCTION_112	FOR_2	CALL_23
0xd23d	      0xe800000000	                          call 0x400d282	      6828	syntax.c	FUNCTION_112	FOR_2	CALL_23
0xd242	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6829	syntax.c	FUNCTION_112	FOR_2	CALL_25
0xd246	        0x4883c018	                           add rax, 0x18	      6829	syntax.c	FUNCTION_112	FOR_2	CALL_25
0xd24a	          0x4889c7	                            mov rdi, rax	      6829	syntax.c	FUNCTION_112	FOR_2	CALL_25
0xd24d	      0xe800000000	                          call 0x400d292	      6829	syntax.c	FUNCTION_112	FOR_2	CALL_25
0xd252	          0x4889c7	                            mov rdi, rax	      6829	syntax.c	FUNCTION_112	FOR_2	CALL_25
0xd255	      0xe800000000	                          call 0x400d29a	      6829	syntax.c	FUNCTION_112	FOR_2	CALL_25
0xd25a	      0xbf00000000	                              mov edi, 0	      6830	syntax.c	FUNCTION_112	FOR_2	CALL_26
0xd25f	      0xe800000000	                          call 0x400d2a4	      6830	syntax.c	FUNCTION_112	FOR_2	CALL_26
0xd264	      0xbf26000000	                           mov edi, 0x26	      6831	syntax.c	FUNCTION_112	FOR_2	CALL_27
0xd269	      0xe800000000	                          call 0x400d2ae	      6831	syntax.c	FUNCTION_112	FOR_2	CALL_27
0xd26e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6833	syntax.c	FUNCTION_112	FOR_2	CALL_29
0xd272	        0x4883c028	                           add rax, 0x28	      6833	syntax.c	FUNCTION_112	FOR_2	CALL_29
0xd276	          0x4889c7	                            mov rdi, rax	      6833	syntax.c	FUNCTION_112	FOR_2	CALL_29
0xd279	      0xe800000000	                          call 0x400d2be	      6833	syntax.c	FUNCTION_112	FOR_2	CALL_29
0xd27e	          0x4889c7	                            mov rdi, rax	      6833	syntax.c	FUNCTION_112	FOR_2	CALL_29
0xd281	      0xe800000000	                          call 0x400d2c6	      6833	syntax.c	FUNCTION_112	FOR_2	CALL_29
0xd286	      0xbf00000000	                              mov edi, 0	      6834	syntax.c	FUNCTION_112	FOR_2	CALL_30
0xd28b	      0xe800000000	                          call 0x400d2d0	      6834	syntax.c	FUNCTION_112	FOR_2	CALL_30
0xd290	      0xbf32000000	                           mov edi, 0x32	      6836	syntax.c	FUNCTION_112	FOR_2	CALL_31
0xd295	      0xe800000000	                          call 0x400d2da	      6836	syntax.c	FUNCTION_112	FOR_2	CALL_31
0xd29a	    0x488b0d000000	            mov rcx, qword [0x0400d2e1] 	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_33
0xd2a1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_33
0xd2a5	          0x8b4038	            mov eax, dword [rax + 0x38] 	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_33
0xd2a8	          0x4863d0	                         movsxd rdx, eax	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_33
0xd2ab	          0x4889d0	                            mov rax, rdx	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_33
0xd2ae	        0x48c1e003	                              shl rax, 3	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_33
0xd2b2	          0x4801d0	                            add rax, rdx	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_33
0xd2b5	          0x4801c0	                            add rax, rax	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_33
0xd2b8	          0x4801d0	                            add rax, rdx	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_33
0xd2bb	        0x48c1e003	                              shl rax, 3	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_33
0xd2bf	    0x482d98000000	                           sub rax, 0x98	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_33
0xd2c5	          0x4801c8	                            add rax, rcx	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_33
0xd2c8	          0x488b00	                    mov rax, qword [rax]	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_33
0xd2cb	          0x4889c7	                            mov rdi, rax	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_33
0xd2ce	      0xe800000000	                          call 0x400d313	      6837	syntax.c	FUNCTION_112	FOR_2	CALL_33
0xd2d3	      0xbf00000000	                              mov edi, 0	      6838	syntax.c	FUNCTION_112	FOR_2	CALL_34
0xd2d8	      0xe800000000	                          call 0x400d31d	      6838	syntax.c	FUNCTION_112	FOR_2	CALL_34
0xd2dd	      0xbf45000000	                           mov edi, 0x45	      6840	syntax.c	FUNCTION_112	FOR_2	CALL_35
0xd2e2	      0xe800000000	                          call 0x400d327	      6840	syntax.c	FUNCTION_112	FOR_2	CALL_35
0xd2e7	    0x488b05000000	            mov rax, qword [0x0400d32e] 	      6841	syntax.c	FUNCTION_112	FOR_2	IF_4
0xd2ee	        0x4883f84f	                           cmp rax, 0x4f	      6841	syntax.c	FUNCTION_112	FOR_2	IF_4
0xd2f2	            0x7f09	                            jg 0x400d33d	      6841	syntax.c	FUNCTION_112	FOR_2	IF_4
0xd2f4	    0xc745a8140000	           mov dword [rbp - 0x58], 0x14 	      6842	syntax.c	FUNCTION_112	FOR_2	IF_4
0xd2fb	            0xeb0d	                           jmp 0x400d34a	      6842	syntax.c	FUNCTION_112	FOR_2	IF_4
0xd2fd	    0x488b05000000	            mov rax, qword [0x0400d344] 	      6844	syntax.c	FUNCTION_112	FOR_2	ELSE_1
0xd304	          0x83e846	                           sub eax, 0x46	      6844	syntax.c	FUNCTION_112	FOR_2	ELSE_1
0xd307	          0x8945a8	             mov dword [rbp - 0x58], eax	      6844	syntax.c	FUNCTION_112	FOR_2	ELSE_1
0xd30a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6845	syntax.c	FUNCTION_112	FOR_2	IF_5	CALL_36
0xd30e	        0x488b4040	            mov rax, qword [rax + 0x40] 	      6845	syntax.c	FUNCTION_112	FOR_2	IF_5	CALL_36
0xd312	          0x4889c7	                            mov rdi, rax	      6845	syntax.c	FUNCTION_112	FOR_2	IF_5	CALL_36
0xd315	      0xe800000000	                          call 0x400d35a	      6845	syntax.c	FUNCTION_112	FOR_2	IF_5	CALL_36
0xd31a	          0x3b45a8	             cmp eax, dword [rbp - 0x58]	      6845	syntax.c	FUNCTION_112	FOR_2	IF_5	CALL_36
0xd31d	            0x7d13	                           jge 0x400d372	      6845	syntax.c	FUNCTION_112	FOR_2	IF_5	CALL_36
0xd31f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6846	syntax.c	FUNCTION_112	FOR_2	CALL_37
0xd323	        0x488b4040	            mov rax, qword [rax + 0x40] 	      6846	syntax.c	FUNCTION_112	FOR_2	CALL_37
0xd327	          0x4889c7	                            mov rdi, rax	      6846	syntax.c	FUNCTION_112	FOR_2	CALL_37
0xd32a	      0xe800000000	                          call 0x400d36f	      6846	syntax.c	FUNCTION_112	FOR_2	CALL_37
0xd32f	          0x8945a8	             mov dword [rbp - 0x58], eax	      6846	syntax.c	FUNCTION_112	FOR_2	CALL_37
0xd332	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6847	syntax.c	FUNCTION_112	FOR_2	CALL_38
0xd336	        0x488b4040	            mov rax, qword [rax + 0x40] 	      6847	syntax.c	FUNCTION_112	FOR_2	CALL_38
0xd33a	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      6847	syntax.c	FUNCTION_112	FOR_2	CALL_38
0xd33d	            0x89d6	                            mov esi, edx	      6847	syntax.c	FUNCTION_112	FOR_2	CALL_38
0xd33f	          0x4889c7	                            mov rdi, rax	      6847	syntax.c	FUNCTION_112	FOR_2	CALL_38
0xd342	      0xe800000000	                          call 0x400d387	      6847	syntax.c	FUNCTION_112	FOR_2	CALL_38
0xd347	      0xbf00000000	                              mov edi, 0	      6848	syntax.c	FUNCTION_112	FOR_2	CALL_39
0xd34c	      0xe800000000	                          call 0x400d391	      6848	syntax.c	FUNCTION_112	FOR_2	CALL_39
0xd351	        0x8345a401	               add dword [rbp - 0x5c], 1	      6816	syntax.c	FUNCTION_112	FOR_2
0xd355	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      6816	syntax.c	FUNCTION_112	FOR_2
0xd358	          0x3b45a4	             cmp eax, dword [rbp - 0x5c]	      6816	syntax.c	FUNCTION_112	FOR_2
0xd35b	            0x7e0e	                           jle 0x400d3ab	      6816	syntax.c	FUNCTION_112	FOR_2
0xd35d	    0x8b0500000000	            mov eax, dword [0x0400d3a3] 	      6816	syntax.c	FUNCTION_112	FOR_2
0xd363	            0x85c0	                           test eax, eax	      6816	syntax.c	FUNCTION_112	FOR_2
0xd365	     0xf8446feffff	                            je 0x400d1f1	      6816	syntax.c	FUNCTION_112	FOR_2
0xd36b	        0x488d45e0	                   lea rax, [rbp - 0x20]	      6850	syntax.c	FUNCTION_112	CALL_40
0xd36f	          0x4889c7	                            mov rdi, rax	      6850	syntax.c	FUNCTION_112	CALL_40
0xd372	      0xe800000000	                          call 0x400d3b7	      6850	syntax.c	FUNCTION_112	CALL_40
0xd377	    0x8b0500000000	            mov eax, dword [0x0400d3bd] 	      6851	syntax.c	FUNCTION_112	IF_6
0xd37d	            0x85c0	                           test eax, eax	      6851	syntax.c	FUNCTION_112	IF_6
0xd37f	            0x753f	                           jne 0x400d400	      6851	syntax.c	FUNCTION_112	IF_6
0xd381	      0xbf00000000	                              mov edi, 0	      6853	syntax.c	FUNCTION_112	IF_6	CALL_41
0xd386	      0xe800000000	                          call 0x400d3cb	      6853	syntax.c	FUNCTION_112	IF_6	CALL_41
0xd38b	        0x488d45d0	                   lea rax, [rbp - 0x30]	      6854	syntax.c	FUNCTION_112	IF_6	CALL_43
0xd38f	          0x4889c7	                            mov rdi, rax	      6854	syntax.c	FUNCTION_112	IF_6	CALL_43
0xd392	      0xe800000000	                          call 0x400d3d7	      6854	syntax.c	FUNCTION_112	IF_6	CALL_43
0xd397	          0x4889c7	                            mov rdi, rax	      6854	syntax.c	FUNCTION_112	IF_6	CALL_43
0xd39a	      0xe800000000	                          call 0x400d3df	      6854	syntax.c	FUNCTION_112	IF_6	CALL_43
0xd39f	      0xbf0d000000	                            mov edi, 0xd	      6855	syntax.c	FUNCTION_112	IF_6	CALL_44
0xd3a4	      0xe800000000	                          call 0x400d3e9	      6855	syntax.c	FUNCTION_112	IF_6	CALL_44
0xd3a9	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      6856	syntax.c	FUNCTION_112	IF_6	CALL_45
0xd3ac	            0x4898	                                    cdqe	      6856	syntax.c	FUNCTION_112	IF_6	CALL_45
0xd3ae	          0x4889c7	                            mov rdi, rax	      6856	syntax.c	FUNCTION_112	IF_6	CALL_45
0xd3b1	      0xe800000000	                          call 0x400d3f6	      6856	syntax.c	FUNCTION_112	IF_6	CALL_45
0xd3b6	      0xbf00000000	                              mov edi, 0	      6857	syntax.c	FUNCTION_112	IF_6	CALL_46
0xd3bb	      0xe800000000	                          call 0x400d400	      6857	syntax.c	FUNCTION_112	IF_6	CALL_46
0xd3c0	        0x488b45f8	                mov rax, qword [rbp - 8]	      6859	syntax.c	FUNCTION_112
0xd3c4	    0x644833042528	                xor rax, qword fs:[0x28]	      6859	syntax.c	FUNCTION_112
0xd3cd	            0x7405	                            je 0x400d414	      6859	syntax.c	FUNCTION_112
0xd3cf	      0xe800000000	                          call 0x400d414	      6859	syntax.c	FUNCTION_112
0xd3d4	              0xc9	                                   leave	      6859	syntax.c	FUNCTION_112
0xd3d5	              0xc3	                                     ret	      6859	syntax.c	FUNCTION_112
syn_cmd_manual	FOR,0:DO,0:IF,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,1	12
0x6dd7	              0x55	                                push rbp	      3901	syntax.c	FUNCTION_60
0x6dd8	          0x4889e5	                            mov rbp, rsp	      3901	syntax.c	FUNCTION_60
0x6ddb	        0x4883ec10	                           sub rsp, 0x10	      3901	syntax.c	FUNCTION_60
0x6ddf	        0x48897df8	                mov qword [rbp - 8], rdi	      3901	syntax.c	FUNCTION_60
0x6de3	          0x8975f4	              mov dword [rbp - 0xc], esi	      3901	syntax.c	FUNCTION_60
0x6de6	        0x488b45f8	                mov rax, qword [rbp - 8]	      3902	syntax.c	FUNCTION_60	CALL_1
0x6dea	      0xbe00000000	                              mov esi, 0	      3902	syntax.c	FUNCTION_60	CALL_1
0x6def	          0x4889c7	                            mov rdi, rax	      3902	syntax.c	FUNCTION_60	CALL_1
0x6df2	      0xe826000000	                  call sym.syn_cmd_onoff	      3902	syntax.c	FUNCTION_60	CALL_1
0x6df7	              0x90	                                     nop	      3903	syntax.c	FUNCTION_60
0x6df8	              0xc9	                                   leave	      3903	syntax.c	FUNCTION_60
0x6df9	              0xc3	                                     ret	      3903	syntax.c	FUNCTION_60
syn_compare_stub	FOR,0:DO,0:IF,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,0	27
0xa5a1	              0x55	                                push rbp	      5398	syntax.c	FUNCTION_82
0xa5a2	          0x4889e5	                            mov rbp, rsp	      5398	syntax.c	FUNCTION_82
0xa5a5	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5398	syntax.c	FUNCTION_82
0xa5a9	        0x488975e0	             mov qword [rbp - 0x20], rsi	      5398	syntax.c	FUNCTION_82
0xa5ad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5399	syntax.c	FUNCTION_82
0xa5b1	        0x488945f0	             mov qword [rbp - 0x10], rax	      5399	syntax.c	FUNCTION_82
0xa5b5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5400	syntax.c	FUNCTION_82
0xa5b9	        0x488945f8	                mov qword [rbp - 8], rax	      5400	syntax.c	FUNCTION_82
0xa5bd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5402	syntax.c	FUNCTION_82
0xa5c1	           0xfb710	                   movzx edx, word [rax]	      5402	syntax.c	FUNCTION_82
0xa5c4	        0x488b45f8	                mov rax, qword [rbp - 8]	      5402	syntax.c	FUNCTION_82
0xa5c8	           0xfb700	                   movzx eax, word [rax]	      5402	syntax.c	FUNCTION_82
0xa5cb	          0x6639c2	                              cmp dx, ax	      5402	syntax.c	FUNCTION_82
0xa5ce	            0x7f21	                            jg 0x400a631	      5402	syntax.c	FUNCTION_82
0xa5d0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5402	syntax.c	FUNCTION_82
0xa5d4	           0xfb710	                   movzx edx, word [rax]	      5402	syntax.c	FUNCTION_82
0xa5d7	        0x488b45f8	                mov rax, qword [rbp - 8]	      5402	syntax.c	FUNCTION_82
0xa5db	           0xfb700	                   movzx eax, word [rax]	      5402	syntax.c	FUNCTION_82
0xa5de	          0x6639c2	                              cmp dx, ax	      5402	syntax.c	FUNCTION_82
0xa5e1	            0x7d07	                           jge 0x400a62a	      5402	syntax.c	FUNCTION_82
0xa5e3	      0xb8ffffffff	                     mov eax, 0xffffffff	      5402	syntax.c	FUNCTION_82
0xa5e8	            0xeb0c	                           jmp 0x400a636	      5402	syntax.c	FUNCTION_82
0xa5ea	      0xb800000000	                              mov eax, 0	      5402	syntax.c	FUNCTION_82
0xa5ef	            0xeb05	                           jmp 0x400a636	      5402	syntax.c	FUNCTION_82
0xa5f1	      0xb801000000	                              mov eax, 1	      5402	syntax.c	FUNCTION_82
0xa5f6	              0x5d	                                 pop rbp	      5403	syntax.c	FUNCTION_82
0xa5f7	              0xc3	                                     ret	      5403	syntax.c	FUNCTION_82
syn_gui_attr2entry	FOR,0:DO,0:IF,1:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,1	19
0x11b8c	              0x55	                                push rbp	      9159	syntax.c	FUNCTION_137
0x11b8d	          0x4889e5	                            mov rbp, rsp	      9159	syntax.c	FUNCTION_137
0x11b90	          0x897dfc	                mov dword [rbp - 4], edi	      9159	syntax.c	FUNCTION_137
0x11b93	    0x816dfc000100	              sub dword [rbp - 4], 0x100	      9160	syntax.c	FUNCTION_137
0x11b9a	    0x8b0500000000	            mov eax, dword [0x04011be0] 	      9161	syntax.c	FUNCTION_137	IF_1
0x11ba0	          0x3b45fc	                cmp eax, dword [rbp - 4]	      9161	syntax.c	FUNCTION_137	IF_1
0x11ba3	            0x7f07	                            jg 0x4011bec	      9161	syntax.c	FUNCTION_137	IF_1
0x11ba5	      0xb800000000	                              mov eax, 0	      9162	syntax.c	FUNCTION_137	IF_1
0x11baa	            0xeb1e	                           jmp 0x4011c0a	      9162	syntax.c	FUNCTION_137	IF_1
0x11bac	    0x488b0d000000	            mov rcx, qword [0x04011bf3] 	      9163	syntax.c	FUNCTION_137	CALL_1
0x11bb3	          0x8b45fc	                mov eax, dword [rbp - 4]	      9163	syntax.c	FUNCTION_137	CALL_1
0x11bb6	          0x4863d0	                         movsxd rdx, eax	      9163	syntax.c	FUNCTION_137	CALL_1
0x11bb9	          0x4889d0	                            mov rax, rdx	      9163	syntax.c	FUNCTION_137	CALL_1
0x11bbc	        0x48c1e002	                              shl rax, 2	      9163	syntax.c	FUNCTION_137	CALL_1
0x11bc0	          0x4801d0	                            add rax, rdx	      9163	syntax.c	FUNCTION_137	CALL_1
0x11bc3	        0x48c1e003	                              shl rax, 3	      9163	syntax.c	FUNCTION_137	CALL_1
0x11bc7	          0x4801c8	                            add rax, rcx	      9163	syntax.c	FUNCTION_137	CALL_1
0x11bca	              0x5d	                                 pop rbp	      9164	syntax.c	FUNCTION_137
0x11bcb	              0xc3	                                     ret	      9164	syntax.c	FUNCTION_137
syn_cmd_spell	FOR,0:DO,0:IF,7:SWITCH,0:functions,0:ELSE,6:WHILE,0:CALL,14	118
0x5f4e	              0x55	                                push rbp	      3521	syntax.c	FUNCTION_47
0x5f4f	          0x4889e5	                            mov rbp, rsp	      3521	syntax.c	FUNCTION_47
0x5f52	        0x4883ec20	                           sub rsp, 0x20	      3521	syntax.c	FUNCTION_47
0x5f56	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3521	syntax.c	FUNCTION_47
0x5f5a	          0x8975e4	             mov dword [rbp - 0x1c], esi	      3521	syntax.c	FUNCTION_47
0x5f5d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3522	syntax.c	FUNCTION_47
0x5f61	          0x488b00	                    mov rax, qword [rax]	      3522	syntax.c	FUNCTION_47
0x5f64	        0x488945f0	             mov qword [rbp - 0x10], rax	      3522	syntax.c	FUNCTION_47
0x5f68	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3525	syntax.c	FUNCTION_47	CALL_1
0x5f6c	          0x4889c7	                            mov rdi, rax	      3525	syntax.c	FUNCTION_47	CALL_1
0x5f6f	      0xe800000000	                          call 0x4005fb4	      3525	syntax.c	FUNCTION_47	CALL_1
0x5f74	          0x4889c2	                            mov rdx, rax	      3525	syntax.c	FUNCTION_47	CALL_1
0x5f77	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3525	syntax.c	FUNCTION_47	CALL_1
0x5f7b	        0x48895008	                mov qword [rax + 8], rdx	      3525	syntax.c	FUNCTION_47	CALL_1
0x5f7f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3526	syntax.c	FUNCTION_47	IF_1
0x5f83	          0x8b4030	            mov eax, dword [rax + 0x30] 	      3526	syntax.c	FUNCTION_47	IF_1
0x5f86	            0x85c0	                           test eax, eax	      3526	syntax.c	FUNCTION_47	IF_1
0x5f88	     0xf8592010000	                           jne 0x4006160	      3526	syntax.c	FUNCTION_47	IF_1
0x5f8e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3529	syntax.c	FUNCTION_47	CALL_2
0x5f92	          0x4889c7	                            mov rdi, rax	      3529	syntax.c	FUNCTION_47	CALL_2
0x5f95	      0xe800000000	                          call 0x4005fda	      3529	syntax.c	FUNCTION_47	CALL_2
0x5f9a	        0x488945f8	                mov qword [rbp - 8], rax	      3529	syntax.c	FUNCTION_47	CALL_2
0x5f9e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3530	syntax.c	FUNCTION_47	IF_2
0x5fa2	           0xfb600	                   movzx eax, byte [rax]	      3530	syntax.c	FUNCTION_47	IF_2
0x5fa5	            0x84c0	                             test al, al	      3530	syntax.c	FUNCTION_47	IF_2
0x5fa7	            0x7571	                           jne 0x400605a	      3530	syntax.c	FUNCTION_47	IF_2
0x5fa9	    0x488b05000000	            mov rax, qword [0x04005ff0] 	      3532	syntax.c	FUNCTION_47	IF_2	IF_3
0x5fb0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3532	syntax.c	FUNCTION_47	IF_2	IF_3
0x5fb4	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	      3532	syntax.c	FUNCTION_47	IF_2	IF_3
0x5fba	          0x83f801	                              cmp eax, 1	      3532	syntax.c	FUNCTION_47	IF_2	IF_3
0x5fbd	            0x7517	                           jne 0x4006016	      3532	syntax.c	FUNCTION_47	IF_2	IF_3
0x5fbf	      0xbf00000000	                              mov edi, 0	      3533	syntax.c	FUNCTION_47	IF_2	CALL_4
0x5fc4	      0xe800000000	                          call 0x4006009	      3533	syntax.c	FUNCTION_47	IF_2	CALL_4
0x5fc9	          0x4889c7	                            mov rdi, rax	      3533	syntax.c	FUNCTION_47	IF_2	CALL_4
0x5fcc	      0xe800000000	                          call 0x4006011	      3533	syntax.c	FUNCTION_47	IF_2	CALL_4
0x5fd1	      0xe934010000	                           jmp 0x400614a	      3533	syntax.c	FUNCTION_47	IF_2	CALL_4
0x5fd6	    0x488b05000000	            mov rax, qword [0x0400601d] 	      3534	syntax.c	FUNCTION_47	IF_2	ELSE_1	IF_4
0x5fdd	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3534	syntax.c	FUNCTION_47	IF_2	ELSE_1	IF_4
0x5fe1	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	      3534	syntax.c	FUNCTION_47	IF_2	ELSE_1	IF_4
0x5fe7	          0x83f802	                              cmp eax, 2	      3534	syntax.c	FUNCTION_47	IF_2	ELSE_1	IF_4
0x5fea	            0x7517	                           jne 0x4006043	      3534	syntax.c	FUNCTION_47	IF_2	ELSE_1	IF_4
0x5fec	      0xbf00000000	                              mov edi, 0	      3535	syntax.c	FUNCTION_47	IF_2	ELSE_1	IF_4
0x5ff1	      0xe800000000	                          call 0x4006036	      3535	syntax.c	FUNCTION_47	IF_2	ELSE_1	IF_4
0x5ff6	          0x4889c7	                            mov rdi, rax	      3535	syntax.c	FUNCTION_47	IF_2	ELSE_1	IF_4
0x5ff9	      0xe800000000	                          call 0x400603e	      3535	syntax.c	FUNCTION_47	IF_2	ELSE_1	IF_4
0x5ffe	      0xe907010000	                           jmp 0x400614a	      3535	syntax.c	FUNCTION_47	IF_2	ELSE_1	IF_4
0x6003	      0xbf00000000	                              mov edi, 0	      3537	syntax.c	FUNCTION_47	IF_2	CALL_8
0x6008	      0xe800000000	                          call 0x400604d	      3537	syntax.c	FUNCTION_47	IF_2	CALL_8
0x600d	          0x4889c7	                            mov rdi, rax	      3537	syntax.c	FUNCTION_47	IF_2	CALL_8
0x6010	      0xe800000000	                          call 0x4006055	      3537	syntax.c	FUNCTION_47	IF_2	CALL_8
0x6015	      0xe9f0000000	                           jmp 0x400614a	      3537	syntax.c	FUNCTION_47	IF_2	CALL_8
0x601a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x601e	      0xba08000000	                              mov edx, 8	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x6023	      0xbe00000000	                              mov esi, 0	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x6028	          0x4889c7	                            mov rdi, rax	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x602b	      0xe800000000	                          call 0x4006070	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x6030	            0x85c0	                           test eax, eax	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x6032	            0x752e	                           jne 0x40060a2	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x6034	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x6038	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x603c	          0x4829c2	                            sub rdx, rax	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x603f	          0x4889d0	                            mov rax, rdx	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x6042	        0x4883f808	                              cmp rax, 8	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x6046	            0x751a	                           jne 0x40060a2	      3539	syntax.c	FUNCTION_47	ELSE_3	IF_5	CALL_9
0x6048	    0x488b05000000	            mov rax, qword [0x0400608f] 	      3540	syntax.c	FUNCTION_47	ELSE_3	IF_5
0x604f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3540	syntax.c	FUNCTION_47	ELSE_3	IF_5
0x6053	    0xc7805c020000	              mov dword [rax + 0x25c], 1	      3540	syntax.c	FUNCTION_47	ELSE_3	IF_5
0x605d	      0xe9a8000000	                           jmp 0x400614a	      3540	syntax.c	FUNCTION_47	ELSE_3	IF_5
0x6062	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x6066	      0xba0a000000	                            mov edx, 0xa	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x606b	      0xbe00000000	                              mov esi, 0	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x6070	          0x4889c7	                            mov rdi, rax	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x6073	      0xe800000000	                          call 0x40060b8	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x6078	            0x85c0	                           test eax, eax	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x607a	            0x752b	                           jne 0x40060e7	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x607c	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x6080	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x6084	          0x4829c2	                            sub rdx, rax	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x6087	          0x4889d0	                            mov rax, rdx	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x608a	        0x4883f80a	                            cmp rax, 0xa	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x608e	            0x7517	                           jne 0x40060e7	      3541	syntax.c	FUNCTION_47	ELSE_4	IF_6	CALL_10
0x6090	    0x488b05000000	            mov rax, qword [0x040060d7] 	      3542	syntax.c	FUNCTION_47	ELSE_4	IF_6
0x6097	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3542	syntax.c	FUNCTION_47	ELSE_4	IF_6
0x609b	    0xc7805c020000	              mov dword [rax + 0x25c], 2	      3542	syntax.c	FUNCTION_47	ELSE_4	IF_6
0x60a5	            0xeb63	                           jmp 0x400614a	      3542	syntax.c	FUNCTION_47	ELSE_4	IF_6
0x60a7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x60ab	      0xba07000000	                              mov edx, 7	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x60b0	      0xbe00000000	                              mov esi, 0	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x60b5	          0x4889c7	                            mov rdi, rax	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x60b8	      0xe800000000	                          call 0x40060fd	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x60bd	            0x85c0	                           test eax, eax	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x60bf	            0x752b	                           jne 0x400612c	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x60c1	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x60c5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x60c9	          0x4829c2	                            sub rdx, rax	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x60cc	          0x4889d0	                            mov rax, rdx	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x60cf	        0x4883f807	                              cmp rax, 7	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x60d3	            0x7517	                           jne 0x400612c	      3543	syntax.c	FUNCTION_47	ELSE_5	IF_7	CALL_11
0x60d5	    0x488b05000000	            mov rax, qword [0x0400611c] 	      3544	syntax.c	FUNCTION_47	ELSE_5	IF_7
0x60dc	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3544	syntax.c	FUNCTION_47	ELSE_5	IF_7
0x60e0	    0xc7805c020000	              mov dword [rax + 0x25c], 0	      3544	syntax.c	FUNCTION_47	ELSE_5	IF_7
0x60ea	            0xeb1e	                           jmp 0x400614a	      3544	syntax.c	FUNCTION_47	ELSE_5	IF_7
0x60ec	      0xbf00000000	                              mov edi, 0	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x60f1	      0xe800000000	                          call 0x4006136	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x60f6	          0x4889c2	                            mov rdx, rax	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x60f9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x60fd	          0x4889c6	                            mov rsi, rax	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x6100	          0x4889d7	                            mov rdi, rdx	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x6103	      0xe800000000	                          call 0x4006148	      3547	syntax.c	FUNCTION_47	ELSE_6	CALL_13
0x6108	            0xeb17	                           jmp 0x4006161	      3548	syntax.c	FUNCTION_47	ELSE_6
0x610a	    0x488b05000000	            mov rax, qword [0x04006151] 	      3552	syntax.c	FUNCTION_47	CALL_14
0x6111	      0xbe28000000	                           mov esi, 0x28	      3552	syntax.c	FUNCTION_47	CALL_14
0x6116	          0x4889c7	                            mov rdi, rax	      3552	syntax.c	FUNCTION_47	CALL_14
0x6119	      0xe800000000	                          call 0x400615e	      3552	syntax.c	FUNCTION_47	CALL_14
0x611e	            0xeb01	                           jmp 0x4006161	      3552	syntax.c	FUNCTION_47	CALL_14
0x6120	              0x90	                                     nop	      3527	syntax.c	FUNCTION_47	IF_1
0x6121	              0xc9	                                   leave	      3553	syntax.c	FUNCTION_47
0x6122	              0xc3	                                     ret	      3553	syntax.c	FUNCTION_47
get_syntax_info	FOR,0:DO,0:IF,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,0	9
0xcc24	              0x55	                                push rbp	      6599	syntax.c	FUNCTION_103
0xcc25	          0x4889e5	                            mov rbp, rsp	      6599	syntax.c	FUNCTION_103
0xcc28	        0x48897df8	                mov qword [rbp - 8], rdi	      6599	syntax.c	FUNCTION_103
0xcc2c	    0x8b1500000000	            mov edx, dword [0x0400cc72] 	      6600	syntax.c	FUNCTION_103
0xcc32	        0x488b45f8	                mov rax, qword [rbp - 8]	      6600	syntax.c	FUNCTION_103
0xcc36	            0x8910	                    mov dword [rax], edx	      6600	syntax.c	FUNCTION_103
0xcc38	    0x8b0500000000	            mov eax, dword [0x0400cc7e] 	      6601	syntax.c	FUNCTION_103
0xcc3e	              0x5d	                                 pop rbp	      6602	syntax.c	FUNCTION_103
0xcc3f	              0xc3	                                     ret	      6602	syntax.c	FUNCTION_103
syn_id2colors	FOR,0:DO,0:IF,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,2	34
0x13343	              0x55	                                push rbp	      9845	syntax.c	ELSE_2	FUNCTION_157
0x13344	          0x4889e5	                            mov rbp, rsp	      9845	syntax.c	ELSE_2	FUNCTION_157
0x13347	        0x4883ec30	                           sub rsp, 0x30	      9845	syntax.c	ELSE_2	FUNCTION_157
0x1334b	          0x897dec	             mov dword [rbp - 0x14], edi	      9845	syntax.c	ELSE_2	FUNCTION_157
0x1334e	        0x488975e0	             mov qword [rbp - 0x20], rsi	      9845	syntax.c	ELSE_2	FUNCTION_157
0x13352	        0x488955d8	             mov qword [rbp - 0x28], rdx	      9845	syntax.c	ELSE_2	FUNCTION_157
0x13356	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9848	syntax.c	ELSE_2	FUNCTION_157	CALL_1
0x13359	            0x89c7	                            mov edi, eax	      9848	syntax.c	ELSE_2	FUNCTION_157	CALL_1
0x1335b	      0xe800000000	                          call 0x40133a0	      9848	syntax.c	ELSE_2	FUNCTION_157	CALL_1
0x13360	          0x8945ec	             mov dword [rbp - 0x14], eax	      9848	syntax.c	ELSE_2	FUNCTION_157	CALL_1
0x13363	    0x488b0d000000	            mov rcx, qword [0x040133aa] 	      9849	syntax.c	ELSE_2	FUNCTION_157	CALL_2
0x1336a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9849	syntax.c	ELSE_2	FUNCTION_157	CALL_2
0x1336d	          0x4863d0	                         movsxd rdx, eax	      9849	syntax.c	ELSE_2	FUNCTION_157	CALL_2
0x13370	          0x4889d0	                            mov rax, rdx	      9849	syntax.c	ELSE_2	FUNCTION_157	CALL_2
0x13373	        0x48c1e003	                              shl rax, 3	      9849	syntax.c	ELSE_2	FUNCTION_157	CALL_2
0x13377	          0x4801d0	                            add rax, rdx	      9849	syntax.c	ELSE_2	FUNCTION_157	CALL_2
0x1337a	          0x4801c0	                            add rax, rax	      9849	syntax.c	ELSE_2	FUNCTION_157	CALL_2
0x1337d	          0x4801d0	                            add rax, rdx	      9849	syntax.c	ELSE_2	FUNCTION_157	CALL_2
0x13380	        0x48c1e003	                              shl rax, 3	      9849	syntax.c	ELSE_2	FUNCTION_157	CALL_2
0x13384	    0x482d98000000	                           sub rax, 0x98	      9849	syntax.c	ELSE_2	FUNCTION_157	CALL_2
0x1338a	          0x4801c8	                            add rax, rcx	      9849	syntax.c	ELSE_2	FUNCTION_157	CALL_2
0x1338d	        0x488945f8	                mov qword [rbp - 8], rax	      9849	syntax.c	ELSE_2	FUNCTION_157	CALL_2
0x13391	        0x488b45f8	                mov rax, qword [rbp - 8]	      9851	syntax.c	ELSE_2	FUNCTION_157
0x13395	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      9851	syntax.c	ELSE_2	FUNCTION_157
0x13399	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9851	syntax.c	ELSE_2	FUNCTION_157
0x1339d	          0x488910	                    mov qword [rax], rdx	      9851	syntax.c	ELSE_2	FUNCTION_157
0x133a0	        0x488b45f8	                mov rax, qword [rbp - 8]	      9852	syntax.c	ELSE_2	FUNCTION_157
0x133a4	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      9852	syntax.c	ELSE_2	FUNCTION_157
0x133a8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9852	syntax.c	ELSE_2	FUNCTION_157
0x133ac	          0x488910	                    mov qword [rax], rdx	      9852	syntax.c	ELSE_2	FUNCTION_157
0x133af	        0x488b45f8	                mov rax, qword [rbp - 8]	      9853	syntax.c	ELSE_2	FUNCTION_157
0x133b3	          0x8b406c	            mov eax, dword [rax + 0x6c] 	      9853	syntax.c	ELSE_2	FUNCTION_157
0x133b6	              0xc9	                                   leave	      9854	syntax.c	ELSE_2	FUNCTION_157
0x133b7	              0xc3	                                     ret	      9854	syntax.c	ELSE_2	FUNCTION_157
syn_stack_cleanup	FOR,2:DO,0:IF,7:SWITCH,0:functions,0:ELSE,2:WHILE,0:CALL,1	129
0x1835	              0x55	                                push rbp	      1374	syntax.c	FUNCTION_16
0x1836	          0x4889e5	                            mov rbp, rsp	      1374	syntax.c	FUNCTION_16
0x1839	        0x4883ec20	                           sub rsp, 0x20	      1374	syntax.c	FUNCTION_16
0x183d	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      1379	syntax.c	FUNCTION_16
0x1844	    0x488b05000000	            mov rax, qword [0x0400188b] 	      1381	syntax.c	FUNCTION_16	IF_1
0x184b	    0x488b80100300	           mov rax, qword [rax + 0x310] 	      1381	syntax.c	FUNCTION_16	IF_1
0x1852	          0x4885c0	                           test rax, rax	      1381	syntax.c	FUNCTION_16	IF_1
0x1855	            0x7413	                            je 0x40018aa	      1381	syntax.c	FUNCTION_16	IF_1
0x1857	    0x488b05000000	            mov rax, qword [0x0400189e] 	      1381	syntax.c	FUNCTION_16	IF_1
0x185e	    0x488b80200300	           mov rax, qword [rax + 0x320] 	      1381	syntax.c	FUNCTION_16	IF_1
0x1865	          0x4885c0	                           test rax, rax	      1381	syntax.c	FUNCTION_16	IF_1
0x1868	            0x7508	                           jne 0x40018b2	      1381	syntax.c	FUNCTION_16	IF_1
0x186a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1382	syntax.c	FUNCTION_16	IF_1
0x186d	      0xe9dd010000	                           jmp 0x4001a8f	      1382	syntax.c	FUNCTION_16	IF_1
0x1872	    0x488b05000000	            mov rax, qword [0x040018b9] 	      1385	syntax.c	FUNCTION_16	IF_2
0x1879	    0x8b8018030000	           mov eax, dword [rax + 0x318] 	      1385	syntax.c	FUNCTION_16	IF_2
0x187f	          0x4863d0	                         movsxd rdx, eax	      1385	syntax.c	FUNCTION_16	IF_2
0x1882	    0x488b05000000	            mov rax, qword [0x040018c9] 	      1385	syntax.c	FUNCTION_16	IF_2
0x1889	          0x4839c2	                            cmp rdx, rax	      1385	syntax.c	FUNCTION_16	IF_2
0x188c	            0x7f09	                            jg 0x40018d7	      1385	syntax.c	FUNCTION_16	IF_2
0x188e	    0xc745e83f420f	         mov dword [rbp - 0x18], 0xf423f	      1386	syntax.c	FUNCTION_16	IF_2
0x1895	            0xeb32	                           jmp 0x4001909	      1386	syntax.c	FUNCTION_16	IF_2
0x1897	    0x488b05000000	            mov rax, qword [0x040018de] 	      1388	syntax.c	FUNCTION_16	ELSE_1
0x189e	          0x488b00	                    mov rax, qword [rax]	      1388	syntax.c	FUNCTION_16	ELSE_1
0x18a1	    0x488b15000000	            mov rdx, qword [0x040018e8] 	      1388	syntax.c	FUNCTION_16	ELSE_1
0x18a8	    0x8b9218030000	           mov edx, dword [rdx + 0x318] 	      1388	syntax.c	FUNCTION_16	ELSE_1
0x18ae	          0x4863ca	                         movsxd rcx, edx	      1388	syntax.c	FUNCTION_16	ELSE_1
0x18b1	    0x488b15000000	            mov rdx, qword [0x040018f8] 	      1388	syntax.c	FUNCTION_16	ELSE_1
0x18b8	          0x4829d1	                            sub rcx, rdx	      1388	syntax.c	FUNCTION_16	ELSE_1
0x18bb	          0x4889ce	                            mov rsi, rcx	      1388	syntax.c	FUNCTION_16	ELSE_1
0x18be	            0x4899	                                     cqo	      1388	syntax.c	FUNCTION_16	ELSE_1
0x18c0	          0x48f7fe	                                idiv rsi	      1388	syntax.c	FUNCTION_16	ELSE_1
0x18c3	          0x83c001	                              add eax, 1	      1388	syntax.c	FUNCTION_16	ELSE_1
0x18c6	          0x8945e8	             mov dword [rbp - 0x18], eax	      1388	syntax.c	FUNCTION_16	ELSE_1
0x18c9	    0x488b05000000	            mov rax, qword [0x04001910] 	      1395	syntax.c	FUNCTION_16
0x18d0	     0xfb780400300	          movzx eax, word [rax + 0x340] 	      1395	syntax.c	FUNCTION_16
0x18d7	        0x668945e2	               mov word [rbp - 0x1e], ax	      1395	syntax.c	FUNCTION_16
0x18db	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1396	syntax.c	FUNCTION_16
0x18e2	    0x488b05000000	            mov rax, qword [0x04001929] 	      1397	syntax.c	FUNCTION_16
0x18e9	    0x488b80200300	           mov rax, qword [rax + 0x320] 	      1397	syntax.c	FUNCTION_16
0x18f0	        0x488945f8	                mov qword [rbp - 8], rax	      1397	syntax.c	FUNCTION_16
0x18f4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1398	syntax.c	FUNCTION_16	FOR_1
0x18f8	          0x488b00	                    mov rax, qword [rax]	      1398	syntax.c	FUNCTION_16	FOR_1
0x18fb	        0x488945f0	             mov qword [rbp - 0x10], rax	      1398	syntax.c	FUNCTION_16	FOR_1
0x18ff	      0xe9a3000000	                           jmp 0x40019e7	      1398	syntax.c	FUNCTION_16	FOR_1
0x1904	        0x488b45f8	                mov rax, qword [rbp - 8]	      1400	syntax.c	FUNCTION_16	FOR_1	IF_3
0x1908	        0x488b5008	                mov rdx, qword [rax + 8]	      1400	syntax.c	FUNCTION_16	FOR_1	IF_3
0x190c	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1400	syntax.c	FUNCTION_16	FOR_1	IF_3
0x190f	            0x4898	                                    cdqe	      1400	syntax.c	FUNCTION_16	FOR_1	IF_3
0x1911	          0x4801c2	                            add rdx, rax	      1400	syntax.c	FUNCTION_16	FOR_1	IF_3
0x1914	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1400	syntax.c	FUNCTION_16	FOR_1	IF_3
0x1918	        0x488b4008	                mov rax, qword [rax + 8]	      1400	syntax.c	FUNCTION_16	FOR_1	IF_3
0x191c	          0x4839c2	                            cmp rdx, rax	      1400	syntax.c	FUNCTION_16	FOR_1	IF_3
0x191f	            0x7e73	                           jle 0x40019d4	      1400	syntax.c	FUNCTION_16	FOR_1	IF_3
0x1921	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1402	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x1925	     0xfb790c80000	           movzx edx, word [rax + 0xc8] 	      1402	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x192c	    0x488b05000000	            mov rax, qword [0x04001973] 	      1402	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x1933	     0xfb780400300	          movzx eax, word [rax + 0x340] 	      1402	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x193a	          0x6639c2	                              cmp dx, ax	      1402	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x193d	            0x762f	                           jbe 0x40019ae	      1402	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x193f	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1404	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x1943	            0x7411	                            je 0x4001996	      1404	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x1945	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1404	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x1949	     0xfb780c80000	           movzx eax, word [rax + 0xc8] 	      1404	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x1950	        0x663b45e2	               cmp ax, word [rbp - 0x1e]	      1404	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x1954	            0x730f	                           jae 0x40019a5	      1404	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x1956	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1405	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x195a	     0xfb780c80000	           movzx eax, word [rax + 0xc8] 	      1405	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x1961	        0x668945e2	               mov word [rbp - 0x1e], ax	      1405	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4	IF_5
0x1965	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	      1406	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x196c	            0xeb26	                           jmp 0x40019d4	      1406	syntax.c	FUNCTION_16	FOR_1	IF_3	IF_4
0x196e	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1408	syntax.c	FUNCTION_16	FOR_1	IF_3	ELSE_2	IF_6
0x1972	            0x7520	                           jne 0x40019d4	      1408	syntax.c	FUNCTION_16	FOR_1	IF_3	ELSE_2	IF_6
0x1974	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1408	syntax.c	FUNCTION_16	FOR_1	IF_3	ELSE_2	IF_6
0x1978	     0xfb780c80000	           movzx eax, word [rax + 0xc8] 	      1408	syntax.c	FUNCTION_16	FOR_1	IF_3	ELSE_2	IF_6
0x197f	        0x663b45e2	               cmp ax, word [rbp - 0x1e]	      1408	syntax.c	FUNCTION_16	FOR_1	IF_3	ELSE_2	IF_6
0x1983	            0x730f	                           jae 0x40019d4	      1408	syntax.c	FUNCTION_16	FOR_1	IF_3	ELSE_2	IF_6
0x1985	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1409	syntax.c	FUNCTION_16	FOR_1	IF_3	ELSE_2	IF_6
0x1989	     0xfb780c80000	           movzx eax, word [rax + 0xc8] 	      1409	syntax.c	FUNCTION_16	FOR_1	IF_3	ELSE_2	IF_6
0x1990	        0x668945e2	               mov word [rbp - 0x1e], ax	      1409	syntax.c	FUNCTION_16	FOR_1	IF_3	ELSE_2	IF_6
0x1994	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1398	syntax.c	FUNCTION_16	FOR_1
0x1998	        0x488945f8	                mov qword [rbp - 8], rax	      1398	syntax.c	FUNCTION_16	FOR_1
0x199c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1398	syntax.c	FUNCTION_16	FOR_1
0x19a0	          0x488b00	                    mov rax, qword [rax]	      1398	syntax.c	FUNCTION_16	FOR_1
0x19a3	        0x488945f0	             mov qword [rbp - 0x10], rax	      1398	syntax.c	FUNCTION_16	FOR_1
0x19a7	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1398	syntax.c	FUNCTION_16	FOR_1
0x19ac	     0xf8552ffffff	                           jne 0x4001944	      1398	syntax.c	FUNCTION_16	FOR_1
0x19b2	    0x488b05000000	            mov rax, qword [0x040019f9] 	      1417	syntax.c	FUNCTION_16
0x19b9	    0x488b80200300	           mov rax, qword [rax + 0x320] 	      1417	syntax.c	FUNCTION_16
0x19c0	        0x488945f8	                mov qword [rbp - 8], rax	      1417	syntax.c	FUNCTION_16
0x19c4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1418	syntax.c	FUNCTION_16	FOR_2
0x19c8	          0x488b00	                    mov rax, qword [rax]	      1418	syntax.c	FUNCTION_16	FOR_2
0x19cb	        0x488945f0	             mov qword [rbp - 0x10], rax	      1418	syntax.c	FUNCTION_16	FOR_2
0x19cf	            0xeb74	                           jmp 0x4001a85	      1418	syntax.c	FUNCTION_16	FOR_2
0x19d1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x19d5	     0xfb780c80000	           movzx eax, word [rax + 0xc8] 	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x19dc	        0x663b45e2	               cmp ax, word [rbp - 0x1e]	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x19e0	            0x7550	                           jne 0x4001a72	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x19e2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x19e6	        0x488b5008	                mov rdx, qword [rax + 8]	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x19ea	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x19ed	            0x4898	                                    cdqe	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x19ef	          0x4801c2	                            add rdx, rax	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x19f2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x19f6	        0x488b4008	                mov rax, qword [rax + 8]	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x19fa	          0x4839c2	                            cmp rdx, rax	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x19fd	            0x7e33	                           jle 0x4001a72	      1420	syntax.c	FUNCTION_16	FOR_2	IF_7
0x19ff	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1423	syntax.c	FUNCTION_16	FOR_2	IF_7
0x1a03	          0x488b10	                    mov rdx, qword [rax]	      1423	syntax.c	FUNCTION_16	FOR_2	IF_7
0x1a06	        0x488b45f8	                mov rax, qword [rbp - 8]	      1423	syntax.c	FUNCTION_16	FOR_2	IF_7
0x1a0a	          0x488910	                    mov qword [rax], rdx	      1423	syntax.c	FUNCTION_16	FOR_2	IF_7
0x1a0d	    0x488b05000000	            mov rax, qword [0x04001a54] 	      1424	syntax.c	FUNCTION_16	FOR_2	IF_7	CALL_1
0x1a14	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1424	syntax.c	FUNCTION_16	FOR_2	IF_7	CALL_1
0x1a18	          0x4889d6	                            mov rsi, rdx	      1424	syntax.c	FUNCTION_16	FOR_2	IF_7	CALL_1
0x1a1b	          0x4889c7	                            mov rdi, rax	      1424	syntax.c	FUNCTION_16	FOR_2	IF_7	CALL_1
0x1a1e	      0xe82e000000	           call sym.syn_stack_free_entry	      1424	syntax.c	FUNCTION_16	FOR_2	IF_7	CALL_1
0x1a23	        0x488b45f8	                mov rax, qword [rbp - 8]	      1425	syntax.c	FUNCTION_16	FOR_2	IF_7
0x1a27	        0x488945f0	             mov qword [rbp - 0x10], rax	      1425	syntax.c	FUNCTION_16	FOR_2	IF_7
0x1a2b	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      1426	syntax.c	FUNCTION_16	FOR_2	IF_7
0x1a32	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1418	syntax.c	FUNCTION_16	FOR_2
0x1a36	        0x488945f8	                mov qword [rbp - 8], rax	      1418	syntax.c	FUNCTION_16	FOR_2
0x1a3a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1418	syntax.c	FUNCTION_16	FOR_2
0x1a3e	          0x488b00	                    mov rax, qword [rax]	      1418	syntax.c	FUNCTION_16	FOR_2
0x1a41	        0x488945f0	             mov qword [rbp - 0x10], rax	      1418	syntax.c	FUNCTION_16	FOR_2
0x1a45	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1418	syntax.c	FUNCTION_16	FOR_2
0x1a4a	            0x7585	                           jne 0x4001a11	      1418	syntax.c	FUNCTION_16	FOR_2
0x1a4c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1429	syntax.c	FUNCTION_16
0x1a4f	              0xc9	                                   leave	      1430	syntax.c	FUNCTION_16
0x1a50	              0xc3	                                     ret	      1430	syntax.c	FUNCTION_16
syn_stack_free_block	FOR,1:DO,0:IF,1:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,2	35
0x1141	              0x55	                                push rbp	      1187	syntax.c	FUNCTION_11
0x1142	          0x4889e5	                            mov rbp, rsp	      1187	syntax.c	FUNCTION_11
0x1145	        0x4883ec20	                           sub rsp, 0x20	      1187	syntax.c	FUNCTION_11
0x1149	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1187	syntax.c	FUNCTION_11
0x114d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1190	syntax.c	FUNCTION_11	IF_1
0x1151	    0x488b80100300	           mov rax, qword [rax + 0x310] 	      1190	syntax.c	FUNCTION_11	IF_1
0x1158	          0x4885c0	                           test rax, rax	      1190	syntax.c	FUNCTION_11	IF_1
0x115b	            0x746f	                            je 0x400120c	      1190	syntax.c	FUNCTION_11	IF_1
0x115d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x1161	    0x488b80200300	           mov rax, qword [rax + 0x320] 	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x1168	        0x488945f8	                mov qword [rbp - 8], rax	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x116c	            0xeb17	                           jmp 0x40011c5	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x116e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1193	syntax.c	FUNCTION_11	IF_1	CALL_1
0x1172	          0x4889c7	                            mov rdi, rax	      1193	syntax.c	FUNCTION_11	IF_1	CALL_1
0x1175	      0xe839f3ffff	                call sym.clear_syn_state	      1193	syntax.c	FUNCTION_11	IF_1	CALL_1
0x117a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x117e	          0x488b00	                    mov rax, qword [rax]	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x1181	        0x488945f8	                mov qword [rbp - 8], rax	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x1185	      0x48837df800	                  cmp qword [rbp - 8], 0	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x118a	            0x75e2	                           jne 0x40011ae	      1192	syntax.c	FUNCTION_11	IF_1	FOR_1
0x118c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1194	syntax.c	FUNCTION_11	IF_1	CALL_2
0x1190	    0x488b80100300	           mov rax, qword [rax + 0x310] 	      1194	syntax.c	FUNCTION_11	IF_1	CALL_2
0x1197	          0x4885c0	                           test rax, rax	      1194	syntax.c	FUNCTION_11	IF_1	CALL_2
0x119a	            0x7422	                            je 0x40011fe	      1194	syntax.c	FUNCTION_11	IF_1	CALL_2
0x119c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1194	syntax.c	FUNCTION_11	IF_1	CALL_2
0x11a0	    0x488b80100300	           mov rax, qword [rax + 0x310] 	      1194	syntax.c	FUNCTION_11	IF_1	CALL_2
0x11a7	          0x4889c7	                            mov rdi, rax	      1194	syntax.c	FUNCTION_11	IF_1	CALL_2
0x11aa	      0xe800000000	                          call 0x40011ef	      1194	syntax.c	FUNCTION_11	IF_1	CALL_2
0x11af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1194	syntax.c	FUNCTION_11	IF_1	CALL_2
0x11b3	    0x48c780100300	              mov qword [rax + 0x310], 0	      1194	syntax.c	FUNCTION_11	IF_1	CALL_2
0x11be	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1195	syntax.c	FUNCTION_11	IF_1
0x11c2	    0xc78018030000	              mov dword [rax + 0x318], 0	      1195	syntax.c	FUNCTION_11	IF_1
0x11cc	              0x90	                                     nop	      1197	syntax.c	FUNCTION_11
0x11cd	              0xc9	                                   leave	      1197	syntax.c	FUNCTION_11
0x11ce	              0xc3	                                     ret	      1197	syntax.c	FUNCTION_11
font_name2handle	FOR,0:DO,0:IF,1:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,2	18
0x10df9	              0x55	                                push rbp	      8599	syntax.c	FUNCTION_127
0x10dfa	          0x4889e5	                            mov rbp, rsp	      8599	syntax.c	FUNCTION_127
0x10dfd	        0x4883ec10	                           sub rsp, 0x10	      8599	syntax.c	FUNCTION_127
0x10e01	        0x48897df8	                mov qword [rbp - 8], rdi	      8599	syntax.c	FUNCTION_127
0x10e05	        0x488b45f8	                mov rax, qword [rbp - 8]	      8600	syntax.c	FUNCTION_127	IF_1	CALL_1
0x10e09	      0xbe00000000	                              mov esi, 0	      8600	syntax.c	FUNCTION_127	IF_1	CALL_1
0x10e0e	          0x4889c7	                            mov rdi, rax	      8600	syntax.c	FUNCTION_127	IF_1	CALL_1
0x10e11	      0xe800000000	                          call 0x4010e56	      8600	syntax.c	FUNCTION_127	IF_1	CALL_1
0x10e16	            0x85c0	                           test eax, eax	      8600	syntax.c	FUNCTION_127	IF_1	CALL_1
0x10e18	            0x7507	                           jne 0x4010e61	      8600	syntax.c	FUNCTION_127	IF_1	CALL_1
0x10e1a	      0xb800000000	                              mov eax, 0	      8601	syntax.c	FUNCTION_127	IF_1
0x10e1f	            0xeb11	                           jmp 0x4010e72	      8601	syntax.c	FUNCTION_127	IF_1
0x10e21	        0x488b45f8	                mov rax, qword [rbp - 8]	      8603	syntax.c	FUNCTION_127	CALL_2
0x10e25	      0xbe01000000	                              mov esi, 1	      8603	syntax.c	FUNCTION_127	CALL_2
0x10e2a	          0x4889c7	                            mov rdi, rax	      8603	syntax.c	FUNCTION_127	CALL_2
0x10e2d	      0xe800000000	                          call 0x4010e72	      8603	syntax.c	FUNCTION_127	CALL_2
0x10e32	              0xc9	                                   leave	      8604	syntax.c	FUNCTION_127
0x10e33	              0xc3	                                     ret	      8604	syntax.c	FUNCTION_127
highlight_has_attr	FOR,0:DO,0:IF,4:SWITCH,0:functions,0:ELSE,2:WHILE,0:CALL,3	66
0x121fe	              0x55	                                push rbp	      9331	syntax.c	FUNCTION_143
0x121ff	          0x4889e5	                            mov rbp, rsp	      9331	syntax.c	FUNCTION_143
0x12202	          0x897dec	             mov dword [rbp - 0x14], edi	      9331	syntax.c	FUNCTION_143
0x12205	          0x8975e8	             mov dword [rbp - 0x18], esi	      9331	syntax.c	FUNCTION_143
0x12208	          0x8955e4	             mov dword [rbp - 0x1c], edx	      9331	syntax.c	FUNCTION_143
0x1220b	        0x837dec00	               cmp dword [rbp - 0x14], 0	      9334	syntax.c	FUNCTION_143	IF_1
0x1220f	            0x7e0b	                           jle 0x401225c	      9334	syntax.c	FUNCTION_143	IF_1
0x12211	    0x8b0500000000	            mov eax, dword [0x04012257] 	      9334	syntax.c	FUNCTION_143	IF_1
0x12217	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      9334	syntax.c	FUNCTION_143	IF_1
0x1221a	            0x7d0a	                           jge 0x4012266	      9334	syntax.c	FUNCTION_143	IF_1
0x1221c	      0xb800000000	                              mov eax, 0	      9335	syntax.c	FUNCTION_143	IF_1
0x12221	      0xe9b6000000	                           jmp 0x401231c	      9335	syntax.c	FUNCTION_143	IF_1
0x12226	        0x837de467	           cmp dword [rbp - 0x1c], 0x67 	      9338	syntax.c	FUNCTION_143	IF_2
0x1222a	            0x7532	                           jne 0x401229e	      9338	syntax.c	FUNCTION_143	IF_2
0x1222c	    0x488b0d000000	            mov rcx, qword [0x04012273] 	      9339	syntax.c	FUNCTION_143	CALL_1
0x12233	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9339	syntax.c	FUNCTION_143	CALL_1
0x12236	          0x4863d0	                         movsxd rdx, eax	      9339	syntax.c	FUNCTION_143	CALL_1
0x12239	          0x4889d0	                            mov rax, rdx	      9339	syntax.c	FUNCTION_143	CALL_1
0x1223c	        0x48c1e003	                              shl rax, 3	      9339	syntax.c	FUNCTION_143	CALL_1
0x12240	          0x4801d0	                            add rax, rdx	      9339	syntax.c	FUNCTION_143	CALL_1
0x12243	          0x4801c0	                            add rax, rax	      9339	syntax.c	FUNCTION_143	CALL_1
0x12246	          0x4801d0	                            add rax, rdx	      9339	syntax.c	FUNCTION_143	CALL_1
0x12249	        0x48c1e003	                              shl rax, 3	      9339	syntax.c	FUNCTION_143	CALL_1
0x1224d	    0x482d98000000	                           sub rax, 0x98	      9339	syntax.c	FUNCTION_143	CALL_1
0x12253	          0x4801c8	                            add rax, rcx	      9339	syntax.c	FUNCTION_143	CALL_1
0x12256	          0x8b406c	            mov eax, dword [rax + 0x6c] 	      9339	syntax.c	FUNCTION_143	CALL_1
0x12259	          0x8945fc	                mov dword [rbp - 4], eax	      9339	syntax.c	FUNCTION_143	CALL_1
0x1225c	            0xeb68	                           jmp 0x4012306	      9339	syntax.c	FUNCTION_143	CALL_1
0x1225e	        0x837de463	           cmp dword [rbp - 0x1c], 0x63 	      9342	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x12262	            0x7532	                           jne 0x40122d6	      9342	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x12264	    0x488b0d000000	            mov rcx, qword [0x040122ab] 	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x1226b	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x1226e	          0x4863d0	                         movsxd rdx, eax	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x12271	          0x4889d0	                            mov rax, rdx	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x12274	        0x48c1e003	                              shl rax, 3	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x12278	          0x4801d0	                            add rax, rdx	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x1227b	          0x4801c0	                            add rax, rax	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x1227e	          0x4801d0	                            add rax, rdx	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x12281	        0x48c1e003	                              shl rax, 3	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x12285	    0x482d98000000	                           sub rax, 0x98	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x1228b	          0x4801c8	                            add rax, rcx	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x1228e	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x12291	          0x8945fc	                mov dword [rbp - 4], eax	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x12294	            0xeb30	                           jmp 0x4012306	      9343	syntax.c	FUNCTION_143	ELSE_1	IF_3
0x12296	    0x488b0d000000	            mov rcx, qword [0x040122dd] 	      9345	syntax.c	FUNCTION_143	CALL_3
0x1229d	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9345	syntax.c	FUNCTION_143	CALL_3
0x122a0	          0x4863d0	                         movsxd rdx, eax	      9345	syntax.c	FUNCTION_143	CALL_3
0x122a3	          0x4889d0	                            mov rax, rdx	      9345	syntax.c	FUNCTION_143	CALL_3
0x122a6	        0x48c1e003	                              shl rax, 3	      9345	syntax.c	FUNCTION_143	CALL_3
0x122aa	          0x4801d0	                            add rax, rdx	      9345	syntax.c	FUNCTION_143	CALL_3
0x122ad	          0x4801c0	                            add rax, rax	      9345	syntax.c	FUNCTION_143	CALL_3
0x122b0	          0x4801d0	                            add rax, rdx	      9345	syntax.c	FUNCTION_143	CALL_3
0x122b3	        0x48c1e003	                              shl rax, 3	      9345	syntax.c	FUNCTION_143	CALL_3
0x122b7	    0x482d98000000	                           sub rax, 0x98	      9345	syntax.c	FUNCTION_143	CALL_3
0x122bd	          0x4801c8	                            add rax, rcx	      9345	syntax.c	FUNCTION_143	CALL_3
0x122c0	          0x8b4014	            mov eax, dword [rax + 0x14] 	      9345	syntax.c	FUNCTION_143	CALL_3
0x122c3	          0x8945fc	                mov dword [rbp - 4], eax	      9345	syntax.c	FUNCTION_143	CALL_3
0x122c6	          0x8b45fc	                mov eax, dword [rbp - 4]	      9347	syntax.c	FUNCTION_143	IF_4
0x122c9	          0x2345e8	             and eax, dword [rbp - 0x18]	      9347	syntax.c	FUNCTION_143	IF_4
0x122cc	            0x85c0	                           test eax, eax	      9347	syntax.c	FUNCTION_143	IF_4
0x122ce	            0x7407	                            je 0x4012317	      9347	syntax.c	FUNCTION_143	IF_4
0x122d0	      0xb800000000	                              mov eax, 0	      9348	syntax.c	FUNCTION_143	IF_4
0x122d5	            0xeb05	                           jmp 0x401231c	      9348	syntax.c	FUNCTION_143	IF_4
0x122d7	      0xb800000000	                              mov eax, 0	      9349	syntax.c	FUNCTION_143
0x122dc	              0x5d	                                 pop rbp	      9350	syntax.c	FUNCTION_143
0x122dd	              0xc3	                                     ret	      9350	syntax.c	FUNCTION_143
restore_cterm_colors	FOR,0:DO,0:IF,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,1	10
0x100d7	              0x55	                                push rbp	      8316	syntax.c	FUNCTION_118
0x100d8	          0x4889e5	                            mov rbp, rsp	      8316	syntax.c	FUNCTION_118
0x100db	    0xc70500000000	               mov dword [0x04010125], 0	      8323	syntax.c	FUNCTION_118
0x100e5	    0xc70500000000	               mov dword [0x0401012f], 0	      8324	syntax.c	FUNCTION_118
0x100ef	    0xc70500000000	               mov dword [0x04010139], 0	      8325	syntax.c	FUNCTION_118
0x100f9	    0x48c705000000	mov qword [0x04010144], 0xffffffffffffd499 	      8327	syntax.c	FUNCTION_118
0x10104	    0x48c705000000	mov qword [0x0401014f], 0xffffffffffffd499 	      8328	syntax.c	FUNCTION_118
0x1010f	              0x90	                                     nop	      8331	syntax.c	FUNCTION_118
0x10110	              0x5d	                                 pop rbp	      8331	syntax.c	FUNCTION_118
0x10111	              0xc3	                                     ret	      8331	syntax.c	FUNCTION_118
syn_cmd_enable	FOR,0:DO,0:IF,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,3	18
0x6d37	              0x55	                                push rbp	      3874	syntax.c	FUNCTION_58
0x6d38	          0x4889e5	                            mov rbp, rsp	      3874	syntax.c	FUNCTION_58
0x6d3b	        0x4883ec10	                           sub rsp, 0x10	      3874	syntax.c	FUNCTION_58
0x6d3f	        0x48897df8	                mov qword [rbp - 8], rdi	      3874	syntax.c	FUNCTION_58
0x6d43	          0x8975f4	              mov dword [rbp - 0xc], esi	      3874	syntax.c	FUNCTION_58
0x6d46	      0xbe00000000	                              mov esi, 0	      3875	syntax.c	FUNCTION_58	CALL_1
0x6d4b	      0xbf00000000	                              mov edi, 0	      3875	syntax.c	FUNCTION_58	CALL_1
0x6d50	      0xe800000000	                          call 0x4006d95	      3875	syntax.c	FUNCTION_58	CALL_1
0x6d55	        0x488b45f8	                mov rax, qword [rbp - 8]	      3876	syntax.c	FUNCTION_58	CALL_2
0x6d59	      0xbe00000000	                              mov esi, 0	      3876	syntax.c	FUNCTION_58	CALL_2
0x6d5e	          0x4889c7	                            mov rdi, rax	      3876	syntax.c	FUNCTION_58	CALL_2
0x6d61	      0xe8b7000000	                  call sym.syn_cmd_onoff	      3876	syntax.c	FUNCTION_58	CALL_2
0x6d66	      0xbe01000000	                              mov esi, 1	      3877	syntax.c	FUNCTION_58	CALL_3
0x6d6b	      0xbf00000000	                              mov edi, 0	      3877	syntax.c	FUNCTION_58	CALL_3
0x6d70	      0xe800000000	                          call 0x4006db5	      3877	syntax.c	FUNCTION_58	CALL_3
0x6d75	              0x90	                                     nop	      3878	syntax.c	FUNCTION_58
0x6d76	              0xc9	                                   leave	      3878	syntax.c	FUNCTION_58
0x6d77	              0xc3	                                     ret	      3878	syntax.c	FUNCTION_58
check_state_ends	FOR,1:DO,0:IF,9:SWITCH,0:functions,0:ELSE,2:WHILE,0:CALL,10	199
0x4198	              0x55	                                push rbp	      2611	syntax.c	FUNCTION_31
0x4199	          0x4889e5	                            mov rbp, rsp	      2611	syntax.c	FUNCTION_31
0x419c	        0x4883ec10	                           sub rsp, 0x10	      2611	syntax.c	FUNCTION_31
0x41a0	    0x488b0d000000	            mov rcx, qword [0x040041e7] 	      2615	syntax.c	FUNCTION_31	CALL_1
0x41a7	    0x8b0500000000	            mov eax, dword [0x040041ed] 	      2615	syntax.c	FUNCTION_31	CALL_1
0x41ad	          0x4863d0	                         movsxd rdx, eax	      2615	syntax.c	FUNCTION_31	CALL_1
0x41b0	          0x4889d0	                            mov rax, rdx	      2615	syntax.c	FUNCTION_31	CALL_1
0x41b3	        0x48c1e003	                              shl rax, 3	      2615	syntax.c	FUNCTION_31	CALL_1
0x41b7	          0x4801d0	                            add rax, rdx	      2615	syntax.c	FUNCTION_31	CALL_1
0x41ba	        0x48c1e004	                              shl rax, 4	      2615	syntax.c	FUNCTION_31	CALL_1
0x41be	    0x482d90000000	                           sub rax, 0x90	      2615	syntax.c	FUNCTION_31	CALL_1
0x41c4	          0x4801c8	                            add rax, rcx	      2615	syntax.c	FUNCTION_31	CALL_1
0x41c7	        0x488945f8	                mov qword [rbp - 8], rax	      2615	syntax.c	FUNCTION_31	CALL_1
0x41cb	        0x488b45f8	                mov rax, qword [rbp - 8]	      2618	syntax.c	FUNCTION_31	FOR_1	IF_1
0x41cf	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      2618	syntax.c	FUNCTION_31	FOR_1	IF_1
0x41d2	            0x85c0	                           test eax, eax	      2618	syntax.c	FUNCTION_31	FOR_1	IF_1
0x41d4	     0xf84e9020000	                            je 0x4004503	      2618	syntax.c	FUNCTION_31	FOR_1	IF_1
0x41da	        0x488b45f8	                mov rax, qword [rbp - 8]	      2619	syntax.c	FUNCTION_31	FOR_1	IF_1
0x41de	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2619	syntax.c	FUNCTION_31	FOR_1	IF_1
0x41e2	    0x488b05000000	            mov rax, qword [0x04004229] 	      2619	syntax.c	FUNCTION_31	FOR_1	IF_1
0x41e9	          0x4839c2	                            cmp rdx, rax	      2619	syntax.c	FUNCTION_31	FOR_1	IF_1
0x41ec	            0x7c2d	                            jl 0x400425b	      2619	syntax.c	FUNCTION_31	FOR_1	IF_1
0x41ee	        0x488b45f8	                mov rax, qword [rbp - 8]	      2620	syntax.c	FUNCTION_31	FOR_1	IF_1
0x41f2	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2620	syntax.c	FUNCTION_31	FOR_1	IF_1
0x41f6	    0x488b05000000	            mov rax, qword [0x0400423d] 	      2620	syntax.c	FUNCTION_31	FOR_1	IF_1
0x41fd	          0x4839c2	                            cmp rdx, rax	      2620	syntax.c	FUNCTION_31	FOR_1	IF_1
0x4200	     0xf85bd020000	                           jne 0x4004503	      2620	syntax.c	FUNCTION_31	FOR_1	IF_1
0x4206	        0x488b45f8	                mov rax, qword [rbp - 8]	      2621	syntax.c	FUNCTION_31	FOR_1	IF_1
0x420a	          0x8b5020	            mov edx, dword [rax + 0x20] 	      2621	syntax.c	FUNCTION_31	FOR_1	IF_1
0x420d	    0x8b0500000000	            mov eax, dword [0x04004253] 	      2621	syntax.c	FUNCTION_31	FOR_1	IF_1
0x4213	            0x39c2	                            cmp edx, eax	      2621	syntax.c	FUNCTION_31	FOR_1	IF_1
0x4215	     0xf8fa8020000	                            jg 0x4004503	      2621	syntax.c	FUNCTION_31	FOR_1	IF_1
0x421b	        0x488b45f8	                mov rax, qword [rbp - 8]	      2629	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x421f	          0x8b4058	            mov eax, dword [rax + 0x58] 	      2629	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4222	            0x85c0	                           test eax, eax	      2629	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4224	     0xf8415010000	                            je 0x400437f	      2629	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x422a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2630	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x422e	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      2630	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4232	    0x488b05000000	            mov rax, qword [0x04004279] 	      2630	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4239	          0x4839c2	                            cmp rdx, rax	      2630	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x423c	            0x7f2d	                            jg 0x40042ab	      2630	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x423e	        0x488b45f8	                mov rax, qword [rbp - 8]	      2631	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4242	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      2631	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4246	    0x488b05000000	            mov rax, qword [0x0400428d] 	      2631	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x424d	          0x4839c2	                            cmp rdx, rax	      2631	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4250	     0xf85e9000000	                           jne 0x400437f	      2631	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4256	        0x488b45f8	                mov rax, qword [rbp - 8]	      2632	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x425a	          0x8b5050	            mov edx, dword [rax + 0x50] 	      2632	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x425d	    0x8b0500000000	            mov eax, dword [0x040042a3] 	      2632	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4263	            0x39c2	                            cmp edx, eax	      2632	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4265	     0xf8ed4000000	                           jle 0x400437f	      2632	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x426b	        0x488b45f8	                mov rax, qword [rbp - 8]	      2634	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x426f	          0x8b5058	            mov edx, dword [rax + 0x58] 	      2634	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4272	        0x488b45f8	                mov rax, qword [rbp - 8]	      2634	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4276	            0x8910	                    mov dword [rax], edx	      2634	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4278	        0x488b45f8	                mov rax, qword [rbp - 8]	      2635	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x427c	    0xc74058000000	               mov dword [rax + 0x58], 0	      2635	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4283	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2636	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4287	        0x488b45f8	                mov rax, qword [rbp - 8]	      2636	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x428b	        0x488b5050	            mov rdx, qword [rax + 0x50] 	      2636	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x428f	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2636	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4293	        0x48894118	             mov qword [rcx + 0x18], rax	      2636	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4297	        0x48895120	             mov qword [rcx + 0x20], rdx	      2636	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x429b	        0x488b4df8	                mov rcx, qword [rbp - 8]	      2637	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x429f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2637	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x42a3	        0x488b5050	            mov rdx, qword [rax + 0x50] 	      2637	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x42a7	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2637	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x42ab	        0x48894138	             mov qword [rcx + 0x38], rax	      2637	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x42af	        0x48895140	             mov qword [rcx + 0x40], rdx	      2637	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x42b3	        0x488b45f8	                mov rax, qword [rbp - 8]	      2638	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x42b7	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2638	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x42bb	        0x4883c840	                            or rax, 0x40	      2638	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x42bf	          0x4889c2	                            mov rdx, rax	      2638	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x42c2	        0x488b45f8	                mov rax, qword [rbp - 8]	      2638	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x42c6	        0x48895068	             mov qword [rax + 0x68], rdx	      2638	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x42ca	    0x8b0500000000	            mov eax, dword [0x04004310] 	      2640	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x42d0	          0x8d5001	                      lea edx, [rax + 1]	      2640	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x42d3	    0x891500000000	            mov dword [0x04004319], edx 	      2640	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x42d9	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2640	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x42dd	          0x894270	             mov dword [rdx + 0x70], eax	      2640	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x42e0	        0x488b45f8	                mov rax, qword [rbp - 8]	      2641	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	IF_3
0x42e4	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2641	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	IF_3
0x42e8	      0x2500000400	                        and eax, 0x40000	      2641	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	IF_3
0x42ed	          0x4885c0	                           test rax, rax	      2641	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	IF_3
0x42f0	            0x7419	                            je 0x400434b	      2641	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	IF_3
0x42f2	        0x488b45f8	                mov rax, qword [rbp - 8]	      2642	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	IF_3
0x42f6	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2642	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	IF_3
0x42fa	    0x480d00000200	                         or rax, 0x20000	      2642	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	IF_3
0x4300	          0x4889c2	                            mov rdx, rax	      2642	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	IF_3
0x4303	        0x488b45f8	                mov rax, qword [rbp - 8]	      2642	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	IF_3
0x4307	        0x48895068	             mov qword [rax + 0x68], rdx	      2642	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	IF_3
0x430b	    0x8b0500000000	            mov eax, dword [0x04004351] 	      2644	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	CALL_2
0x4311	          0x83e801	                              sub eax, 1	      2644	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	CALL_2
0x4314	            0x89c7	                            mov edi, eax	      2644	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	CALL_2
0x4316	      0xe8ab010000	                 call sym.update_si_attr	      2644	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2	CALL_2
0x431b	    0x48c705000000	               mov qword [0x04004366], 0	      2647	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4326	    0xc70500000000	               mov dword [0x04004370], 0	      2650	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x4330	    0xc70500000000	     mov dword [0x0400437a], 0x7fffffff 	      2651	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x433a	      0xe984010000	                           jmp 0x4004503	      2652	syntax.c	FUNCTION_31	FOR_1	IF_1	IF_2
0x433f	        0x488b45f8	                mov rax, qword [rbp - 8]	      2658	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4343	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      2658	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x434a	    0x488905000000	            mov qword [0x04004391], rax 	      2658	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4351	        0x488b45f8	                mov rax, qword [rbp - 8]	      2659	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4355	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2659	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4359	    0x890500000000	            mov dword [0x0400439f], eax 	      2659	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x435f	    0x8b0500000000	            mov eax, dword [0x040043a5] 	      2660	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4
0x4365	      0x2580020000	                          and eax, 0x280	      2660	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4
0x436a	            0x85c0	                           test eax, eax	      2660	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4
0x436c	            0x7525	                           jne 0x40043d3	      2660	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4
0x436e	      0xe8ba140000	                 call sym.syn_getcurline	      2661	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4	CALL_3
0x4373	          0x4889c2	                            mov rdx, rax	      2661	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4	CALL_3
0x4376	    0x8b0500000000	            mov eax, dword [0x040043bc] 	      2661	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4	CALL_3
0x437c	            0x4898	                                    cdqe	      2661	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4	CALL_3
0x437e	          0x4801d0	                            add rax, rdx	      2661	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4	CALL_3
0x4381	           0xfb600	                   movzx eax, byte [rax]	      2661	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4	CALL_3
0x4384	            0x84c0	                             test al, al	      2661	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4	CALL_3
0x4386	            0x750b	                           jne 0x40043d3	      2661	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4	CALL_3
0x4388	    0x48c705000000	               mov qword [0x040043d3], 0	      2662	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_4
0x4393	        0x488b45f8	                mov rax, qword [rbp - 8]	      2666	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x4397	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2666	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x439b	      0x2500400000	                         and eax, 0x4000	      2666	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x43a0	          0x8945f4	              mov dword [rbp - 0xc], eax	      2666	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1
0x43a3	      0xe8dc070000	              call sym.pop_current_state	      2668	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	CALL_4
0x43a8	    0x8b0500000000	            mov eax, dword [0x040043ee] 	      2670	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_5
0x43ae	            0x85c0	                           test eax, eax	      2670	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_5
0x43b0	     0xf8406010000	                            je 0x40044fc	      2670	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_5
0x43b6	        0x837df400	                cmp dword [rbp - 0xc], 0	      2673	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6
0x43ba	            0x7422	                            je 0x400441e	      2673	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6
0x43bc	    0x8b0500000000	            mov eax, dword [0x04004402] 	      2673	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6
0x43c2	            0x85c0	                           test eax, eax	      2673	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6
0x43c4	            0x7818	                            js 0x400441e	      2673	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6
0x43c6	      0xbf00000000	                              mov edi, 0	      2675	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6	CALL_5
0x43cb	      0xe840cbffff	                call sym.syn_update_ends	      2675	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6	CALL_5
0x43d0	    0x8b0500000000	            mov eax, dword [0x04004416] 	      2676	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6	IF_7
0x43d6	            0x85c0	                           test eax, eax	      2676	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6	IF_7
0x43d8	     0xf84e1000000	                            je 0x40044ff	      2676	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6	IF_7
0x43de	    0x488b0d000000	            mov rcx, qword [0x04004425] 	      2680	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	CALL_6
0x43e5	    0x8b0500000000	            mov eax, dword [0x0400442b] 	      2680	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	CALL_6
0x43eb	          0x4863d0	                         movsxd rdx, eax	      2680	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	CALL_6
0x43ee	          0x4889d0	                            mov rax, rdx	      2680	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	CALL_6
0x43f1	        0x48c1e003	                              shl rax, 3	      2680	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	CALL_6
0x43f5	          0x4801d0	                            add rax, rdx	      2680	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	CALL_6
0x43f8	        0x48c1e004	                              shl rax, 4	      2680	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	CALL_6
0x43fc	    0x482d90000000	                           sub rax, 0x90	      2680	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	CALL_6
0x4402	          0x4801c8	                            add rax, rcx	      2680	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	CALL_6
0x4405	        0x488945f8	                mov qword [rbp - 8], rax	      2680	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	CALL_6
0x4409	        0x488b45f8	                mov rax, qword [rbp - 8]	      2691	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x440d	            0x8b00	                    mov eax, dword [rax]	      2691	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x440f	            0x85c0	                           test eax, eax	      2691	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x4411	     0xf88b4fdffff	                            js 0x400420b	      2691	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x4417	    0x488b05000000	            mov rax, qword [0x0400445e] 	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_7
0x441e	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_7
0x4425	        0x488b45f8	                mov rax, qword [rbp - 8]	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_7
0x4429	            0x8b00	                    mov eax, dword [rax]	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_7
0x442b	          0x4863d0	                         movsxd rdx, eax	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_7
0x442e	          0x4889d0	                            mov rax, rdx	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_7
0x4431	        0x48c1e002	                              shl rax, 2	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_7
0x4435	          0x4801d0	                            add rax, rdx	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_7
0x4438	        0x48c1e005	                              shl rax, 5	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_7
0x443c	          0x4801c8	                            add rax, rcx	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_7
0x443f	           0xfb600	                   movzx eax, byte [rax]	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_7
0x4442	            0x3c02	                               cmp al, 2	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_7
0x4444	     0xf8581fdffff	                           jne 0x400420b	      2692	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_7
0x444a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2694	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x444e	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2694	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x4452	      0x2540040000	                          and eax, 0x440	      2694	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x4457	          0x4885c0	                           test rax, rax	      2694	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x445a	     0xf856bfdffff	                           jne 0x400420b	      2694	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8
0x4460	    0x8b0d00000000	            mov ecx, dword [0x040044a6] 	      2696	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_8
0x4466	        0x488b45f8	                mov rax, qword [rbp - 8]	      2696	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_8
0x446a	      0xba01000000	                              mov edx, 1	      2696	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_8
0x446f	            0x89ce	                            mov esi, ecx	      2696	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_8
0x4471	          0x4889c7	                            mov rdi, rax	      2696	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_8
0x4474	      0xe8c2040000	                  call sym.update_si_end	      2696	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_8
0x4479	      0xe8c3020000	                  call sym.check_keepend	      2697	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	CALL_9
0x447e	    0x8b0500000000	            mov eax, dword [0x040044c4] 	      2698	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9
0x4484	          0x83e008	                              and eax, 8	      2698	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9
0x4487	            0x85c0	                           test eax, eax	      2698	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9
0x4489	     0xf843cfdffff	                            je 0x400420b	      2698	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9
0x448f	    0x8b0500000000	            mov eax, dword [0x040044d5] 	      2699	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9
0x4495	            0x85c0	                           test eax, eax	      2699	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9
0x4497	     0xf892efdffff	                           jns 0x400420b	      2699	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9
0x449d	      0xe88b130000	                 call sym.syn_getcurline	      2700	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9	CALL_10
0x44a2	          0x4889c2	                            mov rdx, rax	      2700	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9	CALL_10
0x44a5	    0x8b0500000000	            mov eax, dword [0x040044eb] 	      2700	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9	CALL_10
0x44ab	            0x4898	                                    cdqe	      2700	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9	CALL_10
0x44ad	          0x4801d0	                            add rax, rdx	      2700	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9	CALL_10
0x44b0	           0xfb600	                   movzx eax, byte [rax]	      2700	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9	CALL_10
0x44b3	            0x84c0	                             test al, al	      2700	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9	CALL_10
0x44b5	            0x740b	                            je 0x4004502	      2700	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9	CALL_10
0x44b7	      0xe90ffdffff	                           jmp 0x400420b	      2707	syntax.c	FUNCTION_31	FOR_1	ELSE_2
0x44bc	              0x90	                                     nop	      2671	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_5
0x44bd	            0xeb04	                           jmp 0x4004503	      2671	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_5
0x44bf	              0x90	                                     nop	      2677	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6	IF_7
0x44c0	            0xeb01	                           jmp 0x4004503	      2677	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_6	IF_7
0x44c2	              0x90	                                     nop	      2701	syntax.c	FUNCTION_31	FOR_1	IF_1	ELSE_1	IF_8	IF_9
0x44c3	              0x90	                                     nop	      2708	syntax.c	FUNCTION_31	ELSE_2
0x44c4	              0xc9	                                   leave	      2708	syntax.c	FUNCTION_31	ELSE_2
0x44c5	              0xc3	                                     ret	      2708	syntax.c	FUNCTION_31	ELSE_2
syn_scl_namen2id	FOR,0:DO,0:IF,1:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,3	24
0xa9ba	              0x55	                                push rbp	      5556	syntax.c	FUNCTION_85
0xa9bb	          0x4889e5	                            mov rbp, rsp	      5556	syntax.c	FUNCTION_85
0xa9be	        0x4883ec20	                           sub rsp, 0x20	      5556	syntax.c	FUNCTION_85
0xa9c2	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5556	syntax.c	FUNCTION_85
0xa9c6	          0x8975e4	             mov dword [rbp - 0x1c], esi	      5556	syntax.c	FUNCTION_85
0xa9c9	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      5558	syntax.c	FUNCTION_85
0xa9d0	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      5560	syntax.c	FUNCTION_85	CALL_1
0xa9d3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5560	syntax.c	FUNCTION_85	CALL_1
0xa9d7	            0x89d6	                            mov esi, edx	      5560	syntax.c	FUNCTION_85	CALL_1
0xa9d9	          0x4889c7	                            mov rdi, rax	      5560	syntax.c	FUNCTION_85	CALL_1
0xa9dc	      0xe800000000	                          call 0x400aa21	      5560	syntax.c	FUNCTION_85	CALL_1
0xa9e1	        0x488945f8	                mov qword [rbp - 8], rax	      5560	syntax.c	FUNCTION_85	CALL_1
0xa9e5	      0x48837df800	                  cmp qword [rbp - 8], 0	      5561	syntax.c	FUNCTION_85	IF_1
0xa9ea	            0x741b	                            je 0x400aa47	      5561	syntax.c	FUNCTION_85	IF_1
0xa9ec	        0x488b45f8	                mov rax, qword [rbp - 8]	      5563	syntax.c	FUNCTION_85	IF_1	CALL_2
0xa9f0	          0x4889c7	                            mov rdi, rax	      5563	syntax.c	FUNCTION_85	IF_1	CALL_2
0xa9f3	      0xe8defeffff	                call sym.syn_scl_name2id	      5563	syntax.c	FUNCTION_85	IF_1	CALL_2
0xa9f8	          0x8945f4	              mov dword [rbp - 0xc], eax	      5563	syntax.c	FUNCTION_85	IF_1	CALL_2
0xa9fb	        0x488b45f8	                mov rax, qword [rbp - 8]	      5564	syntax.c	FUNCTION_85	IF_1	CALL_3
0xa9ff	          0x4889c7	                            mov rdi, rax	      5564	syntax.c	FUNCTION_85	IF_1	CALL_3
0xaa02	      0xe800000000	                          call 0x400aa47	      5564	syntax.c	FUNCTION_85	IF_1	CALL_3
0xaa07	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5566	syntax.c	FUNCTION_85
0xaa0a	              0xc9	                                   leave	      5567	syntax.c	FUNCTION_85
0xaa0b	              0xc3	                                     ret	      5567	syntax.c	FUNCTION_85
syn_set_timeout	FOR,0:DO,0:IF,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,0	8
0x0	              0x55	                                push rbp	       501	syntax.c	FUNCTION_1
0x1	          0x4889e5	                            mov rbp, rsp	       501	syntax.c	FUNCTION_1
0x4	        0x48897df8	                mov qword [rbp - 8], rdi	       501	syntax.c	FUNCTION_1
0x8	        0x488b45f8	                mov rax, qword [rbp - 8]	       502	syntax.c	FUNCTION_1
0xc	    0x488905000000	            mov qword [0x04000053], rax 	       502	syntax.c	FUNCTION_1
0x13	              0x90	                                     nop	       503	syntax.c	FUNCTION_1
0x14	              0x5d	                                 pop rbp	       503	syntax.c	FUNCTION_1
0x15	              0xc3	                                     ret	       503	syntax.c	FUNCTION_1
syn_check_group	FOR,0:DO,0:IF,2:SWITCH,0:functions,0:ELSE,1:WHILE,0:CALL,4	32
0x12f3f	              0x55	                                push rbp	      9713	syntax.c	FUNCTION_153
0x12f40	          0x4889e5	                            mov rbp, rsp	      9713	syntax.c	FUNCTION_153
0x12f43	        0x4883ec20	                           sub rsp, 0x20	      9713	syntax.c	FUNCTION_153
0x12f47	        0x48897de8	             mov qword [rbp - 0x18], rdi	      9713	syntax.c	FUNCTION_153
0x12f4b	          0x8975e4	             mov dword [rbp - 0x1c], esi	      9713	syntax.c	FUNCTION_153
0x12f4e	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      9717	syntax.c	FUNCTION_153	CALL_1
0x12f51	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9717	syntax.c	FUNCTION_153	CALL_1
0x12f55	            0x89d6	                            mov esi, edx	      9717	syntax.c	FUNCTION_153	CALL_1
0x12f57	          0x4889c7	                            mov rdi, rax	      9717	syntax.c	FUNCTION_153	CALL_1
0x12f5a	      0xe800000000	                          call 0x4012f9f	      9717	syntax.c	FUNCTION_153	CALL_1
0x12f5f	        0x488945f8	                mov qword [rbp - 8], rax	      9717	syntax.c	FUNCTION_153	CALL_1
0x12f63	      0x48837df800	                  cmp qword [rbp - 8], 0	      9718	syntax.c	FUNCTION_153	IF_1
0x12f68	            0x7507	                           jne 0x4012fb1	      9718	syntax.c	FUNCTION_153	IF_1
0x12f6a	      0xb800000000	                              mov eax, 0	      9719	syntax.c	FUNCTION_153	IF_1
0x12f6f	            0xeb35	                           jmp 0x4012fe6	      9719	syntax.c	FUNCTION_153	IF_1
0x12f71	        0x488b45f8	                mov rax, qword [rbp - 8]	      9721	syntax.c	FUNCTION_153	CALL_2
0x12f75	          0x4889c7	                            mov rdi, rax	      9721	syntax.c	FUNCTION_153	CALL_2
0x12f78	      0xe800000000	                          call 0x4012fbd	      9721	syntax.c	FUNCTION_153	CALL_2
0x12f7d	          0x8945f4	              mov dword [rbp - 0xc], eax	      9721	syntax.c	FUNCTION_153	CALL_2
0x12f80	        0x837df400	                cmp dword [rbp - 0xc], 0	      9722	syntax.c	FUNCTION_153	IF_2
0x12f84	            0x7511	                           jne 0x4012fd7	      9722	syntax.c	FUNCTION_153	IF_2
0x12f86	        0x488b45f8	                mov rax, qword [rbp - 8]	      9723	syntax.c	FUNCTION_153	CALL_3
0x12f8a	          0x4889c7	                            mov rdi, rax	      9723	syntax.c	FUNCTION_153	CALL_3
0x12f8d	      0xe816000000	                  call sym.syn_add_group	      9723	syntax.c	FUNCTION_153	CALL_3
0x12f92	          0x8945f4	              mov dword [rbp - 0xc], eax	      9723	syntax.c	FUNCTION_153	CALL_3
0x12f95	            0xeb0c	                           jmp 0x4012fe3	      9723	syntax.c	FUNCTION_153	CALL_3
0x12f97	        0x488b45f8	                mov rax, qword [rbp - 8]	      9725	syntax.c	FUNCTION_153	CALL_4
0x12f9b	          0x4889c7	                            mov rdi, rax	      9725	syntax.c	FUNCTION_153	CALL_4
0x12f9e	      0xe800000000	                          call 0x4012fe3	      9725	syntax.c	FUNCTION_153	CALL_4
0x12fa3	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      9726	syntax.c	FUNCTION_153
0x12fa6	              0xc9	                                   leave	      9727	syntax.c	FUNCTION_153
0x12fa7	              0xc3	                                     ret	      9727	syntax.c	FUNCTION_153
gui_do_one_color	FOR,0:DO,0:IF,6:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,16	169
0x13512	              0x55	                                push rbp	      9923	syntax.c	FUNCTION_161
0x13513	          0x4889e5	                            mov rbp, rsp	      9923	syntax.c	FUNCTION_161
0x13516	              0x53	                                push rbx	      9923	syntax.c	FUNCTION_161
0x13517	        0x4883ec28	                           sub rsp, 0x28	      9923	syntax.c	FUNCTION_161
0x1351b	          0x897ddc	             mov dword [rbp - 0x24], edi	      9923	syntax.c	FUNCTION_161
0x1351e	          0x8975d8	             mov dword [rbp - 0x28], esi	      9923	syntax.c	FUNCTION_161
0x13521	          0x8955d4	             mov dword [rbp - 0x2c], edx	      9923	syntax.c	FUNCTION_161
0x13524	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      9924	syntax.c	FUNCTION_161
0x1352b	    0x8b0500000000	            mov eax, dword [0x04013571] 	      9928	syntax.c	FUNCTION_161	IF_1
0x13531	            0x85c0	                           test eax, eax	      9928	syntax.c	FUNCTION_161	IF_1
0x13533	            0x747c	                            je 0x40135f1	      9928	syntax.c	FUNCTION_161	IF_1
0x13535	    0x488b0d000000	            mov rcx, qword [0x0401357c] 	      9930	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x1353c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9930	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x1353f	          0x4863d0	                         movsxd rdx, eax	      9930	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x13542	          0x4889d0	                            mov rax, rdx	      9930	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x13545	        0x48c1e003	                              shl rax, 3	      9930	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x13549	          0x4801d0	                            add rax, rdx	      9930	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x1354c	          0x4801c0	                            add rax, rax	      9930	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x1354f	          0x4801d0	                            add rax, rdx	      9930	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x13552	        0x48c1e003	                              shl rax, 3	      9930	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x13556	          0x4801c8	                            add rax, rcx	      9930	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x13559	        0x488b4060	            mov rax, qword [rax + 0x60] 	      9930	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x1355d	          0x4885c0	                           test rax, rax	      9930	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x13560	            0x744f	                            je 0x40135f1	      9930	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_1
0x13562	    0x488b0d000000	            mov rcx, qword [0x040135a9] 	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_3
0x13569	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_3
0x1356c	          0x4863d0	                         movsxd rdx, eax	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_3
0x1356f	          0x4889d0	                            mov rax, rdx	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_3
0x13572	        0x48c1e003	                              shl rax, 3	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_3
0x13576	          0x4801d0	                            add rax, rdx	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_3
0x13579	          0x4801c0	                            add rax, rax	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_3
0x1357c	          0x4801d0	                            add rax, rdx	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_3
0x1357f	        0x48c1e003	                              shl rax, 3	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_3
0x13583	          0x4801c8	                            add rax, rcx	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_3
0x13586	        0x488b7060	            mov rsi, qword [rax + 0x60] 	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_3
0x1358a	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_3
0x1358d	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_3
0x13590	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_3
0x13593	    0x41b901000000	                              mov r9d, 1	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_3
0x13599	          0x4189c8	                            mov r8d, ecx	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_3
0x1359c	            0x89d1	                            mov ecx, edx	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_3
0x1359e	      0xba00000000	                              mov edx, 0	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_3
0x135a3	            0x89c7	                            mov edi, eax	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_3
0x135a5	      0xe88ad8ffff	                     call sym.hl_do_font	      9932	syntax.c	FUNCTION_161	IF_1	IF_2	CALL_3
0x135aa	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      9934	syntax.c	FUNCTION_161	IF_1	IF_2
0x135b1	    0x488b0d000000	            mov rcx, qword [0x040135f8] 	      9937	syntax.c	FUNCTION_161	IF_3	CALL_4
0x135b8	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9937	syntax.c	FUNCTION_161	IF_3	CALL_4
0x135bb	          0x4863d0	                         movsxd rdx, eax	      9937	syntax.c	FUNCTION_161	IF_3	CALL_4
0x135be	          0x4889d0	                            mov rax, rdx	      9937	syntax.c	FUNCTION_161	IF_3	CALL_4
0x135c1	        0x48c1e003	                              shl rax, 3	      9937	syntax.c	FUNCTION_161	IF_3	CALL_4
0x135c5	          0x4801d0	                            add rax, rdx	      9937	syntax.c	FUNCTION_161	IF_3	CALL_4
0x135c8	          0x4801c0	                            add rax, rax	      9937	syntax.c	FUNCTION_161	IF_3	CALL_4
0x135cb	          0x4801d0	                            add rax, rdx	      9937	syntax.c	FUNCTION_161	IF_3	CALL_4
0x135ce	        0x48c1e003	                              shl rax, 3	      9937	syntax.c	FUNCTION_161	IF_3	CALL_4
0x135d2	          0x4801c8	                            add rax, rcx	      9937	syntax.c	FUNCTION_161	IF_3	CALL_4
0x135d5	        0x488b4070	            mov rax, qword [rax + 0x70] 	      9937	syntax.c	FUNCTION_161	IF_3	CALL_4
0x135d9	          0x4885c0	                           test rax, rax	      9937	syntax.c	FUNCTION_161	IF_3	CALL_4
0x135dc	            0x7460	                            je 0x401367e	      9937	syntax.c	FUNCTION_161	IF_3	CALL_4
0x135de	    0x488b0d000000	            mov rcx, qword [0x04013625] 	      9939	syntax.c	FUNCTION_161	IF_3	CALL_5
0x135e5	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9939	syntax.c	FUNCTION_161	IF_3	CALL_5
0x135e8	          0x4863d0	                         movsxd rdx, eax	      9939	syntax.c	FUNCTION_161	IF_3	CALL_5
0x135eb	          0x4889d0	                            mov rax, rdx	      9939	syntax.c	FUNCTION_161	IF_3	CALL_5
0x135ee	        0x48c1e003	                              shl rax, 3	      9939	syntax.c	FUNCTION_161	IF_3	CALL_5
0x135f2	          0x4801d0	                            add rax, rdx	      9939	syntax.c	FUNCTION_161	IF_3	CALL_5
0x135f5	          0x4801c0	                            add rax, rax	      9939	syntax.c	FUNCTION_161	IF_3	CALL_5
0x135f8	          0x4801d0	                            add rax, rdx	      9939	syntax.c	FUNCTION_161	IF_3	CALL_5
0x135fb	        0x48c1e003	                              shl rax, 3	      9939	syntax.c	FUNCTION_161	IF_3	CALL_5
0x135ff	        0x488d1c01	                    lea rbx, [rcx + rax]	      9939	syntax.c	FUNCTION_161	IF_3	CALL_5
0x13603	    0x488b0d000000	            mov rcx, qword [0x0401364a] 	      9940	syntax.c	FUNCTION_161	IF_3	CALL_7
0x1360a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9940	syntax.c	FUNCTION_161	IF_3	CALL_7
0x1360d	          0x4863d0	                         movsxd rdx, eax	      9940	syntax.c	FUNCTION_161	IF_3	CALL_7
0x13610	          0x4889d0	                            mov rax, rdx	      9940	syntax.c	FUNCTION_161	IF_3	CALL_7
0x13613	        0x48c1e003	                              shl rax, 3	      9940	syntax.c	FUNCTION_161	IF_3	CALL_7
0x13617	          0x4801d0	                            add rax, rdx	      9940	syntax.c	FUNCTION_161	IF_3	CALL_7
0x1361a	          0x4801c0	                            add rax, rax	      9940	syntax.c	FUNCTION_161	IF_3	CALL_7
0x1361d	          0x4801d0	                            add rax, rdx	      9940	syntax.c	FUNCTION_161	IF_3	CALL_7
0x13620	        0x48c1e003	                              shl rax, 3	      9940	syntax.c	FUNCTION_161	IF_3	CALL_7
0x13624	          0x4801c8	                            add rax, rcx	      9940	syntax.c	FUNCTION_161	IF_3	CALL_7
0x13627	        0x488b4070	            mov rax, qword [rax + 0x70] 	      9940	syntax.c	FUNCTION_161	IF_3	CALL_7
0x1362b	          0x4889c7	                            mov rdi, rax	      9940	syntax.c	FUNCTION_161	IF_3	CALL_7
0x1362e	      0xe800000000	                          call 0x4013673	      9940	syntax.c	FUNCTION_161	IF_3	CALL_7
0x13633	        0x48894340	             mov qword [rbx + 0x40], rax	      9939	syntax.c	FUNCTION_161	IF_3	CALL_5
0x13637	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      9941	syntax.c	FUNCTION_161	IF_3
0x1363e	    0x488b0d000000	            mov rcx, qword [0x04013685] 	      9943	syntax.c	FUNCTION_161	IF_4	CALL_8
0x13645	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9943	syntax.c	FUNCTION_161	IF_4	CALL_8
0x13648	          0x4863d0	                         movsxd rdx, eax	      9943	syntax.c	FUNCTION_161	IF_4	CALL_8
0x1364b	          0x4889d0	                            mov rax, rdx	      9943	syntax.c	FUNCTION_161	IF_4	CALL_8
0x1364e	        0x48c1e003	                              shl rax, 3	      9943	syntax.c	FUNCTION_161	IF_4	CALL_8
0x13652	          0x4801d0	                            add rax, rdx	      9943	syntax.c	FUNCTION_161	IF_4	CALL_8
0x13655	          0x4801c0	                            add rax, rax	      9943	syntax.c	FUNCTION_161	IF_4	CALL_8
0x13658	          0x4801d0	                            add rax, rdx	      9943	syntax.c	FUNCTION_161	IF_4	CALL_8
0x1365b	        0x48c1e003	                              shl rax, 3	      9943	syntax.c	FUNCTION_161	IF_4	CALL_8
0x1365f	          0x4801c8	                            add rax, rcx	      9943	syntax.c	FUNCTION_161	IF_4	CALL_8
0x13662	        0x488b4078	            mov rax, qword [rax + 0x78] 	      9943	syntax.c	FUNCTION_161	IF_4	CALL_8
0x13666	          0x4885c0	                           test rax, rax	      9943	syntax.c	FUNCTION_161	IF_4	CALL_8
0x13669	            0x7460	                            je 0x401370b	      9943	syntax.c	FUNCTION_161	IF_4	CALL_8
0x1366b	    0x488b0d000000	            mov rcx, qword [0x040136b2] 	      9945	syntax.c	FUNCTION_161	IF_4	CALL_9
0x13672	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9945	syntax.c	FUNCTION_161	IF_4	CALL_9
0x13675	          0x4863d0	                         movsxd rdx, eax	      9945	syntax.c	FUNCTION_161	IF_4	CALL_9
0x13678	          0x4889d0	                            mov rax, rdx	      9945	syntax.c	FUNCTION_161	IF_4	CALL_9
0x1367b	        0x48c1e003	                              shl rax, 3	      9945	syntax.c	FUNCTION_161	IF_4	CALL_9
0x1367f	          0x4801d0	                            add rax, rdx	      9945	syntax.c	FUNCTION_161	IF_4	CALL_9
0x13682	          0x4801c0	                            add rax, rax	      9945	syntax.c	FUNCTION_161	IF_4	CALL_9
0x13685	          0x4801d0	                            add rax, rdx	      9945	syntax.c	FUNCTION_161	IF_4	CALL_9
0x13688	        0x48c1e003	                              shl rax, 3	      9945	syntax.c	FUNCTION_161	IF_4	CALL_9
0x1368c	        0x488d1c01	                    lea rbx, [rcx + rax]	      9945	syntax.c	FUNCTION_161	IF_4	CALL_9
0x13690	    0x488b0d000000	            mov rcx, qword [0x040136d7] 	      9946	syntax.c	FUNCTION_161	IF_4	CALL_11
0x13697	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9946	syntax.c	FUNCTION_161	IF_4	CALL_11
0x1369a	          0x4863d0	                         movsxd rdx, eax	      9946	syntax.c	FUNCTION_161	IF_4	CALL_11
0x1369d	          0x4889d0	                            mov rax, rdx	      9946	syntax.c	FUNCTION_161	IF_4	CALL_11
0x136a0	        0x48c1e003	                              shl rax, 3	      9946	syntax.c	FUNCTION_161	IF_4	CALL_11
0x136a4	          0x4801d0	                            add rax, rdx	      9946	syntax.c	FUNCTION_161	IF_4	CALL_11
0x136a7	          0x4801c0	                            add rax, rax	      9946	syntax.c	FUNCTION_161	IF_4	CALL_11
0x136aa	          0x4801d0	                            add rax, rdx	      9946	syntax.c	FUNCTION_161	IF_4	CALL_11
0x136ad	        0x48c1e003	                              shl rax, 3	      9946	syntax.c	FUNCTION_161	IF_4	CALL_11
0x136b1	          0x4801c8	                            add rax, rcx	      9946	syntax.c	FUNCTION_161	IF_4	CALL_11
0x136b4	        0x488b4078	            mov rax, qword [rax + 0x78] 	      9946	syntax.c	FUNCTION_161	IF_4	CALL_11
0x136b8	          0x4889c7	                            mov rdi, rax	      9946	syntax.c	FUNCTION_161	IF_4	CALL_11
0x136bb	      0xe800000000	                          call 0x4013700	      9946	syntax.c	FUNCTION_161	IF_4	CALL_11
0x136c0	        0x48894348	             mov qword [rbx + 0x48], rax	      9945	syntax.c	FUNCTION_161	IF_4	CALL_9
0x136c4	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      9947	syntax.c	FUNCTION_161	IF_4
0x136cb	    0x488b0d000000	            mov rcx, qword [0x04013712] 	      9950	syntax.c	FUNCTION_161	IF_5	CALL_12
0x136d2	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9950	syntax.c	FUNCTION_161	IF_5	CALL_12
0x136d5	          0x4863d0	                         movsxd rdx, eax	      9950	syntax.c	FUNCTION_161	IF_5	CALL_12
0x136d8	          0x4889d0	                            mov rax, rdx	      9950	syntax.c	FUNCTION_161	IF_5	CALL_12
0x136db	        0x48c1e003	                              shl rax, 3	      9950	syntax.c	FUNCTION_161	IF_5	CALL_12
0x136df	          0x4801d0	                            add rax, rdx	      9950	syntax.c	FUNCTION_161	IF_5	CALL_12
0x136e2	          0x4801c0	                            add rax, rax	      9950	syntax.c	FUNCTION_161	IF_5	CALL_12
0x136e5	          0x4801d0	                            add rax, rdx	      9950	syntax.c	FUNCTION_161	IF_5	CALL_12
0x136e8	        0x48c1e003	                              shl rax, 3	      9950	syntax.c	FUNCTION_161	IF_5	CALL_12
0x136ec	          0x4801c8	                            add rax, rcx	      9950	syntax.c	FUNCTION_161	IF_5	CALL_12
0x136ef	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      9950	syntax.c	FUNCTION_161	IF_5	CALL_12
0x136f6	          0x4885c0	                           test rax, rax	      9950	syntax.c	FUNCTION_161	IF_5	CALL_12
0x136f9	            0x7463	                            je 0x401379e	      9950	syntax.c	FUNCTION_161	IF_5	CALL_12
0x136fb	    0x488b0d000000	            mov rcx, qword [0x04013742] 	      9952	syntax.c	FUNCTION_161	IF_5	CALL_13
0x13702	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9952	syntax.c	FUNCTION_161	IF_5	CALL_13
0x13705	          0x4863d0	                         movsxd rdx, eax	      9952	syntax.c	FUNCTION_161	IF_5	CALL_13
0x13708	          0x4889d0	                            mov rax, rdx	      9952	syntax.c	FUNCTION_161	IF_5	CALL_13
0x1370b	        0x48c1e003	                              shl rax, 3	      9952	syntax.c	FUNCTION_161	IF_5	CALL_13
0x1370f	          0x4801d0	                            add rax, rdx	      9952	syntax.c	FUNCTION_161	IF_5	CALL_13
0x13712	          0x4801c0	                            add rax, rax	      9952	syntax.c	FUNCTION_161	IF_5	CALL_13
0x13715	          0x4801d0	                            add rax, rdx	      9952	syntax.c	FUNCTION_161	IF_5	CALL_13
0x13718	        0x48c1e003	                              shl rax, 3	      9952	syntax.c	FUNCTION_161	IF_5	CALL_13
0x1371c	        0x488d1c01	                    lea rbx, [rcx + rax]	      9952	syntax.c	FUNCTION_161	IF_5	CALL_13
0x13720	    0x488b0d000000	            mov rcx, qword [0x04013767] 	      9953	syntax.c	FUNCTION_161	IF_5	CALL_15
0x13727	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9953	syntax.c	FUNCTION_161	IF_5	CALL_15
0x1372a	          0x4863d0	                         movsxd rdx, eax	      9953	syntax.c	FUNCTION_161	IF_5	CALL_15
0x1372d	          0x4889d0	                            mov rax, rdx	      9953	syntax.c	FUNCTION_161	IF_5	CALL_15
0x13730	        0x48c1e003	                              shl rax, 3	      9953	syntax.c	FUNCTION_161	IF_5	CALL_15
0x13734	          0x4801d0	                            add rax, rdx	      9953	syntax.c	FUNCTION_161	IF_5	CALL_15
0x13737	          0x4801c0	                            add rax, rax	      9953	syntax.c	FUNCTION_161	IF_5	CALL_15
0x1373a	          0x4801d0	                            add rax, rdx	      9953	syntax.c	FUNCTION_161	IF_5	CALL_15
0x1373d	        0x48c1e003	                              shl rax, 3	      9953	syntax.c	FUNCTION_161	IF_5	CALL_15
0x13741	          0x4801c8	                            add rax, rcx	      9953	syntax.c	FUNCTION_161	IF_5	CALL_15
0x13744	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      9953	syntax.c	FUNCTION_161	IF_5	CALL_15
0x1374b	          0x4889c7	                            mov rdi, rax	      9953	syntax.c	FUNCTION_161	IF_5	CALL_15
0x1374e	      0xe800000000	                          call 0x4013793	      9953	syntax.c	FUNCTION_161	IF_5	CALL_15
0x13753	        0x48894350	             mov qword [rbx + 0x50], rax	      9952	syntax.c	FUNCTION_161	IF_5	CALL_13
0x13757	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      9954	syntax.c	FUNCTION_161	IF_5
0x1375e	        0x837dec00	               cmp dword [rbp - 0x14], 0	      9957	syntax.c	FUNCTION_161	IF_6
0x13762	            0x740a	                            je 0x40137ae	      9957	syntax.c	FUNCTION_161	IF_6
0x13764	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9958	syntax.c	FUNCTION_161	CALL_16
0x13767	            0x89c7	                            mov edi, eax	      9958	syntax.c	FUNCTION_161	CALL_16
0x13769	      0xe80cf3ffff	                    call sym.set_hl_attr	      9958	syntax.c	FUNCTION_161	CALL_16
0x1376e	              0x90	                                     nop	      9959	syntax.c	FUNCTION_161
0x1376f	        0x4883c428	                           add rsp, 0x28	      9959	syntax.c	FUNCTION_161
0x13773	              0x5b	                                 pop rbx	      9959	syntax.c	FUNCTION_161
0x13774	              0x5d	                                 pop rbp	      9959	syntax.c	FUNCTION_161
0x13775	              0xc3	                                     ret	      9959	syntax.c	FUNCTION_161
pop_current_state	FOR,0:DO,0:IF,2:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,2	29
0x4b84	              0x55	                                push rbp	      2911	syntax.c	FUNCTION_36
0x4b85	          0x4889e5	                            mov rbp, rsp	      2911	syntax.c	FUNCTION_36
0x4b88	    0x8b0500000000	            mov eax, dword [0x04004bce] 	      2912	syntax.c	FUNCTION_36	IF_1
0x4b8e	            0x85c0	                           test eax, eax	      2912	syntax.c	FUNCTION_36	IF_1
0x4b90	            0x7445	                            je 0x4004c17	      2912	syntax.c	FUNCTION_36	IF_1
0x4b92	    0x488b0d000000	            mov rcx, qword [0x04004bd9] 	      2914	syntax.c	FUNCTION_36	IF_1	CALL_2
0x4b99	    0x8b0500000000	            mov eax, dword [0x04004bdf] 	      2914	syntax.c	FUNCTION_36	IF_1	CALL_2
0x4b9f	          0x4863d0	                         movsxd rdx, eax	      2914	syntax.c	FUNCTION_36	IF_1	CALL_2
0x4ba2	          0x4889d0	                            mov rax, rdx	      2914	syntax.c	FUNCTION_36	IF_1	CALL_2
0x4ba5	        0x48c1e003	                              shl rax, 3	      2914	syntax.c	FUNCTION_36	IF_1	CALL_2
0x4ba9	          0x4801d0	                            add rax, rdx	      2914	syntax.c	FUNCTION_36	IF_1	CALL_2
0x4bac	        0x48c1e004	                              shl rax, 4	      2914	syntax.c	FUNCTION_36	IF_1	CALL_2
0x4bb0	    0x482d90000000	                           sub rax, 0x90	      2914	syntax.c	FUNCTION_36	IF_1	CALL_2
0x4bb6	          0x4801c8	                            add rax, rcx	      2914	syntax.c	FUNCTION_36	IF_1	CALL_2
0x4bb9	    0x488b80880000	            mov rax, qword [rax + 0x88] 	      2914	syntax.c	FUNCTION_36	IF_1	CALL_2
0x4bc0	          0x4889c7	                            mov rdi, rax	      2914	syntax.c	FUNCTION_36	IF_1	CALL_2
0x4bc3	      0xe800000000	                          call 0x4004c08	      2914	syntax.c	FUNCTION_36	IF_1	CALL_2
0x4bc8	    0x8b0500000000	            mov eax, dword [0x04004c0e] 	      2915	syntax.c	FUNCTION_36	IF_1
0x4bce	          0x83e801	                              sub eax, 1	      2915	syntax.c	FUNCTION_36	IF_1
0x4bd1	    0x890500000000	            mov dword [0x04004c17], eax 	      2915	syntax.c	FUNCTION_36	IF_1
0x4bd7	    0xc70500000000	     mov dword [0x04004c21], 0xffffffff 	      2918	syntax.c	FUNCTION_36
0x4be1	    0x8b1500000000	            mov edx, dword [0x04004c27] 	      2921	syntax.c	FUNCTION_36	IF_2
0x4be7	    0x8b0500000000	            mov eax, dword [0x04004c2d] 	      2921	syntax.c	FUNCTION_36	IF_2
0x4bed	            0x39c2	                            cmp edx, eax	      2921	syntax.c	FUNCTION_36	IF_2
0x4bef	            0x7f0a	                            jg 0x4004c3b	      2921	syntax.c	FUNCTION_36	IF_2
0x4bf1	    0xc70500000000	     mov dword [0x04004c3b], 0xffffffff 	      2922	syntax.c	FUNCTION_36	IF_2
0x4bfb	              0x90	                                     nop	      2923	syntax.c	FUNCTION_36
0x4bfc	              0x5d	                                 pop rbp	      2923	syntax.c	FUNCTION_36
0x4bfd	              0xc3	                                     ret	      2923	syntax.c	FUNCTION_36
syn_list_keywords	FOR,2:DO,0:IF,10:SWITCH,0:functions,0:ELSE,1:WHILE,0:CALL,17	200
0x7e66	              0x55	                                push rbp	      4343	syntax.c	FUNCTION_71
0x7e67	          0x4889e5	                            mov rbp, rsp	      4343	syntax.c	FUNCTION_71
0x7e6a	        0x4883ec60	                           sub rsp, 0x60	      4343	syntax.c	FUNCTION_71
0x7e6e	          0x897dbc	             mov dword [rbp - 0x44], edi	      4343	syntax.c	FUNCTION_71
0x7e71	        0x488975b0	             mov qword [rbp - 0x50], rsi	      4343	syntax.c	FUNCTION_71
0x7e75	          0x8955b8	             mov dword [rbp - 0x48], edx	      4343	syntax.c	FUNCTION_71
0x7e78	          0x894dac	             mov dword [rbp - 0x54], ecx	      4343	syntax.c	FUNCTION_71
0x7e7b	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      4348	syntax.c	FUNCTION_71
0x7e82	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      4349	syntax.c	FUNCTION_71
0x7e8a	    0x48c745f80000	                  mov qword [rbp - 8], 0	      4350	syntax.c	FUNCTION_71
0x7e92	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      4351	syntax.c	FUNCTION_71
0x7e99	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      4352	syntax.c	FUNCTION_71
0x7ea0	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      4353	syntax.c	FUNCTION_71
0x7ea7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4359	syntax.c	FUNCTION_71
0x7eab	        0x488b4008	                mov rax, qword [rax + 8]	      4359	syntax.c	FUNCTION_71
0x7eaf	          0x8945cc	             mov dword [rbp - 0x34], eax	      4359	syntax.c	FUNCTION_71
0x7eb2	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4360	syntax.c	FUNCTION_71	FOR_1
0x7eb6	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4360	syntax.c	FUNCTION_71	FOR_1
0x7eba	        0x488945e0	             mov qword [rbp - 0x20], rax	      4360	syntax.c	FUNCTION_71	FOR_1
0x7ebe	      0xe9a1020000	                           jmp 0x40081a4	      4360	syntax.c	FUNCTION_71	FOR_1
0x7ec3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4362	syntax.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0x7ec7	        0x488b4008	                mov rax, qword [rax + 8]	      4362	syntax.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0x7ecb	          0x4885c0	                           test rax, rax	      4362	syntax.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0x7ece	     0xf848b020000	                            je 0x400819f	      4362	syntax.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0x7ed4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4362	syntax.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0x7ed8	        0x488b4008	                mov rax, qword [rax + 8]	      4362	syntax.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0x7edc	    0x483d00000000	                              cmp rax, 0	      4362	syntax.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0x7ee2	     0xf8477020000	                            je 0x400819f	      4362	syntax.c	FUNCTION_71	FOR_1	IF_1	CALL_1
0x7ee8	        0x836dcc01	               sub dword [rbp - 0x34], 1	      4364	syntax.c	FUNCTION_71	FOR_1	IF_1
0x7eec	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	CALL_2
0x7ef0	        0x488b4008	                mov rax, qword [rax + 8]	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	CALL_2
0x7ef4	        0x4883e828	                           sub rax, 0x28	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	CALL_2
0x7ef8	        0x488945e8	             mov qword [rbp - 0x18], rax	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	CALL_2
0x7efc	      0xe949020000	                           jmp 0x400818a	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	CALL_2
0x7f01	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4367	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2
0x7f05	         0xfb7400c	            movzx eax, word [rax + 0xc] 	      4367	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2
0x7f09	              0x98	                                    cwde	      4367	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2
0x7f0a	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	      4367	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2
0x7f0d	     0xf852c020000	                           jne 0x400817f	      4367	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2
0x7f13	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4369	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x7f17	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4369	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x7f1a	          0x83e001	                              and eax, 1	      4369	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x7f1d	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      4369	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x7f20	            0x754f	                           jne 0x4007fb1	      4369	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x7f22	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4370	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x7f26	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4370	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x7f29	      0x2580000000	                           and eax, 0x80	      4370	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x7f2e	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      4370	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x7f31	            0x753e	                           jne 0x4007fb1	      4370	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x7f33	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4371	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x7f37	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4371	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x7f3a	      0x2500010000	                          and eax, 0x100	      4371	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x7f3f	          0x3b45d8	             cmp eax, dword [rbp - 0x28]	      4371	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x7f42	            0x752d	                           jne 0x4007fb1	      4371	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x7f44	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4372	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x7f48	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4372	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x7f4b	      0x2500020000	                          and eax, 0x200	      4372	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x7f50	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      4372	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x7f53	            0x751c	                           jne 0x4007fb1	      4372	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x7f55	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4373	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x7f59	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4373	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x7f5d	        0x483b45f8	                cmp rax, qword [rbp - 8]	      4373	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x7f61	            0x750e	                           jne 0x4007fb1	      4373	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x7f63	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4374	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x7f67	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4374	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x7f6b	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      4374	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x7f6f	            0x7409	                            je 0x4007fba	      4374	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x7f71	    0xc745c80f2700	          mov dword [rbp - 0x38], 0x270f	      4375	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x7f78	            0xeb13	                           jmp 0x4007fcd	      4375	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_3
0x7f7a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4377	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x7f7e	        0x4883c028	                           add rax, 0x28	      4377	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x7f82	          0x4889c7	                            mov rdi, rax	      4377	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x7f85	      0xe800000000	                          call 0x4007fca	      4377	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x7f8a	          0x8945c8	             mov dword [rbp - 0x38], eax	      4377	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	CALL_3
0x7f8d	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      4379	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4	CALL_4
0x7f90	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	      4379	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4	CALL_4
0x7f93	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      4379	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4	CALL_4
0x7f96	            0x89ce	                            mov esi, ecx	      4379	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4	CALL_4
0x7f98	            0x89c7	                            mov edi, eax	      4379	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4	CALL_4
0x7f9a	      0xe8a5a90000	                call sym.syn_list_header	      4379	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4	CALL_4
0x7f9f	            0x85c0	                           test eax, eax	      4379	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4	CALL_4
0x7fa1	            0x742c	                            je 0x400800f	      4379	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4	CALL_4
0x7fa3	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      4381	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4
0x7faa	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      4382	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4
0x7fb2	    0x48c745f80000	                  mov qword [rbp - 8], 0	      4383	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4
0x7fba	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      4384	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4
0x7fc1	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      4385	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4
0x7fc8	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      4386	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_4
0x7fcf	    0xc745b8010000	               mov dword [rbp - 0x48], 1	      4388	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2
0x7fd6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4389	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5
0x7fda	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4389	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5
0x7fdd	          0x83e001	                              and eax, 1	      4389	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5
0x7fe0	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      4389	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5
0x7fe3	            0x7426	                            je 0x400804b	      4389	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5
0x7fe5	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      4391	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5	CALL_5
0x7fe8	            0x89c6	                            mov esi, eax	      4391	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5	CALL_5
0x7fea	      0xbf00000000	                              mov edi, 0	      4391	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5	CALL_5
0x7fef	      0xe800000000	                          call 0x4008034	      4391	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5	CALL_5
0x7ff4	      0xbf20000000	                           mov edi, 0x20	      4392	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5	CALL_6
0x7ff9	      0xe800000000	                          call 0x400803e	      4392	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5	CALL_6
0x7ffe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4393	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5
0x8002	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4393	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5
0x8005	          0x83e001	                              and eax, 1	      4393	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5
0x8008	          0x8945d0	             mov dword [rbp - 0x30], eax	      4393	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_5
0x800b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4395	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6
0x800f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4395	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6
0x8013	        0x483b45f8	                cmp rax, qword [rbp - 8]	      4395	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6
0x8017	            0x742e	                            je 0x4008087	      4395	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6
0x8019	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4397	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6	CALL_7
0x801d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4397	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6	CALL_7
0x8021	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      4397	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6	CALL_7
0x8024	          0x4889c6	                            mov rsi, rax	      4397	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6	CALL_7
0x8027	      0xbf00000000	                              mov edi, 0	      4397	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6	CALL_7
0x802c	      0xe831faffff	                    call sym.put_id_list	      4397	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6	CALL_7
0x8031	      0xbf20000000	                           mov edi, 0x20	      4399	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6	CALL_8
0x8036	      0xe800000000	                          call 0x400807b	      4399	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6	CALL_8
0x803b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4400	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6
0x803f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4400	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6
0x8043	        0x488945f8	                mov qword [rbp - 8], rax	      4400	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_6
0x8047	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4402	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7
0x804b	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4402	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7
0x804f	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      4402	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7
0x8053	     0xf84d6000000	                            je 0x400816f	      4402	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7
0x8059	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4404	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	CALL_9
0x805d	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4404	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	CALL_9
0x8061	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      4404	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	CALL_9
0x8064	          0x4889c6	                            mov rsi, rax	      4404	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	CALL_9
0x8067	      0xbf00000000	                              mov edi, 0	      4404	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	CALL_9
0x806c	      0xe8f1f9ffff	                    call sym.put_id_list	      4404	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	CALL_9
0x8071	      0xbf20000000	                           mov edi, 0x20	      4405	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	CALL_10
0x8076	      0xe800000000	                          call 0x40080bb	      4405	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	CALL_10
0x807b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4406	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7
0x807f	        0x488b4018	            mov rax, qword [rax + 0x18] 	      4406	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7
0x8083	        0x488945f0	             mov qword [rbp - 0x10], rax	      4406	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7
0x8087	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4407	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8
0x808b	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4407	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8
0x808e	      0x2580000000	                           and eax, 0x80	      4407	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8
0x8093	            0x85c0	                           test eax, eax	      4407	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8
0x8095	            0x7428	                            je 0x40080ff	      4407	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8
0x8097	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      4409	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8	CALL_11
0x809a	            0x89c6	                            mov esi, eax	      4409	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8	CALL_11
0x809c	      0xbf00000000	                              mov edi, 0	      4409	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8	CALL_11
0x80a1	      0xe800000000	                          call 0x40080e6	      4409	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8	CALL_11
0x80a6	      0xbf20000000	                           mov edi, 0x20	      4410	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8	CALL_12
0x80ab	      0xe800000000	                          call 0x40080f0	      4410	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8	CALL_12
0x80b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4411	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8
0x80b4	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4411	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8
0x80b7	      0x2580000000	                           and eax, 0x80	      4411	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8
0x80bc	          0x8945d4	             mov dword [rbp - 0x2c], eax	      4411	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_8
0x80bf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4413	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9
0x80c3	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4413	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9
0x80c6	      0x2500010000	                          and eax, 0x100	      4413	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9
0x80cb	            0x85c0	                           test eax, eax	      4413	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9
0x80cd	            0x7428	                            je 0x4008137	      4413	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9
0x80cf	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      4415	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9	CALL_13
0x80d2	            0x89c6	                            mov esi, eax	      4415	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9	CALL_13
0x80d4	      0xbf00000000	                              mov edi, 0	      4415	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9	CALL_13
0x80d9	      0xe800000000	                          call 0x400811e	      4415	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9	CALL_13
0x80de	      0xbf20000000	                           mov edi, 0x20	      4416	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9	CALL_14
0x80e3	      0xe800000000	                          call 0x4008128	      4416	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9	CALL_14
0x80e8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4417	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9
0x80ec	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4417	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9
0x80ef	      0x2500010000	                          and eax, 0x100	      4417	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9
0x80f4	          0x8945d8	             mov dword [rbp - 0x28], eax	      4417	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_9
0x80f7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4419	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10
0x80fb	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4419	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10
0x80fe	      0x2500020000	                          and eax, 0x200	      4419	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10
0x8103	            0x85c0	                           test eax, eax	      4419	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10
0x8105	            0x7428	                            je 0x400816f	      4419	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10
0x8107	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      4421	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10	CALL_15
0x810a	            0x89c6	                            mov esi, eax	      4421	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10	CALL_15
0x810c	      0xbf00000000	                              mov edi, 0	      4421	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10	CALL_15
0x8111	      0xe800000000	                          call 0x4008156	      4421	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10	CALL_15
0x8116	      0xbf20000000	                           mov edi, 0x20	      4422	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10	CALL_16
0x811b	      0xe800000000	                          call 0x4008160	      4422	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10	CALL_16
0x8120	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4423	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10
0x8124	          0x8b4020	            mov eax, dword [rax + 0x20] 	      4423	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10
0x8127	      0x2500020000	                          and eax, 0x200	      4423	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10
0x812c	          0x8945dc	             mov dword [rbp - 0x24], eax	      4423	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	IF_7	IF_10
0x812f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4426	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	CALL_17
0x8133	        0x4883c028	                           add rax, 0x28	      4426	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	CALL_17
0x8137	          0x4889c7	                            mov rdi, rax	      4426	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	CALL_17
0x813a	      0xe800000000	                          call 0x400817f	      4426	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	IF_2	CALL_17
0x813f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	CALL_2
0x8143	          0x488b00	                    mov rax, qword [rax]	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	CALL_2
0x8146	        0x488945e8	             mov qword [rbp - 0x18], rax	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	CALL_2
0x814a	      0x48837de800	               cmp qword [rbp - 0x18], 0	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	CALL_2
0x814f	            0x740e	                            je 0x400819f	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	CALL_2
0x8151	    0x8b0500000000	            mov eax, dword [0x04008197] 	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	CALL_2
0x8157	            0x85c0	                           test eax, eax	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	CALL_2
0x8159	     0xf84a2fdffff	                            je 0x4007f41	      4365	syntax.c	FUNCTION_71	FOR_1	IF_1	FOR_2	CALL_2
0x815f	      0x488345e010	            add qword [rbp - 0x20], 0x10	      4360	syntax.c	FUNCTION_71	FOR_1
0x8164	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      4360	syntax.c	FUNCTION_71	FOR_1
0x8168	            0x7e0e	                           jle 0x40081b8	      4360	syntax.c	FUNCTION_71	FOR_1
0x816a	    0x8b0500000000	            mov eax, dword [0x040081b0] 	      4360	syntax.c	FUNCTION_71	FOR_1
0x8170	            0x85c0	                           test eax, eax	      4360	syntax.c	FUNCTION_71	FOR_1
0x8172	     0xf844bfdffff	                            je 0x4007f03	      4360	syntax.c	FUNCTION_71	FOR_1
0x8178	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      4432	syntax.c	FUNCTION_71
0x817b	              0xc9	                                   leave	      4433	syntax.c	FUNCTION_71
0x817c	              0xc3	                                     ret	      4433	syntax.c	FUNCTION_71
copy_id_list	FOR,1:DO,0:IF,2:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,2	39
0xc1e3	              0x55	                                push rbp	      6201	syntax.c	FUNCTION_93
0xc1e4	          0x4889e5	                            mov rbp, rsp	      6201	syntax.c	FUNCTION_93
0xc1e7	        0x4883ec20	                           sub rsp, 0x20	      6201	syntax.c	FUNCTION_93
0xc1eb	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6201	syntax.c	FUNCTION_93
0xc1ef	      0x48837de800	               cmp qword [rbp - 0x18], 0	      6206	syntax.c	FUNCTION_93	IF_1
0xc1f4	            0x7507	                           jne 0x400c23d	      6206	syntax.c	FUNCTION_93	IF_1
0xc1f6	      0xb800000000	                              mov eax, 0	      6207	syntax.c	FUNCTION_93	IF_1
0xc1fb	            0xeb62	                           jmp 0x400c29f	      6207	syntax.c	FUNCTION_93	IF_1
0xc1fd	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      6209	syntax.c	FUNCTION_93	FOR_1
0xc204	            0xeb04	                           jmp 0x400c24a	      6209	syntax.c	FUNCTION_93	FOR_1
0xc206	        0x8345f001	               add dword [rbp - 0x10], 1	      6209	syntax.c	FUNCTION_93	FOR_1
0xc20a	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      6209	syntax.c	FUNCTION_93	FOR_1
0xc20d	            0x4898	                                    cdqe	      6209	syntax.c	FUNCTION_93	FOR_1
0xc20f	        0x488d1400	                    lea rdx, [rax + rax]	      6209	syntax.c	FUNCTION_93	FOR_1
0xc213	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6209	syntax.c	FUNCTION_93	FOR_1
0xc217	          0x4801d0	                            add rax, rdx	      6209	syntax.c	FUNCTION_93	FOR_1
0xc21a	           0xfb700	                   movzx eax, word [rax]	      6209	syntax.c	FUNCTION_93	FOR_1
0xc21d	          0x6685c0	                             test ax, ax	      6209	syntax.c	FUNCTION_93	FOR_1
0xc220	            0x75e4	                           jne 0x400c246	      6209	syntax.c	FUNCTION_93	FOR_1
0xc222	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      6211	syntax.c	FUNCTION_93
0xc225	          0x83c001	                              add eax, 1	      6211	syntax.c	FUNCTION_93
0xc228	             0x1c0	                            add eax, eax	      6211	syntax.c	FUNCTION_93
0xc22a	          0x8945f4	              mov dword [rbp - 0xc], eax	      6211	syntax.c	FUNCTION_93
0xc22d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      6212	syntax.c	FUNCTION_93	CALL_1
0xc230	            0x89c7	                            mov edi, eax	      6212	syntax.c	FUNCTION_93	CALL_1
0xc232	      0xe800000000	                          call 0x400c277	      6212	syntax.c	FUNCTION_93	CALL_1
0xc237	        0x488945f8	                mov qword [rbp - 8], rax	      6212	syntax.c	FUNCTION_93	CALL_1
0xc23b	      0x48837df800	                  cmp qword [rbp - 8], 0	      6213	syntax.c	FUNCTION_93	IF_2
0xc240	            0x7419	                            je 0x400c29b	      6213	syntax.c	FUNCTION_93	IF_2
0xc242	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      6214	syntax.c	FUNCTION_93	CALL_2
0xc245	          0x4863d0	                         movsxd rdx, eax	      6214	syntax.c	FUNCTION_93	CALL_2
0xc248	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      6214	syntax.c	FUNCTION_93	CALL_2
0xc24c	        0x488b45f8	                mov rax, qword [rbp - 8]	      6214	syntax.c	FUNCTION_93	CALL_2
0xc250	          0x4889ce	                            mov rsi, rcx	      6214	syntax.c	FUNCTION_93	CALL_2
0xc253	          0x4889c7	                            mov rdi, rax	      6214	syntax.c	FUNCTION_93	CALL_2
0xc256	      0xe800000000	                          call 0x400c29b	      6214	syntax.c	FUNCTION_93	CALL_2
0xc25b	        0x488b45f8	                mov rax, qword [rbp - 8]	      6216	syntax.c	FUNCTION_93
0xc25f	              0xc9	                                   leave	      6217	syntax.c	FUNCTION_93
0xc260	              0xc3	                                     ret	      6217	syntax.c	FUNCTION_93
hl_has_settings	FOR,0:DO,0:IF,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,10	142
0x10112	              0x55	                                push rbp	      8339	syntax.c	FUNCTION_119
0x10113	          0x4889e5	                            mov rbp, rsp	      8339	syntax.c	FUNCTION_119
0x10116	          0x897dfc	                mov dword [rbp - 4], edi	      8339	syntax.c	FUNCTION_119
0x10119	          0x8975f8	                mov dword [rbp - 8], esi	      8339	syntax.c	FUNCTION_119
0x1011c	    0x488b0d000000	            mov rcx, qword [0x04010163] 	      8340	syntax.c	FUNCTION_119	CALL_1
0x10123	          0x8b45fc	                mov eax, dword [rbp - 4]	      8340	syntax.c	FUNCTION_119	CALL_1
0x10126	          0x4863d0	                         movsxd rdx, eax	      8340	syntax.c	FUNCTION_119	CALL_1
0x10129	          0x4889d0	                            mov rax, rdx	      8340	syntax.c	FUNCTION_119	CALL_1
0x1012c	        0x48c1e003	                              shl rax, 3	      8340	syntax.c	FUNCTION_119	CALL_1
0x10130	          0x4801d0	                            add rax, rdx	      8340	syntax.c	FUNCTION_119	CALL_1
0x10133	          0x4801c0	                            add rax, rax	      8340	syntax.c	FUNCTION_119	CALL_1
0x10136	          0x4801d0	                            add rax, rdx	      8340	syntax.c	FUNCTION_119	CALL_1
0x10139	        0x48c1e003	                              shl rax, 3	      8340	syntax.c	FUNCTION_119	CALL_1
0x1013d	          0x4801c8	                            add rax, rcx	      8340	syntax.c	FUNCTION_119	CALL_1
0x10140	          0x8b4028	            mov eax, dword [rax + 0x28] 	      8340	syntax.c	FUNCTION_119	CALL_1
0x10143	            0x85c0	                           test eax, eax	      8351	syntax.c	FUNCTION_119	CALL_10
0x10145	     0xf85b2010000	                           jne 0x401033d	      8351	syntax.c	FUNCTION_119	CALL_10
0x1014b	    0x488b0d000000	            mov rcx, qword [0x04010192] 	      8341	syntax.c	FUNCTION_119	CALL_2
0x10152	          0x8b45fc	                mov eax, dword [rbp - 4]	      8341	syntax.c	FUNCTION_119	CALL_2
0x10155	          0x4863d0	                         movsxd rdx, eax	      8341	syntax.c	FUNCTION_119	CALL_2
0x10158	          0x4889d0	                            mov rax, rdx	      8341	syntax.c	FUNCTION_119	CALL_2
0x1015b	        0x48c1e003	                              shl rax, 3	      8341	syntax.c	FUNCTION_119	CALL_2
0x1015f	          0x4801d0	                            add rax, rdx	      8341	syntax.c	FUNCTION_119	CALL_2
0x10162	          0x4801c0	                            add rax, rax	      8341	syntax.c	FUNCTION_119	CALL_2
0x10165	          0x4801d0	                            add rax, rdx	      8341	syntax.c	FUNCTION_119	CALL_2
0x10168	        0x48c1e003	                              shl rax, 3	      8341	syntax.c	FUNCTION_119	CALL_2
0x1016c	          0x4801c8	                            add rax, rcx	      8341	syntax.c	FUNCTION_119	CALL_2
0x1016f	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      8341	syntax.c	FUNCTION_119	CALL_2
0x10172	            0x85c0	                           test eax, eax	      8341	syntax.c	FUNCTION_119	CALL_2
0x10174	     0xf8583010000	                           jne 0x401033d	      8341	syntax.c	FUNCTION_119	CALL_2
0x1017a	    0x488b0d000000	            mov rcx, qword [0x040101c1] 	      8342	syntax.c	FUNCTION_119	CALL_3
0x10181	          0x8b45fc	                mov eax, dword [rbp - 4]	      8342	syntax.c	FUNCTION_119	CALL_3
0x10184	          0x4863d0	                         movsxd rdx, eax	      8342	syntax.c	FUNCTION_119	CALL_3
0x10187	          0x4889d0	                            mov rax, rdx	      8342	syntax.c	FUNCTION_119	CALL_3
0x1018a	        0x48c1e003	                              shl rax, 3	      8342	syntax.c	FUNCTION_119	CALL_3
0x1018e	          0x4801d0	                            add rax, rdx	      8342	syntax.c	FUNCTION_119	CALL_3
0x10191	          0x4801c0	                            add rax, rax	      8342	syntax.c	FUNCTION_119	CALL_3
0x10194	          0x4801d0	                            add rax, rdx	      8342	syntax.c	FUNCTION_119	CALL_3
0x10197	        0x48c1e003	                              shl rax, 3	      8342	syntax.c	FUNCTION_119	CALL_3
0x1019b	          0x4801c8	                            add rax, rcx	      8342	syntax.c	FUNCTION_119	CALL_3
0x1019e	          0x8b4034	            mov eax, dword [rax + 0x34] 	      8342	syntax.c	FUNCTION_119	CALL_3
0x101a1	            0x85c0	                           test eax, eax	      8342	syntax.c	FUNCTION_119	CALL_3
0x101a3	     0xf8554010000	                           jne 0x401033d	      8342	syntax.c	FUNCTION_119	CALL_3
0x101a9	    0x488b0d000000	            mov rcx, qword [0x040101f0] 	      8343	syntax.c	FUNCTION_119	CALL_4
0x101b0	          0x8b45fc	                mov eax, dword [rbp - 4]	      8343	syntax.c	FUNCTION_119	CALL_4
0x101b3	          0x4863d0	                         movsxd rdx, eax	      8343	syntax.c	FUNCTION_119	CALL_4
0x101b6	          0x4889d0	                            mov rax, rdx	      8343	syntax.c	FUNCTION_119	CALL_4
0x101b9	        0x48c1e003	                              shl rax, 3	      8343	syntax.c	FUNCTION_119	CALL_4
0x101bd	          0x4801d0	                            add rax, rdx	      8343	syntax.c	FUNCTION_119	CALL_4
0x101c0	          0x4801c0	                            add rax, rax	      8343	syntax.c	FUNCTION_119	CALL_4
0x101c3	          0x4801d0	                            add rax, rdx	      8343	syntax.c	FUNCTION_119	CALL_4
0x101c6	        0x48c1e003	                              shl rax, 3	      8343	syntax.c	FUNCTION_119	CALL_4
0x101ca	          0x4801c8	                            add rax, rcx	      8343	syntax.c	FUNCTION_119	CALL_4
0x101cd	          0x8b4038	            mov eax, dword [rax + 0x38] 	      8343	syntax.c	FUNCTION_119	CALL_4
0x101d0	            0x85c0	                           test eax, eax	      8343	syntax.c	FUNCTION_119	CALL_4
0x101d2	     0xf8525010000	                           jne 0x401033d	      8343	syntax.c	FUNCTION_119	CALL_4
0x101d8	    0x488b0d000000	            mov rcx, qword [0x0401021f] 	      8345	syntax.c	FUNCTION_119	CALL_5
0x101df	          0x8b45fc	                mov eax, dword [rbp - 4]	      8345	syntax.c	FUNCTION_119	CALL_5
0x101e2	          0x4863d0	                         movsxd rdx, eax	      8345	syntax.c	FUNCTION_119	CALL_5
0x101e5	          0x4889d0	                            mov rax, rdx	      8345	syntax.c	FUNCTION_119	CALL_5
0x101e8	        0x48c1e003	                              shl rax, 3	      8345	syntax.c	FUNCTION_119	CALL_5
0x101ec	          0x4801d0	                            add rax, rdx	      8345	syntax.c	FUNCTION_119	CALL_5
0x101ef	          0x4801c0	                            add rax, rax	      8345	syntax.c	FUNCTION_119	CALL_5
0x101f2	          0x4801d0	                            add rax, rdx	      8345	syntax.c	FUNCTION_119	CALL_5
0x101f5	        0x48c1e003	                              shl rax, 3	      8345	syntax.c	FUNCTION_119	CALL_5
0x101f9	          0x4801c8	                            add rax, rcx	      8345	syntax.c	FUNCTION_119	CALL_5
0x101fc	          0x8b4068	            mov eax, dword [rax + 0x68] 	      8345	syntax.c	FUNCTION_119	CALL_5
0x101ff	            0x85c0	                           test eax, eax	      8345	syntax.c	FUNCTION_119	CALL_5
0x10201	     0xf85f6000000	                           jne 0x401033d	      8345	syntax.c	FUNCTION_119	CALL_5
0x10207	    0x488b0d000000	            mov rcx, qword [0x0401024e] 	      8346	syntax.c	FUNCTION_119	CALL_6
0x1020e	          0x8b45fc	                mov eax, dword [rbp - 4]	      8346	syntax.c	FUNCTION_119	CALL_6
0x10211	          0x4863d0	                         movsxd rdx, eax	      8346	syntax.c	FUNCTION_119	CALL_6
0x10214	          0x4889d0	                            mov rax, rdx	      8346	syntax.c	FUNCTION_119	CALL_6
0x10217	        0x48c1e003	                              shl rax, 3	      8346	syntax.c	FUNCTION_119	CALL_6
0x1021b	          0x4801d0	                            add rax, rdx	      8346	syntax.c	FUNCTION_119	CALL_6
0x1021e	          0x4801c0	                            add rax, rax	      8346	syntax.c	FUNCTION_119	CALL_6
0x10221	          0x4801d0	                            add rax, rdx	      8346	syntax.c	FUNCTION_119	CALL_6
0x10224	        0x48c1e003	                              shl rax, 3	      8346	syntax.c	FUNCTION_119	CALL_6
0x10228	          0x4801c8	                            add rax, rcx	      8346	syntax.c	FUNCTION_119	CALL_6
0x1022b	        0x488b4070	            mov rax, qword [rax + 0x70] 	      8346	syntax.c	FUNCTION_119	CALL_6
0x1022f	          0x4885c0	                           test rax, rax	      8346	syntax.c	FUNCTION_119	CALL_6
0x10232	     0xf85c5000000	                           jne 0x401033d	      8346	syntax.c	FUNCTION_119	CALL_6
0x10238	    0x488b0d000000	            mov rcx, qword [0x0401027f] 	      8347	syntax.c	FUNCTION_119	CALL_7
0x1023f	          0x8b45fc	                mov eax, dword [rbp - 4]	      8347	syntax.c	FUNCTION_119	CALL_7
0x10242	          0x4863d0	                         movsxd rdx, eax	      8347	syntax.c	FUNCTION_119	CALL_7
0x10245	          0x4889d0	                            mov rax, rdx	      8347	syntax.c	FUNCTION_119	CALL_7
0x10248	        0x48c1e003	                              shl rax, 3	      8347	syntax.c	FUNCTION_119	CALL_7
0x1024c	          0x4801d0	                            add rax, rdx	      8347	syntax.c	FUNCTION_119	CALL_7
0x1024f	          0x4801c0	                            add rax, rax	      8347	syntax.c	FUNCTION_119	CALL_7
0x10252	          0x4801d0	                            add rax, rdx	      8347	syntax.c	FUNCTION_119	CALL_7
0x10255	        0x48c1e003	                              shl rax, 3	      8347	syntax.c	FUNCTION_119	CALL_7
0x10259	          0x4801c8	                            add rax, rcx	      8347	syntax.c	FUNCTION_119	CALL_7
0x1025c	        0x488b4078	            mov rax, qword [rax + 0x78] 	      8347	syntax.c	FUNCTION_119	CALL_7
0x10260	          0x4885c0	                           test rax, rax	      8347	syntax.c	FUNCTION_119	CALL_7
0x10263	     0xf8594000000	                           jne 0x401033d	      8347	syntax.c	FUNCTION_119	CALL_7
0x10269	    0x488b0d000000	            mov rcx, qword [0x040102b0] 	      8348	syntax.c	FUNCTION_119	CALL_8
0x10270	          0x8b45fc	                mov eax, dword [rbp - 4]	      8348	syntax.c	FUNCTION_119	CALL_8
0x10273	          0x4863d0	                         movsxd rdx, eax	      8348	syntax.c	FUNCTION_119	CALL_8
0x10276	          0x4889d0	                            mov rax, rdx	      8348	syntax.c	FUNCTION_119	CALL_8
0x10279	        0x48c1e003	                              shl rax, 3	      8348	syntax.c	FUNCTION_119	CALL_8
0x1027d	          0x4801d0	                            add rax, rdx	      8348	syntax.c	FUNCTION_119	CALL_8
0x10280	          0x4801c0	                            add rax, rax	      8348	syntax.c	FUNCTION_119	CALL_8
0x10283	          0x4801d0	                            add rax, rdx	      8348	syntax.c	FUNCTION_119	CALL_8
0x10286	        0x48c1e003	                              shl rax, 3	      8348	syntax.c	FUNCTION_119	CALL_8
0x1028a	          0x4801c8	                            add rax, rcx	      8348	syntax.c	FUNCTION_119	CALL_8
0x1028d	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      8348	syntax.c	FUNCTION_119	CALL_8
0x10294	          0x4885c0	                           test rax, rax	      8348	syntax.c	FUNCTION_119	CALL_8
0x10297	            0x7564	                           jne 0x401033d	      8348	syntax.c	FUNCTION_119	CALL_8
0x10299	    0x488b0d000000	            mov rcx, qword [0x040102e0] 	      8349	syntax.c	FUNCTION_119	CALL_9
0x102a0	          0x8b45fc	                mov eax, dword [rbp - 4]	      8349	syntax.c	FUNCTION_119	CALL_9
0x102a3	          0x4863d0	                         movsxd rdx, eax	      8349	syntax.c	FUNCTION_119	CALL_9
0x102a6	          0x4889d0	                            mov rax, rdx	      8349	syntax.c	FUNCTION_119	CALL_9
0x102a9	        0x48c1e003	                              shl rax, 3	      8349	syntax.c	FUNCTION_119	CALL_9
0x102ad	          0x4801d0	                            add rax, rdx	      8349	syntax.c	FUNCTION_119	CALL_9
0x102b0	          0x4801c0	                            add rax, rax	      8349	syntax.c	FUNCTION_119	CALL_9
0x102b3	          0x4801d0	                            add rax, rdx	      8349	syntax.c	FUNCTION_119	CALL_9
0x102b6	        0x48c1e003	                              shl rax, 3	      8349	syntax.c	FUNCTION_119	CALL_9
0x102ba	          0x4801c8	                            add rax, rcx	      8349	syntax.c	FUNCTION_119	CALL_9
0x102bd	        0x488b4060	            mov rax, qword [rax + 0x60] 	      8349	syntax.c	FUNCTION_119	CALL_9
0x102c1	          0x4885c0	                           test rax, rax	      8349	syntax.c	FUNCTION_119	CALL_9
0x102c4	            0x7537	                           jne 0x401033d	      8349	syntax.c	FUNCTION_119	CALL_9
0x102c6	        0x837df800	                  cmp dword [rbp - 8], 0	      8351	syntax.c	FUNCTION_119	CALL_10
0x102ca	            0x7438	                            je 0x4010344	      8351	syntax.c	FUNCTION_119	CALL_10
0x102cc	    0x488b0d000000	            mov rcx, qword [0x04010313] 	      8351	syntax.c	FUNCTION_119	CALL_10
0x102d3	          0x8b45fc	                mov eax, dword [rbp - 4]	      8351	syntax.c	FUNCTION_119	CALL_10
0x102d6	          0x4863d0	                         movsxd rdx, eax	      8351	syntax.c	FUNCTION_119	CALL_10
0x102d9	          0x4889d0	                            mov rax, rdx	      8351	syntax.c	FUNCTION_119	CALL_10
0x102dc	        0x48c1e003	                              shl rax, 3	      8351	syntax.c	FUNCTION_119	CALL_10
0x102e0	          0x4801d0	                            add rax, rdx	      8351	syntax.c	FUNCTION_119	CALL_10
0x102e3	          0x4801c0	                            add rax, rax	      8351	syntax.c	FUNCTION_119	CALL_10
0x102e6	          0x4801d0	                            add rax, rdx	      8351	syntax.c	FUNCTION_119	CALL_10
0x102e9	        0x48c1e003	                              shl rax, 3	      8351	syntax.c	FUNCTION_119	CALL_10
0x102ed	          0x4801c8	                            add rax, rcx	      8351	syntax.c	FUNCTION_119	CALL_10
0x102f0	    0x8b808c000000	            mov eax, dword [rax + 0x8c] 	      8351	syntax.c	FUNCTION_119	CALL_10
0x102f6	          0x83e008	                              and eax, 8	      8351	syntax.c	FUNCTION_119	CALL_10
0x102f9	            0x85c0	                           test eax, eax	      8351	syntax.c	FUNCTION_119	CALL_10
0x102fb	            0x7407	                            je 0x4010344	      8351	syntax.c	FUNCTION_119	CALL_10
0x102fd	      0xb801000000	                              mov eax, 1	      8351	syntax.c	FUNCTION_119	CALL_10
0x10302	            0xeb05	                           jmp 0x4010349	      8351	syntax.c	FUNCTION_119	CALL_10
0x10304	      0xb800000000	                              mov eax, 0	      8351	syntax.c	FUNCTION_119	CALL_10
0x10309	              0x5d	                                 pop rbp	      8352	syntax.c	FUNCTION_119
0x1030a	              0xc3	                                     ret	      8352	syntax.c	FUNCTION_119
set_context_in_echohl_cmd	FOR,0:DO,0:IF,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,0	13
0xc8c8	              0x55	                                push rbp	      6477	syntax.c	FUNCTION_99
0xc8c9	          0x4889e5	                            mov rbp, rsp	      6477	syntax.c	FUNCTION_99
0xc8cc	        0x48897df8	                mov qword [rbp - 8], rdi	      6477	syntax.c	FUNCTION_99
0xc8d0	        0x488975f0	             mov qword [rbp - 0x10], rsi	      6477	syntax.c	FUNCTION_99
0xc8d4	        0x488b45f8	                mov rax, qword [rbp - 8]	      6478	syntax.c	FUNCTION_99
0xc8d8	    0xc7000d000000	                    mov dword [rax], 0xd	      6478	syntax.c	FUNCTION_99
0xc8de	        0x488b45f8	                mov rax, qword [rbp - 8]	      6479	syntax.c	FUNCTION_99
0xc8e2	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      6479	syntax.c	FUNCTION_99
0xc8e6	        0x48895008	                mov qword [rax + 8], rdx	      6479	syntax.c	FUNCTION_99
0xc8ea	    0xc70500000000	               mov dword [0x0400c934], 1	      6480	syntax.c	FUNCTION_99
0xc8f4	              0x90	                                     nop	      6481	syntax.c	FUNCTION_99
0xc8f5	              0x5d	                                 pop rbp	      6481	syntax.c	FUNCTION_99
0xc8f6	              0xc3	                                     ret	      6481	syntax.c	FUNCTION_99
highlight_clear	FOR,0:DO,0:IF,1:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,33	420
0x1030b	              0x55	                                push rbp	      8359	syntax.c	FUNCTION_120
0x1030c	          0x4889e5	                            mov rbp, rsp	      8359	syntax.c	FUNCTION_120
0x1030f	        0x4883ec10	                           sub rsp, 0x10	      8359	syntax.c	FUNCTION_120
0x10313	          0x897dfc	                mov dword [rbp - 4], edi	      8359	syntax.c	FUNCTION_120
0x10316	    0x488b0d000000	            mov rcx, qword [0x0401035d] 	      8360	syntax.c	FUNCTION_120	CALL_1
0x1031d	          0x8b45fc	                mov eax, dword [rbp - 4]	      8360	syntax.c	FUNCTION_120	CALL_1
0x10320	          0x4863d0	                         movsxd rdx, eax	      8360	syntax.c	FUNCTION_120	CALL_1
0x10323	          0x4889d0	                            mov rax, rdx	      8360	syntax.c	FUNCTION_120	CALL_1
0x10326	        0x48c1e003	                              shl rax, 3	      8360	syntax.c	FUNCTION_120	CALL_1
0x1032a	          0x4801d0	                            add rax, rdx	      8360	syntax.c	FUNCTION_120	CALL_1
0x1032d	          0x4801c0	                            add rax, rax	      8360	syntax.c	FUNCTION_120	CALL_1
0x10330	          0x4801d0	                            add rax, rdx	      8360	syntax.c	FUNCTION_120	CALL_1
0x10333	        0x48c1e003	                              shl rax, 3	      8360	syntax.c	FUNCTION_120	CALL_1
0x10337	          0x4801c8	                            add rax, rcx	      8360	syntax.c	FUNCTION_120	CALL_1
0x1033a	    0xc74010010000	               mov dword [rax + 0x10], 1	      8360	syntax.c	FUNCTION_120	CALL_1
0x10341	    0x488b0d000000	            mov rcx, qword [0x04010388] 	      8362	syntax.c	FUNCTION_120	CALL_2
0x10348	          0x8b45fc	                mov eax, dword [rbp - 4]	      8362	syntax.c	FUNCTION_120	CALL_2
0x1034b	          0x4863d0	                         movsxd rdx, eax	      8362	syntax.c	FUNCTION_120	CALL_2
0x1034e	          0x4889d0	                            mov rax, rdx	      8362	syntax.c	FUNCTION_120	CALL_2
0x10351	        0x48c1e003	                              shl rax, 3	      8362	syntax.c	FUNCTION_120	CALL_2
0x10355	          0x4801d0	                            add rax, rdx	      8362	syntax.c	FUNCTION_120	CALL_2
0x10358	          0x4801c0	                            add rax, rax	      8362	syntax.c	FUNCTION_120	CALL_2
0x1035b	          0x4801d0	                            add rax, rdx	      8362	syntax.c	FUNCTION_120	CALL_2
0x1035e	        0x48c1e003	                              shl rax, 3	      8362	syntax.c	FUNCTION_120	CALL_2
0x10362	          0x4801c8	                            add rax, rcx	      8362	syntax.c	FUNCTION_120	CALL_2
0x10365	    0xc74014000000	               mov dword [rax + 0x14], 0	      8362	syntax.c	FUNCTION_120	CALL_2
0x1036c	    0x488b0d000000	            mov rcx, qword [0x040103b3] 	      8363	syntax.c	FUNCTION_120	CALL_4
0x10373	          0x8b45fc	                mov eax, dword [rbp - 4]	      8363	syntax.c	FUNCTION_120	CALL_4
0x10376	          0x4863d0	                         movsxd rdx, eax	      8363	syntax.c	FUNCTION_120	CALL_4
0x10379	          0x4889d0	                            mov rax, rdx	      8363	syntax.c	FUNCTION_120	CALL_4
0x1037c	        0x48c1e003	                              shl rax, 3	      8363	syntax.c	FUNCTION_120	CALL_4
0x10380	          0x4801d0	                            add rax, rdx	      8363	syntax.c	FUNCTION_120	CALL_4
0x10383	          0x4801c0	                            add rax, rax	      8363	syntax.c	FUNCTION_120	CALL_4
0x10386	          0x4801d0	                            add rax, rdx	      8363	syntax.c	FUNCTION_120	CALL_4
0x10389	        0x48c1e003	                              shl rax, 3	      8363	syntax.c	FUNCTION_120	CALL_4
0x1038d	          0x4801c8	                            add rax, rcx	      8363	syntax.c	FUNCTION_120	CALL_4
0x10390	        0x488b4018	            mov rax, qword [rax + 0x18] 	      8363	syntax.c	FUNCTION_120	CALL_4
0x10394	          0x4885c0	                           test rax, rax	      8363	syntax.c	FUNCTION_120	CALL_4
0x10397	            0x745c	                            je 0x4010435	      8363	syntax.c	FUNCTION_120	CALL_4
0x10399	    0x488b0d000000	            mov rcx, qword [0x040103e0] 	      8363	syntax.c	FUNCTION_120	CALL_4
0x103a0	          0x8b45fc	                mov eax, dword [rbp - 4]	      8363	syntax.c	FUNCTION_120	CALL_4
0x103a3	          0x4863d0	                         movsxd rdx, eax	      8363	syntax.c	FUNCTION_120	CALL_4
0x103a6	          0x4889d0	                            mov rax, rdx	      8363	syntax.c	FUNCTION_120	CALL_4
0x103a9	        0x48c1e003	                              shl rax, 3	      8363	syntax.c	FUNCTION_120	CALL_4
0x103ad	          0x4801d0	                            add rax, rdx	      8363	syntax.c	FUNCTION_120	CALL_4
0x103b0	          0x4801c0	                            add rax, rax	      8363	syntax.c	FUNCTION_120	CALL_4
0x103b3	          0x4801d0	                            add rax, rdx	      8363	syntax.c	FUNCTION_120	CALL_4
0x103b6	        0x48c1e003	                              shl rax, 3	      8363	syntax.c	FUNCTION_120	CALL_4
0x103ba	          0x4801c8	                            add rax, rcx	      8363	syntax.c	FUNCTION_120	CALL_4
0x103bd	        0x488b4018	            mov rax, qword [rax + 0x18] 	      8363	syntax.c	FUNCTION_120	CALL_4
0x103c1	          0x4889c7	                            mov rdi, rax	      8363	syntax.c	FUNCTION_120	CALL_4
0x103c4	      0xe800000000	                          call 0x4010409	      8363	syntax.c	FUNCTION_120	CALL_4
0x103c9	    0x488b0d000000	            mov rcx, qword [0x04010410] 	      8363	syntax.c	FUNCTION_120	CALL_4
0x103d0	          0x8b45fc	                mov eax, dword [rbp - 4]	      8363	syntax.c	FUNCTION_120	CALL_4
0x103d3	          0x4863d0	                         movsxd rdx, eax	      8363	syntax.c	FUNCTION_120	CALL_4
0x103d6	          0x4889d0	                            mov rax, rdx	      8363	syntax.c	FUNCTION_120	CALL_4
0x103d9	        0x48c1e003	                              shl rax, 3	      8363	syntax.c	FUNCTION_120	CALL_4
0x103dd	          0x4801d0	                            add rax, rdx	      8363	syntax.c	FUNCTION_120	CALL_4
0x103e0	          0x4801c0	                            add rax, rax	      8363	syntax.c	FUNCTION_120	CALL_4
0x103e3	          0x4801d0	                            add rax, rdx	      8363	syntax.c	FUNCTION_120	CALL_4
0x103e6	        0x48c1e003	                              shl rax, 3	      8363	syntax.c	FUNCTION_120	CALL_4
0x103ea	          0x4801c8	                            add rax, rcx	      8363	syntax.c	FUNCTION_120	CALL_4
0x103ed	    0x48c740180000	               mov qword [rax + 0x18], 0	      8363	syntax.c	FUNCTION_120	CALL_4
0x103f5	    0x488b0d000000	            mov rcx, qword [0x0401043c] 	      8364	syntax.c	FUNCTION_120	CALL_6
0x103fc	          0x8b45fc	                mov eax, dword [rbp - 4]	      8364	syntax.c	FUNCTION_120	CALL_6
0x103ff	          0x4863d0	                         movsxd rdx, eax	      8364	syntax.c	FUNCTION_120	CALL_6
0x10402	          0x4889d0	                            mov rax, rdx	      8364	syntax.c	FUNCTION_120	CALL_6
0x10405	        0x48c1e003	                              shl rax, 3	      8364	syntax.c	FUNCTION_120	CALL_6
0x10409	          0x4801d0	                            add rax, rdx	      8364	syntax.c	FUNCTION_120	CALL_6
0x1040c	          0x4801c0	                            add rax, rax	      8364	syntax.c	FUNCTION_120	CALL_6
0x1040f	          0x4801d0	                            add rax, rdx	      8364	syntax.c	FUNCTION_120	CALL_6
0x10412	        0x48c1e003	                              shl rax, 3	      8364	syntax.c	FUNCTION_120	CALL_6
0x10416	          0x4801c8	                            add rax, rcx	      8364	syntax.c	FUNCTION_120	CALL_6
0x10419	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8364	syntax.c	FUNCTION_120	CALL_6
0x1041d	          0x4885c0	                           test rax, rax	      8364	syntax.c	FUNCTION_120	CALL_6
0x10420	            0x745c	                            je 0x40104be	      8364	syntax.c	FUNCTION_120	CALL_6
0x10422	    0x488b0d000000	            mov rcx, qword [0x04010469] 	      8364	syntax.c	FUNCTION_120	CALL_6
0x10429	          0x8b45fc	                mov eax, dword [rbp - 4]	      8364	syntax.c	FUNCTION_120	CALL_6
0x1042c	          0x4863d0	                         movsxd rdx, eax	      8364	syntax.c	FUNCTION_120	CALL_6
0x1042f	          0x4889d0	                            mov rax, rdx	      8364	syntax.c	FUNCTION_120	CALL_6
0x10432	        0x48c1e003	                              shl rax, 3	      8364	syntax.c	FUNCTION_120	CALL_6
0x10436	          0x4801d0	                            add rax, rdx	      8364	syntax.c	FUNCTION_120	CALL_6
0x10439	          0x4801c0	                            add rax, rax	      8364	syntax.c	FUNCTION_120	CALL_6
0x1043c	          0x4801d0	                            add rax, rdx	      8364	syntax.c	FUNCTION_120	CALL_6
0x1043f	        0x48c1e003	                              shl rax, 3	      8364	syntax.c	FUNCTION_120	CALL_6
0x10443	          0x4801c8	                            add rax, rcx	      8364	syntax.c	FUNCTION_120	CALL_6
0x10446	        0x488b4020	            mov rax, qword [rax + 0x20] 	      8364	syntax.c	FUNCTION_120	CALL_6
0x1044a	          0x4889c7	                            mov rdi, rax	      8364	syntax.c	FUNCTION_120	CALL_6
0x1044d	      0xe800000000	                          call 0x4010492	      8364	syntax.c	FUNCTION_120	CALL_6
0x10452	    0x488b0d000000	            mov rcx, qword [0x04010499] 	      8364	syntax.c	FUNCTION_120	CALL_6
0x10459	          0x8b45fc	                mov eax, dword [rbp - 4]	      8364	syntax.c	FUNCTION_120	CALL_6
0x1045c	          0x4863d0	                         movsxd rdx, eax	      8364	syntax.c	FUNCTION_120	CALL_6
0x1045f	          0x4889d0	                            mov rax, rdx	      8364	syntax.c	FUNCTION_120	CALL_6
0x10462	        0x48c1e003	                              shl rax, 3	      8364	syntax.c	FUNCTION_120	CALL_6
0x10466	          0x4801d0	                            add rax, rdx	      8364	syntax.c	FUNCTION_120	CALL_6
0x10469	          0x4801c0	                            add rax, rax	      8364	syntax.c	FUNCTION_120	CALL_6
0x1046c	          0x4801d0	                            add rax, rdx	      8364	syntax.c	FUNCTION_120	CALL_6
0x1046f	        0x48c1e003	                              shl rax, 3	      8364	syntax.c	FUNCTION_120	CALL_6
0x10473	          0x4801c8	                            add rax, rcx	      8364	syntax.c	FUNCTION_120	CALL_6
0x10476	    0x48c740200000	               mov qword [rax + 0x20], 0	      8364	syntax.c	FUNCTION_120	CALL_6
0x1047e	    0x488b0d000000	            mov rcx, qword [0x040104c5] 	      8365	syntax.c	FUNCTION_120	CALL_7
0x10485	          0x8b45fc	                mov eax, dword [rbp - 4]	      8365	syntax.c	FUNCTION_120	CALL_7
0x10488	          0x4863d0	                         movsxd rdx, eax	      8365	syntax.c	FUNCTION_120	CALL_7
0x1048b	          0x4889d0	                            mov rax, rdx	      8365	syntax.c	FUNCTION_120	CALL_7
0x1048e	        0x48c1e003	                              shl rax, 3	      8365	syntax.c	FUNCTION_120	CALL_7
0x10492	          0x4801d0	                            add rax, rdx	      8365	syntax.c	FUNCTION_120	CALL_7
0x10495	          0x4801c0	                            add rax, rax	      8365	syntax.c	FUNCTION_120	CALL_7
0x10498	          0x4801d0	                            add rax, rdx	      8365	syntax.c	FUNCTION_120	CALL_7
0x1049b	        0x48c1e003	                              shl rax, 3	      8365	syntax.c	FUNCTION_120	CALL_7
0x1049f	          0x4801c8	                            add rax, rcx	      8365	syntax.c	FUNCTION_120	CALL_7
0x104a2	    0xc74028000000	               mov dword [rax + 0x28], 0	      8365	syntax.c	FUNCTION_120	CALL_7
0x104a9	    0x488b0d000000	            mov rcx, qword [0x040104f0] 	      8366	syntax.c	FUNCTION_120	CALL_8
0x104b0	          0x8b45fc	                mov eax, dword [rbp - 4]	      8366	syntax.c	FUNCTION_120	CALL_8
0x104b3	          0x4863d0	                         movsxd rdx, eax	      8366	syntax.c	FUNCTION_120	CALL_8
0x104b6	          0x4889d0	                            mov rax, rdx	      8366	syntax.c	FUNCTION_120	CALL_8
0x104b9	        0x48c1e003	                              shl rax, 3	      8366	syntax.c	FUNCTION_120	CALL_8
0x104bd	          0x4801d0	                            add rax, rdx	      8366	syntax.c	FUNCTION_120	CALL_8
0x104c0	          0x4801c0	                            add rax, rax	      8366	syntax.c	FUNCTION_120	CALL_8
0x104c3	          0x4801d0	                            add rax, rdx	      8366	syntax.c	FUNCTION_120	CALL_8
0x104c6	        0x48c1e003	                              shl rax, 3	      8366	syntax.c	FUNCTION_120	CALL_8
0x104ca	          0x4801c8	                            add rax, rcx	      8366	syntax.c	FUNCTION_120	CALL_8
0x104cd	    0xc7402c000000	               mov dword [rax + 0x2c], 0	      8366	syntax.c	FUNCTION_120	CALL_8
0x104d4	    0x488b0d000000	            mov rcx, qword [0x0401051b] 	      8367	syntax.c	FUNCTION_120	CALL_9
0x104db	          0x8b45fc	                mov eax, dword [rbp - 4]	      8367	syntax.c	FUNCTION_120	CALL_9
0x104de	          0x4863d0	                         movsxd rdx, eax	      8367	syntax.c	FUNCTION_120	CALL_9
0x104e1	          0x4889d0	                            mov rax, rdx	      8367	syntax.c	FUNCTION_120	CALL_9
0x104e4	        0x48c1e003	                              shl rax, 3	      8367	syntax.c	FUNCTION_120	CALL_9
0x104e8	          0x4801d0	                            add rax, rdx	      8367	syntax.c	FUNCTION_120	CALL_9
0x104eb	          0x4801c0	                            add rax, rax	      8367	syntax.c	FUNCTION_120	CALL_9
0x104ee	          0x4801d0	                            add rax, rdx	      8367	syntax.c	FUNCTION_120	CALL_9
0x104f1	        0x48c1e003	                              shl rax, 3	      8367	syntax.c	FUNCTION_120	CALL_9
0x104f5	          0x4801c8	                            add rax, rcx	      8367	syntax.c	FUNCTION_120	CALL_9
0x104f8	    0xc74030000000	               mov dword [rax + 0x30], 0	      8367	syntax.c	FUNCTION_120	CALL_9
0x104ff	    0x488b0d000000	            mov rcx, qword [0x04010546] 	      8368	syntax.c	FUNCTION_120	CALL_10
0x10506	          0x8b45fc	                mov eax, dword [rbp - 4]	      8368	syntax.c	FUNCTION_120	CALL_10
0x10509	          0x4863d0	                         movsxd rdx, eax	      8368	syntax.c	FUNCTION_120	CALL_10
0x1050c	          0x4889d0	                            mov rax, rdx	      8368	syntax.c	FUNCTION_120	CALL_10
0x1050f	        0x48c1e003	                              shl rax, 3	      8368	syntax.c	FUNCTION_120	CALL_10
0x10513	          0x4801d0	                            add rax, rdx	      8368	syntax.c	FUNCTION_120	CALL_10
0x10516	          0x4801c0	                            add rax, rax	      8368	syntax.c	FUNCTION_120	CALL_10
0x10519	          0x4801d0	                            add rax, rdx	      8368	syntax.c	FUNCTION_120	CALL_10
0x1051c	        0x48c1e003	                              shl rax, 3	      8368	syntax.c	FUNCTION_120	CALL_10
0x10520	          0x4801c8	                            add rax, rcx	      8368	syntax.c	FUNCTION_120	CALL_10
0x10523	    0xc74034000000	               mov dword [rax + 0x34], 0	      8368	syntax.c	FUNCTION_120	CALL_10
0x1052a	    0x488b0d000000	            mov rcx, qword [0x04010571] 	      8369	syntax.c	FUNCTION_120	CALL_11
0x10531	          0x8b45fc	                mov eax, dword [rbp - 4]	      8369	syntax.c	FUNCTION_120	CALL_11
0x10534	          0x4863d0	                         movsxd rdx, eax	      8369	syntax.c	FUNCTION_120	CALL_11
0x10537	          0x4889d0	                            mov rax, rdx	      8369	syntax.c	FUNCTION_120	CALL_11
0x1053a	        0x48c1e003	                              shl rax, 3	      8369	syntax.c	FUNCTION_120	CALL_11
0x1053e	          0x4801d0	                            add rax, rdx	      8369	syntax.c	FUNCTION_120	CALL_11
0x10541	          0x4801c0	                            add rax, rax	      8369	syntax.c	FUNCTION_120	CALL_11
0x10544	          0x4801d0	                            add rax, rdx	      8369	syntax.c	FUNCTION_120	CALL_11
0x10547	        0x48c1e003	                              shl rax, 3	      8369	syntax.c	FUNCTION_120	CALL_11
0x1054b	          0x4801c8	                            add rax, rcx	      8369	syntax.c	FUNCTION_120	CALL_11
0x1054e	    0xc74038000000	               mov dword [rax + 0x38], 0	      8369	syntax.c	FUNCTION_120	CALL_11
0x10555	    0x488b0d000000	            mov rcx, qword [0x0401059c] 	      8370	syntax.c	FUNCTION_120	CALL_12
0x1055c	          0x8b45fc	                mov eax, dword [rbp - 4]	      8370	syntax.c	FUNCTION_120	CALL_12
0x1055f	          0x4863d0	                         movsxd rdx, eax	      8370	syntax.c	FUNCTION_120	CALL_12
0x10562	          0x4889d0	                            mov rax, rdx	      8370	syntax.c	FUNCTION_120	CALL_12
0x10565	        0x48c1e003	                              shl rax, 3	      8370	syntax.c	FUNCTION_120	CALL_12
0x10569	          0x4801d0	                            add rax, rdx	      8370	syntax.c	FUNCTION_120	CALL_12
0x1056c	          0x4801c0	                            add rax, rax	      8370	syntax.c	FUNCTION_120	CALL_12
0x1056f	          0x4801d0	                            add rax, rdx	      8370	syntax.c	FUNCTION_120	CALL_12
0x10572	        0x48c1e003	                              shl rax, 3	      8370	syntax.c	FUNCTION_120	CALL_12
0x10576	          0x4801c8	                            add rax, rcx	      8370	syntax.c	FUNCTION_120	CALL_12
0x10579	    0xc7403c000000	               mov dword [rax + 0x3c], 0	      8370	syntax.c	FUNCTION_120	CALL_12
0x10580	    0x488b0d000000	            mov rcx, qword [0x040105c7] 	      8372	syntax.c	FUNCTION_120	CALL_13
0x10587	          0x8b45fc	                mov eax, dword [rbp - 4]	      8372	syntax.c	FUNCTION_120	CALL_13
0x1058a	          0x4863d0	                         movsxd rdx, eax	      8372	syntax.c	FUNCTION_120	CALL_13
0x1058d	          0x4889d0	                            mov rax, rdx	      8372	syntax.c	FUNCTION_120	CALL_13
0x10590	        0x48c1e003	                              shl rax, 3	      8372	syntax.c	FUNCTION_120	CALL_13
0x10594	          0x4801d0	                            add rax, rdx	      8372	syntax.c	FUNCTION_120	CALL_13
0x10597	          0x4801c0	                            add rax, rax	      8372	syntax.c	FUNCTION_120	CALL_13
0x1059a	          0x4801d0	                            add rax, rdx	      8372	syntax.c	FUNCTION_120	CALL_13
0x1059d	        0x48c1e003	                              shl rax, 3	      8372	syntax.c	FUNCTION_120	CALL_13
0x105a1	          0x4801c8	                            add rax, rcx	      8372	syntax.c	FUNCTION_120	CALL_13
0x105a4	    0xc7406c000000	               mov dword [rax + 0x6c], 0	      8372	syntax.c	FUNCTION_120	CALL_13
0x105ab	    0x488b0d000000	            mov rcx, qword [0x040105f2] 	      8373	syntax.c	FUNCTION_120	CALL_15
0x105b2	          0x8b45fc	                mov eax, dword [rbp - 4]	      8373	syntax.c	FUNCTION_120	CALL_15
0x105b5	          0x4863d0	                         movsxd rdx, eax	      8373	syntax.c	FUNCTION_120	CALL_15
0x105b8	          0x4889d0	                            mov rax, rdx	      8373	syntax.c	FUNCTION_120	CALL_15
0x105bb	        0x48c1e003	                              shl rax, 3	      8373	syntax.c	FUNCTION_120	CALL_15
0x105bf	          0x4801d0	                            add rax, rdx	      8373	syntax.c	FUNCTION_120	CALL_15
0x105c2	          0x4801c0	                            add rax, rax	      8373	syntax.c	FUNCTION_120	CALL_15
0x105c5	          0x4801d0	                            add rax, rdx	      8373	syntax.c	FUNCTION_120	CALL_15
0x105c8	        0x48c1e003	                              shl rax, 3	      8373	syntax.c	FUNCTION_120	CALL_15
0x105cc	          0x4801c8	                            add rax, rcx	      8373	syntax.c	FUNCTION_120	CALL_15
0x105cf	        0x488b4070	            mov rax, qword [rax + 0x70] 	      8373	syntax.c	FUNCTION_120	CALL_15
0x105d3	          0x4885c0	                           test rax, rax	      8373	syntax.c	FUNCTION_120	CALL_15
0x105d6	            0x745c	                            je 0x4010674	      8373	syntax.c	FUNCTION_120	CALL_15
0x105d8	    0x488b0d000000	            mov rcx, qword [0x0401061f] 	      8373	syntax.c	FUNCTION_120	CALL_15
0x105df	          0x8b45fc	                mov eax, dword [rbp - 4]	      8373	syntax.c	FUNCTION_120	CALL_15
0x105e2	          0x4863d0	                         movsxd rdx, eax	      8373	syntax.c	FUNCTION_120	CALL_15
0x105e5	          0x4889d0	                            mov rax, rdx	      8373	syntax.c	FUNCTION_120	CALL_15
0x105e8	        0x48c1e003	                              shl rax, 3	      8373	syntax.c	FUNCTION_120	CALL_15
0x105ec	          0x4801d0	                            add rax, rdx	      8373	syntax.c	FUNCTION_120	CALL_15
0x105ef	          0x4801c0	                            add rax, rax	      8373	syntax.c	FUNCTION_120	CALL_15
0x105f2	          0x4801d0	                            add rax, rdx	      8373	syntax.c	FUNCTION_120	CALL_15
0x105f5	        0x48c1e003	                              shl rax, 3	      8373	syntax.c	FUNCTION_120	CALL_15
0x105f9	          0x4801c8	                            add rax, rcx	      8373	syntax.c	FUNCTION_120	CALL_15
0x105fc	        0x488b4070	            mov rax, qword [rax + 0x70] 	      8373	syntax.c	FUNCTION_120	CALL_15
0x10600	          0x4889c7	                            mov rdi, rax	      8373	syntax.c	FUNCTION_120	CALL_15
0x10603	      0xe800000000	                          call 0x4010648	      8373	syntax.c	FUNCTION_120	CALL_15
0x10608	    0x488b0d000000	            mov rcx, qword [0x0401064f] 	      8373	syntax.c	FUNCTION_120	CALL_15
0x1060f	          0x8b45fc	                mov eax, dword [rbp - 4]	      8373	syntax.c	FUNCTION_120	CALL_15
0x10612	          0x4863d0	                         movsxd rdx, eax	      8373	syntax.c	FUNCTION_120	CALL_15
0x10615	          0x4889d0	                            mov rax, rdx	      8373	syntax.c	FUNCTION_120	CALL_15
0x10618	        0x48c1e003	                              shl rax, 3	      8373	syntax.c	FUNCTION_120	CALL_15
0x1061c	          0x4801d0	                            add rax, rdx	      8373	syntax.c	FUNCTION_120	CALL_15
0x1061f	          0x4801c0	                            add rax, rax	      8373	syntax.c	FUNCTION_120	CALL_15
0x10622	          0x4801d0	                            add rax, rdx	      8373	syntax.c	FUNCTION_120	CALL_15
0x10625	        0x48c1e003	                              shl rax, 3	      8373	syntax.c	FUNCTION_120	CALL_15
0x10629	          0x4801c8	                            add rax, rcx	      8373	syntax.c	FUNCTION_120	CALL_15
0x1062c	    0x48c740700000	               mov qword [rax + 0x70], 0	      8373	syntax.c	FUNCTION_120	CALL_15
0x10634	    0x488b0d000000	            mov rcx, qword [0x0401067b] 	      8374	syntax.c	FUNCTION_120	CALL_17
0x1063b	          0x8b45fc	                mov eax, dword [rbp - 4]	      8374	syntax.c	FUNCTION_120	CALL_17
0x1063e	          0x4863d0	                         movsxd rdx, eax	      8374	syntax.c	FUNCTION_120	CALL_17
0x10641	          0x4889d0	                            mov rax, rdx	      8374	syntax.c	FUNCTION_120	CALL_17
0x10644	        0x48c1e003	                              shl rax, 3	      8374	syntax.c	FUNCTION_120	CALL_17
0x10648	          0x4801d0	                            add rax, rdx	      8374	syntax.c	FUNCTION_120	CALL_17
0x1064b	          0x4801c0	                            add rax, rax	      8374	syntax.c	FUNCTION_120	CALL_17
0x1064e	          0x4801d0	                            add rax, rdx	      8374	syntax.c	FUNCTION_120	CALL_17
0x10651	        0x48c1e003	                              shl rax, 3	      8374	syntax.c	FUNCTION_120	CALL_17
0x10655	          0x4801c8	                            add rax, rcx	      8374	syntax.c	FUNCTION_120	CALL_17
0x10658	        0x488b4078	            mov rax, qword [rax + 0x78] 	      8374	syntax.c	FUNCTION_120	CALL_17
0x1065c	          0x4885c0	                           test rax, rax	      8374	syntax.c	FUNCTION_120	CALL_17
0x1065f	            0x745c	                            je 0x40106fd	      8374	syntax.c	FUNCTION_120	CALL_17
0x10661	    0x488b0d000000	            mov rcx, qword [0x040106a8] 	      8374	syntax.c	FUNCTION_120	CALL_17
0x10668	          0x8b45fc	                mov eax, dword [rbp - 4]	      8374	syntax.c	FUNCTION_120	CALL_17
0x1066b	          0x4863d0	                         movsxd rdx, eax	      8374	syntax.c	FUNCTION_120	CALL_17
0x1066e	          0x4889d0	                            mov rax, rdx	      8374	syntax.c	FUNCTION_120	CALL_17
0x10671	        0x48c1e003	                              shl rax, 3	      8374	syntax.c	FUNCTION_120	CALL_17
0x10675	          0x4801d0	                            add rax, rdx	      8374	syntax.c	FUNCTION_120	CALL_17
0x10678	          0x4801c0	                            add rax, rax	      8374	syntax.c	FUNCTION_120	CALL_17
0x1067b	          0x4801d0	                            add rax, rdx	      8374	syntax.c	FUNCTION_120	CALL_17
0x1067e	        0x48c1e003	                              shl rax, 3	      8374	syntax.c	FUNCTION_120	CALL_17
0x10682	          0x4801c8	                            add rax, rcx	      8374	syntax.c	FUNCTION_120	CALL_17
0x10685	        0x488b4078	            mov rax, qword [rax + 0x78] 	      8374	syntax.c	FUNCTION_120	CALL_17
0x10689	          0x4889c7	                            mov rdi, rax	      8374	syntax.c	FUNCTION_120	CALL_17
0x1068c	      0xe800000000	                          call 0x40106d1	      8374	syntax.c	FUNCTION_120	CALL_17
0x10691	    0x488b0d000000	            mov rcx, qword [0x040106d8] 	      8374	syntax.c	FUNCTION_120	CALL_17
0x10698	          0x8b45fc	                mov eax, dword [rbp - 4]	      8374	syntax.c	FUNCTION_120	CALL_17
0x1069b	          0x4863d0	                         movsxd rdx, eax	      8374	syntax.c	FUNCTION_120	CALL_17
0x1069e	          0x4889d0	                            mov rax, rdx	      8374	syntax.c	FUNCTION_120	CALL_17
0x106a1	        0x48c1e003	                              shl rax, 3	      8374	syntax.c	FUNCTION_120	CALL_17
0x106a5	          0x4801d0	                            add rax, rdx	      8374	syntax.c	FUNCTION_120	CALL_17
0x106a8	          0x4801c0	                            add rax, rax	      8374	syntax.c	FUNCTION_120	CALL_17
0x106ab	          0x4801d0	                            add rax, rdx	      8374	syntax.c	FUNCTION_120	CALL_17
0x106ae	        0x48c1e003	                              shl rax, 3	      8374	syntax.c	FUNCTION_120	CALL_17
0x106b2	          0x4801c8	                            add rax, rcx	      8374	syntax.c	FUNCTION_120	CALL_17
0x106b5	    0x48c740780000	               mov qword [rax + 0x78], 0	      8374	syntax.c	FUNCTION_120	CALL_17
0x106bd	    0x488b0d000000	            mov rcx, qword [0x04010704] 	      8375	syntax.c	FUNCTION_120	CALL_19
0x106c4	          0x8b45fc	                mov eax, dword [rbp - 4]	      8375	syntax.c	FUNCTION_120	CALL_19
0x106c7	          0x4863d0	                         movsxd rdx, eax	      8375	syntax.c	FUNCTION_120	CALL_19
0x106ca	          0x4889d0	                            mov rax, rdx	      8375	syntax.c	FUNCTION_120	CALL_19
0x106cd	        0x48c1e003	                              shl rax, 3	      8375	syntax.c	FUNCTION_120	CALL_19
0x106d1	          0x4801d0	                            add rax, rdx	      8375	syntax.c	FUNCTION_120	CALL_19
0x106d4	          0x4801c0	                            add rax, rax	      8375	syntax.c	FUNCTION_120	CALL_19
0x106d7	          0x4801d0	                            add rax, rdx	      8375	syntax.c	FUNCTION_120	CALL_19
0x106da	        0x48c1e003	                              shl rax, 3	      8375	syntax.c	FUNCTION_120	CALL_19
0x106de	          0x4801c8	                            add rax, rcx	      8375	syntax.c	FUNCTION_120	CALL_19
0x106e1	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      8375	syntax.c	FUNCTION_120	CALL_19
0x106e8	          0x4885c0	                           test rax, rax	      8375	syntax.c	FUNCTION_120	CALL_19
0x106eb	            0x7462	                            je 0x401078f	      8375	syntax.c	FUNCTION_120	CALL_19
0x106ed	    0x488b0d000000	            mov rcx, qword [0x04010734] 	      8375	syntax.c	FUNCTION_120	CALL_19
0x106f4	          0x8b45fc	                mov eax, dword [rbp - 4]	      8375	syntax.c	FUNCTION_120	CALL_19
0x106f7	          0x4863d0	                         movsxd rdx, eax	      8375	syntax.c	FUNCTION_120	CALL_19
0x106fa	          0x4889d0	                            mov rax, rdx	      8375	syntax.c	FUNCTION_120	CALL_19
0x106fd	        0x48c1e003	                              shl rax, 3	      8375	syntax.c	FUNCTION_120	CALL_19
0x10701	          0x4801d0	                            add rax, rdx	      8375	syntax.c	FUNCTION_120	CALL_19
0x10704	          0x4801c0	                            add rax, rax	      8375	syntax.c	FUNCTION_120	CALL_19
0x10707	          0x4801d0	                            add rax, rdx	      8375	syntax.c	FUNCTION_120	CALL_19
0x1070a	        0x48c1e003	                              shl rax, 3	      8375	syntax.c	FUNCTION_120	CALL_19
0x1070e	          0x4801c8	                            add rax, rcx	      8375	syntax.c	FUNCTION_120	CALL_19
0x10711	    0x488b80800000	            mov rax, qword [rax + 0x80] 	      8375	syntax.c	FUNCTION_120	CALL_19
0x10718	          0x4889c7	                            mov rdi, rax	      8375	syntax.c	FUNCTION_120	CALL_19
0x1071b	      0xe800000000	                          call 0x4010760	      8375	syntax.c	FUNCTION_120	CALL_19
0x10720	    0x488b0d000000	            mov rcx, qword [0x04010767] 	      8375	syntax.c	FUNCTION_120	CALL_19
0x10727	          0x8b45fc	                mov eax, dword [rbp - 4]	      8375	syntax.c	FUNCTION_120	CALL_19
0x1072a	          0x4863d0	                         movsxd rdx, eax	      8375	syntax.c	FUNCTION_120	CALL_19
0x1072d	          0x4889d0	                            mov rax, rdx	      8375	syntax.c	FUNCTION_120	CALL_19
0x10730	        0x48c1e003	                              shl rax, 3	      8375	syntax.c	FUNCTION_120	CALL_19
0x10734	          0x4801d0	                            add rax, rdx	      8375	syntax.c	FUNCTION_120	CALL_19
0x10737	          0x4801c0	                            add rax, rax	      8375	syntax.c	FUNCTION_120	CALL_19
0x1073a	          0x4801d0	                            add rax, rdx	      8375	syntax.c	FUNCTION_120	CALL_19
0x1073d	        0x48c1e003	                              shl rax, 3	      8375	syntax.c	FUNCTION_120	CALL_19
0x10741	          0x4801c8	                            add rax, rcx	      8375	syntax.c	FUNCTION_120	CALL_19
0x10744	    0x48c780800000	               mov qword [rax + 0x80], 0	      8375	syntax.c	FUNCTION_120	CALL_19
0x1074f	    0x488b0d000000	            mov rcx, qword [0x04010796] 	      8378	syntax.c	FUNCTION_120	CALL_20
0x10756	          0x8b45fc	                mov eax, dword [rbp - 4]	      8378	syntax.c	FUNCTION_120	CALL_20
0x10759	          0x4863d0	                         movsxd rdx, eax	      8378	syntax.c	FUNCTION_120	CALL_20
0x1075c	          0x4889d0	                            mov rax, rdx	      8378	syntax.c	FUNCTION_120	CALL_20
0x1075f	        0x48c1e003	                              shl rax, 3	      8378	syntax.c	FUNCTION_120	CALL_20
0x10763	          0x4801d0	                            add rax, rdx	      8378	syntax.c	FUNCTION_120	CALL_20
0x10766	          0x4801c0	                            add rax, rax	      8378	syntax.c	FUNCTION_120	CALL_20
0x10769	          0x4801d0	                            add rax, rdx	      8378	syntax.c	FUNCTION_120	CALL_20
0x1076c	        0x48c1e003	                              shl rax, 3	      8378	syntax.c	FUNCTION_120	CALL_20
0x10770	          0x4801c8	                            add rax, rcx	      8378	syntax.c	FUNCTION_120	CALL_20
0x10773	    0x48c7404099d4	mov qword [rax + 0x40], 0xffffffffffffd499	      8378	syntax.c	FUNCTION_120	CALL_20
0x1077b	    0x488b0d000000	            mov rcx, qword [0x040107c2] 	      8379	syntax.c	FUNCTION_120	CALL_21
0x10782	          0x8b45fc	                mov eax, dword [rbp - 4]	      8379	syntax.c	FUNCTION_120	CALL_21
0x10785	          0x4863d0	                         movsxd rdx, eax	      8379	syntax.c	FUNCTION_120	CALL_21
0x10788	          0x4889d0	                            mov rax, rdx	      8379	syntax.c	FUNCTION_120	CALL_21
0x1078b	        0x48c1e003	                              shl rax, 3	      8379	syntax.c	FUNCTION_120	CALL_21
0x1078f	          0x4801d0	                            add rax, rdx	      8379	syntax.c	FUNCTION_120	CALL_21
0x10792	          0x4801c0	                            add rax, rax	      8379	syntax.c	FUNCTION_120	CALL_21
0x10795	          0x4801d0	                            add rax, rdx	      8379	syntax.c	FUNCTION_120	CALL_21
0x10798	        0x48c1e003	                              shl rax, 3	      8379	syntax.c	FUNCTION_120	CALL_21
0x1079c	          0x4801c8	                            add rax, rcx	      8379	syntax.c	FUNCTION_120	CALL_21
0x1079f	    0x48c7404899d4	mov qword [rax + 0x48], 0xffffffffffffd499	      8379	syntax.c	FUNCTION_120	CALL_21
0x107a7	    0x488b0d000000	            mov rcx, qword [0x040107ee] 	      8382	syntax.c	FUNCTION_120	CALL_22
0x107ae	          0x8b45fc	                mov eax, dword [rbp - 4]	      8382	syntax.c	FUNCTION_120	CALL_22
0x107b1	          0x4863d0	                         movsxd rdx, eax	      8382	syntax.c	FUNCTION_120	CALL_22
0x107b4	          0x4889d0	                            mov rax, rdx	      8382	syntax.c	FUNCTION_120	CALL_22
0x107b7	        0x48c1e003	                              shl rax, 3	      8382	syntax.c	FUNCTION_120	CALL_22
0x107bb	          0x4801d0	                            add rax, rdx	      8382	syntax.c	FUNCTION_120	CALL_22
0x107be	          0x4801c0	                            add rax, rax	      8382	syntax.c	FUNCTION_120	CALL_22
0x107c1	          0x4801d0	                            add rax, rdx	      8382	syntax.c	FUNCTION_120	CALL_22
0x107c4	        0x48c1e003	                              shl rax, 3	      8382	syntax.c	FUNCTION_120	CALL_22
0x107c8	          0x4801c8	                            add rax, rcx	      8382	syntax.c	FUNCTION_120	CALL_22
0x107cb	    0x48c7405099d4	mov qword [rax + 0x50], 0xffffffffffffd499	      8382	syntax.c	FUNCTION_120	CALL_22
0x107d3	    0x488b0d000000	            mov rcx, qword [0x0401081a] 	      8383	syntax.c	FUNCTION_120	CALL_24
0x107da	          0x8b45fc	                mov eax, dword [rbp - 4]	      8383	syntax.c	FUNCTION_120	CALL_24
0x107dd	          0x4863d0	                         movsxd rdx, eax	      8383	syntax.c	FUNCTION_120	CALL_24
0x107e0	          0x4889d0	                            mov rax, rdx	      8383	syntax.c	FUNCTION_120	CALL_24
0x107e3	        0x48c1e003	                              shl rax, 3	      8383	syntax.c	FUNCTION_120	CALL_24
0x107e7	          0x4801d0	                            add rax, rdx	      8383	syntax.c	FUNCTION_120	CALL_24
0x107ea	          0x4801c0	                            add rax, rax	      8383	syntax.c	FUNCTION_120	CALL_24
0x107ed	          0x4801d0	                            add rax, rdx	      8383	syntax.c	FUNCTION_120	CALL_24
0x107f0	        0x48c1e003	                              shl rax, 3	      8383	syntax.c	FUNCTION_120	CALL_24
0x107f4	          0x4801c8	                            add rax, rcx	      8383	syntax.c	FUNCTION_120	CALL_24
0x107f7	        0x488b4058	            mov rax, qword [rax + 0x58] 	      8383	syntax.c	FUNCTION_120	CALL_24
0x107fb	          0x4889c7	                            mov rdi, rax	      8383	syntax.c	FUNCTION_120	CALL_24
0x107fe	      0xe800000000	                          call 0x4010843	      8383	syntax.c	FUNCTION_120	CALL_24
0x10803	    0x488b0d000000	            mov rcx, qword [0x0401084a] 	      8384	syntax.c	FUNCTION_120	CALL_25
0x1080a	          0x8b45fc	                mov eax, dword [rbp - 4]	      8384	syntax.c	FUNCTION_120	CALL_25
0x1080d	          0x4863d0	                         movsxd rdx, eax	      8384	syntax.c	FUNCTION_120	CALL_25
0x10810	          0x4889d0	                            mov rax, rdx	      8384	syntax.c	FUNCTION_120	CALL_25
0x10813	        0x48c1e003	                              shl rax, 3	      8384	syntax.c	FUNCTION_120	CALL_25
0x10817	          0x4801d0	                            add rax, rdx	      8384	syntax.c	FUNCTION_120	CALL_25
0x1081a	          0x4801c0	                            add rax, rax	      8384	syntax.c	FUNCTION_120	CALL_25
0x1081d	          0x4801d0	                            add rax, rdx	      8384	syntax.c	FUNCTION_120	CALL_25
0x10820	        0x48c1e003	                              shl rax, 3	      8384	syntax.c	FUNCTION_120	CALL_25
0x10824	          0x4801c8	                            add rax, rcx	      8384	syntax.c	FUNCTION_120	CALL_25
0x10827	    0x48c740580000	               mov qword [rax + 0x58], 0	      8384	syntax.c	FUNCTION_120	CALL_25
0x1082f	    0x488b0d000000	            mov rcx, qword [0x04010876] 	      8389	syntax.c	FUNCTION_120	CALL_30
0x10836	          0x8b45fc	                mov eax, dword [rbp - 4]	      8389	syntax.c	FUNCTION_120	CALL_30
0x10839	          0x4863d0	                         movsxd rdx, eax	      8389	syntax.c	FUNCTION_120	CALL_30
0x1083c	          0x4889d0	                            mov rax, rdx	      8389	syntax.c	FUNCTION_120	CALL_30
0x1083f	        0x48c1e003	                              shl rax, 3	      8389	syntax.c	FUNCTION_120	CALL_30
0x10843	          0x4801d0	                            add rax, rdx	      8389	syntax.c	FUNCTION_120	CALL_30
0x10846	          0x4801c0	                            add rax, rax	      8389	syntax.c	FUNCTION_120	CALL_30
0x10849	          0x4801d0	                            add rax, rdx	      8389	syntax.c	FUNCTION_120	CALL_30
0x1084c	        0x48c1e003	                              shl rax, 3	      8389	syntax.c	FUNCTION_120	CALL_30
0x10850	          0x4801c8	                            add rax, rcx	      8389	syntax.c	FUNCTION_120	CALL_30
0x10853	        0x488b4060	            mov rax, qword [rax + 0x60] 	      8389	syntax.c	FUNCTION_120	CALL_30
0x10857	          0x4885c0	                           test rax, rax	      8389	syntax.c	FUNCTION_120	CALL_30
0x1085a	            0x745c	                            je 0x40108f8	      8389	syntax.c	FUNCTION_120	CALL_30
0x1085c	    0x488b0d000000	            mov rcx, qword [0x040108a3] 	      8389	syntax.c	FUNCTION_120	CALL_30
0x10863	          0x8b45fc	                mov eax, dword [rbp - 4]	      8389	syntax.c	FUNCTION_120	CALL_30
0x10866	          0x4863d0	                         movsxd rdx, eax	      8389	syntax.c	FUNCTION_120	CALL_30
0x10869	          0x4889d0	                            mov rax, rdx	      8389	syntax.c	FUNCTION_120	CALL_30
0x1086c	        0x48c1e003	                              shl rax, 3	      8389	syntax.c	FUNCTION_120	CALL_30
0x10870	          0x4801d0	                            add rax, rdx	      8389	syntax.c	FUNCTION_120	CALL_30
0x10873	          0x4801c0	                            add rax, rax	      8389	syntax.c	FUNCTION_120	CALL_30
0x10876	          0x4801d0	                            add rax, rdx	      8389	syntax.c	FUNCTION_120	CALL_30
0x10879	        0x48c1e003	                              shl rax, 3	      8389	syntax.c	FUNCTION_120	CALL_30
0x1087d	          0x4801c8	                            add rax, rcx	      8389	syntax.c	FUNCTION_120	CALL_30
0x10880	        0x488b4060	            mov rax, qword [rax + 0x60] 	      8389	syntax.c	FUNCTION_120	CALL_30
0x10884	          0x4889c7	                            mov rdi, rax	      8389	syntax.c	FUNCTION_120	CALL_30
0x10887	      0xe800000000	                          call 0x40108cc	      8389	syntax.c	FUNCTION_120	CALL_30
0x1088c	    0x488b0d000000	            mov rcx, qword [0x040108d3] 	      8389	syntax.c	FUNCTION_120	CALL_30
0x10893	          0x8b45fc	                mov eax, dword [rbp - 4]	      8389	syntax.c	FUNCTION_120	CALL_30
0x10896	          0x4863d0	                         movsxd rdx, eax	      8389	syntax.c	FUNCTION_120	CALL_30
0x10899	          0x4889d0	                            mov rax, rdx	      8389	syntax.c	FUNCTION_120	CALL_30
0x1089c	        0x48c1e003	                              shl rax, 3	      8389	syntax.c	FUNCTION_120	CALL_30
0x108a0	          0x4801d0	                            add rax, rdx	      8389	syntax.c	FUNCTION_120	CALL_30
0x108a3	          0x4801c0	                            add rax, rax	      8389	syntax.c	FUNCTION_120	CALL_30
0x108a6	          0x4801d0	                            add rax, rdx	      8389	syntax.c	FUNCTION_120	CALL_30
0x108a9	        0x48c1e003	                              shl rax, 3	      8389	syntax.c	FUNCTION_120	CALL_30
0x108ad	          0x4801c8	                            add rax, rcx	      8389	syntax.c	FUNCTION_120	CALL_30
0x108b0	    0x48c740600000	               mov qword [rax + 0x60], 0	      8389	syntax.c	FUNCTION_120	CALL_30
0x108b8	    0x488b0d000000	            mov rcx, qword [0x040108ff] 	      8390	syntax.c	FUNCTION_120	CALL_31
0x108bf	          0x8b45fc	                mov eax, dword [rbp - 4]	      8390	syntax.c	FUNCTION_120	CALL_31
0x108c2	          0x4863d0	                         movsxd rdx, eax	      8390	syntax.c	FUNCTION_120	CALL_31
0x108c5	          0x4889d0	                            mov rax, rdx	      8390	syntax.c	FUNCTION_120	CALL_31
0x108c8	        0x48c1e003	                              shl rax, 3	      8390	syntax.c	FUNCTION_120	CALL_31
0x108cc	          0x4801d0	                            add rax, rdx	      8390	syntax.c	FUNCTION_120	CALL_31
0x108cf	          0x4801c0	                            add rax, rax	      8390	syntax.c	FUNCTION_120	CALL_31
0x108d2	          0x4801d0	                            add rax, rdx	      8390	syntax.c	FUNCTION_120	CALL_31
0x108d5	        0x48c1e003	                              shl rax, 3	      8390	syntax.c	FUNCTION_120	CALL_31
0x108d9	          0x4801c8	                            add rax, rcx	      8390	syntax.c	FUNCTION_120	CALL_31
0x108dc	    0xc74068000000	               mov dword [rax + 0x68], 0	      8390	syntax.c	FUNCTION_120	CALL_31
0x108e3	    0x488b0d000000	            mov rcx, qword [0x0401092a] 	      8395	syntax.c	FUNCTION_120	IF_1	CALL_32
0x108ea	          0x8b45fc	                mov eax, dword [rbp - 4]	      8395	syntax.c	FUNCTION_120	IF_1	CALL_32
0x108ed	          0x4863d0	                         movsxd rdx, eax	      8395	syntax.c	FUNCTION_120	IF_1	CALL_32
0x108f0	          0x4889d0	                            mov rax, rdx	      8395	syntax.c	FUNCTION_120	IF_1	CALL_32
0x108f3	        0x48c1e003	                              shl rax, 3	      8395	syntax.c	FUNCTION_120	IF_1	CALL_32
0x108f7	          0x4801d0	                            add rax, rdx	      8395	syntax.c	FUNCTION_120	IF_1	CALL_32
0x108fa	          0x4801c0	                            add rax, rax	      8395	syntax.c	FUNCTION_120	IF_1	CALL_32
0x108fd	          0x4801d0	                            add rax, rdx	      8395	syntax.c	FUNCTION_120	IF_1	CALL_32
0x10900	        0x48c1e003	                              shl rax, 3	      8395	syntax.c	FUNCTION_120	IF_1	CALL_32
0x10904	          0x4801c8	                            add rax, rcx	      8395	syntax.c	FUNCTION_120	IF_1	CALL_32
0x10907	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      8395	syntax.c	FUNCTION_120	IF_1	CALL_32
0x1090d	            0x85c0	                           test eax, eax	      8395	syntax.c	FUNCTION_120	IF_1	CALL_32
0x1090f	            0x752e	                           jne 0x401097f	      8395	syntax.c	FUNCTION_120	IF_1	CALL_32
0x10911	    0x488b0d000000	            mov rcx, qword [0x04010958] 	      8396	syntax.c	FUNCTION_120	CALL_33
0x10918	          0x8b45fc	                mov eax, dword [rbp - 4]	      8396	syntax.c	FUNCTION_120	CALL_33
0x1091b	          0x4863d0	                         movsxd rdx, eax	      8396	syntax.c	FUNCTION_120	CALL_33
0x1091e	          0x4889d0	                            mov rax, rdx	      8396	syntax.c	FUNCTION_120	CALL_33
0x10921	        0x48c1e003	                              shl rax, 3	      8396	syntax.c	FUNCTION_120	CALL_33
0x10925	          0x4801d0	                            add rax, rdx	      8396	syntax.c	FUNCTION_120	CALL_33
0x10928	          0x4801c0	                            add rax, rax	      8396	syntax.c	FUNCTION_120	CALL_33
0x1092b	          0x4801d0	                            add rax, rdx	      8396	syntax.c	FUNCTION_120	CALL_33
0x1092e	        0x48c1e003	                              shl rax, 3	      8396	syntax.c	FUNCTION_120	CALL_33
0x10932	          0x4801c8	                            add rax, rcx	      8396	syntax.c	FUNCTION_120	CALL_33
0x10935	    0xc78090000000	               mov dword [rax + 0x90], 0	      8396	syntax.c	FUNCTION_120	CALL_33
0x1093f	              0x90	                                     nop	      8398	syntax.c	FUNCTION_120
0x10940	              0xc9	                                   leave	      8398	syntax.c	FUNCTION_120
0x10941	              0xc3	                                     ret	      8398	syntax.c	FUNCTION_120
syn_add_cluster	FOR,0:DO,0:IF,5:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,13	128
0xaa75	              0x55	                                push rbp	      5600	syntax.c	FUNCTION_87
0xaa76	          0x4889e5	                            mov rbp, rsp	      5600	syntax.c	FUNCTION_87
0xaa79	              0x53	                                push rbx	      5600	syntax.c	FUNCTION_87
0xaa7a	        0x4883ec28	                           sub rsp, 0x28	      5600	syntax.c	FUNCTION_87
0xaa7e	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      5600	syntax.c	FUNCTION_87
0xaa82	    0x488b05000000	            mov rax, qword [0x0400aac9] 	      5606	syntax.c	FUNCTION_87	IF_1
0xaa89	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5606	syntax.c	FUNCTION_87	IF_1
0xaa8d	    0x488b80880200	           mov rax, qword [rax + 0x288] 	      5606	syntax.c	FUNCTION_87	IF_1
0xaa94	          0x4885c0	                           test rax, rax	      5606	syntax.c	FUNCTION_87	IF_1
0xaa97	            0x752a	                           jne 0x400ab03	      5606	syntax.c	FUNCTION_87	IF_1
0xaa99	    0x488b05000000	            mov rax, qword [0x0400aae0] 	      5608	syntax.c	FUNCTION_87	IF_1
0xaaa0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5608	syntax.c	FUNCTION_87	IF_1
0xaaa4	    0xc78080020000	          mov dword [rax + 0x280], 0x18 	      5608	syntax.c	FUNCTION_87	IF_1
0xaaae	    0x488b05000000	            mov rax, qword [0x0400aaf5] 	      5609	syntax.c	FUNCTION_87	IF_1
0xaab5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5609	syntax.c	FUNCTION_87	IF_1
0xaab9	    0xc78084020000	            mov dword [rax + 0x284], 0xa	      5609	syntax.c	FUNCTION_87	IF_1
0xaac3	    0x488b05000000	            mov rax, qword [0x0400ab0a] 	      5612	syntax.c	FUNCTION_87
0xaaca	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5612	syntax.c	FUNCTION_87
0xaace	    0x8b8078020000	           mov eax, dword [rax + 0x278] 	      5612	syntax.c	FUNCTION_87
0xaad4	          0x8945ec	             mov dword [rbp - 0x14], eax	      5612	syntax.c	FUNCTION_87
0xaad7	    0x817dec262600	         cmp dword [rbp - 0x14], 0x2626 	      5613	syntax.c	FUNCTION_87	IF_2
0xaade	            0x7e28	                           jle 0x400ab48	      5613	syntax.c	FUNCTION_87	IF_2
0xaae0	      0xbf00000000	                              mov edi, 0	      5615	syntax.c	FUNCTION_87	IF_2	CALL_2
0xaae5	      0xe800000000	                          call 0x400ab2a	      5615	syntax.c	FUNCTION_87	IF_2	CALL_2
0xaaea	          0x4889c7	                            mov rdi, rax	      5615	syntax.c	FUNCTION_87	IF_2	CALL_2
0xaaed	      0xe800000000	                          call 0x400ab32	      5615	syntax.c	FUNCTION_87	IF_2	CALL_2
0xaaf2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5616	syntax.c	FUNCTION_87	IF_2	CALL_3
0xaaf6	          0x4889c7	                            mov rdi, rax	      5616	syntax.c	FUNCTION_87	IF_2	CALL_3
0xaaf9	      0xe800000000	                          call 0x400ab3e	      5616	syntax.c	FUNCTION_87	IF_2	CALL_3
0xaafe	      0xb800000000	                              mov eax, 0	      5617	syntax.c	FUNCTION_87	IF_2
0xab03	      0xe98b010000	                           jmp 0x400acd3	      5617	syntax.c	FUNCTION_87	IF_2
0xab08	    0x488b05000000	            mov rax, qword [0x0400ab4f] 	      5623	syntax.c	FUNCTION_87	IF_3	CALL_4
0xab0f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5623	syntax.c	FUNCTION_87	IF_3	CALL_4
0xab13	    0x480578020000	                          add rax, 0x278	      5623	syntax.c	FUNCTION_87	IF_3	CALL_4
0xab19	      0xbe01000000	                              mov esi, 1	      5623	syntax.c	FUNCTION_87	IF_3	CALL_4
0xab1e	          0x4889c7	                            mov rdi, rax	      5623	syntax.c	FUNCTION_87	IF_3	CALL_4
0xab21	      0xe800000000	                          call 0x400ab66	      5623	syntax.c	FUNCTION_87	IF_3	CALL_4
0xab26	            0x85c0	                           test eax, eax	      5623	syntax.c	FUNCTION_87	IF_3	CALL_4
0xab28	            0x7516	                           jne 0x400ab80	      5623	syntax.c	FUNCTION_87	IF_3	CALL_4
0xab2a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5625	syntax.c	FUNCTION_87	IF_3	CALL_5
0xab2e	          0x4889c7	                            mov rdi, rax	      5625	syntax.c	FUNCTION_87	IF_3	CALL_5
0xab31	      0xe800000000	                          call 0x400ab76	      5625	syntax.c	FUNCTION_87	IF_3	CALL_5
0xab36	      0xb800000000	                              mov eax, 0	      5626	syntax.c	FUNCTION_87	IF_3
0xab3b	      0xe953010000	                           jmp 0x400acd3	      5626	syntax.c	FUNCTION_87	IF_3
0xab40	    0x488b05000000	            mov rax, qword [0x0400ab87] 	      5629	syntax.c	FUNCTION_87	CALL_7
0xab47	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5629	syntax.c	FUNCTION_87	CALL_7
0xab4b	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      5629	syntax.c	FUNCTION_87	CALL_7
0xab52	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      5629	syntax.c	FUNCTION_87	CALL_7
0xab55	          0x4863d0	                         movsxd rdx, eax	      5629	syntax.c	FUNCTION_87	CALL_7
0xab58	          0x4889d0	                            mov rax, rdx	      5629	syntax.c	FUNCTION_87	CALL_7
0xab5b	          0x4801c0	                            add rax, rax	      5629	syntax.c	FUNCTION_87	CALL_7
0xab5e	          0x4801d0	                            add rax, rdx	      5629	syntax.c	FUNCTION_87	CALL_7
0xab61	        0x48c1e003	                              shl rax, 3	      5629	syntax.c	FUNCTION_87	CALL_7
0xab65	          0x4801c8	                            add rax, rcx	      5629	syntax.c	FUNCTION_87	CALL_7
0xab68	      0xba18000000	                           mov edx, 0x18	      5629	syntax.c	FUNCTION_87	CALL_7
0xab6d	      0xbe00000000	                              mov esi, 0	      5629	syntax.c	FUNCTION_87	CALL_7
0xab72	          0x4889c7	                            mov rdi, rax	      5629	syntax.c	FUNCTION_87	CALL_7
0xab75	      0xe800000000	                          call 0x400abba	      5629	syntax.c	FUNCTION_87	CALL_7
0xab7a	    0x488b05000000	            mov rax, qword [0x0400abc1] 	      5630	syntax.c	FUNCTION_87	CALL_8
0xab81	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5630	syntax.c	FUNCTION_87	CALL_8
0xab85	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      5630	syntax.c	FUNCTION_87	CALL_8
0xab8c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      5630	syntax.c	FUNCTION_87	CALL_8
0xab8f	          0x4863d0	                         movsxd rdx, eax	      5630	syntax.c	FUNCTION_87	CALL_8
0xab92	          0x4889d0	                            mov rax, rdx	      5630	syntax.c	FUNCTION_87	CALL_8
0xab95	          0x4801c0	                            add rax, rax	      5630	syntax.c	FUNCTION_87	CALL_8
0xab98	          0x4801d0	                            add rax, rdx	      5630	syntax.c	FUNCTION_87	CALL_8
0xab9b	        0x48c1e003	                              shl rax, 3	      5630	syntax.c	FUNCTION_87	CALL_8
0xab9f	        0x488d1401	                    lea rdx, [rcx + rax]	      5630	syntax.c	FUNCTION_87	CALL_8
0xaba3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5630	syntax.c	FUNCTION_87	CALL_8
0xaba7	          0x488902	                    mov qword [rdx], rax	      5630	syntax.c	FUNCTION_87	CALL_8
0xabaa	    0x488b05000000	            mov rax, qword [0x0400abf1] 	      5631	syntax.c	FUNCTION_87	CALL_10
0xabb1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5631	syntax.c	FUNCTION_87	CALL_10
0xabb5	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      5631	syntax.c	FUNCTION_87	CALL_10
0xabbc	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      5631	syntax.c	FUNCTION_87	CALL_10
0xabbf	          0x4863d0	                         movsxd rdx, eax	      5631	syntax.c	FUNCTION_87	CALL_10
0xabc2	          0x4889d0	                            mov rax, rdx	      5631	syntax.c	FUNCTION_87	CALL_10
0xabc5	          0x4801c0	                            add rax, rax	      5631	syntax.c	FUNCTION_87	CALL_10
0xabc8	          0x4801d0	                            add rax, rdx	      5631	syntax.c	FUNCTION_87	CALL_10
0xabcb	        0x48c1e003	                              shl rax, 3	      5631	syntax.c	FUNCTION_87	CALL_10
0xabcf	        0x488d1c01	                    lea rbx, [rcx + rax]	      5631	syntax.c	FUNCTION_87	CALL_10
0xabd3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5631	syntax.c	FUNCTION_87	CALL_10
0xabd7	          0x4889c7	                            mov rdi, rax	      5631	syntax.c	FUNCTION_87	CALL_10
0xabda	      0xe800000000	                          call 0x400ac1f	      5631	syntax.c	FUNCTION_87	CALL_10
0xabdf	        0x48894308	                mov qword [rbx + 8], rax	      5631	syntax.c	FUNCTION_87	CALL_10
0xabe3	    0x488b05000000	            mov rax, qword [0x0400ac2a] 	      5632	syntax.c	FUNCTION_87	CALL_11
0xabea	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5632	syntax.c	FUNCTION_87	CALL_11
0xabee	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      5632	syntax.c	FUNCTION_87	CALL_11
0xabf5	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      5632	syntax.c	FUNCTION_87	CALL_11
0xabf8	          0x4863d0	                         movsxd rdx, eax	      5632	syntax.c	FUNCTION_87	CALL_11
0xabfb	          0x4889d0	                            mov rax, rdx	      5632	syntax.c	FUNCTION_87	CALL_11
0xabfe	          0x4801c0	                            add rax, rax	      5632	syntax.c	FUNCTION_87	CALL_11
0xac01	          0x4801d0	                            add rax, rdx	      5632	syntax.c	FUNCTION_87	CALL_11
0xac04	        0x48c1e003	                              shl rax, 3	      5632	syntax.c	FUNCTION_87	CALL_11
0xac08	          0x4801c8	                            add rax, rcx	      5632	syntax.c	FUNCTION_87	CALL_11
0xac0b	    0x48c740100000	               mov qword [rax + 0x10], 0	      5632	syntax.c	FUNCTION_87	CALL_11
0xac13	    0x488b05000000	            mov rax, qword [0x0400ac5a] 	      5633	syntax.c	FUNCTION_87
0xac1a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5633	syntax.c	FUNCTION_87
0xac1e	    0x8b9078020000	           mov edx, dword [rax + 0x278] 	      5633	syntax.c	FUNCTION_87
0xac24	          0x83c201	                              add edx, 1	      5633	syntax.c	FUNCTION_87
0xac27	    0x899078020000	            mov dword [rax + 0x278], edx	      5633	syntax.c	FUNCTION_87
0xac2d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5635	syntax.c	FUNCTION_87	IF_4	CALL_12
0xac31	      0xbe00000000	                              mov esi, 0	      5635	syntax.c	FUNCTION_87	IF_4	CALL_12
0xac36	          0x4889c7	                            mov rdi, rax	      5635	syntax.c	FUNCTION_87	IF_4	CALL_12
0xac39	      0xe800000000	                          call 0x400ac7e	      5635	syntax.c	FUNCTION_87	IF_4	CALL_12
0xac3e	            0x85c0	                           test eax, eax	      5635	syntax.c	FUNCTION_87	IF_4	CALL_12
0xac40	            0x751a	                           jne 0x400ac9c	      5635	syntax.c	FUNCTION_87	IF_4	CALL_12
0xac42	    0x488b05000000	            mov rax, qword [0x0400ac89] 	      5636	syntax.c	FUNCTION_87	IF_4
0xac49	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5636	syntax.c	FUNCTION_87	IF_4
0xac4d	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      5636	syntax.c	FUNCTION_87	IF_4
0xac50	    0x81c2d8590000	                         add edx, 0x59d8	      5636	syntax.c	FUNCTION_87	IF_4
0xac56	    0x899090020000	            mov dword [rax + 0x290], edx	      5636	syntax.c	FUNCTION_87	IF_4
0xac5c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5637	syntax.c	FUNCTION_87	IF_5	CALL_13
0xac60	      0xbe00000000	                              mov esi, 0	      5637	syntax.c	FUNCTION_87	IF_5	CALL_13
0xac65	          0x4889c7	                            mov rdi, rax	      5637	syntax.c	FUNCTION_87	IF_5	CALL_13
0xac68	      0xe800000000	                          call 0x400acad	      5637	syntax.c	FUNCTION_87	IF_5	CALL_13
0xac6d	            0x85c0	                           test eax, eax	      5637	syntax.c	FUNCTION_87	IF_5	CALL_13
0xac6f	            0x751a	                           jne 0x400accb	      5637	syntax.c	FUNCTION_87	IF_5	CALL_13
0xac71	    0x488b05000000	            mov rax, qword [0x0400acb8] 	      5638	syntax.c	FUNCTION_87	IF_5
0xac78	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5638	syntax.c	FUNCTION_87	IF_5
0xac7c	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      5638	syntax.c	FUNCTION_87	IF_5
0xac7f	    0x81c2d8590000	                         add edx, 0x59d8	      5638	syntax.c	FUNCTION_87	IF_5
0xac85	    0x899094020000	            mov dword [rax + 0x294], edx	      5638	syntax.c	FUNCTION_87	IF_5
0xac8b	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      5640	syntax.c	FUNCTION_87
0xac8e	       0x5d8590000	                         add eax, 0x59d8	      5640	syntax.c	FUNCTION_87
0xac93	        0x4883c428	                           add rsp, 0x28	      5641	syntax.c	FUNCTION_87
0xac97	              0x5b	                                 pop rbx	      5641	syntax.c	FUNCTION_87
0xac98	              0x5d	                                 pop rbp	      5641	syntax.c	FUNCTION_87
0xac99	              0xc3	                                     ret	      5641	syntax.c	FUNCTION_87
init_highlight	FOR,2:DO,0:IF,10:SWITCH,0:functions,0:ELSE,4:WHILE,0:CALL,13	138
0xd3d6	              0x55	                                push rbp	      7116	syntax.c	FUNCTION_113
0xd3d7	          0x4889e5	                            mov rbp, rsp	      7116	syntax.c	FUNCTION_113
0xd3da	        0x4883ec30	                           sub rsp, 0x30	      7116	syntax.c	FUNCTION_113
0xd3de	          0x897ddc	             mov dword [rbp - 0x24], edi	      7116	syntax.c	FUNCTION_113
0xd3e1	          0x8975d8	             mov dword [rbp - 0x28], esi	      7116	syntax.c	FUNCTION_113
0xd3e4	      0xbf00000000	                              mov edi, 0	      7127	syntax.c	FUNCTION_113	CALL_1
0xd3e9	      0xe800000000	                          call 0x400d42e	      7127	syntax.c	FUNCTION_113	CALL_1
0xd3ee	        0x488945f0	             mov qword [rbp - 0x10], rax	      7127	syntax.c	FUNCTION_113	CALL_1
0xd3f2	      0x48837df000	               cmp qword [rbp - 0x10], 0	      7128	syntax.c	FUNCTION_113	IF_1
0xd3f7	            0x743c	                            je 0x400d475	      7128	syntax.c	FUNCTION_113	IF_1
0xd3f9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7132	syntax.c	FUNCTION_113	IF_1	CALL_2
0xd3fd	          0x4889c7	                            mov rdi, rax	      7132	syntax.c	FUNCTION_113	IF_1	CALL_2
0xd400	      0xe800000000	                          call 0x400d445	      7132	syntax.c	FUNCTION_113	IF_1	CALL_2
0xd405	        0x488945f8	                mov qword [rbp - 8], rax	      7132	syntax.c	FUNCTION_113	IF_1	CALL_2
0xd409	      0x48837df800	                  cmp qword [rbp - 8], 0	      7135	syntax.c	FUNCTION_113	IF_1	IF_2
0xd40e	            0x7425	                            je 0x400d475	      7135	syntax.c	FUNCTION_113	IF_1	IF_2
0xd410	        0x488b45f8	                mov rax, qword [rbp - 8]	      7137	syntax.c	FUNCTION_113	IF_1	IF_2	CALL_3
0xd414	          0x4889c7	                            mov rdi, rax	      7137	syntax.c	FUNCTION_113	IF_1	IF_2	CALL_3
0xd417	      0xe800000000	                          call 0x400d45c	      7137	syntax.c	FUNCTION_113	IF_1	IF_2	CALL_3
0xd41c	          0x8945e4	             mov dword [rbp - 0x1c], eax	      7137	syntax.c	FUNCTION_113	IF_1	IF_2	CALL_3
0xd41f	        0x488b45f8	                mov rax, qword [rbp - 8]	      7138	syntax.c	FUNCTION_113	IF_1	IF_2	CALL_4
0xd423	          0x4889c7	                            mov rdi, rax	      7138	syntax.c	FUNCTION_113	IF_1	IF_2	CALL_4
0xd426	      0xe800000000	                          call 0x400d46b	      7138	syntax.c	FUNCTION_113	IF_1	IF_2	CALL_4
0xd42b	        0x837de401	               cmp dword [rbp - 0x1c], 1	      7139	syntax.c	FUNCTION_113	IF_1	IF_2	IF_3
0xd42f	     0xf84b8010000	                            je 0x400d62d	      7139	syntax.c	FUNCTION_113	IF_1	IF_2	IF_3
0xd435	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      7149	syntax.c	FUNCTION_113	IF_4
0xd439	            0x7466	                            je 0x400d4e1	      7149	syntax.c	FUNCTION_113	IF_4
0xd43b	    0xc70500000000	               mov dword [0x0400d485], 1	      7151	syntax.c	FUNCTION_113	IF_4
0xd445	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      7152	syntax.c	FUNCTION_113	IF_4
0xd44d	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0xd454	            0xeb2d	                           jmp 0x400d4c3	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0xd456	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      7154	syntax.c	FUNCTION_113	IF_4	CALL_5
0xd459	            0x4898	                                    cdqe	      7154	syntax.c	FUNCTION_113	IF_4	CALL_5
0xd45b	    0x488d14c50000	                        lea rdx, [rax*8]	      7154	syntax.c	FUNCTION_113	IF_4	CALL_5
0xd463	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7154	syntax.c	FUNCTION_113	IF_4	CALL_5
0xd467	          0x4801d0	                            add rax, rdx	      7154	syntax.c	FUNCTION_113	IF_4	CALL_5
0xd46a	          0x488b00	                    mov rax, qword [rax]	      7154	syntax.c	FUNCTION_113	IF_4	CALL_5
0xd46d	          0x8b4dd8	             mov ecx, dword [rbp - 0x28]	      7154	syntax.c	FUNCTION_113	IF_4	CALL_5
0xd470	      0xba01000000	                              mov edx, 1	      7154	syntax.c	FUNCTION_113	IF_4	CALL_5
0xd475	            0x89ce	                            mov esi, ecx	      7154	syntax.c	FUNCTION_113	IF_4	CALL_5
0xd477	          0x4889c7	                            mov rdi, rax	      7154	syntax.c	FUNCTION_113	IF_4	CALL_5
0xd47a	      0xe800000000	                          call 0x400d4bf	      7154	syntax.c	FUNCTION_113	IF_4	CALL_5
0xd47f	        0x8345e001	               add dword [rbp - 0x20], 1	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0xd483	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0xd486	            0x4898	                                    cdqe	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0xd488	    0x488d14c50000	                        lea rdx, [rax*8]	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0xd490	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0xd494	          0x4801d0	                            add rax, rdx	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0xd497	          0x488b00	                    mov rax, qword [rax]	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0xd49a	          0x4885c0	                           test rax, rax	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0xd49d	            0x75b7	                           jne 0x400d496	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0xd49f	            0xeb0e	                           jmp 0x400d4ef	      7153	syntax.c	FUNCTION_113	IF_4	FOR_1
0xd4a1	    0x8b0500000000	            mov eax, dword [0x0400d4e7] 	      7156	syntax.c	FUNCTION_113	ELSE_1	IF_5
0xd4a7	            0x85c0	                           test eax, eax	      7156	syntax.c	FUNCTION_113	ELSE_1	IF_5
0xd4a9	     0xf8441010000	                            je 0x400d630	      7156	syntax.c	FUNCTION_113	ELSE_1	IF_5
0xd4af	    0x488b05000000	            mov rax, qword [0x0400d4f6] 	      7162	syntax.c	FUNCTION_113	IF_6
0xd4b6	           0xfb600	                   movzx eax, byte [rax]	      7162	syntax.c	FUNCTION_113	IF_6
0xd4b9	            0x3c6c	                            cmp al, 0x6c	      7162	syntax.c	FUNCTION_113	IF_6
0xd4bb	            0x750a	                           jne 0x400d507	      7162	syntax.c	FUNCTION_113	IF_6
0xd4bd	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      7163	syntax.c	FUNCTION_113	IF_6
0xd4c5	            0xeb08	                           jmp 0x400d50f	      7163	syntax.c	FUNCTION_113	IF_6
0xd4c7	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      7165	syntax.c	FUNCTION_113	ELSE_2
0xd4cf	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      7166	syntax.c	FUNCTION_113	FOR_2
0xd4d6	            0xeb2d	                           jmp 0x400d545	      7166	syntax.c	FUNCTION_113	FOR_2
0xd4d8	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      7167	syntax.c	FUNCTION_113	CALL_6
0xd4db	            0x4898	                                    cdqe	      7167	syntax.c	FUNCTION_113	CALL_6
0xd4dd	    0x488d14c50000	                        lea rdx, [rax*8]	      7167	syntax.c	FUNCTION_113	CALL_6
0xd4e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7167	syntax.c	FUNCTION_113	CALL_6
0xd4e9	          0x4801d0	                            add rax, rdx	      7167	syntax.c	FUNCTION_113	CALL_6
0xd4ec	          0x488b00	                    mov rax, qword [rax]	      7167	syntax.c	FUNCTION_113	CALL_6
0xd4ef	          0x8b4dd8	             mov ecx, dword [rbp - 0x28]	      7167	syntax.c	FUNCTION_113	CALL_6
0xd4f2	      0xba01000000	                              mov edx, 1	      7167	syntax.c	FUNCTION_113	CALL_6
0xd4f7	            0x89ce	                            mov esi, ecx	      7167	syntax.c	FUNCTION_113	CALL_6
0xd4f9	          0x4889c7	                            mov rdi, rax	      7167	syntax.c	FUNCTION_113	CALL_6
0xd4fc	      0xe800000000	                          call 0x400d541	      7167	syntax.c	FUNCTION_113	CALL_6
0xd501	        0x8345e001	               add dword [rbp - 0x20], 1	      7166	syntax.c	FUNCTION_113	FOR_2
0xd505	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      7166	syntax.c	FUNCTION_113	FOR_2
0xd508	            0x4898	                                    cdqe	      7166	syntax.c	FUNCTION_113	FOR_2
0xd50a	    0x488d14c50000	                        lea rdx, [rax*8]	      7166	syntax.c	FUNCTION_113	FOR_2
0xd512	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7166	syntax.c	FUNCTION_113	FOR_2
0xd516	          0x4801d0	                            add rax, rdx	      7166	syntax.c	FUNCTION_113	FOR_2
0xd519	          0x488b00	                    mov rax, qword [rax]	      7166	syntax.c	FUNCTION_113	FOR_2
0xd51c	          0x4885c0	                           test rax, rax	      7166	syntax.c	FUNCTION_113	FOR_2
0xd51f	            0x75b7	                           jne 0x400d518	      7166	syntax.c	FUNCTION_113	FOR_2
0xd521	    0x8b0500000000	            mov eax, dword [0x0400d567] 	      7174	syntax.c	FUNCTION_113	IF_7
0xd527	          0x83f808	                              cmp eax, 8	      7174	syntax.c	FUNCTION_113	IF_7
0xd52a	            0x7e2e	                           jle 0x400d59a	      7174	syntax.c	FUNCTION_113	IF_7
0xd52c	    0x488b05000000	            mov rax, qword [0x0400d573] 	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0xd533	           0xfb600	                   movzx eax, byte [rax]	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0xd536	            0x3c6c	                            cmp al, 0x6c	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0xd538	            0x7507	                           jne 0x400d581	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0xd53a	      0xb800000000	                              mov eax, 0	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0xd53f	            0xeb05	                           jmp 0x400d586	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0xd541	      0xb800000000	                              mov eax, 0	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0xd546	      0xba01000000	                              mov edx, 1	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0xd54b	      0xbe00000000	                              mov esi, 0	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0xd550	          0x4889c7	                            mov rdi, rax	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0xd553	      0xe800000000	                          call 0x400d598	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0xd558	            0xeb36	                           jmp 0x400d5d0	      7175	syntax.c	FUNCTION_113	IF_7	CALL_7
0xd55a	      0xba01000000	                              mov edx, 1	      7180	syntax.c	FUNCTION_113	ELSE_3	CALL_8
0xd55f	      0xbe00000000	                              mov esi, 0	      7180	syntax.c	FUNCTION_113	ELSE_3	CALL_8
0xd564	      0xbf00000000	                              mov edi, 0	      7180	syntax.c	FUNCTION_113	ELSE_3	CALL_8
0xd569	      0xe800000000	                          call 0x400d5ae	      7180	syntax.c	FUNCTION_113	ELSE_3	CALL_8
0xd56e	    0x488b05000000	            mov rax, qword [0x0400d5b5] 	      7182	syntax.c	FUNCTION_113	ELSE_3	IF_8
0xd575	           0xfb600	                   movzx eax, byte [rax]	      7182	syntax.c	FUNCTION_113	ELSE_3	IF_8
0xd578	            0x3c6c	                            cmp al, 0x6c	      7182	syntax.c	FUNCTION_113	ELSE_3	IF_8
0xd57a	            0x7514	                           jne 0x400d5d0	      7182	syntax.c	FUNCTION_113	ELSE_3	IF_8
0xd57c	      0xba01000000	                              mov edx, 1	      7183	syntax.c	FUNCTION_113	ELSE_3	CALL_9
0xd581	      0xbe00000000	                              mov esi, 0	      7183	syntax.c	FUNCTION_113	ELSE_3	CALL_9
0xd586	      0xbf00000000	                              mov edi, 0	      7183	syntax.c	FUNCTION_113	ELSE_3	CALL_9
0xd58b	      0xe800000000	                          call 0x400d5d0	      7183	syntax.c	FUNCTION_113	ELSE_3	CALL_9
0xd590	      0xbf00000000	                              mov edi, 0	      7190	syntax.c	FUNCTION_113	IF_9	CALL_10
0xd595	      0xe800000000	                          call 0x400d5da	      7190	syntax.c	FUNCTION_113	IF_9	CALL_10
0xd59a	          0x4885c0	                           test rax, rax	      7190	syntax.c	FUNCTION_113	IF_9	CALL_10
0xd59d	            0x7452	                            je 0x400d631	      7190	syntax.c	FUNCTION_113	IF_9	CALL_10
0xd59f	    0x8b0500000000	            mov eax, dword [0x0400d5e5] 	      7194	syntax.c	FUNCTION_113	IF_9	IF_10
0xd5a5	          0x83f804	                              cmp eax, 4	      7194	syntax.c	FUNCTION_113	IF_9	IF_10
0xd5a8	            0x7e14	                           jle 0x400d5fe	      7194	syntax.c	FUNCTION_113	IF_9	IF_10
0xd5aa	      0xbf00000000	                              mov edi, 0	      7195	syntax.c	FUNCTION_113	IF_9	CALL_12
0xd5af	      0xe800000000	                          call 0x400d5f4	      7195	syntax.c	FUNCTION_113	IF_9	CALL_12
0xd5b4	          0x4889c7	                            mov rdi, rax	      7195	syntax.c	FUNCTION_113	IF_9	CALL_12
0xd5b7	      0xe800000000	                          call 0x400d5fc	      7195	syntax.c	FUNCTION_113	IF_9	CALL_12
0xd5bc	            0xeb33	                           jmp 0x400d631	      7195	syntax.c	FUNCTION_113	IF_9	CALL_12
0xd5be	    0x8b0500000000	            mov eax, dword [0x0400d604] 	      7198	syntax.c	FUNCTION_113	IF_9	ELSE_4
0xd5c4	          0x83c001	                              add eax, 1	      7198	syntax.c	FUNCTION_113	IF_9	ELSE_4
0xd5c7	    0x890500000000	            mov dword [0x0400d60d], eax 	      7198	syntax.c	FUNCTION_113	IF_9	ELSE_4
0xd5cd	      0xbe01000000	                              mov esi, 1	      7199	syntax.c	FUNCTION_113	IF_9	ELSE_4	CALL_13
0xd5d2	      0xbf00000000	                              mov edi, 0	      7199	syntax.c	FUNCTION_113	IF_9	ELSE_4	CALL_13
0xd5d7	      0xe800000000	                          call 0x400d61c	      7199	syntax.c	FUNCTION_113	IF_9	ELSE_4	CALL_13
0xd5dc	    0x8b0500000000	            mov eax, dword [0x0400d622] 	      7200	syntax.c	FUNCTION_113	IF_9	ELSE_4
0xd5e2	          0x83e801	                              sub eax, 1	      7200	syntax.c	FUNCTION_113	IF_9	ELSE_4
0xd5e5	    0x890500000000	            mov dword [0x0400d62b], eax 	      7200	syntax.c	FUNCTION_113	IF_9	ELSE_4
0xd5eb	            0xeb04	                           jmp 0x400d631	      7200	syntax.c	FUNCTION_113	IF_9	ELSE_4
0xd5ed	              0x90	                                     nop	      7140	syntax.c	FUNCTION_113	IF_1	IF_2	IF_3
0xd5ee	            0xeb01	                           jmp 0x400d631	      7140	syntax.c	FUNCTION_113	IF_1	IF_2	IF_3
0xd5f0	              0x90	                                     nop	      7160	syntax.c	FUNCTION_113	ELSE_1	IF_5
0xd5f1	              0xc9	                                   leave	      7204	syntax.c	FUNCTION_113
0xd5f2	              0xc3	                                     ret	      7204	syntax.c	FUNCTION_113
hl_combine_attr	FOR,0:DO,0:IF,32:SWITCH,0:functions,0:ELSE,7:WHILE,0:CALL,21	339
0x11693	              0x55	                                push rbp	      9018	syntax.c	FUNCTION_136
0x11694	          0x4889e5	                            mov rbp, rsp	      9018	syntax.c	FUNCTION_136
0x11697	        0x4883ec50	                           sub rsp, 0x50	      9018	syntax.c	FUNCTION_136
0x1169b	          0x897dbc	             mov dword [rbp - 0x44], edi	      9018	syntax.c	FUNCTION_136
0x1169e	          0x8975b8	             mov dword [rbp - 0x48], esi	      9018	syntax.c	FUNCTION_136
0x116a1	    0x64488b042528	                mov rax, qword fs:[0x28]	      9018	syntax.c	FUNCTION_136
0x116aa	        0x488945f8	                mov qword [rbp - 8], rax	      9018	syntax.c	FUNCTION_136
0x116ae	            0x31c0	                            xor eax, eax	      9018	syntax.c	FUNCTION_136
0x116b0	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      9019	syntax.c	FUNCTION_136
0x116b8	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      9023	syntax.c	FUNCTION_136	IF_1
0x116bc	            0x7508	                           jne 0x4011706	      9023	syntax.c	FUNCTION_136	IF_1
0x116be	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      9024	syntax.c	FUNCTION_136	IF_1
0x116c1	      0xe9b0040000	                           jmp 0x4011bb6	      9024	syntax.c	FUNCTION_136	IF_1
0x116c6	    0x817dbcff0000	           cmp dword [rbp - 0x44], 0xff 	      9025	syntax.c	FUNCTION_136	IF_2
0x116cd	            0x7f23	                            jg 0x4011732	      9025	syntax.c	FUNCTION_136	IF_2
0x116cf	    0x817db8ff0000	           cmp dword [rbp - 0x48], 0xff 	      9025	syntax.c	FUNCTION_136	IF_2
0x116d6	            0x7f1a	                            jg 0x4011732	      9025	syntax.c	FUNCTION_136	IF_2
0x116d8	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      9026	syntax.c	FUNCTION_136	CALL_1
0x116db	          0x83e040	                           and eax, 0x40	      9026	syntax.c	FUNCTION_136	CALL_1
0x116de	            0x85c0	                           test eax, eax	      9026	syntax.c	FUNCTION_136	CALL_1
0x116e0	            0x7405	                            je 0x4011727	      9026	syntax.c	FUNCTION_136	CALL_1
0x116e2	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      9026	syntax.c	FUNCTION_136	CALL_1
0x116e5	            0xeb03	                           jmp 0x401172a	      9026	syntax.c	FUNCTION_136	CALL_1
0x116e7	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      9026	syntax.c	FUNCTION_136	CALL_1
0x116ea	           0xb45b8	              or eax, dword [rbp - 0x48]	      9026	syntax.c	FUNCTION_136	CALL_1
0x116ed	      0xe984040000	                           jmp 0x4011bb6	      9026	syntax.c	FUNCTION_136	CALL_1
0x116f2	    0x8b0500000000	            mov eax, dword [0x04011738] 	      9028	syntax.c	FUNCTION_136	IF_3
0x116f8	            0x85c0	                           test eax, eax	      9028	syntax.c	FUNCTION_136	IF_3
0x116fa	     0xf8478010000	                            je 0x40118b8	      9028	syntax.c	FUNCTION_136	IF_3
0x11700	    0x817dbcff0000	           cmp dword [rbp - 0x44], 0xff 	      9030	syntax.c	FUNCTION_136	IF_3	IF_4
0x11707	            0x7e0e	                           jle 0x4011757	      9030	syntax.c	FUNCTION_136	IF_3	IF_4
0x11709	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      9031	syntax.c	FUNCTION_136	IF_3	CALL_2
0x1170c	            0x89c7	                            mov edi, eax	      9031	syntax.c	FUNCTION_136	IF_3	CALL_2
0x1170e	      0xe800000000	                          call 0x4011753	      9031	syntax.c	FUNCTION_136	IF_3	CALL_2
0x11713	        0x488945c0	             mov qword [rbp - 0x40], rax	      9031	syntax.c	FUNCTION_136	IF_3	CALL_2
0x11717	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      9032	syntax.c	FUNCTION_136	IF_3	IF_5
0x1171c	            0x742d	                            je 0x401178b	      9032	syntax.c	FUNCTION_136	IF_3	IF_5
0x1171e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x11722	          0x488b10	                    mov rdx, qword [rax]	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x11725	        0x488955d0	             mov qword [rbp - 0x30], rdx	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x11729	        0x488b5008	                mov rdx, qword [rax + 8]	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x1172d	        0x488955d8	             mov qword [rbp - 0x28], rdx	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x11731	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x11735	        0x488955e0	             mov qword [rbp - 0x20], rdx	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x11739	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x1173d	        0x488955e8	             mov qword [rbp - 0x18], rdx	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x11741	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x11745	        0x488945f0	             mov qword [rbp - 0x10], rax	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x11749	            0xeb3e	                           jmp 0x40117c9	      9033	syntax.c	FUNCTION_136	IF_3	IF_5
0x1174b	        0x488d45d0	                   lea rax, [rbp - 0x30]	      9036	syntax.c	FUNCTION_136	IF_3	ELSE_1	CALL_3
0x1174f	      0xba28000000	                           mov edx, 0x28	      9036	syntax.c	FUNCTION_136	IF_3	ELSE_1	CALL_3
0x11754	      0xbe00000000	                              mov esi, 0	      9036	syntax.c	FUNCTION_136	IF_3	ELSE_1	CALL_3
0x11759	          0x4889c7	                            mov rdi, rax	      9036	syntax.c	FUNCTION_136	IF_3	ELSE_1	CALL_3
0x1175c	      0xe800000000	                          call 0x40117a1	      9036	syntax.c	FUNCTION_136	IF_3	ELSE_1	CALL_3
0x11761	    0x48c745d899d4	mov qword [rbp - 0x28], 0xffffffffffffd499	      9037	syntax.c	FUNCTION_136	IF_3	ELSE_1
0x11769	    0x48c745e099d4	mov qword [rbp - 0x20], 0xffffffffffffd499	      9038	syntax.c	FUNCTION_136	IF_3	ELSE_1
0x11771	    0x48c745e899d4	mov qword [rbp - 0x18], 0xffffffffffffd499	      9039	syntax.c	FUNCTION_136	IF_3	ELSE_1
0x11779	    0x817dbcff0000	           cmp dword [rbp - 0x44], 0xff 	      9040	syntax.c	FUNCTION_136	IF_3	ELSE_1	IF_6
0x11780	            0x7f07	                            jg 0x40117c9	      9040	syntax.c	FUNCTION_136	IF_3	ELSE_1	IF_6
0x11782	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      9041	syntax.c	FUNCTION_136	IF_3	ELSE_1	IF_6
0x11785	        0x668945d0	               mov word [rbp - 0x30], ax	      9041	syntax.c	FUNCTION_136	IF_3	ELSE_1	IF_6
0x11789	    0x817db8ff0000	           cmp dword [rbp - 0x48], 0xff 	      9044	syntax.c	FUNCTION_136	IF_3	IF_7
0x11790	            0x7f21	                            jg 0x40117f3	      9044	syntax.c	FUNCTION_136	IF_3	IF_7
0x11792	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      9045	syntax.c	FUNCTION_136	IF_3	CALL_4
0x11795	          0x83e040	                           and eax, 0x40	      9045	syntax.c	FUNCTION_136	IF_3	CALL_4
0x11798	            0x85c0	                           test eax, eax	      9045	syntax.c	FUNCTION_136	IF_3	CALL_4
0x1179a	            0x7506	                           jne 0x40117e2	      9045	syntax.c	FUNCTION_136	IF_3	CALL_4
0x1179c	         0xfb745d0	            movzx eax, word [rbp - 0x30]	      9045	syntax.c	FUNCTION_136	IF_3	CALL_4
0x117a0	            0xeb03	                           jmp 0x40117e5	      9045	syntax.c	FUNCTION_136	IF_3	CALL_4
0x117a2	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      9045	syntax.c	FUNCTION_136	IF_3	CALL_4
0x117a5	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      9045	syntax.c	FUNCTION_136	IF_3	CALL_4
0x117a8	             0x9d0	                             or eax, edx	      9045	syntax.c	FUNCTION_136	IF_3	CALL_4
0x117aa	        0x668945d0	               mov word [rbp - 0x30], ax	      9045	syntax.c	FUNCTION_136	IF_3	CALL_4
0x117ae	      0xe9af000000	                           jmp 0x40118a2	      9045	syntax.c	FUNCTION_136	IF_3	CALL_4
0x117b3	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      9048	syntax.c	FUNCTION_136	IF_3	ELSE_2	CALL_5
0x117b6	            0x89c7	                            mov edi, eax	      9048	syntax.c	FUNCTION_136	IF_3	ELSE_2	CALL_5
0x117b8	      0xe800000000	                          call 0x40117fd	      9048	syntax.c	FUNCTION_136	IF_3	ELSE_2	CALL_5
0x117bd	        0x488945c8	             mov qword [rbp - 0x38], rax	      9048	syntax.c	FUNCTION_136	IF_3	ELSE_2	CALL_5
0x117c1	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      9049	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x117c6	     0xf8496000000	                            je 0x40118a2	      9049	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8
0x117cc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	CALL_6
0x117d0	           0xfb700	                   movzx eax, word [rax]	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	CALL_6
0x117d3	              0x98	                                    cwde	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	CALL_6
0x117d4	          0x83e040	                           and eax, 0x40	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	CALL_6
0x117d7	            0x85c0	                           test eax, eax	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	CALL_6
0x117d9	            0x7409	                            je 0x4011824	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	CALL_6
0x117db	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	CALL_6
0x117df	           0xfb700	                   movzx eax, word [rax]	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	CALL_6
0x117e2	            0xeb04	                           jmp 0x4011828	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	CALL_6
0x117e4	         0xfb745d0	            movzx eax, word [rbp - 0x30]	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	CALL_6
0x117e8	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	CALL_6
0x117ec	           0xfb712	                   movzx edx, word [rdx]	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	CALL_6
0x117ef	             0x9d0	                             or eax, edx	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	CALL_6
0x117f1	        0x668945d0	               mov word [rbp - 0x30], ax	      9051	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	CALL_6
0x117f5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9053	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_9
0x117f9	        0x488b4008	                mov rax, qword [rax + 8]	      9053	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_9
0x117fd	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9053	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_9
0x11803	            0x740c	                            je 0x4011851	      9053	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_9
0x11805	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9054	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_9
0x11809	        0x488b4008	                mov rax, qword [rax + 8]	      9054	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_9
0x1180d	        0x488945d8	             mov qword [rbp - 0x28], rax	      9054	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_9
0x11811	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9055	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_10
0x11815	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9055	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_10
0x11819	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9055	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_10
0x1181f	            0x740c	                            je 0x401186d	      9055	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_10
0x11821	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9056	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_10
0x11825	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9056	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_10
0x11829	        0x488945e0	             mov qword [rbp - 0x20], rax	      9056	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_10
0x1182d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9057	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_11
0x11831	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9057	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_11
0x11835	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9057	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_11
0x1183b	            0x740c	                            je 0x4011889	      9057	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_11
0x1183d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9058	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_11
0x11841	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9058	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_11
0x11845	        0x488945e8	             mov qword [rbp - 0x18], rax	      9058	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_11
0x11849	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9059	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_12
0x1184d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9059	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_12
0x11851	          0x4885c0	                           test rax, rax	      9059	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_12
0x11854	            0x740c	                            je 0x40118a2	      9059	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_12
0x11856	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9060	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_12
0x1185a	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9060	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_12
0x1185e	        0x488945f0	             mov qword [rbp - 0x10], rax	      9060	syntax.c	FUNCTION_136	IF_3	ELSE_2	IF_8	IF_12
0x11862	        0x488d45d0	                   lea rax, [rbp - 0x30]	      9067	syntax.c	FUNCTION_136	IF_3	CALL_7
0x11866	          0x4889c6	                            mov rsi, rax	      9067	syntax.c	FUNCTION_136	IF_3	CALL_7
0x11869	      0xbf00000000	                              mov edi, 0	      9067	syntax.c	FUNCTION_136	IF_3	CALL_7
0x1186e	      0xe805f8ffff	                 call sym.get_attr_entry	      9067	syntax.c	FUNCTION_136	IF_3	CALL_7
0x11873	      0xe9fe020000	                           jmp 0x4011bb6	      9067	syntax.c	FUNCTION_136	IF_3	CALL_7
0x11878	    0x8b0500000000	            mov eax, dword [0x040118be] 	      9071	syntax.c	FUNCTION_136	IF_14
0x1187e	          0x83f801	                              cmp eax, 1	      9071	syntax.c	FUNCTION_136	IF_14
0x11881	            0x7f0e	                            jg 0x40118d1	      9071	syntax.c	FUNCTION_136	IF_14
0x11883	    0x8b0500000000	            mov eax, dword [0x040118c9] 	      9071	syntax.c	FUNCTION_136	IF_14
0x11889	            0x85c0	                           test eax, eax	      9071	syntax.c	FUNCTION_136	IF_14
0x1188b	     0xf84d9010000	                            je 0x4011aaa	      9071	syntax.c	FUNCTION_136	IF_14
0x11891	    0x817dbcff0000	           cmp dword [rbp - 0x44], 0xff 	      9073	syntax.c	FUNCTION_136	IF_14	IF_15
0x11898	            0x7e0e	                           jle 0x40118e8	      9073	syntax.c	FUNCTION_136	IF_14	IF_15
0x1189a	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      9074	syntax.c	FUNCTION_136	IF_14	CALL_8
0x1189d	            0x89c7	                            mov edi, eax	      9074	syntax.c	FUNCTION_136	IF_14	CALL_8
0x1189f	      0xe800000000	                          call 0x40118e4	      9074	syntax.c	FUNCTION_136	IF_14	CALL_8
0x118a4	        0x488945c0	             mov qword [rbp - 0x40], rax	      9074	syntax.c	FUNCTION_136	IF_14	CALL_8
0x118a8	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      9075	syntax.c	FUNCTION_136	IF_14	IF_16
0x118ad	            0x742d	                            je 0x401191c	      9075	syntax.c	FUNCTION_136	IF_14	IF_16
0x118af	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x118b3	          0x488b10	                    mov rdx, qword [rax]	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x118b6	        0x488955d0	             mov qword [rbp - 0x30], rdx	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x118ba	        0x488b5008	                mov rdx, qword [rax + 8]	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x118be	        0x488955d8	             mov qword [rbp - 0x28], rdx	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x118c2	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x118c6	        0x488955e0	             mov qword [rbp - 0x20], rdx	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x118ca	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x118ce	        0x488955e8	             mov qword [rbp - 0x18], rdx	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x118d2	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x118d6	        0x488945f0	             mov qword [rbp - 0x10], rax	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x118da	            0xeb36	                           jmp 0x4011952	      9076	syntax.c	FUNCTION_136	IF_14	IF_16
0x118dc	        0x488d45d0	                   lea rax, [rbp - 0x30]	      9079	syntax.c	FUNCTION_136	IF_14	ELSE_3	CALL_9
0x118e0	      0xba28000000	                           mov edx, 0x28	      9079	syntax.c	FUNCTION_136	IF_14	ELSE_3	CALL_9
0x118e5	      0xbe00000000	                              mov esi, 0	      9079	syntax.c	FUNCTION_136	IF_14	ELSE_3	CALL_9
0x118ea	          0x4889c7	                            mov rdi, rax	      9079	syntax.c	FUNCTION_136	IF_14	ELSE_3	CALL_9
0x118ed	      0xe800000000	                          call 0x4011932	      9079	syntax.c	FUNCTION_136	IF_14	ELSE_3	CALL_9
0x118f2	    0x48c745e899d4	mov qword [rbp - 0x18], 0xffffffffffffd499	      9081	syntax.c	FUNCTION_136	IF_14	ELSE_3
0x118fa	    0x48c745e099d4	mov qword [rbp - 0x20], 0xffffffffffffd499	      9082	syntax.c	FUNCTION_136	IF_14	ELSE_3
0x11902	    0x817dbcff0000	           cmp dword [rbp - 0x44], 0xff 	      9084	syntax.c	FUNCTION_136	IF_14	ELSE_3	IF_17
0x11909	            0x7f07	                            jg 0x4011952	      9084	syntax.c	FUNCTION_136	IF_14	ELSE_3	IF_17
0x1190b	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      9085	syntax.c	FUNCTION_136	IF_14	ELSE_3	IF_17
0x1190e	        0x668945d0	               mov word [rbp - 0x30], ax	      9085	syntax.c	FUNCTION_136	IF_14	ELSE_3	IF_17
0x11912	    0x817db8ff0000	           cmp dword [rbp - 0x48], 0xff 	      9088	syntax.c	FUNCTION_136	IF_14	IF_18
0x11919	            0x7f21	                            jg 0x401197c	      9088	syntax.c	FUNCTION_136	IF_14	IF_18
0x1191b	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      9089	syntax.c	FUNCTION_136	IF_14	CALL_10
0x1191e	          0x83e040	                           and eax, 0x40	      9089	syntax.c	FUNCTION_136	IF_14	CALL_10
0x11921	            0x85c0	                           test eax, eax	      9089	syntax.c	FUNCTION_136	IF_14	CALL_10
0x11923	            0x7506	                           jne 0x401196b	      9089	syntax.c	FUNCTION_136	IF_14	CALL_10
0x11925	         0xfb745d0	            movzx eax, word [rbp - 0x30]	      9089	syntax.c	FUNCTION_136	IF_14	CALL_10
0x11929	            0xeb03	                           jmp 0x401196e	      9089	syntax.c	FUNCTION_136	IF_14	CALL_10
0x1192b	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      9089	syntax.c	FUNCTION_136	IF_14	CALL_10
0x1192e	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      9089	syntax.c	FUNCTION_136	IF_14	CALL_10
0x11931	             0x9d0	                             or eax, edx	      9089	syntax.c	FUNCTION_136	IF_14	CALL_10
0x11933	        0x668945d0	               mov word [rbp - 0x30], ax	      9089	syntax.c	FUNCTION_136	IF_14	CALL_10
0x11937	      0xe918010000	                           jmp 0x4011a94	      9089	syntax.c	FUNCTION_136	IF_14	CALL_10
0x1193c	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      9092	syntax.c	FUNCTION_136	IF_14	ELSE_4	CALL_11
0x1193f	            0x89c7	                            mov edi, eax	      9092	syntax.c	FUNCTION_136	IF_14	ELSE_4	CALL_11
0x11941	      0xe800000000	                          call 0x4011986	      9092	syntax.c	FUNCTION_136	IF_14	ELSE_4	CALL_11
0x11946	        0x488945c8	             mov qword [rbp - 0x38], rax	      9092	syntax.c	FUNCTION_136	IF_14	ELSE_4	CALL_11
0x1194a	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      9093	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x1194f	     0xf84ff000000	                            je 0x4011a94	      9093	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19
0x11955	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	CALL_12
0x11959	           0xfb700	                   movzx eax, word [rax]	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	CALL_12
0x1195c	              0x98	                                    cwde	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	CALL_12
0x1195d	          0x83e040	                           and eax, 0x40	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	CALL_12
0x11960	            0x85c0	                           test eax, eax	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	CALL_12
0x11962	            0x7409	                            je 0x40119ad	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	CALL_12
0x11964	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	CALL_12
0x11968	           0xfb700	                   movzx eax, word [rax]	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	CALL_12
0x1196b	            0xeb04	                           jmp 0x40119b1	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	CALL_12
0x1196d	         0xfb745d0	            movzx eax, word [rbp - 0x30]	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	CALL_12
0x11971	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	CALL_12
0x11975	           0xfb712	                   movzx edx, word [rdx]	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	CALL_12
0x11978	             0x9d0	                             or eax, edx	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	CALL_12
0x1197a	        0x668945d0	               mov word [rbp - 0x30], ax	      9095	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	CALL_12
0x1197e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9097	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_20
0x11982	         0xfb74008	               movzx eax, word [rax + 8]	      9097	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_20
0x11986	          0x6685c0	                             test ax, ax	      9097	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_20
0x11989	            0x740c	                            je 0x40119d7	      9097	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_20
0x1198b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9098	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_20
0x1198f	         0xfb74008	               movzx eax, word [rax + 8]	      9098	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_20
0x11993	        0x668945d8	               mov word [rbp - 0x28], ax	      9098	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_20
0x11997	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9099	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_21
0x1199b	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      9099	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_21
0x1199f	          0x6685c0	                             test ax, ax	      9099	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_21
0x119a2	            0x740c	                            je 0x40119f0	      9099	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_21
0x119a4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9100	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_21
0x119a8	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      9100	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_21
0x119ac	        0x668945da	               mov word [rbp - 0x26], ax	      9100	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_21
0x119b0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9104	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_13
0x119b4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9104	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_13
0x119b8	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9104	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_13
0x119be	            0x7410	                            je 0x4011a10	      9104	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_13
0x119c0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9104	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_13
0x119c4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9104	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_13
0x119c8	    0x483d9ad4ffff	             cmp rax, 0xffffffffffffd49a	      9104	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_13
0x119ce	            0x754c	                           jne 0x4011a5c	      9104	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_13
0x119d0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9105	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_14
0x119d4	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9105	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_14
0x119d8	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9105	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_14
0x119de	            0x7410	                            je 0x4011a30	      9105	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_14
0x119e0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9105	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_14
0x119e4	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9105	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_14
0x119e8	    0x483d9ad4ffff	             cmp rax, 0xffffffffffffd49a	      9105	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_14
0x119ee	            0x752c	                           jne 0x4011a5c	      9105	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	CALL_14
0x119f0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9107	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_23
0x119f4	         0xfb74008	               movzx eax, word [rax + 8]	      9107	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_23
0x119f8	          0x6685c0	                             test ax, ax	      9107	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_23
0x119fb	            0x7408	                            je 0x4011a45	      9107	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_23
0x119fd	    0x48c745e09ad4	mov qword [rbp - 0x20], 0xffffffffffffd49a	      9108	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_23
0x11a05	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9109	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_24
0x11a09	         0xfb7400a	            movzx eax, word [rax + 0xa] 	      9109	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_24
0x11a0d	          0x6685c0	                             test ax, ax	      9109	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_24
0x11a10	            0x7442	                            je 0x4011a94	      9109	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_24
0x11a12	    0x48c745e89ad4	mov qword [rbp - 0x18], 0xffffffffffffd49a	      9110	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_24
0x11a1a	            0xeb38	                           jmp 0x4011a94	      9109	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	IF_22	IF_24
0x11a1c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9114	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_25
0x11a20	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9114	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_25
0x11a24	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9114	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_25
0x11a2a	            0x740c	                            je 0x4011a78	      9114	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_25
0x11a2c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9115	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_25
0x11a30	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9115	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_25
0x11a34	        0x488945e0	             mov qword [rbp - 0x20], rax	      9115	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_25
0x11a38	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9116	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_26
0x11a3c	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9116	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_26
0x11a40	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9116	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_26
0x11a46	            0x740c	                            je 0x4011a94	      9116	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_26
0x11a48	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9117	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_26
0x11a4c	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9117	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_26
0x11a50	        0x488945e8	             mov qword [rbp - 0x18], rax	      9117	syntax.c	FUNCTION_136	IF_14	ELSE_4	IF_19	ELSE_5	IF_26
0x11a54	        0x488d45d0	                   lea rax, [rbp - 0x30]	      9122	syntax.c	FUNCTION_136	IF_14	CALL_15
0x11a58	          0x4889c6	                            mov rsi, rax	      9122	syntax.c	FUNCTION_136	IF_14	CALL_15
0x11a5b	      0xbf00000000	                              mov edi, 0	      9122	syntax.c	FUNCTION_136	IF_14	CALL_15
0x11a60	      0xe813f6ffff	                 call sym.get_attr_entry	      9122	syntax.c	FUNCTION_136	IF_14	CALL_15
0x11a65	      0xe90c010000	                           jmp 0x4011bb6	      9122	syntax.c	FUNCTION_136	IF_14	CALL_15
0x11a6a	    0x817dbcff0000	           cmp dword [rbp - 0x44], 0xff 	      9125	syntax.c	FUNCTION_136	IF_27
0x11a71	            0x7e0e	                           jle 0x4011ac1	      9125	syntax.c	FUNCTION_136	IF_27
0x11a73	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      9126	syntax.c	FUNCTION_136	CALL_16
0x11a76	            0x89c7	                            mov edi, eax	      9126	syntax.c	FUNCTION_136	CALL_16
0x11a78	      0xe800000000	                          call 0x4011abd	      9126	syntax.c	FUNCTION_136	CALL_16
0x11a7d	        0x488945c0	             mov qword [rbp - 0x40], rax	      9126	syntax.c	FUNCTION_136	CALL_16
0x11a81	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      9127	syntax.c	FUNCTION_136	IF_28
0x11a86	            0x742d	                            je 0x4011af5	      9127	syntax.c	FUNCTION_136	IF_28
0x11a88	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      9128	syntax.c	FUNCTION_136	IF_28
0x11a8c	          0x488b10	                    mov rdx, qword [rax]	      9128	syntax.c	FUNCTION_136	IF_28
0x11a8f	        0x488955d0	             mov qword [rbp - 0x30], rdx	      9128	syntax.c	FUNCTION_136	IF_28
0x11a93	        0x488b5008	                mov rdx, qword [rax + 8]	      9128	syntax.c	FUNCTION_136	IF_28
0x11a97	        0x488955d8	             mov qword [rbp - 0x28], rdx	      9128	syntax.c	FUNCTION_136	IF_28
0x11a9b	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      9128	syntax.c	FUNCTION_136	IF_28
0x11a9f	        0x488955e0	             mov qword [rbp - 0x20], rdx	      9128	syntax.c	FUNCTION_136	IF_28
0x11aa3	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      9128	syntax.c	FUNCTION_136	IF_28
0x11aa7	        0x488955e8	             mov qword [rbp - 0x18], rdx	      9128	syntax.c	FUNCTION_136	IF_28
0x11aab	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9128	syntax.c	FUNCTION_136	IF_28
0x11aaf	        0x488945f0	             mov qword [rbp - 0x10], rax	      9128	syntax.c	FUNCTION_136	IF_28
0x11ab3	            0xeb26	                           jmp 0x4011b1b	      9128	syntax.c	FUNCTION_136	IF_28
0x11ab5	        0x488d45d0	                   lea rax, [rbp - 0x30]	      9131	syntax.c	FUNCTION_136	ELSE_6	CALL_17
0x11ab9	      0xba28000000	                           mov edx, 0x28	      9131	syntax.c	FUNCTION_136	ELSE_6	CALL_17
0x11abe	      0xbe00000000	                              mov esi, 0	      9131	syntax.c	FUNCTION_136	ELSE_6	CALL_17
0x11ac3	          0x4889c7	                            mov rdi, rax	      9131	syntax.c	FUNCTION_136	ELSE_6	CALL_17
0x11ac6	      0xe800000000	                          call 0x4011b0b	      9131	syntax.c	FUNCTION_136	ELSE_6	CALL_17
0x11acb	    0x817dbcff0000	           cmp dword [rbp - 0x44], 0xff 	      9132	syntax.c	FUNCTION_136	ELSE_6	IF_29
0x11ad2	            0x7f07	                            jg 0x4011b1b	      9132	syntax.c	FUNCTION_136	ELSE_6	IF_29
0x11ad4	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      9133	syntax.c	FUNCTION_136	ELSE_6	IF_29
0x11ad7	        0x668945d0	               mov word [rbp - 0x30], ax	      9133	syntax.c	FUNCTION_136	ELSE_6	IF_29
0x11adb	    0x817db8ff0000	           cmp dword [rbp - 0x48], 0xff 	      9136	syntax.c	FUNCTION_136	IF_30
0x11ae2	            0x7f1e	                            jg 0x4011b42	      9136	syntax.c	FUNCTION_136	IF_30
0x11ae4	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      9137	syntax.c	FUNCTION_136	CALL_18
0x11ae7	          0x83e040	                           and eax, 0x40	      9137	syntax.c	FUNCTION_136	CALL_18
0x11aea	            0x85c0	                           test eax, eax	      9137	syntax.c	FUNCTION_136	CALL_18
0x11aec	            0x7506	                           jne 0x4011b34	      9137	syntax.c	FUNCTION_136	CALL_18
0x11aee	         0xfb745d0	            movzx eax, word [rbp - 0x30]	      9137	syntax.c	FUNCTION_136	CALL_18
0x11af2	            0xeb03	                           jmp 0x4011b37	      9137	syntax.c	FUNCTION_136	CALL_18
0x11af4	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      9137	syntax.c	FUNCTION_136	CALL_18
0x11af7	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      9137	syntax.c	FUNCTION_136	CALL_18
0x11afa	             0x9d0	                             or eax, edx	      9137	syntax.c	FUNCTION_136	CALL_18
0x11afc	        0x668945d0	               mov word [rbp - 0x30], ax	      9137	syntax.c	FUNCTION_136	CALL_18
0x11b00	            0xeb63	                           jmp 0x4011ba5	      9137	syntax.c	FUNCTION_136	CALL_18
0x11b02	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      9140	syntax.c	FUNCTION_136	ELSE_7	CALL_19
0x11b05	            0x89c7	                            mov edi, eax	      9140	syntax.c	FUNCTION_136	ELSE_7	CALL_19
0x11b07	      0xe800000000	                          call 0x4011b4c	      9140	syntax.c	FUNCTION_136	ELSE_7	CALL_19
0x11b0c	        0x488945c8	             mov qword [rbp - 0x38], rax	      9140	syntax.c	FUNCTION_136	ELSE_7	CALL_19
0x11b10	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      9141	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x11b15	            0x744e	                            je 0x4011ba5	      9141	syntax.c	FUNCTION_136	ELSE_7	IF_31
0x11b17	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31	CALL_20
0x11b1b	           0xfb700	                   movzx eax, word [rax]	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31	CALL_20
0x11b1e	              0x98	                                    cwde	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31	CALL_20
0x11b1f	          0x83e040	                           and eax, 0x40	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31	CALL_20
0x11b22	            0x85c0	                           test eax, eax	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31	CALL_20
0x11b24	            0x7409	                            je 0x4011b6f	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31	CALL_20
0x11b26	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31	CALL_20
0x11b2a	           0xfb700	                   movzx eax, word [rax]	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31	CALL_20
0x11b2d	            0xeb04	                           jmp 0x4011b73	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31	CALL_20
0x11b2f	         0xfb745d0	            movzx eax, word [rbp - 0x30]	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31	CALL_20
0x11b33	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31	CALL_20
0x11b37	           0xfb712	                   movzx edx, word [rdx]	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31	CALL_20
0x11b3a	             0x9d0	                             or eax, edx	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31	CALL_20
0x11b3c	        0x668945d0	               mov word [rbp - 0x30], ax	      9143	syntax.c	FUNCTION_136	ELSE_7	IF_31	CALL_20
0x11b40	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9144	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x11b44	        0x488b4008	                mov rax, qword [rax + 8]	      9144	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x11b48	          0x4885c0	                           test rax, rax	      9144	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x11b4b	            0x7418	                            je 0x4011ba5	      9144	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x11b4d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9146	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x11b51	        0x488b4008	                mov rax, qword [rax + 8]	      9146	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x11b55	        0x488945d8	             mov qword [rbp - 0x28], rax	      9146	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x11b59	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9147	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x11b5d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9147	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x11b61	        0x488945e0	             mov qword [rbp - 0x20], rax	      9147	syntax.c	FUNCTION_136	ELSE_7	IF_31	IF_32
0x11b65	        0x488d45d0	                   lea rax, [rbp - 0x30]	      9151	syntax.c	FUNCTION_136	CALL_21
0x11b69	          0x4889c6	                            mov rsi, rax	      9151	syntax.c	FUNCTION_136	CALL_21
0x11b6c	      0xbf00000000	                              mov edi, 0	      9151	syntax.c	FUNCTION_136	CALL_21
0x11b71	      0xe802f5ffff	                 call sym.get_attr_entry	      9151	syntax.c	FUNCTION_136	CALL_21
0x11b76	        0x488b4df8	                mov rcx, qword [rbp - 8]	      9152	syntax.c	FUNCTION_136
0x11b7a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      9152	syntax.c	FUNCTION_136
0x11b83	            0x7405	                            je 0x4011bca	      9152	syntax.c	FUNCTION_136
0x11b85	      0xe800000000	                          call 0x4011bca	      9152	syntax.c	FUNCTION_136
0x11b8a	              0xc9	                                   leave	      9152	syntax.c	FUNCTION_136
0x11b8b	              0xc3	                                     ret	      9152	syntax.c	FUNCTION_136
syn_get_id	FOR,0:DO,0:IF,2:SWITCH,0:functions,0:ELSE,1:WHILE,0:CALL,2	51
0xcb65	              0x55	                                push rbp	      6571	syntax.c	FUNCTION_102
0xcb66	          0x4889e5	                            mov rbp, rsp	      6571	syntax.c	FUNCTION_102
0xcb69	        0x4883ec30	                           sub rsp, 0x30	      6571	syntax.c	FUNCTION_102
0xcb6d	        0x48897df8	                mov qword [rbp - 8], rdi	      6571	syntax.c	FUNCTION_102
0xcb71	        0x488975f0	             mov qword [rbp - 0x10], rsi	      6571	syntax.c	FUNCTION_102
0xcb75	          0x8955ec	             mov dword [rbp - 0x14], edx	      6571	syntax.c	FUNCTION_102
0xcb78	          0x894de8	             mov dword [rbp - 0x18], ecx	      6571	syntax.c	FUNCTION_102
0xcb7b	        0x4c8945e0	              mov qword [rbp - 0x20], r8	      6571	syntax.c	FUNCTION_102
0xcb7f	        0x44894ddc	             mov dword [rbp - 0x24], r9d	      6571	syntax.c	FUNCTION_102
0xcb83	        0x488b45f8	                mov rax, qword [rbp - 8]	      6574	syntax.c	FUNCTION_102	IF_1
0xcb87	        0x488b5008	                mov rdx, qword [rax + 8]	      6574	syntax.c	FUNCTION_102	IF_1
0xcb8b	    0x488b05000000	            mov rax, qword [0x0400cbd2] 	      6574	syntax.c	FUNCTION_102	IF_1
0xcb92	          0x4839c2	                            cmp rdx, rax	      6574	syntax.c	FUNCTION_102	IF_1
0xcb95	            0x7518	                           jne 0x400cbef	      6574	syntax.c	FUNCTION_102	IF_1
0xcb97	    0x488b05000000	            mov rax, qword [0x0400cbde] 	      6575	syntax.c	FUNCTION_102	IF_1
0xcb9e	        0x483945f0	            cmp qword [rbp - 0x10], rax 	      6575	syntax.c	FUNCTION_102	IF_1
0xcba2	            0x750b	                           jne 0x400cbef	      6575	syntax.c	FUNCTION_102	IF_1
0xcba4	    0x8b0500000000	            mov eax, dword [0x0400cbea] 	      6576	syntax.c	FUNCTION_102	IF_1
0xcbaa	          0x3945ec	            cmp dword [rbp - 0x14], eax 	      6576	syntax.c	FUNCTION_102	IF_1
0xcbad	            0x7d15	                           jge 0x400cc04	      6576	syntax.c	FUNCTION_102	IF_1
0xcbaf	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      6577	syntax.c	FUNCTION_102	CALL_1
0xcbb3	        0x488b45f8	                mov rax, qword [rbp - 8]	      6577	syntax.c	FUNCTION_102	CALL_1
0xcbb7	          0x4889d6	                            mov rsi, rdx	      6577	syntax.c	FUNCTION_102	CALL_1
0xcbba	          0x4889c7	                            mov rdi, rax	      6577	syntax.c	FUNCTION_102	CALL_1
0xcbbd	      0xe800000000	                          call 0x400cc02	      6577	syntax.c	FUNCTION_102	CALL_1
0xcbc2	            0xeb36	                           jmp 0x400cc3a	      6577	syntax.c	FUNCTION_102	CALL_1
0xcbc4	        0x488b45f8	                mov rax, qword [rbp - 8]	      6578	syntax.c	FUNCTION_102	ELSE_1	IF_2
0xcbc8	        0x488b5008	                mov rdx, qword [rax + 8]	      6578	syntax.c	FUNCTION_102	ELSE_1	IF_2
0xcbcc	    0x488b05000000	            mov rax, qword [0x0400cc13] 	      6578	syntax.c	FUNCTION_102	ELSE_1	IF_2
0xcbd3	          0x4839c2	                            cmp rdx, rax	      6578	syntax.c	FUNCTION_102	ELSE_1	IF_2
0xcbd6	            0x7522	                           jne 0x400cc3a	      6578	syntax.c	FUNCTION_102	ELSE_1	IF_2
0xcbd8	    0x488b05000000	            mov rax, qword [0x0400cc1f] 	      6579	syntax.c	FUNCTION_102	ELSE_1	IF_2
0xcbdf	        0x483945f0	            cmp qword [rbp - 0x10], rax 	      6579	syntax.c	FUNCTION_102	ELSE_1	IF_2
0xcbe3	            0x7515	                           jne 0x400cc3a	      6579	syntax.c	FUNCTION_102	ELSE_1	IF_2
0xcbe5	    0x8b0500000000	            mov eax, dword [0x0400cc2b] 	      6580	syntax.c	FUNCTION_102	ELSE_1	IF_2
0xcbeb	          0x3945ec	            cmp dword [rbp - 0x14], eax 	      6580	syntax.c	FUNCTION_102	ELSE_1	IF_2
0xcbee	            0x7e0a	                           jle 0x400cc3a	      6580	syntax.c	FUNCTION_102	ELSE_1	IF_2
0xcbf0	    0xc70500000000	     mov dword [0x0400cc3a], 0xffffffff 	      6583	syntax.c	FUNCTION_102	ELSE_1	IF_2
0xcbfa	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      6585	syntax.c	FUNCTION_102	CALL_2
0xcbfd	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      6585	syntax.c	FUNCTION_102	CALL_2
0xcc01	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      6585	syntax.c	FUNCTION_102	CALL_2
0xcc04	          0x4889ce	                            mov rsi, rcx	      6585	syntax.c	FUNCTION_102	CALL_2
0xcc07	            0x89c7	                            mov edi, eax	      6585	syntax.c	FUNCTION_102	CALL_2
0xcc09	      0xe800000000	                          call 0x400cc4e	      6585	syntax.c	FUNCTION_102	CALL_2
0xcc0e	        0x837de800	               cmp dword [rbp - 0x18], 0	      6587	syntax.c	FUNCTION_102
0xcc12	            0x7408	                            je 0x400cc5c	      6587	syntax.c	FUNCTION_102
0xcc14	    0x8b0500000000	            mov eax, dword [0x0400cc5a] 	      6587	syntax.c	FUNCTION_102
0xcc1a	            0xeb06	                           jmp 0x400cc62	      6587	syntax.c	FUNCTION_102
0xcc1c	    0x8b0500000000	            mov eax, dword [0x0400cc62] 	      6587	syntax.c	FUNCTION_102
0xcc22	              0xc9	                                   leave	      6588	syntax.c	FUNCTION_102
0xcc23	              0xc3	                                     ret	      6588	syntax.c	FUNCTION_102
update_si_end	FOR,0:DO,0:IF,4:SWITCH,0:functions,0:ELSE,2:WHILE,0:CALL,4	113
0x493b	              0x55	                                push rbp	      2834	syntax.c	FUNCTION_34
0x493c	          0x4889e5	                            mov rbp, rsp	      2834	syntax.c	FUNCTION_34
0x493f	        0x4883ec70	                           sub rsp, 0x70	      2834	syntax.c	FUNCTION_34
0x4943	        0x48897d98	             mov qword [rbp - 0x68], rdi	      2834	syntax.c	FUNCTION_34
0x4947	          0x897594	             mov dword [rbp - 0x6c], esi	      2834	syntax.c	FUNCTION_34
0x494a	          0x895590	             mov dword [rbp - 0x70], edx	      2834	syntax.c	FUNCTION_34
0x494d	    0x64488b042528	                mov rax, qword fs:[0x28]	      2834	syntax.c	FUNCTION_34
0x4956	        0x488945f8	                mov qword [rbp - 8], rax	      2834	syntax.c	FUNCTION_34
0x495a	            0x31c0	                            xor eax, eax	      2834	syntax.c	FUNCTION_34
0x495c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2842	syntax.c	FUNCTION_34	IF_1
0x4960	            0x8b00	                    mov eax, dword [rax]	      2842	syntax.c	FUNCTION_34	IF_1
0x4962	            0x85c0	                           test eax, eax	      2842	syntax.c	FUNCTION_34	IF_1
0x4964	     0xf886b010000	                            js 0x4004b15	      2842	syntax.c	FUNCTION_34	IF_1
0x496a	        0x837d9000	               cmp dword [rbp - 0x70], 0	      2848	syntax.c	FUNCTION_34	IF_2
0x496e	            0x7518	                           jne 0x40049c8	      2848	syntax.c	FUNCTION_34	IF_2
0x4970	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2848	syntax.c	FUNCTION_34	IF_2
0x4974	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      2848	syntax.c	FUNCTION_34	IF_2
0x4978	    0x488b05000000	            mov rax, qword [0x040049bf] 	      2848	syntax.c	FUNCTION_34	IF_2
0x497f	          0x4839c2	                            cmp rdx, rax	      2848	syntax.c	FUNCTION_34	IF_2
0x4982	     0xf8d50010000	                           jge 0x4004b18	      2848	syntax.c	FUNCTION_34	IF_2
0x4988	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      2855	syntax.c	FUNCTION_34
0x498f	    0x488b05000000	            mov rax, qword [0x040049d6] 	      2856	syntax.c	FUNCTION_34
0x4996	        0x488945b0	             mov qword [rbp - 0x50], rax	      2856	syntax.c	FUNCTION_34
0x499a	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2857	syntax.c	FUNCTION_34
0x499d	          0x8945b8	             mov dword [rbp - 0x48], eax	      2857	syntax.c	FUNCTION_34
0x49a0	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2858	syntax.c	FUNCTION_34	CALL_1
0x49a4	    0x488bb8880000	            mov rdi, qword [rax + 0x88] 	      2858	syntax.c	FUNCTION_34	CALL_1
0x49ab	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2858	syntax.c	FUNCTION_34	CALL_1
0x49af	        0x4c8d5068	                   lea r10, [rax + 0x68]	      2858	syntax.c	FUNCTION_34	CALL_1
0x49b3	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2858	syntax.c	FUNCTION_34	CALL_1
0x49b7	            0x8b00	                    mov eax, dword [rax]	      2858	syntax.c	FUNCTION_34	CALL_1
0x49b9	        0x4c8d45e0	                    lea r8, [rbp - 0x20]	      2858	syntax.c	FUNCTION_34	CALL_1
0x49bd	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	      2858	syntax.c	FUNCTION_34	CALL_1
0x49c1	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      2858	syntax.c	FUNCTION_34	CALL_1
0x49c5	        0x488d75b0	                   lea rsi, [rbp - 0x50]	      2858	syntax.c	FUNCTION_34	CALL_1
0x49c9	              0x57	                                push rdi	      2858	syntax.c	FUNCTION_34	CALL_1
0x49ca	        0x488d7dac	                   lea rdi, [rbp - 0x54]	      2858	syntax.c	FUNCTION_34	CALL_1
0x49ce	              0x57	                                push rdi	      2858	syntax.c	FUNCTION_34	CALL_1
0x49cf	          0x4d89c1	                              mov r9, r8	      2858	syntax.c	FUNCTION_34	CALL_1
0x49d2	          0x4d89d0	                             mov r8, r10	      2858	syntax.c	FUNCTION_34	CALL_1
0x49d5	            0x89c7	                            mov edi, eax	      2858	syntax.c	FUNCTION_34	CALL_1
0x49d7	      0xe822020000	                    call sym.find_endpos	      2858	syntax.c	FUNCTION_34	CALL_1
0x49dc	        0x4883c410	                           add rsp, 0x10	      2858	syntax.c	FUNCTION_34	CALL_1
0x49e0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2861	syntax.c	FUNCTION_34	IF_3
0x49e4	          0x4885c0	                           test rax, rax	      2861	syntax.c	FUNCTION_34	IF_3
0x49e7	     0xf8595000000	                           jne 0x4004ac2	      2861	syntax.c	FUNCTION_34	IF_3
0x49ed	    0x488b05000000	            mov rax, qword [0x04004a34] 	      2864	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_2
0x49f4	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      2864	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_2
0x49fb	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2864	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_2
0x49ff	            0x8b00	                    mov eax, dword [rax]	      2864	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_2
0x4a01	          0x4863d0	                         movsxd rdx, eax	      2864	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_2
0x4a04	          0x4889d0	                            mov rax, rdx	      2864	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_2
0x4a07	        0x48c1e002	                              shl rax, 2	      2864	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_2
0x4a0b	          0x4801d0	                            add rax, rdx	      2864	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_2
0x4a0e	        0x48c1e005	                              shl rax, 5	      2864	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_2
0x4a12	          0x4801c8	                            add rax, rcx	      2864	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_2
0x4a15	          0x8b4024	            mov eax, dword [rax + 0x24] 	      2864	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_2
0x4a18	          0x83e004	                              and eax, 4	      2864	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_2
0x4a1b	            0x85c0	                           test eax, eax	      2864	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_2
0x4a1d	            0x7432	                            je 0x4004a91	      2864	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_2
0x4a1f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2867	syntax.c	FUNCTION_34	IF_3	IF_4
0x4a23	    0xc7405c010000	               mov dword [rax + 0x5c], 1	      2867	syntax.c	FUNCTION_34	IF_3	IF_4
0x4a2a	    0x488b15000000	            mov rdx, qword [0x04004a71] 	      2868	syntax.c	FUNCTION_34	IF_3	IF_4
0x4a31	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2868	syntax.c	FUNCTION_34	IF_3	IF_4
0x4a35	        0x48895018	             mov qword [rax + 0x18], rdx	      2868	syntax.c	FUNCTION_34	IF_3	IF_4
0x4a39	      0xe8ef0d0000	                 call sym.syn_getcurline	      2869	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_4
0x4a3e	          0x4889c7	                            mov rdi, rax	      2869	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_4
0x4a41	      0xe800000000	                          call 0x4004a86	      2869	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_4
0x4a46	            0x89c2	                            mov edx, eax	      2869	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_4
0x4a48	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2869	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_4
0x4a4c	          0x895020	             mov dword [rax + 0x20], edx	      2869	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_4
0x4a4f	            0xeb17	                           jmp 0x4004aa8	      2869	syntax.c	FUNCTION_34	IF_3	IF_4	CALL_4
0x4a51	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2874	syntax.c	FUNCTION_34	IF_3	ELSE_1
0x4a55	    0xc7405c000000	               mov dword [rax + 0x5c], 0	      2874	syntax.c	FUNCTION_34	IF_3	ELSE_1
0x4a5c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2875	syntax.c	FUNCTION_34	IF_3	ELSE_1
0x4a60	    0x48c740180000	               mov qword [rax + 0x18], 0	      2875	syntax.c	FUNCTION_34	IF_3	ELSE_1
0x4a68	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      2877	syntax.c	FUNCTION_34	IF_3
0x4a6c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2877	syntax.c	FUNCTION_34	IF_3
0x4a70	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2877	syntax.c	FUNCTION_34	IF_3
0x4a74	        0x488b4018	            mov rax, qword [rax + 0x18] 	      2877	syntax.c	FUNCTION_34	IF_3
0x4a78	        0x48894138	             mov qword [rcx + 0x38], rax	      2877	syntax.c	FUNCTION_34	IF_3
0x4a7c	        0x48895140	             mov qword [rcx + 0x40], rdx	      2877	syntax.c	FUNCTION_34	IF_3
0x4a80	            0xeb57	                           jmp 0x4004b19	      2877	syntax.c	FUNCTION_34	IF_3
0x4a82	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      2882	syntax.c	FUNCTION_34	ELSE_2
0x4a86	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      2882	syntax.c	FUNCTION_34	ELSE_2
0x4a8a	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      2882	syntax.c	FUNCTION_34	ELSE_2
0x4a8e	        0x48894118	             mov qword [rcx + 0x18], rax	      2882	syntax.c	FUNCTION_34	ELSE_2
0x4a92	        0x48895120	             mov qword [rcx + 0x20], rdx	      2882	syntax.c	FUNCTION_34	ELSE_2
0x4a96	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      2883	syntax.c	FUNCTION_34	ELSE_2
0x4a9a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2883	syntax.c	FUNCTION_34	ELSE_2
0x4a9e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      2883	syntax.c	FUNCTION_34	ELSE_2
0x4aa2	        0x48894138	             mov qword [rcx + 0x38], rax	      2883	syntax.c	FUNCTION_34	ELSE_2
0x4aa6	        0x48895140	             mov qword [rcx + 0x40], rdx	      2883	syntax.c	FUNCTION_34	ELSE_2
0x4aaa	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      2884	syntax.c	FUNCTION_34	ELSE_2
0x4aae	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      2884	syntax.c	FUNCTION_34	ELSE_2
0x4ab2	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2884	syntax.c	FUNCTION_34	ELSE_2
0x4ab6	        0x48894148	             mov qword [rcx + 0x48], rax	      2884	syntax.c	FUNCTION_34	ELSE_2
0x4aba	        0x48895150	             mov qword [rcx + 0x50], rdx	      2884	syntax.c	FUNCTION_34	ELSE_2
0x4abe	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2885	syntax.c	FUNCTION_34	ELSE_2
0x4ac2	    0xc7405c010000	               mov dword [rax + 0x5c], 1	      2885	syntax.c	FUNCTION_34	ELSE_2
0x4ac9	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      2886	syntax.c	FUNCTION_34	ELSE_2
0x4acc	        0x488b4598	             mov rax, qword [rbp - 0x68]	      2886	syntax.c	FUNCTION_34	ELSE_2
0x4ad0	          0x895058	             mov dword [rax + 0x58], edx	      2886	syntax.c	FUNCTION_34	ELSE_2
0x4ad3	            0xeb04	                           jmp 0x4004b19	      2886	syntax.c	FUNCTION_34	ELSE_2
0x4ad5	              0x90	                                     nop	      2843	syntax.c	FUNCTION_34	IF_1
0x4ad6	            0xeb01	                           jmp 0x4004b19	      2843	syntax.c	FUNCTION_34	IF_1
0x4ad8	              0x90	                                     nop	      2849	syntax.c	FUNCTION_34	IF_2
0x4ad9	        0x488b45f8	                mov rax, qword [rbp - 8]	      2888	syntax.c	FUNCTION_34
0x4add	    0x644833042528	                xor rax, qword fs:[0x28]	      2888	syntax.c	FUNCTION_34
0x4ae6	            0x7405	                            je 0x4004b2d	      2888	syntax.c	FUNCTION_34
0x4ae8	      0xe800000000	                          call 0x4004b2d	      2888	syntax.c	FUNCTION_34
0x4aed	              0xc9	                                   leave	      2888	syntax.c	FUNCTION_34
0x4aee	              0xc3	                                     ret	      2888	syntax.c	FUNCTION_34
get_tgc_attr_idx	FOR,0:DO,0:IF,1:SWITCH,0:functions,0:ELSE,1:WHILE,0:CALL,2	37
0x114fe	              0x55	                                push rbp	      8945	syntax.c	FUNCTION_133
0x114ff	          0x4889e5	                            mov rbp, rsp	      8945	syntax.c	FUNCTION_133
0x11502	        0x4883ec50	                           sub rsp, 0x50	      8945	syntax.c	FUNCTION_133
0x11506	          0x897dcc	             mov dword [rbp - 0x34], edi	      8945	syntax.c	FUNCTION_133
0x11509	        0x488975c0	             mov qword [rbp - 0x40], rsi	      8945	syntax.c	FUNCTION_133
0x1150d	        0x488955b8	             mov qword [rbp - 0x48], rdx	      8945	syntax.c	FUNCTION_133
0x11511	    0x64488b042528	                mov rax, qword fs:[0x28]	      8945	syntax.c	FUNCTION_133
0x1151a	        0x488945f8	                mov qword [rbp - 8], rax	      8945	syntax.c	FUNCTION_133
0x1151e	            0x31c0	                            xor eax, eax	      8945	syntax.c	FUNCTION_133
0x11520	        0x488d45d0	                   lea rax, [rbp - 0x30]	      8948	syntax.c	FUNCTION_133	CALL_1
0x11524	      0xba28000000	                           mov edx, 0x28	      8948	syntax.c	FUNCTION_133	CALL_1
0x11529	      0xbe00000000	                              mov esi, 0	      8948	syntax.c	FUNCTION_133	CALL_1
0x1152e	          0x4889c7	                            mov rdi, rax	      8948	syntax.c	FUNCTION_133	CALL_1
0x11531	      0xe800000000	                          call 0x4011576	      8948	syntax.c	FUNCTION_133	CALL_1
0x11536	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      8949	syntax.c	FUNCTION_133
0x11539	        0x668945d0	               mov word [rbp - 0x30], ax	      8949	syntax.c	FUNCTION_133
0x1153d	    0x48817dc099d4	cmp qword [rbp - 0x40], 0xffffffffffffd499	      8950	syntax.c	FUNCTION_133	IF_1
0x11545	            0x751c	                           jne 0x40115a3	      8950	syntax.c	FUNCTION_133	IF_1
0x11547	    0x48817db899d4	cmp qword [rbp - 0x48], 0xffffffffffffd499	      8950	syntax.c	FUNCTION_133	IF_1
0x1154f	            0x7512	                           jne 0x40115a3	      8950	syntax.c	FUNCTION_133	IF_1
0x11551	    0x48c745e09ad4	mov qword [rbp - 0x20], 0xffffffffffffd49a	      8954	syntax.c	FUNCTION_133	IF_1
0x11559	    0x48c745e89ad4	mov qword [rbp - 0x18], 0xffffffffffffd49a	      8955	syntax.c	FUNCTION_133	IF_1
0x11561	            0xeb10	                           jmp 0x40115b3	      8955	syntax.c	FUNCTION_133	IF_1
0x11563	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      8959	syntax.c	FUNCTION_133	ELSE_1
0x11567	        0x488945e0	             mov qword [rbp - 0x20], rax	      8959	syntax.c	FUNCTION_133	ELSE_1
0x1156b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8960	syntax.c	FUNCTION_133	ELSE_1
0x1156f	        0x488945e8	             mov qword [rbp - 0x18], rax	      8960	syntax.c	FUNCTION_133	ELSE_1
0x11573	        0x488d45d0	                   lea rax, [rbp - 0x30]	      8962	syntax.c	FUNCTION_133	CALL_2
0x11577	          0x4889c6	                            mov rsi, rax	      8962	syntax.c	FUNCTION_133	CALL_2
0x1157a	      0xbf00000000	                              mov edi, 0	      8962	syntax.c	FUNCTION_133	CALL_2
0x1157f	      0xe8f4faffff	                 call sym.get_attr_entry	      8962	syntax.c	FUNCTION_133	CALL_2
0x11584	        0x488b4df8	                mov rcx, qword [rbp - 8]	      8963	syntax.c	FUNCTION_133
0x11588	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8963	syntax.c	FUNCTION_133
0x11591	            0x7405	                            je 0x40115d8	      8963	syntax.c	FUNCTION_133
0x11593	      0xe800000000	                          call 0x40115d8	      8963	syntax.c	FUNCTION_133
0x11598	              0xc9	                                   leave	      8963	syntax.c	FUNCTION_133
0x11599	              0xc3	                                     ret	      8963	syntax.c	FUNCTION_133
set_normal_colors	FOR,0:DO,0:IF,7:SWITCH,0:functions,0:ELSE,1:WHILE,0:CALL,14	85
0x10942	              0x55	                                push rbp	      8408	syntax.c	FUNCTION_121
0x10943	          0x4889e5	                            mov rbp, rsp	      8408	syntax.c	FUNCTION_121
0x10946	        0x4883ec10	                           sub rsp, 0x10	      8408	syntax.c	FUNCTION_121
0x1094a	    0x8b0500000000	            mov eax, dword [0x04010990] 	      8411	syntax.c	FUNCTION_121	IF_1
0x10950	            0x85c0	                           test eax, eax	      8411	syntax.c	FUNCTION_121	IF_1
0x10952	            0x7441	                            je 0x40109d5	      8411	syntax.c	FUNCTION_121	IF_1
0x10954	    0x41b900000000	                              mov r9d, 0	      8414	syntax.c	FUNCTION_121	IF_1	IF_2	CALL_1
0x1095a	    0x41b801000000	                              mov r8d, 1	      8414	syntax.c	FUNCTION_121	IF_1	IF_2	CALL_1
0x10960	      0xb900000000	                              mov ecx, 0	      8414	syntax.c	FUNCTION_121	IF_1	IF_2	CALL_1
0x10965	      0xba00000000	                              mov edx, 0	      8414	syntax.c	FUNCTION_121	IF_1	IF_2	CALL_1
0x1096a	      0xbe00000000	                              mov esi, 0	      8414	syntax.c	FUNCTION_121	IF_1	IF_2	CALL_1
0x1096f	      0xbf00000000	                              mov edi, 0	      8414	syntax.c	FUNCTION_121	IF_1	IF_2	CALL_1
0x10974	      0xe81d010000	               call sym.set_group_colors	      8414	syntax.c	FUNCTION_121	IF_1	IF_2	CALL_1
0x10979	            0x85c0	                           test eax, eax	      8414	syntax.c	FUNCTION_121	IF_1	IF_2	CALL_1
0x1097b	     0xf8412010000	                            je 0x4010ad3	      8414	syntax.c	FUNCTION_121	IF_1	IF_2	CALL_1
0x10981	      0xe800000000	                          call 0x40109c6	      8418	syntax.c	FUNCTION_121	IF_1	IF_2	CALL_2
0x10986	    0xc70500000000	           mov dword [0x040109d0], 0x32 	      8419	syntax.c	FUNCTION_121	IF_1	IF_2
0x10990	      0xe9fe000000	                           jmp 0x4010ad3	      8478	syntax.c	FUNCTION_121
0x10995	      0xbf00000000	                              mov edi, 0	      8459	syntax.c	FUNCTION_121	ELSE_1	CALL_9
0x1099a	      0xe800000000	                          call 0x40109df	      8459	syntax.c	FUNCTION_121	ELSE_1	CALL_9
0x1099f	          0x83e801	                              sub eax, 1	      8459	syntax.c	FUNCTION_121	ELSE_1	CALL_9
0x109a2	          0x8945fc	                mov dword [rbp - 4], eax	      8459	syntax.c	FUNCTION_121	ELSE_1	CALL_9
0x109a5	        0x837dfc00	                  cmp dword [rbp - 4], 0	      8460	syntax.c	FUNCTION_121	ELSE_1	IF_6
0x109a9	     0xf88e4000000	                            js 0x4010ad3	      8460	syntax.c	FUNCTION_121	ELSE_1	IF_6
0x109af	          0x8b45fc	                mov eax, dword [rbp - 4]	      8462	syntax.c	FUNCTION_121	ELSE_1	IF_6	CALL_10
0x109b2	      0xba00000000	                              mov edx, 0	      8462	syntax.c	FUNCTION_121	ELSE_1	IF_6	CALL_10
0x109b7	      0xbe00000000	                              mov esi, 0	      8462	syntax.c	FUNCTION_121	ELSE_1	IF_6	CALL_10
0x109bc	            0x89c7	                            mov edi, eax	      8462	syntax.c	FUNCTION_121	ELSE_1	IF_6	CALL_10
0x109be	      0xe84f2b0000	               call sym.gui_do_one_color	      8462	syntax.c	FUNCTION_121	ELSE_1	IF_6	CALL_10
0x109c3	    0x488b0d000000	            mov rcx, qword [0x04010a0a] 	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_11
0x109ca	          0x8b45fc	                mov eax, dword [rbp - 4]	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_11
0x109cd	          0x4863d0	                         movsxd rdx, eax	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_11
0x109d0	          0x4889d0	                            mov rax, rdx	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_11
0x109d3	        0x48c1e003	                              shl rax, 3	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_11
0x109d7	          0x4801d0	                            add rax, rdx	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_11
0x109da	          0x4801c0	                            add rax, rax	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_11
0x109dd	          0x4801d0	                            add rax, rdx	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_11
0x109e0	        0x48c1e003	                              shl rax, 3	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_11
0x109e4	          0x4801c8	                            add rax, rcx	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_11
0x109e7	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_11
0x109eb	    0x488b05000000	            mov rax, qword [0x04010a32] 	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_11
0x109f2	          0x4839c2	                            cmp rdx, rax	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_11
0x109f5	            0x7534	                           jne 0x4010a6b	      8466	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_11
0x109f7	    0x488b0d000000	            mov rcx, qword [0x04010a3e] 	      8467	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_12
0x109fe	          0x8b45fc	                mov eax, dword [rbp - 4]	      8467	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_12
0x10a01	          0x4863d0	                         movsxd rdx, eax	      8467	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_12
0x10a04	          0x4889d0	                            mov rax, rdx	      8467	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_12
0x10a07	        0x48c1e003	                              shl rax, 3	      8467	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_12
0x10a0b	          0x4801d0	                            add rax, rdx	      8467	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_12
0x10a0e	          0x4801c0	                            add rax, rax	      8467	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_12
0x10a11	          0x4801d0	                            add rax, rdx	      8467	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_12
0x10a14	        0x48c1e003	                              shl rax, 3	      8467	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_12
0x10a18	          0x4801c8	                            add rax, rcx	      8467	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_12
0x10a1b	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      8467	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_12
0x10a1f	    0x488b05000000	            mov rax, qword [0x04010a66] 	      8467	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_12
0x10a26	          0x4839c2	                            cmp rdx, rax	      8467	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_12
0x10a29	            0x7468	                            je 0x4010ad3	      8467	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_12
0x10a2b	    0x488b0d000000	            mov rcx, qword [0x04010a72] 	      8471	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_13
0x10a32	          0x8b45fc	                mov eax, dword [rbp - 4]	      8471	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_13
0x10a35	          0x4863d0	                         movsxd rdx, eax	      8471	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_13
0x10a38	          0x4889d0	                            mov rax, rdx	      8471	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_13
0x10a3b	        0x48c1e003	                              shl rax, 3	      8471	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_13
0x10a3f	          0x4801d0	                            add rax, rdx	      8471	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_13
0x10a42	          0x4801c0	                            add rax, rax	      8471	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_13
0x10a45	          0x4801d0	                            add rax, rdx	      8471	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_13
0x10a48	        0x48c1e003	                              shl rax, 3	      8471	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_13
0x10a4c	          0x4801c8	                            add rax, rcx	      8471	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_13
0x10a4f	        0x488b4040	            mov rax, qword [rax + 0x40] 	      8471	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_13
0x10a53	    0x488905000000	            mov qword [0x04010a9a], rax 	      8471	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_13
0x10a5a	    0x488b0d000000	            mov rcx, qword [0x04010aa1] 	      8472	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_14
0x10a61	          0x8b45fc	                mov eax, dword [rbp - 4]	      8472	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_14
0x10a64	          0x4863d0	                         movsxd rdx, eax	      8472	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_14
0x10a67	          0x4889d0	                            mov rax, rdx	      8472	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_14
0x10a6a	        0x48c1e003	                              shl rax, 3	      8472	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_14
0x10a6e	          0x4801d0	                            add rax, rdx	      8472	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_14
0x10a71	          0x4801c0	                            add rax, rax	      8472	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_14
0x10a74	          0x4801d0	                            add rax, rdx	      8472	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_14
0x10a77	        0x48c1e003	                              shl rax, 3	      8472	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_14
0x10a7b	          0x4801c8	                            add rax, rcx	      8472	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_14
0x10a7e	        0x488b4048	            mov rax, qword [rax + 0x48] 	      8472	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_14
0x10a82	    0x488905000000	            mov qword [0x04010ac9], rax 	      8472	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7	CALL_14
0x10a89	    0xc70500000000	           mov dword [0x04010ad3], 0x32 	      8473	syntax.c	FUNCTION_121	ELSE_1	IF_6	IF_7
0x10a93	              0x90	                                     nop	      8478	syntax.c	FUNCTION_121
0x10a94	              0xc9	                                   leave	      8478	syntax.c	FUNCTION_121
0x10a95	              0xc3	                                     ret	      8478	syntax.c	FUNCTION_121
combine_stl_hlt	FOR,0:DO,0:IF,10:SWITCH,0:functions,0:ELSE,1:WHILE,0:CALL,5	730
0x13776	              0x55	                                push rbp	      9975	syntax.c	FUNCTION_162
0x13777	          0x4889e5	                            mov rbp, rsp	      9975	syntax.c	FUNCTION_162
0x1377a	              0x53	                                push rbx	      9975	syntax.c	FUNCTION_162
0x1377b	        0x4883ec38	                           sub rsp, 0x38	      9975	syntax.c	FUNCTION_162
0x1377f	          0x897ddc	             mov dword [rbp - 0x24], edi	      9975	syntax.c	FUNCTION_162
0x13782	          0x8975d8	             mov dword [rbp - 0x28], esi	      9975	syntax.c	FUNCTION_162
0x13785	          0x8955d4	             mov dword [rbp - 0x2c], edx	      9975	syntax.c	FUNCTION_162
0x13788	          0x894dd0	             mov dword [rbp - 0x30], ecx	      9975	syntax.c	FUNCTION_162
0x1378b	        0x448945cc	             mov dword [rbp - 0x34], r8d	      9975	syntax.c	FUNCTION_162
0x1378f	        0x44894dc8	             mov dword [rbp - 0x38], r9d	      9975	syntax.c	FUNCTION_162
0x13793	    0x488b05000000	            mov rax, qword [0x040137da] 	      9976	syntax.c	FUNCTION_162	CALL_1
0x1379a	        0x488945e8	             mov qword [rbp - 0x18], rax	      9976	syntax.c	FUNCTION_162	CALL_1
0x1379e	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      9978	syntax.c	FUNCTION_162	IF_1
0x137a2	     0xf85e5000000	                           jne 0x40138cd	      9978	syntax.c	FUNCTION_162	IF_1
0x137a8	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      9980	syntax.c	FUNCTION_162	IF_1	CALL_2
0x137ab	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      9980	syntax.c	FUNCTION_162	IF_1	CALL_2
0x137ae	             0x1d0	                            add eax, edx	      9980	syntax.c	FUNCTION_162	IF_1	CALL_2
0x137b0	          0x4863d0	                         movsxd rdx, eax	      9980	syntax.c	FUNCTION_162	IF_1	CALL_2
0x137b3	          0x4889d0	                            mov rax, rdx	      9980	syntax.c	FUNCTION_162	IF_1	CALL_2
0x137b6	        0x48c1e003	                              shl rax, 3	      9980	syntax.c	FUNCTION_162	IF_1	CALL_2
0x137ba	          0x4801d0	                            add rax, rdx	      9980	syntax.c	FUNCTION_162	IF_1	CALL_2
0x137bd	          0x4801c0	                            add rax, rax	      9980	syntax.c	FUNCTION_162	IF_1	CALL_2
0x137c0	          0x4801d0	                            add rax, rdx	      9980	syntax.c	FUNCTION_162	IF_1	CALL_2
0x137c3	        0x48c1e003	                              shl rax, 3	      9980	syntax.c	FUNCTION_162	IF_1	CALL_2
0x137c7	          0x4889c2	                            mov rdx, rax	      9980	syntax.c	FUNCTION_162	IF_1	CALL_2
0x137ca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9980	syntax.c	FUNCTION_162	IF_1	CALL_2
0x137ce	          0x4801d0	                            add rax, rdx	      9980	syntax.c	FUNCTION_162	IF_1	CALL_2
0x137d1	      0xba98000000	                           mov edx, 0x98	      9980	syntax.c	FUNCTION_162	IF_1	CALL_2
0x137d6	      0xbe00000000	                              mov esi, 0	      9980	syntax.c	FUNCTION_162	IF_1	CALL_2
0x137db	          0x4889c7	                            mov rdi, rax	      9980	syntax.c	FUNCTION_162	IF_1	CALL_2
0x137de	      0xe800000000	                          call 0x4013823	      9980	syntax.c	FUNCTION_162	IF_1	CALL_2
0x137e3	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      9981	syntax.c	FUNCTION_162	IF_1
0x137e6	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      9981	syntax.c	FUNCTION_162	IF_1
0x137e9	             0x1d0	                            add eax, edx	      9981	syntax.c	FUNCTION_162	IF_1
0x137eb	          0x4863d0	                         movsxd rdx, eax	      9981	syntax.c	FUNCTION_162	IF_1
0x137ee	          0x4889d0	                            mov rax, rdx	      9981	syntax.c	FUNCTION_162	IF_1
0x137f1	        0x48c1e003	                              shl rax, 3	      9981	syntax.c	FUNCTION_162	IF_1
0x137f5	          0x4801d0	                            add rax, rdx	      9981	syntax.c	FUNCTION_162	IF_1
0x137f8	          0x4801c0	                            add rax, rax	      9981	syntax.c	FUNCTION_162	IF_1
0x137fb	          0x4801d0	                            add rax, rdx	      9981	syntax.c	FUNCTION_162	IF_1
0x137fe	        0x48c1e003	                              shl rax, 3	      9981	syntax.c	FUNCTION_162	IF_1
0x13802	          0x4889c2	                            mov rdx, rax	      9981	syntax.c	FUNCTION_162	IF_1
0x13805	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9981	syntax.c	FUNCTION_162	IF_1
0x13809	          0x4801c2	                            add rdx, rax	      9981	syntax.c	FUNCTION_162	IF_1
0x1380c	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      9981	syntax.c	FUNCTION_162	IF_1
0x1380f	            0x4898	                                    cdqe	      9981	syntax.c	FUNCTION_162	IF_1
0x13811	    0x8b0485000000	                  mov eax, dword [rax*4]	      9981	syntax.c	FUNCTION_162	IF_1
0x13818	          0x894214	             mov dword [rdx + 0x14], eax	      9981	syntax.c	FUNCTION_162	IF_1
0x1381b	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      9982	syntax.c	FUNCTION_162	IF_1
0x1381e	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      9982	syntax.c	FUNCTION_162	IF_1
0x13821	             0x1d0	                            add eax, edx	      9982	syntax.c	FUNCTION_162	IF_1
0x13823	          0x4863d0	                         movsxd rdx, eax	      9982	syntax.c	FUNCTION_162	IF_1
0x13826	          0x4889d0	                            mov rax, rdx	      9982	syntax.c	FUNCTION_162	IF_1
0x13829	        0x48c1e003	                              shl rax, 3	      9982	syntax.c	FUNCTION_162	IF_1
0x1382d	          0x4801d0	                            add rax, rdx	      9982	syntax.c	FUNCTION_162	IF_1
0x13830	          0x4801c0	                            add rax, rax	      9982	syntax.c	FUNCTION_162	IF_1
0x13833	          0x4801d0	                            add rax, rdx	      9982	syntax.c	FUNCTION_162	IF_1
0x13836	        0x48c1e003	                              shl rax, 3	      9982	syntax.c	FUNCTION_162	IF_1
0x1383a	          0x4889c2	                            mov rdx, rax	      9982	syntax.c	FUNCTION_162	IF_1
0x1383d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9982	syntax.c	FUNCTION_162	IF_1
0x13841	          0x4801c2	                            add rdx, rax	      9982	syntax.c	FUNCTION_162	IF_1
0x13844	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      9982	syntax.c	FUNCTION_162	IF_1
0x13847	            0x4898	                                    cdqe	      9982	syntax.c	FUNCTION_162	IF_1
0x13849	    0x8b0485000000	                  mov eax, dword [rax*4]	      9982	syntax.c	FUNCTION_162	IF_1
0x13850	          0x89422c	             mov dword [rdx + 0x2c], eax	      9982	syntax.c	FUNCTION_162	IF_1
0x13853	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      9984	syntax.c	FUNCTION_162	IF_1
0x13856	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      9984	syntax.c	FUNCTION_162	IF_1
0x13859	             0x1d0	                            add eax, edx	      9984	syntax.c	FUNCTION_162	IF_1
0x1385b	          0x4863d0	                         movsxd rdx, eax	      9984	syntax.c	FUNCTION_162	IF_1
0x1385e	          0x4889d0	                            mov rax, rdx	      9984	syntax.c	FUNCTION_162	IF_1
0x13861	        0x48c1e003	                              shl rax, 3	      9984	syntax.c	FUNCTION_162	IF_1
0x13865	          0x4801d0	                            add rax, rdx	      9984	syntax.c	FUNCTION_162	IF_1
0x13868	          0x4801c0	                            add rax, rax	      9984	syntax.c	FUNCTION_162	IF_1
0x1386b	          0x4801d0	                            add rax, rdx	      9984	syntax.c	FUNCTION_162	IF_1
0x1386e	        0x48c1e003	                              shl rax, 3	      9984	syntax.c	FUNCTION_162	IF_1
0x13872	          0x4889c2	                            mov rdx, rax	      9984	syntax.c	FUNCTION_162	IF_1
0x13875	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9984	syntax.c	FUNCTION_162	IF_1
0x13879	          0x4801c2	                            add rdx, rax	      9984	syntax.c	FUNCTION_162	IF_1
0x1387c	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      9984	syntax.c	FUNCTION_162	IF_1
0x1387f	            0x4898	                                    cdqe	      9984	syntax.c	FUNCTION_162	IF_1
0x13881	    0x8b0485000000	                  mov eax, dword [rax*4]	      9984	syntax.c	FUNCTION_162	IF_1
0x13888	          0x89426c	             mov dword [rdx + 0x6c], eax	      9984	syntax.c	FUNCTION_162	IF_1
0x1388b	            0xeb62	                           jmp 0x401392f	      9984	syntax.c	FUNCTION_162	IF_1
0x1388d	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_3
0x13890	          0x4863d0	                         movsxd rdx, eax	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_3
0x13893	          0x4889d0	                            mov rax, rdx	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_3
0x13896	        0x48c1e003	                              shl rax, 3	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_3
0x1389a	          0x4801d0	                            add rax, rdx	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_3
0x1389d	          0x4801c0	                            add rax, rax	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_3
0x138a0	          0x4801d0	                            add rax, rdx	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_3
0x138a3	        0x48c1e003	                              shl rax, 3	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_3
0x138a7	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_3
0x138ae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_3
0x138b2	        0x488d0c02	                    lea rcx, [rdx + rax]	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_3
0x138b6	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_3
0x138b9	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_3
0x138bc	             0x1d0	                            add eax, edx	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_3
0x138be	          0x4863d0	                         movsxd rdx, eax	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_3
0x138c1	          0x4889d0	                            mov rax, rdx	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_3
0x138c4	        0x48c1e003	                              shl rax, 3	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_3
0x138c8	          0x4801d0	                            add rax, rdx	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_3
0x138cb	          0x4801c0	                            add rax, rax	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_3
0x138ce	          0x4801d0	                            add rax, rdx	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_3
0x138d1	        0x48c1e003	                              shl rax, 3	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_3
0x138d5	          0x4889c2	                            mov rdx, rax	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_3
0x138d8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_3
0x138dc	          0x4801d0	                            add rax, rdx	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_3
0x138df	      0xba98000000	                           mov edx, 0x98	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_3
0x138e4	          0x4889ce	                            mov rsi, rcx	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_3
0x138e7	          0x4889c7	                            mov rdi, rax	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_3
0x138ea	      0xe800000000	                          call 0x401392f	      9988	syntax.c	FUNCTION_162	ELSE_1	CALL_3
0x138ef	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      9991	syntax.c	FUNCTION_162
0x138f2	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      9991	syntax.c	FUNCTION_162
0x138f5	             0x1d0	                            add eax, edx	      9991	syntax.c	FUNCTION_162
0x138f7	          0x4863d0	                         movsxd rdx, eax	      9991	syntax.c	FUNCTION_162
0x138fa	          0x4889d0	                            mov rax, rdx	      9991	syntax.c	FUNCTION_162
0x138fd	        0x48c1e003	                              shl rax, 3	      9991	syntax.c	FUNCTION_162
0x13901	          0x4801d0	                            add rax, rdx	      9991	syntax.c	FUNCTION_162
0x13904	          0x4801c0	                            add rax, rax	      9991	syntax.c	FUNCTION_162
0x13907	          0x4801d0	                            add rax, rdx	      9991	syntax.c	FUNCTION_162
0x1390a	        0x48c1e003	                              shl rax, 3	      9991	syntax.c	FUNCTION_162
0x1390e	          0x4889c2	                            mov rdx, rax	      9991	syntax.c	FUNCTION_162
0x13911	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9991	syntax.c	FUNCTION_162
0x13915	          0x4801d0	                            add rax, rdx	      9991	syntax.c	FUNCTION_162
0x13918	    0xc78088000000	               mov dword [rax + 0x88], 0	      9991	syntax.c	FUNCTION_162
0x13922	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      9993	syntax.c	FUNCTION_162
0x13925	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      9993	syntax.c	FUNCTION_162
0x13928	             0x1d0	                            add eax, edx	      9993	syntax.c	FUNCTION_162
0x1392a	          0x4863d0	                         movsxd rdx, eax	      9993	syntax.c	FUNCTION_162
0x1392d	          0x4889d0	                            mov rax, rdx	      9993	syntax.c	FUNCTION_162
0x13930	        0x48c1e003	                              shl rax, 3	      9993	syntax.c	FUNCTION_162
0x13934	          0x4801d0	                            add rax, rdx	      9993	syntax.c	FUNCTION_162
0x13937	          0x4801c0	                            add rax, rax	      9993	syntax.c	FUNCTION_162
0x1393a	          0x4801d0	                            add rax, rdx	      9993	syntax.c	FUNCTION_162
0x1393d	        0x48c1e003	                              shl rax, 3	      9993	syntax.c	FUNCTION_162
0x13941	          0x4889c2	                            mov rdx, rax	      9993	syntax.c	FUNCTION_162
0x13944	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9993	syntax.c	FUNCTION_162
0x13948	        0x488d0c02	                    lea rcx, [rdx + rax]	      9993	syntax.c	FUNCTION_162
0x1394c	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      9993	syntax.c	FUNCTION_162
0x1394f	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      9993	syntax.c	FUNCTION_162
0x13952	             0x1d0	                            add eax, edx	      9993	syntax.c	FUNCTION_162
0x13954	          0x4863d0	                         movsxd rdx, eax	      9993	syntax.c	FUNCTION_162
0x13957	          0x4889d0	                            mov rax, rdx	      9993	syntax.c	FUNCTION_162
0x1395a	        0x48c1e003	                              shl rax, 3	      9993	syntax.c	FUNCTION_162
0x1395e	          0x4801d0	                            add rax, rdx	      9993	syntax.c	FUNCTION_162
0x13961	          0x4801c0	                            add rax, rax	      9993	syntax.c	FUNCTION_162
0x13964	          0x4801d0	                            add rax, rdx	      9993	syntax.c	FUNCTION_162
0x13967	        0x48c1e003	                              shl rax, 3	      9993	syntax.c	FUNCTION_162
0x1396b	          0x4889c2	                            mov rdx, rax	      9993	syntax.c	FUNCTION_162
0x1396e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9993	syntax.c	FUNCTION_162
0x13972	          0x4801d0	                            add rax, rdx	      9993	syntax.c	FUNCTION_162
0x13975	          0x8b7014	            mov esi, dword [rax + 0x14] 	      9993	syntax.c	FUNCTION_162
0x13978	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9994	syntax.c	FUNCTION_162
0x1397b	          0x4863d0	                         movsxd rdx, eax	      9994	syntax.c	FUNCTION_162
0x1397e	          0x4889d0	                            mov rax, rdx	      9994	syntax.c	FUNCTION_162
0x13981	        0x48c1e003	                              shl rax, 3	      9994	syntax.c	FUNCTION_162
0x13985	          0x4801d0	                            add rax, rdx	      9994	syntax.c	FUNCTION_162
0x13988	          0x4801c0	                            add rax, rax	      9994	syntax.c	FUNCTION_162
0x1398b	          0x4801d0	                            add rax, rdx	      9994	syntax.c	FUNCTION_162
0x1398e	        0x48c1e003	                              shl rax, 3	      9994	syntax.c	FUNCTION_162
0x13992	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	      9994	syntax.c	FUNCTION_162
0x13999	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9994	syntax.c	FUNCTION_162
0x1399d	          0x4801d0	                            add rax, rdx	      9994	syntax.c	FUNCTION_162
0x139a0	          0x8b7814	            mov edi, dword [rax + 0x14] 	      9994	syntax.c	FUNCTION_162
0x139a3	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      9994	syntax.c	FUNCTION_162
0x139a6	          0x4863d0	                         movsxd rdx, eax	      9994	syntax.c	FUNCTION_162
0x139a9	          0x4889d0	                            mov rax, rdx	      9994	syntax.c	FUNCTION_162
0x139ac	        0x48c1e003	                              shl rax, 3	      9994	syntax.c	FUNCTION_162
0x139b0	          0x4801d0	                            add rax, rdx	      9994	syntax.c	FUNCTION_162
0x139b3	          0x4801c0	                            add rax, rax	      9994	syntax.c	FUNCTION_162
0x139b6	          0x4801d0	                            add rax, rdx	      9994	syntax.c	FUNCTION_162
0x139b9	        0x48c1e003	                              shl rax, 3	      9994	syntax.c	FUNCTION_162
0x139bd	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	      9994	syntax.c	FUNCTION_162
0x139c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9994	syntax.c	FUNCTION_162
0x139c8	          0x4801d0	                            add rax, rdx	      9994	syntax.c	FUNCTION_162
0x139cb	          0x8b4014	            mov eax, dword [rax + 0x14] 	      9994	syntax.c	FUNCTION_162
0x139ce	            0x31f8	                            xor eax, edi	      9994	syntax.c	FUNCTION_162
0x139d0	            0x31f0	                            xor eax, esi	      9993	syntax.c	FUNCTION_162
0x139d2	          0x894114	             mov dword [rcx + 0x14], eax	      9993	syntax.c	FUNCTION_162
0x139d5	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9995	syntax.c	FUNCTION_162	IF_2
0x139d8	          0x4863d0	                         movsxd rdx, eax	      9995	syntax.c	FUNCTION_162	IF_2
0x139db	          0x4889d0	                            mov rax, rdx	      9995	syntax.c	FUNCTION_162	IF_2
0x139de	        0x48c1e003	                              shl rax, 3	      9995	syntax.c	FUNCTION_162	IF_2
0x139e2	          0x4801d0	                            add rax, rdx	      9995	syntax.c	FUNCTION_162	IF_2
0x139e5	          0x4801c0	                            add rax, rax	      9995	syntax.c	FUNCTION_162	IF_2
0x139e8	          0x4801d0	                            add rax, rdx	      9995	syntax.c	FUNCTION_162	IF_2
0x139eb	        0x48c1e003	                              shl rax, 3	      9995	syntax.c	FUNCTION_162	IF_2
0x139ef	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	      9995	syntax.c	FUNCTION_162	IF_2
0x139f6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9995	syntax.c	FUNCTION_162	IF_2
0x139fa	          0x4801d0	                            add rax, rdx	      9995	syntax.c	FUNCTION_162	IF_2
0x139fd	        0x488b4818	            mov rcx, qword [rax + 0x18] 	      9995	syntax.c	FUNCTION_162	IF_2
0x13a01	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      9995	syntax.c	FUNCTION_162	IF_2
0x13a04	          0x4863d0	                         movsxd rdx, eax	      9995	syntax.c	FUNCTION_162	IF_2
0x13a07	          0x4889d0	                            mov rax, rdx	      9995	syntax.c	FUNCTION_162	IF_2
0x13a0a	        0x48c1e003	                              shl rax, 3	      9995	syntax.c	FUNCTION_162	IF_2
0x13a0e	          0x4801d0	                            add rax, rdx	      9995	syntax.c	FUNCTION_162	IF_2
0x13a11	          0x4801c0	                            add rax, rax	      9995	syntax.c	FUNCTION_162	IF_2
0x13a14	          0x4801d0	                            add rax, rdx	      9995	syntax.c	FUNCTION_162	IF_2
0x13a17	        0x48c1e003	                              shl rax, 3	      9995	syntax.c	FUNCTION_162	IF_2
0x13a1b	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	      9995	syntax.c	FUNCTION_162	IF_2
0x13a22	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9995	syntax.c	FUNCTION_162	IF_2
0x13a26	          0x4801d0	                            add rax, rdx	      9995	syntax.c	FUNCTION_162	IF_2
0x13a29	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9995	syntax.c	FUNCTION_162	IF_2
0x13a2d	          0x4839c1	                            cmp rcx, rax	      9995	syntax.c	FUNCTION_162	IF_2
0x13a30	            0x745a	                            je 0x4013acc	      9995	syntax.c	FUNCTION_162	IF_2
0x13a32	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      9996	syntax.c	FUNCTION_162	IF_2
0x13a35	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      9996	syntax.c	FUNCTION_162	IF_2
0x13a38	             0x1d0	                            add eax, edx	      9996	syntax.c	FUNCTION_162	IF_2
0x13a3a	          0x4863d0	                         movsxd rdx, eax	      9996	syntax.c	FUNCTION_162	IF_2
0x13a3d	          0x4889d0	                            mov rax, rdx	      9996	syntax.c	FUNCTION_162	IF_2
0x13a40	        0x48c1e003	                              shl rax, 3	      9996	syntax.c	FUNCTION_162	IF_2
0x13a44	          0x4801d0	                            add rax, rdx	      9996	syntax.c	FUNCTION_162	IF_2
0x13a47	          0x4801c0	                            add rax, rax	      9996	syntax.c	FUNCTION_162	IF_2
0x13a4a	          0x4801d0	                            add rax, rdx	      9996	syntax.c	FUNCTION_162	IF_2
0x13a4d	        0x48c1e003	                              shl rax, 3	      9996	syntax.c	FUNCTION_162	IF_2
0x13a51	          0x4889c2	                            mov rdx, rax	      9996	syntax.c	FUNCTION_162	IF_2
0x13a54	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9996	syntax.c	FUNCTION_162	IF_2
0x13a58	        0x488d0c02	                    lea rcx, [rdx + rax]	      9996	syntax.c	FUNCTION_162	IF_2
0x13a5c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9996	syntax.c	FUNCTION_162	IF_2
0x13a5f	          0x4863d0	                         movsxd rdx, eax	      9996	syntax.c	FUNCTION_162	IF_2
0x13a62	          0x4889d0	                            mov rax, rdx	      9996	syntax.c	FUNCTION_162	IF_2
0x13a65	        0x48c1e003	                              shl rax, 3	      9996	syntax.c	FUNCTION_162	IF_2
0x13a69	          0x4801d0	                            add rax, rdx	      9996	syntax.c	FUNCTION_162	IF_2
0x13a6c	          0x4801c0	                            add rax, rax	      9996	syntax.c	FUNCTION_162	IF_2
0x13a6f	          0x4801d0	                            add rax, rdx	      9996	syntax.c	FUNCTION_162	IF_2
0x13a72	        0x48c1e003	                              shl rax, 3	      9996	syntax.c	FUNCTION_162	IF_2
0x13a76	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	      9996	syntax.c	FUNCTION_162	IF_2
0x13a7d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9996	syntax.c	FUNCTION_162	IF_2
0x13a81	          0x4801d0	                            add rax, rdx	      9996	syntax.c	FUNCTION_162	IF_2
0x13a84	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9996	syntax.c	FUNCTION_162	IF_2
0x13a88	        0x48894118	             mov qword [rcx + 0x18], rax	      9996	syntax.c	FUNCTION_162	IF_2
0x13a8c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9997	syntax.c	FUNCTION_162	IF_3
0x13a8f	          0x4863d0	                         movsxd rdx, eax	      9997	syntax.c	FUNCTION_162	IF_3
0x13a92	          0x4889d0	                            mov rax, rdx	      9997	syntax.c	FUNCTION_162	IF_3
0x13a95	        0x48c1e003	                              shl rax, 3	      9997	syntax.c	FUNCTION_162	IF_3
0x13a99	          0x4801d0	                            add rax, rdx	      9997	syntax.c	FUNCTION_162	IF_3
0x13a9c	          0x4801c0	                            add rax, rax	      9997	syntax.c	FUNCTION_162	IF_3
0x13a9f	          0x4801d0	                            add rax, rdx	      9997	syntax.c	FUNCTION_162	IF_3
0x13aa2	        0x48c1e003	                              shl rax, 3	      9997	syntax.c	FUNCTION_162	IF_3
0x13aa6	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	      9997	syntax.c	FUNCTION_162	IF_3
0x13aad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9997	syntax.c	FUNCTION_162	IF_3
0x13ab1	          0x4801d0	                            add rax, rdx	      9997	syntax.c	FUNCTION_162	IF_3
0x13ab4	        0x488b4820	            mov rcx, qword [rax + 0x20] 	      9997	syntax.c	FUNCTION_162	IF_3
0x13ab8	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      9997	syntax.c	FUNCTION_162	IF_3
0x13abb	          0x4863d0	                         movsxd rdx, eax	      9997	syntax.c	FUNCTION_162	IF_3
0x13abe	          0x4889d0	                            mov rax, rdx	      9997	syntax.c	FUNCTION_162	IF_3
0x13ac1	        0x48c1e003	                              shl rax, 3	      9997	syntax.c	FUNCTION_162	IF_3
0x13ac5	          0x4801d0	                            add rax, rdx	      9997	syntax.c	FUNCTION_162	IF_3
0x13ac8	          0x4801c0	                            add rax, rax	      9997	syntax.c	FUNCTION_162	IF_3
0x13acb	          0x4801d0	                            add rax, rdx	      9997	syntax.c	FUNCTION_162	IF_3
0x13ace	        0x48c1e003	                              shl rax, 3	      9997	syntax.c	FUNCTION_162	IF_3
0x13ad2	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	      9997	syntax.c	FUNCTION_162	IF_3
0x13ad9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9997	syntax.c	FUNCTION_162	IF_3
0x13add	          0x4801d0	                            add rax, rdx	      9997	syntax.c	FUNCTION_162	IF_3
0x13ae0	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9997	syntax.c	FUNCTION_162	IF_3
0x13ae4	          0x4839c1	                            cmp rcx, rax	      9997	syntax.c	FUNCTION_162	IF_3
0x13ae7	            0x745a	                            je 0x4013b83	      9997	syntax.c	FUNCTION_162	IF_3
0x13ae9	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      9998	syntax.c	FUNCTION_162	IF_3
0x13aec	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      9998	syntax.c	FUNCTION_162	IF_3
0x13aef	             0x1d0	                            add eax, edx	      9998	syntax.c	FUNCTION_162	IF_3
0x13af1	          0x4863d0	                         movsxd rdx, eax	      9998	syntax.c	FUNCTION_162	IF_3
0x13af4	          0x4889d0	                            mov rax, rdx	      9998	syntax.c	FUNCTION_162	IF_3
0x13af7	        0x48c1e003	                              shl rax, 3	      9998	syntax.c	FUNCTION_162	IF_3
0x13afb	          0x4801d0	                            add rax, rdx	      9998	syntax.c	FUNCTION_162	IF_3
0x13afe	          0x4801c0	                            add rax, rax	      9998	syntax.c	FUNCTION_162	IF_3
0x13b01	          0x4801d0	                            add rax, rdx	      9998	syntax.c	FUNCTION_162	IF_3
0x13b04	        0x48c1e003	                              shl rax, 3	      9998	syntax.c	FUNCTION_162	IF_3
0x13b08	          0x4889c2	                            mov rdx, rax	      9998	syntax.c	FUNCTION_162	IF_3
0x13b0b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9998	syntax.c	FUNCTION_162	IF_3
0x13b0f	        0x488d0c02	                    lea rcx, [rdx + rax]	      9998	syntax.c	FUNCTION_162	IF_3
0x13b13	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      9998	syntax.c	FUNCTION_162	IF_3
0x13b16	          0x4863d0	                         movsxd rdx, eax	      9998	syntax.c	FUNCTION_162	IF_3
0x13b19	          0x4889d0	                            mov rax, rdx	      9998	syntax.c	FUNCTION_162	IF_3
0x13b1c	        0x48c1e003	                              shl rax, 3	      9998	syntax.c	FUNCTION_162	IF_3
0x13b20	          0x4801d0	                            add rax, rdx	      9998	syntax.c	FUNCTION_162	IF_3
0x13b23	          0x4801c0	                            add rax, rax	      9998	syntax.c	FUNCTION_162	IF_3
0x13b26	          0x4801d0	                            add rax, rdx	      9998	syntax.c	FUNCTION_162	IF_3
0x13b29	        0x48c1e003	                              shl rax, 3	      9998	syntax.c	FUNCTION_162	IF_3
0x13b2d	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	      9998	syntax.c	FUNCTION_162	IF_3
0x13b34	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9998	syntax.c	FUNCTION_162	IF_3
0x13b38	          0x4801d0	                            add rax, rdx	      9998	syntax.c	FUNCTION_162	IF_3
0x13b3b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9998	syntax.c	FUNCTION_162	IF_3
0x13b3f	        0x48894120	             mov qword [rcx + 0x20], rax	      9998	syntax.c	FUNCTION_162	IF_3
0x13b43	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      9999	syntax.c	FUNCTION_162
0x13b46	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      9999	syntax.c	FUNCTION_162
0x13b49	             0x1d0	                            add eax, edx	      9999	syntax.c	FUNCTION_162
0x13b4b	          0x4863d0	                         movsxd rdx, eax	      9999	syntax.c	FUNCTION_162
0x13b4e	          0x4889d0	                            mov rax, rdx	      9999	syntax.c	FUNCTION_162
0x13b51	        0x48c1e003	                              shl rax, 3	      9999	syntax.c	FUNCTION_162
0x13b55	          0x4801d0	                            add rax, rdx	      9999	syntax.c	FUNCTION_162
0x13b58	          0x4801c0	                            add rax, rax	      9999	syntax.c	FUNCTION_162
0x13b5b	          0x4801d0	                            add rax, rdx	      9999	syntax.c	FUNCTION_162
0x13b5e	        0x48c1e003	                              shl rax, 3	      9999	syntax.c	FUNCTION_162
0x13b62	          0x4889c2	                            mov rdx, rax	      9999	syntax.c	FUNCTION_162
0x13b65	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9999	syntax.c	FUNCTION_162
0x13b69	        0x488d0c02	                    lea rcx, [rdx + rax]	      9999	syntax.c	FUNCTION_162
0x13b6d	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      9999	syntax.c	FUNCTION_162
0x13b70	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      9999	syntax.c	FUNCTION_162
0x13b73	             0x1d0	                            add eax, edx	      9999	syntax.c	FUNCTION_162
0x13b75	          0x4863d0	                         movsxd rdx, eax	      9999	syntax.c	FUNCTION_162
0x13b78	          0x4889d0	                            mov rax, rdx	      9999	syntax.c	FUNCTION_162
0x13b7b	        0x48c1e003	                              shl rax, 3	      9999	syntax.c	FUNCTION_162
0x13b7f	          0x4801d0	                            add rax, rdx	      9999	syntax.c	FUNCTION_162
0x13b82	          0x4801c0	                            add rax, rax	      9999	syntax.c	FUNCTION_162
0x13b85	          0x4801d0	                            add rax, rdx	      9999	syntax.c	FUNCTION_162
0x13b88	        0x48c1e003	                              shl rax, 3	      9999	syntax.c	FUNCTION_162
0x13b8c	          0x4889c2	                            mov rdx, rax	      9999	syntax.c	FUNCTION_162
0x13b8f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9999	syntax.c	FUNCTION_162
0x13b93	          0x4801d0	                            add rax, rdx	      9999	syntax.c	FUNCTION_162
0x13b96	          0x8b702c	            mov esi, dword [rax + 0x2c] 	      9999	syntax.c	FUNCTION_162
0x13b99	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     10000	syntax.c	FUNCTION_162
0x13b9c	          0x4863d0	                         movsxd rdx, eax	     10000	syntax.c	FUNCTION_162
0x13b9f	          0x4889d0	                            mov rax, rdx	     10000	syntax.c	FUNCTION_162
0x13ba2	        0x48c1e003	                              shl rax, 3	     10000	syntax.c	FUNCTION_162
0x13ba6	          0x4801d0	                            add rax, rdx	     10000	syntax.c	FUNCTION_162
0x13ba9	          0x4801c0	                            add rax, rax	     10000	syntax.c	FUNCTION_162
0x13bac	          0x4801d0	                            add rax, rdx	     10000	syntax.c	FUNCTION_162
0x13baf	        0x48c1e003	                              shl rax, 3	     10000	syntax.c	FUNCTION_162
0x13bb3	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10000	syntax.c	FUNCTION_162
0x13bba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10000	syntax.c	FUNCTION_162
0x13bbe	          0x4801d0	                            add rax, rdx	     10000	syntax.c	FUNCTION_162
0x13bc1	          0x8b782c	            mov edi, dword [rax + 0x2c] 	     10000	syntax.c	FUNCTION_162
0x13bc4	          0x8b45d8	             mov eax, dword [rbp - 0x28]	     10000	syntax.c	FUNCTION_162
0x13bc7	          0x4863d0	                         movsxd rdx, eax	     10000	syntax.c	FUNCTION_162
0x13bca	          0x4889d0	                            mov rax, rdx	     10000	syntax.c	FUNCTION_162
0x13bcd	        0x48c1e003	                              shl rax, 3	     10000	syntax.c	FUNCTION_162
0x13bd1	          0x4801d0	                            add rax, rdx	     10000	syntax.c	FUNCTION_162
0x13bd4	          0x4801c0	                            add rax, rax	     10000	syntax.c	FUNCTION_162
0x13bd7	          0x4801d0	                            add rax, rdx	     10000	syntax.c	FUNCTION_162
0x13bda	        0x48c1e003	                              shl rax, 3	     10000	syntax.c	FUNCTION_162
0x13bde	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10000	syntax.c	FUNCTION_162
0x13be5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10000	syntax.c	FUNCTION_162
0x13be9	          0x4801d0	                            add rax, rdx	     10000	syntax.c	FUNCTION_162
0x13bec	          0x8b402c	            mov eax, dword [rax + 0x2c] 	     10000	syntax.c	FUNCTION_162
0x13bef	            0x31f8	                            xor eax, edi	     10000	syntax.c	FUNCTION_162
0x13bf1	            0x31f0	                            xor eax, esi	      9999	syntax.c	FUNCTION_162
0x13bf3	          0x89412c	             mov dword [rcx + 0x2c], eax	      9999	syntax.c	FUNCTION_162
0x13bf6	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     10001	syntax.c	FUNCTION_162	IF_4
0x13bf9	          0x4863d0	                         movsxd rdx, eax	     10001	syntax.c	FUNCTION_162	IF_4
0x13bfc	          0x4889d0	                            mov rax, rdx	     10001	syntax.c	FUNCTION_162	IF_4
0x13bff	        0x48c1e003	                              shl rax, 3	     10001	syntax.c	FUNCTION_162	IF_4
0x13c03	          0x4801d0	                            add rax, rdx	     10001	syntax.c	FUNCTION_162	IF_4
0x13c06	          0x4801c0	                            add rax, rax	     10001	syntax.c	FUNCTION_162	IF_4
0x13c09	          0x4801d0	                            add rax, rdx	     10001	syntax.c	FUNCTION_162	IF_4
0x13c0c	        0x48c1e003	                              shl rax, 3	     10001	syntax.c	FUNCTION_162	IF_4
0x13c10	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10001	syntax.c	FUNCTION_162	IF_4
0x13c17	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10001	syntax.c	FUNCTION_162	IF_4
0x13c1b	          0x4801d0	                            add rax, rdx	     10001	syntax.c	FUNCTION_162	IF_4
0x13c1e	          0x8b4834	            mov ecx, dword [rax + 0x34] 	     10001	syntax.c	FUNCTION_162	IF_4
0x13c21	          0x8b45d8	             mov eax, dword [rbp - 0x28]	     10001	syntax.c	FUNCTION_162	IF_4
0x13c24	          0x4863d0	                         movsxd rdx, eax	     10001	syntax.c	FUNCTION_162	IF_4
0x13c27	          0x4889d0	                            mov rax, rdx	     10001	syntax.c	FUNCTION_162	IF_4
0x13c2a	        0x48c1e003	                              shl rax, 3	     10001	syntax.c	FUNCTION_162	IF_4
0x13c2e	          0x4801d0	                            add rax, rdx	     10001	syntax.c	FUNCTION_162	IF_4
0x13c31	          0x4801c0	                            add rax, rax	     10001	syntax.c	FUNCTION_162	IF_4
0x13c34	          0x4801d0	                            add rax, rdx	     10001	syntax.c	FUNCTION_162	IF_4
0x13c37	        0x48c1e003	                              shl rax, 3	     10001	syntax.c	FUNCTION_162	IF_4
0x13c3b	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10001	syntax.c	FUNCTION_162	IF_4
0x13c42	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10001	syntax.c	FUNCTION_162	IF_4
0x13c46	          0x4801d0	                            add rax, rdx	     10001	syntax.c	FUNCTION_162	IF_4
0x13c49	          0x8b4034	            mov eax, dword [rax + 0x34] 	     10001	syntax.c	FUNCTION_162	IF_4
0x13c4c	            0x39c1	                            cmp ecx, eax	     10001	syntax.c	FUNCTION_162	IF_4
0x13c4e	            0x7458	                            je 0x4013ce8	     10001	syntax.c	FUNCTION_162	IF_4
0x13c50	          0x8b55d0	             mov edx, dword [rbp - 0x30]	     10002	syntax.c	FUNCTION_162	IF_4
0x13c53	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10002	syntax.c	FUNCTION_162	IF_4
0x13c56	             0x1d0	                            add eax, edx	     10002	syntax.c	FUNCTION_162	IF_4
0x13c58	          0x4863d0	                         movsxd rdx, eax	     10002	syntax.c	FUNCTION_162	IF_4
0x13c5b	          0x4889d0	                            mov rax, rdx	     10002	syntax.c	FUNCTION_162	IF_4
0x13c5e	        0x48c1e003	                              shl rax, 3	     10002	syntax.c	FUNCTION_162	IF_4
0x13c62	          0x4801d0	                            add rax, rdx	     10002	syntax.c	FUNCTION_162	IF_4
0x13c65	          0x4801c0	                            add rax, rax	     10002	syntax.c	FUNCTION_162	IF_4
0x13c68	          0x4801d0	                            add rax, rdx	     10002	syntax.c	FUNCTION_162	IF_4
0x13c6b	        0x48c1e003	                              shl rax, 3	     10002	syntax.c	FUNCTION_162	IF_4
0x13c6f	          0x4889c2	                            mov rdx, rax	     10002	syntax.c	FUNCTION_162	IF_4
0x13c72	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10002	syntax.c	FUNCTION_162	IF_4
0x13c76	        0x488d0c02	                    lea rcx, [rdx + rax]	     10002	syntax.c	FUNCTION_162	IF_4
0x13c7a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     10002	syntax.c	FUNCTION_162	IF_4
0x13c7d	          0x4863d0	                         movsxd rdx, eax	     10002	syntax.c	FUNCTION_162	IF_4
0x13c80	          0x4889d0	                            mov rax, rdx	     10002	syntax.c	FUNCTION_162	IF_4
0x13c83	        0x48c1e003	                              shl rax, 3	     10002	syntax.c	FUNCTION_162	IF_4
0x13c87	          0x4801d0	                            add rax, rdx	     10002	syntax.c	FUNCTION_162	IF_4
0x13c8a	          0x4801c0	                            add rax, rax	     10002	syntax.c	FUNCTION_162	IF_4
0x13c8d	          0x4801d0	                            add rax, rdx	     10002	syntax.c	FUNCTION_162	IF_4
0x13c90	        0x48c1e003	                              shl rax, 3	     10002	syntax.c	FUNCTION_162	IF_4
0x13c94	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10002	syntax.c	FUNCTION_162	IF_4
0x13c9b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10002	syntax.c	FUNCTION_162	IF_4
0x13c9f	          0x4801d0	                            add rax, rdx	     10002	syntax.c	FUNCTION_162	IF_4
0x13ca2	          0x8b4034	            mov eax, dword [rax + 0x34] 	     10002	syntax.c	FUNCTION_162	IF_4
0x13ca5	          0x894134	             mov dword [rcx + 0x34], eax	     10002	syntax.c	FUNCTION_162	IF_4
0x13ca8	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     10003	syntax.c	FUNCTION_162	IF_5
0x13cab	          0x4863d0	                         movsxd rdx, eax	     10003	syntax.c	FUNCTION_162	IF_5
0x13cae	          0x4889d0	                            mov rax, rdx	     10003	syntax.c	FUNCTION_162	IF_5
0x13cb1	        0x48c1e003	                              shl rax, 3	     10003	syntax.c	FUNCTION_162	IF_5
0x13cb5	          0x4801d0	                            add rax, rdx	     10003	syntax.c	FUNCTION_162	IF_5
0x13cb8	          0x4801c0	                            add rax, rax	     10003	syntax.c	FUNCTION_162	IF_5
0x13cbb	          0x4801d0	                            add rax, rdx	     10003	syntax.c	FUNCTION_162	IF_5
0x13cbe	        0x48c1e003	                              shl rax, 3	     10003	syntax.c	FUNCTION_162	IF_5
0x13cc2	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10003	syntax.c	FUNCTION_162	IF_5
0x13cc9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10003	syntax.c	FUNCTION_162	IF_5
0x13ccd	          0x4801d0	                            add rax, rdx	     10003	syntax.c	FUNCTION_162	IF_5
0x13cd0	          0x8b4838	            mov ecx, dword [rax + 0x38] 	     10003	syntax.c	FUNCTION_162	IF_5
0x13cd3	          0x8b45d8	             mov eax, dword [rbp - 0x28]	     10003	syntax.c	FUNCTION_162	IF_5
0x13cd6	          0x4863d0	                         movsxd rdx, eax	     10003	syntax.c	FUNCTION_162	IF_5
0x13cd9	          0x4889d0	                            mov rax, rdx	     10003	syntax.c	FUNCTION_162	IF_5
0x13cdc	        0x48c1e003	                              shl rax, 3	     10003	syntax.c	FUNCTION_162	IF_5
0x13ce0	          0x4801d0	                            add rax, rdx	     10003	syntax.c	FUNCTION_162	IF_5
0x13ce3	          0x4801c0	                            add rax, rax	     10003	syntax.c	FUNCTION_162	IF_5
0x13ce6	          0x4801d0	                            add rax, rdx	     10003	syntax.c	FUNCTION_162	IF_5
0x13ce9	        0x48c1e003	                              shl rax, 3	     10003	syntax.c	FUNCTION_162	IF_5
0x13ced	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10003	syntax.c	FUNCTION_162	IF_5
0x13cf4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10003	syntax.c	FUNCTION_162	IF_5
0x13cf8	          0x4801d0	                            add rax, rdx	     10003	syntax.c	FUNCTION_162	IF_5
0x13cfb	          0x8b4038	            mov eax, dword [rax + 0x38] 	     10003	syntax.c	FUNCTION_162	IF_5
0x13cfe	            0x39c1	                            cmp ecx, eax	     10003	syntax.c	FUNCTION_162	IF_5
0x13d00	            0x7458	                            je 0x4013d9a	     10003	syntax.c	FUNCTION_162	IF_5
0x13d02	          0x8b55d0	             mov edx, dword [rbp - 0x30]	     10004	syntax.c	FUNCTION_162	IF_5
0x13d05	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10004	syntax.c	FUNCTION_162	IF_5
0x13d08	             0x1d0	                            add eax, edx	     10004	syntax.c	FUNCTION_162	IF_5
0x13d0a	          0x4863d0	                         movsxd rdx, eax	     10004	syntax.c	FUNCTION_162	IF_5
0x13d0d	          0x4889d0	                            mov rax, rdx	     10004	syntax.c	FUNCTION_162	IF_5
0x13d10	        0x48c1e003	                              shl rax, 3	     10004	syntax.c	FUNCTION_162	IF_5
0x13d14	          0x4801d0	                            add rax, rdx	     10004	syntax.c	FUNCTION_162	IF_5
0x13d17	          0x4801c0	                            add rax, rax	     10004	syntax.c	FUNCTION_162	IF_5
0x13d1a	          0x4801d0	                            add rax, rdx	     10004	syntax.c	FUNCTION_162	IF_5
0x13d1d	        0x48c1e003	                              shl rax, 3	     10004	syntax.c	FUNCTION_162	IF_5
0x13d21	          0x4889c2	                            mov rdx, rax	     10004	syntax.c	FUNCTION_162	IF_5
0x13d24	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10004	syntax.c	FUNCTION_162	IF_5
0x13d28	        0x488d0c02	                    lea rcx, [rdx + rax]	     10004	syntax.c	FUNCTION_162	IF_5
0x13d2c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     10004	syntax.c	FUNCTION_162	IF_5
0x13d2f	          0x4863d0	                         movsxd rdx, eax	     10004	syntax.c	FUNCTION_162	IF_5
0x13d32	          0x4889d0	                            mov rax, rdx	     10004	syntax.c	FUNCTION_162	IF_5
0x13d35	        0x48c1e003	                              shl rax, 3	     10004	syntax.c	FUNCTION_162	IF_5
0x13d39	          0x4801d0	                            add rax, rdx	     10004	syntax.c	FUNCTION_162	IF_5
0x13d3c	          0x4801c0	                            add rax, rax	     10004	syntax.c	FUNCTION_162	IF_5
0x13d3f	          0x4801d0	                            add rax, rdx	     10004	syntax.c	FUNCTION_162	IF_5
0x13d42	        0x48c1e003	                              shl rax, 3	     10004	syntax.c	FUNCTION_162	IF_5
0x13d46	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10004	syntax.c	FUNCTION_162	IF_5
0x13d4d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10004	syntax.c	FUNCTION_162	IF_5
0x13d51	          0x4801d0	                            add rax, rdx	     10004	syntax.c	FUNCTION_162	IF_5
0x13d54	          0x8b4038	            mov eax, dword [rax + 0x38] 	     10004	syntax.c	FUNCTION_162	IF_5
0x13d57	          0x894138	             mov dword [rcx + 0x38], eax	     10004	syntax.c	FUNCTION_162	IF_5
0x13d5a	          0x8b55d0	             mov edx, dword [rbp - 0x30]	     10006	syntax.c	FUNCTION_162
0x13d5d	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10006	syntax.c	FUNCTION_162
0x13d60	             0x1d0	                            add eax, edx	     10006	syntax.c	FUNCTION_162
0x13d62	          0x4863d0	                         movsxd rdx, eax	     10006	syntax.c	FUNCTION_162
0x13d65	          0x4889d0	                            mov rax, rdx	     10006	syntax.c	FUNCTION_162
0x13d68	        0x48c1e003	                              shl rax, 3	     10006	syntax.c	FUNCTION_162
0x13d6c	          0x4801d0	                            add rax, rdx	     10006	syntax.c	FUNCTION_162
0x13d6f	          0x4801c0	                            add rax, rax	     10006	syntax.c	FUNCTION_162
0x13d72	          0x4801d0	                            add rax, rdx	     10006	syntax.c	FUNCTION_162
0x13d75	        0x48c1e003	                              shl rax, 3	     10006	syntax.c	FUNCTION_162
0x13d79	          0x4889c2	                            mov rdx, rax	     10006	syntax.c	FUNCTION_162
0x13d7c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10006	syntax.c	FUNCTION_162
0x13d80	        0x488d0c02	                    lea rcx, [rdx + rax]	     10006	syntax.c	FUNCTION_162
0x13d84	          0x8b55d0	             mov edx, dword [rbp - 0x30]	     10006	syntax.c	FUNCTION_162
0x13d87	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10006	syntax.c	FUNCTION_162
0x13d8a	             0x1d0	                            add eax, edx	     10006	syntax.c	FUNCTION_162
0x13d8c	          0x4863d0	                         movsxd rdx, eax	     10006	syntax.c	FUNCTION_162
0x13d8f	          0x4889d0	                            mov rax, rdx	     10006	syntax.c	FUNCTION_162
0x13d92	        0x48c1e003	                              shl rax, 3	     10006	syntax.c	FUNCTION_162
0x13d96	          0x4801d0	                            add rax, rdx	     10006	syntax.c	FUNCTION_162
0x13d99	          0x4801c0	                            add rax, rax	     10006	syntax.c	FUNCTION_162
0x13d9c	          0x4801d0	                            add rax, rdx	     10006	syntax.c	FUNCTION_162
0x13d9f	        0x48c1e003	                              shl rax, 3	     10006	syntax.c	FUNCTION_162
0x13da3	          0x4889c2	                            mov rdx, rax	     10006	syntax.c	FUNCTION_162
0x13da6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10006	syntax.c	FUNCTION_162
0x13daa	          0x4801d0	                            add rax, rdx	     10006	syntax.c	FUNCTION_162
0x13dad	          0x8b706c	            mov esi, dword [rax + 0x6c] 	     10006	syntax.c	FUNCTION_162
0x13db0	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     10007	syntax.c	FUNCTION_162
0x13db3	          0x4863d0	                         movsxd rdx, eax	     10007	syntax.c	FUNCTION_162
0x13db6	          0x4889d0	                            mov rax, rdx	     10007	syntax.c	FUNCTION_162
0x13db9	        0x48c1e003	                              shl rax, 3	     10007	syntax.c	FUNCTION_162
0x13dbd	          0x4801d0	                            add rax, rdx	     10007	syntax.c	FUNCTION_162
0x13dc0	          0x4801c0	                            add rax, rax	     10007	syntax.c	FUNCTION_162
0x13dc3	          0x4801d0	                            add rax, rdx	     10007	syntax.c	FUNCTION_162
0x13dc6	        0x48c1e003	                              shl rax, 3	     10007	syntax.c	FUNCTION_162
0x13dca	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10007	syntax.c	FUNCTION_162
0x13dd1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10007	syntax.c	FUNCTION_162
0x13dd5	          0x4801d0	                            add rax, rdx	     10007	syntax.c	FUNCTION_162
0x13dd8	          0x8b786c	            mov edi, dword [rax + 0x6c] 	     10007	syntax.c	FUNCTION_162
0x13ddb	          0x8b45d8	             mov eax, dword [rbp - 0x28]	     10007	syntax.c	FUNCTION_162
0x13dde	          0x4863d0	                         movsxd rdx, eax	     10007	syntax.c	FUNCTION_162
0x13de1	          0x4889d0	                            mov rax, rdx	     10007	syntax.c	FUNCTION_162
0x13de4	        0x48c1e003	                              shl rax, 3	     10007	syntax.c	FUNCTION_162
0x13de8	          0x4801d0	                            add rax, rdx	     10007	syntax.c	FUNCTION_162
0x13deb	          0x4801c0	                            add rax, rax	     10007	syntax.c	FUNCTION_162
0x13dee	          0x4801d0	                            add rax, rdx	     10007	syntax.c	FUNCTION_162
0x13df1	        0x48c1e003	                              shl rax, 3	     10007	syntax.c	FUNCTION_162
0x13df5	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10007	syntax.c	FUNCTION_162
0x13dfc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10007	syntax.c	FUNCTION_162
0x13e00	          0x4801d0	                            add rax, rdx	     10007	syntax.c	FUNCTION_162
0x13e03	          0x8b406c	            mov eax, dword [rax + 0x6c] 	     10007	syntax.c	FUNCTION_162
0x13e06	            0x31f8	                            xor eax, edi	     10007	syntax.c	FUNCTION_162
0x13e08	            0x31f0	                            xor eax, esi	     10006	syntax.c	FUNCTION_162
0x13e0a	          0x89416c	             mov dword [rcx + 0x6c], eax	     10006	syntax.c	FUNCTION_162
0x13e0d	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     10010	syntax.c	FUNCTION_162	IF_6
0x13e10	          0x4863d0	                         movsxd rdx, eax	     10010	syntax.c	FUNCTION_162	IF_6
0x13e13	          0x4889d0	                            mov rax, rdx	     10010	syntax.c	FUNCTION_162	IF_6
0x13e16	        0x48c1e003	                              shl rax, 3	     10010	syntax.c	FUNCTION_162	IF_6
0x13e1a	          0x4801d0	                            add rax, rdx	     10010	syntax.c	FUNCTION_162	IF_6
0x13e1d	          0x4801c0	                            add rax, rax	     10010	syntax.c	FUNCTION_162	IF_6
0x13e20	          0x4801d0	                            add rax, rdx	     10010	syntax.c	FUNCTION_162	IF_6
0x13e23	        0x48c1e003	                              shl rax, 3	     10010	syntax.c	FUNCTION_162	IF_6
0x13e27	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10010	syntax.c	FUNCTION_162	IF_6
0x13e2e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10010	syntax.c	FUNCTION_162	IF_6
0x13e32	          0x4801d0	                            add rax, rdx	     10010	syntax.c	FUNCTION_162	IF_6
0x13e35	        0x488b4840	            mov rcx, qword [rax + 0x40] 	     10010	syntax.c	FUNCTION_162	IF_6
0x13e39	          0x8b45d8	             mov eax, dword [rbp - 0x28]	     10010	syntax.c	FUNCTION_162	IF_6
0x13e3c	          0x4863d0	                         movsxd rdx, eax	     10010	syntax.c	FUNCTION_162	IF_6
0x13e3f	          0x4889d0	                            mov rax, rdx	     10010	syntax.c	FUNCTION_162	IF_6
0x13e42	        0x48c1e003	                              shl rax, 3	     10010	syntax.c	FUNCTION_162	IF_6
0x13e46	          0x4801d0	                            add rax, rdx	     10010	syntax.c	FUNCTION_162	IF_6
0x13e49	          0x4801c0	                            add rax, rax	     10010	syntax.c	FUNCTION_162	IF_6
0x13e4c	          0x4801d0	                            add rax, rdx	     10010	syntax.c	FUNCTION_162	IF_6
0x13e4f	        0x48c1e003	                              shl rax, 3	     10010	syntax.c	FUNCTION_162	IF_6
0x13e53	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10010	syntax.c	FUNCTION_162	IF_6
0x13e5a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10010	syntax.c	FUNCTION_162	IF_6
0x13e5e	          0x4801d0	                            add rax, rdx	     10010	syntax.c	FUNCTION_162	IF_6
0x13e61	        0x488b4040	            mov rax, qword [rax + 0x40] 	     10010	syntax.c	FUNCTION_162	IF_6
0x13e65	          0x4839c1	                            cmp rcx, rax	     10010	syntax.c	FUNCTION_162	IF_6
0x13e68	            0x745a	                            je 0x4013f04	     10010	syntax.c	FUNCTION_162	IF_6
0x13e6a	          0x8b55d0	             mov edx, dword [rbp - 0x30]	     10011	syntax.c	FUNCTION_162	IF_6
0x13e6d	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10011	syntax.c	FUNCTION_162	IF_6
0x13e70	             0x1d0	                            add eax, edx	     10011	syntax.c	FUNCTION_162	IF_6
0x13e72	          0x4863d0	                         movsxd rdx, eax	     10011	syntax.c	FUNCTION_162	IF_6
0x13e75	          0x4889d0	                            mov rax, rdx	     10011	syntax.c	FUNCTION_162	IF_6
0x13e78	        0x48c1e003	                              shl rax, 3	     10011	syntax.c	FUNCTION_162	IF_6
0x13e7c	          0x4801d0	                            add rax, rdx	     10011	syntax.c	FUNCTION_162	IF_6
0x13e7f	          0x4801c0	                            add rax, rax	     10011	syntax.c	FUNCTION_162	IF_6
0x13e82	          0x4801d0	                            add rax, rdx	     10011	syntax.c	FUNCTION_162	IF_6
0x13e85	        0x48c1e003	                              shl rax, 3	     10011	syntax.c	FUNCTION_162	IF_6
0x13e89	          0x4889c2	                            mov rdx, rax	     10011	syntax.c	FUNCTION_162	IF_6
0x13e8c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10011	syntax.c	FUNCTION_162	IF_6
0x13e90	        0x488d0c02	                    lea rcx, [rdx + rax]	     10011	syntax.c	FUNCTION_162	IF_6
0x13e94	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     10011	syntax.c	FUNCTION_162	IF_6
0x13e97	          0x4863d0	                         movsxd rdx, eax	     10011	syntax.c	FUNCTION_162	IF_6
0x13e9a	          0x4889d0	                            mov rax, rdx	     10011	syntax.c	FUNCTION_162	IF_6
0x13e9d	        0x48c1e003	                              shl rax, 3	     10011	syntax.c	FUNCTION_162	IF_6
0x13ea1	          0x4801d0	                            add rax, rdx	     10011	syntax.c	FUNCTION_162	IF_6
0x13ea4	          0x4801c0	                            add rax, rax	     10011	syntax.c	FUNCTION_162	IF_6
0x13ea7	          0x4801d0	                            add rax, rdx	     10011	syntax.c	FUNCTION_162	IF_6
0x13eaa	        0x48c1e003	                              shl rax, 3	     10011	syntax.c	FUNCTION_162	IF_6
0x13eae	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10011	syntax.c	FUNCTION_162	IF_6
0x13eb5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10011	syntax.c	FUNCTION_162	IF_6
0x13eb9	          0x4801d0	                            add rax, rdx	     10011	syntax.c	FUNCTION_162	IF_6
0x13ebc	        0x488b4040	            mov rax, qword [rax + 0x40] 	     10011	syntax.c	FUNCTION_162	IF_6
0x13ec0	        0x48894140	             mov qword [rcx + 0x40], rax	     10011	syntax.c	FUNCTION_162	IF_6
0x13ec4	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     10012	syntax.c	FUNCTION_162	IF_7
0x13ec7	          0x4863d0	                         movsxd rdx, eax	     10012	syntax.c	FUNCTION_162	IF_7
0x13eca	          0x4889d0	                            mov rax, rdx	     10012	syntax.c	FUNCTION_162	IF_7
0x13ecd	        0x48c1e003	                              shl rax, 3	     10012	syntax.c	FUNCTION_162	IF_7
0x13ed1	          0x4801d0	                            add rax, rdx	     10012	syntax.c	FUNCTION_162	IF_7
0x13ed4	          0x4801c0	                            add rax, rax	     10012	syntax.c	FUNCTION_162	IF_7
0x13ed7	          0x4801d0	                            add rax, rdx	     10012	syntax.c	FUNCTION_162	IF_7
0x13eda	        0x48c1e003	                              shl rax, 3	     10012	syntax.c	FUNCTION_162	IF_7
0x13ede	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10012	syntax.c	FUNCTION_162	IF_7
0x13ee5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10012	syntax.c	FUNCTION_162	IF_7
0x13ee9	          0x4801d0	                            add rax, rdx	     10012	syntax.c	FUNCTION_162	IF_7
0x13eec	        0x488b4848	            mov rcx, qword [rax + 0x48] 	     10012	syntax.c	FUNCTION_162	IF_7
0x13ef0	          0x8b45d8	             mov eax, dword [rbp - 0x28]	     10012	syntax.c	FUNCTION_162	IF_7
0x13ef3	          0x4863d0	                         movsxd rdx, eax	     10012	syntax.c	FUNCTION_162	IF_7
0x13ef6	          0x4889d0	                            mov rax, rdx	     10012	syntax.c	FUNCTION_162	IF_7
0x13ef9	        0x48c1e003	                              shl rax, 3	     10012	syntax.c	FUNCTION_162	IF_7
0x13efd	          0x4801d0	                            add rax, rdx	     10012	syntax.c	FUNCTION_162	IF_7
0x13f00	          0x4801c0	                            add rax, rax	     10012	syntax.c	FUNCTION_162	IF_7
0x13f03	          0x4801d0	                            add rax, rdx	     10012	syntax.c	FUNCTION_162	IF_7
0x13f06	        0x48c1e003	                              shl rax, 3	     10012	syntax.c	FUNCTION_162	IF_7
0x13f0a	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10012	syntax.c	FUNCTION_162	IF_7
0x13f11	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10012	syntax.c	FUNCTION_162	IF_7
0x13f15	          0x4801d0	                            add rax, rdx	     10012	syntax.c	FUNCTION_162	IF_7
0x13f18	        0x488b4048	            mov rax, qword [rax + 0x48] 	     10012	syntax.c	FUNCTION_162	IF_7
0x13f1c	          0x4839c1	                            cmp rcx, rax	     10012	syntax.c	FUNCTION_162	IF_7
0x13f1f	            0x745a	                            je 0x4013fbb	     10012	syntax.c	FUNCTION_162	IF_7
0x13f21	          0x8b55d0	             mov edx, dword [rbp - 0x30]	     10013	syntax.c	FUNCTION_162	IF_7
0x13f24	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10013	syntax.c	FUNCTION_162	IF_7
0x13f27	             0x1d0	                            add eax, edx	     10013	syntax.c	FUNCTION_162	IF_7
0x13f29	          0x4863d0	                         movsxd rdx, eax	     10013	syntax.c	FUNCTION_162	IF_7
0x13f2c	          0x4889d0	                            mov rax, rdx	     10013	syntax.c	FUNCTION_162	IF_7
0x13f2f	        0x48c1e003	                              shl rax, 3	     10013	syntax.c	FUNCTION_162	IF_7
0x13f33	          0x4801d0	                            add rax, rdx	     10013	syntax.c	FUNCTION_162	IF_7
0x13f36	          0x4801c0	                            add rax, rax	     10013	syntax.c	FUNCTION_162	IF_7
0x13f39	          0x4801d0	                            add rax, rdx	     10013	syntax.c	FUNCTION_162	IF_7
0x13f3c	        0x48c1e003	                              shl rax, 3	     10013	syntax.c	FUNCTION_162	IF_7
0x13f40	          0x4889c2	                            mov rdx, rax	     10013	syntax.c	FUNCTION_162	IF_7
0x13f43	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10013	syntax.c	FUNCTION_162	IF_7
0x13f47	        0x488d0c02	                    lea rcx, [rdx + rax]	     10013	syntax.c	FUNCTION_162	IF_7
0x13f4b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     10013	syntax.c	FUNCTION_162	IF_7
0x13f4e	          0x4863d0	                         movsxd rdx, eax	     10013	syntax.c	FUNCTION_162	IF_7
0x13f51	          0x4889d0	                            mov rax, rdx	     10013	syntax.c	FUNCTION_162	IF_7
0x13f54	        0x48c1e003	                              shl rax, 3	     10013	syntax.c	FUNCTION_162	IF_7
0x13f58	          0x4801d0	                            add rax, rdx	     10013	syntax.c	FUNCTION_162	IF_7
0x13f5b	          0x4801c0	                            add rax, rax	     10013	syntax.c	FUNCTION_162	IF_7
0x13f5e	          0x4801d0	                            add rax, rdx	     10013	syntax.c	FUNCTION_162	IF_7
0x13f61	        0x48c1e003	                              shl rax, 3	     10013	syntax.c	FUNCTION_162	IF_7
0x13f65	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10013	syntax.c	FUNCTION_162	IF_7
0x13f6c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10013	syntax.c	FUNCTION_162	IF_7
0x13f70	          0x4801d0	                            add rax, rdx	     10013	syntax.c	FUNCTION_162	IF_7
0x13f73	        0x488b4048	            mov rax, qword [rax + 0x48] 	     10013	syntax.c	FUNCTION_162	IF_7
0x13f77	        0x48894148	             mov qword [rcx + 0x48], rax	     10013	syntax.c	FUNCTION_162	IF_7
0x13f7b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     10014	syntax.c	FUNCTION_162	IF_8
0x13f7e	          0x4863d0	                         movsxd rdx, eax	     10014	syntax.c	FUNCTION_162	IF_8
0x13f81	          0x4889d0	                            mov rax, rdx	     10014	syntax.c	FUNCTION_162	IF_8
0x13f84	        0x48c1e003	                              shl rax, 3	     10014	syntax.c	FUNCTION_162	IF_8
0x13f88	          0x4801d0	                            add rax, rdx	     10014	syntax.c	FUNCTION_162	IF_8
0x13f8b	          0x4801c0	                            add rax, rax	     10014	syntax.c	FUNCTION_162	IF_8
0x13f8e	          0x4801d0	                            add rax, rdx	     10014	syntax.c	FUNCTION_162	IF_8
0x13f91	        0x48c1e003	                              shl rax, 3	     10014	syntax.c	FUNCTION_162	IF_8
0x13f95	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10014	syntax.c	FUNCTION_162	IF_8
0x13f9c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10014	syntax.c	FUNCTION_162	IF_8
0x13fa0	          0x4801d0	                            add rax, rdx	     10014	syntax.c	FUNCTION_162	IF_8
0x13fa3	        0x488b4850	            mov rcx, qword [rax + 0x50] 	     10014	syntax.c	FUNCTION_162	IF_8
0x13fa7	          0x8b45d8	             mov eax, dword [rbp - 0x28]	     10014	syntax.c	FUNCTION_162	IF_8
0x13faa	          0x4863d0	                         movsxd rdx, eax	     10014	syntax.c	FUNCTION_162	IF_8
0x13fad	          0x4889d0	                            mov rax, rdx	     10014	syntax.c	FUNCTION_162	IF_8
0x13fb0	        0x48c1e003	                              shl rax, 3	     10014	syntax.c	FUNCTION_162	IF_8
0x13fb4	          0x4801d0	                            add rax, rdx	     10014	syntax.c	FUNCTION_162	IF_8
0x13fb7	          0x4801c0	                            add rax, rax	     10014	syntax.c	FUNCTION_162	IF_8
0x13fba	          0x4801d0	                            add rax, rdx	     10014	syntax.c	FUNCTION_162	IF_8
0x13fbd	        0x48c1e003	                              shl rax, 3	     10014	syntax.c	FUNCTION_162	IF_8
0x13fc1	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10014	syntax.c	FUNCTION_162	IF_8
0x13fc8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10014	syntax.c	FUNCTION_162	IF_8
0x13fcc	          0x4801d0	                            add rax, rdx	     10014	syntax.c	FUNCTION_162	IF_8
0x13fcf	        0x488b4050	            mov rax, qword [rax + 0x50] 	     10014	syntax.c	FUNCTION_162	IF_8
0x13fd3	          0x4839c1	                            cmp rcx, rax	     10014	syntax.c	FUNCTION_162	IF_8
0x13fd6	            0x745a	                            je 0x4014072	     10014	syntax.c	FUNCTION_162	IF_8
0x13fd8	          0x8b55d0	             mov edx, dword [rbp - 0x30]	     10015	syntax.c	FUNCTION_162	IF_8
0x13fdb	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10015	syntax.c	FUNCTION_162	IF_8
0x13fde	             0x1d0	                            add eax, edx	     10015	syntax.c	FUNCTION_162	IF_8
0x13fe0	          0x4863d0	                         movsxd rdx, eax	     10015	syntax.c	FUNCTION_162	IF_8
0x13fe3	          0x4889d0	                            mov rax, rdx	     10015	syntax.c	FUNCTION_162	IF_8
0x13fe6	        0x48c1e003	                              shl rax, 3	     10015	syntax.c	FUNCTION_162	IF_8
0x13fea	          0x4801d0	                            add rax, rdx	     10015	syntax.c	FUNCTION_162	IF_8
0x13fed	          0x4801c0	                            add rax, rax	     10015	syntax.c	FUNCTION_162	IF_8
0x13ff0	          0x4801d0	                            add rax, rdx	     10015	syntax.c	FUNCTION_162	IF_8
0x13ff3	        0x48c1e003	                              shl rax, 3	     10015	syntax.c	FUNCTION_162	IF_8
0x13ff7	          0x4889c2	                            mov rdx, rax	     10015	syntax.c	FUNCTION_162	IF_8
0x13ffa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10015	syntax.c	FUNCTION_162	IF_8
0x13ffe	        0x488d0c02	                    lea rcx, [rdx + rax]	     10015	syntax.c	FUNCTION_162	IF_8
0x14002	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     10015	syntax.c	FUNCTION_162	IF_8
0x14005	          0x4863d0	                         movsxd rdx, eax	     10015	syntax.c	FUNCTION_162	IF_8
0x14008	          0x4889d0	                            mov rax, rdx	     10015	syntax.c	FUNCTION_162	IF_8
0x1400b	        0x48c1e003	                              shl rax, 3	     10015	syntax.c	FUNCTION_162	IF_8
0x1400f	          0x4801d0	                            add rax, rdx	     10015	syntax.c	FUNCTION_162	IF_8
0x14012	          0x4801c0	                            add rax, rax	     10015	syntax.c	FUNCTION_162	IF_8
0x14015	          0x4801d0	                            add rax, rdx	     10015	syntax.c	FUNCTION_162	IF_8
0x14018	        0x48c1e003	                              shl rax, 3	     10015	syntax.c	FUNCTION_162	IF_8
0x1401c	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10015	syntax.c	FUNCTION_162	IF_8
0x14023	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10015	syntax.c	FUNCTION_162	IF_8
0x14027	          0x4801d0	                            add rax, rdx	     10015	syntax.c	FUNCTION_162	IF_8
0x1402a	        0x488b4050	            mov rax, qword [rax + 0x50] 	     10015	syntax.c	FUNCTION_162	IF_8
0x1402e	        0x48894150	             mov qword [rcx + 0x50], rax	     10015	syntax.c	FUNCTION_162	IF_8
0x14032	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     10016	syntax.c	FUNCTION_162	IF_9
0x14035	          0x4863d0	                         movsxd rdx, eax	     10016	syntax.c	FUNCTION_162	IF_9
0x14038	          0x4889d0	                            mov rax, rdx	     10016	syntax.c	FUNCTION_162	IF_9
0x1403b	        0x48c1e003	                              shl rax, 3	     10016	syntax.c	FUNCTION_162	IF_9
0x1403f	          0x4801d0	                            add rax, rdx	     10016	syntax.c	FUNCTION_162	IF_9
0x14042	          0x4801c0	                            add rax, rax	     10016	syntax.c	FUNCTION_162	IF_9
0x14045	          0x4801d0	                            add rax, rdx	     10016	syntax.c	FUNCTION_162	IF_9
0x14048	        0x48c1e003	                              shl rax, 3	     10016	syntax.c	FUNCTION_162	IF_9
0x1404c	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10016	syntax.c	FUNCTION_162	IF_9
0x14053	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10016	syntax.c	FUNCTION_162	IF_9
0x14057	          0x4801d0	                            add rax, rdx	     10016	syntax.c	FUNCTION_162	IF_9
0x1405a	        0x488b4858	            mov rcx, qword [rax + 0x58] 	     10016	syntax.c	FUNCTION_162	IF_9
0x1405e	          0x8b45d8	             mov eax, dword [rbp - 0x28]	     10016	syntax.c	FUNCTION_162	IF_9
0x14061	          0x4863d0	                         movsxd rdx, eax	     10016	syntax.c	FUNCTION_162	IF_9
0x14064	          0x4889d0	                            mov rax, rdx	     10016	syntax.c	FUNCTION_162	IF_9
0x14067	        0x48c1e003	                              shl rax, 3	     10016	syntax.c	FUNCTION_162	IF_9
0x1406b	          0x4801d0	                            add rax, rdx	     10016	syntax.c	FUNCTION_162	IF_9
0x1406e	          0x4801c0	                            add rax, rax	     10016	syntax.c	FUNCTION_162	IF_9
0x14071	          0x4801d0	                            add rax, rdx	     10016	syntax.c	FUNCTION_162	IF_9
0x14074	        0x48c1e003	                              shl rax, 3	     10016	syntax.c	FUNCTION_162	IF_9
0x14078	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10016	syntax.c	FUNCTION_162	IF_9
0x1407f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10016	syntax.c	FUNCTION_162	IF_9
0x14083	          0x4801d0	                            add rax, rdx	     10016	syntax.c	FUNCTION_162	IF_9
0x14086	        0x488b4058	            mov rax, qword [rax + 0x58] 	     10016	syntax.c	FUNCTION_162	IF_9
0x1408a	          0x4839c1	                            cmp rcx, rax	     10016	syntax.c	FUNCTION_162	IF_9
0x1408d	            0x745a	                            je 0x4014129	     10016	syntax.c	FUNCTION_162	IF_9
0x1408f	          0x8b55d0	             mov edx, dword [rbp - 0x30]	     10017	syntax.c	FUNCTION_162	IF_9
0x14092	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10017	syntax.c	FUNCTION_162	IF_9
0x14095	             0x1d0	                            add eax, edx	     10017	syntax.c	FUNCTION_162	IF_9
0x14097	          0x4863d0	                         movsxd rdx, eax	     10017	syntax.c	FUNCTION_162	IF_9
0x1409a	          0x4889d0	                            mov rax, rdx	     10017	syntax.c	FUNCTION_162	IF_9
0x1409d	        0x48c1e003	                              shl rax, 3	     10017	syntax.c	FUNCTION_162	IF_9
0x140a1	          0x4801d0	                            add rax, rdx	     10017	syntax.c	FUNCTION_162	IF_9
0x140a4	          0x4801c0	                            add rax, rax	     10017	syntax.c	FUNCTION_162	IF_9
0x140a7	          0x4801d0	                            add rax, rdx	     10017	syntax.c	FUNCTION_162	IF_9
0x140aa	        0x48c1e003	                              shl rax, 3	     10017	syntax.c	FUNCTION_162	IF_9
0x140ae	          0x4889c2	                            mov rdx, rax	     10017	syntax.c	FUNCTION_162	IF_9
0x140b1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10017	syntax.c	FUNCTION_162	IF_9
0x140b5	        0x488d0c02	                    lea rcx, [rdx + rax]	     10017	syntax.c	FUNCTION_162	IF_9
0x140b9	          0x8b45dc	             mov eax, dword [rbp - 0x24]	     10017	syntax.c	FUNCTION_162	IF_9
0x140bc	          0x4863d0	                         movsxd rdx, eax	     10017	syntax.c	FUNCTION_162	IF_9
0x140bf	          0x4889d0	                            mov rax, rdx	     10017	syntax.c	FUNCTION_162	IF_9
0x140c2	        0x48c1e003	                              shl rax, 3	     10017	syntax.c	FUNCTION_162	IF_9
0x140c6	          0x4801d0	                            add rax, rdx	     10017	syntax.c	FUNCTION_162	IF_9
0x140c9	          0x4801c0	                            add rax, rax	     10017	syntax.c	FUNCTION_162	IF_9
0x140cc	          0x4801d0	                            add rax, rdx	     10017	syntax.c	FUNCTION_162	IF_9
0x140cf	        0x48c1e003	                              shl rax, 3	     10017	syntax.c	FUNCTION_162	IF_9
0x140d3	    0x488d9068ffff	                   lea rdx, [rax - 0x98]	     10017	syntax.c	FUNCTION_162	IF_9
0x140da	        0x488b45e8	             mov rax, qword [rbp - 0x18]	     10017	syntax.c	FUNCTION_162	IF_9
0x140de	          0x4801d0	                            add rax, rdx	     10017	syntax.c	FUNCTION_162	IF_9
0x140e1	        0x488b4058	            mov rax, qword [rax + 0x58] 	     10017	syntax.c	FUNCTION_162	IF_9
0x140e5	        0x48894158	             mov qword [rcx + 0x58], rax	     10017	syntax.c	FUNCTION_162	IF_9
0x140e9	          0x8b55d0	             mov edx, dword [rbp - 0x30]	     10023	syntax.c	FUNCTION_162
0x140ec	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10023	syntax.c	FUNCTION_162
0x140ef	             0x1d0	                            add eax, edx	     10023	syntax.c	FUNCTION_162
0x140f1	          0x83c001	                              add eax, 1	     10023	syntax.c	FUNCTION_162
0x140f4	    0x890500000000	            mov dword [0x0401413a], eax 	     10023	syntax.c	FUNCTION_162
0x140fa	          0x8b55d0	             mov edx, dword [rbp - 0x30]	     10024	syntax.c	FUNCTION_162	CALL_4
0x140fd	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10024	syntax.c	FUNCTION_162	CALL_4
0x14100	             0x1d0	                            add eax, edx	     10024	syntax.c	FUNCTION_162	CALL_4
0x14102	            0x89c7	                            mov edi, eax	     10024	syntax.c	FUNCTION_162	CALL_4
0x14104	      0xe871e9ffff	                    call sym.set_hl_attr	     10024	syntax.c	FUNCTION_162	CALL_4
0x14109	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10025	syntax.c	FUNCTION_162	CALL_5
0x1410c	            0x4898	                                    cdqe	     10025	syntax.c	FUNCTION_162	CALL_5
0x1410e	    0x488d14850000	                        lea rdx, [rax*4]	     10025	syntax.c	FUNCTION_162	CALL_5
0x14116	        0x488b4510	            mov rax, qword [rbp + 0x10] 	     10025	syntax.c	FUNCTION_162	CALL_5
0x1411a	        0x488d1c02	                    lea rbx, [rdx + rax]	     10025	syntax.c	FUNCTION_162	CALL_5
0x1411e	          0x8b55d0	             mov edx, dword [rbp - 0x30]	     10025	syntax.c	FUNCTION_162	CALL_5
0x14121	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10025	syntax.c	FUNCTION_162	CALL_5
0x14124	             0x1d0	                            add eax, edx	     10025	syntax.c	FUNCTION_162	CALL_5
0x14126	          0x83c001	                              add eax, 1	     10025	syntax.c	FUNCTION_162	CALL_5
0x14129	            0x89c7	                            mov edi, eax	     10025	syntax.c	FUNCTION_162	CALL_5
0x1412b	      0xe800000000	                          call 0x4014170	     10025	syntax.c	FUNCTION_162	CALL_5
0x14130	            0x8903	                    mov dword [rbx], eax	     10025	syntax.c	FUNCTION_162	CALL_5
0x14132	              0x90	                                     nop	     10026	syntax.c	FUNCTION_162
0x14133	        0x4883c438	                           add rsp, 0x38	     10026	syntax.c	FUNCTION_162
0x14137	              0x5b	                                 pop rbx	     10026	syntax.c	FUNCTION_162
0x14138	              0x5d	                                 pop rbp	     10026	syntax.c	FUNCTION_162
0x14139	              0xc3	                                     ret	     10026	syntax.c	FUNCTION_162
init_syn_patterns	FOR,0:DO,0:IF,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,0	11
0xaf8d	              0x55	                                push rbp	      5727	syntax.c	FUNCTION_89
0xaf8e	          0x4889e5	                            mov rbp, rsp	      5727	syntax.c	FUNCTION_89
0xaf91	    0x488b05000000	            mov rax, qword [0x0400afd8] 	      5728	syntax.c	FUNCTION_89
0xaf98	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5728	syntax.c	FUNCTION_89
0xaf9c	    0xc78068020000	          mov dword [rax + 0x268], 0xa0 	      5728	syntax.c	FUNCTION_89
0xafa6	    0x488b05000000	            mov rax, qword [0x0400afed] 	      5729	syntax.c	FUNCTION_89
0xafad	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5729	syntax.c	FUNCTION_89
0xafb1	    0xc7806c020000	            mov dword [rax + 0x26c], 0xa	      5729	syntax.c	FUNCTION_89
0xafbb	              0x90	                                     nop	      5730	syntax.c	FUNCTION_89
0xafbc	              0x5d	                                 pop rbp	      5730	syntax.c	FUNCTION_89
0xafbd	              0xc3	                                     ret	      5730	syntax.c	FUNCTION_89
syn_cmd_sync	FOR,0:DO,0:IF,27:SWITCH,0:functions,0:ELSE,13:WHILE,1:CALL,41	419
0xb367	              0x55	                                push rbp	      5841	syntax.c	FUNCTION_91
0xb368	          0x4889e5	                            mov rbp, rsp	      5841	syntax.c	FUNCTION_91
0xb36b	              0x53	                                push rbx	      5841	syntax.c	FUNCTION_91
0xb36c	        0x4883ec58	                           sub rsp, 0x58	      5841	syntax.c	FUNCTION_91
0xb370	        0x48897da8	             mov qword [rbp - 0x58], rdi	      5841	syntax.c	FUNCTION_91
0xb374	          0x8975a4	             mov dword [rbp - 0x5c], esi	      5841	syntax.c	FUNCTION_91
0xb377	    0x64488b042528	                mov rax, qword fs:[0x28]	      5841	syntax.c	FUNCTION_91
0xb380	        0x488945e8	             mov qword [rbp - 0x18], rax	      5841	syntax.c	FUNCTION_91
0xb384	            0x31c0	                            xor eax, eax	      5841	syntax.c	FUNCTION_91
0xb386	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5842	syntax.c	FUNCTION_91
0xb38a	          0x488b00	                    mov rax, qword [rax]	      5842	syntax.c	FUNCTION_91
0xb38d	        0x488945c0	             mov qword [rbp - 0x40], rax	      5842	syntax.c	FUNCTION_91
0xb391	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      5844	syntax.c	FUNCTION_91
0xb399	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      5846	syntax.c	FUNCTION_91
0xb3a0	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      5847	syntax.c	FUNCTION_91
0xb3a7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5851	syntax.c	FUNCTION_91	IF_1	CALL_1
0xb3ab	           0xfb600	                   movzx eax, byte [rax]	      5851	syntax.c	FUNCTION_91	IF_1	CALL_1
0xb3ae	           0xfb6c0	                           movzx eax, al	      5851	syntax.c	FUNCTION_91	IF_1	CALL_1
0xb3b1	            0x89c7	                            mov edi, eax	      5851	syntax.c	FUNCTION_91	IF_1	CALL_1
0xb3b3	      0xe800000000	                          call 0x400b3f8	      5851	syntax.c	FUNCTION_91	IF_1	CALL_1
0xb3b8	            0x85c0	                           test eax, eax	      5851	syntax.c	FUNCTION_91	IF_1	CALL_1
0xb3ba	     0xf84cc050000	                            je 0x400b9cc	      5851	syntax.c	FUNCTION_91	IF_1	CALL_1
0xb3c0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5853	syntax.c	FUNCTION_91	IF_1	CALL_2
0xb3c4	      0xbe01000000	                              mov esi, 1	      5853	syntax.c	FUNCTION_91	IF_1	CALL_2
0xb3c9	          0x4889c7	                            mov rdi, rax	      5853	syntax.c	FUNCTION_91	IF_1	CALL_2
0xb3cc	      0xe8e3baffff	                   call sym.syn_cmd_list	      5853	syntax.c	FUNCTION_91	IF_1	CALL_2
0xb3d1	      0xe939060000	                           jmp 0x400ba4f	      5853	syntax.c	FUNCTION_91	IF_1	CALL_2
0xb3d6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5859	syntax.c	FUNCTION_91	WHILE_1	CALL_4
0xb3da	          0x4889c7	                            mov rdi, rax	      5859	syntax.c	FUNCTION_91	WHILE_1	CALL_4
0xb3dd	      0xe800000000	                          call 0x400b422	      5859	syntax.c	FUNCTION_91	WHILE_1	CALL_4
0xb3e2	        0x488945b8	             mov qword [rbp - 0x48], rax	      5859	syntax.c	FUNCTION_91	WHILE_1	CALL_4
0xb3e6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5860	syntax.c	FUNCTION_91	WHILE_1	CALL_5
0xb3ea	          0x4889c7	                            mov rdi, rax	      5860	syntax.c	FUNCTION_91	WHILE_1	CALL_5
0xb3ed	      0xe800000000	                          call 0x400b432	      5860	syntax.c	FUNCTION_91	WHILE_1	CALL_5
0xb3f2	        0x488945d0	             mov qword [rbp - 0x30], rax	      5860	syntax.c	FUNCTION_91	WHILE_1	CALL_5
0xb3f6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5861	syntax.c	FUNCTION_91	WHILE_1	CALL_6
0xb3fa	          0x4889c7	                            mov rdi, rax	      5861	syntax.c	FUNCTION_91	WHILE_1	CALL_6
0xb3fd	      0xe800000000	                          call 0x400b442	      5861	syntax.c	FUNCTION_91	WHILE_1	CALL_6
0xb402	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0xb406	          0x4889c2	                            mov rdx, rax	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0xb409	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0xb40d	          0x4829c2	                            sub rdx, rax	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0xb410	          0x4889d0	                            mov rax, rdx	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0xb413	            0x89c2	                            mov edx, eax	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0xb415	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0xb419	            0x89d6	                            mov esi, edx	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0xb41b	          0x4889c7	                            mov rdi, rax	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0xb41e	      0xe800000000	                          call 0x400b463	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0xb423	        0x488945c8	             mov qword [rbp - 0x38], rax	      5862	syntax.c	FUNCTION_91	WHILE_1	CALL_7
0xb427	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5863	syntax.c	FUNCTION_91	WHILE_1	IF_2	CALL_8
0xb42b	      0xbe00000000	                              mov esi, 0	      5863	syntax.c	FUNCTION_91	WHILE_1	IF_2	CALL_8
0xb430	          0x4889c7	                            mov rdi, rax	      5863	syntax.c	FUNCTION_91	WHILE_1	IF_2	CALL_8
0xb433	      0xe800000000	                          call 0x400b478	      5863	syntax.c	FUNCTION_91	WHILE_1	IF_2	CALL_8
0xb438	            0x85c0	                           test eax, eax	      5863	syntax.c	FUNCTION_91	WHILE_1	IF_2	CALL_8
0xb43a	     0xf85d8000000	                           jne 0x400b558	      5863	syntax.c	FUNCTION_91	WHILE_1	IF_2	CALL_8
0xb440	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5865	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0xb444	          0x8b4030	            mov eax, dword [rax + 0x30] 	      5865	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0xb447	            0x85c0	                           test eax, eax	      5865	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0xb449	            0x7525	                           jne 0x400b4b0	      5865	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0xb44b	    0x488b05000000	            mov rax, qword [0x0400b492] 	      5866	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0xb452	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5866	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0xb456	    0x488b15000000	            mov rdx, qword [0x0400b49d] 	      5866	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0xb45d	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      5866	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0xb461	    0x8b929c020000	           mov edx, dword [rdx + 0x29c] 	      5866	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0xb467	          0x83ca01	                               or edx, 1	      5866	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0xb46a	    0x89909c020000	            mov dword [rax + 0x29c], edx	      5866	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_3
0xb470	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5867	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_9
0xb474	           0xfb600	                   movzx eax, byte [rax]	      5867	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_9
0xb477	           0xfb6c0	                           movzx eax, al	      5867	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_9
0xb47a	            0x89c7	                            mov edi, eax	      5867	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_9
0xb47c	      0xe800000000	                          call 0x400b4c1	      5867	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_9
0xb481	            0x85c0	                           test eax, eax	      5867	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_9
0xb483	            0x7563	                           jne 0x400b528	      5867	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_9
0xb485	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5869	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_10
0xb489	          0x4889c7	                            mov rdi, rax	      5869	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_10
0xb48c	      0xe800000000	                          call 0x400b4d1	      5869	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_10
0xb491	        0x488945b8	             mov qword [rbp - 0x48], rax	      5869	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_10
0xb495	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5870	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5
0xb499	          0x8b4030	            mov eax, dword [rax + 0x30] 	      5870	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5
0xb49c	            0x85c0	                           test eax, eax	      5870	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5
0xb49e	            0x7533	                           jne 0x400b513	      5870	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5
0xb4a0	    0x488b05000000	            mov rax, qword [0x0400b4e7] 	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0xb4a7	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0xb4ab	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5872	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5
0xb4af	          0x4889c2	                            mov rdx, rax	      5872	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5
0xb4b2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5872	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5
0xb4b6	          0x4829c2	                            sub rdx, rax	      5872	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5
0xb4b9	          0x4889d0	                            mov rax, rdx	      5872	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5
0xb4bc	            0x89c2	                            mov edx, eax	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0xb4be	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0xb4c2	            0x89d6	                            mov esi, edx	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0xb4c4	          0x4889c7	                            mov rdi, rax	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0xb4c7	      0xe800000000	                          call 0x400b50c	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0xb4cc	    0x668983a00200	              mov word [rbx + 0x2a0], ax	      5871	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	IF_5	CALL_11
0xb4d3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5873	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_12
0xb4d7	          0x4889c7	                            mov rdi, rax	      5873	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_12
0xb4da	      0xe800000000	                          call 0x400b51f	      5873	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_12
0xb4df	        0x488945d0	             mov qword [rbp - 0x30], rax	      5873	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_12
0xb4e3	      0xe99c040000	                           jmp 0x400b9c4	      5873	syntax.c	FUNCTION_91	WHILE_1	IF_2	IF_4	CALL_12
0xb4e8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5875	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0xb4ec	          0x8b4030	            mov eax, dword [rax + 0x30] 	      5875	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0xb4ef	            0x85c0	                           test eax, eax	      5875	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0xb4f1	     0xf858d040000	                           jne 0x400b9c4	      5875	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0xb4f7	    0x488b05000000	            mov rax, qword [0x0400b53e] 	      5876	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0xb4fe	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      5876	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0xb502	      0xbf00000000	                              mov edi, 0	      5876	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0xb507	      0xe800000000	                          call 0x400b54c	      5876	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0xb50c	    0x668983a00200	              mov word [rbx + 0x2a0], ax	      5876	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0xb513	      0xe96c040000	                           jmp 0x400b9c4	      5876	syntax.c	FUNCTION_91	WHILE_1	IF_2	ELSE_1	IF_6
0xb518	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5878	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_14
0xb51c	      0xba05000000	                              mov edx, 5	      5878	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_14
0xb521	      0xbe00000000	                              mov esi, 0	      5878	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_14
0xb526	          0x4889c7	                            mov rdi, rax	      5878	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_14
0xb529	      0xe800000000	                          call 0x400b56e	      5878	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_14
0xb52e	            0x85c0	                           test eax, eax	      5878	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_14
0xb530	            0x7452	                            je 0x400b5c4	      5878	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_14
0xb532	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5879	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_15
0xb536	      0xba08000000	                              mov edx, 8	      5879	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_15
0xb53b	      0xbe00000000	                              mov esi, 0	      5879	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_15
0xb540	          0x4889c7	                            mov rdi, rax	      5879	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_15
0xb543	      0xe800000000	                          call 0x400b588	      5879	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_15
0xb548	            0x85c0	                           test eax, eax	      5879	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_15
0xb54a	            0x7438	                            je 0x400b5c4	      5879	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_15
0xb54c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5880	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_16
0xb550	      0xba08000000	                              mov edx, 8	      5880	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_16
0xb555	      0xbe00000000	                              mov esi, 0	      5880	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_16
0xb55a	          0x4889c7	                            mov rdi, rax	      5880	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_16
0xb55d	      0xe800000000	                          call 0x400b5a2	      5880	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_16
0xb562	            0x85c0	                           test eax, eax	      5880	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_16
0xb564	            0x741e	                            je 0x400b5c4	      5880	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_16
0xb566	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5881	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_17
0xb56a	      0xba0a000000	                            mov edx, 0xa	      5881	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_17
0xb56f	      0xbe00000000	                              mov esi, 0	      5881	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_17
0xb574	          0x4889c7	                            mov rdi, rax	      5881	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_17
0xb577	      0xe800000000	                          call 0x400b5bc	      5881	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_17
0xb57c	            0x85c0	                           test eax, eax	      5881	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_17
0xb57e	     0xf85fd000000	                           jne 0x400b6c1	      5881	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_17
0xb584	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5883	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_8
0xb588	        0x4883c004	                              add rax, 4	      5883	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_8
0xb58c	           0xfb600	                   movzx eax, byte [rax]	      5883	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_8
0xb58f	            0x3c53	                            cmp al, 0x53	      5883	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_8
0xb591	            0x750e	                           jne 0x400b5e1	      5883	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_8
0xb593	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5884	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_8
0xb597	        0x4883c006	                              add rax, 6	      5884	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_8
0xb59b	        0x488945b8	             mov qword [rbp - 0x48], rax	      5884	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_8
0xb59f	            0xeb25	                           jmp 0x400b606	      5884	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_8
0xb5a1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5885	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_3	IF_9
0xb5a5	           0xfb600	                   movzx eax, byte [rax]	      5885	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_3	IF_9
0xb5a8	            0x3c4c	                            cmp al, 0x4c	      5885	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_3	IF_9
0xb5aa	            0x750e	                           jne 0x400b5fa	      5885	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_3	IF_9
0xb5ac	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5886	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_3	IF_9
0xb5b0	        0x4883c00b	                            add rax, 0xb	      5886	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_3	IF_9
0xb5b4	        0x488945b8	             mov qword [rbp - 0x48], rax	      5886	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_3	IF_9
0xb5b8	            0xeb0c	                           jmp 0x400b606	      5886	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_3	IF_9
0xb5ba	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5888	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4
0xb5be	        0x4883c009	                              add rax, 9	      5888	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4
0xb5c2	        0x488945b8	             mov qword [rbp - 0x48], rax	      5888	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4
0xb5c6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0xb5ca	        0x4883e801	                              sub rax, 1	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0xb5ce	           0xfb600	                   movzx eax, byte [rax]	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0xb5d1	            0x3c3d	                            cmp al, 0x3d	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0xb5d3	            0x7512	                           jne 0x400b627	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0xb5d5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0xb5d9	           0xfb600	                   movzx eax, byte [rax]	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0xb5dc	           0xfb6c0	                           movzx eax, al	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0xb5df	          0x83e830	                           sub eax, 0x30	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0xb5e2	          0x83f809	                              cmp eax, 9	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0xb5e5	            0x760c	                           jbe 0x400b633	      5889	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10	CALL_18
0xb5e7	    0xc745b0010000	               mov dword [rbp - 0x50], 1	      5891	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10
0xb5ee	      0xe9b2030000	                           jmp 0x400b9e5	      5892	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	ELSE_4	IF_10
0xb5f3	        0x488d45b8	                   lea rax, [rbp - 0x48]	      5894	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_19
0xb5f7	          0x4889c7	                            mov rdi, rax	      5894	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_19
0xb5fa	      0xe800000000	                          call 0x400b63f	      5894	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_19
0xb5ff	        0x488945e0	             mov qword [rbp - 0x20], rax	      5894	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	CALL_19
0xb603	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5895	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11
0xb607	          0x8b4030	            mov eax, dword [rax + 0x30] 	      5895	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11
0xb60a	            0x85c0	                           test eax, eax	      5895	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11
0xb60c	     0xf8572030000	                           jne 0x400b9c4	      5895	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11
0xb612	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5897	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0xb616	        0x4883c004	                              add rax, 4	      5897	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0xb61a	           0xfb600	                   movzx eax, byte [rax]	      5897	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0xb61d	            0x3c42	                            cmp al, 0x42	      5897	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0xb61f	            0x751b	                           jne 0x400b67c	      5897	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0xb621	    0x488b05000000	            mov rax, qword [0x0400b668] 	      5898	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0xb628	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5898	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0xb62c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      5898	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0xb630	    0x488990b80200	            mov qword [rax + 0x2b8], rdx	      5898	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	IF_12
0xb637	      0xe948030000	                           jmp 0x400b9c4	      5895	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11
0xb63c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5899	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0xb640	        0x4883c001	                              add rax, 1	      5899	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0xb644	           0xfb600	                   movzx eax, byte [rax]	      5899	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0xb647	            0x3c41	                            cmp al, 0x41	      5899	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0xb649	            0x751b	                           jne 0x400b6a6	      5899	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0xb64b	    0x488b05000000	            mov rax, qword [0x0400b692] 	      5900	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0xb652	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5900	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0xb656	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      5900	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0xb65a	    0x488990b00200	            mov qword [rax + 0x2b0], rdx	      5900	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_5	IF_13
0xb661	      0xe91e030000	                           jmp 0x400b9c4	      5895	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11
0xb666	    0x488b05000000	            mov rax, qword [0x0400b6ad] 	      5902	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_6
0xb66d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5902	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_6
0xb671	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      5902	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_6
0xb675	    0x488990a80200	            mov qword [rax + 0x2a8], rdx	      5902	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11	ELSE_6
0xb67c	      0xe903030000	                           jmp 0x400b9c4	      5895	syntax.c	FUNCTION_91	WHILE_1	ELSE_2	IF_7	IF_11
0xb681	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5905	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	CALL_20
0xb685	      0xbe00000000	                              mov esi, 0	      5905	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	CALL_20
0xb68a	          0x4889c7	                            mov rdi, rax	      5905	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	CALL_20
0xb68d	      0xe800000000	                          call 0x400b6d2	      5905	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	CALL_20
0xb692	            0x85c0	                           test eax, eax	      5905	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	CALL_20
0xb694	            0x7540	                           jne 0x400b716	      5905	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	CALL_20
0xb696	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5907	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0xb69a	          0x8b4030	            mov eax, dword [rax + 0x30] 	      5907	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0xb69d	            0x85c0	                           test eax, eax	      5907	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0xb69f	     0xf85df020000	                           jne 0x400b9c4	      5907	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0xb6a5	    0x488b05000000	            mov rax, qword [0x0400b6ec] 	      5909	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0xb6ac	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5909	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0xb6b0	    0x48c780a80200	    mov qword [rax + 0x2a8], 0x7fffffff 	      5909	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0xb6bb	    0x488b05000000	            mov rax, qword [0x0400b702] 	      5910	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0xb6c2	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5910	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0xb6c6	    0x48c780b00200	              mov qword [rax + 0x2b0], 0	      5910	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0xb6d1	      0xe9ae020000	                           jmp 0x400b9c4	      5910	syntax.c	FUNCTION_91	WHILE_1	ELSE_6	ELSE_7	IF_14	IF_15
0xb6d6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5913	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_21
0xb6da	      0xbe00000000	                              mov esi, 0	      5913	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_21
0xb6df	          0x4889c7	                            mov rdi, rax	      5913	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_21
0xb6e2	      0xe800000000	                          call 0x400b727	      5913	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_21
0xb6e7	            0x85c0	                           test eax, eax	      5913	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_21
0xb6e9	     0xf8502020000	                           jne 0x400b931	      5913	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_21
0xb6ef	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5915	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_17
0xb6f3	           0xfb600	                   movzx eax, byte [rax]	      5915	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_17
0xb6f6	            0x84c0	                             test al, al	      5915	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_17
0xb6f8	            0x750c	                           jne 0x400b746	      5915	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_17
0xb6fa	    0xc745b0010000	               mov dword [rbp - 0x50], 1	      5917	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_17
0xb701	      0xe99f020000	                           jmp 0x400b9e5	      5918	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_17
0xb706	    0x488b05000000	            mov rax, qword [0x0400b74d] 	      5920	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18
0xb70d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5920	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18
0xb711	    0x488b80c00200	           mov rax, qword [rax + 0x2c0] 	      5920	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18
0xb718	          0x4885c0	                           test rax, rax	      5920	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18
0xb71b	            0x741e	                            je 0x400b77b	      5920	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18
0xb71d	      0xbf00000000	                              mov edi, 0	      5922	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18	CALL_23
0xb722	      0xe800000000	                          call 0x400b767	      5922	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18	CALL_23
0xb727	          0x4889c7	                            mov rdi, rax	      5922	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18	CALL_23
0xb72a	      0xe800000000	                          call 0x400b76f	      5922	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18	CALL_23
0xb72f	    0xc745b4010000	               mov dword [rbp - 0x4c], 1	      5923	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18
0xb736	      0xe96a020000	                           jmp 0x400b9e5	      5924	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_18
0xb73b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0xb73f	           0xfb600	                   movzx eax, byte [rax]	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0xb742	           0xfb6c0	                           movzx eax, al	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0xb745	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0xb749	        0x488d7a01	                      lea rdi, [rdx + 1]	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0xb74d	      0xb900000000	                              mov ecx, 0	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0xb752	      0xba01000000	                              mov edx, 1	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0xb757	            0x89c6	                            mov esi, eax	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0xb759	      0xe800000000	                          call 0x400b79e	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0xb75e	        0x488945b8	             mov qword [rbp - 0x48], rax	      5926	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_24
0xb762	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5927	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_19
0xb766	           0xfb610	                   movzx edx, byte [rax]	      5927	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_19
0xb769	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5927	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_19
0xb76d	           0xfb600	                   movzx eax, byte [rax]	      5927	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_19
0xb770	            0x38c2	                              cmp dl, al	      5927	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_19
0xb772	            0x740c	                            je 0x400b7c0	      5927	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_19
0xb774	    0xc745b0010000	               mov dword [rbp - 0x50], 1	      5929	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_19
0xb77b	      0xe925020000	                           jmp 0x400b9e5	      5930	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_19
0xb780	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5933	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0xb784	          0x8b4030	            mov eax, dword [rax + 0x30] 	      5933	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0xb787	            0x85c0	                           test eax, eax	      5933	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0xb789	     0xf8549010000	                           jne 0x400b918	      5933	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0xb78f	    0x488b05000000	            mov rax, qword [0x0400b7d6] 	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0xb796	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0xb79a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5937	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21
0xb79e	          0x4889c2	                            mov rdx, rax	      5937	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21
0xb7a1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5937	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21
0xb7a5	          0x4829c2	                            sub rdx, rax	      5937	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21
0xb7a8	          0x4889d0	                            mov rax, rdx	      5937	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21
0xb7ab	          0x83e801	                              sub eax, 1	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0xb7ae	            0x89c2	                            mov edx, eax	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0xb7b0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0xb7b4	        0x4883c001	                              add rax, 1	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0xb7b8	            0x89d6	                            mov esi, edx	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0xb7ba	          0x4889c7	                            mov rdi, rax	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0xb7bd	      0xe800000000	                          call 0x400b802	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0xb7c2	    0x488983c00200	            mov qword [rbx + 0x2c0], rax	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0xb7c9	    0x488b83c00200	           mov rax, qword [rbx + 0x2c0] 	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0xb7d0	          0x4885c0	                           test rax, rax	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0xb7d3	            0x750c	                           jne 0x400b821	      5936	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21	CALL_25
0xb7d5	    0xc745b4010000	               mov dword [rbp - 0x4c], 1	      5939	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21
0xb7dc	      0xe9c4010000	                           jmp 0x400b9e5	      5940	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_21
0xb7e1	    0x488b05000000	            mov rax, qword [0x0400b828] 	      5942	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0xb7e8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5942	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0xb7ec	    0x488b15000000	            mov rdx, qword [0x0400b833] 	      5942	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0xb7f3	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      5942	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0xb7f7	    0x8b9258020000	           mov edx, dword [rdx + 0x258] 	      5942	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0xb7fd	    0x899000030000	            mov dword [rax + 0x300], edx	      5942	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0xb803	    0x488b05000000	            mov rax, qword [0x0400b84a] 	      5945	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0xb80a	        0x488945d8	             mov qword [rbp - 0x28], rax	      5945	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0xb80e	    0x48c705000000	               mov qword [0x0400b859], 0	      5946	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0xb819	    0x488b05000000	            mov rax, qword [0x0400b860] 	      5947	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0xb820	        0x488b5810	            mov rbx, qword [rax + 0x10] 	      5947	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0xb824	    0x488b05000000	            mov rax, qword [0x0400b86b] 	      5948	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_26
0xb82b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5948	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_26
0xb82f	    0x488b80c00200	           mov rax, qword [rax + 0x2c0] 	      5948	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_26
0xb836	      0xbe01000000	                              mov esi, 1	      5948	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_26
0xb83b	          0x4889c7	                            mov rdi, rax	      5948	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_26
0xb83e	      0xe800000000	                          call 0x400b883	      5948	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_26
0xb843	    0x488983c80200	            mov qword [rbx + 0x2c8], rax	      5947	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0xb84a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5949	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0xb84e	    0x488905000000	            mov qword [0x0400b895], rax 	      5949	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20
0xb855	    0x488b05000000	            mov rax, qword [0x0400b89c] 	      5951	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_27
0xb85c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5951	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_27
0xb860	    0x4805d0020000	                          add rax, 0x2d0	      5951	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_27
0xb866	          0x4889c7	                            mov rdi, rax	      5951	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_27
0xb869	      0xe8b0150000	                 call sym.syn_clear_time	      5951	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	CALL_27
0xb86e	    0x488b05000000	            mov rax, qword [0x0400b8b5] 	      5954	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22
0xb875	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5954	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22
0xb879	    0x488b80c80200	           mov rax, qword [rax + 0x2c8] 	      5954	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22
0xb880	          0x4885c0	                           test rax, rax	      5954	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22
0xb883	            0x7553	                           jne 0x400b918	      5954	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22
0xb885	    0x488b05000000	            mov rax, qword [0x0400b8cc] 	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0xb88c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0xb890	    0x488b80c00200	           mov rax, qword [rax + 0x2c0] 	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0xb897	          0x4885c0	                           test rax, rax	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0xb89a	            0x7430	                            je 0x400b90c	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0xb89c	    0x488b05000000	            mov rax, qword [0x0400b8e3] 	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0xb8a3	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0xb8a7	    0x488b80c00200	           mov rax, qword [rax + 0x2c0] 	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0xb8ae	          0x4889c7	                            mov rdi, rax	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0xb8b1	      0xe800000000	                          call 0x400b8f6	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0xb8b6	    0x488b05000000	            mov rax, qword [0x0400b8fd] 	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0xb8bd	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0xb8c1	    0x48c780c00200	              mov qword [rax + 0x2c0], 0	      5956	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22	CALL_28
0xb8cc	    0xc745b4010000	               mov dword [rbp - 0x4c], 1	      5957	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22
0xb8d3	      0xe9cd000000	                           jmp 0x400b9e5	      5958	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	IF_20	IF_22
0xb8d8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5961	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_29
0xb8dc	        0x4883c001	                              add rax, 1	      5961	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_29
0xb8e0	          0x4889c7	                            mov rdi, rax	      5961	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_29
0xb8e3	      0xe800000000	                          call 0x400b928	      5961	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_29
0xb8e8	        0x488945d0	             mov qword [rbp - 0x30], rax	      5961	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_29
0xb8ec	      0xe993000000	                           jmp 0x400b9c4	      5961	syntax.c	FUNCTION_91	WHILE_1	ELSE_8	IF_16	CALL_29
0xb8f1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5965	syntax.c	FUNCTION_91	WHILE_1	ELSE_9
0xb8f5	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      5965	syntax.c	FUNCTION_91	WHILE_1	ELSE_9
0xb8f9	          0x488910	                    mov qword [rax], rdx	      5965	syntax.c	FUNCTION_91	WHILE_1	ELSE_9
0xb8fc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5966	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	IF_23	CALL_30
0xb900	      0xbe00000000	                              mov esi, 0	      5966	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	IF_23	CALL_30
0xb905	          0x4889c7	                            mov rdi, rax	      5966	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	IF_23	CALL_30
0xb908	      0xe800000000	                          call 0x400b94d	      5966	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	IF_23	CALL_30
0xb90d	            0x85c0	                           test eax, eax	      5966	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	IF_23	CALL_30
0xb90f	            0x7513	                           jne 0x400b964	      5966	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	IF_23	CALL_30
0xb911	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5967	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	CALL_31
0xb915	      0xbe01000000	                              mov esi, 1	      5967	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	CALL_31
0xb91a	          0x4889c7	                            mov rdi, rax	      5967	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	CALL_31
0xb91d	      0xe869dbffff	                  call sym.syn_cmd_match	      5967	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	CALL_31
0xb922	            0xeb57	                           jmp 0x400b9bb	      5967	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	CALL_31
0xb924	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5968	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24	CALL_32
0xb928	      0xbe00000000	                              mov esi, 0	      5968	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24	CALL_32
0xb92d	          0x4889c7	                            mov rdi, rax	      5968	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24	CALL_32
0xb930	      0xe800000000	                          call 0x400b975	      5968	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24	CALL_32
0xb935	            0x85c0	                           test eax, eax	      5968	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24	CALL_32
0xb937	            0x7513	                           jne 0x400b98c	      5968	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24	CALL_32
0xb939	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5969	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24
0xb93d	      0xbe01000000	                              mov esi, 1	      5969	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24
0xb942	          0x4889c7	                            mov rdi, rax	      5969	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24
0xb945	      0xe851e1ffff	                 call sym.syn_cmd_region	      5969	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24
0xb94a	            0xeb2f	                           jmp 0x400b9bb	      5969	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_10	IF_24
0xb94c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5970	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25	CALL_34
0xb950	      0xbe00000000	                              mov esi, 0	      5970	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25	CALL_34
0xb955	          0x4889c7	                            mov rdi, rax	      5970	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25	CALL_34
0xb958	      0xe800000000	                          call 0x400b99d	      5970	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25	CALL_34
0xb95d	            0x85c0	                           test eax, eax	      5970	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25	CALL_34
0xb95f	            0x7513	                           jne 0x400b9b4	      5970	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25	CALL_34
0xb961	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5971	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25
0xb965	      0xbe01000000	                              mov esi, 1	      5971	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25
0xb96a	          0x4889c7	                            mov rdi, rax	      5971	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25
0xb96d	      0xe840b0ffff	                  call sym.syn_cmd_clear	      5971	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25
0xb972	            0xeb07	                           jmp 0x400b9bb	      5971	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_11	IF_25
0xb974	    0xc745b0010000	               mov dword [rbp - 0x50], 1	      5973	syntax.c	FUNCTION_91	WHILE_1	ELSE_9	ELSE_12
0xb97b	    0xc745b4010000	               mov dword [rbp - 0x4c], 1	      5974	syntax.c	FUNCTION_91	WHILE_1	ELSE_9
0xb982	            0xeb21	                           jmp 0x400b9e5	      5975	syntax.c	FUNCTION_91	WHILE_1	ELSE_9
0xb984	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5977	syntax.c	FUNCTION_91	WHILE_1
0xb988	        0x488945c0	             mov qword [rbp - 0x40], rax	      5977	syntax.c	FUNCTION_91	WHILE_1
0xb98c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5857	syntax.c	FUNCTION_91	WHILE_1	CALL_3
0xb990	           0xfb600	                   movzx eax, byte [rax]	      5857	syntax.c	FUNCTION_91	WHILE_1	CALL_3
0xb993	           0xfb6c0	                           movzx eax, al	      5857	syntax.c	FUNCTION_91	WHILE_1	CALL_3
0xb996	            0x89c7	                            mov edi, eax	      5857	syntax.c	FUNCTION_91	WHILE_1	CALL_3
0xb998	      0xe800000000	                          call 0x400b9dd	      5857	syntax.c	FUNCTION_91	WHILE_1	CALL_3
0xb99d	            0x85c0	                           test eax, eax	      5857	syntax.c	FUNCTION_91	WHILE_1	CALL_3
0xb99f	     0xf8431faffff	                            je 0x400b416	      5857	syntax.c	FUNCTION_91	WHILE_1	CALL_3
0xb9a5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5979	syntax.c	FUNCTION_91	CALL_36
0xb9a9	          0x4889c7	                            mov rdi, rax	      5979	syntax.c	FUNCTION_91	CALL_36
0xb9ac	      0xe800000000	                          call 0x400b9f1	      5979	syntax.c	FUNCTION_91	CALL_36
0xb9b1	        0x837db000	               cmp dword [rbp - 0x50], 0	      5980	syntax.c	FUNCTION_91	IF_26
0xb9b5	            0x741e	                            je 0x400ba15	      5980	syntax.c	FUNCTION_91	IF_26
0xb9b7	      0xbf00000000	                              mov edi, 0	      5981	syntax.c	FUNCTION_91	CALL_38
0xb9bc	      0xe800000000	                          call 0x400ba01	      5981	syntax.c	FUNCTION_91	CALL_38
0xb9c1	          0x4889c2	                            mov rdx, rax	      5981	syntax.c	FUNCTION_91	CALL_38
0xb9c4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5981	syntax.c	FUNCTION_91	CALL_38
0xb9c8	          0x4889c6	                            mov rsi, rax	      5981	syntax.c	FUNCTION_91	CALL_38
0xb9cb	          0x4889d7	                            mov rdi, rdx	      5981	syntax.c	FUNCTION_91	CALL_38
0xb9ce	      0xe800000000	                          call 0x400ba13	      5981	syntax.c	FUNCTION_91	CALL_38
0xb9d3	            0xeb3a	                           jmp 0x400ba4f	      5981	syntax.c	FUNCTION_91	CALL_38
0xb9d5	        0x837db400	               cmp dword [rbp - 0x4c], 0	      5982	syntax.c	FUNCTION_91	ELSE_13	IF_27
0xb9d9	            0x7534	                           jne 0x400ba4f	      5982	syntax.c	FUNCTION_91	ELSE_13	IF_27
0xb9db	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5984	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_39
0xb9df	          0x4889c7	                            mov rdi, rax	      5984	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_39
0xb9e2	      0xe800000000	                          call 0x400ba27	      5984	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_39
0xb9e7	          0x4889c2	                            mov rdx, rax	      5984	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_39
0xb9ea	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5984	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_39
0xb9ee	        0x48895008	                mov qword [rax + 8], rdx	      5984	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_39
0xb9f2	      0xbf23000000	                           mov edi, 0x23	      5985	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_40
0xb9f7	      0xe800000000	                          call 0x400ba3c	      5985	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_40
0xb9fc	    0x488b05000000	            mov rax, qword [0x0400ba43] 	      5986	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_41
0xba03	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5986	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_41
0xba07	          0x4889c7	                            mov rdi, rax	      5986	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_41
0xba0a	      0xe800000000	                          call 0x400ba4f	      5986	syntax.c	FUNCTION_91	ELSE_13	IF_27	CALL_41
0xba0f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5988	syntax.c	FUNCTION_91
0xba13	    0x644833042528	                xor rax, qword fs:[0x28]	      5988	syntax.c	FUNCTION_91
0xba1c	            0x7405	                            je 0x400ba63	      5988	syntax.c	FUNCTION_91
0xba1e	      0xe800000000	                          call 0x400ba63	      5988	syntax.c	FUNCTION_91
0xba23	        0x4883c458	                           add rsp, 0x58	      5988	syntax.c	FUNCTION_91
0xba27	              0x5b	                                 pop rbx	      5988	syntax.c	FUNCTION_91
0xba28	              0x5d	                                 pop rbp	      5988	syntax.c	FUNCTION_91
0xba29	              0xc3	                                     ret	      5988	syntax.c	FUNCTION_91
syntime_clear	FOR,1:DO,0:IF,1:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,5	38
0xce61	              0x55	                                push rbp	      6702	syntax.c	FUNCTION_109
0xce62	          0x4889e5	                            mov rbp, rsp	      6702	syntax.c	FUNCTION_109
0xce65	        0x4883ec10	                           sub rsp, 0x10	      6702	syntax.c	FUNCTION_109
0xce69	    0x488b05000000	            mov rax, qword [0x0400ceb0] 	      6706	syntax.c	FUNCTION_109	IF_1	CALL_1
0xce70	          0x4889c7	                            mov rdi, rax	      6706	syntax.c	FUNCTION_109	IF_1	CALL_1
0xce73	      0xe800000000	                          call 0x400ceb8	      6706	syntax.c	FUNCTION_109	IF_1	CALL_1
0xce78	            0x85c0	                           test eax, eax	      6706	syntax.c	FUNCTION_109	IF_1	CALL_1
0xce7a	            0x7514	                           jne 0x400ced0	      6706	syntax.c	FUNCTION_109	IF_1	CALL_1
0xce7c	      0xbf00000000	                              mov edi, 0	      6708	syntax.c	FUNCTION_109	IF_1	CALL_3
0xce81	      0xe800000000	                          call 0x400cec6	      6708	syntax.c	FUNCTION_109	IF_1	CALL_3
0xce86	          0x4889c7	                            mov rdi, rax	      6708	syntax.c	FUNCTION_109	IF_1	CALL_3
0xce89	      0xe800000000	                          call 0x400cece	      6708	syntax.c	FUNCTION_109	IF_1	CALL_3
0xce8e	            0xeb60	                           jmp 0x400cf30	      6709	syntax.c	FUNCTION_109	IF_1
0xce90	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      6711	syntax.c	FUNCTION_109	FOR_1
0xce97	            0xeb41	                           jmp 0x400cf1a	      6711	syntax.c	FUNCTION_109	FOR_1
0xce99	    0x488b05000000	            mov rax, qword [0x0400cee0] 	      6713	syntax.c	FUNCTION_109	FOR_1	CALL_4
0xcea0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6713	syntax.c	FUNCTION_109	FOR_1	CALL_4
0xcea4	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      6713	syntax.c	FUNCTION_109	FOR_1	CALL_4
0xceab	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      6713	syntax.c	FUNCTION_109	FOR_1	CALL_4
0xceae	          0x4863d0	                         movsxd rdx, eax	      6713	syntax.c	FUNCTION_109	FOR_1	CALL_4
0xceb1	          0x4889d0	                            mov rax, rdx	      6713	syntax.c	FUNCTION_109	FOR_1	CALL_4
0xceb4	        0x48c1e002	                              shl rax, 2	      6713	syntax.c	FUNCTION_109	FOR_1	CALL_4
0xceb8	          0x4801d0	                            add rax, rdx	      6713	syntax.c	FUNCTION_109	FOR_1	CALL_4
0xcebb	        0x48c1e005	                              shl rax, 5	      6713	syntax.c	FUNCTION_109	FOR_1	CALL_4
0xcebf	          0x4801c8	                            add rax, rcx	      6713	syntax.c	FUNCTION_109	FOR_1	CALL_4
0xcec2	        0x488945f8	                mov qword [rbp - 8], rax	      6713	syntax.c	FUNCTION_109	FOR_1	CALL_4
0xcec6	        0x488b45f8	                mov rax, qword [rbp - 8]	      6714	syntax.c	FUNCTION_109	FOR_1	CALL_5
0xceca	        0x4883c070	                           add rax, 0x70	      6714	syntax.c	FUNCTION_109	FOR_1	CALL_5
0xcece	          0x4889c7	                            mov rdi, rax	      6714	syntax.c	FUNCTION_109	FOR_1	CALL_5
0xced1	      0xe848ffffff	                 call sym.syn_clear_time	      6714	syntax.c	FUNCTION_109	FOR_1	CALL_5
0xced6	        0x8345f401	                add dword [rbp - 0xc], 1	      6711	syntax.c	FUNCTION_109	FOR_1
0xceda	    0x488b05000000	            mov rax, qword [0x0400cf21] 	      6711	syntax.c	FUNCTION_109	FOR_1
0xcee1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6711	syntax.c	FUNCTION_109	FOR_1
0xcee5	    0x8b8060020000	           mov eax, dword [rax + 0x260] 	      6711	syntax.c	FUNCTION_109	FOR_1
0xceeb	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      6711	syntax.c	FUNCTION_109	FOR_1
0xceee	            0x7fa9	                            jg 0x400ced9	      6711	syntax.c	FUNCTION_109	FOR_1
0xcef0	              0xc9	                                   leave	      6716	syntax.c	FUNCTION_109
0xcef1	              0xc3	                                     ret	      6716	syntax.c	FUNCTION_109
color_name2handle	FOR,0:DO,0:IF,7:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,8	99
0x10f09	              0x55	                                push rbp	      8723	syntax.c	FUNCTION_130
0x10f0a	          0x4889e5	                            mov rbp, rsp	      8723	syntax.c	FUNCTION_130
0x10f0d	        0x4883ec10	                           sub rsp, 0x10	      8723	syntax.c	FUNCTION_130
0x10f11	        0x48897df8	                mov qword [rbp - 8], rdi	      8723	syntax.c	FUNCTION_130
0x10f15	        0x488b45f8	                mov rax, qword [rbp - 8]	      8724	syntax.c	FUNCTION_130	IF_1	CALL_1
0x10f19	      0xbe00000000	                              mov esi, 0	      8724	syntax.c	FUNCTION_130	IF_1	CALL_1
0x10f1e	          0x4889c7	                            mov rdi, rax	      8724	syntax.c	FUNCTION_130	IF_1	CALL_1
0x10f21	      0xe800000000	                          call 0x4010f66	      8724	syntax.c	FUNCTION_130	IF_1	CALL_1
0x10f26	            0x85c0	                           test eax, eax	      8724	syntax.c	FUNCTION_130	IF_1	CALL_1
0x10f28	            0x750c	                           jne 0x4010f76	      8724	syntax.c	FUNCTION_130	IF_1	CALL_1
0x10f2a	    0x48c7c099d4ff	             mov rax, 0xffffffffffffd499	      8725	syntax.c	FUNCTION_130	IF_1
0x10f31	      0xe940010000	                           jmp 0x40110b6	      8725	syntax.c	FUNCTION_130	IF_1
0x10f36	        0x488b45f8	                mov rax, qword [rbp - 8]	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x10f3a	      0xbe00000000	                              mov esi, 0	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x10f3f	          0x4889c7	                            mov rdi, rax	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x10f42	      0xe800000000	                          call 0x4010f87	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x10f47	            0x85c0	                           test eax, eax	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x10f49	            0x7415	                            je 0x4010fa0	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x10f4b	        0x488b45f8	                mov rax, qword [rbp - 8]	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x10f4f	      0xbe00000000	                              mov esi, 0	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x10f54	          0x4889c7	                            mov rdi, rax	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x10f57	      0xe800000000	                          call 0x4010f9c	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x10f5c	            0x85c0	                           test eax, eax	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x10f5e	            0x756b	                           jne 0x401100b	      8727	syntax.c	FUNCTION_130	IF_2	CALL_3
0x10f60	    0x8b0500000000	            mov eax, dword [0x04010fa6] 	      8730	syntax.c	FUNCTION_130	IF_2	IF_3
0x10f66	            0x85c0	                           test eax, eax	      8730	syntax.c	FUNCTION_130	IF_2	IF_3
0x10f68	            0x740c	                            je 0x4010fb6	      8730	syntax.c	FUNCTION_130	IF_2	IF_3
0x10f6a	    0x488b05000000	            mov rax, qword [0x04010fb1] 	      8733	syntax.c	FUNCTION_130	IF_2	IF_3
0x10f71	      0xe900010000	                           jmp 0x40110b6	      8733	syntax.c	FUNCTION_130	IF_2	IF_3
0x10f76	    0x488b05000000	            mov rax, qword [0x04010fbd] 	      8736	syntax.c	FUNCTION_130	IF_2	IF_4
0x10f7d	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      8736	syntax.c	FUNCTION_130	IF_2	IF_4
0x10f83	            0x740c	                            je 0x4010fd1	      8736	syntax.c	FUNCTION_130	IF_2	IF_4
0x10f85	    0x488b05000000	            mov rax, qword [0x04010fcc] 	      8737	syntax.c	FUNCTION_130	IF_2	IF_4
0x10f8c	      0xe9e5000000	                           jmp 0x40110b6	      8737	syntax.c	FUNCTION_130	IF_2	IF_4
0x10f91	    0x8b0500000000	            mov eax, dword [0x04010fd7] 	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x10f97	            0x85c0	                           test eax, eax	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x10f99	            0x7407	                            je 0x4010fe2	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x10f9b	      0xba00000000	                              mov edx, 0	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x10fa0	            0xeb05	                           jmp 0x4010fe7	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x10fa2	      0xba00000000	                              mov edx, 0	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x10fa7	    0x488b05000000	            mov rax, qword [0x04010fee] 	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x10fae	           0xfb600	                   movzx eax, byte [rax]	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x10fb1	            0x3c6c	                            cmp al, 0x6c	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x10fb3	            0x7507	                           jne 0x4010ffc	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x10fb5	      0xb800000000	                              mov eax, 0	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x10fba	            0xeb05	                           jmp 0x4011001	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x10fbc	      0xb800000000	                              mov eax, 0	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x10fc1	          0x4889c7	                            mov rdi, rax	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x10fc4	            0xffd2	                                call rdx	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x10fc6	      0xe9ab000000	                           jmp 0x40110b6	      8739	syntax.c	FUNCTION_130	IF_2	CALL_4
0x10fcb	        0x488b45f8	                mov rax, qword [rbp - 8]	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x10fcf	      0xbe00000000	                              mov esi, 0	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x10fd4	          0x4889c7	                            mov rdi, rax	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x10fd7	      0xe800000000	                          call 0x401101c	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x10fdc	            0x85c0	                           test eax, eax	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x10fde	            0x7415	                            je 0x4011035	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x10fe0	        0x488b45f8	                mov rax, qword [rbp - 8]	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x10fe4	      0xbe00000000	                              mov esi, 0	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x10fe9	          0x4889c7	                            mov rdi, rax	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x10fec	      0xe800000000	                          call 0x4011031	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x10ff1	            0x85c0	                           test eax, eax	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x10ff3	            0x7562	                           jne 0x4011097	      8742	syntax.c	FUNCTION_130	IF_5	CALL_6
0x10ff5	    0x8b0500000000	            mov eax, dword [0x0401103b] 	      8745	syntax.c	FUNCTION_130	IF_5	IF_6
0x10ffb	            0x85c0	                           test eax, eax	      8745	syntax.c	FUNCTION_130	IF_5	IF_6
0x10ffd	            0x7409	                            je 0x4011048	      8745	syntax.c	FUNCTION_130	IF_5	IF_6
0x10fff	    0x488b05000000	            mov rax, qword [0x04011046] 	      8748	syntax.c	FUNCTION_130	IF_5	IF_6
0x11006	            0xeb6e	                           jmp 0x40110b6	      8748	syntax.c	FUNCTION_130	IF_5	IF_6
0x11008	    0x488b05000000	            mov rax, qword [0x0401104f] 	      8751	syntax.c	FUNCTION_130	IF_5	IF_7
0x1100f	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      8751	syntax.c	FUNCTION_130	IF_5	IF_7
0x11015	            0x7409	                            je 0x4011060	      8751	syntax.c	FUNCTION_130	IF_5	IF_7
0x11017	    0x488b05000000	            mov rax, qword [0x0401105e] 	      8752	syntax.c	FUNCTION_130	IF_5	IF_7
0x1101e	            0xeb56	                           jmp 0x40110b6	      8752	syntax.c	FUNCTION_130	IF_5	IF_7
0x11020	    0x8b0500000000	            mov eax, dword [0x04011066] 	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x11026	            0x85c0	                           test eax, eax	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x11028	            0x7407	                            je 0x4011071	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x1102a	      0xba00000000	                              mov edx, 0	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x1102f	            0xeb05	                           jmp 0x4011076	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x11031	      0xba00000000	                              mov edx, 0	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x11036	    0x488b05000000	            mov rax, qword [0x0401107d] 	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x1103d	           0xfb600	                   movzx eax, byte [rax]	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x11040	            0x3c6c	                            cmp al, 0x6c	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x11042	            0x7507	                           jne 0x401108b	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x11044	      0xb800000000	                              mov eax, 0	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x11049	            0xeb05	                           jmp 0x4011090	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x1104b	      0xb800000000	                              mov eax, 0	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x11050	          0x4889c7	                            mov rdi, rax	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x11053	            0xffd2	                                call rdx	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x11055	            0xeb1f	                           jmp 0x40110b6	      8754	syntax.c	FUNCTION_130	IF_5	CALL_7
0x11057	    0x8b0500000000	            mov eax, dword [0x0401109d] 	      8758	syntax.c	FUNCTION_130	CALL_8
0x1105d	            0x85c0	                           test eax, eax	      8758	syntax.c	FUNCTION_130	CALL_8
0x1105f	            0x7407	                            je 0x40110a8	      8758	syntax.c	FUNCTION_130	CALL_8
0x11061	      0xba00000000	                              mov edx, 0	      8758	syntax.c	FUNCTION_130	CALL_8
0x11066	            0xeb05	                           jmp 0x40110ad	      8758	syntax.c	FUNCTION_130	CALL_8
0x11068	      0xba00000000	                              mov edx, 0	      8758	syntax.c	FUNCTION_130	CALL_8
0x1106d	        0x488b45f8	                mov rax, qword [rbp - 8]	      8758	syntax.c	FUNCTION_130	CALL_8
0x11071	          0x4889c7	                            mov rdi, rax	      8758	syntax.c	FUNCTION_130	CALL_8
0x11074	            0xffd2	                                call rdx	      8758	syntax.c	FUNCTION_130	CALL_8
0x11076	              0xc9	                                   leave	      8759	syntax.c	FUNCTION_130
0x11077	              0xc3	                                     ret	      8759	syntax.c	FUNCTION_130
put_pattern	FOR,2:DO,0:IF,9:SWITCH,0:functions,0:ELSE,2:WHILE,0:CALL,19	166
0x7c07	              0x55	                                push rbp	      4270	syntax.c	FUNCTION_70
0x7c08	          0x4889e5	                            mov rbp, rsp	      4270	syntax.c	FUNCTION_70
0x7c0b	        0x4883ec40	                           sub rsp, 0x40	      4270	syntax.c	FUNCTION_70
0x7c0f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      4270	syntax.c	FUNCTION_70
0x7c13	          0x8975d4	             mov dword [rbp - 0x2c], esi	      4270	syntax.c	FUNCTION_70
0x7c16	        0x488955c8	             mov qword [rbp - 0x38], rdx	      4270	syntax.c	FUNCTION_70
0x7c1a	          0x894dd0	             mov dword [rbp - 0x30], ecx	      4270	syntax.c	FUNCTION_70
0x7c1d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4278	syntax.c	FUNCTION_70	IF_1
0x7c21	         0xfb74002	               movzx eax, word [rax + 2]	      4278	syntax.c	FUNCTION_70	IF_1
0x7c25	           0xfbfd0	                           movsx edx, ax	      4278	syntax.c	FUNCTION_70	IF_1
0x7c28	    0x8b0500000000	            mov eax, dword [0x04007c6e] 	      4278	syntax.c	FUNCTION_70	IF_1
0x7c2e	            0x39c2	                            cmp edx, eax	      4278	syntax.c	FUNCTION_70	IF_1
0x7c30	     0xf8480000000	                            je 0x4007cf6	      4278	syntax.c	FUNCTION_70	IF_1
0x7c36	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4280	syntax.c	FUNCTION_70	IF_1
0x7c3a	         0xfb74002	               movzx eax, word [rax + 2]	      4280	syntax.c	FUNCTION_70	IF_1
0x7c3e	              0x98	                                    cwde	      4280	syntax.c	FUNCTION_70	IF_1
0x7c3f	    0x890500000000	            mov dword [0x04007c85], eax 	      4280	syntax.c	FUNCTION_70	IF_1
0x7c45	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      4281	syntax.c	FUNCTION_70	IF_1	CALL_1
0x7c48	            0x89c6	                            mov esi, eax	      4281	syntax.c	FUNCTION_70	IF_1	CALL_1
0x7c4a	      0xbf00000000	                              mov edi, 0	      4281	syntax.c	FUNCTION_70	IF_1	CALL_1
0x7c4f	      0xe800000000	                          call 0x4007c94	      4281	syntax.c	FUNCTION_70	IF_1	CALL_1
0x7c54	      0xbf3d000000	                           mov edi, 0x3d	      4282	syntax.c	FUNCTION_70	IF_1	CALL_2
0x7c59	      0xe800000000	                          call 0x4007c9e	      4282	syntax.c	FUNCTION_70	IF_1	CALL_2
0x7c5e	    0x8b0500000000	            mov eax, dword [0x04007ca4] 	      4283	syntax.c	FUNCTION_70	IF_1	IF_2
0x7c64	            0x85c0	                           test eax, eax	      4283	syntax.c	FUNCTION_70	IF_1	IF_2
0x7c66	            0x750c	                           jne 0x4007cb4	      4283	syntax.c	FUNCTION_70	IF_1	IF_2
0x7c68	      0xbf00000000	                              mov edi, 0	      4284	syntax.c	FUNCTION_70	IF_1	CALL_3
0x7c6d	      0xe800000000	                          call 0x4007cb2	      4284	syntax.c	FUNCTION_70	IF_1	CALL_3
0x7c72	            0xeb38	                           jmp 0x4007cec	      4284	syntax.c	FUNCTION_70	IF_1	CALL_3
0x7c74	    0x488b0d000000	            mov rcx, qword [0x04007cbb] 	      4286	syntax.c	FUNCTION_70	IF_1	CALL_5
0x7c7b	    0x8b0500000000	            mov eax, dword [0x04007cc1] 	      4286	syntax.c	FUNCTION_70	IF_1	CALL_5
0x7c81	          0x4863d0	                         movsxd rdx, eax	      4286	syntax.c	FUNCTION_70	IF_1	CALL_5
0x7c84	          0x4889d0	                            mov rax, rdx	      4286	syntax.c	FUNCTION_70	IF_1	CALL_5
0x7c87	        0x48c1e003	                              shl rax, 3	      4286	syntax.c	FUNCTION_70	IF_1	CALL_5
0x7c8b	          0x4801d0	                            add rax, rdx	      4286	syntax.c	FUNCTION_70	IF_1	CALL_5
0x7c8e	          0x4801c0	                            add rax, rax	      4286	syntax.c	FUNCTION_70	IF_1	CALL_5
0x7c91	          0x4801d0	                            add rax, rdx	      4286	syntax.c	FUNCTION_70	IF_1	CALL_5
0x7c94	        0x48c1e003	                              shl rax, 3	      4286	syntax.c	FUNCTION_70	IF_1	CALL_5
0x7c98	    0x482d98000000	                           sub rax, 0x98	      4286	syntax.c	FUNCTION_70	IF_1	CALL_5
0x7c9e	          0x4801c8	                            add rax, rcx	      4286	syntax.c	FUNCTION_70	IF_1	CALL_5
0x7ca1	          0x488b00	                    mov rax, qword [rax]	      4286	syntax.c	FUNCTION_70	IF_1	CALL_5
0x7ca4	          0x4889c7	                            mov rdi, rax	      4286	syntax.c	FUNCTION_70	IF_1	CALL_5
0x7ca7	      0xe800000000	                          call 0x4007cec	      4286	syntax.c	FUNCTION_70	IF_1	CALL_5
0x7cac	      0xbf20000000	                           mov edi, 0x20	      4287	syntax.c	FUNCTION_70	IF_1	CALL_6
0x7cb1	      0xe800000000	                          call 0x4007cf6	      4287	syntax.c	FUNCTION_70	IF_1	CALL_6
0x7cb6	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      4291	syntax.c	FUNCTION_70	CALL_7
0x7cb9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4291	syntax.c	FUNCTION_70	CALL_7
0x7cbd	            0x89d6	                            mov esi, edx	      4291	syntax.c	FUNCTION_70	CALL_7
0x7cbf	          0x4889c7	                            mov rdi, rax	      4291	syntax.c	FUNCTION_70	CALL_7
0x7cc2	      0xe800000000	                          call 0x4007d07	      4291	syntax.c	FUNCTION_70	CALL_7
0x7cc7	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      4292	syntax.c	FUNCTION_70	CALL_8
0x7cca	            0x89c7	                            mov edi, eax	      4292	syntax.c	FUNCTION_70	CALL_8
0x7ccc	      0xe800000000	                          call 0x4007d11	      4292	syntax.c	FUNCTION_70	CALL_8
0x7cd1	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_9
0x7cd8	            0xeb23	                           jmp 0x4007d3d	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_9
0x7cda	    0x488b15000000	            mov rdx, qword [0x04007d21] 	      4296	syntax.c	FUNCTION_70	FOR_1	IF_3
0x7ce1	        0x8345f001	               add dword [rbp - 0x10], 1	      4296	syntax.c	FUNCTION_70	FOR_1	IF_3
0x7ce5	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4296	syntax.c	FUNCTION_70	FOR_1	IF_3
0x7ce8	            0x4898	                                    cdqe	      4296	syntax.c	FUNCTION_70	FOR_1	IF_3
0x7cea	          0x4801d0	                            add rax, rdx	      4296	syntax.c	FUNCTION_70	FOR_1	IF_3
0x7ced	           0xfb600	                   movzx eax, byte [rax]	      4296	syntax.c	FUNCTION_70	FOR_1	IF_3
0x7cf0	            0x84c0	                             test al, al	      4296	syntax.c	FUNCTION_70	FOR_1	IF_3
0x7cf2	            0x7509	                           jne 0x4007d3d	      4296	syntax.c	FUNCTION_70	FOR_1	IF_3
0x7cf4	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      4298	syntax.c	FUNCTION_70	FOR_1	IF_3
0x7cfb	            0xeb2c	                           jmp 0x4007d69	      4299	syntax.c	FUNCTION_70	FOR_1	IF_3
0x7cfd	    0x488b15000000	            mov rdx, qword [0x04007d44] 	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_9
0x7d04	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_9
0x7d07	            0x4898	                                    cdqe	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_9
0x7d09	          0x4801d0	                            add rax, rdx	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_9
0x7d0c	           0xfb600	                   movzx eax, byte [rax]	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_9
0x7d0f	           0xfbed0	                           movsx edx, al	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_9
0x7d12	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_9
0x7d16	        0x488b4060	            mov rax, qword [rax + 0x60] 	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_9
0x7d1a	            0x89d6	                            mov esi, edx	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_9
0x7d1c	          0x4889c7	                            mov rdi, rax	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_9
0x7d1f	      0xe800000000	                          call 0x4007d64	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_9
0x7d24	          0x4885c0	                           test rax, rax	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_9
0x7d27	            0x75b1	                           jne 0x4007d1a	      4295	syntax.c	FUNCTION_70	FOR_1	CALL_9
0x7d29	    0x488b15000000	            mov rdx, qword [0x04007d70] 	      4301	syntax.c	FUNCTION_70	CALL_10
0x7d30	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4301	syntax.c	FUNCTION_70	CALL_10
0x7d33	            0x4898	                                    cdqe	      4301	syntax.c	FUNCTION_70	CALL_10
0x7d35	          0x4801d0	                            add rax, rdx	      4301	syntax.c	FUNCTION_70	CALL_10
0x7d38	           0xfb600	                   movzx eax, byte [rax]	      4301	syntax.c	FUNCTION_70	CALL_10
0x7d3b	           0xfbec0	                           movsx eax, al	      4301	syntax.c	FUNCTION_70	CALL_10
0x7d3e	            0x89c7	                            mov edi, eax	      4301	syntax.c	FUNCTION_70	CALL_10
0x7d40	      0xe800000000	                          call 0x4007d85	      4301	syntax.c	FUNCTION_70	CALL_10
0x7d45	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4302	syntax.c	FUNCTION_70	CALL_11
0x7d49	        0x488b4060	            mov rax, qword [rax + 0x60] 	      4302	syntax.c	FUNCTION_70	CALL_11
0x7d4d	          0x4889c7	                            mov rdi, rax	      4302	syntax.c	FUNCTION_70	CALL_11
0x7d50	      0xe800000000	                          call 0x4007d95	      4302	syntax.c	FUNCTION_70	CALL_11
0x7d55	    0x488b15000000	            mov rdx, qword [0x04007d9c] 	      4303	syntax.c	FUNCTION_70	CALL_12
0x7d5c	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4303	syntax.c	FUNCTION_70	CALL_12
0x7d5f	            0x4898	                                    cdqe	      4303	syntax.c	FUNCTION_70	CALL_12
0x7d61	          0x4801d0	                            add rax, rdx	      4303	syntax.c	FUNCTION_70	CALL_12
0x7d64	           0xfb600	                   movzx eax, byte [rax]	      4303	syntax.c	FUNCTION_70	CALL_12
0x7d67	           0xfbec0	                           movsx eax, al	      4303	syntax.c	FUNCTION_70	CALL_12
0x7d6a	            0x89c7	                            mov edi, eax	      4303	syntax.c	FUNCTION_70	CALL_12
0x7d6c	      0xe800000000	                          call 0x4007db1	      4303	syntax.c	FUNCTION_70	CALL_12
0x7d71	    0xc745ec010000	               mov dword [rbp - 0x14], 1	      4306	syntax.c	FUNCTION_70
0x7d78	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      4307	syntax.c	FUNCTION_70	FOR_2
0x7d7f	      0xe9cb000000	                           jmp 0x4007e8f	      4307	syntax.c	FUNCTION_70	FOR_2
0x7d84	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4309	syntax.c	FUNCTION_70	FOR_2
0x7d87	      0xba01000000	                              mov edx, 1	      4309	syntax.c	FUNCTION_70	FOR_2
0x7d8c	            0x89c1	                            mov ecx, eax	      4309	syntax.c	FUNCTION_70	FOR_2
0x7d8e	            0xd3e2	                             shl edx, cl	      4309	syntax.c	FUNCTION_70	FOR_2
0x7d90	            0x89d0	                            mov eax, edx	      4309	syntax.c	FUNCTION_70	FOR_2
0x7d92	          0x8945f4	              mov dword [rbp - 0xc], eax	      4309	syntax.c	FUNCTION_70	FOR_2
0x7d95	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x7d99	         0xfb74004	               movzx eax, word [rax + 4]	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x7d9d	              0x98	                                    cwde	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x7d9e	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x7da1	            0x89d1	                            mov ecx, edx	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x7da3	          0xc1e107	                              shl ecx, 7	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x7da6	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x7da9	             0x1ca	                            add edx, ecx	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x7dab	            0x21d0	                            and eax, edx	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x7dad	            0x85c0	                           test eax, eax	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x7daf	     0xf8496000000	                            je 0x4007e8b	      4310	syntax.c	FUNCTION_70	FOR_2	IF_4
0x7db5	        0x837dec00	               cmp dword [rbp - 0x14], 0	      4312	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_5
0x7db9	            0x750a	                           jne 0x4007e05	      4312	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_5
0x7dbb	      0xbf2c000000	                           mov edi, 0x2c	      4313	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_13
0x7dc0	      0xe800000000	                          call 0x4007e05	      4313	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_13
0x7dc5	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4314	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_14
0x7dc8	            0x4898	                                    cdqe	      4314	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_14
0x7dca	    0x488b04c50000	                  mov rax, qword [rax*8]	      4314	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_14
0x7dd2	          0x4889c7	                            mov rdi, rax	      4314	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_14
0x7dd5	      0xe800000000	                          call 0x4007e1a	      4314	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_14
0x7dda	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4315	syntax.c	FUNCTION_70	FOR_2	IF_4
0x7dde	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      4315	syntax.c	FUNCTION_70	FOR_2	IF_4
0x7de1	          0x4863d2	                         movsxd rdx, edx	      4315	syntax.c	FUNCTION_70	FOR_2	IF_4
0x7de4	        0x8b449008	       mov eax, dword [rax + rdx*4 + 8] 	      4315	syntax.c	FUNCTION_70	FOR_2	IF_4
0x7de8	            0x4898	                                    cdqe	      4315	syntax.c	FUNCTION_70	FOR_2	IF_4
0x7dea	        0x488945f8	                mov qword [rbp - 8], rax	      4315	syntax.c	FUNCTION_70	FOR_2	IF_4
0x7dee	        0x837df006	               cmp dword [rbp - 0x10], 6	      4316	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6
0x7df2	            0x7437	                            je 0x4007e6b	      4316	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6
0x7df4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4318	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	IF_7
0x7df8	         0xfb74004	               movzx eax, word [rax + 4]	      4318	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	IF_7
0x7dfc	              0x98	                                    cwde	      4318	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	IF_7
0x7dfd	          0x2345f4	              and eax, dword [rbp - 0xc]	      4318	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	IF_7
0x7e00	            0x85c0	                           test eax, eax	      4318	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	IF_7
0x7e02	            0x740c	                            je 0x4007e50	      4318	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	IF_7
0x7e04	      0xbf73000000	                           mov edi, 0x73	      4319	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	CALL_15
0x7e09	      0xe800000000	                          call 0x4007e4e	      4319	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	CALL_15
0x7e0e	            0xeb0a	                           jmp 0x4007e5a	      4319	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	CALL_15
0x7e10	      0xbf65000000	                           mov edi, 0x65	      4321	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	CALL_16
0x7e15	      0xe800000000	                          call 0x4007e5a	      4321	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	CALL_16
0x7e1a	      0x48837df800	                  cmp qword [rbp - 8], 0	      4322	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	IF_8
0x7e1f	            0x7e0a	                           jle 0x4007e6b	      4322	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	IF_8
0x7e21	      0xbf2b000000	                           mov edi, 0x2b	      4323	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	CALL_17
0x7e26	      0xe800000000	                          call 0x4007e6b	      4323	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_6	CALL_17
0x7e2b	      0x48837df800	                  cmp qword [rbp - 8], 0	      4325	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_9
0x7e30	            0x7506	                           jne 0x4007e78	      4325	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_9
0x7e32	        0x837df006	               cmp dword [rbp - 0x10], 6	      4325	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_9
0x7e36	            0x750c	                           jne 0x4007e84	      4325	syntax.c	FUNCTION_70	FOR_2	IF_4	IF_9
0x7e38	        0x488b45f8	                mov rax, qword [rbp - 8]	      4326	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_18
0x7e3c	          0x4889c7	                            mov rdi, rax	      4326	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_18
0x7e3f	      0xe800000000	                          call 0x4007e84	      4326	syntax.c	FUNCTION_70	FOR_2	IF_4	CALL_18
0x7e44	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      4327	syntax.c	FUNCTION_70	FOR_2	IF_4
0x7e4b	        0x8345f001	               add dword [rbp - 0x10], 1	      4307	syntax.c	FUNCTION_70	FOR_2
0x7e4f	        0x837df006	               cmp dword [rbp - 0x10], 6	      4307	syntax.c	FUNCTION_70	FOR_2
0x7e53	     0xf8e2bffffff	                           jle 0x4007dc4	      4307	syntax.c	FUNCTION_70	FOR_2
0x7e59	      0xbf20000000	                           mov edi, 0x20	      4330	syntax.c	FUNCTION_70	CALL_19
0x7e5e	      0xe800000000	                          call 0x4007ea3	      4330	syntax.c	FUNCTION_70	CALL_19
0x7e63	              0x90	                                     nop	      4331	syntax.c	FUNCTION_70
0x7e64	              0xc9	                                   leave	      4331	syntax.c	FUNCTION_70
0x7e65	              0xc3	                                     ret	      4331	syntax.c	FUNCTION_70
syn_term_attr2entry	FOR,0:DO,0:IF,1:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,1	19
0x11c3c	              0x55	                                push rbp	      9194	syntax.c	FUNCTION_139
0x11c3d	          0x4889e5	                            mov rbp, rsp	      9194	syntax.c	FUNCTION_139
0x11c40	          0x897dfc	                mov dword [rbp - 4], edi	      9194	syntax.c	FUNCTION_139
0x11c43	    0x816dfc000100	              sub dword [rbp - 4], 0x100	      9195	syntax.c	FUNCTION_139
0x11c4a	    0x8b0500000000	            mov eax, dword [0x04011c90] 	      9196	syntax.c	FUNCTION_139	IF_1
0x11c50	          0x3b45fc	                cmp eax, dword [rbp - 4]	      9196	syntax.c	FUNCTION_139	IF_1
0x11c53	            0x7f07	                            jg 0x4011c9c	      9196	syntax.c	FUNCTION_139	IF_1
0x11c55	      0xb800000000	                              mov eax, 0	      9197	syntax.c	FUNCTION_139	IF_1
0x11c5a	            0xeb1e	                           jmp 0x4011cba	      9197	syntax.c	FUNCTION_139	IF_1
0x11c5c	    0x488b0d000000	            mov rcx, qword [0x04011ca3] 	      9198	syntax.c	FUNCTION_139	CALL_1
0x11c63	          0x8b45fc	                mov eax, dword [rbp - 4]	      9198	syntax.c	FUNCTION_139	CALL_1
0x11c66	          0x4863d0	                         movsxd rdx, eax	      9198	syntax.c	FUNCTION_139	CALL_1
0x11c69	          0x4889d0	                            mov rax, rdx	      9198	syntax.c	FUNCTION_139	CALL_1
0x11c6c	        0x48c1e002	                              shl rax, 2	      9198	syntax.c	FUNCTION_139	CALL_1
0x11c70	          0x4801d0	                            add rax, rdx	      9198	syntax.c	FUNCTION_139	CALL_1
0x11c73	        0x48c1e003	                              shl rax, 3	      9198	syntax.c	FUNCTION_139	CALL_1
0x11c77	          0x4801c8	                            add rax, rcx	      9198	syntax.c	FUNCTION_139	CALL_1
0x11c7a	              0x5d	                                 pop rbp	      9199	syntax.c	FUNCTION_139
0x11c7b	              0xc3	                                     ret	      9199	syntax.c	FUNCTION_139
hl_set_font_name	FOR,0:DO,0:IF,1:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,5	44
0x10c3c	              0x55	                                push rbp	      8540	syntax.c	FUNCTION_124
0x10c3d	          0x4889e5	                            mov rbp, rsp	      8540	syntax.c	FUNCTION_124
0x10c40	              0x53	                                push rbx	      8540	syntax.c	FUNCTION_124
0x10c41	        0x4883ec28	                           sub rsp, 0x28	      8540	syntax.c	FUNCTION_124
0x10c45	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      8540	syntax.c	FUNCTION_124
0x10c49	      0xbf00000000	                              mov edi, 0	      8543	syntax.c	FUNCTION_124	CALL_1
0x10c4e	      0xe800000000	                          call 0x4010c93	      8543	syntax.c	FUNCTION_124	CALL_1
0x10c53	          0x8945ec	             mov dword [rbp - 0x14], eax	      8543	syntax.c	FUNCTION_124	CALL_1
0x10c56	        0x837dec00	               cmp dword [rbp - 0x14], 0	      8544	syntax.c	FUNCTION_124	IF_1
0x10c5a	            0x7e71	                           jle 0x4010d0d	      8544	syntax.c	FUNCTION_124	IF_1
0x10c5c	    0x488b0d000000	            mov rcx, qword [0x04010ca3] 	      8546	syntax.c	FUNCTION_124	IF_1	CALL_3
0x10c63	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      8546	syntax.c	FUNCTION_124	IF_1	CALL_3
0x10c66	          0x4863d0	                         movsxd rdx, eax	      8546	syntax.c	FUNCTION_124	IF_1	CALL_3
0x10c69	          0x4889d0	                            mov rax, rdx	      8546	syntax.c	FUNCTION_124	IF_1	CALL_3
0x10c6c	        0x48c1e003	                              shl rax, 3	      8546	syntax.c	FUNCTION_124	IF_1	CALL_3
0x10c70	          0x4801d0	                            add rax, rdx	      8546	syntax.c	FUNCTION_124	IF_1	CALL_3
0x10c73	          0x4801c0	                            add rax, rax	      8546	syntax.c	FUNCTION_124	IF_1	CALL_3
0x10c76	          0x4801d0	                            add rax, rdx	      8546	syntax.c	FUNCTION_124	IF_1	CALL_3
0x10c79	        0x48c1e003	                              shl rax, 3	      8546	syntax.c	FUNCTION_124	IF_1	CALL_3
0x10c7d	    0x482d98000000	                           sub rax, 0x98	      8546	syntax.c	FUNCTION_124	IF_1	CALL_3
0x10c83	          0x4801c8	                            add rax, rcx	      8546	syntax.c	FUNCTION_124	IF_1	CALL_3
0x10c86	        0x488b4060	            mov rax, qword [rax + 0x60] 	      8546	syntax.c	FUNCTION_124	IF_1	CALL_3
0x10c8a	          0x4889c7	                            mov rdi, rax	      8546	syntax.c	FUNCTION_124	IF_1	CALL_3
0x10c8d	      0xe800000000	                          call 0x4010cd2	      8546	syntax.c	FUNCTION_124	IF_1	CALL_3
0x10c92	    0x488b0d000000	            mov rcx, qword [0x04010cd9] 	      8547	syntax.c	FUNCTION_124	IF_1	CALL_5
0x10c99	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      8547	syntax.c	FUNCTION_124	IF_1	CALL_5
0x10c9c	          0x4863d0	                         movsxd rdx, eax	      8547	syntax.c	FUNCTION_124	IF_1	CALL_5
0x10c9f	          0x4889d0	                            mov rax, rdx	      8547	syntax.c	FUNCTION_124	IF_1	CALL_5
0x10ca2	        0x48c1e003	                              shl rax, 3	      8547	syntax.c	FUNCTION_124	IF_1	CALL_5
0x10ca6	          0x4801d0	                            add rax, rdx	      8547	syntax.c	FUNCTION_124	IF_1	CALL_5
0x10ca9	          0x4801c0	                            add rax, rax	      8547	syntax.c	FUNCTION_124	IF_1	CALL_5
0x10cac	          0x4801d0	                            add rax, rdx	      8547	syntax.c	FUNCTION_124	IF_1	CALL_5
0x10caf	        0x48c1e003	                              shl rax, 3	      8547	syntax.c	FUNCTION_124	IF_1	CALL_5
0x10cb3	    0x482d98000000	                           sub rax, 0x98	      8547	syntax.c	FUNCTION_124	IF_1	CALL_5
0x10cb9	        0x488d1c01	                    lea rbx, [rcx + rax]	      8547	syntax.c	FUNCTION_124	IF_1	CALL_5
0x10cbd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8547	syntax.c	FUNCTION_124	IF_1	CALL_5
0x10cc1	          0x4889c7	                            mov rdi, rax	      8547	syntax.c	FUNCTION_124	IF_1	CALL_5
0x10cc4	      0xe800000000	                          call 0x4010d09	      8547	syntax.c	FUNCTION_124	IF_1	CALL_5
0x10cc9	        0x48894360	             mov qword [rbx + 0x60], rax	      8547	syntax.c	FUNCTION_124	IF_1	CALL_5
0x10ccd	              0x90	                                     nop	      8549	syntax.c	FUNCTION_124
0x10cce	        0x4883c428	                           add rsp, 0x28	      8549	syntax.c	FUNCTION_124
0x10cd2	              0x5b	                                 pop rbx	      8549	syntax.c	FUNCTION_124
0x10cd3	              0x5d	                                 pop rbp	      8549	syntax.c	FUNCTION_124
0x10cd4	              0xc3	                                     ret	      8549	syntax.c	FUNCTION_124
highlight_list_one	FOR,0:DO,0:IF,3:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,21	202
0x11cbc	              0x55	                                push rbp	      9216	syntax.c	FUNCTION_141
0x11cbd	          0x4889e5	                            mov rbp, rsp	      9216	syntax.c	FUNCTION_141
0x11cc0	        0x4883ec20	                           sub rsp, 0x20	      9216	syntax.c	FUNCTION_141
0x11cc4	          0x897dec	             mov dword [rbp - 0x14], edi	      9216	syntax.c	FUNCTION_141
0x11cc7	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      9218	syntax.c	FUNCTION_141
0x11cce	    0x488b0d000000	            mov rcx, qword [0x04011d15] 	      9220	syntax.c	FUNCTION_141	CALL_1
0x11cd5	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9220	syntax.c	FUNCTION_141	CALL_1
0x11cd8	          0x4863d0	                         movsxd rdx, eax	      9220	syntax.c	FUNCTION_141	CALL_1
0x11cdb	          0x4889d0	                            mov rax, rdx	      9220	syntax.c	FUNCTION_141	CALL_1
0x11cde	        0x48c1e003	                              shl rax, 3	      9220	syntax.c	FUNCTION_141	CALL_1
0x11ce2	          0x4801d0	                            add rax, rdx	      9220	syntax.c	FUNCTION_141	CALL_1
0x11ce5	          0x4801c0	                            add rax, rax	      9220	syntax.c	FUNCTION_141	CALL_1
0x11ce8	          0x4801d0	                            add rax, rdx	      9220	syntax.c	FUNCTION_141	CALL_1
0x11ceb	        0x48c1e003	                              shl rax, 3	      9220	syntax.c	FUNCTION_141	CALL_1
0x11cef	    0x482d98000000	                           sub rax, 0x98	      9220	syntax.c	FUNCTION_141	CALL_1
0x11cf5	          0x4801c8	                            add rax, rcx	      9220	syntax.c	FUNCTION_141	CALL_1
0x11cf8	        0x488945f8	                mov qword [rbp - 8], rax	      9220	syntax.c	FUNCTION_141	CALL_1
0x11cfc	        0x488b45f8	                mov rax, qword [rbp - 8]	      9222	syntax.c	FUNCTION_141	CALL_2
0x11d00	          0x8b5014	            mov edx, dword [rax + 0x14] 	      9222	syntax.c	FUNCTION_141	CALL_2
0x11d03	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      9222	syntax.c	FUNCTION_141	CALL_2
0x11d06	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9222	syntax.c	FUNCTION_141	CALL_2
0x11d09	    0x41b900000000	                              mov r9d, 0	      9222	syntax.c	FUNCTION_141	CALL_2
0x11d0f	    0x41b800000000	                              mov r8d, 0	      9222	syntax.c	FUNCTION_141	CALL_2
0x11d15	            0x89d1	                            mov ecx, edx	      9222	syntax.c	FUNCTION_141	CALL_2
0x11d17	      0xba01000000	                              mov edx, 1	      9222	syntax.c	FUNCTION_141	CALL_2
0x11d1c	            0x89c7	                            mov edi, eax	      9222	syntax.c	FUNCTION_141	CALL_2
0x11d1e	      0xe8b0020000	             call sym.highlight_list_arg	      9222	syntax.c	FUNCTION_141	CALL_2
0x11d23	          0x8945f4	              mov dword [rbp - 0xc], eax	      9222	syntax.c	FUNCTION_141	CALL_2
0x11d26	        0x488b45f8	                mov rax, qword [rbp - 8]	      9224	syntax.c	FUNCTION_141	CALL_3
0x11d2a	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      9224	syntax.c	FUNCTION_141	CALL_3
0x11d2e	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      9224	syntax.c	FUNCTION_141	CALL_3
0x11d31	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9224	syntax.c	FUNCTION_141	CALL_3
0x11d34	    0x41b900000000	                              mov r9d, 0	      9224	syntax.c	FUNCTION_141	CALL_3
0x11d3a	          0x4989d0	                             mov r8, rdx	      9224	syntax.c	FUNCTION_141	CALL_3
0x11d3d	      0xb900000000	                              mov ecx, 0	      9224	syntax.c	FUNCTION_141	CALL_3
0x11d42	      0xba02000000	                              mov edx, 2	      9224	syntax.c	FUNCTION_141	CALL_3
0x11d47	            0x89c7	                            mov edi, eax	      9224	syntax.c	FUNCTION_141	CALL_3
0x11d49	      0xe885020000	             call sym.highlight_list_arg	      9224	syntax.c	FUNCTION_141	CALL_3
0x11d4e	          0x8945f4	              mov dword [rbp - 0xc], eax	      9224	syntax.c	FUNCTION_141	CALL_3
0x11d51	        0x488b45f8	                mov rax, qword [rbp - 8]	      9226	syntax.c	FUNCTION_141	CALL_4
0x11d55	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      9226	syntax.c	FUNCTION_141	CALL_4
0x11d59	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      9226	syntax.c	FUNCTION_141	CALL_4
0x11d5c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9226	syntax.c	FUNCTION_141	CALL_4
0x11d5f	    0x41b900000000	                              mov r9d, 0	      9226	syntax.c	FUNCTION_141	CALL_4
0x11d65	          0x4989d0	                             mov r8, rdx	      9226	syntax.c	FUNCTION_141	CALL_4
0x11d68	      0xb900000000	                              mov ecx, 0	      9226	syntax.c	FUNCTION_141	CALL_4
0x11d6d	      0xba02000000	                              mov edx, 2	      9226	syntax.c	FUNCTION_141	CALL_4
0x11d72	            0x89c7	                            mov edi, eax	      9226	syntax.c	FUNCTION_141	CALL_4
0x11d74	      0xe85a020000	             call sym.highlight_list_arg	      9226	syntax.c	FUNCTION_141	CALL_4
0x11d79	          0x8945f4	              mov dword [rbp - 0xc], eax	      9226	syntax.c	FUNCTION_141	CALL_4
0x11d7c	        0x488b45f8	                mov rax, qword [rbp - 8]	      9229	syntax.c	FUNCTION_141	CALL_5
0x11d80	          0x8b502c	            mov edx, dword [rax + 0x2c] 	      9229	syntax.c	FUNCTION_141	CALL_5
0x11d83	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      9229	syntax.c	FUNCTION_141	CALL_5
0x11d86	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9229	syntax.c	FUNCTION_141	CALL_5
0x11d89	    0x41b900000000	                              mov r9d, 0	      9229	syntax.c	FUNCTION_141	CALL_5
0x11d8f	    0x41b800000000	                              mov r8d, 0	      9229	syntax.c	FUNCTION_141	CALL_5
0x11d95	            0x89d1	                            mov ecx, edx	      9229	syntax.c	FUNCTION_141	CALL_5
0x11d97	      0xba01000000	                              mov edx, 1	      9229	syntax.c	FUNCTION_141	CALL_5
0x11d9c	            0x89c7	                            mov edi, eax	      9229	syntax.c	FUNCTION_141	CALL_5
0x11d9e	      0xe830020000	             call sym.highlight_list_arg	      9229	syntax.c	FUNCTION_141	CALL_5
0x11da3	          0x8945f4	              mov dword [rbp - 0xc], eax	      9229	syntax.c	FUNCTION_141	CALL_5
0x11da6	        0x488b45f8	                mov rax, qword [rbp - 8]	      9231	syntax.c	FUNCTION_141	CALL_6
0x11daa	          0x8b5034	            mov edx, dword [rax + 0x34] 	      9231	syntax.c	FUNCTION_141	CALL_6
0x11dad	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      9231	syntax.c	FUNCTION_141	CALL_6
0x11db0	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9231	syntax.c	FUNCTION_141	CALL_6
0x11db3	    0x41b900000000	                              mov r9d, 0	      9231	syntax.c	FUNCTION_141	CALL_6
0x11db9	    0x41b800000000	                              mov r8d, 0	      9231	syntax.c	FUNCTION_141	CALL_6
0x11dbf	            0x89d1	                            mov ecx, edx	      9231	syntax.c	FUNCTION_141	CALL_6
0x11dc1	      0xba03000000	                              mov edx, 3	      9231	syntax.c	FUNCTION_141	CALL_6
0x11dc6	            0x89c7	                            mov edi, eax	      9231	syntax.c	FUNCTION_141	CALL_6
0x11dc8	      0xe806020000	             call sym.highlight_list_arg	      9231	syntax.c	FUNCTION_141	CALL_6
0x11dcd	          0x8945f4	              mov dword [rbp - 0xc], eax	      9231	syntax.c	FUNCTION_141	CALL_6
0x11dd0	        0x488b45f8	                mov rax, qword [rbp - 8]	      9233	syntax.c	FUNCTION_141	CALL_7
0x11dd4	          0x8b5038	            mov edx, dword [rax + 0x38] 	      9233	syntax.c	FUNCTION_141	CALL_7
0x11dd7	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      9233	syntax.c	FUNCTION_141	CALL_7
0x11dda	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9233	syntax.c	FUNCTION_141	CALL_7
0x11ddd	    0x41b900000000	                              mov r9d, 0	      9233	syntax.c	FUNCTION_141	CALL_7
0x11de3	    0x41b800000000	                              mov r8d, 0	      9233	syntax.c	FUNCTION_141	CALL_7
0x11de9	            0x89d1	                            mov ecx, edx	      9233	syntax.c	FUNCTION_141	CALL_7
0x11deb	      0xba03000000	                              mov edx, 3	      9233	syntax.c	FUNCTION_141	CALL_7
0x11df0	            0x89c7	                            mov edi, eax	      9233	syntax.c	FUNCTION_141	CALL_7
0x11df2	      0xe8dc010000	             call sym.highlight_list_arg	      9233	syntax.c	FUNCTION_141	CALL_7
0x11df7	          0x8945f4	              mov dword [rbp - 0xc], eax	      9233	syntax.c	FUNCTION_141	CALL_7
0x11dfa	        0x488b45f8	                mov rax, qword [rbp - 8]	      9237	syntax.c	FUNCTION_141	CALL_8
0x11dfe	          0x8b506c	            mov edx, dword [rax + 0x6c] 	      9237	syntax.c	FUNCTION_141	CALL_8
0x11e01	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      9237	syntax.c	FUNCTION_141	CALL_8
0x11e04	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9237	syntax.c	FUNCTION_141	CALL_8
0x11e07	    0x41b900000000	                              mov r9d, 0	      9237	syntax.c	FUNCTION_141	CALL_8
0x11e0d	    0x41b800000000	                              mov r8d, 0	      9237	syntax.c	FUNCTION_141	CALL_8
0x11e13	            0x89d1	                            mov ecx, edx	      9237	syntax.c	FUNCTION_141	CALL_8
0x11e15	      0xba01000000	                              mov edx, 1	      9237	syntax.c	FUNCTION_141	CALL_8
0x11e1a	            0x89c7	                            mov edi, eax	      9237	syntax.c	FUNCTION_141	CALL_8
0x11e1c	      0xe8b2010000	             call sym.highlight_list_arg	      9237	syntax.c	FUNCTION_141	CALL_8
0x11e21	          0x8945f4	              mov dword [rbp - 0xc], eax	      9237	syntax.c	FUNCTION_141	CALL_8
0x11e24	        0x488b45f8	                mov rax, qword [rbp - 8]	      9239	syntax.c	FUNCTION_141	CALL_9
0x11e28	        0x488b5070	            mov rdx, qword [rax + 0x70] 	      9239	syntax.c	FUNCTION_141	CALL_9
0x11e2c	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      9239	syntax.c	FUNCTION_141	CALL_9
0x11e2f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9239	syntax.c	FUNCTION_141	CALL_9
0x11e32	    0x41b900000000	                              mov r9d, 0	      9239	syntax.c	FUNCTION_141	CALL_9
0x11e38	          0x4989d0	                             mov r8, rdx	      9239	syntax.c	FUNCTION_141	CALL_9
0x11e3b	      0xb900000000	                              mov ecx, 0	      9239	syntax.c	FUNCTION_141	CALL_9
0x11e40	      0xba02000000	                              mov edx, 2	      9239	syntax.c	FUNCTION_141	CALL_9
0x11e45	            0x89c7	                            mov edi, eax	      9239	syntax.c	FUNCTION_141	CALL_9
0x11e47	      0xe887010000	             call sym.highlight_list_arg	      9239	syntax.c	FUNCTION_141	CALL_9
0x11e4c	          0x8945f4	              mov dword [rbp - 0xc], eax	      9239	syntax.c	FUNCTION_141	CALL_9
0x11e4f	        0x488b45f8	                mov rax, qword [rbp - 8]	      9241	syntax.c	FUNCTION_141	CALL_10
0x11e53	        0x488b5078	            mov rdx, qword [rax + 0x78] 	      9241	syntax.c	FUNCTION_141	CALL_10
0x11e57	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      9241	syntax.c	FUNCTION_141	CALL_10
0x11e5a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9241	syntax.c	FUNCTION_141	CALL_10
0x11e5d	    0x41b900000000	                              mov r9d, 0	      9241	syntax.c	FUNCTION_141	CALL_10
0x11e63	          0x4989d0	                             mov r8, rdx	      9241	syntax.c	FUNCTION_141	CALL_10
0x11e66	      0xb900000000	                              mov ecx, 0	      9241	syntax.c	FUNCTION_141	CALL_10
0x11e6b	      0xba02000000	                              mov edx, 2	      9241	syntax.c	FUNCTION_141	CALL_10
0x11e70	            0x89c7	                            mov edi, eax	      9241	syntax.c	FUNCTION_141	CALL_10
0x11e72	      0xe85c010000	             call sym.highlight_list_arg	      9241	syntax.c	FUNCTION_141	CALL_10
0x11e77	          0x8945f4	              mov dword [rbp - 0xc], eax	      9241	syntax.c	FUNCTION_141	CALL_10
0x11e7a	        0x488b45f8	                mov rax, qword [rbp - 8]	      9243	syntax.c	FUNCTION_141	CALL_11
0x11e7e	    0x488b90800000	            mov rdx, qword [rax + 0x80] 	      9243	syntax.c	FUNCTION_141	CALL_11
0x11e85	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      9243	syntax.c	FUNCTION_141	CALL_11
0x11e88	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9243	syntax.c	FUNCTION_141	CALL_11
0x11e8b	    0x41b900000000	                              mov r9d, 0	      9243	syntax.c	FUNCTION_141	CALL_11
0x11e91	          0x4989d0	                             mov r8, rdx	      9243	syntax.c	FUNCTION_141	CALL_11
0x11e94	      0xb900000000	                              mov ecx, 0	      9243	syntax.c	FUNCTION_141	CALL_11
0x11e99	      0xba02000000	                              mov edx, 2	      9243	syntax.c	FUNCTION_141	CALL_11
0x11e9e	            0x89c7	                            mov edi, eax	      9243	syntax.c	FUNCTION_141	CALL_11
0x11ea0	      0xe82e010000	             call sym.highlight_list_arg	      9243	syntax.c	FUNCTION_141	CALL_11
0x11ea5	          0x8945f4	              mov dword [rbp - 0xc], eax	      9243	syntax.c	FUNCTION_141	CALL_11
0x11ea8	        0x488b45f8	                mov rax, qword [rbp - 8]	      9247	syntax.c	FUNCTION_141	CALL_12
0x11eac	        0x488b5060	            mov rdx, qword [rax + 0x60] 	      9247	syntax.c	FUNCTION_141	CALL_12
0x11eb0	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      9247	syntax.c	FUNCTION_141	CALL_12
0x11eb3	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9247	syntax.c	FUNCTION_141	CALL_12
0x11eb6	    0x41b900000000	                              mov r9d, 0	      9247	syntax.c	FUNCTION_141	CALL_12
0x11ebc	          0x4989d0	                             mov r8, rdx	      9247	syntax.c	FUNCTION_141	CALL_12
0x11ebf	      0xb900000000	                              mov ecx, 0	      9247	syntax.c	FUNCTION_141	CALL_12
0x11ec4	      0xba02000000	                              mov edx, 2	      9247	syntax.c	FUNCTION_141	CALL_12
0x11ec9	            0x89c7	                            mov edi, eax	      9247	syntax.c	FUNCTION_141	CALL_12
0x11ecb	      0xe803010000	             call sym.highlight_list_arg	      9247	syntax.c	FUNCTION_141	CALL_12
0x11ed0	          0x8945f4	              mov dword [rbp - 0xc], eax	      9247	syntax.c	FUNCTION_141	CALL_12
0x11ed3	        0x488b45f8	                mov rax, qword [rbp - 8]	      9251	syntax.c	FUNCTION_141	IF_1
0x11ed7	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      9251	syntax.c	FUNCTION_141	IF_1
0x11edd	            0x85c0	                           test eax, eax	      9251	syntax.c	FUNCTION_141	IF_1
0x11edf	     0xf84a5000000	                            je 0x4011fca	      9251	syntax.c	FUNCTION_141	IF_1
0x11ee5	    0x8b0500000000	            mov eax, dword [0x04011f2b] 	      9251	syntax.c	FUNCTION_141	IF_1
0x11eeb	            0x85c0	                           test eax, eax	      9251	syntax.c	FUNCTION_141	IF_1
0x11eed	     0xf8597000000	                           jne 0x4011fca	      9251	syntax.c	FUNCTION_141	IF_1
0x11ef3	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      9253	syntax.c	FUNCTION_141	IF_1	CALL_13
0x11ef6	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      9253	syntax.c	FUNCTION_141	IF_1	CALL_13
0x11ef9	      0xbe0f270000	                         mov esi, 0x270f	      9253	syntax.c	FUNCTION_141	IF_1	CALL_13
0x11efe	            0x89c7	                            mov edi, eax	      9253	syntax.c	FUNCTION_141	IF_1	CALL_13
0x11f00	      0xe83f0a0000	                call sym.syn_list_header	      9253	syntax.c	FUNCTION_141	IF_1	CALL_13
0x11f05	    0xc745f4010000	                mov dword [rbp - 0xc], 1	      9254	syntax.c	FUNCTION_141	IF_1
0x11f0c	    0x8b0500000000	            mov eax, dword [0x04011f52] 	      9255	syntax.c	FUNCTION_141	IF_1	CALL_15
0x11f12	            0x89c6	                            mov esi, eax	      9255	syntax.c	FUNCTION_141	IF_1	CALL_15
0x11f14	      0xbf00000000	                              mov edi, 0	      9255	syntax.c	FUNCTION_141	IF_1	CALL_15
0x11f19	      0xe800000000	                          call 0x4011f5e	      9255	syntax.c	FUNCTION_141	IF_1	CALL_15
0x11f1e	      0xbf20000000	                           mov edi, 0x20	      9256	syntax.c	FUNCTION_141	IF_1	CALL_16
0x11f23	      0xe800000000	                          call 0x4011f68	      9256	syntax.c	FUNCTION_141	IF_1	CALL_16
0x11f28	    0x488b0d000000	            mov rcx, qword [0x04011f6f] 	      9257	syntax.c	FUNCTION_141	IF_1	CALL_19
0x11f2f	    0x488b35000000	            mov rsi, qword [0x04011f76] 	      9257	syntax.c	FUNCTION_141	IF_1	CALL_19
0x11f36	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9257	syntax.c	FUNCTION_141	IF_1	CALL_19
0x11f39	          0x4863d0	                         movsxd rdx, eax	      9257	syntax.c	FUNCTION_141	IF_1	CALL_19
0x11f3c	          0x4889d0	                            mov rax, rdx	      9257	syntax.c	FUNCTION_141	IF_1	CALL_19
0x11f3f	        0x48c1e003	                              shl rax, 3	      9257	syntax.c	FUNCTION_141	IF_1	CALL_19
0x11f43	          0x4801d0	                            add rax, rdx	      9257	syntax.c	FUNCTION_141	IF_1	CALL_19
0x11f46	          0x4801c0	                            add rax, rax	      9257	syntax.c	FUNCTION_141	IF_1	CALL_19
0x11f49	          0x4801d0	                            add rax, rdx	      9257	syntax.c	FUNCTION_141	IF_1	CALL_19
0x11f4c	        0x48c1e003	                              shl rax, 3	      9257	syntax.c	FUNCTION_141	IF_1	CALL_19
0x11f50	    0x482d98000000	                           sub rax, 0x98	      9257	syntax.c	FUNCTION_141	IF_1	CALL_19
0x11f56	          0x4801f0	                            add rax, rsi	      9257	syntax.c	FUNCTION_141	IF_1	CALL_19
0x11f59	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      9257	syntax.c	FUNCTION_141	IF_1	CALL_19
0x11f5f	          0x4863d0	                         movsxd rdx, eax	      9257	syntax.c	FUNCTION_141	IF_1	CALL_19
0x11f62	          0x4889d0	                            mov rax, rdx	      9257	syntax.c	FUNCTION_141	IF_1	CALL_19
0x11f65	        0x48c1e003	                              shl rax, 3	      9257	syntax.c	FUNCTION_141	IF_1	CALL_19
0x11f69	          0x4801d0	                            add rax, rdx	      9257	syntax.c	FUNCTION_141	IF_1	CALL_19
0x11f6c	          0x4801c0	                            add rax, rax	      9257	syntax.c	FUNCTION_141	IF_1	CALL_19
0x11f6f	          0x4801d0	                            add rax, rdx	      9257	syntax.c	FUNCTION_141	IF_1	CALL_19
0x11f72	        0x48c1e003	                              shl rax, 3	      9257	syntax.c	FUNCTION_141	IF_1	CALL_19
0x11f76	    0x482d98000000	                           sub rax, 0x98	      9257	syntax.c	FUNCTION_141	IF_1	CALL_19
0x11f7c	          0x4801c8	                            add rax, rcx	      9257	syntax.c	FUNCTION_141	IF_1	CALL_19
0x11f7f	          0x488b00	                    mov rax, qword [rax]	      9257	syntax.c	FUNCTION_141	IF_1	CALL_19
0x11f82	          0x4889c7	                            mov rdi, rax	      9257	syntax.c	FUNCTION_141	IF_1	CALL_19
0x11f85	      0xe800000000	                          call 0x4011fca	      9257	syntax.c	FUNCTION_141	IF_1	CALL_19
0x11f8a	        0x837df400	                cmp dword [rbp - 0xc], 0	      9260	syntax.c	FUNCTION_141	IF_2
0x11f8e	            0x7523	                           jne 0x4011ff3	      9260	syntax.c	FUNCTION_141	IF_2
0x11f90	          0x8b75f4	              mov esi, dword [rbp - 0xc]	      9261	syntax.c	FUNCTION_141	CALL_20
0x11f93	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9261	syntax.c	FUNCTION_141	CALL_20
0x11f96	    0x41b900000000	                              mov r9d, 0	      9261	syntax.c	FUNCTION_141	CALL_20
0x11f9c	    0x41b800000000	                              mov r8d, 0	      9261	syntax.c	FUNCTION_141	CALL_20
0x11fa2	      0xb900000000	                              mov ecx, 0	      9261	syntax.c	FUNCTION_141	CALL_20
0x11fa7	      0xba02000000	                              mov edx, 2	      9261	syntax.c	FUNCTION_141	CALL_20
0x11fac	            0x89c7	                            mov edi, eax	      9261	syntax.c	FUNCTION_141	CALL_20
0x11fae	      0xe820000000	             call sym.highlight_list_arg	      9261	syntax.c	FUNCTION_141	CALL_20
0x11fb3	    0x488b05000000	            mov rax, qword [0x04011ffa] 	      9263	syntax.c	FUNCTION_141	IF_3
0x11fba	          0x4885c0	                           test rax, rax	      9263	syntax.c	FUNCTION_141	IF_3
0x11fbd	            0x7e11	                           jle 0x4012010	      9263	syntax.c	FUNCTION_141	IF_3
0x11fbf	        0x488b45f8	                mov rax, qword [rbp - 8]	      9264	syntax.c	FUNCTION_141	CALL_21
0x11fc3	    0x8b8090000000	            mov eax, dword [rax + 0x90] 	      9264	syntax.c	FUNCTION_141	CALL_21
0x11fc9	            0x89c7	                            mov edi, eax	      9264	syntax.c	FUNCTION_141	CALL_21
0x11fcb	      0xe800000000	                          call 0x4012010	      9264	syntax.c	FUNCTION_141	CALL_21
0x11fd0	              0x90	                                     nop	      9266	syntax.c	FUNCTION_141
0x11fd1	              0xc9	                                   leave	      9266	syntax.c	FUNCTION_141
0x11fd2	              0xc3	                                     ret	      9266	syntax.c	FUNCTION_141
syn_finish_line	FOR,0:DO,0:IF,3:SWITCH,0:functions,0:ELSE,0:WHILE,1:CALL,5	71
0x277c	              0x55	                                push rbp	      1800	syntax.c	FUNCTION_26
0x277d	          0x4889e5	                            mov rbp, rsp	      1800	syntax.c	FUNCTION_26
0x2780	        0x4883ec20	                           sub rsp, 0x20	      1800	syntax.c	FUNCTION_26
0x2784	          0x897dec	             mov dword [rbp - 0x14], edi	      1800	syntax.c	FUNCTION_26
0x2787	      0xe9ee000000	                           jmp 0x40028ba	      1804	syntax.c	FUNCTION_26	WHILE_1
0x278c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1806	syntax.c	FUNCTION_26	WHILE_1	CALL_1
0x278f	      0xb900000000	                              mov ecx, 0	      1806	syntax.c	FUNCTION_26	WHILE_1	CALL_1
0x2794	      0xba00000000	                              mov edx, 0	      1806	syntax.c	FUNCTION_26	WHILE_1	CALL_1
0x2799	      0xbe00000000	                              mov esi, 0	      1806	syntax.c	FUNCTION_26	WHILE_1	CALL_1
0x279e	            0x89c7	                            mov edi, eax	      1806	syntax.c	FUNCTION_26	WHILE_1	CALL_1
0x27a0	      0xe822020000	               call sym.syn_current_attr	      1806	syntax.c	FUNCTION_26	WHILE_1	CALL_1
0x27a5	        0x837dec00	               cmp dword [rbp - 0x14], 0	      1810	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x27a9	     0xf84bc000000	                            je 0x40028ab	      1810	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x27af	    0x8b0500000000	            mov eax, dword [0x040027f5] 	      1810	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x27b5	            0x85c0	                           test eax, eax	      1810	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x27b7	     0xf84ae000000	                            je 0x40028ab	      1810	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x27bd	    0x488b0d000000	            mov rcx, qword [0x04002804] 	      1815	syntax.c	FUNCTION_26	WHILE_1	IF_1	CALL_2
0x27c4	    0x8b0500000000	            mov eax, dword [0x0400280a] 	      1815	syntax.c	FUNCTION_26	WHILE_1	IF_1	CALL_2
0x27ca	          0x4863d0	                         movsxd rdx, eax	      1815	syntax.c	FUNCTION_26	WHILE_1	IF_1	CALL_2
0x27cd	          0x4889d0	                            mov rax, rdx	      1815	syntax.c	FUNCTION_26	WHILE_1	IF_1	CALL_2
0x27d0	        0x48c1e003	                              shl rax, 3	      1815	syntax.c	FUNCTION_26	WHILE_1	IF_1	CALL_2
0x27d4	          0x4801d0	                            add rax, rdx	      1815	syntax.c	FUNCTION_26	WHILE_1	IF_1	CALL_2
0x27d7	        0x48c1e004	                              shl rax, 4	      1815	syntax.c	FUNCTION_26	WHILE_1	IF_1	CALL_2
0x27db	    0x482d90000000	                           sub rax, 0x90	      1815	syntax.c	FUNCTION_26	WHILE_1	IF_1	CALL_2
0x27e1	          0x4801c8	                            add rax, rcx	      1815	syntax.c	FUNCTION_26	WHILE_1	IF_1	CALL_2
0x27e4	        0x488945f8	                mov qword [rbp - 8], rax	      1815	syntax.c	FUNCTION_26	WHILE_1	IF_1	CALL_2
0x27e8	        0x488b45f8	                mov rax, qword [rbp - 8]	      1816	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x27ec	            0x8b00	                    mov eax, dword [rax]	      1816	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x27ee	            0x85c0	                           test eax, eax	      1816	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x27f0	            0x7839	                            js 0x400286b	      1816	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x27f2	    0x488b05000000	            mov rax, qword [0x04002839] 	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2	CALL_3
0x27f9	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2	CALL_3
0x2800	        0x488b45f8	                mov rax, qword [rbp - 8]	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2	CALL_3
0x2804	            0x8b00	                    mov eax, dword [rax]	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2	CALL_3
0x2806	          0x4863d0	                         movsxd rdx, eax	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2	CALL_3
0x2809	          0x4889d0	                            mov rax, rdx	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2	CALL_3
0x280c	        0x48c1e002	                              shl rax, 2	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2	CALL_3
0x2810	          0x4801d0	                            add rax, rdx	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2	CALL_3
0x2813	        0x48c1e005	                              shl rax, 5	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2	CALL_3
0x2817	          0x4801c8	                            add rax, rcx	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2	CALL_3
0x281a	          0x8b4024	            mov eax, dword [rax + 0x24] 	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2	CALL_3
0x281d	          0x83e030	                           and eax, 0x30	      1818	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x2820	            0x85c0	                           test eax, eax	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2	CALL_3
0x2822	            0x7407	                            je 0x400286b	      1817	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2	CALL_3
0x2824	      0xb801000000	                              mov eax, 1	      1819	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x2829	            0xeb62	                           jmp 0x40028cd	      1819	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_2
0x282b	    0x8b0500000000	            mov eax, dword [0x04002871] 	      1824	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x2831	          0x8945f4	              mov dword [rbp - 0xc], eax	      1824	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x2834	      0xe8f42f0000	                 call sym.syn_getcurline	      1825	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3	CALL_4
0x2839	          0x4889c2	                            mov rdx, rax	      1825	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3	CALL_4
0x283c	    0x8b0500000000	            mov eax, dword [0x04002882] 	      1825	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3	CALL_4
0x2842	            0x4898	                                    cdqe	      1825	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3	CALL_4
0x2844	          0x4801d0	                            add rax, rdx	      1825	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3	CALL_4
0x2847	           0xfb600	                   movzx eax, byte [rax]	      1825	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3	CALL_4
0x284a	            0x84c0	                             test al, al	      1825	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3	CALL_4
0x284c	            0x740f	                            je 0x400289d	      1825	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3	CALL_4
0x284e	    0x8b0500000000	            mov eax, dword [0x04002894] 	      1826	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3
0x2854	          0x83c001	                              add eax, 1	      1826	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3
0x2857	    0x890500000000	            mov dword [0x0400289d], eax 	      1826	syntax.c	FUNCTION_26	WHILE_1	IF_1	IF_3
0x285d	      0xe836190000	               call sym.check_state_ends	      1827	syntax.c	FUNCTION_26	WHILE_1	IF_1	CALL_5
0x2862	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1828	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x2865	    0x890500000000	            mov dword [0x040028ab], eax 	      1828	syntax.c	FUNCTION_26	WHILE_1	IF_1
0x286b	    0x8b0500000000	            mov eax, dword [0x040028b1] 	      1830	syntax.c	FUNCTION_26	WHILE_1
0x2871	          0x83c001	                              add eax, 1	      1830	syntax.c	FUNCTION_26	WHILE_1
0x2874	    0x890500000000	            mov dword [0x040028ba], eax 	      1830	syntax.c	FUNCTION_26	WHILE_1
0x287a	    0x8b0500000000	            mov eax, dword [0x040028c0] 	      1804	syntax.c	FUNCTION_26	WHILE_1
0x2880	            0x85c0	                           test eax, eax	      1804	syntax.c	FUNCTION_26	WHILE_1
0x2882	     0xf8404ffffff	                            je 0x40027cc	      1804	syntax.c	FUNCTION_26	WHILE_1
0x2888	      0xb800000000	                              mov eax, 0	      1832	syntax.c	FUNCTION_26
0x288d	              0xc9	                                   leave	      1833	syntax.c	FUNCTION_26
0x288e	              0xc3	                                     ret	      1833	syntax.c	FUNCTION_26
set_group_colors	FOR,0:DO,0:IF,5:SWITCH,0:functions,0:ELSE,2:WHILE,0:CALL,6	91
0x10a96	              0x55	                                push rbp	      8493	syntax.c	FUNCTION_122
0x10a97	          0x4889e5	                            mov rbp, rsp	      8493	syntax.c	FUNCTION_122
0x10a9a	        0x4883ec40	                           sub rsp, 0x40	      8493	syntax.c	FUNCTION_122
0x10a9e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      8493	syntax.c	FUNCTION_122
0x10aa2	        0x488975e0	             mov qword [rbp - 0x20], rsi	      8493	syntax.c	FUNCTION_122
0x10aa6	        0x488955d8	             mov qword [rbp - 0x28], rdx	      8493	syntax.c	FUNCTION_122
0x10aaa	          0x894dd4	             mov dword [rbp - 0x2c], ecx	      8493	syntax.c	FUNCTION_122
0x10aad	        0x448945d0	             mov dword [rbp - 0x30], r8d	      8493	syntax.c	FUNCTION_122
0x10ab1	        0x44894dcc	             mov dword [rbp - 0x34], r9d	      8493	syntax.c	FUNCTION_122
0x10ab5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      8496	syntax.c	FUNCTION_122	CALL_1
0x10ab9	          0x4889c7	                            mov rdi, rax	      8496	syntax.c	FUNCTION_122	CALL_1
0x10abc	      0xe800000000	                          call 0x4010b01	      8496	syntax.c	FUNCTION_122	CALL_1
0x10ac1	          0x83e801	                              sub eax, 1	      8496	syntax.c	FUNCTION_122	CALL_1
0x10ac4	          0x8945fc	                mov dword [rbp - 4], eax	      8496	syntax.c	FUNCTION_122	CALL_1
0x10ac7	        0x837dfc00	                  cmp dword [rbp - 4], 0	      8497	syntax.c	FUNCTION_122	IF_1
0x10acb	     0xf8803010000	                            js 0x4010c14	      8497	syntax.c	FUNCTION_122	IF_1
0x10ad1	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      8499	syntax.c	FUNCTION_122	IF_1	CALL_2
0x10ad4	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	      8499	syntax.c	FUNCTION_122	IF_1	CALL_2
0x10ad7	          0x8b45fc	                mov eax, dword [rbp - 4]	      8499	syntax.c	FUNCTION_122	IF_1	CALL_2
0x10ada	            0x89ce	                            mov esi, ecx	      8499	syntax.c	FUNCTION_122	IF_1	CALL_2
0x10adc	            0x89c7	                            mov edi, eax	      8499	syntax.c	FUNCTION_122	IF_1	CALL_2
0x10ade	      0xe82f2a0000	               call sym.gui_do_one_color	      8499	syntax.c	FUNCTION_122	IF_1	CALL_2
0x10ae3	    0x488b0d000000	            mov rcx, qword [0x04010b2a] 	      8501	syntax.c	FUNCTION_122	IF_1	IF_2	CALL_3
0x10aea	          0x8b45fc	                mov eax, dword [rbp - 4]	      8501	syntax.c	FUNCTION_122	IF_1	IF_2	CALL_3
0x10aed	          0x4863d0	                         movsxd rdx, eax	      8501	syntax.c	FUNCTION_122	IF_1	IF_2	CALL_3
0x10af0	          0x4889d0	                            mov rax, rdx	      8501	syntax.c	FUNCTION_122	IF_1	IF_2	CALL_3
0x10af3	        0x48c1e003	                              shl rax, 3	      8501	syntax.c	FUNCTION_122	IF_1	IF_2	CALL_3
0x10af7	          0x4801d0	                            add rax, rdx	      8501	syntax.c	FUNCTION_122	IF_1	IF_2	CALL_3
0x10afa	          0x4801c0	                            add rax, rax	      8501	syntax.c	FUNCTION_122	IF_1	IF_2	CALL_3
0x10afd	          0x4801d0	                            add rax, rdx	      8501	syntax.c	FUNCTION_122	IF_1	IF_2	CALL_3
0x10b00	        0x48c1e003	                              shl rax, 3	      8501	syntax.c	FUNCTION_122	IF_1	IF_2	CALL_3
0x10b04	          0x4801c8	                            add rax, rcx	      8501	syntax.c	FUNCTION_122	IF_1	IF_2	CALL_3
0x10b07	        0x488b4040	            mov rax, qword [rax + 0x40] 	      8501	syntax.c	FUNCTION_122	IF_1	IF_2	CALL_3
0x10b0b	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      8501	syntax.c	FUNCTION_122	IF_1	IF_2	CALL_3
0x10b11	            0x7431	                            je 0x4010b84	      8501	syntax.c	FUNCTION_122	IF_1	IF_2	CALL_3
0x10b13	    0x488b0d000000	            mov rcx, qword [0x04010b5a] 	      8502	syntax.c	FUNCTION_122	IF_1	CALL_4
0x10b1a	          0x8b45fc	                mov eax, dword [rbp - 4]	      8502	syntax.c	FUNCTION_122	IF_1	CALL_4
0x10b1d	          0x4863d0	                         movsxd rdx, eax	      8502	syntax.c	FUNCTION_122	IF_1	CALL_4
0x10b20	          0x4889d0	                            mov rax, rdx	      8502	syntax.c	FUNCTION_122	IF_1	CALL_4
0x10b23	        0x48c1e003	                              shl rax, 3	      8502	syntax.c	FUNCTION_122	IF_1	CALL_4
0x10b27	          0x4801d0	                            add rax, rdx	      8502	syntax.c	FUNCTION_122	IF_1	CALL_4
0x10b2a	          0x4801c0	                            add rax, rax	      8502	syntax.c	FUNCTION_122	IF_1	CALL_4
0x10b2d	          0x4801d0	                            add rax, rdx	      8502	syntax.c	FUNCTION_122	IF_1	CALL_4
0x10b30	        0x48c1e003	                              shl rax, 3	      8502	syntax.c	FUNCTION_122	IF_1	CALL_4
0x10b34	          0x4801c8	                            add rax, rcx	      8502	syntax.c	FUNCTION_122	IF_1	CALL_4
0x10b37	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      8502	syntax.c	FUNCTION_122	IF_1	CALL_4
0x10b3b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8502	syntax.c	FUNCTION_122	IF_1	CALL_4
0x10b3f	          0x488910	                    mov qword [rax], rdx	      8502	syntax.c	FUNCTION_122	IF_1	CALL_4
0x10b42	            0xeb14	                           jmp 0x4010b98	      8502	syntax.c	FUNCTION_122	IF_1	CALL_4
0x10b44	        0x837dd000	               cmp dword [rbp - 0x30], 0	      8503	syntax.c	FUNCTION_122	IF_1	ELSE_1	IF_3
0x10b48	            0x740e	                            je 0x4010b98	      8503	syntax.c	FUNCTION_122	IF_1	ELSE_1	IF_3
0x10b4a	    0x488b15000000	            mov rdx, qword [0x04010b91] 	      8504	syntax.c	FUNCTION_122	IF_1	ELSE_1	IF_3
0x10b51	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      8504	syntax.c	FUNCTION_122	IF_1	ELSE_1	IF_3
0x10b55	          0x488910	                    mov qword [rax], rdx	      8504	syntax.c	FUNCTION_122	IF_1	ELSE_1	IF_3
0x10b58	    0x488b0d000000	            mov rcx, qword [0x04010b9f] 	      8505	syntax.c	FUNCTION_122	IF_1	IF_4	CALL_5
0x10b5f	          0x8b45fc	                mov eax, dword [rbp - 4]	      8505	syntax.c	FUNCTION_122	IF_1	IF_4	CALL_5
0x10b62	          0x4863d0	                         movsxd rdx, eax	      8505	syntax.c	FUNCTION_122	IF_1	IF_4	CALL_5
0x10b65	          0x4889d0	                            mov rax, rdx	      8505	syntax.c	FUNCTION_122	IF_1	IF_4	CALL_5
0x10b68	        0x48c1e003	                              shl rax, 3	      8505	syntax.c	FUNCTION_122	IF_1	IF_4	CALL_5
0x10b6c	          0x4801d0	                            add rax, rdx	      8505	syntax.c	FUNCTION_122	IF_1	IF_4	CALL_5
0x10b6f	          0x4801c0	                            add rax, rax	      8505	syntax.c	FUNCTION_122	IF_1	IF_4	CALL_5
0x10b72	          0x4801d0	                            add rax, rdx	      8505	syntax.c	FUNCTION_122	IF_1	IF_4	CALL_5
0x10b75	        0x48c1e003	                              shl rax, 3	      8505	syntax.c	FUNCTION_122	IF_1	IF_4	CALL_5
0x10b79	          0x4801c8	                            add rax, rcx	      8505	syntax.c	FUNCTION_122	IF_1	IF_4	CALL_5
0x10b7c	        0x488b4048	            mov rax, qword [rax + 0x48] 	      8505	syntax.c	FUNCTION_122	IF_1	IF_4	CALL_5
0x10b80	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      8505	syntax.c	FUNCTION_122	IF_1	IF_4	CALL_5
0x10b86	            0x7431	                            je 0x4010bf9	      8505	syntax.c	FUNCTION_122	IF_1	IF_4	CALL_5
0x10b88	    0x488b0d000000	            mov rcx, qword [0x04010bcf] 	      8506	syntax.c	FUNCTION_122	IF_1	CALL_6
0x10b8f	          0x8b45fc	                mov eax, dword [rbp - 4]	      8506	syntax.c	FUNCTION_122	IF_1	CALL_6
0x10b92	          0x4863d0	                         movsxd rdx, eax	      8506	syntax.c	FUNCTION_122	IF_1	CALL_6
0x10b95	          0x4889d0	                            mov rax, rdx	      8506	syntax.c	FUNCTION_122	IF_1	CALL_6
0x10b98	        0x48c1e003	                              shl rax, 3	      8506	syntax.c	FUNCTION_122	IF_1	CALL_6
0x10b9c	          0x4801d0	                            add rax, rdx	      8506	syntax.c	FUNCTION_122	IF_1	CALL_6
0x10b9f	          0x4801c0	                            add rax, rax	      8506	syntax.c	FUNCTION_122	IF_1	CALL_6
0x10ba2	          0x4801d0	                            add rax, rdx	      8506	syntax.c	FUNCTION_122	IF_1	CALL_6
0x10ba5	        0x48c1e003	                              shl rax, 3	      8506	syntax.c	FUNCTION_122	IF_1	CALL_6
0x10ba9	          0x4801c8	                            add rax, rcx	      8506	syntax.c	FUNCTION_122	IF_1	CALL_6
0x10bac	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      8506	syntax.c	FUNCTION_122	IF_1	CALL_6
0x10bb0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8506	syntax.c	FUNCTION_122	IF_1	CALL_6
0x10bb4	          0x488910	                    mov qword [rax], rdx	      8506	syntax.c	FUNCTION_122	IF_1	CALL_6
0x10bb7	            0xeb14	                           jmp 0x4010c0d	      8506	syntax.c	FUNCTION_122	IF_1	CALL_6
0x10bb9	        0x837dd000	               cmp dword [rbp - 0x30], 0	      8507	syntax.c	FUNCTION_122	IF_1	ELSE_2	IF_5
0x10bbd	            0x740e	                            je 0x4010c0d	      8507	syntax.c	FUNCTION_122	IF_1	ELSE_2	IF_5
0x10bbf	    0x488b15000000	            mov rdx, qword [0x04010c06] 	      8508	syntax.c	FUNCTION_122	IF_1	ELSE_2	IF_5
0x10bc6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      8508	syntax.c	FUNCTION_122	IF_1	ELSE_2	IF_5
0x10bca	          0x488910	                    mov qword [rax], rdx	      8508	syntax.c	FUNCTION_122	IF_1	ELSE_2	IF_5
0x10bcd	      0xb801000000	                              mov eax, 1	      8509	syntax.c	FUNCTION_122	IF_1
0x10bd2	            0xeb05	                           jmp 0x4010c19	      8509	syntax.c	FUNCTION_122	IF_1
0x10bd4	      0xb800000000	                              mov eax, 0	      8511	syntax.c	FUNCTION_122
0x10bd9	              0xc9	                                   leave	      8512	syntax.c	FUNCTION_122
0x10bda	              0xc3	                                     ret	      8512	syntax.c	FUNCTION_122
syn_clear_cluster	FOR,0:DO,0:IF,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,6	44
0x691a	              0x55	                                push rbp	      3744	syntax.c	FUNCTION_54
0x691b	          0x4889e5	                            mov rbp, rsp	      3744	syntax.c	FUNCTION_54
0x691e	        0x4883ec10	                           sub rsp, 0x10	      3744	syntax.c	FUNCTION_54
0x6922	        0x48897df8	                mov qword [rbp - 8], rdi	      3744	syntax.c	FUNCTION_54
0x6926	          0x8975f4	              mov dword [rbp - 0xc], esi	      3744	syntax.c	FUNCTION_54
0x6929	        0x488b45f8	                mov rax, qword [rbp - 8]	      3745	syntax.c	FUNCTION_54	CALL_2
0x692d	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      3745	syntax.c	FUNCTION_54	CALL_2
0x6934	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3745	syntax.c	FUNCTION_54	CALL_2
0x6937	          0x4863d0	                         movsxd rdx, eax	      3745	syntax.c	FUNCTION_54	CALL_2
0x693a	          0x4889d0	                            mov rax, rdx	      3745	syntax.c	FUNCTION_54	CALL_2
0x693d	          0x4801c0	                            add rax, rax	      3745	syntax.c	FUNCTION_54	CALL_2
0x6940	          0x4801d0	                            add rax, rdx	      3745	syntax.c	FUNCTION_54	CALL_2
0x6943	        0x48c1e003	                              shl rax, 3	      3745	syntax.c	FUNCTION_54	CALL_2
0x6947	          0x4801c8	                            add rax, rcx	      3745	syntax.c	FUNCTION_54	CALL_2
0x694a	          0x488b00	                    mov rax, qword [rax]	      3745	syntax.c	FUNCTION_54	CALL_2
0x694d	          0x4889c7	                            mov rdi, rax	      3745	syntax.c	FUNCTION_54	CALL_2
0x6950	      0xe800000000	                          call 0x4006995	      3745	syntax.c	FUNCTION_54	CALL_2
0x6955	        0x488b45f8	                mov rax, qword [rbp - 8]	      3746	syntax.c	FUNCTION_54	CALL_4
0x6959	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      3746	syntax.c	FUNCTION_54	CALL_4
0x6960	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3746	syntax.c	FUNCTION_54	CALL_4
0x6963	          0x4863d0	                         movsxd rdx, eax	      3746	syntax.c	FUNCTION_54	CALL_4
0x6966	          0x4889d0	                            mov rax, rdx	      3746	syntax.c	FUNCTION_54	CALL_4
0x6969	          0x4801c0	                            add rax, rax	      3746	syntax.c	FUNCTION_54	CALL_4
0x696c	          0x4801d0	                            add rax, rdx	      3746	syntax.c	FUNCTION_54	CALL_4
0x696f	        0x48c1e003	                              shl rax, 3	      3746	syntax.c	FUNCTION_54	CALL_4
0x6973	          0x4801c8	                            add rax, rcx	      3746	syntax.c	FUNCTION_54	CALL_4
0x6976	        0x488b4008	                mov rax, qword [rax + 8]	      3746	syntax.c	FUNCTION_54	CALL_4
0x697a	          0x4889c7	                            mov rdi, rax	      3746	syntax.c	FUNCTION_54	CALL_4
0x697d	      0xe800000000	                          call 0x40069c2	      3746	syntax.c	FUNCTION_54	CALL_4
0x6982	        0x488b45f8	                mov rax, qword [rbp - 8]	      3747	syntax.c	FUNCTION_54	CALL_6
0x6986	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      3747	syntax.c	FUNCTION_54	CALL_6
0x698d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3747	syntax.c	FUNCTION_54	CALL_6
0x6990	          0x4863d0	                         movsxd rdx, eax	      3747	syntax.c	FUNCTION_54	CALL_6
0x6993	          0x4889d0	                            mov rax, rdx	      3747	syntax.c	FUNCTION_54	CALL_6
0x6996	          0x4801c0	                            add rax, rax	      3747	syntax.c	FUNCTION_54	CALL_6
0x6999	          0x4801d0	                            add rax, rdx	      3747	syntax.c	FUNCTION_54	CALL_6
0x699c	        0x48c1e003	                              shl rax, 3	      3747	syntax.c	FUNCTION_54	CALL_6
0x69a0	          0x4801c8	                            add rax, rcx	      3747	syntax.c	FUNCTION_54	CALL_6
0x69a3	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3747	syntax.c	FUNCTION_54	CALL_6
0x69a7	          0x4889c7	                            mov rdi, rax	      3747	syntax.c	FUNCTION_54	CALL_6
0x69aa	      0xe800000000	                          call 0x40069ef	      3747	syntax.c	FUNCTION_54	CALL_6
0x69af	              0x90	                                     nop	      3748	syntax.c	FUNCTION_54
0x69b0	              0xc9	                                   leave	      3748	syntax.c	FUNCTION_54
0x69b1	              0xc3	                                     ret	      3748	syntax.c	FUNCTION_54
syntax_present	FOR,0:DO,0:IF,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,0	28
0xc840	              0x55	                                push rbp	      6444	syntax.c	FUNCTION_97
0xc841	          0x4889e5	                            mov rbp, rsp	      6444	syntax.c	FUNCTION_97
0xc844	        0x48897df8	                mov qword [rbp - 8], rdi	      6444	syntax.c	FUNCTION_97
0xc848	        0x488b45f8	                mov rax, qword [rbp - 8]	      6445	syntax.c	FUNCTION_97
0xc84c	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6445	syntax.c	FUNCTION_97
0xc850	    0x8b8060020000	           mov eax, dword [rax + 0x260] 	      6445	syntax.c	FUNCTION_97
0xc856	            0x85c0	                           test eax, eax	      6448	syntax.c	FUNCTION_97
0xc858	            0x7537	                           jne 0x400c8d1	      6448	syntax.c	FUNCTION_97
0xc85a	        0x488b45f8	                mov rax, qword [rbp - 8]	      6446	syntax.c	FUNCTION_97
0xc85e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6446	syntax.c	FUNCTION_97
0xc862	    0x8b8078020000	           mov eax, dword [rax + 0x278] 	      6446	syntax.c	FUNCTION_97
0xc868	            0x85c0	                           test eax, eax	      6446	syntax.c	FUNCTION_97
0xc86a	            0x7525	                           jne 0x400c8d1	      6446	syntax.c	FUNCTION_97
0xc86c	        0x488b45f8	                mov rax, qword [rbp - 8]	      6447	syntax.c	FUNCTION_97
0xc870	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6447	syntax.c	FUNCTION_97
0xc874	        0x488b4008	                mov rax, qword [rax + 8]	      6447	syntax.c	FUNCTION_97
0xc878	          0x4885c0	                           test rax, rax	      6447	syntax.c	FUNCTION_97
0xc87b	            0x7514	                           jne 0x400c8d1	      6447	syntax.c	FUNCTION_97
0xc87d	        0x488b45f8	                mov rax, qword [rbp - 8]	      6448	syntax.c	FUNCTION_97
0xc881	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6448	syntax.c	FUNCTION_97
0xc885	    0x488b80300100	           mov rax, qword [rax + 0x130] 	      6448	syntax.c	FUNCTION_97
0xc88c	          0x4885c0	                           test rax, rax	      6448	syntax.c	FUNCTION_97
0xc88f	            0x7407	                            je 0x400c8d8	      6448	syntax.c	FUNCTION_97
0xc891	      0xb801000000	                              mov eax, 1	      6448	syntax.c	FUNCTION_97
0xc896	            0xeb05	                           jmp 0x400c8dd	      6448	syntax.c	FUNCTION_97
0xc898	      0xb800000000	                              mov eax, 0	      6448	syntax.c	FUNCTION_97
0xc89d	              0x5d	                                 pop rbp	      6449	syntax.c	FUNCTION_97
0xc89e	              0xc3	                                     ret	      6449	syntax.c	FUNCTION_97
highlight_gui_color_rgb	FOR,0:DO,0:IF,3:SWITCH,0:functions,0:ELSE,1:WHILE,0:CALL,3	56
0x1287d	              0x55	                                push rbp	      9451	syntax.c	FUNCTION_145
0x1287e	          0x4889e5	                            mov rbp, rsp	      9451	syntax.c	FUNCTION_145
0x12881	        0x4883ec20	                           sub rsp, 0x20	      9451	syntax.c	FUNCTION_145
0x12885	          0x897dec	             mov dword [rbp - 0x14], edi	      9451	syntax.c	FUNCTION_145
0x12888	          0x8975e8	             mov dword [rbp - 0x18], esi	      9451	syntax.c	FUNCTION_145
0x1288b	        0x837dec00	               cmp dword [rbp - 0x14], 0	      9454	syntax.c	FUNCTION_145	IF_1
0x1288f	            0x7e0b	                           jle 0x40128dc	      9454	syntax.c	FUNCTION_145	IF_1
0x12891	    0x8b0500000000	            mov eax, dword [0x040128d7] 	      9454	syntax.c	FUNCTION_145	IF_1
0x12897	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      9454	syntax.c	FUNCTION_145	IF_1
0x1289a	            0x7d0a	                           jge 0x40128e6	      9454	syntax.c	FUNCTION_145	IF_1
0x1289c	      0xb800000000	                              mov eax, 0	      9455	syntax.c	FUNCTION_145	IF_1
0x128a1	      0xe99c000000	                           jmp 0x4012982	      9455	syntax.c	FUNCTION_145	IF_1
0x128a6	        0x837de800	               cmp dword [rbp - 0x18], 0	      9457	syntax.c	FUNCTION_145	IF_2
0x128aa	            0x7434	                            je 0x4012920	      9457	syntax.c	FUNCTION_145	IF_2
0x128ac	    0x488b0d000000	            mov rcx, qword [0x040128f3] 	      9458	syntax.c	FUNCTION_145	CALL_1
0x128b3	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9458	syntax.c	FUNCTION_145	CALL_1
0x128b6	          0x4863d0	                         movsxd rdx, eax	      9458	syntax.c	FUNCTION_145	CALL_1
0x128b9	          0x4889d0	                            mov rax, rdx	      9458	syntax.c	FUNCTION_145	CALL_1
0x128bc	        0x48c1e003	                              shl rax, 3	      9458	syntax.c	FUNCTION_145	CALL_1
0x128c0	          0x4801d0	                            add rax, rdx	      9458	syntax.c	FUNCTION_145	CALL_1
0x128c3	          0x4801c0	                            add rax, rax	      9458	syntax.c	FUNCTION_145	CALL_1
0x128c6	          0x4801d0	                            add rax, rdx	      9458	syntax.c	FUNCTION_145	CALL_1
0x128c9	        0x48c1e003	                              shl rax, 3	      9458	syntax.c	FUNCTION_145	CALL_1
0x128cd	    0x482d98000000	                           sub rax, 0x98	      9458	syntax.c	FUNCTION_145	CALL_1
0x128d3	          0x4801c8	                            add rax, rcx	      9458	syntax.c	FUNCTION_145	CALL_1
0x128d6	        0x488b4040	            mov rax, qword [rax + 0x40] 	      9458	syntax.c	FUNCTION_145	CALL_1
0x128da	        0x488945f8	                mov qword [rbp - 8], rax	      9458	syntax.c	FUNCTION_145	CALL_1
0x128de	            0xeb32	                           jmp 0x4012952	      9458	syntax.c	FUNCTION_145	CALL_1
0x128e0	    0x488b0d000000	            mov rcx, qword [0x04012927] 	      9460	syntax.c	FUNCTION_145	CALL_2
0x128e7	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9460	syntax.c	FUNCTION_145	CALL_2
0x128ea	          0x4863d0	                         movsxd rdx, eax	      9460	syntax.c	FUNCTION_145	CALL_2
0x128ed	          0x4889d0	                            mov rax, rdx	      9460	syntax.c	FUNCTION_145	CALL_2
0x128f0	        0x48c1e003	                              shl rax, 3	      9460	syntax.c	FUNCTION_145	CALL_2
0x128f4	          0x4801d0	                            add rax, rdx	      9460	syntax.c	FUNCTION_145	CALL_2
0x128f7	          0x4801c0	                            add rax, rax	      9460	syntax.c	FUNCTION_145	CALL_2
0x128fa	          0x4801d0	                            add rax, rdx	      9460	syntax.c	FUNCTION_145	CALL_2
0x128fd	        0x48c1e003	                              shl rax, 3	      9460	syntax.c	FUNCTION_145	CALL_2
0x12901	    0x482d98000000	                           sub rax, 0x98	      9460	syntax.c	FUNCTION_145	CALL_2
0x12907	          0x4801c8	                            add rax, rcx	      9460	syntax.c	FUNCTION_145	CALL_2
0x1290a	        0x488b4048	            mov rax, qword [rax + 0x48] 	      9460	syntax.c	FUNCTION_145	CALL_2
0x1290e	        0x488945f8	                mov qword [rbp - 8], rax	      9460	syntax.c	FUNCTION_145	CALL_2
0x12912	    0x48817df899d4	 cmp qword [rbp - 8], 0xffffffffffffd499	      9462	syntax.c	FUNCTION_145	IF_3
0x1291a	            0x7507	                           jne 0x4012963	      9462	syntax.c	FUNCTION_145	IF_3
0x1291c	      0xb800000000	                              mov eax, 0	      9463	syntax.c	FUNCTION_145	IF_3
0x12921	            0xeb1f	                           jmp 0x4012982	      9463	syntax.c	FUNCTION_145	IF_3
0x12923	    0x8b0500000000	            mov eax, dword [0x04012969] 	      9465	syntax.c	FUNCTION_145	CALL_3
0x12929	            0x85c0	                           test eax, eax	      9465	syntax.c	FUNCTION_145	CALL_3
0x1292b	            0x7407	                            je 0x4012974	      9465	syntax.c	FUNCTION_145	CALL_3
0x1292d	      0xba00000000	                              mov edx, 0	      9465	syntax.c	FUNCTION_145	CALL_3
0x12932	            0xeb05	                           jmp 0x4012979	      9465	syntax.c	FUNCTION_145	CALL_3
0x12934	      0xba00000000	                              mov edx, 0	      9465	syntax.c	FUNCTION_145	CALL_3
0x12939	        0x488b45f8	                mov rax, qword [rbp - 8]	      9465	syntax.c	FUNCTION_145	CALL_3
0x1293d	          0x4889c7	                            mov rdi, rax	      9465	syntax.c	FUNCTION_145	CALL_3
0x12940	            0xffd2	                                call rdx	      9465	syntax.c	FUNCTION_145	CALL_3
0x12942	              0xc9	                                   leave	      9466	syntax.c	FUNCTION_145
0x12943	              0xc3	                                     ret	      9466	syntax.c	FUNCTION_145
reset_synblock	FOR,0:DO,0:IF,1:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,2	27
0x6555	              0x55	                                push rbp	      3665	syntax.c	FUNCTION_50
0x6556	          0x4889e5	                            mov rbp, rsp	      3665	syntax.c	FUNCTION_50
0x6559	        0x4883ec10	                           sub rsp, 0x10	      3665	syntax.c	FUNCTION_50
0x655d	        0x48897df8	                mov qword [rbp - 8], rdi	      3665	syntax.c	FUNCTION_50
0x6561	        0x488b45f8	                mov rax, qword [rbp - 8]	      3666	syntax.c	FUNCTION_50	IF_1
0x6565	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      3666	syntax.c	FUNCTION_50	IF_1
0x6569	        0x488b45f8	                mov rax, qword [rbp - 8]	      3666	syntax.c	FUNCTION_50	IF_1
0x656d	        0x488b4008	                mov rax, qword [rax + 8]	      3666	syntax.c	FUNCTION_50	IF_1
0x6571	    0x480568170000	                         add rax, 0x1768	      3666	syntax.c	FUNCTION_50	IF_1
0x6577	          0x4839c2	                            cmp rdx, rax	      3666	syntax.c	FUNCTION_50	IF_1
0x657a	            0x7437	                            je 0x40065f3	      3666	syntax.c	FUNCTION_50	IF_1
0x657c	        0x488b45f8	                mov rax, qword [rbp - 8]	      3668	syntax.c	FUNCTION_50	IF_1	CALL_1
0x6580	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3668	syntax.c	FUNCTION_50	IF_1	CALL_1
0x6584	          0x4889c7	                            mov rdi, rax	      3668	syntax.c	FUNCTION_50	IF_1	CALL_1
0x6587	      0xe800000000	                          call 0x40065cc	      3668	syntax.c	FUNCTION_50	IF_1	CALL_1
0x658c	        0x488b45f8	                mov rax, qword [rbp - 8]	      3669	syntax.c	FUNCTION_50	IF_1	CALL_2
0x6590	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3669	syntax.c	FUNCTION_50	IF_1	CALL_2
0x6594	          0x4889c7	                            mov rdi, rax	      3669	syntax.c	FUNCTION_50	IF_1	CALL_2
0x6597	      0xe800000000	                          call 0x40065dc	      3669	syntax.c	FUNCTION_50	IF_1	CALL_2
0x659c	        0x488b45f8	                mov rax, qword [rbp - 8]	      3670	syntax.c	FUNCTION_50	IF_1
0x65a0	        0x488b4008	                mov rax, qword [rax + 8]	      3670	syntax.c	FUNCTION_50	IF_1
0x65a4	    0x488d90681700	                 lea rdx, [rax + 0x1768]	      3670	syntax.c	FUNCTION_50	IF_1
0x65ab	        0x488b45f8	                mov rax, qword [rbp - 8]	      3670	syntax.c	FUNCTION_50	IF_1
0x65af	        0x48895010	             mov qword [rax + 0x10], rdx	      3670	syntax.c	FUNCTION_50	IF_1
0x65b3	              0x90	                                     nop	      3672	syntax.c	FUNCTION_50
0x65b4	              0xc9	                                   leave	      3672	syntax.c	FUNCTION_50
0x65b5	              0xc3	                                     ret	      3672	syntax.c	FUNCTION_50
get_id_list	FOR,3:DO,0:IF,25:SWITCH,0:functions,0:ELSE,9:WHILE,1:CALL,41	430
0xba2a	              0x55	                                push rbp	      6004	syntax.c	FUNCTION_92
0xba2b	          0x4889e5	                            mov rbp, rsp	      6004	syntax.c	FUNCTION_92
0xba2e	              0x53	                                push rbx	      6004	syntax.c	FUNCTION_92
0xba2f	    0x4881ec280100	                          sub rsp, 0x128	      6004	syntax.c	FUNCTION_92
0xba36	    0x4889bde8feff	            mov qword [rbp - 0x118], rdi	      6004	syntax.c	FUNCTION_92
0xba3d	    0x89b5e4feffff	            mov dword [rbp - 0x11c], esi	      6004	syntax.c	FUNCTION_92
0xba43	    0x488995d8feff	            mov qword [rbp - 0x128], rdx	      6004	syntax.c	FUNCTION_92
0xba4a	    0x898de0feffff	            mov dword [rbp - 0x120], ecx	      6004	syntax.c	FUNCTION_92
0xba50	    0x64488b042528	                mov rax, qword fs:[0x28]	      6004	syntax.c	FUNCTION_92
0xba59	        0x488945e8	             mov qword [rbp - 0x18], rax	      6004	syntax.c	FUNCTION_92
0xba5d	            0x31c0	                            xor eax, eax	      6004	syntax.c	FUNCTION_92
0xba5f	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	      6005	syntax.c	FUNCTION_92
0xba6a	    0xc78500ffffff	              mov dword [rbp - 0x100], 0	      6009	syntax.c	FUNCTION_92
0xba74	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	      6010	syntax.c	FUNCTION_92
0xba7f	    0xc7850cffffff	               mov dword [rbp - 0xf4], 0	      6015	syntax.c	FUNCTION_92
0xba89	    0xc785f8feffff	              mov dword [rbp - 0x108], 1	      6024	syntax.c	FUNCTION_92	FOR_1
0xba93	      0xe9aa060000	                           jmp 0x400c182	      6024	syntax.c	FUNCTION_92	FOR_1
0xba98	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      6029	syntax.c	FUNCTION_92	FOR_1	CALL_1
0xba9f	          0x488b10	                    mov rdx, qword [rax]	      6029	syntax.c	FUNCTION_92	FOR_1	CALL_1
0xbaa2	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      6029	syntax.c	FUNCTION_92	FOR_1	CALL_1
0xbaa8	            0x4898	                                    cdqe	      6029	syntax.c	FUNCTION_92	FOR_1	CALL_1
0xbaaa	          0x4801d0	                            add rax, rdx	      6029	syntax.c	FUNCTION_92	FOR_1	CALL_1
0xbaad	          0x4889c7	                            mov rdi, rax	      6029	syntax.c	FUNCTION_92	FOR_1	CALL_1
0xbab0	      0xe800000000	                          call 0x400baf5	      6029	syntax.c	FUNCTION_92	FOR_1	CALL_1
0xbab5	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      6029	syntax.c	FUNCTION_92	FOR_1	CALL_1
0xbabc	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      6030	syntax.c	FUNCTION_92	FOR_1	IF_1
0xbac3	           0xfb600	                   movzx eax, byte [rax]	      6030	syntax.c	FUNCTION_92	FOR_1	IF_1
0xbac6	            0x3c3d	                            cmp al, 0x3d	      6030	syntax.c	FUNCTION_92	FOR_1	IF_1
0xbac8	            0x7424	                            je 0x400bb2e	      6030	syntax.c	FUNCTION_92	FOR_1	IF_1
0xbaca	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      6032	syntax.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0xbad1	          0x488b18	                    mov rbx, qword [rax]	      6032	syntax.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0xbad4	      0xbf00000000	                              mov edi, 0	      6032	syntax.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0xbad9	      0xe800000000	                          call 0x400bb1e	      6032	syntax.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0xbade	          0x4889de	                            mov rsi, rbx	      6032	syntax.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0xbae1	          0x4889c7	                            mov rdi, rax	      6032	syntax.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0xbae4	      0xe800000000	                          call 0x400bb29	      6032	syntax.c	FUNCTION_92	FOR_1	IF_1	CALL_3
0xbae9	      0xe967060000	                           jmp 0x400c195	      6033	syntax.c	FUNCTION_92	FOR_1	IF_1
0xbaee	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      6035	syntax.c	FUNCTION_92	FOR_1	CALL_4
0xbaf5	        0x4883c001	                              add rax, 1	      6035	syntax.c	FUNCTION_92	FOR_1	CALL_4
0xbaf9	          0x4889c7	                            mov rdi, rax	      6035	syntax.c	FUNCTION_92	FOR_1	CALL_4
0xbafc	      0xe800000000	                          call 0x400bb41	      6035	syntax.c	FUNCTION_92	FOR_1	CALL_4
0xbb01	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      6035	syntax.c	FUNCTION_92	FOR_1	CALL_4
0xbb08	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      6036	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_5
0xbb0f	           0xfb600	                   movzx eax, byte [rax]	      6036	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_5
0xbb12	           0xfb6c0	                           movzx eax, al	      6036	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_5
0xbb15	            0x89c7	                            mov edi, eax	      6036	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_5
0xbb17	      0xe800000000	                          call 0x400bb5c	      6036	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_5
0xbb1c	            0x85c0	                           test eax, eax	      6036	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_5
0xbb1e	            0x7424	                            je 0x400bb84	      6036	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_5
0xbb20	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0xbb27	          0x488b18	                    mov rbx, qword [rax]	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0xbb2a	      0xbf00000000	                              mov edi, 0	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0xbb2f	      0xe800000000	                          call 0x400bb74	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0xbb34	          0x4889de	                            mov rsi, rbx	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0xbb37	          0x4889c7	                            mov rdi, rax	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0xbb3a	      0xe800000000	                          call 0x400bb7f	      6038	syntax.c	FUNCTION_92	FOR_1	IF_2	CALL_7
0xbb3f	      0xe911060000	                           jmp 0x400c195	      6039	syntax.c	FUNCTION_92	FOR_1	IF_2
0xbb44	    0xc785fcfeffff	              mov dword [rbp - 0x104], 0	      6045	syntax.c	FUNCTION_92	FOR_1
0xbb4e	      0xe96b050000	                           jmp 0x400c0fe	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0xbb53	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0xbb5a	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0xbb61	            0xeb08	                           jmp 0x400bbab	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0xbb63	    0x48838518ffff	               add qword [rbp - 0xe8], 1	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0xbb6b	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0xbb72	           0xfb600	                   movzx eax, byte [rax]	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0xbb75	            0x84c0	                             test al, al	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0xbb77	            0x742a	                            je 0x400bbe3	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0xbb79	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0xbb80	           0xfb600	                   movzx eax, byte [rax]	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0xbb83	            0x3c20	                            cmp al, 0x20	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0xbb85	            0x741c	                            je 0x400bbe3	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0xbb87	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0xbb8e	           0xfb600	                   movzx eax, byte [rax]	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0xbb91	            0x3c09	                               cmp al, 9	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0xbb93	            0x740e	                            je 0x400bbe3	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0xbb95	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0xbb9c	           0xfb600	                   movzx eax, byte [rax]	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0xbb9f	            0x3c2c	                            cmp al, 0x2c	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0xbba1	            0x75c0	                           jne 0x400bba3	      6048	syntax.c	FUNCTION_92	FOR_1	WHILE_1	FOR_2	CALL_9
0xbba3	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      6050	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_10
0xbbaa	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      6050	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_10
0xbbb1	          0x4829c2	                            sub rdx, rax	      6050	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_10
0xbbb4	          0x4889d0	                            mov rax, rdx	      6050	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_10
0xbbb7	          0x83c003	                              add eax, 3	      6050	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_10
0xbbba	            0x89c7	                            mov edi, eax	      6050	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_10
0xbbbc	      0xe800000000	                          call 0x400bc01	      6050	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_10
0xbbc1	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      6050	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_10
0xbbc8	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	      6051	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_3
0xbbd0	            0x750f	                           jne 0x400bc21	      6051	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_3
0xbbd2	    0xc7850cffffff	               mov dword [rbp - 0xf4], 1	      6053	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_3
0xbbdc	      0xe9fc040000	                           jmp 0x400c11d	      6054	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_3
0xbbe1	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0xbbe8	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0xbbef	          0x4829c2	                            sub rdx, rax	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0xbbf2	          0x4889d0	                            mov rax, rdx	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0xbbf5	          0x4889c2	                            mov rdx, rax	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0xbbf8	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0xbbff	        0x488d4801	                      lea rcx, [rax + 1]	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0xbc03	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0xbc0a	          0x4889c6	                            mov rsi, rax	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0xbc0d	          0x4889cf	                            mov rdi, rcx	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0xbc10	      0xe800000000	                          call 0x400bc55	      6056	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_11
0xbc15	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6057	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_12
0xbc1c	        0x4883c001	                              add rax, 1	      6057	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_12
0xbc20	      0xbe00000000	                              mov esi, 0	      6057	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_12
0xbc25	          0x4889c7	                            mov rdi, rax	      6057	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_12
0xbc28	      0xe800000000	                          call 0x400bc6d	      6057	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_12
0xbc2d	            0x85c0	                           test eax, eax	      6057	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_12
0xbc2f	            0x7458	                            je 0x400bcc9	      6057	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_12
0xbc31	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0xbc38	        0x4883c001	                              add rax, 1	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0xbc3c	      0xbe00000000	                              mov esi, 0	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0xbc41	          0x4889c7	                            mov rdi, rax	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0xbc44	      0xe800000000	                          call 0x400bc89	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0xbc49	            0x85c0	                           test eax, eax	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0xbc4b	            0x743c	                            je 0x400bcc9	      6058	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_13
0xbc4d	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0xbc54	        0x4883c001	                              add rax, 1	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0xbc58	      0xbe00000000	                              mov esi, 0	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0xbc5d	          0x4889c7	                            mov rdi, rax	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0xbc60	      0xe800000000	                          call 0x400bca5	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0xbc65	            0x85c0	                           test eax, eax	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0xbc67	            0x7420	                            je 0x400bcc9	      6059	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_14
0xbc69	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0xbc70	        0x4883c001	                              add rax, 1	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0xbc74	      0xbe00000000	                              mov esi, 0	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0xbc79	          0x4889c7	                            mov rdi, rax	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0xbc7c	      0xe800000000	                          call 0x400bcc1	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0xbc81	            0x85c0	                           test eax, eax	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0xbc83	     0xf8528010000	                           jne 0x400bdf1	      6060	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	CALL_15
0xbc89	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0xbc90	          0x488b00	                    mov rax, qword [rax]	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0xbc93	           0xfb600	                   movzx eax, byte [rax]	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0xbc96	            0x3c60	                            cmp al, 0x60	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0xbc98	            0x7611	                           jbe 0x400bceb	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0xbc9a	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0xbca1	          0x488b00	                    mov rax, qword [rax]	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0xbca4	           0xfb600	                   movzx eax, byte [rax]	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0xbca7	            0x3c7a	                            cmp al, 0x7a	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0xbca9	            0x7614	                           jbe 0x400bcff	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0xbcab	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0xbcb2	          0x488b00	                    mov rax, qword [rax]	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0xbcb5	           0xfb600	                   movzx eax, byte [rax]	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0xbcb8	            0x3c43	                            cmp al, 0x43	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0xbcba	           0xf95c0	                                setne al	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0xbcbd	            0xeb12	                           jmp 0x400bd11	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0xbcbf	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0xbcc6	          0x488b00	                    mov rax, qword [rax]	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0xbcc9	           0xfb600	                   movzx eax, byte [rax]	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0xbccc	            0x3c63	                            cmp al, 0x63	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0xbcce	           0xf95c0	                                setne al	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0xbcd1	            0x84c0	                             test al, al	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0xbcd3	            0x743e	                            je 0x400bd53	      6062	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_16
0xbcd5	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6064	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_18
0xbcdc	        0x488d5801	                      lea rbx, [rax + 1]	      6064	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_18
0xbce0	      0xbf00000000	                              mov edi, 0	      6064	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_18
0xbce5	      0xe800000000	                          call 0x400bd2a	      6064	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_18
0xbcea	          0x4889de	                            mov rsi, rbx	      6064	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_18
0xbced	          0x4889c7	                            mov rdi, rax	      6064	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_18
0xbcf0	      0xe800000000	                          call 0x400bd35	      6064	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_18
0xbcf5	    0xc7850cffffff	               mov dword [rbp - 0xf4], 1	      6065	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5
0xbcff	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6066	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_19
0xbd06	          0x4889c7	                            mov rdi, rax	      6066	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_19
0xbd09	      0xe800000000	                          call 0x400bd4e	      6066	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5	CALL_19
0xbd0e	      0xe9ca030000	                           jmp 0x400c11d	      6067	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_5
0xbd13	    0x83bdfcfeffff	              cmp dword [rbp - 0x104], 0	      6069	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6
0xbd1a	            0x743e	                            je 0x400bd9a	      6069	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6
0xbd1c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0xbd23	        0x488d5801	                      lea rbx, [rax + 1]	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0xbd27	      0xbf00000000	                              mov edi, 0	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0xbd2c	      0xe800000000	                          call 0x400bd71	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0xbd31	          0x4889de	                            mov rsi, rbx	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0xbd34	          0x4889c7	                            mov rdi, rax	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0xbd37	      0xe800000000	                          call 0x400bd7c	      6071	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_21
0xbd3c	    0xc7850cffffff	               mov dword [rbp - 0xf4], 1	      6073	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6
0xbd46	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6074	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_22
0xbd4d	          0x4889c7	                            mov rdi, rax	      6074	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_22
0xbd50	      0xe800000000	                          call 0x400bd95	      6074	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6	CALL_22
0xbd55	      0xe983030000	                           jmp 0x400c11d	      6075	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_6
0xbd5a	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6077	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_7
0xbd61	        0x4883c001	                              add rax, 1	      6077	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_7
0xbd65	           0xfb600	                   movzx eax, byte [rax]	      6077	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_7
0xbd68	            0x3c41	                            cmp al, 0x41	      6077	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_7
0xbd6a	            0x750c	                           jne 0x400bdb8	      6077	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_7
0xbd6c	    0xc78504ffffff	          mov dword [rbp - 0xfc], 0x4e20	      6078	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_7
0xbd76	            0xeb28	                           jmp 0x400bde0	      6078	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	IF_7
0xbd78	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6079	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_1	IF_8
0xbd7f	        0x4883c001	                              add rax, 1	      6079	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_1	IF_8
0xbd83	           0xfb600	                   movzx eax, byte [rax]	      6079	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_1	IF_8
0xbd86	            0x3c54	                            cmp al, 0x54	      6079	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_1	IF_8
0xbd88	            0x750c	                           jne 0x400bdd6	      6079	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_1	IF_8
0xbd8a	    0xc78504ffffff	          mov dword [rbp - 0xfc], 0x5208	      6080	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_1	IF_8
0xbd94	            0xeb0a	                           jmp 0x400bde0	      6080	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_1	IF_8
0xbd96	    0xc78504ffffff	          mov dword [rbp - 0xfc], 0x55f0	      6082	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_2
0xbda0	    0x8b0500000000	            mov eax, dword [0x0400bde6] 	      6083	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_2
0xbda6	     0x18504ffffff	             add dword [rbp - 0xfc], eax	      6083	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_2
0xbdac	      0xe928020000	                           jmp 0x400c019	      6083	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_4	ELSE_2
0xbdb1	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6085	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9
0xbdb8	        0x4883c001	                              add rax, 1	      6085	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9
0xbdbc	           0xfb600	                   movzx eax, byte [rax]	      6085	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9
0xbdbf	            0x3c40	                            cmp al, 0x40	      6085	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9
0xbdc1	            0x7551	                           jne 0x400be54	      6085	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9
0xbdc3	    0x83bde0feffff	              cmp dword [rbp - 0x120], 0	      6087	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	IF_10
0xbdca	            0x740f	                            je 0x400be1b	      6087	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	IF_10
0xbdcc	    0xc78504ffffff	     mov dword [rbp - 0xfc], 0xffffffff 	      6088	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	IF_10
0xbdd6	      0xe9fe010000	                           jmp 0x400c019	      6088	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	IF_10
0xbddb	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0xbde2	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0xbde9	          0x4829c2	                            sub rdx, rax	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0xbdec	          0x4889d0	                            mov rax, rdx	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0xbdef	          0x83e801	                              sub eax, 1	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0xbdf2	            0x89c2	                            mov edx, eax	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0xbdf4	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0xbdfb	        0x4883c002	                              add rax, 2	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0xbdff	            0x89d6	                            mov esi, edx	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0xbe01	          0x4889c7	                            mov rdi, rax	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0xbe04	      0xe803ecffff	              call sym.syn_check_cluster	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0xbe09	    0x898504ffffff	             mov dword [rbp - 0xfc], eax	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0xbe0f	      0xe9c5010000	                           jmp 0x400c019	      6090	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_2	ELSE_3	IF_9	CALL_23
0xbe14	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6097	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	IF_11	CALL_24
0xbe1b	        0x4883c001	                              add rax, 1	      6097	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	IF_11	CALL_24
0xbe1f	      0xbe00000000	                              mov esi, 0	      6097	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	IF_11	CALL_24
0xbe24	          0x4889c7	                            mov rdi, rax	      6097	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	IF_11	CALL_24
0xbe27	      0xe800000000	                          call 0x400be6c	      6097	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	IF_11	CALL_24
0xbe2c	          0x4885c0	                           test rax, rax	      6097	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	IF_11	CALL_24
0xbe2f	            0x7536	                           jne 0x400bea7	      6097	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	IF_11	CALL_24
0xbe31	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0xbe38	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0xbe3f	          0x4829c2	                            sub rdx, rax	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0xbe42	          0x4889d0	                            mov rax, rdx	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0xbe45	            0x89c2	                            mov edx, eax	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0xbe47	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0xbe4e	        0x4883c001	                              add rax, 1	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0xbe52	            0x89d6	                            mov esi, edx	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0xbe54	          0x4889c7	                            mov rdi, rax	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0xbe57	      0xe800000000	                          call 0x400be9c	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0xbe5c	    0x898504ffffff	             mov dword [rbp - 0xfc], eax	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0xbe62	      0xe972010000	                           jmp 0x400c019	      6098	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	CALL_25
0xbe67	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6104	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6
0xbe6e	          0xc6005e	                    mov byte [rax], 0x5e	      6104	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6
0xbe71	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6105	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_26
0xbe78	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      6105	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_26
0xbe7f	          0x4889c2	                            mov rdx, rax	      6105	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_26
0xbe82	      0xb800000000	                              mov eax, 0	      6105	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_26
0xbe87	          0x4889d7	                            mov rdi, rdx	      6105	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_26
0xbe8a	            0xf2ae	              repne scasb al, byte [rdi]	      6105	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_26
0xbe8c	          0x4889c8	                            mov rax, rcx	      6105	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_26
0xbe8f	          0x48f7d0	                                 not rax	      6105	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_26
0xbe92	        0x488d50ff	                      lea rdx, [rax - 1]	      6105	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_26
0xbe96	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6105	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_26
0xbe9d	          0x4801d0	                            add rax, rdx	      6105	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_26
0xbea0	      0x66c7002400	                    mov word [rax], 0x24	      6105	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_26
0xbea5	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6106	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_27
0xbeac	      0xbe01000000	                              mov esi, 1	      6106	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_27
0xbeb1	          0x4889c7	                            mov rdi, rax	      6106	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_27
0xbeb4	      0xe800000000	                          call 0x400bef9	      6106	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_27
0xbeb9	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      6106	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_27
0xbec0	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      6107	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	IF_12
0xbec7	          0x4885c0	                           test rax, rax	      6107	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	IF_12
0xbeca	            0x751e	                           jne 0x400bf2a	      6107	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	IF_12
0xbecc	    0xc7850cffffff	               mov dword [rbp - 0xf4], 1	      6109	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	IF_12
0xbed6	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6110	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	IF_12	CALL_28
0xbedd	          0x4889c7	                            mov rdi, rax	      6110	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	IF_12	CALL_28
0xbee0	      0xe800000000	                          call 0x400bf25	      6110	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	IF_12	CALL_28
0xbee5	      0xe9f3010000	                           jmp 0x400c11d	      6111	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	IF_12
0xbeea	    0xc745d8010000	               mov dword [rbp - 0x28], 1	      6114	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6
0xbef1	    0xc78504ffffff	               mov dword [rbp - 0xfc], 0	      6115	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6
0xbefb	    0x8b0500000000	            mov eax, dword [0x0400bf41] 	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0xbf01	    0x898508ffffff	             mov dword [rbp - 0xf8], eax	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0xbf07	      0xe9aa000000	                           jmp 0x400bff6	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0xbf0c	    0x488b0d000000	            mov rcx, qword [0x0400bf53] 	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_30
0xbf13	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_30
0xbf19	          0x4863d0	                         movsxd rdx, eax	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_30
0xbf1c	          0x4889d0	                            mov rax, rdx	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_30
0xbf1f	        0x48c1e003	                              shl rax, 3	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_30
0xbf23	          0x4801d0	                            add rax, rdx	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_30
0xbf26	          0x4801c0	                            add rax, rax	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_30
0xbf29	          0x4801d0	                            add rax, rdx	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_30
0xbf2c	        0x48c1e003	                              shl rax, 3	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_30
0xbf30	          0x4801c8	                            add rax, rcx	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_30
0xbf33	          0x488b08	                    mov rcx, qword [rax]	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_30
0xbf36	    0x488d8530ffff	                   lea rax, [rbp - 0xd0]	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_30
0xbf3d	      0xba00000000	                              mov edx, 0	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_30
0xbf42	          0x4889ce	                            mov rsi, rcx	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_30
0xbf45	          0x4889c7	                            mov rdi, rax	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_30
0xbf48	      0xe800000000	                          call 0x400bf8d	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_30
0xbf4d	            0x85c0	                           test eax, eax	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_30
0xbf4f	            0x7465	                            je 0x400bff6	      6118	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	CALL_30
0xbf51	    0x83bdf8feffff	              cmp dword [rbp - 0x108], 2	      6121	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14
0xbf58	            0x754b	                           jne 0x400bfe5	      6121	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14
0xbf5a	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      6127	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	IF_15
0xbf60	    0x3b8500ffffff	            cmp eax, dword [rbp - 0x100]	      6127	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	IF_15
0xbf66	            0x7c1b	                            jl 0x400bfc3	      6127	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	IF_15
0xbf68	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      6129	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	IF_15	CALL_31
0xbf6f	          0x4889c7	                            mov rdi, rax	      6129	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	IF_15	CALL_31
0xbf72	      0xe800000000	                          call 0x400bfb7	      6129	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	IF_15	CALL_31
0xbf77	    0xc785f8feffff	              mov dword [rbp - 0x108], 1	      6130	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	IF_15
0xbf81	            0xeb22	                           jmp 0x400bfe5	      6130	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	IF_15
0xbf83	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      6133	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	ELSE_7
0xbf89	            0x4898	                                    cdqe	      6133	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	ELSE_7
0xbf8b	        0x488d1400	                    lea rdx, [rax + rax]	      6133	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	ELSE_7
0xbf8f	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      6133	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	ELSE_7
0xbf96	          0x4801d0	                            add rax, rdx	      6133	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	ELSE_7
0xbf99	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      6133	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	ELSE_7
0xbf9f	          0x83c201	                              add edx, 1	      6133	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	ELSE_7
0xbfa2	          0x668910	                      mov word [rax], dx	      6133	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13	IF_14	ELSE_7
0xbfa5	    0x8385fcfeffff	              add dword [rbp - 0x104], 1	      6135	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13
0xbfac	    0xc78504ffffff	     mov dword [rbp - 0xfc], 0xffffffff 	      6136	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3	IF_13
0xbfb6	    0x83ad08ffffff	               sub dword [rbp - 0xf8], 1	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0xbfbd	    0x83bd08ffffff	               cmp dword [rbp - 0xf8], 0	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0xbfc4	     0xf8942ffffff	                           jns 0x400bf4c	      6116	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	FOR_3
0xbfca	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      6139	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_32
0xbfd1	          0x4889c7	                            mov rdi, rax	      6139	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_32
0xbfd4	      0xe800000000	                          call 0x400c019	      6139	syntax.c	FUNCTION_92	FOR_1	WHILE_1	ELSE_5	ELSE_6	CALL_32
0xbfd9	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      6142	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_33
0xbfe0	          0x4889c7	                            mov rdi, rax	      6142	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_33
0xbfe3	      0xe800000000	                          call 0x400c028	      6142	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_33
0xbfe8	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 0	      6143	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16
0xbfef	            0x752e	                           jne 0x400c05f	      6143	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16
0xbff1	      0xbf00000000	                              mov edi, 0	      6145	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16	CALL_35
0xbff6	      0xe800000000	                          call 0x400c03b	      6145	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16	CALL_35
0xbffb	          0x4889c2	                            mov rdx, rax	      6145	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16	CALL_35
0xbffe	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      6145	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16	CALL_35
0xc005	          0x4889c6	                            mov rsi, rax	      6145	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16	CALL_35
0xc008	          0x4889d7	                            mov rdi, rdx	      6145	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16	CALL_35
0xc00b	      0xe800000000	                          call 0x400c050	      6145	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16	CALL_35
0xc010	    0xc7850cffffff	               mov dword [rbp - 0xf4], 1	      6146	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16
0xc01a	      0xe9be000000	                           jmp 0x400c11d	      6147	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_16
0xc01f	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 0	      6149	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17
0xc026	            0x7e58	                           jle 0x400c0c0	      6149	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17
0xc028	    0x83bdf8feffff	              cmp dword [rbp - 0x108], 2	      6151	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18
0xc02f	            0x7548	                           jne 0x400c0b9	      6151	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18
0xc031	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      6154	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19
0xc037	    0x3b8500ffffff	            cmp eax, dword [rbp - 0x100]	      6154	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19
0xc03d	            0x7c1b	                            jl 0x400c09a	      6154	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19
0xc03f	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      6156	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19	CALL_36
0xc046	          0x4889c7	                            mov rdi, rax	      6156	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19	CALL_36
0xc049	      0xe800000000	                          call 0x400c08e	      6156	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19	CALL_36
0xc04e	    0xc785f8feffff	              mov dword [rbp - 0x108], 1	      6157	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19
0xc058	            0xeb1f	                           jmp 0x400c0b9	      6157	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	IF_19
0xc05a	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      6160	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	ELSE_8
0xc060	            0x4898	                                    cdqe	      6160	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	ELSE_8
0xc062	        0x488d1400	                    lea rdx, [rax + rax]	      6160	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	ELSE_8
0xc066	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      6160	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	ELSE_8
0xc06d	          0x4801d0	                            add rax, rdx	      6160	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	ELSE_8
0xc070	    0x8b9504ffffff	             mov edx, dword [rbp - 0xfc]	      6160	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	ELSE_8
0xc076	          0x668910	                      mov word [rax], dx	      6160	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17	IF_18	ELSE_8
0xc079	    0x8385fcfeffff	              add dword [rbp - 0x104], 1	      6162	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_17
0xc080	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      6164	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_37
0xc087	          0x4889c7	                            mov rdi, rax	      6164	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_37
0xc08a	      0xe800000000	                          call 0x400c0cf	      6164	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_37
0xc08f	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      6164	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_37
0xc096	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      6165	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_20
0xc09d	           0xfb600	                   movzx eax, byte [rax]	      6165	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_20
0xc0a0	            0x3c2c	                            cmp al, 0x2c	      6165	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_20
0xc0a2	            0x7538	                           jne 0x400c11c	      6165	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_20
0xc0a4	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      6167	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_38
0xc0ab	        0x4883c001	                              add rax, 1	      6167	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_38
0xc0af	          0x4889c7	                            mov rdi, rax	      6167	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_38
0xc0b2	      0xe800000000	                          call 0x400c0f7	      6167	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_38
0xc0b7	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      6167	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_38
0xc0be	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0xc0c5	           0xfb600	                   movzx eax, byte [rax]	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0xc0c8	           0xfb6c0	                           movzx eax, al	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0xc0cb	            0x89c7	                            mov edi, eax	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0xc0cd	      0xe800000000	                          call 0x400c112	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0xc0d2	            0x85c0	                           test eax, eax	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0xc0d4	     0xf8479faffff	                            je 0x400bb93	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0xc0da	            0xeb01	                           jmp 0x400c11d	      6046	syntax.c	FUNCTION_92	FOR_1	WHILE_1	CALL_8
0xc0dc	              0x90	                                     nop	      6166	syntax.c	FUNCTION_92	FOR_1	WHILE_1	IF_20
0xc0dd	    0x83bd0cffffff	               cmp dword [rbp - 0xf4], 0	      6169	syntax.c	FUNCTION_92	FOR_1	IF_21
0xc0e4	            0x756b	                           jne 0x400c191	      6169	syntax.c	FUNCTION_92	FOR_1	IF_21
0xc0e6	    0x83bdf8feffff	              cmp dword [rbp - 0x108], 1	      6171	syntax.c	FUNCTION_92	FOR_1	IF_22
0xc0ed	            0x754c	                           jne 0x400c17b	      6171	syntax.c	FUNCTION_92	FOR_1	IF_22
0xc0ef	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      6173	syntax.c	FUNCTION_92	FOR_1	IF_22	CALL_39
0xc0f5	          0x83c001	                              add eax, 1	      6173	syntax.c	FUNCTION_92	FOR_1	IF_22	CALL_39
0xc0f8	            0x4898	                                    cdqe	      6173	syntax.c	FUNCTION_92	FOR_1	IF_22	CALL_39
0xc0fa	             0x1c0	                            add eax, eax	      6173	syntax.c	FUNCTION_92	FOR_1	IF_22	CALL_39
0xc0fc	            0x89c7	                            mov edi, eax	      6173	syntax.c	FUNCTION_92	FOR_1	IF_22	CALL_39
0xc0fe	      0xe800000000	                          call 0x400c143	      6173	syntax.c	FUNCTION_92	FOR_1	IF_22	CALL_39
0xc103	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      6173	syntax.c	FUNCTION_92	FOR_1	IF_22	CALL_39
0xc10a	    0x4883bd20ffff	               cmp qword [rbp - 0xe0], 0	      6174	syntax.c	FUNCTION_92	FOR_1	IF_22	IF_23
0xc112	            0x7440	                            je 0x400c194	      6174	syntax.c	FUNCTION_92	FOR_1	IF_22	IF_23
0xc114	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      6176	syntax.c	FUNCTION_92	FOR_1	IF_22
0xc11a	            0x4898	                                    cdqe	      6176	syntax.c	FUNCTION_92	FOR_1	IF_22
0xc11c	        0x488d1400	                    lea rdx, [rax + rax]	      6176	syntax.c	FUNCTION_92	FOR_1	IF_22
0xc120	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      6176	syntax.c	FUNCTION_92	FOR_1	IF_22
0xc127	          0x4801d0	                            add rax, rdx	      6176	syntax.c	FUNCTION_92	FOR_1	IF_22
0xc12a	      0x66c7000000	                       mov word [rax], 0	      6176	syntax.c	FUNCTION_92	FOR_1	IF_22
0xc12f	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      6177	syntax.c	FUNCTION_92	FOR_1	IF_22
0xc135	    0x898500ffffff	            mov dword [rbp - 0x100], eax	      6177	syntax.c	FUNCTION_92	FOR_1	IF_22
0xc13b	    0x8385f8feffff	              add dword [rbp - 0x108], 1	      6024	syntax.c	FUNCTION_92	FOR_1
0xc142	    0x83bdf8feffff	              cmp dword [rbp - 0x108], 2	      6024	syntax.c	FUNCTION_92	FOR_1
0xc149	     0xf8e49f9ffff	                           jle 0x400bad8	      6024	syntax.c	FUNCTION_92	FOR_1
0xc14f	            0xeb04	                           jmp 0x400c195	      6024	syntax.c	FUNCTION_92	FOR_1
0xc151	              0x90	                                     nop	      6170	syntax.c	FUNCTION_92	FOR_1	IF_21
0xc152	            0xeb01	                           jmp 0x400c195	      6170	syntax.c	FUNCTION_92	FOR_1	IF_21
0xc154	              0x90	                                     nop	      6175	syntax.c	FUNCTION_92	FOR_1	IF_22	IF_23
0xc155	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      6181	syntax.c	FUNCTION_92
0xc15c	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      6181	syntax.c	FUNCTION_92
0xc163	          0x488910	                    mov qword [rax], rdx	      6181	syntax.c	FUNCTION_92
0xc166	    0x83bd0cffffff	               cmp dword [rbp - 0xf4], 0	      6182	syntax.c	FUNCTION_92	IF_24
0xc16d	            0x750a	                           jne 0x400c1b9	      6182	syntax.c	FUNCTION_92	IF_24
0xc16f	    0x4883bd20ffff	               cmp qword [rbp - 0xe0], 0	      6182	syntax.c	FUNCTION_92	IF_24
0xc177	            0x7516	                           jne 0x400c1cf	      6182	syntax.c	FUNCTION_92	IF_24
0xc179	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      6184	syntax.c	FUNCTION_92	IF_24	CALL_40
0xc180	          0x4889c7	                            mov rdi, rax	      6184	syntax.c	FUNCTION_92	IF_24	CALL_40
0xc183	      0xe800000000	                          call 0x400c1c8	      6184	syntax.c	FUNCTION_92	IF_24	CALL_40
0xc188	      0xb800000000	                              mov eax, 0	      6185	syntax.c	FUNCTION_92	IF_24
0xc18d	            0xeb36	                           jmp 0x400c205	      6185	syntax.c	FUNCTION_92	IF_24
0xc18f	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6188	syntax.c	FUNCTION_92	IF_25
0xc196	          0x488b00	                    mov rax, qword [rax]	      6188	syntax.c	FUNCTION_92	IF_25
0xc199	          0x4885c0	                           test rax, rax	      6188	syntax.c	FUNCTION_92	IF_25
0xc19c	            0x7513	                           jne 0x400c1f1	      6188	syntax.c	FUNCTION_92	IF_25
0xc19e	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6189	syntax.c	FUNCTION_92	IF_25
0xc1a5	    0x488b9520ffff	             mov rdx, qword [rbp - 0xe0]	      6189	syntax.c	FUNCTION_92	IF_25
0xc1ac	          0x488910	                    mov qword [rax], rdx	      6189	syntax.c	FUNCTION_92	IF_25
0xc1af	            0xeb0f	                           jmp 0x400c200	      6189	syntax.c	FUNCTION_92	IF_25
0xc1b1	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      6191	syntax.c	FUNCTION_92	CALL_41
0xc1b8	          0x4889c7	                            mov rdi, rax	      6191	syntax.c	FUNCTION_92	CALL_41
0xc1bb	      0xe800000000	                          call 0x400c200	      6191	syntax.c	FUNCTION_92	CALL_41
0xc1c0	      0xb801000000	                              mov eax, 1	      6193	syntax.c	FUNCTION_92
0xc1c5	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      6194	syntax.c	FUNCTION_92
0xc1c9	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      6194	syntax.c	FUNCTION_92
0xc1d2	            0x7405	                            je 0x400c219	      6194	syntax.c	FUNCTION_92
0xc1d4	      0xe800000000	                          call 0x400c219	      6194	syntax.c	FUNCTION_92
0xc1d9	    0x4881c4280100	                          add rsp, 0x128	      6194	syntax.c	FUNCTION_92
0xc1e0	              0x5b	                                 pop rbx	      6194	syntax.c	FUNCTION_92
0xc1e1	              0x5d	                                 pop rbp	      6194	syntax.c	FUNCTION_92
0xc1e2	              0xc3	                                     ret	      6194	syntax.c	FUNCTION_92
syn_list_flags	FOR,1:DO,0:IF,1:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,2	44
0x78bb	              0x55	                                push rbp	      4184	syntax.c	FUNCTION_67
0x78bc	          0x4889e5	                            mov rbp, rsp	      4184	syntax.c	FUNCTION_67
0x78bf	        0x4883ec20	                           sub rsp, 0x20	      4184	syntax.c	FUNCTION_67
0x78c3	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4184	syntax.c	FUNCTION_67
0x78c7	          0x8975e4	             mov dword [rbp - 0x1c], esi	      4184	syntax.c	FUNCTION_67
0x78ca	          0x8955e0	             mov dword [rbp - 0x20], edx	      4184	syntax.c	FUNCTION_67
0x78cd	    0xc745fc000000	                  mov dword [rbp - 4], 0	      4187	syntax.c	FUNCTION_67	FOR_1
0x78d4	            0xeb4e	                           jmp 0x4007964	      4187	syntax.c	FUNCTION_67	FOR_1
0x78d6	          0x8b45fc	                mov eax, dword [rbp - 4]	      4188	syntax.c	FUNCTION_67	FOR_1	IF_1
0x78d9	            0x4898	                                    cdqe	      4188	syntax.c	FUNCTION_67	FOR_1	IF_1
0x78db	        0x48c1e004	                              shl rax, 4	      4188	syntax.c	FUNCTION_67	FOR_1	IF_1
0x78df	          0x4889c2	                            mov rdx, rax	      4188	syntax.c	FUNCTION_67	FOR_1	IF_1
0x78e2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4188	syntax.c	FUNCTION_67	FOR_1	IF_1
0x78e6	          0x4801d0	                            add rax, rdx	      4188	syntax.c	FUNCTION_67	FOR_1	IF_1
0x78e9	            0x8b00	                    mov eax, dword [rax]	      4188	syntax.c	FUNCTION_67	FOR_1	IF_1
0x78eb	          0x2345e4	             and eax, dword [rbp - 0x1c]	      4188	syntax.c	FUNCTION_67	FOR_1	IF_1
0x78ee	            0x85c0	                           test eax, eax	      4188	syntax.c	FUNCTION_67	FOR_1	IF_1
0x78f0	            0x742e	                            je 0x4007960	      4188	syntax.c	FUNCTION_67	FOR_1	IF_1
0x78f2	          0x8b45fc	                mov eax, dword [rbp - 4]	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x78f5	            0x4898	                                    cdqe	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x78f7	        0x48c1e004	                              shl rax, 4	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x78fb	          0x4889c2	                            mov rdx, rax	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x78fe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x7902	          0x4801d0	                            add rax, rdx	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x7905	        0x488b4008	                mov rax, qword [rax + 8]	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x7909	          0x8b55e0	             mov edx, dword [rbp - 0x20]	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x790c	            0x89d6	                            mov esi, edx	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x790e	          0x4889c7	                            mov rdi, rax	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x7911	      0xe800000000	                          call 0x4007956	      4190	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_1
0x7916	      0xbf20000000	                           mov edi, 0x20	      4191	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_2
0x791b	      0xe800000000	                          call 0x4007960	      4191	syntax.c	FUNCTION_67	FOR_1	IF_1	CALL_2
0x7920	        0x8345fc01	                  add dword [rbp - 4], 1	      4187	syntax.c	FUNCTION_67	FOR_1
0x7924	          0x8b45fc	                mov eax, dword [rbp - 4]	      4187	syntax.c	FUNCTION_67	FOR_1
0x7927	            0x4898	                                    cdqe	      4187	syntax.c	FUNCTION_67	FOR_1
0x7929	        0x48c1e004	                              shl rax, 4	      4187	syntax.c	FUNCTION_67	FOR_1
0x792d	          0x4889c2	                            mov rdx, rax	      4187	syntax.c	FUNCTION_67	FOR_1
0x7930	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4187	syntax.c	FUNCTION_67	FOR_1
0x7934	          0x4801d0	                            add rax, rdx	      4187	syntax.c	FUNCTION_67	FOR_1
0x7937	            0x8b00	                    mov eax, dword [rax]	      4187	syntax.c	FUNCTION_67	FOR_1
0x7939	            0x85c0	                           test eax, eax	      4187	syntax.c	FUNCTION_67	FOR_1
0x793b	            0x7599	                           jne 0x4007916	      4187	syntax.c	FUNCTION_67	FOR_1
0x793d	              0x90	                                     nop	      4193	syntax.c	FUNCTION_67
0x793e	              0xc9	                                   leave	      4193	syntax.c	FUNCTION_67
0x793f	              0xc3	                                     ret	      4193	syntax.c	FUNCTION_67
syn_get_stack_item	FOR,0:DO,0:IF,1:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,2	22
0xcc4c	              0x55	                                push rbp	      6622	syntax.c	FUNCTION_105
0xcc4d	          0x4889e5	                            mov rbp, rsp	      6622	syntax.c	FUNCTION_105
0xcc50	        0x4883ec10	                           sub rsp, 0x10	      6622	syntax.c	FUNCTION_105
0xcc54	          0x897dfc	                mov dword [rbp - 4], edi	      6622	syntax.c	FUNCTION_105
0xcc57	    0x8b0500000000	            mov eax, dword [0x0400cc9d] 	      6623	syntax.c	FUNCTION_105	IF_1
0xcc5d	          0x3b45fc	                cmp eax, dword [rbp - 4]	      6623	syntax.c	FUNCTION_105	IF_1
0xcc60	            0x7f16	                            jg 0x400ccb8	      6623	syntax.c	FUNCTION_105	IF_1
0xcc62	      0xe83f5affff	       call sym.invalidate_current_state	      6627	syntax.c	FUNCTION_105	IF_1	CALL_1
0xcc67	    0xc70500000000	     mov dword [0x0400ccb1], 0x7fffffff 	      6628	syntax.c	FUNCTION_105	IF_1
0xcc71	      0xb8ffffffff	                     mov eax, 0xffffffff	      6629	syntax.c	FUNCTION_105	IF_1
0xcc76	            0xeb21	                           jmp 0x400ccd9	      6629	syntax.c	FUNCTION_105	IF_1
0xcc78	    0x488b0d000000	            mov rcx, qword [0x0400ccbf] 	      6631	syntax.c	FUNCTION_105	CALL_2
0xcc7f	          0x8b45fc	                mov eax, dword [rbp - 4]	      6631	syntax.c	FUNCTION_105	CALL_2
0xcc82	          0x4863d0	                         movsxd rdx, eax	      6631	syntax.c	FUNCTION_105	CALL_2
0xcc85	          0x4889d0	                            mov rax, rdx	      6631	syntax.c	FUNCTION_105	CALL_2
0xcc88	        0x48c1e003	                              shl rax, 3	      6631	syntax.c	FUNCTION_105	CALL_2
0xcc8c	          0x4801d0	                            add rax, rdx	      6631	syntax.c	FUNCTION_105	CALL_2
0xcc8f	        0x48c1e004	                              shl rax, 4	      6631	syntax.c	FUNCTION_105	CALL_2
0xcc93	          0x4801c8	                            add rax, rcx	      6631	syntax.c	FUNCTION_105	CALL_2
0xcc96	          0x8b4004	                mov eax, dword [rax + 4]	      6631	syntax.c	FUNCTION_105	CALL_2
0xcc99	              0xc9	                                   leave	      6632	syntax.c	FUNCTION_105
0xcc9a	              0xc3	                                     ret	      6632	syntax.c	FUNCTION_105
load_current_state	FOR,1:DO,0:IF,4:SWITCH,0:functions,0:ELSE,2:WHILE,0:CALL,19	238
0x1ff8	              0x55	                                push rbp	      1594	syntax.c	FUNCTION_20
0x1ff9	          0x4889e5	                            mov rbp, rsp	      1594	syntax.c	FUNCTION_20
0x1ffc	              0x53	                                push rbx	      1594	syntax.c	FUNCTION_20
0x1ffd	        0x4883ec28	                           sub rsp, 0x28	      1594	syntax.c	FUNCTION_20
0x2001	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1594	syntax.c	FUNCTION_20
0x2005	      0xe868e5ffff	            call sym.clear_current_state	      1598	syntax.c	FUNCTION_20	CALL_1
0x200a	      0xe8c2060000	         call sym.validate_current_state	      1599	syntax.c	FUNCTION_20	CALL_2
0x200f	    0xc70500000000	     mov dword [0x04002059], 0xffffffff 	      1600	syntax.c	FUNCTION_20
0x2019	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1601	syntax.c	FUNCTION_20	IF_1
0x201d	    0x8b80bc000000	            mov eax, dword [rax + 0xbc] 	      1601	syntax.c	FUNCTION_20	IF_1
0x2023	            0x85c0	                           test eax, eax	      1601	syntax.c	FUNCTION_20	IF_1
0x2025	     0xf841b030000	                            je 0x4002386	      1601	syntax.c	FUNCTION_20	IF_1
0x202b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1602	syntax.c	FUNCTION_20	IF_1	CALL_3
0x202f	    0x8b80bc000000	            mov eax, dword [rax + 0xbc] 	      1602	syntax.c	FUNCTION_20	IF_1	CALL_3
0x2035	            0x89c6	                            mov esi, eax	      1602	syntax.c	FUNCTION_20	IF_1	CALL_3
0x2037	      0xbf00000000	                              mov edi, 0	      1602	syntax.c	FUNCTION_20	IF_1	CALL_3
0x203c	      0xe800000000	                          call 0x4002081	      1602	syntax.c	FUNCTION_20	IF_1	CALL_3
0x2041	            0x85c0	                           test eax, eax	      1602	syntax.c	FUNCTION_20	IF_1	CALL_3
0x2043	     0xf84fd020000	                            je 0x4002386	      1602	syntax.c	FUNCTION_20	IF_1	CALL_3
0x2049	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1604	syntax.c	FUNCTION_20	IF_1	IF_2
0x204d	    0x8b80bc000000	            mov eax, dword [rax + 0xbc] 	      1604	syntax.c	FUNCTION_20	IF_1	IF_2
0x2053	          0x83f807	                              cmp eax, 7	      1604	syntax.c	FUNCTION_20	IF_1	IF_2
0x2056	            0x7e0e	                           jle 0x40020a6	      1604	syntax.c	FUNCTION_20	IF_1	IF_2
0x2058	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1605	syntax.c	FUNCTION_20	IF_1	CALL_4
0x205c	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1605	syntax.c	FUNCTION_20	IF_1	CALL_4
0x2060	        0x488945e8	             mov qword [rbp - 0x18], rax	      1605	syntax.c	FUNCTION_20	IF_1	CALL_4
0x2064	            0xeb0c	                           jmp 0x40020b2	      1605	syntax.c	FUNCTION_20	IF_1	CALL_4
0x2066	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1607	syntax.c	FUNCTION_20	IF_1	ELSE_1
0x206a	        0x4883c010	                           add rax, 0x10	      1607	syntax.c	FUNCTION_20	IF_1	ELSE_1
0x206e	        0x488945e8	             mov qword [rbp - 0x18], rax	      1607	syntax.c	FUNCTION_20	IF_1	ELSE_1
0x2072	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x2079	      0xe9a5020000	                           jmp 0x4002363	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x207e	    0x488b0d000000	            mov rcx, qword [0x040020c5] 	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_5
0x2085	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_5
0x2088	          0x4863d0	                         movsxd rdx, eax	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_5
0x208b	          0x4889d0	                            mov rax, rdx	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_5
0x208e	        0x48c1e003	                              shl rax, 3	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_5
0x2092	          0x4801d0	                            add rax, rdx	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_5
0x2095	        0x48c1e004	                              shl rax, 4	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_5
0x2099	          0x4801c1	                            add rcx, rax	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_5
0x209c	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_5
0x209f	          0x4863d0	                         movsxd rdx, eax	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_5
0x20a2	          0x4889d0	                            mov rax, rdx	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_5
0x20a5	          0x4801c0	                            add rax, rax	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_5
0x20a8	          0x4801d0	                            add rax, rdx	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_5
0x20ab	        0x48c1e003	                              shl rax, 3	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_5
0x20af	          0x4889c2	                            mov rdx, rax	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_5
0x20b2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_5
0x20b6	          0x4801d0	                            add rax, rdx	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_5
0x20b9	            0x8b00	                    mov eax, dword [rax]	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_5
0x20bb	            0x8901	                    mov dword [rcx], eax	      1610	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_5
0x20bd	    0x488b0d000000	            mov rcx, qword [0x04002104] 	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_6
0x20c4	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_6
0x20c7	          0x4863d0	                         movsxd rdx, eax	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_6
0x20ca	          0x4889d0	                            mov rax, rdx	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_6
0x20cd	        0x48c1e003	                              shl rax, 3	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_6
0x20d1	          0x4801d0	                            add rax, rdx	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_6
0x20d4	        0x48c1e004	                              shl rax, 4	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_6
0x20d8	          0x4801c1	                            add rcx, rax	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_6
0x20db	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_6
0x20de	          0x4863d0	                         movsxd rdx, eax	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_6
0x20e1	          0x4889d0	                            mov rax, rdx	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_6
0x20e4	          0x4801c0	                            add rax, rax	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_6
0x20e7	          0x4801d0	                            add rax, rdx	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_6
0x20ea	        0x48c1e003	                              shl rax, 3	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_6
0x20ee	          0x4889c2	                            mov rdx, rax	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_6
0x20f1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_6
0x20f5	          0x4801d0	                            add rax, rdx	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_6
0x20f8	          0x8b4004	                mov eax, dword [rax + 4]	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_6
0x20fb	            0x4898	                                    cdqe	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_6
0x20fd	        0x48894168	             mov qword [rcx + 0x68], rax	      1611	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_6
0x2101	    0x488b0d000000	            mov rcx, qword [0x04002148] 	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_7
0x2108	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_7
0x210b	          0x4863d0	                         movsxd rdx, eax	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_7
0x210e	          0x4889d0	                            mov rax, rdx	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_7
0x2111	        0x48c1e003	                              shl rax, 3	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_7
0x2115	          0x4801d0	                            add rax, rdx	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_7
0x2118	        0x48c1e004	                              shl rax, 4	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_7
0x211c	          0x4801c1	                            add rcx, rax	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_7
0x211f	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_7
0x2122	          0x4863d0	                         movsxd rdx, eax	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_7
0x2125	          0x4889d0	                            mov rax, rdx	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_7
0x2128	          0x4801c0	                            add rax, rax	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_7
0x212b	          0x4801d0	                            add rax, rdx	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_7
0x212e	        0x48c1e003	                              shl rax, 3	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_7
0x2132	          0x4889c2	                            mov rdx, rax	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_7
0x2135	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_7
0x2139	          0x4801d0	                            add rax, rdx	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_7
0x213c	          0x8b4008	                mov eax, dword [rax + 8]	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_7
0x213f	          0x894170	             mov dword [rcx + 0x70], eax	      1613	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_7
0x2142	    0x488b0d000000	            mov rcx, qword [0x04002189] 	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_8
0x2149	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_8
0x214c	          0x4863d0	                         movsxd rdx, eax	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_8
0x214f	          0x4889d0	                            mov rax, rdx	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_8
0x2152	        0x48c1e003	                              shl rax, 3	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_8
0x2156	          0x4801d0	                            add rax, rdx	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_8
0x2159	        0x48c1e004	                              shl rax, 4	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_8
0x215d	          0x4801c1	                            add rcx, rax	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_8
0x2160	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_8
0x2163	          0x4863d0	                         movsxd rdx, eax	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_8
0x2166	          0x4889d0	                            mov rax, rdx	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_8
0x2169	          0x4801c0	                            add rax, rax	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_8
0x216c	          0x4801d0	                            add rax, rdx	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_8
0x216f	        0x48c1e003	                              shl rax, 3	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_8
0x2173	          0x4889c2	                            mov rdx, rax	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_8
0x2176	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_8
0x217a	          0x4801d0	                            add rax, rdx	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_8
0x217d	          0x8b400c	              mov eax, dword [rax + 0xc]	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_8
0x2180	          0x894174	             mov dword [rcx + 0x74], eax	      1614	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_8
0x2183	    0x488b0d000000	            mov rcx, qword [0x040021ca] 	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_10
0x218a	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_10
0x218d	          0x4863d0	                         movsxd rdx, eax	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_10
0x2190	          0x4889d0	                            mov rax, rdx	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_10
0x2193	        0x48c1e003	                              shl rax, 3	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_10
0x2197	          0x4801d0	                            add rax, rdx	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_10
0x219a	        0x48c1e004	                              shl rax, 4	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_10
0x219e	        0x488d1c01	                    lea rbx, [rcx + rax]	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_10
0x21a2	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_10
0x21a5	          0x4863d0	                         movsxd rdx, eax	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_10
0x21a8	          0x4889d0	                            mov rax, rdx	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_10
0x21ab	          0x4801c0	                            add rax, rax	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_10
0x21ae	          0x4801d0	                            add rax, rdx	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_10
0x21b1	        0x48c1e003	                              shl rax, 3	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_10
0x21b5	          0x4889c2	                            mov rdx, rax	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_10
0x21b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_10
0x21bc	          0x4801d0	                            add rax, rdx	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_10
0x21bf	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_10
0x21c3	          0x4889c7	                            mov rdi, rax	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_10
0x21c6	      0xe800000000	                          call 0x400220b	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_10
0x21cb	    0x488983880000	             mov qword [rbx + 0x88], rax	      1616	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_10
0x21d2	    0x8b0500000000	            mov eax, dword [0x04002218] 	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3	CALL_11
0x21d8	            0x85c0	                           test eax, eax	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3	CALL_11
0x21da	            0x7935	                           jns 0x4002251	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3	CALL_11
0x21dc	    0x488b0d000000	            mov rcx, qword [0x04002223] 	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3	CALL_11
0x21e3	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3	CALL_11
0x21e6	          0x4863d0	                         movsxd rdx, eax	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3	CALL_11
0x21e9	          0x4889d0	                            mov rax, rdx	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3	CALL_11
0x21ec	        0x48c1e003	                              shl rax, 3	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3	CALL_11
0x21f0	          0x4801d0	                            add rax, rdx	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3	CALL_11
0x21f3	        0x48c1e004	                              shl rax, 4	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3	CALL_11
0x21f7	          0x4801c8	                            add rax, rcx	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3	CALL_11
0x21fa	        0x488b4068	            mov rax, qword [rax + 0x68] 	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3	CALL_11
0x21fe	      0x2500040000	                          and eax, 0x400	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3	CALL_11
0x2203	          0x4885c0	                           test rax, rax	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3	CALL_11
0x2206	            0x7409	                            je 0x4002251	      1617	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3	CALL_11
0x2208	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1618	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x220b	    0x890500000000	            mov dword [0x04002251], eax 	      1618	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_3
0x2211	    0x488b0d000000	            mov rcx, qword [0x04002258] 	      1619	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_12
0x2218	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1619	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_12
0x221b	          0x4863d0	                         movsxd rdx, eax	      1619	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_12
0x221e	          0x4889d0	                            mov rax, rdx	      1619	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_12
0x2221	        0x48c1e003	                              shl rax, 3	      1619	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_12
0x2225	          0x4801d0	                            add rax, rdx	      1619	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_12
0x2228	        0x48c1e004	                              shl rax, 4	      1619	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_12
0x222c	          0x4801c8	                            add rax, rcx	      1619	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_12
0x222f	    0xc7405c000000	               mov dword [rax + 0x5c], 0	      1619	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_12
0x2236	    0x488b0d000000	            mov rcx, qword [0x0400227d] 	      1620	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_13
0x223d	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1620	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_13
0x2240	          0x4863d0	                         movsxd rdx, eax	      1620	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_13
0x2243	          0x4889d0	                            mov rax, rdx	      1620	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_13
0x2246	        0x48c1e003	                              shl rax, 3	      1620	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_13
0x224a	          0x4801d0	                            add rax, rdx	      1620	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_13
0x224d	        0x48c1e004	                              shl rax, 4	      1620	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_13
0x2251	          0x4801c8	                            add rax, rcx	      1620	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_13
0x2254	    0xc7400c000000	                mov dword [rax + 0xc], 0	      1620	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_13
0x225b	    0x488b0d000000	            mov rcx, qword [0x040022a2] 	      1621	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4	CALL_14
0x2262	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1621	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4	CALL_14
0x2265	          0x4863d0	                         movsxd rdx, eax	      1621	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4	CALL_14
0x2268	          0x4889d0	                            mov rax, rdx	      1621	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4	CALL_14
0x226b	        0x48c1e003	                              shl rax, 3	      1621	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4	CALL_14
0x226f	          0x4801d0	                            add rax, rdx	      1621	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4	CALL_14
0x2272	        0x48c1e004	                              shl rax, 4	      1621	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4	CALL_14
0x2276	          0x4801c8	                            add rax, rcx	      1621	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4	CALL_14
0x2279	            0x8b00	                    mov eax, dword [rax]	      1621	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4	CALL_14
0x227b	            0x85c0	                           test eax, eax	      1621	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4	CALL_14
0x227d	            0x786d	                            js 0x400232c	      1621	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4	CALL_14
0x227f	    0x488b0d000000	            mov rcx, qword [0x040022c6] 	      1622	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4	CALL_15
0x2286	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1622	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4	CALL_15
0x2289	          0x4863d0	                         movsxd rdx, eax	      1622	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4	CALL_15
0x228c	          0x4889d0	                            mov rax, rdx	      1622	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4	CALL_15
0x228f	        0x48c1e003	                              shl rax, 3	      1622	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4	CALL_15
0x2293	          0x4801d0	                            add rax, rdx	      1622	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4	CALL_15
0x2296	        0x48c1e004	                              shl rax, 4	      1622	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4	CALL_15
0x229a	          0x4801c1	                            add rcx, rax	      1622	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4	CALL_15
0x229d	    0x488b05000000	            mov rax, qword [0x040022e4] 	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_17
0x22a4	    0x488bb0700200	           mov rsi, qword [rax + 0x270] 	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_17
0x22ab	    0x488b3d000000	            mov rdi, qword [0x040022f2] 	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_17
0x22b2	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_17
0x22b5	          0x4863d0	                         movsxd rdx, eax	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_17
0x22b8	          0x4889d0	                            mov rax, rdx	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_17
0x22bb	        0x48c1e003	                              shl rax, 3	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_17
0x22bf	          0x4801d0	                            add rax, rdx	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_17
0x22c2	        0x48c1e004	                              shl rax, 4	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_17
0x22c6	          0x4801f8	                            add rax, rdi	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_17
0x22c9	            0x8b00	                    mov eax, dword [rax]	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_17
0x22cb	          0x4863d0	                         movsxd rdx, eax	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_17
0x22ce	          0x4889d0	                            mov rax, rdx	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_17
0x22d1	        0x48c1e002	                              shl rax, 2	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_17
0x22d5	          0x4801d0	                            add rax, rdx	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_17
0x22d8	        0x48c1e005	                              shl rax, 5	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_17
0x22dc	          0x4801f0	                            add rax, rsi	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_17
0x22df	        0x488b4048	            mov rax, qword [rax + 0x48] 	      1623	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_17
0x22e3	    0x488981800000	             mov qword [rcx + 0x80], rax	      1622	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4	CALL_15
0x22ea	            0xeb29	                           jmp 0x4002355	      1622	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	IF_4	CALL_15
0x22ec	    0x488b0d000000	            mov rcx, qword [0x04002333] 	      1625	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_18
0x22f3	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1625	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_18
0x22f6	          0x4863d0	                         movsxd rdx, eax	      1625	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_18
0x22f9	          0x4889d0	                            mov rax, rdx	      1625	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_18
0x22fc	        0x48c1e003	                              shl rax, 3	      1625	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_18
0x2300	          0x4801d0	                            add rax, rdx	      1625	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_18
0x2303	        0x48c1e004	                              shl rax, 4	      1625	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_18
0x2307	          0x4801c8	                            add rax, rcx	      1625	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_18
0x230a	    0x48c780800000	               mov qword [rax + 0x80], 0	      1625	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_18
0x2315	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1626	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_19
0x2318	            0x89c7	                            mov edi, eax	      1626	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_19
0x231a	      0xe8a7210000	                 call sym.update_si_attr	      1626	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1	CALL_19
0x231f	        0x8345e401	               add dword [rbp - 0x1c], 1	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x2323	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x2327	    0x8b80bc000000	            mov eax, dword [rax + 0xbc] 	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x232d	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x2330	     0xf8f48fdffff	                            jg 0x40020be	      1608	syntax.c	FUNCTION_20	IF_1	ELSE_1	FOR_1
0x2336	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1628	syntax.c	FUNCTION_20	IF_1
0x233a	    0x8b80bc000000	            mov eax, dword [rax + 0xbc] 	      1628	syntax.c	FUNCTION_20	IF_1
0x2340	    0x890500000000	            mov dword [0x04002386], eax 	      1628	syntax.c	FUNCTION_20	IF_1
0x2346	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1630	syntax.c	FUNCTION_20
0x234a	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	      1630	syntax.c	FUNCTION_20
0x2351	    0x488905000000	            mov qword [0x04002398], rax 	      1630	syntax.c	FUNCTION_20
0x2358	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1631	syntax.c	FUNCTION_20
0x235c	    0x8b80b8000000	            mov eax, dword [rax + 0xb8] 	      1631	syntax.c	FUNCTION_20
0x2362	    0x890500000000	            mov dword [0x040023a8], eax 	      1631	syntax.c	FUNCTION_20
0x2368	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1632	syntax.c	FUNCTION_20
0x236c	        0x488b4008	                mov rax, qword [rax + 8]	      1632	syntax.c	FUNCTION_20
0x2370	    0x488905000000	            mov qword [0x040023b7], rax 	      1632	syntax.c	FUNCTION_20
0x2377	              0x90	                                     nop	      1633	syntax.c	FUNCTION_20
0x2378	        0x4883c428	                           add rsp, 0x28	      1633	syntax.c	FUNCTION_20
0x237c	              0x5b	                                 pop rbx	      1633	syntax.c	FUNCTION_20
0x237d	              0x5d	                                 pop rbp	      1633	syntax.c	FUNCTION_20
0x237e	              0xc3	                                     ret	      1633	syntax.c	FUNCTION_20
restore_chartab	FOR,0:DO,0:IF,1:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,1	20
0xd8b	              0x55	                                push rbp	      1024	syntax.c	FUNCTION_7
0xd8c	          0x4889e5	                            mov rbp, rsp	      1024	syntax.c	FUNCTION_7
0xd8f	        0x4883ec10	                           sub rsp, 0x10	      1024	syntax.c	FUNCTION_7
0xd93	        0x48897df8	                mov qword [rbp - 8], rdi	      1024	syntax.c	FUNCTION_7
0xd97	    0x488b05000000	            mov rax, qword [0x04000dde] 	      1025	syntax.c	FUNCTION_7	IF_1
0xd9e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1025	syntax.c	FUNCTION_7	IF_1
0xda2	    0x488b90b00400	           mov rdx, qword [rax + 0x4b0] 	      1025	syntax.c	FUNCTION_7	IF_1
0xda9	    0x488b05000000	            mov rax, qword [0x04000df0] 	      1025	syntax.c	FUNCTION_7	IF_1
0xdb0	          0x4839c2	                            cmp rdx, rax	      1025	syntax.c	FUNCTION_7	IF_1
0xdb3	            0x7422	                            je 0x4000e17	      1025	syntax.c	FUNCTION_7	IF_1
0xdb5	    0x488b05000000	            mov rax, qword [0x04000dfc] 	      1026	syntax.c	FUNCTION_7	CALL_1
0xdbc	    0x488d88a00900	                  lea rcx, [rax + 0x9a0]	      1026	syntax.c	FUNCTION_7	CALL_1
0xdc3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1026	syntax.c	FUNCTION_7	CALL_1
0xdc7	      0xba20000000	                           mov edx, 0x20	      1026	syntax.c	FUNCTION_7	CALL_1
0xdcc	          0x4889c6	                            mov rsi, rax	      1026	syntax.c	FUNCTION_7	CALL_1
0xdcf	          0x4889cf	                            mov rdi, rcx	      1026	syntax.c	FUNCTION_7	CALL_1
0xdd2	      0xe800000000	                          call 0x4000e17	      1026	syntax.c	FUNCTION_7	CALL_1
0xdd7	              0x90	                                     nop	      1027	syntax.c	FUNCTION_7
0xdd8	              0xc9	                                   leave	      1027	syntax.c	FUNCTION_7
0xdd9	              0xc3	                                     ret	      1027	syntax.c	FUNCTION_7
syn_add_group	FOR,1:DO,0:IF,5:SWITCH,0:functions,0:ELSE,1:WHILE,0:CALL,22	167
0x12fa8	              0x55	                                push rbp	      9736	syntax.c	FUNCTION_154
0x12fa9	          0x4889e5	                            mov rbp, rsp	      9736	syntax.c	FUNCTION_154
0x12fac	              0x53	                                push rbx	      9736	syntax.c	FUNCTION_154
0x12fad	        0x4883ec28	                           sub rsp, 0x28	      9736	syntax.c	FUNCTION_154
0x12fb1	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      9736	syntax.c	FUNCTION_154
0x12fb5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9740	syntax.c	FUNCTION_154	FOR_1
0x12fb9	        0x488945e8	             mov qword [rbp - 0x18], rax	      9740	syntax.c	FUNCTION_154	FOR_1
0x12fbd	      0xe9a4000000	                           jmp 0x40130a6	      9740	syntax.c	FUNCTION_154	FOR_1
0x12fc2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9742	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_1
0x12fc6	           0xfb600	                   movzx eax, byte [rax]	      9742	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_1
0x12fc9	           0xfb6c0	                           movzx eax, al	      9742	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_1
0x12fcc	            0x89c7	                            mov edi, eax	      9742	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_1
0x12fce	      0xe800000000	                          call 0x4013013	      9742	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_1
0x12fd3	            0x85c0	                           test eax, eax	      9742	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_1
0x12fd5	            0x7528	                           jne 0x401303f	      9742	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_1
0x12fd7	      0xbf00000000	                              mov edi, 0	      9744	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_3
0x12fdc	      0xe800000000	                          call 0x4013021	      9744	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_3
0x12fe1	          0x4889c7	                            mov rdi, rax	      9744	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_3
0x12fe4	      0xe800000000	                          call 0x4013029	      9744	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_3
0x12fe9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9745	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_4
0x12fed	          0x4889c7	                            mov rdi, rax	      9745	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_4
0x12ff0	      0xe800000000	                          call 0x4013035	      9745	syntax.c	FUNCTION_154	FOR_1	IF_1	CALL_4
0x12ff5	      0xb800000000	                              mov eax, 0	      9746	syntax.c	FUNCTION_154	FOR_1	IF_1
0x12ffa	      0xe936020000	                           jmp 0x4013275	      9746	syntax.c	FUNCTION_154	FOR_1	IF_1
0x12fff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x13003	           0xfb600	                   movzx eax, byte [rax]	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x13006	           0xfb6c0	                           movzx eax, al	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x13009	          0x83e841	                           sub eax, 0x41	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x1300c	          0x83f819	                           cmp eax, 0x19	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x1300f	            0x7650	                           jbe 0x40130a1	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x13011	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x13015	           0xfb600	                   movzx eax, byte [rax]	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x13018	           0xfb6c0	                           movzx eax, al	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x1301b	          0x83e861	                           sub eax, 0x61	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x1301e	          0x83f819	                           cmp eax, 0x19	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x13021	            0x763e	                           jbe 0x40130a1	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x13023	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x13027	           0xfb600	                   movzx eax, byte [rax]	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x1302a	           0xfb6c0	                           movzx eax, al	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x1302d	          0x83e830	                           sub eax, 0x30	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x13030	          0x83f809	                              cmp eax, 9	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x13033	            0x762c	                           jbe 0x40130a1	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x13035	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x13039	           0xfb600	                   movzx eax, byte [rax]	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x1303c	            0x3c5f	                            cmp al, 0x5f	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x1303e	            0x7421	                            je 0x40130a1	      9748	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_5
0x13040	    0x8b0500000000	            mov eax, dword [0x04013086] 	      9752	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_7
0x13046	            0x89c7	                            mov edi, eax	      9752	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_7
0x13048	      0xe800000000	                          call 0x401308d	      9752	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_7
0x1304d	      0xbf00000000	                              mov edi, 0	      9753	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_9
0x13052	      0xe800000000	                          call 0x4013097	      9753	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_9
0x13057	          0x4889c7	                            mov rdi, rax	      9753	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_9
0x1305a	      0xe800000000	                          call 0x401309f	      9753	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2	CALL_9
0x1305f	            0xeb14	                           jmp 0x40130b5	      9754	syntax.c	FUNCTION_154	FOR_1	ELSE_1	IF_2
0x13061	      0x488345e801	               add qword [rbp - 0x18], 1	      9740	syntax.c	FUNCTION_154	FOR_1
0x13066	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9740	syntax.c	FUNCTION_154	FOR_1
0x1306a	           0xfb600	                   movzx eax, byte [rax]	      9740	syntax.c	FUNCTION_154	FOR_1
0x1306d	            0x84c0	                             test al, al	      9740	syntax.c	FUNCTION_154	FOR_1
0x1306f	     0xf854dffffff	                           jne 0x4013002	      9740	syntax.c	FUNCTION_154	FOR_1
0x13075	    0x488b05000000	            mov rax, qword [0x040130bc] 	      9761	syntax.c	FUNCTION_154	IF_3
0x1307c	          0x4885c0	                           test rax, rax	      9761	syntax.c	FUNCTION_154	IF_3
0x1307f	            0x7514	                           jne 0x40130d5	      9761	syntax.c	FUNCTION_154	IF_3
0x13081	    0xc70500000000	           mov dword [0x040130cb], 0x98 	      9763	syntax.c	FUNCTION_154	IF_3
0x1308b	    0xc70500000000	            mov dword [0x040130d5], 0xa 	      9764	syntax.c	FUNCTION_154	IF_3
0x13095	    0x8b0500000000	            mov eax, dword [0x040130db] 	      9767	syntax.c	FUNCTION_154	IF_4
0x1309b	      0x3d1f4e0000	                         cmp eax, 0x4e1f	      9767	syntax.c	FUNCTION_154	IF_4
0x130a0	            0x7e28	                           jle 0x401310a	      9767	syntax.c	FUNCTION_154	IF_4
0x130a2	      0xbf00000000	                              mov edi, 0	      9769	syntax.c	FUNCTION_154	IF_4	CALL_11
0x130a7	      0xe800000000	                          call 0x40130ec	      9769	syntax.c	FUNCTION_154	IF_4	CALL_11
0x130ac	          0x4889c7	                            mov rdi, rax	      9769	syntax.c	FUNCTION_154	IF_4	CALL_11
0x130af	      0xe800000000	                          call 0x40130f4	      9769	syntax.c	FUNCTION_154	IF_4	CALL_11
0x130b4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9770	syntax.c	FUNCTION_154	IF_4	CALL_12
0x130b8	          0x4889c7	                            mov rdi, rax	      9770	syntax.c	FUNCTION_154	IF_4	CALL_12
0x130bb	      0xe800000000	                          call 0x4013100	      9770	syntax.c	FUNCTION_154	IF_4	CALL_12
0x130c0	      0xb800000000	                              mov eax, 0	      9771	syntax.c	FUNCTION_154	IF_4
0x130c5	      0xe96b010000	                           jmp 0x4013275	      9771	syntax.c	FUNCTION_154	IF_4
0x130ca	      0xbe01000000	                              mov esi, 1	      9777	syntax.c	FUNCTION_154	IF_5	CALL_13
0x130cf	      0xbf00000000	                              mov edi, 0	      9777	syntax.c	FUNCTION_154	IF_5	CALL_13
0x130d4	      0xe800000000	                          call 0x4013119	      9777	syntax.c	FUNCTION_154	IF_5	CALL_13
0x130d9	            0x85c0	                           test eax, eax	      9777	syntax.c	FUNCTION_154	IF_5	CALL_13
0x130db	            0x7516	                           jne 0x4013133	      9777	syntax.c	FUNCTION_154	IF_5	CALL_13
0x130dd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9779	syntax.c	FUNCTION_154	IF_5	CALL_14
0x130e1	          0x4889c7	                            mov rdi, rax	      9779	syntax.c	FUNCTION_154	IF_5	CALL_14
0x130e4	      0xe800000000	                          call 0x4013129	      9779	syntax.c	FUNCTION_154	IF_5	CALL_14
0x130e9	      0xb800000000	                              mov eax, 0	      9780	syntax.c	FUNCTION_154	IF_5
0x130ee	      0xe942010000	                           jmp 0x4013275	      9780	syntax.c	FUNCTION_154	IF_5
0x130f3	    0x488b0d000000	            mov rcx, qword [0x0401313a] 	      9783	syntax.c	FUNCTION_154	CALL_16
0x130fa	    0x8b0500000000	            mov eax, dword [0x04013140] 	      9783	syntax.c	FUNCTION_154	CALL_16
0x13100	          0x4863d0	                         movsxd rdx, eax	      9783	syntax.c	FUNCTION_154	CALL_16
0x13103	          0x4889d0	                            mov rax, rdx	      9783	syntax.c	FUNCTION_154	CALL_16
0x13106	        0x48c1e003	                              shl rax, 3	      9783	syntax.c	FUNCTION_154	CALL_16
0x1310a	          0x4801d0	                            add rax, rdx	      9783	syntax.c	FUNCTION_154	CALL_16
0x1310d	          0x4801c0	                            add rax, rax	      9783	syntax.c	FUNCTION_154	CALL_16
0x13110	          0x4801d0	                            add rax, rdx	      9783	syntax.c	FUNCTION_154	CALL_16
0x13113	        0x48c1e003	                              shl rax, 3	      9783	syntax.c	FUNCTION_154	CALL_16
0x13117	          0x4801c8	                            add rax, rcx	      9783	syntax.c	FUNCTION_154	CALL_16
0x1311a	      0xba98000000	                           mov edx, 0x98	      9783	syntax.c	FUNCTION_154	CALL_16
0x1311f	      0xbe00000000	                              mov esi, 0	      9783	syntax.c	FUNCTION_154	CALL_16
0x13124	          0x4889c7	                            mov rdi, rax	      9783	syntax.c	FUNCTION_154	CALL_16
0x13127	      0xe800000000	                          call 0x401316c	      9783	syntax.c	FUNCTION_154	CALL_16
0x1312c	    0x488b0d000000	            mov rcx, qword [0x04013173] 	      9784	syntax.c	FUNCTION_154	CALL_17
0x13133	    0x8b0500000000	            mov eax, dword [0x04013179] 	      9784	syntax.c	FUNCTION_154	CALL_17
0x13139	          0x4863d0	                         movsxd rdx, eax	      9784	syntax.c	FUNCTION_154	CALL_17
0x1313c	          0x4889d0	                            mov rax, rdx	      9784	syntax.c	FUNCTION_154	CALL_17
0x1313f	        0x48c1e003	                              shl rax, 3	      9784	syntax.c	FUNCTION_154	CALL_17
0x13143	          0x4801d0	                            add rax, rdx	      9784	syntax.c	FUNCTION_154	CALL_17
0x13146	          0x4801c0	                            add rax, rax	      9784	syntax.c	FUNCTION_154	CALL_17
0x13149	          0x4801d0	                            add rax, rdx	      9784	syntax.c	FUNCTION_154	CALL_17
0x1314c	        0x48c1e003	                              shl rax, 3	      9784	syntax.c	FUNCTION_154	CALL_17
0x13150	        0x488d1401	                    lea rdx, [rcx + rax]	      9784	syntax.c	FUNCTION_154	CALL_17
0x13154	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9784	syntax.c	FUNCTION_154	CALL_17
0x13158	          0x488902	                    mov qword [rdx], rax	      9784	syntax.c	FUNCTION_154	CALL_17
0x1315b	    0x488b0d000000	            mov rcx, qword [0x040131a2] 	      9785	syntax.c	FUNCTION_154	CALL_19
0x13162	    0x8b0500000000	            mov eax, dword [0x040131a8] 	      9785	syntax.c	FUNCTION_154	CALL_19
0x13168	          0x4863d0	                         movsxd rdx, eax	      9785	syntax.c	FUNCTION_154	CALL_19
0x1316b	          0x4889d0	                            mov rax, rdx	      9785	syntax.c	FUNCTION_154	CALL_19
0x1316e	        0x48c1e003	                              shl rax, 3	      9785	syntax.c	FUNCTION_154	CALL_19
0x13172	          0x4801d0	                            add rax, rdx	      9785	syntax.c	FUNCTION_154	CALL_19
0x13175	          0x4801c0	                            add rax, rax	      9785	syntax.c	FUNCTION_154	CALL_19
0x13178	          0x4801d0	                            add rax, rdx	      9785	syntax.c	FUNCTION_154	CALL_19
0x1317b	        0x48c1e003	                              shl rax, 3	      9785	syntax.c	FUNCTION_154	CALL_19
0x1317f	        0x488d1c01	                    lea rbx, [rcx + rax]	      9785	syntax.c	FUNCTION_154	CALL_19
0x13183	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      9785	syntax.c	FUNCTION_154	CALL_19
0x13187	          0x4889c7	                            mov rdi, rax	      9785	syntax.c	FUNCTION_154	CALL_19
0x1318a	      0xe800000000	                          call 0x40131cf	      9785	syntax.c	FUNCTION_154	CALL_19
0x1318f	        0x48894308	                mov qword [rbx + 8], rax	      9785	syntax.c	FUNCTION_154	CALL_19
0x13193	    0x488b0d000000	            mov rcx, qword [0x040131da] 	      9787	syntax.c	FUNCTION_154	CALL_20
0x1319a	    0x8b0500000000	            mov eax, dword [0x040131e0] 	      9787	syntax.c	FUNCTION_154	CALL_20
0x131a0	          0x4863d0	                         movsxd rdx, eax	      9787	syntax.c	FUNCTION_154	CALL_20
0x131a3	          0x4889d0	                            mov rax, rdx	      9787	syntax.c	FUNCTION_154	CALL_20
0x131a6	        0x48c1e003	                              shl rax, 3	      9787	syntax.c	FUNCTION_154	CALL_20
0x131aa	          0x4801d0	                            add rax, rdx	      9787	syntax.c	FUNCTION_154	CALL_20
0x131ad	          0x4801c0	                            add rax, rax	      9787	syntax.c	FUNCTION_154	CALL_20
0x131b0	          0x4801d0	                            add rax, rdx	      9787	syntax.c	FUNCTION_154	CALL_20
0x131b3	        0x48c1e003	                              shl rax, 3	      9787	syntax.c	FUNCTION_154	CALL_20
0x131b7	          0x4801c8	                            add rax, rcx	      9787	syntax.c	FUNCTION_154	CALL_20
0x131ba	    0x48c7404899d4	mov qword [rax + 0x48], 0xffffffffffffd499	      9787	syntax.c	FUNCTION_154	CALL_20
0x131c2	    0x488b0d000000	            mov rcx, qword [0x04013209] 	      9788	syntax.c	FUNCTION_154	CALL_21
0x131c9	    0x8b0500000000	            mov eax, dword [0x0401320f] 	      9788	syntax.c	FUNCTION_154	CALL_21
0x131cf	          0x4863d0	                         movsxd rdx, eax	      9788	syntax.c	FUNCTION_154	CALL_21
0x131d2	          0x4889d0	                            mov rax, rdx	      9788	syntax.c	FUNCTION_154	CALL_21
0x131d5	        0x48c1e003	                              shl rax, 3	      9788	syntax.c	FUNCTION_154	CALL_21
0x131d9	          0x4801d0	                            add rax, rdx	      9788	syntax.c	FUNCTION_154	CALL_21
0x131dc	          0x4801c0	                            add rax, rax	      9788	syntax.c	FUNCTION_154	CALL_21
0x131df	          0x4801d0	                            add rax, rdx	      9788	syntax.c	FUNCTION_154	CALL_21
0x131e2	        0x48c1e003	                              shl rax, 3	      9788	syntax.c	FUNCTION_154	CALL_21
0x131e6	          0x4801c8	                            add rax, rcx	      9788	syntax.c	FUNCTION_154	CALL_21
0x131e9	    0x48c7404099d4	mov qword [rax + 0x40], 0xffffffffffffd499	      9788	syntax.c	FUNCTION_154	CALL_21
0x131f1	    0x488b0d000000	            mov rcx, qword [0x04013238] 	      9790	syntax.c	FUNCTION_154	CALL_22
0x131f8	    0x8b0500000000	            mov eax, dword [0x0401323e] 	      9790	syntax.c	FUNCTION_154	CALL_22
0x131fe	          0x4863d0	                         movsxd rdx, eax	      9790	syntax.c	FUNCTION_154	CALL_22
0x13201	          0x4889d0	                            mov rax, rdx	      9790	syntax.c	FUNCTION_154	CALL_22
0x13204	        0x48c1e003	                              shl rax, 3	      9790	syntax.c	FUNCTION_154	CALL_22
0x13208	          0x4801d0	                            add rax, rdx	      9790	syntax.c	FUNCTION_154	CALL_22
0x1320b	          0x4801c0	                            add rax, rax	      9790	syntax.c	FUNCTION_154	CALL_22
0x1320e	          0x4801d0	                            add rax, rdx	      9790	syntax.c	FUNCTION_154	CALL_22
0x13211	        0x48c1e003	                              shl rax, 3	      9790	syntax.c	FUNCTION_154	CALL_22
0x13215	          0x4801c8	                            add rax, rcx	      9790	syntax.c	FUNCTION_154	CALL_22
0x13218	    0x48c7405099d4	mov qword [rax + 0x50], 0xffffffffffffd499	      9790	syntax.c	FUNCTION_154	CALL_22
0x13220	    0x8b0500000000	            mov eax, dword [0x04013266] 	      9793	syntax.c	FUNCTION_154
0x13226	          0x83c001	                              add eax, 1	      9793	syntax.c	FUNCTION_154
0x13229	    0x890500000000	            mov dword [0x0401326f], eax 	      9793	syntax.c	FUNCTION_154
0x1322f	    0x8b0500000000	            mov eax, dword [0x04013275] 	      9795	syntax.c	FUNCTION_154
0x13235	        0x4883c428	                           add rsp, 0x28	      9796	syntax.c	FUNCTION_154
0x13239	              0x5b	                                 pop rbx	      9796	syntax.c	FUNCTION_154
0x1323a	              0x5d	                                 pop rbp	      9796	syntax.c	FUNCTION_154
0x1323b	              0xc3	                                     ret	      9796	syntax.c	FUNCTION_154
get_syn_options	FOR,4:DO,0:IF,25:SWITCH,0:functions,0:ELSE,7:WHILE,0:CALL,30	456
0x8650	              0x55	                                push rbp	      4608	syntax.c	FUNCTION_76
0x8651	          0x4889e5	                            mov rbp, rsp	      4608	syntax.c	FUNCTION_76
0x8654	        0x4883ec50	                           sub rsp, 0x50	      4608	syntax.c	FUNCTION_76
0x8658	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      4608	syntax.c	FUNCTION_76
0x865c	        0x488975c0	             mov qword [rbp - 0x40], rsi	      4608	syntax.c	FUNCTION_76
0x8660	        0x488955b8	             mov qword [rbp - 0x48], rdx	      4608	syntax.c	FUNCTION_76
0x8664	          0x894db4	             mov dword [rbp - 0x4c], ecx	      4608	syntax.c	FUNCTION_76
0x8667	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4642	syntax.c	FUNCTION_76	IF_1
0x866b	          0x4885c0	                           test rax, rax	      4642	syntax.c	FUNCTION_76	IF_1
0x866e	            0x750a	                           jne 0x40086ba	      4642	syntax.c	FUNCTION_76	IF_1
0x8670	      0xb800000000	                              mov eax, 0	      4643	syntax.c	FUNCTION_76	IF_1
0x8675	      0xe921060000	                           jmp 0x4008cdb	      4643	syntax.c	FUNCTION_76	IF_1
0x867a	    0x488b05000000	            mov rax, qword [0x040086c1] 	      4646	syntax.c	FUNCTION_76	IF_2
0x8681	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4646	syntax.c	FUNCTION_76	IF_2
0x8685	    0x8b8008030000	           mov eax, dword [rax + 0x308] 	      4646	syntax.c	FUNCTION_76	IF_2
0x868b	            0x85c0	                           test eax, eax	      4646	syntax.c	FUNCTION_76	IF_2
0x868d	            0x7413	                            je 0x40086e2	      4646	syntax.c	FUNCTION_76	IF_2
0x868f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4647	syntax.c	FUNCTION_76	IF_2
0x8693	            0x8b00	                    mov eax, dword [rax]	      4647	syntax.c	FUNCTION_76	IF_2
0x8695	       0xd00000200	                         or eax, 0x20000	      4647	syntax.c	FUNCTION_76	IF_2
0x869a	            0x89c2	                            mov edx, eax	      4647	syntax.c	FUNCTION_76	IF_2
0x869c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4647	syntax.c	FUNCTION_76	IF_2
0x86a0	            0x8910	                    mov dword [rax], edx	      4647	syntax.c	FUNCTION_76	IF_2
0x86a2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x86a6	           0xfb600	                   movzx eax, byte [rax]	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x86a9	           0xfb6d0	                           movzx edx, al	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x86ac	    0x488b05000000	            mov rax, qword [0x040086f3] 	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x86b3	            0x89d6	                            mov esi, edx	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x86b5	          0x4889c7	                            mov rdi, rax	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x86b8	      0xe800000000	                          call 0x40086fd	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x86bd	          0x4885c0	                           test rax, rax	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x86c0	     0xf84cd050000	                            je 0x4008cd3	      4657	syntax.c	FUNCTION_76	FOR_1	IF_3	CALL_1
0x86c6	    0xc745e0130000	           mov dword [rbp - 0x20], 0x13 	      4660	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x86cd	      0xe97b010000	                           jmp 0x400888d	      4660	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x86d2	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4662	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x86d5	            0x4898	                                    cdqe	      4662	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x86d7	        0x48c1e004	                              shl rax, 4	      4662	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x86db	    0x480500000000	                              add rax, 0	      4662	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x86e1	          0x488b00	                    mov rax, qword [rax]	      4662	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x86e4	        0x488945e8	             mov qword [rbp - 0x18], rax	      4662	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x86e8	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x86ef	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x86f6	            0xeb5d	                           jmp 0x4008795	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x86f8	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x86fc	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x86ff	            0x4898	                                    cdqe	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x8701	          0x4801d0	                            add rax, rdx	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x8704	           0xfb600	                   movzx eax, byte [rax]	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x8707	           0xfb6d0	                           movzx edx, al	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x870a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x870d	          0x4863c8	                         movsxd rcx, eax	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x8710	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x8714	          0x4801c8	                            add rax, rcx	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x8717	           0xfb600	                   movzx eax, byte [rax]	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x871a	           0xfbec0	                           movsx eax, al	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x871d	            0x39c2	                            cmp edx, eax	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x871f	            0x742c	                            je 0x400878d	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x8721	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x8725	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x8728	            0x4898	                                    cdqe	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x872a	          0x4801d0	                            add rax, rdx	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x872d	           0xfb600	                   movzx eax, byte [rax]	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x8730	           0xfb6d0	                           movzx edx, al	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x8733	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x8736	            0x4898	                                    cdqe	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x8738	        0x488d4801	                      lea rcx, [rax + 1]	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x873c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x8740	          0x4801c8	                            add rax, rcx	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x8743	           0xfb600	                   movzx eax, byte [rax]	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x8746	           0xfbec0	                           movsx eax, al	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x8749	            0x39c2	                            cmp edx, eax	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x874b	            0x751e	                           jne 0x40087ab	      4664	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x874d	        0x8345dc02	               add dword [rbp - 0x24], 2	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x8751	        0x8345d801	               add dword [rbp - 0x28], 1	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x8755	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x8758	          0x4863d0	                         movsxd rdx, eax	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x875b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x875f	          0x4801d0	                            add rax, rdx	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x8762	           0xfb600	                   movzx eax, byte [rax]	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x8765	            0x84c0	                             test al, al	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x8767	            0x758f	                           jne 0x4008738	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x8769	            0xeb01	                           jmp 0x40087ac	      4663	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3
0x876b	              0x90	                                     nop	      4665	syntax.c	FUNCTION_76	FOR_1	FOR_2	FOR_3	IF_4
0x876c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x876f	          0x4863d0	                         movsxd rdx, eax	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x8772	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x8776	          0x4801d0	                            add rax, rdx	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x8779	           0xfb600	                   movzx eax, byte [rax]	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x877c	            0x84c0	                             test al, al	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x877e	     0xf85c9000000	                           jne 0x400888d	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x8784	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x8788	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x878b	            0x4898	                                    cdqe	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x878d	          0x4801d0	                            add rax, rdx	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x8790	           0xfb600	                   movzx eax, byte [rax]	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x8793	            0x3c20	                            cmp al, 0x20	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x8795	            0x745a	                            je 0x4008831	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x8797	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x879b	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x879e	            0x4898	                                    cdqe	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x87a0	          0x4801d0	                            add rax, rdx	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x87a3	           0xfb600	                   movzx eax, byte [rax]	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x87a6	            0x3c09	                               cmp al, 9	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x87a8	            0x7447	                            je 0x4008831	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x87aa	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4667	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x87ad	            0x4898	                                    cdqe	      4667	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x87af	        0x48c1e004	                              shl rax, 4	      4667	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x87b3	    0x480500000000	                              add rax, 0	      4667	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x87b9	            0x8b00	                    mov eax, dword [rax]	      4667	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x87bb	            0x85c0	                           test eax, eax	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x87bd	            0x7e15	                           jle 0x4008814	      4666	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_2
0x87bf	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      4668	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x87c3	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      4668	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x87c6	            0x4898	                                    cdqe	      4668	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x87c8	          0x4801d0	                            add rax, rdx	      4668	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x87cb	           0xfb600	                   movzx eax, byte [rax]	      4668	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x87ce	            0x3c3d	                            cmp al, 0x3d	      4667	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x87d0	            0x741f	                            je 0x4008831	      4667	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x87d2	            0xeb79	                           jmp 0x400888d	      4667	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x87d4	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      4669	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_3
0x87d8	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      4669	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_3
0x87db	            0x4898	                                    cdqe	      4669	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_3
0x87dd	          0x4801d0	                            add rax, rdx	      4669	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_3
0x87e0	           0xfb600	                   movzx eax, byte [rax]	      4669	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_3
0x87e3	           0xfb6c0	                           movzx eax, al	      4669	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_3
0x87e6	            0x89c7	                            mov edi, eax	      4669	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_3
0x87e8	      0xe800000000	                          call 0x400882d	      4669	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	CALL_3
0x87ed	            0x85c0	                           test eax, eax	      4667	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x87ef	            0x745c	                            je 0x400888d	      4667	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x87f1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4671	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x87f5	          0x8b4004	                mov eax, dword [rax + 4]	      4671	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x87f8	            0x85c0	                           test eax, eax	      4671	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x87fa	            0x7461	                            je 0x400889d	      4671	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x87fc	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4672	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x87ff	            0x4898	                                    cdqe	      4672	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x8801	        0x48c1e004	                              shl rax, 4	      4672	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x8805	    0x480500000000	                              add rax, 0	      4672	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x880b	            0x8b00	                    mov eax, dword [rax]	      4672	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x880d	      0x3d00100000	                         cmp eax, 0x1000	      4672	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x8812	            0x7430	                            je 0x4008884	      4672	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x8814	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4673	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x8817	            0x4898	                                    cdqe	      4673	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x8819	        0x48c1e004	                              shl rax, 4	      4673	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x881d	    0x480500000000	                              add rax, 0	      4673	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x8823	            0x8b00	                    mov eax, dword [rax]	      4673	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x8825	      0x3d00200000	                         cmp eax, 0x2000	      4673	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x882a	            0x7418	                            je 0x4008884	      4673	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x882c	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4674	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x882f	            0x4898	                                    cdqe	      4674	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x8831	        0x48c1e004	                              shl rax, 4	      4674	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x8835	    0x480500000000	                              add rax, 0	      4674	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x883b	            0x8b00	                    mov eax, dword [rax]	      4674	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x883d	      0x3d00400000	                         cmp eax, 0x4000	      4674	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x8842	            0x7519	                           jne 0x400889d	      4674	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x8844	    0xc745e0ffffff	     mov dword [rbp - 0x20], 0xffffffff 	      4676	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5	IF_6
0x884b	            0xeb10	                           jmp 0x400889d	      4677	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x884d	        0x836de001	               sub dword [rbp - 0x20], 1	      4660	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x8851	        0x837de000	               cmp dword [rbp - 0x20], 0	      4660	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x8855	     0xf8977feffff	                           jns 0x4008712	      4660	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x885b	            0xeb01	                           jmp 0x400889e	      4660	syntax.c	FUNCTION_76	FOR_1	FOR_2
0x885d	              0x90	                                     nop	      4677	syntax.c	FUNCTION_76	FOR_1	FOR_2	IF_5
0x885e	        0x837de000	               cmp dword [rbp - 0x20], 0	      4680	syntax.c	FUNCTION_76	FOR_1	IF_7
0x8862	     0xf882e040000	                            js 0x4008cd6	      4680	syntax.c	FUNCTION_76	FOR_1	IF_7
0x8868	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4683	syntax.c	FUNCTION_76	FOR_1	IF_8
0x886b	            0x4898	                                    cdqe	      4683	syntax.c	FUNCTION_76	FOR_1	IF_8
0x886d	        0x48c1e004	                              shl rax, 4	      4683	syntax.c	FUNCTION_76	FOR_1	IF_8
0x8871	    0x480500000000	                              add rax, 0	      4683	syntax.c	FUNCTION_76	FOR_1	IF_8
0x8877	            0x8b00	                    mov eax, dword [rax]	      4683	syntax.c	FUNCTION_76	FOR_1	IF_8
0x8879	          0x83f801	                              cmp eax, 1	      4683	syntax.c	FUNCTION_76	FOR_1	IF_8
0x887c	            0x755b	                           jne 0x4008919	      4683	syntax.c	FUNCTION_76	FOR_1	IF_8
0x887e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4685	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9
0x8882	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      4685	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9
0x8886	            0x84c0	                             test al, al	      4685	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9
0x8888	            0x751c	                           jne 0x40088e6	      4685	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9
0x888a	      0xbf00000000	                              mov edi, 0	      4687	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9	CALL_5
0x888f	      0xe800000000	                          call 0x40088d4	      4687	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9	CALL_5
0x8894	          0x4889c7	                            mov rdi, rax	      4687	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9	CALL_5
0x8897	      0xe800000000	                          call 0x40088dc	      4687	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9	CALL_5
0x889c	      0xb800000000	                              mov eax, 0	      4688	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9
0x88a1	      0xe9f5030000	                           jmp 0x4008cdb	      4688	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_9
0x88a6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x88aa	        0x488d7018	                   lea rsi, [rax + 0x18]	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x88ae	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x88b1	        0x488d45c8	                   lea rax, [rbp - 0x38]	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x88b5	            0x89d1	                            mov ecx, edx	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x88b7	          0x4889f2	                            mov rdx, rsi	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x88ba	      0xbe08000000	                              mov esi, 8	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x88bf	          0x4889c7	                            mov rdi, rax	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x88c2	      0xe863310000	                    call sym.get_id_list	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x88c7	            0x85c0	                           test eax, eax	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x88c9	     0xf85d3fdffff	                           jne 0x40086e2	      4690	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10	CALL_6
0x88cf	      0xb800000000	                              mov eax, 0	      4691	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10
0x88d4	      0xe9c2030000	                           jmp 0x4008cdb	      4691	syntax.c	FUNCTION_76	FOR_1	IF_8	IF_10
0x88d9	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4693	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11
0x88dc	            0x4898	                                    cdqe	      4693	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11
0x88de	        0x48c1e004	                              shl rax, 4	      4693	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11
0x88e2	    0x480500000000	                              add rax, 0	      4693	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11
0x88e8	            0x8b00	                    mov eax, dword [rax]	      4693	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11
0x88ea	          0x83f802	                              cmp eax, 2	      4693	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11
0x88ed	            0x7533	                           jne 0x4008962	      4693	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11
0x88ef	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x88f3	        0x488d7020	                   lea rsi, [rax + 0x20]	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x88f7	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x88fa	        0x488d45c8	                   lea rax, [rbp - 0x38]	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x88fe	            0x89d1	                            mov ecx, edx	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x8900	          0x4889f2	                            mov rdx, rsi	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x8903	      0xbe0b000000	                            mov esi, 0xb	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x8908	          0x4889c7	                            mov rdi, rax	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x890b	      0xe81a310000	                    call sym.get_id_list	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x8910	            0x85c0	                           test eax, eax	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x8912	     0xf858afdffff	                           jne 0x40086e2	      4695	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12	CALL_7
0x8918	      0xb800000000	                              mov eax, 0	      4696	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12
0x891d	      0xe979030000	                           jmp 0x4008cdb	      4696	syntax.c	FUNCTION_76	FOR_1	ELSE_1	IF_11	IF_12
0x8922	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4698	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13
0x8925	            0x4898	                                    cdqe	      4698	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13
0x8927	        0x48c1e004	                              shl rax, 4	      4698	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13
0x892b	    0x480500000000	                              add rax, 0	      4698	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13
0x8931	            0x8b00	                    mov eax, dword [rax]	      4698	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13
0x8933	          0x83f803	                              cmp eax, 3	      4698	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13
0x8936	            0x7533	                           jne 0x40089ab	      4698	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13
0x8938	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x893c	        0x488d7028	                   lea rsi, [rax + 0x28]	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x8940	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x8943	        0x488d45c8	                   lea rax, [rbp - 0x38]	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x8947	            0x89d1	                            mov ecx, edx	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x8949	          0x4889f2	                            mov rdx, rsi	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x894c	      0xbe09000000	                              mov esi, 9	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x8951	          0x4889c7	                            mov rdi, rax	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x8954	      0xe8d1300000	                    call sym.get_id_list	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x8959	            0x85c0	                           test eax, eax	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x895b	     0xf8541fdffff	                           jne 0x40086e2	      4700	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14	CALL_8
0x8961	      0xb800000000	                              mov eax, 0	      4701	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14
0x8966	      0xe930030000	                           jmp 0x4008cdb	      4701	syntax.c	FUNCTION_76	FOR_1	ELSE_2	IF_13	IF_14
0x896b	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x896e	            0x4898	                                    cdqe	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x8970	        0x48c1e004	                              shl rax, 4	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x8974	    0x480500000000	                              add rax, 0	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x897a	            0x8b00	                    mov eax, dword [rax]	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x897c	          0x83f80b	                            cmp eax, 0xb	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x897f	     0xf85b9000000	                           jne 0x4008a7e	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x8985	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x8989	        0x4883c005	                              add rax, 5	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x898d	           0xfb600	                   movzx eax, byte [rax]	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x8990	            0x3c3d	                            cmp al, 0x3d	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x8992	     0xf85a6000000	                           jne 0x4008a7e	      4703	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15
0x8998	    0x8b0500000000	            mov eax, dword [0x040089de] 	      4707	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16
0x899e	            0x85c0	                           test eax, eax	      4707	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16
0x89a0	            0x7442	                            je 0x4008a24	      4707	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16
0x89a2	    0x488b05000000	            mov rax, qword [0x040089e9] 	      4710	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_9
0x89a9	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      4710	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_9
0x89ad	        0x4883c206	                              add rdx, 6	      4710	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_9
0x89b1	          0x4889d7	                            mov rdi, rdx	      4710	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_9
0x89b4	            0xffd0	                                call rax	      4710	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_9
0x89b6	            0x89c2	                            mov edx, eax	      4710	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_9
0x89b8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4710	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_9
0x89bc	            0x8910	                    mov dword [rax], edx	      4710	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_9
0x89be	    0x488b05000000	            mov rax, qword [0x04008a05] 	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x89c5	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x89c9	        0x4883c206	                              add rdx, 6	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x89cd	          0x4889d7	                            mov rdi, rdx	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x89d0	            0xffd0	                                call rax	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x89d2	          0x83e801	                              sub eax, 1	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x89d5	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x89d9	            0x4898	                                    cdqe	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x89db	          0x4801d0	                            add rax, rdx	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x89de	        0x488945c8	             mov qword [rbp - 0x38], rax	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x89e2	            0xeb14	                           jmp 0x4008a38	      4712	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_16	CALL_10
0x89e4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4718	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	ELSE_4
0x89e8	        0x4883c006	                              add rax, 6	      4718	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	ELSE_4
0x89ec	           0xfb600	                   movzx eax, byte [rax]	      4718	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	ELSE_4
0x89ef	           0xfb6d0	                           movzx edx, al	      4718	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	ELSE_4
0x89f2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4718	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	ELSE_4
0x89f6	            0x8910	                    mov dword [rax], edx	      4718	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	ELSE_4
0x89f8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4724	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_11
0x89fc	            0x8b00	                    mov eax, dword [rax]	      4724	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_11
0x89fe	            0x89c7	                            mov edi, eax	      4724	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_11
0x8a00	      0xe800000000	                          call 0x4008a45	      4724	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_11
0x8a05	            0x85c0	                           test eax, eax	      4724	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_11
0x8a07	            0x751c	                           jne 0x4008a65	      4724	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_11
0x8a09	      0xbf00000000	                              mov edi, 0	      4726	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_13
0x8a0e	      0xe800000000	                          call 0x4008a53	      4726	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_13
0x8a13	          0x4889c7	                            mov rdi, rax	      4726	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_13
0x8a16	      0xe800000000	                          call 0x4008a5b	      4726	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17	CALL_13
0x8a1b	      0xb800000000	                              mov eax, 0	      4727	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17
0x8a20	      0xe976020000	                           jmp 0x4008cdb	      4727	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	IF_17
0x8a25	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4730	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	CALL_14
0x8a29	        0x4883c007	                              add rax, 7	      4730	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	CALL_14
0x8a2d	          0x4889c7	                            mov rdi, rax	      4730	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	CALL_14
0x8a30	      0xe800000000	                          call 0x4008a75	      4730	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	CALL_14
0x8a35	        0x488945c8	             mov qword [rbp - 0x38], rax	      4730	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	CALL_14
0x8a39	      0xe950020000	                           jmp 0x4008cce	      4730	syntax.c	FUNCTION_76	FOR_1	ELSE_3	IF_15	CALL_14
0x8a3e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4734	syntax.c	FUNCTION_76	FOR_1	ELSE_5
0x8a42	            0x8b10	                    mov edx, dword [rax]	      4734	syntax.c	FUNCTION_76	FOR_1	ELSE_5
0x8a44	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4734	syntax.c	FUNCTION_76	FOR_1	ELSE_5
0x8a47	            0x4898	                                    cdqe	      4734	syntax.c	FUNCTION_76	FOR_1	ELSE_5
0x8a49	        0x48c1e004	                              shl rax, 4	      4734	syntax.c	FUNCTION_76	FOR_1	ELSE_5
0x8a4d	    0x480500000000	                              add rax, 0	      4734	syntax.c	FUNCTION_76	FOR_1	ELSE_5
0x8a53	            0x8b00	                    mov eax, dword [rax]	      4734	syntax.c	FUNCTION_76	FOR_1	ELSE_5
0x8a55	             0x9c2	                             or edx, eax	      4734	syntax.c	FUNCTION_76	FOR_1	ELSE_5
0x8a57	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4734	syntax.c	FUNCTION_76	FOR_1	ELSE_5
0x8a5b	            0x8910	                    mov dword [rax], edx	      4734	syntax.c	FUNCTION_76	FOR_1	ELSE_5
0x8a5d	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      4735	syntax.c	FUNCTION_76	FOR_1	ELSE_5	CALL_15
0x8a61	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      4735	syntax.c	FUNCTION_76	FOR_1	ELSE_5	CALL_15
0x8a64	            0x4898	                                    cdqe	      4735	syntax.c	FUNCTION_76	FOR_1	ELSE_5	CALL_15
0x8a66	          0x4801d0	                            add rax, rdx	      4735	syntax.c	FUNCTION_76	FOR_1	ELSE_5	CALL_15
0x8a69	          0x4889c7	                            mov rdi, rax	      4735	syntax.c	FUNCTION_76	FOR_1	ELSE_5	CALL_15
0x8a6c	      0xe800000000	                          call 0x4008ab1	      4735	syntax.c	FUNCTION_76	FOR_1	ELSE_5	CALL_15
0x8a71	        0x488945c8	             mov qword [rbp - 0x38], rax	      4735	syntax.c	FUNCTION_76	FOR_1	ELSE_5	CALL_15
0x8a75	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4737	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x8a78	            0x4898	                                    cdqe	      4737	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x8a7a	        0x48c1e004	                              shl rax, 4	      4737	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x8a7e	    0x480500000000	                              add rax, 0	      4737	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x8a84	            0x8b00	                    mov eax, dword [rax]	      4737	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x8a86	          0x83f810	                           cmp eax, 0x10	      4737	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x8a89	            0x741a	                            je 0x4008ae5	      4737	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x8a8b	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4738	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x8a8e	            0x4898	                                    cdqe	      4738	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x8a90	        0x48c1e004	                              shl rax, 4	      4738	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x8a94	    0x480500000000	                              add rax, 0	      4738	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x8a9a	            0x8b00	                    mov eax, dword [rax]	      4738	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x8a9c	          0x83f820	                           cmp eax, 0x20	      4738	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x8a9f	     0xf85a7010000	                           jne 0x4008c8c	      4738	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x8aa5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4740	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19
0x8aa9	        0x488b4008	                mov rax, qword [rax + 8]	      4740	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19
0x8aad	          0x4885c0	                           test rax, rax	      4740	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19
0x8ab0	            0x751c	                           jne 0x4008b0e	      4740	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19
0x8ab2	      0xbf00000000	                              mov edi, 0	      4742	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19	CALL_17
0x8ab7	      0xe800000000	                          call 0x4008afc	      4742	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19	CALL_17
0x8abc	          0x4889c7	                            mov rdi, rax	      4742	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19	CALL_17
0x8abf	      0xe800000000	                          call 0x4008b04	      4742	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19	CALL_17
0x8ac4	      0xb800000000	                              mov eax, 0	      4743	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19
0x8ac9	      0xe9cd010000	                           jmp 0x4008cdb	      4743	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_19
0x8ace	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4745	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x8ad2	        0x488945f0	             mov qword [rbp - 0x10], rax	      4745	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18
0x8ad6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4746	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_18
0x8ada	          0x4889c7	                            mov rdi, rax	      4746	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_18
0x8add	      0xe800000000	                          call 0x4008b22	      4746	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_18
0x8ae2	        0x488945c8	             mov qword [rbp - 0x38], rax	      4746	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_18
0x8ae6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4747	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_20
0x8aea	        0x483945f0	            cmp qword [rbp - 0x10], rax 	      4747	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_20
0x8aee	            0x750a	                           jne 0x4008b3a	      4747	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_20
0x8af0	      0xb800000000	                              mov eax, 0	      4748	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_20
0x8af5	      0xe9a1010000	                           jmp 0x4008cdb	      4748	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_20
0x8afa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x8afe	          0x4889c2	                            mov rdx, rax	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x8b01	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x8b05	          0x4829c2	                            sub rdx, rax	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x8b08	          0x4889d0	                            mov rax, rdx	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x8b0b	            0x89c2	                            mov edx, eax	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x8b0d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x8b11	            0x89d6	                            mov esi, edx	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x8b13	          0x4889c7	                            mov rdi, rax	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x8b16	      0xe800000000	                          call 0x4008b5b	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x8b1b	        0x488945f8	                mov qword [rbp - 8], rax	      4749	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_19
0x8b1f	      0x48837df800	                  cmp qword [rbp - 8], 0	      4750	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_21
0x8b24	            0x750a	                           jne 0x4008b70	      4750	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_21
0x8b26	      0xb800000000	                              mov eax, 0	      4751	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_21
0x8b2b	      0xe96b010000	                           jmp 0x4008cdb	      4751	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_21
0x8b30	        0x488b45f8	                mov rax, qword [rbp - 8]	      4752	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22	CALL_20
0x8b34	      0xbe00000000	                              mov esi, 0	      4752	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22	CALL_20
0x8b39	          0x4889c7	                            mov rdi, rax	      4752	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22	CALL_20
0x8b3c	      0xe800000000	                          call 0x4008b81	      4752	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22	CALL_20
0x8b41	            0x85c0	                           test eax, eax	      4752	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22	CALL_20
0x8b43	            0x7513	                           jne 0x4008b98	      4752	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22	CALL_20
0x8b45	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4753	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22
0x8b49	        0x488b4008	                mov rax, qword [rax + 8]	      4753	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22
0x8b4d	    0xc700feffffff	            mov dword [rax], 0xfffffffe 	      4753	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22
0x8b53	      0xe9d6000000	                           jmp 0x4008c6e	      4753	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	IF_22
0x8b58	        0x488b45f8	                mov rax, qword [rbp - 8]	      4756	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	CALL_21
0x8b5c	          0x4889c7	                            mov rdi, rax	      4756	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	CALL_21
0x8b5f	      0xe800000000	                          call 0x4008ba4	      4756	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	CALL_21
0x8b64	          0x8945e4	             mov dword [rbp - 0x1c], eax	      4756	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	CALL_21
0x8b67	    0x488b05000000	            mov rax, qword [0x04008bae] 	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x8b6e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x8b72	    0x8b8060020000	           mov eax, dword [rax + 0x260] 	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x8b78	          0x8945dc	             mov dword [rbp - 0x24], eax	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x8b7b	            0xeb72	                           jmp 0x4008c2f	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x8b7d	    0x488b05000000	            mov rax, qword [0x04008bc4] 	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_22
0x8b84	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_22
0x8b88	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_22
0x8b8f	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_22
0x8b92	          0x4863d0	                         movsxd rdx, eax	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_22
0x8b95	          0x4889d0	                            mov rax, rdx	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_22
0x8b98	        0x48c1e002	                              shl rax, 2	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_22
0x8b9c	          0x4801d0	                            add rax, rdx	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_22
0x8b9f	        0x48c1e005	                              shl rax, 5	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_22
0x8ba3	          0x4801c8	                            add rax, rcx	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_22
0x8ba6	         0xfb74054	           movzx eax, word [rax + 0x54] 	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_22
0x8baa	              0x98	                                    cwde	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_22
0x8bab	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_22
0x8bae	            0x753f	                           jne 0x4008c2f	      4758	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_22
0x8bb0	    0x488b05000000	            mov rax, qword [0x04008bf7] 	      4759	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_23
0x8bb7	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4759	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_23
0x8bbb	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      4759	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_23
0x8bc2	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4759	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_23
0x8bc5	          0x4863d0	                         movsxd rdx, eax	      4759	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_23
0x8bc8	          0x4889d0	                            mov rax, rdx	      4759	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_23
0x8bcb	        0x48c1e002	                              shl rax, 2	      4759	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_23
0x8bcf	          0x4801d0	                            add rax, rdx	      4759	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_23
0x8bd2	        0x48c1e005	                              shl rax, 5	      4759	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_23
0x8bd6	          0x4801c8	                            add rax, rcx	      4759	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_23
0x8bd9	           0xfb600	                   movzx eax, byte [rax]	      4759	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_23
0x8bdc	            0x3c02	                               cmp al, 2	      4759	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_23
0x8bde	            0x750f	                           jne 0x4008c2f	      4759	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23	CALL_23
0x8be0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4761	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x8be4	        0x488b4008	                mov rax, qword [rax + 8]	      4761	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x8be8	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      4761	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x8beb	            0x8910	                    mov dword [rax], edx	      4761	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x8bed	            0xeb0a	                           jmp 0x4008c39	      4762	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4	IF_23
0x8bef	        0x836ddc01	               sub dword [rbp - 0x24], 1	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x8bf3	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x8bf7	            0x7984	                           jns 0x4008bbd	      4757	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	FOR_4
0x8bf9	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      4764	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24
0x8bfd	            0x792f	                           jns 0x4008c6e	      4764	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24
0x8bff	      0xbf00000000	                              mov edi, 0	      4766	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_25
0x8c04	      0xe800000000	                          call 0x4008c49	      4766	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_25
0x8c09	          0x4889c2	                            mov rdx, rax	      4766	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_25
0x8c0c	        0x488b45f8	                mov rax, qword [rbp - 8]	      4766	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_25
0x8c10	          0x4889c6	                            mov rsi, rax	      4766	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_25
0x8c13	          0x4889d7	                            mov rdi, rdx	      4766	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_25
0x8c16	      0xe800000000	                          call 0x4008c5b	      4766	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_25
0x8c1b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4767	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_26
0x8c1f	          0x4889c7	                            mov rdi, rax	      4767	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_26
0x8c22	      0xe800000000	                          call 0x4008c67	      4767	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24	CALL_26
0x8c27	      0xb800000000	                              mov eax, 0	      4768	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24
0x8c2c	            0xeb6d	                           jmp 0x4008cdb	      4768	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	ELSE_6	IF_24
0x8c2e	        0x488b45f8	                mov rax, qword [rbp - 8]	      4772	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_27
0x8c32	          0x4889c7	                            mov rdi, rax	      4772	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_27
0x8c35	      0xe800000000	                          call 0x4008c7a	      4772	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_27
0x8c3a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4773	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_28
0x8c3e	          0x4889c7	                            mov rdi, rax	      4773	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_28
0x8c41	      0xe800000000	                          call 0x4008c86	      4773	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_28
0x8c46	        0x488945c8	             mov qword [rbp - 0x38], rax	      4773	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_28
0x8c4a	            0xeb42	                           jmp 0x4008cce	      4773	syntax.c	FUNCTION_76	FOR_1	ELSE_5	IF_18	CALL_28
0x8c4c	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4776	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x8c4f	            0x4898	                                    cdqe	      4776	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x8c51	        0x48c1e004	                              shl rax, 4	      4776	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x8c55	    0x480500000000	                              add rax, 0	      4776	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x8c5b	            0x8b00	                    mov eax, dword [rax]	      4776	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x8c5d	      0x3d00200000	                         cmp eax, 0x2000	      4776	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x8c62	     0xf853afaffff	                           jne 0x40086e2	      4776	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x8c68	    0x488b05000000	            mov rax, qword [0x04008caf] 	      4777	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25	CALL_29
0x8c6f	          0x4889c7	                            mov rdi, rax	      4777	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25	CALL_29
0x8c72	      0xe800000000	                          call 0x4008cb7	      4777	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25	CALL_29
0x8c77	            0x85c0	                           test eax, eax	      4777	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25	CALL_29
0x8c79	     0xf8423faffff	                            je 0x40086e2	      4777	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25	CALL_29
0x8c7f	    0x488b05000000	            mov rax, qword [0x04008cc6] 	      4779	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x8c86	          0x4889c7	                            mov rdi, rax	      4779	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x8c89	      0xe800000000	                          call 0x4008cce	      4779	syntax.c	FUNCTION_76	FOR_1	ELSE_5	ELSE_7	IF_25
0x8c8e	      0xe90ffaffff	                           jmp 0x40086e2	      4782	syntax.c	FUNCTION_76	FOR_1
0x8c93	              0x90	                                     nop	      4658	syntax.c	FUNCTION_76	FOR_1	IF_3
0x8c94	            0xeb01	                           jmp 0x4008cd7	      4658	syntax.c	FUNCTION_76	FOR_1	IF_3
0x8c96	              0x90	                                     nop	      4681	syntax.c	FUNCTION_76	FOR_1	IF_7
0x8c97	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4784	syntax.c	FUNCTION_76
0x8c9b	              0xc9	                                   leave	      4785	syntax.c	FUNCTION_76
0x8c9c	              0xc3	                                     ret	      4785	syntax.c	FUNCTION_76
syn_compare_syntime	FOR,0:DO,0:IF,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,1	16
0xcf3f	              0x55	                                push rbp	      6753	syntax.c	FUNCTION_111
0xcf40	          0x4889e5	                            mov rbp, rsp	      6753	syntax.c	FUNCTION_111
0xcf43	        0x4883ec20	                           sub rsp, 0x20	      6753	syntax.c	FUNCTION_111
0xcf47	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6753	syntax.c	FUNCTION_111
0xcf4b	        0x488975e0	             mov qword [rbp - 0x20], rsi	      6753	syntax.c	FUNCTION_111
0xcf4f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6754	syntax.c	FUNCTION_111
0xcf53	        0x488945f0	             mov qword [rbp - 0x10], rax	      6754	syntax.c	FUNCTION_111
0xcf57	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6755	syntax.c	FUNCTION_111
0xcf5b	        0x488945f8	                mov qword [rbp - 8], rax	      6755	syntax.c	FUNCTION_111
0xcf5f	        0x488b55f8	                mov rdx, qword [rbp - 8]	      6757	syntax.c	FUNCTION_111	CALL_1
0xcf63	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6757	syntax.c	FUNCTION_111	CALL_1
0xcf67	          0x4889d6	                            mov rsi, rdx	      6757	syntax.c	FUNCTION_111	CALL_1
0xcf6a	          0x4889c7	                            mov rdi, rax	      6757	syntax.c	FUNCTION_111	CALL_1
0xcf6d	      0xe800000000	                          call 0x400cfb2	      6757	syntax.c	FUNCTION_111	CALL_1
0xcf72	              0xc9	                                   leave	      6758	syntax.c	FUNCTION_111
0xcf73	              0xc3	                                     ret	      6758	syntax.c	FUNCTION_111
syn_current_attr	FOR,2:DO,1:IF,48:SWITCH,0:functions,0:ELSE,10:WHILE,0:CALL,49	963
0x29c7	              0x55	                                push rbp	      1904	syntax.c	FUNCTION_28
0x29c8	          0x4889e5	                            mov rbp, rsp	      1904	syntax.c	FUNCTION_28
0x29cb	            0x4154	                                push r12	      1904	syntax.c	FUNCTION_28
0x29cd	              0x53	                                push rbx	      1904	syntax.c	FUNCTION_28
0x29ce	    0x4881eca00200	                          sub rsp, 0x2a0	      1904	syntax.c	FUNCTION_28
0x29d5	    0x89bd6cfdffff	            mov dword [rbp - 0x294], edi	      1904	syntax.c	FUNCTION_28
0x29db	    0x89b568fdffff	            mov dword [rbp - 0x298], esi	      1904	syntax.c	FUNCTION_28
0x29e1	    0x48899560fdff	            mov qword [rbp - 0x2a0], rdx	      1904	syntax.c	FUNCTION_28
0x29e8	    0x898d5cfdffff	            mov dword [rbp - 0x2a4], ecx	      1904	syntax.c	FUNCTION_28
0x29ee	    0x64488b042528	                mov rax, qword fs:[0x28]	      1904	syntax.c	FUNCTION_28
0x29f7	        0x488945e8	             mov qword [rbp - 0x18], rax	      1904	syntax.c	FUNCTION_28
0x29fb	            0x31c0	                            xor eax, eax	      1904	syntax.c	FUNCTION_28
0x29fd	    0x48c785b8fdff	              mov qword [rbp - 0x248], 0	      1914	syntax.c	FUNCTION_28
0x2a08	    0x48c785c0fdff	              mov qword [rbp - 0x240], 0	      1926	syntax.c	FUNCTION_28
0x2a13	    0xc78590fdffff	              mov dword [rbp - 0x270], 0	      1933	syntax.c	FUNCTION_28
0x2a1d	      0xe80b2e0000	                 call sym.syn_getcurline	      1940	syntax.c	FUNCTION_28	CALL_1
0x2a22	    0x488985c8fdff	            mov qword [rbp - 0x238], rax	      1940	syntax.c	FUNCTION_28	CALL_1
0x2a29	    0x8b0500000000	            mov eax, dword [0x04002a6f] 	      1941	syntax.c	FUNCTION_28	IF_1
0x2a2f	          0x4863d0	                         movsxd rdx, eax	      1941	syntax.c	FUNCTION_28	IF_1
0x2a32	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	      1941	syntax.c	FUNCTION_28	IF_1
0x2a39	          0x4801d0	                            add rax, rdx	      1941	syntax.c	FUNCTION_28	IF_1
0x2a3c	           0xfb600	                   movzx eax, byte [rax]	      1941	syntax.c	FUNCTION_28	IF_1
0x2a3f	            0x84c0	                             test al, al	      1941	syntax.c	FUNCTION_28	IF_1
0x2a41	            0x7559	                           jne 0x4002adc	      1941	syntax.c	FUNCTION_28	IF_1
0x2a43	    0x8b0500000000	            mov eax, dword [0x04002a89] 	      1941	syntax.c	FUNCTION_28	IF_1
0x2a49	            0x85c0	                           test eax, eax	      1941	syntax.c	FUNCTION_28	IF_1
0x2a4b	            0x744f	                            je 0x4002adc	      1941	syntax.c	FUNCTION_28	IF_1
0x2a4d	    0x8b0500000000	            mov eax, dword [0x04002a93] 	      1946	syntax.c	FUNCTION_28	IF_1	IF_2
0x2a53	            0x85c0	                           test eax, eax	      1946	syntax.c	FUNCTION_28	IF_1	IF_2
0x2a55	            0x7827	                            js 0x4002abe	      1946	syntax.c	FUNCTION_28	IF_1	IF_2
0x2a57	    0x8b1500000000	            mov edx, dword [0x04002a9d] 	      1946	syntax.c	FUNCTION_28	IF_1	IF_2
0x2a5d	    0x8b0500000000	            mov eax, dword [0x04002aa3] 	      1946	syntax.c	FUNCTION_28	IF_1	IF_2
0x2a63	            0x39c2	                            cmp edx, eax	      1946	syntax.c	FUNCTION_28	IF_1	IF_2
0x2a65	            0x7c17	                            jl 0x4002abe	      1946	syntax.c	FUNCTION_28	IF_1	IF_2
0x2a67	    0x8b0500000000	            mov eax, dword [0x04002aad] 	      1947	syntax.c	FUNCTION_28	IF_1	IF_2
0x2a6d	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      1947	syntax.c	FUNCTION_28	IF_1	IF_2
0x2a72	            0x740a	                            je 0x4002abe	      1947	syntax.c	FUNCTION_28	IF_1	IF_2
0x2a74	      0xbf00000000	                              mov edi, 0	      1948	syntax.c	FUNCTION_28	IF_1	CALL_2
0x2a79	      0xe82c130000	                call sym.push_next_match	      1948	syntax.c	FUNCTION_28	IF_1	CALL_2
0x2a7e	    0xc70500000000	               mov dword [0x04002ac8], 1	      1950	syntax.c	FUNCTION_28	IF_1
0x2a88	    0xc70500000000	               mov dword [0x04002ad2], 0	      1951	syntax.c	FUNCTION_28	IF_1
0x2a92	      0xb800000000	                              mov eax, 0	      1952	syntax.c	FUNCTION_28	IF_1
0x2a97	      0xe908120000	                           jmp 0x4003ce4	      1952	syntax.c	FUNCTION_28	IF_1
0x2a9c	    0x8b0500000000	            mov eax, dword [0x04002ae2] 	      1956	syntax.c	FUNCTION_28	IF_3
0x2aa2	          0x4863d0	                         movsxd rdx, eax	      1956	syntax.c	FUNCTION_28	IF_3
0x2aa5	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	      1956	syntax.c	FUNCTION_28	IF_3
0x2aac	          0x4801d0	                            add rax, rdx	      1956	syntax.c	FUNCTION_28	IF_3
0x2aaf	           0xfb600	                   movzx eax, byte [rax]	      1956	syntax.c	FUNCTION_28	IF_3
0x2ab2	            0x84c0	                             test al, al	      1956	syntax.c	FUNCTION_28	IF_3
0x2ab4	            0x741d	                            je 0x4002b13	      1956	syntax.c	FUNCTION_28	IF_3
0x2ab6	    0x8b0500000000	            mov eax, dword [0x04002afc] 	      1956	syntax.c	FUNCTION_28	IF_3
0x2abc	            0x4898	                                    cdqe	      1956	syntax.c	FUNCTION_28	IF_3
0x2abe	        0x488d5001	                      lea rdx, [rax + 1]	      1956	syntax.c	FUNCTION_28	IF_3
0x2ac2	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	      1956	syntax.c	FUNCTION_28	IF_3
0x2ac9	          0x4801d0	                            add rax, rdx	      1956	syntax.c	FUNCTION_28	IF_3
0x2acc	           0xfb600	                   movzx eax, byte [rax]	      1956	syntax.c	FUNCTION_28	IF_3
0x2acf	            0x84c0	                             test al, al	      1956	syntax.c	FUNCTION_28	IF_3
0x2ad1	            0x7514	                           jne 0x4002b27	      1956	syntax.c	FUNCTION_28	IF_3
0x2ad3	    0xc70500000000	               mov dword [0x04002b1d], 1	      1958	syntax.c	FUNCTION_28	IF_3
0x2add	    0xc70500000000	               mov dword [0x04002b27], 0	      1959	syntax.c	FUNCTION_28	IF_3
0x2ae7	    0x8b0500000000	            mov eax, dword [0x04002b2d] 	      1967	syntax.c	FUNCTION_28	IF_4
0x2aed	            0x85c0	                           test eax, eax	      1967	syntax.c	FUNCTION_28	IF_4
0x2aef	            0x7414	                            je 0x4002b45	      1967	syntax.c	FUNCTION_28	IF_4
0x2af1	    0xc70500000000	     mov dword [0x04002b3b], 0xffffffff 	      1969	syntax.c	FUNCTION_28	IF_4
0x2afb	    0xc70500000000	               mov dword [0x04002b45], 0	      1970	syntax.c	FUNCTION_28	IF_4
0x2b05	    0x83bd6cfdffff	              cmp dword [rbp - 0x294], 0	      1975	syntax.c	FUNCTION_28
0x2b0c	            0x752a	                           jne 0x4002b78	      1975	syntax.c	FUNCTION_28
0x2b0e	    0x488b05000000	            mov rax, qword [0x04002b55] 	      1975	syntax.c	FUNCTION_28
0x2b15	        0x488b4008	                mov rax, qword [rax + 8]	      1975	syntax.c	FUNCTION_28
0x2b19	          0x4885c0	                           test rax, rax	      1975	syntax.c	FUNCTION_28
0x2b1c	            0x7513	                           jne 0x4002b71	      1975	syntax.c	FUNCTION_28
0x2b1e	    0x488b05000000	            mov rax, qword [0x04002b65] 	      1976	syntax.c	FUNCTION_28
0x2b25	    0x488b80300100	           mov rax, qword [rax + 0x130] 	      1976	syntax.c	FUNCTION_28
0x2b2c	          0x4885c0	                           test rax, rax	      1976	syntax.c	FUNCTION_28
0x2b2f	            0x7407	                            je 0x4002b78	      1976	syntax.c	FUNCTION_28
0x2b31	      0xb801000000	                              mov eax, 1	      1975	syntax.c	FUNCTION_28
0x2b36	            0xeb05	                           jmp 0x4002b7d	      1975	syntax.c	FUNCTION_28
0x2b38	      0xb800000000	                              mov eax, 0	      1975	syntax.c	FUNCTION_28
0x2b3d	    0x898594fdffff	            mov dword [rbp - 0x26c], eax	      1974	syntax.c	FUNCTION_28
0x2b43	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      1980	syntax.c	FUNCTION_28	CALL_3
0x2b4a	      0xba0a000000	                            mov edx, 0xa	      1980	syntax.c	FUNCTION_28	CALL_3
0x2b4f	      0xbe04000000	                              mov esi, 4	      1980	syntax.c	FUNCTION_28	CALL_3
0x2b54	          0x4889c7	                            mov rdi, rax	      1980	syntax.c	FUNCTION_28	CALL_3
0x2b57	      0xe800000000	                          call 0x4002b9c	      1980	syntax.c	FUNCTION_28	CALL_3
0x2b5c	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1983	syntax.c	FUNCTION_28	CALL_4
0x2b60	          0x4889c7	                            mov rdi, rax	      1983	syntax.c	FUNCTION_28	CALL_4
0x2b63	      0xe8a9e1ffff	                   call sym.save_chartab	      1983	syntax.c	FUNCTION_28	CALL_4
0x2b68	    0xc78584fdffff	              mov dword [rbp - 0x27c], 0	      1992	syntax.c	FUNCTION_28	DO_1
0x2b72	    0xc7858cfdffff	              mov dword [rbp - 0x274], 0	      1993	syntax.c	FUNCTION_28	DO_1
0x2b7c	    0xc7857cfdffff	              mov dword [rbp - 0x284], 0	      1994	syntax.c	FUNCTION_28	DO_1
0x2b86	    0x8b0500000000	            mov eax, dword [0x04002bcc] 	      2004	syntax.c	FUNCTION_28	DO_1	IF_5
0x2b8c	            0x85c0	                           test eax, eax	      2004	syntax.c	FUNCTION_28	DO_1	IF_5
0x2b8e	            0x7430	                            je 0x4002c00	      2004	syntax.c	FUNCTION_28	DO_1	IF_5
0x2b90	    0x488b0d000000	            mov rcx, qword [0x04002bd7] 	      2005	syntax.c	FUNCTION_28	DO_1	CALL_5
0x2b97	    0x8b0500000000	            mov eax, dword [0x04002bdd] 	      2005	syntax.c	FUNCTION_28	DO_1	CALL_5
0x2b9d	          0x4863d0	                         movsxd rdx, eax	      2005	syntax.c	FUNCTION_28	DO_1	CALL_5
0x2ba0	          0x4889d0	                            mov rax, rdx	      2005	syntax.c	FUNCTION_28	DO_1	CALL_5
0x2ba3	        0x48c1e003	                              shl rax, 3	      2005	syntax.c	FUNCTION_28	DO_1	CALL_5
0x2ba7	          0x4801d0	                            add rax, rdx	      2005	syntax.c	FUNCTION_28	DO_1	CALL_5
0x2baa	        0x48c1e004	                              shl rax, 4	      2005	syntax.c	FUNCTION_28	DO_1	CALL_5
0x2bae	    0x482d90000000	                           sub rax, 0x90	      2005	syntax.c	FUNCTION_28	DO_1	CALL_5
0x2bb4	          0x4801c8	                            add rax, rcx	      2005	syntax.c	FUNCTION_28	DO_1	CALL_5
0x2bb7	    0x488985b0fdff	            mov qword [rbp - 0x250], rax	      2005	syntax.c	FUNCTION_28	DO_1	CALL_5
0x2bbe	            0xeb0b	                           jmp 0x4002c0b	      2005	syntax.c	FUNCTION_28	DO_1	CALL_5
0x2bc0	    0x48c785b0fdff	              mov qword [rbp - 0x250], 0	      2007	syntax.c	FUNCTION_28	DO_1	ELSE_1
0x2bcb	    0x488b05000000	            mov rax, qword [0x04002c12] 	      2009	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x2bd2	    0x8b8098020000	           mov eax, dword [rax + 0x298] 	      2009	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x2bd8	            0x85c0	                           test eax, eax	      2009	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x2bda	            0x751e	                           jne 0x4002c3a	      2009	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x2bdc	    0x4883bdb0fdff	              cmp qword [rbp - 0x250], 0	      2009	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x2be4	            0x7414	                            je 0x4002c3a	      2009	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x2be6	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2010	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x2bed	        0x488b4078	            mov rax, qword [rax + 0x78] 	      2010	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x2bf1	          0x4885c0	                           test rax, rax	      2010	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x2bf4	     0xf842f0b0000	                            je 0x4003769	      2010	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6
0x2bfa	    0x83bd94fdffff	              cmp dword [rbp - 0x26c], 0	      2016	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7
0x2c01	     0xf848d030000	                            je 0x4002fd4	      2016	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7
0x2c07	      0xe8212c0000	                 call sym.syn_getcurline	      2018	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	CALL_6
0x2c0c	    0x488985c8fdff	            mov qword [rbp - 0x238], rax	      2018	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	CALL_6
0x2c13	    0x488b05000000	            mov rax, qword [0x04002c5a] 	      2019	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_7
0x2c1a	    0x8b1500000000	            mov edx, dword [0x04002c60] 	      2019	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_7
0x2c20	          0x4863ca	                         movsxd rcx, edx	      2019	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_7
0x2c23	    0x488b95c8fdff	            mov rdx, qword [rbp - 0x238]	      2019	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_7
0x2c2a	          0x4801ca	                            add rdx, rcx	      2019	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_7
0x2c2d	          0x4889c6	                            mov rsi, rax	      2019	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_7
0x2c30	          0x4889d7	                            mov rdi, rdx	      2019	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_7
0x2c33	      0xe800000000	                          call 0x4002c78	      2019	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_7
0x2c38	            0x85c0	                           test eax, eax	      2019	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_7
0x2c3a	     0xf8454030000	                            je 0x4002fd4	      2019	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_7
0x2c40	    0x8b0500000000	            mov eax, dword [0x04002c86] 	      2020	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x2c46	            0x85c0	                           test eax, eax	      2020	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x2c48	            0x7477	                            je 0x4002d01	      2020	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x2c4a	    0x488b1d000000	            mov rbx, qword [0x04002c91] 	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x2c51	    0x8b0500000000	            mov eax, dword [0x04002c97] 	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x2c57	          0x4c63e0	                         movsxd r12, eax	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x2c5a	    0x8b0500000000	            mov eax, dword [0x04002ca0] 	      2024	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x2c60	            0x85c0	                           test eax, eax	      2023	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x2c62	            0x7431	                            je 0x4002cd5	      2023	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x2c64	    0x488b05000000	            mov rax, qword [0x04002cab] 	      2024	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x2c6b	    0x8b1500000000	            mov edx, dword [0x04002cb1] 	      2024	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x2c71	          0x4863d2	                         movsxd rdx, edx	      2024	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x2c74	        0x488d4aff	                      lea rcx, [rdx - 1]	      2024	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x2c78	    0x488b95c8fdff	            mov rdx, qword [rbp - 0x238]	      2024	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x2c7f	          0x4801d1	                            add rcx, rdx	      2024	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x2c82	    0x488b95c8fdff	            mov rdx, qword [rbp - 0x238]	      2024	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x2c89	          0x4889ce	                            mov rsi, rcx	      2024	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x2c8c	          0x4889d7	                            mov rdi, rdx	      2024	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x2c8f	            0xffd0	                                call rax	      2024	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x2c91	            0x4898	                                    cdqe	      2023	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x2c93	            0xeb05	                           jmp 0x4002cda	      2023	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x2c95	      0xb800000000	                              mov eax, 0	      2023	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x2c9a	          0x4929c4	                            sub r12, rax	      2023	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x2c9d	          0x4c89e0	                            mov rax, r12	      2023	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x2ca0	        0x488d50ff	                      lea rdx, [rax - 1]	      2023	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8
0x2ca4	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x2cab	          0x4801d0	                            add rax, rdx	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x2cae	          0x4889de	                            mov rsi, rbx	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x2cb1	          0x4889c7	                            mov rdi, rax	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x2cb4	      0xe800000000	                          call 0x4002cf9	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x2cb9	            0x85c0	                           test eax, eax	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x2cbb	     0xf85d3020000	                           jne 0x4002fd4	      2021	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_8
0x2cc1	    0x8b3500000000	            mov esi, dword [0x04002d07] 	      2029	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_9
0x2cc7	    0x4c8b8db0fdff	             mov r9, qword [rbp - 0x250]	      2029	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_9
0x2cce	    0x4c8d85a8fdff	                   lea r8, [rbp - 0x258]	      2029	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_9
0x2cd5	    0x488d8da0fdff	                  lea rcx, [rbp - 0x260]	      2029	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_9
0x2cdc	    0x488d9574fdff	                  lea rdx, [rbp - 0x28c]	      2029	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_9
0x2ce3	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	      2029	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_9
0x2cea	        0x4883ec08	                              sub rsp, 8	      2029	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_9
0x2cee	    0x488dbd78fdff	                  lea rdi, [rbp - 0x288]	      2029	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_9
0x2cf5	              0x57	                                push rdi	      2029	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_9
0x2cf6	          0x4889c7	                            mov rdi, rax	      2029	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_9
0x2cf9	      0xe8e72c0000	               call sym.check_keyword_id	      2029	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_9
0x2cfe	        0x4883c410	                           add rsp, 0x10	      2029	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_9
0x2d02	    0x89857cfdffff	            mov dword [rbp - 0x284], eax	      2029	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	CALL_9
0x2d08	    0x83bd7cfdffff	              cmp dword [rbp - 0x284], 0	      2032	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9
0x2d0f	     0xf847f020000	                            je 0x4002fd4	      2032	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9
0x2d15	      0xbfffffffff	                     mov edi, 0xffffffff	      2034	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x2d1a	      0xe8d01d0000	             call sym.push_current_state	      2034	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x2d1f	          0x83f801	                              cmp eax, 1	      2034	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x2d22	     0xf855d020000	                           jne 0x4002fc5	      2034	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_10
0x2d28	    0x488b0d000000	            mov rcx, qword [0x04002d6f] 	      2036	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_11
0x2d2f	    0x8b0500000000	            mov eax, dword [0x04002d75] 	      2036	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_11
0x2d35	          0x4863d0	                         movsxd rdx, eax	      2036	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_11
0x2d38	          0x4889d0	                            mov rax, rdx	      2036	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_11
0x2d3b	        0x48c1e003	                              shl rax, 3	      2036	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_11
0x2d3f	          0x4801d0	                            add rax, rdx	      2036	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_11
0x2d42	        0x48c1e004	                              shl rax, 4	      2036	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_11
0x2d46	    0x482d90000000	                           sub rax, 0x90	      2036	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_11
0x2d4c	          0x4801c8	                            add rax, rcx	      2036	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_11
0x2d4f	    0x488985b0fdff	            mov qword [rbp - 0x250], rax	      2036	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_11
0x2d56	    0x8b1500000000	            mov edx, dword [0x04002d9c] 	      2037	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2d5c	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2037	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2d63	          0x895010	             mov dword [rax + 0x10], edx	      2037	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2d66	    0x488b15000000	            mov rdx, qword [0x04002dad] 	      2038	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2d6d	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2038	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2d74	        0x48895028	             mov qword [rax + 0x28], rdx	      2038	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2d78	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2039	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2d7f	    0xc74030000000	               mov dword [rax + 0x30], 0	      2039	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2d86	    0x488b15000000	            mov rdx, qword [0x04002dcd] 	      2040	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2d8d	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2040	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2d94	        0x48895018	             mov qword [rax + 0x18], rdx	      2040	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2d98	    0x8b9574fdffff	            mov edx, dword [rbp - 0x28c]	      2041	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2d9e	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2041	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2da5	          0x895020	             mov dword [rax + 0x20], edx	      2041	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2da8	    0x488b15000000	            mov rdx, qword [0x04002def] 	      2042	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2daf	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2042	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2db6	        0x48895038	             mov qword [rax + 0x38], rdx	      2042	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2dba	    0x8b9574fdffff	            mov edx, dword [rbp - 0x28c]	      2043	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2dc0	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2043	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2dc7	          0x895040	             mov dword [rax + 0x40], edx	      2043	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2dca	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2044	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2dd1	    0xc7405c010000	               mov dword [rax + 0x5c], 1	      2044	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2dd8	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2045	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2ddf	    0xc74058000000	               mov dword [rax + 0x58], 0	      2045	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2de6	    0x488b95a0fdff	            mov rdx, qword [rbp - 0x260]	      2046	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2ded	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2046	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2df4	        0x48895068	             mov qword [rax + 0x68], rdx	      2046	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2df8	    0x8b0500000000	            mov eax, dword [0x04002e3e] 	      2048	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2dfe	          0x8d5001	                      lea edx, [rax + 1]	      2048	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2e01	    0x891500000000	            mov dword [0x04002e47], edx 	      2048	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2e07	    0x488b95b0fdff	            mov rdx, qword [rbp - 0x250]	      2048	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2e0e	          0x894270	             mov dword [rdx + 0x70], eax	      2048	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2e11	    0x8b9578fdffff	            mov edx, dword [rbp - 0x288]	      2049	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2e17	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2049	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2e1e	          0x895074	             mov dword [rax + 0x74], edx	      2049	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2e21	    0x8b0500000000	            mov eax, dword [0x04002e67] 	      2050	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x2e27	          0x83f801	                              cmp eax, 1	      2050	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x2e2a	            0x7e4c	                           jle 0x4002eb8	      2050	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x2e2c	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2051	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x2e33	        0x488b4868	            mov rcx, qword [rax + 0x68] 	      2051	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x2e37	    0x488b35000000	            mov rsi, qword [0x04002e7e] 	      2052	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11	CALL_12
0x2e3e	    0x8b0500000000	            mov eax, dword [0x04002e84] 	      2052	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11	CALL_12
0x2e44	          0x4863d0	                         movsxd rdx, eax	      2052	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11	CALL_12
0x2e47	          0x4889d0	                            mov rax, rdx	      2052	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11	CALL_12
0x2e4a	        0x48c1e003	                              shl rax, 3	      2052	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11	CALL_12
0x2e4e	          0x4801d0	                            add rax, rdx	      2052	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11	CALL_12
0x2e51	        0x48c1e004	                              shl rax, 4	      2052	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11	CALL_12
0x2e55	    0x482d20010000	                          sub rax, 0x120	      2052	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11	CALL_12
0x2e5b	          0x4801f0	                            add rax, rsi	      2052	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11	CALL_12
0x2e5e	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2052	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11	CALL_12
0x2e62	      0x2500000200	                        and eax, 0x20000	      2053	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x2e67	          0x4809c1	                             or rcx, rax	      2051	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x2e6a	          0x4889ca	                            mov rdx, rcx	      2051	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x2e6d	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2051	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x2e74	        0x48895068	             mov qword [rax + 0x68], rdx	      2051	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_11
0x2e78	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2055	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2e7f	    0x8b957cfdffff	            mov edx, dword [rbp - 0x284]	      2055	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2e85	          0x895004	                mov dword [rax + 4], edx	      2055	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2e88	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2056	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2e8f	    0x8b957cfdffff	            mov edx, dword [rbp - 0x284]	      2056	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2e95	          0x895008	                mov dword [rax + 8], edx	      2056	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2e98	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	      2057	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12
0x2e9f	          0x83e002	                              and eax, 2	      2057	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12
0x2ea2	          0x4885c0	                           test rax, rax	      2057	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12
0x2ea5	     0xf8496000000	                            je 0x4002f81	      2057	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12
0x2eab	    0x8b0500000000	            mov eax, dword [0x04002ef1] 	      2059	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	IF_13
0x2eb1	          0x83f801	                              cmp eax, 1	      2059	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	IF_13
0x2eb4	            0x7f21	                            jg 0x4002f17	      2059	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	IF_13
0x2eb6	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2061	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	IF_13
0x2ebd	    0xc74060000000	               mov dword [rax + 0x60], 0	      2061	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	IF_13
0x2ec4	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2062	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	IF_13
0x2ecb	    0xc74008000000	                  mov dword [rax + 8], 0	      2062	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	IF_13
0x2ed2	      0xe983000000	                           jmp 0x4002f9a	      2062	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	IF_13
0x2ed7	    0x488b0d000000	            mov rcx, qword [0x04002f1e] 	      2066	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2	CALL_13
0x2ede	    0x8b0500000000	            mov eax, dword [0x04002f24] 	      2066	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2	CALL_13
0x2ee4	          0x4863d0	                         movsxd rdx, eax	      2066	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2	CALL_13
0x2ee7	          0x4889d0	                            mov rax, rdx	      2066	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2	CALL_13
0x2eea	        0x48c1e003	                              shl rax, 3	      2066	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2	CALL_13
0x2eee	          0x4801d0	                            add rax, rdx	      2066	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2	CALL_13
0x2ef1	        0x48c1e004	                              shl rax, 4	      2066	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2	CALL_13
0x2ef5	    0x482d20010000	                          sub rax, 0x120	      2066	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2	CALL_13
0x2efb	          0x4801c8	                            add rax, rcx	      2066	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2	CALL_13
0x2efe	          0x8b5060	            mov edx, dword [rax + 0x60] 	      2067	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2
0x2f01	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2066	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2	CALL_13
0x2f08	          0x895060	             mov dword [rax + 0x60], edx	      2066	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2	CALL_13
0x2f0b	    0x488b0d000000	            mov rcx, qword [0x04002f52] 	      2068	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2	CALL_14
0x2f12	    0x8b0500000000	            mov eax, dword [0x04002f58] 	      2068	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2	CALL_14
0x2f18	          0x4863d0	                         movsxd rdx, eax	      2068	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2	CALL_14
0x2f1b	          0x4889d0	                            mov rax, rdx	      2068	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2	CALL_14
0x2f1e	        0x48c1e003	                              shl rax, 3	      2068	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2	CALL_14
0x2f22	          0x4801d0	                            add rax, rdx	      2068	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2	CALL_14
0x2f25	        0x48c1e004	                              shl rax, 4	      2068	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2	CALL_14
0x2f29	    0x482d20010000	                          sub rax, 0x120	      2068	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2	CALL_14
0x2f2f	          0x4801c8	                            add rax, rcx	      2068	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2	CALL_14
0x2f32	          0x8b5008	                mov edx, dword [rax + 8]	      2069	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2
0x2f35	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2068	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2	CALL_14
0x2f3c	          0x895008	                mov dword [rax + 8], edx	      2068	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2	CALL_14
0x2f3f	            0xeb19	                           jmp 0x4002f9a	      2068	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	IF_12	ELSE_2	CALL_14
0x2f41	    0x8b857cfdffff	            mov eax, dword [rbp - 0x284]	      2073	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_15
0x2f47	            0x89c7	                            mov edi, eax	      2073	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_15
0x2f49	      0xe800000000	                          call 0x4002f8e	      2073	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_15
0x2f4e	            0x89c2	                            mov edx, eax	      2073	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_15
0x2f50	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2073	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_15
0x2f57	          0x895060	             mov dword [rax + 0x60], edx	      2073	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_15
0x2f5a	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2074	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2f61	    0x48c740780000	               mov qword [rax + 0x78], 0	      2074	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2f69	    0x488b95a8fdff	            mov rdx, qword [rbp - 0x258]	      2075	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2f70	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2075	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2f77	    0x488990800000	             mov qword [rax + 0x80], rdx	      2075	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10
0x2f7e	      0xe8be170000	                  call sym.check_keepend	      2076	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_16
0x2f83	            0xeb0f	                           jmp 0x4002fd4	      2076	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	IF_10	CALL_16
0x2f85	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	      2079	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	CALL_17
0x2f8c	          0x4889c7	                            mov rdi, rax	      2079	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	CALL_17
0x2f8f	      0xe800000000	                          call 0x4002fd4	      2079	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_7	IF_8	IF_9	CALL_17
0x2f94	    0x83bd7cfdffff	              cmp dword [rbp - 0x284], 0	      2087	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14
0x2f9b	     0xf8588070000	                           jne 0x4003769	      2087	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14
0x2fa1	    0x488b05000000	            mov rax, qword [0x04002fe8] 	      2087	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14
0x2fa8	    0x8b8060020000	           mov eax, dword [rax + 0x260] 	      2087	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14
0x2fae	            0x85c0	                           test eax, eax	      2087	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14
0x2fb0	     0xf8473070000	                            je 0x4003769	      2087	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14
0x2fb6	    0x8b0500000000	            mov eax, dword [0x04002ffc] 	      2093	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x2fbc	            0x85c0	                           test eax, eax	      2093	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x2fbe	            0x7814	                            js 0x4003014	      2093	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x2fc0	    0x8b1500000000	            mov edx, dword [0x04003006] 	      2093	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x2fc6	    0x8b0500000000	            mov eax, dword [0x0400300c] 	      2093	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x2fcc	            0x39c2	                            cmp edx, eax	      2093	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x2fce	     0xf8d22060000	                           jge 0x4003636	      2093	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x2fd4	    0xc70500000000	               mov dword [0x0400301e], 0	      2101	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x2fde	    0xc70500000000	     mov dword [0x04003028], 0x7fffffff 	      2102	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15
0x2fe8	    0x488b05000000	            mov rax, qword [0x0400302f] 	      2103	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1
0x2fef	    0x8b8060020000	           mov eax, dword [rax + 0x260] 	      2103	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1
0x2ff5	    0x898580fdffff	            mov dword [rbp - 0x280], eax	      2103	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1
0x2ffb	      0xe9e2050000	                           jmp 0x4003622	      2103	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1
0x3000	    0x488b05000000	            mov rax, qword [0x04003047] 	      2105	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	CALL_18
0x3007	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      2105	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	CALL_18
0x300e	    0x8b8580fdffff	            mov eax, dword [rbp - 0x280]	      2105	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	CALL_18
0x3014	          0x4863d0	                         movsxd rdx, eax	      2105	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	CALL_18
0x3017	          0x4889d0	                            mov rax, rdx	      2105	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	CALL_18
0x301a	        0x48c1e002	                              shl rax, 2	      2105	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	CALL_18
0x301e	          0x4801d0	                            add rax, rdx	      2105	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	CALL_18
0x3021	        0x48c1e005	                              shl rax, 5	      2105	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	CALL_18
0x3025	          0x4801c8	                            add rax, rcx	      2105	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	CALL_18
0x3028	    0x488985d0fdff	            mov qword [rbp - 0x230], rax	      2105	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	CALL_18
0x302f	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2106	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3036	         0xfb64001	               movzx eax, byte [rax + 1]	      2106	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x303a	           0xfbec0	                           movsx eax, al	      2106	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x303d	    0x3b856cfdffff	            cmp eax, dword [rbp - 0x294]	      2106	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3043	     0xf8599050000	                           jne 0x4003622	      2106	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3049	    0x83bd68fdffff	              cmp dword [rbp - 0x298], 0	      2107	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3050	            0x7517	                           jne 0x40030a9	      2107	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3052	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2107	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3059	          0x8b4024	            mov eax, dword [rax + 0x24] 	      2107	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x305c	      0x2500100000	                         and eax, 0x1000	      2107	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3061	            0x85c0	                           test eax, eax	      2107	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3063	     0xf8579050000	                           jne 0x4003622	      2107	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3069	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2108	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3070	           0xfb600	                   movzx eax, byte [rax]	      2108	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3073	            0x3c01	                               cmp al, 1	      2108	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3075	            0x7412	                            je 0x40030c9	      2108	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3077	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2109	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x307e	           0xfb600	                   movzx eax, byte [rax]	      2109	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3081	            0x3c02	                               cmp al, 2	      2109	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3083	     0xf8559050000	                           jne 0x4003622	      2109	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3089	    0x488b05000000	            mov rax, qword [0x040030d0] 	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3090	          0x4885c0	                           test rax, rax	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3093	            0x742b	                            je 0x4003100	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3095	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2111	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_19
0x309c	        0x488d5050	                   lea rdx, [rax + 0x50]	      2111	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_19
0x30a0	    0x488b05000000	            mov rax, qword [0x040030e7] 	      2111	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_19
0x30a7	      0xb900000000	                              mov ecx, 0	      2111	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_19
0x30ac	          0x4889c6	                            mov rsi, rax	      2111	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_19
0x30af	      0xbf00000000	                              mov edi, 0	      2111	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_19
0x30b4	      0xe8a8910000	                     call sym.in_id_list	      2111	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_19
0x30b9	            0x85c0	                           test eax, eax	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x30bb	           0xf95c0	                                setne al	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x30be	            0xeb57	                           jmp 0x4003157	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x30c0	    0x4883bdb0fdff	              cmp qword [rbp - 0x250], 0	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x30c8	            0x7514	                           jne 0x400311e	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x30ca	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2114	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x30d1	          0x8b4024	            mov eax, dword [rax + 0x24] 	      2114	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x30d4	          0x83e001	                              and eax, 1	      2114	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x30d7	            0x85c0	                           test eax, eax	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x30d9	           0xf94c0	                                 sete al	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x30dc	            0xeb39	                           jmp 0x4003157	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x30de	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2117	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x30e5	          0x8b4024	            mov eax, dword [rax + 0x24] 	      2117	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x30e8	          0x83e001	                              and eax, 1	      2115	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_20
0x30eb	            0x89c1	                            mov ecx, eax	      2115	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_20
0x30ed	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2115	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_20
0x30f4	        0x488d5050	                   lea rdx, [rax + 0x50]	      2115	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_20
0x30f8	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2115	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_20
0x30ff	        0x488b7078	            mov rsi, qword [rax + 0x78] 	      2115	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_20
0x3103	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2115	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_20
0x310a	          0x4889c7	                            mov rdi, rax	      2115	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_20
0x310d	      0xe84f910000	                     call sym.in_id_list	      2115	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_20
0x3112	            0x85c0	                           test eax, eax	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3114	           0xf95c0	                                setne al	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3117	            0x84c0	                             test al, al	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3119	     0xf84c3040000	                            je 0x4003622	      2110	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x311f	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2124	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_17
0x3126	          0x8b5034	            mov edx, dword [rax + 0x34] 	      2124	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_17
0x3129	    0x8b0500000000	            mov eax, dword [0x0400316f] 	      2124	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_17
0x312f	            0x39c2	                            cmp edx, eax	      2124	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_17
0x3131	            0x7519	                           jne 0x400318c	      2124	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_17
0x3133	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2125	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_17
0x313a	          0x8b5038	            mov edx, dword [rax + 0x38] 	      2125	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_17
0x313d	    0x8b0500000000	            mov eax, dword [0x04003183] 	      2125	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_17
0x3143	            0x39c2	                            cmp edx, eax	      2125	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_17
0x3145	            0x7c05	                            jl 0x400318c	      2125	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_17
0x3147	      0xe996040000	                           jmp 0x4003622	      2126	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_17
0x314c	    0x8b1500000000	            mov edx, dword [0x04003192] 	      2127	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3152	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2127	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3159	          0x895034	             mov dword [rax + 0x34], edx	      2127	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x315c	    0x8b1500000000	            mov edx, dword [0x040031a2] 	      2129	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3162	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2129	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3169	          0x8b4020	            mov eax, dword [rax + 0x20] 	      2129	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x316c	            0x29c2	                            sub edx, eax	      2129	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x316e	            0x89d0	                            mov eax, edx	      2129	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3170	    0x898588fdffff	            mov dword [rbp - 0x278], eax	      2129	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3176	    0x83bd88fdffff	              cmp dword [rbp - 0x278], 0	      2130	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_18
0x317d	            0x790a	                           jns 0x40031c9	      2130	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_18
0x317f	    0xc78588fdffff	              mov dword [rbp - 0x278], 0	      2131	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_18
0x3189	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2133	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3190	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      2133	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3193	          0x8945b8	             mov dword [rbp - 0x48], eax	      2133	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3196	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2134	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x319d	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2134	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x31a1	    0x48898570feff	            mov qword [rbp - 0x190], rax	      2134	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x31a8	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2135	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_21
0x31af	        0x488d4870	                   lea rcx, [rax + 0x70]	      2135	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_21
0x31b3	    0x488b35000000	            mov rsi, qword [0x040031fa] 	      2135	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_21
0x31ba	    0x8b9588fdffff	            mov edx, dword [rbp - 0x278]	      2135	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_21
0x31c0	    0x488d8570feff	                  lea rax, [rbp - 0x190]	      2135	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_21
0x31c7	          0x4889c7	                            mov rdi, rax	      2135	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_21
0x31ca	      0xe882260000	                    call sym.syn_regexec	      2135	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_21
0x31cf	    0x898598fdffff	            mov dword [rbp - 0x268], eax	      2135	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_21
0x31d5	    0x488b9570feff	            mov rdx, qword [rbp - 0x190]	      2139	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x31dc	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2139	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x31e3	        0x48895068	             mov qword [rax + 0x68], rdx	      2139	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x31e7	    0x83bd98fdffff	              cmp dword [rbp - 0x268], 0	      2140	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_19
0x31ee	            0x7513	                           jne 0x4003243	      2140	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_19
0x31f0	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2143	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_19
0x31f7	    0xc74038ffffff	     mov dword [rax + 0x38], 0x7fffffff 	      2143	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_19
0x31fe	      0xe9df030000	                           jmp 0x4003622	      2144	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_19
0x3203	    0x488b95d0fdff	            mov rdx, qword [rbp - 0x230]	      2150	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_23
0x320a	    0x488db570feff	                  lea rsi, [rbp - 0x190]	      2150	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_23
0x3211	    0x488d8530feff	                  lea rax, [rbp - 0x1d0]	      2150	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_23
0x3218	    0x41b8ffffffff	                     mov r8d, 0xffffffff	      2150	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_23
0x321e	      0xb900000000	                              mov ecx, 0	      2150	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_23
0x3223	          0x4889c7	                            mov rdi, rax	      2150	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_23
0x3226	      0xe81d240000	              call sym.syn_add_start_off	      2150	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_23
0x322b	    0x488b9530feff	            mov rdx, qword [rbp - 0x1d0]	      2152	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_20
0x3232	    0x488b05000000	            mov rax, qword [0x04003279] 	      2152	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_20
0x3239	          0x4839c2	                            cmp rdx, rax	      2152	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_20
0x323c	            0x7e13	                           jle 0x4003291	      2152	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_20
0x323e	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2156	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_20
0x3245	    0xc74038ffffff	     mov dword [rax + 0x38], 0x7fffffff 	      2156	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_20
0x324c	      0xe991030000	                           jmp 0x4003622	      2157	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_20
0x3251	    0x8b8538feffff	            mov eax, dword [rbp - 0x1c8]	      2159	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3257	    0x89859cfdffff	            mov dword [rbp - 0x264], eax	      2159	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x325d	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2163	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3264	    0x8b959cfdffff	            mov edx, dword [rbp - 0x264]	      2163	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x326a	          0x895038	             mov dword [rax + 0x38], edx	      2163	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x326d	    0x8b0500000000	            mov eax, dword [0x040032b3] 	      2169	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_21
0x3273	    0x39859cfdffff	           cmp dword [rbp - 0x264], eax 	      2169	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_21
0x3279	            0x7c05	                            jl 0x40032c0	      2169	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_21
0x327b	      0xe962030000	                           jmp 0x4003622	      2170	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_21
0x3280	    0x488d9550feff	                  lea rdx, [rbp - 0x1b0]	      2177	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_22	CALL_24
0x3287	    0x8b8580fdffff	            mov eax, dword [rbp - 0x280]	      2177	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_22	CALL_24
0x328d	          0x4889d6	                            mov rsi, rdx	      2177	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_22	CALL_24
0x3290	            0x89c7	                            mov edi, eax	      2177	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_22	CALL_24
0x3292	      0xe82a0a0000	              call sym.did_match_already	      2177	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_22	CALL_24
0x3297	            0x85c0	                           test eax, eax	      2177	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_22	CALL_24
0x3299	            0x740f	                            je 0x40032ea	      2177	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_22	CALL_24
0x329b	    0xc70500000000	               mov dword [0x040032e5], 1	      2179	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_22
0x32a5	      0xe938030000	                           jmp 0x4003622	      2180	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_22
0x32aa	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2183	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x32b1	    0x488985e0fdff	            mov qword [rbp - 0x220], rax	      2183	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x32b8	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	      2184	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x32be	    0x8985e8fdffff	            mov dword [rbp - 0x218], eax	      2184	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x32c4	    0x488b95d0fdff	            mov rdx, qword [rbp - 0x230]	      2187	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_25
0x32cb	    0x488db570feff	                  lea rsi, [rbp - 0x190]	      2187	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_25
0x32d2	    0x488d85f0fdff	                  lea rax, [rbp - 0x210]	      2187	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_25
0x32d9	    0x41b8ffffffff	                     mov r8d, 0xffffffff	      2187	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_25
0x32df	      0xb902000000	                              mov ecx, 2	      2187	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_25
0x32e4	          0x4889c7	                            mov rdi, rax	      2187	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_25
0x32e7	      0xe85c230000	              call sym.syn_add_start_off	      2187	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_25
0x32ec	    0x488b95d0fdff	            mov rdx, qword [rbp - 0x230]	      2192	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_26
0x32f3	    0x488db570feff	                  lea rsi, [rbp - 0x190]	      2192	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_26
0x32fa	    0x488d8510feff	                  lea rax, [rbp - 0x1f0]	      2192	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_26
0x3301	    0x41b800000000	                              mov r8d, 0	      2192	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_26
0x3307	      0xb904000000	                              mov ecx, 4	      2192	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_26
0x330c	          0x4889c7	                            mov rdi, rax	      2192	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_26
0x330f	      0xe880210000	                call sym.syn_add_end_off	      2192	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_26
0x3314	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      2199	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_27
0x331b	          0x4889c7	                            mov rdi, rax	      2199	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_27
0x331e	      0xe800000000	                          call 0x4003363	      2199	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_27
0x3323	    0x488b05000000	            mov rax, qword [0x0400336a] 	      2200	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x332a	    0x488985c0fdff	            mov qword [rbp - 0x240], rax	      2200	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3331	    0x48c705000000	               mov qword [0x0400337c], 0	      2201	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x333c	    0x48c785a0fdff	              mov qword [rbp - 0x260], 0	      2203	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3347	    0x48c78520feff	              mov qword [rbp - 0x1e0], 0	      2204	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3352	    0xc78528feffff	              mov dword [rbp - 0x1d8], 0	      2205	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x335c	    0xc78570fdffff	              mov dword [rbp - 0x290], 0	      2206	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3366	    0x48c78500feff	              mov qword [rbp - 0x200], 0	      2207	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3371	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2215	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x3378	           0xfb600	                   movzx eax, byte [rax]	      2215	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x337b	            0x3c02	                               cmp al, 2	      2215	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x337d	     0xf8584000000	                           jne 0x4003447	      2215	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x3383	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2216	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x338a	          0x8b4024	            mov eax, dword [rax + 0x24] 	      2216	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x338d	          0x83e004	                              and eax, 4	      2216	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x3390	            0x85c0	                           test eax, eax	      2216	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x3392	            0x7473	                            je 0x4003447	      2216	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x3394	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	      2220	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x339b	    0x488b95e8fdff	            mov rdx, qword [rbp - 0x218]	      2220	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x33a2	    0x48898540feff	            mov qword [rbp - 0x1c0], rax	      2220	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x33a9	    0x48899548feff	            mov qword [rbp - 0x1b8], rdx	      2220	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x33b0	    0x4c8d8d20feff	                   lea r9, [rbp - 0x1e0]	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_28
0x33b7	    0x4c8d85a0fdff	                   lea r8, [rbp - 0x260]	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_28
0x33be	    0x488d8d00feff	                  lea rcx, [rbp - 0x200]	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_28
0x33c5	    0x488d95e0fdff	                  lea rdx, [rbp - 0x220]	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_28
0x33cc	    0x488db540feff	                  lea rsi, [rbp - 0x1c0]	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_28
0x33d3	    0x8b8580fdffff	            mov eax, dword [rbp - 0x280]	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_28
0x33d9	    0xffb5c0fdffff	                push qword [rbp - 0x240]	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_28
0x33df	    0x488dbd70fdff	                  lea rdi, [rbp - 0x290]	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_28
0x33e6	              0x57	                                push rdi	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_28
0x33e7	            0x89c7	                            mov edi, eax	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_28
0x33e9	      0xe810180000	                    call sym.find_endpos	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_28
0x33ee	        0x4883c410	                           add rsp, 0x10	      2221	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	CALL_28
0x33f2	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	      2223	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	IF_24
0x33f9	          0x4885c0	                           test rax, rax	      2223	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	IF_24
0x33fc	     0xf85b3000000	                           jne 0x40034f5	      2223	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	IF_24
0x3402	      0xe9db010000	                           jmp 0x4003622	      2223	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23	IF_24
0x3407	    0x488b85d0fdff	            mov rax, qword [rbp - 0x230]	      2232	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25
0x340e	           0xfb600	                   movzx eax, byte [rax]	      2232	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25
0x3411	            0x3c01	                               cmp al, 1	      2232	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25
0x3413	     0xf859d000000	                           jne 0x40034f6	      2232	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25
0x3419	    0x488b95d0fdff	            mov rdx, qword [rbp - 0x230]	      2234	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_29
0x3420	    0x488db570feff	                  lea rsi, [rbp - 0x190]	      2234	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_29
0x3427	    0x488d8500feff	                  lea rax, [rbp - 0x200]	      2234	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_29
0x342e	    0x41b800000000	                              mov r8d, 0	      2234	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_29
0x3434	      0xb903000000	                              mov ecx, 3	      2234	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_29
0x3439	          0x4889c7	                            mov rdi, rax	      2234	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_29
0x343c	      0xe853200000	                call sym.syn_add_end_off	      2234	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_29
0x3441	    0x488b95d0fdff	            mov rdx, qword [rbp - 0x230]	      2236	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_30
0x3448	    0x488db570feff	                  lea rsi, [rbp - 0x190]	      2236	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_30
0x344f	    0x488d85e0fdff	                  lea rax, [rbp - 0x220]	      2236	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_30
0x3456	    0x41b800000000	                              mov r8d, 0	      2236	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_30
0x345c	      0xb901000000	                              mov ecx, 1	      2236	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_30
0x3461	          0x4889c7	                            mov rdi, rax	      2236	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_30
0x3464	      0xe82b200000	                call sym.syn_add_end_off	      2236	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	CALL_30
0x3469	    0x488b95e0fdff	            mov rdx, qword [rbp - 0x220]	      2238	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x3470	    0x488b05000000	            mov rax, qword [0x040034b7] 	      2238	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x3477	          0x4839c2	                            cmp rdx, rax	      2238	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x347a	            0x753a	                           jne 0x40034f6	      2238	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x347c	    0x8b95e8fdffff	            mov edx, dword [rbp - 0x218]	      2239	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x3482	    0x8b856cfdffff	            mov eax, dword [rbp - 0x294]	      2239	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x3488	             0x1d0	                            add eax, edx	      2239	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x348a	    0x3b859cfdffff	            cmp eax, dword [rbp - 0x264]	      2239	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x3490	            0x7d24	                           jge 0x40034f6	      2239	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x3492	    0x8b9580feffff	            mov edx, dword [rbp - 0x180]	      2245	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26	IF_27
0x3498	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	      2246	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26	IF_27
0x349e	            0x39c2	                            cmp edx, eax	      2245	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26	IF_27
0x34a0	     0xf853c010000	                           jne 0x4003622	      2245	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26	IF_27
0x34a6	    0xc70500000000	               mov dword [0x040034f0], 1	      2247	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26	IF_27
0x34b0	      0xe92d010000	                           jmp 0x4003622	      2248	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	ELSE_5	IF_25	IF_26
0x34b5	              0x90	                                     nop	      2217	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_23
0x34b6	    0x488b95f0fdff	            mov rdx, qword [rbp - 0x210]	      2257	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_28
0x34bd	    0x488b05000000	            mov rax, qword [0x04003504] 	      2257	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_28
0x34c4	          0x4839c2	                            cmp rdx, rax	      2257	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_28
0x34c7	            0x751a	                           jne 0x4003523	      2257	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_28
0x34c9	    0x8b85f8fdffff	            mov eax, dword [rbp - 0x208]	      2258	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_28
0x34cf	    0x3b859cfdffff	            cmp eax, dword [rbp - 0x264]	      2258	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_28
0x34d5	            0x7d0c	                           jge 0x4003523	      2258	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_28
0x34d7	    0x8b859cfdffff	            mov eax, dword [rbp - 0x264]	      2259	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_28
0x34dd	    0x8985f8fdffff	            mov dword [rbp - 0x208], eax	      2259	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	IF_28
0x34e3	    0x488d95e0fdff	                  lea rdx, [rbp - 0x220]	      2260	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_31
0x34ea	    0x488d8500feff	                  lea rax, [rbp - 0x200]	      2260	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_31
0x34f1	          0x4889d6	                            mov rsi, rdx	      2260	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_31
0x34f4	          0x4889c7	                            mov rdi, rax	      2260	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_31
0x34f7	      0xe84e1f0000	                 call sym.limit_pos_zero	      2260	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_31
0x34fc	    0x8b8580fdffff	            mov eax, dword [rbp - 0x280]	      2262	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3502	    0x890500000000	            mov dword [0x04003548], eax 	      2262	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3508	    0x8b859cfdffff	            mov eax, dword [rbp - 0x264]	      2263	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x350e	    0x890500000000	            mov dword [0x04003554], eax 	      2263	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3514	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	      2264	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x351b	    0x488b95e8fdff	            mov rdx, qword [rbp - 0x218]	      2264	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3522	    0x488905000000	            mov qword [0x04003569], rax 	      2264	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3529	    0x488915000000	            mov qword [0x04003570], rdx 	      2264	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3530	    0x488b8500feff	            mov rax, qword [rbp - 0x200]	      2265	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3537	    0x488b9508feff	            mov rdx, qword [rbp - 0x1f8]	      2265	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x353e	    0x488905000000	            mov qword [0x04003585], rax 	      2265	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3545	    0x488915000000	            mov qword [0x0400358c], rdx 	      2265	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x354c	    0x488b85f0fdff	            mov rax, qword [rbp - 0x210]	      2266	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3553	    0x488b95f8fdff	            mov rdx, qword [rbp - 0x208]	      2266	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x355a	    0x488905000000	            mov qword [0x040035a1], rax 	      2266	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3561	    0x488915000000	            mov qword [0x040035a8], rdx 	      2266	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3568	    0x488b85a0fdff	            mov rax, qword [rbp - 0x260]	      2267	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x356f	    0x488905000000	            mov qword [0x040035b6], rax 	      2267	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3576	    0x488b8510feff	            mov rax, qword [rbp - 0x1f0]	      2268	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x357d	    0x488b9518feff	            mov rdx, qword [rbp - 0x1e8]	      2268	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3584	    0x488905000000	            mov qword [0x040035cb], rax 	      2268	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x358b	    0x488915000000	            mov qword [0x040035d2], rdx 	      2268	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3592	    0x488b8520feff	            mov rax, qword [rbp - 0x1e0]	      2269	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x3599	    0x488b9528feff	            mov rdx, qword [rbp - 0x1d8]	      2269	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x35a0	    0x488905000000	            mov qword [0x040035e7], rax 	      2269	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x35a7	    0x488915000000	            mov qword [0x040035ee], rdx 	      2269	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x35ae	    0x8b8570fdffff	            mov eax, dword [rbp - 0x290]	      2270	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x35b4	    0x890500000000	            mov dword [0x040035fa], eax 	      2270	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x35ba	    0x488b05000000	            mov rax, qword [0x04003601] 	      2271	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_32
0x35c1	          0x4889c7	                            mov rdi, rax	      2271	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_32
0x35c4	      0xe800000000	                          call 0x4003609	      2271	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16	CALL_32
0x35c9	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      2272	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x35d0	    0x488905000000	            mov qword [0x04003617], rax 	      2272	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x35d7	    0x48c785c0fdff	              mov qword [rbp - 0x240], 0	      2273	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1	IF_16
0x35e2	    0x83ad80fdffff	              sub dword [rbp - 0x280], 1	      2103	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1
0x35e9	    0x83bd80fdffff	              cmp dword [rbp - 0x280], 0	      2103	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1
0x35f0	     0xf890afaffff	                           jns 0x4003040	      2103	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_15	FOR_1
0x35f6	    0x8b0500000000	            mov eax, dword [0x0400363c] 	      2281	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x35fc	            0x85c0	                           test eax, eax	      2281	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x35fe	     0xf8825010000	                            js 0x4003769	      2281	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x3604	    0x8b1500000000	            mov edx, dword [0x0400364a] 	      2281	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x360a	    0x8b0500000000	            mov eax, dword [0x04003650] 	      2281	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x3610	            0x39c2	                            cmp edx, eax	      2281	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x3612	     0xf8511010000	                           jne 0x4003769	      2281	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x3618	    0x488b05000000	            mov rax, qword [0x0400365f] 	      2287	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	CALL_33
0x361f	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      2287	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	CALL_33
0x3626	    0x8b0500000000	            mov eax, dword [0x0400366c] 	      2287	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	CALL_33
0x362c	          0x4863d0	                         movsxd rdx, eax	      2287	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	CALL_33
0x362f	          0x4889d0	                            mov rax, rdx	      2287	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	CALL_33
0x3632	        0x48c1e002	                              shl rax, 2	      2287	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	CALL_33
0x3636	          0x4801d0	                            add rax, rdx	      2287	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	CALL_33
0x3639	        0x48c1e005	                              shl rax, 5	      2287	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	CALL_33
0x363d	          0x4801c8	                            add rax, rcx	      2287	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	CALL_33
0x3640	    0x488985d8fdff	            mov qword [rbp - 0x228], rax	      2287	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	CALL_33
0x3647	    0x488b15000000	            mov rdx, qword [0x0400368e] 	      2288	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x364e	    0x488b05000000	            mov rax, qword [0x04003695] 	      2288	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x3655	          0x4839c2	                            cmp rdx, rax	      2288	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x3658	     0xf85ab000000	                           jne 0x4003749	      2288	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x365e	    0x8b1500000000	            mov edx, dword [0x040036a4] 	      2289	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x3664	    0x8b0500000000	            mov eax, dword [0x040036aa] 	      2289	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x366a	            0x39c2	                            cmp edx, eax	      2289	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x366c	     0xf8597000000	                           jne 0x4003749	      2289	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x3672	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2290	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x3679	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2290	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x367d	          0x4885c0	                           test rax, rax	      2290	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x3680	     0xf8483000000	                            je 0x4003749	      2290	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x3686	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2292	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x368d	        0x488b4048	            mov rax, qword [rax + 0x48] 	      2292	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x3691	    0x488905000000	            mov qword [0x040036d8], rax 	      2292	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x3698	    0x488b85d8fdff	            mov rax, qword [rbp - 0x228]	      2293	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x369f	          0x8b4024	            mov eax, dword [rax + 0x24] 	      2293	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x36a2	    0x890500000000	            mov dword [0x040036e8], eax 	      2293	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x36a8	    0xc7858cfdffff	              mov dword [rbp - 0x274], 1	      2294	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x36b2	    0xc78590fdffff	              mov dword [rbp - 0x270], 1	      2295	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x36bc	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      2300	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31	CALL_34
0x36c3	      0xbe01000000	                              mov esi, 1	      2300	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31	CALL_34
0x36c8	          0x4889c7	                            mov rdi, rax	      2300	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31	CALL_34
0x36cb	      0xe800000000	                          call 0x4003710	      2300	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31	CALL_34
0x36d0	          0x83f801	                              cmp eax, 1	      2300	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31	CALL_34
0x36d3	            0x7528	                           jne 0x400373d	      2300	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31	CALL_34
0x36d5	    0x488b8d60feff	            mov rcx, qword [rbp - 0x1a0]	      2302	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31
0x36dc	    0x8b8550feffff	            mov eax, dword [rbp - 0x1b0]	      2303	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31
0x36e2	          0x8d5001	                      lea edx, [rax + 1]	      2303	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31
0x36e5	    0x899550feffff	            mov dword [rbp - 0x1b0], edx	      2303	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31
0x36eb	            0x4898	                                    cdqe	      2303	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31
0x36ed	        0x48c1e002	                              shl rax, 2	      2303	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31
0x36f1	        0x488d1401	                    lea rdx, [rcx + rax]	      2303	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31
0x36f5	    0x8b0500000000	            mov eax, dword [0x0400373b] 	      2303	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31
0x36fb	            0x8902	                    mov dword [rdx], eax	      2303	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30	IF_31
0x36fd	    0xc70500000000	     mov dword [0x04003747], 0xffffffff 	      2305	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x3707	            0xeb16	                           jmp 0x400375f	      2305	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	IF_30
0x3709	    0x488b85b0fdff	            mov rax, qword [rbp - 0x250]	      2308	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	CALL_35
0x3710	          0x4889c7	                            mov rdi, rax	      2308	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	CALL_35
0x3713	      0xe892060000	                call sym.push_next_match	      2308	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	CALL_35
0x3718	    0x488985b0fdff	            mov qword [rbp - 0x250], rax	      2308	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29	CALL_35
0x371f	    0xc78584fdffff	              mov dword [rbp - 0x27c], 1	      2309	syntax.c	FUNCTION_28	DO_1	ELSE_1	IF_6	IF_14	IF_29
0x3729	    0x488b05000000	            mov rax, qword [0x04003770] 	      2317	syntax.c	FUNCTION_28	DO_1	IF_32
0x3730	          0x4885c0	                           test rax, rax	      2317	syntax.c	FUNCTION_28	DO_1	IF_32
0x3733	     0xf84aa000000	                            je 0x4003823	      2317	syntax.c	FUNCTION_28	DO_1	IF_32
0x3739	    0x83bd8cfdffff	              cmp dword [rbp - 0x274], 0	      2317	syntax.c	FUNCTION_28	DO_1	IF_32
0x3740	     0xf859d000000	                           jne 0x4003823	      2317	syntax.c	FUNCTION_28	DO_1	IF_32
0x3746	    0x83bd84fdffff	              cmp dword [rbp - 0x27c], 0	      2324	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33
0x374d	            0x756c	                           jne 0x40037fb	      2324	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33
0x374f	      0xe8d9200000	                 call sym.syn_getcurline	      2326	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	CALL_36
0x3754	    0x488985c8fdff	            mov qword [rbp - 0x238], rax	      2326	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	CALL_36
0x375b	    0x8b0500000000	            mov eax, dword [0x040037a1] 	      2327	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x3761	      0x2500010000	                          and eax, 0x100	      2327	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x3766	            0x85c0	                           test eax, eax	      2327	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x3768	            0x7434	                            je 0x40037de	      2327	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x376a	    0x8b0500000000	            mov eax, dword [0x040037b0] 	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_37
0x3770	          0x4863d0	                         movsxd rdx, eax	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_37
0x3773	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_37
0x377a	          0x4801d0	                            add rax, rdx	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_37
0x377d	           0xfb600	                   movzx eax, byte [rax]	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_37
0x3780	            0x3c20	                            cmp al, 0x20	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_37
0x3782	            0x746c	                            je 0x4003830	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_37
0x3784	    0x8b0500000000	            mov eax, dword [0x040037ca] 	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_37
0x378a	          0x4863d0	                         movsxd rdx, eax	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_37
0x378d	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_37
0x3794	          0x4801d0	                            add rax, rdx	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_37
0x3797	           0xfb600	                   movzx eax, byte [rax]	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_37
0x379a	            0x3c09	                               cmp al, 9	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_37
0x379c	            0x7452	                            je 0x4003830	      2328	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34	CALL_37
0x379e	    0x8b0500000000	            mov eax, dword [0x040037e4] 	      2329	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x37a4	      0x2500020000	                          and eax, 0x200	      2329	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x37a9	            0x85c0	                           test eax, eax	      2329	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x37ab	            0x740e	                            je 0x40037fb	      2329	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x37ad	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	      2330	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x37b4	           0xfb600	                   movzx eax, byte [rax]	      2330	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x37b7	            0x84c0	                             test al, al	      2330	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x37b9	            0x7435	                            je 0x4003830	      2330	syntax.c	FUNCTION_28	DO_1	IF_32	IF_33	IF_34
0x37bb	    0x48c705000000	               mov qword [0x04003806], 0	      2342	syntax.c	FUNCTION_28	DO_1	IF_32
0x37c6	    0xc70500000000	     mov dword [0x04003810], 0xffffffff 	      2343	syntax.c	FUNCTION_28	DO_1	IF_32
0x37d0	    0x83bd90fdffff	              cmp dword [rbp - 0x270], 0	      2344	syntax.c	FUNCTION_28	DO_1	IF_32	IF_35
0x37d7	            0x750a	                           jne 0x4003823	      2344	syntax.c	FUNCTION_28	DO_1	IF_32	IF_35
0x37d9	    0xc78584fdffff	              mov dword [rbp - 0x27c], 1	      2345	syntax.c	FUNCTION_28	DO_1	IF_32	IF_35
0x37e3	    0x83bd84fdffff	              cmp dword [rbp - 0x27c], 0	      2348	syntax.c	FUNCTION_28	DO_1
0x37ea	     0xf8578f3ffff	                           jne 0x4002ba8	      2348	syntax.c	FUNCTION_28	DO_1
0x37f0	        0x488d45c0	                   lea rax, [rbp - 0x40]	      2350	syntax.c	FUNCTION_28	CALL_38
0x37f4	          0x4889c7	                            mov rdi, rax	      2350	syntax.c	FUNCTION_28	CALL_38
0x37f7	      0xe88fd5ffff	                call sym.restore_chartab	      2350	syntax.c	FUNCTION_28	CALL_38
0x37fc	    0xc70500000000	               mov dword [0x04003846], 0	      2356	syntax.c	FUNCTION_28
0x3806	    0xc70500000000	               mov dword [0x04003850], 0	      2358	syntax.c	FUNCTION_28
0x3810	    0xc70500000000	               mov dword [0x0400385a], 0	      2359	syntax.c	FUNCTION_28
0x381a	    0xc70500000000	               mov dword [0x04003864], 0	      2362	syntax.c	FUNCTION_28
0x3824	    0xc70500000000	               mov dword [0x0400386e], 0	      2363	syntax.c	FUNCTION_28
0x382e	    0x4883bdb0fdff	              cmp qword [rbp - 0x250], 0	      2365	syntax.c	FUNCTION_28	IF_36
0x3836	     0xf8466030000	                            je 0x4003be2	      2365	syntax.c	FUNCTION_28	IF_36
0x383c	    0x8b0500000000	            mov eax, dword [0x04003882] 	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x3842	          0x83e801	                              sub eax, 1	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x3845	    0x898580fdffff	            mov dword [rbp - 0x280], eax	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x384b	      0xe92e010000	                           jmp 0x40039be	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x3850	    0x488b0d000000	            mov rcx, qword [0x04003897] 	      2372	syntax.c	FUNCTION_28	IF_36	FOR_2	CALL_39
0x3857	    0x8b8580fdffff	            mov eax, dword [rbp - 0x280]	      2372	syntax.c	FUNCTION_28	IF_36	FOR_2	CALL_39
0x385d	          0x4863d0	                         movsxd rdx, eax	      2372	syntax.c	FUNCTION_28	IF_36	FOR_2	CALL_39
0x3860	          0x4889d0	                            mov rax, rdx	      2372	syntax.c	FUNCTION_28	IF_36	FOR_2	CALL_39
0x3863	        0x48c1e003	                              shl rax, 3	      2372	syntax.c	FUNCTION_28	IF_36	FOR_2	CALL_39
0x3867	          0x4801d0	                            add rax, rdx	      2372	syntax.c	FUNCTION_28	IF_36	FOR_2	CALL_39
0x386a	        0x48c1e004	                              shl rax, 4	      2372	syntax.c	FUNCTION_28	IF_36	FOR_2	CALL_39
0x386e	          0x4801c8	                            add rax, rcx	      2372	syntax.c	FUNCTION_28	IF_36	FOR_2	CALL_39
0x3871	    0x488985b8fdff	            mov qword [rbp - 0x248], rax	      2372	syntax.c	FUNCTION_28	IF_36	FOR_2	CALL_39
0x3878	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2373	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x387f	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2373	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x3883	    0x488b05000000	            mov rax, qword [0x040038ca] 	      2373	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x388a	          0x4839c2	                            cmp rdx, rax	      2373	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x388d	            0x7c33	                            jl 0x4003902	      2373	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x388f	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2374	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x3896	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2374	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x389a	    0x488b05000000	            mov rax, qword [0x040038e1] 	      2374	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x38a1	          0x4839c2	                            cmp rdx, rax	      2374	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x38a4	     0xf85cd000000	                           jne 0x40039b7	      2374	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x38aa	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2375	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x38b1	          0x8b5030	            mov edx, dword [rax + 0x30] 	      2375	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x38b4	    0x8b0500000000	            mov eax, dword [0x040038fa] 	      2375	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x38ba	            0x39c2	                            cmp edx, eax	      2375	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x38bc	     0xf8fb5000000	                            jg 0x40039b7	      2375	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x38c2	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2376	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x38c9	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2376	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x38cd	          0x4885c0	                           test rax, rax	      2376	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x38d0	            0x7442	                            je 0x4003954	      2376	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x38d2	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2377	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x38d9	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2377	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x38dd	    0x488b05000000	            mov rax, qword [0x04003924] 	      2377	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x38e4	          0x4839c2	                            cmp rdx, rax	      2377	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x38e7	            0x7f2b	                            jg 0x4003954	      2377	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x38e9	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2378	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x38f0	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2378	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x38f4	    0x488b05000000	            mov rax, qword [0x0400393b] 	      2378	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x38fb	          0x4839c2	                            cmp rdx, rax	      2378	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x38fe	            0x7577	                           jne 0x40039b7	      2378	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x3900	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2379	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x3907	          0x8b5040	            mov edx, dword [rax + 0x40] 	      2379	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x390a	    0x8b0500000000	            mov eax, dword [0x04003950] 	      2379	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x3910	            0x39c2	                            cmp edx, eax	      2379	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x3912	            0x7e63	                           jle 0x40039b7	      2379	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x3914	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2381	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x391b	          0x8b4060	            mov eax, dword [rax + 0x60] 	      2381	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x391e	    0x890500000000	            mov dword [0x04003964], eax 	      2381	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x3924	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2383	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x392b	          0x8b4004	                mov eax, dword [rax + 4]	      2383	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x392e	    0x890500000000	            mov dword [0x04003974], eax 	      2383	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x3934	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2385	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x393b	          0x8b4008	                mov eax, dword [rax + 8]	      2385	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x393e	    0x890500000000	            mov dword [0x04003984], eax 	      2385	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x3944	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2387	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x394b	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2387	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x394f	    0x890500000000	            mov dword [0x04003995], eax 	      2387	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x3955	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2388	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x395c	          0x8b4070	            mov eax, dword [rax + 0x70] 	      2388	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x395f	    0x890500000000	            mov dword [0x040039a5], eax 	      2388	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x3965	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2389	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x396c	          0x8b4074	            mov eax, dword [rax + 0x74] 	      2389	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x396f	    0x890500000000	            mov dword [0x040039b5], eax 	      2389	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x3975	            0xeb14	                           jmp 0x40039cb	      2391	syntax.c	FUNCTION_28	IF_36	FOR_2	IF_37
0x3977	    0x83ad80fdffff	              sub dword [rbp - 0x280], 1	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x397e	    0x83bd80fdffff	              cmp dword [rbp - 0x280], 0	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x3985	     0xf89c5feffff	                           jns 0x4003890	      2370	syntax.c	FUNCTION_28	IF_36	FOR_2
0x398b	    0x4883bd60fdff	              cmp qword [rbp - 0x2a0], 0	      2395	syntax.c	FUNCTION_28	IF_36	IF_38
0x3993	     0xf849d010000	                            je 0x4003b76	      2395	syntax.c	FUNCTION_28	IF_36	IF_38
0x3999	    0x488b05000000	            mov rax, qword [0x040039e0] 	      2403	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39
0x39a0	    0x8b8090020000	           mov eax, dword [rax + 0x290] 	      2403	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39
0x39a6	            0x85c0	                           test eax, eax	      2403	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39
0x39a8	     0xf85a4000000	                           jne 0x4003a92	      2403	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39
0x39ae	    0x488b05000000	            mov rax, qword [0x040039f5] 	      2407	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x39b5	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      2407	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x39bb	            0x85c0	                           test eax, eax	      2407	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x39bd	            0x740a	                            je 0x4003a09	      2407	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x39bf	    0x8b0500000000	            mov eax, dword [0x04003a05] 	      2408	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x39c5	            0x85c0	                           test eax, eax	      2408	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x39c7	            0x7524	                           jne 0x4003a2d	      2408	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x39c9	    0x488b05000000	            mov rax, qword [0x04003a10] 	      2409	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x39d0	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	      2409	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x39d6	          0x83f802	                              cmp eax, 2	      2409	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x39d9	           0xf95c0	                                setne al	      2409	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x39dc	           0xfb6d0	                           movzx edx, al	      2409	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x39df	    0x488b8560fdff	            mov rax, qword [rbp - 0x2a0]	      2409	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x39e6	            0x8910	                    mov dword [rax], edx	      2409	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x39e8	      0xe949010000	                           jmp 0x4003b76	      2409	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	IF_40
0x39ed	    0xc78540feffff	              mov dword [rbp - 0x1c0], 0	      2412	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7
0x39f7	    0x488b05000000	            mov rax, qword [0x04003a3e] 	      2413	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7
0x39fe	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      2413	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7
0x3a04	    0x66898544feff	              mov word [rbp - 0x1bc], ax	      2413	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7
0x3a0b	    0x48c78548feff	              mov qword [rbp - 0x1b8], 0	      2414	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7
0x3a16	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_40
0x3a1d	        0x488b7078	            mov rsi, qword [rax + 0x78] 	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_40
0x3a21	    0x488d9540feff	                  lea rdx, [rbp - 0x1c0]	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_40
0x3a28	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_40
0x3a2f	      0xb900000000	                              mov ecx, 0	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_40
0x3a34	          0x4889c7	                            mov rdi, rax	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_40
0x3a37	      0xe825880000	                     call sym.in_id_list	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_40
0x3a3c	            0x85c0	                           test eax, eax	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_40
0x3a3e	           0xf94c0	                                 sete al	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_40
0x3a41	           0xfb6d0	                           movzx edx, al	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_40
0x3a44	    0x488b8560fdff	            mov rax, qword [rbp - 0x2a0]	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_40
0x3a4b	            0x8910	                    mov dword [rax], edx	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_40
0x3a4d	      0xe9e4000000	                           jmp 0x4003b76	      2415	syntax.c	FUNCTION_28	IF_36	IF_38	IF_39	ELSE_7	CALL_40
0x3a52	    0x8b0500000000	            mov eax, dword [0x04003a98] 	      2424	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x3a58	            0x85c0	                           test eax, eax	      2424	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x3a5a	            0x7524	                           jne 0x4003ac0	      2424	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x3a5c	    0x488b05000000	            mov rax, qword [0x04003aa3] 	      2425	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x3a63	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	      2425	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x3a69	          0x83f801	                              cmp eax, 1	      2425	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x3a6c	           0xf94c0	                                 sete al	      2425	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x3a6f	           0xfb6d0	                           movzx edx, al	      2425	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x3a72	    0x488b8560fdff	            mov rax, qword [rbp - 0x2a0]	      2425	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x3a79	            0x8910	                    mov dword [rax], edx	      2425	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x3a7b	      0xe9b6000000	                           jmp 0x4003b76	      2425	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	IF_41
0x3a80	    0xc78540feffff	              mov dword [rbp - 0x1c0], 0	      2428	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9
0x3a8a	    0x488b05000000	            mov rax, qword [0x04003ad1] 	      2429	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9
0x3a91	    0x8b8090020000	           mov eax, dword [rax + 0x290] 	      2429	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9
0x3a97	    0x66898544feff	              mov word [rbp - 0x1bc], ax	      2429	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9
0x3a9e	    0x48c78548feff	              mov qword [rbp - 0x1b8], 0	      2430	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9
0x3aa9	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2431	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	CALL_41
0x3ab0	        0x488b7078	            mov rsi, qword [rax + 0x78] 	      2431	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	CALL_41
0x3ab4	    0x488d9540feff	                  lea rdx, [rbp - 0x1c0]	      2431	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	CALL_41
0x3abb	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2431	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	CALL_41
0x3ac2	      0xb900000000	                              mov ecx, 0	      2431	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	CALL_41
0x3ac7	          0x4889c7	                            mov rdi, rax	      2431	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	CALL_41
0x3aca	      0xe892870000	                     call sym.in_id_list	      2431	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	CALL_41
0x3acf	            0x89c2	                            mov edx, eax	      2431	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	CALL_41
0x3ad1	    0x488b8560fdff	            mov rax, qword [rbp - 0x2a0]	      2431	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	CALL_41
0x3ad8	            0x8910	                    mov dword [rax], edx	      2431	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	CALL_41
0x3ada	    0x488b05000000	            mov rax, qword [0x04003b21] 	      2433	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42
0x3ae1	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      2433	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42
0x3ae7	            0x85c0	                           test eax, eax	      2433	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42
0x3ae9	            0x744b	                            je 0x4003b76	      2433	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42
0x3aeb	    0x488b05000000	            mov rax, qword [0x04003b32] 	      2435	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42
0x3af2	    0x8b8094020000	           mov eax, dword [rax + 0x294] 	      2435	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42
0x3af8	    0x66898544feff	              mov word [rbp - 0x1bc], ax	      2435	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42
0x3aff	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2436	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43	CALL_42
0x3b06	        0x488b7078	            mov rsi, qword [rax + 0x78] 	      2436	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43	CALL_42
0x3b0a	    0x488d9540feff	                  lea rdx, [rbp - 0x1c0]	      2436	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43	CALL_42
0x3b11	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	      2436	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43	CALL_42
0x3b18	      0xb900000000	                              mov ecx, 0	      2436	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43	CALL_42
0x3b1d	          0x4889c7	                            mov rdi, rax	      2436	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43	CALL_42
0x3b20	      0xe83c870000	                     call sym.in_id_list	      2436	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43	CALL_42
0x3b25	            0x85c0	                           test eax, eax	      2436	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43	CALL_42
0x3b27	            0x740d	                            je 0x4003b76	      2436	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43	CALL_42
0x3b29	    0x488b8560fdff	            mov rax, qword [rbp - 0x2a0]	      2437	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43
0x3b30	    0xc70000000000	                      mov dword [rax], 0	      2437	syntax.c	FUNCTION_28	IF_36	IF_38	ELSE_8	ELSE_9	IF_42	IF_43
0x3b36	    0x83bd6cfdffff	              cmp dword [rbp - 0x294], 0	      2452	syntax.c	FUNCTION_28	IF_36	IF_44
0x3b3d	     0xf85b0000000	                           jne 0x4003c33	      2452	syntax.c	FUNCTION_28	IF_36	IF_44
0x3b43	    0x83bd5cfdffff	              cmp dword [rbp - 0x2a4], 0	      2452	syntax.c	FUNCTION_28	IF_36	IF_44
0x3b4a	     0xf85a3000000	                           jne 0x4003c33	      2452	syntax.c	FUNCTION_28	IF_36	IF_44
0x3b50	      0xe843060000	               call sym.check_state_ends	      2454	syntax.c	FUNCTION_28	IF_36	IF_44	CALL_43
0x3b55	    0x8b0500000000	            mov eax, dword [0x04003b9b] 	      2455	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45
0x3b5b	            0x85c0	                           test eax, eax	      2455	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45
0x3b5d	     0xf8e90000000	                           jle 0x4003c33	      2455	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45
0x3b63	      0xe8c51c0000	                 call sym.syn_getcurline	      2456	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45	CALL_44
0x3b68	          0x4889c2	                            mov rdx, rax	      2456	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45	CALL_44
0x3b6b	    0x8b0500000000	            mov eax, dword [0x04003bb1] 	      2456	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45	CALL_44
0x3b71	            0x4898	                                    cdqe	      2456	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45	CALL_44
0x3b73	          0x4801d0	                            add rax, rdx	      2456	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45	CALL_44
0x3b76	           0xfb600	                   movzx eax, byte [rax]	      2456	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45	CALL_44
0x3b79	            0x84c0	                             test al, al	      2456	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45	CALL_44
0x3b7b	            0x7476	                            je 0x4003c33	      2456	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45	CALL_44
0x3b7d	    0x8b0500000000	            mov eax, dword [0x04003bc3] 	      2458	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45
0x3b83	          0x83c001	                              add eax, 1	      2458	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45
0x3b86	    0x890500000000	            mov dword [0x04003bcc], eax 	      2458	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45
0x3b8c	      0xe807060000	               call sym.check_state_ends	      2459	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45	CALL_45
0x3b91	    0x8b0500000000	            mov eax, dword [0x04003bd7] 	      2460	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45
0x3b97	          0x83e801	                              sub eax, 1	      2460	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45
0x3b9a	    0x890500000000	            mov dword [0x04003be0], eax 	      2460	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45
0x3ba0	            0xeb51	                           jmp 0x4003c33	      2460	syntax.c	FUNCTION_28	IF_36	IF_44	IF_45
0x3ba2	    0x4883bd60fdff	              cmp qword [rbp - 0x2a0], 0	      2464	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x3baa	            0x7447	                            je 0x4003c33	      2464	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x3bac	    0x488b05000000	            mov rax, qword [0x04003bf3] 	      2467	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x3bb3	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	      2467	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x3bb9	            0x85c0	                           test eax, eax	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x3bbb	            0x7517	                           jne 0x4003c14	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x3bbd	    0x488b05000000	            mov rax, qword [0x04003c04] 	      2468	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x3bc4	    0x8b8090020000	           mov eax, dword [rax + 0x290] 	      2468	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x3bca	            0x85c0	                           test eax, eax	      2468	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x3bcc	           0xf94c0	                                 sete al	      2468	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x3bcf	           0xfb6c0	                           movzx eax, al	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x3bd2	            0xeb16	                           jmp 0x4003c2a	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x3bd4	    0x488b05000000	            mov rax, qword [0x04003c1b] 	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x3bdb	    0x8b805c020000	           mov eax, dword [rax + 0x25c] 	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x3be1	          0x83f801	                              cmp eax, 1	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x3be4	           0xf94c0	                                 sete al	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x3be7	           0xfb6c0	                           movzx eax, al	      2469	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x3bea	    0x488b9560fdff	            mov rdx, qword [rbp - 0x2a0]	      2467	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x3bf1	            0x8902	                    mov dword [rdx], eax	      2467	syntax.c	FUNCTION_28	ELSE_10	IF_46
0x3bf3	    0x488b05000000	            mov rax, qword [0x04003c3a] 	      2472	syntax.c	FUNCTION_28	IF_47
0x3bfa	          0x4885c0	                           test rax, rax	      2472	syntax.c	FUNCTION_28	IF_47
0x3bfd	            0x745d	                            je 0x4003c9c	      2472	syntax.c	FUNCTION_28	IF_47
0x3bff	      0xe8291c0000	                 call sym.syn_getcurline	      2473	syntax.c	FUNCTION_28	IF_47	CALL_46
0x3c04	    0x488985c8fdff	            mov qword [rbp - 0x238], rax	      2473	syntax.c	FUNCTION_28	IF_47	CALL_46
0x3c0b	    0x8b0500000000	            mov eax, dword [0x04003c51] 	      2473	syntax.c	FUNCTION_28	IF_47	CALL_46
0x3c11	          0x4863d0	                         movsxd rdx, eax	      2473	syntax.c	FUNCTION_28	IF_47	CALL_46
0x3c14	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	      2473	syntax.c	FUNCTION_28	IF_47	CALL_46
0x3c1b	          0x4801d0	                            add rax, rdx	      2473	syntax.c	FUNCTION_28	IF_47	CALL_46
0x3c1e	           0xfb600	                   movzx eax, byte [rax]	      2473	syntax.c	FUNCTION_28	IF_47	CALL_46
0x3c21	            0x84c0	                             test al, al	      2473	syntax.c	FUNCTION_28	IF_47	CALL_46
0x3c23	            0x7437	                            je 0x4003c9c	      2473	syntax.c	FUNCTION_28	IF_47	CALL_46
0x3c25	    0x8b0500000000	            mov eax, dword [0x04003c6b] 	      2474	syntax.c	FUNCTION_28	IF_47
0x3c2b	            0x4898	                                    cdqe	      2474	syntax.c	FUNCTION_28	IF_47
0x3c2d	        0x488d5001	                      lea rdx, [rax + 1]	      2474	syntax.c	FUNCTION_28	IF_47
0x3c31	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	      2474	syntax.c	FUNCTION_28	IF_47
0x3c38	          0x4801d0	                            add rax, rdx	      2474	syntax.c	FUNCTION_28	IF_47
0x3c3b	           0xfb600	                   movzx eax, byte [rax]	      2474	syntax.c	FUNCTION_28	IF_47
0x3c3e	            0x84c0	                             test al, al	      2474	syntax.c	FUNCTION_28	IF_47
0x3c40	            0x751a	                           jne 0x4003c9c	      2474	syntax.c	FUNCTION_28	IF_47
0x3c42	    0x8b0500000000	            mov eax, dword [0x04003c88] 	      2475	syntax.c	FUNCTION_28	IF_47
0x3c48	      0x2580020000	                          and eax, 0x280	      2475	syntax.c	FUNCTION_28	IF_47
0x3c4d	            0x85c0	                           test eax, eax	      2475	syntax.c	FUNCTION_28	IF_47
0x3c4f	            0x750b	                           jne 0x4003c9c	      2475	syntax.c	FUNCTION_28	IF_47
0x3c51	    0x48c705000000	               mov qword [0x04003c9c], 0	      2476	syntax.c	FUNCTION_28	IF_47
0x3c5c	    0x8b8550feffff	            mov eax, dword [rbp - 0x1b0]	      2478	syntax.c	FUNCTION_28	IF_48
0x3c62	            0x85c0	                           test eax, eax	      2478	syntax.c	FUNCTION_28	IF_48
0x3c64	            0x7e0f	                           jle 0x4003cb5	      2478	syntax.c	FUNCTION_28	IF_48
0x3c66	    0x488d8550feff	                  lea rax, [rbp - 0x1b0]	      2479	syntax.c	FUNCTION_28	CALL_47
0x3c6d	          0x4889c7	                            mov rdi, rax	      2479	syntax.c	FUNCTION_28	CALL_47
0x3c70	      0xe800000000	                          call 0x4003cb5	      2479	syntax.c	FUNCTION_28	CALL_47
0x3c75	    0x488b05000000	            mov rax, qword [0x04003cbc] 	      2482	syntax.c	FUNCTION_28	CALL_48
0x3c7c	          0x4889c7	                            mov rdi, rax	      2482	syntax.c	FUNCTION_28	CALL_48
0x3c7f	      0xe800000000	                          call 0x4003cc4	      2482	syntax.c	FUNCTION_28	CALL_48
0x3c84	    0x48c705000000	               mov qword [0x04003ccf], 0	      2483	syntax.c	FUNCTION_28
0x3c8f	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	      2484	syntax.c	FUNCTION_28	CALL_49
0x3c96	          0x4889c7	                            mov rdi, rax	      2484	syntax.c	FUNCTION_28	CALL_49
0x3c99	      0xe800000000	                          call 0x4003cde	      2484	syntax.c	FUNCTION_28	CALL_49
0x3c9e	    0x8b0500000000	            mov eax, dword [0x04003ce4] 	      2486	syntax.c	FUNCTION_28
0x3ca4	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2487	syntax.c	FUNCTION_28
0x3ca8	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2487	syntax.c	FUNCTION_28
0x3cb1	            0x7405	                            je 0x4003cf8	      2487	syntax.c	FUNCTION_28
0x3cb3	      0xe800000000	                          call 0x4003cf8	      2487	syntax.c	FUNCTION_28
0x3cb8	        0x488d65f0	                   lea rsp, [rbp - 0x10]	      2487	syntax.c	FUNCTION_28
0x3cbc	              0x5b	                                 pop rbx	      2487	syntax.c	FUNCTION_28
0x3cbd	            0x415c	                                 pop r12	      2487	syntax.c	FUNCTION_28
0x3cbf	              0x5d	                                 pop rbp	      2487	syntax.c	FUNCTION_28
0x3cc0	              0xc3	                                     ret	      2487	syntax.c	FUNCTION_28
invalidate_current_state	FOR,0:DO,0:IF,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,1	9
0x26a6	              0x55	                                push rbp	      1730	syntax.c	FUNCTION_23
0x26a7	          0x4889e5	                            mov rbp, rsp	      1730	syntax.c	FUNCTION_23
0x26aa	      0xe8c3deffff	            call sym.clear_current_state	      1731	syntax.c	FUNCTION_23	CALL_1
0x26af	    0xc70500000000	               mov dword [0x040026f9], 0	      1732	syntax.c	FUNCTION_23
0x26b9	    0x48c705000000	               mov qword [0x04002704], 0	      1733	syntax.c	FUNCTION_23
0x26c4	    0xc70500000000	     mov dword [0x0400270e], 0xffffffff 	      1734	syntax.c	FUNCTION_23
0x26ce	              0x90	                                     nop	      1735	syntax.c	FUNCTION_23
0x26cf	              0x5d	                                 pop rbp	      1735	syntax.c	FUNCTION_23
0x26d0	              0xc3	                                     ret	      1735	syntax.c	FUNCTION_23
check_keyword_id	FOR,2:DO,1:IF,6:SWITCH,0:functions,0:ELSE,1:WHILE,0:CALL,8	169
0x59e5	              0x55	                                push rbp	      3379	syntax.c	FUNCTION_44
0x59e6	          0x4889e5	                            mov rbp, rsp	      3379	syntax.c	FUNCTION_44
0x59e9	    0x4881ecd00000	                           sub rsp, 0xd0	      3379	syntax.c	FUNCTION_44
0x59f0	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      3379	syntax.c	FUNCTION_44
0x59f7	    0x89b564ffffff	             mov dword [rbp - 0x9c], esi	      3379	syntax.c	FUNCTION_44
0x59fd	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	      3379	syntax.c	FUNCTION_44
0x5a04	    0x48898d50ffff	             mov qword [rbp - 0xb0], rcx	      3379	syntax.c	FUNCTION_44
0x5a0b	    0x4c898548ffff	              mov qword [rbp - 0xb8], r8	      3379	syntax.c	FUNCTION_44
0x5a12	    0x4c898d40ffff	              mov qword [rbp - 0xc0], r9	      3379	syntax.c	FUNCTION_44
0x5a19	        0x488b4510	            mov rax, qword [rbp + 0x10] 	      3379	syntax.c	FUNCTION_44
0x5a1d	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      3379	syntax.c	FUNCTION_44
0x5a24	    0x64488b042528	                mov rax, qword fs:[0x28]	      3379	syntax.c	FUNCTION_44
0x5a2d	        0x488945f8	                mov qword [rbp - 8], rax	      3379	syntax.c	FUNCTION_44
0x5a31	            0x31c0	                            xor eax, eax	      3379	syntax.c	FUNCTION_44
0x5a33	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      3390	syntax.c	FUNCTION_44
0x5a39	          0x4863d0	                         movsxd rdx, eax	      3390	syntax.c	FUNCTION_44
0x5a3c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      3390	syntax.c	FUNCTION_44
0x5a43	          0x4801d0	                            add rax, rdx	      3390	syntax.c	FUNCTION_44
0x5a46	        0x48894588	             mov qword [rbp - 0x78], rax	      3390	syntax.c	FUNCTION_44
0x5a4a	    0xc7857cffffff	               mov dword [rbp - 0x84], 0	      3391	syntax.c	FUNCTION_44
0x5a54	    0x8b0500000000	            mov eax, dword [0x04005a9a] 	      3395	syntax.c	FUNCTION_44	DO_1	IF_1
0x5a5a	            0x85c0	                           test eax, eax	      3395	syntax.c	FUNCTION_44	DO_1	IF_1
0x5a5c	            0x7424	                            je 0x4005ac2	      3395	syntax.c	FUNCTION_44	DO_1	IF_1
0x5a5e	    0x488b05000000	            mov rax, qword [0x04005aa5] 	      3396	syntax.c	FUNCTION_44	DO_1	IF_1
0x5a65	    0x8b957cffffff	             mov edx, dword [rbp - 0x84]	      3396	syntax.c	FUNCTION_44	DO_1	IF_1
0x5a6b	          0x4863ca	                         movsxd rcx, edx	      3396	syntax.c	FUNCTION_44	DO_1	IF_1
0x5a6e	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      3396	syntax.c	FUNCTION_44	DO_1	IF_1
0x5a72	          0x4801ca	                            add rdx, rcx	      3396	syntax.c	FUNCTION_44	DO_1	IF_1
0x5a75	          0x4889d7	                            mov rdi, rdx	      3396	syntax.c	FUNCTION_44	DO_1	IF_1
0x5a78	            0xffd0	                                call rax	      3396	syntax.c	FUNCTION_44	DO_1	IF_1
0x5a7a	     0x1857cffffff	             add dword [rbp - 0x84], eax	      3396	syntax.c	FUNCTION_44	DO_1	IF_1
0x5a80	            0xeb07	                           jmp 0x4005ac9	      3396	syntax.c	FUNCTION_44	DO_1	IF_1
0x5a82	    0x83857cffffff	               add dword [rbp - 0x84], 1	      3399	syntax.c	FUNCTION_44	DO_1	ELSE_1
0x5a89	    0x488b05000000	            mov rax, qword [0x04005ad0] 	      3401	syntax.c	FUNCTION_44	CALL_1
0x5a90	    0x8b957cffffff	             mov edx, dword [rbp - 0x84]	      3401	syntax.c	FUNCTION_44	CALL_1
0x5a96	          0x4863ca	                         movsxd rcx, edx	      3401	syntax.c	FUNCTION_44	CALL_1
0x5a99	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      3401	syntax.c	FUNCTION_44	CALL_1
0x5a9d	          0x4801ca	                            add rdx, rcx	      3401	syntax.c	FUNCTION_44	CALL_1
0x5aa0	          0x4889c6	                            mov rsi, rax	      3401	syntax.c	FUNCTION_44	CALL_1
0x5aa3	          0x4889d7	                            mov rdi, rdx	      3401	syntax.c	FUNCTION_44	CALL_1
0x5aa6	      0xe800000000	                          call 0x4005aeb	      3401	syntax.c	FUNCTION_44	CALL_1
0x5aab	            0x85c0	                           test eax, eax	      3401	syntax.c	FUNCTION_44	CALL_1
0x5aad	            0x75a5	                           jne 0x4005a94	      3401	syntax.c	FUNCTION_44	CALL_1
0x5aaf	    0x83bd7cffffff	           cmp dword [rbp - 0x84], 0x50 	      3403	syntax.c	FUNCTION_44	IF_2
0x5ab6	            0x7e0a	                           jle 0x4005b02	      3403	syntax.c	FUNCTION_44	IF_2
0x5ab8	      0xb800000000	                              mov eax, 0	      3404	syntax.c	FUNCTION_44	IF_2
0x5abd	      0xe9e4010000	                           jmp 0x4005ce6	      3404	syntax.c	FUNCTION_44	IF_2
0x5ac2	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      3410	syntax.c	FUNCTION_44	CALL_2
0x5ac8	          0x4863d0	                         movsxd rdx, eax	      3410	syntax.c	FUNCTION_44	CALL_2
0x5acb	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      3410	syntax.c	FUNCTION_44	CALL_2
0x5acf	        0x488d45a0	                   lea rax, [rbp - 0x60]	      3410	syntax.c	FUNCTION_44	CALL_2
0x5ad3	          0x4889ce	                            mov rsi, rcx	      3410	syntax.c	FUNCTION_44	CALL_2
0x5ad6	          0x4889c7	                            mov rdi, rax	      3410	syntax.c	FUNCTION_44	CALL_2
0x5ad9	      0xe800000000	                          call 0x4005b1e	      3410	syntax.c	FUNCTION_44	CALL_2
0x5ade	    0xc78578ffffff	               mov dword [rbp - 0x88], 1	      3417	syntax.c	FUNCTION_44	FOR_1
0x5ae8	      0xe9a7010000	                           jmp 0x4005cd4	      3417	syntax.c	FUNCTION_44	FOR_1
0x5aed	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 1	      3419	syntax.c	FUNCTION_44	FOR_1
0x5af4	            0x7509	                           jne 0x4005b3f	      3419	syntax.c	FUNCTION_44	FOR_1
0x5af6	    0x488b05000000	            mov rax, qword [0x04005b3d] 	      3419	syntax.c	FUNCTION_44	FOR_1
0x5afd	            0xeb0d	                           jmp 0x4005b4c	      3419	syntax.c	FUNCTION_44	FOR_1
0x5aff	    0x488b05000000	            mov rax, qword [0x04005b46] 	      3419	syntax.c	FUNCTION_44	FOR_1
0x5b06	    0x480528010000	                          add rax, 0x128	      3419	syntax.c	FUNCTION_44	FOR_1
0x5b0c	        0x48894590	             mov qword [rbp - 0x70], rax	      3419	syntax.c	FUNCTION_44	FOR_1
0x5b10	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3420	syntax.c	FUNCTION_44	FOR_1	IF_3
0x5b14	        0x488b4008	                mov rax, qword [rax + 8]	      3420	syntax.c	FUNCTION_44	FOR_1	IF_3
0x5b18	          0x4885c0	                           test rax, rax	      3420	syntax.c	FUNCTION_44	FOR_1	IF_3
0x5b1b	     0xf846b010000	                            je 0x4005ccc	      3420	syntax.c	FUNCTION_44	FOR_1	IF_3
0x5b21	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 2	      3422	syntax.c	FUNCTION_44	FOR_1	IF_4
0x5b28	            0x751b	                           jne 0x4005b85	      3422	syntax.c	FUNCTION_44	FOR_1	IF_4
0x5b2a	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      3423	syntax.c	FUNCTION_44	FOR_1	CALL_3
0x5b2e	    0x8bb57cffffff	             mov esi, dword [rbp - 0x84]	      3423	syntax.c	FUNCTION_44	FOR_1	CALL_3
0x5b34	        0x488b4588	             mov rax, qword [rbp - 0x78]	      3423	syntax.c	FUNCTION_44	FOR_1	CALL_3
0x5b38	      0xb951000000	                           mov ecx, 0x51	      3423	syntax.c	FUNCTION_44	FOR_1	CALL_3
0x5b3d	          0x4889c7	                            mov rdi, rax	      3423	syntax.c	FUNCTION_44	FOR_1	CALL_3
0x5b40	      0xe800000000	                          call 0x4005b85	      3423	syntax.c	FUNCTION_44	FOR_1	CALL_3
0x5b45	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      3432	syntax.c	FUNCTION_44	FOR_1	CALL_4
0x5b49	        0x488b4590	             mov rax, qword [rbp - 0x70]	      3432	syntax.c	FUNCTION_44	FOR_1	CALL_4
0x5b4d	          0x4889d6	                            mov rsi, rdx	      3432	syntax.c	FUNCTION_44	FOR_1	CALL_4
0x5b50	          0x4889c7	                            mov rdi, rax	      3432	syntax.c	FUNCTION_44	FOR_1	CALL_4
0x5b53	      0xe800000000	                          call 0x4005b98	      3432	syntax.c	FUNCTION_44	FOR_1	CALL_4
0x5b58	        0x48894598	             mov qword [rbp - 0x68], rax	      3432	syntax.c	FUNCTION_44	FOR_1	CALL_4
0x5b5c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x5b60	        0x488b4008	                mov rax, qword [rax + 8]	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x5b64	          0x4885c0	                           test rax, rax	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x5b67	     0xf8420010000	                            je 0x4005ccd	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x5b6d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x5b71	        0x488b4008	                mov rax, qword [rax + 8]	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x5b75	    0x483d00000000	                              cmp rax, 0	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x5b7b	     0xf840c010000	                            je 0x4005ccd	      3433	syntax.c	FUNCTION_44	FOR_1	IF_5	CALL_5
0x5b81	        0x488b4598	             mov rax, qword [rbp - 0x68]	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	CALL_6
0x5b85	        0x488b4008	                mov rax, qword [rax + 8]	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	CALL_6
0x5b89	        0x4883e828	                           sub rax, 0x28	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	CALL_6
0x5b8d	        0x48894580	             mov qword [rbp - 0x80], rax	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	CALL_6
0x5b91	      0xe9e9000000	                           jmp 0x4005cbf	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	CALL_6
0x5b96	    0x488b05000000	            mov rax, qword [0x04005bdd] 	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5b9d	          0x4885c0	                           test rax, rax	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5ba0	            0x7428	                            je 0x4005c0a	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5ba2	        0x488b4580	             mov rax, qword [rbp - 0x80]	      3437	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_7
0x5ba6	        0x488d5008	                      lea rdx, [rax + 8]	      3437	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_7
0x5baa	    0x488b05000000	            mov rax, qword [0x04005bf1] 	      3437	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_7
0x5bb1	      0xb900000000	                              mov ecx, 0	      3437	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_7
0x5bb6	          0x4889c6	                            mov rsi, rax	      3437	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_7
0x5bb9	      0xbf00000000	                              mov edi, 0	      3437	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_7
0x5bbe	      0xe89e660000	                     call sym.in_id_list	      3437	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_7
0x5bc3	            0x85c0	                           test eax, eax	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5bc5	           0xf95c0	                                setne al	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5bc8	            0xeb4e	                           jmp 0x4005c58	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5bca	    0x4883bd40ffff	               cmp qword [rbp - 0xc0], 0	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5bd2	            0x7511	                           jne 0x4005c25	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5bd4	        0x488b4580	             mov rax, qword [rbp - 0x80]	      3439	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5bd8	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3439	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5bdb	          0x83e001	                              and eax, 1	      3439	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5bde	            0x85c0	                           test eax, eax	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5be0	           0xf94c0	                                 sete al	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5be3	            0xeb33	                           jmp 0x4005c58	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5be5	        0x488b4580	             mov rax, qword [rbp - 0x80]	      3441	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5be9	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3441	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5bec	          0x83e001	                              and eax, 1	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_8
0x5bef	            0x89c1	                            mov ecx, eax	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_8
0x5bf1	        0x488b4580	             mov rax, qword [rbp - 0x80]	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_8
0x5bf5	        0x488d5008	                      lea rdx, [rax + 8]	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_8
0x5bf9	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_8
0x5c00	        0x488b7078	            mov rsi, qword [rax + 0x78] 	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_8
0x5c04	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_8
0x5c0b	          0x4889c7	                            mov rdi, rax	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_8
0x5c0e	      0xe84e660000	                     call sym.in_id_list	      3440	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6	CALL_8
0x5c13	            0x85c0	                           test eax, eax	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5c15	           0xf95c0	                                setne al	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5c18	            0x84c0	                             test al, al	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5c1a	            0x7458	                            je 0x4005cb4	      3436	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5c1c	    0x8b9564ffffff	             mov edx, dword [rbp - 0x9c]	      3443	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5c22	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      3443	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5c28	             0x1c2	                            add edx, eax	      3443	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5c2a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3443	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5c31	            0x8910	                    mov dword [rax], edx	      3443	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5c33	        0x488b4580	             mov rax, qword [rbp - 0x80]	      3444	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5c37	          0x8b4020	            mov eax, dword [rax + 0x20] 	      3444	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5c3a	          0x4863d0	                         movsxd rdx, eax	      3444	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5c3d	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      3444	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5c44	          0x488910	                    mov qword [rax], rdx	      3444	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5c47	        0x488b4580	             mov rax, qword [rbp - 0x80]	      3445	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5c4b	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      3445	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5c4f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3445	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5c56	          0x488910	                    mov qword [rax], rdx	      3445	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5c59	        0x488b4580	             mov rax, qword [rbp - 0x80]	      3447	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5c5d	          0x8b5024	            mov edx, dword [rax + 0x24] 	      3447	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5c60	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      3447	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5c67	            0x8910	                    mov dword [rax], edx	      3447	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5c69	        0x488b4580	             mov rax, qword [rbp - 0x80]	      3449	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5c6d	         0xfb7400c	            movzx eax, word [rax + 0xc] 	      3449	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5c71	              0x98	                                    cwde	      3449	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5c72	            0xeb32	                           jmp 0x4005ce6	      3449	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	IF_6
0x5c74	        0x488b4580	             mov rax, qword [rbp - 0x80]	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	CALL_6
0x5c78	          0x488b00	                    mov rax, qword [rax]	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	CALL_6
0x5c7b	        0x48894580	             mov qword [rbp - 0x80], rax	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	CALL_6
0x5c7f	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	CALL_6
0x5c84	     0xf850cffffff	                           jne 0x4005bd6	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	CALL_6
0x5c8a	            0xeb01	                           jmp 0x4005ccd	      3434	syntax.c	FUNCTION_44	FOR_1	IF_5	FOR_2	CALL_6
0x5c8c	              0x90	                                     nop	      3421	syntax.c	FUNCTION_44	FOR_1	IF_3
0x5c8d	    0x838578ffffff	               add dword [rbp - 0x88], 1	      3417	syntax.c	FUNCTION_44	FOR_1
0x5c94	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 2	      3417	syntax.c	FUNCTION_44	FOR_1
0x5c9b	     0xf8e4cfeffff	                           jle 0x4005b2d	      3417	syntax.c	FUNCTION_44	FOR_1
0x5ca1	      0xb800000000	                              mov eax, 0	      3453	syntax.c	FUNCTION_44
0x5ca6	        0x488b7df8	                mov rdi, qword [rbp - 8]	      3454	syntax.c	FUNCTION_44
0x5caa	    0x6448333c2528	                xor rdi, qword fs:[0x28]	      3454	syntax.c	FUNCTION_44
0x5cb3	            0x7405	                            je 0x4005cfa	      3454	syntax.c	FUNCTION_44
0x5cb5	      0xe800000000	                          call 0x4005cfa	      3454	syntax.c	FUNCTION_44
0x5cba	              0xc9	                                   leave	      3454	syntax.c	FUNCTION_44
0x5cbb	              0xc3	                                     ret	      3454	syntax.c	FUNCTION_44
set_hl_attr	FOR,0:DO,0:IF,8:SWITCH,0:functions,0:ELSE,3:WHILE,0:CALL,9	192
0x12a7a	              0x55	                                push rbp	      9526	syntax.c	FUNCTION_147
0x12a7b	          0x4889e5	                            mov rbp, rsp	      9526	syntax.c	FUNCTION_147
0x12a7e	        0x4883ec50	                           sub rsp, 0x50	      9526	syntax.c	FUNCTION_147
0x12a82	          0x897dbc	             mov dword [rbp - 0x44], edi	      9526	syntax.c	FUNCTION_147
0x12a85	    0x64488b042528	                mov rax, qword fs:[0x28]	      9526	syntax.c	FUNCTION_147
0x12a8e	        0x488945f8	                mov qword [rbp - 8], rax	      9526	syntax.c	FUNCTION_147
0x12a92	            0x31c0	                            xor eax, eax	      9526	syntax.c	FUNCTION_147
0x12a94	    0x488b0d000000	            mov rcx, qword [0x04012adb] 	      9528	syntax.c	FUNCTION_147	CALL_1
0x12a9b	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      9528	syntax.c	FUNCTION_147	CALL_1
0x12a9e	          0x4863d0	                         movsxd rdx, eax	      9528	syntax.c	FUNCTION_147	CALL_1
0x12aa1	          0x4889d0	                            mov rax, rdx	      9528	syntax.c	FUNCTION_147	CALL_1
0x12aa4	        0x48c1e003	                              shl rax, 3	      9528	syntax.c	FUNCTION_147	CALL_1
0x12aa8	          0x4801d0	                            add rax, rdx	      9528	syntax.c	FUNCTION_147	CALL_1
0x12aab	          0x4801c0	                            add rax, rax	      9528	syntax.c	FUNCTION_147	CALL_1
0x12aae	          0x4801d0	                            add rax, rdx	      9528	syntax.c	FUNCTION_147	CALL_1
0x12ab1	        0x48c1e003	                              shl rax, 3	      9528	syntax.c	FUNCTION_147	CALL_1
0x12ab5	          0x4801c8	                            add rax, rcx	      9528	syntax.c	FUNCTION_147	CALL_1
0x12ab8	        0x488945c8	             mov qword [rbp - 0x38], rax	      9528	syntax.c	FUNCTION_147	CALL_1
0x12abc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9531	syntax.c	FUNCTION_147	IF_1	CALL_2
0x12ac0	        0x488b4008	                mov rax, qword [rax + 8]	      9531	syntax.c	FUNCTION_147	IF_1	CALL_2
0x12ac4	          0x4885c0	                           test rax, rax	      9531	syntax.c	FUNCTION_147	IF_1	CALL_2
0x12ac7	            0x741d	                            je 0x4012b26	      9531	syntax.c	FUNCTION_147	IF_1	CALL_2
0x12ac9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9531	syntax.c	FUNCTION_147	IF_1	CALL_2
0x12acd	        0x488b4008	                mov rax, qword [rax + 8]	      9531	syntax.c	FUNCTION_147	IF_1	CALL_2
0x12ad1	      0xbe00000000	                              mov esi, 0	      9531	syntax.c	FUNCTION_147	IF_1	CALL_2
0x12ad6	          0x4889c7	                            mov rdi, rax	      9531	syntax.c	FUNCTION_147	IF_1	CALL_2
0x12ad9	      0xe800000000	                          call 0x4012b1e	      9531	syntax.c	FUNCTION_147	IF_1	CALL_2
0x12ade	            0x85c0	                           test eax, eax	      9531	syntax.c	FUNCTION_147	IF_1	CALL_2
0x12ae0	     0xf8449020000	                            je 0x4012d6f	      9531	syntax.c	FUNCTION_147	IF_1	CALL_2
0x12ae6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9539	syntax.c	FUNCTION_147	IF_2
0x12aea	        0x488b4040	            mov rax, qword [rax + 0x40] 	      9539	syntax.c	FUNCTION_147	IF_2
0x12aee	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9539	syntax.c	FUNCTION_147	IF_2
0x12af4	            0x753d	                           jne 0x4012b73	      9539	syntax.c	FUNCTION_147	IF_2
0x12af6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9540	syntax.c	FUNCTION_147	IF_2
0x12afa	        0x488b4048	            mov rax, qword [rax + 0x48] 	      9540	syntax.c	FUNCTION_147	IF_2
0x12afe	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9540	syntax.c	FUNCTION_147	IF_2
0x12b04	            0x752d	                           jne 0x4012b73	      9540	syntax.c	FUNCTION_147	IF_2
0x12b06	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9541	syntax.c	FUNCTION_147	IF_2
0x12b0a	        0x488b4050	            mov rax, qword [rax + 0x50] 	      9541	syntax.c	FUNCTION_147	IF_2
0x12b0e	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9541	syntax.c	FUNCTION_147	IF_2
0x12b14	            0x751d	                           jne 0x4012b73	      9541	syntax.c	FUNCTION_147	IF_2
0x12b16	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9542	syntax.c	FUNCTION_147	IF_2
0x12b1a	        0x488b4058	            mov rax, qword [rax + 0x58] 	      9542	syntax.c	FUNCTION_147	IF_2
0x12b1e	          0x4885c0	                           test rax, rax	      9542	syntax.c	FUNCTION_147	IF_2
0x12b21	            0x7510	                           jne 0x4012b73	      9542	syntax.c	FUNCTION_147	IF_2
0x12b23	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9548	syntax.c	FUNCTION_147	IF_2
0x12b27	          0x8b506c	            mov edx, dword [rax + 0x6c] 	      9548	syntax.c	FUNCTION_147	IF_2
0x12b2a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9548	syntax.c	FUNCTION_147	IF_2
0x12b2e	          0x895068	             mov dword [rax + 0x68], edx	      9548	syntax.c	FUNCTION_147	IF_2
0x12b31	            0xeb55	                           jmp 0x4012bc8	      9548	syntax.c	FUNCTION_147	IF_2
0x12b33	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9552	syntax.c	FUNCTION_147	ELSE_1
0x12b37	          0x8b406c	            mov eax, dword [rax + 0x6c] 	      9552	syntax.c	FUNCTION_147	ELSE_1
0x12b3a	        0x668945d0	               mov word [rbp - 0x30], ax	      9552	syntax.c	FUNCTION_147	ELSE_1
0x12b3e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9553	syntax.c	FUNCTION_147	ELSE_1
0x12b42	        0x488b4040	            mov rax, qword [rax + 0x40] 	      9553	syntax.c	FUNCTION_147	ELSE_1
0x12b46	        0x488945d8	             mov qword [rbp - 0x28], rax	      9553	syntax.c	FUNCTION_147	ELSE_1
0x12b4a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9554	syntax.c	FUNCTION_147	ELSE_1
0x12b4e	        0x488b4048	            mov rax, qword [rax + 0x48] 	      9554	syntax.c	FUNCTION_147	ELSE_1
0x12b52	        0x488945e0	             mov qword [rbp - 0x20], rax	      9554	syntax.c	FUNCTION_147	ELSE_1
0x12b56	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9555	syntax.c	FUNCTION_147	ELSE_1
0x12b5a	        0x488b4050	            mov rax, qword [rax + 0x50] 	      9555	syntax.c	FUNCTION_147	ELSE_1
0x12b5e	        0x488945e8	             mov qword [rbp - 0x18], rax	      9555	syntax.c	FUNCTION_147	ELSE_1
0x12b62	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9556	syntax.c	FUNCTION_147	ELSE_1
0x12b66	        0x488b4058	            mov rax, qword [rax + 0x58] 	      9556	syntax.c	FUNCTION_147	ELSE_1
0x12b6a	        0x488945f0	             mov qword [rbp - 0x10], rax	      9556	syntax.c	FUNCTION_147	ELSE_1
0x12b6e	        0x488d45d0	                   lea rax, [rbp - 0x30]	      9560	syntax.c	FUNCTION_147	ELSE_1	CALL_3
0x12b72	          0x4889c6	                            mov rsi, rax	      9560	syntax.c	FUNCTION_147	ELSE_1	CALL_3
0x12b75	      0xbf00000000	                              mov edi, 0	      9560	syntax.c	FUNCTION_147	ELSE_1	CALL_3
0x12b7a	      0xe8f9e4ffff	                 call sym.get_attr_entry	      9560	syntax.c	FUNCTION_147	ELSE_1	CALL_3
0x12b7f	            0x89c2	                            mov edx, eax	      9560	syntax.c	FUNCTION_147	ELSE_1	CALL_3
0x12b81	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9560	syntax.c	FUNCTION_147	ELSE_1	CALL_3
0x12b85	          0x895068	             mov dword [rax + 0x68], edx	      9560	syntax.c	FUNCTION_147	ELSE_1	CALL_3
0x12b88	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9567	syntax.c	FUNCTION_147	IF_3
0x12b8c	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9567	syntax.c	FUNCTION_147	IF_3
0x12b90	          0x4885c0	                           test rax, rax	      9567	syntax.c	FUNCTION_147	IF_3
0x12b93	            0x751d	                           jne 0x4012bf2	      9567	syntax.c	FUNCTION_147	IF_3
0x12b95	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9567	syntax.c	FUNCTION_147	IF_3
0x12b99	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9567	syntax.c	FUNCTION_147	IF_3
0x12b9d	          0x4885c0	                           test rax, rax	      9567	syntax.c	FUNCTION_147	IF_3
0x12ba0	            0x7510	                           jne 0x4012bf2	      9567	syntax.c	FUNCTION_147	IF_3
0x12ba2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9568	syntax.c	FUNCTION_147	IF_3
0x12ba6	          0x8b5014	            mov edx, dword [rax + 0x14] 	      9568	syntax.c	FUNCTION_147	IF_3
0x12ba9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9568	syntax.c	FUNCTION_147	IF_3
0x12bad	          0x895028	             mov dword [rax + 0x28], edx	      9568	syntax.c	FUNCTION_147	IF_3
0x12bb0	            0xeb3d	                           jmp 0x4012c2f	      9568	syntax.c	FUNCTION_147	IF_3
0x12bb2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9571	syntax.c	FUNCTION_147	ELSE_2
0x12bb6	          0x8b4014	            mov eax, dword [rax + 0x14] 	      9571	syntax.c	FUNCTION_147	ELSE_2
0x12bb9	        0x668945d0	               mov word [rbp - 0x30], ax	      9571	syntax.c	FUNCTION_147	ELSE_2
0x12bbd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9572	syntax.c	FUNCTION_147	ELSE_2
0x12bc1	        0x488b4018	            mov rax, qword [rax + 0x18] 	      9572	syntax.c	FUNCTION_147	ELSE_2
0x12bc5	        0x488945d8	             mov qword [rbp - 0x28], rax	      9572	syntax.c	FUNCTION_147	ELSE_2
0x12bc9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9573	syntax.c	FUNCTION_147	ELSE_2
0x12bcd	        0x488b4020	            mov rax, qword [rax + 0x20] 	      9573	syntax.c	FUNCTION_147	ELSE_2
0x12bd1	        0x488945e0	             mov qword [rbp - 0x20], rax	      9573	syntax.c	FUNCTION_147	ELSE_2
0x12bd5	        0x488d45d0	                   lea rax, [rbp - 0x30]	      9574	syntax.c	FUNCTION_147	ELSE_2	CALL_4
0x12bd9	          0x4889c6	                            mov rsi, rax	      9574	syntax.c	FUNCTION_147	ELSE_2	CALL_4
0x12bdc	      0xbf00000000	                              mov edi, 0	      9574	syntax.c	FUNCTION_147	ELSE_2	CALL_4
0x12be1	      0xe892e4ffff	                 call sym.get_attr_entry	      9574	syntax.c	FUNCTION_147	ELSE_2	CALL_4
0x12be6	            0x89c2	                            mov edx, eax	      9574	syntax.c	FUNCTION_147	ELSE_2	CALL_4
0x12be8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9574	syntax.c	FUNCTION_147	ELSE_2	CALL_4
0x12bec	          0x895028	             mov dword [rax + 0x28], edx	      9574	syntax.c	FUNCTION_147	ELSE_2	CALL_4
0x12bef	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9581	syntax.c	FUNCTION_147	IF_4
0x12bf3	          0x8b4034	            mov eax, dword [rax + 0x34] 	      9581	syntax.c	FUNCTION_147	IF_4
0x12bf6	            0x85c0	                           test eax, eax	      9581	syntax.c	FUNCTION_147	IF_4
0x12bf8	            0x753e	                           jne 0x4012c78	      9581	syntax.c	FUNCTION_147	IF_4
0x12bfa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9581	syntax.c	FUNCTION_147	IF_4
0x12bfe	          0x8b4038	            mov eax, dword [rax + 0x38] 	      9581	syntax.c	FUNCTION_147	IF_4
0x12c01	            0x85c0	                           test eax, eax	      9581	syntax.c	FUNCTION_147	IF_4
0x12c03	            0x7533	                           jne 0x4012c78	      9581	syntax.c	FUNCTION_147	IF_4
0x12c05	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9583	syntax.c	FUNCTION_147	IF_4
0x12c09	        0x488b4040	            mov rax, qword [rax + 0x40] 	      9583	syntax.c	FUNCTION_147	IF_4
0x12c0d	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9583	syntax.c	FUNCTION_147	IF_4
0x12c13	            0x7523	                           jne 0x4012c78	      9583	syntax.c	FUNCTION_147	IF_4
0x12c15	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9584	syntax.c	FUNCTION_147	IF_4
0x12c19	        0x488b4048	            mov rax, qword [rax + 0x48] 	      9584	syntax.c	FUNCTION_147	IF_4
0x12c1d	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9584	syntax.c	FUNCTION_147	IF_4
0x12c23	            0x7513	                           jne 0x4012c78	      9584	syntax.c	FUNCTION_147	IF_4
0x12c25	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9587	syntax.c	FUNCTION_147	IF_4
0x12c29	          0x8b502c	            mov edx, dword [rax + 0x2c] 	      9587	syntax.c	FUNCTION_147	IF_4
0x12c2c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9587	syntax.c	FUNCTION_147	IF_4
0x12c30	          0x89503c	             mov dword [rax + 0x3c], edx	      9587	syntax.c	FUNCTION_147	IF_4
0x12c33	      0xe9f8000000	                           jmp 0x4012d70	      9587	syntax.c	FUNCTION_147	IF_4
0x12c38	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9590	syntax.c	FUNCTION_147	ELSE_3
0x12c3c	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      9590	syntax.c	FUNCTION_147	ELSE_3
0x12c3f	        0x668945d0	               mov word [rbp - 0x30], ax	      9590	syntax.c	FUNCTION_147	ELSE_3
0x12c43	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9591	syntax.c	FUNCTION_147	ELSE_3
0x12c47	          0x8b4034	            mov eax, dword [rax + 0x34] 	      9591	syntax.c	FUNCTION_147	ELSE_3
0x12c4a	        0x668945d8	               mov word [rbp - 0x28], ax	      9591	syntax.c	FUNCTION_147	ELSE_3
0x12c4e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9592	syntax.c	FUNCTION_147	ELSE_3
0x12c52	          0x8b4038	            mov eax, dword [rax + 0x38] 	      9592	syntax.c	FUNCTION_147	ELSE_3
0x12c55	        0x668945da	               mov word [rbp - 0x26], ax	      9592	syntax.c	FUNCTION_147	ELSE_3
0x12c59	    0x8b0500000000	            mov eax, dword [0x04012c9f] 	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x12c5f	            0x85c0	                           test eax, eax	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x12c61	            0x742b	                            je 0x4012cce	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x12c63	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x12c67	        0x488b4040	            mov rax, qword [rax + 0x40] 	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x12c6b	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x12c71	            0x7412	                            je 0x4012cc5	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x12c73	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x12c77	        0x488b4040	            mov rax, qword [rax + 0x40] 	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x12c7b	          0x4889c7	                            mov rdi, rax	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x12c7e	      0xe800000000	                          call 0x4012cc3	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x12c83	            0xeb19	                           jmp 0x4012cde	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x12c85	    0x48c7c099d4ff	             mov rax, 0xffffffffffffd499	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x12c8c	            0xeb10	                           jmp 0x4012cde	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x12c8e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x12c92	        0x488b4040	            mov rax, qword [rax + 0x40] 	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x12c96	          0x4889c7	                            mov rdi, rax	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x12c99	      0xe800000000	                          call 0x4012cde	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x12c9e	        0x488945e0	             mov qword [rbp - 0x20], rax	      9611	syntax.c	FUNCTION_147	ELSE_3	CALL_7
0x12ca2	    0x8b0500000000	            mov eax, dword [0x04012ce8] 	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x12ca8	            0x85c0	                           test eax, eax	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x12caa	            0x742b	                            je 0x4012d17	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x12cac	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x12cb0	        0x488b4048	            mov rax, qword [rax + 0x48] 	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x12cb4	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x12cba	            0x7412	                            je 0x4012d0e	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x12cbc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x12cc0	        0x488b4048	            mov rax, qword [rax + 0x48] 	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x12cc4	          0x4889c7	                            mov rdi, rax	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x12cc7	      0xe800000000	                          call 0x4012d0c	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x12ccc	            0xeb19	                           jmp 0x4012d27	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x12cce	    0x48c7c099d4ff	             mov rax, 0xffffffffffffd499	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x12cd5	            0xeb10	                           jmp 0x4012d27	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x12cd7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x12cdb	        0x488b4048	            mov rax, qword [rax + 0x48] 	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x12cdf	          0x4889c7	                            mov rdi, rax	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x12ce2	      0xe800000000	                          call 0x4012d27	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x12ce7	        0x488945e8	             mov qword [rbp - 0x18], rax	      9612	syntax.c	FUNCTION_147	ELSE_3	CALL_8
0x12ceb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      9613	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x12cef	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9613	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x12cf5	            0x751c	                           jne 0x4012d53	      9613	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x12cf7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9614	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x12cfb	    0x483d99d4ffff	             cmp rax, 0xffffffffffffd499	      9614	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x12d01	            0x7510	                           jne 0x4012d53	      9614	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x12d03	    0x48c745e09ad4	mov qword [rbp - 0x20], 0xffffffffffffd49a	      9618	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x12d0b	    0x48c745e89ad4	mov qword [rbp - 0x18], 0xffffffffffffd49a	      9619	syntax.c	FUNCTION_147	ELSE_3	IF_8
0x12d13	        0x488d45d0	                   lea rax, [rbp - 0x30]	      9622	syntax.c	FUNCTION_147	ELSE_3	CALL_9
0x12d17	          0x4889c6	                            mov rsi, rax	      9622	syntax.c	FUNCTION_147	ELSE_3	CALL_9
0x12d1a	      0xbf00000000	                              mov edi, 0	      9622	syntax.c	FUNCTION_147	ELSE_3	CALL_9
0x12d1f	      0xe854e3ffff	                 call sym.get_attr_entry	      9622	syntax.c	FUNCTION_147	ELSE_3	CALL_9
0x12d24	            0x89c2	                            mov edx, eax	      9622	syntax.c	FUNCTION_147	ELSE_3	CALL_9
0x12d26	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      9622	syntax.c	FUNCTION_147	ELSE_3	CALL_9
0x12d2a	          0x89503c	             mov dword [rax + 0x3c], edx	      9622	syntax.c	FUNCTION_147	ELSE_3	CALL_9
0x12d2d	            0xeb01	                           jmp 0x4012d70	      9622	syntax.c	FUNCTION_147	ELSE_3	CALL_9
0x12d2f	              0x90	                                     nop	      9532	syntax.c	FUNCTION_147	IF_1
0x12d30	        0x488b45f8	                mov rax, qword [rbp - 8]	      9624	syntax.c	FUNCTION_147
0x12d34	    0x644833042528	                xor rax, qword fs:[0x28]	      9624	syntax.c	FUNCTION_147
0x12d3d	            0x7405	                            je 0x4012d84	      9624	syntax.c	FUNCTION_147
0x12d3f	      0xe800000000	                          call 0x4012d84	      9624	syntax.c	FUNCTION_147
0x12d44	              0xc9	                                   leave	      9624	syntax.c	FUNCTION_147
0x12d45	              0xc3	                                     ret	      9624	syntax.c	FUNCTION_147
set_context_in_syntax_cmd	FOR,0:DO,0:IF,7:SWITCH,0:functions,0:ELSE,5:WHILE,0:CALL,10	132
0xc8f7	              0x55	                                push rbp	      6488	syntax.c	FUNCTION_100
0xc8f8	          0x4889e5	                            mov rbp, rsp	      6488	syntax.c	FUNCTION_100
0xc8fb	        0x4883ec20	                           sub rsp, 0x20	      6488	syntax.c	FUNCTION_100
0xc8ff	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6488	syntax.c	FUNCTION_100
0xc903	        0x488975e0	             mov qword [rbp - 0x20], rsi	      6488	syntax.c	FUNCTION_100
0xc907	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6492	syntax.c	FUNCTION_100
0xc90b	    0xc7000c000000	                    mov dword [rax], 0xc	      6492	syntax.c	FUNCTION_100
0xc911	    0xc70500000000	               mov dword [0x0400c95b], 0	      6493	syntax.c	FUNCTION_100
0xc91b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6494	syntax.c	FUNCTION_100
0xc91f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      6494	syntax.c	FUNCTION_100
0xc923	        0x48895008	                mov qword [rax + 8], rdx	      6494	syntax.c	FUNCTION_100
0xc927	    0xc70500000000	               mov dword [0x0400c971], 0	      6495	syntax.c	FUNCTION_100
0xc931	    0xc70500000000	               mov dword [0x0400c97b], 0	      6496	syntax.c	FUNCTION_100
0xc93b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6499	syntax.c	FUNCTION_100	IF_1
0xc93f	           0xfb600	                   movzx eax, byte [rax]	      6499	syntax.c	FUNCTION_100	IF_1
0xc942	            0x84c0	                             test al, al	      6499	syntax.c	FUNCTION_100	IF_1
0xc944	     0xf84a9010000	                            je 0x400cb33	      6499	syntax.c	FUNCTION_100	IF_1
0xc94a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6501	syntax.c	FUNCTION_100	IF_1	CALL_1
0xc94e	          0x4889c7	                            mov rdi, rax	      6501	syntax.c	FUNCTION_100	IF_1	CALL_1
0xc951	      0xe800000000	                          call 0x400c996	      6501	syntax.c	FUNCTION_100	IF_1	CALL_1
0xc956	        0x488945f8	                mov qword [rbp - 8], rax	      6501	syntax.c	FUNCTION_100	IF_1	CALL_1
0xc95a	        0x488b45f8	                mov rax, qword [rbp - 8]	      6502	syntax.c	FUNCTION_100	IF_1	IF_2
0xc95e	           0xfb600	                   movzx eax, byte [rax]	      6502	syntax.c	FUNCTION_100	IF_1	IF_2
0xc961	            0x84c0	                             test al, al	      6502	syntax.c	FUNCTION_100	IF_1	IF_2
0xc963	     0xf848a010000	                            je 0x400cb33	      6502	syntax.c	FUNCTION_100	IF_1	IF_2
0xc969	        0x488b45f8	                mov rax, qword [rbp - 8]	      6504	syntax.c	FUNCTION_100	IF_1	IF_2	CALL_2
0xc96d	          0x4889c7	                            mov rdi, rax	      6504	syntax.c	FUNCTION_100	IF_1	IF_2	CALL_2
0xc970	      0xe800000000	                          call 0x400c9b5	      6504	syntax.c	FUNCTION_100	IF_1	IF_2	CALL_2
0xc975	          0x4889c2	                            mov rdx, rax	      6504	syntax.c	FUNCTION_100	IF_1	IF_2	CALL_2
0xc978	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6504	syntax.c	FUNCTION_100	IF_1	IF_2	CALL_2
0xc97c	        0x48895008	                mov qword [rax + 8], rdx	      6504	syntax.c	FUNCTION_100	IF_1	IF_2	CALL_2
0xc980	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6505	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3	CALL_3
0xc984	        0x488b4008	                mov rax, qword [rax + 8]	      6505	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3	CALL_3
0xc988	          0x4889c7	                            mov rdi, rax	      6505	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3	CALL_3
0xc98b	      0xe800000000	                          call 0x400c9d0	      6505	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3	CALL_3
0xc990	           0xfb600	                   movzx eax, byte [rax]	      6505	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3	CALL_3
0xc993	            0x84c0	                             test al, al	      6505	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3	CALL_3
0xc995	            0x740f	                            je 0x400c9e6	      6505	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3	CALL_3
0xc997	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6506	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3
0xc99b	    0xc70000000000	                      mov dword [rax], 0	      6506	syntax.c	FUNCTION_100	IF_1	IF_2	IF_3
0xc9a1	      0xe94d010000	                           jmp 0x400cb33	      6522	syntax.c	FUNCTION_100	ELSE_5
0xc9a6	        0x488b55f8	                mov rdx, qword [rbp - 8]	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0xc9aa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0xc9ae	          0x4829c2	                            sub rdx, rax	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0xc9b1	          0x4889d0	                            mov rax, rdx	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0xc9b4	          0x4889c2	                            mov rdx, rax	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0xc9b7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0xc9bb	      0xbe00000000	                              mov esi, 0	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0xc9c0	          0x4889c7	                            mov rdi, rax	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0xc9c3	      0xe800000000	                          call 0x400ca08	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0xc9c8	            0x85c0	                           test eax, eax	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0xc9ca	            0x750f	                           jne 0x400ca1b	      6507	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0xc9cc	    0xc70500000000	               mov dword [0x0400ca16], 1	      6508	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_1	IF_4
0xc9d6	      0xe918010000	                           jmp 0x400cb33	      6522	syntax.c	FUNCTION_100	ELSE_5
0xc9db	        0x488b55f8	                mov rdx, qword [rbp - 8]	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0xc9df	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0xc9e3	          0x4829c2	                            sub rdx, rax	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0xc9e6	          0x4889d0	                            mov rax, rdx	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0xc9e9	          0x4889c2	                            mov rdx, rax	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0xc9ec	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0xc9f0	      0xbe00000000	                              mov esi, 0	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0xc9f5	          0x4889c7	                            mov rdi, rax	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0xc9f8	      0xe800000000	                          call 0x400ca3d	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0xc9fd	            0x85c0	                           test eax, eax	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0xc9ff	            0x750f	                           jne 0x400ca50	      6509	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0xca01	    0xc70500000000	               mov dword [0x0400ca4b], 2	      6510	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_2	IF_5
0xca0b	      0xe9e3000000	                           jmp 0x400cb33	      6522	syntax.c	FUNCTION_100	ELSE_5
0xca10	        0x488b55f8	                mov rdx, qword [rbp - 8]	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0xca14	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0xca18	          0x4829c2	                            sub rdx, rax	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0xca1b	          0x4889d0	                            mov rax, rdx	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0xca1e	          0x4889c2	                            mov rdx, rax	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0xca21	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0xca25	      0xbe00000000	                              mov esi, 0	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0xca2a	          0x4889c7	                            mov rdi, rax	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0xca2d	      0xe800000000	                          call 0x400ca72	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0xca32	            0x85c0	                           test eax, eax	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0xca34	            0x750f	                           jne 0x400ca85	      6511	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6	CALL_6
0xca36	    0xc70500000000	               mov dword [0x0400ca80], 3	      6512	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_3	IF_6
0xca40	      0xe9ae000000	                           jmp 0x400cb33	      6522	syntax.c	FUNCTION_100	ELSE_5
0xca45	        0x488b55f8	                mov rdx, qword [rbp - 8]	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0xca49	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0xca4d	          0x4829c2	                            sub rdx, rax	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0xca50	          0x4889d0	                            mov rax, rdx	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0xca53	          0x4889c2	                            mov rdx, rax	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0xca56	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0xca5a	      0xbe00000000	                              mov esi, 0	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0xca5f	          0x4889c7	                            mov rdi, rax	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0xca62	      0xe800000000	                          call 0x400caa7	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0xca67	            0x85c0	                           test eax, eax	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0xca69	            0x7472	                            je 0x400cb1d	      6513	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_7
0xca6b	        0x488b55f8	                mov rdx, qword [rbp - 8]	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0xca6f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0xca73	          0x4829c2	                            sub rdx, rax	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0xca76	          0x4889d0	                            mov rax, rdx	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0xca79	          0x4889c2	                            mov rdx, rax	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0xca7c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0xca80	      0xbe00000000	                              mov esi, 0	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0xca85	          0x4889c7	                            mov rdi, rax	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0xca88	      0xe800000000	                          call 0x400cacd	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0xca8d	            0x85c0	                           test eax, eax	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0xca8f	            0x744c	                            je 0x400cb1d	      6514	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_8
0xca91	        0x488b55f8	                mov rdx, qword [rbp - 8]	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0xca95	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0xca99	          0x4829c2	                            sub rdx, rax	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0xca9c	          0x4889d0	                            mov rax, rdx	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0xca9f	          0x4889c2	                            mov rdx, rax	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0xcaa2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0xcaa6	      0xbe00000000	                              mov esi, 0	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0xcaab	          0x4889c7	                            mov rdi, rax	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0xcaae	      0xe800000000	                          call 0x400caf3	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0xcab3	            0x85c0	                           test eax, eax	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0xcab5	            0x7426	                            je 0x400cb1d	      6515	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_9
0xcab7	        0x488b55f8	                mov rdx, qword [rbp - 8]	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0xcabb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0xcabf	          0x4829c2	                            sub rdx, rax	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0xcac2	          0x4889d0	                            mov rax, rdx	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0xcac5	          0x4889c2	                            mov rdx, rax	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0xcac8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0xcacc	      0xbe00000000	                              mov esi, 0	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0xcad1	          0x4889c7	                            mov rdi, rax	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0xcad4	      0xe800000000	                          call 0x400cb19	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0xcad9	            0x85c0	                           test eax, eax	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0xcadb	            0x750c	                           jne 0x400cb29	      6516	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7	CALL_10
0xcadd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6517	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7
0xcae1	    0xc7000d000000	                    mov dword [rax], 0xd	      6517	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_4	IF_7
0xcae7	            0xeb0a	                           jmp 0x400cb33	      6522	syntax.c	FUNCTION_100	ELSE_5
0xcae9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6519	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_5
0xcaed	    0xc70000000000	                      mov dword [rax], 0	      6519	syntax.c	FUNCTION_100	IF_1	IF_2	ELSE_5
0xcaf3	              0x90	                                     nop	      6522	syntax.c	FUNCTION_100	ELSE_5
0xcaf4	              0xc9	                                   leave	      6522	syntax.c	FUNCTION_100	ELSE_5
0xcaf5	              0xc3	                                     ret	      6522	syntax.c	FUNCTION_100	ELSE_5
highlight_exists	FOR,0:DO,0:IF,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,1	12
0x12e7d	              0x55	                                push rbp	      9668	syntax.c	FUNCTION_150
0x12e7e	          0x4889e5	                            mov rbp, rsp	      9668	syntax.c	FUNCTION_150
0x12e81	        0x4883ec10	                           sub rsp, 0x10	      9668	syntax.c	FUNCTION_150
0x12e85	        0x48897df8	                mov qword [rbp - 8], rdi	      9668	syntax.c	FUNCTION_150
0x12e89	        0x488b45f8	                mov rax, qword [rbp - 8]	      9669	syntax.c	FUNCTION_150	CALL_1
0x12e8d	          0x4889c7	                            mov rdi, rax	      9669	syntax.c	FUNCTION_150	CALL_1
0x12e90	      0xe800000000	                          call 0x4012ed5	      9669	syntax.c	FUNCTION_150	CALL_1
0x12e95	            0x85c0	                           test eax, eax	      9669	syntax.c	FUNCTION_150	CALL_1
0x12e97	           0xf9fc0	                                 setg al	      9669	syntax.c	FUNCTION_150	CALL_1
0x12e9a	           0xfb6c0	                           movzx eax, al	      9669	syntax.c	FUNCTION_150	CALL_1
0x12e9d	              0xc9	                                   leave	      9670	syntax.c	FUNCTION_150
0x12e9e	              0xc3	                                     ret	      9670	syntax.c	FUNCTION_150
lookup_color	FOR,0:DO,0:IF,10:SWITCH,0:functions,0:ELSE,5:WHILE,0:CALL,1	100
0xd6ee	              0x55	                                push rbp	      7295	syntax.c	FUNCTION_115
0xd6ef	          0x4889e5	                            mov rbp, rsp	      7295	syntax.c	FUNCTION_115
0xd6f2	        0x4883ec20	                           sub rsp, 0x20	      7295	syntax.c	FUNCTION_115
0xd6f6	          0x897dec	             mov dword [rbp - 0x14], edi	      7295	syntax.c	FUNCTION_115
0xd6f9	          0x8975e8	             mov dword [rbp - 0x18], esi	      7295	syntax.c	FUNCTION_115
0xd6fc	        0x488955e0	             mov qword [rbp - 0x20], rdx	      7295	syntax.c	FUNCTION_115
0xd700	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      7296	syntax.c	FUNCTION_115
0xd703	            0x4898	                                    cdqe	      7296	syntax.c	FUNCTION_115
0xd705	    0x8b0485000000	                  mov eax, dword [rax*4]	      7296	syntax.c	FUNCTION_115
0xd70c	          0x8945f4	              mov dword [rbp - 0xc], eax	      7296	syntax.c	FUNCTION_115
0xd70f	        0x837df400	                cmp dword [rbp - 0xc], 0	      7300	syntax.c	FUNCTION_115	IF_1
0xd713	            0x790a	                           jns 0x400d75f	      7300	syntax.c	FUNCTION_115	IF_1
0xd715	      0xb8ffffffff	                     mov eax, 0xffffffff	      7301	syntax.c	FUNCTION_115	IF_1
0xd71a	      0xe93c010000	                           jmp 0x400d89b	      7301	syntax.c	FUNCTION_115	IF_1
0xd71f	    0x8b0500000000	            mov eax, dword [0x0400d765] 	      7303	syntax.c	FUNCTION_115	IF_2
0xd725	          0x83f808	                              cmp eax, 8	      7303	syntax.c	FUNCTION_115	IF_2
0xd728	            0x753e	                           jne 0x400d7a8	      7303	syntax.c	FUNCTION_115	IF_2
0xd72a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      7309	syntax.c	FUNCTION_115	IF_2
0xd72d	            0x4898	                                    cdqe	      7309	syntax.c	FUNCTION_115	IF_2
0xd72f	    0x8b0485000000	                  mov eax, dword [rax*4]	      7309	syntax.c	FUNCTION_115	IF_2
0xd736	          0x8945f4	              mov dword [rbp - 0xc], eax	      7309	syntax.c	FUNCTION_115	IF_2
0xd739	        0x837de800	               cmp dword [rbp - 0x18], 0	      7311	syntax.c	FUNCTION_115	IF_2	IF_3
0xd73d	            0x7420	                            je 0x400d79f	      7311	syntax.c	FUNCTION_115	IF_2	IF_3
0xd73f	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      7315	syntax.c	FUNCTION_115	IF_2	IF_3	IF_4
0xd742	          0x83e008	                              and eax, 8	      7315	syntax.c	FUNCTION_115	IF_2	IF_3	IF_4
0xd745	            0x85c0	                           test eax, eax	      7315	syntax.c	FUNCTION_115	IF_2	IF_3	IF_4
0xd747	            0x740c	                            je 0x400d795	      7315	syntax.c	FUNCTION_115	IF_2	IF_3	IF_4
0xd749	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7316	syntax.c	FUNCTION_115	IF_2	IF_3	IF_4
0xd74d	    0xc70001000000	                      mov dword [rax], 1	      7316	syntax.c	FUNCTION_115	IF_2	IF_3	IF_4
0xd753	            0xeb0a	                           jmp 0x400d79f	      7316	syntax.c	FUNCTION_115	IF_2	IF_3	IF_4
0xd755	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7318	syntax.c	FUNCTION_115	IF_2	IF_3	ELSE_1
0xd759	    0xc70000000000	                      mov dword [rax], 0	      7318	syntax.c	FUNCTION_115	IF_2	IF_3	ELSE_1
0xd75f	        0x8365f407	                and dword [rbp - 0xc], 7	      7320	syntax.c	FUNCTION_115	IF_2	ELSE_1
0xd763	      0xe9f0000000	                           jmp 0x400d898	      7320	syntax.c	FUNCTION_115	IF_2	ELSE_1
0xd768	    0x8b0500000000	            mov eax, dword [0x0400d7ae] 	      7322	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0xd76e	          0x83f810	                           cmp eax, 0x10	      7322	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0xd771	            0x741c	                            je 0x400d7cf	      7322	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0xd773	    0x8b0500000000	            mov eax, dword [0x0400d7b9] 	      7322	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0xd779	          0x83f858	                           cmp eax, 0x58	      7322	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0xd77c	            0x7411	                            je 0x400d7cf	      7322	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0xd77e	    0x8b0500000000	            mov eax, dword [0x0400d7c4] 	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0xd784	      0x3dff000000	                           cmp eax, 0xff	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0xd789	     0xf8ec9000000	                           jle 0x400d898	      7323	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5
0xd78f	    0x488b05000000	            mov rax, qword [0x0400d7d6] 	      7330	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_6
0xd796	           0xfb600	                   movzx eax, byte [rax]	      7330	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_6
0xd799	            0x84c0	                             test al, al	      7330	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_6
0xd79b	            0x740d	                            je 0x400d7ea	      7330	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_6
0xd79d	    0x488b05000000	            mov rax, qword [0x0400d7e4] 	      7331	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_6
0xd7a4	        0x488945f8	                mov qword [rbp - 8], rax	      7331	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_6
0xd7a8	            0xeb0b	                           jmp 0x400d7f5	      7331	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_6
0xd7aa	    0x488b05000000	            mov rax, qword [0x0400d7f1] 	      7333	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3
0xd7b1	        0x488945f8	                mov qword [rbp - 8], rax	      7333	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3
0xd7b5	        0x488b45f8	                mov rax, qword [rbp - 8]	      7334	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7
0xd7b9	           0xfb600	                   movzx eax, byte [rax]	      7334	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7
0xd7bc	            0x84c0	                             test al, al	      7334	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7
0xd7be	            0x7474	                            je 0x400d874	      7334	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7
0xd7c0	    0x8b0500000000	            mov eax, dword [0x0400d806] 	      7334	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7
0xd7c6	      0x3d00010000	                          cmp eax, 0x100	      7334	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7
0xd7cb	            0x7f1e	                            jg 0x400d82b	      7334	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7
0xd7cd	        0x488b45f8	                mov rax, qword [rbp - 8]	      7335	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_1
0xd7d1	          0x4889c7	                            mov rdi, rax	      7335	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_1
0xd7d4	      0xe800000000	                          call 0x400d819	      7335	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_1
0xd7d9	        0x488d50ff	                      lea rdx, [rax - 1]	      7335	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_1
0xd7dd	        0x488b45f8	                mov rax, qword [rbp - 8]	      7335	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_1
0xd7e1	          0x4801d0	                            add rax, rdx	      7335	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_1
0xd7e4	           0xfb600	                   movzx eax, byte [rax]	      7335	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_1
0xd7e7	            0x3c6d	                            cmp al, 0x6d	      7335	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_1
0xd7e9	            0x7549	                           jne 0x400d874	      7335	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	CALL_1
0xd7eb	    0x8b0500000000	            mov eax, dword [0x0400d831] 	      7337	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	IF_8
0xd7f1	          0x83f858	                           cmp eax, 0x58	      7337	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	IF_8
0xd7f4	            0x7511	                           jne 0x400d847	      7337	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	IF_8
0xd7f6	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      7338	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	IF_8
0xd7f9	            0x4898	                                    cdqe	      7338	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	IF_8
0xd7fb	    0x8b0485000000	                  mov eax, dword [rax*4]	      7338	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	IF_8
0xd802	          0x8945f4	              mov dword [rbp - 0xc], eax	      7338	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	IF_8
0xd805	            0xeb2d	                           jmp 0x400d874	      7338	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	IF_8
0xd807	    0x8b0500000000	            mov eax, dword [0x0400d84d] 	      7339	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_4	IF_9
0xd80d	      0x3dff000000	                           cmp eax, 0xff	      7339	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_4	IF_9
0xd812	            0x7e11	                           jle 0x400d865	      7339	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_4	IF_9
0xd814	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      7340	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_4	IF_9
0xd817	            0x4898	                                    cdqe	      7340	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_4	IF_9
0xd819	    0x8b0485000000	                  mov eax, dword [rax*4]	      7340	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_4	IF_9
0xd820	          0x8945f4	              mov dword [rbp - 0xc], eax	      7340	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_4	IF_9
0xd823	            0xeb0f	                           jmp 0x400d874	      7340	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_4	IF_9
0xd825	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      7342	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_5
0xd828	            0x4898	                                    cdqe	      7342	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_5
0xd82a	    0x8b0485000000	                  mov eax, dword [rax*4]	      7342	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_5
0xd831	          0x8945f4	              mov dword [rbp - 0xc], eax	      7342	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	ELSE_3	IF_7	ELSE_5
0xd834	    0x8b0500000000	            mov eax, dword [0x0400d87a] 	      7345	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0xd83a	      0x3dff000000	                           cmp eax, 0xff	      7345	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0xd83f	            0x7e17	                           jle 0x400d898	      7345	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0xd841	        0x837df40f	              cmp dword [rbp - 0xc], 0xf	      7345	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0xd845	            0x7511	                           jne 0x400d898	      7345	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0xd847	    0x8b0500000000	            mov eax, dword [0x0400d88d] 	      7345	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0xd84d	            0x85c0	                           test eax, eax	      7345	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0xd84f	            0x7407	                            je 0x400d898	      7345	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0xd851	    0xc745f4e70000	            mov dword [rbp - 0xc], 0xe7 	      7348	syntax.c	FUNCTION_115	ELSE_1	ELSE_2	IF_5	IF_10
0xd858	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      7351	syntax.c	FUNCTION_115
0xd85b	              0xc9	                                   leave	      7352	syntax.c	FUNCTION_115
0xd85c	              0xc3	                                     ret	      7352	syntax.c	FUNCTION_115
limit_pos	FOR,0:DO,0:IF,2:SWITCH,0:functions,0:ELSE,1:WHILE,0:CALL,0	36
0x53dd	              0x55	                                push rbp	      3173	syntax.c	FUNCTION_38
0x53de	          0x4889e5	                            mov rbp, rsp	      3173	syntax.c	FUNCTION_38
0x53e1	        0x48897df8	                mov qword [rbp - 8], rdi	      3173	syntax.c	FUNCTION_38
0x53e5	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3173	syntax.c	FUNCTION_38
0x53e9	        0x488b45f8	                mov rax, qword [rbp - 8]	      3174	syntax.c	FUNCTION_38	IF_1
0x53ed	          0x488b10	                    mov rdx, qword [rax]	      3174	syntax.c	FUNCTION_38	IF_1
0x53f0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3174	syntax.c	FUNCTION_38	IF_1
0x53f4	          0x488b00	                    mov rax, qword [rax]	      3174	syntax.c	FUNCTION_38	IF_1
0x53f7	          0x4839c2	                            cmp rdx, rax	      3174	syntax.c	FUNCTION_38	IF_1
0x53fa	            0x7e18	                           jle 0x4005454	      3174	syntax.c	FUNCTION_38	IF_1
0x53fc	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3175	syntax.c	FUNCTION_38	IF_1
0x5400	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3175	syntax.c	FUNCTION_38	IF_1
0x5404	        0x488b5008	                mov rdx, qword [rax + 8]	      3175	syntax.c	FUNCTION_38	IF_1
0x5408	          0x488b00	                    mov rax, qword [rax]	      3175	syntax.c	FUNCTION_38	IF_1
0x540b	          0x488901	                    mov qword [rcx], rax	      3175	syntax.c	FUNCTION_38	IF_1
0x540e	        0x48895108	                mov qword [rcx + 8], rdx	      3175	syntax.c	FUNCTION_38	IF_1
0x5412	            0xeb33	                           jmp 0x4005487	      3178	syntax.c	FUNCTION_38
0x5414	        0x488b45f8	                mov rax, qword [rbp - 8]	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x5418	          0x488b10	                    mov rdx, qword [rax]	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x541b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x541f	          0x488b00	                    mov rax, qword [rax]	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x5422	          0x4839c2	                            cmp rdx, rax	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x5425	            0x7520	                           jne 0x4005487	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x5427	        0x488b45f8	                mov rax, qword [rbp - 8]	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x542b	          0x8b5008	                mov edx, dword [rax + 8]	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x542e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x5432	          0x8b4008	                mov eax, dword [rax + 8]	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x5435	            0x39c2	                            cmp edx, eax	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x5437	            0x7e0e	                           jle 0x4005487	      3176	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x5439	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3177	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x543d	          0x8b5008	                mov edx, dword [rax + 8]	      3177	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x5440	        0x488b45f8	                mov rax, qword [rbp - 8]	      3177	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x5444	          0x895008	                mov dword [rax + 8], edx	      3177	syntax.c	FUNCTION_38	ELSE_1	IF_2
0x5447	              0x90	                                     nop	      3178	syntax.c	FUNCTION_38
0x5448	              0x5d	                                 pop rbp	      3178	syntax.c	FUNCTION_38
0x5449	              0xc3	                                     ret	      3178	syntax.c	FUNCTION_38
syn_cmd_match	FOR,0:DO,0:IF,8:SWITCH,0:functions,0:ELSE,1:WHILE,0:CALL,32	323
0x948b	              0x55	                                push rbp	      5027	syntax.c	FUNCTION_80
0x948c	          0x4889e5	                            mov rbp, rsp	      5027	syntax.c	FUNCTION_80
0x948f	    0x4881ec200100	                          sub rsp, 0x120	      5027	syntax.c	FUNCTION_80
0x9496	    0x4889bde8feff	            mov qword [rbp - 0x118], rdi	      5027	syntax.c	FUNCTION_80
0x949d	    0x89b5e4feffff	            mov dword [rbp - 0x11c], esi	      5027	syntax.c	FUNCTION_80
0x94a3	    0x64488b042528	                mov rax, qword fs:[0x28]	      5027	syntax.c	FUNCTION_80
0x94ac	        0x488945f8	                mov qword [rbp - 8], rax	      5027	syntax.c	FUNCTION_80
0x94b0	            0x31c0	                            xor eax, eax	      5027	syntax.c	FUNCTION_80
0x94b2	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      5028	syntax.c	FUNCTION_80
0x94b9	          0x488b00	                    mov rax, qword [rax]	      5028	syntax.c	FUNCTION_80
0x94bc	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      5028	syntax.c	FUNCTION_80
0x94c3	    0xc785f8feffff	              mov dword [rbp - 0x108], 0	      5035	syntax.c	FUNCTION_80
0x94cd	    0xc785fcfeffff	              mov dword [rbp - 0x104], 0	      5036	syntax.c	FUNCTION_80
0x94d7	    0x488d9508ffff	                   lea rdx, [rbp - 0xf8]	      5039	syntax.c	FUNCTION_80	CALL_1
0x94de	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5039	syntax.c	FUNCTION_80	CALL_1
0x94e5	          0x4889d6	                            mov rsi, rdx	      5039	syntax.c	FUNCTION_80	CALL_1
0x94e8	          0x4889c7	                            mov rdi, rax	      5039	syntax.c	FUNCTION_80	CALL_1
0x94eb	      0xe8faf0ffff	                 call sym.get_group_name	      5039	syntax.c	FUNCTION_80	CALL_1
0x94f0	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      5039	syntax.c	FUNCTION_80	CALL_1
0x94f7	    0xc78520ffffff	               mov dword [rbp - 0xe0], 0	      5042	syntax.c	FUNCTION_80
0x9501	    0xc78524ffffff	               mov dword [rbp - 0xdc], 0	      5043	syntax.c	FUNCTION_80
0x950b	    0x83bde4feffff	              cmp dword [rbp - 0x11c], 0	      5044	syntax.c	FUNCTION_80
0x9512	            0x7409	                            je 0x400955d	      5044	syntax.c	FUNCTION_80
0x9514	    0x488d85f8feff	                  lea rax, [rbp - 0x108]	      5044	syntax.c	FUNCTION_80
0x951b	            0xeb05	                           jmp 0x4009562	      5044	syntax.c	FUNCTION_80
0x951d	      0xb800000000	                              mov eax, 0	      5044	syntax.c	FUNCTION_80
0x9522	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	      5044	syntax.c	FUNCTION_80
0x9529	    0xc68530ffffff	                mov byte [rbp - 0xd0], 1	      5045	syntax.c	FUNCTION_80
0x9530	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	      5046	syntax.c	FUNCTION_80
0x953b	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	      5047	syntax.c	FUNCTION_80
0x9546	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	      5048	syntax.c	FUNCTION_80
0x9551	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      5049	syntax.c	FUNCTION_80	CALL_2
0x9558	          0x8b4830	            mov ecx, dword [rax + 0x30] 	      5049	syntax.c	FUNCTION_80	CALL_2
0x955b	    0x488d95fcfeff	                  lea rdx, [rbp - 0x104]	      5049	syntax.c	FUNCTION_80	CALL_2
0x9562	    0x488db520ffff	                   lea rsi, [rbp - 0xe0]	      5049	syntax.c	FUNCTION_80	CALL_2
0x9569	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      5049	syntax.c	FUNCTION_80	CALL_2
0x9570	          0x4889c7	                            mov rdi, rax	      5049	syntax.c	FUNCTION_80	CALL_2
0x9573	      0xe8d8f0ffff	                call sym.get_syn_options	      5049	syntax.c	FUNCTION_80	CALL_2
0x9578	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      5049	syntax.c	FUNCTION_80	CALL_2
0x957f	      0xe8091a0000	              call sym.init_syn_patterns	      5052	syntax.c	FUNCTION_80	CALL_3
0x9584	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      5053	syntax.c	FUNCTION_80	CALL_4
0x958b	      0xbaa0000000	                           mov edx, 0xa0	      5053	syntax.c	FUNCTION_80	CALL_4
0x9590	      0xbe00000000	                              mov esi, 0	      5053	syntax.c	FUNCTION_80	CALL_4
0x9595	          0x4889c7	                            mov rdi, rax	      5053	syntax.c	FUNCTION_80	CALL_4
0x9598	      0xe800000000	                          call 0x40095dd	      5053	syntax.c	FUNCTION_80	CALL_4
0x959d	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	      5054	syntax.c	FUNCTION_80	CALL_5
0x95a4	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      5054	syntax.c	FUNCTION_80	CALL_5
0x95ab	          0x4889d6	                            mov rsi, rdx	      5054	syntax.c	FUNCTION_80	CALL_5
0x95ae	          0x4889c7	                            mov rdi, rax	      5054	syntax.c	FUNCTION_80	CALL_5
0x95b1	      0xe8081a0000	                call sym.get_syn_pattern	      5054	syntax.c	FUNCTION_80	CALL_5
0x95b6	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      5054	syntax.c	FUNCTION_80	CALL_5
0x95bd	      0xe800000000	                          call 0x4009602	      5055	syntax.c	FUNCTION_80	IF_1	CALL_6
0x95c2	            0x85c0	                           test eax, eax	      5055	syntax.c	FUNCTION_80	IF_1	CALL_6
0x95c4	            0x741e	                            je 0x4009624	      5055	syntax.c	FUNCTION_80	IF_1	CALL_6
0x95c6	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	      5055	syntax.c	FUNCTION_80	IF_1	CALL_6
0x95cc	      0x2500080000	                          and eax, 0x800	      5055	syntax.c	FUNCTION_80	IF_1	CALL_6
0x95d1	            0x85c0	                           test eax, eax	      5055	syntax.c	FUNCTION_80	IF_1	CALL_6
0x95d3	            0x750f	                           jne 0x4009624	      5055	syntax.c	FUNCTION_80	IF_1	CALL_6
0x95d5	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	      5056	syntax.c	FUNCTION_80	IF_1
0x95db	          0x83c808	                               or eax, 8	      5056	syntax.c	FUNCTION_80	IF_1
0x95de	    0x898520ffffff	             mov dword [rbp - 0xe0], eax	      5056	syntax.c	FUNCTION_80	IF_1
0x95e4	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      5059	syntax.c	FUNCTION_80	CALL_7
0x95eb	          0x8b4830	            mov ecx, dword [rax + 0x30] 	      5059	syntax.c	FUNCTION_80	CALL_7
0x95ee	    0x488d95fcfeff	                  lea rdx, [rbp - 0x104]	      5059	syntax.c	FUNCTION_80	CALL_7
0x95f5	    0x488db520ffff	                   lea rsi, [rbp - 0xe0]	      5059	syntax.c	FUNCTION_80	CALL_7
0x95fc	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      5059	syntax.c	FUNCTION_80	CALL_7
0x9603	          0x4889c7	                            mov rdi, rax	      5059	syntax.c	FUNCTION_80	CALL_7
0x9606	      0xe845f0ffff	                call sym.get_syn_options	      5059	syntax.c	FUNCTION_80	CALL_7
0x960b	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      5059	syntax.c	FUNCTION_80	CALL_7
0x9612	    0x4883bd10ffff	               cmp qword [rbp - 0xf0], 0	      5061	syntax.c	FUNCTION_80	IF_2
0x961a	     0xf84f7030000	                            je 0x4009a57	      5061	syntax.c	FUNCTION_80	IF_2
0x9620	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      5066	syntax.c	FUNCTION_80	IF_2	CALL_8
0x9627	          0x4889c7	                            mov rdi, rax	      5066	syntax.c	FUNCTION_80	IF_2	CALL_8
0x962a	      0xe800000000	                          call 0x400966f	      5066	syntax.c	FUNCTION_80	IF_2	CALL_8
0x962f	          0x4889c2	                            mov rdx, rax	      5066	syntax.c	FUNCTION_80	IF_2	CALL_8
0x9632	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      5066	syntax.c	FUNCTION_80	IF_2	CALL_8
0x9639	        0x48895008	                mov qword [rax + 8], rdx	      5066	syntax.c	FUNCTION_80	IF_2	CALL_8
0x963d	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x9644	           0xfb600	                   movzx eax, byte [rax]	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x9647	           0xfb6c0	                           movzx eax, al	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x964a	            0x89c7	                            mov edi, eax	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x964c	      0xe800000000	                          call 0x4009691	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x9651	            0x85c0	                           test eax, eax	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x9653	            0x740e	                            je 0x40096a3	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x9655	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x965c	          0x8b4030	            mov eax, dword [rax + 0x30] 	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x965f	            0x85c0	                           test eax, eax	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x9661	            0x7410	                            je 0x40096b3	      5067	syntax.c	FUNCTION_80	IF_2	IF_3	CALL_9
0x9663	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	      5068	syntax.c	FUNCTION_80	IF_2	IF_3
0x966e	      0xe9a4030000	                           jmp 0x4009a57	      5068	syntax.c	FUNCTION_80	IF_2	IF_3
0x9673	    0x488b05000000	            mov rax, qword [0x040096ba] 	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x967a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x967e	    0x480560020000	                          add rax, 0x260	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x9684	      0xbe01000000	                              mov esi, 1	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x9689	          0x4889c7	                            mov rdi, rax	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x968c	      0xe800000000	                          call 0x40096d1	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x9691	            0x85c0	                           test eax, eax	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x9693	     0xf847e030000	                            je 0x4009a57	      5069	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_10
0x9699	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      5071	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x96a0	          0x4889c2	                            mov rdx, rax	      5071	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x96a3	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5071	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x96aa	          0x4829c2	                            sub rdx, rax	      5071	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x96ad	          0x4889d0	                            mov rax, rdx	      5071	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x96b0	            0x89c2	                            mov edx, eax	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x96b2	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x96b9	            0x89d6	                            mov esi, edx	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x96bb	          0x4889c7	                            mov rdi, rax	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x96be	      0xe800000000	                          call 0x4009703	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x96c3	    0x898500ffffff	            mov dword [rbp - 0x100], eax	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x96c9	    0x83bd00ffffff	              cmp dword [rbp - 0x100], 0	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x96d0	     0xf8441030000	                            je 0x4009a57	      5070	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_11
0x96d6	    0x488d9520ffff	                   lea rdx, [rbp - 0xe0]	      5073	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_12
0x96dd	    0x8b8500ffffff	            mov eax, dword [rbp - 0x100]	      5073	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_12
0x96e3	          0x4889d6	                            mov rsi, rdx	      5073	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_12
0x96e6	            0x89c7	                            mov edi, eax	      5073	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_12
0x96e8	      0xe8b0f5ffff	              call sym.syn_incl_toplevel	      5073	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_12
0x96ed	    0x488b05000000	            mov rax, qword [0x04009734] 	      5077	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x96f4	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5077	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x96f8	    0x8b8060020000	           mov eax, dword [rax + 0x260] 	      5077	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x96fe	    0x898504ffffff	             mov dword [rbp - 0xfc], eax	      5077	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x9704	    0x488b05000000	            mov rax, qword [0x0400974b] 	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_13
0x970b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_13
0x970f	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_13
0x9716	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_13
0x971c	          0x4863d0	                         movsxd rdx, eax	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_13
0x971f	          0x4889d0	                            mov rax, rdx	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_13
0x9722	        0x48c1e002	                              shl rax, 2	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_13
0x9726	          0x4801d0	                            add rax, rdx	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_13
0x9729	        0x48c1e005	                              shl rax, 5	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_13
0x972d	          0x4801c8	                            add rax, rcx	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_13
0x9730	          0x4889c7	                            mov rdi, rax	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_13
0x9733	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_13
0x973a	      0xba14000000	                           mov edx, 0x14	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_13
0x973f	          0x4889c6	                            mov rsi, rax	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_13
0x9742	          0x4889d1	                            mov rcx, rdx	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_13
0x9745	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	      5078	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_13
0x9748	    0x488b05000000	            mov rax, qword [0x0400978f] 	      5079	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_14
0x974f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5079	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_14
0x9753	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5079	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_14
0x975a	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5079	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_14
0x9760	          0x4863d0	                         movsxd rdx, eax	      5079	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_14
0x9763	          0x4889d0	                            mov rax, rdx	      5079	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_14
0x9766	        0x48c1e002	                              shl rax, 2	      5079	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_14
0x976a	          0x4801d0	                            add rax, rdx	      5079	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_14
0x976d	        0x48c1e005	                              shl rax, 5	      5079	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_14
0x9771	          0x4801c8	                            add rax, rcx	      5079	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_14
0x9774	    0x8b95e4feffff	            mov edx, dword [rbp - 0x11c]	      5079	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_14
0x977a	          0x885001	                  mov byte [rax + 1], dl	      5079	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_14
0x977d	    0x488b05000000	            mov rax, qword [0x040097c4] 	      5080	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_15
0x9784	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5080	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_15
0x9788	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5080	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_15
0x978f	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5080	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_15
0x9795	          0x4863d0	                         movsxd rdx, eax	      5080	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_15
0x9798	          0x4889d0	                            mov rax, rdx	      5080	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_15
0x979b	        0x48c1e002	                              shl rax, 2	      5080	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_15
0x979f	          0x4801d0	                            add rax, rdx	      5080	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_15
0x97a2	        0x48c1e005	                              shl rax, 5	      5080	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_15
0x97a6	          0x4801c8	                            add rax, rcx	      5080	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_15
0x97a9	          0xc60001	                       mov byte [rax], 1	      5080	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_15
0x97ac	    0x488b05000000	            mov rax, qword [0x040097f3] 	      5081	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_16
0x97b3	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5081	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_16
0x97b7	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5081	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_16
0x97be	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5081	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_16
0x97c4	          0x4863d0	                         movsxd rdx, eax	      5081	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_16
0x97c7	          0x4889d0	                            mov rax, rdx	      5081	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_16
0x97ca	        0x48c1e002	                              shl rax, 2	      5081	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_16
0x97ce	          0x4801d0	                            add rax, rdx	      5081	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_16
0x97d1	        0x48c1e005	                              shl rax, 5	      5081	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_16
0x97d5	          0x4801c8	                            add rax, rcx	      5081	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_16
0x97d8	    0x8b9500ffffff	            mov edx, dword [rbp - 0x100]	      5081	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_16
0x97de	        0x66895054	               mov word [rax + 0x54], dx	      5081	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_16
0x97e2	    0x488b05000000	            mov rax, qword [0x04009829] 	      5082	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_17
0x97e9	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5082	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_17
0x97ed	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5082	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_17
0x97f4	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5082	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_17
0x97fa	          0x4863d0	                         movsxd rdx, eax	      5082	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_17
0x97fd	          0x4889d0	                            mov rax, rdx	      5082	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_17
0x9800	        0x48c1e002	                              shl rax, 2	      5082	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_17
0x9804	          0x4801d0	                            add rax, rdx	      5082	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_17
0x9807	        0x48c1e005	                              shl rax, 5	      5082	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_17
0x980b	        0x488d1401	                    lea rdx, [rcx + rax]	      5082	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_17
0x980f	    0x8b0500000000	            mov eax, dword [0x04009855] 	      5082	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_17
0x9815	          0x894250	             mov dword [rdx + 0x50], eax	      5082	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_17
0x9818	    0x488b05000000	            mov rax, qword [0x0400985f] 	      5083	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_18
0x981f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5083	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_18
0x9823	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5083	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_18
0x982a	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5083	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_18
0x9830	          0x4863d0	                         movsxd rdx, eax	      5083	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_18
0x9833	          0x4889d0	                            mov rax, rdx	      5083	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_18
0x9836	        0x48c1e002	                              shl rax, 2	      5083	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_18
0x983a	          0x4801d0	                            add rax, rdx	      5083	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_18
0x983d	        0x48c1e005	                              shl rax, 5	      5083	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_18
0x9841	        0x488d1401	                    lea rdx, [rcx + rax]	      5083	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_18
0x9845	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	      5083	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_18
0x984b	          0x894224	             mov dword [rdx + 0x24], eax	      5083	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_18
0x984e	    0x488b05000000	            mov rax, qword [0x04009895] 	      5084	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_19
0x9855	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5084	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_19
0x9859	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5084	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_19
0x9860	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5084	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_19
0x9866	          0x4863d0	                         movsxd rdx, eax	      5084	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_19
0x9869	          0x4889d0	                            mov rax, rdx	      5084	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_19
0x986c	        0x48c1e002	                              shl rax, 2	      5084	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_19
0x9870	          0x4801d0	                            add rax, rdx	      5084	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_19
0x9873	        0x48c1e005	                              shl rax, 5	      5084	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_19
0x9877	        0x488d1401	                    lea rdx, [rcx + rax]	      5084	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_19
0x987b	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      5084	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_19
0x9881	          0x894230	             mov dword [rdx + 0x30], eax	      5084	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_19
0x9884	    0x488b05000000	            mov rax, qword [0x040098cb] 	      5085	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_20
0x988b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5085	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_20
0x988f	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5085	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_20
0x9896	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5085	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_20
0x989c	          0x4863d0	                         movsxd rdx, eax	      5085	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_20
0x989f	          0x4889d0	                            mov rax, rdx	      5085	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_20
0x98a2	        0x48c1e002	                              shl rax, 2	      5085	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_20
0x98a6	          0x4801d0	                            add rax, rdx	      5085	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_20
0x98a9	        0x48c1e005	                              shl rax, 5	      5085	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_20
0x98ad	        0x488d1401	                    lea rdx, [rcx + rax]	      5085	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_20
0x98b1	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      5085	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_20
0x98b8	        0x48894240	             mov qword [rdx + 0x40], rax	      5085	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_20
0x98bc	    0x488b05000000	            mov rax, qword [0x04009903] 	      5086	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_21
0x98c3	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5086	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_21
0x98c7	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5086	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_21
0x98ce	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5086	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_21
0x98d4	          0x4863d0	                         movsxd rdx, eax	      5086	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_21
0x98d7	          0x4889d0	                            mov rax, rdx	      5086	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_21
0x98da	        0x48c1e002	                              shl rax, 2	      5086	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_21
0x98de	          0x4801d0	                            add rax, rdx	      5086	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_21
0x98e1	        0x48c1e005	                              shl rax, 5	      5086	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_21
0x98e5	        0x488d1401	                    lea rdx, [rcx + rax]	      5086	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_21
0x98e9	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5087	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x98f0	        0x48894258	             mov qword [rdx + 0x58], rax	      5086	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_21
0x98f4	    0x488b05000000	            mov rax, qword [0x0400993b] 	      5089	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_22
0x98fb	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5089	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_22
0x98ff	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5089	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_22
0x9906	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5089	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_22
0x990c	          0x4863d0	                         movsxd rdx, eax	      5089	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_22
0x990f	          0x4889d0	                            mov rax, rdx	      5089	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_22
0x9912	        0x48c1e002	                              shl rax, 2	      5089	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_22
0x9916	          0x4801d0	                            add rax, rdx	      5089	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_22
0x9919	        0x48c1e005	                              shl rax, 5	      5089	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_22
0x991d	        0x488d1401	                    lea rdx, [rcx + rax]	      5089	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_22
0x9921	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      5089	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_22
0x9927	          0x894228	             mov dword [rdx + 0x28], eax	      5089	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_22
0x992a	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5091	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_5
0x9931	          0x4885c0	                           test rax, rax	      5091	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_5
0x9934	            0x7415	                            je 0x400998b	      5091	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_5
0x9936	    0x488b05000000	            mov rax, qword [0x0400997d] 	      5092	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_5
0x993d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5092	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_5
0x9941	    0xc78098020000	              mov dword [rax + 0x298], 1	      5092	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_5
0x994b	    0x488b05000000	            mov rax, qword [0x04009992] 	      5093	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_23
0x9952	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5093	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_23
0x9956	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      5093	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_23
0x995d	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5093	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_23
0x9963	          0x4863d0	                         movsxd rdx, eax	      5093	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_23
0x9966	          0x4889d0	                            mov rax, rdx	      5093	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_23
0x9969	        0x48c1e002	                              shl rax, 2	      5093	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_23
0x996d	          0x4801d0	                            add rax, rdx	      5093	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_23
0x9970	        0x48c1e005	                              shl rax, 5	      5093	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_23
0x9974	        0x488d1401	                    lea rdx, [rcx + rax]	      5093	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_23
0x9978	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5093	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_23
0x997f	        0x48894248	             mov qword [rdx + 0x48], rax	      5093	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_23
0x9983	    0x488b05000000	            mov rax, qword [0x040099ca] 	      5094	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x998a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5094	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x998e	    0x8b9060020000	           mov edx, dword [rax + 0x260] 	      5094	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x9994	          0x83c201	                              add edx, 1	      5094	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x9997	    0x899060020000	            mov dword [rax + 0x260], edx	      5094	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4
0x999d	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	      5097	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_6
0x99a3	          0x83e030	                           and eax, 0x30	      5097	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_6
0x99a6	            0x85c0	                           test eax, eax	      5097	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_6
0x99a8	            0x7425	                            je 0x4009a0f	      5097	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_6
0x99aa	    0x488b05000000	            mov rax, qword [0x040099f1] 	      5098	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_6
0x99b1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5098	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_6
0x99b5	    0x488b15000000	            mov rdx, qword [0x040099fc] 	      5098	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_6
0x99bc	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	      5098	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_6
0x99c0	    0x8b929c020000	           mov edx, dword [rdx + 0x29c] 	      5098	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_6
0x99c6	          0x83ca02	                               or edx, 2	      5098	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_6
0x99c9	    0x89909c020000	            mov dword [rax + 0x29c], edx	      5098	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_6
0x99cf	    0x8b8520ffffff	             mov eax, dword [rbp - 0xe0]	      5100	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_7
0x99d5	      0x2500200000	                         and eax, 0x2000	      5100	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_7
0x99da	            0x85c0	                           test eax, eax	      5100	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_7
0x99dc	            0x741a	                            je 0x4009a38	      5100	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_7
0x99de	    0x488b05000000	            mov rax, qword [0x04009a25] 	      5101	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_7
0x99e5	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5101	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_7
0x99e9	    0x8b900c030000	           mov edx, dword [rax + 0x30c] 	      5101	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_7
0x99ef	          0x83c201	                              add edx, 1	      5101	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_7
0x99f2	    0x89900c030000	            mov dword [rax + 0x30c], edx	      5101	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	IF_7
0x99f8	      0xbf23000000	                           mov edi, 0x23	      5104	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_24
0x99fd	      0xe800000000	                          call 0x4009a42	      5104	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_24
0x9a02	    0x488b05000000	            mov rax, qword [0x04009a49] 	      5105	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_25
0x9a09	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5105	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_25
0x9a0d	          0x4889c7	                            mov rdi, rax	      5105	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_25
0x9a10	      0xe800000000	                          call 0x4009a55	      5105	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_25
0x9a15	            0xeb6e	                           jmp 0x4009ac5	      5105	syntax.c	FUNCTION_80	IF_2	ELSE_1	IF_4	CALL_25
0x9a17	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5113	syntax.c	FUNCTION_80	CALL_26
0x9a1b	          0x4889c7	                            mov rdi, rax	      5113	syntax.c	FUNCTION_80	CALL_26
0x9a1e	      0xe800000000	                          call 0x4009a63	      5113	syntax.c	FUNCTION_80	CALL_26
0x9a23	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5114	syntax.c	FUNCTION_80	CALL_27
0x9a27	          0x4889c7	                            mov rdi, rax	      5114	syntax.c	FUNCTION_80	CALL_27
0x9a2a	      0xe800000000	                          call 0x4009a6f	      5114	syntax.c	FUNCTION_80	CALL_27
0x9a2f	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      5115	syntax.c	FUNCTION_80	CALL_28
0x9a36	          0x4889c7	                            mov rdi, rax	      5115	syntax.c	FUNCTION_80	CALL_28
0x9a39	      0xe800000000	                          call 0x4009a7e	      5115	syntax.c	FUNCTION_80	CALL_28
0x9a3e	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      5116	syntax.c	FUNCTION_80	CALL_29
0x9a45	          0x4889c7	                            mov rdi, rax	      5116	syntax.c	FUNCTION_80	CALL_29
0x9a48	      0xe800000000	                          call 0x4009a8d	      5116	syntax.c	FUNCTION_80	CALL_29
0x9a4d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      5117	syntax.c	FUNCTION_80	CALL_30
0x9a54	          0x4889c7	                            mov rdi, rax	      5117	syntax.c	FUNCTION_80	CALL_30
0x9a57	      0xe800000000	                          call 0x4009a9c	      5117	syntax.c	FUNCTION_80	CALL_30
0x9a5c	    0x4883bd10ffff	               cmp qword [rbp - 0xf0], 0	      5119	syntax.c	FUNCTION_80	IF_8
0x9a64	            0x751f	                           jne 0x4009ac5	      5119	syntax.c	FUNCTION_80	IF_8
0x9a66	      0xbf00000000	                              mov edi, 0	      5120	syntax.c	FUNCTION_80	CALL_32
0x9a6b	      0xe800000000	                          call 0x4009ab0	      5120	syntax.c	FUNCTION_80	CALL_32
0x9a70	          0x4889c2	                            mov rdx, rax	      5120	syntax.c	FUNCTION_80	CALL_32
0x9a73	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      5120	syntax.c	FUNCTION_80	CALL_32
0x9a7a	          0x4889c6	                            mov rsi, rax	      5120	syntax.c	FUNCTION_80	CALL_32
0x9a7d	          0x4889d7	                            mov rdi, rdx	      5120	syntax.c	FUNCTION_80	CALL_32
0x9a80	      0xe800000000	                          call 0x4009ac5	      5120	syntax.c	FUNCTION_80	CALL_32
0x9a85	        0x488b45f8	                mov rax, qword [rbp - 8]	      5121	syntax.c	FUNCTION_80
0x9a89	    0x644833042528	                xor rax, qword fs:[0x28]	      5121	syntax.c	FUNCTION_80
0x9a92	            0x7405	                            je 0x4009ad9	      5121	syntax.c	FUNCTION_80
0x9a94	      0xe800000000	                          call 0x4009ad9	      5121	syntax.c	FUNCTION_80
0x9a99	              0xc9	                                   leave	      5121	syntax.c	FUNCTION_80
0x9a9a	              0xc3	                                     ret	      5121	syntax.c	FUNCTION_80
syn_scl_name2id	FOR,1:DO,0:IF,2:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,5	64
0xa8d6	              0x55	                                push rbp	      5535	syntax.c	FUNCTION_84
0xa8d7	          0x4889e5	                            mov rbp, rsp	      5535	syntax.c	FUNCTION_84
0xa8da	        0x4883ec20	                           sub rsp, 0x20	      5535	syntax.c	FUNCTION_84
0xa8de	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5535	syntax.c	FUNCTION_84
0xa8e2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5540	syntax.c	FUNCTION_84	CALL_1
0xa8e6	          0x4889c7	                            mov rdi, rax	      5540	syntax.c	FUNCTION_84	CALL_1
0xa8e9	      0xe800000000	                          call 0x400a92e	      5540	syntax.c	FUNCTION_84	CALL_1
0xa8ee	        0x488945f8	                mov qword [rbp - 8], rax	      5540	syntax.c	FUNCTION_84	CALL_1
0xa8f2	      0x48837df800	                  cmp qword [rbp - 8], 0	      5541	syntax.c	FUNCTION_84	IF_1
0xa8f7	            0x750a	                           jne 0x400a943	      5541	syntax.c	FUNCTION_84	IF_1
0xa8f9	      0xb800000000	                              mov eax, 0	      5542	syntax.c	FUNCTION_84	IF_1
0xa8fe	      0xe9b5000000	                           jmp 0x400a9f8	      5542	syntax.c	FUNCTION_84	IF_1
0xa903	    0x488b05000000	            mov rax, qword [0x0400a94a] 	      5543	syntax.c	FUNCTION_84	FOR_1
0xa90a	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5543	syntax.c	FUNCTION_84	FOR_1
0xa90e	    0x8b8078020000	           mov eax, dword [rax + 0x278] 	      5543	syntax.c	FUNCTION_84	FOR_1
0xa914	          0x8945f4	              mov dword [rbp - 0xc], eax	      5543	syntax.c	FUNCTION_84	FOR_1
0xa917	            0xeb70	                           jmp 0x400a9c9	      5543	syntax.c	FUNCTION_84	FOR_1
0xa919	    0x488b05000000	            mov rax, qword [0x0400a960] 	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0xa920	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0xa924	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0xa92b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0xa92e	          0x4863d0	                         movsxd rdx, eax	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0xa931	          0x4889d0	                            mov rax, rdx	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0xa934	          0x4801c0	                            add rax, rax	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0xa937	          0x4801d0	                            add rax, rdx	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0xa93a	        0x48c1e003	                              shl rax, 3	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0xa93e	          0x4801c8	                            add rax, rcx	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0xa941	        0x488b4008	                mov rax, qword [rax + 8]	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0xa945	          0x4885c0	                           test rax, rax	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0xa948	            0x743f	                            je 0x400a9c9	      5544	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_2
0xa94a	    0x488b05000000	            mov rax, qword [0x0400a991] 	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_4
0xa951	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_4
0xa955	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_4
0xa95c	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_4
0xa95f	          0x4863d0	                         movsxd rdx, eax	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_4
0xa962	          0x4889d0	                            mov rax, rdx	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_4
0xa965	          0x4801c0	                            add rax, rax	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_4
0xa968	          0x4801d0	                            add rax, rdx	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_4
0xa96b	        0x48c1e003	                              shl rax, 3	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_4
0xa96f	          0x4801c8	                            add rax, rcx	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_4
0xa972	        0x488b5008	                mov rdx, qword [rax + 8]	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_4
0xa976	        0x488b45f8	                mov rax, qword [rbp - 8]	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_4
0xa97a	          0x4889d6	                            mov rsi, rdx	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_4
0xa97d	          0x4889c7	                            mov rdi, rax	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_4
0xa980	      0xe800000000	                          call 0x400a9c5	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_4
0xa985	            0x85c0	                           test eax, eax	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_4
0xa987	            0x740c	                            je 0x400a9d5	      5545	syntax.c	FUNCTION_84	FOR_1	IF_2	CALL_4
0xa989	        0x836df401	                sub dword [rbp - 0xc], 1	      5543	syntax.c	FUNCTION_84	FOR_1
0xa98d	        0x837df400	                cmp dword [rbp - 0xc], 0	      5543	syntax.c	FUNCTION_84	FOR_1
0xa991	            0x7986	                           jns 0x400a959	      5543	syntax.c	FUNCTION_84	FOR_1
0xa993	            0xeb01	                           jmp 0x400a9d6	      5543	syntax.c	FUNCTION_84	FOR_1
0xa995	              0x90	                                     nop	      5546	syntax.c	FUNCTION_84	FOR_1	IF_2
0xa996	        0x488b45f8	                mov rax, qword [rbp - 8]	      5547	syntax.c	FUNCTION_84	CALL_5
0xa99a	          0x4889c7	                            mov rdi, rax	      5547	syntax.c	FUNCTION_84	CALL_5
0xa99d	      0xe800000000	                          call 0x400a9e2	      5547	syntax.c	FUNCTION_84	CALL_5
0xa9a2	        0x837df400	                cmp dword [rbp - 0xc], 0	      5548	syntax.c	FUNCTION_84
0xa9a6	            0x780a	                            js 0x400a9f2	      5548	syntax.c	FUNCTION_84
0xa9a8	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      5548	syntax.c	FUNCTION_84
0xa9ab	       0x5d8590000	                         add eax, 0x59d8	      5548	syntax.c	FUNCTION_84
0xa9b0	            0xeb05	                           jmp 0x400a9f7	      5548	syntax.c	FUNCTION_84
0xa9b2	      0xb800000000	                              mov eax, 0	      5548	syntax.c	FUNCTION_84
0xa9b7	              0x90	                                     nop	      5548	syntax.c	FUNCTION_84
0xa9b8	              0xc9	                                   leave	      5549	syntax.c	FUNCTION_84
0xa9b9	              0xc3	                                     ret	      5549	syntax.c	FUNCTION_84
syn_cterm_attr2entry	FOR,0:DO,0:IF,1:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,1	19
0x11c7c	              0x55	                                push rbp	      9203	syntax.c	FUNCTION_140
0x11c7d	          0x4889e5	                            mov rbp, rsp	      9203	syntax.c	FUNCTION_140
0x11c80	          0x897dfc	                mov dword [rbp - 4], edi	      9203	syntax.c	FUNCTION_140
0x11c83	    0x816dfc000100	              sub dword [rbp - 4], 0x100	      9204	syntax.c	FUNCTION_140
0x11c8a	    0x8b0500000000	            mov eax, dword [0x04011cd0] 	      9205	syntax.c	FUNCTION_140	IF_1
0x11c90	          0x3b45fc	                cmp eax, dword [rbp - 4]	      9205	syntax.c	FUNCTION_140	IF_1
0x11c93	            0x7f07	                            jg 0x4011cdc	      9205	syntax.c	FUNCTION_140	IF_1
0x11c95	      0xb800000000	                              mov eax, 0	      9206	syntax.c	FUNCTION_140	IF_1
0x11c9a	            0xeb1e	                           jmp 0x4011cfa	      9206	syntax.c	FUNCTION_140	IF_1
0x11c9c	    0x488b0d000000	            mov rcx, qword [0x04011ce3] 	      9207	syntax.c	FUNCTION_140	CALL_1
0x11ca3	          0x8b45fc	                mov eax, dword [rbp - 4]	      9207	syntax.c	FUNCTION_140	CALL_1
0x11ca6	          0x4863d0	                         movsxd rdx, eax	      9207	syntax.c	FUNCTION_140	CALL_1
0x11ca9	          0x4889d0	                            mov rax, rdx	      9207	syntax.c	FUNCTION_140	CALL_1
0x11cac	        0x48c1e002	                              shl rax, 2	      9207	syntax.c	FUNCTION_140	CALL_1
0x11cb0	          0x4801d0	                            add rax, rdx	      9207	syntax.c	FUNCTION_140	CALL_1
0x11cb3	        0x48c1e003	                              shl rax, 3	      9207	syntax.c	FUNCTION_140	CALL_1
0x11cb7	          0x4801c8	                            add rax, rcx	      9207	syntax.c	FUNCTION_140	CALL_1
0x11cba	              0x5d	                                 pop rbp	      9208	syntax.c	FUNCTION_140
0x11cbb	              0xc3	                                     ret	      9208	syntax.c	FUNCTION_140
syn_incl_toplevel	FOR,0:DO,0:IF,3:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,3	70
0x8c9d	              0x55	                                push rbp	      4794	syntax.c	FUNCTION_77
0x8c9e	          0x4889e5	                            mov rbp, rsp	      4794	syntax.c	FUNCTION_77
0x8ca1	        0x4883ec30	                           sub rsp, 0x30	      4794	syntax.c	FUNCTION_77
0x8ca5	          0x897ddc	             mov dword [rbp - 0x24], edi	      4794	syntax.c	FUNCTION_77
0x8ca8	        0x488975d0	             mov qword [rbp - 0x30], rsi	      4794	syntax.c	FUNCTION_77
0x8cac	    0x64488b042528	                mov rax, qword fs:[0x28]	      4794	syntax.c	FUNCTION_77
0x8cb5	        0x488945f8	                mov qword [rbp - 8], rax	      4794	syntax.c	FUNCTION_77
0x8cb9	            0x31c0	                            xor eax, eax	      4794	syntax.c	FUNCTION_77
0x8cbb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4795	syntax.c	FUNCTION_77	IF_1
0x8cbf	            0x8b00	                    mov eax, dword [rax]	      4795	syntax.c	FUNCTION_77	IF_1
0x8cc1	          0x83e001	                              and eax, 1	      4795	syntax.c	FUNCTION_77	IF_1
0x8cc4	            0x85c0	                           test eax, eax	      4795	syntax.c	FUNCTION_77	IF_1
0x8cc6	     0xf85cf000000	                           jne 0x4008ddb	      4795	syntax.c	FUNCTION_77	IF_1
0x8ccc	    0x488b05000000	            mov rax, qword [0x04008d13] 	      4795	syntax.c	FUNCTION_77	IF_1
0x8cd3	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4795	syntax.c	FUNCTION_77	IF_1
0x8cd7	    0x8b8004030000	           mov eax, dword [rax + 0x304] 	      4795	syntax.c	FUNCTION_77	IF_1
0x8cdd	            0x85c0	                           test eax, eax	      4795	syntax.c	FUNCTION_77	IF_1
0x8cdf	     0xf84b6000000	                            je 0x4008ddb	      4795	syntax.c	FUNCTION_77	IF_1
0x8ce5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4797	syntax.c	FUNCTION_77
0x8ce9	            0x8b00	                    mov eax, dword [rax]	      4797	syntax.c	FUNCTION_77
0x8ceb	          0x83c801	                               or eax, 1	      4797	syntax.c	FUNCTION_77
0x8cee	            0x89c2	                            mov edx, eax	      4797	syntax.c	FUNCTION_77
0x8cf0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4797	syntax.c	FUNCTION_77
0x8cf4	            0x8910	                    mov dword [rax], edx	      4797	syntax.c	FUNCTION_77
0x8cf6	    0x488b05000000	            mov rax, qword [0x04008d3d] 	      4798	syntax.c	FUNCTION_77	IF_2
0x8cfd	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4798	syntax.c	FUNCTION_77	IF_2
0x8d01	    0x8b8004030000	           mov eax, dword [rax + 0x304] 	      4798	syntax.c	FUNCTION_77	IF_2
0x8d07	      0x3dd7590000	                         cmp eax, 0x59d7	      4798	syntax.c	FUNCTION_77	IF_2
0x8d0c	     0xf8e8a000000	                           jle 0x4008ddc	      4798	syntax.c	FUNCTION_77	IF_2
0x8d12	      0xbf04000000	                              mov edi, 4	      4801	syntax.c	FUNCTION_77	IF_2	CALL_1
0x8d17	      0xe800000000	                          call 0x4008d5c	      4801	syntax.c	FUNCTION_77	IF_2	CALL_1
0x8d1c	        0x488945f0	             mov qword [rbp - 0x10], rax	      4801	syntax.c	FUNCTION_77	IF_2	CALL_1
0x8d20	    0x488b05000000	            mov rax, qword [0x04008d67] 	      4802	syntax.c	FUNCTION_77	IF_2
0x8d27	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4802	syntax.c	FUNCTION_77	IF_2
0x8d2b	    0x8b8004030000	           mov eax, dword [rax + 0x304] 	      4802	syntax.c	FUNCTION_77	IF_2
0x8d31	      0x2dd8590000	                         sub eax, 0x59d8	      4802	syntax.c	FUNCTION_77	IF_2
0x8d36	          0x8945ec	             mov dword [rbp - 0x14], eax	      4802	syntax.c	FUNCTION_77	IF_2
0x8d39	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4804	syntax.c	FUNCTION_77	IF_2	IF_3
0x8d3d	          0x4885c0	                           test rax, rax	      4804	syntax.c	FUNCTION_77	IF_2	IF_3
0x8d40	            0x745a	                            je 0x4008ddc	      4804	syntax.c	FUNCTION_77	IF_2	IF_3
0x8d42	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4806	syntax.c	FUNCTION_77	IF_2	IF_3
0x8d46	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      4806	syntax.c	FUNCTION_77	IF_2	IF_3
0x8d49	          0x668910	                      mov word [rax], dx	      4806	syntax.c	FUNCTION_77	IF_2	IF_3
0x8d4c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4807	syntax.c	FUNCTION_77	IF_2	IF_3
0x8d50	        0x4883c002	                              add rax, 2	      4807	syntax.c	FUNCTION_77	IF_2	IF_3
0x8d54	      0x66c7000000	                       mov word [rax], 0	      4807	syntax.c	FUNCTION_77	IF_2	IF_3
0x8d59	    0x488b05000000	            mov rax, qword [0x04008da0] 	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_3
0x8d60	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_3
0x8d64	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_3
0x8d6b	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_3
0x8d6e	          0x4863d0	                         movsxd rdx, eax	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_3
0x8d71	          0x4889d0	                            mov rax, rdx	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_3
0x8d74	          0x4801c0	                            add rax, rax	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_3
0x8d77	          0x4801d0	                            add rax, rdx	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_3
0x8d7a	        0x48c1e003	                              shl rax, 3	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_3
0x8d7e	          0x4801c8	                            add rax, rcx	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_3
0x8d81	        0x488d4810	                   lea rcx, [rax + 0x10]	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_3
0x8d85	        0x488d45f0	                   lea rax, [rbp - 0x10]	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_3
0x8d89	      0xba02000000	                              mov edx, 2	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_3
0x8d8e	          0x4889c6	                            mov rsi, rax	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_3
0x8d91	          0x4889cf	                            mov rdi, rcx	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_3
0x8d94	      0xe85f180000	               call sym.syn_combine_list	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_3
0x8d99	            0xeb01	                           jmp 0x4008ddc	      4808	syntax.c	FUNCTION_77	IF_2	IF_3	CALL_3
0x8d9b	              0x90	                                     nop	      4796	syntax.c	FUNCTION_77	IF_1
0x8d9c	        0x488b45f8	                mov rax, qword [rbp - 8]	      4812	syntax.c	FUNCTION_77
0x8da0	    0x644833042528	                xor rax, qword fs:[0x28]	      4812	syntax.c	FUNCTION_77
0x8da9	            0x7405	                            je 0x4008df0	      4812	syntax.c	FUNCTION_77
0x8dab	      0xe800000000	                          call 0x4008df0	      4812	syntax.c	FUNCTION_77
0x8db0	              0xc9	                                   leave	      4812	syntax.c	FUNCTION_77
0x8db1	              0xc3	                                     ret	      4812	syntax.c	FUNCTION_77
syntax_end_parsing	FOR,0:DO,0:IF,2:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,1	29
0x2641	              0x55	                                push rbp	      1713	syntax.c	FUNCTION_22
0x2642	          0x4889e5	                            mov rbp, rsp	      1713	syntax.c	FUNCTION_22
0x2645	        0x4883ec18	                           sub rsp, 0x18	      1713	syntax.c	FUNCTION_22
0x2649	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1713	syntax.c	FUNCTION_22
0x264d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1716	syntax.c	FUNCTION_22	CALL_1
0x2651	          0x4889c7	                            mov rdi, rax	      1716	syntax.c	FUNCTION_22	CALL_1
0x2654	      0xe84ff4ffff	           call sym.syn_stack_find_entry	      1716	syntax.c	FUNCTION_22	CALL_1
0x2659	        0x488945f8	                mov qword [rbp - 8], rax	      1716	syntax.c	FUNCTION_22	CALL_1
0x265d	      0x48837df800	                  cmp qword [rbp - 8], 0	      1717	syntax.c	FUNCTION_22	IF_1
0x2662	            0x7419	                            je 0x40026bd	      1717	syntax.c	FUNCTION_22	IF_1
0x2664	        0x488b45f8	                mov rax, qword [rbp - 8]	      1717	syntax.c	FUNCTION_22	IF_1
0x2668	        0x488b4008	                mov rax, qword [rax + 8]	      1717	syntax.c	FUNCTION_22	IF_1
0x266c	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1717	syntax.c	FUNCTION_22	IF_1
0x2670	            0x7d0b	                           jge 0x40026bd	      1717	syntax.c	FUNCTION_22	IF_1
0x2672	        0x488b45f8	                mov rax, qword [rbp - 8]	      1718	syntax.c	FUNCTION_22	IF_1
0x2676	          0x488b00	                    mov rax, qword [rax]	      1718	syntax.c	FUNCTION_22	IF_1
0x2679	        0x488945f8	                mov qword [rbp - 8], rax	      1718	syntax.c	FUNCTION_22	IF_1
0x267d	      0x48837df800	                  cmp qword [rbp - 8], 0	      1720	syntax.c	FUNCTION_22	IF_2
0x2682	            0x741f	                            je 0x40026e3	      1720	syntax.c	FUNCTION_22	IF_2
0x2684	        0x488b45f8	                mov rax, qword [rbp - 8]	      1720	syntax.c	FUNCTION_22	IF_2
0x2688	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	      1720	syntax.c	FUNCTION_22	IF_2
0x268f	          0x4885c0	                           test rax, rax	      1720	syntax.c	FUNCTION_22	IF_2
0x2692	            0x740f	                            je 0x40026e3	      1720	syntax.c	FUNCTION_22	IF_2
0x2694	        0x488b45f8	                mov rax, qword [rbp - 8]	      1721	syntax.c	FUNCTION_22	IF_2
0x2698	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1721	syntax.c	FUNCTION_22	IF_2
0x269c	    0x488990d00000	             mov qword [rax + 0xd0], rdx	      1721	syntax.c	FUNCTION_22	IF_2
0x26a3	              0x90	                                     nop	      1722	syntax.c	FUNCTION_22
0x26a4	              0xc9	                                   leave	      1722	syntax.c	FUNCTION_22
0x26a5	              0xc3	                                     ret	      1722	syntax.c	FUNCTION_22
syn_cmd_reset	FOR,0:DO,0:IF,1:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,4	27
0x6d78	              0x55	                                push rbp	      3886	syntax.c	FUNCTION_59
0x6d79	          0x4889e5	                            mov rbp, rsp	      3886	syntax.c	FUNCTION_59
0x6d7c	        0x4883ec10	                           sub rsp, 0x10	      3886	syntax.c	FUNCTION_59
0x6d80	        0x48897df8	                mov qword [rbp - 8], rdi	      3886	syntax.c	FUNCTION_59
0x6d84	          0x8975f4	              mov dword [rbp - 0xc], esi	      3886	syntax.c	FUNCTION_59
0x6d87	        0x488b45f8	                mov rax, qword [rbp - 8]	      3887	syntax.c	FUNCTION_59	CALL_1
0x6d8b	          0x488b00	                    mov rax, qword [rax]	      3887	syntax.c	FUNCTION_59	CALL_1
0x6d8e	          0x4889c7	                            mov rdi, rax	      3887	syntax.c	FUNCTION_59	CALL_1
0x6d91	      0xe800000000	                          call 0x4006dd6	      3887	syntax.c	FUNCTION_59	CALL_1
0x6d96	          0x4889c2	                            mov rdx, rax	      3887	syntax.c	FUNCTION_59	CALL_1
0x6d99	        0x488b45f8	                mov rax, qword [rbp - 8]	      3887	syntax.c	FUNCTION_59	CALL_1
0x6d9d	        0x48895008	                mov qword [rax + 8], rdx	      3887	syntax.c	FUNCTION_59	CALL_1
0x6da1	        0x488b45f8	                mov rax, qword [rbp - 8]	      3888	syntax.c	FUNCTION_59	IF_1
0x6da5	          0x8b4030	            mov eax, dword [rax + 0x30] 	      3888	syntax.c	FUNCTION_59	IF_1
0x6da8	            0x85c0	                           test eax, eax	      3888	syntax.c	FUNCTION_59	IF_1
0x6daa	            0x7528	                           jne 0x4006e14	      3888	syntax.c	FUNCTION_59	IF_1
0x6dac	      0xbe00000000	                              mov esi, 0	      3890	syntax.c	FUNCTION_59	IF_1	CALL_2
0x6db1	      0xbf00000000	                              mov edi, 0	      3890	syntax.c	FUNCTION_59	IF_1	CALL_2
0x6db6	      0xe800000000	                          call 0x4006dfb	      3890	syntax.c	FUNCTION_59	IF_1	CALL_2
0x6dbb	      0xbf00000000	                              mov edi, 0	      3891	syntax.c	FUNCTION_59	IF_1	CALL_3
0x6dc0	      0xe800000000	                          call 0x4006e05	      3891	syntax.c	FUNCTION_59	IF_1	CALL_3
0x6dc5	      0xbe01000000	                              mov esi, 1	      3892	syntax.c	FUNCTION_59	IF_1	CALL_4
0x6dca	      0xbf00000000	                              mov edi, 0	      3892	syntax.c	FUNCTION_59	IF_1	CALL_4
0x6dcf	      0xe800000000	                          call 0x4006e14	      3892	syntax.c	FUNCTION_59	IF_1	CALL_4
0x6dd4	              0x90	                                     nop	      3894	syntax.c	FUNCTION_59
0x6dd5	              0xc9	                                   leave	      3894	syntax.c	FUNCTION_59
0x6dd6	              0xc3	                                     ret	      3894	syntax.c	FUNCTION_59
syn_get_foldlevel	FOR,1:DO,0:IF,4:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,2	55
0xcc9b	              0x55	                                push rbp	      6641	syntax.c	FUNCTION_106
0xcc9c	          0x4889e5	                            mov rbp, rsp	      6641	syntax.c	FUNCTION_106
0xcc9f	        0x4883ec20	                           sub rsp, 0x20	      6641	syntax.c	FUNCTION_106
0xcca3	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6641	syntax.c	FUNCTION_106
0xcca7	        0x488975e0	             mov qword [rbp - 0x20], rsi	      6641	syntax.c	FUNCTION_106
0xccab	    0xc745f8000000	                  mov dword [rbp - 8], 0	      6642	syntax.c	FUNCTION_106
0xccb2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6646	syntax.c	FUNCTION_106	IF_1
0xccb6	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6646	syntax.c	FUNCTION_106	IF_1
0xccba	    0x8b800c030000	           mov eax, dword [rax + 0x30c] 	      6646	syntax.c	FUNCTION_106	IF_1
0xccc0	            0x85c0	                           test eax, eax	      6646	syntax.c	FUNCTION_106	IF_1
0xccc2	            0x746d	                            je 0x400cd71	      6646	syntax.c	FUNCTION_106	IF_1
0xccc4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6647	syntax.c	FUNCTION_106	IF_1
0xccc8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6647	syntax.c	FUNCTION_106	IF_1
0xcccc	    0x8b8050020000	           mov eax, dword [rax + 0x250] 	      6647	syntax.c	FUNCTION_106	IF_1
0xccd2	            0x85c0	                           test eax, eax	      6647	syntax.c	FUNCTION_106	IF_1
0xccd4	            0x755b	                           jne 0x400cd71	      6647	syntax.c	FUNCTION_106	IF_1
0xccd6	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      6653	syntax.c	FUNCTION_106	IF_1	CALL_1
0xccda	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6653	syntax.c	FUNCTION_106	IF_1	CALL_1
0xccde	          0x4889d6	                            mov rsi, rdx	      6653	syntax.c	FUNCTION_106	IF_1	CALL_1
0xcce1	          0x4889c7	                            mov rdi, rax	      6653	syntax.c	FUNCTION_106	IF_1	CALL_1
0xcce4	      0xe800000000	                          call 0x400cd29	      6653	syntax.c	FUNCTION_106	IF_1	CALL_1
0xcce9	    0xc745fc000000	                  mov dword [rbp - 4], 0	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0xccf0	            0xeb34	                           jmp 0x400cd66	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0xccf2	    0x488b0d000000	            mov rcx, qword [0x0400cd39] 	      6656	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2	CALL_2
0xccf9	          0x8b45fc	                mov eax, dword [rbp - 4]	      6656	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2	CALL_2
0xccfc	          0x4863d0	                         movsxd rdx, eax	      6656	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2	CALL_2
0xccff	          0x4889d0	                            mov rax, rdx	      6656	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2	CALL_2
0xcd02	        0x48c1e003	                              shl rax, 3	      6656	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2	CALL_2
0xcd06	          0x4801d0	                            add rax, rdx	      6656	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2	CALL_2
0xcd09	        0x48c1e004	                              shl rax, 4	      6656	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2	CALL_2
0xcd0d	          0x4801c8	                            add rax, rcx	      6656	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2	CALL_2
0xcd10	        0x488b4068	            mov rax, qword [rax + 0x68] 	      6656	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2	CALL_2
0xcd14	      0x2500200000	                         and eax, 0x2000	      6656	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2	CALL_2
0xcd19	          0x4885c0	                           test rax, rax	      6656	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2	CALL_2
0xcd1c	            0x7404	                            je 0x400cd62	      6656	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2	CALL_2
0xcd1e	        0x8345f801	                  add dword [rbp - 8], 1	      6657	syntax.c	FUNCTION_106	IF_1	FOR_1	IF_2
0xcd22	        0x8345fc01	                  add dword [rbp - 4], 1	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0xcd26	    0x8b0500000000	            mov eax, dword [0x0400cd6c] 	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0xcd2c	          0x3b45fc	                cmp eax, dword [rbp - 4]	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0xcd2f	            0x7fc1	                            jg 0x400cd32	      6655	syntax.c	FUNCTION_106	IF_1	FOR_1
0xcd31	          0x8b45f8	                mov eax, dword [rbp - 8]	      6659	syntax.c	FUNCTION_106	IF_3
0xcd34	          0x4863d0	                         movsxd rdx, eax	      6659	syntax.c	FUNCTION_106	IF_3
0xcd37	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6659	syntax.c	FUNCTION_106	IF_3
0xcd3b	    0x488b80100200	           mov rax, qword [rax + 0x210] 	      6659	syntax.c	FUNCTION_106	IF_3
0xcd42	          0x4839c2	                            cmp rdx, rax	      6659	syntax.c	FUNCTION_106	IF_3
0xcd45	            0x7e1b	                           jle 0x400cda2	      6659	syntax.c	FUNCTION_106	IF_3
0xcd47	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6661	syntax.c	FUNCTION_106	IF_3
0xcd4b	    0x488b80100200	           mov rax, qword [rax + 0x210] 	      6661	syntax.c	FUNCTION_106	IF_3
0xcd52	          0x8945f8	                mov dword [rbp - 8], eax	      6661	syntax.c	FUNCTION_106	IF_3
0xcd55	        0x837df800	                  cmp dword [rbp - 8], 0	      6662	syntax.c	FUNCTION_106	IF_3	IF_4
0xcd59	            0x7907	                           jns 0x400cda2	      6662	syntax.c	FUNCTION_106	IF_3	IF_4
0xcd5b	    0xc745f8000000	                  mov dword [rbp - 8], 0	      6663	syntax.c	FUNCTION_106	IF_3	IF_4
0xcd62	          0x8b45f8	                mov eax, dword [rbp - 8]	      6665	syntax.c	FUNCTION_106
0xcd65	              0xc9	                                   leave	      6666	syntax.c	FUNCTION_106
0xcd66	              0xc3	                                     ret	      6666	syntax.c	FUNCTION_106
free_highlight_fonts	FOR,1:DO,0:IF,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,11	39
0x14a1b	              0x55	                                push rbp	     10349	syntax.c	FUNCTION_169
0x14a1c	          0x4889e5	                            mov rbp, rsp	     10349	syntax.c	FUNCTION_169
0x14a1f	        0x4883ec10	                           sub rsp, 0x10	     10349	syntax.c	FUNCTION_169
0x14a23	    0xc745fc000000	                  mov dword [rbp - 4], 0	     10352	syntax.c	FUNCTION_169	FOR_1
0x14a2a	            0xeb60	                           jmp 0x4014acc	     10352	syntax.c	FUNCTION_169	FOR_1
0x14a2c	    0x488b0d000000	            mov rcx, qword [0x04014a73] 	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_2
0x14a33	          0x8b45fc	                mov eax, dword [rbp - 4]	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_2
0x14a36	          0x4863d0	                         movsxd rdx, eax	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_2
0x14a39	          0x4889d0	                            mov rax, rdx	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_2
0x14a3c	        0x48c1e003	                              shl rax, 3	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_2
0x14a40	          0x4801d0	                            add rax, rdx	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_2
0x14a43	          0x4801c0	                            add rax, rax	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_2
0x14a46	          0x4801d0	                            add rax, rdx	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_2
0x14a49	        0x48c1e003	                              shl rax, 3	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_2
0x14a4d	          0x4801c8	                            add rax, rcx	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_2
0x14a50	        0x488b4058	            mov rax, qword [rax + 0x58] 	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_2
0x14a54	          0x4889c7	                            mov rdi, rax	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_2
0x14a57	      0xe800000000	                          call 0x4014a9c	     10354	syntax.c	FUNCTION_169	FOR_1	CALL_2
0x14a5c	    0x488b0d000000	            mov rcx, qword [0x04014aa3] 	     10355	syntax.c	FUNCTION_169	FOR_1	CALL_3
0x14a63	          0x8b45fc	                mov eax, dword [rbp - 4]	     10355	syntax.c	FUNCTION_169	FOR_1	CALL_3
0x14a66	          0x4863d0	                         movsxd rdx, eax	     10355	syntax.c	FUNCTION_169	FOR_1	CALL_3
0x14a69	          0x4889d0	                            mov rax, rdx	     10355	syntax.c	FUNCTION_169	FOR_1	CALL_3
0x14a6c	        0x48c1e003	                              shl rax, 3	     10355	syntax.c	FUNCTION_169	FOR_1	CALL_3
0x14a70	          0x4801d0	                            add rax, rdx	     10355	syntax.c	FUNCTION_169	FOR_1	CALL_3
0x14a73	          0x4801c0	                            add rax, rax	     10355	syntax.c	FUNCTION_169	FOR_1	CALL_3
0x14a76	          0x4801d0	                            add rax, rdx	     10355	syntax.c	FUNCTION_169	FOR_1	CALL_3
0x14a79	        0x48c1e003	                              shl rax, 3	     10355	syntax.c	FUNCTION_169	FOR_1	CALL_3
0x14a7d	          0x4801c8	                            add rax, rcx	     10355	syntax.c	FUNCTION_169	FOR_1	CALL_3
0x14a80	    0x48c740580000	               mov qword [rax + 0x58], 0	     10355	syntax.c	FUNCTION_169	FOR_1	CALL_3
0x14a88	        0x8345fc01	                  add dword [rbp - 4], 1	     10352	syntax.c	FUNCTION_169	FOR_1
0x14a8c	    0x8b0500000000	            mov eax, dword [0x04014ad2] 	     10352	syntax.c	FUNCTION_169	FOR_1
0x14a92	          0x3b45fc	                cmp eax, dword [rbp - 4]	     10352	syntax.c	FUNCTION_169	FOR_1
0x14a95	            0x7f95	                            jg 0x4014a6c	     10352	syntax.c	FUNCTION_169	FOR_1
0x14a97	    0x488b05000000	            mov rax, qword [0x04014ade] 	     10362	syntax.c	FUNCTION_169	CALL_7
0x14a9e	          0x4889c7	                            mov rdi, rax	     10362	syntax.c	FUNCTION_169	CALL_7
0x14aa1	      0xe800000000	                          call 0x4014ae6	     10362	syntax.c	FUNCTION_169	CALL_7
0x14aa6	              0x90	                                     nop	     10371	syntax.c	FUNCTION_169
0x14aa7	              0xc9	                                   leave	     10371	syntax.c	FUNCTION_169
0x14aa8	              0xc3	                                     ret	     10371	syntax.c	FUNCTION_169
validate_current_state	FOR,0:DO,0:IF,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,0	7
0x26d1	              0x55	                                push rbp	      1739	syntax.c	FUNCTION_24
0x26d2	          0x4889e5	                            mov rbp, rsp	      1739	syntax.c	FUNCTION_24
0x26d5	    0xc70500000000	           mov dword [0x0400271f], 0x90 	      1740	syntax.c	FUNCTION_24
0x26df	    0xc70500000000	               mov dword [0x04002729], 3	      1741	syntax.c	FUNCTION_24
0x26e9	              0x90	                                     nop	      1742	syntax.c	FUNCTION_24
0x26ea	              0x5d	                                 pop rbp	      1742	syntax.c	FUNCTION_24
0x26eb	              0xc3	                                     ret	      1742	syntax.c	FUNCTION_24
syn_cmd_cluster	FOR,1:DO,0:IF,11:SWITCH,0:functions,0:ELSE,4:WHILE,0:CALL,22	204
0xac9a	              0x55	                                push rbp	      5649	syntax.c	FUNCTION_88
0xac9b	          0x4889e5	                            mov rbp, rsp	      5649	syntax.c	FUNCTION_88
0xac9e	              0x53	                                push rbx	      5649	syntax.c	FUNCTION_88
0xac9f	        0x4883ec58	                           sub rsp, 0x58	      5649	syntax.c	FUNCTION_88
0xaca3	        0x48897da8	             mov qword [rbp - 0x58], rdi	      5649	syntax.c	FUNCTION_88
0xaca7	          0x8975a4	             mov dword [rbp - 0x5c], esi	      5649	syntax.c	FUNCTION_88
0xacaa	    0x64488b042528	                mov rax, qword fs:[0x28]	      5649	syntax.c	FUNCTION_88
0xacb3	        0x488945e8	             mov qword [rbp - 0x18], rax	      5649	syntax.c	FUNCTION_88
0xacb7	            0x31c0	                            xor eax, eax	      5649	syntax.c	FUNCTION_88
0xacb9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5650	syntax.c	FUNCTION_88
0xacbd	          0x488b00	                    mov rax, qword [rax]	      5650	syntax.c	FUNCTION_88
0xacc0	        0x488945e0	             mov qword [rbp - 0x20], rax	      5650	syntax.c	FUNCTION_88
0xacc4	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      5655	syntax.c	FUNCTION_88
0xaccb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5659	syntax.c	FUNCTION_88	CALL_1
0xaccf	          0x4889c7	                            mov rdi, rax	      5659	syntax.c	FUNCTION_88	CALL_1
0xacd2	      0xe800000000	                          call 0x400ad17	      5659	syntax.c	FUNCTION_88	CALL_1
0xacd7	          0x4889c2	                            mov rdx, rax	      5659	syntax.c	FUNCTION_88	CALL_1
0xacda	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5659	syntax.c	FUNCTION_88	CALL_1
0xacde	        0x48895008	                mov qword [rax + 8], rdx	      5659	syntax.c	FUNCTION_88	CALL_1
0xace2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5660	syntax.c	FUNCTION_88	IF_1
0xace6	          0x8b4030	            mov eax, dword [rax + 0x30] 	      5660	syntax.c	FUNCTION_88	IF_1
0xace9	            0x85c0	                           test eax, eax	      5660	syntax.c	FUNCTION_88	IF_1
0xaceb	     0xf857d020000	                           jne 0x400afae	      5660	syntax.c	FUNCTION_88	IF_1
0xacf1	        0x488d55c8	                   lea rdx, [rbp - 0x38]	      5663	syntax.c	FUNCTION_88	CALL_2
0xacf5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5663	syntax.c	FUNCTION_88	CALL_2
0xacf9	          0x4889d6	                            mov rsi, rdx	      5663	syntax.c	FUNCTION_88	CALL_2
0xacfc	          0x4889c7	                            mov rdi, rax	      5663	syntax.c	FUNCTION_88	CALL_2
0xacff	      0xe8e6d8ffff	                 call sym.get_group_name	      5663	syntax.c	FUNCTION_88	CALL_2
0xad04	        0x488945d0	             mov qword [rbp - 0x30], rax	      5663	syntax.c	FUNCTION_88	CALL_2
0xad08	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5665	syntax.c	FUNCTION_88	IF_2
0xad0c	          0x4885c0	                           test rax, rax	      5665	syntax.c	FUNCTION_88	IF_2
0xad0f	     0xf8405020000	                            je 0x400af5a	      5665	syntax.c	FUNCTION_88	IF_2
0xad15	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5667	syntax.c	FUNCTION_88	IF_2	CALL_3
0xad19	          0x4889c2	                            mov rdx, rax	      5667	syntax.c	FUNCTION_88	IF_2	CALL_3
0xad1c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5667	syntax.c	FUNCTION_88	IF_2	CALL_3
0xad20	          0x4829c2	                            sub rdx, rax	      5667	syntax.c	FUNCTION_88	IF_2	CALL_3
0xad23	          0x4889d0	                            mov rax, rdx	      5667	syntax.c	FUNCTION_88	IF_2	CALL_3
0xad26	            0x89c2	                            mov edx, eax	      5667	syntax.c	FUNCTION_88	IF_2	CALL_3
0xad28	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5667	syntax.c	FUNCTION_88	IF_2	CALL_3
0xad2c	            0x89d6	                            mov esi, edx	      5667	syntax.c	FUNCTION_88	IF_2	CALL_3
0xad2e	          0x4889c7	                            mov rdi, rax	      5667	syntax.c	FUNCTION_88	IF_2	CALL_3
0xad31	      0xe8d6fcffff	              call sym.syn_check_cluster	      5667	syntax.c	FUNCTION_88	IF_2	CALL_3
0xad36	          0x8945c4	             mov dword [rbp - 0x3c], eax	      5667	syntax.c	FUNCTION_88	IF_2	CALL_3
0xad39	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      5668	syntax.c	FUNCTION_88	IF_2	IF_3
0xad3d	     0xf842e020000	                            je 0x400afb1	      5668	syntax.c	FUNCTION_88	IF_2	IF_3
0xad43	    0x816dc4d85900	          sub dword [rbp - 0x3c], 0x59d8	      5670	syntax.c	FUNCTION_88	IF_2
0xad4a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5674	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_4
0xad4e	      0xba03000000	                              mov edx, 3	      5674	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_4
0xad53	      0xbe00000000	                              mov esi, 0	      5674	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_4
0xad58	          0x4889c7	                            mov rdi, rax	      5674	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_4
0xad5b	      0xe800000000	                          call 0x400ada0	      5674	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_4
0xad60	            0x85c0	                           test eax, eax	      5674	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_4
0xad62	            0x7540	                           jne 0x400ade4	      5674	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_4
0xad64	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0xad68	        0x4883c003	                              add rax, 3	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0xad6c	           0xfb600	                   movzx eax, byte [rax]	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0xad6f	            0x3c20	                            cmp al, 0x20	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0xad71	            0x741e	                            je 0x400add1	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0xad73	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0xad77	        0x4883c003	                              add rax, 3	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0xad7b	           0xfb600	                   movzx eax, byte [rax]	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0xad7e	            0x3c09	                               cmp al, 9	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0xad80	            0x740f	                            je 0x400add1	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0xad82	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0xad86	        0x4883c003	                              add rax, 3	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0xad8a	           0xfb600	                   movzx eax, byte [rax]	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0xad8d	            0x3c3d	                            cmp al, 0x3d	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0xad8f	            0x7513	                           jne 0x400ade4	      5675	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4	CALL_5
0xad91	    0xc745bc030000	               mov dword [rbp - 0x44], 3	      5677	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4
0xad98	    0xc745c0020000	               mov dword [rbp - 0x40], 2	      5678	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4
0xad9f	      0xe9b4000000	                           jmp 0x400ae98	      5678	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_4
0xada4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5680	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_6
0xada8	      0xba06000000	                              mov edx, 6	      5680	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_6
0xadad	      0xbe00000000	                              mov esi, 0	      5680	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_6
0xadb2	          0x4889c7	                            mov rdi, rax	      5680	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_6
0xadb5	      0xe800000000	                          call 0x400adfa	      5680	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_6
0xadba	            0x85c0	                           test eax, eax	      5680	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_6
0xadbc	            0x753d	                           jne 0x400ae3b	      5680	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_6
0xadbe	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0xadc2	        0x4883c006	                              add rax, 6	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0xadc6	           0xfb600	                   movzx eax, byte [rax]	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0xadc9	            0x3c20	                            cmp al, 0x20	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0xadcb	            0x741e	                            je 0x400ae2b	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0xadcd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0xadd1	        0x4883c006	                              add rax, 6	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0xadd5	           0xfb600	                   movzx eax, byte [rax]	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0xadd8	            0x3c09	                               cmp al, 9	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0xadda	            0x740f	                            je 0x400ae2b	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0xaddc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0xade0	        0x4883c006	                              add rax, 6	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0xade4	           0xfb600	                   movzx eax, byte [rax]	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0xade7	            0x3c3d	                            cmp al, 0x3d	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0xade9	            0x7510	                           jne 0x400ae3b	      5681	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5	CALL_7
0xadeb	    0xc745bc060000	               mov dword [rbp - 0x44], 6	      5683	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5
0xadf2	    0xc745c0030000	               mov dword [rbp - 0x40], 3	      5684	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5
0xadf9	            0xeb5d	                           jmp 0x400ae98	      5684	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_1	IF_5
0xadfb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5686	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_8
0xadff	      0xba08000000	                              mov edx, 8	      5686	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_8
0xae04	      0xbe00000000	                              mov esi, 0	      5686	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_8
0xae09	          0x4889c7	                            mov rdi, rax	      5686	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_8
0xae0c	      0xe800000000	                          call 0x400ae51	      5686	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_8
0xae11	            0x85c0	                           test eax, eax	      5686	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_8
0xae13	     0xf85de000000	                           jne 0x400af37	      5686	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_8
0xae19	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0xae1d	        0x4883c008	                              add rax, 8	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0xae21	           0xfb600	                   movzx eax, byte [rax]	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0xae24	            0x3c20	                            cmp al, 0x20	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0xae26	            0x7422	                            je 0x400ae8a	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0xae28	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0xae2c	        0x4883c008	                              add rax, 8	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0xae30	           0xfb600	                   movzx eax, byte [rax]	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0xae33	            0x3c09	                               cmp al, 9	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0xae35	            0x7413	                            je 0x400ae8a	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0xae37	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0xae3b	        0x4883c008	                              add rax, 8	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0xae3f	           0xfb600	                   movzx eax, byte [rax]	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0xae42	            0x3c3d	                            cmp al, 0x3d	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0xae44	     0xf85ad000000	                           jne 0x400af37	      5687	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6	CALL_9
0xae4a	    0xc745bc080000	               mov dword [rbp - 0x44], 8	      5689	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6
0xae51	    0xc745c0010000	               mov dword [rbp - 0x40], 1	      5690	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_2	IF_6
0xae58	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      5695	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3
0xae60	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0xae64	          0x8b4830	            mov ecx, dword [rax + 0x30] 	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0xae67	        0x488d55d8	                   lea rdx, [rbp - 0x28]	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0xae6b	          0x8b75bc	             mov esi, dword [rbp - 0x44]	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0xae6e	        0x488d45d0	                   lea rax, [rbp - 0x30]	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0xae72	          0x4889c7	                            mov rdi, rax	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0xae75	      0xe8b00b0000	                    call sym.get_id_list	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0xae7a	            0x85c0	                           test eax, eax	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0xae7c	            0x751b	                           jne 0x400aed9	      5696	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_10
0xae7e	        0x488b5dd0	             mov rbx, qword [rbp - 0x30]	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0xae82	      0xbf00000000	                              mov edi, 0	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0xae87	      0xe800000000	                          call 0x400aecc	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0xae8c	          0x4889de	                            mov rsi, rbx	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0xae8f	          0x4889c7	                            mov rdi, rax	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0xae92	      0xe800000000	                          call 0x400aed7	      5698	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7	CALL_12
0xae97	            0xeb5e	                           jmp 0x400af37	      5699	syntax.c	FUNCTION_88	IF_2	FOR_1	ELSE_3	IF_7
0xae99	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      5701	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8
0xae9d	            0x7840	                            js 0x400af1f	      5701	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8
0xae9f	    0x488b05000000	            mov rax, qword [0x0400aee6] 	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_14
0xaea6	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_14
0xaeaa	    0x488b88880200	           mov rcx, qword [rax + 0x288] 	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_14
0xaeb1	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_14
0xaeb4	          0x4863d0	                         movsxd rdx, eax	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_14
0xaeb7	          0x4889d0	                            mov rax, rdx	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_14
0xaeba	          0x4801c0	                            add rax, rax	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_14
0xaebd	          0x4801d0	                            add rax, rdx	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_14
0xaec0	        0x48c1e003	                              shl rax, 3	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_14
0xaec4	          0x4801c8	                            add rax, rcx	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_14
0xaec7	        0x488d4810	                   lea rcx, [rax + 0x10]	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_14
0xaecb	          0x8b55c0	             mov edx, dword [rbp - 0x40]	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_14
0xaece	        0x488d45d8	                   lea rax, [rbp - 0x28]	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_14
0xaed2	          0x4889c6	                            mov rsi, rax	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_14
0xaed5	          0x4889cf	                            mov rdi, rcx	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_14
0xaed8	      0xe81bf7ffff	               call sym.syn_combine_list	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_14
0xaedd	            0xeb0c	                           jmp 0x400af2b	      5702	syntax.c	FUNCTION_88	IF_2	FOR_1	IF_8	CALL_14
0xaedf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5705	syntax.c	FUNCTION_88	IF_2	FOR_1	CALL_15
0xaee3	          0x4889c7	                            mov rdi, rax	      5705	syntax.c	FUNCTION_88	IF_2	FOR_1	CALL_15
0xaee6	      0xe800000000	                          call 0x400af2b	      5705	syntax.c	FUNCTION_88	IF_2	FOR_1	CALL_15
0xaeeb	    0xc745b8010000	               mov dword [rbp - 0x48], 1	      5706	syntax.c	FUNCTION_88	IF_2	FOR_1
0xaef2	      0xe953feffff	                           jmp 0x400ad8a	      5707	syntax.c	FUNCTION_88	IF_2	FOR_1
0xaef7	        0x837db800	               cmp dword [rbp - 0x48], 0	      5709	syntax.c	FUNCTION_88	IF_2	IF_9
0xaefb	            0x741d	                            je 0x400af5a	      5709	syntax.c	FUNCTION_88	IF_2	IF_9
0xaefd	      0xbf23000000	                           mov edi, 0x23	      5711	syntax.c	FUNCTION_88	IF_2	IF_9	CALL_16
0xaf02	      0xe800000000	                          call 0x400af47	      5711	syntax.c	FUNCTION_88	IF_2	IF_9	CALL_16
0xaf07	    0x488b05000000	            mov rax, qword [0x0400af4e] 	      5712	syntax.c	FUNCTION_88	IF_2	IF_9	CALL_17
0xaf0e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5712	syntax.c	FUNCTION_88	IF_2	IF_9	CALL_17
0xaf12	          0x4889c7	                            mov rdi, rax	      5712	syntax.c	FUNCTION_88	IF_2	IF_9	CALL_17
0xaf15	      0xe800000000	                          call 0x400af5a	      5712	syntax.c	FUNCTION_88	IF_2	IF_9	CALL_17
0xaf1a	        0x837db800	               cmp dword [rbp - 0x48], 0	      5716	syntax.c	FUNCTION_88	IF_10
0xaf1e	            0x7512	                           jne 0x400af72	      5716	syntax.c	FUNCTION_88	IF_10
0xaf20	      0xbf00000000	                              mov edi, 0	      5717	syntax.c	FUNCTION_88	CALL_19
0xaf25	      0xe800000000	                          call 0x400af6a	      5717	syntax.c	FUNCTION_88	CALL_19
0xaf2a	          0x4889c7	                            mov rdi, rax	      5717	syntax.c	FUNCTION_88	CALL_19
0xaf2d	      0xe800000000	                          call 0x400af72	      5717	syntax.c	FUNCTION_88	CALL_19
0xaf32	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5718	syntax.c	FUNCTION_88	IF_11	CALL_20
0xaf36	          0x4885c0	                           test rax, rax	      5718	syntax.c	FUNCTION_88	IF_11	CALL_20
0xaf39	            0x7415	                            je 0x400af90	      5718	syntax.c	FUNCTION_88	IF_11	CALL_20
0xaf3b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5718	syntax.c	FUNCTION_88	IF_11	CALL_20
0xaf3f	           0xfb600	                   movzx eax, byte [rax]	      5718	syntax.c	FUNCTION_88	IF_11	CALL_20
0xaf42	           0xfb6c0	                           movzx eax, al	      5718	syntax.c	FUNCTION_88	IF_11	CALL_20
0xaf45	            0x89c7	                            mov edi, eax	      5718	syntax.c	FUNCTION_88	IF_11	CALL_20
0xaf47	      0xe800000000	                          call 0x400af8c	      5718	syntax.c	FUNCTION_88	IF_11	CALL_20
0xaf4c	            0x85c0	                           test eax, eax	      5718	syntax.c	FUNCTION_88	IF_11	CALL_20
0xaf4e	            0x7522	                           jne 0x400afb2	      5718	syntax.c	FUNCTION_88	IF_11	CALL_20
0xaf50	      0xbf00000000	                              mov edi, 0	      5719	syntax.c	FUNCTION_88	CALL_22
0xaf55	      0xe800000000	                          call 0x400af9a	      5719	syntax.c	FUNCTION_88	CALL_22
0xaf5a	          0x4889c2	                            mov rdx, rax	      5719	syntax.c	FUNCTION_88	CALL_22
0xaf5d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5719	syntax.c	FUNCTION_88	CALL_22
0xaf61	          0x4889c6	                            mov rsi, rax	      5719	syntax.c	FUNCTION_88	CALL_22
0xaf64	          0x4889d7	                            mov rdi, rdx	      5719	syntax.c	FUNCTION_88	CALL_22
0xaf67	      0xe800000000	                          call 0x400afac	      5719	syntax.c	FUNCTION_88	CALL_22
0xaf6c	            0xeb04	                           jmp 0x400afb2	      5719	syntax.c	FUNCTION_88	CALL_22
0xaf6e	              0x90	                                     nop	      5661	syntax.c	FUNCTION_88	IF_1
0xaf6f	            0xeb01	                           jmp 0x400afb2	      5661	syntax.c	FUNCTION_88	IF_1
0xaf71	              0x90	                                     nop	      5669	syntax.c	FUNCTION_88	IF_2	IF_3
0xaf72	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5720	syntax.c	FUNCTION_88
0xaf76	    0x644833042528	                xor rax, qword fs:[0x28]	      5720	syntax.c	FUNCTION_88
0xaf7f	            0x7405	                            je 0x400afc6	      5720	syntax.c	FUNCTION_88
0xaf81	      0xe800000000	                          call 0x400afc6	      5720	syntax.c	FUNCTION_88
0xaf86	        0x4883c458	                           add rsp, 0x58	      5720	syntax.c	FUNCTION_88
0xaf8a	              0x5b	                                 pop rbx	      5720	syntax.c	FUNCTION_88
0xaf8b	              0x5d	                                 pop rbp	      5720	syntax.c	FUNCTION_88
0xaf8c	              0xc3	                                     ret	      5720	syntax.c	FUNCTION_88
syn_name2attr	FOR,0:DO,0:IF,1:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,2	17
0x12e49	              0x55	                                push rbp	      9654	syntax.c	FUNCTION_149
0x12e4a	          0x4889e5	                            mov rbp, rsp	      9654	syntax.c	FUNCTION_149
0x12e4d	        0x4883ec20	                           sub rsp, 0x20	      9654	syntax.c	FUNCTION_149
0x12e51	        0x48897de8	             mov qword [rbp - 0x18], rdi	      9654	syntax.c	FUNCTION_149
0x12e55	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9655	syntax.c	FUNCTION_149	CALL_1
0x12e59	          0x4889c7	                            mov rdi, rax	      9655	syntax.c	FUNCTION_149	CALL_1
0x12e5c	      0xe800000000	                          call 0x4012ea1	      9655	syntax.c	FUNCTION_149	CALL_1
0x12e61	          0x8945fc	                mov dword [rbp - 4], eax	      9655	syntax.c	FUNCTION_149	CALL_1
0x12e64	        0x837dfc00	                  cmp dword [rbp - 4], 0	      9657	syntax.c	FUNCTION_149	IF_1
0x12e68	            0x740c	                            je 0x4012eb6	      9657	syntax.c	FUNCTION_149	IF_1
0x12e6a	          0x8b45fc	                mov eax, dword [rbp - 4]	      9658	syntax.c	FUNCTION_149	CALL_2
0x12e6d	            0x89c7	                            mov edi, eax	      9658	syntax.c	FUNCTION_149	CALL_2
0x12e6f	      0xe800000000	                          call 0x4012eb4	      9658	syntax.c	FUNCTION_149	CALL_2
0x12e74	            0xeb05	                           jmp 0x4012ebb	      9658	syntax.c	FUNCTION_149	CALL_2
0x12e76	      0xb800000000	                              mov eax, 0	      9659	syntax.c	FUNCTION_149
0x12e7b	              0xc9	                                   leave	      9660	syntax.c	FUNCTION_149
0x12e7c	              0xc3	                                     ret	      9660	syntax.c	FUNCTION_149
syn_clear_one	FOR,1:DO,0:IF,2:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,4	60
0x6c3e	              0x55	                                push rbp	      3839	syntax.c	FUNCTION_56
0x6c3f	          0x4889e5	                            mov rbp, rsp	      3839	syntax.c	FUNCTION_56
0x6c42	        0x4883ec20	                           sub rsp, 0x20	      3839	syntax.c	FUNCTION_56
0x6c46	          0x897dec	             mov dword [rbp - 0x14], edi	      3839	syntax.c	FUNCTION_56
0x6c49	          0x8975e8	             mov dword [rbp - 0x18], esi	      3839	syntax.c	FUNCTION_56
0x6c4c	        0x837de800	               cmp dword [rbp - 0x18], 0	      3844	syntax.c	FUNCTION_56	IF_1
0x6c50	            0x753a	                           jne 0x4006ccc	      3844	syntax.c	FUNCTION_56	IF_1
0x6c52	    0x488b05000000	            mov rax, qword [0x04006c99] 	      3846	syntax.c	FUNCTION_56	IF_1	CALL_1
0x6c59	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3846	syntax.c	FUNCTION_56	IF_1	CALL_1
0x6c5d	          0x4889c2	                            mov rdx, rax	      3846	syntax.c	FUNCTION_56	IF_1	CALL_1
0x6c60	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3846	syntax.c	FUNCTION_56	IF_1	CALL_1
0x6c63	          0x4889d6	                            mov rsi, rdx	      3846	syntax.c	FUNCTION_56	IF_1	CALL_1
0x6c66	            0x89c7	                            mov edi, eax	      3846	syntax.c	FUNCTION_56	IF_1	CALL_1
0x6c68	      0xe810150000	              call sym.syn_clear_keyword	      3846	syntax.c	FUNCTION_56	IF_1	CALL_1
0x6c6d	    0x488b05000000	            mov rax, qword [0x04006cb4] 	      3847	syntax.c	FUNCTION_56	IF_1	CALL_2
0x6c74	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3847	syntax.c	FUNCTION_56	IF_1	CALL_2
0x6c78	    0x488d90280100	                  lea rdx, [rax + 0x128]	      3847	syntax.c	FUNCTION_56	IF_1	CALL_2
0x6c7f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3847	syntax.c	FUNCTION_56	IF_1	CALL_2
0x6c82	          0x4889d6	                            mov rsi, rdx	      3847	syntax.c	FUNCTION_56	IF_1	CALL_2
0x6c85	            0x89c7	                            mov edi, eax	      3847	syntax.c	FUNCTION_56	IF_1	CALL_2
0x6c87	      0xe8f1140000	              call sym.syn_clear_keyword	      3847	syntax.c	FUNCTION_56	IF_1	CALL_2
0x6c8c	    0x488b05000000	            mov rax, qword [0x04006cd3] 	      3851	syntax.c	FUNCTION_56	FOR_1
0x6c93	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3851	syntax.c	FUNCTION_56	FOR_1
0x6c97	    0x8b8060020000	           mov eax, dword [rax + 0x260] 	      3851	syntax.c	FUNCTION_56	FOR_1
0x6c9d	          0x8945f4	              mov dword [rbp - 0xc], eax	      3851	syntax.c	FUNCTION_56	FOR_1
0x6ca0	            0xeb65	                           jmp 0x4006d47	      3851	syntax.c	FUNCTION_56	FOR_1
0x6ca2	    0x488b05000000	            mov rax, qword [0x04006ce9] 	      3853	syntax.c	FUNCTION_56	FOR_1	CALL_3
0x6ca9	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3853	syntax.c	FUNCTION_56	FOR_1	CALL_3
0x6cad	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      3853	syntax.c	FUNCTION_56	FOR_1	CALL_3
0x6cb4	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      3853	syntax.c	FUNCTION_56	FOR_1	CALL_3
0x6cb7	          0x4863d0	                         movsxd rdx, eax	      3853	syntax.c	FUNCTION_56	FOR_1	CALL_3
0x6cba	          0x4889d0	                            mov rax, rdx	      3853	syntax.c	FUNCTION_56	FOR_1	CALL_3
0x6cbd	        0x48c1e002	                              shl rax, 2	      3853	syntax.c	FUNCTION_56	FOR_1	CALL_3
0x6cc1	          0x4801d0	                            add rax, rdx	      3853	syntax.c	FUNCTION_56	FOR_1	CALL_3
0x6cc4	        0x48c1e005	                              shl rax, 5	      3853	syntax.c	FUNCTION_56	FOR_1	CALL_3
0x6cc8	          0x4801c8	                            add rax, rcx	      3853	syntax.c	FUNCTION_56	FOR_1	CALL_3
0x6ccb	        0x488945f8	                mov qword [rbp - 8], rax	      3853	syntax.c	FUNCTION_56	FOR_1	CALL_3
0x6ccf	        0x488b45f8	                mov rax, qword [rbp - 8]	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x6cd3	         0xfb74054	           movzx eax, word [rax + 0x54] 	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x6cd7	              0x98	                                    cwde	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x6cd8	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x6cdb	            0x752a	                           jne 0x4006d47	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x6cdd	        0x488b45f8	                mov rax, qword [rbp - 8]	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x6ce1	         0xfb64001	               movzx eax, byte [rax + 1]	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x6ce5	           0xfbec0	                           movsx eax, al	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x6ce8	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x6ceb	            0x7402	                            je 0x4006d2f	      3854	syntax.c	FUNCTION_56	FOR_1	IF_2
0x6ced	            0xeb18	                           jmp 0x4006d47	      3855	syntax.c	FUNCTION_56	FOR_1	IF_2
0x6cef	    0x488b05000000	            mov rax, qword [0x04006d36] 	      3856	syntax.c	FUNCTION_56	FOR_1	CALL_4
0x6cf6	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3856	syntax.c	FUNCTION_56	FOR_1	CALL_4
0x6cfa	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      3856	syntax.c	FUNCTION_56	FOR_1	CALL_4
0x6cfd	            0x89d6	                            mov esi, edx	      3856	syntax.c	FUNCTION_56	FOR_1	CALL_4
0x6cff	          0x4889c7	                            mov rdi, rax	      3856	syntax.c	FUNCTION_56	FOR_1	CALL_4
0x6d02	      0xe81dfaffff	             call sym.syn_remove_pattern	      3856	syntax.c	FUNCTION_56	FOR_1	CALL_4
0x6d07	        0x836df401	                sub dword [rbp - 0xc], 1	      3851	syntax.c	FUNCTION_56	FOR_1
0x6d0b	        0x837df400	                cmp dword [rbp - 0xc], 0	      3851	syntax.c	FUNCTION_56	FOR_1
0x6d0f	            0x7991	                           jns 0x4006ce2	      3851	syntax.c	FUNCTION_56	FOR_1
0x6d11	              0x90	                                     nop	      3858	syntax.c	FUNCTION_56
0x6d12	              0xc9	                                   leave	      3858	syntax.c	FUNCTION_56
0x6d13	              0xc3	                                     ret	      3858	syntax.c	FUNCTION_56
syn_stack_apply_changes	FOR,0:DO,0:IF,0:SWITCH,0:functions,1:ELSE,0:WHILE,0:CALL,1	37
0x15c8	              0x55	                                push rbp	      1308	syntax.c	FUNCTION_14
0x15c9	          0x4889e5	                            mov rbp, rsp	      1308	syntax.c	FUNCTION_14
0x15cc	        0x4883ec20	                           sub rsp, 0x20	      1308	syntax.c	FUNCTION_14
0x15d0	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1308	syntax.c	FUNCTION_14
0x15d4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1311	syntax.c	FUNCTION_14	CALL_1
0x15d8	    0x488d90681700	                 lea rdx, [rax + 0x1768]	      1311	syntax.c	FUNCTION_14	CALL_1
0x15df	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1311	syntax.c	FUNCTION_14	CALL_1
0x15e3	          0x4889c6	                            mov rsi, rax	      1311	syntax.c	FUNCTION_14	CALL_1
0x15e6	          0x4889d7	                            mov rdi, rdx	      1311	syntax.c	FUNCTION_14	CALL_1
0x15e9	      0xe860000000	  call sym.syn_stack_apply_changes_block	      1311	syntax.c	FUNCTION_14	CALL_1
0x15ee	    0x488b05000000	            mov rax, qword [0x04001635] 	      1313	syntax.c	FUNCTION_14
0x15f5	        0x488945f8	                mov qword [rbp - 8], rax	      1313	syntax.c	FUNCTION_14
0x15f9	            0xeb49	                           jmp 0x4001684	      1313	syntax.c	FUNCTION_14
0x15fb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1315	syntax.c	FUNCTION_14	FUNCTION_1	IF_1
0x15ff	        0x488b4008	                mov rax, qword [rax + 8]	      1315	syntax.c	FUNCTION_14	FUNCTION_1	IF_1
0x1603	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1315	syntax.c	FUNCTION_14	FUNCTION_1	IF_1
0x1607	            0x752f	                           jne 0x4001678	      1315	syntax.c	FUNCTION_14	FUNCTION_1	IF_1
0x1609	        0x488b45f8	                mov rax, qword [rbp - 8]	      1315	syntax.c	FUNCTION_14	FUNCTION_1	IF_1
0x160d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1315	syntax.c	FUNCTION_14	FUNCTION_1	IF_1
0x1611	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1315	syntax.c	FUNCTION_14	FUNCTION_1	IF_1
0x1615	    0x4881c2681700	                         add rdx, 0x1768	      1315	syntax.c	FUNCTION_14	FUNCTION_1	IF_1
0x161c	          0x4839d0	                            cmp rax, rdx	      1315	syntax.c	FUNCTION_14	FUNCTION_1	IF_1
0x161f	            0x7417	                            je 0x4001678	      1315	syntax.c	FUNCTION_14	FUNCTION_1	IF_1
0x1621	        0x488b45f8	                mov rax, qword [rbp - 8]	      1316	syntax.c	FUNCTION_14	FUNCTION_1	CALL_1
0x1625	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1316	syntax.c	FUNCTION_14	FUNCTION_1	CALL_1
0x1629	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1316	syntax.c	FUNCTION_14	FUNCTION_1	CALL_1
0x162d	          0x4889d6	                            mov rsi, rdx	      1316	syntax.c	FUNCTION_14	FUNCTION_1	CALL_1
0x1630	          0x4889c7	                            mov rdi, rax	      1316	syntax.c	FUNCTION_14	FUNCTION_1	CALL_1
0x1633	      0xe816000000	  call sym.syn_stack_apply_changes_block	      1316	syntax.c	FUNCTION_14	FUNCTION_1	CALL_1
0x1638	        0x488b45f8	                mov rax, qword [rbp - 8]	      1313	syntax.c	FUNCTION_14
0x163c	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1313	syntax.c	FUNCTION_14
0x1640	        0x488945f8	                mov qword [rbp - 8], rax	      1313	syntax.c	FUNCTION_14
0x1644	      0x48837df800	                  cmp qword [rbp - 8], 0	      1313	syntax.c	FUNCTION_14
0x1649	            0x75b0	                           jne 0x400163b	      1313	syntax.c	FUNCTION_14
0x164b	              0x90	                                     nop	      1318	syntax.c	FUNCTION_14
0x164c	              0xc9	                                   leave	      1318	syntax.c	FUNCTION_14
0x164d	              0xc3	                                     ret	      1318	syntax.c	FUNCTION_14
load_colors	FOR,0:DO,0:IF,2:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,7	56
0xd5f3	              0x55	                                push rbp	      7212	syntax.c	FUNCTION_114
0xd5f4	          0x4889e5	                            mov rbp, rsp	      7212	syntax.c	FUNCTION_114
0xd5f7	        0x4883ec20	                           sub rsp, 0x20	      7212	syntax.c	FUNCTION_114
0xd5fb	        0x48897de8	             mov qword [rbp - 0x18], rdi	      7212	syntax.c	FUNCTION_114
0xd5ff	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      7214	syntax.c	FUNCTION_114
0xd606	    0x8b0500000000	            mov eax, dword [0x0400d64c] 	      7220	syntax.c	FUNCTION_114	IF_1
0xd60c	            0x85c0	                           test eax, eax	      7220	syntax.c	FUNCTION_114	IF_1
0xd60e	            0x740a	                            je 0x400d65a	      7220	syntax.c	FUNCTION_114	IF_1
0xd610	      0xb801000000	                              mov eax, 1	      7221	syntax.c	FUNCTION_114	IF_1
0xd615	      0xe9d2000000	                           jmp 0x400d72c	      7221	syntax.c	FUNCTION_114	IF_1
0xd61a	    0xc70500000000	               mov dword [0x0400d664], 1	      7223	syntax.c	FUNCTION_114
0xd624	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7224	syntax.c	FUNCTION_114	CALL_2
0xd628	          0x4889c7	                            mov rdi, rax	      7224	syntax.c	FUNCTION_114	CALL_2
0xd62b	      0xe800000000	                          call 0x400d670	      7224	syntax.c	FUNCTION_114	CALL_2
0xd630	          0x83c00c	                            add eax, 0xc	      7224	syntax.c	FUNCTION_114	CALL_2
0xd633	            0x89c7	                            mov edi, eax	      7224	syntax.c	FUNCTION_114	CALL_2
0xd635	      0xe800000000	                          call 0x400d67a	      7224	syntax.c	FUNCTION_114	CALL_2
0xd63a	        0x488945f8	                mov qword [rbp - 8], rax	      7224	syntax.c	FUNCTION_114	CALL_2
0xd63e	      0x48837df800	                  cmp qword [rbp - 8], 0	      7225	syntax.c	FUNCTION_114	IF_2
0xd643	     0xf8496000000	                            je 0x400d71f	      7225	syntax.c	FUNCTION_114	IF_2
0xd649	    0x488b0d000000	            mov rcx, qword [0x0400d690] 	      7227	syntax.c	FUNCTION_114	IF_2	CALL_3
0xd650	    0x488b05000000	            mov rax, qword [0x0400d697] 	      7228	syntax.c	FUNCTION_114	IF_2
0xd657	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      7227	syntax.c	FUNCTION_114	IF_2	CALL_3
0xd65e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7227	syntax.c	FUNCTION_114	IF_2	CALL_3
0xd662	          0x4989c8	                             mov r8, rcx	      7227	syntax.c	FUNCTION_114	IF_2	CALL_3
0xd665	      0xb900000000	                              mov ecx, 0	      7227	syntax.c	FUNCTION_114	IF_2	CALL_3
0xd66a	          0x4889c6	                            mov rsi, rax	      7227	syntax.c	FUNCTION_114	IF_2	CALL_3
0xd66d	      0xbf1a000000	                           mov edi, 0x1a	      7227	syntax.c	FUNCTION_114	IF_2	CALL_3
0xd672	      0xe800000000	                          call 0x400d6b7	      7227	syntax.c	FUNCTION_114	IF_2	CALL_3
0xd677	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      7229	syntax.c	FUNCTION_114	IF_2	CALL_4
0xd67b	        0x488b45f8	                mov rax, qword [rbp - 8]	      7229	syntax.c	FUNCTION_114	IF_2	CALL_4
0xd67f	      0xbe00000000	                              mov esi, 0	      7229	syntax.c	FUNCTION_114	IF_2	CALL_4
0xd684	          0x4889c7	                            mov rdi, rax	      7229	syntax.c	FUNCTION_114	IF_2	CALL_4
0xd687	      0xb800000000	                              mov eax, 0	      7229	syntax.c	FUNCTION_114	IF_2	CALL_4
0xd68c	      0xe800000000	                          call 0x400d6d1	      7229	syntax.c	FUNCTION_114	IF_2	CALL_4
0xd691	        0x488b45f8	                mov rax, qword [rbp - 8]	      7230	syntax.c	FUNCTION_114	IF_2	CALL_5
0xd695	      0xbe18000000	                           mov esi, 0x18	      7230	syntax.c	FUNCTION_114	IF_2	CALL_5
0xd69a	          0x4889c7	                            mov rdi, rax	      7230	syntax.c	FUNCTION_114	IF_2	CALL_5
0xd69d	      0xe800000000	                          call 0x400d6e2	      7230	syntax.c	FUNCTION_114	IF_2	CALL_5
0xd6a2	          0x8945f4	              mov dword [rbp - 0xc], eax	      7230	syntax.c	FUNCTION_114	IF_2	CALL_5
0xd6a5	        0x488b45f8	                mov rax, qword [rbp - 8]	      7231	syntax.c	FUNCTION_114	IF_2	CALL_6
0xd6a9	          0x4889c7	                            mov rdi, rax	      7231	syntax.c	FUNCTION_114	IF_2	CALL_6
0xd6ac	      0xe800000000	                          call 0x400d6f1	      7231	syntax.c	FUNCTION_114	IF_2	CALL_6
0xd6b1	    0x488b0d000000	            mov rcx, qword [0x0400d6f8] 	      7232	syntax.c	FUNCTION_114	IF_2	CALL_7
0xd6b8	    0x488b05000000	            mov rax, qword [0x0400d6ff] 	      7232	syntax.c	FUNCTION_114	IF_2	CALL_7
0xd6bf	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      7232	syntax.c	FUNCTION_114	IF_2	CALL_7
0xd6c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7232	syntax.c	FUNCTION_114	IF_2	CALL_7
0xd6ca	          0x4989c8	                             mov r8, rcx	      7232	syntax.c	FUNCTION_114	IF_2	CALL_7
0xd6cd	      0xb900000000	                              mov ecx, 0	      7232	syntax.c	FUNCTION_114	IF_2	CALL_7
0xd6d2	          0x4889c6	                            mov rsi, rax	      7232	syntax.c	FUNCTION_114	IF_2	CALL_7
0xd6d5	      0xbf19000000	                           mov edi, 0x19	      7232	syntax.c	FUNCTION_114	IF_2	CALL_7
0xd6da	      0xe800000000	                          call 0x400d71f	      7232	syntax.c	FUNCTION_114	IF_2	CALL_7
0xd6df	    0xc70500000000	               mov dword [0x0400d729], 0	      7234	syntax.c	FUNCTION_114
0xd6e9	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      7236	syntax.c	FUNCTION_114
0xd6ec	              0xc9	                                   leave	      7237	syntax.c	FUNCTION_114
0xd6ed	              0xc3	                                     ret	      7237	syntax.c	FUNCTION_114
syn_getcurline	FOR,0:DO,0:IF,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,1	10
0x582d	              0x55	                                push rbp	      3304	syntax.c	FUNCTION_42
0x582e	          0x4889e5	                            mov rbp, rsp	      3304	syntax.c	FUNCTION_42
0x5831	    0x488b0d000000	            mov rcx, qword [0x04005878] 	      3305	syntax.c	FUNCTION_42	CALL_1
0x5838	    0x488b05000000	            mov rax, qword [0x0400587f] 	      3305	syntax.c	FUNCTION_42	CALL_1
0x583f	      0xba00000000	                              mov edx, 0	      3305	syntax.c	FUNCTION_42	CALL_1
0x5844	          0x4889ce	                            mov rsi, rcx	      3305	syntax.c	FUNCTION_42	CALL_1
0x5847	          0x4889c7	                            mov rdi, rax	      3305	syntax.c	FUNCTION_42	CALL_1
0x584a	      0xe800000000	                          call 0x400588f	      3305	syntax.c	FUNCTION_42	CALL_1
0x584f	              0x5d	                                 pop rbp	      3306	syntax.c	FUNCTION_42
0x5850	              0xc3	                                     ret	      3306	syntax.c	FUNCTION_42
syn_id2name	FOR,0:DO,0:IF,1:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,1	24
0x12e9f	              0x55	                                push rbp	      9679	syntax.c	FUNCTION_151
0x12ea0	          0x4889e5	                            mov rbp, rsp	      9679	syntax.c	FUNCTION_151
0x12ea3	          0x897dfc	                mov dword [rbp - 4], edi	      9679	syntax.c	FUNCTION_151
0x12ea6	        0x837dfc00	                  cmp dword [rbp - 4], 0	      9680	syntax.c	FUNCTION_151	IF_1
0x12eaa	            0x7e0b	                           jle 0x4012ef7	      9680	syntax.c	FUNCTION_151	IF_1
0x12eac	    0x8b0500000000	            mov eax, dword [0x04012ef2] 	      9680	syntax.c	FUNCTION_151	IF_1
0x12eb2	          0x3b45fc	                cmp eax, dword [rbp - 4]	      9680	syntax.c	FUNCTION_151	IF_1
0x12eb5	            0x7d07	                           jge 0x4012efe	      9680	syntax.c	FUNCTION_151	IF_1
0x12eb7	      0xb800000000	                              mov eax, 0	      9681	syntax.c	FUNCTION_151	IF_1
0x12ebc	            0xeb2d	                           jmp 0x4012f2b	      9681	syntax.c	FUNCTION_151	IF_1
0x12ebe	    0x488b0d000000	            mov rcx, qword [0x04012f05] 	      9682	syntax.c	FUNCTION_151	CALL_1
0x12ec5	          0x8b45fc	                mov eax, dword [rbp - 4]	      9682	syntax.c	FUNCTION_151	CALL_1
0x12ec8	          0x4863d0	                         movsxd rdx, eax	      9682	syntax.c	FUNCTION_151	CALL_1
0x12ecb	          0x4889d0	                            mov rax, rdx	      9682	syntax.c	FUNCTION_151	CALL_1
0x12ece	        0x48c1e003	                              shl rax, 3	      9682	syntax.c	FUNCTION_151	CALL_1
0x12ed2	          0x4801d0	                            add rax, rdx	      9682	syntax.c	FUNCTION_151	CALL_1
0x12ed5	          0x4801c0	                            add rax, rax	      9682	syntax.c	FUNCTION_151	CALL_1
0x12ed8	          0x4801d0	                            add rax, rdx	      9682	syntax.c	FUNCTION_151	CALL_1
0x12edb	        0x48c1e003	                              shl rax, 3	      9682	syntax.c	FUNCTION_151	CALL_1
0x12edf	    0x482d98000000	                           sub rax, 0x98	      9682	syntax.c	FUNCTION_151	CALL_1
0x12ee5	          0x4801c8	                            add rax, rcx	      9682	syntax.c	FUNCTION_151	CALL_1
0x12ee8	          0x488b00	                    mov rax, qword [rax]	      9682	syntax.c	FUNCTION_151	CALL_1
0x12eeb	              0x5d	                                 pop rbp	      9683	syntax.c	FUNCTION_151
0x12eec	              0xc3	                                     ret	      9683	syntax.c	FUNCTION_151
get_syntax_name	FOR,0:DO,0:IF,0:SWITCH,1:functions,0:ELSE,0:WHILE,0:CALL,0	35
0xcaf6	              0x55	                                push rbp	      6530	syntax.c	ELSE_5	FUNCTION_101
0xcaf7	          0x4889e5	                            mov rbp, rsp	      6530	syntax.c	ELSE_5	FUNCTION_101
0xcafa	        0x48897df8	                mov qword [rbp - 8], rdi	      6530	syntax.c	ELSE_5	FUNCTION_101
0xcafe	          0x8975f4	              mov dword [rbp - 0xc], esi	      6530	syntax.c	ELSE_5	FUNCTION_101
0xcb01	    0x8b0500000000	            mov eax, dword [0x0400cb47] 	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0xcb07	          0x83f801	                              cmp eax, 1	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0xcb0a	            0x7425	                            je 0x400cb71	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0xcb0c	          0x83f801	                              cmp eax, 1	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0xcb0f	            0x720c	                            jb 0x400cb5d	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0xcb11	          0x83f802	                              cmp eax, 2	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0xcb14	            0x742a	                            je 0x400cb80	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0xcb16	          0x83f803	                              cmp eax, 3	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0xcb19	            0x7434	                            je 0x400cb8f	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0xcb1b	            0xeb41	                           jmp 0x400cb9e	      6531	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0xcb1d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      6534	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0xcb20	            0x4898	                                    cdqe	      6534	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0xcb22	        0x48c1e004	                              shl rax, 4	      6534	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0xcb26	    0x480500000000	                              add rax, 0	      6534	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0xcb2c	          0x488b00	                    mov rax, qword [rax]	      6534	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0xcb2f	            0xeb32	                           jmp 0x400cba3	      6534	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0xcb31	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      6538	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0xcb34	            0x4898	                                    cdqe	      6538	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0xcb36	    0x488b04c50000	                  mov rax, qword [rax*8]	      6538	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0xcb3e	            0xeb23	                           jmp 0x400cba3	      6538	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0xcb40	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      6544	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0xcb43	            0x4898	                                    cdqe	      6544	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0xcb45	    0x488b04c50000	                  mov rax, qword [rax*8]	      6544	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0xcb4d	            0xeb14	                           jmp 0x400cba3	      6544	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0xcb4f	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      6552	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0xcb52	            0x4898	                                    cdqe	      6552	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0xcb54	    0x488b04c50000	                  mov rax, qword [rax*8]	      6552	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0xcb5c	            0xeb05	                           jmp 0x400cba3	      6552	syntax.c	ELSE_5	FUNCTION_101	SWITCH_1
0xcb5e	      0xb800000000	                              mov eax, 0	      6555	syntax.c	ELSE_5	FUNCTION_101
0xcb63	              0x5d	                                 pop rbp	      6556	syntax.c	ELSE_5	FUNCTION_101
0xcb64	              0xc3	                                     ret	      6556	syntax.c	ELSE_5	FUNCTION_101
push_next_match	FOR,0:DO,0:IF,6:SWITCH,0:functions,0:ELSE,1:WHILE,0:CALL,13	233
0x3daa	              0x55	                                push rbp	      2518	syntax.c	FUNCTION_30
0x3dab	          0x4889e5	                            mov rbp, rsp	      2518	syntax.c	FUNCTION_30
0x3dae	        0x4883ec20	                           sub rsp, 0x20	      2518	syntax.c	FUNCTION_30
0x3db2	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2518	syntax.c	FUNCTION_30
0x3db6	    0x488b05000000	            mov rax, qword [0x04003dfd] 	      2524	syntax.c	FUNCTION_30	CALL_1
0x3dbd	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      2524	syntax.c	FUNCTION_30	CALL_1
0x3dc4	    0x8b0500000000	            mov eax, dword [0x04003e0a] 	      2524	syntax.c	FUNCTION_30	CALL_1
0x3dca	          0x4863d0	                         movsxd rdx, eax	      2524	syntax.c	FUNCTION_30	CALL_1
0x3dcd	          0x4889d0	                            mov rax, rdx	      2524	syntax.c	FUNCTION_30	CALL_1
0x3dd0	        0x48c1e002	                              shl rax, 2	      2524	syntax.c	FUNCTION_30	CALL_1
0x3dd4	          0x4801d0	                            add rax, rdx	      2524	syntax.c	FUNCTION_30	CALL_1
0x3dd7	        0x48c1e005	                              shl rax, 5	      2524	syntax.c	FUNCTION_30	CALL_1
0x3ddb	          0x4801c8	                            add rax, rcx	      2524	syntax.c	FUNCTION_30	CALL_1
0x3dde	        0x488945f8	                mov qword [rbp - 8], rax	      2524	syntax.c	FUNCTION_30	CALL_1
0x3de2	    0x8b0500000000	            mov eax, dword [0x04003e28] 	      2529	syntax.c	FUNCTION_30	IF_1	CALL_2
0x3de8	            0x89c7	                            mov edi, eax	      2529	syntax.c	FUNCTION_30	IF_1	CALL_2
0x3dea	      0xe8000d0000	             call sym.push_current_state	      2529	syntax.c	FUNCTION_30	IF_1	CALL_2
0x3def	          0x83f801	                              cmp eax, 1	      2529	syntax.c	FUNCTION_30	IF_1	CALL_2
0x3df2	     0xf8590030000	                           jne 0x40041c8	      2529	syntax.c	FUNCTION_30	IF_1	CALL_2
0x3df8	    0x488b0d000000	            mov rcx, qword [0x04003e3f] 	      2535	syntax.c	FUNCTION_30	IF_1	CALL_3
0x3dff	    0x8b0500000000	            mov eax, dword [0x04003e45] 	      2535	syntax.c	FUNCTION_30	IF_1	CALL_3
0x3e05	          0x4863d0	                         movsxd rdx, eax	      2535	syntax.c	FUNCTION_30	IF_1	CALL_3
0x3e08	          0x4889d0	                            mov rax, rdx	      2535	syntax.c	FUNCTION_30	IF_1	CALL_3
0x3e0b	        0x48c1e003	                              shl rax, 3	      2535	syntax.c	FUNCTION_30	IF_1	CALL_3
0x3e0f	          0x4801d0	                            add rax, rdx	      2535	syntax.c	FUNCTION_30	IF_1	CALL_3
0x3e12	        0x48c1e004	                              shl rax, 4	      2535	syntax.c	FUNCTION_30	IF_1	CALL_3
0x3e16	    0x482d90000000	                           sub rax, 0x90	      2535	syntax.c	FUNCTION_30	IF_1	CALL_3
0x3e1c	          0x4801c8	                            add rax, rcx	      2535	syntax.c	FUNCTION_30	IF_1	CALL_3
0x3e1f	        0x488945e8	             mov qword [rbp - 0x18], rax	      2535	syntax.c	FUNCTION_30	IF_1	CALL_3
0x3e23	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2536	syntax.c	FUNCTION_30	IF_1
0x3e27	    0x488b05000000	            mov rax, qword [0x04003e6e] 	      2536	syntax.c	FUNCTION_30	IF_1
0x3e2e	    0x488b15000000	            mov rdx, qword [0x04003e75] 	      2536	syntax.c	FUNCTION_30	IF_1
0x3e35	        0x48894128	             mov qword [rcx + 0x28], rax	      2536	syntax.c	FUNCTION_30	IF_1
0x3e39	        0x48895130	             mov qword [rcx + 0x30], rdx	      2536	syntax.c	FUNCTION_30	IF_1
0x3e3d	    0x8b1500000000	            mov edx, dword [0x04003e83] 	      2537	syntax.c	FUNCTION_30	IF_1
0x3e43	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2537	syntax.c	FUNCTION_30	IF_1
0x3e47	          0x895010	             mov dword [rax + 0x10], edx	      2537	syntax.c	FUNCTION_30	IF_1
0x3e4a	    0x488b05000000	            mov rax, qword [0x04003e91] 	      2538	syntax.c	FUNCTION_30	IF_1
0x3e51	            0x89c2	                            mov edx, eax	      2538	syntax.c	FUNCTION_30	IF_1
0x3e53	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2538	syntax.c	FUNCTION_30	IF_1
0x3e57	          0x89500c	              mov dword [rax + 0xc], edx	      2538	syntax.c	FUNCTION_30	IF_1
0x3e5a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2539	syntax.c	FUNCTION_30	IF_1
0x3e5e	          0x8b4024	            mov eax, dword [rax + 0x24] 	      2539	syntax.c	FUNCTION_30	IF_1
0x3e61	          0x4863d0	                         movsxd rdx, eax	      2539	syntax.c	FUNCTION_30	IF_1
0x3e64	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2539	syntax.c	FUNCTION_30	IF_1
0x3e68	        0x48895068	             mov qword [rax + 0x68], rdx	      2539	syntax.c	FUNCTION_30	IF_1
0x3e6c	    0x8b0500000000	            mov eax, dword [0x04003eb2] 	      2541	syntax.c	FUNCTION_30	IF_1
0x3e72	          0x8d5001	                      lea edx, [rax + 1]	      2541	syntax.c	FUNCTION_30	IF_1
0x3e75	    0x891500000000	            mov dword [0x04003ebb], edx 	      2541	syntax.c	FUNCTION_30	IF_1
0x3e7b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2541	syntax.c	FUNCTION_30	IF_1
0x3e7f	          0x894270	             mov dword [rdx + 0x70], eax	      2541	syntax.c	FUNCTION_30	IF_1
0x3e82	        0x488b45f8	                mov rax, qword [rbp - 8]	      2542	syntax.c	FUNCTION_30	IF_1
0x3e86	          0x8b5028	            mov edx, dword [rax + 0x28] 	      2542	syntax.c	FUNCTION_30	IF_1
0x3e89	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2542	syntax.c	FUNCTION_30	IF_1
0x3e8d	          0x895074	             mov dword [rax + 0x74], edx	      2542	syntax.c	FUNCTION_30	IF_1
0x3e90	    0x8b0500000000	            mov eax, dword [0x04003ed6] 	      2543	syntax.c	FUNCTION_30	IF_1	IF_2
0x3e96	          0x83f801	                              cmp eax, 1	      2543	syntax.c	FUNCTION_30	IF_1	IF_2
0x3e99	            0x7e46	                           jle 0x4003f21	      2543	syntax.c	FUNCTION_30	IF_1	IF_2
0x3e9b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2544	syntax.c	FUNCTION_30	IF_1	IF_2
0x3e9f	        0x488b4868	            mov rcx, qword [rax + 0x68] 	      2544	syntax.c	FUNCTION_30	IF_1	IF_2
0x3ea3	    0x488b35000000	            mov rsi, qword [0x04003eea] 	      2545	syntax.c	FUNCTION_30	IF_1	CALL_4
0x3eaa	    0x8b0500000000	            mov eax, dword [0x04003ef0] 	      2545	syntax.c	FUNCTION_30	IF_1	CALL_4
0x3eb0	          0x4863d0	                         movsxd rdx, eax	      2545	syntax.c	FUNCTION_30	IF_1	CALL_4
0x3eb3	          0x4889d0	                            mov rax, rdx	      2545	syntax.c	FUNCTION_30	IF_1	CALL_4
0x3eb6	        0x48c1e003	                              shl rax, 3	      2545	syntax.c	FUNCTION_30	IF_1	CALL_4
0x3eba	          0x4801d0	                            add rax, rdx	      2545	syntax.c	FUNCTION_30	IF_1	CALL_4
0x3ebd	        0x48c1e004	                              shl rax, 4	      2545	syntax.c	FUNCTION_30	IF_1	CALL_4
0x3ec1	    0x482d20010000	                          sub rax, 0x120	      2545	syntax.c	FUNCTION_30	IF_1	CALL_4
0x3ec7	          0x4801f0	                            add rax, rsi	      2545	syntax.c	FUNCTION_30	IF_1	CALL_4
0x3eca	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2545	syntax.c	FUNCTION_30	IF_1	CALL_4
0x3ece	      0x2500000200	                        and eax, 0x20000	      2545	syntax.c	FUNCTION_30	IF_1	CALL_4
0x3ed3	          0x4809c1	                             or rcx, rax	      2544	syntax.c	FUNCTION_30	IF_1	IF_2
0x3ed6	          0x4889ca	                            mov rdx, rcx	      2544	syntax.c	FUNCTION_30	IF_1	IF_2
0x3ed9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2544	syntax.c	FUNCTION_30	IF_1	IF_2
0x3edd	        0x48895068	             mov qword [rax + 0x68], rdx	      2544	syntax.c	FUNCTION_30	IF_1	IF_2
0x3ee1	        0x488b45f8	                mov rax, qword [rbp - 8]	      2547	syntax.c	FUNCTION_30	IF_1
0x3ee5	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      2547	syntax.c	FUNCTION_30	IF_1
0x3ee9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2547	syntax.c	FUNCTION_30	IF_1
0x3eed	    0x488990800000	             mov qword [rax + 0x80], rdx	      2547	syntax.c	FUNCTION_30	IF_1
0x3ef4	    0x488b05000000	            mov rax, qword [0x04003f3b] 	      2548	syntax.c	FUNCTION_30	IF_1	CALL_5
0x3efb	          0x4889c7	                            mov rdi, rax	      2548	syntax.c	FUNCTION_30	IF_1	CALL_5
0x3efe	      0xe800000000	                          call 0x4003f43	      2548	syntax.c	FUNCTION_30	IF_1	CALL_5
0x3f03	          0x4889c2	                            mov rdx, rax	      2548	syntax.c	FUNCTION_30	IF_1	CALL_5
0x3f06	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2548	syntax.c	FUNCTION_30	IF_1	CALL_5
0x3f0a	    0x488990880000	             mov qword [rax + 0x88], rdx	      2548	syntax.c	FUNCTION_30	IF_1	CALL_5
0x3f11	        0x488b45f8	                mov rax, qword [rbp - 8]	      2549	syntax.c	FUNCTION_30	IF_1	IF_3
0x3f15	           0xfb600	                   movzx eax, byte [rax]	      2549	syntax.c	FUNCTION_30	IF_1	IF_3
0x3f18	            0x3c02	                               cmp al, 2	      2549	syntax.c	FUNCTION_30	IF_1	IF_3
0x3f1a	            0x7531	                           jne 0x4003f8d	      2549	syntax.c	FUNCTION_30	IF_1	IF_3
0x3f1c	        0x488b45f8	                mov rax, qword [rbp - 8]	      2549	syntax.c	FUNCTION_30	IF_1	IF_3
0x3f20	          0x8b4024	            mov eax, dword [rax + 0x24] 	      2549	syntax.c	FUNCTION_30	IF_1	IF_3
0x3f23	          0x83e004	                              and eax, 4	      2549	syntax.c	FUNCTION_30	IF_1	IF_3
0x3f26	            0x85c0	                           test eax, eax	      2549	syntax.c	FUNCTION_30	IF_1	IF_3
0x3f28	            0x7523	                           jne 0x4003f8d	      2549	syntax.c	FUNCTION_30	IF_1	IF_3
0x3f2a	    0x8b0d00000000	            mov ecx, dword [0x04003f70] 	      2552	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_6
0x3f30	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2552	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_6
0x3f34	      0xba01000000	                              mov edx, 1	      2552	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_6
0x3f39	            0x89ce	                            mov esi, ecx	      2552	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_6
0x3f3b	          0x4889c7	                            mov rdi, rax	      2552	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_6
0x3f3e	      0xe8f8090000	                  call sym.update_si_end	      2552	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_6
0x3f43	      0xe8f9070000	                  call sym.check_keepend	      2553	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_7
0x3f48	      0xe980000000	                           jmp 0x400400d	      2553	syntax.c	FUNCTION_30	IF_1	IF_3	CALL_7
0x3f4d	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2557	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x3f51	    0x488b05000000	            mov rax, qword [0x04003f98] 	      2557	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x3f58	    0x488b15000000	            mov rdx, qword [0x04003f9f] 	      2557	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x3f5f	        0x48894118	             mov qword [rcx + 0x18], rax	      2557	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x3f63	        0x48895120	             mov qword [rcx + 0x20], rdx	      2557	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x3f67	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2558	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x3f6b	    0x488b05000000	            mov rax, qword [0x04003fb2] 	      2558	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x3f72	    0x488b15000000	            mov rdx, qword [0x04003fb9] 	      2558	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x3f79	        0x48894138	             mov qword [rcx + 0x38], rax	      2558	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x3f7d	        0x48895140	             mov qword [rcx + 0x40], rdx	      2558	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x3f81	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2559	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x3f85	    0xc7405c010000	               mov dword [rax + 0x5c], 1	      2559	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x3f8c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2560	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x3f90	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      2560	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x3f94	    0x488b05000000	            mov rax, qword [0x04003fdb] 	      2560	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x3f9b	          0x4809c2	                             or rdx, rax	      2560	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x3f9e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2560	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x3fa2	        0x48895068	             mov qword [rax + 0x68], rdx	      2560	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x3fa6	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2561	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x3faa	    0x488b05000000	            mov rax, qword [0x04003ff1] 	      2561	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x3fb1	    0x488b15000000	            mov rdx, qword [0x04003ff8] 	      2561	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x3fb8	        0x48894148	             mov qword [rcx + 0x48], rax	      2561	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x3fbc	        0x48895150	             mov qword [rcx + 0x50], rdx	      2561	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x3fc0	    0x8b1500000000	            mov edx, dword [0x04004006] 	      2562	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x3fc6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2562	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x3fca	          0x895058	             mov dword [rax + 0x58], edx	      2562	syntax.c	FUNCTION_30	IF_1	ELSE_1
0x3fcd	    0x8b0500000000	            mov eax, dword [0x04004013] 	      2564	syntax.c	FUNCTION_30	IF_1	IF_4
0x3fd3	            0x85c0	                           test eax, eax	      2564	syntax.c	FUNCTION_30	IF_1	IF_4
0x3fd5	            0x7921	                           jns 0x4004038	      2564	syntax.c	FUNCTION_30	IF_1	IF_4
0x3fd7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2564	syntax.c	FUNCTION_30	IF_1	IF_4
0x3fdb	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2564	syntax.c	FUNCTION_30	IF_1	IF_4
0x3fdf	      0x2500040000	                          and eax, 0x400	      2564	syntax.c	FUNCTION_30	IF_1	IF_4
0x3fe4	          0x4885c0	                           test rax, rax	      2564	syntax.c	FUNCTION_30	IF_1	IF_4
0x3fe7	            0x740f	                            je 0x4004038	      2564	syntax.c	FUNCTION_30	IF_1	IF_4
0x3fe9	    0x8b0500000000	            mov eax, dword [0x0400402f] 	      2565	syntax.c	FUNCTION_30	IF_1	IF_4
0x3fef	          0x83e801	                              sub eax, 1	      2565	syntax.c	FUNCTION_30	IF_1	IF_4
0x3ff2	    0x890500000000	            mov dword [0x04004038], eax 	      2565	syntax.c	FUNCTION_30	IF_1	IF_4
0x3ff8	      0xe844070000	                  call sym.check_keepend	      2566	syntax.c	FUNCTION_30	IF_1	CALL_8
0x3ffd	    0x8b0500000000	            mov eax, dword [0x04004043] 	      2567	syntax.c	FUNCTION_30	IF_1	CALL_9
0x4003	          0x83e801	                              sub eax, 1	      2567	syntax.c	FUNCTION_30	IF_1	CALL_9
0x4006	            0x89c7	                            mov edi, eax	      2567	syntax.c	FUNCTION_30	IF_1	CALL_9
0x4008	      0xe8b9040000	                 call sym.update_si_attr	      2567	syntax.c	FUNCTION_30	IF_1	CALL_9
0x400d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2570	syntax.c	FUNCTION_30	IF_1
0x4011	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2570	syntax.c	FUNCTION_30	IF_1
0x4015	      0x2500000600	                        and eax, 0x60000	      2570	syntax.c	FUNCTION_30	IF_1
0x401a	          0x8945f4	              mov dword [rbp - 0xc], eax	      2570	syntax.c	FUNCTION_30	IF_1
0x401d	        0x488b45f8	                mov rax, qword [rbp - 8]	      2576	syntax.c	FUNCTION_30	IF_1	IF_5
0x4021	           0xfb600	                   movzx eax, byte [rax]	      2576	syntax.c	FUNCTION_30	IF_1	IF_5
0x4024	            0x3c02	                               cmp al, 2	      2576	syntax.c	FUNCTION_30	IF_1	IF_5
0x4026	     0xf855c010000	                           jne 0x40041c8	      2576	syntax.c	FUNCTION_30	IF_1	IF_5
0x402c	        0x488b45f8	                mov rax, qword [rbp - 8]	      2577	syntax.c	FUNCTION_30	IF_1	IF_5
0x4030	         0xfb74002	               movzx eax, word [rax + 2]	      2577	syntax.c	FUNCTION_30	IF_1	IF_5
0x4034	          0x6685c0	                             test ax, ax	      2577	syntax.c	FUNCTION_30	IF_1	IF_5
0x4037	     0xf844b010000	                            je 0x40041c8	      2577	syntax.c	FUNCTION_30	IF_1	IF_5
0x403d	    0x8b0500000000	            mov eax, dword [0x04004083] 	      2578	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_10
0x4043	            0x89c7	                            mov edi, eax	      2578	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_10
0x4045	      0xe8a50a0000	             call sym.push_current_state	      2578	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_10
0x404a	          0x83f801	                              cmp eax, 1	      2578	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_10
0x404d	     0xf8535010000	                           jne 0x40041c8	      2578	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_10
0x4053	    0x488b0d000000	            mov rcx, qword [0x0400409a] 	      2580	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_11
0x405a	    0x8b0500000000	            mov eax, dword [0x040040a0] 	      2580	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_11
0x4060	          0x4863d0	                         movsxd rdx, eax	      2580	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_11
0x4063	          0x4889d0	                            mov rax, rdx	      2580	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_11
0x4066	        0x48c1e003	                              shl rax, 3	      2580	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_11
0x406a	          0x4801d0	                            add rax, rdx	      2580	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_11
0x406d	        0x48c1e004	                              shl rax, 4	      2580	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_11
0x4071	    0x482d90000000	                           sub rax, 0x90	      2580	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_11
0x4077	          0x4801c8	                            add rax, rcx	      2580	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_11
0x407a	        0x488945e8	             mov qword [rbp - 0x18], rax	      2580	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_11
0x407e	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2581	syntax.c	FUNCTION_30	IF_1	IF_5
0x4082	    0x488b05000000	            mov rax, qword [0x040040c9] 	      2581	syntax.c	FUNCTION_30	IF_1	IF_5
0x4089	    0x488b15000000	            mov rdx, qword [0x040040d0] 	      2581	syntax.c	FUNCTION_30	IF_1	IF_5
0x4090	        0x48894128	             mov qword [rcx + 0x28], rax	      2581	syntax.c	FUNCTION_30	IF_1	IF_5
0x4094	        0x48895130	             mov qword [rcx + 0x30], rdx	      2581	syntax.c	FUNCTION_30	IF_1	IF_5
0x4098	    0x8b1500000000	            mov edx, dword [0x040040de] 	      2582	syntax.c	FUNCTION_30	IF_1	IF_5
0x409e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2582	syntax.c	FUNCTION_30	IF_1	IF_5
0x40a2	          0x895010	             mov dword [rax + 0x10], edx	      2582	syntax.c	FUNCTION_30	IF_1	IF_5
0x40a5	    0x488b05000000	            mov rax, qword [0x040040ec] 	      2583	syntax.c	FUNCTION_30	IF_1	IF_5
0x40ac	            0x89c2	                            mov edx, eax	      2583	syntax.c	FUNCTION_30	IF_1	IF_5
0x40ae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2583	syntax.c	FUNCTION_30	IF_1	IF_5
0x40b2	          0x89500c	              mov dword [rax + 0xc], edx	      2583	syntax.c	FUNCTION_30	IF_1	IF_5
0x40b5	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2584	syntax.c	FUNCTION_30	IF_1	IF_5
0x40b9	    0x488b05000000	            mov rax, qword [0x04004100] 	      2584	syntax.c	FUNCTION_30	IF_1	IF_5
0x40c0	    0x488b15000000	            mov rdx, qword [0x04004107] 	      2584	syntax.c	FUNCTION_30	IF_1	IF_5
0x40c7	        0x48894118	             mov qword [rcx + 0x18], rax	      2584	syntax.c	FUNCTION_30	IF_1	IF_5
0x40cb	        0x48895120	             mov qword [rcx + 0x20], rdx	      2584	syntax.c	FUNCTION_30	IF_1	IF_5
0x40cf	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      2585	syntax.c	FUNCTION_30	IF_1	IF_5
0x40d3	    0x488b05000000	            mov rax, qword [0x0400411a] 	      2585	syntax.c	FUNCTION_30	IF_1	IF_5
0x40da	    0x488b15000000	            mov rdx, qword [0x04004121] 	      2585	syntax.c	FUNCTION_30	IF_1	IF_5
0x40e1	        0x48894138	             mov qword [rcx + 0x38], rax	      2585	syntax.c	FUNCTION_30	IF_1	IF_5
0x40e5	        0x48895140	             mov qword [rcx + 0x40], rdx	      2585	syntax.c	FUNCTION_30	IF_1	IF_5
0x40e9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2586	syntax.c	FUNCTION_30	IF_1	IF_5
0x40ed	    0xc7405c010000	               mov dword [rax + 0x5c], 1	      2586	syntax.c	FUNCTION_30	IF_1	IF_5
0x40f4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2587	syntax.c	FUNCTION_30	IF_1	IF_5
0x40f8	    0xc74058000000	               mov dword [rax + 0x58], 0	      2587	syntax.c	FUNCTION_30	IF_1	IF_5
0x40ff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2588	syntax.c	FUNCTION_30	IF_1	IF_5
0x4103	    0x48c740684000	           mov qword [rax + 0x68], 0x40 	      2588	syntax.c	FUNCTION_30	IF_1	IF_5
0x410b	    0x8b0500000000	            mov eax, dword [0x04004151] 	      2590	syntax.c	FUNCTION_30	IF_1	IF_5
0x4111	          0x8d5001	                      lea edx, [rax + 1]	      2590	syntax.c	FUNCTION_30	IF_1	IF_5
0x4114	    0x891500000000	            mov dword [0x0400415a], edx 	      2590	syntax.c	FUNCTION_30	IF_1	IF_5
0x411a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      2590	syntax.c	FUNCTION_30	IF_1	IF_5
0x411e	          0x894270	             mov dword [rdx + 0x70], eax	      2590	syntax.c	FUNCTION_30	IF_1	IF_5
0x4121	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2591	syntax.c	FUNCTION_30	IF_1	IF_5
0x4125	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      2591	syntax.c	FUNCTION_30	IF_1	IF_5
0x4129	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      2591	syntax.c	FUNCTION_30	IF_1	IF_5
0x412c	            0x4898	                                    cdqe	      2591	syntax.c	FUNCTION_30	IF_1	IF_5
0x412e	          0x4809c2	                             or rdx, rax	      2591	syntax.c	FUNCTION_30	IF_1	IF_5
0x4131	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2591	syntax.c	FUNCTION_30	IF_1	IF_5
0x4135	        0x48895068	             mov qword [rax + 0x68], rdx	      2591	syntax.c	FUNCTION_30	IF_1	IF_5
0x4139	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2592	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x413d	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2592	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x4141	      0x2500000400	                        and eax, 0x40000	      2592	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x4146	          0x4885c0	                           test rax, rax	      2592	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x4149	            0x7419	                            je 0x40041a4	      2592	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x414b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2593	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x414f	        0x488b4068	            mov rax, qword [rax + 0x68] 	      2593	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x4153	    0x480d00000200	                         or rax, 0x20000	      2593	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x4159	          0x4889c2	                            mov rdx, rax	      2593	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x415c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2593	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x4160	        0x48895068	             mov qword [rax + 0x68], rdx	      2593	syntax.c	FUNCTION_30	IF_1	IF_5	IF_6
0x4164	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2595	syntax.c	FUNCTION_30	IF_1	IF_5
0x4168	    0x48c780800000	               mov qword [rax + 0x80], 0	      2595	syntax.c	FUNCTION_30	IF_1	IF_5
0x4173	      0xe8c9050000	                  call sym.check_keepend	      2596	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_12
0x4178	    0x8b0500000000	            mov eax, dword [0x040041be] 	      2597	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_13
0x417e	          0x83e801	                              sub eax, 1	      2597	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_13
0x4181	            0x89c7	                            mov edi, eax	      2597	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_13
0x4183	      0xe83e030000	                 call sym.update_si_attr	      2597	syntax.c	FUNCTION_30	IF_1	IF_5	CALL_13
0x4188	    0xc70500000000	     mov dword [0x040041d2], 0xffffffff 	      2601	syntax.c	FUNCTION_30
0x4192	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2603	syntax.c	FUNCTION_30
0x4196	              0xc9	                                   leave	      2604	syntax.c	FUNCTION_30
0x4197	              0xc3	                                     ret	      2604	syntax.c	FUNCTION_30
syn_cmd_case	FOR,0:DO,0:IF,5:SWITCH,0:functions,0:ELSE,4:WHILE,0:CALL,10	86
0x5e05	              0x55	                                push rbp	      3492	syntax.c	FUNCTION_46
0x5e06	          0x4889e5	                            mov rbp, rsp	      3492	syntax.c	FUNCTION_46
0x5e09	        0x4883ec20	                           sub rsp, 0x20	      3492	syntax.c	FUNCTION_46
0x5e0d	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3492	syntax.c	FUNCTION_46
0x5e11	          0x8975e4	             mov dword [rbp - 0x1c], esi	      3492	syntax.c	FUNCTION_46
0x5e14	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3493	syntax.c	FUNCTION_46
0x5e18	          0x488b00	                    mov rax, qword [rax]	      3493	syntax.c	FUNCTION_46
0x5e1b	        0x488945f0	             mov qword [rbp - 0x10], rax	      3493	syntax.c	FUNCTION_46
0x5e1f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3496	syntax.c	FUNCTION_46	CALL_1
0x5e23	          0x4889c7	                            mov rdi, rax	      3496	syntax.c	FUNCTION_46	CALL_1
0x5e26	      0xe800000000	                          call 0x4005e6b	      3496	syntax.c	FUNCTION_46	CALL_1
0x5e2b	          0x4889c2	                            mov rdx, rax	      3496	syntax.c	FUNCTION_46	CALL_1
0x5e2e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3496	syntax.c	FUNCTION_46	CALL_1
0x5e32	        0x48895008	                mov qword [rax + 8], rdx	      3496	syntax.c	FUNCTION_46	CALL_1
0x5e36	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3497	syntax.c	FUNCTION_46	IF_1
0x5e3a	          0x8b4030	            mov eax, dword [rax + 0x30] 	      3497	syntax.c	FUNCTION_46	IF_1
0x5e3d	            0x85c0	                           test eax, eax	      3497	syntax.c	FUNCTION_46	IF_1
0x5e3f	     0xf8506010000	                           jne 0x4005f8b	      3497	syntax.c	FUNCTION_46	IF_1
0x5e45	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3500	syntax.c	FUNCTION_46	CALL_2
0x5e49	          0x4889c7	                            mov rdi, rax	      3500	syntax.c	FUNCTION_46	CALL_2
0x5e4c	      0xe800000000	                          call 0x4005e91	      3500	syntax.c	FUNCTION_46	CALL_2
0x5e51	        0x488945f8	                mov qword [rbp - 8], rax	      3500	syntax.c	FUNCTION_46	CALL_2
0x5e55	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3501	syntax.c	FUNCTION_46	IF_2
0x5e59	           0xfb600	                   movzx eax, byte [rax]	      3501	syntax.c	FUNCTION_46	IF_2
0x5e5c	            0x84c0	                             test al, al	      3501	syntax.c	FUNCTION_46	IF_2
0x5e5e	            0x7543	                           jne 0x4005ee3	      3501	syntax.c	FUNCTION_46	IF_2
0x5e60	    0x488b05000000	            mov rax, qword [0x04005ea7] 	      3503	syntax.c	FUNCTION_46	IF_2	IF_3
0x5e67	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3503	syntax.c	FUNCTION_46	IF_2	IF_3
0x5e6b	    0x8b8058020000	           mov eax, dword [rax + 0x258] 	      3503	syntax.c	FUNCTION_46	IF_2	IF_3
0x5e71	            0x85c0	                           test eax, eax	      3503	syntax.c	FUNCTION_46	IF_2	IF_3
0x5e73	            0x7417	                            je 0x4005ecc	      3503	syntax.c	FUNCTION_46	IF_2	IF_3
0x5e75	      0xbf00000000	                              mov edi, 0	      3504	syntax.c	FUNCTION_46	IF_2	CALL_4
0x5e7a	      0xe800000000	                          call 0x4005ebf	      3504	syntax.c	FUNCTION_46	IF_2	CALL_4
0x5e7f	          0x4889c7	                            mov rdi, rax	      3504	syntax.c	FUNCTION_46	IF_2	CALL_4
0x5e82	      0xe800000000	                          call 0x4005ec7	      3504	syntax.c	FUNCTION_46	IF_2	CALL_4
0x5e87	      0xe9c0000000	                           jmp 0x4005f8c	      3504	syntax.c	FUNCTION_46	IF_2	CALL_4
0x5e8c	      0xbf00000000	                              mov edi, 0	      3506	syntax.c	FUNCTION_46	IF_2	CALL_6
0x5e91	      0xe800000000	                          call 0x4005ed6	      3506	syntax.c	FUNCTION_46	IF_2	CALL_6
0x5e96	          0x4889c7	                            mov rdi, rax	      3506	syntax.c	FUNCTION_46	IF_2	CALL_6
0x5e99	      0xe800000000	                          call 0x4005ede	      3506	syntax.c	FUNCTION_46	IF_2	CALL_6
0x5e9e	      0xe9a9000000	                           jmp 0x4005f8c	      3506	syntax.c	FUNCTION_46	IF_2	CALL_6
0x5ea3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x5ea7	      0xba05000000	                              mov edx, 5	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x5eac	      0xbe00000000	                              mov esi, 0	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x5eb1	          0x4889c7	                            mov rdi, rax	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x5eb4	      0xe800000000	                          call 0x4005ef9	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x5eb9	            0x85c0	                           test eax, eax	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x5ebb	            0x752b	                           jne 0x4005f28	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x5ebd	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x5ec1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x5ec5	          0x4829c2	                            sub rdx, rax	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x5ec8	          0x4889d0	                            mov rax, rdx	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x5ecb	        0x4883f805	                              cmp rax, 5	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x5ecf	            0x7517	                           jne 0x4005f28	      3508	syntax.c	FUNCTION_46	ELSE_2	IF_4	CALL_7
0x5ed1	    0x488b05000000	            mov rax, qword [0x04005f18] 	      3509	syntax.c	FUNCTION_46	ELSE_2	IF_4
0x5ed8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3509	syntax.c	FUNCTION_46	ELSE_2	IF_4
0x5edc	    0xc78058020000	              mov dword [rax + 0x258], 0	      3509	syntax.c	FUNCTION_46	ELSE_2	IF_4
0x5ee6	            0xeb64	                           jmp 0x4005f8c	      3509	syntax.c	FUNCTION_46	ELSE_2	IF_4
0x5ee8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x5eec	      0xba06000000	                              mov edx, 6	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x5ef1	      0xbe00000000	                              mov esi, 0	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x5ef6	          0x4889c7	                            mov rdi, rax	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x5ef9	      0xe800000000	                          call 0x4005f3e	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x5efe	            0x85c0	                           test eax, eax	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x5f00	            0x752b	                           jne 0x4005f6d	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x5f02	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x5f06	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x5f0a	          0x4829c2	                            sub rdx, rax	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x5f0d	          0x4889d0	                            mov rax, rdx	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x5f10	        0x4883f806	                              cmp rax, 6	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x5f14	            0x7517	                           jne 0x4005f6d	      3510	syntax.c	FUNCTION_46	ELSE_3	IF_5	CALL_8
0x5f16	    0x488b05000000	            mov rax, qword [0x04005f5d] 	      3511	syntax.c	FUNCTION_46	ELSE_3	IF_5
0x5f1d	        0x488b4010	            mov rax, qword [rax + 0x10] 	      3511	syntax.c	FUNCTION_46	ELSE_3	IF_5
0x5f21	    0xc78058020000	              mov dword [rax + 0x258], 1	      3511	syntax.c	FUNCTION_46	ELSE_3	IF_5
0x5f2b	            0xeb1f	                           jmp 0x4005f8c	      3511	syntax.c	FUNCTION_46	ELSE_3	IF_5
0x5f2d	      0xbf00000000	                              mov edi, 0	      3513	syntax.c	FUNCTION_46	CALL_10
0x5f32	      0xe800000000	                          call 0x4005f77	      3513	syntax.c	FUNCTION_46	CALL_10
0x5f37	          0x4889c2	                            mov rdx, rax	      3513	syntax.c	FUNCTION_46	CALL_10
0x5f3a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3513	syntax.c	FUNCTION_46	CALL_10
0x5f3e	          0x4889c6	                            mov rsi, rax	      3513	syntax.c	FUNCTION_46	CALL_10
0x5f41	          0x4889d7	                            mov rdi, rdx	      3513	syntax.c	FUNCTION_46	CALL_10
0x5f44	      0xe800000000	                          call 0x4005f89	      3513	syntax.c	FUNCTION_46	CALL_10
0x5f49	            0xeb01	                           jmp 0x4005f8c	      3513	syntax.c	FUNCTION_46	CALL_10
0x5f4b	              0x90	                                     nop	      3498	syntax.c	FUNCTION_46	IF_1
0x5f4c	              0xc9	                                   leave	      3514	syntax.c	FUNCTION_46
0x5f4d	              0xc3	                                     ret	      3514	syntax.c	FUNCTION_46
syn_list_one	FOR,1:DO,0:IF,12:SWITCH,0:functions,0:ELSE,3:WHILE,2:CALL,37	346
0x737d	              0x55	                                push rbp	      4076	syntax.c	FUNCTION_66
0x737e	          0x4889e5	                            mov rbp, rsp	      4076	syntax.c	FUNCTION_66
0x7381	        0x4883ec30	                           sub rsp, 0x30	      4076	syntax.c	FUNCTION_66
0x7385	          0x897ddc	             mov dword [rbp - 0x24], edi	      4076	syntax.c	FUNCTION_66
0x7388	          0x8975d8	             mov dword [rbp - 0x28], esi	      4076	syntax.c	FUNCTION_66
0x738b	          0x8955d4	             mov dword [rbp - 0x2c], edx	      4076	syntax.c	FUNCTION_66
0x738e	    0xc745f0000000	               mov dword [rbp - 0x10], 0	      4079	syntax.c	FUNCTION_66
0x7395	    0x8b0500000000	            mov eax, dword [0x040073db] 	      4105	syntax.c	FUNCTION_66	CALL_1
0x739b	          0x8945f4	              mov dword [rbp - 0xc], eax	      4105	syntax.c	FUNCTION_66	CALL_1
0x739e	        0x837dd800	               cmp dword [rbp - 0x28], 0	      4108	syntax.c	FUNCTION_66	IF_1
0x73a2	            0x754a	                           jne 0x400742e	      4108	syntax.c	FUNCTION_66	IF_1
0x73a4	    0x488b05000000	            mov rax, qword [0x040073eb] 	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x73ab	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x73af	          0x4889c6	                            mov rsi, rax	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x73b2	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x73b5	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x73b8	            0x89d1	                            mov ecx, edx	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x73ba	      0xba00000000	                              mov edx, 0	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x73bf	            0x89c7	                            mov edi, eax	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x73c1	      0xe8a00a0000	              call sym.syn_list_keywords	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x73c6	          0x8945f0	             mov dword [rbp - 0x10], eax	      4110	syntax.c	FUNCTION_66	IF_1	CALL_2
0x73c9	    0x488b05000000	            mov rax, qword [0x04007410] 	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x73d0	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x73d4	    0x488db0280100	                  lea rsi, [rax + 0x128]	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x73db	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x73de	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x73e1	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x73e4	            0x89c7	                            mov edi, eax	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x73e6	      0xe87b0a0000	              call sym.syn_list_keywords	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x73eb	          0x8945f0	             mov dword [rbp - 0x10], eax	      4111	syntax.c	FUNCTION_66	IF_1	CALL_3
0x73ee	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      4116	syntax.c	FUNCTION_66	FOR_1
0x73f5	      0xe9b7030000	                           jmp 0x40077f1	      4116	syntax.c	FUNCTION_66	FOR_1
0x73fa	    0x488b05000000	            mov rax, qword [0x04007441] 	      4118	syntax.c	FUNCTION_66	FOR_1	CALL_4
0x7401	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4118	syntax.c	FUNCTION_66	FOR_1	CALL_4
0x7405	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      4118	syntax.c	FUNCTION_66	FOR_1	CALL_4
0x740c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4118	syntax.c	FUNCTION_66	FOR_1	CALL_4
0x740f	          0x4863d0	                         movsxd rdx, eax	      4118	syntax.c	FUNCTION_66	FOR_1	CALL_4
0x7412	          0x4889d0	                            mov rax, rdx	      4118	syntax.c	FUNCTION_66	FOR_1	CALL_4
0x7415	        0x48c1e002	                              shl rax, 2	      4118	syntax.c	FUNCTION_66	FOR_1	CALL_4
0x7419	          0x4801d0	                            add rax, rdx	      4118	syntax.c	FUNCTION_66	FOR_1	CALL_4
0x741c	        0x48c1e005	                              shl rax, 5	      4118	syntax.c	FUNCTION_66	FOR_1	CALL_4
0x7420	          0x4801c8	                            add rax, rcx	      4118	syntax.c	FUNCTION_66	FOR_1	CALL_4
0x7423	        0x488945f8	                mov qword [rbp - 8], rax	      4118	syntax.c	FUNCTION_66	FOR_1	CALL_4
0x7427	        0x488b45f8	                mov rax, qword [rbp - 8]	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x742b	         0xfb74054	           movzx eax, word [rax + 0x54] 	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x742f	              0x98	                                    cwde	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x7430	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x7433	     0xf8573030000	                           jne 0x40077ec	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x7439	        0x488b45f8	                mov rax, qword [rbp - 8]	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x743d	         0xfb64001	               movzx eax, byte [rax + 1]	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x7441	           0xfbec0	                           movsx eax, al	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x7444	          0x3b45d8	             cmp eax, dword [rbp - 0x28]	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x7447	     0xf855f030000	                           jne 0x40077ec	      4119	syntax.c	FUNCTION_66	FOR_1	IF_2
0x744d	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      4122	syntax.c	FUNCTION_66	FOR_1	CALL_5
0x7450	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4122	syntax.c	FUNCTION_66	FOR_1	CALL_5
0x7453	      0xbee7030000	                          mov esi, 0x3e7	      4122	syntax.c	FUNCTION_66	FOR_1	CALL_5
0x7458	            0x89c7	                            mov edi, eax	      4122	syntax.c	FUNCTION_66	FOR_1	CALL_5
0x745a	      0xe8e5b40000	                call sym.syn_list_header	      4122	syntax.c	FUNCTION_66	FOR_1	CALL_5
0x745f	    0xc745f0010000	               mov dword [rbp - 0x10], 1	      4123	syntax.c	FUNCTION_66	FOR_1
0x7466	    0xc70500000000	               mov dword [0x040074b0], 0	      4124	syntax.c	FUNCTION_66	FOR_1
0x7470	        0x488b45f8	                mov rax, qword [rbp - 8]	      4125	syntax.c	FUNCTION_66	FOR_1	IF_3
0x7474	           0xfb600	                   movzx eax, byte [rax]	      4125	syntax.c	FUNCTION_66	FOR_1	IF_3
0x7477	            0x3c01	                               cmp al, 1	      4125	syntax.c	FUNCTION_66	FOR_1	IF_3
0x7479	            0x752a	                           jne 0x40074e5	      4125	syntax.c	FUNCTION_66	FOR_1	IF_3
0x747b	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      4127	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_6
0x747e	        0x488b45f8	                mov rax, qword [rbp - 8]	      4127	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_6
0x7482	            0x89d1	                            mov ecx, edx	      4127	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_6
0x7484	          0x4889c2	                            mov rdx, rax	      4127	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_6
0x7487	      0xbe20000000	                           mov esi, 0x20	      4127	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_6
0x748c	      0xbf00000000	                              mov edi, 0	      4127	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_6
0x7491	      0xe871070000	                    call sym.put_pattern	      4127	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_6
0x7496	      0xbf20000000	                           mov edi, 0x20	      4128	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_7
0x749b	      0xe800000000	                          call 0x40074e0	      4128	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_7
0x74a0	      0xe99b010000	                           jmp 0x4007680	      4128	syntax.c	FUNCTION_66	FOR_1	IF_3	CALL_7
0x74a5	        0x488b45f8	                mov rax, qword [rbp - 8]	      4130	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4
0x74a9	           0xfb600	                   movzx eax, byte [rax]	      4130	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4
0x74ac	            0x3c02	                               cmp al, 2	      4130	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4
0x74ae	     0xf858c010000	                           jne 0x4007680	      4130	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4
0x74b4	            0xeb44	                           jmp 0x400753a	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1	CALL_8
0x74b6	    0x488b05000000	            mov rax, qword [0x040074fd] 	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_10
0x74bd	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_10
0x74c1	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_10
0x74c8	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_10
0x74cb	          0x8d5001	                      lea edx, [rax + 1]	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_10
0x74ce	          0x8955ec	             mov dword [rbp - 0x14], edx	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_10
0x74d1	          0x4863d0	                         movsxd rdx, eax	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_10
0x74d4	          0x4889d0	                            mov rax, rdx	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_10
0x74d7	        0x48c1e002	                              shl rax, 2	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_10
0x74db	          0x4801d0	                            add rax, rdx	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_10
0x74de	        0x48c1e005	                              shl rax, 5	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_10
0x74e2	        0x488d1401	                    lea rdx, [rcx + rax]	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_10
0x74e6	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_10
0x74e9	            0x89c1	                            mov ecx, eax	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_10
0x74eb	      0xbe3d000000	                           mov esi, 0x3d	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_10
0x74f0	      0xbf00000000	                              mov edi, 0	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_10
0x74f5	      0xe80d070000	                    call sym.put_pattern	      4133	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_10
0x74fa	    0x488b05000000	            mov rax, qword [0x04007541] 	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1	CALL_8
0x7501	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1	CALL_8
0x7505	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1	CALL_8
0x750c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1	CALL_8
0x750f	          0x4863d0	                         movsxd rdx, eax	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1	CALL_8
0x7512	          0x4889d0	                            mov rax, rdx	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1	CALL_8
0x7515	        0x48c1e002	                              shl rax, 2	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1	CALL_8
0x7519	          0x4801d0	                            add rax, rdx	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1	CALL_8
0x751c	        0x48c1e005	                              shl rax, 5	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1	CALL_8
0x7520	          0x4801c8	                            add rax, rcx	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1	CALL_8
0x7523	           0xfb600	                   movzx eax, byte [rax]	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1	CALL_8
0x7526	            0x3c02	                               cmp al, 2	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1	CALL_8
0x7528	            0x748c	                            je 0x40074f6	      4132	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_1	CALL_8
0x752a	    0x488b05000000	            mov rax, qword [0x04007571] 	      4134	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	IF_5	CALL_11
0x7531	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4134	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	IF_5	CALL_11
0x7535	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      4134	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	IF_5	CALL_11
0x753c	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4134	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	IF_5	CALL_11
0x753f	          0x4863d0	                         movsxd rdx, eax	      4134	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	IF_5	CALL_11
0x7542	          0x4889d0	                            mov rax, rdx	      4134	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	IF_5	CALL_11
0x7545	        0x48c1e002	                              shl rax, 2	      4134	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	IF_5	CALL_11
0x7549	          0x4801d0	                            add rax, rdx	      4134	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	IF_5	CALL_11
0x754c	        0x48c1e005	                              shl rax, 5	      4134	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	IF_5	CALL_11
0x7550	          0x4801c8	                            add rax, rcx	      4134	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	IF_5	CALL_11
0x7553	           0xfb600	                   movzx eax, byte [rax]	      4134	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	IF_5	CALL_11
0x7556	            0x3c04	                               cmp al, 4	      4134	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	IF_5	CALL_11
0x7558	     0xf858a000000	                           jne 0x4007628	      4134	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	IF_5	CALL_11
0x755e	    0x488b05000000	            mov rax, qword [0x040075a5] 	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_13
0x7565	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_13
0x7569	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_13
0x7570	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_13
0x7573	          0x8d5001	                      lea edx, [rax + 1]	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_13
0x7576	          0x8955ec	             mov dword [rbp - 0x14], edx	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_13
0x7579	          0x4863d0	                         movsxd rdx, eax	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_13
0x757c	          0x4889d0	                            mov rax, rdx	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_13
0x757f	        0x48c1e002	                              shl rax, 2	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_13
0x7583	          0x4801d0	                            add rax, rdx	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_13
0x7586	        0x48c1e005	                              shl rax, 5	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_13
0x758a	        0x488d1401	                    lea rdx, [rcx + rax]	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_13
0x758e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_13
0x7591	            0x89c1	                            mov ecx, eax	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_13
0x7593	      0xbe3d000000	                           mov esi, 0x3d	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_13
0x7598	      0xbf00000000	                              mov edi, 0	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_13
0x759d	      0xe865060000	                    call sym.put_pattern	      4135	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_13
0x75a2	            0xeb44	                           jmp 0x4007628	      4136	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x75a4	    0x488b05000000	            mov rax, qword [0x040075eb] 	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_16
0x75ab	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_16
0x75af	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_16
0x75b6	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_16
0x75b9	          0x8d5001	                      lea edx, [rax + 1]	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_16
0x75bc	          0x8955ec	             mov dword [rbp - 0x14], edx	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_16
0x75bf	          0x4863d0	                         movsxd rdx, eax	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_16
0x75c2	          0x4889d0	                            mov rax, rdx	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_16
0x75c5	        0x48c1e002	                              shl rax, 2	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_16
0x75c9	          0x4801d0	                            add rax, rdx	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_16
0x75cc	        0x48c1e005	                              shl rax, 5	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_16
0x75d0	        0x488d1401	                    lea rdx, [rcx + rax]	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_16
0x75d4	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_16
0x75d7	            0x89c1	                            mov ecx, eax	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_16
0x75d9	      0xbe3d000000	                           mov esi, 0x3d	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_16
0x75de	      0xbf00000000	                              mov edi, 0	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_16
0x75e3	      0xe81f060000	                    call sym.put_pattern	      4138	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_16
0x75e8	    0x488b05000000	            mov rax, qword [0x0400762f] 	      4136	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x75ef	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4136	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x75f3	    0x8b8060020000	           mov eax, dword [rax + 0x260] 	      4136	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x75f9	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      4136	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x75fc	            0x7e34	                           jle 0x4007672	      4136	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2
0x75fe	    0x488b05000000	            mov rax, qword [0x04007645] 	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2	CALL_14
0x7605	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2	CALL_14
0x7609	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2	CALL_14
0x7610	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2	CALL_14
0x7613	          0x4863d0	                         movsxd rdx, eax	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2	CALL_14
0x7616	          0x4889d0	                            mov rax, rdx	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2	CALL_14
0x7619	        0x48c1e002	                              shl rax, 2	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2	CALL_14
0x761d	          0x4801d0	                            add rax, rdx	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2	CALL_14
0x7620	        0x48c1e005	                              shl rax, 5	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2	CALL_14
0x7624	          0x4801c8	                            add rax, rcx	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2	CALL_14
0x7627	           0xfb600	                   movzx eax, byte [rax]	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2	CALL_14
0x762a	            0x3c03	                               cmp al, 3	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2	CALL_14
0x762c	     0xf8472ffffff	                            je 0x40075e4	      4137	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	WHILE_2	CALL_14
0x7632	        0x836dec01	               sub dword [rbp - 0x14], 1	      4139	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4
0x7636	      0xbf20000000	                           mov edi, 0x20	      4140	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_17
0x763b	      0xe800000000	                          call 0x4007680	      4140	syntax.c	FUNCTION_66	FOR_1	ELSE_1	IF_4	CALL_17
0x7640	        0x488b45f8	                mov rax, qword [rbp - 8]	      4142	syntax.c	FUNCTION_66	FOR_1	CALL_18
0x7644	          0x8b4024	            mov eax, dword [rax + 0x24] 	      4142	syntax.c	FUNCTION_66	FOR_1	CALL_18
0x7647	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      4142	syntax.c	FUNCTION_66	FOR_1	CALL_18
0x764a	            0x89c6	                            mov esi, eax	      4142	syntax.c	FUNCTION_66	FOR_1	CALL_18
0x764c	      0xbf00000000	                              mov edi, 0	      4142	syntax.c	FUNCTION_66	FOR_1	CALL_18
0x7651	      0xe865020000	                 call sym.syn_list_flags	      4142	syntax.c	FUNCTION_66	FOR_1	CALL_18
0x7656	        0x488b45f8	                mov rax, qword [rbp - 8]	      4144	syntax.c	FUNCTION_66	FOR_1	IF_6
0x765a	        0x488b4040	            mov rax, qword [rax + 0x40] 	      4144	syntax.c	FUNCTION_66	FOR_1	IF_6
0x765e	          0x4885c0	                           test rax, rax	      4144	syntax.c	FUNCTION_66	FOR_1	IF_6
0x7661	            0x7418	                            je 0x40076bb	      4144	syntax.c	FUNCTION_66	FOR_1	IF_6
0x7663	        0x488b45f8	                mov rax, qword [rbp - 8]	      4145	syntax.c	FUNCTION_66	FOR_1	CALL_19
0x7667	        0x488b4040	            mov rax, qword [rax + 0x40] 	      4145	syntax.c	FUNCTION_66	FOR_1	CALL_19
0x766b	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      4145	syntax.c	FUNCTION_66	FOR_1	CALL_19
0x766e	          0x4889c6	                            mov rsi, rax	      4145	syntax.c	FUNCTION_66	FOR_1	CALL_19
0x7671	      0xbf00000000	                              mov edi, 0	      4145	syntax.c	FUNCTION_66	FOR_1	CALL_19
0x7676	      0xe8e7030000	                    call sym.put_id_list	      4145	syntax.c	FUNCTION_66	FOR_1	CALL_19
0x767b	        0x488b45f8	                mov rax, qword [rbp - 8]	      4147	syntax.c	FUNCTION_66	FOR_1	IF_7
0x767f	        0x488b4058	            mov rax, qword [rax + 0x58] 	      4147	syntax.c	FUNCTION_66	FOR_1	IF_7
0x7683	          0x4885c0	                           test rax, rax	      4147	syntax.c	FUNCTION_66	FOR_1	IF_7
0x7686	            0x7418	                            je 0x40076e0	      4147	syntax.c	FUNCTION_66	FOR_1	IF_7
0x7688	        0x488b45f8	                mov rax, qword [rbp - 8]	      4148	syntax.c	FUNCTION_66	FOR_1	IF_7	CALL_20
0x768c	        0x488b4058	            mov rax, qword [rax + 0x58] 	      4148	syntax.c	FUNCTION_66	FOR_1	IF_7	CALL_20
0x7690	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      4148	syntax.c	FUNCTION_66	FOR_1	IF_7	CALL_20
0x7693	          0x4889c6	                            mov rsi, rax	      4148	syntax.c	FUNCTION_66	FOR_1	IF_7	CALL_20
0x7696	      0xbf00000000	                              mov edi, 0	      4148	syntax.c	FUNCTION_66	FOR_1	IF_7	CALL_20
0x769b	      0xe8c2030000	                    call sym.put_id_list	      4148	syntax.c	FUNCTION_66	FOR_1	IF_7	CALL_20
0x76a0	        0x488b45f8	                mov rax, qword [rbp - 8]	      4151	syntax.c	FUNCTION_66	FOR_1	IF_8
0x76a4	        0x488b4048	            mov rax, qword [rax + 0x48] 	      4151	syntax.c	FUNCTION_66	FOR_1	IF_8
0x76a8	          0x4885c0	                           test rax, rax	      4151	syntax.c	FUNCTION_66	FOR_1	IF_8
0x76ab	            0x742e	                            je 0x400771b	      4151	syntax.c	FUNCTION_66	FOR_1	IF_8
0x76ad	        0x488b45f8	                mov rax, qword [rbp - 8]	      4153	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_21
0x76b1	        0x488b4048	            mov rax, qword [rax + 0x48] 	      4153	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_21
0x76b5	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      4153	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_21
0x76b8	          0x4889c6	                            mov rsi, rax	      4153	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_21
0x76bb	      0xbf00000000	                              mov edi, 0	      4153	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_21
0x76c0	      0xe89d030000	                    call sym.put_id_list	      4153	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_21
0x76c5	        0x488b45f8	                mov rax, qword [rbp - 8]	      4154	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_22
0x76c9	          0x8b4024	            mov eax, dword [rax + 0x24] 	      4154	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_22
0x76cc	          0x8b55f4	              mov edx, dword [rbp - 0xc]	      4154	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_22
0x76cf	            0x89c6	                            mov esi, eax	      4154	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_22
0x76d1	      0xbf00000000	                              mov edi, 0	      4154	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_22
0x76d6	      0xe8e0010000	                 call sym.syn_list_flags	      4154	syntax.c	FUNCTION_66	FOR_1	IF_8	CALL_22
0x76db	        0x488b45f8	                mov rax, qword [rbp - 8]	      4156	syntax.c	FUNCTION_66	FOR_1	IF_9
0x76df	          0x8b4024	            mov eax, dword [rax + 0x24] 	      4156	syntax.c	FUNCTION_66	FOR_1	IF_9
0x76e2	          0x83e030	                           and eax, 0x30	      4156	syntax.c	FUNCTION_66	FOR_1	IF_9
0x76e5	            0x85c0	                           test eax, eax	      4156	syntax.c	FUNCTION_66	FOR_1	IF_9
0x76e7	     0xf84c0000000	                            je 0x40077ed	      4156	syntax.c	FUNCTION_66	FOR_1	IF_9
0x76ed	        0x488b45f8	                mov rax, qword [rbp - 8]	      4158	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_10
0x76f1	          0x8b4024	            mov eax, dword [rax + 0x24] 	      4158	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_10
0x76f4	          0x83e010	                           and eax, 0x10	      4158	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_10
0x76f7	            0x85c0	                           test eax, eax	      4158	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_10
0x76f9	            0x7411	                            je 0x400774c	      4158	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_10
0x76fb	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4159	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_23
0x76fe	            0x89c6	                            mov esi, eax	      4159	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_23
0x7700	      0xbf00000000	                              mov edi, 0	      4159	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_23
0x7705	      0xe800000000	                          call 0x400774a	      4159	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_23
0x770a	            0xeb0f	                           jmp 0x400775b	      4159	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_23
0x770c	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4161	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_24
0x770f	            0x89c6	                            mov esi, eax	      4161	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_24
0x7711	      0xbf00000000	                              mov edi, 0	      4161	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_24
0x7716	      0xe800000000	                          call 0x400775b	      4161	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_24
0x771b	      0xbf20000000	                           mov edi, 0x20	      4162	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_25
0x7720	      0xe800000000	                          call 0x4007765	      4162	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_25
0x7725	        0x488b45f8	                mov rax, qword [rbp - 8]	      4163	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x7729	          0x8b4030	            mov eax, dword [rax + 0x30] 	      4163	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x772c	            0x85c0	                           test eax, eax	      4163	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x772e	            0x7866	                            js 0x40077d6	      4163	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x7730	    0x488b0d000000	            mov rcx, qword [0x04007777] 	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_28
0x7737	    0x488b05000000	            mov rax, qword [0x0400777e] 	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_28
0x773e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_28
0x7742	    0x488bb0700200	           mov rsi, qword [rax + 0x270] 	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_28
0x7749	        0x488b45f8	                mov rax, qword [rbp - 8]	      4165	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x774d	          0x8b4030	            mov eax, dword [rax + 0x30] 	      4165	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x7750	          0x4863d0	                         movsxd rdx, eax	      4165	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x7753	          0x4889d0	                            mov rax, rdx	      4165	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x7756	        0x48c1e002	                              shl rax, 2	      4165	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x775a	          0x4801d0	                            add rax, rdx	      4165	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x775d	        0x48c1e005	                              shl rax, 5	      4165	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x7761	          0x4801f0	                            add rax, rsi	      4165	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x7764	         0xfb74054	           movzx eax, word [rax + 0x54] 	      4165	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11
0x7768	        0x480fbfd0	                           movsx rdx, ax	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_28
0x776c	          0x4889d0	                            mov rax, rdx	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_28
0x776f	        0x48c1e003	                              shl rax, 3	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_28
0x7773	          0x4801d0	                            add rax, rdx	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_28
0x7776	          0x4801c0	                            add rax, rax	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_28
0x7779	          0x4801d0	                            add rax, rdx	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_28
0x777c	        0x48c1e003	                              shl rax, 3	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_28
0x7780	    0x482d98000000	                           sub rax, 0x98	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_28
0x7786	          0x4801c8	                            add rax, rcx	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_28
0x7789	          0x488b00	                    mov rax, qword [rax]	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_28
0x778c	          0x4889c7	                            mov rdi, rax	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_28
0x778f	      0xe800000000	                          call 0x40077d4	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_28
0x7794	            0xeb0a	                           jmp 0x40077e0	      4164	syntax.c	FUNCTION_66	FOR_1	IF_9	IF_11	CALL_28
0x7796	      0xbf00000000	                              mov edi, 0	      4167	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_29
0x779b	      0xe800000000	                          call 0x40077e0	      4167	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_29
0x77a0	      0xbf20000000	                           mov edi, 0x20	      4168	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_30
0x77a5	      0xe800000000	                          call 0x40077ea	      4168	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_30
0x77aa	            0xeb01	                           jmp 0x40077ed	      4168	syntax.c	FUNCTION_66	FOR_1	IF_9	CALL_30
0x77ac	              0x90	                                     nop	      4120	syntax.c	FUNCTION_66	FOR_1	IF_2
0x77ad	        0x8345ec01	               add dword [rbp - 0x14], 1	      4116	syntax.c	FUNCTION_66	FOR_1
0x77b1	    0x488b05000000	            mov rax, qword [0x040077f8] 	      4116	syntax.c	FUNCTION_66	FOR_1
0x77b8	        0x488b4010	            mov rax, qword [rax + 0x10] 	      4116	syntax.c	FUNCTION_66	FOR_1
0x77bc	    0x8b8060020000	           mov eax, dword [rax + 0x260] 	      4116	syntax.c	FUNCTION_66	FOR_1
0x77c2	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      4116	syntax.c	FUNCTION_66	FOR_1
0x77c5	            0x7e0e	                           jle 0x4007815	      4116	syntax.c	FUNCTION_66	FOR_1
0x77c7	    0x8b0500000000	            mov eax, dword [0x0400780d] 	      4116	syntax.c	FUNCTION_66	FOR_1
0x77cd	            0x85c0	                           test eax, eax	      4116	syntax.c	FUNCTION_66	FOR_1
0x77cf	     0xf8425fcffff	                            je 0x400743a	      4116	syntax.c	FUNCTION_66	FOR_1
0x77d5	    0x488b0d000000	            mov rcx, qword [0x0400781c] 	      4173	syntax.c	FUNCTION_66	IF_12	CALL_31
0x77dc	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4173	syntax.c	FUNCTION_66	IF_12	CALL_31
0x77df	          0x4863d0	                         movsxd rdx, eax	      4173	syntax.c	FUNCTION_66	IF_12	CALL_31
0x77e2	          0x4889d0	                            mov rax, rdx	      4173	syntax.c	FUNCTION_66	IF_12	CALL_31
0x77e5	        0x48c1e003	                              shl rax, 3	      4173	syntax.c	FUNCTION_66	IF_12	CALL_31
0x77e9	          0x4801d0	                            add rax, rdx	      4173	syntax.c	FUNCTION_66	IF_12	CALL_31
0x77ec	          0x4801c0	                            add rax, rax	      4173	syntax.c	FUNCTION_66	IF_12	CALL_31
0x77ef	          0x4801d0	                            add rax, rdx	      4173	syntax.c	FUNCTION_66	IF_12	CALL_31
0x77f2	        0x48c1e003	                              shl rax, 3	      4173	syntax.c	FUNCTION_66	IF_12	CALL_31
0x77f6	    0x482d98000000	                           sub rax, 0x98	      4173	syntax.c	FUNCTION_66	IF_12	CALL_31
0x77fc	          0x4801c8	                            add rax, rcx	      4173	syntax.c	FUNCTION_66	IF_12	CALL_31
0x77ff	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      4173	syntax.c	FUNCTION_66	IF_12	CALL_31
0x7805	            0x85c0	                           test eax, eax	      4173	syntax.c	FUNCTION_66	IF_12	CALL_31
0x7807	     0xf84ab000000	                            je 0x40078f8	      4173	syntax.c	FUNCTION_66	IF_12	CALL_31
0x780d	        0x837df000	               cmp dword [rbp - 0x10], 0	      4173	syntax.c	FUNCTION_66	IF_12	CALL_31
0x7811	            0x750a	                           jne 0x400785d	      4173	syntax.c	FUNCTION_66	IF_12	CALL_31
0x7813	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      4173	syntax.c	FUNCTION_66	IF_12	CALL_31
0x7817	     0xf849b000000	                            je 0x40078f8	      4173	syntax.c	FUNCTION_66	IF_12	CALL_31
0x781d	    0x8b0500000000	            mov eax, dword [0x04007863] 	      4173	syntax.c	FUNCTION_66	IF_12	CALL_31
0x7823	            0x85c0	                           test eax, eax	      4173	syntax.c	FUNCTION_66	IF_12	CALL_31
0x7825	     0xf858d000000	                           jne 0x40078f8	      4173	syntax.c	FUNCTION_66	IF_12	CALL_31
0x782b	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      4175	syntax.c	FUNCTION_66	IF_12	CALL_32
0x782e	          0x8b45f0	             mov eax, dword [rbp - 0x10]	      4175	syntax.c	FUNCTION_66	IF_12	CALL_32
0x7831	      0xbee7030000	                          mov esi, 0x3e7	      4175	syntax.c	FUNCTION_66	IF_12	CALL_32
0x7836	            0x89c7	                            mov edi, eax	      4175	syntax.c	FUNCTION_66	IF_12	CALL_32
0x7838	      0xe807b10000	                call sym.syn_list_header	      4175	syntax.c	FUNCTION_66	IF_12	CALL_32
0x783d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4176	syntax.c	FUNCTION_66	IF_12	CALL_33
0x7840	            0x89c6	                            mov esi, eax	      4176	syntax.c	FUNCTION_66	IF_12	CALL_33
0x7842	      0xbf00000000	                              mov edi, 0	      4176	syntax.c	FUNCTION_66	IF_12	CALL_33
0x7847	      0xe800000000	                          call 0x400788c	      4176	syntax.c	FUNCTION_66	IF_12	CALL_33
0x784c	      0xbf20000000	                           mov edi, 0x20	      4177	syntax.c	FUNCTION_66	IF_12	CALL_34
0x7851	      0xe800000000	                          call 0x4007896	      4177	syntax.c	FUNCTION_66	IF_12	CALL_34
0x7856	    0x488b0d000000	            mov rcx, qword [0x0400789d] 	      4178	syntax.c	FUNCTION_66	IF_12	CALL_37
0x785d	    0x488b35000000	            mov rsi, qword [0x040078a4] 	      4178	syntax.c	FUNCTION_66	IF_12	CALL_37
0x7864	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4178	syntax.c	FUNCTION_66	IF_12	CALL_37
0x7867	          0x4863d0	                         movsxd rdx, eax	      4178	syntax.c	FUNCTION_66	IF_12	CALL_37
0x786a	          0x4889d0	                            mov rax, rdx	      4178	syntax.c	FUNCTION_66	IF_12	CALL_37
0x786d	        0x48c1e003	                              shl rax, 3	      4178	syntax.c	FUNCTION_66	IF_12	CALL_37
0x7871	          0x4801d0	                            add rax, rdx	      4178	syntax.c	FUNCTION_66	IF_12	CALL_37
0x7874	          0x4801c0	                            add rax, rax	      4178	syntax.c	FUNCTION_66	IF_12	CALL_37
0x7877	          0x4801d0	                            add rax, rdx	      4178	syntax.c	FUNCTION_66	IF_12	CALL_37
0x787a	        0x48c1e003	                              shl rax, 3	      4178	syntax.c	FUNCTION_66	IF_12	CALL_37
0x787e	    0x482d98000000	                           sub rax, 0x98	      4178	syntax.c	FUNCTION_66	IF_12	CALL_37
0x7884	          0x4801f0	                            add rax, rsi	      4178	syntax.c	FUNCTION_66	IF_12	CALL_37
0x7887	    0x8b8088000000	            mov eax, dword [rax + 0x88] 	      4178	syntax.c	FUNCTION_66	IF_12	CALL_37
0x788d	          0x4863d0	                         movsxd rdx, eax	      4178	syntax.c	FUNCTION_66	IF_12	CALL_37
0x7890	          0x4889d0	                            mov rax, rdx	      4178	syntax.c	FUNCTION_66	IF_12	CALL_37
0x7893	        0x48c1e003	                              shl rax, 3	      4178	syntax.c	FUNCTION_66	IF_12	CALL_37
0x7897	          0x4801d0	                            add rax, rdx	      4178	syntax.c	FUNCTION_66	IF_12	CALL_37
0x789a	          0x4801c0	                            add rax, rax	      4178	syntax.c	FUNCTION_66	IF_12	CALL_37
0x789d	          0x4801d0	                            add rax, rdx	      4178	syntax.c	FUNCTION_66	IF_12	CALL_37
0x78a0	        0x48c1e003	                              shl rax, 3	      4178	syntax.c	FUNCTION_66	IF_12	CALL_37
0x78a4	    0x482d98000000	                           sub rax, 0x98	      4178	syntax.c	FUNCTION_66	IF_12	CALL_37
0x78aa	          0x4801c8	                            add rax, rcx	      4178	syntax.c	FUNCTION_66	IF_12	CALL_37
0x78ad	          0x488b00	                    mov rax, qword [rax]	      4178	syntax.c	FUNCTION_66	IF_12	CALL_37
0x78b0	          0x4889c7	                            mov rdi, rax	      4178	syntax.c	FUNCTION_66	IF_12	CALL_37
0x78b3	      0xe800000000	                          call 0x40078f8	      4178	syntax.c	FUNCTION_66	IF_12	CALL_37
0x78b8	              0x90	                                     nop	      4180	syntax.c	FUNCTION_66
0x78b9	              0xc9	                                   leave	      4180	syntax.c	FUNCTION_66
0x78ba	              0xc3	                                     ret	      4180	syntax.c	FUNCTION_66
syntax_clear	FOR,2:DO,0:IF,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,11	97
0x6376	              0x55	                                push rbp	      3609	syntax.c	FUNCTION_49
0x6377	          0x4889e5	                            mov rbp, rsp	      3609	syntax.c	FUNCTION_49
0x637a	        0x4883ec20	                           sub rsp, 0x20	      3609	syntax.c	FUNCTION_49
0x637e	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3609	syntax.c	FUNCTION_49
0x6382	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3612	syntax.c	FUNCTION_49
0x6386	    0xc78050020000	              mov dword [rax + 0x250], 0	      3612	syntax.c	FUNCTION_49
0x6390	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3614	syntax.c	FUNCTION_49
0x6394	    0xc78054020000	              mov dword [rax + 0x254], 0	      3614	syntax.c	FUNCTION_49
0x639e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3616	syntax.c	FUNCTION_49
0x63a2	    0xc78058020000	              mov dword [rax + 0x258], 0	      3616	syntax.c	FUNCTION_49
0x63ac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3617	syntax.c	FUNCTION_49
0x63b0	    0xc7805c020000	              mov dword [rax + 0x25c], 0	      3617	syntax.c	FUNCTION_49
0x63ba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3618	syntax.c	FUNCTION_49
0x63be	    0xc78098020000	              mov dword [rax + 0x298], 0	      3618	syntax.c	FUNCTION_49
0x63c8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3620	syntax.c	FUNCTION_49
0x63cc	    0xc78008030000	              mov dword [rax + 0x308], 0	      3620	syntax.c	FUNCTION_49
0x63d6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3624	syntax.c	FUNCTION_49	CALL_1
0x63da	          0x4889c7	                            mov rdi, rax	      3624	syntax.c	FUNCTION_49	CALL_1
0x63dd	      0xe8e71e0000	                  call sym.clear_keywtab	      3624	syntax.c	FUNCTION_49	CALL_1
0x63e2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3625	syntax.c	FUNCTION_49	CALL_2
0x63e6	    0x480528010000	                          add rax, 0x128	      3625	syntax.c	FUNCTION_49	CALL_2
0x63ec	          0x4889c7	                            mov rdi, rax	      3625	syntax.c	FUNCTION_49	CALL_2
0x63ef	      0xe8d51e0000	                  call sym.clear_keywtab	      3625	syntax.c	FUNCTION_49	CALL_2
0x63f4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3628	syntax.c	FUNCTION_49	FOR_1
0x63f8	    0x8b8060020000	           mov eax, dword [rax + 0x260] 	      3628	syntax.c	FUNCTION_49	FOR_1
0x63fe	          0x8945fc	                mov dword [rbp - 4], eax	      3628	syntax.c	FUNCTION_49	FOR_1
0x6401	            0xeb11	                           jmp 0x4006454	      3628	syntax.c	FUNCTION_49	FOR_1
0x6403	          0x8b55fc	                mov edx, dword [rbp - 4]	      3629	syntax.c	FUNCTION_49	CALL_3
0x6406	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3629	syntax.c	FUNCTION_49	CALL_3
0x640a	            0x89d6	                            mov esi, edx	      3629	syntax.c	FUNCTION_49	CALL_3
0x640c	          0x4889c7	                            mov rdi, rax	      3629	syntax.c	FUNCTION_49	CALL_3
0x640f	      0xe8d5030000	              call sym.syn_clear_pattern	      3629	syntax.c	FUNCTION_49	CALL_3
0x6414	        0x836dfc01	                  sub dword [rbp - 4], 1	      3628	syntax.c	FUNCTION_49	FOR_1
0x6418	        0x837dfc00	                  cmp dword [rbp - 4], 0	      3628	syntax.c	FUNCTION_49	FOR_1
0x641c	            0x79e5	                           jns 0x4006443	      3628	syntax.c	FUNCTION_49	FOR_1
0x641e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3630	syntax.c	FUNCTION_49	CALL_4
0x6422	    0x480560020000	                          add rax, 0x260	      3630	syntax.c	FUNCTION_49	CALL_4
0x6428	          0x4889c7	                            mov rdi, rax	      3630	syntax.c	FUNCTION_49	CALL_4
0x642b	      0xe800000000	                          call 0x4006470	      3630	syntax.c	FUNCTION_49	CALL_4
0x6430	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3633	syntax.c	FUNCTION_49	FOR_2
0x6434	    0x8b8078020000	           mov eax, dword [rax + 0x278] 	      3633	syntax.c	FUNCTION_49	FOR_2
0x643a	          0x8945fc	                mov dword [rbp - 4], eax	      3633	syntax.c	FUNCTION_49	FOR_2
0x643d	            0xeb11	                           jmp 0x4006490	      3633	syntax.c	FUNCTION_49	FOR_2
0x643f	          0x8b55fc	                mov edx, dword [rbp - 4]	      3634	syntax.c	FUNCTION_49	CALL_5
0x6442	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3634	syntax.c	FUNCTION_49	CALL_5
0x6446	            0x89d6	                            mov esi, edx	      3634	syntax.c	FUNCTION_49	CALL_5
0x6448	          0x4889c7	                            mov rdi, rax	      3634	syntax.c	FUNCTION_49	CALL_5
0x644b	      0xe8ca040000	              call sym.syn_clear_cluster	      3634	syntax.c	FUNCTION_49	CALL_5
0x6450	        0x836dfc01	                  sub dword [rbp - 4], 1	      3633	syntax.c	FUNCTION_49	FOR_2
0x6454	        0x837dfc00	                  cmp dword [rbp - 4], 0	      3633	syntax.c	FUNCTION_49	FOR_2
0x6458	            0x79e5	                           jns 0x400647f	      3633	syntax.c	FUNCTION_49	FOR_2
0x645a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3635	syntax.c	FUNCTION_49	CALL_6
0x645e	    0x480578020000	                          add rax, 0x278	      3635	syntax.c	FUNCTION_49	CALL_6
0x6464	          0x4889c7	                            mov rdi, rax	      3635	syntax.c	FUNCTION_49	CALL_6
0x6467	      0xe800000000	                          call 0x40064ac	      3635	syntax.c	FUNCTION_49	CALL_6
0x646c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3636	syntax.c	FUNCTION_49
0x6470	    0xc78090020000	              mov dword [rax + 0x290], 0	      3636	syntax.c	FUNCTION_49
0x647a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3637	syntax.c	FUNCTION_49
0x647e	    0xc78094020000	              mov dword [rax + 0x294], 0	      3637	syntax.c	FUNCTION_49
0x6488	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3639	syntax.c	FUNCTION_49
0x648c	    0xc7809c020000	              mov dword [rax + 0x29c], 0	      3639	syntax.c	FUNCTION_49
0x6496	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3640	syntax.c	FUNCTION_49
0x649a	    0x48c780a80200	              mov qword [rax + 0x2a8], 0	      3640	syntax.c	FUNCTION_49
0x64a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3641	syntax.c	FUNCTION_49
0x64a9	    0x48c780b00200	              mov qword [rax + 0x2b0], 0	      3641	syntax.c	FUNCTION_49
0x64b4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3642	syntax.c	FUNCTION_49
0x64b8	    0x48c780b80200	              mov qword [rax + 0x2b8], 0	      3642	syntax.c	FUNCTION_49
0x64c3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3644	syntax.c	FUNCTION_49	CALL_7
0x64c7	    0x488b80c80200	           mov rax, qword [rax + 0x2c8] 	      3644	syntax.c	FUNCTION_49	CALL_7
0x64ce	          0x4889c7	                            mov rdi, rax	      3644	syntax.c	FUNCTION_49	CALL_7
0x64d1	      0xe800000000	                          call 0x4006516	      3644	syntax.c	FUNCTION_49	CALL_7
0x64d6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3645	syntax.c	FUNCTION_49
0x64da	    0x48c780c80200	              mov qword [rax + 0x2c8], 0	      3645	syntax.c	FUNCTION_49
0x64e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3646	syntax.c	FUNCTION_49	CALL_8
0x64e9	    0x488b80c00200	           mov rax, qword [rax + 0x2c0] 	      3646	syntax.c	FUNCTION_49	CALL_8
0x64f0	          0x4885c0	                           test rax, rax	      3646	syntax.c	FUNCTION_49	CALL_8
0x64f3	            0x7422	                            je 0x4006557	      3646	syntax.c	FUNCTION_49	CALL_8
0x64f5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3646	syntax.c	FUNCTION_49	CALL_8
0x64f9	    0x488b80c00200	           mov rax, qword [rax + 0x2c0] 	      3646	syntax.c	FUNCTION_49	CALL_8
0x6500	          0x4889c7	                            mov rdi, rax	      3646	syntax.c	FUNCTION_49	CALL_8
0x6503	      0xe800000000	                          call 0x4006548	      3646	syntax.c	FUNCTION_49	CALL_8
0x6508	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3646	syntax.c	FUNCTION_49	CALL_8
0x650c	    0x48c780c00200	              mov qword [rax + 0x2c0], 0	      3646	syntax.c	FUNCTION_49	CALL_8
0x6517	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3648	syntax.c	FUNCTION_49
0x651b	    0xc7800c030000	              mov dword [rax + 0x30c], 0	      3648	syntax.c	FUNCTION_49
0x6525	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3650	syntax.c	FUNCTION_49	CALL_9
0x6529	    0x4805b0040000	                          add rax, 0x4b0	      3650	syntax.c	FUNCTION_49	CALL_9
0x652f	          0x4889c7	                            mov rdi, rax	      3650	syntax.c	FUNCTION_49	CALL_9
0x6532	      0xe800000000	                          call 0x4006577	      3650	syntax.c	FUNCTION_49	CALL_9
0x6537	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3653	syntax.c	FUNCTION_49	CALL_10
0x653b	          0x4889c7	                            mov rdi, rax	      3653	syntax.c	FUNCTION_49	CALL_10
0x653e	      0xe800000000	                          call 0x4006583	      3653	syntax.c	FUNCTION_49	CALL_10
0x6543	      0xe85ec1ffff	       call sym.invalidate_current_state	      3654	syntax.c	FUNCTION_49	CALL_11
0x6548	    0xc70500000000	               mov dword [0x04006592], 0	      3657	syntax.c	FUNCTION_49
0x6552	              0x90	                                     nop	      3658	syntax.c	FUNCTION_49
0x6553	              0xc9	                                   leave	      3658	syntax.c	FUNCTION_49
0x6554	              0xc3	                                     ret	      3658	syntax.c	FUNCTION_49
syn_start_line	FOR,0:DO,0:IF,1:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,2	18
0xeb9	              0x55	                                push rbp	      1059	syntax.c	FUNCTION_9
0xeba	          0x4889e5	                            mov rbp, rsp	      1059	syntax.c	FUNCTION_9
0xebd	    0xc70500000000	               mov dword [0x04000f07], 0	      1060	syntax.c	FUNCTION_9
0xec7	    0xc70500000000	               mov dword [0x04000f11], 0	      1061	syntax.c	FUNCTION_9
0xed1	    0x8b0500000000	            mov eax, dword [0x04000f17] 	      1067	syntax.c	FUNCTION_9	IF_1
0xed7	            0x85c0	                           test eax, eax	      1067	syntax.c	FUNCTION_9	IF_1
0xed9	            0x7e0f	                           jle 0x4000f2a	      1067	syntax.c	FUNCTION_9	IF_1
0xedb	      0xbf01000000	                              mov edi, 1	      1069	syntax.c	FUNCTION_9	IF_1	CALL_1
0xee0	      0xe82b000000	                call sym.syn_update_ends	      1069	syntax.c	FUNCTION_9	IF_1	CALL_1
0xee5	      0xe8ae320000	               call sym.check_state_ends	      1070	syntax.c	FUNCTION_9	IF_1	CALL_2
0xeea	    0xc70500000000	     mov dword [0x04000f34], 0xffffffff 	      1073	syntax.c	FUNCTION_9
0xef4	    0x8b0500000000	            mov eax, dword [0x04000f3a] 	      1074	syntax.c	FUNCTION_9
0xefa	          0x83c001	                              add eax, 1	      1074	syntax.c	FUNCTION_9
0xefd	    0x890500000000	            mov dword [0x04000f43], eax 	      1074	syntax.c	FUNCTION_9
0xf03	    0xc70500000000	               mov dword [0x04000f4d], 1	      1076	syntax.c	FUNCTION_9
0xf0d	              0x90	                                     nop	      1078	syntax.c	FUNCTION_9
0xf0e	              0x5d	                                 pop rbp	      1078	syntax.c	FUNCTION_9
0xf0f	              0xc3	                                     ret	      1078	syntax.c	FUNCTION_9
get_cterm_attr_idx	FOR,0:DO,0:IF,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,2	32
0x1147c	              0x55	                                push rbp	      8924	syntax.c	FUNCTION_132
0x1147d	          0x4889e5	                            mov rbp, rsp	      8924	syntax.c	FUNCTION_132
0x11480	        0x4883ec40	                           sub rsp, 0x40	      8924	syntax.c	FUNCTION_132
0x11484	          0x897dcc	             mov dword [rbp - 0x34], edi	      8924	syntax.c	FUNCTION_132
0x11487	          0x8975c8	             mov dword [rbp - 0x38], esi	      8924	syntax.c	FUNCTION_132
0x1148a	          0x8955c4	             mov dword [rbp - 0x3c], edx	      8924	syntax.c	FUNCTION_132
0x1148d	    0x64488b042528	                mov rax, qword fs:[0x28]	      8924	syntax.c	FUNCTION_132
0x11496	        0x488945f8	                mov qword [rbp - 8], rax	      8924	syntax.c	FUNCTION_132
0x1149a	            0x31c0	                            xor eax, eax	      8924	syntax.c	FUNCTION_132
0x1149c	        0x488d45d0	                   lea rax, [rbp - 0x30]	      8927	syntax.c	FUNCTION_132	CALL_1
0x114a0	      0xba28000000	                           mov edx, 0x28	      8927	syntax.c	FUNCTION_132	CALL_1
0x114a5	      0xbe00000000	                              mov esi, 0	      8927	syntax.c	FUNCTION_132	CALL_1
0x114aa	          0x4889c7	                            mov rdi, rax	      8927	syntax.c	FUNCTION_132	CALL_1
0x114ad	      0xe800000000	                          call 0x40114f2	      8927	syntax.c	FUNCTION_132	CALL_1
0x114b2	    0x48c745e099d4	mov qword [rbp - 0x20], 0xffffffffffffd499	      8929	syntax.c	FUNCTION_132
0x114ba	    0x48c745e899d4	mov qword [rbp - 0x18], 0xffffffffffffd499	      8930	syntax.c	FUNCTION_132
0x114c2	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      8932	syntax.c	FUNCTION_132
0x114c5	        0x668945d0	               mov word [rbp - 0x30], ax	      8932	syntax.c	FUNCTION_132
0x114c9	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      8933	syntax.c	FUNCTION_132
0x114cc	        0x668945d8	               mov word [rbp - 0x28], ax	      8933	syntax.c	FUNCTION_132
0x114d0	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      8934	syntax.c	FUNCTION_132
0x114d3	        0x668945da	               mov word [rbp - 0x26], ax	      8934	syntax.c	FUNCTION_132
0x114d7	        0x488d45d0	                   lea rax, [rbp - 0x30]	      8935	syntax.c	FUNCTION_132	CALL_2
0x114db	          0x4889c6	                            mov rsi, rax	      8935	syntax.c	FUNCTION_132	CALL_2
0x114de	      0xbf00000000	                              mov edi, 0	      8935	syntax.c	FUNCTION_132	CALL_2
0x114e3	      0xe890fbffff	                 call sym.get_attr_entry	      8935	syntax.c	FUNCTION_132	CALL_2
0x114e8	        0x488b4df8	                mov rcx, qword [rbp - 8]	      8936	syntax.c	FUNCTION_132
0x114ec	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8936	syntax.c	FUNCTION_132
0x114f5	            0x7405	                            je 0x401153c	      8936	syntax.c	FUNCTION_132
0x114f7	      0xe800000000	                          call 0x401153c	      8936	syntax.c	FUNCTION_132
0x114fc	              0xc9	                                   leave	      8936	syntax.c	FUNCTION_132
0x114fd	              0xc3	                                     ret	      8936	syntax.c	FUNCTION_132
syn_attr2attr	FOR,0:DO,0:IF,3:SWITCH,0:functions,0:ELSE,2:WHILE,0:CALL,3	36
0x11bcc	              0x55	                                push rbp	      9173	syntax.c	FUNCTION_138
0x11bcd	          0x4889e5	                            mov rbp, rsp	      9173	syntax.c	FUNCTION_138
0x11bd0	        0x4883ec20	                           sub rsp, 0x20	      9173	syntax.c	FUNCTION_138
0x11bd4	          0x897dec	             mov dword [rbp - 0x14], edi	      9173	syntax.c	FUNCTION_138
0x11bd7	    0x8b0500000000	            mov eax, dword [0x04011c1d] 	      9177	syntax.c	FUNCTION_138	IF_1
0x11bdd	            0x85c0	                           test eax, eax	      9177	syntax.c	FUNCTION_138	IF_1
0x11bdf	            0x7410	                            je 0x4011c31	      9177	syntax.c	FUNCTION_138	IF_1
0x11be1	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9178	syntax.c	FUNCTION_138	CALL_1
0x11be4	            0x89c7	                            mov edi, eax	      9178	syntax.c	FUNCTION_138	CALL_1
0x11be6	      0xe800000000	                          call 0x4011c2b	      9178	syntax.c	FUNCTION_138	CALL_1
0x11beb	        0x488945f8	                mov qword [rbp - 8], rax	      9178	syntax.c	FUNCTION_138	CALL_1
0x11bef	            0xeb33	                           jmp 0x4011c64	      9178	syntax.c	FUNCTION_138	CALL_1
0x11bf1	    0x8b0500000000	            mov eax, dword [0x04011c37] 	      9181	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x11bf7	          0x83f801	                              cmp eax, 1	      9181	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x11bfa	            0x7f0a	                            jg 0x4011c46	      9181	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x11bfc	    0x8b0500000000	            mov eax, dword [0x04011c42] 	      9181	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x11c02	            0x85c0	                           test eax, eax	      9181	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x11c04	            0x7410	                            je 0x4011c56	      9181	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x11c06	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9182	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x11c09	            0x89c7	                            mov edi, eax	      9182	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x11c0b	      0xe800000000	                          call 0x4011c50	      9182	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x11c10	        0x488945f8	                mov qword [rbp - 8], rax	      9182	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x11c14	            0xeb0e	                           jmp 0x4011c64	      9182	syntax.c	FUNCTION_138	ELSE_1	IF_2
0x11c16	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      9184	syntax.c	FUNCTION_138	CALL_3
0x11c19	            0x89c7	                            mov edi, eax	      9184	syntax.c	FUNCTION_138	CALL_3
0x11c1b	      0xe800000000	                          call 0x4011c60	      9184	syntax.c	FUNCTION_138	CALL_3
0x11c20	        0x488945f8	                mov qword [rbp - 8], rax	      9184	syntax.c	FUNCTION_138	CALL_3
0x11c24	      0x48837df800	                  cmp qword [rbp - 8], 0	      9186	syntax.c	FUNCTION_138	IF_3
0x11c29	            0x7507	                           jne 0x4011c72	      9186	syntax.c	FUNCTION_138	IF_3
0x11c2b	      0xb800000000	                              mov eax, 0	      9187	syntax.c	FUNCTION_138	IF_3
0x11c30	            0xeb08	                           jmp 0x4011c7a	      9187	syntax.c	FUNCTION_138	IF_3
0x11c32	        0x488b45f8	                mov rax, qword [rbp - 8]	      9188	syntax.c	FUNCTION_138
0x11c36	           0xfb700	                   movzx eax, word [rax]	      9188	syntax.c	FUNCTION_138
0x11c39	              0x98	                                    cwde	      9188	syntax.c	FUNCTION_138
0x11c3a	              0xc9	                                   leave	      9189	syntax.c	FUNCTION_138
0x11c3b	              0xc3	                                     ret	      9189	syntax.c	FUNCTION_138
syn_list_header	FOR,0:DO,0:IF,8:SWITCH,0:functions,0:ELSE,2:WHILE,0:CALL,8	82
0x12944	              0x55	                                push rbp	      9478	syntax.c	FUNCTION_146
0x12945	          0x4889e5	                            mov rbp, rsp	      9478	syntax.c	FUNCTION_146
0x12948	        0x4883ec20	                           sub rsp, 0x20	      9478	syntax.c	FUNCTION_146
0x1294c	          0x897dec	             mov dword [rbp - 0x14], edi	      9478	syntax.c	FUNCTION_146
0x1294f	          0x8975e8	             mov dword [rbp - 0x18], esi	      9478	syntax.c	FUNCTION_146
0x12952	          0x8955e4	             mov dword [rbp - 0x1c], edx	      9478	syntax.c	FUNCTION_146
0x12955	    0xc745f8130000	               mov dword [rbp - 8], 0x13	      9479	syntax.c	FUNCTION_146
0x1295c	    0xc745fc010000	                  mov dword [rbp - 4], 1	      9480	syntax.c	FUNCTION_146
0x12963	        0x837dec00	               cmp dword [rbp - 0x14], 0	      9482	syntax.c	FUNCTION_146	IF_1
0x12967	            0x755c	                           jne 0x4012a05	      9482	syntax.c	FUNCTION_146	IF_1
0x12969	      0xbf0a000000	                            mov edi, 0xa	      9484	syntax.c	FUNCTION_146	IF_1	CALL_1
0x1296e	      0xe800000000	                          call 0x40129b3	      9484	syntax.c	FUNCTION_146	IF_1	CALL_1
0x12973	    0x8b0500000000	            mov eax, dword [0x040129b9] 	      9485	syntax.c	FUNCTION_146	IF_1	IF_2
0x12979	            0x85c0	                           test eax, eax	      9485	syntax.c	FUNCTION_146	IF_1	IF_2
0x1297b	            0x740a	                            je 0x40129c7	      9485	syntax.c	FUNCTION_146	IF_1	IF_2
0x1297d	      0xb801000000	                              mov eax, 1	      9486	syntax.c	FUNCTION_146	IF_1	IF_2
0x12982	      0xe9f1000000	                           jmp 0x4012ab8	      9486	syntax.c	FUNCTION_146	IF_1	IF_2
0x12987	    0x488b0d000000	            mov rcx, qword [0x040129ce] 	      9487	syntax.c	FUNCTION_146	IF_1	CALL_3
0x1298e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      9487	syntax.c	FUNCTION_146	IF_1	CALL_3
0x12991	          0x4863d0	                         movsxd rdx, eax	      9487	syntax.c	FUNCTION_146	IF_1	CALL_3
0x12994	          0x4889d0	                            mov rax, rdx	      9487	syntax.c	FUNCTION_146	IF_1	CALL_3
0x12997	        0x48c1e003	                              shl rax, 3	      9487	syntax.c	FUNCTION_146	IF_1	CALL_3
0x1299b	          0x4801d0	                            add rax, rdx	      9487	syntax.c	FUNCTION_146	IF_1	CALL_3
0x1299e	          0x4801c0	                            add rax, rax	      9487	syntax.c	FUNCTION_146	IF_1	CALL_3
0x129a1	          0x4801d0	                            add rax, rdx	      9487	syntax.c	FUNCTION_146	IF_1	CALL_3
0x129a4	        0x48c1e003	                              shl rax, 3	      9487	syntax.c	FUNCTION_146	IF_1	CALL_3
0x129a8	    0x482d98000000	                           sub rax, 0x98	      9487	syntax.c	FUNCTION_146	IF_1	CALL_3
0x129ae	          0x4801c8	                            add rax, rcx	      9487	syntax.c	FUNCTION_146	IF_1	CALL_3
0x129b1	          0x488b00	                    mov rax, qword [rax]	      9487	syntax.c	FUNCTION_146	IF_1	CALL_3
0x129b4	          0x4889c7	                            mov rdi, rax	      9487	syntax.c	FUNCTION_146	IF_1	CALL_3
0x129b7	      0xe800000000	                          call 0x40129fc	      9487	syntax.c	FUNCTION_146	IF_1	CALL_3
0x129bc	    0xc745f80f0000	                mov dword [rbp - 8], 0xf	      9488	syntax.c	FUNCTION_146	IF_1
0x129c3	            0xeb4a	                           jmp 0x4012a4f	      9488	syntax.c	FUNCTION_146	IF_1
0x129c5	    0x8b1500000000	            mov edx, dword [0x04012a0b] 	      9490	syntax.c	FUNCTION_146	ELSE_1	IF_3
0x129cb	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      9490	syntax.c	FUNCTION_146	ELSE_1	IF_3
0x129ce	             0x1d0	                            add eax, edx	      9490	syntax.c	FUNCTION_146	ELSE_1	IF_3
0x129d0	          0x83c001	                              add eax, 1	      9490	syntax.c	FUNCTION_146	ELSE_1	IF_3
0x129d3	          0x4863d0	                         movsxd rdx, eax	      9490	syntax.c	FUNCTION_146	ELSE_1	IF_3
0x129d6	    0x488b05000000	            mov rax, qword [0x04012a1d] 	      9490	syntax.c	FUNCTION_146	ELSE_1	IF_3
0x129dd	          0x4839c2	                            cmp rdx, rax	      9490	syntax.c	FUNCTION_146	ELSE_1	IF_3
0x129e0	            0x7c1b	                            jl 0x4012a3d	      9490	syntax.c	FUNCTION_146	ELSE_1	IF_3
0x129e2	      0xbf0a000000	                            mov edi, 0xa	      9492	syntax.c	FUNCTION_146	ELSE_1	IF_3	CALL_4
0x129e7	      0xe800000000	                          call 0x4012a2c	      9492	syntax.c	FUNCTION_146	ELSE_1	IF_3	CALL_4
0x129ec	    0x8b0500000000	            mov eax, dword [0x04012a32] 	      9493	syntax.c	FUNCTION_146	ELSE_1	IF_3	IF_4
0x129f2	            0x85c0	                           test eax, eax	      9493	syntax.c	FUNCTION_146	ELSE_1	IF_3	IF_4
0x129f4	            0x7419	                            je 0x4012a4f	      9493	syntax.c	FUNCTION_146	ELSE_1	IF_3	IF_4
0x129f6	      0xb801000000	                              mov eax, 1	      9494	syntax.c	FUNCTION_146	ELSE_1	IF_3	IF_4
0x129fb	            0xeb7b	                           jmp 0x4012ab8	      9494	syntax.c	FUNCTION_146	ELSE_1	IF_3	IF_4
0x129fd	    0x8b0500000000	            mov eax, dword [0x04012a43] 	      9498	syntax.c	FUNCTION_146	ELSE_2	IF_5
0x12a03	          0x3b45f8	                cmp eax, dword [rbp - 8]	      9498	syntax.c	FUNCTION_146	ELSE_2	IF_5
0x12a06	            0x7c07	                            jl 0x4012a4f	      9498	syntax.c	FUNCTION_146	ELSE_2	IF_5
0x12a08	    0xc745fc000000	                  mov dword [rbp - 4], 0	      9499	syntax.c	FUNCTION_146	ELSE_2	IF_5
0x12a0f	    0x8b0500000000	            mov eax, dword [0x04012a55] 	      9502	syntax.c	FUNCTION_146	IF_6
0x12a15	          0x3b45f8	                cmp eax, dword [rbp - 8]	      9502	syntax.c	FUNCTION_146	IF_6
0x12a18	            0x7c0c	                            jl 0x4012a66	      9502	syntax.c	FUNCTION_146	IF_6
0x12a1a	    0x8b0500000000	            mov eax, dword [0x04012a60] 	      9503	syntax.c	FUNCTION_146	IF_6
0x12a20	          0x83c001	                              add eax, 1	      9503	syntax.c	FUNCTION_146	IF_6
0x12a23	          0x8945f8	                mov dword [rbp - 8], eax	      9503	syntax.c	FUNCTION_146	IF_6
0x12a26	          0x8b45f8	                mov eax, dword [rbp - 8]	      9504	syntax.c	FUNCTION_146	IF_7
0x12a29	          0x4863d0	                         movsxd rdx, eax	      9504	syntax.c	FUNCTION_146	IF_7
0x12a2c	    0x488b05000000	            mov rax, qword [0x04012a73] 	      9504	syntax.c	FUNCTION_146	IF_7
0x12a33	          0x4839c2	                            cmp rdx, rax	      9504	syntax.c	FUNCTION_146	IF_7
0x12a36	            0x7c0d	                            jl 0x4012a85	      9504	syntax.c	FUNCTION_146	IF_7
0x12a38	    0x488b05000000	            mov rax, qword [0x04012a7f] 	      9505	syntax.c	FUNCTION_146	IF_7
0x12a3f	          0x83e801	                              sub eax, 1	      9505	syntax.c	FUNCTION_146	IF_7
0x12a42	          0x8945f8	                mov dword [rbp - 8], eax	      9505	syntax.c	FUNCTION_146	IF_7
0x12a45	          0x8b45f8	                mov eax, dword [rbp - 8]	      9507	syntax.c	FUNCTION_146	CALL_5
0x12a48	            0x89c7	                            mov edi, eax	      9507	syntax.c	FUNCTION_146	CALL_5
0x12a4a	      0xe800000000	                          call 0x4012a8f	      9507	syntax.c	FUNCTION_146	CALL_5
0x12a4f	        0x837dec00	               cmp dword [rbp - 0x14], 0	      9510	syntax.c	FUNCTION_146	IF_8
0x12a53	            0x7520	                           jne 0x4012ab5	      9510	syntax.c	FUNCTION_146	IF_8
0x12a55	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      9512	syntax.c	FUNCTION_146	IF_8	CALL_7
0x12a58	            0x89c7	                            mov edi, eax	      9512	syntax.c	FUNCTION_146	IF_8	CALL_7
0x12a5a	      0xe800000000	                          call 0x4012a9f	      9512	syntax.c	FUNCTION_146	IF_8	CALL_7
0x12a5f	            0x89c6	                            mov esi, eax	      9512	syntax.c	FUNCTION_146	IF_8	CALL_7
0x12a61	      0xbf00000000	                              mov edi, 0	      9512	syntax.c	FUNCTION_146	IF_8	CALL_7
0x12a66	      0xe800000000	                          call 0x4012aab	      9512	syntax.c	FUNCTION_146	IF_8	CALL_7
0x12a6b	      0xbf20000000	                           mov edi, 0x20	      9513	syntax.c	FUNCTION_146	IF_8	CALL_8
0x12a70	      0xe800000000	                          call 0x4012ab5	      9513	syntax.c	FUNCTION_146	IF_8	CALL_8
0x12a75	          0x8b45fc	                mov eax, dword [rbp - 4]	      9516	syntax.c	FUNCTION_146
0x12a78	              0xc9	                                   leave	      9517	syntax.c	FUNCTION_146
0x12a79	              0xc3	                                     ret	      9517	syntax.c	FUNCTION_146
clear_hl_tables	FOR,1:DO,0:IF,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,5	35
0x11610	              0x55	                                push rbp	      8989	syntax.c	FUNCTION_135
0x11611	          0x4889e5	                            mov rbp, rsp	      8989	syntax.c	FUNCTION_135
0x11614	        0x4883ec10	                           sub rsp, 0x10	      8989	syntax.c	FUNCTION_135
0x11618	      0xbf00000000	                              mov edi, 0	      8994	syntax.c	FUNCTION_135	CALL_1
0x1161d	      0xe800000000	                          call 0x4011662	      8994	syntax.c	FUNCTION_135	CALL_1
0x11622	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      8996	syntax.c	FUNCTION_135	FOR_1
0x11629	            0xeb46	                           jmp 0x40116b1	      8996	syntax.c	FUNCTION_135	FOR_1
0x1162b	    0x488b0d000000	            mov rcx, qword [0x04011672] 	      8998	syntax.c	FUNCTION_135	FOR_1
0x11632	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      8998	syntax.c	FUNCTION_135	FOR_1
0x11635	          0x4863d0	                         movsxd rdx, eax	      8998	syntax.c	FUNCTION_135	FOR_1
0x11638	          0x4889d0	                            mov rax, rdx	      8998	syntax.c	FUNCTION_135	FOR_1
0x1163b	        0x48c1e002	                              shl rax, 2	      8998	syntax.c	FUNCTION_135	FOR_1
0x1163f	          0x4801d0	                            add rax, rdx	      8998	syntax.c	FUNCTION_135	FOR_1
0x11642	        0x48c1e003	                              shl rax, 3	      8998	syntax.c	FUNCTION_135	FOR_1
0x11646	          0x4801c8	                            add rax, rcx	      8998	syntax.c	FUNCTION_135	FOR_1
0x11649	        0x488945f8	                mov qword [rbp - 8], rax	      8998	syntax.c	FUNCTION_135	FOR_1
0x1164d	        0x488b45f8	                mov rax, qword [rbp - 8]	      8999	syntax.c	FUNCTION_135	FOR_1	CALL_2
0x11651	        0x488b4008	                mov rax, qword [rax + 8]	      8999	syntax.c	FUNCTION_135	FOR_1	CALL_2
0x11655	          0x4889c7	                            mov rdi, rax	      8999	syntax.c	FUNCTION_135	FOR_1	CALL_2
0x11658	      0xe800000000	                          call 0x401169d	      8999	syntax.c	FUNCTION_135	FOR_1	CALL_2
0x1165d	        0x488b45f8	                mov rax, qword [rbp - 8]	      9000	syntax.c	FUNCTION_135	FOR_1	CALL_3
0x11661	        0x488b4010	            mov rax, qword [rax + 0x10] 	      9000	syntax.c	FUNCTION_135	FOR_1	CALL_3
0x11665	          0x4889c7	                            mov rdi, rax	      9000	syntax.c	FUNCTION_135	FOR_1	CALL_3
0x11668	      0xe800000000	                          call 0x40116ad	      9000	syntax.c	FUNCTION_135	FOR_1	CALL_3
0x1166d	        0x8345f401	                add dword [rbp - 0xc], 1	      8996	syntax.c	FUNCTION_135	FOR_1
0x11671	    0x8b0500000000	            mov eax, dword [0x040116b7] 	      8996	syntax.c	FUNCTION_135	FOR_1
0x11677	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	      8996	syntax.c	FUNCTION_135	FOR_1
0x1167a	            0x7faf	                            jg 0x401166b	      8996	syntax.c	FUNCTION_135	FOR_1
0x1167c	      0xbf00000000	                              mov edi, 0	      9002	syntax.c	FUNCTION_135	CALL_4
0x11681	      0xe800000000	                          call 0x40116c6	      9002	syntax.c	FUNCTION_135	CALL_4
0x11686	      0xbf00000000	                              mov edi, 0	      9003	syntax.c	FUNCTION_135	CALL_5
0x1168b	      0xe800000000	                          call 0x40116d0	      9003	syntax.c	FUNCTION_135	CALL_5
0x11690	              0x90	                                     nop	      9004	syntax.c	FUNCTION_135
0x11691	              0xc9	                                   leave	      9004	syntax.c	FUNCTION_135
0x11692	              0xc3	                                     ret	      9004	syntax.c	FUNCTION_135
get_syn_pattern	FOR,1:DO,1:IF,14:SWITCH,1:functions,0:ELSE,2:WHILE,0:CALL,15	264
0xafbe	              0x55	                                push rbp	      5739	syntax.c	FUNCTION_90
0xafbf	          0x4889e5	                            mov rbp, rsp	      5739	syntax.c	FUNCTION_90
0xafc2	        0x4883ec40	                           sub rsp, 0x40	      5739	syntax.c	FUNCTION_90
0xafc6	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      5739	syntax.c	FUNCTION_90
0xafca	        0x488975c0	             mov qword [rbp - 0x40], rsi	      5739	syntax.c	FUNCTION_90
0xafce	    0x64488b042528	                mov rax, qword fs:[0x28]	      5739	syntax.c	FUNCTION_90
0xafd7	        0x488945f8	                mov qword [rbp - 8], rax	      5739	syntax.c	FUNCTION_90
0xafdb	            0x31c0	                            xor eax, eax	      5739	syntax.c	FUNCTION_90
0xafdd	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      5746	syntax.c	FUNCTION_90	IF_1
0xafe2	            0x7429	                            je 0x400b04d	      5746	syntax.c	FUNCTION_90	IF_1
0xafe4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5746	syntax.c	FUNCTION_90	IF_1
0xafe8	           0xfb600	                   movzx eax, byte [rax]	      5746	syntax.c	FUNCTION_90	IF_1
0xafeb	            0x84c0	                             test al, al	      5746	syntax.c	FUNCTION_90	IF_1
0xafed	            0x741e	                            je 0x400b04d	      5746	syntax.c	FUNCTION_90	IF_1
0xafef	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5746	syntax.c	FUNCTION_90	IF_1
0xaff3	        0x4883c001	                              add rax, 1	      5746	syntax.c	FUNCTION_90	IF_1
0xaff7	           0xfb600	                   movzx eax, byte [rax]	      5746	syntax.c	FUNCTION_90	IF_1
0xaffa	            0x84c0	                             test al, al	      5746	syntax.c	FUNCTION_90	IF_1
0xaffc	            0x740f	                            je 0x400b04d	      5746	syntax.c	FUNCTION_90	IF_1
0xaffe	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5746	syntax.c	FUNCTION_90	IF_1
0xb002	        0x4883c002	                              add rax, 2	      5746	syntax.c	FUNCTION_90	IF_1
0xb006	           0xfb600	                   movzx eax, byte [rax]	      5746	syntax.c	FUNCTION_90	IF_1
0xb009	            0x84c0	                             test al, al	      5746	syntax.c	FUNCTION_90	IF_1
0xb00b	            0x750a	                           jne 0x400b057	      5746	syntax.c	FUNCTION_90	IF_1
0xb00d	      0xb800000000	                              mov eax, 0	      5747	syntax.c	FUNCTION_90	IF_1
0xb012	      0xe93a030000	                           jmp 0x400b391	      5747	syntax.c	FUNCTION_90	IF_1
0xb017	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5749	syntax.c	FUNCTION_90	CALL_1
0xb01b	           0xfb600	                   movzx eax, byte [rax]	      5749	syntax.c	FUNCTION_90	CALL_1
0xb01e	           0xfb6c0	                           movzx eax, al	      5749	syntax.c	FUNCTION_90	CALL_1
0xb021	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      5749	syntax.c	FUNCTION_90	CALL_1
0xb025	        0x488d7a01	                      lea rdi, [rdx + 1]	      5749	syntax.c	FUNCTION_90	CALL_1
0xb029	      0xb900000000	                              mov ecx, 0	      5749	syntax.c	FUNCTION_90	CALL_1
0xb02e	      0xba01000000	                              mov edx, 1	      5749	syntax.c	FUNCTION_90	CALL_1
0xb033	            0x89c6	                            mov esi, eax	      5749	syntax.c	FUNCTION_90	CALL_1
0xb035	      0xe800000000	                          call 0x400b07a	      5749	syntax.c	FUNCTION_90	CALL_1
0xb03a	        0x488945e0	             mov qword [rbp - 0x20], rax	      5749	syntax.c	FUNCTION_90	CALL_1
0xb03e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5750	syntax.c	FUNCTION_90	IF_2
0xb042	           0xfb610	                   movzx edx, byte [rax]	      5750	syntax.c	FUNCTION_90	IF_2
0xb045	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5750	syntax.c	FUNCTION_90	IF_2
0xb049	           0xfb600	                   movzx eax, byte [rax]	      5750	syntax.c	FUNCTION_90	IF_2
0xb04c	            0x38c2	                              cmp dl, al	      5750	syntax.c	FUNCTION_90	IF_2
0xb04e	            0x7426	                            je 0x400b0b6	      5750	syntax.c	FUNCTION_90	IF_2
0xb050	      0xbf00000000	                              mov edi, 0	      5752	syntax.c	FUNCTION_90	IF_2	CALL_3
0xb055	      0xe800000000	                          call 0x400b09a	      5752	syntax.c	FUNCTION_90	IF_2	CALL_3
0xb05a	          0x4889c2	                            mov rdx, rax	      5752	syntax.c	FUNCTION_90	IF_2	CALL_3
0xb05d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5752	syntax.c	FUNCTION_90	IF_2	CALL_3
0xb061	          0x4889c6	                            mov rsi, rax	      5752	syntax.c	FUNCTION_90	IF_2	CALL_3
0xb064	          0x4889d7	                            mov rdi, rdx	      5752	syntax.c	FUNCTION_90	IF_2	CALL_3
0xb067	      0xe800000000	                          call 0x400b0ac	      5752	syntax.c	FUNCTION_90	IF_2	CALL_3
0xb06c	      0xb800000000	                              mov eax, 0	      5753	syntax.c	FUNCTION_90	IF_2
0xb071	      0xe9db020000	                           jmp 0x400b391	      5753	syntax.c	FUNCTION_90	IF_2
0xb076	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0xb07a	          0x4889c2	                            mov rdx, rax	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0xb07d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0xb081	          0x4829c2	                            sub rdx, rax	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0xb084	          0x4889d0	                            mov rax, rdx	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0xb087	          0x83e801	                              sub eax, 1	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0xb08a	            0x89c2	                            mov edx, eax	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0xb08c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0xb090	        0x4883c001	                              add rax, 1	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0xb094	            0x89d6	                            mov esi, edx	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0xb096	          0x4889c7	                            mov rdi, rax	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0xb099	      0xe800000000	                          call 0x400b0de	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0xb09e	          0x4889c2	                            mov rdx, rax	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0xb0a1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0xb0a5	        0x48895060	             mov qword [rax + 0x60], rdx	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0xb0a9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0xb0ad	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0xb0b1	          0x4885c0	                           test rax, rax	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0xb0b4	            0x750a	                           jne 0x400b100	      5756	syntax.c	FUNCTION_90	IF_3	CALL_4
0xb0b6	      0xb800000000	                              mov eax, 0	      5757	syntax.c	FUNCTION_90	IF_3
0xb0bb	      0xe991020000	                           jmp 0x400b391	      5757	syntax.c	FUNCTION_90	IF_3
0xb0c0	    0x488b05000000	            mov rax, qword [0x0400b107] 	      5760	syntax.c	FUNCTION_90
0xb0c7	        0x488945e8	             mov qword [rbp - 0x18], rax	      5760	syntax.c	FUNCTION_90
0xb0cb	    0x48c705000000	               mov qword [0x0400b116], 0	      5761	syntax.c	FUNCTION_90
0xb0d6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5762	syntax.c	FUNCTION_90	CALL_5
0xb0da	        0x488b4060	            mov rax, qword [rax + 0x60] 	      5762	syntax.c	FUNCTION_90	CALL_5
0xb0de	      0xbe01000000	                              mov esi, 1	      5762	syntax.c	FUNCTION_90	CALL_5
0xb0e3	          0x4889c7	                            mov rdi, rax	      5762	syntax.c	FUNCTION_90	CALL_5
0xb0e6	      0xe800000000	                          call 0x400b12b	      5762	syntax.c	FUNCTION_90	CALL_5
0xb0eb	          0x4889c2	                            mov rdx, rax	      5762	syntax.c	FUNCTION_90	CALL_5
0xb0ee	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5762	syntax.c	FUNCTION_90	CALL_5
0xb0f2	        0x48895068	             mov qword [rax + 0x68], rdx	      5762	syntax.c	FUNCTION_90	CALL_5
0xb0f6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5763	syntax.c	FUNCTION_90
0xb0fa	    0x488905000000	            mov qword [0x0400b141], rax 	      5763	syntax.c	FUNCTION_90
0xb101	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5765	syntax.c	FUNCTION_90	IF_4
0xb105	        0x488b4068	            mov rax, qword [rax + 0x68] 	      5765	syntax.c	FUNCTION_90	IF_4
0xb109	          0x4885c0	                           test rax, rax	      5765	syntax.c	FUNCTION_90	IF_4
0xb10c	            0x750a	                           jne 0x400b158	      5765	syntax.c	FUNCTION_90	IF_4
0xb10e	      0xb800000000	                              mov eax, 0	      5766	syntax.c	FUNCTION_90	IF_4
0xb113	      0xe939020000	                           jmp 0x400b391	      5766	syntax.c	FUNCTION_90	IF_4
0xb118	    0x488b05000000	            mov rax, qword [0x0400b15f] 	      5767	syntax.c	FUNCTION_90
0xb11f	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5767	syntax.c	FUNCTION_90
0xb123	    0x8b9058020000	           mov edx, dword [rax + 0x258] 	      5767	syntax.c	FUNCTION_90
0xb129	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5767	syntax.c	FUNCTION_90
0xb12d	          0x89502c	             mov dword [rax + 0x2c], edx	      5767	syntax.c	FUNCTION_90
0xb130	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5769	syntax.c	FUNCTION_90	CALL_6
0xb134	        0x4883c070	                           add rax, 0x70	      5769	syntax.c	FUNCTION_90	CALL_6
0xb138	          0x4889c7	                            mov rdi, rax	      5769	syntax.c	FUNCTION_90	CALL_6
0xb13b	      0xe8de1c0000	                 call sym.syn_clear_time	      5769	syntax.c	FUNCTION_90	CALL_6
0xb140	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5775	syntax.c	FUNCTION_90
0xb144	        0x4883c001	                              add rax, 1	      5775	syntax.c	FUNCTION_90
0xb148	        0x488945e0	             mov qword [rbp - 0x20], rax	      5775	syntax.c	FUNCTION_90
0xb14c	    0xc745dc070000	               mov dword [rbp - 0x24], 7	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0xb153	            0xeb25	                           jmp 0x400b1ba	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0xb155	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0xb158	            0x4898	                                    cdqe	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0xb15a	    0x488b0cc50000	                  mov rcx, qword [rax*8]	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0xb162	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0xb166	      0xba03000000	                              mov edx, 3	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0xb16b	          0x4889ce	                            mov rsi, rcx	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0xb16e	          0x4889c7	                            mov rdi, rax	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0xb171	      0xe800000000	                          call 0x400b1b6	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0xb176	            0x85c0	                           test eax, eax	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0xb178	            0x740c	                            je 0x400b1c6	      5779	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5	CALL_7
0xb17a	        0x836ddc01	               sub dword [rbp - 0x24], 1	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0xb17e	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0xb182	            0x79d1	                           jns 0x400b195	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0xb184	            0xeb01	                           jmp 0x400b1c7	      5778	syntax.c	FUNCTION_90	DO_1	FOR_1
0xb186	              0x90	                                     nop	      5780	syntax.c	FUNCTION_90	DO_1	FOR_1	IF_5
0xb187	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      5781	syntax.c	FUNCTION_90	DO_1	IF_6
0xb18b	     0xf8859010000	                            js 0x400b32a	      5781	syntax.c	FUNCTION_90	DO_1	IF_6
0xb191	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      5783	syntax.c	FUNCTION_90	DO_1	IF_6
0xb194	            0x4898	                                    cdqe	      5783	syntax.c	FUNCTION_90	DO_1	IF_6
0xb196	    0x488d14850000	                        lea rdx, [rax*4]	      5783	syntax.c	FUNCTION_90	DO_1	IF_6
0xb19e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5783	syntax.c	FUNCTION_90	DO_1	IF_6
0xb1a2	          0x4801d0	                            add rax, rdx	      5783	syntax.c	FUNCTION_90	DO_1	IF_6
0xb1a5	        0x4883c008	                              add rax, 8	      5783	syntax.c	FUNCTION_90	DO_1	IF_6
0xb1a9	        0x488945f0	             mov qword [rbp - 0x10], rax	      5783	syntax.c	FUNCTION_90	DO_1	IF_6
0xb1ad	        0x837ddc06	               cmp dword [rbp - 0x24], 6	      5784	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7
0xb1b1	            0x7432	                            je 0x400b225	      5784	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7
0xb1b3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0xb1b7	        0x4883c003	                              add rax, 3	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0xb1bb	           0xfb600	                   movzx eax, byte [rax]	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0xb1be	           0xfb6c0	                           movzx eax, al	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0xb1c1	          0x83f865	                           cmp eax, 0x65	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0xb1c4	            0x740c	                            je 0x400b212	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0xb1c6	          0x83f873	                           cmp eax, 0x73	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0xb1c9	            0x7416	                            je 0x400b221	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0xb1cb	          0x83f862	                           cmp eax, 0x62	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0xb1ce	            0x7414	                            je 0x400b224	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0xb1d0	            0xeb06	                           jmp 0x400b218	      5785	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0xb1d2	        0x8345dc07	               add dword [rbp - 0x24], 7	      5789	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0xb1d6	            0xeb0d	                           jmp 0x400b225	      5789	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0xb1d8	    0xc745dcffffff	     mov dword [rbp - 0x24], 0xffffffff 	      5790	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0xb1df	            0xeb04	                           jmp 0x400b225	      5790	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0xb1e1	              0x90	                                     nop	      5787	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0xb1e2	            0xeb01	                           jmp 0x400b225	      5787	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0xb1e4	              0x90	                                     nop	      5788	syntax.c	FUNCTION_90	DO_1	IF_6	IF_7	SWITCH_1
0xb1e5	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      5792	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0xb1e9	     0xf88fb000000	                            js 0x400b32a	      5792	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0xb1ef	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5794	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0xb1f3	         0xfb75004	               movzx edx, word [rax + 4]	      5794	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0xb1f7	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      5794	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0xb1fa	      0xbe01000000	                              mov esi, 1	      5794	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0xb1ff	            0x89c1	                            mov ecx, eax	      5794	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0xb201	            0xd3e6	                             shl esi, cl	      5794	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0xb203	            0x89f0	                            mov eax, esi	      5794	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0xb205	             0x9c2	                             or edx, eax	      5794	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0xb207	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5794	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0xb20b	        0x66895004	                  mov word [rax + 4], dx	      5794	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0xb20f	        0x837ddc06	               cmp dword [rbp - 0x24], 6	      5795	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9
0xb213	            0x7558	                           jne 0x400b2ad	      5795	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9
0xb215	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5797	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9
0xb219	        0x4883c003	                              add rax, 3	      5797	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9
0xb21d	        0x488945e0	             mov qword [rbp - 0x20], rax	      5797	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9
0xb221	        0x488d45e0	                   lea rax, [rbp - 0x20]	      5798	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	CALL_8
0xb225	          0x4889c7	                            mov rdi, rax	      5798	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	CALL_8
0xb228	      0xe800000000	                          call 0x400b26d	      5798	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	CALL_8
0xb22d	            0x89c2	                            mov edx, eax	      5798	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	CALL_8
0xb22f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5798	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	CALL_8
0xb233	            0x8910	                    mov dword [rax], edx	      5798	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	CALL_8
0xb235	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5801	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0xb239	         0xfb74004	               movzx eax, word [rax + 4]	      5801	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0xb23d	              0x98	                                    cwde	      5801	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0xb23e	          0x83e001	                              and eax, 1	      5801	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0xb241	            0x85c0	                           test eax, eax	      5801	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0xb243	     0xf858a000000	                           jne 0x400b313	      5801	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0xb249	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5803	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0xb24d	         0xfb74004	               movzx eax, word [rax + 4]	      5803	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0xb251	          0x83c801	                               or eax, 1	      5803	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0xb254	            0x89c2	                            mov edx, eax	      5803	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0xb256	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5803	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0xb25a	        0x66895004	                  mov word [rax + 4], dx	      5803	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0xb25e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5804	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0xb262	            0x8b10	                    mov edx, dword [rax]	      5804	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0xb264	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5804	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0xb268	          0x895008	                mov dword [rax + 8], edx	      5804	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0xb26b	            0xeb66	                           jmp 0x400b313	      5804	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_9	IF_10
0xb26d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5809	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1
0xb271	        0x4883c004	                              add rax, 4	      5809	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1
0xb275	        0x488945e0	             mov qword [rbp - 0x20], rax	      5809	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1
0xb279	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5810	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11
0xb27d	           0xfb600	                   movzx eax, byte [rax]	      5810	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11
0xb280	            0x3c2b	                            cmp al, 0x2b	      5810	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11
0xb282	            0x7522	                           jne 0x400b2e6	      5810	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11
0xb284	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5812	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11
0xb288	        0x4883c001	                              add rax, 1	      5812	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11
0xb28c	        0x488945e0	             mov qword [rbp - 0x20], rax	      5812	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11
0xb290	        0x488d45e0	                   lea rax, [rbp - 0x20]	      5813	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11	CALL_9
0xb294	          0x4889c7	                            mov rdi, rax	      5813	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11	CALL_9
0xb297	      0xe800000000	                          call 0x400b2dc	      5813	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11	CALL_9
0xb29c	            0x89c2	                            mov edx, eax	      5813	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11	CALL_9
0xb29e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5813	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11	CALL_9
0xb2a2	            0x8910	                    mov dword [rax], edx	      5813	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11	CALL_9
0xb2a4	            0xeb2d	                           jmp 0x400b313	      5813	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	IF_11	CALL_9
0xb2a6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5815	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12
0xb2aa	           0xfb600	                   movzx eax, byte [rax]	      5815	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12
0xb2ad	            0x3c2d	                            cmp al, 0x2d	      5815	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12
0xb2af	            0x7522	                           jne 0x400b313	      5815	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12
0xb2b1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5817	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12
0xb2b5	        0x4883c001	                              add rax, 1	      5817	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12
0xb2b9	        0x488945e0	             mov qword [rbp - 0x20], rax	      5817	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12
0xb2bd	        0x488d45e0	                   lea rax, [rbp - 0x20]	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0xb2c1	          0x4889c7	                            mov rdi, rax	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0xb2c4	      0xe800000000	                          call 0x400b309	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0xb2c9	            0xf7d8	                                 neg eax	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0xb2cb	            0x89c2	                            mov edx, eax	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0xb2cd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0xb2d1	            0x8910	                    mov dword [rax], edx	      5818	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	ELSE_1	ELSE_2	IF_12	CALL_10
0xb2d3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5821	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_13
0xb2d7	           0xfb600	                   movzx eax, byte [rax]	      5821	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_13
0xb2da	            0x3c2c	                            cmp al, 0x2c	      5821	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_13
0xb2dc	            0x7518	                           jne 0x400b336	      5821	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_13
0xb2de	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5823	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0xb2e2	        0x4883c001	                              add rax, 1	      5823	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0xb2e6	        0x488945e0	             mov qword [rbp - 0x20], rax	      5823	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8
0xb2ea	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      5826	syntax.c	FUNCTION_90	DO_1
0xb2ee	     0xf8958feffff	                           jns 0x400b18c	      5826	syntax.c	FUNCTION_90	DO_1
0xb2f4	            0xeb01	                           jmp 0x400b337	      5826	syntax.c	FUNCTION_90	DO_1
0xb2f6	              0x90	                                     nop	      5822	syntax.c	FUNCTION_90	DO_1	IF_6	IF_8	IF_13
0xb2f7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0xb2fb	           0xfb600	                   movzx eax, byte [rax]	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0xb2fe	           0xfb6c0	                           movzx eax, al	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0xb301	            0x89c7	                            mov edi, eax	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0xb303	      0xe800000000	                          call 0x400b348	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0xb308	            0x85c0	                           test eax, eax	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0xb30a	            0x7539	                           jne 0x400b385	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0xb30c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0xb310	           0xfb600	                   movzx eax, byte [rax]	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0xb313	            0x3c20	                            cmp al, 0x20	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0xb315	            0x742e	                            je 0x400b385	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0xb317	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0xb31b	           0xfb600	                   movzx eax, byte [rax]	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0xb31e	            0x3c09	                               cmp al, 9	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0xb320	            0x7423	                            je 0x400b385	      5828	syntax.c	FUNCTION_90	IF_14	CALL_12
0xb322	      0xbf00000000	                              mov edi, 0	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0xb327	      0xe800000000	                          call 0x400b36c	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0xb32c	          0x4889c2	                            mov rdx, rax	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0xb32f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0xb333	          0x4889c6	                            mov rsi, rax	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0xb336	          0x4889d7	                            mov rdi, rdx	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0xb339	      0xe800000000	                          call 0x400b37e	      5830	syntax.c	FUNCTION_90	IF_14	CALL_14
0xb33e	      0xb800000000	                              mov eax, 0	      5831	syntax.c	FUNCTION_90	IF_14
0xb343	            0xeb0c	                           jmp 0x400b391	      5831	syntax.c	FUNCTION_90	IF_14
0xb345	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5833	syntax.c	FUNCTION_90	CALL_15
0xb349	          0x4889c7	                            mov rdi, rax	      5833	syntax.c	FUNCTION_90	CALL_15
0xb34c	      0xe800000000	                          call 0x400b391	      5833	syntax.c	FUNCTION_90	CALL_15
0xb351	        0x488b4df8	                mov rcx, qword [rbp - 8]	      5834	syntax.c	FUNCTION_90
0xb355	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      5834	syntax.c	FUNCTION_90
0xb35e	            0x7405	                            je 0x400b3a5	      5834	syntax.c	FUNCTION_90
0xb360	      0xe800000000	                          call 0x400b3a5	      5834	syntax.c	FUNCTION_90
0xb365	              0xc9	                                   leave	      5834	syntax.c	FUNCTION_90
0xb366	              0xc3	                                     ret	      5834	syntax.c	FUNCTION_90
syntax_start	FOR,1:DO,0:IF,21:SWITCH,0:functions,0:ELSE,7:WHILE,3:CALL,21	271
0x16	              0x55	                                push rbp	       515	syntax.c	FUNCTION_2
0x17	          0x4889e5	                            mov rbp, rsp	       515	syntax.c	FUNCTION_2
0x1a	        0x4883ec50	                           sub rsp, 0x50	       515	syntax.c	FUNCTION_2
0x1e	        0x48897db8	             mov qword [rbp - 0x48], rdi	       515	syntax.c	FUNCTION_2
0x22	        0x488975b0	             mov qword [rbp - 0x50], rsi	       515	syntax.c	FUNCTION_2
0x26	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       517	syntax.c	FUNCTION_2
0x2e	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       518	syntax.c	FUNCTION_2
0x36	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       519	syntax.c	FUNCTION_2
0x3e	    0xc70500000000	               mov dword [0x04000088], 0	       526	syntax.c	FUNCTION_2
0x48	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       534	syntax.c	FUNCTION_2	IF_1
0x4c	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       534	syntax.c	FUNCTION_2	IF_1
0x50	    0x488b05000000	            mov rax, qword [0x04000097] 	       534	syntax.c	FUNCTION_2	IF_1
0x57	          0x4839c2	                            cmp rdx, rax	       534	syntax.c	FUNCTION_2	IF_1
0x5a	            0x752e	                           jne 0x40000ca	       534	syntax.c	FUNCTION_2	IF_1
0x5c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       535	syntax.c	FUNCTION_2	IF_1
0x60	        0x488b5008	                mov rdx, qword [rax + 8]	       535	syntax.c	FUNCTION_2	IF_1
0x64	    0x488b05000000	            mov rax, qword [0x040000ab] 	       535	syntax.c	FUNCTION_2	IF_1
0x6b	          0x4839c2	                            cmp rdx, rax	       535	syntax.c	FUNCTION_2	IF_1
0x6e	            0x751a	                           jne 0x40000ca	       535	syntax.c	FUNCTION_2	IF_1
0x70	    0x488b05000000	            mov rax, qword [0x040000b7] 	       536	syntax.c	FUNCTION_2	IF_1	CALL_1
0x77	    0x488b90d80000	            mov rdx, qword [rax + 0xd8] 	       536	syntax.c	FUNCTION_2	IF_1	CALL_1
0x7e	    0x488b05000000	            mov rax, qword [0x040000c5] 	       536	syntax.c	FUNCTION_2	IF_1	CALL_1
0x85	          0x4839c2	                            cmp rdx, rax	       536	syntax.c	FUNCTION_2	IF_1	CALL_1
0x88	            0x7423	                            je 0x40000ed	       536	syntax.c	FUNCTION_2	IF_1	CALL_1
0x8a	      0xe817260000	       call sym.invalidate_current_state	       538	syntax.c	FUNCTION_2	IF_1	CALL_2
0x8f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       539	syntax.c	FUNCTION_2	IF_1
0x93	        0x488b4008	                mov rax, qword [rax + 8]	       539	syntax.c	FUNCTION_2	IF_1
0x97	    0x488905000000	            mov qword [0x040000de], rax 	       539	syntax.c	FUNCTION_2	IF_1
0x9e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       540	syntax.c	FUNCTION_2	IF_1
0xa2	        0x488b4010	            mov rax, qword [rax + 0x10] 	       540	syntax.c	FUNCTION_2	IF_1
0xa6	    0x488905000000	            mov qword [0x040000ed], rax 	       540	syntax.c	FUNCTION_2	IF_1
0xad	    0x488b05000000	            mov rax, qword [0x040000f4] 	       542	syntax.c	FUNCTION_2	CALL_3
0xb4	    0x488b80d80000	            mov rax, qword [rax + 0xd8] 	       542	syntax.c	FUNCTION_2	CALL_3
0xbb	    0x488905000000	            mov qword [0x04000102], rax 	       542	syntax.c	FUNCTION_2	CALL_3
0xc2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       543	syntax.c	FUNCTION_2
0xc6	    0x488905000000	            mov qword [0x0400010d], rax 	       543	syntax.c	FUNCTION_2
0xcd	      0xe862110000	                call sym.syn_stack_alloc	       548	syntax.c	FUNCTION_2	CALL_4
0xd2	    0x488b05000000	            mov rax, qword [0x04000119] 	       549	syntax.c	FUNCTION_2	IF_2
0xd9	    0x488b80100300	           mov rax, qword [rax + 0x310] 	       549	syntax.c	FUNCTION_2	IF_2
0xe0	          0x4885c0	                           test rax, rax	       549	syntax.c	FUNCTION_2	IF_2
0xe3	     0xf84c7030000	                            je 0x40004f0	       549	syntax.c	FUNCTION_2	IF_2
0xe9	    0x488b05000000	            mov rax, qword [0x04000130] 	       551	syntax.c	FUNCTION_2
0xf0	     0xfb715000000	           movzx edx, word [0x04000137] 	       551	syntax.c	FUNCTION_2
0xf7	    0x668990400300	              mov word [rax + 0x340], dx	       551	syntax.c	FUNCTION_2
0xfe	    0x8b0500000000	            mov eax, dword [0x04000144] 	       556	syntax.c	FUNCTION_2	IF_3	CALL_5
0x104	            0x85c0	                           test eax, eax	       556	syntax.c	FUNCTION_2	IF_3	CALL_5
0x106	            0x7462	                            je 0x40001aa	       556	syntax.c	FUNCTION_2	IF_3	CALL_5
0x108	    0x488b05000000	            mov rax, qword [0x0400014f] 	       557	syntax.c	FUNCTION_2	IF_3
0x10f	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	       557	syntax.c	FUNCTION_2	IF_3
0x113	            0x7d55	                           jge 0x40001aa	       557	syntax.c	FUNCTION_2	IF_3
0x115	    0x488b05000000	            mov rax, qword [0x0400015c] 	       558	syntax.c	FUNCTION_2	IF_3
0x11c	          0x488b10	                    mov rdx, qword [rax]	       558	syntax.c	FUNCTION_2	IF_3
0x11f	    0x488b05000000	            mov rax, qword [0x04000166] 	       558	syntax.c	FUNCTION_2	IF_3
0x126	          0x4839c2	                            cmp rdx, rax	       558	syntax.c	FUNCTION_2	IF_3
0x129	            0x7e3f	                           jle 0x40001aa	       558	syntax.c	FUNCTION_2	IF_3
0x12b	      0xbf00000000	                              mov edi, 0	       560	syntax.c	FUNCTION_2	IF_3	CALL_6
0x130	      0xe847260000	                call sym.syn_finish_line	       560	syntax.c	FUNCTION_2	IF_3	CALL_6
0x135	    0x8b0500000000	            mov eax, dword [0x0400017b] 	       561	syntax.c	FUNCTION_2	IF_3	IF_4
0x13b	            0x85c0	                           test eax, eax	       561	syntax.c	FUNCTION_2	IF_3	IF_4
0x13d	            0x7517	                           jne 0x4000196	       561	syntax.c	FUNCTION_2	IF_3	IF_4
0x13f	    0x488b05000000	            mov rax, qword [0x04000186] 	       563	syntax.c	FUNCTION_2	IF_3	IF_4
0x146	        0x4883c001	                              add rax, 1	       563	syntax.c	FUNCTION_2	IF_3	IF_4
0x14a	    0x488905000000	            mov qword [0x04000191], rax 	       563	syntax.c	FUNCTION_2	IF_3	IF_4
0x151	      0xe8bb190000	            call sym.store_current_state	       564	syntax.c	FUNCTION_2	IF_3	IF_4	CALL_7
0x156	    0x488b05000000	            mov rax, qword [0x0400019d] 	       572	syntax.c	FUNCTION_2	IF_3	IF_5
0x15d	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	       572	syntax.c	FUNCTION_2	IF_3	IF_5
0x161	            0x740c	                            je 0x40001af	       572	syntax.c	FUNCTION_2	IF_3	IF_5
0x163	      0xe83e250000	       call sym.invalidate_current_state	       573	syntax.c	FUNCTION_2	IF_3	CALL_8
0x168	            0xeb05	                           jmp 0x40001af	       572	syntax.c	FUNCTION_2	IF_3	IF_5
0x16a	      0xe837250000	       call sym.invalidate_current_state	       576	syntax.c	FUNCTION_2	CALL_9
0x16f	    0x8b0500000000	            mov eax, dword [0x040001b5] 	       582	syntax.c	FUNCTION_2	IF_6	CALL_10
0x175	            0x85c0	                           test eax, eax	       582	syntax.c	FUNCTION_2	IF_6	CALL_10
0x177	     0xf85b4000000	                           jne 0x4000271	       582	syntax.c	FUNCTION_2	IF_6	CALL_10
0x17d	    0x488b05000000	            mov rax, qword [0x040001c4] 	       582	syntax.c	FUNCTION_2	IF_6	CALL_10
0x184	    0x488b80100300	           mov rax, qword [rax + 0x310] 	       582	syntax.c	FUNCTION_2	IF_6	CALL_10
0x18b	          0x4885c0	                           test rax, rax	       582	syntax.c	FUNCTION_2	IF_6	CALL_10
0x18e	     0xf849d000000	                            je 0x4000271	       582	syntax.c	FUNCTION_2	IF_6	CALL_10
0x194	    0x488b05000000	            mov rax, qword [0x040001db] 	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x19b	    0x488b80200300	           mov rax, qword [rax + 0x320] 	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x1a2	        0x488945c8	             mov qword [rbp - 0x38], rax	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x1a6	            0xeb6c	                           jmp 0x4000254	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x1a8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x1ac	        0x488b4008	                mov rax, qword [rax + 8]	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x1b0	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x1b4	            0x7f67	                            jg 0x400025d	       587	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x1b6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       589	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8
0x1ba	        0x488b4008	                mov rax, qword [rax + 8]	       589	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8
0x1be	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	       589	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8
0x1c2	            0x7f45	                            jg 0x4000249	       589	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8
0x1c4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       589	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8
0x1c8	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       589	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8
0x1cf	          0x4885c0	                           test rax, rax	       589	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8
0x1d2	            0x7535	                           jne 0x4000249	       589	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8
0x1d4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       591	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8
0x1d8	        0x488945d0	             mov qword [rbp - 0x30], rax	       591	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8
0x1dc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       592	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x1e0	        0x488b5008	                mov rdx, qword [rax + 8]	       592	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x1e4	    0x488b05000000	            mov rax, qword [0x0400022b] 	       592	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x1eb	    0x488b80a80200	           mov rax, qword [rax + 0x2a8] 	       592	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x1f2	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       592	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x1f6	          0x4829c1	                            sub rcx, rax	       592	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x1f9	          0x4889c8	                            mov rax, rcx	       592	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x1fc	          0x4839c2	                            cmp rdx, rax	       592	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x1ff	            0x7c08	                            jl 0x4000249	       592	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x201	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       593	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x205	        0x488945d8	             mov qword [rbp - 0x28], rax	       593	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_8	IF_9
0x209	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x20d	          0x488b00	                    mov rax, qword [rax]	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x210	        0x488945c8	             mov qword [rbp - 0x38], rax	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x214	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x219	            0x758d	                           jne 0x40001e8	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x21b	            0xeb01	                           jmp 0x400025e	       585	syntax.c	FUNCTION_2	IF_6	FOR_1
0x21d	              0x90	                                     nop	       588	syntax.c	FUNCTION_2	IF_6	FOR_1	IF_7
0x21e	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       596	syntax.c	FUNCTION_2	IF_6	IF_10
0x223	            0x740c	                            je 0x4000271	       596	syntax.c	FUNCTION_2	IF_6	IF_10
0x225	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       597	syntax.c	FUNCTION_2	IF_6	CALL_11
0x229	          0x4889c7	                            mov rdi, rax	       597	syntax.c	FUNCTION_2	IF_6	CALL_11
0x22c	      0xe8c71d0000	             call sym.load_current_state	       597	syntax.c	FUNCTION_2	IF_6	CALL_11
0x231	    0x8b0500000000	            mov eax, dword [0x04000277] 	       604	syntax.c	FUNCTION_2	IF_11	CALL_12
0x237	            0x85c0	                           test eax, eax	       604	syntax.c	FUNCTION_2	IF_11	CALL_12
0x239	            0x754c	                           jne 0x40002c7	       604	syntax.c	FUNCTION_2	IF_11	CALL_12
0x23b	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       606	syntax.c	FUNCTION_2	IF_11	CALL_13
0x23f	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       606	syntax.c	FUNCTION_2	IF_11	CALL_13
0x243	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       606	syntax.c	FUNCTION_2	IF_11	CALL_13
0x247	          0x4889ce	                            mov rsi, rcx	       606	syntax.c	FUNCTION_2	IF_11	CALL_13
0x24a	          0x4889c7	                            mov rdi, rax	       606	syntax.c	FUNCTION_2	IF_11	CALL_13
0x24d	      0xe885030000	                       call sym.syn_sync	       606	syntax.c	FUNCTION_2	IF_11	CALL_13
0x252	    0x488b05000000	            mov rax, qword [0x04000299] 	       607	syntax.c	FUNCTION_2	IF_11	IF_12
0x259	        0x4883f801	                              cmp rax, 1	       607	syntax.c	FUNCTION_2	IF_11	IF_12
0x25d	            0x750a	                           jne 0x40002a9	       607	syntax.c	FUNCTION_2	IF_11	IF_12
0x25f	    0x48c745f00100	               mov qword [rbp - 0x10], 1	       609	syntax.c	FUNCTION_2	IF_11	IF_12
0x267	            0xeb29	                           jmp 0x40002d2	       609	syntax.c	FUNCTION_2	IF_11	IF_12
0x269	    0x488b05000000	            mov rax, qword [0x040002b0] 	       613	syntax.c	FUNCTION_2	IF_11	ELSE_2
0x270	    0x488b90a80200	           mov rdx, qword [rax + 0x2a8] 	       613	syntax.c	FUNCTION_2	IF_11	ELSE_2
0x277	    0x488b05000000	            mov rax, qword [0x040002be] 	       613	syntax.c	FUNCTION_2	IF_11	ELSE_2
0x27e	          0x4801d0	                            add rax, rdx	       613	syntax.c	FUNCTION_2	IF_11	ELSE_2
0x281	        0x488945f0	             mov qword [rbp - 0x10], rax	       613	syntax.c	FUNCTION_2	IF_11	ELSE_2
0x285	            0xeb0b	                           jmp 0x40002d2	       613	syntax.c	FUNCTION_2	IF_11	ELSE_2
0x287	    0x488b05000000	            mov rax, qword [0x040002ce] 	       616	syntax.c	FUNCTION_2	ELSE_3
0x28e	        0x488945f0	             mov qword [rbp - 0x10], rax	       616	syntax.c	FUNCTION_2	ELSE_3
0x292	    0x488b05000000	            mov rax, qword [0x040002d9] 	       622	syntax.c	FUNCTION_2	IF_13
0x299	    0x8b8018030000	           mov eax, dword [rax + 0x318] 	       622	syntax.c	FUNCTION_2	IF_13
0x29f	          0x4863d0	                         movsxd rdx, eax	       622	syntax.c	FUNCTION_2	IF_13
0x2a2	    0x488b05000000	            mov rax, qword [0x040002e9] 	       622	syntax.c	FUNCTION_2	IF_13
0x2a9	          0x4839c2	                            cmp rdx, rax	       622	syntax.c	FUNCTION_2	IF_13
0x2ac	            0x7f0c	                            jg 0x40002fa	       622	syntax.c	FUNCTION_2	IF_13
0x2ae	    0xc745c43f420f	         mov dword [rbp - 0x3c], 0xf423f	       623	syntax.c	FUNCTION_2	IF_13
0x2b5	      0xe9de010000	                           jmp 0x40004d8	       623	syntax.c	FUNCTION_2	IF_13
0x2ba	    0x488b05000000	            mov rax, qword [0x04000301] 	       625	syntax.c	FUNCTION_2	ELSE_4
0x2c1	          0x488b00	                    mov rax, qword [rax]	       625	syntax.c	FUNCTION_2	ELSE_4
0x2c4	    0x488b15000000	            mov rdx, qword [0x0400030b] 	       625	syntax.c	FUNCTION_2	ELSE_4
0x2cb	    0x8b9218030000	           mov edx, dword [rdx + 0x318] 	       625	syntax.c	FUNCTION_2	ELSE_4
0x2d1	          0x4863ca	                         movsxd rcx, edx	       625	syntax.c	FUNCTION_2	ELSE_4
0x2d4	    0x488b15000000	            mov rdx, qword [0x0400031b] 	       625	syntax.c	FUNCTION_2	ELSE_4
0x2db	          0x4829d1	                            sub rcx, rdx	       625	syntax.c	FUNCTION_2	ELSE_4
0x2de	          0x4889ce	                            mov rsi, rcx	       625	syntax.c	FUNCTION_2	ELSE_4
0x2e1	            0x4899	                                     cqo	       625	syntax.c	FUNCTION_2	ELSE_4
0x2e3	          0x48f7fe	                                idiv rsi	       625	syntax.c	FUNCTION_2	ELSE_4
0x2e6	          0x83c001	                              add eax, 1	       625	syntax.c	FUNCTION_2	ELSE_4
0x2e9	          0x8945c4	             mov dword [rbp - 0x3c], eax	       625	syntax.c	FUNCTION_2	ELSE_4
0x2ec	      0xe9a7010000	                           jmp 0x40004d8	       626	syntax.c	FUNCTION_2	WHILE_1
0x2f1	      0xe8c30b0000	                 call sym.syn_start_line	       628	syntax.c	FUNCTION_2	WHILE_1	CALL_14
0x2f6	      0xbf00000000	                              mov edi, 0	       629	syntax.c	FUNCTION_2	WHILE_1	CALL_15
0x2fb	      0xe87c240000	                call sym.syn_finish_line	       629	syntax.c	FUNCTION_2	WHILE_1	CALL_15
0x300	    0x488b05000000	            mov rax, qword [0x04000347] 	       630	syntax.c	FUNCTION_2	WHILE_1
0x307	        0x4883c001	                              add rax, 1	       630	syntax.c	FUNCTION_2	WHILE_1
0x30b	    0x488905000000	            mov qword [0x04000352], rax 	       630	syntax.c	FUNCTION_2	WHILE_1
0x312	    0x488b05000000	            mov rax, qword [0x04000359] 	       634	syntax.c	FUNCTION_2	WHILE_1	IF_14
0x319	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       634	syntax.c	FUNCTION_2	WHILE_1	IF_14
0x31d	     0xf8c59010000	                            jl 0x40004bc	       634	syntax.c	FUNCTION_2	WHILE_1	IF_14
0x323	      0x48837de800	               cmp qword [rbp - 0x18], 0	       639	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_15
0x328	            0x7517	                           jne 0x4000381	       639	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_15
0x32a	    0x488b05000000	            mov rax, qword [0x04000371] 	       640	syntax.c	FUNCTION_2	WHILE_1	IF_14	CALL_16
0x331	        0x4883e801	                              sub rax, 1	       640	syntax.c	FUNCTION_2	WHILE_1	IF_14	CALL_16
0x335	          0x4889c7	                            mov rdi, rax	       640	syntax.c	FUNCTION_2	WHILE_1	IF_14	CALL_16
0x338	      0xe86b170000	           call sym.syn_stack_find_entry	       640	syntax.c	FUNCTION_2	WHILE_1	IF_14	CALL_16
0x33d	        0x488945e8	             mov qword [rbp - 0x18], rax	       640	syntax.c	FUNCTION_2	WHILE_1	IF_14	CALL_16
0x341	      0x48837de800	               cmp qword [rbp - 0x18], 0	       641	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_16
0x346	            0x7514	                           jne 0x400039c	       641	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_16
0x348	    0x488b05000000	            mov rax, qword [0x0400038f] 	       642	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_16
0x34f	    0x488b80200300	           mov rax, qword [rax + 0x320] 	       642	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_16
0x356	        0x488945e0	             mov qword [rbp - 0x20], rax	       642	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_16
0x35a	            0xeb15	                           jmp 0x40003b1	       642	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_16
0x35c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       644	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_5
0x360	        0x488945e0	             mov qword [rbp - 0x20], rax	       644	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_5
0x364	            0xeb0b	                           jmp 0x40003b1	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x366	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       646	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x36a	          0x488b00	                    mov rax, qword [rax]	       646	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x36d	        0x488945e0	             mov qword [rbp - 0x20], rax	       646	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x371	      0x48837de000	               cmp qword [rbp - 0x20], 0	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x376	            0x7414	                            je 0x40003cc	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x378	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x37c	        0x488b5008	                mov rdx, qword [rax + 8]	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x380	    0x488b05000000	            mov rax, qword [0x040003c7] 	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x387	          0x4839c2	                            cmp rdx, rax	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x38a	            0x7cda	                            jl 0x40003a6	       645	syntax.c	FUNCTION_2	WHILE_1	IF_14	WHILE_2
0x38c	      0x48837de000	               cmp qword [rbp - 0x20], 0	       647	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x391	     0xf84ac000000	                            je 0x4000483	       647	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x397	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       648	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x39b	        0x488b5008	                mov rdx, qword [rax + 8]	       648	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x39f	    0x488b05000000	            mov rax, qword [0x040003e6] 	       648	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x3a6	          0x4839c2	                            cmp rdx, rax	       648	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x3a9	     0xf8594000000	                           jne 0x4000483	       648	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x3af	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       649	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_17
0x3b3	          0x4889c7	                            mov rdi, rax	       649	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_17
0x3b6	      0xe8c41f0000	                call sym.syn_stack_equal	       649	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_17
0x3bb	            0x85c0	                           test eax, eax	       649	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_17
0x3bd	     0xf8480000000	                            je 0x4000483	       649	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_17
0x3c3	    0x488b05000000	            mov rax, qword [0x0400040a] 	       651	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x3ca	        0x488945f8	                mov qword [rbp - 8], rax	       651	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x3ce	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       652	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x3d2	        0x488945e8	             mov qword [rbp - 0x18], rax	       652	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17
0x3d6	            0xeb42	                           jmp 0x400045a	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x3d8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       655	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	IF_18
0x3dc	        0x488b4008	                mov rax, qword [rax + 8]	       655	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	IF_18
0x3e0	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	       655	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	IF_18
0x3e4	            0x7f0a	                            jg 0x4000430	       655	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	IF_18
0x3e6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       657	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	IF_18
0x3ea	        0x488945e8	             mov qword [rbp - 0x18], rax	       657	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	IF_18
0x3ee	            0xeb10	                           jmp 0x4000440	       657	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	IF_18
0x3f0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       658	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	ELSE_6	IF_19
0x3f4	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       658	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	ELSE_6	IF_19
0x3fb	          0x4885c0	                           test rax, rax	       658	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	ELSE_6	IF_19
0x3fe	            0x7434	                            je 0x4000474	       658	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	ELSE_6	IF_19
0x400	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       661	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x404	    0x48c780d00000	               mov qword [rax + 0xd0], 0	       661	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x40f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       662	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x413	          0x488b00	                    mov rax, qword [rax]	       662	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x416	        0x488945e0	             mov qword [rbp - 0x20], rax	       662	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x41a	      0x48837de000	               cmp qword [rbp - 0x20], 0	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x41f	            0x7414	                            je 0x4000475	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x421	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x425	    0x488b80d00000	            mov rax, qword [rax + 0xd0] 	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x42c	        0x483b45f8	                cmp rax, qword [rbp - 8]	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x430	            0x7ea6	                           jle 0x4000418	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x432	            0xeb01	                           jmp 0x4000475	       653	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3
0x434	              0x90	                                     nop	       660	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	WHILE_3	ELSE_6	IF_19
0x435	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       664	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_18
0x439	          0x4889c7	                            mov rdi, rax	       664	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_18
0x43c	      0xe8b71b0000	             call sym.load_current_state	       664	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_18
0x441	            0xeb39	                           jmp 0x40004bc	       664	syntax.c	FUNCTION_2	WHILE_1	IF_14	IF_17	CALL_18
0x443	      0x48837de800	               cmp qword [rbp - 0x18], 0	       669	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x448	            0x7429	                            je 0x40004b3	       669	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x44a	    0x488b05000000	            mov rax, qword [0x04000491] 	       670	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x451	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	       670	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x455	            0x741c	                            je 0x40004b3	       670	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x457	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       671	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x45b	        0x488b5008	                mov rdx, qword [rax + 8]	       671	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x45f	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       671	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x462	            0x4898	                                    cdqe	       671	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x464	          0x4801c2	                            add rdx, rax	       671	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x467	    0x488b05000000	            mov rax, qword [0x040004ae] 	       671	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x46e	          0x4839c2	                            cmp rdx, rax	       671	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x471	            0x7f09	                            jg 0x40004bc	       671	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x473	      0xe899160000	            call sym.store_current_state	       672	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x478	        0x488945e8	             mov qword [rbp - 0x18], rax	       672	syntax.c	FUNCTION_2	WHILE_1	IF_14	ELSE_7	IF_20
0x47c	      0xe800000000	                          call 0x40004c1	       677	syntax.c	FUNCTION_2	WHILE_1	CALL_20
0x481	    0x8b0500000000	            mov eax, dword [0x040004c7] 	       678	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x487	            0x85c0	                           test eax, eax	       678	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x489	            0x740d	                            je 0x40004d8	       678	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x48b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       680	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x48f	    0x488905000000	            mov qword [0x040004d6], rax 	       680	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x496	            0xeb11	                           jmp 0x40004e9	       681	syntax.c	FUNCTION_2	WHILE_1	IF_21
0x498	    0x488b05000000	            mov rax, qword [0x040004df] 	       626	syntax.c	FUNCTION_2	WHILE_1
0x49f	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	       626	syntax.c	FUNCTION_2	WHILE_1
0x4a3	     0xf8c48feffff	                            jl 0x4000331	       626	syntax.c	FUNCTION_2	WHILE_1
0x4a9	      0xe80b0a0000	                 call sym.syn_start_line	       685	syntax.c	FUNCTION_2	CALL_21
0x4ae	            0xeb01	                           jmp 0x40004f1	       685	syntax.c	FUNCTION_2	CALL_21
0x4b0	              0x90	                                     nop	       550	syntax.c	FUNCTION_2	IF_2
0x4b1	              0xc9	                                   leave	       686	syntax.c	FUNCTION_2
0x4b2	              0xc3	                                     ret	       686	syntax.c	FUNCTION_2
limit_pos_zero	FOR,0:DO,0:IF,1:SWITCH,0:functions,0:ELSE,1:WHILE,0:CALL,1	24
0x544a	              0x55	                                push rbp	      3187	syntax.c	FUNCTION_39
0x544b	          0x4889e5	                            mov rbp, rsp	      3187	syntax.c	FUNCTION_39
0x544e	        0x4883ec10	                           sub rsp, 0x10	      3187	syntax.c	FUNCTION_39
0x5452	        0x48897df8	                mov qword [rbp - 8], rdi	      3187	syntax.c	FUNCTION_39
0x5456	        0x488975f0	             mov qword [rbp - 0x10], rsi	      3187	syntax.c	FUNCTION_39
0x545a	        0x488b45f8	                mov rax, qword [rbp - 8]	      3188	syntax.c	FUNCTION_39	IF_1
0x545e	          0x488b00	                    mov rax, qword [rax]	      3188	syntax.c	FUNCTION_39	IF_1
0x5461	          0x4885c0	                           test rax, rax	      3188	syntax.c	FUNCTION_39	IF_1
0x5464	            0x7518	                           jne 0x40054be	      3188	syntax.c	FUNCTION_39	IF_1
0x5466	        0x488b4df8	                mov rcx, qword [rbp - 8]	      3189	syntax.c	FUNCTION_39	IF_1
0x546a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3189	syntax.c	FUNCTION_39	IF_1
0x546e	        0x488b5008	                mov rdx, qword [rax + 8]	      3189	syntax.c	FUNCTION_39	IF_1
0x5472	          0x488b00	                    mov rax, qword [rax]	      3189	syntax.c	FUNCTION_39	IF_1
0x5475	          0x488901	                    mov qword [rcx], rax	      3189	syntax.c	FUNCTION_39	IF_1
0x5478	        0x48895108	                mov qword [rcx + 8], rdx	      3189	syntax.c	FUNCTION_39	IF_1
0x547c	            0xeb13	                           jmp 0x40054d1	      3192	syntax.c	FUNCTION_39
0x547e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3191	syntax.c	FUNCTION_39	CALL_1
0x5482	        0x488b45f8	                mov rax, qword [rbp - 8]	      3191	syntax.c	FUNCTION_39	CALL_1
0x5486	          0x4889d6	                            mov rsi, rdx	      3191	syntax.c	FUNCTION_39	CALL_1
0x5489	          0x4889c7	                            mov rdi, rax	      3191	syntax.c	FUNCTION_39	CALL_1
0x548c	      0xe84cffffff	                      call sym.limit_pos	      3191	syntax.c	FUNCTION_39	CALL_1
0x5491	              0x90	                                     nop	      3192	syntax.c	FUNCTION_39
0x5492	              0xc9	                                   leave	      3192	syntax.c	FUNCTION_39
0x5493	              0xc3	                                     ret	      3192	syntax.c	FUNCTION_39
clear_syn_state	FOR,2:DO,0:IF,1:SWITCH,0:functions,0:ELSE,1:WHILE,0:CALL,4	56
0x4b3	              0x55	                                push rbp	       694	syntax.c	FUNCTION_3
0x4b4	          0x4889e5	                            mov rbp, rsp	       694	syntax.c	FUNCTION_3
0x4b7	        0x4883ec20	                           sub rsp, 0x20	       694	syntax.c	FUNCTION_3
0x4bb	        0x48897de8	             mov qword [rbp - 0x18], rdi	       694	syntax.c	FUNCTION_3
0x4bf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       698	syntax.c	FUNCTION_3	IF_1
0x4c3	    0x8b80bc000000	            mov eax, dword [rax + 0xbc] 	       698	syntax.c	FUNCTION_3	IF_1
0x4c9	          0x83f807	                              cmp eax, 7	       698	syntax.c	FUNCTION_3	IF_1
0x4cc	            0x7e5c	                           jle 0x400056a	       698	syntax.c	FUNCTION_3	IF_1
0x4ce	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       700	syntax.c	FUNCTION_3	IF_1
0x4d2	        0x4883c010	                           add rax, 0x10	       700	syntax.c	FUNCTION_3	IF_1
0x4d6	        0x488945f8	                mov qword [rbp - 8], rax	       700	syntax.c	FUNCTION_3	IF_1
0x4da	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4e1	            0xeb2e	                           jmp 0x4000551	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x4e3	        0x488b45f8	                mov rax, qword [rbp - 8]	       702	syntax.c	FUNCTION_3	IF_1	CALL_2
0x4e7	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       702	syntax.c	FUNCTION_3	IF_1	CALL_2
0x4eb	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       702	syntax.c	FUNCTION_3	IF_1	CALL_2
0x4ee	          0x4863d0	                         movsxd rdx, eax	       702	syntax.c	FUNCTION_3	IF_1	CALL_2
0x4f1	          0x4889d0	                            mov rax, rdx	       702	syntax.c	FUNCTION_3	IF_1	CALL_2
0x4f4	          0x4801c0	                            add rax, rax	       702	syntax.c	FUNCTION_3	IF_1	CALL_2
0x4f7	          0x4801d0	                            add rax, rdx	       702	syntax.c	FUNCTION_3	IF_1	CALL_2
0x4fa	        0x48c1e003	                              shl rax, 3	       702	syntax.c	FUNCTION_3	IF_1	CALL_2
0x4fe	          0x4801c8	                            add rax, rcx	       702	syntax.c	FUNCTION_3	IF_1	CALL_2
0x501	        0x488b4010	            mov rax, qword [rax + 0x10] 	       702	syntax.c	FUNCTION_3	IF_1	CALL_2
0x505	          0x4889c7	                            mov rdi, rax	       702	syntax.c	FUNCTION_3	IF_1	CALL_2
0x508	      0xe800000000	                          call 0x400054d	       702	syntax.c	FUNCTION_3	IF_1	CALL_2
0x50d	        0x8345f401	                add dword [rbp - 0xc], 1	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x511	        0x488b45f8	                mov rax, qword [rbp - 8]	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x515	            0x8b00	                    mov eax, dword [rax]	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x517	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x51a	            0x7fc7	                            jg 0x4000523	       701	syntax.c	FUNCTION_3	IF_1	FOR_1
0x51c	        0x488b45f8	                mov rax, qword [rbp - 8]	       703	syntax.c	FUNCTION_3	IF_1	CALL_3
0x520	          0x4889c7	                            mov rdi, rax	       703	syntax.c	FUNCTION_3	IF_1	CALL_3
0x523	      0xe800000000	                          call 0x4000568	       703	syntax.c	FUNCTION_3	IF_1	CALL_3
0x528	            0xeb45	                           jmp 0x40005af	       710	syntax.c	FUNCTION_3
0x52a	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x531	            0xeb2d	                           jmp 0x40005a0	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x533	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_4
0x537	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_4
0x53a	          0x4863d0	                         movsxd rdx, eax	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_4
0x53d	          0x4889d0	                            mov rax, rdx	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_4
0x540	          0x4801c0	                            add rax, rax	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_4
0x543	          0x4801d0	                            add rax, rdx	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_4
0x546	        0x48c1e003	                              shl rax, 3	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_4
0x54a	          0x4801c8	                            add rax, rcx	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_4
0x54d	        0x4883c020	                           add rax, 0x20	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_4
0x551	          0x488b00	                    mov rax, qword [rax]	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_4
0x554	          0x4889c7	                            mov rdi, rax	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_4
0x557	      0xe800000000	                          call 0x400059c	       708	syntax.c	FUNCTION_3	ELSE_1	CALL_4
0x55c	        0x8345f401	                add dword [rbp - 0xc], 1	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x560	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x564	    0x8b80bc000000	            mov eax, dword [rax + 0xbc] 	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x56a	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x56d	            0x7fc4	                            jg 0x4000573	       707	syntax.c	FUNCTION_3	ELSE_1	FOR_2
0x56f	              0x90	                                     nop	       710	syntax.c	FUNCTION_3
0x570	              0xc9	                                   leave	       710	syntax.c	FUNCTION_3
0x571	              0xc3	                                     ret	       710	syntax.c	FUNCTION_3
syn_combine_list	FOR,5:DO,0:IF,15:SWITCH,0:functions,0:ELSE,1:WHILE,1:CALL,7	210
0xa5f8	              0x55	                                push rbp	      5411	syntax.c	FUNCTION_83
0xa5f9	          0x4889e5	                            mov rbp, rsp	      5411	syntax.c	FUNCTION_83
0xa5fc	        0x4883ec50	                           sub rsp, 0x50	      5411	syntax.c	FUNCTION_83
0xa600	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      5411	syntax.c	FUNCTION_83
0xa604	        0x488975c0	             mov qword [rbp - 0x40], rsi	      5411	syntax.c	FUNCTION_83
0xa608	          0x8955bc	             mov dword [rbp - 0x44], edx	      5411	syntax.c	FUNCTION_83
0xa60b	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      5412	syntax.c	FUNCTION_83
0xa612	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      5413	syntax.c	FUNCTION_83
0xa619	    0x48c745f80000	                  mov qword [rbp - 8], 0	      5416	syntax.c	FUNCTION_83
0xa621	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5423	syntax.c	FUNCTION_83	IF_1
0xa625	          0x488b00	                    mov rax, qword [rax]	      5423	syntax.c	FUNCTION_83	IF_1
0xa628	          0x4885c0	                           test rax, rax	      5423	syntax.c	FUNCTION_83	IF_1
0xa62b	     0xf84a2020000	                            je 0x400a913	      5423	syntax.c	FUNCTION_83	IF_1
0xa631	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5425	syntax.c	FUNCTION_83	IF_2
0xa635	          0x488b00	                    mov rax, qword [rax]	      5425	syntax.c	FUNCTION_83	IF_2
0xa638	          0x4885c0	                           test rax, rax	      5425	syntax.c	FUNCTION_83	IF_2
0xa63b	            0x7406	                            je 0x400a683	      5425	syntax.c	FUNCTION_83	IF_2
0xa63d	        0x837dbc01	               cmp dword [rbp - 0x44], 1	      5425	syntax.c	FUNCTION_83	IF_2
0xa641	            0x7548	                           jne 0x400a6cb	      5425	syntax.c	FUNCTION_83	IF_2
0xa643	        0x837dbc01	               cmp dword [rbp - 0x44], 1	      5427	syntax.c	FUNCTION_83	IF_2	IF_3
0xa647	            0x750f	                           jne 0x400a698	      5427	syntax.c	FUNCTION_83	IF_2	IF_3
0xa649	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5428	syntax.c	FUNCTION_83	IF_2	CALL_1
0xa64d	          0x488b00	                    mov rax, qword [rax]	      5428	syntax.c	FUNCTION_83	IF_2	CALL_1
0xa650	          0x4889c7	                            mov rdi, rax	      5428	syntax.c	FUNCTION_83	IF_2	CALL_1
0xa653	      0xe800000000	                          call 0x400a698	      5428	syntax.c	FUNCTION_83	IF_2	CALL_1
0xa658	        0x837dbc01	               cmp dword [rbp - 0x44], 1	      5429	syntax.c	FUNCTION_83	IF_2	IF_4
0xa65c	            0x7406	                            je 0x400a6a4	      5429	syntax.c	FUNCTION_83	IF_2	IF_4
0xa65e	        0x837dbc02	               cmp dword [rbp - 0x44], 2	      5429	syntax.c	FUNCTION_83	IF_2	IF_4
0xa662	            0x7513	                           jne 0x400a6b7	      5429	syntax.c	FUNCTION_83	IF_2	IF_4
0xa664	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5430	syntax.c	FUNCTION_83	IF_2	IF_4
0xa668	          0x488b10	                    mov rdx, qword [rax]	      5430	syntax.c	FUNCTION_83	IF_2	IF_4
0xa66b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5430	syntax.c	FUNCTION_83	IF_2	IF_4
0xa66f	          0x488910	                    mov qword [rax], rdx	      5430	syntax.c	FUNCTION_83	IF_2	IF_4
0xa672	      0xe95d020000	                           jmp 0x400a914	      5433	syntax.c	FUNCTION_83	IF_2
0xa677	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5432	syntax.c	FUNCTION_83	IF_2	CALL_2
0xa67b	          0x488b00	                    mov rax, qword [rax]	      5432	syntax.c	FUNCTION_83	IF_2	CALL_2
0xa67e	          0x4889c7	                            mov rdi, rax	      5432	syntax.c	FUNCTION_83	IF_2	CALL_2
0xa681	      0xe800000000	                          call 0x400a6c6	      5432	syntax.c	FUNCTION_83	IF_2	CALL_2
0xa686	      0xe949020000	                           jmp 0x400a914	      5433	syntax.c	FUNCTION_83	IF_2
0xa68b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5436	syntax.c	FUNCTION_83	FOR_1
0xa68f	          0x488b00	                    mov rax, qword [rax]	      5436	syntax.c	FUNCTION_83	FOR_1
0xa692	        0x488945e8	             mov qword [rbp - 0x18], rax	      5436	syntax.c	FUNCTION_83	FOR_1
0xa696	            0xeb09	                           jmp 0x400a6e1	      5436	syntax.c	FUNCTION_83	FOR_1
0xa698	        0x8345d801	               add dword [rbp - 0x28], 1	      5437	syntax.c	FUNCTION_83	FOR_1
0xa69c	      0x488345e802	               add qword [rbp - 0x18], 2	      5436	syntax.c	FUNCTION_83	FOR_1
0xa6a1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5436	syntax.c	FUNCTION_83	FOR_1
0xa6a5	           0xfb700	                   movzx eax, word [rax]	      5436	syntax.c	FUNCTION_83	FOR_1
0xa6a8	          0x6685c0	                             test ax, ax	      5436	syntax.c	FUNCTION_83	FOR_1
0xa6ab	            0x75eb	                           jne 0x400a6d8	      5436	syntax.c	FUNCTION_83	FOR_1
0xa6ad	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5438	syntax.c	FUNCTION_83	FOR_2
0xa6b1	          0x488b00	                    mov rax, qword [rax]	      5438	syntax.c	FUNCTION_83	FOR_2
0xa6b4	        0x488945f0	             mov qword [rbp - 0x10], rax	      5438	syntax.c	FUNCTION_83	FOR_2
0xa6b8	            0xeb09	                           jmp 0x400a703	      5438	syntax.c	FUNCTION_83	FOR_2
0xa6ba	        0x8345dc01	               add dword [rbp - 0x24], 1	      5439	syntax.c	FUNCTION_83	FOR_2
0xa6be	      0x488345f002	               add qword [rbp - 0x10], 2	      5438	syntax.c	FUNCTION_83	FOR_2
0xa6c3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5438	syntax.c	FUNCTION_83	FOR_2
0xa6c7	           0xfb700	                   movzx eax, word [rax]	      5438	syntax.c	FUNCTION_83	FOR_2
0xa6ca	          0x6685c0	                             test ax, ax	      5438	syntax.c	FUNCTION_83	FOR_2
0xa6cd	            0x75eb	                           jne 0x400a6fa	      5438	syntax.c	FUNCTION_83	FOR_2
0xa6cf	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      5444	syntax.c	FUNCTION_83	CALL_3
0xa6d2	          0x4863f0	                         movsxd rsi, eax	      5444	syntax.c	FUNCTION_83	CALL_3
0xa6d5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5444	syntax.c	FUNCTION_83	CALL_3
0xa6d9	          0x488b00	                    mov rax, qword [rax]	      5444	syntax.c	FUNCTION_83	CALL_3
0xa6dc	      0xb900000000	                              mov ecx, 0	      5444	syntax.c	FUNCTION_83	CALL_3
0xa6e1	      0xba02000000	                              mov edx, 2	      5444	syntax.c	FUNCTION_83	CALL_3
0xa6e6	          0x4889c7	                            mov rdi, rax	      5444	syntax.c	FUNCTION_83	CALL_3
0xa6e9	      0xe800000000	                          call 0x400a72e	      5444	syntax.c	FUNCTION_83	CALL_3
0xa6ee	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      5445	syntax.c	FUNCTION_83	CALL_4
0xa6f1	          0x4863f0	                         movsxd rsi, eax	      5445	syntax.c	FUNCTION_83	CALL_4
0xa6f4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5445	syntax.c	FUNCTION_83	CALL_4
0xa6f8	          0x488b00	                    mov rax, qword [rax]	      5445	syntax.c	FUNCTION_83	CALL_4
0xa6fb	      0xb900000000	                              mov ecx, 0	      5445	syntax.c	FUNCTION_83	CALL_4
0xa700	      0xba02000000	                              mov edx, 2	      5445	syntax.c	FUNCTION_83	CALL_4
0xa705	          0x4889c7	                            mov rdi, rax	      5445	syntax.c	FUNCTION_83	CALL_4
0xa708	      0xe800000000	                          call 0x400a74d	      5445	syntax.c	FUNCTION_83	CALL_4
0xa70d	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	      5453	syntax.c	FUNCTION_83	FOR_3
0xa714	      0xe982010000	                           jmp 0x400a8db	      5453	syntax.c	FUNCTION_83	FOR_3
0xa719	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5455	syntax.c	FUNCTION_83	FOR_3
0xa71d	          0x488b00	                    mov rax, qword [rax]	      5455	syntax.c	FUNCTION_83	FOR_3
0xa720	        0x488945e8	             mov qword [rbp - 0x18], rax	      5455	syntax.c	FUNCTION_83	FOR_3
0xa724	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5456	syntax.c	FUNCTION_83	FOR_3
0xa728	          0x488b00	                    mov rax, qword [rax]	      5456	syntax.c	FUNCTION_83	FOR_3
0xa72b	        0x488945f0	             mov qword [rbp - 0x10], rax	      5456	syntax.c	FUNCTION_83	FOR_3
0xa72f	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      5457	syntax.c	FUNCTION_83	FOR_3
0xa736	      0xe985000000	                           jmp 0x400a800	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0xa73b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5467	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0xa73f	           0xfb710	                   movzx edx, word [rax]	      5467	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0xa742	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5467	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0xa746	           0xfb700	                   movzx eax, word [rax]	      5467	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0xa749	          0x6639c2	                              cmp dx, ax	      5467	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0xa74c	            0x7d2b	                           jge 0x400a7b9	      5467	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0xa74e	        0x837de402	               cmp dword [rbp - 0x1c], 2	      5469	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5	IF_6
0xa752	            0x751a	                           jne 0x400a7ae	      5469	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5	IF_6
0xa754	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      5470	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5	IF_6
0xa757	            0x4898	                                    cdqe	      5470	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5	IF_6
0xa759	        0x488d1400	                    lea rdx, [rax + rax]	      5470	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5	IF_6
0xa75d	        0x488b45f8	                mov rax, qword [rbp - 8]	      5470	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5	IF_6
0xa761	          0x4801c2	                            add rdx, rax	      5470	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5	IF_6
0xa764	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5470	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5	IF_6
0xa768	           0xfb700	                   movzx eax, word [rax]	      5470	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5	IF_6
0xa76b	          0x668902	                      mov word [rdx], ax	      5470	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5	IF_6
0xa76e	        0x8345e001	               add dword [rbp - 0x20], 1	      5471	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0xa772	      0x488345e802	               add qword [rbp - 0x18], 2	      5472	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0xa777	            0xeb47	                           jmp 0x400a800	      5473	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_5
0xa779	        0x837dbc02	               cmp dword [rbp - 0x44], 2	      5479	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7
0xa77d	            0x7524	                           jne 0x400a7e3	      5479	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7
0xa77f	        0x837de402	               cmp dword [rbp - 0x1c], 2	      5481	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7	IF_8
0xa783	            0x751a	                           jne 0x400a7df	      5481	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7	IF_8
0xa785	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      5482	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7	IF_8
0xa788	            0x4898	                                    cdqe	      5482	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7	IF_8
0xa78a	        0x488d1400	                    lea rdx, [rax + rax]	      5482	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7	IF_8
0xa78e	        0x488b45f8	                mov rax, qword [rbp - 8]	      5482	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7	IF_8
0xa792	          0x4801c2	                            add rdx, rax	      5482	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7	IF_8
0xa795	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5482	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7	IF_8
0xa799	           0xfb700	                   movzx eax, word [rax]	      5482	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7	IF_8
0xa79c	          0x668902	                      mov word [rdx], ax	      5482	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7	IF_8
0xa79f	        0x8345e001	               add dword [rbp - 0x20], 1	      5483	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_7
0xa7a3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5485	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0xa7a7	           0xfb710	                   movzx edx, word [rax]	      5485	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0xa7aa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5485	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0xa7ae	           0xfb700	                   movzx eax, word [rax]	      5485	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0xa7b1	          0x6639c2	                              cmp dx, ax	      5485	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0xa7b4	            0x7505	                           jne 0x400a7fb	      5485	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0xa7b6	      0x488345e802	               add qword [rbp - 0x18], 2	      5486	syntax.c	FUNCTION_83	FOR_3	WHILE_1	IF_9
0xa7bb	      0x488345f002	               add qword [rbp - 0x10], 2	      5487	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0xa7c0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0xa7c4	           0xfb700	                   movzx eax, word [rax]	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0xa7c7	          0x6685c0	                             test ax, ax	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0xa7ca	            0x743b	                            je 0x400a847	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0xa7cc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0xa7d0	           0xfb700	                   movzx eax, word [rax]	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0xa7d3	          0x6685c0	                             test ax, ax	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0xa7d6	     0xf855fffffff	                           jne 0x400a77b	      5462	syntax.c	FUNCTION_83	FOR_3	WHILE_1
0xa7dc	            0xeb29	                           jmp 0x400a847	      5495	syntax.c	FUNCTION_83	FOR_3	FOR_4
0xa7de	        0x837de402	               cmp dword [rbp - 0x1c], 2	      5496	syntax.c	FUNCTION_83	FOR_3	FOR_4	IF_10
0xa7e2	            0x751a	                           jne 0x400a83e	      5496	syntax.c	FUNCTION_83	FOR_3	FOR_4	IF_10
0xa7e4	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      5497	syntax.c	FUNCTION_83	FOR_3	FOR_4	IF_10
0xa7e7	            0x4898	                                    cdqe	      5497	syntax.c	FUNCTION_83	FOR_3	FOR_4	IF_10
0xa7e9	        0x488d1400	                    lea rdx, [rax + rax]	      5497	syntax.c	FUNCTION_83	FOR_3	FOR_4	IF_10
0xa7ed	        0x488b45f8	                mov rax, qword [rbp - 8]	      5497	syntax.c	FUNCTION_83	FOR_3	FOR_4	IF_10
0xa7f1	          0x4801c2	                            add rdx, rax	      5497	syntax.c	FUNCTION_83	FOR_3	FOR_4	IF_10
0xa7f4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5497	syntax.c	FUNCTION_83	FOR_3	FOR_4	IF_10
0xa7f8	           0xfb700	                   movzx eax, word [rax]	      5497	syntax.c	FUNCTION_83	FOR_3	FOR_4	IF_10
0xa7fb	          0x668902	                      mov word [rdx], ax	      5497	syntax.c	FUNCTION_83	FOR_3	FOR_4	IF_10
0xa7fe	      0x488345e802	               add qword [rbp - 0x18], 2	      5495	syntax.c	FUNCTION_83	FOR_3	FOR_4
0xa803	        0x8345e001	               add dword [rbp - 0x20], 1	      5495	syntax.c	FUNCTION_83	FOR_3	FOR_4
0xa807	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5495	syntax.c	FUNCTION_83	FOR_3	FOR_4
0xa80b	           0xfb700	                   movzx eax, word [rax]	      5495	syntax.c	FUNCTION_83	FOR_3	FOR_4
0xa80e	          0x6685c0	                             test ax, ax	      5495	syntax.c	FUNCTION_83	FOR_3	FOR_4
0xa811	            0x75cb	                           jne 0x400a81e	      5495	syntax.c	FUNCTION_83	FOR_3	FOR_4
0xa813	        0x837dbc02	               cmp dword [rbp - 0x44], 2	      5498	syntax.c	FUNCTION_83	FOR_3	IF_11
0xa817	            0x7537	                           jne 0x400a890	      5498	syntax.c	FUNCTION_83	FOR_3	IF_11
0xa819	            0xeb29	                           jmp 0x400a884	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0xa81b	        0x837de402	               cmp dword [rbp - 0x1c], 2	      5500	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5	IF_12
0xa81f	            0x751a	                           jne 0x400a87b	      5500	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5	IF_12
0xa821	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      5501	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5	IF_12
0xa824	            0x4898	                                    cdqe	      5501	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5	IF_12
0xa826	        0x488d1400	                    lea rdx, [rax + rax]	      5501	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5	IF_12
0xa82a	        0x488b45f8	                mov rax, qword [rbp - 8]	      5501	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5	IF_12
0xa82e	          0x4801c2	                            add rdx, rax	      5501	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5	IF_12
0xa831	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5501	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5	IF_12
0xa835	           0xfb700	                   movzx eax, word [rax]	      5501	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5	IF_12
0xa838	          0x668902	                      mov word [rdx], ax	      5501	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5	IF_12
0xa83b	      0x488345f002	               add qword [rbp - 0x10], 2	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0xa840	        0x8345e001	               add dword [rbp - 0x20], 1	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0xa844	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0xa848	           0xfb700	                   movzx eax, word [rax]	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0xa84b	          0x6685c0	                             test ax, ax	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0xa84e	            0x75cb	                           jne 0x400a85b	      5499	syntax.c	FUNCTION_83	FOR_3	IF_11	FOR_5
0xa850	        0x837de401	               cmp dword [rbp - 0x1c], 1	      5503	syntax.c	FUNCTION_83	FOR_3	IF_13
0xa854	            0x7541	                           jne 0x400a8d7	      5503	syntax.c	FUNCTION_83	FOR_3	IF_13
0xa856	        0x837de000	               cmp dword [rbp - 0x20], 0	      5509	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_14
0xa85a	            0x750a	                           jne 0x400a8a6	      5509	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_14
0xa85c	    0x48c745f80000	                  mov qword [rbp - 8], 0	      5511	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_14
0xa864	            0xeb42	                           jmp 0x400a8e8	      5512	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_14
0xa866	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      5514	syntax.c	FUNCTION_83	FOR_3	IF_13	CALL_5
0xa869	          0x83c001	                              add eax, 1	      5514	syntax.c	FUNCTION_83	FOR_3	IF_13	CALL_5
0xa86c	            0x4898	                                    cdqe	      5514	syntax.c	FUNCTION_83	FOR_3	IF_13	CALL_5
0xa86e	             0x1c0	                            add eax, eax	      5514	syntax.c	FUNCTION_83	FOR_3	IF_13	CALL_5
0xa870	            0x89c7	                            mov edi, eax	      5514	syntax.c	FUNCTION_83	FOR_3	IF_13	CALL_5
0xa872	      0xe800000000	                          call 0x400a8b7	      5514	syntax.c	FUNCTION_83	FOR_3	IF_13	CALL_5
0xa877	        0x488945f8	                mov qword [rbp - 8], rax	      5514	syntax.c	FUNCTION_83	FOR_3	IF_13	CALL_5
0xa87b	      0x48837df800	                  cmp qword [rbp - 8], 0	      5515	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_15
0xa880	            0x7425	                            je 0x400a8e7	      5515	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_15
0xa882	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      5517	syntax.c	FUNCTION_83	FOR_3	IF_13
0xa885	            0x4898	                                    cdqe	      5517	syntax.c	FUNCTION_83	FOR_3	IF_13
0xa887	        0x488d1400	                    lea rdx, [rax + rax]	      5517	syntax.c	FUNCTION_83	FOR_3	IF_13
0xa88b	        0x488b45f8	                mov rax, qword [rbp - 8]	      5517	syntax.c	FUNCTION_83	FOR_3	IF_13
0xa88f	          0x4801d0	                            add rax, rdx	      5517	syntax.c	FUNCTION_83	FOR_3	IF_13
0xa892	      0x66c7000000	                       mov word [rax], 0	      5517	syntax.c	FUNCTION_83	FOR_3	IF_13
0xa897	        0x8345e401	               add dword [rbp - 0x1c], 1	      5453	syntax.c	FUNCTION_83	FOR_3
0xa89b	        0x837de402	               cmp dword [rbp - 0x1c], 2	      5453	syntax.c	FUNCTION_83	FOR_3
0xa89f	     0xf8e74feffff	                           jle 0x400a759	      5453	syntax.c	FUNCTION_83	FOR_3
0xa8a5	            0xeb01	                           jmp 0x400a8e8	      5453	syntax.c	FUNCTION_83	FOR_3
0xa8a7	              0x90	                                     nop	      5516	syntax.c	FUNCTION_83	FOR_3	IF_13	IF_15
0xa8a8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5524	syntax.c	FUNCTION_83	CALL_6
0xa8ac	          0x488b00	                    mov rax, qword [rax]	      5524	syntax.c	FUNCTION_83	CALL_6
0xa8af	          0x4889c7	                            mov rdi, rax	      5524	syntax.c	FUNCTION_83	CALL_6
0xa8b2	      0xe800000000	                          call 0x400a8f7	      5524	syntax.c	FUNCTION_83	CALL_6
0xa8b7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      5525	syntax.c	FUNCTION_83	CALL_7
0xa8bb	          0x488b00	                    mov rax, qword [rax]	      5525	syntax.c	FUNCTION_83	CALL_7
0xa8be	          0x4889c7	                            mov rdi, rax	      5525	syntax.c	FUNCTION_83	CALL_7
0xa8c1	      0xe800000000	                          call 0x400a906	      5525	syntax.c	FUNCTION_83	CALL_7
0xa8c6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5526	syntax.c	FUNCTION_83
0xa8ca	        0x488b55f8	                mov rdx, qword [rbp - 8]	      5526	syntax.c	FUNCTION_83
0xa8ce	          0x488910	                    mov qword [rax], rdx	      5526	syntax.c	FUNCTION_83
0xa8d1	            0xeb01	                           jmp 0x400a914	      5526	syntax.c	FUNCTION_83
0xa8d3	              0x90	                                     nop	      5424	syntax.c	FUNCTION_83	IF_1
0xa8d4	              0xc9	                                   leave	      5527	syntax.c	FUNCTION_83
0xa8d5	              0xc3	                                     ret	      5527	syntax.c	FUNCTION_83
highlight_list_two	FOR,0:DO,0:IF,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,4	40
0x14834	              0x55	                                push rbp	     10289	syntax.c	FUNCTION_166
0x14835	          0x4889e5	                            mov rbp, rsp	     10289	syntax.c	FUNCTION_166
0x14838	        0x4883ec10	                           sub rsp, 0x10	     10289	syntax.c	FUNCTION_166
0x1483c	          0x897dfc	                mov dword [rbp - 4], edi	     10289	syntax.c	FUNCTION_166
0x1483f	          0x8975f8	                mov dword [rbp - 8], esi	     10289	syntax.c	FUNCTION_166
0x14842	          0x8b4dfc	                mov ecx, dword [rbp - 4]	     10290	syntax.c	FUNCTION_166	CALL_1
0x14845	      0xbae9a28b2e	                     mov edx, 0x2e8ba2e9	     10290	syntax.c	FUNCTION_166	CALL_1
0x1484a	            0x89c8	                            mov eax, ecx	     10290	syntax.c	FUNCTION_166	CALL_1
0x1484c	            0xf7ea	                                imul edx	     10290	syntax.c	FUNCTION_166	CALL_1
0x1484e	            0xd1fa	                              sar edx, 1	     10290	syntax.c	FUNCTION_166	CALL_1
0x14850	            0x89c8	                            mov eax, ecx	     10290	syntax.c	FUNCTION_166	CALL_1
0x14852	          0xc1f81f	                           sar eax, 0x1f	     10290	syntax.c	FUNCTION_166	CALL_1
0x14855	            0x29c2	                            sub edx, eax	     10290	syntax.c	FUNCTION_166	CALL_1
0x14857	            0x89d0	                            mov eax, edx	     10290	syntax.c	FUNCTION_166	CALL_1
0x14859	            0x4898	                                    cdqe	     10290	syntax.c	FUNCTION_166	CALL_1
0x1485b	    0x488d90000000	                          lea rdx, [rax]	     10290	syntax.c	FUNCTION_166	CALL_1
0x14862	          0x8b45f8	                mov eax, dword [rbp - 8]	     10290	syntax.c	FUNCTION_166	CALL_1
0x14865	            0x89c6	                            mov esi, eax	     10290	syntax.c	FUNCTION_166	CALL_1
0x14867	          0x4889d7	                            mov rdi, rdx	     10290	syntax.c	FUNCTION_166	CALL_1
0x1486a	      0xe800000000	                          call 0x40148af	     10290	syntax.c	FUNCTION_166	CALL_1
0x1486f	      0xe800000000	                          call 0x40148b4	     10291	syntax.c	FUNCTION_166	CALL_2
0x14874	      0xe800000000	                          call 0x40148b9	     10292	syntax.c	FUNCTION_166	CALL_3
0x14879	        0x837dfc63	               cmp dword [rbp - 4], 0x63	     10293	syntax.c	FUNCTION_166	CALL_4
0x1487d	            0x7420	                            je 0x40148df	     10293	syntax.c	FUNCTION_166	CALL_4
0x1487f	          0x8b45fc	                mov eax, dword [rbp - 4]	     10293	syntax.c	FUNCTION_166	CALL_4
0x14882	          0x4863d0	                         movsxd rdx, eax	     10293	syntax.c	FUNCTION_166	CALL_4
0x14885	          0x4889d0	                            mov rax, rdx	     10293	syntax.c	FUNCTION_166	CALL_4
0x14888	        0x48c1e002	                              shl rax, 2	     10293	syntax.c	FUNCTION_166	CALL_4
0x1488c	          0x4801d0	                            add rax, rdx	     10293	syntax.c	FUNCTION_166	CALL_4
0x1488f	    0x488d14850000	                        lea rdx, [rax*4]	     10293	syntax.c	FUNCTION_166	CALL_4
0x14897	          0x4801d0	                            add rax, rdx	     10293	syntax.c	FUNCTION_166	CALL_4
0x1489a	          0x4801c0	                            add rax, rax	     10293	syntax.c	FUNCTION_166	CALL_4
0x1489d	            0xeb05	                           jmp 0x40148e4	     10293	syntax.c	FUNCTION_166	CALL_4
0x1489f	      0xb828000000	                           mov eax, 0x28	     10293	syntax.c	FUNCTION_166	CALL_4
0x148a4	      0xbe00000000	                              mov esi, 0	     10293	syntax.c	FUNCTION_166	CALL_4
0x148a9	          0x4889c7	                            mov rdi, rax	     10293	syntax.c	FUNCTION_166	CALL_4
0x148ac	      0xe800000000	                          call 0x40148f1	     10293	syntax.c	FUNCTION_166	CALL_4
0x148b1	              0x90	                                     nop	     10294	syntax.c	FUNCTION_166
0x148b2	              0xc9	                                   leave	     10294	syntax.c	FUNCTION_166
0x148b3	              0xc3	                                     ret	     10294	syntax.c	FUNCTION_166
syn_unadd_group	FOR,0:DO,0:IF,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,4	34
0x1323c	              0x55	                                push rbp	      9804	syntax.c	FUNCTION_155
0x1323d	          0x4889e5	                            mov rbp, rsp	      9804	syntax.c	FUNCTION_155
0x13240	    0x8b0500000000	            mov eax, dword [0x04013286] 	      9805	syntax.c	FUNCTION_155
0x13246	          0x83e801	                              sub eax, 1	      9805	syntax.c	FUNCTION_155
0x13249	    0x890500000000	            mov dword [0x0401328f], eax 	      9805	syntax.c	FUNCTION_155
0x1324f	    0x488b0d000000	            mov rcx, qword [0x04013296] 	      9806	syntax.c	FUNCTION_155	CALL_2
0x13256	    0x8b0500000000	            mov eax, dword [0x0401329c] 	      9806	syntax.c	FUNCTION_155	CALL_2
0x1325c	          0x4863d0	                         movsxd rdx, eax	      9806	syntax.c	FUNCTION_155	CALL_2
0x1325f	          0x4889d0	                            mov rax, rdx	      9806	syntax.c	FUNCTION_155	CALL_2
0x13262	        0x48c1e003	                              shl rax, 3	      9806	syntax.c	FUNCTION_155	CALL_2
0x13266	          0x4801d0	                            add rax, rdx	      9806	syntax.c	FUNCTION_155	CALL_2
0x13269	          0x4801c0	                            add rax, rax	      9806	syntax.c	FUNCTION_155	CALL_2
0x1326c	          0x4801d0	                            add rax, rdx	      9806	syntax.c	FUNCTION_155	CALL_2
0x1326f	        0x48c1e003	                              shl rax, 3	      9806	syntax.c	FUNCTION_155	CALL_2
0x13273	          0x4801c8	                            add rax, rcx	      9806	syntax.c	FUNCTION_155	CALL_2
0x13276	          0x488b00	                    mov rax, qword [rax]	      9806	syntax.c	FUNCTION_155	CALL_2
0x13279	          0x4889c7	                            mov rdi, rax	      9806	syntax.c	FUNCTION_155	CALL_2
0x1327c	      0xe800000000	                          call 0x40132c1	      9806	syntax.c	FUNCTION_155	CALL_2
0x13281	    0x488b0d000000	            mov rcx, qword [0x040132c8] 	      9807	syntax.c	FUNCTION_155	CALL_4
0x13288	    0x8b0500000000	            mov eax, dword [0x040132ce] 	      9807	syntax.c	FUNCTION_155	CALL_4
0x1328e	          0x4863d0	                         movsxd rdx, eax	      9807	syntax.c	FUNCTION_155	CALL_4
0x13291	          0x4889d0	                            mov rax, rdx	      9807	syntax.c	FUNCTION_155	CALL_4
0x13294	        0x48c1e003	                              shl rax, 3	      9807	syntax.c	FUNCTION_155	CALL_4
0x13298	          0x4801d0	                            add rax, rdx	      9807	syntax.c	FUNCTION_155	CALL_4
0x1329b	          0x4801c0	                            add rax, rax	      9807	syntax.c	FUNCTION_155	CALL_4
0x1329e	          0x4801d0	                            add rax, rdx	      9807	syntax.c	FUNCTION_155	CALL_4
0x132a1	        0x48c1e003	                              shl rax, 3	      9807	syntax.c	FUNCTION_155	CALL_4
0x132a5	          0x4801c8	                            add rax, rcx	      9807	syntax.c	FUNCTION_155	CALL_4
0x132a8	        0x488b4008	                mov rax, qword [rax + 8]	      9807	syntax.c	FUNCTION_155	CALL_4
0x132ac	          0x4889c7	                            mov rdi, rax	      9807	syntax.c	FUNCTION_155	CALL_4
0x132af	      0xe800000000	                          call 0x40132f4	      9807	syntax.c	FUNCTION_155	CALL_4
0x132b4	              0x90	                                     nop	      9808	syntax.c	FUNCTION_155
0x132b5	              0x5d	                                 pop rbp	      9808	syntax.c	FUNCTION_155
0x132b6	              0xc3	                                     ret	      9808	syntax.c	FUNCTION_155
syn_match_linecont	FOR,0:DO,0:IF,1:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,4	44
0xdda	              0x55	                                push rbp	      1034	syntax.c	FUNCTION_8
0xddb	          0x4889e5	                            mov rbp, rsp	      1034	syntax.c	FUNCTION_8
0xdde	    0x4881eca00100	                          sub rsp, 0x1a0	      1034	syntax.c	FUNCTION_8
0xde5	    0x4889bd68feff	            mov qword [rbp - 0x198], rdi	      1034	syntax.c	FUNCTION_8
0xdec	    0x64488b042528	                mov rax, qword fs:[0x28]	      1034	syntax.c	FUNCTION_8
0xdf5	        0x488945f8	                mov qword [rbp - 8], rax	      1034	syntax.c	FUNCTION_8
0xdf9	            0x31c0	                            xor eax, eax	      1034	syntax.c	FUNCTION_8
0xdfb	    0x488b05000000	            mov rax, qword [0x04000e42] 	      1039	syntax.c	FUNCTION_8	IF_1
0xe02	    0x488b80c80200	           mov rax, qword [rax + 0x2c8] 	      1039	syntax.c	FUNCTION_8	IF_1
0xe09	          0x4885c0	                           test rax, rax	      1039	syntax.c	FUNCTION_8	IF_1
0xe0c	     0xf848c000000	                            je 0x4000ede	      1039	syntax.c	FUNCTION_8	IF_1
0xe12	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1042	syntax.c	FUNCTION_8	IF_1	CALL_1
0xe16	          0x4889c7	                            mov rdi, rax	      1042	syntax.c	FUNCTION_8	IF_1	CALL_1
0xe19	      0xe8f3feffff	                   call sym.save_chartab	      1042	syntax.c	FUNCTION_8	IF_1	CALL_1
0xe1e	    0x488b05000000	            mov rax, qword [0x04000e65] 	      1043	syntax.c	FUNCTION_8	IF_1
0xe25	    0x8b8000030000	           mov eax, dword [rax + 0x300] 	      1043	syntax.c	FUNCTION_8	IF_1
0xe2b	          0x8945c8	             mov dword [rbp - 0x38], eax	      1043	syntax.c	FUNCTION_8	IF_1
0xe2e	    0x488b05000000	            mov rax, qword [0x04000e75] 	      1044	syntax.c	FUNCTION_8	IF_1
0xe35	    0x488b80c80200	           mov rax, qword [rax + 0x2c8] 	      1044	syntax.c	FUNCTION_8	IF_1
0xe3c	    0x48898580feff	            mov qword [rbp - 0x180], rax	      1044	syntax.c	FUNCTION_8	IF_1
0xe43	    0x488b05000000	            mov rax, qword [0x04000e8a] 	      1046	syntax.c	FUNCTION_8	IF_1	CALL_3
0xe4a	    0x488d90d00200	                  lea rdx, [rax + 0x2d0]	      1045	syntax.c	FUNCTION_8	IF_1	CALL_2
0xe51	    0x488bb568feff	            mov rsi, qword [rbp - 0x198]	      1045	syntax.c	FUNCTION_8	IF_1	CALL_2
0xe58	    0x488d8580feff	                  lea rax, [rbp - 0x180]	      1045	syntax.c	FUNCTION_8	IF_1	CALL_2
0xe5f	          0x4889d1	                            mov rcx, rdx	      1045	syntax.c	FUNCTION_8	IF_1	CALL_2
0xe62	      0xba00000000	                              mov edx, 0	      1045	syntax.c	FUNCTION_8	IF_1	CALL_2
0xe67	          0x4889c7	                            mov rdi, rax	      1045	syntax.c	FUNCTION_8	IF_1	CALL_2
0xe6a	      0xe8e2490000	                    call sym.syn_regexec	      1045	syntax.c	FUNCTION_8	IF_1	CALL_2
0xe6f	    0x89857cfeffff	            mov dword [rbp - 0x184], eax	      1045	syntax.c	FUNCTION_8	IF_1	CALL_2
0xe75	    0x488b05000000	            mov rax, qword [0x04000ebc] 	      1047	syntax.c	FUNCTION_8	IF_1
0xe7c	    0x488b9580feff	            mov rdx, qword [rbp - 0x180]	      1047	syntax.c	FUNCTION_8	IF_1
0xe83	    0x488990c80200	            mov qword [rax + 0x2c8], rdx	      1047	syntax.c	FUNCTION_8	IF_1
0xe8a	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1048	syntax.c	FUNCTION_8	IF_1	CALL_4
0xe8e	          0x4889c7	                            mov rdi, rax	      1048	syntax.c	FUNCTION_8	IF_1	CALL_4
0xe91	      0xe8f5feffff	                call sym.restore_chartab	      1048	syntax.c	FUNCTION_8	IF_1	CALL_4
0xe96	    0x8b857cfeffff	            mov eax, dword [rbp - 0x184]	      1049	syntax.c	FUNCTION_8	IF_1
0xe9c	            0xeb05	                           jmp 0x4000ee3	      1049	syntax.c	FUNCTION_8	IF_1
0xe9e	      0xb800000000	                              mov eax, 0	      1051	syntax.c	FUNCTION_8
0xea3	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1052	syntax.c	FUNCTION_8
0xea7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1052	syntax.c	FUNCTION_8
0xeb0	            0x7405	                            je 0x4000ef7	      1052	syntax.c	FUNCTION_8
0xeb2	      0xe800000000	                          call 0x4000ef7	      1052	syntax.c	FUNCTION_8
0xeb7	              0xc9	                                   leave	      1052	syntax.c	FUNCTION_8
0xeb8	              0xc3	                                     ret	      1052	syntax.c	FUNCTION_8
syn_stack_free_entry	FOR,0:DO,0:IF,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,1	23
0x1a51	              0x55	                                push rbp	      1438	syntax.c	FUNCTION_17
0x1a52	          0x4889e5	                            mov rbp, rsp	      1438	syntax.c	FUNCTION_17
0x1a55	        0x4883ec10	                           sub rsp, 0x10	      1438	syntax.c	FUNCTION_17
0x1a59	        0x48897df8	                mov qword [rbp - 8], rdi	      1438	syntax.c	FUNCTION_17
0x1a5d	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1438	syntax.c	FUNCTION_17
0x1a61	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1439	syntax.c	FUNCTION_17	CALL_1
0x1a65	          0x4889c7	                            mov rdi, rax	      1439	syntax.c	FUNCTION_17	CALL_1
0x1a68	      0xe846eaffff	                call sym.clear_syn_state	      1439	syntax.c	FUNCTION_17	CALL_1
0x1a6d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1440	syntax.c	FUNCTION_17
0x1a71	    0x488b90280300	           mov rdx, qword [rax + 0x328] 	      1440	syntax.c	FUNCTION_17
0x1a78	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1440	syntax.c	FUNCTION_17
0x1a7c	          0x488910	                    mov qword [rax], rdx	      1440	syntax.c	FUNCTION_17
0x1a7f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1441	syntax.c	FUNCTION_17
0x1a83	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1441	syntax.c	FUNCTION_17
0x1a87	    0x488990280300	            mov qword [rax + 0x328], rdx	      1441	syntax.c	FUNCTION_17
0x1a8e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1442	syntax.c	FUNCTION_17
0x1a92	    0x8b8030030000	           mov eax, dword [rax + 0x330] 	      1442	syntax.c	FUNCTION_17
0x1a98	          0x8d5001	                      lea edx, [rax + 1]	      1442	syntax.c	FUNCTION_17
0x1a9b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1442	syntax.c	FUNCTION_17
0x1a9f	    0x899030030000	            mov dword [rax + 0x330], edx	      1442	syntax.c	FUNCTION_17
0x1aa5	              0x90	                                     nop	      1443	syntax.c	FUNCTION_17
0x1aa6	              0xc9	                                   leave	      1443	syntax.c	FUNCTION_17
0x1aa7	              0xc3	                                     ret	      1443	syntax.c	FUNCTION_17
ex_syntime	FOR,0:DO,0:IF,4:SWITCH,0:functions,0:ELSE,4:WHILE,0:CALL,8	53
0xcd67	              0x55	                                push rbp	      6675	syntax.c	FUNCTION_107
0xcd68	          0x4889e5	                            mov rbp, rsp	      6675	syntax.c	FUNCTION_107
0xcd6b	              0x53	                                push rbx	      6675	syntax.c	FUNCTION_107
0xcd6c	        0x4883ec18	                           sub rsp, 0x18	      6675	syntax.c	FUNCTION_107
0xcd70	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6675	syntax.c	FUNCTION_107
0xcd74	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0xcd78	          0x488b00	                    mov rax, qword [rax]	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0xcd7b	      0xbe00000000	                              mov esi, 0	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0xcd80	          0x4889c7	                            mov rdi, rax	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0xcd83	      0xe800000000	                          call 0x400cdc8	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0xcd88	            0x85c0	                           test eax, eax	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0xcd8a	            0x750c	                           jne 0x400cdd8	      6676	syntax.c	FUNCTION_107	IF_1	CALL_1
0xcd8c	    0xc70500000000	               mov dword [0x0400cdd6], 1	      6677	syntax.c	FUNCTION_107	IF_1
0xcd96	            0xeb7e	                           jmp 0x400ce56	      6686	syntax.c	FUNCTION_107
0xcd98	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6678	syntax.c	FUNCTION_107	ELSE_1	IF_2	CALL_2
0xcd9c	          0x488b00	                    mov rax, qword [rax]	      6678	syntax.c	FUNCTION_107	ELSE_1	IF_2	CALL_2
0xcd9f	      0xbe00000000	                              mov esi, 0	      6678	syntax.c	FUNCTION_107	ELSE_1	IF_2	CALL_2
0xcda4	          0x4889c7	                            mov rdi, rax	      6678	syntax.c	FUNCTION_107	ELSE_1	IF_2	CALL_2
0xcda7	      0xe800000000	                          call 0x400cdec	      6678	syntax.c	FUNCTION_107	ELSE_1	IF_2	CALL_2
0xcdac	            0x85c0	                           test eax, eax	      6678	syntax.c	FUNCTION_107	ELSE_1	IF_2	CALL_2
0xcdae	            0x750c	                           jne 0x400cdfc	      6678	syntax.c	FUNCTION_107	ELSE_1	IF_2	CALL_2
0xcdb0	    0xc70500000000	               mov dword [0x0400cdfa], 0	      6679	syntax.c	FUNCTION_107	ELSE_1	IF_2
0xcdba	            0xeb5a	                           jmp 0x400ce56	      6686	syntax.c	FUNCTION_107
0xcdbc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6680	syntax.c	FUNCTION_107	ELSE_2	IF_3	CALL_3
0xcdc0	          0x488b00	                    mov rax, qword [rax]	      6680	syntax.c	FUNCTION_107	ELSE_2	IF_3	CALL_3
0xcdc3	      0xbe00000000	                              mov esi, 0	      6680	syntax.c	FUNCTION_107	ELSE_2	IF_3	CALL_3
0xcdc8	          0x4889c7	                            mov rdi, rax	      6680	syntax.c	FUNCTION_107	ELSE_2	IF_3	CALL_3
0xcdcb	      0xe800000000	                          call 0x400ce10	      6680	syntax.c	FUNCTION_107	ELSE_2	IF_3	CALL_3
0xcdd0	            0x85c0	                           test eax, eax	      6680	syntax.c	FUNCTION_107	ELSE_2	IF_3	CALL_3
0xcdd2	            0x7507	                           jne 0x400ce1b	      6680	syntax.c	FUNCTION_107	ELSE_2	IF_3	CALL_3
0xcdd4	      0xe888000000	                  call sym.syntime_clear	      6681	syntax.c	FUNCTION_107	ELSE_2	IF_3
0xcdd9	            0xeb3b	                           jmp 0x400ce56	      6686	syntax.c	FUNCTION_107
0xcddb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6682	syntax.c	FUNCTION_107	ELSE_3	IF_4	CALL_5
0xcddf	          0x488b00	                    mov rax, qword [rax]	      6682	syntax.c	FUNCTION_107	ELSE_3	IF_4	CALL_5
0xcde2	      0xbe00000000	                              mov esi, 0	      6682	syntax.c	FUNCTION_107	ELSE_3	IF_4	CALL_5
0xcde7	          0x4889c7	                            mov rdi, rax	      6682	syntax.c	FUNCTION_107	ELSE_3	IF_4	CALL_5
0xcdea	      0xe800000000	                          call 0x400ce2f	      6682	syntax.c	FUNCTION_107	ELSE_3	IF_4	CALL_5
0xcdef	            0x85c0	                           test eax, eax	      6682	syntax.c	FUNCTION_107	ELSE_3	IF_4	CALL_5
0xcdf1	            0x7507	                           jne 0x400ce3a	      6682	syntax.c	FUNCTION_107	ELSE_3	IF_4	CALL_5
0xcdf3	      0xe87c010000	                 call sym.syntime_report	      6683	syntax.c	FUNCTION_107	ELSE_3	IF_4
0xcdf8	            0xeb1c	                           jmp 0x400ce56	      6686	syntax.c	FUNCTION_107
0xcdfa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6685	syntax.c	FUNCTION_107	CALL_8
0xcdfe	          0x488b18	                    mov rbx, qword [rax]	      6685	syntax.c	FUNCTION_107	CALL_8
0xce01	      0xbf00000000	                              mov edi, 0	      6685	syntax.c	FUNCTION_107	CALL_8
0xce06	      0xe800000000	                          call 0x400ce4b	      6685	syntax.c	FUNCTION_107	CALL_8
0xce0b	          0x4889de	                            mov rsi, rbx	      6685	syntax.c	FUNCTION_107	CALL_8
0xce0e	          0x4889c7	                            mov rdi, rax	      6685	syntax.c	FUNCTION_107	CALL_8
0xce11	      0xe800000000	                          call 0x400ce56	      6685	syntax.c	FUNCTION_107	CALL_8
0xce16	              0x90	                                     nop	      6686	syntax.c	FUNCTION_107
0xce17	        0x4883c418	                           add rsp, 0x18	      6686	syntax.c	FUNCTION_107
0xce1b	              0x5b	                                 pop rbx	      6686	syntax.c	FUNCTION_107
0xce1c	              0x5d	                                 pop rbp	      6686	syntax.c	FUNCTION_107
0xce1d	              0xc3	                                     ret	      6686	syntax.c	FUNCTION_107
hl_get_font_name	FOR,0:DO,0:IF,2:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,2	28
0x10bdb	              0x55	                                push rbp	      8520	syntax.c	FUNCTION_123
0x10bdc	          0x4889e5	                            mov rbp, rsp	      8520	syntax.c	FUNCTION_123
0x10bdf	        0x4883ec10	                           sub rsp, 0x10	      8520	syntax.c	FUNCTION_123
0x10be3	      0xbf00000000	                              mov edi, 0	      8524	syntax.c	FUNCTION_123	CALL_1
0x10be8	      0xe800000000	                          call 0x4010c2d	      8524	syntax.c	FUNCTION_123	CALL_1
0x10bed	          0x8945f4	              mov dword [rbp - 0xc], eax	      8524	syntax.c	FUNCTION_123	CALL_1
0x10bf0	        0x837df400	                cmp dword [rbp - 0xc], 0	      8525	syntax.c	FUNCTION_123	IF_1
0x10bf4	            0x7e3f	                           jle 0x4010c75	      8525	syntax.c	FUNCTION_123	IF_1
0x10bf6	    0x488b0d000000	            mov rcx, qword [0x04010c3d] 	      8527	syntax.c	FUNCTION_123	IF_1	CALL_2
0x10bfd	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      8527	syntax.c	FUNCTION_123	IF_1	CALL_2
0x10c00	          0x4863d0	                         movsxd rdx, eax	      8527	syntax.c	FUNCTION_123	IF_1	CALL_2
0x10c03	          0x4889d0	                            mov rax, rdx	      8527	syntax.c	FUNCTION_123	IF_1	CALL_2
0x10c06	        0x48c1e003	                              shl rax, 3	      8527	syntax.c	FUNCTION_123	IF_1	CALL_2
0x10c0a	          0x4801d0	                            add rax, rdx	      8527	syntax.c	FUNCTION_123	IF_1	CALL_2
0x10c0d	          0x4801c0	                            add rax, rax	      8527	syntax.c	FUNCTION_123	IF_1	CALL_2
0x10c10	          0x4801d0	                            add rax, rdx	      8527	syntax.c	FUNCTION_123	IF_1	CALL_2
0x10c13	        0x48c1e003	                              shl rax, 3	      8527	syntax.c	FUNCTION_123	IF_1	CALL_2
0x10c17	    0x482d98000000	                           sub rax, 0x98	      8527	syntax.c	FUNCTION_123	IF_1	CALL_2
0x10c1d	          0x4801c8	                            add rax, rcx	      8527	syntax.c	FUNCTION_123	IF_1	CALL_2
0x10c20	        0x488b4060	            mov rax, qword [rax + 0x60] 	      8527	syntax.c	FUNCTION_123	IF_1	CALL_2
0x10c24	        0x488945f8	                mov qword [rbp - 8], rax	      8527	syntax.c	FUNCTION_123	IF_1	CALL_2
0x10c28	      0x48837df800	                  cmp qword [rbp - 8], 0	      8528	syntax.c	FUNCTION_123	IF_1	IF_2
0x10c2d	            0x7406	                            je 0x4010c75	      8528	syntax.c	FUNCTION_123	IF_1	IF_2
0x10c2f	        0x488b45f8	                mov rax, qword [rbp - 8]	      8529	syntax.c	FUNCTION_123	IF_1	IF_2
0x10c33	            0xeb05	                           jmp 0x4010c7a	      8529	syntax.c	FUNCTION_123	IF_1	IF_2
0x10c35	      0xb800000000	                              mov eax, 0	      8531	syntax.c	FUNCTION_123
0x10c3a	              0xc9	                                   leave	      8532	syntax.c	FUNCTION_123
0x10c3b	              0xc3	                                     ret	      8532	syntax.c	FUNCTION_123
syn_stack_find_entry	FOR,1:DO,0:IF,2:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,0	30
0x1aa8	              0x55	                                push rbp	      1451	syntax.c	FUNCTION_18
0x1aa9	          0x4889e5	                            mov rbp, rsp	      1451	syntax.c	FUNCTION_18
0x1aac	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1451	syntax.c	FUNCTION_18
0x1ab0	    0x48c745f80000	                  mov qword [rbp - 8], 0	      1454	syntax.c	FUNCTION_18
0x1ab8	    0x488b05000000	            mov rax, qword [0x04001aff] 	      1455	syntax.c	FUNCTION_18	FOR_1
0x1abf	    0x488b80200300	           mov rax, qword [rax + 0x320] 	      1455	syntax.c	FUNCTION_18	FOR_1
0x1ac6	        0x488945f0	             mov qword [rbp - 0x10], rax	      1455	syntax.c	FUNCTION_18	FOR_1
0x1aca	            0xeb35	                           jmp 0x4001b41	      1455	syntax.c	FUNCTION_18	FOR_1
0x1acc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x1ad0	        0x488b4008	                mov rax, qword [rax + 8]	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x1ad4	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x1ad8	            0x7506	                           jne 0x4001b20	      1457	syntax.c	FUNCTION_18	FOR_1	IF_1
0x1ada	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1458	syntax.c	FUNCTION_18	FOR_1	IF_1
0x1ade	            0xeb2f	                           jmp 0x4001b4f	      1458	syntax.c	FUNCTION_18	FOR_1	IF_1
0x1ae0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x1ae4	        0x488b4008	                mov rax, qword [rax + 8]	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x1ae8	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x1aec	            0x7f1c	                            jg 0x4001b4a	      1459	syntax.c	FUNCTION_18	FOR_1	IF_2
0x1aee	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1455	syntax.c	FUNCTION_18	FOR_1
0x1af2	        0x488945f8	                mov qword [rbp - 8], rax	      1455	syntax.c	FUNCTION_18	FOR_1
0x1af6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1455	syntax.c	FUNCTION_18	FOR_1
0x1afa	          0x488b00	                    mov rax, qword [rax]	      1455	syntax.c	FUNCTION_18	FOR_1
0x1afd	        0x488945f0	             mov qword [rbp - 0x10], rax	      1455	syntax.c	FUNCTION_18	FOR_1
0x1b01	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1455	syntax.c	FUNCTION_18	FOR_1
0x1b06	            0x75c4	                           jne 0x4001b0c	      1455	syntax.c	FUNCTION_18	FOR_1
0x1b08	            0xeb01	                           jmp 0x4001b4b	      1455	syntax.c	FUNCTION_18	FOR_1
0x1b0a	              0x90	                                     nop	      1460	syntax.c	FUNCTION_18	FOR_1	IF_2
0x1b0b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1462	syntax.c	FUNCTION_18
0x1b0f	              0x5d	                                 pop rbp	      1463	syntax.c	FUNCTION_18
0x1b10	              0xc3	                                     ret	      1463	syntax.c	FUNCTION_18
syn_remove_pattern	FOR,0:DO,0:IF,1:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,3	54
0x6724	              0x55	                                push rbp	      3707	syntax.c	FUNCTION_52
0x6725	          0x4889e5	                            mov rbp, rsp	      3707	syntax.c	FUNCTION_52
0x6728	        0x4883ec20	                           sub rsp, 0x20	      3707	syntax.c	FUNCTION_52
0x672c	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3707	syntax.c	FUNCTION_52
0x6730	          0x8975e4	             mov dword [rbp - 0x1c], esi	      3707	syntax.c	FUNCTION_52
0x6733	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3710	syntax.c	FUNCTION_52	CALL_1
0x6737	    0x488b88700200	           mov rcx, qword [rax + 0x270] 	      3710	syntax.c	FUNCTION_52	CALL_1
0x673e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      3710	syntax.c	FUNCTION_52	CALL_1
0x6741	          0x4863d0	                         movsxd rdx, eax	      3710	syntax.c	FUNCTION_52	CALL_1
0x6744	          0x4889d0	                            mov rax, rdx	      3710	syntax.c	FUNCTION_52	CALL_1
0x6747	        0x48c1e002	                              shl rax, 2	      3710	syntax.c	FUNCTION_52	CALL_1
0x674b	          0x4801d0	                            add rax, rdx	      3710	syntax.c	FUNCTION_52	CALL_1
0x674e	        0x48c1e005	                              shl rax, 5	      3710	syntax.c	FUNCTION_52	CALL_1
0x6752	          0x4801c8	                            add rax, rcx	      3710	syntax.c	FUNCTION_52	CALL_1
0x6755	        0x488945f8	                mov qword [rbp - 8], rax	      3710	syntax.c	FUNCTION_52	CALL_1
0x6759	        0x488b45f8	                mov rax, qword [rbp - 8]	      3712	syntax.c	FUNCTION_52	IF_1
0x675d	          0x8b4024	            mov eax, dword [rax + 0x24] 	      3712	syntax.c	FUNCTION_52	IF_1
0x6760	      0x2500200000	                         and eax, 0x2000	      3712	syntax.c	FUNCTION_52	IF_1
0x6765	            0x85c0	                           test eax, eax	      3712	syntax.c	FUNCTION_52	IF_1
0x6767	            0x7417	                            je 0x40067c0	      3712	syntax.c	FUNCTION_52	IF_1
0x6769	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3713	syntax.c	FUNCTION_52	IF_1
0x676d	    0x8b800c030000	           mov eax, dword [rax + 0x30c] 	      3713	syntax.c	FUNCTION_52	IF_1
0x6773	          0x8d50ff	                      lea edx, [rax - 1]	      3713	syntax.c	FUNCTION_52	IF_1
0x6776	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3713	syntax.c	FUNCTION_52	IF_1
0x677a	    0x89900c030000	            mov dword [rax + 0x30c], edx	      3713	syntax.c	FUNCTION_52	IF_1
0x6780	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      3715	syntax.c	FUNCTION_52	CALL_2
0x6783	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3715	syntax.c	FUNCTION_52	CALL_2
0x6787	            0x89d6	                            mov esi, edx	      3715	syntax.c	FUNCTION_52	CALL_2
0x6789	          0x4889c7	                            mov rdi, rax	      3715	syntax.c	FUNCTION_52	CALL_2
0x678c	      0xe858000000	              call sym.syn_clear_pattern	      3715	syntax.c	FUNCTION_52	CALL_2
0x6791	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3716	syntax.c	FUNCTION_52	CALL_3
0x6795	    0x8b8060020000	           mov eax, dword [rax + 0x260] 	      3716	syntax.c	FUNCTION_52	CALL_3
0x679b	          0x2b45e4	             sub eax, dword [rbp - 0x1c]	      3716	syntax.c	FUNCTION_52	CALL_3
0x679e	          0x83e801	                              sub eax, 1	      3716	syntax.c	FUNCTION_52	CALL_3
0x67a1	          0x4863d0	                         movsxd rdx, eax	      3716	syntax.c	FUNCTION_52	CALL_3
0x67a4	          0x4889d0	                            mov rax, rdx	      3716	syntax.c	FUNCTION_52	CALL_3
0x67a7	        0x48c1e002	                              shl rax, 2	      3716	syntax.c	FUNCTION_52	CALL_3
0x67ab	          0x4801d0	                            add rax, rdx	      3716	syntax.c	FUNCTION_52	CALL_3
0x67ae	        0x48c1e005	                              shl rax, 5	      3716	syntax.c	FUNCTION_52	CALL_3
0x67b2	          0x4889c2	                            mov rdx, rax	      3716	syntax.c	FUNCTION_52	CALL_3
0x67b5	        0x488b45f8	                mov rax, qword [rbp - 8]	      3716	syntax.c	FUNCTION_52	CALL_3
0x67b9	    0x488d88a00000	                   lea rcx, [rax + 0xa0]	      3716	syntax.c	FUNCTION_52	CALL_3
0x67c0	        0x488b45f8	                mov rax, qword [rbp - 8]	      3716	syntax.c	FUNCTION_52	CALL_3
0x67c4	          0x4889ce	                            mov rsi, rcx	      3716	syntax.c	FUNCTION_52	CALL_3
0x67c7	          0x4889c7	                            mov rdi, rax	      3716	syntax.c	FUNCTION_52	CALL_3
0x67ca	      0xe800000000	                          call 0x400680f	      3716	syntax.c	FUNCTION_52	CALL_3
0x67cf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3718	syntax.c	FUNCTION_52
0x67d3	    0x8b8060020000	           mov eax, dword [rax + 0x260] 	      3718	syntax.c	FUNCTION_52
0x67d9	          0x8d50ff	                      lea edx, [rax - 1]	      3718	syntax.c	FUNCTION_52
0x67dc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3718	syntax.c	FUNCTION_52
0x67e0	    0x899060020000	            mov dword [rax + 0x260], edx	      3718	syntax.c	FUNCTION_52
0x67e6	              0x90	                                     nop	      3719	syntax.c	FUNCTION_52
0x67e7	              0xc9	                                   leave	      3719	syntax.c	FUNCTION_52
0x67e8	              0xc3	                                     ret	      3719	syntax.c	FUNCTION_52
get_highlight_name	FOR,0:DO,0:IF,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,1	13
0x148b4	              0x55	                                push rbp	     10305	syntax.c	FUNCTION_167
0x148b5	          0x4889e5	                            mov rbp, rsp	     10305	syntax.c	FUNCTION_167
0x148b8	        0x4883ec10	                           sub rsp, 0x10	     10305	syntax.c	FUNCTION_167
0x148bc	        0x48897df8	                mov qword [rbp - 8], rdi	     10305	syntax.c	FUNCTION_167
0x148c0	          0x8975f4	              mov dword [rbp - 0xc], esi	     10305	syntax.c	FUNCTION_167
0x148c3	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	     10306	syntax.c	FUNCTION_167	CALL_1
0x148c6	        0x488b45f8	                mov rax, qword [rbp - 8]	     10306	syntax.c	FUNCTION_167	CALL_1
0x148ca	      0xba01000000	                              mov edx, 1	     10306	syntax.c	FUNCTION_167	CALL_1
0x148cf	            0x89ce	                            mov esi, ecx	     10306	syntax.c	FUNCTION_167	CALL_1
0x148d1	          0x4889c7	                            mov rdi, rax	     10306	syntax.c	FUNCTION_167	CALL_1
0x148d4	      0xe800000000	                          call 0x4014919	     10306	syntax.c	FUNCTION_167	CALL_1
0x148d9	              0xc9	                                   leave	     10307	syntax.c	FUNCTION_167
0x148da	              0xc3	                                     ret	     10307	syntax.c	FUNCTION_167
get_gui_attr_idx	FOR,0:DO,0:IF,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,2	30
0x1159a	              0x55	                                push rbp	      8973	syntax.c	FUNCTION_134
0x1159b	          0x4889e5	                            mov rbp, rsp	      8973	syntax.c	FUNCTION_134
0x1159e	        0x4883ec50	                           sub rsp, 0x50	      8973	syntax.c	FUNCTION_134
0x115a2	          0x897dcc	             mov dword [rbp - 0x34], edi	      8973	syntax.c	FUNCTION_134
0x115a5	        0x488975c0	             mov qword [rbp - 0x40], rsi	      8973	syntax.c	FUNCTION_134
0x115a9	        0x488955b8	             mov qword [rbp - 0x48], rdx	      8973	syntax.c	FUNCTION_134
0x115ad	    0x64488b042528	                mov rax, qword fs:[0x28]	      8973	syntax.c	FUNCTION_134
0x115b6	        0x488945f8	                mov qword [rbp - 8], rax	      8973	syntax.c	FUNCTION_134
0x115ba	            0x31c0	                            xor eax, eax	      8973	syntax.c	FUNCTION_134
0x115bc	        0x488d45d0	                   lea rax, [rbp - 0x30]	      8976	syntax.c	FUNCTION_134	CALL_1
0x115c0	      0xba28000000	                           mov edx, 0x28	      8976	syntax.c	FUNCTION_134	CALL_1
0x115c5	      0xbe00000000	                              mov esi, 0	      8976	syntax.c	FUNCTION_134	CALL_1
0x115ca	          0x4889c7	                            mov rdi, rax	      8976	syntax.c	FUNCTION_134	CALL_1
0x115cd	      0xe800000000	                          call 0x4011612	      8976	syntax.c	FUNCTION_134	CALL_1
0x115d2	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      8977	syntax.c	FUNCTION_134
0x115d5	        0x668945d0	               mov word [rbp - 0x30], ax	      8977	syntax.c	FUNCTION_134
0x115d9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      8978	syntax.c	FUNCTION_134
0x115dd	        0x488945d8	             mov qword [rbp - 0x28], rax	      8978	syntax.c	FUNCTION_134
0x115e1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      8979	syntax.c	FUNCTION_134
0x115e5	        0x488945e0	             mov qword [rbp - 0x20], rax	      8979	syntax.c	FUNCTION_134
0x115e9	        0x488d45d0	                   lea rax, [rbp - 0x30]	      8980	syntax.c	FUNCTION_134	CALL_2
0x115ed	          0x4889c6	                            mov rsi, rax	      8980	syntax.c	FUNCTION_134	CALL_2
0x115f0	      0xbf00000000	                              mov edi, 0	      8980	syntax.c	FUNCTION_134	CALL_2
0x115f5	      0xe87efaffff	                 call sym.get_attr_entry	      8980	syntax.c	FUNCTION_134	CALL_2
0x115fa	        0x488b4df8	                mov rcx, qword [rbp - 8]	      8981	syntax.c	FUNCTION_134
0x115fe	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      8981	syntax.c	FUNCTION_134
0x11607	            0x7405	                            je 0x401164e	      8981	syntax.c	FUNCTION_134
0x11609	      0xe800000000	                          call 0x401164e	      8981	syntax.c	FUNCTION_134
0x1160e	              0xc9	                                   leave	      8981	syntax.c	FUNCTION_134
0x1160f	              0xc3	                                     ret	      8981	syntax.c	FUNCTION_134
highlight_gui_started	FOR,1:DO,0:IF,1:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,3	25
0x134bd	              0x55	                                push rbp	      9905	syntax.c	FUNCTION_160
0x134be	          0x4889e5	                            mov rbp, rsp	      9905	syntax.c	FUNCTION_160
0x134c1	        0x4883ec10	                           sub rsp, 0x10	      9905	syntax.c	FUNCTION_160
0x134c5	    0x8b0500000000	            mov eax, dword [0x0401350b] 	      9909	syntax.c	FUNCTION_160	IF_1
0x134cb	            0x85c0	                           test eax, eax	      9909	syntax.c	FUNCTION_160	IF_1
0x134cd	            0x750a	                           jne 0x4013519	      9909	syntax.c	FUNCTION_160	IF_1
0x134cf	    0x8b0500000000	            mov eax, dword [0x04013515] 	      9909	syntax.c	FUNCTION_160	IF_1
0x134d5	            0x85c0	                           test eax, eax	      9909	syntax.c	FUNCTION_160	IF_1
0x134d7	            0x7405	                            je 0x401351e	      9909	syntax.c	FUNCTION_160	IF_1
0x134d9	      0xe800000000	                          call 0x401351e	      9910	syntax.c	FUNCTION_160	CALL_1
0x134de	    0xc745fc000000	                  mov dword [rbp - 4], 0	      9912	syntax.c	FUNCTION_160	FOR_1
0x134e5	            0xeb18	                           jmp 0x401353f	      9912	syntax.c	FUNCTION_160	FOR_1
0x134e7	          0x8b45fc	                mov eax, dword [rbp - 4]	      9913	syntax.c	FUNCTION_160	CALL_2
0x134ea	      0xba00000000	                              mov edx, 0	      9913	syntax.c	FUNCTION_160	CALL_2
0x134ef	      0xbe00000000	                              mov esi, 0	      9913	syntax.c	FUNCTION_160	CALL_2
0x134f4	            0x89c7	                            mov edi, eax	      9913	syntax.c	FUNCTION_160	CALL_2
0x134f6	      0xe817000000	               call sym.gui_do_one_color	      9913	syntax.c	FUNCTION_160	CALL_2
0x134fb	        0x8345fc01	                  add dword [rbp - 4], 1	      9912	syntax.c	FUNCTION_160	FOR_1
0x134ff	    0x8b0500000000	            mov eax, dword [0x04013545] 	      9912	syntax.c	FUNCTION_160	FOR_1
0x13505	          0x3b45fc	                cmp eax, dword [rbp - 4]	      9912	syntax.c	FUNCTION_160	FOR_1
0x13508	            0x7fdd	                            jg 0x4013527	      9912	syntax.c	FUNCTION_160	FOR_1
0x1350a	      0xe800000000	                          call 0x401354f	      9915	syntax.c	FUNCTION_160	CALL_3
0x1350f	              0x90	                                     nop	      9916	syntax.c	FUNCTION_160
0x13510	              0xc9	                                   leave	      9916	syntax.c	FUNCTION_160
0x13511	              0xc3	                                     ret	      9916	syntax.c	FUNCTION_160
highlight_changed	FOR,5:DO,0:IF,16:SWITCH,1:functions,0:ELSE,5:WHILE,1:CALL,21	324
0x1413a	              0x55	                                push rbp	     10039	syntax.c	FUNCTION_163
0x1413b	          0x4889e5	                            mov rbp, rsp	     10039	syntax.c	FUNCTION_163
0x1413e	        0x4883ec60	                           sub rsp, 0x60	     10039	syntax.c	FUNCTION_163
0x14142	    0x64488b042528	                mov rax, qword fs:[0x28]	     10039	syntax.c	FUNCTION_163
0x1414b	        0x488945f8	                mov qword [rbp - 8], rax	     10039	syntax.c	FUNCTION_163
0x1414f	            0x31c0	                            xor eax, eax	     10039	syntax.c	FUNCTION_163
0x14151	    0xc745b8ffffff	     mov dword [rbp - 0x48], 0xffffffff 	     10049	syntax.c	FUNCTION_163
0x14158	    0xc745bc000000	               mov dword [rbp - 0x44], 0	     10050	syntax.c	FUNCTION_163
0x1415f	    0xc745c0000000	               mov dword [rbp - 0x40], 0	     10052	syntax.c	FUNCTION_163
0x14166	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	     10053	syntax.c	FUNCTION_163
0x1416d	    0xc70500000000	               mov dword [0x040141b7], 0	     10060	syntax.c	FUNCTION_163
0x14177	    0xc745ac000000	               mov dword [rbp - 0x54], 0	     10065	syntax.c	FUNCTION_163	FOR_1
0x1417e	            0xeb14	                           jmp 0x40141d4	     10065	syntax.c	FUNCTION_163	FOR_1
0x14180	          0x8b45ac	             mov eax, dword [rbp - 0x54]	     10066	syntax.c	FUNCTION_163	FOR_1
0x14183	            0x4898	                                    cdqe	     10066	syntax.c	FUNCTION_163	FOR_1
0x14185	    0xc70485000000	                    mov dword [rax*4], 0	     10066	syntax.c	FUNCTION_163	FOR_1
0x14190	        0x8345ac01	               add dword [rbp - 0x54], 1	     10065	syntax.c	FUNCTION_163	FOR_1
0x14194	        0x837dac2d	           cmp dword [rbp - 0x54], 0x2d 	     10065	syntax.c	FUNCTION_163	FOR_1
0x14198	            0x7ee6	                           jle 0x40141c0	     10065	syntax.c	FUNCTION_163	FOR_1
0x1419a	    0xc745b0000000	               mov dword [rbp - 0x50], 0	     10072	syntax.c	FUNCTION_163	FOR_2
0x141a1	      0xe976020000	                           jmp 0x401445c	     10072	syntax.c	FUNCTION_163	FOR_2
0x141a6	        0x837db000	               cmp dword [rbp - 0x50], 0	     10074	syntax.c	FUNCTION_163	FOR_2	IF_1
0x141aa	            0x740d	                            je 0x40141f9	     10074	syntax.c	FUNCTION_163	FOR_2	IF_1
0x141ac	    0x488b05000000	            mov rax, qword [0x040141f3] 	     10075	syntax.c	FUNCTION_163	FOR_2	IF_1
0x141b3	        0x488945d0	             mov qword [rbp - 0x30], rax	     10075	syntax.c	FUNCTION_163	FOR_2	IF_1
0x141b7	            0xeb09	                           jmp 0x4014202	     10075	syntax.c	FUNCTION_163	FOR_2	IF_1
0x141b9	      0xe800000000	                          call 0x40141fe	     10077	syntax.c	FUNCTION_163	FOR_2	CALL_1
0x141be	        0x488945d0	             mov qword [rbp - 0x30], rax	     10077	syntax.c	FUNCTION_163	FOR_2	CALL_1
0x141c2	      0x48837dd000	               cmp qword [rbp - 0x30], 0	     10078	syntax.c	FUNCTION_163	FOR_2	IF_2
0x141c7	     0xf844a020000	                            je 0x4014457	     10078	syntax.c	FUNCTION_163	FOR_2	IF_2
0x141cd	      0xe934020000	                           jmp 0x4014446	     10081	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x141d2	    0xc745ac000000	               mov dword [rbp - 0x54], 0	     10083	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3
0x141d9	            0xeb1e	                           jmp 0x4014239	     10083	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3
0x141db	          0x8b45ac	             mov eax, dword [rbp - 0x54]	     10084	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3	IF_3
0x141de	            0x4898	                                    cdqe	     10084	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3	IF_3
0x141e0	    0x8b1485000000	                  mov edx, dword [rax*4]	     10084	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3	IF_3
0x141e7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10084	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3	IF_3
0x141eb	           0xfb600	                   movzx eax, byte [rax]	     10084	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3	IF_3
0x141ee	           0xfb6c0	                           movzx eax, al	     10084	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3	IF_3
0x141f1	            0x39c2	                            cmp edx, eax	     10084	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3	IF_3
0x141f3	            0x740c	                            je 0x4014241	     10084	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3	IF_3
0x141f5	        0x8345ac01	               add dword [rbp - 0x54], 1	     10083	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3
0x141f9	        0x837dac2d	           cmp dword [rbp - 0x54], 0x2d 	     10083	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3
0x141fd	            0x7edc	                           jle 0x401421b	     10083	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3
0x141ff	            0xeb01	                           jmp 0x4014242	     10083	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3
0x14201	              0x90	                                     nop	     10085	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_3	IF_3
0x14202	      0x488345d001	               add qword [rbp - 0x30], 1	     10086	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x14207	        0x837dac2e	           cmp dword [rbp - 0x54], 0x2e 	     10087	syntax.c	FUNCTION_163	FOR_2	WHILE_1	IF_4
0x1420b	            0x740b	                            je 0x4014258	     10087	syntax.c	FUNCTION_163	FOR_2	WHILE_1	IF_4
0x1420d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10087	syntax.c	FUNCTION_163	FOR_2	WHILE_1	IF_4
0x14211	           0xfb600	                   movzx eax, byte [rax]	     10087	syntax.c	FUNCTION_163	FOR_2	WHILE_1	IF_4
0x14214	            0x84c0	                             test al, al	     10087	syntax.c	FUNCTION_163	FOR_2	WHILE_1	IF_4
0x14216	            0x750a	                           jne 0x4014262	     10087	syntax.c	FUNCTION_163	FOR_2	WHILE_1	IF_4
0x14218	      0xb800000000	                              mov eax, 0	     10088	syntax.c	FUNCTION_163	FOR_2	WHILE_1	IF_4
0x1421d	      0xe9e9030000	                           jmp 0x401464b	     10088	syntax.c	FUNCTION_163	FOR_2	WHILE_1	IF_4
0x14222	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	     10094	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x14229	      0xe99f010000	                           jmp 0x401440d	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x1422e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10097	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_5	CALL_2
0x14232	           0xfb600	                   movzx eax, byte [rax]	     10097	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_5	CALL_2
0x14235	            0x3c20	                            cmp al, 0x20	     10097	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_5	CALL_2
0x14237	     0xf8484010000	                            je 0x4014401	     10097	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_5	CALL_2
0x1423d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10097	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_5	CALL_2
0x14241	           0xfb600	                   movzx eax, byte [rax]	     10097	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_5	CALL_2
0x14244	            0x3c09	                               cmp al, 9	     10097	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_5	CALL_2
0x14246	     0xf8475010000	                            je 0x4014401	     10097	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_5	CALL_2
0x1424c	    0x817db4ff0000	           cmp dword [rbp - 0x4c], 0xff 	     10100	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_6
0x14253	            0x7e0a	                           jle 0x401429f	     10100	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_6
0x14255	      0xb800000000	                              mov eax, 0	     10101	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_6
0x1425a	      0xe9ac030000	                           jmp 0x401464b	     10101	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_6
0x1425f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x14263	           0xfb600	                   movzx eax, byte [rax]	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x14266	           0xfb6c0	                           movzx eax, al	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x14269	          0x83e82d	                           sub eax, 0x2d	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x1426c	          0x83f848	                           cmp eax, 0x48	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x1426f	     0xf8742010000	                            ja 0x40143f7	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x14275	            0x89c0	                            mov eax, eax	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x14277	    0x488b04c50000	                  mov rax, qword [rax*8]	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x1427f	            0xffe0	                                 jmp rax	     10103	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x14281	        0x834db402	                or dword [rbp - 0x4c], 2	     10105	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x14285	      0xe93e010000	                           jmp 0x4014408	     10106	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x1428a	        0x834db404	                or dword [rbp - 0x4c], 4	     10107	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x1428e	      0xe935010000	                           jmp 0x4014408	     10108	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x14293	        0x834db401	                or dword [rbp - 0x4c], 1	     10112	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x14297	      0xe92c010000	                           jmp 0x4014408	     10113	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x1429c	        0x834db420	             or dword [rbp - 0x4c], 0x20	     10114	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x142a0	      0xe923010000	                           jmp 0x4014408	     10115	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x142a5	        0x834db408	                or dword [rbp - 0x4c], 8	     10116	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x142a9	      0xe91a010000	                           jmp 0x4014408	     10117	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x142ae	        0x834db410	             or dword [rbp - 0x4c], 0x10	     10118	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x142b2	      0xe911010000	                           jmp 0x4014408	     10119	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x142b7	    0x814db4800000	             or dword [rbp - 0x4c], 0x80	     10120	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x142be	      0xe905010000	                           jmp 0x4014408	     10121	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x142c3	      0x488345d001	               add qword [rbp - 0x30], 1	     10122	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x142c8	        0x837db400	               cmp dword [rbp - 0x4c], 0	     10123	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_7
0x142cc	            0x750b	                           jne 0x4014319	     10123	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_7
0x142ce	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10123	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_7
0x142d2	           0xfb600	                   movzx eax, byte [rax]	     10123	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_7
0x142d5	            0x84c0	                             test al, al	     10123	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_7
0x142d7	            0x750a	                           jne 0x4014323	     10123	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_7
0x142d9	      0xb800000000	                              mov eax, 0	     10124	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_7
0x142de	      0xe928030000	                           jmp 0x401464b	     10124	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_7
0x142e3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10125	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_3
0x142e7	      0xbe2c000000	                           mov esi, 0x2c	     10125	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_3
0x142ec	          0x4889c7	                            mov rdi, rax	     10125	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_3
0x142ef	      0xe800000000	                          call 0x4014334	     10125	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_3
0x142f4	        0x488945d8	             mov qword [rbp - 0x28], rax	     10125	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_3
0x142f8	      0x48837dd800	               cmp qword [rbp - 0x28], 0	     10126	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_8
0x142fd	            0x751a	                           jne 0x4014359	     10126	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_8
0x142ff	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10127	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_4
0x14303	          0x4889c7	                            mov rdi, rax	     10127	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_4
0x14306	      0xe800000000	                          call 0x401434b	     10127	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_4
0x1430b	          0x4889c2	                            mov rdx, rax	     10127	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_4
0x1430e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10127	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_4
0x14312	          0x4801d0	                            add rax, rdx	     10127	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_4
0x14315	        0x488945d8	             mov qword [rbp - 0x28], rax	     10127	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_4
0x14319	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	     10128	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_5
0x1431d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10128	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_5
0x14321	          0x4829c2	                            sub rdx, rax	     10128	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_5
0x14324	          0x4889d0	                            mov rax, rdx	     10128	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_5
0x14327	            0x89c2	                            mov edx, eax	     10128	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_5
0x14329	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10128	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_5
0x1432d	            0x89d6	                            mov esi, edx	     10128	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_5
0x1432f	          0x4889c7	                            mov rdi, rax	     10128	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_5
0x14332	      0xe800000000	                          call 0x4014377	     10128	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_5
0x14337	          0x8945c8	             mov dword [rbp - 0x38], eax	     10128	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_5
0x1433a	        0x837dc800	               cmp dword [rbp - 0x38], 0	     10129	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_9
0x1433e	            0x750a	                           jne 0x401438a	     10129	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_9
0x14340	      0xb800000000	                              mov eax, 0	     10130	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_9
0x14345	      0xe9c1020000	                           jmp 0x401464b	     10130	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_9
0x1434a	          0x8b45c8	             mov eax, dword [rbp - 0x38]	     10131	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_6
0x1434d	            0x89c7	                            mov edi, eax	     10131	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_6
0x1434f	      0xe800000000	                          call 0x4014394	     10131	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_6
0x14354	          0x8945b4	             mov dword [rbp - 0x4c], eax	     10131	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_6
0x14357	        0x488b45d8	             mov rax, qword [rbp - 0x28]	     10132	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x1435b	        0x4883e801	                              sub rax, 1	     10132	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x1435f	        0x488945d0	             mov qword [rbp - 0x30], rax	     10132	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x14363	        0x837dac0e	            cmp dword [rbp - 0x54], 0xe 	     10134	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_10
0x14367	            0x750f	                           jne 0x40143b8	     10134	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	IF_10
0x14369	          0x8b45c8	             mov eax, dword [rbp - 0x38]	     10135	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_7
0x1436c	            0x89c7	                            mov edi, eax	     10135	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_7
0x1436e	      0xe800000000	                          call 0x40143b3	     10135	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_7
0x14373	          0x8945bc	             mov dword [rbp - 0x44], eax	     10135	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	CALL_7
0x14376	            0xeb4f	                           jmp 0x4014407	     10145	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x14378	        0x837dac2c	           cmp dword [rbp - 0x54], 0x2c 	     10137	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_2	IF_11
0x1437c	            0x750f	                           jne 0x40143cd	     10137	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_2	IF_11
0x1437e	          0x8b45c8	             mov eax, dword [rbp - 0x38]	     10138	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_2	IF_11
0x14381	            0x89c7	                            mov edi, eax	     10138	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_2	IF_11
0x14383	      0xe800000000	                          call 0x40143c8	     10138	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_2	IF_11
0x14388	          0x8945c0	             mov dword [rbp - 0x40], eax	     10138	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_2	IF_11
0x1438b	            0xeb3a	                           jmp 0x4014407	     10145	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x1438d	        0x837dac2d	           cmp dword [rbp - 0x54], 0x2d 	     10139	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_3	IF_12
0x14391	            0x750f	                           jne 0x40143e2	     10139	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_3	IF_12
0x14393	          0x8b45c8	             mov eax, dword [rbp - 0x38]	     10140	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_3	IF_12
0x14396	            0x89c7	                            mov edi, eax	     10140	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_3	IF_12
0x14398	      0xe800000000	                          call 0x40143dd	     10140	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_3	IF_12
0x1439d	          0x8945c4	             mov dword [rbp - 0x3c], eax	     10140	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_3	IF_12
0x143a0	            0xeb25	                           jmp 0x4014407	     10145	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x143a2	        0x837dac0d	            cmp dword [rbp - 0x54], 0xd 	     10142	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_4	IF_13
0x143a6	            0x751f	                           jne 0x4014407	     10142	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_4	IF_13
0x143a8	          0x8b45c8	             mov eax, dword [rbp - 0x38]	     10143	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_4	IF_13
0x143ab	            0x89c7	                            mov edi, eax	     10143	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_4	IF_13
0x143ad	      0xe800000000	                          call 0x40143f2	     10143	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_4	IF_13
0x143b2	          0x8945b8	             mov dword [rbp - 0x48], eax	     10143	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1	ELSE_4	IF_13
0x143b5	            0xeb10	                           jmp 0x4014407	     10145	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x143b7	      0xb800000000	                              mov eax, 0	     10146	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x143bc	      0xe94a020000	                           jmp 0x401464b	     10146	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x143c1	              0x90	                                     nop	     10098	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_5
0x143c2	            0xeb04	                           jmp 0x4014408	     10098	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	IF_5
0x143c4	              0x90	                                     nop	     10111	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x143c5	            0xeb01	                           jmp 0x4014408	     10111	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x143c7	              0x90	                                     nop	     10145	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4	SWITCH_1
0x143c8	      0x488345d001	               add qword [rbp - 0x30], 1	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x143cd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x143d1	           0xfb600	                   movzx eax, byte [rax]	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x143d4	            0x84c0	                             test al, al	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x143d6	            0x740f	                            je 0x4014427	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x143d8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x143dc	           0xfb600	                   movzx eax, byte [rax]	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x143df	            0x3c2c	                            cmp al, 0x2c	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x143e1	     0xf8547feffff	                           jne 0x401426e	     10095	syntax.c	FUNCTION_163	FOR_2	WHILE_1	FOR_4
0x143e7	          0x8b45ac	             mov eax, dword [rbp - 0x54]	     10149	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x143ea	            0x4898	                                    cdqe	     10149	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x143ec	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	     10149	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x143ef	    0x891485000000	                  mov dword [rax*4], edx	     10149	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x143f6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10151	syntax.c	FUNCTION_163	FOR_2	WHILE_1	CALL_11
0x143fa	          0x4889c7	                            mov rdi, rax	     10151	syntax.c	FUNCTION_163	FOR_2	WHILE_1	CALL_11
0x143fd	      0xe800000000	                          call 0x4014442	     10151	syntax.c	FUNCTION_163	FOR_2	WHILE_1	CALL_11
0x14402	        0x488945d0	             mov qword [rbp - 0x30], rax	     10151	syntax.c	FUNCTION_163	FOR_2	WHILE_1	CALL_11
0x14406	        0x488b45d0	             mov rax, qword [rbp - 0x30]	     10081	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x1440a	           0xfb600	                   movzx eax, byte [rax]	     10081	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x1440d	            0x84c0	                             test al, al	     10081	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x1440f	     0xf85bdfdffff	                           jne 0x4014212	     10081	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x14415	            0xeb01	                           jmp 0x4014458	     10081	syntax.c	FUNCTION_163	FOR_2	WHILE_1
0x14417	              0x90	                                     nop	     10079	syntax.c	FUNCTION_163	FOR_2	IF_2
0x14418	        0x8345b001	               add dword [rbp - 0x50], 1	     10072	syntax.c	FUNCTION_163	FOR_2
0x1441c	        0x837db001	               cmp dword [rbp - 0x50], 1	     10072	syntax.c	FUNCTION_163	FOR_2
0x14420	     0xf8e80fdffff	                           jle 0x40141e6	     10072	syntax.c	FUNCTION_163	FOR_2
0x14426	      0xbe1c000000	                           mov esi, 0x1c	     10167	syntax.c	FUNCTION_163	IF_14	CALL_12
0x1442b	      0xbf00000000	                              mov edi, 0	     10167	syntax.c	FUNCTION_163	IF_14	CALL_12
0x14430	      0xe800000000	                          call 0x4014475	     10167	syntax.c	FUNCTION_163	IF_14	CALL_12
0x14435	            0x85c0	                           test eax, eax	     10167	syntax.c	FUNCTION_163	IF_14	CALL_12
0x14437	            0x750a	                           jne 0x4014483	     10167	syntax.c	FUNCTION_163	IF_14	CALL_12
0x14439	      0xb800000000	                              mov eax, 0	     10168	syntax.c	FUNCTION_163	IF_14
0x1443e	      0xe9c8010000	                           jmp 0x401464b	     10168	syntax.c	FUNCTION_163	IF_14
0x14443	    0x8b0500000000	            mov eax, dword [0x04014489] 	     10169	syntax.c	FUNCTION_163
0x14449	          0x8945cc	             mov dword [rbp - 0x34], eax	     10169	syntax.c	FUNCTION_163
0x1444c	        0x837db8ff	cmp dword [rbp - 0x48], 0xffffffffffffffff	     10170	syntax.c	FUNCTION_163	IF_15
0x14450	            0x7579	                           jne 0x401450b	     10170	syntax.c	FUNCTION_163	IF_15
0x14452	    0x488b0d000000	            mov rcx, qword [0x04014499] 	     10174	syntax.c	FUNCTION_163	IF_15	CALL_14
0x14459	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10174	syntax.c	FUNCTION_163	IF_15	CALL_14
0x1445c	          0x4863d0	                         movsxd rdx, eax	     10174	syntax.c	FUNCTION_163	IF_15	CALL_14
0x1445f	          0x4889d0	                            mov rax, rdx	     10174	syntax.c	FUNCTION_163	IF_15	CALL_14
0x14462	        0x48c1e003	                              shl rax, 3	     10174	syntax.c	FUNCTION_163	IF_15	CALL_14
0x14466	          0x4801d0	                            add rax, rdx	     10174	syntax.c	FUNCTION_163	IF_15	CALL_14
0x14469	          0x4801c0	                            add rax, rax	     10174	syntax.c	FUNCTION_163	IF_15	CALL_14
0x1446c	          0x4801d0	                            add rax, rdx	     10174	syntax.c	FUNCTION_163	IF_15	CALL_14
0x1446f	        0x48c1e003	                              shl rax, 3	     10174	syntax.c	FUNCTION_163	IF_15	CALL_14
0x14473	    0x480508100000	                         add rax, 0x1008	     10174	syntax.c	FUNCTION_163	IF_15	CALL_14
0x14479	          0x4801c8	                            add rax, rcx	     10174	syntax.c	FUNCTION_163	IF_15	CALL_14
0x1447c	      0xba98000000	                           mov edx, 0x98	     10174	syntax.c	FUNCTION_163	IF_15	CALL_14
0x14481	      0xbe00000000	                              mov esi, 0	     10174	syntax.c	FUNCTION_163	IF_15	CALL_14
0x14486	          0x4889c7	                            mov rdi, rax	     10174	syntax.c	FUNCTION_163	IF_15	CALL_14
0x14489	      0xe800000000	                          call 0x40144ce	     10174	syntax.c	FUNCTION_163	IF_15	CALL_14
0x1448e	    0x488b0d000000	            mov rcx, qword [0x040144d5] 	     10175	syntax.c	FUNCTION_163	IF_15	CALL_15
0x14495	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10175	syntax.c	FUNCTION_163	IF_15	CALL_15
0x14498	          0x4863d0	                         movsxd rdx, eax	     10175	syntax.c	FUNCTION_163	IF_15	CALL_15
0x1449b	          0x4889d0	                            mov rax, rdx	     10175	syntax.c	FUNCTION_163	IF_15	CALL_15
0x1449e	        0x48c1e003	                              shl rax, 3	     10175	syntax.c	FUNCTION_163	IF_15	CALL_15
0x144a2	          0x4801d0	                            add rax, rdx	     10175	syntax.c	FUNCTION_163	IF_15	CALL_15
0x144a5	          0x4801c0	                            add rax, rax	     10175	syntax.c	FUNCTION_163	IF_15	CALL_15
0x144a8	          0x4801d0	                            add rax, rdx	     10175	syntax.c	FUNCTION_163	IF_15	CALL_15
0x144ab	        0x48c1e003	                              shl rax, 3	     10175	syntax.c	FUNCTION_163	IF_15	CALL_15
0x144af	    0x4805b00a0000	                          add rax, 0xab0	     10175	syntax.c	FUNCTION_163	IF_15	CALL_15
0x144b5	        0x488d1401	                    lea rdx, [rcx + rax]	     10175	syntax.c	FUNCTION_163	IF_15	CALL_15
0x144b9	    0x8b0500000000	            mov eax, dword [0x040144ff] 	     10175	syntax.c	FUNCTION_163	IF_15	CALL_15
0x144bf	          0x894214	             mov dword [rdx + 0x14], eax	     10175	syntax.c	FUNCTION_163	IF_15	CALL_15
0x144c2	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10176	syntax.c	FUNCTION_163	IF_15
0x144c5	          0x83c013	                           add eax, 0x13	     10176	syntax.c	FUNCTION_163	IF_15
0x144c8	          0x8945b8	             mov dword [rbp - 0x48], eax	     10176	syntax.c	FUNCTION_163	IF_15
0x144cb	    0xc745b0000000	               mov dword [rbp - 0x50], 0	     10179	syntax.c	FUNCTION_163	FOR_5
0x144d2	      0xe91c010000	                           jmp 0x4014633	     10179	syntax.c	FUNCTION_163	FOR_5
0x144d7	          0x8b45b0	             mov eax, dword [rbp - 0x50]	     10181	syntax.c	FUNCTION_163	FOR_5	CALL_16
0x144da	          0x8d5001	                      lea edx, [rax + 1]	     10181	syntax.c	FUNCTION_163	FOR_5	CALL_16
0x144dd	        0x488d45e0	                   lea rax, [rbp - 0x20]	     10181	syntax.c	FUNCTION_163	FOR_5	CALL_16
0x144e1	      0xbe00000000	                              mov esi, 0	     10181	syntax.c	FUNCTION_163	FOR_5	CALL_16
0x144e6	          0x4889c7	                            mov rdi, rax	     10181	syntax.c	FUNCTION_163	FOR_5	CALL_16
0x144e9	      0xb800000000	                              mov eax, 0	     10181	syntax.c	FUNCTION_163	FOR_5	CALL_16
0x144ee	      0xe800000000	                          call 0x4014533	     10181	syntax.c	FUNCTION_163	FOR_5	CALL_16
0x144f3	        0x488d45e0	                   lea rax, [rbp - 0x20]	     10182	syntax.c	FUNCTION_163	FOR_5	CALL_17
0x144f7	          0x4889c7	                            mov rdi, rax	     10182	syntax.c	FUNCTION_163	FOR_5	CALL_17
0x144fa	      0xe800000000	                          call 0x401453f	     10182	syntax.c	FUNCTION_163	FOR_5	CALL_17
0x144ff	          0x8945c8	             mov dword [rbp - 0x38], eax	     10182	syntax.c	FUNCTION_163	FOR_5	CALL_17
0x14502	        0x837dc800	               cmp dword [rbp - 0x38], 0	     10183	syntax.c	FUNCTION_163	FOR_5	IF_16
0x14506	            0x7545	                           jne 0x401458d	     10183	syntax.c	FUNCTION_163	FOR_5	IF_16
0x14508	          0x8b45b0	             mov eax, dword [rbp - 0x50]	     10185	syntax.c	FUNCTION_163	FOR_5	IF_16
0x1450b	            0x4898	                                    cdqe	     10185	syntax.c	FUNCTION_163	FOR_5	IF_16
0x1450d	    0xc70485000000	                    mov dword [rax*4], 0	     10185	syntax.c	FUNCTION_163	FOR_5	IF_16
0x14518	          0x8b45b0	             mov eax, dword [rbp - 0x50]	     10187	syntax.c	FUNCTION_163	FOR_5	IF_16
0x1451b	            0x4898	                                    cdqe	     10187	syntax.c	FUNCTION_163	FOR_5	IF_16
0x1451d	    0xc70485000000	                    mov dword [rax*4], 0	     10187	syntax.c	FUNCTION_163	FOR_5	IF_16
0x14528	          0x8b45b0	             mov eax, dword [rbp - 0x50]	     10189	syntax.c	FUNCTION_163	FOR_5	IF_16
0x1452b	            0x4898	                                    cdqe	     10189	syntax.c	FUNCTION_163	FOR_5	IF_16
0x1452d	    0xc70485000000	                    mov dword [rax*4], 0	     10189	syntax.c	FUNCTION_163	FOR_5	IF_16
0x14538	          0x8b45b0	             mov eax, dword [rbp - 0x50]	     10190	syntax.c	FUNCTION_163	FOR_5	IF_16
0x1453b	            0x4898	                                    cdqe	     10190	syntax.c	FUNCTION_163	FOR_5	IF_16
0x1453d	    0xc70485000000	                    mov dword [rax*4], 0	     10190	syntax.c	FUNCTION_163	FOR_5	IF_16
0x14548	      0xe9a2000000	                           jmp 0x401462f	     10190	syntax.c	FUNCTION_163	FOR_5	IF_16
0x1454d	          0x8b45c8	             mov eax, dword [rbp - 0x38]	     10196	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x14550	            0x89c7	                            mov edi, eax	     10196	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x14552	      0xe800000000	                          call 0x4014597	     10196	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x14557	            0x89c2	                            mov edx, eax	     10196	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x14559	          0x8b45b0	             mov eax, dword [rbp - 0x50]	     10196	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x1455c	            0x4898	                                    cdqe	     10196	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x1455e	    0x891485000000	                  mov dword [rax*4], edx	     10196	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_18
0x14565	          0x8b7db0	             mov edi, dword [rbp - 0x50]	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_19
0x14568	          0x8b4dcc	             mov ecx, dword [rbp - 0x34]	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_19
0x1456b	          0x8b55bc	             mov edx, dword [rbp - 0x44]	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_19
0x1456e	          0x8b75b8	             mov esi, dword [rbp - 0x48]	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_19
0x14571	          0x8b45c8	             mov eax, dword [rbp - 0x38]	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_19
0x14574	        0x4883ec08	                              sub rsp, 8	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_19
0x14578	      0x6800000000	                                  push 0	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_19
0x1457d	    0x41b90e000000	                            mov r9d, 0xe	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_19
0x14583	          0x4189f8	                            mov r8d, edi	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_19
0x14586	            0x89c7	                            mov edi, eax	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_19
0x14588	      0xe8e9f1ffff	                call sym.combine_stl_hlt	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_19
0x1458d	        0x4883c410	                           add rsp, 0x10	     10198	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_19
0x14591	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_20
0x14594	          0x8d4809	                      lea ecx, [rax + 9]	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_20
0x14597	          0x8b7db0	             mov edi, dword [rbp - 0x50]	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_20
0x1459a	          0x8b55c0	             mov edx, dword [rbp - 0x40]	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_20
0x1459d	          0x8b75b8	             mov esi, dword [rbp - 0x48]	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_20
0x145a0	          0x8b45c8	             mov eax, dword [rbp - 0x38]	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_20
0x145a3	        0x4883ec08	                              sub rsp, 8	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_20
0x145a7	      0x6800000000	                                  push 0	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_20
0x145ac	    0x41b92c000000	                           mov r9d, 0x2c	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_20
0x145b2	          0x4189f8	                            mov r8d, edi	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_20
0x145b5	            0x89c7	                            mov edi, eax	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_20
0x145b7	      0xe8baf1ffff	                call sym.combine_stl_hlt	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_20
0x145bc	        0x4883c410	                           add rsp, 0x10	     10201	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_20
0x145c0	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_21
0x145c3	          0x8d4812	                   lea ecx, [rax + 0x12]	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_21
0x145c6	          0x8b7db0	             mov edi, dword [rbp - 0x50]	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_21
0x145c9	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_21
0x145cc	          0x8b75b8	             mov esi, dword [rbp - 0x48]	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_21
0x145cf	          0x8b45c8	             mov eax, dword [rbp - 0x38]	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_21
0x145d2	        0x4883ec08	                              sub rsp, 8	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_21
0x145d6	      0x6800000000	                                  push 0	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_21
0x145db	    0x41b92d000000	                           mov r9d, 0x2d	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_21
0x145e1	          0x4189f8	                            mov r8d, edi	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_21
0x145e4	            0x89c7	                            mov edi, eax	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_21
0x145e6	      0xe88bf1ffff	                call sym.combine_stl_hlt	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_21
0x145eb	        0x4883c410	                           add rsp, 0x10	     10203	syntax.c	FUNCTION_163	FOR_5	ELSE_5	CALL_21
0x145ef	        0x8345b001	               add dword [rbp - 0x50], 1	     10179	syntax.c	FUNCTION_163	FOR_5
0x145f3	        0x837db008	               cmp dword [rbp - 0x50], 8	     10179	syntax.c	FUNCTION_163	FOR_5
0x145f7	     0xf8edafeffff	                           jle 0x4014517	     10179	syntax.c	FUNCTION_163	FOR_5
0x145fd	          0x8b45cc	             mov eax, dword [rbp - 0x34]	     10210	syntax.c	FUNCTION_163
0x14600	    0x890500000000	            mov dword [0x04014646], eax 	     10210	syntax.c	FUNCTION_163
0x14606	      0xb801000000	                              mov eax, 1	     10215	syntax.c	FUNCTION_163
0x1460b	        0x488b4df8	                mov rcx, qword [rbp - 8]	     10216	syntax.c	FUNCTION_163
0x1460f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	     10216	syntax.c	FUNCTION_163
0x14618	            0x7405	                            je 0x401465f	     10216	syntax.c	FUNCTION_163
0x1461a	      0xe800000000	                          call 0x401465f	     10216	syntax.c	FUNCTION_163
0x1461f	              0xc9	                                   leave	     10216	syntax.c	FUNCTION_163
0x14620	              0xc3	                                     ret	     10216	syntax.c	FUNCTION_163
syn_cmd_keyword	FOR,3:DO,0:IF,14:SWITCH,0:functions,0:ELSE,3:WHILE,1:CALL,26	273
0x903b	              0x55	                                push rbp	      4894	syntax.c	FUNCTION_79
0x903c	          0x4889e5	                            mov rbp, rsp	      4894	syntax.c	FUNCTION_79
0x903f	              0x53	                                push rbx	      4894	syntax.c	FUNCTION_79
0x9040	    0x4881ec980000	                           sub rsp, 0x98	      4894	syntax.c	FUNCTION_79
0x9047	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      4894	syntax.c	FUNCTION_79
0x904e	    0x89b564ffffff	             mov dword [rbp - 0x9c], esi	      4894	syntax.c	FUNCTION_79
0x9054	    0x64488b042528	                mov rax, qword fs:[0x28]	      4894	syntax.c	FUNCTION_79
0x905d	        0x488945e8	             mov qword [rbp - 0x18], rax	      4894	syntax.c	FUNCTION_79
0x9061	            0x31c0	                            xor eax, eax	      4894	syntax.c	FUNCTION_79
0x9063	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4895	syntax.c	FUNCTION_79
0x906a	          0x488b00	                    mov rax, qword [rax]	      4895	syntax.c	FUNCTION_79
0x906d	        0x488945a8	             mov qword [rbp - 0x58], rax	      4895	syntax.c	FUNCTION_79
0x9071	    0x48c745900000	               mov qword [rbp - 0x70], 0	      4899	syntax.c	FUNCTION_79
0x9079	    0xc78570ffffff	               mov dword [rbp - 0x90], 0	      4904	syntax.c	FUNCTION_79
0x9083	        0x488d5580	                   lea rdx, [rbp - 0x80]	      4906	syntax.c	FUNCTION_79	CALL_1
0x9087	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4906	syntax.c	FUNCTION_79	CALL_1
0x908b	          0x4889d6	                            mov rsi, rdx	      4906	syntax.c	FUNCTION_79	CALL_1
0x908e	          0x4889c7	                            mov rdi, rax	      4906	syntax.c	FUNCTION_79	CALL_1
0x9091	      0xe854f5ffff	                 call sym.get_group_name	      4906	syntax.c	FUNCTION_79	CALL_1
0x9096	        0x48894588	             mov qword [rbp - 0x78], rax	      4906	syntax.c	FUNCTION_79	CALL_1
0x909a	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      4908	syntax.c	FUNCTION_79	IF_1
0x909f	     0xf846b030000	                            je 0x4009450	      4908	syntax.c	FUNCTION_79	IF_1
0x90a5	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4910	syntax.c	FUNCTION_79	IF_1	IF_2
0x90ac	          0x8b4030	            mov eax, dword [rax + 0x30] 	      4910	syntax.c	FUNCTION_79	IF_1	IF_2
0x90af	            0x85c0	                           test eax, eax	      4910	syntax.c	FUNCTION_79	IF_1	IF_2
0x90b1	            0x740c	                            je 0x40090ff	      4910	syntax.c	FUNCTION_79	IF_1	IF_2
0x90b3	    0xc78574ffffff	     mov dword [rbp - 0x8c], 0xffffffff 	      4911	syntax.c	FUNCTION_79	IF_1	IF_2
0x90bd	            0xeb27	                           jmp 0x4009126	      4911	syntax.c	FUNCTION_79	IF_1	IF_2
0x90bf	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x90c3	          0x4889c2	                            mov rdx, rax	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x90c6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x90ca	          0x4829c2	                            sub rdx, rax	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x90cd	          0x4889d0	                            mov rax, rdx	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x90d0	            0x89c2	                            mov edx, eax	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x90d2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x90d6	            0x89d6	                            mov esi, edx	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x90d8	          0x4889c7	                            mov rdi, rax	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x90db	      0xe800000000	                          call 0x4009120	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x90e0	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      4913	syntax.c	FUNCTION_79	IF_1	CALL_2
0x90e6	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      4914	syntax.c	FUNCTION_79	IF_1	IF_3
0x90ed	            0x741a	                            je 0x4009149	      4914	syntax.c	FUNCTION_79	IF_1	IF_3
0x90ef	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4916	syntax.c	FUNCTION_79	IF_1	CALL_4
0x90f3	          0x4889c7	                            mov rdi, rax	      4916	syntax.c	FUNCTION_79	IF_1	CALL_4
0x90f6	      0xe800000000	                          call 0x400913b	      4916	syntax.c	FUNCTION_79	IF_1	CALL_4
0x90fb	          0x83c001	                              add eax, 1	      4916	syntax.c	FUNCTION_79	IF_1	CALL_4
0x90fe	            0x89c7	                            mov edi, eax	      4916	syntax.c	FUNCTION_79	IF_1	CALL_4
0x9100	      0xe800000000	                          call 0x4009145	      4916	syntax.c	FUNCTION_79	IF_1	CALL_4
0x9105	        0x48894590	             mov qword [rbp - 0x70], rax	      4916	syntax.c	FUNCTION_79	IF_1	CALL_4
0x9109	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      4917	syntax.c	FUNCTION_79	IF_1	IF_4
0x910e	     0xf84fc020000	                            je 0x4009450	      4917	syntax.c	FUNCTION_79	IF_1	IF_4
0x9114	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      4919	syntax.c	FUNCTION_79	IF_1	IF_4
0x911b	    0xc745b4010000	               mov dword [rbp - 0x4c], 1	      4920	syntax.c	FUNCTION_79	IF_1	IF_4
0x9122	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      4921	syntax.c	FUNCTION_79	IF_1	IF_4
0x912a	        0xc645c000	                mov byte [rbp - 0x40], 0	      4922	syntax.c	FUNCTION_79	IF_1	IF_4
0x912e	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      4923	syntax.c	FUNCTION_79	IF_1	IF_4
0x9136	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      4924	syntax.c	FUNCTION_79	IF_1	IF_4
0x913e	    0xc78578ffffff	               mov dword [rbp - 0x88], 0	      4931	syntax.c	FUNCTION_79	IF_1	IF_4
0x9148	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4932	syntax.c	FUNCTION_79	IF_1	IF_4
0x914c	        0x48894598	             mov qword [rbp - 0x68], rax	      4932	syntax.c	FUNCTION_79	IF_1	IF_4
0x9150	      0xe9ce000000	                           jmp 0x4009263	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x9155	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4935	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_7
0x915c	          0x8b4830	            mov ecx, dword [rax + 0x30] 	      4935	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_7
0x915f	    0x488d9570ffff	                   lea rdx, [rbp - 0x90]	      4935	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_7
0x9166	        0x488d75b0	                   lea rsi, [rbp - 0x50]	      4935	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_7
0x916a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4935	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_7
0x916e	          0x4889c7	                            mov rdi, rax	      4935	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_7
0x9171	      0xe8daf4ffff	                call sym.get_syn_options	      4935	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_7
0x9176	        0x48894588	             mov qword [rbp - 0x78], rax	      4935	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_7
0x917a	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x917f	     0xf84be000000	                            je 0x4009283	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x9185	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x9189	           0xfb600	                   movzx eax, byte [rax]	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x918c	           0xfb6c0	                           movzx eax, al	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x918f	            0x89c7	                            mov edi, eax	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x9191	      0xe800000000	                          call 0x40091d6	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x9196	            0x85c0	                           test eax, eax	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x9198	     0xf85a5000000	                           jne 0x4009283	      4937	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	IF_5	CALL_8
0x919e	            0xeb3c	                           jmp 0x400921c	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x91a0	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4942	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x91a4	           0xfb600	                   movzx eax, byte [rax]	      4942	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x91a7	            0x3c5c	                            cmp al, 0x5c	      4942	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x91a9	            0x7514	                           jne 0x40091ff	      4942	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x91ab	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4942	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x91af	        0x4883c001	                              add rax, 1	      4942	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x91b3	           0xfb600	                   movzx eax, byte [rax]	      4942	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x91b6	            0x84c0	                             test al, al	      4942	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x91b8	            0x7405	                            je 0x40091ff	      4942	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x91ba	      0x4883458801	               add qword [rbp - 0x78], 1	      4943	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	IF_6
0x91bf	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4944	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1
0x91c3	        0x488d5001	                      lea rdx, [rax + 1]	      4944	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1
0x91c7	        0x48895598	             mov qword [rbp - 0x68], rdx	      4944	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1
0x91cb	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      4944	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1
0x91cf	        0x488d4a01	                      lea rcx, [rdx + 1]	      4944	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1
0x91d3	        0x48894d88	             mov qword [rbp - 0x78], rcx	      4944	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1
0x91d7	           0xfb612	                   movzx edx, byte [rdx]	      4944	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1
0x91da	            0x8810	                      mov byte [rax], dl	      4944	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1
0x91dc	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x91e0	           0xfb600	                   movzx eax, byte [rax]	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x91e3	            0x84c0	                             test al, al	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x91e5	            0x7416	                            je 0x400923d	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x91e7	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x91eb	           0xfb600	                   movzx eax, byte [rax]	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x91ee	            0x3c20	                            cmp al, 0x20	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x91f0	            0x740b	                            je 0x400923d	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x91f2	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x91f6	           0xfb600	                   movzx eax, byte [rax]	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x91f9	            0x3c09	                               cmp al, 9	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x91fb	            0x75a3	                           jne 0x40091e0	      4940	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	WHILE_1	CALL_9
0x91fd	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4946	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1
0x9201	        0x488d5001	                      lea rdx, [rax + 1]	      4946	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1
0x9205	        0x48895598	             mov qword [rbp - 0x68], rdx	      4946	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1
0x9209	          0xc60000	                       mov byte [rax], 0	      4946	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1
0x920c	    0x838578ffffff	               add dword [rbp - 0x88], 1	      4947	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1
0x9213	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x9217	          0x4889c7	                            mov rdi, rax	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x921a	      0xe800000000	                          call 0x400925f	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x921f	        0x48894588	             mov qword [rbp - 0x78], rax	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x9223	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x9228	            0x7419	                            je 0x4009283	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x922a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x922e	           0xfb600	                   movzx eax, byte [rax]	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x9231	           0xfb6c0	                           movzx eax, al	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x9234	            0x89c7	                            mov edi, eax	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x9236	      0xe800000000	                          call 0x400927b	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x923b	            0x85c0	                           test eax, eax	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x923d	     0xf8412ffffff	                            je 0x4009195	      4933	syntax.c	FUNCTION_79	IF_1	IF_4	FOR_1	CALL_6
0x9243	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      4950	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7
0x924a	          0x8b4030	            mov eax, dword [rax + 0x30] 	      4950	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7
0x924d	            0x85c0	                           test eax, eax	      4950	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7
0x924f	     0xf8597010000	                           jne 0x400942c	      4950	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7
0x9255	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      4953	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	CALL_10
0x9259	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      4953	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	CALL_10
0x925f	          0x4889d6	                            mov rsi, rdx	      4953	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	CALL_10
0x9262	            0x89c7	                            mov edi, eax	      4953	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	CALL_10
0x9264	      0xe834faffff	              call sym.syn_incl_toplevel	      4953	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	CALL_10
0x9269	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x926d	        0x488945a0	             mov qword [rbp - 0x60], rax	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x9271	      0xe962010000	                           jmp 0x4009418	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x9276	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4960	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_12
0x927a	      0xbe5b000000	                           mov esi, 0x5b	      4960	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_12
0x927f	          0x4889c7	                            mov rdi, rax	      4960	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_12
0x9282	      0xe800000000	                          call 0x40092c7	      4960	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_12
0x9287	        0x48894598	             mov qword [rbp - 0x68], rax	      4960	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_12
0x928b	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      4962	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_8
0x9290	            0x7407	                            je 0x40092d9	      4962	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_8
0x9292	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4963	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_8
0x9296	          0xc60000	                       mov byte [rax], 0	      4963	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_8
0x9299	    0x448b8570ffff	             mov r8d, dword [rbp - 0x90]	      4964	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_13
0x92a0	        0x488b7dd8	             mov rdi, qword [rbp - 0x28]	      4964	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_13
0x92a4	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	      4964	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_13
0x92a8	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      4964	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_13
0x92ab	    0x8bb574ffffff	             mov esi, dword [rbp - 0x8c]	      4964	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_13
0x92b1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4964	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_13
0x92b5	          0x4589c1	                            mov r9d, r8d	      4964	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_13
0x92b8	          0x4989f8	                             mov r8, rdi	      4964	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_13
0x92bb	          0x4889c7	                            mov rdi, rax	      4964	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_13
0x92be	      0xe8cef0ffff	                    call sym.add_keyword	      4964	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	CALL_13
0x92c3	      0x48837d9800	               cmp qword [rbp - 0x68], 0	      4967	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_9
0x92c8	     0xf84f5000000	                            je 0x4009403	      4967	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_9
0x92ce	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4969	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10
0x92d2	        0x4883c001	                              add rax, 1	      4969	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10
0x92d6	           0xfb600	                   movzx eax, byte [rax]	      4969	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10
0x92d9	            0x84c0	                             test al, al	      4969	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10
0x92db	            0x7521	                           jne 0x400933e	      4969	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10
0x92dd	      0xbf00000000	                              mov edi, 0	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x92e2	      0xe800000000	                          call 0x4009327	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x92e7	          0x4889c2	                            mov rdx, rax	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x92ea	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x92ee	          0x4889c6	                            mov rsi, rax	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x92f1	          0x4889d7	                            mov rdi, rdx	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x92f4	      0xe800000000	                          call 0x4009339	      4971	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10	CALL_15
0x92f9	      0xe9ee000000	                           jmp 0x400942c	      4972	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_10
0x92fe	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4974	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11
0x9302	        0x4883c001	                              add rax, 1	      4974	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11
0x9306	           0xfb600	                   movzx eax, byte [rax]	      4974	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11
0x9309	            0x3c5d	                            cmp al, 0x5d	      4974	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11
0x930b	            0x7549	                           jne 0x4009396	      4974	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11
0x930d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4976	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12
0x9311	        0x4883c002	                              add rax, 2	      4976	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12
0x9315	           0xfb600	                   movzx eax, byte [rax]	      4976	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12
0x9318	            0x84c0	                             test al, al	      4976	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12
0x931a	            0x742c	                            je 0x4009388	      4976	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12
0x931c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x9320	        0x488d5802	                      lea rbx, [rax + 2]	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x9324	      0xbf00000000	                              mov edi, 0	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x9329	      0xe800000000	                          call 0x400936e	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x932e	          0x4889c1	                            mov rcx, rax	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x9331	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x9335	          0x4889da	                            mov rdx, rbx	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x9338	          0x4889c6	                            mov rsi, rax	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x933b	          0x4889cf	                            mov rdi, rcx	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x933e	      0xe800000000	                          call 0x4009383	      4978	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12	CALL_17
0x9343	      0xe9a4000000	                           jmp 0x400942c	      4980	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11	IF_12
0x9348	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4982	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11
0x934c	        0x4883c001	                              add rax, 1	      4982	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11
0x9350	        0x488945a0	             mov qword [rbp - 0x60], rax	      4982	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11
0x9354	            0xeb6e	                           jmp 0x4009404	      4983	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_11
0x9356	    0x8b0500000000	            mov eax, dword [0x0400939c] 	      4986	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x935c	            0x85c0	                           test eax, eax	      4986	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x935e	            0x744b	                            je 0x40093eb	      4986	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x9360	    0x488b05000000	            mov rax, qword [0x040093a7] 	      4988	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x9367	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      4988	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x936b	        0x4883c201	                              add rdx, 1	      4988	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x936f	          0x4889d7	                            mov rdi, rdx	      4988	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x9372	            0xffd0	                                call rax	      4988	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x9374	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      4988	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x937a	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      4990	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13	CALL_18
0x9380	          0x4863d0	                         movsxd rdx, eax	      4990	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13	CALL_18
0x9383	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4990	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13	CALL_18
0x9387	        0x488d4801	                      lea rcx, [rax + 1]	      4990	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13	CALL_18
0x938b	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4990	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13	CALL_18
0x938f	          0x4889ce	                            mov rsi, rcx	      4990	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13	CALL_18
0x9392	          0x4889c7	                            mov rdi, rax	      4990	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13	CALL_18
0x9395	      0xe800000000	                          call 0x40093da	      4990	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13	CALL_18
0x939a	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      4991	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x93a0	            0x4898	                                    cdqe	      4991	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x93a2	        0x48014598	            add qword [rbp - 0x68], rax 	      4991	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x93a6	      0xe9e0feffff	                           jmp 0x40092cb	      4991	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_13
0x93ab	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4996	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	ELSE_2
0x93af	         0xfb65001	               movzx edx, byte [rax + 1]	      4996	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	ELSE_2
0x93b3	        0x488b4598	             mov rax, qword [rbp - 0x68]	      4996	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	ELSE_2
0x93b7	            0x8810	                      mov byte [rax], dl	      4996	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	ELSE_2
0x93b9	      0x4883459801	               add qword [rbp - 0x68], 1	      4997	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	ELSE_2
0x93be	      0xe9c8feffff	                           jmp 0x40092cb	      4999	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3
0x93c3	              0x90	                                     nop	      4968	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	FOR_3	IF_9
0x93c4	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x93c8	          0x4889c7	                            mov rdi, rax	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x93cb	      0xe800000000	                          call 0x4009410	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x93d0	        0x4883c001	                              add rax, 1	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x93d4	        0x480145a0	            add qword [rbp - 0x60], rax 	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x93d8	    0x83ad78ffffff	               sub dword [rbp - 0x88], 1	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x93df	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 0	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x93e6	     0xf898afeffff	                           jns 0x40092b6	      4958	syntax.c	FUNCTION_79	IF_1	IF_4	IF_7	FOR_2	CALL_11
0x93ec	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5003	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_19
0x93f0	          0x4889c7	                            mov rdi, rax	      5003	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_19
0x93f3	      0xe800000000	                          call 0x4009438	      5003	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_19
0x93f8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5004	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_20
0x93fc	          0x4889c7	                            mov rdi, rax	      5004	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_20
0x93ff	      0xe800000000	                          call 0x4009444	      5004	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_20
0x9404	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5005	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_21
0x9408	          0x4889c7	                            mov rdi, rax	      5005	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_21
0x940b	      0xe800000000	                          call 0x4009450	      5005	syntax.c	FUNCTION_79	IF_1	IF_4	CALL_21
0x9410	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      5009	syntax.c	FUNCTION_79	IF_14
0x9415	            0x741c	                            je 0x4009473	      5009	syntax.c	FUNCTION_79	IF_14
0x9417	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5010	syntax.c	FUNCTION_79	CALL_22
0x941b	          0x4889c7	                            mov rdi, rax	      5010	syntax.c	FUNCTION_79	CALL_22
0x941e	      0xe800000000	                          call 0x4009463	      5010	syntax.c	FUNCTION_79	CALL_22
0x9423	          0x4889c2	                            mov rdx, rax	      5010	syntax.c	FUNCTION_79	CALL_22
0x9426	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5010	syntax.c	FUNCTION_79	CALL_22
0x942d	        0x48895008	                mov qword [rax + 8], rdx	      5010	syntax.c	FUNCTION_79	CALL_22
0x9431	            0xeb1c	                           jmp 0x400948f	      5010	syntax.c	FUNCTION_79	CALL_22
0x9433	      0xbf00000000	                              mov edi, 0	      5012	syntax.c	FUNCTION_79	CALL_24
0x9438	      0xe800000000	                          call 0x400947d	      5012	syntax.c	FUNCTION_79	CALL_24
0x943d	          0x4889c2	                            mov rdx, rax	      5012	syntax.c	FUNCTION_79	CALL_24
0x9440	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5012	syntax.c	FUNCTION_79	CALL_24
0x9444	          0x4889c6	                            mov rsi, rax	      5012	syntax.c	FUNCTION_79	CALL_24
0x9447	          0x4889d7	                            mov rdi, rdx	      5012	syntax.c	FUNCTION_79	CALL_24
0x944a	      0xe800000000	                          call 0x400948f	      5012	syntax.c	FUNCTION_79	CALL_24
0x944f	      0xbf23000000	                           mov edi, 0x23	      5014	syntax.c	FUNCTION_79	CALL_25
0x9454	      0xe800000000	                          call 0x4009499	      5014	syntax.c	FUNCTION_79	CALL_25
0x9459	    0x488b05000000	            mov rax, qword [0x040094a0] 	      5015	syntax.c	FUNCTION_79	CALL_26
0x9460	        0x488b4010	            mov rax, qword [rax + 0x10] 	      5015	syntax.c	FUNCTION_79	CALL_26
0x9464	          0x4889c7	                            mov rdi, rax	      5015	syntax.c	FUNCTION_79	CALL_26
0x9467	      0xe800000000	                          call 0x40094ac	      5015	syntax.c	FUNCTION_79	CALL_26
0x946c	              0x90	                                     nop	      5016	syntax.c	FUNCTION_79
0x946d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5016	syntax.c	FUNCTION_79
0x9471	    0x644833042528	                xor rax, qword fs:[0x28]	      5016	syntax.c	FUNCTION_79
0x947a	            0x7405	                            je 0x40094c1	      5016	syntax.c	FUNCTION_79
0x947c	      0xe800000000	                          call 0x40094c1	      5016	syntax.c	FUNCTION_79
0x9481	    0x4881c4980000	                           add rsp, 0x98	      5016	syntax.c	FUNCTION_79
0x9488	              0x5b	                                 pop rbx	      5016	syntax.c	FUNCTION_79
0x9489	              0x5d	                                 pop rbp	      5016	syntax.c	FUNCTION_79
0x948a	              0xc3	                                     ret	      5016	syntax.c	FUNCTION_79
syn_namen2id	FOR,0:DO,0:IF,1:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,3	24
0x12eed	              0x55	                                push rbp	      9692	syntax.c	FUNCTION_152
0x12eee	          0x4889e5	                            mov rbp, rsp	      9692	syntax.c	FUNCTION_152
0x12ef1	        0x4883ec20	                           sub rsp, 0x20	      9692	syntax.c	FUNCTION_152
0x12ef5	        0x48897de8	             mov qword [rbp - 0x18], rdi	      9692	syntax.c	FUNCTION_152
0x12ef9	          0x8975e4	             mov dword [rbp - 0x1c], esi	      9692	syntax.c	FUNCTION_152
0x12efc	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      9694	syntax.c	FUNCTION_152
0x12f03	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      9696	syntax.c	FUNCTION_152	CALL_1
0x12f06	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      9696	syntax.c	FUNCTION_152	CALL_1
0x12f0a	            0x89d6	                            mov esi, edx	      9696	syntax.c	FUNCTION_152	CALL_1
0x12f0c	          0x4889c7	                            mov rdi, rax	      9696	syntax.c	FUNCTION_152	CALL_1
0x12f0f	      0xe800000000	                          call 0x4012f54	      9696	syntax.c	FUNCTION_152	CALL_1
0x12f14	        0x488945f8	                mov qword [rbp - 8], rax	      9696	syntax.c	FUNCTION_152	CALL_1
0x12f18	      0x48837df800	                  cmp qword [rbp - 8], 0	      9697	syntax.c	FUNCTION_152	IF_1
0x12f1d	            0x741b	                            je 0x4012f7a	      9697	syntax.c	FUNCTION_152	IF_1
0x12f1f	        0x488b45f8	                mov rax, qword [rbp - 8]	      9699	syntax.c	FUNCTION_152	IF_1	CALL_2
0x12f23	          0x4889c7	                            mov rdi, rax	      9699	syntax.c	FUNCTION_152	IF_1	CALL_2
0x12f26	      0xe800000000	                          call 0x4012f6b	      9699	syntax.c	FUNCTION_152	IF_1	CALL_2
0x12f2b	          0x8945f4	              mov dword [rbp - 0xc], eax	      9699	syntax.c	FUNCTION_152	IF_1	CALL_2
0x12f2e	        0x488b45f8	                mov rax, qword [rbp - 8]	      9700	syntax.c	FUNCTION_152	IF_1	CALL_3
0x12f32	          0x4889c7	                            mov rdi, rax	      9700	syntax.c	FUNCTION_152	IF_1	CALL_3
0x12f35	      0xe800000000	                          call 0x4012f7a	      9700	syntax.c	FUNCTION_152	IF_1	CALL_3
0x12f3a	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      9702	syntax.c	FUNCTION_152
0x12f3d	              0xc9	                                   leave	      9703	syntax.c	FUNCTION_152
0x12f3e	              0xc3	                                     ret	      9703	syntax.c	FUNCTION_152
syn_cmd_on	FOR,0:DO,0:IF,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,1	12
0x6d14	              0x55	                                push rbp	      3865	syntax.c	FUNCTION_57
0x6d15	          0x4889e5	                            mov rbp, rsp	      3865	syntax.c	FUNCTION_57
0x6d18	        0x4883ec10	                           sub rsp, 0x10	      3865	syntax.c	FUNCTION_57
0x6d1c	        0x48897df8	                mov qword [rbp - 8], rdi	      3865	syntax.c	FUNCTION_57
0x6d20	          0x8975f4	              mov dword [rbp - 0xc], esi	      3865	syntax.c	FUNCTION_57
0x6d23	        0x488b45f8	                mov rax, qword [rbp - 8]	      3866	syntax.c	FUNCTION_57	CALL_1
0x6d27	      0xbe00000000	                              mov esi, 0	      3866	syntax.c	FUNCTION_57	CALL_1
0x6d2c	          0x4889c7	                            mov rdi, rax	      3866	syntax.c	FUNCTION_57	CALL_1
0x6d2f	      0xe8e9000000	                  call sym.syn_cmd_onoff	      3866	syntax.c	FUNCTION_57	CALL_1
0x6d34	              0x90	                                     nop	      3867	syntax.c	FUNCTION_57
0x6d35	              0xc9	                                   leave	      3867	syntax.c	FUNCTION_57
0x6d36	              0xc3	                                     ret	      3867	syntax.c	FUNCTION_57
syn_stack_alloc	FOR,1:DO,0:IF,10:SWITCH,0:functions,0:ELSE,3:WHILE,2:CALL,3	209
0x1234	              0x55	                                push rbp	      1229	syntax.c	FUNCTION_13
0x1235	          0x4889e5	                            mov rbp, rsp	      1229	syntax.c	FUNCTION_13
0x1238	        0x4883ec20	                           sub rsp, 0x20	      1229	syntax.c	FUNCTION_13
0x123c	    0x488b05000000	            mov rax, qword [0x04001283] 	      1234	syntax.c	FUNCTION_13
0x1243	          0x488b00	                    mov rax, qword [rax]	      1234	syntax.c	FUNCTION_13
0x1246	        0x488d500f	                    lea rdx, [rax + 0xf]	      1234	syntax.c	FUNCTION_13
0x124a	          0x4885c0	                           test rax, rax	      1234	syntax.c	FUNCTION_13
0x124d	        0x480f48c2	                          cmovs rax, rdx	      1234	syntax.c	FUNCTION_13
0x1251	        0x48c1f804	                              sar rax, 4	      1234	syntax.c	FUNCTION_13
0x1255	          0x4889c2	                            mov rdx, rax	      1234	syntax.c	FUNCTION_13
0x1258	    0x488b05000000	            mov rax, qword [0x0400129f] 	      1234	syntax.c	FUNCTION_13
0x125f	          0x4801c0	                            add rax, rax	      1234	syntax.c	FUNCTION_13
0x1262	          0x4801d0	                            add rax, rdx	      1234	syntax.c	FUNCTION_13
0x1265	        0x488945e0	             mov qword [rbp - 0x20], rax	      1234	syntax.c	FUNCTION_13
0x1269	    0x48817de09500	           cmp qword [rbp - 0x20], 0x95 	      1235	syntax.c	FUNCTION_13	IF_1
0x1271	            0x7f0a	                            jg 0x40012bd	      1235	syntax.c	FUNCTION_13	IF_1
0x1273	    0x48c745e09600	           mov qword [rbp - 0x20], 0x96 	      1236	syntax.c	FUNCTION_13	IF_1
0x127b	            0xeb12	                           jmp 0x40012cf	      1236	syntax.c	FUNCTION_13	IF_1
0x127d	    0x48817de0e803	          cmp qword [rbp - 0x20], 0x3e8 	      1237	syntax.c	FUNCTION_13	ELSE_1	IF_2
0x1285	            0x7e08	                           jle 0x40012cf	      1237	syntax.c	FUNCTION_13	ELSE_1	IF_2
0x1287	    0x48c745e0e803	          mov qword [rbp - 0x20], 0x3e8 	      1238	syntax.c	FUNCTION_13	ELSE_1	IF_2
0x128f	    0x488b05000000	            mov rax, qword [0x040012d6] 	      1239	syntax.c	FUNCTION_13	IF_3
0x1296	    0x8b8018030000	           mov eax, dword [rax + 0x318] 	      1239	syntax.c	FUNCTION_13	IF_3
0x129c	            0x4898	                                    cdqe	      1239	syntax.c	FUNCTION_13	IF_3
0x129e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1239	syntax.c	FUNCTION_13	IF_3
0x12a2	          0x4801d2	                            add rdx, rdx	      1239	syntax.c	FUNCTION_13	IF_3
0x12a5	          0x4839d0	                            cmp rax, rdx	      1239	syntax.c	FUNCTION_13	IF_3
0x12a8	            0x7f19	                            jg 0x4001303	      1239	syntax.c	FUNCTION_13	IF_3
0x12aa	    0x488b05000000	            mov rax, qword [0x040012f1] 	      1239	syntax.c	FUNCTION_13	IF_3
0x12b1	    0x8b8018030000	           mov eax, dword [rax + 0x318] 	      1239	syntax.c	FUNCTION_13	IF_3
0x12b7	            0x4898	                                    cdqe	      1239	syntax.c	FUNCTION_13	IF_3
0x12b9	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      1239	syntax.c	FUNCTION_13	IF_3
0x12bd	     0xf8d03030000	                           jge 0x4001606	      1239	syntax.c	FUNCTION_13	IF_3
0x12c3	    0x488b05000000	            mov rax, qword [0x0400130a] 	      1242	syntax.c	FUNCTION_13	IF_3
0x12ca	          0x488b00	                    mov rax, qword [rax]	      1242	syntax.c	FUNCTION_13	IF_3
0x12cd	        0x488945e0	             mov qword [rbp - 0x20], rax	      1242	syntax.c	FUNCTION_13	IF_3
0x12d1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1243	syntax.c	FUNCTION_13	IF_3
0x12d5	          0x4889c2	                            mov rdx, rax	      1243	syntax.c	FUNCTION_13	IF_3
0x12d8	        0x48c1ea3f	                           shr rdx, 0x3f	      1243	syntax.c	FUNCTION_13	IF_3
0x12dc	          0x4801d0	                            add rax, rdx	      1243	syntax.c	FUNCTION_13	IF_3
0x12df	          0x48d1f8	                              sar rax, 1	      1243	syntax.c	FUNCTION_13	IF_3
0x12e2	          0x4889c2	                            mov rdx, rax	      1243	syntax.c	FUNCTION_13	IF_3
0x12e5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1243	syntax.c	FUNCTION_13	IF_3
0x12e9	          0x4801d0	                            add rax, rdx	      1243	syntax.c	FUNCTION_13	IF_3
0x12ec	        0x488d500f	                    lea rdx, [rax + 0xf]	      1243	syntax.c	FUNCTION_13	IF_3
0x12f0	          0x4885c0	                           test rax, rax	      1243	syntax.c	FUNCTION_13	IF_3
0x12f3	        0x480f48c2	                          cmovs rax, rdx	      1243	syntax.c	FUNCTION_13	IF_3
0x12f7	        0x48c1f804	                              sar rax, 4	      1243	syntax.c	FUNCTION_13	IF_3
0x12fb	          0x4889c2	                            mov rdx, rax	      1243	syntax.c	FUNCTION_13	IF_3
0x12fe	    0x488b05000000	            mov rax, qword [0x04001345] 	      1243	syntax.c	FUNCTION_13	IF_3
0x1305	          0x4801c0	                            add rax, rax	      1243	syntax.c	FUNCTION_13	IF_3
0x1308	          0x4801d0	                            add rax, rdx	      1243	syntax.c	FUNCTION_13	IF_3
0x130b	        0x488945e0	             mov qword [rbp - 0x20], rax	      1243	syntax.c	FUNCTION_13	IF_3
0x130f	    0x48817de09500	           cmp qword [rbp - 0x20], 0x95 	      1244	syntax.c	FUNCTION_13	IF_3	IF_4
0x1317	            0x7f0a	                            jg 0x4001363	      1244	syntax.c	FUNCTION_13	IF_3	IF_4
0x1319	    0x48c745e09600	           mov qword [rbp - 0x20], 0x96 	      1245	syntax.c	FUNCTION_13	IF_3	IF_4
0x1321	            0xeb12	                           jmp 0x4001375	      1245	syntax.c	FUNCTION_13	IF_3	IF_4
0x1323	    0x48817de0e803	          cmp qword [rbp - 0x20], 0x3e8 	      1246	syntax.c	FUNCTION_13	IF_3	ELSE_2	IF_5
0x132b	            0x7e08	                           jle 0x4001375	      1246	syntax.c	FUNCTION_13	IF_3	ELSE_2	IF_5
0x132d	    0x48c745e0e803	          mov qword [rbp - 0x20], 0x3e8 	      1247	syntax.c	FUNCTION_13	IF_3	ELSE_2	IF_5
0x1335	    0x488b05000000	            mov rax, qword [0x0400137c] 	      1249	syntax.c	FUNCTION_13	IF_3	IF_6
0x133c	    0x488b80100300	           mov rax, qword [rax + 0x310] 	      1249	syntax.c	FUNCTION_13	IF_3	IF_6
0x1343	          0x4885c0	                           test rax, rax	      1249	syntax.c	FUNCTION_13	IF_3	IF_6
0x1346	     0xf8483000000	                            je 0x400140f	      1249	syntax.c	FUNCTION_13	IF_3	IF_6
0x134c	              0x90	                                     nop	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x134d	    0x488b05000000	            mov rax, qword [0x04001394] 	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x1354	    0x8b9018030000	           mov edx, dword [rax + 0x318] 	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x135a	    0x488b05000000	            mov rax, qword [0x040013a1] 	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x1361	    0x8b8030030000	           mov eax, dword [rax + 0x330] 	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x1367	            0x29c2	                            sub edx, eax	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x1369	            0x89d0	                            mov eax, edx	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x136b	          0x83c002	                              add eax, 2	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x136e	            0x4898	                                    cdqe	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x1370	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x1374	            0x7e09	                           jle 0x40013bf	      1253	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1
0x1376	      0xe8ba040000	              call sym.syn_stack_cleanup	      1254	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1	CALL_1
0x137b	            0x85c0	                           test eax, eax	      1254	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1	CALL_1
0x137d	            0x75ce	                           jne 0x400138d	      1254	syntax.c	FUNCTION_13	IF_3	IF_6	WHILE_1	CALL_1
0x137f	    0x488b05000000	            mov rax, qword [0x040013c6] 	      1256	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x1386	    0x8b9018030000	           mov edx, dword [rax + 0x318] 	      1256	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x138c	    0x488b05000000	            mov rax, qword [0x040013d3] 	      1256	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x1393	    0x8b8030030000	           mov eax, dword [rax + 0x330] 	      1256	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x1399	            0x29c2	                            sub edx, eax	      1256	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x139b	            0x89d0	                            mov eax, edx	      1256	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x139d	          0x83c002	                              add eax, 2	      1256	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x13a0	            0x4898	                                    cdqe	      1256	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x13a2	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      1256	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x13a6	            0x7e27	                           jle 0x400140f	      1256	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x13a8	    0x488b05000000	            mov rax, qword [0x040013ef] 	      1257	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x13af	    0x8b9018030000	           mov edx, dword [rax + 0x318] 	      1257	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x13b5	    0x488b05000000	            mov rax, qword [0x040013fc] 	      1257	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x13bc	    0x8b8030030000	           mov eax, dword [rax + 0x330] 	      1257	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x13c2	            0x29c2	                            sub edx, eax	      1257	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x13c4	            0x89d0	                            mov eax, edx	      1257	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x13c6	          0x83c002	                              add eax, 2	      1257	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x13c9	            0x4898	                                    cdqe	      1257	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x13cb	        0x488945e0	             mov qword [rbp - 0x20], rax	      1257	syntax.c	FUNCTION_13	IF_3	IF_6	IF_7
0x13cf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1260	syntax.c	FUNCTION_13	IF_3	CALL_2
0x13d3	    0x69c0d8000000	                     imul eax, eax, 0xd8	      1260	syntax.c	FUNCTION_13	IF_3	CALL_2
0x13d9	            0x89c7	                            mov edi, eax	      1260	syntax.c	FUNCTION_13	IF_3	CALL_2
0x13db	      0xe800000000	                          call 0x4001420	      1260	syntax.c	FUNCTION_13	IF_3	CALL_2
0x13e0	        0x488945f8	                mov qword [rbp - 8], rax	      1260	syntax.c	FUNCTION_13	IF_3	CALL_2
0x13e4	      0x48837df800	                  cmp qword [rbp - 8], 0	      1261	syntax.c	FUNCTION_13	IF_3	IF_8
0x13e9	     0xf84d6010000	                            je 0x4001605	      1261	syntax.c	FUNCTION_13	IF_3	IF_8
0x13ef	        0x488b45f8	                mov rax, qword [rbp - 8]	      1264	syntax.c	FUNCTION_13	IF_3
0x13f3	    0x482dd8000000	                           sub rax, 0xd8	      1264	syntax.c	FUNCTION_13	IF_3
0x13f9	        0x488945e8	             mov qword [rbp - 0x18], rax	      1264	syntax.c	FUNCTION_13	IF_3
0x13fd	    0x488b05000000	            mov rax, qword [0x04001444] 	      1265	syntax.c	FUNCTION_13	IF_3	IF_9
0x1404	    0x488b80100300	           mov rax, qword [rax + 0x310] 	      1265	syntax.c	FUNCTION_13	IF_3	IF_9
0x140b	          0x4885c0	                           test rax, rax	      1265	syntax.c	FUNCTION_13	IF_3	IF_9
0x140e	            0x7459	                            je 0x40014a9	      1265	syntax.c	FUNCTION_13	IF_3	IF_9
0x1410	    0x488b05000000	            mov rax, qword [0x04001457] 	      1268	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x1417	    0x488b80200300	           mov rax, qword [rax + 0x320] 	      1268	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x141e	        0x488945f0	             mov qword [rbp - 0x10], rax	      1268	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x1422	            0xeb3e	                           jmp 0x40014a2	      1268	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x1424	    0x488145e8d800	            add qword [rbp - 0x18], 0xd8	      1271	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x142c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1272	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x1430	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1272	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x1434	          0x4889c6	                            mov rsi, rax	      1272	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x1437	      0xb81b000000	                           mov eax, 0x1b	      1272	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x143c	          0x4889d7	                            mov rdi, rdx	      1272	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x143f	          0x4889c1	                            mov rcx, rax	      1272	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x1442	          0xf348a5	  rep movsq qword [rdi], qword ptr [rsi]	      1272	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x1445	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1273	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x1449	    0x488d90d80000	                   lea rdx, [rax + 0xd8]	      1273	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x1450	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1273	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x1454	          0x488910	                    mov qword [rax], rdx	      1273	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x1457	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1269	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x145b	          0x488b00	                    mov rax, qword [rax]	      1269	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x145e	        0x488945f0	             mov qword [rbp - 0x10], rax	      1269	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x1462	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1268	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x1467	            0x75bb	                           jne 0x4001464	      1268	syntax.c	FUNCTION_13	IF_3	IF_9	FOR_1
0x1469	        0x488b45f8	                mov rax, qword [rbp - 8]	      1276	syntax.c	FUNCTION_13	IF_3	IF_10
0x146d	    0x482dd8000000	                           sub rax, 0xd8	      1276	syntax.c	FUNCTION_13	IF_3	IF_10
0x1473	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1276	syntax.c	FUNCTION_13	IF_3	IF_10
0x1477	            0x745c	                            je 0x4001515	      1276	syntax.c	FUNCTION_13	IF_3	IF_10
0x1479	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1278	syntax.c	FUNCTION_13	IF_3	IF_10
0x147d	    0x48c700000000	                      mov qword [rax], 0	      1278	syntax.c	FUNCTION_13	IF_3	IF_10
0x1484	    0x488b05000000	            mov rax, qword [0x040014cb] 	      1279	syntax.c	FUNCTION_13	IF_3	IF_10
0x148b	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1279	syntax.c	FUNCTION_13	IF_3	IF_10
0x148f	    0x488990200300	            mov qword [rax + 0x320], rdx	      1279	syntax.c	FUNCTION_13	IF_3	IF_10
0x1496	    0x488b05000000	            mov rax, qword [0x040014dd] 	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x149d	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x14a1	            0x89d6	                            mov esi, edx	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x14a3	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x14a7	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x14ab	          0x4829d1	                            sub rcx, rdx	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x14ae	          0x4889ca	                            mov rdx, rcx	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x14b1	          0x4889d1	                            mov rcx, rdx	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x14b4	        0x48c1f903	                              sar rcx, 3	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x14b8	    0x48ba13da4b68	          movabs rdx, 0x84bda12f684bda13	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x14c2	        0x480fafd1	                           imul rdx, rcx	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x14c6	            0x29d6	                            sub esi, edx	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x14c8	            0x89f2	                            mov edx, esi	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x14ca	          0x83ea01	                              sub edx, 1	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x14cd	    0x899030030000	            mov dword [rax + 0x330], edx	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x14d3	            0xeb23	                           jmp 0x4001538	      1280	syntax.c	FUNCTION_13	IF_3	IF_10
0x14d5	    0x488b05000000	            mov rax, qword [0x0400151c] 	      1284	syntax.c	FUNCTION_13	IF_3	ELSE_3
0x14dc	    0x48c780200300	              mov qword [rax + 0x320], 0	      1284	syntax.c	FUNCTION_13	IF_3	ELSE_3
0x14e7	    0x488b05000000	            mov rax, qword [0x0400152e] 	      1285	syntax.c	FUNCTION_13	IF_3	ELSE_3
0x14ee	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1285	syntax.c	FUNCTION_13	IF_3	ELSE_3
0x14f2	    0x899030030000	            mov dword [rax + 0x330], edx	      1285	syntax.c	FUNCTION_13	IF_3	ELSE_3
0x14f8	    0x488b05000000	            mov rax, qword [0x0400153f] 	      1289	syntax.c	FUNCTION_13	IF_3
0x14ff	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1289	syntax.c	FUNCTION_13	IF_3
0x1503	    0x4881c2d80000	                           add rdx, 0xd8	      1289	syntax.c	FUNCTION_13	IF_3
0x150a	    0x488990280300	            mov qword [rax + 0x328], rdx	      1289	syntax.c	FUNCTION_13	IF_3
0x1511	            0xeb12	                           jmp 0x4001565	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x1513	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1291	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x1517	    0x488d90d80000	                   lea rdx, [rax + 0xd8]	      1291	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x151e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1291	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x1522	          0x488910	                    mov qword [rax], rdx	      1291	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x1525	    0x488145e8d800	            add qword [rbp - 0x18], 0xd8	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x152d	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x1531	          0x4889d0	                            mov rax, rdx	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x1534	          0x4801c0	                            add rax, rax	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x1537	          0x4801d0	                            add rax, rdx	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x153a	    0x488d14c50000	                        lea rdx, [rax*8]	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x1542	          0x4801d0	                            add rax, rdx	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x1545	        0x48c1e003	                              shl rax, 3	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x1549	          0x4889c2	                            mov rdx, rax	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x154c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x1550	          0x4801d0	                            add rax, rdx	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x1553	        0x483945e8	            cmp qword [rbp - 0x18], rax 	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x1557	            0x72ba	                            jb 0x4001553	      1290	syntax.c	FUNCTION_13	IF_3	WHILE_2
0x1559	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1292	syntax.c	FUNCTION_13	IF_3
0x155d	          0x4889d0	                            mov rax, rdx	      1292	syntax.c	FUNCTION_13	IF_3
0x1560	          0x4801c0	                            add rax, rax	      1292	syntax.c	FUNCTION_13	IF_3
0x1563	          0x4801d0	                            add rax, rdx	      1292	syntax.c	FUNCTION_13	IF_3
0x1566	    0x488d14c50000	                        lea rdx, [rax*8]	      1292	syntax.c	FUNCTION_13	IF_3
0x156e	          0x4801d0	                            add rax, rdx	      1292	syntax.c	FUNCTION_13	IF_3
0x1571	        0x48c1e003	                              shl rax, 3	      1292	syntax.c	FUNCTION_13	IF_3
0x1575	    0x488d9028ffff	                   lea rdx, [rax - 0xd8]	      1292	syntax.c	FUNCTION_13	IF_3
0x157c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1292	syntax.c	FUNCTION_13	IF_3
0x1580	          0x4801d0	                            add rax, rdx	      1292	syntax.c	FUNCTION_13	IF_3
0x1583	    0x48c700000000	                      mov qword [rax], 0	      1292	syntax.c	FUNCTION_13	IF_3
0x158a	    0x488b05000000	            mov rax, qword [0x040015d1] 	      1294	syntax.c	FUNCTION_13	IF_3	CALL_3
0x1591	    0x488b80100300	           mov rax, qword [rax + 0x310] 	      1294	syntax.c	FUNCTION_13	IF_3	CALL_3
0x1598	          0x4889c7	                            mov rdi, rax	      1294	syntax.c	FUNCTION_13	IF_3	CALL_3
0x159b	      0xe800000000	                          call 0x40015e0	      1294	syntax.c	FUNCTION_13	IF_3	CALL_3
0x15a0	    0x488b05000000	            mov rax, qword [0x040015e7] 	      1295	syntax.c	FUNCTION_13	IF_3
0x15a7	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1295	syntax.c	FUNCTION_13	IF_3
0x15ab	    0x488990100300	            mov qword [rax + 0x310], rdx	      1295	syntax.c	FUNCTION_13	IF_3
0x15b2	    0x488b05000000	            mov rax, qword [0x040015f9] 	      1296	syntax.c	FUNCTION_13	IF_3
0x15b9	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1296	syntax.c	FUNCTION_13	IF_3
0x15bd	    0x899018030000	            mov dword [rax + 0x318], edx	      1296	syntax.c	FUNCTION_13	IF_3
0x15c3	            0xeb01	                           jmp 0x4001606	      1296	syntax.c	FUNCTION_13	IF_3
0x15c5	              0x90	                                     nop	      1262	syntax.c	FUNCTION_13	IF_3	IF_8
0x15c6	              0xc9	                                   leave	      1298	syntax.c	FUNCTION_13
0x15c7	              0xc3	                                     ret	      1298	syntax.c	FUNCTION_13
syn_get_sub_char	FOR,0:DO,0:IF,0:SWITCH,0:functions,0:ELSE,0:WHILE,0:CALL,0	5
0xcc40	              0x55	                                push rbp	      6609	syntax.c	FUNCTION_104
0xcc41	          0x4889e5	                            mov rbp, rsp	      6609	syntax.c	FUNCTION_104
0xcc44	    0x8b0500000000	            mov eax, dword [0x0400cc8a] 	      6610	syntax.c	FUNCTION_104
0xcc4a	              0x5d	                                 pop rbp	      6611	syntax.c	FUNCTION_104
0xcc4b	              0xc3	                                     ret	      6611	syntax.c	FUNCTION_104
syn_add_end_off	FOR,0:DO,0:IF,5:SWITCH,0:functions,0:ELSE,3:WHILE,2:CALL,3	130
0x5494	              0x55	                                push rbp	      3204	syntax.c	FUNCTION_40
0x5495	          0x4889e5	                            mov rbp, rsp	      3204	syntax.c	FUNCTION_40
0x5498	        0x4883ec40	                           sub rsp, 0x40	      3204	syntax.c	FUNCTION_40
0x549c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3204	syntax.c	FUNCTION_40
0x54a0	        0x488975d0	             mov qword [rbp - 0x30], rsi	      3204	syntax.c	FUNCTION_40
0x54a4	        0x488955c8	             mov qword [rbp - 0x38], rdx	      3204	syntax.c	FUNCTION_40
0x54a8	          0x894dc4	             mov dword [rbp - 0x3c], ecx	      3204	syntax.c	FUNCTION_40
0x54ab	        0x448945c0	             mov dword [rbp - 0x40], r8d	      3204	syntax.c	FUNCTION_40
0x54af	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3210	syntax.c	FUNCTION_40	IF_1
0x54b3	         0xfb74004	               movzx eax, word [rax + 4]	      3210	syntax.c	FUNCTION_40	IF_1
0x54b7	           0xfbfd0	                           movsx edx, ax	      3210	syntax.c	FUNCTION_40	IF_1
0x54ba	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      3210	syntax.c	FUNCTION_40	IF_1
0x54bd	            0x89c1	                            mov ecx, eax	      3210	syntax.c	FUNCTION_40	IF_1
0x54bf	            0xd3fa	                             sar edx, cl	      3210	syntax.c	FUNCTION_40	IF_1
0x54c1	            0x89d0	                            mov eax, edx	      3210	syntax.c	FUNCTION_40	IF_1
0x54c3	          0x83e001	                              and eax, 1	      3210	syntax.c	FUNCTION_40	IF_1
0x54c6	            0x85c0	                           test eax, eax	      3210	syntax.c	FUNCTION_40	IF_1
0x54c8	            0x7431	                            je 0x400553b	      3210	syntax.c	FUNCTION_40	IF_1
0x54ca	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3212	syntax.c	FUNCTION_40	IF_1
0x54ce	        0x488b5008	                mov rdx, qword [rax + 8]	      3212	syntax.c	FUNCTION_40	IF_1
0x54d2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3212	syntax.c	FUNCTION_40	IF_1
0x54d6	          0x488910	                    mov qword [rax], rdx	      3212	syntax.c	FUNCTION_40	IF_1
0x54d9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3213	syntax.c	FUNCTION_40	IF_1
0x54dd	          0x8b4010	            mov eax, dword [rax + 0x10] 	      3213	syntax.c	FUNCTION_40	IF_1
0x54e0	          0x8945e8	             mov dword [rbp - 0x18], eax	      3213	syntax.c	FUNCTION_40	IF_1
0x54e3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3214	syntax.c	FUNCTION_40	IF_1
0x54e7	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      3214	syntax.c	FUNCTION_40	IF_1
0x54ea	          0x4863d2	                         movsxd rdx, edx	      3214	syntax.c	FUNCTION_40	IF_1
0x54ed	        0x8b549008	       mov edx, dword [rax + rdx*4 + 8] 	      3214	syntax.c	FUNCTION_40	IF_1
0x54f1	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      3214	syntax.c	FUNCTION_40	IF_1
0x54f4	             0x1d0	                            add eax, edx	      3214	syntax.c	FUNCTION_40	IF_1
0x54f6	          0x8945ec	             mov dword [rbp - 0x14], eax	      3214	syntax.c	FUNCTION_40	IF_1
0x54f9	            0xeb30	                           jmp 0x400556b	      3214	syntax.c	FUNCTION_40	IF_1
0x54fb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3218	syntax.c	FUNCTION_40	ELSE_1
0x54ff	    0x488b90a80000	            mov rdx, qword [rax + 0xa8] 	      3218	syntax.c	FUNCTION_40	ELSE_1
0x5506	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3218	syntax.c	FUNCTION_40	ELSE_1
0x550a	          0x488910	                    mov qword [rax], rdx	      3218	syntax.c	FUNCTION_40	ELSE_1
0x550d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      3219	syntax.c	FUNCTION_40	ELSE_1
0x5511	    0x8b80b0000000	            mov eax, dword [rax + 0xb0] 	      3219	syntax.c	FUNCTION_40	ELSE_1
0x5517	          0x8945e8	             mov dword [rbp - 0x18], eax	      3219	syntax.c	FUNCTION_40	ELSE_1
0x551a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      3220	syntax.c	FUNCTION_40	ELSE_1
0x551e	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      3220	syntax.c	FUNCTION_40	ELSE_1
0x5521	          0x4863d2	                         movsxd rdx, edx	      3220	syntax.c	FUNCTION_40	ELSE_1
0x5524	        0x8b449008	       mov eax, dword [rax + rdx*4 + 8] 	      3220	syntax.c	FUNCTION_40	ELSE_1
0x5528	          0x8945ec	             mov dword [rbp - 0x14], eax	      3220	syntax.c	FUNCTION_40	ELSE_1
0x552b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3224	syntax.c	FUNCTION_40	IF_2
0x552f	          0x488b10	                    mov rdx, qword [rax]	      3224	syntax.c	FUNCTION_40	IF_2
0x5532	    0x488b05000000	            mov rax, qword [0x04005579] 	      3224	syntax.c	FUNCTION_40	IF_2
0x5539	          0x488b00	                    mov rax, qword [rax]	      3224	syntax.c	FUNCTION_40	IF_2
0x553c	          0x4839c2	                            cmp rdx, rax	      3224	syntax.c	FUNCTION_40	IF_2
0x553f	            0x7e0c	                           jle 0x400558d	      3224	syntax.c	FUNCTION_40	IF_2
0x5541	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      3225	syntax.c	FUNCTION_40	IF_2
0x5548	      0xe9ee000000	                           jmp 0x400567b	      3225	syntax.c	FUNCTION_40	IF_2
0x554d	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3226	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x5551	     0xf84e4000000	                            je 0x400567b	      3226	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x5557	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3228	syntax.c	FUNCTION_40	ELSE_2	IF_3	CALL_1
0x555b	          0x488b08	                    mov rcx, qword [rax]	      3228	syntax.c	FUNCTION_40	ELSE_2	IF_3	CALL_1
0x555e	    0x488b05000000	            mov rax, qword [0x040055a5] 	      3228	syntax.c	FUNCTION_40	ELSE_2	IF_3	CALL_1
0x5565	      0xba00000000	                              mov edx, 0	      3228	syntax.c	FUNCTION_40	ELSE_2	IF_3	CALL_1
0x556a	          0x4889ce	                            mov rsi, rcx	      3228	syntax.c	FUNCTION_40	ELSE_2	IF_3	CALL_1
0x556d	          0x4889c7	                            mov rdi, rax	      3228	syntax.c	FUNCTION_40	ELSE_2	IF_3	CALL_1
0x5570	      0xe800000000	                          call 0x40055b5	      3228	syntax.c	FUNCTION_40	ELSE_2	IF_3	CALL_1
0x5575	        0x488945f8	                mov qword [rbp - 8], rax	      3228	syntax.c	FUNCTION_40	ELSE_2	IF_3	CALL_1
0x5579	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      3229	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x557c	          0x4863d0	                         movsxd rdx, eax	      3229	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x557f	        0x488b45f8	                mov rax, qword [rbp - 8]	      3229	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x5583	          0x4801d0	                            add rax, rdx	      3229	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x5586	        0x488945f0	             mov qword [rbp - 0x10], rax	      3229	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x558a	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3230	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4
0x558e	            0x7e43	                           jle 0x4005613	      3230	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4
0x5590	            0xeb27	                           jmp 0x40055f9	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x5592	    0x8b0500000000	            mov eax, dword [0x040055d8] 	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x5598	            0x85c0	                           test eax, eax	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x559a	            0x7412	                            je 0x40055ee	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x559c	    0x488b05000000	            mov rax, qword [0x040055e3] 	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x55a3	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x55a7	          0x4889d7	                            mov rdi, rdx	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x55aa	            0xffd0	                                call rax	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x55ac	            0xeb05	                           jmp 0x40055f3	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x55ae	      0xb801000000	                              mov eax, 1	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x55b3	            0x4898	                                    cdqe	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x55b5	        0x480145f0	            add qword [rbp - 0x10], rax 	      3233	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	CALL_2
0x55b9	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x55bc	          0x8d50ff	                      lea edx, [rax - 1]	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x55bf	          0x8955ec	             mov dword [rbp - 0x14], edx	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x55c2	            0x85c0	                           test eax, eax	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x55c4	            0x7e64	                           jle 0x400566a	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x55c6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x55ca	           0xfb600	                   movzx eax, byte [rax]	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x55cd	            0x84c0	                             test al, al	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x55cf	            0x75c1	                           jne 0x40055d2	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x55d1	            0xeb57	                           jmp 0x400566a	      3232	syntax.c	FUNCTION_40	ELSE_2	IF_3	IF_4	WHILE_1
0x55d3	        0x837dec00	               cmp dword [rbp - 0x14], 0	      3235	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5
0x55d7	            0x7951	                           jns 0x400566a	      3235	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5
0x55d9	            0xeb38	                           jmp 0x4005653	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x55db	    0x8b0500000000	            mov eax, dword [0x04005621] 	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x55e1	            0x85c0	                           test eax, eax	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x55e3	            0x7420	                            je 0x4005645	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x55e5	    0x488b05000000	            mov rax, qword [0x0400562c] 	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x55ec	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x55f0	        0x488d4aff	                      lea rcx, [rdx - 1]	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x55f4	        0x488b55f8	                mov rdx, qword [rbp - 8]	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x55f8	          0x4889ce	                            mov rsi, rcx	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x55fb	          0x4889d7	                            mov rdi, rdx	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x55fe	            0xffd0	                                call rax	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x5600	          0x83c001	                              add eax, 1	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x5603	            0xeb05	                           jmp 0x400564a	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x5605	      0xb801000000	                              mov eax, 1	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x560a	            0x4898	                                    cdqe	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x560c	          0x48f7d8	                                 neg rax	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x560f	        0x480145f0	            add qword [rbp - 0x10], rax 	      3238	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	CALL_3
0x5613	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x5616	          0x8d5001	                      lea edx, [rax + 1]	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x5619	          0x8955ec	             mov dword [rbp - 0x14], edx	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x561c	            0x85c0	                           test eax, eax	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x561e	            0x790a	                           jns 0x400566a	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x5620	        0x488b45f8	                mov rax, qword [rbp - 8]	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x5624	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x5628	            0x72b1	                            jb 0x400561b	      3237	syntax.c	FUNCTION_40	ELSE_2	IF_3	ELSE_3	IF_5	WHILE_2
0x562a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      3240	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x562e	        0x488b45f8	                mov rax, qword [rbp - 8]	      3240	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x5632	          0x4829c2	                            sub rdx, rax	      3240	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x5635	          0x4889d0	                            mov rax, rdx	      3240	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x5638	          0x8945e8	             mov dword [rbp - 0x18], eax	      3240	syntax.c	FUNCTION_40	ELSE_2	IF_3
0x563b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3242	syntax.c	FUNCTION_40
0x563f	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      3242	syntax.c	FUNCTION_40
0x5642	          0x895008	                mov dword [rax + 8], edx	      3242	syntax.c	FUNCTION_40
0x5645	              0x90	                                     nop	      3243	syntax.c	FUNCTION_40
0x5646	              0xc9	                                   leave	      3243	syntax.c	FUNCTION_40
0x5647	              0xc3	                                     ret	      3243	syntax.c	FUNCTION_40
