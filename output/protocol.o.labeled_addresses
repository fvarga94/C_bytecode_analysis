parse_protocol_version	ELSE,3:SWITCH,0:CALL,3:DO,0:FOR,0:WHILE,0:functions,0:IF,3	31
0x56	              0x55	                                push rbp	         6	protocol.c	FUNCTION_28
0x57	          0x4889e5	                            mov rbp, rsp	         6	protocol.c	FUNCTION_28
0x5a	        0x4883ec10	                           sub rsp, 0x10	         6	protocol.c	FUNCTION_28
0x5e	        0x48897df8	                mov qword [rbp - 8], rdi	         6	protocol.c	FUNCTION_28
0x62	        0x488b45f8	                mov rax, qword [rbp - 8]	         7	protocol.c	FUNCTION_28	IF_1	CALL_1
0x66	      0xbe00000000	                              mov esi, 0	         7	protocol.c	FUNCTION_28	IF_1	CALL_1
0x6b	          0x4889c7	                            mov rdi, rax	         7	protocol.c	FUNCTION_28	IF_1	CALL_1
0x6e	      0xe800000000	                          call 0x40000b3	         7	protocol.c	FUNCTION_28	IF_1	CALL_1
0x73	            0x85c0	                           test eax, eax	         7	protocol.c	FUNCTION_28	IF_1	CALL_1
0x75	            0x7507	                           jne 0x40000be	         7	protocol.c	FUNCTION_28	IF_1	CALL_1
0x77	      0xb800000000	                              mov eax, 0	         8	protocol.c	FUNCTION_28	IF_1
0x7c	            0xeb3d	                           jmp 0x40000fb	         8	protocol.c	FUNCTION_28	IF_1
0x7e	        0x488b45f8	                mov rax, qword [rbp - 8]	         9	protocol.c	FUNCTION_28	ELSE_1	IF_2	CALL_2
0x82	      0xbe00000000	                              mov esi, 0	         9	protocol.c	FUNCTION_28	ELSE_1	IF_2	CALL_2
0x87	          0x4889c7	                            mov rdi, rax	         9	protocol.c	FUNCTION_28	ELSE_1	IF_2	CALL_2
0x8a	      0xe800000000	                          call 0x40000cf	         9	protocol.c	FUNCTION_28	ELSE_1	IF_2	CALL_2
0x8f	            0x85c0	                           test eax, eax	         9	protocol.c	FUNCTION_28	ELSE_1	IF_2	CALL_2
0x91	            0x7507	                           jne 0x40000da	         9	protocol.c	FUNCTION_28	ELSE_1	IF_2	CALL_2
0x93	      0xb801000000	                              mov eax, 1	        10	protocol.c	FUNCTION_28	ELSE_1	IF_2
0x98	            0xeb21	                           jmp 0x40000fb	        10	protocol.c	FUNCTION_28	ELSE_1	IF_2
0x9a	        0x488b45f8	                mov rax, qword [rbp - 8]	        11	protocol.c	FUNCTION_28	ELSE_2	IF_3	CALL_3
0x9e	      0xbe00000000	                              mov esi, 0	        11	protocol.c	FUNCTION_28	ELSE_2	IF_3	CALL_3
0xa3	          0x4889c7	                            mov rdi, rax	        11	protocol.c	FUNCTION_28	ELSE_2	IF_3	CALL_3
0xa6	      0xe800000000	                          call 0x40000eb	        11	protocol.c	FUNCTION_28	ELSE_2	IF_3	CALL_3
0xab	            0x85c0	                           test eax, eax	        11	protocol.c	FUNCTION_28	ELSE_2	IF_3	CALL_3
0xad	            0x7507	                           jne 0x40000f6	        11	protocol.c	FUNCTION_28	ELSE_2	IF_3	CALL_3
0xaf	      0xb802000000	                              mov eax, 2	        12	protocol.c	FUNCTION_28	ELSE_2	IF_3
0xb4	            0xeb05	                           jmp 0x40000fb	        12	protocol.c	FUNCTION_28	ELSE_2	IF_3
0xb6	      0xb8ffffffff	                     mov eax, 0xffffffff	        14	protocol.c	FUNCTION_28	ELSE_3
0xbb	              0xc9	                                   leave	        15	protocol.c	FUNCTION_28	ELSE_3
0xbc	              0xc3	                                     ret	        15	protocol.c	FUNCTION_28	ELSE_3
skip_prefix	ELSE,0:SWITCH,0:CALL,0:DO,1:FOR,0:WHILE,0:functions,0:IF,1	27
0x0	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_7
0x1	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_7
0x4	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_7
0x8	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_7
0xc	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_7
0x10	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x14	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x17	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x19	            0x7512	                           jne 0x400006d	       484	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x1b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x1f	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x23	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x26	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x2b	            0xeb27	                           jmp 0x4000094	       486	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x2d	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_7	DO_1
0x31	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_7	DO_1
0x35	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_7	DO_1
0x39	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_7	DO_1
0x3c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_7	DO_1
0x40	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_7	DO_1
0x44	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_7	DO_1
0x48	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_7	DO_1
0x4b	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_7	DO_1
0x4d	            0x74c1	                            je 0x4000050	       488	git-compat-util.h	FUNCTION_7	DO_1
0x4f	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_7
0x54	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_7
0x55	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_7
determine_protocol_version_client	ELSE,0:SWITCH,0:CALL,4:DO,0:FOR,0:WHILE,0:functions,0:IF,3	29
0x23c	              0x55	                                push rbp	        68	protocol.c	FUNCTION_31
0x23d	          0x4889e5	                            mov rbp, rsp	        68	protocol.c	FUNCTION_31
0x240	        0x4883ec20	                           sub rsp, 0x20	        68	protocol.c	FUNCTION_31
0x244	        0x48897de8	             mov qword [rbp - 0x18], rdi	        68	protocol.c	FUNCTION_31
0x248	    0xc745fc000000	                  mov dword [rbp - 4], 0	        69	protocol.c	FUNCTION_31
0x24f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        71	protocol.c	FUNCTION_31	IF_1	CALL_1
0x253	        0x488d55e8	                   lea rdx, [rbp - 0x18]	        71	protocol.c	FUNCTION_31	IF_1	CALL_1
0x257	      0xbe00000000	                              mov esi, 0	        71	protocol.c	FUNCTION_31	IF_1	CALL_1
0x25c	          0x4889c7	                            mov rdi, rax	        71	protocol.c	FUNCTION_31	IF_1	CALL_1
0x25f	      0xe89cfdffff	                    call sym.skip_prefix	        71	protocol.c	FUNCTION_31	IF_1	CALL_1
0x264	            0x85c0	                           test eax, eax	        71	protocol.c	FUNCTION_31	IF_1	CALL_1
0x266	            0x7439	                            je 0x40002e1	        71	protocol.c	FUNCTION_31	IF_1	CALL_1
0x268	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        72	protocol.c	FUNCTION_31	IF_1	CALL_2
0x26c	          0x4889c7	                            mov rdi, rax	        72	protocol.c	FUNCTION_31	IF_1	CALL_2
0x26f	      0xe8e2fdffff	         call sym.parse_protocol_version	        72	protocol.c	FUNCTION_31	IF_1	CALL_2
0x274	          0x8945fc	                mov dword [rbp - 4], eax	        72	protocol.c	FUNCTION_31	IF_1	CALL_2
0x277	        0x837dfcff	 cmp dword [rbp - 4], 0xffffffffffffffff	        74	protocol.c	FUNCTION_31	IF_1	IF_2
0x27b	            0x750f	                           jne 0x40002cc	        74	protocol.c	FUNCTION_31	IF_1	IF_2
0x27d	      0xbf00000000	                              mov edi, 0	        75	protocol.c	FUNCTION_31	IF_1	CALL_3
0x282	      0xb800000000	                              mov eax, 0	        75	protocol.c	FUNCTION_31	IF_1	CALL_3
0x287	      0xe800000000	                          call 0x40002cc	        75	protocol.c	FUNCTION_31	IF_1	CALL_3
0x28c	        0x837dfc00	                  cmp dword [rbp - 4], 0	        76	protocol.c	FUNCTION_31	IF_1	IF_3
0x290	            0x750f	                           jne 0x40002e1	        76	protocol.c	FUNCTION_31	IF_1	IF_3
0x292	      0xbf00000000	                              mov edi, 0	        77	protocol.c	FUNCTION_31	IF_1	CALL_4
0x297	      0xb800000000	                              mov eax, 0	        77	protocol.c	FUNCTION_31	IF_1	CALL_4
0x29c	      0xe800000000	                          call 0x40002e1	        77	protocol.c	FUNCTION_31	IF_1	CALL_4
0x2a1	          0x8b45fc	                mov eax, dword [rbp - 4]	        80	protocol.c	FUNCTION_31
0x2a4	              0xc9	                                   leave	        81	protocol.c	FUNCTION_31
0x2a5	              0xc3	                                     ret	        81	protocol.c	FUNCTION_31
determine_protocol_version_server	ELSE,0:SWITCH,0:CALL,3:DO,0:FOR,0:WHILE,0:functions,1:IF,1	66
0x134	              0x55	                                push rbp	        34	protocol.c	FUNCTION_30
0x135	          0x4889e5	                            mov rbp, rsp	        34	protocol.c	FUNCTION_30
0x138	        0x4883ec50	                           sub rsp, 0x50	        34	protocol.c	FUNCTION_30
0x13c	    0x64488b042528	                mov rax, qword fs:[0x28]	        34	protocol.c	FUNCTION_30
0x145	        0x488945f8	                mov qword [rbp - 8], rax	        34	protocol.c	FUNCTION_30
0x149	            0x31c0	                            xor eax, eax	        34	protocol.c	FUNCTION_30
0x14b	      0xbf00000000	                              mov edi, 0	        35	protocol.c	FUNCTION_30	CALL_1
0x150	      0xe800000000	                          call 0x4000195	        35	protocol.c	FUNCTION_30	CALL_1
0x155	        0x488945c8	             mov qword [rbp - 0x38], rax	        35	protocol.c	FUNCTION_30	CALL_1
0x159	    0xc745b0000000	               mov dword [rbp - 0x50], 0	        36	protocol.c	FUNCTION_30
0x160	      0x48837dc800	               cmp qword [rbp - 0x38], 0	        45	protocol.c	FUNCTION_30	IF_1
0x165	     0xf84b8000000	                            je 0x4000263	        45	protocol.c	FUNCTION_30	IF_1
0x16b	    0x48c745d00000	               mov qword [rbp - 0x30], 0	        46	protocol.c	FUNCTION_30	IF_1
0x173	    0xc745d8000000	               mov dword [rbp - 0x28], 0	        46	protocol.c	FUNCTION_30	IF_1
0x17a	    0xc745dc000000	               mov dword [rbp - 0x24], 0	        46	protocol.c	FUNCTION_30	IF_1
0x181	         0xfb645e0	            movzx eax, byte [rbp - 0x20]	        46	protocol.c	FUNCTION_30	IF_1
0x185	          0x83c801	                               or eax, 1	        46	protocol.c	FUNCTION_30	IF_1
0x188	          0x8845e0	               mov byte [rbp - 0x20], al	        46	protocol.c	FUNCTION_30	IF_1
0x18b	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        46	protocol.c	FUNCTION_30	IF_1
0x193	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	        48	protocol.c	FUNCTION_30	IF_1	CALL_2
0x197	        0x488d45d0	                   lea rax, [rbp - 0x30]	        48	protocol.c	FUNCTION_30	IF_1	CALL_2
0x19b	      0xb9ffffffff	                     mov ecx, 0xffffffff	        48	protocol.c	FUNCTION_30	IF_1	CALL_2
0x1a0	      0xba3a000000	                           mov edx, 0x3a	        48	protocol.c	FUNCTION_30	IF_1	CALL_2
0x1a5	          0x4889c7	                            mov rdi, rax	        48	protocol.c	FUNCTION_30	IF_1	CALL_2
0x1a8	      0xe800000000	                          call 0x40001ed	        48	protocol.c	FUNCTION_30	IF_1	CALL_2
0x1ad	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        50	protocol.c	FUNCTION_30	IF_1	FUNCTION_1
0x1b1	        0x488945c0	             mov qword [rbp - 0x40], rax	        50	protocol.c	FUNCTION_30	IF_1	FUNCTION_1
0x1b5	            0xeb3e	                           jmp 0x4000235	        50	protocol.c	FUNCTION_30	IF_1	FUNCTION_1
0x1b7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        54	protocol.c	FUNCTION_30	FUNCTION_1	CALL_1
0x1bb	          0x488b00	                    mov rax, qword [rax]	        54	protocol.c	FUNCTION_30	FUNCTION_1	CALL_1
0x1be	        0x488d55b8	                   lea rdx, [rbp - 0x48]	        54	protocol.c	FUNCTION_30	FUNCTION_1	CALL_1
0x1c2	      0xbe00000000	                              mov esi, 0	        54	protocol.c	FUNCTION_30	FUNCTION_1	CALL_1
0x1c7	          0x4889c7	                            mov rdi, rax	        54	protocol.c	FUNCTION_30	FUNCTION_1	CALL_1
0x1ca	      0xe831feffff	                    call sym.skip_prefix	        54	protocol.c	FUNCTION_30	FUNCTION_1	CALL_1
0x1cf	            0x85c0	                           test eax, eax	        54	protocol.c	FUNCTION_30	FUNCTION_1	CALL_1
0x1d1	            0x741d	                            je 0x4000230	        54	protocol.c	FUNCTION_30	FUNCTION_1	CALL_1
0x1d3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        55	protocol.c	FUNCTION_30	FUNCTION_1	CALL_2
0x1d7	          0x4889c7	                            mov rdi, rax	        55	protocol.c	FUNCTION_30	FUNCTION_1	CALL_2
0x1da	      0xe877feffff	         call sym.parse_protocol_version	        55	protocol.c	FUNCTION_30	FUNCTION_1	CALL_2
0x1df	          0x8945b4	             mov dword [rbp - 0x4c], eax	        55	protocol.c	FUNCTION_30	FUNCTION_1	CALL_2
0x1e2	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	        56	protocol.c	FUNCTION_30	FUNCTION_1	IF_2
0x1e5	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	        56	protocol.c	FUNCTION_30	FUNCTION_1	IF_2
0x1e8	            0x7e06	                           jle 0x4000230	        56	protocol.c	FUNCTION_30	FUNCTION_1	IF_2
0x1ea	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	        57	protocol.c	FUNCTION_30	FUNCTION_1	IF_2
0x1ed	          0x8945b0	             mov dword [rbp - 0x50], eax	        57	protocol.c	FUNCTION_30	FUNCTION_1	IF_2
0x1f0	      0x488345c010	            add qword [rbp - 0x40], 0x10	        50	protocol.c	FUNCTION_30	IF_1	FUNCTION_1
0x1f5	      0x48837dc000	               cmp qword [rbp - 0x40], 0	        50	protocol.c	FUNCTION_30	IF_1	FUNCTION_1
0x1fa	            0x7416	                            je 0x4000252	        50	protocol.c	FUNCTION_30	IF_1	FUNCTION_1
0x1fc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        50	protocol.c	FUNCTION_30	IF_1	FUNCTION_1
0x200	          0x8b55d8	             mov edx, dword [rbp - 0x28]	        50	protocol.c	FUNCTION_30	IF_1	FUNCTION_1
0x203	            0x89d2	                            mov edx, edx	        50	protocol.c	FUNCTION_30	IF_1	FUNCTION_1
0x205	        0x48c1e204	                              shl rdx, 4	        50	protocol.c	FUNCTION_30	IF_1	FUNCTION_1
0x209	          0x4801d0	                            add rax, rdx	        50	protocol.c	FUNCTION_30	IF_1	FUNCTION_1
0x20c	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	        50	protocol.c	FUNCTION_30	IF_1	FUNCTION_1
0x210	            0x77a5	                            ja 0x40001f7	        50	protocol.c	FUNCTION_30	IF_1	FUNCTION_1
0x212	        0x488d45d0	                   lea rax, [rbp - 0x30]	        61	protocol.c	FUNCTION_30	IF_1	CALL_3
0x216	      0xbe00000000	                              mov esi, 0	        61	protocol.c	FUNCTION_30	IF_1	CALL_3
0x21b	          0x4889c7	                            mov rdi, rax	        61	protocol.c	FUNCTION_30	IF_1	CALL_3
0x21e	      0xe800000000	                          call 0x4000263	        61	protocol.c	FUNCTION_30	IF_1	CALL_3
0x223	          0x8b45b0	             mov eax, dword [rbp - 0x50]	        64	protocol.c	FUNCTION_30
0x226	        0x488b4df8	                mov rcx, qword [rbp - 8]	        65	protocol.c	FUNCTION_30
0x22a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        65	protocol.c	FUNCTION_30
0x233	            0x7405	                            je 0x400027a	        65	protocol.c	FUNCTION_30
0x235	      0xe800000000	                          call 0x400027a	        65	protocol.c	FUNCTION_30
0x23a	              0xc9	                                   leave	        65	protocol.c	FUNCTION_30
0x23b	              0xc3	                                     ret	        65	protocol.c	FUNCTION_30
get_protocol_version_config	ELSE,0:SWITCH,0:CALL,3:DO,0:FOR,0:WHILE,0:functions,0:IF,2	32
0xbd	              0x55	                                push rbp	        18	protocol.c	ELSE_3	FUNCTION_29
0xbe	          0x4889e5	                            mov rbp, rsp	        18	protocol.c	ELSE_3	FUNCTION_29
0xc1	        0x4883ec20	                           sub rsp, 0x20	        18	protocol.c	ELSE_3	FUNCTION_29
0xc5	    0x64488b042528	                mov rax, qword fs:[0x28]	        18	protocol.c	ELSE_3	FUNCTION_29
0xce	        0x488945f8	                mov qword [rbp - 8], rax	        18	protocol.c	ELSE_3	FUNCTION_29
0xd2	            0x31c0	                            xor eax, eax	        18	protocol.c	ELSE_3	FUNCTION_29
0xd4	        0x488d45f0	                   lea rax, [rbp - 0x10]	        20	protocol.c	ELSE_3	FUNCTION_29	IF_1	CALL_1
0xd8	          0x4889c6	                            mov rsi, rax	        20	protocol.c	ELSE_3	FUNCTION_29	IF_1	CALL_1
0xdb	      0xbf00000000	                              mov edi, 0	        20	protocol.c	ELSE_3	FUNCTION_29	IF_1	CALL_1
0xe0	      0xe800000000	                          call 0x4000125	        20	protocol.c	ELSE_3	FUNCTION_29	IF_1	CALL_1
0xe5	            0x85c0	                           test eax, eax	        20	protocol.c	ELSE_3	FUNCTION_29	IF_1	CALL_1
0xe7	            0x7530	                           jne 0x4000159	        20	protocol.c	ELSE_3	FUNCTION_29	IF_1	CALL_1
0xe9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        21	protocol.c	ELSE_3	FUNCTION_29	IF_1	CALL_2
0xed	          0x4889c7	                            mov rdi, rax	        21	protocol.c	ELSE_3	FUNCTION_29	IF_1	CALL_2
0xf0	      0xe861ffffff	         call sym.parse_protocol_version	        21	protocol.c	ELSE_3	FUNCTION_29	IF_1	CALL_2
0xf5	          0x8945ec	             mov dword [rbp - 0x14], eax	        21	protocol.c	ELSE_3	FUNCTION_29	IF_1	CALL_2
0xf8	        0x837decff	cmp dword [rbp - 0x14], 0xffffffffffffffff	        23	protocol.c	ELSE_3	FUNCTION_29	IF_1	IF_2
0xfc	            0x7516	                           jne 0x4000154	        23	protocol.c	ELSE_3	FUNCTION_29	IF_1	IF_2
0xfe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        24	protocol.c	ELSE_3	FUNCTION_29	IF_1	IF_2	CALL_3
0x102	          0x4889c6	                            mov rsi, rax	        24	protocol.c	ELSE_3	FUNCTION_29	IF_1	IF_2	CALL_3
0x105	      0xbf00000000	                              mov edi, 0	        24	protocol.c	ELSE_3	FUNCTION_29	IF_1	IF_2	CALL_3
0x10a	      0xb800000000	                              mov eax, 0	        24	protocol.c	ELSE_3	FUNCTION_29	IF_1	IF_2	CALL_3
0x10f	      0xe800000000	                          call 0x4000154	        24	protocol.c	ELSE_3	FUNCTION_29	IF_1	IF_2	CALL_3
0x114	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        27	protocol.c	ELSE_3	FUNCTION_29	IF_1
0x117	            0xeb05	                           jmp 0x400015e	        27	protocol.c	ELSE_3	FUNCTION_29	IF_1
0x119	      0xb800000000	                              mov eax, 0	        30	protocol.c	ELSE_3	FUNCTION_29
0x11e	        0x488b55f8	                mov rdx, qword [rbp - 8]	        31	protocol.c	ELSE_3	FUNCTION_29
0x122	    0x644833142528	                xor rdx, qword fs:[0x28]	        31	protocol.c	ELSE_3	FUNCTION_29
0x12b	            0x7405	                            je 0x4000172	        31	protocol.c	ELSE_3	FUNCTION_29
0x12d	      0xe800000000	                          call 0x4000172	        31	protocol.c	ELSE_3	FUNCTION_29
0x132	              0xc9	                                   leave	        31	protocol.c	ELSE_3	FUNCTION_29
0x133	              0xc3	                                     ret	        31	protocol.c	ELSE_3	FUNCTION_29
