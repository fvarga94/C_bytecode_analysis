create_graft	CALL,29:FOR,0:SWITCH,0:ELSE,0:functions,0:DO,0:WHILE,0:IF,8	178
0x14e0	              0x55	                                push rbp	       436	replace.c	FUNCTION_14
0x14e1	          0x4889e5	                            mov rbp, rsp	       436	replace.c	FUNCTION_14
0x14e4	    0x4881eca00000	                           sub rsp, 0xa0	       436	replace.c	FUNCTION_14
0x14eb	    0x89bd7cffffff	             mov dword [rbp - 0x84], edi	       436	replace.c	FUNCTION_14
0x14f1	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	       436	replace.c	FUNCTION_14
0x14f8	    0x899578ffffff	             mov dword [rbp - 0x88], edx	       436	replace.c	FUNCTION_14
0x14fe	    0x898d6cffffff	             mov dword [rbp - 0x94], ecx	       436	replace.c	FUNCTION_14
0x1504	    0x64488b042528	                mov rax, qword fs:[0x28]	       436	replace.c	FUNCTION_14
0x150d	        0x488945f8	                mov qword [rbp - 8], rax	       436	replace.c	FUNCTION_14
0x1511	            0x31c0	                            xor eax, eax	       436	replace.c	FUNCTION_14
0x1513	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       438	replace.c	FUNCTION_14
0x151a	          0x488b00	                    mov rax, qword [rax]	       438	replace.c	FUNCTION_14
0x151d	        0x48894588	             mov qword [rbp - 0x78], rax	       438	replace.c	FUNCTION_14
0x1521	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       440	replace.c	FUNCTION_14
0x1529	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       440	replace.c	FUNCTION_14
0x1531	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       440	replace.c	FUNCTION_14
0x1539	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       444	replace.c	FUNCTION_14	IF_1	CALL_1
0x153d	        0x488b4588	             mov rax, qword [rbp - 0x78]	       444	replace.c	FUNCTION_14	IF_1	CALL_1
0x1541	          0x4889d6	                            mov rsi, rdx	       444	replace.c	FUNCTION_14	IF_1	CALL_1
0x1544	          0x4889c7	                            mov rdi, rax	       444	replace.c	FUNCTION_14	IF_1	CALL_1
0x1547	      0xe800000000	                          call 0x400158c	       444	replace.c	FUNCTION_14	IF_1	CALL_1
0x154c	            0x85c0	                           test eax, eax	       444	replace.c	FUNCTION_14	IF_1	CALL_1
0x154e	            0x792b	                           jns 0x40015bb	       444	replace.c	FUNCTION_14	IF_1	CALL_1
0x1550	      0xbf00000000	                              mov edi, 0	       445	replace.c	FUNCTION_14	CALL_3
0x1555	      0xe880ebffff	                               call sym.	       445	replace.c	FUNCTION_14	CALL_3
0x155a	          0x4889c2	                            mov rdx, rax	       445	replace.c	FUNCTION_14	CALL_3
0x155d	        0x488b4588	             mov rax, qword [rbp - 0x78]	       445	replace.c	FUNCTION_14	CALL_3
0x1561	          0x4889c6	                            mov rsi, rax	       445	replace.c	FUNCTION_14	CALL_3
0x1564	          0x4889d7	                            mov rdi, rdx	       445	replace.c	FUNCTION_14	CALL_3
0x1567	      0xb800000000	                              mov eax, 0	       445	replace.c	FUNCTION_14	CALL_3
0x156c	      0xe800000000	                          call 0x40015b1	       445	replace.c	FUNCTION_14	CALL_3
0x1571	      0xe88aeaffff	                    call sym.const_error	       445	replace.c	FUNCTION_14	CALL_3
0x1576	      0xe92d020000	                           jmp 0x40017e8	       445	replace.c	FUNCTION_14	CALL_3
0x157b	        0x488d45c0	                   lea rax, [rbp - 0x40]	       446	replace.c	FUNCTION_14	CALL_4
0x157f	          0x4889c7	                            mov rdi, rax	       446	replace.c	FUNCTION_14	CALL_4
0x1582	      0xe800000000	                          call 0x40015c7	       446	replace.c	FUNCTION_14	CALL_4
0x1587	        0x48894590	             mov qword [rbp - 0x70], rax	       446	replace.c	FUNCTION_14	CALL_4
0x158b	      0x48837d9000	               cmp qword [rbp - 0x70], 0	       447	replace.c	FUNCTION_14	IF_2
0x1590	            0x752b	                           jne 0x40015fd	       447	replace.c	FUNCTION_14	IF_2
0x1592	      0xbf00000000	                              mov edi, 0	       448	replace.c	FUNCTION_14	CALL_6
0x1597	      0xe83eebffff	                               call sym.	       448	replace.c	FUNCTION_14	CALL_6
0x159c	          0x4889c2	                            mov rdx, rax	       448	replace.c	FUNCTION_14	CALL_6
0x159f	        0x488b4588	             mov rax, qword [rbp - 0x78]	       448	replace.c	FUNCTION_14	CALL_6
0x15a3	          0x4889c6	                            mov rsi, rax	       448	replace.c	FUNCTION_14	CALL_6
0x15a6	          0x4889d7	                            mov rdi, rdx	       448	replace.c	FUNCTION_14	CALL_6
0x15a9	      0xb800000000	                              mov eax, 0	       448	replace.c	FUNCTION_14	CALL_6
0x15ae	      0xe800000000	                          call 0x40015f3	       448	replace.c	FUNCTION_14	CALL_6
0x15b3	      0xe848eaffff	                    call sym.const_error	       448	replace.c	FUNCTION_14	CALL_6
0x15b8	      0xe9eb010000	                           jmp 0x40017e8	       448	replace.c	FUNCTION_14	CALL_6
0x15bd	        0x488d5580	                   lea rdx, [rbp - 0x80]	       450	replace.c	FUNCTION_14	CALL_7
0x15c1	        0x488b4590	             mov rax, qword [rbp - 0x70]	       450	replace.c	FUNCTION_14	CALL_7
0x15c5	          0x4889d6	                            mov rsi, rdx	       450	replace.c	FUNCTION_14	CALL_7
0x15c8	          0x4889c7	                            mov rdi, rax	       450	replace.c	FUNCTION_14	CALL_7
0x15cb	      0xe800000000	                          call 0x4001610	       450	replace.c	FUNCTION_14	CALL_7
0x15d0	        0x48894598	             mov qword [rbp - 0x68], rax	       450	replace.c	FUNCTION_14	CALL_7
0x15d4	        0x488b5580	             mov rdx, qword [rbp - 0x80]	       451	replace.c	FUNCTION_14	CALL_8
0x15d8	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	       451	replace.c	FUNCTION_14	CALL_8
0x15dc	        0x488d45a0	                   lea rax, [rbp - 0x60]	       451	replace.c	FUNCTION_14	CALL_8
0x15e0	          0x4889ce	                            mov rsi, rcx	       451	replace.c	FUNCTION_14	CALL_8
0x15e3	          0x4889c7	                            mov rdi, rax	       451	replace.c	FUNCTION_14	CALL_8
0x15e6	      0xe800000000	                          call 0x400162b	       451	replace.c	FUNCTION_14	CALL_8
0x15eb	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       452	replace.c	FUNCTION_14	CALL_9
0x15ef	        0x488b4590	             mov rax, qword [rbp - 0x70]	       452	replace.c	FUNCTION_14	CALL_9
0x15f3	          0x4889d6	                            mov rsi, rdx	       452	replace.c	FUNCTION_14	CALL_9
0x15f6	          0x4889c7	                            mov rdi, rax	       452	replace.c	FUNCTION_14	CALL_9
0x15f9	      0xe800000000	                          call 0x400163e	       452	replace.c	FUNCTION_14	CALL_9
0x15fe	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       454	replace.c	FUNCTION_14	IF_3	CALL_10
0x1605	        0x488d5008	                      lea rdx, [rax + 8]	       454	replace.c	FUNCTION_14	IF_3	CALL_10
0x1609	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	       454	replace.c	FUNCTION_14	IF_3	CALL_10
0x160f	          0x8d48ff	                      lea ecx, [rax - 1]	       454	replace.c	FUNCTION_14	IF_3	CALL_10
0x1612	        0x488d45a0	                   lea rax, [rbp - 0x60]	       454	replace.c	FUNCTION_14	IF_3	CALL_10
0x1616	            0x89ce	                            mov esi, ecx	       454	replace.c	FUNCTION_14	IF_3	CALL_10
0x1618	          0x4889c7	                            mov rdi, rax	       454	replace.c	FUNCTION_14	IF_3	CALL_10
0x161b	      0xe868faffff	                call sym.replace_parents	       454	replace.c	FUNCTION_14	IF_3	CALL_10
0x1620	            0x85c0	                           test eax, eax	       454	replace.c	FUNCTION_14	IF_3	CALL_10
0x1622	            0x7916	                           jns 0x400167a	       454	replace.c	FUNCTION_14	IF_3	CALL_10
0x1624	        0x488d45a0	                   lea rax, [rbp - 0x60]	       455	replace.c	FUNCTION_14	IF_3	CALL_11
0x1628	          0x4889c7	                            mov rdi, rax	       455	replace.c	FUNCTION_14	IF_3	CALL_11
0x162b	      0xe800000000	                          call 0x4001670	       455	replace.c	FUNCTION_14	IF_3	CALL_11
0x1630	      0xb8ffffffff	                     mov eax, 0xffffffff	       456	replace.c	FUNCTION_14	IF_3
0x1635	      0xe96e010000	                           jmp 0x40017e8	       456	replace.c	FUNCTION_14	IF_3
0x163a	        0x488d45a0	                   lea rax, [rbp - 0x60]	       459	replace.c	FUNCTION_14	IF_4	CALL_12
0x163e	          0x4889c7	                            mov rdi, rax	       459	replace.c	FUNCTION_14	IF_4	CALL_12
0x1641	      0xe800000000	                          call 0x4001686	       459	replace.c	FUNCTION_14	IF_4	CALL_12
0x1646	            0x85c0	                           test eax, eax	       459	replace.c	FUNCTION_14	IF_4	CALL_12
0x1648	            0x7438	                            je 0x40016c2	       459	replace.c	FUNCTION_14	IF_4	CALL_12
0x164a	      0xbf00000000	                              mov edi, 0	       460	replace.c	FUNCTION_14	IF_4	CALL_14
0x164f	      0xe886eaffff	                               call sym.	       460	replace.c	FUNCTION_14	IF_4	CALL_14
0x1654	          0x4889c2	                            mov rdx, rax	       460	replace.c	FUNCTION_14	IF_4	CALL_14
0x1657	        0x488b4588	             mov rax, qword [rbp - 0x78]	       460	replace.c	FUNCTION_14	IF_4	CALL_14
0x165b	          0x4889c6	                            mov rsi, rax	       460	replace.c	FUNCTION_14	IF_4	CALL_14
0x165e	          0x4889d7	                            mov rdi, rdx	       460	replace.c	FUNCTION_14	IF_4	CALL_14
0x1661	      0xb800000000	                              mov eax, 0	       460	replace.c	FUNCTION_14	IF_4	CALL_14
0x1666	      0xe800000000	                          call 0x40016ab	       460	replace.c	FUNCTION_14	IF_4	CALL_14
0x166b	      0xbf00000000	                              mov edi, 0	       461	replace.c	FUNCTION_14	IF_4	CALL_16
0x1670	      0xe865eaffff	                               call sym.	       461	replace.c	FUNCTION_14	IF_4	CALL_16
0x1675	          0x4889c7	                            mov rdi, rax	       461	replace.c	FUNCTION_14	IF_4	CALL_16
0x1678	      0xb800000000	                              mov eax, 0	       461	replace.c	FUNCTION_14	IF_4	CALL_16
0x167d	      0xe800000000	                          call 0x40016c2	       461	replace.c	FUNCTION_14	IF_4	CALL_16
0x1682	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       464	replace.c	FUNCTION_14	IF_5	CALL_17
0x1689	    0x8b8d7cffffff	             mov ecx, dword [rbp - 0x84]	       464	replace.c	FUNCTION_14	IF_5	CALL_17
0x168f	        0x488b4590	             mov rax, qword [rbp - 0x70]	       464	replace.c	FUNCTION_14	IF_5	CALL_17
0x1693	            0x89ce	                            mov esi, ecx	       464	replace.c	FUNCTION_14	IF_5	CALL_17
0x1695	          0x4889c7	                            mov rdi, rax	       464	replace.c	FUNCTION_14	IF_5	CALL_17
0x1698	      0xe8e8fdffff	                call sym.check_mergetags	       464	replace.c	FUNCTION_14	IF_5	CALL_17
0x169d	            0x85c0	                           test eax, eax	       464	replace.c	FUNCTION_14	IF_5	CALL_17
0x169f	            0x7416	                            je 0x40016f7	       464	replace.c	FUNCTION_14	IF_5	CALL_17
0x16a1	        0x488d45a0	                   lea rax, [rbp - 0x60]	       465	replace.c	FUNCTION_14	IF_5	CALL_18
0x16a5	          0x4889c7	                            mov rdi, rax	       465	replace.c	FUNCTION_14	IF_5	CALL_18
0x16a8	      0xe800000000	                          call 0x40016ed	       465	replace.c	FUNCTION_14	IF_5	CALL_18
0x16ad	      0xb8ffffffff	                     mov eax, 0xffffffff	       466	replace.c	FUNCTION_14	IF_5
0x16b2	      0xe9f1000000	                           jmp 0x40017e8	       466	replace.c	FUNCTION_14	IF_5
0x16b7	    0x488b15000000	            mov rdx, qword [0x040016fe] 	       469	replace.c	FUNCTION_14	IF_6	CALL_19
0x16be	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	       469	replace.c	FUNCTION_14	IF_6	CALL_19
0x16c2	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       469	replace.c	FUNCTION_14	IF_6	CALL_19
0x16c6	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       469	replace.c	FUNCTION_14	IF_6	CALL_19
0x16ca	          0x4889c7	                            mov rdi, rax	       469	replace.c	FUNCTION_14	IF_6	CALL_19
0x16cd	      0xe800000000	                          call 0x4001712	       469	replace.c	FUNCTION_14	IF_6	CALL_19
0x16d2	            0x85c0	                           test eax, eax	       469	replace.c	FUNCTION_14	IF_6	CALL_19
0x16d4	            0x7437	                            je 0x400174d	       469	replace.c	FUNCTION_14	IF_6	CALL_19
0x16d6	        0x488d45a0	                   lea rax, [rbp - 0x60]	       470	replace.c	FUNCTION_14	IF_6	CALL_20
0x16da	          0x4889c7	                            mov rdi, rax	       470	replace.c	FUNCTION_14	IF_6	CALL_20
0x16dd	      0xe800000000	                          call 0x4001722	       470	replace.c	FUNCTION_14	IF_6	CALL_20
0x16e2	      0xbf00000000	                              mov edi, 0	       471	replace.c	FUNCTION_14	IF_6	CALL_22
0x16e7	      0xe8eee9ffff	                               call sym.	       471	replace.c	FUNCTION_14	IF_6	CALL_22
0x16ec	          0x4889c2	                            mov rdx, rax	       471	replace.c	FUNCTION_14	IF_6	CALL_22
0x16ef	        0x488b4588	             mov rax, qword [rbp - 0x78]	       471	replace.c	FUNCTION_14	IF_6	CALL_22
0x16f3	          0x4889c6	                            mov rsi, rax	       471	replace.c	FUNCTION_14	IF_6	CALL_22
0x16f6	          0x4889d7	                            mov rdi, rdx	       471	replace.c	FUNCTION_14	IF_6	CALL_22
0x16f9	      0xb800000000	                              mov eax, 0	       471	replace.c	FUNCTION_14	IF_6	CALL_22
0x16fe	      0xe800000000	                          call 0x4001743	       471	replace.c	FUNCTION_14	IF_6	CALL_22
0x1703	      0xe8f8e8ffff	                    call sym.const_error	       471	replace.c	FUNCTION_14	IF_6	CALL_22
0x1708	      0xe99b000000	                           jmp 0x40017e8	       471	replace.c	FUNCTION_14	IF_6	CALL_22
0x170d	        0x488d45a0	                   lea rax, [rbp - 0x60]	       475	replace.c	FUNCTION_14	CALL_23
0x1711	          0x4889c7	                            mov rdi, rax	       475	replace.c	FUNCTION_14	CALL_23
0x1714	      0xe800000000	                          call 0x4001759	       475	replace.c	FUNCTION_14	CALL_23
0x1719	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       477	replace.c	FUNCTION_14	IF_7	CALL_24
0x171d	        0x488d45c0	                   lea rax, [rbp - 0x40]	       477	replace.c	FUNCTION_14	IF_7	CALL_24
0x1721	          0x4889d6	                            mov rsi, rdx	       477	replace.c	FUNCTION_14	IF_7	CALL_24
0x1724	          0x4889c7	                            mov rdi, rax	       477	replace.c	FUNCTION_14	IF_7	CALL_24
0x1727	      0xe804eaffff	                         call sym.oidcmp	       477	replace.c	FUNCTION_14	IF_7	CALL_24
0x172c	            0x85c0	                           test eax, eax	       477	replace.c	FUNCTION_14	IF_7	CALL_24
0x172e	            0x7553	                           jne 0x40017c3	       477	replace.c	FUNCTION_14	IF_7	CALL_24
0x1730	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	       478	replace.c	FUNCTION_14	IF_7	IF_8
0x1737	            0x7425	                            je 0x400179e	       478	replace.c	FUNCTION_14	IF_7	IF_8
0x1739	        0x488d45c0	                   lea rax, [rbp - 0x40]	       479	replace.c	FUNCTION_14	IF_7	IF_8	CALL_26
0x173d	          0x4889c7	                            mov rdi, rax	       479	replace.c	FUNCTION_14	IF_7	IF_8	CALL_26
0x1740	      0xe800000000	                          call 0x4001785	       479	replace.c	FUNCTION_14	IF_7	IF_8	CALL_26
0x1745	          0x4889c6	                            mov rsi, rax	       479	replace.c	FUNCTION_14	IF_7	IF_8	CALL_26
0x1748	      0xbf00000000	                              mov edi, 0	       479	replace.c	FUNCTION_14	IF_7	IF_8	CALL_26
0x174d	      0xb800000000	                              mov eax, 0	       479	replace.c	FUNCTION_14	IF_7	IF_8	CALL_26
0x1752	      0xe800000000	                          call 0x4001797	       479	replace.c	FUNCTION_14	IF_7	IF_8	CALL_26
0x1757	      0xb800000000	                              mov eax, 0	       480	replace.c	FUNCTION_14	IF_7	IF_8
0x175c	            0xeb4a	                           jmp 0x40017e8	       480	replace.c	FUNCTION_14	IF_7	IF_8
0x175e	        0x488d45c0	                   lea rax, [rbp - 0x40]	       482	replace.c	FUNCTION_14	IF_7	CALL_28
0x1762	          0x4889c7	                            mov rdi, rax	       482	replace.c	FUNCTION_14	IF_7	CALL_28
0x1765	      0xe800000000	                          call 0x40017aa	       482	replace.c	FUNCTION_14	IF_7	CALL_28
0x176a	          0x4889c6	                            mov rsi, rax	       482	replace.c	FUNCTION_14	IF_7	CALL_28
0x176d	      0xbf00000000	                              mov edi, 0	       482	replace.c	FUNCTION_14	IF_7	CALL_28
0x1772	      0xb800000000	                              mov eax, 0	       482	replace.c	FUNCTION_14	IF_7	CALL_28
0x1777	      0xe800000000	                          call 0x40017bc	       482	replace.c	FUNCTION_14	IF_7	CALL_28
0x177c	      0xe87fe8ffff	                    call sym.const_error	       482	replace.c	FUNCTION_14	IF_7	CALL_28
0x1781	            0xeb25	                           jmp 0x40017e8	       482	replace.c	FUNCTION_14	IF_7	CALL_28
0x1783	    0x8b8d78ffffff	             mov ecx, dword [rbp - 0x88]	       485	replace.c	FUNCTION_14	CALL_29
0x1789	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       485	replace.c	FUNCTION_14	CALL_29
0x178d	        0x488d75c0	                   lea rsi, [rbp - 0x40]	       485	replace.c	FUNCTION_14	CALL_29
0x1791	        0x488b4588	             mov rax, qword [rbp - 0x78]	       485	replace.c	FUNCTION_14	CALL_29
0x1795	          0x4189c8	                            mov r8d, ecx	       485	replace.c	FUNCTION_14	CALL_29
0x1798	          0x4889d1	                            mov rcx, rdx	       485	replace.c	FUNCTION_14	CALL_29
0x179b	      0xba00000000	                              mov edx, 0	       485	replace.c	FUNCTION_14	CALL_29
0x17a0	          0x4889c7	                            mov rdi, rax	       485	replace.c	FUNCTION_14	CALL_29
0x17a3	      0xe801efffff	             call sym.replace_object_oid	       485	replace.c	FUNCTION_14	CALL_29
0x17a8	        0x488b4df8	                mov rcx, qword [rbp - 8]	       486	replace.c	FUNCTION_14
0x17ac	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       486	replace.c	FUNCTION_14
0x17b5	            0x7405	                            je 0x40017fc	       486	replace.c	FUNCTION_14
0x17b7	      0xe800000000	                          call 0x40017fc	       486	replace.c	FUNCTION_14
0x17bc	              0xc9	                                   leave	       486	replace.c	FUNCTION_14
0x17bd	              0xc3	                                     ret	       486	replace.c	FUNCTION_14
check_ref_valid	CALL,8:FOR,0:SWITCH,0:ELSE,1:functions,0:DO,0:WHILE,0:IF,3	61
0x5c4	              0x55	                                push rbp	       145	replace.c	FUNCTION_5
0x5c5	          0x4889e5	                            mov rbp, rsp	       145	replace.c	FUNCTION_5
0x5c8	        0x4883ec20	                           sub rsp, 0x20	       145	replace.c	FUNCTION_5
0x5cc	        0x48897df8	                mov qword [rbp - 8], rdi	       145	replace.c	FUNCTION_5
0x5d0	        0x488975f0	             mov qword [rbp - 0x10], rsi	       145	replace.c	FUNCTION_5
0x5d4	        0x488955e8	             mov qword [rbp - 0x18], rdx	       145	replace.c	FUNCTION_5
0x5d8	          0x894de4	             mov dword [rbp - 0x1c], ecx	       145	replace.c	FUNCTION_5
0x5db	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       146	replace.c	FUNCTION_5	CALL_1
0x5df	      0xbe00000000	                              mov esi, 0	       146	replace.c	FUNCTION_5	CALL_1
0x5e4	          0x4889c7	                            mov rdi, rax	       146	replace.c	FUNCTION_5	CALL_1
0x5e7	      0xe81ffaffff	                  call sym.strbuf_setlen	       146	replace.c	FUNCTION_5	CALL_1
0x5ec	        0x488b45f8	                mov rax, qword [rbp - 8]	       147	replace.c	FUNCTION_5	CALL_3
0x5f0	          0x4889c7	                            mov rdi, rax	       147	replace.c	FUNCTION_5	CALL_3
0x5f3	      0xe800000000	                          call 0x4000638	       147	replace.c	FUNCTION_5	CALL_3
0x5f8	          0x4889c1	                            mov rcx, rax	       147	replace.c	FUNCTION_5	CALL_3
0x5fb	    0x488b15000000	            mov rdx, qword [0x04000642] 	       147	replace.c	FUNCTION_5	CALL_3
0x602	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       147	replace.c	FUNCTION_5	CALL_3
0x606	      0xbe00000000	                              mov esi, 0	       147	replace.c	FUNCTION_5	CALL_3
0x60b	          0x4889c7	                            mov rdi, rax	       147	replace.c	FUNCTION_5	CALL_3
0x60e	      0xb800000000	                              mov eax, 0	       147	replace.c	FUNCTION_5	CALL_3
0x613	      0xe800000000	                          call 0x4000658	       147	replace.c	FUNCTION_5	CALL_3
0x618	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       148	replace.c	FUNCTION_5	IF_1	CALL_4
0x61c	        0x488b4010	            mov rax, qword [rax + 0x10] 	       148	replace.c	FUNCTION_5	IF_1	CALL_4
0x620	      0xbe00000000	                              mov esi, 0	       148	replace.c	FUNCTION_5	IF_1	CALL_4
0x625	          0x4889c7	                            mov rdi, rax	       148	replace.c	FUNCTION_5	IF_1	CALL_4
0x628	      0xe800000000	                          call 0x400066d	       148	replace.c	FUNCTION_5	IF_1	CALL_4
0x62d	            0x85c0	                           test eax, eax	       148	replace.c	FUNCTION_5	IF_1	CALL_4
0x62f	            0x7421	                            je 0x4000692	       148	replace.c	FUNCTION_5	IF_1	CALL_4
0x631	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       149	replace.c	FUNCTION_5	CALL_5
0x635	        0x488b4010	            mov rax, qword [rax + 0x10] 	       149	replace.c	FUNCTION_5	CALL_5
0x639	          0x4889c6	                            mov rsi, rax	       149	replace.c	FUNCTION_5	CALL_5
0x63c	      0xbf00000000	                              mov edi, 0	       149	replace.c	FUNCTION_5	CALL_5
0x641	      0xb800000000	                              mov eax, 0	       149	replace.c	FUNCTION_5	CALL_5
0x646	      0xe800000000	                          call 0x400068b	       149	replace.c	FUNCTION_5	CALL_5
0x64b	      0xe8b0f9ffff	                    call sym.const_error	       149	replace.c	FUNCTION_5	CALL_5
0x650	            0xeb55	                           jmp 0x40006e7	       149	replace.c	FUNCTION_5	CALL_5
0x652	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       151	replace.c	FUNCTION_5	IF_2	CALL_6
0x656	        0x488b4010	            mov rax, qword [rax + 0x10] 	       151	replace.c	FUNCTION_5	IF_2	CALL_6
0x65a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       151	replace.c	FUNCTION_5	IF_2	CALL_6
0x65e	          0x4889d6	                            mov rsi, rdx	       151	replace.c	FUNCTION_5	IF_2	CALL_6
0x661	          0x4889c7	                            mov rdi, rax	       151	replace.c	FUNCTION_5	IF_2	CALL_6
0x664	      0xe800000000	                          call 0x40006a9	       151	replace.c	FUNCTION_5	IF_2	CALL_6
0x669	            0x85c0	                           test eax, eax	       151	replace.c	FUNCTION_5	IF_2	CALL_6
0x66b	            0x740e	                            je 0x40006bb	       151	replace.c	FUNCTION_5	IF_2	CALL_6
0x66d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       152	replace.c	FUNCTION_5	CALL_7
0x671	          0x4889c7	                            mov rdi, rax	       152	replace.c	FUNCTION_5	CALL_7
0x674	      0xe8dcfaffff	                         call sym.oidclr	       152	replace.c	FUNCTION_5	CALL_7
0x679	            0xeb27	                           jmp 0x40006e2	       152	replace.c	FUNCTION_5	CALL_7
0x67b	        0x837de400	               cmp dword [rbp - 0x1c], 0	       153	replace.c	FUNCTION_5	ELSE_1	IF_3
0x67f	            0x7521	                           jne 0x40006e2	       153	replace.c	FUNCTION_5	ELSE_1	IF_3
0x681	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       154	replace.c	FUNCTION_5	ELSE_1	IF_3
0x685	        0x488b4010	            mov rax, qword [rax + 0x10] 	       154	replace.c	FUNCTION_5	ELSE_1	IF_3
0x689	          0x4889c6	                            mov rsi, rax	       154	replace.c	FUNCTION_5	ELSE_1	IF_3
0x68c	      0xbf00000000	                              mov edi, 0	       154	replace.c	FUNCTION_5	ELSE_1	IF_3
0x691	      0xb800000000	                              mov eax, 0	       154	replace.c	FUNCTION_5	ELSE_1	IF_3
0x696	      0xe800000000	                          call 0x40006db	       154	replace.c	FUNCTION_5	ELSE_1	IF_3
0x69b	      0xe860f9ffff	                    call sym.const_error	       154	replace.c	FUNCTION_5	ELSE_1	IF_3
0x6a0	            0xeb05	                           jmp 0x40006e7	       154	replace.c	FUNCTION_5	ELSE_1	IF_3
0x6a2	      0xb800000000	                              mov eax, 0	       155	replace.c	FUNCTION_5
0x6a7	              0xc9	                                   leave	       156	replace.c	FUNCTION_5
0x6a8	              0xc3	                                     ret	       156	replace.c	FUNCTION_5
check_one_mergetag	CALL,15:FOR,1:SWITCH,0:ELSE,0:functions,0:DO,0:WHILE,0:IF,4	132
0x1283	              0x55	                                push rbp	       397	replace.c	FUNCTION_12
0x1284	          0x4889e5	                            mov rbp, rsp	       397	replace.c	FUNCTION_12
0x1287	              0x53	                                push rbx	       397	replace.c	FUNCTION_12
0x1288	    0x4881ec880000	                           sub rsp, 0x88	       397	replace.c	FUNCTION_12
0x128f	        0x48897d88	             mov qword [rbp - 0x78], rdi	       397	replace.c	FUNCTION_12
0x1293	        0x48897580	             mov qword [rbp - 0x80], rsi	       397	replace.c	FUNCTION_12
0x1297	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	       397	replace.c	FUNCTION_12
0x129e	    0x64488b042528	                mov rax, qword fs:[0x28]	       397	replace.c	FUNCTION_12
0x12a7	        0x488945e8	             mov qword [rbp - 0x18], rax	       397	replace.c	FUNCTION_12
0x12ab	            0x31c0	                            xor eax, eax	       397	replace.c	FUNCTION_12
0x12ad	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       398	replace.c	FUNCTION_12
0x12b4	        0x48894598	             mov qword [rbp - 0x68], rax	       398	replace.c	FUNCTION_12
0x12b8	        0x488b4598	             mov rax, qword [rbp - 0x68]	       399	replace.c	FUNCTION_12
0x12bc	        0x488b4008	                mov rax, qword [rax + 8]	       399	replace.c	FUNCTION_12
0x12c0	          0x488b00	                    mov rax, qword [rax]	       399	replace.c	FUNCTION_12
0x12c3	        0x488945a0	             mov qword [rbp - 0x60], rax	       399	replace.c	FUNCTION_12
0x12c7	      0xbf04000000	                              mov edi, 4	       404	replace.c	FUNCTION_12	CALL_2
0x12cc	      0xe800000000	                          call 0x4001311	       404	replace.c	FUNCTION_12	CALL_2
0x12d1	          0x4889c7	                            mov rdi, rax	       404	replace.c	FUNCTION_12	CALL_2
0x12d4	        0x488b4580	             mov rax, qword [rbp - 0x80]	       404	replace.c	FUNCTION_12	CALL_2
0x12d8	        0x488b7018	            mov rsi, qword [rax + 0x18] 	       404	replace.c	FUNCTION_12	CALL_2
0x12dc	        0x488b4580	             mov rax, qword [rbp - 0x80]	       404	replace.c	FUNCTION_12	CALL_2
0x12e0	        0x488b4010	            mov rax, qword [rax + 0x10] 	       404	replace.c	FUNCTION_12	CALL_2
0x12e4	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       404	replace.c	FUNCTION_12	CALL_2
0x12e8	          0x4889d1	                            mov rcx, rdx	       404	replace.c	FUNCTION_12	CALL_2
0x12eb	          0x4889fa	                            mov rdx, rdi	       404	replace.c	FUNCTION_12	CALL_2
0x12ee	          0x4889c7	                            mov rdi, rax	       404	replace.c	FUNCTION_12	CALL_2
0x12f1	      0xe800000000	                          call 0x4001336	       404	replace.c	FUNCTION_12	CALL_2
0x12f6	        0x488d45b0	                   lea rax, [rbp - 0x50]	       405	replace.c	FUNCTION_12	CALL_3
0x12fa	          0x4889c7	                            mov rdi, rax	       405	replace.c	FUNCTION_12	CALL_3
0x12fd	      0xe800000000	                          call 0x4001342	       405	replace.c	FUNCTION_12	CALL_3
0x1302	        0x488945a8	             mov qword [rbp - 0x58], rax	       405	replace.c	FUNCTION_12	CALL_3
0x1306	      0x48837da800	               cmp qword [rbp - 0x58], 0	       406	replace.c	FUNCTION_12	IF_1
0x130b	            0x752b	                           jne 0x4001378	       406	replace.c	FUNCTION_12	IF_1
0x130d	      0xbf00000000	                              mov edi, 0	       407	replace.c	FUNCTION_12	CALL_5
0x1312	      0xe8c3edffff	                               call sym.	       407	replace.c	FUNCTION_12	CALL_5
0x1317	          0x4889c2	                            mov rdx, rax	       407	replace.c	FUNCTION_12	CALL_5
0x131a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       407	replace.c	FUNCTION_12	CALL_5
0x131e	          0x4889c6	                            mov rsi, rax	       407	replace.c	FUNCTION_12	CALL_5
0x1321	          0x4889d7	                            mov rdi, rdx	       407	replace.c	FUNCTION_12	CALL_5
0x1324	      0xb800000000	                              mov eax, 0	       407	replace.c	FUNCTION_12	CALL_5
0x1329	      0xe800000000	                          call 0x400136e	       407	replace.c	FUNCTION_12	CALL_5
0x132e	      0xe8cdecffff	                    call sym.const_error	       407	replace.c	FUNCTION_12	CALL_5
0x1333	      0xe92f010000	                           jmp 0x40014a7	       407	replace.c	FUNCTION_12	CALL_5
0x1338	        0x488b4580	             mov rax, qword [rbp - 0x80]	       408	replace.c	FUNCTION_12	IF_2	CALL_6
0x133c	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       408	replace.c	FUNCTION_12	IF_2	CALL_6
0x1340	        0x488b4580	             mov rax, qword [rbp - 0x80]	       408	replace.c	FUNCTION_12	IF_2	CALL_6
0x1344	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       408	replace.c	FUNCTION_12	IF_2	CALL_6
0x1348	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       408	replace.c	FUNCTION_12	IF_2	CALL_6
0x134c	          0x4889ce	                            mov rsi, rcx	       408	replace.c	FUNCTION_12	IF_2	CALL_6
0x134f	          0x4889c7	                            mov rdi, rax	       408	replace.c	FUNCTION_12	IF_2	CALL_6
0x1352	      0xe800000000	                          call 0x4001397	       408	replace.c	FUNCTION_12	IF_2	CALL_6
0x1357	            0x85c0	                           test eax, eax	       408	replace.c	FUNCTION_12	IF_2	CALL_6
0x1359	            0x742b	                            je 0x40013c6	       408	replace.c	FUNCTION_12	IF_2	CALL_6
0x135b	      0xbf00000000	                              mov edi, 0	       409	replace.c	FUNCTION_12	CALL_8
0x1360	      0xe875edffff	                               call sym.	       409	replace.c	FUNCTION_12	CALL_8
0x1365	          0x4889c2	                            mov rdx, rax	       409	replace.c	FUNCTION_12	CALL_8
0x1368	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       409	replace.c	FUNCTION_12	CALL_8
0x136c	          0x4889c6	                            mov rsi, rax	       409	replace.c	FUNCTION_12	CALL_8
0x136f	          0x4889d7	                            mov rdi, rdx	       409	replace.c	FUNCTION_12	CALL_8
0x1372	      0xb800000000	                              mov eax, 0	       409	replace.c	FUNCTION_12	CALL_8
0x1377	      0xe800000000	                          call 0x40013bc	       409	replace.c	FUNCTION_12	CALL_8
0x137c	      0xe87fecffff	                    call sym.const_error	       409	replace.c	FUNCTION_12	CALL_8
0x1381	      0xe9e1000000	                           jmp 0x40014a7	       409	replace.c	FUNCTION_12	CALL_8
0x1386	    0xc74594010000	               mov dword [rbp - 0x6c], 1	       412	replace.c	FUNCTION_12	FOR_1
0x138d	      0xe98e000000	                           jmp 0x4001460	       412	replace.c	FUNCTION_12	FOR_1
0x1392	        0x488b4598	             mov rax, qword [rbp - 0x68]	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_9
0x1396	        0x488b4008	                mov rax, qword [rax + 8]	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_9
0x139a	          0x8b5594	             mov edx, dword [rbp - 0x6c]	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_9
0x139d	          0x4863d2	                         movsxd rdx, edx	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_9
0x13a0	        0x48c1e203	                              shl rdx, 3	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_9
0x13a4	          0x4801d0	                            add rax, rdx	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_9
0x13a7	          0x488b00	                    mov rax, qword [rax]	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_9
0x13aa	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_9
0x13ae	          0x4889d6	                            mov rsi, rdx	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_9
0x13b1	          0x4889c7	                            mov rdi, rax	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_9
0x13b4	      0xe800000000	                          call 0x40013f9	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_9
0x13b9	            0x85c0	                           test eax, eax	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_9
0x13bb	            0x7939	                           jns 0x4001436	       414	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_9
0x13bd	        0x488b4598	             mov rax, qword [rbp - 0x68]	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x13c1	        0x488b4008	                mov rax, qword [rax + 8]	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x13c5	          0x8b5594	             mov edx, dword [rbp - 0x6c]	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x13c8	          0x4863d2	                         movsxd rdx, edx	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x13cb	        0x48c1e203	                              shl rdx, 3	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x13cf	          0x4801d0	                            add rax, rdx	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x13d2	          0x488b18	                    mov rbx, qword [rax]	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x13d5	      0xbf00000000	                              mov edi, 0	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x13da	      0xe8fbecffff	                               call sym.	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x13df	          0x4889de	                            mov rsi, rbx	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x13e2	          0x4889c7	                            mov rdi, rax	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x13e5	      0xb800000000	                              mov eax, 0	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x13ea	      0xe800000000	                          call 0x400142f	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x13ef	      0xe80cecffff	                    call sym.const_error	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x13f4	            0xeb71	                           jmp 0x40014a7	       415	replace.c	FUNCTION_12	FOR_1	IF_3	CALL_11
0x13f6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       417	replace.c	FUNCTION_12	FOR_1	IF_4	CALL_12
0x13fa	        0x488b4018	            mov rax, qword [rax + 0x18] 	       417	replace.c	FUNCTION_12	FOR_1	IF_4	CALL_12
0x13fe	        0x488d5004	                      lea rdx, [rax + 4]	       417	replace.c	FUNCTION_12	FOR_1	IF_4	CALL_12
0x1402	        0x488d45d0	                   lea rax, [rbp - 0x30]	       417	replace.c	FUNCTION_12	FOR_1	IF_4	CALL_12
0x1406	          0x4889c6	                            mov rsi, rax	       417	replace.c	FUNCTION_12	FOR_1	IF_4	CALL_12
0x1409	          0x4889d7	                            mov rdi, rdx	       417	replace.c	FUNCTION_12	FOR_1	IF_4	CALL_12
0x140c	      0xe81fedffff	                         call sym.oidcmp	       417	replace.c	FUNCTION_12	FOR_1	IF_4	CALL_12
0x1411	            0x85c0	                           test eax, eax	       417	replace.c	FUNCTION_12	FOR_1	IF_4	CALL_12
0x1413	            0x7507	                           jne 0x400145c	       417	replace.c	FUNCTION_12	FOR_1	IF_4	CALL_12
0x1415	      0xb800000000	                              mov eax, 0	       418	replace.c	FUNCTION_12	FOR_1	IF_4
0x141a	            0xeb4b	                           jmp 0x40014a7	       418	replace.c	FUNCTION_12	FOR_1	IF_4
0x141c	        0x83459401	               add dword [rbp - 0x6c], 1	       412	replace.c	FUNCTION_12	FOR_1
0x1420	        0x488b4598	             mov rax, qword [rbp - 0x68]	       412	replace.c	FUNCTION_12	FOR_1
0x1424	            0x8b00	                    mov eax, dword [rax]	       412	replace.c	FUNCTION_12	FOR_1
0x1426	          0x3b4594	             cmp eax, dword [rbp - 0x6c]	       412	replace.c	FUNCTION_12	FOR_1
0x1429	     0xf8f63ffffff	                            jg 0x40013d2	       412	replace.c	FUNCTION_12	FOR_1
0x142f	        0x488d45b0	                   lea rax, [rbp - 0x50]	       421	replace.c	FUNCTION_12	CALL_14
0x1433	          0x4889c7	                            mov rdi, rax	       421	replace.c	FUNCTION_12	CALL_14
0x1436	      0xe800000000	                          call 0x400147b	       421	replace.c	FUNCTION_12	CALL_14
0x143b	          0x4889c3	                            mov rbx, rax	       421	replace.c	FUNCTION_12	CALL_14
0x143e	      0xbf00000000	                              mov edi, 0	       421	replace.c	FUNCTION_12	CALL_14
0x1443	      0xe892ecffff	                               call sym.	       421	replace.c	FUNCTION_12	CALL_14
0x1448	          0x4889c1	                            mov rcx, rax	       421	replace.c	FUNCTION_12	CALL_14
0x144b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       421	replace.c	FUNCTION_12	CALL_14
0x144f	          0x4889da	                            mov rdx, rbx	       421	replace.c	FUNCTION_12	CALL_14
0x1452	          0x4889c6	                            mov rsi, rax	       421	replace.c	FUNCTION_12	CALL_14
0x1455	          0x4889cf	                            mov rdi, rcx	       421	replace.c	FUNCTION_12	CALL_14
0x1458	      0xb800000000	                              mov eax, 0	       421	replace.c	FUNCTION_12	CALL_14
0x145d	      0xe800000000	                          call 0x40014a2	       421	replace.c	FUNCTION_12	CALL_14
0x1462	      0xe899ebffff	                    call sym.const_error	       421	replace.c	FUNCTION_12	CALL_14
0x1467	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       424	replace.c	FUNCTION_12
0x146b	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       424	replace.c	FUNCTION_12
0x1474	            0x7405	                            je 0x40014bb	       424	replace.c	FUNCTION_12
0x1476	      0xe800000000	                          call 0x40014bb	       424	replace.c	FUNCTION_12
0x147b	    0x4881c4880000	                           add rsp, 0x88	       424	replace.c	FUNCTION_12
0x1482	              0x5b	                                 pop rbx	       424	replace.c	FUNCTION_12
0x1483	              0x5d	                                 pop rbp	       424	replace.c	FUNCTION_12
0x1484	              0xc3	                                     ret	       424	replace.c	FUNCTION_12
strbuf_setlen	CALL,2:FOR,0:SWITCH,0:ELSE,1:functions,0:DO,0:WHILE,0:IF,2	43
0xb	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_19
0xc	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_19
0xf	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_19
0x13	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_19
0x17	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_19
0x1b	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_19	IF_1
0x1f	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_19	IF_1
0x22	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_19	IF_1
0x25	            0x740d	                            je 0x4000074	       162	strbuf.h	FUNCTION_19	IF_1
0x27	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_19	IF_1
0x2b	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_19	IF_1
0x2e	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_19	IF_1
0x32	            0xeb05	                           jmp 0x4000079	       162	strbuf.h	FUNCTION_19	IF_1
0x34	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_19	IF_1
0x39	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_19	IF_1
0x3d	            0x730f	                           jae 0x400008e	       162	strbuf.h	FUNCTION_19	IF_1
0x3f	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_19	CALL_1
0x44	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_19	CALL_1
0x49	      0xe800000000	                          call 0x400008e	       163	strbuf.h	FUNCTION_19	CALL_1
0x4e	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_19
0x52	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_19
0x56	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_19
0x5a	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_19	IF_2
0x5e	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_19	IF_2
0x62	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_19	IF_2
0x68	            0x7414	                            je 0x40000be	       165	strbuf.h	FUNCTION_19	IF_2
0x6a	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_19	IF_2
0x6e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_19	IF_2
0x72	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_19	IF_2
0x76	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_19	IF_2
0x79	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_19	IF_2
0x7c	            0xeb24	                           jmp 0x40000e2	       169	strbuf.h	FUNCTION_19
0x7e	     0xfb605000000	           movzx eax, byte [0x040000c5] 	       168	strbuf.h	FUNCTION_19	CALL_2
0x85	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_19	CALL_2
0x87	            0x7419	                            je 0x40000e2	       168	strbuf.h	FUNCTION_19	CALL_2
0x89	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_19	CALL_2
0x8e	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_19	CALL_2
0x93	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_19	CALL_2
0x98	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_19	CALL_2
0x9d	      0xe800000000	                          call 0x40000e2	       168	strbuf.h	FUNCTION_19	CALL_2
0xa2	              0x90	                                     nop	       169	strbuf.h	FUNCTION_19
0xa3	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_19
0xa4	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_19
_	CALL,2:FOR,0:SWITCH,0:ELSE,0:functions,0:DO,0:WHILE,0:IF,1	15
0xda	              0x55	                                push rbp	        51	gettext.h	FUNCTION_30
0xdb	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_30
0xde	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_30
0xe2	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_30
0xe6	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_30	IF_1
0xea	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_30	IF_1
0xed	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_30	IF_1
0xef	            0x7507	                           jne 0x4000138	        52	gettext.h	FUNCTION_30	IF_1
0xf1	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_30	IF_1
0xf6	            0xeb0c	                           jmp 0x4000144	        53	gettext.h	FUNCTION_30	IF_1
0xf8	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_30	CALL_2
0xfc	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_30	CALL_2
0xff	      0xe800000000	                          call 0x4000144	        54	gettext.h	FUNCTION_30	CALL_2
0x104	              0xc9	                                   leave	        55	gettext.h	FUNCTION_30
0x105	              0xc3	                                     ret	        55	gettext.h	FUNCTION_30
show_reference	CALL,12:FOR,0:SWITCH,0:ELSE,2:functions,0:DO,0:WHILE,0:IF,4	102
0x17a	              0x55	                                push rbp	        44	replace.c	FUNCTION_1
0x17b	          0x4889e5	                            mov rbp, rsp	        44	replace.c	FUNCTION_1
0x17e	            0x4154	                                push r12	        44	replace.c	FUNCTION_1
0x180	              0x53	                                push rbx	        44	replace.c	FUNCTION_1
0x181	        0x4883ec50	                           sub rsp, 0x50	        44	replace.c	FUNCTION_1
0x185	        0x48897db8	             mov qword [rbp - 0x48], rdi	        44	replace.c	FUNCTION_1
0x189	        0x488975b0	             mov qword [rbp - 0x50], rsi	        44	replace.c	FUNCTION_1
0x18d	          0x8955ac	             mov dword [rbp - 0x54], edx	        44	replace.c	FUNCTION_1
0x190	        0x48894da0	             mov qword [rbp - 0x60], rcx	        44	replace.c	FUNCTION_1
0x194	    0x64488b042528	                mov rax, qword fs:[0x28]	        44	replace.c	FUNCTION_1
0x19d	        0x488945e8	             mov qword [rbp - 0x18], rax	        44	replace.c	FUNCTION_1
0x1a1	            0x31c0	                            xor eax, eax	        44	replace.c	FUNCTION_1
0x1a3	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        45	replace.c	FUNCTION_1
0x1a7	        0x488945c8	             mov qword [rbp - 0x38], rax	        45	replace.c	FUNCTION_1
0x1ab	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        47	replace.c	FUNCTION_1	IF_1	CALL_1
0x1af	          0x488b00	                    mov rax, qword [rax]	        47	replace.c	FUNCTION_1	IF_1	CALL_1
0x1b2	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	        47	replace.c	FUNCTION_1	IF_1	CALL_1
0x1b6	      0xba00000000	                              mov edx, 0	        47	replace.c	FUNCTION_1	IF_1	CALL_1
0x1bb	          0x4889ce	                            mov rsi, rcx	        47	replace.c	FUNCTION_1	IF_1	CALL_1
0x1be	          0x4889c7	                            mov rdi, rax	        47	replace.c	FUNCTION_1	IF_1	CALL_1
0x1c1	      0xe800000000	                          call 0x4000206	        47	replace.c	FUNCTION_1	IF_1	CALL_1
0x1c6	            0x85c0	                           test eax, eax	        47	replace.c	FUNCTION_1	IF_1	CALL_1
0x1c8	     0xf850a010000	                           jne 0x4000318	        47	replace.c	FUNCTION_1	IF_1	CALL_1
0x1ce	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        48	replace.c	FUNCTION_1	IF_1	IF_2
0x1d2	          0x8b4008	                mov eax, dword [rax + 8]	        48	replace.c	FUNCTION_1	IF_1	IF_2
0x1d5	            0x85c0	                           test eax, eax	        48	replace.c	FUNCTION_1	IF_1	IF_2
0x1d7	            0x7511	                           jne 0x400022a	        48	replace.c	FUNCTION_1	IF_1	IF_2
0x1d9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        49	replace.c	FUNCTION_1	IF_1	CALL_2
0x1dd	          0x4889c7	                            mov rdi, rax	        49	replace.c	FUNCTION_1	IF_1	CALL_2
0x1e0	      0xe800000000	                          call 0x4000225	        49	replace.c	FUNCTION_1	IF_1	CALL_2
0x1e5	      0xe9ee000000	                           jmp 0x4000318	        49	replace.c	FUNCTION_1	IF_1	CALL_2
0x1ea	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        50	replace.c	FUNCTION_1	IF_1	ELSE_1	IF_3
0x1ee	          0x8b4008	                mov eax, dword [rax + 8]	        50	replace.c	FUNCTION_1	IF_1	ELSE_1	IF_3
0x1f1	          0x83f801	                              cmp eax, 1	        50	replace.c	FUNCTION_1	IF_1	ELSE_1	IF_3
0x1f4	            0x752a	                           jne 0x4000260	        50	replace.c	FUNCTION_1	IF_1	ELSE_1	IF_3
0x1f6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        51	replace.c	FUNCTION_1	IF_1	ELSE_1	IF_3
0x1fa	          0x4889c7	                            mov rdi, rax	        51	replace.c	FUNCTION_1	IF_1	ELSE_1	IF_3
0x1fd	      0xe800000000	                          call 0x4000242	        51	replace.c	FUNCTION_1	IF_1	ELSE_1	IF_3
0x202	          0x4889c2	                            mov rdx, rax	        51	replace.c	FUNCTION_1	IF_1	ELSE_1	IF_3
0x205	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        51	replace.c	FUNCTION_1	IF_1	ELSE_1	IF_3
0x209	          0x4889c6	                            mov rsi, rax	        51	replace.c	FUNCTION_1	IF_1	ELSE_1	IF_3
0x20c	      0xbf00000000	                              mov edi, 0	        51	replace.c	FUNCTION_1	IF_1	ELSE_1	IF_3
0x211	      0xb800000000	                              mov eax, 0	        51	replace.c	FUNCTION_1	IF_1	ELSE_1	IF_3
0x216	      0xe800000000	                          call 0x400025b	        51	replace.c	FUNCTION_1	IF_1	ELSE_1	IF_3
0x21b	      0xe9b8000000	                           jmp 0x4000318	        51	replace.c	FUNCTION_1	IF_1	ELSE_1	IF_3
0x220	        0x488d55d0	                   lea rdx, [rbp - 0x30]	        56	replace.c	FUNCTION_1	IF_1	ELSE_2	IF_4	CALL_5
0x224	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        56	replace.c	FUNCTION_1	IF_1	ELSE_2	IF_4	CALL_5
0x228	          0x4889d6	                            mov rsi, rdx	        56	replace.c	FUNCTION_1	IF_1	ELSE_2	IF_4	CALL_5
0x22b	          0x4889c7	                            mov rdi, rax	        56	replace.c	FUNCTION_1	IF_1	ELSE_2	IF_4	CALL_5
0x22e	      0xe800000000	                          call 0x4000273	        56	replace.c	FUNCTION_1	IF_1	ELSE_2	IF_4	CALL_5
0x233	            0x85c0	                           test eax, eax	        56	replace.c	FUNCTION_1	IF_1	ELSE_2	IF_4	CALL_5
0x235	            0x7420	                            je 0x4000297	        56	replace.c	FUNCTION_1	IF_1	ELSE_2	IF_4	CALL_5
0x237	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        57	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_6
0x23b	          0x4889c6	                            mov rsi, rax	        57	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_6
0x23e	      0xbf00000000	                              mov edi, 0	        57	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_6
0x243	      0xb800000000	                              mov eax, 0	        57	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_6
0x248	      0xe800000000	                          call 0x400028d	        57	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_6
0x24d	      0xe8aefdffff	                    call sym.const_error	        57	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_6
0x252	      0xe986000000	                           jmp 0x400031d	        57	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_6
0x257	    0x488b05000000	            mov rax, qword [0x0400029e] 	        59	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_7
0x25e	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	        59	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_7
0x262	      0xba00000000	                              mov edx, 0	        59	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_7
0x267	          0x4889ce	                            mov rsi, rcx	        59	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_7
0x26a	          0x4889c7	                            mov rdi, rax	        59	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_7
0x26d	      0xe800000000	                          call 0x40002b2	        59	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_7
0x272	          0x8945c0	             mov dword [rbp - 0x40], eax	        59	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_7
0x275	    0x488b05000000	            mov rax, qword [0x040002bc] 	        61	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_8
0x27c	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	        61	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_8
0x280	      0xba00000000	                              mov edx, 0	        61	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_8
0x285	          0x4889ce	                            mov rsi, rcx	        61	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_8
0x288	          0x4889c7	                            mov rdi, rax	        61	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_8
0x28b	      0xe800000000	                          call 0x40002d0	        61	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_8
0x290	          0x8945c4	             mov dword [rbp - 0x3c], eax	        61	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_8
0x293	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_10
0x296	            0x89c7	                            mov edi, eax	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_10
0x298	      0xe800000000	                          call 0x40002dd	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_10
0x29d	          0x4989c4	                            mov r12, rax	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_10
0x2a0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_10
0x2a4	          0x4889c7	                            mov rdi, rax	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_10
0x2a7	      0xe800000000	                          call 0x40002ec	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_10
0x2ac	          0x4889c3	                            mov rbx, rax	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_10
0x2af	          0x8b45c0	             mov eax, dword [rbp - 0x40]	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_10
0x2b2	            0x89c7	                            mov edi, eax	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_10
0x2b4	      0xe800000000	                          call 0x40002f9	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_10
0x2b9	          0x4889c2	                            mov rdx, rax	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_10
0x2bc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_10
0x2c0	          0x4d89e0	                             mov r8, r12	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_10
0x2c3	          0x4889d9	                            mov rcx, rbx	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_10
0x2c6	          0x4889c6	                            mov rsi, rax	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_10
0x2c9	      0xbf00000000	                              mov edi, 0	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_10
0x2ce	      0xb800000000	                              mov eax, 0	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_10
0x2d3	      0xe800000000	                          call 0x4000318	        63	replace.c	FUNCTION_1	IF_1	ELSE_2	CALL_10
0x2d8	      0xb800000000	                              mov eax, 0	        68	replace.c	FUNCTION_1
0x2dd	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	        69	replace.c	FUNCTION_1
0x2e1	    0x6448331c2528	                xor rbx, qword fs:[0x28]	        69	replace.c	FUNCTION_1
0x2ea	            0x7405	                            je 0x4000331	        69	replace.c	FUNCTION_1
0x2ec	      0xe800000000	                          call 0x4000331	        69	replace.c	FUNCTION_1
0x2f1	        0x4883c450	                           add rsp, 0x50	        69	replace.c	FUNCTION_1
0x2f5	              0x5b	                                 pop rbx	        69	replace.c	FUNCTION_1
0x2f6	            0x415c	                                 pop r12	        69	replace.c	FUNCTION_1
0x2f8	              0x5d	                                 pop rbp	        69	replace.c	FUNCTION_1
0x2f9	              0xc3	                                     ret	        69	replace.c	FUNCTION_1
export_object	CALL,11:FOR,0:SWITCH,0:ELSE,1:functions,0:DO,0:WHILE,0:IF,3	91
0x975	              0x55	                                push rbp	       219	replace.c	FUNCTION_8
0x976	          0x4889e5	                            mov rbp, rsp	       219	replace.c	FUNCTION_8
0x979	    0x4881eca00000	                           sub rsp, 0xa0	       219	replace.c	FUNCTION_8
0x980	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	       219	replace.c	FUNCTION_8
0x987	    0x89b574ffffff	             mov dword [rbp - 0x8c], esi	       219	replace.c	FUNCTION_8
0x98d	    0x899570ffffff	             mov dword [rbp - 0x90], edx	       219	replace.c	FUNCTION_8
0x993	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       219	replace.c	FUNCTION_8
0x99a	    0x64488b042528	                mov rax, qword fs:[0x28]	       219	replace.c	FUNCTION_8
0x9a3	        0x488945f8	                mov qword [rbp - 8], rax	       219	replace.c	FUNCTION_8
0x9a7	            0x31c0	                            xor eax, eax	       219	replace.c	FUNCTION_8
0x9a9	        0x488d5590	                   lea rdx, [rbp - 0x70]	       220	replace.c	FUNCTION_8
0x9ad	      0xb800000000	                              mov eax, 0	       220	replace.c	FUNCTION_8
0x9b2	      0xb90c000000	                            mov ecx, 0xc	       220	replace.c	FUNCTION_8
0x9b7	          0x4889d7	                            mov rdi, rdx	       220	replace.c	FUNCTION_8
0x9ba	          0xf348ab	              rep stosq qword [rdi], rax	       220	replace.c	FUNCTION_8
0x9bd	    0x48c745980000	               mov qword [rbp - 0x68], 0	       220	replace.c	FUNCTION_8
0x9c5	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       220	replace.c	FUNCTION_8
0x9cd	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       223	replace.c	FUNCTION_8	CALL_1
0x9d4	      0xbab6010000	                          mov edx, 0x1b6	       223	replace.c	FUNCTION_8	CALL_1
0x9d9	      0xbe41020000	                          mov esi, 0x241	       223	replace.c	FUNCTION_8	CALL_1
0x9de	          0x4889c7	                            mov rdi, rax	       223	replace.c	FUNCTION_8	CALL_1
0x9e1	      0xb800000000	                              mov eax, 0	       223	replace.c	FUNCTION_8	CALL_1
0x9e6	      0xe800000000	                          call 0x4000a2b	       223	replace.c	FUNCTION_8	CALL_1
0x9eb	          0x89458c	             mov dword [rbp - 0x74], eax	       223	replace.c	FUNCTION_8	CALL_1
0x9ee	        0x837d8c00	               cmp dword [rbp - 0x74], 0	       224	replace.c	FUNCTION_8	IF_1
0x9f2	            0x7923	                           jns 0x4000a57	       224	replace.c	FUNCTION_8	IF_1
0x9f4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       225	replace.c	FUNCTION_8	CALL_2
0x9fb	          0x4889c6	                            mov rsi, rax	       225	replace.c	FUNCTION_8	CALL_2
0x9fe	      0xbf00000000	                              mov edi, 0	       225	replace.c	FUNCTION_8	CALL_2
0xa03	      0xb800000000	                              mov eax, 0	       225	replace.c	FUNCTION_8	CALL_2
0xa08	      0xe800000000	                          call 0x4000a4d	       225	replace.c	FUNCTION_8	CALL_2
0xa0d	      0xe8eef5ffff	                    call sym.const_error	       225	replace.c	FUNCTION_8	CALL_2
0xa12	      0xe9cd000000	                           jmp 0x4000b24	       225	replace.c	FUNCTION_8	CALL_2
0xa17	        0x488d4590	                   lea rax, [rbp - 0x70]	       227	replace.c	FUNCTION_8	CALL_3
0xa1b	        0x4883c008	                              add rax, 8	       227	replace.c	FUNCTION_8	CALL_3
0xa1f	      0xbe00000000	                              mov esi, 0	       227	replace.c	FUNCTION_8	CALL_3
0xa24	          0x4889c7	                            mov rdi, rax	       227	replace.c	FUNCTION_8	CALL_3
0xa27	      0xe800000000	                          call 0x4000a6c	       227	replace.c	FUNCTION_8	CALL_3
0xa2c	        0x488d4590	                   lea rax, [rbp - 0x70]	       228	replace.c	FUNCTION_8	CALL_4
0xa30	        0x4883c008	                              add rax, 8	       228	replace.c	FUNCTION_8	CALL_4
0xa34	      0xbe00000000	                              mov esi, 0	       228	replace.c	FUNCTION_8	CALL_4
0xa39	          0x4889c7	                            mov rdi, rax	       228	replace.c	FUNCTION_8	CALL_4
0xa3c	      0xe800000000	                          call 0x4000a81	       228	replace.c	FUNCTION_8	CALL_4
0xa41	    0x83bd70ffffff	               cmp dword [rbp - 0x90], 0	       229	replace.c	FUNCTION_8	IF_2
0xa48	            0x7425	                            je 0x4000aaf	       229	replace.c	FUNCTION_8	IF_2
0xa4a	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	       230	replace.c	FUNCTION_8	CALL_6
0xa50	            0x89c7	                            mov edi, eax	       230	replace.c	FUNCTION_8	CALL_6
0xa52	      0xe800000000	                          call 0x4000a97	       230	replace.c	FUNCTION_8	CALL_6
0xa57	          0x4889c2	                            mov rdx, rax	       230	replace.c	FUNCTION_8	CALL_6
0xa5a	        0x488d4590	                   lea rax, [rbp - 0x70]	       230	replace.c	FUNCTION_8	CALL_6
0xa5e	        0x4883c008	                              add rax, 8	       230	replace.c	FUNCTION_8	CALL_6
0xa62	          0x4889d6	                            mov rsi, rdx	       230	replace.c	FUNCTION_8	CALL_6
0xa65	          0x4889c7	                            mov rdi, rax	       230	replace.c	FUNCTION_8	CALL_6
0xa68	      0xe800000000	                          call 0x4000aad	       230	replace.c	FUNCTION_8	CALL_6
0xa6d	            0xeb15	                           jmp 0x4000ac4	       230	replace.c	FUNCTION_8	CALL_6
0xa6f	        0x488d4590	                   lea rax, [rbp - 0x70]	       232	replace.c	FUNCTION_8	CALL_7
0xa73	        0x4883c008	                              add rax, 8	       232	replace.c	FUNCTION_8	CALL_7
0xa77	      0xbe00000000	                              mov esi, 0	       232	replace.c	FUNCTION_8	CALL_7
0xa7c	          0x4889c7	                            mov rdi, rax	       232	replace.c	FUNCTION_8	CALL_7
0xa7f	      0xe800000000	                          call 0x4000ac4	       232	replace.c	FUNCTION_8	CALL_7
0xa84	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       233	replace.c	FUNCTION_8	CALL_9
0xa8b	          0x4889c7	                            mov rdi, rax	       233	replace.c	FUNCTION_8	CALL_9
0xa8e	      0xe800000000	                          call 0x4000ad3	       233	replace.c	FUNCTION_8	CALL_9
0xa93	          0x4889c2	                            mov rdx, rax	       233	replace.c	FUNCTION_8	CALL_9
0xa96	        0x488d4590	                   lea rax, [rbp - 0x70]	       233	replace.c	FUNCTION_8	CALL_9
0xa9a	        0x4883c008	                              add rax, 8	       233	replace.c	FUNCTION_8	CALL_9
0xa9e	          0x4889d6	                            mov rsi, rdx	       233	replace.c	FUNCTION_8	CALL_9
0xaa1	          0x4889c7	                            mov rdi, rax	       233	replace.c	FUNCTION_8	CALL_9
0xaa4	      0xe800000000	                          call 0x4000ae9	       233	replace.c	FUNCTION_8	CALL_9
0xaa9	         0xfb645d8	            movzx eax, byte [rbp - 0x28]	       234	replace.c	FUNCTION_8
0xaad	          0x83c808	                               or eax, 8	       234	replace.c	FUNCTION_8
0xab0	          0x8845d8	               mov byte [rbp - 0x28], al	       234	replace.c	FUNCTION_8
0xab3	          0x8b458c	             mov eax, dword [rbp - 0x74]	       235	replace.c	FUNCTION_8
0xab6	          0x8945c0	             mov dword [rbp - 0x40], eax	       235	replace.c	FUNCTION_8
0xab9	        0x488d4590	                   lea rax, [rbp - 0x70]	       237	replace.c	FUNCTION_8	IF_3	CALL_10
0xabd	          0x4889c7	                            mov rdi, rax	       237	replace.c	FUNCTION_8	IF_3	CALL_10
0xac0	      0xe800000000	                          call 0x4000b05	       237	replace.c	FUNCTION_8	IF_3	CALL_10
0xac5	            0x85c0	                           test eax, eax	       237	replace.c	FUNCTION_8	IF_3	CALL_10
0xac7	            0x7416	                            je 0x4000b1f	       237	replace.c	FUNCTION_8	IF_3	CALL_10
0xac9	      0xbf00000000	                              mov edi, 0	       238	replace.c	FUNCTION_8	CALL_11
0xace	      0xb800000000	                              mov eax, 0	       238	replace.c	FUNCTION_8	CALL_11
0xad3	      0xe800000000	                          call 0x4000b18	       238	replace.c	FUNCTION_8	CALL_11
0xad8	      0xe823f5ffff	                    call sym.const_error	       238	replace.c	FUNCTION_8	CALL_11
0xadd	            0xeb05	                           jmp 0x4000b24	       238	replace.c	FUNCTION_8	CALL_11
0xadf	      0xb800000000	                              mov eax, 0	       239	replace.c	FUNCTION_8
0xae4	        0x488b4df8	                mov rcx, qword [rbp - 8]	       240	replace.c	FUNCTION_8
0xae8	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       240	replace.c	FUNCTION_8
0xaf1	            0x7405	                            je 0x4000b38	       240	replace.c	FUNCTION_8
0xaf3	      0xe800000000	                          call 0x4000b38	       240	replace.c	FUNCTION_8
0xaf8	              0xc9	                                   leave	       240	replace.c	FUNCTION_8
0xaf9	              0xc3	                                     ret	       240	replace.c	FUNCTION_8
list_replace_refs	CALL,5:FOR,0:SWITCH,0:ELSE,3:functions,0:DO,0:WHILE,0:IF,4	62
0x2fa	              0x55	                                push rbp	        72	replace.c	FUNCTION_2
0x2fb	          0x4889e5	                            mov rbp, rsp	        72	replace.c	FUNCTION_2
0x2fe	        0x4883ec30	                           sub rsp, 0x30	        72	replace.c	FUNCTION_2
0x302	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        72	replace.c	FUNCTION_2
0x306	        0x488975d0	             mov qword [rbp - 0x30], rsi	        72	replace.c	FUNCTION_2
0x30a	    0x64488b042528	                mov rax, qword fs:[0x28]	        72	replace.c	FUNCTION_2
0x313	        0x488945f8	                mov qword [rbp - 8], rax	        72	replace.c	FUNCTION_2
0x317	            0x31c0	                            xor eax, eax	        72	replace.c	FUNCTION_2
0x319	      0x48837dd800	               cmp qword [rbp - 0x28], 0	        75	replace.c	FUNCTION_2	IF_1
0x31e	            0x7508	                           jne 0x4000368	        75	replace.c	FUNCTION_2	IF_1
0x320	    0x48c745d80000	               mov qword [rbp - 0x28], 0	        76	replace.c	FUNCTION_2	IF_1
0x328	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        77	replace.c	FUNCTION_2
0x32c	        0x488945e0	             mov qword [rbp - 0x20], rax	        77	replace.c	FUNCTION_2
0x330	      0x48837dd000	               cmp qword [rbp - 0x30], 0	        79	replace.c	FUNCTION_2	IF_2	CALL_1
0x335	            0x7420	                            je 0x4000397	        79	replace.c	FUNCTION_2	IF_2	CALL_1
0x337	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        79	replace.c	FUNCTION_2	IF_2	CALL_1
0x33b	           0xfb600	                   movzx eax, byte [rax]	        79	replace.c	FUNCTION_2	IF_2	CALL_1
0x33e	            0x84c0	                             test al, al	        79	replace.c	FUNCTION_2	IF_2	CALL_1
0x340	            0x7415	                            je 0x4000397	        79	replace.c	FUNCTION_2	IF_2	CALL_1
0x342	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        79	replace.c	FUNCTION_2	IF_2	CALL_1
0x346	      0xbe00000000	                              mov esi, 0	        79	replace.c	FUNCTION_2	IF_2	CALL_1
0x34b	          0x4889c7	                            mov rdi, rax	        79	replace.c	FUNCTION_2	IF_2	CALL_1
0x34e	      0xe800000000	                          call 0x4000393	        79	replace.c	FUNCTION_2	IF_2	CALL_1
0x353	            0x85c0	                           test eax, eax	        79	replace.c	FUNCTION_2	IF_2	CALL_1
0x355	            0x7509	                           jne 0x40003a0	        79	replace.c	FUNCTION_2	IF_2	CALL_1
0x357	    0xc745e8000000	               mov dword [rbp - 0x18], 0	        80	replace.c	FUNCTION_2	IF_2
0x35e	            0xeb59	                           jmp 0x40003f9	        80	replace.c	FUNCTION_2	IF_2
0x360	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        81	replace.c	FUNCTION_2	ELSE_1	IF_3	CALL_2
0x364	      0xbe00000000	                              mov esi, 0	        81	replace.c	FUNCTION_2	ELSE_1	IF_3	CALL_2
0x369	          0x4889c7	                            mov rdi, rax	        81	replace.c	FUNCTION_2	ELSE_1	IF_3	CALL_2
0x36c	      0xe800000000	                          call 0x40003b1	        81	replace.c	FUNCTION_2	ELSE_1	IF_3	CALL_2
0x371	            0x85c0	                           test eax, eax	        81	replace.c	FUNCTION_2	ELSE_1	IF_3	CALL_2
0x373	            0x7509	                           jne 0x40003be	        81	replace.c	FUNCTION_2	ELSE_1	IF_3	CALL_2
0x375	    0xc745e8010000	               mov dword [rbp - 0x18], 1	        82	replace.c	FUNCTION_2	ELSE_1	IF_3
0x37c	            0xeb3b	                           jmp 0x40003f9	        82	replace.c	FUNCTION_2	ELSE_1	IF_3
0x37e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        83	replace.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x382	      0xbe00000000	                              mov esi, 0	        83	replace.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x387	          0x4889c7	                            mov rdi, rax	        83	replace.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x38a	      0xe800000000	                          call 0x40003cf	        83	replace.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x38f	            0x85c0	                           test eax, eax	        83	replace.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x391	            0x7509	                           jne 0x40003dc	        83	replace.c	FUNCTION_2	ELSE_2	IF_4	CALL_3
0x393	    0xc745e8020000	               mov dword [rbp - 0x18], 2	        84	replace.c	FUNCTION_2	ELSE_2	IF_4
0x39a	            0xeb1d	                           jmp 0x40003f9	        84	replace.c	FUNCTION_2	ELSE_2	IF_4
0x39c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        86	replace.c	FUNCTION_2	ELSE_3	CALL_4
0x3a0	          0x4889c6	                            mov rsi, rax	        86	replace.c	FUNCTION_2	ELSE_3	CALL_4
0x3a3	      0xbf00000000	                              mov edi, 0	        86	replace.c	FUNCTION_2	ELSE_3	CALL_4
0x3a8	      0xb800000000	                              mov eax, 0	        86	replace.c	FUNCTION_2	ELSE_3	CALL_4
0x3ad	      0xe800000000	                          call 0x40003f2	        86	replace.c	FUNCTION_2	ELSE_3	CALL_4
0x3b2	      0xe849fcffff	                    call sym.const_error	        86	replace.c	FUNCTION_2	ELSE_3	CALL_4
0x3b7	            0xeb1d	                           jmp 0x4000416	        86	replace.c	FUNCTION_2	ELSE_3	CALL_4
0x3b9	    0x488b05000000	            mov rax, qword [0x04000400] 	        90	replace.c	FUNCTION_2	CALL_5
0x3c0	        0x488d55e0	                   lea rdx, [rbp - 0x20]	        90	replace.c	FUNCTION_2	CALL_5
0x3c4	      0xbe00000000	                              mov esi, 0	        90	replace.c	FUNCTION_2	CALL_5
0x3c9	          0x4889c7	                            mov rdi, rax	        90	replace.c	FUNCTION_2	CALL_5
0x3cc	      0xe800000000	                          call 0x4000411	        90	replace.c	FUNCTION_2	CALL_5
0x3d1	      0xb800000000	                              mov eax, 0	        92	replace.c	FUNCTION_2
0x3d6	        0x488b4df8	                mov rcx, qword [rbp - 8]	        93	replace.c	FUNCTION_2
0x3da	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        93	replace.c	FUNCTION_2
0x3e3	            0x7405	                            je 0x400042a	        93	replace.c	FUNCTION_2
0x3e5	      0xe800000000	                          call 0x400042a	        93	replace.c	FUNCTION_2
0x3ea	              0xc9	                                   leave	        93	replace.c	FUNCTION_2
0x3eb	              0xc3	                                     ret	        93	replace.c	FUNCTION_2
convert_graft_file	CALL,13:FOR,0:SWITCH,0:ELSE,0:functions,0:DO,0:WHILE,1:IF,4	97
0x17be	              0x55	                                push rbp	       489	replace.c	FUNCTION_15
0x17bf	          0x4889e5	                            mov rbp, rsp	       489	replace.c	FUNCTION_15
0x17c2	              0x53	                                push rbx	       489	replace.c	FUNCTION_15
0x17c3	        0x4883ec78	                           sub rsp, 0x78	       489	replace.c	FUNCTION_15
0x17c7	          0x897d8c	             mov dword [rbp - 0x74], edi	       489	replace.c	FUNCTION_15
0x17ca	    0x64488b042528	                mov rax, qword fs:[0x28]	       489	replace.c	FUNCTION_15
0x17d3	        0x488945e8	             mov qword [rbp - 0x18], rax	       489	replace.c	FUNCTION_15
0x17d7	            0x31c0	                            xor eax, eax	       489	replace.c	FUNCTION_15
0x17d9	      0xe800000000	                          call 0x400181e	       490	replace.c	FUNCTION_15	CALL_1
0x17de	        0x48894590	             mov qword [rbp - 0x70], rax	       490	replace.c	FUNCTION_15	CALL_1
0x17e2	        0x488b4590	             mov rax, qword [rbp - 0x70]	       491	replace.c	FUNCTION_15	CALL_2
0x17e6	      0xbe00000000	                              mov esi, 0	       491	replace.c	FUNCTION_15	CALL_2
0x17eb	          0x4889c7	                            mov rdi, rax	       491	replace.c	FUNCTION_15	CALL_2
0x17ee	      0xe800000000	                          call 0x4001833	       491	replace.c	FUNCTION_15	CALL_2
0x17f3	        0x48894598	             mov qword [rbp - 0x68], rax	       491	replace.c	FUNCTION_15	CALL_2
0x17f7	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       492	replace.c	FUNCTION_15
0x17ff	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       492	replace.c	FUNCTION_15
0x1807	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       492	replace.c	FUNCTION_15
0x180f	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       492	replace.c	FUNCTION_15
0x1817	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       492	replace.c	FUNCTION_15
0x181f	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       492	replace.c	FUNCTION_15
0x1827	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       493	replace.c	FUNCTION_15
0x182f	    0xc745a8000000	               mov dword [rbp - 0x58], 0	       493	replace.c	FUNCTION_15
0x1836	    0xc745ac000000	               mov dword [rbp - 0x54], 0	       493	replace.c	FUNCTION_15
0x183d	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       495	replace.c	FUNCTION_15	IF_1
0x1842	            0x7571	                           jne 0x40018f5	       495	replace.c	FUNCTION_15	IF_1
0x1844	      0xb8ffffffff	                     mov eax, 0xffffffff	       496	replace.c	FUNCTION_15	IF_1
0x1849	      0xe9dd000000	                           jmp 0x400196b	       496	replace.c	FUNCTION_15	IF_1
0x184e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       499	replace.c	FUNCTION_15	WHILE_1	IF_2
0x1852	           0xfb600	                   movzx eax, byte [rax]	       499	replace.c	FUNCTION_15	WHILE_1	IF_2
0x1855	            0x3c23	                            cmp al, 0x23	       499	replace.c	FUNCTION_15	WHILE_1	IF_2
0x1857	            0x7502	                           jne 0x400189b	       499	replace.c	FUNCTION_15	WHILE_1	IF_2
0x1859	            0xeb5a	                           jmp 0x40018f5	       500	replace.c	FUNCTION_15	WHILE_1	IF_2
0x185b	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       502	replace.c	FUNCTION_15	WHILE_1	CALL_4
0x185f	        0x488d45a0	                   lea rax, [rbp - 0x60]	       502	replace.c	FUNCTION_15	WHILE_1	CALL_4
0x1863	          0x4889d6	                            mov rsi, rdx	       502	replace.c	FUNCTION_15	WHILE_1	CALL_4
0x1866	          0x4889c7	                            mov rdi, rax	       502	replace.c	FUNCTION_15	WHILE_1	CALL_4
0x1869	      0xe800000000	                          call 0x40018ae	       502	replace.c	FUNCTION_15	WHILE_1	CALL_4
0x186e	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       503	replace.c	FUNCTION_15	WHILE_1	IF_3	CALL_5
0x1871	            0x85c0	                           test eax, eax	       503	replace.c	FUNCTION_15	WHILE_1	IF_3	CALL_5
0x1873	            0x7434	                            je 0x40018e9	       503	replace.c	FUNCTION_15	WHILE_1	IF_3	CALL_5
0x1875	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	       503	replace.c	FUNCTION_15	WHILE_1	IF_3	CALL_5
0x1879	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       503	replace.c	FUNCTION_15	WHILE_1	IF_3	CALL_5
0x187c	          0x8b558c	             mov edx, dword [rbp - 0x74]	       503	replace.c	FUNCTION_15	WHILE_1	IF_3	CALL_5
0x187f	      0xb901000000	                              mov ecx, 1	       503	replace.c	FUNCTION_15	WHILE_1	IF_3	CALL_5
0x1884	            0x89c7	                            mov edi, eax	       503	replace.c	FUNCTION_15	WHILE_1	IF_3	CALL_5
0x1886	      0xe855fcffff	                   call sym.create_graft	       503	replace.c	FUNCTION_15	WHILE_1	IF_3	CALL_5
0x188b	            0x85c0	                           test eax, eax	       503	replace.c	FUNCTION_15	WHILE_1	IF_3	CALL_5
0x188d	            0x741a	                            je 0x40018e9	       503	replace.c	FUNCTION_15	WHILE_1	IF_3	CALL_5
0x188f	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       504	replace.c	FUNCTION_15	WHILE_1	CALL_6
0x1893	        0x488d45d0	                   lea rax, [rbp - 0x30]	       504	replace.c	FUNCTION_15	WHILE_1	CALL_6
0x1897	      0xbe00000000	                              mov esi, 0	       504	replace.c	FUNCTION_15	WHILE_1	CALL_6
0x189c	          0x4889c7	                            mov rdi, rax	       504	replace.c	FUNCTION_15	WHILE_1	CALL_6
0x189f	      0xb800000000	                              mov eax, 0	       504	replace.c	FUNCTION_15	WHILE_1	CALL_6
0x18a4	      0xe800000000	                          call 0x40018e9	       504	replace.c	FUNCTION_15	WHILE_1	CALL_6
0x18a9	        0x488d45a0	                   lea rax, [rbp - 0x60]	       505	replace.c	FUNCTION_15	WHILE_1	CALL_7
0x18ad	          0x4889c7	                            mov rdi, rax	       505	replace.c	FUNCTION_15	WHILE_1	CALL_7
0x18b0	      0xe800000000	                          call 0x40018f5	       505	replace.c	FUNCTION_15	WHILE_1	CALL_7
0x18b5	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       498	replace.c	FUNCTION_15	WHILE_1	CALL_3
0x18b9	        0x488d45b0	                   lea rax, [rbp - 0x50]	       498	replace.c	FUNCTION_15	WHILE_1	CALL_3
0x18bd	          0x4889d6	                            mov rsi, rdx	       498	replace.c	FUNCTION_15	WHILE_1	CALL_3
0x18c0	          0x4889c7	                            mov rdi, rax	       498	replace.c	FUNCTION_15	WHILE_1	CALL_3
0x18c3	      0xe800000000	                          call 0x4001908	       498	replace.c	FUNCTION_15	WHILE_1	CALL_3
0x18c8	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       498	replace.c	FUNCTION_15	WHILE_1	CALL_3
0x18cb	            0x7581	                           jne 0x400188e	       498	replace.c	FUNCTION_15	WHILE_1	CALL_3
0x18cd	        0x488b4598	             mov rax, qword [rbp - 0x68]	       507	replace.c	FUNCTION_15	CALL_8
0x18d1	          0x4889c7	                            mov rdi, rax	       507	replace.c	FUNCTION_15	CALL_8
0x18d4	      0xe800000000	                          call 0x4001919	       507	replace.c	FUNCTION_15	CALL_8
0x18d9	        0x488d45b0	                   lea rax, [rbp - 0x50]	       509	replace.c	FUNCTION_15	CALL_9
0x18dd	          0x4889c7	                            mov rdi, rax	       509	replace.c	FUNCTION_15	CALL_9
0x18e0	      0xe800000000	                          call 0x4001925	       509	replace.c	FUNCTION_15	CALL_9
0x18e5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       511	replace.c	FUNCTION_15	IF_4
0x18e9	          0x4885c0	                           test rax, rax	       511	replace.c	FUNCTION_15	IF_4
0x18ec	            0x750e	                           jne 0x400193c	       511	replace.c	FUNCTION_15	IF_4
0x18ee	        0x488b4590	             mov rax, qword [rbp - 0x70]	       512	replace.c	FUNCTION_15	CALL_10
0x18f2	          0x4889c7	                            mov rdi, rax	       512	replace.c	FUNCTION_15	CALL_10
0x18f5	      0xe800000000	                          call 0x400193a	       512	replace.c	FUNCTION_15	CALL_10
0x18fa	            0xeb2f	                           jmp 0x400196b	       512	replace.c	FUNCTION_15	CALL_10
0x18fc	        0x488b5de0	             mov rbx, qword [rbp - 0x20]	       514	replace.c	FUNCTION_15	CALL_12
0x1900	      0xbf00000000	                              mov edi, 0	       514	replace.c	FUNCTION_15	CALL_12
0x1905	      0xe8d0e7ffff	                               call sym.	       514	replace.c	FUNCTION_15	CALL_12
0x190a	          0x4889de	                            mov rsi, rbx	       514	replace.c	FUNCTION_15	CALL_12
0x190d	          0x4889c7	                            mov rdi, rax	       514	replace.c	FUNCTION_15	CALL_12
0x1910	      0xb800000000	                              mov eax, 0	       514	replace.c	FUNCTION_15	CALL_12
0x1915	      0xe800000000	                          call 0x400195a	       514	replace.c	FUNCTION_15	CALL_12
0x191a	        0x488d45d0	                   lea rax, [rbp - 0x30]	       515	replace.c	FUNCTION_15	CALL_13
0x191e	          0x4889c7	                            mov rdi, rax	       515	replace.c	FUNCTION_15	CALL_13
0x1921	      0xe800000000	                          call 0x4001966	       515	replace.c	FUNCTION_15	CALL_13
0x1926	      0xb8ffffffff	                     mov eax, 0xffffffff	       517	replace.c	FUNCTION_15
0x192b	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       518	replace.c	FUNCTION_15
0x192f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       518	replace.c	FUNCTION_15
0x1938	            0x7405	                            je 0x400197f	       518	replace.c	FUNCTION_15
0x193a	      0xe800000000	                          call 0x400197f	       518	replace.c	FUNCTION_15
0x193f	        0x4883c478	                           add rsp, 0x78	       518	replace.c	FUNCTION_15
0x1943	              0x5b	                                 pop rbx	       518	replace.c	FUNCTION_15
0x1944	              0x5d	                                 pop rbp	       518	replace.c	FUNCTION_15
0x1945	              0xc3	                                     ret	       518	replace.c	FUNCTION_15
import_object	CALL,22:FOR,0:SWITCH,0:ELSE,1:functions,0:DO,0:WHILE,0:IF,8	159
0xafa	              0x55	                                push rbp	       249	replace.c	FUNCTION_9
0xafb	          0x4889e5	                            mov rbp, rsp	       249	replace.c	FUNCTION_9
0xafe	    0x4881ec500100	                          sub rsp, 0x150	       249	replace.c	FUNCTION_9
0xb05	    0x4889bdc8feff	            mov qword [rbp - 0x138], rdi	       249	replace.c	FUNCTION_9
0xb0c	    0x89b5c4feffff	            mov dword [rbp - 0x13c], esi	       249	replace.c	FUNCTION_9
0xb12	    0x8995c0feffff	            mov dword [rbp - 0x140], edx	       249	replace.c	FUNCTION_9
0xb18	    0x48898db8feff	            mov qword [rbp - 0x148], rcx	       249	replace.c	FUNCTION_9
0xb1f	    0x64488b042528	                mov rax, qword fs:[0x28]	       249	replace.c	FUNCTION_9
0xb28	        0x488945f8	                mov qword [rbp - 8], rax	       249	replace.c	FUNCTION_9
0xb2c	            0x31c0	                            xor eax, eax	       249	replace.c	FUNCTION_9
0xb2e	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	       252	replace.c	FUNCTION_9	CALL_1
0xb35	      0xbe00000000	                              mov esi, 0	       252	replace.c	FUNCTION_9	CALL_1
0xb3a	          0x4889c7	                            mov rdi, rax	       252	replace.c	FUNCTION_9	CALL_1
0xb3d	      0xb800000000	                              mov eax, 0	       252	replace.c	FUNCTION_9	CALL_1
0xb42	      0xe800000000	                          call 0x4000b87	       252	replace.c	FUNCTION_9	CALL_1
0xb47	    0x8985d8feffff	            mov dword [rbp - 0x128], eax	       252	replace.c	FUNCTION_9	CALL_1
0xb4d	    0x83bdd8feffff	              cmp dword [rbp - 0x128], 0	       253	replace.c	FUNCTION_9	IF_1
0xb54	            0x7923	                           jns 0x4000bb9	       253	replace.c	FUNCTION_9	IF_1
0xb56	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	       254	replace.c	FUNCTION_9	CALL_2
0xb5d	          0x4889c6	                            mov rsi, rax	       254	replace.c	FUNCTION_9	CALL_2
0xb60	      0xbf00000000	                              mov edi, 0	       254	replace.c	FUNCTION_9	CALL_2
0xb65	      0xb800000000	                              mov eax, 0	       254	replace.c	FUNCTION_9	CALL_2
0xb6a	      0xe800000000	                          call 0x4000baf	       254	replace.c	FUNCTION_9	CALL_2
0xb6f	      0xe88cf4ffff	                    call sym.const_error	       254	replace.c	FUNCTION_9	CALL_2
0xb74	      0xe98c020000	                           jmp 0x4000e45	       254	replace.c	FUNCTION_9	CALL_2
0xb79	    0x83bdc0feffff	              cmp dword [rbp - 0x140], 0	       256	replace.c	FUNCTION_9	IF_2
0xb80	     0xf85d8010000	                           jne 0x4000d9e	       256	replace.c	FUNCTION_9	IF_2
0xb86	    0x83bdc4feffff	              cmp dword [rbp - 0x13c], 2	       256	replace.c	FUNCTION_9	IF_2
0xb8d	     0xf85cb010000	                           jne 0x4000d9e	       256	replace.c	FUNCTION_9	IF_2
0xb93	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	       257	replace.c	FUNCTION_9	IF_2
0xb9e	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	       257	replace.c	FUNCTION_9	IF_2
0xba9	    0x488d9500ffff	                  lea rdx, [rbp - 0x100]	       258	replace.c	FUNCTION_9	IF_2
0xbb0	      0xb800000000	                              mov eax, 0	       258	replace.c	FUNCTION_9	IF_2
0xbb5	      0xb90c000000	                            mov ecx, 0xc	       258	replace.c	FUNCTION_9	IF_2
0xbba	          0x4889d7	                            mov rdi, rdx	       258	replace.c	FUNCTION_9	IF_2
0xbbd	          0xf348ab	              rep stosq qword [rdi], rax	       258	replace.c	FUNCTION_9	IF_2
0xbc0	    0x48c78508ffff	               mov qword [rbp - 0xf8], 0	       258	replace.c	FUNCTION_9	IF_2
0xbcb	    0x48c78518ffff	               mov qword [rbp - 0xe8], 0	       258	replace.c	FUNCTION_9	IF_2
0xbd6	    0x48c785e0feff	              mov qword [rbp - 0x120], 0	       259	replace.c	FUNCTION_9	IF_2
0xbe1	    0x48c785e8feff	              mov qword [rbp - 0x118], 0	       259	replace.c	FUNCTION_9	IF_2
0xbec	    0x48c785f0feff	              mov qword [rbp - 0x110], 0	       259	replace.c	FUNCTION_9	IF_2
0xbf7	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	       261	replace.c	FUNCTION_9	IF_2
0xbfe	    0x48898500ffff	            mov qword [rbp - 0x100], rax	       261	replace.c	FUNCTION_9	IF_2
0xc05	     0xfb68548ffff	            movzx eax, byte [rbp - 0xb8]	       262	replace.c	FUNCTION_9	IF_2
0xc0c	          0x83c808	                               or eax, 8	       262	replace.c	FUNCTION_9	IF_2
0xc0f	    0x888548ffffff	               mov byte [rbp - 0xb8], al	       262	replace.c	FUNCTION_9	IF_2
0xc15	    0x8b85d8feffff	            mov eax, dword [rbp - 0x128]	       263	replace.c	FUNCTION_9	IF_2
0xc1b	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	       263	replace.c	FUNCTION_9	IF_2
0xc21	    0xc78530ffffff	     mov dword [rbp - 0xd0], 0xffffffff 	       264	replace.c	FUNCTION_9	IF_2
0xc2b	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	       266	replace.c	FUNCTION_9	IF_2	IF_3	CALL_3
0xc32	          0x4889c7	                            mov rdi, rax	       266	replace.c	FUNCTION_9	IF_2	IF_3	CALL_3
0xc35	      0xe800000000	                          call 0x4000c7a	       266	replace.c	FUNCTION_9	IF_2	IF_3	CALL_3
0xc3a	            0x85c0	                           test eax, eax	       266	replace.c	FUNCTION_9	IF_2	IF_3	CALL_3
0xc3c	            0x7426	                            je 0x4000ca4	       266	replace.c	FUNCTION_9	IF_2	IF_3	CALL_3
0xc3e	    0x8b85d8feffff	            mov eax, dword [rbp - 0x128]	       267	replace.c	FUNCTION_9	IF_2	IF_3	CALL_4
0xc44	            0x89c7	                            mov edi, eax	       267	replace.c	FUNCTION_9	IF_2	IF_3	CALL_4
0xc46	      0xe800000000	                          call 0x4000c8b	       267	replace.c	FUNCTION_9	IF_2	IF_3	CALL_4
0xc4b	      0xbf00000000	                              mov edi, 0	       268	replace.c	FUNCTION_9	IF_2	IF_3	CALL_5
0xc50	      0xb800000000	                              mov eax, 0	       268	replace.c	FUNCTION_9	IF_2	IF_3	CALL_5
0xc55	      0xe800000000	                          call 0x4000c9a	       268	replace.c	FUNCTION_9	IF_2	IF_3	CALL_5
0xc5a	      0xe8a1f3ffff	                    call sym.const_error	       268	replace.c	FUNCTION_9	IF_2	IF_3	CALL_5
0xc5f	      0xe9a1010000	                           jmp 0x4000e45	       268	replace.c	FUNCTION_9	IF_2	IF_3	CALL_5
0xc64	    0x8b8d30ffffff	             mov ecx, dword [rbp - 0xd0]	       271	replace.c	FUNCTION_9	IF_2	IF_4	CALL_6
0xc6a	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	       271	replace.c	FUNCTION_9	IF_2	IF_4	CALL_6
0xc71	      0xba29000000	                           mov edx, 0x29	       271	replace.c	FUNCTION_9	IF_2	IF_4	CALL_6
0xc76	            0x89ce	                            mov esi, ecx	       271	replace.c	FUNCTION_9	IF_2	IF_4	CALL_6
0xc78	          0x4889c7	                            mov rdi, rax	       271	replace.c	FUNCTION_9	IF_2	IF_4	CALL_6
0xc7b	      0xe800000000	                          call 0x4000cc0	       271	replace.c	FUNCTION_9	IF_2	IF_4	CALL_6
0xc80	          0x4885c0	                           test rax, rax	       271	replace.c	FUNCTION_9	IF_2	IF_4	CALL_6
0xc83	            0x7938	                           jns 0x4000cfd	       271	replace.c	FUNCTION_9	IF_2	IF_4	CALL_6
0xc85	      0xbf00000000	                              mov edi, 0	       272	replace.c	FUNCTION_9	IF_2	IF_4	CALL_7
0xc8a	      0xb800000000	                              mov eax, 0	       272	replace.c	FUNCTION_9	IF_2	IF_4	CALL_7
0xc8f	      0xe800000000	                          call 0x4000cd4	       272	replace.c	FUNCTION_9	IF_2	IF_4	CALL_7
0xc94	      0xe867f3ffff	                    call sym.const_error	       272	replace.c	FUNCTION_9	IF_2	IF_4	CALL_7
0xc99	    0x8b85d8feffff	            mov eax, dword [rbp - 0x128]	       273	replace.c	FUNCTION_9	IF_2	IF_4	CALL_8
0xc9f	            0x89c7	                            mov edi, eax	       273	replace.c	FUNCTION_9	IF_2	IF_4	CALL_8
0xca1	      0xe800000000	                          call 0x4000ce6	       273	replace.c	FUNCTION_9	IF_2	IF_4	CALL_8
0xca6	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	       274	replace.c	FUNCTION_9	IF_2	IF_4	CALL_9
0xcac	            0x89c7	                            mov edi, eax	       274	replace.c	FUNCTION_9	IF_2	IF_4	CALL_9
0xcae	      0xe800000000	                          call 0x4000cf3	       274	replace.c	FUNCTION_9	IF_2	IF_4	CALL_9
0xcb3	      0xb8ffffffff	                     mov eax, 0xffffffff	       275	replace.c	FUNCTION_9	IF_2	IF_4
0xcb8	      0xe948010000	                           jmp 0x4000e45	       275	replace.c	FUNCTION_9	IF_2	IF_4
0xcbd	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	       277	replace.c	FUNCTION_9	IF_2	CALL_10
0xcc3	            0x89c7	                            mov edi, eax	       277	replace.c	FUNCTION_9	IF_2	CALL_10
0xcc5	      0xe800000000	                          call 0x4000d0a	       277	replace.c	FUNCTION_9	IF_2	CALL_10
0xcca	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	       279	replace.c	FUNCTION_9	IF_2	IF_5	CALL_11
0xcd1	          0x4889c7	                            mov rdi, rax	       279	replace.c	FUNCTION_9	IF_2	IF_5	CALL_11
0xcd4	      0xe800000000	                          call 0x4000d19	       279	replace.c	FUNCTION_9	IF_2	IF_5	CALL_11
0xcd9	            0x85c0	                           test eax, eax	       279	replace.c	FUNCTION_9	IF_2	IF_5	CALL_11
0xcdb	            0x7428	                            je 0x4000d45	       279	replace.c	FUNCTION_9	IF_2	IF_5	CALL_11
0xcdd	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	       280	replace.c	FUNCTION_9	IF_2	IF_5	CALL_12
0xce4	          0x4889c7	                            mov rdi, rax	       280	replace.c	FUNCTION_9	IF_2	IF_5	CALL_12
0xce7	      0xe800000000	                          call 0x4000d2c	       280	replace.c	FUNCTION_9	IF_2	IF_5	CALL_12
0xcec	      0xbf00000000	                              mov edi, 0	       281	replace.c	FUNCTION_9	IF_2	IF_5	CALL_13
0xcf1	      0xb800000000	                              mov eax, 0	       281	replace.c	FUNCTION_9	IF_2	IF_5	CALL_13
0xcf6	      0xe800000000	                          call 0x4000d3b	       281	replace.c	FUNCTION_9	IF_2	IF_5	CALL_13
0xcfb	      0xe800f3ffff	                    call sym.const_error	       281	replace.c	FUNCTION_9	IF_2	IF_5	CALL_13
0xd00	      0xe900010000	                           jmp 0x4000e45	       281	replace.c	FUNCTION_9	IF_2	IF_5	CALL_13
0xd05	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	       283	replace.c	FUNCTION_9	IF_2	IF_6	CALL_14
0xd0c	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	       283	replace.c	FUNCTION_9	IF_2	IF_6	CALL_14
0xd13	          0x4889d6	                            mov rsi, rdx	       283	replace.c	FUNCTION_9	IF_2	IF_6	CALL_14
0xd16	          0x4889c7	                            mov rdi, rax	       283	replace.c	FUNCTION_9	IF_2	IF_6	CALL_14
0xd19	      0xe800000000	                          call 0x4000d5e	       283	replace.c	FUNCTION_9	IF_2	IF_6	CALL_14
0xd1e	            0x85c0	                           test eax, eax	       283	replace.c	FUNCTION_9	IF_2	IF_6	CALL_14
0xd20	            0x7928	                           jns 0x4000d8a	       283	replace.c	FUNCTION_9	IF_2	IF_6	CALL_14
0xd22	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	       284	replace.c	FUNCTION_9	IF_2	IF_6	CALL_15
0xd29	          0x4889c7	                            mov rdi, rax	       284	replace.c	FUNCTION_9	IF_2	IF_6	CALL_15
0xd2c	      0xe800000000	                          call 0x4000d71	       284	replace.c	FUNCTION_9	IF_2	IF_6	CALL_15
0xd31	      0xbf00000000	                              mov edi, 0	       285	replace.c	FUNCTION_9	IF_2	IF_6	CALL_16
0xd36	      0xb800000000	                              mov eax, 0	       285	replace.c	FUNCTION_9	IF_2	IF_6	CALL_16
0xd3b	      0xe800000000	                          call 0x4000d80	       285	replace.c	FUNCTION_9	IF_2	IF_6	CALL_16
0xd40	      0xe8bbf2ffff	                    call sym.const_error	       285	replace.c	FUNCTION_9	IF_2	IF_6	CALL_16
0xd45	      0xe9bb000000	                           jmp 0x4000e45	       285	replace.c	FUNCTION_9	IF_2	IF_6	CALL_16
0xd4a	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	       288	replace.c	FUNCTION_9	IF_2	CALL_17
0xd51	          0x4889c7	                            mov rdi, rax	       288	replace.c	FUNCTION_9	IF_2	CALL_17
0xd54	      0xe800000000	                          call 0x4000d99	       288	replace.c	FUNCTION_9	IF_2	CALL_17
0xd59	      0xe9a2000000	                           jmp 0x4000e40	       256	replace.c	FUNCTION_9	IF_2
0xd5e	    0xc785dcfeffff	              mov dword [rbp - 0x124], 3	       291	replace.c	FUNCTION_9	ELSE_1
0xd68	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       293	replace.c	FUNCTION_9	ELSE_1	IF_7	CALL_18
0xd6f	    0x8b85d8feffff	            mov eax, dword [rbp - 0x128]	       293	replace.c	FUNCTION_9	ELSE_1	IF_7	CALL_18
0xd75	          0x4889d6	                            mov rsi, rdx	       293	replace.c	FUNCTION_9	ELSE_1	IF_7	CALL_18
0xd78	            0x89c7	                            mov edi, eax	       293	replace.c	FUNCTION_9	ELSE_1	IF_7	CALL_18
0xd7a	      0xe800000000	                          call 0x4000dbf	       293	replace.c	FUNCTION_9	ELSE_1	IF_7	CALL_18
0xd7f	            0x85c0	                           test eax, eax	       293	replace.c	FUNCTION_9	ELSE_1	IF_7	CALL_18
0xd81	            0x7932	                           jns 0x4000df5	       293	replace.c	FUNCTION_9	ELSE_1	IF_7	CALL_18
0xd83	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	       294	replace.c	FUNCTION_9	ELSE_1	IF_7	CALL_19
0xd8a	          0x4889c6	                            mov rsi, rax	       294	replace.c	FUNCTION_9	ELSE_1	IF_7	CALL_19
0xd8d	      0xbf00000000	                              mov edi, 0	       294	replace.c	FUNCTION_9	ELSE_1	IF_7	CALL_19
0xd92	      0xb800000000	                              mov eax, 0	       294	replace.c	FUNCTION_9	ELSE_1	IF_7	CALL_19
0xd97	      0xe800000000	                          call 0x4000ddc	       294	replace.c	FUNCTION_9	ELSE_1	IF_7	CALL_19
0xd9c	      0xe85ff2ffff	                    call sym.const_error	       294	replace.c	FUNCTION_9	ELSE_1	IF_7	CALL_19
0xda1	    0x8b85d8feffff	            mov eax, dword [rbp - 0x128]	       295	replace.c	FUNCTION_9	ELSE_1	IF_7	CALL_20
0xda7	            0x89c7	                            mov edi, eax	       295	replace.c	FUNCTION_9	ELSE_1	IF_7	CALL_20
0xda9	      0xe800000000	                          call 0x4000dee	       295	replace.c	FUNCTION_9	ELSE_1	IF_7	CALL_20
0xdae	      0xb8ffffffff	                     mov eax, 0xffffffff	       296	replace.c	FUNCTION_9	ELSE_1	IF_7
0xdb3	            0xeb50	                           jmp 0x4000e45	       296	replace.c	FUNCTION_9	ELSE_1	IF_7
0xdb5	    0x8bbddcfeffff	            mov edi, dword [rbp - 0x124]	       298	replace.c	FUNCTION_9	ELSE_1	IF_8	CALL_21
0xdbb	    0x8b8dc4feffff	            mov ecx, dword [rbp - 0x13c]	       298	replace.c	FUNCTION_9	ELSE_1	IF_8	CALL_21
0xdc1	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       298	replace.c	FUNCTION_9	ELSE_1	IF_8	CALL_21
0xdc8	    0x8bb5d8feffff	            mov esi, dword [rbp - 0x128]	       298	replace.c	FUNCTION_9	ELSE_1	IF_8	CALL_21
0xdce	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       298	replace.c	FUNCTION_9	ELSE_1	IF_8	CALL_21
0xdd5	          0x4189f9	                            mov r9d, edi	       298	replace.c	FUNCTION_9	ELSE_1	IF_8	CALL_21
0xdd8	    0x41b800000000	                              mov r8d, 0	       298	replace.c	FUNCTION_9	ELSE_1	IF_8	CALL_21
0xdde	          0x4889c7	                            mov rdi, rax	       298	replace.c	FUNCTION_9	ELSE_1	IF_8	CALL_21
0xde1	      0xe800000000	                          call 0x4000e26	       298	replace.c	FUNCTION_9	ELSE_1	IF_8	CALL_21
0xde6	            0x85c0	                           test eax, eax	       298	replace.c	FUNCTION_9	ELSE_1	IF_8	CALL_21
0xde8	            0x7916	                           jns 0x4000e40	       298	replace.c	FUNCTION_9	ELSE_1	IF_8	CALL_21
0xdea	      0xbf00000000	                              mov edi, 0	       299	replace.c	FUNCTION_9	ELSE_1	CALL_22
0xdef	      0xb800000000	                              mov eax, 0	       299	replace.c	FUNCTION_9	ELSE_1	CALL_22
0xdf4	      0xe800000000	                          call 0x4000e39	       299	replace.c	FUNCTION_9	ELSE_1	CALL_22
0xdf9	      0xe802f2ffff	                    call sym.const_error	       299	replace.c	FUNCTION_9	ELSE_1	CALL_22
0xdfe	            0xeb05	                           jmp 0x4000e45	       299	replace.c	FUNCTION_9	ELSE_1	CALL_22
0xe00	      0xb800000000	                              mov eax, 0	       307	replace.c	FUNCTION_9
0xe05	        0x488b4df8	                mov rcx, qword [rbp - 8]	       308	replace.c	FUNCTION_9
0xe09	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       308	replace.c	FUNCTION_9
0xe12	            0x7405	                            je 0x4000e59	       308	replace.c	FUNCTION_9
0xe14	      0xe800000000	                          call 0x4000e59	       308	replace.c	FUNCTION_9
0xe19	              0xc9	                                   leave	       308	replace.c	FUNCTION_9
0xe1a	              0xc3	                                     ret	       308	replace.c	FUNCTION_9
for_each_replace_name	CALL,10:FOR,1:SWITCH,0:ELSE,0:functions,0:DO,0:WHILE,0:IF,3	95
0x3ec	              0x55	                                push rbp	        99	replace.c	FUNCTION_3
0x3ed	          0x4889e5	                            mov rbp, rsp	        99	replace.c	FUNCTION_3
0x3f0	        0x4883ec70	                           sub rsp, 0x70	        99	replace.c	FUNCTION_3
0x3f4	        0x48897d98	             mov qword [rbp - 0x68], rdi	        99	replace.c	FUNCTION_3
0x3f8	        0x48897590	             mov qword [rbp - 0x70], rsi	        99	replace.c	FUNCTION_3
0x3fc	    0x64488b042528	                mov rax, qword fs:[0x28]	        99	replace.c	FUNCTION_3
0x405	        0x488945f8	                mov qword [rbp - 8], rax	        99	replace.c	FUNCTION_3
0x409	            0x31c0	                            xor eax, eax	        99	replace.c	FUNCTION_3
0x40b	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       101	replace.c	FUNCTION_3
0x413	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       101	replace.c	FUNCTION_3
0x41b	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       101	replace.c	FUNCTION_3
0x423	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	       103	replace.c	FUNCTION_3
0x42a	    0x488b15000000	            mov rdx, qword [0x04000471] 	       106	replace.c	FUNCTION_3	CALL_1
0x431	        0x488d45c0	                   lea rax, [rbp - 0x40]	       106	replace.c	FUNCTION_3	CALL_1
0x435	          0x4889d6	                            mov rsi, rdx	       106	replace.c	FUNCTION_3	CALL_1
0x438	          0x4889c7	                            mov rdi, rax	       106	replace.c	FUNCTION_3	CALL_1
0x43b	      0xe865fcffff	                  call sym.strbuf_addstr	       106	replace.c	FUNCTION_3	CALL_1
0x440	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       107	replace.c	FUNCTION_3
0x444	        0x488945b0	             mov qword [rbp - 0x50], rax	       107	replace.c	FUNCTION_3
0x448	        0x488b4598	             mov rax, qword [rbp - 0x68]	       109	replace.c	FUNCTION_3	FOR_1
0x44c	        0x488945a8	             mov qword [rbp - 0x58], rax	       109	replace.c	FUNCTION_3	FOR_1
0x450	      0xe9e4000000	                           jmp 0x4000579	       109	replace.c	FUNCTION_3	FOR_1
0x455	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       110	replace.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x459	          0x488b00	                    mov rax, qword [rax]	       110	replace.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x45c	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       110	replace.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x460	          0x4889d6	                            mov rsi, rdx	       110	replace.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x463	          0x4889c7	                            mov rdi, rax	       110	replace.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x466	      0xe800000000	                          call 0x40004ab	       110	replace.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x46b	            0x85c0	                           test eax, eax	       110	replace.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x46d	            0x742a	                            je 0x40004d9	       110	replace.c	FUNCTION_3	FOR_1	IF_1	CALL_2
0x46f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       111	replace.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x473	          0x488b00	                    mov rax, qword [rax]	       111	replace.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x476	          0x4889c6	                            mov rsi, rax	       111	replace.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x479	      0xbf00000000	                              mov edi, 0	       111	replace.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x47e	      0xb800000000	                              mov eax, 0	       111	replace.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x483	      0xe800000000	                          call 0x40004c8	       111	replace.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x488	      0xe873fbffff	                    call sym.const_error	       111	replace.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x48d	    0xc745a4010000	               mov dword [rbp - 0x5c], 1	       112	replace.c	FUNCTION_3	FOR_1	IF_1
0x494	      0xe99b000000	                           jmp 0x4000574	       113	replace.c	FUNCTION_3	FOR_1	IF_1
0x499	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       116	replace.c	FUNCTION_3	FOR_1	CALL_4
0x49d	        0x488d45c0	                   lea rax, [rbp - 0x40]	       116	replace.c	FUNCTION_3	FOR_1	CALL_4
0x4a1	          0x4889d6	                            mov rsi, rdx	       116	replace.c	FUNCTION_3	FOR_1	CALL_4
0x4a4	          0x4889c7	                            mov rdi, rax	       116	replace.c	FUNCTION_3	FOR_1	CALL_4
0x4a7	      0xe85ffbffff	                  call sym.strbuf_setlen	       116	replace.c	FUNCTION_3	FOR_1	CALL_4
0x4ac	        0x488d45e0	                   lea rax, [rbp - 0x20]	       117	replace.c	FUNCTION_3	FOR_1	CALL_6
0x4b0	          0x4889c7	                            mov rdi, rax	       117	replace.c	FUNCTION_3	FOR_1	CALL_6
0x4b3	      0xe800000000	                          call 0x40004f8	       117	replace.c	FUNCTION_3	FOR_1	CALL_6
0x4b8	          0x4889c2	                            mov rdx, rax	       117	replace.c	FUNCTION_3	FOR_1	CALL_6
0x4bb	        0x488d45c0	                   lea rax, [rbp - 0x40]	       117	replace.c	FUNCTION_3	FOR_1	CALL_6
0x4bf	          0x4889d6	                            mov rsi, rdx	       117	replace.c	FUNCTION_3	FOR_1	CALL_6
0x4c2	          0x4889c7	                            mov rdi, rax	       117	replace.c	FUNCTION_3	FOR_1	CALL_6
0x4c5	      0xe8dbfbffff	                  call sym.strbuf_addstr	       117	replace.c	FUNCTION_3	FOR_1	CALL_6
0x4ca	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       118	replace.c	FUNCTION_3	FOR_1
0x4ce	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       118	replace.c	FUNCTION_3	FOR_1
0x4d2	          0x4801d0	                            add rax, rdx	       118	replace.c	FUNCTION_3	FOR_1
0x4d5	        0x488945b8	             mov qword [rbp - 0x48], rax	       118	replace.c	FUNCTION_3	FOR_1
0x4d9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       120	replace.c	FUNCTION_3	FOR_1	IF_2	CALL_7
0x4dd	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       120	replace.c	FUNCTION_3	FOR_1	IF_2	CALL_7
0x4e1	          0x4889d6	                            mov rsi, rdx	       120	replace.c	FUNCTION_3	FOR_1	IF_2	CALL_7
0x4e4	          0x4889c7	                            mov rdi, rax	       120	replace.c	FUNCTION_3	FOR_1	IF_2	CALL_7
0x4e7	      0xe800000000	                          call 0x400052c	       120	replace.c	FUNCTION_3	FOR_1	IF_2	CALL_7
0x4ec	            0x85c0	                           test eax, eax	       120	replace.c	FUNCTION_3	FOR_1	IF_2	CALL_7
0x4ee	            0x7424	                            je 0x4000554	       120	replace.c	FUNCTION_3	FOR_1	IF_2	CALL_7
0x4f0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       121	replace.c	FUNCTION_3	FOR_1	IF_2	CALL_8
0x4f4	          0x4889c6	                            mov rsi, rax	       121	replace.c	FUNCTION_3	FOR_1	IF_2	CALL_8
0x4f7	      0xbf00000000	                              mov edi, 0	       121	replace.c	FUNCTION_3	FOR_1	IF_2	CALL_8
0x4fc	      0xb800000000	                              mov eax, 0	       121	replace.c	FUNCTION_3	FOR_1	IF_2	CALL_8
0x501	      0xe800000000	                          call 0x4000546	       121	replace.c	FUNCTION_3	FOR_1	IF_2	CALL_8
0x506	      0xe8f5faffff	                    call sym.const_error	       121	replace.c	FUNCTION_3	FOR_1	IF_2	CALL_8
0x50b	    0xc745a4010000	               mov dword [rbp - 0x5c], 1	       122	replace.c	FUNCTION_3	FOR_1	IF_2
0x512	            0xeb20	                           jmp 0x4000574	       123	replace.c	FUNCTION_3	FOR_1	IF_2
0x514	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	       125	replace.c	FUNCTION_3	FOR_1	IF_3	CALL_9
0x518	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       125	replace.c	FUNCTION_3	FOR_1	IF_3	CALL_9
0x51c	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       125	replace.c	FUNCTION_3	FOR_1	IF_3	CALL_9
0x520	        0x488b4590	             mov rax, qword [rbp - 0x70]	       125	replace.c	FUNCTION_3	FOR_1	IF_3	CALL_9
0x524	          0x4889cf	                            mov rdi, rcx	       125	replace.c	FUNCTION_3	FOR_1	IF_3	CALL_9
0x527	            0xffd0	                                call rax	       125	replace.c	FUNCTION_3	FOR_1	IF_3	CALL_9
0x529	            0x85c0	                           test eax, eax	       125	replace.c	FUNCTION_3	FOR_1	IF_3	CALL_9
0x52b	            0x7407	                            je 0x4000574	       125	replace.c	FUNCTION_3	FOR_1	IF_3	CALL_9
0x52d	    0xc745a4010000	               mov dword [rbp - 0x5c], 1	       126	replace.c	FUNCTION_3	FOR_1	IF_3
0x534	      0x488345a808	               add qword [rbp - 0x58], 8	       109	replace.c	FUNCTION_3	FOR_1
0x539	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       109	replace.c	FUNCTION_3	FOR_1
0x53d	          0x488b00	                    mov rax, qword [rax]	       109	replace.c	FUNCTION_3	FOR_1
0x540	          0x4885c0	                           test rax, rax	       109	replace.c	FUNCTION_3	FOR_1
0x543	     0xf850cffffff	                           jne 0x4000495	       109	replace.c	FUNCTION_3	FOR_1
0x549	        0x488d45c0	                   lea rax, [rbp - 0x40]	       128	replace.c	FUNCTION_3	CALL_10
0x54d	          0x4889c7	                            mov rdi, rax	       128	replace.c	FUNCTION_3	CALL_10
0x550	      0xe800000000	                          call 0x4000595	       128	replace.c	FUNCTION_3	CALL_10
0x555	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       129	replace.c	FUNCTION_3
0x558	        0x488b4df8	                mov rcx, qword [rbp - 8]	       130	replace.c	FUNCTION_3
0x55c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       130	replace.c	FUNCTION_3
0x565	            0x7405	                            je 0x40005ac	       130	replace.c	FUNCTION_3
0x567	      0xe800000000	                          call 0x40005ac	       130	replace.c	FUNCTION_3
0x56c	              0xc9	                                   leave	       130	replace.c	FUNCTION_3
0x56d	              0xc3	                                     ret	       130	replace.c	FUNCTION_3
const_error	CALL,0:FOR,0:SWITCH,0:ELSE,0:functions,0:DO,0:WHILE,0:IF,0	5
0x0	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_37
0x1	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_37
0x4	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_37
0x9	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_37
0xa	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_37
check_mergetags	CALL,1:FOR,0:SWITCH,0:ELSE,0:functions,0:DO,0:WHILE,0:IF,0	24
0x1485	              0x55	                                push rbp	       427	replace.c	FUNCTION_13
0x1486	          0x4889e5	                            mov rbp, rsp	       427	replace.c	FUNCTION_13
0x1489	        0x4883ec40	                           sub rsp, 0x40	       427	replace.c	FUNCTION_13
0x148d	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       427	replace.c	FUNCTION_13
0x1491	          0x8975d4	             mov dword [rbp - 0x2c], esi	       427	replace.c	FUNCTION_13
0x1494	        0x488955c8	             mov qword [rbp - 0x38], rdx	       427	replace.c	FUNCTION_13
0x1498	    0x64488b042528	                mov rax, qword fs:[0x28]	       427	replace.c	FUNCTION_13
0x14a1	        0x488945f8	                mov qword [rbp - 8], rax	       427	replace.c	FUNCTION_13
0x14a5	            0x31c0	                            xor eax, eax	       427	replace.c	FUNCTION_13
0x14a7	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       430	replace.c	FUNCTION_13
0x14aa	          0x8945e0	             mov dword [rbp - 0x20], eax	       430	replace.c	FUNCTION_13
0x14ad	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       431	replace.c	FUNCTION_13
0x14b1	        0x488945e8	             mov qword [rbp - 0x18], rax	       431	replace.c	FUNCTION_13
0x14b5	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       432	replace.c	FUNCTION_13	CALL_1
0x14b9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       432	replace.c	FUNCTION_13	CALL_1
0x14bd	          0x4889c6	                            mov rsi, rax	       432	replace.c	FUNCTION_13	CALL_1
0x14c0	      0xbf00000000	                              mov edi, 0	       432	replace.c	FUNCTION_13	CALL_1
0x14c5	      0xe800000000	                          call 0x400150a	       432	replace.c	FUNCTION_13	CALL_1
0x14ca	        0x488b4df8	                mov rcx, qword [rbp - 8]	       433	replace.c	FUNCTION_13
0x14ce	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       433	replace.c	FUNCTION_13
0x14d7	            0x7405	                            je 0x400151e	       433	replace.c	FUNCTION_13
0x14d9	      0xe800000000	                          call 0x400151e	       433	replace.c	FUNCTION_13
0x14de	              0xc9	                                   leave	       433	replace.c	FUNCTION_13
0x14df	              0xc3	                                     ret	       433	replace.c	FUNCTION_13
strbuf_addstr	CALL,2:FOR,0:SWITCH,0:ELSE,0:functions,0:DO,0:WHILE,0:IF,0	17
0xa5	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_21
0xa6	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_21
0xa9	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_21
0xad	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_21
0xb1	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_21
0xb5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_21	CALL_2
0xb9	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_21	CALL_2
0xbc	      0xe800000000	                          call 0x4000101	       279	strbuf.h	FUNCTION_21	CALL_2
0xc1	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_21	CALL_2
0xc4	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_21	CALL_2
0xc8	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_21	CALL_2
0xcc	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_21	CALL_2
0xcf	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_21	CALL_2
0xd2	      0xe800000000	                          call 0x4000117	       279	strbuf.h	FUNCTION_21	CALL_2
0xd7	              0x90	                                     nop	       280	strbuf.h	FUNCTION_21
0xd8	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_21
0xd9	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_21
replace_parents	CALL,13:FOR,1:SWITCH,0:ELSE,0:functions,0:DO,0:WHILE,1:IF,2	124
0x1088	              0x55	                                push rbp	       353	replace.c	FUNCTION_11
0x1089	          0x4889e5	                            mov rbp, rsp	       353	replace.c	FUNCTION_11
0x108c	              0x53	                                push rbx	       353	replace.c	FUNCTION_11
0x108d	    0x4881ec880000	                           sub rsp, 0x88	       353	replace.c	FUNCTION_11
0x1094	        0x48897d88	             mov qword [rbp - 0x78], rdi	       353	replace.c	FUNCTION_11
0x1098	          0x897584	             mov dword [rbp - 0x7c], esi	       353	replace.c	FUNCTION_11
0x109b	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	       353	replace.c	FUNCTION_11
0x10a2	    0x64488b042528	                mov rax, qword fs:[0x28]	       353	replace.c	FUNCTION_11
0x10ab	        0x488945e8	             mov qword [rbp - 0x18], rax	       353	replace.c	FUNCTION_11
0x10af	            0x31c0	                            xor eax, eax	       353	replace.c	FUNCTION_11
0x10b1	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       354	replace.c	FUNCTION_11
0x10b9	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       354	replace.c	FUNCTION_11
0x10c1	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       354	replace.c	FUNCTION_11
0x10c9	        0x488b4588	             mov rax, qword [rbp - 0x78]	       359	replace.c	FUNCTION_11
0x10cd	        0x488b4010	            mov rax, qword [rax + 0x10] 	       359	replace.c	FUNCTION_11
0x10d1	        0x488945a8	             mov qword [rbp - 0x58], rax	       359	replace.c	FUNCTION_11
0x10d5	      0x488345a82e	           add qword [rbp - 0x58], 0x2e 	       360	replace.c	FUNCTION_11
0x10da	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       361	replace.c	FUNCTION_11
0x10de	        0x488945a0	             mov qword [rbp - 0x60], rax	       361	replace.c	FUNCTION_11
0x10e2	            0xeb05	                           jmp 0x4001129	       363	replace.c	FUNCTION_11	WHILE_1	CALL_1
0x10e4	      0x488345a030	           add qword [rbp - 0x60], 0x30 	       364	replace.c	FUNCTION_11	WHILE_1
0x10e9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       363	replace.c	FUNCTION_11	WHILE_1	CALL_1
0x10ed	      0xbe00000000	                              mov esi, 0	       363	replace.c	FUNCTION_11	WHILE_1	CALL_1
0x10f2	          0x4889c7	                            mov rdi, rax	       363	replace.c	FUNCTION_11	WHILE_1	CALL_1
0x10f5	      0xe800000000	                          call 0x400113a	       363	replace.c	FUNCTION_11	WHILE_1	CALL_1
0x10fa	            0x85c0	                           test eax, eax	       363	replace.c	FUNCTION_11	WHILE_1	CALL_1
0x10fc	            0x75e6	                           jne 0x4001124	       363	replace.c	FUNCTION_11	WHILE_1	CALL_1
0x10fe	    0xc7459c000000	               mov dword [rbp - 0x64], 0	       367	replace.c	FUNCTION_11	FOR_1
0x1105	      0xe9fb000000	                           jmp 0x4001245	       367	replace.c	FUNCTION_11	FOR_1
0x110a	          0x8b459c	             mov eax, dword [rbp - 0x64]	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x110d	            0x4898	                                    cdqe	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x110f	    0x488d14c50000	                        lea rdx, [rax*8]	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x1117	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x111e	          0x4801d0	                            add rax, rdx	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x1121	          0x488b00	                    mov rax, qword [rax]	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x1124	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x1128	          0x4889d6	                            mov rsi, rdx	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x112b	          0x4889c7	                            mov rdi, rax	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x112e	      0xe800000000	                          call 0x4001173	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x1133	            0x85c0	                           test eax, eax	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x1135	            0x794a	                           jns 0x40011c1	       369	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_2
0x1137	        0x488d45b0	                   lea rax, [rbp - 0x50]	       370	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x113b	          0x4889c7	                            mov rdi, rax	       370	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x113e	      0xe800000000	                          call 0x4001183	       370	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_3
0x1143	          0x8b459c	             mov eax, dword [rbp - 0x64]	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_5
0x1146	            0x4898	                                    cdqe	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_5
0x1148	    0x488d14c50000	                        lea rdx, [rax*8]	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_5
0x1150	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_5
0x1157	          0x4801d0	                            add rax, rdx	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_5
0x115a	          0x488b18	                    mov rbx, qword [rax]	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_5
0x115d	      0xbf00000000	                              mov edi, 0	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_5
0x1162	      0xe873efffff	                               call sym.	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_5
0x1167	          0x4889de	                            mov rsi, rbx	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_5
0x116a	          0x4889c7	                            mov rdi, rax	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_5
0x116d	      0xb800000000	                              mov eax, 0	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_5
0x1172	      0xe800000000	                          call 0x40011b7	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_5
0x1177	      0xe884eeffff	                    call sym.const_error	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_5
0x117c	      0xe9e4000000	                           jmp 0x40012a5	       371	replace.c	FUNCTION_11	FOR_1	IF_1	CALL_5
0x1181	        0x488d45d0	                   lea rax, [rbp - 0x30]	       374	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_6
0x1185	          0x4889c7	                            mov rdi, rax	       374	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_6
0x1188	      0xe800000000	                          call 0x40011cd	       374	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_6
0x118d	          0x4885c0	                           test rax, rax	       374	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_6
0x1190	            0x754a	                           jne 0x400121c	       374	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_6
0x1192	        0x488d45b0	                   lea rax, [rbp - 0x50]	       375	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_7
0x1196	          0x4889c7	                            mov rdi, rax	       375	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_7
0x1199	      0xe800000000	                          call 0x40011de	       375	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_7
0x119e	          0x8b459c	             mov eax, dword [rbp - 0x64]	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_9
0x11a1	            0x4898	                                    cdqe	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_9
0x11a3	    0x488d14c50000	                        lea rdx, [rax*8]	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_9
0x11ab	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_9
0x11b2	          0x4801d0	                            add rax, rdx	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_9
0x11b5	          0x488b18	                    mov rbx, qword [rax]	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_9
0x11b8	      0xbf00000000	                              mov edi, 0	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_9
0x11bd	      0xe818efffff	                               call sym.	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_9
0x11c2	          0x4889de	                            mov rsi, rbx	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_9
0x11c5	          0x4889c7	                            mov rdi, rax	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_9
0x11c8	      0xb800000000	                              mov eax, 0	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_9
0x11cd	      0xe800000000	                          call 0x4001212	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_9
0x11d2	      0xe829eeffff	                    call sym.const_error	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_9
0x11d7	      0xe989000000	                           jmp 0x40012a5	       376	replace.c	FUNCTION_11	FOR_1	IF_2	CALL_9
0x11dc	        0x488d45d0	                   lea rax, [rbp - 0x30]	       378	replace.c	FUNCTION_11	FOR_1	CALL_11
0x11e0	          0x4889c7	                            mov rdi, rax	       378	replace.c	FUNCTION_11	FOR_1	CALL_11
0x11e3	      0xe800000000	                          call 0x4001228	       378	replace.c	FUNCTION_11	FOR_1	CALL_11
0x11e8	          0x4889c2	                            mov rdx, rax	       378	replace.c	FUNCTION_11	FOR_1	CALL_11
0x11eb	        0x488d45b0	                   lea rax, [rbp - 0x50]	       378	replace.c	FUNCTION_11	FOR_1	CALL_11
0x11ef	      0xbe00000000	                              mov esi, 0	       378	replace.c	FUNCTION_11	FOR_1	CALL_11
0x11f4	          0x4889c7	                            mov rdi, rax	       378	replace.c	FUNCTION_11	FOR_1	CALL_11
0x11f7	      0xb800000000	                              mov eax, 0	       378	replace.c	FUNCTION_11	FOR_1	CALL_11
0x11fc	      0xe800000000	                          call 0x4001241	       378	replace.c	FUNCTION_11	FOR_1	CALL_11
0x1201	        0x83459c01	               add dword [rbp - 0x64], 1	       367	replace.c	FUNCTION_11	FOR_1
0x1205	          0x8b459c	             mov eax, dword [rbp - 0x64]	       367	replace.c	FUNCTION_11	FOR_1
0x1208	          0x3b4584	             cmp eax, dword [rbp - 0x7c]	       367	replace.c	FUNCTION_11	FOR_1
0x120b	     0xf8cf9feffff	                            jl 0x400114a	       367	replace.c	FUNCTION_11	FOR_1
0x1211	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       382	replace.c	FUNCTION_11	CALL_12
0x1215	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       383	replace.c	FUNCTION_11
0x1219	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	       382	replace.c	FUNCTION_11	CALL_12
0x121d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       382	replace.c	FUNCTION_11	CALL_12
0x1221	          0x4829c6	                            sub rsi, rax	       382	replace.c	FUNCTION_11	CALL_12
0x1224	          0x4889f0	                            mov rax, rsi	       382	replace.c	FUNCTION_11	CALL_12
0x1227	          0x4889c7	                            mov rdi, rax	       382	replace.c	FUNCTION_11	CALL_12
0x122a	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	       382	replace.c	FUNCTION_11	CALL_12
0x122e	        0x488b4588	             mov rax, qword [rbp - 0x78]	       382	replace.c	FUNCTION_11	CALL_12
0x1232	        0x488b4010	            mov rax, qword [rax + 0x10] 	       382	replace.c	FUNCTION_11	CALL_12
0x1236	          0x4829c6	                            sub rsi, rax	       382	replace.c	FUNCTION_11	CALL_12
0x1239	          0x4889f0	                            mov rax, rsi	       382	replace.c	FUNCTION_11	CALL_12
0x123c	          0x4889c6	                            mov rsi, rax	       382	replace.c	FUNCTION_11	CALL_12
0x123f	        0x488b4588	             mov rax, qword [rbp - 0x78]	       382	replace.c	FUNCTION_11	CALL_12
0x1243	          0x4989c8	                             mov r8, rcx	       382	replace.c	FUNCTION_11	CALL_12
0x1246	          0x4889d1	                            mov rcx, rdx	       382	replace.c	FUNCTION_11	CALL_12
0x1249	          0x4889fa	                            mov rdx, rdi	       382	replace.c	FUNCTION_11	CALL_12
0x124c	          0x4889c7	                            mov rdi, rax	       382	replace.c	FUNCTION_11	CALL_12
0x124f	      0xe800000000	                          call 0x4001294	       382	replace.c	FUNCTION_11	CALL_12
0x1254	        0x488d45b0	                   lea rax, [rbp - 0x50]	       385	replace.c	FUNCTION_11	CALL_13
0x1258	          0x4889c7	                            mov rdi, rax	       385	replace.c	FUNCTION_11	CALL_13
0x125b	      0xe800000000	                          call 0x40012a0	       385	replace.c	FUNCTION_11	CALL_13
0x1260	      0xb800000000	                              mov eax, 0	       386	replace.c	FUNCTION_11
0x1265	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       387	replace.c	FUNCTION_11
0x1269	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       387	replace.c	FUNCTION_11
0x1272	            0x7405	                            je 0x40012b9	       387	replace.c	FUNCTION_11
0x1274	      0xe800000000	                          call 0x40012b9	       387	replace.c	FUNCTION_11
0x1279	    0x4881c4880000	                           add rsp, 0x88	       387	replace.c	FUNCTION_11
0x1280	              0x5b	                                 pop rbx	       387	replace.c	FUNCTION_11
0x1281	              0x5d	                                 pop rbp	       387	replace.c	FUNCTION_11
0x1282	              0xc3	                                     ret	       387	replace.c	FUNCTION_11
delete_replace_ref	CALL,2:FOR,0:SWITCH,0:ELSE,0:functions,0:DO,0:WHILE,0:IF,1	24
0x56e	              0x55	                                push rbp	       134	replace.c	FUNCTION_4
0x56f	          0x4889e5	                            mov rbp, rsp	       134	replace.c	FUNCTION_4
0x572	        0x4883ec20	                           sub rsp, 0x20	       134	replace.c	FUNCTION_4
0x576	        0x48897df8	                mov qword [rbp - 8], rdi	       134	replace.c	FUNCTION_4
0x57a	        0x488975f0	             mov qword [rbp - 0x10], rsi	       134	replace.c	FUNCTION_4
0x57e	        0x488955e8	             mov qword [rbp - 0x18], rdx	       134	replace.c	FUNCTION_4
0x582	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       135	replace.c	FUNCTION_4	IF_1	CALL_1
0x586	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       135	replace.c	FUNCTION_4	IF_1	CALL_1
0x58a	      0xb900000000	                              mov ecx, 0	       135	replace.c	FUNCTION_4	IF_1	CALL_1
0x58f	          0x4889c6	                            mov rsi, rax	       135	replace.c	FUNCTION_4	IF_1	CALL_1
0x592	      0xbf00000000	                              mov edi, 0	       135	replace.c	FUNCTION_4	IF_1	CALL_1
0x597	      0xe800000000	                          call 0x40005dc	       135	replace.c	FUNCTION_4	IF_1	CALL_1
0x59c	            0x85c0	                           test eax, eax	       135	replace.c	FUNCTION_4	IF_1	CALL_1
0x59e	            0x7407	                            je 0x40005e7	       135	replace.c	FUNCTION_4	IF_1	CALL_1
0x5a0	      0xb801000000	                              mov eax, 1	       136	replace.c	FUNCTION_4	IF_1
0x5a5	            0xeb1b	                           jmp 0x4000602	       136	replace.c	FUNCTION_4	IF_1
0x5a7	        0x488b45f8	                mov rax, qword [rbp - 8]	       137	replace.c	FUNCTION_4	CALL_2
0x5ab	          0x4889c6	                            mov rsi, rax	       137	replace.c	FUNCTION_4	CALL_2
0x5ae	      0xbf00000000	                              mov edi, 0	       137	replace.c	FUNCTION_4	CALL_2
0x5b3	      0xb800000000	                              mov eax, 0	       137	replace.c	FUNCTION_4	CALL_2
0x5b8	      0xe800000000	                          call 0x40005fd	       137	replace.c	FUNCTION_4	CALL_2
0x5bd	      0xb800000000	                              mov eax, 0	       138	replace.c	FUNCTION_4
0x5c2	              0xc9	                                   leave	       139	replace.c	FUNCTION_4
0x5c3	              0xc3	                                     ret	       139	replace.c	FUNCTION_4
replace_object	CALL,5:FOR,0:SWITCH,0:ELSE,0:functions,0:DO,0:WHILE,0:IF,2	51
0x8b7	              0x55	                                push rbp	       199	replace.c	FUNCTION_7
0x8b8	          0x4889e5	                            mov rbp, rsp	       199	replace.c	FUNCTION_7
0x8bb	        0x4883ec60	                           sub rsp, 0x60	       199	replace.c	FUNCTION_7
0x8bf	        0x48897db8	             mov qword [rbp - 0x48], rdi	       199	replace.c	FUNCTION_7
0x8c3	        0x488975b0	             mov qword [rbp - 0x50], rsi	       199	replace.c	FUNCTION_7
0x8c7	          0x8955ac	             mov dword [rbp - 0x54], edx	       199	replace.c	FUNCTION_7
0x8ca	    0x64488b042528	                mov rax, qword fs:[0x28]	       199	replace.c	FUNCTION_7
0x8d3	        0x488945f8	                mov qword [rbp - 8], rax	       199	replace.c	FUNCTION_7
0x8d7	            0x31c0	                            xor eax, eax	       199	replace.c	FUNCTION_7
0x8d9	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       202	replace.c	FUNCTION_7	IF_1	CALL_1
0x8dd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       202	replace.c	FUNCTION_7	IF_1	CALL_1
0x8e1	          0x4889d6	                            mov rsi, rdx	       202	replace.c	FUNCTION_7	IF_1	CALL_1
0x8e4	          0x4889c7	                            mov rdi, rax	       202	replace.c	FUNCTION_7	IF_1	CALL_1
0x8e7	      0xe800000000	                          call 0x400092c	       202	replace.c	FUNCTION_7	IF_1	CALL_1
0x8ec	            0x85c0	                           test eax, eax	       202	replace.c	FUNCTION_7	IF_1	CALL_1
0x8ee	            0x741d	                            je 0x400094d	       202	replace.c	FUNCTION_7	IF_1	CALL_1
0x8f0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       203	replace.c	FUNCTION_7	IF_1	CALL_2
0x8f4	          0x4889c6	                            mov rsi, rax	       203	replace.c	FUNCTION_7	IF_1	CALL_2
0x8f7	      0xbf00000000	                              mov edi, 0	       203	replace.c	FUNCTION_7	IF_1	CALL_2
0x8fc	      0xb800000000	                              mov eax, 0	       203	replace.c	FUNCTION_7	IF_1	CALL_2
0x901	      0xe800000000	                          call 0x4000946	       203	replace.c	FUNCTION_7	IF_1	CALL_2
0x906	      0xe8f5f6ffff	                    call sym.const_error	       203	replace.c	FUNCTION_7	IF_1	CALL_2
0x90b	            0xeb52	                           jmp 0x400099f	       203	replace.c	FUNCTION_7	IF_1	CALL_2
0x90d	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       205	replace.c	FUNCTION_7	IF_2	CALL_3
0x911	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       205	replace.c	FUNCTION_7	IF_2	CALL_3
0x915	          0x4889d6	                            mov rsi, rdx	       205	replace.c	FUNCTION_7	IF_2	CALL_3
0x918	          0x4889c7	                            mov rdi, rax	       205	replace.c	FUNCTION_7	IF_2	CALL_3
0x91b	      0xe800000000	                          call 0x4000960	       205	replace.c	FUNCTION_7	IF_2	CALL_3
0x920	            0x85c0	                           test eax, eax	       205	replace.c	FUNCTION_7	IF_2	CALL_3
0x922	            0x741d	                            je 0x4000981	       205	replace.c	FUNCTION_7	IF_2	CALL_3
0x924	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       206	replace.c	FUNCTION_7	IF_2	CALL_4
0x928	          0x4889c6	                            mov rsi, rax	       206	replace.c	FUNCTION_7	IF_2	CALL_4
0x92b	      0xbf00000000	                              mov edi, 0	       206	replace.c	FUNCTION_7	IF_2	CALL_4
0x930	      0xb800000000	                              mov eax, 0	       206	replace.c	FUNCTION_7	IF_2	CALL_4
0x935	      0xe800000000	                          call 0x400097a	       206	replace.c	FUNCTION_7	IF_2	CALL_4
0x93a	      0xe8c1f6ffff	                    call sym.const_error	       206	replace.c	FUNCTION_7	IF_2	CALL_4
0x93f	            0xeb1e	                           jmp 0x400099f	       206	replace.c	FUNCTION_7	IF_2	CALL_4
0x941	          0x8b7dac	             mov edi, dword [rbp - 0x54]	       209	replace.c	FUNCTION_7	CALL_5
0x944	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       209	replace.c	FUNCTION_7	CALL_5
0x948	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       209	replace.c	FUNCTION_7	CALL_5
0x94c	        0x488d75c0	                   lea rsi, [rbp - 0x40]	       209	replace.c	FUNCTION_7	CALL_5
0x950	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       209	replace.c	FUNCTION_7	CALL_5
0x954	          0x4189f8	                            mov r8d, edi	       209	replace.c	FUNCTION_7	CALL_5
0x957	          0x4889c7	                            mov rdi, rax	       209	replace.c	FUNCTION_7	CALL_5
0x95a	      0xe84afdffff	             call sym.replace_object_oid	       209	replace.c	FUNCTION_7	CALL_5
0x95f	        0x488b4df8	                mov rcx, qword [rbp - 8]	       210	replace.c	FUNCTION_7
0x963	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       210	replace.c	FUNCTION_7
0x96c	            0x7405	                            je 0x40009b3	       210	replace.c	FUNCTION_7
0x96e	      0xe800000000	                          call 0x40009b3	       210	replace.c	FUNCTION_7
0x973	              0xc9	                                   leave	       210	replace.c	FUNCTION_7
0x974	              0xc3	                                     ret	       210	replace.c	FUNCTION_7
cmd_replace	CALL,36:FOR,0:SWITCH,1:ELSE,0:functions,0:DO,0:WHILE,0:IF,10	247
0x1946	              0x55	                                push rbp	       521	replace.c	FUNCTION_16
0x1947	          0x4889e5	                            mov rbp, rsp	       521	replace.c	FUNCTION_16
0x194a	    0x4881ec900200	                          sub rsp, 0x290	       521	replace.c	FUNCTION_16
0x1951	    0x89bd8cfdffff	            mov dword [rbp - 0x274], edi	       521	replace.c	FUNCTION_16
0x1957	    0x4889b580fdff	            mov qword [rbp - 0x280], rsi	       521	replace.c	FUNCTION_16
0x195e	    0x48899578fdff	            mov qword [rbp - 0x288], rdx	       521	replace.c	FUNCTION_16
0x1965	    0x64488b042528	                mov rax, qword fs:[0x28]	       521	replace.c	FUNCTION_16
0x196e	        0x488945f8	                mov qword [rbp - 8], rax	       521	replace.c	FUNCTION_16
0x1972	            0x31c0	                            xor eax, eax	       521	replace.c	FUNCTION_16
0x1974	    0xc7859cfdffff	              mov dword [rbp - 0x264], 0	       522	replace.c	FUNCTION_16
0x197e	    0xc785a0fdffff	              mov dword [rbp - 0x260], 0	       523	replace.c	FUNCTION_16
0x1988	    0x48c785a8fdff	              mov qword [rbp - 0x258], 0	       524	replace.c	FUNCTION_16
0x1993	    0xc785a4fdffff	              mov dword [rbp - 0x25c], 0	       533	replace.c	FUNCTION_16
0x199d	    0x488d95b0fdff	                  lea rdx, [rbp - 0x250]	       534	replace.c	FUNCTION_16
0x19a4	      0xb800000000	                              mov eax, 0	       534	replace.c	FUNCTION_16
0x19a9	      0xb948000000	                           mov ecx, 0x48	       534	replace.c	FUNCTION_16
0x19ae	          0x4889d7	                            mov rdi, rdx	       534	replace.c	FUNCTION_16
0x19b1	          0xf348ab	              rep stosq qword [rdi], rax	       534	replace.c	FUNCTION_16
0x19b4	    0xc785b0fdffff	              mov dword [rbp - 0x250], 8	       534	replace.c	FUNCTION_16
0x19be	    0xc785b4fdffff	          mov dword [rbp - 0x24c], 0x6c 	       534	replace.c	FUNCTION_16
0x19c8	    0x48c785b8fdff	              mov qword [rbp - 0x248], 0	       534	replace.c	FUNCTION_16
0x19d3	    0x488d85a4fdff	                  lea rax, [rbp - 0x25c]	       534	replace.c	FUNCTION_16
0x19da	    0x488985c0fdff	            mov qword [rbp - 0x240], rax	       534	replace.c	FUNCTION_16
0x19e1	    0x48c785d0fdff	              mov qword [rbp - 0x230], 0	       534	replace.c	FUNCTION_16
0x19ec	    0xc785d8fdffff	              mov dword [rbp - 0x228], 6	       534	replace.c	FUNCTION_16
0x19f6	    0x48c785e8fdff	              mov qword [rbp - 0x218], 1	       534	replace.c	FUNCTION_16
0x1a01	    0xc785f0fdffff	              mov dword [rbp - 0x210], 8	       534	replace.c	FUNCTION_16
0x1a0b	    0xc785f4fdffff	          mov dword [rbp - 0x20c], 0x64 	       534	replace.c	FUNCTION_16
0x1a15	    0x48c785f8fdff	              mov qword [rbp - 0x208], 0	       534	replace.c	FUNCTION_16
0x1a20	    0x488d85a4fdff	                  lea rax, [rbp - 0x25c]	       534	replace.c	FUNCTION_16
0x1a27	    0x48898500feff	            mov qword [rbp - 0x200], rax	       534	replace.c	FUNCTION_16
0x1a2e	    0x48c78510feff	              mov qword [rbp - 0x1f0], 0	       534	replace.c	FUNCTION_16
0x1a39	    0xc78518feffff	              mov dword [rbp - 0x1e8], 6	       534	replace.c	FUNCTION_16
0x1a43	    0x48c78528feff	              mov qword [rbp - 0x1d8], 2	       534	replace.c	FUNCTION_16
0x1a4e	    0xc78530feffff	              mov dword [rbp - 0x1d0], 8	       534	replace.c	FUNCTION_16
0x1a58	    0xc78534feffff	          mov dword [rbp - 0x1cc], 0x65 	       534	replace.c	FUNCTION_16
0x1a62	    0x48c78538feff	              mov qword [rbp - 0x1c8], 0	       534	replace.c	FUNCTION_16
0x1a6d	    0x488d85a4fdff	                  lea rax, [rbp - 0x25c]	       534	replace.c	FUNCTION_16
0x1a74	    0x48898540feff	            mov qword [rbp - 0x1c0], rax	       534	replace.c	FUNCTION_16
0x1a7b	    0x48c78550feff	              mov qword [rbp - 0x1b0], 0	       534	replace.c	FUNCTION_16
0x1a86	    0xc78558feffff	              mov dword [rbp - 0x1a8], 6	       534	replace.c	FUNCTION_16
0x1a90	    0x48c78568feff	              mov qword [rbp - 0x198], 3	       534	replace.c	FUNCTION_16
0x1a9b	    0xc78570feffff	              mov dword [rbp - 0x190], 8	       534	replace.c	FUNCTION_16
0x1aa5	    0xc78574feffff	          mov dword [rbp - 0x18c], 0x67 	       534	replace.c	FUNCTION_16
0x1aaf	    0x48c78578feff	              mov qword [rbp - 0x188], 0	       534	replace.c	FUNCTION_16
0x1aba	    0x488d85a4fdff	                  lea rax, [rbp - 0x25c]	       534	replace.c	FUNCTION_16
0x1ac1	    0x48898580feff	            mov qword [rbp - 0x180], rax	       534	replace.c	FUNCTION_16
0x1ac8	    0x48c78590feff	              mov qword [rbp - 0x170], 0	       534	replace.c	FUNCTION_16
0x1ad3	    0xc78598feffff	              mov dword [rbp - 0x168], 6	       534	replace.c	FUNCTION_16
0x1add	    0x48c785a8feff	              mov qword [rbp - 0x158], 4	       534	replace.c	FUNCTION_16
0x1ae8	    0xc785b0feffff	              mov dword [rbp - 0x150], 8	       534	replace.c	FUNCTION_16
0x1af2	    0x48c785b8feff	              mov qword [rbp - 0x148], 0	       534	replace.c	FUNCTION_16
0x1afd	    0x488d85a4fdff	                  lea rax, [rbp - 0x25c]	       534	replace.c	FUNCTION_16
0x1b04	    0x488985c0feff	            mov qword [rbp - 0x140], rax	       534	replace.c	FUNCTION_16
0x1b0b	    0x48c785d0feff	              mov qword [rbp - 0x130], 0	       534	replace.c	FUNCTION_16
0x1b16	    0xc785d8feffff	              mov dword [rbp - 0x128], 6	       534	replace.c	FUNCTION_16
0x1b20	    0x48c785e8feff	              mov qword [rbp - 0x118], 5	       534	replace.c	FUNCTION_16
0x1b2b	    0xc785f0feffff	              mov dword [rbp - 0x110], 7	       534	replace.c	FUNCTION_16
0x1b35	    0xc785f4feffff	          mov dword [rbp - 0x10c], 0x66 	       534	replace.c	FUNCTION_16
0x1b3f	    0x48c785f8feff	              mov qword [rbp - 0x108], 0	       534	replace.c	FUNCTION_16
0x1b4a	    0x488d859cfdff	                  lea rax, [rbp - 0x264]	       534	replace.c	FUNCTION_16
0x1b51	    0x48898500ffff	            mov qword [rbp - 0x100], rax	       534	replace.c	FUNCTION_16
0x1b58	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	       534	replace.c	FUNCTION_16
0x1b63	    0xc78518ffffff	          mov dword [rbp - 0xe8], 0x202 	       534	replace.c	FUNCTION_16
0x1b6d	    0x48c78528ffff	               mov qword [rbp - 0xd8], 1	       534	replace.c	FUNCTION_16
0x1b78	    0xc78530ffffff	               mov dword [rbp - 0xd0], 7	       534	replace.c	FUNCTION_16
0x1b82	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	       534	replace.c	FUNCTION_16
0x1b8d	    0x488d85a0fdff	                  lea rax, [rbp - 0x260]	       534	replace.c	FUNCTION_16
0x1b94	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       534	replace.c	FUNCTION_16
0x1b9b	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	       534	replace.c	FUNCTION_16
0x1ba6	    0xc78558ffffff	               mov dword [rbp - 0xa8], 2	       534	replace.c	FUNCTION_16
0x1bb0	    0x48c78568ffff	               mov qword [rbp - 0x98], 1	       534	replace.c	FUNCTION_16
0x1bbb	    0xc78570ffffff	               mov dword [rbp - 0x90], 9	       534	replace.c	FUNCTION_16
0x1bc5	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	       534	replace.c	FUNCTION_16
0x1bd0	    0x488d85a8fdff	                  lea rax, [rbp - 0x258]	       534	replace.c	FUNCTION_16
0x1bd7	        0x48894580	             mov qword [rbp - 0x80], rax	       534	replace.c	FUNCTION_16
0x1bdb	    0x48c745880000	               mov qword [rbp - 0x78], 0	       534	replace.c	FUNCTION_16
0x1be3	    0x48c745900000	               mov qword [rbp - 0x70], 0	       534	replace.c	FUNCTION_16
0x1beb	    0xc70500000000	               mov dword [0x04001c35], 0	       547	replace.c	FUNCTION_16
0x1bf5	      0xbe00000000	                              mov esi, 0	       548	replace.c	FUNCTION_16	CALL_19
0x1bfa	      0xbf00000000	                              mov edi, 0	       548	replace.c	FUNCTION_16	CALL_19
0x1bff	      0xe800000000	                          call 0x4001c44	       548	replace.c	FUNCTION_16	CALL_19
0x1c04	    0x488d8db0fdff	                  lea rcx, [rbp - 0x250]	       550	replace.c	FUNCTION_16	CALL_20
0x1c0b	    0x488b9578fdff	            mov rdx, qword [rbp - 0x288]	       550	replace.c	FUNCTION_16	CALL_20
0x1c12	    0x488bb580fdff	            mov rsi, qword [rbp - 0x280]	       550	replace.c	FUNCTION_16	CALL_20
0x1c19	    0x8b858cfdffff	            mov eax, dword [rbp - 0x274]	       550	replace.c	FUNCTION_16	CALL_20
0x1c1f	    0x41b900000000	                              mov r9d, 0	       550	replace.c	FUNCTION_16	CALL_20
0x1c25	    0x41b800000000	                              mov r8d, 0	       550	replace.c	FUNCTION_16	CALL_20
0x1c2b	            0x89c7	                            mov edi, eax	       550	replace.c	FUNCTION_16	CALL_20
0x1c2d	      0xe800000000	                          call 0x4001c72	       550	replace.c	FUNCTION_16	CALL_20
0x1c32	    0x89858cfdffff	            mov dword [rbp - 0x274], eax	       550	replace.c	FUNCTION_16	CALL_20
0x1c38	    0x8b85a4fdffff	            mov eax, dword [rbp - 0x25c]	       552	replace.c	FUNCTION_16	IF_1
0x1c3e	            0x85c0	                           test eax, eax	       552	replace.c	FUNCTION_16	IF_1
0x1c40	            0x751b	                           jne 0x4001c9d	       552	replace.c	FUNCTION_16	IF_1
0x1c42	    0x83bd8cfdffff	              cmp dword [rbp - 0x274], 0	       553	replace.c	FUNCTION_16	IF_1
0x1c49	            0x7407	                            je 0x4001c92	       553	replace.c	FUNCTION_16	IF_1
0x1c4b	      0xb806000000	                              mov eax, 6	       553	replace.c	FUNCTION_16	IF_1
0x1c50	            0xeb05	                           jmp 0x4001c97	       553	replace.c	FUNCTION_16	IF_1
0x1c52	      0xb801000000	                              mov eax, 1	       553	replace.c	FUNCTION_16	IF_1
0x1c57	    0x8985a4fdffff	            mov dword [rbp - 0x25c], eax	       553	replace.c	FUNCTION_16	IF_1
0x1c5d	    0x488b85a8fdff	            mov rax, qword [rbp - 0x258]	       555	replace.c	FUNCTION_16	IF_2
0x1c64	          0x4885c0	                           test rax, rax	       555	replace.c	FUNCTION_16	IF_2
0x1c67	            0x7424	                            je 0x4001ccd	       555	replace.c	FUNCTION_16	IF_2
0x1c69	    0x8b85a4fdffff	            mov eax, dword [rbp - 0x25c]	       555	replace.c	FUNCTION_16	IF_2
0x1c6f	          0x83f801	                              cmp eax, 1	       555	replace.c	FUNCTION_16	IF_2
0x1c72	            0x7419	                            je 0x4001ccd	       555	replace.c	FUNCTION_16	IF_2
0x1c74	    0x488d85b0fdff	                  lea rax, [rbp - 0x250]	       556	replace.c	FUNCTION_16	IF_2	CALL_21
0x1c7b	          0x4889c2	                            mov rdx, rax	       556	replace.c	FUNCTION_16	IF_2	CALL_21
0x1c7e	      0xbe00000000	                              mov esi, 0	       556	replace.c	FUNCTION_16	IF_2	CALL_21
0x1c83	      0xbf00000000	                              mov edi, 0	       556	replace.c	FUNCTION_16	IF_2	CALL_21
0x1c88	      0xe800000000	                          call 0x4001ccd	       556	replace.c	FUNCTION_16	IF_2	CALL_21
0x1c8d	    0x8b859cfdffff	            mov eax, dword [rbp - 0x264]	       559	replace.c	FUNCTION_16	IF_3
0x1c93	            0x85c0	                           test eax, eax	       559	replace.c	FUNCTION_16	IF_3
0x1c95	            0x7445	                            je 0x4001d1c	       559	replace.c	FUNCTION_16	IF_3
0x1c97	    0x8b85a4fdffff	            mov eax, dword [rbp - 0x25c]	       560	replace.c	FUNCTION_16	IF_3
0x1c9d	          0x83f806	                              cmp eax, 6	       559	replace.c	FUNCTION_16	IF_3
0x1ca0	            0x743a	                            je 0x4001d1c	       559	replace.c	FUNCTION_16	IF_3
0x1ca2	    0x8b85a4fdffff	            mov eax, dword [rbp - 0x25c]	       561	replace.c	FUNCTION_16	IF_3
0x1ca8	          0x83f803	                              cmp eax, 3	       560	replace.c	FUNCTION_16	IF_3
0x1cab	            0x742f	                            je 0x4001d1c	       560	replace.c	FUNCTION_16	IF_3
0x1cad	    0x8b85a4fdffff	            mov eax, dword [rbp - 0x25c]	       562	replace.c	FUNCTION_16	IF_3
0x1cb3	          0x83f804	                              cmp eax, 4	       561	replace.c	FUNCTION_16	IF_3
0x1cb6	            0x7424	                            je 0x4001d1c	       561	replace.c	FUNCTION_16	IF_3
0x1cb8	    0x8b85a4fdffff	            mov eax, dword [rbp - 0x25c]	       563	replace.c	FUNCTION_16	IF_3
0x1cbe	          0x83f805	                              cmp eax, 5	       562	replace.c	FUNCTION_16	IF_3
0x1cc1	            0x7419	                            je 0x4001d1c	       562	replace.c	FUNCTION_16	IF_3
0x1cc3	    0x488d85b0fdff	                  lea rax, [rbp - 0x250]	       564	replace.c	FUNCTION_16	IF_3	CALL_22
0x1cca	          0x4889c2	                            mov rdx, rax	       564	replace.c	FUNCTION_16	IF_3	CALL_22
0x1ccd	      0xbe00000000	                              mov esi, 0	       564	replace.c	FUNCTION_16	IF_3	CALL_22
0x1cd2	      0xbf00000000	                              mov edi, 0	       564	replace.c	FUNCTION_16	IF_3	CALL_22
0x1cd7	      0xe800000000	                          call 0x4001d1c	       564	replace.c	FUNCTION_16	IF_3	CALL_22
0x1cdc	    0x8b85a0fdffff	            mov eax, dword [rbp - 0x260]	       567	replace.c	FUNCTION_16	IF_4
0x1ce2	            0x85c0	                           test eax, eax	       567	replace.c	FUNCTION_16	IF_4
0x1ce4	            0x7424	                            je 0x4001d4a	       567	replace.c	FUNCTION_16	IF_4
0x1ce6	    0x8b85a4fdffff	            mov eax, dword [rbp - 0x25c]	       567	replace.c	FUNCTION_16	IF_4
0x1cec	          0x83f803	                              cmp eax, 3	       567	replace.c	FUNCTION_16	IF_4
0x1cef	            0x7419	                            je 0x4001d4a	       567	replace.c	FUNCTION_16	IF_4
0x1cf1	    0x488d85b0fdff	                  lea rax, [rbp - 0x250]	       568	replace.c	FUNCTION_16	IF_4	CALL_23
0x1cf8	          0x4889c2	                            mov rdx, rax	       568	replace.c	FUNCTION_16	IF_4	CALL_23
0x1cfb	      0xbe00000000	                              mov esi, 0	       568	replace.c	FUNCTION_16	IF_4	CALL_23
0x1d00	      0xbf00000000	                              mov edi, 0	       568	replace.c	FUNCTION_16	IF_4	CALL_23
0x1d05	      0xe800000000	                          call 0x4001d4a	       568	replace.c	FUNCTION_16	IF_4	CALL_23
0x1d0a	    0x8b85a4fdffff	            mov eax, dword [rbp - 0x25c]	       571	replace.c	FUNCTION_16	SWITCH_1
0x1d10	          0x83f806	                              cmp eax, 6	       571	replace.c	FUNCTION_16	SWITCH_1
0x1d13	     0xf879d010000	                            ja 0x4001ef6	       571	replace.c	FUNCTION_16	SWITCH_1
0x1d19	            0x89c0	                            mov eax, eax	       571	replace.c	FUNCTION_16	SWITCH_1
0x1d1b	    0x488b04c50000	                  mov rax, qword [rax*8]	       571	replace.c	FUNCTION_16	SWITCH_1
0x1d23	            0xffe0	                                 jmp rax	       571	replace.c	FUNCTION_16	SWITCH_1
0x1d25	    0x83bd8cfdffff	              cmp dword [rbp - 0x274], 0	       573	replace.c	FUNCTION_16	SWITCH_1	IF_5
0x1d2c	            0x7f19	                            jg 0x4001d87	       573	replace.c	FUNCTION_16	SWITCH_1	IF_5
0x1d2e	    0x488d85b0fdff	                  lea rax, [rbp - 0x250]	       574	replace.c	FUNCTION_16	SWITCH_1	IF_5	CALL_24
0x1d35	          0x4889c2	                            mov rdx, rax	       574	replace.c	FUNCTION_16	SWITCH_1	IF_5	CALL_24
0x1d38	      0xbe00000000	                              mov esi, 0	       574	replace.c	FUNCTION_16	SWITCH_1	IF_5	CALL_24
0x1d3d	      0xbf00000000	                              mov edi, 0	       574	replace.c	FUNCTION_16	SWITCH_1	IF_5	CALL_24
0x1d42	      0xe800000000	                          call 0x4001d87	       574	replace.c	FUNCTION_16	SWITCH_1	IF_5	CALL_24
0x1d47	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	       576	replace.c	FUNCTION_16	SWITCH_1	CALL_25
0x1d4e	      0xbe00000000	                              mov esi, 0	       576	replace.c	FUNCTION_16	SWITCH_1	CALL_25
0x1d53	          0x4889c7	                            mov rdi, rax	       576	replace.c	FUNCTION_16	SWITCH_1	CALL_25
0x1d56	      0xe891e6ffff	          call sym.for_each_replace_name	       576	replace.c	FUNCTION_16	SWITCH_1	CALL_25
0x1d5b	      0xe977010000	                           jmp 0x4001f17	       576	replace.c	FUNCTION_16	SWITCH_1	CALL_25
0x1d60	    0x83bd8cfdffff	              cmp dword [rbp - 0x274], 2	       579	replace.c	FUNCTION_16	SWITCH_1	IF_6
0x1d67	            0x7419	                            je 0x4001dc2	       579	replace.c	FUNCTION_16	SWITCH_1	IF_6
0x1d69	    0x488d85b0fdff	                  lea rax, [rbp - 0x250]	       580	replace.c	FUNCTION_16	SWITCH_1	IF_6	CALL_26
0x1d70	          0x4889c2	                            mov rdx, rax	       580	replace.c	FUNCTION_16	SWITCH_1	IF_6	CALL_26
0x1d73	      0xbe00000000	                              mov esi, 0	       580	replace.c	FUNCTION_16	SWITCH_1	IF_6	CALL_26
0x1d78	      0xbf00000000	                              mov edi, 0	       580	replace.c	FUNCTION_16	SWITCH_1	IF_6	CALL_26
0x1d7d	      0xe800000000	                          call 0x4001dc2	       580	replace.c	FUNCTION_16	SWITCH_1	IF_6	CALL_26
0x1d82	    0x8b959cfdffff	            mov edx, dword [rbp - 0x264]	       582	replace.c	FUNCTION_16	SWITCH_1	CALL_27
0x1d88	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	       582	replace.c	FUNCTION_16	SWITCH_1	CALL_27
0x1d8f	        0x4883c008	                              add rax, 8	       582	replace.c	FUNCTION_16	SWITCH_1	CALL_27
0x1d93	          0x488b08	                    mov rcx, qword [rax]	       582	replace.c	FUNCTION_16	SWITCH_1	CALL_27
0x1d96	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	       582	replace.c	FUNCTION_16	SWITCH_1	CALL_27
0x1d9d	          0x488b00	                    mov rax, qword [rax]	       582	replace.c	FUNCTION_16	SWITCH_1	CALL_27
0x1da0	          0x4889ce	                            mov rsi, rcx	       582	replace.c	FUNCTION_16	SWITCH_1	CALL_27
0x1da3	          0x4889c7	                            mov rdi, rax	       582	replace.c	FUNCTION_16	SWITCH_1	CALL_27
0x1da6	      0xe80cebffff	                 call sym.replace_object	       582	replace.c	FUNCTION_16	SWITCH_1	CALL_27
0x1dab	      0xe927010000	                           jmp 0x4001f17	       582	replace.c	FUNCTION_16	SWITCH_1	CALL_27
0x1db0	    0x83bd8cfdffff	              cmp dword [rbp - 0x274], 1	       585	replace.c	FUNCTION_16	SWITCH_1	IF_7
0x1db7	            0x7419	                            je 0x4001e12	       585	replace.c	FUNCTION_16	SWITCH_1	IF_7
0x1db9	    0x488d85b0fdff	                  lea rax, [rbp - 0x250]	       586	replace.c	FUNCTION_16	SWITCH_1	IF_7	CALL_28
0x1dc0	          0x4889c2	                            mov rdx, rax	       586	replace.c	FUNCTION_16	SWITCH_1	IF_7	CALL_28
0x1dc3	      0xbe00000000	                              mov esi, 0	       586	replace.c	FUNCTION_16	SWITCH_1	IF_7	CALL_28
0x1dc8	      0xbf00000000	                              mov edi, 0	       586	replace.c	FUNCTION_16	SWITCH_1	IF_7	CALL_28
0x1dcd	      0xe800000000	                          call 0x4001e12	       586	replace.c	FUNCTION_16	SWITCH_1	IF_7	CALL_28
0x1dd2	    0x8b95a0fdffff	            mov edx, dword [rbp - 0x260]	       588	replace.c	FUNCTION_16	SWITCH_1	CALL_29
0x1dd8	    0x8b8d9cfdffff	            mov ecx, dword [rbp - 0x264]	       588	replace.c	FUNCTION_16	SWITCH_1	CALL_29
0x1dde	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	       588	replace.c	FUNCTION_16	SWITCH_1	CALL_29
0x1de5	          0x488b00	                    mov rax, qword [rax]	       588	replace.c	FUNCTION_16	SWITCH_1	CALL_29
0x1de8	            0x89ce	                            mov esi, ecx	       588	replace.c	FUNCTION_16	SWITCH_1	CALL_29
0x1dea	          0x4889c7	                            mov rdi, rax	       588	replace.c	FUNCTION_16	SWITCH_1	CALL_29
0x1ded	      0xe829f0ffff	               call sym.edit_and_replace	       588	replace.c	FUNCTION_16	SWITCH_1	CALL_29
0x1df2	      0xe9e0000000	                           jmp 0x4001f17	       588	replace.c	FUNCTION_16	SWITCH_1	CALL_29
0x1df7	    0x83bd8cfdffff	              cmp dword [rbp - 0x274], 0	       591	replace.c	FUNCTION_16	SWITCH_1	IF_8
0x1dfe	            0x7f19	                            jg 0x4001e59	       591	replace.c	FUNCTION_16	SWITCH_1	IF_8
0x1e00	    0x488d85b0fdff	                  lea rax, [rbp - 0x250]	       592	replace.c	FUNCTION_16	SWITCH_1	IF_8	CALL_30
0x1e07	          0x4889c2	                            mov rdx, rax	       592	replace.c	FUNCTION_16	SWITCH_1	IF_8	CALL_30
0x1e0a	      0xbe00000000	                              mov esi, 0	       592	replace.c	FUNCTION_16	SWITCH_1	IF_8	CALL_30
0x1e0f	      0xbf00000000	                              mov edi, 0	       592	replace.c	FUNCTION_16	SWITCH_1	IF_8	CALL_30
0x1e14	      0xe800000000	                          call 0x4001e59	       592	replace.c	FUNCTION_16	SWITCH_1	IF_8	CALL_30
0x1e19	    0x8b959cfdffff	            mov edx, dword [rbp - 0x264]	       594	replace.c	FUNCTION_16	SWITCH_1	CALL_31
0x1e1f	    0x488bb580fdff	            mov rsi, qword [rbp - 0x280]	       594	replace.c	FUNCTION_16	SWITCH_1	CALL_31
0x1e26	    0x8b858cfdffff	            mov eax, dword [rbp - 0x274]	       594	replace.c	FUNCTION_16	SWITCH_1	CALL_31
0x1e2c	      0xb900000000	                              mov ecx, 0	       594	replace.c	FUNCTION_16	SWITCH_1	CALL_31
0x1e31	            0x89c7	                            mov edi, eax	       594	replace.c	FUNCTION_16	SWITCH_1	CALL_31
0x1e33	      0xe8a8f6ffff	                   call sym.create_graft	       594	replace.c	FUNCTION_16	SWITCH_1	CALL_31
0x1e38	      0xe99a000000	                           jmp 0x4001f17	       594	replace.c	FUNCTION_16	SWITCH_1	CALL_31
0x1e3d	    0x83bd8cfdffff	              cmp dword [rbp - 0x274], 0	       597	replace.c	FUNCTION_16	SWITCH_1	IF_9
0x1e44	            0x7419	                            je 0x4001e9f	       597	replace.c	FUNCTION_16	SWITCH_1	IF_9
0x1e46	    0x488d85b0fdff	                  lea rax, [rbp - 0x250]	       598	replace.c	FUNCTION_16	SWITCH_1	IF_9	CALL_32
0x1e4d	          0x4889c2	                            mov rdx, rax	       598	replace.c	FUNCTION_16	SWITCH_1	IF_9	CALL_32
0x1e50	      0xbe00000000	                              mov esi, 0	       598	replace.c	FUNCTION_16	SWITCH_1	IF_9	CALL_32
0x1e55	      0xbf00000000	                              mov edi, 0	       598	replace.c	FUNCTION_16	SWITCH_1	IF_9	CALL_32
0x1e5a	      0xe800000000	                          call 0x4001e9f	       598	replace.c	FUNCTION_16	SWITCH_1	IF_9	CALL_32
0x1e5f	    0x8b859cfdffff	            mov eax, dword [rbp - 0x264]	       600	replace.c	FUNCTION_16	SWITCH_1	CALL_33
0x1e65	            0x89c7	                            mov edi, eax	       600	replace.c	FUNCTION_16	SWITCH_1	CALL_33
0x1e67	      0xe852f9ffff	             call sym.convert_graft_file	       600	replace.c	FUNCTION_16	SWITCH_1	CALL_33
0x1e6c	            0x85c0	                           test eax, eax	       600	replace.c	FUNCTION_16	SWITCH_1	CALL_33
0x1e6e	           0xf95c0	                                setne al	       600	replace.c	FUNCTION_16	SWITCH_1	CALL_33
0x1e71	           0xfb6c0	                           movzx eax, al	       600	replace.c	FUNCTION_16	SWITCH_1	CALL_33
0x1e74	            0xeb61	                           jmp 0x4001f17	       600	replace.c	FUNCTION_16	SWITCH_1	CALL_33
0x1e76	    0x83bd8cfdffff	              cmp dword [rbp - 0x274], 1	       603	replace.c	FUNCTION_16	SWITCH_1	IF_10
0x1e7d	            0x7e19	                           jle 0x4001ed8	       603	replace.c	FUNCTION_16	SWITCH_1	IF_10
0x1e7f	    0x488d85b0fdff	                  lea rax, [rbp - 0x250]	       604	replace.c	FUNCTION_16	SWITCH_1	IF_10	CALL_34
0x1e86	          0x4889c2	                            mov rdx, rax	       604	replace.c	FUNCTION_16	SWITCH_1	IF_10	CALL_34
0x1e89	      0xbe00000000	                              mov esi, 0	       604	replace.c	FUNCTION_16	SWITCH_1	IF_10	CALL_34
0x1e8e	      0xbf00000000	                              mov edi, 0	       604	replace.c	FUNCTION_16	SWITCH_1	IF_10	CALL_34
0x1e93	      0xe800000000	                          call 0x4001ed8	       604	replace.c	FUNCTION_16	SWITCH_1	IF_10	CALL_34
0x1e98	    0x488b95a8fdff	            mov rdx, qword [rbp - 0x258]	       606	replace.c	FUNCTION_16	SWITCH_1	CALL_35
0x1e9f	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	       606	replace.c	FUNCTION_16	SWITCH_1	CALL_35
0x1ea6	          0x488b00	                    mov rax, qword [rax]	       606	replace.c	FUNCTION_16	SWITCH_1	CALL_35
0x1ea9	          0x4889d6	                            mov rsi, rdx	       606	replace.c	FUNCTION_16	SWITCH_1	CALL_35
0x1eac	          0x4889c7	                            mov rdi, rax	       606	replace.c	FUNCTION_16	SWITCH_1	CALL_35
0x1eaf	      0xe846e4ffff	              call sym.list_replace_refs	       606	replace.c	FUNCTION_16	SWITCH_1	CALL_35
0x1eb4	            0xeb21	                           jmp 0x4001f17	       606	replace.c	FUNCTION_16	SWITCH_1	CALL_35
0x1eb6	    0x8b85a4fdffff	            mov eax, dword [rbp - 0x25c]	       609	replace.c	FUNCTION_16	SWITCH_1	CALL_36
0x1ebc	            0x89c1	                            mov ecx, eax	       609	replace.c	FUNCTION_16	SWITCH_1	CALL_36
0x1ebe	      0xba00000000	                              mov edx, 0	       609	replace.c	FUNCTION_16	SWITCH_1	CALL_36
0x1ec3	      0xbe61020000	                          mov esi, 0x261	       609	replace.c	FUNCTION_16	SWITCH_1	CALL_36
0x1ec8	      0xbf00000000	                              mov edi, 0	       609	replace.c	FUNCTION_16	SWITCH_1	CALL_36
0x1ecd	      0xb800000000	                              mov eax, 0	       609	replace.c	FUNCTION_16	SWITCH_1	CALL_36
0x1ed2	      0xe800000000	                          call 0x4001f17	       609	replace.c	FUNCTION_16	SWITCH_1	CALL_36
0x1ed7	        0x488b4df8	                mov rcx, qword [rbp - 8]	       611	replace.c	FUNCTION_16
0x1edb	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       611	replace.c	FUNCTION_16
0x1ee4	            0x7405	                            je 0x4001f2b	       611	replace.c	FUNCTION_16
0x1ee6	      0xe800000000	                          call 0x4001f2b	       611	replace.c	FUNCTION_16
0x1eeb	              0xc9	                                   leave	       611	replace.c	FUNCTION_16
0x1eec	              0xc3	                                     ret	       611	replace.c	FUNCTION_16
edit_and_replace	CALL,21:FOR,0:SWITCH,0:ELSE,0:functions,0:DO,0:WHILE,0:IF,7	139
0xe1b	              0x55	                                push rbp	       311	replace.c	FUNCTION_10
0xe1c	          0x4889e5	                            mov rbp, rsp	       311	replace.c	FUNCTION_10
0xe1f	    0x4881eca00000	                           sub rsp, 0xa0	       311	replace.c	FUNCTION_10
0xe26	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	       311	replace.c	FUNCTION_10
0xe2d	    0x89b564ffffff	             mov dword [rbp - 0x9c], esi	       311	replace.c	FUNCTION_10
0xe33	    0x899560ffffff	             mov dword [rbp - 0xa0], edx	       311	replace.c	FUNCTION_10
0xe39	    0x64488b042528	                mov rax, qword fs:[0x28]	       311	replace.c	FUNCTION_10
0xe42	        0x488945f8	                mov qword [rbp - 8], rax	       311	replace.c	FUNCTION_10
0xe46	            0x31c0	                            xor eax, eax	       311	replace.c	FUNCTION_10
0xe48	    0x48c745800000	               mov qword [rbp - 0x80], 0	       315	replace.c	FUNCTION_10
0xe50	    0x48c745880000	               mov qword [rbp - 0x78], 0	       315	replace.c	FUNCTION_10
0xe58	    0x48c745900000	               mov qword [rbp - 0x70], 0	       315	replace.c	FUNCTION_10
0xe60	        0x488d55a0	                   lea rdx, [rbp - 0x60]	       317	replace.c	FUNCTION_10	IF_1	CALL_1
0xe64	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       317	replace.c	FUNCTION_10	IF_1	CALL_1
0xe6b	          0x4889d6	                            mov rsi, rdx	       317	replace.c	FUNCTION_10	IF_1	CALL_1
0xe6e	          0x4889c7	                            mov rdi, rax	       317	replace.c	FUNCTION_10	IF_1	CALL_1
0xe71	      0xe800000000	                          call 0x4000eb6	       317	replace.c	FUNCTION_10	IF_1	CALL_1
0xe76	            0x85c0	                           test eax, eax	       317	replace.c	FUNCTION_10	IF_1	CALL_1
0xe78	            0x7923	                           jns 0x4000edd	       317	replace.c	FUNCTION_10	IF_1	CALL_1
0xe7a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       318	replace.c	FUNCTION_10	CALL_2
0xe81	          0x4889c6	                            mov rsi, rax	       318	replace.c	FUNCTION_10	CALL_2
0xe84	      0xbf00000000	                              mov edi, 0	       318	replace.c	FUNCTION_10	CALL_2
0xe89	      0xb800000000	                              mov eax, 0	       318	replace.c	FUNCTION_10	CALL_2
0xe8e	      0xe800000000	                          call 0x4000ed3	       318	replace.c	FUNCTION_10	CALL_2
0xe93	      0xe868f1ffff	                    call sym.const_error	       318	replace.c	FUNCTION_10	CALL_2
0xe98	      0xe9d5010000	                           jmp 0x40010b2	       318	replace.c	FUNCTION_10	CALL_2
0xe9d	    0x488b05000000	            mov rax, qword [0x04000ee4] 	       320	replace.c	FUNCTION_10	CALL_3
0xea4	        0x488d4da0	                   lea rcx, [rbp - 0x60]	       320	replace.c	FUNCTION_10	CALL_3
0xea8	      0xba00000000	                              mov edx, 0	       320	replace.c	FUNCTION_10	CALL_3
0xead	          0x4889ce	                            mov rsi, rcx	       320	replace.c	FUNCTION_10	CALL_3
0xeb0	          0x4889c7	                            mov rdi, rax	       320	replace.c	FUNCTION_10	CALL_3
0xeb3	      0xe800000000	                          call 0x4000ef8	       320	replace.c	FUNCTION_10	CALL_3
0xeb8	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	       320	replace.c	FUNCTION_10	CALL_3
0xebe	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	       321	replace.c	FUNCTION_10	IF_2
0xec5	            0x7928	                           jns 0x4000f2f	       321	replace.c	FUNCTION_10	IF_2
0xec7	        0x488d45a0	                   lea rax, [rbp - 0x60]	       322	replace.c	FUNCTION_10	IF_2	CALL_4
0xecb	          0x4889c7	                            mov rdi, rax	       322	replace.c	FUNCTION_10	IF_2	CALL_4
0xece	      0xe800000000	                          call 0x4000f13	       322	replace.c	FUNCTION_10	IF_2	CALL_4
0xed3	          0x4889c6	                            mov rsi, rax	       322	replace.c	FUNCTION_10	IF_2	CALL_4
0xed6	      0xbf00000000	                              mov edi, 0	       322	replace.c	FUNCTION_10	IF_2	CALL_4
0xedb	      0xb800000000	                              mov eax, 0	       322	replace.c	FUNCTION_10	IF_2	CALL_4
0xee0	      0xe800000000	                          call 0x4000f25	       322	replace.c	FUNCTION_10	IF_2	CALL_4
0xee5	      0xe816f1ffff	                    call sym.const_error	       322	replace.c	FUNCTION_10	IF_2	CALL_4
0xeea	      0xe983010000	                           jmp 0x40010b2	       322	replace.c	FUNCTION_10	IF_2	CALL_4
0xeef	    0x8b8d64ffffff	             mov ecx, dword [rbp - 0x9c]	       325	replace.c	FUNCTION_10	IF_3	CALL_6
0xef5	        0x488d5580	                   lea rdx, [rbp - 0x80]	       325	replace.c	FUNCTION_10	IF_3	CALL_6
0xef9	        0x488d75e0	                   lea rsi, [rbp - 0x20]	       325	replace.c	FUNCTION_10	IF_3	CALL_6
0xefd	        0x488d45a0	                   lea rax, [rbp - 0x60]	       325	replace.c	FUNCTION_10	IF_3	CALL_6
0xf01	          0x4889c7	                            mov rdi, rax	       325	replace.c	FUNCTION_10	IF_3	CALL_6
0xf04	      0xe8bbf6ffff	                call sym.check_ref_valid	       325	replace.c	FUNCTION_10	IF_3	CALL_6
0xf09	            0x85c0	                           test eax, eax	       325	replace.c	FUNCTION_10	IF_3	CALL_6
0xf0b	            0x7416	                            je 0x4000f63	       325	replace.c	FUNCTION_10	IF_3	CALL_6
0xf0d	        0x488d4580	                   lea rax, [rbp - 0x80]	       326	replace.c	FUNCTION_10	IF_3	CALL_7
0xf11	          0x4889c7	                            mov rdi, rax	       326	replace.c	FUNCTION_10	IF_3	CALL_7
0xf14	      0xe800000000	                          call 0x4000f59	       326	replace.c	FUNCTION_10	IF_3	CALL_7
0xf19	      0xb8ffffffff	                     mov eax, 0xffffffff	       327	replace.c	FUNCTION_10	IF_3
0xf1e	      0xe94f010000	                           jmp 0x40010b2	       327	replace.c	FUNCTION_10	IF_3
0xf23	        0x488d4580	                   lea rax, [rbp - 0x80]	       329	replace.c	FUNCTION_10	CALL_8
0xf27	          0x4889c7	                            mov rdi, rax	       329	replace.c	FUNCTION_10	CALL_8
0xf2a	      0xe800000000	                          call 0x4000f6f	       329	replace.c	FUNCTION_10	CALL_8
0xf2f	      0xbf00000000	                              mov edi, 0	       331	replace.c	FUNCTION_10	CALL_9
0xf34	      0xb800000000	                              mov eax, 0	       331	replace.c	FUNCTION_10	CALL_9
0xf39	      0xe800000000	                          call 0x4000f7e	       331	replace.c	FUNCTION_10	CALL_9
0xf3e	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       331	replace.c	FUNCTION_10	CALL_9
0xf45	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	       332	replace.c	FUNCTION_10	IF_4	CALL_10
0xf4c	    0x8b9560ffffff	             mov edx, dword [rbp - 0xa0]	       332	replace.c	FUNCTION_10	IF_4	CALL_10
0xf52	    0x8bb574ffffff	             mov esi, dword [rbp - 0x8c]	       332	replace.c	FUNCTION_10	IF_4	CALL_10
0xf58	        0x488d45a0	                   lea rax, [rbp - 0x60]	       332	replace.c	FUNCTION_10	IF_4	CALL_10
0xf5c	          0x4889c7	                            mov rdi, rax	       332	replace.c	FUNCTION_10	IF_4	CALL_10
0xf5f	      0xe811faffff	                  call sym.export_object	       332	replace.c	FUNCTION_10	IF_4	CALL_10
0xf64	            0x85c0	                           test eax, eax	       332	replace.c	FUNCTION_10	IF_4	CALL_10
0xf66	            0x7419	                            je 0x4000fc1	       332	replace.c	FUNCTION_10	IF_4	CALL_10
0xf68	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       333	replace.c	FUNCTION_10	IF_4	CALL_11
0xf6f	          0x4889c7	                            mov rdi, rax	       333	replace.c	FUNCTION_10	IF_4	CALL_11
0xf72	      0xe800000000	                          call 0x4000fb7	       333	replace.c	FUNCTION_10	IF_4	CALL_11
0xf77	      0xb8ffffffff	                     mov eax, 0xffffffff	       334	replace.c	FUNCTION_10	IF_4
0xf7c	      0xe9f1000000	                           jmp 0x40010b2	       334	replace.c	FUNCTION_10	IF_4
0xf81	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       336	replace.c	FUNCTION_10	IF_5	CALL_12
0xf88	      0xba00000000	                              mov edx, 0	       336	replace.c	FUNCTION_10	IF_5	CALL_12
0xf8d	      0xbe00000000	                              mov esi, 0	       336	replace.c	FUNCTION_10	IF_5	CALL_12
0xf92	          0x4889c7	                            mov rdi, rax	       336	replace.c	FUNCTION_10	IF_5	CALL_12
0xf95	      0xe800000000	                          call 0x4000fda	       336	replace.c	FUNCTION_10	IF_5	CALL_12
0xf9a	            0x85c0	                           test eax, eax	       336	replace.c	FUNCTION_10	IF_5	CALL_12
0xf9c	            0x7928	                           jns 0x4001006	       336	replace.c	FUNCTION_10	IF_5	CALL_12
0xf9e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       337	replace.c	FUNCTION_10	IF_5	CALL_13
0xfa5	          0x4889c7	                            mov rdi, rax	       337	replace.c	FUNCTION_10	IF_5	CALL_13
0xfa8	      0xe800000000	                          call 0x4000fed	       337	replace.c	FUNCTION_10	IF_5	CALL_13
0xfad	      0xbf00000000	                              mov edi, 0	       338	replace.c	FUNCTION_10	IF_5	CALL_14
0xfb2	      0xb800000000	                              mov eax, 0	       338	replace.c	FUNCTION_10	IF_5	CALL_14
0xfb7	      0xe800000000	                          call 0x4000ffc	       338	replace.c	FUNCTION_10	IF_5	CALL_14
0xfbc	      0xe83ff0ffff	                    call sym.const_error	       338	replace.c	FUNCTION_10	IF_5	CALL_14
0xfc1	      0xe9ac000000	                           jmp 0x40010b2	       338	replace.c	FUNCTION_10	IF_5	CALL_14
0xfc6	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	       340	replace.c	FUNCTION_10	IF_6	CALL_15
0xfcd	    0x8b9560ffffff	             mov edx, dword [rbp - 0xa0]	       340	replace.c	FUNCTION_10	IF_6	CALL_15
0xfd3	    0x8bb574ffffff	             mov esi, dword [rbp - 0x8c]	       340	replace.c	FUNCTION_10	IF_6	CALL_15
0xfd9	        0x488d45c0	                   lea rax, [rbp - 0x40]	       340	replace.c	FUNCTION_10	IF_6	CALL_15
0xfdd	          0x4889c7	                            mov rdi, rax	       340	replace.c	FUNCTION_10	IF_6	CALL_15
0xfe0	      0xe815fbffff	                  call sym.import_object	       340	replace.c	FUNCTION_10	IF_6	CALL_15
0xfe5	            0x85c0	                           test eax, eax	       340	replace.c	FUNCTION_10	IF_6	CALL_15
0xfe7	            0x7416	                            je 0x400103f	       340	replace.c	FUNCTION_10	IF_6	CALL_15
0xfe9	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       341	replace.c	FUNCTION_10	IF_6	CALL_16
0xff0	          0x4889c7	                            mov rdi, rax	       341	replace.c	FUNCTION_10	IF_6	CALL_16
0xff3	      0xe800000000	                          call 0x4001038	       341	replace.c	FUNCTION_10	IF_6	CALL_16
0xff8	      0xb8ffffffff	                     mov eax, 0xffffffff	       342	replace.c	FUNCTION_10	IF_6
0xffd	            0xeb73	                           jmp 0x40010b2	       342	replace.c	FUNCTION_10	IF_6
0xfff	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       344	replace.c	FUNCTION_10	CALL_17
0x1006	          0x4889c7	                            mov rdi, rax	       344	replace.c	FUNCTION_10	CALL_17
0x1009	      0xe800000000	                          call 0x400104e	       344	replace.c	FUNCTION_10	CALL_17
0x100e	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       346	replace.c	FUNCTION_10	IF_7	CALL_18
0x1012	        0x488d45a0	                   lea rax, [rbp - 0x60]	       346	replace.c	FUNCTION_10	IF_7	CALL_18
0x1016	          0x4889d6	                            mov rsi, rdx	       346	replace.c	FUNCTION_10	IF_7	CALL_18
0x1019	          0x4889c7	                            mov rdi, rax	       346	replace.c	FUNCTION_10	IF_7	CALL_18
0x101c	      0xe80ff1ffff	                         call sym.oidcmp	       346	replace.c	FUNCTION_10	IF_7	CALL_18
0x1021	            0x85c0	                           test eax, eax	       346	replace.c	FUNCTION_10	IF_7	CALL_18
0x1023	            0x7525	                           jne 0x400108a	       346	replace.c	FUNCTION_10	IF_7	CALL_18
0x1025	        0x488d45a0	                   lea rax, [rbp - 0x60]	       347	replace.c	FUNCTION_10	CALL_20
0x1029	          0x4889c7	                            mov rdi, rax	       347	replace.c	FUNCTION_10	CALL_20
0x102c	      0xe800000000	                          call 0x4001071	       347	replace.c	FUNCTION_10	CALL_20
0x1031	          0x4889c6	                            mov rsi, rax	       347	replace.c	FUNCTION_10	CALL_20
0x1034	      0xbf00000000	                              mov edi, 0	       347	replace.c	FUNCTION_10	CALL_20
0x1039	      0xb800000000	                              mov eax, 0	       347	replace.c	FUNCTION_10	CALL_20
0x103e	      0xe800000000	                          call 0x4001083	       347	replace.c	FUNCTION_10	CALL_20
0x1043	      0xe8b8efffff	                    call sym.const_error	       347	replace.c	FUNCTION_10	CALL_20
0x1048	            0xeb28	                           jmp 0x40010b2	       347	replace.c	FUNCTION_10	CALL_20
0x104a	    0x8b8d64ffffff	             mov ecx, dword [rbp - 0x9c]	       349	replace.c	FUNCTION_10	CALL_21
0x1050	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       349	replace.c	FUNCTION_10	CALL_21
0x1054	        0x488d75a0	                   lea rsi, [rbp - 0x60]	       349	replace.c	FUNCTION_10	CALL_21
0x1058	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       349	replace.c	FUNCTION_10	CALL_21
0x105f	          0x4189c8	                            mov r8d, ecx	       349	replace.c	FUNCTION_10	CALL_21
0x1062	          0x4889d1	                            mov rcx, rdx	       349	replace.c	FUNCTION_10	CALL_21
0x1065	      0xba00000000	                              mov edx, 0	       349	replace.c	FUNCTION_10	CALL_21
0x106a	          0x4889c7	                            mov rdi, rax	       349	replace.c	FUNCTION_10	CALL_21
0x106d	      0xe837f6ffff	             call sym.replace_object_oid	       349	replace.c	FUNCTION_10	CALL_21
0x1072	        0x488b4df8	                mov rcx, qword [rbp - 8]	       350	replace.c	FUNCTION_10
0x1076	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       350	replace.c	FUNCTION_10
0x107f	            0x7405	                            je 0x40010c6	       350	replace.c	FUNCTION_10
0x1081	      0xe800000000	                          call 0x40010c6	       350	replace.c	FUNCTION_10
0x1086	              0xc9	                                   leave	       350	replace.c	FUNCTION_10
0x1087	              0xc3	                                     ret	       350	replace.c	FUNCTION_10
replace_object_oid	CALL,13:FOR,0:SWITCH,0:ELSE,0:functions,0:DO,0:WHILE,0:IF,3	118
0x6a9	              0x55	                                push rbp	       163	replace.c	FUNCTION_6
0x6aa	          0x4889e5	                            mov rbp, rsp	       163	replace.c	FUNCTION_6
0x6ad	              0x53	                                push rbx	       163	replace.c	FUNCTION_6
0x6ae	    0x4881ecb80000	                           sub rsp, 0xb8	       163	replace.c	FUNCTION_6
0x6b5	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	       163	replace.c	FUNCTION_6
0x6bc	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	       163	replace.c	FUNCTION_6
0x6c3	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	       163	replace.c	FUNCTION_6
0x6ca	    0x48898d50ffff	             mov qword [rbp - 0xb0], rcx	       163	replace.c	FUNCTION_6
0x6d1	    0x4489854cffff	             mov dword [rbp - 0xb4], r8d	       163	replace.c	FUNCTION_6
0x6d8	    0x64488b042528	                mov rax, qword fs:[0x28]	       163	replace.c	FUNCTION_6
0x6e1	        0x488945e8	             mov qword [rbp - 0x18], rax	       163	replace.c	FUNCTION_6
0x6e5	            0x31c0	                            xor eax, eax	       163	replace.c	FUNCTION_6
0x6e7	    0x48c745900000	               mov qword [rbp - 0x70], 0	       166	replace.c	FUNCTION_6
0x6ef	    0x48c745980000	               mov qword [rbp - 0x68], 0	       166	replace.c	FUNCTION_6
0x6f7	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       166	replace.c	FUNCTION_6
0x6ff	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       168	replace.c	FUNCTION_6
0x707	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       168	replace.c	FUNCTION_6
0x70f	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       168	replace.c	FUNCTION_6
0x717	    0xc7857cffffff	               mov dword [rbp - 0x84], 0	       169	replace.c	FUNCTION_6
0x721	    0x488b05000000	            mov rax, qword [0x04000768] 	       171	replace.c	FUNCTION_6	CALL_1
0x728	    0x488b8d60ffff	             mov rcx, qword [rbp - 0xa0]	       171	replace.c	FUNCTION_6	CALL_1
0x72f	      0xba00000000	                              mov edx, 0	       171	replace.c	FUNCTION_6	CALL_1
0x734	          0x4889ce	                            mov rsi, rcx	       171	replace.c	FUNCTION_6	CALL_1
0x737	          0x4889c7	                            mov rdi, rax	       171	replace.c	FUNCTION_6	CALL_1
0x73a	      0xe800000000	                          call 0x400077f	       171	replace.c	FUNCTION_6	CALL_1
0x73f	          0x894580	             mov dword [rbp - 0x80], eax	       171	replace.c	FUNCTION_6	CALL_1
0x742	    0x488b05000000	            mov rax, qword [0x04000789] 	       172	replace.c	FUNCTION_6	CALL_2
0x749	    0x488b8d50ffff	             mov rcx, qword [rbp - 0xb0]	       172	replace.c	FUNCTION_6	CALL_2
0x750	      0xba00000000	                              mov edx, 0	       172	replace.c	FUNCTION_6	CALL_2
0x755	          0x4889ce	                            mov rsi, rcx	       172	replace.c	FUNCTION_6	CALL_2
0x758	          0x4889c7	                            mov rdi, rax	       172	replace.c	FUNCTION_6	CALL_2
0x75b	      0xe800000000	                          call 0x40007a0	       172	replace.c	FUNCTION_6	CALL_2
0x760	          0x894584	             mov dword [rbp - 0x7c], eax	       172	replace.c	FUNCTION_6	CALL_2
0x763	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 0	       173	replace.c	FUNCTION_6	IF_1
0x76a	            0x7555	                           jne 0x4000801	       173	replace.c	FUNCTION_6	IF_1
0x76c	          0x8b4580	             mov eax, dword [rbp - 0x80]	       173	replace.c	FUNCTION_6	IF_1
0x76f	          0x3b4584	             cmp eax, dword [rbp - 0x7c]	       173	replace.c	FUNCTION_6	IF_1
0x772	            0x744d	                            je 0x4000801	       173	replace.c	FUNCTION_6	IF_1
0x774	          0x8b4584	             mov eax, dword [rbp - 0x7c]	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x777	            0x89c7	                            mov edi, eax	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x779	      0xe800000000	                          call 0x40007be	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x77e	          0x4889c3	                            mov rbx, rax	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x781	          0x8b4580	             mov eax, dword [rbp - 0x80]	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x784	            0x89c7	                            mov edi, eax	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x786	      0xe800000000	                          call 0x40007cb	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x78b	          0x4889c6	                            mov rsi, rax	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x78e	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x795	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x79c	          0x4989d8	                             mov r8, rbx	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x79f	          0x4889d1	                            mov rcx, rdx	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x7a2	          0x4889f2	                            mov rdx, rsi	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x7a5	          0x4889c6	                            mov rsi, rax	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x7a8	      0xbf00000000	                              mov edi, 0	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x7ad	      0xb800000000	                              mov eax, 0	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x7b2	      0xe800000000	                          call 0x40007f7	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x7b7	      0xe844f8ffff	                    call sym.const_error	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x7bc	      0xe9dc000000	                           jmp 0x40008dd	       174	replace.c	FUNCTION_6	IF_1	CALL_3
0x7c1	    0x8b8d4cffffff	             mov ecx, dword [rbp - 0xb4]	       181	replace.c	FUNCTION_6	IF_2	CALL_6
0x7c7	        0x488d5590	                   lea rdx, [rbp - 0x70]	       181	replace.c	FUNCTION_6	IF_2	CALL_6
0x7cb	        0x488d75d0	                   lea rsi, [rbp - 0x30]	       181	replace.c	FUNCTION_6	IF_2	CALL_6
0x7cf	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       181	replace.c	FUNCTION_6	IF_2	CALL_6
0x7d6	          0x4889c7	                            mov rdi, rax	       181	replace.c	FUNCTION_6	IF_2	CALL_6
0x7d9	      0xe8e6fdffff	                call sym.check_ref_valid	       181	replace.c	FUNCTION_6	IF_2	CALL_6
0x7de	            0x85c0	                           test eax, eax	       181	replace.c	FUNCTION_6	IF_2	CALL_6
0x7e0	            0x7416	                            je 0x4000838	       181	replace.c	FUNCTION_6	IF_2	CALL_6
0x7e2	        0x488d4590	                   lea rax, [rbp - 0x70]	       182	replace.c	FUNCTION_6	IF_2	CALL_7
0x7e6	          0x4889c7	                            mov rdi, rax	       182	replace.c	FUNCTION_6	IF_2	CALL_7
0x7e9	      0xe800000000	                          call 0x400082e	       182	replace.c	FUNCTION_6	IF_2	CALL_7
0x7ee	      0xb8ffffffff	                     mov eax, 0xffffffff	       183	replace.c	FUNCTION_6	IF_2
0x7f3	      0xe9a5000000	                           jmp 0x40008dd	       183	replace.c	FUNCTION_6	IF_2
0x7f8	        0x488d45b0	                   lea rax, [rbp - 0x50]	       186	replace.c	FUNCTION_6	CALL_8
0x7fc	          0x4889c7	                            mov rdi, rax	       186	replace.c	FUNCTION_6	CALL_8
0x7ff	      0xe800000000	                          call 0x4000844	       186	replace.c	FUNCTION_6	CALL_8
0x804	        0x48894588	             mov qword [rbp - 0x78], rax	       186	replace.c	FUNCTION_6	CALL_8
0x808	      0x48837d8800	               cmp qword [rbp - 0x78], 0	       187	replace.c	FUNCTION_6	IF_3
0x80d	            0x744f	                            je 0x400089e	       187	replace.c	FUNCTION_6	IF_3
0x80f	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x813	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x817	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x81e	        0x488b4588	             mov rax, qword [rbp - 0x78]	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x822	        0x4883ec08	                              sub rsp, 8	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x826	        0x488d7db0	                   lea rdi, [rbp - 0x50]	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x82a	              0x57	                                push rdi	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x82b	    0x41b900000000	                              mov r9d, 0	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x831	    0x41b800000000	                              mov r8d, 0	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x837	          0x4889c7	                            mov rdi, rax	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x83a	      0xe800000000	                          call 0x400087f	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x83f	        0x4883c410	                           add rsp, 0x10	       188	replace.c	FUNCTION_6	IF_3	CALL_9
0x843	            0x85c0	                           test eax, eax	       187	replace.c	FUNCTION_6	IF_3
0x845	            0x7517	                           jne 0x400089e	       187	replace.c	FUNCTION_6	IF_3
0x847	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       190	replace.c	FUNCTION_6	IF_3	CALL_10
0x84b	        0x488b4588	             mov rax, qword [rbp - 0x78]	       190	replace.c	FUNCTION_6	IF_3	CALL_10
0x84f	          0x4889d6	                            mov rsi, rdx	       190	replace.c	FUNCTION_6	IF_3	CALL_10
0x852	          0x4889c7	                            mov rdi, rax	       190	replace.c	FUNCTION_6	IF_3	CALL_10
0x855	      0xe800000000	                          call 0x400089a	       190	replace.c	FUNCTION_6	IF_3	CALL_10
0x85a	            0x85c0	                           test eax, eax	       189	replace.c	FUNCTION_6	IF_3
0x85c	            0x7421	                            je 0x40008bf	       189	replace.c	FUNCTION_6	IF_3
0x85e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       191	replace.c	FUNCTION_6	CALL_11
0x862	          0x4889c6	                            mov rsi, rax	       191	replace.c	FUNCTION_6	CALL_11
0x865	      0xbf00000000	                              mov edi, 0	       191	replace.c	FUNCTION_6	CALL_11
0x86a	      0xb800000000	                              mov eax, 0	       191	replace.c	FUNCTION_6	CALL_11
0x86f	      0xe800000000	                          call 0x40008b4	       191	replace.c	FUNCTION_6	CALL_11
0x874	      0xe887f7ffff	                    call sym.const_error	       191	replace.c	FUNCTION_6	CALL_11
0x879	    0x89857cffffff	             mov dword [rbp - 0x84], eax	       191	replace.c	FUNCTION_6	CALL_11
0x87f	        0x488b4588	             mov rax, qword [rbp - 0x78]	       193	replace.c	FUNCTION_6	CALL_12
0x883	          0x4889c7	                            mov rdi, rax	       193	replace.c	FUNCTION_6	CALL_12
0x886	      0xe800000000	                          call 0x40008cb	       193	replace.c	FUNCTION_6	CALL_12
0x88b	        0x488d4590	                   lea rax, [rbp - 0x70]	       194	replace.c	FUNCTION_6	CALL_13
0x88f	          0x4889c7	                            mov rdi, rax	       194	replace.c	FUNCTION_6	CALL_13
0x892	      0xe800000000	                          call 0x40008d7	       194	replace.c	FUNCTION_6	CALL_13
0x897	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	       195	replace.c	FUNCTION_6
0x89d	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       196	replace.c	FUNCTION_6
0x8a1	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       196	replace.c	FUNCTION_6
0x8aa	            0x7405	                            je 0x40008f1	       196	replace.c	FUNCTION_6
0x8ac	      0xe800000000	                          call 0x40008f1	       196	replace.c	FUNCTION_6
0x8b1	        0x488b5df8	                mov rbx, qword [rbp - 8]	       196	replace.c	FUNCTION_6
0x8b5	              0xc9	                                   leave	       196	replace.c	FUNCTION_6
0x8b6	              0xc3	                                     ret	       196	replace.c	FUNCTION_6
