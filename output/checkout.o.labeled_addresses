Q_	IF,1:functions,0:DO,0:ELSE,0:FOR,0:SWITCH,0:CALL,2:WHILE,0	14
0x166	              0x55	                                push rbp	        59	gettext.h	FUNCTION_45
0x167	          0x4889e5	                            mov rbp, rsp	        59	gettext.h	FUNCTION_45
0x16a	        0x4883ec20	                           sub rsp, 0x20	        59	gettext.h	FUNCTION_45
0x16e	        0x48897df8	                mov qword [rbp - 8], rdi	        59	gettext.h	FUNCTION_45
0x172	        0x488975f0	             mov qword [rbp - 0x10], rsi	        59	gettext.h	FUNCTION_45
0x176	        0x488955e8	             mov qword [rbp - 0x18], rdx	        59	gettext.h	FUNCTION_45
0x17a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        62	gettext.h	FUNCTION_45	CALL_2
0x17e	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        62	gettext.h	FUNCTION_45	CALL_2
0x182	        0x488b45f8	                mov rax, qword [rbp - 8]	        62	gettext.h	FUNCTION_45	CALL_2
0x186	          0x4889ce	                            mov rsi, rcx	        62	gettext.h	FUNCTION_45	CALL_2
0x189	          0x4889c7	                            mov rdi, rax	        62	gettext.h	FUNCTION_45	CALL_2
0x18c	      0xe800000000	                          call 0x40001d1	        62	gettext.h	FUNCTION_45	CALL_2
0x191	              0xc9	                                   leave	        63	gettext.h	FUNCTION_45
0x192	              0xc3	                                     ret	        63	gettext.h	FUNCTION_45
strbuf_addstr	IF,0:functions,0:DO,0:ELSE,0:FOR,0:SWITCH,0:CALL,2:WHILE,0	17
0x105	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_7
0x106	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_7
0x109	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_7
0x10d	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_7
0x111	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_7
0x115	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_7	CALL_2
0x119	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_7	CALL_2
0x11c	      0xe800000000	                          call 0x4000161	       279	strbuf.h	FUNCTION_7	CALL_2
0x121	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_7	CALL_2
0x124	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_7	CALL_2
0x128	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_7	CALL_2
0x12c	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_7	CALL_2
0x12f	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_7	CALL_2
0x132	      0xe800000000	                          call 0x4000177	       279	strbuf.h	FUNCTION_7	CALL_2
0x137	              0x90	                                     nop	       280	strbuf.h	FUNCTION_7
0x138	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_7
0x139	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_7
strbuf_addch	IF,1:functions,0:DO,0:ELSE,0:FOR,0:SWITCH,0:CALL,2:WHILE,0	33
0x97	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_6
0x98	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_6
0x9b	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_6
0x9f	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_6
0xa3	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_6
0xa6	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_6	IF_1	CALL_1
0xaa	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_6	IF_1	CALL_1
0xad	      0xe8afffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_6	IF_1	CALL_1
0xb2	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_6	IF_1	CALL_1
0xb5	            0x7511	                           jne 0x4000108	       227	strbuf.h	FUNCTION_6	IF_1	CALL_1
0xb7	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_6	CALL_2
0xbb	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_6	CALL_2
0xc0	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_6	CALL_2
0xc3	      0xe800000000	                          call 0x4000108	       228	strbuf.h	FUNCTION_6	CALL_2
0xc8	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_6
0xcc	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_6
0xd0	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_6
0xd4	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_6
0xd8	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_6
0xdc	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_6
0xe0	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_6
0xe4	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_6
0xe7	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_6
0xea	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_6
0xec	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_6
0xf0	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_6
0xf4	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_6
0xf8	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_6
0xfc	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_6
0xff	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_6
0x102	              0x90	                                     nop	       231	strbuf.h	FUNCTION_6
0x103	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_6
0x104	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_6
skip_prefix	IF,1:functions,0:DO,1:ELSE,0:FOR,0:SWITCH,0:CALL,0:WHILE,0	27
0xb	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_20
0xc	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_20
0xf	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_20
0x13	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_20
0x17	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_20
0x1b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_20	DO_1	IF_1
0x1f	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_20	DO_1	IF_1
0x22	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_20	DO_1	IF_1
0x24	            0x7512	                           jne 0x4000078	       484	git-compat-util.h	FUNCTION_20	DO_1	IF_1
0x26	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_20	DO_1	IF_1
0x2a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_20	DO_1	IF_1
0x2e	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_20	DO_1	IF_1
0x31	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_20	DO_1	IF_1
0x36	            0xeb27	                           jmp 0x400009f	       486	git-compat-util.h	FUNCTION_20	DO_1	IF_1
0x38	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_20	DO_1
0x3c	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_20	DO_1
0x40	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_20	DO_1
0x44	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_20	DO_1
0x47	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_20	DO_1
0x4b	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_20	DO_1
0x4f	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_20	DO_1
0x53	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_20	DO_1
0x56	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_20	DO_1
0x58	            0x74c1	                            je 0x400005b	       488	git-compat-util.h	FUNCTION_20	DO_1
0x5a	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_20
0x5f	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_20
0x60	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_20
parse_commit	IF,0:functions,0:DO,0:ELSE,0:FOR,0:SWITCH,0:CALL,1:WHILE,0	10
0x2e2	              0x55	                                push rbp	        74	commit.h	FUNCTION_41
0x2e3	          0x4889e5	                            mov rbp, rsp	        74	commit.h	FUNCTION_41
0x2e6	        0x4883ec10	                           sub rsp, 0x10	        74	commit.h	FUNCTION_41
0x2ea	        0x48897df8	                mov qword [rbp - 8], rdi	        74	commit.h	FUNCTION_41
0x2ee	        0x488b45f8	                mov rax, qword [rbp - 8]	        75	commit.h	FUNCTION_41	CALL_1
0x2f2	      0xbe00000000	                              mov esi, 0	        75	commit.h	FUNCTION_41	CALL_1
0x2f7	          0x4889c7	                            mov rdi, rax	        75	commit.h	FUNCTION_41	CALL_1
0x2fa	      0xe800000000	                          call 0x400033f	        75	commit.h	FUNCTION_41	CALL_1
0x2ff	              0xc9	                                   leave	        76	commit.h	FUNCTION_41
0x300	              0xc3	                                     ret	        76	commit.h	FUNCTION_41
ce_path_match	IF,0:functions,0:DO,0:ELSE,0:FOR,0:SWITCH,0:CALL,4:WHILE,0	34
0x301	              0x55	                                push rbp	       335	dir.h	FUNCTION_47
0x302	          0x4889e5	                            mov rbp, rsp	       335	dir.h	FUNCTION_47
0x305	        0x4883ec20	                           sub rsp, 0x20	       335	dir.h	FUNCTION_47
0x309	        0x48897df8	                mov qword [rbp - 8], rdi	       335	dir.h	FUNCTION_47
0x30d	        0x488975f0	             mov qword [rbp - 0x10], rsi	       335	dir.h	FUNCTION_47
0x311	        0x488955e8	             mov qword [rbp - 0x18], rdx	       335	dir.h	FUNCTION_47
0x315	        0x488b45f8	                mov rax, qword [rbp - 8]	       337	dir.h	FUNCTION_47	CALL_4
0x319	          0x8b4034	            mov eax, dword [rax + 0x34] 	       337	dir.h	FUNCTION_47	CALL_4
0x31c	      0x2500f00000	                         and eax, 0xf000	       337	dir.h	FUNCTION_47	CALL_4
0x321	      0x3d00400000	                         cmp eax, 0x4000	       336	dir.h	FUNCTION_47	CALL_2
0x326	            0x7413	                            je 0x400037b	       336	dir.h	FUNCTION_47	CALL_2
0x328	        0x488b45f8	                mov rax, qword [rbp - 8]	       337	dir.h	FUNCTION_47	CALL_4
0x32c	          0x8b4034	            mov eax, dword [rax + 0x34] 	       337	dir.h	FUNCTION_47	CALL_4
0x32f	      0x2500f00000	                         and eax, 0xf000	       337	dir.h	FUNCTION_47	CALL_4
0x334	      0x3d00e00000	                         cmp eax, 0xe000	       336	dir.h	FUNCTION_47	CALL_2
0x339	            0x7507	                           jne 0x4000382	       336	dir.h	FUNCTION_47	CALL_2
0x33b	      0xb901000000	                              mov ecx, 1	       336	dir.h	FUNCTION_47	CALL_2
0x340	            0xeb05	                           jmp 0x4000387	       336	dir.h	FUNCTION_47	CALL_2
0x342	      0xb900000000	                              mov ecx, 0	       336	dir.h	FUNCTION_47	CALL_2
0x347	        0x488b45f8	                mov rax, qword [rbp - 8]	       336	dir.h	FUNCTION_47	CALL_2
0x34b	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       336	dir.h	FUNCTION_47	CALL_2
0x34e	            0x89c7	                            mov edi, eax	       336	dir.h	FUNCTION_47	CALL_2
0x350	        0x488b45f8	                mov rax, qword [rbp - 8]	       336	dir.h	FUNCTION_47	CALL_2
0x354	        0x488d7058	                   lea rsi, [rax + 0x58]	       336	dir.h	FUNCTION_47	CALL_2
0x358	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       336	dir.h	FUNCTION_47	CALL_2
0x35c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       336	dir.h	FUNCTION_47	CALL_2
0x360	          0x4189c9	                            mov r9d, ecx	       336	dir.h	FUNCTION_47	CALL_2
0x363	          0x4989d0	                             mov r8, rdx	       336	dir.h	FUNCTION_47	CALL_2
0x366	      0xb900000000	                              mov ecx, 0	       336	dir.h	FUNCTION_47	CALL_2
0x36b	            0x89fa	                            mov edx, edi	       336	dir.h	FUNCTION_47	CALL_2
0x36d	          0x4889c7	                            mov rdi, rax	       336	dir.h	FUNCTION_47	CALL_2
0x370	      0xe800000000	                          call 0x40003b5	       336	dir.h	FUNCTION_47	CALL_2
0x375	              0xc9	                                   leave	       338	dir.h	FUNCTION_47
0x376	              0xc3	                                     ret	       338	dir.h	FUNCTION_47
strbuf_avail	IF,0:functions,0:DO,0:ELSE,0:FOR,0:SWITCH,0:CALL,0:WHILE,0	18
0x61	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_4
0x62	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_4
0x65	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_4
0x69	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_4
0x6d	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_4
0x70	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_4
0x73	            0x741b	                            je 0x40000d0	       141	strbuf.h	FUNCTION_4
0x75	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_4
0x79	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_4
0x7c	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_4
0x80	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_4
0x84	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_4
0x87	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_4
0x8a	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_4
0x8e	            0xeb05	                           jmp 0x40000d5	       141	strbuf.h	FUNCTION_4
0x90	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_4
0x95	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_4
0x96	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_4
const_error	IF,0:functions,0:DO,0:ELSE,0:FOR,0:SWITCH,0:CALL,0:WHILE,0	5
0x0	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_19
0x1	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_19
0x4	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_19
0x9	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_19
0xa	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_19
_	IF,1:functions,0:DO,0:ELSE,0:FOR,0:SWITCH,0:CALL,2:WHILE,0	15
0x13a	              0x55	                                push rbp	        51	gettext.h	FUNCTION_44
0x13b	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_44
0x13e	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_44
0x142	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_44
0x146	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_44	IF_1
0x14a	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_44	IF_1
0x14d	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_44	IF_1
0x14f	            0x7507	                           jne 0x4000198	        52	gettext.h	FUNCTION_44	IF_1
0x151	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_44	IF_1
0x156	            0xeb0c	                           jmp 0x40001a4	        53	gettext.h	FUNCTION_44	IF_1
0x158	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_44	CALL_2
0x15c	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_44	CALL_2
0x15f	      0xe800000000	                          call 0x40001a4	        54	gettext.h	FUNCTION_44	CALL_2
0x164	              0xc9	                                   leave	        55	gettext.h	FUNCTION_44
0x165	              0xc3	                                     ret	        55	gettext.h	FUNCTION_44
