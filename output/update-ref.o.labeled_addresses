update_refs_stdin	FOR,0:CALL,17:ELSE,7:WHILE,1:functions,0:SWITCH,0:DO,0:IF,8	140
0xc74	              0x55	                                push rbp	       322	update-ref.c	FUNCTION_9
0xc75	          0x4889e5	                            mov rbp, rsp	       322	update-ref.c	FUNCTION_9
0xc78	        0x4883ec40	                           sub rsp, 0x40	       322	update-ref.c	FUNCTION_9
0xc7c	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       322	update-ref.c	FUNCTION_9
0xc80	    0x64488b042528	                mov rax, qword fs:[0x28]	       322	update-ref.c	FUNCTION_9
0xc89	        0x488945f8	                mov qword [rbp - 8], rax	       322	update-ref.c	FUNCTION_9
0xc8d	            0x31c0	                            xor eax, eax	       322	update-ref.c	FUNCTION_9
0xc8f	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       323	update-ref.c	FUNCTION_9
0xc97	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       323	update-ref.c	FUNCTION_9
0xc9f	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       323	update-ref.c	FUNCTION_9
0xca7	        0x488d45e0	                   lea rax, [rbp - 0x20]	       326	update-ref.c	FUNCTION_9	IF_1	CALL_1
0xcab	      0xbae8030000	                          mov edx, 0x3e8	       326	update-ref.c	FUNCTION_9	IF_1	CALL_1
0xcb0	      0xbe00000000	                              mov esi, 0	       326	update-ref.c	FUNCTION_9	IF_1	CALL_1
0xcb5	          0x4889c7	                            mov rdi, rax	       326	update-ref.c	FUNCTION_9	IF_1	CALL_1
0xcb8	      0xe800000000	                          call 0x4000cfd	       326	update-ref.c	FUNCTION_9	IF_1	CALL_1
0xcbd	          0x4885c0	                           test rax, rax	       326	update-ref.c	FUNCTION_9	IF_1	CALL_1
0xcc0	            0x790f	                           jns 0x4000d11	       326	update-ref.c	FUNCTION_9	IF_1	CALL_1
0xcc2	      0xbf00000000	                              mov edi, 0	       327	update-ref.c	FUNCTION_9	CALL_2
0xcc7	      0xb800000000	                              mov eax, 0	       327	update-ref.c	FUNCTION_9	CALL_2
0xccc	      0xe800000000	                          call 0x4000d11	       327	update-ref.c	FUNCTION_9	CALL_2
0xcd1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       328	update-ref.c	FUNCTION_9
0xcd5	        0x488945d8	             mov qword [rbp - 0x28], rax	       328	update-ref.c	FUNCTION_9
0xcd9	      0xe97f010000	                           jmp 0x4000e9d	       330	update-ref.c	FUNCTION_9	WHILE_1
0xcde	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       331	update-ref.c	FUNCTION_9	WHILE_1	IF_2
0xce2	           0xfb610	                   movzx edx, byte [rax]	       331	update-ref.c	FUNCTION_9	WHILE_1	IF_2
0xce5	     0xfb605000000	           movzx eax, byte [0x04000d2c] 	       331	update-ref.c	FUNCTION_9	WHILE_1	IF_2
0xcec	            0x38c2	                              cmp dl, al	       331	update-ref.c	FUNCTION_9	WHILE_1	IF_2
0xcee	            0x750f	                           jne 0x4000d3f	       331	update-ref.c	FUNCTION_9	WHILE_1	IF_2
0xcf0	      0xbf00000000	                              mov edi, 0	       332	update-ref.c	FUNCTION_9	WHILE_1	CALL_3
0xcf5	      0xb800000000	                              mov eax, 0	       332	update-ref.c	FUNCTION_9	WHILE_1	CALL_3
0xcfa	      0xe800000000	                          call 0x4000d3f	       332	update-ref.c	FUNCTION_9	WHILE_1	CALL_3
0xcff	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       333	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3	CALL_4
0xd03	           0xfb600	                   movzx eax, byte [rax]	       333	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3	CALL_4
0xd06	           0xfb6c0	                           movzx eax, al	       333	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3	CALL_4
0xd09	            0x4898	                                    cdqe	       333	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3	CALL_4
0xd0b	     0xfb680000000	                   movzx eax, byte [rax]	       333	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3	CALL_4
0xd12	           0xfb6c0	                           movzx eax, al	       333	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3	CALL_4
0xd15	          0x83e001	                              and eax, 1	       333	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3	CALL_4
0xd18	            0x85c0	                           test eax, eax	       333	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3	CALL_4
0xd1a	            0x7416	                            je 0x4000d72	       333	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3	CALL_4
0xd1c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       334	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3
0xd20	          0x4889c6	                            mov rsi, rax	       334	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3
0xd23	      0xbf00000000	                              mov edi, 0	       334	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3
0xd28	      0xb800000000	                              mov eax, 0	       334	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3
0xd2d	      0xe800000000	                          call 0x4000d72	       334	update-ref.c	FUNCTION_9	WHILE_1	ELSE_1	IF_3
0xd32	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       335	update-ref.c	FUNCTION_9	WHILE_1	ELSE_2	IF_4	CALL_6
0xd36	      0xbe00000000	                              mov esi, 0	       335	update-ref.c	FUNCTION_9	WHILE_1	ELSE_2	IF_4	CALL_6
0xd3b	          0x4889c7	                            mov rdi, rax	       335	update-ref.c	FUNCTION_9	WHILE_1	ELSE_2	IF_4	CALL_6
0xd3e	      0xe800000000	                          call 0x4000d83	       335	update-ref.c	FUNCTION_9	WHILE_1	ELSE_2	IF_4	CALL_6
0xd43	            0x85c0	                           test eax, eax	       335	update-ref.c	FUNCTION_9	WHILE_1	ELSE_2	IF_4	CALL_6
0xd45	            0x7424	                            je 0x4000dab	       335	update-ref.c	FUNCTION_9	WHILE_1	ELSE_2	IF_4	CALL_6
0xd47	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       336	update-ref.c	FUNCTION_9	WHILE_1	ELSE_2	IF_4
0xd4b	        0x488d5007	                      lea rdx, [rax + 7]	       336	update-ref.c	FUNCTION_9	WHILE_1	ELSE_2	IF_4
0xd4f	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       336	update-ref.c	FUNCTION_9	WHILE_1	ELSE_2	IF_4
0xd53	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       336	update-ref.c	FUNCTION_9	WHILE_1	ELSE_2	IF_4
0xd57	          0x4889ce	                            mov rsi, rcx	       336	update-ref.c	FUNCTION_9	WHILE_1	ELSE_2	IF_4
0xd5a	          0x4889c7	                            mov rdi, rax	       336	update-ref.c	FUNCTION_9	WHILE_1	ELSE_2	IF_4
0xd5d	      0xe888f8ffff	               call sym.parse_cmd_update	       336	update-ref.c	FUNCTION_9	WHILE_1	ELSE_2	IF_4
0xd62	        0x488945d8	             mov qword [rbp - 0x28], rax	       336	update-ref.c	FUNCTION_9	WHILE_1	ELSE_2	IF_4
0xd66	      0xe9ed000000	                           jmp 0x4000e98	       336	update-ref.c	FUNCTION_9	WHILE_1	ELSE_2	IF_4
0xd6b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       337	update-ref.c	FUNCTION_9	WHILE_1	ELSE_3	IF_5	CALL_8
0xd6f	      0xbe00000000	                              mov esi, 0	       337	update-ref.c	FUNCTION_9	WHILE_1	ELSE_3	IF_5	CALL_8
0xd74	          0x4889c7	                            mov rdi, rax	       337	update-ref.c	FUNCTION_9	WHILE_1	ELSE_3	IF_5	CALL_8
0xd77	      0xe800000000	                          call 0x4000dbc	       337	update-ref.c	FUNCTION_9	WHILE_1	ELSE_3	IF_5	CALL_8
0xd7c	            0x85c0	                           test eax, eax	       337	update-ref.c	FUNCTION_9	WHILE_1	ELSE_3	IF_5	CALL_8
0xd7e	            0x7424	                            je 0x4000de4	       337	update-ref.c	FUNCTION_9	WHILE_1	ELSE_3	IF_5	CALL_8
0xd80	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       338	update-ref.c	FUNCTION_9	WHILE_1	ELSE_3	IF_5
0xd84	        0x488d5007	                      lea rdx, [rax + 7]	       338	update-ref.c	FUNCTION_9	WHILE_1	ELSE_3	IF_5
0xd88	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       338	update-ref.c	FUNCTION_9	WHILE_1	ELSE_3	IF_5
0xd8c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       338	update-ref.c	FUNCTION_9	WHILE_1	ELSE_3	IF_5
0xd90	          0x4889ce	                            mov rsi, rcx	       338	update-ref.c	FUNCTION_9	WHILE_1	ELSE_3	IF_5
0xd93	          0x4889c7	                            mov rdi, rax	       338	update-ref.c	FUNCTION_9	WHILE_1	ELSE_3	IF_5
0xd96	      0xe814faffff	               call sym.parse_cmd_create	       338	update-ref.c	FUNCTION_9	WHILE_1	ELSE_3	IF_5
0xd9b	        0x488945d8	             mov qword [rbp - 0x28], rax	       338	update-ref.c	FUNCTION_9	WHILE_1	ELSE_3	IF_5
0xd9f	      0xe9b4000000	                           jmp 0x4000e98	       338	update-ref.c	FUNCTION_9	WHILE_1	ELSE_3	IF_5
0xda4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       339	update-ref.c	FUNCTION_9	WHILE_1	ELSE_4	IF_6	CALL_10
0xda8	      0xbe00000000	                              mov esi, 0	       339	update-ref.c	FUNCTION_9	WHILE_1	ELSE_4	IF_6	CALL_10
0xdad	          0x4889c7	                            mov rdi, rax	       339	update-ref.c	FUNCTION_9	WHILE_1	ELSE_4	IF_6	CALL_10
0xdb0	      0xe800000000	                          call 0x4000df5	       339	update-ref.c	FUNCTION_9	WHILE_1	ELSE_4	IF_6	CALL_10
0xdb5	            0x85c0	                           test eax, eax	       339	update-ref.c	FUNCTION_9	WHILE_1	ELSE_4	IF_6	CALL_10
0xdb7	            0x7421	                            je 0x4000e1a	       339	update-ref.c	FUNCTION_9	WHILE_1	ELSE_4	IF_6	CALL_10
0xdb9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       340	update-ref.c	FUNCTION_9	WHILE_1	ELSE_4	IF_6
0xdbd	        0x488d5007	                      lea rdx, [rax + 7]	       340	update-ref.c	FUNCTION_9	WHILE_1	ELSE_4	IF_6
0xdc1	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       340	update-ref.c	FUNCTION_9	WHILE_1	ELSE_4	IF_6
0xdc5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       340	update-ref.c	FUNCTION_9	WHILE_1	ELSE_4	IF_6
0xdc9	          0x4889ce	                            mov rsi, rcx	       340	update-ref.c	FUNCTION_9	WHILE_1	ELSE_4	IF_6
0xdcc	          0x4889c7	                            mov rdi, rax	       340	update-ref.c	FUNCTION_9	WHILE_1	ELSE_4	IF_6
0xdcf	      0xe862fbffff	               call sym.parse_cmd_delete	       340	update-ref.c	FUNCTION_9	WHILE_1	ELSE_4	IF_6
0xdd4	        0x488945d8	             mov qword [rbp - 0x28], rax	       340	update-ref.c	FUNCTION_9	WHILE_1	ELSE_4	IF_6
0xdd8	            0xeb7e	                           jmp 0x4000e98	       340	update-ref.c	FUNCTION_9	WHILE_1	ELSE_4	IF_6
0xdda	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       341	update-ref.c	FUNCTION_9	WHILE_1	ELSE_5	IF_7	CALL_12
0xdde	      0xbe00000000	                              mov esi, 0	       341	update-ref.c	FUNCTION_9	WHILE_1	ELSE_5	IF_7	CALL_12
0xde3	          0x4889c7	                            mov rdi, rax	       341	update-ref.c	FUNCTION_9	WHILE_1	ELSE_5	IF_7	CALL_12
0xde6	      0xe800000000	                          call 0x4000e2b	       341	update-ref.c	FUNCTION_9	WHILE_1	ELSE_5	IF_7	CALL_12
0xdeb	            0x85c0	                           test eax, eax	       341	update-ref.c	FUNCTION_9	WHILE_1	ELSE_5	IF_7	CALL_12
0xded	            0x7421	                            je 0x4000e50	       341	update-ref.c	FUNCTION_9	WHILE_1	ELSE_5	IF_7	CALL_12
0xdef	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       342	update-ref.c	FUNCTION_9	WHILE_1	ELSE_5	IF_7
0xdf3	        0x488d5007	                      lea rdx, [rax + 7]	       342	update-ref.c	FUNCTION_9	WHILE_1	ELSE_5	IF_7
0xdf7	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       342	update-ref.c	FUNCTION_9	WHILE_1	ELSE_5	IF_7
0xdfb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       342	update-ref.c	FUNCTION_9	WHILE_1	ELSE_5	IF_7
0xdff	          0x4889ce	                            mov rsi, rcx	       342	update-ref.c	FUNCTION_9	WHILE_1	ELSE_5	IF_7
0xe02	          0x4889c7	                            mov rdi, rax	       342	update-ref.c	FUNCTION_9	WHILE_1	ELSE_5	IF_7
0xe05	      0xe8b4fcffff	               call sym.parse_cmd_verify	       342	update-ref.c	FUNCTION_9	WHILE_1	ELSE_5	IF_7
0xe0a	        0x488945d8	             mov qword [rbp - 0x28], rax	       342	update-ref.c	FUNCTION_9	WHILE_1	ELSE_5	IF_7
0xe0e	            0xeb48	                           jmp 0x4000e98	       342	update-ref.c	FUNCTION_9	WHILE_1	ELSE_5	IF_7
0xe10	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       343	update-ref.c	FUNCTION_9	WHILE_1	ELSE_6	IF_8	CALL_14
0xe14	      0xbe00000000	                              mov esi, 0	       343	update-ref.c	FUNCTION_9	WHILE_1	ELSE_6	IF_8	CALL_14
0xe19	          0x4889c7	                            mov rdi, rax	       343	update-ref.c	FUNCTION_9	WHILE_1	ELSE_6	IF_8	CALL_14
0xe1c	      0xe800000000	                          call 0x4000e61	       343	update-ref.c	FUNCTION_9	WHILE_1	ELSE_6	IF_8	CALL_14
0xe21	            0x85c0	                           test eax, eax	       343	update-ref.c	FUNCTION_9	WHILE_1	ELSE_6	IF_8	CALL_14
0xe23	            0x741d	                            je 0x4000e82	       343	update-ref.c	FUNCTION_9	WHILE_1	ELSE_6	IF_8	CALL_14
0xe25	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       344	update-ref.c	FUNCTION_9	WHILE_1	ELSE_6	IF_8
0xe29	        0x488d5007	                      lea rdx, [rax + 7]	       344	update-ref.c	FUNCTION_9	WHILE_1	ELSE_6	IF_8
0xe2d	        0x488d45e0	                   lea rax, [rbp - 0x20]	       344	update-ref.c	FUNCTION_9	WHILE_1	ELSE_6	IF_8
0xe31	          0x4889d6	                            mov rsi, rdx	       344	update-ref.c	FUNCTION_9	WHILE_1	ELSE_6	IF_8
0xe34	          0x4889c7	                            mov rdi, rax	       344	update-ref.c	FUNCTION_9	WHILE_1	ELSE_6	IF_8
0xe37	      0xe8c7fdffff	               call sym.parse_cmd_option	       344	update-ref.c	FUNCTION_9	WHILE_1	ELSE_6	IF_8
0xe3c	        0x488945d8	             mov qword [rbp - 0x28], rax	       344	update-ref.c	FUNCTION_9	WHILE_1	ELSE_6	IF_8
0xe40	            0xeb16	                           jmp 0x4000e98	       344	update-ref.c	FUNCTION_9	WHILE_1	ELSE_6	IF_8
0xe42	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       346	update-ref.c	FUNCTION_9	WHILE_1	CALL_16
0xe46	          0x4889c6	                            mov rsi, rax	       346	update-ref.c	FUNCTION_9	WHILE_1	CALL_16
0xe49	      0xbf00000000	                              mov edi, 0	       346	update-ref.c	FUNCTION_9	WHILE_1	CALL_16
0xe4e	      0xb800000000	                              mov eax, 0	       346	update-ref.c	FUNCTION_9	WHILE_1	CALL_16
0xe53	      0xe800000000	                          call 0x4000e98	       346	update-ref.c	FUNCTION_9	WHILE_1	CALL_16
0xe58	      0x488345d801	               add qword [rbp - 0x28], 1	       348	update-ref.c	FUNCTION_9	WHILE_1
0xe5d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       330	update-ref.c	FUNCTION_9	WHILE_1
0xe61	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       330	update-ref.c	FUNCTION_9	WHILE_1
0xe65	          0x4801d0	                            add rax, rdx	       330	update-ref.c	FUNCTION_9	WHILE_1
0xe68	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       330	update-ref.c	FUNCTION_9	WHILE_1
0xe6c	     0xf876cfeffff	                            ja 0x4000d1e	       330	update-ref.c	FUNCTION_9	WHILE_1
0xe72	        0x488d45e0	                   lea rax, [rbp - 0x20]	       351	update-ref.c	FUNCTION_9	CALL_17
0xe76	          0x4889c7	                            mov rdi, rax	       351	update-ref.c	FUNCTION_9	CALL_17
0xe79	      0xe800000000	                          call 0x4000ebe	       351	update-ref.c	FUNCTION_9	CALL_17
0xe7e	              0x90	                                     nop	       352	update-ref.c	FUNCTION_9
0xe7f	        0x488b45f8	                mov rax, qword [rbp - 8]	       352	update-ref.c	FUNCTION_9
0xe83	    0x644833042528	                xor rax, qword fs:[0x28]	       352	update-ref.c	FUNCTION_9
0xe8c	            0x7405	                            je 0x4000ed3	       352	update-ref.c	FUNCTION_9
0xe8e	      0xe800000000	                          call 0x4000ed3	       352	update-ref.c	FUNCTION_9
0xe93	              0xc9	                                   leave	       352	update-ref.c	FUNCTION_9
0xe94	              0xc3	                                     ret	       352	update-ref.c	FUNCTION_9
parse_cmd_verify	FOR,0:CALL,9:ELSE,0:WHILE,0:functions,0:SWITCH,0:DO,0:IF,4	79
0xabe	              0x55	                                push rbp	       285	update-ref.c	FUNCTION_7
0xabf	          0x4889e5	                            mov rbp, rsp	       285	update-ref.c	FUNCTION_7
0xac2	        0x4883ec70	                           sub rsp, 0x70	       285	update-ref.c	FUNCTION_7
0xac6	        0x48897da8	             mov qword [rbp - 0x58], rdi	       285	update-ref.c	FUNCTION_7
0xaca	        0x488975a0	             mov qword [rbp - 0x60], rsi	       285	update-ref.c	FUNCTION_7
0xace	        0x48895598	             mov qword [rbp - 0x68], rdx	       285	update-ref.c	FUNCTION_7
0xad2	    0x64488b042528	                mov rax, qword fs:[0x28]	       285	update-ref.c	FUNCTION_7
0xadb	        0x488945f8	                mov qword [rbp - 8], rax	       285	update-ref.c	FUNCTION_7
0xadf	            0x31c0	                            xor eax, eax	       285	update-ref.c	FUNCTION_7
0xae1	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       286	update-ref.c	FUNCTION_7
0xae9	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       286	update-ref.c	FUNCTION_7
0xaf1	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       286	update-ref.c	FUNCTION_7
0xaf9	        0x488d5598	                   lea rdx, [rbp - 0x68]	       290	update-ref.c	FUNCTION_7	CALL_1
0xafd	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       290	update-ref.c	FUNCTION_7	CALL_1
0xb01	          0x4889d6	                            mov rsi, rdx	       290	update-ref.c	FUNCTION_7	CALL_1
0xb04	          0x4889c7	                            mov rdi, rax	       290	update-ref.c	FUNCTION_7	CALL_1
0xb07	      0xe827f7ffff	                  call sym.parse_refname	       290	update-ref.c	FUNCTION_7	CALL_1
0xb0c	        0x488945b8	             mov qword [rbp - 0x48], rax	       290	update-ref.c	FUNCTION_7	CALL_1
0xb10	      0x48837db800	               cmp qword [rbp - 0x48], 0	       291	update-ref.c	FUNCTION_7	IF_1
0xb15	            0x750f	                           jne 0x4000b66	       291	update-ref.c	FUNCTION_7	IF_1
0xb17	      0xbf00000000	                              mov edi, 0	       292	update-ref.c	FUNCTION_7	CALL_2
0xb1c	      0xb800000000	                              mov eax, 0	       292	update-ref.c	FUNCTION_7	CALL_2
0xb21	      0xe800000000	                          call 0x4000b66	       292	update-ref.c	FUNCTION_7	CALL_2
0xb26	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0xb2a	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0xb2e	        0x488d7598	                   lea rsi, [rbp - 0x68]	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0xb32	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0xb36	    0x41b901000000	                              mov r9d, 1	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0xb3c	          0x4989c8	                             mov r8, rcx	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0xb3f	      0xb900000000	                              mov ecx, 0	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0xb44	          0x4889c7	                            mov rdi, rax	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0xb47	      0xe8e4f7ffff	                 call sym.parse_next_oid	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0xb4c	            0x85c0	                           test eax, eax	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0xb4e	            0x740c	                            je 0x4000b9c	       294	update-ref.c	FUNCTION_7	IF_2	CALL_3
0xb50	        0x488d45e0	                   lea rax, [rbp - 0x20]	       296	update-ref.c	FUNCTION_7	CALL_4
0xb54	          0x4889c7	                            mov rdi, rax	       296	update-ref.c	FUNCTION_7	CALL_4
0xb57	      0xe8cef5ffff	                         call sym.oidclr	       296	update-ref.c	FUNCTION_7	CALL_4
0xb5c	        0x488b4598	             mov rax, qword [rbp - 0x68]	       298	update-ref.c	FUNCTION_7	IF_3
0xb60	           0xfb610	                   movzx edx, byte [rax]	       298	update-ref.c	FUNCTION_7	IF_3
0xb63	     0xfb605000000	           movzx eax, byte [0x04000baa] 	       298	update-ref.c	FUNCTION_7	IF_3
0xb6a	            0x38c2	                              cmp dl, al	       298	update-ref.c	FUNCTION_7	IF_3
0xb6c	            0x741a	                            je 0x4000bc8	       298	update-ref.c	FUNCTION_7	IF_3
0xb6e	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       299	update-ref.c	FUNCTION_7	CALL_5
0xb72	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       299	update-ref.c	FUNCTION_7	CALL_5
0xb76	          0x4889c6	                            mov rsi, rax	       299	update-ref.c	FUNCTION_7	CALL_5
0xb79	      0xbf00000000	                              mov edi, 0	       299	update-ref.c	FUNCTION_7	CALL_5
0xb7e	      0xb800000000	                              mov eax, 0	       299	update-ref.c	FUNCTION_7	CALL_5
0xb83	      0xe800000000	                          call 0x4000bc8	       299	update-ref.c	FUNCTION_7	CALL_5
0xb88	    0x8b0500000000	            mov eax, dword [0x04000bce] 	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0xb8e	            0x89c7	                            mov edi, eax	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0xb90	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0xb94	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0xb98	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0xb9c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0xba0	          0x4989c8	                             mov r8, rcx	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0xba3	            0x89f9	                            mov ecx, edi	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0xba5	          0x4889c7	                            mov rdi, rax	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0xba8	      0xe800000000	                          call 0x4000bed	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0xbad	            0x85c0	                           test eax, eax	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0xbaf	            0x7416	                            je 0x4000c07	       301	update-ref.c	FUNCTION_7	IF_4	CALL_6
0xbb1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       303	update-ref.c	FUNCTION_7	CALL_7
0xbb5	          0x4889c6	                            mov rsi, rax	       303	update-ref.c	FUNCTION_7	CALL_7
0xbb8	      0xbf00000000	                              mov edi, 0	       303	update-ref.c	FUNCTION_7	CALL_7
0xbbd	      0xb800000000	                              mov eax, 0	       303	update-ref.c	FUNCTION_7	CALL_7
0xbc2	      0xe800000000	                          call 0x4000c07	       303	update-ref.c	FUNCTION_7	CALL_7
0xbc7	    0xc70500000000	               mov dword [0x04000c11], 0	       305	update-ref.c	FUNCTION_7
0xbd1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       306	update-ref.c	FUNCTION_7	CALL_8
0xbd5	          0x4889c7	                            mov rdi, rax	       306	update-ref.c	FUNCTION_7	CALL_8
0xbd8	      0xe800000000	                          call 0x4000c1d	       306	update-ref.c	FUNCTION_7	CALL_8
0xbdd	        0x488d45c0	                   lea rax, [rbp - 0x40]	       307	update-ref.c	FUNCTION_7	CALL_9
0xbe1	          0x4889c7	                            mov rdi, rax	       307	update-ref.c	FUNCTION_7	CALL_9
0xbe4	      0xe800000000	                          call 0x4000c29	       307	update-ref.c	FUNCTION_7	CALL_9
0xbe9	        0x488b4598	             mov rax, qword [rbp - 0x68]	       309	update-ref.c	FUNCTION_7
0xbed	        0x488b4df8	                mov rcx, qword [rbp - 8]	       310	update-ref.c	FUNCTION_7
0xbf1	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       310	update-ref.c	FUNCTION_7
0xbfa	            0x7405	                            je 0x4000c41	       310	update-ref.c	FUNCTION_7
0xbfc	      0xe800000000	                          call 0x4000c41	       310	update-ref.c	FUNCTION_7
0xc01	              0xc9	                                   leave	       310	update-ref.c	FUNCTION_7
0xc02	              0xc3	                                     ret	       310	update-ref.c	FUNCTION_7
strbuf_avail	FOR,0:CALL,0:ELSE,0:WHILE,0:functions,0:SWITCH,0:DO,0:IF,0	18
0x0	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_12
0x1	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_12
0x4	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_12
0x8	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_12
0xc	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_12
0xf	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_12
0x12	            0x741b	                            je 0x400006f	       141	strbuf.h	FUNCTION_12
0x14	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_12
0x18	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_12
0x1b	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_12
0x1f	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_12
0x23	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_12
0x26	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_12
0x29	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_12
0x2d	            0xeb05	                           jmp 0x4000074	       141	strbuf.h	FUNCTION_12
0x2f	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_12
0x34	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_12
0x35	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_12
strbuf_addstr	FOR,0:CALL,2:ELSE,0:WHILE,0:functions,0:SWITCH,0:DO,0:IF,0	17
0xa4	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_15
0xa5	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_15
0xa8	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_15
0xac	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_15
0xb0	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_15
0xb4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_15	CALL_2
0xb8	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_15	CALL_2
0xbb	      0xe800000000	                          call 0x4000100	       279	strbuf.h	FUNCTION_15	CALL_2
0xc0	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_15	CALL_2
0xc3	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_15	CALL_2
0xc7	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_15	CALL_2
0xcb	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_15	CALL_2
0xce	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_15	CALL_2
0xd1	      0xe800000000	                          call 0x4000116	       279	strbuf.h	FUNCTION_15	CALL_2
0xd6	              0x90	                                     nop	       280	strbuf.h	FUNCTION_15
0xd7	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_15
0xd8	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_15
parse_refname	FOR,0:CALL,6:ELSE,1:WHILE,0:functions,0:SWITCH,0:DO,0:IF,3	65
0x233	              0x55	                                push rbp	        53	update-ref.c	FUNCTION_2
0x234	          0x4889e5	                            mov rbp, rsp	        53	update-ref.c	FUNCTION_2
0x237	        0x4883ec30	                           sub rsp, 0x30	        53	update-ref.c	FUNCTION_2
0x23b	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        53	update-ref.c	FUNCTION_2
0x23f	        0x488975d0	             mov qword [rbp - 0x30], rsi	        53	update-ref.c	FUNCTION_2
0x243	    0x64488b042528	                mov rax, qword fs:[0x28]	        53	update-ref.c	FUNCTION_2
0x24c	        0x488945f8	                mov qword [rbp - 8], rax	        53	update-ref.c	FUNCTION_2
0x250	            0x31c0	                            xor eax, eax	        53	update-ref.c	FUNCTION_2
0x252	    0x48c745e00000	               mov qword [rbp - 0x20], 0	        54	update-ref.c	FUNCTION_2
0x25a	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        54	update-ref.c	FUNCTION_2
0x262	    0x48c745f00000	               mov qword [rbp - 0x10], 0	        54	update-ref.c	FUNCTION_2
0x26a	     0xfb605000000	           movzx eax, byte [0x040002b1] 	        56	update-ref.c	FUNCTION_2	IF_1
0x271	            0x84c0	                             test al, al	        56	update-ref.c	FUNCTION_2	IF_1
0x273	            0x7422	                            je 0x40002d7	        56	update-ref.c	FUNCTION_2	IF_1
0x275	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        58	update-ref.c	FUNCTION_2	IF_1	CALL_1
0x279	          0x488b00	                    mov rax, qword [rax]	        58	update-ref.c	FUNCTION_2	IF_1	CALL_1
0x27c	        0x488d55e0	                   lea rdx, [rbp - 0x20]	        58	update-ref.c	FUNCTION_2	IF_1	CALL_1
0x280	          0x4889d6	                            mov rsi, rdx	        58	update-ref.c	FUNCTION_2	IF_1	CALL_1
0x283	          0x4889c7	                            mov rdi, rax	        58	update-ref.c	FUNCTION_2	IF_1	CALL_1
0x286	      0xe8c4feffff	                      call sym.parse_arg	        58	update-ref.c	FUNCTION_2	IF_1	CALL_1
0x28b	          0x4889c2	                            mov rdx, rax	        58	update-ref.c	FUNCTION_2	IF_1	CALL_1
0x28e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        58	update-ref.c	FUNCTION_2	IF_1	CALL_1
0x292	          0x488910	                    mov qword [rax], rdx	        58	update-ref.c	FUNCTION_2	IF_1	CALL_1
0x295	            0xeb2b	                           jmp 0x4000302	        58	update-ref.c	FUNCTION_2	IF_1	CALL_1
0x297	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        61	update-ref.c	FUNCTION_2	ELSE_1	CALL_2
0x29b	          0x488b10	                    mov rdx, qword [rax]	        61	update-ref.c	FUNCTION_2	ELSE_1	CALL_2
0x29e	        0x488d45e0	                   lea rax, [rbp - 0x20]	        61	update-ref.c	FUNCTION_2	ELSE_1	CALL_2
0x2a2	          0x4889d6	                            mov rsi, rdx	        61	update-ref.c	FUNCTION_2	ELSE_1	CALL_2
0x2a5	          0x4889c7	                            mov rdi, rax	        61	update-ref.c	FUNCTION_2	ELSE_1	CALL_2
0x2a8	      0xe8f7fdffff	                  call sym.strbuf_addstr	        61	update-ref.c	FUNCTION_2	ELSE_1	CALL_2
0x2ad	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        62	update-ref.c	FUNCTION_2	ELSE_1
0x2b1	          0x488b10	                    mov rdx, qword [rax]	        62	update-ref.c	FUNCTION_2	ELSE_1
0x2b4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        62	update-ref.c	FUNCTION_2	ELSE_1
0x2b8	          0x4801c2	                            add rdx, rax	        62	update-ref.c	FUNCTION_2	ELSE_1
0x2bb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        62	update-ref.c	FUNCTION_2	ELSE_1
0x2bf	          0x488910	                    mov qword [rax], rdx	        62	update-ref.c	FUNCTION_2	ELSE_1
0x2c2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        65	update-ref.c	FUNCTION_2	IF_2
0x2c6	          0x4885c0	                           test rax, rax	        65	update-ref.c	FUNCTION_2	IF_2
0x2c9	            0x7513	                           jne 0x400031e	        65	update-ref.c	FUNCTION_2	IF_2
0x2cb	        0x488d45e0	                   lea rax, [rbp - 0x20]	        66	update-ref.c	FUNCTION_2	IF_2	CALL_3
0x2cf	          0x4889c7	                            mov rdi, rax	        66	update-ref.c	FUNCTION_2	IF_2	CALL_3
0x2d2	      0xe800000000	                          call 0x4000317	        66	update-ref.c	FUNCTION_2	IF_2	CALL_3
0x2d7	      0xb800000000	                              mov eax, 0	        67	update-ref.c	FUNCTION_2	IF_2
0x2dc	            0xeb3c	                           jmp 0x400035a	        67	update-ref.c	FUNCTION_2	IF_2
0x2de	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        70	update-ref.c	FUNCTION_2	IF_3	CALL_4
0x2e2	      0xbe01000000	                              mov esi, 1	        70	update-ref.c	FUNCTION_2	IF_3	CALL_4
0x2e7	          0x4889c7	                            mov rdi, rax	        70	update-ref.c	FUNCTION_2	IF_3	CALL_4
0x2ea	      0xe800000000	                          call 0x400032f	        70	update-ref.c	FUNCTION_2	IF_3	CALL_4
0x2ef	            0x85c0	                           test eax, eax	        70	update-ref.c	FUNCTION_2	IF_3	CALL_4
0x2f1	            0x7416	                            je 0x4000349	        70	update-ref.c	FUNCTION_2	IF_3	CALL_4
0x2f3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        71	update-ref.c	FUNCTION_2	CALL_5
0x2f7	          0x4889c6	                            mov rsi, rax	        71	update-ref.c	FUNCTION_2	CALL_5
0x2fa	      0xbf00000000	                              mov edi, 0	        71	update-ref.c	FUNCTION_2	CALL_5
0x2ff	      0xb800000000	                              mov eax, 0	        71	update-ref.c	FUNCTION_2	CALL_5
0x304	      0xe800000000	                          call 0x4000349	        71	update-ref.c	FUNCTION_2	CALL_5
0x309	        0x488d45e0	                   lea rax, [rbp - 0x20]	        73	update-ref.c	FUNCTION_2	CALL_6
0x30d	      0xbe00000000	                              mov esi, 0	        73	update-ref.c	FUNCTION_2	CALL_6
0x312	          0x4889c7	                            mov rdi, rax	        73	update-ref.c	FUNCTION_2	CALL_6
0x315	      0xe800000000	                          call 0x400035a	        73	update-ref.c	FUNCTION_2	CALL_6
0x31a	        0x488b4df8	                mov rcx, qword [rbp - 8]	        74	update-ref.c	FUNCTION_2
0x31e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        74	update-ref.c	FUNCTION_2
0x327	            0x7405	                            je 0x400036e	        74	update-ref.c	FUNCTION_2
0x329	      0xe800000000	                          call 0x400036e	        74	update-ref.c	FUNCTION_2
0x32e	              0xc9	                                   leave	        74	update-ref.c	FUNCTION_2
0x32f	              0xc3	                                     ret	        74	update-ref.c	FUNCTION_2
cmd_update_ref	FOR,0:CALL,36:ELSE,3:WHILE,0:functions,0:SWITCH,0:DO,0:IF,16	266
0xe95	              0x55	                                push rbp	       355	update-ref.c	FUNCTION_10
0xe96	          0x4889e5	                            mov rbp, rsp	       355	update-ref.c	FUNCTION_10
0xe99	    0x4881ec900200	                          sub rsp, 0x290	       355	update-ref.c	FUNCTION_10
0xea0	    0x89bd8cfdffff	            mov dword [rbp - 0x274], edi	       355	update-ref.c	FUNCTION_10
0xea6	    0x4889b580fdff	            mov qword [rbp - 0x280], rsi	       355	update-ref.c	FUNCTION_10
0xead	    0x48899578fdff	            mov qword [rbp - 0x288], rdx	       355	update-ref.c	FUNCTION_10
0xeb4	    0x64488b042528	                mov rax, qword fs:[0x28]	       355	update-ref.c	FUNCTION_10
0xebd	        0x488945f8	                mov qword [rbp - 8], rax	       355	update-ref.c	FUNCTION_10
0xec1	            0x31c0	                            xor eax, eax	       355	update-ref.c	FUNCTION_10
0xec3	    0xc78598fdffff	              mov dword [rbp - 0x268], 0	       358	update-ref.c	FUNCTION_10
0xecd	    0xc7859cfdffff	              mov dword [rbp - 0x264], 0	       358	update-ref.c	FUNCTION_10
0xed7	    0xc785a0fdffff	              mov dword [rbp - 0x260], 0	       358	update-ref.c	FUNCTION_10
0xee1	    0xc785a4fdffff	              mov dword [rbp - 0x25c], 0	       358	update-ref.c	FUNCTION_10
0xeeb	    0xc785acfdffff	              mov dword [rbp - 0x254], 0	       359	update-ref.c	FUNCTION_10
0xef5	    0xc785a8fdffff	              mov dword [rbp - 0x258], 0	       360	update-ref.c	FUNCTION_10
0xeff	    0x488d9530feff	                  lea rdx, [rbp - 0x1d0]	       361	update-ref.c	FUNCTION_10
0xf06	      0xb800000000	                              mov eax, 0	       361	update-ref.c	FUNCTION_10
0xf0b	      0xb938000000	                           mov ecx, 0x38	       361	update-ref.c	FUNCTION_10
0xf10	          0x4889d7	                            mov rdi, rdx	       361	update-ref.c	FUNCTION_10
0xf13	          0xf348ab	              rep stosq qword [rdi], rax	       361	update-ref.c	FUNCTION_10
0xf16	    0xc78530feffff	              mov dword [rbp - 0x1d0], 9	       361	update-ref.c	FUNCTION_10
0xf20	    0xc78534feffff	          mov dword [rbp - 0x1cc], 0x6d 	       361	update-ref.c	FUNCTION_10
0xf2a	    0x48c78540feff	              mov qword [rbp - 0x1c0], 0	       361	update-ref.c	FUNCTION_10
0xf35	    0x48c78548feff	              mov qword [rbp - 0x1b8], 0	       361	update-ref.c	FUNCTION_10
0xf40	    0x48c78550feff	              mov qword [rbp - 0x1b0], 0	       361	update-ref.c	FUNCTION_10
0xf4b	    0xc78570feffff	              mov dword [rbp - 0x190], 7	       361	update-ref.c	FUNCTION_10
0xf55	    0xc78574feffff	          mov dword [rbp - 0x18c], 0x64 	       361	update-ref.c	FUNCTION_10
0xf5f	    0x488d8598fdff	                  lea rax, [rbp - 0x268]	       361	update-ref.c	FUNCTION_10
0xf66	    0x48898580feff	            mov qword [rbp - 0x180], rax	       361	update-ref.c	FUNCTION_10
0xf6d	    0x48c78590feff	              mov qword [rbp - 0x170], 0	       361	update-ref.c	FUNCTION_10
0xf78	    0xc78598feffff	              mov dword [rbp - 0x168], 2	       361	update-ref.c	FUNCTION_10
0xf82	    0x48c785a8feff	              mov qword [rbp - 0x158], 1	       361	update-ref.c	FUNCTION_10
0xf8d	    0xc785b0feffff	              mov dword [rbp - 0x150], 7	       361	update-ref.c	FUNCTION_10
0xf97	    0x48c785b8feff	              mov qword [rbp - 0x148], 0	       361	update-ref.c	FUNCTION_10
0xfa2	    0x488d859cfdff	                  lea rax, [rbp - 0x264]	       361	update-ref.c	FUNCTION_10
0xfa9	    0x488985c0feff	            mov qword [rbp - 0x140], rax	       361	update-ref.c	FUNCTION_10
0xfb0	    0x48c785d0feff	              mov qword [rbp - 0x130], 0	       361	update-ref.c	FUNCTION_10
0xfbb	    0xc785d8feffff	              mov dword [rbp - 0x128], 2	       361	update-ref.c	FUNCTION_10
0xfc5	    0x48c785e8feff	              mov qword [rbp - 0x118], 1	       361	update-ref.c	FUNCTION_10
0xfd0	    0xc785f0feffff	              mov dword [rbp - 0x110], 7	       361	update-ref.c	FUNCTION_10
0xfda	    0xc785f4feffff	          mov dword [rbp - 0x10c], 0x7a 	       361	update-ref.c	FUNCTION_10
0xfe4	    0x488d85a4fdff	                  lea rax, [rbp - 0x25c]	       361	update-ref.c	FUNCTION_10
0xfeb	    0x48898500ffff	            mov qword [rbp - 0x100], rax	       361	update-ref.c	FUNCTION_10
0xff2	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	       361	update-ref.c	FUNCTION_10
0xffd	    0xc78518ffffff	               mov dword [rbp - 0xe8], 2	       361	update-ref.c	FUNCTION_10
0x1007	    0x48c78528ffff	               mov qword [rbp - 0xd8], 1	       361	update-ref.c	FUNCTION_10
0x1012	    0xc78530ffffff	               mov dword [rbp - 0xd0], 7	       361	update-ref.c	FUNCTION_10
0x101c	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	       361	update-ref.c	FUNCTION_10
0x1027	    0x488d85a0fdff	                  lea rax, [rbp - 0x260]	       361	update-ref.c	FUNCTION_10
0x102e	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       361	update-ref.c	FUNCTION_10
0x1035	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	       361	update-ref.c	FUNCTION_10
0x1040	    0xc78558ffffff	               mov dword [rbp - 0xa8], 2	       361	update-ref.c	FUNCTION_10
0x104a	    0x48c78568ffff	               mov qword [rbp - 0x98], 1	       361	update-ref.c	FUNCTION_10
0x1055	    0xc78570ffffff	               mov dword [rbp - 0x90], 7	       361	update-ref.c	FUNCTION_10
0x105f	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	       361	update-ref.c	FUNCTION_10
0x106a	    0x488d85a8fdff	                  lea rax, [rbp - 0x258]	       361	update-ref.c	FUNCTION_10
0x1071	        0x48894580	             mov qword [rbp - 0x80], rax	       361	update-ref.c	FUNCTION_10
0x1075	    0x48c745900000	               mov qword [rbp - 0x70], 0	       361	update-ref.c	FUNCTION_10
0x107d	    0xc74598020000	               mov dword [rbp - 0x68], 2	       361	update-ref.c	FUNCTION_10
0x1084	    0x48c745a80100	               mov qword [rbp - 0x58], 1	       361	update-ref.c	FUNCTION_10
0x108c	      0xbe00000000	                              mov esi, 0	       372	update-ref.c	FUNCTION_10	CALL_15
0x1091	      0xbf00000000	                              mov edi, 0	       372	update-ref.c	FUNCTION_10	CALL_15
0x1096	      0xe800000000	                          call 0x40010db	       372	update-ref.c	FUNCTION_10	CALL_15
0x109b	    0x488d8d30feff	                  lea rcx, [rbp - 0x1d0]	       373	update-ref.c	FUNCTION_10	CALL_16
0x10a2	    0x488b9578fdff	            mov rdx, qword [rbp - 0x288]	       373	update-ref.c	FUNCTION_10	CALL_16
0x10a9	    0x488bb580fdff	            mov rsi, qword [rbp - 0x280]	       373	update-ref.c	FUNCTION_10	CALL_16
0x10b0	    0x8b858cfdffff	            mov eax, dword [rbp - 0x274]	       373	update-ref.c	FUNCTION_10	CALL_16
0x10b6	    0x41b900000000	                              mov r9d, 0	       373	update-ref.c	FUNCTION_10	CALL_16
0x10bc	    0x41b800000000	                              mov r8d, 0	       373	update-ref.c	FUNCTION_10	CALL_16
0x10c2	            0x89c7	                            mov edi, eax	       373	update-ref.c	FUNCTION_10	CALL_16
0x10c4	      0xe800000000	                          call 0x4001109	       373	update-ref.c	FUNCTION_10	CALL_16
0x10c9	    0x89858cfdffff	            mov dword [rbp - 0x274], eax	       373	update-ref.c	FUNCTION_10	CALL_16
0x10cf	    0x488b05000000	            mov rax, qword [0x04001116] 	       375	update-ref.c	FUNCTION_10	IF_1
0x10d6	          0x4885c0	                           test rax, rax	       375	update-ref.c	FUNCTION_10	IF_1
0x10d9	            0x741d	                            je 0x4001138	       375	update-ref.c	FUNCTION_10	IF_1
0x10db	    0x488b05000000	            mov rax, qword [0x04001122] 	       375	update-ref.c	FUNCTION_10	IF_1
0x10e2	           0xfb600	                   movzx eax, byte [rax]	       375	update-ref.c	FUNCTION_10	IF_1
0x10e5	            0x84c0	                             test al, al	       375	update-ref.c	FUNCTION_10	IF_1
0x10e7	            0x750f	                           jne 0x4001138	       375	update-ref.c	FUNCTION_10	IF_1
0x10e9	      0xbf00000000	                              mov edi, 0	       376	update-ref.c	FUNCTION_10	CALL_17
0x10ee	      0xb800000000	                              mov eax, 0	       376	update-ref.c	FUNCTION_10	CALL_17
0x10f3	      0xe800000000	                          call 0x4001138	       376	update-ref.c	FUNCTION_10	CALL_17
0x10f8	    0x8b85a8fdffff	            mov eax, dword [rbp - 0x258]	       378	update-ref.c	FUNCTION_10
0x10fe	            0x85c0	                           test eax, eax	       378	update-ref.c	FUNCTION_10
0x1100	            0x7407	                            je 0x4001149	       378	update-ref.c	FUNCTION_10
0x1102	      0xb802000000	                              mov eax, 2	       378	update-ref.c	FUNCTION_10
0x1107	            0xeb05	                           jmp 0x400114e	       378	update-ref.c	FUNCTION_10
0x1109	      0xb800000000	                              mov eax, 0	       378	update-ref.c	FUNCTION_10
0x110e	    0x890500000000	            mov dword [0x04001154], eax 	       378	update-ref.c	FUNCTION_10
0x1114	    0x8b85a0fdffff	            mov eax, dword [rbp - 0x260]	       380	update-ref.c	FUNCTION_10	IF_2
0x111a	            0x85c0	                           test eax, eax	       380	update-ref.c	FUNCTION_10	IF_2
0x111c	     0xf8409010000	                            je 0x400126b	       380	update-ref.c	FUNCTION_10	IF_2
0x1122	    0x48c785d0fdff	              mov qword [rbp - 0x230], 0	       381	update-ref.c	FUNCTION_10	IF_2
0x112d	    0x48c785d8fdff	              mov qword [rbp - 0x228], 0	       381	update-ref.c	FUNCTION_10	IF_2
0x1138	    0x48c785e0fdff	              mov qword [rbp - 0x220], 0	       381	update-ref.c	FUNCTION_10	IF_2
0x1143	    0x488d85d0fdff	                  lea rax, [rbp - 0x230]	       384	update-ref.c	FUNCTION_10	IF_2	CALL_18
0x114a	          0x4889c7	                            mov rdi, rax	       384	update-ref.c	FUNCTION_10	IF_2	CALL_18
0x114d	      0xe800000000	                          call 0x4001192	       384	update-ref.c	FUNCTION_10	IF_2	CALL_18
0x1152	    0x488985c0fdff	            mov qword [rbp - 0x240], rax	       384	update-ref.c	FUNCTION_10	IF_2	CALL_18
0x1159	    0x4883bdc0fdff	              cmp qword [rbp - 0x240], 0	       385	update-ref.c	FUNCTION_10	IF_2	IF_3
0x1161	            0x7519	                           jne 0x40011bc	       385	update-ref.c	FUNCTION_10	IF_2	IF_3
0x1163	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	       386	update-ref.c	FUNCTION_10	IF_2	CALL_19
0x116a	          0x4889c6	                            mov rsi, rax	       386	update-ref.c	FUNCTION_10	IF_2	CALL_19
0x116d	      0xbf00000000	                              mov edi, 0	       386	update-ref.c	FUNCTION_10	IF_2	CALL_19
0x1172	      0xb800000000	                              mov eax, 0	       386	update-ref.c	FUNCTION_10	IF_2	CALL_19
0x1177	      0xe800000000	                          call 0x40011bc	       386	update-ref.c	FUNCTION_10	IF_2	CALL_19
0x117c	    0x8b8598fdffff	            mov eax, dword [rbp - 0x268]	       387	update-ref.c	FUNCTION_10	IF_2	IF_4
0x1182	            0x85c0	                           test eax, eax	       387	update-ref.c	FUNCTION_10	IF_2	IF_4
0x1184	            0x7513	                           jne 0x40011d9	       387	update-ref.c	FUNCTION_10	IF_2	IF_4
0x1186	    0x8b859cfdffff	            mov eax, dword [rbp - 0x264]	       387	update-ref.c	FUNCTION_10	IF_2	IF_4
0x118c	            0x85c0	                           test eax, eax	       387	update-ref.c	FUNCTION_10	IF_2	IF_4
0x118e	            0x7509	                           jne 0x40011d9	       387	update-ref.c	FUNCTION_10	IF_2	IF_4
0x1190	    0x83bd8cfdffff	              cmp dword [rbp - 0x274], 0	       387	update-ref.c	FUNCTION_10	IF_2	IF_4
0x1197	            0x7e14	                           jle 0x40011ed	       387	update-ref.c	FUNCTION_10	IF_2	IF_4
0x1199	    0x488d8530feff	                  lea rax, [rbp - 0x1d0]	       388	update-ref.c	FUNCTION_10	IF_2	CALL_20
0x11a0	          0x4889c6	                            mov rsi, rax	       388	update-ref.c	FUNCTION_10	IF_2	CALL_20
0x11a3	      0xbf00000000	                              mov edi, 0	       388	update-ref.c	FUNCTION_10	IF_2	CALL_20
0x11a8	      0xe800000000	                          call 0x40011ed	       388	update-ref.c	FUNCTION_10	IF_2	CALL_20
0x11ad	    0x8b85a4fdffff	            mov eax, dword [rbp - 0x25c]	       389	update-ref.c	FUNCTION_10	IF_2	IF_5
0x11b3	            0x85c0	                           test eax, eax	       389	update-ref.c	FUNCTION_10	IF_2	IF_5
0x11b5	            0x7407	                            je 0x40011fe	       389	update-ref.c	FUNCTION_10	IF_2	IF_5
0x11b7	    0xc60500000000	                mov byte [0x040011fe], 0	       390	update-ref.c	FUNCTION_10	IF_2	IF_5
0x11be	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	       391	update-ref.c	FUNCTION_10	IF_2	CALL_21
0x11c5	          0x4889c7	                            mov rdi, rax	       391	update-ref.c	FUNCTION_10	IF_2	CALL_21
0x11c8	      0xe8a7faffff	              call sym.update_refs_stdin	       391	update-ref.c	FUNCTION_10	IF_2	CALL_21
0x11cd	    0x488d95d0fdff	                  lea rdx, [rbp - 0x230]	       392	update-ref.c	FUNCTION_10	IF_2	IF_6	CALL_22
0x11d4	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	       392	update-ref.c	FUNCTION_10	IF_2	IF_6	CALL_22
0x11db	          0x4889d6	                            mov rsi, rdx	       392	update-ref.c	FUNCTION_10	IF_2	IF_6	CALL_22
0x11de	          0x4889c7	                            mov rdi, rax	       392	update-ref.c	FUNCTION_10	IF_2	IF_6	CALL_22
0x11e1	      0xe800000000	                          call 0x4001226	       392	update-ref.c	FUNCTION_10	IF_2	IF_6	CALL_22
0x11e6	            0x85c0	                           test eax, eax	       392	update-ref.c	FUNCTION_10	IF_2	IF_6	CALL_22
0x11e8	            0x7419	                            je 0x4001243	       392	update-ref.c	FUNCTION_10	IF_2	IF_6	CALL_22
0x11ea	    0x488b85e0fdff	            mov rax, qword [rbp - 0x220]	       393	update-ref.c	FUNCTION_10	IF_2	CALL_23
0x11f1	          0x4889c6	                            mov rsi, rax	       393	update-ref.c	FUNCTION_10	IF_2	CALL_23
0x11f4	      0xbf00000000	                              mov edi, 0	       393	update-ref.c	FUNCTION_10	IF_2	CALL_23
0x11f9	      0xb800000000	                              mov eax, 0	       393	update-ref.c	FUNCTION_10	IF_2	CALL_23
0x11fe	      0xe800000000	                          call 0x4001243	       393	update-ref.c	FUNCTION_10	IF_2	CALL_23
0x1203	    0x488b85c0fdff	            mov rax, qword [rbp - 0x240]	       394	update-ref.c	FUNCTION_10	IF_2	CALL_24
0x120a	          0x4889c7	                            mov rdi, rax	       394	update-ref.c	FUNCTION_10	IF_2	CALL_24
0x120d	      0xe800000000	                          call 0x4001252	       394	update-ref.c	FUNCTION_10	IF_2	CALL_24
0x1212	    0x488d85d0fdff	                  lea rax, [rbp - 0x230]	       395	update-ref.c	FUNCTION_10	IF_2	CALL_25
0x1219	          0x4889c7	                            mov rdi, rax	       395	update-ref.c	FUNCTION_10	IF_2	CALL_25
0x121c	      0xe800000000	                          call 0x4001261	       395	update-ref.c	FUNCTION_10	IF_2	CALL_25
0x1221	      0xb800000000	                              mov eax, 0	       396	update-ref.c	FUNCTION_10	IF_2
0x1226	      0xe91b020000	                           jmp 0x4001486	       396	update-ref.c	FUNCTION_10	IF_2
0x122b	    0x8b85a4fdffff	            mov eax, dword [rbp - 0x25c]	       399	update-ref.c	FUNCTION_10	IF_7
0x1231	            0x85c0	                           test eax, eax	       399	update-ref.c	FUNCTION_10	IF_7
0x1233	            0x7414	                            je 0x4001289	       399	update-ref.c	FUNCTION_10	IF_7
0x1235	    0x488d8530feff	                  lea rax, [rbp - 0x1d0]	       400	update-ref.c	FUNCTION_10	CALL_26
0x123c	          0x4889c6	                            mov rsi, rax	       400	update-ref.c	FUNCTION_10	CALL_26
0x123f	      0xbf00000000	                              mov edi, 0	       400	update-ref.c	FUNCTION_10	CALL_26
0x1244	      0xe800000000	                          call 0x4001289	       400	update-ref.c	FUNCTION_10	CALL_26
0x1249	    0x8b8598fdffff	            mov eax, dword [rbp - 0x268]	       402	update-ref.c	FUNCTION_10	IF_8
0x124f	            0x85c0	                           test eax, eax	       402	update-ref.c	FUNCTION_10	IF_8
0x1251	            0x744e	                            je 0x40012e1	       402	update-ref.c	FUNCTION_10	IF_8
0x1253	    0x83bd8cfdffff	              cmp dword [rbp - 0x274], 0	       403	update-ref.c	FUNCTION_10	IF_8	IF_9
0x125a	            0x7e09	                           jle 0x40012a5	       403	update-ref.c	FUNCTION_10	IF_8	IF_9
0x125c	    0x83bd8cfdffff	              cmp dword [rbp - 0x274], 2	       403	update-ref.c	FUNCTION_10	IF_8	IF_9
0x1263	            0x7e14	                           jle 0x40012b9	       403	update-ref.c	FUNCTION_10	IF_8	IF_9
0x1265	    0x488d8530feff	                  lea rax, [rbp - 0x1d0]	       404	update-ref.c	FUNCTION_10	IF_8	CALL_27
0x126c	          0x4889c6	                            mov rsi, rax	       404	update-ref.c	FUNCTION_10	IF_8	CALL_27
0x126f	      0xbf00000000	                              mov edi, 0	       404	update-ref.c	FUNCTION_10	IF_8	CALL_27
0x1274	      0xe800000000	                          call 0x40012b9	       404	update-ref.c	FUNCTION_10	IF_8	CALL_27
0x1279	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	       405	update-ref.c	FUNCTION_10	IF_8
0x1280	          0x488b00	                    mov rax, qword [rax]	       405	update-ref.c	FUNCTION_10	IF_8
0x1283	    0x488985b0fdff	            mov qword [rbp - 0x250], rax	       405	update-ref.c	FUNCTION_10	IF_8
0x128a	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	       406	update-ref.c	FUNCTION_10	IF_8
0x1291	        0x488b4008	                mov rax, qword [rax + 8]	       406	update-ref.c	FUNCTION_10	IF_8
0x1295	    0x488985b8fdff	            mov qword [rbp - 0x248], rax	       406	update-ref.c	FUNCTION_10	IF_8
0x129c	      0xe991000000	                           jmp 0x4001372	       406	update-ref.c	FUNCTION_10	IF_8
0x12a1	    0x83bd8cfdffff	              cmp dword [rbp - 0x274], 1	       409	update-ref.c	FUNCTION_10	ELSE_1	IF_10
0x12a8	            0x7e09	                           jle 0x40012f3	       409	update-ref.c	FUNCTION_10	ELSE_1	IF_10
0x12aa	    0x83bd8cfdffff	              cmp dword [rbp - 0x274], 3	       409	update-ref.c	FUNCTION_10	ELSE_1	IF_10
0x12b1	            0x7e14	                           jle 0x4001307	       409	update-ref.c	FUNCTION_10	ELSE_1	IF_10
0x12b3	    0x488d8530feff	                  lea rax, [rbp - 0x1d0]	       410	update-ref.c	FUNCTION_10	ELSE_1	CALL_28
0x12ba	          0x4889c6	                            mov rsi, rax	       410	update-ref.c	FUNCTION_10	ELSE_1	CALL_28
0x12bd	      0xbf00000000	                              mov edi, 0	       410	update-ref.c	FUNCTION_10	ELSE_1	CALL_28
0x12c2	      0xe800000000	                          call 0x4001307	       410	update-ref.c	FUNCTION_10	ELSE_1	CALL_28
0x12c7	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	       411	update-ref.c	FUNCTION_10	ELSE_1
0x12ce	          0x488b00	                    mov rax, qword [rax]	       411	update-ref.c	FUNCTION_10	ELSE_1
0x12d1	    0x488985b0fdff	            mov qword [rbp - 0x250], rax	       411	update-ref.c	FUNCTION_10	ELSE_1
0x12d8	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	       412	update-ref.c	FUNCTION_10	ELSE_1
0x12df	        0x488b4008	                mov rax, qword [rax + 8]	       412	update-ref.c	FUNCTION_10	ELSE_1
0x12e3	    0x488985c8fdff	            mov qword [rbp - 0x238], rax	       412	update-ref.c	FUNCTION_10	ELSE_1
0x12ea	    0x488b8580fdff	            mov rax, qword [rbp - 0x280]	       413	update-ref.c	FUNCTION_10	ELSE_1
0x12f1	        0x488b4010	            mov rax, qword [rax + 0x10] 	       413	update-ref.c	FUNCTION_10	ELSE_1
0x12f5	    0x488985b8fdff	            mov qword [rbp - 0x248], rax	       413	update-ref.c	FUNCTION_10	ELSE_1
0x12fc	    0x488d95f0fdff	                  lea rdx, [rbp - 0x210]	       414	update-ref.c	FUNCTION_10	ELSE_1	IF_11	CALL_29
0x1303	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	       414	update-ref.c	FUNCTION_10	ELSE_1	IF_11	CALL_29
0x130a	          0x4889d6	                            mov rsi, rdx	       414	update-ref.c	FUNCTION_10	ELSE_1	IF_11	CALL_29
0x130d	          0x4889c7	                            mov rdi, rax	       414	update-ref.c	FUNCTION_10	ELSE_1	IF_11	CALL_29
0x1310	      0xe800000000	                          call 0x4001355	       414	update-ref.c	FUNCTION_10	ELSE_1	IF_11	CALL_29
0x1315	            0x85c0	                           test eax, eax	       414	update-ref.c	FUNCTION_10	ELSE_1	IF_11	CALL_29
0x1317	            0x7419	                            je 0x4001372	       414	update-ref.c	FUNCTION_10	ELSE_1	IF_11	CALL_29
0x1319	    0x488b85c8fdff	            mov rax, qword [rbp - 0x238]	       415	update-ref.c	FUNCTION_10	ELSE_1	CALL_30
0x1320	          0x4889c6	                            mov rsi, rax	       415	update-ref.c	FUNCTION_10	ELSE_1	CALL_30
0x1323	      0xbf00000000	                              mov edi, 0	       415	update-ref.c	FUNCTION_10	ELSE_1	CALL_30
0x1328	      0xb800000000	                              mov eax, 0	       415	update-ref.c	FUNCTION_10	ELSE_1	CALL_30
0x132d	      0xe800000000	                          call 0x4001372	       415	update-ref.c	FUNCTION_10	ELSE_1	CALL_30
0x1332	    0x4883bdb8fdff	              cmp qword [rbp - 0x248], 0	       418	update-ref.c	FUNCTION_10	IF_12
0x133a	            0x7455	                            je 0x40013d1	       418	update-ref.c	FUNCTION_10	IF_12
0x133c	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	       419	update-ref.c	FUNCTION_10	IF_12	IF_13
0x1343	           0xfb600	                   movzx eax, byte [rax]	       419	update-ref.c	FUNCTION_10	IF_12	IF_13
0x1346	            0x84c0	                             test al, al	       419	update-ref.c	FUNCTION_10	IF_12	IF_13
0x1348	            0x7511	                           jne 0x400139b	       419	update-ref.c	FUNCTION_10	IF_12	IF_13
0x134a	    0x488d8510feff	                  lea rax, [rbp - 0x1f0]	       424	update-ref.c	FUNCTION_10	IF_12	CALL_31
0x1351	          0x4889c7	                            mov rdi, rax	       424	update-ref.c	FUNCTION_10	IF_12	CALL_31
0x1354	      0xe8d1edffff	                         call sym.oidclr	       424	update-ref.c	FUNCTION_10	IF_12	CALL_31
0x1359	            0xeb36	                           jmp 0x40013d1	       424	update-ref.c	FUNCTION_10	IF_12	CALL_31
0x135b	    0x488d9510feff	                  lea rdx, [rbp - 0x1f0]	       425	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14	CALL_32
0x1362	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	       425	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14	CALL_32
0x1369	          0x4889d6	                            mov rsi, rdx	       425	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14	CALL_32
0x136c	          0x4889c7	                            mov rdi, rax	       425	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14	CALL_32
0x136f	      0xe800000000	                          call 0x40013b4	       425	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14	CALL_32
0x1374	            0x85c0	                           test eax, eax	       425	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14	CALL_32
0x1376	            0x7419	                            je 0x40013d1	       425	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14	CALL_32
0x1378	    0x488b85b8fdff	            mov rax, qword [rbp - 0x248]	       426	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14
0x137f	          0x4889c6	                            mov rsi, rax	       426	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14
0x1382	      0xbf00000000	                              mov edi, 0	       426	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14
0x1387	      0xb800000000	                              mov eax, 0	       426	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14
0x138c	      0xe800000000	                          call 0x40013d1	       426	update-ref.c	FUNCTION_10	IF_12	ELSE_2	IF_14
0x1391	    0x8b859cfdffff	            mov eax, dword [rbp - 0x264]	       429	update-ref.c	FUNCTION_10	IF_15
0x1397	            0x85c0	                           test eax, eax	       429	update-ref.c	FUNCTION_10	IF_15
0x1399	            0x740a	                            je 0x40013e5	       429	update-ref.c	FUNCTION_10	IF_15
0x139b	    0xc785acfdffff	              mov dword [rbp - 0x254], 1	       430	update-ref.c	FUNCTION_10	IF_15
0x13a5	    0x8b8598fdffff	            mov eax, dword [rbp - 0x268]	       431	update-ref.c	FUNCTION_10	IF_16
0x13ab	            0x85c0	                           test eax, eax	       431	update-ref.c	FUNCTION_10	IF_16
0x13ad	            0x744b	                            je 0x400143a	       431	update-ref.c	FUNCTION_10	IF_16
0x13af	    0x4883bdb8fdff	              cmp qword [rbp - 0x248], 0	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x13b7	            0x741c	                            je 0x4001415	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x13b9	    0x488d8510feff	                  lea rax, [rbp - 0x1f0]	       437	update-ref.c	FUNCTION_10	IF_16	CALL_35
0x13c0	          0x4889c7	                            mov rdi, rax	       437	update-ref.c	FUNCTION_10	IF_16	CALL_35
0x13c3	      0xe83bedffff	                    call sym.is_null_oid	       437	update-ref.c	FUNCTION_10	IF_16	CALL_35
0x13c8	            0x85c0	                           test eax, eax	       437	update-ref.c	FUNCTION_10	IF_16	CALL_35
0x13ca	            0x7509	                           jne 0x4001415	       437	update-ref.c	FUNCTION_10	IF_16	CALL_35
0x13cc	    0x488d8510feff	                  lea rax, [rbp - 0x1f0]	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x13d3	            0xeb05	                           jmp 0x400141a	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x13d5	      0xb800000000	                              mov eax, 0	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x13da	    0x488b3d000000	            mov rdi, qword [0x04001421] 	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x13e1	    0x8b95acfdffff	            mov edx, dword [rbp - 0x254]	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x13e7	    0x488bb5b0fdff	            mov rsi, qword [rbp - 0x250]	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x13ee	            0x89d1	                            mov ecx, edx	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x13f0	          0x4889c2	                            mov rdx, rax	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x13f3	      0xe800000000	                          call 0x4001438	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x13f8	            0xeb4c	                           jmp 0x4001486	       436	update-ref.c	FUNCTION_10	IF_16	CALL_34
0x13fa	    0x8b0500000000	            mov eax, dword [0x04001440] 	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x1400	     0xb85acfdffff	             or eax, dword [rbp - 0x254]	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x1406	            0x89c1	                            mov ecx, eax	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x1408	    0x4883bdb8fdff	              cmp qword [rbp - 0x248], 0	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x1410	            0x7409	                            je 0x400145b	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x1412	    0x488d8510feff	                  lea rax, [rbp - 0x1f0]	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x1419	            0xeb05	                           jmp 0x4001460	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x141b	      0xb800000000	                              mov eax, 0	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x1420	    0x488b3d000000	            mov rdi, qword [0x04001467] 	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x1427	    0x488d95f0fdff	                  lea rdx, [rbp - 0x210]	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x142e	    0x488bb5b0fdff	            mov rsi, qword [rbp - 0x250]	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x1435	    0x41b901000000	                              mov r9d, 1	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x143b	          0x4189c8	                            mov r8d, ecx	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x143e	          0x4889c1	                            mov rcx, rax	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x1441	      0xe800000000	                          call 0x4001486	       440	update-ref.c	FUNCTION_10	ELSE_3	CALL_36
0x1446	        0x488b4df8	                mov rcx, qword [rbp - 8]	       443	update-ref.c	FUNCTION_10
0x144a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       443	update-ref.c	FUNCTION_10
0x1453	            0x7405	                            je 0x400149a	       443	update-ref.c	FUNCTION_10
0x1455	      0xe800000000	                          call 0x400149a	       443	update-ref.c	FUNCTION_10
0x145a	              0xc9	                                   leave	       443	update-ref.c	FUNCTION_10
0x145b	              0xc3	                                     ret	       443	update-ref.c	FUNCTION_10
parse_cmd_create	FOR,0:CALL,11:ELSE,0:WHILE,0:functions,0:SWITCH,0:DO,0:IF,5	95
0x7af	              0x55	                                push rbp	       217	update-ref.c	FUNCTION_5
0x7b0	          0x4889e5	                            mov rbp, rsp	       217	update-ref.c	FUNCTION_5
0x7b3	        0x4883ec70	                           sub rsp, 0x70	       217	update-ref.c	FUNCTION_5
0x7b7	        0x48897da8	             mov qword [rbp - 0x58], rdi	       217	update-ref.c	FUNCTION_5
0x7bb	        0x488975a0	             mov qword [rbp - 0x60], rsi	       217	update-ref.c	FUNCTION_5
0x7bf	        0x48895598	             mov qword [rbp - 0x68], rdx	       217	update-ref.c	FUNCTION_5
0x7c3	    0x64488b042528	                mov rax, qword fs:[0x28]	       217	update-ref.c	FUNCTION_5
0x7cc	        0x488945f8	                mov qword [rbp - 8], rax	       217	update-ref.c	FUNCTION_5
0x7d0	            0x31c0	                            xor eax, eax	       217	update-ref.c	FUNCTION_5
0x7d2	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       218	update-ref.c	FUNCTION_5
0x7da	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       218	update-ref.c	FUNCTION_5
0x7e2	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       218	update-ref.c	FUNCTION_5
0x7ea	        0x488d5598	                   lea rdx, [rbp - 0x68]	       222	update-ref.c	FUNCTION_5	CALL_1
0x7ee	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       222	update-ref.c	FUNCTION_5	CALL_1
0x7f2	          0x4889d6	                            mov rsi, rdx	       222	update-ref.c	FUNCTION_5	CALL_1
0x7f5	          0x4889c7	                            mov rdi, rax	       222	update-ref.c	FUNCTION_5	CALL_1
0x7f8	      0xe836faffff	                  call sym.parse_refname	       222	update-ref.c	FUNCTION_5	CALL_1
0x7fd	        0x488945b8	             mov qword [rbp - 0x48], rax	       222	update-ref.c	FUNCTION_5	CALL_1
0x801	      0x48837db800	               cmp qword [rbp - 0x48], 0	       223	update-ref.c	FUNCTION_5	IF_1
0x806	            0x750f	                           jne 0x4000857	       223	update-ref.c	FUNCTION_5	IF_1
0x808	      0xbf00000000	                              mov edi, 0	       224	update-ref.c	FUNCTION_5	CALL_2
0x80d	      0xb800000000	                              mov eax, 0	       224	update-ref.c	FUNCTION_5	CALL_2
0x812	      0xe800000000	                          call 0x4000857	       224	update-ref.c	FUNCTION_5	CALL_2
0x817	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x81b	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x81f	        0x488d7598	                   lea rsi, [rbp - 0x68]	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x823	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x827	    0x41b900000000	                              mov r9d, 0	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x82d	          0x4989c8	                             mov r8, rcx	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x830	      0xb900000000	                              mov ecx, 0	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x835	          0x4889c7	                            mov rdi, rax	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x838	      0xe8f3faffff	                 call sym.parse_next_oid	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x83d	            0x85c0	                           test eax, eax	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x83f	            0x7416	                            je 0x4000897	       226	update-ref.c	FUNCTION_5	IF_2	CALL_3
0x841	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       227	update-ref.c	FUNCTION_5	CALL_4
0x845	          0x4889c6	                            mov rsi, rax	       227	update-ref.c	FUNCTION_5	CALL_4
0x848	      0xbf00000000	                              mov edi, 0	       227	update-ref.c	FUNCTION_5	CALL_4
0x84d	      0xb800000000	                              mov eax, 0	       227	update-ref.c	FUNCTION_5	CALL_4
0x852	      0xe800000000	                          call 0x4000897	       227	update-ref.c	FUNCTION_5	CALL_4
0x857	        0x488d45e0	                   lea rax, [rbp - 0x20]	       229	update-ref.c	FUNCTION_5	IF_3	CALL_5
0x85b	          0x4889c7	                            mov rdi, rax	       229	update-ref.c	FUNCTION_5	IF_3	CALL_5
0x85e	      0xe8a0f8ffff	                    call sym.is_null_oid	       229	update-ref.c	FUNCTION_5	IF_3	CALL_5
0x863	            0x85c0	                           test eax, eax	       229	update-ref.c	FUNCTION_5	IF_3	CALL_5
0x865	            0x7416	                            je 0x40008bd	       229	update-ref.c	FUNCTION_5	IF_3	CALL_5
0x867	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       230	update-ref.c	FUNCTION_5	CALL_6
0x86b	          0x4889c6	                            mov rsi, rax	       230	update-ref.c	FUNCTION_5	CALL_6
0x86e	      0xbf00000000	                              mov edi, 0	       230	update-ref.c	FUNCTION_5	CALL_6
0x873	      0xb800000000	                              mov eax, 0	       230	update-ref.c	FUNCTION_5	CALL_6
0x878	      0xe800000000	                          call 0x40008bd	       230	update-ref.c	FUNCTION_5	CALL_6
0x87d	        0x488b4598	             mov rax, qword [rbp - 0x68]	       232	update-ref.c	FUNCTION_5	IF_4
0x881	           0xfb610	                   movzx edx, byte [rax]	       232	update-ref.c	FUNCTION_5	IF_4
0x884	     0xfb605000000	           movzx eax, byte [0x040008cb] 	       232	update-ref.c	FUNCTION_5	IF_4
0x88b	            0x38c2	                              cmp dl, al	       232	update-ref.c	FUNCTION_5	IF_4
0x88d	            0x741a	                            je 0x40008e9	       232	update-ref.c	FUNCTION_5	IF_4
0x88f	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       233	update-ref.c	FUNCTION_5	CALL_7
0x893	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       233	update-ref.c	FUNCTION_5	CALL_7
0x897	          0x4889c6	                            mov rsi, rax	       233	update-ref.c	FUNCTION_5	CALL_7
0x89a	      0xbf00000000	                              mov edi, 0	       233	update-ref.c	FUNCTION_5	CALL_7
0x89f	      0xb800000000	                              mov eax, 0	       233	update-ref.c	FUNCTION_5	CALL_7
0x8a4	      0xe800000000	                          call 0x40008e9	       233	update-ref.c	FUNCTION_5	CALL_7
0x8a9	    0x488b3d000000	            mov rdi, qword [0x040008f0] 	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x8b0	    0x8b0500000000	            mov eax, dword [0x040008f6] 	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x8b6	            0x89c2	                            mov edx, eax	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x8b8	    0x8b0500000000	            mov eax, dword [0x040008fe] 	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x8be	            0x89d1	                            mov ecx, edx	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x8c0	             0x9c1	                             or ecx, eax	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x8c2	        0x4c8d45c0	                    lea r8, [rbp - 0x40]	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x8c6	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x8ca	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x8ce	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x8d2	          0x4d89c1	                              mov r9, r8	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x8d5	          0x4989f8	                             mov r8, rdi	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x8d8	          0x4889c7	                            mov rdi, rax	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x8db	      0xe800000000	                          call 0x4000920	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x8e0	            0x85c0	                           test eax, eax	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x8e2	            0x7416	                            je 0x400093a	       235	update-ref.c	FUNCTION_5	IF_5	CALL_8
0x8e4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       238	update-ref.c	FUNCTION_5	CALL_9
0x8e8	          0x4889c6	                            mov rsi, rax	       238	update-ref.c	FUNCTION_5	CALL_9
0x8eb	      0xbf00000000	                              mov edi, 0	       238	update-ref.c	FUNCTION_5	CALL_9
0x8f0	      0xb800000000	                              mov eax, 0	       238	update-ref.c	FUNCTION_5	CALL_9
0x8f5	      0xe800000000	                          call 0x400093a	       238	update-ref.c	FUNCTION_5	CALL_9
0x8fa	    0xc70500000000	               mov dword [0x04000944], 0	       240	update-ref.c	FUNCTION_5
0x904	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       241	update-ref.c	FUNCTION_5	CALL_10
0x908	          0x4889c7	                            mov rdi, rax	       241	update-ref.c	FUNCTION_5	CALL_10
0x90b	      0xe800000000	                          call 0x4000950	       241	update-ref.c	FUNCTION_5	CALL_10
0x910	        0x488d45c0	                   lea rax, [rbp - 0x40]	       242	update-ref.c	FUNCTION_5	CALL_11
0x914	          0x4889c7	                            mov rdi, rax	       242	update-ref.c	FUNCTION_5	CALL_11
0x917	      0xe800000000	                          call 0x400095c	       242	update-ref.c	FUNCTION_5	CALL_11
0x91c	        0x488b4598	             mov rax, qword [rbp - 0x68]	       244	update-ref.c	FUNCTION_5
0x920	        0x488b4df8	                mov rcx, qword [rbp - 8]	       245	update-ref.c	FUNCTION_5
0x924	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       245	update-ref.c	FUNCTION_5
0x92d	            0x7405	                            je 0x4000974	       245	update-ref.c	FUNCTION_5
0x92f	      0xe800000000	                          call 0x4000974	       245	update-ref.c	FUNCTION_5
0x934	              0xc9	                                   leave	       245	update-ref.c	FUNCTION_5
0x935	              0xc3	                                     ret	       245	update-ref.c	FUNCTION_5
parse_cmd_option	FOR,0:CALL,2:ELSE,1:WHILE,0:functions,0:SWITCH,0:DO,0:IF,1	31
0xc03	              0x55	                                push rbp	       313	update-ref.c	FUNCTION_8
0xc04	          0x4889e5	                            mov rbp, rsp	       313	update-ref.c	FUNCTION_8
0xc07	        0x4883ec10	                           sub rsp, 0x10	       313	update-ref.c	FUNCTION_8
0xc0b	        0x48897df8	                mov qword [rbp - 8], rdi	       313	update-ref.c	FUNCTION_8
0xc0f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       313	update-ref.c	FUNCTION_8
0xc13	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0xc17	      0xba08000000	                              mov edx, 8	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0xc1c	      0xbe00000000	                              mov esi, 0	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0xc21	          0x4889c7	                            mov rdi, rax	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0xc24	      0xe800000000	                          call 0x4000c69	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0xc29	            0x85c0	                           test eax, eax	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0xc2b	            0x752f	                           jne 0x4000c9c	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0xc2d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0xc31	        0x4883c008	                              add rax, 8	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0xc35	           0xfb610	                   movzx edx, byte [rax]	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0xc38	     0xfb605000000	           movzx eax, byte [0x04000c7f] 	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0xc3f	            0x38c2	                              cmp dl, al	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0xc41	            0x7519	                           jne 0x4000c9c	       314	update-ref.c	FUNCTION_8	IF_1	CALL_1
0xc43	    0x8b0500000000	            mov eax, dword [0x04000c89] 	       315	update-ref.c	FUNCTION_8	IF_1
0xc49	          0x83c801	                               or eax, 1	       315	update-ref.c	FUNCTION_8	IF_1
0xc4c	    0x890500000000	            mov dword [0x04000c92], eax 	       315	update-ref.c	FUNCTION_8	IF_1
0xc52	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       318	update-ref.c	FUNCTION_8
0xc56	        0x4883c008	                              add rax, 8	       318	update-ref.c	FUNCTION_8
0xc5a	            0xeb16	                           jmp 0x4000cb2	       318	update-ref.c	FUNCTION_8
0xc5c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       317	update-ref.c	FUNCTION_8	CALL_2
0xc60	          0x4889c6	                            mov rsi, rax	       317	update-ref.c	FUNCTION_8	CALL_2
0xc63	      0xbf00000000	                              mov edi, 0	       317	update-ref.c	FUNCTION_8	CALL_2
0xc68	      0xb800000000	                              mov eax, 0	       317	update-ref.c	FUNCTION_8	CALL_2
0xc6d	      0xe800000000	                          call 0x4000cb2	       317	update-ref.c	FUNCTION_8	CALL_2
0xc72	              0xc9	                                   leave	       319	update-ref.c	FUNCTION_8
0xc73	              0xc3	                                     ret	       319	update-ref.c	FUNCTION_8
parse_cmd_update	FOR,0:CALL,10:ELSE,0:WHILE,0:functions,0:SWITCH,0:DO,0:IF,4	106
0x5ea	              0x55	                                push rbp	       182	update-ref.c	FUNCTION_4
0x5eb	          0x4889e5	                            mov rbp, rsp	       182	update-ref.c	FUNCTION_4
0x5ee	    0x4881ec900000	                           sub rsp, 0x90	       182	update-ref.c	FUNCTION_4
0x5f5	        0x48897d88	             mov qword [rbp - 0x78], rdi	       182	update-ref.c	FUNCTION_4
0x5f9	        0x48897580	             mov qword [rbp - 0x80], rsi	       182	update-ref.c	FUNCTION_4
0x5fd	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	       182	update-ref.c	FUNCTION_4
0x604	    0x64488b042528	                mov rax, qword fs:[0x28]	       182	update-ref.c	FUNCTION_4
0x60d	        0x488945f8	                mov qword [rbp - 8], rax	       182	update-ref.c	FUNCTION_4
0x611	            0x31c0	                            xor eax, eax	       182	update-ref.c	FUNCTION_4
0x613	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       183	update-ref.c	FUNCTION_4
0x61b	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       183	update-ref.c	FUNCTION_4
0x623	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       183	update-ref.c	FUNCTION_4
0x62b	    0x488d9578ffff	                   lea rdx, [rbp - 0x88]	       188	update-ref.c	FUNCTION_4	CALL_1
0x632	        0x488b4580	             mov rax, qword [rbp - 0x80]	       188	update-ref.c	FUNCTION_4	CALL_1
0x636	          0x4889d6	                            mov rsi, rdx	       188	update-ref.c	FUNCTION_4	CALL_1
0x639	          0x4889c7	                            mov rdi, rax	       188	update-ref.c	FUNCTION_4	CALL_1
0x63c	      0xe8f2fbffff	                  call sym.parse_refname	       188	update-ref.c	FUNCTION_4	CALL_1
0x641	        0x48894598	             mov qword [rbp - 0x68], rax	       188	update-ref.c	FUNCTION_4	CALL_1
0x645	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       189	update-ref.c	FUNCTION_4	IF_1
0x64a	            0x750f	                           jne 0x400069b	       189	update-ref.c	FUNCTION_4	IF_1
0x64c	      0xbf00000000	                              mov edi, 0	       190	update-ref.c	FUNCTION_4	CALL_2
0x651	      0xb800000000	                              mov eax, 0	       190	update-ref.c	FUNCTION_4	CALL_2
0x656	      0xe800000000	                          call 0x400069b	       190	update-ref.c	FUNCTION_4	CALL_2
0x65b	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x65f	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x663	    0x488db578ffff	                   lea rsi, [rbp - 0x88]	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x66a	        0x488b4580	             mov rax, qword [rbp - 0x80]	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x66e	    0x41b902000000	                              mov r9d, 2	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x674	          0x4989c8	                             mov r8, rcx	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x677	      0xb900000000	                              mov ecx, 0	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x67c	          0x4889c7	                            mov rdi, rax	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x67f	      0xe8acfcffff	                 call sym.parse_next_oid	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x684	            0x85c0	                           test eax, eax	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x686	            0x7416	                            je 0x40006de	       192	update-ref.c	FUNCTION_4	IF_2	CALL_3
0x688	        0x488b4598	             mov rax, qword [rbp - 0x68]	       194	update-ref.c	FUNCTION_4	CALL_4
0x68c	          0x4889c6	                            mov rsi, rax	       194	update-ref.c	FUNCTION_4	CALL_4
0x68f	      0xbf00000000	                              mov edi, 0	       194	update-ref.c	FUNCTION_4	CALL_4
0x694	      0xb800000000	                              mov eax, 0	       194	update-ref.c	FUNCTION_4	CALL_4
0x699	      0xe800000000	                          call 0x40006de	       194	update-ref.c	FUNCTION_4	CALL_4
0x69e	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	       196	update-ref.c	FUNCTION_4	CALL_5
0x6a2	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       196	update-ref.c	FUNCTION_4	CALL_5
0x6a6	    0x488db578ffff	                   lea rsi, [rbp - 0x88]	       196	update-ref.c	FUNCTION_4	CALL_5
0x6ad	        0x488b4580	             mov rax, qword [rbp - 0x80]	       196	update-ref.c	FUNCTION_4	CALL_5
0x6b1	    0x41b901000000	                              mov r9d, 1	       196	update-ref.c	FUNCTION_4	CALL_5
0x6b7	          0x4989c8	                             mov r8, rcx	       196	update-ref.c	FUNCTION_4	CALL_5
0x6ba	      0xb900000000	                              mov ecx, 0	       196	update-ref.c	FUNCTION_4	CALL_5
0x6bf	          0x4889c7	                            mov rdi, rax	       196	update-ref.c	FUNCTION_4	CALL_5
0x6c2	      0xe869fcffff	                 call sym.parse_next_oid	       196	update-ref.c	FUNCTION_4	CALL_5
0x6c7	            0x85c0	                           test eax, eax	       196	update-ref.c	FUNCTION_4	CALL_5
0x6c9	           0xf94c0	                                 sete al	       196	update-ref.c	FUNCTION_4	CALL_5
0x6cc	           0xfb6c0	                           movzx eax, al	       196	update-ref.c	FUNCTION_4	CALL_5
0x6cf	          0x894594	             mov dword [rbp - 0x6c], eax	       196	update-ref.c	FUNCTION_4	CALL_5
0x6d2	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       199	update-ref.c	FUNCTION_4	IF_3
0x6d9	           0xfb610	                   movzx edx, byte [rax]	       199	update-ref.c	FUNCTION_4	IF_3
0x6dc	     0xfb605000000	           movzx eax, byte [0x04000723] 	       199	update-ref.c	FUNCTION_4	IF_3
0x6e3	            0x38c2	                              cmp dl, al	       199	update-ref.c	FUNCTION_4	IF_3
0x6e5	            0x741d	                            je 0x4000744	       199	update-ref.c	FUNCTION_4	IF_3
0x6e7	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       200	update-ref.c	FUNCTION_4	CALL_6
0x6ee	        0x488b4598	             mov rax, qword [rbp - 0x68]	       200	update-ref.c	FUNCTION_4	CALL_6
0x6f2	          0x4889c6	                            mov rsi, rax	       200	update-ref.c	FUNCTION_4	CALL_6
0x6f5	      0xbf00000000	                              mov edi, 0	       200	update-ref.c	FUNCTION_4	CALL_6
0x6fa	      0xb800000000	                              mov eax, 0	       200	update-ref.c	FUNCTION_4	CALL_6
0x6ff	      0xe800000000	                          call 0x4000744	       200	update-ref.c	FUNCTION_4	CALL_6
0x704	    0x4c8b05000000	              mov r8, qword [0x0400074b]	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x70b	    0x8b0500000000	            mov eax, dword [0x04000751] 	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x711	            0x89c2	                            mov edx, eax	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x713	    0x8b0500000000	            mov eax, dword [0x04000759] 	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x719	             0x9c2	                             or edx, eax	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x71b	          0x4189d2	                           mov r10d, edx	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x71e	        0x837d9400	               cmp dword [rbp - 0x6c], 0	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x722	            0x7406	                            je 0x400076a	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x724	        0x488d45e0	                   lea rax, [rbp - 0x20]	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x728	            0xeb05	                           jmp 0x400076f	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x72a	      0xb800000000	                              mov eax, 0	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x72f	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x733	        0x488b7598	             mov rsi, qword [rbp - 0x68]	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x737	        0x488b7d88	             mov rdi, qword [rbp - 0x78]	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x73b	        0x4883ec08	                              sub rsp, 8	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x73f	        0x488d4da0	                   lea rcx, [rbp - 0x60]	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x743	              0x51	                                push rcx	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x744	          0x4d89c1	                              mov r9, r8	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x747	          0x4589d0	                           mov r8d, r10d	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x74a	          0x4889c1	                            mov rcx, rax	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x74d	      0xe800000000	                          call 0x4000792	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x752	        0x4883c410	                           add rsp, 0x10	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x756	            0x85c0	                           test eax, eax	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x758	            0x7416	                            je 0x40007b0	       202	update-ref.c	FUNCTION_4	IF_4	CALL_7
0x75a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       206	update-ref.c	FUNCTION_4	CALL_8
0x75e	          0x4889c6	                            mov rsi, rax	       206	update-ref.c	FUNCTION_4	CALL_8
0x761	      0xbf00000000	                              mov edi, 0	       206	update-ref.c	FUNCTION_4	CALL_8
0x766	      0xb800000000	                              mov eax, 0	       206	update-ref.c	FUNCTION_4	CALL_8
0x76b	      0xe800000000	                          call 0x40007b0	       206	update-ref.c	FUNCTION_4	CALL_8
0x770	    0xc70500000000	               mov dword [0x040007ba], 0	       208	update-ref.c	FUNCTION_4
0x77a	        0x488b4598	             mov rax, qword [rbp - 0x68]	       209	update-ref.c	FUNCTION_4	CALL_9
0x77e	          0x4889c7	                            mov rdi, rax	       209	update-ref.c	FUNCTION_4	CALL_9
0x781	      0xe800000000	                          call 0x40007c6	       209	update-ref.c	FUNCTION_4	CALL_9
0x786	        0x488d45a0	                   lea rax, [rbp - 0x60]	       210	update-ref.c	FUNCTION_4	CALL_10
0x78a	          0x4889c7	                            mov rdi, rax	       210	update-ref.c	FUNCTION_4	CALL_10
0x78d	      0xe800000000	                          call 0x40007d2	       210	update-ref.c	FUNCTION_4	CALL_10
0x792	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       212	update-ref.c	FUNCTION_4
0x799	        0x488b4df8	                mov rcx, qword [rbp - 8]	       213	update-ref.c	FUNCTION_4
0x79d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       213	update-ref.c	FUNCTION_4
0x7a6	            0x7405	                            je 0x40007ed	       213	update-ref.c	FUNCTION_4
0x7a8	      0xe800000000	                          call 0x40007ed	       213	update-ref.c	FUNCTION_4
0x7ad	              0xc9	                                   leave	       213	update-ref.c	FUNCTION_4
0x7ae	              0xc3	                                     ret	       213	update-ref.c	FUNCTION_4
strbuf_addch	FOR,0:CALL,2:ELSE,0:WHILE,0:functions,0:SWITCH,0:DO,0:IF,1	33
0x36	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_14
0x37	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_14
0x3a	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_14
0x3e	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_14
0x42	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_14
0x45	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_14	IF_1	CALL_1
0x49	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_14	IF_1	CALL_1
0x4c	      0xe8afffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_14	IF_1	CALL_1
0x51	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_14	IF_1	CALL_1
0x54	            0x7511	                           jne 0x40000a7	       227	strbuf.h	FUNCTION_14	IF_1	CALL_1
0x56	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_14	CALL_2
0x5a	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_14	CALL_2
0x5f	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_14	CALL_2
0x62	      0xe800000000	                          call 0x40000a7	       228	strbuf.h	FUNCTION_14	CALL_2
0x67	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_14
0x6b	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_14
0x6f	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_14
0x73	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_14
0x77	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_14
0x7b	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_14
0x7f	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_14
0x83	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_14
0x86	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_14
0x89	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_14
0x8b	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_14
0x8f	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_14
0x93	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_14
0x97	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_14
0x9b	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_14
0x9e	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_14
0xa1	              0x90	                                     nop	       231	strbuf.h	FUNCTION_14
0xa2	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_14
0xa3	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_14
parse_next_oid	FOR,0:CALL,12:ELSE,4:WHILE,0:functions,0:SWITCH,0:DO,0:IF,11	188
0x330	              0x55	                                push rbp	       101	update-ref.c	FUNCTION_3
0x331	          0x4889e5	                            mov rbp, rsp	       101	update-ref.c	FUNCTION_3
0x334	        0x4883ec60	                           sub rsp, 0x60	       101	update-ref.c	FUNCTION_3
0x338	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       101	update-ref.c	FUNCTION_3
0x33c	        0x488975c0	             mov qword [rbp - 0x40], rsi	       101	update-ref.c	FUNCTION_3
0x340	        0x488955b8	             mov qword [rbp - 0x48], rdx	       101	update-ref.c	FUNCTION_3
0x344	        0x48894db0	             mov qword [rbp - 0x50], rcx	       101	update-ref.c	FUNCTION_3
0x348	        0x4c8945a8	              mov qword [rbp - 0x58], r8	       101	update-ref.c	FUNCTION_3
0x34c	        0x44894da4	             mov dword [rbp - 0x5c], r9d	       101	update-ref.c	FUNCTION_3
0x350	    0x64488b042528	                mov rax, qword fs:[0x28]	       101	update-ref.c	FUNCTION_3
0x359	        0x488945f8	                mov qword [rbp - 8], rax	       101	update-ref.c	FUNCTION_3
0x35d	            0x31c0	                            xor eax, eax	       101	update-ref.c	FUNCTION_3
0x35f	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       102	update-ref.c	FUNCTION_3
0x367	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       102	update-ref.c	FUNCTION_3
0x36f	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       102	update-ref.c	FUNCTION_3
0x377	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       103	update-ref.c	FUNCTION_3
0x37e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       105	update-ref.c	FUNCTION_3	IF_1
0x382	          0x488b10	                    mov rdx, qword [rax]	       105	update-ref.c	FUNCTION_3	IF_1
0x385	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       105	update-ref.c	FUNCTION_3	IF_1
0x389	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       105	update-ref.c	FUNCTION_3	IF_1
0x38d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       105	update-ref.c	FUNCTION_3	IF_1
0x391	        0x488b4008	                mov rax, qword [rax + 8]	       105	update-ref.c	FUNCTION_3	IF_1
0x395	          0x4801c8	                            add rax, rcx	       105	update-ref.c	FUNCTION_3	IF_1
0x398	          0x4839c2	                            cmp rdx, rax	       105	update-ref.c	FUNCTION_3	IF_1
0x39b	     0xf8401020000	                            je 0x40005e2	       105	update-ref.c	FUNCTION_3	IF_1
0x3a1	     0xfb605000000	           movzx eax, byte [0x040003e8] 	       108	update-ref.c	FUNCTION_3	IF_2
0x3a8	            0x84c0	                             test al, al	       108	update-ref.c	FUNCTION_3	IF_2
0x3aa	     0xf84c8000000	                            je 0x40004b8	       108	update-ref.c	FUNCTION_3	IF_2
0x3b0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       110	update-ref.c	FUNCTION_3	IF_2	IF_3
0x3b4	          0x488b00	                    mov rax, qword [rax]	       110	update-ref.c	FUNCTION_3	IF_2	IF_3
0x3b7	           0xfb600	                   movzx eax, byte [rax]	       110	update-ref.c	FUNCTION_3	IF_2	IF_3
0x3ba	            0x84c0	                             test al, al	       110	update-ref.c	FUNCTION_3	IF_2	IF_3
0x3bc	            0x7415	                            je 0x4000413	       110	update-ref.c	FUNCTION_3	IF_2	IF_3
0x3be	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       110	update-ref.c	FUNCTION_3	IF_2	IF_3
0x3c2	          0x488b00	                    mov rax, qword [rax]	       110	update-ref.c	FUNCTION_3	IF_2	IF_3
0x3c5	           0xfb610	                   movzx edx, byte [rax]	       110	update-ref.c	FUNCTION_3	IF_2	IF_3
0x3c8	     0xfb605000000	           movzx eax, byte [0x0400040f] 	       110	update-ref.c	FUNCTION_3	IF_2	IF_3
0x3cf	            0x38c2	                              cmp dl, al	       110	update-ref.c	FUNCTION_3	IF_2	IF_3
0x3d1	            0x750a	                           jne 0x400041d	       110	update-ref.c	FUNCTION_3	IF_2	IF_3
0x3d3	      0xb801000000	                              mov eax, 1	       111	update-ref.c	FUNCTION_3	IF_2	IF_3
0x3d8	      0xe9f7010000	                           jmp 0x4000614	       111	update-ref.c	FUNCTION_3	IF_2	IF_3
0x3dd	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       112	update-ref.c	FUNCTION_3	IF_2	IF_4
0x3e1	          0x488b00	                    mov rax, qword [rax]	       112	update-ref.c	FUNCTION_3	IF_2	IF_4
0x3e4	           0xfb600	                   movzx eax, byte [rax]	       112	update-ref.c	FUNCTION_3	IF_2	IF_4
0x3e7	            0x3c20	                            cmp al, 0x20	       112	update-ref.c	FUNCTION_3	IF_2	IF_4
0x3e9	            0x7421	                            je 0x400044c	       112	update-ref.c	FUNCTION_3	IF_2	IF_4
0x3eb	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       113	update-ref.c	FUNCTION_3	IF_2	IF_4	CALL_1
0x3ef	          0x488b08	                    mov rcx, qword [rax]	       113	update-ref.c	FUNCTION_3	IF_2	IF_4	CALL_1
0x3f2	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       113	update-ref.c	FUNCTION_3	IF_2	IF_4	CALL_1
0x3f6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       113	update-ref.c	FUNCTION_3	IF_2	IF_4	CALL_1
0x3fa	          0x4889c6	                            mov rsi, rax	       113	update-ref.c	FUNCTION_3	IF_2	IF_4	CALL_1
0x3fd	      0xbf00000000	                              mov edi, 0	       113	update-ref.c	FUNCTION_3	IF_2	IF_4	CALL_1
0x402	      0xb800000000	                              mov eax, 0	       113	update-ref.c	FUNCTION_3	IF_2	IF_4	CALL_1
0x407	      0xe800000000	                          call 0x400044c	       113	update-ref.c	FUNCTION_3	IF_2	IF_4	CALL_1
0x40c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       115	update-ref.c	FUNCTION_3	IF_2
0x410	          0x488b00	                    mov rax, qword [rax]	       115	update-ref.c	FUNCTION_3	IF_2
0x413	        0x488d5001	                      lea rdx, [rax + 1]	       115	update-ref.c	FUNCTION_3	IF_2
0x417	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       115	update-ref.c	FUNCTION_3	IF_2
0x41b	          0x488910	                    mov qword [rax], rdx	       115	update-ref.c	FUNCTION_3	IF_2
0x41e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       116	update-ref.c	FUNCTION_3	IF_2	CALL_2
0x422	          0x488b00	                    mov rax, qword [rax]	       116	update-ref.c	FUNCTION_3	IF_2	CALL_2
0x425	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       116	update-ref.c	FUNCTION_3	IF_2	CALL_2
0x429	          0x4889d6	                            mov rsi, rdx	       116	update-ref.c	FUNCTION_3	IF_2	CALL_2
0x42c	          0x4889c7	                            mov rdi, rax	       116	update-ref.c	FUNCTION_3	IF_2	CALL_2
0x42f	      0xe81bfdffff	                      call sym.parse_arg	       116	update-ref.c	FUNCTION_3	IF_2	CALL_2
0x434	          0x4889c2	                            mov rdx, rax	       116	update-ref.c	FUNCTION_3	IF_2	CALL_2
0x437	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       116	update-ref.c	FUNCTION_3	IF_2	CALL_2
0x43b	          0x488910	                    mov qword [rax], rdx	       116	update-ref.c	FUNCTION_3	IF_2	CALL_2
0x43e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       117	update-ref.c	FUNCTION_3	IF_2	IF_5
0x442	          0x4885c0	                           test rax, rax	       117	update-ref.c	FUNCTION_3	IF_2	IF_5
0x445	            0x7420	                            je 0x40004a7	       117	update-ref.c	FUNCTION_3	IF_2	IF_5
0x447	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       118	update-ref.c	FUNCTION_3	IF_2	IF_5	IF_6	CALL_3
0x44b	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       118	update-ref.c	FUNCTION_3	IF_2	IF_5	IF_6	CALL_3
0x44f	          0x4889d6	                            mov rsi, rdx	       118	update-ref.c	FUNCTION_3	IF_2	IF_5	IF_6	CALL_3
0x452	          0x4889c7	                            mov rdi, rax	       118	update-ref.c	FUNCTION_3	IF_2	IF_5	IF_6	CALL_3
0x455	      0xe800000000	                          call 0x400049a	       118	update-ref.c	FUNCTION_3	IF_2	IF_5	IF_6	CALL_3
0x45a	            0x85c0	                           test eax, eax	       118	update-ref.c	FUNCTION_3	IF_2	IF_5	IF_6	CALL_3
0x45c	     0xf8400010000	                            je 0x40005a2	       118	update-ref.c	FUNCTION_3	IF_2	IF_5	IF_6	CALL_3
0x462	      0xe90c010000	                           jmp 0x40005b3	       119	update-ref.c	FUNCTION_3	IF_2	IF_5	IF_6
0x467	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       122	update-ref.c	FUNCTION_3	IF_2	ELSE_1	CALL_4
0x46b	          0x4889c7	                            mov rdi, rax	       122	update-ref.c	FUNCTION_3	IF_2	ELSE_1	CALL_4
0x46e	      0xe8b7fcffff	                         call sym.oidclr	       122	update-ref.c	FUNCTION_3	IF_2	ELSE_1	CALL_4
0x473	      0xe9ea000000	                           jmp 0x40005a2	       122	update-ref.c	FUNCTION_3	IF_2	ELSE_1	CALL_4
0x478	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       126	update-ref.c	FUNCTION_3	ELSE_2	IF_7
0x47c	          0x488b00	                    mov rax, qword [rax]	       126	update-ref.c	FUNCTION_3	ELSE_2	IF_7
0x47f	           0xfb600	                   movzx eax, byte [rax]	       126	update-ref.c	FUNCTION_3	ELSE_2	IF_7
0x482	            0x84c0	                             test al, al	       126	update-ref.c	FUNCTION_3	ELSE_2	IF_7
0x484	            0x7421	                            je 0x40004e7	       126	update-ref.c	FUNCTION_3	ELSE_2	IF_7
0x486	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       127	update-ref.c	FUNCTION_3	ELSE_2	IF_7	CALL_5
0x48a	          0x488b08	                    mov rcx, qword [rax]	       127	update-ref.c	FUNCTION_3	ELSE_2	IF_7	CALL_5
0x48d	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       127	update-ref.c	FUNCTION_3	ELSE_2	IF_7	CALL_5
0x491	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       127	update-ref.c	FUNCTION_3	ELSE_2	IF_7	CALL_5
0x495	          0x4889c6	                            mov rsi, rax	       127	update-ref.c	FUNCTION_3	ELSE_2	IF_7	CALL_5
0x498	      0xbf00000000	                              mov edi, 0	       127	update-ref.c	FUNCTION_3	ELSE_2	IF_7	CALL_5
0x49d	      0xb800000000	                              mov eax, 0	       127	update-ref.c	FUNCTION_3	ELSE_2	IF_7	CALL_5
0x4a2	      0xe800000000	                          call 0x40004e7	       127	update-ref.c	FUNCTION_3	ELSE_2	IF_7	CALL_5
0x4a7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       129	update-ref.c	FUNCTION_3	ELSE_2
0x4ab	          0x488b00	                    mov rax, qword [rax]	       129	update-ref.c	FUNCTION_3	ELSE_2
0x4ae	        0x488d5001	                      lea rdx, [rax + 1]	       129	update-ref.c	FUNCTION_3	ELSE_2
0x4b2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       129	update-ref.c	FUNCTION_3	ELSE_2
0x4b6	          0x488910	                    mov qword [rax], rdx	       129	update-ref.c	FUNCTION_3	ELSE_2
0x4b9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       130	update-ref.c	FUNCTION_3	ELSE_2	IF_8
0x4bd	          0x488b10	                    mov rdx, qword [rax]	       130	update-ref.c	FUNCTION_3	ELSE_2	IF_8
0x4c0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       130	update-ref.c	FUNCTION_3	ELSE_2	IF_8
0x4c4	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       130	update-ref.c	FUNCTION_3	ELSE_2	IF_8
0x4c8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       130	update-ref.c	FUNCTION_3	ELSE_2	IF_8
0x4cc	        0x488b4008	                mov rax, qword [rax + 8]	       130	update-ref.c	FUNCTION_3	ELSE_2	IF_8
0x4d0	          0x4801c8	                            add rax, rcx	       130	update-ref.c	FUNCTION_3	ELSE_2	IF_8
0x4d3	          0x4839c2	                            cmp rdx, rax	       130	update-ref.c	FUNCTION_3	ELSE_2	IF_8
0x4d6	     0xf84c9000000	                            je 0x40005e5	       130	update-ref.c	FUNCTION_3	ELSE_2	IF_8
0x4dc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       132	update-ref.c	FUNCTION_3	ELSE_2	CALL_6
0x4e0	          0x488b10	                    mov rdx, qword [rax]	       132	update-ref.c	FUNCTION_3	ELSE_2	CALL_6
0x4e3	        0x488d45e0	                   lea rax, [rbp - 0x20]	       132	update-ref.c	FUNCTION_3	ELSE_2	CALL_6
0x4e7	          0x4889d6	                            mov rsi, rdx	       132	update-ref.c	FUNCTION_3	ELSE_2	CALL_6
0x4ea	          0x4889c7	                            mov rdi, rax	       132	update-ref.c	FUNCTION_3	ELSE_2	CALL_6
0x4ed	      0xe8b2fbffff	                  call sym.strbuf_addstr	       132	update-ref.c	FUNCTION_3	ELSE_2	CALL_6
0x4f2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       133	update-ref.c	FUNCTION_3	ELSE_2
0x4f6	          0x488b10	                    mov rdx, qword [rax]	       133	update-ref.c	FUNCTION_3	ELSE_2
0x4f9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       133	update-ref.c	FUNCTION_3	ELSE_2
0x4fd	          0x4801c2	                            add rdx, rax	       133	update-ref.c	FUNCTION_3	ELSE_2
0x500	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       133	update-ref.c	FUNCTION_3	ELSE_2
0x504	          0x488910	                    mov qword [rax], rdx	       133	update-ref.c	FUNCTION_3	ELSE_2
0x507	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       135	update-ref.c	FUNCTION_3	ELSE_2	IF_9
0x50b	          0x4885c0	                           test rax, rax	       135	update-ref.c	FUNCTION_3	ELSE_2	IF_9
0x50e	            0x7419	                            je 0x4000569	       135	update-ref.c	FUNCTION_3	ELSE_2	IF_9
0x510	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       136	update-ref.c	FUNCTION_3	ELSE_2	IF_9	IF_10	CALL_7
0x514	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       136	update-ref.c	FUNCTION_3	ELSE_2	IF_9	IF_10	CALL_7
0x518	          0x4889d6	                            mov rsi, rdx	       136	update-ref.c	FUNCTION_3	ELSE_2	IF_9	IF_10	CALL_7
0x51b	          0x4889c7	                            mov rdi, rax	       136	update-ref.c	FUNCTION_3	ELSE_2	IF_9	IF_10	CALL_7
0x51e	      0xe800000000	                          call 0x4000563	       136	update-ref.c	FUNCTION_3	ELSE_2	IF_9	IF_10	CALL_7
0x523	            0x85c0	                           test eax, eax	       136	update-ref.c	FUNCTION_3	ELSE_2	IF_9	IF_10	CALL_7
0x525	            0x743b	                            je 0x40005a2	       136	update-ref.c	FUNCTION_3	ELSE_2	IF_9	IF_10	CALL_7
0x527	            0xeb4a	                           jmp 0x40005b3	       137	update-ref.c	FUNCTION_3	ELSE_2	IF_9	IF_10
0x529	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       138	update-ref.c	FUNCTION_3	ELSE_2	ELSE_3	IF_11
0x52c	          0x83e002	                              and eax, 2	       138	update-ref.c	FUNCTION_3	ELSE_2	ELSE_3	IF_11
0x52f	            0x85c0	                           test eax, eax	       138	update-ref.c	FUNCTION_3	ELSE_2	ELSE_3	IF_11
0x531	            0x7428	                            je 0x400059b	       138	update-ref.c	FUNCTION_3	ELSE_2	ELSE_3	IF_11
0x533	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       140	update-ref.c	FUNCTION_3	ELSE_2	ELSE_3	IF_11	CALL_8
0x537	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       140	update-ref.c	FUNCTION_3	ELSE_2	ELSE_3	IF_11	CALL_8
0x53b	          0x4889c6	                            mov rsi, rax	       140	update-ref.c	FUNCTION_3	ELSE_2	ELSE_3	IF_11	CALL_8
0x53e	      0xbf00000000	                              mov edi, 0	       140	update-ref.c	FUNCTION_3	ELSE_2	ELSE_3	IF_11	CALL_8
0x543	      0xb800000000	                              mov eax, 0	       140	update-ref.c	FUNCTION_3	ELSE_2	ELSE_3	IF_11	CALL_8
0x548	      0xe800000000	                          call 0x400058d	       140	update-ref.c	FUNCTION_3	ELSE_2	ELSE_3	IF_11	CALL_8
0x54d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       142	update-ref.c	FUNCTION_3	ELSE_2	ELSE_3	IF_11	CALL_9
0x551	          0x4889c7	                            mov rdi, rax	       142	update-ref.c	FUNCTION_3	ELSE_2	ELSE_3	IF_11	CALL_9
0x554	      0xe8d1fbffff	                         call sym.oidclr	       142	update-ref.c	FUNCTION_3	ELSE_2	ELSE_3	IF_11	CALL_9
0x559	            0xeb07	                           jmp 0x40005a2	       142	update-ref.c	FUNCTION_3	ELSE_2	ELSE_3	IF_11	CALL_9
0x55b	    0xc745dc010000	               mov dword [rbp - 0x24], 1	       148	update-ref.c	FUNCTION_3	ELSE_2	ELSE_4
0x562	        0x488d45e0	                   lea rax, [rbp - 0x20]	       152	update-ref.c	FUNCTION_3	CALL_10
0x566	          0x4889c7	                            mov rdi, rax	       152	update-ref.c	FUNCTION_3	CALL_10
0x569	      0xe800000000	                          call 0x40005ae	       152	update-ref.c	FUNCTION_3	CALL_10
0x56e	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       154	update-ref.c	FUNCTION_3
0x571	            0xeb61	                           jmp 0x4000614	       154	update-ref.c	FUNCTION_3
0x573	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       157	update-ref.c	FUNCTION_3	CALL_11
0x577	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       157	update-ref.c	FUNCTION_3	CALL_11
0x57a	          0x83e001	                              and eax, 1	       157	update-ref.c	FUNCTION_3	CALL_11
0x57d	            0x85c0	                           test eax, eax	       157	update-ref.c	FUNCTION_3	CALL_11
0x57f	            0x7407	                            je 0x40005c8	       157	update-ref.c	FUNCTION_3	CALL_11
0x581	      0xbf00000000	                              mov edi, 0	       157	update-ref.c	FUNCTION_3	CALL_11
0x586	            0xeb05	                           jmp 0x40005cd	       157	update-ref.c	FUNCTION_3	CALL_11
0x588	      0xbf00000000	                              mov edi, 0	       157	update-ref.c	FUNCTION_3	CALL_11
0x58d	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       157	update-ref.c	FUNCTION_3	CALL_11
0x591	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       157	update-ref.c	FUNCTION_3	CALL_11
0x595	          0x4889c6	                            mov rsi, rax	       157	update-ref.c	FUNCTION_3	CALL_11
0x598	      0xb800000000	                              mov eax, 0	       157	update-ref.c	FUNCTION_3	CALL_11
0x59d	      0xe800000000	                          call 0x40005e2	       157	update-ref.c	FUNCTION_3	CALL_11
0x5a2	              0x90	                                     nop	       106	update-ref.c	FUNCTION_3	IF_1
0x5a3	            0xeb01	                           jmp 0x40005e6	       106	update-ref.c	FUNCTION_3	IF_1
0x5a5	              0x90	                                     nop	       131	update-ref.c	FUNCTION_3	ELSE_2	IF_8
0x5a6	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       163	update-ref.c	FUNCTION_3	CALL_12
0x5a9	          0x83e001	                              and eax, 1	       163	update-ref.c	FUNCTION_3	CALL_12
0x5ac	            0x85c0	                           test eax, eax	       163	update-ref.c	FUNCTION_3	CALL_12
0x5ae	            0x7407	                            je 0x40005f7	       163	update-ref.c	FUNCTION_3	CALL_12
0x5b0	      0xb900000000	                              mov ecx, 0	       163	update-ref.c	FUNCTION_3	CALL_12
0x5b5	            0xeb05	                           jmp 0x40005fc	       163	update-ref.c	FUNCTION_3	CALL_12
0x5b7	      0xb900000000	                              mov ecx, 0	       163	update-ref.c	FUNCTION_3	CALL_12
0x5bc	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       163	update-ref.c	FUNCTION_3	CALL_12
0x5c0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       163	update-ref.c	FUNCTION_3	CALL_12
0x5c4	          0x4889c6	                            mov rsi, rax	       163	update-ref.c	FUNCTION_3	CALL_12
0x5c7	          0x4889cf	                            mov rdi, rcx	       163	update-ref.c	FUNCTION_3	CALL_12
0x5ca	      0xb800000000	                              mov eax, 0	       163	update-ref.c	FUNCTION_3	CALL_12
0x5cf	      0xe800000000	                          call 0x4000614	       163	update-ref.c	FUNCTION_3	CALL_12
0x5d4	        0x488b75f8	                mov rsi, qword [rbp - 8]	       167	update-ref.c	FUNCTION_3
0x5d8	    0x644833342528	                xor rsi, qword fs:[0x28]	       167	update-ref.c	FUNCTION_3
0x5e1	            0x7405	                            je 0x4000628	       167	update-ref.c	FUNCTION_3
0x5e3	      0xe800000000	                          call 0x4000628	       167	update-ref.c	FUNCTION_3
0x5e8	              0xc9	                                   leave	       167	update-ref.c	FUNCTION_3
0x5e9	              0xc3	                                     ret	       167	update-ref.c	FUNCTION_3
parse_cmd_delete	FOR,0:CALL,10:ELSE,1:WHILE,0:functions,0:SWITCH,0:DO,0:IF,5	95
0x936	              0x55	                                push rbp	       249	update-ref.c	FUNCTION_6
0x937	          0x4889e5	                            mov rbp, rsp	       249	update-ref.c	FUNCTION_6
0x93a	        0x4883ec70	                           sub rsp, 0x70	       249	update-ref.c	FUNCTION_6
0x93e	        0x48897da8	             mov qword [rbp - 0x58], rdi	       249	update-ref.c	FUNCTION_6
0x942	        0x488975a0	             mov qword [rbp - 0x60], rsi	       249	update-ref.c	FUNCTION_6
0x946	        0x48895598	             mov qword [rbp - 0x68], rdx	       249	update-ref.c	FUNCTION_6
0x94a	    0x64488b042528	                mov rax, qword fs:[0x28]	       249	update-ref.c	FUNCTION_6
0x953	        0x488945f8	                mov qword [rbp - 8], rax	       249	update-ref.c	FUNCTION_6
0x957	            0x31c0	                            xor eax, eax	       249	update-ref.c	FUNCTION_6
0x959	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       250	update-ref.c	FUNCTION_6
0x961	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       250	update-ref.c	FUNCTION_6
0x969	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       250	update-ref.c	FUNCTION_6
0x971	        0x488d5598	                   lea rdx, [rbp - 0x68]	       255	update-ref.c	FUNCTION_6	CALL_1
0x975	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       255	update-ref.c	FUNCTION_6	CALL_1
0x979	          0x4889d6	                            mov rsi, rdx	       255	update-ref.c	FUNCTION_6	CALL_1
0x97c	          0x4889c7	                            mov rdi, rax	       255	update-ref.c	FUNCTION_6	CALL_1
0x97f	      0xe8aff8ffff	                  call sym.parse_refname	       255	update-ref.c	FUNCTION_6	CALL_1
0x984	        0x488945b8	             mov qword [rbp - 0x48], rax	       255	update-ref.c	FUNCTION_6	CALL_1
0x988	      0x48837db800	               cmp qword [rbp - 0x48], 0	       256	update-ref.c	FUNCTION_6	IF_1
0x98d	            0x750f	                           jne 0x40009de	       256	update-ref.c	FUNCTION_6	IF_1
0x98f	      0xbf00000000	                              mov edi, 0	       257	update-ref.c	FUNCTION_6	CALL_2
0x994	      0xb800000000	                              mov eax, 0	       257	update-ref.c	FUNCTION_6	CALL_2
0x999	      0xe800000000	                          call 0x40009de	       257	update-ref.c	FUNCTION_6	CALL_2
0x99e	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x9a2	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x9a6	        0x488d7598	                   lea rsi, [rbp - 0x68]	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x9aa	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x9ae	    0x41b901000000	                              mov r9d, 1	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x9b4	          0x4989c8	                             mov r8, rcx	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x9b7	      0xb900000000	                              mov ecx, 0	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x9bc	          0x4889c7	                            mov rdi, rax	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x9bf	      0xe86cf9ffff	                 call sym.parse_next_oid	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x9c4	            0x85c0	                           test eax, eax	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x9c6	            0x7409	                            je 0x4000a11	       259	update-ref.c	FUNCTION_6	IF_2	CALL_3
0x9c8	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	       261	update-ref.c	FUNCTION_6	IF_2
0x9cf	            0xeb2d	                           jmp 0x4000a3e	       261	update-ref.c	FUNCTION_6	IF_2
0x9d1	        0x488d45e0	                   lea rax, [rbp - 0x20]	       263	update-ref.c	FUNCTION_6	ELSE_1	IF_3	CALL_4
0x9d5	          0x4889c7	                            mov rdi, rax	       263	update-ref.c	FUNCTION_6	ELSE_1	IF_3	CALL_4
0x9d8	      0xe826f7ffff	                    call sym.is_null_oid	       263	update-ref.c	FUNCTION_6	ELSE_1	IF_3	CALL_4
0x9dd	            0x85c0	                           test eax, eax	       263	update-ref.c	FUNCTION_6	ELSE_1	IF_3	CALL_4
0x9df	            0x7416	                            je 0x4000a37	       263	update-ref.c	FUNCTION_6	ELSE_1	IF_3	CALL_4
0x9e1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       264	update-ref.c	FUNCTION_6	ELSE_1	CALL_5
0x9e5	          0x4889c6	                            mov rsi, rax	       264	update-ref.c	FUNCTION_6	ELSE_1	CALL_5
0x9e8	      0xbf00000000	                              mov edi, 0	       264	update-ref.c	FUNCTION_6	ELSE_1	CALL_5
0x9ed	      0xb800000000	                              mov eax, 0	       264	update-ref.c	FUNCTION_6	ELSE_1	CALL_5
0x9f2	      0xe800000000	                          call 0x4000a37	       264	update-ref.c	FUNCTION_6	ELSE_1	CALL_5
0x9f7	    0xc745b4010000	               mov dword [rbp - 0x4c], 1	       265	update-ref.c	FUNCTION_6	ELSE_1
0x9fe	        0x488b4598	             mov rax, qword [rbp - 0x68]	       268	update-ref.c	FUNCTION_6	IF_4
0xa02	           0xfb610	                   movzx edx, byte [rax]	       268	update-ref.c	FUNCTION_6	IF_4
0xa05	     0xfb605000000	           movzx eax, byte [0x04000a4c] 	       268	update-ref.c	FUNCTION_6	IF_4
0xa0c	            0x38c2	                              cmp dl, al	       268	update-ref.c	FUNCTION_6	IF_4
0xa0e	            0x741a	                            je 0x4000a6a	       268	update-ref.c	FUNCTION_6	IF_4
0xa10	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       269	update-ref.c	FUNCTION_6	CALL_6
0xa14	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       269	update-ref.c	FUNCTION_6	CALL_6
0xa18	          0x4889c6	                            mov rsi, rax	       269	update-ref.c	FUNCTION_6	CALL_6
0xa1b	      0xbf00000000	                              mov edi, 0	       269	update-ref.c	FUNCTION_6	CALL_6
0xa20	      0xb800000000	                              mov eax, 0	       269	update-ref.c	FUNCTION_6	CALL_6
0xa25	      0xe800000000	                          call 0x4000a6a	       269	update-ref.c	FUNCTION_6	CALL_6
0xa2a	    0x488b15000000	            mov rdx, qword [0x04000a71] 	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0xa31	    0x8b0500000000	            mov eax, dword [0x04000a77] 	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0xa37	          0x4189c2	                           mov r10d, eax	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0xa3a	        0x837db400	               cmp dword [rbp - 0x4c], 0	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0xa3e	            0x7406	                            je 0x4000a86	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0xa40	        0x488d45e0	                   lea rax, [rbp - 0x20]	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0xa44	            0xeb05	                           jmp 0x4000a8b	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0xa46	      0xb800000000	                              mov eax, 0	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0xa4b	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0xa4f	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0xa53	        0x488b7da8	             mov rdi, qword [rbp - 0x58]	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0xa57	          0x4989c9	                             mov r9, rcx	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0xa5a	          0x4989d0	                             mov r8, rdx	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0xa5d	          0x4489d1	                           mov ecx, r10d	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0xa60	          0x4889c2	                            mov rdx, rax	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0xa63	      0xe800000000	                          call 0x4000aa8	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0xa68	            0x85c0	                           test eax, eax	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0xa6a	            0x7416	                            je 0x4000ac2	       271	update-ref.c	FUNCTION_6	IF_5	CALL_7
0xa6c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       274	update-ref.c	FUNCTION_6	CALL_8
0xa70	          0x4889c6	                            mov rsi, rax	       274	update-ref.c	FUNCTION_6	CALL_8
0xa73	      0xbf00000000	                              mov edi, 0	       274	update-ref.c	FUNCTION_6	CALL_8
0xa78	      0xb800000000	                              mov eax, 0	       274	update-ref.c	FUNCTION_6	CALL_8
0xa7d	      0xe800000000	                          call 0x4000ac2	       274	update-ref.c	FUNCTION_6	CALL_8
0xa82	    0xc70500000000	               mov dword [0x04000acc], 0	       276	update-ref.c	FUNCTION_6
0xa8c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       277	update-ref.c	FUNCTION_6	CALL_9
0xa90	          0x4889c7	                            mov rdi, rax	       277	update-ref.c	FUNCTION_6	CALL_9
0xa93	      0xe800000000	                          call 0x4000ad8	       277	update-ref.c	FUNCTION_6	CALL_9
0xa98	        0x488d45c0	                   lea rax, [rbp - 0x40]	       278	update-ref.c	FUNCTION_6	CALL_10
0xa9c	          0x4889c7	                            mov rdi, rax	       278	update-ref.c	FUNCTION_6	CALL_10
0xa9f	      0xe800000000	                          call 0x4000ae4	       278	update-ref.c	FUNCTION_6	CALL_10
0xaa4	        0x488b4598	             mov rax, qword [rbp - 0x68]	       280	update-ref.c	FUNCTION_6
0xaa8	        0x488b4df8	                mov rcx, qword [rbp - 8]	       281	update-ref.c	FUNCTION_6
0xaac	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       281	update-ref.c	FUNCTION_6
0xab5	            0x7405	                            je 0x4000afc	       281	update-ref.c	FUNCTION_6
0xab7	      0xe800000000	                          call 0x4000afc	       281	update-ref.c	FUNCTION_6
0xabc	              0xc9	                                   leave	       281	update-ref.c	FUNCTION_6
0xabd	              0xc3	                                     ret	       281	update-ref.c	FUNCTION_6
parse_arg	FOR,0:CALL,6:ELSE,1:WHILE,1:functions,0:SWITCH,0:DO,0:IF,3	67
0x14f	              0x55	                                push rbp	        28	update-ref.c	FUNCTION_1
0x150	          0x4889e5	                            mov rbp, rsp	        28	update-ref.c	FUNCTION_1
0x153	        0x4883ec20	                           sub rsp, 0x20	        28	update-ref.c	FUNCTION_1
0x157	        0x48897de8	             mov qword [rbp - 0x18], rdi	        28	update-ref.c	FUNCTION_1
0x15b	        0x488975e0	             mov qword [rbp - 0x20], rsi	        28	update-ref.c	FUNCTION_1
0x15f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        29	update-ref.c	FUNCTION_1	IF_1
0x163	           0xfb600	                   movzx eax, byte [rax]	        29	update-ref.c	FUNCTION_1	IF_1
0x166	            0x3c22	                            cmp al, 0x22	        29	update-ref.c	FUNCTION_1	IF_1
0x168	     0xf8597000000	                           jne 0x4000245	        29	update-ref.c	FUNCTION_1	IF_1
0x16e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        30	update-ref.c	FUNCTION_1	IF_1
0x172	        0x488945f8	                mov qword [rbp - 8], rax	        30	update-ref.c	FUNCTION_1	IF_1
0x176	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	        32	update-ref.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x17a	        0x488d55e8	                   lea rdx, [rbp - 0x18]	        32	update-ref.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x17e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        32	update-ref.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x182	          0x4889ce	                            mov rsi, rcx	        32	update-ref.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x185	          0x4889c7	                            mov rdi, rax	        32	update-ref.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x188	      0xe800000000	                          call 0x40001cd	        32	update-ref.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x18d	            0x85c0	                           test eax, eax	        32	update-ref.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x18f	            0x7416	                            je 0x40001e7	        32	update-ref.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x191	        0x488b45f8	                mov rax, qword [rbp - 8]	        33	update-ref.c	FUNCTION_1	IF_1	CALL_2
0x195	          0x4889c6	                            mov rsi, rax	        33	update-ref.c	FUNCTION_1	IF_1	CALL_2
0x198	      0xbf00000000	                              mov edi, 0	        33	update-ref.c	FUNCTION_1	IF_1	CALL_2
0x19d	      0xb800000000	                              mov eax, 0	        33	update-ref.c	FUNCTION_1	IF_1	CALL_2
0x1a2	      0xe800000000	                          call 0x40001e7	        33	update-ref.c	FUNCTION_1	IF_1	CALL_2
0x1a7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        34	update-ref.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x1ab	           0xfb600	                   movzx eax, byte [rax]	        34	update-ref.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x1ae	            0x84c0	                             test al, al	        34	update-ref.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x1b0	            0x747b	                            je 0x400026d	        34	update-ref.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x1b2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        34	update-ref.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x1b6	           0xfb600	                   movzx eax, byte [rax]	        34	update-ref.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x1b9	           0xfb6c0	                           movzx eax, al	        34	update-ref.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x1bc	            0x4898	                                    cdqe	        34	update-ref.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x1be	     0xfb680000000	                   movzx eax, byte [rax]	        34	update-ref.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x1c5	           0xfb6c0	                           movzx eax, al	        34	update-ref.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x1c8	          0x83e001	                              and eax, 1	        34	update-ref.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x1cb	            0x85c0	                           test eax, eax	        34	update-ref.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x1cd	            0x755e	                           jne 0x400026d	        34	update-ref.c	FUNCTION_1	IF_1	IF_3	CALL_3
0x1cf	        0x488b45f8	                mov rax, qword [rbp - 8]	        35	update-ref.c	FUNCTION_1	IF_1	CALL_4
0x1d3	          0x4889c6	                            mov rsi, rax	        35	update-ref.c	FUNCTION_1	IF_1	CALL_4
0x1d6	      0xbf00000000	                              mov edi, 0	        35	update-ref.c	FUNCTION_1	IF_1	CALL_4
0x1db	      0xb800000000	                              mov eax, 0	        35	update-ref.c	FUNCTION_1	IF_1	CALL_4
0x1e0	      0xe800000000	                          call 0x4000225	        35	update-ref.c	FUNCTION_1	IF_1	CALL_4
0x1e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        38	update-ref.c	FUNCTION_1	ELSE_1	CALL_6
0x1e9	        0x488d5001	                      lea rdx, [rax + 1]	        38	update-ref.c	FUNCTION_1	ELSE_1	CALL_6
0x1ed	        0x488955e8	             mov qword [rbp - 0x18], rdx	        38	update-ref.c	FUNCTION_1	ELSE_1	CALL_6
0x1f1	           0xfb600	                   movzx eax, byte [rax]	        38	update-ref.c	FUNCTION_1	ELSE_1	CALL_6
0x1f4	           0xfbed0	                           movsx edx, al	        38	update-ref.c	FUNCTION_1	ELSE_1	CALL_6
0x1f7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        38	update-ref.c	FUNCTION_1	ELSE_1	CALL_6
0x1fb	            0x89d6	                            mov esi, edx	        38	update-ref.c	FUNCTION_1	ELSE_1	CALL_6
0x1fd	          0x4889c7	                            mov rdi, rax	        38	update-ref.c	FUNCTION_1	ELSE_1	CALL_6
0x200	      0xe831feffff	                   call sym.strbuf_addch	        38	update-ref.c	FUNCTION_1	ELSE_1	CALL_6
0x205	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x209	           0xfb600	                   movzx eax, byte [rax]	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x20c	            0x84c0	                             test al, al	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x20e	            0x741d	                            je 0x400026d	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x210	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x214	           0xfb600	                   movzx eax, byte [rax]	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x217	           0xfb6c0	                           movzx eax, al	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x21a	            0x4898	                                    cdqe	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x21c	     0xfb680000000	                   movzx eax, byte [rax]	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x223	           0xfb6c0	                           movzx eax, al	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x226	          0x83e001	                              and eax, 1	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x229	            0x85c0	                           test eax, eax	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x22b	            0x74b8	                            je 0x4000225	        37	update-ref.c	FUNCTION_1	ELSE_1	WHILE_1	CALL_5
0x22d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        41	update-ref.c	FUNCTION_1
0x231	              0xc9	                                   leave	        42	update-ref.c	FUNCTION_1
0x232	              0xc3	                                     ret	        42	update-ref.c	FUNCTION_1
