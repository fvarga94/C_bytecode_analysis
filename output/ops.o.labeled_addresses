get_register_name	CALL,0:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,5:IF,7	28
0x892f	              0x55	                                push rbp	      4167	ops.c	FUNCTION_51
0x8930	          0x4889e5	                            mov rbp, rsp	      4167	ops.c	FUNCTION_51
0x8933	          0x897dfc	                mov dword [rbp - 4], edi	      4167	ops.c	FUNCTION_51
0x8936	        0x837dfcff	 cmp dword [rbp - 4], 0xffffffffffffffff	      4168	ops.c	FUNCTION_51	IF_1
0x893a	            0x7507	                           jne 0x4008983	      4168	ops.c	FUNCTION_51	IF_1
0x893c	      0xb822000000	                           mov eax, 0x22	      4169	ops.c	FUNCTION_51	IF_1
0x8941	            0xeb3b	                           jmp 0x40089be	      4169	ops.c	FUNCTION_51	IF_1
0x8943	        0x837dfc09	                  cmp dword [rbp - 4], 9	      4170	ops.c	FUNCTION_51	ELSE_1	IF_2
0x8947	            0x7f08	                            jg 0x4008991	      4170	ops.c	FUNCTION_51	ELSE_1	IF_2
0x8949	          0x8b45fc	                mov eax, dword [rbp - 4]	      4171	ops.c	FUNCTION_51	ELSE_1	IF_2
0x894c	          0x83c030	                           add eax, 0x30	      4171	ops.c	FUNCTION_51	ELSE_1	IF_2
0x894f	            0xeb2d	                           jmp 0x40089be	      4171	ops.c	FUNCTION_51	ELSE_1	IF_2
0x8951	        0x837dfc24	               cmp dword [rbp - 4], 0x24	      4172	ops.c	FUNCTION_51	ELSE_2	IF_3
0x8955	            0x7507	                           jne 0x400899e	      4172	ops.c	FUNCTION_51	ELSE_2	IF_3
0x8957	      0xb82d000000	                           mov eax, 0x2d	      4173	ops.c	FUNCTION_51	ELSE_2	IF_3
0x895c	            0xeb20	                           jmp 0x40089be	      4173	ops.c	FUNCTION_51	ELSE_2	IF_3
0x895e	        0x837dfc25	               cmp dword [rbp - 4], 0x25	      4175	ops.c	FUNCTION_51	ELSE_3	IF_4
0x8962	            0x7507	                           jne 0x40089ab	      4175	ops.c	FUNCTION_51	ELSE_3	IF_4
0x8964	      0xb82a000000	                           mov eax, 0x2a	      4176	ops.c	FUNCTION_51	ELSE_3	IF_4
0x8969	            0xeb13	                           jmp 0x40089be	      4176	ops.c	FUNCTION_51	ELSE_3	IF_4
0x896b	        0x837dfc26	               cmp dword [rbp - 4], 0x26	      4177	ops.c	FUNCTION_51	ELSE_4	IF_5
0x896f	            0x7507	                           jne 0x40089b8	      4177	ops.c	FUNCTION_51	ELSE_4	IF_5
0x8971	      0xb82b000000	                           mov eax, 0x2b	      4178	ops.c	FUNCTION_51	ELSE_4	IF_5
0x8976	            0xeb06	                           jmp 0x40089be	      4178	ops.c	FUNCTION_51	ELSE_4	IF_5
0x8978	          0x8b45fc	                mov eax, dword [rbp - 4]	      4193	ops.c	FUNCTION_51	ELSE_5
0x897b	          0x83c057	                           add eax, 0x57	      4193	ops.c	FUNCTION_51	ELSE_5
0x897e	              0x5d	                                 pop rbp	      4196	ops.c	FUNCTION_51
0x897f	              0xc3	                                     ret	      4196	ops.c	FUNCTION_51
may_set_selection	CALL,4:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,1:IF,2	26
0xd8e1	              0x55	                                push rbp	      6675	ops.c	ELSE_3	FUNCTION_78
0xd8e2	          0x4889e5	                            mov rbp, rsp	      6675	ops.c	ELSE_3	FUNCTION_78
0xd8e5	    0x488b05000000	            mov rax, qword [0x0400d92c] 	      6676	ops.c	ELSE_3	FUNCTION_78	IF_1
0xd8ec	    0x483d00000000	                              cmp rax, 0	      6676	ops.c	ELSE_3	FUNCTION_78	IF_1
0xd8f2	            0x7520	                           jne 0x400d954	      6676	ops.c	ELSE_3	FUNCTION_78	IF_1
0xd8f4	    0x8b0500000000	            mov eax, dword [0x0400d93a] 	      6676	ops.c	ELSE_3	FUNCTION_78	IF_1
0xd8fa	            0x85c0	                           test eax, eax	      6676	ops.c	ELSE_3	FUNCTION_78	IF_1
0xd8fc	            0x7416	                            je 0x400d954	      6676	ops.c	ELSE_3	FUNCTION_78	IF_1
0xd8fe	      0xbf00000000	                              mov edi, 0	      6678	ops.c	ELSE_3	FUNCTION_78	IF_1	CALL_1
0xd903	      0xe800000000	                          call 0x400d948	      6678	ops.c	ELSE_3	FUNCTION_78	IF_1	CALL_1
0xd908	      0xbf00000000	                              mov edi, 0	      6679	ops.c	ELSE_3	FUNCTION_78	IF_1	CALL_2
0xd90d	      0xe800000000	                          call 0x400d952	      6679	ops.c	ELSE_3	FUNCTION_78	IF_1	CALL_2
0xd912	            0xeb2d	                           jmp 0x400d981	      6686	ops.c	ELSE_3	FUNCTION_78
0xd914	    0x488b05000000	            mov rax, qword [0x0400d95b] 	      6681	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2
0xd91b	    0x483d00000000	                              cmp rax, 0	      6681	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2
0xd921	            0x751e	                           jne 0x400d981	      6681	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2
0xd923	    0x8b0500000000	            mov eax, dword [0x0400d969] 	      6681	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2
0xd929	            0x85c0	                           test eax, eax	      6681	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2
0xd92b	            0x7414	                            je 0x400d981	      6681	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2
0xd92d	      0xbf00000000	                              mov edi, 0	      6683	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2	CALL_3
0xd932	      0xe800000000	                          call 0x400d977	      6683	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2	CALL_3
0xd937	      0xbf00000000	                              mov edi, 0	      6684	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2	CALL_4
0xd93c	      0xe800000000	                          call 0x400d981	      6684	ops.c	ELSE_3	FUNCTION_78	ELSE_1	IF_2	CALL_4
0xd941	              0x90	                                     nop	      6686	ops.c	ELSE_3	FUNCTION_78
0xd942	              0x5d	                                 pop rbp	      6686	ops.c	ELSE_3	FUNCTION_78
0xd943	              0xc3	                                     ret	      6686	ops.c	ELSE_3	FUNCTION_78
read_viminfo_register	CALL,22:FOR,4:SWITCH,0:functions,0:WHILE,1:DO,0:ELSE,6:IF,17	323
0xc496	              0x55	                                push rbp	      6041	ops.c	FUNCTION_70
0xc497	          0x4889e5	                            mov rbp, rsp	      6041	ops.c	FUNCTION_70
0xc49a	              0x53	                                push rbx	      6041	ops.c	FUNCTION_70
0xc49b	        0x4883ec58	                           sub rsp, 0x58	      6041	ops.c	FUNCTION_70
0xc49f	        0x48897da8	             mov qword [rbp - 0x58], rdi	      6041	ops.c	FUNCTION_70
0xc4a3	          0x8975a4	             mov dword [rbp - 0x5c], esi	      6041	ops.c	FUNCTION_70
0xc4a6	    0x64488b042528	                mov rax, qword fs:[0x28]	      6041	ops.c	FUNCTION_70
0xc4af	        0x488945e8	             mov qword [rbp - 0x18], rax	      6041	ops.c	FUNCTION_70
0xc4b3	            0x31c0	                            xor eax, eax	      6041	ops.c	FUNCTION_70
0xc4b5	    0xc745b0010000	               mov dword [rbp - 0x50], 1	      6043	ops.c	FUNCTION_70
0xc4bc	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      6047	ops.c	FUNCTION_70
0xc4c3	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      6049	ops.c	FUNCTION_70
0xc4cb	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	      6050	ops.c	FUNCTION_70
0xc4d2	    0xc745c8000000	               mov dword [rbp - 0x38], 0	      6051	ops.c	FUNCTION_70
0xc4d9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6054	ops.c	FUNCTION_70
0xc4dd	          0x488b00	                    mov rax, qword [rax]	      6054	ops.c	FUNCTION_70
0xc4e0	        0x4883c001	                              add rax, 1	      6054	ops.c	FUNCTION_70
0xc4e4	        0x488945d0	             mov qword [rbp - 0x30], rax	      6054	ops.c	FUNCTION_70
0xc4e8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6057	ops.c	FUNCTION_70	IF_1
0xc4ec	           0xfb600	                   movzx eax, byte [rax]	      6057	ops.c	FUNCTION_70	IF_1
0xc4ef	            0x3c22	                            cmp al, 0x22	      6057	ops.c	FUNCTION_70	IF_1
0xc4f1	            0x7513	                           jne 0x400c546	      6057	ops.c	FUNCTION_70	IF_1
0xc4f3	    0xc745c0010000	               mov dword [rbp - 0x40], 1	      6059	ops.c	FUNCTION_70	IF_1
0xc4fa	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6060	ops.c	FUNCTION_70	IF_1
0xc4fe	        0x4883c001	                              add rax, 1	      6060	ops.c	FUNCTION_70	IF_1
0xc502	        0x488945d0	             mov qword [rbp - 0x30], rax	      6060	ops.c	FUNCTION_70	IF_1
0xc506	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6063	ops.c	FUNCTION_70	IF_2	CALL_1
0xc50a	           0xfb600	                   movzx eax, byte [rax]	      6063	ops.c	FUNCTION_70	IF_2	CALL_1
0xc50d	           0xfb6c0	                           movzx eax, al	      6063	ops.c	FUNCTION_70	IF_2	CALL_1
0xc510	          0x83e841	                           sub eax, 0x41	      6063	ops.c	FUNCTION_70	IF_2	CALL_1
0xc513	          0x83f819	                           cmp eax, 0x19	      6063	ops.c	FUNCTION_70	IF_2	CALL_1
0xc516	            0x7665	                           jbe 0x400c5bd	      6063	ops.c	FUNCTION_70	IF_2	CALL_1
0xc518	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6063	ops.c	FUNCTION_70	IF_2	CALL_1
0xc51c	           0xfb600	                   movzx eax, byte [rax]	      6063	ops.c	FUNCTION_70	IF_2	CALL_1
0xc51f	           0xfb6c0	                           movzx eax, al	      6063	ops.c	FUNCTION_70	IF_2	CALL_1
0xc522	          0x83e861	                           sub eax, 0x61	      6063	ops.c	FUNCTION_70	IF_2	CALL_1
0xc525	          0x83f819	                           cmp eax, 0x19	      6063	ops.c	FUNCTION_70	IF_2	CALL_1
0xc528	            0x7653	                           jbe 0x400c5bd	      6063	ops.c	FUNCTION_70	IF_2	CALL_1
0xc52a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6063	ops.c	FUNCTION_70	IF_2	CALL_1
0xc52e	           0xfb600	                   movzx eax, byte [rax]	      6063	ops.c	FUNCTION_70	IF_2	CALL_1
0xc531	           0xfb6c0	                           movzx eax, al	      6063	ops.c	FUNCTION_70	IF_2	CALL_1
0xc534	          0x83e830	                           sub eax, 0x30	      6063	ops.c	FUNCTION_70	IF_2	CALL_1
0xc537	          0x83f809	                              cmp eax, 9	      6063	ops.c	FUNCTION_70	IF_2	CALL_1
0xc53a	            0x7641	                           jbe 0x400c5bd	      6063	ops.c	FUNCTION_70	IF_2	CALL_1
0xc53c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6063	ops.c	FUNCTION_70	IF_2	CALL_1
0xc540	           0xfb600	                   movzx eax, byte [rax]	      6063	ops.c	FUNCTION_70	IF_2	CALL_1
0xc543	            0x3c2d	                            cmp al, 0x2d	      6063	ops.c	FUNCTION_70	IF_2	CALL_1
0xc545	            0x7436	                            je 0x400c5bd	      6063	ops.c	FUNCTION_70	IF_2	CALL_1
0xc547	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6065	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0xc54b	          0x488b18	                    mov rbx, qword [rax]	      6065	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0xc54e	      0xbf00000000	                              mov edi, 0	      6065	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0xc553	      0xe800000000	                          call 0x400c598	      6065	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0xc558	          0x4889da	                            mov rdx, rbx	      6065	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0xc55b	          0x4889c6	                            mov rsi, rax	      6065	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0xc55e	      0xbf00000000	                              mov edi, 0	      6065	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0xc563	      0xe800000000	                          call 0x400c5a8	      6065	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0xc568	            0x85c0	                           test eax, eax	      6065	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0xc56a	            0x740a	                            je 0x400c5b6	      6065	ops.c	FUNCTION_70	IF_2	IF_3	CALL_3
0xc56c	      0xb801000000	                              mov eax, 1	      6066	ops.c	FUNCTION_70	IF_2	IF_3
0xc571	      0xe9e6030000	                           jmp 0x400c99c	      6066	ops.c	FUNCTION_70	IF_2	IF_3
0xc576	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      6067	ops.c	FUNCTION_70	IF_2
0xc57d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6069	ops.c	FUNCTION_70	CALL_4
0xc581	        0x488d5001	                      lea rdx, [rax + 1]	      6069	ops.c	FUNCTION_70	CALL_4
0xc585	        0x488955d0	             mov qword [rbp - 0x30], rdx	      6069	ops.c	FUNCTION_70	CALL_4
0xc589	           0xfb600	                   movzx eax, byte [rax]	      6069	ops.c	FUNCTION_70	CALL_4
0xc58c	           0xfb6c0	                           movzx eax, al	      6069	ops.c	FUNCTION_70	CALL_4
0xc58f	      0xbe00000000	                              mov esi, 0	      6069	ops.c	FUNCTION_70	CALL_4
0xc594	            0x89c7	                            mov edi, eax	      6069	ops.c	FUNCTION_70	CALL_4
0xc596	      0xe800000000	                          call 0x400c5db	      6069	ops.c	FUNCTION_70	CALL_4
0xc59b	        0x837da400	               cmp dword [rbp - 0x5c], 0	      6070	ops.c	FUNCTION_70	IF_4
0xc59f	            0x7516	                           jne 0x400c5f7	      6070	ops.c	FUNCTION_70	IF_4
0xc5a1	    0x488b05000000	            mov rax, qword [0x0400c5e8] 	      6070	ops.c	FUNCTION_70	IF_4
0xc5a8	          0x488b00	                    mov rax, qword [rax]	      6070	ops.c	FUNCTION_70	IF_4
0xc5ab	          0x4885c0	                           test rax, rax	      6070	ops.c	FUNCTION_70	IF_4
0xc5ae	            0x7407	                            je 0x400c5f7	      6070	ops.c	FUNCTION_70	IF_4
0xc5b0	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      6071	ops.c	FUNCTION_70	IF_4
0xc5b7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6073	ops.c	FUNCTION_70	IF_5
0xc5bb	           0xfb600	                   movzx eax, byte [rax]	      6073	ops.c	FUNCTION_70	IF_5
0xc5be	            0x3c40	                            cmp al, 0x40	      6073	ops.c	FUNCTION_70	IF_5
0xc5c0	            0x7524	                           jne 0x400c626	      6073	ops.c	FUNCTION_70	IF_5
0xc5c2	        0x837da400	               cmp dword [rbp - 0x5c], 0	      6076	ops.c	FUNCTION_70	IF_5	IF_6
0xc5c6	            0x750a	                           jne 0x400c612	      6076	ops.c	FUNCTION_70	IF_5	IF_6
0xc5c8	    0x8b0500000000	            mov eax, dword [0x0400c60e] 	      6076	ops.c	FUNCTION_70	IF_5	IF_6
0xc5ce	            0x85c0	                           test eax, eax	      6076	ops.c	FUNCTION_70	IF_5	IF_6
0xc5d0	            0x7514	                           jne 0x400c626	      6076	ops.c	FUNCTION_70	IF_5	IF_6
0xc5d2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6077	ops.c	FUNCTION_70	IF_5	IF_6
0xc5d6	        0x4883e801	                              sub rax, 1	      6077	ops.c	FUNCTION_70	IF_5	IF_6
0xc5da	           0xfb600	                   movzx eax, byte [rax]	      6077	ops.c	FUNCTION_70	IF_5	IF_6
0xc5dd	           0xfb6c0	                           movzx eax, al	      6077	ops.c	FUNCTION_70	IF_5	IF_6
0xc5e0	    0x890500000000	            mov dword [0x0400c626], eax 	      6077	ops.c	FUNCTION_70	IF_5	IF_6
0xc5e6	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      6080	ops.c	FUNCTION_70
0xc5ed	    0xc745b8640000	           mov dword [rbp - 0x48], 0x64 	      6081	ops.c	FUNCTION_70
0xc5f4	        0x837db000	               cmp dword [rbp - 0x50], 0	      6082	ops.c	FUNCTION_70	IF_7
0xc5f8	     0xf849d010000	                            je 0x400c7db	      6082	ops.c	FUNCTION_70	IF_7
0xc5fe	        0x837dc000	               cmp dword [rbp - 0x40], 0	      6090	ops.c	FUNCTION_70	IF_7	IF_8
0xc602	            0x740e	                            je 0x400c652	      6090	ops.c	FUNCTION_70	IF_7	IF_8
0xc604	    0x488b05000000	            mov rax, qword [0x0400c64b] 	      6091	ops.c	FUNCTION_70	IF_7	IF_8
0xc60b	    0x488905000000	            mov qword [0x0400c652], rax 	      6091	ops.c	FUNCTION_70	IF_7	IF_8
0xc612	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      6092	ops.c	FUNCTION_70	IF_7	CALL_5
0xc615	            0x4898	                                    cdqe	      6092	ops.c	FUNCTION_70	IF_7	CALL_5
0xc617	          0xc1e003	                              shl eax, 3	      6092	ops.c	FUNCTION_70	IF_7	CALL_5
0xc61a	            0x89c7	                            mov edi, eax	      6092	ops.c	FUNCTION_70	IF_7	CALL_5
0xc61c	      0xe800000000	                          call 0x400c661	      6092	ops.c	FUNCTION_70	IF_7	CALL_5
0xc621	        0x488945d8	             mov qword [rbp - 0x28], rax	      6092	ops.c	FUNCTION_70	IF_7	CALL_5
0xc625	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6093	ops.c	FUNCTION_70	IF_7	CALL_7
0xc629	          0x4889c7	                            mov rdi, rax	      6093	ops.c	FUNCTION_70	IF_7	CALL_7
0xc62c	      0xe800000000	                          call 0x400c671	      6093	ops.c	FUNCTION_70	IF_7	CALL_7
0xc631	          0x4889c7	                            mov rdi, rax	      6093	ops.c	FUNCTION_70	IF_7	CALL_7
0xc634	      0xe800000000	                          call 0x400c679	      6093	ops.c	FUNCTION_70	IF_7	CALL_7
0xc639	        0x488945d0	             mov qword [rbp - 0x30], rax	      6093	ops.c	FUNCTION_70	IF_7	CALL_7
0xc63d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6094	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0xc641	      0xba04000000	                              mov edx, 4	      6094	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0xc646	      0xbe00000000	                              mov esi, 0	      6094	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0xc64b	          0x4889c7	                            mov rdi, rax	      6094	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0xc64e	      0xe800000000	                          call 0x400c693	      6094	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0xc653	            0x85c0	                           test eax, eax	      6094	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0xc655	            0x7509	                           jne 0x400c6a0	      6094	ops.c	FUNCTION_70	IF_7	IF_9	CALL_8
0xc657	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	      6095	ops.c	FUNCTION_70	IF_7	IF_9
0xc65e	            0xeb2a	                           jmp 0x400c6ca	      6095	ops.c	FUNCTION_70	IF_7	IF_9
0xc660	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6096	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0xc664	      0xba05000000	                              mov edx, 5	      6096	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0xc669	      0xbe00000000	                              mov esi, 0	      6096	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0xc66e	          0x4889c7	                            mov rdi, rax	      6096	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0xc671	      0xe800000000	                          call 0x400c6b6	      6096	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0xc676	            0x85c0	                           test eax, eax	      6096	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0xc678	            0x7509	                           jne 0x400c6c3	      6096	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10	CALL_9
0xc67a	    0xc745c4020000	               mov dword [rbp - 0x3c], 2	      6097	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10
0xc681	            0xeb07	                           jmp 0x400c6ca	      6097	ops.c	FUNCTION_70	IF_7	ELSE_1	IF_10
0xc683	    0xc745c4010000	               mov dword [rbp - 0x3c], 1	      6099	ops.c	FUNCTION_70	IF_7	ELSE_2
0xc68a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6101	ops.c	FUNCTION_70	IF_7	CALL_11
0xc68e	          0x4889c7	                            mov rdi, rax	      6101	ops.c	FUNCTION_70	IF_7	CALL_11
0xc691	      0xe800000000	                          call 0x400c6d6	      6101	ops.c	FUNCTION_70	IF_7	CALL_11
0xc696	          0x4889c7	                            mov rdi, rax	      6101	ops.c	FUNCTION_70	IF_7	CALL_11
0xc699	      0xe800000000	                          call 0x400c6de	      6101	ops.c	FUNCTION_70	IF_7	CALL_11
0xc69e	        0x488945d0	             mov qword [rbp - 0x30], rax	      6101	ops.c	FUNCTION_70	IF_7	CALL_11
0xc6a2	        0x488d45d0	                   lea rax, [rbp - 0x30]	      6102	ops.c	FUNCTION_70	IF_7	CALL_12
0xc6a6	          0x4889c7	                            mov rdi, rax	      6102	ops.c	FUNCTION_70	IF_7	CALL_12
0xc6a9	      0xe800000000	                          call 0x400c6ee	      6102	ops.c	FUNCTION_70	IF_7	CALL_12
0xc6ae	          0x8945c8	             mov dword [rbp - 0x38], eax	      6102	ops.c	FUNCTION_70	IF_7	CALL_12
0xc6b1	      0xe9e5000000	                           jmp 0x400c7db	      6105	ops.c	FUNCTION_70	WHILE_1	CALL_13
0xc6b6	        0x837db000	               cmp dword [rbp - 0x50], 0	      6108	ops.c	FUNCTION_70	WHILE_1	IF_11
0xc6ba	     0xf84db000000	                            je 0x400c7db	      6108	ops.c	FUNCTION_70	WHILE_1	IF_11
0xc6c0	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6110	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0xc6c3	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      6110	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0xc6c6	     0xf8582000000	                           jne 0x400c78e	      6110	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0xc6cc	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      6113	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	CALL_14
0xc6cf	             0x1c0	                            add eax, eax	      6113	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	CALL_14
0xc6d1	            0x4898	                                    cdqe	      6113	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	CALL_14
0xc6d3	          0xc1e003	                              shl eax, 3	      6113	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	CALL_14
0xc6d6	            0x89c7	                            mov edi, eax	      6112	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0xc6d8	      0xe800000000	                          call 0x400c71d	      6112	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0xc6dd	        0x488945e0	             mov qword [rbp - 0x20], rax	      6112	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0xc6e1	      0x48837de000	               cmp qword [rbp - 0x20], 0	      6115	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	IF_13
0xc6e6	            0x750c	                           jne 0x400c734	      6115	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	IF_13
0xc6e8	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      6117	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	IF_13
0xc6ef	      0xe9e0000000	                           jmp 0x400c814	      6118	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	IF_13
0xc6f4	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      6120	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0xc6fb	            0xeb32	                           jmp 0x400c76f	      6120	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0xc6fd	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6121	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0xc700	            0x4898	                                    cdqe	      6121	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0xc702	    0x488d14c50000	                        lea rdx, [rax*8]	      6121	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0xc70a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6121	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0xc70e	          0x4801c2	                            add rdx, rax	      6121	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0xc711	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6121	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0xc714	            0x4898	                                    cdqe	      6121	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0xc716	    0x488d0cc50000	                        lea rcx, [rax*8]	      6121	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0xc71e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6121	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0xc722	          0x4801c8	                            add rax, rcx	      6121	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0xc725	          0x488b00	                    mov rax, qword [rax]	      6121	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0xc728	          0x488902	                    mov qword [rdx], rax	      6121	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0xc72b	        0x8345bc01	               add dword [rbp - 0x44], 1	      6120	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0xc72f	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6120	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0xc732	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	      6120	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0xc735	            0x7cc6	                            jl 0x400c73d	      6120	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	FOR_1
0xc737	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6122	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	CALL_15
0xc73b	          0x4889c7	                            mov rdi, rax	      6122	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	CALL_15
0xc73e	      0xe800000000	                          call 0x400c783	      6122	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12	CALL_15
0xc743	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6123	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0xc747	        0x488945d8	             mov qword [rbp - 0x28], rax	      6123	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0xc74b	          0xd165b8	               shl dword [rbp - 0x48], 1	      6124	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_12
0xc74e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6126	ops.c	FUNCTION_70	WHILE_1	IF_11	CALL_16
0xc752	      0xba01000000	                              mov edx, 1	      6126	ops.c	FUNCTION_70	WHILE_1	IF_11	CALL_16
0xc757	      0xbe01000000	                              mov esi, 1	      6126	ops.c	FUNCTION_70	WHILE_1	IF_11	CALL_16
0xc75c	          0x4889c7	                            mov rdi, rax	      6126	ops.c	FUNCTION_70	WHILE_1	IF_11	CALL_16
0xc75f	      0xe800000000	                          call 0x400c7a4	      6126	ops.c	FUNCTION_70	WHILE_1	IF_11	CALL_16
0xc764	        0x488945d0	             mov qword [rbp - 0x30], rax	      6126	ops.c	FUNCTION_70	WHILE_1	IF_11	CALL_16
0xc768	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6127	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0xc76c	          0x4885c0	                           test rax, rax	      6127	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0xc76f	            0x7423	                            je 0x400c7d4	      6127	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0xc771	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6128	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0xc774	          0x8d5001	                      lea edx, [rax + 1]	      6128	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0xc777	          0x8955b4	             mov dword [rbp - 0x4c], edx	      6128	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0xc77a	            0x4898	                                    cdqe	      6128	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0xc77c	    0x488d14c50000	                        lea rdx, [rax*8]	      6128	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0xc784	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6128	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0xc788	          0x4801c2	                            add rdx, rax	      6128	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0xc78b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6128	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0xc78f	          0x488902	                    mov qword [rdx], rax	      6128	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0xc792	            0xeb07	                           jmp 0x400c7db	      6128	ops.c	FUNCTION_70	WHILE_1	IF_11	IF_14
0xc794	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      6131	ops.c	FUNCTION_70	WHILE_1	IF_11	ELSE_3
0xc79b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6105	ops.c	FUNCTION_70	WHILE_1	CALL_13
0xc79f	          0x4889c7	                            mov rdi, rax	      6105	ops.c	FUNCTION_70	WHILE_1	CALL_13
0xc7a2	      0xe800000000	                          call 0x400c7e7	      6105	ops.c	FUNCTION_70	WHILE_1	CALL_13
0xc7a7	          0x8945cc	             mov dword [rbp - 0x34], eax	      6105	ops.c	FUNCTION_70	WHILE_1	CALL_13
0xc7aa	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      6105	ops.c	FUNCTION_70	WHILE_1	CALL_13
0xc7ae	            0x7524	                           jne 0x400c814	      6105	ops.c	FUNCTION_70	WHILE_1	CALL_13
0xc7b0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6106	ops.c	FUNCTION_70	WHILE_1
0xc7b4	          0x488b00	                    mov rax, qword [rax]	      6106	ops.c	FUNCTION_70	WHILE_1
0xc7b7	           0xfb600	                   movzx eax, byte [rax]	      6106	ops.c	FUNCTION_70	WHILE_1
0xc7ba	            0x3c09	                               cmp al, 9	      6106	ops.c	FUNCTION_70	WHILE_1
0xc7bc	     0xf84f4feffff	                            je 0x400c6f6	      6106	ops.c	FUNCTION_70	WHILE_1
0xc7c2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6106	ops.c	FUNCTION_70	WHILE_1
0xc7c6	          0x488b00	                    mov rax, qword [rax]	      6106	ops.c	FUNCTION_70	WHILE_1
0xc7c9	           0xfb600	                   movzx eax, byte [rax]	      6106	ops.c	FUNCTION_70	WHILE_1
0xc7cc	            0x3c3c	                            cmp al, 0x3c	      6106	ops.c	FUNCTION_70	WHILE_1
0xc7ce	     0xf84e2feffff	                            je 0x400c6f6	      6106	ops.c	FUNCTION_70	WHILE_1
0xc7d4	        0x837db000	               cmp dword [rbp - 0x50], 0	      6135	ops.c	FUNCTION_70	ELSE_3	IF_15
0xc7d8	     0xf843b010000	                            je 0x400c959	      6135	ops.c	FUNCTION_70	ELSE_3	IF_15
0xc7de	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      6138	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0xc7e5	            0xeb26	                           jmp 0x400c84d	      6138	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0xc7e7	    0x488b05000000	            mov rax, qword [0x0400c82e] 	      6139	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_17
0xc7ee	          0x488b00	                    mov rax, qword [rax]	      6139	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_17
0xc7f1	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      6139	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_17
0xc7f4	          0x4863d2	                         movsxd rdx, edx	      6139	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_17
0xc7f7	        0x48c1e203	                              shl rdx, 3	      6139	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_17
0xc7fb	          0x4801d0	                            add rax, rdx	      6139	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_17
0xc7fe	          0x488b00	                    mov rax, qword [rax]	      6139	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_17
0xc801	          0x4889c7	                            mov rdi, rax	      6139	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_17
0xc804	      0xe800000000	                          call 0x400c849	      6139	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_17
0xc809	        0x8345bc01	               add dword [rbp - 0x44], 1	      6138	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0xc80d	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6138	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0xc810	          0x4863d0	                         movsxd rdx, eax	      6138	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0xc813	    0x488b05000000	            mov rax, qword [0x0400c85a] 	      6138	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0xc81a	        0x488b4008	                mov rax, qword [rax + 8]	      6138	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0xc81e	          0x4839c2	                            cmp rdx, rax	      6138	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0xc821	            0x7cc4	                            jl 0x400c827	      6138	ops.c	FUNCTION_70	ELSE_3	IF_15	FOR_2
0xc823	    0x488b05000000	            mov rax, qword [0x0400c86a] 	      6140	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_18
0xc82a	          0x488b00	                    mov rax, qword [rax]	      6140	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_18
0xc82d	          0x4889c7	                            mov rdi, rax	      6140	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_18
0xc830	      0xe800000000	                          call 0x400c875	      6140	ops.c	FUNCTION_70	ELSE_3	IF_15	CALL_18
0xc835	    0x488b05000000	            mov rax, qword [0x0400c87c] 	      6142	ops.c	FUNCTION_70	ELSE_3	IF_15
0xc83c	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      6142	ops.c	FUNCTION_70	ELSE_3	IF_15
0xc83f	          0x885010	               mov byte [rax + 0x10], dl	      6142	ops.c	FUNCTION_70	ELSE_3	IF_15
0xc842	    0x488b05000000	            mov rax, qword [0x0400c889] 	      6143	ops.c	FUNCTION_70	ELSE_3	IF_15
0xc849	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      6143	ops.c	FUNCTION_70	ELSE_3	IF_15
0xc84c	          0x895014	             mov dword [rax + 0x14], edx	      6143	ops.c	FUNCTION_70	ELSE_3	IF_15
0xc84f	    0x488b05000000	            mov rax, qword [0x0400c896] 	      6144	ops.c	FUNCTION_70	ELSE_3	IF_15
0xc856	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      6144	ops.c	FUNCTION_70	ELSE_3	IF_15
0xc859	          0x4863d2	                         movsxd rdx, edx	      6144	ops.c	FUNCTION_70	ELSE_3	IF_15
0xc85c	        0x48895008	                mov qword [rax + 8], rdx	      6144	ops.c	FUNCTION_70	ELSE_3	IF_15
0xc860	    0x488b05000000	            mov rax, qword [0x0400c8a7] 	      6145	ops.c	FUNCTION_70	ELSE_3	IF_15
0xc867	    0x48c740180000	               mov qword [rax + 0x18], 0	      6145	ops.c	FUNCTION_70	ELSE_3	IF_15
0xc86f	        0x837db400	               cmp dword [rbp - 0x4c], 0	      6146	ops.c	FUNCTION_70	ELSE_3	IF_15	IF_16
0xc873	            0x7513	                           jne 0x400c8c8	      6146	ops.c	FUNCTION_70	ELSE_3	IF_15	IF_16
0xc875	    0x488b05000000	            mov rax, qword [0x0400c8bc] 	      6148	ops.c	FUNCTION_70	ELSE_3	IF_15	IF_16
0xc87c	    0x48c700000000	                      mov qword [rax], 0	      6148	ops.c	FUNCTION_70	ELSE_3	IF_15	IF_16
0xc883	      0xe9c5000000	                           jmp 0x400c98d	      6148	ops.c	FUNCTION_70	ELSE_3	IF_15	IF_16
0xc888	    0x488b1d000000	            mov rbx, qword [0x0400c8cf] 	      6153	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4
0xc88f	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6154	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	CALL_19
0xc892	            0x4898	                                    cdqe	      6154	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	CALL_19
0xc894	          0xc1e003	                              shl eax, 3	      6154	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	CALL_19
0xc897	            0x89c7	                            mov edi, eax	      6154	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	CALL_19
0xc899	      0xe800000000	                          call 0x400c8de	      6154	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	CALL_19
0xc89e	          0x488903	                    mov qword [rbx], rax	      6153	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4
0xc8a1	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      6155	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3
0xc8a8	            0xeb65	                           jmp 0x400c94f	      6155	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3
0xc8aa	    0x488b05000000	            mov rax, qword [0x0400c8f1] 	      6157	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	IF_17
0xc8b1	          0x488b00	                    mov rax, qword [rax]	      6157	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	IF_17
0xc8b4	          0x4885c0	                           test rax, rax	      6157	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	IF_17
0xc8b7	            0x7521	                           jne 0x400c91a	      6157	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	IF_17
0xc8b9	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6158	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	CALL_20
0xc8bc	            0x4898	                                    cdqe	      6158	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	CALL_20
0xc8be	    0x488d14c50000	                        lea rdx, [rax*8]	      6158	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	CALL_20
0xc8c6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6158	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	CALL_20
0xc8ca	          0x4801d0	                            add rax, rdx	      6158	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	CALL_20
0xc8cd	          0x488b00	                    mov rax, qword [rax]	      6158	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	CALL_20
0xc8d0	          0x4889c7	                            mov rdi, rax	      6158	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	CALL_20
0xc8d3	      0xe800000000	                          call 0x400c918	      6158	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	CALL_20
0xc8d8	            0xeb31	                           jmp 0x400c94b	      6158	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	CALL_20
0xc8da	    0x488b05000000	            mov rax, qword [0x0400c921] 	      6160	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	ELSE_5
0xc8e1	          0x488b00	                    mov rax, qword [rax]	      6160	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	ELSE_5
0xc8e4	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      6160	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	ELSE_5
0xc8e7	          0x4863d2	                         movsxd rdx, edx	      6160	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	ELSE_5
0xc8ea	        0x48c1e203	                              shl rdx, 3	      6160	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	ELSE_5
0xc8ee	          0x4801c2	                            add rdx, rax	      6160	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	ELSE_5
0xc8f1	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6160	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	ELSE_5
0xc8f4	            0x4898	                                    cdqe	      6160	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	ELSE_5
0xc8f6	    0x488d0cc50000	                        lea rcx, [rax*8]	      6160	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	ELSE_5
0xc8fe	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6160	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	ELSE_5
0xc902	          0x4801c8	                            add rax, rcx	      6160	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	ELSE_5
0xc905	          0x488b00	                    mov rax, qword [rax]	      6160	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	ELSE_5
0xc908	          0x488902	                    mov qword [rdx], rax	      6160	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3	ELSE_5
0xc90b	        0x8345bc01	               add dword [rbp - 0x44], 1	      6155	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3
0xc90f	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6155	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3
0xc912	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      6155	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3
0xc915	            0x7c93	                            jl 0x400c8ea	      6155	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3
0xc917	            0xeb34	                           jmp 0x400c98d	      6155	ops.c	FUNCTION_70	ELSE_3	IF_15	ELSE_4	FOR_3
0xc919	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      6167	ops.c	FUNCTION_70	ELSE_6	FOR_4
0xc920	            0xeb23	                           jmp 0x400c985	      6167	ops.c	FUNCTION_70	ELSE_6	FOR_4
0xc922	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6168	ops.c	FUNCTION_70	ELSE_6	CALL_21
0xc925	            0x4898	                                    cdqe	      6168	ops.c	FUNCTION_70	ELSE_6	CALL_21
0xc927	    0x488d14c50000	                        lea rdx, [rax*8]	      6168	ops.c	FUNCTION_70	ELSE_6	CALL_21
0xc92f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6168	ops.c	FUNCTION_70	ELSE_6	CALL_21
0xc933	          0x4801d0	                            add rax, rdx	      6168	ops.c	FUNCTION_70	ELSE_6	CALL_21
0xc936	          0x488b00	                    mov rax, qword [rax]	      6168	ops.c	FUNCTION_70	ELSE_6	CALL_21
0xc939	          0x4889c7	                            mov rdi, rax	      6168	ops.c	FUNCTION_70	ELSE_6	CALL_21
0xc93c	      0xe800000000	                          call 0x400c981	      6168	ops.c	FUNCTION_70	ELSE_6	CALL_21
0xc941	        0x8345bc01	               add dword [rbp - 0x44], 1	      6167	ops.c	FUNCTION_70	ELSE_6	FOR_4
0xc945	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6167	ops.c	FUNCTION_70	ELSE_6	FOR_4
0xc948	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	      6167	ops.c	FUNCTION_70	ELSE_6	FOR_4
0xc94b	            0x7cd5	                            jl 0x400c962	      6167	ops.c	FUNCTION_70	ELSE_6	FOR_4
0xc94d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6170	ops.c	FUNCTION_70	CALL_22
0xc951	          0x4889c7	                            mov rdi, rax	      6170	ops.c	FUNCTION_70	CALL_22
0xc954	      0xe800000000	                          call 0x400c999	      6170	ops.c	FUNCTION_70	CALL_22
0xc959	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6172	ops.c	FUNCTION_70
0xc95c	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      6173	ops.c	FUNCTION_70
0xc960	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6173	ops.c	FUNCTION_70
0xc969	            0x7405	                            je 0x400c9b0	      6173	ops.c	FUNCTION_70
0xc96b	      0xe800000000	                          call 0x400c9b0	      6173	ops.c	FUNCTION_70
0xc970	        0x4883c458	                           add rsp, 0x58	      6173	ops.c	FUNCTION_70
0xc974	              0x5b	                                 pop rbx	      6173	ops.c	FUNCTION_70
0xc975	              0x5d	                                 pop rbp	      6173	ops.c	FUNCTION_70
0xc976	              0xc3	                                     ret	      6173	ops.c	FUNCTION_70
finish_write_reg	CALL,1:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,1	16
0xde51	              0x55	                                push rbp	      6921	ops.c	FUNCTION_84
0xde52	          0x4889e5	                            mov rbp, rsp	      6921	ops.c	FUNCTION_84
0xde55	        0x4883ec20	                           sub rsp, 0x20	      6921	ops.c	FUNCTION_84
0xde59	          0x897dfc	                mov dword [rbp - 4], edi	      6921	ops.c	FUNCTION_84
0xde5c	        0x488975f0	             mov qword [rbp - 0x10], rsi	      6921	ops.c	FUNCTION_84
0xde60	        0x488955e8	             mov qword [rbp - 0x18], rdx	      6921	ops.c	FUNCTION_84
0xde64	      0xe878faffff	              call sym.may_set_selection	      6924	ops.c	FUNCTION_84	CALL_1
0xde69	        0x837dfc22	               cmp dword [rbp - 4], 0x22	      6928	ops.c	FUNCTION_84	IF_1
0xde6d	            0x740b	                            je 0x400deba	      6928	ops.c	FUNCTION_84	IF_1
0xde6f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6929	ops.c	FUNCTION_84	IF_1
0xde73	    0x488905000000	            mov qword [0x0400deba], rax 	      6929	ops.c	FUNCTION_84	IF_1
0xde7a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6930	ops.c	FUNCTION_84
0xde7e	    0x488905000000	            mov qword [0x0400dec5], rax 	      6930	ops.c	FUNCTION_84
0xde85	              0x90	                                     nop	      6931	ops.c	FUNCTION_84
0xde86	              0xc9	                                   leave	      6931	ops.c	FUNCTION_84
0xde87	              0xc3	                                     ret	      6931	ops.c	FUNCTION_84
write_viminfo_registers	CALL,20:FOR,4:SWITCH,1:functions,0:WHILE,0:DO,0:ELSE,2:IF,15	308
0xccfa	              0x55	                                push rbp	      6267	ops.c	FUNCTION_72
0xccfb	          0x4889e5	                            mov rbp, rsp	      6267	ops.c	FUNCTION_72
0xccfe	              0x53	                                push rbx	      6267	ops.c	FUNCTION_72
0xccff	        0x4883ec58	                           sub rsp, 0x58	      6267	ops.c	FUNCTION_72
0xcd03	        0x48897da8	             mov qword [rbp - 0x58], rdi	      6267	ops.c	FUNCTION_72
0xcd07	      0xbf00000000	                              mov edi, 0	      6277	ops.c	FUNCTION_72	CALL_2
0xcd0c	      0xe800000000	                          call 0x400cd51	      6277	ops.c	FUNCTION_72	CALL_2
0xcd11	          0x4889c2	                            mov rdx, rax	      6277	ops.c	FUNCTION_72	CALL_2
0xcd14	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6277	ops.c	FUNCTION_72	CALL_2
0xcd18	          0x4889c6	                            mov rsi, rax	      6277	ops.c	FUNCTION_72	CALL_2
0xcd1b	          0x4889d7	                            mov rdi, rdx	      6277	ops.c	FUNCTION_72	CALL_2
0xcd1e	      0xe800000000	                          call 0x400cd63	      6277	ops.c	FUNCTION_72	CALL_2
0xcd23	      0xbf3c000000	                           mov edi, 0x3c	      6280	ops.c	FUNCTION_72	CALL_3
0xcd28	      0xe800000000	                          call 0x400cd6d	      6280	ops.c	FUNCTION_72	CALL_3
0xcd2d	          0x8945c8	             mov dword [rbp - 0x38], eax	      6280	ops.c	FUNCTION_72	CALL_3
0xcd30	        0x837dc800	               cmp dword [rbp - 0x38], 0	      6281	ops.c	FUNCTION_72	IF_1
0xcd34	            0x790d	                           jns 0x400cd83	      6281	ops.c	FUNCTION_72	IF_1
0xcd36	      0xbf22000000	                           mov edi, 0x22	      6282	ops.c	FUNCTION_72	CALL_4
0xcd3b	      0xe800000000	                          call 0x400cd80	      6282	ops.c	FUNCTION_72	CALL_4
0xcd40	          0x8945c8	             mov dword [rbp - 0x38], eax	      6282	ops.c	FUNCTION_72	CALL_4
0xcd43	        0x837dc800	               cmp dword [rbp - 0x38], 0	      6283	ops.c	FUNCTION_72	IF_2
0xcd47	     0xf8411040000	                            je 0x400d19e	      6283	ops.c	FUNCTION_72	IF_2
0xcd4d	      0xbf73000000	                           mov edi, 0x73	      6285	ops.c	FUNCTION_72	CALL_5
0xcd52	      0xe800000000	                          call 0x400cd97	      6285	ops.c	FUNCTION_72	CALL_5
0xcd57	          0x8945d4	             mov dword [rbp - 0x2c], eax	      6285	ops.c	FUNCTION_72	CALL_5
0xcd5a	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      6286	ops.c	FUNCTION_72	IF_3
0xcd5e	     0xf84fd030000	                            je 0x400d1a1	      6286	ops.c	FUNCTION_72	IF_3
0xcd64	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      6289	ops.c	FUNCTION_72	FOR_1
0xcd6b	      0xe9e2030000	                           jmp 0x400d192	      6289	ops.c	FUNCTION_72	FOR_1
0xcd70	        0x837dbc25	           cmp dword [rbp - 0x44], 0x25 	      6293	ops.c	FUNCTION_72	FOR_1	IF_4
0xcd74	     0xf84ca030000	                            je 0x400d184	      6293	ops.c	FUNCTION_72	FOR_1	IF_4
0xcd7a	        0x837dbc26	           cmp dword [rbp - 0x44], 0x26 	      6293	ops.c	FUNCTION_72	FOR_1	IF_4
0xcd7e	     0xf84c0030000	                            je 0x400d184	      6293	ops.c	FUNCTION_72	FOR_1	IF_4
0xcd84	    0x488b05000000	            mov rax, qword [0x0400cdcb] 	      6303	ops.c	FUNCTION_72	FOR_1	IF_6
0xcd8b	          0x4885c0	                           test rax, rax	      6303	ops.c	FUNCTION_72	FOR_1	IF_6
0xcd8e	            0x747c	                            je 0x400ce4c	      6303	ops.c	FUNCTION_72	FOR_1	IF_6
0xcd90	    0x488b05000000	            mov rax, qword [0x0400cdd7] 	      6304	ops.c	FUNCTION_72	FOR_1	IF_6
0xcd97	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      6304	ops.c	FUNCTION_72	FOR_1	IF_6
0xcd9a	          0x4863d2	                         movsxd rdx, edx	      6304	ops.c	FUNCTION_72	FOR_1	IF_6
0xcd9d	        0x48c1e205	                              shl rdx, 5	      6304	ops.c	FUNCTION_72	FOR_1	IF_6
0xcda1	          0x4801d0	                            add rax, rdx	      6304	ops.c	FUNCTION_72	FOR_1	IF_6
0xcda4	          0x488b00	                    mov rax, qword [rax]	      6304	ops.c	FUNCTION_72	FOR_1	IF_6
0xcda7	          0x4885c0	                           test rax, rax	      6304	ops.c	FUNCTION_72	FOR_1	IF_6
0xcdaa	            0x7460	                            je 0x400ce4c	      6304	ops.c	FUNCTION_72	FOR_1	IF_6
0xcdac	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6305	ops.c	FUNCTION_72	FOR_1	IF_6
0xcdaf	            0x4898	                                    cdqe	      6305	ops.c	FUNCTION_72	FOR_1	IF_6
0xcdb1	        0x48c1e005	                              shl rax, 5	      6305	ops.c	FUNCTION_72	FOR_1	IF_6
0xcdb5	    0x480500000000	                              add rax, 0	      6305	ops.c	FUNCTION_72	FOR_1	IF_6
0xcdbb	          0x488b00	                    mov rax, qword [rax]	      6305	ops.c	FUNCTION_72	FOR_1	IF_6
0xcdbe	          0x4885c0	                           test rax, rax	      6305	ops.c	FUNCTION_72	FOR_1	IF_6
0xcdc1	            0x742f	                            je 0x400ce32	      6305	ops.c	FUNCTION_72	FOR_1	IF_6
0xcdc3	    0x488b05000000	            mov rax, qword [0x0400ce0a] 	      6306	ops.c	FUNCTION_72	FOR_1	IF_6
0xcdca	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      6306	ops.c	FUNCTION_72	FOR_1	IF_6
0xcdcd	          0x4863d2	                         movsxd rdx, edx	      6306	ops.c	FUNCTION_72	FOR_1	IF_6
0xcdd0	        0x48c1e205	                              shl rdx, 5	      6306	ops.c	FUNCTION_72	FOR_1	IF_6
0xcdd4	          0x4801d0	                            add rax, rdx	      6306	ops.c	FUNCTION_72	FOR_1	IF_6
0xcdd7	        0x488b5018	            mov rdx, qword [rax + 0x18] 	      6306	ops.c	FUNCTION_72	FOR_1	IF_6
0xcddb	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6306	ops.c	FUNCTION_72	FOR_1	IF_6
0xcdde	            0x4898	                                    cdqe	      6306	ops.c	FUNCTION_72	FOR_1	IF_6
0xcde0	        0x48c1e005	                              shl rax, 5	      6306	ops.c	FUNCTION_72	FOR_1	IF_6
0xcde4	    0x480500000000	                              add rax, 0	      6306	ops.c	FUNCTION_72	FOR_1	IF_6
0xcdea	          0x488b00	                    mov rax, qword [rax]	      6306	ops.c	FUNCTION_72	FOR_1	IF_6
0xcded	          0x4839c2	                            cmp rdx, rax	      6305	ops.c	FUNCTION_72	FOR_1	IF_6
0xcdf0	            0x7e1a	                           jle 0x400ce4c	      6305	ops.c	FUNCTION_72	FOR_1	IF_6
0xcdf2	    0x488b05000000	            mov rax, qword [0x0400ce39] 	      6307	ops.c	FUNCTION_72	FOR_1	IF_6
0xcdf9	          0x8b55bc	             mov edx, dword [rbp - 0x44]	      6307	ops.c	FUNCTION_72	FOR_1	IF_6
0xcdfc	          0x4863d2	                         movsxd rdx, edx	      6307	ops.c	FUNCTION_72	FOR_1	IF_6
0xcdff	        0x48c1e205	                              shl rdx, 5	      6307	ops.c	FUNCTION_72	FOR_1	IF_6
0xce03	          0x4801d0	                            add rax, rdx	      6307	ops.c	FUNCTION_72	FOR_1	IF_6
0xce06	        0x488945e8	             mov qword [rbp - 0x18], rax	      6307	ops.c	FUNCTION_72	FOR_1	IF_6
0xce0a	            0xeb2e	                           jmp 0x400ce7a	      6307	ops.c	FUNCTION_72	FOR_1	IF_6
0xce0c	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6308	ops.c	FUNCTION_72	FOR_1	ELSE_1	IF_7
0xce0f	            0x4898	                                    cdqe	      6308	ops.c	FUNCTION_72	FOR_1	ELSE_1	IF_7
0xce11	        0x48c1e005	                              shl rax, 5	      6308	ops.c	FUNCTION_72	FOR_1	ELSE_1	IF_7
0xce15	    0x480500000000	                              add rax, 0	      6308	ops.c	FUNCTION_72	FOR_1	ELSE_1	IF_7
0xce1b	          0x488b00	                    mov rax, qword [rax]	      6308	ops.c	FUNCTION_72	FOR_1	ELSE_1	IF_7
0xce1e	          0x4885c0	                           test rax, rax	      6308	ops.c	FUNCTION_72	FOR_1	ELSE_1	IF_7
0xce21	     0xf8420030000	                            je 0x400d187	      6308	ops.c	FUNCTION_72	FOR_1	ELSE_1	IF_7
0xce27	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6311	ops.c	FUNCTION_72	FOR_1	ELSE_2
0xce2a	            0x4898	                                    cdqe	      6311	ops.c	FUNCTION_72	FOR_1	ELSE_2
0xce2c	        0x48c1e005	                              shl rax, 5	      6311	ops.c	FUNCTION_72	FOR_1	ELSE_2
0xce30	    0x480500000000	                              add rax, 0	      6311	ops.c	FUNCTION_72	FOR_1	ELSE_2
0xce36	        0x488945e8	             mov qword [rbp - 0x18], rax	      6311	ops.c	FUNCTION_72	FOR_1	ELSE_2
0xce3a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6314	ops.c	FUNCTION_72	FOR_1
0xce3e	        0x488b4008	                mov rax, qword [rax + 8]	      6314	ops.c	FUNCTION_72	FOR_1
0xce42	          0x8945c4	             mov dword [rbp - 0x3c], eax	      6314	ops.c	FUNCTION_72	FOR_1
0xce45	        0x837dc400	               cmp dword [rbp - 0x3c], 0	      6315	ops.c	FUNCTION_72	FOR_1	IF_8
0xce49	     0xf84fb020000	                            je 0x400d18a	      6315	ops.c	FUNCTION_72	FOR_1	IF_8
0xce4f	        0x837dc401	               cmp dword [rbp - 0x3c], 1	      6316	ops.c	FUNCTION_72	FOR_1	IF_8
0xce53	            0x7521	                           jne 0x400ceb6	      6316	ops.c	FUNCTION_72	FOR_1	IF_8
0xce55	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6316	ops.c	FUNCTION_72	FOR_1	IF_8
0xce59	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6316	ops.c	FUNCTION_72	FOR_1	IF_8
0xce5d	            0x84c0	                             test al, al	      6316	ops.c	FUNCTION_72	FOR_1	IF_8
0xce5f	            0x7515	                           jne 0x400ceb6	      6316	ops.c	FUNCTION_72	FOR_1	IF_8
0xce61	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6317	ops.c	FUNCTION_72	FOR_1	IF_8
0xce65	          0x488b00	                    mov rax, qword [rax]	      6317	ops.c	FUNCTION_72	FOR_1	IF_8
0xce68	          0x488b00	                    mov rax, qword [rax]	      6317	ops.c	FUNCTION_72	FOR_1	IF_8
0xce6b	           0xfb600	                   movzx eax, byte [rax]	      6317	ops.c	FUNCTION_72	FOR_1	IF_8
0xce6e	            0x84c0	                             test al, al	      6317	ops.c	FUNCTION_72	FOR_1	IF_8
0xce70	     0xf84d4020000	                            je 0x400d18a	      6317	ops.c	FUNCTION_72	FOR_1	IF_8
0xce76	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      6320	ops.c	FUNCTION_72	FOR_1	IF_9
0xce7a	            0x7e57	                           jle 0x400cf13	      6320	ops.c	FUNCTION_72	FOR_1	IF_9
0xce7c	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      6323	ops.c	FUNCTION_72	FOR_1	IF_9
0xce84	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      6324	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0xce8b	            0xeb2b	                           jmp 0x400cef8	      6324	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0xce8d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6325	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0xce91	          0x488b00	                    mov rax, qword [rax]	      6325	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0xce94	          0x8b55c0	             mov edx, dword [rbp - 0x40]	      6325	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0xce97	          0x4863d2	                         movsxd rdx, edx	      6325	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0xce9a	        0x48c1e203	                              shl rdx, 3	      6325	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0xce9e	          0x4801d0	                            add rax, rdx	      6325	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0xcea1	          0x488b00	                    mov rax, qword [rax]	      6325	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0xcea4	          0x4889c7	                            mov rdi, rax	      6325	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0xcea7	      0xe800000000	                          call 0x400ceec	      6325	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0xceac	        0x4883c001	                              add rax, 1	      6325	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0xceb0	        0x480145e0	            add qword [rbp - 0x20], rax 	      6325	ops.c	FUNCTION_72	FOR_1	IF_9	CALL_6
0xceb4	        0x8345c001	               add dword [rbp - 0x40], 1	      6324	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0xceb8	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6324	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0xcebb	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	      6324	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0xcebe	            0x7ccd	                            jl 0x400cecd	      6324	ops.c	FUNCTION_72	FOR_1	IF_9	FOR_2
0xcec0	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      6326	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0xcec3	            0x4898	                                    cdqe	      6326	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0xcec5	        0x48c1e00a	                            shl rax, 0xa	      6326	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0xcec9	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      6326	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0xcecd	     0xf8c7a020000	                            jl 0x400d18d	      6326	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0xced3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6330	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0xced7	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6330	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0xcedb	           0xfb6c0	                           movzx eax, al	      6330	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0xcede	          0x83f801	                              cmp eax, 1	      6330	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0xcee1	            0x740b	                            je 0x400cf2e	      6330	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0xcee3	          0x83f802	                              cmp eax, 2	      6330	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0xcee6	            0x741a	                            je 0x400cf42	      6330	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0xcee8	            0x85c0	                           test eax, eax	      6330	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0xceea	            0x740c	                            je 0x400cf38	      6330	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0xceec	            0xeb1e	                           jmp 0x400cf4c	      6330	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0xceee	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      6333	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0xcef6	            0xeb5d	                           jmp 0x400cf95	      6334	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0xcef8	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      6336	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0xcf00	            0xeb53	                           jmp 0x400cf95	      6337	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0xcf02	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      6339	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0xcf0a	            0xeb49	                           jmp 0x400cf95	      6340	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0xcf0c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6343	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0xcf10	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6343	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0xcf14	           0xfb6d8	                           movzx ebx, al	      6342	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_8
0xcf17	      0xbf00000000	                              mov edi, 0	      6342	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_8
0xcf1c	      0xe800000000	                          call 0x400cf61	      6342	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_8
0xcf21	          0x4889c1	                            mov rcx, rax	      6342	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_8
0xcf24	    0x488b05000000	            mov rax, qword [0x0400cf6b] 	      6342	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_8
0xcf2b	            0x89da	                            mov edx, ebx	      6342	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_8
0xcf2d	          0x4889ce	                            mov rsi, rcx	      6342	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_8
0xcf30	          0x4889c7	                            mov rdi, rax	      6342	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_8
0xcf33	      0xb800000000	                              mov eax, 0	      6342	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_8
0xcf38	      0xe800000000	                          call 0x400cf7d	      6342	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_8
0xcf3d	    0x488b05000000	            mov rax, qword [0x0400cf84] 	      6344	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_9
0xcf44	          0x4889c7	                            mov rdi, rax	      6344	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_9
0xcf47	      0xe800000000	                          call 0x400cf8c	      6344	ops.c	FUNCTION_72	FOR_1	SWITCH_1	CALL_9
0xcf4c	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      6345	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0xcf54	              0x90	                                     nop	      6346	ops.c	FUNCTION_72	FOR_1	SWITCH_1
0xcf55	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6348	ops.c	FUNCTION_72	FOR_1	IF_11
0xcf58	            0x4898	                                    cdqe	      6348	ops.c	FUNCTION_72	FOR_1	IF_11
0xcf5a	        0x48c1e005	                              shl rax, 5	      6348	ops.c	FUNCTION_72	FOR_1	IF_11
0xcf5e	    0x488d90000000	                          lea rdx, [rax]	      6348	ops.c	FUNCTION_72	FOR_1	IF_11
0xcf65	    0x488b05000000	            mov rax, qword [0x0400cfac] 	      6348	ops.c	FUNCTION_72	FOR_1	IF_11
0xcf6c	          0x4839c2	                            cmp rdx, rax	      6348	ops.c	FUNCTION_72	FOR_1	IF_11
0xcf6f	            0x7511	                           jne 0x400cfc2	      6348	ops.c	FUNCTION_72	FOR_1	IF_11
0xcf71	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6349	ops.c	FUNCTION_72	FOR_1	CALL_10
0xcf75	          0x4889c6	                            mov rsi, rax	      6349	ops.c	FUNCTION_72	FOR_1	CALL_10
0xcf78	      0xbf22000000	                           mov edi, 0x22	      6349	ops.c	FUNCTION_72	FOR_1	CALL_10
0xcf7d	      0xe800000000	                          call 0x400cfc2	      6349	ops.c	FUNCTION_72	FOR_1	CALL_10
0xcf82	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6350	ops.c	FUNCTION_72	FOR_1	CALL_11
0xcf85	            0x89c7	                            mov edi, eax	      6350	ops.c	FUNCTION_72	FOR_1	CALL_11
0xcf87	      0xe800000000	                          call 0x400cfcc	      6350	ops.c	FUNCTION_72	FOR_1	CALL_11
0xcf8c	          0x8845bb	               mov byte [rbp - 0x45], al	      6350	ops.c	FUNCTION_72	FOR_1	CALL_11
0xcf8f	         0xfb655bb	            movzx edx, byte [rbp - 0x45]	      6351	ops.c	FUNCTION_72	FOR_1	CALL_12
0xcf93	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6351	ops.c	FUNCTION_72	FOR_1	CALL_12
0xcf97	      0xbe00000000	                              mov esi, 0	      6351	ops.c	FUNCTION_72	FOR_1	CALL_12
0xcf9c	          0x4889c7	                            mov rdi, rax	      6351	ops.c	FUNCTION_72	FOR_1	CALL_12
0xcf9f	      0xb800000000	                              mov eax, 0	      6351	ops.c	FUNCTION_72	FOR_1	CALL_12
0xcfa4	      0xe800000000	                          call 0x400cfe9	      6351	ops.c	FUNCTION_72	FOR_1	CALL_12
0xcfa9	         0xfb655bb	            movzx edx, byte [rbp - 0x45]	      6352	ops.c	FUNCTION_72	FOR_1	IF_12
0xcfad	    0x8b0500000000	            mov eax, dword [0x0400cff3] 	      6352	ops.c	FUNCTION_72	FOR_1	IF_12
0xcfb3	            0x39c2	                            cmp edx, eax	      6352	ops.c	FUNCTION_72	FOR_1	IF_12
0xcfb5	            0x7511	                           jne 0x400d008	      6352	ops.c	FUNCTION_72	FOR_1	IF_12
0xcfb7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6353	ops.c	FUNCTION_72	FOR_1	CALL_13
0xcfbb	          0x4889c6	                            mov rsi, rax	      6353	ops.c	FUNCTION_72	FOR_1	CALL_13
0xcfbe	      0xbf40000000	                           mov edi, 0x40	      6353	ops.c	FUNCTION_72	FOR_1	CALL_13
0xcfc3	      0xe800000000	                          call 0x400d008	      6353	ops.c	FUNCTION_72	FOR_1	CALL_13
0xcfc8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6354	ops.c	FUNCTION_72	FOR_1	CALL_14
0xcfcc	          0x8b4814	            mov ecx, dword [rax + 0x14] 	      6354	ops.c	FUNCTION_72	FOR_1	CALL_14
0xcfcf	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      6354	ops.c	FUNCTION_72	FOR_1	CALL_14
0xcfd3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6354	ops.c	FUNCTION_72	FOR_1	CALL_14
0xcfd7	      0xbe00000000	                              mov esi, 0	      6354	ops.c	FUNCTION_72	FOR_1	CALL_14
0xcfdc	          0x4889c7	                            mov rdi, rax	      6354	ops.c	FUNCTION_72	FOR_1	CALL_14
0xcfdf	      0xb800000000	                              mov eax, 0	      6354	ops.c	FUNCTION_72	FOR_1	CALL_14
0xcfe4	      0xe800000000	                          call 0x400d029	      6354	ops.c	FUNCTION_72	FOR_1	CALL_14
0xcfe9	        0x837dc800	               cmp dword [rbp - 0x38], 0	      6357	ops.c	FUNCTION_72	FOR_1	IF_13
0xcfed	            0x7e0e	                           jle 0x400d03d	      6357	ops.c	FUNCTION_72	FOR_1	IF_13
0xcfef	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      6357	ops.c	FUNCTION_72	FOR_1	IF_13
0xcff2	          0x3b45c8	             cmp eax, dword [rbp - 0x38]	      6357	ops.c	FUNCTION_72	FOR_1	IF_13
0xcff5	            0x7e06	                           jle 0x400d03d	      6357	ops.c	FUNCTION_72	FOR_1	IF_13
0xcff7	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      6358	ops.c	FUNCTION_72	FOR_1	IF_13
0xcffa	          0x8945c4	             mov dword [rbp - 0x3c], eax	      6358	ops.c	FUNCTION_72	FOR_1	IF_13
0xcffd	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      6359	ops.c	FUNCTION_72	FOR_1	FOR_3
0xd004	            0xeb3b	                           jmp 0x400d081	      6359	ops.c	FUNCTION_72	FOR_1	FOR_3
0xd006	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6361	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_15
0xd00a	          0x4889c6	                            mov rsi, rax	      6361	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_15
0xd00d	      0xbf09000000	                              mov edi, 9	      6361	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_15
0xd012	      0xe800000000	                          call 0x400d057	      6361	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_15
0xd017	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6362	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_16
0xd01b	          0x488b00	                    mov rax, qword [rax]	      6362	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_16
0xd01e	          0x8b55c0	             mov edx, dword [rbp - 0x40]	      6362	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_16
0xd021	          0x4863d2	                         movsxd rdx, edx	      6362	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_16
0xd024	        0x48c1e203	                              shl rdx, 3	      6362	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_16
0xd028	          0x4801d0	                            add rax, rdx	      6362	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_16
0xd02b	          0x488b10	                    mov rdx, qword [rax]	      6362	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_16
0xd02e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6362	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_16
0xd032	          0x4889d6	                            mov rsi, rdx	      6362	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_16
0xd035	          0x4889c7	                            mov rdi, rax	      6362	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_16
0xd038	      0xe800000000	                          call 0x400d07d	      6362	ops.c	FUNCTION_72	FOR_1	FOR_3	CALL_16
0xd03d	        0x8345c001	               add dword [rbp - 0x40], 1	      6359	ops.c	FUNCTION_72	FOR_1	FOR_3
0xd041	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6359	ops.c	FUNCTION_72	FOR_1	FOR_3
0xd044	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	      6359	ops.c	FUNCTION_72	FOR_1	FOR_3
0xd047	            0x7cbd	                            jl 0x400d046	      6359	ops.c	FUNCTION_72	FOR_1	FOR_3
0xd049	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      6366	ops.c	FUNCTION_72	FOR_1
0xd050	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      6375	ops.c	FUNCTION_72	FOR_1	IF_14
0xd053	            0x4898	                                    cdqe	      6375	ops.c	FUNCTION_72	FOR_1	IF_14
0xd055	        0x48c1e005	                              shl rax, 5	      6375	ops.c	FUNCTION_72	FOR_1	IF_14
0xd059	    0x488d90000000	                          lea rdx, [rax]	      6375	ops.c	FUNCTION_72	FOR_1	IF_14
0xd060	    0x488b05000000	            mov rax, qword [0x0400d0a7] 	      6375	ops.c	FUNCTION_72	FOR_1	IF_14
0xd067	          0x4839c2	                            cmp rdx, rax	      6375	ops.c	FUNCTION_72	FOR_1	IF_14
0xd06a	            0x7504	                           jne 0x400d0b0	      6375	ops.c	FUNCTION_72	FOR_1	IF_14
0xd06c	        0x834dcc01	                or dword [rbp - 0x34], 1	      6376	ops.c	FUNCTION_72	FOR_1	IF_14
0xd070	         0xfb655bb	            movzx edx, byte [rbp - 0x45]	      6377	ops.c	FUNCTION_72	FOR_1	IF_15
0xd074	    0x8b0500000000	            mov eax, dword [0x0400d0ba] 	      6377	ops.c	FUNCTION_72	FOR_1	IF_15
0xd07a	            0x39c2	                            cmp edx, eax	      6377	ops.c	FUNCTION_72	FOR_1	IF_15
0xd07c	            0x7504	                           jne 0x400d0c2	      6377	ops.c	FUNCTION_72	FOR_1	IF_15
0xd07e	        0x834dcc02	                or dword [rbp - 0x34], 2	      6378	ops.c	FUNCTION_72	FOR_1	IF_15
0xd082	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6381	ops.c	FUNCTION_72	FOR_1
0xd086	        0x488b7018	            mov rsi, qword [rax + 0x18] 	      6381	ops.c	FUNCTION_72	FOR_1
0xd08a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6380	ops.c	FUNCTION_72	FOR_1
0xd08e	          0x8b4814	            mov ecx, dword [rax + 0x14] 	      6380	ops.c	FUNCTION_72	FOR_1
0xd091	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6380	ops.c	FUNCTION_72	FOR_1
0xd095	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6380	ops.c	FUNCTION_72	FOR_1
0xd099	        0x440fb6c0	                           movzx r8d, al	      6379	ops.c	FUNCTION_72	FOR_1	CALL_17
0xd09d	          0x8b7dbc	             mov edi, dword [rbp - 0x44]	      6379	ops.c	FUNCTION_72	FOR_1	CALL_17
0xd0a0	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      6379	ops.c	FUNCTION_72	FOR_1	CALL_17
0xd0a3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6379	ops.c	FUNCTION_72	FOR_1	CALL_17
0xd0a7	        0x4883ec08	                              sub rsp, 8	      6379	ops.c	FUNCTION_72	FOR_1	CALL_17
0xd0ab	              0x56	                                push rsi	      6379	ops.c	FUNCTION_72	FOR_1	CALL_17
0xd0ac	              0x51	                                push rcx	      6379	ops.c	FUNCTION_72	FOR_1	CALL_17
0xd0ad	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	      6379	ops.c	FUNCTION_72	FOR_1	CALL_17
0xd0b0	              0x51	                                push rcx	      6379	ops.c	FUNCTION_72	FOR_1	CALL_17
0xd0b1	          0x4589c1	                            mov r9d, r8d	      6379	ops.c	FUNCTION_72	FOR_1	CALL_17
0xd0b4	          0x4189f8	                            mov r8d, edi	      6379	ops.c	FUNCTION_72	FOR_1	CALL_17
0xd0b7	            0x89d1	                            mov ecx, edx	      6379	ops.c	FUNCTION_72	FOR_1	CALL_17
0xd0b9	      0xba03000000	                              mov edx, 3	      6379	ops.c	FUNCTION_72	FOR_1	CALL_17
0xd0be	      0xbe00000000	                              mov esi, 0	      6379	ops.c	FUNCTION_72	FOR_1	CALL_17
0xd0c3	          0x4889c7	                            mov rdi, rax	      6379	ops.c	FUNCTION_72	FOR_1	CALL_17
0xd0c6	      0xb800000000	                              mov eax, 0	      6379	ops.c	FUNCTION_72	FOR_1	CALL_17
0xd0cb	      0xe800000000	                          call 0x400d110	      6379	ops.c	FUNCTION_72	FOR_1	CALL_17
0xd0d0	        0x4883c420	                           add rsp, 0x20	      6379	ops.c	FUNCTION_72	FOR_1	CALL_17
0xd0d4	    0xc745d0b90100	          mov dword [rbp - 0x30], 0x1b9 	      6383	ops.c	FUNCTION_72	FOR_1
0xd0db	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      6384	ops.c	FUNCTION_72	FOR_1	FOR_4
0xd0e2	            0xeb45	                           jmp 0x400d169	      6384	ops.c	FUNCTION_72	FOR_1	FOR_4
0xd0e4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6386	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_18
0xd0e8	          0x4889c6	                            mov rsi, rax	      6386	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_18
0xd0eb	      0xbf2c000000	                           mov edi, 0x2c	      6386	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_18
0xd0f0	      0xe800000000	                          call 0x400d135	      6386	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_18
0xd0f5	        0x836dd001	               sub dword [rbp - 0x30], 1	      6387	ops.c	FUNCTION_72	FOR_1	FOR_4
0xd0f9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6388	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_19
0xd0fd	          0x488b00	                    mov rax, qword [rax]	      6388	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_19
0xd100	          0x8b55c0	             mov edx, dword [rbp - 0x40]	      6388	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_19
0xd103	          0x4863d2	                         movsxd rdx, edx	      6388	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_19
0xd106	        0x48c1e203	                              shl rdx, 3	      6388	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_19
0xd10a	          0x4801d0	                            add rax, rdx	      6388	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_19
0xd10d	          0x488b08	                    mov rcx, qword [rax]	      6388	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_19
0xd110	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      6388	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_19
0xd113	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6388	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_19
0xd117	          0x4889ce	                            mov rsi, rcx	      6388	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_19
0xd11a	          0x4889c7	                            mov rdi, rax	      6388	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_19
0xd11d	      0xe800000000	                          call 0x400d162	      6388	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_19
0xd122	          0x8945d0	             mov dword [rbp - 0x30], eax	      6388	ops.c	FUNCTION_72	FOR_1	FOR_4	CALL_19
0xd125	        0x8345c001	               add dword [rbp - 0x40], 1	      6384	ops.c	FUNCTION_72	FOR_1	FOR_4
0xd129	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6384	ops.c	FUNCTION_72	FOR_1	FOR_4
0xd12c	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	      6384	ops.c	FUNCTION_72	FOR_1	FOR_4
0xd12f	            0x7cb3	                            jl 0x400d124	      6384	ops.c	FUNCTION_72	FOR_1	FOR_4
0xd131	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      6391	ops.c	FUNCTION_72	FOR_1	CALL_20
0xd135	          0x4889c6	                            mov rsi, rax	      6391	ops.c	FUNCTION_72	FOR_1	CALL_20
0xd138	      0xbf0a000000	                            mov edi, 0xa	      6391	ops.c	FUNCTION_72	FOR_1	CALL_20
0xd13d	      0xe800000000	                          call 0x400d182	      6391	ops.c	FUNCTION_72	FOR_1	CALL_20
0xd142	            0xeb0a	                           jmp 0x400d18e	      6391	ops.c	FUNCTION_72	FOR_1	CALL_20
0xd144	              0x90	                                     nop	      6294	ops.c	FUNCTION_72	FOR_1	IF_4
0xd145	            0xeb07	                           jmp 0x400d18e	      6294	ops.c	FUNCTION_72	FOR_1	IF_4
0xd147	              0x90	                                     nop	      6309	ops.c	FUNCTION_72	FOR_1	ELSE_1	IF_7
0xd148	            0xeb04	                           jmp 0x400d18e	      6309	ops.c	FUNCTION_72	FOR_1	ELSE_1	IF_7
0xd14a	              0x90	                                     nop	      6318	ops.c	FUNCTION_72	FOR_1	IF_8
0xd14b	            0xeb01	                           jmp 0x400d18e	      6318	ops.c	FUNCTION_72	FOR_1	IF_8
0xd14d	              0x90	                                     nop	      6327	ops.c	FUNCTION_72	FOR_1	IF_9	IF_10
0xd14e	        0x8345bc01	               add dword [rbp - 0x44], 1	      6289	ops.c	FUNCTION_72	FOR_1
0xd152	        0x837dbc26	           cmp dword [rbp - 0x44], 0x26 	      6289	ops.c	FUNCTION_72	FOR_1
0xd156	     0xf8e14fcffff	                           jle 0x400cdb0	      6289	ops.c	FUNCTION_72	FOR_1
0xd15c	            0xeb04	                           jmp 0x400d1a2	      6289	ops.c	FUNCTION_72	FOR_1
0xd15e	              0x90	                                     nop	      6284	ops.c	FUNCTION_72	IF_2
0xd15f	            0xeb01	                           jmp 0x400d1a2	      6284	ops.c	FUNCTION_72	IF_2
0xd161	              0x90	                                     nop	      6287	ops.c	FUNCTION_72	IF_3
0xd162	        0x488b5df8	                mov rbx, qword [rbp - 8]	      6394	ops.c	FUNCTION_72
0xd166	              0xc9	                                   leave	      6394	ops.c	FUNCTION_72
0xd167	              0xc3	                                     ret	      6394	ops.c	FUNCTION_72
op_addsub	CALL,23:FOR,1:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,4:IF,19	266
0xabed	              0x55	                                push rbp	      5470	ops.c	FUNCTION_66
0xabee	          0x4889e5	                            mov rbp, rsp	      5470	ops.c	FUNCTION_66
0xabf1	    0x4881ecb00000	                           sub rsp, 0xb0	      5470	ops.c	FUNCTION_66
0xabf8	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      5470	ops.c	FUNCTION_66
0xabff	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	      5470	ops.c	FUNCTION_66
0xac06	    0x89955cffffff	             mov dword [rbp - 0xa4], edx	      5470	ops.c	FUNCTION_66
0xac0c	    0x64488b042528	                mov rax, qword fs:[0x28]	      5470	ops.c	FUNCTION_66
0xac15	        0x488945f8	                mov qword [rbp - 8], rax	      5470	ops.c	FUNCTION_66
0xac19	            0x31c0	                            xor eax, eax	      5470	ops.c	FUNCTION_66
0xac1b	    0xc78574ffffff	               mov dword [rbp - 0x8c], 0	      5473	ops.c	FUNCTION_66
0xac25	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5474	ops.c	FUNCTION_66
0xac2c	        0x48894580	             mov qword [rbp - 0x80], rax	      5474	ops.c	FUNCTION_66
0xac30	    0x8b0500000000	            mov eax, dword [0x0400ac76] 	      5476	ops.c	FUNCTION_66	IF_1
0xac36	            0x85c0	                           test eax, eax	      5476	ops.c	FUNCTION_66	IF_1
0xac38	            0x757a	                           jne 0x400acf4	      5476	ops.c	FUNCTION_66	IF_1
0xac3a	    0x488b05000000	            mov rax, qword [0x0400ac81] 	      5478	ops.c	FUNCTION_66	IF_1
0xac41	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      5478	ops.c	FUNCTION_66	IF_1
0xac45	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5478	ops.c	FUNCTION_66	IF_1
0xac49	        0x48894590	             mov qword [rbp - 0x70], rax	      5478	ops.c	FUNCTION_66	IF_1
0xac4d	        0x48895598	             mov qword [rbp - 0x68], rdx	      5478	ops.c	FUNCTION_66	IF_1
0xac51	      0xe800000000	                          call 0x400ac96	      5479	ops.c	FUNCTION_66	IF_1	IF_2	CALL_1
0xac56	            0x85c0	                           test eax, eax	      5479	ops.c	FUNCTION_66	IF_1	IF_2	CALL_1
0xac58	     0xf840e040000	                            je 0x400b0ac	      5479	ops.c	FUNCTION_66	IF_1	IF_2	CALL_1
0xac5e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5481	ops.c	FUNCTION_66	IF_1	CALL_2
0xac65	            0x8b00	                    mov eax, dword [rax]	      5481	ops.c	FUNCTION_66	IF_1	CALL_2
0xac67	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      5481	ops.c	FUNCTION_66	IF_1	CALL_2
0xac6b	        0x488d7590	                   lea rsi, [rbp - 0x70]	      5481	ops.c	FUNCTION_66	IF_1	CALL_2
0xac6f	          0x4889d1	                            mov rcx, rdx	      5481	ops.c	FUNCTION_66	IF_1	CALL_2
0xac72	      0xba00000000	                              mov edx, 0	      5481	ops.c	FUNCTION_66	IF_1	CALL_2
0xac77	            0x89c7	                            mov edi, eax	      5481	ops.c	FUNCTION_66	IF_1	CALL_2
0xac79	      0xe808040000	                      call sym.do_addsub	      5481	ops.c	FUNCTION_66	IF_1	CALL_2
0xac7e	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      5481	ops.c	FUNCTION_66	IF_1	CALL_2
0xac84	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      5482	ops.c	FUNCTION_66	IF_1	IF_3
0xac8b	     0xf84df030000	                            je 0x400b0b0	      5482	ops.c	FUNCTION_66	IF_1	IF_3
0xac91	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5483	ops.c	FUNCTION_66	IF_1	CALL_3
0xac95	        0x488d5001	                      lea rdx, [rax + 1]	      5483	ops.c	FUNCTION_66	IF_1	CALL_3
0xac99	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5483	ops.c	FUNCTION_66	IF_1	CALL_3
0xac9d	      0xb900000000	                              mov ecx, 0	      5483	ops.c	FUNCTION_66	IF_1	CALL_3
0xaca2	      0xbe00000000	                              mov esi, 0	      5483	ops.c	FUNCTION_66	IF_1	CALL_3
0xaca7	          0x4889c7	                            mov rdi, rax	      5483	ops.c	FUNCTION_66	IF_1	CALL_3
0xacaa	      0xe800000000	                          call 0x400acef	      5483	ops.c	FUNCTION_66	IF_1	CALL_3
0xacaf	      0xe9bc030000	                           jmp 0x400b0b0	      5483	ops.c	FUNCTION_66	IF_1	CALL_3
0xacb4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5492	ops.c	FUNCTION_66	ELSE_1	IF_4
0xacbb	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5492	ops.c	FUNCTION_66	ELSE_1	IF_4
0xacbf	        0x488d5001	                      lea rdx, [rax + 1]	      5492	ops.c	FUNCTION_66	ELSE_1	IF_4
0xacc3	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5491	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0xacca	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5491	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0xacce	        0x4883e801	                              sub rax, 1	      5491	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0xacd2	          0x4889d6	                            mov rsi, rdx	      5491	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0xacd5	          0x4889c7	                            mov rdi, rax	      5491	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0xacd8	      0xe800000000	                          call 0x400ad1d	      5491	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0xacdd	            0x85c0	                           test eax, eax	      5491	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0xacdf	     0xf848a030000	                            je 0x400b0af	      5491	ops.c	FUNCTION_66	ELSE_1	IF_4	CALL_4
0xace5	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5495	ops.c	FUNCTION_66	ELSE_1
0xacec	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      5495	ops.c	FUNCTION_66	ELSE_1
0xacf0	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5495	ops.c	FUNCTION_66	ELSE_1
0xacf4	        0x48894590	             mov qword [rbp - 0x70], rax	      5495	ops.c	FUNCTION_66	ELSE_1
0xacf8	        0x48895598	             mov qword [rbp - 0x68], rdx	      5495	ops.c	FUNCTION_66	ELSE_1
0xacfc	      0xe981020000	                           jmp 0x400afc2	      5496	ops.c	FUNCTION_66	ELSE_1	FOR_1
0xad01	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5498	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0xad08	          0x8b4060	            mov eax, dword [rax + 0x60] 	      5498	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0xad0b	            0x85c0	                           test eax, eax	      5498	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0xad0d	            0x7430	                            je 0x400ad7f	      5498	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0xad0f	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      5500	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_5
0xad13	        0x488d75b0	                   lea rsi, [rbp - 0x50]	      5500	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_5
0xad17	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5500	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_5
0xad1e	      0xb900000000	                              mov ecx, 0	      5500	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_5
0xad23	          0x4889c7	                            mov rdi, rax	      5500	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_5
0xad26	      0xe8aef9ffff	                     call sym.block_prep	      5500	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5	CALL_5
0xad2b	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      5501	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0xad2e	          0x894598	             mov dword [rbp - 0x68], eax	      5501	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0xad31	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      5502	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0xad34	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      5502	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0xad3a	      0xe943010000	                           jmp 0x400aec2	      5502	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_5
0xad3f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5504	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6
0xad46	          0x8b4008	                mov eax, dword [rax + 8]	      5504	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6
0xad49	          0x83f801	                              cmp eax, 1	      5504	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6
0xad4c	            0x7534	                           jne 0x400adc2	      5504	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6
0xad4e	    0x488b05000000	            mov rax, qword [0x0400ad95] 	      5506	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6
0xad55	    0xc74040000000	               mov dword [rax + 0x40], 0	      5506	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6
0xad5c	    0xc74598000000	               mov dword [rbp - 0x68], 0	      5507	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6
0xad63	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5508	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0xad67	          0x4889c7	                            mov rdi, rax	      5508	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0xad6a	      0xe800000000	                          call 0x400adaf	      5508	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0xad6f	          0x4889c7	                            mov rdi, rax	      5508	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0xad72	      0xe800000000	                          call 0x400adb7	      5508	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0xad77	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      5508	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0xad7d	      0xe900010000	                           jmp 0x400aec2	      5508	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_2	IF_6	CALL_7
0xad82	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      5512	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_7
0xad86	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5512	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_7
0xad8d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5512	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_7
0xad91	          0x4839c2	                            cmp rdx, rax	      5512	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_7
0xad94	            0x7521	                           jne 0x400adf7	      5512	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_7
0xad96	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5512	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_7
0xad9d	          0x8b4014	            mov eax, dword [rax + 0x14] 	      5512	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_7
0xada0	            0x85c0	                           test eax, eax	      5512	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_7
0xada2	            0x7513	                           jne 0x400adf7	      5512	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_7
0xada4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5513	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_8
0xadab	        0x4883c030	                           add rax, 0x30	      5513	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_8
0xadaf	          0x4889c7	                            mov rdi, rax	      5513	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_8
0xadb2	      0xe800000000	                          call 0x400adf7	      5513	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_8
0xadb7	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5514	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_10
0xadbb	          0x4889c7	                            mov rdi, rax	      5514	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_10
0xadbe	      0xe800000000	                          call 0x400ae03	      5514	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_10
0xadc3	          0x4889c7	                            mov rdi, rax	      5514	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_10
0xadc6	      0xe800000000	                          call 0x400ae0b	      5514	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_10
0xadcb	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      5514	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	CALL_10
0xadd1	    0xc74598000000	               mov dword [rbp - 0x68], 0	      5515	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3
0xadd8	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      5516	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0xaddc	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5516	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0xade3	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5516	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0xade7	          0x4839c2	                            cmp rdx, rax	      5516	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0xadea	            0x7522	                           jne 0x400ae4e	      5516	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0xadec	          0x8b5598	             mov edx, dword [rbp - 0x68]	      5518	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0xadef	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5518	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0xadf6	          0x8b4028	            mov eax, dword [rax + 0x28] 	      5518	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0xadf9	             0x1d0	                            add eax, edx	      5518	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0xadfb	          0x894598	             mov dword [rbp - 0x68], eax	      5518	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0xadfe	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5519	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0xae05	          0x8b4028	            mov eax, dword [rax + 0x28] 	      5519	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0xae08	    0x298578ffffff	             sub dword [rbp - 0x88], eax	      5519	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_8
0xae0e	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      5521	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0xae12	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5521	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0xae19	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5521	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0xae1d	          0x4839c2	                            cmp rdx, rax	      5521	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0xae20	            0x7560	                           jne 0x400aec2	      5521	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0xae22	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5523	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	CALL_12
0xae29	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5523	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	CALL_12
0xae2d	          0x4889c7	                            mov rdi, rax	      5523	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	CALL_12
0xae30	      0xe800000000	                          call 0x400ae75	      5523	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	CALL_12
0xae35	          0x4889c7	                            mov rdi, rax	      5523	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	CALL_12
0xae38	      0xe800000000	                          call 0x400ae7d	      5523	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	CALL_12
0xae3d	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      5523	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	CALL_12
0xae43	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5524	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	IF_10
0xae4a	          0x8b4038	            mov eax, dword [rax + 0x38] 	      5524	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	IF_10
0xae4d	    0x3b8578ffffff	             cmp eax, dword [rbp - 0x88]	      5524	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	IF_10
0xae53	            0x7c13	                            jl 0x400aea8	      5524	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	IF_10
0xae55	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      5525	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	IF_10
0xae5b	          0x8d50ff	                      lea edx, [rax - 1]	      5525	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	IF_10
0xae5e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5525	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	IF_10
0xae65	          0x895038	             mov dword [rax + 0x38], edx	      5525	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9	IF_10
0xae68	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5526	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0xae6f	          0x8b5038	            mov edx, dword [rax + 0x38] 	      5526	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0xae72	          0x8b4598	             mov eax, dword [rbp - 0x68]	      5526	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0xae75	            0x29c2	                            sub edx, eax	      5526	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0xae77	            0x89d0	                            mov eax, edx	      5526	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0xae79	          0x83c001	                              add eax, 1	      5526	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0xae7c	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      5526	ops.c	FUNCTION_66	ELSE_1	FOR_1	ELSE_3	IF_9
0xae82	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5529	ops.c	FUNCTION_66	ELSE_1	FOR_1	CALL_13
0xae89	            0x8b00	                    mov eax, dword [rax]	      5529	ops.c	FUNCTION_66	ELSE_1	FOR_1	CALL_13
0xae8b	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	      5529	ops.c	FUNCTION_66	ELSE_1	FOR_1	CALL_13
0xae8f	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      5529	ops.c	FUNCTION_66	ELSE_1	FOR_1	CALL_13
0xae95	        0x488d7590	                   lea rsi, [rbp - 0x70]	      5529	ops.c	FUNCTION_66	ELSE_1	FOR_1	CALL_13
0xae99	            0x89c7	                            mov edi, eax	      5529	ops.c	FUNCTION_66	ELSE_1	FOR_1	CALL_13
0xae9b	      0xe8e6010000	                      call sym.do_addsub	      5529	ops.c	FUNCTION_66	ELSE_1	FOR_1	CALL_13
0xaea0	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      5529	ops.c	FUNCTION_66	ELSE_1	FOR_1	CALL_13
0xaea6	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      5530	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11
0xaead	            0x742d	                            je 0x400af1c	      5530	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11
0xaeaf	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      5533	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0xaeb6	            0x751d	                           jne 0x400af15	      5533	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0xaeb8	    0x488b05000000	            mov rax, qword [0x0400aeff] 	      5534	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0xaebf	    0x488b90d81100	          mov rdx, qword [rax + 0x11d8] 	      5534	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0xaec6	    0x488b80d01100	          mov rax, qword [rax + 0x11d0] 	      5534	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0xaecd	        0x488945a0	             mov qword [rbp - 0x60], rax	      5534	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0xaed1	        0x488955a8	             mov qword [rbp - 0x58], rdx	      5534	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11	IF_12
0xaed5	    0x838574ffffff	               add dword [rbp - 0x8c], 1	      5535	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_11
0xaedc	      0xe800000000	                          call 0x400af21	      5539	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_14
0xaee1	            0x85c0	                           test eax, eax	      5539	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_14
0xaee3	            0x7474	                            je 0x400af99	      5539	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_14
0xaee5	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      5539	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_14
0xaeec	            0x746b	                            je 0x400af99	      5539	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_14
0xaeee	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      5541	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_15
0xaef2	    0x488b05000000	            mov rax, qword [0x0400af39] 	      5541	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_15
0xaef9	      0xba00000000	                              mov edx, 0	      5541	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_15
0xaefe	          0x4889ce	                            mov rsi, rcx	      5541	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_15
0xaf01	          0x4889c7	                            mov rdi, rax	      5541	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_15
0xaf04	      0xe800000000	                          call 0x400af49	      5541	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_15
0xaf09	        0x48894588	             mov qword [rbp - 0x78], rax	      5541	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_15
0xaf0d	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      5543	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_16
0xaf13	          0x4863c8	                         movsxd rcx, eax	      5543	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_16
0xaf16	          0x8b5598	             mov edx, dword [rbp - 0x68]	      5543	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_16
0xaf19	        0x488b7590	             mov rsi, qword [rbp - 0x70]	      5543	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_16
0xaf1d	    0x488b05000000	            mov rax, qword [0x0400af64] 	      5543	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_16
0xaf24	          0x4889c7	                            mov rdi, rax	      5543	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_16
0xaf27	      0xe800000000	                          call 0x400af6c	      5543	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_16
0xaf2c	          0x8b4598	             mov eax, dword [rbp - 0x68]	      5545	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13
0xaf2f	          0x4863d0	                         movsxd rdx, eax	      5544	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0xaf32	        0x488b4588	             mov rax, qword [rbp - 0x78]	      5544	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0xaf36	        0x488d0c02	                    lea rcx, [rdx + rax]	      5544	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0xaf3a	          0x8b5598	             mov edx, dword [rbp - 0x68]	      5544	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0xaf3d	        0x488b7590	             mov rsi, qword [rbp - 0x70]	      5544	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0xaf41	    0x488b05000000	            mov rax, qword [0x0400af88] 	      5544	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0xaf48	    0x8bbd78ffffff	             mov edi, dword [rbp - 0x88]	      5544	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0xaf4e	          0x4189f8	                            mov r8d, edi	      5544	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0xaf51	          0x4889c7	                            mov rdi, rax	      5544	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0xaf54	      0xe800000000	                          call 0x400af99	      5544	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_13	CALL_17
0xaf59	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	      5548	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_14
0xaf60	            0x7414	                            je 0x400afb6	      5548	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_14
0xaf62	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      5548	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_14
0xaf69	            0x740b	                            je 0x400afb6	      5548	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_14
0xaf6b	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      5549	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_14
0xaf72	        0x48014580	            add qword [rbp - 0x80], rax 	      5549	ops.c	FUNCTION_66	ELSE_1	FOR_1	IF_14
0xaf76	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5496	ops.c	FUNCTION_66	ELSE_1	FOR_1
0xaf7a	        0x4883c001	                              add rax, 1	      5496	ops.c	FUNCTION_66	ELSE_1	FOR_1
0xaf7e	        0x48894590	             mov qword [rbp - 0x70], rax	      5496	ops.c	FUNCTION_66	ELSE_1	FOR_1
0xaf82	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      5496	ops.c	FUNCTION_66	ELSE_1	FOR_1
0xaf86	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5496	ops.c	FUNCTION_66	ELSE_1	FOR_1
0xaf8d	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5496	ops.c	FUNCTION_66	ELSE_1	FOR_1
0xaf91	          0x4839c2	                            cmp rdx, rax	      5496	ops.c	FUNCTION_66	ELSE_1	FOR_1
0xaf94	     0xf8e67fdffff	                           jle 0x400ad41	      5496	ops.c	FUNCTION_66	ELSE_1	FOR_1
0xaf9a	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      5551	ops.c	FUNCTION_66	ELSE_1	IF_15
0xafa1	            0x742c	                            je 0x400b00f	      5551	ops.c	FUNCTION_66	ELSE_1	IF_15
0xafa3	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5552	ops.c	FUNCTION_66	ELSE_1	CALL_18
0xafaa	        0x488b4030	            mov rax, qword [rax + 0x30] 	      5552	ops.c	FUNCTION_66	ELSE_1	CALL_18
0xafae	        0x488d5001	                      lea rdx, [rax + 1]	      5552	ops.c	FUNCTION_66	ELSE_1	CALL_18
0xafb2	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5552	ops.c	FUNCTION_66	ELSE_1	CALL_18
0xafb9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      5552	ops.c	FUNCTION_66	ELSE_1	CALL_18
0xafbd	      0xb900000000	                              mov ecx, 0	      5552	ops.c	FUNCTION_66	ELSE_1	CALL_18
0xafc2	      0xbe00000000	                              mov esi, 0	      5552	ops.c	FUNCTION_66	ELSE_1	CALL_18
0xafc7	          0x4889c7	                            mov rdi, rax	      5552	ops.c	FUNCTION_66	ELSE_1	CALL_18
0xafca	      0xe800000000	                          call 0x400b00f	      5552	ops.c	FUNCTION_66	ELSE_1	CALL_18
0xafcf	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      5554	ops.c	FUNCTION_66	ELSE_1	IF_16
0xafd6	            0x7518	                           jne 0x400b030	      5554	ops.c	FUNCTION_66	ELSE_1	IF_16
0xafd8	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5554	ops.c	FUNCTION_66	ELSE_1	IF_16
0xafdf	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      5554	ops.c	FUNCTION_66	ELSE_1	IF_16
0xafe2	            0x85c0	                           test eax, eax	      5554	ops.c	FUNCTION_66	ELSE_1	IF_16
0xafe4	            0x740a	                            je 0x400b030	      5554	ops.c	FUNCTION_66	ELSE_1	IF_16
0xafe6	      0xbf14000000	                           mov edi, 0x14	      5556	ops.c	FUNCTION_66	ELSE_1	CALL_19
0xafeb	      0xe800000000	                          call 0x400b030	      5556	ops.c	FUNCTION_66	ELSE_1	CALL_19
0xaff0	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      5560	ops.c	FUNCTION_66	ELSE_1	IF_17
0xaff7	            0x7e1d	                           jle 0x400b056	      5560	ops.c	FUNCTION_66	ELSE_1	IF_17
0xaff9	    0x488b0d000000	            mov rcx, qword [0x0400b040] 	      5561	ops.c	FUNCTION_66	ELSE_1	IF_17
0xb000	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      5561	ops.c	FUNCTION_66	ELSE_1	IF_17
0xb004	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      5561	ops.c	FUNCTION_66	ELSE_1	IF_17
0xb008	    0x488981d01100	          mov qword [rcx + 0x11d0], rax 	      5561	ops.c	FUNCTION_66	ELSE_1	IF_17
0xb00f	    0x488991d81100	          mov qword [rcx + 0x11d8], rdx 	      5561	ops.c	FUNCTION_66	ELSE_1	IF_17
0xb016	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      5563	ops.c	FUNCTION_66	ELSE_1	IF_18
0xb01c	          0x4863d0	                         movsxd rdx, eax	      5563	ops.c	FUNCTION_66	ELSE_1	IF_18
0xb01f	    0x488b05000000	            mov rax, qword [0x0400b066] 	      5563	ops.c	FUNCTION_66	ELSE_1	IF_18
0xb026	          0x4839c2	                            cmp rdx, rax	      5563	ops.c	FUNCTION_66	ELSE_1	IF_18
0xb029	            0x7e45	                           jle 0x400b0b0	      5563	ops.c	FUNCTION_66	ELSE_1	IF_18
0xb02b	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 1	      5565	ops.c	FUNCTION_66	ELSE_1	IF_18	IF_19
0xb032	            0x7514	                           jne 0x400b088	      5565	ops.c	FUNCTION_66	ELSE_1	IF_18	IF_19
0xb034	      0xbf00000000	                              mov edi, 0	      5566	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_21
0xb039	      0xe800000000	                          call 0x400b07e	      5566	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_21
0xb03e	          0x4889c7	                            mov rdi, rax	      5566	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_21
0xb041	      0xe800000000	                          call 0x400b086	      5566	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_21
0xb046	            0xeb28	                           jmp 0x400b0b0	      5566	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_21
0xb048	      0xbf00000000	                              mov edi, 0	      5568	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0xb04d	      0xe800000000	                          call 0x400b092	      5568	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0xb052	          0x4889c2	                            mov rdx, rax	      5568	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0xb055	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      5568	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0xb05b	            0x89c6	                            mov esi, eax	      5568	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0xb05d	          0x4889d7	                            mov rdi, rdx	      5568	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0xb060	      0xb800000000	                              mov eax, 0	      5568	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0xb065	      0xe800000000	                          call 0x400b0aa	      5568	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0xb06a	            0xeb04	                           jmp 0x400b0b0	      5568	ops.c	FUNCTION_66	ELSE_1	IF_18	CALL_23
0xb06c	              0x90	                                     nop	      5480	ops.c	FUNCTION_66	IF_1	IF_2
0xb06d	            0xeb01	                           jmp 0x400b0b0	      5480	ops.c	FUNCTION_66	IF_1	IF_2
0xb06f	              0x90	                                     nop	      5493	ops.c	FUNCTION_66	ELSE_1	IF_4
0xb070	        0x488b45f8	                mov rax, qword [rbp - 8]	      5571	ops.c	FUNCTION_66
0xb074	    0x644833042528	                xor rax, qword fs:[0x28]	      5571	ops.c	FUNCTION_66
0xb07d	            0x7405	                            je 0x400b0c4	      5571	ops.c	FUNCTION_66
0xb07f	      0xe800000000	                          call 0x400b0c4	      5571	ops.c	FUNCTION_66
0xb084	              0xc9	                                   leave	      5571	ops.c	FUNCTION_66
0xb085	              0xc3	                                     ret	      5571	ops.c	FUNCTION_66
do_join	CALL,34:FOR,2:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,3:IF,22	502
0x8fe6	              0x55	                                push rbp	      4484	ops.c	FUNCTION_55
0x8fe7	          0x4889e5	                            mov rbp, rsp	      4484	ops.c	FUNCTION_55
0x8fea	              0x53	                                push rbx	      4484	ops.c	FUNCTION_55
0x8feb	    0x4881ec980000	                           sub rsp, 0x98	      4484	ops.c	FUNCTION_55
0x8ff2	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	      4484	ops.c	FUNCTION_55
0x8ff9	    0x89b574ffffff	             mov dword [rbp - 0x8c], esi	      4484	ops.c	FUNCTION_55
0x8fff	    0x899570ffffff	             mov dword [rbp - 0x90], edx	      4484	ops.c	FUNCTION_55
0x9005	    0x898d6cffffff	             mov dword [rbp - 0x94], ecx	      4484	ops.c	FUNCTION_55
0x900b	    0x44898568ffff	             mov dword [rbp - 0x98], r8d	      4484	ops.c	FUNCTION_55
0x9012	    0x64488b042528	                mov rax, qword fs:[0x28]	      4484	ops.c	FUNCTION_55
0x901b	        0x488945e8	             mov qword [rbp - 0x18], rax	      4484	ops.c	FUNCTION_55
0x901f	            0x31c0	                            xor eax, eax	      4484	ops.c	FUNCTION_55
0x9021	    0x48c745a80000	               mov qword [rbp - 0x58], 0	      4485	ops.c	FUNCTION_55
0x9029	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      4486	ops.c	FUNCTION_55
0x9031	    0xc7458c000000	               mov dword [rbp - 0x74], 0	      4490	ops.c	FUNCTION_55
0x9038	    0xc74590000000	               mov dword [rbp - 0x70], 0	      4491	ops.c	FUNCTION_55
0x903f	    0xc74594000000	               mov dword [rbp - 0x6c], 0	      4492	ops.c	FUNCTION_55
0x9046	    0xc74598000000	               mov dword [rbp - 0x68], 0	      4493	ops.c	FUNCTION_55
0x904d	    0xc745a0000000	               mov dword [rbp - 0x60], 0	      4495	ops.c	FUNCTION_55
0x9054	    0xc7459c010000	               mov dword [rbp - 0x64], 1	      4496	ops.c	FUNCTION_55
0x905b	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      4498	ops.c	FUNCTION_55
0x9063	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 1	      4500	ops.c	FUNCTION_55	CALL_1
0x906a	            0x7515	                           jne 0x40090c1	      4500	ops.c	FUNCTION_55	CALL_1
0x906c	      0xbf6a000000	                           mov edi, 0x6a	      4500	ops.c	FUNCTION_55	CALL_1
0x9071	      0xe800000000	                          call 0x40090b6	      4500	ops.c	FUNCTION_55	CALL_1
0x9076	            0x85c0	                           test eax, eax	      4500	ops.c	FUNCTION_55	CALL_1
0x9078	            0x7407	                            je 0x40090c1	      4500	ops.c	FUNCTION_55	CALL_1
0x907a	      0xb801000000	                              mov eax, 1	      4500	ops.c	FUNCTION_55	CALL_1
0x907f	            0xeb05	                           jmp 0x40090c6	      4500	ops.c	FUNCTION_55	CALL_1
0x9081	      0xb800000000	                              mov eax, 0	      4500	ops.c	FUNCTION_55	CALL_1
0x9086	          0x8945a4	             mov dword [rbp - 0x5c], eax	      4499	ops.c	FUNCTION_55
0x9089	    0x83bd70ffffff	               cmp dword [rbp - 0x90], 0	      4505	ops.c	FUNCTION_55	IF_1	CALL_2
0x9090	            0x743d	                            je 0x400910f	      4505	ops.c	FUNCTION_55	IF_1	CALL_2
0x9092	    0x488b05000000	            mov rax, qword [0x040090d9] 	      4506	ops.c	FUNCTION_55	IF_1
0x9099	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4506	ops.c	FUNCTION_55	IF_1
0x909d	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4505	ops.c	FUNCTION_55	IF_1	CALL_2
0x90a4	          0x4801c2	                            add rdx, rax	      4505	ops.c	FUNCTION_55	IF_1	CALL_2
0x90a7	    0x488b05000000	            mov rax, qword [0x040090ee] 	      4505	ops.c	FUNCTION_55	IF_1	CALL_2
0x90ae	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4505	ops.c	FUNCTION_55	IF_1	CALL_2
0x90b2	        0x4883e801	                              sub rax, 1	      4505	ops.c	FUNCTION_55	IF_1	CALL_2
0x90b6	          0x4889d6	                            mov rsi, rdx	      4505	ops.c	FUNCTION_55	IF_1	CALL_2
0x90b9	          0x4889c7	                            mov rdi, rax	      4505	ops.c	FUNCTION_55	IF_1	CALL_2
0x90bc	      0xe800000000	                          call 0x4009101	      4505	ops.c	FUNCTION_55	IF_1	CALL_2
0x90c1	            0x85c0	                           test eax, eax	      4505	ops.c	FUNCTION_55	IF_1	CALL_2
0x90c3	            0x750a	                           jne 0x400910f	      4505	ops.c	FUNCTION_55	IF_1	CALL_2
0x90c5	      0xb800000000	                              mov eax, 0	      4507	ops.c	FUNCTION_55	IF_1
0x90ca	      0xe9f4060000	                           jmp 0x4009803	      4507	ops.c	FUNCTION_55	IF_1
0x90cf	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4512	ops.c	FUNCTION_55	CALL_3
0x90d6	      0xbe01000000	                              mov esi, 1	      4512	ops.c	FUNCTION_55	CALL_3
0x90db	          0x4889c7	                            mov rdi, rax	      4512	ops.c	FUNCTION_55	CALL_3
0x90de	      0xe800000000	                          call 0x4009123	      4512	ops.c	FUNCTION_55	CALL_3
0x90e3	        0x488945d0	             mov qword [rbp - 0x30], rax	      4512	ops.c	FUNCTION_55	CALL_3
0x90e7	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      4513	ops.c	FUNCTION_55	IF_2
0x90ec	            0x750a	                           jne 0x4009138	      4513	ops.c	FUNCTION_55	IF_2
0x90ee	      0xb800000000	                              mov eax, 0	      4514	ops.c	FUNCTION_55	IF_2
0x90f3	      0xe9cb060000	                           jmp 0x4009803	      4514	ops.c	FUNCTION_55	IF_2
0x90f8	        0x837da400	               cmp dword [rbp - 0x5c], 0	      4516	ops.c	FUNCTION_55	IF_3
0x90fc	            0x7439	                            je 0x4009177	      4516	ops.c	FUNCTION_55	IF_3
0x90fe	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4518	ops.c	FUNCTION_55	IF_3	CALL_4
0x9105	        0x48c1e002	                              shl rax, 2	      4518	ops.c	FUNCTION_55	IF_3	CALL_4
0x9109	      0xbe01000000	                              mov esi, 1	      4518	ops.c	FUNCTION_55	IF_3	CALL_4
0x910e	          0x4889c7	                            mov rdi, rax	      4518	ops.c	FUNCTION_55	IF_3	CALL_4
0x9111	      0xe800000000	                          call 0x4009156	      4518	ops.c	FUNCTION_55	IF_3	CALL_4
0x9116	        0x488945c8	             mov qword [rbp - 0x38], rax	      4518	ops.c	FUNCTION_55	IF_3	CALL_4
0x911a	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      4519	ops.c	FUNCTION_55	IF_3	IF_4
0x911f	            0x7516	                           jne 0x4009177	      4519	ops.c	FUNCTION_55	IF_3	IF_4
0x9121	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4521	ops.c	FUNCTION_55	IF_3	IF_4	CALL_5
0x9125	          0x4889c7	                            mov rdi, rax	      4521	ops.c	FUNCTION_55	IF_3	IF_4	CALL_5
0x9128	      0xe800000000	                          call 0x400916d	      4521	ops.c	FUNCTION_55	IF_3	IF_4	CALL_5
0x912d	      0xb800000000	                              mov eax, 0	      4522	ops.c	FUNCTION_55	IF_3	IF_4
0x9132	      0xe98c060000	                           jmp 0x4009803	      4522	ops.c	FUNCTION_55	IF_3	IF_4
0x9137	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      4531	ops.c	FUNCTION_55	FOR_1
0x913f	      0xe970030000	                           jmp 0x40094f4	      4531	ops.c	FUNCTION_55	FOR_1
0x9144	    0x488b05000000	            mov rax, qword [0x0400918b] 	      4533	ops.c	FUNCTION_55	FOR_1	CALL_6
0x914b	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4533	ops.c	FUNCTION_55	FOR_1	CALL_6
0x914f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4533	ops.c	FUNCTION_55	FOR_1	CALL_6
0x9153	          0x4801d0	                            add rax, rdx	      4533	ops.c	FUNCTION_55	FOR_1	CALL_6
0x9156	          0x4889c7	                            mov rdi, rax	      4533	ops.c	FUNCTION_55	FOR_1	CALL_6
0x9159	      0xe800000000	                          call 0x400919e	      4533	ops.c	FUNCTION_55	FOR_1	CALL_6
0x915e	        0x488945b0	             mov qword [rbp - 0x50], rax	      4533	ops.c	FUNCTION_55	FOR_1	CALL_6
0x9162	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4533	ops.c	FUNCTION_55	FOR_1	CALL_6
0x9166	        0x488945a8	             mov qword [rbp - 0x58], rax	      4533	ops.c	FUNCTION_55	FOR_1	CALL_6
0x916a	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      4534	ops.c	FUNCTION_55	FOR_1	IF_5
0x916f	            0x7543	                           jne 0x40091f4	      4534	ops.c	FUNCTION_55	FOR_1	IF_5
0x9171	    0x83bd68ffffff	               cmp dword [rbp - 0x98], 0	      4534	ops.c	FUNCTION_55	FOR_1	IF_5
0x9178	            0x743a	                            je 0x40091f4	      4534	ops.c	FUNCTION_55	FOR_1	IF_5
0x917a	    0x488b05000000	            mov rax, qword [0x040091c1] 	      4537	ops.c	FUNCTION_55	FOR_1	IF_5
0x9181	        0x488b4008	                mov rax, qword [rax + 8]	      4537	ops.c	FUNCTION_55	FOR_1	IF_5
0x9185	    0x488b15000000	            mov rdx, qword [0x040091cc] 	      4537	ops.c	FUNCTION_55	FOR_1	IF_5
0x918c	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	      4537	ops.c	FUNCTION_55	FOR_1	IF_5
0x9190	    0x488990d01100	          mov qword [rax + 0x11d0], rdx 	      4537	ops.c	FUNCTION_55	FOR_1	IF_5
0x9197	    0x488b05000000	            mov rax, qword [0x040091de] 	      4538	ops.c	FUNCTION_55	FOR_1	IF_5	CALL_7
0x919e	        0x488b5808	                mov rbx, qword [rax + 8]	      4538	ops.c	FUNCTION_55	FOR_1	IF_5	CALL_7
0x91a2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4538	ops.c	FUNCTION_55	FOR_1	IF_5	CALL_7
0x91a6	          0x4889c7	                            mov rdi, rax	      4538	ops.c	FUNCTION_55	FOR_1	IF_5	CALL_7
0x91a9	      0xe800000000	                          call 0x40091ee	      4538	ops.c	FUNCTION_55	FOR_1	IF_5	CALL_7
0x91ae	    0x8983d8110000	          mov dword [rbx + 0x11d8], eax 	      4538	ops.c	FUNCTION_55	FOR_1	IF_5	CALL_7
0x91b4	        0x837da400	               cmp dword [rbp - 0x5c], 0	      4541	ops.c	FUNCTION_55	FOR_1	IF_6
0x91b8	            0x7479	                            je 0x4009273	      4541	ops.c	FUNCTION_55	FOR_1	IF_6
0x91ba	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      4545	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x91bf	            0x7e53	                           jle 0x4009254	      4545	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x91c1	          0x8b4588	             mov eax, dword [rbp - 0x78]	      4545	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x91c4	            0x85c0	                           test eax, eax	      4545	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x91c6	            0x744c	                            je 0x4009254	      4545	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x91c8	        0x488d4d88	                   lea rcx, [rbp - 0x78]	      4548	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7	CALL_8
0x91cc	    0x8b9574ffffff	             mov edx, dword [rbp - 0x8c]	      4548	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7	CALL_8
0x91d2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4548	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7	CALL_8
0x91d6	      0xbe01000000	                              mov esi, 1	      4548	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7	CALL_8
0x91db	          0x4889c7	                            mov rdi, rax	      4548	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7	CALL_8
0x91de	      0xe800000000	                          call 0x4009223	      4548	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7	CALL_8
0x91e3	        0x488945d8	             mov qword [rbp - 0x28], rax	      4548	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7	CALL_8
0x91e7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4550	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x91eb	    0x488d14850000	                        lea rdx, [rax*4]	      4550	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x91f3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4550	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x91f7	          0x4801d0	                            add rax, rdx	      4550	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x91fa	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      4550	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x91fe	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      4550	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x9202	          0x4829d1	                            sub rcx, rdx	      4550	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x9205	          0x4889ca	                            mov rdx, rcx	      4550	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x9208	            0x8910	                    mov dword [rax], edx	      4550	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x920a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4551	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x920e	        0x488945a8	             mov qword [rbp - 0x58], rax	      4551	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x9212	            0xeb1f	                           jmp 0x4009273	      4546	ops.c	FUNCTION_55	FOR_1	IF_6	IF_7
0x9214	        0x488d4d88	                   lea rcx, [rbp - 0x78]	      4554	ops.c	FUNCTION_55	FOR_1	IF_6	ELSE_1	CALL_9
0x9218	    0x8b9574ffffff	             mov edx, dword [rbp - 0x8c]	      4554	ops.c	FUNCTION_55	FOR_1	IF_6	ELSE_1	CALL_9
0x921e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4554	ops.c	FUNCTION_55	FOR_1	IF_6	ELSE_1	CALL_9
0x9222	      0xbe00000000	                              mov esi, 0	      4554	ops.c	FUNCTION_55	FOR_1	IF_6	ELSE_1	CALL_9
0x9227	          0x4889c7	                            mov rdi, rax	      4554	ops.c	FUNCTION_55	FOR_1	IF_6	ELSE_1	CALL_9
0x922a	      0xe800000000	                          call 0x400926f	      4554	ops.c	FUNCTION_55	FOR_1	IF_6	ELSE_1	CALL_9
0x922f	        0x488945a8	             mov qword [rbp - 0x58], rax	      4554	ops.c	FUNCTION_55	FOR_1	IF_6	ELSE_1	CALL_9
0x9233	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      4559	ops.c	FUNCTION_55	FOR_1	IF_8
0x923a	     0xf840b010000	                            je 0x400938b	      4559	ops.c	FUNCTION_55	FOR_1	IF_8
0x9240	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      4559	ops.c	FUNCTION_55	FOR_1	IF_8
0x9245	     0xf8e00010000	                           jle 0x400938b	      4559	ops.c	FUNCTION_55	FOR_1	IF_8
0x924b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4561	ops.c	FUNCTION_55	FOR_1	IF_8	CALL_10
0x924f	          0x4889c7	                            mov rdi, rax	      4561	ops.c	FUNCTION_55	FOR_1	IF_8	CALL_10
0x9252	      0xe800000000	                          call 0x4009297	      4561	ops.c	FUNCTION_55	FOR_1	IF_8	CALL_10
0x9257	        0x488945a8	             mov qword [rbp - 0x58], rax	      4561	ops.c	FUNCTION_55	FOR_1	IF_8	CALL_10
0x925b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4562	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9
0x925f	           0xfb600	                   movzx eax, byte [rax]	      4562	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9
0x9262	            0x3c29	                            cmp al, 0x29	      4562	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9
0x9264	     0xf84e1000000	                            je 0x400938b	      4562	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9
0x926a	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      4562	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9
0x926e	     0xf84d7000000	                            je 0x400938b	      4562	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9
0x9274	        0x837d8c09	               cmp dword [rbp - 0x74], 9	      4562	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9
0x9278	     0xf84cd000000	                            je 0x400938b	      4562	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9
0x927e	      0xbf4d000000	                           mov edi, 0x4d	      4564	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_11
0x9283	      0xe800000000	                          call 0x40092c8	      4564	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_11
0x9288	            0x85c0	                           test eax, eax	      4564	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_11
0x928a	            0x7428	                            je 0x40092f4	      4564	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_11
0x928c	    0x488b05000000	            mov rax, qword [0x040092d3] 	      4565	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_12
0x9293	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      4565	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_12
0x9297	          0x4889d7	                            mov rdi, rdx	      4565	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_12
0x929a	            0xffd0	                                call rax	      4565	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_12
0x929c	      0x3dff000000	                           cmp eax, 0xff	      4565	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_12
0x92a1	     0xf8fa4000000	                            jg 0x400938b	      4565	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_12
0x92a7	    0x817d8cff0000	           cmp dword [rbp - 0x74], 0xff 	      4565	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_12
0x92ae	     0xf8f97000000	                            jg 0x400938b	      4565	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_12
0x92b4	      0xbf42000000	                           mov edi, 0x42	      4566	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_13
0x92b9	      0xe800000000	                          call 0x40092fe	      4566	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_13
0x92be	            0x85c0	                           test eax, eax	      4566	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_13
0x92c0	            0x7420	                            je 0x4009322	      4566	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_13
0x92c2	    0x488b05000000	            mov rax, qword [0x04009309] 	      4567	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_14
0x92c9	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      4567	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_14
0x92cd	          0x4889d7	                            mov rdi, rdx	      4567	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_14
0x92d0	            0xffd0	                                call rax	      4567	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_14
0x92d2	      0x3dff000000	                           cmp eax, 0xff	      4567	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_14
0x92d7	            0x7e09	                           jle 0x4009322	      4567	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_14
0x92d9	    0x817d8cff0000	           cmp dword [rbp - 0x74], 0xff 	      4567	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_14
0x92e0	            0x7f69	                            jg 0x400938b	      4567	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	CALL_14
0x92e2	        0x837d8c20	           cmp dword [rbp - 0x74], 0x20 	      4572	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_10
0x92e6	            0x7508	                           jne 0x4009330	      4572	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_10
0x92e8	          0x8b4590	             mov eax, dword [rbp - 0x70]	      4573	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_10
0x92eb	          0x89458c	             mov dword [rbp - 0x74], eax	      4573	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_10
0x92ee	            0xeb13	                           jmp 0x4009343	      4573	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_10
0x92f0	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      4575	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	ELSE_2
0x92f4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4575	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	ELSE_2
0x92f8	          0x4801d0	                            add rax, rdx	      4575	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	ELSE_2
0x92fb	           0xfb610	                   movzx edx, byte [rax]	      4575	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	ELSE_2
0x92fe	          0x83c201	                              add edx, 1	      4575	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	ELSE_2
0x9301	            0x8810	                      mov byte [rax], dl	      4575	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	ELSE_2
0x9303	    0x8b0500000000	            mov eax, dword [0x04009349] 	      4577	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x9309	            0x85c0	                           test eax, eax	      4577	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x930b	            0x743e	                            je 0x400938b	      4577	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x930d	        0x837d8c2e	           cmp dword [rbp - 0x74], 0x2e 	      4578	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x9311	            0x7425	                            je 0x4009378	      4578	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x9313	    0x488b05000000	            mov rax, qword [0x0400935a] 	      4579	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11	CALL_15
0x931a	      0xbe6a000000	                           mov esi, 0x6a	      4579	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11	CALL_15
0x931f	          0x4889c7	                            mov rdi, rax	      4579	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11	CALL_15
0x9322	      0xe800000000	                          call 0x4009367	      4579	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11	CALL_15
0x9327	          0x4885c0	                           test rax, rax	      4579	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11	CALL_15
0x932a	            0x751f	                           jne 0x400938b	      4579	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11	CALL_15
0x932c	        0x837d8c3f	           cmp dword [rbp - 0x74], 0x3f 	      4580	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x9330	            0x7406	                            je 0x4009378	      4580	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x9332	        0x837d8c21	           cmp dword [rbp - 0x74], 0x21 	      4580	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x9336	            0x7513	                           jne 0x400938b	      4580	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x9338	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      4581	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x933c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4581	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x9340	          0x4801d0	                            add rax, rdx	      4581	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x9343	           0xfb610	                   movzx edx, byte [rax]	      4581	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x9346	          0x83c201	                              add edx, 1	      4581	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x9349	            0x8810	                      mov byte [rax], dl	      4581	ops.c	FUNCTION_55	FOR_1	IF_8	IF_9	IF_11
0x934b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4584	ops.c	FUNCTION_55	FOR_1	CALL_16
0x934f	          0x4889c7	                            mov rdi, rax	      4584	ops.c	FUNCTION_55	FOR_1	CALL_16
0x9352	      0xe800000000	                          call 0x4009397	      4584	ops.c	FUNCTION_55	FOR_1	CALL_16
0x9357	          0x894594	             mov dword [rbp - 0x6c], eax	      4584	ops.c	FUNCTION_55	FOR_1	CALL_16
0x935a	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      4585	ops.c	FUNCTION_55	FOR_1
0x935e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4585	ops.c	FUNCTION_55	FOR_1
0x9362	          0x4801d0	                            add rax, rdx	      4585	ops.c	FUNCTION_55	FOR_1
0x9365	           0xfb600	                   movzx eax, byte [rax]	      4585	ops.c	FUNCTION_55	FOR_1
0x9368	           0xfb6d0	                           movzx edx, al	      4585	ops.c	FUNCTION_55	FOR_1
0x936b	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      4585	ops.c	FUNCTION_55	FOR_1
0x936e	             0x1d0	                            add eax, edx	      4585	ops.c	FUNCTION_55	FOR_1
0x9370	           0x14598	             add dword [rbp - 0x68], eax	      4585	ops.c	FUNCTION_55	FOR_1
0x9373	    0xc74590000000	               mov dword [rbp - 0x70], 0	      4586	ops.c	FUNCTION_55	FOR_1
0x937a	          0x8b4590	             mov eax, dword [rbp - 0x70]	      4586	ops.c	FUNCTION_55	FOR_1
0x937d	          0x89458c	             mov dword [rbp - 0x74], eax	      4586	ops.c	FUNCTION_55	FOR_1
0x9380	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      4587	ops.c	FUNCTION_55	FOR_1	IF_12
0x9387	     0xf8407010000	                            je 0x40094d4	      4587	ops.c	FUNCTION_55	FOR_1	IF_12
0x938d	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      4587	ops.c	FUNCTION_55	FOR_1	IF_12
0x9391	     0xf8efd000000	                           jle 0x40094d4	      4587	ops.c	FUNCTION_55	FOR_1	IF_12
0x9397	    0x8b0500000000	            mov eax, dword [0x040093dd] 	      4590	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x939d	            0x85c0	                           test eax, eax	      4590	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x939f	     0xf84b7000000	                            je 0x400949c	      4590	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x93a5	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      4592	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x93a8	          0x4863d0	                         movsxd rdx, eax	      4592	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x93ab	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4592	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x93af	          0x4801d0	                            add rax, rdx	      4592	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x93b2	        0x488945b8	             mov qword [rbp - 0x48], rax	      4592	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x93b6	    0x8b0500000000	            mov eax, dword [0x040093fc] 	      4593	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x93bc	            0x85c0	                           test eax, eax	      4593	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x93be	            0x7420	                            je 0x4009420	      4593	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x93c0	    0x488b05000000	            mov rax, qword [0x04009407] 	      4593	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x93c7	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4593	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x93cb	        0x488d4aff	                      lea rcx, [rdx - 1]	      4593	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x93cf	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      4593	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x93d3	          0x4889ce	                            mov rsi, rcx	      4593	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x93d6	          0x4889d7	                            mov rdi, rdx	      4593	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x93d9	            0xffd0	                                call rax	      4593	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x93db	          0x83c001	                              add eax, 1	      4593	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x93de	            0xeb05	                           jmp 0x4009425	      4593	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x93e0	      0xb801000000	                              mov eax, 1	      4593	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x93e5	            0x4898	                                    cdqe	      4593	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x93e7	          0x48f7d8	                                 neg rax	      4593	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x93ea	        0x480145b8	            add qword [rbp - 0x48], rax 	      4593	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	CALL_17
0x93ee	    0x488b05000000	            mov rax, qword [0x04009435] 	      4594	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x93f5	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4594	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x93f9	          0x4889d7	                            mov rdi, rdx	      4594	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x93fc	            0xffd0	                                call rax	      4594	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x93fe	          0x89458c	             mov dword [rbp - 0x74], eax	      4594	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13
0x9401	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4595	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14
0x9405	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	      4595	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14
0x9409	     0xf8685000000	                           jbe 0x40094d4	      4595	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14
0x940f	    0x8b0500000000	            mov eax, dword [0x04009455] 	      4597	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x9415	            0x85c0	                           test eax, eax	      4597	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x9417	            0x7420	                            je 0x4009479	      4597	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x9419	    0x488b05000000	            mov rax, qword [0x04009460] 	      4597	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x9420	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4597	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x9424	        0x488d4aff	                      lea rcx, [rdx - 1]	      4597	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x9428	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      4597	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x942c	          0x4889ce	                            mov rsi, rcx	      4597	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x942f	          0x4889d7	                            mov rdi, rdx	      4597	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x9432	            0xffd0	                                call rax	      4597	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x9434	          0x83c001	                              add eax, 1	      4597	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x9437	            0xeb05	                           jmp 0x400947e	      4597	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x9439	      0xb801000000	                              mov eax, 1	      4597	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x943e	            0x4898	                                    cdqe	      4597	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x9440	          0x48f7d8	                                 neg rax	      4597	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x9443	        0x480145b8	            add qword [rbp - 0x48], rax 	      4597	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14	CALL_18
0x9447	    0x488b05000000	            mov rax, qword [0x0400948e] 	      4598	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14
0x944e	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4598	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14
0x9452	          0x4889d7	                            mov rdi, rdx	      4598	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14
0x9455	            0xffd0	                                call rax	      4598	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14
0x9457	          0x894590	             mov dword [rbp - 0x70], eax	      4598	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14
0x945a	            0xeb38	                           jmp 0x40094d4	      4598	ops.c	FUNCTION_55	FOR_1	IF_12	IF_13	IF_14
0x945c	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      4604	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3
0x945f	            0x4898	                                    cdqe	      4604	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3
0x9461	        0x488d50ff	                      lea rdx, [rax - 1]	      4604	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3
0x9465	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4604	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3
0x9469	          0x4801d0	                            add rax, rdx	      4604	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3
0x946c	           0xfb600	                   movzx eax, byte [rax]	      4604	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3
0x946f	           0xfb6c0	                           movzx eax, al	      4604	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3
0x9472	          0x89458c	             mov dword [rbp - 0x74], eax	      4604	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3
0x9475	        0x837d9401	               cmp dword [rbp - 0x6c], 1	      4605	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3	IF_15
0x9479	            0x7e19	                           jle 0x40094d4	      4605	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3	IF_15
0x947b	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      4606	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3	IF_15
0x947e	            0x4898	                                    cdqe	      4606	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3	IF_15
0x9480	        0x488d50fe	                      lea rdx, [rax - 2]	      4606	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3	IF_15
0x9484	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4606	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3	IF_15
0x9488	          0x4801d0	                            add rax, rdx	      4606	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3	IF_15
0x948b	           0xfb600	                   movzx eax, byte [rax]	      4606	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3	IF_15
0x948e	           0xfb6c0	                           movzx eax, al	      4606	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3	IF_15
0x9491	          0x894590	             mov dword [rbp - 0x70], eax	      4606	ops.c	FUNCTION_55	FOR_1	IF_12	ELSE_3	IF_15
0x9494	      0xe800000000	                          call 0x40094d9	      4609	ops.c	FUNCTION_55	FOR_1	CALL_19
0x9499	    0x8b0500000000	            mov eax, dword [0x040094df] 	      4610	ops.c	FUNCTION_55	FOR_1	IF_16
0x949f	            0x85c0	                           test eax, eax	      4610	ops.c	FUNCTION_55	FOR_1	IF_16
0x94a1	            0x740c	                            je 0x40094ef	      4610	ops.c	FUNCTION_55	FOR_1	IF_16
0x94a3	    0xc7459c000000	               mov dword [rbp - 0x64], 0	      4612	ops.c	FUNCTION_55	FOR_1	IF_16
0x94aa	      0xe9f3020000	                           jmp 0x40097e2	      4613	ops.c	FUNCTION_55	FOR_1	IF_16
0x94af	      0x488345c001	               add qword [rbp - 0x40], 1	      4531	ops.c	FUNCTION_55	FOR_1
0x94b4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4531	ops.c	FUNCTION_55	FOR_1
0x94b8	    0x483b8578ffff	             cmp rax, qword [rbp - 0x88]	      4531	ops.c	FUNCTION_55	FOR_1
0x94bf	     0xf8c7ffcffff	                            jl 0x4009184	      4531	ops.c	FUNCTION_55	FOR_1
0x94c5	          0x8b4598	             mov eax, dword [rbp - 0x68]	      4618	ops.c	FUNCTION_55
0x94c8	          0x2b4594	             sub eax, dword [rbp - 0x6c]	      4618	ops.c	FUNCTION_55
0x94cb	            0x89c2	                            mov edx, eax	      4618	ops.c	FUNCTION_55
0x94cd	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4618	ops.c	FUNCTION_55
0x94d4	        0x488d48ff	                      lea rcx, [rax - 1]	      4618	ops.c	FUNCTION_55
0x94d8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4618	ops.c	FUNCTION_55
0x94dc	          0x4801c8	                            add rax, rcx	      4618	ops.c	FUNCTION_55
0x94df	           0xfb600	                   movzx eax, byte [rax]	      4618	ops.c	FUNCTION_55
0x94e2	           0xfb6c0	                           movzx eax, al	      4618	ops.c	FUNCTION_55
0x94e5	            0x29c2	                            sub edx, eax	      4618	ops.c	FUNCTION_55
0x94e7	            0x89d0	                            mov eax, edx	      4618	ops.c	FUNCTION_55
0x94e9	          0x8945a0	             mov dword [rbp - 0x60], eax	      4618	ops.c	FUNCTION_55
0x94ec	          0x8b4598	             mov eax, dword [rbp - 0x68]	      4621	ops.c	FUNCTION_55	CALL_20
0x94ef	          0x83c001	                              add eax, 1	      4621	ops.c	FUNCTION_55	CALL_20
0x94f2	            0x89c7	                            mov edi, eax	      4621	ops.c	FUNCTION_55	CALL_20
0x94f4	      0xe800000000	                          call 0x4009539	      4621	ops.c	FUNCTION_55	CALL_20
0x94f9	        0x488945e0	             mov qword [rbp - 0x20], rax	      4621	ops.c	FUNCTION_55	CALL_20
0x94fd	          0x8b4598	             mov eax, dword [rbp - 0x68]	      4622	ops.c	FUNCTION_55
0x9500	          0x4863d0	                         movsxd rdx, eax	      4622	ops.c	FUNCTION_55
0x9503	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4622	ops.c	FUNCTION_55
0x9507	          0x4801d0	                            add rax, rdx	      4622	ops.c	FUNCTION_55
0x950a	        0x488945b8	             mov qword [rbp - 0x48], rax	      4622	ops.c	FUNCTION_55
0x950e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4623	ops.c	FUNCTION_55
0x9512	          0xc60000	                       mov byte [rax], 0	      4623	ops.c	FUNCTION_55
0x9515	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4632	ops.c	FUNCTION_55	FOR_2
0x951c	        0x4883e801	                              sub rax, 1	      4632	ops.c	FUNCTION_55	FOR_2
0x9520	        0x488945c0	             mov qword [rbp - 0x40], rax	      4632	ops.c	FUNCTION_55	FOR_2
0x9524	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      4634	ops.c	FUNCTION_55	FOR_2
0x9527	            0x4898	                                    cdqe	      4634	ops.c	FUNCTION_55	FOR_2
0x9529	          0x48f7d8	                                 neg rax	      4634	ops.c	FUNCTION_55	FOR_2
0x952c	        0x480145b8	            add qword [rbp - 0x48], rax 	      4634	ops.c	FUNCTION_55	FOR_2
0x9530	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      4635	ops.c	FUNCTION_55	FOR_2	CALL_21
0x9533	          0x4863d0	                         movsxd rdx, eax	      4635	ops.c	FUNCTION_55	FOR_2	CALL_21
0x9536	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	      4635	ops.c	FUNCTION_55	FOR_2	CALL_21
0x953a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4635	ops.c	FUNCTION_55	FOR_2	CALL_21
0x953e	          0x4889ce	                            mov rsi, rcx	      4635	ops.c	FUNCTION_55	FOR_2	CALL_21
0x9541	          0x4889c7	                            mov rdi, rax	      4635	ops.c	FUNCTION_55	FOR_2	CALL_21
0x9544	      0xe800000000	                          call 0x4009589	      4635	ops.c	FUNCTION_55	FOR_2	CALL_21
0x9549	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      4636	ops.c	FUNCTION_55	FOR_2	IF_17
0x954d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4636	ops.c	FUNCTION_55	FOR_2	IF_17
0x9551	          0x4801d0	                            add rax, rdx	      4636	ops.c	FUNCTION_55	FOR_2	IF_17
0x9554	           0xfb600	                   movzx eax, byte [rax]	      4636	ops.c	FUNCTION_55	FOR_2	IF_17
0x9557	            0x84c0	                             test al, al	      4636	ops.c	FUNCTION_55	FOR_2	IF_17
0x9559	            0x743a	                            je 0x40095d5	      4636	ops.c	FUNCTION_55	FOR_2	IF_17
0x955b	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      4638	ops.c	FUNCTION_55	FOR_2	IF_17
0x955f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4638	ops.c	FUNCTION_55	FOR_2	IF_17
0x9563	          0x4801d0	                            add rax, rdx	      4638	ops.c	FUNCTION_55	FOR_2	IF_17
0x9566	           0xfb600	                   movzx eax, byte [rax]	      4638	ops.c	FUNCTION_55	FOR_2	IF_17
0x9569	           0xfb6c0	                           movzx eax, al	      4638	ops.c	FUNCTION_55	FOR_2	IF_17
0x956c	          0x48f7d8	                                 neg rax	      4638	ops.c	FUNCTION_55	FOR_2	IF_17
0x956f	        0x480145b8	            add qword [rbp - 0x48], rax 	      4638	ops.c	FUNCTION_55	FOR_2	IF_17
0x9573	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      4639	ops.c	FUNCTION_55	FOR_2	IF_17	CALL_22
0x9577	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4639	ops.c	FUNCTION_55	FOR_2	IF_17	CALL_22
0x957b	          0x4801d0	                            add rax, rdx	      4639	ops.c	FUNCTION_55	FOR_2	IF_17	CALL_22
0x957e	           0xfb600	                   movzx eax, byte [rax]	      4639	ops.c	FUNCTION_55	FOR_2	IF_17	CALL_22
0x9581	           0xfb6d0	                           movzx edx, al	      4639	ops.c	FUNCTION_55	FOR_2	IF_17	CALL_22
0x9584	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      4639	ops.c	FUNCTION_55	FOR_2	IF_17	CALL_22
0x9588	      0xbe20000000	                           mov esi, 0x20	      4639	ops.c	FUNCTION_55	FOR_2	IF_17	CALL_22
0x958d	          0x4889c7	                            mov rdi, rax	      4639	ops.c	FUNCTION_55	FOR_2	IF_17	CALL_22
0x9590	      0xe800000000	                          call 0x40095d5	      4639	ops.c	FUNCTION_55	FOR_2	IF_17	CALL_22
0x9595	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      4642	ops.c	FUNCTION_55	FOR_2
0x9599	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4642	ops.c	FUNCTION_55	FOR_2
0x959d	          0x4889d1	                            mov rcx, rdx	      4642	ops.c	FUNCTION_55	FOR_2
0x95a0	          0x4829c1	                            sub rcx, rax	      4642	ops.c	FUNCTION_55	FOR_2
0x95a3	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      4642	ops.c	FUNCTION_55	FOR_2
0x95a7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4642	ops.c	FUNCTION_55	FOR_2
0x95ab	          0x4801d0	                            add rax, rdx	      4642	ops.c	FUNCTION_55	FOR_2
0x95ae	           0xfb600	                   movzx eax, byte [rax]	      4642	ops.c	FUNCTION_55	FOR_2
0x95b1	           0xfb6c0	                           movzx eax, al	      4642	ops.c	FUNCTION_55	FOR_2
0x95b4	          0x4801c1	                            add rcx, rax	      4642	ops.c	FUNCTION_55	FOR_2
0x95b7	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      4642	ops.c	FUNCTION_55	FOR_2
0x95bb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4642	ops.c	FUNCTION_55	FOR_2
0x95bf	          0x4829c2	                            sub rdx, rax	      4642	ops.c	FUNCTION_55	FOR_2
0x95c2	          0x4889d0	                            mov rax, rdx	      4642	ops.c	FUNCTION_55	FOR_2
0x95c5	          0x4829c1	                            sub rcx, rax	      4641	ops.c	FUNCTION_55	FOR_2	CALL_23
0x95c8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4641	ops.c	FUNCTION_55	FOR_2	CALL_23
0x95cc	          0x48f7d8	                                 neg rax	      4641	ops.c	FUNCTION_55	FOR_2	CALL_23
0x95cf	          0x4889c2	                            mov rdx, rax	      4641	ops.c	FUNCTION_55	FOR_2	CALL_23
0x95d2	    0x488b05000000	            mov rax, qword [0x04009619] 	      4641	ops.c	FUNCTION_55	FOR_2	CALL_23
0x95d9	        0x488b7038	            mov rsi, qword [rax + 0x38] 	      4641	ops.c	FUNCTION_55	FOR_2	CALL_23
0x95dd	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4641	ops.c	FUNCTION_55	FOR_2	CALL_23
0x95e1	          0x4801f0	                            add rax, rsi	      4641	ops.c	FUNCTION_55	FOR_2	CALL_23
0x95e4	      0xbe00000000	                              mov esi, 0	      4641	ops.c	FUNCTION_55	FOR_2	CALL_23
0x95e9	          0x4889c7	                            mov rdi, rax	      4641	ops.c	FUNCTION_55	FOR_2	CALL_23
0x95ec	      0xe800000000	                          call 0x4009631	      4641	ops.c	FUNCTION_55	FOR_2	CALL_23
0x95f1	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      4643	ops.c	FUNCTION_55	FOR_2	IF_18
0x95f6	     0xf8484000000	                            je 0x40096c0	      4643	ops.c	FUNCTION_55	FOR_2	IF_18
0x95fc	    0x488b05000000	            mov rax, qword [0x04009643] 	      4645	ops.c	FUNCTION_55	FOR_2	CALL_24
0x9603	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4645	ops.c	FUNCTION_55	FOR_2	CALL_24
0x9607	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4645	ops.c	FUNCTION_55	FOR_2	CALL_24
0x960b	          0x4801d0	                            add rax, rdx	      4645	ops.c	FUNCTION_55	FOR_2	CALL_24
0x960e	        0x4883e801	                              sub rax, 1	      4645	ops.c	FUNCTION_55	FOR_2	CALL_24
0x9612	          0x4889c7	                            mov rdi, rax	      4645	ops.c	FUNCTION_55	FOR_2	CALL_24
0x9615	      0xe800000000	                          call 0x400965a	      4645	ops.c	FUNCTION_55	FOR_2	CALL_24
0x961a	        0x488945b0	             mov qword [rbp - 0x50], rax	      4645	ops.c	FUNCTION_55	FOR_2	CALL_24
0x961e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      4645	ops.c	FUNCTION_55	FOR_2	CALL_24
0x9622	        0x488945a8	             mov qword [rbp - 0x58], rax	      4645	ops.c	FUNCTION_55	FOR_2	CALL_24
0x9626	        0x837da400	               cmp dword [rbp - 0x5c], 0	      4647	ops.c	FUNCTION_55	FOR_2	IF_19
0x962a	            0x741b	                            je 0x4009687	      4647	ops.c	FUNCTION_55	FOR_2	IF_19
0x962c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4648	ops.c	FUNCTION_55	FOR_2	IF_19
0x9630	        0x48c1e002	                              shl rax, 2	      4648	ops.c	FUNCTION_55	FOR_2	IF_19
0x9634	        0x488d50fc	                      lea rdx, [rax - 4]	      4648	ops.c	FUNCTION_55	FOR_2	IF_19
0x9638	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4648	ops.c	FUNCTION_55	FOR_2	IF_19
0x963c	          0x4801d0	                            add rax, rdx	      4648	ops.c	FUNCTION_55	FOR_2	IF_19
0x963f	            0x8b00	                    mov eax, dword [rax]	      4648	ops.c	FUNCTION_55	FOR_2	IF_19
0x9641	            0x4898	                                    cdqe	      4648	ops.c	FUNCTION_55	FOR_2	IF_19
0x9643	        0x480145a8	            add qword [rbp - 0x58], rax 	      4648	ops.c	FUNCTION_55	FOR_2	IF_19
0x9647	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      4650	ops.c	FUNCTION_55	FOR_2	IF_20
0x964e	            0x7417	                            je 0x40096a7	      4650	ops.c	FUNCTION_55	FOR_2	IF_20
0x9650	      0x48837dc001	               cmp qword [rbp - 0x40], 1	      4650	ops.c	FUNCTION_55	FOR_2	IF_20
0x9655	            0x7e10	                           jle 0x40096a7	      4650	ops.c	FUNCTION_55	FOR_2	IF_20
0x9657	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4651	ops.c	FUNCTION_55	FOR_2	CALL_25
0x965b	          0x4889c7	                            mov rdi, rax	      4651	ops.c	FUNCTION_55	FOR_2	CALL_25
0x965e	      0xe800000000	                          call 0x40096a3	      4651	ops.c	FUNCTION_55	FOR_2	CALL_25
0x9663	        0x488945a8	             mov qword [rbp - 0x58], rax	      4651	ops.c	FUNCTION_55	FOR_2	CALL_25
0x9667	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4652	ops.c	FUNCTION_55	FOR_2	CALL_26
0x966b	          0x4889c7	                            mov rdi, rax	      4652	ops.c	FUNCTION_55	FOR_2	CALL_26
0x966e	      0xe800000000	                          call 0x40096b3	      4652	ops.c	FUNCTION_55	FOR_2	CALL_26
0x9673	          0x894594	             mov dword [rbp - 0x6c], eax	      4652	ops.c	FUNCTION_55	FOR_2	CALL_26
0x9676	      0x48836dc001	               sub qword [rbp - 0x40], 1	      4632	ops.c	FUNCTION_55	FOR_2
0x967b	      0xe9a4feffff	                           jmp 0x4009564	      4653	ops.c	FUNCTION_55	FOR_2
0x9680	              0x90	                                     nop	      4644	ops.c	FUNCTION_55	FOR_2	IF_18
0x9681	    0x488b05000000	            mov rax, qword [0x040096c8] 	      4654	ops.c	FUNCTION_55	CALL_27
0x9688	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4654	ops.c	FUNCTION_55	CALL_27
0x968c	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      4654	ops.c	FUNCTION_55	CALL_27
0x9690	      0xba00000000	                              mov edx, 0	      4654	ops.c	FUNCTION_55	CALL_27
0x9695	          0x4889ce	                            mov rsi, rcx	      4654	ops.c	FUNCTION_55	CALL_27
0x9698	          0x4889c7	                            mov rdi, rax	      4654	ops.c	FUNCTION_55	CALL_27
0x969b	      0xe800000000	                          call 0x40096e0	      4654	ops.c	FUNCTION_55	CALL_27
0x96a0	    0x83bd68ffffff	               cmp dword [rbp - 0x98], 0	      4656	ops.c	FUNCTION_55	IF_21
0x96a7	            0x743a	                            je 0x4009723	      4656	ops.c	FUNCTION_55	IF_21
0x96a9	    0x488b05000000	            mov rax, qword [0x040096f0] 	      4659	ops.c	FUNCTION_55	IF_21
0x96b0	        0x488b4008	                mov rax, qword [rax + 8]	      4659	ops.c	FUNCTION_55	IF_21
0x96b4	    0x488b15000000	            mov rdx, qword [0x040096fb] 	      4659	ops.c	FUNCTION_55	IF_21
0x96bb	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	      4659	ops.c	FUNCTION_55	IF_21
0x96bf	    0x488990f01100	          mov qword [rax + 0x11f0], rdx 	      4659	ops.c	FUNCTION_55	IF_21
0x96c6	    0x488b05000000	            mov rax, qword [0x0400970d] 	      4660	ops.c	FUNCTION_55	IF_21	CALL_28
0x96cd	        0x488b5808	                mov rbx, qword [rax + 8]	      4660	ops.c	FUNCTION_55	IF_21	CALL_28
0x96d1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4660	ops.c	FUNCTION_55	IF_21	CALL_28
0x96d5	          0x4889c7	                            mov rdi, rax	      4660	ops.c	FUNCTION_55	IF_21	CALL_28
0x96d8	      0xe800000000	                          call 0x400971d	      4660	ops.c	FUNCTION_55	IF_21	CALL_28
0x96dd	    0x8983f8110000	          mov dword [rbx + 0x11f8], eax 	      4660	ops.c	FUNCTION_55	IF_21	CALL_28
0x96e3	    0x488b05000000	            mov rax, qword [0x0400972a] 	      4666	ops.c	FUNCTION_55
0x96ea	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4666	ops.c	FUNCTION_55
0x96ee	        0x488d5001	                      lea rdx, [rax + 1]	      4665	ops.c	FUNCTION_55	CALL_29
0x96f2	    0x488b05000000	            mov rax, qword [0x04009739] 	      4665	ops.c	FUNCTION_55	CALL_29
0x96f9	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4665	ops.c	FUNCTION_55	CALL_29
0x96fd	          0x8b7594	             mov esi, dword [rbp - 0x6c]	      4665	ops.c	FUNCTION_55	CALL_29
0x9700	      0xb900000000	                              mov ecx, 0	      4665	ops.c	FUNCTION_55	CALL_29
0x9705	          0x4889c7	                            mov rdi, rax	      4665	ops.c	FUNCTION_55	CALL_29
0x9708	      0xe800000000	                          call 0x400974d	      4665	ops.c	FUNCTION_55	CALL_29
0x970d	    0x488b05000000	            mov rax, qword [0x04009754] 	      4673	ops.c	FUNCTION_55
0x9714	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4673	ops.c	FUNCTION_55
0x9718	        0x488945c0	             mov qword [rbp - 0x40], rax	      4673	ops.c	FUNCTION_55
0x971c	    0x488b05000000	            mov rax, qword [0x04009763] 	      4674	ops.c	FUNCTION_55
0x9723	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4674	ops.c	FUNCTION_55
0x9727	        0x4883c201	                              add rdx, 1	      4674	ops.c	FUNCTION_55
0x972b	        0x48895038	             mov qword [rax + 0x38], rdx	      4674	ops.c	FUNCTION_55
0x972f	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4675	ops.c	FUNCTION_55	CALL_30
0x9736	        0x4883e801	                              sub rax, 1	      4675	ops.c	FUNCTION_55	CALL_30
0x973a	      0xbe00000000	                              mov esi, 0	      4675	ops.c	FUNCTION_55	CALL_30
0x973f	          0x4889c7	                            mov rdi, rax	      4675	ops.c	FUNCTION_55	CALL_30
0x9742	      0xe800000000	                          call 0x4009787	      4675	ops.c	FUNCTION_55	CALL_30
0x9747	    0x488b05000000	            mov rax, qword [0x0400978e] 	      4676	ops.c	FUNCTION_55
0x974e	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      4676	ops.c	FUNCTION_55
0x9752	        0x48895038	             mov qword [rax + 0x38], rdx	      4676	ops.c	FUNCTION_55
0x9756	    0x488b1d000000	            mov rbx, qword [0x0400979d] 	      4683	ops.c	FUNCTION_55
0x975d	    0x488b05000000	            mov rax, qword [0x040097a4] 	      4684	ops.c	FUNCTION_55	CALL_31
0x9764	      0xbe71000000	                           mov esi, 0x71	      4684	ops.c	FUNCTION_55	CALL_31
0x9769	          0x4889c7	                            mov rdi, rax	      4684	ops.c	FUNCTION_55	CALL_31
0x976c	      0xe800000000	                          call 0x40097b1	      4684	ops.c	FUNCTION_55	CALL_31
0x9771	          0x4885c0	                           test rax, rax	      4684	ops.c	FUNCTION_55	CALL_31
0x9774	            0x7405	                            je 0x40097bb	      4684	ops.c	FUNCTION_55	CALL_31
0x9776	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      4684	ops.c	FUNCTION_55	CALL_31
0x9779	            0xeb03	                           jmp 0x40097be	      4684	ops.c	FUNCTION_55	CALL_31
0x977b	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      4684	ops.c	FUNCTION_55	CALL_31
0x977e	          0x894340	             mov dword [rbx + 0x40], eax	      4683	ops.c	FUNCTION_55
0x9781	      0xe800000000	                          call 0x40097c6	      4685	ops.c	FUNCTION_55	CALL_32
0x9786	    0x488b05000000	            mov rax, qword [0x040097cd] 	      4688	ops.c	FUNCTION_55
0x978d	    0xc74044000000	               mov dword [rax + 0x44], 0	      4688	ops.c	FUNCTION_55
0x9794	    0x488b05000000	            mov rax, qword [0x040097db] 	      4690	ops.c	FUNCTION_55
0x979b	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      4690	ops.c	FUNCTION_55
0x97a2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      4693	ops.c	FUNCTION_55	CALL_33
0x97a6	          0x4889c7	                            mov rdi, rax	      4693	ops.c	FUNCTION_55	CALL_33
0x97a9	      0xe800000000	                          call 0x40097ee	      4693	ops.c	FUNCTION_55	CALL_33
0x97ae	        0x837da400	               cmp dword [rbp - 0x5c], 0	      4695	ops.c	FUNCTION_55	IF_22
0x97b2	            0x740c	                            je 0x4009800	      4695	ops.c	FUNCTION_55	IF_22
0x97b4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4696	ops.c	FUNCTION_55	CALL_34
0x97b8	          0x4889c7	                            mov rdi, rax	      4696	ops.c	FUNCTION_55	CALL_34
0x97bb	      0xe800000000	                          call 0x4009800	      4696	ops.c	FUNCTION_55	CALL_34
0x97c0	          0x8b459c	             mov eax, dword [rbp - 0x64]	      4698	ops.c	FUNCTION_55
0x97c3	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      4699	ops.c	FUNCTION_55
0x97c7	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      4699	ops.c	FUNCTION_55
0x97d0	            0x7405	                            je 0x4009817	      4699	ops.c	FUNCTION_55
0x97d2	      0xe800000000	                          call 0x4009817	      4699	ops.c	FUNCTION_55
0x97d7	    0x4881c4980000	                           add rsp, 0x98	      4699	ops.c	FUNCTION_55
0x97de	              0x5b	                                 pop rbx	      4699	ops.c	FUNCTION_55
0x97df	              0x5d	                                 pop rbp	      4699	ops.c	FUNCTION_55
0x97e0	              0xc3	                                     ret	      4699	ops.c	FUNCTION_55
get_extra_op_char	CALL,0:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,0	13
0x101	              0x55	                                push rbp	       222	ops.c	FUNCTION_4
0x102	          0x4889e5	                            mov rbp, rsp	       222	ops.c	FUNCTION_4
0x105	          0x897dfc	                mov dword [rbp - 4], edi	       222	ops.c	FUNCTION_4
0x108	          0x8b45fc	                mov eax, dword [rbp - 4]	       223	ops.c	FUNCTION_4
0x10b	          0x4863d0	                         movsxd rdx, eax	       223	ops.c	FUNCTION_4
0x10e	          0x4889d0	                            mov rax, rdx	       223	ops.c	FUNCTION_4
0x111	          0x4801c0	                            add rax, rax	       223	ops.c	FUNCTION_4
0x114	          0x4801d0	                            add rax, rdx	       223	ops.c	FUNCTION_4
0x117	    0x480500000000	                              add rax, 0	       223	ops.c	FUNCTION_4
0x11d	           0xfb600	                   movzx eax, byte [rax]	       223	ops.c	FUNCTION_4
0x120	           0xfbec0	                           movsx eax, al	       223	ops.c	FUNCTION_4
0x123	              0x5d	                                 pop rbp	       224	ops.c	FUNCTION_4
0x124	              0xc3	                                     ret	       224	ops.c	FUNCTION_4
do_put	CALL,105:FOR,8:SWITCH,0:functions,0:WHILE,1:DO,1:ELSE,27:IF,100	1583
0x6a1e	              0x55	                                push rbp	      3418	ops.c	FUNCTION_48
0x6a1f	          0x4889e5	                            mov rbp, rsp	      3418	ops.c	FUNCTION_48
0x6a22	              0x53	                                push rbx	      3418	ops.c	FUNCTION_48
0x6a23	    0x4881ec580100	                          sub rsp, 0x158	      3418	ops.c	FUNCTION_48
0x6a2a	    0x89bdbcfeffff	            mov dword [rbp - 0x144], edi	      3418	ops.c	FUNCTION_48
0x6a30	    0x89b5b8feffff	            mov dword [rbp - 0x148], esi	      3418	ops.c	FUNCTION_48
0x6a36	    0x488995b0feff	            mov qword [rbp - 0x150], rdx	      3418	ops.c	FUNCTION_48
0x6a3d	    0x898dacfeffff	            mov dword [rbp - 0x154], ecx	      3418	ops.c	FUNCTION_48
0x6a43	    0x64488b042528	                mov rax, qword fs:[0x28]	      3418	ops.c	FUNCTION_48
0x6a4c	        0x488945e8	             mov qword [rbp - 0x18], rax	      3418	ops.c	FUNCTION_48
0x6a50	            0x31c0	                            xor eax, eax	      3418	ops.c	FUNCTION_48
0x6a52	    0xc785d0feffff	              mov dword [rbp - 0x130], 0	      3422	ops.c	FUNCTION_48
0x6a5c	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	      3429	ops.c	FUNCTION_48
0x6a67	    0xc785e0feffff	              mov dword [rbp - 0x120], 0	      3432	ops.c	FUNCTION_48
0x6a71	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	      3435	ops.c	FUNCTION_48
0x6a7c	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	      3436	ops.c	FUNCTION_48
0x6a87	    0xc785e8feffff	              mov dword [rbp - 0x118], 0	      3439	ops.c	FUNCTION_48
0x6a91	    0xc785ecfeffff	              mov dword [rbp - 0x114], 0	      3440	ops.c	FUNCTION_48
0x6a9b	    0xc785f0feffff	              mov dword [rbp - 0x110], 1	      3441	ops.c	FUNCTION_48
0x6aa5	    0xc785f4feffff	              mov dword [rbp - 0x10c], 0	      3442	ops.c	FUNCTION_48
0x6aaf	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	      3444	ops.c	FUNCTION_48
0x6aba	    0xc785ccfeffff	              mov dword [rbp - 0x134], 0	      3445	ops.c	FUNCTION_48
0x6ac4	    0x488d85bcfeff	                  lea rax, [rbp - 0x144]	      3450	ops.c	FUNCTION_48	CALL_1
0x6acb	          0x4889c7	                            mov rdi, rax	      3450	ops.c	FUNCTION_48	CALL_1
0x6ace	      0xe800000000	                          call 0x4006b13	      3450	ops.c	FUNCTION_48	CALL_1
0x6ad3	    0x8b85bcfeffff	            mov eax, dword [rbp - 0x144]	      3451	ops.c	FUNCTION_48	CALL_2
0x6ad9	            0x89c7	                            mov edi, eax	      3451	ops.c	FUNCTION_48	CALL_2
0x6adb	      0xe800000000	                          call 0x4006b20	      3451	ops.c	FUNCTION_48	CALL_2
0x6ae0	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      3454	ops.c	FUNCTION_48	IF_1
0x6ae6	          0x83e001	                              and eax, 1	      3454	ops.c	FUNCTION_48	IF_1
0x6ae9	            0x85c0	                           test eax, eax	      3454	ops.c	FUNCTION_48	IF_1
0x6aeb	            0x740b	                            je 0x4006b38	      3454	ops.c	FUNCTION_48	IF_1
0x6aed	      0xe800000000	                          call 0x4006b32	      3455	ops.c	FUNCTION_48	CALL_3
0x6af2	    0x8985e8feffff	            mov dword [rbp - 0x118], eax	      3455	ops.c	FUNCTION_48	CALL_3
0x6af8	    0x488b0d000000	            mov rcx, qword [0x04006b3f] 	      3457	ops.c	FUNCTION_48
0x6aff	    0x488b05000000	            mov rax, qword [0x04006b46] 	      3457	ops.c	FUNCTION_48
0x6b06	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      3457	ops.c	FUNCTION_48
0x6b0a	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3457	ops.c	FUNCTION_48
0x6b0e	    0x488981d01100	          mov qword [rcx + 0x11d0], rax 	      3457	ops.c	FUNCTION_48
0x6b15	    0x488991d81100	          mov qword [rcx + 0x11d8], rdx 	      3457	ops.c	FUNCTION_48
0x6b1c	    0x488b0d000000	            mov rcx, qword [0x04006b63] 	      3458	ops.c	FUNCTION_48
0x6b23	    0x488b05000000	            mov rax, qword [0x04006b6a] 	      3458	ops.c	FUNCTION_48
0x6b2a	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      3458	ops.c	FUNCTION_48
0x6b2e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3458	ops.c	FUNCTION_48
0x6b32	    0x488981f01100	          mov qword [rcx + 0x11f0], rax 	      3458	ops.c	FUNCTION_48
0x6b39	    0x488991f81100	          mov qword [rcx + 0x11f8], rdx 	      3458	ops.c	FUNCTION_48
0x6b40	    0x8b85bcfeffff	            mov eax, dword [rbp - 0x144]	      3464	ops.c	FUNCTION_48	IF_2
0x6b46	          0x83f82e	                           cmp eax, 0x2e	      3464	ops.c	FUNCTION_48	IF_2
0x6b49	     0xf8591000000	                           jne 0x4006c20	      3464	ops.c	FUNCTION_48	IF_2
0x6b4f	    0x8b0500000000	            mov eax, dword [0x04006b95] 	      3466	ops.c	FUNCTION_48	IF_2	IF_3
0x6b55	            0x85c0	                           test eax, eax	      3466	ops.c	FUNCTION_48	IF_2	IF_3
0x6b57	            0x740d	                            je 0x4006ba6	      3466	ops.c	FUNCTION_48	IF_2	IF_3
0x6b59	    0x8b0500000000	            mov eax, dword [0x04006b9f] 	      3467	ops.c	FUNCTION_48	IF_2	CALL_4
0x6b5f	            0x89c7	                            mov edi, eax	      3467	ops.c	FUNCTION_48	IF_2	CALL_4
0x6b61	      0xe800000000	                          call 0x4006ba6	      3467	ops.c	FUNCTION_48	IF_2	CALL_4
0x6b66	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 1	      3468	ops.c	FUNCTION_48	IF_2	CALL_5
0x6b6d	            0x7518	                           jne 0x4006bc7	      3468	ops.c	FUNCTION_48	IF_2	CALL_5
0x6b6f	    0x4883bdb0feff	cmp qword [rbp - 0x150], 0xffffffffffffffff	      3468	ops.c	FUNCTION_48	IF_2	CALL_5
0x6b77	            0x7507	                           jne 0x4006bc0	      3468	ops.c	FUNCTION_48	IF_2	CALL_5
0x6b79	      0xb86f000000	                           mov eax, 0x6f	      3468	ops.c	FUNCTION_48	IF_2	CALL_5
0x6b7e	            0xeb1d	                           jmp 0x4006bdd	      3468	ops.c	FUNCTION_48	IF_2	CALL_5
0x6b80	      0xb861000000	                           mov eax, 0x61	      3468	ops.c	FUNCTION_48	IF_2	CALL_5
0x6b85	            0xeb16	                           jmp 0x4006bdd	      3468	ops.c	FUNCTION_48	IF_2	CALL_5
0x6b87	    0x4883bdb0feff	cmp qword [rbp - 0x150], 0xffffffffffffffff	      3469	ops.c	FUNCTION_48	IF_2
0x6b8f	            0x7507	                           jne 0x4006bd8	      3469	ops.c	FUNCTION_48	IF_2
0x6b91	      0xb84f000000	                           mov eax, 0x4f	      3469	ops.c	FUNCTION_48	IF_2
0x6b96	            0xeb05	                           jmp 0x4006bdd	      3469	ops.c	FUNCTION_48	IF_2
0x6b98	      0xb869000000	                           mov eax, 0x69	      3469	ops.c	FUNCTION_48	IF_2
0x6b9d	    0x488b8db0feff	            mov rcx, qword [rbp - 0x150]	      3468	ops.c	FUNCTION_48	IF_2	CALL_5
0x6ba4	      0xba00000000	                              mov edx, 0	      3468	ops.c	FUNCTION_48	IF_2	CALL_5
0x6ba9	          0x4889ce	                            mov rsi, rcx	      3468	ops.c	FUNCTION_48	IF_2	CALL_5
0x6bac	            0x89c7	                            mov edi, eax	      3468	ops.c	FUNCTION_48	IF_2	CALL_5
0x6bae	      0xe800000000	                          call 0x4006bf3	      3468	ops.c	FUNCTION_48	IF_2	CALL_5
0x6bb3	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      3472	ops.c	FUNCTION_48	IF_2	IF_4	CALL_6
0x6bb9	          0x83e002	                              and eax, 2	      3472	ops.c	FUNCTION_48	IF_2	IF_4	CALL_6
0x6bbc	            0x85c0	                           test eax, eax	      3472	ops.c	FUNCTION_48	IF_2	IF_4	CALL_6
0x6bbe	     0xf84211c0000	                            je 0x4008825	      3472	ops.c	FUNCTION_48	IF_2	IF_4	CALL_6
0x6bc4	      0xe800000000	                          call 0x4006c09	      3472	ops.c	FUNCTION_48	IF_2	IF_4	CALL_6
0x6bc9	            0x85c0	                           test eax, eax	      3472	ops.c	FUNCTION_48	IF_2	IF_4	CALL_6
0x6bcb	     0xf84141c0000	                            je 0x4008825	      3472	ops.c	FUNCTION_48	IF_2	IF_4	CALL_6
0x6bd1	      0xbf6c000000	                           mov edi, 0x6c	      3473	ops.c	FUNCTION_48	IF_2	CALL_7
0x6bd6	      0xe800000000	                          call 0x4006c1b	      3473	ops.c	FUNCTION_48	IF_2	CALL_7
0x6bdb	      0xe9051c0000	                           jmp 0x4008825	      3474	ops.c	FUNCTION_48	IF_2
0x6be0	    0x8b85bcfeffff	            mov eax, dword [rbp - 0x144]	      3481	ops.c	FUNCTION_48	IF_5	CALL_8
0x6be6	    0x488d95ccfeff	                  lea rdx, [rbp - 0x134]	      3481	ops.c	FUNCTION_48	IF_5	CALL_8
0x6bed	    0x488db520ffff	                   lea rsi, [rbp - 0xe0]	      3481	ops.c	FUNCTION_48	IF_5	CALL_8
0x6bf4	      0xb901000000	                              mov ecx, 1	      3481	ops.c	FUNCTION_48	IF_5	CALL_8
0x6bf9	            0x89c7	                            mov edi, eax	      3481	ops.c	FUNCTION_48	IF_5	CALL_8
0x6bfb	      0xe800000000	                          call 0x4006c40	      3481	ops.c	FUNCTION_48	IF_5	CALL_8
0x6c00	            0x85c0	                           test eax, eax	      3481	ops.c	FUNCTION_48	IF_5	CALL_8
0x6c02	            0x7410	                            je 0x4006c54	      3481	ops.c	FUNCTION_48	IF_5	CALL_8
0x6c04	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      3483	ops.c	FUNCTION_48	IF_5	IF_6
0x6c0b	          0x4885c0	                           test rax, rax	      3483	ops.c	FUNCTION_48	IF_5	IF_6
0x6c0e	     0xf84d41b0000	                            je 0x4008828	      3483	ops.c	FUNCTION_48	IF_5	IF_6
0x6c14	    0x488b05000000	            mov rax, qword [0x04006c5b] 	      3490	ops.c	FUNCTION_48	CALL_9
0x6c1b	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3490	ops.c	FUNCTION_48	CALL_9
0x6c1f	        0x488d5001	                      lea rdx, [rax + 1]	      3490	ops.c	FUNCTION_48	CALL_9
0x6c23	    0x488b05000000	            mov rax, qword [0x04006c6a] 	      3490	ops.c	FUNCTION_48	CALL_9
0x6c2a	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3490	ops.c	FUNCTION_48	CALL_9
0x6c2e	          0x4889d6	                            mov rsi, rdx	      3490	ops.c	FUNCTION_48	CALL_9
0x6c31	          0x4889c7	                            mov rdi, rax	      3490	ops.c	FUNCTION_48	CALL_9
0x6c34	      0xe800000000	                          call 0x4006c79	      3490	ops.c	FUNCTION_48	CALL_9
0x6c39	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      3493	ops.c	FUNCTION_48	IF_7
0x6c40	          0x4885c0	                           test rax, rax	      3493	ops.c	FUNCTION_48	IF_7
0x6c43	     0xf8437010000	                            je 0x4006dc0	      3493	ops.c	FUNCTION_48	IF_7
0x6c49	    0xc785d4feffff	              mov dword [rbp - 0x12c], 0	      3495	ops.c	FUNCTION_48	IF_7
0x6c53	    0x8b85bcfeffff	            mov eax, dword [rbp - 0x144]	      3497	ops.c	FUNCTION_48	IF_7	IF_8
0x6c59	          0x83f83d	                           cmp eax, 0x3d	      3497	ops.c	FUNCTION_48	IF_7	IF_8
0x6c5c	     0xf8503010000	                           jne 0x4006da5	      3497	ops.c	FUNCTION_48	IF_7	IF_8
0x6c62	    0x48c78530ffff	               mov qword [rbp - 0xd0], 0	      3504	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1
0x6c6d	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      3505	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1
0x6c74	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3505	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1
0x6c7b	      0xe99c000000	                           jmp 0x4006d5c	      3506	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1
0x6c80	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      3508	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_9
0x6c88	            0x7423	                            je 0x4006ced	      3508	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_9
0x6c8a	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      3509	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_9
0x6c91	    0x488d14c50000	                        lea rdx, [rax*8]	      3509	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_9
0x6c99	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3509	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_9
0x6ca0	          0x4801c2	                            add rdx, rax	      3509	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_9
0x6ca3	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3509	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_9
0x6caa	          0x488902	                    mov qword [rdx], rax	      3509	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_9
0x6cad	    0x48838530ffff	               add qword [rbp - 0xd0], 1	      3510	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1
0x6cb5	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3511	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	CALL_10
0x6cbc	      0xbe0a000000	                            mov esi, 0xa	      3511	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	CALL_10
0x6cc1	          0x4889c7	                            mov rdi, rax	      3511	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	CALL_10
0x6cc4	      0xe800000000	                          call 0x4006d09	      3511	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	CALL_10
0x6cc9	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3511	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	CALL_10
0x6cd0	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3512	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x6cd7	          0x4885c0	                           test rax, rax	      3512	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x6cda	            0x7440	                            je 0x4006d5c	      3512	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x6cdc	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      3514	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_11
0x6ce4	            0x740a	                            je 0x4006d30	      3514	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_11
0x6ce6	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3515	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_11
0x6ced	          0xc60000	                       mov byte [rax], 0	      3515	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_11
0x6cf0	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3516	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x6cf7	        0x4883c001	                              add rax, 1	      3516	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x6cfb	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3516	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10
0x6d02	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3518	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_12
0x6d09	           0xfb600	                   movzx eax, byte [rax]	      3518	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_12
0x6d0c	            0x84c0	                             test al, al	      3518	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_12
0x6d0e	            0x750c	                           jne 0x4006d5c	      3518	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_12
0x6d10	    0xc785d4feffff	              mov dword [rbp - 0x12c], 1	      3520	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_12
0x6d1a	            0xeb10	                           jmp 0x4006d6c	      3521	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1	IF_10	IF_12
0x6d1c	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3506	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1
0x6d23	          0x4885c0	                           test rax, rax	      3506	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1
0x6d26	     0xf8554ffffff	                           jne 0x4006cc0	      3506	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	WHILE_1
0x6d2c	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      3525	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	IF_13
0x6d34	     0xf85a4000000	                           jne 0x4006e1e	      3525	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	IF_13
0x6d3a	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      3527	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	CALL_11
0x6d41	          0xc1e003	                              shl eax, 3	      3527	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	CALL_11
0x6d44	            0x89c7	                            mov edi, eax	      3527	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	CALL_11
0x6d46	      0xe800000000	                          call 0x4006d8b	      3527	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	CALL_11
0x6d4b	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      3527	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	CALL_11
0x6d52	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      3529	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	IF_14
0x6d5a	     0xf842e1a0000	                            je 0x40087ce	      3529	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	IF_14
0x6d60	      0xe9fdfeffff	                           jmp 0x4006ca2	      3531	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1
0x6d65	    0x48c78530ffff	               mov qword [rbp - 0xd0], 1	      3536	ops.c	FUNCTION_48	IF_7	ELSE_1
0x6d70	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      3537	ops.c	FUNCTION_48	IF_7	ELSE_1
0x6d77	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      3537	ops.c	FUNCTION_48	IF_7	ELSE_1
0x6d7e	            0xeb5f	                           jmp 0x4006e1f	      3537	ops.c	FUNCTION_48	IF_7	ELSE_1
0x6d80	    0x8b85bcfeffff	            mov eax, dword [rbp - 0x144]	      3542	ops.c	FUNCTION_48	ELSE_2	CALL_12
0x6d86	      0xbe00000000	                              mov esi, 0	      3542	ops.c	FUNCTION_48	ELSE_2	CALL_12
0x6d8b	            0x89c7	                            mov edi, eax	      3542	ops.c	FUNCTION_48	ELSE_2	CALL_12
0x6d8d	      0xe800000000	                          call 0x4006dd2	      3542	ops.c	FUNCTION_48	ELSE_2	CALL_12
0x6d92	    0x488b05000000	            mov rax, qword [0x04006dd9] 	      3544	ops.c	FUNCTION_48	ELSE_2
0x6d99	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      3544	ops.c	FUNCTION_48	ELSE_2
0x6d9d	           0xfb6c0	                           movzx eax, al	      3544	ops.c	FUNCTION_48	ELSE_2
0x6da0	    0x8985d4feffff	            mov dword [rbp - 0x12c], eax	      3544	ops.c	FUNCTION_48	ELSE_2
0x6da6	    0x488b05000000	            mov rax, qword [0x04006ded] 	      3545	ops.c	FUNCTION_48	ELSE_2
0x6dad	          0x8b4014	            mov eax, dword [rax + 0x14] 	      3545	ops.c	FUNCTION_48	ELSE_2
0x6db0	            0x4898	                                    cdqe	      3545	ops.c	FUNCTION_48	ELSE_2
0x6db2	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      3545	ops.c	FUNCTION_48	ELSE_2
0x6db9	    0x488b05000000	            mov rax, qword [0x04006e00] 	      3546	ops.c	FUNCTION_48	ELSE_2
0x6dc0	        0x488b4008	                mov rax, qword [rax + 8]	      3546	ops.c	FUNCTION_48	ELSE_2
0x6dc4	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      3546	ops.c	FUNCTION_48	ELSE_2
0x6dcb	    0x488b05000000	            mov rax, qword [0x04006e12] 	      3547	ops.c	FUNCTION_48	ELSE_2
0x6dd2	          0x488b00	                    mov rax, qword [rax]	      3547	ops.c	FUNCTION_48	ELSE_2
0x6dd5	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      3547	ops.c	FUNCTION_48	ELSE_2
0x6ddc	            0xeb01	                           jmp 0x4006e1f	      3547	ops.c	FUNCTION_48	ELSE_2
0x6dde	              0x90	                                     nop	      3526	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	IF_13
0x6ddf	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 1	      3550	ops.c	FUNCTION_48	IF_15
0x6de6	     0xf852a020000	                           jne 0x4007056	      3550	ops.c	FUNCTION_48	IF_15
0x6dec	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      3552	ops.c	FUNCTION_48	IF_15	IF_16
0x6df2	          0x83e010	                           and eax, 0x10	      3552	ops.c	FUNCTION_48	IF_15	IF_16
0x6df5	            0x85c0	                           test eax, eax	      3552	ops.c	FUNCTION_48	IF_15	IF_16
0x6df7	     0xf8496010000	                            je 0x4006fd3	      3552	ops.c	FUNCTION_48	IF_15	IF_16
0x6dfd	      0xe800000000	                          call 0x4006e42	      3558	ops.c	FUNCTION_48	IF_15	IF_16	IF_17	CALL_13
0x6e02	            0x85c0	                           test eax, eax	      3558	ops.c	FUNCTION_48	IF_15	IF_16	IF_17	CALL_13
0x6e04	     0xf8487190000	                            je 0x40087d1	      3558	ops.c	FUNCTION_48	IF_15	IF_16	IF_17	CALL_13
0x6e0a	      0xe800000000	                          call 0x4006e4f	      3560	ops.c	FUNCTION_48	IF_15	IF_16	CALL_14
0x6e0f	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      3560	ops.c	FUNCTION_48	IF_15	IF_16	CALL_14
0x6e16	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 1	      3561	ops.c	FUNCTION_48	IF_15	IF_16	IF_18
0x6e1d	            0x753b	                           jne 0x4006e9a	      3561	ops.c	FUNCTION_48	IF_15	IF_16	IF_18
0x6e1f	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      3561	ops.c	FUNCTION_48	IF_15	IF_16	IF_18
0x6e26	           0xfb600	                   movzx eax, byte [rax]	      3561	ops.c	FUNCTION_48	IF_15	IF_16	IF_18
0x6e29	            0x84c0	                             test al, al	      3561	ops.c	FUNCTION_48	IF_15	IF_16	IF_18
0x6e2b	            0x742d	                            je 0x4006e9a	      3561	ops.c	FUNCTION_48	IF_15	IF_16	IF_18
0x6e2d	    0x8b0500000000	            mov eax, dword [0x04006e73] 	      3562	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x6e33	            0x85c0	                           test eax, eax	      3562	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x6e35	            0x7415	                            je 0x4006e8c	      3562	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x6e37	    0x488b05000000	            mov rax, qword [0x04006e7e] 	      3562	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x6e3e	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      3562	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x6e45	          0x4889d7	                            mov rdi, rdx	      3562	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x6e48	            0xffd0	                                call rax	      3562	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x6e4a	            0xeb05	                           jmp 0x4006e91	      3562	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x6e4c	      0xb801000000	                              mov eax, 1	      3562	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x6e51	            0x4898	                                    cdqe	      3562	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x6e53	    0x48018560ffff	            add qword [rbp - 0xa0], rax 	      3562	ops.c	FUNCTION_48	IF_15	IF_16	CALL_15
0x6e5a	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      3563	ops.c	FUNCTION_48	IF_15	IF_16	CALL_16
0x6e61	          0x4889c7	                            mov rdi, rax	      3563	ops.c	FUNCTION_48	IF_15	IF_16	CALL_16
0x6e64	      0xe800000000	                          call 0x4006ea9	      3563	ops.c	FUNCTION_48	IF_15	IF_16	CALL_16
0x6e69	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3563	ops.c	FUNCTION_48	IF_15	IF_16	CALL_16
0x6e70	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3564	ops.c	FUNCTION_48	IF_15	IF_16	IF_19
0x6e77	          0x4885c0	                           test rax, rax	      3564	ops.c	FUNCTION_48	IF_15	IF_16	IF_19
0x6e7a	     0xf8414190000	                            je 0x40087d4	      3564	ops.c	FUNCTION_48	IF_15	IF_16	IF_19
0x6e80	    0x488bb510ffff	             mov rsi, qword [rbp - 0xf0]	      3566	ops.c	FUNCTION_48	IF_15	IF_16	CALL_17
0x6e87	    0x488b05000000	            mov rax, qword [0x04006ece] 	      3566	ops.c	FUNCTION_48	IF_15	IF_16	CALL_17
0x6e8e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3566	ops.c	FUNCTION_48	IF_15	IF_16	CALL_17
0x6e92	      0xb900000000	                              mov ecx, 0	      3566	ops.c	FUNCTION_48	IF_15	IF_16	CALL_17
0x6e97	      0xba00000000	                              mov edx, 0	      3566	ops.c	FUNCTION_48	IF_15	IF_16	CALL_17
0x6e9c	          0x4889c7	                            mov rdi, rax	      3566	ops.c	FUNCTION_48	IF_15	IF_16	CALL_17
0x6e9f	      0xe800000000	                          call 0x4006ee4	      3566	ops.c	FUNCTION_48	IF_15	IF_16	CALL_17
0x6ea4	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3567	ops.c	FUNCTION_48	IF_15	IF_16	CALL_18
0x6eab	          0x4889c7	                            mov rdi, rax	      3567	ops.c	FUNCTION_48	IF_15	IF_16	CALL_18
0x6eae	      0xe800000000	                          call 0x4006ef3	      3567	ops.c	FUNCTION_48	IF_15	IF_16	CALL_18
0x6eb3	      0xe800000000	                          call 0x4006ef8	      3569	ops.c	FUNCTION_48	IF_15	IF_16	CALL_19
0x6eb8	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      3569	ops.c	FUNCTION_48	IF_15	IF_16	CALL_19
0x6ebf	    0x488b05000000	            mov rax, qword [0x04006f06] 	      3570	ops.c	FUNCTION_48	IF_15	IF_16
0x6ec6	          0x8b4040	            mov eax, dword [rax + 0x40] 	      3570	ops.c	FUNCTION_48	IF_15	IF_16
0x6ec9	          0x4863d0	                         movsxd rdx, eax	      3570	ops.c	FUNCTION_48	IF_15	IF_16
0x6ecc	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3570	ops.c	FUNCTION_48	IF_15	IF_16
0x6ed3	          0x4801d0	                            add rax, rdx	      3570	ops.c	FUNCTION_48	IF_15	IF_16
0x6ed6	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      3570	ops.c	FUNCTION_48	IF_15	IF_16
0x6edd	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 1	      3571	ops.c	FUNCTION_48	IF_15	IF_16	IF_20
0x6ee4	            0x753b	                           jne 0x4006f61	      3571	ops.c	FUNCTION_48	IF_15	IF_16	IF_20
0x6ee6	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      3571	ops.c	FUNCTION_48	IF_15	IF_16	IF_20
0x6eed	           0xfb600	                   movzx eax, byte [rax]	      3571	ops.c	FUNCTION_48	IF_15	IF_16	IF_20
0x6ef0	            0x84c0	                             test al, al	      3571	ops.c	FUNCTION_48	IF_15	IF_16	IF_20
0x6ef2	            0x742d	                            je 0x4006f61	      3571	ops.c	FUNCTION_48	IF_15	IF_16	IF_20
0x6ef4	    0x8b0500000000	            mov eax, dword [0x04006f3a] 	      3572	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x6efa	            0x85c0	                           test eax, eax	      3572	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x6efc	            0x7415	                            je 0x4006f53	      3572	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x6efe	    0x488b05000000	            mov rax, qword [0x04006f45] 	      3572	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x6f05	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      3572	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x6f0c	          0x4889d7	                            mov rdi, rdx	      3572	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x6f0f	            0xffd0	                                call rax	      3572	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x6f11	            0xeb05	                           jmp 0x4006f58	      3572	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x6f13	      0xb801000000	                              mov eax, 1	      3572	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x6f18	            0x4898	                                    cdqe	      3572	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x6f1a	    0x48018560ffff	            add qword [rbp - 0xa0], rax 	      3572	ops.c	FUNCTION_48	IF_15	IF_16	CALL_20
0x6f21	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      3573	ops.c	FUNCTION_48	IF_15	IF_16	CALL_21
0x6f28	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3573	ops.c	FUNCTION_48	IF_15	IF_16	CALL_21
0x6f2f	          0x4829c2	                            sub rdx, rax	      3573	ops.c	FUNCTION_48	IF_15	IF_16	CALL_21
0x6f32	          0x4889d0	                            mov rax, rdx	      3573	ops.c	FUNCTION_48	IF_15	IF_16	CALL_21
0x6f35	            0x89c2	                            mov edx, eax	      3573	ops.c	FUNCTION_48	IF_15	IF_16	CALL_21
0x6f37	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3573	ops.c	FUNCTION_48	IF_15	IF_16	CALL_21
0x6f3e	            0x89d6	                            mov esi, edx	      3573	ops.c	FUNCTION_48	IF_15	IF_16	CALL_21
0x6f40	          0x4889c7	                            mov rdi, rax	      3573	ops.c	FUNCTION_48	IF_15	IF_16	CALL_21
0x6f43	      0xe800000000	                          call 0x4006f88	      3573	ops.c	FUNCTION_48	IF_15	IF_16	CALL_21
0x6f48	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3573	ops.c	FUNCTION_48	IF_15	IF_16	CALL_21
0x6f4f	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3574	ops.c	FUNCTION_48	IF_15	IF_16	IF_21
0x6f56	          0x4885c0	                           test rax, rax	      3574	ops.c	FUNCTION_48	IF_15	IF_16	IF_21
0x6f59	     0xf8438180000	                            je 0x40087d7	      3574	ops.c	FUNCTION_48	IF_15	IF_16	IF_21
0x6f5f	    0x488b8d10ffff	             mov rcx, qword [rbp - 0xf0]	      3576	ops.c	FUNCTION_48	IF_15	IF_16	CALL_22
0x6f66	    0x488b05000000	            mov rax, qword [0x04006fad] 	      3576	ops.c	FUNCTION_48	IF_15	IF_16	CALL_22
0x6f6d	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3576	ops.c	FUNCTION_48	IF_15	IF_16	CALL_22
0x6f71	      0xba00000000	                              mov edx, 0	      3576	ops.c	FUNCTION_48	IF_15	IF_16	CALL_22
0x6f76	          0x4889ce	                            mov rsi, rcx	      3576	ops.c	FUNCTION_48	IF_15	IF_16	CALL_22
0x6f79	          0x4889c7	                            mov rdi, rax	      3576	ops.c	FUNCTION_48	IF_15	IF_16	CALL_22
0x6f7c	      0xe800000000	                          call 0x4006fc1	      3576	ops.c	FUNCTION_48	IF_15	IF_16	CALL_22
0x6f81	    0x48838550ffff	               add qword [rbp - 0xb0], 1	      3577	ops.c	FUNCTION_48	IF_15	IF_16
0x6f89	    0xc785b8feffff	              mov dword [rbp - 0x148], 1	      3578	ops.c	FUNCTION_48	IF_15	IF_16
0x6f93	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      3580	ops.c	FUNCTION_48	IF_15	IF_22
0x6f99	          0x83e020	                           and eax, 0x20	      3580	ops.c	FUNCTION_48	IF_15	IF_22
0x6f9c	            0x85c0	                           test eax, eax	      3580	ops.c	FUNCTION_48	IF_15	IF_22
0x6f9e	            0x742e	                            je 0x400700e	      3580	ops.c	FUNCTION_48	IF_15	IF_22
0x6fa0	    0x488b0d000000	            mov rcx, qword [0x04006fe7] 	      3583	ops.c	FUNCTION_48	IF_15	IF_22
0x6fa7	    0x488b05000000	            mov rax, qword [0x04006fee] 	      3583	ops.c	FUNCTION_48	IF_15	IF_22
0x6fae	    0x488b90000300	           mov rdx, qword [rax + 0x300] 	      3583	ops.c	FUNCTION_48	IF_15	IF_22
0x6fb5	    0x488b80f80200	           mov rax, qword [rax + 0x2f8] 	      3583	ops.c	FUNCTION_48	IF_15	IF_22
0x6fbc	        0x48894138	             mov qword [rcx + 0x38], rax	      3583	ops.c	FUNCTION_48	IF_15	IF_22
0x6fc0	        0x48895140	             mov qword [rcx + 0x40], rdx	      3583	ops.c	FUNCTION_48	IF_15	IF_22
0x6fc4	    0xc785b8feffff	              mov dword [rbp - 0x148], 1	      3584	ops.c	FUNCTION_48	IF_15	IF_22
0x6fce	    0x488b0d000000	            mov rcx, qword [0x04007015] 	      3586	ops.c	FUNCTION_48	IF_15
0x6fd5	    0x488b05000000	            mov rax, qword [0x0400701c] 	      3586	ops.c	FUNCTION_48	IF_15
0x6fdc	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      3586	ops.c	FUNCTION_48	IF_15
0x6fe0	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3586	ops.c	FUNCTION_48	IF_15
0x6fe4	    0x488981d01100	          mov qword [rcx + 0x11d0], rax 	      3586	ops.c	FUNCTION_48	IF_15
0x6feb	    0x488991d81100	          mov qword [rcx + 0x11d8], rdx 	      3586	ops.c	FUNCTION_48	IF_15
0x6ff2	    0x488b0d000000	            mov rcx, qword [0x04007039] 	      3587	ops.c	FUNCTION_48	IF_15
0x6ff9	    0x488b05000000	            mov rax, qword [0x04007040] 	      3587	ops.c	FUNCTION_48	IF_15
0x7000	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      3587	ops.c	FUNCTION_48	IF_15
0x7004	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3587	ops.c	FUNCTION_48	IF_15
0x7008	    0x488981f01100	          mov qword [rcx + 0x11f0], rax 	      3587	ops.c	FUNCTION_48	IF_15
0x700f	    0x488991f81100	          mov qword [rcx + 0x11f8], rdx 	      3587	ops.c	FUNCTION_48	IF_15
0x7016	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      3590	ops.c	FUNCTION_48	IF_23
0x701c	          0x83e008	                              and eax, 8	      3590	ops.c	FUNCTION_48	IF_23
0x701f	            0x85c0	                           test eax, eax	      3590	ops.c	FUNCTION_48	IF_23
0x7021	            0x740a	                            je 0x400706d	      3590	ops.c	FUNCTION_48	IF_23
0x7023	    0xc785d4feffff	              mov dword [rbp - 0x12c], 1	      3591	ops.c	FUNCTION_48	IF_23
0x702d	    0x4883bd30ffff	               cmp qword [rbp - 0xd0], 0	      3593	ops.c	FUNCTION_48	IF_24
0x7035	            0x740a	                            je 0x4007081	      3593	ops.c	FUNCTION_48	IF_24
0x7037	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      3593	ops.c	FUNCTION_48	IF_24
0x703f	            0x753b	                           jne 0x40070bc	      3593	ops.c	FUNCTION_48	IF_24
0x7041	    0x8b85bcfeffff	            mov eax, dword [rbp - 0x144]	      3595	ops.c	FUNCTION_48	IF_24	CALL_24
0x7047	            0x85c0	                           test eax, eax	      3595	ops.c	FUNCTION_48	IF_24	CALL_24
0x7049	            0x7412	                            je 0x400709d	      3595	ops.c	FUNCTION_48	IF_24	CALL_24
0x704b	    0x8b85bcfeffff	            mov eax, dword [rbp - 0x144]	      3595	ops.c	FUNCTION_48	IF_24	CALL_24
0x7051	            0x89c7	                            mov edi, eax	      3595	ops.c	FUNCTION_48	IF_24	CALL_24
0x7053	      0xe800000000	                          call 0x4007098	      3595	ops.c	FUNCTION_48	IF_24	CALL_24
0x7058	          0x4889c3	                            mov rbx, rax	      3595	ops.c	FUNCTION_48	IF_24	CALL_24
0x705b	            0xeb05	                           jmp 0x40070a2	      3595	ops.c	FUNCTION_48	IF_24	CALL_24
0x705d	      0xbb00000000	                              mov ebx, 0	      3595	ops.c	FUNCTION_48	IF_24	CALL_24
0x7062	      0xbf00000000	                              mov edi, 0	      3595	ops.c	FUNCTION_48	IF_24	CALL_24
0x7067	      0xe800000000	                          call 0x40070ac	      3595	ops.c	FUNCTION_48	IF_24	CALL_24
0x706c	          0x4889de	                            mov rsi, rbx	      3595	ops.c	FUNCTION_48	IF_24	CALL_24
0x706f	          0x4889c7	                            mov rdi, rax	      3595	ops.c	FUNCTION_48	IF_24	CALL_24
0x7072	      0xe800000000	                          call 0x40070b7	      3595	ops.c	FUNCTION_48	IF_24	CALL_24
0x7077	      0xe925170000	                           jmp 0x40087e1	      3597	ops.c	FUNCTION_48	IF_24
0x707c	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 2	      3600	ops.c	FUNCTION_48	IF_25
0x7083	            0x7579	                           jne 0x400713e	      3600	ops.c	FUNCTION_48	IF_25
0x7085	    0x488b05000000	            mov rax, qword [0x040070cc] 	      3602	ops.c	FUNCTION_48	IF_25
0x708c	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3602	ops.c	FUNCTION_48	IF_25
0x7090	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      3602	ops.c	FUNCTION_48	IF_25
0x7097	          0x4801d0	                            add rax, rdx	      3602	ops.c	FUNCTION_48	IF_25
0x709a	        0x4883c001	                              add rax, 1	      3602	ops.c	FUNCTION_48	IF_25
0x709e	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      3602	ops.c	FUNCTION_48	IF_25
0x70a5	    0x488b05000000	            mov rax, qword [0x040070ec] 	      3603	ops.c	FUNCTION_48	IF_25	IF_26
0x70ac	          0x488b10	                    mov rdx, qword [rax]	      3603	ops.c	FUNCTION_48	IF_25	IF_26
0x70af	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3603	ops.c	FUNCTION_48	IF_25	IF_26
0x70b6	          0x4839c2	                            cmp rdx, rax	      3603	ops.c	FUNCTION_48	IF_25	IF_26
0x70b9	            0x7d15	                           jge 0x4007110	      3603	ops.c	FUNCTION_48	IF_25	IF_26
0x70bb	    0x488b05000000	            mov rax, qword [0x04007102] 	      3604	ops.c	FUNCTION_48	IF_25	IF_26
0x70c2	          0x488b00	                    mov rax, qword [rax]	      3604	ops.c	FUNCTION_48	IF_25	IF_26
0x70c5	        0x4883c001	                              add rax, 1	      3604	ops.c	FUNCTION_48	IF_25	IF_26
0x70c9	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      3604	ops.c	FUNCTION_48	IF_25	IF_26
0x70d0	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3605	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x70d7	    0x488b15000000	            mov rdx, qword [0x0400711e] 	      3605	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x70de	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	      3605	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x70e2	        0x4883ea01	                              sub rdx, 1	      3605	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x70e6	          0x4889c6	                            mov rsi, rax	      3605	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x70e9	          0x4889d7	                            mov rdi, rdx	      3605	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x70ec	      0xe800000000	                          call 0x4007131	      3605	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x70f1	            0x85c0	                           test eax, eax	      3605	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x70f3	     0xf854a010000	                           jne 0x4007283	      3605	ops.c	FUNCTION_48	IF_25	IF_27	CALL_26
0x70f9	      0xe9a3160000	                           jmp 0x40087e1	      3606	ops.c	FUNCTION_48	IF_25	IF_27
0x70fe	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 1	      3608	ops.c	FUNCTION_48	ELSE_3	IF_28
0x7105	     0xf852b010000	                           jne 0x4007276	      3608	ops.c	FUNCTION_48	ELSE_3	IF_28
0x710b	    0x488b05000000	            mov rax, qword [0x04007152] 	      3610	ops.c	FUNCTION_48	ELSE_3	IF_28
0x7112	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3610	ops.c	FUNCTION_48	ELSE_3	IF_28
0x7116	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      3610	ops.c	FUNCTION_48	ELSE_3	IF_28
0x711d	    0x83bdb8feffff	cmp dword [rbp - 0x148], 0xffffffffffffffff	      3614	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_29
0x7124	            0x7520	                           jne 0x4007186	      3614	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_29
0x7126	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3615	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_27
0x712d	    0x488d8d18ffff	                   lea rcx, [rbp - 0xe8]	      3615	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_27
0x7134	      0xba00000000	                              mov edx, 0	      3615	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_27
0x7139	          0x4889ce	                            mov rsi, rcx	      3615	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_27
0x713c	          0x4889c7	                            mov rdi, rax	      3615	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_27
0x713f	      0xe800000000	                          call 0x4007184	      3615	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_27
0x7144	            0xeb1b	                           jmp 0x40071a1	      3615	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_27
0x7146	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3617	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_28
0x714d	    0x488d9518ffff	                   lea rdx, [rbp - 0xe8]	      3617	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_28
0x7154	      0xbe00000000	                              mov esi, 0	      3617	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_28
0x7159	          0x4889c7	                            mov rdi, rax	      3617	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_28
0x715c	      0xe800000000	                          call 0x40071a1	      3617	ops.c	FUNCTION_48	ELSE_3	IF_28	CALL_28
0x7161	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 1	      3619	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_30
0x7168	            0x7512	                           jne 0x40071bc	      3619	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_30
0x716a	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3620	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_30
0x7171	        0x4883c001	                              add rax, 1	      3620	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_30
0x7175	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      3620	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_30
0x717c	    0x488b05000000	            mov rax, qword [0x040071c3] 	      3623	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x7183	          0x488b00	                    mov rax, qword [rax]	      3623	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x7186	        0x4883f801	                              cmp rax, 1	      3623	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x718a	            0x7527	                           jne 0x40071f3	      3623	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x718c	      0xbf01000000	                              mov edi, 1	      3623	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x7191	      0xe800000000	                          call 0x40071d6	      3623	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x7196	           0xfb600	                   movzx eax, byte [rax]	      3623	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x7199	            0x84c0	                             test al, al	      3623	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x719b	            0x7516	                           jne 0x40071f3	      3623	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x719d	      0xbe02000000	                              mov esi, 2	      3623	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x71a2	      0xbf00000000	                              mov edi, 0	      3623	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x71a7	      0xe800000000	                          call 0x40071ec	      3623	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x71ac	            0x85c0	                           test eax, eax	      3623	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x71ae	           0xf94c0	                                 sete al	      3623	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x71b1	            0xeb22	                           jmp 0x4007215	      3623	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x71b3	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3623	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x71ba	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      3623	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x71c1	        0x4883ea01	                              sub rdx, 1	      3623	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x71c5	          0x4889c6	                            mov rsi, rax	      3623	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x71c8	          0x4889d7	                            mov rdi, rdx	      3623	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x71cb	      0xe800000000	                          call 0x4007210	      3623	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x71d0	            0x85c0	                           test eax, eax	      3623	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x71d2	           0xf94c0	                                 sete al	      3623	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x71d5	            0x84c0	                             test al, al	      3623	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x71d7	     0xf85bd150000	                           jne 0x40087da	      3623	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31	CALL_31
0x71dd	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 1	      3626	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_32
0x71e4	            0x7518	                           jne 0x400723e	      3626	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_32
0x71e6	    0x488b05000000	            mov rax, qword [0x0400722d] 	      3627	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_32
0x71ed	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      3627	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_32
0x71f4	        0x4883ea01	                              sub rdx, 1	      3627	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_32
0x71f8	        0x48895038	             mov qword [rax + 0x38], rdx	      3627	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_32
0x71fc	            0xeb12	                           jmp 0x4007250	      3627	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_32
0x71fe	    0x488b05000000	            mov rax, qword [0x04007245] 	      3629	ops.c	FUNCTION_48	ELSE_3	IF_28	ELSE_5
0x7205	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      3629	ops.c	FUNCTION_48	ELSE_3	IF_28	ELSE_5
0x720c	        0x48895038	             mov qword [rax + 0x38], rdx	      3629	ops.c	FUNCTION_48	ELSE_3	IF_28	ELSE_5
0x7210	    0x488b0d000000	            mov rcx, qword [0x04007257] 	      3630	ops.c	FUNCTION_48	ELSE_3	IF_28
0x7217	    0x488b05000000	            mov rax, qword [0x0400725e] 	      3630	ops.c	FUNCTION_48	ELSE_3	IF_28
0x721e	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      3630	ops.c	FUNCTION_48	ELSE_3	IF_28
0x7222	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3630	ops.c	FUNCTION_48	ELSE_3	IF_28
0x7226	    0x488981d01100	          mov qword [rcx + 0x11d0], rax 	      3630	ops.c	FUNCTION_48	ELSE_3	IF_28
0x722d	    0x488991d81100	          mov qword [rcx + 0x11d8], rdx 	      3630	ops.c	FUNCTION_48	ELSE_3	IF_28
0x7234	            0xeb0d	                           jmp 0x4007283	      3630	ops.c	FUNCTION_48	ELSE_3	IF_28
0x7236	      0xe800000000	                          call 0x400727b	      3633	ops.c	FUNCTION_48	ELSE_6	IF_33	CALL_32
0x723b	            0x85c0	                           test eax, eax	      3633	ops.c	FUNCTION_48	ELSE_6	IF_33	CALL_32
0x723d	     0xf845a150000	                            je 0x40087dd	      3633	ops.c	FUNCTION_48	ELSE_6	IF_33	CALL_32
0x7243	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3636	ops.c	FUNCTION_48	CALL_33
0x724a	          0x488b00	                    mov rax, qword [rax]	      3636	ops.c	FUNCTION_48	CALL_33
0x724d	          0x4889c7	                            mov rdi, rax	      3636	ops.c	FUNCTION_48	CALL_33
0x7250	      0xe800000000	                          call 0x4007295	      3636	ops.c	FUNCTION_48	CALL_33
0x7255	    0x8985fcfeffff	            mov dword [rbp - 0x104], eax	      3636	ops.c	FUNCTION_48	CALL_33
0x725b	    0x8b0500000000	            mov eax, dword [0x040072a1] 	      3639	ops.c	FUNCTION_48	IF_34
0x7261	          0x83f804	                              cmp eax, 4	      3639	ops.c	FUNCTION_48	IF_34
0x7264	     0xf85ac000000	                           jne 0x4007356	      3639	ops.c	FUNCTION_48	IF_34
0x726a	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 0	      3639	ops.c	FUNCTION_48	IF_34
0x7271	     0xf859f000000	                           jne 0x4007356	      3639	ops.c	FUNCTION_48	IF_34
0x7277	      0xe800000000	                          call 0x40072bc	      3641	ops.c	FUNCTION_48	IF_34	IF_35	CALL_34
0x727c	          0x83f809	                              cmp eax, 9	      3641	ops.c	FUNCTION_48	IF_34	IF_35	CALL_34
0x727f	            0x7561	                           jne 0x4007322	      3641	ops.c	FUNCTION_48	IF_34	IF_35	CALL_34
0x7281	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 1	      3645	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x7288	            0x7527	                           jne 0x40072f1	      3645	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x728a	    0x488b05000000	            mov rax, qword [0x040072d1] 	      3646	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x7291	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3646	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x7294	          0x4863d0	                         movsxd rdx, eax	      3645	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x7297	    0x488b05000000	            mov rax, qword [0x040072de] 	      3646	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x729e	    0x488b80901500	          mov rax, qword [rax + 0x1590] 	      3646	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x72a5	        0x4883e801	                              sub rax, 1	      3646	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x72a9	          0x4839c2	                            cmp rdx, rax	      3645	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x72ac	           0xf9cc0	                                 setl al	      3645	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x72af	            0xeb0f	                           jmp 0x4007300	      3645	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x72b1	    0x488b05000000	            mov rax, qword [0x040072f8] 	      3647	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x72b8	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3647	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x72bb	            0x85c0	                           test eax, eax	      3645	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x72bd	           0xf9fc0	                                 setg al	      3645	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x72c0	            0x84c0	                             test al, al	      3645	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x72c2	            0x740e	                            je 0x4007312	      3645	ops.c	FUNCTION_48	IF_34	IF_35	IF_36
0x72c4	      0xe800000000	                          call 0x4007309	      3648	ops.c	FUNCTION_48	IF_34	IF_35	CALL_36
0x72c9	            0x89c7	                            mov edi, eax	      3648	ops.c	FUNCTION_48	IF_34	IF_35	CALL_36
0x72cb	      0xe800000000	                          call 0x4007310	      3648	ops.c	FUNCTION_48	IF_34	IF_35	CALL_36
0x72d0	            0xeb44	                           jmp 0x4007356	      3648	ops.c	FUNCTION_48	IF_34	IF_35	CALL_36
0x72d2	    0x488b05000000	            mov rax, qword [0x04007319] 	      3650	ops.c	FUNCTION_48	IF_34	IF_35	ELSE_7
0x72d9	    0xc74044000000	               mov dword [rax + 0x44], 0	      3650	ops.c	FUNCTION_48	IF_34	IF_35	ELSE_7
0x72e0	            0xeb34	                           jmp 0x4007356	      3650	ops.c	FUNCTION_48	IF_34	IF_35	ELSE_7
0x72e2	    0x488b05000000	            mov rax, qword [0x04007329] 	      3652	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x72e9	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3652	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x72ec	            0x85c0	                           test eax, eax	      3652	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x72ee	            0x7f09	                            jg 0x4007339	      3652	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x72f0	      0xe800000000	                          call 0x4007335	      3652	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x72f5	            0x85c0	                           test eax, eax	      3652	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x72f7	            0x751d	                           jne 0x4007356	      3652	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37	CALL_37
0x72f9	      0xe800000000	                          call 0x400733e	      3653	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x72fe	            0x89c2	                            mov edx, eax	      3653	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x7300	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 1	      3653	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x7307	           0xf94c0	                                 sete al	      3653	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x730a	           0xfb6c0	                           movzx eax, al	      3653	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x730d	             0x1d0	                            add eax, edx	      3653	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x730f	            0x89c7	                            mov edi, eax	      3653	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x7311	      0xe800000000	                          call 0x4007356	      3653	ops.c	FUNCTION_48	IF_34	ELSE_8	IF_37
0x7316	    0x488b05000000	            mov rax, qword [0x0400735d] 	      3657	ops.c	FUNCTION_48
0x731d	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3657	ops.c	FUNCTION_48
0x7321	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      3657	ops.c	FUNCTION_48
0x7328	    0x488b05000000	            mov rax, qword [0x0400736f] 	      3658	ops.c	FUNCTION_48
0x732f	          0x8b4040	            mov eax, dword [rax + 0x40] 	      3658	ops.c	FUNCTION_48
0x7332	    0x8985c8feffff	            mov dword [rbp - 0x138], eax	      3658	ops.c	FUNCTION_48
0x7338	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 2	      3663	ops.c	FUNCTION_48	IF_38
0x733f	     0xf85c4080000	                           jne 0x4007c49	      3663	ops.c	FUNCTION_48	IF_38
0x7345	      0xe800000000	                          call 0x400738a	      3665	ops.c	FUNCTION_48	IF_38	CALL_40
0x734a	    0x898504ffffff	             mov dword [rbp - 0xfc], eax	      3665	ops.c	FUNCTION_48	IF_38	CALL_40
0x7350	    0xc74590000000	               mov dword [rbp - 0x70], 0	      3666	ops.c	FUNCTION_48	IF_38
0x7357	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 1	      3668	ops.c	FUNCTION_48	IF_38	IF_39
0x735e	     0xf85df000000	                           jne 0x4007483	      3668	ops.c	FUNCTION_48	IF_38	IF_39
0x7364	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 0	      3668	ops.c	FUNCTION_48	IF_38	IF_39
0x736b	     0xf84d2000000	                            je 0x4007483	      3668	ops.c	FUNCTION_48	IF_38	IF_39
0x7371	    0x8b0500000000	            mov eax, dword [0x040073b7] 	      3671	ops.c	FUNCTION_48	IF_38	IF_39	IF_40
0x7377	          0x83f804	                              cmp eax, 4	      3671	ops.c	FUNCTION_48	IF_38	IF_39	IF_40
0x737a	            0x752f	                           jne 0x40073eb	      3671	ops.c	FUNCTION_48	IF_38	IF_39	IF_40
0x737c	    0x488b05000000	            mov rax, qword [0x040073c3] 	      3672	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x7383	        0x488d7038	                   lea rsi, [rax + 0x38]	      3672	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x7387	    0x488b05000000	            mov rax, qword [0x040073ce] 	      3672	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x738e	        0x488d4d90	                   lea rcx, [rbp - 0x70]	      3672	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x7392	    0x488d95c8feff	                  lea rdx, [rbp - 0x138]	      3672	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x7399	          0x4989c8	                             mov r8, rcx	      3672	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x739c	      0xb900000000	                              mov ecx, 0	      3672	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x73a1	          0x4889c7	                            mov rdi, rax	      3672	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x73a4	      0xe800000000	                          call 0x40073e9	      3672	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x73a9	            0xeb2e	                           jmp 0x4007419	      3672	ops.c	FUNCTION_48	IF_38	IF_39	CALL_41
0x73ab	    0x488b05000000	            mov rax, qword [0x040073f2] 	      3675	ops.c	FUNCTION_48	IF_38	IF_39	CALL_42
0x73b2	        0x488d7038	                   lea rsi, [rax + 0x38]	      3675	ops.c	FUNCTION_48	IF_38	IF_39	CALL_42
0x73b6	    0x488b05000000	            mov rax, qword [0x040073fd] 	      3675	ops.c	FUNCTION_48	IF_38	IF_39	CALL_42
0x73bd	    0x488d95c8feff	                  lea rdx, [rbp - 0x138]	      3675	ops.c	FUNCTION_48	IF_38	IF_39	CALL_42
0x73c4	          0x4989d0	                             mov r8, rdx	      3675	ops.c	FUNCTION_48	IF_38	IF_39	CALL_42
0x73c7	      0xb900000000	                              mov ecx, 0	      3675	ops.c	FUNCTION_48	IF_38	IF_39	CALL_42
0x73cc	      0xba00000000	                              mov edx, 0	      3675	ops.c	FUNCTION_48	IF_38	IF_39	CALL_42
0x73d1	          0x4889c7	                            mov rdi, rax	      3675	ops.c	FUNCTION_48	IF_38	IF_39	CALL_42
0x73d4	      0xe800000000	                          call 0x4007419	      3675	ops.c	FUNCTION_48	IF_38	IF_39	CALL_42
0x73d9	    0x8b0500000000	            mov eax, dword [0x0400741f] 	      3678	ops.c	FUNCTION_48	IF_38	IF_39	IF_41
0x73df	            0x85c0	                           test eax, eax	      3678	ops.c	FUNCTION_48	IF_38	IF_39	IF_41
0x73e1	            0x742b	                            je 0x400744e	      3678	ops.c	FUNCTION_48	IF_38	IF_39	IF_41
0x73e3	    0x488b1d000000	            mov rbx, qword [0x0400742a] 	      3680	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x73ea	      0xe800000000	                          call 0x400742f	      3680	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x73ef	          0x4889c7	                            mov rdi, rax	      3680	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x73f2	            0xffd3	                                call rbx	      3680	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x73f4	            0x89c1	                            mov ecx, eax	      3680	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x73f6	    0x488b05000000	            mov rax, qword [0x0400743d] 	      3680	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x73fd	    0x488b15000000	            mov rdx, qword [0x04007444] 	      3680	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x7404	          0x8b5240	            mov edx, dword [rdx + 0x40] 	      3680	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x7407	             0x1ca	                            add edx, ecx	      3680	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x7409	          0x895040	             mov dword [rax + 0x40], edx	      3680	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x740c	            0xeb24	                           jmp 0x4007472	      3680	ops.c	FUNCTION_48	IF_38	IF_39	CALL_43
0x740e	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 9	      3684	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x7415	            0x750b	                           jne 0x4007462	      3684	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x7417	    0x8b0500000000	            mov eax, dword [0x0400745d] 	      3684	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x741d	          0x83f804	                              cmp eax, 4	      3684	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x7420	            0x7410	                            je 0x4007472	      3684	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x7422	    0x488b05000000	            mov rax, qword [0x04007469] 	      3686	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x7429	          0x8b5040	            mov edx, dword [rax + 0x40] 	      3686	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x742c	          0x83c201	                              add edx, 1	      3686	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x742f	          0x895040	             mov dword [rax + 0x40], edx	      3686	ops.c	FUNCTION_48	IF_38	IF_39	ELSE_10	IF_42
0x7432	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3687	ops.c	FUNCTION_48	IF_38	IF_39
0x7438	          0x83c001	                              add eax, 1	      3687	ops.c	FUNCTION_48	IF_38	IF_39
0x743b	    0x8985c8feffff	            mov dword [rbp - 0x138], eax	      3687	ops.c	FUNCTION_48	IF_38	IF_39
0x7441	            0xeb2d	                           jmp 0x40074b0	      3687	ops.c	FUNCTION_48	IF_38	IF_39
0x7443	    0x488b05000000	            mov rax, qword [0x0400748a] 	      3690	ops.c	FUNCTION_48	IF_38	CALL_44
0x744a	        0x488d7038	                   lea rsi, [rax + 0x38]	      3690	ops.c	FUNCTION_48	IF_38	CALL_44
0x744e	    0x488b05000000	            mov rax, qword [0x04007495] 	      3690	ops.c	FUNCTION_48	IF_38	CALL_44
0x7455	        0x488d4d90	                   lea rcx, [rbp - 0x70]	      3690	ops.c	FUNCTION_48	IF_38	CALL_44
0x7459	    0x488d95c8feff	                  lea rdx, [rbp - 0x138]	      3690	ops.c	FUNCTION_48	IF_38	CALL_44
0x7460	          0x4989c8	                             mov r8, rcx	      3690	ops.c	FUNCTION_48	IF_38	CALL_44
0x7463	      0xb900000000	                              mov ecx, 0	      3690	ops.c	FUNCTION_48	IF_38	CALL_44
0x7468	          0x4889c7	                            mov rdi, rax	      3690	ops.c	FUNCTION_48	IF_38	CALL_44
0x746b	      0xe800000000	                          call 0x40074b0	      3690	ops.c	FUNCTION_48	IF_38	CALL_44
0x7470	    0x488b05000000	            mov rax, qword [0x040074b7] 	      3693	ops.c	FUNCTION_48	IF_38
0x7477	          0x8b5044	            mov edx, dword [rax + 0x44] 	      3693	ops.c	FUNCTION_48	IF_38
0x747a	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3693	ops.c	FUNCTION_48	IF_38
0x7480	             0x1d0	                            add eax, edx	      3693	ops.c	FUNCTION_48	IF_38
0x7482	    0x8985c8feffff	            mov dword [rbp - 0x138], eax	      3693	ops.c	FUNCTION_48	IF_38
0x7488	    0x8b0500000000	            mov eax, dword [0x040074ce] 	      3694	ops.c	FUNCTION_48	IF_38	IF_43
0x748e	          0x83f804	                              cmp eax, 4	      3694	ops.c	FUNCTION_48	IF_38	IF_43
0x7491	     0xf85bf000000	                           jne 0x4007596	      3694	ops.c	FUNCTION_48	IF_38	IF_43
0x7497	    0x488b05000000	            mov rax, qword [0x040074de] 	      3695	ops.c	FUNCTION_48	IF_38	IF_43
0x749e	          0x8b4044	            mov eax, dword [rax + 0x44] 	      3695	ops.c	FUNCTION_48	IF_38	IF_43
0x74a1	            0x85c0	                           test eax, eax	      3695	ops.c	FUNCTION_48	IF_38	IF_43
0x74a3	            0x7f15	                            jg 0x40074fa	      3695	ops.c	FUNCTION_48	IF_38	IF_43
0x74a5	    0x488b05000000	            mov rax, qword [0x040074ec] 	      3696	ops.c	FUNCTION_48	IF_38	IF_43
0x74ac	          0x8b5040	            mov edx, dword [rax + 0x40] 	      3696	ops.c	FUNCTION_48	IF_38	IF_43
0x74af	          0x8b4590	             mov eax, dword [rbp - 0x70]	      3696	ops.c	FUNCTION_48	IF_38	IF_43
0x74b2	            0x39c2	                            cmp edx, eax	      3696	ops.c	FUNCTION_48	IF_38	IF_43
0x74b4	     0xf859c000000	                           jne 0x4007596	      3696	ops.c	FUNCTION_48	IF_38	IF_43
0x74ba	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 1	      3698	ops.c	FUNCTION_48	IF_38	IF_43	IF_44
0x74c1	            0x7518	                           jne 0x400751b	      3698	ops.c	FUNCTION_48	IF_38	IF_43	IF_44
0x74c3	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 0	      3698	ops.c	FUNCTION_48	IF_38	IF_43	IF_44
0x74ca	            0x750f	                           jne 0x400751b	      3698	ops.c	FUNCTION_48	IF_38	IF_43	IF_44
0x74cc	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3699	ops.c	FUNCTION_48	IF_38	IF_43	IF_44
0x74d2	          0x83c001	                              add eax, 1	      3699	ops.c	FUNCTION_48	IF_38	IF_43	IF_44
0x74d5	    0x8985c8feffff	            mov dword [rbp - 0x138], eax	      3699	ops.c	FUNCTION_48	IF_38	IF_43	IF_44
0x74db	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 1	      3700	ops.c	FUNCTION_48	IF_38	IF_43	IF_45
0x74e2	            0x7419	                            je 0x400753d	      3700	ops.c	FUNCTION_48	IF_38	IF_43	IF_45
0x74e4	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 0	      3700	ops.c	FUNCTION_48	IF_38	IF_43	IF_45
0x74eb	            0x7410	                            je 0x400753d	      3700	ops.c	FUNCTION_48	IF_38	IF_43	IF_45
0x74ed	    0x488b05000000	            mov rax, qword [0x04007534] 	      3701	ops.c	FUNCTION_48	IF_38	IF_43	IF_45
0x74f4	          0x8b5040	            mov edx, dword [rax + 0x40] 	      3701	ops.c	FUNCTION_48	IF_38	IF_43	IF_45
0x74f7	          0x83c201	                              add edx, 1	      3701	ops.c	FUNCTION_48	IF_38	IF_43	IF_45
0x74fa	          0x895040	             mov dword [rax + 0x40], edx	      3701	ops.c	FUNCTION_48	IF_38	IF_43	IF_45
0x74fd	    0x83bd04ffffff	               cmp dword [rbp - 0xfc], 9	      3702	ops.c	FUNCTION_48	IF_38	IF_43	IF_46
0x7504	            0x7550	                           jne 0x4007596	      3702	ops.c	FUNCTION_48	IF_38	IF_43	IF_46
0x7506	    0x83bdb8feffff	cmp dword [rbp - 0x148], 0xffffffffffffffff	      3704	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x750d	            0x751e	                           jne 0x400756d	      3704	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x750f	    0x488b05000000	            mov rax, qword [0x04007556] 	      3704	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x7516	          0x8b4040	            mov eax, dword [rax + 0x40] 	      3704	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x7519	            0x85c0	                           test eax, eax	      3704	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x751b	            0x7410	                            je 0x400756d	      3704	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x751d	    0x488b05000000	            mov rax, qword [0x04007564] 	      3705	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x7524	          0x8b5040	            mov edx, dword [rax + 0x40] 	      3705	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x7527	          0x83ea01	                              sub edx, 1	      3705	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x752a	          0x895040	             mov dword [rax + 0x40], edx	      3705	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_47
0x752d	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 1	      3706	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x7534	            0x7520	                           jne 0x4007596	      3706	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x7536	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3706	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x753c	          0x8d50ff	                      lea edx, [rax - 1]	      3706	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x753f	          0x8b4590	             mov eax, dword [rbp - 0x70]	      3706	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x7542	            0x39c2	                            cmp edx, eax	      3706	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x7544	            0x7510	                           jne 0x4007596	      3706	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x7546	    0x488b05000000	            mov rax, qword [0x0400758d] 	      3707	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x754d	          0x8b5040	            mov edx, dword [rax + 0x40] 	      3707	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x7550	          0x83c201	                              add edx, 1	      3707	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x7553	          0x895040	             mov dword [rax + 0x40], edx	      3707	ops.c	FUNCTION_48	IF_38	IF_43	IF_46	IF_48
0x7556	    0x488b05000000	            mov rax, qword [0x0400759d] 	      3710	ops.c	FUNCTION_48	IF_38
0x755d	    0xc74044000000	               mov dword [rax + 0x44], 0	      3710	ops.c	FUNCTION_48	IF_38
0x7564	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      3712	ops.c	FUNCTION_48	IF_38
0x756b	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      3713	ops.c	FUNCTION_48	IF_38	FOR_2
0x7576	      0xe936050000	                           jmp 0x4007af1	      3713	ops.c	FUNCTION_48	IF_38	FOR_2
0x757b	    0xc745a0000000	               mov dword [rbp - 0x60], 0	      3718	ops.c	FUNCTION_48	IF_38	FOR_2
0x7582	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	      3719	ops.c	FUNCTION_48	IF_38	FOR_2
0x7589	    0xc785d8feffff	              mov dword [rbp - 0x128], 0	      3720	ops.c	FUNCTION_48	IF_38	FOR_2
0x7593	    0xc785dcfeffff	              mov dword [rbp - 0x124], 0	      3721	ops.c	FUNCTION_48	IF_38	FOR_2
0x759d	    0x488b05000000	            mov rax, qword [0x040075e4] 	      3724	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49
0x75a4	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3724	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49
0x75a8	    0x488b05000000	            mov rax, qword [0x040075ef] 	      3724	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49
0x75af	          0x488b00	                    mov rax, qword [rax]	      3724	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49
0x75b2	          0x4839c2	                            cmp rdx, rax	      3724	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49
0x75b5	            0x7e31	                           jle 0x4007628	      3724	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49
0x75b7	    0x488b05000000	            mov rax, qword [0x040075fe] 	      3726	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x75be	          0x488b00	                    mov rax, qword [rax]	      3726	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x75c1	      0xb900000000	                              mov ecx, 0	      3726	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x75c6	      0xba01000000	                              mov edx, 1	      3726	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x75cb	      0xbe00000000	                              mov esi, 0	      3726	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x75d0	          0x4889c7	                            mov rdi, rax	      3726	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x75d3	      0xe800000000	                          call 0x4007618	      3726	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x75d8	            0x85c0	                           test eax, eax	      3726	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x75da	     0xf84e7040000	                            je 0x4007b07	      3726	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50	CALL_45
0x75e0	    0x48838550ffff	               add qword [rbp - 0xb0], 1	      3729	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49
0x75e8	      0xe800000000	                          call 0x400762d	      3732	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_46
0x75ed	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      3732	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_46
0x75f4	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3733	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_47
0x75fb	          0x4889c7	                            mov rdi, rax	      3733	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_47
0x75fe	      0xe800000000	                          call 0x4007643	      3733	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_47
0x7603	    0x898508ffffff	             mov dword [rbp - 0xf8], eax	      3733	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_47
0x7609	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3734	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x7610	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3734	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x7617	            0xeb31	                           jmp 0x400768a	      3734	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x7619	    0x8b95d8feffff	            mov edx, dword [rbp - 0x128]	      3737	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3	CALL_48
0x761f	    0x488d8d10ffff	                   lea rcx, [rbp - 0xf0]	      3737	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3	CALL_48
0x7626	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3737	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3	CALL_48
0x762d	          0x4889ce	                            mov rsi, rcx	      3737	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3	CALL_48
0x7630	          0x4889c7	                            mov rdi, rax	      3737	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3	CALL_48
0x7633	      0xe800000000	                          call 0x4007678	      3737	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3	CALL_48
0x7638	    0x8985e0feffff	            mov dword [rbp - 0x120], eax	      3737	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3	CALL_48
0x763e	    0x8b85e0feffff	            mov eax, dword [rbp - 0x120]	      3738	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x7644	     0x185d8feffff	            add dword [rbp - 0x128], eax	      3738	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x764a	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3734	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x7650	    0x3985d8feffff	           cmp dword [rbp - 0x128], eax 	      3734	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x7656	            0x7d0e	                           jge 0x40076a6	      3734	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x7658	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3734	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x765f	           0xfb600	                   movzx eax, byte [rax]	      3734	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x7662	            0x84c0	                             test al, al	      3734	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x7664	            0x75b3	                           jne 0x4007659	      3734	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_3
0x7666	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3740	ops.c	FUNCTION_48	IF_38	FOR_2
0x766d	          0x4889c2	                            mov rdx, rax	      3740	ops.c	FUNCTION_48	IF_38	FOR_2
0x7670	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3740	ops.c	FUNCTION_48	IF_38	FOR_2
0x7677	          0x4829c2	                            sub rdx, rax	      3740	ops.c	FUNCTION_48	IF_38	FOR_2
0x767a	          0x4889d0	                            mov rax, rdx	      3740	ops.c	FUNCTION_48	IF_38	FOR_2
0x767d	          0x8945b8	             mov dword [rbp - 0x48], eax	      3740	ops.c	FUNCTION_48	IF_38	FOR_2
0x7680	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3742	ops.c	FUNCTION_48	IF_38	FOR_2
0x7686	    0x3985d8feffff	           cmp dword [rbp - 0x128], eax 	      3742	ops.c	FUNCTION_48	IF_38	FOR_2
0x768c	            0x7c1c	                            jl 0x40076ea	      3742	ops.c	FUNCTION_48	IF_38	FOR_2
0x768e	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3742	ops.c	FUNCTION_48	IF_38	FOR_2
0x7694	    0x3985d8feffff	           cmp dword [rbp - 0x128], eax 	      3742	ops.c	FUNCTION_48	IF_38	FOR_2
0x769a	            0x7515	                           jne 0x40076f1	      3742	ops.c	FUNCTION_48	IF_38	FOR_2
0x769c	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3742	ops.c	FUNCTION_48	IF_38	FOR_2
0x76a3	           0xfb600	                   movzx eax, byte [rax]	      3742	ops.c	FUNCTION_48	IF_38	FOR_2
0x76a6	            0x84c0	                             test al, al	      3742	ops.c	FUNCTION_48	IF_38	FOR_2
0x76a8	            0x7507	                           jne 0x40076f1	      3742	ops.c	FUNCTION_48	IF_38	FOR_2
0x76aa	      0xb801000000	                              mov eax, 1	      3742	ops.c	FUNCTION_48	IF_38	FOR_2
0x76af	            0xeb05	                           jmp 0x40076f6	      3742	ops.c	FUNCTION_48	IF_38	FOR_2
0x76b1	      0xb800000000	                              mov eax, 0	      3742	ops.c	FUNCTION_48	IF_38	FOR_2
0x76b6	    0x8885c7feffff	              mov byte [rbp - 0x139], al	      3742	ops.c	FUNCTION_48	IF_38	FOR_2
0x76bc	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3744	ops.c	FUNCTION_48	IF_38	FOR_2	IF_51
0x76c2	    0x3985d8feffff	           cmp dword [rbp - 0x128], eax 	      3744	ops.c	FUNCTION_48	IF_38	FOR_2	IF_51
0x76c8	            0x7d14	                           jge 0x400771e	      3744	ops.c	FUNCTION_48	IF_38	FOR_2	IF_51
0x76ca	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3745	ops.c	FUNCTION_48	IF_38	FOR_2	IF_51
0x76d0	    0x2b85d8feffff	            sub eax, dword [rbp - 0x128]	      3745	ops.c	FUNCTION_48	IF_38	FOR_2	IF_51
0x76d6	          0x8945a0	             mov dword [rbp - 0x60], eax	      3745	ops.c	FUNCTION_48	IF_38	FOR_2	IF_51
0x76d9	      0xe9aa000000	                           jmp 0x40077c8	      3745	ops.c	FUNCTION_48	IF_38	FOR_2	IF_51
0x76de	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3746	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x76e4	    0x3985d8feffff	           cmp dword [rbp - 0x128], eax 	      3746	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x76ea	     0xf8e98000000	                           jle 0x40077c8	      3746	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x76f0	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3748	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x76f6	    0x8b95d8feffff	            mov edx, dword [rbp - 0x128]	      3748	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x76fc	            0x29c2	                            sub edx, eax	      3748	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x76fe	            0x89d0	                            mov eax, edx	      3748	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x7700	          0x8945a4	             mov dword [rbp - 0x5c], eax	      3748	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x7703	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      3749	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x7706	    0x8b95e0feffff	            mov edx, dword [rbp - 0x120]	      3749	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x770c	            0x29c2	                            sub edx, eax	      3749	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x770e	            0x89d0	                            mov eax, edx	      3749	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x7710	          0x8945a0	             mov dword [rbp - 0x60], eax	      3749	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x7713	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      3750	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x7716	          0x83e801	                              sub eax, 1	      3750	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x7719	          0x8945b8	             mov dword [rbp - 0x48], eax	      3750	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x771c	    0xc785dcfeffff	              mov dword [rbp - 0x124], 1	      3751	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52
0x7726	    0x8b0500000000	            mov eax, dword [0x0400776c] 	      3753	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x772c	            0x85c0	                           test eax, eax	      3753	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x772e	            0x7430	                            je 0x40077a0	      3753	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x7730	    0x488b05000000	            mov rax, qword [0x04007777] 	      3754	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x7737	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      3754	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x773a	          0x4863ca	                         movsxd rcx, edx	      3754	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x773d	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	      3754	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x7744	          0x4801d1	                            add rcx, rdx	      3754	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x7747	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	      3754	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x774e	          0x4889ce	                            mov rsi, rcx	      3754	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x7751	          0x4889d7	                            mov rdi, rdx	      3754	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x7754	            0xffd0	                                call rax	      3754	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x7756	            0x89c2	                            mov edx, eax	      3754	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x7758	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      3754	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x775b	            0x29d0	                            sub eax, edx	      3754	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x775d	          0x8945b8	             mov dword [rbp - 0x48], eax	      3754	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_53
0x7760	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      3756	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x7763	          0x4863d0	                         movsxd rdx, eax	      3756	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x7766	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3756	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x776d	          0x4801d0	                            add rax, rdx	      3756	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x7770	           0xfb600	                   movzx eax, byte [rax]	      3756	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x7773	            0x3c09	                               cmp al, 9	      3756	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x7775	            0x7411	                            je 0x40077c8	      3756	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x7777	    0xc785dcfeffff	              mov dword [rbp - 0x124], 0	      3761	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x7781	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	      3762	ops.c	FUNCTION_48	IF_38	FOR_2	ELSE_12	IF_52	IF_54
0x7788	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      3766	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_49
0x778f	    0x488d14c50000	                        lea rdx, [rax*8]	      3766	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_49
0x7797	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3766	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_49
0x779e	          0x4801d0	                            add rax, rdx	      3766	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_49
0x77a1	          0x488b00	                    mov rax, qword [rax]	      3766	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_49
0x77a4	          0x4889c7	                            mov rdi, rax	      3766	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_49
0x77a7	      0xe800000000	                          call 0x40077ec	      3766	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_49
0x77ac	    0x8985fcfeffff	            mov dword [rbp - 0x104], eax	      3766	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_49
0x77b2	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      3769	ops.c	FUNCTION_48	IF_38	FOR_2
0x77b9	          0x83c001	                              add eax, 1	      3769	ops.c	FUNCTION_48	IF_38	FOR_2
0x77bc	    0x8985f8feffff	            mov dword [rbp - 0x108], eax	      3769	ops.c	FUNCTION_48	IF_38	FOR_2
0x77c2	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	      3770	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x77cd	            0xeb46	                           jmp 0x4007855	      3770	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x77cf	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      3771	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x77d6	    0x488d14c50000	                        lea rdx, [rax*8]	      3771	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x77de	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3771	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x77e5	          0x4801d0	                            add rax, rdx	      3771	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x77e8	          0x488b10	                    mov rdx, qword [rax]	      3771	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x77eb	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3771	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x77f2	          0x4801d0	                            add rax, rdx	      3771	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x77f5	      0xba00000000	                              mov edx, 0	      3771	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x77fa	          0x4889c6	                            mov rsi, rax	      3771	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x77fd	      0xbf00000000	                              mov edi, 0	      3771	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x7802	      0xe800000000	                          call 0x4007847	      3771	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x7807	    0x2985f8feffff	            sub dword [rbp - 0x108], eax	      3771	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_50
0x780d	    0x48838540ffff	               add qword [rbp - 0xc0], 1	      3770	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x7815	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      3770	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x781b	            0x4898	                                    cdqe	      3770	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x781d	    0x483b8540ffff	             cmp rax, qword [rbp - 0xc0]	      3770	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x7824	            0x7fa9	                            jg 0x400780f	      3770	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_4
0x7826	    0x83bdf8feffff	              cmp dword [rbp - 0x108], 0	      3772	ops.c	FUNCTION_48	IF_38	FOR_2	IF_55
0x782d	            0x790a	                           jns 0x4007879	      3772	ops.c	FUNCTION_48	IF_38	FOR_2	IF_55
0x782f	    0xc785f8feffff	              mov dword [rbp - 0x108], 0	      3773	ops.c	FUNCTION_48	IF_38	FOR_2	IF_55
0x7839	    0x8b95fcfeffff	            mov edx, dword [rbp - 0x104]	      3776	ops.c	FUNCTION_48	IF_38	FOR_2
0x783f	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      3776	ops.c	FUNCTION_48	IF_38	FOR_2
0x7845	             0x1d0	                            add eax, edx	      3776	ops.c	FUNCTION_48	IF_38	FOR_2
0x7847	            0x89c2	                            mov edx, eax	      3776	ops.c	FUNCTION_48	IF_38	FOR_2
0x7849	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      3776	ops.c	FUNCTION_48	IF_38	FOR_2
0x7850	           0xfafc2	                           imul eax, edx	      3776	ops.c	FUNCTION_48	IF_38	FOR_2
0x7853	          0x8b55a0	             mov edx, dword [rbp - 0x60]	      3776	ops.c	FUNCTION_48	IF_38	FOR_2
0x7856	             0x1c2	                            add edx, eax	      3776	ops.c	FUNCTION_48	IF_38	FOR_2
0x7858	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      3776	ops.c	FUNCTION_48	IF_38	FOR_2
0x785b	             0x1d0	                            add eax, edx	      3776	ops.c	FUNCTION_48	IF_38	FOR_2
0x785d	    0x8985d0feffff	            mov dword [rbp - 0x130], eax	      3776	ops.c	FUNCTION_48	IF_38	FOR_2
0x7863	    0x8b95d0feffff	            mov edx, dword [rbp - 0x130]	      3777	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_51
0x7869	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      3777	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_51
0x786f	             0x1d0	                            add eax, edx	      3777	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_51
0x7871	          0x83c001	                              add eax, 1	      3777	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_51
0x7874	            0x89c7	                            mov edi, eax	      3777	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_51
0x7876	      0xe800000000	                          call 0x40078bb	      3777	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_51
0x787b	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      3777	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_51
0x7882	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      3778	ops.c	FUNCTION_48	IF_38	FOR_2	IF_56
0x788a	     0xf843a020000	                            je 0x4007b0a	      3778	ops.c	FUNCTION_48	IF_38	FOR_2	IF_56
0x7890	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3781	ops.c	FUNCTION_48	IF_38	FOR_2
0x7897	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3781	ops.c	FUNCTION_48	IF_38	FOR_2
0x789e	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      3782	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_52
0x78a1	          0x4863d0	                         movsxd rdx, eax	      3782	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_52
0x78a4	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3782	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_52
0x78ab	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	      3782	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_52
0x78b2	          0x4889ce	                            mov rsi, rcx	      3782	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_52
0x78b5	          0x4889c7	                            mov rdi, rax	      3782	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_52
0x78b8	      0xe800000000	                          call 0x40078fd	      3782	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_52
0x78bd	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      3783	ops.c	FUNCTION_48	IF_38	FOR_2
0x78c4	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      3783	ops.c	FUNCTION_48	IF_38	FOR_2
0x78c7	            0x4898	                                    cdqe	      3783	ops.c	FUNCTION_48	IF_38	FOR_2
0x78c9	          0x4801d0	                            add rax, rdx	      3783	ops.c	FUNCTION_48	IF_38	FOR_2
0x78cc	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3783	ops.c	FUNCTION_48	IF_38	FOR_2
0x78d3	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      3785	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_53
0x78d6	          0x4863d0	                         movsxd rdx, eax	      3785	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_53
0x78d9	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3785	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_53
0x78e0	      0xbe20000000	                           mov esi, 0x20	      3785	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_53
0x78e5	          0x4889c7	                            mov rdi, rax	      3785	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_53
0x78e8	      0xe800000000	                          call 0x400792d	      3785	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_53
0x78ed	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      3786	ops.c	FUNCTION_48	IF_38	FOR_2
0x78f4	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      3786	ops.c	FUNCTION_48	IF_38	FOR_2
0x78f7	            0x4898	                                    cdqe	      3786	ops.c	FUNCTION_48	IF_38	FOR_2
0x78f9	          0x4801d0	                            add rax, rdx	      3786	ops.c	FUNCTION_48	IF_38	FOR_2
0x78fc	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3786	ops.c	FUNCTION_48	IF_38	FOR_2
0x7903	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	      3788	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x790e	      0xe9b4000000	                           jmp 0x4007a07	      3788	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x7913	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      3790	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	CALL_54
0x7919	          0x4863d0	                         movsxd rdx, eax	      3790	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	CALL_54
0x791c	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      3790	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	CALL_54
0x7923	    0x488d0cc50000	                        lea rcx, [rax*8]	      3790	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	CALL_54
0x792b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3790	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	CALL_54
0x7932	          0x4801c8	                            add rax, rcx	      3790	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	CALL_54
0x7935	          0x488b08	                    mov rcx, qword [rax]	      3790	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	CALL_54
0x7938	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3790	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	CALL_54
0x793f	          0x4889ce	                            mov rsi, rcx	      3790	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	CALL_54
0x7942	          0x4889c7	                            mov rdi, rax	      3790	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	CALL_54
0x7945	      0xe800000000	                          call 0x400798a	      3790	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	CALL_54
0x794a	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      3791	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x7951	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      3791	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x7957	            0x4898	                                    cdqe	      3791	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x7959	          0x4801d0	                            add rax, rdx	      3791	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x795c	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3791	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x7963	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      3794	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x796a	        0x4883e801	                              sub rax, 1	      3794	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x796e	    0x483b8540ffff	             cmp rax, qword [rbp - 0xc0]	      3794	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x7975	            0x7f09	                            jg 0x40079c0	      3794	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x7977	    0x80bdc7feffff	               cmp byte [rbp - 0x139], 0	      3794	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x797e	            0x753f	                           jne 0x40079ff	      3794	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x7980	    0x83bdf8feffff	              cmp dword [rbp - 0x108], 0	      3794	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x7987	            0x7436	                            je 0x40079ff	      3794	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x7989	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57	CALL_55
0x798f	          0x4863d0	                         movsxd rdx, eax	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57	CALL_55
0x7992	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57	CALL_55
0x7999	      0xbe20000000	                           mov esi, 0x20	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57	CALL_55
0x799e	          0x4889c7	                            mov rdi, rax	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57	CALL_55
0x79a1	      0xe800000000	                          call 0x40079e6	      3796	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57	CALL_55
0x79a6	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      3797	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x79ad	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      3797	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x79b3	            0x4898	                                    cdqe	      3797	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x79b5	          0x4801d0	                            add rax, rdx	      3797	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x79b8	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3797	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5	IF_57
0x79bf	    0x48838540ffff	               add qword [rbp - 0xc0], 1	      3788	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x79c7	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      3788	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x79ce	    0x483b85b0feff	            cmp rax, qword [rbp - 0x150]	      3788	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x79d5	     0xf8c38ffffff	                            jl 0x4007953	      3788	ops.c	FUNCTION_48	IF_38	FOR_2	FOR_5
0x79db	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      3801	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_56
0x79de	          0x4863d0	                         movsxd rdx, eax	      3801	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_56
0x79e1	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3801	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_56
0x79e8	      0xbe20000000	                           mov esi, 0x20	      3801	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_56
0x79ed	          0x4889c7	                            mov rdi, rax	      3801	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_56
0x79f0	      0xe800000000	                          call 0x4007a35	      3801	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_56
0x79f5	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      3802	ops.c	FUNCTION_48	IF_38	FOR_2
0x79fc	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      3802	ops.c	FUNCTION_48	IF_38	FOR_2
0x79ff	            0x4898	                                    cdqe	      3802	ops.c	FUNCTION_48	IF_38	FOR_2
0x7a01	          0x4801d0	                            add rax, rdx	      3802	ops.c	FUNCTION_48	IF_38	FOR_2
0x7a04	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3802	ops.c	FUNCTION_48	IF_38	FOR_2
0x7a0b	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      3804	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x7a0e	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      3804	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x7a14	            0x29c2	                            sub edx, eax	      3804	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x7a16	            0x89d0	                            mov eax, edx	      3804	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x7a18	    0x2b85dcfeffff	            sub eax, dword [rbp - 0x124]	      3804	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x7a1e	          0x83c001	                              add eax, 1	      3804	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x7a21	          0x4863d0	                         movsxd rdx, eax	      3804	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x7a24	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      3804	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x7a27	          0x4863c8	                         movsxd rcx, eax	      3804	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x7a2a	    0x8b85dcfeffff	            mov eax, dword [rbp - 0x124]	      3804	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x7a30	            0x4898	                                    cdqe	      3804	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x7a32	          0x4801c1	                            add rcx, rax	      3804	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x7a35	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3804	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x7a3c	          0x4801c1	                            add rcx, rax	      3804	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x7a3f	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3804	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x7a46	          0x4889ce	                            mov rsi, rcx	      3804	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x7a49	          0x4889c7	                            mov rdi, rax	      3804	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x7a4c	      0xe800000000	                          call 0x4007a91	      3804	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_57
0x7a51	    0x488b05000000	            mov rax, qword [0x04007a98] 	      3806	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_58
0x7a58	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3806	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_58
0x7a5c	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	      3806	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_58
0x7a63	      0xba00000000	                              mov edx, 0	      3806	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_58
0x7a68	          0x4889ce	                            mov rsi, rcx	      3806	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_58
0x7a6b	          0x4889c7	                            mov rdi, rax	      3806	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_58
0x7a6e	      0xe800000000	                          call 0x4007ab3	      3806	ops.c	FUNCTION_48	IF_38	FOR_2	CALL_58
0x7a73	    0x488b05000000	            mov rax, qword [0x04007aba] 	      3808	ops.c	FUNCTION_48	IF_38	FOR_2
0x7a7a	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3808	ops.c	FUNCTION_48	IF_38	FOR_2
0x7a7e	        0x4883c201	                              add rdx, 1	      3808	ops.c	FUNCTION_48	IF_38	FOR_2
0x7a82	        0x48895038	             mov qword [rax + 0x38], rdx	      3808	ops.c	FUNCTION_48	IF_38	FOR_2
0x7a86	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	      3809	ops.c	FUNCTION_48	IF_38	FOR_2	IF_58
0x7a8e	            0x7519	                           jne 0x4007ae9	      3809	ops.c	FUNCTION_48	IF_38	FOR_2	IF_58
0x7a90	    0x488b05000000	            mov rax, qword [0x04007ad7] 	      3810	ops.c	FUNCTION_48	IF_38	FOR_2	IF_58
0x7a97	    0x488b15000000	            mov rdx, qword [0x04007ade] 	      3810	ops.c	FUNCTION_48	IF_38	FOR_2	IF_58
0x7a9e	          0x8b4a40	            mov ecx, dword [rdx + 0x40] 	      3810	ops.c	FUNCTION_48	IF_38	FOR_2	IF_58
0x7aa1	          0x8b55a0	             mov edx, dword [rbp - 0x60]	      3810	ops.c	FUNCTION_48	IF_38	FOR_2	IF_58
0x7aa4	             0x1ca	                            add edx, ecx	      3810	ops.c	FUNCTION_48	IF_38	FOR_2	IF_58
0x7aa6	          0x895040	             mov dword [rax + 0x40], edx	      3810	ops.c	FUNCTION_48	IF_38	FOR_2	IF_58
0x7aa9	    0x48838528ffff	               add qword [rbp - 0xd8], 1	      3713	ops.c	FUNCTION_48	IF_38	FOR_2
0x7ab1	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      3713	ops.c	FUNCTION_48	IF_38	FOR_2
0x7ab8	    0x483b8530ffff	             cmp rax, qword [rbp - 0xd0]	      3713	ops.c	FUNCTION_48	IF_38	FOR_2
0x7abf	     0xf8cb6faffff	                            jl 0x40075bb	      3713	ops.c	FUNCTION_48	IF_38	FOR_2
0x7ac5	            0xeb04	                           jmp 0x4007b0b	      3713	ops.c	FUNCTION_48	IF_38	FOR_2
0x7ac7	              0x90	                                     nop	      3728	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50
0x7ac8	            0xeb01	                           jmp 0x4007b0b	      3728	ops.c	FUNCTION_48	IF_38	FOR_2	IF_49	IF_50
0x7aca	              0x90	                                     nop	      3779	ops.c	FUNCTION_48	IF_38	FOR_2	IF_56
0x7acb	    0x488b05000000	            mov rax, qword [0x04007b12] 	      3813	ops.c	FUNCTION_48	IF_38	CALL_59
0x7ad2	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3813	ops.c	FUNCTION_48	IF_38	CALL_59
0x7ad6	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3813	ops.c	FUNCTION_48	IF_38	CALL_59
0x7add	    0x488b8d50ffff	             mov rcx, qword [rbp - 0xb0]	      3813	ops.c	FUNCTION_48	IF_38	CALL_59
0x7ae4	      0xbe00000000	                              mov esi, 0	      3813	ops.c	FUNCTION_48	IF_38	CALL_59
0x7ae9	          0x4889c7	                            mov rdi, rax	      3813	ops.c	FUNCTION_48	IF_38	CALL_59
0x7aec	      0xe800000000	                          call 0x4007b31	      3813	ops.c	FUNCTION_48	IF_38	CALL_59
0x7af1	    0x488b0d000000	            mov rcx, qword [0x04007b38] 	      3816	ops.c	FUNCTION_48	IF_38
0x7af8	    0x488b05000000	            mov rax, qword [0x04007b3f] 	      3816	ops.c	FUNCTION_48	IF_38
0x7aff	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      3816	ops.c	FUNCTION_48	IF_38
0x7b03	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3816	ops.c	FUNCTION_48	IF_38
0x7b07	    0x488981d01100	          mov qword [rcx + 0x11d0], rax 	      3816	ops.c	FUNCTION_48	IF_38
0x7b0e	    0x488991d81100	          mov qword [rcx + 0x11d8], rdx 	      3816	ops.c	FUNCTION_48	IF_38
0x7b15	    0x488b05000000	            mov rax, qword [0x04007b5c] 	      3817	ops.c	FUNCTION_48	IF_38
0x7b1c	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      3817	ops.c	FUNCTION_48	IF_38
0x7b23	    0x488990d01100	          mov qword [rax + 0x11d0], rdx 	      3817	ops.c	FUNCTION_48	IF_38
0x7b2a	    0x488b05000000	            mov rax, qword [0x04007b71] 	      3820	ops.c	FUNCTION_48	IF_38
0x7b31	    0x488b15000000	            mov rdx, qword [0x04007b78] 	      3820	ops.c	FUNCTION_48	IF_38
0x7b38	        0x488b5238	            mov rdx, qword [rdx + 0x38] 	      3820	ops.c	FUNCTION_48	IF_38
0x7b3c	        0x4883ea01	                              sub rdx, 1	      3820	ops.c	FUNCTION_48	IF_38
0x7b40	    0x488990f01100	          mov qword [rax + 0x11f0], rdx 	      3820	ops.c	FUNCTION_48	IF_38
0x7b47	    0x488b05000000	            mov rax, qword [0x04007b8e] 	      3821	ops.c	FUNCTION_48	IF_38
0x7b4e	          0x8b4db8	             mov ecx, dword [rbp - 0x48]	      3821	ops.c	FUNCTION_48	IF_38
0x7b51	    0x8b95d0feffff	            mov edx, dword [rbp - 0x130]	      3821	ops.c	FUNCTION_48	IF_38
0x7b57	             0x1ca	                            add edx, ecx	      3821	ops.c	FUNCTION_48	IF_38
0x7b59	          0x83ea01	                              sub edx, 1	      3821	ops.c	FUNCTION_48	IF_38
0x7b5c	    0x8990f8110000	          mov dword [rax + 0x11f8], edx 	      3821	ops.c	FUNCTION_48	IF_38
0x7b62	    0x488b05000000	            mov rax, qword [0x04007ba9] 	      3823	ops.c	FUNCTION_48	IF_38
0x7b69	    0xc780fc110000	            mov dword [rax + 0x11fc], 0 	      3823	ops.c	FUNCTION_48	IF_38
0x7b73	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      3825	ops.c	FUNCTION_48	IF_38	IF_59
0x7b79	          0x83e002	                              and eax, 2	      3825	ops.c	FUNCTION_48	IF_38	IF_59
0x7b7c	            0x85c0	                           test eax, eax	      3825	ops.c	FUNCTION_48	IF_38	IF_59
0x7b7e	            0x7472	                            je 0x4007c32	      3825	ops.c	FUNCTION_48	IF_38	IF_59
0x7b80	    0x488b0d000000	            mov rcx, qword [0x04007bc7] 	      3829	ops.c	FUNCTION_48	IF_38	IF_59
0x7b87	    0x488b05000000	            mov rax, qword [0x04007bce] 	      3829	ops.c	FUNCTION_48	IF_38	IF_59
0x7b8e	    0x488b90f81100	          mov rdx, qword [rax + 0x11f8] 	      3829	ops.c	FUNCTION_48	IF_38	IF_59
0x7b95	    0x488b80f01100	          mov rax, qword [rax + 0x11f0] 	      3829	ops.c	FUNCTION_48	IF_38	IF_59
0x7b9c	        0x48894138	             mov qword [rcx + 0x38], rax	      3829	ops.c	FUNCTION_48	IF_38	IF_59
0x7ba0	        0x48895140	             mov qword [rcx + 0x40], rdx	      3829	ops.c	FUNCTION_48	IF_38	IF_59
0x7ba4	    0x488b05000000	            mov rax, qword [0x04007beb] 	      3830	ops.c	FUNCTION_48	IF_38	IF_59
0x7bab	          0x8b5040	            mov edx, dword [rax + 0x40] 	      3830	ops.c	FUNCTION_48	IF_38	IF_59
0x7bae	          0x83c201	                              add edx, 1	      3830	ops.c	FUNCTION_48	IF_38	IF_59
0x7bb1	          0x895040	             mov dword [rax + 0x40], edx	      3830	ops.c	FUNCTION_48	IF_38	IF_59
0x7bb4	      0xe800000000	                          call 0x4007bf9	      3833	ops.c	FUNCTION_48	IF_38	IF_59	CALL_61
0x7bb9	          0x4889c7	                            mov rdi, rax	      3833	ops.c	FUNCTION_48	IF_38	IF_59	CALL_61
0x7bbc	      0xe800000000	                          call 0x4007c01	      3833	ops.c	FUNCTION_48	IF_38	IF_59	CALL_61
0x7bc1	    0x89850cffffff	             mov dword [rbp - 0xf4], eax	      3833	ops.c	FUNCTION_48	IF_38	IF_59	CALL_61
0x7bc7	    0x488b05000000	            mov rax, qword [0x04007c0e] 	      3834	ops.c	FUNCTION_48	IF_38	IF_59	IF_60
0x7bce	          0x8b4040	            mov eax, dword [rax + 0x40] 	      3834	ops.c	FUNCTION_48	IF_38	IF_59	IF_60
0x7bd1	    0x3b850cffffff	             cmp eax, dword [rbp - 0xf4]	      3834	ops.c	FUNCTION_48	IF_38	IF_59	IF_60
0x7bd7	     0xf8e920b0000	                           jle 0x40087af	      3834	ops.c	FUNCTION_48	IF_38	IF_59	IF_60
0x7bdd	    0x488b05000000	            mov rax, qword [0x04007c24] 	      3835	ops.c	FUNCTION_48	IF_38	IF_59	IF_60
0x7be4	    0x8b950cffffff	             mov edx, dword [rbp - 0xf4]	      3835	ops.c	FUNCTION_48	IF_38	IF_59	IF_60
0x7bea	          0x895040	             mov dword [rax + 0x40], edx	      3835	ops.c	FUNCTION_48	IF_38	IF_59	IF_60
0x7bed	      0xe97d0b0000	                           jmp 0x40087af	      3835	ops.c	FUNCTION_48	IF_38	IF_59	IF_60
0x7bf2	    0x488b05000000	            mov rax, qword [0x04007c39] 	      3838	ops.c	FUNCTION_48	IF_38	ELSE_13
0x7bf9	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      3838	ops.c	FUNCTION_48	IF_38	ELSE_13
0x7c00	        0x48895038	             mov qword [rax + 0x38], rdx	      3838	ops.c	FUNCTION_48	IF_38	ELSE_13
0x7c04	      0xe9660b0000	                           jmp 0x40087af	      3838	ops.c	FUNCTION_48	IF_38	ELSE_13
0x7c09	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 0	      3845	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x7c10	     0xf85fc000000	                           jne 0x4007d52	      3845	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x7c16	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 1	      3849	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	CALL_62
0x7c1d	     0xf85c9000000	                           jne 0x4007d2c	      3849	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	CALL_62
0x7c23	      0xe800000000	                          call 0x4007c68	      3849	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	CALL_62
0x7c28	            0x85c0	                           test eax, eax	      3849	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	CALL_62
0x7c2a	     0xf84bc000000	                            je 0x4007d2c	      3849	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	CALL_62
0x7c30	    0x8b0500000000	            mov eax, dword [0x04007c76] 	      3852	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63
0x7c36	            0x85c0	                           test eax, eax	      3852	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63
0x7c38	            0x7474	                            je 0x4007cee	      3852	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63
0x7c3a	    0x488b1d000000	            mov rbx, qword [0x04007c81] 	      3854	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	CALL_63
0x7c41	      0xe800000000	                          call 0x4007c86	      3854	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	CALL_63
0x7c46	          0x4889c7	                            mov rdi, rax	      3854	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	CALL_63
0x7c49	            0xffd3	                                call rbx	      3854	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	CALL_63
0x7c4b	    0x898500ffffff	            mov dword [rbp - 0x100], eax	      3854	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	CALL_63
0x7c51	    0x8b95c8feffff	            mov edx, dword [rbp - 0x138]	      3857	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63
0x7c57	    0x8b8500ffffff	            mov eax, dword [rbp - 0x100]	      3857	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63
0x7c5d	             0x1d0	                            add eax, edx	      3857	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63
0x7c5f	    0x8985c8feffff	            mov dword [rbp - 0x138], eax	      3857	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63
0x7c65	    0x83bdfcfeffff	              cmp dword [rbp - 0x104], 0	      3858	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x7c6c	            0x747e	                            je 0x4007d2c	      3858	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x7c6e	    0x488b05000000	            mov rax, qword [0x04007cb5] 	      3860	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x7c75	    0x488b15000000	            mov rdx, qword [0x04007cbc] 	      3860	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x7c7c	          0x8b4a40	            mov ecx, dword [rdx + 0x40] 	      3860	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x7c7f	    0x8b9500ffffff	            mov edx, dword [rbp - 0x100]	      3860	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x7c85	             0x1ca	                            add edx, ecx	      3860	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x7c87	          0x895040	             mov dword [rax + 0x40], edx	      3860	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x7c8a	    0x488b05000000	            mov rax, qword [0x04007cd1] 	      3861	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x7c91	    0x488b15000000	            mov rdx, qword [0x04007cd8] 	      3861	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x7c98	    0x8b8af8110000	          mov ecx, dword [rdx + 0x11f8] 	      3861	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x7c9e	    0x8b9500ffffff	            mov edx, dword [rbp - 0x100]	      3861	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x7ca4	             0x1ca	                            add edx, ecx	      3861	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x7ca6	    0x8990f8110000	          mov dword [rax + 0x11f8], edx 	      3861	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x7cac	            0xeb3e	                           jmp 0x4007d2c	      3861	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	IF_63	IF_64
0x7cae	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3867	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15
0x7cb4	          0x83c001	                              add eax, 1	      3867	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15
0x7cb7	    0x8985c8feffff	            mov dword [rbp - 0x138], eax	      3867	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15
0x7cbd	    0x83bdfcfeffff	              cmp dword [rbp - 0x104], 0	      3868	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x7cc4	            0x7426	                            je 0x4007d2c	      3868	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x7cc6	    0x488b05000000	            mov rax, qword [0x04007d0d] 	      3870	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x7ccd	          0x8b5040	            mov edx, dword [rax + 0x40] 	      3870	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x7cd0	          0x83c201	                              add edx, 1	      3870	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x7cd3	          0x895040	             mov dword [rax + 0x40], edx	      3870	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x7cd6	    0x488b05000000	            mov rax, qword [0x04007d1d] 	      3871	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x7cdd	    0x8b90f8110000	          mov edx, dword [rax + 0x11f8] 	      3871	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x7ce3	          0x83c201	                              add edx, 1	      3871	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x7ce6	    0x8990f8110000	          mov dword [rax + 0x11f8], edx 	      3871	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61	IF_62	ELSE_15	IF_65
0x7cec	    0x488b0d000000	            mov rcx, qword [0x04007d33] 	      3875	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x7cf3	    0x488b05000000	            mov rax, qword [0x04007d3a] 	      3875	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x7cfa	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      3875	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x7cfe	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3875	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x7d02	    0x488981d01100	          mov qword [rcx + 0x11d0], rax 	      3875	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x7d09	    0x488991d81100	          mov qword [rcx + 0x11d8], rdx 	      3875	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x7d10	            0xeb1b	                           jmp 0x4007d6d	      3875	ops.c	FUNCTION_48	ELSE_13	ELSE_14	IF_61
0x7d12	    0x83bdb8feffff	cmp dword [rbp - 0x148], 0xffffffffffffffff	      3880	ops.c	FUNCTION_48	ELSE_14	ELSE_16	IF_66
0x7d19	            0x7512	                           jne 0x4007d6d	      3880	ops.c	FUNCTION_48	ELSE_14	ELSE_16	IF_66
0x7d1b	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3881	ops.c	FUNCTION_48	ELSE_14	ELSE_16	IF_66
0x7d22	        0x4883e801	                              sub rax, 1	      3881	ops.c	FUNCTION_48	ELSE_14	ELSE_16	IF_66
0x7d26	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      3881	ops.c	FUNCTION_48	ELSE_14	ELSE_16	IF_66
0x7d2d	    0x488b05000000	            mov rax, qword [0x04007d74] 	      3882	ops.c	FUNCTION_48	ELSE_14
0x7d34	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      3882	ops.c	FUNCTION_48	ELSE_14
0x7d38	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3882	ops.c	FUNCTION_48	ELSE_14
0x7d3c	        0x48894580	             mov qword [rbp - 0x80], rax	      3882	ops.c	FUNCTION_48	ELSE_14
0x7d40	        0x48895588	             mov qword [rbp - 0x78], rdx	      3882	ops.c	FUNCTION_48	ELSE_14
0x7d44	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 0	      3887	ops.c	FUNCTION_48	ELSE_14	IF_67
0x7d4b	     0xf8515030000	                           jne 0x40080a6	      3887	ops.c	FUNCTION_48	ELSE_14	IF_67
0x7d51	    0x4883bd30ffff	               cmp qword [rbp - 0xd0], 1	      3887	ops.c	FUNCTION_48	ELSE_14	IF_67
0x7d59	     0xf8507030000	                           jne 0x40080a6	      3887	ops.c	FUNCTION_48	ELSE_14	IF_67
0x7d5f	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	      3889	ops.c	FUNCTION_48	ELSE_14	IF_67
0x7d6a	    0x8b0500000000	            mov eax, dword [0x04007db0] 	      3891	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68
0x7d70	            0x85c0	                           test eax, eax	      3891	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68
0x7d72	            0x7441	                            je 0x4007df5	      3891	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68
0x7d74	    0x488b05000000	            mov rax, qword [0x04007dbb] 	      3893	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68
0x7d7b	    0x488b80f80200	           mov rax, qword [rax + 0x2f8] 	      3893	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68
0x7d82	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      3893	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68
0x7d89	    0x488b05000000	            mov rax, qword [0x04007dd0] 	      3894	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x7d90	    0x488b80e80200	           mov rax, qword [rax + 0x2e8] 	      3894	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x7d97	    0x483b8568ffff	             cmp rax, qword [rbp - 0x98]	      3894	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x7d9e	            0x7e15	                           jle 0x4007df5	      3894	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x7da0	    0x488b05000000	            mov rax, qword [0x04007de7] 	      3895	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x7da7	    0x488b80e80200	           mov rax, qword [rax + 0x2e8] 	      3895	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x7dae	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      3895	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_68	IF_69
0x7db5	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      3899	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x7dbc	            0x89c2	                            mov edx, eax	      3899	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x7dbe	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      3899	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x7dc4	           0xfafc2	                           imul eax, edx	      3899	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x7dc7	    0x8985d0feffff	            mov dword [rbp - 0x130], eax	      3899	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x7dcd	    0x83bdd0feffff	              cmp dword [rbp - 0x130], 0	      3900	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70
0x7dd4	     0xf8ec6010000	                           jle 0x4007fe0	      3900	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70
0x7dda	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3902	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_64
0x7de1	          0x4889c7	                            mov rdi, rax	      3902	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_64
0x7de4	      0xe800000000	                          call 0x4007e29	      3902	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_64
0x7de9	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      3902	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_64
0x7df0	    0x8b0500000000	            mov eax, dword [0x04007e36] 	      3903	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x7df6	            0x85c0	                           test eax, eax	      3903	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x7df8	            0x7432	                            je 0x4007e6c	      3903	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x7dfa	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3903	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x7e01	          0x4889c7	                            mov rdi, rax	      3903	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x7e04	      0xe800000000	                          call 0x4007e49	      3903	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x7e09	            0x89c2	                            mov edx, eax	      3903	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x7e0b	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3903	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x7e11	            0x39c2	                            cmp edx, eax	      3903	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x7e13	            0x7d17	                           jge 0x4007e6c	      3903	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71	CALL_65
0x7e15	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3905	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71
0x7e1c	        0x4883c001	                              add rax, 1	      3905	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71
0x7e20	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      3905	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71
0x7e27	      0xe990010000	                           jmp 0x4007ffc	      3906	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_71
0x7e2c	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3908	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x7e33	          0x4889c7	                            mov rdi, rax	      3908	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x7e36	      0xe800000000	                          call 0x4007e7b	      3908	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x7e3b	            0x89c2	                            mov edx, eax	      3908	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x7e3d	    0x8b85d0feffff	            mov eax, dword [rbp - 0x130]	      3908	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x7e43	             0x1d0	                            add eax, edx	      3908	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x7e45	          0x83c001	                              add eax, 1	      3908	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x7e48	            0x89c7	                            mov edi, eax	      3908	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x7e4a	      0xe800000000	                          call 0x4007e8f	      3908	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x7e4f	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      3908	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_67
0x7e56	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      3909	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_72
0x7e5e	     0xf843c090000	                            je 0x40087e0	      3909	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_72
0x7e64	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3911	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_68
0x7e6a	          0x4863d0	                         movsxd rdx, eax	      3911	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_68
0x7e6d	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	      3911	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_68
0x7e74	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3911	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_68
0x7e7b	          0x4889ce	                            mov rsi, rcx	      3911	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_68
0x7e7e	          0x4889c7	                            mov rdi, rax	      3911	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_68
0x7e81	      0xe800000000	                          call 0x4007ec6	      3911	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_68
0x7e86	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3912	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70
0x7e8c	          0x4863d0	                         movsxd rdx, eax	      3912	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70
0x7e8f	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3912	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70
0x7e96	          0x4801d0	                            add rax, rdx	      3912	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70
0x7e99	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3912	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70
0x7ea0	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      3913	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x7eab	            0xeb46	                           jmp 0x4007f33	      3913	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x7ead	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      3915	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6	CALL_69
0x7eb3	          0x4863d0	                         movsxd rdx, eax	      3915	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6	CALL_69
0x7eb6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3915	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6	CALL_69
0x7ebd	          0x488b08	                    mov rcx, qword [rax]	      3915	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6	CALL_69
0x7ec0	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3915	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6	CALL_69
0x7ec7	          0x4889ce	                            mov rsi, rcx	      3915	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6	CALL_69
0x7eca	          0x4889c7	                            mov rdi, rax	      3915	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6	CALL_69
0x7ecd	      0xe800000000	                          call 0x4007f12	      3915	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6	CALL_69
0x7ed2	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      3916	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x7ed9	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      3916	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x7edf	            0x4898	                                    cdqe	      3916	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x7ee1	          0x4801d0	                            add rax, rdx	      3916	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x7ee4	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3916	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x7eeb	    0x48838528ffff	               add qword [rbp - 0xd8], 1	      3913	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x7ef3	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      3913	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x7efa	    0x483b85b0feff	            cmp rax, qword [rbp - 0x150]	      3913	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x7f01	            0x7caa	                            jl 0x4007eed	      3913	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	FOR_6
0x7f03	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3918	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x7f09	          0x4863d0	                         movsxd rdx, eax	      3918	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x7f0c	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3918	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x7f13	          0x4801d0	                            add rax, rdx	      3918	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x7f16	          0x4889c7	                            mov rdi, rax	      3918	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x7f19	      0xe800000000	                          call 0x4007f5e	      3918	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x7f1e	        0x488d5001	                      lea rdx, [rax + 1]	      3918	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x7f22	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3918	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x7f28	          0x4863c8	                         movsxd rcx, eax	      3918	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x7f2b	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      3918	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x7f32	          0x4801c1	                            add rcx, rax	      3918	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x7f35	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3918	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x7f3c	          0x4889ce	                            mov rsi, rcx	      3918	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x7f3f	          0x4889c7	                            mov rdi, rax	      3918	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x7f42	      0xe800000000	                          call 0x4007f87	      3918	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_70
0x7f47	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3919	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_71
0x7f4e	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	      3919	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_71
0x7f55	      0xba00000000	                              mov edx, 0	      3919	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_71
0x7f5a	          0x4889ce	                            mov rsi, rcx	      3919	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_71
0x7f5d	          0x4889c7	                            mov rdi, rax	      3919	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_71
0x7f60	      0xe800000000	                          call 0x4007fa5	      3919	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	CALL_71
0x7f65	    0x488b05000000	            mov rax, qword [0x04007fac] 	      3921	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x7f6c	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3921	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x7f70	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3921	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x7f77	          0x4839c2	                            cmp rdx, rax	      3921	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x7f7a	            0x7524	                           jne 0x4007fe0	      3921	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x7f7c	      0xe800000000	                          call 0x4007fc1	      3924	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73	CALL_72
0x7f81	    0x488b05000000	            mov rax, qword [0x04007fc8] 	      3925	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x7f88	    0x488b15000000	            mov rdx, qword [0x04007fcf] 	      3925	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x7f8f	          0x8b5240	            mov edx, dword [rdx + 0x40] 	      3925	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x7f92	    0x8b8dd0feffff	            mov ecx, dword [rbp - 0x130]	      3925	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x7f98	          0x83e901	                              sub ecx, 1	      3925	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x7f9b	             0x1ca	                            add edx, ecx	      3925	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x7f9d	          0x895040	             mov dword [rax + 0x40], edx	      3925	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_73
0x7fa0	    0x8b0500000000	            mov eax, dword [0x04007fe6] 	      3928	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_74
0x7fa6	            0x85c0	                           test eax, eax	      3928	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_74
0x7fa8	            0x7412	                            je 0x4007ffc	      3928	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_74
0x7faa	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3929	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_74
0x7fb1	        0x4883c001	                              add rax, 1	      3929	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_74
0x7fb5	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      3929	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_74
0x7fbc	    0x8b0500000000	            mov eax, dword [0x04008002] 	      3930	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x7fc2	            0x85c0	                           test eax, eax	      3930	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x7fc4	            0x7414	                            je 0x400801a	      3930	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x7fc6	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3930	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x7fcd	    0x483b8568ffff	             cmp rax, qword [rbp - 0x98]	      3930	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x7fd4	     0xf8edbfdffff	                           jle 0x4007df5	      3930	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1
0x7fda	    0x8b0500000000	            mov eax, dword [0x04008020] 	      3932	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_75
0x7fe0	            0x85c0	                           test eax, eax	      3932	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_75
0x7fe2	            0x7412	                            je 0x4008036	      3932	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_75
0x7fe4	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3933	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_75
0x7feb	        0x4883e801	                              sub rax, 1	      3933	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_75
0x7fef	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      3933	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_75
0x7ff6	    0x488b0d000000	            mov rcx, qword [0x0400803d] 	      3935	ops.c	FUNCTION_48	ELSE_14	IF_67
0x7ffd	    0x488b05000000	            mov rax, qword [0x04008044] 	      3935	ops.c	FUNCTION_48	ELSE_14	IF_67
0x8004	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      3935	ops.c	FUNCTION_48	ELSE_14	IF_67
0x8008	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3935	ops.c	FUNCTION_48	ELSE_14	IF_67
0x800c	    0x488981f01100	          mov qword [rcx + 0x11f0], rax 	      3935	ops.c	FUNCTION_48	ELSE_14	IF_67
0x8013	    0x488991f81100	          mov qword [rcx + 0x11f8], rdx 	      3935	ops.c	FUNCTION_48	ELSE_14	IF_67
0x801a	    0x83bdd0feffff	              cmp dword [rbp - 0x130], 0	      3937	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x8021	            0x7427	                            je 0x400808a	      3937	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x8023	    0x8b0500000000	            mov eax, dword [0x04008069] 	      3937	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x8029	            0x85c0	                           test eax, eax	      3937	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x802b	            0x750d	                           jne 0x400807a	      3937	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x802d	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      3937	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x8033	          0x83e002	                              and eax, 2	      3937	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x8036	            0x85c0	                           test eax, eax	      3937	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x8038	            0x7410	                            je 0x400808a	      3937	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x803a	    0x488b05000000	            mov rax, qword [0x04008081] 	      3938	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x8041	          0x8b5040	            mov edx, dword [rax + 0x40] 	      3938	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x8044	          0x83c201	                              add edx, 1	      3938	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x8047	          0x895040	             mov dword [rax + 0x40], edx	      3938	ops.c	FUNCTION_48	ELSE_14	IF_67	IF_76
0x804a	    0x8b95c8feffff	            mov edx, dword [rbp - 0x138]	      3939	ops.c	FUNCTION_48	ELSE_14	IF_67	CALL_73
0x8050	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3939	ops.c	FUNCTION_48	ELSE_14	IF_67	CALL_73
0x8057	            0x89d6	                            mov esi, edx	      3939	ops.c	FUNCTION_48	ELSE_14	IF_67	CALL_73
0x8059	          0x4889c7	                            mov rdi, rax	      3939	ops.c	FUNCTION_48	ELSE_14	IF_67	CALL_73
0x805c	      0xe800000000	                          call 0x40080a1	      3939	ops.c	FUNCTION_48	ELSE_14	IF_67	CALL_73
0x8061	      0xe909070000	                           jmp 0x40087af	      3888	ops.c	FUNCTION_48	ELSE_14	IF_67
0x8066	    0x48c78558ffff	               mov qword [rbp - 0xa8], 1	      3947	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x8071	      0xe91e040000	                           jmp 0x40084d4	      3947	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x8076	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	      3949	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x8081	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 0	      3950	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x8088	     0xf85ea030000	                           jne 0x40084b8	      3950	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x808e	        0x488b4580	             mov rax, qword [rbp - 0x80]	      3957	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x8092	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      3957	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x8099	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3958	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_74
0x80a0	          0x4889c7	                            mov rdi, rax	      3958	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_74
0x80a3	      0xe800000000	                          call 0x40080e8	      3958	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_74
0x80a8	          0x4889c2	                            mov rdx, rax	      3958	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_74
0x80ab	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3958	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_74
0x80b1	            0x4898	                                    cdqe	      3958	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_74
0x80b3	          0x4801d0	                            add rax, rdx	      3958	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_74
0x80b6	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3958	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_74
0x80bd	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      3959	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x80c4	        0x48c1e003	                              shl rax, 3	      3959	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x80c8	        0x488d50f8	                      lea rdx, [rax - 8]	      3959	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x80cc	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3959	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x80d3	          0x4801d0	                            add rax, rdx	      3959	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x80d6	          0x488b00	                    mov rax, qword [rax]	      3959	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x80d9	          0x4889c7	                            mov rdi, rax	      3959	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x80dc	      0xe800000000	                          call 0x4008121	      3959	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x80e1	    0x8985d0feffff	            mov dword [rbp - 0x130], eax	      3959	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_75
0x80e7	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3960	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x80ee	          0x4889c7	                            mov rdi, rax	      3960	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x80f1	      0xe800000000	                          call 0x4008136	      3960	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x80f6	            0x89c2	                            mov edx, eax	      3960	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x80f8	    0x8b85d0feffff	            mov eax, dword [rbp - 0x130]	      3960	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x80fe	             0x1d0	                            add eax, edx	      3960	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x8100	          0x83c001	                              add eax, 1	      3960	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x8103	            0x89c7	                            mov edi, eax	      3960	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x8105	      0xe800000000	                          call 0x400814a	      3960	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x810a	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      3960	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_77
0x8111	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      3961	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	IF_78
0x8119	     0xf848b030000	                            je 0x40084ea	      3961	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	IF_78
0x811f	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      3963	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_78
0x8126	        0x48c1e003	                              shl rax, 3	      3963	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_78
0x812a	        0x488d50f8	                      lea rdx, [rax - 8]	      3963	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_78
0x812e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3963	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_78
0x8135	          0x4801d0	                            add rax, rdx	      3963	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_78
0x8138	          0x488b10	                    mov rdx, qword [rax]	      3963	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_78
0x813b	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3963	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_78
0x8142	          0x4889d6	                            mov rsi, rdx	      3963	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_78
0x8145	          0x4889c7	                            mov rdi, rax	      3963	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_78
0x8148	      0xe800000000	                          call 0x400818d	      3963	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_78
0x814d	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      3964	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_79
0x8154	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3964	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_79
0x815b	          0x4889d6	                            mov rsi, rdx	      3964	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_79
0x815e	          0x4889c7	                            mov rdi, rax	      3964	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_79
0x8161	      0xe800000000	                          call 0x40081a6	      3964	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_79
0x8166	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3966	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_80
0x816d	    0x488bb578ffff	             mov rsi, qword [rbp - 0x88]	      3966	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_80
0x8174	      0xb900000000	                              mov ecx, 0	      3966	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_80
0x8179	      0xba00000000	                              mov edx, 0	      3966	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_80
0x817e	          0x4889c7	                            mov rdi, rax	      3966	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_80
0x8181	      0xe800000000	                          call 0x40081c6	      3966	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_80
0x8186	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3967	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_81
0x818d	          0x4889c7	                            mov rdi, rax	      3967	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_81
0x8190	      0xe800000000	                          call 0x40081d5	      3967	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_81
0x8195	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3969	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_82
0x819c	          0x4889c7	                            mov rdi, rax	      3969	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_82
0x819f	      0xe800000000	                          call 0x40081e4	      3969	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_82
0x81a4	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      3969	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_82
0x81ab	    0x8b95c8feffff	            mov edx, dword [rbp - 0x138]	      3970	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_83
0x81b1	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      3970	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_83
0x81b7	             0x1d0	                            add eax, edx	      3970	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_83
0x81b9	          0x83c001	                              add eax, 1	      3970	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_83
0x81bc	            0x89c7	                            mov edi, eax	      3970	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_83
0x81be	      0xe800000000	                          call 0x4008203	      3970	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_83
0x81c3	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      3970	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_83
0x81ca	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      3971	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	IF_79
0x81d2	     0xf84d5020000	                            je 0x40084ed	      3971	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	IF_79
0x81d8	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      3974	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_84
0x81de	          0x4863d0	                         movsxd rdx, eax	      3974	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_84
0x81e1	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	      3974	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_84
0x81e8	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      3974	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_84
0x81ef	          0x4889ce	                            mov rsi, rcx	      3974	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_84
0x81f2	          0x4889c7	                            mov rdi, rax	      3974	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_84
0x81f5	      0xe800000000	                          call 0x400823a	      3974	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_84
0x81fa	    0x8b85fcfeffff	            mov eax, dword [rbp - 0x104]	      3976	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_85
0x8200	          0x83c001	                              add eax, 1	      3976	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_85
0x8203	          0x4863d0	                         movsxd rdx, eax	      3976	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_85
0x8206	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3976	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_85
0x820d	          0x488b00	                    mov rax, qword [rax]	      3976	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_85
0x8210	    0x8b8dc8feffff	            mov ecx, dword [rbp - 0x138]	      3976	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_85
0x8216	          0x4863f1	                         movsxd rsi, ecx	      3976	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_85
0x8219	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	      3976	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_85
0x8220	          0x4801f1	                            add rcx, rsi	      3976	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_85
0x8223	          0x4889c6	                            mov rsi, rax	      3976	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_85
0x8226	          0x4889cf	                            mov rdi, rcx	      3976	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_85
0x8229	      0xe800000000	                          call 0x400826e	      3976	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_85
0x822e	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3977	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_86
0x8235	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	      3977	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_86
0x823c	      0xba00000000	                              mov edx, 0	      3977	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_86
0x8241	          0x4889ce	                            mov rsi, rcx	      3977	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_86
0x8244	          0x4889c7	                            mov rdi, rax	      3977	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_86
0x8247	      0xe800000000	                          call 0x400828c	      3977	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	CALL_86
0x824c	    0x488b05000000	            mov rax, qword [0x04008293] 	      3979	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x8253	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      3979	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x825a	        0x48895038	             mov qword [rax + 0x38], rdx	      3979	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x825e	    0x48c78528ffff	               mov qword [rbp - 0xd8], 1	      3980	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77
0x8269	      0xe90a020000	                           jmp 0x40084b8	      3983	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x826e	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 0	      3985	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x8275	            0x7514	                           jne 0x40082cb	      3985	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x8277	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      3985	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x827e	        0x4883e801	                              sub rax, 1	      3985	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x8282	    0x483b8528ffff	             cmp rax, qword [rbp - 0xd8]	      3985	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x8289	            0x7e3d	                           jle 0x4008308	      3985	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x828b	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      3986	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x8292	    0x488d14c50000	                        lea rdx, [rax*8]	      3986	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x829a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      3986	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x82a1	          0x4801d0	                            add rax, rdx	      3986	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x82a4	          0x488b30	                    mov rsi, qword [rax]	      3986	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x82a7	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3986	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x82ae	      0xb900000000	                              mov ecx, 0	      3986	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x82b3	      0xba00000000	                              mov edx, 0	      3986	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x82b8	          0x4889c7	                            mov rdi, rax	      3986	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x82bb	      0xe800000000	                          call 0x4008300	      3986	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x82c0	            0x85c0	                           test eax, eax	      3986	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x82c2	     0xf84e8010000	                            je 0x40084f0	      3986	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80	CALL_87
0x82c8	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x82cf	        0x4883c001	                              add rax, 1	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x82d3	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      3989	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x82da	    0x48838550ffff	               add qword [rbp - 0xb0], 1	      3990	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x82e2	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      3991	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x82e8	          0x83e001	                              and eax, 1	      3991	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x82eb	            0x85c0	                           test eax, eax	      3991	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x82ed	     0xf847d010000	                            je 0x40084b0	      3991	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x82f3	    0x488b05000000	            mov rax, qword [0x0400833a] 	      3993	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x82fa	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      3993	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x82fe	        0x488b4038	            mov rax, qword [rax + 0x38] 	      3993	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x8302	        0x48894590	             mov qword [rbp - 0x70], rax	      3993	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x8306	        0x48895598	             mov qword [rbp - 0x68], rdx	      3993	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x830a	    0x488b05000000	            mov rax, qword [0x04008351] 	      3994	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x8311	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      3994	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x8318	        0x48895038	             mov qword [rax + 0x38], rdx	      3994	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x831c	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3995	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_88
0x8323	          0x4889c7	                            mov rdi, rax	      3995	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_88
0x8326	      0xe800000000	                          call 0x400836b	      3995	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_88
0x832b	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3995	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_88
0x8332	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3996	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_82
0x8339	    0x483b85b0feff	            cmp rax, qword [rbp - 0x150]	      3996	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_82
0x8340	            0x7529	                           jne 0x40083ab	      3996	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_82
0x8342	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      3996	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_82
0x8349	        0x4883e801	                              sub rax, 1	      3996	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_82
0x834d	    0x483b8528ffff	             cmp rax, qword [rbp - 0xd8]	      3996	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_82
0x8354	            0x7515	                           jne 0x40083ab	      3996	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_82
0x8356	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3997	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_89
0x835d	          0x4889c7	                            mov rdi, rax	      3997	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_89
0x8360	      0xe800000000	                          call 0x40083a5	      3997	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_89
0x8365	    0x8985f4feffff	            mov dword [rbp - 0x10c], eax	      3997	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_89
0x836b	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3999	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83	CALL_90
0x8372	           0xfb600	                   movzx eax, byte [rax]	      3999	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83	CALL_90
0x8375	            0x3c23	                            cmp al, 0x23	      3999	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83	CALL_90
0x8377	            0x7515	                           jne 0x40083ce	      3999	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83	CALL_90
0x8379	      0xe800000000	                          call 0x40083be	      3999	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83	CALL_90
0x837e	            0x85c0	                           test eax, eax	      3999	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83	CALL_90
0x8380	            0x740c	                            je 0x40083ce	      3999	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83	CALL_90
0x8382	    0xc785e4feffff	              mov dword [rbp - 0x11c], 0	      4000	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83
0x838c	            0xeb78	                           jmp 0x4008446	      4000	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_83
0x838e	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      4003	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_18	IF_84
0x8395	           0xfb600	                   movzx eax, byte [rax]	      4003	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_18	IF_84
0x8398	            0x84c0	                             test al, al	      4003	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_18	IF_84
0x839a	            0x750c	                           jne 0x40083e8	      4003	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_18	IF_84
0x839c	    0xc785e4feffff	              mov dword [rbp - 0x11c], 0	      4004	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_18	IF_84
0x83a6	            0xeb5e	                           jmp 0x4008446	      4004	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_18	IF_84
0x83a8	    0x83bdf0feffff	              cmp dword [rbp - 0x110], 0	      4005	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85
0x83af	            0x742d	                            je 0x400841e	      4005	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85
0x83b1	      0xe800000000	                          call 0x40083f6	      4007	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85	CALL_91
0x83b6	            0x89c2	                            mov edx, eax	      4007	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85	CALL_91
0x83b8	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4007	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85	CALL_91
0x83be	            0x29d0	                            sub eax, edx	      4007	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85	CALL_91
0x83c0	    0x8985ecfeffff	            mov dword [rbp - 0x114], eax	      4007	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85	CALL_91
0x83c6	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	      4008	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85
0x83cc	    0x8985e4feffff	            mov dword [rbp - 0x11c], eax	      4008	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85
0x83d2	    0xc785f0feffff	              mov dword [rbp - 0x110], 0	      4009	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85
0x83dc	            0xeb28	                           jmp 0x4008446	      4009	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_19	IF_85
0x83de	      0xe800000000	                          call 0x4008423	      4011	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_20	IF_86	CALL_92
0x83e3	            0x89c2	                            mov edx, eax	      4011	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_20	IF_86	CALL_92
0x83e5	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	      4011	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_20	IF_86	CALL_92
0x83eb	             0x1d0	                            add eax, edx	      4011	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_20	IF_86	CALL_92
0x83ed	    0x8985e4feffff	            mov dword [rbp - 0x11c], eax	      4011	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_20	IF_86	CALL_92
0x83f3	    0x83bde4feffff	              cmp dword [rbp - 0x11c], 0	      4011	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_20	IF_86	CALL_92
0x83fa	            0x790a	                           jns 0x4008446	      4011	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_20	IF_86	CALL_92
0x83fc	    0xc785e4feffff	              mov dword [rbp - 0x11c], 0	      4012	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	ELSE_20	IF_86
0x8406	    0x8b85e4feffff	            mov eax, dword [rbp - 0x11c]	      4013	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_93
0x840c	      0xbe00000000	                              mov esi, 0	      4013	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_93
0x8411	            0x89c7	                            mov edi, eax	      4013	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_93
0x8413	      0xe800000000	                          call 0x4008458	      4013	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_93
0x8418	    0x488b0d000000	            mov rcx, qword [0x0400845f] 	      4014	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x841f	        0x488b4590	             mov rax, qword [rbp - 0x70]	      4014	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x8423	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      4014	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x8427	        0x48894138	             mov qword [rcx + 0x38], rax	      4014	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x842b	        0x48895140	             mov qword [rcx + 0x40], rdx	      4014	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81
0x842f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      4016	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_87
0x8436	    0x483b85b0feff	            cmp rax, qword [rbp - 0x150]	      4016	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_87
0x843d	            0x7531	                           jne 0x40084b0	      4016	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_87
0x843f	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4016	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_87
0x8446	        0x4883e801	                              sub rax, 1	      4016	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_87
0x844a	    0x483b8528ffff	             cmp rax, qword [rbp - 0xd8]	      4016	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_87
0x8451	            0x751d	                           jne 0x40084b0	      4016	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	IF_87
0x8453	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4017	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_95
0x845a	          0x4889c7	                            mov rdi, rax	      4017	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_95
0x845d	      0xe800000000	                          call 0x40084a2	      4017	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_95
0x8462	          0x4889c7	                            mov rdi, rax	      4017	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_95
0x8465	      0xe800000000	                          call 0x40084aa	      4017	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_95
0x846a	    0x2985f4feffff	            sub dword [rbp - 0x10c], eax	      4017	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_81	CALL_95
0x8470	    0x48838528ffff	               add qword [rbp - 0xd8], 1	      3983	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x8478	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	      3983	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x847f	    0x483b8530ffff	             cmp rax, qword [rbp - 0xd0]	      3983	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x8486	     0xf8ce2fdffff	                            jl 0x40082ae	      3983	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8
0x848c	    0x48838558ffff	               add qword [rbp - 0xa8], 1	      3947	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x8494	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      3947	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x849b	    0x483b85b0feff	            cmp rax, qword [rbp - 0x150]	      3947	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x84a2	     0xf8ecefbffff	                           jle 0x40080b6	      3947	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x84a8	            0xeb07	                           jmp 0x40084f1	      3947	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7
0x84aa	              0x90	                                     nop	      3962	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	IF_78
0x84ab	            0xeb04	                           jmp 0x40084f1	      3962	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	IF_78
0x84ad	              0x90	                                     nop	      3972	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	IF_79
0x84ae	            0xeb01	                           jmp 0x40084f1	      3972	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	IF_77	IF_79
0x84b0	              0x90	                                     nop	      3988	ops.c	FUNCTION_48	ELSE_14	ELSE_17	FOR_7	FOR_8	IF_80
0x84b1	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 1	      4024	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88
0x84b8	            0x7533	                           jne 0x400852d	      4024	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88
0x84ba	    0x488b05000000	            mov rax, qword [0x04008501] 	      4026	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88
0x84c1	    0xc780d8110000	            mov dword [rax + 0x11d8], 0 	      4026	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88
0x84cb	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 1	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88	IF_89
0x84d2	            0x7519	                           jne 0x400852d	      4027	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88	IF_89
0x84d4	    0x488b05000000	            mov rax, qword [0x0400851b] 	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88	IF_89
0x84db	    0x488b90d01100	          mov rdx, qword [rax + 0x11d0] 	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88	IF_89
0x84e2	        0x4883c201	                              add rdx, 1	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88	IF_89
0x84e6	    0x488990d01100	          mov qword [rax + 0x11d0], rdx 	      4028	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_88	IF_89
0x84ed	    0x488b05000000	            mov rax, qword [0x04008534] 	      4032	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x84f4	    0x488b90d01100	          mov rdx, qword [rax + 0x11d0] 	      4032	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x84fb	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 0	      4032	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x8502	           0xf94c0	                                 sete al	      4032	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x8505	           0xfb6c0	                           movzx eax, al	      4032	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x8508	          0x4801d0	                            add rax, rdx	      4032	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x850b	        0x488d50ff	                      lea rdx, [rax - 1]	      4032	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x850f	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4032	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x8516	          0x4801c2	                            add rdx, rax	      4032	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x8519	    0x488b05000000	            mov rax, qword [0x04008560] 	      4033	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x8520	          0x488b00	                    mov rax, qword [rax]	      4033	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x8523	          0x4839c2	                            cmp rdx, rax	      4032	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x8526	            0x7c11	                            jl 0x4008579	      4032	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x8528	    0x488b05000000	            mov rax, qword [0x0400856f] 	      4035	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x852f	    0x8b80c0010000	           mov eax, dword [rax + 0x1c0] 	      4035	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x8535	            0x85c0	                           test eax, eax	      4035	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x8537	            0x7438	                            je 0x40085b1	      4035	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90
0x8539	    0x488b05000000	            mov rax, qword [0x04008580] 	      4038	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90	CALL_96
0x8540	    0x488b90d01100	          mov rdx, qword [rax + 0x11d0] 	      4038	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90	CALL_96
0x8547	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 0	      4038	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90	CALL_96
0x854e	           0xf94c0	                                 sete al	      4038	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90	CALL_96
0x8551	           0xfb6c0	                           movzx eax, al	      4038	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90	CALL_96
0x8554	        0x488d3c02	                    lea rdi, [rdx + rax]	      4038	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90	CALL_96
0x8558	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4038	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90	CALL_96
0x855f	      0xb900000000	                              mov ecx, 0	      4038	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90	CALL_96
0x8564	          0x4889c2	                            mov rdx, rax	      4038	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90	CALL_96
0x8567	      0xbeffffff7f	                     mov esi, 0x7fffffff	      4038	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90	CALL_96
0x856c	      0xe800000000	                          call 0x40085b1	      4038	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_90	CALL_96
0x8571	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 0	      4042	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91
0x8578	            0x7537	                           jne 0x40085f1	      4042	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91
0x857a	    0x488b05000000	            mov rax, qword [0x040085c1] 	      4044	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91
0x8581	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4044	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91
0x8585	        0x488d7801	                      lea rdi, [rax + 1]	      4043	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91	CALL_97
0x8589	    0x8bb5c8feffff	            mov esi, dword [rbp - 0x138]	      4043	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91	CALL_97
0x858f	    0x488b05000000	            mov rax, qword [0x040085d6] 	      4043	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91	CALL_97
0x8596	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4043	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91	CALL_97
0x859a	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      4043	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91	CALL_97
0x85a1	          0x4889d1	                            mov rcx, rdx	      4043	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91	CALL_97
0x85a4	          0x4889fa	                            mov rdx, rdi	      4043	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91	CALL_97
0x85a7	          0x4889c7	                            mov rdi, rax	      4043	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91	CALL_97
0x85aa	      0xe800000000	                          call 0x40085ef	      4043	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91	CALL_97
0x85af	            0xeb30	                           jmp 0x4008621	      4043	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_91	CALL_97
0x85b1	    0x488b05000000	            mov rax, qword [0x040085f8] 	      4047	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21
0x85b8	    0x488b90d01100	          mov rdx, qword [rax + 0x11d0] 	      4046	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21	CALL_98
0x85bf	    0x488b05000000	            mov rax, qword [0x04008606] 	      4046	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21	CALL_98
0x85c6	    0x488b80d01100	          mov rax, qword [rax + 0x11d0] 	      4046	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21	CALL_98
0x85cd	    0x488b8d50ffff	             mov rcx, qword [rbp - 0xb0]	      4046	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21	CALL_98
0x85d4	      0xbe00000000	                              mov esi, 0	      4046	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21	CALL_98
0x85d9	          0x4889c7	                            mov rdi, rax	      4046	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21	CALL_98
0x85dc	      0xe800000000	                          call 0x4008621	      4046	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_21	CALL_98
0x85e1	    0x488b05000000	            mov rax, qword [0x04008628] 	      4050	ops.c	FUNCTION_48	ELSE_14	ELSE_17
0x85e8	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      4050	ops.c	FUNCTION_48	ELSE_14	ELSE_17
0x85ef	    0x488990f01100	          mov qword [rax + 0x11f0], rdx 	      4050	ops.c	FUNCTION_48	ELSE_14	ELSE_17
0x85f6	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      4052	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x85fd	        0x48c1e003	                              shl rax, 3	      4052	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x8601	        0x488d50f8	                      lea rdx, [rax - 8]	      4052	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x8605	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      4052	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x860c	          0x4801d0	                            add rax, rdx	      4052	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x860f	          0x488b00	                    mov rax, qword [rax]	      4052	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x8612	          0x4889c7	                            mov rdi, rax	      4052	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x8615	      0xe800000000	                          call 0x400865a	      4052	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x861a	    0x2b85f4feffff	            sub eax, dword [rbp - 0x10c]	      4052	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x8620	    0x8985c8feffff	            mov dword [rbp - 0x138], eax	      4052	ops.c	FUNCTION_48	ELSE_14	ELSE_17	CALL_99
0x8626	    0x8b85c8feffff	            mov eax, dword [rbp - 0x138]	      4053	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_92
0x862c	          0x83f801	                              cmp eax, 1	      4053	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_92
0x862f	            0x7e18	                           jle 0x4008689	      4053	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_92
0x8631	    0x488b05000000	            mov rax, qword [0x04008678] 	      4054	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_92
0x8638	    0x8b95c8feffff	            mov edx, dword [rbp - 0x138]	      4054	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_92
0x863e	          0x83ea01	                              sub edx, 1	      4054	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_92
0x8641	    0x8990f8110000	          mov dword [rax + 0x11f8], edx 	      4054	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_92
0x8647	            0xeb11	                           jmp 0x400869a	      4054	ops.c	FUNCTION_48	ELSE_14	ELSE_17	IF_92
0x8649	    0x488b05000000	            mov rax, qword [0x04008690] 	      4056	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22
0x8650	    0xc780f8110000	            mov dword [rax + 0x11f8], 0 	      4056	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22
0x865a	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      4058	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93
0x8660	          0x83e004	                              and eax, 4	      4058	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93
0x8663	            0x85c0	                           test eax, eax	      4058	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93
0x8665	            0x7421	                            je 0x40086c8	      4058	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93
0x8667	    0x488b05000000	            mov rax, qword [0x040086ae] 	      4061	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93
0x866e	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      4061	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93
0x8675	        0x48895038	             mov qword [rax + 0x38], rdx	      4061	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93
0x8679	      0xbf05000000	                              mov edi, 5	      4062	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93	CALL_100
0x867e	      0xe800000000	                          call 0x40086c3	      4062	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93	CALL_100
0x8683	      0xe9e7000000	                           jmp 0x40087af	      4062	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_22	IF_93	CALL_100
0x8688	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	      4064	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94
0x868e	          0x83e002	                              and eax, 2	      4064	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94
0x8691	            0x85c0	                           test eax, eax	      4064	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94
0x8693	     0xf8480000000	                            je 0x4008759	      4064	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94
0x8699	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 1	      4067	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95
0x86a0	            0x7553	                           jne 0x4008735	      4067	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95
0x86a2	    0x488b05000000	            mov rax, qword [0x040086e9] 	      4069	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x86a9	          0x488b10	                    mov rdx, qword [rax]	      4069	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x86ac	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      4069	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x86b3	          0x4839c2	                            cmp rdx, rax	      4069	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x86b6	            0x7f17	                            jg 0x400870f	      4069	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x86b8	    0x488b05000000	            mov rax, qword [0x040086ff] 	      4070	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x86bf	    0x488b15000000	            mov rdx, qword [0x04008706] 	      4070	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x86c6	          0x488b12	                    mov rdx, qword [rdx]	      4070	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x86c9	        0x48895038	             mov qword [rax + 0x38], rdx	      4070	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x86cd	            0xeb16	                           jmp 0x4008725	      4070	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	IF_96
0x86cf	    0x488b05000000	            mov rax, qword [0x04008716] 	      4072	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	ELSE_24
0x86d6	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      4072	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	ELSE_24
0x86dd	        0x4883c201	                              add rdx, 1	      4072	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	ELSE_24
0x86e1	        0x48895038	             mov qword [rax + 0x38], rdx	      4072	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	ELSE_24
0x86e5	    0x488b05000000	            mov rax, qword [0x0400872c] 	      4073	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	ELSE_24
0x86ec	    0xc74040000000	               mov dword [rax + 0x40], 0	      4073	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	ELSE_24
0x86f3	            0xeb7a	                           jmp 0x40087af	      4073	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	IF_95	ELSE_24
0x86f5	    0x488b05000000	            mov rax, qword [0x0400873c] 	      4077	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	ELSE_24	ELSE_25
0x86fc	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      4077	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	ELSE_24	ELSE_25
0x8703	        0x48895038	             mov qword [rax + 0x38], rdx	      4077	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	ELSE_24	ELSE_25
0x8707	    0x488b05000000	            mov rax, qword [0x0400874e] 	      4078	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	ELSE_24	ELSE_25
0x870e	    0x8b95c8feffff	            mov edx, dword [rbp - 0x138]	      4078	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	ELSE_24	ELSE_25
0x8714	          0x895040	             mov dword [rax + 0x40], edx	      4078	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	ELSE_24	ELSE_25
0x8717	            0xeb56	                           jmp 0x40087af	      4078	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_23	IF_94	ELSE_24	ELSE_25
0x8719	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 1	      4081	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97
0x8720	            0x7536	                           jne 0x4008798	      4081	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97
0x8722	    0x488b05000000	            mov rax, qword [0x04008769] 	      4084	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97
0x8729	    0xc74040000000	               mov dword [rax + 0x40], 0	      4084	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97
0x8730	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 1	      4085	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	IF_98
0x8737	            0x7513	                           jne 0x400878c	      4085	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	IF_98
0x8739	    0x488b05000000	            mov rax, qword [0x04008780] 	      4086	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	IF_98
0x8740	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4086	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	IF_98
0x8744	        0x4883c201	                              add rdx, 1	      4086	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	IF_98
0x8748	        0x48895038	             mov qword [rax + 0x38], rdx	      4086	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	IF_98
0x874c	      0xbf05000000	                              mov edi, 5	      4087	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	CALL_101
0x8751	      0xe800000000	                          call 0x4008796	      4087	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	CALL_101
0x8756	            0xeb17	                           jmp 0x40087af	      4087	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_24	ELSE_26	IF_97	CALL_101
0x8758	    0x488b0d000000	            mov rcx, qword [0x0400879f] 	      4090	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_27
0x875f	        0x488b4580	             mov rax, qword [rbp - 0x80]	      4090	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_27
0x8763	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      4090	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_27
0x8767	        0x48894138	             mov qword [rcx + 0x38], rax	      4090	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_27
0x876b	        0x48895140	             mov qword [rcx + 0x40], rdx	      4090	ops.c	FUNCTION_48	ELSE_14	ELSE_17	ELSE_27
0x876f	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      4094	ops.c	FUNCTION_48	CALL_102
0x8776	          0x4889c7	                            mov rdi, rax	      4094	ops.c	FUNCTION_48	CALL_102
0x8779	      0xe800000000	                          call 0x40087be	      4094	ops.c	FUNCTION_48	CALL_102
0x877e	    0x488b05000000	            mov rax, qword [0x040087c5] 	      4095	ops.c	FUNCTION_48
0x8785	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      4095	ops.c	FUNCTION_48
0x878c	            0xeb13	                           jmp 0x40087e1	      4095	ops.c	FUNCTION_48
0x878e	              0x90	                                     nop	      3530	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	IF_14
0x878f	            0xeb10	                           jmp 0x40087e1	      3530	ops.c	FUNCTION_48	IF_7	IF_8	FOR_1	IF_14
0x8791	              0x90	                                     nop	      3559	ops.c	FUNCTION_48	IF_15	IF_16	IF_17
0x8792	            0xeb0d	                           jmp 0x40087e1	      3559	ops.c	FUNCTION_48	IF_15	IF_16	IF_17
0x8794	              0x90	                                     nop	      3565	ops.c	FUNCTION_48	IF_15	IF_16	IF_19
0x8795	            0xeb0a	                           jmp 0x40087e1	      3565	ops.c	FUNCTION_48	IF_15	IF_16	IF_19
0x8797	              0x90	                                     nop	      3575	ops.c	FUNCTION_48	IF_15	IF_16	IF_21
0x8798	            0xeb07	                           jmp 0x40087e1	      3575	ops.c	FUNCTION_48	IF_15	IF_16	IF_21
0x879a	              0x90	                                     nop	      3624	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31
0x879b	            0xeb04	                           jmp 0x40087e1	      3624	ops.c	FUNCTION_48	ELSE_3	IF_28	IF_31
0x879d	              0x90	                                     nop	      3634	ops.c	FUNCTION_48	ELSE_6	IF_33
0x879e	            0xeb01	                           jmp 0x40087e1	      3634	ops.c	FUNCTION_48	ELSE_6	IF_33
0x87a0	              0x90	                                     nop	      3910	ops.c	FUNCTION_48	ELSE_14	IF_67	DO_1	IF_70	IF_72
0x87a1	    0x8b85ccfeffff	            mov eax, dword [rbp - 0x134]	      4098	ops.c	FUNCTION_48	IF_99
0x87a7	            0x85c0	                           test eax, eax	      4098	ops.c	FUNCTION_48	IF_99
0x87a9	            0x740f	                            je 0x40087fa	      4098	ops.c	FUNCTION_48	IF_99
0x87ab	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      4099	ops.c	FUNCTION_48	CALL_103
0x87b2	          0x4889c7	                            mov rdi, rax	      4099	ops.c	FUNCTION_48	CALL_103
0x87b5	      0xe800000000	                          call 0x40087fa	      4099	ops.c	FUNCTION_48	CALL_103
0x87ba	    0x8b85bcfeffff	            mov eax, dword [rbp - 0x144]	      4100	ops.c	FUNCTION_48	IF_100
0x87c0	          0x83f83d	                           cmp eax, 0x3d	      4100	ops.c	FUNCTION_48	IF_100
0x87c3	            0x750f	                           jne 0x4008814	      4100	ops.c	FUNCTION_48	IF_100
0x87c5	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      4101	ops.c	FUNCTION_48	CALL_104
0x87cc	          0x4889c7	                            mov rdi, rax	      4101	ops.c	FUNCTION_48	CALL_104
0x87cf	      0xe800000000	                          call 0x4008814	      4101	ops.c	FUNCTION_48	CALL_104
0x87d4	    0xc70500000000	               mov dword [0x0400881e], 0	      4103	ops.c	FUNCTION_48
0x87de	      0xe800000000	                          call 0x4008823	      4106	ops.c	FUNCTION_48	CALL_105
0x87e3	            0xeb04	                           jmp 0x4008829	      4106	ops.c	FUNCTION_48	CALL_105
0x87e5	              0x90	                                     nop	      3474	ops.c	FUNCTION_48	IF_2
0x87e6	            0xeb01	                           jmp 0x4008829	      3474	ops.c	FUNCTION_48	IF_2
0x87e8	              0x90	                                     nop	      3484	ops.c	FUNCTION_48	IF_5	IF_6
0x87e9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4107	ops.c	FUNCTION_48
0x87ed	    0x644833042528	                xor rax, qword fs:[0x28]	      4107	ops.c	FUNCTION_48
0x87f6	            0x7405	                            je 0x400883d	      4107	ops.c	FUNCTION_48
0x87f8	      0xe800000000	                          call 0x400883d	      4107	ops.c	FUNCTION_48
0x87fd	    0x4881c4580100	                          add rsp, 0x158	      4107	ops.c	FUNCTION_48
0x8804	              0x5b	                                 pop rbx	      4107	ops.c	FUNCTION_48
0x8805	              0x5d	                                 pop rbp	      4107	ops.c	FUNCTION_48
0x8806	              0xc3	                                     ret	      4107	ops.c	FUNCTION_48
paragraph_start	CALL,9:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,7	91
0xa589	              0x55	                                push rbp	      5254	ops.c	FUNCTION_64
0xa58a	          0x4889e5	                            mov rbp, rsp	      5254	ops.c	FUNCTION_64
0xa58d	        0x4883ec40	                           sub rsp, 0x40	      5254	ops.c	FUNCTION_64
0xa591	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      5254	ops.c	FUNCTION_64
0xa595	    0x64488b042528	                mov rax, qword fs:[0x28]	      5254	ops.c	FUNCTION_64
0xa59e	        0x488945f8	                mov qword [rbp - 8], rax	      5254	ops.c	FUNCTION_64
0xa5a2	            0x31c0	                            xor eax, eax	      5254	ops.c	FUNCTION_64
0xa5a4	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      5257	ops.c	FUNCTION_64
0xa5ab	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      5258	ops.c	FUNCTION_64
0xa5b3	      0x48837dc801	               cmp qword [rbp - 0x38], 1	      5264	ops.c	FUNCTION_64	IF_1
0xa5b8	            0x7f0a	                            jg 0x400a604	      5264	ops.c	FUNCTION_64	IF_1
0xa5ba	      0xb801000000	                              mov eax, 1	      5265	ops.c	FUNCTION_64	IF_1
0xa5bf	      0xe9ff000000	                           jmp 0x400a703	      5265	ops.c	FUNCTION_64	IF_1
0xa5c4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5267	ops.c	FUNCTION_64	CALL_1
0xa5c8	        0x4883e801	                              sub rax, 1	      5267	ops.c	FUNCTION_64	CALL_1
0xa5cc	          0x4889c7	                            mov rdi, rax	      5267	ops.c	FUNCTION_64	CALL_1
0xa5cf	      0xe800000000	                          call 0x400a614	      5267	ops.c	FUNCTION_64	CALL_1
0xa5d4	        0x488945f0	             mov qword [rbp - 0x10], rax	      5267	ops.c	FUNCTION_64	CALL_1
0xa5d8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5268	ops.c	FUNCTION_64	IF_2
0xa5dc	           0xfb600	                   movzx eax, byte [rax]	      5268	ops.c	FUNCTION_64	IF_2
0xa5df	            0x84c0	                             test al, al	      5268	ops.c	FUNCTION_64	IF_2
0xa5e1	            0x750a	                           jne 0x400a62d	      5268	ops.c	FUNCTION_64	IF_2
0xa5e3	      0xb801000000	                              mov eax, 1	      5269	ops.c	FUNCTION_64	IF_2
0xa5e8	      0xe9d6000000	                           jmp 0x400a703	      5269	ops.c	FUNCTION_64	IF_2
0xa5ed	      0xbf71000000	                           mov edi, 0x71	      5272	ops.c	FUNCTION_64	CALL_2
0xa5f2	      0xe800000000	                          call 0x400a637	      5272	ops.c	FUNCTION_64	CALL_2
0xa5f7	          0x8945dc	             mov dword [rbp - 0x24], eax	      5272	ops.c	FUNCTION_64	CALL_2
0xa5fa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5274	ops.c	FUNCTION_64	IF_3	CALL_3
0xa5fe	        0x488d78ff	                      lea rdi, [rax - 1]	      5274	ops.c	FUNCTION_64	IF_3	CALL_3
0xa602	          0x8b4ddc	             mov ecx, dword [rbp - 0x24]	      5274	ops.c	FUNCTION_64	IF_3	CALL_3
0xa605	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      5274	ops.c	FUNCTION_64	IF_3	CALL_3
0xa609	        0x488d45d4	                   lea rax, [rbp - 0x2c]	      5274	ops.c	FUNCTION_64	IF_3	CALL_3
0xa60d	          0x4889c6	                            mov rsi, rax	      5274	ops.c	FUNCTION_64	IF_3	CALL_3
0xa610	      0xe878feffff	                  call sym.fmt_check_par	      5274	ops.c	FUNCTION_64	IF_3	CALL_3
0xa615	            0x85c0	                           test eax, eax	      5274	ops.c	FUNCTION_64	IF_3	CALL_3
0xa617	            0x740a	                            je 0x400a663	      5274	ops.c	FUNCTION_64	IF_3	CALL_3
0xa619	      0xb801000000	                              mov eax, 1	      5279	ops.c	FUNCTION_64	IF_3
0xa61e	      0xe9a0000000	                           jmp 0x400a703	      5279	ops.c	FUNCTION_64	IF_3
0xa623	          0x8b4ddc	             mov ecx, dword [rbp - 0x24]	      5281	ops.c	FUNCTION_64	IF_4	CALL_4
0xa626	        0x488d55e8	                   lea rdx, [rbp - 0x18]	      5281	ops.c	FUNCTION_64	IF_4	CALL_4
0xa62a	        0x488d75d8	                   lea rsi, [rbp - 0x28]	      5281	ops.c	FUNCTION_64	IF_4	CALL_4
0xa62e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5281	ops.c	FUNCTION_64	IF_4	CALL_4
0xa632	          0x4889c7	                            mov rdi, rax	      5281	ops.c	FUNCTION_64	IF_4	CALL_4
0xa635	      0xe853feffff	                  call sym.fmt_check_par	      5281	ops.c	FUNCTION_64	IF_4	CALL_4
0xa63a	            0x85c0	                           test eax, eax	      5281	ops.c	FUNCTION_64	IF_4	CALL_4
0xa63c	            0x7407	                            je 0x400a685	      5281	ops.c	FUNCTION_64	IF_4	CALL_4
0xa63e	      0xb801000000	                              mov eax, 1	      5286	ops.c	FUNCTION_64	IF_4
0xa643	            0xeb7e	                           jmp 0x400a703	      5286	ops.c	FUNCTION_64	IF_4
0xa645	      0xbf77000000	                           mov edi, 0x77	      5288	ops.c	FUNCTION_64	IF_5	CALL_6
0xa64a	      0xe800000000	                          call 0x400a68f	      5288	ops.c	FUNCTION_64	IF_5	CALL_6
0xa64f	            0x85c0	                           test eax, eax	      5288	ops.c	FUNCTION_64	IF_5	CALL_6
0xa651	            0x741b	                            je 0x400a6ae	      5288	ops.c	FUNCTION_64	IF_5	CALL_6
0xa653	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5288	ops.c	FUNCTION_64	IF_5	CALL_6
0xa657	        0x4883e801	                              sub rax, 1	      5288	ops.c	FUNCTION_64	IF_5	CALL_6
0xa65b	          0x4889c7	                            mov rdi, rax	      5288	ops.c	FUNCTION_64	IF_5	CALL_6
0xa65e	      0xe8b5fdffff	                  call sym.ends_in_white	      5288	ops.c	FUNCTION_64	IF_5	CALL_6
0xa663	            0x85c0	                           test eax, eax	      5288	ops.c	FUNCTION_64	IF_5	CALL_6
0xa665	            0x7507	                           jne 0x400a6ae	      5288	ops.c	FUNCTION_64	IF_5	CALL_6
0xa667	      0xb801000000	                              mov eax, 1	      5289	ops.c	FUNCTION_64	IF_5
0xa66c	            0xeb55	                           jmp 0x400a703	      5289	ops.c	FUNCTION_64	IF_5
0xa66e	      0xbf6e000000	                           mov edi, 0x6e	      5291	ops.c	FUNCTION_64	IF_6	CALL_8
0xa673	      0xe800000000	                          call 0x400a6b8	      5291	ops.c	FUNCTION_64	IF_6	CALL_8
0xa678	            0x85c0	                           test eax, eax	      5291	ops.c	FUNCTION_64	IF_6	CALL_8
0xa67a	            0x7417	                            je 0x400a6d3	      5291	ops.c	FUNCTION_64	IF_6	CALL_8
0xa67c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      5291	ops.c	FUNCTION_64	IF_6	CALL_8
0xa680	          0x4889c7	                            mov rdi, rax	      5291	ops.c	FUNCTION_64	IF_6	CALL_8
0xa683	      0xe800000000	                          call 0x400a6c8	      5291	ops.c	FUNCTION_64	IF_6	CALL_8
0xa688	            0x85c0	                           test eax, eax	      5291	ops.c	FUNCTION_64	IF_6	CALL_8
0xa68a	            0x7e07	                           jle 0x400a6d3	      5291	ops.c	FUNCTION_64	IF_6	CALL_8
0xa68c	      0xb801000000	                              mov eax, 1	      5292	ops.c	FUNCTION_64	IF_6
0xa691	            0xeb30	                           jmp 0x400a703	      5292	ops.c	FUNCTION_64	IF_6
0xa693	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	      5295	ops.c	FUNCTION_64	IF_7	CALL_9
0xa697	          0x8b4dd8	             mov ecx, dword [rbp - 0x28]	      5295	ops.c	FUNCTION_64	IF_7	CALL_9
0xa69a	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      5295	ops.c	FUNCTION_64	IF_7	CALL_9
0xa69e	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      5295	ops.c	FUNCTION_64	IF_7	CALL_9
0xa6a1	        0x488b7dc8	             mov rdi, qword [rbp - 0x38]	      5295	ops.c	FUNCTION_64	IF_7	CALL_9
0xa6a5	        0x4883ef01	                              sub rdi, 1	      5295	ops.c	FUNCTION_64	IF_7	CALL_9
0xa6a9	          0x4989f0	                             mov r8, rsi	      5295	ops.c	FUNCTION_64	IF_7	CALL_9
0xa6ac	            0x89c6	                            mov esi, eax	      5295	ops.c	FUNCTION_64	IF_7	CALL_9
0xa6ae	      0xe82ef1ffff	                    call sym.same_leader	      5295	ops.c	FUNCTION_64	IF_7	CALL_9
0xa6b3	            0x85c0	                           test eax, eax	      5295	ops.c	FUNCTION_64	IF_7	CALL_9
0xa6b5	            0x7507	                           jne 0x400a6fe	      5295	ops.c	FUNCTION_64	IF_7	CALL_9
0xa6b7	      0xb801000000	                              mov eax, 1	      5297	ops.c	FUNCTION_64	IF_7
0xa6bc	            0xeb05	                           jmp 0x400a703	      5297	ops.c	FUNCTION_64	IF_7
0xa6be	      0xb800000000	                              mov eax, 0	      5300	ops.c	FUNCTION_64
0xa6c3	        0x488b75f8	                mov rsi, qword [rbp - 8]	      5301	ops.c	FUNCTION_64
0xa6c7	    0x644833342528	                xor rsi, qword fs:[0x28]	      5301	ops.c	FUNCTION_64
0xa6d0	            0x7405	                            je 0x400a717	      5301	ops.c	FUNCTION_64
0xa6d2	      0xe800000000	                          call 0x400a717	      5301	ops.c	FUNCTION_64
0xa6d7	              0xc9	                                   leave	      5301	ops.c	FUNCTION_64
0xa6d8	              0xc3	                                     ret	      5301	ops.c	FUNCTION_64
mb_adjust_opend	CALL,2:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,1	31
0x37ce	              0x55	                                push rbp	      2090	ops.c	ELSE_6	FUNCTION_34
0x37cf	          0x4889e5	                            mov rbp, rsp	      2090	ops.c	ELSE_6	FUNCTION_34
0x37d2	        0x4883ec20	                           sub rsp, 0x20	      2090	ops.c	ELSE_6	FUNCTION_34
0x37d6	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2090	ops.c	ELSE_6	FUNCTION_34
0x37da	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2093	ops.c	ELSE_6	FUNCTION_34	IF_1
0x37de	          0x8b4014	            mov eax, dword [rax + 0x14] 	      2093	ops.c	ELSE_6	FUNCTION_34	IF_1
0x37e1	            0x85c0	                           test eax, eax	      2093	ops.c	ELSE_6	FUNCTION_34	IF_1
0x37e3	            0x7446	                            je 0x400386b	      2093	ops.c	ELSE_6	FUNCTION_34	IF_1
0x37e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2095	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_1
0x37e9	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2095	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_1
0x37ed	          0x4889c7	                            mov rdi, rax	      2095	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_1
0x37f0	      0xe800000000	                          call 0x4003835	      2095	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_1
0x37f5	        0x488945f8	                mov qword [rbp - 8], rax	      2095	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_1
0x37f9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2096	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x37fd	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2096	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x3800	          0x4863d0	                         movsxd rdx, eax	      2096	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x3803	        0x488b45f8	                mov rax, qword [rbp - 8]	      2096	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x3807	          0x4801c2	                            add rdx, rax	      2096	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x380a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2096	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x380e	          0x4889d6	                            mov rsi, rdx	      2096	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x3811	          0x4889c7	                            mov rdi, rax	      2096	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x3814	      0xe800000000	                          call 0x4003859	      2096	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x3819	            0x89c2	                            mov edx, eax	      2096	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x381b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2096	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x381f	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2096	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x3822	             0x1c2	                            add edx, eax	      2096	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x3824	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2096	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x3828	          0x895038	             mov dword [rax + 0x38], edx	      2096	ops.c	ELSE_6	FUNCTION_34	IF_1	CALL_2
0x382b	              0x90	                                     nop	      2098	ops.c	ELSE_6	FUNCTION_34
0x382c	              0xc9	                                   leave	      2098	ops.c	ELSE_6	FUNCTION_34
0x382d	              0xc3	                                     ret	      2098	ops.c	ELSE_6	FUNCTION_34
op_change	CALL,30:FOR,1:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,2:IF,16	295
0x54a0	              0x55	                                push rbp	      2786	ops.c	FUNCTION_40
0x54a1	          0x4889e5	                            mov rbp, rsp	      2786	ops.c	FUNCTION_40
0x54a4	    0x4881ecd00000	                           sub rsp, 0xd0	      2786	ops.c	FUNCTION_40
0x54ab	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	      2786	ops.c	FUNCTION_40
0x54b2	    0x64488b042528	                mov rax, qword fs:[0x28]	      2786	ops.c	FUNCTION_40
0x54bb	        0x488945f8	                mov qword [rbp - 8], rax	      2786	ops.c	FUNCTION_40
0x54bf	            0x31c0	                            xor eax, eax	      2786	ops.c	FUNCTION_40
0x54c1	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	      2793	ops.c	FUNCTION_40
0x54cc	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	      2794	ops.c	FUNCTION_40
0x54d7	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2800	ops.c	FUNCTION_40
0x54de	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2800	ops.c	FUNCTION_40
0x54e1	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	      2800	ops.c	FUNCTION_40
0x54e7	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2801	ops.c	FUNCTION_40	IF_1
0x54ee	          0x8b4008	                mov eax, dword [rax + 8]	      2801	ops.c	FUNCTION_40	IF_1
0x54f1	          0x83f801	                              cmp eax, 1	      2801	ops.c	FUNCTION_40	IF_1
0x54f4	            0x7540	                           jne 0x4005576	      2801	ops.c	FUNCTION_40	IF_1
0x54f6	    0xc78548ffffff	               mov dword [rbp - 0xb8], 0	      2803	ops.c	FUNCTION_40	IF_1
0x5500	    0x8b0500000000	            mov eax, dword [0x04005546] 	      2805	ops.c	FUNCTION_40	IF_1	IF_2
0x5506	            0x85c0	                           test eax, eax	      2805	ops.c	FUNCTION_40	IF_1	IF_2
0x5508	            0x752c	                           jne 0x4005576	      2805	ops.c	FUNCTION_40	IF_1	IF_2
0x550a	    0x488b05000000	            mov rax, qword [0x04005551] 	      2805	ops.c	FUNCTION_40	IF_1	IF_2
0x5511	    0x8b805c150000	          mov eax, dword [rax + 0x155c] 	      2805	ops.c	FUNCTION_40	IF_1	IF_2
0x5517	            0x85c0	                           test eax, eax	      2805	ops.c	FUNCTION_40	IF_1	IF_2
0x5519	            0x741b	                            je 0x4005576	      2805	ops.c	FUNCTION_40	IF_1	IF_2
0x551b	    0x488b05000000	            mov rax, qword [0x04005562] 	      2807	ops.c	FUNCTION_40	IF_1	IF_2
0x5522	    0x8b8010140000	          mov eax, dword [rax + 0x1410] 	      2807	ops.c	FUNCTION_40	IF_1	IF_2
0x5528	            0x85c0	                           test eax, eax	      2807	ops.c	FUNCTION_40	IF_1	IF_2
0x552a	            0x750a	                           jne 0x4005576	      2807	ops.c	FUNCTION_40	IF_1	IF_2
0x552c	    0xc70500000000	               mov dword [0x04005576], 1	      2810	ops.c	FUNCTION_40	IF_1	IF_2
0x5536	    0x488b05000000	            mov rax, qword [0x0400557d] 	      2816	ops.c	FUNCTION_40	IF_3
0x553d	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2816	ops.c	FUNCTION_40	IF_3
0x5540	          0x83e001	                              and eax, 1	      2816	ops.c	FUNCTION_40	IF_3
0x5543	            0x85c0	                           test eax, eax	      2816	ops.c	FUNCTION_40	IF_3
0x5545	            0x7413	                            je 0x400559a	      2816	ops.c	FUNCTION_40	IF_3
0x5547	      0xe800000000	                          call 0x400558c	      2818	ops.c	FUNCTION_40	IF_3	IF_4	CALL_1
0x554c	            0x85c0	                           test eax, eax	      2818	ops.c	FUNCTION_40	IF_3	IF_4	CALL_1
0x554e	            0x7527	                           jne 0x40055b7	      2818	ops.c	FUNCTION_40	IF_3	IF_4	CALL_1
0x5550	      0xb800000000	                              mov eax, 0	      2819	ops.c	FUNCTION_40	IF_3	IF_4
0x5555	      0xe936040000	                           jmp 0x40059d0	      2819	ops.c	FUNCTION_40	IF_3	IF_4
0x555a	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2821	ops.c	FUNCTION_40	ELSE_1	IF_5	CALL_2
0x5561	          0x4889c7	                            mov rdi, rax	      2821	ops.c	FUNCTION_40	ELSE_1	IF_5	CALL_2
0x5564	      0xe800000000	                          call 0x40055a9	      2821	ops.c	FUNCTION_40	ELSE_1	IF_5	CALL_2
0x5569	            0x85c0	                           test eax, eax	      2821	ops.c	FUNCTION_40	ELSE_1	IF_5	CALL_2
0x556b	            0x750a	                           jne 0x40055b7	      2821	ops.c	FUNCTION_40	ELSE_1	IF_5	CALL_2
0x556d	      0xb800000000	                              mov eax, 0	      2822	ops.c	FUNCTION_40	ELSE_1	IF_5
0x5572	      0xe919040000	                           jmp 0x40059d0	      2822	ops.c	FUNCTION_40	ELSE_1	IF_5
0x5577	    0x488b05000000	            mov rax, qword [0x040055be] 	      2824	ops.c	FUNCTION_40	IF_6	CALL_3
0x557e	          0x8b4040	            mov eax, dword [rax + 0x40] 	      2824	ops.c	FUNCTION_40	IF_6	CALL_3
0x5581	    0x3b8548ffffff	             cmp eax, dword [rbp - 0xb8]	      2824	ops.c	FUNCTION_40	IF_6	CALL_3
0x5587	            0x7d29	                           jge 0x40055f2	      2824	ops.c	FUNCTION_40	IF_6	CALL_3
0x5589	    0x488b05000000	            mov rax, qword [0x040055d0] 	      2824	ops.c	FUNCTION_40	IF_6	CALL_3
0x5590	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2824	ops.c	FUNCTION_40	IF_6	CALL_3
0x5594	          0x4889c7	                            mov rdi, rax	      2824	ops.c	FUNCTION_40	IF_6	CALL_3
0x5597	      0xe800000000	                          call 0x40055dc	      2824	ops.c	FUNCTION_40	IF_6	CALL_3
0x559c	           0xfb600	                   movzx eax, byte [rax]	      2824	ops.c	FUNCTION_40	IF_6	CALL_3
0x559f	            0x84c0	                             test al, al	      2824	ops.c	FUNCTION_40	IF_6	CALL_3
0x55a1	            0x740f	                            je 0x40055f2	      2824	ops.c	FUNCTION_40	IF_6	CALL_3
0x55a3	    0x8b0500000000	            mov eax, dword [0x040055e9] 	      2825	ops.c	FUNCTION_40	IF_6
0x55a9	            0x85c0	                           test eax, eax	      2825	ops.c	FUNCTION_40	IF_6
0x55ab	            0x7505	                           jne 0x40055f2	      2825	ops.c	FUNCTION_40	IF_6
0x55ad	      0xe800000000	                          call 0x40055f2	      2826	ops.c	FUNCTION_40	CALL_4
0x55b2	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2831	ops.c	FUNCTION_40	IF_7
0x55b9	          0x8b4060	            mov eax, dword [rax + 0x60] 	      2831	ops.c	FUNCTION_40	IF_7
0x55bc	            0x85c0	                           test eax, eax	      2831	ops.c	FUNCTION_40	IF_7
0x55be	     0xf8482000000	                            je 0x4005686	      2831	ops.c	FUNCTION_40	IF_7
0x55c4	    0x8b0500000000	            mov eax, dword [0x0400560a] 	      2835	ops.c	FUNCTION_40	IF_7	IF_8
0x55ca	            0x85c0	                           test eax, eax	      2835	ops.c	FUNCTION_40	IF_7	IF_8
0x55cc	            0x7423	                            je 0x4005631	      2835	ops.c	FUNCTION_40	IF_7	IF_8
0x55ce	    0x488b05000000	            mov rax, qword [0x04005615] 	      2835	ops.c	FUNCTION_40	IF_7	IF_8
0x55d5	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2835	ops.c	FUNCTION_40	IF_7	IF_8
0x55d8	            0x85c0	                           test eax, eax	      2835	ops.c	FUNCTION_40	IF_7	IF_8
0x55da	            0x7f09	                            jg 0x4005625	      2835	ops.c	FUNCTION_40	IF_7	IF_8
0x55dc	      0xe800000000	                          call 0x4005621	      2836	ops.c	FUNCTION_40	IF_7	IF_8	CALL_5
0x55e1	            0x85c0	                           test eax, eax	      2836	ops.c	FUNCTION_40	IF_7	IF_8	CALL_5
0x55e3	            0x750c	                           jne 0x4005631	      2836	ops.c	FUNCTION_40	IF_7	IF_8	CALL_5
0x55e5	      0xe800000000	                          call 0x400562a	      2837	ops.c	FUNCTION_40	IF_7	CALL_7
0x55ea	            0x89c7	                            mov edi, eax	      2837	ops.c	FUNCTION_40	IF_7	CALL_7
0x55ec	      0xe800000000	                          call 0x4005631	      2837	ops.c	FUNCTION_40	IF_7	CALL_7
0x55f1	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2839	ops.c	FUNCTION_40	IF_7	CALL_8
0x55f8	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2839	ops.c	FUNCTION_40	IF_7	CALL_8
0x55fc	          0x4889c7	                            mov rdi, rax	      2839	ops.c	FUNCTION_40	IF_7	CALL_8
0x55ff	      0xe800000000	                          call 0x4005644	      2839	ops.c	FUNCTION_40	IF_7	CALL_8
0x5604	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      2839	ops.c	FUNCTION_40	IF_7	CALL_8
0x560b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2840	ops.c	FUNCTION_40	IF_7	CALL_9
0x5612	          0x4889c7	                            mov rdi, rax	      2840	ops.c	FUNCTION_40	IF_7	CALL_9
0x5615	      0xe800000000	                          call 0x400565a	      2840	ops.c	FUNCTION_40	IF_7	CALL_9
0x561a	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      2840	ops.c	FUNCTION_40	IF_7	CALL_9
0x5621	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2841	ops.c	FUNCTION_40	IF_7	CALL_10
0x5628	          0x4889c7	                            mov rdi, rax	      2841	ops.c	FUNCTION_40	IF_7	CALL_10
0x562b	      0xe800000000	                          call 0x4005670	      2841	ops.c	FUNCTION_40	IF_7	CALL_10
0x5630	            0x4898	                                    cdqe	      2841	ops.c	FUNCTION_40	IF_7	CALL_10
0x5632	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      2841	ops.c	FUNCTION_40	IF_7	CALL_10
0x5639	    0x488b05000000	            mov rax, qword [0x04005680] 	      2842	ops.c	FUNCTION_40	IF_7
0x5640	          0x8b4040	            mov eax, dword [rax + 0x40] 	      2842	ops.c	FUNCTION_40	IF_7
0x5643	          0x8945c8	             mov dword [rbp - 0x38], eax	      2842	ops.c	FUNCTION_40	IF_7
0x5646	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2847	ops.c	FUNCTION_40	IF_9
0x564d	          0x8b4008	                mov eax, dword [rax + 8]	      2847	ops.c	FUNCTION_40	IF_9
0x5650	          0x83f801	                              cmp eax, 1	      2847	ops.c	FUNCTION_40	IF_9
0x5653	            0x7505	                           jne 0x400569a	      2847	ops.c	FUNCTION_40	IF_9
0x5655	      0xe800000000	                          call 0x400569a	      2848	ops.c	FUNCTION_40	CALL_11
0x565a	      0xba01000000	                              mov edx, 1	      2851	ops.c	FUNCTION_40	CALL_12
0x565f	      0xbe00000000	                              mov esi, 0	      2851	ops.c	FUNCTION_40	CALL_12
0x5664	      0xbf00000000	                              mov edi, 0	      2851	ops.c	FUNCTION_40	CALL_12
0x5669	      0xe800000000	                          call 0x40056ae	      2851	ops.c	FUNCTION_40	CALL_12
0x566e	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	      2851	ops.c	FUNCTION_40	CALL_12
0x5674	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2859	ops.c	FUNCTION_40	IF_10
0x567b	          0x8b4060	            mov eax, dword [rax + 0x60] 	      2859	ops.c	FUNCTION_40	IF_10
0x567e	            0x85c0	                           test eax, eax	      2859	ops.c	FUNCTION_40	IF_10
0x5680	     0xf8404030000	                            je 0x40059ca	      2859	ops.c	FUNCTION_40	IF_10
0x5686	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2859	ops.c	FUNCTION_40	IF_10
0x568d	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2859	ops.c	FUNCTION_40	IF_10
0x5691	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2859	ops.c	FUNCTION_40	IF_10
0x5698	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2859	ops.c	FUNCTION_40	IF_10
0x569c	          0x4839c2	                            cmp rdx, rax	      2859	ops.c	FUNCTION_40	IF_10
0x569f	     0xf84e5020000	                            je 0x40059ca	      2859	ops.c	FUNCTION_40	IF_10
0x56a5	    0x8b0500000000	            mov eax, dword [0x040056eb] 	      2859	ops.c	FUNCTION_40	IF_10
0x56ab	            0x85c0	                           test eax, eax	      2859	ops.c	FUNCTION_40	IF_10
0x56ad	     0xf85d7020000	                           jne 0x40059ca	      2859	ops.c	FUNCTION_40	IF_10
0x56b3	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2863	ops.c	FUNCTION_40	IF_10	CALL_13
0x56ba	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2863	ops.c	FUNCTION_40	IF_10	CALL_13
0x56be	          0x4889c7	                            mov rdi, rax	      2863	ops.c	FUNCTION_40	IF_10	CALL_13
0x56c1	      0xe800000000	                          call 0x4005706	      2863	ops.c	FUNCTION_40	IF_10	CALL_13
0x56c6	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      2863	ops.c	FUNCTION_40	IF_10	CALL_13
0x56cd	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2864	ops.c	FUNCTION_40	IF_10	IF_11
0x56d0	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      2864	ops.c	FUNCTION_40	IF_10	IF_11
0x56d7	            0x39d0	                            cmp eax, edx	      2864	ops.c	FUNCTION_40	IF_10	IF_11
0x56d9	            0x7e4b	                           jle 0x4005766	      2864	ops.c	FUNCTION_40	IF_10	IF_11
0x56db	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2866	ops.c	FUNCTION_40	IF_10	IF_11	CALL_14
0x56e2	          0x4889c7	                            mov rdi, rax	      2866	ops.c	FUNCTION_40	IF_10	IF_11	CALL_14
0x56e5	      0xe800000000	                          call 0x400572a	      2866	ops.c	FUNCTION_40	IF_10	IF_11	CALL_14
0x56ea	            0x4898	                                    cdqe	      2866	ops.c	FUNCTION_40	IF_10	IF_11	CALL_14
0x56ec	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      2866	ops.c	FUNCTION_40	IF_10	IF_11	CALL_14
0x56f3	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2868	ops.c	FUNCTION_40	IF_10	IF_11
0x56fa	    0x482b8560ffff	             sub rax, qword [rbp - 0xa0]	      2868	ops.c	FUNCTION_40	IF_10	IF_11
0x5701	    0x48018558ffff	            add qword [rbp - 0xa8], rax 	      2868	ops.c	FUNCTION_40	IF_10	IF_11
0x5708	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2869	ops.c	FUNCTION_40	IF_10	IF_11
0x570b	            0x89c2	                            mov edx, eax	      2869	ops.c	FUNCTION_40	IF_10	IF_11
0x570d	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2869	ops.c	FUNCTION_40	IF_10	IF_11
0x5714	            0x89c1	                            mov ecx, eax	      2869	ops.c	FUNCTION_40	IF_10	IF_11
0x5716	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2869	ops.c	FUNCTION_40	IF_10	IF_11
0x571d	            0x29c1	                            sub ecx, eax	      2869	ops.c	FUNCTION_40	IF_10	IF_11
0x571f	            0x89c8	                            mov eax, ecx	      2869	ops.c	FUNCTION_40	IF_10	IF_11
0x5721	             0x1d0	                            add eax, edx	      2869	ops.c	FUNCTION_40	IF_10	IF_11
0x5723	          0x8945c8	             mov dword [rbp - 0x38], eax	      2869	ops.c	FUNCTION_40	IF_10	IF_11
0x5726	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2872	ops.c	FUNCTION_40	IF_10	CALL_15
0x572d	          0x4889c7	                            mov rdi, rax	      2872	ops.c	FUNCTION_40	IF_10	CALL_15
0x5730	      0xe800000000	                          call 0x4005775	      2872	ops.c	FUNCTION_40	IF_10	CALL_15
0x5735	    0x482b8558ffff	             sub rax, qword [rbp - 0xa8]	      2872	ops.c	FUNCTION_40	IF_10	CALL_15
0x573c	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      2872	ops.c	FUNCTION_40	IF_10	CALL_15
0x5743	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      2873	ops.c	FUNCTION_40	IF_10	IF_12
0x574b	     0xf8e39020000	                           jle 0x40059ca	      2873	ops.c	FUNCTION_40	IF_10	IF_12
0x5751	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2877	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_16
0x5758	          0x83c001	                              add eax, 1	      2877	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_16
0x575b	            0x89c7	                            mov edi, eax	      2877	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_16
0x575d	      0xe800000000	                          call 0x40057a2	      2877	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_16
0x5762	        0x48894580	             mov qword [rbp - 0x80], rax	      2877	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_16
0x5766	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      2877	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_16
0x576b	     0xf840d020000	                            je 0x40059be	      2877	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_16
0x5771	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      2879	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_17
0x5778	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2879	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_17
0x577b	          0x4863c8	                         movsxd rcx, eax	      2879	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_17
0x577e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2879	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_17
0x5785	          0x4801c1	                            add rcx, rax	      2879	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_17
0x5788	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2879	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_17
0x578c	          0x4889ce	                            mov rsi, rcx	      2879	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_17
0x578f	          0x4889c7	                            mov rdi, rax	      2879	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_17
0x5792	      0xe800000000	                          call 0x40057d7	      2879	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_17
0x5797	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2880	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x579e	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2880	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x57a2	        0x4883c001	                              add rax, 1	      2880	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x57a6	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      2880	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x57ad	      0xe97f010000	                           jmp 0x4005971	      2880	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x57b2	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      2883	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	CALL_18
0x57b9	        0x488d75b0	                   lea rsi, [rbp - 0x50]	      2883	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	CALL_18
0x57bd	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2883	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	CALL_18
0x57c4	      0xb901000000	                              mov ecx, 1	      2883	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	CALL_18
0x57c9	          0x4889c7	                            mov rdi, rax	      2883	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	CALL_18
0x57cc	      0xe8084f0000	                     call sym.block_prep	      2883	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	CALL_18
0x57d1	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2884	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x57d4	            0x85c0	                           test eax, eax	      2884	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x57d6	            0x740e	                            je 0x4005826	      2884	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x57d8	    0x8b0500000000	            mov eax, dword [0x0400581e] 	      2884	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x57de	            0x85c0	                           test eax, eax	      2884	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x57e0	     0xf8443010000	                            je 0x4005969	      2884	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x57e6	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      2891	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15
0x57e9	            0x85c0	                           test eax, eax	      2891	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15
0x57eb	            0x7425	                            je 0x4005852	      2891	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15
0x57ed	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2893	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15
0x57f4	        0x488945a0	             mov qword [rbp - 0x60], rax	      2893	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15
0x57f8	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2894	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15	CALL_19
0x57ff	          0x8b5064	            mov edx, dword [rax + 0x64] 	      2894	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15	CALL_19
0x5802	        0x488d45a0	                   lea rax, [rbp - 0x60]	      2894	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15	CALL_19
0x5806	            0x89d6	                            mov esi, edx	      2894	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15	CALL_19
0x5808	          0x4889c7	                            mov rdi, rax	      2894	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15	CALL_19
0x580b	      0xe800000000	                          call 0x4005850	      2894	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15	CALL_19
0x5810	            0xeb07	                           jmp 0x4005859	      2894	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_15	CALL_19
0x5812	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      2897	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	ELSE_2
0x5819	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2899	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_20
0x5820	          0x4889c7	                            mov rdi, rax	      2899	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_20
0x5823	      0xe800000000	                          call 0x4005868	      2899	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_20
0x5828	        0x48894588	             mov qword [rbp - 0x78], rax	      2899	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_20
0x582c	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2900	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x5830	          0x4889c7	                            mov rdi, rax	      2900	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x5833	      0xe800000000	                          call 0x4005878	      2900	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x5838	            0x89c2	                            mov edx, eax	      2900	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x583a	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2902	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x583d	             0x1c2	                            add edx, eax	      2900	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x583f	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2900	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x5846	             0x1d0	                            add eax, edx	      2900	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x5848	          0x83c001	                              add eax, 1	      2900	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x584b	            0x89c7	                            mov edi, eax	      2900	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x584d	      0xe800000000	                          call 0x4005892	      2900	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x5852	        0x48894590	             mov qword [rbp - 0x70], rax	      2900	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_22
0x5856	      0x48837d9000	               cmp qword [rbp - 0x70], 0	      2905	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_16
0x585b	     0xf84c7000000	                            je 0x4005968	      2905	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_16
0x5861	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2908	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_23
0x5864	          0x4863d0	                         movsxd rdx, eax	      2908	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_23
0x5867	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      2908	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_23
0x586b	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2908	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_23
0x586f	          0x4889ce	                            mov rsi, rcx	      2908	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_23
0x5872	          0x4889c7	                            mov rdi, rax	      2908	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_23
0x5875	      0xe800000000	                          call 0x40058ba	      2908	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_23
0x587a	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2909	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x587d	            0x4898	                                    cdqe	      2909	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x587f	        0x48894598	             mov qword [rbp - 0x68], rax	      2909	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x5883	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2911	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_24
0x5886	            0x4898	                                    cdqe	      2911	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_24
0x5888	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      2911	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_24
0x588c	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      2911	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_24
0x5890	          0x4801d1	                            add rcx, rdx	      2911	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_24
0x5893	          0x4889c2	                            mov rdx, rax	      2911	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_24
0x5896	      0xbe20000000	                           mov esi, 0x20	      2911	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_24
0x589b	          0x4889cf	                            mov rdi, rcx	      2911	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_24
0x589e	      0xe800000000	                          call 0x40058e3	      2911	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_24
0x58a3	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      2912	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x58a6	            0x4898	                                    cdqe	      2912	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x58a8	        0x48014598	            add qword [rbp - 0x68], rax 	      2912	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x58ac	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      2914	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_25
0x58b3	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      2914	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_25
0x58b7	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2914	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_25
0x58bb	          0x4801c1	                            add rcx, rax	      2914	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_25
0x58be	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2914	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_25
0x58c2	          0x4889c6	                            mov rsi, rax	      2914	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_25
0x58c5	          0x4889cf	                            mov rdi, rcx	      2914	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_25
0x58c8	      0xe800000000	                          call 0x400590d	      2914	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_25
0x58cd	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2915	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x58d4	        0x48014598	            add qword [rbp - 0x68], rax 	      2915	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x58d8	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2916	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x58db	            0x4898	                                    cdqe	      2916	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x58dd	        0x48014588	            add qword [rbp - 0x78], rax 	      2916	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14
0x58e1	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2917	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_26
0x58e5	          0x4889c7	                            mov rdi, rax	      2917	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_26
0x58e8	      0xe800000000	                          call 0x400592d	      2917	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_26
0x58ed	        0x488d5001	                      lea rdx, [rax + 1]	      2917	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_26
0x58f1	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      2917	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_26
0x58f5	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2917	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_26
0x58f9	          0x4801c1	                            add rcx, rax	      2917	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_26
0x58fc	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2917	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_26
0x5900	          0x4889c6	                            mov rsi, rax	      2917	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_26
0x5903	          0x4889cf	                            mov rdi, rcx	      2917	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_26
0x5906	      0xe800000000	                          call 0x400594b	      2917	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_26
0x590b	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      2918	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_27
0x590f	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2918	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_27
0x5916	      0xba00000000	                              mov edx, 0	      2918	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_27
0x591b	          0x4889ce	                            mov rsi, rcx	      2918	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_27
0x591e	          0x4889c7	                            mov rdi, rax	      2918	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_27
0x5921	      0xe800000000	                          call 0x4005966	      2918	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_27
0x5926	            0xeb01	                           jmp 0x4005969	      2918	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	CALL_27
0x5928	              0x90	                                     nop	      2906	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1	IF_14	IF_16
0x5929	    0x48838550ffff	               add qword [rbp - 0xb0], 1	      2881	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x5931	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2880	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x5938	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2880	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x593c	    0x483b8550ffff	             cmp rax, qword [rbp - 0xb0]	      2880	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x5943	     0xf8d69feffff	                           jge 0x40057f2	      2880	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	FOR_1
0x5949	      0xe800000000	                          call 0x400598e	      2921	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_28
0x594e	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2923	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x5955	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2923	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x5959	        0x488d5001	                      lea rdx, [rax + 1]	      2923	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x595d	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      2923	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x5964	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2923	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x5968	        0x4883c001	                              add rax, 1	      2923	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x596c	      0xb900000000	                              mov ecx, 0	      2923	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x5971	      0xbe00000000	                              mov esi, 0	      2923	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x5976	          0x4889c7	                            mov rdi, rax	      2923	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x5979	      0xe800000000	                          call 0x40059be	      2923	ops.c	FUNCTION_40	IF_10	IF_12	IF_13	CALL_29
0x597e	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2925	ops.c	FUNCTION_40	IF_10	IF_12	CALL_30
0x5982	          0x4889c7	                            mov rdi, rax	      2925	ops.c	FUNCTION_40	IF_10	IF_12	CALL_30
0x5985	      0xe800000000	                          call 0x40059ca	      2925	ops.c	FUNCTION_40	IF_10	IF_12	CALL_30
0x598a	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	      2930	ops.c	FUNCTION_40
0x5990	        0x488b75f8	                mov rsi, qword [rbp - 8]	      2931	ops.c	FUNCTION_40
0x5994	    0x644833342528	                xor rsi, qword fs:[0x28]	      2931	ops.c	FUNCTION_40
0x599d	            0x7405	                            je 0x40059e4	      2931	ops.c	FUNCTION_40
0x599f	      0xe800000000	                          call 0x40059e4	      2931	ops.c	FUNCTION_40
0x59a4	              0xc9	                                   leave	      2931	ops.c	FUNCTION_40
0x59a5	              0xc3	                                     ret	      2931	ops.c	FUNCTION_40
yank_copy_line	CALL,4:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,1	68
0x680c	              0x55	                                push rbp	      3359	ops.c	FUNCTION_46
0x680d	          0x4889e5	                            mov rbp, rsp	      3359	ops.c	FUNCTION_46
0x6810	        0x4883ec20	                           sub rsp, 0x20	      3359	ops.c	FUNCTION_46
0x6814	        0x48897de8	             mov qword [rbp - 0x18], rdi	      3359	ops.c	FUNCTION_46
0x6818	        0x488975e0	             mov qword [rbp - 0x20], rsi	      3359	ops.c	FUNCTION_46
0x681c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3362	ops.c	FUNCTION_46	IF_1	CALL_1
0x6820	            0x8b10	                    mov edx, dword [rax]	      3362	ops.c	FUNCTION_46	IF_1	CALL_1
0x6822	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3362	ops.c	FUNCTION_46	IF_1	CALL_1
0x6826	          0x8b4004	                mov eax, dword [rax + 4]	      3362	ops.c	FUNCTION_46	IF_1	CALL_1
0x6829	             0x1c2	                            add edx, eax	      3362	ops.c	FUNCTION_46	IF_1	CALL_1
0x682b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3362	ops.c	FUNCTION_46	IF_1	CALL_1
0x682f	          0x8b4008	                mov eax, dword [rax + 8]	      3362	ops.c	FUNCTION_46	IF_1	CALL_1
0x6832	             0x1d0	                            add eax, edx	      3362	ops.c	FUNCTION_46	IF_1	CALL_1
0x6834	          0x83c001	                              add eax, 1	      3362	ops.c	FUNCTION_46	IF_1	CALL_1
0x6837	            0x89c7	                            mov edi, eax	      3362	ops.c	FUNCTION_46	IF_1	CALL_1
0x6839	      0xe800000000	                          call 0x400687e	      3362	ops.c	FUNCTION_46	IF_1	CALL_1
0x683e	        0x488945f8	                mov qword [rbp - 8], rax	      3362	ops.c	FUNCTION_46	IF_1	CALL_1
0x6842	      0x48837df800	                  cmp qword [rbp - 8], 0	      3362	ops.c	FUNCTION_46	IF_1	CALL_1
0x6847	            0x750a	                           jne 0x4006893	      3362	ops.c	FUNCTION_46	IF_1	CALL_1
0x6849	      0xb800000000	                              mov eax, 0	      3364	ops.c	FUNCTION_46	IF_1
0x684e	      0xe9a4000000	                           jmp 0x4006937	      3364	ops.c	FUNCTION_46	IF_1
0x6853	    0x488b05000000	            mov rax, qword [0x0400689a] 	      3365	ops.c	FUNCTION_46
0x685a	          0x488b00	                    mov rax, qword [rax]	      3365	ops.c	FUNCTION_46
0x685d	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3365	ops.c	FUNCTION_46
0x6861	        0x48c1e203	                              shl rdx, 3	      3365	ops.c	FUNCTION_46
0x6865	          0x4801c2	                            add rdx, rax	      3365	ops.c	FUNCTION_46
0x6868	        0x488b45f8	                mov rax, qword [rbp - 8]	      3365	ops.c	FUNCTION_46
0x686c	          0x488902	                    mov qword [rdx], rax	      3365	ops.c	FUNCTION_46
0x686f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3366	ops.c	FUNCTION_46	CALL_2
0x6873	            0x8b00	                    mov eax, dword [rax]	      3366	ops.c	FUNCTION_46	CALL_2
0x6875	          0x4863d0	                         movsxd rdx, eax	      3366	ops.c	FUNCTION_46	CALL_2
0x6878	        0x488b45f8	                mov rax, qword [rbp - 8]	      3366	ops.c	FUNCTION_46	CALL_2
0x687c	      0xbe20000000	                           mov esi, 0x20	      3366	ops.c	FUNCTION_46	CALL_2
0x6881	          0x4889c7	                            mov rdi, rax	      3366	ops.c	FUNCTION_46	CALL_2
0x6884	      0xe800000000	                          call 0x40068c9	      3366	ops.c	FUNCTION_46	CALL_2
0x6889	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3367	ops.c	FUNCTION_46
0x688d	            0x8b00	                    mov eax, dword [rax]	      3367	ops.c	FUNCTION_46
0x688f	            0x4898	                                    cdqe	      3367	ops.c	FUNCTION_46
0x6891	        0x480145f8	                add qword [rbp - 8], rax	      3367	ops.c	FUNCTION_46
0x6895	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3368	ops.c	FUNCTION_46	CALL_3
0x6899	          0x8b4008	                mov eax, dword [rax + 8]	      3368	ops.c	FUNCTION_46	CALL_3
0x689c	          0x4863d0	                         movsxd rdx, eax	      3368	ops.c	FUNCTION_46	CALL_3
0x689f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3368	ops.c	FUNCTION_46	CALL_3
0x68a3	        0x488b4810	            mov rcx, qword [rax + 0x10] 	      3368	ops.c	FUNCTION_46	CALL_3
0x68a7	        0x488b45f8	                mov rax, qword [rbp - 8]	      3368	ops.c	FUNCTION_46	CALL_3
0x68ab	          0x4889ce	                            mov rsi, rcx	      3368	ops.c	FUNCTION_46	CALL_3
0x68ae	          0x4889c7	                            mov rdi, rax	      3368	ops.c	FUNCTION_46	CALL_3
0x68b1	      0xe800000000	                          call 0x40068f6	      3368	ops.c	FUNCTION_46	CALL_3
0x68b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3369	ops.c	FUNCTION_46
0x68ba	          0x8b4008	                mov eax, dword [rax + 8]	      3369	ops.c	FUNCTION_46
0x68bd	            0x4898	                                    cdqe	      3369	ops.c	FUNCTION_46
0x68bf	        0x480145f8	                add qword [rbp - 8], rax	      3369	ops.c	FUNCTION_46
0x68c3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3370	ops.c	FUNCTION_46	CALL_4
0x68c7	          0x8b4004	                mov eax, dword [rax + 4]	      3370	ops.c	FUNCTION_46	CALL_4
0x68ca	          0x4863d0	                         movsxd rdx, eax	      3370	ops.c	FUNCTION_46	CALL_4
0x68cd	        0x488b45f8	                mov rax, qword [rbp - 8]	      3370	ops.c	FUNCTION_46	CALL_4
0x68d1	      0xbe20000000	                           mov esi, 0x20	      3370	ops.c	FUNCTION_46	CALL_4
0x68d6	          0x4889c7	                            mov rdi, rax	      3370	ops.c	FUNCTION_46	CALL_4
0x68d9	      0xe800000000	                          call 0x400691e	      3370	ops.c	FUNCTION_46	CALL_4
0x68de	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3371	ops.c	FUNCTION_46
0x68e2	          0x8b4004	                mov eax, dword [rax + 4]	      3371	ops.c	FUNCTION_46
0x68e5	            0x4898	                                    cdqe	      3371	ops.c	FUNCTION_46
0x68e7	        0x480145f8	                add qword [rbp - 8], rax	      3371	ops.c	FUNCTION_46
0x68eb	        0x488b45f8	                mov rax, qword [rbp - 8]	      3372	ops.c	FUNCTION_46
0x68ef	          0xc60000	                       mov byte [rax], 0	      3372	ops.c	FUNCTION_46
0x68f2	      0xb801000000	                              mov eax, 1	      3373	ops.c	FUNCTION_46
0x68f7	              0xc9	                                   leave	      3374	ops.c	FUNCTION_46
0x68f8	              0xc3	                                     ret	      3374	ops.c	FUNCTION_46
swapchars	CALL,3:FOR,1:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,3	47
0x49aa	              0x55	                                push rbp	      2476	ops.c	FUNCTION_37
0x49ab	          0x4889e5	                            mov rbp, rsp	      2476	ops.c	FUNCTION_37
0x49ae	              0x53	                                push rbx	      2476	ops.c	FUNCTION_37
0x49af	        0x4883ec28	                           sub rsp, 0x28	      2476	ops.c	FUNCTION_37
0x49b3	          0x897ddc	             mov dword [rbp - 0x24], edi	      2476	ops.c	FUNCTION_37
0x49b6	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2476	ops.c	FUNCTION_37
0x49ba	          0x8955d8	             mov dword [rbp - 0x28], edx	      2476	ops.c	FUNCTION_37
0x49bd	    0xc745e8000000	               mov dword [rbp - 0x18], 0	      2478	ops.c	FUNCTION_37
0x49c4	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      2480	ops.c	FUNCTION_37	FOR_1
0x49c7	          0x8945e4	             mov dword [rbp - 0x1c], eax	      2480	ops.c	FUNCTION_37	FOR_1
0x49ca	            0xeb5d	                           jmp 0x4004a69	      2480	ops.c	FUNCTION_37	FOR_1
0x49cc	    0x8b0500000000	            mov eax, dword [0x04004a12] 	      2483	ops.c	FUNCTION_37	FOR_1	IF_1
0x49d2	            0x85c0	                           test eax, eax	      2483	ops.c	FUNCTION_37	FOR_1	IF_1
0x49d4	            0x742a	                            je 0x4004a40	      2483	ops.c	FUNCTION_37	FOR_1	IF_1
0x49d6	    0x488b1d000000	            mov rbx, qword [0x04004a1d] 	      2485	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x49dd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2485	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x49e1	          0x4889c7	                            mov rdi, rax	      2485	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x49e4	      0xe800000000	                          call 0x4004a29	      2485	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x49e9	          0x4889c7	                            mov rdi, rax	      2485	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x49ec	            0xffd3	                                call rbx	      2485	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x49ee	          0x8945ec	             mov dword [rbp - 0x14], eax	      2485	ops.c	FUNCTION_37	FOR_1	IF_1	CALL_1
0x49f1	        0x837dec00	               cmp dword [rbp - 0x14], 0	      2488	ops.c	FUNCTION_37	FOR_1	IF_1	IF_2
0x49f5	            0x7e09	                           jle 0x4004a40	      2488	ops.c	FUNCTION_37	FOR_1	IF_1	IF_2
0x49f7	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2489	ops.c	FUNCTION_37	FOR_1	IF_1	IF_2
0x49fa	          0x83e801	                              sub eax, 1	      2489	ops.c	FUNCTION_37	FOR_1	IF_1	IF_2
0x49fd	          0x2945e4	             sub dword [rbp - 0x1c], eax	      2489	ops.c	FUNCTION_37	FOR_1	IF_1	IF_2
0x4a00	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      2492	ops.c	FUNCTION_37	FOR_1	CALL_2
0x4a04	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2492	ops.c	FUNCTION_37	FOR_1	CALL_2
0x4a07	          0x4889d6	                            mov rsi, rdx	      2492	ops.c	FUNCTION_37	FOR_1	CALL_2
0x4a0a	            0x89c7	                            mov edi, eax	      2492	ops.c	FUNCTION_37	FOR_1	CALL_2
0x4a0c	      0xe800000000	                          call 0x4004a51	      2492	ops.c	FUNCTION_37	FOR_1	CALL_2
0x4a11	           0x945e8	              or dword [rbp - 0x18], eax	      2492	ops.c	FUNCTION_37	FOR_1	CALL_2
0x4a14	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2493	ops.c	FUNCTION_37	FOR_1	IF_3	CALL_3
0x4a18	          0x4889c7	                            mov rdi, rax	      2493	ops.c	FUNCTION_37	FOR_1	IF_3	CALL_3
0x4a1b	      0xe800000000	                          call 0x4004a60	      2493	ops.c	FUNCTION_37	FOR_1	IF_3	CALL_3
0x4a20	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2493	ops.c	FUNCTION_37	FOR_1	IF_3	CALL_3
0x4a23	            0x740c	                            je 0x4004a71	      2493	ops.c	FUNCTION_37	FOR_1	IF_3	CALL_3
0x4a25	        0x836de401	               sub dword [rbp - 0x1c], 1	      2480	ops.c	FUNCTION_37	FOR_1
0x4a29	        0x837de400	               cmp dword [rbp - 0x1c], 0	      2480	ops.c	FUNCTION_37	FOR_1
0x4a2d	            0x7f9d	                            jg 0x4004a0c	      2480	ops.c	FUNCTION_37	FOR_1
0x4a2f	            0xeb01	                           jmp 0x4004a72	      2480	ops.c	FUNCTION_37	FOR_1
0x4a31	              0x90	                                     nop	      2494	ops.c	FUNCTION_37	FOR_1	IF_3
0x4a32	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      2496	ops.c	FUNCTION_37
0x4a35	        0x4883c428	                           add rsp, 0x28	      2497	ops.c	FUNCTION_37
0x4a39	              0x5b	                                 pop rbx	      2497	ops.c	FUNCTION_37
0x4a3a	              0x5d	                                 pop rbp	      2497	ops.c	FUNCTION_37
0x4a3b	              0xc3	                                     ret	      2497	ops.c	FUNCTION_37
prepare_viminfo_registers	CALL,1:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,0	8
0xc395	              0x55	                                push rbp	      6014	ops.c	FUNCTION_68
0xc396	          0x4889e5	                            mov rbp, rsp	      6014	ops.c	FUNCTION_68
0xc399	      0xbfe0040000	                          mov edi, 0x4e0	      6015	ops.c	FUNCTION_68	CALL_1
0xc39e	      0xe800000000	                          call 0x400c3e3	      6015	ops.c	FUNCTION_68	CALL_1
0xc3a3	    0x488905000000	            mov qword [0x0400c3ea], rax 	      6015	ops.c	FUNCTION_68	CALL_1
0xc3aa	              0x90	                                     nop	      6017	ops.c	FUNCTION_68
0xc3ab	              0x5d	                                 pop rbp	      6017	ops.c	FUNCTION_68
0xc3ac	              0xc3	                                     ret	      6017	ops.c	FUNCTION_68
preprocs_left	CALL,2:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,0	29
0x88c1	              0x55	                                push rbp	      4145	ops.c	FUNCTION_50
0x88c2	          0x4889e5	                            mov rbp, rsp	      4145	ops.c	FUNCTION_50
0x88c5	    0x488b05000000	            mov rax, qword [0x0400890c] 	      4149	ops.c	FUNCTION_50
0x88cc	    0x8b805c150000	          mov eax, dword [rax + 0x155c] 	      4149	ops.c	FUNCTION_50
0x88d2	            0x85c0	                           test eax, eax	      4149	ops.c	FUNCTION_50
0x88d4	            0x7411	                            je 0x4008927	      4149	ops.c	FUNCTION_50
0x88d6	    0x488b05000000	            mov rax, qword [0x0400891d] 	      4149	ops.c	FUNCTION_50
0x88dd	    0x8b8010140000	          mov eax, dword [rax + 0x1410] 	      4149	ops.c	FUNCTION_50
0x88e3	            0x85c0	                           test eax, eax	      4149	ops.c	FUNCTION_50
0x88e5	            0x743a	                            je 0x4008961	      4149	ops.c	FUNCTION_50
0x88e7	    0x488b05000000	            mov rax, qword [0x0400892e] 	      4155	ops.c	FUNCTION_50	CALL_2
0x88ee	    0x8b8010140000	          mov eax, dword [rax + 0x1410] 	      4155	ops.c	FUNCTION_50	CALL_2
0x88f4	            0x85c0	                           test eax, eax	      4149	ops.c	FUNCTION_50
0x88f6	            0x7430	                            je 0x4008968	      4149	ops.c	FUNCTION_50
0x88f8	      0xba01000000	                              mov edx, 1	      4155	ops.c	FUNCTION_50	CALL_2
0x88fd	      0xbe20000000	                           mov esi, 0x20	      4155	ops.c	FUNCTION_50	CALL_2
0x8902	      0xbf23000000	                           mov edi, 0x23	      4155	ops.c	FUNCTION_50	CALL_2
0x8907	      0xe800000000	                          call 0x400894c	      4155	ops.c	FUNCTION_50	CALL_2
0x890c	            0x85c0	                           test eax, eax	      4155	ops.c	FUNCTION_50	CALL_2
0x890e	            0x7418	                            je 0x4008968	      4155	ops.c	FUNCTION_50	CALL_2
0x8910	    0x488b05000000	            mov rax, qword [0x04008957] 	      4156	ops.c	FUNCTION_50
0x8917	    0x8b80c8160000	          mov eax, dword [rax + 0x16c8] 	      4156	ops.c	FUNCTION_50
0x891d	            0x85c0	                           test eax, eax	      4156	ops.c	FUNCTION_50
0x891f	            0x7507	                           jne 0x4008968	      4156	ops.c	FUNCTION_50
0x8921	      0xb801000000	                              mov eax, 1	      4149	ops.c	FUNCTION_50
0x8926	            0xeb05	                           jmp 0x400896d	      4149	ops.c	FUNCTION_50
0x8928	      0xb800000000	                              mov eax, 0	      4149	ops.c	FUNCTION_50
0x892d	              0x5d	                                 pop rbp	      4159	ops.c	FUNCTION_50
0x892e	              0xc3	                                     ret	      4159	ops.c	FUNCTION_50
do_execreg	CALL,28:FOR,1:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,4:IF,18	239
0x1b94	              0x55	                                push rbp	      1200	ops.c	FUNCTION_23
0x1b95	          0x4889e5	                            mov rbp, rsp	      1200	ops.c	FUNCTION_23
0x1b98	        0x4883ec30	                           sub rsp, 0x30	      1200	ops.c	FUNCTION_23
0x1b9c	          0x897ddc	             mov dword [rbp - 0x24], edi	      1200	ops.c	FUNCTION_23
0x1b9f	          0x8975d8	             mov dword [rbp - 0x28], esi	      1200	ops.c	FUNCTION_23
0x1ba2	          0x8955d4	             mov dword [rbp - 0x2c], edx	      1200	ops.c	FUNCTION_23
0x1ba5	          0x894dd0	             mov dword [rbp - 0x30], ecx	      1200	ops.c	FUNCTION_23
0x1ba8	    0xc745e0010000	               mov dword [rbp - 0x20], 1	      1203	ops.c	FUNCTION_23
0x1baf	        0x837ddc40	           cmp dword [rbp - 0x24], 0x40 	      1206	ops.c	FUNCTION_23	IF_1
0x1bb3	            0x752f	                           jne 0x4001c24	      1206	ops.c	FUNCTION_23	IF_1
0x1bb5	    0x8b0500000000	            mov eax, dword [0x04001bfb] 	      1208	ops.c	FUNCTION_23	IF_1	IF_2
0x1bbb	            0x85c0	                           test eax, eax	      1208	ops.c	FUNCTION_23	IF_1	IF_2
0x1bbd	            0x751c	                           jne 0x4001c1b	      1208	ops.c	FUNCTION_23	IF_1	IF_2
0x1bbf	      0xbf00000000	                              mov edi, 0	      1210	ops.c	FUNCTION_23	IF_1	IF_2	CALL_2
0x1bc4	      0xe800000000	                          call 0x4001c09	      1210	ops.c	FUNCTION_23	IF_1	IF_2	CALL_2
0x1bc9	          0x4889c7	                            mov rdi, rax	      1210	ops.c	FUNCTION_23	IF_1	IF_2	CALL_2
0x1bcc	      0xe800000000	                          call 0x4001c11	      1210	ops.c	FUNCTION_23	IF_1	IF_2	CALL_2
0x1bd1	      0xb800000000	                              mov eax, 0	      1211	ops.c	FUNCTION_23	IF_1	IF_2
0x1bd6	      0xe962030000	                           jmp 0x4001f7d	      1211	ops.c	FUNCTION_23	IF_1	IF_2
0x1bdb	    0x8b0500000000	            mov eax, dword [0x04001c21] 	      1213	ops.c	FUNCTION_23	IF_1
0x1be1	          0x8945dc	             mov dword [rbp - 0x24], eax	      1213	ops.c	FUNCTION_23	IF_1
0x1be4	        0x837ddc25	           cmp dword [rbp - 0x24], 0x25 	      1216	ops.c	FUNCTION_23	IF_3	CALL_3
0x1be8	            0x7419	                            je 0x4001c43	      1216	ops.c	FUNCTION_23	IF_3	CALL_3
0x1bea	        0x837ddc23	           cmp dword [rbp - 0x24], 0x23 	      1216	ops.c	FUNCTION_23	IF_3	CALL_3
0x1bee	            0x7413	                            je 0x4001c43	      1216	ops.c	FUNCTION_23	IF_3	CALL_3
0x1bf0	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1216	ops.c	FUNCTION_23	IF_3	CALL_3
0x1bf3	      0xbe00000000	                              mov esi, 0	      1216	ops.c	FUNCTION_23	IF_3	CALL_3
0x1bf8	            0x89c7	                            mov edi, eax	      1216	ops.c	FUNCTION_23	IF_3	CALL_3
0x1bfa	      0xe800000000	                          call 0x4001c3f	      1216	ops.c	FUNCTION_23	IF_3	CALL_3
0x1bff	            0x85c0	                           test eax, eax	      1216	ops.c	FUNCTION_23	IF_3	CALL_3
0x1c01	            0x7514	                           jne 0x4001c57	      1216	ops.c	FUNCTION_23	IF_3	CALL_3
0x1c03	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1218	ops.c	FUNCTION_23	IF_3	CALL_4
0x1c06	            0x89c7	                            mov edi, eax	      1218	ops.c	FUNCTION_23	IF_3	CALL_4
0x1c08	      0xe800000000	                          call 0x4001c4d	      1218	ops.c	FUNCTION_23	IF_3	CALL_4
0x1c0d	      0xb800000000	                              mov eax, 0	      1219	ops.c	FUNCTION_23	IF_3
0x1c12	      0xe926030000	                           jmp 0x4001f7d	      1219	ops.c	FUNCTION_23	IF_3
0x1c17	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1221	ops.c	FUNCTION_23
0x1c1a	    0x890500000000	            mov dword [0x04001c60], eax 	      1221	ops.c	FUNCTION_23
0x1c20	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1224	ops.c	FUNCTION_23	CALL_5
0x1c23	            0x89c7	                            mov edi, eax	      1224	ops.c	FUNCTION_23	CALL_5
0x1c25	      0xe800000000	                          call 0x4001c6a	      1224	ops.c	FUNCTION_23	CALL_5
0x1c2a	          0x8945dc	             mov dword [rbp - 0x24], eax	      1224	ops.c	FUNCTION_23	CALL_5
0x1c2d	        0x837ddc5f	           cmp dword [rbp - 0x24], 0x5f 	      1227	ops.c	FUNCTION_23	IF_4
0x1c31	            0x750a	                           jne 0x4001c7d	      1227	ops.c	FUNCTION_23	IF_4
0x1c33	      0xb801000000	                              mov eax, 1	      1228	ops.c	FUNCTION_23	IF_4
0x1c38	      0xe900030000	                           jmp 0x4001f7d	      1228	ops.c	FUNCTION_23	IF_4
0x1c3d	        0x837ddc3a	           cmp dword [rbp - 0x24], 0x3a 	      1231	ops.c	FUNCTION_23	IF_5
0x1c41	     0xf85df000000	                           jne 0x4001d66	      1231	ops.c	FUNCTION_23	IF_5
0x1c47	    0x488b05000000	            mov rax, qword [0x04001c8e] 	      1233	ops.c	FUNCTION_23	IF_5	IF_6
0x1c4e	          0x4885c0	                           test rax, rax	      1233	ops.c	FUNCTION_23	IF_5	IF_6
0x1c51	            0x751c	                           jne 0x4001caf	      1233	ops.c	FUNCTION_23	IF_5	IF_6
0x1c53	      0xbf00000000	                              mov edi, 0	      1235	ops.c	FUNCTION_23	IF_5	IF_6	CALL_7
0x1c58	      0xe800000000	                          call 0x4001c9d	      1235	ops.c	FUNCTION_23	IF_5	IF_6	CALL_7
0x1c5d	          0x4889c7	                            mov rdi, rax	      1235	ops.c	FUNCTION_23	IF_5	IF_6	CALL_7
0x1c60	      0xe800000000	                          call 0x4001ca5	      1235	ops.c	FUNCTION_23	IF_5	IF_6	CALL_7
0x1c65	      0xb800000000	                              mov eax, 0	      1236	ops.c	FUNCTION_23	IF_5	IF_6
0x1c6a	      0xe9ce020000	                           jmp 0x4001f7d	      1236	ops.c	FUNCTION_23	IF_5	IF_6
0x1c6f	    0x488b05000000	            mov rax, qword [0x04001cb6] 	      1238	ops.c	FUNCTION_23	IF_5	CALL_8
0x1c76	          0x4889c7	                            mov rdi, rax	      1238	ops.c	FUNCTION_23	IF_5	CALL_8
0x1c79	      0xe800000000	                          call 0x4001cbe	      1238	ops.c	FUNCTION_23	IF_5	CALL_8
0x1c7e	    0x48c705000000	               mov qword [0x04001cc9], 0	      1239	ops.c	FUNCTION_23	IF_5
0x1c89	    0x488b05000000	            mov rax, qword [0x04001cd0] 	      1241	ops.c	FUNCTION_23	IF_5	CALL_9
0x1c90	      0xb900000000	                              mov ecx, 0	      1241	ops.c	FUNCTION_23	IF_5	CALL_9
0x1c95	      0xba16000000	                           mov edx, 0x16	      1241	ops.c	FUNCTION_23	IF_5	CALL_9
0x1c9a	      0xbe00000000	                              mov esi, 0	      1241	ops.c	FUNCTION_23	IF_5	CALL_9
0x1c9f	          0x4889c7	                            mov rdi, rax	      1241	ops.c	FUNCTION_23	IF_5	CALL_9
0x1ca2	      0xe800000000	                          call 0x4001ce7	      1241	ops.c	FUNCTION_23	IF_5	CALL_9
0x1ca7	        0x488945f0	             mov qword [rbp - 0x10], rax	      1241	ops.c	FUNCTION_23	IF_5	CALL_9
0x1cab	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1243	ops.c	FUNCTION_23	IF_5	IF_7
0x1cb0	            0x7463	                            je 0x4001d55	      1243	ops.c	FUNCTION_23	IF_5	IF_7
0x1cb2	    0x8b0500000000	            mov eax, dword [0x04001cf8] 	      1247	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x1cb8	            0x85c0	                           test eax, eax	      1247	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x1cba	            0x743b	                            je 0x4001d37	      1247	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x1cbc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1247	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x1cc0	      0xba05000000	                              mov edx, 5	      1247	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x1cc5	      0xbe00000000	                              mov esi, 0	      1247	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x1cca	          0x4889c7	                            mov rdi, rax	      1247	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x1ccd	      0xe800000000	                          call 0x4001d12	      1247	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x1cd2	            0x85c0	                           test eax, eax	      1247	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x1cd4	            0x7521	                           jne 0x4001d37	      1247	ops.c	FUNCTION_23	IF_5	IF_7	IF_8	CALL_10
0x1cd6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1248	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x1cda	        0x488d7805	                      lea rdi, [rax + 5]	      1248	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x1cde	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1248	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x1ce1	            0x89c1	                            mov ecx, eax	      1248	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x1ce3	      0xba01000000	                              mov edx, 1	      1248	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x1ce8	      0xbe01000000	                              mov esi, 1	      1248	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x1ced	      0xe8f0020000	                 call sym.put_in_typebuf	      1248	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x1cf2	          0x8945e0	             mov dword [rbp - 0x20], eax	      1248	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x1cf5	            0xeb1e	                           jmp 0x4001d55	      1248	ops.c	FUNCTION_23	IF_5	IF_7	CALL_11
0x1cf7	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1250	ops.c	FUNCTION_23	IF_5	IF_7	CALL_12
0x1cfa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1250	ops.c	FUNCTION_23	IF_5	IF_7	CALL_12
0x1cfe	            0x89d1	                            mov ecx, edx	      1250	ops.c	FUNCTION_23	IF_5	IF_7	CALL_12
0x1d00	      0xba01000000	                              mov edx, 1	      1250	ops.c	FUNCTION_23	IF_5	IF_7	CALL_12
0x1d05	      0xbe01000000	                              mov esi, 1	      1250	ops.c	FUNCTION_23	IF_5	IF_7	CALL_12
0x1d0a	          0x4889c7	                            mov rdi, rax	      1250	ops.c	FUNCTION_23	IF_5	IF_7	CALL_12
0x1d0d	      0xe8d0020000	                 call sym.put_in_typebuf	      1250	ops.c	FUNCTION_23	IF_5	IF_7	CALL_12
0x1d12	          0x8945e0	             mov dword [rbp - 0x20], eax	      1250	ops.c	FUNCTION_23	IF_5	IF_7	CALL_12
0x1d15	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1252	ops.c	FUNCTION_23	IF_5	CALL_13
0x1d19	          0x4889c7	                            mov rdi, rax	      1252	ops.c	FUNCTION_23	IF_5	CALL_13
0x1d1c	      0xe800000000	                          call 0x4001d61	      1252	ops.c	FUNCTION_23	IF_5	CALL_13
0x1d21	      0xe914020000	                           jmp 0x4001f7a	      1252	ops.c	FUNCTION_23	IF_5	CALL_13
0x1d26	        0x837ddc3d	           cmp dword [rbp - 0x24], 0x3d 	      1256	ops.c	FUNCTION_23	ELSE_2	IF_9
0x1d2a	            0x7545	                           jne 0x4001db1	      1256	ops.c	FUNCTION_23	ELSE_2	IF_9
0x1d2c	      0xe800000000	                          call 0x4001d71	      1258	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_14
0x1d31	        0x488945f0	             mov qword [rbp - 0x10], rax	      1258	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_14
0x1d35	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1259	ops.c	FUNCTION_23	ELSE_2	IF_9	IF_10
0x1d3a	            0x750a	                           jne 0x4001d86	      1259	ops.c	FUNCTION_23	ELSE_2	IF_9	IF_10
0x1d3c	      0xb800000000	                              mov eax, 0	      1260	ops.c	FUNCTION_23	ELSE_2	IF_9	IF_10
0x1d41	      0xe9f7010000	                           jmp 0x4001f7d	      1260	ops.c	FUNCTION_23	ELSE_2	IF_9	IF_10
0x1d46	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	      1261	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_15
0x1d49	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1261	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_15
0x1d4c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1261	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_15
0x1d50	      0xbe01000000	                              mov esi, 1	      1261	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_15
0x1d55	          0x4889c7	                            mov rdi, rax	      1261	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_15
0x1d58	      0xe885020000	                 call sym.put_in_typebuf	      1261	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_15
0x1d5d	          0x8945e0	             mov dword [rbp - 0x20], eax	      1261	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_15
0x1d60	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1262	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_16
0x1d64	          0x4889c7	                            mov rdi, rax	      1262	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_16
0x1d67	      0xe800000000	                          call 0x4001dac	      1262	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_16
0x1d6c	      0xe9c9010000	                           jmp 0x4001f7a	      1262	ops.c	FUNCTION_23	ELSE_2	IF_9	CALL_16
0x1d71	        0x837ddc2e	           cmp dword [rbp - 0x24], 0x2e 	      1265	ops.c	FUNCTION_23	ELSE_3	IF_11
0x1d75	            0x7557	                           jne 0x4001e0e	      1265	ops.c	FUNCTION_23	ELSE_3	IF_11
0x1d77	      0xe800000000	                          call 0x4001dbc	      1267	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_17
0x1d7c	        0x488945f0	             mov qword [rbp - 0x10], rax	      1267	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_17
0x1d80	      0x48837df000	               cmp qword [rbp - 0x10], 0	      1268	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12
0x1d85	            0x751c	                           jne 0x4001de3	      1268	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12
0x1d87	      0xbf00000000	                              mov edi, 0	      1270	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12	CALL_19
0x1d8c	      0xe800000000	                          call 0x4001dd1	      1270	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12	CALL_19
0x1d91	          0x4889c7	                            mov rdi, rax	      1270	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12	CALL_19
0x1d94	      0xe800000000	                          call 0x4001dd9	      1270	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12	CALL_19
0x1d99	      0xb800000000	                              mov eax, 0	      1271	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12
0x1d9e	      0xe99a010000	                           jmp 0x4001f7d	      1271	ops.c	FUNCTION_23	ELSE_3	IF_11	IF_12
0x1da3	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	      1273	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x1da6	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1273	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x1da9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1273	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x1dad	      0xbe00000000	                              mov esi, 0	      1273	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x1db2	          0x4889c7	                            mov rdi, rax	      1273	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x1db5	      0xe828020000	                 call sym.put_in_typebuf	      1273	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x1dba	          0x8945e0	             mov dword [rbp - 0x20], eax	      1273	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_20
0x1dbd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1274	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_21
0x1dc1	          0x4889c7	                            mov rdi, rax	      1274	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_21
0x1dc4	      0xe800000000	                          call 0x4001e09	      1274	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_21
0x1dc9	      0xe96c010000	                           jmp 0x4001f7a	      1274	ops.c	FUNCTION_23	ELSE_3	IF_11	CALL_21
0x1dce	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1278	ops.c	FUNCTION_23	ELSE_4	CALL_22
0x1dd1	      0xbe00000000	                              mov esi, 0	      1278	ops.c	FUNCTION_23	ELSE_4	CALL_22
0x1dd6	            0x89c7	                            mov edi, eax	      1278	ops.c	FUNCTION_23	ELSE_4	CALL_22
0x1dd8	      0xe800000000	                          call 0x4001e1d	      1278	ops.c	FUNCTION_23	ELSE_4	CALL_22
0x1ddd	    0x488b05000000	            mov rax, qword [0x04001e24] 	      1279	ops.c	FUNCTION_23	ELSE_4	IF_13
0x1de4	          0x488b00	                    mov rax, qword [rax]	      1279	ops.c	FUNCTION_23	ELSE_4	IF_13
0x1de7	          0x4885c0	                           test rax, rax	      1279	ops.c	FUNCTION_23	ELSE_4	IF_13
0x1dea	            0x750a	                           jne 0x4001e36	      1279	ops.c	FUNCTION_23	ELSE_4	IF_13
0x1dec	      0xb800000000	                              mov eax, 0	      1280	ops.c	FUNCTION_23	ELSE_4	IF_13
0x1df1	      0xe947010000	                           jmp 0x4001f7d	      1280	ops.c	FUNCTION_23	ELSE_4	IF_13
0x1df6	        0x837dd800	               cmp dword [rbp - 0x28], 0	      1283	ops.c	FUNCTION_23	ELSE_4
0x1dfa	            0x7407	                            je 0x4001e43	      1283	ops.c	FUNCTION_23	ELSE_4
0x1dfc	      0xb8ffffffff	                     mov eax, 0xffffffff	      1283	ops.c	FUNCTION_23	ELSE_4
0x1e01	            0xeb05	                           jmp 0x4001e48	      1283	ops.c	FUNCTION_23	ELSE_4
0x1e03	      0xb800000000	                              mov eax, 0	      1283	ops.c	FUNCTION_23	ELSE_4
0x1e08	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1283	ops.c	FUNCTION_23	ELSE_4
0x1e0b	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      1288	ops.c	FUNCTION_23	ELSE_4	CALL_23
0x1e0e	            0x89c7	                            mov edi, eax	      1288	ops.c	FUNCTION_23	ELSE_4	CALL_23
0x1e10	      0xe82a010000	          call sym.put_reedit_in_typebuf	      1288	ops.c	FUNCTION_23	ELSE_4	CALL_23
0x1e15	    0x488b05000000	            mov rax, qword [0x04001e5c] 	      1289	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x1e1c	        0x488b4008	                mov rax, qword [rax + 8]	      1289	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x1e20	        0x488945e8	             mov qword [rbp - 0x18], rax	      1289	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x1e24	      0xe9f7000000	                           jmp 0x4001f60	      1289	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x1e29	    0x488b05000000	            mov rax, qword [0x04001e70] 	      1294	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x1e30	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      1294	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x1e34	            0x3c01	                               cmp al, 1	      1294	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x1e36	            0x741b	                            je 0x4001e93	      1294	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x1e38	    0x488b05000000	            mov rax, qword [0x04001e7f] 	      1294	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x1e3f	        0x488b4008	                mov rax, qword [rax + 8]	      1294	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x1e43	        0x4883e801	                              sub rax, 1	      1294	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x1e47	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      1294	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x1e4b	            0x7f06	                            jg 0x4001e93	      1294	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x1e4d	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      1295	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x1e51	            0x742d	                            je 0x4001ec0	      1295	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14
0x1e53	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1297	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x1e56	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1297	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x1e59	          0x4189d0	                            mov r8d, edx	      1297	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x1e5c	      0xb901000000	                              mov ecx, 1	      1297	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x1e61	      0xba00000000	                              mov edx, 0	      1297	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x1e66	            0x89c6	                            mov esi, eax	      1297	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x1e68	      0xbf00000000	                              mov edi, 0	      1297	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x1e6d	      0xe800000000	                          call 0x4001eb2	      1297	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x1e72	            0x85c0	                           test eax, eax	      1297	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x1e74	            0x750a	                           jne 0x4001ec0	      1297	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15	CALL_24
0x1e76	      0xb800000000	                              mov eax, 0	      1298	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15
0x1e7b	      0xe9bd000000	                           jmp 0x4001f7d	      1298	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_14	IF_15
0x1e80	    0x488b05000000	            mov rax, qword [0x04001ec7] 	      1300	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_25
0x1e87	          0x488b00	                    mov rax, qword [rax]	      1300	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_25
0x1e8a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1300	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_25
0x1e8e	        0x48c1e203	                              shl rdx, 3	      1300	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_25
0x1e92	          0x4801d0	                            add rax, rdx	      1300	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_25
0x1e95	          0x488b00	                    mov rax, qword [rax]	      1300	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_25
0x1e98	          0x4889c7	                            mov rdi, rax	      1300	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_25
0x1e9b	      0xe800000000	                          call 0x4001ee0	      1300	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_25
0x1ea0	        0x488945f8	                mov qword [rbp - 8], rax	      1300	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_25
0x1ea4	      0x48837df800	                  cmp qword [rbp - 8], 0	      1301	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_16
0x1ea9	            0x750a	                           jne 0x4001ef5	      1301	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_16
0x1eab	      0xb800000000	                              mov eax, 0	      1302	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_16
0x1eb0	      0xe988000000	                           jmp 0x4001f7d	      1302	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_16
0x1eb5	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1303	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x1eb8	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	      1303	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x1ebb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1303	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x1ebf	          0x4189d0	                            mov r8d, edx	      1303	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x1ec2	      0xb901000000	                              mov ecx, 1	      1303	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x1ec7	      0xba00000000	                              mov edx, 0	      1303	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x1ecc	          0x4889c7	                            mov rdi, rax	      1303	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x1ecf	      0xe800000000	                          call 0x4001f14	      1303	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x1ed4	          0x8945e0	             mov dword [rbp - 0x20], eax	      1303	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_26
0x1ed7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1304	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_27
0x1edb	          0x4889c7	                            mov rdi, rax	      1304	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_27
0x1ede	      0xe800000000	                          call 0x4001f23	      1304	ops.c	FUNCTION_23	ELSE_4	FOR_1	CALL_27
0x1ee3	        0x837de000	               cmp dword [rbp - 0x20], 0	      1305	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_17
0x1ee7	            0x7507	                           jne 0x4001f30	      1305	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_17
0x1ee9	      0xb800000000	                              mov eax, 0	      1306	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_17
0x1eee	            0xeb4d	                           jmp 0x4001f7d	      1306	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_17
0x1ef0	        0x837dd800	               cmp dword [rbp - 0x28], 0	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x1ef4	            0x742a	                            je 0x4001f60	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x1ef6	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x1ef9	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x1efc	          0x4189d0	                            mov r8d, edx	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x1eff	      0xb901000000	                              mov ecx, 1	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x1f04	      0xba00000000	                              mov edx, 0	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x1f09	            0x89c6	                            mov esi, eax	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x1f0b	      0xbf00000000	                              mov edi, 0	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x1f10	      0xe800000000	                          call 0x4001f55	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x1f15	            0x85c0	                           test eax, eax	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x1f17	            0x7507	                           jne 0x4001f60	      1307	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18	CALL_28
0x1f19	      0xb800000000	                              mov eax, 0	      1309	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18
0x1f1e	            0xeb1d	                           jmp 0x4001f7d	      1309	ops.c	FUNCTION_23	ELSE_4	FOR_1	IF_18
0x1f20	      0x48836de801	               sub qword [rbp - 0x18], 1	      1289	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x1f25	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1289	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x1f2a	     0xf89f9feffff	                           jns 0x4001e69	      1289	ops.c	FUNCTION_23	ELSE_4	FOR_1
0x1f30	    0xc70500000000	               mov dword [0x04001f7a], 1	      1311	ops.c	FUNCTION_23	ELSE_4
0x1f3a	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1313	ops.c	FUNCTION_23
0x1f3d	              0xc9	                                   leave	      1314	ops.c	FUNCTION_23
0x1f3e	              0xc3	                                     ret	      1314	ops.c	FUNCTION_23
write_reg_contents	CALL,1:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,0	18
0xde88	              0x55	                                push rbp	      6948	ops.c	FUNCTION_85
0xde89	          0x4889e5	                            mov rbp, rsp	      6948	ops.c	FUNCTION_85
0xde8c	        0x4883ec20	                           sub rsp, 0x20	      6948	ops.c	FUNCTION_85
0xde90	          0x897dfc	                mov dword [rbp - 4], edi	      6948	ops.c	FUNCTION_85
0xde93	        0x488975f0	             mov qword [rbp - 0x10], rsi	      6948	ops.c	FUNCTION_85
0xde97	          0x8955f8	                mov dword [rbp - 8], edx	      6948	ops.c	FUNCTION_85
0xde9a	          0x894dec	             mov dword [rbp - 0x14], ecx	      6948	ops.c	FUNCTION_85
0xde9d	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	      6949	ops.c	FUNCTION_85	CALL_1
0xdea0	          0x8b55f8	                mov edx, dword [rbp - 8]	      6949	ops.c	FUNCTION_85	CALL_1
0xdea3	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      6949	ops.c	FUNCTION_85	CALL_1
0xdea7	          0x8b45fc	                mov eax, dword [rbp - 4]	      6949	ops.c	FUNCTION_85	CALL_1
0xdeaa	    0x41b900000000	                              mov r9d, 0	      6949	ops.c	FUNCTION_85	CALL_1
0xdeb0	    0x41b8ff000000	                           mov r8d, 0xff	      6949	ops.c	FUNCTION_85	CALL_1
0xdeb6	            0x89c7	                            mov edi, eax	      6949	ops.c	FUNCTION_85	CALL_1
0xdeb8	      0xe800000000	                          call 0x400defd	      6949	ops.c	FUNCTION_85	CALL_1
0xdebd	              0x90	                                     nop	      6950	ops.c	FUNCTION_85
0xdebe	              0xc9	                                   leave	      6950	ops.c	FUNCTION_85
0xdebf	              0xc3	                                     ret	      6950	ops.c	FUNCTION_85
get_expr_line	CALL,3:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,3	39
0x1377	              0x55	                                push rbp	       824	ops.c	FUNCTION_12
0x1378	          0x4889e5	                            mov rbp, rsp	       824	ops.c	FUNCTION_12
0x137b	        0x4883ec10	                           sub rsp, 0x10	       824	ops.c	FUNCTION_12
0x137f	    0x488b05000000	            mov rax, qword [0x040013c6] 	       829	ops.c	FUNCTION_12	IF_1
0x1386	          0x4885c0	                           test rax, rax	       829	ops.c	FUNCTION_12	IF_1
0x1389	            0x7507	                           jne 0x40013d2	       829	ops.c	FUNCTION_12	IF_1
0x138b	      0xb800000000	                              mov eax, 0	       830	ops.c	FUNCTION_12	IF_1
0x1390	            0xeb7a	                           jmp 0x400144c	       830	ops.c	FUNCTION_12	IF_1
0x1392	    0x488b05000000	            mov rax, qword [0x040013d9] 	       834	ops.c	FUNCTION_12	CALL_1
0x1399	          0x4889c7	                            mov rdi, rax	       834	ops.c	FUNCTION_12	CALL_1
0x139c	      0xe800000000	                          call 0x40013e1	       834	ops.c	FUNCTION_12	CALL_1
0x13a1	        0x488945f0	             mov qword [rbp - 0x10], rax	       834	ops.c	FUNCTION_12	CALL_1
0x13a5	      0x48837df000	               cmp qword [rbp - 0x10], 0	       835	ops.c	FUNCTION_12	IF_2
0x13aa	            0x7507	                           jne 0x40013f3	       835	ops.c	FUNCTION_12	IF_2
0x13ac	      0xb800000000	                              mov eax, 0	       836	ops.c	FUNCTION_12	IF_2
0x13b1	            0xeb59	                           jmp 0x400144c	       836	ops.c	FUNCTION_12	IF_2
0x13b3	    0x8b0500000000	            mov eax, dword [0x040013f9] 	       840	ops.c	FUNCTION_12	IF_3
0x13b9	          0x83f809	                              cmp eax, 9	       840	ops.c	FUNCTION_12	IF_3
0x13bc	            0x7e06	                           jle 0x4001404	       840	ops.c	FUNCTION_12	IF_3
0x13be	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       841	ops.c	FUNCTION_12	IF_3
0x13c2	            0xeb48	                           jmp 0x400144c	       841	ops.c	FUNCTION_12	IF_3
0x13c4	    0x8b0500000000	            mov eax, dword [0x0400140a] 	       843	ops.c	FUNCTION_12
0x13ca	          0x83c001	                              add eax, 1	       843	ops.c	FUNCTION_12
0x13cd	    0x890500000000	            mov dword [0x04001413], eax 	       843	ops.c	FUNCTION_12
0x13d3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       844	ops.c	FUNCTION_12	CALL_2
0x13d7	      0xba01000000	                              mov edx, 1	       844	ops.c	FUNCTION_12	CALL_2
0x13dc	      0xbe00000000	                              mov esi, 0	       844	ops.c	FUNCTION_12	CALL_2
0x13e1	          0x4889c7	                            mov rdi, rax	       844	ops.c	FUNCTION_12	CALL_2
0x13e4	      0xe800000000	                          call 0x4001429	       844	ops.c	FUNCTION_12	CALL_2
0x13e9	        0x488945f8	                mov qword [rbp - 8], rax	       844	ops.c	FUNCTION_12	CALL_2
0x13ed	    0x8b0500000000	            mov eax, dword [0x04001433] 	       845	ops.c	FUNCTION_12
0x13f3	          0x83e801	                              sub eax, 1	       845	ops.c	FUNCTION_12
0x13f6	    0x890500000000	            mov dword [0x0400143c], eax 	       845	ops.c	FUNCTION_12
0x13fc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       846	ops.c	FUNCTION_12	CALL_3
0x1400	          0x4889c7	                            mov rdi, rax	       846	ops.c	FUNCTION_12	CALL_3
0x1403	      0xe800000000	                          call 0x4001448	       846	ops.c	FUNCTION_12	CALL_3
0x1408	        0x488b45f8	                mov rax, qword [rbp - 8]	       847	ops.c	FUNCTION_12
0x140c	              0xc9	                                   leave	       848	ops.c	FUNCTION_12
0x140d	              0xc3	                                     ret	       848	ops.c	FUNCTION_12
free_yank	CALL,5:FOR,1:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,3	31
0x59d6	              0x55	                                push rbp	      2966	ops.c	FUNCTION_43
0x59d7	          0x4889e5	                            mov rbp, rsp	      2966	ops.c	FUNCTION_43
0x59da	        0x4883ec20	                           sub rsp, 0x20	      2966	ops.c	FUNCTION_43
0x59de	        0x48897de8	             mov qword [rbp - 0x18], rdi	      2966	ops.c	FUNCTION_43
0x59e2	    0x488b05000000	            mov rax, qword [0x04005a29] 	      2967	ops.c	FUNCTION_43	IF_1
0x59e9	          0x488b00	                    mov rax, qword [rax]	      2967	ops.c	FUNCTION_43	IF_1
0x59ec	          0x4885c0	                           test rax, rax	      2967	ops.c	FUNCTION_43	IF_1
0x59ef	            0x7456	                            je 0x4005a87	      2967	ops.c	FUNCTION_43	IF_1
0x59f1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2971	ops.c	FUNCTION_43	IF_1	FOR_1
0x59f5	        0x488945f8	                mov qword [rbp - 8], rax	      2971	ops.c	FUNCTION_43	IF_1	FOR_1
0x59f9	            0xeb20	                           jmp 0x4005a5b	      2971	ops.c	FUNCTION_43	IF_1	FOR_1
0x59fb	    0x488b05000000	            mov rax, qword [0x04005a42] 	      2987	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x5a02	          0x488b00	                    mov rax, qword [rax]	      2987	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x5a05	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2987	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x5a09	        0x48c1e203	                              shl rdx, 3	      2987	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x5a0d	          0x4801d0	                            add rax, rdx	      2987	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x5a10	          0x488b00	                    mov rax, qword [rax]	      2987	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x5a13	          0x4889c7	                            mov rdi, rax	      2987	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x5a16	      0xe800000000	                          call 0x4005a5b	      2987	ops.c	FUNCTION_43	IF_1	FOR_1	CALL_3
0x5a1b	      0x48836df801	                  sub qword [rbp - 8], 1	      2971	ops.c	FUNCTION_43	IF_1	FOR_1
0x5a20	      0x48837df800	                  cmp qword [rbp - 8], 0	      2971	ops.c	FUNCTION_43	IF_1	FOR_1
0x5a25	            0x79d4	                           jns 0x4005a3b	      2971	ops.c	FUNCTION_43	IF_1	FOR_1
0x5a27	    0x488b05000000	            mov rax, qword [0x04005a6e] 	      2989	ops.c	FUNCTION_43	IF_1	CALL_4
0x5a2e	          0x488b00	                    mov rax, qword [rax]	      2989	ops.c	FUNCTION_43	IF_1	CALL_4
0x5a31	          0x4889c7	                            mov rdi, rax	      2989	ops.c	FUNCTION_43	IF_1	CALL_4
0x5a34	      0xe800000000	                          call 0x4005a79	      2989	ops.c	FUNCTION_43	IF_1	CALL_4
0x5a39	    0x488b05000000	            mov rax, qword [0x04005a80] 	      2990	ops.c	FUNCTION_43	IF_1
0x5a40	    0x48c700000000	                      mov qword [rax], 0	      2990	ops.c	FUNCTION_43	IF_1
0x5a47	              0x90	                                     nop	      2996	ops.c	FUNCTION_43
0x5a48	              0xc9	                                   leave	      2996	ops.c	FUNCTION_43
0x5a49	              0xc3	                                     ret	      2996	ops.c	FUNCTION_43
init_write_reg	CALL,4:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,2	38
0xddcc	              0x55	                                push rbp	      6899	ops.c	FUNCTION_83
0xddcd	          0x4889e5	                            mov rbp, rsp	      6899	ops.c	FUNCTION_83
0xddd0	        0x4883ec20	                           sub rsp, 0x20	      6899	ops.c	FUNCTION_83
0xddd4	          0x897dfc	                mov dword [rbp - 4], edi	      6899	ops.c	FUNCTION_83
0xddd7	        0x488975f0	             mov qword [rbp - 0x10], rsi	      6899	ops.c	FUNCTION_83
0xdddb	        0x488955e8	             mov qword [rbp - 0x18], rdx	      6899	ops.c	FUNCTION_83
0xdddf	          0x894df8	                mov dword [rbp - 8], ecx	      6899	ops.c	FUNCTION_83
0xdde2	        0x4c8945e0	              mov qword [rbp - 0x20], r8	      6899	ops.c	FUNCTION_83
0xdde6	          0x8b45fc	                mov eax, dword [rbp - 4]	      6900	ops.c	FUNCTION_83	IF_1	CALL_1
0xdde9	      0xbe01000000	                              mov esi, 1	      6900	ops.c	FUNCTION_83	IF_1	CALL_1
0xddee	            0x89c7	                            mov edi, eax	      6900	ops.c	FUNCTION_83	IF_1	CALL_1
0xddf0	      0xe800000000	                          call 0x400de35	      6900	ops.c	FUNCTION_83	IF_1	CALL_1
0xddf5	            0x85c0	                           test eax, eax	      6900	ops.c	FUNCTION_83	IF_1	CALL_1
0xddf7	            0x7511	                           jne 0x400de4a	      6900	ops.c	FUNCTION_83	IF_1	CALL_1
0xddf9	          0x8b45fc	                mov eax, dword [rbp - 4]	      6902	ops.c	FUNCTION_83	IF_1	CALL_2
0xddfc	            0x89c7	                            mov edi, eax	      6902	ops.c	FUNCTION_83	IF_1	CALL_2
0xddfe	      0xe800000000	                          call 0x400de43	      6902	ops.c	FUNCTION_83	IF_1	CALL_2
0xde03	      0xb800000000	                              mov eax, 0	      6903	ops.c	FUNCTION_83	IF_1
0xde08	            0xeb45	                           jmp 0x400de8f	      6903	ops.c	FUNCTION_83	IF_1
0xde0a	    0x488b15000000	            mov rdx, qword [0x0400de51] 	      6907	ops.c	FUNCTION_83
0xde11	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6907	ops.c	FUNCTION_83
0xde15	          0x488910	                    mov qword [rax], rdx	      6907	ops.c	FUNCTION_83
0xde18	    0x488b15000000	            mov rdx, qword [0x0400de5f] 	      6908	ops.c	FUNCTION_83
0xde1f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6908	ops.c	FUNCTION_83
0xde23	          0x488910	                    mov qword [rax], rdx	      6908	ops.c	FUNCTION_83
0xde26	          0x8b45fc	                mov eax, dword [rbp - 4]	      6910	ops.c	FUNCTION_83	CALL_3
0xde29	      0xbe01000000	                              mov esi, 1	      6910	ops.c	FUNCTION_83	CALL_3
0xde2e	            0x89c7	                            mov edi, eax	      6910	ops.c	FUNCTION_83	CALL_3
0xde30	      0xe800000000	                          call 0x400de75	      6910	ops.c	FUNCTION_83	CALL_3
0xde35	    0x8b0500000000	            mov eax, dword [0x0400de7b] 	      6911	ops.c	FUNCTION_83	IF_2
0xde3b	            0x85c0	                           test eax, eax	      6911	ops.c	FUNCTION_83	IF_2
0xde3d	            0x750b	                           jne 0x400de8a	      6911	ops.c	FUNCTION_83	IF_2
0xde3f	        0x837df800	                  cmp dword [rbp - 8], 0	      6911	ops.c	FUNCTION_83	IF_2
0xde43	            0x7505	                           jne 0x400de8a	      6911	ops.c	FUNCTION_83	IF_2
0xde45	      0xe8007cffff	                  call sym.free_yank_all	      6912	ops.c	FUNCTION_83	CALL_4
0xde4a	      0xb801000000	                              mov eax, 1	      6913	ops.c	FUNCTION_83
0xde4f	              0xc9	                                   leave	      6914	ops.c	FUNCTION_83
0xde50	              0xc3	                                     ret	      6914	ops.c	FUNCTION_83
get_register	CALL,10:FOR,1:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,2:IF,8	105
0x160b	              0x55	                                push rbp	       979	ops.c	FUNCTION_17
0x160c	          0x4889e5	                            mov rbp, rsp	       979	ops.c	FUNCTION_17
0x160f	              0x53	                                push rbx	       979	ops.c	FUNCTION_17
0x1610	        0x4883ec28	                           sub rsp, 0x28	       979	ops.c	FUNCTION_17
0x1614	          0x897ddc	             mov dword [rbp - 0x24], edi	       979	ops.c	FUNCTION_17
0x1617	          0x8975d8	             mov dword [rbp - 0x28], esi	       979	ops.c	FUNCTION_17
0x161a	        0x837ddc2a	           cmp dword [rbp - 0x24], 0x2a 	       986	ops.c	FUNCTION_17	IF_1
0x161e	            0x7527	                           jne 0x4001687	       986	ops.c	FUNCTION_17	IF_1
0x1620	    0x8b0500000000	            mov eax, dword [0x04001666] 	       986	ops.c	FUNCTION_17	IF_1
0x1626	            0x85c0	                           test eax, eax	       986	ops.c	FUNCTION_17	IF_1
0x1628	            0x741d	                            je 0x4001687	       986	ops.c	FUNCTION_17	IF_1
0x162a	      0xe800000000	                          call 0x400166f	       988	ops.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x162f	            0x85c0	                           test eax, eax	       988	ops.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x1631	            0x740a	                            je 0x400167d	       988	ops.c	FUNCTION_17	IF_1	IF_2	CALL_1
0x1633	      0xbf00000000	                              mov edi, 0	       989	ops.c	FUNCTION_17	IF_1	CALL_2
0x1638	      0xe800000000	                          call 0x400167d	       989	ops.c	FUNCTION_17	IF_1	CALL_2
0x163d	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       990	ops.c	FUNCTION_17	IF_1	CALL_3
0x1640	            0x89c7	                            mov edi, eax	       990	ops.c	FUNCTION_17	IF_1	CALL_3
0x1642	      0xe800000000	                          call 0x4001687	       990	ops.c	FUNCTION_17	IF_1	CALL_3
0x1647	        0x837ddc2b	           cmp dword [rbp - 0x24], 0x2b 	       992	ops.c	FUNCTION_17	IF_3
0x164b	            0x7527	                           jne 0x40016b4	       992	ops.c	FUNCTION_17	IF_3
0x164d	    0x8b0500000000	            mov eax, dword [0x04001693] 	       992	ops.c	FUNCTION_17	IF_3
0x1653	            0x85c0	                           test eax, eax	       992	ops.c	FUNCTION_17	IF_3
0x1655	            0x741d	                            je 0x40016b4	       992	ops.c	FUNCTION_17	IF_3
0x1657	      0xe800000000	                          call 0x400169c	       994	ops.c	FUNCTION_17	IF_3	IF_4	CALL_4
0x165c	            0x85c0	                           test eax, eax	       994	ops.c	FUNCTION_17	IF_3	IF_4	CALL_4
0x165e	            0x740a	                            je 0x40016aa	       994	ops.c	FUNCTION_17	IF_3	IF_4	CALL_4
0x1660	      0xbf00000000	                              mov edi, 0	       995	ops.c	FUNCTION_17	IF_3	CALL_5
0x1665	      0xe800000000	                          call 0x40016aa	       995	ops.c	FUNCTION_17	IF_3	CALL_5
0x166a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       996	ops.c	FUNCTION_17	IF_3	CALL_6
0x166d	            0x89c7	                            mov edi, eax	       996	ops.c	FUNCTION_17	IF_3	CALL_6
0x166f	      0xe800000000	                          call 0x40016b4	       996	ops.c	FUNCTION_17	IF_3	CALL_6
0x1674	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1000	ops.c	FUNCTION_17	CALL_7
0x1677	      0xbe00000000	                              mov esi, 0	      1000	ops.c	FUNCTION_17	CALL_7
0x167c	            0x89c7	                            mov edi, eax	      1000	ops.c	FUNCTION_17	CALL_7
0x167e	      0xe800000000	                          call 0x40016c3	      1000	ops.c	FUNCTION_17	CALL_7
0x1683	      0xbf20000000	                           mov edi, 0x20	      1001	ops.c	FUNCTION_17	CALL_8
0x1688	      0xe800000000	                          call 0x40016cd	      1001	ops.c	FUNCTION_17	CALL_8
0x168d	        0x488945e8	             mov qword [rbp - 0x18], rax	      1001	ops.c	FUNCTION_17	CALL_8
0x1691	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1002	ops.c	FUNCTION_17	IF_5
0x1696	     0xf84df000000	                            je 0x40017bb	      1002	ops.c	FUNCTION_17	IF_5
0x169c	    0x488b15000000	            mov rdx, qword [0x040016e3] 	      1004	ops.c	FUNCTION_17	IF_5
0x16a3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1004	ops.c	FUNCTION_17	IF_5
0x16a7	          0x488b0a	                    mov rcx, qword [rdx]	      1004	ops.c	FUNCTION_17	IF_5
0x16aa	          0x488908	                    mov qword [rax], rcx	      1004	ops.c	FUNCTION_17	IF_5
0x16ad	        0x488b4a08	                mov rcx, qword [rdx + 8]	      1004	ops.c	FUNCTION_17	IF_5
0x16b1	        0x48894808	                mov qword [rax + 8], rcx	      1004	ops.c	FUNCTION_17	IF_5
0x16b5	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      1004	ops.c	FUNCTION_17	IF_5
0x16b9	        0x48894810	             mov qword [rax + 0x10], rcx	      1004	ops.c	FUNCTION_17	IF_5
0x16bd	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	      1004	ops.c	FUNCTION_17	IF_5
0x16c1	        0x48895018	             mov qword [rax + 0x18], rdx	      1004	ops.c	FUNCTION_17	IF_5
0x16c5	        0x837dd800	               cmp dword [rbp - 0x28], 0	      1005	ops.c	FUNCTION_17	IF_5	IF_6
0x16c9	     0xf849e000000	                            je 0x40017ad	      1005	ops.c	FUNCTION_17	IF_5	IF_6
0x16cf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1008	ops.c	FUNCTION_17	IF_5	IF_6	IF_7
0x16d3	        0x488b4008	                mov rax, qword [rax + 8]	      1008	ops.c	FUNCTION_17	IF_5	IF_6	IF_7
0x16d7	          0x4885c0	                           test rax, rax	      1008	ops.c	FUNCTION_17	IF_5	IF_6	IF_7
0x16da	            0x750d	                           jne 0x4001729	      1008	ops.c	FUNCTION_17	IF_5	IF_6	IF_7
0x16dc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1009	ops.c	FUNCTION_17	IF_5	IF_6	IF_7
0x16e0	    0x48c700000000	                      mov qword [rax], 0	      1009	ops.c	FUNCTION_17	IF_5	IF_6	IF_7
0x16e7	            0xeb1c	                           jmp 0x4001745	      1009	ops.c	FUNCTION_17	IF_5	IF_6	IF_7
0x16e9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1012	ops.c	FUNCTION_17	IF_5	IF_6	ELSE_1
0x16ed	        0x488b4008	                mov rax, qword [rax + 8]	      1012	ops.c	FUNCTION_17	IF_5	IF_6	ELSE_1
0x16f1	          0xc1e003	                              shl eax, 3	      1011	ops.c	FUNCTION_17	IF_5	IF_6	ELSE_1	CALL_9
0x16f4	            0x89c7	                            mov edi, eax	      1011	ops.c	FUNCTION_17	IF_5	IF_6	ELSE_1	CALL_9
0x16f6	      0xe800000000	                          call 0x400173b	      1011	ops.c	FUNCTION_17	IF_5	IF_6	ELSE_1	CALL_9
0x16fb	          0x4889c2	                            mov rdx, rax	      1011	ops.c	FUNCTION_17	IF_5	IF_6	ELSE_1	CALL_9
0x16fe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1011	ops.c	FUNCTION_17	IF_5	IF_6	ELSE_1	CALL_9
0x1702	          0x488910	                    mov qword [rax], rdx	      1011	ops.c	FUNCTION_17	IF_5	IF_6	ELSE_1	CALL_9
0x1705	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1013	ops.c	FUNCTION_17	IF_5	IF_6	IF_8
0x1709	          0x488b00	                    mov rax, qword [rax]	      1013	ops.c	FUNCTION_17	IF_5	IF_6	IF_8
0x170c	          0x4885c0	                           test rax, rax	      1013	ops.c	FUNCTION_17	IF_5	IF_6	IF_8
0x170f	            0x746a	                            je 0x40017bb	      1013	ops.c	FUNCTION_17	IF_5	IF_6	IF_8
0x1711	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1015	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x1718	            0xeb3e	                           jmp 0x4001798	      1015	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x171a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1016	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x171e	          0x488b00	                    mov rax, qword [rax]	      1016	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x1721	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1016	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x1724	          0x4863d2	                         movsxd rdx, edx	      1016	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x1727	        0x48c1e203	                              shl rdx, 3	      1016	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x172b	        0x488d1c10	                    lea rbx, [rax + rdx]	      1016	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x172f	    0x488b05000000	            mov rax, qword [0x04001776] 	      1016	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x1736	          0x488b00	                    mov rax, qword [rax]	      1016	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x1739	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      1016	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x173c	          0x4863d2	                         movsxd rdx, edx	      1016	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x173f	        0x48c1e203	                              shl rdx, 3	      1016	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x1743	          0x4801d0	                            add rax, rdx	      1016	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x1746	          0x488b00	                    mov rax, qword [rax]	      1016	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x1749	          0x4889c7	                            mov rdi, rax	      1016	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x174c	      0xe800000000	                          call 0x4001791	      1016	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x1751	          0x488903	                    mov qword [rbx], rax	      1016	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	CALL_10
0x1754	        0x8345e401	               add dword [rbp - 0x1c], 1	      1015	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x1758	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1015	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x175b	          0x4863d0	                         movsxd rdx, eax	      1015	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x175e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1015	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x1762	        0x488b4008	                mov rax, qword [rax + 8]	      1015	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x1766	          0x4839c2	                            cmp rdx, rax	      1015	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x1769	            0x7caf	                            jl 0x400175a	      1015	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x176b	            0xeb0e	                           jmp 0x40017bb	      1015	ops.c	FUNCTION_17	IF_5	IF_6	IF_8	FOR_1
0x176d	    0x488b05000000	            mov rax, qword [0x040017b4] 	      1020	ops.c	FUNCTION_17	IF_5	ELSE_2
0x1774	    0x48c700000000	                      mov qword [rax], 0	      1020	ops.c	FUNCTION_17	IF_5	ELSE_2
0x177b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1022	ops.c	FUNCTION_17
0x177f	        0x4883c428	                           add rsp, 0x28	      1023	ops.c	FUNCTION_17
0x1783	              0x5b	                                 pop rbx	      1023	ops.c	FUNCTION_17
0x1784	              0x5d	                                 pop rbp	      1023	ops.c	FUNCTION_17
0x1785	              0xc3	                                     ret	      1023	ops.c	FUNCTION_17
clip_free_selection	CALL,1:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,1:IF,1	19
0xd32d	              0x55	                                push rbp	      6508	ops.c	FUNCTION_74
0xd32e	          0x4889e5	                            mov rbp, rsp	      6508	ops.c	FUNCTION_74
0xd331	        0x4883ec20	                           sub rsp, 0x20	      6508	ops.c	FUNCTION_74
0xd335	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6508	ops.c	FUNCTION_74
0xd339	    0x488b05000000	            mov rax, qword [0x0400d380] 	      6509	ops.c	FUNCTION_74
0xd340	        0x488945f8	                mov qword [rbp - 8], rax	      6509	ops.c	FUNCTION_74
0xd344	    0x48817de80000	               cmp qword [rbp - 0x18], 0	      6511	ops.c	FUNCTION_74	IF_1
0xd34c	            0x750d	                           jne 0x400d39b	      6511	ops.c	FUNCTION_74	IF_1
0xd34e	    0x48c705000000	               mov qword [0x0400d399], 0	      6512	ops.c	FUNCTION_74	IF_1
0xd359	            0xeb0b	                           jmp 0x400d3a6	      6512	ops.c	FUNCTION_74	IF_1
0xd35b	    0x48c705000000	               mov qword [0x0400d3a6], 0	      6514	ops.c	FUNCTION_74	ELSE_1
0xd366	      0xe8df86ffff	                  call sym.free_yank_all	      6515	ops.c	FUNCTION_74	CALL_1
0xd36b	    0x488b05000000	            mov rax, qword [0x0400d3b2] 	      6516	ops.c	FUNCTION_74
0xd372	    0x48c740080000	                  mov qword [rax + 8], 0	      6516	ops.c	FUNCTION_74
0xd37a	        0x488b45f8	                mov rax, qword [rbp - 8]	      6517	ops.c	FUNCTION_74
0xd37e	    0x488905000000	            mov qword [0x0400d3c5], rax 	      6517	ops.c	FUNCTION_74
0xd385	              0x90	                                     nop	      6518	ops.c	FUNCTION_74
0xd386	              0xc9	                                   leave	      6518	ops.c	FUNCTION_74
0xd387	              0xc3	                                     ret	      6518	ops.c	FUNCTION_74
str_to_reg	CALL,11:FOR,6:SWITCH,0:functions,0:WHILE,1:DO,0:ELSE,5:IF,19	349
0xe213	              0x55	                                push rbp	      7087	ops.c	FUNCTION_88
0xe214	          0x4889e5	                            mov rbp, rsp	      7087	ops.c	FUNCTION_88
0xe217	              0x53	                                push rbx	      7087	ops.c	FUNCTION_88
0xe218	    0x4881ec880000	                           sub rsp, 0x88	      7087	ops.c	FUNCTION_88
0xe21f	        0x48897d98	             mov qword [rbp - 0x68], rdi	      7087	ops.c	FUNCTION_88
0xe223	          0x897594	             mov dword [rbp - 0x6c], esi	      7087	ops.c	FUNCTION_88
0xe226	        0x48895588	             mov qword [rbp - 0x78], rdx	      7087	ops.c	FUNCTION_88
0xe22a	        0x48894d80	             mov qword [rbp - 0x80], rcx	      7087	ops.c	FUNCTION_88
0xe22e	    0x4c898578ffff	              mov qword [rbp - 0x88], r8	      7087	ops.c	FUNCTION_88
0xe235	        0x44894d90	             mov dword [rbp - 0x70], r9d	      7087	ops.c	FUNCTION_88
0xe239	    0xc745b8000000	               mov dword [rbp - 0x48], 0	      7094	ops.c	FUNCTION_88
0xe240	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      7095	ops.c	FUNCTION_88
0xe247	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7101	ops.c	FUNCTION_88	IF_1
0xe24b	          0x488b00	                    mov rax, qword [rax]	      7101	ops.c	FUNCTION_88	IF_1
0xe24e	          0x4885c0	                           test rax, rax	      7101	ops.c	FUNCTION_88	IF_1
0xe251	            0x750c	                           jne 0x400e29f	      7101	ops.c	FUNCTION_88	IF_1
0xe253	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7102	ops.c	FUNCTION_88	IF_1
0xe257	    0x48c740080000	                  mov qword [rax + 8], 0	      7102	ops.c	FUNCTION_88	IF_1
0xe25f	    0x817d94ff0000	           cmp dword [rbp - 0x6c], 0xff 	      7104	ops.c	FUNCTION_88	IF_2
0xe266	            0x754a	                           jne 0x400e2f2	      7104	ops.c	FUNCTION_88	IF_2
0xe268	        0x837d9000	               cmp dword [rbp - 0x70], 0	      7107	ops.c	FUNCTION_88	IF_2
0xe26c	            0x7533	                           jne 0x400e2e1	      7107	ops.c	FUNCTION_88	IF_2
0xe26e	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      7107	ops.c	FUNCTION_88	IF_2
0xe273	            0x7e33	                           jle 0x400e2e8	      7107	ops.c	FUNCTION_88	IF_2
0xe275	        0x488b4580	             mov rax, qword [rbp - 0x80]	      7105	ops.c	FUNCTION_88	IF_2
0xe279	        0x488d50ff	                      lea rdx, [rax - 1]	      7105	ops.c	FUNCTION_88	IF_2
0xe27d	        0x488b4588	             mov rax, qword [rbp - 0x78]	      7105	ops.c	FUNCTION_88	IF_2
0xe281	          0x4801d0	                            add rax, rdx	      7105	ops.c	FUNCTION_88	IF_2
0xe284	           0xfb600	                   movzx eax, byte [rax]	      7105	ops.c	FUNCTION_88	IF_2
0xe287	            0x3c0a	                             cmp al, 0xa	      7105	ops.c	FUNCTION_88	IF_2
0xe289	            0x7416	                            je 0x400e2e1	      7105	ops.c	FUNCTION_88	IF_2
0xe28b	        0x488b4580	             mov rax, qword [rbp - 0x80]	      7106	ops.c	FUNCTION_88	IF_2
0xe28f	        0x488d50ff	                      lea rdx, [rax - 1]	      7106	ops.c	FUNCTION_88	IF_2
0xe293	        0x488b4588	             mov rax, qword [rbp - 0x78]	      7106	ops.c	FUNCTION_88	IF_2
0xe297	          0x4801d0	                            add rax, rdx	      7106	ops.c	FUNCTION_88	IF_2
0xe29a	           0xfb600	                   movzx eax, byte [rax]	      7106	ops.c	FUNCTION_88	IF_2
0xe29d	            0x3c0d	                             cmp al, 0xd	      7106	ops.c	FUNCTION_88	IF_2
0xe29f	            0x7507	                           jne 0x400e2e8	      7106	ops.c	FUNCTION_88	IF_2
0xe2a1	      0xb801000000	                              mov eax, 1	      7107	ops.c	FUNCTION_88	IF_2
0xe2a6	            0xeb05	                           jmp 0x400e2ed	      7107	ops.c	FUNCTION_88	IF_2
0xe2a8	      0xb800000000	                              mov eax, 0	      7107	ops.c	FUNCTION_88	IF_2
0xe2ad	          0x8945a8	             mov dword [rbp - 0x58], eax	      7105	ops.c	FUNCTION_88	IF_2
0xe2b0	            0xeb06	                           jmp 0x400e2f8	      7105	ops.c	FUNCTION_88	IF_2
0xe2b2	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      7109	ops.c	FUNCTION_88	ELSE_1
0xe2b5	          0x8945a8	             mov dword [rbp - 0x58], eax	      7109	ops.c	FUNCTION_88	ELSE_1
0xe2b8	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      7114	ops.c	FUNCTION_88	ELSE_1
0xe2bf	        0x837d9000	               cmp dword [rbp - 0x70], 0	      7115	ops.c	FUNCTION_88	ELSE_1	IF_3
0xe2c3	            0x7424	                            je 0x400e329	      7115	ops.c	FUNCTION_88	ELSE_1	IF_3
0xe2c5	        0x488b4588	             mov rax, qword [rbp - 0x78]	      7117	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0xe2c9	        0x488945d8	             mov qword [rbp - 0x28], rax	      7117	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0xe2cd	            0xeb09	                           jmp 0x400e318	      7117	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0xe2cf	        0x8345b401	               add dword [rbp - 0x4c], 1	      7118	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0xe2d3	      0x488345d808	               add qword [rbp - 0x28], 8	      7117	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0xe2d8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7117	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0xe2dc	          0x488b00	                    mov rax, qword [rax]	      7117	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0xe2df	          0x4885c0	                           test rax, rax	      7117	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0xe2e2	            0x75eb	                           jne 0x400e30f	      7117	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0xe2e4	      0xe981000000	                           jmp 0x400e3aa	      7117	ops.c	FUNCTION_88	ELSE_1	IF_3	FOR_1
0xe2e9	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      7122	ops.c	FUNCTION_88	ELSE_2	FOR_2
0xe2f1	            0xeb1b	                           jmp 0x400e34e	      7122	ops.c	FUNCTION_88	ELSE_2	FOR_2
0xe2f3	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      7123	ops.c	FUNCTION_88	ELSE_2	FOR_2	IF_4
0xe2f7	        0x488b4588	             mov rax, qword [rbp - 0x78]	      7123	ops.c	FUNCTION_88	ELSE_2	FOR_2	IF_4
0xe2fb	          0x4801d0	                            add rax, rdx	      7123	ops.c	FUNCTION_88	ELSE_2	FOR_2	IF_4
0xe2fe	           0xfb600	                   movzx eax, byte [rax]	      7123	ops.c	FUNCTION_88	ELSE_2	FOR_2	IF_4
0xe301	            0x3c0a	                             cmp al, 0xa	      7123	ops.c	FUNCTION_88	ELSE_2	FOR_2	IF_4
0xe303	            0x7504	                           jne 0x400e349	      7123	ops.c	FUNCTION_88	ELSE_2	FOR_2	IF_4
0xe305	        0x8345b401	               add dword [rbp - 0x4c], 1	      7124	ops.c	FUNCTION_88	ELSE_2	FOR_2	IF_4
0xe309	      0x488345c801	               add qword [rbp - 0x38], 1	      7122	ops.c	FUNCTION_88	ELSE_2	FOR_2
0xe30e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7122	ops.c	FUNCTION_88	ELSE_2	FOR_2
0xe312	        0x483b4580	             cmp rax, qword [rbp - 0x80]	      7122	ops.c	FUNCTION_88	ELSE_2	FOR_2
0xe316	            0x7cdb	                            jl 0x400e333	      7122	ops.c	FUNCTION_88	ELSE_2	FOR_2
0xe318	        0x837da800	               cmp dword [rbp - 0x58], 0	      7125	ops.c	FUNCTION_88	ELSE_2	IF_5
0xe31c	            0x741d	                            je 0x400e37b	      7125	ops.c	FUNCTION_88	ELSE_2	IF_5
0xe31e	      0x48837d8000	               cmp qword [rbp - 0x80], 0	      7125	ops.c	FUNCTION_88	ELSE_2	IF_5
0xe323	            0x7416	                            je 0x400e37b	      7125	ops.c	FUNCTION_88	ELSE_2	IF_5
0xe325	        0x488b4580	             mov rax, qword [rbp - 0x80]	      7125	ops.c	FUNCTION_88	ELSE_2	IF_5
0xe329	        0x488d50ff	                      lea rdx, [rax - 1]	      7125	ops.c	FUNCTION_88	ELSE_2	IF_5
0xe32d	        0x488b4588	             mov rax, qword [rbp - 0x78]	      7125	ops.c	FUNCTION_88	ELSE_2	IF_5
0xe331	          0x4801d0	                            add rax, rdx	      7125	ops.c	FUNCTION_88	ELSE_2	IF_5
0xe334	           0xfb600	                   movzx eax, byte [rax]	      7125	ops.c	FUNCTION_88	ELSE_2	IF_5
0xe337	            0x3c0a	                             cmp al, 0xa	      7125	ops.c	FUNCTION_88	ELSE_2	IF_5
0xe339	            0x740b	                            je 0x400e386	      7125	ops.c	FUNCTION_88	ELSE_2	IF_5
0xe33b	    0xc745b8010000	               mov dword [rbp - 0x48], 1	      7127	ops.c	FUNCTION_88	ELSE_2	IF_5
0xe342	        0x8345b401	               add dword [rbp - 0x4c], 1	      7128	ops.c	FUNCTION_88	ELSE_2	IF_5
0xe346	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7130	ops.c	FUNCTION_88	ELSE_2	IF_6
0xe34a	        0x488b4008	                mov rax, qword [rax + 8]	      7130	ops.c	FUNCTION_88	ELSE_2	IF_6
0xe34e	          0x4885c0	                           test rax, rax	      7130	ops.c	FUNCTION_88	ELSE_2	IF_6
0xe351	            0x7e17	                           jle 0x400e3aa	      7130	ops.c	FUNCTION_88	ELSE_2	IF_6
0xe353	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7130	ops.c	FUNCTION_88	ELSE_2	IF_6
0xe357	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      7130	ops.c	FUNCTION_88	ELSE_2	IF_6
0xe35b	            0x84c0	                             test al, al	      7130	ops.c	FUNCTION_88	ELSE_2	IF_6
0xe35d	            0x750b	                           jne 0x400e3aa	      7130	ops.c	FUNCTION_88	ELSE_2	IF_6
0xe35f	    0xc745bc010000	               mov dword [rbp - 0x44], 1	      7132	ops.c	FUNCTION_88	ELSE_2	IF_6
0xe366	        0x836db401	               sub dword [rbp - 0x4c], 1	      7133	ops.c	FUNCTION_88	ELSE_2	IF_6
0xe36a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7138	ops.c	FUNCTION_88	IF_7
0xe36e	        0x488b5008	                mov rdx, qword [rax + 8]	      7138	ops.c	FUNCTION_88	IF_7
0xe372	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      7138	ops.c	FUNCTION_88	IF_7
0xe375	            0x4898	                                    cdqe	      7138	ops.c	FUNCTION_88	IF_7
0xe377	          0x4801d0	                            add rax, rdx	      7138	ops.c	FUNCTION_88	IF_7
0xe37a	          0x4885c0	                           test rax, rax	      7138	ops.c	FUNCTION_88	IF_7
0xe37d	            0x751f	                           jne 0x400e3de	      7138	ops.c	FUNCTION_88	IF_7
0xe37f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7140	ops.c	FUNCTION_88	IF_7	CALL_1
0xe383	          0x488b00	                    mov rax, qword [rax]	      7140	ops.c	FUNCTION_88	IF_7	CALL_1
0xe386	          0x4889c7	                            mov rdi, rax	      7140	ops.c	FUNCTION_88	IF_7	CALL_1
0xe389	      0xe800000000	                          call 0x400e3ce	      7140	ops.c	FUNCTION_88	IF_7	CALL_1
0xe38e	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7141	ops.c	FUNCTION_88	IF_7
0xe392	    0x48c700000000	                      mov qword [rax], 0	      7141	ops.c	FUNCTION_88	IF_7
0xe399	      0xe946030000	                           jmp 0x400e724	      7142	ops.c	FUNCTION_88	IF_7
0xe39e	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7149	ops.c	FUNCTION_88	CALL_2
0xe3a2	        0x488b5008	                mov rdx, qword [rax + 8]	      7149	ops.c	FUNCTION_88	CALL_2
0xe3a6	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      7149	ops.c	FUNCTION_88	CALL_2
0xe3a9	            0x4898	                                    cdqe	      7149	ops.c	FUNCTION_88	CALL_2
0xe3ab	          0x4801d0	                            add rax, rdx	      7149	ops.c	FUNCTION_88	CALL_2
0xe3ae	        0x48c1e003	                              shl rax, 3	      7149	ops.c	FUNCTION_88	CALL_2
0xe3b2	      0xbe01000000	                              mov esi, 1	      7149	ops.c	FUNCTION_88	CALL_2
0xe3b7	          0x4889c7	                            mov rdi, rax	      7149	ops.c	FUNCTION_88	CALL_2
0xe3ba	      0xe800000000	                          call 0x400e3ff	      7149	ops.c	FUNCTION_88	CALL_2
0xe3bf	        0x488945e8	             mov qword [rbp - 0x18], rax	      7149	ops.c	FUNCTION_88	CALL_2
0xe3c3	      0x48837de800	               cmp qword [rbp - 0x18], 0	      7151	ops.c	FUNCTION_88	IF_8
0xe3c8	     0xf8415030000	                            je 0x400e723	      7151	ops.c	FUNCTION_88	IF_8
0xe3ce	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      7153	ops.c	FUNCTION_88	FOR_3
0xe3d5	            0xeb32	                           jmp 0x400e449	      7153	ops.c	FUNCTION_88	FOR_3
0xe3d7	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7154	ops.c	FUNCTION_88	FOR_3
0xe3da	            0x4898	                                    cdqe	      7154	ops.c	FUNCTION_88	FOR_3
0xe3dc	    0x488d14c50000	                        lea rdx, [rax*8]	      7154	ops.c	FUNCTION_88	FOR_3
0xe3e4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7154	ops.c	FUNCTION_88	FOR_3
0xe3e8	          0x4801c2	                            add rdx, rax	      7154	ops.c	FUNCTION_88	FOR_3
0xe3eb	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7154	ops.c	FUNCTION_88	FOR_3
0xe3ef	          0x488b00	                    mov rax, qword [rax]	      7154	ops.c	FUNCTION_88	FOR_3
0xe3f2	          0x8b4dac	             mov ecx, dword [rbp - 0x54]	      7154	ops.c	FUNCTION_88	FOR_3
0xe3f5	          0x4863c9	                         movsxd rcx, ecx	      7154	ops.c	FUNCTION_88	FOR_3
0xe3f8	        0x48c1e103	                              shl rcx, 3	      7154	ops.c	FUNCTION_88	FOR_3
0xe3fc	          0x4801c8	                            add rax, rcx	      7154	ops.c	FUNCTION_88	FOR_3
0xe3ff	          0x488b00	                    mov rax, qword [rax]	      7154	ops.c	FUNCTION_88	FOR_3
0xe402	          0x488902	                    mov qword [rdx], rax	      7154	ops.c	FUNCTION_88	FOR_3
0xe405	        0x8345ac01	               add dword [rbp - 0x54], 1	      7153	ops.c	FUNCTION_88	FOR_3
0xe409	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7153	ops.c	FUNCTION_88	FOR_3
0xe40c	          0x4863d0	                         movsxd rdx, eax	      7153	ops.c	FUNCTION_88	FOR_3
0xe40f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7153	ops.c	FUNCTION_88	FOR_3
0xe413	        0x488b4008	                mov rax, qword [rax + 8]	      7153	ops.c	FUNCTION_88	FOR_3
0xe417	          0x4839c2	                            cmp rdx, rax	      7153	ops.c	FUNCTION_88	FOR_3
0xe41a	            0x7cbb	                            jl 0x400e417	      7153	ops.c	FUNCTION_88	FOR_3
0xe41c	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7155	ops.c	FUNCTION_88	CALL_3
0xe420	          0x488b00	                    mov rax, qword [rax]	      7155	ops.c	FUNCTION_88	CALL_3
0xe423	          0x4889c7	                            mov rdi, rax	      7155	ops.c	FUNCTION_88	CALL_3
0xe426	      0xe800000000	                          call 0x400e46b	      7155	ops.c	FUNCTION_88	CALL_3
0xe42b	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7156	ops.c	FUNCTION_88
0xe42f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      7156	ops.c	FUNCTION_88
0xe433	          0x488910	                    mov qword [rax], rdx	      7156	ops.c	FUNCTION_88
0xe436	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      7157	ops.c	FUNCTION_88
0xe43e	        0x837d9000	               cmp dword [rbp - 0x70], 0	      7162	ops.c	FUNCTION_88	IF_9
0xe442	            0x7478	                            je 0x400e4fc	      7162	ops.c	FUNCTION_88	IF_9
0xe444	        0x488b4588	             mov rax, qword [rbp - 0x78]	      7164	ops.c	FUNCTION_88	IF_9	FOR_4
0xe448	        0x488945d8	             mov qword [rbp - 0x28], rax	      7164	ops.c	FUNCTION_88	IF_9	FOR_4
0xe44c	            0xeb5d	                           jmp 0x400e4eb	      7164	ops.c	FUNCTION_88	IF_9	FOR_4
0xe44e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7166	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_4
0xe452	          0x488b00	                    mov rax, qword [rax]	      7166	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_4
0xe455	          0x4889c7	                            mov rdi, rax	      7166	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_4
0xe458	      0xe800000000	                          call 0x400e49d	      7166	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_4
0xe45d	        0x488945c8	             mov qword [rbp - 0x38], rax	      7166	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_4
0xe461	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7167	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0xe464	            0x4898	                                    cdqe	      7167	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0xe466	    0x488d14c50000	                        lea rdx, [rax*8]	      7167	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0xe46e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7167	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0xe472	        0x488d1c02	                    lea rbx, [rdx + rax]	      7167	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0xe476	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7167	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0xe47a	            0x89c2	                            mov edx, eax	      7167	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0xe47c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7167	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0xe480	          0x488b00	                    mov rax, qword [rax]	      7167	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0xe483	            0x89d6	                            mov esi, edx	      7167	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0xe485	          0x4889c7	                            mov rdi, rax	      7167	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0xe488	      0xe800000000	                          call 0x400e4cd	      7167	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0xe48d	          0x488903	                    mov qword [rbx], rax	      7167	ops.c	FUNCTION_88	IF_9	FOR_4	CALL_5
0xe490	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7168	ops.c	FUNCTION_88	IF_9	FOR_4	IF_10
0xe494	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      7168	ops.c	FUNCTION_88	IF_9	FOR_4	IF_10
0xe498	            0x7e08	                           jle 0x400e4e2	      7168	ops.c	FUNCTION_88	IF_9	FOR_4	IF_10
0xe49a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7169	ops.c	FUNCTION_88	IF_9	FOR_4	IF_10
0xe49e	        0x488945e0	             mov qword [rbp - 0x20], rax	      7169	ops.c	FUNCTION_88	IF_9	FOR_4	IF_10
0xe4a2	      0x488345d808	               add qword [rbp - 0x28], 8	      7164	ops.c	FUNCTION_88	IF_9	FOR_4
0xe4a7	        0x8345ac01	               add dword [rbp - 0x54], 1	      7164	ops.c	FUNCTION_88	IF_9	FOR_4
0xe4ab	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7164	ops.c	FUNCTION_88	IF_9	FOR_4
0xe4af	          0x488b00	                    mov rax, qword [rax]	      7164	ops.c	FUNCTION_88	IF_9	FOR_4
0xe4b2	          0x4885c0	                           test rax, rax	      7164	ops.c	FUNCTION_88	IF_9	FOR_4
0xe4b5	            0x7597	                           jne 0x400e48e	      7164	ops.c	FUNCTION_88	IF_9	FOR_4
0xe4b7	      0xe9c3010000	                           jmp 0x400e6bf	      7164	ops.c	FUNCTION_88	IF_9	FOR_4
0xe4bc	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      7174	ops.c	FUNCTION_88	ELSE_3	FOR_5
0xe4c4	      0xe99c010000	                           jmp 0x400e6a5	      7174	ops.c	FUNCTION_88	ELSE_3	FOR_5
0xe4c9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7176	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6
0xe4cd	        0x488945c8	             mov qword [rbp - 0x38], rax	      7176	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6
0xe4d1	            0xeb17	                           jmp 0x400e52a	      7176	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6
0xe4d3	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	      7177	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6	IF_11
0xe4d7	        0x488b4588	             mov rax, qword [rbp - 0x78]	      7177	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6	IF_11
0xe4db	          0x4801d0	                            add rax, rdx	      7177	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6	IF_11
0xe4de	           0xfb600	                   movzx eax, byte [rax]	      7177	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6	IF_11
0xe4e1	            0x3c0a	                             cmp al, 0xa	      7177	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6	IF_11
0xe4e3	            0x7411	                            je 0x400e536	      7177	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6	IF_11
0xe4e5	      0x488345c801	               add qword [rbp - 0x38], 1	      7176	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6
0xe4ea	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7176	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6
0xe4ee	        0x483b4580	             cmp rax, qword [rbp - 0x80]	      7176	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6
0xe4f2	            0x7cdf	                            jl 0x400e513	      7176	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6
0xe4f4	            0xeb01	                           jmp 0x400e537	      7176	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6
0xe4f6	              0x90	                                     nop	      7178	ops.c	FUNCTION_88	ELSE_3	FOR_5	FOR_6	IF_11
0xe4f7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      7179	ops.c	FUNCTION_88	ELSE_3	FOR_5
0xe4fb	        0x482945c8	             sub qword [rbp - 0x38], rax	      7179	ops.c	FUNCTION_88	ELSE_3	FOR_5
0xe4ff	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7180	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_12
0xe503	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      7180	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_12
0xe507	            0x7e08	                           jle 0x400e551	      7180	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_12
0xe509	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7181	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_12
0xe50d	        0x488945e0	             mov qword [rbp - 0x20], rax	      7181	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_12
0xe511	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      7182	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13
0xe515	            0x7428	                            je 0x400e57f	      7182	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13
0xe517	        0x836dac01	               sub dword [rbp - 0x54], 1	      7184	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13
0xe51b	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7185	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0xe51f	          0x488b00	                    mov rax, qword [rax]	      7185	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0xe522	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      7185	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0xe525	          0x4863d2	                         movsxd rdx, edx	      7185	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0xe528	        0x48c1e203	                              shl rdx, 3	      7185	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0xe52c	          0x4801d0	                            add rax, rdx	      7185	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0xe52f	          0x488b00	                    mov rax, qword [rax]	      7185	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0xe532	          0x4889c7	                            mov rdi, rax	      7185	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0xe535	      0xe800000000	                          call 0x400e57a	      7185	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0xe53a	          0x8945b0	             mov dword [rbp - 0x50], eax	      7185	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0xe53d	            0xeb07	                           jmp 0x400e586	      7185	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_13	CALL_6
0xe53f	    0xc745b0000000	               mov dword [rbp - 0x50], 0	      7188	ops.c	FUNCTION_88	ELSE_3	FOR_5	ELSE_4
0xe546	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7189	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_7
0xe54a	            0x89c2	                            mov edx, eax	      7189	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_7
0xe54c	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      7189	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_7
0xe54f	             0x1d0	                            add eax, edx	      7189	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_7
0xe551	          0x83c001	                              add eax, 1	      7189	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_7
0xe554	            0x89c7	                            mov edi, eax	      7189	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_7
0xe556	      0xe800000000	                          call 0x400e59b	      7189	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_7
0xe55b	        0x488945d0	             mov qword [rbp - 0x30], rax	      7189	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_7
0xe55f	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      7190	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_14
0xe564	     0xf8414010000	                            je 0x400e6be	      7190	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_14
0xe56a	        0x837db000	               cmp dword [rbp - 0x50], 0	      7192	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_15
0xe56e	            0x742c	                            je 0x400e5dc	      7192	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_15
0xe570	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      7193	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_8
0xe573	          0x4863d0	                         movsxd rdx, eax	      7193	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_8
0xe576	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7193	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_8
0xe57a	          0x488b00	                    mov rax, qword [rax]	      7193	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_8
0xe57d	          0x8b4dac	             mov ecx, dword [rbp - 0x54]	      7193	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_8
0xe580	          0x4863c9	                         movsxd rcx, ecx	      7193	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_8
0xe583	        0x48c1e103	                              shl rcx, 3	      7193	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_8
0xe587	          0x4801c8	                            add rax, rcx	      7193	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_8
0xe58a	          0x488b08	                    mov rcx, qword [rax]	      7193	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_8
0xe58d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7193	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_8
0xe591	          0x4889ce	                            mov rsi, rcx	      7193	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_8
0xe594	          0x4889c7	                            mov rdi, rax	      7193	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_8
0xe597	      0xe800000000	                          call 0x400e5dc	      7193	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_8
0xe59c	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      7194	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_16
0xe5a0	            0x741f	                            je 0x400e601	      7194	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_16
0xe5a2	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7195	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_9
0xe5a6	          0x488b00	                    mov rax, qword [rax]	      7195	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_9
0xe5a9	          0x8b55ac	             mov edx, dword [rbp - 0x54]	      7195	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_9
0xe5ac	          0x4863d2	                         movsxd rdx, edx	      7195	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_9
0xe5af	        0x48c1e203	                              shl rdx, 3	      7195	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_9
0xe5b3	          0x4801d0	                            add rax, rdx	      7195	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_9
0xe5b6	          0x488b00	                    mov rax, qword [rax]	      7195	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_9
0xe5b9	          0x4889c7	                            mov rdi, rax	      7195	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_9
0xe5bc	      0xe800000000	                          call 0x400e601	      7195	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_9
0xe5c1	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      7196	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_17
0xe5c6	            0x7428	                            je 0x400e630	      7196	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_17
0xe5c8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7197	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_10
0xe5cc	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      7197	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_10
0xe5d0	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      7197	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_10
0xe5d4	        0x488d3411	                    lea rsi, [rcx + rdx]	      7197	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_10
0xe5d8	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      7197	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_10
0xe5db	          0x4863ca	                         movsxd rcx, edx	      7197	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_10
0xe5de	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      7197	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_10
0xe5e2	          0x4801d1	                            add rcx, rdx	      7197	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_10
0xe5e5	          0x4889c2	                            mov rdx, rax	      7197	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_10
0xe5e8	          0x4889cf	                            mov rdi, rcx	      7197	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_10
0xe5eb	      0xe800000000	                          call 0x400e630	      7197	ops.c	FUNCTION_88	ELSE_3	FOR_5	CALL_10
0xe5f0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7198	ops.c	FUNCTION_88	ELSE_3	FOR_5
0xe5f4	            0x89c2	                            mov edx, eax	      7198	ops.c	FUNCTION_88	ELSE_3	FOR_5
0xe5f6	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      7198	ops.c	FUNCTION_88	ELSE_3	FOR_5
0xe5f9	             0x1d0	                            add eax, edx	      7198	ops.c	FUNCTION_88	ELSE_3	FOR_5
0xe5fb	          0x8945b0	             mov dword [rbp - 0x50], eax	      7198	ops.c	FUNCTION_88	ELSE_3	FOR_5
0xe5fe	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      7199	ops.c	FUNCTION_88	ELSE_3	FOR_5
0xe601	          0x4863d0	                         movsxd rdx, eax	      7199	ops.c	FUNCTION_88	ELSE_3	FOR_5
0xe604	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7199	ops.c	FUNCTION_88	ELSE_3	FOR_5
0xe608	          0x4801d0	                            add rax, rdx	      7199	ops.c	FUNCTION_88	ELSE_3	FOR_5
0xe60b	          0xc60000	                       mov byte [rax], 0	      7199	ops.c	FUNCTION_88	ELSE_3	FOR_5
0xe60e	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7200	ops.c	FUNCTION_88	ELSE_3	FOR_5
0xe612	          0x488b08	                    mov rcx, qword [rax]	      7200	ops.c	FUNCTION_88	ELSE_3	FOR_5
0xe615	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7200	ops.c	FUNCTION_88	ELSE_3	FOR_5
0xe618	          0x8d5001	                      lea edx, [rax + 1]	      7200	ops.c	FUNCTION_88	ELSE_3	FOR_5
0xe61b	          0x8955ac	             mov dword [rbp - 0x54], edx	      7200	ops.c	FUNCTION_88	ELSE_3	FOR_5
0xe61e	            0x4898	                                    cdqe	      7200	ops.c	FUNCTION_88	ELSE_3	FOR_5
0xe620	        0x48c1e003	                              shl rax, 3	      7200	ops.c	FUNCTION_88	ELSE_3	FOR_5
0xe624	        0x488d1401	                    lea rdx, [rcx + rax]	      7200	ops.c	FUNCTION_88	ELSE_3	FOR_5
0xe628	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7200	ops.c	FUNCTION_88	ELSE_3	FOR_5
0xe62c	          0x488902	                    mov qword [rdx], rax	      7200	ops.c	FUNCTION_88	ELSE_3	FOR_5
0xe62f	            0xeb17	                           jmp 0x400e688	      7201	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1
0xe631	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7203	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1	IF_18
0xe635	           0xfb600	                   movzx eax, byte [rax]	      7203	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1	IF_18
0xe638	            0x84c0	                             test al, al	      7203	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1	IF_18
0xe63a	            0x7507	                           jne 0x400e683	      7203	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1	IF_18
0xe63c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7204	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1	IF_18
0xe640	          0xc6000a	                     mov byte [rax], 0xa	      7204	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1	IF_18
0xe643	      0x488345d001	               add qword [rbp - 0x30], 1	      7205	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1
0xe648	        0x836db001	               sub dword [rbp - 0x50], 1	      7201	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1
0xe64c	        0x837db000	               cmp dword [rbp - 0x50], 0	      7201	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1
0xe650	            0x79df	                           jns 0x400e671	      7201	ops.c	FUNCTION_88	ELSE_3	FOR_5	WHILE_1
0xe652	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      7207	ops.c	FUNCTION_88	ELSE_3	FOR_5
0xe659	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7174	ops.c	FUNCTION_88	ELSE_3	FOR_5
0xe65d	        0x4883c001	                              add rax, 1	      7174	ops.c	FUNCTION_88	ELSE_3	FOR_5
0xe661	        0x480145c0	            add qword [rbp - 0x40], rax 	      7174	ops.c	FUNCTION_88	ELSE_3	FOR_5
0xe665	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      7174	ops.c	FUNCTION_88	ELSE_3	FOR_5
0xe668	          0x4863d0	                         movsxd rdx, eax	      7174	ops.c	FUNCTION_88	ELSE_3	FOR_5
0xe66b	        0x488b4580	             mov rax, qword [rbp - 0x80]	      7174	ops.c	FUNCTION_88	ELSE_3	FOR_5
0xe66f	          0x4801d0	                            add rax, rdx	      7174	ops.c	FUNCTION_88	ELSE_3	FOR_5
0xe672	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      7174	ops.c	FUNCTION_88	ELSE_3	FOR_5
0xe676	     0xf8f4dfeffff	                            jg 0x400e509	      7174	ops.c	FUNCTION_88	ELSE_3	FOR_5
0xe67c	            0xeb01	                           jmp 0x400e6bf	      7174	ops.c	FUNCTION_88	ELSE_3	FOR_5
0xe67e	              0x90	                                     nop	      7191	ops.c	FUNCTION_88	ELSE_3	FOR_5	IF_14
0xe67f	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      7210	ops.c	FUNCTION_88
0xe682	            0x89c2	                            mov edx, eax	      7210	ops.c	FUNCTION_88
0xe684	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7210	ops.c	FUNCTION_88
0xe688	          0x885010	               mov byte [rax + 0x10], dl	      7210	ops.c	FUNCTION_88
0xe68b	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7211	ops.c	FUNCTION_88
0xe68e	          0x4863d0	                         movsxd rdx, eax	      7211	ops.c	FUNCTION_88
0xe691	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7211	ops.c	FUNCTION_88
0xe695	        0x48895008	                mov qword [rax + 8], rdx	      7211	ops.c	FUNCTION_88
0xe699	        0x837da802	               cmp dword [rbp - 0x58], 2	      7212	ops.c	FUNCTION_88	IF_19
0xe69d	            0x7527	                           jne 0x400e706	      7212	ops.c	FUNCTION_88	IF_19
0xe69f	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      7213	ops.c	FUNCTION_88	IF_19
0xe6a7	            0x790b	                           jns 0x400e6f4	      7213	ops.c	FUNCTION_88	IF_19
0xe6a9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7213	ops.c	FUNCTION_88	IF_19
0xe6ad	          0x83e801	                              sub eax, 1	      7213	ops.c	FUNCTION_88	IF_19
0xe6b0	            0x89c2	                            mov edx, eax	      7213	ops.c	FUNCTION_88	IF_19
0xe6b2	            0xeb09	                           jmp 0x400e6fd	      7213	ops.c	FUNCTION_88	IF_19
0xe6b4	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      7213	ops.c	FUNCTION_88	IF_19
0xe6bb	            0x89c2	                            mov edx, eax	      7213	ops.c	FUNCTION_88	IF_19
0xe6bd	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7213	ops.c	FUNCTION_88	IF_19
0xe6c1	          0x895014	             mov dword [rax + 0x14], edx	      7213	ops.c	FUNCTION_88	IF_19
0xe6c4	            0xeb0b	                           jmp 0x400e711	      7213	ops.c	FUNCTION_88	IF_19
0xe6c6	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7215	ops.c	FUNCTION_88	ELSE_5
0xe6ca	    0xc74014000000	               mov dword [rax + 0x14], 0	      7215	ops.c	FUNCTION_88	ELSE_5
0xe6d1	      0xe800000000	                          call 0x400e716	      7217	ops.c	FUNCTION_88	CALL_11
0xe6d6	          0x4889c2	                            mov rdx, rax	      7217	ops.c	FUNCTION_88	CALL_11
0xe6d9	        0x488b4598	             mov rax, qword [rbp - 0x68]	      7217	ops.c	FUNCTION_88	CALL_11
0xe6dd	        0x48895018	             mov qword [rax + 0x18], rdx	      7217	ops.c	FUNCTION_88	CALL_11
0xe6e1	            0xeb01	                           jmp 0x400e724	      7217	ops.c	FUNCTION_88	CALL_11
0xe6e3	              0x90	                                     nop	      7152	ops.c	FUNCTION_88	IF_8
0xe6e4	    0x4881c4880000	                           add rsp, 0x88	      7219	ops.c	FUNCTION_88
0xe6eb	              0x5b	                                 pop rbx	      7219	ops.c	FUNCTION_88
0xe6ec	              0x5d	                                 pop rbp	      7219	ops.c	FUNCTION_88
0xe6ed	              0xc3	                                     ret	      7219	ops.c	FUNCTION_88
cursor_pos_info	CALL,44:FOR,1:SWITCH,1:functions,0:WHILE,0:DO,0:ELSE,8:IF,24	620
0xe84e	              0x55	                                push rbp	      7299	ops.c	FUNCTION_91
0xe84f	          0x4889e5	                            mov rbp, rsp	      7299	ops.c	FUNCTION_91
0xe852	            0x4157	                                push r15	      7299	ops.c	FUNCTION_91
0xe854	            0x4156	                                push r14	      7299	ops.c	FUNCTION_91
0xe856	            0x4155	                                push r13	      7299	ops.c	FUNCTION_91
0xe858	            0x4154	                                push r12	      7299	ops.c	FUNCTION_91
0xe85a	              0x53	                                push rbx	      7299	ops.c	FUNCTION_91
0xe85b	    0x4881ece80100	                          sub rsp, 0x1e8	      7299	ops.c	FUNCTION_91
0xe862	    0x4889bdf8fdff	            mov qword [rbp - 0x208], rdi	      7299	ops.c	FUNCTION_91
0xe869	    0x64488b042528	                mov rax, qword fs:[0x28]	      7299	ops.c	FUNCTION_91
0xe872	        0x488945c8	             mov qword [rbp - 0x38], rax	      7299	ops.c	FUNCTION_91
0xe876	            0x31c0	                            xor eax, eax	      7299	ops.c	FUNCTION_91
0xe878	    0x48c78538feff	              mov qword [rbp - 0x1c8], 0	      7304	ops.c	FUNCTION_91
0xe883	    0x48c78540feff	              mov qword [rbp - 0x1c0], 0	      7306	ops.c	FUNCTION_91
0xe88e	    0x48c78548feff	              mov qword [rbp - 0x1b8], 0	      7308	ops.c	FUNCTION_91
0xe899	    0x48c78510feff	              mov qword [rbp - 0x1f0], 0	      7309	ops.c	FUNCTION_91
0xe8a4	    0x48c78518feff	              mov qword [rbp - 0x1e8], 0	      7310	ops.c	FUNCTION_91
0xe8af	    0x48c78520feff	              mov qword [rbp - 0x1e0], 0	      7311	ops.c	FUNCTION_91
0xe8ba	    0x48c78528feff	              mov qword [rbp - 0x1d8], 0	      7312	ops.c	FUNCTION_91
0xe8c5	    0x48c78550feff	        mov qword [rbp - 0x1b0], 0x186a0	      7314	ops.c	FUNCTION_91
0xe8d0	    0x48c78558feff	              mov qword [rbp - 0x1a8], 0	      7315	ops.c	FUNCTION_91
0xe8db	    0x488b05000000	            mov rax, qword [0x0400e922] 	      7323	ops.c	FUNCTION_91	IF_1
0xe8e2	          0x8b4010	            mov eax, dword [rax + 0x10] 	      7323	ops.c	FUNCTION_91	IF_1
0xe8e5	          0x83e001	                              and eax, 1	      7323	ops.c	FUNCTION_91	IF_1
0xe8e8	            0x85c0	                           test eax, eax	      7323	ops.c	FUNCTION_91	IF_1
0xe8ea	            0x7425	                            je 0x400e951	      7323	ops.c	FUNCTION_91	IF_1
0xe8ec	    0x4883bdf8fdff	              cmp qword [rbp - 0x208], 0	      7325	ops.c	FUNCTION_91	IF_1	IF_2
0xe8f4	     0xf85370a0000	                           jne 0x400f371	      7325	ops.c	FUNCTION_91	IF_1	IF_2
0xe8fa	      0xbf00000000	                              mov edi, 0	      7327	ops.c	FUNCTION_91	IF_1	IF_2	CALL_2
0xe8ff	      0xe800000000	                          call 0x400e944	      7327	ops.c	FUNCTION_91	IF_1	IF_2	CALL_2
0xe904	          0x4889c7	                            mov rdi, rax	      7327	ops.c	FUNCTION_91	IF_1	IF_2	CALL_2
0xe907	      0xe800000000	                          call 0x400e94c	      7327	ops.c	FUNCTION_91	IF_1	IF_2	CALL_2
0xe90c	      0xe92e0b0000	                           jmp 0x400f47f	      7328	ops.c	FUNCTION_91	IF_1	IF_2
0xe911	    0x488b05000000	            mov rax, qword [0x0400e958] 	      7333	ops.c	FUNCTION_91	ELSE_1	IF_3	CALL_3
0xe918	          0x4889c7	                            mov rdi, rax	      7333	ops.c	FUNCTION_91	ELSE_1	IF_3	CALL_3
0xe91b	      0xe800000000	                          call 0x400e960	      7333	ops.c	FUNCTION_91	ELSE_1	IF_3	CALL_3
0xe920	          0x83f801	                              cmp eax, 1	      7333	ops.c	FUNCTION_91	ELSE_1	IF_3	CALL_3
0xe923	            0x750c	                           jne 0x400e971	      7333	ops.c	FUNCTION_91	ELSE_1	IF_3	CALL_3
0xe925	    0xc78504feffff	              mov dword [rbp - 0x1fc], 2	      7334	ops.c	FUNCTION_91	ELSE_1	IF_3
0xe92f	            0xeb0a	                           jmp 0x400e97b	      7334	ops.c	FUNCTION_91	ELSE_1	IF_3
0xe931	    0xc78504feffff	              mov dword [rbp - 0x1fc], 1	      7336	ops.c	FUNCTION_91	ELSE_1	ELSE_2
0xe93b	    0x8b0500000000	            mov eax, dword [0x0400e981] 	      7338	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0xe941	            0x85c0	                           test eax, eax	      7338	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0xe943	     0xf8427020000	                            je 0x400ebb0	      7338	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0xe949	    0x488b15000000	            mov rdx, qword [0x0400e990] 	      7340	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0xe950	    0x488b05000000	            mov rax, qword [0x0400e997] 	      7340	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0xe957	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7340	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0xe95b	          0x4839c2	                            cmp rdx, rax	      7340	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0xe95e	            0x741a	                            je 0x400e9ba	      7340	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0xe960	    0x488b15000000	            mov rdx, qword [0x0400e9a7] 	      7340	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0xe967	    0x488b05000000	            mov rax, qword [0x0400e9ae] 	      7340	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0xe96e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7340	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0xe972	          0x4839c2	                            cmp rdx, rax	      7340	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0xe975	           0xf9cc0	                                 setl al	      7340	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0xe978	            0xeb40	                           jmp 0x400e9fa	      7340	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0xe97a	    0x8b1500000000	            mov edx, dword [0x0400e9c0] 	      7340	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0xe980	    0x488b05000000	            mov rax, qword [0x0400e9c7] 	      7340	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0xe987	          0x8b4040	            mov eax, dword [rax + 0x40] 	      7340	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0xe98a	            0x39c2	                            cmp edx, eax	      7340	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0xe98c	            0x7417	                            je 0x400e9e5	      7340	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0xe98e	    0x8b1500000000	            mov edx, dword [0x0400e9d4] 	      7340	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0xe994	    0x488b05000000	            mov rax, qword [0x0400e9db] 	      7340	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0xe99b	          0x8b4040	            mov eax, dword [rax + 0x40] 	      7340	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0xe99e	            0x39c2	                            cmp edx, eax	      7340	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0xe9a0	           0xf9cc0	                                 setl al	      7340	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0xe9a3	            0xeb15	                           jmp 0x400e9fa	      7340	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0xe9a5	    0x8b1500000000	            mov edx, dword [0x0400e9eb] 	      7340	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0xe9ab	    0x488b05000000	            mov rax, qword [0x0400e9f2] 	      7340	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0xe9b2	          0x8b4044	            mov eax, dword [rax + 0x44] 	      7340	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0xe9b5	            0x39c2	                            cmp edx, eax	      7340	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0xe9b7	           0xf9cc0	                                 setl al	      7340	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0xe9ba	            0x84c0	                             test al, al	      7340	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0xe9bc	            0x743b	                            je 0x400ea39	      7340	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5	CALL_4
0xe9be	    0x488b05000000	            mov rax, qword [0x0400ea05] 	      7342	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0xe9c5	    0x488b15000000	            mov rdx, qword [0x0400ea0c] 	      7342	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0xe9cc	    0x48898580feff	            mov qword [rbp - 0x180], rax	      7342	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0xe9d3	    0x48899588feff	            mov qword [rbp - 0x178], rdx	      7342	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0xe9da	    0x488b05000000	            mov rax, qword [0x0400ea21] 	      7343	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0xe9e1	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      7343	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0xe9e5	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7343	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0xe9e9	    0x48898590feff	            mov qword [rbp - 0x170], rax	      7343	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0xe9f0	    0x48899598feff	            mov qword [rbp - 0x168], rdx	      7343	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0xe9f7	            0xeb39	                           jmp 0x400ea72	      7343	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_5
0xe9f9	    0x488b05000000	            mov rax, qword [0x0400ea40] 	      7347	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0xea00	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      7347	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0xea04	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7347	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0xea08	    0x48898580feff	            mov qword [rbp - 0x180], rax	      7347	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0xea0f	    0x48899588feff	            mov qword [rbp - 0x178], rdx	      7347	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0xea16	    0x488b05000000	            mov rax, qword [0x0400ea5d] 	      7348	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0xea1d	    0x488b15000000	            mov rdx, qword [0x0400ea64] 	      7348	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0xea24	    0x48898590feff	            mov qword [rbp - 0x170], rax	      7348	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0xea2b	    0x48899598feff	            mov qword [rbp - 0x168], rdx	      7348	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	ELSE_3
0xea32	    0x488b05000000	            mov rax, qword [0x0400ea79] 	      7350	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0xea39	           0xfb600	                   movzx eax, byte [rax]	      7350	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0xea3c	            0x3c65	                            cmp al, 0x65	      7350	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0xea3e	            0x7519	                           jne 0x400ea99	      7350	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0xea40	    0x8b8598feffff	            mov eax, dword [rbp - 0x168]	      7350	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0xea46	            0x85c0	                           test eax, eax	      7350	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0xea48	            0x7e0f	                           jle 0x400ea99	      7350	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0xea4a	    0x8b8598feffff	            mov eax, dword [rbp - 0x168]	      7351	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0xea50	          0x83e801	                              sub eax, 1	      7351	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0xea53	    0x898598feffff	            mov dword [rbp - 0x168], eax	      7351	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_6
0xea59	    0x8b0500000000	            mov eax, dword [0x0400ea9f] 	      7353	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0xea5f	          0x83f816	                           cmp eax, 0x16	      7353	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0xea62	     0xf85e9000000	                           jne 0x400eb91	      7353	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0xea68	    0x488b05000000	            mov rax, qword [0x0400eaaf] 	      7356	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0xea6f	    0x48898570feff	            mov qword [rbp - 0x190], rax	      7356	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0xea76	    0x488b05000000	            mov rax, qword [0x0400eabd] 	      7359	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0xea7d	    0x488905000000	            mov qword [0x0400eac4], rax 	      7359	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0xea84	    0xc7853cffffff	               mov dword [rbp - 0xc4], 1	      7361	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0xea8e	    0xc78540ffffff	               mov dword [rbp - 0xc0], 1	      7362	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0xea98	    0xc785e0feffff	              mov dword [rbp - 0x120], 0	      7363	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0xeaa2	    0x488b05000000	            mov rax, qword [0x0400eae9] 	      7364	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0xeaa9	    0x488d95e0feff	                  lea rdx, [rbp - 0x120]	      7364	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0xeab0	        0x488d7a68	                   lea rdi, [rdx + 0x68]	      7364	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0xeab4	    0x488d95e0feff	                  lea rdx, [rbp - 0x120]	      7364	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0xeabb	        0x488d4a64	                   lea rcx, [rdx + 0x64]	      7364	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0xeabf	    0x488d9590feff	                  lea rdx, [rbp - 0x170]	      7364	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0xeac6	    0x488db580feff	                  lea rsi, [rbp - 0x180]	      7364	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0xeacd	          0x4989f8	                             mov r8, rdi	      7364	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0xead0	          0x4889c7	                            mov rdi, rax	      7364	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0xead3	      0xe800000000	                          call 0x400eb18	      7364	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	CALL_5
0xead8	    0x488b8570feff	            mov rax, qword [rbp - 0x190]	      7367	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0xeadf	    0x488905000000	            mov qword [0x0400eb26], rax 	      7367	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7
0xeae6	    0x488b05000000	            mov rax, qword [0x0400eb2d] 	      7369	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_8
0xeaed	          0x8b4048	            mov eax, dword [rax + 0x48] 	      7369	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_8
0xeaf0	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      7369	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_8
0xeaf5	            0x750a	                           jne 0x400eb41	      7369	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_8
0xeaf7	    0xc78548ffffff	      mov dword [rbp - 0xb8], 0x7fffffff	      7370	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_8
0xeb01	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	      7372	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0xeb07	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      7372	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0xeb0d	            0x39c2	                            cmp edx, eax	      7372	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0xeb0f	            0x7d40	                           jge 0x400eb91	      7372	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0xeb11	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	      7374	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0xeb17	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      7374	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0xeb1d	             0x1d0	                            add eax, edx	      7374	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0xeb1f	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	      7374	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0xeb25	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	      7375	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0xeb2b	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      7375	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0xeb31	            0x29c2	                            sub edx, eax	      7375	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0xeb33	            0x89d0	                            mov eax, edx	      7375	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0xeb35	    0x898544ffffff	             mov dword [rbp - 0xbc], eax	      7375	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0xeb3b	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	      7376	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0xeb41	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      7376	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0xeb47	            0x29c2	                            sub edx, eax	      7376	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0xeb49	            0x89d0	                            mov eax, edx	      7376	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0xeb4b	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	      7376	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4	IF_7	IF_9
0xeb51	    0x488b9590feff	            mov rdx, qword [rbp - 0x170]	      7379	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0xeb58	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7379	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0xeb5f	          0x4829c2	                            sub rdx, rax	      7379	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0xeb62	          0x4889d0	                            mov rax, rdx	      7379	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0xeb65	        0x4883c001	                              add rax, 1	      7379	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0xeb69	    0x48898558feff	            mov qword [rbp - 0x1a8], rax	      7379	ops.c	FUNCTION_91	ELSE_1	ELSE_2	IF_4
0xeb70	    0x48c78530feff	              mov qword [rbp - 0x1d0], 1	      7382	ops.c	FUNCTION_91	ELSE_1	FOR_1
0xeb7b	      0xe94e030000	                           jmp 0x400ef0e	      7382	ops.c	FUNCTION_91	ELSE_1	FOR_1
0xeb80	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      7385	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10
0xeb87	    0x483b8550feff	            cmp rax, qword [rbp - 0x1b0]	      7385	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10
0xeb8e	            0x7e27	                           jle 0x400ebf7	      7385	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10
0xeb90	      0xe800000000	                          call 0x400ebd5	      7387	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10	CALL_6
0xeb95	    0x8b0500000000	            mov eax, dword [0x0400ebdb] 	      7388	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10	IF_11
0xeb9b	            0x85c0	                           test eax, eax	      7388	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10	IF_11
0xeb9d	     0xf859b080000	                           jne 0x400f47e	      7388	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10	IF_11
0xeba3	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      7390	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10
0xebaa	    0x4805a0860100	                        add rax, 0x186a0	      7390	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10
0xebb0	    0x48898550feff	            mov qword [rbp - 0x1b0], rax	      7390	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10
0xebb7	    0x8b0500000000	            mov eax, dword [0x0400ebfd] 	      7394	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0xebbd	            0x85c0	                           test eax, eax	      7394	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0xebbf	     0xf8421020000	                            je 0x400ee26	      7394	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0xebc5	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7395	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0xebcc	    0x483b8530feff	            cmp rax, qword [rbp - 0x1d0]	      7395	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0xebd3	     0xf8f0d020000	                            jg 0x400ee26	      7395	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0xebd9	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7395	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0xebe0	    0x483b8530feff	            cmp rax, qword [rbp - 0x1d0]	      7395	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0xebe7	     0xf8cf9010000	                            jl 0x400ee26	      7395	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0xebed	    0x48c78560feff	              mov qword [rbp - 0x1a0], 0	      7397	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0xebf8	    0x48c78568feff	              mov qword [rbp - 0x198], 0	      7398	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0xec03	    0x8b0500000000	            mov eax, dword [0x0400ec49] 	      7400	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xec09	          0x83f856	                           cmp eax, 0x56	      7400	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xec0c	            0x746b	                            je 0x400ecb9	      7400	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xec0e	          0x83f876	                           cmp eax, 0x76	      7400	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xec11	     0xf8488000000	                            je 0x400ecdf	      7400	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xec17	          0x83f816	                           cmp eax, 0x16	      7400	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xec1a	     0xf8502010000	                           jne 0x400ed62	      7400	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xec20	      0xe800000000	                          call 0x400ec65	      7404	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_7
0xec25	    0x890500000000	            mov dword [0x0400ec6b], eax 	      7404	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_7
0xec2b	    0x488b9530feff	            mov rdx, qword [rbp - 0x1d0]	      7406	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_8
0xec32	    0x488db5a0feff	                  lea rsi, [rbp - 0x160]	      7406	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_8
0xec39	    0x488d85e0feff	                  lea rax, [rbp - 0x120]	      7406	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_8
0xec40	      0xb900000000	                              mov ecx, 0	      7406	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_8
0xec45	          0x4889c7	                            mov rdi, rax	      7406	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_8
0xec48	      0xe88cbaffff	                     call sym.block_prep	      7406	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_8
0xec4d	    0xc70500000000	               mov dword [0x0400ec97], 2	      7408	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xec57	    0x488b85b0feff	            mov rax, qword [rbp - 0x150]	      7410	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xec5e	    0x48898560feff	            mov qword [rbp - 0x1a0], rax	      7410	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xec65	    0x8b85a8feffff	            mov eax, dword [rbp - 0x158]	      7411	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xec6b	            0x4898	                                    cdqe	      7411	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xec6d	    0x48898568feff	            mov qword [rbp - 0x198], rax	      7411	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xec74	      0xe9a9000000	                           jmp 0x400ed62	      7412	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xec79	    0x488b8530feff	            mov rax, qword [rbp - 0x1d0]	      7414	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_9
0xec80	          0x4889c7	                            mov rdi, rax	      7414	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_9
0xec83	      0xe800000000	                          call 0x400ecc8	      7414	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_9
0xec88	    0x48898560feff	            mov qword [rbp - 0x1a0], rax	      7414	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_9
0xec8f	    0x48c78568feff	     mov qword [rbp - 0x198], 0x7fffffff	      7415	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xec9a	      0xe983000000	                           jmp 0x400ed62	      7416	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xec9f	    0x488b8580feff	            mov rax, qword [rbp - 0x180]	      7419	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xeca6	    0x483b8530feff	            cmp rax, qword [rbp - 0x1d0]	      7420	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xecad	            0x7508	                           jne 0x400ecf7	      7420	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xecaf	    0x8b8588feffff	            mov eax, dword [rbp - 0x178]	      7420	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xecb5	            0xeb05	                           jmp 0x400ecfc	      7420	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xecb7	      0xb800000000	                              mov eax, 0	      7420	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xecbc	    0x898508feffff	            mov dword [rbp - 0x1f8], eax	      7419	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xecc2	    0x488b8590feff	            mov rax, qword [rbp - 0x170]	      7421	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xecc9	    0x483b8530feff	            cmp rax, qword [rbp - 0x1d0]	      7421	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xecd0	            0x7511	                           jne 0x400ed23	      7421	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xecd2	    0x8b8598feffff	            mov eax, dword [rbp - 0x168]	      7422	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xecd8	    0x2b8508feffff	            sub eax, dword [rbp - 0x1f8]	      7422	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xecde	          0x83c001	                              add eax, 1	      7421	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xece1	            0xeb05	                           jmp 0x400ed28	      7421	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xece3	      0xb8ffffff7f	                     mov eax, 0x7fffffff	      7421	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xece8	    0x89850cfeffff	            mov dword [rbp - 0x1f4], eax	      7421	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xecee	    0x488b8530feff	            mov rax, qword [rbp - 0x1d0]	      7424	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_10
0xecf5	          0x4889c7	                            mov rdi, rax	      7424	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_10
0xecf8	      0xe800000000	                          call 0x400ed3d	      7424	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_10
0xecfd	          0x4889c2	                            mov rdx, rax	      7424	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_10
0xed00	    0x8b8508feffff	            mov eax, dword [rbp - 0x1f8]	      7424	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_10
0xed06	            0x4898	                                    cdqe	      7424	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_10
0xed08	          0x4801d0	                            add rax, rdx	      7424	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_10
0xed0b	    0x48898560feff	            mov qword [rbp - 0x1a0], rax	      7424	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1	CALL_10
0xed12	    0x8b850cfeffff	            mov eax, dword [rbp - 0x1f4]	      7425	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xed18	            0x4898	                                    cdqe	      7425	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xed1a	    0x48898568feff	            mov qword [rbp - 0x198], rax	      7425	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xed21	              0x90	                                     nop	      7427	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	SWITCH_1
0xed22	    0x4883bd60feff	              cmp qword [rbp - 0x1a0], 0	      7429	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13
0xed2a	     0xf8458010000	                            je 0x400eec8	      7429	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13
0xed30	    0x8bbd04feffff	            mov edi, dword [rbp - 0x1fc]	      7431	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	CALL_11
0xed36	    0x488b8d68feff	            mov rcx, qword [rbp - 0x198]	      7431	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	CALL_11
0xed3d	    0x488d9518feff	                  lea rdx, [rbp - 0x1e8]	      7431	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	CALL_11
0xed44	    0x488db528feff	                  lea rsi, [rbp - 0x1d8]	      7431	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	CALL_11
0xed4b	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      7431	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	CALL_11
0xed52	          0x4189f8	                            mov r8d, edi	      7431	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	CALL_11
0xed55	          0x4889c7	                            mov rdi, rax	      7431	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	CALL_11
0xed58	      0xe8b6f9ffff	                call sym.line_count_info	      7431	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	CALL_11
0xed5d	    0x48018548feff	           add qword [rbp - 0x1b8], rax 	      7431	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	CALL_11
0xed64	    0x488b05000000	            mov rax, qword [0x0400edab] 	      7433	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0xed6b	          0x488b00	                    mov rax, qword [rax]	      7433	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0xed6e	    0x483b8530feff	            cmp rax, qword [rbp - 0x1d0]	      7433	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0xed75	     0xf850d010000	                           jne 0x400eec8	      7433	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0xed7b	    0x488b05000000	            mov rax, qword [0x0400edc2] 	      7434	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0xed82	    0x8b8058140000	          mov eax, dword [rax + 0x1458] 	      7434	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0xed88	            0x85c0	                           test eax, eax	      7434	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0xed8a	     0xf85f8000000	                           jne 0x400eec8	      7434	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0xed90	    0x488b05000000	            mov rax, qword [0x0400edd7] 	      7435	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0xed97	    0x8b80f0130000	          mov eax, dword [rax + 0x13f0] 	      7435	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0xed9d	            0x85c0	                           test eax, eax	      7435	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0xed9f	            0x7515	                           jne 0x400edf6	      7435	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0xeda1	    0x488b05000000	            mov rax, qword [0x0400ede8] 	      7435	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0xeda8	    0x8b805c140000	          mov eax, dword [rax + 0x145c] 	      7435	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0xedae	            0x85c0	                           test eax, eax	      7435	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0xedb0	     0xf85d2000000	                           jne 0x400eec8	      7435	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0xedb6	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	      7436	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14	CALL_12
0xedbd	          0x4889c7	                            mov rdi, rax	      7436	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14	CALL_12
0xedc0	      0xe800000000	                          call 0x400ee05	      7436	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14	CALL_12
0xedc5	    0x483b8568feff	            cmp rax, qword [rbp - 0x198]	      7436	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14	CALL_12
0xedcc	     0xf8db6000000	                           jge 0x400eec8	      7436	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14	CALL_12
0xedd2	    0x8b8504feffff	            mov eax, dword [rbp - 0x1fc]	      7437	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0xedd8	            0x4898	                                    cdqe	      7437	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0xedda	    0x48298548feff	            sub qword [rbp - 0x1b8], rax	      7437	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12	IF_13	IF_14
0xede1	      0xe9a2000000	                           jmp 0x400eec8	      7396	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0xede6	    0x488b05000000	            mov rax, qword [0x0400ee2d] 	      7443	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0xeded	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7443	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0xedf1	    0x483b8530feff	            cmp rax, qword [rbp - 0x1d0]	      7443	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0xedf8	     0xf858b000000	                           jne 0x400eec9	      7443	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0xedfe	    0x488b9528feff	            mov rdx, qword [rbp - 0x1d8]	      7445	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0xee05	    0x488b8520feff	            mov rax, qword [rbp - 0x1e0]	      7445	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0xee0c	          0x4801d0	                            add rax, rdx	      7445	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0xee0f	    0x48898528feff	            mov qword [rbp - 0x1d8], rax	      7445	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0xee16	    0x488b9518feff	            mov rdx, qword [rbp - 0x1e8]	      7446	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0xee1d	    0x488b8510feff	            mov rax, qword [rbp - 0x1f0]	      7446	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0xee24	          0x4801d0	                            add rax, rdx	      7446	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0xee27	    0x48898518feff	            mov qword [rbp - 0x1e8], rax	      7446	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0xee2e	    0x488b05000000	            mov rax, qword [0x0400ee75] 	      7450	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0xee35	          0x8b4040	            mov eax, dword [rax + 0x40] 	      7450	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0xee38	          0x83c001	                              add eax, 1	      7450	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0xee3b	          0x4863d8	                         movsxd rbx, eax	      7448	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0xee3e	    0x488b8530feff	            mov rax, qword [rbp - 0x1d0]	      7448	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0xee45	          0x4889c7	                            mov rdi, rax	      7448	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0xee48	      0xe800000000	                          call 0x400ee8d	      7448	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0xee4d	          0x4889c7	                            mov rdi, rax	      7448	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0xee50	    0x8b8d04feffff	            mov ecx, dword [rbp - 0x1fc]	      7448	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0xee56	    0x488d9518feff	                  lea rdx, [rbp - 0x1e8]	      7448	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0xee5d	    0x488d8528feff	                  lea rax, [rbp - 0x1d8]	      7448	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0xee64	          0x4189c8	                            mov r8d, ecx	      7448	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0xee67	          0x4889d9	                            mov rcx, rbx	      7448	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0xee6a	          0x4889c6	                            mov rsi, rax	      7448	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0xee6d	      0xe8a1f8ffff	                call sym.line_count_info	      7448	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0xee72	          0x4889c2	                            mov rdx, rax	      7448	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15	CALL_14
0xee75	    0x488b8538feff	            mov rax, qword [rbp - 0x1c8]	      7447	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0xee7c	          0x4801d0	                            add rax, rdx	      7447	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0xee7f	    0x48898548feff	            mov qword [rbp - 0x1b8], rax	      7447	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0xee86	            0xeb01	                           jmp 0x400eec9	      7447	ops.c	FUNCTION_91	ELSE_1	FOR_1	ELSE_4	IF_15
0xee88	              0x90	                                     nop	      7396	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_12
0xee89	    0x488b8530feff	            mov rax, qword [rbp - 0x1d0]	      7455	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0xee90	          0x4889c7	                            mov rdi, rax	      7455	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0xee93	      0xe800000000	                          call 0x400eed8	      7455	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0xee98	          0x4889c7	                            mov rdi, rax	      7455	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0xee9b	    0x8b8d04feffff	            mov ecx, dword [rbp - 0x1fc]	      7455	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0xeea1	    0x488d9510feff	                  lea rdx, [rbp - 0x1f0]	      7455	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0xeea8	    0x488d8520feff	                  lea rax, [rbp - 0x1e0]	      7455	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0xeeaf	          0x4189c8	                            mov r8d, ecx	      7455	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0xeeb2	      0xb9ffffff7f	                     mov ecx, 0x7fffffff	      7455	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0xeeb7	          0x4889c6	                            mov rsi, rax	      7455	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0xeeba	      0xe854f8ffff	                call sym.line_count_info	      7455	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0xeebf	    0x48018538feff	           add qword [rbp - 0x1c8], rax 	      7455	ops.c	FUNCTION_91	ELSE_1	FOR_1	CALL_16
0xeec6	    0x48838530feff	              add qword [rbp - 0x1d0], 1	      7382	ops.c	FUNCTION_91	ELSE_1	FOR_1
0xeece	    0x488b05000000	            mov rax, qword [0x0400ef15] 	      7382	ops.c	FUNCTION_91	ELSE_1	FOR_1
0xeed5	          0x488b00	                    mov rax, qword [rax]	      7382	ops.c	FUNCTION_91	ELSE_1	FOR_1
0xeed8	    0x483b8530feff	            cmp rax, qword [rbp - 0x1d0]	      7382	ops.c	FUNCTION_91	ELSE_1	FOR_1
0xeedf	     0xf8d9bfcffff	                           jge 0x400ebc0	      7382	ops.c	FUNCTION_91	ELSE_1	FOR_1
0xeee5	    0x488b05000000	            mov rax, qword [0x0400ef2c] 	      7461	ops.c	FUNCTION_91	ELSE_1	IF_16
0xeeec	    0x8b8058140000	          mov eax, dword [rax + 0x1458] 	      7461	ops.c	FUNCTION_91	ELSE_1	IF_16
0xeef2	            0x85c0	                           test eax, eax	      7461	ops.c	FUNCTION_91	ELSE_1	IF_16
0xeef4	            0x7531	                           jne 0x400ef67	      7461	ops.c	FUNCTION_91	ELSE_1	IF_16
0xeef6	    0x488b05000000	            mov rax, qword [0x0400ef3d] 	      7461	ops.c	FUNCTION_91	ELSE_1	IF_16
0xeefd	    0x8b80f0130000	          mov eax, dword [rax + 0x13f0] 	      7461	ops.c	FUNCTION_91	ELSE_1	IF_16
0xef03	            0x85c0	                           test eax, eax	      7461	ops.c	FUNCTION_91	ELSE_1	IF_16
0xef05	            0x7511	                           jne 0x400ef58	      7461	ops.c	FUNCTION_91	ELSE_1	IF_16
0xef07	    0x488b05000000	            mov rax, qword [0x0400ef4e] 	      7461	ops.c	FUNCTION_91	ELSE_1	IF_16
0xef0e	    0x8b805c140000	          mov eax, dword [rax + 0x145c] 	      7461	ops.c	FUNCTION_91	ELSE_1	IF_16
0xef14	            0x85c0	                           test eax, eax	      7461	ops.c	FUNCTION_91	ELSE_1	IF_16
0xef16	            0x750f	                           jne 0x400ef67	      7461	ops.c	FUNCTION_91	ELSE_1	IF_16
0xef18	    0x8b8504feffff	            mov eax, dword [rbp - 0x1fc]	      7462	ops.c	FUNCTION_91	ELSE_1	IF_16
0xef1e	            0x4898	                                    cdqe	      7462	ops.c	FUNCTION_91	ELSE_1	IF_16
0xef20	    0x48298538feff	            sub qword [rbp - 0x1c8], rax	      7462	ops.c	FUNCTION_91	ELSE_1	IF_16
0xef27	    0x4883bdf8fdff	              cmp qword [rbp - 0x208], 0	      7464	ops.c	FUNCTION_91	ELSE_1	IF_17
0xef2f	     0xf8561030000	                           jne 0x400f2d6	      7464	ops.c	FUNCTION_91	ELSE_1	IF_17
0xef35	    0x8b0500000000	            mov eax, dword [0x0400ef7b] 	      7466	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18
0xef3b	            0x85c0	                           test eax, eax	      7466	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18
0xef3d	     0xf84a4010000	                            je 0x400f127	      7466	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18
0xef43	    0x8b0500000000	            mov eax, dword [0x0400ef89] 	      7468	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0xef49	          0x83f816	                           cmp eax, 0x16	      7468	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0xef4c	     0xf8585000000	                           jne 0x400f017	      7468	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0xef52	    0x488b05000000	            mov rax, qword [0x0400ef99] 	      7468	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0xef59	          0x8b4048	            mov eax, dword [rax + 0x48] 	      7468	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0xef5c	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      7468	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0xef61	            0x7474	                            je 0x400f017	      7468	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0xef63	    0x488b05000000	            mov rax, qword [0x0400efaa] 	      7470	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0xef6a	    0x488d9590feff	                  lea rdx, [rbp - 0x170]	      7470	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0xef71	        0x488d7a08	                      lea rdi, [rdx + 8]	      7470	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0xef75	    0x488d9580feff	                  lea rdx, [rbp - 0x180]	      7470	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0xef7c	        0x488d4a08	                      lea rcx, [rdx + 8]	      7470	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0xef80	    0x488d9590feff	                  lea rdx, [rbp - 0x170]	      7470	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0xef87	    0x488db580feff	                  lea rsi, [rbp - 0x180]	      7470	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0xef8e	          0x4989f8	                             mov r8, rdi	      7470	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0xef91	          0x4889c7	                            mov rdi, rax	      7470	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0xef94	      0xe800000000	                          call 0x400efd9	      7470	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_17
0xef99	    0x8b9548ffffff	             mov edx, dword [rbp - 0xb8]	      7473	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0xef9f	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      7473	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0xefa5	            0x29c2	                            sub edx, eax	      7473	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0xefa7	            0x89d0	                            mov eax, edx	      7473	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0xefa9	          0x83c001	                              add eax, 1	      7473	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19
0xefac	          0x4863d8	                         movsxd rbx, eax	      7472	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0xefaf	      0xbf00000000	                              mov edi, 0	      7472	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0xefb4	      0xe800000000	                          call 0x400eff9	      7472	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0xefb9	          0x4889c2	                            mov rdx, rax	      7472	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0xefbc	        0x488d4590	                   lea rax, [rbp - 0x70]	      7472	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0xefc0	          0x4889d9	                            mov rcx, rbx	      7472	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0xefc3	      0xbe32000000	                           mov esi, 0x32	      7472	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0xefc8	          0x4889c7	                            mov rdi, rax	      7472	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0xefcb	      0xb800000000	                              mov eax, 0	      7472	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0xefd0	      0xe800000000	                          call 0x400f015	      7472	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0xefd5	            0xeb04	                           jmp 0x400f01b	      7472	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_19	CALL_19
0xefd7	        0xc6459000	                mov byte [rbp - 0x70], 0	      7476	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_5
0xefdb	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      7478	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0xefe2	    0x483b8548feff	            cmp rax, qword [rbp - 0x1b8]	      7478	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0xefe9	            0x757d	                           jne 0x400f0a8	      7478	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0xefeb	    0x488b8510feff	            mov rax, qword [rbp - 0x1f0]	      7479	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0xeff2	    0x483b8538feff	            cmp rax, qword [rbp - 0x1c8]	      7479	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0xeff9	            0x756d	                           jne 0x400f0a8	      7479	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0xeffb	    0x4c8ba520feff	            mov r12, qword [rbp - 0x1e0]	      7480	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0xf002	    0x488b9d28feff	            mov rbx, qword [rbp - 0x1d8]	      7480	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0xf009	    0x488b05000000	            mov rax, qword [0x0400f050] 	      7483	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0xf010	          0x4c8b28	                    mov r13, qword [rax]	      7483	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20
0xf013	      0xbf00000000	                              mov edi, 0	      7480	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0xf018	      0xe800000000	                          call 0x400f05d	      7480	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0xf01d	          0x4889c6	                            mov rsi, rax	      7480	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0xf020	    0x488b05000000	            mov rax, qword [0x0400f067] 	      7480	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0xf027	    0x488b8d58feff	            mov rcx, qword [rbp - 0x1a8]	      7480	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0xf02e	        0x488d5590	                   lea rdx, [rbp - 0x70]	      7480	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0xf032	    0xffb538feffff	                push qword [rbp - 0x1c8]	      7480	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0xf038	    0xffb548feffff	                push qword [rbp - 0x1b8]	      7480	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0xf03e	            0x4154	                                push r12	      7480	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0xf040	              0x53	                                push rbx	      7480	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0xf041	          0x4d89e9	                             mov r9, r13	      7480	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0xf044	          0x4989c8	                             mov r8, rcx	      7480	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0xf047	          0x4889d1	                            mov rcx, rdx	      7480	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0xf04a	          0x4889f2	                            mov rdx, rsi	      7480	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0xf04d	      0xbe01040000	                          mov esi, 0x401	      7480	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0xf052	          0x4889c7	                            mov rdi, rax	      7480	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0xf055	      0xb800000000	                              mov eax, 0	      7480	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0xf05a	      0xe800000000	                          call 0x400f09f	      7480	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0xf05f	        0x4883c420	                           add rsp, 0x20	      7480	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0xf063	      0xe92e020000	                           jmp 0x400f2d6	      7480	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	IF_20	CALL_20
0xf068	    0x4c8bb510feff	            mov r14, qword [rbp - 0x1f0]	      7487	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0xf06f	    0x4c8bad18feff	            mov r13, qword [rbp - 0x1e8]	      7487	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0xf076	    0x4c8ba520feff	            mov r12, qword [rbp - 0x1e0]	      7487	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0xf07d	    0x488b9d28feff	            mov rbx, qword [rbp - 0x1d8]	      7487	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0xf084	    0x488b05000000	            mov rax, qword [0x0400f0cb] 	      7490	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6
0xf08b	          0x4c8b38	                    mov r15, qword [rax]	      7490	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6
0xf08e	      0xbf00000000	                              mov edi, 0	      7487	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0xf093	      0xe800000000	                          call 0x400f0d8	      7487	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0xf098	          0x4889c6	                            mov rsi, rax	      7487	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0xf09b	    0x488b05000000	            mov rax, qword [0x0400f0e2] 	      7487	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0xf0a2	    0x488b8d58feff	            mov rcx, qword [rbp - 0x1a8]	      7487	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0xf0a9	        0x488d5590	                   lea rdx, [rbp - 0x70]	      7487	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0xf0ad	    0xffb538feffff	                push qword [rbp - 0x1c8]	      7487	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0xf0b3	    0xffb548feffff	                push qword [rbp - 0x1b8]	      7487	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0xf0b9	            0x4156	                                push r14	      7487	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0xf0bb	            0x4155	                                push r13	      7487	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0xf0bd	            0x4154	                                push r12	      7487	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0xf0bf	              0x53	                                push rbx	      7487	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0xf0c0	          0x4d89f9	                             mov r9, r15	      7487	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0xf0c3	          0x4989c8	                             mov r8, rcx	      7487	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0xf0c6	          0x4889d1	                            mov rcx, rdx	      7487	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0xf0c9	          0x4889f2	                            mov rdx, rsi	      7487	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0xf0cc	      0xbe01040000	                          mov esi, 0x401	      7487	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0xf0d1	          0x4889c7	                            mov rdi, rax	      7487	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0xf0d4	      0xb800000000	                              mov eax, 0	      7487	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0xf0d9	      0xe800000000	                          call 0x400f11e	      7487	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0xf0de	        0x4883c430	                           add rsp, 0x30	      7487	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0xf0e2	      0xe9af010000	                           jmp 0x400f2d6	      7487	ops.c	FUNCTION_91	ELSE_1	IF_17	IF_18	ELSE_6	CALL_22
0xf0e7	      0xe800000000	                          call 0x400f12c	      7497	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_24
0xf0ec	    0x48898578feff	            mov qword [rbp - 0x188], rax	      7497	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_24
0xf0f3	      0xe800000000	                          call 0x400f138	      7498	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_25
0xf0f8	    0x488b05000000	            mov rax, qword [0x0400f13f] 	      7500	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7
0xf0ff	    0x8b80d8000000	            mov eax, dword [rax + 0xd8] 	      7500	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7
0xf105	          0x8d4801	                      lea ecx, [rax + 1]	      7499	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0xf108	    0x488b05000000	            mov rax, qword [0x0400f14f] 	      7499	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0xf10f	          0x8b4040	            mov eax, dword [rax + 0x40] 	      7499	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0xf112	          0x8d5001	                      lea edx, [rax + 1]	      7499	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0xf115	        0x488d4590	                   lea rax, [rbp - 0x70]	      7499	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0xf119	      0xbe32000000	                           mov esi, 0x32	      7499	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0xf11e	          0x4889c7	                            mov rdi, rax	      7499	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0xf121	      0xe800000000	                          call 0x400f166	      7499	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_26
0xf126	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      7501	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0xf12d	          0x4889c7	                            mov rdi, rax	      7501	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0xf130	      0xe800000000	                          call 0x400f175	      7501	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0xf135	            0x89c3	                            mov ebx, eax	      7501	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0xf137	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      7501	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0xf13e	          0x4889c7	                            mov rdi, rax	      7501	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0xf141	      0xe800000000	                          call 0x400f186	      7501	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0xf146	            0x89c2	                            mov edx, eax	      7501	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0xf148	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	      7501	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0xf14f	            0x89d9	                            mov ecx, ebx	      7501	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0xf151	      0xbe28000000	                           mov esi, 0x28	      7501	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0xf156	          0x4889c7	                            mov rdi, rax	      7501	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0xf159	      0xe800000000	                          call 0x400f19e	      7501	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	CALL_28
0xf15e	    0x488b8518feff	            mov rax, qword [rbp - 0x1e8]	      7504	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0xf165	    0x483b8548feff	            cmp rax, qword [rbp - 0x1b8]	      7504	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0xf16c	     0xf858e000000	                           jne 0x400f240	      7504	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0xf172	    0x488b8510feff	            mov rax, qword [rbp - 0x1f0]	      7505	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0xf179	    0x483b8538feff	            cmp rax, qword [rbp - 0x1c8]	      7505	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0xf180	            0x757e	                           jne 0x400f240	      7505	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0xf182	    0x4c8bad20feff	            mov r13, qword [rbp - 0x1e0]	      7506	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0xf189	    0x4c8ba528feff	            mov r12, qword [rbp - 0x1d8]	      7506	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0xf190	    0x488b05000000	            mov rax, qword [0x0400f1d7] 	      7510	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0xf197	          0x488b18	                    mov rbx, qword [rax]	      7510	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0xf19a	    0x488b05000000	            mov rax, qword [0x0400f1e1] 	      7509	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0xf1a1	        0x4c8b7038	            mov r14, qword [rax + 0x38] 	      7509	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21
0xf1a5	      0xbf00000000	                              mov edi, 0	      7506	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0xf1aa	      0xe800000000	                          call 0x400f1ef	      7506	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0xf1af	          0x4889c6	                            mov rsi, rax	      7506	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0xf1b2	    0x488b05000000	            mov rax, qword [0x0400f1f9] 	      7506	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0xf1b9	    0x488d8d60ffff	                   lea rcx, [rbp - 0xa0]	      7506	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0xf1c0	        0x488d5590	                   lea rdx, [rbp - 0x70]	      7506	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0xf1c4	        0x4883ec08	                              sub rsp, 8	      7506	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0xf1c8	    0xffb538feffff	                push qword [rbp - 0x1c8]	      7506	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0xf1ce	    0xffb548feffff	                push qword [rbp - 0x1b8]	      7506	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0xf1d4	            0x4155	                                push r13	      7506	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0xf1d6	            0x4154	                                push r12	      7506	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0xf1d8	              0x53	                                push rbx	      7506	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0xf1d9	          0x4d89f1	                             mov r9, r14	      7506	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0xf1dc	          0x4989c8	                             mov r8, rcx	      7506	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0xf1df	          0x4889d1	                            mov rcx, rdx	      7506	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0xf1e2	          0x4889f2	                            mov rdx, rsi	      7506	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0xf1e5	      0xbe01040000	                          mov esi, 0x401	      7506	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0xf1ea	          0x4889c7	                            mov rdi, rax	      7506	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0xf1ed	      0xb800000000	                              mov eax, 0	      7506	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0xf1f2	      0xe800000000	                          call 0x400f237	      7506	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0xf1f7	        0x4883c430	                           add rsp, 0x30	      7506	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0xf1fb	      0xe996000000	                           jmp 0x400f2d6	      7506	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	IF_21	CALL_30
0xf200	    0x4c8bbd10feff	            mov r15, qword [rbp - 0x1f0]	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0xf207	    0x4c8bb518feff	            mov r14, qword [rbp - 0x1e8]	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0xf20e	    0x4c8bad20feff	            mov r13, qword [rbp - 0x1e0]	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0xf215	    0x4c8ba528feff	            mov r12, qword [rbp - 0x1d8]	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0xf21c	    0x488b05000000	            mov rax, qword [0x0400f263] 	      7518	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8
0xf223	          0x488b18	                    mov rbx, qword [rax]	      7518	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8
0xf226	    0x488b05000000	            mov rax, qword [0x0400f26d] 	      7517	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8
0xf22d	        0x488b4038	            mov rax, qword [rax + 0x38] 	      7517	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8
0xf231	    0x488985f0fdff	            mov qword [rbp - 0x210], rax	      7517	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8
0xf238	      0xbf00000000	                              mov edi, 0	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0xf23d	      0xe800000000	                          call 0x400f282	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0xf242	          0x4889c6	                            mov rsi, rax	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0xf245	    0x488b05000000	            mov rax, qword [0x0400f28c] 	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0xf24c	    0x488d8d60ffff	                   lea rcx, [rbp - 0xa0]	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0xf253	        0x488d5590	                   lea rdx, [rbp - 0x70]	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0xf257	        0x4883ec08	                              sub rsp, 8	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0xf25b	    0xffb538feffff	                push qword [rbp - 0x1c8]	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0xf261	    0xffb548feffff	                push qword [rbp - 0x1b8]	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0xf267	            0x4157	                                push r15	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0xf269	            0x4156	                                push r14	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0xf26b	            0x4155	                                push r13	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0xf26d	            0x4154	                                push r12	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0xf26f	              0x53	                                push rbx	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0xf270	    0x4c8b8df0fdff	             mov r9, qword [rbp - 0x210]	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0xf277	          0x4989c8	                             mov r8, rcx	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0xf27a	          0x4889d1	                            mov rcx, rdx	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0xf27d	          0x4889f2	                            mov rdx, rsi	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0xf280	      0xbe01040000	                          mov esi, 0x401	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0xf285	          0x4889c7	                            mov rdi, rax	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0xf288	      0xb800000000	                              mov eax, 0	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0xf28d	      0xe800000000	                          call 0x400f2d2	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0xf292	        0x4883c440	                           add rsp, 0x40	      7514	ops.c	FUNCTION_91	ELSE_1	IF_17	ELSE_7	ELSE_8	CALL_32
0xf296	      0xe800000000	                          call 0x400f2db	      7526	ops.c	FUNCTION_91	ELSE_1	CALL_34
0xf29b	            0x4898	                                    cdqe	      7526	ops.c	FUNCTION_91	ELSE_1	CALL_34
0xf29d	    0x48898540feff	            mov qword [rbp - 0x1c0], rax	      7526	ops.c	FUNCTION_91	ELSE_1	CALL_34
0xf2a4	    0x4883bd40feff	              cmp qword [rbp - 0x1c0], 0	      7527	ops.c	FUNCTION_91	ELSE_1	IF_22
0xf2ac	            0x7e43	                           jle 0x400f331	      7527	ops.c	FUNCTION_91	ELSE_1	IF_22
0xf2ae	      0xbf00000000	                              mov edi, 0	      7528	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0xf2b3	      0xe800000000	                          call 0x400f2f8	      7528	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0xf2b8	          0x4989c4	                            mov r12, rax	      7528	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0xf2bb	    0x488b1d000000	            mov rbx, qword [0x0400f302] 	      7528	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0xf2c2	    0x488b05000000	            mov rax, qword [0x0400f309] 	      7528	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0xf2c9	          0x4889c7	                            mov rdi, rax	      7528	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0xf2cc	      0xe800000000	                          call 0x400f311	      7528	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0xf2d1	        0x488d3c03	                    lea rdi, [rbx + rax]	      7528	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0xf2d5	    0x488b8540feff	            mov rax, qword [rbp - 0x1c0]	      7528	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0xf2dc	          0x4889c1	                            mov rcx, rax	      7528	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0xf2df	          0x4c89e2	                            mov rdx, r12	      7528	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0xf2e2	      0xbe01040000	                          mov esi, 0x401	      7528	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0xf2e7	      0xb800000000	                              mov eax, 0	      7528	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0xf2ec	      0xe800000000	                          call 0x400f331	      7528	ops.c	FUNCTION_91	ELSE_1	IF_22	CALL_36
0xf2f1	    0x4883bdf8fdff	              cmp qword [rbp - 0x208], 0	      7531	ops.c	FUNCTION_91	ELSE_1	IF_23
0xf2f9	            0x7536	                           jne 0x400f371	      7531	ops.c	FUNCTION_91	ELSE_1	IF_23
0xf2fb	    0x488b05000000	            mov rax, qword [0x0400f342] 	      7534	ops.c	FUNCTION_91	ELSE_1	IF_23
0xf302	    0x48898578feff	            mov qword [rbp - 0x188], rax	      7534	ops.c	FUNCTION_91	ELSE_1	IF_23
0xf309	    0x48c705000000	               mov qword [0x0400f354], 0	      7535	ops.c	FUNCTION_91	ELSE_1	IF_23
0xf314	    0x488b05000000	            mov rax, qword [0x0400f35b] 	      7536	ops.c	FUNCTION_91	ELSE_1	IF_23	CALL_38
0xf31b	          0x4889c7	                            mov rdi, rax	      7536	ops.c	FUNCTION_91	ELSE_1	IF_23	CALL_38
0xf31e	      0xe800000000	                          call 0x400f363	      7536	ops.c	FUNCTION_91	ELSE_1	IF_23	CALL_38
0xf323	    0x488b8578feff	            mov rax, qword [rbp - 0x188]	      7537	ops.c	FUNCTION_91	ELSE_1	IF_23
0xf32a	    0x488905000000	            mov qword [0x0400f371], rax 	      7537	ops.c	FUNCTION_91	ELSE_1	IF_23
0xf331	    0x4883bdf8fdff	              cmp qword [rbp - 0x208], 0	      7541	ops.c	FUNCTION_91	IF_24
0xf339	     0xf8400010000	                            je 0x400f47f	      7541	ops.c	FUNCTION_91	IF_24
0xf33f	    0x488b9520feff	            mov rdx, qword [rbp - 0x1e0]	      7543	ops.c	FUNCTION_91	IF_24	CALL_39
0xf346	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	      7543	ops.c	FUNCTION_91	IF_24	CALL_39
0xf34d	      0xb900000000	                              mov ecx, 0	      7543	ops.c	FUNCTION_91	IF_24	CALL_39
0xf352	      0xbe00000000	                              mov esi, 0	      7543	ops.c	FUNCTION_91	IF_24	CALL_39
0xf357	          0x4889c7	                            mov rdi, rax	      7543	ops.c	FUNCTION_91	IF_24	CALL_39
0xf35a	      0xe800000000	                          call 0x400f39f	      7543	ops.c	FUNCTION_91	IF_24	CALL_39
0xf35f	    0x488b9510feff	            mov rdx, qword [rbp - 0x1f0]	      7544	ops.c	FUNCTION_91	IF_24	CALL_40
0xf366	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	      7544	ops.c	FUNCTION_91	IF_24	CALL_40
0xf36d	      0xb900000000	                              mov ecx, 0	      7544	ops.c	FUNCTION_91	IF_24	CALL_40
0xf372	      0xbe00000000	                              mov esi, 0	      7544	ops.c	FUNCTION_91	IF_24	CALL_40
0xf377	          0x4889c7	                            mov rdi, rax	      7544	ops.c	FUNCTION_91	IF_24	CALL_40
0xf37a	      0xe800000000	                          call 0x400f3bf	      7544	ops.c	FUNCTION_91	IF_24	CALL_40
0xf37f	    0x488b9538feff	            mov rdx, qword [rbp - 0x1c8]	      7545	ops.c	FUNCTION_91	IF_24	CALL_41
0xf386	    0x488b8540feff	            mov rax, qword [rbp - 0x1c0]	      7545	ops.c	FUNCTION_91	IF_24	CALL_41
0xf38d	          0x4801c2	                            add rdx, rax	      7545	ops.c	FUNCTION_91	IF_24	CALL_41
0xf390	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	      7545	ops.c	FUNCTION_91	IF_24	CALL_41
0xf397	      0xb900000000	                              mov ecx, 0	      7545	ops.c	FUNCTION_91	IF_24	CALL_41
0xf39c	      0xbe00000000	                              mov esi, 0	      7545	ops.c	FUNCTION_91	IF_24	CALL_41
0xf3a1	          0x4889c7	                            mov rdi, rax	      7545	ops.c	FUNCTION_91	IF_24	CALL_41
0xf3a4	      0xe800000000	                          call 0x400f3e9	      7545	ops.c	FUNCTION_91	IF_24	CALL_41
0xf3a9	    0x8b0500000000	            mov eax, dword [0x0400f3ef] 	      7550	ops.c	FUNCTION_91	IF_24	CALL_42
0xf3af	            0x85c0	                           test eax, eax	      7550	ops.c	FUNCTION_91	IF_24	CALL_42
0xf3b1	            0x7407	                            je 0x400f3fa	      7550	ops.c	FUNCTION_91	IF_24	CALL_42
0xf3b3	      0xbe00000000	                              mov esi, 0	      7550	ops.c	FUNCTION_91	IF_24	CALL_42
0xf3b8	            0xeb05	                           jmp 0x400f3ff	      7550	ops.c	FUNCTION_91	IF_24	CALL_42
0xf3ba	      0xbe00000000	                              mov esi, 0	      7550	ops.c	FUNCTION_91	IF_24	CALL_42
0xf3bf	    0x488b9548feff	            mov rdx, qword [rbp - 0x1b8]	      7550	ops.c	FUNCTION_91	IF_24	CALL_42
0xf3c6	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	      7550	ops.c	FUNCTION_91	IF_24	CALL_42
0xf3cd	      0xb900000000	                              mov ecx, 0	      7550	ops.c	FUNCTION_91	IF_24	CALL_42
0xf3d2	          0x4889c7	                            mov rdi, rax	      7550	ops.c	FUNCTION_91	IF_24	CALL_42
0xf3d5	      0xe800000000	                          call 0x400f41a	      7550	ops.c	FUNCTION_91	IF_24	CALL_42
0xf3da	    0x488b9518feff	            mov rdx, qword [rbp - 0x1e8]	      7552	ops.c	FUNCTION_91	IF_24	CALL_43
0xf3e1	    0x8b0500000000	            mov eax, dword [0x0400f427] 	      7552	ops.c	FUNCTION_91	IF_24	CALL_43
0xf3e7	            0x85c0	                           test eax, eax	      7552	ops.c	FUNCTION_91	IF_24	CALL_43
0xf3e9	            0x7407	                            je 0x400f432	      7552	ops.c	FUNCTION_91	IF_24	CALL_43
0xf3eb	      0xbe00000000	                              mov esi, 0	      7552	ops.c	FUNCTION_91	IF_24	CALL_43
0xf3f0	            0xeb05	                           jmp 0x400f437	      7552	ops.c	FUNCTION_91	IF_24	CALL_43
0xf3f2	      0xbe00000000	                              mov esi, 0	      7552	ops.c	FUNCTION_91	IF_24	CALL_43
0xf3f7	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	      7552	ops.c	FUNCTION_91	IF_24	CALL_43
0xf3fe	      0xb900000000	                              mov ecx, 0	      7552	ops.c	FUNCTION_91	IF_24	CALL_43
0xf403	          0x4889c7	                            mov rdi, rax	      7552	ops.c	FUNCTION_91	IF_24	CALL_43
0xf406	      0xe800000000	                          call 0x400f44b	      7552	ops.c	FUNCTION_91	IF_24	CALL_43
0xf40b	    0x488b9528feff	            mov rdx, qword [rbp - 0x1d8]	      7554	ops.c	FUNCTION_91	IF_24	CALL_44
0xf412	    0x8b0500000000	            mov eax, dword [0x0400f458] 	      7554	ops.c	FUNCTION_91	IF_24	CALL_44
0xf418	            0x85c0	                           test eax, eax	      7554	ops.c	FUNCTION_91	IF_24	CALL_44
0xf41a	            0x7407	                            je 0x400f463	      7554	ops.c	FUNCTION_91	IF_24	CALL_44
0xf41c	      0xbe00000000	                              mov esi, 0	      7554	ops.c	FUNCTION_91	IF_24	CALL_44
0xf421	            0xeb05	                           jmp 0x400f468	      7554	ops.c	FUNCTION_91	IF_24	CALL_44
0xf423	      0xbe00000000	                              mov esi, 0	      7554	ops.c	FUNCTION_91	IF_24	CALL_44
0xf428	    0x488b85f8fdff	            mov rax, qword [rbp - 0x208]	      7554	ops.c	FUNCTION_91	IF_24	CALL_44
0xf42f	      0xb900000000	                              mov ecx, 0	      7554	ops.c	FUNCTION_91	IF_24	CALL_44
0xf434	          0x4889c7	                            mov rdi, rax	      7554	ops.c	FUNCTION_91	IF_24	CALL_44
0xf437	      0xe800000000	                          call 0x400f47c	      7554	ops.c	FUNCTION_91	IF_24	CALL_44
0xf43c	            0xeb01	                           jmp 0x400f47f	      7554	ops.c	FUNCTION_91	IF_24	CALL_44
0xf43e	              0x90	                                     nop	      7389	ops.c	FUNCTION_91	ELSE_1	FOR_1	IF_10	IF_11
0xf43f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7558	ops.c	FUNCTION_91
0xf443	    0x644833042528	                xor rax, qword fs:[0x28]	      7558	ops.c	FUNCTION_91
0xf44c	            0x7405	                            je 0x400f493	      7558	ops.c	FUNCTION_91
0xf44e	      0xe800000000	                          call 0x400f493	      7558	ops.c	FUNCTION_91
0xf453	        0x488d65d8	                   lea rsp, [rbp - 0x28]	      7558	ops.c	FUNCTION_91
0xf457	              0x5b	                                 pop rbx	      7558	ops.c	FUNCTION_91
0xf458	            0x415c	                                 pop r12	      7558	ops.c	FUNCTION_91
0xf45a	            0x415d	                                 pop r13	      7558	ops.c	FUNCTION_91
0xf45c	            0x415e	                                 pop r14	      7558	ops.c	FUNCTION_91
0xf45e	            0x415f	                                 pop r15	      7558	ops.c	FUNCTION_91
0xf460	              0x5d	                                 pop rbp	      7558	ops.c	FUNCTION_91
0xf461	              0xc3	                                     ret	      7558	ops.c	FUNCTION_91
stuff_yank	CALL,16:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,1:IF,5	117
0x19c6	              0x55	                                push rbp	      1137	ops.c	FUNCTION_22
0x19c7	          0x4889e5	                            mov rbp, rsp	      1137	ops.c	FUNCTION_22
0x19ca	              0x53	                                push rbx	      1137	ops.c	FUNCTION_22
0x19cb	        0x4883ec28	                           sub rsp, 0x28	      1137	ops.c	FUNCTION_22
0x19cf	          0x897ddc	             mov dword [rbp - 0x24], edi	      1137	ops.c	FUNCTION_22
0x19d2	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1137	ops.c	FUNCTION_22
0x19d6	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1142	ops.c	FUNCTION_22	IF_1	CALL_1
0x19da	            0x7429	                            je 0x4001a45	      1142	ops.c	FUNCTION_22	IF_1	CALL_1
0x19dc	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1142	ops.c	FUNCTION_22	IF_1	CALL_1
0x19df	      0xbe01000000	                              mov esi, 1	      1142	ops.c	FUNCTION_22	IF_1	CALL_1
0x19e4	            0x89c7	                            mov edi, eax	      1142	ops.c	FUNCTION_22	IF_1	CALL_1
0x19e6	      0xe800000000	                          call 0x4001a2b	      1142	ops.c	FUNCTION_22	IF_1	CALL_1
0x19eb	            0x85c0	                           test eax, eax	      1142	ops.c	FUNCTION_22	IF_1	CALL_1
0x19ed	            0x7516	                           jne 0x4001a45	      1142	ops.c	FUNCTION_22	IF_1	CALL_1
0x19ef	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1144	ops.c	FUNCTION_22	IF_1	CALL_2
0x19f3	          0x4889c7	                            mov rdi, rax	      1144	ops.c	FUNCTION_22	IF_1	CALL_2
0x19f6	      0xe800000000	                          call 0x4001a3b	      1144	ops.c	FUNCTION_22	IF_1	CALL_2
0x19fb	      0xb800000000	                              mov eax, 0	      1145	ops.c	FUNCTION_22	IF_1
0x1a00	      0xe988010000	                           jmp 0x4001bcd	      1145	ops.c	FUNCTION_22	IF_1
0x1a05	        0x837ddc5f	           cmp dword [rbp - 0x24], 0x5f 	      1147	ops.c	FUNCTION_22	IF_2
0x1a09	            0x7516	                           jne 0x4001a61	      1147	ops.c	FUNCTION_22	IF_2
0x1a0b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1149	ops.c	FUNCTION_22	IF_2	CALL_3
0x1a0f	          0x4889c7	                            mov rdi, rax	      1149	ops.c	FUNCTION_22	IF_2	CALL_3
0x1a12	      0xe800000000	                          call 0x4001a57	      1149	ops.c	FUNCTION_22	IF_2	CALL_3
0x1a17	      0xb801000000	                              mov eax, 1	      1150	ops.c	FUNCTION_22	IF_2
0x1a1c	      0xe96c010000	                           jmp 0x4001bcd	      1150	ops.c	FUNCTION_22	IF_2
0x1a21	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1152	ops.c	FUNCTION_22	CALL_4
0x1a24	      0xbe01000000	                              mov esi, 1	      1152	ops.c	FUNCTION_22	CALL_4
0x1a29	            0x89c7	                            mov edi, eax	      1152	ops.c	FUNCTION_22	CALL_4
0x1a2b	      0xe800000000	                          call 0x4001a70	      1152	ops.c	FUNCTION_22	CALL_4
0x1a30	    0x8b0500000000	            mov eax, dword [0x04001a76] 	      1153	ops.c	FUNCTION_22	IF_3
0x1a36	            0x85c0	                           test eax, eax	      1153	ops.c	FUNCTION_22	IF_3
0x1a38	     0xf84db000000	                            je 0x4001b59	      1153	ops.c	FUNCTION_22	IF_3
0x1a3e	    0x488b05000000	            mov rax, qword [0x04001a85] 	      1153	ops.c	FUNCTION_22	IF_3
0x1a45	          0x488b00	                    mov rax, qword [rax]	      1153	ops.c	FUNCTION_22	IF_3
0x1a48	          0x4885c0	                           test rax, rax	      1153	ops.c	FUNCTION_22	IF_3
0x1a4b	     0xf84c8000000	                            je 0x4001b59	      1153	ops.c	FUNCTION_22	IF_3
0x1a51	    0x488b05000000	            mov rax, qword [0x04001a98] 	      1155	ops.c	FUNCTION_22	IF_3
0x1a58	          0x488b10	                    mov rdx, qword [rax]	      1155	ops.c	FUNCTION_22	IF_3
0x1a5b	    0x488b05000000	            mov rax, qword [0x04001aa2] 	      1155	ops.c	FUNCTION_22	IF_3
0x1a62	        0x488b4008	                mov rax, qword [rax + 8]	      1155	ops.c	FUNCTION_22	IF_3
0x1a66	        0x48c1e003	                              shl rax, 3	      1155	ops.c	FUNCTION_22	IF_3
0x1a6a	        0x4883e808	                              sub rax, 8	      1155	ops.c	FUNCTION_22	IF_3
0x1a6e	          0x4801d0	                            add rax, rdx	      1155	ops.c	FUNCTION_22	IF_3
0x1a71	        0x488945e0	             mov qword [rbp - 0x20], rax	      1155	ops.c	FUNCTION_22	IF_3
0x1a75	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1156	ops.c	FUNCTION_22	IF_3	CALL_7
0x1a79	          0x488b00	                    mov rax, qword [rax]	      1156	ops.c	FUNCTION_22	IF_3	CALL_7
0x1a7c	          0x4889c7	                            mov rdi, rax	      1156	ops.c	FUNCTION_22	IF_3	CALL_7
0x1a7f	      0xe800000000	                          call 0x4001ac4	      1156	ops.c	FUNCTION_22	IF_3	CALL_7
0x1a84	          0x4889c3	                            mov rbx, rax	      1156	ops.c	FUNCTION_22	IF_3	CALL_7
0x1a87	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1156	ops.c	FUNCTION_22	IF_3	CALL_7
0x1a8b	          0x4889c7	                            mov rdi, rax	      1156	ops.c	FUNCTION_22	IF_3	CALL_7
0x1a8e	      0xe800000000	                          call 0x4001ad3	      1156	ops.c	FUNCTION_22	IF_3	CALL_7
0x1a93	          0x4801d8	                            add rax, rbx	      1156	ops.c	FUNCTION_22	IF_3	CALL_7
0x1a96	        0x4883c001	                              add rax, 1	      1156	ops.c	FUNCTION_22	IF_3	CALL_7
0x1a9a	      0xbe01000000	                              mov esi, 1	      1156	ops.c	FUNCTION_22	IF_3	CALL_7
0x1a9f	          0x4889c7	                            mov rdi, rax	      1156	ops.c	FUNCTION_22	IF_3	CALL_7
0x1aa2	      0xe800000000	                          call 0x4001ae7	      1156	ops.c	FUNCTION_22	IF_3	CALL_7
0x1aa7	        0x488945e8	             mov qword [rbp - 0x18], rax	      1156	ops.c	FUNCTION_22	IF_3	CALL_7
0x1aab	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1157	ops.c	FUNCTION_22	IF_3	IF_4
0x1ab0	            0x7516	                           jne 0x4001b08	      1157	ops.c	FUNCTION_22	IF_3	IF_4
0x1ab2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1159	ops.c	FUNCTION_22	IF_3	IF_4	CALL_8
0x1ab6	          0x4889c7	                            mov rdi, rax	      1159	ops.c	FUNCTION_22	IF_3	IF_4	CALL_8
0x1ab9	      0xe800000000	                          call 0x4001afe	      1159	ops.c	FUNCTION_22	IF_3	IF_4	CALL_8
0x1abe	      0xb800000000	                              mov eax, 0	      1160	ops.c	FUNCTION_22	IF_3	IF_4
0x1ac3	      0xe9c5000000	                           jmp 0x4001bcd	      1160	ops.c	FUNCTION_22	IF_3	IF_4
0x1ac8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1162	ops.c	FUNCTION_22	IF_3	CALL_9
0x1acc	          0x488b10	                    mov rdx, qword [rax]	      1162	ops.c	FUNCTION_22	IF_3	CALL_9
0x1acf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1162	ops.c	FUNCTION_22	IF_3	CALL_9
0x1ad3	          0x4889d6	                            mov rsi, rdx	      1162	ops.c	FUNCTION_22	IF_3	CALL_9
0x1ad6	          0x4889c7	                            mov rdi, rax	      1162	ops.c	FUNCTION_22	IF_3	CALL_9
0x1ad9	      0xe800000000	                          call 0x4001b1e	      1162	ops.c	FUNCTION_22	IF_3	CALL_9
0x1ade	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1163	ops.c	FUNCTION_22	IF_3	CALL_10
0x1ae2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1163	ops.c	FUNCTION_22	IF_3	CALL_10
0x1ae6	          0x4889d6	                            mov rsi, rdx	      1163	ops.c	FUNCTION_22	IF_3	CALL_10
0x1ae9	          0x4889c7	                            mov rdi, rax	      1163	ops.c	FUNCTION_22	IF_3	CALL_10
0x1aec	      0xe800000000	                          call 0x4001b31	      1163	ops.c	FUNCTION_22	IF_3	CALL_10
0x1af1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1164	ops.c	FUNCTION_22	IF_3	CALL_11
0x1af5	          0x4889c7	                            mov rdi, rax	      1164	ops.c	FUNCTION_22	IF_3	CALL_11
0x1af8	      0xe800000000	                          call 0x4001b3d	      1164	ops.c	FUNCTION_22	IF_3	CALL_11
0x1afd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1165	ops.c	FUNCTION_22	IF_3	CALL_12
0x1b01	          0x488b00	                    mov rax, qword [rax]	      1165	ops.c	FUNCTION_22	IF_3	CALL_12
0x1b04	          0x4889c7	                            mov rdi, rax	      1165	ops.c	FUNCTION_22	IF_3	CALL_12
0x1b07	      0xe800000000	                          call 0x4001b4c	      1165	ops.c	FUNCTION_22	IF_3	CALL_12
0x1b0c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1166	ops.c	FUNCTION_22	IF_3
0x1b10	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1166	ops.c	FUNCTION_22	IF_3
0x1b14	          0x488910	                    mov qword [rax], rdx	      1166	ops.c	FUNCTION_22	IF_3
0x1b17	            0xeb6f	                           jmp 0x4001bc8	      1166	ops.c	FUNCTION_22	IF_3
0x1b19	      0xe82c3f0000	                  call sym.free_yank_all	      1170	ops.c	FUNCTION_22	ELSE_1	CALL_13
0x1b1e	    0x488b1d000000	            mov rbx, qword [0x04001b65] 	      1171	ops.c	FUNCTION_22	ELSE_1	IF_5
0x1b25	      0xbf08000000	                              mov edi, 8	      1172	ops.c	FUNCTION_22	ELSE_1	IF_5	CALL_14
0x1b2a	      0xe800000000	                          call 0x4001b6f	      1172	ops.c	FUNCTION_22	ELSE_1	IF_5	CALL_14
0x1b2f	          0x488903	                    mov qword [rbx], rax	      1171	ops.c	FUNCTION_22	ELSE_1	IF_5
0x1b32	          0x488b03	                    mov rax, qword [rbx]	      1171	ops.c	FUNCTION_22	ELSE_1	IF_5
0x1b35	          0x4885c0	                           test rax, rax	      1171	ops.c	FUNCTION_22	ELSE_1	IF_5
0x1b38	            0x7513	                           jne 0x4001b8d	      1171	ops.c	FUNCTION_22	ELSE_1	IF_5
0x1b3a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1174	ops.c	FUNCTION_22	ELSE_1	IF_5	CALL_15
0x1b3e	          0x4889c7	                            mov rdi, rax	      1174	ops.c	FUNCTION_22	ELSE_1	IF_5	CALL_15
0x1b41	      0xe800000000	                          call 0x4001b86	      1174	ops.c	FUNCTION_22	ELSE_1	IF_5	CALL_15
0x1b46	      0xb800000000	                              mov eax, 0	      1175	ops.c	FUNCTION_22	ELSE_1	IF_5
0x1b4b	            0xeb40	                           jmp 0x4001bcd	      1175	ops.c	FUNCTION_22	ELSE_1	IF_5
0x1b4d	    0x488b05000000	            mov rax, qword [0x04001b94] 	      1177	ops.c	FUNCTION_22	ELSE_1
0x1b54	          0x488b00	                    mov rax, qword [rax]	      1177	ops.c	FUNCTION_22	ELSE_1
0x1b57	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1177	ops.c	FUNCTION_22	ELSE_1
0x1b5b	          0x488910	                    mov qword [rax], rdx	      1177	ops.c	FUNCTION_22	ELSE_1
0x1b5e	    0x488b05000000	            mov rax, qword [0x04001ba5] 	      1178	ops.c	FUNCTION_22	ELSE_1
0x1b65	    0x48c740080100	                  mov qword [rax + 8], 1	      1178	ops.c	FUNCTION_22	ELSE_1
0x1b6d	    0x488b05000000	            mov rax, qword [0x04001bb4] 	      1179	ops.c	FUNCTION_22	ELSE_1
0x1b74	        0xc6401000	                mov byte [rax + 0x10], 0	      1179	ops.c	FUNCTION_22	ELSE_1
0x1b78	    0x488b1d000000	            mov rbx, qword [0x04001bbf] 	      1181	ops.c	FUNCTION_22	ELSE_1	CALL_16
0x1b7f	      0xe800000000	                          call 0x4001bc4	      1181	ops.c	FUNCTION_22	ELSE_1	CALL_16
0x1b84	        0x48894318	             mov qword [rbx + 0x18], rax	      1181	ops.c	FUNCTION_22	ELSE_1	CALL_16
0x1b88	      0xb801000000	                              mov eax, 1	      1184	ops.c	FUNCTION_22
0x1b8d	        0x4883c428	                           add rsp, 0x28	      1185	ops.c	FUNCTION_22
0x1b91	              0x5b	                                 pop rbx	      1185	ops.c	FUNCTION_22
0x1b92	              0x5d	                                 pop rbp	      1185	ops.c	FUNCTION_22
0x1b93	              0xc3	                                     ret	      1185	ops.c	FUNCTION_22
op_delete	CALL,68:FOR,1:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,6:IF,48	813
0x2a20	              0x55	                                push rbp	      1721	ops.c	FUNCTION_33
0x2a21	          0x4889e5	                            mov rbp, rsp	      1721	ops.c	FUNCTION_33
0x2a24	    0x4881ecb00000	                           sub rsp, 0xb0	      1721	ops.c	FUNCTION_33
0x2a2b	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	      1721	ops.c	FUNCTION_33
0x2a32	    0x64488b042528	                mov rax, qword fs:[0x28]	      1721	ops.c	FUNCTION_33
0x2a3b	        0x488945f8	                mov qword [rbp - 8], rax	      1721	ops.c	FUNCTION_33
0x2a3f	            0x31c0	                            xor eax, eax	      1721	ops.c	FUNCTION_33
0x2a41	    0x488b05000000	            mov rax, qword [0x04002a88] 	      1727	ops.c	FUNCTION_33
0x2a48	          0x488b00	                    mov rax, qword [rax]	      1727	ops.c	FUNCTION_33
0x2a4b	        0x48894590	             mov qword [rbp - 0x70], rax	      1727	ops.c	FUNCTION_33
0x2a4f	    0xc7856cffffff	               mov dword [rbp - 0x94], 0	      1728	ops.c	FUNCTION_33
0x2a59	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1729	ops.c	FUNCTION_33
0x2a60	          0x8b4004	                mov eax, dword [rax + 4]	      1729	ops.c	FUNCTION_33
0x2a63	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      1729	ops.c	FUNCTION_33
0x2a69	    0x488b05000000	            mov rax, qword [0x04002ab0] 	      1731	ops.c	FUNCTION_33	IF_1
0x2a70	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1731	ops.c	FUNCTION_33	IF_1
0x2a73	          0x83e001	                              and eax, 1	      1731	ops.c	FUNCTION_33	IF_1
0x2a76	            0x85c0	                           test eax, eax	      1731	ops.c	FUNCTION_33	IF_1
0x2a78	            0x740a	                            je 0x4002ac4	      1731	ops.c	FUNCTION_33	IF_1
0x2a7a	      0xb801000000	                              mov eax, 1	      1732	ops.c	FUNCTION_33	IF_1
0x2a7f	      0xe9340d0000	                           jmp 0x40037f8	      1732	ops.c	FUNCTION_33	IF_1
0x2a84	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1735	ops.c	FUNCTION_33	IF_2
0x2a8b	          0x8b4058	            mov eax, dword [rax + 0x58] 	      1735	ops.c	FUNCTION_33	IF_2
0x2a8e	            0x85c0	                           test eax, eax	      1735	ops.c	FUNCTION_33	IF_2
0x2a90	            0x740a	                            je 0x4002adc	      1735	ops.c	FUNCTION_33	IF_2
0x2a92	      0xe800000000	                          call 0x4002ad7	      1736	ops.c	FUNCTION_33	CALL_1
0x2a97	      0xe91c0d0000	                           jmp 0x40037f8	      1736	ops.c	FUNCTION_33	CALL_1
0x2a9c	    0x488b05000000	            mov rax, qword [0x04002ae3] 	      1738	ops.c	FUNCTION_33	IF_3
0x2aa3	    0x8b8028150000	          mov eax, dword [rax + 0x1528] 	      1738	ops.c	FUNCTION_33	IF_3
0x2aa9	            0x85c0	                           test eax, eax	      1738	ops.c	FUNCTION_33	IF_3
0x2aab	            0x751c	                           jne 0x4002b09	      1738	ops.c	FUNCTION_33	IF_3
0x2aad	      0xbf00000000	                              mov edi, 0	      1740	ops.c	FUNCTION_33	IF_3	CALL_3
0x2ab2	      0xe800000000	                          call 0x4002af7	      1740	ops.c	FUNCTION_33	IF_3	CALL_3
0x2ab7	          0x4889c7	                            mov rdi, rax	      1740	ops.c	FUNCTION_33	IF_3	CALL_3
0x2aba	      0xe800000000	                          call 0x4002aff	      1740	ops.c	FUNCTION_33	IF_3	CALL_3
0x2abf	      0xb800000000	                              mov eax, 0	      1741	ops.c	FUNCTION_33	IF_3
0x2ac4	      0xe9ef0c0000	                           jmp 0x40037f8	      1741	ops.c	FUNCTION_33	IF_3
0x2ac9	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1745	ops.c	FUNCTION_33	CALL_4
0x2ad0	        0x4883c004	                              add rax, 4	      1745	ops.c	FUNCTION_33	CALL_4
0x2ad4	          0x4889c7	                            mov rdi, rax	      1745	ops.c	FUNCTION_33	CALL_4
0x2ad7	      0xe800000000	                          call 0x4002b1c	      1745	ops.c	FUNCTION_33	CALL_4
0x2adc	    0x8b0500000000	            mov eax, dword [0x04002b22] 	      1749	ops.c	FUNCTION_33	IF_4
0x2ae2	            0x85c0	                           test eax, eax	      1749	ops.c	FUNCTION_33	IF_4
0x2ae4	            0x740f	                            je 0x4002b35	      1749	ops.c	FUNCTION_33	IF_4
0x2ae6	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1750	ops.c	FUNCTION_33	CALL_5
0x2aed	          0x4889c7	                            mov rdi, rax	      1750	ops.c	FUNCTION_33	CALL_5
0x2af0	      0xe8d90c0000	                call sym.mb_adjust_opend	      1750	ops.c	FUNCTION_33	CALL_5
0x2af5	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1758	ops.c	FUNCTION_33	IF_5
0x2afc	          0x8b4008	                mov eax, dword [rax + 8]	      1758	ops.c	FUNCTION_33	IF_5
0x2aff	            0x85c0	                           test eax, eax	      1758	ops.c	FUNCTION_33	IF_5
0x2b01	     0xf85d4000000	                           jne 0x4002c1b	      1758	ops.c	FUNCTION_33	IF_5
0x2b07	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1759	ops.c	FUNCTION_33	IF_5
0x2b0e	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      1759	ops.c	FUNCTION_33	IF_5
0x2b11	            0x85c0	                           test eax, eax	      1759	ops.c	FUNCTION_33	IF_5
0x2b13	     0xf85c2000000	                           jne 0x4002c1b	      1759	ops.c	FUNCTION_33	IF_5
0x2b19	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1760	ops.c	FUNCTION_33	IF_5
0x2b20	          0x8b4060	            mov eax, dword [rax + 0x60] 	      1760	ops.c	FUNCTION_33	IF_5
0x2b23	            0x85c0	                           test eax, eax	      1760	ops.c	FUNCTION_33	IF_5
0x2b25	     0xf85b0000000	                           jne 0x4002c1b	      1760	ops.c	FUNCTION_33	IF_5
0x2b2b	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1761	ops.c	FUNCTION_33	IF_5
0x2b32	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1761	ops.c	FUNCTION_33	IF_5
0x2b36	        0x4883f801	                              cmp rax, 1	      1761	ops.c	FUNCTION_33	IF_5
0x2b3a	     0xf8e9b000000	                           jle 0x4002c1b	      1761	ops.c	FUNCTION_33	IF_5
0x2b40	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1762	ops.c	FUNCTION_33	IF_5
0x2b47	          0x8b400c	              mov eax, dword [rax + 0xc]	      1762	ops.c	FUNCTION_33	IF_5
0x2b4a	            0x85c0	                           test eax, eax	      1762	ops.c	FUNCTION_33	IF_5
0x2b4c	     0xf8589000000	                           jne 0x4002c1b	      1762	ops.c	FUNCTION_33	IF_5
0x2b52	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1763	ops.c	FUNCTION_33	IF_5
0x2b59	            0x8b00	                    mov eax, dword [rax]	      1763	ops.c	FUNCTION_33	IF_5
0x2b5b	          0x83f801	                              cmp eax, 1	      1763	ops.c	FUNCTION_33	IF_5
0x2b5e	            0x757b	                           jne 0x4002c1b	      1763	ops.c	FUNCTION_33	IF_5
0x2b60	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1765	ops.c	FUNCTION_33	IF_5	CALL_6
0x2b67	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1765	ops.c	FUNCTION_33	IF_5	CALL_6
0x2b6b	          0x4889c7	                            mov rdi, rax	      1765	ops.c	FUNCTION_33	IF_5	CALL_6
0x2b6e	      0xe800000000	                          call 0x4002bb3	      1765	ops.c	FUNCTION_33	IF_5	CALL_6
0x2b73	          0x4889c2	                            mov rdx, rax	      1765	ops.c	FUNCTION_33	IF_5	CALL_6
0x2b76	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1765	ops.c	FUNCTION_33	IF_5	CALL_6
0x2b7d	          0x8b4038	            mov eax, dword [rax + 0x38] 	      1765	ops.c	FUNCTION_33	IF_5	CALL_6
0x2b80	            0x4898	                                    cdqe	      1765	ops.c	FUNCTION_33	IF_5	CALL_6
0x2b82	          0x4801d0	                            add rax, rdx	      1765	ops.c	FUNCTION_33	IF_5	CALL_6
0x2b85	        0x48894588	             mov qword [rbp - 0x78], rax	      1765	ops.c	FUNCTION_33	IF_5	CALL_6
0x2b89	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1766	ops.c	FUNCTION_33	IF_5	IF_6
0x2b8d	           0xfb600	                   movzx eax, byte [rax]	      1766	ops.c	FUNCTION_33	IF_5	IF_6
0x2b90	            0x84c0	                             test al, al	      1766	ops.c	FUNCTION_33	IF_5	IF_6
0x2b92	            0x7410	                            je 0x4002be4	      1766	ops.c	FUNCTION_33	IF_5	IF_6
0x2b94	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1767	ops.c	FUNCTION_33	IF_5	IF_6
0x2b9b	          0x8b4014	            mov eax, dword [rax + 0x14] 	      1767	ops.c	FUNCTION_33	IF_5	IF_6
0x2b9e	            0x4898	                                    cdqe	      1767	ops.c	FUNCTION_33	IF_5	IF_6
0x2ba0	        0x48014588	            add qword [rbp - 0x78], rax 	      1767	ops.c	FUNCTION_33	IF_5	IF_6
0x2ba4	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1768	ops.c	FUNCTION_33	IF_5	CALL_7
0x2ba8	          0x4889c7	                            mov rdi, rax	      1768	ops.c	FUNCTION_33	IF_5	CALL_7
0x2bab	      0xe800000000	                          call 0x4002bf0	      1768	ops.c	FUNCTION_33	IF_5	CALL_7
0x2bb0	        0x48894588	             mov qword [rbp - 0x78], rax	      1768	ops.c	FUNCTION_33	IF_5	CALL_7
0x2bb4	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1769	ops.c	FUNCTION_33	IF_5	IF_7	CALL_8
0x2bb8	           0xfb600	                   movzx eax, byte [rax]	      1769	ops.c	FUNCTION_33	IF_5	IF_7	CALL_8
0x2bbb	            0x84c0	                             test al, al	      1769	ops.c	FUNCTION_33	IF_5	IF_7	CALL_8
0x2bbd	            0x751c	                           jne 0x4002c1b	      1769	ops.c	FUNCTION_33	IF_5	IF_7	CALL_8
0x2bbf	      0xbf00000000	                              mov edi, 0	      1769	ops.c	FUNCTION_33	IF_5	IF_7	CALL_8
0x2bc4	      0xe800000000	                          call 0x4002c09	      1769	ops.c	FUNCTION_33	IF_5	IF_7	CALL_8
0x2bc9	            0x85c0	                           test eax, eax	      1769	ops.c	FUNCTION_33	IF_5	IF_7	CALL_8
0x2bcb	            0x740e	                            je 0x4002c1b	      1769	ops.c	FUNCTION_33	IF_5	IF_7	CALL_8
0x2bcd	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1770	ops.c	FUNCTION_33	IF_5	IF_7
0x2bd4	    0xc74008010000	                  mov dword [rax + 8], 1	      1770	ops.c	FUNCTION_33	IF_5	IF_7
0x2bdb	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1777	ops.c	FUNCTION_33	IF_8
0x2be2	          0x8b4008	                mov eax, dword [rax + 8]	      1777	ops.c	FUNCTION_33	IF_8
0x2be5	            0x85c0	                           test eax, eax	      1777	ops.c	FUNCTION_33	IF_8
0x2be7	            0x756f	                           jne 0x4002c98	      1777	ops.c	FUNCTION_33	IF_8
0x2be9	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1778	ops.c	FUNCTION_33	IF_8
0x2bf0	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1778	ops.c	FUNCTION_33	IF_8
0x2bf4	        0x4883f801	                              cmp rax, 1	      1778	ops.c	FUNCTION_33	IF_8
0x2bf8	            0x755e	                           jne 0x4002c98	      1778	ops.c	FUNCTION_33	IF_8
0x2bfa	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1779	ops.c	FUNCTION_33	IF_8
0x2c01	            0x8b00	                    mov eax, dword [rax]	      1779	ops.c	FUNCTION_33	IF_8
0x2c03	          0x83f801	                              cmp eax, 1	      1779	ops.c	FUNCTION_33	IF_8
0x2c06	            0x7550	                           jne 0x4002c98	      1779	ops.c	FUNCTION_33	IF_8
0x2c08	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1780	ops.c	FUNCTION_33	IF_8	CALL_9
0x2c0f	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1780	ops.c	FUNCTION_33	IF_8	CALL_9
0x2c13	          0x4889c7	                            mov rdi, rax	      1780	ops.c	FUNCTION_33	IF_8	CALL_9
0x2c16	      0xe800000000	                          call 0x4002c5b	      1780	ops.c	FUNCTION_33	IF_8	CALL_9
0x2c1b	           0xfb600	                   movzx eax, byte [rax]	      1780	ops.c	FUNCTION_33	IF_8	CALL_9
0x2c1e	            0x84c0	                             test al, al	      1780	ops.c	FUNCTION_33	IF_8	CALL_9
0x2c20	            0x7536	                           jne 0x4002c98	      1780	ops.c	FUNCTION_33	IF_8	CALL_9
0x2c22	    0x8b0500000000	            mov eax, dword [0x04002c68] 	      1787	ops.c	FUNCTION_33	IF_8	IF_9
0x2c28	            0x85c0	                           test eax, eax	      1787	ops.c	FUNCTION_33	IF_8	IF_9
0x2c2a	     0xf85fa0a0000	                           jne 0x400376a	      1787	ops.c	FUNCTION_33	IF_8	IF_9
0x2c30	    0x488b05000000	            mov rax, qword [0x04002c77] 	      1792	ops.c	FUNCTION_33	IF_8	IF_10	CALL_10
0x2c37	      0xbe45000000	                           mov esi, 0x45	      1792	ops.c	FUNCTION_33	IF_8	IF_10	CALL_10
0x2c3c	          0x4889c7	                            mov rdi, rax	      1792	ops.c	FUNCTION_33	IF_8	IF_10	CALL_10
0x2c3f	      0xe800000000	                          call 0x4002c84	      1792	ops.c	FUNCTION_33	IF_8	IF_10	CALL_10
0x2c44	          0x4885c0	                           test rax, rax	      1792	ops.c	FUNCTION_33	IF_8	IF_10	CALL_10
0x2c47	            0x7405	                            je 0x4002c8e	      1792	ops.c	FUNCTION_33	IF_8	IF_10	CALL_10
0x2c49	      0xe800000000	                          call 0x4002c8e	      1793	ops.c	FUNCTION_33	IF_8	CALL_11
0x2c4e	      0xb801000000	                              mov eax, 1	      1794	ops.c	FUNCTION_33	IF_8
0x2c53	      0xe9600b0000	                           jmp 0x40037f8	      1794	ops.c	FUNCTION_33	IF_8
0x2c58	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1802	ops.c	FUNCTION_33	IF_11
0x2c5f	          0x8b4004	                mov eax, dword [rax + 4]	      1802	ops.c	FUNCTION_33	IF_11
0x2c62	          0x83f85f	                           cmp eax, 0x5f	      1802	ops.c	FUNCTION_33	IF_11
0x2c65	     0xf8431020000	                            je 0x4002edc	      1802	ops.c	FUNCTION_33	IF_11
0x2c6b	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1804	ops.c	FUNCTION_33	IF_11	IF_12
0x2c72	          0x8b4004	                mov eax, dword [rax + 4]	      1804	ops.c	FUNCTION_33	IF_11	IF_12
0x2c75	            0x85c0	                           test eax, eax	      1804	ops.c	FUNCTION_33	IF_11	IF_12
0x2c77	            0x7467	                            je 0x4002d20	      1804	ops.c	FUNCTION_33	IF_11	IF_12
0x2c79	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1807	ops.c	FUNCTION_33	IF_11	IF_12	IF_13	CALL_12
0x2c80	          0x8b4004	                mov eax, dword [rax + 4]	      1807	ops.c	FUNCTION_33	IF_11	IF_12	IF_13	CALL_12
0x2c83	      0xbe01000000	                              mov esi, 1	      1807	ops.c	FUNCTION_33	IF_11	IF_12	IF_13	CALL_12
0x2c88	            0x89c7	                            mov edi, eax	      1807	ops.c	FUNCTION_33	IF_11	IF_12	IF_13	CALL_12
0x2c8a	      0xe800000000	                          call 0x4002ccf	      1807	ops.c	FUNCTION_33	IF_11	IF_12	IF_13	CALL_12
0x2c8f	            0x85c0	                           test eax, eax	      1807	ops.c	FUNCTION_33	IF_11	IF_12	IF_13	CALL_12
0x2c91	            0x750f	                           jne 0x4002ce2	      1807	ops.c	FUNCTION_33	IF_11	IF_12	IF_13	CALL_12
0x2c93	      0xe800000000	                          call 0x4002cd8	      1809	ops.c	FUNCTION_33	IF_11	IF_12	IF_13	CALL_13
0x2c98	      0xb801000000	                              mov eax, 1	      1810	ops.c	FUNCTION_33	IF_11	IF_12	IF_13
0x2c9d	      0xe9160b0000	                           jmp 0x40037f8	      1810	ops.c	FUNCTION_33	IF_11	IF_12	IF_13
0x2ca2	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1812	ops.c	FUNCTION_33	IF_11	IF_12	CALL_14
0x2ca9	          0x8b4004	                mov eax, dword [rax + 4]	      1812	ops.c	FUNCTION_33	IF_11	IF_12	CALL_14
0x2cac	      0xbe01000000	                              mov esi, 1	      1812	ops.c	FUNCTION_33	IF_11	IF_12	CALL_14
0x2cb1	            0x89c7	                            mov edi, eax	      1812	ops.c	FUNCTION_33	IF_11	IF_12	CALL_14
0x2cb3	      0xe800000000	                          call 0x4002cf8	      1812	ops.c	FUNCTION_33	IF_11	IF_12	CALL_14
0x2cb8	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1813	ops.c	FUNCTION_33	IF_11	IF_12	IF_14	CALL_15
0x2cbf	      0xba00000000	                              mov edx, 0	      1813	ops.c	FUNCTION_33	IF_11	IF_12	IF_14	CALL_15
0x2cc4	      0xbe01000000	                              mov esi, 1	      1813	ops.c	FUNCTION_33	IF_11	IF_12	IF_14	CALL_15
0x2cc9	          0x4889c7	                            mov rdi, rax	      1813	ops.c	FUNCTION_33	IF_11	IF_12	IF_14	CALL_15
0x2ccc	      0xe800000000	                          call 0x4002d11	      1813	ops.c	FUNCTION_33	IF_11	IF_12	IF_14	CALL_15
0x2cd1	          0x83f801	                              cmp eax, 1	      1813	ops.c	FUNCTION_33	IF_11	IF_12	IF_14	CALL_15
0x2cd4	            0x750a	                           jne 0x4002d20	      1813	ops.c	FUNCTION_33	IF_11	IF_12	IF_14	CALL_15
0x2cd6	    0xc7856cffffff	               mov dword [rbp - 0x94], 1	      1814	ops.c	FUNCTION_33	IF_11	IF_12	IF_14
0x2ce0	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      1823	ops.c	FUNCTION_33	IF_11	IF_15
0x2ce7	            0x752e	                           jne 0x4002d57	      1823	ops.c	FUNCTION_33	IF_11	IF_15
0x2ce9	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1823	ops.c	FUNCTION_33	IF_11	IF_15
0x2cf0	          0x8b4008	                mov eax, dword [rax + 8]	      1823	ops.c	FUNCTION_33	IF_11	IF_15
0x2cf3	          0x83f801	                              cmp eax, 1	      1823	ops.c	FUNCTION_33	IF_11	IF_15
0x2cf6	            0x741f	                            je 0x4002d57	      1823	ops.c	FUNCTION_33	IF_11	IF_15
0x2cf8	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1824	ops.c	FUNCTION_33	IF_11	IF_15
0x2cff	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1824	ops.c	FUNCTION_33	IF_11	IF_15
0x2d03	        0x4883f801	                              cmp rax, 1	      1824	ops.c	FUNCTION_33	IF_11	IF_15
0x2d07	            0x7f0e	                            jg 0x4002d57	      1824	ops.c	FUNCTION_33	IF_11	IF_15
0x2d09	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1824	ops.c	FUNCTION_33	IF_11	IF_15
0x2d10	          0x8b4010	            mov eax, dword [rax + 0x10] 	      1824	ops.c	FUNCTION_33	IF_11	IF_15
0x2d13	            0x85c0	                           test eax, eax	      1824	ops.c	FUNCTION_33	IF_11	IF_15
0x2d15	            0x742d	                            je 0x4002d84	      1824	ops.c	FUNCTION_33	IF_11	IF_15
0x2d17	      0xe800000000	                          call 0x4002d5c	      1826	ops.c	FUNCTION_33	IF_11	IF_15	CALL_16
0x2d1c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1827	ops.c	FUNCTION_33	IF_11	IF_15	IF_16	CALL_17
0x2d23	      0xba00000000	                              mov edx, 0	      1827	ops.c	FUNCTION_33	IF_11	IF_15	IF_16	CALL_17
0x2d28	      0xbe01000000	                              mov esi, 1	      1827	ops.c	FUNCTION_33	IF_11	IF_15	IF_16	CALL_17
0x2d2d	          0x4889c7	                            mov rdi, rax	      1827	ops.c	FUNCTION_33	IF_11	IF_15	IF_16	CALL_17
0x2d30	      0xe800000000	                          call 0x4002d75	      1827	ops.c	FUNCTION_33	IF_11	IF_15	IF_16	CALL_17
0x2d35	          0x83f801	                              cmp eax, 1	      1827	ops.c	FUNCTION_33	IF_11	IF_15	IF_16	CALL_17
0x2d38	            0x750a	                           jne 0x4002d84	      1827	ops.c	FUNCTION_33	IF_11	IF_15	IF_16	CALL_17
0x2d3a	    0xc7856cffffff	               mov dword [rbp - 0x94], 1	      1828	ops.c	FUNCTION_33	IF_11	IF_15	IF_16
0x2d44	    0x8b0500000000	            mov eax, dword [0x04002d8a] 	      1835	ops.c	FUNCTION_33	IF_11	IF_17
0x2d4a	          0x83e001	                              and eax, 1	      1835	ops.c	FUNCTION_33	IF_11	IF_17
0x2d4d	            0x85c0	                           test eax, eax	      1833	ops.c	FUNCTION_33	IF_11	IF_17
0x2d4f	            0x740f	                            je 0x4002da0	      1833	ops.c	FUNCTION_33	IF_11	IF_17
0x2d51	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1835	ops.c	FUNCTION_33	IF_11	IF_17
0x2d58	          0x8b4004	                mov eax, dword [rax + 4]	      1835	ops.c	FUNCTION_33	IF_11	IF_17
0x2d5b	          0x83f82a	                           cmp eax, 0x2a	      1835	ops.c	FUNCTION_33	IF_11	IF_17
0x2d5e	            0x742a	                            je 0x4002dca	      1835	ops.c	FUNCTION_33	IF_11	IF_17
0x2d60	    0x8b0500000000	            mov eax, dword [0x04002da6] 	      1836	ops.c	FUNCTION_33	IF_11	IF_17
0x2d66	          0x83e002	                              and eax, 2	      1836	ops.c	FUNCTION_33	IF_11	IF_17
0x2d69	            0x85c0	                           test eax, eax	      1835	ops.c	FUNCTION_33	IF_11	IF_17
0x2d6b	            0x740f	                            je 0x4002dbc	      1835	ops.c	FUNCTION_33	IF_11	IF_17
0x2d6d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1836	ops.c	FUNCTION_33	IF_11	IF_17
0x2d74	          0x8b4004	                mov eax, dword [rax + 4]	      1836	ops.c	FUNCTION_33	IF_11	IF_17
0x2d77	          0x83f82b	                           cmp eax, 0x2b	      1836	ops.c	FUNCTION_33	IF_11	IF_17
0x2d7a	            0x740e	                            je 0x4002dca	      1836	ops.c	FUNCTION_33	IF_11	IF_17
0x2d7c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1838	ops.c	FUNCTION_33	IF_11	IF_17
0x2d83	          0x8b4004	                mov eax, dword [rax + 4]	      1838	ops.c	FUNCTION_33	IF_11	IF_17
0x2d86	            0x85c0	                           test eax, eax	      1836	ops.c	FUNCTION_33	IF_11	IF_17
0x2d88	            0x757a	                           jne 0x4002e44	      1836	ops.c	FUNCTION_33	IF_11	IF_17
0x2d8a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1838	ops.c	FUNCTION_33	IF_11	IF_17
0x2d91	          0x8b4008	                mov eax, dword [rax + 8]	      1838	ops.c	FUNCTION_33	IF_11	IF_17
0x2d94	          0x83f801	                              cmp eax, 1	      1838	ops.c	FUNCTION_33	IF_11	IF_17
0x2d97	            0x746b	                            je 0x4002e44	      1838	ops.c	FUNCTION_33	IF_11	IF_17
0x2d99	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1839	ops.c	FUNCTION_33	IF_11	IF_17
0x2da0	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1839	ops.c	FUNCTION_33	IF_11	IF_17
0x2da4	        0x4883f801	                              cmp rax, 1	      1839	ops.c	FUNCTION_33	IF_11	IF_17
0x2da8	            0x755a	                           jne 0x4002e44	      1839	ops.c	FUNCTION_33	IF_11	IF_17
0x2daa	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1841	ops.c	FUNCTION_33	IF_11	IF_17
0x2db1	    0xc740042d0000	               mov dword [rax + 4], 0x2d	      1841	ops.c	FUNCTION_33	IF_11	IF_17
0x2db8	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1842	ops.c	FUNCTION_33	IF_11	IF_17	CALL_18
0x2dbf	          0x8b4004	                mov eax, dword [rax + 4]	      1842	ops.c	FUNCTION_33	IF_11	IF_17	CALL_18
0x2dc2	      0xbe01000000	                              mov esi, 1	      1842	ops.c	FUNCTION_33	IF_11	IF_17	CALL_18
0x2dc7	            0x89c7	                            mov edi, eax	      1842	ops.c	FUNCTION_33	IF_11	IF_17	CALL_18
0x2dc9	      0xe800000000	                          call 0x4002e0e	      1842	ops.c	FUNCTION_33	IF_11	IF_17	CALL_18
0x2dce	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1843	ops.c	FUNCTION_33	IF_11	IF_17	IF_18	CALL_19
0x2dd5	      0xba00000000	                              mov edx, 0	      1843	ops.c	FUNCTION_33	IF_11	IF_17	IF_18	CALL_19
0x2dda	      0xbe01000000	                              mov esi, 1	      1843	ops.c	FUNCTION_33	IF_11	IF_17	IF_18	CALL_19
0x2ddf	          0x4889c7	                            mov rdi, rax	      1843	ops.c	FUNCTION_33	IF_11	IF_17	IF_18	CALL_19
0x2de2	      0xe800000000	                          call 0x4002e27	      1843	ops.c	FUNCTION_33	IF_11	IF_17	IF_18	CALL_19
0x2de7	          0x83f801	                              cmp eax, 1	      1843	ops.c	FUNCTION_33	IF_11	IF_17	IF_18	CALL_19
0x2dea	            0x750a	                           jne 0x4002e36	      1843	ops.c	FUNCTION_33	IF_11	IF_17	IF_18	CALL_19
0x2dec	    0xc7856cffffff	               mov dword [rbp - 0x94], 1	      1844	ops.c	FUNCTION_33	IF_11	IF_17	IF_18
0x2df6	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1845	ops.c	FUNCTION_33	IF_11	IF_17
0x2dfd	    0xc74004000000	                  mov dword [rax + 4], 0	      1845	ops.c	FUNCTION_33	IF_11	IF_17
0x2e04	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      1854	ops.c	FUNCTION_33	IF_11	IF_19
0x2e0b	            0x7564	                           jne 0x4002eb1	      1854	ops.c	FUNCTION_33	IF_11	IF_19
0x2e0d	    0x8b0500000000	            mov eax, dword [0x04002e53] 	      1856	ops.c	FUNCTION_33	IF_11	IF_19
0x2e13	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      1856	ops.c	FUNCTION_33	IF_11	IF_19
0x2e19	    0xc70500000000	               mov dword [0x04002e63], 0	      1858	ops.c	FUNCTION_33	IF_11	IF_19
0x2e23	      0xbf00000000	                              mov edi, 0	      1859	ops.c	FUNCTION_33	IF_11	IF_19	CALL_21
0x2e28	      0xe800000000	                          call 0x4002e6d	      1859	ops.c	FUNCTION_33	IF_11	IF_19	CALL_21
0x2e2d	      0xbe01000000	                              mov esi, 1	      1859	ops.c	FUNCTION_33	IF_11	IF_19	CALL_21
0x2e32	          0x4889c7	                            mov rdi, rax	      1859	ops.c	FUNCTION_33	IF_11	IF_19	CALL_21
0x2e35	      0xe800000000	                          call 0x4002e7a	      1859	ops.c	FUNCTION_33	IF_11	IF_19	CALL_21
0x2e3a	    0x898568ffffff	             mov dword [rbp - 0x98], eax	      1859	ops.c	FUNCTION_33	IF_11	IF_19	CALL_21
0x2e40	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      1860	ops.c	FUNCTION_33	IF_11	IF_19
0x2e46	    0x890500000000	            mov dword [0x04002e8c], eax 	      1860	ops.c	FUNCTION_33	IF_11	IF_19
0x2e4c	    0x83bd68ffffff	           cmp dword [rbp - 0x98], 0x79 	      1861	ops.c	FUNCTION_33	IF_11	IF_19	IF_20
0x2e53	            0x741c	                            je 0x4002eb1	      1861	ops.c	FUNCTION_33	IF_11	IF_19	IF_20
0x2e55	      0xbf00000000	                              mov edi, 0	      1863	ops.c	FUNCTION_33	IF_11	IF_19	IF_20	CALL_23
0x2e5a	      0xe800000000	                          call 0x4002e9f	      1863	ops.c	FUNCTION_33	IF_11	IF_19	IF_20	CALL_23
0x2e5f	          0x4889c7	                            mov rdi, rax	      1863	ops.c	FUNCTION_33	IF_11	IF_19	IF_20	CALL_23
0x2e62	      0xe800000000	                          call 0x4002ea7	      1863	ops.c	FUNCTION_33	IF_11	IF_19	IF_20	CALL_23
0x2e67	      0xb800000000	                              mov eax, 0	      1864	ops.c	FUNCTION_33	IF_11	IF_19	IF_20
0x2e6c	      0xe947090000	                           jmp 0x40037f8	      1864	ops.c	FUNCTION_33	IF_11	IF_19	IF_20
0x2e71	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      1869	ops.c	FUNCTION_33	IF_11	IF_21	CALL_24
0x2e78	            0x7422	                            je 0x4002edc	      1869	ops.c	FUNCTION_33	IF_11	IF_21	CALL_24
0x2e7a	      0xe800000000	                          call 0x4002ebf	      1869	ops.c	FUNCTION_33	IF_11	IF_21	CALL_24
0x2e7f	            0x85c0	                           test eax, eax	      1869	ops.c	FUNCTION_33	IF_11	IF_21	CALL_24
0x2e81	            0x7419	                            je 0x4002edc	      1869	ops.c	FUNCTION_33	IF_11	IF_21	CALL_24
0x2e83	    0x488b15000000	            mov rdx, qword [0x04002eca] 	      1870	ops.c	FUNCTION_33	IF_11	CALL_25
0x2e8a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1870	ops.c	FUNCTION_33	IF_11	CALL_25
0x2e91	          0x4889d6	                            mov rsi, rdx	      1870	ops.c	FUNCTION_33	IF_11	CALL_25
0x2e94	          0x4889c7	                            mov rdi, rax	      1870	ops.c	FUNCTION_33	IF_11	CALL_25
0x2e97	      0xe849f9ffff	                call sym.yank_do_autocmd	      1870	ops.c	FUNCTION_33	IF_11	CALL_25
0x2e9c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1877	ops.c	FUNCTION_33	IF_22
0x2ea3	          0x8b4060	            mov eax, dword [rax + 0x60] 	      1877	ops.c	FUNCTION_33	IF_22
0x2ea6	            0x85c0	                           test eax, eax	      1877	ops.c	FUNCTION_33	IF_22
0x2ea8	     0xf8405020000	                            je 0x40030f3	      1877	ops.c	FUNCTION_33	IF_22
0x2eae	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1880	ops.c	FUNCTION_33	IF_22	IF_23
0x2eb5	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1880	ops.c	FUNCTION_33	IF_22	IF_23
0x2eb9	        0x488d5001	                      lea rdx, [rax + 1]	      1880	ops.c	FUNCTION_33	IF_22	IF_23
0x2ebd	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1879	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x2ec4	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1879	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x2ec8	        0x4883e801	                              sub rax, 1	      1879	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x2ecc	          0x4889d6	                            mov rsi, rdx	      1879	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x2ecf	          0x4889c7	                            mov rdi, rax	      1879	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x2ed2	      0xe800000000	                          call 0x4002f17	      1879	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x2ed7	            0x85c0	                           test eax, eax	      1879	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x2ed9	            0x750a	                           jne 0x4002f25	      1879	ops.c	FUNCTION_33	IF_22	IF_23	CALL_26
0x2edb	      0xb800000000	                              mov eax, 0	      1881	ops.c	FUNCTION_33	IF_22	IF_23
0x2ee0	      0xe9d3080000	                           jmp 0x40037f8	      1881	ops.c	FUNCTION_33	IF_22	IF_23
0x2ee5	    0x488b05000000	            mov rax, qword [0x04002f2c] 	      1883	ops.c	FUNCTION_33	IF_22	FOR_1
0x2eec	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1883	ops.c	FUNCTION_33	IF_22	FOR_1
0x2ef0	        0x48894580	             mov qword [rbp - 0x80], rax	      1883	ops.c	FUNCTION_33	IF_22	FOR_1
0x2ef4	      0xe95b010000	                           jmp 0x4003094	      1883	ops.c	FUNCTION_33	IF_22	FOR_1
0x2ef9	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      1885	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_27
0x2efd	        0x488d75b0	                   lea rsi, [rbp - 0x50]	      1885	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_27
0x2f01	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1885	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_27
0x2f08	      0xb901000000	                              mov ecx, 1	      1885	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_27
0x2f0d	          0x4889c7	                            mov rdi, rax	      1885	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_27
0x2f10	      0xe8c4770000	                     call sym.block_prep	      1885	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_27
0x2f15	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1886	ops.c	FUNCTION_33	IF_22	FOR_1	IF_24
0x2f18	            0x85c0	                           test eax, eax	      1886	ops.c	FUNCTION_33	IF_22	FOR_1	IF_24
0x2f1a	     0xf842b010000	                            je 0x400308b	      1886	ops.c	FUNCTION_33	IF_22	FOR_1	IF_24
0x2f20	    0x488b05000000	            mov rax, qword [0x04002f67] 	      1890	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x2f27	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1890	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x2f2b	        0x483b4580	             cmp rax, qword [rbp - 0x80]	      1890	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x2f2f	            0x7520	                           jne 0x4002f91	      1890	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x2f31	    0x488b05000000	            mov rax, qword [0x04002f78] 	      1892	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x2f38	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	      1892	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x2f3b	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      1892	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x2f3e	             0x1ca	                            add edx, ecx	      1892	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x2f40	          0x895040	             mov dword [rax + 0x40], edx	      1892	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x2f43	    0x488b05000000	            mov rax, qword [0x04002f8a] 	      1894	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x2f4a	    0xc74044000000	               mov dword [rax + 0x44], 0	      1894	ops.c	FUNCTION_33	IF_22	FOR_1	IF_25
0x2f51	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      1902	ops.c	FUNCTION_33	IF_22	FOR_1
0x2f54	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1902	ops.c	FUNCTION_33	IF_22	FOR_1
0x2f57	            0x29c2	                            sub edx, eax	      1902	ops.c	FUNCTION_33	IF_22	FOR_1
0x2f59	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1902	ops.c	FUNCTION_33	IF_22	FOR_1
0x2f5c	            0x29c2	                            sub edx, eax	      1902	ops.c	FUNCTION_33	IF_22	FOR_1
0x2f5e	            0x89d0	                            mov eax, edx	      1902	ops.c	FUNCTION_33	IF_22	FOR_1
0x2f60	    0x898568ffffff	             mov dword [rbp - 0x98], eax	      1902	ops.c	FUNCTION_33	IF_22	FOR_1
0x2f66	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1903	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_28
0x2f6a	          0x4889c7	                            mov rdi, rax	      1903	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_28
0x2f6d	      0xe800000000	                          call 0x4002fb2	      1903	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_28
0x2f72	        0x48894598	             mov qword [rbp - 0x68], rax	      1903	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_28
0x2f76	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1904	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x2f7a	          0x4889c7	                            mov rdi, rax	      1904	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x2f7d	      0xe800000000	                          call 0x4002fc2	      1904	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x2f82	            0x89c2	                            mov edx, eax	      1904	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x2f84	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      1904	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x2f8a	            0x29c2	                            sub edx, eax	      1904	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x2f8c	            0x89d0	                            mov eax, edx	      1904	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x2f8e	          0x83c001	                              add eax, 1	      1904	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x2f91	            0x89c7	                            mov edi, eax	      1904	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x2f93	      0xe800000000	                          call 0x4002fd8	      1904	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x2f98	        0x488945a0	             mov qword [rbp - 0x60], rax	      1904	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_30
0x2f9c	      0x48837da000	               cmp qword [rbp - 0x60], 0	      1905	ops.c	FUNCTION_33	IF_22	FOR_1	IF_26
0x2fa1	     0xf84a7000000	                            je 0x400308e	      1905	ops.c	FUNCTION_33	IF_22	FOR_1	IF_26
0x2fa7	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1908	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_31
0x2faa	          0x4863d0	                         movsxd rdx, eax	      1908	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_31
0x2fad	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      1908	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_31
0x2fb1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1908	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_31
0x2fb5	          0x4889ce	                            mov rsi, rcx	      1908	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_31
0x2fb8	          0x4889c7	                            mov rdi, rax	      1908	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_31
0x2fbb	      0xe800000000	                          call 0x4003000	      1908	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_31
0x2fc0	          0x8b55b0	             mov edx, dword [rbp - 0x50]	      1910	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_32
0x2fc3	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1910	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_32
0x2fc6	             0x1d0	                            add eax, edx	      1910	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_32
0x2fc8	            0x4898	                                    cdqe	      1910	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_32
0x2fca	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      1910	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_32
0x2fcd	          0x4863ca	                         movsxd rcx, edx	      1910	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_32
0x2fd0	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1910	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_32
0x2fd4	          0x4801d1	                            add rcx, rdx	      1910	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_32
0x2fd7	          0x4889c2	                            mov rdx, rax	      1910	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_32
0x2fda	      0xbe20000000	                           mov esi, 0x20	      1910	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_32
0x2fdf	          0x4889cf	                            mov rdi, rcx	      1910	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_32
0x2fe2	      0xe800000000	                          call 0x4003027	      1910	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_32
0x2fe7	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      1913	ops.c	FUNCTION_33	IF_22	FOR_1
0x2fea	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      1913	ops.c	FUNCTION_33	IF_22	FOR_1
0x2fed	             0x1d0	                            add eax, edx	      1913	ops.c	FUNCTION_33	IF_22	FOR_1
0x2fef	            0x4898	                                    cdqe	      1913	ops.c	FUNCTION_33	IF_22	FOR_1
0x2ff1	        0x48014598	            add qword [rbp - 0x68], rax 	      1913	ops.c	FUNCTION_33	IF_22	FOR_1
0x2ff5	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1914	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x2ff9	          0x4889c7	                            mov rdi, rax	      1914	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x2ffc	      0xe800000000	                          call 0x4003041	      1914	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x3001	        0x488d5001	                      lea rdx, [rax + 1]	      1914	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x3005	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      1914	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x3008	          0x4863c8	                         movsxd rcx, eax	      1914	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x300b	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      1914	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x300e	            0x4898	                                    cdqe	      1914	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x3010	          0x4801c1	                            add rcx, rax	      1914	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x3013	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1914	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x3016	            0x4898	                                    cdqe	      1914	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x3018	          0x4801c1	                            add rcx, rax	      1914	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x301b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1914	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x301f	          0x4801c1	                            add rcx, rax	      1914	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x3022	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1914	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x3026	          0x4889c6	                            mov rsi, rax	      1914	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x3029	          0x4889cf	                            mov rdi, rcx	      1914	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x302c	      0xe800000000	                          call 0x4003071	      1914	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_33
0x3031	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1916	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_34
0x3035	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1916	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_34
0x3039	      0xba00000000	                              mov edx, 0	      1916	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_34
0x303e	          0x4889ce	                            mov rsi, rcx	      1916	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_34
0x3041	          0x4889c7	                            mov rdi, rax	      1916	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_34
0x3044	      0xe800000000	                          call 0x4003089	      1916	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_34
0x3049	            0xeb04	                           jmp 0x400308f	      1916	ops.c	FUNCTION_33	IF_22	FOR_1	CALL_34
0x304b	              0x90	                                     nop	      1887	ops.c	FUNCTION_33	IF_22	FOR_1	IF_24
0x304c	            0xeb01	                           jmp 0x400308f	      1887	ops.c	FUNCTION_33	IF_22	FOR_1	IF_24
0x304e	              0x90	                                     nop	      1906	ops.c	FUNCTION_33	IF_22	FOR_1	IF_26
0x304f	      0x4883458001	               add qword [rbp - 0x80], 1	      1883	ops.c	FUNCTION_33	IF_22	FOR_1
0x3054	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1883	ops.c	FUNCTION_33	IF_22	FOR_1
0x305b	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1883	ops.c	FUNCTION_33	IF_22	FOR_1
0x305f	        0x483b4580	             cmp rax, qword [rbp - 0x80]	      1883	ops.c	FUNCTION_33	IF_22	FOR_1
0x3063	     0xf8d90feffff	                           jge 0x4002f39	      1883	ops.c	FUNCTION_33	IF_22	FOR_1
0x3069	      0xe800000000	                          call 0x40030ae	      1919	ops.c	FUNCTION_33	IF_22	CALL_35
0x306e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1921	ops.c	FUNCTION_33	IF_22
0x3075	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1921	ops.c	FUNCTION_33	IF_22
0x3079	        0x488d5001	                      lea rdx, [rax + 1]	      1920	ops.c	FUNCTION_33	IF_22	CALL_36
0x307d	    0x488b05000000	            mov rax, qword [0x040030c4] 	      1920	ops.c	FUNCTION_33	IF_22	CALL_36
0x3084	          0x8b7040	            mov esi, dword [rax + 0x40] 	      1920	ops.c	FUNCTION_33	IF_22	CALL_36
0x3087	    0x488b05000000	            mov rax, qword [0x040030ce] 	      1920	ops.c	FUNCTION_33	IF_22	CALL_36
0x308e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1920	ops.c	FUNCTION_33	IF_22	CALL_36
0x3092	      0xb900000000	                              mov ecx, 0	      1920	ops.c	FUNCTION_33	IF_22	CALL_36
0x3097	          0x4889c7	                            mov rdi, rax	      1920	ops.c	FUNCTION_33	IF_22	CALL_36
0x309a	      0xe800000000	                          call 0x40030df	      1920	ops.c	FUNCTION_33	IF_22	CALL_36
0x309f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1922	ops.c	FUNCTION_33	IF_22
0x30a6	    0x48c740500000	               mov qword [rax + 0x50], 0	      1922	ops.c	FUNCTION_33	IF_22
0x30ae	      0xe95f060000	                           jmp 0x4003752	      1922	ops.c	FUNCTION_33	IF_22
0x30b3	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1924	ops.c	FUNCTION_33	ELSE_1	IF_27
0x30ba	          0x8b4008	                mov eax, dword [rax + 8]	      1924	ops.c	FUNCTION_33	ELSE_1	IF_27
0x30bd	          0x83f801	                              cmp eax, 1	      1924	ops.c	FUNCTION_33	ELSE_1	IF_27
0x30c0	     0xf8519010000	                           jne 0x400321f	      1924	ops.c	FUNCTION_33	ELSE_1	IF_27
0x30c6	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1926	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28
0x30cd	            0x8b00	                    mov eax, dword [rax]	      1926	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28
0x30cf	          0x83f803	                              cmp eax, 3	      1926	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28
0x30d2	     0xf85db000000	                           jne 0x40031f3	      1926	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28
0x30d8	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1932	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x30df	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1932	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x30e3	        0x4883f801	                              cmp rax, 1	      1932	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x30e7	            0x7e4d	                           jle 0x4003176	      1932	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x30e9	    0x488b05000000	            mov rax, qword [0x04003130] 	      1934	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x30f0	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1934	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x30f4	        0x48894580	             mov qword [rbp - 0x80], rax	      1934	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x30f8	    0x488b05000000	            mov rax, qword [0x0400313f] 	      1935	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x30ff	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1935	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x3103	        0x4883c201	                              add rdx, 1	      1935	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x3107	        0x48895038	             mov qword [rax + 0x38], rdx	      1935	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x310b	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1936	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29	CALL_37
0x3112	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1936	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29	CALL_37
0x3116	        0x4883e801	                              sub rax, 1	      1936	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29	CALL_37
0x311a	      0xbe01000000	                              mov esi, 1	      1936	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29	CALL_37
0x311f	          0x4889c7	                            mov rdi, rax	      1936	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29	CALL_37
0x3122	      0xe800000000	                          call 0x4003167	      1936	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29	CALL_37
0x3127	    0x488b05000000	            mov rax, qword [0x0400316e] 	      1937	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x312e	        0x488b5580	             mov rdx, qword [rbp - 0x80]	      1937	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x3132	        0x48895038	             mov qword [rax + 0x38], rdx	      1937	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_29
0x3136	      0xe800000000	                          call 0x400317b	      1939	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_30	CALL_38
0x313b	            0x85c0	                           test eax, eax	      1939	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_30	CALL_38
0x313d	            0x750a	                           jne 0x4003189	      1939	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_30	CALL_38
0x313f	      0xb800000000	                              mov eax, 0	      1940	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_30
0x3144	      0xe96f060000	                           jmp 0x40037f8	      1940	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_30
0x3149	    0x488b05000000	            mov rax, qword [0x04003190] 	      1941	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x3150	    0x8b80d8130000	          mov eax, dword [rax + 0x13d8] 	      1941	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x3156	            0x85c0	                           test eax, eax	      1941	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x3158	            0x7426	                            je 0x40031c0	      1941	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x315a	      0xbf01000000	                              mov edi, 1	      1943	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31	CALL_39
0x315f	      0xe800000000	                          call 0x40031a4	      1943	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31	CALL_39
0x3164	    0xc70500000000	               mov dword [0x040031ae], 1	      1944	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x316e	    0x488b05000000	            mov rax, qword [0x040031b5] 	      1945	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x3175	          0x8b4040	            mov eax, dword [rax + 0x40] 	      1945	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x3178	    0x890500000000	            mov dword [0x040031be], eax 	      1945	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x317e	            0xeb0a	                           jmp 0x40031ca	      1945	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_31
0x3180	      0xbf00000000	                              mov edi, 0	      1948	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	CALL_40
0x3185	      0xe800000000	                          call 0x40031ca	      1948	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	CALL_40
0x318a	      0xbf00000000	                              mov edi, 0	      1949	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	CALL_41
0x318f	      0xe800000000	                          call 0x40031d4	      1949	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	CALL_41
0x3194	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1951	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_32
0x319b	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1951	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_32
0x319f	        0x4883f801	                              cmp rax, 1	      1951	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_32
0x31a3	     0xf8e69050000	                           jle 0x4003752	      1951	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	IF_32
0x31a9	      0xe800000000	                          call 0x40031ee	      1952	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	CALL_42
0x31ae	      0xe95f050000	                           jmp 0x4003752	      1952	ops.c	FUNCTION_33	ELSE_1	IF_27	IF_28	CALL_42
0x31b3	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1956	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_43
0x31ba	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1956	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_43
0x31be	      0xbe01000000	                              mov esi, 1	      1956	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_43
0x31c3	          0x4889c7	                            mov rdi, rax	      1956	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_43
0x31c6	      0xe800000000	                          call 0x400320b	      1956	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_43
0x31cb	      0xbf05000000	                              mov edi, 5	      1957	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_44
0x31d0	      0xe800000000	                          call 0x4003215	      1957	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_44
0x31d5	      0xe800000000	                          call 0x400321a	      1958	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_45
0x31da	      0xe933050000	                           jmp 0x4003752	      1958	ops.c	FUNCTION_33	ELSE_1	IF_27	ELSE_3	CALL_45
0x31df	    0x8b0500000000	            mov eax, dword [0x04003225] 	      1964	ops.c	FUNCTION_33	ELSE_4	IF_33
0x31e5	            0x85c0	                           test eax, eax	      1964	ops.c	FUNCTION_33	ELSE_4	IF_33
0x31e7	     0xf8400020000	                            je 0x400342d	      1964	ops.c	FUNCTION_33	ELSE_4	IF_33
0x31ed	    0xc78570ffffff	               mov dword [rbp - 0x90], 0	      1966	ops.c	FUNCTION_33	ELSE_4	IF_33
0x31f7	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1969	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_46
0x31fe	        0x4883c020	                           add rax, 0x20	      1969	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_46
0x3202	          0x4889c7	                            mov rdi, rax	      1969	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_46
0x3205	      0xe800000000	                          call 0x400324a	      1969	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_46
0x320a	          0x83f809	                              cmp eax, 9	      1969	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_46
0x320d	     0xf85ed000000	                           jne 0x4003340	      1969	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_46
0x3213	      0xe800000000	                          call 0x4003258	      1971	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_35	CALL_47
0x3218	            0x85c0	                           test eax, eax	      1971	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_35	CALL_47
0x321a	            0x750a	                           jne 0x4003266	      1971	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_35	CALL_47
0x321c	      0xb800000000	                              mov eax, 0	      1972	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_35
0x3221	      0xe992050000	                           jmp 0x40037f8	      1972	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_35
0x3226	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1973	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_36
0x322d	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1973	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_36
0x3231	        0x4883f801	                              cmp rax, 1	      1973	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_36
0x3235	            0x7523	                           jne 0x400329a	      1973	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_36
0x3237	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1974	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_48
0x323e	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      1974	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_48
0x3241	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1974	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_48
0x3248	          0x8b4038	            mov eax, dword [rax + 0x38] 	      1974	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_48
0x324b	            0x89d6	                            mov esi, edx	      1974	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_48
0x324d	            0x89c7	                            mov edi, eax	      1974	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_48
0x324f	      0xe800000000	                          call 0x4003294	      1974	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_48
0x3254	    0x898570ffffff	             mov dword [rbp - 0x90], eax	      1974	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_48
0x325a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1975	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_50
0x3261	          0x8b502c	            mov edx, dword [rax + 0x2c] 	      1975	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_50
0x3264	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1975	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_50
0x326b	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1975	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_50
0x326e	            0x89d6	                            mov esi, edx	      1975	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_50
0x3270	            0x89c7	                            mov edi, eax	      1975	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_50
0x3272	      0xe800000000	                          call 0x40032b7	      1975	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_50
0x3277	            0x89c7	                            mov edi, eax	      1975	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_50
0x3279	      0xe800000000	                          call 0x40032be	      1975	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	CALL_50
0x327e	    0x488b05000000	            mov rax, qword [0x040032c5] 	      1976	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34
0x3285	    0x488b8d58ffff	             mov rcx, qword [rbp - 0xa8]	      1976	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34
0x328c	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      1976	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34
0x3290	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1976	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34
0x3294	        0x48894120	             mov qword [rcx + 0x20], rax	      1976	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34
0x3298	        0x48895128	             mov qword [rcx + 0x28], rdx	      1976	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34
0x329c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1977	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x32a3	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1977	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x32a7	        0x4883f801	                              cmp rax, 1	      1977	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x32ab	            0x7553	                           jne 0x4003340	      1977	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x32ad	    0x8b8570ffffff	             mov eax, dword [rbp - 0x90]	      1979	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37	CALL_51
0x32b3	            0x89c7	                            mov edi, eax	      1979	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37	CALL_51
0x32b5	      0xe800000000	                          call 0x40032fa	      1979	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37	CALL_51
0x32ba	    0x488b05000000	            mov rax, qword [0x04003301] 	      1980	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x32c1	          0x8b5040	            mov edx, dword [rax + 0x40] 	      1980	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x32c4	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1980	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x32cb	          0x895038	             mov dword [rax + 0x38], edx	      1980	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x32ce	    0x488b05000000	            mov rax, qword [0x04003315] 	      1981	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x32d5	          0x8b5044	            mov edx, dword [rax + 0x44] 	      1981	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x32d8	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1981	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x32df	          0x89503c	             mov dword [rax + 0x3c], edx	      1981	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x32e2	    0x488b0d000000	            mov rcx, qword [0x04003329] 	      1982	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x32e9	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1982	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x32f0	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1982	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x32f4	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1982	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x32f8	        0x48894138	             mov qword [rcx + 0x38], rax	      1982	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x32fc	        0x48895140	             mov qword [rcx + 0x40], rdx	      1982	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_34	IF_37
0x3300	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1987	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_52
0x3307	        0x4883c030	                           add rax, 0x30	      1987	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_52
0x330b	          0x4889c7	                            mov rdi, rax	      1987	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_52
0x330e	      0xe800000000	                          call 0x4003353	      1987	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_52
0x3313	          0x83f809	                              cmp eax, 9	      1987	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_52
0x3316	     0xf85d1000000	                           jne 0x400342d	      1987	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_52
0x331c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1988	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x3323	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      1988	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x3326	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1988	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x332d	          0x8b4014	            mov eax, dword [rax + 0x14] 	      1988	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x3330	            0x39c2	                            cmp edx, eax	      1988	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x3332	     0xf8db5000000	                           jge 0x400342d	      1988	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x3338	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1992	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39
0x333f	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1992	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39
0x3343	        0x488d5001	                      lea rdx, [rax + 1]	      1992	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39
0x3347	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1991	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39	CALL_53
0x334e	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1991	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39	CALL_53
0x3352	        0x4883e801	                              sub rax, 1	      1991	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39	CALL_53
0x3356	          0x4889d6	                            mov rsi, rdx	      1991	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39	CALL_53
0x3359	          0x4889c7	                            mov rdi, rax	      1991	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39	CALL_53
0x335c	      0xe800000000	                          call 0x40033a1	      1991	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39	CALL_53
0x3361	            0x85c0	                           test eax, eax	      1991	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39	CALL_53
0x3363	            0x750a	                           jne 0x40033af	      1991	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39	CALL_53
0x3365	      0xb800000000	                              mov eax, 0	      1993	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39
0x336a	      0xe949040000	                           jmp 0x40037f8	      1993	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	IF_39
0x336f	    0x488b0d000000	            mov rcx, qword [0x040033b6] 	      1994	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x3376	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1994	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x337d	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      1994	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x3381	        0x488b4030	            mov rax, qword [rax + 0x30] 	      1994	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x3385	        0x48894138	             mov qword [rcx + 0x38], rax	      1994	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x3389	        0x48895140	             mov qword [rcx + 0x40], rdx	      1994	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x338d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1995	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_55
0x3394	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      1995	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_55
0x3397	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1995	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_55
0x339e	          0x8b4038	            mov eax, dword [rax + 0x38] 	      1995	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_55
0x33a1	            0x89d6	                            mov esi, edx	      1995	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_55
0x33a3	            0x89c7	                            mov edi, eax	      1995	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_55
0x33a5	      0xe800000000	                          call 0x40033ea	      1995	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_55
0x33aa	            0x89c7	                            mov edi, eax	      1995	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_55
0x33ac	      0xe800000000	                          call 0x40033f1	      1995	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38	CALL_55
0x33b1	    0x488b05000000	            mov rax, qword [0x040033f8] 	      1996	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x33b8	    0x488b8d58ffff	             mov rcx, qword [rbp - 0xa8]	      1996	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x33bf	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      1996	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x33c3	        0x488b4038	            mov rax, qword [rax + 0x38] 	      1996	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x33c7	        0x48894130	             mov qword [rcx + 0x30], rax	      1996	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x33cb	        0x48895138	             mov qword [rcx + 0x38], rdx	      1996	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x33cf	    0x488b0d000000	            mov rcx, qword [0x04003416] 	      1997	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x33d6	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1997	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x33dd	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      1997	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x33e1	        0x488b4020	            mov rax, qword [rax + 0x20] 	      1997	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x33e5	        0x48894138	             mov qword [rcx + 0x38], rax	      1997	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x33e9	        0x48895140	             mov qword [rcx + 0x40], rdx	      1997	ops.c	FUNCTION_33	ELSE_4	IF_33	IF_38
0x33ed	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2002	ops.c	FUNCTION_33	ELSE_4	IF_40
0x33f4	        0x488b4050	            mov rax, qword [rax + 0x50] 	      2002	ops.c	FUNCTION_33	ELSE_4	IF_40
0x33f8	        0x4883f801	                              cmp rax, 1	      2002	ops.c	FUNCTION_33	ELSE_4	IF_40
0x33fc	     0xf85ca010000	                           jne 0x400360c	      2002	ops.c	FUNCTION_33	ELSE_4	IF_40
0x3402	      0xe800000000	                          call 0x4003447	      2004	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_41	CALL_56
0x3407	            0x85c0	                           test eax, eax	      2004	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_41	CALL_56
0x3409	            0x750a	                           jne 0x4003455	      2004	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_41	CALL_56
0x340b	      0xb800000000	                              mov eax, 0	      2005	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_41
0x3410	      0xe9a3030000	                           jmp 0x40037f8	      2005	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_41
0x3415	    0x488b05000000	            mov rax, qword [0x0400345c] 	      2008	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42	CALL_57
0x341c	      0xbe24000000	                           mov esi, 0x24	      2008	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42	CALL_57
0x3421	          0x4889c7	                            mov rdi, rax	      2008	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42	CALL_57
0x3424	      0xe800000000	                          call 0x4003469	      2008	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42	CALL_57
0x3429	          0x4885c0	                           test rax, rax	      2008	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42	CALL_57
0x342c	            0x745e	                            je 0x40034cc	      2008	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42	CALL_57
0x342e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2009	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x3435	            0x8b00	                    mov eax, dword [rax]	      2009	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x3437	          0x83f803	                              cmp eax, 3	      2009	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x343a	            0x7550	                           jne 0x40034cc	      2009	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x343c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2010	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x3443	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2010	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x3447	    0x488b05000000	            mov rax, qword [0x0400348e] 	      2010	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x344e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2010	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x3452	          0x4839c2	                            cmp rdx, rax	      2010	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x3455	            0x7535	                           jne 0x40034cc	      2010	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x3457	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2011	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x345e	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      2011	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x3461	            0x85c0	                           test eax, eax	      2011	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x3463	            0x7527	                           jne 0x40034cc	      2011	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_42
0x3465	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2012	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x346c	          0x8b5038	            mov edx, dword [rax + 0x38] 	      2012	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x346f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2012	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x3476	          0x8b4014	            mov eax, dword [rax + 0x14] 	      2012	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x3479	            0x85c0	                           test eax, eax	      2012	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x347b	           0xf94c0	                                 sete al	      2012	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x347e	           0xfb6c0	                           movzx eax, al	      2012	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x3481	            0x29c2	                            sub edx, eax	      2012	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x3483	            0x89d0	                            mov eax, edx	      2012	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x3485	            0x89c7	                            mov edi, eax	      2012	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x3487	      0xe800000000	                          call 0x40034cc	      2012	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_58
0x348c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2014	ops.c	FUNCTION_33	ELSE_4	IF_40
0x3493	          0x8b5038	            mov edx, dword [rax + 0x38] 	      2014	ops.c	FUNCTION_33	ELSE_4	IF_40
0x3496	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2014	ops.c	FUNCTION_33	ELSE_4	IF_40
0x349d	          0x8b4028	            mov eax, dword [rax + 0x28] 	      2014	ops.c	FUNCTION_33	ELSE_4	IF_40
0x34a0	            0x29c2	                            sub edx, eax	      2014	ops.c	FUNCTION_33	ELSE_4	IF_40
0x34a2	            0x89d0	                            mov eax, edx	      2014	ops.c	FUNCTION_33	ELSE_4	IF_40
0x34a4	          0x8d5001	                      lea edx, [rax + 1]	      2014	ops.c	FUNCTION_33	ELSE_4	IF_40
0x34a7	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2014	ops.c	FUNCTION_33	ELSE_4	IF_40
0x34ae	          0x8b4014	            mov eax, dword [rax + 0x14] 	      2014	ops.c	FUNCTION_33	ELSE_4	IF_40
0x34b1	            0x85c0	                           test eax, eax	      2014	ops.c	FUNCTION_33	ELSE_4	IF_40
0x34b3	           0xf94c0	                                 sete al	      2014	ops.c	FUNCTION_33	ELSE_4	IF_40
0x34b6	           0xfb6c0	                           movzx eax, al	      2014	ops.c	FUNCTION_33	ELSE_4	IF_40
0x34b9	            0x29c2	                            sub edx, eax	      2014	ops.c	FUNCTION_33	ELSE_4	IF_40
0x34bb	            0x89d0	                            mov eax, edx	      2014	ops.c	FUNCTION_33	ELSE_4	IF_40
0x34bd	    0x898568ffffff	             mov dword [rbp - 0x98], eax	      2014	ops.c	FUNCTION_33	ELSE_4	IF_40
0x34c3	    0x8b0500000000	            mov eax, dword [0x04003509] 	      2017	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43
0x34c9	            0x85c0	                           test eax, eax	      2017	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43
0x34cb	     0xf84ae000000	                            je 0x40035bf	      2017	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43
0x34d1	      0xe800000000	                          call 0x4003516	      2022	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	CALL_59
0x34d6	        0x488945a8	             mov qword [rbp - 0x58], rax	      2022	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	CALL_59
0x34da	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      2023	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	CALL_60
0x34de	          0x4889c7	                            mov rdi, rax	      2023	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	CALL_60
0x34e1	      0xe800000000	                          call 0x4003526	      2023	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	CALL_60
0x34e6	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      2023	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	CALL_60
0x34ec	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2025	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x34f3	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      2025	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x34f6	            0x85c0	                           test eax, eax	      2025	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x34f8	            0x7443	                            je 0x400357d	      2025	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x34fa	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2026	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x3501	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2026	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x3504	    0x8b957cffffff	             mov edx, dword [rbp - 0x84]	      2026	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x350a	          0x83ea01	                              sub edx, 1	      2026	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x350d	            0x39d0	                            cmp eax, edx	      2026	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x350f	            0x7c2c	                            jl 0x400357d	      2026	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x3511	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2027	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x3518	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      2027	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x351b	            0x85c0	                           test eax, eax	      2027	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x351d	            0x7417	                            je 0x4003576	      2027	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x351f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2027	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x3526	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2027	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x3529	    0x8b957cffffff	             mov edx, dword [rbp - 0x84]	      2027	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x352f	          0x83ea01	                              sub edx, 1	      2027	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x3532	            0x39d0	                            cmp eax, edx	      2027	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x3534	            0x7d07	                           jge 0x400357d	      2027	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x3536	    0x838568ffffff	               add dword [rbp - 0x98], 1	      2028	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_44
0x353d	    0x83bd68ffffff	               cmp dword [rbp - 0x98], 0	      2030	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_45
0x3544	            0x7522	                           jne 0x40035a8	      2030	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_45
0x3546	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2030	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_45
0x354d	          0x8b502c	            mov edx, dword [rax + 0x2c] 	      2030	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_45
0x3550	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2030	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_45
0x3557	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      2030	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_45
0x355a	            0x39c2	                            cmp edx, eax	      2030	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_45
0x355c	            0x740a	                            je 0x40035a8	      2030	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_45
0x355e	    0xc78568ffffff	               mov dword [rbp - 0x98], 1	      2031	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_45
0x3568	      0xe800000000	                          call 0x40035ad	      2034	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_46	CALL_61
0x356d	            0x85c0	                           test eax, eax	      2034	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_46	CALL_61
0x356f	            0x740e	                            je 0x40035bf	      2034	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_46	CALL_61
0x3571	    0x488b05000000	            mov rax, qword [0x040035b8] 	      2035	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_46
0x3578	    0xc74044000000	               mov dword [rax + 0x44], 0	      2035	ops.c	FUNCTION_33	ELSE_4	IF_40	IF_43	IF_46
0x357f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2039	ops.c	FUNCTION_33	ELSE_4	IF_40
0x3586	            0x8b00	                    mov eax, dword [rax]	      2039	ops.c	FUNCTION_33	ELSE_4	IF_40
0x3588	          0x83f801	                              cmp eax, 1	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x358b	            0x7515	                           jne 0x40035e2	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x358d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2039	ops.c	FUNCTION_33	ELSE_4	IF_40
0x3594	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      2039	ops.c	FUNCTION_33	ELSE_4	IF_40
0x3597	            0x85c0	                           test eax, eax	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x3599	            0x7507	                           jne 0x40035e2	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x359b	      0xba01000000	                              mov edx, 1	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x35a0	            0xeb05	                           jmp 0x40035e7	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x35a2	      0xba00000000	                              mov edx, 0	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x35a7	    0x8b0500000000	            mov eax, dword [0x040035ed] 	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x35ad	            0x85c0	                           test eax, eax	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x35af	           0xf94c0	                                 sete al	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x35b2	           0xfb6c8	                           movzx ecx, al	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x35b5	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x35bb	            0x4898	                                    cdqe	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x35bd	            0x89ce	                            mov esi, ecx	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x35bf	          0x4889c7	                            mov rdi, rax	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x35c2	      0xe800000000	                          call 0x4003607	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x35c7	      0xe946010000	                           jmp 0x4003752	      2038	ops.c	FUNCTION_33	ELSE_4	IF_40	CALL_62
0x35cc	    0x488b05000000	            mov rax, qword [0x04003613] 	      2047	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47
0x35d3	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2047	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47
0x35d7	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2047	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47
0x35de	        0x488b4050	            mov rax, qword [rax + 0x50] 	      2047	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47
0x35e2	          0x4801c2	                            add rdx, rax	      2046	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47	CALL_63
0x35e5	    0x488b05000000	            mov rax, qword [0x0400362c] 	      2046	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47	CALL_63
0x35ec	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2046	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47	CALL_63
0x35f0	        0x4883e801	                              sub rax, 1	      2046	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47	CALL_63
0x35f4	          0x4889d6	                            mov rsi, rdx	      2046	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47	CALL_63
0x35f7	          0x4889c7	                            mov rdi, rax	      2046	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47	CALL_63
0x35fa	      0xe800000000	                          call 0x400363f	      2046	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47	CALL_63
0x35ff	            0x85c0	                           test eax, eax	      2046	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47	CALL_63
0x3601	            0x750a	                           jne 0x400364d	      2046	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47	CALL_63
0x3603	      0xb800000000	                              mov eax, 0	      2048	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47
0x3608	      0xe9ab010000	                           jmp 0x40037f8	      2048	ops.c	FUNCTION_33	ELSE_4	ELSE_5	IF_47
0x360d	      0xbf01000000	                              mov edi, 1	      2050	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_64
0x3612	      0xe800000000	                          call 0x4003657	      2050	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_64
0x3617	    0x488b05000000	            mov rax, qword [0x0400365e] 	      2052	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x361e	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2052	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x3622	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2052	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x3626	        0x488945b0	             mov qword [rbp - 0x50], rax	      2052	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x362a	        0x488955b8	             mov qword [rbp - 0x48], rdx	      2052	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x362e	    0x488b05000000	            mov rax, qword [0x04003675] 	      2053	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x3635	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2053	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x3639	        0x4883c201	                              add rdx, 1	      2053	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x363d	        0x48895038	             mov qword [rax + 0x38], rdx	      2053	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x3641	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2054	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_65
0x3648	        0x488b4050	            mov rax, qword [rax + 0x50] 	      2054	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_65
0x364c	        0x4883e802	                              sub rax, 2	      2054	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_65
0x3650	      0xbe00000000	                              mov esi, 0	      2054	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_65
0x3655	          0x4889c7	                            mov rdi, rax	      2054	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_65
0x3658	      0xe800000000	                          call 0x400369d	      2054	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_65
0x365d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2057	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x3664	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2057	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x3667	          0x8d5001	                      lea edx, [rax + 1]	      2057	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x366a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2057	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x3671	          0x8b4014	            mov eax, dword [rax + 0x14] 	      2057	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x3674	            0x85c0	                           test eax, eax	      2057	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x3676	           0xf94c0	                                 sete al	      2057	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x3679	           0xfb6c0	                           movzx eax, al	      2057	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x367c	            0x29c2	                            sub edx, eax	      2057	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x367e	            0x89d0	                            mov eax, edx	      2057	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x3680	    0x898568ffffff	             mov dword [rbp - 0x98], eax	      2057	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x3686	    0x488b05000000	            mov rax, qword [0x040036cd] 	      2058	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x368d	    0xc74040000000	               mov dword [rax + 0x40], 0	      2058	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x3694	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2060	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x369b	            0x8b00	                    mov eax, dword [rax]	      2060	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x369d	          0x83f801	                              cmp eax, 1	      2059	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x36a0	            0x7515	                           jne 0x40036f7	      2059	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x36a2	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2060	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x36a9	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      2060	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x36ac	            0x85c0	                           test eax, eax	      2059	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x36ae	            0x7507	                           jne 0x40036f7	      2059	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x36b0	      0xba01000000	                              mov edx, 1	      2059	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x36b5	            0xeb05	                           jmp 0x40036fc	      2059	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x36b7	      0xba00000000	                              mov edx, 0	      2059	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x36bc	    0x8b0500000000	            mov eax, dword [0x04003702] 	      2059	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x36c2	            0x85c0	                           test eax, eax	      2059	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x36c4	           0xf94c0	                                 sete al	      2059	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x36c7	           0xfb6c8	                           movzx ecx, al	      2059	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x36ca	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      2059	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x36d0	            0x4898	                                    cdqe	      2059	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x36d2	            0x89ce	                            mov esi, ecx	      2059	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x36d4	          0x4889c7	                            mov rdi, rax	      2059	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x36d7	      0xe800000000	                          call 0x400371c	      2059	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_66
0x36dc	    0x488b0d000000	            mov rcx, qword [0x04003723] 	      2061	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x36e3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2061	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x36e7	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      2061	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x36eb	        0x48894138	             mov qword [rcx + 0x38], rax	      2061	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x36ef	        0x48895140	             mov qword [rcx + 0x40], rdx	      2061	ops.c	FUNCTION_33	ELSE_4	ELSE_5
0x36f3	    0x41b800000000	                              mov r8d, 0	      2062	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_67
0x36f9	      0xb900000000	                              mov ecx, 0	      2062	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_67
0x36fe	      0xba00000000	                              mov edx, 0	      2062	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_67
0x3703	      0xbe00000000	                              mov esi, 0	      2062	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_67
0x3708	      0xbf02000000	                              mov edi, 2	      2062	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_67
0x370d	      0xe800000000	                          call 0x4003752	      2062	ops.c	FUNCTION_33	ELSE_4	ELSE_5	CALL_67
0x3712	    0x488b05000000	            mov rax, qword [0x04003759] 	      2066	ops.c	FUNCTION_33	CALL_68
0x3719	          0x488b00	                    mov rax, qword [rax]	      2066	ops.c	FUNCTION_33	CALL_68
0x371c	        0x482b4590	             sub rax, qword [rbp - 0x70]	      2066	ops.c	FUNCTION_33	CALL_68
0x3720	          0x4889c7	                            mov rdi, rax	      2066	ops.c	FUNCTION_33	CALL_68
0x3723	      0xe800000000	                          call 0x4003768	      2066	ops.c	FUNCTION_33	CALL_68
0x3728	            0xeb01	                           jmp 0x400376b	      2066	ops.c	FUNCTION_33	CALL_68
0x372a	              0x90	                                     nop	      1790	ops.c	FUNCTION_33	IF_8	IF_9
0x372b	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2071	ops.c	FUNCTION_33	IF_48
0x3732	          0x8b4060	            mov eax, dword [rax + 0x60] 	      2071	ops.c	FUNCTION_33	IF_48
0x3735	            0x85c0	                           test eax, eax	      2071	ops.c	FUNCTION_33	IF_48
0x3737	            0x7432	                            je 0x40037ab	      2071	ops.c	FUNCTION_33	IF_48
0x3739	    0x488b05000000	            mov rax, qword [0x04003780] 	      2073	ops.c	FUNCTION_33	IF_48
0x3740	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      2073	ops.c	FUNCTION_33	IF_48
0x3747	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	      2073	ops.c	FUNCTION_33	IF_48
0x374b	    0x488990f01100	          mov qword [rax + 0x11f0], rdx 	      2073	ops.c	FUNCTION_33	IF_48
0x3752	    0x488b05000000	            mov rax, qword [0x04003799] 	      2074	ops.c	FUNCTION_33	IF_48
0x3759	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      2074	ops.c	FUNCTION_33	IF_48
0x3760	          0x8b5228	            mov edx, dword [rdx + 0x28] 	      2074	ops.c	FUNCTION_33	IF_48
0x3763	    0x8990f8110000	          mov dword [rax + 0x11f8], edx 	      2074	ops.c	FUNCTION_33	IF_48
0x3769	            0xeb24	                           jmp 0x40037cf	      2074	ops.c	FUNCTION_33	IF_48
0x376b	    0x488b0d000000	            mov rcx, qword [0x040037b2] 	      2077	ops.c	FUNCTION_33	ELSE_6
0x3772	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2077	ops.c	FUNCTION_33	ELSE_6
0x3779	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2077	ops.c	FUNCTION_33	ELSE_6
0x377d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2077	ops.c	FUNCTION_33	ELSE_6
0x3781	    0x488981f01100	          mov qword [rcx + 0x11f0], rax 	      2077	ops.c	FUNCTION_33	ELSE_6
0x3788	    0x488991f81100	          mov qword [rcx + 0x11f8], rdx 	      2077	ops.c	FUNCTION_33	ELSE_6
0x378f	    0x488b0d000000	            mov rcx, qword [0x040037d6] 	      2078	ops.c	FUNCTION_33	ELSE_6
0x3796	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2078	ops.c	FUNCTION_33	ELSE_6
0x379d	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2078	ops.c	FUNCTION_33	ELSE_6
0x37a1	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2078	ops.c	FUNCTION_33	ELSE_6
0x37a5	    0x488981d01100	          mov qword [rcx + 0x11d0], rax 	      2078	ops.c	FUNCTION_33	ELSE_6
0x37ac	    0x488991d81100	          mov qword [rcx + 0x11d8], rdx 	      2078	ops.c	FUNCTION_33	ELSE_6
0x37b3	      0xb801000000	                              mov eax, 1	      2080	ops.c	FUNCTION_33	ELSE_6
0x37b8	        0x488b75f8	                mov rsi, qword [rbp - 8]	      2081	ops.c	FUNCTION_33	ELSE_6
0x37bc	    0x644833342528	                xor rsi, qword fs:[0x28]	      2081	ops.c	FUNCTION_33	ELSE_6
0x37c5	            0x7405	                            je 0x400380c	      2081	ops.c	FUNCTION_33	ELSE_6
0x37c7	      0xe800000000	                          call 0x400380c	      2081	ops.c	FUNCTION_33	ELSE_6
0x37cc	              0xc9	                                   leave	      2081	ops.c	FUNCTION_33	ELSE_6
0x37cd	              0xc3	                                     ret	      2081	ops.c	FUNCTION_33	ELSE_6
format_lines	CALL,34:FOR,1:SWITCH,0:functions,0:WHILE,1:DO,0:ELSE,8:IF,25	408
0x9d96	              0x55	                                push rbp	      4918	ops.c	FUNCTION_60
0x9d97	          0x4889e5	                            mov rbp, rsp	      4918	ops.c	FUNCTION_60
0x9d9a	    0x4881ec900000	                           sub rsp, 0x90	      4918	ops.c	FUNCTION_60
0x9da1	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	      4918	ops.c	FUNCTION_60
0x9da8	    0x89b574ffffff	             mov dword [rbp - 0x8c], esi	      4918	ops.c	FUNCTION_60
0x9dae	    0x64488b042528	                mov rax, qword fs:[0x28]	      4918	ops.c	FUNCTION_60
0x9db7	        0x488945f8	                mov qword [rbp - 8], rax	      4918	ops.c	FUNCTION_60
0x9dbb	            0x31c0	                            xor eax, eax	      4918	ops.c	FUNCTION_60
0x9dbd	    0xc745a0000000	               mov dword [rbp - 0x60], 0	      4923	ops.c	FUNCTION_60
0x9dc4	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	      4924	ops.c	FUNCTION_60
0x9dcb	    0xc7458c000000	               mov dword [rbp - 0x74], 0	      4926	ops.c	FUNCTION_60
0x9dd2	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      4928	ops.c	FUNCTION_60
0x9dda	    0xc745a8000000	               mov dword [rbp - 0x58], 0	      4931	ops.c	FUNCTION_60
0x9de1	    0xc745ac010000	               mov dword [rbp - 0x54], 1	      4933	ops.c	FUNCTION_60
0x9de8	    0xc745b0ffffff	     mov dword [rbp - 0x50], 0xffffffff 	      4934	ops.c	FUNCTION_60
0x9def	    0xc745b4010000	               mov dword [rbp - 0x4c], 1	      4939	ops.c	FUNCTION_60
0x9df6	    0xc745b8010000	               mov dword [rbp - 0x48], 1	      4942	ops.c	FUNCTION_60
0x9dfd	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      4943	ops.c	FUNCTION_60
0x9e04	    0x8b0500000000	            mov eax, dword [0x04009e4a] 	      4944	ops.c	FUNCTION_60
0x9e0a	          0x8945c0	             mov dword [rbp - 0x40], eax	      4944	ops.c	FUNCTION_60
0x9e0d	      0xbf01000000	                              mov edi, 1	      4947	ops.c	FUNCTION_60	CALL_1
0x9e12	      0xe800000000	                          call 0x4009e57	      4947	ops.c	FUNCTION_60	CALL_1
0x9e17	            0x89c2	                            mov edx, eax	      4947	ops.c	FUNCTION_60	CALL_1
0x9e19	            0x89d0	                            mov eax, edx	      4947	ops.c	FUNCTION_60	CALL_1
0x9e1b	             0x1c0	                            add eax, eax	      4947	ops.c	FUNCTION_60	CALL_1
0x9e1d	             0x1d0	                            add eax, edx	      4947	ops.c	FUNCTION_60	CALL_1
0x9e1f	          0x8945c4	             mov dword [rbp - 0x3c], eax	      4947	ops.c	FUNCTION_60	CALL_1
0x9e22	      0xbf71000000	                           mov edi, 0x71	      4951	ops.c	FUNCTION_60	CALL_2
0x9e27	      0xe800000000	                          call 0x4009e6c	      4951	ops.c	FUNCTION_60	CALL_2
0x9e2c	          0x8945c8	             mov dword [rbp - 0x38], eax	      4951	ops.c	FUNCTION_60	CALL_2
0x9e2f	      0xbf32000000	                           mov edi, 0x32	      4953	ops.c	FUNCTION_60	CALL_3
0x9e34	      0xe800000000	                          call 0x4009e79	      4953	ops.c	FUNCTION_60	CALL_3
0x9e39	          0x8945cc	             mov dword [rbp - 0x34], eax	      4953	ops.c	FUNCTION_60	CALL_3
0x9e3c	      0xbf6e000000	                           mov edi, 0x6e	      4954	ops.c	FUNCTION_60	CALL_4
0x9e41	      0xe800000000	                          call 0x4009e86	      4954	ops.c	FUNCTION_60	CALL_4
0x9e46	          0x8945d0	             mov dword [rbp - 0x30], eax	      4954	ops.c	FUNCTION_60	CALL_4
0x9e49	      0xbf77000000	                           mov edi, 0x77	      4955	ops.c	FUNCTION_60	CALL_5
0x9e4e	      0xe800000000	                          call 0x4009e93	      4955	ops.c	FUNCTION_60	CALL_5
0x9e53	          0x8945d4	             mov dword [rbp - 0x2c], eax	      4955	ops.c	FUNCTION_60	CALL_5
0x9e56	    0x488b05000000	            mov rax, qword [0x04009e9d] 	      4960	ops.c	FUNCTION_60	IF_1
0x9e5d	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4960	ops.c	FUNCTION_60	IF_1
0x9e61	        0x4883f801	                              cmp rax, 1	      4960	ops.c	FUNCTION_60	IF_1
0x9e65	            0x7e27	                           jle 0x4009ece	      4960	ops.c	FUNCTION_60	IF_1
0x9e67	    0x488b05000000	            mov rax, qword [0x04009eae] 	      4961	ops.c	FUNCTION_60	IF_1	CALL_6
0x9e6e	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4961	ops.c	FUNCTION_60	IF_1	CALL_6
0x9e72	        0x488d78ff	                      lea rdi, [rax - 1]	      4961	ops.c	FUNCTION_60	IF_1	CALL_6
0x9e76	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	      4961	ops.c	FUNCTION_60	IF_1	CALL_6
0x9e79	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      4961	ops.c	FUNCTION_60	IF_1	CALL_6
0x9e7d	        0x488d458c	                   lea rax, [rbp - 0x74]	      4961	ops.c	FUNCTION_60	IF_1	CALL_6
0x9e81	          0x4889c6	                            mov rsi, rax	      4961	ops.c	FUNCTION_60	IF_1	CALL_6
0x9e84	      0xe804060000	                  call sym.fmt_check_par	      4961	ops.c	FUNCTION_60	IF_1	CALL_6
0x9e89	          0x894594	             mov dword [rbp - 0x6c], eax	      4961	ops.c	FUNCTION_60	IF_1	CALL_6
0x9e8c	            0xeb07	                           jmp 0x4009ed5	      4961	ops.c	FUNCTION_60	IF_1	CALL_6
0x9e8e	    0xc74594010000	               mov dword [rbp - 0x6c], 1	      4967	ops.c	FUNCTION_60	ELSE_1
0x9e95	    0x488b05000000	            mov rax, qword [0x04009edc] 	      4968	ops.c	FUNCTION_60	CALL_7
0x9e9c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4968	ops.c	FUNCTION_60	CALL_7
0x9ea0	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	      4968	ops.c	FUNCTION_60	CALL_7
0x9ea3	        0x488d55e8	                   lea rdx, [rbp - 0x18]	      4968	ops.c	FUNCTION_60	CALL_7
0x9ea7	        0x488d7590	                   lea rsi, [rbp - 0x70]	      4968	ops.c	FUNCTION_60	CALL_7
0x9eab	          0x4889c7	                            mov rdi, rax	      4968	ops.c	FUNCTION_60	CALL_7
0x9eae	      0xe8da050000	                  call sym.fmt_check_par	      4968	ops.c	FUNCTION_60	CALL_7
0x9eb3	          0x894598	             mov dword [rbp - 0x68], eax	      4968	ops.c	FUNCTION_60	CALL_7
0x9eb6	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      4973	ops.c	FUNCTION_60
0x9eba	            0x7506	                           jne 0x4009f02	      4973	ops.c	FUNCTION_60
0x9ebc	        0x837d9800	               cmp dword [rbp - 0x68], 0	      4973	ops.c	FUNCTION_60
0x9ec0	            0x7407	                            je 0x4009f09	      4973	ops.c	FUNCTION_60
0x9ec2	      0xb801000000	                              mov eax, 1	      4973	ops.c	FUNCTION_60
0x9ec7	            0xeb05	                           jmp 0x4009f0e	      4973	ops.c	FUNCTION_60
0x9ec9	      0xb800000000	                              mov eax, 0	      4973	ops.c	FUNCTION_60
0x9ece	          0x89459c	             mov dword [rbp - 0x64], eax	      4973	ops.c	FUNCTION_60
0x9ed1	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      4974	ops.c	FUNCTION_60	IF_2
0x9ed5	            0x7528	                           jne 0x4009f3f	      4974	ops.c	FUNCTION_60	IF_2
0x9ed7	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      4974	ops.c	FUNCTION_60	IF_2
0x9edb	            0x7422	                            je 0x4009f3f	      4974	ops.c	FUNCTION_60	IF_2
0x9edd	    0x488b05000000	            mov rax, qword [0x04009f24] 	      4975	ops.c	FUNCTION_60	CALL_8
0x9ee4	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4975	ops.c	FUNCTION_60	CALL_8
0x9ee8	        0x4883e801	                              sub rax, 1	      4975	ops.c	FUNCTION_60	CALL_8
0x9eec	          0x4889c7	                            mov rdi, rax	      4975	ops.c	FUNCTION_60	CALL_8
0x9eef	      0xe824050000	                  call sym.ends_in_white	      4975	ops.c	FUNCTION_60	CALL_8
0x9ef4	            0x85c0	                           test eax, eax	      4975	ops.c	FUNCTION_60	CALL_8
0x9ef6	           0xf94c0	                                 sete al	      4975	ops.c	FUNCTION_60	CALL_8
0x9ef9	           0xfb6c0	                           movzx eax, al	      4975	ops.c	FUNCTION_60	CALL_8
0x9efc	          0x89459c	             mov dword [rbp - 0x64], eax	      4975	ops.c	FUNCTION_60	CALL_8
0x9eff	    0x488b05000000	            mov rax, qword [0x04009f46] 	      4977	ops.c	FUNCTION_60
0x9f06	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4977	ops.c	FUNCTION_60
0x9f0a	        0x4883ea01	                              sub rdx, 1	      4977	ops.c	FUNCTION_60
0x9f0e	        0x48895038	             mov qword [rax + 0x38], rdx	      4977	ops.c	FUNCTION_60
0x9f12	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      4978	ops.c	FUNCTION_60	FOR_1
0x9f19	        0x488945f0	             mov qword [rbp - 0x10], rax	      4978	ops.c	FUNCTION_60	FOR_1
0x9f1d	      0xe9c4040000	                           jmp 0x400a426	      4978	ops.c	FUNCTION_60	FOR_1
0x9f22	        0x837dac00	               cmp dword [rbp - 0x54], 0	      4983	ops.c	FUNCTION_60	FOR_1	IF_3
0x9f26	            0x742d	                            je 0x4009f95	      4983	ops.c	FUNCTION_60	FOR_1	IF_3
0x9f28	    0x488b05000000	            mov rax, qword [0x04009f6f] 	      4985	ops.c	FUNCTION_60	FOR_1	IF_3
0x9f2f	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4985	ops.c	FUNCTION_60	FOR_1	IF_3
0x9f33	        0x4883c201	                              add rdx, 1	      4985	ops.c	FUNCTION_60	FOR_1	IF_3
0x9f37	        0x48895038	             mov qword [rax + 0x38], rdx	      4985	ops.c	FUNCTION_60	FOR_1	IF_3
0x9f3b	          0x8b459c	             mov eax, dword [rbp - 0x64]	      4986	ops.c	FUNCTION_60	FOR_1	IF_3
0x9f3e	          0x8945a0	             mov dword [rbp - 0x60], eax	      4986	ops.c	FUNCTION_60	FOR_1	IF_3
0x9f41	          0x8b4598	             mov eax, dword [rbp - 0x68]	      4987	ops.c	FUNCTION_60	FOR_1	IF_3
0x9f44	          0x894594	             mov dword [rbp - 0x6c], eax	      4987	ops.c	FUNCTION_60	FOR_1	IF_3
0x9f47	          0x8b4590	             mov eax, dword [rbp - 0x70]	      4989	ops.c	FUNCTION_60	FOR_1	IF_3
0x9f4a	          0x89458c	             mov dword [rbp - 0x74], eax	      4989	ops.c	FUNCTION_60	FOR_1	IF_3
0x9f4d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4990	ops.c	FUNCTION_60	FOR_1	IF_3
0x9f51	        0x488945e0	             mov qword [rbp - 0x20], rax	      4990	ops.c	FUNCTION_60	FOR_1	IF_3
0x9f55	      0x48837df001	               cmp qword [rbp - 0x10], 1	      4997	ops.c	FUNCTION_60	FOR_1	IF_4
0x9f5a	            0x741a	                            je 0x4009fb6	      4997	ops.c	FUNCTION_60	FOR_1	IF_4
0x9f5c	    0x488b05000000	            mov rax, qword [0x04009fa3] 	      4997	ops.c	FUNCTION_60	FOR_1	IF_4
0x9f63	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4997	ops.c	FUNCTION_60	FOR_1	IF_4
0x9f67	    0x488b05000000	            mov rax, qword [0x04009fae] 	      4997	ops.c	FUNCTION_60	FOR_1	IF_4
0x9f6e	          0x488b00	                    mov rax, qword [rax]	      4997	ops.c	FUNCTION_60	FOR_1	IF_4
0x9f71	          0x4839c2	                            cmp rdx, rax	      4997	ops.c	FUNCTION_60	FOR_1	IF_4
0x9f74	            0x7518	                           jne 0x4009fce	      4997	ops.c	FUNCTION_60	FOR_1	IF_4
0x9f76	    0xc74598010000	               mov dword [rbp - 0x68], 1	      4999	ops.c	FUNCTION_60	FOR_1	IF_4
0x9f7d	    0xc74590000000	               mov dword [rbp - 0x70], 0	      5001	ops.c	FUNCTION_60	FOR_1	IF_4
0x9f84	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      5002	ops.c	FUNCTION_60	FOR_1	IF_4
0x9f8c	            0xeb4d	                           jmp 0x400a01b	      5002	ops.c	FUNCTION_60	FOR_1	IF_4
0x9f8e	    0x488b05000000	            mov rax, qword [0x04009fd5] 	      5007	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_9
0x9f95	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5007	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_9
0x9f99	        0x488d7801	                      lea rdi, [rax + 1]	      5007	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_9
0x9f9d	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	      5007	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_9
0x9fa0	        0x488d55e8	                   lea rdx, [rbp - 0x18]	      5007	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_9
0x9fa4	        0x488d4590	                   lea rax, [rbp - 0x70]	      5007	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_9
0x9fa8	          0x4889c6	                            mov rsi, rax	      5007	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_9
0x9fab	      0xe8dd040000	                  call sym.fmt_check_par	      5007	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_9
0x9fb0	          0x894598	             mov dword [rbp - 0x68], eax	      5007	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_9
0x9fb3	        0x837dd000	               cmp dword [rbp - 0x30], 0	      5012	ops.c	FUNCTION_60	FOR_1	ELSE_2	IF_5
0x9fb7	            0x7422	                            je 0x400a01b	      5012	ops.c	FUNCTION_60	FOR_1	ELSE_2	IF_5
0x9fb9	    0x488b05000000	            mov rax, qword [0x0400a000] 	      5014	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_10
0x9fc0	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5014	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_10
0x9fc4	        0x4883c001	                              add rax, 1	      5014	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_10
0x9fc8	          0x4889c7	                            mov rdi, rax	      5014	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_10
0x9fcb	      0xe800000000	                          call 0x400a010	      5014	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_10
0x9fd0	            0x85c0	                           test eax, eax	      5014	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_10
0x9fd2	           0xf9fc0	                                 setg al	      5014	ops.c	FUNCTION_60	FOR_1	ELSE_2	CALL_10
0x9fd5	           0xfb6c0	                           movzx eax, al	      5013	ops.c	FUNCTION_60	FOR_1	ELSE_2	IF_5
0x9fd8	          0x8945a4	             mov dword [rbp - 0x5c], eax	      5013	ops.c	FUNCTION_60	FOR_1	ELSE_2	IF_5
0x9fdb	    0xc745ac010000	               mov dword [rbp - 0x54], 1	      5016	ops.c	FUNCTION_60	FOR_1
0x9fe2	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      5017	ops.c	FUNCTION_60	FOR_1
0x9fe6	            0x750c	                           jne 0x400a034	      5017	ops.c	FUNCTION_60	FOR_1
0x9fe8	        0x837d9800	               cmp dword [rbp - 0x68], 0	      5017	ops.c	FUNCTION_60	FOR_1
0x9fec	            0x7506	                           jne 0x400a034	      5017	ops.c	FUNCTION_60	FOR_1
0x9fee	        0x837da400	               cmp dword [rbp - 0x5c], 0	      5017	ops.c	FUNCTION_60	FOR_1
0x9ff2	            0x7407	                            je 0x400a03b	      5017	ops.c	FUNCTION_60	FOR_1
0x9ff4	      0xb801000000	                              mov eax, 1	      5017	ops.c	FUNCTION_60	FOR_1
0x9ff9	            0xeb05	                           jmp 0x400a040	      5017	ops.c	FUNCTION_60	FOR_1
0x9ffb	      0xb800000000	                              mov eax, 0	      5017	ops.c	FUNCTION_60	FOR_1
0xa000	          0x89459c	             mov dword [rbp - 0x64], eax	      5017	ops.c	FUNCTION_60	FOR_1
0xa003	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      5018	ops.c	FUNCTION_60	FOR_1	IF_6
0xa007	            0x7524	                           jne 0x400a06d	      5018	ops.c	FUNCTION_60	FOR_1	IF_6
0xa009	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      5018	ops.c	FUNCTION_60	FOR_1	IF_6
0xa00d	            0x741e	                            je 0x400a06d	      5018	ops.c	FUNCTION_60	FOR_1	IF_6
0xa00f	    0x488b05000000	            mov rax, qword [0x0400a056] 	      5019	ops.c	FUNCTION_60	FOR_1	CALL_11
0xa016	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5019	ops.c	FUNCTION_60	FOR_1	CALL_11
0xa01a	          0x4889c7	                            mov rdi, rax	      5019	ops.c	FUNCTION_60	FOR_1	CALL_11
0xa01d	      0xe8f6030000	                  call sym.ends_in_white	      5019	ops.c	FUNCTION_60	FOR_1	CALL_11
0xa022	            0x85c0	                           test eax, eax	      5019	ops.c	FUNCTION_60	FOR_1	CALL_11
0xa024	           0xf94c0	                                 sete al	      5019	ops.c	FUNCTION_60	FOR_1	CALL_11
0xa027	           0xfb6c0	                           movzx eax, al	      5019	ops.c	FUNCTION_60	FOR_1	CALL_11
0xa02a	          0x89459c	             mov dword [rbp - 0x64], eax	      5019	ops.c	FUNCTION_60	FOR_1	CALL_11
0xa02d	        0x837d9400	               cmp dword [rbp - 0x6c], 0	      5024	ops.c	FUNCTION_60	FOR_1	IF_7
0xa031	            0x7413	                            je 0x400a086	      5024	ops.c	FUNCTION_60	FOR_1	IF_7
0xa033	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      5026	ops.c	FUNCTION_60	FOR_1	IF_7	IF_8
0xa03b	     0xf899b030000	                           jns 0x400a41c	      5026	ops.c	FUNCTION_60	FOR_1	IF_7	IF_8
0xa041	      0xe9bb030000	                           jmp 0x400a441	      5027	ops.c	FUNCTION_60	FOR_1	IF_7	IF_8
0xa046	        0x837db400	               cmp dword [rbp - 0x4c], 0	      5035	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0xa04a	     0xf84de000000	                            je 0x400a16e	      5035	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0xa050	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      5036	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0xa054	            0x750a	                           jne 0x400a0a0	      5036	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0xa056	        0x837dd000	               cmp dword [rbp - 0x30], 0	      5036	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0xa05a	     0xf84ce000000	                            je 0x400a16e	      5036	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0xa060	        0x837da000	               cmp dword [rbp - 0x60], 0	      5037	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0xa064	     0xf84c4000000	                            je 0x400a16e	      5037	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0xa06a	    0x488b05000000	            mov rax, qword [0x0400a0b1] 	      5038	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0xa071	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5038	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0xa075	    0x488b05000000	            mov rax, qword [0x0400a0bc] 	      5038	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0xa07c	          0x488b00	                    mov rax, qword [rax]	      5038	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0xa07f	          0x4839c2	                            cmp rdx, rax	      5038	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0xa082	     0xf8da6000000	                           jge 0x400a16e	      5038	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9
0xa088	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      5040	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0xa08c	            0x7457	                            je 0x400a125	      5040	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0xa08e	    0x488b05000000	            mov rax, qword [0x0400a0d5] 	      5040	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0xa095	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5040	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0xa099	        0x4883c001	                              add rax, 1	      5040	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0xa09d	          0x4889c7	                            mov rdi, rax	      5040	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0xa0a0	      0xe800000000	                          call 0x400a0e5	      5040	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0xa0a5	           0xfb600	                   movzx eax, byte [rax]	      5040	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0xa0a8	            0x84c0	                             test al, al	      5040	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0xa0aa	            0x7439	                            je 0x400a125	      5040	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	CALL_12
0xa0ac	          0x8b458c	             mov eax, dword [rbp - 0x74]	      5043	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0xa0af	            0x85c0	                           test eax, eax	      5043	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0xa0b1	            0x7523	                           jne 0x400a116	      5043	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0xa0b3	          0x8b4590	             mov eax, dword [rbp - 0x70]	      5043	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0xa0b6	            0x85c0	                           test eax, eax	      5043	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0xa0b8	            0x751c	                           jne 0x400a116	      5043	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0xa0ba	    0x488b05000000	            mov rax, qword [0x0400a101] 	      5048	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11	CALL_13
0xa0c1	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5048	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11	CALL_13
0xa0c5	        0x4883c001	                              add rax, 1	      5048	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11	CALL_13
0xa0c9	          0x4889c7	                            mov rdi, rax	      5047	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0xa0cc	      0xe800000000	                          call 0x400a111	      5047	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0xa0d1	          0x8945b0	             mov dword [rbp - 0x50], eax	      5047	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0xa0d4	            0xeb58	                           jmp 0x400a16e	      5043	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0xa0d6	          0x8b4590	             mov eax, dword [rbp - 0x70]	      5053	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	ELSE_4
0xa0d9	          0x8945b0	             mov dword [rbp - 0x50], eax	      5053	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	ELSE_4
0xa0dc	    0xc745a8010000	               mov dword [rbp - 0x58], 1	      5054	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	ELSE_4
0xa0e3	            0xeb49	                           jmp 0x400a16e	      5043	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	IF_10	IF_11
0xa0e5	        0x837dd000	               cmp dword [rbp - 0x30], 0	      5058	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12
0xa0e9	            0x7443	                            je 0x400a16e	      5058	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12
0xa0eb	          0x8b458c	             mov eax, dword [rbp - 0x74]	      5061	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0xa0ee	            0x85c0	                           test eax, eax	      5061	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0xa0f0	            0x751f	                           jne 0x400a151	      5061	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0xa0f2	          0x8b4590	             mov eax, dword [rbp - 0x70]	      5061	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0xa0f5	            0x85c0	                           test eax, eax	      5061	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0xa0f7	            0x7518	                           jne 0x400a151	      5061	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0xa0f9	    0x488b05000000	            mov rax, qword [0x0400a140] 	      5066	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13	CALL_14
0xa100	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5066	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13	CALL_14
0xa104	          0x4889c7	                            mov rdi, rax	      5065	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0xa107	      0xe800000000	                          call 0x400a14c	      5065	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0xa10c	          0x8945b0	             mov dword [rbp - 0x50], eax	      5065	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0xa10f	            0xeb1d	                           jmp 0x400a16e	      5065	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	IF_13
0xa111	    0x488b05000000	            mov rax, qword [0x0400a158] 	      5073	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	ELSE_6	CALL_15
0xa118	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5073	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	ELSE_6	CALL_15
0xa11c	          0x4889c7	                            mov rdi, rax	      5072	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	ELSE_6
0xa11f	      0xe800000000	                          call 0x400a164	      5072	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	ELSE_6
0xa124	          0x8945b0	             mov dword [rbp - 0x50], eax	      5072	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	ELSE_6
0xa127	    0xc745a8010000	               mov dword [rbp - 0x58], 1	      5074	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_9	ELSE_5	IF_12	ELSE_6
0xa12e	    0x488b05000000	            mov rax, qword [0x0400a175] 	      5083	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0xa135	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5083	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0xa139	    0x488b05000000	            mov rax, qword [0x0400a180] 	      5083	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0xa140	          0x488b00	                    mov rax, qword [rax]	      5083	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0xa143	          0x4839c2	                            cmp rdx, rax	      5083	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0xa146	            0x7d28	                           jge 0x400a1b0	      5083	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0xa148	        0x488b7de8	             mov rdi, qword [rbp - 0x18]	      5085	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14	CALL_16
0xa14c	          0x8b4d90	             mov ecx, dword [rbp - 0x70]	      5085	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14	CALL_16
0xa14f	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      5085	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14	CALL_16
0xa153	          0x8b758c	             mov esi, dword [rbp - 0x74]	      5085	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14	CALL_16
0xa156	    0x488b05000000	            mov rax, qword [0x0400a19d] 	      5085	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14	CALL_16
0xa15d	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5085	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14	CALL_16
0xa161	          0x4989f8	                             mov r8, rdi	      5085	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14	CALL_16
0xa164	          0x4889c7	                            mov rdi, rax	      5085	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14	CALL_16
0xa167	      0xe875f6ffff	                    call sym.same_leader	      5085	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14	CALL_16
0xa16c	            0x85c0	                           test eax, eax	      5085	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14	CALL_16
0xa16e	            0x7507	                           jne 0x400a1b7	      5085	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14	CALL_16
0xa170	    0xc7459c010000	               mov dword [rbp - 0x64], 1	      5090	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_14
0xa177	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      5096	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0xa17b	            0x750a	                           jne 0x400a1c7	      5096	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0xa17d	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      5096	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0xa181	     0xf8403010000	                            je 0x400a2ca	      5096	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0xa187	        0x837db800	               cmp dword [rbp - 0x48], 0	      5098	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_16
0xa18b	            0x7411	                            je 0x400a1de	      5098	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_16
0xa18d	      0xe800000000	                          call 0x400a1d2	      5101	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_18
0xa192	      0xbe01000000	                              mov esi, 1	      5101	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_18
0xa197	            0x89c7	                            mov edi, eax	      5101	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_18
0xa199	      0xe800000000	                          call 0x400a1de	      5101	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_18
0xa19e	    0xc70500000000	               mov dword [0x0400a1e8], 1	      5104	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0xa1a8	      0xbfffffff7f	                     mov edi, 0x7fffffff	      5105	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_19
0xa1ad	      0xe800000000	                          call 0x400a1f2	      5105	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_19
0xa1b2	            0xeb05	                           jmp 0x400a1f9	      5106	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0xa1b4	      0xe800000000	                          call 0x400a1f9	      5107	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_22
0xa1b9	    0x488b05000000	            mov rax, qword [0x0400a200] 	      5106	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0xa1c0	          0x8b4040	            mov eax, dword [rax + 0x40] 	      5106	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0xa1c3	            0x85c0	                           test eax, eax	      5106	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0xa1c5	            0x7410	                            je 0x400a217	      5106	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0xa1c7	      0xe800000000	                          call 0x400a20c	      5106	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0xa1cc	            0x89c7	                            mov edi, eax	      5106	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0xa1ce	      0xe800000000	                          call 0x400a213	      5106	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0xa1d3	            0x85c0	                           test eax, eax	      5106	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0xa1d5	            0x75dd	                           jne 0x400a1f4	      5106	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	WHILE_1	CALL_21
0xa1d7	    0xc70500000000	           mov dword [0x0400a221], 0x10 	      5110	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0xa1e1	    0x8b0500000000	            mov eax, dword [0x0400a227] 	      5111	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0xa1e7	          0x8945d8	             mov dword [rbp - 0x28], eax	      5111	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0xa1ea	    0xc70500000000	               mov dword [0x0400a234], 0	      5112	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0xa1f4	        0x837dc800	               cmp dword [rbp - 0x38], 0	      5115	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0xa1f8	            0x7407	                            je 0x400a241	      5115	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0xa1fa	      0xba03000000	                              mov edx, 3	      5115	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0xa1ff	            0xeb05	                           jmp 0x400a246	      5115	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0xa201	      0xba01000000	                              mov edx, 1	      5115	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0xa206	        0x837dc800	               cmp dword [rbp - 0x38], 0	      5117	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0xa20a	            0x740d	                            je 0x400a259	      5117	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0xa20c	        0x837da800	               cmp dword [rbp - 0x58], 0	      5116	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0xa210	            0x7407	                            je 0x400a259	      5116	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0xa212	      0xb810000000	                           mov eax, 0x10	      5117	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0xa217	            0xeb05	                           jmp 0x400a25e	      5117	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0xa219	      0xb800000000	                              mov eax, 0	      5117	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0xa21e	             0x1d0	                            add eax, edx	      5116	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0xa220	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      5119	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0xa227	            0x7407	                            je 0x400a270	      5119	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0xa229	      0xba08000000	                              mov edx, 8	      5119	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0xa22e	            0xeb05	                           jmp 0x400a275	      5119	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0xa230	      0xba00000000	                              mov edx, 0	      5119	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0xa235	          0x8d0c10	                    lea ecx, [rax + rdx]	      5113	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_23
0xa238	          0x8b45b0	             mov eax, dword [rbp - 0x50]	      5113	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_23
0xa23b	            0x89c2	                            mov edx, eax	      5113	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_23
0xa23d	            0x89ce	                            mov esi, ecx	      5113	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_23
0xa23f	      0xbf00000000	                              mov edi, 0	      5113	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_23
0xa244	      0xe800000000	                          call 0x400a289	      5113	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	CALL_23
0xa249	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      5120	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0xa24c	    0x890500000000	            mov dword [0x0400a292], eax 	      5120	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0xa252	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      5121	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0xa255	    0x890500000000	            mov dword [0x0400a29b], eax 	      5121	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0xa25b	    0xc745b0ffffff	     mov dword [rbp - 0x50], 0xffffffff 	      5122	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0xa262	          0x8b459c	             mov eax, dword [rbp - 0x64]	      5124	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0xa265	          0x8945b8	             mov dword [rbp - 0x48], eax	      5124	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0xa268	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      5125	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_17
0xa26c	            0x7415	                            je 0x400a2c3	      5125	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_17
0xa26e	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      5129	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_17	IF_18
0xa276	     0xf8881010000	                            js 0x400a43d	      5129	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_17	IF_18
0xa27c	    0xc745b4010000	               mov dword [rbp - 0x4c], 1	      5131	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_17
0xa283	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      5133	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15
0xa28a	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      5140	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0xa28e	     0xf8548010000	                           jne 0x400a41c	      5140	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0xa294	    0xc745ac000000	               mov dword [rbp - 0x54], 0	      5142	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0xa29b	    0x488b05000000	            mov rax, qword [0x0400a2e2] 	      5143	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0xa2a2	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5143	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0xa2a6	        0x4883c201	                              add rdx, 1	      5143	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0xa2aa	        0x48895038	             mov qword [rax + 0x38], rdx	      5143	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0xa2ae	    0x488b05000000	            mov rax, qword [0x0400a2f5] 	      5144	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0xa2b5	    0xc74040000000	               mov dword [rax + 0x40], 0	      5144	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0xa2bc	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	      5145	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_20	CALL_24
0xa2c4	            0x790d	                           jns 0x400a313	      5145	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_20	CALL_24
0xa2c6	      0xe800000000	                          call 0x400a30b	      5145	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_20	CALL_24
0xa2cb	            0x85c0	                           test eax, eax	      5145	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_20	CALL_24
0xa2cd	     0xf842d010000	                            je 0x400a440	      5145	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_20	CALL_24
0xa2d3	          0x8b4590	             mov eax, dword [rbp - 0x70]	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21
0xa2d6	            0x85c0	                           test eax, eax	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21
0xa2d8	            0x7e41	                           jle 0x400a35b	      5148	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21
0xa2da	          0x8b4590	             mov eax, dword [rbp - 0x70]	      5150	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_25
0xa2dd	            0x4898	                                    cdqe	      5150	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_25
0xa2df	      0xba00000000	                              mov edx, 0	      5150	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_25
0xa2e4	      0xbe00000000	                              mov esi, 0	      5150	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_25
0xa2e9	          0x4889c7	                            mov rdi, rax	      5150	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_25
0xa2ec	      0xe800000000	                          call 0x400a331	      5150	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_25
0xa2f1	          0x8b4590	             mov eax, dword [rbp - 0x70]	      5152	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21
0xa2f4	            0xf7d8	                                 neg eax	      5152	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21
0xa2f6	          0x4863d0	                         movsxd rdx, eax	      5151	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_26
0xa2f9	    0x488b05000000	            mov rax, qword [0x0400a340] 	      5151	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_26
0xa300	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5151	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_26
0xa304	          0x4889d1	                            mov rcx, rdx	      5151	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_26
0xa307	      0xba00000000	                              mov edx, 0	      5151	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_26
0xa30c	      0xbe00000000	                              mov esi, 0	      5151	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_26
0xa311	          0x4889c7	                            mov rdi, rax	      5151	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_26
0xa314	      0xe800000000	                          call 0x400a359	      5151	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_26
0xa319	            0xeb53	                           jmp 0x400a3ae	      5151	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_21	CALL_26
0xa31b	        0x837db000	               cmp dword [rbp - 0x50], 0	      5155	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22
0xa31f	            0x7e4d	                           jle 0x400a3ae	      5155	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22
0xa321	      0xe800000000	                          call 0x400a366	      5157	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	CALL_27
0xa326	          0x8945dc	             mov dword [rbp - 0x24], eax	      5157	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	CALL_27
0xa329	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      5159	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23
0xa32d	            0x7e3f	                           jle 0x400a3ae	      5159	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23
0xa32f	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      5161	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_28
0xa332	            0x4898	                                    cdqe	      5161	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_28
0xa334	      0xba00000000	                              mov edx, 0	      5161	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_28
0xa339	      0xbe00000000	                              mov esi, 0	      5161	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_28
0xa33e	          0x4889c7	                            mov rdi, rax	      5161	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_28
0xa341	      0xe800000000	                          call 0x400a386	      5161	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_28
0xa346	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      5163	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23
0xa349	            0xf7d8	                                 neg eax	      5163	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23
0xa34b	          0x4863d0	                         movsxd rdx, eax	      5162	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0xa34e	    0x488b05000000	            mov rax, qword [0x0400a395] 	      5162	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0xa355	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5162	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0xa359	          0x4889d1	                            mov rcx, rdx	      5162	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0xa35c	      0xba00000000	                              mov edx, 0	      5162	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0xa361	      0xbe00000000	                              mov esi, 0	      5162	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0xa366	          0x4889c7	                            mov rdi, rax	      5162	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0xa369	      0xe800000000	                          call 0x400a3ae	      5162	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_7	IF_22	IF_23	CALL_29
0xa36e	    0x488b05000000	            mov rax, qword [0x0400a3b5] 	      5166	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0xa375	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      5166	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0xa379	        0x4883ea01	                              sub rdx, 1	      5166	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0xa37d	        0x48895038	             mov qword [rax + 0x38], rdx	      5166	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0xa381	    0x41b800000000	                              mov r8d, 0	      5167	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0xa387	      0xb900000000	                              mov ecx, 0	      5167	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0xa38c	      0xba00000000	                              mov edx, 0	      5167	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0xa391	      0xbe01000000	                              mov esi, 1	      5167	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0xa396	      0xbf02000000	                              mov edi, 2	      5167	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0xa39b	      0xe800000000	                          call 0x400a3e0	      5167	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0xa3a0	            0x85c0	                           test eax, eax	      5167	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0xa3a2	            0x7507	                           jne 0x400a3eb	      5167	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_30
0xa3a4	      0xe800000000	                          call 0x400a3e9	      5169	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24	CALL_31
0xa3a9	            0xeb56	                           jmp 0x400a441	      5170	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_24
0xa3ab	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	      5172	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19
0xa3b2	      0xe800000000	                          call 0x400a3f7	      5174	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0xa3b7	          0x4889c7	                            mov rdi, rax	      5174	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0xa3ba	      0xe800000000	                          call 0x400a3ff	      5174	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0xa3bf	          0x4889c2	                            mov rdx, rax	      5174	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0xa3c2	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      5174	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0xa3c5	            0x4898	                                    cdqe	      5174	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0xa3c7	          0x4839c2	                            cmp rdx, rax	      5174	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0xa3ca	            0x7609	                           jbe 0x400a415	      5174	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25	CALL_33
0xa3cc	    0xc745bc010000	               mov dword [rbp - 0x44], 1	      5175	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25
0xa3d3	            0xeb07	                           jmp 0x400a41c	      5175	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_25
0xa3d5	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      5177	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	ELSE_8
0xa3dc	      0xe800000000	                          call 0x400a421	      5180	ops.c	FUNCTION_60	FOR_1	CALL_34
0xa3e1	      0x48836df001	               sub qword [rbp - 0x10], 1	      4978	ops.c	FUNCTION_60	FOR_1
0xa3e6	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4978	ops.c	FUNCTION_60	FOR_1
0xa3eb	            0x7414	                            je 0x400a441	      4978	ops.c	FUNCTION_60	FOR_1
0xa3ed	    0x8b0500000000	            mov eax, dword [0x0400a433] 	      4978	ops.c	FUNCTION_60	FOR_1
0xa3f3	            0x85c0	                           test eax, eax	      4978	ops.c	FUNCTION_60	FOR_1
0xa3f5	     0xf8427fbffff	                            je 0x4009f62	      4978	ops.c	FUNCTION_60	FOR_1
0xa3fb	            0xeb04	                           jmp 0x400a441	      5182	ops.c	FUNCTION_60
0xa3fd	              0x90	                                     nop	      5130	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_17	IF_18
0xa3fe	            0xeb01	                           jmp 0x400a441	      5130	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_15	IF_17	IF_18
0xa400	              0x90	                                     nop	      5146	ops.c	FUNCTION_60	FOR_1	ELSE_3	IF_19	IF_20
0xa401	              0x90	                                     nop	      5182	ops.c	FUNCTION_60
0xa402	        0x488b45f8	                mov rax, qword [rbp - 8]	      5182	ops.c	FUNCTION_60
0xa406	    0x644833042528	                xor rax, qword fs:[0x28]	      5182	ops.c	FUNCTION_60
0xa40f	            0x7405	                            je 0x400a456	      5182	ops.c	FUNCTION_60
0xa411	      0xe800000000	                          call 0x400a456	      5182	ops.c	FUNCTION_60
0xa416	              0xc9	                                   leave	      5182	ops.c	FUNCTION_60
0xa417	              0xc3	                                     ret	      5182	ops.c	FUNCTION_60
free_register	CALL,2:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,0	39
0x17e6	              0x55	                                push rbp	      1044	ops.c	FUNCTION_19
0x17e7	          0x4889e5	                            mov rbp, rsp	      1044	ops.c	FUNCTION_19
0x17ea	        0x4883ec30	                           sub rsp, 0x30	      1044	ops.c	FUNCTION_19
0x17ee	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1044	ops.c	FUNCTION_19
0x17f2	    0x488b05000000	            mov rax, qword [0x04001839] 	      1047	ops.c	FUNCTION_19
0x17f9	          0x488b10	                    mov rdx, qword [rax]	      1047	ops.c	FUNCTION_19
0x17fc	        0x488955e0	             mov qword [rbp - 0x20], rdx	      1047	ops.c	FUNCTION_19
0x1800	        0x488b5008	                mov rdx, qword [rax + 8]	      1047	ops.c	FUNCTION_19
0x1804	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1047	ops.c	FUNCTION_19
0x1808	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1047	ops.c	FUNCTION_19
0x180c	        0x488955f0	             mov qword [rbp - 0x10], rdx	      1047	ops.c	FUNCTION_19
0x1810	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1047	ops.c	FUNCTION_19
0x1814	        0x488945f8	                mov qword [rbp - 8], rax	      1047	ops.c	FUNCTION_19
0x1818	    0x488b05000000	            mov rax, qword [0x0400185f] 	      1048	ops.c	FUNCTION_19
0x181f	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1048	ops.c	FUNCTION_19
0x1823	          0x488b0a	                    mov rcx, qword [rdx]	      1048	ops.c	FUNCTION_19
0x1826	          0x488908	                    mov qword [rax], rcx	      1048	ops.c	FUNCTION_19
0x1829	        0x488b4a08	                mov rcx, qword [rdx + 8]	      1048	ops.c	FUNCTION_19
0x182d	        0x48894808	                mov qword [rax + 8], rcx	      1048	ops.c	FUNCTION_19
0x1831	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      1048	ops.c	FUNCTION_19
0x1835	        0x48894810	             mov qword [rax + 0x10], rcx	      1048	ops.c	FUNCTION_19
0x1839	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	      1048	ops.c	FUNCTION_19
0x183d	        0x48895018	             mov qword [rax + 0x18], rdx	      1048	ops.c	FUNCTION_19
0x1841	      0xe804420000	                  call sym.free_yank_all	      1049	ops.c	FUNCTION_19	CALL_1
0x1846	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1050	ops.c	FUNCTION_19	CALL_2
0x184a	          0x4889c7	                            mov rdi, rax	      1050	ops.c	FUNCTION_19	CALL_2
0x184d	      0xe800000000	                          call 0x4001892	      1050	ops.c	FUNCTION_19	CALL_2
0x1852	    0x488b05000000	            mov rax, qword [0x04001899] 	      1051	ops.c	FUNCTION_19
0x1859	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1051	ops.c	FUNCTION_19
0x185d	          0x488910	                    mov qword [rax], rdx	      1051	ops.c	FUNCTION_19
0x1860	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1051	ops.c	FUNCTION_19
0x1864	        0x48895008	                mov qword [rax + 8], rdx	      1051	ops.c	FUNCTION_19
0x1868	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1051	ops.c	FUNCTION_19
0x186c	        0x48895010	             mov qword [rax + 0x10], rdx	      1051	ops.c	FUNCTION_19
0x1870	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1051	ops.c	FUNCTION_19
0x1874	        0x48895018	             mov qword [rax + 0x18], rdx	      1051	ops.c	FUNCTION_19
0x1878	              0x90	                                     nop	      1052	ops.c	FUNCTION_19
0x1879	              0xc9	                                   leave	      1052	ops.c	FUNCTION_19
0x187a	              0xc3	                                     ret	      1052	ops.c	FUNCTION_19
set_expr_line	CALL,1:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,0	12
0x134e	              0x55	                                push rbp	       813	ops.c	FUNCTION_11
0x134f	          0x4889e5	                            mov rbp, rsp	       813	ops.c	FUNCTION_11
0x1352	        0x4883ec10	                           sub rsp, 0x10	       813	ops.c	FUNCTION_11
0x1356	        0x48897df8	                mov qword [rbp - 8], rdi	       813	ops.c	FUNCTION_11
0x135a	    0x488b05000000	            mov rax, qword [0x040013a1] 	       814	ops.c	FUNCTION_11	CALL_1
0x1361	          0x4889c7	                            mov rdi, rax	       814	ops.c	FUNCTION_11	CALL_1
0x1364	      0xe800000000	                          call 0x40013a9	       814	ops.c	FUNCTION_11	CALL_1
0x1369	        0x488b45f8	                mov rax, qword [rbp - 8]	       815	ops.c	FUNCTION_11
0x136d	    0x488905000000	            mov qword [0x040013b4], rax 	       815	ops.c	FUNCTION_11
0x1374	              0x90	                                     nop	       816	ops.c	FUNCTION_11
0x1375	              0xc9	                                   leave	       816	ops.c	FUNCTION_11
0x1376	              0xc3	                                     ret	       816	ops.c	FUNCTION_11
block_prep	CALL,5:FOR,0:SWITCH,0:functions,0:WHILE,2:DO,0:ELSE,7:IF,14	376
0xa6d9	              0x55	                                push rbp	      5322	ops.c	FUNCTION_65
0xa6da	          0x4889e5	                            mov rbp, rsp	      5322	ops.c	FUNCTION_65
0xa6dd	        0x4883ec60	                           sub rsp, 0x60	      5322	ops.c	FUNCTION_65
0xa6e1	        0x48897db8	             mov qword [rbp - 0x48], rdi	      5322	ops.c	FUNCTION_65
0xa6e5	        0x488975b0	             mov qword [rbp - 0x50], rsi	      5322	ops.c	FUNCTION_65
0xa6e9	        0x488955a8	             mov qword [rbp - 0x58], rdx	      5322	ops.c	FUNCTION_65
0xa6ed	          0x894da4	             mov dword [rbp - 0x5c], ecx	      5322	ops.c	FUNCTION_65
0xa6f0	    0x64488b042528	                mov rax, qword fs:[0x28]	      5322	ops.c	FUNCTION_65
0xa6f9	        0x488945f8	                mov qword [rbp - 8], rax	      5322	ops.c	FUNCTION_65
0xa6fd	            0x31c0	                            xor eax, eax	      5322	ops.c	FUNCTION_65
0xa6ff	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      5323	ops.c	FUNCTION_65
0xa706	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5330	ops.c	FUNCTION_65
0xa70a	    0xc70000000000	                      mov dword [rax], 0	      5330	ops.c	FUNCTION_65
0xa710	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5331	ops.c	FUNCTION_65
0xa714	    0xc74004000000	                  mov dword [rax + 4], 0	      5331	ops.c	FUNCTION_65
0xa71b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5332	ops.c	FUNCTION_65
0xa71f	    0xc74008000000	                  mov dword [rax + 8], 0	      5332	ops.c	FUNCTION_65
0xa726	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5333	ops.c	FUNCTION_65
0xa72a	    0xc7401c000000	               mov dword [rax + 0x1c], 0	      5333	ops.c	FUNCTION_65
0xa731	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5334	ops.c	FUNCTION_65
0xa735	    0xc74020000000	               mov dword [rax + 0x20], 0	      5334	ops.c	FUNCTION_65
0xa73c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5336	ops.c	FUNCTION_65
0xa740	    0xc74024000000	               mov dword [rax + 0x24], 0	      5336	ops.c	FUNCTION_65
0xa747	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5337	ops.c	FUNCTION_65
0xa74b	    0xc7402c000000	               mov dword [rax + 0x2c], 0	      5337	ops.c	FUNCTION_65
0xa752	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5338	ops.c	FUNCTION_65
0xa756	    0xc74030000000	               mov dword [rax + 0x30], 0	      5338	ops.c	FUNCTION_65
0xa75d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5339	ops.c	FUNCTION_65
0xa761	    0xc74034000000	               mov dword [rax + 0x34], 0	      5339	ops.c	FUNCTION_65
0xa768	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5340	ops.c	FUNCTION_65
0xa76c	    0xc74038000000	               mov dword [rax + 0x38], 0	      5340	ops.c	FUNCTION_65
0xa773	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5342	ops.c	FUNCTION_65
0xa777	    0xc7403c000000	               mov dword [rax + 0x3c], 0	      5342	ops.c	FUNCTION_65
0xa77e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      5344	ops.c	FUNCTION_65	CALL_1
0xa782	          0x4889c7	                            mov rdi, rax	      5344	ops.c	FUNCTION_65	CALL_1
0xa785	      0xe800000000	                          call 0x400a7ca	      5344	ops.c	FUNCTION_65	CALL_1
0xa78a	        0x488945f0	             mov qword [rbp - 0x10], rax	      5344	ops.c	FUNCTION_65	CALL_1
0xa78e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5345	ops.c	FUNCTION_65
0xa792	        0x488945d8	             mov qword [rbp - 0x28], rax	      5345	ops.c	FUNCTION_65
0xa796	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5346	ops.c	FUNCTION_65
0xa79a	        0x488945e0	             mov qword [rbp - 0x20], rax	      5346	ops.c	FUNCTION_65
0xa79e	      0xe9b1000000	                           jmp 0x400a894	      5347	ops.c	FUNCTION_65	WHILE_1
0xa7a3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5350	ops.c	FUNCTION_65	WHILE_1	CALL_2
0xa7a7	          0x8b501c	            mov edx, dword [rax + 0x1c] 	      5350	ops.c	FUNCTION_65	WHILE_1	CALL_2
0xa7aa	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      5350	ops.c	FUNCTION_65	WHILE_1	CALL_2
0xa7ae	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5350	ops.c	FUNCTION_65	WHILE_1	CALL_2
0xa7b2	          0x4889ce	                            mov rsi, rcx	      5350	ops.c	FUNCTION_65	WHILE_1	CALL_2
0xa7b5	          0x4889c7	                            mov rdi, rax	      5350	ops.c	FUNCTION_65	WHILE_1	CALL_2
0xa7b8	      0xe800000000	                          call 0x400a7fd	      5350	ops.c	FUNCTION_65	WHILE_1	CALL_2
0xa7bd	          0x8945cc	             mov dword [rbp - 0x34], eax	      5350	ops.c	FUNCTION_65	WHILE_1	CALL_2
0xa7c0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5351	ops.c	FUNCTION_65	WHILE_1
0xa7c4	          0x8b501c	            mov edx, dword [rax + 0x1c] 	      5351	ops.c	FUNCTION_65	WHILE_1
0xa7c7	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      5351	ops.c	FUNCTION_65	WHILE_1
0xa7ca	             0x1c2	                            add edx, eax	      5351	ops.c	FUNCTION_65	WHILE_1
0xa7cc	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5351	ops.c	FUNCTION_65	WHILE_1
0xa7d0	          0x89501c	             mov dword [rax + 0x1c], edx	      5351	ops.c	FUNCTION_65	WHILE_1
0xa7d3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5353	ops.c	FUNCTION_65	WHILE_1	IF_1	CALL_3
0xa7d7	           0xfb600	                   movzx eax, byte [rax]	      5353	ops.c	FUNCTION_65	WHILE_1	IF_1	CALL_3
0xa7da	            0x3c20	                            cmp al, 0x20	      5353	ops.c	FUNCTION_65	WHILE_1	IF_1	CALL_3
0xa7dc	            0x740b	                            je 0x400a829	      5353	ops.c	FUNCTION_65	WHILE_1	IF_1	CALL_3
0xa7de	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5353	ops.c	FUNCTION_65	WHILE_1	IF_1	CALL_3
0xa7e2	           0xfb600	                   movzx eax, byte [rax]	      5353	ops.c	FUNCTION_65	WHILE_1	IF_1	CALL_3
0xa7e5	            0x3c09	                               cmp al, 9	      5353	ops.c	FUNCTION_65	WHILE_1	IF_1	CALL_3
0xa7e7	            0x7526	                           jne 0x400a84f	      5353	ops.c	FUNCTION_65	WHILE_1	IF_1	CALL_3
0xa7e9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5355	ops.c	FUNCTION_65	WHILE_1	IF_1
0xa7ed	          0x8b5030	            mov edx, dword [rax + 0x30] 	      5355	ops.c	FUNCTION_65	WHILE_1	IF_1
0xa7f0	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      5355	ops.c	FUNCTION_65	WHILE_1	IF_1
0xa7f3	             0x1c2	                            add edx, eax	      5355	ops.c	FUNCTION_65	WHILE_1	IF_1
0xa7f5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5355	ops.c	FUNCTION_65	WHILE_1	IF_1
0xa7f9	          0x895030	             mov dword [rax + 0x30], edx	      5355	ops.c	FUNCTION_65	WHILE_1	IF_1
0xa7fc	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5356	ops.c	FUNCTION_65	WHILE_1	IF_1
0xa800	          0x8b4034	            mov eax, dword [rax + 0x34] 	      5356	ops.c	FUNCTION_65	WHILE_1	IF_1
0xa803	          0x8d5001	                      lea edx, [rax + 1]	      5356	ops.c	FUNCTION_65	WHILE_1	IF_1
0xa806	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5356	ops.c	FUNCTION_65	WHILE_1	IF_1
0xa80a	          0x895034	             mov dword [rax + 0x34], edx	      5356	ops.c	FUNCTION_65	WHILE_1	IF_1
0xa80d	            0xeb16	                           jmp 0x400a865	      5356	ops.c	FUNCTION_65	WHILE_1	IF_1
0xa80f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5360	ops.c	FUNCTION_65	WHILE_1	ELSE_1
0xa813	    0xc74030000000	               mov dword [rax + 0x30], 0	      5360	ops.c	FUNCTION_65	WHILE_1	ELSE_1
0xa81a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5361	ops.c	FUNCTION_65	WHILE_1	ELSE_1
0xa81e	    0xc74034000000	               mov dword [rax + 0x34], 0	      5361	ops.c	FUNCTION_65	WHILE_1	ELSE_1
0xa825	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5364	ops.c	FUNCTION_65	WHILE_1
0xa829	        0x488945e0	             mov qword [rbp - 0x20], rax	      5364	ops.c	FUNCTION_65	WHILE_1
0xa82d	    0x8b0500000000	            mov eax, dword [0x0400a873] 	      5365	ops.c	FUNCTION_65	WHILE_1	CALL_4
0xa833	            0x85c0	                           test eax, eax	      5365	ops.c	FUNCTION_65	WHILE_1	CALL_4
0xa835	            0x7412	                            je 0x400a889	      5365	ops.c	FUNCTION_65	WHILE_1	CALL_4
0xa837	    0x488b05000000	            mov rax, qword [0x0400a87e] 	      5365	ops.c	FUNCTION_65	WHILE_1	CALL_4
0xa83e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      5365	ops.c	FUNCTION_65	WHILE_1	CALL_4
0xa842	          0x4889d7	                            mov rdi, rdx	      5365	ops.c	FUNCTION_65	WHILE_1	CALL_4
0xa845	            0xffd0	                                call rax	      5365	ops.c	FUNCTION_65	WHILE_1	CALL_4
0xa847	            0xeb05	                           jmp 0x400a88e	      5365	ops.c	FUNCTION_65	WHILE_1	CALL_4
0xa849	      0xb801000000	                              mov eax, 1	      5365	ops.c	FUNCTION_65	WHILE_1	CALL_4
0xa84e	            0x4898	                                    cdqe	      5365	ops.c	FUNCTION_65	WHILE_1	CALL_4
0xa850	        0x480145d8	            add qword [rbp - 0x28], rax 	      5365	ops.c	FUNCTION_65	WHILE_1	CALL_4
0xa854	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5347	ops.c	FUNCTION_65	WHILE_1
0xa858	          0x8b501c	            mov edx, dword [rax + 0x1c] 	      5347	ops.c	FUNCTION_65	WHILE_1
0xa85b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5347	ops.c	FUNCTION_65	WHILE_1
0xa85f	          0x8b4064	            mov eax, dword [rax + 0x64] 	      5347	ops.c	FUNCTION_65	WHILE_1
0xa862	            0x39c2	                            cmp edx, eax	      5347	ops.c	FUNCTION_65	WHILE_1
0xa864	            0x7d0f	                           jge 0x400a8b5	      5347	ops.c	FUNCTION_65	WHILE_1
0xa866	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5347	ops.c	FUNCTION_65	WHILE_1
0xa86a	           0xfb600	                   movzx eax, byte [rax]	      5347	ops.c	FUNCTION_65	WHILE_1
0xa86d	            0x84c0	                             test al, al	      5347	ops.c	FUNCTION_65	WHILE_1
0xa86f	     0xf852effffff	                           jne 0x400a7e3	      5347	ops.c	FUNCTION_65	WHILE_1
0xa875	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5367	ops.c	FUNCTION_65
0xa879	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      5367	ops.c	FUNCTION_65
0xa87c	          0x89503c	             mov dword [rax + 0x3c], edx	      5367	ops.c	FUNCTION_65
0xa87f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5368	ops.c	FUNCTION_65	IF_2
0xa883	          0x8b501c	            mov edx, dword [rax + 0x1c] 	      5368	ops.c	FUNCTION_65	IF_2
0xa886	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5368	ops.c	FUNCTION_65	IF_2
0xa88a	          0x8b4064	            mov eax, dword [rax + 0x64] 	      5368	ops.c	FUNCTION_65	IF_2
0xa88d	            0x39c2	                            cmp edx, eax	      5368	ops.c	FUNCTION_65	IF_2
0xa88f	            0x7d4f	                           jge 0x400a920	      5368	ops.c	FUNCTION_65	IF_2
0xa891	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5370	ops.c	FUNCTION_65	IF_2
0xa895	          0x8b501c	            mov edx, dword [rax + 0x1c] 	      5370	ops.c	FUNCTION_65	IF_2
0xa898	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5370	ops.c	FUNCTION_65	IF_2
0xa89c	          0x895020	             mov dword [rax + 0x20], edx	      5370	ops.c	FUNCTION_65	IF_2
0xa89f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5372	ops.c	FUNCTION_65	IF_2
0xa8a3	    0xc74024010000	               mov dword [rax + 0x24], 1	      5372	ops.c	FUNCTION_65	IF_2
0xa8aa	        0x837da400	               cmp dword [rbp - 0x5c], 0	      5374	ops.c	FUNCTION_65	IF_2	IF_3
0xa8ae	            0x740f	                            je 0x400a8ff	      5374	ops.c	FUNCTION_65	IF_2	IF_3
0xa8b0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5374	ops.c	FUNCTION_65	IF_2	IF_3
0xa8b4	            0x8b00	                    mov eax, dword [rax]	      5374	ops.c	FUNCTION_65	IF_2	IF_3
0xa8b6	          0x83f812	                           cmp eax, 0x12	      5374	ops.c	FUNCTION_65	IF_2	IF_3
0xa8b9	     0xf85f4020000	                           jne 0x400abf3	      5374	ops.c	FUNCTION_65	IF_2	IF_3
0xa8bf	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5375	ops.c	FUNCTION_65	IF_2	IF_3
0xa8c3	          0x8b5068	            mov edx, dword [rax + 0x68] 	      5375	ops.c	FUNCTION_65	IF_2	IF_3
0xa8c6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5375	ops.c	FUNCTION_65	IF_2	IF_3
0xa8ca	          0x8b4064	            mov eax, dword [rax + 0x64] 	      5375	ops.c	FUNCTION_65	IF_2	IF_3
0xa8cd	            0x29c2	                            sub edx, eax	      5375	ops.c	FUNCTION_65	IF_2	IF_3
0xa8cf	            0x89d0	                            mov eax, edx	      5375	ops.c	FUNCTION_65	IF_2	IF_3
0xa8d1	          0x8d5001	                      lea edx, [rax + 1]	      5375	ops.c	FUNCTION_65	IF_2	IF_3
0xa8d4	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5375	ops.c	FUNCTION_65	IF_2	IF_3
0xa8d8	          0x895004	                mov dword [rax + 4], edx	      5375	ops.c	FUNCTION_65	IF_2	IF_3
0xa8db	      0xe9d3020000	                           jmp 0x400abf3	      5375	ops.c	FUNCTION_65	IF_2	IF_3
0xa8e0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5381	ops.c	FUNCTION_65	ELSE_2
0xa8e4	          0x8b501c	            mov edx, dword [rax + 0x1c] 	      5381	ops.c	FUNCTION_65	ELSE_2
0xa8e7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5381	ops.c	FUNCTION_65	ELSE_2
0xa8eb	          0x8b4064	            mov eax, dword [rax + 0x64] 	      5381	ops.c	FUNCTION_65	ELSE_2
0xa8ee	            0x29c2	                            sub edx, eax	      5381	ops.c	FUNCTION_65	ELSE_2
0xa8f0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5381	ops.c	FUNCTION_65	ELSE_2
0xa8f4	            0x8910	                    mov dword [rax], edx	      5381	ops.c	FUNCTION_65	ELSE_2
0xa8f6	        0x837da400	               cmp dword [rbp - 0x5c], 0	      5382	ops.c	FUNCTION_65	ELSE_2	IF_4
0xa8fa	            0x741f	                            je 0x400a95b	      5382	ops.c	FUNCTION_65	ELSE_2	IF_4
0xa8fc	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5382	ops.c	FUNCTION_65	ELSE_2	IF_4
0xa900	            0x8b00	                    mov eax, dword [rax]	      5382	ops.c	FUNCTION_65	ELSE_2	IF_4
0xa902	            0x85c0	                           test eax, eax	      5382	ops.c	FUNCTION_65	ELSE_2	IF_4
0xa904	            0x7415	                            je 0x400a95b	      5382	ops.c	FUNCTION_65	ELSE_2	IF_4
0xa906	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5383	ops.c	FUNCTION_65	ELSE_2	IF_4
0xa90a	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      5383	ops.c	FUNCTION_65	ELSE_2	IF_4
0xa90d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5383	ops.c	FUNCTION_65	ELSE_2	IF_4
0xa911	            0x8b00	                    mov eax, dword [rax]	      5383	ops.c	FUNCTION_65	ELSE_2	IF_4
0xa913	            0x29c2	                            sub edx, eax	      5383	ops.c	FUNCTION_65	ELSE_2	IF_4
0xa915	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5383	ops.c	FUNCTION_65	ELSE_2	IF_4
0xa919	            0x8910	                    mov dword [rax], edx	      5383	ops.c	FUNCTION_65	ELSE_2	IF_4
0xa91b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5384	ops.c	FUNCTION_65	ELSE_2
0xa91f	        0x488945d0	             mov qword [rbp - 0x30], rax	      5384	ops.c	FUNCTION_65	ELSE_2
0xa923	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5385	ops.c	FUNCTION_65	ELSE_2
0xa927	          0x8b501c	            mov edx, dword [rax + 0x1c] 	      5385	ops.c	FUNCTION_65	ELSE_2
0xa92a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5385	ops.c	FUNCTION_65	ELSE_2
0xa92e	          0x895020	             mov dword [rax + 0x20], edx	      5385	ops.c	FUNCTION_65	ELSE_2
0xa931	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5386	ops.c	FUNCTION_65	ELSE_2	IF_5
0xa935	          0x8b5020	            mov edx, dword [rax + 0x20] 	      5386	ops.c	FUNCTION_65	ELSE_2	IF_5
0xa938	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5386	ops.c	FUNCTION_65	ELSE_2	IF_5
0xa93c	          0x8b4068	            mov eax, dword [rax + 0x68] 	      5386	ops.c	FUNCTION_65	ELSE_2	IF_5
0xa93f	            0x39c2	                            cmp edx, eax	      5386	ops.c	FUNCTION_65	ELSE_2	IF_5
0xa941	     0xf8ef0000000	                           jle 0x400aa77	      5386	ops.c	FUNCTION_65	ELSE_2	IF_5
0xa947	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5389	ops.c	FUNCTION_65	ELSE_2	IF_5
0xa94b	    0xc7402c010000	               mov dword [rax + 0x2c], 1	      5389	ops.c	FUNCTION_65	ELSE_2	IF_5
0xa952	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5391	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0xa956	            0x8b00	                    mov eax, dword [rax]	      5391	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0xa958	          0x83f811	                           cmp eax, 0x11	      5391	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0xa95b	            0x751b	                           jne 0x400a9b8	      5391	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0xa95d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5392	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0xa961	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      5392	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0xa964	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5392	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0xa968	            0x8b00	                    mov eax, dword [rax]	      5392	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0xa96a	            0x29c2	                            sub edx, eax	      5392	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0xa96c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5392	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0xa970	          0x895004	                mov dword [rax + 4], edx	      5392	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0xa973	      0xe9ff010000	                           jmp 0x400abb7	      5392	ops.c	FUNCTION_65	ELSE_2	IF_5	IF_6
0xa978	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5393	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0xa97c	            0x8b00	                    mov eax, dword [rax]	      5393	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0xa97e	          0x83f812	                           cmp eax, 0x12	      5393	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0xa981	            0x753e	                           jne 0x400aa01	      5393	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0xa983	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5395	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0xa987	            0x8b10	                    mov edx, dword [rax]	      5395	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0xa989	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5395	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0xa98d	          0x8b4868	            mov ecx, dword [rax + 0x68] 	      5395	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0xa990	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5395	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0xa994	          0x8b4064	            mov eax, dword [rax + 0x64] 	      5395	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0xa997	            0x29c1	                            sub ecx, eax	      5395	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0xa999	            0x89c8	                            mov eax, ecx	      5395	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0xa99b	          0x83c001	                              add eax, 1	      5395	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0xa99e	             0x1c2	                            add edx, eax	      5395	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0xa9a0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5395	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0xa9a4	            0x8910	                    mov dword [rax], edx	      5395	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0xa9a6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5396	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0xa9aa	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      5396	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0xa9ad	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5396	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0xa9b1	            0x8b00	                    mov eax, dword [rax]	      5396	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0xa9b3	            0x29c2	                            sub edx, eax	      5396	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0xa9b5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5396	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0xa9b9	          0x895004	                mov dword [rax + 4], edx	      5396	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0xa9bc	      0xe9b6010000	                           jmp 0x400abb7	      5396	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_3	IF_7
0xa9c1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5400	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4
0xa9c5	          0x8b5068	            mov edx, dword [rax + 0x68] 	      5400	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4
0xa9c8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5400	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4
0xa9cc	          0x8b4064	            mov eax, dword [rax + 0x64] 	      5400	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4
0xa9cf	            0x29c2	                            sub edx, eax	      5400	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4
0xa9d1	            0x89d0	                            mov eax, edx	      5400	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4
0xa9d3	          0x8d5001	                      lea edx, [rax + 1]	      5400	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4
0xa9d6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5400	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4
0xa9da	            0x8910	                    mov dword [rax], edx	      5400	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4
0xa9dc	        0x837da400	               cmp dword [rbp - 0x5c], 0	      5401	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0xa9e0	     0xf8491010000	                            je 0x400abb7	      5401	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0xa9e6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5401	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0xa9ea	            0x8b00	                    mov eax, dword [rax]	      5401	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0xa9ec	          0x83f804	                              cmp eax, 4	      5401	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0xa9ef	     0xf8482010000	                            je 0x400abb7	      5401	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0xa9f5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5406	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0xa9f9	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      5406	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0xa9fc	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5407	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0xaa00	          0x8b481c	            mov ecx, dword [rax + 0x1c] 	      5407	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0xaa03	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5407	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0xaa07	          0x8b4064	            mov eax, dword [rax + 0x64] 	      5407	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0xaa0a	            0x29c1	                            sub ecx, eax	      5407	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0xaa0c	            0x89c8	                            mov eax, ecx	      5407	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0xaa0e	            0x29c2	                            sub edx, eax	      5407	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0xaa10	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5406	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0xaa14	            0x8910	                    mov dword [rax], edx	      5406	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0xaa16	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5408	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0xaa1a	          0x8b5020	            mov edx, dword [rax + 0x20] 	      5408	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0xaa1d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5408	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0xaa21	          0x8b4068	            mov eax, dword [rax + 0x68] 	      5408	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0xaa24	            0x29c2	                            sub edx, eax	      5408	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0xaa26	            0x89d0	                            mov eax, edx	      5408	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0xaa28	          0x8d50ff	                      lea edx, [rax - 1]	      5408	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0xaa2b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5408	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0xaa2f	          0x895004	                mov dword [rax + 4], edx	      5408	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0xaa32	      0xe940010000	                           jmp 0x400abb7	      5408	ops.c	FUNCTION_65	ELSE_2	IF_5	ELSE_4	IF_8
0xaa37	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5414	ops.c	FUNCTION_65	ELSE_2	ELSE_5
0xaa3b	        0x488945e8	             mov qword [rbp - 0x18], rax	      5414	ops.c	FUNCTION_65	ELSE_2	ELSE_5
0xaa3f	            0xeb38	                           jmp 0x400aab9	      5415	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0xaa41	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5418	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0xaa45	        0x488945e8	             mov qword [rbp - 0x18], rax	      5418	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0xaa49	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5419	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2	CALL_5
0xaa4d	          0x8b5020	            mov edx, dword [rax + 0x20] 	      5419	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2	CALL_5
0xaa50	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	      5419	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2	CALL_5
0xaa54	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5419	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2	CALL_5
0xaa58	          0x4889ce	                            mov rsi, rcx	      5419	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2	CALL_5
0xaa5b	          0x4889c7	                            mov rdi, rax	      5419	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2	CALL_5
0xaa5e	      0xe800000000	                          call 0x400aaa3	      5419	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2	CALL_5
0xaa63	          0x8945cc	             mov dword [rbp - 0x34], eax	      5419	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2	CALL_5
0xaa66	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5420	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0xaa6a	          0x8b5020	            mov edx, dword [rax + 0x20] 	      5420	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0xaa6d	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      5420	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0xaa70	             0x1c2	                            add edx, eax	      5420	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0xaa72	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5420	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0xaa76	          0x895020	             mov dword [rax + 0x20], edx	      5420	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0xaa79	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5415	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0xaa7d	          0x8b5020	            mov edx, dword [rax + 0x20] 	      5415	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0xaa80	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5415	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0xaa84	          0x8b4068	            mov eax, dword [rax + 0x68] 	      5415	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0xaa87	            0x39c2	                            cmp edx, eax	      5415	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0xaa89	            0x7f0b	                            jg 0x400aad6	      5415	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0xaa8b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5415	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0xaa8f	           0xfb600	                   movzx eax, byte [rax]	      5415	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0xaa92	            0x84c0	                             test al, al	      5415	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0xaa94	            0x75ab	                           jne 0x400aa81	      5415	ops.c	FUNCTION_65	ELSE_2	ELSE_5	WHILE_2
0xaa96	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5422	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0xaa9a	          0x8b5020	            mov edx, dword [rax + 0x20] 	      5422	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0xaa9d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5422	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0xaaa1	          0x8b4068	            mov eax, dword [rax + 0x68] 	      5422	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0xaaa4	            0x39c2	                            cmp edx, eax	      5422	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0xaaa6	            0x7f6b	                            jg 0x400ab53	      5422	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0xaaa8	        0x837da400	               cmp dword [rbp - 0x5c], 0	      5423	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0xaaac	            0x7416	                            je 0x400ab04	      5423	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0xaaae	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5424	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0xaab2	            0x8b00	                    mov eax, dword [rax]	      5424	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0xaab4	          0x83f812	                           cmp eax, 0x12	      5424	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0xaab7	            0x740b	                            je 0x400ab04	      5424	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0xaab9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5425	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0xaabd	            0x8b00	                    mov eax, dword [rax]	      5425	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0xaabf	          0x83f810	                           cmp eax, 0x10	      5425	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0xaac2	            0x754f	                           jne 0x400ab53	      5425	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0xaac4	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5428	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0xaac8	    0xc74024010000	               mov dword [rax + 0x24], 1	      5428	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9
0xaacf	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5434	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0xaad3	            0x8b00	                    mov eax, dword [rax]	      5434	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0xaad5	          0x83f812	                           cmp eax, 0x12	      5434	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0xaad8	            0x740a	                            je 0x400ab24	      5434	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0xaada	    0x8b0500000000	            mov eax, dword [0x0400ab20] 	      5434	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0xaae0	            0x85c0	                           test eax, eax	      5434	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0xaae2	            0x7422	                            je 0x400ab46	      5434	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0xaae4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5435	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0xaae8	          0x8b5068	            mov edx, dword [rax + 0x68] 	      5435	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0xaaeb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5435	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0xaaef	          0x8b4020	            mov eax, dword [rax + 0x20] 	      5435	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0xaaf2	            0x29c2	                            sub edx, eax	      5435	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0xaaf4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5436	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0xaaf8	          0x8b4014	            mov eax, dword [rax + 0x14] 	      5436	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0xaafb	             0x1c2	                            add edx, eax	      5436	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0xaafd	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5435	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0xab01	          0x895004	                mov dword [rax + 4], edx	      5435	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0xab04	            0xeb71	                           jmp 0x400abb7	      5434	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0xab06	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5438	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	ELSE_6
0xab0a	    0xc74004000000	                  mov dword [rax + 4], 0	      5438	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	ELSE_6
0xab11	            0xeb64	                           jmp 0x400abb7	      5434	ops.c	FUNCTION_65	ELSE_2	ELSE_5	IF_9	IF_10
0xab13	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5440	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0xab17	          0x8b5020	            mov edx, dword [rax + 0x20] 	      5440	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0xab1a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5440	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0xab1e	          0x8b4068	            mov eax, dword [rax + 0x68] 	      5440	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0xab21	            0x39c2	                            cmp edx, eax	      5440	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0xab23	            0x7e52	                           jle 0x400abb7	      5440	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0xab25	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5442	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0xab29	          0x8b5020	            mov edx, dword [rax + 0x20] 	      5442	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0xab2c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      5442	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0xab30	          0x8b4068	            mov eax, dword [rax + 0x68] 	      5442	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0xab33	            0x29c2	                            sub edx, eax	      5442	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0xab35	            0x89d0	                            mov eax, edx	      5442	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0xab37	          0x8d50ff	                      lea edx, [rax - 1]	      5442	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0xab3a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5442	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0xab3e	          0x895004	                mov dword [rax + 4], edx	      5442	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11
0xab41	        0x837da400	               cmp dword [rbp - 0x5c], 0	      5443	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0xab45	            0x7530	                           jne 0x400abb7	      5443	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0xab47	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5443	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0xab4b	          0x8b4004	                mov eax, dword [rax + 4]	      5443	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0xab4e	            0x85c0	                           test eax, eax	      5443	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0xab50	            0x7425	                            je 0x400abb7	      5443	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0xab52	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5445	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0xab56	          0x8b4004	                mov eax, dword [rax + 4]	      5445	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0xab59	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      5445	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0xab5c	            0x29c2	                            sub edx, eax	      5445	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0xab5e	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5445	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0xab62	          0x895004	                mov dword [rax + 4], edx	      5445	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12
0xab65	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5446	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12	IF_13
0xab69	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      5446	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12	IF_13
0xab6d	            0x7408	                            je 0x400abb7	      5446	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12	IF_13
0xab6f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5447	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12	IF_13
0xab73	        0x488945d0	             mov qword [rbp - 0x30], rax	      5447	ops.c	FUNCTION_65	ELSE_2	ELSE_5	ELSE_6	ELSE_7	IF_11	IF_12	IF_13
0xab77	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5452	ops.c	FUNCTION_65	ELSE_2
0xab7b	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      5452	ops.c	FUNCTION_65	ELSE_2
0xab7e	          0x895038	             mov dword [rax + 0x38], edx	      5452	ops.c	FUNCTION_65	ELSE_2
0xab81	        0x837da400	               cmp dword [rbp - 0x5c], 0	      5454	ops.c	FUNCTION_65	ELSE_2	IF_14
0xab85	            0x7412	                            je 0x400abd9	      5454	ops.c	FUNCTION_65	ELSE_2	IF_14
0xab87	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5454	ops.c	FUNCTION_65	ELSE_2	IF_14
0xab8b	            0x8b00	                    mov eax, dword [rax]	      5454	ops.c	FUNCTION_65	ELSE_2	IF_14
0xab8d	            0x85c0	                           test eax, eax	      5454	ops.c	FUNCTION_65	ELSE_2	IF_14
0xab8f	            0x7408	                            je 0x400abd9	      5454	ops.c	FUNCTION_65	ELSE_2	IF_14
0xab91	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5455	ops.c	FUNCTION_65	ELSE_2	IF_14
0xab95	        0x488945d8	             mov qword [rbp - 0x28], rax	      5455	ops.c	FUNCTION_65	ELSE_2	IF_14
0xab99	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      5456	ops.c	FUNCTION_65	ELSE_2
0xab9d	          0x4889c2	                            mov rdx, rax	      5456	ops.c	FUNCTION_65	ELSE_2
0xaba0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5456	ops.c	FUNCTION_65	ELSE_2
0xaba4	          0x4829c2	                            sub rdx, rax	      5456	ops.c	FUNCTION_65	ELSE_2
0xaba7	          0x4889d0	                            mov rax, rdx	      5456	ops.c	FUNCTION_65	ELSE_2
0xabaa	            0x89c2	                            mov edx, eax	      5456	ops.c	FUNCTION_65	ELSE_2
0xabac	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5456	ops.c	FUNCTION_65	ELSE_2
0xabb0	          0x895008	                mov dword [rax + 8], edx	      5456	ops.c	FUNCTION_65	ELSE_2
0xabb3	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      5458	ops.c	FUNCTION_65
0xabb7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5458	ops.c	FUNCTION_65
0xabbb	          0x4829c2	                            sub rdx, rax	      5458	ops.c	FUNCTION_65
0xabbe	          0x4889d0	                            mov rax, rdx	      5458	ops.c	FUNCTION_65
0xabc1	            0x89c2	                            mov edx, eax	      5458	ops.c	FUNCTION_65
0xabc3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5458	ops.c	FUNCTION_65
0xabc7	          0x895018	             mov dword [rax + 0x18], edx	      5458	ops.c	FUNCTION_65
0xabca	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      5459	ops.c	FUNCTION_65
0xabce	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      5459	ops.c	FUNCTION_65
0xabd2	        0x48895010	             mov qword [rax + 0x10], rdx	      5459	ops.c	FUNCTION_65
0xabd6	              0x90	                                     nop	      5460	ops.c	FUNCTION_65
0xabd7	        0x488b45f8	                mov rax, qword [rbp - 8]	      5460	ops.c	FUNCTION_65
0xabdb	    0x644833042528	                xor rax, qword fs:[0x28]	      5460	ops.c	FUNCTION_65
0xabe4	            0x7405	                            je 0x400ac2b	      5460	ops.c	FUNCTION_65
0xabe6	      0xe800000000	                          call 0x400ac2b	      5460	ops.c	FUNCTION_65
0xabeb	              0xc9	                                   leave	      5460	ops.c	FUNCTION_65
0xabec	              0xc3	                                     ret	      5460	ops.c	FUNCTION_65
op_on_lines	CALL,0:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,0	13
0xb9	              0x55	                                push rbp	       203	ops.c	FUNCTION_2
0xba	          0x4889e5	                            mov rbp, rsp	       203	ops.c	FUNCTION_2
0xbd	          0x897dfc	                mov dword [rbp - 4], edi	       203	ops.c	FUNCTION_2
0xc0	          0x8b45fc	                mov eax, dword [rbp - 4]	       204	ops.c	FUNCTION_2
0xc3	          0x4863d0	                         movsxd rdx, eax	       204	ops.c	FUNCTION_2
0xc6	          0x4889d0	                            mov rax, rdx	       204	ops.c	FUNCTION_2
0xc9	          0x4801c0	                            add rax, rax	       204	ops.c	FUNCTION_2
0xcc	          0x4801d0	                            add rax, rdx	       204	ops.c	FUNCTION_2
0xcf	    0x480500000000	                              add rax, 0	       204	ops.c	FUNCTION_2
0xd5	           0xfb600	                   movzx eax, byte [rax]	       204	ops.c	FUNCTION_2
0xd8	           0xfbec0	                           movsx eax, al	       204	ops.c	FUNCTION_2
0xdb	              0x5d	                                 pop rbp	       205	ops.c	FUNCTION_2
0xdc	              0xc3	                                     ret	       205	ops.c	FUNCTION_2
write_reg_contents_ex	CALL,18:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,2:IF,11	152
0xdfe8	              0x55	                                push rbp	      7005	ops.c	FUNCTION_87
0xdfe9	          0x4889e5	                            mov rbp, rsp	      7005	ops.c	FUNCTION_87
0xdfec	              0x53	                                push rbx	      7005	ops.c	FUNCTION_87
0xdfed	        0x4883ec68	                           sub rsp, 0x68	      7005	ops.c	FUNCTION_87
0xdff1	          0x897dac	             mov dword [rbp - 0x54], edi	      7005	ops.c	FUNCTION_87
0xdff4	        0x488975a0	             mov qword [rbp - 0x60], rsi	      7005	ops.c	FUNCTION_87
0xdff8	          0x8955a8	             mov dword [rbp - 0x58], edx	      7005	ops.c	FUNCTION_87
0xdffb	          0x894d9c	             mov dword [rbp - 0x64], ecx	      7005	ops.c	FUNCTION_87
0xdffe	        0x44894598	             mov dword [rbp - 0x68], r8d	      7005	ops.c	FUNCTION_87
0xe002	        0x4c894d90	              mov qword [rbp - 0x70], r9	      7005	ops.c	FUNCTION_87
0xe006	    0x64488b042528	                mov rax, qword fs:[0x28]	      7005	ops.c	FUNCTION_87
0xe00f	        0x488945e8	             mov qword [rbp - 0x18], rax	      7005	ops.c	FUNCTION_87
0xe013	            0x31c0	                            xor eax, eax	      7005	ops.c	FUNCTION_87
0xe015	        0x837da800	               cmp dword [rbp - 0x58], 0	      7009	ops.c	FUNCTION_87	IF_1
0xe019	            0x780b	                            js 0x400e066	      7009	ops.c	FUNCTION_87	IF_1
0xe01b	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      7010	ops.c	FUNCTION_87	IF_1
0xe01e	            0x4898	                                    cdqe	      7010	ops.c	FUNCTION_87	IF_1
0xe020	        0x488945c8	             mov qword [rbp - 0x38], rax	      7010	ops.c	FUNCTION_87	IF_1
0xe024	            0xeb10	                           jmp 0x400e076	      7010	ops.c	FUNCTION_87	IF_1
0xe026	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7012	ops.c	FUNCTION_87	CALL_1
0xe02a	          0x4889c7	                            mov rdi, rax	      7012	ops.c	FUNCTION_87	CALL_1
0xe02d	      0xe800000000	                          call 0x400e072	      7012	ops.c	FUNCTION_87	CALL_1
0xe032	        0x488945c8	             mov qword [rbp - 0x38], rax	      7012	ops.c	FUNCTION_87	CALL_1
0xe036	        0x837dac2f	           cmp dword [rbp - 0x54], 0x2f 	      7015	ops.c	FUNCTION_87	IF_2
0xe03a	            0x7520	                           jne 0x400e09c	      7015	ops.c	FUNCTION_87	IF_2
0xe03c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7017	ops.c	FUNCTION_87	IF_2	CALL_2
0xe040	      0xb901000000	                              mov ecx, 1	      7017	ops.c	FUNCTION_87	IF_2	CALL_2
0xe045	      0xba01000000	                              mov edx, 1	      7017	ops.c	FUNCTION_87	IF_2	CALL_2
0xe04a	      0xbe00000000	                              mov esi, 0	      7017	ops.c	FUNCTION_87	IF_2	CALL_2
0xe04f	          0x4889c7	                            mov rdi, rax	      7017	ops.c	FUNCTION_87	IF_2	CALL_2
0xe052	      0xe800000000	                          call 0x400e097	      7017	ops.c	FUNCTION_87	IF_2	CALL_2
0xe057	      0xe99c010000	                           jmp 0x400e238	      7018	ops.c	FUNCTION_87	IF_2
0xe05c	        0x837dac23	           cmp dword [rbp - 0x54], 0x23 	      7021	ops.c	FUNCTION_87	IF_3
0xe060	     0xf85b8000000	                           jne 0x400e15e	      7021	ops.c	FUNCTION_87	IF_3
0xe066	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7025	ops.c	FUNCTION_87	IF_3	IF_4	CALL_3
0xe06a	           0xfb600	                   movzx eax, byte [rax]	      7025	ops.c	FUNCTION_87	IF_3	IF_4	CALL_3
0xe06d	           0xfb6c0	                           movzx eax, al	      7025	ops.c	FUNCTION_87	IF_3	IF_4	CALL_3
0xe070	          0x83e830	                           sub eax, 0x30	      7025	ops.c	FUNCTION_87	IF_3	IF_4	CALL_3
0xe073	          0x83f809	                              cmp eax, 9	      7025	ops.c	FUNCTION_87	IF_3	IF_4	CALL_3
0xe076	            0x7741	                            ja 0x400e0f9	      7025	ops.c	FUNCTION_87	IF_3	IF_4	CALL_3
0xe078	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7027	ops.c	FUNCTION_87	IF_3	IF_4	CALL_4
0xe07c	          0x4889c7	                            mov rdi, rax	      7027	ops.c	FUNCTION_87	IF_3	IF_4	CALL_4
0xe07f	      0xe800000000	                          call 0x400e0c4	      7027	ops.c	FUNCTION_87	IF_3	IF_4	CALL_4
0xe084	          0x8945b4	             mov dword [rbp - 0x4c], eax	      7027	ops.c	FUNCTION_87	IF_3	IF_4	CALL_4
0xe087	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      7029	ops.c	FUNCTION_87	IF_3	IF_4	CALL_5
0xe08a	            0x89c7	                            mov edi, eax	      7029	ops.c	FUNCTION_87	IF_3	IF_4	CALL_5
0xe08c	      0xe800000000	                          call 0x400e0d1	      7029	ops.c	FUNCTION_87	IF_3	IF_4	CALL_5
0xe091	        0x488945d0	             mov qword [rbp - 0x30], rax	      7029	ops.c	FUNCTION_87	IF_3	IF_4	CALL_5
0xe095	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      7030	ops.c	FUNCTION_87	IF_3	IF_4	IF_5
0xe09a	            0x755b	                           jne 0x400e137	      7030	ops.c	FUNCTION_87	IF_3	IF_4	IF_5
0xe09c	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      7031	ops.c	FUNCTION_87	IF_3	IF_4	CALL_7
0xe09f	          0x4863d8	                         movsxd rbx, eax	      7031	ops.c	FUNCTION_87	IF_3	IF_4	CALL_7
0xe0a2	      0xbf00000000	                              mov edi, 0	      7031	ops.c	FUNCTION_87	IF_3	IF_4	CALL_7
0xe0a7	      0xe800000000	                          call 0x400e0ec	      7031	ops.c	FUNCTION_87	IF_3	IF_4	CALL_7
0xe0ac	          0x4889de	                            mov rsi, rbx	      7031	ops.c	FUNCTION_87	IF_3	IF_4	CALL_7
0xe0af	          0x4889c7	                            mov rdi, rax	      7031	ops.c	FUNCTION_87	IF_3	IF_4	CALL_7
0xe0b2	      0xe800000000	                          call 0x400e0f7	      7031	ops.c	FUNCTION_87	IF_3	IF_4	CALL_7
0xe0b7	            0xeb3e	                           jmp 0x400e137	      7031	ops.c	FUNCTION_87	IF_3	IF_4	CALL_7
0xe0b9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7034	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0xe0bd	          0x4889c7	                            mov rdi, rax	      7034	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0xe0c0	      0xe800000000	                          call 0x400e105	      7034	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0xe0c5	          0x4889c2	                            mov rdx, rax	      7034	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0xe0c8	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7034	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0xe0cc	        0x488d3402	                    lea rsi, [rdx + rax]	      7034	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0xe0d0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7034	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0xe0d4	    0x41b800000000	                              mov r8d, 0	      7034	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0xe0da	      0xb900000000	                              mov ecx, 0	      7034	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0xe0df	      0xba01000000	                              mov edx, 1	      7034	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0xe0e4	          0x4889c7	                            mov rdi, rax	      7034	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0xe0e7	      0xe800000000	                          call 0x400e12c	      7034	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0xe0ec	            0x89c7	                            mov edi, eax	      7034	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0xe0ee	      0xe800000000	                          call 0x400e133	      7034	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0xe0f3	        0x488945d0	             mov qword [rbp - 0x30], rax	      7034	ops.c	FUNCTION_87	IF_3	ELSE_2	CALL_10
0xe0f7	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      7036	ops.c	FUNCTION_87	IF_3	IF_6
0xe0fc	     0xf84ec000000	                            je 0x400e22e	      7036	ops.c	FUNCTION_87	IF_3	IF_6
0xe102	    0x488b05000000	            mov rax, qword [0x0400e149] 	      7038	ops.c	FUNCTION_87	IF_3
0xe109	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      7038	ops.c	FUNCTION_87	IF_3
0xe10d	    0x8b92b8000000	            mov edx, dword [rdx + 0xb8] 	      7038	ops.c	FUNCTION_87	IF_3
0xe113	    0x899078010000	            mov dword [rax + 0x178], edx	      7038	ops.c	FUNCTION_87	IF_3
0xe119	      0xe9da000000	                           jmp 0x400e238	      7039	ops.c	FUNCTION_87	IF_3
0xe11e	        0x837dac3d	           cmp dword [rbp - 0x54], 0x3d 	      7043	ops.c	FUNCTION_87	IF_7
0xe122	            0x7566	                           jne 0x400e1ca	      7043	ops.c	FUNCTION_87	IF_7
0xe124	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7047	ops.c	FUNCTION_87	IF_7	CALL_11
0xe128	            0x89c2	                            mov edx, eax	      7047	ops.c	FUNCTION_87	IF_7	CALL_11
0xe12a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      7047	ops.c	FUNCTION_87	IF_7	CALL_11
0xe12e	            0x89d6	                            mov esi, edx	      7047	ops.c	FUNCTION_87	IF_7	CALL_11
0xe130	          0x4889c7	                            mov rdi, rax	      7047	ops.c	FUNCTION_87	IF_7	CALL_11
0xe133	      0xe800000000	                          call 0x400e178	      7047	ops.c	FUNCTION_87	IF_7	CALL_11
0xe138	        0x488945d8	             mov qword [rbp - 0x28], rax	      7047	ops.c	FUNCTION_87	IF_7	CALL_11
0xe13c	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      7048	ops.c	FUNCTION_87	IF_7	IF_8
0xe141	     0xf84aa000000	                            je 0x400e231	      7048	ops.c	FUNCTION_87	IF_7	IF_8
0xe147	        0x837d9c00	               cmp dword [rbp - 0x64], 0	      7050	ops.c	FUNCTION_87	IF_7	IF_9
0xe14b	            0x742f	                            je 0x400e1bc	      7050	ops.c	FUNCTION_87	IF_7	IF_9
0xe14d	      0xe800000000	                          call 0x400e192	      7052	ops.c	FUNCTION_87	IF_7	IF_9	CALL_13
0xe152	          0x4889c2	                            mov rdx, rax	      7052	ops.c	FUNCTION_87	IF_7	IF_9	CALL_13
0xe155	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7052	ops.c	FUNCTION_87	IF_7	IF_9	CALL_13
0xe159	          0x4889c6	                            mov rsi, rax	      7052	ops.c	FUNCTION_87	IF_7	IF_9	CALL_13
0xe15c	          0x4889d7	                            mov rdi, rdx	      7052	ops.c	FUNCTION_87	IF_7	IF_9	CALL_13
0xe15f	      0xe800000000	                          call 0x400e1a4	      7052	ops.c	FUNCTION_87	IF_7	IF_9	CALL_13
0xe164	        0x488945e0	             mov qword [rbp - 0x20], rax	      7052	ops.c	FUNCTION_87	IF_7	IF_9	CALL_13
0xe168	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7053	ops.c	FUNCTION_87	IF_7	IF_9	CALL_14
0xe16c	          0x4889c7	                            mov rdi, rax	      7053	ops.c	FUNCTION_87	IF_7	IF_9	CALL_14
0xe16f	      0xe800000000	                          call 0x400e1b4	      7053	ops.c	FUNCTION_87	IF_7	IF_9	CALL_14
0xe174	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      7054	ops.c	FUNCTION_87	IF_7	IF_9
0xe178	        0x488945d8	             mov qword [rbp - 0x28], rax	      7054	ops.c	FUNCTION_87	IF_7	IF_9
0xe17c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7056	ops.c	FUNCTION_87	IF_7	CALL_15
0xe180	          0x4889c7	                            mov rdi, rax	      7056	ops.c	FUNCTION_87	IF_7	CALL_15
0xe183	      0xe800000000	                          call 0x400e1c8	      7056	ops.c	FUNCTION_87	IF_7	CALL_15
0xe188	            0xeb6e	                           jmp 0x400e238	      7057	ops.c	FUNCTION_87	IF_7
0xe18a	        0x837dac5f	           cmp dword [rbp - 0x54], 0x5f 	      7061	ops.c	FUNCTION_87	IF_10
0xe18e	            0x7464	                            je 0x400e234	      7061	ops.c	FUNCTION_87	IF_10
0xe190	        0x488d7d98	                   lea rdi, [rbp - 0x68]	      7064	ops.c	FUNCTION_87	IF_11	CALL_16
0xe194	          0x8b4d9c	             mov ecx, dword [rbp - 0x64]	      7064	ops.c	FUNCTION_87	IF_11	CALL_16
0xe197	        0x488d55c0	                   lea rdx, [rbp - 0x40]	      7064	ops.c	FUNCTION_87	IF_11	CALL_16
0xe19b	        0x488d75b8	                   lea rsi, [rbp - 0x48]	      7064	ops.c	FUNCTION_87	IF_11	CALL_16
0xe19f	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7064	ops.c	FUNCTION_87	IF_11	CALL_16
0xe1a2	          0x4989f8	                             mov r8, rdi	      7064	ops.c	FUNCTION_87	IF_11	CALL_16
0xe1a5	            0x89c7	                            mov edi, eax	      7064	ops.c	FUNCTION_87	IF_11	CALL_16
0xe1a7	      0xe820fcffff	                 call sym.init_write_reg	      7064	ops.c	FUNCTION_87	IF_11	CALL_16
0xe1ac	            0x85c0	                           test eax, eax	      7064	ops.c	FUNCTION_87	IF_11	CALL_16
0xe1ae	            0x7447	                            je 0x400e237	      7064	ops.c	FUNCTION_87	IF_11	CALL_16
0xe1b0	          0x8b7598	             mov esi, dword [rbp - 0x68]	      7068	ops.c	FUNCTION_87	CALL_17
0xe1b3	    0x488b05000000	            mov rax, qword [0x0400e1fa] 	      7068	ops.c	FUNCTION_87	CALL_17
0xe1ba	        0x488b7d90	             mov rdi, qword [rbp - 0x70]	      7068	ops.c	FUNCTION_87	CALL_17
0xe1be	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	      7068	ops.c	FUNCTION_87	CALL_17
0xe1c2	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      7068	ops.c	FUNCTION_87	CALL_17
0xe1c6	    0x41b900000000	                              mov r9d, 0	      7068	ops.c	FUNCTION_87	CALL_17
0xe1cc	          0x4989f8	                             mov r8, rdi	      7068	ops.c	FUNCTION_87	CALL_17
0xe1cf	          0x4889c7	                            mov rdi, rax	      7068	ops.c	FUNCTION_87	CALL_17
0xe1d2	      0xe83c000000	                     call sym.str_to_reg	      7068	ops.c	FUNCTION_87	CALL_17
0xe1d7	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      7070	ops.c	FUNCTION_87	CALL_18
0xe1db	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	      7070	ops.c	FUNCTION_87	CALL_18
0xe1df	          0x8b45ac	             mov eax, dword [rbp - 0x54]	      7070	ops.c	FUNCTION_87	CALL_18
0xe1e2	          0x4889ce	                            mov rsi, rcx	      7070	ops.c	FUNCTION_87	CALL_18
0xe1e5	            0x89c7	                            mov edi, eax	      7070	ops.c	FUNCTION_87	CALL_18
0xe1e7	      0xe865fcffff	               call sym.finish_write_reg	      7070	ops.c	FUNCTION_87	CALL_18
0xe1ec	            0xeb0a	                           jmp 0x400e238	      7070	ops.c	FUNCTION_87	CALL_18
0xe1ee	              0x90	                                     nop	      7037	ops.c	FUNCTION_87	IF_3	IF_6
0xe1ef	            0xeb07	                           jmp 0x400e238	      7037	ops.c	FUNCTION_87	IF_3	IF_6
0xe1f1	              0x90	                                     nop	      7049	ops.c	FUNCTION_87	IF_7	IF_8
0xe1f2	            0xeb04	                           jmp 0x400e238	      7049	ops.c	FUNCTION_87	IF_7	IF_8
0xe1f4	              0x90	                                     nop	      7062	ops.c	FUNCTION_87	IF_10
0xe1f5	            0xeb01	                           jmp 0x400e238	      7062	ops.c	FUNCTION_87	IF_10
0xe1f7	              0x90	                                     nop	      7066	ops.c	FUNCTION_87	IF_11
0xe1f8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7071	ops.c	FUNCTION_87
0xe1fc	    0x644833042528	                xor rax, qword fs:[0x28]	      7071	ops.c	FUNCTION_87
0xe205	            0x7405	                            je 0x400e24c	      7071	ops.c	FUNCTION_87
0xe207	      0xe800000000	                          call 0x400e24c	      7071	ops.c	FUNCTION_87
0xe20c	        0x4883c468	                           add rsp, 0x68	      7071	ops.c	FUNCTION_87
0xe210	              0x5b	                                 pop rbx	      7071	ops.c	FUNCTION_87
0xe211	              0x5d	                                 pop rbp	      7071	ops.c	FUNCTION_87
0xe212	              0xc3	                                     ret	      7071	ops.c	FUNCTION_87
op_shift	CALL,19:FOR,1:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,8:IF,13	208
0x125	              0x55	                                push rbp	       231	ops.c	FUNCTION_5
0x126	          0x4889e5	                            mov rbp, rsp	       231	ops.c	FUNCTION_5
0x129	              0x53	                                push rbx	       231	ops.c	FUNCTION_5
0x12a	        0x4883ec38	                           sub rsp, 0x38	       231	ops.c	FUNCTION_5
0x12e	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       231	ops.c	FUNCTION_5
0x132	          0x8975c4	             mov dword [rbp - 0x3c], esi	       231	ops.c	FUNCTION_5
0x135	          0x8955c0	             mov dword [rbp - 0x40], edx	       231	ops.c	FUNCTION_5
0x138	    0xc745d8000000	               mov dword [rbp - 0x28], 0	       235	ops.c	FUNCTION_5
0x13f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       238	ops.c	FUNCTION_5	IF_1
0x143	        0x488b4030	            mov rax, qword [rax + 0x30] 	       238	ops.c	FUNCTION_5	IF_1
0x147	        0x488d5001	                      lea rdx, [rax + 1]	       238	ops.c	FUNCTION_5	IF_1
0x14b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x14f	        0x488b4020	            mov rax, qword [rax + 0x20] 	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x153	        0x4883e801	                              sub rax, 1	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x157	          0x4889d6	                            mov rsi, rdx	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x15a	          0x4889c7	                            mov rdi, rax	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x15d	      0xe800000000	                          call 0x40001a2	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x162	            0x85c0	                           test eax, eax	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x164	     0xf84f9020000	                            je 0x40004a3	       237	ops.c	FUNCTION_5	IF_1	CALL_1
0x16a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       241	ops.c	FUNCTION_5	IF_2
0x16e	          0x8b4060	            mov eax, dword [rax + 0x60] 	       241	ops.c	FUNCTION_5	IF_2
0x171	            0x85c0	                           test eax, eax	       241	ops.c	FUNCTION_5	IF_2
0x173	            0x740d	                            je 0x40001c2	       241	ops.c	FUNCTION_5	IF_2
0x175	    0x488b05000000	            mov rax, qword [0x040001bc] 	       242	ops.c	FUNCTION_5	IF_2
0x17c	          0x8b4040	            mov eax, dword [rax + 0x40] 	       242	ops.c	FUNCTION_5	IF_2
0x17f	          0x8945d8	             mov dword [rbp - 0x28], eax	       242	ops.c	FUNCTION_5	IF_2
0x182	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       244	ops.c	FUNCTION_5	FOR_1
0x186	        0x488b4050	            mov rax, qword [rax + 0x50] 	       244	ops.c	FUNCTION_5	FOR_1
0x18a	        0x488945e0	             mov qword [rbp - 0x20], rax	       244	ops.c	FUNCTION_5	FOR_1
0x18e	      0xe988000000	                           jmp 0x400025b	       244	ops.c	FUNCTION_5	FOR_1
0x193	      0xe800000000	                          call 0x40001d8	       246	ops.c	FUNCTION_5	FOR_1	CALL_2
0x198	           0xfb600	                   movzx eax, byte [rax]	       246	ops.c	FUNCTION_5	FOR_1	CALL_2
0x19b	           0xfb6c0	                           movzx eax, al	       246	ops.c	FUNCTION_5	FOR_1	CALL_2
0x19e	          0x8945dc	             mov dword [rbp - 0x24], eax	       246	ops.c	FUNCTION_5	FOR_1	CALL_2
0x1a1	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       247	ops.c	FUNCTION_5	FOR_1	IF_3
0x1a5	            0x7510	                           jne 0x40001f7	       247	ops.c	FUNCTION_5	FOR_1	IF_3
0x1a7	    0x488b05000000	            mov rax, qword [0x040001ee] 	       248	ops.c	FUNCTION_5	FOR_1	IF_3
0x1ae	    0xc74040000000	               mov dword [rax + 0x40], 0	       248	ops.c	FUNCTION_5	FOR_1	IF_3
0x1b5	            0xeb51	                           jmp 0x4000248	       248	ops.c	FUNCTION_5	FOR_1	IF_3
0x1b7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       250	ops.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0x1bb	          0x8b4060	            mov eax, dword [rax + 0x60] 	       250	ops.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0x1be	            0x85c0	                           test eax, eax	       250	ops.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0x1c0	            0x7413	                            je 0x4000215	       250	ops.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0x1c2	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       251	ops.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0x1c5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       251	ops.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0x1c9	            0x89d6	                            mov esi, edx	       251	ops.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0x1cb	          0x4889c7	                            mov rdi, rax	       251	ops.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0x1ce	      0xe88f030000	                    call sym.shift_block	       251	ops.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0x1d3	            0xeb33	                           jmp 0x4000248	       251	ops.c	FUNCTION_5	FOR_1	ELSE_1	IF_4
0x1d5	        0x837ddc23	           cmp dword [rbp - 0x24], 0x23 	       257	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_4
0x1d9	            0x7509	                           jne 0x4000224	       257	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_4
0x1db	      0xe800000000	                          call 0x4000220	       257	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_4
0x1e0	            0x85c0	                           test eax, eax	       257	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_4
0x1e2	            0x7524	                           jne 0x4000248	       257	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_4
0x1e4	    0x8b3500000000	            mov esi, dword [0x0400022a] 	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x1ea	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x1ee	            0x8b00	                    mov eax, dword [rax]	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x1f0	          0x83f804	                              cmp eax, 4	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x1f3	           0xf94c0	                                 sete al	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x1f6	           0xfb6c0	                           movzx eax, al	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x1f9	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x1fc	      0xb900000000	                              mov ecx, 0	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x201	            0x89c7	                            mov edi, eax	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x203	      0xe800000000	                          call 0x4000248	       260	ops.c	FUNCTION_5	FOR_1	ELSE_2	IF_5	CALL_5
0x208	    0x488b05000000	            mov rax, qword [0x0400024f] 	       262	ops.c	FUNCTION_5	FOR_1
0x20f	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       262	ops.c	FUNCTION_5	FOR_1
0x213	        0x4883c201	                              add rdx, 1	       262	ops.c	FUNCTION_5	FOR_1
0x217	        0x48895038	             mov qword [rax + 0x38], rdx	       262	ops.c	FUNCTION_5	FOR_1
0x21b	      0x48836de001	               sub qword [rbp - 0x20], 1	       244	ops.c	FUNCTION_5	FOR_1
0x220	      0x48837de000	               cmp qword [rbp - 0x20], 0	       244	ops.c	FUNCTION_5	FOR_1
0x225	     0xf8968ffffff	                           jns 0x40001d3	       244	ops.c	FUNCTION_5	FOR_1
0x22b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       265	ops.c	FUNCTION_5	CALL_6
0x22f	        0x488b4030	            mov rax, qword [rax + 0x30] 	       265	ops.c	FUNCTION_5	CALL_6
0x233	        0x488d5001	                      lea rdx, [rax + 1]	       265	ops.c	FUNCTION_5	CALL_6
0x237	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       265	ops.c	FUNCTION_5	CALL_6
0x23b	        0x488b4020	            mov rax, qword [rax + 0x20] 	       265	ops.c	FUNCTION_5	CALL_6
0x23f	      0xb900000000	                              mov ecx, 0	       265	ops.c	FUNCTION_5	CALL_6
0x244	      0xbe00000000	                              mov esi, 0	       265	ops.c	FUNCTION_5	CALL_6
0x249	          0x4889c7	                            mov rdi, rax	       265	ops.c	FUNCTION_5	CALL_6
0x24c	      0xe800000000	                          call 0x4000291	       265	ops.c	FUNCTION_5	CALL_6
0x251	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       266	ops.c	FUNCTION_5	IF_6
0x255	          0x8b4060	            mov eax, dword [rax + 0x60] 	       266	ops.c	FUNCTION_5	IF_6
0x258	            0x85c0	                           test eax, eax	       266	ops.c	FUNCTION_5	IF_6
0x25a	            0x7422	                            je 0x40002be	       266	ops.c	FUNCTION_5	IF_6
0x25c	    0x488b05000000	            mov rax, qword [0x040002a3] 	       268	ops.c	FUNCTION_5	IF_6
0x263	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       268	ops.c	FUNCTION_5	IF_6
0x267	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	       268	ops.c	FUNCTION_5	IF_6
0x26b	        0x48895038	             mov qword [rax + 0x38], rdx	       268	ops.c	FUNCTION_5	IF_6
0x26f	    0x488b05000000	            mov rax, qword [0x040002b6] 	       269	ops.c	FUNCTION_5	IF_6
0x276	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       269	ops.c	FUNCTION_5	IF_6
0x279	          0x895040	             mov dword [rax + 0x40], edx	       269	ops.c	FUNCTION_5	IF_6
0x27c	            0xeb38	                           jmp 0x40002f6	       269	ops.c	FUNCTION_5	IF_6
0x27e	        0x837dc400	               cmp dword [rbp - 0x3c], 0	       271	ops.c	FUNCTION_5	ELSE_3	IF_7
0x282	            0x741f	                            je 0x40002e3	       271	ops.c	FUNCTION_5	ELSE_3	IF_7
0x284	    0x488b05000000	            mov rax, qword [0x040002cb] 	       273	ops.c	FUNCTION_5	ELSE_3	IF_7
0x28b	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       273	ops.c	FUNCTION_5	ELSE_3	IF_7
0x28f	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	       273	ops.c	FUNCTION_5	ELSE_3	IF_7
0x293	        0x48895038	             mov qword [rax + 0x38], rdx	       273	ops.c	FUNCTION_5	ELSE_3	IF_7
0x297	      0xbf06000000	                              mov edi, 6	       274	ops.c	FUNCTION_5	ELSE_3	IF_7	CALL_7
0x29c	      0xe800000000	                          call 0x40002e1	       274	ops.c	FUNCTION_5	ELSE_3	IF_7	CALL_7
0x2a1	            0xeb13	                           jmp 0x40002f6	       274	ops.c	FUNCTION_5	ELSE_3	IF_7	CALL_7
0x2a3	    0x488b05000000	            mov rax, qword [0x040002ea] 	       277	ops.c	FUNCTION_5	ELSE_4
0x2aa	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       277	ops.c	FUNCTION_5	ELSE_4
0x2ae	        0x4883ea01	                              sub rdx, 1	       277	ops.c	FUNCTION_5	ELSE_4
0x2b2	        0x48895038	             mov qword [rax + 0x38], rdx	       277	ops.c	FUNCTION_5	ELSE_4
0x2b6	      0xe800000000	                          call 0x40002fb	       281	ops.c	FUNCTION_5	CALL_8
0x2bb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       285	ops.c	FUNCTION_5	IF_8
0x2bf	        0x488b5050	            mov rdx, qword [rax + 0x50] 	       285	ops.c	FUNCTION_5	IF_8
0x2c3	    0x488b05000000	            mov rax, qword [0x0400030a] 	       285	ops.c	FUNCTION_5	IF_8
0x2ca	          0x4839c2	                            cmp rdx, rax	       285	ops.c	FUNCTION_5	IF_8
0x2cd	     0xf8e0b010000	                           jle 0x400041e	       285	ops.c	FUNCTION_5	IF_8
0x2d3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       287	ops.c	FUNCTION_5	IF_8	IF_9
0x2d7	            0x8b00	                    mov eax, dword [rax]	       287	ops.c	FUNCTION_5	IF_8	IF_9
0x2d9	          0x83f805	                              cmp eax, 5	       287	ops.c	FUNCTION_5	IF_8	IF_9
0x2dc	            0x750a	                           jne 0x4000328	       287	ops.c	FUNCTION_5	IF_8	IF_9
0x2de	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       288	ops.c	FUNCTION_5	IF_8	IF_9
0x2e6	            0xeb08	                           jmp 0x4000330	       288	ops.c	FUNCTION_5	IF_8	IF_9
0x2e8	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       290	ops.c	FUNCTION_5	IF_8	ELSE_5
0x2f0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       291	ops.c	FUNCTION_5	IF_8	IF_10
0x2f4	        0x488b4050	            mov rax, qword [rax + 0x50] 	       291	ops.c	FUNCTION_5	IF_8	IF_10
0x2f8	        0x4883f801	                              cmp rax, 1	       291	ops.c	FUNCTION_5	IF_8	IF_10
0x2fc	            0x755d	                           jne 0x400039b	       291	ops.c	FUNCTION_5	IF_8	IF_10
0x2fe	        0x837dc001	               cmp dword [rbp - 0x40], 1	       293	ops.c	FUNCTION_5	IF_8	IF_10	IF_11
0x302	            0x752d	                           jne 0x4000371	       293	ops.c	FUNCTION_5	IF_8	IF_10	IF_11
0x304	      0xbf00000000	                              mov edi, 0	       294	ops.c	FUNCTION_5	IF_8	IF_10	CALL_10
0x309	      0xe800000000	                          call 0x400034e	       294	ops.c	FUNCTION_5	IF_8	IF_10	CALL_10
0x30e	          0x4889c1	                            mov rcx, rax	       294	ops.c	FUNCTION_5	IF_8	IF_10	CALL_10
0x311	    0x488b05000000	            mov rax, qword [0x04000358] 	       294	ops.c	FUNCTION_5	IF_8	IF_10	CALL_10
0x318	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       294	ops.c	FUNCTION_5	IF_8	IF_10	CALL_10
0x31c	          0x4889ce	                            mov rsi, rcx	       294	ops.c	FUNCTION_5	IF_8	IF_10	CALL_10
0x31f	          0x4889c7	                            mov rdi, rax	       294	ops.c	FUNCTION_5	IF_8	IF_10	CALL_10
0x322	      0xb800000000	                              mov eax, 0	       294	ops.c	FUNCTION_5	IF_8	IF_10	CALL_10
0x327	      0xe800000000	                          call 0x400036c	       294	ops.c	FUNCTION_5	IF_8	IF_10	CALL_10
0x32c	      0xe99e000000	                           jmp 0x400040f	       294	ops.c	FUNCTION_5	IF_8	IF_10	CALL_10
0x331	      0xbf00000000	                              mov edi, 0	       296	ops.c	FUNCTION_5	IF_8	IF_10	CALL_12
0x336	      0xe800000000	                          call 0x400037b	       296	ops.c	FUNCTION_5	IF_8	IF_10	CALL_12
0x33b	          0x4889c6	                            mov rsi, rax	       296	ops.c	FUNCTION_5	IF_8	IF_10	CALL_12
0x33e	    0x488b05000000	            mov rax, qword [0x04000385] 	       296	ops.c	FUNCTION_5	IF_8	IF_10	CALL_12
0x345	          0x8b4dc0	             mov ecx, dword [rbp - 0x40]	       296	ops.c	FUNCTION_5	IF_8	IF_10	CALL_12
0x348	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       296	ops.c	FUNCTION_5	IF_8	IF_10	CALL_12
0x34c	          0x4889c7	                            mov rdi, rax	       296	ops.c	FUNCTION_5	IF_8	IF_10	CALL_12
0x34f	      0xb800000000	                              mov eax, 0	       296	ops.c	FUNCTION_5	IF_8	IF_10	CALL_12
0x354	      0xe800000000	                          call 0x4000399	       296	ops.c	FUNCTION_5	IF_8	IF_10	CALL_12
0x359	            0xeb74	                           jmp 0x400040f	       296	ops.c	FUNCTION_5	IF_8	IF_10	CALL_12
0x35b	        0x837dc001	               cmp dword [rbp - 0x40], 1	       300	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12
0x35f	            0x7535	                           jne 0x40003d6	       300	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12
0x361	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_14
0x365	        0x488b5850	            mov rbx, qword [rax + 0x50] 	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_14
0x369	      0xbf00000000	                              mov edi, 0	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_14
0x36e	      0xe800000000	                          call 0x40003b3	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_14
0x373	          0x4889c6	                            mov rsi, rax	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_14
0x376	    0x488b05000000	            mov rax, qword [0x040003bd] 	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_14
0x37d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_14
0x381	          0x4889d1	                            mov rcx, rdx	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_14
0x384	          0x4889da	                            mov rdx, rbx	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_14
0x387	          0x4889c7	                            mov rdi, rax	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_14
0x38a	      0xb800000000	                              mov eax, 0	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_14
0x38f	      0xe800000000	                          call 0x40003d4	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_14
0x394	            0xeb39	                           jmp 0x400040f	       301	ops.c	FUNCTION_5	IF_8	ELSE_7	IF_12	CALL_14
0x396	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_16
0x39a	        0x488b5850	            mov rbx, qword [rax + 0x50] 	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_16
0x39e	      0xbf00000000	                              mov edi, 0	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_16
0x3a3	      0xe800000000	                          call 0x40003e8	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_16
0x3a8	          0x4889c6	                            mov rsi, rax	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_16
0x3ab	    0x488b05000000	            mov rax, qword [0x040003f2] 	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_16
0x3b2	          0x8b4dc0	             mov ecx, dword [rbp - 0x40]	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_16
0x3b5	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_16
0x3b9	          0x4189c8	                            mov r8d, ecx	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_16
0x3bc	          0x4889d1	                            mov rcx, rdx	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_16
0x3bf	          0x4889da	                            mov rdx, rbx	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_16
0x3c2	          0x4889c7	                            mov rdi, rax	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_16
0x3c5	      0xb800000000	                              mov eax, 0	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_16
0x3ca	      0xe800000000	                          call 0x400040f	       304	ops.c	FUNCTION_5	IF_8	ELSE_7	ELSE_8	CALL_16
0x3cf	    0x488b05000000	            mov rax, qword [0x04000416] 	       307	ops.c	FUNCTION_5	IF_8	CALL_17
0x3d6	          0x4889c7	                            mov rdi, rax	       307	ops.c	FUNCTION_5	IF_8	CALL_17
0x3d9	      0xe800000000	                          call 0x400041e	       307	ops.c	FUNCTION_5	IF_8	CALL_17
0x3de	    0x488b0d000000	            mov rcx, qword [0x04000425] 	       313	ops.c	FUNCTION_5
0x3e5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       313	ops.c	FUNCTION_5
0x3e9	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       313	ops.c	FUNCTION_5
0x3ed	        0x488b4020	            mov rax, qword [rax + 0x20] 	       313	ops.c	FUNCTION_5
0x3f1	    0x488981d01100	          mov qword [rcx + 0x11d0], rax 	       313	ops.c	FUNCTION_5
0x3f8	    0x488991d81100	          mov qword [rcx + 0x11d8], rdx 	       313	ops.c	FUNCTION_5
0x3ff	    0x488b05000000	            mov rax, qword [0x04000446] 	       314	ops.c	FUNCTION_5
0x406	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       314	ops.c	FUNCTION_5
0x40a	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	       314	ops.c	FUNCTION_5
0x40e	    0x488990f01100	          mov qword [rax + 0x11f0], rdx 	       314	ops.c	FUNCTION_5
0x415	    0x488b1d000000	            mov rbx, qword [0x0400045c] 	       315	ops.c	FUNCTION_5	CALL_19
0x41c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       315	ops.c	FUNCTION_5	CALL_19
0x420	        0x488b4030	            mov rax, qword [rax + 0x30] 	       315	ops.c	FUNCTION_5	CALL_19
0x424	          0x4889c7	                            mov rdi, rax	       315	ops.c	FUNCTION_5	CALL_19
0x427	      0xe800000000	                          call 0x400046c	       315	ops.c	FUNCTION_5	CALL_19
0x42c	          0x4889c7	                            mov rdi, rax	       315	ops.c	FUNCTION_5	CALL_19
0x42f	      0xe800000000	                          call 0x4000474	       315	ops.c	FUNCTION_5	CALL_19
0x434	    0x8983f8110000	          mov dword [rbx + 0x11f8], eax 	       315	ops.c	FUNCTION_5	CALL_19
0x43a	    0x488b05000000	            mov rax, qword [0x04000481] 	       316	ops.c	FUNCTION_5	IF_13
0x441	    0x8b80f8110000	          mov eax, dword [rax + 0x11f8] 	       316	ops.c	FUNCTION_5	IF_13
0x447	            0x85c0	                           test eax, eax	       316	ops.c	FUNCTION_5	IF_13
0x449	            0x7e19	                           jle 0x40004a4	       316	ops.c	FUNCTION_5	IF_13
0x44b	    0x488b05000000	            mov rax, qword [0x04000492] 	       317	ops.c	FUNCTION_5	IF_13
0x452	    0x8b90f8110000	          mov edx, dword [rax + 0x11f8] 	       317	ops.c	FUNCTION_5	IF_13
0x458	          0x83ea01	                              sub edx, 1	       317	ops.c	FUNCTION_5	IF_13
0x45b	    0x8990f8110000	          mov dword [rax + 0x11f8], edx 	       317	ops.c	FUNCTION_5	IF_13
0x461	            0xeb01	                           jmp 0x40004a4	       317	ops.c	FUNCTION_5	IF_13
0x463	              0x90	                                     nop	       239	ops.c	FUNCTION_5	IF_1
0x464	        0x4883c438	                           add rsp, 0x38	       318	ops.c	FUNCTION_5
0x468	              0x5b	                                 pop rbx	       318	ops.c	FUNCTION_5
0x469	              0x5d	                                 pop rbp	       318	ops.c	FUNCTION_5
0x46a	              0xc3	                                     ret	       318	ops.c	FUNCTION_5
op_insert	CALL,27:FOR,1:SWITCH,0:functions,0:WHILE,1:DO,0:ELSE,2:IF,24	442
0x4cbd	              0x55	                                push rbp	      2578	ops.c	FUNCTION_39
0x4cbe	          0x4889e5	                            mov rbp, rsp	      2578	ops.c	FUNCTION_39
0x4cc1	    0x4881ecf00000	                           sub rsp, 0xf0	      2578	ops.c	FUNCTION_39
0x4cc8	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	      2578	ops.c	FUNCTION_39
0x4ccf	    0x4889b510ffff	             mov qword [rbp - 0xf0], rsi	      2578	ops.c	FUNCTION_39
0x4cd6	    0x64488b042528	                mov rax, qword fs:[0x28]	      2578	ops.c	FUNCTION_39
0x4cdf	        0x488945f8	                mov qword [rbp - 8], rax	      2578	ops.c	FUNCTION_39
0x4ce3	            0x31c0	                            xor eax, eax	      2578	ops.c	FUNCTION_39
0x4ce5	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	      2579	ops.c	FUNCTION_39
0x4cf0	    0xc78528ffffff	               mov dword [rbp - 0xd8], 0	      2581	ops.c	FUNCTION_39
0x4cfa	    0x488b05000000	            mov rax, qword [0x04004d41] 	      2587	ops.c	FUNCTION_39
0x4d01	          0x8b4048	            mov eax, dword [rax + 0x48] 	      2587	ops.c	FUNCTION_39
0x4d04	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      2587	ops.c	FUNCTION_39
0x4d09	           0xf94c0	                                 sete al	      2587	ops.c	FUNCTION_39
0x4d0c	           0xfb6c0	                           movzx eax, al	      2587	ops.c	FUNCTION_39
0x4d0f	          0x894598	             mov dword [rbp - 0x68], eax	      2587	ops.c	FUNCTION_39
0x4d12	    0x488b05000000	            mov rax, qword [0x04004d59] 	      2590	ops.c	FUNCTION_39
0x4d19	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      2590	ops.c	FUNCTION_39
0x4d20	        0x488b5220	            mov rdx, qword [rdx + 0x20] 	      2590	ops.c	FUNCTION_39
0x4d24	        0x48895038	             mov qword [rax + 0x38], rdx	      2590	ops.c	FUNCTION_39
0x4d28	      0xbf14000000	                           mov edi, 0x14	      2591	ops.c	FUNCTION_39	CALL_1
0x4d2d	      0xe800000000	                          call 0x4004d72	      2591	ops.c	FUNCTION_39	CALL_1
0x4d32	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2593	ops.c	FUNCTION_39	IF_1
0x4d39	          0x8b4060	            mov eax, dword [rax + 0x60] 	      2593	ops.c	FUNCTION_39	IF_1
0x4d3c	            0x85c0	                           test eax, eax	      2593	ops.c	FUNCTION_39	IF_1
0x4d3e	     0xf840d010000	                            je 0x4004e91	      2593	ops.c	FUNCTION_39	IF_1
0x4d44	    0x488b05000000	            mov rax, qword [0x04004d8b] 	      2600	ops.c	FUNCTION_39	IF_1	IF_2
0x4d4b	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2600	ops.c	FUNCTION_39	IF_1	IF_2
0x4d4e	            0x85c0	                           test eax, eax	      2600	ops.c	FUNCTION_39	IF_1	IF_2
0x4d50	            0x7e76	                           jle 0x4004e08	      2600	ops.c	FUNCTION_39	IF_1	IF_2
0x4d52	    0x8b0500000000	            mov eax, dword [0x04004d98] 	      2602	ops.c	FUNCTION_39	IF_1	IF_2
0x4d58	    0x898530ffffff	             mov dword [rbp - 0xd0], eax	      2602	ops.c	FUNCTION_39	IF_1	IF_2
0x4d5e	    0xc70500000000	               mov dword [0x04004da8], 4	      2604	ops.c	FUNCTION_39	IF_1	IF_2
0x4d68	      0xe800000000	                          call 0x4004dad	      2605	ops.c	FUNCTION_39	IF_1	IF_2	IF_3	CALL_2
0x4d6d	            0x85c0	                           test eax, eax	      2605	ops.c	FUNCTION_39	IF_1	IF_2	IF_3	CALL_2
0x4d6f	     0xf840e070000	                            je 0x40054c3	      2605	ops.c	FUNCTION_39	IF_1	IF_2	IF_3	CALL_2
0x4d75	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2607	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x4d7c	            0x8b00	                    mov eax, dword [rax]	      2607	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x4d7e	          0x83f812	                           cmp eax, 0x12	      2607	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x4d81	            0x750f	                           jne 0x4004dd2	      2607	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x4d83	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2608	ops.c	FUNCTION_39	IF_1	IF_2	CALL_4
0x4d8a	          0x8b4068	            mov eax, dword [rax + 0x68] 	      2608	ops.c	FUNCTION_39	IF_1	IF_2	CALL_4
0x4d8d	          0x83c001	                              add eax, 1	      2607	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x4d90	            0xeb05	                           jmp 0x4004dd7	      2607	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x4d92	      0xe800000000	                          call 0x4004dd7	      2607	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x4d97	            0x89c7	                            mov edi, eax	      2607	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x4d99	      0xe800000000	                          call 0x4004dde	      2607	ops.c	FUNCTION_39	IF_1	IF_2	CALL_3
0x4d9e	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2609	ops.c	FUNCTION_39	IF_1	IF_2	IF_4
0x4da5	            0x8b00	                    mov eax, dword [rax]	      2609	ops.c	FUNCTION_39	IF_1	IF_2	IF_4
0x4da7	          0x83f812	                           cmp eax, 0x12	      2609	ops.c	FUNCTION_39	IF_1	IF_2	IF_4
0x4daa	            0x7510	                           jne 0x4004dfc	      2609	ops.c	FUNCTION_39	IF_1	IF_2	IF_4
0x4dac	    0x488b05000000	            mov rax, qword [0x04004df3] 	      2610	ops.c	FUNCTION_39	IF_1	IF_2	IF_4
0x4db3	          0x8b5040	            mov edx, dword [rax + 0x40] 	      2610	ops.c	FUNCTION_39	IF_1	IF_2	IF_4
0x4db6	          0x83ea01	                              sub edx, 1	      2610	ops.c	FUNCTION_39	IF_1	IF_2	IF_4
0x4db9	          0x895040	             mov dword [rax + 0x40], edx	      2610	ops.c	FUNCTION_39	IF_1	IF_2	IF_4
0x4dbc	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      2611	ops.c	FUNCTION_39	IF_1	IF_2
0x4dc2	    0x890500000000	            mov dword [0x04004e08], eax 	      2611	ops.c	FUNCTION_39	IF_1	IF_2
0x4dc8	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2615	ops.c	FUNCTION_39	IF_1	CALL_5
0x4dcf	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2615	ops.c	FUNCTION_39	IF_1	CALL_5
0x4dd3	    0x488db570ffff	                   lea rsi, [rbp - 0x90]	      2615	ops.c	FUNCTION_39	IF_1	CALL_5
0x4dda	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2615	ops.c	FUNCTION_39	IF_1	CALL_5
0x4de1	      0xb901000000	                              mov ecx, 1	      2615	ops.c	FUNCTION_39	IF_1	CALL_5
0x4de6	          0x4889c7	                            mov rdi, rax	      2615	ops.c	FUNCTION_39	IF_1	CALL_5
0x4de9	      0xe8eb580000	                     call sym.block_prep	      2615	ops.c	FUNCTION_39	IF_1	CALL_5
0x4dee	      0xe800000000	                          call 0x4004e33	      2617	ops.c	FUNCTION_39	IF_1	CALL_6
0x4df3	    0x898528ffffff	             mov dword [rbp - 0xd8], eax	      2617	ops.c	FUNCTION_39	IF_1	CALL_6
0x4df9	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2618	ops.c	FUNCTION_39	IF_1	CALL_7
0x4e00	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2618	ops.c	FUNCTION_39	IF_1	CALL_7
0x4e04	          0x4889c7	                            mov rdi, rax	      2618	ops.c	FUNCTION_39	IF_1	CALL_7
0x4e07	      0xe800000000	                          call 0x4004e4c	      2618	ops.c	FUNCTION_39	IF_1	CALL_7
0x4e0c	          0x4889c2	                            mov rdx, rax	      2618	ops.c	FUNCTION_39	IF_1	CALL_7
0x4e0f	          0x8b4588	             mov eax, dword [rbp - 0x78]	      2618	ops.c	FUNCTION_39	IF_1	CALL_7
0x4e12	            0x4898	                                    cdqe	      2618	ops.c	FUNCTION_39	IF_1	CALL_7
0x4e14	          0x4801d0	                            add rax, rdx	      2618	ops.c	FUNCTION_39	IF_1	CALL_7
0x4e17	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      2618	ops.c	FUNCTION_39	IF_1	CALL_7
0x4e1e	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2620	ops.c	FUNCTION_39	IF_1	IF_5
0x4e25	            0x8b00	                    mov eax, dword [rax]	      2620	ops.c	FUNCTION_39	IF_1	IF_5
0x4e27	          0x83f812	                           cmp eax, 0x12	      2620	ops.c	FUNCTION_39	IF_1	IF_5
0x4e2a	            0x750f	                           jne 0x4004e7b	      2620	ops.c	FUNCTION_39	IF_1	IF_5
0x4e2c	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      2621	ops.c	FUNCTION_39	IF_1	IF_5
0x4e32	            0x4898	                                    cdqe	      2621	ops.c	FUNCTION_39	IF_1	IF_5
0x4e34	    0x48018548ffff	            add qword [rbp - 0xb8], rax 	      2621	ops.c	FUNCTION_39	IF_1	IF_5
0x4e3b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2622	ops.c	FUNCTION_39	IF_1	CALL_8
0x4e42	          0x4889c7	                            mov rdi, rax	      2622	ops.c	FUNCTION_39	IF_1	CALL_8
0x4e45	      0xe800000000	                          call 0x4004e8a	      2622	ops.c	FUNCTION_39	IF_1	CALL_8
0x4e4a	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      2622	ops.c	FUNCTION_39	IF_1	CALL_8
0x4e51	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2625	ops.c	FUNCTION_39	IF_6
0x4e58	            0x8b00	                    mov eax, dword [rax]	      2625	ops.c	FUNCTION_39	IF_6
0x4e5a	          0x83f812	                           cmp eax, 0x12	      2625	ops.c	FUNCTION_39	IF_6
0x4e5d	     0xf852a010000	                           jne 0x4004fcd	      2625	ops.c	FUNCTION_39	IF_6
0x4e63	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2627	ops.c	FUNCTION_39	IF_6	IF_7
0x4e6a	          0x8b4060	            mov eax, dword [rax + 0x60] 	      2627	ops.c	FUNCTION_39	IF_6	IF_7
0x4e6d	            0x85c0	                           test eax, eax	      2627	ops.c	FUNCTION_39	IF_6	IF_7
0x4e6f	     0xf84bb000000	                            je 0x4004f70	      2627	ops.c	FUNCTION_39	IF_6	IF_7
0x4e75	    0x488b05000000	            mov rax, qword [0x04004ebc] 	      2629	ops.c	FUNCTION_39	IF_6	IF_7
0x4e7c	          0x8b4044	            mov eax, dword [rax + 0x44] 	      2629	ops.c	FUNCTION_39	IF_6	IF_7
0x4e7f	            0x85c0	                           test eax, eax	      2629	ops.c	FUNCTION_39	IF_6	IF_7
0x4e81	     0xf85a9000000	                           jne 0x4004f70	      2629	ops.c	FUNCTION_39	IF_6	IF_7
0x4e87	    0x488b05000000	            mov rax, qword [0x04004ece] 	      2634	ops.c	FUNCTION_39	IF_6	IF_7
0x4e8e	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      2634	ops.c	FUNCTION_39	IF_6	IF_7
0x4e95	            0xeb10	                           jmp 0x4004ee7	      2635	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1	CALL_9
0x4e97	    0x488b05000000	            mov rax, qword [0x04004ede] 	      2637	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x4e9e	          0x8b5040	            mov edx, dword [rax + 0x40] 	      2637	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x4ea1	          0x83c201	                              add edx, 1	      2637	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x4ea4	          0x895040	             mov dword [rax + 0x40], edx	      2637	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x4ea7	      0xe800000000	                          call 0x4004eec	      2635	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1	CALL_9
0x4eac	           0xfb600	                   movzx eax, byte [rax]	      2635	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1	CALL_9
0x4eaf	            0x84c0	                             test al, al	      2635	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1	CALL_9
0x4eb1	            0x7419	                            je 0x4004f0c	      2635	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1	CALL_9
0x4eb3	    0x488b05000000	            mov rax, qword [0x04004efa] 	      2636	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x4eba	          0x8b4040	            mov eax, dword [rax + 0x40] 	      2636	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x4ebd	          0x8b4d88	             mov ecx, dword [rbp - 0x78]	      2636	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x4ec0	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      2636	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x4ec6	             0x1ca	                            add edx, ecx	      2636	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x4ec8	            0x39d0	                            cmp eax, edx	      2636	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x4eca	            0x7ccb	                            jl 0x4004ed7	      2636	ops.c	FUNCTION_39	IF_6	IF_7	WHILE_1
0x4ecc	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      2638	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x4ecf	            0x85c0	                           test eax, eax	      2638	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x4ed1	     0xf84b5000000	                            je 0x4004fcc	      2638	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x4ed7	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2638	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x4eda	            0x85c0	                           test eax, eax	      2638	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x4edc	     0xf85aa000000	                           jne 0x4004fcc	      2638	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x4ee2	      0xe800000000	                          call 0x4004f27	      2642	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	IF_9	CALL_10
0x4ee7	            0x85c0	                           test eax, eax	      2642	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	IF_9	CALL_10
0x4ee9	     0xf8497050000	                            je 0x40054c6	      2642	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	IF_9	CALL_10
0x4eef	    0xc7852cffffff	               mov dword [rbp - 0xd4], 0	      2644	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x4ef9	            0xeb11	                           jmp 0x4004f4c	      2644	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x4efb	      0xbf20000000	                           mov edi, 0x20	      2645	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	CALL_11
0x4f00	      0xe800000000	                          call 0x4004f45	      2645	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	CALL_11
0x4f05	    0x83852cffffff	               add dword [rbp - 0xd4], 1	      2644	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x4f0c	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      2644	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x4f12	    0x3b852cffffff	             cmp eax, dword [rbp - 0xd4]	      2644	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x4f18	            0x7fe1	                            jg 0x4004f3b	      2644	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	FOR_1
0x4f1a	    0x8b9578ffffff	             mov edx, dword [rbp - 0x88]	      2646	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x4f20	    0x8b8574ffffff	             mov eax, dword [rbp - 0x8c]	      2646	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x4f26	             0x1d0	                            add eax, edx	      2646	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x4f28	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      2646	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x4f2e	            0xeb5c	                           jmp 0x4004fcc	      2638	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x4f30	    0x488b0d000000	            mov rcx, qword [0x04004f77] 	      2651	ops.c	FUNCTION_39	IF_6	ELSE_1
0x4f37	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2651	ops.c	FUNCTION_39	IF_6	ELSE_1
0x4f3e	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2651	ops.c	FUNCTION_39	IF_6	ELSE_1
0x4f42	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2651	ops.c	FUNCTION_39	IF_6	ELSE_1
0x4f46	        0x48894138	             mov qword [rcx + 0x38], rax	      2651	ops.c	FUNCTION_39	IF_6	ELSE_1
0x4f4a	        0x48895140	             mov qword [rcx + 0x40], rdx	      2651	ops.c	FUNCTION_39	IF_6	ELSE_1
0x4f4e	      0xe800000000	                          call 0x4004f93	      2652	ops.c	FUNCTION_39	IF_6	ELSE_1	CALL_12
0x4f53	    0x488b05000000	            mov rax, qword [0x04004f9a] 	      2655	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10	CALL_13
0x4f5a	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2655	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10	CALL_13
0x4f5e	          0x4889c7	                            mov rdi, rax	      2655	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10	CALL_13
0x4f61	      0xe800000000	                          call 0x4004fa6	      2655	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10	CALL_13
0x4f66	           0xfb600	                   movzx eax, byte [rax]	      2655	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10	CALL_13
0x4f69	            0x84c0	                             test al, al	      2655	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10	CALL_13
0x4f6b	            0x7420	                            je 0x4004fcd	      2655	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10	CALL_13
0x4f6d	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2656	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10
0x4f74	          0x8b5064	            mov edx, dword [rax + 0x64] 	      2656	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10
0x4f77	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2656	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10
0x4f7e	          0x8b4068	            mov eax, dword [rax + 0x68] 	      2656	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10
0x4f81	            0x39c2	                            cmp edx, eax	      2656	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10
0x4f83	            0x7408	                            je 0x4004fcd	      2656	ops.c	FUNCTION_39	IF_6	ELSE_1	IF_10
0x4f85	      0xe800000000	                          call 0x4004fca	      2657	ops.c	FUNCTION_39	IF_6	ELSE_1	CALL_14
0x4f8a	            0xeb01	                           jmp 0x4004fcd	      2657	ops.c	FUNCTION_39	IF_6	ELSE_1	CALL_14
0x4f8c	              0x90	                                     nop	      2638	ops.c	FUNCTION_39	IF_6	IF_7	IF_8
0x4f8d	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2661	ops.c	FUNCTION_39
0x4f94	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2661	ops.c	FUNCTION_39
0x4f98	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2661	ops.c	FUNCTION_39
0x4f9c	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      2661	ops.c	FUNCTION_39
0x4fa3	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	      2661	ops.c	FUNCTION_39
0x4faa	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      2662	ops.c	FUNCTION_39	CALL_15
0x4fb1	          0x4889c2	                            mov rdx, rax	      2662	ops.c	FUNCTION_39	CALL_15
0x4fb4	      0xbe00000000	                              mov esi, 0	      2662	ops.c	FUNCTION_39	CALL_15
0x4fb9	      0xbf00000000	                              mov edi, 0	      2662	ops.c	FUNCTION_39	CALL_15
0x4fbe	      0xe800000000	                          call 0x4005003	      2662	ops.c	FUNCTION_39	CALL_15
0x4fc3	    0x488b9560ffff	             mov rdx, qword [rbp - 0xa0]	      2667	ops.c	FUNCTION_39	IF_11
0x4fca	    0x488b05000000	            mov rax, qword [0x04005011] 	      2667	ops.c	FUNCTION_39	IF_11
0x4fd1	    0x488b80e01100	          mov rax, qword [rax + 0x11e0] 	      2667	ops.c	FUNCTION_39	IF_11
0x4fd8	          0x4839c2	                            cmp rdx, rax	      2667	ops.c	FUNCTION_39	IF_11
0x4fdb	     0xf85a8000000	                           jne 0x40050c9	      2667	ops.c	FUNCTION_39	IF_11
0x4fe1	    0x488b05000000	            mov rax, qword [0x04005028] 	      2668	ops.c	FUNCTION_39	IF_11	CALL_16
0x4fe8	    0x488b90e01100	          mov rdx, qword [rax + 0x11e0] 	      2668	ops.c	FUNCTION_39	IF_11	CALL_16
0x4fef	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2668	ops.c	FUNCTION_39	IF_11	CALL_16
0x4ff6	          0x4839c2	                            cmp rdx, rax	      2668	ops.c	FUNCTION_39	IF_11	CALL_16
0x4ff9	            0x741d	                            je 0x4005058	      2668	ops.c	FUNCTION_39	IF_11	CALL_16
0x4ffb	    0x488b05000000	            mov rax, qword [0x04005042] 	      2668	ops.c	FUNCTION_39	IF_11	CALL_16
0x5002	    0x488b90e01100	          mov rdx, qword [rax + 0x11e0] 	      2668	ops.c	FUNCTION_39	IF_11	CALL_16
0x5009	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      2668	ops.c	FUNCTION_39	IF_11	CALL_16
0x5010	          0x4839c2	                            cmp rdx, rax	      2668	ops.c	FUNCTION_39	IF_11	CALL_16
0x5013	           0xf9cc0	                                 setl al	      2668	ops.c	FUNCTION_39	IF_11	CALL_16
0x5016	            0xeb49	                           jmp 0x40050a1	      2668	ops.c	FUNCTION_39	IF_11	CALL_16
0x5018	    0x488b05000000	            mov rax, qword [0x0400505f] 	      2668	ops.c	FUNCTION_39	IF_11	CALL_16
0x501f	    0x8b90e8110000	          mov edx, dword [rax + 0x11e8] 	      2668	ops.c	FUNCTION_39	IF_11	CALL_16
0x5025	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      2668	ops.c	FUNCTION_39	IF_11	CALL_16
0x502b	            0x39c2	                            cmp edx, eax	      2668	ops.c	FUNCTION_39	IF_11	CALL_16
0x502d	            0x741a	                            je 0x4005089	      2668	ops.c	FUNCTION_39	IF_11	CALL_16
0x502f	    0x488b05000000	            mov rax, qword [0x04005076] 	      2668	ops.c	FUNCTION_39	IF_11	CALL_16
0x5036	    0x8b90e8110000	          mov edx, dword [rax + 0x11e8] 	      2668	ops.c	FUNCTION_39	IF_11	CALL_16
0x503c	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	      2668	ops.c	FUNCTION_39	IF_11	CALL_16
0x5042	            0x39c2	                            cmp edx, eax	      2668	ops.c	FUNCTION_39	IF_11	CALL_16
0x5044	           0xf9cc0	                                 setl al	      2668	ops.c	FUNCTION_39	IF_11	CALL_16
0x5047	            0xeb18	                           jmp 0x40050a1	      2668	ops.c	FUNCTION_39	IF_11	CALL_16
0x5049	    0x488b05000000	            mov rax, qword [0x04005090] 	      2668	ops.c	FUNCTION_39	IF_11	CALL_16
0x5050	    0x8b90ec110000	          mov edx, dword [rax + 0x11ec] 	      2668	ops.c	FUNCTION_39	IF_11	CALL_16
0x5056	    0x8b856cffffff	             mov eax, dword [rbp - 0x94]	      2668	ops.c	FUNCTION_39	IF_11	CALL_16
0x505c	            0x39c2	                            cmp edx, eax	      2668	ops.c	FUNCTION_39	IF_11	CALL_16
0x505e	           0xf9cc0	                                 setl al	      2668	ops.c	FUNCTION_39	IF_11	CALL_16
0x5061	            0x84c0	                             test al, al	      2668	ops.c	FUNCTION_39	IF_11	CALL_16
0x5063	            0x7424	                            je 0x40050c9	      2668	ops.c	FUNCTION_39	IF_11	CALL_16
0x5065	    0x488b05000000	            mov rax, qword [0x040050ac] 	      2669	ops.c	FUNCTION_39	IF_11
0x506c	    0x488b8d18ffff	             mov rcx, qword [rbp - 0xe8]	      2669	ops.c	FUNCTION_39	IF_11
0x5073	    0x488b90e81100	          mov rdx, qword [rax + 0x11e8] 	      2669	ops.c	FUNCTION_39	IF_11
0x507a	    0x488b80e01100	          mov rax, qword [rax + 0x11e0] 	      2669	ops.c	FUNCTION_39	IF_11
0x5081	        0x48894120	             mov qword [rcx + 0x20], rax	      2669	ops.c	FUNCTION_39	IF_11
0x5085	        0x48895128	             mov qword [rcx + 0x28], rdx	      2669	ops.c	FUNCTION_39	IF_11
0x5089	    0x488b05000000	            mov rax, qword [0x040050d0] 	      2674	ops.c	FUNCTION_39	IF_12
0x5090	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2674	ops.c	FUNCTION_39	IF_12
0x5094	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2674	ops.c	FUNCTION_39	IF_12
0x509b	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2674	ops.c	FUNCTION_39	IF_12
0x509f	          0x4839c2	                            cmp rdx, rax	      2674	ops.c	FUNCTION_39	IF_12
0x50a2	     0xf85e1030000	                           jne 0x40054c9	      2674	ops.c	FUNCTION_39	IF_12
0x50a8	    0x8b0500000000	            mov eax, dword [0x040050ee] 	      2674	ops.c	FUNCTION_39	IF_12
0x50ae	            0x85c0	                           test eax, eax	      2674	ops.c	FUNCTION_39	IF_12
0x50b0	     0xf85d3030000	                           jne 0x40054c9	      2674	ops.c	FUNCTION_39	IF_12
0x50b6	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2677	ops.c	FUNCTION_39	IF_13
0x50bd	          0x8b4060	            mov eax, dword [rax + 0x60] 	      2677	ops.c	FUNCTION_39	IF_13
0x50c0	            0x85c0	                           test eax, eax	      2677	ops.c	FUNCTION_39	IF_13
0x50c2	     0xf84c2030000	                            je 0x40054ca	      2677	ops.c	FUNCTION_39	IF_13
0x50c8	      0xe800000000	                          call 0x400510d	      2683	ops.c	FUNCTION_39	IF_13	CALL_17
0x50cd	    0x898534ffffff	             mov dword [rbp - 0xcc], eax	      2683	ops.c	FUNCTION_39	IF_13	CALL_17
0x50d3	    0x488b05000000	            mov rax, qword [0x0400511a] 	      2684	ops.c	FUNCTION_39	IF_13	IF_14
0x50da	    0x8b80d8110000	          mov eax, dword [rax + 0x11d8] 	      2684	ops.c	FUNCTION_39	IF_13	IF_14
0x50e0	    0x3b8528ffffff	             cmp eax, dword [rbp - 0xd8]	      2684	ops.c	FUNCTION_39	IF_13	IF_14
0x50e6	            0x7e36	                           jle 0x400515e	      2684	ops.c	FUNCTION_39	IF_13	IF_14
0x50e8	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      2684	ops.c	FUNCTION_39	IF_13	IF_14
0x50ee	    0x3b8528ffffff	             cmp eax, dword [rbp - 0xd8]	      2684	ops.c	FUNCTION_39	IF_13	IF_14
0x50f4	            0x7e28	                           jle 0x400515e	      2684	ops.c	FUNCTION_39	IF_13	IF_14
0x50f6	          0x8b5588	             mov edx, dword [rbp - 0x78]	      2686	ops.c	FUNCTION_39	IF_13	IF_14
0x50f9	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      2686	ops.c	FUNCTION_39	IF_13	IF_14
0x50ff	    0x2b8528ffffff	             sub eax, dword [rbp - 0xd8]	      2686	ops.c	FUNCTION_39	IF_13	IF_14
0x5105	             0x1d0	                            add eax, edx	      2686	ops.c	FUNCTION_39	IF_13	IF_14
0x5107	          0x894588	             mov dword [rbp - 0x78], eax	      2686	ops.c	FUNCTION_39	IF_13	IF_14
0x510a	          0x8b558c	             mov edx, dword [rbp - 0x74]	      2687	ops.c	FUNCTION_39	IF_13	IF_14
0x510d	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	      2687	ops.c	FUNCTION_39	IF_13	IF_14
0x5113	    0x2b8528ffffff	             sub eax, dword [rbp - 0xd8]	      2687	ops.c	FUNCTION_39	IF_13	IF_14
0x5119	             0x1d0	                            add eax, edx	      2687	ops.c	FUNCTION_39	IF_13	IF_14
0x511b	          0x89458c	             mov dword [rbp - 0x74], eax	      2687	ops.c	FUNCTION_39	IF_13	IF_14
0x511e	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2692	ops.c	FUNCTION_39	IF_13	IF_15
0x5125	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2692	ops.c	FUNCTION_39	IF_13	IF_15
0x5129	    0x488b05000000	            mov rax, qword [0x04005170] 	      2692	ops.c	FUNCTION_39	IF_13	IF_15
0x5130	    0x488b80e01100	          mov rax, qword [rax + 0x11e0] 	      2692	ops.c	FUNCTION_39	IF_13	IF_15
0x5137	          0x4839c2	                            cmp rdx, rax	      2692	ops.c	FUNCTION_39	IF_13	IF_15
0x513a	     0xf859c010000	                           jne 0x400531c	      2692	ops.c	FUNCTION_39	IF_13	IF_15
0x5140	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2692	ops.c	FUNCTION_39	IF_13	IF_15
0x5143	            0x85c0	                           test eax, eax	      2692	ops.c	FUNCTION_39	IF_13	IF_15
0x5145	     0xf8591010000	                           jne 0x400531c	      2692	ops.c	FUNCTION_39	IF_13	IF_15
0x514b	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2694	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x5152	            0x8b00	                    mov eax, dword [rax]	      2694	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x5154	          0x83f811	                           cmp eax, 0x11	      2694	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x5157	     0xf85a9000000	                           jne 0x4005246	      2694	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x515d	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2695	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x5164	          0x8b5028	            mov edx, dword [rax + 0x28] 	      2695	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x5167	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2697	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x516e	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      2697	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x5171	          0x8d0c02	                    lea ecx, [rdx + rax]	      2697	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x5174	    0x488b05000000	            mov rax, qword [0x040051bb] 	      2699	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x517b	    0x8b90e8110000	          mov edx, dword [rax + 0x11e8] 	      2699	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x5181	    0x488b05000000	            mov rax, qword [0x040051c8] 	      2701	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x5188	    0x8b80ec110000	          mov eax, dword [rax + 0x11ec] 	      2701	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x518e	             0x1d0	                            add eax, edx	      2701	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x5190	            0x39c1	                            cmp ecx, eax	      2695	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x5192	            0x7472	                            je 0x4005246	      2695	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x5194	    0x488b05000000	            mov rax, qword [0x040051db] 	      2706	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x519b	    0x8b90ec110000	          mov edx, dword [rax + 0x11ec] 	      2705	ops.c	FUNCTION_39	IF_13	IF_15	IF_16	CALL_18
0x51a1	    0x488b05000000	            mov rax, qword [0x040051e8] 	      2705	ops.c	FUNCTION_39	IF_13	IF_15	IF_16	CALL_18
0x51a8	    0x8b80e8110000	          mov eax, dword [rax + 0x11e8] 	      2705	ops.c	FUNCTION_39	IF_13	IF_15	IF_16	CALL_18
0x51ae	            0x89d6	                            mov esi, edx	      2705	ops.c	FUNCTION_39	IF_13	IF_15	IF_16	CALL_18
0x51b0	            0x89c7	                            mov edi, eax	      2705	ops.c	FUNCTION_39	IF_13	IF_15	IF_16	CALL_18
0x51b2	      0xe800000000	                          call 0x40051f7	      2705	ops.c	FUNCTION_39	IF_13	IF_15	IF_16	CALL_18
0x51b7	    0x898538ffffff	             mov dword [rbp - 0xc8], eax	      2705	ops.c	FUNCTION_39	IF_13	IF_15	IF_16	CALL_18
0x51bd	    0x488b05000000	            mov rax, qword [0x04005204] 	      2707	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x51c4	    0x8b90e8110000	          mov edx, dword [rax + 0x11e8] 	      2707	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x51ca	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2707	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x51d1	          0x895028	             mov dword [rax + 0x28], edx	      2707	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x51d4	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2708	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x51db	          0x8b4064	            mov eax, dword [rax + 0x64] 	      2708	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x51de	    0x8b9538ffffff	             mov edx, dword [rbp - 0xc8]	      2708	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x51e4	            0x29c2	                            sub edx, eax	      2708	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x51e6	            0x89d0	                            mov eax, edx	      2708	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x51e8	            0x4898	                                    cdqe	      2708	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x51ea	    0x48298540ffff	             sub qword [rbp - 0xc0], rax	      2708	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x51f1	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2709	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x51f8	    0x8b9538ffffff	             mov edx, dword [rbp - 0xc8]	      2709	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x51fe	          0x895064	             mov dword [rax + 0x64], edx	      2709	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x5201	      0xe9d6000000	                           jmp 0x400531c	      2704	ops.c	FUNCTION_39	IF_13	IF_15	IF_16
0x5206	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2711	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x520d	            0x8b00	                    mov eax, dword [rax]	      2711	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x520f	          0x83f812	                           cmp eax, 0x12	      2711	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x5212	     0xf85c4000000	                           jne 0x400531c	      2711	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x5218	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2712	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x521f	          0x8b5038	            mov edx, dword [rax + 0x38] 	      2712	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x5222	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2714	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x5229	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      2714	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x522c	          0x8d0c02	                    lea ecx, [rdx + rax]	      2714	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x522f	    0x488b05000000	            mov rax, qword [0x04005276] 	      2716	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x5236	    0x8b90e8110000	          mov edx, dword [rax + 0x11e8] 	      2716	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x523c	    0x488b05000000	            mov rax, qword [0x04005283] 	      2718	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x5243	    0x8b80ec110000	          mov eax, dword [rax + 0x11ec] 	      2718	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x5249	             0x1d0	                            add eax, edx	      2718	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x524b	            0x39c1	                            cmp ecx, eax	      2712	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x524d	     0xf8c89000000	                            jl 0x400531c	      2712	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x5253	    0x488b05000000	            mov rax, qword [0x0400529a] 	      2723	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x525a	    0x8b90ec110000	          mov edx, dword [rax + 0x11ec] 	      2722	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17	CALL_19
0x5260	    0x488b05000000	            mov rax, qword [0x040052a7] 	      2722	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17	CALL_19
0x5267	    0x8b80e8110000	          mov eax, dword [rax + 0x11e8] 	      2722	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17	CALL_19
0x526d	            0x89d6	                            mov esi, edx	      2722	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17	CALL_19
0x526f	            0x89c7	                            mov edi, eax	      2722	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17	CALL_19
0x5271	      0xe800000000	                          call 0x40052b6	      2722	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17	CALL_19
0x5276	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	      2722	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17	CALL_19
0x527c	    0x488b05000000	            mov rax, qword [0x040052c3] 	      2724	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x5283	    0x8b90e8110000	          mov edx, dword [rax + 0x11e8] 	      2724	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x5289	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2724	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x5290	          0x895028	             mov dword [rax + 0x28], edx	      2724	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x5293	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      2726	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x5299	            0x4898	                                    cdqe	      2726	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x529b	    0x48018540ffff	            add qword [rbp - 0xc0], rax 	      2726	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x52a2	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2727	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x52a9	          0x8b4064	            mov eax, dword [rax + 0x64] 	      2727	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x52ac	    0x8b953cffffff	             mov edx, dword [rbp - 0xc4]	      2727	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x52b2	            0x29c2	                            sub edx, eax	      2727	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x52b4	            0x89d0	                            mov eax, edx	      2727	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x52b6	            0x4898	                                    cdqe	      2727	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x52b8	    0x48298540ffff	             sub qword [rbp - 0xc0], rax	      2727	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x52bf	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2728	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x52c6	    0x8b953cffffff	             mov edx, dword [rbp - 0xc4]	      2728	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x52cc	          0x895064	             mov dword [rax + 0x64], edx	      2728	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x52cf	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2729	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x52d6	    0xc70011000000	                   mov dword [rax], 0x11	      2729	ops.c	FUNCTION_39	IF_13	IF_15	ELSE_2	IF_17
0x52dc	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2738	ops.c	FUNCTION_39	IF_13	CALL_20
0x52e3	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      2738	ops.c	FUNCTION_39	IF_13	CALL_20
0x52e7	        0x488d75b0	                   lea rsi, [rbp - 0x50]	      2738	ops.c	FUNCTION_39	IF_13	CALL_20
0x52eb	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2738	ops.c	FUNCTION_39	IF_13	CALL_20
0x52f2	      0xb901000000	                              mov ecx, 1	      2738	ops.c	FUNCTION_39	IF_13	CALL_20
0x52f7	          0x4889c7	                            mov rdi, rax	      2738	ops.c	FUNCTION_39	IF_13	CALL_20
0x52fa	      0xe8da530000	                     call sym.block_prep	      2738	ops.c	FUNCTION_39	IF_13	CALL_20
0x52ff	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2739	ops.c	FUNCTION_39	IF_13	IF_18
0x5302	            0x85c0	                           test eax, eax	      2739	ops.c	FUNCTION_39	IF_13	IF_18
0x5304	            0x740d	                            je 0x4005353	      2739	ops.c	FUNCTION_39	IF_13	IF_18
0x5306	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      2739	ops.c	FUNCTION_39	IF_13	IF_18
0x5309	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      2739	ops.c	FUNCTION_39	IF_13	IF_18
0x530f	            0x39c2	                            cmp edx, eax	      2739	ops.c	FUNCTION_39	IF_13	IF_18
0x5311	            0x7d43	                           jge 0x4005396	      2739	ops.c	FUNCTION_39	IF_13	IF_18
0x5313	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2741	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x531a	            0x8b00	                    mov eax, dword [rax]	      2741	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x531c	          0x83f812	                           cmp eax, 0x12	      2741	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x531f	            0x7526	                           jne 0x4005387	      2741	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x5321	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      2743	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x5324	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      2743	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x532a	            0x29c2	                            sub edx, eax	      2743	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x532c	            0x89d0	                            mov eax, edx	      2743	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x532e	            0x4898	                                    cdqe	      2743	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x5330	    0x48018540ffff	            add qword [rbp - 0xc0], rax 	      2743	ops.c	FUNCTION_39	IF_13	IF_18	IF_19
0x5337	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      2744	ops.c	FUNCTION_39	IF_13	IF_18	IF_19	IF_20
0x533a	            0x85c0	                           test eax, eax	      2744	ops.c	FUNCTION_39	IF_13	IF_18	IF_19	IF_20
0x533c	            0x7409	                            je 0x4005387	      2744	ops.c	FUNCTION_39	IF_13	IF_18	IF_19	IF_20
0x533e	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2745	ops.c	FUNCTION_39	IF_13	IF_18	IF_19	IF_20
0x5341	          0x83e801	                              sub eax, 1	      2745	ops.c	FUNCTION_39	IF_13	IF_18	IF_19	IF_20
0x5344	          0x8945b8	             mov dword [rbp - 0x48], eax	      2745	ops.c	FUNCTION_39	IF_13	IF_18	IF_19	IF_20
0x5347	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2747	ops.c	FUNCTION_39	IF_13	IF_18
0x534a	          0x894588	             mov dword [rbp - 0x78], eax	      2747	ops.c	FUNCTION_39	IF_13	IF_18
0x534d	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2748	ops.c	FUNCTION_39	IF_13	IF_18
0x5350	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      2748	ops.c	FUNCTION_39	IF_13	IF_18
0x5356	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2755	ops.c	FUNCTION_39	IF_13	CALL_21
0x535d	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2755	ops.c	FUNCTION_39	IF_13	CALL_21
0x5361	          0x4889c7	                            mov rdi, rax	      2755	ops.c	FUNCTION_39	IF_13	CALL_21
0x5364	      0xe800000000	                          call 0x40053a9	      2755	ops.c	FUNCTION_39	IF_13	CALL_21
0x5369	          0x4889c2	                            mov rdx, rax	      2755	ops.c	FUNCTION_39	IF_13	CALL_21
0x536c	          0x8b4588	             mov eax, dword [rbp - 0x78]	      2755	ops.c	FUNCTION_39	IF_13	CALL_21
0x536f	            0x4898	                                    cdqe	      2755	ops.c	FUNCTION_39	IF_13	CALL_21
0x5371	          0x4801d0	                            add rax, rdx	      2755	ops.c	FUNCTION_39	IF_13	CALL_21
0x5374	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      2755	ops.c	FUNCTION_39	IF_13	CALL_21
0x537b	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2756	ops.c	FUNCTION_39	IF_13	IF_21
0x5382	            0x8b00	                    mov eax, dword [rax]	      2756	ops.c	FUNCTION_39	IF_13	IF_21
0x5384	          0x83f812	                           cmp eax, 0x12	      2756	ops.c	FUNCTION_39	IF_13	IF_21
0x5387	            0x750f	                           jne 0x40053d8	      2756	ops.c	FUNCTION_39	IF_13	IF_21
0x5389	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      2757	ops.c	FUNCTION_39	IF_13	IF_21
0x538f	            0x4898	                                    cdqe	      2757	ops.c	FUNCTION_39	IF_13	IF_21
0x5391	    0x48018548ffff	            add qword [rbp - 0xb8], rax 	      2757	ops.c	FUNCTION_39	IF_13	IF_21
0x5398	    0x4883bd40ffff	               cmp qword [rbp - 0xc0], 0	      2758	ops.c	FUNCTION_39	IF_13	IF_22
0x53a0	     0xf88e4000000	                            js 0x40054ca	      2758	ops.c	FUNCTION_39	IF_13	IF_22
0x53a6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2759	ops.c	FUNCTION_39	IF_13	IF_22	CALL_22
0x53ad	          0x4889c7	                            mov rdi, rax	      2759	ops.c	FUNCTION_39	IF_13	IF_22	CALL_22
0x53b0	      0xe800000000	                          call 0x40053f5	      2759	ops.c	FUNCTION_39	IF_13	IF_22	CALL_22
0x53b5	    0x482b8540ffff	             sub rax, qword [rbp - 0xc0]	      2759	ops.c	FUNCTION_39	IF_13	IF_22	CALL_22
0x53bc	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      2759	ops.c	FUNCTION_39	IF_13	IF_22	CALL_22
0x53c3	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	      2759	ops.c	FUNCTION_39	IF_13	IF_22	CALL_22
0x53cb	     0xf8eb9000000	                           jle 0x40054ca	      2759	ops.c	FUNCTION_39	IF_13	IF_22	CALL_22
0x53d1	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      2761	ops.c	FUNCTION_39	IF_13	IF_22	CALL_23
0x53d8	            0x89c2	                            mov edx, eax	      2761	ops.c	FUNCTION_39	IF_13	IF_22	CALL_23
0x53da	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2761	ops.c	FUNCTION_39	IF_13	IF_22	CALL_23
0x53e1	            0x89d6	                            mov esi, edx	      2761	ops.c	FUNCTION_39	IF_13	IF_22	CALL_23
0x53e3	          0x4889c7	                            mov rdi, rax	      2761	ops.c	FUNCTION_39	IF_13	IF_22	CALL_23
0x53e6	      0xe800000000	                          call 0x400542b	      2761	ops.c	FUNCTION_39	IF_13	IF_22	CALL_23
0x53eb	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      2761	ops.c	FUNCTION_39	IF_13	IF_22	CALL_23
0x53f2	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	      2762	ops.c	FUNCTION_39	IF_13	IF_22	IF_23
0x53fa	     0xf848a000000	                            je 0x40054ca	      2762	ops.c	FUNCTION_39	IF_13	IF_22	IF_23
0x5400	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2766	ops.c	FUNCTION_39	IF_13	IF_22	IF_23	IF_24
0x5407	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2766	ops.c	FUNCTION_39	IF_13	IF_22	IF_23	IF_24
0x540b	        0x488d5001	                      lea rdx, [rax + 1]	      2766	ops.c	FUNCTION_39	IF_13	IF_22	IF_23	IF_24
0x540f	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2765	ops.c	FUNCTION_39	IF_13	IF_22	IF_23	IF_24	CALL_24
0x5416	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2765	ops.c	FUNCTION_39	IF_13	IF_22	IF_23	IF_24	CALL_24
0x541a	          0x4889d6	                            mov rsi, rdx	      2765	ops.c	FUNCTION_39	IF_13	IF_22	IF_23	IF_24	CALL_24
0x541d	          0x4889c7	                            mov rdi, rax	      2765	ops.c	FUNCTION_39	IF_13	IF_22	IF_23	IF_24	CALL_24
0x5420	      0xe800000000	                          call 0x4005465	      2765	ops.c	FUNCTION_39	IF_13	IF_22	IF_23	IF_24	CALL_24
0x5425	          0x83f801	                              cmp eax, 1	      2765	ops.c	FUNCTION_39	IF_13	IF_22	IF_23	IF_24	CALL_24
0x5428	            0x752f	                           jne 0x4005499	      2765	ops.c	FUNCTION_39	IF_13	IF_22	IF_23	IF_24	CALL_24
0x542a	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2767	ops.c	FUNCTION_39	IF_13	IF_22	IF_23	IF_24	CALL_25
0x5431	            0x8b00	                    mov eax, dword [rax]	      2767	ops.c	FUNCTION_39	IF_13	IF_22	IF_23	IF_24	CALL_25
0x5433	          0x83f811	                           cmp eax, 0x11	      2767	ops.c	FUNCTION_39	IF_13	IF_22	IF_23	IF_24	CALL_25
0x5436	           0xf94c0	                                 sete al	      2767	ops.c	FUNCTION_39	IF_13	IF_22	IF_23	IF_24	CALL_25
0x5439	           0xfb6d0	                           movzx edx, al	      2767	ops.c	FUNCTION_39	IF_13	IF_22	IF_23	IF_24	CALL_25
0x543c	    0x488d8d70ffff	                   lea rcx, [rbp - 0x90]	      2767	ops.c	FUNCTION_39	IF_13	IF_22	IF_23	IF_24	CALL_25
0x5443	    0x488bb558ffff	             mov rsi, qword [rbp - 0xa8]	      2767	ops.c	FUNCTION_39	IF_13	IF_22	IF_23	IF_24	CALL_25
0x544a	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      2767	ops.c	FUNCTION_39	IF_13	IF_22	IF_23	IF_24	CALL_25
0x5451	          0x4889c7	                            mov rdi, rax	      2767	ops.c	FUNCTION_39	IF_13	IF_22	IF_23	IF_24	CALL_25
0x5454	      0xe8f6b7ffff	                   call sym.block_insert	      2767	ops.c	FUNCTION_39	IF_13	IF_22	IF_23	IF_24	CALL_25
0x5459	    0x488b05000000	            mov rax, qword [0x040054a0] 	      2770	ops.c	FUNCTION_39	IF_13	IF_22	IF_23
0x5460	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      2770	ops.c	FUNCTION_39	IF_13	IF_22	IF_23
0x5467	          0x8b5228	            mov edx, dword [rdx + 0x28] 	      2770	ops.c	FUNCTION_39	IF_13	IF_22	IF_23
0x546a	          0x895040	             mov dword [rax + 0x40], edx	      2770	ops.c	FUNCTION_39	IF_13	IF_22	IF_23
0x546d	      0xe800000000	                          call 0x40054b2	      2771	ops.c	FUNCTION_39	IF_13	IF_22	IF_23	CALL_26
0x5472	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      2772	ops.c	FUNCTION_39	IF_13	IF_22	IF_23	CALL_27
0x5479	          0x4889c7	                            mov rdi, rax	      2772	ops.c	FUNCTION_39	IF_13	IF_22	IF_23	CALL_27
0x547c	      0xe800000000	                          call 0x40054c1	      2772	ops.c	FUNCTION_39	IF_13	IF_22	IF_23	CALL_27
0x5481	            0xeb07	                           jmp 0x40054ca	      2772	ops.c	FUNCTION_39	IF_13	IF_22	IF_23	CALL_27
0x5483	              0x90	                                     nop	      2606	ops.c	FUNCTION_39	IF_1	IF_2	IF_3
0x5484	            0xeb04	                           jmp 0x40054ca	      2606	ops.c	FUNCTION_39	IF_1	IF_2	IF_3
0x5486	              0x90	                                     nop	      2643	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	IF_9
0x5487	            0xeb01	                           jmp 0x40054ca	      2643	ops.c	FUNCTION_39	IF_6	IF_7	IF_8	IF_9
0x5489	              0x90	                                     nop	      2675	ops.c	FUNCTION_39	IF_12
0x548a	        0x488b45f8	                mov rax, qword [rbp - 8]	      2776	ops.c	FUNCTION_39
0x548e	    0x644833042528	                xor rax, qword fs:[0x28]	      2776	ops.c	FUNCTION_39
0x5497	            0x7405	                            je 0x40054de	      2776	ops.c	FUNCTION_39
0x5499	      0xe800000000	                          call 0x40054de	      2776	ops.c	FUNCTION_39
0x549e	              0xc9	                                   leave	      2776	ops.c	FUNCTION_39
0x549f	              0xc3	                                     ret	      2776	ops.c	FUNCTION_39
same_leader	CALL,8:FOR,4:SWITCH,0:functions,0:WHILE,1:DO,0:ELSE,1:IF,11	181
0x97e1	              0x55	                                push rbp	      4714	ops.c	FUNCTION_56
0x97e2	          0x4889e5	                            mov rbp, rsp	      4714	ops.c	FUNCTION_56
0x97e5	        0x4883ec40	                           sub rsp, 0x40	      4714	ops.c	FUNCTION_56
0x97e9	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      4714	ops.c	FUNCTION_56
0x97ed	          0x8975d4	             mov dword [rbp - 0x2c], esi	      4714	ops.c	FUNCTION_56
0x97f0	        0x488955c8	             mov qword [rbp - 0x38], rdx	      4714	ops.c	FUNCTION_56
0x97f4	          0x894dd0	             mov dword [rbp - 0x30], ecx	      4714	ops.c	FUNCTION_56
0x97f7	        0x4c8945c0	              mov qword [rbp - 0x40], r8	      4714	ops.c	FUNCTION_56
0x97fb	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      4715	ops.c	FUNCTION_56
0x9802	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      4715	ops.c	FUNCTION_56
0x9809	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      4720	ops.c	FUNCTION_56	IF_1
0x980d	            0x750f	                           jne 0x400985e	      4720	ops.c	FUNCTION_56	IF_1
0x980f	        0x837dd000	               cmp dword [rbp - 0x30], 0	      4721	ops.c	FUNCTION_56	IF_1
0x9813	           0xf94c0	                                 sete al	      4721	ops.c	FUNCTION_56	IF_1
0x9816	           0xfb6c0	                           movzx eax, al	      4721	ops.c	FUNCTION_56	IF_1
0x9819	      0xe929020000	                           jmp 0x4009a87	      4721	ops.c	FUNCTION_56	IF_1
0x981e	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      4730	ops.c	FUNCTION_56	IF_2
0x9823	     0xf84ed000000	                            je 0x4009956	      4730	ops.c	FUNCTION_56	IF_2
0x9829	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4732	ops.c	FUNCTION_56	IF_2	FOR_1
0x982d	        0x488945e8	             mov qword [rbp - 0x18], rax	      4732	ops.c	FUNCTION_56	IF_2	FOR_1
0x9831	      0xe9c6000000	                           jmp 0x400993c	      4732	ops.c	FUNCTION_56	IF_2	FOR_1
0x9836	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4734	ops.c	FUNCTION_56	IF_2	FOR_1	IF_3
0x983a	           0xfb600	                   movzx eax, byte [rax]	      4734	ops.c	FUNCTION_56	IF_2	FOR_1	IF_3
0x983d	            0x3c66	                            cmp al, 0x66	      4734	ops.c	FUNCTION_56	IF_2	FOR_1	IF_3
0x983f	            0x750f	                           jne 0x4009890	      4734	ops.c	FUNCTION_56	IF_2	FOR_1	IF_3
0x9841	        0x837dd000	               cmp dword [rbp - 0x30], 0	      4735	ops.c	FUNCTION_56	IF_2	FOR_1	IF_3
0x9845	           0xf94c0	                                 sete al	      4735	ops.c	FUNCTION_56	IF_2	FOR_1	IF_3
0x9848	           0xfb6c0	                           movzx eax, al	      4735	ops.c	FUNCTION_56	IF_2	FOR_1	IF_3
0x984b	      0xe9f7010000	                           jmp 0x4009a87	      4735	ops.c	FUNCTION_56	IF_2	FOR_1	IF_3
0x9850	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4736	ops.c	FUNCTION_56	IF_2	FOR_1	IF_4
0x9854	           0xfb600	                   movzx eax, byte [rax]	      4736	ops.c	FUNCTION_56	IF_2	FOR_1	IF_4
0x9857	            0x3c65	                            cmp al, 0x65	      4736	ops.c	FUNCTION_56	IF_2	FOR_1	IF_4
0x9859	            0x750a	                           jne 0x40098a5	      4736	ops.c	FUNCTION_56	IF_2	FOR_1	IF_4
0x985b	      0xb800000000	                              mov eax, 0	      4737	ops.c	FUNCTION_56	IF_2	FOR_1	IF_4
0x9860	      0xe9e2010000	                           jmp 0x4009a87	      4737	ops.c	FUNCTION_56	IF_2	FOR_1	IF_4
0x9865	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4738	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5
0x9869	           0xfb600	                   movzx eax, byte [rax]	      4738	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5
0x986c	            0x3c73	                            cmp al, 0x73	      4738	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5
0x986e	     0xf8583000000	                           jne 0x4009937	      4738	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5
0x9874	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4740	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_6	CALL_1
0x9878	          0x4889c7	                            mov rdi, rax	      4740	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_6	CALL_1
0x987b	      0xe800000000	                          call 0x40098c0	      4740	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_6	CALL_1
0x9880	          0x4889c2	                            mov rdx, rax	      4740	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_6	CALL_1
0x9883	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      4740	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_6	CALL_1
0x9886	            0x4898	                                    cdqe	      4740	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_6	CALL_1
0x9888	          0x4801d0	                            add rax, rdx	      4740	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_6	CALL_1
0x988b	           0xfb600	                   movzx eax, byte [rax]	      4740	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_6	CALL_1
0x988e	            0x84c0	                             test al, al	      4740	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_6	CALL_1
0x9890	            0x750a	                           jne 0x40098dc	      4740	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_6	CALL_1
0x9892	      0xb800000000	                              mov eax, 0	      4741	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_6
0x9897	      0xe9ab010000	                           jmp 0x4009a87	      4741	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_6
0x989c	      0x48837dc000	               cmp qword [rbp - 0x40], 0	      4742	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_7
0x98a1	            0x7406	                            je 0x40098e9	      4742	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_7
0x98a3	        0x837dd000	               cmp dword [rbp - 0x30], 0	      4742	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_7
0x98a7	            0x750a	                           jne 0x40098f3	      4742	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_7
0x98a9	      0xb800000000	                              mov eax, 0	      4743	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_7
0x98ae	      0xe994010000	                           jmp 0x4009a87	      4743	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	IF_7
0x98b3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      4744	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2
0x98b7	        0x488945e8	             mov qword [rbp - 0x18], rax	      4744	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2
0x98bb	            0xeb1a	                           jmp 0x4009917	      4744	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2
0x98bd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4745	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2	IF_8
0x98c1	           0xfb600	                   movzx eax, byte [rax]	      4745	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2	IF_8
0x98c4	            0x3c6d	                            cmp al, 0x6d	      4745	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2	IF_8
0x98c6	            0x750a	                           jne 0x4009912	      4745	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2	IF_8
0x98c8	      0xb801000000	                              mov eax, 1	      4746	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2	IF_8
0x98cd	      0xe975010000	                           jmp 0x4009a87	      4746	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2	IF_8
0x98d2	      0x488345e801	               add qword [rbp - 0x18], 1	      4744	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2
0x98d7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4744	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2
0x98db	           0xfb600	                   movzx eax, byte [rax]	      4744	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2
0x98de	            0x84c0	                             test al, al	      4744	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2
0x98e0	            0x740b	                            je 0x400992d	      4744	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2
0x98e2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4744	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2
0x98e6	           0xfb600	                   movzx eax, byte [rax]	      4744	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2
0x98e9	            0x3c3a	                            cmp al, 0x3a	      4744	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2
0x98eb	            0x75d0	                           jne 0x40098fd	      4744	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5	FOR_2
0x98ed	      0xb800000000	                              mov eax, 0	      4747	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5
0x98f2	      0xe950010000	                           jmp 0x4009a87	      4747	ops.c	FUNCTION_56	IF_2	FOR_1	IF_5
0x98f7	      0x488345e801	               add qword [rbp - 0x18], 1	      4732	ops.c	FUNCTION_56	IF_2	FOR_1
0x98fc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4732	ops.c	FUNCTION_56	IF_2	FOR_1
0x9900	           0xfb600	                   movzx eax, byte [rax]	      4732	ops.c	FUNCTION_56	IF_2	FOR_1
0x9903	            0x84c0	                             test al, al	      4732	ops.c	FUNCTION_56	IF_2	FOR_1
0x9905	            0x740f	                            je 0x4009956	      4732	ops.c	FUNCTION_56	IF_2	FOR_1
0x9907	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4732	ops.c	FUNCTION_56	IF_2	FOR_1
0x990b	           0xfb600	                   movzx eax, byte [rax]	      4732	ops.c	FUNCTION_56	IF_2	FOR_1
0x990e	            0x3c3a	                            cmp al, 0x3a	      4732	ops.c	FUNCTION_56	IF_2	FOR_1
0x9910	     0xf8520ffffff	                           jne 0x4009876	      4732	ops.c	FUNCTION_56	IF_2	FOR_1
0x9916	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4756	ops.c	FUNCTION_56	CALL_3
0x991a	          0x4889c7	                            mov rdi, rax	      4756	ops.c	FUNCTION_56	CALL_3
0x991d	      0xe800000000	                          call 0x4009962	      4756	ops.c	FUNCTION_56	CALL_3
0x9922	          0x4889c7	                            mov rdi, rax	      4756	ops.c	FUNCTION_56	CALL_3
0x9925	      0xe800000000	                          call 0x400996a	      4756	ops.c	FUNCTION_56	CALL_3
0x992a	        0x488945f0	             mov qword [rbp - 0x10], rax	      4756	ops.c	FUNCTION_56	CALL_3
0x992e	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4757	ops.c	FUNCTION_56	IF_9
0x9933	     0xf84f1000000	                            je 0x4009a6a	      4757	ops.c	FUNCTION_56	IF_9
0x9939	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      4759	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x9940	            0xeb04	                           jmp 0x4009986	      4759	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x9942	        0x8345e001	               add dword [rbp - 0x20], 1	      4759	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x9946	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4759	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x9949	          0x4863d0	                         movsxd rdx, eax	      4759	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x994c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4759	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x9950	          0x4801d0	                            add rax, rdx	      4759	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x9953	           0xfb600	                   movzx eax, byte [rax]	      4759	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x9956	            0x3c20	                            cmp al, 0x20	      4759	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x9958	            0x74e8	                            je 0x4009982	      4759	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x995a	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4759	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x995d	          0x4863d0	                         movsxd rdx, eax	      4759	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x9960	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4759	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x9964	          0x4801d0	                            add rax, rdx	      4759	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x9967	           0xfb600	                   movzx eax, byte [rax]	      4759	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x996a	            0x3c09	                               cmp al, 9	      4759	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x996c	            0x74d4	                            je 0x4009982	      4759	ops.c	FUNCTION_56	IF_9	FOR_3	CALL_4
0x996e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4761	ops.c	FUNCTION_56	IF_9	CALL_5
0x9972	        0x4883c001	                              add rax, 1	      4761	ops.c	FUNCTION_56	IF_9	CALL_5
0x9976	          0x4889c7	                            mov rdi, rax	      4761	ops.c	FUNCTION_56	IF_9	CALL_5
0x9979	      0xe800000000	                          call 0x40099be	      4761	ops.c	FUNCTION_56	IF_9	CALL_5
0x997e	        0x488945f8	                mov qword [rbp - 8], rax	      4761	ops.c	FUNCTION_56	IF_9	CALL_5
0x9982	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      4762	ops.c	FUNCTION_56	IF_9	FOR_4
0x9989	      0xe984000000	                           jmp 0x4009a52	      4762	ops.c	FUNCTION_56	IF_9	FOR_4
0x998e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4764	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	CALL_6
0x9991	          0x4863d0	                         movsxd rdx, eax	      4764	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	CALL_6
0x9994	        0x488b45f8	                mov rax, qword [rbp - 8]	      4764	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	CALL_6
0x9998	          0x4801d0	                            add rax, rdx	      4764	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	CALL_6
0x999b	           0xfb600	                   movzx eax, byte [rax]	      4764	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	CALL_6
0x999e	            0x3c20	                            cmp al, 0x20	      4764	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	CALL_6
0x99a0	            0x7444	                            je 0x4009a26	      4764	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	CALL_6
0x99a2	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4764	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	CALL_6
0x99a5	          0x4863d0	                         movsxd rdx, eax	      4764	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	CALL_6
0x99a8	        0x488b45f8	                mov rax, qword [rbp - 8]	      4764	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	CALL_6
0x99ac	          0x4801d0	                            add rax, rdx	      4764	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	CALL_6
0x99af	           0xfb600	                   movzx eax, byte [rax]	      4764	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	CALL_6
0x99b2	            0x3c09	                               cmp al, 9	      4764	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	CALL_6
0x99b4	            0x7430	                            je 0x4009a26	      4764	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	CALL_6
0x99b6	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4766	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x99b9	          0x8d5001	                      lea edx, [rax + 1]	      4766	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x99bc	          0x8955e0	             mov dword [rbp - 0x20], edx	      4766	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x99bf	          0x4863d0	                         movsxd rdx, eax	      4766	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x99c2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4766	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x99c6	          0x4801d0	                            add rax, rdx	      4766	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x99c9	           0xfb610	                   movzx edx, byte [rax]	      4766	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x99cc	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4766	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x99cf	          0x4863c8	                         movsxd rcx, eax	      4766	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x99d2	        0x488b45f8	                mov rax, qword [rbp - 8]	      4766	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x99d6	          0x4801c8	                            add rax, rcx	      4766	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x99d9	           0xfb600	                   movzx eax, byte [rax]	      4766	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x99dc	            0x38c2	                              cmp dl, al	      4766	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x99de	            0x742e	                            je 0x4009a4e	      4766	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x99e0	            0xeb3c	                           jmp 0x4009a5e	      4767	ops.c	FUNCTION_56	IF_9	FOR_4	IF_10	IF_11
0x99e2	        0x8345e001	               add dword [rbp - 0x20], 1	      4771	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1
0x99e6	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4770	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x99e9	          0x4863d0	                         movsxd rdx, eax	      4770	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x99ec	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4770	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x99f0	          0x4801d0	                            add rax, rdx	      4770	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x99f3	           0xfb600	                   movzx eax, byte [rax]	      4770	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x99f6	            0x3c20	                            cmp al, 0x20	      4770	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x99f8	            0x74e8	                            je 0x4009a22	      4770	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x99fa	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4770	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x99fd	          0x4863d0	                         movsxd rdx, eax	      4770	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x9a00	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4770	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x9a04	          0x4801d0	                            add rax, rdx	      4770	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x9a07	           0xfb600	                   movzx eax, byte [rax]	      4770	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x9a0a	            0x3c09	                               cmp al, 9	      4770	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x9a0c	            0x74d4	                            je 0x4009a22	      4770	ops.c	FUNCTION_56	IF_9	FOR_4	ELSE_1	WHILE_1	CALL_7
0x9a0e	        0x8345e401	               add dword [rbp - 0x1c], 1	      4762	ops.c	FUNCTION_56	IF_9	FOR_4
0x9a12	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4762	ops.c	FUNCTION_56	IF_9	FOR_4
0x9a15	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      4762	ops.c	FUNCTION_56	IF_9	FOR_4
0x9a18	     0xf8c70ffffff	                            jl 0x40099ce	      4762	ops.c	FUNCTION_56	IF_9	FOR_4
0x9a1e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4773	ops.c	FUNCTION_56	IF_9	CALL_8
0x9a22	          0x4889c7	                            mov rdi, rax	      4773	ops.c	FUNCTION_56	IF_9	CALL_8
0x9a25	      0xe800000000	                          call 0x4009a6a	      4773	ops.c	FUNCTION_56	IF_9	CALL_8
0x9a2a	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      4775	ops.c	FUNCTION_56
0x9a2d	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      4775	ops.c	FUNCTION_56
0x9a30	            0x750f	                           jne 0x4009a81	      4775	ops.c	FUNCTION_56
0x9a32	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      4775	ops.c	FUNCTION_56
0x9a35	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      4775	ops.c	FUNCTION_56
0x9a38	            0x7507	                           jne 0x4009a81	      4775	ops.c	FUNCTION_56
0x9a3a	      0xb801000000	                              mov eax, 1	      4775	ops.c	FUNCTION_56
0x9a3f	            0xeb05	                           jmp 0x4009a86	      4775	ops.c	FUNCTION_56
0x9a41	      0xb800000000	                              mov eax, 0	      4775	ops.c	FUNCTION_56
0x9a46	              0x90	                                     nop	      4775	ops.c	FUNCTION_56
0x9a47	              0xc9	                                   leave	      4776	ops.c	FUNCTION_56
0x9a48	              0xc3	                                     ret	      4776	ops.c	FUNCTION_56
ex_display	CALL,41:FOR,3:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,2:IF,15	293
0x8980	              0x55	                                push rbp	      4203	ops.c	FUNCTION_52
0x8981	          0x4889e5	                            mov rbp, rsp	      4203	ops.c	FUNCTION_52
0x8984	        0x4883ec60	                           sub rsp, 0x60	      4203	ops.c	FUNCTION_52
0x8988	        0x48897da8	             mov qword [rbp - 0x58], rdi	      4203	ops.c	FUNCTION_52
0x898c	    0x64488b042528	                mov rax, qword fs:[0x28]	      4203	ops.c	FUNCTION_52
0x8995	        0x488945f8	                mov qword [rbp - 8], rax	      4203	ops.c	FUNCTION_52
0x8999	            0x31c0	                            xor eax, eax	      4203	ops.c	FUNCTION_52
0x899b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      4210	ops.c	FUNCTION_52
0x899f	          0x488b00	                    mov rax, qword [rax]	      4210	ops.c	FUNCTION_52
0x89a2	        0x488945f0	             mov qword [rbp - 0x10], rax	      4210	ops.c	FUNCTION_52
0x89a6	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4217	ops.c	FUNCTION_52	IF_1
0x89ab	            0x7413	                            je 0x4008a00	      4217	ops.c	FUNCTION_52	IF_1
0x89ad	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4217	ops.c	FUNCTION_52	IF_1
0x89b1	           0xfb600	                   movzx eax, byte [rax]	      4217	ops.c	FUNCTION_52	IF_1
0x89b4	            0x84c0	                             test al, al	      4217	ops.c	FUNCTION_52	IF_1
0x89b6	            0x7508	                           jne 0x4008a00	      4217	ops.c	FUNCTION_52	IF_1
0x89b8	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      4218	ops.c	FUNCTION_52	IF_1
0x89c0	    0x8b0500000000	            mov eax, dword [0x04008a06] 	      4219	ops.c	FUNCTION_52	CALL_1
0x89c6	          0x8945c0	             mov dword [rbp - 0x40], eax	      4219	ops.c	FUNCTION_52	CALL_1
0x89c9	      0xbf00000000	                              mov edi, 0	      4222	ops.c	FUNCTION_52	CALL_3
0x89ce	      0xe800000000	                          call 0x4008a13	      4222	ops.c	FUNCTION_52	CALL_3
0x89d3	          0x4889c7	                            mov rdi, rax	      4222	ops.c	FUNCTION_52	CALL_3
0x89d6	      0xe800000000	                          call 0x4008a1b	      4222	ops.c	FUNCTION_52	CALL_3
0x89db	    0xc745b8ffffff	     mov dword [rbp - 0x48], 0xffffffff 	      4223	ops.c	FUNCTION_52	FOR_1
0x89e2	      0xe9e5010000	                           jmp 0x4008c0c	      4223	ops.c	FUNCTION_52	FOR_1
0x89e7	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      4225	ops.c	FUNCTION_52	FOR_1	CALL_4
0x89ea	            0x89c7	                            mov edi, eax	      4225	ops.c	FUNCTION_52	FOR_1	CALL_4
0x89ec	      0xe800000000	                          call 0x4008a31	      4225	ops.c	FUNCTION_52	FOR_1	CALL_4
0x89f1	          0x8945b4	             mov dword [rbp - 0x4c], eax	      4225	ops.c	FUNCTION_52	FOR_1	CALL_4
0x89f4	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4226	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x89f9	            0x741a	                            je 0x4008a55	      4226	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x89fb	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	      4226	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x89fe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4226	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x8a02	            0x89d6	                            mov esi, edx	      4226	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x8a04	          0x4889c7	                            mov rdi, rax	      4226	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x8a07	      0xe800000000	                          call 0x4008a4c	      4226	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x8a0c	          0x4885c0	                           test rax, rax	      4226	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x8a0f	     0xf84af010000	                            je 0x4008c04	      4226	ops.c	FUNCTION_52	FOR_1	IF_2	CALL_5
0x8a15	        0x488d45b4	                   lea rax, [rbp - 0x4c]	      4238	ops.c	FUNCTION_52	FOR_1	CALL_7
0x8a19	          0x4889c7	                            mov rdi, rax	      4238	ops.c	FUNCTION_52	FOR_1	CALL_7
0x8a1c	      0xe800000000	                          call 0x4008a61	      4238	ops.c	FUNCTION_52	FOR_1	CALL_7
0x8a21	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      4239	ops.c	FUNCTION_52	FOR_1	CALL_8
0x8a24	            0x89c7	                            mov edi, eax	      4239	ops.c	FUNCTION_52	FOR_1	CALL_8
0x8a26	      0xe800000000	                          call 0x4008a6b	      4239	ops.c	FUNCTION_52	FOR_1	CALL_8
0x8a2b	        0x837db8ff	cmp dword [rbp - 0x48], 0xffffffffffffffff	      4242	ops.c	FUNCTION_52	FOR_1	IF_3
0x8a2f	            0x7523	                           jne 0x4008a94	      4242	ops.c	FUNCTION_52	FOR_1	IF_3
0x8a31	    0x488b05000000	            mov rax, qword [0x04008a78] 	      4244	ops.c	FUNCTION_52	FOR_1	IF_3	IF_4
0x8a38	          0x4885c0	                           test rax, rax	      4244	ops.c	FUNCTION_52	FOR_1	IF_3	IF_4
0x8a3b	            0x740d	                            je 0x4008a8a	      4244	ops.c	FUNCTION_52	FOR_1	IF_3	IF_4
0x8a3d	    0x488b05000000	            mov rax, qword [0x04008a84] 	      4245	ops.c	FUNCTION_52	FOR_1	IF_3	IF_4
0x8a44	        0x488945e8	             mov qword [rbp - 0x18], rax	      4245	ops.c	FUNCTION_52	FOR_1	IF_3	IF_4
0x8a48	            0xeb1d	                           jmp 0x4008aa7	      4245	ops.c	FUNCTION_52	FOR_1	IF_3	IF_4
0x8a4a	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      4247	ops.c	FUNCTION_52	FOR_1	IF_3	ELSE_1
0x8a52	            0xeb13	                           jmp 0x4008aa7	      4247	ops.c	FUNCTION_52	FOR_1	IF_3	ELSE_1
0x8a54	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      4250	ops.c	FUNCTION_52	FOR_1	ELSE_2
0x8a57	            0x4898	                                    cdqe	      4250	ops.c	FUNCTION_52	FOR_1	ELSE_2
0x8a59	        0x48c1e005	                              shl rax, 5	      4250	ops.c	FUNCTION_52	FOR_1	ELSE_2
0x8a5d	    0x480500000000	                              add rax, 0	      4250	ops.c	FUNCTION_52	FOR_1	ELSE_2
0x8a63	        0x488945e8	             mov qword [rbp - 0x18], rax	      4250	ops.c	FUNCTION_52	FOR_1	ELSE_2
0x8a67	    0x8b0500000000	            mov eax, dword [0x04008aad] 	      4253	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x8a6d	            0x89c7	                            mov edi, eax	      4253	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x8a6f	      0xe800000000	                          call 0x4008ab4	      4253	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x8a74	            0x89c2	                            mov edx, eax	      4253	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x8a76	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      4253	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x8a79	            0x39c2	                            cmp edx, eax	      4253	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x8a7b	     0xf8446010000	                            je 0x4008c07	      4253	ops.c	FUNCTION_52	FOR_1	IF_5	CALL_9
0x8a81	    0x8b0500000000	            mov eax, dword [0x04008ac7] 	      4254	ops.c	FUNCTION_52	FOR_1	IF_5
0x8a87	          0x83f822	                           cmp eax, 0x22	      4254	ops.c	FUNCTION_52	FOR_1	IF_5
0x8a8a	            0x7511	                           jne 0x4008add	      4254	ops.c	FUNCTION_52	FOR_1	IF_5
0x8a8c	    0x488b05000000	            mov rax, qword [0x04008ad3] 	      4254	ops.c	FUNCTION_52	FOR_1	IF_5
0x8a93	        0x483945e8	            cmp qword [rbp - 0x18], rax 	      4254	ops.c	FUNCTION_52	FOR_1	IF_5
0x8a97	     0xf842a010000	                            je 0x4008c07	      4254	ops.c	FUNCTION_52	FOR_1	IF_5
0x8a9d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4259	ops.c	FUNCTION_52	FOR_1	IF_6
0x8aa1	          0x488b00	                    mov rax, qword [rax]	      4259	ops.c	FUNCTION_52	FOR_1	IF_6
0x8aa4	          0x4885c0	                           test rax, rax	      4259	ops.c	FUNCTION_52	FOR_1	IF_6
0x8aa7	     0xf8410010000	                            je 0x4008bfd	      4259	ops.c	FUNCTION_52	FOR_1	IF_6
0x8aad	      0xbf0a000000	                            mov edi, 0xa	      4261	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_10
0x8ab2	      0xe800000000	                          call 0x4008af7	      4261	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_10
0x8ab7	      0xbf22000000	                           mov edi, 0x22	      4262	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_11
0x8abc	      0xe800000000	                          call 0x4008b01	      4262	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_11
0x8ac1	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      4263	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_12
0x8ac4	            0x89c7	                            mov edi, eax	      4263	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_12
0x8ac6	      0xe800000000	                          call 0x4008b0b	      4263	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_12
0x8acb	      0xbf00000000	                              mov edi, 0	      4264	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_13
0x8ad0	      0xe800000000	                          call 0x4008b15	      4264	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_13
0x8ad5	    0x488b05000000	            mov rax, qword [0x04008b1c] 	      4266	ops.c	FUNCTION_52	FOR_1	IF_6
0x8adc	          0x83e806	                              sub eax, 6	      4266	ops.c	FUNCTION_52	FOR_1	IF_6
0x8adf	          0x8945bc	             mov dword [rbp - 0x44], eax	      4266	ops.c	FUNCTION_52	FOR_1	IF_6
0x8ae2	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      4267	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x8aea	      0xe990000000	                           jmp 0x4008bbf	      4267	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x8aef	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      4269	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7
0x8af4	            0x7413	                            je 0x4008b49	      4269	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7
0x8af6	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      4271	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7	CALL_14
0x8af9	            0x89c6	                            mov esi, eax	      4271	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7	CALL_14
0x8afb	      0xbf00000000	                              mov edi, 0	      4271	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7	CALL_14
0x8b00	      0xe800000000	                          call 0x4008b45	      4271	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7	CALL_14
0x8b05	        0x836dbc02	               sub dword [rbp - 0x44], 2	      4272	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	IF_7
0x8b09	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4274	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x8b0d	          0x488b00	                    mov rax, qword [rax]	      4274	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x8b10	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      4274	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x8b14	        0x48c1e203	                              shl rdx, 3	      4274	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x8b18	          0x4801d0	                            add rax, rdx	      4274	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x8b1b	          0x488b00	                    mov rax, qword [rax]	      4274	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x8b1e	        0x488945e0	             mov qword [rbp - 0x20], rax	      4274	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x8b22	            0xeb36	                           jmp 0x4008b9a	      4274	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x8b24	    0x488b05000000	            mov rax, qword [0x04008b6b] 	      4277	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3
0x8b2b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      4277	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3
0x8b2f	          0x4889d7	                            mov rdi, rdx	      4277	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3
0x8b32	            0xffd0	                                call rax	      4277	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3
0x8b34	          0x8945c4	             mov dword [rbp - 0x3c], eax	      4277	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3
0x8b37	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	      4279	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_16
0x8b3a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4279	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_16
0x8b3e	            0x89d6	                            mov esi, edx	      4279	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_16
0x8b40	          0x4889c7	                            mov rdi, rax	      4279	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_16
0x8b43	      0xe800000000	                          call 0x4008b88	      4279	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_16
0x8b48	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      4281	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3
0x8b4b	            0x4898	                                    cdqe	      4281	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3
0x8b4d	        0x4883e801	                              sub rax, 1	      4281	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3
0x8b51	        0x480145e0	            add qword [rbp - 0x20], rax 	      4281	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3
0x8b55	      0x488345e001	               add qword [rbp - 0x20], 1	      4274	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x8b5a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4274	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x8b5e	           0xfb600	                   movzx eax, byte [rax]	      4274	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x8b61	            0x84c0	                             test al, al	      4274	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x8b63	            0x7415	                            je 0x4008bba	      4274	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x8b65	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4274	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x8b69	          0x4889c7	                            mov rdi, rax	      4274	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x8b6c	      0xe800000000	                          call 0x4008bb1	      4274	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x8b71	          0x2945bc	             sub dword [rbp - 0x44], eax	      4274	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x8b74	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      4274	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x8b78	            0x79aa	                           jns 0x4008b64	      4274	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2	FOR_3	CALL_15
0x8b7a	      0x488345d801	               add qword [rbp - 0x28], 1	      4267	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x8b7f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4267	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x8b83	        0x488b4008	                mov rax, qword [rax + 8]	      4267	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x8b87	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      4267	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x8b8b	            0x7e0a	                           jle 0x4008bd7	      4267	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x8b8d	        0x837dbc01	               cmp dword [rbp - 0x44], 1	      4267	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x8b91	     0xf8f58ffffff	                            jg 0x4008b2f	      4267	ops.c	FUNCTION_52	FOR_1	IF_6	FOR_2
0x8b97	        0x837dbc01	               cmp dword [rbp - 0x44], 1	      4285	ops.c	FUNCTION_52	FOR_1	IF_6	IF_8
0x8b9b	            0x7e1b	                           jle 0x4008bf8	      4285	ops.c	FUNCTION_52	FOR_1	IF_6	IF_8
0x8b9d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4285	ops.c	FUNCTION_52	FOR_1	IF_6	IF_8
0x8ba1	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      4285	ops.c	FUNCTION_52	FOR_1	IF_6	IF_8
0x8ba5	            0x3c01	                               cmp al, 1	      4285	ops.c	FUNCTION_52	FOR_1	IF_6	IF_8
0x8ba7	            0x750f	                           jne 0x4008bf8	      4285	ops.c	FUNCTION_52	FOR_1	IF_6	IF_8
0x8ba9	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      4286	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_17
0x8bac	            0x89c6	                            mov esi, eax	      4286	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_17
0x8bae	      0xbf00000000	                              mov edi, 0	      4286	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_17
0x8bb3	      0xe800000000	                          call 0x4008bf8	      4286	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_17
0x8bb8	      0xe800000000	                          call 0x4008bfd	      4287	ops.c	FUNCTION_52	FOR_1	IF_6	CALL_18
0x8bbd	      0xe800000000	                          call 0x4008c02	      4289	ops.c	FUNCTION_52	FOR_1	CALL_19
0x8bc2	            0xeb04	                           jmp 0x4008c08	      4289	ops.c	FUNCTION_52	FOR_1	CALL_19
0x8bc4	              0x90	                                     nop	      4232	ops.c	FUNCTION_52	FOR_1	IF_2
0x8bc5	            0xeb01	                           jmp 0x4008c08	      4232	ops.c	FUNCTION_52	FOR_1	IF_2
0x8bc7	              0x90	                                     nop	      4255	ops.c	FUNCTION_52	FOR_1	IF_5
0x8bc8	        0x8345b801	               add dword [rbp - 0x48], 1	      4223	ops.c	FUNCTION_52	FOR_1
0x8bcc	        0x837db826	           cmp dword [rbp - 0x48], 0x26 	      4223	ops.c	FUNCTION_52	FOR_1
0x8bd0	            0x7f0e	                            jg 0x4008c20	      4223	ops.c	FUNCTION_52	FOR_1
0x8bd2	    0x8b0500000000	            mov eax, dword [0x04008c18] 	      4223	ops.c	FUNCTION_52	FOR_1
0x8bd8	            0x85c0	                           test eax, eax	      4223	ops.c	FUNCTION_52	FOR_1
0x8bda	     0xf8407feffff	                            je 0x4008a27	      4223	ops.c	FUNCTION_52	FOR_1
0x8be0	      0xe800000000	                          call 0x4008c25	      4295	ops.c	FUNCTION_52	IF_9	CALL_20
0x8be5	        0x488945e0	             mov qword [rbp - 0x20], rax	      4295	ops.c	FUNCTION_52	IF_9	CALL_20
0x8be9	      0x48837de000	               cmp qword [rbp - 0x20], 0	      4295	ops.c	FUNCTION_52	IF_9	CALL_20
0x8bee	            0x7442	                            je 0x4008c72	      4295	ops.c	FUNCTION_52	IF_9	CALL_20
0x8bf0	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4296	ops.c	FUNCTION_52	IF_9	CALL_21
0x8bf5	            0x7416	                            je 0x4008c4d	      4296	ops.c	FUNCTION_52	IF_9	CALL_21
0x8bf7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4296	ops.c	FUNCTION_52	IF_9	CALL_21
0x8bfb	      0xbe2e000000	                           mov esi, 0x2e	      4296	ops.c	FUNCTION_52	IF_9	CALL_21
0x8c00	          0x4889c7	                            mov rdi, rax	      4296	ops.c	FUNCTION_52	IF_9	CALL_21
0x8c03	      0xe800000000	                          call 0x4008c48	      4296	ops.c	FUNCTION_52	IF_9	CALL_21
0x8c08	          0x4885c0	                           test rax, rax	      4296	ops.c	FUNCTION_52	IF_9	CALL_21
0x8c0b	            0x7425	                            je 0x4008c72	      4296	ops.c	FUNCTION_52	IF_9	CALL_21
0x8c0d	    0x8b0500000000	            mov eax, dword [0x04008c53] 	      4296	ops.c	FUNCTION_52	IF_9	CALL_21
0x8c13	            0x85c0	                           test eax, eax	      4296	ops.c	FUNCTION_52	IF_9	CALL_21
0x8c15	            0x751b	                           jne 0x4008c72	      4296	ops.c	FUNCTION_52	IF_9	CALL_21
0x8c17	      0xbf00000000	                              mov edi, 0	      4298	ops.c	FUNCTION_52	IF_9	CALL_22
0x8c1c	      0xe800000000	                          call 0x4008c61	      4298	ops.c	FUNCTION_52	IF_9	CALL_22
0x8c21	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4299	ops.c	FUNCTION_52	IF_9	CALL_23
0x8c25	      0xbe01000000	                              mov esi, 1	      4299	ops.c	FUNCTION_52	IF_9	CALL_23
0x8c2a	          0x4889c7	                            mov rdi, rax	      4299	ops.c	FUNCTION_52	IF_9	CALL_23
0x8c2d	      0xe8c0010000	                        call sym.dis_msg	      4299	ops.c	FUNCTION_52	IF_9	CALL_23
0x8c32	    0x488b05000000	            mov rax, qword [0x04008c79] 	      4305	ops.c	FUNCTION_52	IF_10	CALL_24
0x8c39	          0x4885c0	                           test rax, rax	      4305	ops.c	FUNCTION_52	IF_10	CALL_24
0x8c3c	            0x7445	                            je 0x4008cc3	      4305	ops.c	FUNCTION_52	IF_10	CALL_24
0x8c3e	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4305	ops.c	FUNCTION_52	IF_10	CALL_24
0x8c43	            0x7416	                            je 0x4008c9b	      4305	ops.c	FUNCTION_52	IF_10	CALL_24
0x8c45	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4305	ops.c	FUNCTION_52	IF_10	CALL_24
0x8c49	      0xbe3a000000	                           mov esi, 0x3a	      4305	ops.c	FUNCTION_52	IF_10	CALL_24
0x8c4e	          0x4889c7	                            mov rdi, rax	      4305	ops.c	FUNCTION_52	IF_10	CALL_24
0x8c51	      0xe800000000	                          call 0x4008c96	      4305	ops.c	FUNCTION_52	IF_10	CALL_24
0x8c56	          0x4885c0	                           test rax, rax	      4305	ops.c	FUNCTION_52	IF_10	CALL_24
0x8c59	            0x7428	                            je 0x4008cc3	      4305	ops.c	FUNCTION_52	IF_10	CALL_24
0x8c5b	    0x8b0500000000	            mov eax, dword [0x04008ca1] 	      4306	ops.c	FUNCTION_52	IF_10
0x8c61	            0x85c0	                           test eax, eax	      4306	ops.c	FUNCTION_52	IF_10
0x8c63	            0x751e	                           jne 0x4008cc3	      4306	ops.c	FUNCTION_52	IF_10
0x8c65	      0xbf00000000	                              mov edi, 0	      4308	ops.c	FUNCTION_52	IF_10	CALL_25
0x8c6a	      0xe800000000	                          call 0x4008caf	      4308	ops.c	FUNCTION_52	IF_10	CALL_25
0x8c6f	    0x488b05000000	            mov rax, qword [0x04008cb6] 	      4309	ops.c	FUNCTION_52	IF_10	CALL_26
0x8c76	      0xbe00000000	                              mov esi, 0	      4309	ops.c	FUNCTION_52	IF_10	CALL_26
0x8c7b	          0x4889c7	                            mov rdi, rax	      4309	ops.c	FUNCTION_52	IF_10	CALL_26
0x8c7e	      0xe86f010000	                        call sym.dis_msg	      4309	ops.c	FUNCTION_52	IF_10	CALL_26
0x8c83	    0x488b05000000	            mov rax, qword [0x04008cca] 	      4315	ops.c	FUNCTION_52	IF_11
0x8c8a	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      4315	ops.c	FUNCTION_52	IF_11
0x8c91	          0x4885c0	                           test rax, rax	      4315	ops.c	FUNCTION_52	IF_11
0x8c94	            0x744c	                            je 0x4008d22	      4315	ops.c	FUNCTION_52	IF_11
0x8c96	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4316	ops.c	FUNCTION_52	IF_11	CALL_27
0x8c9b	            0x7416	                            je 0x4008cf3	      4316	ops.c	FUNCTION_52	IF_11	CALL_27
0x8c9d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4316	ops.c	FUNCTION_52	IF_11	CALL_27
0x8ca1	      0xbe25000000	                           mov esi, 0x25	      4316	ops.c	FUNCTION_52	IF_11	CALL_27
0x8ca6	          0x4889c7	                            mov rdi, rax	      4316	ops.c	FUNCTION_52	IF_11	CALL_27
0x8ca9	      0xe800000000	                          call 0x4008cee	      4316	ops.c	FUNCTION_52	IF_11	CALL_27
0x8cae	          0x4885c0	                           test rax, rax	      4316	ops.c	FUNCTION_52	IF_11	CALL_27
0x8cb1	            0x742f	                            je 0x4008d22	      4316	ops.c	FUNCTION_52	IF_11	CALL_27
0x8cb3	    0x8b0500000000	            mov eax, dword [0x04008cf9] 	      4316	ops.c	FUNCTION_52	IF_11	CALL_27
0x8cb9	            0x85c0	                           test eax, eax	      4316	ops.c	FUNCTION_52	IF_11	CALL_27
0x8cbb	            0x7525	                           jne 0x4008d22	      4316	ops.c	FUNCTION_52	IF_11	CALL_27
0x8cbd	      0xbf00000000	                              mov edi, 0	      4318	ops.c	FUNCTION_52	IF_11	CALL_28
0x8cc2	      0xe800000000	                          call 0x4008d07	      4318	ops.c	FUNCTION_52	IF_11	CALL_28
0x8cc7	    0x488b05000000	            mov rax, qword [0x04008d0e] 	      4319	ops.c	FUNCTION_52	IF_11	CALL_29
0x8cce	    0x488b80980000	            mov rax, qword [rax + 0x98] 	      4319	ops.c	FUNCTION_52	IF_11	CALL_29
0x8cd5	      0xbe00000000	                              mov esi, 0	      4319	ops.c	FUNCTION_52	IF_11	CALL_29
0x8cda	          0x4889c7	                            mov rdi, rax	      4319	ops.c	FUNCTION_52	IF_11	CALL_29
0x8cdd	      0xe810010000	                        call sym.dis_msg	      4319	ops.c	FUNCTION_52	IF_11	CALL_29
0x8ce2	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4325	ops.c	FUNCTION_52	IF_12	CALL_30
0x8ce7	            0x7416	                            je 0x4008d3f	      4325	ops.c	FUNCTION_52	IF_12	CALL_30
0x8ce9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4325	ops.c	FUNCTION_52	IF_12	CALL_30
0x8ced	      0xbe25000000	                           mov esi, 0x25	      4325	ops.c	FUNCTION_52	IF_12	CALL_30
0x8cf2	          0x4889c7	                            mov rdi, rax	      4325	ops.c	FUNCTION_52	IF_12	CALL_30
0x8cf5	      0xe800000000	                          call 0x4008d3a	      4325	ops.c	FUNCTION_52	IF_12	CALL_30
0x8cfa	          0x4885c0	                           test rax, rax	      4325	ops.c	FUNCTION_52	IF_12	CALL_30
0x8cfd	            0x743e	                            je 0x4008d7d	      4325	ops.c	FUNCTION_52	IF_12	CALL_30
0x8cff	    0x8b0500000000	            mov eax, dword [0x04008d45] 	      4325	ops.c	FUNCTION_52	IF_12	CALL_30
0x8d05	            0x85c0	                           test eax, eax	      4325	ops.c	FUNCTION_52	IF_12	CALL_30
0x8d07	            0x7534	                           jne 0x4008d7d	      4325	ops.c	FUNCTION_52	IF_12	CALL_30
0x8d09	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      4330	ops.c	FUNCTION_52	IF_12	IF_13	CALL_31
0x8d0d	        0x488d45c8	                   lea rax, [rbp - 0x38]	      4330	ops.c	FUNCTION_52	IF_12	IF_13	CALL_31
0x8d11	          0x4889c6	                            mov rsi, rax	      4330	ops.c	FUNCTION_52	IF_12	IF_13	CALL_31
0x8d14	      0xbf00000000	                              mov edi, 0	      4330	ops.c	FUNCTION_52	IF_12	IF_13	CALL_31
0x8d19	      0xe800000000	                          call 0x4008d5e	      4330	ops.c	FUNCTION_52	IF_12	IF_13	CALL_31
0x8d1e	            0x85c0	                           test eax, eax	      4330	ops.c	FUNCTION_52	IF_12	IF_13	CALL_31
0x8d20	            0x741b	                            je 0x4008d7d	      4330	ops.c	FUNCTION_52	IF_12	IF_13	CALL_31
0x8d22	      0xbf00000000	                              mov edi, 0	      4332	ops.c	FUNCTION_52	IF_12	IF_13	CALL_32
0x8d27	      0xe800000000	                          call 0x4008d6c	      4332	ops.c	FUNCTION_52	IF_12	IF_13	CALL_32
0x8d2c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4333	ops.c	FUNCTION_52	IF_12	IF_13	CALL_33
0x8d30	      0xbe00000000	                              mov esi, 0	      4333	ops.c	FUNCTION_52	IF_12	IF_13	CALL_33
0x8d35	          0x4889c7	                            mov rdi, rax	      4333	ops.c	FUNCTION_52	IF_12	IF_13	CALL_33
0x8d38	      0xe8b5000000	                        call sym.dis_msg	      4333	ops.c	FUNCTION_52	IF_12	IF_13	CALL_33
0x8d3d	      0xe800000000	                          call 0x4008d82	      4340	ops.c	FUNCTION_52	IF_14	CALL_34
0x8d42	          0x4885c0	                           test rax, rax	      4340	ops.c	FUNCTION_52	IF_14	CALL_34
0x8d45	            0x7443	                            je 0x4008dca	      4340	ops.c	FUNCTION_52	IF_14	CALL_34
0x8d47	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4341	ops.c	FUNCTION_52	IF_14	CALL_35
0x8d4c	            0x7416	                            je 0x4008da4	      4341	ops.c	FUNCTION_52	IF_14	CALL_35
0x8d4e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4341	ops.c	FUNCTION_52	IF_14	CALL_35
0x8d52	      0xbe2f000000	                           mov esi, 0x2f	      4341	ops.c	FUNCTION_52	IF_14	CALL_35
0x8d57	          0x4889c7	                            mov rdi, rax	      4341	ops.c	FUNCTION_52	IF_14	CALL_35
0x8d5a	      0xe800000000	                          call 0x4008d9f	      4341	ops.c	FUNCTION_52	IF_14	CALL_35
0x8d5f	          0x4885c0	                           test rax, rax	      4341	ops.c	FUNCTION_52	IF_14	CALL_35
0x8d62	            0x7426	                            je 0x4008dca	      4341	ops.c	FUNCTION_52	IF_14	CALL_35
0x8d64	    0x8b0500000000	            mov eax, dword [0x04008daa] 	      4341	ops.c	FUNCTION_52	IF_14	CALL_35
0x8d6a	            0x85c0	                           test eax, eax	      4341	ops.c	FUNCTION_52	IF_14	CALL_35
0x8d6c	            0x751c	                           jne 0x4008dca	      4341	ops.c	FUNCTION_52	IF_14	CALL_35
0x8d6e	      0xbf00000000	                              mov edi, 0	      4343	ops.c	FUNCTION_52	IF_14	CALL_36
0x8d73	      0xe800000000	                          call 0x4008db8	      4343	ops.c	FUNCTION_52	IF_14	CALL_36
0x8d78	      0xe800000000	                          call 0x4008dbd	      4344	ops.c	FUNCTION_52	IF_14	CALL_38
0x8d7d	      0xbe00000000	                              mov esi, 0	      4344	ops.c	FUNCTION_52	IF_14	CALL_38
0x8d82	          0x4889c7	                            mov rdi, rax	      4344	ops.c	FUNCTION_52	IF_14	CALL_38
0x8d85	      0xe868000000	                        call sym.dis_msg	      4344	ops.c	FUNCTION_52	IF_14	CALL_38
0x8d8a	    0x488b05000000	            mov rax, qword [0x04008dd1] 	      4351	ops.c	FUNCTION_52	IF_15	CALL_39
0x8d91	          0x4885c0	                           test rax, rax	      4351	ops.c	FUNCTION_52	IF_15	CALL_39
0x8d94	            0x7445	                            je 0x4008e1b	      4351	ops.c	FUNCTION_52	IF_15	CALL_39
0x8d96	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4351	ops.c	FUNCTION_52	IF_15	CALL_39
0x8d9b	            0x7416	                            je 0x4008df3	      4351	ops.c	FUNCTION_52	IF_15	CALL_39
0x8d9d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4351	ops.c	FUNCTION_52	IF_15	CALL_39
0x8da1	      0xbe3d000000	                           mov esi, 0x3d	      4351	ops.c	FUNCTION_52	IF_15	CALL_39
0x8da6	          0x4889c7	                            mov rdi, rax	      4351	ops.c	FUNCTION_52	IF_15	CALL_39
0x8da9	      0xe800000000	                          call 0x4008dee	      4351	ops.c	FUNCTION_52	IF_15	CALL_39
0x8dae	          0x4885c0	                           test rax, rax	      4351	ops.c	FUNCTION_52	IF_15	CALL_39
0x8db1	            0x7428	                            je 0x4008e1b	      4351	ops.c	FUNCTION_52	IF_15	CALL_39
0x8db3	    0x8b0500000000	            mov eax, dword [0x04008df9] 	      4352	ops.c	FUNCTION_52	IF_15
0x8db9	            0x85c0	                           test eax, eax	      4352	ops.c	FUNCTION_52	IF_15
0x8dbb	            0x751e	                           jne 0x4008e1b	      4352	ops.c	FUNCTION_52	IF_15
0x8dbd	      0xbf00000000	                              mov edi, 0	      4354	ops.c	FUNCTION_52	IF_15	CALL_40
0x8dc2	      0xe800000000	                          call 0x4008e07	      4354	ops.c	FUNCTION_52	IF_15	CALL_40
0x8dc7	    0x488b05000000	            mov rax, qword [0x04008e0e] 	      4355	ops.c	FUNCTION_52	IF_15	CALL_41
0x8dce	      0xbe00000000	                              mov esi, 0	      4355	ops.c	FUNCTION_52	IF_15	CALL_41
0x8dd3	          0x4889c7	                            mov rdi, rax	      4355	ops.c	FUNCTION_52	IF_15	CALL_41
0x8dd6	      0xe817000000	                        call sym.dis_msg	      4355	ops.c	FUNCTION_52	IF_15	CALL_41
0x8ddb	              0x90	                                     nop	      4358	ops.c	FUNCTION_52
0x8ddc	        0x488b45f8	                mov rax, qword [rbp - 8]	      4358	ops.c	FUNCTION_52
0x8de0	    0x644833042528	                xor rax, qword fs:[0x28]	      4358	ops.c	FUNCTION_52
0x8de9	            0x7405	                            je 0x4008e30	      4358	ops.c	FUNCTION_52
0x8deb	      0xe800000000	                          call 0x4008e30	      4358	ops.c	FUNCTION_52
0x8df0	              0xc9	                                   leave	      4358	ops.c	FUNCTION_52
0x8df1	              0xc3	                                     ret	      4358	ops.c	FUNCTION_52
clip_convert_selection	CALL,2:FOR,2:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,3:IF,6	153
0xd6c6	              0x55	                                push rbp	      6610	ops.c	FUNCTION_77
0xd6c7	          0x4889e5	                            mov rbp, rsp	      6610	ops.c	FUNCTION_77
0xd6ca	              0x53	                                push rbx	      6610	ops.c	FUNCTION_77
0xd6cb	        0x4883ec48	                           sub rsp, 0x48	      6610	ops.c	FUNCTION_77
0xd6cf	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      6610	ops.c	FUNCTION_77
0xd6d3	        0x488975c0	             mov qword [rbp - 0x40], rsi	      6610	ops.c	FUNCTION_77
0xd6d7	        0x488955b8	             mov qword [rbp - 0x48], rdx	      6610	ops.c	FUNCTION_77
0xd6db	    0x48817db80000	               cmp qword [rbp - 0x48], 0	      6617	ops.c	FUNCTION_77	IF_1
0xd6e3	            0x750a	                           jne 0x400d72f	      6617	ops.c	FUNCTION_77	IF_1
0xd6e5	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      6618	ops.c	FUNCTION_77	IF_1
0xd6ed	            0xeb08	                           jmp 0x400d737	      6618	ops.c	FUNCTION_77	IF_1
0xd6ef	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      6620	ops.c	FUNCTION_77	ELSE_1
0xd6f7	    0xc745dc010000	               mov dword [rbp - 0x24], 1	      6625	ops.c	FUNCTION_77
0xd6fe	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6628	ops.c	FUNCTION_77
0xd702	    0x48c700000000	                      mov qword [rax], 0	      6628	ops.c	FUNCTION_77
0xd709	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6629	ops.c	FUNCTION_77
0xd70d	    0x48c700000000	                      mov qword [rax], 0	      6629	ops.c	FUNCTION_77
0xd714	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6630	ops.c	FUNCTION_77	IF_2
0xd718	          0x488b00	                    mov rax, qword [rax]	      6630	ops.c	FUNCTION_77	IF_2
0xd71b	          0x4885c0	                           test rax, rax	      6630	ops.c	FUNCTION_77	IF_2
0xd71e	            0x750a	                           jne 0x400d76a	      6630	ops.c	FUNCTION_77	IF_2
0xd720	      0xb8ffffffff	                     mov eax, 0xffffffff	      6631	ops.c	FUNCTION_77	IF_2
0xd725	      0xe9b0010000	                           jmp 0x400d91a	      6631	ops.c	FUNCTION_77	IF_2
0xd72a	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      6633	ops.c	FUNCTION_77	FOR_1
0xd731	            0xeb3e	                           jmp 0x400d7b1	      6633	ops.c	FUNCTION_77	FOR_1
0xd733	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6634	ops.c	FUNCTION_77	CALL_1
0xd737	          0x488b18	                    mov rbx, qword [rax]	      6634	ops.c	FUNCTION_77	CALL_1
0xd73a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6634	ops.c	FUNCTION_77	CALL_1
0xd73e	          0x488b00	                    mov rax, qword [rax]	      6634	ops.c	FUNCTION_77	CALL_1
0xd741	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      6634	ops.c	FUNCTION_77	CALL_1
0xd744	          0x4863d2	                         movsxd rdx, edx	      6634	ops.c	FUNCTION_77	CALL_1
0xd747	        0x48c1e203	                              shl rdx, 3	      6634	ops.c	FUNCTION_77	CALL_1
0xd74b	          0x4801d0	                            add rax, rdx	      6634	ops.c	FUNCTION_77	CALL_1
0xd74e	          0x488b00	                    mov rax, qword [rax]	      6634	ops.c	FUNCTION_77	CALL_1
0xd751	          0x4889c7	                            mov rdi, rax	      6634	ops.c	FUNCTION_77	CALL_1
0xd754	      0xe800000000	                          call 0x400d799	      6634	ops.c	FUNCTION_77	CALL_1
0xd759	          0x4889c2	                            mov rdx, rax	      6634	ops.c	FUNCTION_77	CALL_1
0xd75c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6634	ops.c	FUNCTION_77	CALL_1
0xd75f	          0x4801d0	                            add rax, rdx	      6634	ops.c	FUNCTION_77	CALL_1
0xd762	        0x488d1403	                    lea rdx, [rbx + rax]	      6634	ops.c	FUNCTION_77	CALL_1
0xd766	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6634	ops.c	FUNCTION_77	CALL_1
0xd76a	          0x488910	                    mov qword [rax], rdx	      6634	ops.c	FUNCTION_77	CALL_1
0xd76d	        0x8345d401	               add dword [rbp - 0x2c], 1	      6633	ops.c	FUNCTION_77	FOR_1
0xd771	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      6633	ops.c	FUNCTION_77	FOR_1
0xd774	          0x4863d0	                         movsxd rdx, eax	      6633	ops.c	FUNCTION_77	FOR_1
0xd777	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6633	ops.c	FUNCTION_77	FOR_1
0xd77b	        0x488b4008	                mov rax, qword [rax + 8]	      6633	ops.c	FUNCTION_77	FOR_1
0xd77f	          0x4839c2	                            cmp rdx, rax	      6633	ops.c	FUNCTION_77	FOR_1
0xd782	            0x7caf	                            jl 0x400d773	      6633	ops.c	FUNCTION_77	FOR_1
0xd784	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6639	ops.c	FUNCTION_77	IF_3
0xd788	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6639	ops.c	FUNCTION_77	IF_3
0xd78c	            0x84c0	                             test al, al	      6639	ops.c	FUNCTION_77	IF_3
0xd78e	            0x7523	                           jne 0x400d7f3	      6639	ops.c	FUNCTION_77	IF_3
0xd790	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6639	ops.c	FUNCTION_77	IF_3
0xd794	          0x488b10	                    mov rdx, qword [rax]	      6639	ops.c	FUNCTION_77	IF_3
0xd797	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6639	ops.c	FUNCTION_77	IF_3
0xd79a	          0x4839c2	                            cmp rdx, rax	      6639	ops.c	FUNCTION_77	IF_3
0xd79d	            0x7214	                            jb 0x400d7f3	      6639	ops.c	FUNCTION_77	IF_3
0xd79f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6640	ops.c	FUNCTION_77	IF_3
0xd7a3	          0x488b10	                    mov rdx, qword [rax]	      6640	ops.c	FUNCTION_77	IF_3
0xd7a6	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6640	ops.c	FUNCTION_77	IF_3
0xd7a9	          0x4829c2	                            sub rdx, rax	      6640	ops.c	FUNCTION_77	IF_3
0xd7ac	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6640	ops.c	FUNCTION_77	IF_3
0xd7b0	          0x488910	                    mov qword [rax], rdx	      6640	ops.c	FUNCTION_77	IF_3
0xd7b3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6642	ops.c	FUNCTION_77	CALL_2
0xd7b7	          0x488b00	                    mov rax, qword [rax]	      6642	ops.c	FUNCTION_77	CALL_2
0xd7ba	        0x4883c001	                              add rax, 1	      6642	ops.c	FUNCTION_77	CALL_2
0xd7be	      0xbe01000000	                              mov esi, 1	      6642	ops.c	FUNCTION_77	CALL_2
0xd7c3	          0x4889c7	                            mov rdi, rax	      6642	ops.c	FUNCTION_77	CALL_2
0xd7c6	      0xe800000000	                          call 0x400d80b	      6642	ops.c	FUNCTION_77	CALL_2
0xd7cb	          0x4889c2	                            mov rdx, rax	      6642	ops.c	FUNCTION_77	CALL_2
0xd7ce	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6642	ops.c	FUNCTION_77	CALL_2
0xd7d2	          0x488910	                    mov qword [rax], rdx	      6642	ops.c	FUNCTION_77	CALL_2
0xd7d5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6642	ops.c	FUNCTION_77	CALL_2
0xd7d9	          0x488b00	                    mov rax, qword [rax]	      6642	ops.c	FUNCTION_77	CALL_2
0xd7dc	        0x488945e8	             mov qword [rbp - 0x18], rax	      6642	ops.c	FUNCTION_77	CALL_2
0xd7e0	      0x48837de800	               cmp qword [rbp - 0x18], 0	      6643	ops.c	FUNCTION_77	IF_4
0xd7e5	            0x750a	                           jne 0x400d831	      6643	ops.c	FUNCTION_77	IF_4
0xd7e7	      0xb8ffffffff	                     mov eax, 0xffffffff	      6644	ops.c	FUNCTION_77	IF_4
0xd7ec	      0xe9e9000000	                           jmp 0x400d91a	      6644	ops.c	FUNCTION_77	IF_4
0xd7f1	    0xc745d0000000	               mov dword [rbp - 0x30], 0	      6645	ops.c	FUNCTION_77
0xd7f8	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      6646	ops.c	FUNCTION_77	FOR_2
0xd7ff	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      6646	ops.c	FUNCTION_77	FOR_2
0xd806	      0xe9b4000000	                           jmp 0x400d8ff	      6646	ops.c	FUNCTION_77	FOR_2
0xd80b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6648	ops.c	FUNCTION_77	FOR_2	IF_5
0xd80f	          0x488b00	                    mov rax, qword [rax]	      6648	ops.c	FUNCTION_77	FOR_2	IF_5
0xd812	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      6648	ops.c	FUNCTION_77	FOR_2	IF_5
0xd815	          0x4863d2	                         movsxd rdx, edx	      6648	ops.c	FUNCTION_77	FOR_2	IF_5
0xd818	        0x48c1e203	                              shl rdx, 3	      6648	ops.c	FUNCTION_77	FOR_2	IF_5
0xd81c	          0x4801d0	                            add rax, rdx	      6648	ops.c	FUNCTION_77	FOR_2	IF_5
0xd81f	          0x488b10	                    mov rdx, qword [rax]	      6648	ops.c	FUNCTION_77	FOR_2	IF_5
0xd822	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      6648	ops.c	FUNCTION_77	FOR_2	IF_5
0xd825	            0x4898	                                    cdqe	      6648	ops.c	FUNCTION_77	FOR_2	IF_5
0xd827	          0x4801d0	                            add rax, rdx	      6648	ops.c	FUNCTION_77	FOR_2	IF_5
0xd82a	           0xfb600	                   movzx eax, byte [rax]	      6648	ops.c	FUNCTION_77	FOR_2	IF_5
0xd82d	            0x3c0a	                             cmp al, 0xa	      6648	ops.c	FUNCTION_77	FOR_2	IF_5
0xd82f	            0x7512	                           jne 0x400d883	      6648	ops.c	FUNCTION_77	FOR_2	IF_5
0xd831	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      6649	ops.c	FUNCTION_77	FOR_2	IF_5
0xd834	          0x4863d0	                         movsxd rdx, eax	      6649	ops.c	FUNCTION_77	FOR_2	IF_5
0xd837	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6649	ops.c	FUNCTION_77	FOR_2	IF_5
0xd83b	          0x4801d0	                            add rax, rdx	      6649	ops.c	FUNCTION_77	FOR_2	IF_5
0xd83e	          0xc60000	                       mov byte [rax], 0	      6649	ops.c	FUNCTION_77	FOR_2	IF_5
0xd841	            0xeb74	                           jmp 0x400d8f7	      6649	ops.c	FUNCTION_77	FOR_2	IF_5
0xd843	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6650	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0xd847	          0x488b00	                    mov rax, qword [rax]	      6650	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0xd84a	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      6650	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0xd84d	          0x4863d2	                         movsxd rdx, edx	      6650	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0xd850	        0x48c1e203	                              shl rdx, 3	      6650	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0xd854	          0x4801d0	                            add rax, rdx	      6650	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0xd857	          0x488b10	                    mov rdx, qword [rax]	      6650	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0xd85a	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      6650	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0xd85d	            0x4898	                                    cdqe	      6650	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0xd85f	          0x4801d0	                            add rax, rdx	      6650	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0xd862	           0xfb600	                   movzx eax, byte [rax]	      6650	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0xd865	            0x84c0	                             test al, al	      6650	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0xd867	            0x751d	                           jne 0x400d8c6	      6650	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0xd869	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      6658	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0xd86c	          0x4863d0	                         movsxd rdx, eax	      6658	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0xd86f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6658	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0xd873	          0x4801d0	                            add rax, rdx	      6658	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0xd876	          0xc6000a	                     mov byte [rax], 0xa	      6658	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0xd879	        0x8345d001	               add dword [rbp - 0x30], 1	      6660	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0xd87d	    0xc745d8ffffff	     mov dword [rbp - 0x28], 0xffffffff 	      6661	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0xd884	            0xeb31	                           jmp 0x400d8f7	      6661	ops.c	FUNCTION_77	FOR_2	ELSE_2	IF_6
0xd886	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      6664	ops.c	FUNCTION_77	FOR_2	ELSE_3
0xd889	          0x4863d0	                         movsxd rdx, eax	      6664	ops.c	FUNCTION_77	FOR_2	ELSE_3
0xd88c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6664	ops.c	FUNCTION_77	FOR_2	ELSE_3
0xd890	          0x4801c2	                            add rdx, rax	      6664	ops.c	FUNCTION_77	FOR_2	ELSE_3
0xd893	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6664	ops.c	FUNCTION_77	FOR_2	ELSE_3
0xd897	          0x488b00	                    mov rax, qword [rax]	      6664	ops.c	FUNCTION_77	FOR_2	ELSE_3
0xd89a	          0x8b4dd0	             mov ecx, dword [rbp - 0x30]	      6664	ops.c	FUNCTION_77	FOR_2	ELSE_3
0xd89d	          0x4863c9	                         movsxd rcx, ecx	      6664	ops.c	FUNCTION_77	FOR_2	ELSE_3
0xd8a0	        0x48c1e103	                              shl rcx, 3	      6664	ops.c	FUNCTION_77	FOR_2	ELSE_3
0xd8a4	          0x4801c8	                            add rax, rcx	      6664	ops.c	FUNCTION_77	FOR_2	ELSE_3
0xd8a7	          0x488b08	                    mov rcx, qword [rax]	      6664	ops.c	FUNCTION_77	FOR_2	ELSE_3
0xd8aa	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      6664	ops.c	FUNCTION_77	FOR_2	ELSE_3
0xd8ad	            0x4898	                                    cdqe	      6664	ops.c	FUNCTION_77	FOR_2	ELSE_3
0xd8af	          0x4801c8	                            add rax, rcx	      6664	ops.c	FUNCTION_77	FOR_2	ELSE_3
0xd8b2	           0xfb600	                   movzx eax, byte [rax]	      6664	ops.c	FUNCTION_77	FOR_2	ELSE_3
0xd8b5	            0x8802	                      mov byte [rdx], al	      6664	ops.c	FUNCTION_77	FOR_2	ELSE_3
0xd8b7	        0x8345d401	               add dword [rbp - 0x2c], 1	      6646	ops.c	FUNCTION_77	FOR_2
0xd8bb	        0x8345d801	               add dword [rbp - 0x28], 1	      6646	ops.c	FUNCTION_77	FOR_2
0xd8bf	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6646	ops.c	FUNCTION_77	FOR_2
0xd8c3	          0x488b00	                    mov rax, qword [rax]	      6646	ops.c	FUNCTION_77	FOR_2
0xd8c6	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	      6646	ops.c	FUNCTION_77	FOR_2
0xd8c9	     0xf8f3cffffff	                            jg 0x400d84b	      6646	ops.c	FUNCTION_77	FOR_2
0xd8cf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6666	ops.c	FUNCTION_77	ELSE_3
0xd8d3	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6666	ops.c	FUNCTION_77	ELSE_3
0xd8d7	           0xfb6c0	                           movzx eax, al	      6666	ops.c	FUNCTION_77	ELSE_3
0xd8da	        0x4883c448	                           add rsp, 0x48	      6667	ops.c	FUNCTION_77	ELSE_3
0xd8de	              0x5b	                                 pop rbx	      6667	ops.c	FUNCTION_77	ELSE_3
0xd8df	              0x5d	                                 pop rbp	      6667	ops.c	FUNCTION_77	ELSE_3
0xd8e0	              0xc3	                                     ret	      6667	ops.c	FUNCTION_77	ELSE_3
op_replace	CALL,43:FOR,2:SWITCH,0:functions,0:WHILE,2:DO,0:ELSE,7:IF,29	682
0x382e	              0x55	                                push rbp	      2107	ops.c	FUNCTION_35
0x382f	          0x4889e5	                            mov rbp, rsp	      2107	ops.c	FUNCTION_35
0x3832	              0x53	                                push rbx	      2107	ops.c	FUNCTION_35
0x3833	    0x4881ecb80000	                           sub rsp, 0xb8	      2107	ops.c	FUNCTION_35
0x383a	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	      2107	ops.c	FUNCTION_35
0x3841	    0x89b544ffffff	             mov dword [rbp - 0xbc], esi	      2107	ops.c	FUNCTION_35
0x3847	    0x64488b042528	                mov rax, qword fs:[0x28]	      2107	ops.c	FUNCTION_35
0x3850	        0x488945e8	             mov qword [rbp - 0x18], rax	      2107	ops.c	FUNCTION_35
0x3854	            0x31c0	                            xor eax, eax	      2107	ops.c	FUNCTION_35
0x3856	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	      2115	ops.c	FUNCTION_35
0x3861	    0x83bd44ffffff	cmp dword [rbp - 0xbc], 0xffffffffffffffff	      2116	ops.c	FUNCTION_35
0x3868	            0x7409	                            je 0x40038b3	      2116	ops.c	FUNCTION_35
0x386a	    0x83bd44ffffff	cmp dword [rbp - 0xbc], 0xfffffffffffffffe	      2116	ops.c	FUNCTION_35
0x3871	            0x7507	                           jne 0x40038ba	      2116	ops.c	FUNCTION_35
0x3873	      0xb801000000	                              mov eax, 1	      2116	ops.c	FUNCTION_35
0x3878	            0xeb05	                           jmp 0x40038bf	      2116	ops.c	FUNCTION_35
0x387a	      0xb800000000	                              mov eax, 0	      2116	ops.c	FUNCTION_35
0x387f	    0x89856cffffff	             mov dword [rbp - 0x94], eax	      2116	ops.c	FUNCTION_35
0x3885	    0x488b05000000	            mov rax, qword [0x040038cc] 	      2118	ops.c	FUNCTION_35	IF_1
0x388c	          0x8b4010	            mov eax, dword [rax + 0x10] 	      2118	ops.c	FUNCTION_35	IF_1
0x388f	          0x83e001	                              and eax, 1	      2118	ops.c	FUNCTION_35	IF_1
0x3892	            0x85c0	                           test eax, eax	      2118	ops.c	FUNCTION_35	IF_1
0x3894	            0x750e	                           jne 0x40038e4	      2118	ops.c	FUNCTION_35	IF_1
0x3896	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2118	ops.c	FUNCTION_35	IF_1
0x389d	          0x8b4058	            mov eax, dword [rax + 0x58] 	      2118	ops.c	FUNCTION_35	IF_1
0x38a0	            0x85c0	                           test eax, eax	      2118	ops.c	FUNCTION_35	IF_1
0x38a2	            0x740a	                            je 0x40038ee	      2118	ops.c	FUNCTION_35	IF_1
0x38a4	      0xb801000000	                              mov eax, 1	      2119	ops.c	FUNCTION_35	IF_1
0x38a9	      0xe9b50a0000	                           jmp 0x40043a3	      2119	ops.c	FUNCTION_35	IF_1
0x38ae	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      2121	ops.c	FUNCTION_35	IF_2
0x38b5	            0x741b	                            je 0x4003912	      2121	ops.c	FUNCTION_35	IF_2
0x38b7	    0x83bd44ffffff	cmp dword [rbp - 0xbc], 0xffffffffffffffff	      2122	ops.c	FUNCTION_35	IF_2
0x38be	            0x7507	                           jne 0x4003907	      2122	ops.c	FUNCTION_35	IF_2
0x38c0	      0xb80d000000	                            mov eax, 0xd	      2122	ops.c	FUNCTION_35	IF_2
0x38c5	            0xeb05	                           jmp 0x400390c	      2122	ops.c	FUNCTION_35	IF_2
0x38c7	      0xb80a000000	                            mov eax, 0xa	      2122	ops.c	FUNCTION_35	IF_2
0x38cc	    0x898544ffffff	             mov dword [rbp - 0xbc], eax	      2122	ops.c	FUNCTION_35	IF_2
0x38d2	    0x8b0500000000	            mov eax, dword [0x04003918] 	      2125	ops.c	FUNCTION_35	IF_3
0x38d8	            0x85c0	                           test eax, eax	      2125	ops.c	FUNCTION_35	IF_3
0x38da	            0x740f	                            je 0x400392b	      2125	ops.c	FUNCTION_35	IF_3
0x38dc	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2126	ops.c	FUNCTION_35	CALL_1
0x38e3	          0x4889c7	                            mov rdi, rax	      2126	ops.c	FUNCTION_35	CALL_1
0x38e6	      0xe8e3feffff	                call sym.mb_adjust_opend	      2126	ops.c	FUNCTION_35	CALL_1
0x38eb	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2130	ops.c	FUNCTION_35	IF_4
0x38f2	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2130	ops.c	FUNCTION_35	IF_4
0x38f6	        0x488d5001	                      lea rdx, [rax + 1]	      2130	ops.c	FUNCTION_35	IF_4
0x38fa	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2129	ops.c	FUNCTION_35	IF_4	CALL_2
0x3901	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2129	ops.c	FUNCTION_35	IF_4	CALL_2
0x3905	        0x4883e801	                              sub rax, 1	      2129	ops.c	FUNCTION_35	IF_4	CALL_2
0x3909	          0x4889d6	                            mov rsi, rdx	      2129	ops.c	FUNCTION_35	IF_4	CALL_2
0x390c	          0x4889c7	                            mov rdi, rax	      2129	ops.c	FUNCTION_35	IF_4	CALL_2
0x390f	      0xe800000000	                          call 0x4003954	      2129	ops.c	FUNCTION_35	IF_4	CALL_2
0x3914	            0x85c0	                           test eax, eax	      2129	ops.c	FUNCTION_35	IF_4	CALL_2
0x3916	            0x750a	                           jne 0x4003962	      2129	ops.c	FUNCTION_35	IF_4	CALL_2
0x3918	      0xb800000000	                              mov eax, 0	      2131	ops.c	FUNCTION_35	IF_4
0x391d	      0xe9410a0000	                           jmp 0x40043a3	      2131	ops.c	FUNCTION_35	IF_4
0x3922	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2136	ops.c	FUNCTION_35	IF_5
0x3929	          0x8b4060	            mov eax, dword [rax + 0x60] 	      2136	ops.c	FUNCTION_35	IF_5
0x392c	            0x85c0	                           test eax, eax	      2136	ops.c	FUNCTION_35	IF_5
0x392e	     0xf8407050000	                            je 0x4003e7b	      2136	ops.c	FUNCTION_35	IF_5
0x3934	    0x488b05000000	            mov rax, qword [0x0400397b] 	      2138	ops.c	FUNCTION_35	IF_5
0x393b	          0x8b4048	            mov eax, dword [rax + 0x48] 	      2138	ops.c	FUNCTION_35	IF_5
0x393e	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      2138	ops.c	FUNCTION_35	IF_5
0x3943	           0xf94c0	                                 sete al	      2138	ops.c	FUNCTION_35	IF_5
0x3946	           0xfb6c0	                           movzx eax, al	      2138	ops.c	FUNCTION_35	IF_5
0x3949	          0x8945c8	             mov dword [rbp - 0x38], eax	      2138	ops.c	FUNCTION_35	IF_5
0x394c	      0xe9c6040000	                           jmp 0x4003e57	      2139	ops.c	FUNCTION_35	IF_5	FOR_1
0x3951	    0x488b05000000	            mov rax, qword [0x04003998] 	      2141	ops.c	FUNCTION_35	IF_5	FOR_1
0x3958	    0xc74040000000	               mov dword [rax + 0x40], 0	      2141	ops.c	FUNCTION_35	IF_5	FOR_1
0x395f	    0x488b05000000	            mov rax, qword [0x040039a6] 	      2142	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_3
0x3966	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2142	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_3
0x396a	        0x488d75a0	                   lea rsi, [rbp - 0x60]	      2142	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_3
0x396e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2142	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_3
0x3975	      0xb901000000	                              mov ecx, 1	      2142	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_3
0x397a	          0x4889c7	                            mov rdi, rax	      2142	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_3
0x397d	      0xe8576d0000	                     call sym.block_prep	      2142	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_3
0x3982	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      2143	ops.c	FUNCTION_35	IF_5	FOR_1	IF_6
0x3985	            0x85c0	                           test eax, eax	      2143	ops.c	FUNCTION_35	IF_5	FOR_1	IF_6
0x3987	            0x7519	                           jne 0x40039e2	      2143	ops.c	FUNCTION_35	IF_5	FOR_1	IF_6
0x3989	    0x8b0500000000	            mov eax, dword [0x040039cf] 	      2143	ops.c	FUNCTION_35	IF_5	FOR_1	IF_6
0x398f	            0x85c0	                           test eax, eax	      2143	ops.c	FUNCTION_35	IF_5	FOR_1	IF_6
0x3991	     0xf8469040000	                            je 0x4003e40	      2143	ops.c	FUNCTION_35	IF_5	FOR_1	IF_6
0x3997	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2143	ops.c	FUNCTION_35	IF_5	FOR_1	IF_6
0x399a	            0x85c0	                           test eax, eax	      2143	ops.c	FUNCTION_35	IF_5	FOR_1	IF_6
0x399c	     0xf855e040000	                           jne 0x4003e40	      2143	ops.c	FUNCTION_35	IF_5	FOR_1	IF_6
0x39a2	    0x8b0500000000	            mov eax, dword [0x040039e8] 	      2153	ops.c	FUNCTION_35	IF_5	FOR_1	IF_7
0x39a8	            0x85c0	                           test eax, eax	      2153	ops.c	FUNCTION_35	IF_5	FOR_1	IF_7
0x39aa	            0x744f	                            je 0x4003a3b	      2153	ops.c	FUNCTION_35	IF_5	FOR_1	IF_7
0x39ac	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2153	ops.c	FUNCTION_35	IF_5	FOR_1	IF_7
0x39af	            0x85c0	                           test eax, eax	      2153	ops.c	FUNCTION_35	IF_5	FOR_1	IF_7
0x39b1	            0x7448	                            je 0x4003a3b	      2153	ops.c	FUNCTION_35	IF_5	FOR_1	IF_7
0x39b3	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      2153	ops.c	FUNCTION_35	IF_5	FOR_1	IF_7
0x39b7	           0xfb600	                   movzx eax, byte [rax]	      2153	ops.c	FUNCTION_35	IF_5	FOR_1	IF_7
0x39ba	            0x84c0	                             test al, al	      2153	ops.c	FUNCTION_35	IF_5	FOR_1	IF_7
0x39bc	            0x753d	                           jne 0x4003a3b	      2153	ops.c	FUNCTION_35	IF_5	FOR_1	IF_7
0x39be	    0x488b05000000	            mov rax, qword [0x04003a05] 	      2157	ops.c	FUNCTION_35	IF_5	FOR_1	IF_7
0x39c5	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2157	ops.c	FUNCTION_35	IF_5	FOR_1	IF_7
0x39c9	        0x48894590	             mov qword [rbp - 0x70], rax	      2157	ops.c	FUNCTION_35	IF_5	FOR_1	IF_7
0x39cd	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2158	ops.c	FUNCTION_35	IF_5	FOR_1	IF_7	CALL_4
0x39d4	          0x8b5064	            mov edx, dword [rax + 0x64] 	      2158	ops.c	FUNCTION_35	IF_5	FOR_1	IF_7	CALL_4
0x39d7	        0x488d4590	                   lea rax, [rbp - 0x70]	      2158	ops.c	FUNCTION_35	IF_5	FOR_1	IF_7	CALL_4
0x39db	            0x89d6	                            mov esi, edx	      2158	ops.c	FUNCTION_35	IF_5	FOR_1	IF_7	CALL_4
0x39dd	          0x4889c7	                            mov rdi, rax	      2158	ops.c	FUNCTION_35	IF_5	FOR_1	IF_7	CALL_4
0x39e0	      0xe800000000	                          call 0x4003a25	      2158	ops.c	FUNCTION_35	IF_5	FOR_1	IF_7	CALL_4
0x39e5	          0x8b55a0	             mov edx, dword [rbp - 0x60]	      2159	ops.c	FUNCTION_35	IF_5	FOR_1	IF_7
0x39e8	          0x8b459c	             mov eax, dword [rbp - 0x64]	      2159	ops.c	FUNCTION_35	IF_5	FOR_1	IF_7
0x39eb	             0x1d0	                            add eax, edx	      2159	ops.c	FUNCTION_35	IF_5	FOR_1	IF_7
0x39ed	          0x8945a0	             mov dword [rbp - 0x60], eax	      2159	ops.c	FUNCTION_35	IF_5	FOR_1	IF_7
0x39f0	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      2160	ops.c	FUNCTION_35	IF_5	FOR_1	IF_7
0x39f3	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	      2160	ops.c	FUNCTION_35	IF_5	FOR_1	IF_7
0x39f9	            0xeb1a	                           jmp 0x4003a55	      2154	ops.c	FUNCTION_35	IF_5	FOR_1	IF_7
0x39fb	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      2165	ops.c	FUNCTION_35	IF_5	FOR_1	ELSE_1
0x39fe	            0x85c0	                           test eax, eax	      2165	ops.c	FUNCTION_35	IF_5	FOR_1	ELSE_1
0x3a00	            0x7408	                            je 0x4003a4a	      2165	ops.c	FUNCTION_35	IF_5	FOR_1	ELSE_1
0x3a02	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      2165	ops.c	FUNCTION_35	IF_5	FOR_1	ELSE_1
0x3a05	          0x83e801	                              sub eax, 1	      2165	ops.c	FUNCTION_35	IF_5	FOR_1	ELSE_1
0x3a08	            0xeb05	                           jmp 0x4003a4f	      2165	ops.c	FUNCTION_35	IF_5	FOR_1	ELSE_1
0x3a0a	      0xb800000000	                              mov eax, 0	      2165	ops.c	FUNCTION_35	IF_5	FOR_1	ELSE_1
0x3a0f	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	      2165	ops.c	FUNCTION_35	IF_5	FOR_1	ELSE_1
0x3a15	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      2168	ops.c	FUNCTION_35	IF_5	FOR_1
0x3a18	            0x85c0	                           test eax, eax	      2172	ops.c	FUNCTION_35	IF_5	FOR_1
0x3a1a	            0x7416	                            je 0x4003a72	      2172	ops.c	FUNCTION_35	IF_5	FOR_1
0x3a1c	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      2170	ops.c	FUNCTION_35	IF_5	FOR_1
0x3a1f	            0x85c0	                           test eax, eax	      2170	ops.c	FUNCTION_35	IF_5	FOR_1
0x3a21	            0x750f	                           jne 0x4003a72	      2170	ops.c	FUNCTION_35	IF_5	FOR_1
0x3a23	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      2172	ops.c	FUNCTION_35	IF_5	FOR_1
0x3a26	            0x85c0	                           test eax, eax	      2172	ops.c	FUNCTION_35	IF_5	FOR_1
0x3a28	            0x7e08	                           jle 0x4003a72	      2172	ops.c	FUNCTION_35	IF_5	FOR_1
0x3a2a	          0x8b45d8	             mov eax, dword [rbp - 0x28]	      2172	ops.c	FUNCTION_35	IF_5	FOR_1
0x3a2d	          0x83e801	                              sub eax, 1	      2172	ops.c	FUNCTION_35	IF_5	FOR_1
0x3a30	            0xeb05	                           jmp 0x4003a77	      2172	ops.c	FUNCTION_35	IF_5	FOR_1
0x3a32	      0xb800000000	                              mov eax, 0	      2172	ops.c	FUNCTION_35	IF_5	FOR_1
0x3a37	     0x18558ffffff	             add dword [rbp - 0xa8], eax	      2168	ops.c	FUNCTION_35	IF_5	FOR_1
0x3a3d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2174	ops.c	FUNCTION_35	IF_5	FOR_1
0x3a44	          0x8b5068	            mov edx, dword [rax + 0x68] 	      2174	ops.c	FUNCTION_35	IF_5	FOR_1
0x3a47	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2174	ops.c	FUNCTION_35	IF_5	FOR_1
0x3a4e	          0x8b4064	            mov eax, dword [rax + 0x64] 	      2174	ops.c	FUNCTION_35	IF_5	FOR_1
0x3a51	            0x29c2	                            sub edx, eax	      2174	ops.c	FUNCTION_35	IF_5	FOR_1
0x3a53	            0x89d0	                            mov eax, edx	      2174	ops.c	FUNCTION_35	IF_5	FOR_1
0x3a55	          0x83c001	                              add eax, 1	      2174	ops.c	FUNCTION_35	IF_5	FOR_1
0x3a58	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      2174	ops.c	FUNCTION_35	IF_5	FOR_1
0x3a5e	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2175	ops.c	FUNCTION_35	IF_5	FOR_1	IF_8
0x3a61	            0x85c0	                           test eax, eax	      2175	ops.c	FUNCTION_35	IF_5	FOR_1	IF_8
0x3a63	            0x742b	                            je 0x4003ad0	      2175	ops.c	FUNCTION_35	IF_5	FOR_1	IF_8
0x3a65	    0x8b0500000000	            mov eax, dword [0x04003aab] 	      2175	ops.c	FUNCTION_35	IF_5	FOR_1	IF_8
0x3a6b	            0x85c0	                           test eax, eax	      2175	ops.c	FUNCTION_35	IF_5	FOR_1	IF_8
0x3a6d	            0x7407	                            je 0x4003ab6	      2175	ops.c	FUNCTION_35	IF_5	FOR_1	IF_8
0x3a6f	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      2175	ops.c	FUNCTION_35	IF_5	FOR_1	IF_8
0x3a72	            0x85c0	                           test eax, eax	      2175	ops.c	FUNCTION_35	IF_5	FOR_1	IF_8
0x3a74	            0x741a	                            je 0x4003ad0	      2175	ops.c	FUNCTION_35	IF_5	FOR_1	IF_8
0x3a76	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2176	ops.c	FUNCTION_35	IF_5	FOR_1	IF_8
0x3a7d	          0x8b5068	            mov edx, dword [rax + 0x68] 	      2176	ops.c	FUNCTION_35	IF_5	FOR_1	IF_8
0x3a80	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      2176	ops.c	FUNCTION_35	IF_5	FOR_1	IF_8
0x3a83	            0x29c2	                            sub edx, eax	      2176	ops.c	FUNCTION_35	IF_5	FOR_1	IF_8
0x3a85	            0x89d0	                            mov eax, edx	      2176	ops.c	FUNCTION_35	IF_5	FOR_1	IF_8
0x3a87	          0x83c001	                              add eax, 1	      2176	ops.c	FUNCTION_35	IF_5	FOR_1	IF_8
0x3a8a	    0x29855cffffff	             sub dword [rbp - 0xa4], eax	      2176	ops.c	FUNCTION_35	IF_5	FOR_1	IF_8
0x3a90	    0x488b05000000	            mov rax, qword [0x04003ad7] 	      2181	ops.c	FUNCTION_35	IF_5	FOR_1	IF_9
0x3a97	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2181	ops.c	FUNCTION_35	IF_5	FOR_1	IF_9
0x3a9d	            0x89d7	                            mov edi, edx	      2181	ops.c	FUNCTION_35	IF_5	FOR_1	IF_9
0x3a9f	            0xffd0	                                call rax	      2181	ops.c	FUNCTION_35	IF_5	FOR_1	IF_9
0x3aa1	          0x83f801	                              cmp eax, 1	      2181	ops.c	FUNCTION_35	IF_5	FOR_1	IF_9
0x3aa4	            0x7e39	                           jle 0x4003b1f	      2181	ops.c	FUNCTION_35	IF_5	FOR_1	IF_9
0x3aa6	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2183	ops.c	FUNCTION_35	IF_5	FOR_1	IF_9	IF_10
0x3aac	          0x83e001	                              and eax, 1	      2183	ops.c	FUNCTION_35	IF_5	FOR_1	IF_9	IF_10
0x3aaf	            0x85c0	                           test eax, eax	      2183	ops.c	FUNCTION_35	IF_5	FOR_1	IF_9	IF_10
0x3ab1	            0x7417	                            je 0x4003b0a	      2183	ops.c	FUNCTION_35	IF_5	FOR_1	IF_9	IF_10
0x3ab3	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2183	ops.c	FUNCTION_35	IF_5	FOR_1	IF_9	IF_10
0x3ab6	            0x85c0	                           test eax, eax	      2183	ops.c	FUNCTION_35	IF_5	FOR_1	IF_9	IF_10
0x3ab8	            0x7510	                           jne 0x4003b0a	      2183	ops.c	FUNCTION_35	IF_5	FOR_1	IF_9	IF_10
0x3aba	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      2185	ops.c	FUNCTION_35	IF_5	FOR_1	IF_9	IF_10
0x3abd	          0x83c001	                              add eax, 1	      2185	ops.c	FUNCTION_35	IF_5	FOR_1	IF_9	IF_10
0x3ac0	          0x8945a4	             mov dword [rbp - 0x5c], eax	      2185	ops.c	FUNCTION_35	IF_5	FOR_1	IF_9	IF_10
0x3ac3	    0x838558ffffff	               add dword [rbp - 0xa8], 1	      2186	ops.c	FUNCTION_35	IF_5	FOR_1	IF_9	IF_10
0x3aca	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2188	ops.c	FUNCTION_35	IF_5	FOR_1	IF_9
0x3ad0	            0x89c2	                            mov edx, eax	      2188	ops.c	FUNCTION_35	IF_5	FOR_1	IF_9
0x3ad2	          0xc1ea1f	                           shr edx, 0x1f	      2188	ops.c	FUNCTION_35	IF_5	FOR_1	IF_9
0x3ad5	             0x1d0	                            add eax, edx	      2188	ops.c	FUNCTION_35	IF_5	FOR_1	IF_9
0x3ad7	            0xd1f8	                              sar eax, 1	      2188	ops.c	FUNCTION_35	IF_5	FOR_1	IF_9
0x3ad9	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      2188	ops.c	FUNCTION_35	IF_5	FOR_1	IF_9
0x3adf	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2192	ops.c	FUNCTION_35	IF_5	FOR_1
0x3ae5	    0x898560ffffff	             mov dword [rbp - 0xa0], eax	      2192	ops.c	FUNCTION_35	IF_5	FOR_1
0x3aeb	    0x488b05000000	            mov rax, qword [0x04003b32] 	      2193	ops.c	FUNCTION_35	IF_5	FOR_1
0x3af2	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2193	ops.c	FUNCTION_35	IF_5	FOR_1
0x3af8	            0x89d7	                            mov edi, edx	      2193	ops.c	FUNCTION_35	IF_5	FOR_1
0x3afa	            0xffd0	                                call rax	      2193	ops.c	FUNCTION_35	IF_5	FOR_1
0x3afc	            0x89c2	                            mov edx, eax	      2193	ops.c	FUNCTION_35	IF_5	FOR_1
0x3afe	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2193	ops.c	FUNCTION_35	IF_5	FOR_1
0x3b04	           0xfafc2	                           imul eax, edx	      2193	ops.c	FUNCTION_35	IF_5	FOR_1
0x3b07	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	      2193	ops.c	FUNCTION_35	IF_5	FOR_1
0x3b0d	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      2196	ops.c	FUNCTION_35	IF_5	FOR_1
0x3b10	    0x8b955cffffff	             mov edx, dword [rbp - 0xa4]	      2196	ops.c	FUNCTION_35	IF_5	FOR_1
0x3b16	            0x29c2	                            sub edx, eax	      2196	ops.c	FUNCTION_35	IF_5	FOR_1
0x3b18	            0x89d0	                            mov eax, edx	      2196	ops.c	FUNCTION_35	IF_5	FOR_1
0x3b1a	     0x18558ffffff	             add dword [rbp - 0xa8], eax	      2196	ops.c	FUNCTION_35	IF_5	FOR_1
0x3b20	      0xe800000000	                          call 0x4003b65	      2198	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_5
0x3b25	    0x48898578ffff	             mov qword [rbp - 0x88], rax	      2198	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_5
0x3b2c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2199	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_6
0x3b33	          0x4889c7	                            mov rdi, rax	      2199	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_6
0x3b36	      0xe800000000	                          call 0x4003b7b	      2199	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_6
0x3b3b	        0x48894580	             mov qword [rbp - 0x80], rax	      2199	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_6
0x3b3f	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2200	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_7
0x3b43	            0x89c2	                            mov edx, eax	      2200	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_7
0x3b45	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      2200	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_7
0x3b4b	             0x1d0	                            add eax, edx	      2200	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_7
0x3b4d	          0x83c001	                              add eax, 1	      2200	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_7
0x3b50	            0x89c7	                            mov edi, eax	      2200	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_7
0x3b52	      0xe800000000	                          call 0x4003b97	      2200	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_7
0x3b57	        0x48894588	             mov qword [rbp - 0x78], rax	      2200	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_7
0x3b5b	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      2201	ops.c	FUNCTION_35	IF_5	FOR_1	IF_11
0x3b60	     0xf849d020000	                            je 0x4003e43	      2201	ops.c	FUNCTION_35	IF_5	FOR_1	IF_11
0x3b66	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      2203	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_8
0x3b6c	          0x4863d0	                         movsxd rdx, eax	      2203	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_8
0x3b6f	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2203	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_8
0x3b73	          0x4801d0	                            add rax, rdx	      2203	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_8
0x3b76	        0x488d5001	                      lea rdx, [rax + 1]	      2203	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_8
0x3b7a	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2203	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_8
0x3b7e	      0xbe00000000	                              mov esi, 0	      2203	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_8
0x3b83	          0x4889c7	                            mov rdi, rax	      2203	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_8
0x3b86	      0xe800000000	                          call 0x4003bcb	      2203	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_8
0x3b8b	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2205	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_9
0x3b8e	          0x4863d0	                         movsxd rdx, eax	      2205	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_9
0x3b91	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	      2205	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_9
0x3b98	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2205	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_9
0x3b9c	          0x4889ce	                            mov rsi, rcx	      2205	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_9
0x3b9f	          0x4889c7	                            mov rdi, rax	      2205	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_9
0x3ba2	      0xe800000000	                          call 0x4003be7	      2205	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_9
0x3ba7	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      2206	ops.c	FUNCTION_35	IF_5	FOR_1
0x3baa	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      2206	ops.c	FUNCTION_35	IF_5	FOR_1
0x3bad	             0x1d0	                            add eax, edx	      2206	ops.c	FUNCTION_35	IF_5	FOR_1
0x3baf	            0x4898	                                    cdqe	      2206	ops.c	FUNCTION_35	IF_5	FOR_1
0x3bb1	    0x48018578ffff	            add qword [rbp - 0x88], rax 	      2206	ops.c	FUNCTION_35	IF_5	FOR_1
0x3bb8	          0x8b45a0	             mov eax, dword [rbp - 0x60]	      2208	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_10
0x3bbb	            0x4898	                                    cdqe	      2208	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_10
0x3bbd	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      2208	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_10
0x3bc0	          0x4863ca	                         movsxd rcx, edx	      2208	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_10
0x3bc3	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      2208	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_10
0x3bc7	          0x4801d1	                            add rcx, rdx	      2208	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_10
0x3bca	          0x4889c2	                            mov rdx, rax	      2208	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_10
0x3bcd	      0xbe20000000	                           mov esi, 0x20	      2208	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_10
0x3bd2	          0x4889cf	                            mov rdi, rcx	      2208	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_10
0x3bd5	      0xe800000000	                          call 0x4003c1a	      2208	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_10
0x3bda	    0x83bd6cffffff	               cmp dword [rbp - 0x94], 0	      2211	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12
0x3be1	            0x751a	                           jne 0x4003c3d	      2211	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12
0x3be3	    0x83bd44ffffff	            cmp dword [rbp - 0xbc], 0xd 	      2211	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12
0x3bea	     0xf8412010000	                            je 0x4003d42	      2211	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12
0x3bf0	    0x83bd44ffffff	            cmp dword [rbp - 0xbc], 0xa 	      2211	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12
0x3bf7	     0xf8405010000	                            je 0x4003d42	      2211	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12
0x3bfd	    0x8b0500000000	            mov eax, dword [0x04003c43] 	      2214	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_13
0x3c03	            0x85c0	                           test eax, eax	      2214	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_13
0x3c05	            0x7450	                            je 0x4003c97	      2214	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_13
0x3c07	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2216	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_13	CALL_11
0x3c0b	          0x4889c7	                            mov rdi, rax	      2216	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_13	CALL_11
0x3c0e	      0xe800000000	                          call 0x4003c53	      2216	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_13	CALL_11
0x3c13	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	      2216	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_13	CALL_11
0x3c19	            0xeb2a	                           jmp 0x4003c85	      2217	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_13	WHILE_1
0x3c1b	    0x488b05000000	            mov rax, qword [0x04003c62] 	      2218	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_13	WHILE_1
0x3c22	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	      2218	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_13	WHILE_1
0x3c28	          0x4863ca	                         movsxd rcx, edx	      2218	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_13	WHILE_1
0x3c2b	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      2218	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_13	WHILE_1
0x3c2f	          0x4801d1	                            add rcx, rdx	      2218	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_13	WHILE_1
0x3c32	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2218	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_13	WHILE_1
0x3c38	          0x4889ce	                            mov rsi, rcx	      2218	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_13	WHILE_1
0x3c3b	            0x89d7	                            mov edi, edx	      2218	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_13	WHILE_1
0x3c3d	            0xffd0	                                call rax	      2218	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_13	WHILE_1
0x3c3f	     0x18558ffffff	             add dword [rbp - 0xa8], eax	      2218	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_13	WHILE_1
0x3c45	    0x83ad60ffffff	               sub dword [rbp - 0xa0], 1	      2217	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_13	WHILE_1
0x3c4c	    0x83bd60ffffff	               cmp dword [rbp - 0xa0], 0	      2217	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_13	WHILE_1
0x3c53	            0x79c6	                           jns 0x4003c5b	      2217	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_13	WHILE_1
0x3c55	            0xeb33	                           jmp 0x4003cca	      2217	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_13	WHILE_1
0x3c57	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	      2222	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	CALL_13
0x3c5d	          0x4863d8	                         movsxd rbx, eax	      2222	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	CALL_13
0x3c60	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2222	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	CALL_13
0x3c64	          0x4889c7	                            mov rdi, rax	      2222	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	CALL_13
0x3c67	      0xe800000000	                          call 0x4003cac	      2222	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	CALL_13
0x3c6c	          0x4889c2	                            mov rdx, rax	      2222	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	CALL_13
0x3c6f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2222	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	CALL_13
0x3c73	        0x488d0c02	                    lea rcx, [rdx + rax]	      2222	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	CALL_13
0x3c77	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      2222	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	CALL_13
0x3c7d	          0x4889da	                            mov rdx, rbx	      2222	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	CALL_13
0x3c80	            0x89c6	                            mov esi, eax	      2222	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	CALL_13
0x3c82	          0x4889cf	                            mov rdi, rcx	      2222	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	CALL_13
0x3c85	      0xe800000000	                          call 0x4003cca	      2222	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	CALL_13
0x3c8a	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      2223	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_14
0x3c8d	            0x85c0	                           test eax, eax	      2223	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_14
0x3c8f	     0xf85d3000000	                           jne 0x4003da8	      2223	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_14
0x3c95	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	      2226	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_14	CALL_15
0x3c98	          0x4863d8	                         movsxd rbx, eax	      2226	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_14	CALL_15
0x3c9b	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2226	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_14	CALL_15
0x3c9f	          0x4889c7	                            mov rdi, rax	      2226	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_14	CALL_15
0x3ca2	      0xe800000000	                          call 0x4003ce7	      2226	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_14	CALL_15
0x3ca7	          0x4889c2	                            mov rdx, rax	      2226	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_14	CALL_15
0x3caa	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2226	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_14	CALL_15
0x3cae	          0x4801d0	                            add rax, rdx	      2226	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_14	CALL_15
0x3cb1	          0x4889da	                            mov rdx, rbx	      2226	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_14	CALL_15
0x3cb4	      0xbe20000000	                           mov esi, 0x20	      2226	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_14	CALL_15
0x3cb9	          0x4889c7	                            mov rdi, rax	      2226	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_14	CALL_15
0x3cbc	      0xe800000000	                          call 0x4003d01	      2226	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_14	CALL_15
0x3cc1	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2228	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_14	CALL_17
0x3cc8	          0x4889c7	                            mov rdi, rax	      2228	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_14	CALL_17
0x3ccb	      0xe800000000	                          call 0x4003d10	      2228	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_14	CALL_17
0x3cd0	        0x488d5801	                      lea rbx, [rax + 1]	      2228	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_14	CALL_17
0x3cd4	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2228	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_14	CALL_17
0x3cd8	          0x4889c7	                            mov rdi, rax	      2228	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_14	CALL_17
0x3cdb	      0xe800000000	                          call 0x4003d20	      2228	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_14	CALL_17
0x3ce0	          0x4889c2	                            mov rdx, rax	      2228	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_14	CALL_17
0x3ce3	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2228	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_14	CALL_17
0x3ce7	        0x488d0c02	                    lea rcx, [rdx + rax]	      2228	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_14	CALL_17
0x3ceb	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2228	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_14	CALL_17
0x3cf2	          0x4889da	                            mov rdx, rbx	      2228	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_14	CALL_17
0x3cf5	          0x4889c6	                            mov rsi, rax	      2228	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_14	CALL_17
0x3cf8	          0x4889cf	                            mov rdi, rcx	      2228	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_14	CALL_17
0x3cfb	      0xe800000000	                          call 0x4003d40	      2228	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_14	CALL_17
0x3d00	            0xeb66	                           jmp 0x4003da8	      2223	ops.c	FUNCTION_35	IF_5	FOR_1	IF_12	IF_14
0x3d02	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2234	ops.c	FUNCTION_35	IF_5	FOR_1	ELSE_3	CALL_18
0x3d06	            0x89c2	                            mov edx, eax	      2234	ops.c	FUNCTION_35	IF_5	FOR_1	ELSE_3	CALL_18
0x3d08	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      2234	ops.c	FUNCTION_35	IF_5	FOR_1	ELSE_3	CALL_18
0x3d0e	          0x8d1c02	                    lea ebx, [rdx + rax]	      2234	ops.c	FUNCTION_35	IF_5	FOR_1	ELSE_3	CALL_18
0x3d11	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2235	ops.c	FUNCTION_35	IF_5	FOR_1	ELSE_3	CALL_19
0x3d15	          0x4889c7	                            mov rdi, rax	      2235	ops.c	FUNCTION_35	IF_5	FOR_1	ELSE_3	CALL_19
0x3d18	      0xe800000000	                          call 0x4003d5d	      2235	ops.c	FUNCTION_35	IF_5	FOR_1	ELSE_3	CALL_19
0x3d1d	            0x29c3	                            sub ebx, eax	      2234	ops.c	FUNCTION_35	IF_5	FOR_1	ELSE_3	CALL_18
0x3d1f	            0x89d8	                            mov eax, ebx	      2234	ops.c	FUNCTION_35	IF_5	FOR_1	ELSE_3	CALL_18
0x3d21	          0x83c001	                              add eax, 1	      2234	ops.c	FUNCTION_35	IF_5	FOR_1	ELSE_3	CALL_18
0x3d24	            0x89c7	                            mov edi, eax	      2234	ops.c	FUNCTION_35	IF_5	FOR_1	ELSE_3	CALL_18
0x3d26	      0xe800000000	                          call 0x4003d6b	      2234	ops.c	FUNCTION_35	IF_5	FOR_1	ELSE_3	CALL_18
0x3d2b	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      2234	ops.c	FUNCTION_35	IF_5	FOR_1	ELSE_3	CALL_18
0x3d32	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 0	      2236	ops.c	FUNCTION_35	IF_5	FOR_1	ELSE_3	IF_15
0x3d3a	            0x742c	                            je 0x4003da8	      2236	ops.c	FUNCTION_35	IF_5	FOR_1	ELSE_3	IF_15
0x3d3c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	      2237	ops.c	FUNCTION_35	IF_5	FOR_1	ELSE_3	CALL_20
0x3d43	          0x4889c7	                            mov rdi, rax	      2237	ops.c	FUNCTION_35	IF_5	FOR_1	ELSE_3	CALL_20
0x3d46	      0xe800000000	                          call 0x4003d8b	      2237	ops.c	FUNCTION_35	IF_5	FOR_1	ELSE_3	CALL_20
0x3d4b	        0x488d5001	                      lea rdx, [rax + 1]	      2237	ops.c	FUNCTION_35	IF_5	FOR_1	ELSE_3	CALL_20
0x3d4f	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	      2237	ops.c	FUNCTION_35	IF_5	FOR_1	ELSE_3	CALL_20
0x3d56	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2237	ops.c	FUNCTION_35	IF_5	FOR_1	ELSE_3	CALL_20
0x3d5d	          0x4889ce	                            mov rsi, rcx	      2237	ops.c	FUNCTION_35	IF_5	FOR_1	ELSE_3	CALL_20
0x3d60	          0x4889c7	                            mov rdi, rax	      2237	ops.c	FUNCTION_35	IF_5	FOR_1	ELSE_3	CALL_20
0x3d63	      0xe800000000	                          call 0x4003da8	      2237	ops.c	FUNCTION_35	IF_5	FOR_1	ELSE_3	CALL_20
0x3d68	    0x488b05000000	            mov rax, qword [0x04003daf] 	      2240	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_21
0x3d6f	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2240	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_21
0x3d73	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      2240	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_21
0x3d77	      0xba00000000	                              mov edx, 0	      2240	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_21
0x3d7c	          0x4889ce	                            mov rsi, rcx	      2240	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_21
0x3d7f	          0x4889c7	                            mov rdi, rax	      2240	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_21
0x3d82	      0xe800000000	                          call 0x4003dc7	      2240	ops.c	FUNCTION_35	IF_5	FOR_1	CALL_21
0x3d87	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 0	      2241	ops.c	FUNCTION_35	IF_5	FOR_1	IF_16
0x3d8f	            0x7473	                            je 0x4003e44	      2241	ops.c	FUNCTION_35	IF_5	FOR_1	IF_16
0x3d91	    0x488b15000000	            mov rdx, qword [0x04003dd8] 	      2243	ops.c	FUNCTION_35	IF_5	FOR_1	IF_16	CALL_22
0x3d98	        0x488b4238	            mov rax, qword [rdx + 0x38] 	      2243	ops.c	FUNCTION_35	IF_5	FOR_1	IF_16	CALL_22
0x3d9c	        0x488d4801	                      lea rcx, [rax + 1]	      2243	ops.c	FUNCTION_35	IF_5	FOR_1	IF_16	CALL_22
0x3da0	        0x48894a38	             mov qword [rdx + 0x38], rcx	      2243	ops.c	FUNCTION_35	IF_5	FOR_1	IF_16	CALL_22
0x3da4	    0x488bb570ffff	             mov rsi, qword [rbp - 0x90]	      2243	ops.c	FUNCTION_35	IF_5	FOR_1	IF_16	CALL_22
0x3dab	      0xb900000000	                              mov ecx, 0	      2243	ops.c	FUNCTION_35	IF_5	FOR_1	IF_16	CALL_22
0x3db0	      0xba00000000	                              mov edx, 0	      2243	ops.c	FUNCTION_35	IF_5	FOR_1	IF_16	CALL_22
0x3db5	          0x4889c7	                            mov rdi, rax	      2243	ops.c	FUNCTION_35	IF_5	FOR_1	IF_16	CALL_22
0x3db8	      0xe800000000	                          call 0x4003dfd	      2243	ops.c	FUNCTION_35	IF_5	FOR_1	IF_16	CALL_22
0x3dbd	    0x488b05000000	            mov rax, qword [0x04003e04] 	      2244	ops.c	FUNCTION_35	IF_5	FOR_1	IF_16	CALL_23
0x3dc4	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2244	ops.c	FUNCTION_35	IF_5	FOR_1	IF_16	CALL_23
0x3dc8	      0xbe01000000	                              mov esi, 1	      2244	ops.c	FUNCTION_35	IF_5	FOR_1	IF_16	CALL_23
0x3dcd	          0x4889c7	                            mov rdi, rax	      2244	ops.c	FUNCTION_35	IF_5	FOR_1	IF_16	CALL_23
0x3dd0	      0xe800000000	                          call 0x4003e15	      2244	ops.c	FUNCTION_35	IF_5	FOR_1	IF_16	CALL_23
0x3dd5	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2245	ops.c	FUNCTION_35	IF_5	FOR_1	IF_16
0x3ddc	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2245	ops.c	FUNCTION_35	IF_5	FOR_1	IF_16
0x3de0	        0x488d5001	                      lea rdx, [rax + 1]	      2245	ops.c	FUNCTION_35	IF_5	FOR_1	IF_16
0x3de4	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2245	ops.c	FUNCTION_35	IF_5	FOR_1	IF_16
0x3deb	        0x48895030	             mov qword [rax + 0x30], rdx	      2245	ops.c	FUNCTION_35	IF_5	FOR_1	IF_16
0x3def	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      2246	ops.c	FUNCTION_35	IF_5	FOR_1	IF_16	CALL_24
0x3df6	          0x4889c7	                            mov rdi, rax	      2246	ops.c	FUNCTION_35	IF_5	FOR_1	IF_16	CALL_24
0x3df9	      0xe800000000	                          call 0x4003e3e	      2246	ops.c	FUNCTION_35	IF_5	FOR_1	IF_16	CALL_24
0x3dfe	            0xeb04	                           jmp 0x4003e44	      2246	ops.c	FUNCTION_35	IF_5	FOR_1	IF_16	CALL_24
0x3e00	              0x90	                                     nop	      2144	ops.c	FUNCTION_35	IF_5	FOR_1	IF_6
0x3e01	            0xeb01	                           jmp 0x4003e44	      2144	ops.c	FUNCTION_35	IF_5	FOR_1	IF_6
0x3e03	              0x90	                                     nop	      2202	ops.c	FUNCTION_35	IF_5	FOR_1	IF_11
0x3e04	    0x488b05000000	            mov rax, qword [0x04003e4b] 	      2139	ops.c	FUNCTION_35	IF_5	FOR_1
0x3e0b	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2139	ops.c	FUNCTION_35	IF_5	FOR_1
0x3e0f	        0x4883c201	                              add rdx, 1	      2139	ops.c	FUNCTION_35	IF_5	FOR_1
0x3e13	        0x48895038	             mov qword [rax + 0x38], rdx	      2139	ops.c	FUNCTION_35	IF_5	FOR_1
0x3e17	    0x488b05000000	            mov rax, qword [0x04003e5e] 	      2139	ops.c	FUNCTION_35	IF_5	FOR_1
0x3e1e	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2139	ops.c	FUNCTION_35	IF_5	FOR_1
0x3e22	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2139	ops.c	FUNCTION_35	IF_5	FOR_1
0x3e29	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2139	ops.c	FUNCTION_35	IF_5	FOR_1
0x3e2d	          0x4839c2	                            cmp rdx, rax	      2139	ops.c	FUNCTION_35	IF_5	FOR_1
0x3e30	     0xf8e1bfbffff	                           jle 0x4003991	      2139	ops.c	FUNCTION_35	IF_5	FOR_1
0x3e36	      0xe987040000	                           jmp 0x4004302	      2139	ops.c	FUNCTION_35	IF_5	FOR_1
0x3e3b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2255	ops.c	FUNCTION_35	ELSE_4	IF_17
0x3e42	          0x8b4008	                mov eax, dword [rax + 8]	      2255	ops.c	FUNCTION_35	ELSE_4	IF_17
0x3e45	          0x83f801	                              cmp eax, 1	      2255	ops.c	FUNCTION_35	ELSE_4	IF_17
0x3e48	            0x7571	                           jne 0x4003efb	      2255	ops.c	FUNCTION_35	ELSE_4	IF_17
0x3e4a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2257	ops.c	FUNCTION_35	ELSE_4	IF_17
0x3e51	    0xc74028000000	               mov dword [rax + 0x28], 0	      2257	ops.c	FUNCTION_35	ELSE_4	IF_17
0x3e58	    0x488b05000000	            mov rax, qword [0x04003e9f] 	      2258	ops.c	FUNCTION_35	ELSE_4	IF_17
0x3e5f	    0xc74040000000	               mov dword [rax + 0x40], 0	      2258	ops.c	FUNCTION_35	ELSE_4	IF_17
0x3e66	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2259	ops.c	FUNCTION_35	ELSE_4	IF_17	CALL_26
0x3e6d	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2259	ops.c	FUNCTION_35	ELSE_4	IF_17	CALL_26
0x3e71	          0x4889c7	                            mov rdi, rax	      2259	ops.c	FUNCTION_35	ELSE_4	IF_17	CALL_26
0x3e74	      0xe800000000	                          call 0x4003eb9	      2259	ops.c	FUNCTION_35	ELSE_4	IF_17	CALL_26
0x3e79	          0x4889c7	                            mov rdi, rax	      2259	ops.c	FUNCTION_35	ELSE_4	IF_17	CALL_26
0x3e7c	      0xe800000000	                          call 0x4003ec1	      2259	ops.c	FUNCTION_35	ELSE_4	IF_17	CALL_26
0x3e81	            0x89c2	                            mov edx, eax	      2259	ops.c	FUNCTION_35	ELSE_4	IF_17	CALL_26
0x3e83	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2259	ops.c	FUNCTION_35	ELSE_4	IF_17	CALL_26
0x3e8a	          0x895038	             mov dword [rax + 0x38], edx	      2259	ops.c	FUNCTION_35	ELSE_4	IF_17	CALL_26
0x3e8d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2260	ops.c	FUNCTION_35	ELSE_4	IF_17	IF_18
0x3e94	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2260	ops.c	FUNCTION_35	ELSE_4	IF_17	IF_18
0x3e97	            0x85c0	                           test eax, eax	      2260	ops.c	FUNCTION_35	ELSE_4	IF_17	IF_18
0x3e99	     0xf8443030000	                            je 0x4004222	      2260	ops.c	FUNCTION_35	ELSE_4	IF_17	IF_18
0x3e9f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2261	ops.c	FUNCTION_35	ELSE_4	IF_17	IF_18
0x3ea6	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2261	ops.c	FUNCTION_35	ELSE_4	IF_17	IF_18
0x3ea9	          0x8d50ff	                      lea edx, [rax - 1]	      2261	ops.c	FUNCTION_35	ELSE_4	IF_17	IF_18
0x3eac	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2261	ops.c	FUNCTION_35	ELSE_4	IF_17	IF_18
0x3eb3	          0x895038	             mov dword [rax + 0x38], edx	      2261	ops.c	FUNCTION_35	ELSE_4	IF_17	IF_18
0x3eb6	      0xe927030000	                           jmp 0x4004222	      2261	ops.c	FUNCTION_35	ELSE_4	IF_17	IF_18
0x3ebb	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2263	ops.c	FUNCTION_35	ELSE_4	ELSE_5	IF_19
0x3ec2	          0x8b4014	            mov eax, dword [rax + 0x14] 	      2263	ops.c	FUNCTION_35	ELSE_4	ELSE_5	IF_19
0x3ec5	            0x85c0	                           test eax, eax	      2263	ops.c	FUNCTION_35	ELSE_4	ELSE_5	IF_19
0x3ec7	     0xf8515030000	                           jne 0x4004222	      2263	ops.c	FUNCTION_35	ELSE_4	ELSE_5	IF_19
0x3ecd	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2264	ops.c	FUNCTION_35	ELSE_4	ELSE_5	IF_19
0x3ed4	        0x4883c030	                           add rax, 0x30	      2264	ops.c	FUNCTION_35	ELSE_4	ELSE_5	IF_19
0x3ed8	          0x4889c7	                            mov rdi, rax	      2264	ops.c	FUNCTION_35	ELSE_4	ELSE_5	IF_19
0x3edb	      0xe800000000	                          call 0x4003f20	      2264	ops.c	FUNCTION_35	ELSE_4	ELSE_5	IF_19
0x3ee0	      0xe9fd020000	                           jmp 0x4004222	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x3ee5	      0xe800000000	                          call 0x4003f2a	      2268	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_29
0x3eea	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	      2268	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_29
0x3ef0	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 0	      2269	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20
0x3ef7	     0xf849a010000	                            je 0x40040d7	      2269	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20
0x3efd	    0x488b05000000	            mov rax, qword [0x04003f44] 	      2272	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21
0x3f04	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2272	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21
0x3f0a	            0x89d7	                            mov edi, edx	      2272	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21
0x3f0c	            0xffd0	                                call rax	      2272	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21
0x3f0e	          0x83f801	                              cmp eax, 1	      2272	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21
0x3f11	            0x7f1a	                            jg 0x4003f6d	      2272	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21
0x3f13	    0x488b05000000	            mov rax, qword [0x04003f5a] 	      2272	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21
0x3f1a	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	      2272	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21
0x3f20	            0x89d7	                            mov edi, edx	      2272	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21
0x3f22	            0xffd0	                                call rax	      2272	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21
0x3f24	          0x83f801	                              cmp eax, 1	      2272	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21
0x3f27	     0xf8e92000000	                           jle 0x4003fff	      2272	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21
0x3f2d	    0x488b05000000	            mov rax, qword [0x04003f74] 	      2276	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21	IF_22
0x3f34	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2276	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21	IF_22
0x3f38	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2276	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21	IF_22
0x3f3f	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2276	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21	IF_22
0x3f43	          0x4839c2	                            cmp rdx, rax	      2276	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21	IF_22
0x3f46	            0x753e	                           jne 0x4003fc6	      2276	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21	IF_22
0x3f48	    0x488b05000000	            mov rax, qword [0x04003f8f] 	      2277	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21	IF_22
0x3f4f	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2277	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21	IF_22
0x3f55	            0x89d7	                            mov edi, edx	      2277	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21	IF_22
0x3f57	            0xffd0	                                call rax	      2277	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21	IF_22
0x3f59	            0x89c3	                            mov ebx, eax	      2277	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21	IF_22
0x3f5b	    0x488b05000000	            mov rax, qword [0x04003fa2] 	      2277	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21	IF_22
0x3f62	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	      2277	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21	IF_22
0x3f68	            0x89d7	                            mov edi, edx	      2277	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21	IF_22
0x3f6a	            0xffd0	                                call rax	      2277	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21	IF_22
0x3f6c	            0x29c3	                            sub ebx, eax	      2277	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21	IF_22
0x3f6e	            0x89da	                            mov edx, ebx	      2277	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21	IF_22
0x3f70	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2277	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21	IF_22
0x3f77	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2277	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21	IF_22
0x3f7a	             0x1c2	                            add edx, eax	      2277	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21	IF_22
0x3f7c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2277	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21	IF_22
0x3f83	          0x895038	             mov dword [rax + 0x38], edx	      2277	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21	IF_22
0x3f86	    0x8b0500000000	            mov eax, dword [0x04003fcc] 	      2278	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21
0x3f8c	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	      2278	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21
0x3f92	    0xc70500000000	           mov dword [0x04003fdc], 0x50 	      2279	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21
0x3f9c	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	      2280	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21	CALL_30
0x3fa2	            0x89c7	                            mov edi, eax	      2280	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21	CALL_30
0x3fa4	      0xe800000000	                          call 0x4003fe9	      2280	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21	CALL_30
0x3fa9	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	      2281	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21
0x3faf	    0x890500000000	            mov dword [0x04003ff5], eax 	      2281	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21
0x3fb5	      0xe800000000	                          call 0x4003ffa	      2283	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21	CALL_31
0x3fba	      0xe915020000	                           jmp 0x4004214	      2283	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	IF_21	CALL_31
0x3fbf	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 9	      2289	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	IF_23
0x3fc6	     0xf858a000000	                           jne 0x4004096	      2289	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	IF_23
0x3fcc	    0xc78564ffffff	               mov dword [rbp - 0x9c], 0	      2291	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	IF_23
0x3fd6	    0x488b05000000	            mov rax, qword [0x0400401d] 	      2293	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	IF_23	IF_24
0x3fdd	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2293	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	IF_23	IF_24
0x3fe1	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2293	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	IF_23	IF_24
0x3fe8	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2293	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	IF_23	IF_24
0x3fec	          0x4839c2	                            cmp rdx, rax	      2293	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	IF_23	IF_24
0x3fef	            0x7523	                           jne 0x4004054	      2293	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	IF_23	IF_24
0x3ff1	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2297	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	IF_23	IF_24	CALL_32
0x3ff8	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      2297	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	IF_23	IF_24	CALL_32
0x3ffb	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2297	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	IF_23	IF_24	CALL_32
0x4002	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2297	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	IF_23	IF_24	CALL_32
0x4005	            0x89d6	                            mov esi, edx	      2297	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	IF_23	IF_24	CALL_32
0x4007	            0x89c7	                            mov edi, eax	      2297	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	IF_23	IF_24	CALL_32
0x4009	      0xe800000000	                          call 0x400404e	      2297	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	IF_23	IF_24	CALL_32
0x400e	    0x898564ffffff	             mov dword [rbp - 0x9c], eax	      2297	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	IF_23	IF_24	CALL_32
0x4014	      0xe800000000	                          call 0x4004059	      2300	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	IF_23	CALL_34
0x4019	            0x89c7	                            mov edi, eax	      2300	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	IF_23	CALL_34
0x401b	      0xe800000000	                          call 0x4004060	      2300	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	IF_23	CALL_34
0x4020	    0x488b05000000	            mov rax, qword [0x04004067] 	      2301	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	IF_23	IF_25
0x4027	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2301	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	IF_23	IF_25
0x402b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2301	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	IF_23	IF_25
0x4032	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2301	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	IF_23	IF_25
0x4036	          0x4839c2	                            cmp rdx, rax	      2301	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	IF_23	IF_25
0x4039	            0x751b	                           jne 0x4004096	      2301	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	IF_23	IF_25
0x403b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2302	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	IF_23	CALL_35
0x4042	        0x488d5030	                   lea rdx, [rax + 0x30]	      2302	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	IF_23	CALL_35
0x4046	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	      2302	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	IF_23	CALL_35
0x404c	            0x89c6	                            mov esi, eax	      2302	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	IF_23	CALL_35
0x404e	          0x4889d7	                            mov rdi, rdx	      2302	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	IF_23	CALL_35
0x4051	      0xe800000000	                          call 0x4004096	      2302	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	IF_23	CALL_35
0x4056	    0x488b05000000	            mov rax, qword [0x0400409d] 	      2305	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	CALL_36
0x405d	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      2305	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	CALL_36
0x4061	    0x488b05000000	            mov rax, qword [0x040040a8] 	      2305	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	CALL_36
0x4068	      0xba01000000	                              mov edx, 1	      2305	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	CALL_36
0x406d	          0x4889ce	                            mov rsi, rcx	      2305	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	CALL_36
0x4070	          0x4889c7	                            mov rdi, rax	      2305	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	CALL_36
0x4073	      0xe800000000	                          call 0x40040b8	      2305	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	CALL_36
0x4078	          0x4889c2	                            mov rdx, rax	      2305	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	CALL_36
0x407b	    0x488b05000000	            mov rax, qword [0x040040c2] 	      2305	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	CALL_36
0x4082	          0x8b4040	            mov eax, dword [rax + 0x40] 	      2305	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	CALL_36
0x4085	            0x4898	                                    cdqe	      2305	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	CALL_36
0x4087	          0x4801d0	                            add rax, rdx	      2305	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	CALL_36
0x408a	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2305	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	CALL_36
0x4090	            0x8810	                      mov byte [rax], dl	      2305	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	CALL_36
0x4092	      0xe93d010000	                           jmp 0x4004214	      2305	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_20	ELSE_6	CALL_36
0x4097	    0x8b0500000000	            mov eax, dword [0x040040dd] 	      2309	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26
0x409d	            0x85c0	                           test eax, eax	      2309	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26
0x409f	     0xf842f010000	                            je 0x4004214	      2309	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26
0x40a5	    0x488b05000000	            mov rax, qword [0x040040ec] 	      2309	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26
0x40ac	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2309	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26
0x40b0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2309	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26
0x40b7	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2309	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26
0x40bb	          0x4839c2	                            cmp rdx, rax	      2309	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26
0x40be	     0xf8510010000	                           jne 0x4004214	      2309	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26
0x40c4	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2311	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26
0x40cb	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      2311	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26
0x40ce	    0x898568ffffff	             mov dword [rbp - 0x98], eax	      2311	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26
0x40d4	    0x488b05000000	            mov rax, qword [0x0400411b] 	      2313	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	IF_27
0x40db	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2313	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	IF_27
0x40df	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2313	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	IF_27
0x40e6	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2313	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	IF_27
0x40ea	          0x4839c2	                            cmp rdx, rax	      2313	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	IF_27
0x40ed	            0x7536	                           jne 0x4004165	      2313	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	IF_27
0x40ef	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2314	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	IF_27
0x40f6	          0x8b5028	            mov edx, dword [rax + 0x28] 	      2314	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	IF_27
0x40f9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2314	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	IF_27
0x4100	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2314	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	IF_27
0x4103	            0x39c2	                            cmp edx, eax	      2314	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	IF_27
0x4105	            0x751e	                           jne 0x4004165	      2314	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	IF_27
0x4107	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2314	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	IF_27
0x410e	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      2314	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	IF_27
0x4111	            0x85c0	                           test eax, eax	      2314	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	IF_27
0x4113	            0x7410	                            je 0x4004165	      2314	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	IF_27
0x4115	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2315	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	IF_27
0x411c	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      2315	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	IF_27
0x411f	    0x298568ffffff	             sub dword [rbp - 0x98], eax	      2315	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	IF_27
0x4125	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2320	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	CALL_38
0x412c	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      2320	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	CALL_38
0x412f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2320	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	CALL_38
0x4136	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2320	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	CALL_38
0x4139	            0x89d6	                            mov esi, edx	      2320	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	CALL_38
0x413b	            0x89c7	                            mov edi, eax	      2320	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	CALL_38
0x413d	      0xe800000000	                          call 0x4004182	      2320	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	CALL_38
0x4142	          0x83c001	                              add eax, 1	      2320	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	CALL_38
0x4145	            0x89c7	                            mov edi, eax	      2320	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	CALL_38
0x4147	      0xe800000000	                          call 0x400418c	      2320	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	CALL_38
0x414c	    0x488b05000000	            mov rax, qword [0x04004193] 	      2321	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26
0x4153	    0x488b15000000	            mov rdx, qword [0x0400419a] 	      2321	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26
0x415a	          0x8b5240	            mov edx, dword [rdx + 0x40] 	      2321	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26
0x415d	    0x8b8d68ffffff	             mov ecx, dword [rbp - 0x98]	      2321	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26
0x4163	          0x83c101	                              add ecx, 1	      2321	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26
0x4166	            0x29ca	                            sub edx, ecx	      2321	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26
0x4168	          0x895040	             mov dword [rax + 0x40], edx	      2321	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26
0x416b	            0xeb5b	                           jmp 0x4004208	      2322	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	FOR_2
0x416d	    0x488b05000000	            mov rax, qword [0x040041b4] 	      2324	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	FOR_2	CALL_39
0x4174	        0x488b4838	            mov rcx, qword [rax + 0x38] 	      2324	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	FOR_2	CALL_39
0x4178	    0x488b05000000	            mov rax, qword [0x040041bf] 	      2324	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	FOR_2	CALL_39
0x417f	      0xba01000000	                              mov edx, 1	      2324	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	FOR_2	CALL_39
0x4184	          0x4889ce	                            mov rsi, rcx	      2324	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	FOR_2	CALL_39
0x4187	          0x4889c7	                            mov rdi, rax	      2324	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	FOR_2	CALL_39
0x418a	      0xe800000000	                          call 0x40041cf	      2324	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	FOR_2	CALL_39
0x418f	          0x4889c2	                            mov rdx, rax	      2324	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	FOR_2	CALL_39
0x4192	    0x488b05000000	            mov rax, qword [0x040041d9] 	      2324	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	FOR_2	CALL_39
0x4199	          0x8b4040	            mov eax, dword [rax + 0x40] 	      2324	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	FOR_2	CALL_39
0x419c	            0x4898	                                    cdqe	      2324	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	FOR_2	CALL_39
0x419e	          0x4801d0	                            add rax, rdx	      2324	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	FOR_2	CALL_39
0x41a1	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	      2324	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	FOR_2	CALL_39
0x41a7	            0x8810	                      mov byte [rax], dl	      2324	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	FOR_2	CALL_39
0x41a9	    0x488b05000000	            mov rax, qword [0x040041f0] 	      2325	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	FOR_2	IF_28	CALL_40
0x41b0	        0x4883c038	                           add rax, 0x38	      2325	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	FOR_2	IF_28	CALL_40
0x41b4	          0x4889c7	                            mov rdi, rax	      2325	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	FOR_2	IF_28	CALL_40
0x41b7	      0xe800000000	                          call 0x40041fc	      2325	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	FOR_2	IF_28	CALL_40
0x41bc	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2325	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	FOR_2	IF_28	CALL_40
0x41bf	            0x7412	                            je 0x4004213	      2325	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	FOR_2	IF_28	CALL_40
0x41c1	    0x83ad68ffffff	               sub dword [rbp - 0x98], 1	      2322	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	FOR_2
0x41c8	    0x83bd68ffffff	               cmp dword [rbp - 0x98], 0	      2322	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	FOR_2
0x41cf	            0x799c	                           jns 0x40041ad	      2322	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	FOR_2
0x41d1	            0xeb01	                           jmp 0x4004214	      2322	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	FOR_2
0x41d3	              0x90	                                     nop	      2326	ops.c	FUNCTION_35	ELSE_4	WHILE_2	ELSE_7	IF_26	FOR_2	IF_28
0x41d4	      0xe800000000	                          call 0x4004219	      2332	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_29	CALL_41
0x41d9	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2332	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_29	CALL_41
0x41dc	     0xf84df000000	                            je 0x4004301	      2332	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_29	CALL_41
0x41e2	    0x488b05000000	            mov rax, qword [0x04004229] 	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x41e9	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x41ed	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x41f4	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x41f8	          0x4839c2	                            cmp rdx, rax	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x41fb	            0x7421	                            je 0x400425e	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x41fd	    0x488b05000000	            mov rax, qword [0x04004244] 	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x4204	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x4208	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x420f	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x4213	          0x4839c2	                            cmp rdx, rax	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x4216	     0xf8cc9fcffff	                            jl 0x4003f25	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x421c	            0xeb52	                           jmp 0x40042b0	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x421e	    0x488b05000000	            mov rax, qword [0x04004265] 	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x4225	          0x8b5040	            mov edx, dword [rax + 0x40] 	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x4228	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x422f	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x4232	            0x39c2	                            cmp edx, eax	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x4234	            0x741e	                            je 0x4004294	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x4236	    0x488b05000000	            mov rax, qword [0x0400427d] 	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x423d	          0x8b5040	            mov edx, dword [rax + 0x40] 	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x4240	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x4247	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x424a	            0x39c2	                            cmp edx, eax	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x424c	     0xf8c93fcffff	                            jl 0x4003f25	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x4252	            0xeb1c	                           jmp 0x40042b0	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x4254	    0x488b05000000	            mov rax, qword [0x0400429b] 	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x425b	          0x8b5044	            mov edx, dword [rax + 0x44] 	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x425e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x4265	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x4268	            0x39c2	                            cmp edx, eax	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x426a	     0xf8c75fcffff	                            jl 0x4003f25	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x4270	    0x488b05000000	            mov rax, qword [0x040042b7] 	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x4277	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x427b	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x4282	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x4286	          0x4839c2	                            cmp rdx, rax	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x4289	            0x7537	                           jne 0x4004302	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x428b	    0x488b05000000	            mov rax, qword [0x040042d2] 	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x4292	          0x8b5040	            mov edx, dword [rax + 0x40] 	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x4295	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x429c	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x429f	            0x39c2	                            cmp edx, eax	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x42a1	            0x751f	                           jne 0x4004302	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x42a3	    0x488b05000000	            mov rax, qword [0x040042ea] 	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x42aa	          0x8b5044	            mov edx, dword [rax + 0x44] 	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x42ad	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x42b4	          0x8b403c	            mov eax, dword [rax + 0x3c] 	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x42b7	            0x39c2	                            cmp edx, eax	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x42b9	     0xf8426fcffff	                            je 0x4003f25	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x42bf	            0xeb01	                           jmp 0x4004302	      2266	ops.c	FUNCTION_35	ELSE_4	WHILE_2	CALL_28
0x42c1	              0x90	                                     nop	      2333	ops.c	FUNCTION_35	ELSE_4	WHILE_2	IF_29
0x42c2	    0x488b0d000000	            mov rcx, qword [0x04004309] 	      2337	ops.c	FUNCTION_35
0x42c9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2337	ops.c	FUNCTION_35
0x42d0	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2337	ops.c	FUNCTION_35
0x42d4	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2337	ops.c	FUNCTION_35
0x42d8	        0x48894138	             mov qword [rcx + 0x38], rax	      2337	ops.c	FUNCTION_35
0x42dc	        0x48895140	             mov qword [rcx + 0x40], rdx	      2337	ops.c	FUNCTION_35
0x42e0	      0xe800000000	                          call 0x4004325	      2338	ops.c	FUNCTION_35	CALL_42
0x42e5	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2339	ops.c	FUNCTION_35	CALL_43
0x42ec	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2339	ops.c	FUNCTION_35	CALL_43
0x42f0	        0x488d5001	                      lea rdx, [rax + 1]	      2339	ops.c	FUNCTION_35	CALL_43
0x42f4	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2339	ops.c	FUNCTION_35	CALL_43
0x42fb	          0x8b7028	            mov esi, dword [rax + 0x28] 	      2339	ops.c	FUNCTION_35	CALL_43
0x42fe	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2339	ops.c	FUNCTION_35	CALL_43
0x4305	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2339	ops.c	FUNCTION_35	CALL_43
0x4309	      0xb900000000	                              mov ecx, 0	      2339	ops.c	FUNCTION_35	CALL_43
0x430e	          0x4889c7	                            mov rdi, rax	      2339	ops.c	FUNCTION_35	CALL_43
0x4311	      0xe800000000	                          call 0x4004356	      2339	ops.c	FUNCTION_35	CALL_43
0x4316	    0x488b0d000000	            mov rcx, qword [0x0400435d] 	      2342	ops.c	FUNCTION_35
0x431d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2342	ops.c	FUNCTION_35
0x4324	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2342	ops.c	FUNCTION_35
0x4328	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2342	ops.c	FUNCTION_35
0x432c	    0x488981d01100	          mov qword [rcx + 0x11d0], rax 	      2342	ops.c	FUNCTION_35
0x4333	    0x488991d81100	          mov qword [rcx + 0x11d8], rdx 	      2342	ops.c	FUNCTION_35
0x433a	    0x488b0d000000	            mov rcx, qword [0x04004381] 	      2343	ops.c	FUNCTION_35
0x4341	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      2343	ops.c	FUNCTION_35
0x4348	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2343	ops.c	FUNCTION_35
0x434c	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2343	ops.c	FUNCTION_35
0x4350	    0x488981f01100	          mov qword [rcx + 0x11f0], rax 	      2343	ops.c	FUNCTION_35
0x4357	    0x488991f81100	          mov qword [rcx + 0x11f8], rdx 	      2343	ops.c	FUNCTION_35
0x435e	      0xb801000000	                              mov eax, 1	      2345	ops.c	FUNCTION_35
0x4363	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      2346	ops.c	FUNCTION_35
0x4367	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      2346	ops.c	FUNCTION_35
0x4370	            0x7405	                            je 0x40043b7	      2346	ops.c	FUNCTION_35
0x4372	      0xe800000000	                          call 0x40043b7	      2346	ops.c	FUNCTION_35
0x4377	    0x4881c4b80000	                           add rsp, 0xb8	      2346	ops.c	FUNCTION_35
0x437e	              0x5b	                                 pop rbx	      2346	ops.c	FUNCTION_35
0x437f	              0x5d	                                 pop rbp	      2346	ops.c	FUNCTION_35
0x4380	              0xc3	                                     ret	      2346	ops.c	FUNCTION_35
get_op_type	CALL,1:FOR,1:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,6	57
0x0	              0x55	                                push rbp	       174	ops.c	FUNCTION_1
0x1	          0x4889e5	                            mov rbp, rsp	       174	ops.c	FUNCTION_1
0x4	        0x4883ec20	                           sub rsp, 0x20	       174	ops.c	FUNCTION_1
0x8	          0x897dec	             mov dword [rbp - 0x14], edi	       174	ops.c	FUNCTION_1
0xb	          0x8975e8	             mov dword [rbp - 0x18], esi	       174	ops.c	FUNCTION_1
0xe	        0x837dec72	           cmp dword [rbp - 0x14], 0x72 	       177	ops.c	FUNCTION_1	IF_1
0x12	            0x750a	                           jne 0x400005e	       177	ops.c	FUNCTION_1	IF_1
0x14	      0xb810000000	                           mov eax, 0x10	       178	ops.c	FUNCTION_1	IF_1
0x19	      0xe999000000	                           jmp 0x40000f7	       178	ops.c	FUNCTION_1	IF_1
0x1e	        0x837dec7e	           cmp dword [rbp - 0x14], 0x7e 	       179	ops.c	FUNCTION_1	IF_2
0x22	            0x750a	                           jne 0x400006e	       179	ops.c	FUNCTION_1	IF_2
0x24	      0xb807000000	                              mov eax, 7	       180	ops.c	FUNCTION_1	IF_2
0x29	      0xe989000000	                           jmp 0x40000f7	       180	ops.c	FUNCTION_1	IF_2
0x2e	        0x837dec67	           cmp dword [rbp - 0x14], 0x67 	       181	ops.c	FUNCTION_1	IF_3
0x32	            0x750d	                           jne 0x4000081	       181	ops.c	FUNCTION_1	IF_3
0x34	        0x837de801	               cmp dword [rbp - 0x18], 1	       181	ops.c	FUNCTION_1	IF_3
0x38	            0x7507	                           jne 0x4000081	       181	ops.c	FUNCTION_1	IF_3
0x3a	      0xb81c000000	                           mov eax, 0x1c	       182	ops.c	FUNCTION_1	IF_3
0x3f	            0xeb76	                           jmp 0x40000f7	       182	ops.c	FUNCTION_1	IF_3
0x41	        0x837dec67	           cmp dword [rbp - 0x14], 0x67 	       183	ops.c	FUNCTION_1	IF_4
0x45	            0x750d	                           jne 0x4000094	       183	ops.c	FUNCTION_1	IF_4
0x47	        0x837de818	           cmp dword [rbp - 0x18], 0x18 	       183	ops.c	FUNCTION_1	IF_4
0x4b	            0x7507	                           jne 0x4000094	       183	ops.c	FUNCTION_1	IF_4
0x4d	      0xb81d000000	                           mov eax, 0x1d	       184	ops.c	FUNCTION_1	IF_4
0x52	            0xeb63	                           jmp 0x40000f7	       184	ops.c	FUNCTION_1	IF_4
0x54	    0xc745fc000000	                  mov dword [rbp - 4], 0	       185	ops.c	FUNCTION_1	FOR_1
0x5b	          0x8b45fc	                mov eax, dword [rbp - 4]	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x5e	          0x4863d0	                         movsxd rdx, eax	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x61	          0x4889d0	                            mov rax, rdx	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x64	          0x4801c0	                            add rax, rax	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x67	          0x4801d0	                            add rax, rdx	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x6a	    0x480500000000	                              add rax, 0	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x70	           0xfb600	                   movzx eax, byte [rax]	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x73	           0xfbec0	                           movsx eax, al	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x76	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x79	            0x7520	                           jne 0x40000db	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x7b	          0x8b45fc	                mov eax, dword [rbp - 4]	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x7e	          0x4863d0	                         movsxd rdx, eax	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x81	          0x4889d0	                            mov rax, rdx	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x84	          0x4801c0	                            add rax, rax	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x87	          0x4801d0	                            add rax, rdx	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x8a	    0x480500000000	                              add rax, 0	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x90	           0xfb600	                   movzx eax, byte [rax]	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x93	           0xfbec0	                           movsx eax, al	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x96	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x99	            0x7418	                            je 0x40000f3	       187	ops.c	FUNCTION_1	FOR_1	IF_5
0x9b	        0x837dfc1d	               cmp dword [rbp - 4], 0x1d	       189	ops.c	FUNCTION_1	FOR_1	IF_6
0x9f	            0x750c	                           jne 0x40000ed	       189	ops.c	FUNCTION_1	FOR_1	IF_6
0xa1	      0xbf00000000	                              mov edi, 0	       191	ops.c	FUNCTION_1	FOR_1	IF_6	CALL_1
0xa6	      0xe800000000	                          call 0x40000eb	       191	ops.c	FUNCTION_1	FOR_1	IF_6	CALL_1
0xab	            0xeb07	                           jmp 0x40000f4	       192	ops.c	FUNCTION_1	FOR_1	IF_6
0xad	        0x8345fc01	                  add dword [rbp - 4], 1	       185	ops.c	FUNCTION_1	FOR_1
0xb1	            0xeba8	                           jmp 0x400009b	       194	ops.c	FUNCTION_1	FOR_1
0xb3	              0x90	                                     nop	       188	ops.c	FUNCTION_1	FOR_1	IF_5
0xb4	          0x8b45fc	                mov eax, dword [rbp - 4]	       195	ops.c	FUNCTION_1
0xb7	              0xc9	                                   leave	       196	ops.c	FUNCTION_1
0xb8	              0xc3	                                     ret	       196	ops.c	FUNCTION_1
yank_do_autocmd	CALL,15:FOR,1:SWITCH,1:functions,0:WHILE,0:DO,0:ELSE,0:IF,1	145
0x27e5	              0x55	                                push rbp	      1658	ops.c	FUNCTION_32
0x27e6	          0x4889e5	                            mov rbp, rsp	      1658	ops.c	FUNCTION_32
0x27e9	        0x4883c480	             add rsp, 0xffffffffffffff80	      1658	ops.c	FUNCTION_32
0x27ed	        0x48897d88	             mov qword [rbp - 0x78], rdi	      1658	ops.c	FUNCTION_32
0x27f1	        0x48897580	             mov qword [rbp - 0x80], rsi	      1658	ops.c	FUNCTION_32
0x27f5	    0x64488b042528	                mov rax, qword fs:[0x28]	      1658	ops.c	FUNCTION_32
0x27fe	        0x488945f8	                mov qword [rbp - 8], rax	      1658	ops.c	FUNCTION_32
0x2802	            0x31c0	                            xor eax, eax	      1658	ops.c	FUNCTION_32
0x2804	    0x48c745980000	               mov qword [rbp - 0x68], 0	      1664	ops.c	FUNCTION_32
0x280c	    0x8b0500000000	            mov eax, dword [0x04002852] 	      1666	ops.c	FUNCTION_32	IF_1
0x2812	            0x85c0	                           test eax, eax	      1666	ops.c	FUNCTION_32	IF_1
0x2814	     0xf85ef010000	                           jne 0x4002a49	      1666	ops.c	FUNCTION_32	IF_1
0x281a	      0xbf56000000	                           mov edi, 0x56	      1669	ops.c	FUNCTION_32	CALL_1
0x281f	      0xe800000000	                          call 0x4002864	      1669	ops.c	FUNCTION_32	CALL_1
0x2824	        0x488945a0	             mov qword [rbp - 0x60], rax	      1669	ops.c	FUNCTION_32	CALL_1
0x2828	      0xe800000000	                          call 0x400286d	      1671	ops.c	FUNCTION_32	CALL_2
0x282d	        0x488945a8	             mov qword [rbp - 0x58], rax	      1671	ops.c	FUNCTION_32	CALL_2
0x2831	    0xc74594000000	               mov dword [rbp - 0x6c], 0	      1672	ops.c	FUNCTION_32	FOR_1
0x2838	            0xeb2f	                           jmp 0x40028a9	      1672	ops.c	FUNCTION_32	FOR_1
0x283a	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1673	ops.c	FUNCTION_32	CALL_3
0x283e	          0x488b00	                    mov rax, qword [rax]	      1673	ops.c	FUNCTION_32	CALL_3
0x2841	          0x8b5594	             mov edx, dword [rbp - 0x6c]	      1673	ops.c	FUNCTION_32	CALL_3
0x2844	          0x4863d2	                         movsxd rdx, edx	      1673	ops.c	FUNCTION_32	CALL_3
0x2847	        0x48c1e203	                              shl rdx, 3	      1673	ops.c	FUNCTION_32	CALL_3
0x284b	          0x4801d0	                            add rax, rdx	      1673	ops.c	FUNCTION_32	CALL_3
0x284e	          0x488b08	                    mov rcx, qword [rax]	      1673	ops.c	FUNCTION_32	CALL_3
0x2851	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1673	ops.c	FUNCTION_32	CALL_3
0x2855	      0xbaffffffff	                     mov edx, 0xffffffff	      1673	ops.c	FUNCTION_32	CALL_3
0x285a	          0x4889ce	                            mov rsi, rcx	      1673	ops.c	FUNCTION_32	CALL_3
0x285d	          0x4889c7	                            mov rdi, rax	      1673	ops.c	FUNCTION_32	CALL_3
0x2860	      0xe800000000	                          call 0x40028a5	      1673	ops.c	FUNCTION_32	CALL_3
0x2865	        0x83459401	               add dword [rbp - 0x6c], 1	      1672	ops.c	FUNCTION_32	FOR_1
0x2869	          0x8b4594	             mov eax, dword [rbp - 0x6c]	      1672	ops.c	FUNCTION_32	FOR_1
0x286c	          0x4863d0	                         movsxd rdx, eax	      1672	ops.c	FUNCTION_32	FOR_1
0x286f	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1672	ops.c	FUNCTION_32	FOR_1
0x2873	        0x488b4008	                mov rax, qword [rax + 8]	      1672	ops.c	FUNCTION_32	FOR_1
0x2877	          0x4839c2	                            cmp rdx, rax	      1672	ops.c	FUNCTION_32	FOR_1
0x287a	            0x7cbe	                            jl 0x400287a	      1672	ops.c	FUNCTION_32	FOR_1
0x287c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1674	ops.c	FUNCTION_32
0x2880	        0xc6404002	                mov byte [rax + 0x40], 2	      1674	ops.c	FUNCTION_32
0x2884	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	      1675	ops.c	FUNCTION_32	CALL_4
0x2888	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1675	ops.c	FUNCTION_32	CALL_4
0x288c	      0xbe00000000	                              mov esi, 0	      1675	ops.c	FUNCTION_32	CALL_4
0x2891	          0x4889c7	                            mov rdi, rax	      1675	ops.c	FUNCTION_32	CALL_4
0x2894	      0xe800000000	                          call 0x40028d9	      1675	ops.c	FUNCTION_32	CALL_4
0x2899	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1677	ops.c	FUNCTION_32
0x289d	          0x8b4004	                mov eax, dword [rax + 4]	      1677	ops.c	FUNCTION_32
0x28a0	          0x8845b0	               mov byte [rbp - 0x50], al	      1677	ops.c	FUNCTION_32
0x28a3	        0xc645b100	                mov byte [rbp - 0x4f], 0	      1678	ops.c	FUNCTION_32
0x28a7	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      1679	ops.c	FUNCTION_32	CALL_5
0x28ab	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1679	ops.c	FUNCTION_32	CALL_5
0x28af	          0x4889d1	                            mov rcx, rdx	      1679	ops.c	FUNCTION_32	CALL_5
0x28b2	      0xba00000000	                              mov edx, 0	      1679	ops.c	FUNCTION_32	CALL_5
0x28b7	      0xbe00000000	                              mov esi, 0	      1679	ops.c	FUNCTION_32	CALL_5
0x28bc	          0x4889c7	                            mov rdi, rax	      1679	ops.c	FUNCTION_32	CALL_5
0x28bf	      0xe800000000	                          call 0x4002904	      1679	ops.c	FUNCTION_32	CALL_5
0x28c4	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1681	ops.c	FUNCTION_32	CALL_6
0x28c8	            0x8b00	                    mov eax, dword [rax]	      1681	ops.c	FUNCTION_32	CALL_6
0x28ca	            0x89c7	                            mov edi, eax	      1681	ops.c	FUNCTION_32	CALL_6
0x28cc	      0xe800000000	                          call 0x4002911	      1681	ops.c	FUNCTION_32	CALL_6
0x28d1	          0x8845b0	               mov byte [rbp - 0x50], al	      1681	ops.c	FUNCTION_32	CALL_6
0x28d4	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1682	ops.c	FUNCTION_32	CALL_7
0x28d8	            0x8b00	                    mov eax, dword [rax]	      1682	ops.c	FUNCTION_32	CALL_7
0x28da	            0x89c7	                            mov edi, eax	      1682	ops.c	FUNCTION_32	CALL_7
0x28dc	      0xe800000000	                          call 0x4002921	      1682	ops.c	FUNCTION_32	CALL_7
0x28e1	          0x8845b1	               mov byte [rbp - 0x4f], al	      1682	ops.c	FUNCTION_32	CALL_7
0x28e4	        0xc645b200	                mov byte [rbp - 0x4e], 0	      1683	ops.c	FUNCTION_32
0x28e8	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      1684	ops.c	FUNCTION_32	CALL_8
0x28ec	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1684	ops.c	FUNCTION_32	CALL_8
0x28f0	          0x4889d1	                            mov rcx, rdx	      1684	ops.c	FUNCTION_32	CALL_8
0x28f3	      0xba00000000	                              mov edx, 0	      1684	ops.c	FUNCTION_32	CALL_8
0x28f8	      0xbe00000000	                              mov esi, 0	      1684	ops.c	FUNCTION_32	CALL_8
0x28fd	          0x4889c7	                            mov rdi, rax	      1684	ops.c	FUNCTION_32	CALL_8
0x2900	      0xe800000000	                          call 0x4002945	      1684	ops.c	FUNCTION_32	CALL_8
0x2905	        0xc645b000	                mov byte [rbp - 0x50], 0	      1686	ops.c	FUNCTION_32
0x2909	        0xc645b100	                mov byte [rbp - 0x4f], 0	      1687	ops.c	FUNCTION_32
0x290d	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1688	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x2911	          0x8b4004	                mov eax, dword [rax + 4]	      1688	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x2914	        0x488d5598	                   lea rdx, [rbp - 0x68]	      1688	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x2918	          0x4889d6	                            mov rsi, rdx	      1688	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x291b	            0x89c7	                            mov edi, eax	      1688	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x291d	      0xe800000000	                          call 0x4002962	      1688	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x2922	           0xfb6c0	                           movzx eax, al	      1688	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x2925	          0x83f801	                              cmp eax, 1	      1688	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x2928	            0x740b	                            je 0x4002975	      1688	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x292a	          0x83f802	                              cmp eax, 2	      1688	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x292d	            0x7412	                            je 0x4002981	      1688	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x292f	            0x85c0	                           test eax, eax	      1688	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x2931	            0x7408	                            je 0x400297b	      1688	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x2933	            0xeb38	                           jmp 0x40029ad	      1688	ops.c	FUNCTION_32	SWITCH_1	CALL_9
0x2935	        0xc645b056	            mov byte [rbp - 0x50], 0x56 	      1690	ops.c	FUNCTION_32	SWITCH_1
0x2939	            0xeb32	                           jmp 0x40029ad	      1690	ops.c	FUNCTION_32	SWITCH_1
0x293b	        0xc645b076	            mov byte [rbp - 0x50], 0x76 	      1691	ops.c	FUNCTION_32	SWITCH_1
0x293f	            0xeb2c	                           jmp 0x40029ad	      1691	ops.c	FUNCTION_32	SWITCH_1
0x2941	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1693	ops.c	FUNCTION_32	SWITCH_1	CALL_10
0x2945	        0x488d5001	                      lea rdx, [rax + 1]	      1693	ops.c	FUNCTION_32	SWITCH_1	CALL_10
0x2949	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1693	ops.c	FUNCTION_32	SWITCH_1	CALL_10
0x294d	          0x4989d0	                             mov r8, rdx	      1693	ops.c	FUNCTION_32	SWITCH_1	CALL_10
0x2950	      0xb916000000	                           mov ecx, 0x16	      1693	ops.c	FUNCTION_32	SWITCH_1	CALL_10
0x2955	      0xba00000000	                              mov edx, 0	      1693	ops.c	FUNCTION_32	SWITCH_1	CALL_10
0x295a	      0xbe43000000	                           mov esi, 0x43	      1693	ops.c	FUNCTION_32	SWITCH_1	CALL_10
0x295f	          0x4889c7	                            mov rdi, rax	      1693	ops.c	FUNCTION_32	SWITCH_1	CALL_10
0x2962	      0xb800000000	                              mov eax, 0	      1693	ops.c	FUNCTION_32	SWITCH_1	CALL_10
0x2967	      0xe800000000	                          call 0x40029ac	      1693	ops.c	FUNCTION_32	SWITCH_1	CALL_10
0x296c	              0x90	                                     nop	      1695	ops.c	FUNCTION_32	SWITCH_1
0x296d	        0x488d55b0	                   lea rdx, [rbp - 0x50]	      1697	ops.c	FUNCTION_32	CALL_11
0x2971	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1697	ops.c	FUNCTION_32	CALL_11
0x2975	          0x4889d1	                            mov rcx, rdx	      1697	ops.c	FUNCTION_32	CALL_11
0x2978	      0xba00000000	                              mov edx, 0	      1697	ops.c	FUNCTION_32	CALL_11
0x297d	      0xbe00000000	                              mov esi, 0	      1697	ops.c	FUNCTION_32	CALL_11
0x2982	          0x4889c7	                            mov rdi, rax	      1697	ops.c	FUNCTION_32	CALL_11
0x2985	      0xe800000000	                          call 0x40029ca	      1697	ops.c	FUNCTION_32	CALL_11
0x298a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1700	ops.c	FUNCTION_32	CALL_12
0x298e	          0x4889c7	                            mov rdi, rax	      1700	ops.c	FUNCTION_32	CALL_12
0x2991	      0xe800000000	                          call 0x40029d6	      1700	ops.c	FUNCTION_32	CALL_12
0x2996	    0xc70500000000	               mov dword [0x040029e0], 1	      1702	ops.c	FUNCTION_32
0x29a0	    0x8b0500000000	            mov eax, dword [0x040029e6] 	      1703	ops.c	FUNCTION_32
0x29a6	          0x83c001	                              add eax, 1	      1703	ops.c	FUNCTION_32
0x29a9	    0x890500000000	            mov dword [0x040029ef], eax 	      1703	ops.c	FUNCTION_32
0x29af	    0x488b05000000	            mov rax, qword [0x040029f6] 	      1704	ops.c	FUNCTION_32	CALL_13
0x29b6	          0x4989c0	                             mov r8, rax	      1704	ops.c	FUNCTION_32	CALL_13
0x29b9	      0xb900000000	                              mov ecx, 0	      1704	ops.c	FUNCTION_32	CALL_13
0x29be	      0xba00000000	                              mov edx, 0	      1704	ops.c	FUNCTION_32	CALL_13
0x29c3	      0xbe00000000	                              mov esi, 0	      1704	ops.c	FUNCTION_32	CALL_13
0x29c8	      0xbf59000000	                           mov edi, 0x59	      1704	ops.c	FUNCTION_32	CALL_13
0x29cd	      0xe800000000	                          call 0x4002a12	      1704	ops.c	FUNCTION_32	CALL_13
0x29d2	    0x8b0500000000	            mov eax, dword [0x04002a18] 	      1705	ops.c	FUNCTION_32
0x29d8	          0x83e801	                              sub eax, 1	      1705	ops.c	FUNCTION_32
0x29db	    0x890500000000	            mov dword [0x04002a21], eax 	      1705	ops.c	FUNCTION_32
0x29e1	    0xc70500000000	               mov dword [0x04002a2b], 0	      1706	ops.c	FUNCTION_32
0x29eb	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1709	ops.c	FUNCTION_32	CALL_14
0x29ef	          0x4889c7	                            mov rdi, rax	      1709	ops.c	FUNCTION_32	CALL_14
0x29f2	      0xe800000000	                          call 0x4002a37	      1709	ops.c	FUNCTION_32	CALL_14
0x29f7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1710	ops.c	FUNCTION_32	CALL_15
0x29fb	        0x4883c010	                           add rax, 0x10	      1710	ops.c	FUNCTION_32	CALL_15
0x29ff	          0x4889c7	                            mov rdi, rax	      1710	ops.c	FUNCTION_32	CALL_15
0x2a02	      0xe800000000	                          call 0x4002a47	      1710	ops.c	FUNCTION_32	CALL_15
0x2a07	            0xeb01	                           jmp 0x4002a4a	      1710	ops.c	FUNCTION_32	CALL_15
0x2a09	              0x90	                                     nop	      1667	ops.c	FUNCTION_32	IF_1
0x2a0a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1711	ops.c	FUNCTION_32
0x2a0e	    0x644833042528	                xor rax, qword fs:[0x28]	      1711	ops.c	FUNCTION_32
0x2a17	            0x7405	                            je 0x4002a5e	      1711	ops.c	FUNCTION_32
0x2a19	      0xe800000000	                          call 0x4002a5e	      1711	ops.c	FUNCTION_32
0x2a1e	              0xc9	                                   leave	      1711	ops.c	FUNCTION_32
0x2a1f	              0xc3	                                     ret	      1711	ops.c	FUNCTION_32
line_count_info	CALL,2:FOR,1:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,1:IF,5	88
0xe713	              0x55	                                push rbp	      7251	ops.c	FUNCTION_90
0xe714	          0x4889e5	                            mov rbp, rsp	      7251	ops.c	FUNCTION_90
0xe717	        0x4883ec50	                           sub rsp, 0x50	      7251	ops.c	FUNCTION_90
0xe71b	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      7251	ops.c	FUNCTION_90
0xe71f	        0x488975d0	             mov qword [rbp - 0x30], rsi	      7251	ops.c	FUNCTION_90
0xe723	        0x488955c8	             mov qword [rbp - 0x38], rdx	      7251	ops.c	FUNCTION_90
0xe727	        0x48894dc0	             mov qword [rbp - 0x40], rcx	      7251	ops.c	FUNCTION_90
0xe72b	        0x448945bc	             mov dword [rbp - 0x44], r8d	      7251	ops.c	FUNCTION_90
0xe72f	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      7253	ops.c	FUNCTION_90
0xe737	    0x48c745f80000	                  mov qword [rbp - 8], 0	      7254	ops.c	FUNCTION_90
0xe73f	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      7255	ops.c	FUNCTION_90
0xe746	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      7257	ops.c	FUNCTION_90	FOR_1
0xe74e	            0xeb75	                           jmp 0x400e805	      7257	ops.c	FUNCTION_90	FOR_1
0xe750	        0x837de400	               cmp dword [rbp - 0x1c], 0	      7259	ops.c	FUNCTION_90	FOR_1	IF_1
0xe754	            0x742a	                            je 0x400e7c0	      7259	ops.c	FUNCTION_90	FOR_1	IF_1
0xe756	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      7261	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0xe75a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7261	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0xe75e	          0x4801d0	                            add rax, rdx	      7261	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0xe761	           0xfb600	                   movzx eax, byte [rax]	      7261	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0xe764	           0xfb6c0	                           movzx eax, al	      7261	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0xe767	            0x89c7	                            mov edi, eax	      7261	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0xe769	      0xe800000000	                          call 0x400e7ae	      7261	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0xe76e	            0x85c0	                           test eax, eax	      7261	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0xe770	            0x7431	                            je 0x400e7e3	      7261	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2	CALL_1
0xe772	      0x488345f001	               add qword [rbp - 0x10], 1	      7263	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0xe777	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      7264	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0xe77e	            0xeb23	                           jmp 0x400e7e3	      7264	ops.c	FUNCTION_90	FOR_1	IF_1	IF_2
0xe780	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      7267	ops.c	FUNCTION_90	FOR_1	ELSE_1	IF_3	CALL_2
0xe784	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7267	ops.c	FUNCTION_90	FOR_1	ELSE_1	IF_3	CALL_2
0xe788	          0x4801d0	                            add rax, rdx	      7267	ops.c	FUNCTION_90	FOR_1	ELSE_1	IF_3	CALL_2
0xe78b	           0xfb600	                   movzx eax, byte [rax]	      7267	ops.c	FUNCTION_90	FOR_1	ELSE_1	IF_3	CALL_2
0xe78e	           0xfb6c0	                           movzx eax, al	      7267	ops.c	FUNCTION_90	FOR_1	ELSE_1	IF_3	CALL_2
0xe791	            0x89c7	                            mov edi, eax	      7267	ops.c	FUNCTION_90	FOR_1	ELSE_1	IF_3	CALL_2
0xe793	      0xe800000000	                          call 0x400e7d8	      7267	ops.c	FUNCTION_90	FOR_1	ELSE_1	IF_3	CALL_2
0xe798	            0x85c0	                           test eax, eax	      7267	ops.c	FUNCTION_90	FOR_1	ELSE_1	IF_3	CALL_2
0xe79a	            0x7507	                           jne 0x400e7e3	      7267	ops.c	FUNCTION_90	FOR_1	ELSE_1	IF_3	CALL_2
0xe79c	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	      7268	ops.c	FUNCTION_90	FOR_1	ELSE_1	IF_3
0xe7a3	      0x488345f801	                  add qword [rbp - 8], 1	      7269	ops.c	FUNCTION_90	FOR_1
0xe7a8	    0x488b05000000	            mov rax, qword [0x0400e7ef] 	      7271	ops.c	FUNCTION_90	FOR_1
0xe7af	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      7271	ops.c	FUNCTION_90	FOR_1
0xe7b3	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      7271	ops.c	FUNCTION_90	FOR_1
0xe7b7	          0x4801ca	                            add rdx, rcx	      7271	ops.c	FUNCTION_90	FOR_1
0xe7ba	          0x4889d7	                            mov rdi, rdx	      7271	ops.c	FUNCTION_90	FOR_1
0xe7bd	            0xffd0	                                call rax	      7271	ops.c	FUNCTION_90	FOR_1
0xe7bf	            0x4898	                                    cdqe	      7271	ops.c	FUNCTION_90	FOR_1
0xe7c1	        0x480145e8	            add qword [rbp - 0x18], rax 	      7271	ops.c	FUNCTION_90	FOR_1
0xe7c5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7257	ops.c	FUNCTION_90	FOR_1
0xe7c9	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      7257	ops.c	FUNCTION_90	FOR_1
0xe7cd	            0x7d16	                           jge 0x400e825	      7257	ops.c	FUNCTION_90	FOR_1
0xe7cf	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      7257	ops.c	FUNCTION_90	FOR_1
0xe7d3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7257	ops.c	FUNCTION_90	FOR_1
0xe7d7	          0x4801d0	                            add rax, rdx	      7257	ops.c	FUNCTION_90	FOR_1
0xe7da	           0xfb600	                   movzx eax, byte [rax]	      7257	ops.c	FUNCTION_90	FOR_1
0xe7dd	            0x84c0	                             test al, al	      7257	ops.c	FUNCTION_90	FOR_1
0xe7df	     0xf856bffffff	                           jne 0x400e790	      7257	ops.c	FUNCTION_90	FOR_1
0xe7e5	        0x837de400	               cmp dword [rbp - 0x1c], 0	      7277	ops.c	FUNCTION_90	IF_4
0xe7e9	            0x7405	                            je 0x400e830	      7277	ops.c	FUNCTION_90	IF_4
0xe7eb	      0x488345f001	               add qword [rbp - 0x10], 1	      7278	ops.c	FUNCTION_90	IF_4
0xe7f0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7279	ops.c	FUNCTION_90
0xe7f4	          0x488b10	                    mov rdx, qword [rax]	      7279	ops.c	FUNCTION_90
0xe7f7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      7279	ops.c	FUNCTION_90
0xe7fb	          0x4801c2	                            add rdx, rax	      7279	ops.c	FUNCTION_90
0xe7fe	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      7279	ops.c	FUNCTION_90
0xe802	          0x488910	                    mov qword [rax], rdx	      7279	ops.c	FUNCTION_90
0xe805	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7282	ops.c	FUNCTION_90	IF_5
0xe809	        0x483b45c0	             cmp rax, qword [rbp - 0x40]	      7282	ops.c	FUNCTION_90	IF_5
0xe80d	            0x7d24	                           jge 0x400e873	      7282	ops.c	FUNCTION_90	IF_5
0xe80f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      7282	ops.c	FUNCTION_90	IF_5
0xe813	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      7282	ops.c	FUNCTION_90	IF_5
0xe817	          0x4801d0	                            add rax, rdx	      7282	ops.c	FUNCTION_90	IF_5
0xe81a	           0xfb600	                   movzx eax, byte [rax]	      7282	ops.c	FUNCTION_90	IF_5
0xe81d	            0x84c0	                             test al, al	      7282	ops.c	FUNCTION_90	IF_5
0xe81f	            0x7512	                           jne 0x400e873	      7282	ops.c	FUNCTION_90	IF_5
0xe821	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      7284	ops.c	FUNCTION_90	IF_5
0xe824	            0x4898	                                    cdqe	      7284	ops.c	FUNCTION_90	IF_5
0xe826	        0x480145e8	            add qword [rbp - 0x18], rax 	      7284	ops.c	FUNCTION_90	IF_5
0xe82a	          0x8b45bc	             mov eax, dword [rbp - 0x44]	      7285	ops.c	FUNCTION_90	IF_5
0xe82d	            0x4898	                                    cdqe	      7285	ops.c	FUNCTION_90	IF_5
0xe82f	        0x480145f8	                add qword [rbp - 8], rax	      7285	ops.c	FUNCTION_90	IF_5
0xe833	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7287	ops.c	FUNCTION_90
0xe837	          0x488b10	                    mov rdx, qword [rax]	      7287	ops.c	FUNCTION_90
0xe83a	        0x488b45f8	                mov rax, qword [rbp - 8]	      7287	ops.c	FUNCTION_90
0xe83e	          0x4801c2	                            add rdx, rax	      7287	ops.c	FUNCTION_90
0xe841	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      7287	ops.c	FUNCTION_90
0xe845	          0x488910	                    mov qword [rax], rdx	      7287	ops.c	FUNCTION_90
0xe848	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      7288	ops.c	FUNCTION_90
0xe84c	              0xc9	                                   leave	      7289	ops.c	FUNCTION_90
0xe84d	              0xc3	                                     ret	      7289	ops.c	FUNCTION_90
do_record	CALL,6:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,3:IF,3	61
0x18d7	              0x55	                                push rbp	      1077	ops.c	FUNCTION_21
0x18d8	          0x4889e5	                            mov rbp, rsp	      1077	ops.c	FUNCTION_21
0x18db	        0x4883ec30	                           sub rsp, 0x30	      1077	ops.c	FUNCTION_21
0x18df	          0x897ddc	             mov dword [rbp - 0x24], edi	      1077	ops.c	FUNCTION_21
0x18e2	    0x8b0500000000	            mov eax, dword [0x04001928] 	      1083	ops.c	FUNCTION_21	IF_1
0x18e8	            0x85c0	                           test eax, eax	      1083	ops.c	FUNCTION_21	IF_1
0x18ea	            0x7559	                           jne 0x4001985	      1083	ops.c	FUNCTION_21	IF_1
0x18ec	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1086	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x18f0	            0x7827	                            js 0x4001959	      1086	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x18f2	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1086	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x18f5	          0x83e841	                           sub eax, 0x41	      1086	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x18f8	          0x83f819	                           cmp eax, 0x19	      1086	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x18fb	            0x7628	                           jbe 0x4001965	      1086	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x18fd	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1086	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x1900	          0x83e861	                           sub eax, 0x61	      1086	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x1903	          0x83f819	                           cmp eax, 0x19	      1086	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x1906	            0x761d	                           jbe 0x4001965	      1086	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x1908	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1086	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x190b	          0x83e830	                           sub eax, 0x30	      1086	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x190e	          0x83f809	                              cmp eax, 9	      1086	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x1911	            0x7612	                           jbe 0x4001965	      1086	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x1913	        0x837ddc22	           cmp dword [rbp - 0x24], 0x22 	      1086	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x1917	            0x740c	                            je 0x4001965	      1086	ops.c	FUNCTION_21	IF_1	IF_2	CALL_1
0x1919	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1087	ops.c	FUNCTION_21	IF_1	IF_2
0x1920	      0xe99c000000	                           jmp 0x4001a01	      1087	ops.c	FUNCTION_21	IF_1	IF_2
0x1925	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1090	ops.c	FUNCTION_21	IF_1	ELSE_1
0x1928	    0x890500000000	            mov dword [0x0400196e], eax 	      1090	ops.c	FUNCTION_21	IF_1	ELSE_1
0x192e	      0xe800000000	                          call 0x4001973	      1091	ops.c	FUNCTION_21	IF_1	ELSE_1	CALL_2
0x1933	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1092	ops.c	FUNCTION_21	IF_1	ELSE_1
0x1936	    0x890500000000	            mov dword [0x0400197c], eax 	      1092	ops.c	FUNCTION_21	IF_1	ELSE_1
0x193c	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	      1093	ops.c	FUNCTION_21	IF_1	ELSE_1
0x1943	            0xeb7c	                           jmp 0x4001a01	      1093	ops.c	FUNCTION_21	IF_1	ELSE_1
0x1945	    0xc70500000000	               mov dword [0x0400198f], 0	      1103	ops.c	FUNCTION_21	ELSE_2
0x194f	      0xbf00000000	                              mov edi, 0	      1104	ops.c	FUNCTION_21	ELSE_2	CALL_3
0x1954	      0xe800000000	                          call 0x4001999	      1104	ops.c	FUNCTION_21	ELSE_2	CALL_3
0x1959	      0xe800000000	                          call 0x400199e	      1105	ops.c	FUNCTION_21	ELSE_2	CALL_4
0x195e	        0x488945e8	             mov qword [rbp - 0x18], rax	      1105	ops.c	FUNCTION_21	ELSE_2	CALL_4
0x1962	      0x48837de800	               cmp qword [rbp - 0x18], 0	      1106	ops.c	FUNCTION_21	ELSE_2	IF_3
0x1967	            0x7509	                           jne 0x40019b2	      1106	ops.c	FUNCTION_21	ELSE_2	IF_3
0x1969	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1107	ops.c	FUNCTION_21	ELSE_2	IF_3
0x1970	            0xeb4f	                           jmp 0x4001a01	      1107	ops.c	FUNCTION_21	ELSE_2	IF_3
0x1972	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1111	ops.c	FUNCTION_21	ELSE_2	ELSE_3	CALL_5
0x1976	          0x4889c7	                            mov rdi, rax	      1111	ops.c	FUNCTION_21	ELSE_2	ELSE_3	CALL_5
0x1979	      0xe800000000	                          call 0x40019be	      1111	ops.c	FUNCTION_21	ELSE_2	ELSE_3	CALL_5
0x197e	    0x488b05000000	            mov rax, qword [0x040019c5] 	      1117	ops.c	FUNCTION_21	ELSE_2	ELSE_3
0x1985	        0x488945f0	             mov qword [rbp - 0x10], rax	      1117	ops.c	FUNCTION_21	ELSE_2	ELSE_3
0x1989	    0x488b05000000	            mov rax, qword [0x040019d0] 	      1118	ops.c	FUNCTION_21	ELSE_2	ELSE_3
0x1990	        0x488945f8	                mov qword [rbp - 8], rax	      1118	ops.c	FUNCTION_21	ELSE_2	ELSE_3
0x1994	    0x8b0500000000	            mov eax, dword [0x040019da] 	      1120	ops.c	FUNCTION_21	ELSE_2	ELSE_3	CALL_6
0x199a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1120	ops.c	FUNCTION_21	ELSE_2	ELSE_3	CALL_6
0x199e	          0x4889d6	                            mov rsi, rdx	      1120	ops.c	FUNCTION_21	ELSE_2	ELSE_3	CALL_6
0x19a1	            0x89c7	                            mov edi, eax	      1120	ops.c	FUNCTION_21	ELSE_2	ELSE_3	CALL_6
0x19a3	      0xe81e000000	                     call sym.stuff_yank	      1120	ops.c	FUNCTION_21	ELSE_2	ELSE_3	CALL_6
0x19a8	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1120	ops.c	FUNCTION_21	ELSE_2	ELSE_3	CALL_6
0x19ab	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1122	ops.c	FUNCTION_21	ELSE_2	ELSE_3
0x19af	    0x488905000000	            mov qword [0x040019f6], rax 	      1122	ops.c	FUNCTION_21	ELSE_2	ELSE_3
0x19b6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1123	ops.c	FUNCTION_21	ELSE_2	ELSE_3
0x19ba	    0x488905000000	            mov qword [0x04001a01], rax 	      1123	ops.c	FUNCTION_21	ELSE_2	ELSE_3
0x19c1	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1126	ops.c	FUNCTION_21
0x19c4	              0xc9	                                   leave	      1127	ops.c	FUNCTION_21
0x19c5	              0xc3	                                     ret	      1127	ops.c	FUNCTION_21
yank_register_mline	CALL,2:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,2	29
0x187b	              0x55	                                push rbp	      1060	ops.c	FUNCTION_20
0x187c	          0x4889e5	                            mov rbp, rsp	      1060	ops.c	FUNCTION_20
0x187f	        0x4883ec10	                           sub rsp, 0x10	      1060	ops.c	FUNCTION_20
0x1883	          0x897dfc	                mov dword [rbp - 4], edi	      1060	ops.c	FUNCTION_20
0x1886	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1061	ops.c	FUNCTION_20	IF_1	CALL_1
0x188a	            0x741a	                            je 0x40018e6	      1061	ops.c	FUNCTION_20	IF_1	CALL_1
0x188c	          0x8b45fc	                mov eax, dword [rbp - 4]	      1061	ops.c	FUNCTION_20	IF_1	CALL_1
0x188f	      0xbe00000000	                              mov esi, 0	      1061	ops.c	FUNCTION_20	IF_1	CALL_1
0x1894	            0x89c7	                            mov edi, eax	      1061	ops.c	FUNCTION_20	IF_1	CALL_1
0x1896	      0xe800000000	                          call 0x40018db	      1061	ops.c	FUNCTION_20	IF_1	CALL_1
0x189b	            0x85c0	                           test eax, eax	      1061	ops.c	FUNCTION_20	IF_1	CALL_1
0x189d	            0x7507	                           jne 0x40018e6	      1061	ops.c	FUNCTION_20	IF_1	CALL_1
0x189f	      0xb800000000	                              mov eax, 0	      1062	ops.c	FUNCTION_20	IF_1
0x18a4	            0xeb2f	                           jmp 0x4001915	      1062	ops.c	FUNCTION_20	IF_1
0x18a6	        0x837dfc5f	               cmp dword [rbp - 4], 0x5f	      1063	ops.c	FUNCTION_20	IF_2
0x18aa	            0x7507	                           jne 0x40018f3	      1063	ops.c	FUNCTION_20	IF_2
0x18ac	      0xb800000000	                              mov eax, 0	      1064	ops.c	FUNCTION_20	IF_2
0x18b1	            0xeb22	                           jmp 0x4001915	      1064	ops.c	FUNCTION_20	IF_2
0x18b3	          0x8b45fc	                mov eax, dword [rbp - 4]	      1065	ops.c	FUNCTION_20	CALL_2
0x18b6	      0xbe00000000	                              mov esi, 0	      1065	ops.c	FUNCTION_20	CALL_2
0x18bb	            0x89c7	                            mov edi, eax	      1065	ops.c	FUNCTION_20	CALL_2
0x18bd	      0xe800000000	                          call 0x4001902	      1065	ops.c	FUNCTION_20	CALL_2
0x18c2	    0x488b05000000	            mov rax, qword [0x04001909] 	      1066	ops.c	FUNCTION_20
0x18c9	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      1066	ops.c	FUNCTION_20
0x18cd	            0x3c01	                               cmp al, 1	      1066	ops.c	FUNCTION_20
0x18cf	           0xf94c0	                                 sete al	      1066	ops.c	FUNCTION_20
0x18d2	           0xfb6c0	                           movzx eax, al	      1066	ops.c	FUNCTION_20
0x18d5	              0xc9	                                   leave	      1067	ops.c	FUNCTION_20
0x18d6	              0xc3	                                     ret	      1067	ops.c	FUNCTION_20
get_spec_reg	CALL,15:FOR,0:SWITCH,1:functions,0:WHILE,0:DO,0:ELSE,0:IF,6	146
0x236a	              0x55	                                push rbp	      1500	ops.c	FUNCTION_28
0x236b	          0x4889e5	                            mov rbp, rsp	      1500	ops.c	FUNCTION_28
0x236e	        0x4883ec30	                           sub rsp, 0x30	      1500	ops.c	FUNCTION_28
0x2372	          0x897dec	             mov dword [rbp - 0x14], edi	      1500	ops.c	FUNCTION_28
0x2375	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1500	ops.c	FUNCTION_28
0x2379	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1500	ops.c	FUNCTION_28
0x237d	          0x894de8	             mov dword [rbp - 0x18], ecx	      1500	ops.c	FUNCTION_28
0x2380	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1503	ops.c	FUNCTION_28
0x2384	    0x48c700000000	                      mov qword [rax], 0	      1503	ops.c	FUNCTION_28
0x238b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1504	ops.c	FUNCTION_28
0x238f	    0xc70000000000	                      mov dword [rax], 0	      1504	ops.c	FUNCTION_28
0x2395	        0x837dec5f	           cmp dword [rbp - 0x14], 0x5f 	      1505	ops.c	FUNCTION_28	SWITCH_1
0x2399	     0xf8705020000	                            ja 0x40025e4	      1505	ops.c	FUNCTION_28	SWITCH_1
0x239f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1505	ops.c	FUNCTION_28	SWITCH_1
0x23a2	    0x488b04c50000	                  mov rax, qword [rax*8]	      1505	ops.c	FUNCTION_28	SWITCH_1
0x23aa	            0xffe0	                                 jmp rax	      1505	ops.c	FUNCTION_28	SWITCH_1
0x23ac	        0x837de800	               cmp dword [rbp - 0x18], 0	      1508	ops.c	FUNCTION_28	SWITCH_1	IF_1
0x23b0	            0x7405	                            je 0x40023f7	      1508	ops.c	FUNCTION_28	SWITCH_1	IF_1
0x23b2	      0xe800000000	                          call 0x40023f7	      1509	ops.c	FUNCTION_28	SWITCH_1	CALL_1
0x23b7	    0x488b05000000	            mov rax, qword [0x040023fe] 	      1510	ops.c	FUNCTION_28	SWITCH_1
0x23be	    0x488b90980000	            mov rdx, qword [rax + 0x98] 	      1510	ops.c	FUNCTION_28	SWITCH_1
0x23c5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1510	ops.c	FUNCTION_28	SWITCH_1
0x23c9	          0x488910	                    mov qword [rax], rdx	      1510	ops.c	FUNCTION_28	SWITCH_1
0x23cc	      0xb801000000	                              mov eax, 1	      1511	ops.c	FUNCTION_28	SWITCH_1
0x23d1	      0xe9d3010000	                           jmp 0x40025e9	      1511	ops.c	FUNCTION_28	SWITCH_1
0x23d6	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1514	ops.c	FUNCTION_28	SWITCH_1	CALL_2
0x23d9	            0x89c7	                            mov edi, eax	      1514	ops.c	FUNCTION_28	SWITCH_1	CALL_2
0x23db	      0xe800000000	                          call 0x4002420	      1514	ops.c	FUNCTION_28	SWITCH_1	CALL_2
0x23e0	          0x4889c2	                            mov rdx, rax	      1514	ops.c	FUNCTION_28	SWITCH_1	CALL_2
0x23e3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1514	ops.c	FUNCTION_28	SWITCH_1	CALL_2
0x23e7	          0x488910	                    mov qword [rax], rdx	      1514	ops.c	FUNCTION_28	SWITCH_1	CALL_2
0x23ea	      0xb801000000	                              mov eax, 1	      1515	ops.c	FUNCTION_28	SWITCH_1
0x23ef	      0xe9b5010000	                           jmp 0x40025e9	      1515	ops.c	FUNCTION_28	SWITCH_1
0x23f4	      0xe800000000	                          call 0x4002439	      1519	ops.c	FUNCTION_28	SWITCH_1	CALL_3
0x23f9	          0x4889c2	                            mov rdx, rax	      1519	ops.c	FUNCTION_28	SWITCH_1	CALL_3
0x23fc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1519	ops.c	FUNCTION_28	SWITCH_1	CALL_3
0x2400	          0x488910	                    mov qword [rax], rdx	      1519	ops.c	FUNCTION_28	SWITCH_1	CALL_3
0x2403	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1520	ops.c	FUNCTION_28	SWITCH_1
0x2407	    0xc70001000000	                      mov dword [rax], 1	      1520	ops.c	FUNCTION_28	SWITCH_1
0x240d	      0xb801000000	                              mov eax, 1	      1521	ops.c	FUNCTION_28	SWITCH_1
0x2412	      0xe992010000	                           jmp 0x40025e9	      1521	ops.c	FUNCTION_28	SWITCH_1
0x2417	    0x488b05000000	            mov rax, qword [0x0400245e] 	      1525	ops.c	FUNCTION_28	SWITCH_1	IF_2
0x241e	          0x4885c0	                           test rax, rax	      1525	ops.c	FUNCTION_28	SWITCH_1	IF_2
0x2421	            0x7518	                           jne 0x400247b	      1525	ops.c	FUNCTION_28	SWITCH_1	IF_2
0x2423	        0x837de800	               cmp dword [rbp - 0x18], 0	      1525	ops.c	FUNCTION_28	SWITCH_1	IF_2
0x2427	            0x7412	                            je 0x400247b	      1525	ops.c	FUNCTION_28	SWITCH_1	IF_2
0x2429	      0xbf00000000	                              mov edi, 0	      1526	ops.c	FUNCTION_28	SWITCH_1	CALL_5
0x242e	      0xe800000000	                          call 0x4002473	      1526	ops.c	FUNCTION_28	SWITCH_1	CALL_5
0x2433	          0x4889c7	                            mov rdi, rax	      1526	ops.c	FUNCTION_28	SWITCH_1	CALL_5
0x2436	      0xe800000000	                          call 0x400247b	      1526	ops.c	FUNCTION_28	SWITCH_1	CALL_5
0x243b	    0x488b15000000	            mov rdx, qword [0x04002482] 	      1527	ops.c	FUNCTION_28	SWITCH_1
0x2442	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1527	ops.c	FUNCTION_28	SWITCH_1
0x2446	          0x488910	                    mov qword [rax], rdx	      1527	ops.c	FUNCTION_28	SWITCH_1
0x2449	      0xb801000000	                              mov eax, 1	      1528	ops.c	FUNCTION_28	SWITCH_1
0x244e	      0xe956010000	                           jmp 0x40025e9	      1528	ops.c	FUNCTION_28	SWITCH_1
0x2453	      0xe800000000	                          call 0x4002498	      1531	ops.c	FUNCTION_28	SWITCH_1	IF_3	CALL_6
0x2458	          0x4885c0	                           test rax, rax	      1531	ops.c	FUNCTION_28	SWITCH_1	IF_3	CALL_6
0x245b	            0x7518	                           jne 0x40024b5	      1531	ops.c	FUNCTION_28	SWITCH_1	IF_3	CALL_6
0x245d	        0x837de800	               cmp dword [rbp - 0x18], 0	      1531	ops.c	FUNCTION_28	SWITCH_1	IF_3	CALL_6
0x2461	            0x7412	                            je 0x40024b5	      1531	ops.c	FUNCTION_28	SWITCH_1	IF_3	CALL_6
0x2463	      0xbf00000000	                              mov edi, 0	      1532	ops.c	FUNCTION_28	SWITCH_1	CALL_8
0x2468	      0xe800000000	                          call 0x40024ad	      1532	ops.c	FUNCTION_28	SWITCH_1	CALL_8
0x246d	          0x4889c7	                            mov rdi, rax	      1532	ops.c	FUNCTION_28	SWITCH_1	CALL_8
0x2470	      0xe800000000	                          call 0x40024b5	      1532	ops.c	FUNCTION_28	SWITCH_1	CALL_8
0x2475	      0xe800000000	                          call 0x40024ba	      1533	ops.c	FUNCTION_28	SWITCH_1	CALL_9
0x247a	          0x4889c2	                            mov rdx, rax	      1533	ops.c	FUNCTION_28	SWITCH_1	CALL_9
0x247d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1533	ops.c	FUNCTION_28	SWITCH_1	CALL_9
0x2481	          0x488910	                    mov qword [rax], rdx	      1533	ops.c	FUNCTION_28	SWITCH_1	CALL_9
0x2484	      0xb801000000	                              mov eax, 1	      1534	ops.c	FUNCTION_28	SWITCH_1
0x2489	      0xe91b010000	                           jmp 0x40025e9	      1534	ops.c	FUNCTION_28	SWITCH_1
0x248e	      0xe800000000	                          call 0x40024d3	      1537	ops.c	FUNCTION_28	SWITCH_1	CALL_10
0x2493	          0x4889c2	                            mov rdx, rax	      1537	ops.c	FUNCTION_28	SWITCH_1	CALL_10
0x2496	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1537	ops.c	FUNCTION_28	SWITCH_1	CALL_10
0x249a	          0x488910	                    mov qword [rax], rdx	      1537	ops.c	FUNCTION_28	SWITCH_1	CALL_10
0x249d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1538	ops.c	FUNCTION_28	SWITCH_1
0x24a1	    0xc70001000000	                      mov dword [rax], 1	      1538	ops.c	FUNCTION_28	SWITCH_1
0x24a7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1539	ops.c	FUNCTION_28	SWITCH_1	IF_4
0x24ab	          0x488b00	                    mov rax, qword [rax]	      1539	ops.c	FUNCTION_28	SWITCH_1	IF_4
0x24ae	          0x4885c0	                           test rax, rax	      1539	ops.c	FUNCTION_28	SWITCH_1	IF_4
0x24b1	            0x7518	                           jne 0x400250b	      1539	ops.c	FUNCTION_28	SWITCH_1	IF_4
0x24b3	        0x837de800	               cmp dword [rbp - 0x18], 0	      1539	ops.c	FUNCTION_28	SWITCH_1	IF_4
0x24b7	            0x7412	                            je 0x400250b	      1539	ops.c	FUNCTION_28	SWITCH_1	IF_4
0x24b9	      0xbf00000000	                              mov edi, 0	      1540	ops.c	FUNCTION_28	SWITCH_1	CALL_12
0x24be	      0xe800000000	                          call 0x4002503	      1540	ops.c	FUNCTION_28	SWITCH_1	CALL_12
0x24c3	          0x4889c7	                            mov rdi, rax	      1540	ops.c	FUNCTION_28	SWITCH_1	CALL_12
0x24c6	      0xe800000000	                          call 0x400250b	      1540	ops.c	FUNCTION_28	SWITCH_1	CALL_12
0x24cb	      0xb801000000	                              mov eax, 1	      1541	ops.c	FUNCTION_28	SWITCH_1
0x24d0	      0xe9d4000000	                           jmp 0x40025e9	      1541	ops.c	FUNCTION_28	SWITCH_1
0x24d5	        0x837de800	               cmp dword [rbp - 0x18], 0	      1546	ops.c	FUNCTION_28	SWITCH_1	IF_5
0x24d9	            0x750a	                           jne 0x4002525	      1546	ops.c	FUNCTION_28	SWITCH_1	IF_5
0x24db	      0xb800000000	                              mov eax, 0	      1547	ops.c	FUNCTION_28	SWITCH_1	IF_5
0x24e0	      0xe9c4000000	                           jmp 0x40025e9	      1547	ops.c	FUNCTION_28	SWITCH_1	IF_5
0x24e5	        0x837dec10	           cmp dword [rbp - 0x14], 0x10 	      1548	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x24e9	            0x7507	                           jne 0x4002532	      1548	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x24eb	      0xb807000000	                              mov eax, 7	      1548	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x24f0	            0xeb05	                           jmp 0x4002537	      1548	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x24f2	      0xb805000000	                              mov eax, 5	      1548	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x24f7	      0xba00000000	                              mov edx, 0	      1548	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x24fc	      0xbe01000000	                              mov esi, 1	      1548	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x2501	            0x89c7	                            mov edi, eax	      1548	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x2503	      0xe800000000	                          call 0x4002548	      1548	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x2508	          0x4889c2	                            mov rdx, rax	      1548	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x250b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1548	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x250f	          0x488910	                    mov qword [rax], rdx	      1548	ops.c	FUNCTION_28	SWITCH_1	CALL_13
0x2512	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1550	ops.c	FUNCTION_28	SWITCH_1
0x2516	    0xc70001000000	                      mov dword [rax], 1	      1550	ops.c	FUNCTION_28	SWITCH_1
0x251c	      0xb801000000	                              mov eax, 1	      1551	ops.c	FUNCTION_28	SWITCH_1
0x2521	      0xe983000000	                           jmp 0x40025e9	      1551	ops.c	FUNCTION_28	SWITCH_1
0x2526	        0x837de800	               cmp dword [rbp - 0x18], 0	      1556	ops.c	FUNCTION_28	SWITCH_1	IF_6
0x252a	            0x7507	                           jne 0x4002573	      1556	ops.c	FUNCTION_28	SWITCH_1	IF_6
0x252c	      0xb800000000	                              mov eax, 0	      1557	ops.c	FUNCTION_28	SWITCH_1	IF_6
0x2531	            0xeb76	                           jmp 0x40025e9	      1557	ops.c	FUNCTION_28	SWITCH_1	IF_6
0x2533	        0x837dec17	           cmp dword [rbp - 0x14], 0x17 	      1558	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x2537	            0x7507	                           jne 0x4002580	      1558	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x2539	      0xba03000000	                              mov edx, 3	      1558	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x253e	            0xeb05	                           jmp 0x4002585	      1558	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x2540	      0xba02000000	                              mov edx, 2	      1558	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x2545	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1558	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x2549	            0x89d6	                            mov esi, edx	      1558	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x254b	          0x4889c7	                            mov rdi, rax	      1558	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x254e	      0xe800000000	                          call 0x4002593	      1558	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x2553	          0x8945fc	                mov dword [rbp - 4], eax	      1558	ops.c	FUNCTION_28	SWITCH_1	CALL_14
0x2556	        0x837dfc00	                  cmp dword [rbp - 4], 0	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x255a	            0x7419	                            je 0x40025b5	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x255c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x2560	          0x488b00	                    mov rax, qword [rax]	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x2563	          0x8b55fc	                mov edx, dword [rbp - 4]	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x2566	            0x89d6	                            mov esi, edx	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x2568	          0x4889c7	                            mov rdi, rax	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x256b	      0xe800000000	                          call 0x40025b0	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x2570	          0x4889c2	                            mov rdx, rax	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x2573	            0xeb05	                           jmp 0x40025ba	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x2575	      0xba00000000	                              mov edx, 0	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x257a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x257e	          0x488910	                    mov qword [rax], rdx	      1560	ops.c	FUNCTION_28	SWITCH_1	CALL_15
0x2581	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1561	ops.c	FUNCTION_28	SWITCH_1
0x2585	    0xc70001000000	                      mov dword [rax], 1	      1561	ops.c	FUNCTION_28	SWITCH_1
0x258b	      0xb801000000	                              mov eax, 1	      1562	ops.c	FUNCTION_28	SWITCH_1
0x2590	            0xeb17	                           jmp 0x40025e9	      1562	ops.c	FUNCTION_28	SWITCH_1
0x2592	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1565	ops.c	FUNCTION_28	SWITCH_1
0x2596	    0x48c700000000	                      mov qword [rax], 0	      1565	ops.c	FUNCTION_28	SWITCH_1
0x259d	      0xb801000000	                              mov eax, 1	      1566	ops.c	FUNCTION_28	SWITCH_1
0x25a2	            0xeb05	                           jmp 0x40025e9	      1566	ops.c	FUNCTION_28	SWITCH_1
0x25a4	      0xb800000000	                              mov eax, 0	      1569	ops.c	FUNCTION_28
0x25a9	              0xc9	                                   leave	      1570	ops.c	FUNCTION_28
0x25aa	              0xc3	                                     ret	      1570	ops.c	FUNCTION_28
fmt_check_par	CALL,3:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,0	77
0xa48d	              0x55	                                push rbp	      5216	ops.c	FUNCTION_62
0xa48e	          0x4889e5	                            mov rbp, rsp	      5216	ops.c	FUNCTION_62
0xa491	        0x4883ec30	                           sub rsp, 0x30	      5216	ops.c	FUNCTION_62
0xa495	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5216	ops.c	FUNCTION_62
0xa499	        0x488975e0	             mov qword [rbp - 0x20], rsi	      5216	ops.c	FUNCTION_62
0xa49d	        0x488955d8	             mov qword [rbp - 0x28], rdx	      5216	ops.c	FUNCTION_62
0xa4a1	          0x894dd4	             mov dword [rbp - 0x2c], ecx	      5216	ops.c	FUNCTION_62
0xa4a4	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      5217	ops.c	FUNCTION_62
0xa4ac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5220	ops.c	FUNCTION_62	CALL_1
0xa4b0	          0x4889c7	                            mov rdi, rax	      5220	ops.c	FUNCTION_62	CALL_1
0xa4b3	      0xe800000000	                          call 0x400a4f8	      5220	ops.c	FUNCTION_62	CALL_1
0xa4b8	        0x488945f8	                mov qword [rbp - 8], rax	      5220	ops.c	FUNCTION_62	CALL_1
0xa4bc	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      5221	ops.c	FUNCTION_62	IF_1
0xa4c0	            0x7424	                            je 0x400a526	      5221	ops.c	FUNCTION_62	IF_1
0xa4c2	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	      5222	ops.c	FUNCTION_62	CALL_2
0xa4c6	        0x488b45f8	                mov rax, qword [rbp - 8]	      5222	ops.c	FUNCTION_62	CALL_2
0xa4ca	      0xb901000000	                              mov ecx, 1	      5222	ops.c	FUNCTION_62	CALL_2
0xa4cf	      0xba00000000	                              mov edx, 0	      5222	ops.c	FUNCTION_62	CALL_2
0xa4d4	          0x4889c7	                            mov rdi, rax	      5222	ops.c	FUNCTION_62	CALL_2
0xa4d7	      0xe800000000	                          call 0x400a51c	      5222	ops.c	FUNCTION_62	CALL_2
0xa4dc	            0x89c2	                            mov edx, eax	      5222	ops.c	FUNCTION_62	CALL_2
0xa4de	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5222	ops.c	FUNCTION_62	CALL_2
0xa4e2	            0x8910	                    mov dword [rax], edx	      5222	ops.c	FUNCTION_62	CALL_2
0xa4e4	            0xeb0a	                           jmp 0x400a530	      5222	ops.c	FUNCTION_62	CALL_2
0xa4e6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5224	ops.c	FUNCTION_62	ELSE_1
0xa4ea	    0xc70000000000	                      mov dword [rax], 0	      5224	ops.c	FUNCTION_62	ELSE_1
0xa4f0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5226	ops.c	FUNCTION_62	ELSE_1	IF_2
0xa4f4	            0x8b00	                    mov eax, dword [rax]	      5226	ops.c	FUNCTION_62	ELSE_1	IF_2
0xa4f6	            0x85c0	                           test eax, eax	      5226	ops.c	FUNCTION_62	ELSE_1	IF_2
0xa4f8	            0x7e33	                           jle 0x400a56d	      5226	ops.c	FUNCTION_62	ELSE_1	IF_2
0xa4fa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      5231	ops.c	FUNCTION_62	ELSE_1	IF_2
0xa4fe	          0x488b00	                    mov rax, qword [rax]	      5231	ops.c	FUNCTION_62	ELSE_1	IF_2
0xa501	        0x488945f0	             mov qword [rbp - 0x10], rax	      5231	ops.c	FUNCTION_62	ELSE_1	IF_2
0xa505	            0xeb05	                           jmp 0x400a54c	      5232	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0xa507	      0x488345f001	               add qword [rbp - 0x10], 1	      5233	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0xa50c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5232	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0xa510	           0xfb600	                   movzx eax, byte [rax]	      5232	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0xa513	            0x84c0	                             test al, al	      5232	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0xa515	            0x7416	                            je 0x400a56d	      5232	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0xa517	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5232	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0xa51b	           0xfb600	                   movzx eax, byte [rax]	      5232	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0xa51e	            0x3c3a	                            cmp al, 0x3a	      5232	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0xa520	            0x740b	                            je 0x400a56d	      5232	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0xa522	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5232	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0xa526	           0xfb600	                   movzx eax, byte [rax]	      5232	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0xa529	            0x3c65	                            cmp al, 0x65	      5232	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0xa52b	            0x75da	                           jne 0x400a547	      5232	ops.c	FUNCTION_62	ELSE_1	IF_2	WHILE_1
0xa52d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5236	ops.c	FUNCTION_62	CALL_3
0xa531	            0x8b00	                    mov eax, dword [rax]	      5236	ops.c	FUNCTION_62	CALL_3
0xa533	          0x4863d0	                         movsxd rdx, eax	      5236	ops.c	FUNCTION_62	CALL_3
0xa536	        0x488b45f8	                mov rax, qword [rbp - 8]	      5236	ops.c	FUNCTION_62	CALL_3
0xa53a	          0x4801d0	                            add rax, rdx	      5236	ops.c	FUNCTION_62	CALL_3
0xa53d	          0x4889c7	                            mov rdi, rax	      5236	ops.c	FUNCTION_62	CALL_3
0xa540	      0xe800000000	                          call 0x400a585	      5236	ops.c	FUNCTION_62	CALL_3
0xa545	           0xfb600	                   movzx eax, byte [rax]	      5236	ops.c	FUNCTION_62	CALL_3
0xa548	            0x84c0	                             test al, al	      5238	ops.c	FUNCTION_62	CALL_4
0xa54a	            0x742f	                            je 0x400a5bb	      5238	ops.c	FUNCTION_62	CALL_4
0xa54c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      5237	ops.c	FUNCTION_62
0xa550	            0x8b00	                    mov eax, dword [rax]	      5237	ops.c	FUNCTION_62
0xa552	            0x85c0	                           test eax, eax	      5237	ops.c	FUNCTION_62
0xa554	            0x7e0b	                           jle 0x400a5a1	      5237	ops.c	FUNCTION_62
0xa556	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5237	ops.c	FUNCTION_62
0xa55a	           0xfb600	                   movzx eax, byte [rax]	      5237	ops.c	FUNCTION_62
0xa55d	            0x3c65	                            cmp al, 0x65	      5237	ops.c	FUNCTION_62
0xa55f	            0x741a	                            je 0x400a5bb	      5237	ops.c	FUNCTION_62
0xa561	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5238	ops.c	FUNCTION_62	CALL_4
0xa565	      0xba00000000	                              mov edx, 0	      5238	ops.c	FUNCTION_62	CALL_4
0xa56a	      0xbe00000000	                              mov esi, 0	      5238	ops.c	FUNCTION_62	CALL_4
0xa56f	          0x4889c7	                            mov rdi, rax	      5238	ops.c	FUNCTION_62	CALL_4
0xa572	      0xe800000000	                          call 0x400a5b7	      5238	ops.c	FUNCTION_62	CALL_4
0xa577	            0x85c0	                           test eax, eax	      5238	ops.c	FUNCTION_62	CALL_4
0xa579	            0x7407	                            je 0x400a5c2	      5238	ops.c	FUNCTION_62	CALL_4
0xa57b	      0xb801000000	                              mov eax, 1	      5238	ops.c	FUNCTION_62	CALL_4
0xa580	            0xeb05	                           jmp 0x400a5c7	      5238	ops.c	FUNCTION_62	CALL_4
0xa582	      0xb800000000	                              mov eax, 0	      5238	ops.c	FUNCTION_62	CALL_4
0xa587	              0xc9	                                   leave	      5239	ops.c	FUNCTION_62
0xa588	              0xc3	                                     ret	      5239	ops.c	FUNCTION_62
copy_yank_reg	CALL,4:FOR,1:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,1:IF,2	72
0x68f9	              0x55	                                push rbp	      3382	ops.c	FUNCTION_47
0x68fa	          0x4889e5	                            mov rbp, rsp	      3382	ops.c	FUNCTION_47
0x68fd	              0x53	                                push rbx	      3382	ops.c	FUNCTION_47
0x68fe	        0x4883ec28	                           sub rsp, 0x28	      3382	ops.c	FUNCTION_47
0x6902	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      3382	ops.c	FUNCTION_47
0x6906	    0x488b05000000	            mov rax, qword [0x0400694d] 	      3383	ops.c	FUNCTION_47
0x690d	        0x488945e8	             mov qword [rbp - 0x18], rax	      3383	ops.c	FUNCTION_47
0x6911	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      3386	ops.c	FUNCTION_47
0x6915	    0x488905000000	            mov qword [0x0400695c], rax 	      3386	ops.c	FUNCTION_47
0x691c	      0xe829f1ffff	                  call sym.free_yank_all	      3387	ops.c	FUNCTION_47	CALL_1
0x6921	    0x488b05000000	            mov rax, qword [0x04006968] 	      3388	ops.c	FUNCTION_47
0x6928	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      3388	ops.c	FUNCTION_47
0x692c	          0x488b0a	                    mov rcx, qword [rdx]	      3388	ops.c	FUNCTION_47
0x692f	          0x488908	                    mov qword [rax], rcx	      3388	ops.c	FUNCTION_47
0x6932	        0x488b4a08	                mov rcx, qword [rdx + 8]	      3388	ops.c	FUNCTION_47
0x6936	        0x48894808	                mov qword [rax + 8], rcx	      3388	ops.c	FUNCTION_47
0x693a	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      3388	ops.c	FUNCTION_47
0x693e	        0x48894810	             mov qword [rax + 0x10], rcx	      3388	ops.c	FUNCTION_47
0x6942	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	      3388	ops.c	FUNCTION_47
0x6946	        0x48895018	             mov qword [rax + 0x18], rdx	      3388	ops.c	FUNCTION_47
0x694a	    0x488b1d000000	            mov rbx, qword [0x04006991] 	      3389	ops.c	FUNCTION_47	CALL_2
0x6951	    0x488b05000000	            mov rax, qword [0x04006998] 	      3390	ops.c	FUNCTION_47
0x6958	        0x488b4008	                mov rax, qword [rax + 8]	      3390	ops.c	FUNCTION_47
0x695c	        0x48c1e003	                              shl rax, 3	      3389	ops.c	FUNCTION_47	CALL_2
0x6960	      0xbe01000000	                              mov esi, 1	      3389	ops.c	FUNCTION_47	CALL_2
0x6965	          0x4889c7	                            mov rdi, rax	      3389	ops.c	FUNCTION_47	CALL_2
0x6968	      0xe800000000	                          call 0x40069ad	      3389	ops.c	FUNCTION_47	CALL_2
0x696d	          0x488903	                    mov qword [rbx], rax	      3389	ops.c	FUNCTION_47	CALL_2
0x6970	    0x488b05000000	            mov rax, qword [0x040069b7] 	      3391	ops.c	FUNCTION_47	IF_1
0x6977	          0x488b00	                    mov rax, qword [rax]	      3391	ops.c	FUNCTION_47	IF_1
0x697a	          0x4885c0	                           test rax, rax	      3391	ops.c	FUNCTION_47	IF_1
0x697d	            0x7511	                           jne 0x40069d0	      3391	ops.c	FUNCTION_47	IF_1
0x697f	    0x488b05000000	            mov rax, qword [0x040069c6] 	      3392	ops.c	FUNCTION_47	IF_1
0x6986	    0x48c740080000	                  mov qword [rax + 8], 0	      3392	ops.c	FUNCTION_47	IF_1
0x698e	            0xeb7b	                           jmp 0x4006a4b	      3392	ops.c	FUNCTION_47	IF_1
0x6990	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      3394	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x6998	            0xeb60	                           jmp 0x4006a3a	      3394	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x699a	    0x488b05000000	            mov rax, qword [0x040069e1] 	      3395	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x69a1	          0x488b00	                    mov rax, qword [rax]	      3395	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x69a4	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3395	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x69a8	        0x48c1e203	                              shl rdx, 3	      3395	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x69ac	        0x488d1c10	                    lea rbx, [rax + rdx]	      3395	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x69b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3395	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x69b4	          0x488b00	                    mov rax, qword [rax]	      3395	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x69b7	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      3395	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x69bb	        0x48c1e203	                              shl rdx, 3	      3395	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x69bf	          0x4801d0	                            add rax, rdx	      3395	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x69c2	          0x488b00	                    mov rax, qword [rax]	      3395	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x69c5	          0x4889c7	                            mov rdi, rax	      3395	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x69c8	      0xe800000000	                          call 0x4006a0d	      3395	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x69cd	          0x488903	                    mov qword [rbx], rax	      3395	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x69d0	          0x488b03	                    mov rax, qword [rbx]	      3395	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x69d3	          0x4885c0	                           test rax, rax	      3395	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x69d6	            0x751d	                           jne 0x4006a35	      3395	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_3
0x69d8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      3397	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_4
0x69dc	          0x4889c7	                            mov rdi, rax	      3397	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_4
0x69df	      0xe8f2efffff	                      call sym.free_yank	      3397	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2	CALL_4
0x69e4	    0x488b05000000	            mov rax, qword [0x04006a2b] 	      3398	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2
0x69eb	    0x48c740080000	                  mov qword [rax + 8], 0	      3398	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2
0x69f3	            0xeb16	                           jmp 0x4006a4b	      3399	ops.c	FUNCTION_47	ELSE_1	FOR_1	IF_2
0x69f5	      0x488345e001	               add qword [rbp - 0x20], 1	      3394	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x69fa	    0x488b05000000	            mov rax, qword [0x04006a41] 	      3394	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x6a01	        0x488b4008	                mov rax, qword [rax + 8]	      3394	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x6a05	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      3394	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x6a09	            0x7f8f	                            jg 0x40069da	      3394	ops.c	FUNCTION_47	ELSE_1	FOR_1
0x6a0b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      3401	ops.c	FUNCTION_47
0x6a0f	    0x488905000000	            mov qword [0x04006a56], rax 	      3401	ops.c	FUNCTION_47
0x6a16	              0x90	                                     nop	      3402	ops.c	FUNCTION_47
0x6a17	        0x4883c428	                           add rsp, 0x28	      3402	ops.c	FUNCTION_47
0x6a1b	              0x5b	                                 pop rbx	      3402	ops.c	FUNCTION_47
0x6a1c	              0x5d	                                 pop rbp	      3402	ops.c	FUNCTION_47
0x6a1d	              0xc3	                                     ret	      3402	ops.c	FUNCTION_47
op_yank	CALL,53:FOR,2:SWITCH,1:functions,0:WHILE,1:DO,0:ELSE,9:IF,42	738
0x5a64	              0x55	                                push rbp	      3014	ops.c	FUNCTION_45
0x5a65	          0x4889e5	                            mov rbp, rsp	      3014	ops.c	FUNCTION_45
0x5a68	              0x53	                                push rbx	      3014	ops.c	FUNCTION_45
0x5a69	    0x4881ec580100	                          sub rsp, 0x158	      3014	ops.c	FUNCTION_45
0x5a70	    0x4889bda8feff	            mov qword [rbp - 0x158], rdi	      3014	ops.c	FUNCTION_45
0x5a77	    0x89b5a4feffff	            mov dword [rbp - 0x15c], esi	      3014	ops.c	FUNCTION_45
0x5a7d	    0x8995a0feffff	            mov dword [rbp - 0x160], edx	      3014	ops.c	FUNCTION_45
0x5a83	    0x64488b042528	                mov rax, qword fs:[0x28]	      3014	ops.c	FUNCTION_45
0x5a8c	        0x488945e8	             mov qword [rbp - 0x18], rax	      3014	ops.c	FUNCTION_45
0x5a90	            0x31c0	                            xor eax, eax	      3014	ops.c	FUNCTION_45
0x5a92	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3021	ops.c	FUNCTION_45
0x5a99	          0x8b4008	                mov eax, dword [rax + 8]	      3021	ops.c	FUNCTION_45
0x5a9c	    0x8985c4feffff	            mov dword [rbp - 0x13c], eax	      3021	ops.c	FUNCTION_45
0x5aa2	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3022	ops.c	FUNCTION_45
0x5aa9	        0x488b4050	            mov rax, qword [rax + 0x50] 	      3022	ops.c	FUNCTION_45
0x5aad	    0x488985f0feff	            mov qword [rbp - 0x110], rax	      3022	ops.c	FUNCTION_45
0x5ab4	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3023	ops.c	FUNCTION_45
0x5abb	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3023	ops.c	FUNCTION_45
0x5abf	    0x488985f8feff	            mov qword [rbp - 0x108], rax	      3023	ops.c	FUNCTION_45
0x5ac6	    0xc785c8feffff	              mov dword [rbp - 0x138], 0	      3028	ops.c	FUNCTION_45
0x5ad0	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3032	ops.c	FUNCTION_45	IF_1	CALL_1
0x5ad7	          0x8b4004	                mov eax, dword [rax + 4]	      3032	ops.c	FUNCTION_45	IF_1	CALL_1
0x5ada	            0x85c0	                           test eax, eax	      3032	ops.c	FUNCTION_45	IF_1	CALL_1
0x5adc	            0x7429	                            je 0x4005b47	      3032	ops.c	FUNCTION_45	IF_1	CALL_1
0x5ade	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3032	ops.c	FUNCTION_45	IF_1	CALL_1
0x5ae5	          0x8b4004	                mov eax, dword [rax + 4]	      3032	ops.c	FUNCTION_45	IF_1	CALL_1
0x5ae8	      0xbe01000000	                              mov esi, 1	      3032	ops.c	FUNCTION_45	IF_1	CALL_1
0x5aed	            0x89c7	                            mov edi, eax	      3032	ops.c	FUNCTION_45	IF_1	CALL_1
0x5aef	      0xe800000000	                          call 0x4005b34	      3032	ops.c	FUNCTION_45	IF_1	CALL_1
0x5af4	            0x85c0	                           test eax, eax	      3032	ops.c	FUNCTION_45	IF_1	CALL_1
0x5af6	            0x750f	                           jne 0x4005b47	      3032	ops.c	FUNCTION_45	IF_1	CALL_1
0x5af8	      0xe800000000	                          call 0x4005b3d	      3034	ops.c	FUNCTION_45	IF_1	CALL_2
0x5afd	      0xb800000000	                              mov eax, 0	      3035	ops.c	FUNCTION_45	IF_1
0x5b02	      0xe9e70c0000	                           jmp 0x400682e	      3035	ops.c	FUNCTION_45	IF_1
0x5b07	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3037	ops.c	FUNCTION_45	IF_2
0x5b0e	          0x8b4004	                mov eax, dword [rax + 4]	      3037	ops.c	FUNCTION_45	IF_2
0x5b11	          0x83f85f	                           cmp eax, 0x5f	      3037	ops.c	FUNCTION_45	IF_2
0x5b14	            0x750a	                           jne 0x4005b60	      3037	ops.c	FUNCTION_45	IF_2
0x5b16	      0xb801000000	                              mov eax, 1	      3038	ops.c	FUNCTION_45	IF_2
0x5b1b	      0xe9ce0c0000	                           jmp 0x400682e	      3038	ops.c	FUNCTION_45	IF_2
0x5b20	    0x8b0500000000	            mov eax, dword [0x04005b66] 	      3041	ops.c	FUNCTION_45	IF_3
0x5b26	            0x85c0	                           test eax, eax	      3041	ops.c	FUNCTION_45	IF_3
0x5b28	            0x751f	                           jne 0x4005b89	      3041	ops.c	FUNCTION_45	IF_3
0x5b2a	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3041	ops.c	FUNCTION_45	IF_3
0x5b31	          0x8b4004	                mov eax, dword [rax + 4]	      3041	ops.c	FUNCTION_45	IF_3
0x5b34	          0x83f82a	                           cmp eax, 0x2a	      3041	ops.c	FUNCTION_45	IF_3
0x5b37	            0x7510	                           jne 0x4005b89	      3041	ops.c	FUNCTION_45	IF_3
0x5b39	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3042	ops.c	FUNCTION_45	IF_3
0x5b40	    0xc74004000000	                  mov dword [rax + 4], 0	      3042	ops.c	FUNCTION_45	IF_3
0x5b47	            0xeb27	                           jmp 0x4005bb0	      3042	ops.c	FUNCTION_45	IF_3
0x5b49	    0x8b0500000000	            mov eax, dword [0x04005b8f] 	      3043	ops.c	FUNCTION_45	ELSE_1	IF_4
0x5b4f	            0x85c0	                           test eax, eax	      3043	ops.c	FUNCTION_45	ELSE_1	IF_4
0x5b51	            0x751d	                           jne 0x4005bb0	      3043	ops.c	FUNCTION_45	ELSE_1	IF_4
0x5b53	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3043	ops.c	FUNCTION_45	ELSE_1	IF_4
0x5b5a	          0x8b4004	                mov eax, dword [rax + 4]	      3043	ops.c	FUNCTION_45	ELSE_1	IF_4
0x5b5d	          0x83f82b	                           cmp eax, 0x2b	      3043	ops.c	FUNCTION_45	ELSE_1	IF_4
0x5b60	            0x750e	                           jne 0x4005bb0	      3043	ops.c	FUNCTION_45	ELSE_1	IF_4
0x5b62	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3044	ops.c	FUNCTION_45	ELSE_1	IF_4
0x5b69	    0xc74004000000	                  mov dword [rax + 4], 0	      3044	ops.c	FUNCTION_45	ELSE_1	IF_4
0x5b70	    0x83bda4feffff	              cmp dword [rbp - 0x15c], 0	      3047	ops.c	FUNCTION_45	IF_5
0x5b77	            0x7516	                           jne 0x4005bcf	      3047	ops.c	FUNCTION_45	IF_5
0x5b79	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3048	ops.c	FUNCTION_45	CALL_3
0x5b80	          0x8b4004	                mov eax, dword [rax + 4]	      3048	ops.c	FUNCTION_45	CALL_3
0x5b83	      0xbe01000000	                              mov esi, 1	      3048	ops.c	FUNCTION_45	CALL_3
0x5b88	            0x89c7	                            mov edi, eax	      3048	ops.c	FUNCTION_45	CALL_3
0x5b8a	      0xe800000000	                          call 0x4005bcf	      3048	ops.c	FUNCTION_45	CALL_3
0x5b8f	    0x488b05000000	            mov rax, qword [0x04005bd6] 	      3050	ops.c	FUNCTION_45
0x5b96	    0x48898500ffff	            mov qword [rbp - 0x100], rax	      3050	ops.c	FUNCTION_45
0x5b9d	    0x8b0500000000	            mov eax, dword [0x04005be3] 	      3052	ops.c	FUNCTION_45	IF_6
0x5ba3	            0x85c0	                           test eax, eax	      3052	ops.c	FUNCTION_45	IF_6
0x5ba5	            0x741f	                            je 0x4005c06	      3052	ops.c	FUNCTION_45	IF_6
0x5ba7	    0x488b05000000	            mov rax, qword [0x04005bee] 	      3052	ops.c	FUNCTION_45	IF_6
0x5bae	          0x488b00	                    mov rax, qword [rax]	      3052	ops.c	FUNCTION_45	IF_6
0x5bb1	          0x4885c0	                           test rax, rax	      3052	ops.c	FUNCTION_45	IF_6
0x5bb4	            0x7410	                            je 0x4005c06	      3052	ops.c	FUNCTION_45	IF_6
0x5bb6	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      3053	ops.c	FUNCTION_45	IF_6
0x5bbd	    0x488905000000	            mov qword [0x04005c04], rax 	      3053	ops.c	FUNCTION_45	IF_6
0x5bc4	            0xeb05	                           jmp 0x4005c0b	      3053	ops.c	FUNCTION_45	IF_6
0x5bc6	      0xe87ffeffff	                  call sym.free_yank_all	      3055	ops.c	FUNCTION_45	CALL_4
0x5bcb	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3061	ops.c	FUNCTION_45	IF_7
0x5bd2	          0x8b4008	                mov eax, dword [rax + 8]	      3061	ops.c	FUNCTION_45	IF_7
0x5bd5	            0x85c0	                           test eax, eax	      3061	ops.c	FUNCTION_45	IF_7
0x5bd7	            0x7578	                           jne 0x4005c91	      3061	ops.c	FUNCTION_45	IF_7
0x5bd9	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3062	ops.c	FUNCTION_45	IF_7
0x5be0	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3062	ops.c	FUNCTION_45	IF_7
0x5be3	            0x85c0	                           test eax, eax	      3062	ops.c	FUNCTION_45	IF_7
0x5be5	            0x756a	                           jne 0x4005c91	      3062	ops.c	FUNCTION_45	IF_7
0x5be7	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3063	ops.c	FUNCTION_45	IF_7
0x5bee	          0x8b4014	            mov eax, dword [rax + 0x14] 	      3063	ops.c	FUNCTION_45	IF_7
0x5bf1	            0x85c0	                           test eax, eax	      3063	ops.c	FUNCTION_45	IF_7
0x5bf3	            0x755c	                           jne 0x4005c91	      3063	ops.c	FUNCTION_45	IF_7
0x5bf5	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3064	ops.c	FUNCTION_45	IF_7
0x5bfc	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      3064	ops.c	FUNCTION_45	IF_7
0x5bff	            0x85c0	                           test eax, eax	      3064	ops.c	FUNCTION_45	IF_7
0x5c01	            0x740e	                            je 0x4005c51	      3064	ops.c	FUNCTION_45	IF_7
0x5c03	    0x488b05000000	            mov rax, qword [0x04005c4a] 	      3064	ops.c	FUNCTION_45	IF_7
0x5c0a	           0xfb600	                   movzx eax, byte [rax]	      3064	ops.c	FUNCTION_45	IF_7
0x5c0d	            0x3c6f	                            cmp al, 0x6f	      3064	ops.c	FUNCTION_45	IF_7
0x5c0f	            0x7540	                           jne 0x4005c91	      3064	ops.c	FUNCTION_45	IF_7
0x5c11	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3065	ops.c	FUNCTION_45	IF_7
0x5c18	          0x8b4060	            mov eax, dword [rax + 0x60] 	      3065	ops.c	FUNCTION_45	IF_7
0x5c1b	            0x85c0	                           test eax, eax	      3065	ops.c	FUNCTION_45	IF_7
0x5c1d	            0x7532	                           jne 0x4005c91	      3065	ops.c	FUNCTION_45	IF_7
0x5c1f	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3066	ops.c	FUNCTION_45	IF_7
0x5c26	          0x8b4038	            mov eax, dword [rax + 0x38] 	      3066	ops.c	FUNCTION_45	IF_7
0x5c29	            0x85c0	                           test eax, eax	      3066	ops.c	FUNCTION_45	IF_7
0x5c2b	            0x7524	                           jne 0x4005c91	      3066	ops.c	FUNCTION_45	IF_7
0x5c2d	    0x4883bdf0feff	              cmp qword [rbp - 0x110], 1	      3067	ops.c	FUNCTION_45	IF_7
0x5c35	            0x7e1a	                           jle 0x4005c91	      3067	ops.c	FUNCTION_45	IF_7
0x5c37	    0xc785c4feffff	              mov dword [rbp - 0x13c], 1	      3069	ops.c	FUNCTION_45	IF_7
0x5c41	    0x4883adf8feff	              sub qword [rbp - 0x108], 1	      3070	ops.c	FUNCTION_45	IF_7
0x5c49	    0x4883adf0feff	              sub qword [rbp - 0x110], 1	      3071	ops.c	FUNCTION_45	IF_7
0x5c51	    0x488b05000000	            mov rax, qword [0x04005c98] 	      3074	ops.c	FUNCTION_45
0x5c58	    0x488b95f0feff	            mov rdx, qword [rbp - 0x110]	      3074	ops.c	FUNCTION_45
0x5c5f	        0x48895008	                mov qword [rax + 8], rdx	      3074	ops.c	FUNCTION_45
0x5c63	    0x488b05000000	            mov rax, qword [0x04005caa] 	      3075	ops.c	FUNCTION_45
0x5c6a	    0x8b95c4feffff	            mov edx, dword [rbp - 0x13c]	      3075	ops.c	FUNCTION_45
0x5c70	          0x885010	               mov byte [rax + 0x10], dl	      3075	ops.c	FUNCTION_45
0x5c73	    0x488b05000000	            mov rax, qword [0x04005cba] 	      3076	ops.c	FUNCTION_45
0x5c7a	    0xc74014000000	               mov dword [rax + 0x14], 0	      3076	ops.c	FUNCTION_45
0x5c81	    0x488b1d000000	            mov rbx, qword [0x04005cc8] 	      3077	ops.c	FUNCTION_45	CALL_5
0x5c88	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      3077	ops.c	FUNCTION_45	CALL_5
0x5c8f	        0x48c1e003	                              shl rax, 3	      3077	ops.c	FUNCTION_45	CALL_5
0x5c93	      0xbe01000000	                              mov esi, 1	      3077	ops.c	FUNCTION_45	CALL_5
0x5c98	          0x4889c7	                            mov rdi, rax	      3077	ops.c	FUNCTION_45	CALL_5
0x5c9b	      0xe800000000	                          call 0x4005ce0	      3077	ops.c	FUNCTION_45	CALL_5
0x5ca0	          0x488903	                    mov qword [rbx], rax	      3077	ops.c	FUNCTION_45	CALL_5
0x5ca3	    0x488b05000000	            mov rax, qword [0x04005cea] 	      3079	ops.c	FUNCTION_45	IF_8
0x5caa	          0x488b00	                    mov rax, qword [rax]	      3079	ops.c	FUNCTION_45	IF_8
0x5cad	          0x4885c0	                           test rax, rax	      3079	ops.c	FUNCTION_45	IF_8
0x5cb0	            0x7518	                           jne 0x4005d0a	      3079	ops.c	FUNCTION_45	IF_8
0x5cb2	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3081	ops.c	FUNCTION_45	IF_8
0x5cb9	    0x488905000000	            mov qword [0x04005d00], rax 	      3081	ops.c	FUNCTION_45	IF_8
0x5cc0	      0xb800000000	                              mov eax, 0	      3082	ops.c	FUNCTION_45	IF_8
0x5cc5	      0xe9240b0000	                           jmp 0x400682e	      3082	ops.c	FUNCTION_45	IF_8
0x5cca	    0x488b1d000000	            mov rbx, qword [0x04005d11] 	      3085	ops.c	FUNCTION_45	CALL_6
0x5cd1	      0xe800000000	                          call 0x4005d16	      3085	ops.c	FUNCTION_45	CALL_6
0x5cd6	        0x48894318	             mov qword [rbx + 0x18], rax	      3085	ops.c	FUNCTION_45	CALL_6
0x5cda	    0x48c785d8feff	              mov qword [rbp - 0x128], 0	      3088	ops.c	FUNCTION_45
0x5ce5	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3089	ops.c	FUNCTION_45
0x5cec	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3089	ops.c	FUNCTION_45
0x5cf0	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      3089	ops.c	FUNCTION_45
0x5cf7	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3091	ops.c	FUNCTION_45	IF_9
0x5cfe	          0x8b4060	            mov eax, dword [rax + 0x60] 	      3091	ops.c	FUNCTION_45	IF_9
0x5d01	            0x85c0	                           test eax, eax	      3091	ops.c	FUNCTION_45	IF_9
0x5d03	     0xf8435040000	                            je 0x400617e	      3091	ops.c	FUNCTION_45	IF_9
0x5d09	    0x488b05000000	            mov rax, qword [0x04005d50] 	      3094	ops.c	FUNCTION_45	IF_9
0x5d10	        0xc6401002	                mov byte [rax + 0x10], 2	      3094	ops.c	FUNCTION_45	IF_9
0x5d14	    0x488b05000000	            mov rax, qword [0x04005d5b] 	      3095	ops.c	FUNCTION_45	IF_9
0x5d1b	    0x488b95a8feff	            mov rdx, qword [rbp - 0x158]	      3095	ops.c	FUNCTION_45	IF_9
0x5d22	          0x8b4a68	            mov ecx, dword [rdx + 0x68] 	      3095	ops.c	FUNCTION_45	IF_9
0x5d25	    0x488b95a8feff	            mov rdx, qword [rbp - 0x158]	      3095	ops.c	FUNCTION_45	IF_9
0x5d2c	          0x8b5264	            mov edx, dword [rdx + 0x64] 	      3095	ops.c	FUNCTION_45	IF_9
0x5d2f	            0x29d1	                            sub ecx, edx	      3095	ops.c	FUNCTION_45	IF_9
0x5d31	            0x89ca	                            mov edx, ecx	      3095	ops.c	FUNCTION_45	IF_9
0x5d33	          0x895014	             mov dword [rax + 0x14], edx	      3095	ops.c	FUNCTION_45	IF_9
0x5d36	    0x488b05000000	            mov rax, qword [0x04005d7d] 	      3097	ops.c	FUNCTION_45	IF_9	IF_10
0x5d3d	          0x8b4048	            mov eax, dword [rax + 0x48] 	      3097	ops.c	FUNCTION_45	IF_9	IF_10
0x5d40	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      3097	ops.c	FUNCTION_45	IF_9	IF_10
0x5d45	     0xf85f3030000	                           jne 0x400617e	      3097	ops.c	FUNCTION_45	IF_9	IF_10
0x5d4b	    0x488b05000000	            mov rax, qword [0x04005d92] 	      3097	ops.c	FUNCTION_45	IF_9	IF_10
0x5d52	          0x8b4014	            mov eax, dword [rax + 0x14] 	      3097	ops.c	FUNCTION_45	IF_9	IF_10
0x5d55	            0x85c0	                           test eax, eax	      3097	ops.c	FUNCTION_45	IF_9	IF_10
0x5d57	     0xf8ee1030000	                           jle 0x400617e	      3097	ops.c	FUNCTION_45	IF_9	IF_10
0x5d5d	    0x488b05000000	            mov rax, qword [0x04005da4] 	      3098	ops.c	FUNCTION_45	IF_9	IF_10
0x5d64	          0x8b5014	            mov edx, dword [rax + 0x14] 	      3098	ops.c	FUNCTION_45	IF_9	IF_10
0x5d67	          0x83ea01	                              sub edx, 1	      3098	ops.c	FUNCTION_45	IF_9	IF_10
0x5d6a	          0x895014	             mov dword [rax + 0x14], edx	      3098	ops.c	FUNCTION_45	IF_9	IF_10
0x5d6d	      0xe9cc030000	                           jmp 0x400617e	      3101	ops.c	FUNCTION_45	FOR_1
0x5d72	    0x488b05000000	            mov rax, qword [0x04005db9] 	      3103	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x5d79	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      3103	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x5d7d	           0xfb6c0	                           movzx eax, al	      3103	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x5d80	          0x83f801	                              cmp eax, 1	      3103	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x5d83	            0x745a	                            je 0x4005e1f	      3103	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x5d85	          0x83f802	                              cmp eax, 2	      3103	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x5d88	            0x740d	                            je 0x4005dd7	      3103	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x5d8a	            0x85c0	                           test eax, eax	      3103	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x5d8c	     0xf8491000000	                            je 0x4005e63	      3103	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x5d92	      0xe997030000	                           jmp 0x400616e	      3103	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x5d97	    0x488b95e0feff	            mov rdx, qword [rbp - 0x120]	      3106	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_7
0x5d9e	    0x488db540ffff	                   lea rsi, [rbp - 0xc0]	      3106	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_7
0x5da5	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3106	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_7
0x5dac	      0xb900000000	                              mov ecx, 0	      3106	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_7
0x5db1	          0x4889c7	                            mov rdi, rax	      3106	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_7
0x5db4	      0xe820490000	                     call sym.block_prep	      3106	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_7
0x5db9	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      3107	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_11	CALL_8
0x5dc0	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      3107	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_11	CALL_8
0x5dc7	          0x4889d6	                            mov rsi, rdx	      3107	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_11	CALL_8
0x5dca	          0x4889c7	                            mov rdi, rax	      3107	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_11	CALL_8
0x5dcd	      0xe83a0a0000	                 call sym.yank_copy_line	      3107	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_11	CALL_8
0x5dd2	            0x85c0	                           test eax, eax	      3107	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_11	CALL_8
0x5dd4	     0xf8550030000	                           jne 0x400616a	      3107	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_11	CALL_8
0x5dda	      0xe9e9090000	                           jmp 0x4006808	      3108	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_11
0x5ddf	    0x488b05000000	            mov rax, qword [0x04005e26] 	      3112	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x5de6	          0x488b00	                    mov rax, qword [rax]	      3112	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x5de9	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      3112	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x5df0	        0x48c1e203	                              shl rdx, 3	      3112	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x5df4	        0x488d1c10	                    lea rbx, [rax + rdx]	      3112	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x5df8	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      3113	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12	CALL_10
0x5dff	          0x4889c7	                            mov rdi, rax	      3113	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12	CALL_10
0x5e02	      0xe800000000	                          call 0x4005e47	      3113	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12	CALL_10
0x5e07	          0x4889c7	                            mov rdi, rax	      3113	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12	CALL_10
0x5e0a	      0xe800000000	                          call 0x4005e4f	      3113	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12	CALL_10
0x5e0f	          0x488903	                    mov qword [rbx], rax	      3112	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x5e12	          0x488b03	                    mov rax, qword [rbx]	      3112	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x5e15	          0x4885c0	                           test rax, rax	      3112	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x5e18	     0xf850f030000	                           jne 0x400616d	      3112	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x5e1e	      0xe9a5090000	                           jmp 0x4006808	      3114	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_12
0x5e23	    0xc785ccfeffff	              mov dword [rbp - 0x134], 0	      3119	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x5e2d	    0xc785d0feffff	     mov dword [rbp - 0x130], 0x7fffffff	      3119	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x5e37	    0xc785d4feffff	              mov dword [rbp - 0x12c], 0	      3121	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x5e41	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      3124	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_11
0x5e48	          0x4889c7	                            mov rdi, rax	      3124	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_11
0x5e4b	      0xe800000000	                          call 0x4005e90	      3124	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_11
0x5e50	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	      3124	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_11
0x5e57	    0xc78540ffffff	               mov dword [rbp - 0xc0], 0	      3125	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x5e61	    0xc78544ffffff	               mov dword [rbp - 0xbc], 0	      3126	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x5e6b	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3128	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13
0x5e72	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3128	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13
0x5e76	    0x483b85e0feff	            cmp rax, qword [rbp - 0x120]	      3128	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13
0x5e7d	     0xf8596000000	                           jne 0x4005f59	      3128	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13
0x5e83	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3130	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13
0x5e8a	          0x8b4028	            mov eax, dword [rax + 0x28] 	      3130	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13
0x5e8d	    0x8985ccfeffff	            mov dword [rbp - 0x134], eax	      3130	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13
0x5e93	    0x8b0500000000	            mov eax, dword [0x04005ed9] 	      3132	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14
0x5e99	            0x85c0	                           test eax, eax	      3132	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14
0x5e9b	            0x747c	                            je 0x4005f59	      3132	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14
0x5e9d	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3134	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x5ea4	        0x488d7020	                   lea rsi, [rax + 0x20]	      3134	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x5ea8	    0x488b05000000	            mov rax, qword [0x04005eef] 	      3134	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x5eaf	    0x488d8dc0feff	                  lea rcx, [rbp - 0x140]	      3134	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x5eb6	    0x488d95bcfeff	                  lea rdx, [rbp - 0x144]	      3134	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x5ebd	          0x4989c8	                             mov r8, rcx	      3134	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x5ec0	      0xb900000000	                              mov ecx, 0	      3134	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x5ec5	          0x4889c7	                            mov rdi, rax	      3134	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x5ec8	      0xe800000000	                          call 0x4005f0d	      3134	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	CALL_12
0x5ecd	    0x8b95c0feffff	            mov edx, dword [rbp - 0x140]	      3135	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x5ed3	    0x8b85bcfeffff	            mov eax, dword [rbp - 0x144]	      3135	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x5ed9	            0x39c2	                            cmp edx, eax	      3135	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x5edb	            0x743c	                            je 0x4005f59	      3135	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x5edd	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3135	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x5ee4	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      3135	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x5ee7	            0x85c0	                           test eax, eax	      3135	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x5ee9	            0x7e2e	                           jle 0x4005f59	      3135	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x5eeb	    0x8b95c0feffff	            mov edx, dword [rbp - 0x140]	      3139	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x5ef1	    0x8b85bcfeffff	            mov eax, dword [rbp - 0x144]	      3139	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x5ef7	            0x29c2	                            sub edx, eax	      3139	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x5ef9	            0x89d0	                            mov eax, edx	      3139	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x5efb	          0x8d5001	                      lea edx, [rax + 1]	      3139	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x5efe	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3140	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x5f05	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      3140	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x5f08	            0x29c2	                            sub edx, eax	      3140	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x5f0a	            0x89d0	                            mov eax, edx	      3140	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x5f0c	    0x898540ffffff	             mov dword [rbp - 0xc0], eax	      3139	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x5f12	    0x8385ccfeffff	              add dword [rbp - 0x134], 1	      3141	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_13	IF_14	IF_15
0x5f19	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3147	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x5f20	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3147	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x5f24	    0x483b85e0feff	            cmp rax, qword [rbp - 0x120]	      3147	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x5f2b	     0xf8558010000	                           jne 0x40060c9	      3147	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x5f31	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3149	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x5f38	          0x8b4038	            mov eax, dword [rax + 0x38] 	      3149	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x5f3b	    0x8985d0feffff	            mov dword [rbp - 0x130], eax	      3149	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16
0x5f41	    0x8b0500000000	            mov eax, dword [0x04005f87] 	      3151	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17
0x5f47	            0x85c0	                           test eax, eax	      3151	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17
0x5f49	     0xf843a010000	                            je 0x40060c9	      3151	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17
0x5f4f	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3153	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x5f56	        0x488d7030	                   lea rsi, [rax + 0x30]	      3153	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x5f5a	    0x488b05000000	            mov rax, qword [0x04005fa1] 	      3153	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x5f61	    0x488d8dc0feff	                  lea rcx, [rbp - 0x140]	      3153	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x5f68	    0x488d95bcfeff	                  lea rdx, [rbp - 0x144]	      3153	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x5f6f	          0x4989c8	                             mov r8, rcx	      3153	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x5f72	      0xb900000000	                              mov ecx, 0	      3153	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x5f77	          0x4889c7	                            mov rdi, rax	      3153	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x5f7a	      0xe800000000	                          call 0x4005fbf	      3153	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	CALL_13
0x5f7f	    0x8b85d0feffff	            mov eax, dword [rbp - 0x130]	      3154	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x5f85	          0x4863d0	                         movsxd rdx, eax	      3154	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x5f88	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      3154	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x5f8f	          0x4801d0	                            add rax, rdx	      3154	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x5f92	           0xfb600	                   movzx eax, byte [rax]	      3154	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x5f95	            0x84c0	                             test al, al	      3154	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x5f97	            0x7451	                            je 0x400602a	      3154	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x5f99	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3154	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x5fa0	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      3154	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x5fa3	    0x8b85bcfeffff	            mov eax, dword [rbp - 0x144]	      3154	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x5fa9	             0x1c2	                            add edx, eax	      3154	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x5fab	    0x8b85c0feffff	            mov eax, dword [rbp - 0x140]	      3154	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x5fb1	            0x39c2	                            cmp edx, eax	      3154	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x5fb3	     0xf8dd0000000	                           jge 0x40060c9	      3154	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x5fb9	    0x488b05000000	            mov rax, qword [0x04006000] 	      3159	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x5fc0	    0x8b95d0feffff	            mov edx, dword [rbp - 0x130]	      3159	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x5fc6	          0x4863ca	                         movsxd rcx, edx	      3159	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x5fc9	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      3159	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x5fd0	          0x4801d1	                            add rcx, rdx	      3159	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x5fd3	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      3159	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x5fda	          0x4889ce	                            mov rsi, rcx	      3159	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x5fdd	          0x4889d7	                            mov rdi, rdx	      3159	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x5fe0	            0xffd0	                                call rax	      3159	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x5fe2	            0x85c0	                           test eax, eax	      3159	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x5fe4	     0xf859f000000	                           jne 0x40060c9	      3159	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18
0x5fea	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3163	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x5ff1	        0x488b5020	            mov rdx, qword [rax + 0x20] 	      3163	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x5ff5	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3163	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x5ffc	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3163	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x6000	          0x4839c2	                            cmp rdx, rax	      3163	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x6003	            0x7558	                           jne 0x400609d	      3163	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x6005	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3164	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x600c	          0x8b5028	            mov edx, dword [rax + 0x28] 	      3164	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x600f	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3164	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x6016	          0x8b4038	            mov eax, dword [rax + 0x38] 	      3164	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x6019	            0x39c2	                            cmp edx, eax	      3164	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x601b	            0x7540	                           jne 0x400609d	      3164	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x601d	    0xc785d4feffff	              mov dword [rbp - 0x12c], 1	      3167	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x6027	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3168	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x602e	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      3168	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x6031	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3169	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x6038	          0x8b402c	            mov eax, dword [rax + 0x2c] 	      3169	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x603b	            0x29c2	                            sub edx, eax	      3169	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x603d	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3169	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x6044	          0x8b4014	            mov eax, dword [rax + 0x14] 	      3169	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x6047	             0x1d0	                            add eax, edx	      3169	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x6049	    0x898540ffffff	             mov dword [rbp - 0xc0], eax	      3168	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x604f	    0x8b85ccfeffff	            mov eax, dword [rbp - 0x134]	      3170	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x6055	    0x8985d0feffff	            mov dword [rbp - 0x130], eax	      3170	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x605b	            0xeb2c	                           jmp 0x40060c9	      3170	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	IF_19
0x605d	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3174	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x6064	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      3174	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x6067	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3175	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x606e	          0x8b4014	            mov eax, dword [rax + 0x14] 	      3175	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x6071	             0x1d0	                            add eax, edx	      3175	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x6073	    0x898544ffffff	             mov dword [rbp - 0xbc], eax	      3174	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x6079	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3176	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x6080	          0x8b4014	            mov eax, dword [rax + 0x14] 	      3176	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x6083	    0x2985d0feffff	            sub dword [rbp - 0x130], eax	      3176	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_16	IF_17	IF_18	ELSE_3
0x6089	    0x81bdd0feffff	    cmp dword [rbp - 0x130], 0x7fffffff 	      3182	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_20
0x6093	            0x7515	                           jne 0x40060ea	      3182	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_20
0x6095	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      3183	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x609c	          0x4889c7	                            mov rdi, rax	      3183	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x609f	      0xe800000000	                          call 0x40060e4	      3183	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x60a4	    0x8985d0feffff	            mov dword [rbp - 0x130], eax	      3183	ops.c	FUNCTION_45	FOR_1	SWITCH_1	CALL_14
0x60aa	    0x8b85ccfeffff	            mov eax, dword [rbp - 0x134]	      3184	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_21
0x60b0	    0x3b85d0feffff	            cmp eax, dword [rbp - 0x130]	      3184	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_21
0x60b6	            0x7f09	                            jg 0x4006101	      3184	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_21
0x60b8	    0x83bdd4feffff	              cmp dword [rbp - 0x12c], 0	      3186	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_21
0x60bf	            0x740c	                            je 0x400610d	      3186	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_21
0x60c1	    0xc78548ffffff	               mov dword [rbp - 0xb8], 0	      3189	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_21
0x60cb	            0xeb20	                           jmp 0x400612d	      3189	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_21
0x60cd	    0x8b85d0feffff	            mov eax, dword [rbp - 0x130]	      3192	ops.c	FUNCTION_45	FOR_1	SWITCH_1	ELSE_4
0x60d3	    0x2b85ccfeffff	            sub eax, dword [rbp - 0x134]	      3192	ops.c	FUNCTION_45	FOR_1	SWITCH_1	ELSE_4
0x60d9	            0x89c2	                            mov edx, eax	      3192	ops.c	FUNCTION_45	FOR_1	SWITCH_1	ELSE_4
0x60db	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3192	ops.c	FUNCTION_45	FOR_1	SWITCH_1	ELSE_4
0x60e2	          0x8b4014	            mov eax, dword [rax + 0x14] 	      3192	ops.c	FUNCTION_45	FOR_1	SWITCH_1	ELSE_4
0x60e5	             0x1d0	                            add eax, edx	      3192	ops.c	FUNCTION_45	FOR_1	SWITCH_1	ELSE_4
0x60e7	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	      3192	ops.c	FUNCTION_45	FOR_1	SWITCH_1	ELSE_4
0x60ed	    0x8b85ccfeffff	            mov eax, dword [rbp - 0x134]	      3194	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x60f3	          0x4863d0	                         movsxd rdx, eax	      3194	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x60f6	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      3194	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x60fd	          0x4801d0	                            add rax, rdx	      3194	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x6100	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      3194	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x6107	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      3195	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_22	CALL_15
0x610e	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	      3195	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_22	CALL_15
0x6115	          0x4889d6	                            mov rsi, rdx	      3195	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_22	CALL_15
0x6118	          0x4889c7	                            mov rdi, rax	      3195	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_22	CALL_15
0x611b	      0xe8ec060000	                 call sym.yank_copy_line	      3195	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_22	CALL_15
0x6120	            0x85c0	                           test eax, eax	      3195	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_22	CALL_15
0x6122	     0xf849c060000	                            je 0x4006804	      3195	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_22	CALL_15
0x6128	            0xeb04	                           jmp 0x400616e	      3195	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_22	CALL_15
0x612a	              0x90	                                     nop	      3109	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x612b	            0xeb01	                           jmp 0x400616e	      3109	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x612d	              0x90	                                     nop	      3115	ops.c	FUNCTION_45	FOR_1	SWITCH_1
0x612e	    0x488385e0feff	              add qword [rbp - 0x120], 1	      3101	ops.c	FUNCTION_45	FOR_1
0x6136	    0x488385d8feff	              add qword [rbp - 0x128], 1	      3101	ops.c	FUNCTION_45	FOR_1
0x613e	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      3101	ops.c	FUNCTION_45	FOR_1
0x6145	    0x483b85f8feff	            cmp rax, qword [rbp - 0x108]	      3101	ops.c	FUNCTION_45	FOR_1
0x614c	     0xf8e20fcffff	                           jle 0x4005db2	      3101	ops.c	FUNCTION_45	FOR_1
0x6152	    0x488b05000000	            mov rax, qword [0x04006199] 	      3203	ops.c	FUNCTION_45	IF_23
0x6159	    0x48398500ffff	           cmp qword [rbp - 0x100], rax 	      3203	ops.c	FUNCTION_45	IF_23
0x6160	     0xf8402030000	                            je 0x40064a8	      3203	ops.c	FUNCTION_45	IF_23
0x6166	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3206	ops.c	FUNCTION_45	IF_23
0x616d	        0x488b5008	                mov rdx, qword [rax + 8]	      3206	ops.c	FUNCTION_45	IF_23
0x6171	    0x488b05000000	            mov rax, qword [0x040061b8] 	      3206	ops.c	FUNCTION_45	IF_23
0x6178	        0x488b4008	                mov rax, qword [rax + 8]	      3206	ops.c	FUNCTION_45	IF_23
0x617c	          0x4801d0	                            add rax, rdx	      3206	ops.c	FUNCTION_45	IF_23
0x617f	        0x48c1e003	                              shl rax, 3	      3205	ops.c	FUNCTION_45	IF_23	CALL_16
0x6183	      0xbe01000000	                              mov esi, 1	      3205	ops.c	FUNCTION_45	IF_23	CALL_16
0x6188	          0x4889c7	                            mov rdi, rax	      3205	ops.c	FUNCTION_45	IF_23	CALL_16
0x618b	      0xe800000000	                          call 0x40061d0	      3205	ops.c	FUNCTION_45	IF_23	CALL_16
0x6190	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      3205	ops.c	FUNCTION_45	IF_23	CALL_16
0x6197	    0x4883bd10ffff	               cmp qword [rbp - 0xf0], 0	      3207	ops.c	FUNCTION_45	IF_23	IF_24
0x619f	     0xf8422060000	                            je 0x4006807	      3207	ops.c	FUNCTION_45	IF_23	IF_24
0x61a5	    0x48c785e8feff	              mov qword [rbp - 0x118], 0	      3209	ops.c	FUNCTION_45	IF_23	FOR_2
0x61b0	            0xeb3f	                           jmp 0x4006231	      3209	ops.c	FUNCTION_45	IF_23	FOR_2
0x61b2	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      3210	ops.c	FUNCTION_45	IF_23	FOR_2
0x61b9	    0x488d14c50000	                        lea rdx, [rax*8]	      3210	ops.c	FUNCTION_45	IF_23	FOR_2
0x61c1	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      3210	ops.c	FUNCTION_45	IF_23	FOR_2
0x61c8	          0x4801c2	                            add rdx, rax	      3210	ops.c	FUNCTION_45	IF_23	FOR_2
0x61cb	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3210	ops.c	FUNCTION_45	IF_23	FOR_2
0x61d2	          0x488b00	                    mov rax, qword [rax]	      3210	ops.c	FUNCTION_45	IF_23	FOR_2
0x61d5	    0x488b8de8feff	            mov rcx, qword [rbp - 0x118]	      3210	ops.c	FUNCTION_45	IF_23	FOR_2
0x61dc	        0x48c1e103	                              shl rcx, 3	      3210	ops.c	FUNCTION_45	IF_23	FOR_2
0x61e0	          0x4801c8	                            add rax, rcx	      3210	ops.c	FUNCTION_45	IF_23	FOR_2
0x61e3	          0x488b00	                    mov rax, qword [rax]	      3210	ops.c	FUNCTION_45	IF_23	FOR_2
0x61e6	          0x488902	                    mov qword [rdx], rax	      3210	ops.c	FUNCTION_45	IF_23	FOR_2
0x61e9	    0x488385e8feff	              add qword [rbp - 0x118], 1	      3209	ops.c	FUNCTION_45	IF_23	FOR_2
0x61f1	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3209	ops.c	FUNCTION_45	IF_23	FOR_2
0x61f8	        0x488b4008	                mov rax, qword [rax + 8]	      3209	ops.c	FUNCTION_45	IF_23	FOR_2
0x61fc	    0x483b85e8feff	            cmp rax, qword [rbp - 0x118]	      3209	ops.c	FUNCTION_45	IF_23	FOR_2
0x6203	            0x7fad	                            jg 0x40061f2	      3209	ops.c	FUNCTION_45	IF_23	FOR_2
0x6205	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3211	ops.c	FUNCTION_45	IF_23	CALL_17
0x620c	          0x488b00	                    mov rax, qword [rax]	      3211	ops.c	FUNCTION_45	IF_23	CALL_17
0x620f	          0x4889c7	                            mov rdi, rax	      3211	ops.c	FUNCTION_45	IF_23	CALL_17
0x6212	      0xe800000000	                          call 0x4006257	      3211	ops.c	FUNCTION_45	IF_23	CALL_17
0x6217	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3212	ops.c	FUNCTION_45	IF_23
0x621e	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      3212	ops.c	FUNCTION_45	IF_23
0x6225	          0x488910	                    mov qword [rax], rdx	      3212	ops.c	FUNCTION_45	IF_23
0x6228	      0xe800000000	                          call 0x400626d	      3214	ops.c	FUNCTION_45	IF_23	CALL_18
0x622d	          0x4889c2	                            mov rdx, rax	      3214	ops.c	FUNCTION_45	IF_23	CALL_18
0x6230	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3214	ops.c	FUNCTION_45	IF_23	CALL_18
0x6237	        0x48895018	             mov qword [rax + 0x18], rdx	      3214	ops.c	FUNCTION_45	IF_23	CALL_18
0x623b	    0x83bdc4feffff	              cmp dword [rbp - 0x13c], 1	      3217	ops.c	FUNCTION_45	IF_23	IF_25
0x6242	            0x750b	                           jne 0x400628f	      3217	ops.c	FUNCTION_45	IF_23	IF_25
0x6244	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3218	ops.c	FUNCTION_45	IF_23	IF_25
0x624b	        0xc6401001	                mov byte [rax + 0x10], 1	      3218	ops.c	FUNCTION_45	IF_23	IF_25
0x624f	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3222	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x6256	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      3222	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x625a	            0x84c0	                             test al, al	      3222	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x625c	     0xf8567010000	                           jne 0x4006409	      3222	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x6262	    0x488b05000000	            mov rax, qword [0x040062a9] 	      3222	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x6269	      0xbe3e000000	                           mov esi, 0x3e	      3222	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x626e	          0x4889c7	                            mov rdi, rax	      3222	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x6271	      0xe800000000	                          call 0x40062b6	      3222	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x6276	          0x4885c0	                           test rax, rax	      3222	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x6279	     0xf854a010000	                           jne 0x4006409	      3222	ops.c	FUNCTION_45	IF_23	IF_26	CALL_19
0x627f	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3224	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x6286	          0x488b10	                    mov rdx, qword [rax]	      3224	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x6289	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3224	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x6290	        0x488b4008	                mov rax, qword [rax + 8]	      3224	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x6294	        0x48c1e003	                              shl rax, 3	      3224	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x6298	        0x4883e808	                              sub rax, 8	      3224	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x629c	          0x4801d0	                            add rax, rdx	      3224	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x629f	          0x488b00	                    mov rax, qword [rax]	      3224	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x62a2	          0x4889c7	                            mov rdi, rax	      3224	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x62a5	      0xe800000000	                          call 0x40062ea	      3224	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x62aa	          0x4889c3	                            mov rbx, rax	      3224	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x62ad	    0x488b05000000	            mov rax, qword [0x040062f4] 	      3225	ops.c	FUNCTION_45	IF_23	IF_26	CALL_22
0x62b4	          0x488b00	                    mov rax, qword [rax]	      3225	ops.c	FUNCTION_45	IF_23	IF_26	CALL_22
0x62b7	          0x488b00	                    mov rax, qword [rax]	      3225	ops.c	FUNCTION_45	IF_23	IF_26	CALL_22
0x62ba	          0x4889c7	                            mov rdi, rax	      3225	ops.c	FUNCTION_45	IF_23	IF_26	CALL_22
0x62bd	      0xe800000000	                          call 0x4006302	      3225	ops.c	FUNCTION_45	IF_23	IF_26	CALL_22
0x62c2	          0x4801d8	                            add rax, rbx	      3225	ops.c	FUNCTION_45	IF_23	IF_26	CALL_22
0x62c5	        0x4883c001	                              add rax, 1	      3225	ops.c	FUNCTION_45	IF_23	IF_26	CALL_22
0x62c9	      0xbe01000000	                              mov esi, 1	      3224	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x62ce	          0x4889c7	                            mov rdi, rax	      3224	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x62d1	      0xe800000000	                          call 0x4006316	      3224	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x62d6	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      3224	ops.c	FUNCTION_45	IF_23	IF_26	CALL_21
0x62dd	    0x4883bd18ffff	               cmp qword [rbp - 0xe8], 0	      3226	ops.c	FUNCTION_45	IF_23	IF_26	IF_27
0x62e5	            0x751b	                           jne 0x4006342	      3226	ops.c	FUNCTION_45	IF_23	IF_26	IF_27
0x62e7	    0x488b05000000	            mov rax, qword [0x0400632e] 	      3228	ops.c	FUNCTION_45	IF_23	IF_26	IF_27
0x62ee	        0x488b4008	                mov rax, qword [rax + 8]	      3228	ops.c	FUNCTION_45	IF_23	IF_26	IF_27
0x62f2	        0x4883e801	                              sub rax, 1	      3228	ops.c	FUNCTION_45	IF_23	IF_26	IF_27
0x62f6	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      3228	ops.c	FUNCTION_45	IF_23	IF_26	IF_27
0x62fd	      0xe9c6040000	                           jmp 0x4006808	      3229	ops.c	FUNCTION_45	IF_23	IF_26	IF_27
0x6302	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3231	ops.c	FUNCTION_45	IF_23	IF_26	CALL_23
0x6309	          0x488b00	                    mov rax, qword [rax]	      3231	ops.c	FUNCTION_45	IF_23	IF_26	CALL_23
0x630c	    0x4883ade8feff	              sub qword [rbp - 0x118], 1	      3231	ops.c	FUNCTION_45	IF_23	IF_26	CALL_23
0x6314	    0x488b95e8feff	            mov rdx, qword [rbp - 0x118]	      3231	ops.c	FUNCTION_45	IF_23	IF_26	CALL_23
0x631b	        0x48c1e203	                              shl rdx, 3	      3231	ops.c	FUNCTION_45	IF_23	IF_26	CALL_23
0x631f	          0x4801d0	                            add rax, rdx	      3231	ops.c	FUNCTION_45	IF_23	IF_26	CALL_23
0x6322	          0x488b10	                    mov rdx, qword [rax]	      3231	ops.c	FUNCTION_45	IF_23	IF_26	CALL_23
0x6325	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3231	ops.c	FUNCTION_45	IF_23	IF_26	CALL_23
0x632c	          0x4889d6	                            mov rsi, rdx	      3231	ops.c	FUNCTION_45	IF_23	IF_26	CALL_23
0x632f	          0x4889c7	                            mov rdi, rax	      3231	ops.c	FUNCTION_45	IF_23	IF_26	CALL_23
0x6332	      0xe800000000	                          call 0x4006377	      3231	ops.c	FUNCTION_45	IF_23	IF_26	CALL_23
0x6337	    0x488b05000000	            mov rax, qword [0x0400637e] 	      3232	ops.c	FUNCTION_45	IF_23	IF_26	CALL_24
0x633e	          0x488b00	                    mov rax, qword [rax]	      3232	ops.c	FUNCTION_45	IF_23	IF_26	CALL_24
0x6341	          0x488b10	                    mov rdx, qword [rax]	      3232	ops.c	FUNCTION_45	IF_23	IF_26	CALL_24
0x6344	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3232	ops.c	FUNCTION_45	IF_23	IF_26	CALL_24
0x634b	          0x4889d6	                            mov rsi, rdx	      3232	ops.c	FUNCTION_45	IF_23	IF_26	CALL_24
0x634e	          0x4889c7	                            mov rdi, rax	      3232	ops.c	FUNCTION_45	IF_23	IF_26	CALL_24
0x6351	      0xe800000000	                          call 0x4006396	      3232	ops.c	FUNCTION_45	IF_23	IF_26	CALL_24
0x6356	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3233	ops.c	FUNCTION_45	IF_23	IF_26	CALL_25
0x635d	          0x488b00	                    mov rax, qword [rax]	      3233	ops.c	FUNCTION_45	IF_23	IF_26	CALL_25
0x6360	    0x488b95e8feff	            mov rdx, qword [rbp - 0x118]	      3233	ops.c	FUNCTION_45	IF_23	IF_26	CALL_25
0x6367	        0x48c1e203	                              shl rdx, 3	      3233	ops.c	FUNCTION_45	IF_23	IF_26	CALL_25
0x636b	          0x4801d0	                            add rax, rdx	      3233	ops.c	FUNCTION_45	IF_23	IF_26	CALL_25
0x636e	          0x488b00	                    mov rax, qword [rax]	      3233	ops.c	FUNCTION_45	IF_23	IF_26	CALL_25
0x6371	          0x4889c7	                            mov rdi, rax	      3233	ops.c	FUNCTION_45	IF_23	IF_26	CALL_25
0x6374	      0xe800000000	                          call 0x40063b9	      3233	ops.c	FUNCTION_45	IF_23	IF_26	CALL_25
0x6379	    0x488b05000000	            mov rax, qword [0x040063c0] 	      3234	ops.c	FUNCTION_45	IF_23	IF_26	CALL_26
0x6380	          0x488b00	                    mov rax, qword [rax]	      3234	ops.c	FUNCTION_45	IF_23	IF_26	CALL_26
0x6383	          0x488b00	                    mov rax, qword [rax]	      3234	ops.c	FUNCTION_45	IF_23	IF_26	CALL_26
0x6386	          0x4889c7	                            mov rdi, rax	      3234	ops.c	FUNCTION_45	IF_23	IF_26	CALL_26
0x6389	      0xe800000000	                          call 0x40063ce	      3234	ops.c	FUNCTION_45	IF_23	IF_26	CALL_26
0x638e	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3235	ops.c	FUNCTION_45	IF_23	IF_26
0x6395	          0x488b08	                    mov rcx, qword [rax]	      3235	ops.c	FUNCTION_45	IF_23	IF_26
0x6398	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      3235	ops.c	FUNCTION_45	IF_23	IF_26
0x639f	        0x488d5001	                      lea rdx, [rax + 1]	      3235	ops.c	FUNCTION_45	IF_23	IF_26
0x63a3	    0x488995e8feff	            mov qword [rbp - 0x118], rdx	      3235	ops.c	FUNCTION_45	IF_23	IF_26
0x63aa	        0x48c1e003	                              shl rax, 3	      3235	ops.c	FUNCTION_45	IF_23	IF_26
0x63ae	        0x488d1401	                    lea rdx, [rcx + rax]	      3235	ops.c	FUNCTION_45	IF_23	IF_26
0x63b2	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      3235	ops.c	FUNCTION_45	IF_23	IF_26
0x63b9	          0x488902	                    mov qword [rdx], rax	      3235	ops.c	FUNCTION_45	IF_23	IF_26
0x63bc	    0x48c785d8feff	              mov qword [rbp - 0x128], 1	      3236	ops.c	FUNCTION_45	IF_23	IF_26
0x63c7	            0xeb0b	                           jmp 0x4006414	      3236	ops.c	FUNCTION_45	IF_23	IF_26
0x63c9	    0x48c785d8feff	              mov qword [rbp - 0x128], 0	      3239	ops.c	FUNCTION_45	IF_23	ELSE_5
0x63d4	            0xeb4c	                           jmp 0x4006462	      3240	ops.c	FUNCTION_45	IF_23	WHILE_1
0x63d6	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3241	ops.c	FUNCTION_45	IF_23	WHILE_1
0x63dd	          0x488b08	                    mov rcx, qword [rax]	      3241	ops.c	FUNCTION_45	IF_23	WHILE_1
0x63e0	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      3241	ops.c	FUNCTION_45	IF_23	WHILE_1
0x63e7	        0x488d5001	                      lea rdx, [rax + 1]	      3241	ops.c	FUNCTION_45	IF_23	WHILE_1
0x63eb	    0x488995e8feff	            mov qword [rbp - 0x118], rdx	      3241	ops.c	FUNCTION_45	IF_23	WHILE_1
0x63f2	        0x48c1e003	                              shl rax, 3	      3241	ops.c	FUNCTION_45	IF_23	WHILE_1
0x63f6	          0x4801c1	                            add rcx, rax	      3241	ops.c	FUNCTION_45	IF_23	WHILE_1
0x63f9	    0x488b05000000	            mov rax, qword [0x04006440] 	      3241	ops.c	FUNCTION_45	IF_23	WHILE_1
0x6400	          0x488b30	                    mov rsi, qword [rax]	      3241	ops.c	FUNCTION_45	IF_23	WHILE_1
0x6403	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      3241	ops.c	FUNCTION_45	IF_23	WHILE_1
0x640a	        0x488d5001	                      lea rdx, [rax + 1]	      3241	ops.c	FUNCTION_45	IF_23	WHILE_1
0x640e	    0x488995d8feff	            mov qword [rbp - 0x128], rdx	      3241	ops.c	FUNCTION_45	IF_23	WHILE_1
0x6415	        0x48c1e003	                              shl rax, 3	      3241	ops.c	FUNCTION_45	IF_23	WHILE_1
0x6419	          0x4801f0	                            add rax, rsi	      3241	ops.c	FUNCTION_45	IF_23	WHILE_1
0x641c	          0x488b00	                    mov rax, qword [rax]	      3241	ops.c	FUNCTION_45	IF_23	WHILE_1
0x641f	          0x488901	                    mov qword [rcx], rax	      3241	ops.c	FUNCTION_45	IF_23	WHILE_1
0x6422	    0x488b05000000	            mov rax, qword [0x04006469] 	      3240	ops.c	FUNCTION_45	IF_23	WHILE_1
0x6429	        0x488b4008	                mov rax, qword [rax + 8]	      3240	ops.c	FUNCTION_45	IF_23	WHILE_1
0x642d	    0x483b85d8feff	            cmp rax, qword [rbp - 0x128]	      3240	ops.c	FUNCTION_45	IF_23	WHILE_1
0x6434	            0x7fa0	                            jg 0x4006416	      3240	ops.c	FUNCTION_45	IF_23	WHILE_1
0x6436	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3242	ops.c	FUNCTION_45	IF_23
0x643d	    0x488b95e8feff	            mov rdx, qword [rbp - 0x118]	      3242	ops.c	FUNCTION_45	IF_23
0x6444	        0x48895008	                mov qword [rax + 8], rdx	      3242	ops.c	FUNCTION_45	IF_23
0x6448	    0x488b05000000	            mov rax, qword [0x0400648f] 	      3243	ops.c	FUNCTION_45	IF_23	CALL_27
0x644f	          0x488b00	                    mov rax, qword [rax]	      3243	ops.c	FUNCTION_45	IF_23	CALL_27
0x6452	          0x4889c7	                            mov rdi, rax	      3243	ops.c	FUNCTION_45	IF_23	CALL_27
0x6455	      0xe800000000	                          call 0x400649a	      3243	ops.c	FUNCTION_45	IF_23	CALL_27
0x645a	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3244	ops.c	FUNCTION_45	IF_23
0x6461	    0x488905000000	            mov qword [0x040064a8], rax 	      3244	ops.c	FUNCTION_45	IF_23
0x6468	    0x488b05000000	            mov rax, qword [0x040064af] 	      3246	ops.c	FUNCTION_45	IF_28
0x646f	    0x8b803c020000	           mov eax, dword [rax + 0x23c] 	      3246	ops.c	FUNCTION_45	IF_28
0x6475	            0x85c0	                           test eax, eax	      3246	ops.c	FUNCTION_45	IF_28
0x6477	            0x740a	                            je 0x40064c3	      3246	ops.c	FUNCTION_45	IF_28
0x6479	      0xbf23000000	                           mov edi, 0x23	      3247	ops.c	FUNCTION_45	CALL_28
0x647e	      0xe800000000	                          call 0x40064c3	      3247	ops.c	FUNCTION_45	CALL_28
0x6483	    0x83bda0feffff	              cmp dword [rbp - 0x160], 0	      3248	ops.c	FUNCTION_45	IF_29
0x648a	     0xf8449010000	                            je 0x4006619	      3248	ops.c	FUNCTION_45	IF_29
0x6490	    0x83bdc4feffff	              cmp dword [rbp - 0x13c], 0	      3250	ops.c	FUNCTION_45	IF_29	IF_30
0x6497	            0x7523	                           jne 0x40064fc	      3250	ops.c	FUNCTION_45	IF_29	IF_30
0x6499	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3251	ops.c	FUNCTION_45	IF_29	IF_30
0x64a0	          0x8b4060	            mov eax, dword [rax + 0x60] 	      3251	ops.c	FUNCTION_45	IF_29	IF_30
0x64a3	            0x85c0	                           test eax, eax	      3251	ops.c	FUNCTION_45	IF_29	IF_30
0x64a5	            0x7515	                           jne 0x40064fc	      3251	ops.c	FUNCTION_45	IF_29	IF_30
0x64a7	    0x4883bdf0feff	              cmp qword [rbp - 0x110], 1	      3252	ops.c	FUNCTION_45	IF_29	IF_30
0x64af	            0x750b	                           jne 0x40064fc	      3252	ops.c	FUNCTION_45	IF_29	IF_30
0x64b1	    0x48c785f0feff	              mov qword [rbp - 0x110], 0	      3253	ops.c	FUNCTION_45	IF_29	IF_30
0x64bc	    0x488b05000000	            mov rax, qword [0x04006503] 	      3255	ops.c	FUNCTION_45	IF_29	IF_31
0x64c3	    0x483985f0feff	           cmp qword [rbp - 0x110], rax 	      3255	ops.c	FUNCTION_45	IF_29	IF_31
0x64ca	     0xf8e09010000	                           jle 0x4006619	      3255	ops.c	FUNCTION_45	IF_29	IF_31
0x64d0	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3259	ops.c	FUNCTION_45	IF_29	IF_31	IF_32
0x64d7	          0x8b4004	                mov eax, dword [rax + 4]	      3259	ops.c	FUNCTION_45	IF_29	IF_31	IF_32
0x64da	            0x85c0	                           test eax, eax	      3259	ops.c	FUNCTION_45	IF_29	IF_31	IF_32
0x64dc	            0x7506	                           jne 0x4006524	      3259	ops.c	FUNCTION_45	IF_29	IF_31	IF_32
0x64de	        0xc6458000	                mov byte [rbp - 0x80], 0	      3260	ops.c	FUNCTION_45	IF_29	IF_31	IF_32
0x64e2	            0xeb2f	                           jmp 0x4006553	      3260	ops.c	FUNCTION_45	IF_29	IF_31	IF_32
0x64e4	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3262	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x64eb	          0x8b5804	                mov ebx, dword [rax + 4]	      3262	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x64ee	      0xbf00000000	                              mov edi, 0	      3262	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x64f3	      0xe800000000	                          call 0x4006538	      3262	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x64f8	          0x4889c2	                            mov rdx, rax	      3262	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x64fb	        0x488d4580	                   lea rax, [rbp - 0x80]	      3262	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x64ff	            0x89d9	                            mov ecx, ebx	      3262	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x6501	      0xbe64000000	                           mov esi, 0x64	      3262	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x6506	          0x4889c7	                            mov rdi, rax	      3262	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x6509	      0xb800000000	                              mov eax, 0	      3262	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x650e	      0xe800000000	                          call 0x4006553	      3262	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_6	CALL_29
0x6513	      0xe800000000	                          call 0x4006558	      3266	ops.c	FUNCTION_45	IF_29	IF_31	CALL_31
0x6518	    0x4883bdf0feff	              cmp qword [rbp - 0x110], 1	      3267	ops.c	FUNCTION_45	IF_29	IF_31	IF_33
0x6520	            0x7557	                           jne 0x40065b9	      3267	ops.c	FUNCTION_45	IF_29	IF_31	IF_33
0x6522	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3269	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	IF_34
0x6529	          0x8b4060	            mov eax, dword [rax + 0x60] 	      3269	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	IF_34
0x652c	            0x85c0	                           test eax, eax	      3269	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	IF_34
0x652e	            0x7426	                            je 0x4006596	      3269	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	IF_34
0x6530	      0xbf00000000	                              mov edi, 0	      3270	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_33
0x6535	      0xe800000000	                          call 0x400657a	      3270	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_33
0x653a	          0x4889c2	                            mov rdx, rax	      3270	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_33
0x653d	        0x488d4580	                   lea rax, [rbp - 0x80]	      3270	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_33
0x6541	          0x4889c6	                            mov rsi, rax	      3270	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_33
0x6544	          0x4889d7	                            mov rdi, rdx	      3270	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_33
0x6547	      0xb800000000	                              mov eax, 0	      3270	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_33
0x654c	      0xe800000000	                          call 0x4006591	      3270	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_33
0x6551	      0xe983000000	                           jmp 0x4006619	      3270	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_33
0x6556	      0xbf00000000	                              mov edi, 0	      3272	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x655b	      0xe800000000	                          call 0x40065a0	      3272	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x6560	          0x4889c2	                            mov rdx, rax	      3272	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x6563	        0x488d4580	                   lea rax, [rbp - 0x80]	      3272	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x6567	          0x4889c6	                            mov rsi, rax	      3272	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x656a	          0x4889d7	                            mov rdi, rdx	      3272	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x656d	      0xb800000000	                              mov eax, 0	      3272	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x6572	      0xe800000000	                          call 0x40065b7	      3272	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x6577	            0xeb60	                           jmp 0x4006619	      3272	ops.c	FUNCTION_45	IF_29	IF_31	IF_33	CALL_35
0x6579	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3274	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35
0x6580	          0x8b4060	            mov eax, dword [rax + 0x60] 	      3274	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35
0x6583	            0x85c0	                           test eax, eax	      3274	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35
0x6585	            0x742a	                            je 0x40065f1	      3274	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35
0x6587	      0xbf00000000	                              mov edi, 0	      3275	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35	CALL_37
0x658c	      0xe800000000	                          call 0x40065d1	      3275	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35	CALL_37
0x6591	          0x4889c1	                            mov rcx, rax	      3275	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35	CALL_37
0x6594	        0x488d5580	                   lea rdx, [rbp - 0x80]	      3275	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35	CALL_37
0x6598	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      3275	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35	CALL_37
0x659f	          0x4889c6	                            mov rsi, rax	      3275	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35	CALL_37
0x65a2	          0x4889cf	                            mov rdi, rcx	      3275	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35	CALL_37
0x65a5	      0xb800000000	                              mov eax, 0	      3275	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35	CALL_37
0x65aa	      0xe800000000	                          call 0x40065ef	      3275	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35	CALL_37
0x65af	            0xeb28	                           jmp 0x4006619	      3275	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_8	IF_35	CALL_37
0x65b1	      0xbf00000000	                              mov edi, 0	      3278	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x65b6	      0xe800000000	                          call 0x40065fb	      3278	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x65bb	          0x4889c1	                            mov rcx, rax	      3278	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x65be	        0x488d5580	                   lea rdx, [rbp - 0x80]	      3278	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x65c2	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      3278	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x65c9	          0x4889c6	                            mov rsi, rax	      3278	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x65cc	          0x4889cf	                            mov rdi, rcx	      3278	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x65cf	      0xb800000000	                              mov eax, 0	      3278	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x65d4	      0xe800000000	                          call 0x4006619	      3278	ops.c	FUNCTION_45	IF_29	IF_31	ELSE_9	CALL_39
0x65d9	    0x488b0d000000	            mov rcx, qword [0x04006620] 	      3286	ops.c	FUNCTION_45
0x65e0	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3286	ops.c	FUNCTION_45
0x65e7	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      3286	ops.c	FUNCTION_45
0x65eb	        0x488b4020	            mov rax, qword [rax + 0x20] 	      3286	ops.c	FUNCTION_45
0x65ef	    0x488981d01100	          mov qword [rcx + 0x11d0], rax 	      3286	ops.c	FUNCTION_45
0x65f6	    0x488991d81100	          mov qword [rcx + 0x11d8], rdx 	      3286	ops.c	FUNCTION_45
0x65fd	    0x488b0d000000	            mov rcx, qword [0x04006644] 	      3287	ops.c	FUNCTION_45
0x6604	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3287	ops.c	FUNCTION_45
0x660b	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      3287	ops.c	FUNCTION_45
0x660f	        0x488b4030	            mov rax, qword [rax + 0x30] 	      3287	ops.c	FUNCTION_45
0x6613	    0x488981f01100	          mov qword [rcx + 0x11f0], rax 	      3287	ops.c	FUNCTION_45
0x661a	    0x488991f81100	          mov qword [rcx + 0x11f8], rdx 	      3287	ops.c	FUNCTION_45
0x6621	    0x83bdc4feffff	              cmp dword [rbp - 0x13c], 1	      3288	ops.c	FUNCTION_45	IF_36
0x6628	            0x7530	                           jne 0x400669a	      3288	ops.c	FUNCTION_45	IF_36
0x662a	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3288	ops.c	FUNCTION_45	IF_36
0x6631	          0x8b4060	            mov eax, dword [rax + 0x60] 	      3288	ops.c	FUNCTION_45	IF_36
0x6634	            0x85c0	                           test eax, eax	      3288	ops.c	FUNCTION_45	IF_36
0x6636	            0x7522	                           jne 0x400669a	      3288	ops.c	FUNCTION_45	IF_36
0x6638	    0x488b05000000	            mov rax, qword [0x0400667f] 	      3290	ops.c	FUNCTION_45	IF_36
0x663f	    0xc780d8110000	            mov dword [rax + 0x11d8], 0 	      3290	ops.c	FUNCTION_45	IF_36
0x6649	    0x488b05000000	            mov rax, qword [0x04006690] 	      3291	ops.c	FUNCTION_45	IF_36
0x6650	    0xc780f8110000	   mov dword [rax + 0x11f8], 0x7fffffff 	      3291	ops.c	FUNCTION_45	IF_36
0x665a	    0x8b0500000000	            mov eax, dword [0x040066a0] 	      3300	ops.c	FUNCTION_45	IF_37
0x6660	            0x85c0	                           test eax, eax	      3300	ops.c	FUNCTION_45	IF_37
0x6662	            0x746e	                            je 0x4006712	      3300	ops.c	FUNCTION_45	IF_37
0x6664	    0x4881bd00ffff	              cmp qword [rbp - 0x100], 0	      3301	ops.c	FUNCTION_45	IF_37
0x666f	            0x742c	                            je 0x40066dd	      3301	ops.c	FUNCTION_45	IF_37
0x6671	    0x83bda4feffff	              cmp dword [rbp - 0x15c], 0	      3302	ops.c	FUNCTION_45	IF_37
0x6678	            0x7558	                           jne 0x4006712	      3302	ops.c	FUNCTION_45	IF_37
0x667a	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3302	ops.c	FUNCTION_45	IF_37
0x6681	          0x8b4004	                mov eax, dword [rax + 4]	      3302	ops.c	FUNCTION_45	IF_37
0x6684	            0x85c0	                           test eax, eax	      3302	ops.c	FUNCTION_45	IF_37
0x6686	            0x754a	                           jne 0x4006712	      3302	ops.c	FUNCTION_45	IF_37
0x6688	    0x8b1500000000	            mov edx, dword [0x040066ce] 	      3303	ops.c	FUNCTION_45	IF_37
0x668e	    0x8b0500000000	            mov eax, dword [0x040066d4] 	      3303	ops.c	FUNCTION_45	IF_37
0x6694	             0x9d0	                             or eax, edx	      3303	ops.c	FUNCTION_45	IF_37
0x6696	          0x83e001	                              and eax, 1	      3303	ops.c	FUNCTION_45	IF_37
0x6699	            0x85c0	                           test eax, eax	      3303	ops.c	FUNCTION_45	IF_37
0x669b	            0x7435	                            je 0x4006712	      3303	ops.c	FUNCTION_45	IF_37
0x669d	    0x4881bd00ffff	              cmp qword [rbp - 0x100], 0	      3305	ops.c	FUNCTION_45	IF_37	IF_38
0x66a8	            0x740a	                            je 0x40066f4	      3305	ops.c	FUNCTION_45	IF_37	IF_38
0x66aa	      0xbf00000000	                              mov edi, 0	      3307	ops.c	FUNCTION_45	IF_37	CALL_40
0x66af	      0xe845020000	                  call sym.copy_yank_reg	      3307	ops.c	FUNCTION_45	IF_37	CALL_40
0x66b4	      0xbf00000000	                              mov edi, 0	      3309	ops.c	FUNCTION_45	IF_37	CALL_41
0x66b9	      0xe800000000	                          call 0x40066fe	      3309	ops.c	FUNCTION_45	IF_37	CALL_41
0x66be	      0xbf00000000	                              mov edi, 0	      3310	ops.c	FUNCTION_45	IF_37	CALL_42
0x66c3	      0xe800000000	                          call 0x4006708	      3310	ops.c	FUNCTION_45	IF_37	CALL_42
0x66c8	    0xc785c8feffff	              mov dword [rbp - 0x138], 1	      3312	ops.c	FUNCTION_45	IF_37
0x66d2	    0x8b0500000000	            mov eax, dword [0x04006718] 	      3321	ops.c	FUNCTION_45	IF_39
0x66d8	            0x85c0	                           test eax, eax	      3321	ops.c	FUNCTION_45	IF_39
0x66da	     0xf84b2000000	                            je 0x40067d2	      3321	ops.c	FUNCTION_45	IF_39
0x66e0	    0x4881bd00ffff	              cmp qword [rbp - 0x100], 0	      3322	ops.c	FUNCTION_45	IF_39
0x66eb	            0x7434	                            je 0x4006761	      3322	ops.c	FUNCTION_45	IF_39
0x66ed	    0x83bda4feffff	              cmp dword [rbp - 0x15c], 0	      3323	ops.c	FUNCTION_45	IF_39
0x66f4	     0xf8598000000	                           jne 0x40067d2	      3323	ops.c	FUNCTION_45	IF_39
0x66fa	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3323	ops.c	FUNCTION_45	IF_39
0x6701	          0x8b4004	                mov eax, dword [rax + 4]	      3323	ops.c	FUNCTION_45	IF_39
0x6704	            0x85c0	                           test eax, eax	      3323	ops.c	FUNCTION_45	IF_39
0x6706	     0xf8586000000	                           jne 0x40067d2	      3323	ops.c	FUNCTION_45	IF_39
0x670c	    0x8b1500000000	            mov edx, dword [0x04006752] 	      3324	ops.c	FUNCTION_45	IF_39
0x6712	    0x8b0500000000	            mov eax, dword [0x04006758] 	      3324	ops.c	FUNCTION_45	IF_39
0x6718	             0x9d0	                             or eax, edx	      3324	ops.c	FUNCTION_45	IF_39
0x671a	          0x83e002	                              and eax, 2	      3324	ops.c	FUNCTION_45	IF_39
0x671d	            0x85c0	                           test eax, eax	      3324	ops.c	FUNCTION_45	IF_39
0x671f	            0x7471	                            je 0x40067d2	      3324	ops.c	FUNCTION_45	IF_39
0x6721	    0x4881bd00ffff	              cmp qword [rbp - 0x100], 0	      3327	ops.c	FUNCTION_45	IF_39	IF_40
0x672c	            0x740a	                            je 0x4006778	      3327	ops.c	FUNCTION_45	IF_39	IF_40
0x672e	      0xbf00000000	                              mov edi, 0	      3329	ops.c	FUNCTION_45	IF_39	CALL_43
0x6733	      0xe8c1010000	                  call sym.copy_yank_reg	      3329	ops.c	FUNCTION_45	IF_39	CALL_43
0x6738	      0xbf00000000	                              mov edi, 0	      3331	ops.c	FUNCTION_45	IF_39	CALL_44
0x673d	      0xe800000000	                          call 0x4006782	      3331	ops.c	FUNCTION_45	IF_39	CALL_44
0x6742	      0xbf00000000	                              mov edi, 0	      3332	ops.c	FUNCTION_45	IF_39	CALL_45
0x6747	      0xe800000000	                          call 0x400678c	      3332	ops.c	FUNCTION_45	IF_39	CALL_45
0x674c	      0xe800000000	                          call 0x4006791	      3333	ops.c	FUNCTION_45	IF_39	IF_41	CALL_47
0x6751	            0x85c0	                           test eax, eax	      3333	ops.c	FUNCTION_45	IF_39	IF_41	CALL_47
0x6753	            0x753d	                           jne 0x40067d2	      3333	ops.c	FUNCTION_45	IF_39	IF_41	CALL_47
0x6755	      0xe800000000	                          call 0x400679a	      3333	ops.c	FUNCTION_45	IF_39	IF_41	CALL_47
0x675a	            0x85c0	                           test eax, eax	      3333	ops.c	FUNCTION_45	IF_39	IF_41	CALL_47
0x675c	            0x7534	                           jne 0x40067d2	      3333	ops.c	FUNCTION_45	IF_39	IF_41	CALL_47
0x675e	    0x83bdc8feffff	              cmp dword [rbp - 0x138], 0	      3334	ops.c	FUNCTION_45	IF_39	IF_41
0x6765	            0x752b	                           jne 0x40067d2	      3334	ops.c	FUNCTION_45	IF_39	IF_41
0x6767	    0x4881bd00ffff	              cmp qword [rbp - 0x100], 0	      3334	ops.c	FUNCTION_45	IF_39	IF_41
0x6772	            0x751e	                           jne 0x40067d2	      3334	ops.c	FUNCTION_45	IF_39	IF_41
0x6774	      0xbf00000000	                              mov edi, 0	      3336	ops.c	FUNCTION_45	IF_39	IF_41	CALL_48
0x6779	      0xe87b010000	                  call sym.copy_yank_reg	      3336	ops.c	FUNCTION_45	IF_39	IF_41	CALL_48
0x677e	      0xbf00000000	                              mov edi, 0	      3337	ops.c	FUNCTION_45	IF_39	IF_41	CALL_49
0x6783	      0xe800000000	                          call 0x40067c8	      3337	ops.c	FUNCTION_45	IF_39	IF_41	CALL_49
0x6788	      0xbf00000000	                              mov edi, 0	      3338	ops.c	FUNCTION_45	IF_39	IF_41	CALL_50
0x678d	      0xe800000000	                          call 0x40067d2	      3338	ops.c	FUNCTION_45	IF_39	IF_41	CALL_50
0x6792	    0x83bda4feffff	              cmp dword [rbp - 0x15c], 0	      3345	ops.c	FUNCTION_45	IF_42	CALL_51
0x6799	            0x7522	                           jne 0x40067fd	      3345	ops.c	FUNCTION_45	IF_42	CALL_51
0x679b	      0xe800000000	                          call 0x40067e0	      3345	ops.c	FUNCTION_45	IF_42	CALL_51
0x67a0	            0x85c0	                           test eax, eax	      3345	ops.c	FUNCTION_45	IF_42	CALL_51
0x67a2	            0x7419	                            je 0x40067fd	      3345	ops.c	FUNCTION_45	IF_42	CALL_51
0x67a4	    0x488b15000000	            mov rdx, qword [0x040067eb] 	      3346	ops.c	FUNCTION_45	CALL_52
0x67ab	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	      3346	ops.c	FUNCTION_45	CALL_52
0x67b2	          0x4889d6	                            mov rsi, rdx	      3346	ops.c	FUNCTION_45	CALL_52
0x67b5	          0x4889c7	                            mov rdi, rax	      3346	ops.c	FUNCTION_45	CALL_52
0x67b8	      0xe828c0ffff	                call sym.yank_do_autocmd	      3346	ops.c	FUNCTION_45	CALL_52
0x67bd	      0xb801000000	                              mov eax, 1	      3349	ops.c	FUNCTION_45
0x67c2	            0xeb2a	                           jmp 0x400682e	      3349	ops.c	FUNCTION_45
0x67c4	              0x90	                                     nop	      3196	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_22
0x67c5	            0xeb01	                           jmp 0x4006808	      3196	ops.c	FUNCTION_45	FOR_1	SWITCH_1	IF_22
0x67c7	              0x90	                                     nop	      3208	ops.c	FUNCTION_45	IF_23	IF_24
0x67c8	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      3352	ops.c	FUNCTION_45	CALL_53
0x67cf	        0x4883c001	                              add rax, 1	      3352	ops.c	FUNCTION_45	CALL_53
0x67d3	          0x4889c7	                            mov rdi, rax	      3352	ops.c	FUNCTION_45	CALL_53
0x67d6	      0xe8fbf1ffff	                      call sym.free_yank	      3352	ops.c	FUNCTION_45	CALL_53
0x67db	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      3353	ops.c	FUNCTION_45
0x67e2	    0x488905000000	            mov qword [0x04006829], rax 	      3353	ops.c	FUNCTION_45
0x67e9	      0xb800000000	                              mov eax, 0	      3354	ops.c	FUNCTION_45
0x67ee	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      3355	ops.c	FUNCTION_45
0x67f2	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      3355	ops.c	FUNCTION_45
0x67fb	            0x7405	                            je 0x4006842	      3355	ops.c	FUNCTION_45
0x67fd	      0xe800000000	                          call 0x4006842	      3355	ops.c	FUNCTION_45
0x6802	    0x4881c4580100	                          add rsp, 0x158	      3355	ops.c	FUNCTION_45
0x6809	              0x5b	                                 pop rbx	      3355	ops.c	FUNCTION_45
0x680a	              0x5d	                                 pop rbp	      3355	ops.c	FUNCTION_45
0x680b	              0xc3	                                     ret	      3355	ops.c	FUNCTION_45
get_op_char	CALL,0:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,0	13
0xdd	              0x55	                                push rbp	       213	ops.c	FUNCTION_3
0xde	          0x4889e5	                            mov rbp, rsp	       213	ops.c	FUNCTION_3
0xe1	          0x897dfc	                mov dword [rbp - 4], edi	       213	ops.c	FUNCTION_3
0xe4	          0x8b45fc	                mov eax, dword [rbp - 4]	       214	ops.c	FUNCTION_3
0xe7	          0x4863d0	                         movsxd rdx, eax	       214	ops.c	FUNCTION_3
0xea	          0x4889d0	                            mov rax, rdx	       214	ops.c	FUNCTION_3
0xed	          0x4801c0	                            add rax, rax	       214	ops.c	FUNCTION_3
0xf0	          0x4801d0	                            add rax, rdx	       214	ops.c	FUNCTION_3
0xf3	    0x480500000000	                              add rax, 0	       214	ops.c	FUNCTION_3
0xf9	           0xfb600	                   movzx eax, byte [rax]	       214	ops.c	FUNCTION_3
0xfc	           0xfbec0	                           movsx eax, al	       214	ops.c	FUNCTION_3
0xff	              0x5d	                                 pop rbp	       215	ops.c	FUNCTION_3
0x100	              0xc3	                                     ret	       215	ops.c	FUNCTION_3
stuffescaped	CALL,4:FOR,0:SWITCH,0:functions,0:WHILE,2:DO,0:ELSE,1:IF,4	75
0x2279	              0x55	                                push rbp	      1454	ops.c	FUNCTION_27
0x227a	          0x4889e5	                            mov rbp, rsp	      1454	ops.c	FUNCTION_27
0x227d	        0x4883ec20	                           sub rsp, 0x20	      1454	ops.c	FUNCTION_27
0x2281	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1454	ops.c	FUNCTION_27
0x2285	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1454	ops.c	FUNCTION_27
0x2288	      0xe9cb000000	                           jmp 0x4002398	      1458	ops.c	FUNCTION_27	WHILE_1
0x228d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1463	ops.c	FUNCTION_27	WHILE_1
0x2291	        0x488945f8	                mov qword [rbp - 8], rax	      1463	ops.c	FUNCTION_27	WHILE_1
0x2295	            0xeb0c	                           jmp 0x40022e3	      1464	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x2297	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1470	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x229b	        0x4883c001	                              add rax, 1	      1470	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x229f	        0x488945e8	             mov qword [rbp - 0x18], rax	      1470	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x22a3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1464	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x22a7	           0xfb600	                   movzx eax, byte [rax]	      1464	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x22aa	            0x3c1f	                            cmp al, 0x1f	      1464	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x22ac	            0x760b	                           jbe 0x40022f9	      1464	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x22ae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1466	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x22b2	           0xfb600	                   movzx eax, byte [rax]	      1466	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x22b5	            0x3c7e	                            cmp al, 0x7e	      1466	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x22b7	            0x76de	                           jbe 0x40022d7	      1466	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x22b9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1469	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x22bd	           0xfb600	                   movzx eax, byte [rax]	      1469	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x22c0	            0x3c80	                            cmp al, 0x80	      1469	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x22c2	            0x7506	                           jne 0x400230a	      1469	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x22c4	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1469	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x22c8	            0x74cd	                            je 0x40022d7	      1469	ops.c	FUNCTION_27	WHILE_1	WHILE_2
0x22ca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1471	ops.c	FUNCTION_27	WHILE_1	IF_1
0x22ce	        0x483b45f8	                cmp rax, qword [rbp - 8]	      1471	ops.c	FUNCTION_27	WHILE_1	IF_1
0x22d2	            0x761d	                           jbe 0x4002331	      1471	ops.c	FUNCTION_27	WHILE_1	IF_1
0x22d4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1472	ops.c	FUNCTION_27	WHILE_1	CALL_1
0x22d8	          0x4889c2	                            mov rdx, rax	      1472	ops.c	FUNCTION_27	WHILE_1	CALL_1
0x22db	        0x488b45f8	                mov rax, qword [rbp - 8]	      1472	ops.c	FUNCTION_27	WHILE_1	CALL_1
0x22df	          0x4829c2	                            sub rdx, rax	      1472	ops.c	FUNCTION_27	WHILE_1	CALL_1
0x22e2	        0x488b45f8	                mov rax, qword [rbp - 8]	      1472	ops.c	FUNCTION_27	WHILE_1	CALL_1
0x22e6	          0x4889d6	                            mov rsi, rdx	      1472	ops.c	FUNCTION_27	WHILE_1	CALL_1
0x22e9	          0x4889c7	                            mov rdi, rax	      1472	ops.c	FUNCTION_27	WHILE_1	CALL_1
0x22ec	      0xe800000000	                          call 0x4002331	      1472	ops.c	FUNCTION_27	WHILE_1	CALL_1
0x22f1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1475	ops.c	FUNCTION_27	WHILE_1	IF_2
0x22f5	           0xfb600	                   movzx eax, byte [rax]	      1475	ops.c	FUNCTION_27	WHILE_1	IF_2
0x22f8	            0x84c0	                             test al, al	      1475	ops.c	FUNCTION_27	WHILE_1	IF_2
0x22fa	            0x745c	                            je 0x4002398	      1475	ops.c	FUNCTION_27	WHILE_1	IF_2
0x22fc	    0x8b0500000000	            mov eax, dword [0x04002342] 	      1478	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_3
0x2302	            0x85c0	                           test eax, eax	      1478	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_3
0x2304	            0x7411	                            je 0x4002357	      1478	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_3
0x2306	        0x488d45e8	                   lea rax, [rbp - 0x18]	      1479	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_2
0x230a	          0x4889c7	                            mov rdi, rax	      1479	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_2
0x230d	      0xe800000000	                          call 0x4002352	      1479	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_2
0x2312	          0x8945f4	              mov dword [rbp - 0xc], eax	      1479	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_2
0x2315	            0xeb15	                           jmp 0x400236c	      1479	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_2
0x2317	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1482	ops.c	FUNCTION_27	WHILE_1	IF_2	ELSE_1
0x231b	        0x488d5001	                      lea rdx, [rax + 1]	      1482	ops.c	FUNCTION_27	WHILE_1	IF_2	ELSE_1
0x231f	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1482	ops.c	FUNCTION_27	WHILE_1	IF_2	ELSE_1
0x2323	           0xfb600	                   movzx eax, byte [rax]	      1482	ops.c	FUNCTION_27	WHILE_1	IF_2	ELSE_1
0x2326	           0xfb6c0	                           movzx eax, al	      1482	ops.c	FUNCTION_27	WHILE_1	IF_2	ELSE_1
0x2329	          0x8945f4	              mov dword [rbp - 0xc], eax	      1482	ops.c	FUNCTION_27	WHILE_1	IF_2	ELSE_1
0x232c	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1483	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x2330	            0x741c	                            je 0x400238e	      1483	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x2332	        0x837df41f	            cmp dword [rbp - 0xc], 0x1f 	      1483	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x2336	            0x7f06	                            jg 0x400237e	      1483	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x2338	        0x837df409	                cmp dword [rbp - 0xc], 9	      1483	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x233c	            0x7506	                           jne 0x4002384	      1483	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x233e	        0x837df47f	            cmp dword [rbp - 0xc], 0x7f 	      1483	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x2342	            0x750a	                           jne 0x400238e	      1483	ops.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x2344	      0xbf16000000	                           mov edi, 0x16	      1484	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_3
0x2349	      0xe800000000	                          call 0x400238e	      1484	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_3
0x234e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1485	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_4
0x2351	            0x89c7	                            mov edi, eax	      1485	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_4
0x2353	      0xe800000000	                          call 0x4002398	      1485	ops.c	FUNCTION_27	WHILE_1	IF_2	CALL_4
0x2358	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1458	ops.c	FUNCTION_27	WHILE_1
0x235c	           0xfb600	                   movzx eax, byte [rax]	      1458	ops.c	FUNCTION_27	WHILE_1
0x235f	            0x84c0	                             test al, al	      1458	ops.c	FUNCTION_27	WHILE_1
0x2361	     0xf8526ffffff	                           jne 0x40022cd	      1458	ops.c	FUNCTION_27	WHILE_1
0x2367	              0x90	                                     nop	      1488	ops.c	FUNCTION_27
0x2368	              0xc9	                                   leave	      1488	ops.c	FUNCTION_27
0x2369	              0xc3	                                     ret	      1488	ops.c	FUNCTION_27
insert_reg	CALL,10:FOR,1:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,3:IF,8	107
0x20dc	              0x55	                                push rbp	      1392	ops.c	FUNCTION_26
0x20dd	          0x4889e5	                            mov rbp, rsp	      1392	ops.c	FUNCTION_26
0x20e0	        0x4883ec30	                           sub rsp, 0x30	      1392	ops.c	FUNCTION_26
0x20e4	          0x897ddc	             mov dword [rbp - 0x24], edi	      1392	ops.c	FUNCTION_26
0x20e7	          0x8975d8	             mov dword [rbp - 0x28], esi	      1392	ops.c	FUNCTION_26
0x20ea	    0x64488b042528	                mov rax, qword fs:[0x28]	      1392	ops.c	FUNCTION_26
0x20f3	        0x488945f8	                mov qword [rbp - 8], rax	      1392	ops.c	FUNCTION_26
0x20f7	            0x31c0	                            xor eax, eax	      1392	ops.c	FUNCTION_26
0x20f9	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	      1394	ops.c	FUNCTION_26
0x2100	      0xe800000000	                          call 0x4002145	      1403	ops.c	FUNCTION_26	CALL_1
0x2105	    0x8b0500000000	            mov eax, dword [0x0400214b] 	      1404	ops.c	FUNCTION_26	IF_1
0x210b	            0x85c0	                           test eax, eax	      1404	ops.c	FUNCTION_26	IF_1
0x210d	            0x740a	                            je 0x4002159	      1404	ops.c	FUNCTION_26	IF_1
0x210f	      0xb800000000	                              mov eax, 0	      1405	ops.c	FUNCTION_26	IF_1
0x2114	      0xe94a010000	                           jmp 0x40022a3	      1405	ops.c	FUNCTION_26	IF_1
0x2119	        0x837ddc00	               cmp dword [rbp - 0x24], 0	      1408	ops.c	FUNCTION_26	IF_2	CALL_2
0x211d	            0x741d	                            je 0x400217c	      1408	ops.c	FUNCTION_26	IF_2	CALL_2
0x211f	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1408	ops.c	FUNCTION_26	IF_2	CALL_2
0x2122	      0xbe00000000	                              mov esi, 0	      1408	ops.c	FUNCTION_26	IF_2	CALL_2
0x2127	            0x89c7	                            mov edi, eax	      1408	ops.c	FUNCTION_26	IF_2	CALL_2
0x2129	      0xe800000000	                          call 0x400216e	      1408	ops.c	FUNCTION_26	IF_2	CALL_2
0x212e	            0x85c0	                           test eax, eax	      1408	ops.c	FUNCTION_26	IF_2	CALL_2
0x2130	            0x750a	                           jne 0x400217c	      1408	ops.c	FUNCTION_26	IF_2	CALL_2
0x2132	      0xb800000000	                              mov eax, 0	      1409	ops.c	FUNCTION_26	IF_2
0x2137	      0xe927010000	                           jmp 0x40022a3	      1409	ops.c	FUNCTION_26	IF_2
0x213c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1412	ops.c	FUNCTION_26	CALL_3
0x213f	            0x89c7	                            mov edi, eax	      1412	ops.c	FUNCTION_26	CALL_3
0x2141	      0xe800000000	                          call 0x4002186	      1412	ops.c	FUNCTION_26	CALL_3
0x2146	          0x8945dc	             mov dword [rbp - 0x24], eax	      1412	ops.c	FUNCTION_26	CALL_3
0x2149	        0x837ddc2e	           cmp dword [rbp - 0x24], 0x2e 	      1415	ops.c	FUNCTION_26	IF_3
0x214d	            0x751c	                           jne 0x40021ab	      1415	ops.c	FUNCTION_26	IF_3
0x214f	      0xba01000000	                              mov edx, 1	      1416	ops.c	FUNCTION_26	CALL_4
0x2154	      0xbe01000000	                              mov esi, 1	      1416	ops.c	FUNCTION_26	CALL_4
0x2159	      0xbf00000000	                              mov edi, 0	      1416	ops.c	FUNCTION_26	CALL_4
0x215e	      0xe800000000	                          call 0x40021a3	      1416	ops.c	FUNCTION_26	CALL_4
0x2163	          0x8945e4	             mov dword [rbp - 0x1c], eax	      1416	ops.c	FUNCTION_26	CALL_4
0x2166	      0xe9f5000000	                           jmp 0x40022a0	      1416	ops.c	FUNCTION_26	CALL_4
0x216b	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1417	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x216f	        0x488d75e8	                   lea rsi, [rbp - 0x18]	      1417	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x2173	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1417	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x2176	      0xb901000000	                              mov ecx, 1	      1417	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x217b	            0x89c7	                            mov edi, eax	      1417	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x217d	      0xe800000000	                          call 0x40021c2	      1417	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x2182	            0x85c0	                           test eax, eax	      1417	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x2184	            0x7440	                            je 0x4002206	      1417	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_5
0x2186	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1419	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_5
0x218a	          0x4885c0	                           test rax, rax	      1419	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_5
0x218d	            0x750a	                           jne 0x40021d9	      1419	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_5
0x218f	      0xb800000000	                              mov eax, 0	      1420	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_5
0x2194	      0xe9ca000000	                           jmp 0x40022a3	      1420	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_5
0x2199	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1421	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_6
0x219d	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1421	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_6
0x21a0	            0x89d6	                            mov esi, edx	      1421	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_6
0x21a2	          0x4889c7	                            mov rdi, rax	      1421	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_6
0x21a5	      0xe8cf000000	                   call sym.stuffescaped	      1421	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_6
0x21aa	          0x8b45e0	             mov eax, dword [rbp - 0x20]	      1422	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_6
0x21ad	            0x85c0	                           test eax, eax	      1422	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_6
0x21af	     0xf84ab000000	                            je 0x40022a0	      1422	ops.c	FUNCTION_26	ELSE_1	IF_4	IF_6
0x21b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1423	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_7
0x21b9	          0x4889c7	                            mov rdi, rax	      1423	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_7
0x21bc	      0xe800000000	                          call 0x4002201	      1423	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_7
0x21c1	      0xe99a000000	                           jmp 0x40022a0	      1423	ops.c	FUNCTION_26	ELSE_1	IF_4	CALL_7
0x21c6	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1427	ops.c	FUNCTION_26	ELSE_2	CALL_8
0x21c9	      0xbe00000000	                              mov esi, 0	      1427	ops.c	FUNCTION_26	ELSE_2	CALL_8
0x21ce	            0x89c7	                            mov edi, eax	      1427	ops.c	FUNCTION_26	ELSE_2	CALL_8
0x21d0	      0xe800000000	                          call 0x4002215	      1427	ops.c	FUNCTION_26	ELSE_2	CALL_8
0x21d5	    0x488b05000000	            mov rax, qword [0x0400221c] 	      1428	ops.c	FUNCTION_26	ELSE_2	IF_7
0x21dc	          0x488b00	                    mov rax, qword [rax]	      1428	ops.c	FUNCTION_26	ELSE_2	IF_7
0x21df	          0x4885c0	                           test rax, rax	      1428	ops.c	FUNCTION_26	ELSE_2	IF_7
0x21e2	            0x7509	                           jne 0x400222d	      1428	ops.c	FUNCTION_26	ELSE_2	IF_7
0x21e4	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	      1429	ops.c	FUNCTION_26	ELSE_2	IF_7
0x21eb	            0xeb73	                           jmp 0x40022a0	      1429	ops.c	FUNCTION_26	ELSE_2	IF_7
0x21ed	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      1432	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x21f5	            0xeb58	                           jmp 0x400228f	      1432	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x21f7	    0x488b05000000	            mov rax, qword [0x0400223e] 	      1434	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_9
0x21fe	          0x488b00	                    mov rax, qword [rax]	      1434	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_9
0x2201	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1434	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_9
0x2205	        0x48c1e203	                              shl rdx, 3	      1434	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_9
0x2209	          0x4801d0	                            add rax, rdx	      1434	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_9
0x220c	          0x488b00	                    mov rax, qword [rax]	      1434	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_9
0x220f	          0x8b55d8	             mov edx, dword [rbp - 0x28]	      1434	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_9
0x2212	            0x89d6	                            mov esi, edx	      1434	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_9
0x2214	          0x4889c7	                            mov rdi, rax	      1434	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_9
0x2217	      0xe85d000000	                   call sym.stuffescaped	      1434	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_9
0x221c	    0x488b05000000	            mov rax, qword [0x04002263] 	      1439	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_8
0x2223	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      1439	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_8
0x2227	            0x3c01	                               cmp al, 1	      1439	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_8
0x2229	            0x7415	                            je 0x4002280	      1439	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_8
0x222b	    0x488b05000000	            mov rax, qword [0x04002272] 	      1439	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_8
0x2232	        0x488b4008	                mov rax, qword [rax + 8]	      1439	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_8
0x2236	        0x4883e801	                              sub rax, 1	      1439	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_8
0x223a	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      1439	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_8
0x223e	            0x7e0a	                           jle 0x400228a	      1439	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	IF_8
0x2240	      0xbf0a000000	                            mov edi, 0xa	      1440	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_10
0x2245	      0xe800000000	                          call 0x400228a	      1440	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1	CALL_10
0x224a	      0x488345f001	               add qword [rbp - 0x10], 1	      1432	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x224f	    0x488b05000000	            mov rax, qword [0x04002296] 	      1432	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x2256	        0x488b4008	                mov rax, qword [rax + 8]	      1432	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x225a	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	      1432	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x225e	            0x7f97	                            jg 0x4002237	      1432	ops.c	FUNCTION_26	ELSE_2	ELSE_3	FOR_1
0x2260	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      1445	ops.c	FUNCTION_26
0x2263	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1446	ops.c	FUNCTION_26
0x2267	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1446	ops.c	FUNCTION_26
0x2270	            0x7405	                            je 0x40022b7	      1446	ops.c	FUNCTION_26
0x2272	      0xe800000000	                          call 0x40022b7	      1446	ops.c	FUNCTION_26
0x2277	              0xc9	                                   leave	      1446	ops.c	FUNCTION_26
0x2278	              0xc3	                                     ret	      1446	ops.c	FUNCTION_26
fex_format	CALL,8:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,3	54
0x9cbf	              0x55	                                push rbp	      4873	ops.c	FUNCTION_59
0x9cc0	          0x4889e5	                            mov rbp, rsp	      4873	ops.c	FUNCTION_59
0x9cc3	        0x4883ec30	                           sub rsp, 0x30	      4873	ops.c	FUNCTION_59
0x9cc7	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4873	ops.c	FUNCTION_59
0x9ccb	        0x488975e0	             mov qword [rbp - 0x20], rsi	      4873	ops.c	FUNCTION_59
0x9ccf	          0x8955dc	             mov dword [rbp - 0x24], edx	      4873	ops.c	FUNCTION_59
0x9cd2	      0xbe04000000	                              mov esi, 4	      4874	ops.c	FUNCTION_59	CALL_1
0x9cd7	      0xbf00000000	                              mov edi, 0	      4874	ops.c	FUNCTION_59	CALL_1
0x9cdc	      0xe800000000	                          call 0x4009d21	      4874	ops.c	FUNCTION_59	CALL_1
0x9ce1	          0x8945f0	             mov dword [rbp - 0x10], eax	      4874	ops.c	FUNCTION_59	CALL_1
0x9ce4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4883	ops.c	FUNCTION_59	CALL_2
0x9ce8	          0x4889c6	                            mov rsi, rax	      4883	ops.c	FUNCTION_59	CALL_2
0x9ceb	      0xbf09000000	                              mov edi, 9	      4883	ops.c	FUNCTION_59	CALL_2
0x9cf0	      0xe800000000	                          call 0x4009d35	      4883	ops.c	FUNCTION_59	CALL_2
0x9cf5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      4884	ops.c	FUNCTION_59	CALL_3
0x9cf9	          0x4889c6	                            mov rsi, rax	      4884	ops.c	FUNCTION_59	CALL_3
0x9cfc	      0xbf00000000	                              mov edi, 0	      4884	ops.c	FUNCTION_59	CALL_3
0x9d01	      0xe800000000	                          call 0x4009d46	      4884	ops.c	FUNCTION_59	CALL_3
0x9d06	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      4885	ops.c	FUNCTION_59	CALL_4
0x9d09	            0x89c7	                            mov edi, eax	      4885	ops.c	FUNCTION_59	CALL_4
0x9d0b	      0xe800000000	                          call 0x4009d50	      4885	ops.c	FUNCTION_59	CALL_4
0x9d10	    0x488b05000000	            mov rax, qword [0x04009d57] 	      4888	ops.c	FUNCTION_59	CALL_5
0x9d17	    0x488b80e81400	          mov rax, qword [rax + 0x14e8] 	      4888	ops.c	FUNCTION_59	CALL_5
0x9d1e	          0x4889c7	                            mov rdi, rax	      4888	ops.c	FUNCTION_59	CALL_5
0x9d21	      0xe800000000	                          call 0x4009d66	      4888	ops.c	FUNCTION_59	CALL_5
0x9d26	        0x488945f8	                mov qword [rbp - 8], rax	      4888	ops.c	FUNCTION_59	CALL_5
0x9d2a	      0x48837df800	                  cmp qword [rbp - 8], 0	      4889	ops.c	FUNCTION_59	IF_1
0x9d2f	            0x7507	                           jne 0x4009d78	      4889	ops.c	FUNCTION_59	IF_1
0x9d31	      0xb800000000	                              mov eax, 0	      4890	ops.c	FUNCTION_59	IF_1
0x9d36	            0xeb5c	                           jmp 0x4009dd4	      4890	ops.c	FUNCTION_59	IF_1
0x9d38	        0x837df000	               cmp dword [rbp - 0x10], 0	      4895	ops.c	FUNCTION_59	IF_2
0x9d3c	            0x740f	                            je 0x4009d8d	      4895	ops.c	FUNCTION_59	IF_2
0x9d3e	    0x8b0500000000	            mov eax, dword [0x04009d84] 	      4896	ops.c	FUNCTION_59	IF_2
0x9d44	          0x83c001	                              add eax, 1	      4896	ops.c	FUNCTION_59	IF_2
0x9d47	    0x890500000000	            mov dword [0x04009d8d], eax 	      4896	ops.c	FUNCTION_59	IF_2
0x9d4d	        0x488b45f8	                mov rax, qword [rbp - 8]	      4897	ops.c	FUNCTION_59	CALL_6
0x9d51	          0x4889c7	                            mov rdi, rax	      4897	ops.c	FUNCTION_59	CALL_6
0x9d54	      0xe800000000	                          call 0x4009d99	      4897	ops.c	FUNCTION_59	CALL_6
0x9d59	          0x8945f4	              mov dword [rbp - 0xc], eax	      4897	ops.c	FUNCTION_59	CALL_6
0x9d5c	        0x837df000	               cmp dword [rbp - 0x10], 0	      4898	ops.c	FUNCTION_59	IF_3
0x9d60	            0x740f	                            je 0x4009db1	      4898	ops.c	FUNCTION_59	IF_3
0x9d62	    0x8b0500000000	            mov eax, dword [0x04009da8] 	      4899	ops.c	FUNCTION_59	IF_3
0x9d68	          0x83e801	                              sub eax, 1	      4899	ops.c	FUNCTION_59	IF_3
0x9d6b	    0x890500000000	            mov dword [0x04009db1], eax 	      4899	ops.c	FUNCTION_59	IF_3
0x9d71	      0xbaffffffff	                     mov edx, 0xffffffff	      4901	ops.c	FUNCTION_59	CALL_7
0x9d76	      0xbe00000000	                              mov esi, 0	      4901	ops.c	FUNCTION_59	CALL_7
0x9d7b	      0xbf31000000	                           mov edi, 0x31	      4901	ops.c	FUNCTION_59	CALL_7
0x9d80	      0xe800000000	                          call 0x4009dc5	      4901	ops.c	FUNCTION_59	CALL_7
0x9d85	        0x488b45f8	                mov rax, qword [rbp - 8]	      4902	ops.c	FUNCTION_59	CALL_8
0x9d89	          0x4889c7	                            mov rdi, rax	      4902	ops.c	FUNCTION_59	CALL_8
0x9d8c	      0xe800000000	                          call 0x4009dd1	      4902	ops.c	FUNCTION_59	CALL_8
0x9d91	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      4904	ops.c	FUNCTION_59
0x9d94	              0xc9	                                   leave	      4905	ops.c	FUNCTION_59
0x9d95	              0xc3	                                     ret	      4905	ops.c	FUNCTION_59
ends_in_white	CALL,3:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,1	37
0xa418	              0x55	                                push rbp	      5189	ops.c	FUNCTION_61
0xa419	          0x4889e5	                            mov rbp, rsp	      5189	ops.c	FUNCTION_61
0xa41c	        0x4883ec20	                           sub rsp, 0x20	      5189	ops.c	FUNCTION_61
0xa420	        0x48897de8	             mov qword [rbp - 0x18], rdi	      5189	ops.c	FUNCTION_61
0xa424	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      5190	ops.c	FUNCTION_61	CALL_1
0xa428	          0x4889c7	                            mov rdi, rax	      5190	ops.c	FUNCTION_61	CALL_1
0xa42b	      0xe800000000	                          call 0x400a470	      5190	ops.c	FUNCTION_61	CALL_1
0xa430	        0x488945f0	             mov qword [rbp - 0x10], rax	      5190	ops.c	FUNCTION_61	CALL_1
0xa434	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5193	ops.c	FUNCTION_61	IF_1
0xa438	           0xfb600	                   movzx eax, byte [rax]	      5193	ops.c	FUNCTION_61	IF_1
0xa43b	            0x84c0	                             test al, al	      5193	ops.c	FUNCTION_61	IF_1
0xa43d	            0x7507	                           jne 0x400a486	      5193	ops.c	FUNCTION_61	IF_1
0xa43f	      0xb800000000	                              mov eax, 0	      5194	ops.c	FUNCTION_61	IF_1
0xa444	            0xeb45	                           jmp 0x400a4cb	      5194	ops.c	FUNCTION_61	IF_1
0xa446	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      5197	ops.c	FUNCTION_61	CALL_2
0xa44a	          0x4889c7	                            mov rdi, rax	      5197	ops.c	FUNCTION_61	CALL_2
0xa44d	      0xe800000000	                          call 0x400a492	      5197	ops.c	FUNCTION_61	CALL_2
0xa452	        0x4883e801	                              sub rax, 1	      5197	ops.c	FUNCTION_61	CALL_2
0xa456	        0x488945f8	                mov qword [rbp - 8], rax	      5197	ops.c	FUNCTION_61	CALL_2
0xa45a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      5198	ops.c	FUNCTION_61	CALL_3
0xa45e	        0x488b45f8	                mov rax, qword [rbp - 8]	      5198	ops.c	FUNCTION_61	CALL_3
0xa462	          0x4801d0	                            add rax, rdx	      5198	ops.c	FUNCTION_61	CALL_3
0xa465	           0xfb600	                   movzx eax, byte [rax]	      5198	ops.c	FUNCTION_61	CALL_3
0xa468	            0x3c20	                            cmp al, 0x20	      5198	ops.c	FUNCTION_61	CALL_3
0xa46a	            0x7412	                            je 0x400a4be	      5198	ops.c	FUNCTION_61	CALL_3
0xa46c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      5198	ops.c	FUNCTION_61	CALL_3
0xa470	        0x488b45f8	                mov rax, qword [rbp - 8]	      5198	ops.c	FUNCTION_61	CALL_3
0xa474	          0x4801d0	                            add rax, rdx	      5198	ops.c	FUNCTION_61	CALL_3
0xa477	           0xfb600	                   movzx eax, byte [rax]	      5198	ops.c	FUNCTION_61	CALL_3
0xa47a	            0x3c09	                               cmp al, 9	      5198	ops.c	FUNCTION_61	CALL_3
0xa47c	            0x7507	                           jne 0x400a4c5	      5198	ops.c	FUNCTION_61	CALL_3
0xa47e	      0xb801000000	                              mov eax, 1	      5198	ops.c	FUNCTION_61	CALL_3
0xa483	            0xeb05	                           jmp 0x400a4ca	      5198	ops.c	FUNCTION_61	CALL_3
0xa485	      0xb800000000	                              mov eax, 0	      5198	ops.c	FUNCTION_61	CALL_3
0xa48a	              0x90	                                     nop	      5198	ops.c	FUNCTION_61	CALL_3
0xa48b	              0xc9	                                   leave	      5199	ops.c	FUNCTION_61
0xa48c	              0xc3	                                     ret	      5199	ops.c	FUNCTION_61
shift_line	CALL,4:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,4:IF,7	77
0x46b	              0x55	                                push rbp	       330	ops.c	FUNCTION_6
0x46c	          0x4889e5	                            mov rbp, rsp	       330	ops.c	FUNCTION_6
0x46f	        0x4883ec20	                           sub rsp, 0x20	       330	ops.c	FUNCTION_6
0x473	          0x897dec	             mov dword [rbp - 0x14], edi	       330	ops.c	FUNCTION_6
0x476	          0x8975e8	             mov dword [rbp - 0x18], esi	       330	ops.c	FUNCTION_6
0x479	          0x8955e4	             mov dword [rbp - 0x1c], edx	       330	ops.c	FUNCTION_6
0x47c	          0x894de0	             mov dword [rbp - 0x20], ecx	       330	ops.c	FUNCTION_6
0x47f	    0x488b05000000	            mov rax, qword [0x040004c6] 	       333	ops.c	FUNCTION_6	CALL_1
0x486	          0x4889c7	                            mov rdi, rax	       333	ops.c	FUNCTION_6	CALL_1
0x489	      0xe800000000	                          call 0x40004ce	       333	ops.c	FUNCTION_6	CALL_1
0x48e	          0x8945f8	                mov dword [rbp - 8], eax	       333	ops.c	FUNCTION_6	CALL_1
0x491	      0xe800000000	                          call 0x40004d6	       335	ops.c	FUNCTION_6	CALL_2
0x496	          0x8945f0	             mov dword [rbp - 0x10], eax	       335	ops.c	FUNCTION_6	CALL_2
0x499	        0x837de800	               cmp dword [rbp - 0x18], 0	       337	ops.c	FUNCTION_6	IF_1
0x49d	            0x7451	                            je 0x4000530	       337	ops.c	FUNCTION_6	IF_1
0x49f	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       339	ops.c	FUNCTION_6	IF_1
0x4a2	              0x99	                                     cdq	       339	ops.c	FUNCTION_6	IF_1
0x4a3	          0xf77df8	                    idiv dword [rbp - 8]	       339	ops.c	FUNCTION_6	IF_1
0x4a6	          0x8945f4	              mov dword [rbp - 0xc], eax	       339	ops.c	FUNCTION_6	IF_1
0x4a9	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       340	ops.c	FUNCTION_6	IF_1
0x4ac	              0x99	                                     cdq	       340	ops.c	FUNCTION_6	IF_1
0x4ad	          0xf77df8	                    idiv dword [rbp - 8]	       340	ops.c	FUNCTION_6	IF_1
0x4b0	          0x8955fc	                mov dword [rbp - 4], edx	       340	ops.c	FUNCTION_6	IF_1
0x4b3	        0x837dfc00	                  cmp dword [rbp - 4], 0	       341	ops.c	FUNCTION_6	IF_1	IF_2
0x4b7	            0x740a	                            je 0x4000503	       341	ops.c	FUNCTION_6	IF_1	IF_2
0x4b9	        0x837dec00	               cmp dword [rbp - 0x14], 0	       341	ops.c	FUNCTION_6	IF_1	IF_2
0x4bd	            0x7404	                            je 0x4000503	       341	ops.c	FUNCTION_6	IF_1	IF_2
0x4bf	        0x836de401	               sub dword [rbp - 0x1c], 1	       342	ops.c	FUNCTION_6	IF_1	IF_2
0x4c3	        0x837dec00	               cmp dword [rbp - 0x14], 0	       343	ops.c	FUNCTION_6	IF_1	IF_3
0x4c7	            0x7415	                            je 0x400051e	       343	ops.c	FUNCTION_6	IF_1	IF_3
0x4c9	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       345	ops.c	FUNCTION_6	IF_1	IF_3
0x4cc	          0x2945f4	              sub dword [rbp - 0xc], eax	       345	ops.c	FUNCTION_6	IF_1	IF_3
0x4cf	        0x837df400	                cmp dword [rbp - 0xc], 0	       346	ops.c	FUNCTION_6	IF_1	IF_3	IF_4
0x4d3	            0x790f	                           jns 0x4000524	       346	ops.c	FUNCTION_6	IF_1	IF_3	IF_4
0x4d5	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       347	ops.c	FUNCTION_6	IF_1	IF_3	IF_4
0x4dc	            0xeb06	                           jmp 0x4000524	       347	ops.c	FUNCTION_6	IF_1	IF_3	IF_4
0x4de	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       350	ops.c	FUNCTION_6	IF_1	ELSE_1
0x4e1	           0x145f4	              add dword [rbp - 0xc], eax	       350	ops.c	FUNCTION_6	IF_1	ELSE_1
0x4e4	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       351	ops.c	FUNCTION_6	IF_1	ELSE_1
0x4e7	         0xfaf45f8	               imul eax, dword [rbp - 8]	       351	ops.c	FUNCTION_6	IF_1	ELSE_1
0x4eb	          0x8945f0	             mov dword [rbp - 0x10], eax	       351	ops.c	FUNCTION_6	IF_1	ELSE_1
0x4ee	            0xeb29	                           jmp 0x4000559	       351	ops.c	FUNCTION_6	IF_1	ELSE_1
0x4f0	        0x837dec00	               cmp dword [rbp - 0x14], 0	       355	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5
0x4f4	            0x7419	                            je 0x400054f	       355	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5
0x4f6	          0x8b45f8	                mov eax, dword [rbp - 8]	       357	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5
0x4f9	         0xfaf45e4	            imul eax, dword [rbp - 0x1c]	       357	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5
0x4fd	          0x2945f0	             sub dword [rbp - 0x10], eax	       357	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5
0x500	        0x837df000	               cmp dword [rbp - 0x10], 0	       358	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5	IF_6
0x504	            0x7913	                           jns 0x4000559	       358	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5	IF_6
0x506	    0xc745f0000000	               mov dword [rbp - 0x10], 0	       359	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5	IF_6
0x50d	            0xeb0a	                           jmp 0x4000559	       359	ops.c	FUNCTION_6	ELSE_1	ELSE_2	IF_5	IF_6
0x50f	          0x8b45f8	                mov eax, dword [rbp - 8]	       362	ops.c	FUNCTION_6	ELSE_2	ELSE_3
0x512	         0xfaf45e4	            imul eax, dword [rbp - 0x1c]	       362	ops.c	FUNCTION_6	ELSE_2	ELSE_3
0x516	           0x145f0	             add dword [rbp - 0x10], eax	       362	ops.c	FUNCTION_6	ELSE_2	ELSE_3
0x519	    0x8b0500000000	            mov eax, dword [0x0400055f] 	       367	ops.c	FUNCTION_6	IF_7
0x51f	      0x2580000000	                           and eax, 0x80	       367	ops.c	FUNCTION_6	IF_7
0x524	            0x85c0	                           test eax, eax	       367	ops.c	FUNCTION_6	IF_7
0x526	            0x7421	                            je 0x4000589	       367	ops.c	FUNCTION_6	IF_7
0x528	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       368	ops.c	FUNCTION_6	CALL_3
0x52b	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       368	ops.c	FUNCTION_6	CALL_3
0x52e	          0x4189d0	                            mov r8d, edx	       368	ops.c	FUNCTION_6	CALL_3
0x531	      0xb900000000	                              mov ecx, 0	       368	ops.c	FUNCTION_6	CALL_3
0x536	      0xba00000000	                              mov edx, 0	       368	ops.c	FUNCTION_6	CALL_3
0x53b	            0x89c6	                            mov esi, eax	       368	ops.c	FUNCTION_6	CALL_3
0x53d	      0xbf01000000	                              mov edi, 1	       368	ops.c	FUNCTION_6	CALL_3
0x542	      0xe800000000	                          call 0x4000587	       368	ops.c	FUNCTION_6	CALL_3
0x547	            0xeb16	                           jmp 0x400059f	       372	ops.c	FUNCTION_6
0x549	        0x837de000	               cmp dword [rbp - 0x20], 0	       371	ops.c	FUNCTION_6	CALL_4
0x54d	           0xf95c0	                                setne al	       371	ops.c	FUNCTION_6	CALL_4
0x550	           0xfb6d0	                           movzx edx, al	       371	ops.c	FUNCTION_6	CALL_4
0x553	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       371	ops.c	FUNCTION_6	CALL_4
0x556	            0x89d6	                            mov esi, edx	       371	ops.c	FUNCTION_6	CALL_4
0x558	            0x89c7	                            mov edi, eax	       371	ops.c	FUNCTION_6	CALL_4
0x55a	      0xe800000000	                          call 0x400059f	       371	ops.c	FUNCTION_6	CALL_4
0x55f	              0x90	                                     nop	       372	ops.c	FUNCTION_6
0x560	              0xc9	                                   leave	       372	ops.c	FUNCTION_6
0x561	              0xc3	                                     ret	       372	ops.c	FUNCTION_6
clear_oparg	CALL,1:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,0	12
0xe6ee	              0x55	                                push rbp	      7224	ops.c	FUNCTION_89
0xe6ef	          0x4889e5	                            mov rbp, rsp	      7224	ops.c	FUNCTION_89
0xe6f2	        0x4883ec10	                           sub rsp, 0x10	      7224	ops.c	FUNCTION_89
0xe6f6	        0x48897df8	                mov qword [rbp - 8], rdi	      7224	ops.c	FUNCTION_89
0xe6fa	        0x488b45f8	                mov rax, qword [rbp - 8]	      7225	ops.c	FUNCTION_89	CALL_1
0xe6fe	      0xba80000000	                           mov edx, 0x80	      7225	ops.c	FUNCTION_89	CALL_1
0xe703	      0xbe00000000	                              mov esi, 0	      7225	ops.c	FUNCTION_89	CALL_1
0xe708	          0x4889c7	                            mov rdi, rax	      7225	ops.c	FUNCTION_89	CALL_1
0xe70b	      0xe800000000	                          call 0x400e750	      7225	ops.c	FUNCTION_89	CALL_1
0xe710	              0x90	                                     nop	      7226	ops.c	FUNCTION_89
0xe711	              0xc9	                                   leave	      7226	ops.c	FUNCTION_89
0xe712	              0xc3	                                     ret	      7226	ops.c	FUNCTION_89
clip_get_selection	CALL,7:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,1:IF,3	127
0xd388	              0x55	                                push rbp	      6525	ops.c	FUNCTION_75
0xd389	          0x4889e5	                            mov rbp, rsp	      6525	ops.c	FUNCTION_75
0xd38c	    0x4881ec500100	                          sub rsp, 0x150	      6525	ops.c	FUNCTION_75
0xd393	    0x4889bdb8feff	            mov qword [rbp - 0x148], rdi	      6525	ops.c	FUNCTION_75
0xd39a	    0x64488b042528	                mov rax, qword fs:[0x28]	      6525	ops.c	FUNCTION_75
0xd3a3	        0x488945f8	                mov qword [rbp - 8], rax	      6525	ops.c	FUNCTION_75
0xd3a7	            0x31c0	                            xor eax, eax	      6525	ops.c	FUNCTION_75
0xd3a9	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	      6536	ops.c	FUNCTION_75	IF_1
0xd3b0	          0x8b4004	                mov eax, dword [rax + 4]	      6536	ops.c	FUNCTION_75	IF_1
0xd3b3	            0x85c0	                           test eax, eax	      6536	ops.c	FUNCTION_75	IF_1
0xd3b5	     0xf8466020000	                            je 0x400d661	      6536	ops.c	FUNCTION_75	IF_1
0xd3bb	    0x4881bdb8feff	              cmp qword [rbp - 0x148], 0	      6538	ops.c	FUNCTION_75	IF_1	IF_2
0xd3c6	            0x7510	                           jne 0x400d418	      6538	ops.c	FUNCTION_75	IF_1	IF_2
0xd3c8	    0x488b05000000	            mov rax, qword [0x0400d40f] 	      6538	ops.c	FUNCTION_75	IF_1	IF_2
0xd3cf	          0x4885c0	                           test rax, rax	      6538	ops.c	FUNCTION_75	IF_1	IF_2
0xd3d2	     0xf8572020000	                           jne 0x400d68a	      6538	ops.c	FUNCTION_75	IF_1	IF_2
0xd3d8	    0x4881bdb8feff	              cmp qword [rbp - 0x148], 0	      6539	ops.c	FUNCTION_75	IF_1	IF_2
0xd3e3	            0x7510	                           jne 0x400d435	      6539	ops.c	FUNCTION_75	IF_1	IF_2
0xd3e5	    0x488b05000000	            mov rax, qword [0x0400d42c] 	      6539	ops.c	FUNCTION_75	IF_1	IF_2
0xd3ec	          0x4885c0	                           test rax, rax	      6539	ops.c	FUNCTION_75	IF_1	IF_2
0xd3ef	     0xf8555020000	                           jne 0x400d68a	      6539	ops.c	FUNCTION_75	IF_1	IF_2
0xd3f5	    0x488b05000000	            mov rax, qword [0x0400d43c] 	      6543	ops.c	FUNCTION_75	IF_1
0xd3fc	    0x488985d0feff	            mov qword [rbp - 0x130], rax	      6543	ops.c	FUNCTION_75	IF_1
0xd403	    0x488b05000000	            mov rax, qword [0x0400d44a] 	      6544	ops.c	FUNCTION_75	IF_1
0xd40a	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      6544	ops.c	FUNCTION_75	IF_1
0xd411	    0x488b05000000	            mov rax, qword [0x0400d458] 	      6545	ops.c	FUNCTION_75	IF_1
0xd418	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      6545	ops.c	FUNCTION_75	IF_1
0xd41c	        0x488b4038	            mov rax, qword [rax + 0x38] 	      6545	ops.c	FUNCTION_75	IF_1
0xd420	    0x488985e0feff	            mov qword [rbp - 0x120], rax	      6545	ops.c	FUNCTION_75	IF_1
0xd427	    0x488995e8feff	            mov qword [rbp - 0x118], rdx	      6545	ops.c	FUNCTION_75	IF_1
0xd42e	    0x488b05000000	            mov rax, qword [0x0400d475] 	      6546	ops.c	FUNCTION_75	IF_1
0xd435	          0x8b4048	            mov eax, dword [rax + 0x48] 	      6546	ops.c	FUNCTION_75	IF_1
0xd438	    0x8985c4feffff	            mov dword [rbp - 0x13c], eax	      6546	ops.c	FUNCTION_75	IF_1
0xd43e	    0x488b05000000	            mov rax, qword [0x0400d485] 	      6547	ops.c	FUNCTION_75	IF_1
0xd445	          0x8b404c	            mov eax, dword [rax + 0x4c] 	      6547	ops.c	FUNCTION_75	IF_1
0xd448	    0x8985c8feffff	            mov dword [rbp - 0x138], eax	      6547	ops.c	FUNCTION_75	IF_1
0xd44e	    0x488b05000000	            mov rax, qword [0x0400d495] 	      6548	ops.c	FUNCTION_75	IF_1
0xd455	    0x488b90d81100	          mov rdx, qword [rax + 0x11d8] 	      6548	ops.c	FUNCTION_75	IF_1
0xd45c	    0x488b80d01100	          mov rax, qword [rax + 0x11d0] 	      6548	ops.c	FUNCTION_75	IF_1
0xd463	    0x48898500ffff	            mov qword [rbp - 0x100], rax	      6548	ops.c	FUNCTION_75	IF_1
0xd46a	    0x48899508ffff	             mov qword [rbp - 0xf8], rdx	      6548	ops.c	FUNCTION_75	IF_1
0xd471	    0x488b05000000	            mov rax, qword [0x0400d4b8] 	      6549	ops.c	FUNCTION_75	IF_1
0xd478	    0x488b90f81100	          mov rdx, qword [rax + 0x11f8] 	      6549	ops.c	FUNCTION_75	IF_1
0xd47f	    0x488b80f01100	          mov rax, qword [rax + 0x11f0] 	      6549	ops.c	FUNCTION_75	IF_1
0xd486	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	      6549	ops.c	FUNCTION_75	IF_1
0xd48d	    0x48899518ffff	             mov qword [rbp - 0xe8], rdx	      6549	ops.c	FUNCTION_75	IF_1
0xd494	    0x488b05000000	            mov rax, qword [0x0400d4db] 	      6550	ops.c	FUNCTION_75	IF_1
0xd49b	    0x488b15000000	            mov rdx, qword [0x0400d4e2] 	      6550	ops.c	FUNCTION_75	IF_1
0xd4a2	    0x488985f0feff	            mov qword [rbp - 0x110], rax	      6550	ops.c	FUNCTION_75	IF_1
0xd4a9	    0x488995f8feff	            mov qword [rbp - 0x108], rdx	      6550	ops.c	FUNCTION_75	IF_1
0xd4b0	    0x8b0500000000	            mov eax, dword [0x0400d4f6] 	      6551	ops.c	FUNCTION_75	IF_1
0xd4b6	    0x8985ccfeffff	            mov dword [rbp - 0x134], eax	      6551	ops.c	FUNCTION_75	IF_1
0xd4bc	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      6552	ops.c	FUNCTION_75	IF_1	CALL_1
0xd4c3	          0x4889c7	                            mov rdi, rax	      6552	ops.c	FUNCTION_75	IF_1	CALL_1
0xd4c6	      0xe800000000	                          call 0x400d50b	      6552	ops.c	FUNCTION_75	IF_1	CALL_1
0xd4cb	    0x4881bdb8feff	              cmp qword [rbp - 0x148], 0	      6553	ops.c	FUNCTION_75	IF_1
0xd4d6	            0x7507	                           jne 0x400d51f	      6553	ops.c	FUNCTION_75	IF_1
0xd4d8	      0xb82b000000	                           mov eax, 0x2b	      6553	ops.c	FUNCTION_75	IF_1
0xd4dd	            0xeb05	                           jmp 0x400d524	      6553	ops.c	FUNCTION_75	IF_1
0xd4df	      0xb82a000000	                           mov eax, 0x2a	      6553	ops.c	FUNCTION_75	IF_1
0xd4e4	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      6553	ops.c	FUNCTION_75	IF_1
0xd4ea	    0xc78570ffffff	               mov dword [rbp - 0x90], 2	      6554	ops.c	FUNCTION_75	IF_1
0xd4f4	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      6555	ops.c	FUNCTION_75	IF_1	CALL_2
0xd4fb	      0xba48000000	                           mov edx, 0x48	      6555	ops.c	FUNCTION_75	IF_1	CALL_2
0xd500	      0xbe00000000	                              mov esi, 0	      6555	ops.c	FUNCTION_75	IF_1	CALL_2
0xd505	          0x4889c7	                            mov rdi, rax	      6555	ops.c	FUNCTION_75	IF_1	CALL_2
0xd508	      0xe800000000	                          call 0x400d54d	      6555	ops.c	FUNCTION_75	IF_1	CALL_2
0xd50d	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      6556	ops.c	FUNCTION_75	IF_1
0xd514	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      6556	ops.c	FUNCTION_75	IF_1
0xd51b	    0xc7852cffffff	           mov dword [rbp - 0xd4], 0x79 	      6557	ops.c	FUNCTION_75	IF_1
0xd525	    0x48c78550ffff	               mov qword [rbp - 0xb0], 1	      6558	ops.c	FUNCTION_75	IF_1
0xd530	    0xc7855cffffff	               mov dword [rbp - 0xa4], 2	      6559	ops.c	FUNCTION_75	IF_1
0xd53a	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	      6560	ops.c	FUNCTION_75	IF_1	CALL_3
0xd541	      0xba01000000	                              mov edx, 1	      6560	ops.c	FUNCTION_75	IF_1	CALL_3
0xd546	      0xbe00000000	                              mov esi, 0	      6560	ops.c	FUNCTION_75	IF_1	CALL_3
0xd54b	          0x4889c7	                            mov rdi, rax	      6560	ops.c	FUNCTION_75	IF_1	CALL_3
0xd54e	      0xe800000000	                          call 0x400d593	      6560	ops.c	FUNCTION_75	IF_1	CALL_3
0xd553	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	      6561	ops.c	FUNCTION_75	IF_1
0xd55a	    0x488905000000	            mov qword [0x0400d5a1], rax 	      6561	ops.c	FUNCTION_75	IF_1
0xd561	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      6562	ops.c	FUNCTION_75	IF_1
0xd568	    0x488905000000	            mov qword [0x0400d5af], rax 	      6562	ops.c	FUNCTION_75	IF_1
0xd56f	    0x488b0d000000	            mov rcx, qword [0x0400d5b6] 	      6563	ops.c	FUNCTION_75	IF_1
0xd576	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	      6563	ops.c	FUNCTION_75	IF_1
0xd57d	    0x488b95e8feff	            mov rdx, qword [rbp - 0x118]	      6563	ops.c	FUNCTION_75	IF_1
0xd584	        0x48894138	             mov qword [rcx + 0x38], rax	      6563	ops.c	FUNCTION_75	IF_1
0xd588	        0x48895140	             mov qword [rcx + 0x40], rdx	      6563	ops.c	FUNCTION_75	IF_1
0xd58c	      0xe800000000	                          call 0x400d5d1	      6564	ops.c	FUNCTION_75	IF_1	CALL_4
0xd591	    0x488b05000000	            mov rax, qword [0x0400d5d8] 	      6565	ops.c	FUNCTION_75	IF_1
0xd598	    0x8b95c4feffff	            mov edx, dword [rbp - 0x13c]	      6565	ops.c	FUNCTION_75	IF_1
0xd59e	          0x895048	             mov dword [rax + 0x48], edx	      6565	ops.c	FUNCTION_75	IF_1
0xd5a1	    0x488b05000000	            mov rax, qword [0x0400d5e8] 	      6566	ops.c	FUNCTION_75	IF_1
0xd5a8	    0x8b95c8feffff	            mov edx, dword [rbp - 0x138]	      6566	ops.c	FUNCTION_75	IF_1
0xd5ae	          0x89504c	             mov dword [rax + 0x4c], edx	      6566	ops.c	FUNCTION_75	IF_1
0xd5b1	    0x488b0d000000	            mov rcx, qword [0x0400d5f8] 	      6567	ops.c	FUNCTION_75	IF_1
0xd5b8	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      6567	ops.c	FUNCTION_75	IF_1
0xd5bf	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	      6567	ops.c	FUNCTION_75	IF_1
0xd5c6	    0x488981d01100	          mov qword [rcx + 0x11d0], rax 	      6567	ops.c	FUNCTION_75	IF_1
0xd5cd	    0x488991d81100	          mov qword [rcx + 0x11d8], rdx 	      6567	ops.c	FUNCTION_75	IF_1
0xd5d4	    0x488b0d000000	            mov rcx, qword [0x0400d61b] 	      6568	ops.c	FUNCTION_75	IF_1
0xd5db	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      6568	ops.c	FUNCTION_75	IF_1
0xd5e2	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	      6568	ops.c	FUNCTION_75	IF_1
0xd5e9	    0x488981f01100	          mov qword [rcx + 0x11f0], rax 	      6568	ops.c	FUNCTION_75	IF_1
0xd5f0	    0x488991f81100	          mov qword [rcx + 0x11f8], rdx 	      6568	ops.c	FUNCTION_75	IF_1
0xd5f7	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      6569	ops.c	FUNCTION_75	IF_1
0xd5fe	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	      6569	ops.c	FUNCTION_75	IF_1
0xd605	    0x488905000000	            mov qword [0x0400d64c], rax 	      6569	ops.c	FUNCTION_75	IF_1
0xd60c	    0x488915000000	            mov qword [0x0400d653], rdx 	      6569	ops.c	FUNCTION_75	IF_1
0xd613	    0x8b85ccfeffff	            mov eax, dword [rbp - 0x134]	      6570	ops.c	FUNCTION_75	IF_1
0xd619	    0x890500000000	            mov dword [0x0400d65f], eax 	      6570	ops.c	FUNCTION_75	IF_1
0xd61f	            0xeb2a	                           jmp 0x400d68b	      6570	ops.c	FUNCTION_75	IF_1
0xd621	      0xe800000000	                          call 0x400d666	      6572	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_5
0xd626	            0x85c0	                           test eax, eax	      6572	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_5
0xd628	            0x7521	                           jne 0x400d68b	      6572	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_5
0xd62a	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	      6574	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_6
0xd631	          0x4889c7	                            mov rdi, rax	      6574	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_6
0xd634	      0xe800000000	                          call 0x400d679	      6574	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_6
0xd639	    0x488b85b8feff	            mov rax, qword [rbp - 0x148]	      6577	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_7
0xd640	          0x4889c7	                            mov rdi, rax	      6577	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_7
0xd643	      0xe800000000	                          call 0x400d688	      6577	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_7
0xd648	            0xeb01	                           jmp 0x400d68b	      6577	ops.c	FUNCTION_75	ELSE_1	IF_3	CALL_7
0xd64a	              0x90	                                     nop	      6540	ops.c	FUNCTION_75	IF_1	IF_2
0xd64b	        0x488b45f8	                mov rax, qword [rbp - 8]	      6579	ops.c	FUNCTION_75
0xd64f	    0x644833042528	                xor rax, qword fs:[0x28]	      6579	ops.c	FUNCTION_75
0xd658	            0x7405	                            je 0x400d69f	      6579	ops.c	FUNCTION_75
0xd65a	      0xe800000000	                          call 0x400d69f	      6579	ops.c	FUNCTION_75
0xd65f	              0xc9	                                   leave	      6579	ops.c	FUNCTION_75
0xd660	              0xc3	                                     ret	      6579	ops.c	FUNCTION_75
free_yank_all	CALL,1:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,0	9
0x5a4a	              0x55	                                push rbp	      3000	ops.c	FUNCTION_44
0x5a4b	          0x4889e5	                            mov rbp, rsp	      3000	ops.c	FUNCTION_44
0x5a4e	    0x488b05000000	            mov rax, qword [0x04005a95] 	      3001	ops.c	FUNCTION_44	CALL_1
0x5a55	        0x488b4008	                mov rax, qword [rax + 8]	      3001	ops.c	FUNCTION_44	CALL_1
0x5a59	          0x4889c7	                            mov rdi, rax	      3001	ops.c	FUNCTION_44	CALL_1
0x5a5c	      0xe875ffffff	                      call sym.free_yank	      3001	ops.c	FUNCTION_44	CALL_1
0x5a61	              0x90	                                     nop	      3002	ops.c	FUNCTION_44
0x5a62	              0x5d	                                 pop rbp	      3002	ops.c	FUNCTION_44
0x5a63	              0xc3	                                     ret	      3002	ops.c	FUNCTION_44
handle_viminfo_register	CALL,5:FOR,2:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,3:IF,13	258
0xc977	              0x55	                                push rbp	      6180	ops.c	FUNCTION_71
0xc978	          0x4889e5	                            mov rbp, rsp	      6180	ops.c	FUNCTION_71
0xc97b	              0x53	                                push rbx	      6180	ops.c	FUNCTION_71
0xc97c	        0x4883ec48	                           sub rsp, 0x48	      6180	ops.c	FUNCTION_71
0xc980	        0x48897db8	             mov qword [rbp - 0x48], rdi	      6180	ops.c	FUNCTION_71
0xc984	          0x8975b4	             mov dword [rbp - 0x4c], esi	      6180	ops.c	FUNCTION_71
0xc987	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6181	ops.c	FUNCTION_71
0xc98b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6181	ops.c	FUNCTION_71
0xc98f	        0x488945e0	             mov qword [rbp - 0x20], rax	      6181	ops.c	FUNCTION_71
0xc993	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6195	ops.c	FUNCTION_71	IF_1
0xc997	            0x8b00	                    mov eax, dword [rax]	      6195	ops.c	FUNCTION_71	IF_1
0xc999	          0x83f805	                              cmp eax, 5	      6195	ops.c	FUNCTION_71	IF_1
0xc99c	     0xf8e41030000	                           jle 0x400cd23	      6195	ops.c	FUNCTION_71	IF_1
0xc9a2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6196	ops.c	FUNCTION_71	IF_1
0xc9a6	            0x8b00	                    mov eax, dword [rax]	      6196	ops.c	FUNCTION_71	IF_1
0xc9a8	            0x85c0	                           test eax, eax	      6196	ops.c	FUNCTION_71	IF_1
0xc9aa	     0xf8533030000	                           jne 0x400cd23	      6196	ops.c	FUNCTION_71	IF_1
0xc9b0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6197	ops.c	FUNCTION_71	IF_1
0xc9b4	        0x4883c020	                           add rax, 0x20	      6197	ops.c	FUNCTION_71	IF_1
0xc9b8	            0x8b00	                    mov eax, dword [rax]	      6197	ops.c	FUNCTION_71	IF_1
0xc9ba	            0x85c0	                           test eax, eax	      6197	ops.c	FUNCTION_71	IF_1
0xc9bc	     0xf8521030000	                           jne 0x400cd23	      6197	ops.c	FUNCTION_71	IF_1
0xc9c2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6198	ops.c	FUNCTION_71	IF_1
0xc9c6	        0x4883c040	                           add rax, 0x40	      6198	ops.c	FUNCTION_71	IF_1
0xc9ca	            0x8b00	                    mov eax, dword [rax]	      6198	ops.c	FUNCTION_71	IF_1
0xc9cc	            0x85c0	                           test eax, eax	      6198	ops.c	FUNCTION_71	IF_1
0xc9ce	     0xf850f030000	                           jne 0x400cd23	      6198	ops.c	FUNCTION_71	IF_1
0xc9d4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6199	ops.c	FUNCTION_71	IF_1
0xc9d8	        0x4883c060	                           add rax, 0x60	      6199	ops.c	FUNCTION_71	IF_1
0xc9dc	            0x8b00	                    mov eax, dword [rax]	      6199	ops.c	FUNCTION_71	IF_1
0xc9de	            0x85c0	                           test eax, eax	      6199	ops.c	FUNCTION_71	IF_1
0xc9e0	     0xf85fd020000	                           jne 0x400cd23	      6199	ops.c	FUNCTION_71	IF_1
0xc9e6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6200	ops.c	FUNCTION_71	IF_1
0xc9ea	        0x4883e880	             sub rax, 0xffffffffffffff80	      6200	ops.c	FUNCTION_71	IF_1
0xc9ee	            0x8b00	                    mov eax, dword [rax]	      6200	ops.c	FUNCTION_71	IF_1
0xc9f0	            0x85c0	                           test eax, eax	      6200	ops.c	FUNCTION_71	IF_1
0xc9f2	     0xf85eb020000	                           jne 0x400cd23	      6200	ops.c	FUNCTION_71	IF_1
0xc9f8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6201	ops.c	FUNCTION_71	IF_1
0xc9fc	    0x4805a0000000	                           add rax, 0xa0	      6201	ops.c	FUNCTION_71	IF_1
0xca02	            0x8b00	                    mov eax, dword [rax]	      6201	ops.c	FUNCTION_71	IF_1
0xca04	            0x85c0	                           test eax, eax	      6201	ops.c	FUNCTION_71	IF_1
0xca06	     0xf85d7020000	                           jne 0x400cd23	      6201	ops.c	FUNCTION_71	IF_1
0xca0c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6203	ops.c	FUNCTION_71
0xca10	        0x488b4008	                mov rax, qword [rax + 8]	      6203	ops.c	FUNCTION_71
0xca14	          0x8945c4	             mov dword [rbp - 0x3c], eax	      6203	ops.c	FUNCTION_71
0xca17	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6204	ops.c	FUNCTION_71
0xca1b	        0x4883c020	                           add rax, 0x20	      6204	ops.c	FUNCTION_71
0xca1f	        0x488b4008	                mov rax, qword [rax + 8]	      6204	ops.c	FUNCTION_71
0xca23	          0x8945c8	             mov dword [rbp - 0x38], eax	      6204	ops.c	FUNCTION_71
0xca26	        0x837dc800	               cmp dword [rbp - 0x38], 0	      6205	ops.c	FUNCTION_71	IF_2
0xca2a	     0xf88b6020000	                            js 0x400cd26	      6205	ops.c	FUNCTION_71	IF_2
0xca30	        0x837dc826	           cmp dword [rbp - 0x38], 0x26 	      6205	ops.c	FUNCTION_71	IF_2
0xca34	     0xf8fac020000	                            jg 0x400cd26	      6205	ops.c	FUNCTION_71	IF_2
0xca3a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6207	ops.c	FUNCTION_71
0xca3e	        0x4883c040	                           add rax, 0x40	      6207	ops.c	FUNCTION_71
0xca42	        0x488b4008	                mov rax, qword [rax + 8]	      6207	ops.c	FUNCTION_71
0xca46	          0x8945cc	             mov dword [rbp - 0x34], eax	      6207	ops.c	FUNCTION_71
0xca49	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      6208	ops.c	FUNCTION_71	IF_3
0xca4d	            0x7410	                            je 0x400ca9f	      6208	ops.c	FUNCTION_71	IF_3
0xca4f	        0x837dcc01	               cmp dword [rbp - 0x34], 1	      6208	ops.c	FUNCTION_71	IF_3
0xca53	            0x740a	                            je 0x400ca9f	      6208	ops.c	FUNCTION_71	IF_3
0xca55	        0x837dcc02	               cmp dword [rbp - 0x34], 2	      6208	ops.c	FUNCTION_71	IF_3
0xca59	     0xf858a020000	                           jne 0x400cd29	      6208	ops.c	FUNCTION_71	IF_3
0xca5f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6210	ops.c	FUNCTION_71
0xca63	        0x4883c060	                           add rax, 0x60	      6210	ops.c	FUNCTION_71
0xca67	        0x488b4008	                mov rax, qword [rax + 8]	      6210	ops.c	FUNCTION_71
0xca6b	          0x8945d0	             mov dword [rbp - 0x30], eax	      6210	ops.c	FUNCTION_71
0xca6e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      6211	ops.c	FUNCTION_71	IF_4
0xca72	            0x8b00	                    mov eax, dword [rax]	      6211	ops.c	FUNCTION_71	IF_4
0xca74	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      6211	ops.c	FUNCTION_71	IF_4
0xca77	          0x83c206	                              add edx, 6	      6211	ops.c	FUNCTION_71	IF_4
0xca7a	            0x39d0	                            cmp eax, edx	      6211	ops.c	FUNCTION_71	IF_4
0xca7c	     0xf8c6a020000	                            jl 0x400cd2c	      6211	ops.c	FUNCTION_71	IF_4
0xca82	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6213	ops.c	FUNCTION_71
0xca86	        0x4883e880	             sub rax, 0xffffffffffffff80	      6213	ops.c	FUNCTION_71
0xca8a	        0x488b4008	                mov rax, qword [rax + 8]	      6213	ops.c	FUNCTION_71
0xca8e	          0x8945d4	             mov dword [rbp - 0x2c], eax	      6213	ops.c	FUNCTION_71
0xca91	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      6214	ops.c	FUNCTION_71	IF_5
0xca95	     0xf8854020000	                            js 0x400cd2f	      6214	ops.c	FUNCTION_71	IF_5
0xca9b	    0x488b05000000	            mov rax, qword [0x0400cae2] 	      6217	ops.c	FUNCTION_71	IF_6
0xcaa2	          0x4885c0	                           test rax, rax	      6217	ops.c	FUNCTION_71	IF_6
0xcaa5	            0x741a	                            je 0x400cb01	      6217	ops.c	FUNCTION_71	IF_6
0xcaa7	    0x488b05000000	            mov rax, qword [0x0400caee] 	      6220	ops.c	FUNCTION_71	IF_6
0xcaae	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      6220	ops.c	FUNCTION_71	IF_6
0xcab1	          0x4863d2	                         movsxd rdx, edx	      6220	ops.c	FUNCTION_71	IF_6
0xcab4	        0x48c1e205	                              shl rdx, 5	      6220	ops.c	FUNCTION_71	IF_6
0xcab8	          0x4801d0	                            add rax, rdx	      6220	ops.c	FUNCTION_71	IF_6
0xcabb	        0x488945d8	             mov qword [rbp - 0x28], rax	      6220	ops.c	FUNCTION_71	IF_6
0xcabf	            0xeb13	                           jmp 0x400cb14	      6220	ops.c	FUNCTION_71	IF_6
0xcac1	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      6222	ops.c	FUNCTION_71	ELSE_1
0xcac4	            0x4898	                                    cdqe	      6222	ops.c	FUNCTION_71	ELSE_1
0xcac6	        0x48c1e005	                              shl rax, 5	      6222	ops.c	FUNCTION_71	ELSE_1
0xcaca	    0x480500000000	                              add rax, 0	      6222	ops.c	FUNCTION_71	ELSE_1
0xcad0	        0x488945d8	             mov qword [rbp - 0x28], rax	      6222	ops.c	FUNCTION_71	ELSE_1
0xcad4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6225	ops.c	FUNCTION_71
0xcad8	    0x4805a0000000	                           add rax, 0xa0	      6225	ops.c	FUNCTION_71
0xcade	        0x488b4008	                mov rax, qword [rax + 8]	      6225	ops.c	FUNCTION_71
0xcae2	        0x488945e8	             mov qword [rbp - 0x18], rax	      6225	ops.c	FUNCTION_71
0xcae6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6226	ops.c	FUNCTION_71	IF_7
0xcaea	          0x488b00	                    mov rax, qword [rax]	      6226	ops.c	FUNCTION_71	IF_7
0xcaed	          0x4885c0	                           test rax, rax	      6226	ops.c	FUNCTION_71	IF_7
0xcaf0	            0x7423	                            je 0x400cb55	      6226	ops.c	FUNCTION_71	IF_7
0xcaf2	        0x837db400	               cmp dword [rbp - 0x4c], 0	      6226	ops.c	FUNCTION_71	IF_7
0xcaf6	            0x751d	                           jne 0x400cb55	      6226	ops.c	FUNCTION_71	IF_7
0xcaf8	      0x48837de800	               cmp qword [rbp - 0x18], 0	      6227	ops.c	FUNCTION_71	IF_7
0xcafd	     0xf84ef010000	                            je 0x400cd32	      6227	ops.c	FUNCTION_71	IF_7
0xcb03	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6227	ops.c	FUNCTION_71	IF_7
0xcb07	        0x488b4018	            mov rax, qword [rax + 0x18] 	      6227	ops.c	FUNCTION_71	IF_7
0xcb0b	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	      6227	ops.c	FUNCTION_71	IF_7
0xcb0f	     0xf8fdd010000	                            jg 0x400cd32	      6227	ops.c	FUNCTION_71	IF_7
0xcb15	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6230	ops.c	FUNCTION_71	IF_8
0xcb19	          0x488b00	                    mov rax, qword [rax]	      6230	ops.c	FUNCTION_71	IF_8
0xcb1c	          0x4885c0	                           test rax, rax	      6230	ops.c	FUNCTION_71	IF_8
0xcb1f	            0x743f	                            je 0x400cba0	      6230	ops.c	FUNCTION_71	IF_8
0xcb21	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      6231	ops.c	FUNCTION_71	IF_8	FOR_1
0xcb28	            0xeb23	                           jmp 0x400cb8d	      6231	ops.c	FUNCTION_71	IF_8	FOR_1
0xcb2a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6232	ops.c	FUNCTION_71	IF_8	FOR_1
0xcb2e	          0x488b00	                    mov rax, qword [rax]	      6232	ops.c	FUNCTION_71	IF_8	FOR_1
0xcb31	          0x8b55c0	             mov edx, dword [rbp - 0x40]	      6232	ops.c	FUNCTION_71	IF_8	FOR_1
0xcb34	          0x4863d2	                         movsxd rdx, edx	      6232	ops.c	FUNCTION_71	IF_8	FOR_1
0xcb37	        0x48c1e203	                              shl rdx, 3	      6232	ops.c	FUNCTION_71	IF_8	FOR_1
0xcb3b	          0x4801d0	                            add rax, rdx	      6232	ops.c	FUNCTION_71	IF_8	FOR_1
0xcb3e	          0x488b00	                    mov rax, qword [rax]	      6232	ops.c	FUNCTION_71	IF_8	FOR_1
0xcb41	          0x4889c7	                            mov rdi, rax	      6232	ops.c	FUNCTION_71	IF_8	FOR_1
0xcb44	      0xe800000000	                          call 0x400cb89	      6232	ops.c	FUNCTION_71	IF_8	FOR_1
0xcb49	        0x8345c001	               add dword [rbp - 0x40], 1	      6231	ops.c	FUNCTION_71	IF_8	FOR_1
0xcb4d	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6231	ops.c	FUNCTION_71	IF_8	FOR_1
0xcb50	          0x4863d0	                         movsxd rdx, eax	      6231	ops.c	FUNCTION_71	IF_8	FOR_1
0xcb53	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6231	ops.c	FUNCTION_71	IF_8	FOR_1
0xcb57	        0x488b4008	                mov rax, qword [rax + 8]	      6231	ops.c	FUNCTION_71	IF_8	FOR_1
0xcb5b	          0x4839c2	                            cmp rdx, rax	      6231	ops.c	FUNCTION_71	IF_8	FOR_1
0xcb5e	            0x7cca	                            jl 0x400cb6a	      6231	ops.c	FUNCTION_71	IF_8	FOR_1
0xcb60	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6233	ops.c	FUNCTION_71	CALL_2
0xcb64	          0x488b00	                    mov rax, qword [rax]	      6233	ops.c	FUNCTION_71	CALL_2
0xcb67	          0x4889c7	                            mov rdi, rax	      6233	ops.c	FUNCTION_71	CALL_2
0xcb6a	      0xe800000000	                          call 0x400cbaf	      6233	ops.c	FUNCTION_71	CALL_2
0xcb6f	    0x488b05000000	            mov rax, qword [0x0400cbb6] 	      6235	ops.c	FUNCTION_71	IF_9
0xcb76	          0x4885c0	                           test rax, rax	      6235	ops.c	FUNCTION_71	IF_9
0xcb79	            0x753f	                           jne 0x400cbfa	      6235	ops.c	FUNCTION_71	IF_9
0xcb7b	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      6237	ops.c	FUNCTION_71	IF_9	IF_10
0xcb7e	          0x83e001	                              and eax, 1	      6237	ops.c	FUNCTION_71	IF_9	IF_10
0xcb81	            0x85c0	                           test eax, eax	      6237	ops.c	FUNCTION_71	IF_9	IF_10
0xcb83	            0x740b	                            je 0x400cbd0	      6237	ops.c	FUNCTION_71	IF_9	IF_10
0xcb85	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6238	ops.c	FUNCTION_71	IF_9	IF_10
0xcb89	    0x488905000000	            mov qword [0x0400cbd0], rax 	      6238	ops.c	FUNCTION_71	IF_9	IF_10
0xcb90	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	      6239	ops.c	FUNCTION_71	IF_9	IF_11
0xcb93	          0x83e002	                              and eax, 2	      6239	ops.c	FUNCTION_71	IF_9	IF_11
0xcb96	            0x85c0	                           test eax, eax	      6239	ops.c	FUNCTION_71	IF_9	IF_11
0xcb98	            0x7420	                            je 0x400cbfa	      6239	ops.c	FUNCTION_71	IF_9	IF_11
0xcb9a	        0x837db400	               cmp dword [rbp - 0x4c], 0	      6239	ops.c	FUNCTION_71	IF_9	IF_11
0xcb9e	            0x750a	                           jne 0x400cbea	      6239	ops.c	FUNCTION_71	IF_9	IF_11
0xcba0	    0x8b0500000000	            mov eax, dword [0x0400cbe6] 	      6239	ops.c	FUNCTION_71	IF_9	IF_11
0xcba6	            0x85c0	                           test eax, eax	      6239	ops.c	FUNCTION_71	IF_9	IF_11
0xcba8	            0x7510	                           jne 0x400cbfa	      6239	ops.c	FUNCTION_71	IF_9	IF_11
0xcbaa	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      6240	ops.c	FUNCTION_71	IF_9	CALL_3
0xcbad	            0x89c7	                            mov edi, eax	      6240	ops.c	FUNCTION_71	IF_9	CALL_3
0xcbaf	      0xe800000000	                          call 0x400cbf4	      6240	ops.c	FUNCTION_71	IF_9	CALL_3
0xcbb4	    0x890500000000	            mov dword [0x0400cbfa], eax 	      6240	ops.c	FUNCTION_71	IF_9	CALL_3
0xcbba	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6242	ops.c	FUNCTION_71
0xcbbd	            0x89c2	                            mov edx, eax	      6242	ops.c	FUNCTION_71
0xcbbf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6242	ops.c	FUNCTION_71
0xcbc3	          0x885010	               mov byte [rax + 0x10], dl	      6242	ops.c	FUNCTION_71
0xcbc6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6243	ops.c	FUNCTION_71
0xcbca	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	      6243	ops.c	FUNCTION_71
0xcbcd	          0x895014	             mov dword [rax + 0x14], edx	      6243	ops.c	FUNCTION_71
0xcbd0	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      6244	ops.c	FUNCTION_71
0xcbd3	          0x4863d0	                         movsxd rdx, eax	      6244	ops.c	FUNCTION_71
0xcbd6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6244	ops.c	FUNCTION_71
0xcbda	        0x48895008	                mov qword [rax + 8], rdx	      6244	ops.c	FUNCTION_71
0xcbde	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6245	ops.c	FUNCTION_71
0xcbe2	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      6245	ops.c	FUNCTION_71
0xcbe6	        0x48895018	             mov qword [rax + 0x18], rdx	      6245	ops.c	FUNCTION_71
0xcbea	        0x837dd000	               cmp dword [rbp - 0x30], 0	      6246	ops.c	FUNCTION_71	IF_12
0xcbee	            0x7510	                           jne 0x400cc40	      6246	ops.c	FUNCTION_71	IF_12
0xcbf0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6247	ops.c	FUNCTION_71	IF_12
0xcbf4	    0x48c700000000	                      mov qword [rax], 0	      6247	ops.c	FUNCTION_71	IF_12
0xcbfb	      0xe9f3000000	                           jmp 0x400cd33	      6247	ops.c	FUNCTION_71	IF_12
0xcc00	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      6251	ops.c	FUNCTION_71	ELSE_2	CALL_4
0xcc03	            0x4898	                                    cdqe	      6251	ops.c	FUNCTION_71	ELSE_2	CALL_4
0xcc05	          0xc1e003	                              shl eax, 3	      6251	ops.c	FUNCTION_71	ELSE_2	CALL_4
0xcc08	            0x89c7	                            mov edi, eax	      6251	ops.c	FUNCTION_71	ELSE_2	CALL_4
0xcc0a	      0xe800000000	                          call 0x400cc4f	      6251	ops.c	FUNCTION_71	ELSE_2	CALL_4
0xcc0f	          0x4889c2	                            mov rdx, rax	      6251	ops.c	FUNCTION_71	ELSE_2	CALL_4
0xcc12	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6250	ops.c	FUNCTION_71	ELSE_2
0xcc16	          0x488910	                    mov qword [rax], rdx	      6250	ops.c	FUNCTION_71	ELSE_2
0xcc19	    0xc745c0000000	               mov dword [rbp - 0x40], 0	      6252	ops.c	FUNCTION_71	ELSE_2	FOR_2
0xcc20	      0xe9b0000000	                           jmp 0x400cd15	      6252	ops.c	FUNCTION_71	ELSE_2	FOR_2
0xcc25	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6254	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0xcc28	            0x4898	                                    cdqe	      6254	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0xcc2a	        0x4883c006	                              add rax, 6	      6254	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0xcc2e	        0x48c1e005	                              shl rax, 5	      6254	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0xcc32	          0x4889c2	                            mov rdx, rax	      6254	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0xcc35	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6254	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0xcc39	          0x4801d0	                            add rax, rdx	      6254	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0xcc3c	          0x8b401c	            mov eax, dword [rax + 0x1c] 	      6254	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0xcc3f	            0x85c0	                           test eax, eax	      6254	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0xcc41	            0x7453	                            je 0x400ccd6	      6254	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0xcc43	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6256	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0xcc47	          0x488b00	                    mov rax, qword [rax]	      6256	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0xcc4a	          0x8b55c0	             mov edx, dword [rbp - 0x40]	      6256	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0xcc4d	          0x4863d2	                         movsxd rdx, edx	      6256	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0xcc50	        0x48c1e203	                              shl rdx, 3	      6256	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0xcc54	          0x4801c2	                            add rdx, rax	      6256	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0xcc57	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6256	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0xcc5a	            0x4898	                                    cdqe	      6256	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0xcc5c	        0x4883c006	                              add rax, 6	      6256	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0xcc60	        0x48c1e005	                              shl rax, 5	      6256	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0xcc64	          0x4889c1	                            mov rcx, rax	      6256	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0xcc67	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6256	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0xcc6b	          0x4801c8	                            add rax, rcx	      6256	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0xcc6e	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6256	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0xcc72	          0x488902	                    mov qword [rdx], rax	      6256	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0xcc75	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6257	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0xcc78	            0x4898	                                    cdqe	      6257	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0xcc7a	        0x4883c006	                              add rax, 6	      6257	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0xcc7e	        0x48c1e005	                              shl rax, 5	      6257	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0xcc82	          0x4889c2	                            mov rdx, rax	      6257	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0xcc85	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6257	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0xcc89	          0x4801d0	                            add rax, rdx	      6257	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0xcc8c	    0x48c740100000	               mov qword [rax + 0x10], 0	      6257	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0xcc94	            0xeb3b	                           jmp 0x400cd11	      6257	ops.c	FUNCTION_71	ELSE_2	FOR_2	IF_13
0xcc96	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6260	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0xcc9a	          0x488b00	                    mov rax, qword [rax]	      6260	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0xcc9d	          0x8b55c0	             mov edx, dword [rbp - 0x40]	      6260	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0xcca0	          0x4863d2	                         movsxd rdx, edx	      6260	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0xcca3	        0x48c1e203	                              shl rdx, 3	      6260	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0xcca7	        0x488d1c10	                    lea rbx, [rax + rdx]	      6260	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0xccab	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6260	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0xccae	            0x4898	                                    cdqe	      6260	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0xccb0	        0x4883c006	                              add rax, 6	      6260	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0xccb4	        0x48c1e005	                              shl rax, 5	      6260	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0xccb8	          0x4889c2	                            mov rdx, rax	      6260	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0xccbb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      6260	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0xccbf	          0x4801d0	                            add rax, rdx	      6260	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0xccc2	        0x488b4010	            mov rax, qword [rax + 0x10] 	      6260	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0xccc6	          0x4889c7	                            mov rdi, rax	      6260	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0xccc9	      0xe800000000	                          call 0x400cd0e	      6260	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0xccce	          0x488903	                    mov qword [rbx], rax	      6260	ops.c	FUNCTION_71	ELSE_2	FOR_2	CALL_5
0xccd1	        0x8345c001	               add dword [rbp - 0x40], 1	      6252	ops.c	FUNCTION_71	ELSE_2	FOR_2
0xccd5	          0x8b45c0	             mov eax, dword [rbp - 0x40]	      6252	ops.c	FUNCTION_71	ELSE_2	FOR_2
0xccd8	          0x3b45d0	             cmp eax, dword [rbp - 0x30]	      6252	ops.c	FUNCTION_71	ELSE_2	FOR_2
0xccdb	     0xf8c44ffffff	                            jl 0x400cc65	      6252	ops.c	FUNCTION_71	ELSE_2	FOR_2
0xcce1	            0xeb10	                           jmp 0x400cd33	      6252	ops.c	FUNCTION_71	ELSE_2	FOR_2
0xcce3	              0x90	                                     nop	      6202	ops.c	FUNCTION_71	IF_1
0xcce4	            0xeb0d	                           jmp 0x400cd33	      6202	ops.c	FUNCTION_71	IF_1
0xcce6	              0x90	                                     nop	      6206	ops.c	FUNCTION_71	IF_2
0xcce7	            0xeb0a	                           jmp 0x400cd33	      6206	ops.c	FUNCTION_71	IF_2
0xcce9	              0x90	                                     nop	      6209	ops.c	FUNCTION_71	IF_3
0xccea	            0xeb07	                           jmp 0x400cd33	      6209	ops.c	FUNCTION_71	IF_3
0xccec	              0x90	                                     nop	      6212	ops.c	FUNCTION_71	IF_4
0xcced	            0xeb04	                           jmp 0x400cd33	      6212	ops.c	FUNCTION_71	IF_4
0xccef	              0x90	                                     nop	      6215	ops.c	FUNCTION_71	IF_5
0xccf0	            0xeb01	                           jmp 0x400cd33	      6215	ops.c	FUNCTION_71	IF_5
0xccf2	              0x90	                                     nop	      6228	ops.c	FUNCTION_71	IF_7
0xccf3	        0x4883c448	                           add rsp, 0x48	      6263	ops.c	FUNCTION_71
0xccf7	              0x5b	                                 pop rbx	      6263	ops.c	FUNCTION_71
0xccf8	              0x5d	                                 pop rbp	      6263	ops.c	FUNCTION_71
0xccf9	              0xc3	                                     ret	      6263	ops.c	FUNCTION_71
block_insert	CALL,12:FOR,1:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,3:IF,12	275
0xc4f	              0x55	                                push rbp	       581	ops.c	FUNCTION_8
0xc50	          0x4889e5	                            mov rbp, rsp	       581	ops.c	FUNCTION_8
0xc53	        0x4883ec60	                           sub rsp, 0x60	       581	ops.c	FUNCTION_8
0xc57	        0x48897db8	             mov qword [rbp - 0x48], rdi	       581	ops.c	FUNCTION_8
0xc5b	        0x488975b0	             mov qword [rbp - 0x50], rsi	       581	ops.c	FUNCTION_8
0xc5f	          0x8955ac	             mov dword [rbp - 0x54], edx	       581	ops.c	FUNCTION_8
0xc62	        0x48894da0	             mov qword [rbp - 0x60], rcx	       581	ops.c	FUNCTION_8
0xc66	    0xc745d0000000	               mov dword [rbp - 0x30], 0	       583	ops.c	FUNCTION_8
0xc6d	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       584	ops.c	FUNCTION_8
0xc74	    0x8b0500000000	            mov eax, dword [0x04000cba] 	       589	ops.c	FUNCTION_8
0xc7a	          0x8945e0	             mov dword [rbp - 0x20], eax	       589	ops.c	FUNCTION_8
0xc7d	    0xc70500000000	           mov dword [0x04000cc7], 0x10 	       591	ops.c	FUNCTION_8
0xc87	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       592	ops.c	FUNCTION_8	CALL_1
0xc8b	          0x4889c7	                            mov rdi, rax	       592	ops.c	FUNCTION_8	CALL_1
0xc8e	      0xe800000000	                          call 0x4000cd3	       592	ops.c	FUNCTION_8	CALL_1
0xc93	          0x8945e4	             mov dword [rbp - 0x1c], eax	       592	ops.c	FUNCTION_8	CALL_1
0xc96	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       594	ops.c	FUNCTION_8	FOR_1
0xc9a	        0x488b4020	            mov rax, qword [rax + 0x20] 	       594	ops.c	FUNCTION_8	FOR_1
0xc9e	        0x4883c001	                              add rax, 1	       594	ops.c	FUNCTION_8	FOR_1
0xca2	        0x488945f0	             mov qword [rbp - 0x10], rax	       594	ops.c	FUNCTION_8	FOR_1
0xca6	      0xe90e030000	                           jmp 0x4000ff9	       594	ops.c	FUNCTION_8	FOR_1
0xcab	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       596	ops.c	FUNCTION_8	FOR_1	CALL_2
0xcaf	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	       596	ops.c	FUNCTION_8	FOR_1	CALL_2
0xcb3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       596	ops.c	FUNCTION_8	FOR_1	CALL_2
0xcb7	      0xb901000000	                              mov ecx, 1	       596	ops.c	FUNCTION_8	FOR_1	CALL_2
0xcbc	          0x4889c7	                            mov rdi, rax	       596	ops.c	FUNCTION_8	FOR_1	CALL_2
0xcbf	      0xe8159a0000	                     call sym.block_prep	       596	ops.c	FUNCTION_8	FOR_1	CALL_2
0xcc4	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       597	ops.c	FUNCTION_8	FOR_1	IF_1
0xcc8	          0x8b4024	            mov eax, dword [rax + 0x24] 	       597	ops.c	FUNCTION_8	FOR_1	IF_1
0xccb	            0x85c0	                           test eax, eax	       597	ops.c	FUNCTION_8	FOR_1	IF_1
0xccd	            0x740a	                            je 0x4000d19	       597	ops.c	FUNCTION_8	FOR_1	IF_1
0xccf	        0x837dac00	               cmp dword [rbp - 0x54], 0	       597	ops.c	FUNCTION_8	FOR_1	IF_1
0xcd3	     0xf85d7020000	                           jne 0x4000ff0	       597	ops.c	FUNCTION_8	FOR_1	IF_1
0xcd9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       600	ops.c	FUNCTION_8	FOR_1	CALL_3
0xcdd	          0x4889c7	                            mov rdi, rax	       600	ops.c	FUNCTION_8	FOR_1	CALL_3
0xce0	      0xe800000000	                          call 0x4000d25	       600	ops.c	FUNCTION_8	FOR_1	CALL_3
0xce5	        0x488945e8	             mov qword [rbp - 0x18], rax	       600	ops.c	FUNCTION_8	FOR_1	CALL_3
0xce9	        0x837dac00	               cmp dword [rbp - 0x54], 0	       602	ops.c	FUNCTION_8	FOR_1	IF_2
0xced	            0x7431	                            je 0x4000d60	       602	ops.c	FUNCTION_8	FOR_1	IF_2
0xcef	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       604	ops.c	FUNCTION_8	FOR_1	IF_2
0xcf3	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       604	ops.c	FUNCTION_8	FOR_1	IF_2
0xcf6	          0x8945cc	             mov dword [rbp - 0x34], eax	       604	ops.c	FUNCTION_8	FOR_1	IF_2
0xcf9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       605	ops.c	FUNCTION_8	FOR_1	IF_2
0xcfd	            0x8b00	                    mov eax, dword [rax]	       605	ops.c	FUNCTION_8	FOR_1	IF_2
0xcff	          0x8945d4	             mov dword [rbp - 0x2c], eax	       605	ops.c	FUNCTION_8	FOR_1	IF_2
0xd02	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       606	ops.c	FUNCTION_8	FOR_1	IF_2	IF_3
0xd06	            0x7409	                            je 0x4000d51	       606	ops.c	FUNCTION_8	FOR_1	IF_2	IF_3
0xd08	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       607	ops.c	FUNCTION_8	FOR_1	IF_2	IF_3
0xd0b	          0x83e801	                              sub eax, 1	       607	ops.c	FUNCTION_8	FOR_1	IF_2	IF_3
0xd0e	          0x8945d0	             mov dword [rbp - 0x30], eax	       607	ops.c	FUNCTION_8	FOR_1	IF_2	IF_3
0xd11	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       608	ops.c	FUNCTION_8	FOR_1	IF_2
0xd15	          0x8b4018	            mov eax, dword [rax + 0x18] 	       608	ops.c	FUNCTION_8	FOR_1	IF_2
0xd18	          0x8945d8	             mov dword [rbp - 0x28], eax	       608	ops.c	FUNCTION_8	FOR_1	IF_2
0xd1b	      0xe9a6000000	                           jmp 0x4000e06	       608	ops.c	FUNCTION_8	FOR_1	IF_2
0xd20	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       612	ops.c	FUNCTION_8	FOR_1	ELSE_1
0xd24	          0x8b4038	            mov eax, dword [rax + 0x38] 	       612	ops.c	FUNCTION_8	FOR_1	ELSE_1
0xd27	          0x8945cc	             mov dword [rbp - 0x34], eax	       612	ops.c	FUNCTION_8	FOR_1	ELSE_1
0xd2a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       613	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xd2e	          0x8b4024	            mov eax, dword [rax + 0x24] 	       613	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xd31	            0x85c0	                           test eax, eax	       613	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xd33	            0x7555	                           jne 0x4000dca	       613	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xd35	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xd39	          0x8b4004	                mov eax, dword [rax + 4]	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xd3c	            0x85c0	                           test eax, eax	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xd3e	            0x7410	                            je 0x4000d90	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xd40	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xd44	          0x8b4004	                mov eax, dword [rax + 4]	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xd47	          0x8b55cc	             mov edx, dword [rbp - 0x34]	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xd4a	            0x29c2	                            sub edx, eax	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xd4c	            0x89d0	                            mov eax, edx	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xd4e	            0xeb05	                           jmp 0x4000d95	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xd50	      0xb800000000	                              mov eax, 0	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xd55	          0x8945d4	             mov dword [rbp - 0x2c], eax	       615	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xd58	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       616	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0xd5c	            0x7409	                            je 0x4000da7	       616	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0xd5e	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       617	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0xd61	          0x83e801	                              sub eax, 1	       617	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0xd64	          0x8945d0	             mov dword [rbp - 0x30], eax	       617	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4	IF_5
0xd67	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xd6b	          0x8b5018	            mov edx, dword [rax + 0x18] 	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xd6e	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xd72	          0x8b4008	                mov eax, dword [rax + 8]	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xd75	             0x1c2	                            add edx, eax	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xd77	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xd7b	           0xf95c0	                                setne al	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xd7e	           0xfb6c0	                           movzx eax, al	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xd81	            0x29c2	                            sub edx, eax	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xd83	            0x89d0	                            mov eax, edx	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xd85	          0x8945d8	             mov dword [rbp - 0x28], eax	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xd88	            0xeb3c	                           jmp 0x4000e06	       618	ops.c	FUNCTION_8	FOR_1	ELSE_1	IF_4
0xd8a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       623	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0xd8e	          0x8b4028	            mov eax, dword [rax + 0x28] 	       623	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0xd91	            0x85c0	                           test eax, eax	       623	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0xd93	            0x7518	                           jne 0x4000ded	       623	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0xd95	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       624	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0xd99	          0x8b5068	            mov edx, dword [rax + 0x68] 	       624	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0xd9c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       624	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0xda0	          0x8b4020	            mov eax, dword [rax + 0x20] 	       624	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0xda3	            0x29c2	                            sub edx, eax	       624	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0xda5	            0x89d0	                            mov eax, edx	       624	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0xda7	          0x83c001	                              add eax, 1	       624	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0xdaa	          0x8945d4	             mov dword [rbp - 0x2c], eax	       624	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2	IF_6
0xdad	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       625	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2
0xdb0	          0x8945d0	             mov dword [rbp - 0x30], eax	       625	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2
0xdb3	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       626	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2
0xdb7	          0x8b5018	            mov edx, dword [rax + 0x18] 	       626	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2
0xdba	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       626	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2
0xdbe	          0x8b4008	                mov eax, dword [rax + 8]	       626	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2
0xdc1	             0x1d0	                            add eax, edx	       626	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2
0xdc3	          0x8945d8	             mov dword [rbp - 0x28], eax	       626	ops.c	FUNCTION_8	FOR_1	ELSE_1	ELSE_2
0xdc6	    0x8b0500000000	            mov eax, dword [0x04000e0c] 	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0xdcc	            0x85c0	                           test eax, eax	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0xdce	            0x746b	                            je 0x4000e7b	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0xdd0	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0xdd4	            0x7e65	                           jle 0x4000e7b	       631	ops.c	FUNCTION_8	FOR_1	IF_7
0xdd6	        0x837dac00	               cmp dword [rbp - 0x54], 0	       636	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0xdda	            0x742e	                            je 0x4000e4a	       636	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0xddc	    0x488b05000000	            mov rax, qword [0x04000e23] 	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0xde3	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0xde6	          0x4863ca	                         movsxd rcx, edx	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0xde9	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0xdec	          0x4863d2	                         movsxd rdx, edx	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0xdef	          0x4801d1	                            add rcx, rdx	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0xdf2	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0xdf6	          0x4801d1	                            add rcx, rdx	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0xdf9	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0xdfd	          0x4889ce	                            mov rsi, rcx	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0xe00	          0x4889d7	                            mov rdi, rdx	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0xe03	            0xffd0	                                call rax	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0xe05	          0x8945dc	             mov dword [rbp - 0x24], eax	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0xe08	            0xeb25	                           jmp 0x4000e6f	       638	ops.c	FUNCTION_8	FOR_1	IF_7	IF_8
0xe0a	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       642	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0xe0d	          0x4863d0	                         movsxd rdx, eax	       642	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0xe10	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       642	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0xe14	          0x4801c2	                            add rdx, rax	       642	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0xe17	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       642	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0xe1b	          0x4889d6	                            mov rsi, rdx	       642	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0xe1e	          0x4889c7	                            mov rdi, rax	       642	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0xe21	      0xe800000000	                          call 0x4000e66	       642	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0xe26	          0x8945dc	             mov dword [rbp - 0x24], eax	       642	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0xe29	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       643	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0xe2c	           0x145d8	             add dword [rbp - 0x28], eax	       643	ops.c	FUNCTION_8	FOR_1	IF_7	ELSE_3
0xe2f	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       645	ops.c	FUNCTION_8	FOR_1	IF_7
0xe32	          0x2945d4	             sub dword [rbp - 0x2c], eax	       645	ops.c	FUNCTION_8	FOR_1	IF_7
0xe35	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       646	ops.c	FUNCTION_8	FOR_1	IF_7
0xe38	          0x2945d0	             sub dword [rbp - 0x30], eax	       646	ops.c	FUNCTION_8	FOR_1	IF_7
0xe3b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0xe3f	          0x4889c7	                            mov rdi, rax	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0xe42	      0xe800000000	                          call 0x4000e87	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0xe47	            0x89c2	                            mov edx, eax	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0xe49	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0xe4c	             0x1c2	                            add edx, eax	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0xe4e	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0xe51	             0x1d0	                            add eax, edx	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0xe53	          0x83c001	                              add eax, 1	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0xe56	            0x89c7	                            mov edi, eax	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0xe58	      0xe800000000	                          call 0x4000e9d	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0xe5d	        0x488945f8	                mov qword [rbp - 8], rax	       650	ops.c	FUNCTION_8	FOR_1	CALL_5
0xe61	      0x48837df800	                  cmp qword [rbp - 8], 0	       651	ops.c	FUNCTION_8	FOR_1	IF_9
0xe66	     0xf8447010000	                            je 0x4000ff3	       651	ops.c	FUNCTION_8	FOR_1	IF_9
0xe6c	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       655	ops.c	FUNCTION_8	FOR_1	CALL_6
0xe6f	          0x4863d0	                         movsxd rdx, eax	       655	ops.c	FUNCTION_8	FOR_1	CALL_6
0xe72	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       655	ops.c	FUNCTION_8	FOR_1	CALL_6
0xe76	        0x488b45f8	                mov rax, qword [rbp - 8]	       655	ops.c	FUNCTION_8	FOR_1	CALL_6
0xe7a	          0x4889ce	                            mov rsi, rcx	       655	ops.c	FUNCTION_8	FOR_1	CALL_6
0xe7d	          0x4889c7	                            mov rdi, rax	       655	ops.c	FUNCTION_8	FOR_1	CALL_6
0xe80	      0xe800000000	                          call 0x4000ec5	       655	ops.c	FUNCTION_8	FOR_1	CALL_6
0xe85	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       656	ops.c	FUNCTION_8	FOR_1
0xe88	            0x4898	                                    cdqe	       656	ops.c	FUNCTION_8	FOR_1
0xe8a	        0x480145e8	            add qword [rbp - 0x18], rax 	       656	ops.c	FUNCTION_8	FOR_1
0xe8e	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       659	ops.c	FUNCTION_8	FOR_1	CALL_7
0xe91	            0x4898	                                    cdqe	       659	ops.c	FUNCTION_8	FOR_1	CALL_7
0xe93	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       659	ops.c	FUNCTION_8	FOR_1	CALL_7
0xe96	          0x4863ca	                         movsxd rcx, edx	       659	ops.c	FUNCTION_8	FOR_1	CALL_7
0xe99	        0x488b55f8	                mov rdx, qword [rbp - 8]	       659	ops.c	FUNCTION_8	FOR_1	CALL_7
0xe9d	          0x4801d1	                            add rcx, rdx	       659	ops.c	FUNCTION_8	FOR_1	CALL_7
0xea0	          0x4889c2	                            mov rdx, rax	       659	ops.c	FUNCTION_8	FOR_1	CALL_7
0xea3	      0xbe20000000	                           mov esi, 0x20	       659	ops.c	FUNCTION_8	FOR_1	CALL_7
0xea8	          0x4889cf	                            mov rdi, rcx	       659	ops.c	FUNCTION_8	FOR_1	CALL_7
0xeab	      0xe800000000	                          call 0x4000ef0	       659	ops.c	FUNCTION_8	FOR_1	CALL_7
0xeb0	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       662	ops.c	FUNCTION_8	FOR_1	CALL_8
0xeb3	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       662	ops.c	FUNCTION_8	FOR_1	CALL_8
0xeb6	          0x4863c8	                         movsxd rcx, eax	       662	ops.c	FUNCTION_8	FOR_1	CALL_8
0xeb9	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       662	ops.c	FUNCTION_8	FOR_1	CALL_8
0xebc	            0x4898	                                    cdqe	       662	ops.c	FUNCTION_8	FOR_1	CALL_8
0xebe	          0x4801c1	                            add rcx, rax	       662	ops.c	FUNCTION_8	FOR_1	CALL_8
0xec1	        0x488b45f8	                mov rax, qword [rbp - 8]	       662	ops.c	FUNCTION_8	FOR_1	CALL_8
0xec5	          0x4801c1	                            add rcx, rax	       662	ops.c	FUNCTION_8	FOR_1	CALL_8
0xec8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       662	ops.c	FUNCTION_8	FOR_1	CALL_8
0xecc	          0x4889c6	                            mov rsi, rax	       662	ops.c	FUNCTION_8	FOR_1	CALL_8
0xecf	          0x4889cf	                            mov rdi, rcx	       662	ops.c	FUNCTION_8	FOR_1	CALL_8
0xed2	      0xe800000000	                          call 0x4000f17	       662	ops.c	FUNCTION_8	FOR_1	CALL_8
0xed7	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       663	ops.c	FUNCTION_8	FOR_1
0xeda	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       663	ops.c	FUNCTION_8	FOR_1
0xedd	             0x1d0	                            add eax, edx	       663	ops.c	FUNCTION_8	FOR_1
0xedf	          0x8945d8	             mov dword [rbp - 0x28], eax	       663	ops.c	FUNCTION_8	FOR_1
0xee2	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       665	ops.c	FUNCTION_8	FOR_1	IF_10
0xee6	            0x7442	                            je 0x4000f6a	       665	ops.c	FUNCTION_8	FOR_1	IF_10
0xee8	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       665	ops.c	FUNCTION_8	FOR_1	IF_10
0xeec	          0x8b4024	            mov eax, dword [rax + 0x24] 	       665	ops.c	FUNCTION_8	FOR_1	IF_10
0xeef	            0x85c0	                           test eax, eax	       665	ops.c	FUNCTION_8	FOR_1	IF_10
0xef1	            0x7537	                           jne 0x4000f6a	       665	ops.c	FUNCTION_8	FOR_1	IF_10
0xef3	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       668	ops.c	FUNCTION_8	FOR_1	IF_10	CALL_9
0xef6	          0x2b45d4	             sub eax, dword [rbp - 0x2c]	       668	ops.c	FUNCTION_8	FOR_1	IF_10	CALL_9
0xef9	            0x4898	                                    cdqe	       668	ops.c	FUNCTION_8	FOR_1	IF_10	CALL_9
0xefb	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       668	ops.c	FUNCTION_8	FOR_1	IF_10	CALL_9
0xefe	          0x4863ca	                         movsxd rcx, edx	       668	ops.c	FUNCTION_8	FOR_1	IF_10	CALL_9
0xf01	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       668	ops.c	FUNCTION_8	FOR_1	IF_10	CALL_9
0xf04	          0x4863d2	                         movsxd rdx, edx	       668	ops.c	FUNCTION_8	FOR_1	IF_10	CALL_9
0xf07	          0x4801d1	                            add rcx, rdx	       668	ops.c	FUNCTION_8	FOR_1	IF_10	CALL_9
0xf0a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       668	ops.c	FUNCTION_8	FOR_1	IF_10	CALL_9
0xf0e	          0x4801d1	                            add rcx, rdx	       668	ops.c	FUNCTION_8	FOR_1	IF_10	CALL_9
0xf11	          0x4889c2	                            mov rdx, rax	       668	ops.c	FUNCTION_8	FOR_1	IF_10	CALL_9
0xf14	      0xbe20000000	                           mov esi, 0x20	       668	ops.c	FUNCTION_8	FOR_1	IF_10	CALL_9
0xf19	          0x4889cf	                            mov rdi, rcx	       668	ops.c	FUNCTION_8	FOR_1	IF_10	CALL_9
0xf1c	      0xe800000000	                          call 0x4000f61	       668	ops.c	FUNCTION_8	FOR_1	IF_10	CALL_9
0xf21	      0x488345e801	               add qword [rbp - 0x18], 1	       670	ops.c	FUNCTION_8	FOR_1	IF_10
0xf26	        0x8345d001	               add dword [rbp - 0x30], 1	       672	ops.c	FUNCTION_8	FOR_1	IF_10
0xf2a	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       675	ops.c	FUNCTION_8	FOR_1	IF_11
0xf2e	            0x7e06	                           jle 0x4000f76	       675	ops.c	FUNCTION_8	FOR_1	IF_11
0xf30	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       676	ops.c	FUNCTION_8	FOR_1	IF_11
0xf33	           0x145d8	             add dword [rbp - 0x28], eax	       676	ops.c	FUNCTION_8	FOR_1	IF_11
0xf36	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0xf3a	          0x4889c7	                            mov rdi, rax	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0xf3d	      0xe800000000	                          call 0x4000f82	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0xf42	        0x488d5001	                      lea rdx, [rax + 1]	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0xf46	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0xf49	          0x4863c8	                         movsxd rcx, eax	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0xf4c	        0x488b45f8	                mov rax, qword [rbp - 8]	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0xf50	          0x4801c1	                            add rcx, rax	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0xf53	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0xf57	          0x4889c6	                            mov rsi, rax	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0xf5a	          0x4889cf	                            mov rdi, rcx	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0xf5d	      0xe800000000	                          call 0x4000fa2	       677	ops.c	FUNCTION_8	FOR_1	CALL_10
0xf62	        0x488b4df8	                mov rcx, qword [rbp - 8]	       679	ops.c	FUNCTION_8	FOR_1	CALL_11
0xf66	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       679	ops.c	FUNCTION_8	FOR_1	CALL_11
0xf6a	      0xba00000000	                              mov edx, 0	       679	ops.c	FUNCTION_8	FOR_1	CALL_11
0xf6f	          0x4889ce	                            mov rsi, rcx	       679	ops.c	FUNCTION_8	FOR_1	CALL_11
0xf72	          0x4889c7	                            mov rdi, rax	       679	ops.c	FUNCTION_8	FOR_1	CALL_11
0xf75	      0xe800000000	                          call 0x4000fba	       679	ops.c	FUNCTION_8	FOR_1	CALL_11
0xf7a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       681	ops.c	FUNCTION_8	FOR_1	IF_12
0xf7e	        0x488b4030	            mov rax, qword [rax + 0x30] 	       681	ops.c	FUNCTION_8	FOR_1	IF_12
0xf82	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       681	ops.c	FUNCTION_8	FOR_1	IF_12
0xf86	            0x752c	                           jne 0x4000ff4	       681	ops.c	FUNCTION_8	FOR_1	IF_12
0xf88	    0x488b05000000	            mov rax, qword [0x04000fcf] 	       685	ops.c	FUNCTION_8	FOR_1	IF_12
0xf8f	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       685	ops.c	FUNCTION_8	FOR_1	IF_12
0xf93	        0x488b5230	            mov rdx, qword [rdx + 0x30] 	       685	ops.c	FUNCTION_8	FOR_1	IF_12
0xf97	    0x488990f01100	          mov qword [rax + 0x11f0], rdx 	       685	ops.c	FUNCTION_8	FOR_1	IF_12
0xf9e	    0x488b05000000	            mov rax, qword [0x04000fe5] 	       686	ops.c	FUNCTION_8	FOR_1	IF_12
0xfa5	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       686	ops.c	FUNCTION_8	FOR_1	IF_12
0xfa8	    0x8990f8110000	          mov dword [rax + 0x11f8], edx 	       686	ops.c	FUNCTION_8	FOR_1	IF_12
0xfae	            0xeb04	                           jmp 0x4000ff4	       686	ops.c	FUNCTION_8	FOR_1	IF_12
0xfb0	              0x90	                                     nop	       598	ops.c	FUNCTION_8	FOR_1	IF_1
0xfb1	            0xeb01	                           jmp 0x4000ff4	       598	ops.c	FUNCTION_8	FOR_1	IF_1
0xfb3	              0x90	                                     nop	       652	ops.c	FUNCTION_8	FOR_1	IF_9
0xfb4	      0x488345f001	               add qword [rbp - 0x10], 1	       594	ops.c	FUNCTION_8	FOR_1
0xfb9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       594	ops.c	FUNCTION_8	FOR_1
0xfbd	        0x488b4030	            mov rax, qword [rax + 0x30] 	       594	ops.c	FUNCTION_8	FOR_1
0xfc1	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       594	ops.c	FUNCTION_8	FOR_1
0xfc5	     0xf8de0fcffff	                           jge 0x4000ceb	       594	ops.c	FUNCTION_8	FOR_1
0xfcb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       690	ops.c	FUNCTION_8	CALL_12
0xfcf	        0x488b4030	            mov rax, qword [rax + 0x30] 	       690	ops.c	FUNCTION_8	CALL_12
0xfd3	        0x488d5001	                      lea rdx, [rax + 1]	       690	ops.c	FUNCTION_8	CALL_12
0xfd7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       690	ops.c	FUNCTION_8	CALL_12
0xfdb	        0x488b4020	            mov rax, qword [rax + 0x20] 	       690	ops.c	FUNCTION_8	CALL_12
0xfdf	        0x4883c001	                              add rax, 1	       690	ops.c	FUNCTION_8	CALL_12
0xfe3	      0xb900000000	                              mov ecx, 0	       690	ops.c	FUNCTION_8	CALL_12
0xfe8	      0xbe00000000	                              mov esi, 0	       690	ops.c	FUNCTION_8	CALL_12
0xfed	          0x4889c7	                            mov rdi, rax	       690	ops.c	FUNCTION_8	CALL_12
0xff0	      0xe800000000	                          call 0x4001035	       690	ops.c	FUNCTION_8	CALL_12
0xff5	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       692	ops.c	FUNCTION_8
0xff8	    0x890500000000	            mov dword [0x0400103e], eax 	       692	ops.c	FUNCTION_8
0xffe	              0x90	                                     nop	       693	ops.c	FUNCTION_8
0xfff	              0xc9	                                   leave	       693	ops.c	FUNCTION_8
0x1000	              0xc3	                                     ret	       693	ops.c	FUNCTION_8
op_tilde	CALL,31:FOR,2:SWITCH,0:functions,0:WHILE,1:DO,0:ELSE,4:IF,14	370
0x4381	              0x55	                                push rbp	      2356	ops.c	FUNCTION_36
0x4382	          0x4889e5	                            mov rbp, rsp	      2356	ops.c	FUNCTION_36
0x4385	              0x53	                                push rbx	      2356	ops.c	FUNCTION_36
0x4386	    0x4881ec980000	                           sub rsp, 0x98	      2356	ops.c	FUNCTION_36
0x438d	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      2356	ops.c	FUNCTION_36
0x4394	    0x64488b042528	                mov rax, qword fs:[0x28]	      2356	ops.c	FUNCTION_36
0x439d	        0x488945e8	             mov qword [rbp - 0x18], rax	      2356	ops.c	FUNCTION_36
0x43a1	            0x31c0	                            xor eax, eax	      2356	ops.c	FUNCTION_36
0x43a3	    0xc78574ffffff	               mov dword [rbp - 0x8c], 0	      2359	ops.c	FUNCTION_36
0x43ad	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2362	ops.c	FUNCTION_36	IF_1
0x43b4	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2362	ops.c	FUNCTION_36	IF_1
0x43b8	        0x488d5001	                      lea rdx, [rax + 1]	      2362	ops.c	FUNCTION_36	IF_1
0x43bc	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2361	ops.c	FUNCTION_36	IF_1	CALL_1
0x43c3	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2361	ops.c	FUNCTION_36	IF_1	CALL_1
0x43c7	        0x4883e801	                              sub rax, 1	      2361	ops.c	FUNCTION_36	IF_1	CALL_1
0x43cb	          0x4889d6	                            mov rsi, rdx	      2361	ops.c	FUNCTION_36	IF_1	CALL_1
0x43ce	          0x4889c7	                            mov rdi, rax	      2361	ops.c	FUNCTION_36	IF_1	CALL_1
0x43d1	      0xe800000000	                          call 0x4004416	      2361	ops.c	FUNCTION_36	IF_1	CALL_1
0x43d6	            0x85c0	                           test eax, eax	      2361	ops.c	FUNCTION_36	IF_1	CALL_1
0x43d8	     0xf84ad050000	                            je 0x40049cb	      2361	ops.c	FUNCTION_36	IF_1	CALL_1
0x43de	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2365	ops.c	FUNCTION_36
0x43e5	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2365	ops.c	FUNCTION_36
0x43e9	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2365	ops.c	FUNCTION_36
0x43ed	        0x48894590	             mov qword [rbp - 0x70], rax	      2365	ops.c	FUNCTION_36
0x43f1	        0x48895598	             mov qword [rbp - 0x68], rdx	      2365	ops.c	FUNCTION_36
0x43f5	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2366	ops.c	FUNCTION_36	IF_2
0x43fc	          0x8b4060	            mov eax, dword [rax + 0x60] 	      2366	ops.c	FUNCTION_36	IF_2
0x43ff	            0x85c0	                           test eax, eax	      2366	ops.c	FUNCTION_36	IF_2
0x4401	     0xf842c010000	                            je 0x4004573	      2366	ops.c	FUNCTION_36	IF_2
0x4407	      0xe9d1000000	                           jmp 0x400451d	      2368	ops.c	FUNCTION_36	IF_2	FOR_1
0x440c	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      2372	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_2
0x4410	        0x488d75a0	                   lea rsi, [rbp - 0x60]	      2372	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_2
0x4414	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2372	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_2
0x441b	      0xb900000000	                              mov ecx, 0	      2372	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_2
0x4420	          0x4889c7	                            mov rdi, rax	      2372	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_2
0x4423	      0xe8b1620000	                     call sym.block_prep	      2372	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_2
0x4428	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2373	ops.c	FUNCTION_36	IF_2	FOR_1
0x442b	          0x894598	             mov dword [rbp - 0x68], eax	      2373	ops.c	FUNCTION_36	IF_2	FOR_1
0x442e	          0x8b55a8	             mov edx, dword [rbp - 0x58]	      2374	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x4431	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2374	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x4438	            0x8b00	                    mov eax, dword [rax]	      2374	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x443a	        0x488d4d90	                   lea rcx, [rbp - 0x70]	      2374	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x443e	          0x4889ce	                            mov rsi, rcx	      2374	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x4441	            0x89c7	                            mov edi, eax	      2374	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x4443	      0xe862050000	                      call sym.swapchars	      2374	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x4448	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      2374	ops.c	FUNCTION_36	IF_2	FOR_1	CALL_3
0x444e	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	      2375	ops.c	FUNCTION_36	IF_2	FOR_1
0x4454	     0x98574ffffff	              or dword [rbp - 0x8c], eax	      2375	ops.c	FUNCTION_36	IF_2	FOR_1
0x445a	      0xe800000000	                          call 0x400449f	      2378	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_4
0x445f	            0x85c0	                           test eax, eax	      2378	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_4
0x4461	            0x746e	                            je 0x4004511	      2378	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_4
0x4463	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 0	      2378	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_4
0x446a	            0x7465	                            je 0x4004511	      2378	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_4
0x446c	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      2380	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_5
0x4470	    0x488b05000000	            mov rax, qword [0x040044b7] 	      2380	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_5
0x4477	      0xba00000000	                              mov edx, 0	      2380	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_5
0x447c	          0x4889ce	                            mov rsi, rcx	      2380	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_5
0x447f	          0x4889c7	                            mov rdi, rax	      2380	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_5
0x4482	      0xe800000000	                          call 0x40044c7	      2380	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_5
0x4487	        0x48894580	             mov qword [rbp - 0x80], rax	      2380	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_5
0x448b	          0x8b45a8	             mov eax, dword [rbp - 0x58]	      2383	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3
0x448e	          0x4863c8	                         movsxd rcx, eax	      2382	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_6
0x4491	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      2382	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_6
0x4494	        0x488b7590	             mov rsi, qword [rbp - 0x70]	      2382	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_6
0x4498	    0x488b05000000	            mov rax, qword [0x040044df] 	      2382	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_6
0x449f	          0x4889c7	                            mov rdi, rax	      2382	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_6
0x44a2	      0xe800000000	                          call 0x40044e7	      2382	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_6
0x44a7	          0x8b7da8	             mov edi, dword [rbp - 0x58]	      2384	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x44aa	          0x8b45b8	             mov eax, dword [rbp - 0x48]	      2385	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3
0x44ad	          0x4863d0	                         movsxd rdx, eax	      2384	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x44b0	        0x488b4580	             mov rax, qword [rbp - 0x80]	      2384	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x44b4	        0x488d0c02	                    lea rcx, [rdx + rax]	      2384	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x44b8	          0x8b55b8	             mov edx, dword [rbp - 0x48]	      2384	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x44bb	        0x488b7590	             mov rsi, qword [rbp - 0x70]	      2384	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x44bf	    0x488b05000000	            mov rax, qword [0x04004506] 	      2384	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x44c6	          0x4189f8	                            mov r8d, edi	      2384	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x44c9	          0x4889c7	                            mov rdi, rax	      2384	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x44cc	      0xe800000000	                          call 0x4004511	      2384	ops.c	FUNCTION_36	IF_2	FOR_1	IF_3	CALL_7
0x44d1	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2368	ops.c	FUNCTION_36	IF_2	FOR_1
0x44d5	        0x4883c001	                              add rax, 1	      2368	ops.c	FUNCTION_36	IF_2	FOR_1
0x44d9	        0x48894590	             mov qword [rbp - 0x70], rax	      2368	ops.c	FUNCTION_36	IF_2	FOR_1
0x44dd	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      2368	ops.c	FUNCTION_36	IF_2	FOR_1
0x44e1	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2368	ops.c	FUNCTION_36	IF_2	FOR_1
0x44e8	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2368	ops.c	FUNCTION_36	IF_2	FOR_1
0x44ec	          0x4839c2	                            cmp rdx, rax	      2368	ops.c	FUNCTION_36	IF_2	FOR_1
0x44ef	     0xf8e17ffffff	                           jle 0x400444c	      2368	ops.c	FUNCTION_36	IF_2	FOR_1
0x44f5	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      2389	ops.c	FUNCTION_36	IF_2	IF_4
0x44fc	     0xf84bd030000	                            je 0x40048ff	      2389	ops.c	FUNCTION_36	IF_2	IF_4
0x4502	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2390	ops.c	FUNCTION_36	IF_2	CALL_8
0x4509	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2390	ops.c	FUNCTION_36	IF_2	CALL_8
0x450d	        0x488d5001	                      lea rdx, [rax + 1]	      2390	ops.c	FUNCTION_36	IF_2	CALL_8
0x4511	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2390	ops.c	FUNCTION_36	IF_2	CALL_8
0x4518	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2390	ops.c	FUNCTION_36	IF_2	CALL_8
0x451c	      0xb900000000	                              mov ecx, 0	      2390	ops.c	FUNCTION_36	IF_2	CALL_8
0x4521	      0xbe00000000	                              mov esi, 0	      2390	ops.c	FUNCTION_36	IF_2	CALL_8
0x4526	          0x4889c7	                            mov rdi, rax	      2390	ops.c	FUNCTION_36	IF_2	CALL_8
0x4529	      0xe800000000	                          call 0x400456e	      2390	ops.c	FUNCTION_36	IF_2	CALL_8
0x452e	      0xe98c030000	                           jmp 0x40048ff	      2390	ops.c	FUNCTION_36	IF_2	CALL_8
0x4533	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2394	ops.c	FUNCTION_36	ELSE_1	IF_5
0x453a	          0x8b4008	                mov eax, dword [rax + 8]	      2394	ops.c	FUNCTION_36	ELSE_1	IF_5
0x453d	          0x83f801	                              cmp eax, 1	      2394	ops.c	FUNCTION_36	ELSE_1	IF_5
0x4540	            0x7563	                           jne 0x40045e5	      2394	ops.c	FUNCTION_36	ELSE_1	IF_5
0x4542	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2396	ops.c	FUNCTION_36	ELSE_1	IF_5
0x4549	    0xc74028000000	               mov dword [rax + 0x28], 0	      2396	ops.c	FUNCTION_36	ELSE_1	IF_5
0x4550	    0xc74598000000	               mov dword [rbp - 0x68], 0	      2397	ops.c	FUNCTION_36	ELSE_1	IF_5
0x4557	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2398	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x455e	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2398	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x4562	          0x4889c7	                            mov rdi, rax	      2398	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x4565	      0xe800000000	                          call 0x40045aa	      2398	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x456a	          0x4889c7	                            mov rdi, rax	      2398	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x456d	      0xe800000000	                          call 0x40045b2	      2398	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x4572	            0x89c2	                            mov edx, eax	      2398	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x4574	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2398	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x457b	          0x895038	             mov dword [rax + 0x38], edx	      2398	ops.c	FUNCTION_36	ELSE_1	IF_5	CALL_10
0x457e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2399	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x4585	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2399	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x4588	            0x85c0	                           test eax, eax	      2399	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x458a	            0x743a	                            je 0x4004606	      2399	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x458c	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2400	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x4593	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2400	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x4596	          0x8d50ff	                      lea edx, [rax - 1]	      2400	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x4599	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2400	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x45a0	          0x895038	             mov dword [rax + 0x38], edx	      2400	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x45a3	            0xeb21	                           jmp 0x4004606	      2400	ops.c	FUNCTION_36	ELSE_1	IF_5	IF_6
0x45a5	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2402	ops.c	FUNCTION_36	ELSE_1	ELSE_2	IF_7
0x45ac	          0x8b4014	            mov eax, dword [rax + 0x14] 	      2402	ops.c	FUNCTION_36	ELSE_1	ELSE_2	IF_7
0x45af	            0x85c0	                           test eax, eax	      2402	ops.c	FUNCTION_36	ELSE_1	ELSE_2	IF_7
0x45b1	            0x7513	                           jne 0x4004606	      2402	ops.c	FUNCTION_36	ELSE_1	ELSE_2	IF_7
0x45b3	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2403	ops.c	FUNCTION_36	ELSE_1	ELSE_2	IF_7
0x45ba	        0x4883c030	                           add rax, 0x30	      2403	ops.c	FUNCTION_36	ELSE_1	ELSE_2	IF_7
0x45be	          0x4889c7	                            mov rdi, rax	      2403	ops.c	FUNCTION_36	ELSE_1	ELSE_2	IF_7
0x45c1	      0xe800000000	                          call 0x4004606	      2403	ops.c	FUNCTION_36	ELSE_1	ELSE_2	IF_7
0x45c6	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      2405	ops.c	FUNCTION_36	ELSE_1	IF_8
0x45ca	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2405	ops.c	FUNCTION_36	ELSE_1	IF_8
0x45d1	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2405	ops.c	FUNCTION_36	ELSE_1	IF_8
0x45d5	          0x4839c2	                            cmp rdx, rax	      2405	ops.c	FUNCTION_36	ELSE_1	IF_8
0x45d8	            0x7536	                           jne 0x4004650	      2405	ops.c	FUNCTION_36	ELSE_1	IF_8
0x45da	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2407	ops.c	FUNCTION_36	ELSE_1	IF_8
0x45e1	          0x8b5038	            mov edx, dword [rax + 0x38] 	      2407	ops.c	FUNCTION_36	ELSE_1	IF_8
0x45e4	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2407	ops.c	FUNCTION_36	ELSE_1	IF_8
0x45e7	            0x29c2	                            sub edx, eax	      2407	ops.c	FUNCTION_36	ELSE_1	IF_8
0x45e9	            0x89d0	                            mov eax, edx	      2407	ops.c	FUNCTION_36	ELSE_1	IF_8
0x45eb	          0x8d5001	                      lea edx, [rax + 1]	      2406	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x45ee	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2406	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x45f5	            0x8b00	                    mov eax, dword [rax]	      2406	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x45f7	        0x488d4d90	                   lea rcx, [rbp - 0x70]	      2406	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x45fb	          0x4889ce	                            mov rsi, rcx	      2406	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x45fe	            0x89c7	                            mov edi, eax	      2406	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x4600	      0xe8a5030000	                      call sym.swapchars	      2406	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x4605	    0x898574ffffff	             mov dword [rbp - 0x8c], eax	      2406	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x460b	      0xe905010000	                           jmp 0x4004755	      2406	ops.c	FUNCTION_36	ELSE_1	IF_8	CALL_12
0x4610	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      2412	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2
0x4614	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2412	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2
0x461b	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2412	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2
0x461f	          0x4839c2	                            cmp rdx, rax	      2411	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4622	            0x750f	                           jne 0x4004673	      2411	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4624	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2412	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2
0x462b	          0x8b4038	            mov eax, dword [rax + 0x38] 	      2412	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2
0x462e	          0x8d5001	                      lea edx, [rax + 1]	      2411	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4631	            0xeb16	                           jmp 0x4004689	      2411	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4633	        0x488d4590	                   lea rax, [rbp - 0x70]	      2413	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_15
0x4637	          0x4889c7	                            mov rdi, rax	      2413	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_15
0x463a	      0xe800000000	                          call 0x400467f	      2413	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_15
0x463f	          0x4889c7	                            mov rdi, rax	      2413	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_15
0x4642	      0xe800000000	                          call 0x4004687	      2413	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_15
0x4647	            0x89c2	                            mov edx, eax	      2411	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4649	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2411	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4650	            0x8b00	                    mov eax, dword [rax]	      2411	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4652	        0x488d4d90	                   lea rcx, [rbp - 0x70]	      2411	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4656	          0x4889ce	                            mov rsi, rcx	      2411	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4659	            0x89c7	                            mov edi, eax	      2411	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x465b	      0xe84a030000	                      call sym.swapchars	      2411	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4660	     0x98574ffffff	              or dword [rbp - 0x8c], eax	      2411	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	CALL_13
0x4666	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x466d	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4671	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4675	          0x4839c2	                            cmp rdx, rax	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4678	            0x741a	                            je 0x40046d4	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x467a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4681	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4685	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4689	          0x4839c2	                            cmp rdx, rax	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x468c	     0xf8c83000000	                            jl 0x4004755	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4692	            0xeb35	                           jmp 0x4004709	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4694	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x469b	          0x8b5038	            mov edx, dword [rax + 0x38] 	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x469e	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x46a1	            0x39c2	                            cmp edx, eax	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x46a3	            0x7413	                            je 0x40046f8	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x46a5	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x46ac	          0x8b5038	            mov edx, dword [rax + 0x38] 	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x46af	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x46b2	            0x39c2	                            cmp edx, eax	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x46b4	            0x7c5f	                            jl 0x4004755	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x46b6	            0xeb11	                           jmp 0x4004709	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x46b8	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x46bf	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x46c2	          0x8b459c	             mov eax, dword [rbp - 0x64]	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x46c5	            0x39c2	                            cmp edx, eax	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x46c7	            0x7c4c	                            jl 0x4004755	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x46c9	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x46d0	        0x488b5030	            mov rdx, qword [rax + 0x30] 	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x46d4	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x46d8	          0x4839c2	                            cmp rdx, rax	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x46db	            0x7522	                           jne 0x400473f	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x46dd	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x46e4	          0x8b5038	            mov edx, dword [rax + 0x38] 	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x46e7	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x46ea	            0x39c2	                            cmp edx, eax	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x46ec	            0x7511	                           jne 0x400473f	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x46ee	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x46f5	          0x8b503c	            mov edx, dword [rax + 0x3c] 	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x46f8	          0x8b459c	             mov eax, dword [rbp - 0x64]	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x46fb	            0x39c2	                            cmp edx, eax	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x46fd	            0x7416	                            je 0x4004755	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x46ff	        0x488d4590	                   lea rax, [rbp - 0x70]	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4703	          0x4889c7	                            mov rdi, rax	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4706	      0xe800000000	                          call 0x400474b	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x470b	          0x83f8ff	             cmp eax, 0xffffffffffffffff	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x470e	            0x7405	                            je 0x4004755	      2414	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2	IF_9	CALL_17
0x4710	      0xe9fbfeffff	                           jmp 0x4004650	      2416	ops.c	FUNCTION_36	ELSE_1	ELSE_3	FOR_2
0x4715	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      2417	ops.c	FUNCTION_36	ELSE_1	IF_10
0x471c	     0xf849d010000	                            je 0x40048ff	      2417	ops.c	FUNCTION_36	ELSE_1	IF_10
0x4722	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2419	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x4729	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2419	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x472d	        0x488d5001	                      lea rdx, [rax + 1]	      2419	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x4731	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2419	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x4738	          0x8b7028	            mov esi, dword [rax + 0x28] 	      2419	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x473b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2419	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x4742	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2419	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x4746	      0xb900000000	                              mov ecx, 0	      2419	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x474b	          0x4889c7	                            mov rdi, rax	      2419	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x474e	      0xe800000000	                          call 0x4004793	      2419	ops.c	FUNCTION_36	ELSE_1	IF_10	CALL_18
0x4753	      0xe800000000	                          call 0x4004798	      2422	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_19
0x4758	            0x85c0	                           test eax, eax	      2422	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_19
0x475a	     0xf845f010000	                            je 0x40048ff	      2422	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_19
0x4760	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      2422	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_19
0x4767	     0xf8452010000	                            je 0x40048ff	      2422	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_19
0x476d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2427	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4774	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2427	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4778	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2427	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x477c	        0x48894590	             mov qword [rbp - 0x70], rax	      2427	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4780	        0x48895598	             mov qword [rbp - 0x68], rdx	      2427	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4784	      0xe999000000	                           jmp 0x4004862	      2428	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4789	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      2430	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_20
0x478d	    0x488b05000000	            mov rax, qword [0x040047d4] 	      2430	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_20
0x4794	      0xba00000000	                              mov edx, 0	      2430	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_20
0x4799	          0x4889ce	                            mov rsi, rcx	      2430	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_20
0x479c	          0x4889c7	                            mov rdi, rax	      2430	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_20
0x479f	      0xe800000000	                          call 0x40047e4	      2430	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_20
0x47a4	        0x48894588	             mov qword [rbp - 0x78], rax	      2430	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_20
0x47a8	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2431	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x47ac	          0x4889c7	                            mov rdi, rax	      2431	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x47af	      0xe800000000	                          call 0x40047f4	      2431	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x47b4	            0x89c2	                            mov edx, eax	      2431	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x47b6	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2431	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x47b9	            0x29c2	                            sub edx, eax	      2431	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x47bb	            0x89d0	                            mov eax, edx	      2431	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x47bd	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      2431	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_21
0x47c3	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      2432	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_22
0x47c9	          0x4863c8	                         movsxd rcx, eax	      2432	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_22
0x47cc	          0x8b5598	             mov edx, dword [rbp - 0x68]	      2432	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_22
0x47cf	        0x488b7590	             mov rsi, qword [rbp - 0x70]	      2432	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_22
0x47d3	    0x488b05000000	            mov rax, qword [0x0400481a] 	      2432	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_22
0x47da	          0x4889c7	                            mov rdi, rax	      2432	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_22
0x47dd	      0xe800000000	                          call 0x4004822	      2432	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_22
0x47e2	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2434	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x47e5	          0x4863d0	                         movsxd rdx, eax	      2433	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x47e8	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2433	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x47ec	        0x488d0c02	                    lea rcx, [rdx + rax]	      2433	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x47f0	          0x8b5598	             mov edx, dword [rbp - 0x68]	      2433	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x47f3	        0x488b7590	             mov rsi, qword [rbp - 0x70]	      2433	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x47f7	    0x488b05000000	            mov rax, qword [0x0400483e] 	      2433	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x47fe	    0x8bbd7cffffff	             mov edi, dword [rbp - 0x84]	      2433	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x4804	          0x4189f8	                            mov r8d, edi	      2433	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x4807	          0x4889c7	                            mov rdi, rax	      2433	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x480a	      0xe800000000	                          call 0x400484f	      2433	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1	CALL_23
0x480f	    0xc74598000000	               mov dword [rbp - 0x68], 0	      2435	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4816	        0x488b4590	             mov rax, qword [rbp - 0x70]	      2436	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x481a	        0x4883c001	                              add rax, 1	      2436	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x481e	        0x48894590	             mov qword [rbp - 0x70], rax	      2436	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4822	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      2428	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4826	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2428	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x482d	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2428	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4831	          0x4839c2	                            cmp rdx, rax	      2428	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x4834	     0xf8c4fffffff	                            jl 0x40047c9	      2428	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	WHILE_1
0x483a	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	      2438	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_24
0x483e	    0x488b05000000	            mov rax, qword [0x04004885] 	      2438	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_24
0x4845	      0xba00000000	                              mov edx, 0	      2438	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_24
0x484a	          0x4889ce	                            mov rsi, rcx	      2438	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_24
0x484d	          0x4889c7	                            mov rdi, rax	      2438	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_24
0x4850	      0xe800000000	                          call 0x4004895	      2438	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_24
0x4855	        0x48894588	             mov qword [rbp - 0x78], rax	      2438	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_24
0x4859	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2439	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4860	          0x8b5038	            mov edx, dword [rax + 0x38] 	      2439	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4863	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2439	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4866	            0x29c2	                            sub edx, eax	      2439	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4868	            0x89d0	                            mov eax, edx	      2439	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x486a	          0x83c001	                              add eax, 1	      2439	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x486d	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      2439	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4873	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	      2440	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_25
0x4879	          0x4863c8	                         movsxd rcx, eax	      2440	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_25
0x487c	          0x8b5598	             mov edx, dword [rbp - 0x68]	      2440	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_25
0x487f	        0x488b7590	             mov rsi, qword [rbp - 0x70]	      2440	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_25
0x4883	    0x488b05000000	            mov rax, qword [0x040048ca] 	      2440	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_25
0x488a	          0x4889c7	                            mov rdi, rax	      2440	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_25
0x488d	      0xe800000000	                          call 0x40048d2	      2440	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_25
0x4892	          0x8b4598	             mov eax, dword [rbp - 0x68]	      2442	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11
0x4895	          0x4863d0	                         movsxd rdx, eax	      2441	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x4898	        0x488b4588	             mov rax, qword [rbp - 0x78]	      2441	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x489c	        0x488d0c02	                    lea rcx, [rdx + rax]	      2441	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x48a0	          0x8b5598	             mov edx, dword [rbp - 0x68]	      2441	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x48a3	        0x488b7590	             mov rsi, qword [rbp - 0x70]	      2441	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x48a7	    0x488b05000000	            mov rax, qword [0x040048ee] 	      2441	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x48ae	    0x8bbd7cffffff	             mov edi, dword [rbp - 0x84]	      2441	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x48b4	          0x4189f8	                            mov r8d, edi	      2441	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x48b7	          0x4889c7	                            mov rdi, rax	      2441	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x48ba	      0xe800000000	                          call 0x40048ff	      2441	ops.c	FUNCTION_36	ELSE_1	IF_10	IF_11	CALL_26
0x48bf	    0x83bd74ffffff	               cmp dword [rbp - 0x8c], 0	      2448	ops.c	FUNCTION_36	IF_12
0x48c6	            0x7518	                           jne 0x4004920	      2448	ops.c	FUNCTION_36	IF_12
0x48c8	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2448	ops.c	FUNCTION_36	IF_12
0x48cf	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      2448	ops.c	FUNCTION_36	IF_12
0x48d2	            0x85c0	                           test eax, eax	      2448	ops.c	FUNCTION_36	IF_12
0x48d4	            0x740a	                            je 0x4004920	      2448	ops.c	FUNCTION_36	IF_12
0x48d6	      0xbf14000000	                           mov edi, 0x14	      2450	ops.c	FUNCTION_36	CALL_27
0x48db	      0xe800000000	                          call 0x4004920	      2450	ops.c	FUNCTION_36	CALL_27
0x48e0	    0x488b0d000000	            mov rcx, qword [0x04004927] 	      2455	ops.c	FUNCTION_36
0x48e7	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2455	ops.c	FUNCTION_36
0x48ee	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      2455	ops.c	FUNCTION_36
0x48f2	        0x488b4020	            mov rax, qword [rax + 0x20] 	      2455	ops.c	FUNCTION_36
0x48f6	    0x488981d01100	          mov qword [rcx + 0x11d0], rax 	      2455	ops.c	FUNCTION_36
0x48fd	    0x488991d81100	          mov qword [rcx + 0x11d8], rdx 	      2455	ops.c	FUNCTION_36
0x4904	    0x488b0d000000	            mov rcx, qword [0x0400494b] 	      2456	ops.c	FUNCTION_36
0x490b	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2456	ops.c	FUNCTION_36
0x4912	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      2456	ops.c	FUNCTION_36
0x4916	        0x488b4030	            mov rax, qword [rax + 0x30] 	      2456	ops.c	FUNCTION_36
0x491a	    0x488981f01100	          mov qword [rcx + 0x11f0], rax 	      2456	ops.c	FUNCTION_36
0x4921	    0x488991f81100	          mov qword [rcx + 0x11f8], rdx 	      2456	ops.c	FUNCTION_36
0x4928	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2458	ops.c	FUNCTION_36	IF_13
0x492f	        0x488b5050	            mov rdx, qword [rax + 0x50] 	      2458	ops.c	FUNCTION_36	IF_13
0x4933	    0x488b05000000	            mov rax, qword [0x0400497a] 	      2458	ops.c	FUNCTION_36	IF_13
0x493a	          0x4839c2	                            cmp rdx, rax	      2458	ops.c	FUNCTION_36	IF_13
0x493d	            0x7e4d	                           jle 0x40049cc	      2458	ops.c	FUNCTION_36	IF_13
0x493f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2460	ops.c	FUNCTION_36	IF_13	IF_14
0x4946	        0x488b4050	            mov rax, qword [rax + 0x50] 	      2460	ops.c	FUNCTION_36	IF_13	IF_14
0x494a	        0x4883f801	                              cmp rax, 1	      2460	ops.c	FUNCTION_36	IF_13	IF_14
0x494e	            0x7514	                           jne 0x40049a4	      2460	ops.c	FUNCTION_36	IF_13	IF_14
0x4950	      0xbf00000000	                              mov edi, 0	      2461	ops.c	FUNCTION_36	IF_13	CALL_29
0x4955	      0xe800000000	                          call 0x400499a	      2461	ops.c	FUNCTION_36	IF_13	CALL_29
0x495a	          0x4889c7	                            mov rdi, rax	      2461	ops.c	FUNCTION_36	IF_13	CALL_29
0x495d	      0xe800000000	                          call 0x40049a2	      2461	ops.c	FUNCTION_36	IF_13	CALL_29
0x4962	            0xeb28	                           jmp 0x40049cc	      2461	ops.c	FUNCTION_36	IF_13	CALL_29
0x4964	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      2463	ops.c	FUNCTION_36	IF_13	CALL_31
0x496b	        0x488b5850	            mov rbx, qword [rax + 0x50] 	      2463	ops.c	FUNCTION_36	IF_13	CALL_31
0x496f	      0xbf00000000	                              mov edi, 0	      2463	ops.c	FUNCTION_36	IF_13	CALL_31
0x4974	      0xe800000000	                          call 0x40049b9	      2463	ops.c	FUNCTION_36	IF_13	CALL_31
0x4979	          0x4889de	                            mov rsi, rbx	      2463	ops.c	FUNCTION_36	IF_13	CALL_31
0x497c	          0x4889c7	                            mov rdi, rax	      2463	ops.c	FUNCTION_36	IF_13	CALL_31
0x497f	      0xb800000000	                              mov eax, 0	      2463	ops.c	FUNCTION_36	IF_13	CALL_31
0x4984	      0xe800000000	                          call 0x40049c9	      2463	ops.c	FUNCTION_36	IF_13	CALL_31
0x4989	            0xeb01	                           jmp 0x40049cc	      2463	ops.c	FUNCTION_36	IF_13	CALL_31
0x498b	              0x90	                                     nop	      2363	ops.c	FUNCTION_36	IF_1
0x498c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      2465	ops.c	FUNCTION_36
0x4990	    0x644833042528	                xor rax, qword fs:[0x28]	      2465	ops.c	FUNCTION_36
0x4999	            0x7405	                            je 0x40049e0	      2465	ops.c	FUNCTION_36
0x499b	      0xe800000000	                          call 0x40049e0	      2465	ops.c	FUNCTION_36
0x49a0	    0x4881c4980000	                           add rsp, 0x98	      2465	ops.c	FUNCTION_36
0x49a7	              0x5b	                                 pop rbx	      2465	ops.c	FUNCTION_36
0x49a8	              0x5d	                                 pop rbp	      2465	ops.c	FUNCTION_36
0x49a9	              0xc3	                                     ret	      2465	ops.c	FUNCTION_36
adjust_clip_reg	CALL,0:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,1:IF,4	62
0x2683	              0x55	                                push rbp	      1618	ops.c	FUNCTION_30
0x2684	          0x4889e5	                            mov rbp, rsp	      1618	ops.c	FUNCTION_30
0x2687	        0x48897df8	                mov qword [rbp - 8], rdi	      1618	ops.c	FUNCTION_30
0x268b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1621	ops.c	FUNCTION_30	IF_1
0x268f	            0x8b00	                    mov eax, dword [rax]	      1621	ops.c	FUNCTION_30	IF_1
0x2691	            0x85c0	                           test eax, eax	      1621	ops.c	FUNCTION_30	IF_1
0x2693	            0x7572	                           jne 0x4002747	      1621	ops.c	FUNCTION_30	IF_1
0x2695	    0x8b0500000000	            mov eax, dword [0x040026db] 	      1621	ops.c	FUNCTION_30	IF_1
0x269b	            0x85c0	                           test eax, eax	      1621	ops.c	FUNCTION_30	IF_1
0x269d	            0x750a	                           jne 0x40026e9	      1621	ops.c	FUNCTION_30	IF_1
0x269f	    0x8b0500000000	            mov eax, dword [0x040026e5] 	      1621	ops.c	FUNCTION_30	IF_1
0x26a5	            0x85c0	                           test eax, eax	      1621	ops.c	FUNCTION_30	IF_1
0x26a7	            0x745e	                            je 0x4002747	      1621	ops.c	FUNCTION_30	IF_1
0x26a9	    0x8b0500000000	            mov eax, dword [0x040026ef] 	      1623	ops.c	FUNCTION_30	IF_1	IF_2
0x26af	            0x85c0	                           test eax, eax	      1623	ops.c	FUNCTION_30	IF_1	IF_2
0x26b1	            0x742b	                            je 0x400271e	      1623	ops.c	FUNCTION_30	IF_1	IF_2
0x26b3	    0x8b0500000000	            mov eax, dword [0x040026f9] 	      1624	ops.c	FUNCTION_30	IF_1	IF_2
0x26b9	          0x83e002	                              and eax, 2	      1624	ops.c	FUNCTION_30	IF_1	IF_2
0x26bc	            0x85c0	                           test eax, eax	      1625	ops.c	FUNCTION_30	IF_1	IF_2
0x26be	            0x7411	                            je 0x4002711	      1625	ops.c	FUNCTION_30	IF_1	IF_2
0x26c0	    0x8b0500000000	            mov eax, dword [0x04002706] 	      1624	ops.c	FUNCTION_30	IF_1	IF_2
0x26c6	            0x85c0	                           test eax, eax	      1624	ops.c	FUNCTION_30	IF_1	IF_2
0x26c8	            0x7407	                            je 0x4002711	      1624	ops.c	FUNCTION_30	IF_1	IF_2
0x26ca	      0xba2b000000	                           mov edx, 0x2b	      1625	ops.c	FUNCTION_30	IF_1	IF_2
0x26cf	            0xeb05	                           jmp 0x4002716	      1625	ops.c	FUNCTION_30	IF_1	IF_2
0x26d1	      0xba2a000000	                           mov edx, 0x2a	      1625	ops.c	FUNCTION_30	IF_1	IF_2
0x26d6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1624	ops.c	FUNCTION_30	IF_1	IF_2
0x26da	            0x8910	                    mov dword [rax], edx	      1624	ops.c	FUNCTION_30	IF_1	IF_2
0x26dc	            0xeb29	                           jmp 0x4002747	      1624	ops.c	FUNCTION_30	IF_1	IF_2
0x26de	    0x8b0500000000	            mov eax, dword [0x04002724] 	      1627	ops.c	FUNCTION_30	IF_1	ELSE_1
0x26e4	          0x83e002	                              and eax, 2	      1627	ops.c	FUNCTION_30	IF_1	ELSE_1
0x26e7	            0x85c0	                           test eax, eax	      1628	ops.c	FUNCTION_30	IF_1	ELSE_1
0x26e9	            0x7411	                            je 0x400273c	      1628	ops.c	FUNCTION_30	IF_1	ELSE_1
0x26eb	    0x8b0500000000	            mov eax, dword [0x04002731] 	      1627	ops.c	FUNCTION_30	IF_1	ELSE_1
0x26f1	            0x85c0	                           test eax, eax	      1627	ops.c	FUNCTION_30	IF_1	ELSE_1
0x26f3	            0x7407	                            je 0x400273c	      1627	ops.c	FUNCTION_30	IF_1	ELSE_1
0x26f5	      0xba2b000000	                           mov edx, 0x2b	      1628	ops.c	FUNCTION_30	IF_1	ELSE_1
0x26fa	            0xeb05	                           jmp 0x4002741	      1628	ops.c	FUNCTION_30	IF_1	ELSE_1
0x26fc	      0xba2a000000	                           mov edx, 0x2a	      1628	ops.c	FUNCTION_30	IF_1	ELSE_1
0x2701	        0x488b45f8	                mov rax, qword [rbp - 8]	      1627	ops.c	FUNCTION_30	IF_1	ELSE_1
0x2705	            0x8910	                    mov dword [rax], edx	      1627	ops.c	FUNCTION_30	IF_1	ELSE_1
0x2707	    0x8b0500000000	            mov eax, dword [0x0400274d] 	      1630	ops.c	FUNCTION_30	IF_3
0x270d	            0x85c0	                           test eax, eax	      1630	ops.c	FUNCTION_30	IF_3
0x270f	            0x7515	                           jne 0x4002766	      1630	ops.c	FUNCTION_30	IF_3
0x2711	        0x488b45f8	                mov rax, qword [rbp - 8]	      1630	ops.c	FUNCTION_30	IF_3
0x2715	            0x8b00	                    mov eax, dword [rax]	      1630	ops.c	FUNCTION_30	IF_3
0x2717	          0x83f82a	                           cmp eax, 0x2a	      1630	ops.c	FUNCTION_30	IF_3
0x271a	            0x750a	                           jne 0x4002766	      1630	ops.c	FUNCTION_30	IF_3
0x271c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1631	ops.c	FUNCTION_30	IF_3
0x2720	    0xc70000000000	                      mov dword [rax], 0	      1631	ops.c	FUNCTION_30	IF_3
0x2726	    0x8b0500000000	            mov eax, dword [0x0400276c] 	      1632	ops.c	FUNCTION_30	IF_4
0x272c	            0x85c0	                           test eax, eax	      1632	ops.c	FUNCTION_30	IF_4
0x272e	            0x7515	                           jne 0x4002785	      1632	ops.c	FUNCTION_30	IF_4
0x2730	        0x488b45f8	                mov rax, qword [rbp - 8]	      1632	ops.c	FUNCTION_30	IF_4
0x2734	            0x8b00	                    mov eax, dword [rax]	      1632	ops.c	FUNCTION_30	IF_4
0x2736	          0x83f82b	                           cmp eax, 0x2b	      1632	ops.c	FUNCTION_30	IF_4
0x2739	            0x750a	                           jne 0x4002785	      1632	ops.c	FUNCTION_30	IF_4
0x273b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1633	ops.c	FUNCTION_30	IF_4
0x273f	    0xc70000000000	                      mov dword [rax], 0	      1633	ops.c	FUNCTION_30	IF_4
0x2745	              0x90	                                     nop	      1634	ops.c	FUNCTION_30
0x2746	              0x5d	                                 pop rbp	      1634	ops.c	FUNCTION_30
0x2747	              0xc3	                                     ret	      1634	ops.c	FUNCTION_30
swapchar	CALL,17:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,4:IF,11	178
0x4a3c	              0x55	                                push rbp	      2508	ops.c	FUNCTION_38
0x4a3d	          0x4889e5	                            mov rbp, rsp	      2508	ops.c	FUNCTION_38
0x4a40	        0x4883ec30	                           sub rsp, 0x30	      2508	ops.c	FUNCTION_38
0x4a44	          0x897ddc	             mov dword [rbp - 0x24], edi	      2508	ops.c	FUNCTION_38
0x4a47	        0x488975d0	             mov qword [rbp - 0x30], rsi	      2508	ops.c	FUNCTION_38
0x4a4b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2512	ops.c	FUNCTION_38	CALL_1
0x4a4f	          0x4889c7	                            mov rdi, rax	      2512	ops.c	FUNCTION_38	CALL_1
0x4a52	      0xe800000000	                          call 0x4004a97	      2512	ops.c	FUNCTION_38	CALL_1
0x4a57	          0x8945ec	             mov dword [rbp - 0x14], eax	      2512	ops.c	FUNCTION_38	CALL_1
0x4a5a	        0x837dec7f	           cmp dword [rbp - 0x14], 0x7f 	      2515	ops.c	FUNCTION_38	IF_1
0x4a5e	            0x7e10	                           jle 0x4004ab0	      2515	ops.c	FUNCTION_38	IF_1
0x4a60	        0x837ddc0f	            cmp dword [rbp - 0x24], 0xf 	      2515	ops.c	FUNCTION_38	IF_1
0x4a64	            0x750a	                           jne 0x4004ab0	      2515	ops.c	FUNCTION_38	IF_1
0x4a66	      0xb800000000	                              mov eax, 0	      2516	ops.c	FUNCTION_38	IF_1
0x4a6b	      0xe94b020000	                           jmp 0x4004cfb	      2516	ops.c	FUNCTION_38	IF_1
0x4a70	        0x837ddc0b	            cmp dword [rbp - 0x24], 0xb 	      2519	ops.c	FUNCTION_38	IF_2
0x4a74	     0xf85a1000000	                           jne 0x4004b5b	      2519	ops.c	FUNCTION_38	IF_2
0x4a7a	    0x817decdf0000	           cmp dword [rbp - 0x14], 0xdf 	      2519	ops.c	FUNCTION_38	IF_2
0x4a81	     0xf8594000000	                           jne 0x4004b5b	      2519	ops.c	FUNCTION_38	IF_2
0x4a87	    0x8b0500000000	            mov eax, dword [0x04004acd] 	      2520	ops.c	FUNCTION_38	IF_2	CALL_2
0x4a8d	            0x85c0	                           test eax, eax	      2520	ops.c	FUNCTION_38	IF_2	CALL_2
0x4a8f	            0x7518	                           jne 0x4004ae9	      2520	ops.c	FUNCTION_38	IF_2	CALL_2
0x4a91	    0x488b05000000	            mov rax, qword [0x04004ad8] 	      2520	ops.c	FUNCTION_38	IF_2	CALL_2
0x4a98	      0xbe00000000	                              mov esi, 0	      2520	ops.c	FUNCTION_38	IF_2	CALL_2
0x4a9d	          0x4889c7	                            mov rdi, rax	      2520	ops.c	FUNCTION_38	IF_2	CALL_2
0x4aa0	      0xe800000000	                          call 0x4004ae5	      2520	ops.c	FUNCTION_38	IF_2	CALL_2
0x4aa5	            0x85c0	                           test eax, eax	      2520	ops.c	FUNCTION_38	IF_2	CALL_2
0x4aa7	            0x7572	                           jne 0x4004b5b	      2520	ops.c	FUNCTION_38	IF_2	CALL_2
0x4aa9	    0x488b05000000	            mov rax, qword [0x04004af0] 	      2522	ops.c	FUNCTION_38	IF_2
0x4ab0	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2522	ops.c	FUNCTION_38	IF_2
0x4ab4	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2522	ops.c	FUNCTION_38	IF_2
0x4ab8	        0x488945f0	             mov qword [rbp - 0x10], rax	      2522	ops.c	FUNCTION_38	IF_2
0x4abc	        0x488955f8	                mov qword [rbp - 8], rdx	      2522	ops.c	FUNCTION_38	IF_2
0x4ac0	    0x488b0d000000	            mov rcx, qword [0x04004b07] 	      2525	ops.c	FUNCTION_38	IF_2
0x4ac7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2525	ops.c	FUNCTION_38	IF_2
0x4acb	        0x488b5008	                mov rdx, qword [rax + 8]	      2525	ops.c	FUNCTION_38	IF_2
0x4acf	          0x488b00	                    mov rax, qword [rax]	      2525	ops.c	FUNCTION_38	IF_2
0x4ad2	        0x48894138	             mov qword [rcx + 0x38], rax	      2525	ops.c	FUNCTION_38	IF_2
0x4ad6	        0x48895140	             mov qword [rcx + 0x40], rdx	      2525	ops.c	FUNCTION_38	IF_2
0x4ada	      0xbf00000000	                              mov edi, 0	      2526	ops.c	FUNCTION_38	IF_2	CALL_3
0x4adf	      0xe800000000	                          call 0x4004b24	      2526	ops.c	FUNCTION_38	IF_2	CALL_3
0x4ae4	      0xbf53000000	                           mov edi, 0x53	      2527	ops.c	FUNCTION_38	IF_2	CALL_4
0x4ae9	      0xe800000000	                          call 0x4004b2e	      2527	ops.c	FUNCTION_38	IF_2	CALL_4
0x4aee	      0xbf53000000	                           mov edi, 0x53	      2528	ops.c	FUNCTION_38	IF_2	CALL_5
0x4af3	      0xe800000000	                          call 0x4004b38	      2528	ops.c	FUNCTION_38	IF_2	CALL_5
0x4af8	    0x488b0d000000	            mov rcx, qword [0x04004b3f] 	      2529	ops.c	FUNCTION_38	IF_2
0x4aff	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2529	ops.c	FUNCTION_38	IF_2
0x4b03	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2529	ops.c	FUNCTION_38	IF_2
0x4b07	        0x48894138	             mov qword [rcx + 0x38], rax	      2529	ops.c	FUNCTION_38	IF_2
0x4b0b	        0x48895140	             mov qword [rcx + 0x40], rdx	      2529	ops.c	FUNCTION_38	IF_2
0x4b0f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2530	ops.c	FUNCTION_38	IF_2	CALL_6
0x4b13	          0x4889c7	                            mov rdi, rax	      2530	ops.c	FUNCTION_38	IF_2	CALL_6
0x4b16	      0xe800000000	                          call 0x4004b5b	      2530	ops.c	FUNCTION_38	IF_2	CALL_6
0x4b1b	    0x8b0500000000	            mov eax, dword [0x04004b61] 	      2533	ops.c	FUNCTION_38	IF_3
0x4b21	            0x85c0	                           test eax, eax	      2533	ops.c	FUNCTION_38	IF_3
0x4b23	            0x7413	                            je 0x4004b78	      2533	ops.c	FUNCTION_38	IF_3
0x4b25	    0x817decff0000	           cmp dword [rbp - 0x14], 0xff 	      2533	ops.c	FUNCTION_38	IF_3
0x4b2c	            0x7e0a	                           jle 0x4004b78	      2533	ops.c	FUNCTION_38	IF_3
0x4b2e	      0xb800000000	                              mov eax, 0	      2534	ops.c	FUNCTION_38	IF_3
0x4b33	      0xe983010000	                           jmp 0x4004cfb	      2534	ops.c	FUNCTION_38	IF_3
0x4b38	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2536	ops.c	FUNCTION_38
0x4b3b	          0x8945e8	             mov dword [rbp - 0x18], eax	      2536	ops.c	FUNCTION_38
0x4b3e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2537	ops.c	FUNCTION_38	IF_4	CALL_7
0x4b41	            0x89c7	                            mov edi, eax	      2537	ops.c	FUNCTION_38	IF_4	CALL_7
0x4b43	      0xe800000000	                          call 0x4004b88	      2537	ops.c	FUNCTION_38	IF_4	CALL_7
0x4b48	            0x85c0	                           test eax, eax	      2537	ops.c	FUNCTION_38	IF_4	CALL_7
0x4b4a	            0x7445	                            je 0x4004bd1	      2537	ops.c	FUNCTION_38	IF_4	CALL_7
0x4b4c	        0x837ddc0f	            cmp dword [rbp - 0x24], 0xf 	      2539	ops.c	FUNCTION_38	IF_4	IF_5
0x4b50	            0x752a	                           jne 0x4004bbc	      2539	ops.c	FUNCTION_38	IF_4	IF_5
0x4b52	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2540	ops.c	FUNCTION_38	IF_4	CALL_8
0x4b55	          0x8d48ac	                   lea ecx, [rax - 0x54]	      2540	ops.c	FUNCTION_38	IF_4	CALL_8
0x4b58	      0xba4fecc44e	                     mov edx, 0x4ec4ec4f	      2540	ops.c	FUNCTION_38	IF_4	CALL_8
0x4b5d	            0x89c8	                            mov eax, ecx	      2540	ops.c	FUNCTION_38	IF_4	CALL_8
0x4b5f	            0xf7ea	                                imul edx	      2540	ops.c	FUNCTION_38	IF_4	CALL_8
0x4b61	          0xc1fa03	                              sar edx, 3	      2540	ops.c	FUNCTION_38	IF_4	CALL_8
0x4b64	            0x89c8	                            mov eax, ecx	      2540	ops.c	FUNCTION_38	IF_4	CALL_8
0x4b66	          0xc1f81f	                           sar eax, 0x1f	      2540	ops.c	FUNCTION_38	IF_4	CALL_8
0x4b69	            0x29c2	                            sub edx, eax	      2540	ops.c	FUNCTION_38	IF_4	CALL_8
0x4b6b	            0x89d0	                            mov eax, edx	      2540	ops.c	FUNCTION_38	IF_4	CALL_8
0x4b6d	          0x6bc01a	                     imul eax, eax, 0x1a	      2540	ops.c	FUNCTION_38	IF_4	CALL_8
0x4b70	            0x29c1	                            sub ecx, eax	      2540	ops.c	FUNCTION_38	IF_4	CALL_8
0x4b72	            0x89c8	                            mov eax, ecx	      2540	ops.c	FUNCTION_38	IF_4	CALL_8
0x4b74	          0x83c061	                           add eax, 0x61	      2540	ops.c	FUNCTION_38	IF_4	CALL_8
0x4b77	          0x8945e8	             mov dword [rbp - 0x18], eax	      2540	ops.c	FUNCTION_38	IF_4	CALL_8
0x4b7a	            0xeb66	                           jmp 0x4004c22	      2540	ops.c	FUNCTION_38	IF_4	CALL_8
0x4b7c	        0x837ddc0c	            cmp dword [rbp - 0x24], 0xc 	      2541	ops.c	FUNCTION_38	IF_4	ELSE_1	IF_6
0x4b80	            0x7460	                            je 0x4004c22	      2541	ops.c	FUNCTION_38	IF_4	ELSE_1	IF_6
0x4b82	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2542	ops.c	FUNCTION_38	IF_4	ELSE_1	IF_6
0x4b85	            0x89c7	                            mov edi, eax	      2542	ops.c	FUNCTION_38	IF_4	ELSE_1	IF_6
0x4b87	      0xe800000000	                          call 0x4004bcc	      2542	ops.c	FUNCTION_38	IF_4	ELSE_1	IF_6
0x4b8c	          0x8945e8	             mov dword [rbp - 0x18], eax	      2542	ops.c	FUNCTION_38	IF_4	ELSE_1	IF_6
0x4b8f	            0xeb51	                           jmp 0x4004c22	      2542	ops.c	FUNCTION_38	IF_4	ELSE_1	IF_6
0x4b91	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2544	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_10
0x4b94	            0x89c7	                            mov edi, eax	      2544	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_10
0x4b96	      0xe800000000	                          call 0x4004bdb	      2544	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_10
0x4b9b	            0x85c0	                           test eax, eax	      2544	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_10
0x4b9d	            0x7443	                            je 0x4004c22	      2544	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_10
0x4b9f	        0x837ddc0f	            cmp dword [rbp - 0x24], 0xf 	      2546	ops.c	FUNCTION_38	ELSE_2	IF_7	IF_8
0x4ba3	            0x752a	                           jne 0x4004c0f	      2546	ops.c	FUNCTION_38	ELSE_2	IF_7	IF_8
0x4ba5	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2547	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4ba8	          0x8d48cc	                   lea ecx, [rax - 0x34]	      2547	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4bab	      0xba4fecc44e	                     mov edx, 0x4ec4ec4f	      2547	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4bb0	            0x89c8	                            mov eax, ecx	      2547	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4bb2	            0xf7ea	                                imul edx	      2547	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4bb4	          0xc1fa03	                              sar edx, 3	      2547	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4bb7	            0x89c8	                            mov eax, ecx	      2547	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4bb9	          0xc1f81f	                           sar eax, 0x1f	      2547	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4bbc	            0x29c2	                            sub edx, eax	      2547	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4bbe	            0x89d0	                            mov eax, edx	      2547	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4bc0	          0x6bc01a	                     imul eax, eax, 0x1a	      2547	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4bc3	            0x29c1	                            sub ecx, eax	      2547	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4bc5	            0x89c8	                            mov eax, ecx	      2547	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4bc7	          0x83c041	                           add eax, 0x41	      2547	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4bca	          0x8945e8	             mov dword [rbp - 0x18], eax	      2547	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4bcd	            0xeb13	                           jmp 0x4004c22	      2547	ops.c	FUNCTION_38	ELSE_2	IF_7	CALL_11
0x4bcf	        0x837ddc0b	            cmp dword [rbp - 0x24], 0xb 	      2548	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x4bd3	            0x740d	                            je 0x4004c22	      2548	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x4bd5	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      2549	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x4bd8	            0x89c7	                            mov edi, eax	      2549	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x4bda	      0xe800000000	                          call 0x4004c1f	      2549	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x4bdf	          0x8945e8	             mov dword [rbp - 0x18], eax	      2549	ops.c	FUNCTION_38	ELSE_2	IF_7	ELSE_3	IF_9
0x4be2	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      2551	ops.c	FUNCTION_38	IF_10
0x4be5	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	      2551	ops.c	FUNCTION_38	IF_10
0x4be8	     0xf84c8000000	                            je 0x4004cf6	      2551	ops.c	FUNCTION_38	IF_10
0x4bee	    0x8b0500000000	            mov eax, dword [0x04004c34] 	      2554	ops.c	FUNCTION_38	IF_10	IF_11
0x4bf4	            0x85c0	                           test eax, eax	      2554	ops.c	FUNCTION_38	IF_10	IF_11
0x4bf6	     0xf8481000000	                            je 0x4004cbd	      2554	ops.c	FUNCTION_38	IF_10	IF_11
0x4bfc	        0x837dec7f	           cmp dword [rbp - 0x14], 0x7f 	      2554	ops.c	FUNCTION_38	IF_10	IF_11
0x4c00	            0x7f06	                            jg 0x4004c48	      2554	ops.c	FUNCTION_38	IF_10	IF_11
0x4c02	        0x837de87f	           cmp dword [rbp - 0x18], 0x7f 	      2554	ops.c	FUNCTION_38	IF_10	IF_11
0x4c06	            0x7e75	                           jle 0x4004cbd	      2554	ops.c	FUNCTION_38	IF_10	IF_11
0x4c08	    0x488b05000000	            mov rax, qword [0x04004c4f] 	      2556	ops.c	FUNCTION_38	IF_10	IF_11
0x4c0f	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      2556	ops.c	FUNCTION_38	IF_10	IF_11
0x4c13	        0x488b4038	            mov rax, qword [rax + 0x38] 	      2556	ops.c	FUNCTION_38	IF_10	IF_11
0x4c17	        0x488945f0	             mov qword [rbp - 0x10], rax	      2556	ops.c	FUNCTION_38	IF_10	IF_11
0x4c1b	        0x488955f8	                mov qword [rbp - 8], rdx	      2556	ops.c	FUNCTION_38	IF_10	IF_11
0x4c1f	    0x488b0d000000	            mov rcx, qword [0x04004c66] 	      2558	ops.c	FUNCTION_38	IF_10	IF_11
0x4c26	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2558	ops.c	FUNCTION_38	IF_10	IF_11
0x4c2a	        0x488b5008	                mov rdx, qword [rax + 8]	      2558	ops.c	FUNCTION_38	IF_10	IF_11
0x4c2e	          0x488b00	                    mov rax, qword [rax]	      2558	ops.c	FUNCTION_38	IF_10	IF_11
0x4c31	        0x48894138	             mov qword [rcx + 0x38], rax	      2558	ops.c	FUNCTION_38	IF_10	IF_11
0x4c35	        0x48895140	             mov qword [rcx + 0x40], rdx	      2558	ops.c	FUNCTION_38	IF_10	IF_11
0x4c39	      0xe800000000	                          call 0x4004c7e	      2560	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x4c3e	          0x4889c7	                            mov rdi, rax	      2560	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x4c41	      0xe800000000	                          call 0x4004c86	      2560	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x4c46	            0x4898	                                    cdqe	      2560	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x4c48	      0xba00000000	                              mov edx, 0	      2560	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x4c4d	      0xbe00000000	                              mov esi, 0	      2560	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x4c52	          0x4889c7	                            mov rdi, rax	      2560	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x4c55	      0xe800000000	                          call 0x4004c9a	      2560	ops.c	FUNCTION_38	IF_10	IF_11	CALL_15
0x4c5a	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      2561	ops.c	FUNCTION_38	IF_10	IF_11	CALL_16
0x4c5d	            0x89c7	                            mov edi, eax	      2561	ops.c	FUNCTION_38	IF_10	IF_11	CALL_16
0x4c5f	      0xe800000000	                          call 0x4004ca4	      2561	ops.c	FUNCTION_38	IF_10	IF_11	CALL_16
0x4c64	    0x488b0d000000	            mov rcx, qword [0x04004cab] 	      2562	ops.c	FUNCTION_38	IF_10	IF_11
0x4c6b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      2562	ops.c	FUNCTION_38	IF_10	IF_11
0x4c6f	        0x488b55f8	                mov rdx, qword [rbp - 8]	      2562	ops.c	FUNCTION_38	IF_10	IF_11
0x4c73	        0x48894138	             mov qword [rcx + 0x38], rax	      2562	ops.c	FUNCTION_38	IF_10	IF_11
0x4c77	        0x48895140	             mov qword [rcx + 0x40], rdx	      2562	ops.c	FUNCTION_38	IF_10	IF_11
0x4c7b	            0xeb32	                           jmp 0x4004cef	      2555	ops.c	FUNCTION_38	IF_10	IF_11
0x4c7d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2566	ops.c	FUNCTION_38	IF_10	CALL_17
0x4c81	          0x488b08	                    mov rcx, qword [rax]	      2566	ops.c	FUNCTION_38	IF_10	CALL_17
0x4c84	    0x488b05000000	            mov rax, qword [0x04004ccb] 	      2566	ops.c	FUNCTION_38	IF_10	CALL_17
0x4c8b	      0xba01000000	                              mov edx, 1	      2566	ops.c	FUNCTION_38	IF_10	CALL_17
0x4c90	          0x4889ce	                            mov rsi, rcx	      2566	ops.c	FUNCTION_38	IF_10	CALL_17
0x4c93	          0x4889c7	                            mov rdi, rax	      2566	ops.c	FUNCTION_38	IF_10	CALL_17
0x4c96	      0xe800000000	                          call 0x4004cdb	      2566	ops.c	FUNCTION_38	IF_10	CALL_17
0x4c9b	          0x4889c2	                            mov rdx, rax	      2566	ops.c	FUNCTION_38	IF_10	CALL_17
0x4c9e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      2566	ops.c	FUNCTION_38	IF_10	CALL_17
0x4ca2	          0x8b4008	                mov eax, dword [rax + 8]	      2566	ops.c	FUNCTION_38	IF_10	CALL_17
0x4ca5	            0x4898	                                    cdqe	      2566	ops.c	FUNCTION_38	IF_10	CALL_17
0x4ca7	          0x4801d0	                            add rax, rdx	      2566	ops.c	FUNCTION_38	IF_10	CALL_17
0x4caa	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      2566	ops.c	FUNCTION_38	IF_10	CALL_17
0x4cad	            0x8810	                      mov byte [rax], dl	      2566	ops.c	FUNCTION_38	IF_10	CALL_17
0x4caf	      0xb801000000	                              mov eax, 1	      2567	ops.c	FUNCTION_38	IF_10
0x4cb4	            0xeb05	                           jmp 0x4004cfb	      2567	ops.c	FUNCTION_38	IF_10
0x4cb6	      0xb800000000	                              mov eax, 0	      2569	ops.c	FUNCTION_38
0x4cbb	              0xc9	                                   leave	      2570	ops.c	FUNCTION_38
0x4cbc	              0xc3	                                     ret	      2570	ops.c	FUNCTION_38
op_format	CALL,5:FOR,0:SWITCH,0:functions,1:WHILE,0:DO,0:ELSE,0:IF,6	132
0x9a49	              0x55	                                push rbp	      4786	ops.c	FUNCTION_57
0x9a4a	          0x4889e5	                            mov rbp, rsp	      4786	ops.c	FUNCTION_57
0x9a4d	        0x4883ec20	                           sub rsp, 0x20	      4786	ops.c	FUNCTION_57
0x9a51	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4786	ops.c	FUNCTION_57
0x9a55	          0x8975e4	             mov dword [rbp - 0x1c], esi	      4786	ops.c	FUNCTION_57
0x9a58	    0x488b05000000	            mov rax, qword [0x04009a9f] 	      4787	ops.c	FUNCTION_57
0x9a5f	          0x488b00	                    mov rax, qword [rax]	      4787	ops.c	FUNCTION_57
0x9a62	        0x488945f8	                mov qword [rbp - 8], rax	      4787	ops.c	FUNCTION_57
0x9a66	    0x488b0d000000	            mov rcx, qword [0x04009aad] 	      4791	ops.c	FUNCTION_57
0x9a6d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4791	ops.c	FUNCTION_57
0x9a71	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      4791	ops.c	FUNCTION_57
0x9a75	        0x488b4040	            mov rax, qword [rax + 0x40] 	      4791	ops.c	FUNCTION_57
0x9a79	        0x48894138	             mov qword [rcx + 0x38], rax	      4791	ops.c	FUNCTION_57
0x9a7d	        0x48895140	             mov qword [rcx + 0x40], rdx	      4791	ops.c	FUNCTION_57
0x9a81	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4794	ops.c	FUNCTION_57	IF_1
0x9a85	        0x488b4030	            mov rax, qword [rax + 0x30] 	      4794	ops.c	FUNCTION_57	IF_1
0x9a89	        0x488d5001	                      lea rdx, [rax + 1]	      4794	ops.c	FUNCTION_57	IF_1
0x9a8d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4793	ops.c	FUNCTION_57	IF_1	CALL_1
0x9a91	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4793	ops.c	FUNCTION_57	IF_1	CALL_1
0x9a95	        0x4883e801	                              sub rax, 1	      4793	ops.c	FUNCTION_57	IF_1	CALL_1
0x9a99	          0x4889d6	                            mov rsi, rdx	      4793	ops.c	FUNCTION_57	IF_1	CALL_1
0x9a9c	          0x4889c7	                            mov rdi, rax	      4793	ops.c	FUNCTION_57	IF_1	CALL_1
0x9a9f	      0xe800000000	                          call 0x4009ae4	      4793	ops.c	FUNCTION_57	IF_1	CALL_1
0x9aa4	            0x85c0	                           test eax, eax	      4793	ops.c	FUNCTION_57	IF_1	CALL_1
0x9aa6	     0xf84b7010000	                            je 0x4009ca3	      4793	ops.c	FUNCTION_57	IF_1	CALL_1
0x9aac	    0x488b0d000000	            mov rcx, qword [0x04009af3] 	      4796	ops.c	FUNCTION_57
0x9ab3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4796	ops.c	FUNCTION_57
0x9ab7	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      4796	ops.c	FUNCTION_57
0x9abb	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4796	ops.c	FUNCTION_57
0x9abf	        0x48894138	             mov qword [rcx + 0x38], rax	      4796	ops.c	FUNCTION_57
0x9ac3	        0x48895140	             mov qword [rcx + 0x40], rdx	      4796	ops.c	FUNCTION_57
0x9ac7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4798	ops.c	FUNCTION_57	IF_2
0x9acb	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      4798	ops.c	FUNCTION_57	IF_2
0x9ace	            0x85c0	                           test eax, eax	      4798	ops.c	FUNCTION_57	IF_2
0x9ad0	            0x740a	                            je 0x4009b1c	      4798	ops.c	FUNCTION_57	IF_2
0x9ad2	      0xbf14000000	                           mov edi, 0x14	      4800	ops.c	FUNCTION_57	CALL_2
0x9ad7	      0xe800000000	                          call 0x4009b1c	      4800	ops.c	FUNCTION_57	CALL_2
0x9adc	    0x488b0d000000	            mov rcx, qword [0x04009b23] 	      4803	ops.c	FUNCTION_57
0x9ae3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4803	ops.c	FUNCTION_57
0x9ae7	        0x488b5028	            mov rdx, qword [rax + 0x28] 	      4803	ops.c	FUNCTION_57
0x9aeb	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4803	ops.c	FUNCTION_57
0x9aef	    0x488981d01100	          mov qword [rcx + 0x11d0], rax 	      4803	ops.c	FUNCTION_57
0x9af6	    0x488991d81100	          mov qword [rcx + 0x11d8], rdx 	      4803	ops.c	FUNCTION_57
0x9afd	        0x837de400	               cmp dword [rbp - 0x1c], 0	      4807	ops.c	FUNCTION_57	IF_3
0x9b01	            0x741a	                            je 0x4009b5d	      4807	ops.c	FUNCTION_57	IF_3
0x9b03	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4808	ops.c	FUNCTION_57	IF_3
0x9b07	        0x488b5048	            mov rdx, qword [rax + 0x48] 	      4808	ops.c	FUNCTION_57	IF_3
0x9b0b	        0x488b4040	            mov rax, qword [rax + 0x40] 	      4808	ops.c	FUNCTION_57	IF_3
0x9b0f	    0x488905000000	            mov qword [0x04009b56], rax 	      4808	ops.c	FUNCTION_57	IF_3
0x9b16	    0x488915000000	            mov qword [0x04009b5d], rdx 	      4808	ops.c	FUNCTION_57	IF_3
0x9b1d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4810	ops.c	FUNCTION_57	CALL_3
0x9b21	        0x488b4050	            mov rax, qword [rax + 0x50] 	      4810	ops.c	FUNCTION_57	CALL_3
0x9b25	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	      4810	ops.c	FUNCTION_57	CALL_3
0x9b28	            0x89d6	                            mov esi, edx	      4810	ops.c	FUNCTION_57	CALL_3
0x9b2a	          0x4889c7	                            mov rdi, rax	      4810	ops.c	FUNCTION_57	CALL_3
0x9b2d	      0xe800000000	                          call 0x4009b72	      4810	ops.c	FUNCTION_57	CALL_3
0x9b32	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4817	ops.c	FUNCTION_57	IF_4
0x9b36	          0x8b4018	            mov eax, dword [rax + 0x18] 	      4817	ops.c	FUNCTION_57	IF_4
0x9b39	            0x85c0	                           test eax, eax	      4817	ops.c	FUNCTION_57	IF_4
0x9b3b	            0x742d	                            je 0x4009baa	      4817	ops.c	FUNCTION_57	IF_4
0x9b3d	    0x488b05000000	            mov rax, qword [0x04009b84] 	      4817	ops.c	FUNCTION_57	IF_4
0x9b44	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4817	ops.c	FUNCTION_57	IF_4
0x9b48	    0x488b05000000	            mov rax, qword [0x04009b8f] 	      4817	ops.c	FUNCTION_57	IF_4
0x9b4f	          0x488b00	                    mov rax, qword [rax]	      4817	ops.c	FUNCTION_57	IF_4
0x9b52	          0x4839c2	                            cmp rdx, rax	      4817	ops.c	FUNCTION_57	IF_4
0x9b55	            0x7d13	                           jge 0x4009baa	      4817	ops.c	FUNCTION_57	IF_4
0x9b57	    0x488b05000000	            mov rax, qword [0x04009b9e] 	      4818	ops.c	FUNCTION_57	IF_4
0x9b5e	        0x488b5038	            mov rdx, qword [rax + 0x38] 	      4818	ops.c	FUNCTION_57	IF_4
0x9b62	        0x4883c201	                              add rdx, 1	      4818	ops.c	FUNCTION_57	IF_4
0x9b66	        0x48895038	             mov qword [rax + 0x38], rdx	      4818	ops.c	FUNCTION_57	IF_4
0x9b6a	      0xbf05000000	                              mov edi, 5	      4819	ops.c	FUNCTION_57	CALL_4
0x9b6f	      0xe800000000	                          call 0x4009bb4	      4819	ops.c	FUNCTION_57	CALL_4
0x9b74	    0x488b05000000	            mov rax, qword [0x04009bbb] 	      4820	ops.c	FUNCTION_57
0x9b7b	          0x488b00	                    mov rax, qword [rax]	      4820	ops.c	FUNCTION_57
0x9b7e	        0x482b45f8	                sub rax, qword [rbp - 8]	      4820	ops.c	FUNCTION_57
0x9b82	        0x488945f8	                mov qword [rbp - 8], rax	      4820	ops.c	FUNCTION_57
0x9b86	        0x488b45f8	                mov rax, qword [rbp - 8]	      4821	ops.c	FUNCTION_57	CALL_5
0x9b8a	          0x4889c7	                            mov rdi, rax	      4821	ops.c	FUNCTION_57	CALL_5
0x9b8d	      0xe800000000	                          call 0x4009bd2	      4821	ops.c	FUNCTION_57	CALL_5
0x9b92	    0x488b0d000000	            mov rcx, qword [0x04009bd9] 	      4824	ops.c	FUNCTION_57
0x9b99	    0x488b05000000	            mov rax, qword [0x04009be0] 	      4824	ops.c	FUNCTION_57
0x9ba0	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      4824	ops.c	FUNCTION_57
0x9ba4	        0x488b4038	            mov rax, qword [rax + 0x38] 	      4824	ops.c	FUNCTION_57
0x9ba8	    0x488981f01100	          mov qword [rcx + 0x11f0], rax 	      4824	ops.c	FUNCTION_57
0x9baf	    0x488991f81100	          mov qword [rcx + 0x11f8], rdx 	      4824	ops.c	FUNCTION_57
0x9bb6	        0x837de400	               cmp dword [rbp - 0x1c], 0	      4826	ops.c	FUNCTION_57	IF_5
0x9bba	            0x7428	                            je 0x4009c24	      4826	ops.c	FUNCTION_57	IF_5
0x9bbc	    0x488b0d000000	            mov rcx, qword [0x04009c03] 	      4828	ops.c	FUNCTION_57	IF_5
0x9bc3	    0x488b05000000	            mov rax, qword [0x04009c0a] 	      4828	ops.c	FUNCTION_57	IF_5
0x9bca	    0x488b15000000	            mov rdx, qword [0x04009c11] 	      4828	ops.c	FUNCTION_57	IF_5
0x9bd1	        0x48894138	             mov qword [rcx + 0x38], rax	      4828	ops.c	FUNCTION_57	IF_5
0x9bd5	        0x48895140	             mov qword [rcx + 0x40], rdx	      4828	ops.c	FUNCTION_57	IF_5
0x9bd9	    0x48c705000000	               mov qword [0x04009c24], 0	      4829	ops.c	FUNCTION_57	IF_5
0x9be4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4832	ops.c	FUNCTION_57	IF_6
0x9be8	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      4832	ops.c	FUNCTION_57	IF_6
0x9beb	            0x85c0	                           test eax, eax	      4832	ops.c	FUNCTION_57	IF_6
0x9bed	            0x7475	                            je 0x4009ca4	      4832	ops.c	FUNCTION_57	IF_6
0x9bef	    0x488b05000000	            mov rax, qword [0x04009c36] 	      4836	ops.c	FUNCTION_57	IF_6
0x9bf6	        0x488945f0	             mov qword [rbp - 0x10], rax	      4836	ops.c	FUNCTION_57	IF_6
0x9bfa	            0xeb5e	                           jmp 0x4009c9a	      4836	ops.c	FUNCTION_57	IF_6
0x9bfc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4838	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1
0x9c00	        0x488b4058	            mov rax, qword [rax + 0x58] 	      4838	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1
0x9c04	          0x4885c0	                           test rax, rax	      4838	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1
0x9c07	            0x7445	                            je 0x4009c8e	      4838	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1
0x9c09	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4842	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x9c0d	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      4842	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x9c11	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4842	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x9c15	        0x488b4068	            mov rax, qword [rax + 0x68] 	      4842	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x9c19	          0x4839c2	                            cmp rdx, rax	      4842	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x9c1c	            0x7e19	                           jle 0x4009c77	      4842	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x9c1e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4843	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x9c22	        0x488b5058	            mov rdx, qword [rax + 0x58] 	      4843	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x9c26	        0x488b45f8	                mov rax, qword [rbp - 8]	      4843	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x9c2a	          0x4801c2	                            add rdx, rax	      4843	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x9c2d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4843	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x9c31	        0x48895058	             mov qword [rax + 0x58], rdx	      4843	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x9c35	            0xeb17	                           jmp 0x4009c8e	      4843	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	IF_2
0x9c37	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4845	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	ELSE_1
0x9c3b	        0x488b5068	            mov rdx, qword [rax + 0x68] 	      4845	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	ELSE_1
0x9c3f	        0x488b45f8	                mov rax, qword [rbp - 8]	      4845	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	ELSE_1
0x9c43	          0x4801c2	                            add rdx, rax	      4845	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	ELSE_1
0x9c46	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4845	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	ELSE_1
0x9c4a	        0x48895068	             mov qword [rax + 0x68], rdx	      4845	ops.c	FUNCTION_57	IF_6	FUNCTION_1	IF_1	ELSE_1
0x9c4e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4836	ops.c	FUNCTION_57	IF_6
0x9c52	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4836	ops.c	FUNCTION_57	IF_6
0x9c56	        0x488945f0	             mov qword [rbp - 0x10], rax	      4836	ops.c	FUNCTION_57	IF_6
0x9c5a	      0x48837df000	               cmp qword [rbp - 0x10], 0	      4836	ops.c	FUNCTION_57	IF_6
0x9c5f	            0x759b	                           jne 0x4009c3c	      4836	ops.c	FUNCTION_57	IF_6
0x9c61	            0xeb01	                           jmp 0x4009ca4	      4836	ops.c	FUNCTION_57	IF_6
0x9c63	              0x90	                                     nop	      4795	ops.c	FUNCTION_57	IF_1
0x9c64	              0xc9	                                   leave	      4849	ops.c	FUNCTION_57	ELSE_1
0x9c65	              0xc3	                                     ret	      4849	ops.c	FUNCTION_57	ELSE_1
get_reg_type	CALL,3:FOR,0:SWITCH,1:functions,0:WHILE,0:DO,0:ELSE,0:IF,3	51
0xd944	              0x55	                                push rbp	      6717	ops.c	FUNCTION_80
0xd945	          0x4889e5	                            mov rbp, rsp	      6717	ops.c	FUNCTION_80
0xd948	        0x4883ec10	                           sub rsp, 0x10	      6717	ops.c	FUNCTION_80
0xd94c	          0x897dfc	                mov dword [rbp - 4], edi	      6717	ops.c	FUNCTION_80
0xd94f	        0x488975f0	             mov qword [rbp - 0x10], rsi	      6717	ops.c	FUNCTION_80
0xd953	        0x837dfc5f	               cmp dword [rbp - 4], 0x5f	      6718	ops.c	FUNCTION_80	SWITCH_1
0xd957	            0x7717	                            ja 0x400d9b0	      6718	ops.c	FUNCTION_80	SWITCH_1
0xd959	          0x8b45fc	                mov eax, dword [rbp - 4]	      6718	ops.c	FUNCTION_80	SWITCH_1
0xd95c	    0x488b04c50000	                  mov rax, qword [rax*8]	      6718	ops.c	FUNCTION_80	SWITCH_1
0xd964	            0xffe0	                                 jmp rax	      6718	ops.c	FUNCTION_80	SWITCH_1
0xd966	      0xb800000000	                              mov eax, 0	      6733	ops.c	FUNCTION_80	SWITCH_1
0xd96b	      0xe987000000	                           jmp 0x400da37	      6733	ops.c	FUNCTION_80	SWITCH_1
0xd970	          0x8b45fc	                mov eax, dword [rbp - 4]	      6737	ops.c	FUNCTION_80	CALL_1
0xd973	            0x89c7	                            mov edi, eax	      6737	ops.c	FUNCTION_80	CALL_1
0xd975	      0xe800000000	                          call 0x400d9ba	      6737	ops.c	FUNCTION_80	CALL_1
0xd97a	          0x8945fc	                mov dword [rbp - 4], eax	      6737	ops.c	FUNCTION_80	CALL_1
0xd97d	        0x837dfc00	                  cmp dword [rbp - 4], 0	      6740	ops.c	FUNCTION_80	IF_1	CALL_2
0xd981	            0x741a	                            je 0x400d9dd	      6740	ops.c	FUNCTION_80	IF_1	CALL_2
0xd983	          0x8b45fc	                mov eax, dword [rbp - 4]	      6740	ops.c	FUNCTION_80	IF_1	CALL_2
0xd986	      0xbe00000000	                              mov esi, 0	      6740	ops.c	FUNCTION_80	IF_1	CALL_2
0xd98b	            0x89c7	                            mov edi, eax	      6740	ops.c	FUNCTION_80	IF_1	CALL_2
0xd98d	      0xe800000000	                          call 0x400d9d2	      6740	ops.c	FUNCTION_80	IF_1	CALL_2
0xd992	            0x85c0	                           test eax, eax	      6740	ops.c	FUNCTION_80	IF_1	CALL_2
0xd994	            0x7507	                           jne 0x400d9dd	      6740	ops.c	FUNCTION_80	IF_1	CALL_2
0xd996	      0xb8ffffffff	                     mov eax, 0xffffffff	      6741	ops.c	FUNCTION_80	IF_1
0xd99b	            0xeb5a	                           jmp 0x400da37	      6741	ops.c	FUNCTION_80	IF_1
0xd99d	          0x8b45fc	                mov eax, dword [rbp - 4]	      6743	ops.c	FUNCTION_80	CALL_3
0xd9a0	      0xbe00000000	                              mov esi, 0	      6743	ops.c	FUNCTION_80	CALL_3
0xd9a5	            0x89c7	                            mov edi, eax	      6743	ops.c	FUNCTION_80	CALL_3
0xd9a7	      0xe800000000	                          call 0x400d9ec	      6743	ops.c	FUNCTION_80	CALL_3
0xd9ac	    0x488b05000000	            mov rax, qword [0x0400d9f3] 	      6745	ops.c	FUNCTION_80	IF_2
0xd9b3	          0x488b00	                    mov rax, qword [rax]	      6745	ops.c	FUNCTION_80	IF_2
0xd9b6	          0x4885c0	                           test rax, rax	      6745	ops.c	FUNCTION_80	IF_2
0xd9b9	            0x7437	                            je 0x400da32	      6745	ops.c	FUNCTION_80	IF_2
0xd9bb	      0x48837df000	               cmp qword [rbp - 0x10], 0	      6747	ops.c	FUNCTION_80	IF_2	IF_3
0xd9c0	            0x7423	                            je 0x400da25	      6747	ops.c	FUNCTION_80	IF_2	IF_3
0xd9c2	    0x488b05000000	            mov rax, qword [0x0400da09] 	      6747	ops.c	FUNCTION_80	IF_2	IF_3
0xd9c9	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6747	ops.c	FUNCTION_80	IF_2	IF_3
0xd9cd	            0x3c02	                               cmp al, 2	      6747	ops.c	FUNCTION_80	IF_2	IF_3
0xd9cf	            0x7514	                           jne 0x400da25	      6747	ops.c	FUNCTION_80	IF_2	IF_3
0xd9d1	    0x488b05000000	            mov rax, qword [0x0400da18] 	      6748	ops.c	FUNCTION_80	IF_2	IF_3
0xd9d8	          0x8b4014	            mov eax, dword [rax + 0x14] 	      6748	ops.c	FUNCTION_80	IF_2	IF_3
0xd9db	          0x4863d0	                         movsxd rdx, eax	      6748	ops.c	FUNCTION_80	IF_2	IF_3
0xd9de	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6748	ops.c	FUNCTION_80	IF_2	IF_3
0xd9e2	          0x488910	                    mov qword [rax], rdx	      6748	ops.c	FUNCTION_80	IF_2	IF_3
0xd9e5	    0x488b05000000	            mov rax, qword [0x0400da2c] 	      6749	ops.c	FUNCTION_80	IF_2
0xd9ec	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6749	ops.c	FUNCTION_80	IF_2
0xd9f0	            0xeb05	                           jmp 0x400da37	      6749	ops.c	FUNCTION_80	IF_2
0xd9f2	      0xb8ffffffff	                     mov eax, 0xffffffff	      6751	ops.c	FUNCTION_80
0xd9f7	              0xc9	                                   leave	      6752	ops.c	FUNCTION_80
0xd9f8	              0xc3	                                     ret	      6752	ops.c	FUNCTION_80
may_get_selection	CALL,2:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,3:IF,4	26
0x15b3	              0x55	                                push rbp	       952	ops.c	FUNCTION_16
0x15b4	          0x4889e5	                            mov rbp, rsp	       952	ops.c	FUNCTION_16
0x15b7	        0x4883ec10	                           sub rsp, 0x10	       952	ops.c	FUNCTION_16
0x15bb	          0x897dfc	                mov dword [rbp - 4], edi	       952	ops.c	FUNCTION_16
0x15be	        0x837dfc2a	               cmp dword [rbp - 4], 0x2a	       953	ops.c	FUNCTION_16	IF_1
0x15c2	            0x751f	                           jne 0x4001623	       953	ops.c	FUNCTION_16	IF_1
0x15c4	    0x8b0500000000	            mov eax, dword [0x0400160a] 	       955	ops.c	FUNCTION_16	IF_1	IF_2
0x15ca	            0x85c0	                           test eax, eax	       955	ops.c	FUNCTION_16	IF_1	IF_2
0x15cc	            0x7509	                           jne 0x4001617	       955	ops.c	FUNCTION_16	IF_1	IF_2
0x15ce	    0xc745fc000000	                  mov dword [rbp - 4], 0	       956	ops.c	FUNCTION_16	IF_1	IF_2
0x15d5	            0xeb2f	                           jmp 0x4001646	       956	ops.c	FUNCTION_16	IF_1	IF_2
0x15d7	      0xbf00000000	                              mov edi, 0	       958	ops.c	FUNCTION_16	IF_1	CALL_1
0x15dc	      0xe800000000	                          call 0x4001621	       958	ops.c	FUNCTION_16	IF_1	CALL_1
0x15e1	            0xeb23	                           jmp 0x4001646	       958	ops.c	FUNCTION_16	IF_1	CALL_1
0x15e3	        0x837dfc2b	               cmp dword [rbp - 4], 0x2b	       960	ops.c	FUNCTION_16	ELSE_2	IF_3
0x15e7	            0x751d	                           jne 0x4001646	       960	ops.c	FUNCTION_16	ELSE_2	IF_3
0x15e9	    0x8b0500000000	            mov eax, dword [0x0400162f] 	       962	ops.c	FUNCTION_16	ELSE_2	IF_3	IF_4
0x15ef	            0x85c0	                           test eax, eax	       962	ops.c	FUNCTION_16	ELSE_2	IF_3	IF_4
0x15f1	            0x7509	                           jne 0x400163c	       962	ops.c	FUNCTION_16	ELSE_2	IF_3	IF_4
0x15f3	    0xc745fc000000	                  mov dword [rbp - 4], 0	       963	ops.c	FUNCTION_16	ELSE_2	IF_3	IF_4
0x15fa	            0xeb0a	                           jmp 0x4001646	       963	ops.c	FUNCTION_16	ELSE_2	IF_3	IF_4
0x15fc	      0xbf00000000	                              mov edi, 0	       965	ops.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0x1601	      0xe800000000	                          call 0x4001646	       965	ops.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0x1606	          0x8b45fc	                mov eax, dword [rbp - 4]	       967	ops.c	FUNCTION_16
0x1609	              0xc9	                                   leave	       968	ops.c	FUNCTION_16
0x160a	              0xc3	                                     ret	       968	ops.c	FUNCTION_16
shift_block	CALL,24:FOR,1:SWITCH,0:functions,0:WHILE,2:DO,0:ELSE,4:IF,13	414
0x562	              0x55	                                push rbp	       381	ops.c	FUNCTION_7
0x563	          0x4889e5	                            mov rbp, rsp	       381	ops.c	FUNCTION_7
0x566	              0x53	                                push rbx	       381	ops.c	FUNCTION_7
0x567	    0x4881ece80000	                           sub rsp, 0xe8	       381	ops.c	FUNCTION_7
0x56e	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	       381	ops.c	FUNCTION_7
0x575	    0x89b514ffffff	             mov dword [rbp - 0xec], esi	       381	ops.c	FUNCTION_7
0x57b	    0x64488b042528	                mov rax, qword fs:[0x28]	       381	ops.c	FUNCTION_7
0x584	        0x488945e8	             mov qword [rbp - 0x18], rax	       381	ops.c	FUNCTION_7
0x588	            0x31c0	                            xor eax, eax	       381	ops.c	FUNCTION_7
0x58a	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       382	ops.c	FUNCTION_7
0x591	            0x8b00	                    mov eax, dword [rax]	       382	ops.c	FUNCTION_7
0x593	          0x83f804	                              cmp eax, 4	       382	ops.c	FUNCTION_7
0x596	           0xf94c0	                                 sete al	       382	ops.c	FUNCTION_7
0x599	           0xfb6c0	                           movzx eax, al	       382	ops.c	FUNCTION_7
0x59c	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	       382	ops.c	FUNCTION_7
0x5a2	    0x8b0500000000	            mov eax, dword [0x040005e8] 	       383	ops.c	FUNCTION_7
0x5a8	    0x898540ffffff	             mov dword [rbp - 0xc0], eax	       383	ops.c	FUNCTION_7
0x5ae	    0x488b05000000	            mov rax, qword [0x040005f5] 	       386	ops.c	FUNCTION_7
0x5b5	          0x8b4040	            mov eax, dword [rax + 0x40] 	       386	ops.c	FUNCTION_7
0x5b8	    0x898544ffffff	             mov dword [rbp - 0xbc], eax	       386	ops.c	FUNCTION_7
0x5be	    0x488b05000000	            mov rax, qword [0x04000605] 	       387	ops.c	FUNCTION_7	CALL_1
0x5c5	          0x4889c7	                            mov rdi, rax	       387	ops.c	FUNCTION_7	CALL_1
0x5c8	      0xe800000000	                          call 0x400060d	       387	ops.c	FUNCTION_7	CALL_1
0x5cd	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	       387	ops.c	FUNCTION_7	CALL_1
0x5d3	    0x488b05000000	            mov rax, qword [0x0400061a] 	       388	ops.c	FUNCTION_7
0x5da	    0x488b80901500	          mov rax, qword [rax + 0x1590] 	       388	ops.c	FUNCTION_7
0x5e1	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	       388	ops.c	FUNCTION_7
0x5e7	    0xc7852cffffff	               mov dword [rbp - 0xd4], 0	       392	ops.c	FUNCTION_7
0x5f1	    0xc78530ffffff	               mov dword [rbp - 0xd0], 0	       392	ops.c	FUNCTION_7
0x5fb	    0x8b0500000000	            mov eax, dword [0x04000641] 	       395	ops.c	FUNCTION_7
0x601	    0x898550ffffff	             mov dword [rbp - 0xb0], eax	       395	ops.c	FUNCTION_7
0x607	    0xc70500000000	               mov dword [0x04000651], 0	       397	ops.c	FUNCTION_7
0x611	    0xc70500000000	           mov dword [0x0400065b], 0x10 	       400	ops.c	FUNCTION_7
0x61b	    0x488b05000000	            mov rax, qword [0x04000662] 	       401	ops.c	FUNCTION_7	CALL_2
0x622	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       401	ops.c	FUNCTION_7	CALL_2
0x626	        0x488d75a0	                   lea rsi, [rbp - 0x60]	       401	ops.c	FUNCTION_7	CALL_2
0x62a	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       401	ops.c	FUNCTION_7	CALL_2
0x631	      0xb901000000	                              mov ecx, 1	       401	ops.c	FUNCTION_7	CALL_2
0x636	          0x4889c7	                            mov rdi, rax	       401	ops.c	FUNCTION_7	CALL_2
0x639	      0xe89ba00000	                     call sym.block_prep	       401	ops.c	FUNCTION_7	CALL_2
0x63e	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       402	ops.c	FUNCTION_7	IF_1
0x641	            0x85c0	                           test eax, eax	       402	ops.c	FUNCTION_7	IF_1
0x643	     0xf85de050000	                           jne 0x4000c67	       402	ops.c	FUNCTION_7	IF_1
0x649	    0x8b9514ffffff	             mov edx, dword [rbp - 0xec]	       406	ops.c	FUNCTION_7
0x64f	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	       406	ops.c	FUNCTION_7
0x655	           0xfafc2	                           imul eax, edx	       406	ops.c	FUNCTION_7
0x658	    0x898524ffffff	             mov dword [rbp - 0xdc], eax	       406	ops.c	FUNCTION_7
0x65e	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	       407	ops.c	FUNCTION_7	IF_2
0x664	              0x99	                                     cdq	       407	ops.c	FUNCTION_7	IF_2
0x665	    0xf7bd48ffffff	                 idiv dword [rbp - 0xb8]	       407	ops.c	FUNCTION_7	IF_2
0x66b	    0x3b8514ffffff	             cmp eax, dword [rbp - 0xec]	       407	ops.c	FUNCTION_7	IF_2
0x671	     0xf85b3050000	                           jne 0x4000c6a	       407	ops.c	FUNCTION_7	IF_2
0x677	      0xe800000000	                          call 0x40006bc	       410	ops.c	FUNCTION_7	CALL_3
0x67c	        0x48894580	             mov qword [rbp - 0x80], rax	       410	ops.c	FUNCTION_7	CALL_3
0x680	    0x83bd3cffffff	               cmp dword [rbp - 0xc4], 0	       412	ops.c	FUNCTION_7	IF_3
0x687	     0xf8585020000	                           jne 0x4000952	       412	ops.c	FUNCTION_7	IF_3
0x68d	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       420	ops.c	FUNCTION_7	IF_3
0x690	     0x18524ffffff	             add dword [rbp - 0xdc], eax	       420	ops.c	FUNCTION_7	IF_3
0x696	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       421	ops.c	FUNCTION_7	IF_3
0x699	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       421	ops.c	FUNCTION_7	IF_3
0x69c	            0x29c2	                            sub edx, eax	       421	ops.c	FUNCTION_7	IF_3
0x69e	            0x89d0	                            mov eax, edx	       421	ops.c	FUNCTION_7	IF_3
0x6a0	    0x898528ffffff	             mov dword [rbp - 0xd8], eax	       421	ops.c	FUNCTION_7	IF_3
0x6a6	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       422	ops.c	FUNCTION_7	IF_3	IF_4
0x6a9	            0x85c0	                           test eax, eax	       422	ops.c	FUNCTION_7	IF_3	IF_4
0x6ab	     0xf8488000000	                            je 0x4000779	       422	ops.c	FUNCTION_7	IF_3	IF_4
0x6b1	    0x8b0500000000	            mov eax, dword [0x040006f7] 	       425	ops.c	FUNCTION_7	IF_3	IF_4	IF_5
0x6b7	            0x85c0	                           test eax, eax	       425	ops.c	FUNCTION_7	IF_3	IF_4	IF_5
0x6b9	            0x7436	                            je 0x4000731	       425	ops.c	FUNCTION_7	IF_3	IF_4	IF_5
0x6bb	    0x488b05000000	            mov rax, qword [0x04000702] 	       427	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	IF_6
0x6c2	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       427	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	IF_6
0x6c6	          0x4889d7	                            mov rdi, rdx	       427	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	IF_6
0x6c9	            0xffd0	                                call rax	       427	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	IF_6
0x6cb	          0x83f801	                              cmp eax, 1	       427	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	IF_6
0x6ce	            0x750e	                           jne 0x400071e	       427	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	IF_6
0x6d0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       428	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	IF_6
0x6d4	        0x4883c001	                              add rax, 1	       428	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	IF_6
0x6d8	        0x488945b0	             mov qword [rbp - 0x50], rax	       428	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	IF_6
0x6dc	            0xeb5b	                           jmp 0x4000779	       428	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	IF_6
0x6de	    0xc78528ffffff	               mov dword [rbp - 0xd8], 0	       431	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	ELSE_1
0x6e8	    0xc745a0000000	               mov dword [rbp - 0x60], 0	       432	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	ELSE_1
0x6ef	            0xeb48	                           jmp 0x4000779	       432	ops.c	FUNCTION_7	IF_3	IF_4	IF_5	ELSE_1
0x6f1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       437	ops.c	FUNCTION_7	IF_3	IF_4	ELSE_2
0x6f5	        0x4883c001	                              add rax, 1	       437	ops.c	FUNCTION_7	IF_3	IF_4	ELSE_2
0x6f9	        0x488945b0	             mov qword [rbp - 0x50], rax	       437	ops.c	FUNCTION_7	IF_3	IF_4	ELSE_2
0x6fd	            0xeb3a	                           jmp 0x4000779	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x6ff	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       443	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1
0x702	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       442	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_5
0x706	        0x488d4da0	                   lea rcx, [rbp - 0x60]	       442	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_5
0x70a	        0x4883c110	                           add rcx, 0x10	       442	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_5
0x70e	          0x4889ce	                            mov rsi, rcx	       442	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_5
0x711	          0x4889c7	                            mov rdi, rax	       442	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_5
0x714	      0xe800000000	                          call 0x4000759	       442	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_5
0x719	    0x898554ffffff	             mov dword [rbp - 0xac], eax	       442	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_5
0x71f	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       444	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1
0x725	     0x18524ffffff	             add dword [rbp - 0xdc], eax	       444	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1
0x72b	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       445	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1
0x72e	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       445	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1
0x734	             0x1d0	                            add eax, edx	       445	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1
0x736	          0x8945bc	             mov dword [rbp - 0x44], eax	       445	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1
0x739	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x73d	           0xfb600	                   movzx eax, byte [rax]	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x740	            0x3c20	                            cmp al, 0x20	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x742	            0x74bb	                            je 0x400073f	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x744	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x748	           0xfb600	                   movzx eax, byte [rax]	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x74b	            0x3c09	                               cmp al, 9	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x74d	            0x74b0	                            je 0x400073f	       439	ops.c	FUNCTION_7	IF_3	ELSE_2	FOR_1	CALL_4
0x74f	    0x488b05000000	            mov rax, qword [0x04000796] 	       449	ops.c	FUNCTION_7	IF_3	IF_7
0x756	    0x8b8060140000	          mov eax, dword [rax + 0x1460] 	       449	ops.c	FUNCTION_7	IF_3	IF_7
0x75c	            0x85c0	                           test eax, eax	       449	ops.c	FUNCTION_7	IF_3	IF_7
0x75e	            0x7522	                           jne 0x40007c2	       449	ops.c	FUNCTION_7	IF_3	IF_7
0x760	    0x8b8528ffffff	             mov eax, dword [rbp - 0xd8]	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x766	              0x99	                                     cdq	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x767	    0xf7bd4cffffff	                 idiv dword [rbp - 0xb4]	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x76d	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x773	             0x1d0	                            add eax, edx	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x775	              0x99	                                     cdq	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x776	    0xf7bd4cffffff	                 idiv dword [rbp - 0xb4]	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x77c	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	       450	ops.c	FUNCTION_7	IF_3	IF_7
0x782	    0x83bd2cffffff	               cmp dword [rbp - 0xd4], 0	       451	ops.c	FUNCTION_7	IF_3	IF_8
0x789	            0x7424	                            je 0x40007ef	       451	ops.c	FUNCTION_7	IF_3	IF_8
0x78b	    0x8b8528ffffff	             mov eax, dword [rbp - 0xd8]	       452	ops.c	FUNCTION_7	IF_3	IF_8
0x791	              0x99	                                     cdq	       452	ops.c	FUNCTION_7	IF_3	IF_8
0x792	    0xf7bd4cffffff	                 idiv dword [rbp - 0xb4]	       452	ops.c	FUNCTION_7	IF_3	IF_8
0x798	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	       452	ops.c	FUNCTION_7	IF_3	IF_8
0x79e	             0x1d0	                            add eax, edx	       452	ops.c	FUNCTION_7	IF_3	IF_8
0x7a0	              0x99	                                     cdq	       452	ops.c	FUNCTION_7	IF_3	IF_8
0x7a1	    0xf7bd4cffffff	                 idiv dword [rbp - 0xb4]	       452	ops.c	FUNCTION_7	IF_3	IF_8
0x7a7	    0x899530ffffff	             mov dword [rbp - 0xd0], edx	       452	ops.c	FUNCTION_7	IF_3	IF_8
0x7ad	            0xeb0c	                           jmp 0x40007fb	       452	ops.c	FUNCTION_7	IF_3	IF_8
0x7af	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	       454	ops.c	FUNCTION_7	IF_3	ELSE_3
0x7b5	    0x898530ffffff	             mov dword [rbp - 0xd0], eax	       454	ops.c	FUNCTION_7	IF_3	ELSE_3
0x7bb	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       456	ops.c	FUNCTION_7	IF_3
0x7be	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	       456	ops.c	FUNCTION_7	IF_3
0x7c1	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       456	ops.c	FUNCTION_7	IF_3
0x7c4	            0x85c0	                           test eax, eax	       456	ops.c	FUNCTION_7	IF_3
0x7c6	           0xf95c0	                                setne al	       456	ops.c	FUNCTION_7	IF_3
0x7c9	           0xfb6c0	                           movzx eax, al	       456	ops.c	FUNCTION_7	IF_3
0x7cc	            0x29c1	                            sub ecx, eax	       456	ops.c	FUNCTION_7	IF_3
0x7ce	            0x89c8	                            mov eax, ecx	       456	ops.c	FUNCTION_7	IF_3
0x7d0	            0x29c2	                            sub edx, eax	       456	ops.c	FUNCTION_7	IF_3
0x7d2	            0x89d0	                            mov eax, edx	       456	ops.c	FUNCTION_7	IF_3
0x7d4	          0x8945b8	             mov dword [rbp - 0x48], eax	       456	ops.c	FUNCTION_7	IF_3
0x7d7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       457	ops.c	FUNCTION_7	IF_3	CALL_6
0x7db	          0x4889c7	                            mov rdi, rax	       457	ops.c	FUNCTION_7	IF_3	CALL_6
0x7de	      0xe800000000	                          call 0x4000823	       457	ops.c	FUNCTION_7	IF_3	CALL_6
0x7e3	          0x83c001	                              add eax, 1	       457	ops.c	FUNCTION_7	IF_3	CALL_6
0x7e6	    0x898558ffffff	             mov dword [rbp - 0xa8], eax	       457	ops.c	FUNCTION_7	IF_3	CALL_6
0x7ec	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x7ef	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x7f5	             0x1c2	                            add edx, eax	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x7f7	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x7fd	             0x1c2	                            add edx, eax	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x7ff	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x805	             0x1d0	                            add eax, edx	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x807	            0x89c7	                            mov edi, eax	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x809	      0xe800000000	                          call 0x400084e	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x80e	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       458	ops.c	FUNCTION_7	IF_3	CALL_7
0x815	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 0	       459	ops.c	FUNCTION_7	IF_3	IF_9
0x81d	     0xf840a040000	                            je 0x4000c6d	       459	ops.c	FUNCTION_7	IF_3	IF_9
0x823	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       461	ops.c	FUNCTION_7	IF_3	CALL_8
0x826	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       461	ops.c	FUNCTION_7	IF_3	CALL_8
0x82c	             0x1c2	                            add edx, eax	       461	ops.c	FUNCTION_7	IF_3	CALL_8
0x82e	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	       461	ops.c	FUNCTION_7	IF_3	CALL_8
0x834	             0x1c2	                            add edx, eax	       461	ops.c	FUNCTION_7	IF_3	CALL_8
0x836	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       461	ops.c	FUNCTION_7	IF_3	CALL_8
0x83c	             0x1d0	                            add eax, edx	       461	ops.c	FUNCTION_7	IF_3	CALL_8
0x83e	          0x4863d0	                         movsxd rdx, eax	       461	ops.c	FUNCTION_7	IF_3	CALL_8
0x841	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       461	ops.c	FUNCTION_7	IF_3	CALL_8
0x848	      0xbe00000000	                              mov esi, 0	       461	ops.c	FUNCTION_7	IF_3	CALL_8
0x84d	          0x4889c7	                            mov rdi, rax	       461	ops.c	FUNCTION_7	IF_3	CALL_8
0x850	      0xe800000000	                          call 0x4000895	       461	ops.c	FUNCTION_7	IF_3	CALL_8
0x855	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       462	ops.c	FUNCTION_7	IF_3	CALL_9
0x858	          0x4863d0	                         movsxd rdx, eax	       462	ops.c	FUNCTION_7	IF_3	CALL_9
0x85b	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	       462	ops.c	FUNCTION_7	IF_3	CALL_9
0x85f	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       462	ops.c	FUNCTION_7	IF_3	CALL_9
0x866	          0x4889ce	                            mov rsi, rcx	       462	ops.c	FUNCTION_7	IF_3	CALL_9
0x869	          0x4889c7	                            mov rdi, rax	       462	ops.c	FUNCTION_7	IF_3	CALL_9
0x86c	      0xe800000000	                          call 0x40008b1	       462	ops.c	FUNCTION_7	IF_3	CALL_9
0x871	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       463	ops.c	FUNCTION_7	IF_3	CALL_10
0x877	            0x4898	                                    cdqe	       463	ops.c	FUNCTION_7	IF_3	CALL_10
0x879	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       463	ops.c	FUNCTION_7	IF_3	CALL_10
0x87c	          0x4863ca	                         movsxd rcx, edx	       463	ops.c	FUNCTION_7	IF_3	CALL_10
0x87f	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       463	ops.c	FUNCTION_7	IF_3	CALL_10
0x886	          0x4801d1	                            add rcx, rdx	       463	ops.c	FUNCTION_7	IF_3	CALL_10
0x889	          0x4889c2	                            mov rdx, rax	       463	ops.c	FUNCTION_7	IF_3	CALL_10
0x88c	      0xbe09000000	                              mov esi, 9	       463	ops.c	FUNCTION_7	IF_3	CALL_10
0x891	          0x4889cf	                            mov rdi, rcx	       463	ops.c	FUNCTION_7	IF_3	CALL_10
0x894	      0xe800000000	                          call 0x40008d9	       463	ops.c	FUNCTION_7	IF_3	CALL_10
0x899	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	       464	ops.c	FUNCTION_7	IF_3	CALL_11
0x89f	            0x4898	                                    cdqe	       464	ops.c	FUNCTION_7	IF_3	CALL_11
0x8a1	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       464	ops.c	FUNCTION_7	IF_3	CALL_11
0x8a4	          0x4863ca	                         movsxd rcx, edx	       464	ops.c	FUNCTION_7	IF_3	CALL_11
0x8a7	    0x8b952cffffff	             mov edx, dword [rbp - 0xd4]	       464	ops.c	FUNCTION_7	IF_3	CALL_11
0x8ad	          0x4863d2	                         movsxd rdx, edx	       464	ops.c	FUNCTION_7	IF_3	CALL_11
0x8b0	          0x4801d1	                            add rcx, rdx	       464	ops.c	FUNCTION_7	IF_3	CALL_11
0x8b3	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       464	ops.c	FUNCTION_7	IF_3	CALL_11
0x8ba	          0x4801d1	                            add rcx, rdx	       464	ops.c	FUNCTION_7	IF_3	CALL_11
0x8bd	          0x4889c2	                            mov rdx, rax	       464	ops.c	FUNCTION_7	IF_3	CALL_11
0x8c0	      0xbe20000000	                           mov esi, 0x20	       464	ops.c	FUNCTION_7	IF_3	CALL_11
0x8c5	          0x4889cf	                            mov rdi, rcx	       464	ops.c	FUNCTION_7	IF_3	CALL_11
0x8c8	      0xe800000000	                          call 0x400090d	       464	ops.c	FUNCTION_7	IF_3	CALL_11
0x8cd	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       466	ops.c	FUNCTION_7	IF_3	CALL_12
0x8d3	          0x4863d0	                         movsxd rdx, eax	       466	ops.c	FUNCTION_7	IF_3	CALL_12
0x8d6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       466	ops.c	FUNCTION_7	IF_3	CALL_12
0x8da	          0x8b4db8	             mov ecx, dword [rbp - 0x48]	       466	ops.c	FUNCTION_7	IF_3	CALL_12
0x8dd	          0x4863f1	                         movsxd rsi, ecx	       466	ops.c	FUNCTION_7	IF_3	CALL_12
0x8e0	    0x8b8d2cffffff	             mov ecx, dword [rbp - 0xd4]	       466	ops.c	FUNCTION_7	IF_3	CALL_12
0x8e6	          0x4863c9	                         movsxd rcx, ecx	       466	ops.c	FUNCTION_7	IF_3	CALL_12
0x8e9	          0x4801ce	                            add rsi, rcx	       466	ops.c	FUNCTION_7	IF_3	CALL_12
0x8ec	    0x8b8d30ffffff	             mov ecx, dword [rbp - 0xd0]	       466	ops.c	FUNCTION_7	IF_3	CALL_12
0x8f2	          0x4863c9	                         movsxd rcx, ecx	       466	ops.c	FUNCTION_7	IF_3	CALL_12
0x8f5	          0x4801ce	                            add rsi, rcx	       466	ops.c	FUNCTION_7	IF_3	CALL_12
0x8f8	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	       466	ops.c	FUNCTION_7	IF_3	CALL_12
0x8ff	          0x4801f1	                            add rcx, rsi	       466	ops.c	FUNCTION_7	IF_3	CALL_12
0x902	          0x4889c6	                            mov rsi, rax	       466	ops.c	FUNCTION_7	IF_3	CALL_12
0x905	          0x4889cf	                            mov rdi, rcx	       466	ops.c	FUNCTION_7	IF_3	CALL_12
0x908	      0xe800000000	                          call 0x400094d	       466	ops.c	FUNCTION_7	IF_3	CALL_12
0x90d	      0xe9b1020000	                           jmp 0x4000c03	       466	ops.c	FUNCTION_7	IF_3	CALL_12
0x912	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       481	ops.c	FUNCTION_7	ELSE_4
0x916	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       481	ops.c	FUNCTION_7	ELSE_4
0x91d	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       495	ops.c	FUNCTION_7	ELSE_4	IF_10
0x920	            0x85c0	                           test eax, eax	       495	ops.c	FUNCTION_7	ELSE_4	IF_10
0x922	            0x7437	                            je 0x400099b	       495	ops.c	FUNCTION_7	ELSE_4	IF_10
0x924	    0x8b0500000000	            mov eax, dword [0x0400096a] 	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x92a	            0x85c0	                           test eax, eax	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x92c	            0x7415	                            je 0x4000983	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x92e	    0x488b05000000	            mov rax, qword [0x04000975] 	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x935	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x93c	          0x4889d7	                            mov rdi, rdx	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x93f	            0xffd0	                                call rax	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x941	            0xeb05	                           jmp 0x4000988	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x943	      0xb801000000	                              mov eax, 1	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x948	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x94f	            0x4898	                                    cdqe	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x951	          0x4801d0	                            add rax, rdx	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x954	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       496	ops.c	FUNCTION_7	ELSE_4	CALL_13
0x95b	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       499	ops.c	FUNCTION_7	ELSE_4
0x95e	    0x898538ffffff	             mov dword [rbp - 0xc8], eax	       499	ops.c	FUNCTION_7	ELSE_4
0x964	            0xeb2e	                           jmp 0x40009d4	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x966	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       503	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_15
0x96a	    0x8b9538ffffff	             mov edx, dword [rbp - 0xc8]	       503	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_15
0x970	    0x488d8d68ffff	                   lea rcx, [rbp - 0x98]	       503	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_15
0x977	          0x4889ce	                            mov rsi, rcx	       503	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_15
0x97a	          0x4889c7	                            mov rdi, rax	       503	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_15
0x97d	      0xe800000000	                          call 0x40009c2	       503	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_15
0x982	    0x898554ffffff	             mov dword [rbp - 0xac], eax	       503	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_15
0x988	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       504	ops.c	FUNCTION_7	ELSE_4	WHILE_1
0x98e	     0x18538ffffff	             add dword [rbp - 0xc8], eax	       504	ops.c	FUNCTION_7	ELSE_4	WHILE_1
0x994	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x99b	           0xfb600	                   movzx eax, byte [rax]	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x99e	            0x3c20	                            cmp al, 0x20	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x9a0	            0x74c4	                            je 0x40009a6	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x9a2	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x9a9	           0xfb600	                   movzx eax, byte [rax]	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x9ac	            0x3c09	                               cmp al, 9	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x9ae	            0x74b6	                            je 0x40009a6	       501	ops.c	FUNCTION_7	ELSE_4	WHILE_1	CALL_14
0x9b0	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       507	ops.c	FUNCTION_7	ELSE_4
0x9b7	          0x8b4064	            mov eax, dword [rax + 0x64] 	       507	ops.c	FUNCTION_7	ELSE_4
0x9ba	    0x8b9538ffffff	             mov edx, dword [rbp - 0xc8]	       507	ops.c	FUNCTION_7	ELSE_4
0x9c0	            0x29c2	                            sub edx, eax	       507	ops.c	FUNCTION_7	ELSE_4
0x9c2	            0x89d0	                            mov eax, edx	       507	ops.c	FUNCTION_7	ELSE_4
0x9c4	            0x4898	                                    cdqe	       507	ops.c	FUNCTION_7	ELSE_4
0x9c6	        0x48894588	             mov qword [rbp - 0x78], rax	       507	ops.c	FUNCTION_7	ELSE_4
0x9ca	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	       511	ops.c	FUNCTION_7	ELSE_4
0x9d0	          0x4863d0	                         movsxd rdx, eax	       511	ops.c	FUNCTION_7	ELSE_4
0x9d3	        0x488b4588	             mov rax, qword [rbp - 0x78]	       510	ops.c	FUNCTION_7	ELSE_4
0x9d7	          0x4839c2	                            cmp rdx, rax	       510	ops.c	FUNCTION_7	ELSE_4
0x9da	        0x480f46c2	                         cmovbe rax, rdx	       510	ops.c	FUNCTION_7	ELSE_4
0x9de	        0x48894590	             mov qword [rbp - 0x70], rax	       510	ops.c	FUNCTION_7	ELSE_4
0x9e2	    0x8b8538ffffff	             mov eax, dword [rbp - 0xc8]	       514	ops.c	FUNCTION_7	ELSE_4
0x9e8	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       514	ops.c	FUNCTION_7	ELSE_4
0x9ec	            0x29d0	                            sub eax, edx	       514	ops.c	FUNCTION_7	ELSE_4
0x9ee	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	       514	ops.c	FUNCTION_7	ELSE_4
0x9f4	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       518	ops.c	FUNCTION_7	ELSE_4
0x9f8	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       518	ops.c	FUNCTION_7	ELSE_4
0x9ff	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       519	ops.c	FUNCTION_7	ELSE_4
0xa02	    0x898534ffffff	             mov dword [rbp - 0xcc], eax	       519	ops.c	FUNCTION_7	ELSE_4
0xa08	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       524	ops.c	FUNCTION_7	ELSE_4	IF_11
0xa0b	            0x85c0	                           test eax, eax	       524	ops.c	FUNCTION_7	ELSE_4	IF_11
0xa0d	     0xf8487000000	                            je 0x4000ada	       524	ops.c	FUNCTION_7	ELSE_4	IF_11
0xa13	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       525	ops.c	FUNCTION_7	ELSE_4	IF_11
0xa16	    0x298534ffffff	             sub dword [rbp - 0xcc], eax	       525	ops.c	FUNCTION_7	ELSE_4	IF_11
0xa1c	            0xeb7c	                           jmp 0x4000ada	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0xa1e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       528	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0xa25	        0x48894598	             mov qword [rbp - 0x68], rax	       528	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0xa29	    0x8b9534ffffff	             mov edx, dword [rbp - 0xcc]	       531	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_16
0xa2f	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	       531	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_16
0xa36	        0x488b4598	             mov rax, qword [rbp - 0x68]	       531	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_16
0xa3a	          0x4889ce	                            mov rsi, rcx	       531	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_16
0xa3d	          0x4889c7	                            mov rdi, rax	       531	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_16
0xa40	      0xe800000000	                          call 0x4000a85	       531	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_16
0xa45	    0x898554ffffff	             mov dword [rbp - 0xac], eax	       531	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_16
0xa4b	    0x8b9534ffffff	             mov edx, dword [rbp - 0xcc]	       533	ops.c	FUNCTION_7	ELSE_4	WHILE_2	IF_12
0xa51	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       533	ops.c	FUNCTION_7	ELSE_4	WHILE_2	IF_12
0xa57	             0x1d0	                            add eax, edx	       533	ops.c	FUNCTION_7	ELSE_4	WHILE_2	IF_12
0xa59	    0x3b855cffffff	             cmp eax, dword [rbp - 0xa4]	       533	ops.c	FUNCTION_7	ELSE_4	WHILE_2	IF_12
0xa5f	            0x7f4d	                            jg 0x4000aee	       533	ops.c	FUNCTION_7	ELSE_4	WHILE_2	IF_12
0xa61	    0x8b8554ffffff	             mov eax, dword [rbp - 0xac]	       535	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0xa67	     0x18534ffffff	             add dword [rbp - 0xcc], eax	       535	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0xa6d	    0x8b0500000000	            mov eax, dword [0x04000ab3] 	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0xa73	            0x85c0	                           test eax, eax	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0xa75	            0x7415	                            je 0x4000acc	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0xa77	    0x488b05000000	            mov rax, qword [0x04000abe] 	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0xa7e	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0xa85	          0x4889d7	                            mov rdi, rdx	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0xa88	            0xffd0	                                call rax	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0xa8a	            0xeb05	                           jmp 0x4000ad1	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0xa8c	      0xb801000000	                              mov eax, 1	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0xa91	            0x4898	                                    cdqe	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0xa93	    0x48018578ffff	            add qword [rbp - 0x88], rax 	       536	ops.c	FUNCTION_7	ELSE_4	WHILE_2	CALL_17
0xa9a	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0xaa0	    0x3b855cffffff	             cmp eax, dword [rbp - 0xa4]	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0xaa6	     0xf8c72ffffff	                            jl 0x4000a5e	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0xaac	            0xeb01	                           jmp 0x4000aef	       526	ops.c	FUNCTION_7	ELSE_4	WHILE_2
0xaae	              0x90	                                     nop	       534	ops.c	FUNCTION_7	ELSE_4	WHILE_2	IF_12
0xaaf	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	       542	ops.c	FUNCTION_7	ELSE_4
0xab5	    0x2b8534ffffff	             sub eax, dword [rbp - 0xcc]	       542	ops.c	FUNCTION_7	ELSE_4
0xabb	    0x898560ffffff	             mov dword [rbp - 0xa0], eax	       542	ops.c	FUNCTION_7	ELSE_4
0xac1	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       548	ops.c	FUNCTION_7	ELSE_4
0xac8	        0x488b4580	             mov rax, qword [rbp - 0x80]	       548	ops.c	FUNCTION_7	ELSE_4
0xacc	          0x4829c2	                            sub rdx, rax	       548	ops.c	FUNCTION_7	ELSE_4
0xacf	          0x4889d0	                            mov rax, rdx	       548	ops.c	FUNCTION_7	ELSE_4
0xad2	            0x89c2	                            mov edx, eax	       548	ops.c	FUNCTION_7	ELSE_4
0xad4	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	       549	ops.c	FUNCTION_7	ELSE_4
0xada	          0x8d1c02	                    lea ebx, [rdx + rax]	       549	ops.c	FUNCTION_7	ELSE_4
0xadd	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       550	ops.c	FUNCTION_7	ELSE_4	CALL_18
0xae4	          0x4889c7	                            mov rdi, rax	       550	ops.c	FUNCTION_7	ELSE_4	CALL_18
0xae7	      0xe800000000	                          call 0x4000b2c	       550	ops.c	FUNCTION_7	ELSE_4	CALL_18
0xaec	             0x1d8	                            add eax, ebx	       550	ops.c	FUNCTION_7	ELSE_4	CALL_18
0xaee	          0x83c001	                              add eax, 1	       548	ops.c	FUNCTION_7	ELSE_4
0xaf1	    0x898564ffffff	             mov dword [rbp - 0x9c], eax	       548	ops.c	FUNCTION_7	ELSE_4
0xaf7	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	       552	ops.c	FUNCTION_7	ELSE_4	CALL_19
0xafd	            0x89c7	                            mov edi, eax	       552	ops.c	FUNCTION_7	ELSE_4	CALL_19
0xaff	      0xe800000000	                          call 0x4000b44	       552	ops.c	FUNCTION_7	ELSE_4	CALL_19
0xb04	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       552	ops.c	FUNCTION_7	ELSE_4	CALL_19
0xb0b	    0x4883bd70ffff	               cmp qword [rbp - 0x90], 0	       553	ops.c	FUNCTION_7	ELSE_4	IF_13
0xb13	     0xf8417010000	                            je 0x4000c70	       553	ops.c	FUNCTION_7	ELSE_4	IF_13
0xb19	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       555	ops.c	FUNCTION_7	ELSE_4	CALL_20
0xb20	        0x488b4580	             mov rax, qword [rbp - 0x80]	       555	ops.c	FUNCTION_7	ELSE_4	CALL_20
0xb24	          0x4829c2	                            sub rdx, rax	       555	ops.c	FUNCTION_7	ELSE_4	CALL_20
0xb27	          0x4889d0	                            mov rax, rdx	       555	ops.c	FUNCTION_7	ELSE_4	CALL_20
0xb2a	          0x4889c2	                            mov rdx, rax	       555	ops.c	FUNCTION_7	ELSE_4	CALL_20
0xb2d	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	       555	ops.c	FUNCTION_7	ELSE_4	CALL_20
0xb31	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       555	ops.c	FUNCTION_7	ELSE_4	CALL_20
0xb38	          0x4889ce	                            mov rsi, rcx	       555	ops.c	FUNCTION_7	ELSE_4	CALL_20
0xb3b	          0x4889c7	                            mov rdi, rax	       555	ops.c	FUNCTION_7	ELSE_4	CALL_20
0xb3e	      0xe800000000	                          call 0x4000b83	       555	ops.c	FUNCTION_7	ELSE_4	CALL_20
0xb43	    0x8b8560ffffff	             mov eax, dword [rbp - 0xa0]	       556	ops.c	FUNCTION_7	ELSE_4	CALL_21
0xb49	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	       556	ops.c	FUNCTION_7	ELSE_4	CALL_21
0xb50	        0x488b5580	             mov rdx, qword [rbp - 0x80]	       556	ops.c	FUNCTION_7	ELSE_4	CALL_21
0xb54	          0x4829d1	                            sub rcx, rdx	       556	ops.c	FUNCTION_7	ELSE_4	CALL_21
0xb57	          0x4889ca	                            mov rdx, rcx	       556	ops.c	FUNCTION_7	ELSE_4	CALL_21
0xb5a	          0x4889d1	                            mov rcx, rdx	       556	ops.c	FUNCTION_7	ELSE_4	CALL_21
0xb5d	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       556	ops.c	FUNCTION_7	ELSE_4	CALL_21
0xb64	          0x4801d1	                            add rcx, rdx	       556	ops.c	FUNCTION_7	ELSE_4	CALL_21
0xb67	          0x4889c2	                            mov rdx, rax	       556	ops.c	FUNCTION_7	ELSE_4	CALL_21
0xb6a	      0xbe20000000	                           mov esi, 0x20	       556	ops.c	FUNCTION_7	ELSE_4	CALL_21
0xb6f	          0x4889cf	                            mov rdi, rcx	       556	ops.c	FUNCTION_7	ELSE_4	CALL_21
0xb72	      0xe800000000	                          call 0x4000bb7	       556	ops.c	FUNCTION_7	ELSE_4	CALL_21
0xb77	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0xb7e	          0x4889c7	                            mov rdi, rax	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0xb81	      0xe800000000	                          call 0x4000bc6	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0xb86	        0x488d5001	                      lea rdx, [rax + 1]	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0xb8a	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0xb91	    0x488bb578ffff	             mov rsi, qword [rbp - 0x88]	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0xb98	        0x488b4d80	             mov rcx, qword [rbp - 0x80]	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0xb9c	          0x4829ce	                            sub rsi, rcx	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0xb9f	          0x4889f1	                            mov rcx, rsi	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0xba2	          0x4889ce	                            mov rsi, rcx	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0xba5	    0x8b8d60ffffff	             mov ecx, dword [rbp - 0xa0]	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0xbab	          0x4801ce	                            add rsi, rcx	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0xbae	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0xbb5	          0x4801f1	                            add rcx, rsi	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0xbb8	          0x4889c6	                            mov rsi, rax	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0xbbb	          0x4889cf	                            mov rdi, rcx	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0xbbe	      0xe800000000	                          call 0x4000c03	       557	ops.c	FUNCTION_7	ELSE_4	CALL_22
0xbc3	    0x488b05000000	            mov rax, qword [0x04000c0a] 	       560	ops.c	FUNCTION_7	CALL_23
0xbca	        0x488b4038	            mov rax, qword [rax + 0x38] 	       560	ops.c	FUNCTION_7	CALL_23
0xbce	    0x488b8d70ffff	             mov rcx, qword [rbp - 0x90]	       560	ops.c	FUNCTION_7	CALL_23
0xbd5	      0xba00000000	                              mov edx, 0	       560	ops.c	FUNCTION_7	CALL_23
0xbda	          0x4889ce	                            mov rsi, rcx	       560	ops.c	FUNCTION_7	CALL_23
0xbdd	          0x4889c7	                            mov rdi, rax	       560	ops.c	FUNCTION_7	CALL_23
0xbe0	      0xe800000000	                          call 0x4000c25	       560	ops.c	FUNCTION_7	CALL_23
0xbe5	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       561	ops.c	FUNCTION_7	CALL_24
0xbe8	    0x488b05000000	            mov rax, qword [0x04000c2f] 	       561	ops.c	FUNCTION_7	CALL_24
0xbef	        0x488b4038	            mov rax, qword [rax + 0x38] 	       561	ops.c	FUNCTION_7	CALL_24
0xbf3	            0x89d6	                            mov esi, edx	       561	ops.c	FUNCTION_7	CALL_24
0xbf5	          0x4889c7	                            mov rdi, rax	       561	ops.c	FUNCTION_7	CALL_24
0xbf8	      0xe800000000	                          call 0x4000c3d	       561	ops.c	FUNCTION_7	CALL_24
0xbfd	    0x8b8540ffffff	             mov eax, dword [rbp - 0xc0]	       562	ops.c	FUNCTION_7
0xc03	    0x890500000000	            mov dword [0x04000c49], eax 	       562	ops.c	FUNCTION_7
0xc09	    0x488b05000000	            mov rax, qword [0x04000c50] 	       563	ops.c	FUNCTION_7
0xc10	    0x8b9544ffffff	             mov edx, dword [rbp - 0xbc]	       563	ops.c	FUNCTION_7
0xc16	          0x895040	             mov dword [rax + 0x40], edx	       563	ops.c	FUNCTION_7
0xc19	    0x8b8550ffffff	             mov eax, dword [rbp - 0xb0]	       565	ops.c	FUNCTION_7
0xc1f	    0x890500000000	            mov dword [0x04000c65], eax 	       565	ops.c	FUNCTION_7
0xc25	            0xeb0a	                           jmp 0x4000c71	       565	ops.c	FUNCTION_7
0xc27	              0x90	                                     nop	       403	ops.c	FUNCTION_7	IF_1
0xc28	            0xeb07	                           jmp 0x4000c71	       403	ops.c	FUNCTION_7	IF_1
0xc2a	              0x90	                                     nop	       408	ops.c	FUNCTION_7	IF_2
0xc2b	            0xeb04	                           jmp 0x4000c71	       408	ops.c	FUNCTION_7	IF_2
0xc2d	              0x90	                                     nop	       460	ops.c	FUNCTION_7	IF_3	IF_9
0xc2e	            0xeb01	                           jmp 0x4000c71	       460	ops.c	FUNCTION_7	IF_3	IF_9
0xc30	              0x90	                                     nop	       554	ops.c	FUNCTION_7	ELSE_4	IF_13
0xc31	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       567	ops.c	FUNCTION_7
0xc35	    0x644833042528	                xor rax, qword fs:[0x28]	       567	ops.c	FUNCTION_7
0xc3e	            0x7405	                            je 0x4000c85	       567	ops.c	FUNCTION_7
0xc40	      0xe800000000	                          call 0x4000c85	       567	ops.c	FUNCTION_7
0xc45	    0x4881c4e80000	                           add rsp, 0xe8	       567	ops.c	FUNCTION_7
0xc4c	              0x5b	                                 pop rbx	       567	ops.c	FUNCTION_7
0xc4d	              0x5d	                                 pop rbp	       567	ops.c	FUNCTION_7
0xc4e	              0xc3	                                     ret	       567	ops.c	FUNCTION_7
x11_export_final_selection	CALL,9:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,4:IF,8	109
0xd168	              0x55	                                push rbp	      6428	ops.c	FUNCTION_73
0xd169	          0x4889e5	                            mov rbp, rsp	      6428	ops.c	FUNCTION_73
0xd16c	        0x4883ec50	                           sub rsp, 0x50	      6428	ops.c	FUNCTION_73
0xd170	    0x64488b042528	                mov rax, qword fs:[0x28]	      6428	ops.c	FUNCTION_73
0xd179	        0x488945f8	                mov qword [rbp - 8], rax	      6428	ops.c	FUNCTION_73
0xd17d	            0x31c0	                            xor eax, eax	      6428	ops.c	FUNCTION_73
0xd17f	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      6430	ops.c	FUNCTION_73
0xd187	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      6431	ops.c	FUNCTION_73
0xd18f	    0xc745b8ffffff	     mov dword [rbp - 0x48], 0xffffffff 	      6432	ops.c	FUNCTION_73
0xd196	    0x488b05000000	            mov rax, qword [0x0400d1dd] 	      6440	ops.c	FUNCTION_73	ELSE_1
0xd19d	        0x488945d0	             mov qword [rbp - 0x30], rax	      6440	ops.c	FUNCTION_73	ELSE_1
0xd1a1	    0x8b0500000000	            mov eax, dword [0x0400d1e7] 	      6446	ops.c	FUNCTION_73	IF_2
0xd1a7	            0x85c0	                           test eax, eax	      6446	ops.c	FUNCTION_73	IF_2
0xd1a9	            0x741d	                            je 0x400d208	      6446	ops.c	FUNCTION_73	IF_2
0xd1ab	        0x488d4dc8	                   lea rcx, [rbp - 0x38]	      6447	ops.c	FUNCTION_73	CALL_1
0xd1af	        0x488d45c0	                   lea rax, [rbp - 0x40]	      6447	ops.c	FUNCTION_73	CALL_1
0xd1b3	      0xba00000000	                              mov edx, 0	      6447	ops.c	FUNCTION_73	CALL_1
0xd1b8	          0x4889ce	                            mov rsi, rcx	      6447	ops.c	FUNCTION_73	CALL_1
0xd1bb	          0x4889c7	                            mov rdi, rax	      6447	ops.c	FUNCTION_73	CALL_1
0xd1be	      0xe800000000	                          call 0x400d203	      6447	ops.c	FUNCTION_73	CALL_1
0xd1c3	          0x8945b8	             mov dword [rbp - 0x48], eax	      6447	ops.c	FUNCTION_73	CALL_1
0xd1c6	            0xeb25	                           jmp 0x400d22d	      6447	ops.c	FUNCTION_73	CALL_1
0xd1c8	    0x8b0500000000	            mov eax, dword [0x0400d20e] 	      6448	ops.c	FUNCTION_73	ELSE_2	IF_3
0xd1ce	            0x85c0	                           test eax, eax	      6448	ops.c	FUNCTION_73	ELSE_2	IF_3
0xd1d0	            0x741b	                            je 0x400d22d	      6448	ops.c	FUNCTION_73	ELSE_2	IF_3
0xd1d2	        0x488d4dc8	                   lea rcx, [rbp - 0x38]	      6449	ops.c	FUNCTION_73	ELSE_2	IF_3
0xd1d6	        0x488d45c0	                   lea rax, [rbp - 0x40]	      6449	ops.c	FUNCTION_73	ELSE_2	IF_3
0xd1da	      0xba00000000	                              mov edx, 0	      6449	ops.c	FUNCTION_73	ELSE_2	IF_3
0xd1df	          0x4889ce	                            mov rsi, rcx	      6449	ops.c	FUNCTION_73	ELSE_2	IF_3
0xd1e2	          0x4889c7	                            mov rdi, rax	      6449	ops.c	FUNCTION_73	ELSE_2	IF_3
0xd1e5	      0xe800000000	                          call 0x400d22a	      6449	ops.c	FUNCTION_73	ELSE_2	IF_3
0xd1ea	          0x8945b8	             mov dword [rbp - 0x48], eax	      6449	ops.c	FUNCTION_73	ELSE_2	IF_3
0xd1ed	      0x48837dd000	               cmp qword [rbp - 0x30], 0	      6452	ops.c	FUNCTION_73	IF_4
0xd1f2	     0xf8412010000	                            je 0x400d34a	      6452	ops.c	FUNCTION_73	IF_4
0xd1f8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6452	ops.c	FUNCTION_73	IF_4
0xd1fc	          0x4885c0	                           test rax, rax	      6452	ops.c	FUNCTION_73	IF_4
0xd1ff	     0xf8405010000	                            je 0x400d34a	      6452	ops.c	FUNCTION_73	IF_4
0xd205	        0x837db800	               cmp dword [rbp - 0x48], 0	      6452	ops.c	FUNCTION_73	IF_4
0xd209	     0xf88fb000000	                            js 0x400d34a	      6452	ops.c	FUNCTION_73	IF_4
0xd20f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6453	ops.c	FUNCTION_73	IF_4
0xd213	    0x483dffff0f00	                        cmp rax, 0xfffff	      6453	ops.c	FUNCTION_73	IF_4
0xd219	     0xf87eb000000	                            ja 0x400d34a	      6453	ops.c	FUNCTION_73	IF_4
0xd21f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6453	ops.c	FUNCTION_73	IF_4
0xd223	          0x4885c0	                           test rax, rax	      6453	ops.c	FUNCTION_73	IF_4
0xd226	     0xf84de000000	                            je 0x400d34a	      6453	ops.c	FUNCTION_73	IF_4
0xd22c	    0xc745bc010000	               mov dword [rbp - 0x44], 1	      6456	ops.c	FUNCTION_73	IF_4
0xd233	    0x8b0500000000	            mov eax, dword [0x0400d279] 	      6462	ops.c	FUNCTION_73	IF_4	IF_5
0xd239	            0x85c0	                           test eax, eax	      6462	ops.c	FUNCTION_73	IF_4	IF_5
0xd23b	     0xf849c000000	                            je 0x400d31d	      6462	ops.c	FUNCTION_73	IF_4	IF_5
0xd241	    0xc745e0000000	               mov dword [rbp - 0x20], 0	      6466	ops.c	FUNCTION_73	IF_4	IF_5
0xd248	    0x488b0d000000	            mov rcx, qword [0x0400d28f] 	      6467	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0xd24f	        0x488d45e0	                   lea rax, [rbp - 0x20]	      6467	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0xd253	      0xba00000000	                              mov edx, 0	      6467	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0xd258	          0x4889ce	                            mov rsi, rcx	      6467	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0xd25b	          0x4889c7	                            mov rdi, rax	      6467	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0xd25e	      0xe800000000	                          call 0x400d2a3	      6467	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0xd263	          0x83f801	                              cmp eax, 1	      6467	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0xd266	            0x756e	                           jne 0x400d316	      6467	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_3
0xd268	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6469	ops.c	FUNCTION_73	IF_4	IF_5	IF_6
0xd26c	          0x8945b4	             mov dword [rbp - 0x4c], eax	      6469	ops.c	FUNCTION_73	IF_4	IF_5	IF_6
0xd26f	    0xc745f0010000	               mov dword [rbp - 0x10], 1	      6472	ops.c	FUNCTION_73	IF_4	IF_5	IF_6
0xd276	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      6473	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_4
0xd27a	        0x488d55b4	                   lea rdx, [rbp - 0x4c]	      6473	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_4
0xd27e	        0x488d45e0	                   lea rax, [rbp - 0x20]	      6473	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_4
0xd282	          0x4889ce	                            mov rsi, rcx	      6473	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_4
0xd285	          0x4889c7	                            mov rdi, rax	      6473	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_4
0xd288	      0xe800000000	                          call 0x400d2cd	      6473	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_4
0xd28d	        0x488945d8	             mov qword [rbp - 0x28], rax	      6473	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_4
0xd291	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      6474	ops.c	FUNCTION_73	IF_4	IF_5	IF_6
0xd294	            0x4898	                                    cdqe	      6474	ops.c	FUNCTION_73	IF_4	IF_5	IF_6
0xd296	        0x488945c8	             mov qword [rbp - 0x38], rax	      6474	ops.c	FUNCTION_73	IF_4	IF_5	IF_6
0xd29a	      0x48837dd800	               cmp qword [rbp - 0x28], 0	      6475	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	IF_7
0xd29f	            0x7416	                            je 0x400d2f7	      6475	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	IF_7
0xd2a1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6477	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	IF_7	CALL_5
0xd2a5	          0x4889c7	                            mov rdi, rax	      6477	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	IF_7	CALL_5
0xd2a8	      0xe800000000	                          call 0x400d2ed	      6477	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	IF_7	CALL_5
0xd2ad	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6478	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	IF_7
0xd2b1	        0x488945c0	             mov qword [rbp - 0x40], rax	      6478	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	IF_7
0xd2b5	            0xeb07	                           jmp 0x400d2fe	      6478	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	IF_7
0xd2b7	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      6482	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	ELSE_3
0xd2be	        0x488d45e0	                   lea rax, [rbp - 0x20]	      6484	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0xd2c2	      0xba00000000	                              mov edx, 0	      6484	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0xd2c7	      0xbe00000000	                              mov esi, 0	      6484	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0xd2cc	          0x4889c7	                            mov rdi, rax	      6484	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0xd2cf	      0xe800000000	                          call 0x400d314	      6484	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0xd2d4	            0xeb07	                           jmp 0x400d31d	      6484	ops.c	FUNCTION_73	IF_4	IF_5	IF_6	CALL_6
0xd2d6	    0xc745bc000000	               mov dword [rbp - 0x44], 0	      6488	ops.c	FUNCTION_73	IF_4	IF_5	ELSE_4
0xd2dd	        0x837dbc00	               cmp dword [rbp - 0x44], 0	      6494	ops.c	FUNCTION_73	IF_4	IF_8
0xd2e1	            0x7427	                            je 0x400d34a	      6494	ops.c	FUNCTION_73	IF_4	IF_8
0xd2e3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      6497	ops.c	FUNCTION_73	IF_4	IF_8	CALL_7
0xd2e7	            0x89c2	                            mov edx, eax	      6497	ops.c	FUNCTION_73	IF_4	IF_8	CALL_7
0xd2e9	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	      6497	ops.c	FUNCTION_73	IF_4	IF_8	CALL_7
0xd2ed	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6497	ops.c	FUNCTION_73	IF_4	IF_8	CALL_7
0xd2f1	      0xb900000000	                              mov ecx, 0	      6497	ops.c	FUNCTION_73	IF_4	IF_8	CALL_7
0xd2f6	          0x4889c7	                            mov rdi, rax	      6497	ops.c	FUNCTION_73	IF_4	IF_8	CALL_7
0xd2f9	      0xe800000000	                          call 0x400d33e	      6497	ops.c	FUNCTION_73	IF_4	IF_8	CALL_7
0xd2fe	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6498	ops.c	FUNCTION_73	IF_4	IF_8	CALL_8
0xd302	          0x4889c7	                            mov rdi, rax	      6498	ops.c	FUNCTION_73	IF_4	IF_8	CALL_8
0xd305	      0xe800000000	                          call 0x400d34a	      6498	ops.c	FUNCTION_73	IF_4	IF_8	CALL_8
0xd30a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      6502	ops.c	FUNCTION_73	CALL_9
0xd30e	          0x4889c7	                            mov rdi, rax	      6502	ops.c	FUNCTION_73	CALL_9
0xd311	      0xe800000000	                          call 0x400d356	      6502	ops.c	FUNCTION_73	CALL_9
0xd316	              0x90	                                     nop	      6503	ops.c	FUNCTION_73
0xd317	        0x488b45f8	                mov rax, qword [rbp - 8]	      6503	ops.c	FUNCTION_73
0xd31b	    0x644833042528	                xor rax, qword fs:[0x28]	      6503	ops.c	FUNCTION_73
0xd324	            0x7405	                            je 0x400d36b	      6503	ops.c	FUNCTION_73
0xd326	      0xe800000000	                          call 0x400d36b	      6503	ops.c	FUNCTION_73
0xd32b	              0xc9	                                   leave	      6503	ops.c	FUNCTION_73
0xd32c	              0xc3	                                     ret	      6503	ops.c	FUNCTION_73
shift_delete_registers	CALL,1:FOR,1:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,1	37
0x2748	              0x55	                                push rbp	      1642	ops.c	FUNCTION_31
0x2749	          0x4889e5	                            mov rbp, rsp	      1642	ops.c	FUNCTION_31
0x274c	        0x4883ec10	                           sub rsp, 0x10	      1642	ops.c	FUNCTION_31
0x2750	    0x48c705000000	               mov qword [0x0400279b], 0	      1645	ops.c	FUNCTION_31
0x275b	      0xe8ea320000	                  call sym.free_yank_all	      1646	ops.c	FUNCTION_31	CALL_1
0x2760	    0xc745fc090000	                  mov dword [rbp - 4], 9	      1647	ops.c	FUNCTION_31	FOR_1
0x2767	            0xeb45	                           jmp 0x40027ee	      1647	ops.c	FUNCTION_31	FOR_1
0x2769	          0x8b45fc	                mov eax, dword [rbp - 4]	      1648	ops.c	FUNCTION_31	FOR_1
0x276c	          0x8d50ff	                      lea edx, [rax - 1]	      1648	ops.c	FUNCTION_31	FOR_1
0x276f	          0x8b45fc	                mov eax, dword [rbp - 4]	      1648	ops.c	FUNCTION_31	FOR_1
0x2772	            0x4898	                                    cdqe	      1648	ops.c	FUNCTION_31	FOR_1
0x2774	        0x48c1e005	                              shl rax, 5	      1648	ops.c	FUNCTION_31	FOR_1
0x2778	    0x480500000000	                              add rax, 0	      1648	ops.c	FUNCTION_31	FOR_1
0x277e	          0x4863d2	                         movsxd rdx, edx	      1648	ops.c	FUNCTION_31	FOR_1
0x2781	        0x48c1e205	                              shl rdx, 5	      1648	ops.c	FUNCTION_31	FOR_1
0x2785	    0x4881c2000000	                              add rdx, 0	      1648	ops.c	FUNCTION_31	FOR_1
0x278c	          0x488b0a	                    mov rcx, qword [rdx]	      1648	ops.c	FUNCTION_31	FOR_1
0x278f	          0x488908	                    mov qword [rax], rcx	      1648	ops.c	FUNCTION_31	FOR_1
0x2792	        0x488b4a08	                mov rcx, qword [rdx + 8]	      1648	ops.c	FUNCTION_31	FOR_1
0x2796	        0x48894808	                mov qword [rax + 8], rcx	      1648	ops.c	FUNCTION_31	FOR_1
0x279a	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      1648	ops.c	FUNCTION_31	FOR_1
0x279e	        0x48894810	             mov qword [rax + 0x10], rcx	      1648	ops.c	FUNCTION_31	FOR_1
0x27a2	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	      1648	ops.c	FUNCTION_31	FOR_1
0x27a6	        0x48895018	             mov qword [rax + 0x18], rdx	      1648	ops.c	FUNCTION_31	FOR_1
0x27aa	        0x836dfc01	                  sub dword [rbp - 4], 1	      1647	ops.c	FUNCTION_31	FOR_1
0x27ae	        0x837dfc01	                  cmp dword [rbp - 4], 1	      1647	ops.c	FUNCTION_31	FOR_1
0x27b2	            0x7fb5	                            jg 0x40027a9	      1647	ops.c	FUNCTION_31	FOR_1
0x27b4	    0x48c705000000	               mov qword [0x040027ff], 0	      1649	ops.c	FUNCTION_31
0x27bf	    0x8b0500000000	            mov eax, dword [0x04002805] 	      1650	ops.c	FUNCTION_31	IF_1
0x27c5	            0x85c0	                           test eax, eax	      1650	ops.c	FUNCTION_31	IF_1
0x27c7	            0x750e	                           jne 0x4002817	      1650	ops.c	FUNCTION_31	IF_1
0x27c9	    0x488b05000000	            mov rax, qword [0x04002810] 	      1651	ops.c	FUNCTION_31	IF_1
0x27d0	    0x488905000000	            mov qword [0x04002817], rax 	      1651	ops.c	FUNCTION_31	IF_1
0x27d7	    0x48c705000000	               mov qword [0x04002822], 0	      1652	ops.c	FUNCTION_31
0x27e2	              0x90	                                     nop	      1653	ops.c	FUNCTION_31
0x27e3	              0xc9	                                   leave	      1653	ops.c	FUNCTION_31
0x27e4	              0xc3	                                     ret	      1653	ops.c	FUNCTION_31
op_formatexpr	CALL,3:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,2	27
0x9c66	              0x55	                                push rbp	      4857	ops.c	ELSE_1	FUNCTION_58
0x9c67	          0x4889e5	                            mov rbp, rsp	      4857	ops.c	ELSE_1	FUNCTION_58
0x9c6a	        0x4883ec10	                           sub rsp, 0x10	      4857	ops.c	ELSE_1	FUNCTION_58
0x9c6e	        0x48897df8	                mov qword [rbp - 8], rdi	      4857	ops.c	ELSE_1	FUNCTION_58
0x9c72	        0x488b45f8	                mov rax, qword [rbp - 8]	      4858	ops.c	ELSE_1	FUNCTION_58	IF_1
0x9c76	          0x8b405c	            mov eax, dword [rax + 0x5c] 	      4858	ops.c	ELSE_1	FUNCTION_58	IF_1
0x9c79	            0x85c0	                           test eax, eax	      4858	ops.c	ELSE_1	FUNCTION_58	IF_1
0x9c7b	            0x740a	                            je 0x4009cc7	      4858	ops.c	ELSE_1	FUNCTION_58	IF_1
0x9c7d	      0xbf14000000	                           mov edi, 0x14	      4860	ops.c	ELSE_1	FUNCTION_58	CALL_1
0x9c82	      0xe800000000	                          call 0x4009cc7	      4860	ops.c	ELSE_1	FUNCTION_58	CALL_1
0x9c87	        0x488b45f8	                mov rax, qword [rbp - 8]	      4862	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x9c8b	        0x488b4850	            mov rcx, qword [rax + 0x50] 	      4862	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x9c8f	        0x488b45f8	                mov rax, qword [rbp - 8]	      4862	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x9c93	        0x488b4020	            mov rax, qword [rax + 0x20] 	      4862	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x9c97	      0xba00000000	                              mov edx, 0	      4862	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x9c9c	          0x4889ce	                            mov rsi, rcx	      4862	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x9c9f	          0x4889c7	                            mov rdi, rax	      4862	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x9ca2	      0xe800000000	                          call 0x4009ce7	      4862	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x9ca7	            0x85c0	                           test eax, eax	      4862	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x9ca9	            0x7411	                            je 0x4009cfc	      4862	ops.c	ELSE_1	FUNCTION_58	IF_2	CALL_2
0x9cab	        0x488b45f8	                mov rax, qword [rbp - 8]	      4865	ops.c	ELSE_1	FUNCTION_58	CALL_3
0x9caf	      0xbe00000000	                              mov esi, 0	      4865	ops.c	ELSE_1	FUNCTION_58	CALL_3
0x9cb4	          0x4889c7	                            mov rdi, rax	      4865	ops.c	ELSE_1	FUNCTION_58	CALL_3
0x9cb7	      0xe800000000	                          call 0x4009cfc	      4865	ops.c	ELSE_1	FUNCTION_58	CALL_3
0x9cbc	              0x90	                                     nop	      4866	ops.c	ELSE_1	FUNCTION_58
0x9cbd	              0xc9	                                   leave	      4866	ops.c	ELSE_1	FUNCTION_58
0x9cbe	              0xc3	                                     ret	      4866	ops.c	ELSE_1	FUNCTION_58
get_yank_register	CALL,5:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,7:IF,9	68
0x14b7	              0x55	                                push rbp	       905	ops.c	FUNCTION_15
0x14b8	          0x4889e5	                            mov rbp, rsp	       905	ops.c	FUNCTION_15
0x14bb	          0x897dec	             mov dword [rbp - 0x14], edi	       905	ops.c	FUNCTION_15
0x14be	          0x8975e8	             mov dword [rbp - 0x18], esi	       905	ops.c	FUNCTION_15
0x14c1	    0xc70500000000	               mov dword [0x0400150b], 0	       908	ops.c	FUNCTION_15
0x14cb	        0x837dec00	               cmp dword [rbp - 0x14], 0	       909	ops.c	FUNCTION_15	IF_1
0x14cf	            0x7406	                            je 0x4001517	       909	ops.c	FUNCTION_15	IF_1
0x14d1	        0x837dec22	           cmp dword [rbp - 0x14], 0x22 	       909	ops.c	FUNCTION_15	IF_1
0x14d5	            0x7525	                           jne 0x400153c	       909	ops.c	FUNCTION_15	IF_1
0x14d7	        0x837de800	               cmp dword [rbp - 0x18], 0	       909	ops.c	FUNCTION_15	IF_1
0x14db	            0x751f	                           jne 0x400153c	       909	ops.c	FUNCTION_15	IF_1
0x14dd	    0x488b05000000	            mov rax, qword [0x04001524] 	       909	ops.c	FUNCTION_15	IF_1
0x14e4	          0x4885c0	                           test rax, rax	       909	ops.c	FUNCTION_15	IF_1
0x14e7	            0x7413	                            je 0x400153c	       909	ops.c	FUNCTION_15	IF_1
0x14e9	    0x488b05000000	            mov rax, qword [0x04001530] 	       911	ops.c	FUNCTION_15	IF_1
0x14f0	    0x488905000000	            mov qword [0x04001537], rax 	       911	ops.c	FUNCTION_15	IF_1
0x14f7	      0xe9b5000000	                           jmp 0x40015f1	       912	ops.c	FUNCTION_15	IF_1
0x14fc	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       914	ops.c	FUNCTION_15
0x14ff	          0x8945fc	                mov dword [rbp - 4], eax	       914	ops.c	FUNCTION_15
0x1502	          0x8b45fc	                mov eax, dword [rbp - 4]	       915	ops.c	FUNCTION_15	IF_2	CALL_1
0x1505	          0x83e830	                           sub eax, 0x30	       915	ops.c	FUNCTION_15	IF_2	CALL_1
0x1508	          0x83f809	                              cmp eax, 9	       915	ops.c	FUNCTION_15	IF_2	CALL_1
0x150b	            0x7706	                            ja 0x4001553	       915	ops.c	FUNCTION_15	IF_2	CALL_1
0x150d	        0x836dfc30	               sub dword [rbp - 4], 0x30	       916	ops.c	FUNCTION_15	IF_2
0x1511	            0xeb74	                           jmp 0x40015c7	       916	ops.c	FUNCTION_15	IF_2
0x1513	          0x8b45fc	                mov eax, dword [rbp - 4]	       917	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x1516	          0x83e861	                           sub eax, 0x61	       917	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x1519	          0x83f819	                           cmp eax, 0x19	       917	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x151c	            0x7706	                            ja 0x4001564	       917	ops.c	FUNCTION_15	ELSE_1	IF_3	CALL_2
0x151e	        0x836dfc57	               sub dword [rbp - 4], 0x57	       918	ops.c	FUNCTION_15	ELSE_1	IF_3
0x1522	            0xeb63	                           jmp 0x40015c7	       918	ops.c	FUNCTION_15	ELSE_1	IF_3
0x1524	          0x8b45fc	                mov eax, dword [rbp - 4]	       919	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x1527	          0x83e841	                           sub eax, 0x41	       919	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x152a	          0x83f819	                           cmp eax, 0x19	       919	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x152d	            0x7710	                            ja 0x400157f	       919	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_4
0x152f	        0x836dfc37	               sub dword [rbp - 4], 0x37	       921	ops.c	FUNCTION_15	ELSE_2	IF_4	CALL_5
0x1533	    0xc70500000000	               mov dword [0x0400157d], 1	       922	ops.c	FUNCTION_15	ELSE_2	IF_4
0x153d	            0xeb48	                           jmp 0x40015c7	       922	ops.c	FUNCTION_15	ELSE_2	IF_4
0x153f	        0x837dec2d	           cmp dword [rbp - 0x14], 0x2d 	       924	ops.c	FUNCTION_15	ELSE_3	IF_5
0x1543	            0x7509	                           jne 0x400158e	       924	ops.c	FUNCTION_15	ELSE_3	IF_5
0x1545	    0xc745fc240000	               mov dword [rbp - 4], 0x24	       925	ops.c	FUNCTION_15	ELSE_3	IF_5
0x154c	            0xeb39	                           jmp 0x40015c7	       925	ops.c	FUNCTION_15	ELSE_3	IF_5
0x154e	    0x8b0500000000	            mov eax, dword [0x04001594] 	       928	ops.c	FUNCTION_15	ELSE_4	IF_6
0x1554	            0x85c0	                           test eax, eax	       928	ops.c	FUNCTION_15	ELSE_4	IF_6
0x1556	            0x740f	                            je 0x40015a7	       928	ops.c	FUNCTION_15	ELSE_4	IF_6
0x1558	        0x837dec2a	           cmp dword [rbp - 0x14], 0x2a 	       928	ops.c	FUNCTION_15	ELSE_4	IF_6
0x155c	            0x7509	                           jne 0x40015a7	       928	ops.c	FUNCTION_15	ELSE_4	IF_6
0x155e	    0xc745fc250000	               mov dword [rbp - 4], 0x25	       929	ops.c	FUNCTION_15	ELSE_4	IF_6
0x1565	            0xeb20	                           jmp 0x40015c7	       929	ops.c	FUNCTION_15	ELSE_4	IF_6
0x1567	    0x8b0500000000	            mov eax, dword [0x040015ad] 	       931	ops.c	FUNCTION_15	ELSE_5	IF_7
0x156d	            0x85c0	                           test eax, eax	       931	ops.c	FUNCTION_15	ELSE_5	IF_7
0x156f	            0x740f	                            je 0x40015c0	       931	ops.c	FUNCTION_15	ELSE_5	IF_7
0x1571	        0x837dec2b	           cmp dword [rbp - 0x14], 0x2b 	       931	ops.c	FUNCTION_15	ELSE_5	IF_7
0x1575	            0x7509	                           jne 0x40015c0	       931	ops.c	FUNCTION_15	ELSE_5	IF_7
0x1577	    0xc745fc260000	               mov dword [rbp - 4], 0x26	       932	ops.c	FUNCTION_15	ELSE_5	IF_7
0x157e	            0xeb07	                           jmp 0x40015c7	       932	ops.c	FUNCTION_15	ELSE_5	IF_7
0x1580	    0xc745fc000000	                  mov dword [rbp - 4], 0	       939	ops.c	FUNCTION_15	ELSE_7
0x1587	          0x8b45fc	                mov eax, dword [rbp - 4]	       940	ops.c	FUNCTION_15
0x158a	            0x4898	                                    cdqe	       940	ops.c	FUNCTION_15
0x158c	        0x48c1e005	                              shl rax, 5	       940	ops.c	FUNCTION_15
0x1590	    0x480500000000	                              add rax, 0	       940	ops.c	FUNCTION_15
0x1596	    0x488905000000	            mov qword [0x040015dd], rax 	       940	ops.c	FUNCTION_15
0x159d	        0x837de800	               cmp dword [rbp - 0x18], 0	       941	ops.c	FUNCTION_15	IF_9
0x15a1	            0x740e	                            je 0x40015f1	       941	ops.c	FUNCTION_15	IF_9
0x15a3	    0x488b05000000	            mov rax, qword [0x040015ea] 	       942	ops.c	FUNCTION_15	IF_9
0x15aa	    0x488905000000	            mov qword [0x040015f1], rax 	       942	ops.c	FUNCTION_15	IF_9
0x15b1	              0x5d	                                 pop rbp	       943	ops.c	FUNCTION_15
0x15b2	              0xc3	                                     ret	       943	ops.c	FUNCTION_15
get_expr_register	CALL,3:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,1:IF,2	26
0x12f4	              0x55	                                push rbp	       794	ops.c	FUNCTION_10
0x12f5	          0x4889e5	                            mov rbp, rsp	       794	ops.c	FUNCTION_10
0x12f8	        0x4883ec10	                           sub rsp, 0x10	       794	ops.c	FUNCTION_10
0x12fc	      0xba00000000	                              mov edx, 0	       797	ops.c	FUNCTION_10	CALL_1
0x1301	      0xbe00000000	                              mov esi, 0	       797	ops.c	FUNCTION_10	CALL_1
0x1306	      0xbf3d000000	                           mov edi, 0x3d	       797	ops.c	FUNCTION_10	CALL_1
0x130b	      0xe800000000	                          call 0x4001350	       797	ops.c	FUNCTION_10	CALL_1
0x1310	        0x488945f8	                mov qword [rbp - 8], rax	       797	ops.c	FUNCTION_10	CALL_1
0x1314	      0x48837df800	                  cmp qword [rbp - 8], 0	       798	ops.c	FUNCTION_10	IF_1
0x1319	            0x7507	                           jne 0x4001362	       798	ops.c	FUNCTION_10	IF_1
0x131b	      0xb800000000	                              mov eax, 0	       799	ops.c	FUNCTION_10	IF_1
0x1320	            0xeb2a	                           jmp 0x400138c	       799	ops.c	FUNCTION_10	IF_1
0x1322	        0x488b45f8	                mov rax, qword [rbp - 8]	       800	ops.c	FUNCTION_10	IF_2
0x1326	           0xfb600	                   movzx eax, byte [rax]	       800	ops.c	FUNCTION_10	IF_2
0x1329	            0x84c0	                             test al, al	       800	ops.c	FUNCTION_10	IF_2
0x132b	            0x750e	                           jne 0x400137b	       800	ops.c	FUNCTION_10	IF_2
0x132d	        0x488b45f8	                mov rax, qword [rbp - 8]	       801	ops.c	FUNCTION_10	CALL_2
0x1331	          0x4889c7	                            mov rdi, rax	       801	ops.c	FUNCTION_10	CALL_2
0x1334	      0xe800000000	                          call 0x4001379	       801	ops.c	FUNCTION_10	CALL_2
0x1339	            0xeb0c	                           jmp 0x4001387	       801	ops.c	FUNCTION_10	CALL_2
0x133b	        0x488b45f8	                mov rax, qword [rbp - 8]	       803	ops.c	FUNCTION_10	CALL_3
0x133f	          0x4889c7	                            mov rdi, rax	       803	ops.c	FUNCTION_10	CALL_3
0x1342	      0xe800000000	                          call 0x4001387	       803	ops.c	FUNCTION_10	CALL_3
0x1347	      0xb83d000000	                           mov eax, 0x3d	       804	ops.c	FUNCTION_10
0x134c	              0xc9	                                   leave	       805	ops.c	FUNCTION_10
0x134d	              0xc3	                                     ret	       805	ops.c	FUNCTION_10
op_reindent	CALL,15:FOR,1:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,3:IF,10	185
0x1001	              0x55	                                push rbp	       702	ops.c	FUNCTION_9
0x1002	          0x4889e5	                            mov rbp, rsp	       702	ops.c	FUNCTION_9
0x1005	        0x4883ec40	                           sub rsp, 0x40	       702	ops.c	FUNCTION_9
0x1009	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       702	ops.c	FUNCTION_9
0x100d	        0x488975c0	             mov qword [rbp - 0x40], rsi	       702	ops.c	FUNCTION_9
0x1011	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       706	ops.c	FUNCTION_9
0x1019	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       707	ops.c	FUNCTION_9
0x1021	    0x488b05000000	            mov rax, qword [0x04001068] 	       708	ops.c	FUNCTION_9
0x1028	        0x488b4038	            mov rax, qword [rax + 0x38] 	       708	ops.c	FUNCTION_9
0x102c	        0x488945f0	             mov qword [rbp - 0x10], rax	       708	ops.c	FUNCTION_9
0x1030	    0x488b05000000	            mov rax, qword [0x04001077] 	       711	ops.c	FUNCTION_9	IF_1
0x1037	    0x8b8028150000	          mov eax, dword [rax + 0x1528] 	       711	ops.c	FUNCTION_9	IF_1
0x103d	            0x85c0	                           test eax, eax	       711	ops.c	FUNCTION_9	IF_1
0x103f	            0x7517	                           jne 0x4001098	       711	ops.c	FUNCTION_9	IF_1
0x1041	      0xbf00000000	                              mov edi, 0	       713	ops.c	FUNCTION_9	IF_1	CALL_2
0x1046	      0xe800000000	                          call 0x400108b	       713	ops.c	FUNCTION_9	IF_1	CALL_2
0x104b	          0x4889c7	                            mov rdi, rax	       713	ops.c	FUNCTION_9	IF_1	CALL_2
0x104e	      0xe800000000	                          call 0x4001093	       713	ops.c	FUNCTION_9	IF_1	CALL_2
0x1053	      0xe99a020000	                           jmp 0x4001332	       714	ops.c	FUNCTION_9	IF_1
0x1058	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       717	ops.c	FUNCTION_9	FOR_1
0x105c	        0x488b4050	            mov rax, qword [rax + 0x50] 	       717	ops.c	FUNCTION_9	FOR_1
0x1060	        0x488945d8	             mov qword [rbp - 0x28], rax	       717	ops.c	FUNCTION_9	FOR_1
0x1064	      0xe955010000	                           jmp 0x40011fe	       717	ops.c	FUNCTION_9	FOR_1
0x1069	      0x48837dd801	               cmp qword [rbp - 0x28], 1	       722	ops.c	FUNCTION_9	FOR_1	IF_2
0x106e	     0xf8e93000000	                           jle 0x4001147	       722	ops.c	FUNCTION_9	FOR_1	IF_2
0x1074	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x1078	    0x48ba0bd7a370	          movabs rdx, 0xa3d70a3d70a3d70b	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x1082	          0x4889c8	                            mov rax, rcx	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x1085	          0x48f7ea	                                imul rdx	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x1088	        0x488d040a	                    lea rax, [rdx + rcx]	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x108c	        0x48c1f805	                              sar rax, 5	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x1090	          0x4889c2	                            mov rdx, rax	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x1093	          0x4889c8	                            mov rax, rcx	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x1096	        0x48c1f83f	                           sar rax, 0x3f	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x109a	          0x4829c2	                            sub rdx, rax	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x109d	          0x4889d0	                            mov rax, rdx	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x10a0	        0x48c1e002	                              shl rax, 2	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x10a4	          0x4801d0	                            add rax, rdx	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x10a7	    0x488d14850000	                        lea rdx, [rax*4]	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x10af	          0x4801d0	                            add rax, rdx	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x10b2	          0x4801c0	                            add rax, rax	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x10b5	          0x4829c1	                            sub rcx, rax	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x10b8	          0x4889ca	                            mov rdx, rcx	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x10bb	          0x4885d2	                           test rdx, rdx	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x10be	            0x7412	                            je 0x4001112	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x10c0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x10c4	        0x488b4050	            mov rax, qword [rax + 0x50] 	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x10c8	        0x4883e801	                              sub rax, 1	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x10cc	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x10d0	            0x7535	                           jne 0x4001147	       723	ops.c	FUNCTION_9	FOR_1	IF_2
0x10d2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       724	ops.c	FUNCTION_9	FOR_1	IF_2
0x10d6	        0x488b5050	            mov rdx, qword [rax + 0x50] 	       724	ops.c	FUNCTION_9	FOR_1	IF_2
0x10da	    0x488b05000000	            mov rax, qword [0x04001121] 	       724	ops.c	FUNCTION_9	FOR_1	IF_2
0x10e1	          0x4839c2	                            cmp rdx, rax	       724	ops.c	FUNCTION_9	FOR_1	IF_2
0x10e4	            0x7e21	                           jle 0x4001147	       724	ops.c	FUNCTION_9	FOR_1	IF_2
0x10e6	      0xbf00000000	                              mov edi, 0	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x10eb	      0xe800000000	                          call 0x4001130	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x10f0	          0x4889c2	                            mov rdx, rax	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x10f3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x10f7	          0x4889c6	                            mov rsi, rax	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x10fa	          0x4889d7	                            mov rdi, rdx	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x10fd	      0xb800000000	                              mov eax, 0	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x1102	      0xe800000000	                          call 0x4001147	       725	ops.c	FUNCTION_9	FOR_1	CALL_4
0x1107	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       732	ops.c	FUNCTION_9	FOR_1	IF_3
0x110b	        0x488b4050	            mov rax, qword [rax + 0x50] 	       732	ops.c	FUNCTION_9	FOR_1	IF_3
0x110f	        0x4883e801	                              sub rax, 1	       732	ops.c	FUNCTION_9	FOR_1	IF_3
0x1113	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       732	ops.c	FUNCTION_9	FOR_1	IF_3
0x1117	            0x7518	                           jne 0x4001171	       732	ops.c	FUNCTION_9	FOR_1	IF_3
0x1119	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       732	ops.c	FUNCTION_9	FOR_1	IF_3
0x111d	        0x488b4050	            mov rax, qword [rax + 0x50] 	       732	ops.c	FUNCTION_9	FOR_1	IF_3
0x1121	        0x4883f801	                              cmp rax, 1	       732	ops.c	FUNCTION_9	FOR_1	IF_3
0x1125	            0x740a	                            je 0x4001171	       732	ops.c	FUNCTION_9	FOR_1	IF_3
0x1127	    0x48817dc00000	               cmp qword [rbp - 0x40], 0	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x112f	            0x746c	                            je 0x40011dd	       733	ops.c	FUNCTION_9	FOR_1	IF_3
0x1131	      0xe800000000	                          call 0x4001176	       736	ops.c	FUNCTION_9	FOR_1	IF_3	CALL_6
0x1136	          0x4889c7	                            mov rdi, rax	       736	ops.c	FUNCTION_9	FOR_1	IF_3	CALL_6
0x1139	      0xe800000000	                          call 0x400117e	       736	ops.c	FUNCTION_9	FOR_1	IF_3	CALL_6
0x113e	        0x488945f8	                mov qword [rbp - 8], rax	       736	ops.c	FUNCTION_9	FOR_1	IF_3	CALL_6
0x1142	        0x488b45f8	                mov rax, qword [rbp - 8]	       737	ops.c	FUNCTION_9	FOR_1	IF_3	IF_4
0x1146	           0xfb600	                   movzx eax, byte [rax]	       737	ops.c	FUNCTION_9	FOR_1	IF_3	IF_4
0x1149	            0x84c0	                             test al, al	       737	ops.c	FUNCTION_9	FOR_1	IF_3	IF_4
0x114b	            0x7509	                           jne 0x4001196	       737	ops.c	FUNCTION_9	FOR_1	IF_3	IF_4
0x114d	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       738	ops.c	FUNCTION_9	FOR_1	IF_3	IF_4
0x1154	            0xeb09	                           jmp 0x400119f	       738	ops.c	FUNCTION_9	FOR_1	IF_3	IF_4
0x1156	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       740	ops.c	FUNCTION_9	FOR_1	IF_3	CALL_7
0x115a	            0xffd0	                                call rax	       740	ops.c	FUNCTION_9	FOR_1	IF_3	CALL_7
0x115c	          0x8945d4	             mov dword [rbp - 0x2c], eax	       740	ops.c	FUNCTION_9	FOR_1	IF_3	CALL_7
0x115f	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x1163	            0x7838	                            js 0x40011dd	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x1165	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x1168	      0xbe04000000	                              mov esi, 4	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x116d	            0x89c7	                            mov edi, eax	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x116f	      0xe800000000	                          call 0x40011b4	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x1174	            0x85c0	                           test eax, eax	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x1176	            0x7425	                            je 0x40011dd	       742	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	CALL_8
0x1178	      0x48837de000	               cmp qword [rbp - 0x20], 0	       745	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	IF_6
0x117d	            0x750f	                           jne 0x40011ce	       745	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	IF_6
0x117f	    0x488b05000000	            mov rax, qword [0x040011c6] 	       746	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	IF_6
0x1186	        0x488b4038	            mov rax, qword [rax + 0x38] 	       746	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	IF_6
0x118a	        0x488945e0	             mov qword [rbp - 0x20], rax	       746	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5	IF_6
0x118e	    0x488b05000000	            mov rax, qword [0x040011d5] 	       747	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5
0x1195	        0x488b4038	            mov rax, qword [rax + 0x38] 	       747	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5
0x1199	        0x488945e8	             mov qword [rbp - 0x18], rax	       747	ops.c	FUNCTION_9	FOR_1	IF_3	IF_5
0x119d	    0x488b05000000	            mov rax, qword [0x040011e4] 	       750	ops.c	FUNCTION_9	FOR_1
0x11a4	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       750	ops.c	FUNCTION_9	FOR_1
0x11a8	        0x4883c201	                              add rdx, 1	       750	ops.c	FUNCTION_9	FOR_1
0x11ac	        0x48895038	             mov qword [rax + 0x38], rdx	       750	ops.c	FUNCTION_9	FOR_1
0x11b0	    0x488b05000000	            mov rax, qword [0x040011f7] 	       751	ops.c	FUNCTION_9	FOR_1
0x11b7	    0xc74040000000	               mov dword [rax + 0x40], 0	       751	ops.c	FUNCTION_9	FOR_1
0x11be	      0x48836dd801	               sub qword [rbp - 0x28], 1	       717	ops.c	FUNCTION_9	FOR_1
0x11c3	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       717	ops.c	FUNCTION_9	FOR_1
0x11c8	            0x780e	                            js 0x4001218	       717	ops.c	FUNCTION_9	FOR_1
0x11ca	    0x8b0500000000	            mov eax, dword [0x04001210] 	       717	ops.c	FUNCTION_9	FOR_1
0x11d0	            0x85c0	                           test eax, eax	       717	ops.c	FUNCTION_9	FOR_1
0x11d2	     0xf8491feffff	                            je 0x40010a9	       717	ops.c	FUNCTION_9	FOR_1
0x11d8	    0x488b05000000	            mov rax, qword [0x0400121f] 	       755	ops.c	FUNCTION_9
0x11df	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       755	ops.c	FUNCTION_9
0x11e3	        0x48895038	             mov qword [rax + 0x38], rdx	       755	ops.c	FUNCTION_9
0x11e7	      0xbf06000000	                              mov edi, 6	       756	ops.c	FUNCTION_9	CALL_9
0x11ec	      0xe800000000	                          call 0x4001231	       756	ops.c	FUNCTION_9	CALL_9
0x11f1	      0x48837de800	               cmp qword [rbp - 0x18], 0	       761	ops.c	FUNCTION_9	IF_7
0x11f6	            0x743c	                            je 0x4001274	       761	ops.c	FUNCTION_9	IF_7
0x11f8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       763	ops.c	FUNCTION_9	IF_7
0x11fc	          0x8b405c	            mov eax, dword [rax + 0x5c] 	       763	ops.c	FUNCTION_9	IF_7
0x11ff	            0x85c0	                           test eax, eax	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x1201	            0x7411	                            je 0x4001254	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x1203	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       763	ops.c	FUNCTION_9	IF_7
0x1207	        0x488b5050	            mov rdx, qword [rax + 0x50] 	       763	ops.c	FUNCTION_9	IF_7
0x120b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x120f	          0x4801d0	                            add rax, rdx	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x1212	            0xeb08	                           jmp 0x400125c	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x1214	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x1218	        0x4883c001	                              add rax, 1	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x121c	        0x488b7de0	             mov rdi, qword [rbp - 0x20]	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x1220	      0xb900000000	                              mov ecx, 0	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x1225	          0x4889c2	                            mov rdx, rax	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x1228	      0xbe00000000	                              mov esi, 0	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x122d	      0xe800000000	                          call 0x4001272	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x1232	            0xeb15	                           jmp 0x4001289	       762	ops.c	FUNCTION_9	IF_7	CALL_10
0x1234	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       765	ops.c	FUNCTION_9	ELSE_2	IF_8
0x1238	          0x8b405c	            mov eax, dword [rax + 0x5c] 	       765	ops.c	FUNCTION_9	ELSE_2	IF_8
0x123b	            0x85c0	                           test eax, eax	       765	ops.c	FUNCTION_9	ELSE_2	IF_8
0x123d	            0x740a	                            je 0x4001289	       765	ops.c	FUNCTION_9	ELSE_2	IF_8
0x123f	      0xbf14000000	                           mov edi, 0x14	       766	ops.c	FUNCTION_9	ELSE_2	IF_8
0x1244	      0xe800000000	                          call 0x4001289	       766	ops.c	FUNCTION_9	ELSE_2	IF_8
0x1249	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       768	ops.c	FUNCTION_9	IF_9
0x124d	        0x488b5050	            mov rdx, qword [rax + 0x50] 	       768	ops.c	FUNCTION_9	IF_9
0x1251	    0x488b05000000	            mov rax, qword [0x04001298] 	       768	ops.c	FUNCTION_9	IF_9
0x1258	          0x4839c2	                            cmp rdx, rax	       768	ops.c	FUNCTION_9	IF_9
0x125b	            0x7e53	                           jle 0x40012f0	       768	ops.c	FUNCTION_9	IF_9
0x125d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       770	ops.c	FUNCTION_9	IF_9
0x1261	        0x488b4050	            mov rax, qword [rax + 0x50] 	       770	ops.c	FUNCTION_9	IF_9
0x1265	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       770	ops.c	FUNCTION_9	IF_9
0x1269	        0x4883c201	                              add rdx, 1	       770	ops.c	FUNCTION_9	IF_9
0x126d	          0x4829d0	                            sub rax, rdx	       770	ops.c	FUNCTION_9	IF_9
0x1270	        0x488945d8	             mov qword [rbp - 0x28], rax	       770	ops.c	FUNCTION_9	IF_9
0x1274	      0x48837dd801	               cmp qword [rbp - 0x28], 1	       771	ops.c	FUNCTION_9	IF_9	IF_10
0x1279	            0x7514	                           jne 0x40012cf	       771	ops.c	FUNCTION_9	IF_9	IF_10
0x127b	      0xbf00000000	                              mov edi, 0	       772	ops.c	FUNCTION_9	IF_9	CALL_13
0x1280	      0xe800000000	                          call 0x40012c5	       772	ops.c	FUNCTION_9	IF_9	CALL_13
0x1285	          0x4889c7	                            mov rdi, rax	       772	ops.c	FUNCTION_9	IF_9	CALL_13
0x1288	      0xe800000000	                          call 0x40012cd	       772	ops.c	FUNCTION_9	IF_9	CALL_13
0x128d	            0xeb21	                           jmp 0x40012f0	       772	ops.c	FUNCTION_9	IF_9	CALL_13
0x128f	      0xbf00000000	                              mov edi, 0	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x1294	      0xe800000000	                          call 0x40012d9	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x1299	          0x4889c2	                            mov rdx, rax	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x129c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x12a0	          0x4889c6	                            mov rsi, rax	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x12a3	          0x4889d7	                            mov rdi, rdx	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x12a6	      0xb800000000	                              mov eax, 0	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x12ab	      0xe800000000	                          call 0x40012f0	       774	ops.c	FUNCTION_9	IF_9	CALL_15
0x12b0	    0x488b0d000000	            mov rcx, qword [0x040012f7] 	       777	ops.c	FUNCTION_9
0x12b7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       777	ops.c	FUNCTION_9
0x12bb	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       777	ops.c	FUNCTION_9
0x12bf	        0x488b4020	            mov rax, qword [rax + 0x20] 	       777	ops.c	FUNCTION_9
0x12c3	    0x488981d01100	          mov qword [rcx + 0x11d0], rax 	       777	ops.c	FUNCTION_9
0x12ca	    0x488991d81100	          mov qword [rcx + 0x11d8], rdx 	       777	ops.c	FUNCTION_9
0x12d1	    0x488b0d000000	            mov rcx, qword [0x04001318] 	       778	ops.c	FUNCTION_9
0x12d8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       778	ops.c	FUNCTION_9
0x12dc	        0x488b5038	            mov rdx, qword [rax + 0x38] 	       778	ops.c	FUNCTION_9
0x12e0	        0x488b4030	            mov rax, qword [rax + 0x30] 	       778	ops.c	FUNCTION_9
0x12e4	    0x488981f01100	          mov qword [rcx + 0x11f0], rax 	       778	ops.c	FUNCTION_9
0x12eb	    0x488991f81100	          mov qword [rcx + 0x11f8], rdx 	       778	ops.c	FUNCTION_9
0x12f2	              0xc9	                                   leave	       779	ops.c	FUNCTION_9
0x12f3	              0xc3	                                     ret	       779	ops.c	FUNCTION_9
getreg_wrap_one_line	CALL,3:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,3	34
0xd9f9	              0x55	                                push rbp	      6762	ops.c	FUNCTION_81
0xd9fa	          0x4889e5	                            mov rbp, rsp	      6762	ops.c	FUNCTION_81
0xd9fd	        0x4883ec20	                           sub rsp, 0x20	      6762	ops.c	FUNCTION_81
0xda01	        0x48897de8	             mov qword [rbp - 0x18], rdi	      6762	ops.c	FUNCTION_81
0xda05	          0x8975e4	             mov dword [rbp - 0x1c], esi	      6762	ops.c	FUNCTION_81
0xda08	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	      6763	ops.c	FUNCTION_81	IF_1
0xda0b	          0x83e004	                              and eax, 4	      6763	ops.c	FUNCTION_81	IF_1
0xda0e	            0x85c0	                           test eax, eax	      6763	ops.c	FUNCTION_81	IF_1
0xda10	            0x7452	                            je 0x400daa4	      6763	ops.c	FUNCTION_81	IF_1
0xda12	      0xe800000000	                          call 0x400da57	      6765	ops.c	FUNCTION_81	IF_1	CALL_1
0xda17	        0x488945f8	                mov qword [rbp - 8], rax	      6765	ops.c	FUNCTION_81	IF_1	CALL_1
0xda1b	      0x48837df800	                  cmp qword [rbp - 8], 0	      6767	ops.c	FUNCTION_81	IF_1	IF_2
0xda20	            0x743c	                            je 0x400da9e	      6767	ops.c	FUNCTION_81	IF_1	IF_2
0xda22	        0x488b45f8	                mov rax, qword [rbp - 8]	      6769	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_2
0xda26	      0xbaffffffff	                     mov edx, 0xffffffff	      6769	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_2
0xda2b	      0xbe00000000	                              mov esi, 0	      6769	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_2
0xda30	          0x4889c7	                            mov rdi, rax	      6769	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_2
0xda33	      0xe800000000	                          call 0x400da78	      6769	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_2
0xda38	            0x85c0	                           test eax, eax	      6769	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_2
0xda3a	            0x7513	                           jne 0x400da8f	      6769	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_2
0xda3c	        0x488b45f8	                mov rax, qword [rbp - 8]	      6771	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_3
0xda40	          0x4889c7	                            mov rdi, rax	      6771	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_3
0xda43	      0xe800000000	                          call 0x400da88	      6771	ops.c	FUNCTION_81	IF_1	IF_2	IF_3	CALL_3
0xda48	      0xb800000000	                              mov eax, 0	      6772	ops.c	FUNCTION_81	IF_1	IF_2	IF_3
0xda4d	            0xeb19	                           jmp 0x400daa8	      6772	ops.c	FUNCTION_81	IF_1	IF_2	IF_3
0xda4f	        0x488b45f8	                mov rax, qword [rbp - 8]	      6774	ops.c	FUNCTION_81	IF_1	IF_2
0xda53	          0x488b00	                    mov rax, qword [rax]	      6774	ops.c	FUNCTION_81	IF_1	IF_2
0xda56	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      6774	ops.c	FUNCTION_81	IF_1	IF_2
0xda5a	        0x48895018	             mov qword [rax + 0x18], rdx	      6774	ops.c	FUNCTION_81	IF_1	IF_2
0xda5e	        0x488b45f8	                mov rax, qword [rbp - 8]	      6776	ops.c	FUNCTION_81	IF_1
0xda62	            0xeb04	                           jmp 0x400daa8	      6776	ops.c	FUNCTION_81	IF_1
0xda64	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6778	ops.c	FUNCTION_81
0xda68	              0xc9	                                   leave	      6779	ops.c	FUNCTION_81
0xda69	              0xc3	                                     ret	      6779	ops.c	FUNCTION_81
get_reg_contents	CALL,18:FOR,3:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,16	221
0xda6a	              0x55	                                push rbp	      6793	ops.c	FUNCTION_82
0xda6b	          0x4889e5	                            mov rbp, rsp	      6793	ops.c	FUNCTION_82
0xda6e	        0x4883ec40	                           sub rsp, 0x40	      6793	ops.c	FUNCTION_82
0xda72	          0x897dcc	             mov dword [rbp - 0x34], edi	      6793	ops.c	FUNCTION_82
0xda75	          0x8975c8	             mov dword [rbp - 0x38], esi	      6793	ops.c	FUNCTION_82
0xda78	    0x64488b042528	                mov rax, qword fs:[0x28]	      6793	ops.c	FUNCTION_82
0xda81	        0x488945f8	                mov qword [rbp - 8], rax	      6793	ops.c	FUNCTION_82
0xda85	            0x31c0	                            xor eax, eax	      6793	ops.c	FUNCTION_82
0xda87	        0x837dcc3d	           cmp dword [rbp - 0x34], 0x3d 	      6800	ops.c	FUNCTION_82	IF_1
0xda8b	            0x7552	                           jne 0x400db1f	      6800	ops.c	FUNCTION_82	IF_1
0xda8d	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      6802	ops.c	FUNCTION_82	IF_1	IF_2
0xda90	          0x83e001	                              and eax, 1	      6802	ops.c	FUNCTION_82	IF_1	IF_2
0xda93	            0x85c0	                           test eax, eax	      6802	ops.c	FUNCTION_82	IF_1	IF_2
0xda95	            0x740a	                            je 0x400dae1	      6802	ops.c	FUNCTION_82	IF_1	IF_2
0xda97	      0xb800000000	                              mov eax, 0	      6803	ops.c	FUNCTION_82	IF_1	IF_2
0xda9c	      0xe915030000	                           jmp 0x400ddf6	      6803	ops.c	FUNCTION_82	IF_1	IF_2
0xdaa1	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      6804	ops.c	FUNCTION_82	IF_1	IF_3
0xdaa4	          0x83e002	                              and eax, 2	      6804	ops.c	FUNCTION_82	IF_1	IF_3
0xdaa7	            0x85c0	                           test eax, eax	      6804	ops.c	FUNCTION_82	IF_1	IF_3
0xdaa9	            0x741a	                            je 0x400db05	      6804	ops.c	FUNCTION_82	IF_1	IF_3
0xdaab	      0xe800000000	                          call 0x400daf0	      6805	ops.c	FUNCTION_82	IF_1	CALL_2
0xdab0	          0x4889c2	                            mov rdx, rax	      6805	ops.c	FUNCTION_82	IF_1	CALL_2
0xdab3	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      6805	ops.c	FUNCTION_82	IF_1	CALL_2
0xdab6	            0x89c6	                            mov esi, eax	      6805	ops.c	FUNCTION_82	IF_1	CALL_2
0xdab8	          0x4889d7	                            mov rdi, rdx	      6805	ops.c	FUNCTION_82	IF_1	CALL_2
0xdabb	      0xe839ffffff	           call sym.getreg_wrap_one_line	      6805	ops.c	FUNCTION_82	IF_1	CALL_2
0xdac0	      0xe9f1020000	                           jmp 0x400ddf6	      6805	ops.c	FUNCTION_82	IF_1	CALL_2
0xdac5	      0xe800000000	                          call 0x400db0a	      6806	ops.c	FUNCTION_82	IF_1	CALL_4
0xdaca	          0x4889c2	                            mov rdx, rax	      6806	ops.c	FUNCTION_82	IF_1	CALL_4
0xdacd	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      6806	ops.c	FUNCTION_82	IF_1	CALL_4
0xdad0	            0x89c6	                            mov esi, eax	      6806	ops.c	FUNCTION_82	IF_1	CALL_4
0xdad2	          0x4889d7	                            mov rdi, rdx	      6806	ops.c	FUNCTION_82	IF_1	CALL_4
0xdad5	      0xe81fffffff	           call sym.getreg_wrap_one_line	      6806	ops.c	FUNCTION_82	IF_1	CALL_4
0xdada	      0xe9d7020000	                           jmp 0x400ddf6	      6806	ops.c	FUNCTION_82	IF_1	CALL_4
0xdadf	        0x837dcc40	           cmp dword [rbp - 0x34], 0x40 	      6809	ops.c	FUNCTION_82	IF_4
0xdae3	            0x7507	                           jne 0x400db2c	      6809	ops.c	FUNCTION_82	IF_4
0xdae5	    0xc745cc220000	           mov dword [rbp - 0x34], 0x22 	      6810	ops.c	FUNCTION_82	IF_4
0xdaec	        0x837dcc00	               cmp dword [rbp - 0x34], 0	      6813	ops.c	FUNCTION_82	IF_5	CALL_5
0xdaf0	            0x741d	                            je 0x400db4f	      6813	ops.c	FUNCTION_82	IF_5	CALL_5
0xdaf2	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6813	ops.c	FUNCTION_82	IF_5	CALL_5
0xdaf5	      0xbe00000000	                              mov esi, 0	      6813	ops.c	FUNCTION_82	IF_5	CALL_5
0xdafa	            0x89c7	                            mov edi, eax	      6813	ops.c	FUNCTION_82	IF_5	CALL_5
0xdafc	      0xe800000000	                          call 0x400db41	      6813	ops.c	FUNCTION_82	IF_5	CALL_5
0xdb01	            0x85c0	                           test eax, eax	      6813	ops.c	FUNCTION_82	IF_5	CALL_5
0xdb03	            0x750a	                           jne 0x400db4f	      6813	ops.c	FUNCTION_82	IF_5	CALL_5
0xdb05	      0xb800000000	                              mov eax, 0	      6814	ops.c	FUNCTION_82	IF_5
0xdb0a	      0xe9a7020000	                           jmp 0x400ddf6	      6814	ops.c	FUNCTION_82	IF_5
0xdb0f	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6817	ops.c	FUNCTION_82	CALL_6
0xdb12	            0x89c7	                            mov edi, eax	      6817	ops.c	FUNCTION_82	CALL_6
0xdb14	      0xe800000000	                          call 0x400db59	      6817	ops.c	FUNCTION_82	CALL_6
0xdb19	          0x8945cc	             mov dword [rbp - 0x34], eax	      6817	ops.c	FUNCTION_82	CALL_6
0xdb1c	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      6820	ops.c	FUNCTION_82	IF_6	CALL_7
0xdb20	        0x488d75d8	                   lea rsi, [rbp - 0x28]	      6820	ops.c	FUNCTION_82	IF_6	CALL_7
0xdb24	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6820	ops.c	FUNCTION_82	IF_6	CALL_7
0xdb27	      0xb900000000	                              mov ecx, 0	      6820	ops.c	FUNCTION_82	IF_6	CALL_7
0xdb2c	            0x89c7	                            mov edi, eax	      6820	ops.c	FUNCTION_82	IF_6	CALL_7
0xdb2e	      0xe800000000	                          call 0x400db73	      6820	ops.c	FUNCTION_82	IF_6	CALL_7
0xdb33	            0x85c0	                           test eax, eax	      6820	ops.c	FUNCTION_82	IF_6	CALL_7
0xdb35	            0x7451	                            je 0x400dbc8	      6820	ops.c	FUNCTION_82	IF_6	CALL_7
0xdb37	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6822	ops.c	FUNCTION_82	IF_6	IF_7
0xdb3b	          0x4885c0	                           test rax, rax	      6822	ops.c	FUNCTION_82	IF_6	IF_7
0xdb3e	            0x750a	                           jne 0x400db8a	      6822	ops.c	FUNCTION_82	IF_6	IF_7
0xdb40	      0xb800000000	                              mov eax, 0	      6823	ops.c	FUNCTION_82	IF_6	IF_7
0xdb45	      0xe96c020000	                           jmp 0x400ddf6	      6823	ops.c	FUNCTION_82	IF_6	IF_7
0xdb4a	          0x8b45d0	             mov eax, dword [rbp - 0x30]	      6824	ops.c	FUNCTION_82	IF_6	IF_8
0xdb4d	            0x85c0	                           test eax, eax	      6824	ops.c	FUNCTION_82	IF_6	IF_8
0xdb4f	            0x7416	                            je 0x400dba7	      6824	ops.c	FUNCTION_82	IF_6	IF_8
0xdb51	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6825	ops.c	FUNCTION_82	IF_6	CALL_8
0xdb55	          0x8b55c8	             mov edx, dword [rbp - 0x38]	      6825	ops.c	FUNCTION_82	IF_6	CALL_8
0xdb58	            0x89d6	                            mov esi, edx	      6825	ops.c	FUNCTION_82	IF_6	CALL_8
0xdb5a	          0x4889c7	                            mov rdi, rax	      6825	ops.c	FUNCTION_82	IF_6	CALL_8
0xdb5d	      0xe897feffff	           call sym.getreg_wrap_one_line	      6825	ops.c	FUNCTION_82	IF_6	CALL_8
0xdb62	      0xe94f020000	                           jmp 0x400ddf6	      6825	ops.c	FUNCTION_82	IF_6	CALL_8
0xdb67	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6826	ops.c	FUNCTION_82	IF_6	CALL_10
0xdb6b	          0x4889c7	                            mov rdi, rax	      6826	ops.c	FUNCTION_82	IF_6	CALL_10
0xdb6e	      0xe800000000	                          call 0x400dbb3	      6826	ops.c	FUNCTION_82	IF_6	CALL_10
0xdb73	          0x4889c2	                            mov rdx, rax	      6826	ops.c	FUNCTION_82	IF_6	CALL_10
0xdb76	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      6826	ops.c	FUNCTION_82	IF_6	CALL_10
0xdb79	            0x89c6	                            mov esi, eax	      6826	ops.c	FUNCTION_82	IF_6	CALL_10
0xdb7b	          0x4889d7	                            mov rdi, rdx	      6826	ops.c	FUNCTION_82	IF_6	CALL_10
0xdb7e	      0xe876feffff	           call sym.getreg_wrap_one_line	      6826	ops.c	FUNCTION_82	IF_6	CALL_10
0xdb83	      0xe92e020000	                           jmp 0x400ddf6	      6826	ops.c	FUNCTION_82	IF_6	CALL_10
0xdb88	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      6829	ops.c	FUNCTION_82	CALL_11
0xdb8b	      0xbe00000000	                              mov esi, 0	      6829	ops.c	FUNCTION_82	CALL_11
0xdb90	            0x89c7	                            mov edi, eax	      6829	ops.c	FUNCTION_82	CALL_11
0xdb92	      0xe800000000	                          call 0x400dbd7	      6829	ops.c	FUNCTION_82	CALL_11
0xdb97	    0x488b05000000	            mov rax, qword [0x0400dbde] 	      6830	ops.c	FUNCTION_82	IF_9
0xdb9e	          0x488b00	                    mov rax, qword [rax]	      6830	ops.c	FUNCTION_82	IF_9
0xdba1	          0x4885c0	                           test rax, rax	      6830	ops.c	FUNCTION_82	IF_9
0xdba4	            0x750a	                           jne 0x400dbf0	      6830	ops.c	FUNCTION_82	IF_9
0xdba6	      0xb800000000	                              mov eax, 0	      6831	ops.c	FUNCTION_82	IF_9
0xdbab	      0xe906020000	                           jmp 0x400ddf6	      6831	ops.c	FUNCTION_82	IF_9
0xdbb0	          0x8b45c8	             mov eax, dword [rbp - 0x38]	      6833	ops.c	FUNCTION_82	IF_10
0xdbb3	          0x83e004	                              and eax, 4	      6833	ops.c	FUNCTION_82	IF_10
0xdbb6	            0x85c0	                           test eax, eax	      6833	ops.c	FUNCTION_82	IF_10
0xdbb8	     0xf849d000000	                            je 0x400dc9b	      6833	ops.c	FUNCTION_82	IF_10
0xdbbe	      0xe800000000	                          call 0x400dc03	      6835	ops.c	FUNCTION_82	IF_10	CALL_12
0xdbc3	        0x488945f0	             mov qword [rbp - 0x10], rax	      6835	ops.c	FUNCTION_82	IF_10	CALL_12
0xdbc7	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	      6836	ops.c	FUNCTION_82	IF_10
0xdbce	      0x48837df000	               cmp qword [rbp - 0x10], 0	      6838	ops.c	FUNCTION_82	IF_10	IF_11
0xdbd3	            0x750a	                           jne 0x400dc1f	      6838	ops.c	FUNCTION_82	IF_10	IF_11
0xdbd5	      0xb800000000	                              mov eax, 0	      6839	ops.c	FUNCTION_82	IF_10	IF_11
0xdbda	      0xe9d7010000	                           jmp 0x400ddf6	      6839	ops.c	FUNCTION_82	IF_10	IF_11
0xdbdf	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      6840	ops.c	FUNCTION_82	IF_10	FOR_1
0xdbe7	            0xeb3c	                           jmp 0x400dc65	      6840	ops.c	FUNCTION_82	IF_10	FOR_1
0xdbe9	    0x488b05000000	            mov rax, qword [0x0400dc30] 	      6841	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0xdbf0	          0x488b00	                    mov rax, qword [rax]	      6841	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0xdbf3	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      6841	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0xdbf7	        0x48c1e203	                              shl rdx, 3	      6841	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0xdbfb	          0x4801d0	                            add rax, rdx	      6841	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0xdbfe	          0x488b08	                    mov rcx, qword [rax]	      6841	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0xdc01	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6841	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0xdc05	      0xbaffffffff	                     mov edx, 0xffffffff	      6841	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0xdc0a	          0x4889ce	                            mov rsi, rcx	      6841	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0xdc0d	          0x4889c7	                            mov rdi, rax	      6841	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0xdc10	      0xe800000000	                          call 0x400dc55	      6841	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0xdc15	            0x85c0	                           test eax, eax	      6841	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0xdc17	            0x7507	                           jne 0x400dc60	      6841	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12	CALL_13
0xdc19	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	      6842	ops.c	FUNCTION_82	IF_10	FOR_1	IF_12
0xdc20	      0x488345e001	               add qword [rbp - 0x20], 1	      6840	ops.c	FUNCTION_82	IF_10	FOR_1
0xdc25	    0x488b05000000	            mov rax, qword [0x0400dc6c] 	      6840	ops.c	FUNCTION_82	IF_10	FOR_1
0xdc2c	        0x488b4008	                mov rax, qword [rax + 8]	      6840	ops.c	FUNCTION_82	IF_10	FOR_1
0xdc30	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      6840	ops.c	FUNCTION_82	IF_10	FOR_1
0xdc34	            0x7fb3	                            jg 0x400dc29	      6840	ops.c	FUNCTION_82	IF_10	FOR_1
0xdc36	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      6843	ops.c	FUNCTION_82	IF_10	IF_13
0xdc3a	            0x7416	                            je 0x400dc92	      6843	ops.c	FUNCTION_82	IF_10	IF_13
0xdc3c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6845	ops.c	FUNCTION_82	IF_10	IF_13	CALL_14
0xdc40	          0x4889c7	                            mov rdi, rax	      6845	ops.c	FUNCTION_82	IF_10	IF_13	CALL_14
0xdc43	      0xe800000000	                          call 0x400dc88	      6845	ops.c	FUNCTION_82	IF_10	IF_13	CALL_14
0xdc48	      0xb800000000	                              mov eax, 0	      6846	ops.c	FUNCTION_82	IF_10	IF_13
0xdc4d	      0xe964010000	                           jmp 0x400ddf6	      6846	ops.c	FUNCTION_82	IF_10	IF_13
0xdc52	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      6848	ops.c	FUNCTION_82	IF_10
0xdc56	      0xe95b010000	                           jmp 0x400ddf6	      6848	ops.c	FUNCTION_82	IF_10
0xdc5b	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      6854	ops.c	FUNCTION_82
0xdc63	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      6855	ops.c	FUNCTION_82	FOR_2
0xdc6b	            0xeb52	                           jmp 0x400dcff	      6855	ops.c	FUNCTION_82	FOR_2
0xdc6d	    0x488b05000000	            mov rax, qword [0x0400dcb4] 	      6857	ops.c	FUNCTION_82	FOR_2	CALL_15
0xdc74	          0x488b00	                    mov rax, qword [rax]	      6857	ops.c	FUNCTION_82	FOR_2	CALL_15
0xdc77	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      6857	ops.c	FUNCTION_82	FOR_2	CALL_15
0xdc7b	        0x48c1e203	                              shl rdx, 3	      6857	ops.c	FUNCTION_82	FOR_2	CALL_15
0xdc7f	          0x4801d0	                            add rax, rdx	      6857	ops.c	FUNCTION_82	FOR_2	CALL_15
0xdc82	          0x488b00	                    mov rax, qword [rax]	      6857	ops.c	FUNCTION_82	FOR_2	CALL_15
0xdc85	          0x4889c7	                            mov rdi, rax	      6857	ops.c	FUNCTION_82	FOR_2	CALL_15
0xdc88	      0xe800000000	                          call 0x400dccd	      6857	ops.c	FUNCTION_82	FOR_2	CALL_15
0xdc8d	        0x480145e8	            add qword [rbp - 0x18], rax 	      6857	ops.c	FUNCTION_82	FOR_2	CALL_15
0xdc91	    0x488b05000000	            mov rax, qword [0x0400dcd8] 	      6862	ops.c	FUNCTION_82	FOR_2	IF_14
0xdc98	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6862	ops.c	FUNCTION_82	FOR_2	IF_14
0xdc9c	            0x3c01	                               cmp al, 1	      6862	ops.c	FUNCTION_82	FOR_2	IF_14
0xdc9e	            0x7415	                            je 0x400dcf5	      6862	ops.c	FUNCTION_82	FOR_2	IF_14
0xdca0	    0x488b05000000	            mov rax, qword [0x0400dce7] 	      6862	ops.c	FUNCTION_82	FOR_2	IF_14
0xdca7	        0x488b4008	                mov rax, qword [rax + 8]	      6862	ops.c	FUNCTION_82	FOR_2	IF_14
0xdcab	        0x4883e801	                              sub rax, 1	      6862	ops.c	FUNCTION_82	FOR_2	IF_14
0xdcaf	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      6862	ops.c	FUNCTION_82	FOR_2	IF_14
0xdcb3	            0x7e05	                           jle 0x400dcfa	      6862	ops.c	FUNCTION_82	FOR_2	IF_14
0xdcb5	      0x488345e801	               add qword [rbp - 0x18], 1	      6863	ops.c	FUNCTION_82	FOR_2	IF_14
0xdcba	      0x488345e001	               add qword [rbp - 0x20], 1	      6855	ops.c	FUNCTION_82	FOR_2
0xdcbf	    0x488b05000000	            mov rax, qword [0x0400dd06] 	      6855	ops.c	FUNCTION_82	FOR_2
0xdcc6	        0x488b4008	                mov rax, qword [rax + 8]	      6855	ops.c	FUNCTION_82	FOR_2
0xdcca	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      6855	ops.c	FUNCTION_82	FOR_2
0xdcce	            0x7f9d	                            jg 0x400dcad	      6855	ops.c	FUNCTION_82	FOR_2
0xdcd0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6866	ops.c	FUNCTION_82	CALL_16
0xdcd4	        0x4883c001	                              add rax, 1	      6866	ops.c	FUNCTION_82	CALL_16
0xdcd8	      0xbe01000000	                              mov esi, 1	      6866	ops.c	FUNCTION_82	CALL_16
0xdcdd	          0x4889c7	                            mov rdi, rax	      6866	ops.c	FUNCTION_82	CALL_16
0xdce0	      0xe800000000	                          call 0x400dd25	      6866	ops.c	FUNCTION_82	CALL_16
0xdce5	        0x488945d8	             mov qword [rbp - 0x28], rax	      6866	ops.c	FUNCTION_82	CALL_16
0xdce9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6871	ops.c	FUNCTION_82	IF_15
0xdced	          0x4885c0	                           test rax, rax	      6871	ops.c	FUNCTION_82	IF_15
0xdcf0	     0xf84bc000000	                            je 0x400ddf2	      6871	ops.c	FUNCTION_82	IF_15
0xdcf6	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      6873	ops.c	FUNCTION_82	IF_15
0xdcfe	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      6874	ops.c	FUNCTION_82	IF_15	FOR_3
0xdd06	      0xe984000000	                           jmp 0x400ddcf	      6874	ops.c	FUNCTION_82	IF_15	FOR_3
0xdd0b	    0x488b05000000	            mov rax, qword [0x0400dd52] 	      6876	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_17
0xdd12	          0x488b00	                    mov rax, qword [rax]	      6876	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_17
0xdd15	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      6876	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_17
0xdd19	        0x48c1e203	                              shl rdx, 3	      6876	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_17
0xdd1d	          0x4801d0	                            add rax, rdx	      6876	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_17
0xdd20	          0x488b00	                    mov rax, qword [rax]	      6876	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_17
0xdd23	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      6876	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_17
0xdd27	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      6876	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_17
0xdd2b	          0x4801ca	                            add rdx, rcx	      6876	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_17
0xdd2e	          0x4889c6	                            mov rsi, rax	      6876	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_17
0xdd31	          0x4889d7	                            mov rdi, rdx	      6876	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_17
0xdd34	      0xe800000000	                          call 0x400dd79	      6876	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_17
0xdd39	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      6877	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_18
0xdd3d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6877	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_18
0xdd41	          0x4801d0	                            add rax, rdx	      6877	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_18
0xdd44	          0x4889c7	                            mov rdi, rax	      6877	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_18
0xdd47	      0xe800000000	                          call 0x400dd8c	      6877	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_18
0xdd4c	        0x480145e8	            add qword [rbp - 0x18], rax 	      6877	ops.c	FUNCTION_82	IF_15	FOR_3	CALL_18
0xdd50	    0x488b05000000	            mov rax, qword [0x0400dd97] 	      6883	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0xdd57	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      6883	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0xdd5b	            0x3c01	                               cmp al, 1	      6883	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0xdd5d	            0x7415	                            je 0x400ddb4	      6883	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0xdd5f	    0x488b05000000	            mov rax, qword [0x0400dda6] 	      6883	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0xdd66	        0x488b4008	                mov rax, qword [rax + 8]	      6883	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0xdd6a	        0x4883e801	                              sub rax, 1	      6883	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0xdd6e	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      6883	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0xdd72	            0x7e16	                           jle 0x400ddca	      6883	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0xdd74	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      6884	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0xdd78	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6884	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0xdd7c	        0x488d5001	                      lea rdx, [rax + 1]	      6884	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0xdd80	        0x488955e8	             mov qword [rbp - 0x18], rdx	      6884	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0xdd84	          0x4801c8	                            add rax, rcx	      6884	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0xdd87	          0xc6000a	                     mov byte [rax], 0xa	      6884	ops.c	FUNCTION_82	IF_15	FOR_3	IF_16
0xdd8a	      0x488345e001	               add qword [rbp - 0x20], 1	      6874	ops.c	FUNCTION_82	IF_15	FOR_3
0xdd8f	    0x488b05000000	            mov rax, qword [0x0400ddd6] 	      6874	ops.c	FUNCTION_82	IF_15	FOR_3
0xdd96	        0x488b4008	                mov rax, qword [rax + 8]	      6874	ops.c	FUNCTION_82	IF_15	FOR_3
0xdd9a	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	      6874	ops.c	FUNCTION_82	IF_15	FOR_3
0xdd9e	     0xf8f67ffffff	                            jg 0x400dd4b	      6874	ops.c	FUNCTION_82	IF_15	FOR_3
0xdda4	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      6886	ops.c	FUNCTION_82	IF_15
0xdda8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      6886	ops.c	FUNCTION_82	IF_15
0xddac	          0x4801d0	                            add rax, rdx	      6886	ops.c	FUNCTION_82	IF_15
0xddaf	          0xc60000	                       mov byte [rax], 0	      6886	ops.c	FUNCTION_82	IF_15
0xddb2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      6889	ops.c	FUNCTION_82
0xddb6	        0x488b4df8	                mov rcx, qword [rbp - 8]	      6890	ops.c	FUNCTION_82
0xddba	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      6890	ops.c	FUNCTION_82
0xddc3	            0x7405	                            je 0x400de0a	      6890	ops.c	FUNCTION_82
0xddc5	      0xe800000000	                          call 0x400de0a	      6890	ops.c	FUNCTION_82
0xddca	              0xc9	                                   leave	      6890	ops.c	FUNCTION_82
0xddcb	              0xc3	                                     ret	      6890	ops.c	FUNCTION_82
put_reedit_in_typebuf	CALL,1:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,1:IF,3	43
0x1f3f	              0x55	                                push rbp	      1322	ops.c	FUNCTION_24
0x1f40	          0x4889e5	                            mov rbp, rsp	      1322	ops.c	FUNCTION_24
0x1f43	        0x4883ec20	                           sub rsp, 0x20	      1322	ops.c	FUNCTION_24
0x1f47	          0x897dec	             mov dword [rbp - 0x14], edi	      1322	ops.c	FUNCTION_24
0x1f4a	    0x64488b042528	                mov rax, qword fs:[0x28]	      1322	ops.c	FUNCTION_24
0x1f53	        0x488945f8	                mov qword [rbp - 8], rax	      1322	ops.c	FUNCTION_24
0x1f57	            0x31c0	                            xor eax, eax	      1322	ops.c	FUNCTION_24
0x1f59	    0x8b0500000000	            mov eax, dword [0x04001f9f] 	      1325	ops.c	FUNCTION_24	IF_1
0x1f5f	            0x85c0	                           test eax, eax	      1325	ops.c	FUNCTION_24	IF_1
0x1f61	            0x7468	                            je 0x400200b	      1325	ops.c	FUNCTION_24	IF_1
0x1f63	    0x8b0500000000	            mov eax, dword [0x04001fa9] 	      1327	ops.c	FUNCTION_24	IF_1	IF_2
0x1f69	          0x83f856	                           cmp eax, 0x56	      1327	ops.c	FUNCTION_24	IF_1	IF_2
0x1f6c	            0x750e	                           jne 0x4001fbc	      1327	ops.c	FUNCTION_24	IF_1	IF_2
0x1f6e	        0xc645f067	            mov byte [rbp - 0x10], 0x67 	      1329	ops.c	FUNCTION_24	IF_1	IF_2
0x1f72	        0xc645f152	              mov byte [rbp - 0xf], 0x52	      1330	ops.c	FUNCTION_24	IF_1	IF_2
0x1f76	        0xc645f200	                 mov byte [rbp - 0xe], 0	      1331	ops.c	FUNCTION_24	IF_1	IF_2
0x1f7a	            0xeb1f	                           jmp 0x4001fdb	      1331	ops.c	FUNCTION_24	IF_1	IF_2
0x1f7c	    0x8b0500000000	            mov eax, dword [0x04001fc2] 	      1335	ops.c	FUNCTION_24	IF_1	ELSE_1
0x1f82	          0x83f849	                           cmp eax, 0x49	      1335	ops.c	FUNCTION_24	IF_1	ELSE_1
0x1f85	            0x7408	                            je 0x4001fcf	      1335	ops.c	FUNCTION_24	IF_1	ELSE_1
0x1f87	    0x8b0500000000	            mov eax, dword [0x04001fcd] 	      1335	ops.c	FUNCTION_24	IF_1	ELSE_1
0x1f8d	            0xeb05	                           jmp 0x4001fd4	      1335	ops.c	FUNCTION_24	IF_1	ELSE_1
0x1f8f	      0xb869000000	                           mov eax, 0x69	      1335	ops.c	FUNCTION_24	IF_1	ELSE_1
0x1f94	          0x8845f0	               mov byte [rbp - 0x10], al	      1335	ops.c	FUNCTION_24	IF_1	ELSE_1
0x1f97	        0xc645f100	                 mov byte [rbp - 0xf], 0	      1336	ops.c	FUNCTION_24	IF_1	ELSE_1
0x1f9b	          0x8b55ec	             mov edx, dword [rbp - 0x14]	      1338	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x1f9e	        0x488d45f0	                   lea rax, [rbp - 0x10]	      1338	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x1fa2	          0x4189d0	                            mov r8d, edx	      1338	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x1fa5	      0xb901000000	                              mov ecx, 1	      1338	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x1faa	      0xba00000000	                              mov edx, 0	      1338	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x1faf	      0xbeffffffff	                     mov esi, 0xffffffff	      1338	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x1fb4	          0x4889c7	                            mov rdi, rax	      1338	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x1fb7	      0xe800000000	                          call 0x4001ffc	      1338	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x1fbc	          0x83f801	                              cmp eax, 1	      1338	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x1fbf	            0x750a	                           jne 0x400200b	      1338	ops.c	FUNCTION_24	IF_1	IF_3	CALL_1
0x1fc1	    0xc70500000000	               mov dword [0x0400200b], 0	      1339	ops.c	FUNCTION_24	IF_1	IF_3
0x1fcb	              0x90	                                     nop	      1341	ops.c	FUNCTION_24
0x1fcc	        0x488b45f8	                mov rax, qword [rbp - 8]	      1341	ops.c	FUNCTION_24
0x1fd0	    0x644833042528	                xor rax, qword fs:[0x28]	      1341	ops.c	FUNCTION_24
0x1fd9	            0x7405	                            je 0x4002020	      1341	ops.c	FUNCTION_24
0x1fdb	      0xe800000000	                          call 0x4002020	      1341	ops.c	FUNCTION_24
0x1fe0	              0xc9	                                   leave	      1341	ops.c	FUNCTION_24
0x1fe1	              0xc3	                                     ret	      1341	ops.c	FUNCTION_24
put_in_typebuf	CALL,6:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,2:IF,6	69
0x1fe2	              0x55	                                push rbp	      1355	ops.c	FUNCTION_25
0x1fe3	          0x4889e5	                            mov rbp, rsp	      1355	ops.c	FUNCTION_25
0x1fe6	        0x4883ec30	                           sub rsp, 0x30	      1355	ops.c	FUNCTION_25
0x1fea	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1355	ops.c	FUNCTION_25
0x1fee	          0x8975e4	             mov dword [rbp - 0x1c], esi	      1355	ops.c	FUNCTION_25
0x1ff1	          0x8955e0	             mov dword [rbp - 0x20], edx	      1355	ops.c	FUNCTION_25
0x1ff4	          0x894ddc	             mov dword [rbp - 0x24], ecx	      1355	ops.c	FUNCTION_25
0x1ff7	    0xc745f4010000	                mov dword [rbp - 0xc], 1	      1356	ops.c	FUNCTION_25
0x1ffe	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1358	ops.c	FUNCTION_25	CALL_1
0x2001	            0x89c7	                            mov edi, eax	      1358	ops.c	FUNCTION_25	CALL_1
0x2003	      0xe837ffffff	          call sym.put_reedit_in_typebuf	      1358	ops.c	FUNCTION_25	CALL_1
0x2008	        0x837de000	               cmp dword [rbp - 0x20], 0	      1359	ops.c	FUNCTION_25	IF_1
0x200c	            0x7422	                            je 0x4002070	      1359	ops.c	FUNCTION_25	IF_1
0x200e	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1360	ops.c	FUNCTION_25	CALL_2
0x2011	          0x4189c0	                            mov r8d, eax	      1360	ops.c	FUNCTION_25	CALL_2
0x2014	      0xb901000000	                              mov ecx, 1	      1360	ops.c	FUNCTION_25	CALL_2
0x2019	      0xba00000000	                              mov edx, 0	      1360	ops.c	FUNCTION_25	CALL_2
0x201e	      0xbeffffffff	                     mov esi, 0xffffffff	      1360	ops.c	FUNCTION_25	CALL_2
0x2023	      0xbf00000000	                              mov edi, 0	      1360	ops.c	FUNCTION_25	CALL_2
0x2028	      0xe800000000	                          call 0x400206d	      1360	ops.c	FUNCTION_25	CALL_2
0x202d	          0x8945f4	              mov dword [rbp - 0xc], eax	      1360	ops.c	FUNCTION_25	CALL_2
0x2030	        0x837df401	                cmp dword [rbp - 0xc], 1	      1361	ops.c	FUNCTION_25	IF_2
0x2034	            0x7573	                           jne 0x40020e9	      1361	ops.c	FUNCTION_25	IF_2
0x2036	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1365	ops.c	FUNCTION_25	IF_2	IF_3
0x203a	            0x7412	                            je 0x400208e	      1365	ops.c	FUNCTION_25	IF_2	IF_3
0x203c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1366	ops.c	FUNCTION_25	IF_2	CALL_3
0x2040	          0x4889c7	                            mov rdi, rax	      1366	ops.c	FUNCTION_25	IF_2	CALL_3
0x2043	      0xe800000000	                          call 0x4002088	      1366	ops.c	FUNCTION_25	IF_2	CALL_3
0x2048	        0x488945f8	                mov qword [rbp - 8], rax	      1366	ops.c	FUNCTION_25	IF_2	CALL_3
0x204c	            0xeb08	                           jmp 0x4002096	      1366	ops.c	FUNCTION_25	IF_2	CALL_3
0x204e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1368	ops.c	FUNCTION_25	IF_2	ELSE_1
0x2052	        0x488945f8	                mov qword [rbp - 8], rax	      1368	ops.c	FUNCTION_25	IF_2	ELSE_1
0x2056	      0x48837df800	                  cmp qword [rbp - 8], 0	      1369	ops.c	FUNCTION_25	IF_2	IF_4
0x205b	            0x7509	                           jne 0x40020a6	      1369	ops.c	FUNCTION_25	IF_2	IF_4
0x205d	    0xc745f4000000	                mov dword [rbp - 0xc], 0	      1370	ops.c	FUNCTION_25	IF_2	IF_4
0x2064	            0xeb31	                           jmp 0x40020d7	      1370	ops.c	FUNCTION_25	IF_2	IF_4
0x2066	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1372	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x206a	            0x7407	                            je 0x40020b3	      1372	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x206c	      0xbeffffffff	                     mov esi, 0xffffffff	      1372	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x2071	            0xeb05	                           jmp 0x40020b8	      1372	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x2073	      0xbe00000000	                              mov esi, 0	      1372	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x2078	          0x8b55dc	             mov edx, dword [rbp - 0x24]	      1372	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x207b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1372	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x207f	          0x4189d0	                            mov r8d, edx	      1372	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x2082	      0xb901000000	                              mov ecx, 1	      1372	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x2087	      0xba00000000	                              mov edx, 0	      1372	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x208c	          0x4889c7	                            mov rdi, rax	      1372	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x208f	      0xe800000000	                          call 0x40020d4	      1372	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x2094	          0x8945f4	              mov dword [rbp - 0xc], eax	      1372	ops.c	FUNCTION_25	IF_2	ELSE_2	CALL_4
0x2097	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1374	ops.c	FUNCTION_25	IF_2	IF_5
0x209b	            0x740c	                            je 0x40020e9	      1374	ops.c	FUNCTION_25	IF_2	IF_5
0x209d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1375	ops.c	FUNCTION_25	IF_2	CALL_5
0x20a1	          0x4889c7	                            mov rdi, rax	      1375	ops.c	FUNCTION_25	IF_2	CALL_5
0x20a4	      0xe800000000	                          call 0x40020e9	      1375	ops.c	FUNCTION_25	IF_2	CALL_5
0x20a9	        0x837de000	               cmp dword [rbp - 0x20], 0	      1377	ops.c	FUNCTION_25	IF_6
0x20ad	            0x7428	                            je 0x4002117	      1377	ops.c	FUNCTION_25	IF_6
0x20af	        0x837df401	                cmp dword [rbp - 0xc], 1	      1377	ops.c	FUNCTION_25	IF_6
0x20b3	            0x7522	                           jne 0x4002117	      1377	ops.c	FUNCTION_25	IF_6
0x20b5	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      1378	ops.c	FUNCTION_25	CALL_6
0x20b8	          0x4189c0	                            mov r8d, eax	      1378	ops.c	FUNCTION_25	CALL_6
0x20bb	      0xb901000000	                              mov ecx, 1	      1378	ops.c	FUNCTION_25	CALL_6
0x20c0	      0xba00000000	                              mov edx, 0	      1378	ops.c	FUNCTION_25	CALL_6
0x20c5	      0xbeffffffff	                     mov esi, 0xffffffff	      1378	ops.c	FUNCTION_25	CALL_6
0x20ca	      0xbf00000000	                              mov edi, 0	      1378	ops.c	FUNCTION_25	CALL_6
0x20cf	      0xe800000000	                          call 0x4002114	      1378	ops.c	FUNCTION_25	CALL_6
0x20d4	          0x8945f4	              mov dword [rbp - 0xc], eax	      1378	ops.c	FUNCTION_25	CALL_6
0x20d7	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1379	ops.c	FUNCTION_25
0x20da	              0xc9	                                   leave	      1380	ops.c	FUNCTION_25
0x20db	              0xc3	                                     ret	      1380	ops.c	FUNCTION_25
skip_comment	CALL,2:FOR,0:SWITCH,0:functions,0:WHILE,2:DO,0:ELSE,0:IF,7	92
0x8eb4	              0x55	                                push rbp	      4411	ops.c	FUNCTION_54
0x8eb5	          0x4889e5	                            mov rbp, rsp	      4411	ops.c	FUNCTION_54
0x8eb8	        0x4883ec40	                           sub rsp, 0x40	      4411	ops.c	FUNCTION_54
0x8ebc	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      4411	ops.c	FUNCTION_54
0x8ec0	          0x8975d4	             mov dword [rbp - 0x2c], esi	      4411	ops.c	FUNCTION_54
0x8ec3	          0x8955d0	             mov dword [rbp - 0x30], edx	      4411	ops.c	FUNCTION_54
0x8ec6	        0x48894dc8	             mov qword [rbp - 0x38], rcx	      4411	ops.c	FUNCTION_54
0x8eca	    0x64488b042528	                mov rax, qword fs:[0x28]	      4411	ops.c	FUNCTION_54
0x8ed3	        0x488945f8	                mov qword [rbp - 8], rax	      4411	ops.c	FUNCTION_54
0x8ed7	            0x31c0	                            xor eax, eax	      4411	ops.c	FUNCTION_54
0x8ed9	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      4412	ops.c	FUNCTION_54
0x8ee1	        0x488d55f0	                   lea rdx, [rbp - 0x10]	      4414	ops.c	FUNCTION_54	CALL_1
0x8ee5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4414	ops.c	FUNCTION_54	CALL_1
0x8ee9	          0x4889d6	                            mov rsi, rdx	      4414	ops.c	FUNCTION_54	CALL_1
0x8eec	          0x4889c7	                            mov rdi, rax	      4414	ops.c	FUNCTION_54	CALL_1
0x8eef	      0xe800000000	                          call 0x4008f34	      4414	ops.c	FUNCTION_54	CALL_1
0x8ef4	          0x8945e8	             mov dword [rbp - 0x18], eax	      4414	ops.c	FUNCTION_54	CALL_1
0x8ef7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4416	ops.c	FUNCTION_54
0x8efb	    0xc70000000000	                      mov dword [rax], 0	      4416	ops.c	FUNCTION_54
0x8f01	        0x837de8ff	cmp dword [rbp - 0x18], 0xffffffffffffffff	      4417	ops.c	FUNCTION_54	IF_1
0x8f05	            0x7444	                            je 0x4008f8b	      4417	ops.c	FUNCTION_54	IF_1
0x8f07	            0xeb22	                           jmp 0x4008f6b	      4422	ops.c	FUNCTION_54	IF_1	WHILE_1
0x8f09	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4424	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x8f0d	           0xfb600	                   movzx eax, byte [rax]	      4424	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x8f10	            0x3c65	                            cmp al, 0x65	      4424	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x8f12	            0x7422	                            je 0x4008f76	      4424	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x8f14	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4425	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x8f18	           0xfb600	                   movzx eax, byte [rax]	      4425	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x8f1b	            0x3c3a	                            cmp al, 0x3a	      4425	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x8f1d	            0x7417	                            je 0x4008f76	      4425	ops.c	FUNCTION_54	IF_1	WHILE_1	IF_2
0x8f1f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4427	ops.c	FUNCTION_54	IF_1	WHILE_1
0x8f23	        0x4883c001	                              add rax, 1	      4427	ops.c	FUNCTION_54	IF_1	WHILE_1
0x8f27	        0x488945f0	             mov qword [rbp - 0x10], rax	      4427	ops.c	FUNCTION_54	IF_1	WHILE_1
0x8f2b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4422	ops.c	FUNCTION_54	IF_1	WHILE_1
0x8f2f	           0xfb600	                   movzx eax, byte [rax]	      4422	ops.c	FUNCTION_54	IF_1	WHILE_1
0x8f32	            0x84c0	                             test al, al	      4422	ops.c	FUNCTION_54	IF_1	WHILE_1
0x8f34	            0x75d3	                           jne 0x4008f49	      4422	ops.c	FUNCTION_54	IF_1	WHILE_1
0x8f36	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4429	ops.c	FUNCTION_54	IF_1	IF_3
0x8f3a	           0xfb600	                   movzx eax, byte [rax]	      4429	ops.c	FUNCTION_54	IF_1	IF_3
0x8f3d	            0x3c65	                            cmp al, 0x65	      4429	ops.c	FUNCTION_54	IF_1	IF_3
0x8f3f	            0x740a	                            je 0x4008f8b	      4429	ops.c	FUNCTION_54	IF_1	IF_3
0x8f41	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      4430	ops.c	FUNCTION_54	IF_1	IF_3
0x8f45	    0xc70001000000	                      mov dword [rax], 1	      4430	ops.c	FUNCTION_54	IF_1	IF_3
0x8f4b	        0x837dd400	               cmp dword [rbp - 0x2c], 0	      4433	ops.c	FUNCTION_54	IF_4
0x8f4f	            0x7506	                           jne 0x4008f97	      4433	ops.c	FUNCTION_54	IF_4
0x8f51	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4434	ops.c	FUNCTION_54	IF_4
0x8f55	            0xeb79	                           jmp 0x4009010	      4434	ops.c	FUNCTION_54	IF_4
0x8f57	          0x8b55d0	             mov edx, dword [rbp - 0x30]	      4436	ops.c	FUNCTION_54	CALL_2
0x8f5a	        0x488d75f0	                   lea rsi, [rbp - 0x10]	      4436	ops.c	FUNCTION_54	CALL_2
0x8f5e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4436	ops.c	FUNCTION_54	CALL_2
0x8f62	            0x89d1	                            mov ecx, edx	      4436	ops.c	FUNCTION_54	CALL_2
0x8f64	      0xba00000000	                              mov edx, 0	      4436	ops.c	FUNCTION_54	CALL_2
0x8f69	          0x4889c7	                            mov rdi, rax	      4436	ops.c	FUNCTION_54	CALL_2
0x8f6c	      0xe800000000	                          call 0x4008fb1	      4436	ops.c	FUNCTION_54	CALL_2
0x8f71	          0x8945ec	             mov dword [rbp - 0x14], eax	      4436	ops.c	FUNCTION_54	CALL_2
0x8f74	        0x837dec00	               cmp dword [rbp - 0x14], 0	      4438	ops.c	FUNCTION_54	IF_5
0x8f78	            0x7528	                           jne 0x4008fe2	      4438	ops.c	FUNCTION_54	IF_5
0x8f7a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4439	ops.c	FUNCTION_54	IF_5
0x8f7e	            0xeb50	                           jmp 0x4009010	      4439	ops.c	FUNCTION_54	IF_5
0x8f80	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4448	ops.c	FUNCTION_54	WHILE_2	IF_6
0x8f84	           0xfb600	                   movzx eax, byte [rax]	      4448	ops.c	FUNCTION_54	WHILE_2	IF_6
0x8f87	            0x3c65	                            cmp al, 0x65	      4448	ops.c	FUNCTION_54	WHILE_2	IF_6
0x8f89	            0x7422	                            je 0x4008fed	      4448	ops.c	FUNCTION_54	WHILE_2	IF_6
0x8f8b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4449	ops.c	FUNCTION_54	WHILE_2	IF_6
0x8f8f	           0xfb600	                   movzx eax, byte [rax]	      4449	ops.c	FUNCTION_54	WHILE_2	IF_6
0x8f92	            0x3c3a	                            cmp al, 0x3a	      4449	ops.c	FUNCTION_54	WHILE_2	IF_6
0x8f94	            0x7417	                            je 0x4008fed	      4449	ops.c	FUNCTION_54	WHILE_2	IF_6
0x8f96	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4453	ops.c	FUNCTION_54	WHILE_2
0x8f9a	        0x4883c001	                              add rax, 1	      4453	ops.c	FUNCTION_54	WHILE_2
0x8f9e	        0x488945f0	             mov qword [rbp - 0x10], rax	      4453	ops.c	FUNCTION_54	WHILE_2
0x8fa2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4446	ops.c	FUNCTION_54	WHILE_2
0x8fa6	           0xfb600	                   movzx eax, byte [rax]	      4446	ops.c	FUNCTION_54	WHILE_2
0x8fa9	            0x84c0	                             test al, al	      4446	ops.c	FUNCTION_54	WHILE_2
0x8fab	            0x75d3	                           jne 0x4008fc0	      4446	ops.c	FUNCTION_54	WHILE_2
0x8fad	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4460	ops.c	FUNCTION_54	IF_7
0x8fb1	           0xfb600	                   movzx eax, byte [rax]	      4460	ops.c	FUNCTION_54	IF_7
0x8fb4	            0x3c3a	                            cmp al, 0x3a	      4460	ops.c	FUNCTION_54	IF_7
0x8fb6	            0x740b	                            je 0x4009003	      4460	ops.c	FUNCTION_54	IF_7
0x8fb8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      4460	ops.c	FUNCTION_54	IF_7
0x8fbc	           0xfb600	                   movzx eax, byte [rax]	      4460	ops.c	FUNCTION_54	IF_7
0x8fbf	            0x84c0	                             test al, al	      4460	ops.c	FUNCTION_54	IF_7
0x8fc1	            0x7509	                           jne 0x400900c	      4460	ops.c	FUNCTION_54	IF_7
0x8fc3	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      4461	ops.c	FUNCTION_54	IF_7
0x8fc6	            0x4898	                                    cdqe	      4461	ops.c	FUNCTION_54	IF_7
0x8fc8	        0x480145d8	            add qword [rbp - 0x28], rax 	      4461	ops.c	FUNCTION_54	IF_7
0x8fcc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      4463	ops.c	FUNCTION_54
0x8fd0	        0x488b4df8	                mov rcx, qword [rbp - 8]	      4464	ops.c	FUNCTION_54
0x8fd4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      4464	ops.c	FUNCTION_54
0x8fdd	            0x7405	                            je 0x4009024	      4464	ops.c	FUNCTION_54
0x8fdf	      0xe800000000	                          call 0x4009024	      4464	ops.c	FUNCTION_54
0x8fe4	              0xc9	                                   leave	      4464	ops.c	FUNCTION_54
0x8fe5	              0xc3	                                     ret	      4464	ops.c	FUNCTION_54
get_expr_line_src	CALL,1:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,1	12
0x140e	              0x55	                                push rbp	       855	ops.c	FUNCTION_13
0x140f	          0x4889e5	                            mov rbp, rsp	       855	ops.c	FUNCTION_13
0x1412	    0x488b05000000	            mov rax, qword [0x04001459] 	       856	ops.c	FUNCTION_13	IF_1
0x1419	          0x4885c0	                           test rax, rax	       856	ops.c	FUNCTION_13	IF_1
0x141c	            0x7507	                           jne 0x4001465	       856	ops.c	FUNCTION_13	IF_1
0x141e	      0xb800000000	                              mov eax, 0	       857	ops.c	FUNCTION_13	IF_1
0x1423	            0xeb0f	                           jmp 0x4001474	       857	ops.c	FUNCTION_13	IF_1
0x1425	    0x488b05000000	            mov rax, qword [0x0400146c] 	       858	ops.c	FUNCTION_13	CALL_1
0x142c	          0x4889c7	                            mov rdi, rax	       858	ops.c	FUNCTION_13	CALL_1
0x142f	      0xe800000000	                          call 0x4001474	       858	ops.c	FUNCTION_13	CALL_1
0x1434	              0x5d	                                 pop rbp	       859	ops.c	FUNCTION_13
0x1435	              0xc3	                                     ret	       859	ops.c	FUNCTION_13
clip_yank_selection	CALL,2:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,1:IF,1	26
0xd661	              0x55	                                push rbp	      6590	ops.c	FUNCTION_76
0xd662	          0x4889e5	                            mov rbp, rsp	      6590	ops.c	FUNCTION_76
0xd665	        0x4883ec30	                           sub rsp, 0x30	      6590	ops.c	FUNCTION_76
0xd669	          0x897dec	             mov dword [rbp - 0x14], edi	      6590	ops.c	FUNCTION_76
0xd66c	        0x488975e0	             mov qword [rbp - 0x20], rsi	      6590	ops.c	FUNCTION_76
0xd670	        0x488955d8	             mov qword [rbp - 0x28], rdx	      6590	ops.c	FUNCTION_76
0xd674	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      6590	ops.c	FUNCTION_76
0xd678	    0x48817dd00000	               cmp qword [rbp - 0x30], 0	      6593	ops.c	FUNCTION_76	IF_1
0xd680	            0x750a	                           jne 0x400d6cc	      6593	ops.c	FUNCTION_76	IF_1
0xd682	    0x48c745f80000	                  mov qword [rbp - 8], 0	      6594	ops.c	FUNCTION_76	IF_1
0xd68a	            0xeb08	                           jmp 0x400d6d4	      6594	ops.c	FUNCTION_76	IF_1
0xd68c	    0x48c745f80000	                  mov qword [rbp - 8], 0	      6596	ops.c	FUNCTION_76	ELSE_1
0xd694	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6598	ops.c	FUNCTION_76	CALL_1
0xd698	          0x4889c7	                            mov rdi, rax	      6598	ops.c	FUNCTION_76	CALL_1
0xd69b	      0xe800000000	                          call 0x400d6e0	      6598	ops.c	FUNCTION_76	CALL_1
0xd6a0	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	      6600	ops.c	FUNCTION_76	CALL_2
0xd6a4	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      6600	ops.c	FUNCTION_76	CALL_2
0xd6a8	          0x8b75ec	             mov esi, dword [rbp - 0x14]	      6600	ops.c	FUNCTION_76	CALL_2
0xd6ab	        0x488b45f8	                mov rax, qword [rbp - 8]	      6600	ops.c	FUNCTION_76	CALL_2
0xd6af	    0x41b900000000	                              mov r9d, 0	      6600	ops.c	FUNCTION_76	CALL_2
0xd6b5	    0x41b800000000	                              mov r8d, 0	      6600	ops.c	FUNCTION_76	CALL_2
0xd6bb	          0x4889c7	                            mov rdi, rax	      6600	ops.c	FUNCTION_76	CALL_2
0xd6be	      0xe8500b0000	                     call sym.str_to_reg	      6600	ops.c	FUNCTION_76	CALL_2
0xd6c3	              0x90	                                     nop	      6601	ops.c	FUNCTION_76
0xd6c4	              0xc9	                                   leave	      6601	ops.c	FUNCTION_76
0xd6c5	              0xc3	                                     ret	      6601	ops.c	FUNCTION_76
put_register	CALL,4:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,0	27
0x1786	              0x55	                                push rbp	      1030	ops.c	FUNCTION_18
0x1787	          0x4889e5	                            mov rbp, rsp	      1030	ops.c	FUNCTION_18
0x178a	        0x4883ec10	                           sub rsp, 0x10	      1030	ops.c	FUNCTION_18
0x178e	          0x897dfc	                mov dword [rbp - 4], edi	      1030	ops.c	FUNCTION_18
0x1791	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1030	ops.c	FUNCTION_18
0x1795	          0x8b45fc	                mov eax, dword [rbp - 4]	      1031	ops.c	FUNCTION_18	CALL_1
0x1798	      0xbe00000000	                              mov esi, 0	      1031	ops.c	FUNCTION_18	CALL_1
0x179d	            0x89c7	                            mov edi, eax	      1031	ops.c	FUNCTION_18	CALL_1
0x179f	      0xe800000000	                          call 0x40017e4	      1031	ops.c	FUNCTION_18	CALL_1
0x17a4	      0xe8a1420000	                  call sym.free_yank_all	      1032	ops.c	FUNCTION_18	CALL_2
0x17a9	    0x488b05000000	            mov rax, qword [0x040017f0] 	      1033	ops.c	FUNCTION_18
0x17b0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1033	ops.c	FUNCTION_18
0x17b4	          0x488b0a	                    mov rcx, qword [rdx]	      1033	ops.c	FUNCTION_18
0x17b7	          0x488908	                    mov qword [rax], rcx	      1033	ops.c	FUNCTION_18
0x17ba	        0x488b4a08	                mov rcx, qword [rdx + 8]	      1033	ops.c	FUNCTION_18
0x17be	        0x48894808	                mov qword [rax + 8], rcx	      1033	ops.c	FUNCTION_18
0x17c2	        0x488b4a10	            mov rcx, qword [rdx + 0x10] 	      1033	ops.c	FUNCTION_18
0x17c6	        0x48894810	             mov qword [rax + 0x10], rcx	      1033	ops.c	FUNCTION_18
0x17ca	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	      1033	ops.c	FUNCTION_18
0x17ce	        0x48895018	             mov qword [rax + 0x18], rdx	      1033	ops.c	FUNCTION_18
0x17d2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1034	ops.c	FUNCTION_18	CALL_3
0x17d6	          0x4889c7	                            mov rdi, rax	      1034	ops.c	FUNCTION_18	CALL_3
0x17d9	      0xe800000000	                          call 0x400181e	      1034	ops.c	FUNCTION_18	CALL_3
0x17de	      0xe8fec00000	              call sym.may_set_selection	      1038	ops.c	FUNCTION_18	CALL_4
0x17e3	              0x90	                                     nop	      1040	ops.c	FUNCTION_18
0x17e4	              0xc9	                                   leave	      1040	ops.c	FUNCTION_18
0x17e5	              0xc3	                                     ret	      1040	ops.c	FUNCTION_18
dis_msg	CALL,4:FOR,0:SWITCH,0:functions,0:WHILE,1:DO,0:ELSE,1:IF,1	59
0x8df2	              0x55	                                push rbp	      4368	ops.c	FUNCTION_53
0x8df3	          0x4889e5	                            mov rbp, rsp	      4368	ops.c	FUNCTION_53
0x8df6	        0x4883ec20	                           sub rsp, 0x20	      4368	ops.c	FUNCTION_53
0x8dfa	        0x48897de8	             mov qword [rbp - 0x18], rdi	      4368	ops.c	FUNCTION_53
0x8dfe	          0x8975e4	             mov dword [rbp - 0x1c], esi	      4368	ops.c	FUNCTION_53
0x8e01	    0x488b05000000	            mov rax, qword [0x04008e48] 	      4374	ops.c	FUNCTION_53
0x8e08	          0x83e806	                              sub eax, 6	      4374	ops.c	FUNCTION_53
0x8e0b	          0x8945f8	                mov dword [rbp - 8], eax	      4374	ops.c	FUNCTION_53
0x8e0e	            0xeb58	                           jmp 0x4008ea8	      4375	ops.c	FUNCTION_53	WHILE_1
0x8e10	    0x8b0500000000	            mov eax, dword [0x04008e56] 	      4380	ops.c	FUNCTION_53	WHILE_1	IF_1
0x8e16	            0x85c0	                           test eax, eax	      4380	ops.c	FUNCTION_53	WHILE_1	IF_1
0x8e18	            0x7435	                            je 0x4008e8f	      4380	ops.c	FUNCTION_53	WHILE_1	IF_1
0x8e1a	    0x488b05000000	            mov rax, qword [0x04008e61] 	      4380	ops.c	FUNCTION_53	WHILE_1	IF_1
0x8e21	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      4380	ops.c	FUNCTION_53	WHILE_1	IF_1
0x8e25	          0x4889d7	                            mov rdi, rdx	      4380	ops.c	FUNCTION_53	WHILE_1	IF_1
0x8e28	            0xffd0	                                call rax	      4380	ops.c	FUNCTION_53	WHILE_1	IF_1
0x8e2a	          0x8945fc	                mov dword [rbp - 4], eax	      4380	ops.c	FUNCTION_53	WHILE_1	IF_1
0x8e2d	        0x837dfc01	                  cmp dword [rbp - 4], 1	      4380	ops.c	FUNCTION_53	WHILE_1	IF_1
0x8e31	            0x7e1c	                           jle 0x4008e8f	      4380	ops.c	FUNCTION_53	WHILE_1	IF_1
0x8e33	          0x8b55fc	                mov edx, dword [rbp - 4]	      4382	ops.c	FUNCTION_53	WHILE_1	IF_1	CALL_2
0x8e36	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4382	ops.c	FUNCTION_53	WHILE_1	IF_1	CALL_2
0x8e3a	            0x89d6	                            mov esi, edx	      4382	ops.c	FUNCTION_53	WHILE_1	IF_1	CALL_2
0x8e3c	          0x4889c7	                            mov rdi, rax	      4382	ops.c	FUNCTION_53	WHILE_1	IF_1	CALL_2
0x8e3f	      0xe800000000	                          call 0x4008e84	      4382	ops.c	FUNCTION_53	WHILE_1	IF_1	CALL_2
0x8e44	          0x8b45fc	                mov eax, dword [rbp - 4]	      4383	ops.c	FUNCTION_53	WHILE_1	IF_1
0x8e47	            0x4898	                                    cdqe	      4383	ops.c	FUNCTION_53	WHILE_1	IF_1
0x8e49	        0x480145e8	            add qword [rbp - 0x18], rax 	      4383	ops.c	FUNCTION_53	WHILE_1	IF_1
0x8e4d	            0xeb19	                           jmp 0x4008ea8	      4383	ops.c	FUNCTION_53	WHILE_1	IF_1
0x8e4f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4387	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x8e53	        0x488d5001	                      lea rdx, [rax + 1]	      4387	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x8e57	        0x488955e8	             mov qword [rbp - 0x18], rdx	      4387	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x8e5b	      0xbe01000000	                              mov esi, 1	      4387	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x8e60	          0x4889c7	                            mov rdi, rax	      4387	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x8e63	      0xe800000000	                          call 0x4008ea8	      4387	ops.c	FUNCTION_53	WHILE_1	CALL_3
0x8e68	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4375	ops.c	FUNCTION_53	WHILE_1
0x8e6c	           0xfb600	                   movzx eax, byte [rax]	      4375	ops.c	FUNCTION_53	WHILE_1
0x8e6f	            0x84c0	                             test al, al	      4375	ops.c	FUNCTION_53	WHILE_1
0x8e71	            0x7439	                            je 0x4008eec	      4375	ops.c	FUNCTION_53	WHILE_1
0x8e73	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4376	ops.c	FUNCTION_53	WHILE_1
0x8e77	           0xfb600	                   movzx eax, byte [rax]	      4376	ops.c	FUNCTION_53	WHILE_1
0x8e7a	            0x3c1b	                            cmp al, 0x1b	      4376	ops.c	FUNCTION_53	WHILE_1
0x8e7c	            0x7515	                           jne 0x4008ed3	      4376	ops.c	FUNCTION_53	WHILE_1
0x8e7e	        0x837de400	               cmp dword [rbp - 0x1c], 0	      4376	ops.c	FUNCTION_53	WHILE_1
0x8e82	            0x740f	                            je 0x4008ed3	      4376	ops.c	FUNCTION_53	WHILE_1
0x8e84	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4376	ops.c	FUNCTION_53	WHILE_1
0x8e88	        0x4883c001	                              add rax, 1	      4376	ops.c	FUNCTION_53	WHILE_1
0x8e8c	           0xfb600	                   movzx eax, byte [rax]	      4376	ops.c	FUNCTION_53	WHILE_1
0x8e8f	            0x84c0	                             test al, al	      4376	ops.c	FUNCTION_53	WHILE_1
0x8e91	            0x7419	                            je 0x4008eec	      4376	ops.c	FUNCTION_53	WHILE_1
0x8e93	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      4377	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x8e97	          0x4889c7	                            mov rdi, rax	      4377	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x8e9a	      0xe800000000	                          call 0x4008edf	      4377	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x8e9f	          0x2945f8	                sub dword [rbp - 8], eax	      4377	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x8ea2	        0x837df800	                  cmp dword [rbp - 8], 0	      4377	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x8ea6	     0xf8964ffffff	                           jns 0x4008e50	      4377	ops.c	FUNCTION_53	WHILE_1	CALL_1
0x8eac	      0xe800000000	                          call 0x4008ef1	      4389	ops.c	FUNCTION_53	CALL_4
0x8eb1	              0x90	                                     nop	      4390	ops.c	FUNCTION_53
0x8eb2	              0xc9	                                   leave	      4390	ops.c	FUNCTION_53
0x8eb3	              0xc3	                                     ret	      4390	ops.c	FUNCTION_53
cmdline_paste_reg	CALL,4:FOR,1:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,3	57
0x25ab	              0x55	                                push rbp	      1586	ops.c	FUNCTION_29
0x25ac	          0x4889e5	                            mov rbp, rsp	      1586	ops.c	FUNCTION_29
0x25af	        0x4883ec20	                           sub rsp, 0x20	      1586	ops.c	FUNCTION_29
0x25b3	          0x897dec	             mov dword [rbp - 0x14], edi	      1586	ops.c	FUNCTION_29
0x25b6	          0x8975e8	             mov dword [rbp - 0x18], esi	      1586	ops.c	FUNCTION_29
0x25b9	          0x8955e4	             mov dword [rbp - 0x1c], edx	      1586	ops.c	FUNCTION_29
0x25bc	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1589	ops.c	FUNCTION_29	CALL_1
0x25bf	      0xbe00000000	                              mov esi, 0	      1589	ops.c	FUNCTION_29	CALL_1
0x25c4	            0x89c7	                            mov edi, eax	      1589	ops.c	FUNCTION_29	CALL_1
0x25c6	      0xe800000000	                          call 0x400260b	      1589	ops.c	FUNCTION_29	CALL_1
0x25cb	    0x488b05000000	            mov rax, qword [0x04002612] 	      1590	ops.c	FUNCTION_29	IF_1
0x25d2	          0x488b00	                    mov rax, qword [rax]	      1590	ops.c	FUNCTION_29	IF_1
0x25d5	          0x4885c0	                           test rax, rax	      1590	ops.c	FUNCTION_29	IF_1
0x25d8	            0x750a	                           jne 0x4002624	      1590	ops.c	FUNCTION_29	IF_1
0x25da	      0xb800000000	                              mov eax, 0	      1591	ops.c	FUNCTION_29	IF_1
0x25df	      0xe99d000000	                           jmp 0x40026c1	      1591	ops.c	FUNCTION_29	IF_1
0x25e4	    0x48c745f80000	                  mov qword [rbp - 8], 0	      1593	ops.c	FUNCTION_29	FOR_1
0x25ec	            0xeb79	                           jmp 0x40026a7	      1593	ops.c	FUNCTION_29	FOR_1
0x25ee	    0x488b05000000	            mov rax, qword [0x04002635] 	      1595	ops.c	FUNCTION_29	FOR_1	CALL_2
0x25f5	          0x488b00	                    mov rax, qword [rax]	      1595	ops.c	FUNCTION_29	FOR_1	CALL_2
0x25f8	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1595	ops.c	FUNCTION_29	FOR_1	CALL_2
0x25fc	        0x48c1e203	                              shl rdx, 3	      1595	ops.c	FUNCTION_29	FOR_1	CALL_2
0x2600	          0x4801d0	                            add rax, rdx	      1595	ops.c	FUNCTION_29	FOR_1	CALL_2
0x2603	          0x488b00	                    mov rax, qword [rax]	      1595	ops.c	FUNCTION_29	FOR_1	CALL_2
0x2606	          0x8b55e8	             mov edx, dword [rbp - 0x18]	      1595	ops.c	FUNCTION_29	FOR_1	CALL_2
0x2609	            0x89d6	                            mov esi, edx	      1595	ops.c	FUNCTION_29	FOR_1	CALL_2
0x260b	          0x4889c7	                            mov rdi, rax	      1595	ops.c	FUNCTION_29	FOR_1	CALL_2
0x260e	      0xe800000000	                          call 0x4002653	      1595	ops.c	FUNCTION_29	FOR_1	CALL_2
0x2613	    0x488b05000000	            mov rax, qword [0x0400265a] 	      1599	ops.c	FUNCTION_29	FOR_1	IF_2
0x261a	         0xfb64010	           movzx eax, byte [rax + 0x10] 	      1599	ops.c	FUNCTION_29	FOR_1	IF_2
0x261e	            0x3c01	                               cmp al, 1	      1599	ops.c	FUNCTION_29	FOR_1	IF_2
0x2620	            0x7415	                            je 0x4002677	      1599	ops.c	FUNCTION_29	FOR_1	IF_2
0x2622	    0x488b05000000	            mov rax, qword [0x04002669] 	      1599	ops.c	FUNCTION_29	FOR_1	IF_2
0x2629	        0x488b4008	                mov rax, qword [rax + 8]	      1599	ops.c	FUNCTION_29	FOR_1	IF_2
0x262d	        0x4883e801	                              sub rax, 1	      1599	ops.c	FUNCTION_29	FOR_1	IF_2
0x2631	        0x483b45f8	                cmp rax, qword [rbp - 8]	      1599	ops.c	FUNCTION_29	FOR_1	IF_2
0x2635	            0x7e15	                           jle 0x400268c	      1599	ops.c	FUNCTION_29	FOR_1	IF_2
0x2637	        0x837de400	               cmp dword [rbp - 0x1c], 0	      1599	ops.c	FUNCTION_29	FOR_1	IF_2
0x263b	            0x750f	                           jne 0x400268c	      1599	ops.c	FUNCTION_29	FOR_1	IF_2
0x263d	          0x8b45e8	             mov eax, dword [rbp - 0x18]	      1600	ops.c	FUNCTION_29	FOR_1	CALL_3
0x2640	            0x89c6	                            mov esi, eax	      1600	ops.c	FUNCTION_29	FOR_1	CALL_3
0x2642	      0xbf00000000	                              mov edi, 0	      1600	ops.c	FUNCTION_29	FOR_1	CALL_3
0x2647	      0xe800000000	                          call 0x400268c	      1600	ops.c	FUNCTION_29	FOR_1	CALL_3
0x264c	      0xe800000000	                          call 0x4002691	      1604	ops.c	FUNCTION_29	FOR_1	CALL_4
0x2651	    0x8b0500000000	            mov eax, dword [0x04002697] 	      1605	ops.c	FUNCTION_29	FOR_1	IF_3
0x2657	            0x85c0	                           test eax, eax	      1605	ops.c	FUNCTION_29	FOR_1	IF_3
0x2659	            0x7407	                            je 0x40026a2	      1605	ops.c	FUNCTION_29	FOR_1	IF_3
0x265b	      0xb800000000	                              mov eax, 0	      1606	ops.c	FUNCTION_29	FOR_1	IF_3
0x2660	            0xeb1f	                           jmp 0x40026c1	      1606	ops.c	FUNCTION_29	FOR_1	IF_3
0x2662	      0x488345f801	                  add qword [rbp - 8], 1	      1593	ops.c	FUNCTION_29	FOR_1
0x2667	    0x488b05000000	            mov rax, qword [0x040026ae] 	      1593	ops.c	FUNCTION_29	FOR_1
0x266e	        0x488b4008	                mov rax, qword [rax + 8]	      1593	ops.c	FUNCTION_29	FOR_1
0x2672	        0x483b45f8	                cmp rax, qword [rbp - 8]	      1593	ops.c	FUNCTION_29	FOR_1
0x2676	     0xf8f72ffffff	                            jg 0x400262e	      1593	ops.c	FUNCTION_29	FOR_1
0x267c	      0xb801000000	                              mov eax, 1	      1608	ops.c	FUNCTION_29
0x2681	              0xc9	                                   leave	      1609	ops.c	FUNCTION_29
0x2682	              0xc3	                                     ret	      1609	ops.c	FUNCTION_29
write_reg_contents_lst	CALL,6:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,2:IF,5	84
0xdec0	              0x55	                                push rbp	      6960	ops.c	FUNCTION_86
0xdec1	          0x4889e5	                            mov rbp, rsp	      6960	ops.c	FUNCTION_86
0xdec4	        0x4883ec40	                           sub rsp, 0x40	      6960	ops.c	FUNCTION_86
0xdec8	          0x897ddc	             mov dword [rbp - 0x24], edi	      6960	ops.c	FUNCTION_86
0xdecb	        0x488975d0	             mov qword [rbp - 0x30], rsi	      6960	ops.c	FUNCTION_86
0xdecf	          0x8955d8	             mov dword [rbp - 0x28], edx	      6960	ops.c	FUNCTION_86
0xded2	          0x894dcc	             mov dword [rbp - 0x34], ecx	      6960	ops.c	FUNCTION_86
0xded5	        0x448945c8	             mov dword [rbp - 0x38], r8d	      6960	ops.c	FUNCTION_86
0xded9	        0x4c894dc0	              mov qword [rbp - 0x40], r9	      6960	ops.c	FUNCTION_86
0xdedd	    0x64488b042528	                mov rax, qword fs:[0x28]	      6960	ops.c	FUNCTION_86
0xdee6	        0x488945f8	                mov qword [rbp - 8], rax	      6960	ops.c	FUNCTION_86
0xdeea	            0x31c0	                            xor eax, eax	      6960	ops.c	FUNCTION_86
0xdeec	        0x837ddc2f	           cmp dword [rbp - 0x24], 0x2f 	      6963	ops.c	FUNCTION_86	IF_1
0xdef0	            0x7406	                            je 0x400df38	      6963	ops.c	FUNCTION_86	IF_1
0xdef2	        0x837ddc3d	           cmp dword [rbp - 0x24], 0x3d 	      6965	ops.c	FUNCTION_86	IF_1
0xdef6	            0x756f	                           jne 0x400dfa7	      6965	ops.c	FUNCTION_86	IF_1
0xdef8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6971	ops.c	FUNCTION_86	IF_1	IF_2
0xdefc	          0x488b00	                    mov rax, qword [rax]	      6971	ops.c	FUNCTION_86	IF_1	IF_2
0xdeff	          0x4885c0	                           test rax, rax	      6971	ops.c	FUNCTION_86	IF_1	IF_2
0xdf02	            0x750a	                           jne 0x400df4e	      6971	ops.c	FUNCTION_86	IF_1	IF_2
0xdf04	    0x48c745f00000	               mov qword [rbp - 0x10], 0	      6972	ops.c	FUNCTION_86	IF_1	IF_2
0xdf0c	            0xeb32	                           jmp 0x400df80	      6972	ops.c	FUNCTION_86	IF_1	IF_2
0xdf0e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6973	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3
0xdf12	        0x4883c008	                              add rax, 8	      6973	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3
0xdf16	          0x488b00	                    mov rax, qword [rax]	      6973	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3
0xdf19	          0x4885c0	                           test rax, rax	      6973	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3
0xdf1c	            0x7417	                            je 0x400df75	      6973	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3
0xdf1e	      0xbf00000000	                              mov edi, 0	      6975	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3	CALL_2
0xdf23	      0xe800000000	                          call 0x400df68	      6975	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3	CALL_2
0xdf28	          0x4889c7	                            mov rdi, rax	      6975	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3	CALL_2
0xdf2b	      0xe800000000	                          call 0x400df70	      6975	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3	CALL_2
0xdf30	      0xe99d000000	                           jmp 0x400e012	      6977	ops.c	FUNCTION_86	IF_1	ELSE_1	IF_3
0xdf35	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      6980	ops.c	FUNCTION_86	IF_1	ELSE_2
0xdf39	          0x488b00	                    mov rax, qword [rax]	      6980	ops.c	FUNCTION_86	IF_1	ELSE_2
0xdf3c	        0x488945f0	             mov qword [rbp - 0x10], rax	      6980	ops.c	FUNCTION_86	IF_1	ELSE_2
0xdf40	          0x8b4dc8	             mov ecx, dword [rbp - 0x38]	      6981	ops.c	FUNCTION_86	IF_1	CALL_3
0xdf43	        0x488b7dc0	             mov rdi, qword [rbp - 0x40]	      6981	ops.c	FUNCTION_86	IF_1	CALL_3
0xdf47	          0x8b55cc	             mov edx, dword [rbp - 0x34]	      6981	ops.c	FUNCTION_86	IF_1	CALL_3
0xdf4a	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      6981	ops.c	FUNCTION_86	IF_1	CALL_3
0xdf4e	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6981	ops.c	FUNCTION_86	IF_1	CALL_3
0xdf51	          0x4989f9	                             mov r9, rdi	      6981	ops.c	FUNCTION_86	IF_1	CALL_3
0xdf54	          0x4189c8	                            mov r8d, ecx	      6981	ops.c	FUNCTION_86	IF_1	CALL_3
0xdf57	            0x89d1	                            mov ecx, edx	      6981	ops.c	FUNCTION_86	IF_1	CALL_3
0xdf59	      0xbaffffffff	                     mov edx, 0xffffffff	      6981	ops.c	FUNCTION_86	IF_1	CALL_3
0xdf5e	            0x89c7	                            mov edi, eax	      6981	ops.c	FUNCTION_86	IF_1	CALL_3
0xdf60	      0xe800000000	                          call 0x400dfa5	      6981	ops.c	FUNCTION_86	IF_1	CALL_3
0xdf65	            0xeb6b	                           jmp 0x400e012	      6982	ops.c	FUNCTION_86	IF_1
0xdf67	        0x837ddc5f	           cmp dword [rbp - 0x24], 0x5f 	      6985	ops.c	FUNCTION_86	IF_4
0xdf6b	            0x7461	                            je 0x400e00e	      6985	ops.c	FUNCTION_86	IF_4
0xdf6d	        0x488d7dc8	                   lea rdi, [rbp - 0x38]	      6988	ops.c	FUNCTION_86	IF_5	CALL_4
0xdf71	          0x8b4dcc	             mov ecx, dword [rbp - 0x34]	      6988	ops.c	FUNCTION_86	IF_5	CALL_4
0xdf74	        0x488d55e8	                   lea rdx, [rbp - 0x18]	      6988	ops.c	FUNCTION_86	IF_5	CALL_4
0xdf78	        0x488d75e0	                   lea rsi, [rbp - 0x20]	      6988	ops.c	FUNCTION_86	IF_5	CALL_4
0xdf7c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6988	ops.c	FUNCTION_86	IF_5	CALL_4
0xdf7f	          0x4989f8	                             mov r8, rdi	      6988	ops.c	FUNCTION_86	IF_5	CALL_4
0xdf82	            0x89c7	                            mov edi, eax	      6988	ops.c	FUNCTION_86	IF_5	CALL_4
0xdf84	      0xe843feffff	                 call sym.init_write_reg	      6988	ops.c	FUNCTION_86	IF_5	CALL_4
0xdf89	            0x85c0	                           test eax, eax	      6988	ops.c	FUNCTION_86	IF_5	CALL_4
0xdf8b	            0x7444	                            je 0x400e011	      6988	ops.c	FUNCTION_86	IF_5	CALL_4
0xdf8d	          0x8b75c8	             mov esi, dword [rbp - 0x38]	      6992	ops.c	FUNCTION_86	CALL_5
0xdf90	    0x488b05000000	            mov rax, qword [0x0400dfd7] 	      6992	ops.c	FUNCTION_86	CALL_5
0xdf97	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	      6992	ops.c	FUNCTION_86	CALL_5
0xdf9b	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      6992	ops.c	FUNCTION_86	CALL_5
0xdf9f	    0x41b901000000	                              mov r9d, 1	      6992	ops.c	FUNCTION_86	CALL_5
0xdfa5	          0x4989c8	                             mov r8, rcx	      6992	ops.c	FUNCTION_86	CALL_5
0xdfa8	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	      6992	ops.c	FUNCTION_86	CALL_5
0xdfaf	          0x4889c7	                            mov rdi, rax	      6992	ops.c	FUNCTION_86	CALL_5
0xdfb2	      0xe85c020000	                     call sym.str_to_reg	      6992	ops.c	FUNCTION_86	CALL_5
0xdfb7	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      6994	ops.c	FUNCTION_86	CALL_6
0xdfbb	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      6994	ops.c	FUNCTION_86	CALL_6
0xdfbf	          0x8b45dc	             mov eax, dword [rbp - 0x24]	      6994	ops.c	FUNCTION_86	CALL_6
0xdfc2	          0x4889ce	                            mov rsi, rcx	      6994	ops.c	FUNCTION_86	CALL_6
0xdfc5	            0x89c7	                            mov edi, eax	      6994	ops.c	FUNCTION_86	CALL_6
0xdfc7	      0xe885feffff	               call sym.finish_write_reg	      6994	ops.c	FUNCTION_86	CALL_6
0xdfcc	            0xeb04	                           jmp 0x400e012	      6994	ops.c	FUNCTION_86	CALL_6
0xdfce	              0x90	                                     nop	      6986	ops.c	FUNCTION_86	IF_4
0xdfcf	            0xeb01	                           jmp 0x400e012	      6986	ops.c	FUNCTION_86	IF_4
0xdfd1	              0x90	                                     nop	      6990	ops.c	FUNCTION_86	IF_5
0xdfd2	        0x488b45f8	                mov rax, qword [rbp - 8]	      6995	ops.c	FUNCTION_86
0xdfd6	    0x644833042528	                xor rax, qword fs:[0x28]	      6995	ops.c	FUNCTION_86
0xdfdf	            0x7405	                            je 0x400e026	      6995	ops.c	FUNCTION_86
0xdfe1	      0xe800000000	                          call 0x400e026	      6995	ops.c	FUNCTION_86
0xdfe6	              0xc9	                                   leave	      6995	ops.c	FUNCTION_86
0xdfe7	              0xc3	                                     ret	      6995	ops.c	FUNCTION_86
adjust_cursor_eol	CALL,3:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,2	51
0x8807	              0x55	                                push rbp	      4115	ops.c	FUNCTION_49
0x8808	          0x4889e5	                            mov rbp, rsp	      4115	ops.c	FUNCTION_49
0x880b	        0x4883ec10	                           sub rsp, 0x10	      4115	ops.c	FUNCTION_49
0x880f	    0x64488b042528	                mov rax, qword fs:[0x28]	      4115	ops.c	FUNCTION_49
0x8818	        0x488945f8	                mov qword [rbp - 8], rax	      4115	ops.c	FUNCTION_49
0x881c	            0x31c0	                            xor eax, eax	      4115	ops.c	FUNCTION_49
0x881e	    0x488b05000000	            mov rax, qword [0x04008865] 	      4116	ops.c	FUNCTION_49	IF_1
0x8825	          0x8b4040	            mov eax, dword [rax + 0x40] 	      4116	ops.c	FUNCTION_49	IF_1
0x8828	            0x85c0	                           test eax, eax	      4116	ops.c	FUNCTION_49	IF_1
0x882a	            0x7e7e	                           jle 0x40088ea	      4116	ops.c	FUNCTION_49	IF_1
0x882c	      0xe800000000	                          call 0x4008871	      4117	ops.c	FUNCTION_49	IF_1	CALL_1
0x8831	            0x85c0	                           test eax, eax	      4117	ops.c	FUNCTION_49	IF_1	CALL_1
0x8833	            0x7575	                           jne 0x40088ea	      4117	ops.c	FUNCTION_49	IF_1	CALL_1
0x8835	    0x8b0500000000	            mov eax, dword [0x0400887b] 	      4119	ops.c	FUNCTION_49	IF_1
0x883b	          0x83e008	                              and eax, 8	      4119	ops.c	FUNCTION_49	IF_1
0x883e	            0x85c0	                           test eax, eax	      4119	ops.c	FUNCTION_49	IF_1
0x8840	            0x7568	                           jne 0x40088ea	      4119	ops.c	FUNCTION_49	IF_1
0x8842	    0x8b0500000000	            mov eax, dword [0x04008888] 	      4121	ops.c	FUNCTION_49	IF_1
0x8848	            0x85c0	                           test eax, eax	      4121	ops.c	FUNCTION_49	IF_1
0x884a	            0x755e	                           jne 0x40088ea	      4121	ops.c	FUNCTION_49	IF_1
0x884c	    0x8b0500000000	            mov eax, dword [0x04008892] 	      4121	ops.c	FUNCTION_49	IF_1
0x8852	          0x83e010	                           and eax, 0x10	      4121	ops.c	FUNCTION_49	IF_1
0x8855	            0x85c0	                           test eax, eax	      4121	ops.c	FUNCTION_49	IF_1
0x8857	            0x7551	                           jne 0x40088ea	      4121	ops.c	FUNCTION_49	IF_1
0x8859	      0xe800000000	                          call 0x400889e	      4124	ops.c	FUNCTION_49	IF_1	CALL_2
0x885e	    0x8b0500000000	            mov eax, dword [0x040088a4] 	      4127	ops.c	FUNCTION_49	IF_1	IF_2
0x8864	          0x83f804	                              cmp eax, 4	      4127	ops.c	FUNCTION_49	IF_1	IF_2
0x8867	            0x7541	                           jne 0x40088ea	      4127	ops.c	FUNCTION_49	IF_1	IF_2
0x8869	    0x488b05000000	            mov rax, qword [0x040088b0] 	      4132	ops.c	FUNCTION_49	IF_1	IF_2	CALL_3
0x8870	        0x488d7038	                   lea rsi, [rax + 0x38]	      4132	ops.c	FUNCTION_49	IF_1	IF_2	CALL_3
0x8874	    0x488b05000000	            mov rax, qword [0x040088bb] 	      4132	ops.c	FUNCTION_49	IF_1	IF_2	CALL_3
0x887b	        0x488d4df4	                    lea rcx, [rbp - 0xc]	      4132	ops.c	FUNCTION_49	IF_1	IF_2	CALL_3
0x887f	        0x488d55f0	                   lea rdx, [rbp - 0x10]	      4132	ops.c	FUNCTION_49	IF_1	IF_2	CALL_3
0x8883	          0x4989c8	                             mov r8, rcx	      4132	ops.c	FUNCTION_49	IF_1	IF_2	CALL_3
0x8886	      0xb900000000	                              mov ecx, 0	      4132	ops.c	FUNCTION_49	IF_1	IF_2	CALL_3
0x888b	          0x4889c7	                            mov rdi, rax	      4132	ops.c	FUNCTION_49	IF_1	IF_2	CALL_3
0x888e	      0xe800000000	                          call 0x40088d3	      4132	ops.c	FUNCTION_49	IF_1	IF_2	CALL_3
0x8893	    0x488b05000000	            mov rax, qword [0x040088da] 	      4133	ops.c	FUNCTION_49	IF_1	IF_2
0x889a	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	      4133	ops.c	FUNCTION_49	IF_1	IF_2
0x889d	          0x8b55f0	             mov edx, dword [rbp - 0x10]	      4133	ops.c	FUNCTION_49	IF_1	IF_2
0x88a0	            0x29d1	                            sub ecx, edx	      4133	ops.c	FUNCTION_49	IF_1	IF_2
0x88a2	            0x89ca	                            mov edx, ecx	      4133	ops.c	FUNCTION_49	IF_1	IF_2
0x88a4	          0x83c201	                              add edx, 1	      4133	ops.c	FUNCTION_49	IF_1	IF_2
0x88a7	          0x895044	             mov dword [rax + 0x44], edx	      4133	ops.c	FUNCTION_49	IF_1	IF_2
0x88aa	              0x90	                                     nop	      4137	ops.c	FUNCTION_49
0x88ab	        0x488b45f8	                mov rax, qword [rbp - 8]	      4137	ops.c	FUNCTION_49
0x88af	    0x644833042528	                xor rax, qword fs:[0x28]	      4137	ops.c	FUNCTION_49
0x88b8	            0x7405	                            je 0x40088ff	      4137	ops.c	FUNCTION_49
0x88ba	      0xe800000000	                          call 0x40088ff	      4137	ops.c	FUNCTION_49
0x88bf	              0xc9	                                   leave	      4137	ops.c	FUNCTION_49
0x88c0	              0xc3	                                     ret	      4137	ops.c	FUNCTION_49
finish_viminfo_registers	CALL,3:FOR,2:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,2	60
0xc3ad	              0x55	                                push rbp	      6021	ops.c	FUNCTION_69
0xc3ae	          0x4889e5	                            mov rbp, rsp	      6021	ops.c	FUNCTION_69
0xc3b1	        0x4883ec10	                           sub rsp, 0x10	      6021	ops.c	FUNCTION_69
0xc3b5	    0x488b05000000	            mov rax, qword [0x0400c3fc] 	      6025	ops.c	FUNCTION_69	IF_1
0xc3bc	          0x4885c0	                           test rax, rax	      6025	ops.c	FUNCTION_69	IF_1
0xc3bf	     0xf84ce000000	                            je 0x400c4d3	      6025	ops.c	FUNCTION_69	IF_1
0xc3c5	    0xc745f8000000	                  mov dword [rbp - 8], 0	      6027	ops.c	FUNCTION_69	IF_1	FOR_1
0xc3cc	      0xe99e000000	                           jmp 0x400c4af	      6027	ops.c	FUNCTION_69	IF_1	FOR_1
0xc3d1	    0x488b05000000	            mov rax, qword [0x0400c418] 	      6028	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2
0xc3d8	          0x8b55f8	                mov edx, dword [rbp - 8]	      6028	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2
0xc3db	          0x4863d2	                         movsxd rdx, edx	      6028	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2
0xc3de	        0x48c1e205	                              shl rdx, 5	      6028	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2
0xc3e2	          0x4801d0	                            add rax, rdx	      6028	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2
0xc3e5	          0x488b00	                    mov rax, qword [rax]	      6028	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2
0xc3e8	          0x4885c0	                           test rax, rax	      6028	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2
0xc3eb	            0x747e	                            je 0x400c4ab	      6028	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2
0xc3ed	    0xc745fc000000	                  mov dword [rbp - 4], 0	      6030	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0xc3f4	            0xeb33	                           jmp 0x400c469	      6030	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0xc3f6	    0x488b05000000	            mov rax, qword [0x0400c43d] 	      6031	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0xc3fd	          0x8b55f8	                mov edx, dword [rbp - 8]	      6031	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0xc400	          0x4863d2	                         movsxd rdx, edx	      6031	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0xc403	        0x48c1e205	                              shl rdx, 5	      6031	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0xc407	          0x4801d0	                            add rax, rdx	      6031	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0xc40a	          0x488b00	                    mov rax, qword [rax]	      6031	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0xc40d	          0x8b55fc	                mov edx, dword [rbp - 4]	      6031	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0xc410	          0x4863d2	                         movsxd rdx, edx	      6031	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0xc413	        0x48c1e203	                              shl rdx, 3	      6031	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0xc417	          0x4801d0	                            add rax, rdx	      6031	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0xc41a	          0x488b00	                    mov rax, qword [rax]	      6031	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0xc41d	          0x4889c7	                            mov rdi, rax	      6031	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0xc420	      0xe800000000	                          call 0x400c465	      6031	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_1
0xc425	        0x8345fc01	                  add dword [rbp - 4], 1	      6030	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0xc429	          0x8b45fc	                mov eax, dword [rbp - 4]	      6030	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0xc42c	          0x4863d0	                         movsxd rdx, eax	      6030	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0xc42f	    0x488b05000000	            mov rax, qword [0x0400c476] 	      6030	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0xc436	          0x8b4df8	                mov ecx, dword [rbp - 8]	      6030	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0xc439	          0x4863c9	                         movsxd rcx, ecx	      6030	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0xc43c	        0x48c1e105	                              shl rcx, 5	      6030	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0xc440	          0x4801c8	                            add rax, rcx	      6030	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0xc443	        0x488b4008	                mov rax, qword [rax + 8]	      6030	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0xc447	          0x4839c2	                            cmp rdx, rax	      6030	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0xc44a	            0x7caa	                            jl 0x400c436	      6030	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	FOR_2
0xc44c	    0x488b05000000	            mov rax, qword [0x0400c493] 	      6032	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_2
0xc453	          0x8b55f8	                mov edx, dword [rbp - 8]	      6032	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_2
0xc456	          0x4863d2	                         movsxd rdx, edx	      6032	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_2
0xc459	        0x48c1e205	                              shl rdx, 5	      6032	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_2
0xc45d	          0x4801d0	                            add rax, rdx	      6032	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_2
0xc460	          0x488b00	                    mov rax, qword [rax]	      6032	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_2
0xc463	          0x4889c7	                            mov rdi, rax	      6032	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_2
0xc466	      0xe800000000	                          call 0x400c4ab	      6032	ops.c	FUNCTION_69	IF_1	FOR_1	IF_2	CALL_2
0xc46b	        0x8345f801	                  add dword [rbp - 8], 1	      6027	ops.c	FUNCTION_69	IF_1	FOR_1
0xc46f	        0x837df826	               cmp dword [rbp - 8], 0x26	      6027	ops.c	FUNCTION_69	IF_1	FOR_1
0xc473	     0xf8e58ffffff	                           jle 0x400c411	      6027	ops.c	FUNCTION_69	IF_1	FOR_1
0xc479	    0x488b05000000	            mov rax, qword [0x0400c4c0] 	      6034	ops.c	FUNCTION_69	IF_1	CALL_3
0xc480	          0x4889c7	                            mov rdi, rax	      6034	ops.c	FUNCTION_69	IF_1	CALL_3
0xc483	      0xe800000000	                          call 0x400c4c8	      6034	ops.c	FUNCTION_69	IF_1	CALL_3
0xc488	    0x48c705000000	               mov qword [0x0400c4d3], 0	      6035	ops.c	FUNCTION_69	IF_1
0xc493	              0x90	                                     nop	      6037	ops.c	FUNCTION_69
0xc494	              0xc9	                                   leave	      6037	ops.c	FUNCTION_69
0xc495	              0xc3	                                     ret	      6037	ops.c	FUNCTION_69
valid_yank_reg	CALL,2:FOR,0:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,1	44
0x1436	              0x55	                                push rbp	       870	ops.c	FUNCTION_14
0x1437	          0x4889e5	                            mov rbp, rsp	       870	ops.c	FUNCTION_14
0x143a	        0x4883ec10	                           sub rsp, 0x10	       870	ops.c	FUNCTION_14
0x143e	          0x897dfc	                mov dword [rbp - 4], edi	       870	ops.c	FUNCTION_14
0x1441	          0x8975f8	                mov dword [rbp - 8], esi	       870	ops.c	FUNCTION_14
0x1444	        0x837dfc00	                  cmp dword [rbp - 4], 0	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x1448	            0x7e21	                           jle 0x40014ab	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x144a	          0x8b45fc	                mov eax, dword [rbp - 4]	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x144d	          0x83e841	                           sub eax, 0x41	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x1450	          0x83f819	                           cmp eax, 0x19	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x1453	            0x7654	                           jbe 0x40014e9	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x1455	          0x8b45fc	                mov eax, dword [rbp - 4]	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x1458	          0x83e861	                           sub eax, 0x61	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x145b	          0x83f819	                           cmp eax, 0x19	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x145e	            0x7649	                           jbe 0x40014e9	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x1460	          0x8b45fc	                mov eax, dword [rbp - 4]	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x1463	          0x83e830	                           sub eax, 0x30	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x1466	          0x83f809	                              cmp eax, 9	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x1469	            0x763e	                           jbe 0x40014e9	       871	ops.c	FUNCTION_14	IF_1	CALL_1
0x146b	        0x837df800	                  cmp dword [rbp - 8], 0	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x146f	            0x7514	                           jne 0x40014c5	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x1471	          0x8b45fc	                mov eax, dword [rbp - 4]	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x1474	            0x89c6	                            mov esi, eax	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x1476	      0xbf00000000	                              mov edi, 0	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x147b	      0xe800000000	                          call 0x40014c0	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x1480	          0x4885c0	                           test rax, rax	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x1483	            0x7524	                           jne 0x40014e9	       872	ops.c	FUNCTION_14	IF_1	CALL_2
0x1485	        0x837dfc23	               cmp dword [rbp - 4], 0x23	       879	ops.c	FUNCTION_14	IF_1
0x1489	            0x741e	                            je 0x40014e9	       879	ops.c	FUNCTION_14	IF_1
0x148b	        0x837dfc22	               cmp dword [rbp - 4], 0x22	       880	ops.c	FUNCTION_14	IF_1
0x148f	            0x7418	                            je 0x40014e9	       880	ops.c	FUNCTION_14	IF_1
0x1491	        0x837dfc2d	               cmp dword [rbp - 4], 0x2d	       881	ops.c	FUNCTION_14	IF_1
0x1495	            0x7412	                            je 0x40014e9	       881	ops.c	FUNCTION_14	IF_1
0x1497	        0x837dfc5f	               cmp dword [rbp - 4], 0x5f	       882	ops.c	FUNCTION_14	IF_1
0x149b	            0x740c	                            je 0x40014e9	       882	ops.c	FUNCTION_14	IF_1
0x149d	        0x837dfc2a	               cmp dword [rbp - 4], 0x2a	       884	ops.c	FUNCTION_14	IF_1
0x14a1	            0x7406	                            je 0x40014e9	       884	ops.c	FUNCTION_14	IF_1
0x14a3	        0x837dfc2b	               cmp dword [rbp - 4], 0x2b	       885	ops.c	FUNCTION_14	IF_1
0x14a7	            0x7507	                           jne 0x40014f0	       885	ops.c	FUNCTION_14	IF_1
0x14a9	      0xb801000000	                              mov eax, 1	       891	ops.c	FUNCTION_14	IF_1
0x14ae	            0xeb05	                           jmp 0x40014f5	       891	ops.c	FUNCTION_14	IF_1
0x14b0	      0xb800000000	                              mov eax, 0	       892	ops.c	FUNCTION_14
0x14b5	              0xc9	                                   leave	       893	ops.c	FUNCTION_14
0x14b6	              0xc3	                                     ret	       893	ops.c	FUNCTION_14
do_addsub	CALL,47:FOR,2:SWITCH,0:functions,0:WHILE,8:DO,0:ELSE,15:IF,53	1102
0xb086	              0x55	                                push rbp	      5585	ops.c	FUNCTION_67
0xb087	          0x4889e5	                            mov rbp, rsp	      5585	ops.c	FUNCTION_67
0xb08a	              0x53	                                push rbx	      5585	ops.c	FUNCTION_67
0xb08b	    0x4881ec180100	                          sub rsp, 0x118	      5585	ops.c	FUNCTION_67
0xb092	    0x89bdfcfeffff	            mov dword [rbp - 0x104], edi	      5585	ops.c	FUNCTION_67
0xb098	    0x4889b5f0feff	            mov qword [rbp - 0x110], rsi	      5585	ops.c	FUNCTION_67
0xb09f	    0x8995f8feffff	            mov dword [rbp - 0x108], edx	      5585	ops.c	FUNCTION_67
0xb0a5	    0x48898de8feff	            mov qword [rbp - 0x118], rcx	      5585	ops.c	FUNCTION_67
0xb0ac	    0x64488b042528	                mov rax, qword fs:[0x28]	      5585	ops.c	FUNCTION_67
0xb0b5	        0x488945e8	             mov qword [rbp - 0x18], rax	      5585	ops.c	FUNCTION_67
0xb0b9	            0x31c0	                            xor eax, eax	      5585	ops.c	FUNCTION_67
0xb0bb	    0xc7851cffffff	               mov dword [rbp - 0xe4], 0	      5602	ops.c	FUNCTION_67
0xb0c5	    0xc78520ffffff	               mov dword [rbp - 0xe0], 1	      5603	ops.c	FUNCTION_67
0xb0cf	    0x8b0500000000	            mov eax, dword [0x0400b115] 	      5604	ops.c	FUNCTION_67
0xb0d5	    0x898534ffffff	             mov dword [rbp - 0xcc], eax	      5604	ops.c	FUNCTION_67
0xb0db	    0xc78524ffffff	               mov dword [rbp - 0xdc], 0	      5605	ops.c	FUNCTION_67
0xb0e5	    0x488b05000000	            mov rax, qword [0x0400b12c] 	      5606	ops.c	FUNCTION_67
0xb0ec	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      5606	ops.c	FUNCTION_67
0xb0f0	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5606	ops.c	FUNCTION_67
0xb0f4	    0x48898570ffff	             mov qword [rbp - 0x90], rax	      5606	ops.c	FUNCTION_67
0xb0fb	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	      5606	ops.c	FUNCTION_67
0xb102	    0xc78528ffffff	               mov dword [rbp - 0xd8], 0	      5607	ops.c	FUNCTION_67
0xb10c	    0x488b05000000	            mov rax, qword [0x0400b153] 	      5611	ops.c	FUNCTION_67	CALL_1
0xb113	    0x488b80301500	          mov rax, qword [rax + 0x1530] 	      5611	ops.c	FUNCTION_67	CALL_1
0xb11a	      0xbe78000000	                           mov esi, 0x78	      5611	ops.c	FUNCTION_67	CALL_1
0xb11f	          0x4889c7	                            mov rdi, rax	      5611	ops.c	FUNCTION_67	CALL_1
0xb122	      0xe800000000	                          call 0x400b167	      5611	ops.c	FUNCTION_67	CALL_1
0xb127	          0x4885c0	                           test rax, rax	      5611	ops.c	FUNCTION_67	CALL_1
0xb12a	           0xf95c0	                                setne al	      5611	ops.c	FUNCTION_67	CALL_1
0xb12d	           0xfb6c0	                           movzx eax, al	      5611	ops.c	FUNCTION_67	CALL_1
0xb130	    0x898538ffffff	             mov dword [rbp - 0xc8], eax	      5611	ops.c	FUNCTION_67	CALL_1
0xb136	    0x488b05000000	            mov rax, qword [0x0400b17d] 	      5612	ops.c	FUNCTION_67	CALL_2
0xb13d	    0x488b80301500	          mov rax, qword [rax + 0x1530] 	      5612	ops.c	FUNCTION_67	CALL_2
0xb144	      0xbe6f000000	                           mov esi, 0x6f	      5612	ops.c	FUNCTION_67	CALL_2
0xb149	          0x4889c7	                            mov rdi, rax	      5612	ops.c	FUNCTION_67	CALL_2
0xb14c	      0xe800000000	                          call 0x400b191	      5612	ops.c	FUNCTION_67	CALL_2
0xb151	          0x4885c0	                           test rax, rax	      5612	ops.c	FUNCTION_67	CALL_2
0xb154	           0xf95c0	                                setne al	      5612	ops.c	FUNCTION_67	CALL_2
0xb157	           0xfb6c0	                           movzx eax, al	      5612	ops.c	FUNCTION_67	CALL_2
0xb15a	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	      5612	ops.c	FUNCTION_67	CALL_2
0xb160	    0x488b05000000	            mov rax, qword [0x0400b1a7] 	      5613	ops.c	FUNCTION_67	CALL_3
0xb167	    0x488b80301500	          mov rax, qword [rax + 0x1530] 	      5613	ops.c	FUNCTION_67	CALL_3
0xb16e	      0xbe62000000	                           mov esi, 0x62	      5613	ops.c	FUNCTION_67	CALL_3
0xb173	          0x4889c7	                            mov rdi, rax	      5613	ops.c	FUNCTION_67	CALL_3
0xb176	      0xe800000000	                          call 0x400b1bb	      5613	ops.c	FUNCTION_67	CALL_3
0xb17b	          0x4885c0	                           test rax, rax	      5613	ops.c	FUNCTION_67	CALL_3
0xb17e	           0xf95c0	                                setne al	      5613	ops.c	FUNCTION_67	CALL_3
0xb181	           0xfb6c0	                           movzx eax, al	      5613	ops.c	FUNCTION_67	CALL_3
0xb184	    0x898540ffffff	             mov dword [rbp - 0xc0], eax	      5613	ops.c	FUNCTION_67	CALL_3
0xb18a	    0x488b05000000	            mov rax, qword [0x0400b1d1] 	      5614	ops.c	FUNCTION_67	CALL_4
0xb191	    0x488b80301500	          mov rax, qword [rax + 0x1530] 	      5614	ops.c	FUNCTION_67	CALL_4
0xb198	      0xbe70000000	                           mov esi, 0x70	      5614	ops.c	FUNCTION_67	CALL_4
0xb19d	          0x4889c7	                            mov rdi, rax	      5614	ops.c	FUNCTION_67	CALL_4
0xb1a0	      0xe800000000	                          call 0x400b1e5	      5614	ops.c	FUNCTION_67	CALL_4
0xb1a5	          0x4885c0	                           test rax, rax	      5614	ops.c	FUNCTION_67	CALL_4
0xb1a8	           0xf95c0	                                setne al	      5614	ops.c	FUNCTION_67	CALL_4
0xb1ab	           0xfb6c0	                           movzx eax, al	      5614	ops.c	FUNCTION_67	CALL_4
0xb1ae	    0x898544ffffff	             mov dword [rbp - 0xbc], eax	      5614	ops.c	FUNCTION_67	CALL_4
0xb1b4	    0x488b0d000000	            mov rcx, qword [0x0400b1fb] 	      5616	ops.c	FUNCTION_67
0xb1bb	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      5616	ops.c	FUNCTION_67
0xb1c2	        0x488b5008	                mov rdx, qword [rax + 8]	      5616	ops.c	FUNCTION_67
0xb1c6	          0x488b00	                    mov rax, qword [rax]	      5616	ops.c	FUNCTION_67
0xb1c9	        0x48894138	             mov qword [rcx + 0x38], rax	      5616	ops.c	FUNCTION_67
0xb1cd	        0x48895140	             mov qword [rcx + 0x40], rdx	      5616	ops.c	FUNCTION_67
0xb1d1	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      5617	ops.c	FUNCTION_67	CALL_5
0xb1d8	          0x488b00	                    mov rax, qword [rax]	      5617	ops.c	FUNCTION_67	CALL_5
0xb1db	          0x4889c7	                            mov rdi, rax	      5617	ops.c	FUNCTION_67	CALL_5
0xb1de	      0xe800000000	                          call 0x400b223	      5617	ops.c	FUNCTION_67	CALL_5
0xb1e3	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      5617	ops.c	FUNCTION_67	CALL_5
0xb1ea	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      5618	ops.c	FUNCTION_67
0xb1f1	          0x8b4008	                mov eax, dword [rax + 8]	      5618	ops.c	FUNCTION_67
0xb1f4	    0x898508ffffff	             mov dword [rbp - 0xf8], eax	      5618	ops.c	FUNCTION_67
0xb1fa	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5620	ops.c	FUNCTION_67	IF_1
0xb201	           0xfb600	                   movzx eax, byte [rax]	      5620	ops.c	FUNCTION_67	IF_1
0xb204	            0x84c0	                             test al, al	      5620	ops.c	FUNCTION_67	IF_1
0xb206	     0xf8423110000	                            je 0x400c36f	      5620	ops.c	FUNCTION_67	IF_1
0xb20c	    0x8b0500000000	            mov eax, dword [0x0400b252] 	      5626	ops.c	FUNCTION_67	IF_2
0xb212	            0x85c0	                           test eax, eax	      5626	ops.c	FUNCTION_67	IF_2
0xb214	     0xf85de050000	                           jne 0x400b838	      5626	ops.c	FUNCTION_67	IF_2
0xb21a	    0x83bd40ffffff	               cmp dword [rbp - 0xc0], 0	      5628	ops.c	FUNCTION_67	IF_2	IF_3
0xb221	            0x746f	                            je 0x400b2d2	      5628	ops.c	FUNCTION_67	IF_2	IF_3
0xb223	            0xeb40	                           jmp 0x400b2a5	      5629	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0xb225	    0x83ad08ffffff	               sub dword [rbp - 0xf8], 1	      5631	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1
0xb22c	    0x8b0500000000	            mov eax, dword [0x0400b272] 	      5633	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0xb232	            0x85c0	                           test eax, eax	      5633	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0xb234	            0x742f	                            je 0x400b2a5	      5633	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0xb236	    0x488b05000000	            mov rax, qword [0x0400b27d] 	      5634	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0xb23d	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      5634	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0xb243	          0x4863ca	                         movsxd rcx, edx	      5634	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0xb246	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5634	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0xb24d	          0x4801d1	                            add rcx, rdx	      5634	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0xb250	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5634	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0xb257	          0x4889ce	                            mov rsi, rcx	      5634	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0xb25a	          0x4889d7	                            mov rdi, rdx	      5634	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0xb25d	            0xffd0	                                call rax	      5634	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0xb25f	    0x298508ffffff	             sub dword [rbp - 0xf8], eax	      5634	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	IF_4
0xb265	    0x83bd08ffffff	               cmp dword [rbp - 0xf8], 0	      5629	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0xb26c	            0x7e24	                           jle 0x400b2d2	      5629	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0xb26e	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5629	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0xb274	          0x4863d0	                         movsxd rdx, eax	      5629	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0xb277	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5629	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0xb27e	          0x4801d0	                            add rax, rdx	      5629	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0xb281	           0xfb600	                   movzx eax, byte [rax]	      5629	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0xb284	           0xfb6c0	                           movzx eax, al	      5629	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0xb287	            0x89c7	                            mov edi, eax	      5629	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0xb289	      0xe800000000	                          call 0x400b2ce	      5629	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0xb28e	            0x85c0	                           test eax, eax	      5629	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0xb290	            0x7593	                           jne 0x400b265	      5629	ops.c	FUNCTION_67	IF_2	IF_3	WHILE_1	CALL_6
0xb292	    0x83bd38ffffff	               cmp dword [rbp - 0xc8], 0	      5638	ops.c	FUNCTION_67	IF_2	IF_5
0xb299	            0x746f	                            je 0x400b34a	      5638	ops.c	FUNCTION_67	IF_2	IF_5
0xb29b	            0xeb40	                           jmp 0x400b31d	      5639	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0xb29d	    0x83ad08ffffff	               sub dword [rbp - 0xf8], 1	      5641	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2
0xb2a4	    0x8b0500000000	            mov eax, dword [0x0400b2ea] 	      5643	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0xb2aa	            0x85c0	                           test eax, eax	      5643	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0xb2ac	            0x742f	                            je 0x400b31d	      5643	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0xb2ae	    0x488b05000000	            mov rax, qword [0x0400b2f5] 	      5644	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0xb2b5	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      5644	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0xb2bb	          0x4863ca	                         movsxd rcx, edx	      5644	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0xb2be	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5644	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0xb2c5	          0x4801d1	                            add rcx, rdx	      5644	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0xb2c8	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5644	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0xb2cf	          0x4889ce	                            mov rsi, rcx	      5644	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0xb2d2	          0x4889d7	                            mov rdi, rdx	      5644	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0xb2d5	            0xffd0	                                call rax	      5644	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0xb2d7	    0x298508ffffff	             sub dword [rbp - 0xf8], eax	      5644	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	IF_6
0xb2dd	    0x83bd08ffffff	               cmp dword [rbp - 0xf8], 0	      5639	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0xb2e4	            0x7e24	                           jle 0x400b34a	      5639	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0xb2e6	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5639	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0xb2ec	          0x4863d0	                         movsxd rdx, eax	      5639	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0xb2ef	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5639	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0xb2f6	          0x4801d0	                            add rax, rdx	      5639	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0xb2f9	           0xfb600	                   movzx eax, byte [rax]	      5639	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0xb2fc	           0xfb6c0	                           movzx eax, al	      5639	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0xb2ff	            0x89c7	                            mov edi, eax	      5639	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0xb301	      0xe800000000	                          call 0x400b346	      5639	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0xb306	            0x85c0	                           test eax, eax	      5639	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0xb308	            0x7593	                           jne 0x400b2dd	      5639	ops.c	FUNCTION_67	IF_2	IF_5	WHILE_2	CALL_7
0xb30a	    0x83bd40ffffff	               cmp dword [rbp - 0xc0], 0	      5648	ops.c	FUNCTION_67	IF_2	IF_7
0xb311	     0xf844c010000	                            je 0x400b4a3	      5648	ops.c	FUNCTION_67	IF_2	IF_7
0xb317	    0x83bd38ffffff	               cmp dword [rbp - 0xc8], 0	      5649	ops.c	FUNCTION_67	IF_2	IF_7
0xb31e	     0xf843f010000	                            je 0x400b4a3	      5649	ops.c	FUNCTION_67	IF_2	IF_7
0xb324	    0x83bd08ffffff	               cmp dword [rbp - 0xf8], 0	      5650	ops.c	FUNCTION_67	IF_2	IF_7
0xb32b	     0xf8eb3000000	                           jle 0x400b424	      5650	ops.c	FUNCTION_67	IF_2	IF_7
0xb331	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5651	ops.c	FUNCTION_67	IF_2	IF_7
0xb337	          0x4863d0	                         movsxd rdx, eax	      5651	ops.c	FUNCTION_67	IF_2	IF_7
0xb33a	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5651	ops.c	FUNCTION_67	IF_2	IF_7
0xb341	          0x4801d0	                            add rax, rdx	      5651	ops.c	FUNCTION_67	IF_2	IF_7
0xb344	           0xfb600	                   movzx eax, byte [rax]	      5651	ops.c	FUNCTION_67	IF_2	IF_7
0xb347	            0x3c58	                            cmp al, 0x58	      5651	ops.c	FUNCTION_67	IF_2	IF_7
0xb349	            0x741a	                            je 0x400b3a5	      5651	ops.c	FUNCTION_67	IF_2	IF_7
0xb34b	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5652	ops.c	FUNCTION_67	IF_2	IF_7
0xb351	          0x4863d0	                         movsxd rdx, eax	      5652	ops.c	FUNCTION_67	IF_2	IF_7
0xb354	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5652	ops.c	FUNCTION_67	IF_2	IF_7
0xb35b	          0x4801d0	                            add rax, rdx	      5652	ops.c	FUNCTION_67	IF_2	IF_7
0xb35e	           0xfb600	                   movzx eax, byte [rax]	      5652	ops.c	FUNCTION_67	IF_2	IF_7
0xb361	            0x3c78	                            cmp al, 0x78	      5652	ops.c	FUNCTION_67	IF_2	IF_7
0xb363	            0x757f	                           jne 0x400b424	      5652	ops.c	FUNCTION_67	IF_2	IF_7
0xb365	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5653	ops.c	FUNCTION_67	IF_2	IF_7
0xb36b	            0x4898	                                    cdqe	      5653	ops.c	FUNCTION_67	IF_2	IF_7
0xb36d	        0x488d50ff	                      lea rdx, [rax - 1]	      5653	ops.c	FUNCTION_67	IF_2	IF_7
0xb371	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5653	ops.c	FUNCTION_67	IF_2	IF_7
0xb378	          0x4801d0	                            add rax, rdx	      5653	ops.c	FUNCTION_67	IF_2	IF_7
0xb37b	           0xfb600	                   movzx eax, byte [rax]	      5653	ops.c	FUNCTION_67	IF_2	IF_7
0xb37e	            0x3c30	                            cmp al, 0x30	      5653	ops.c	FUNCTION_67	IF_2	IF_7
0xb380	            0x7562	                           jne 0x400b424	      5653	ops.c	FUNCTION_67	IF_2	IF_7
0xb382	    0x8b0500000000	            mov eax, dword [0x0400b3c8] 	      5655	ops.c	FUNCTION_67	IF_2	IF_7
0xb388	            0x85c0	                           test eax, eax	      5655	ops.c	FUNCTION_67	IF_2	IF_7
0xb38a	            0x7431	                            je 0x400b3fd	      5655	ops.c	FUNCTION_67	IF_2	IF_7
0xb38c	    0x488b05000000	            mov rax, qword [0x0400b3d3] 	      5656	ops.c	FUNCTION_67	IF_2	IF_7
0xb393	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      5656	ops.c	FUNCTION_67	IF_2	IF_7
0xb399	          0x4863d2	                         movsxd rdx, edx	      5656	ops.c	FUNCTION_67	IF_2	IF_7
0xb39c	        0x488d4aff	                      lea rcx, [rdx - 1]	      5656	ops.c	FUNCTION_67	IF_2	IF_7
0xb3a0	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5656	ops.c	FUNCTION_67	IF_2	IF_7
0xb3a7	          0x4801d1	                            add rcx, rdx	      5656	ops.c	FUNCTION_67	IF_2	IF_7
0xb3aa	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5656	ops.c	FUNCTION_67	IF_2	IF_7
0xb3b1	          0x4889ce	                            mov rsi, rcx	      5656	ops.c	FUNCTION_67	IF_2	IF_7
0xb3b4	          0x4889d7	                            mov rdi, rdx	      5656	ops.c	FUNCTION_67	IF_2	IF_7
0xb3b7	            0xffd0	                                call rax	      5656	ops.c	FUNCTION_67	IF_2	IF_7
0xb3b9	            0x85c0	                           test eax, eax	      5655	ops.c	FUNCTION_67	IF_2	IF_7
0xb3bb	            0x7527	                           jne 0x400b424	      5655	ops.c	FUNCTION_67	IF_2	IF_7
0xb3bd	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5658	ops.c	FUNCTION_67	IF_2	IF_7	CALL_8
0xb3c3	            0x4898	                                    cdqe	      5658	ops.c	FUNCTION_67	IF_2	IF_7	CALL_8
0xb3c5	        0x488d5001	                      lea rdx, [rax + 1]	      5658	ops.c	FUNCTION_67	IF_2	IF_7	CALL_8
0xb3c9	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5658	ops.c	FUNCTION_67	IF_2	IF_7	CALL_8
0xb3d0	          0x4801d0	                            add rax, rdx	      5658	ops.c	FUNCTION_67	IF_2	IF_7	CALL_8
0xb3d3	           0xfb600	                   movzx eax, byte [rax]	      5658	ops.c	FUNCTION_67	IF_2	IF_7	CALL_8
0xb3d6	           0xfb6c0	                           movzx eax, al	      5658	ops.c	FUNCTION_67	IF_2	IF_7	CALL_8
0xb3d9	            0x89c7	                            mov edi, eax	      5658	ops.c	FUNCTION_67	IF_2	IF_7	CALL_8
0xb3db	      0xe800000000	                          call 0x400b420	      5658	ops.c	FUNCTION_67	IF_2	IF_7	CALL_8
0xb3e0	            0x85c0	                           test eax, eax	      5650	ops.c	FUNCTION_67	IF_2	IF_7
0xb3e2	            0x757f	                           jne 0x400b4a3	      5650	ops.c	FUNCTION_67	IF_2	IF_7
0xb3e4	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      5663	ops.c	FUNCTION_67	IF_2	IF_7
0xb3eb	          0x8b4008	                mov eax, dword [rax + 8]	      5663	ops.c	FUNCTION_67	IF_2	IF_7
0xb3ee	    0x898508ffffff	             mov dword [rbp - 0xf8], eax	      5663	ops.c	FUNCTION_67	IF_2	IF_7
0xb3f4	            0xeb40	                           jmp 0x400b476	      5665	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0xb3f6	    0x83ad08ffffff	               sub dword [rbp - 0xf8], 1	      5667	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3
0xb3fd	    0x8b0500000000	            mov eax, dword [0x0400b443] 	      5669	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0xb403	            0x85c0	                           test eax, eax	      5669	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0xb405	            0x742f	                            je 0x400b476	      5669	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0xb407	    0x488b05000000	            mov rax, qword [0x0400b44e] 	      5670	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0xb40e	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      5670	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0xb414	          0x4863ca	                         movsxd rcx, edx	      5670	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0xb417	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5670	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0xb41e	          0x4801d1	                            add rcx, rdx	      5670	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0xb421	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5670	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0xb428	          0x4889ce	                            mov rsi, rcx	      5670	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0xb42b	          0x4889d7	                            mov rdi, rdx	      5670	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0xb42e	            0xffd0	                                call rax	      5670	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0xb430	    0x298508ffffff	             sub dword [rbp - 0xf8], eax	      5670	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	IF_8
0xb436	    0x83bd08ffffff	               cmp dword [rbp - 0xf8], 0	      5665	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0xb43d	            0x7e24	                           jle 0x400b4a3	      5665	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0xb43f	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5665	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0xb445	          0x4863d0	                         movsxd rdx, eax	      5665	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0xb448	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5665	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0xb44f	          0x4801d0	                            add rax, rdx	      5665	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0xb452	           0xfb600	                   movzx eax, byte [rax]	      5665	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0xb455	           0xfb6c0	                           movzx eax, al	      5665	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0xb458	            0x89c7	                            mov edi, eax	      5665	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0xb45a	      0xe800000000	                          call 0x400b49f	      5665	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0xb45f	            0x85c0	                           test eax, eax	      5665	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0xb461	            0x7593	                           jne 0x400b436	      5665	ops.c	FUNCTION_67	IF_2	IF_7	WHILE_3	CALL_9
0xb463	    0x83bd38ffffff	               cmp dword [rbp - 0xc8], 0	      5675	ops.c	FUNCTION_67	IF_2	IF_9
0xb46a	     0xf84c8000000	                            je 0x400b578	      5675	ops.c	FUNCTION_67	IF_2	IF_9
0xb470	    0x83bd08ffffff	               cmp dword [rbp - 0xf8], 0	      5676	ops.c	FUNCTION_67	IF_2	IF_9
0xb477	     0xf8ebb000000	                           jle 0x400b578	      5676	ops.c	FUNCTION_67	IF_2	IF_9
0xb47d	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5677	ops.c	FUNCTION_67	IF_2	IF_9
0xb483	          0x4863d0	                         movsxd rdx, eax	      5677	ops.c	FUNCTION_67	IF_2	IF_9
0xb486	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5677	ops.c	FUNCTION_67	IF_2	IF_9
0xb48d	          0x4801d0	                            add rax, rdx	      5677	ops.c	FUNCTION_67	IF_2	IF_9
0xb490	           0xfb600	                   movzx eax, byte [rax]	      5677	ops.c	FUNCTION_67	IF_2	IF_9
0xb493	            0x3c58	                            cmp al, 0x58	      5677	ops.c	FUNCTION_67	IF_2	IF_9
0xb495	            0x741e	                            je 0x400b4f5	      5677	ops.c	FUNCTION_67	IF_2	IF_9
0xb497	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5678	ops.c	FUNCTION_67	IF_2	IF_9
0xb49d	          0x4863d0	                         movsxd rdx, eax	      5678	ops.c	FUNCTION_67	IF_2	IF_9
0xb4a0	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5678	ops.c	FUNCTION_67	IF_2	IF_9
0xb4a7	          0x4801d0	                            add rax, rdx	      5678	ops.c	FUNCTION_67	IF_2	IF_9
0xb4aa	           0xfb600	                   movzx eax, byte [rax]	      5678	ops.c	FUNCTION_67	IF_2	IF_9
0xb4ad	            0x3c78	                            cmp al, 0x78	      5678	ops.c	FUNCTION_67	IF_2	IF_9
0xb4af	     0xf8583000000	                           jne 0x400b578	      5678	ops.c	FUNCTION_67	IF_2	IF_9
0xb4b5	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5679	ops.c	FUNCTION_67	IF_2	IF_9
0xb4bb	            0x4898	                                    cdqe	      5679	ops.c	FUNCTION_67	IF_2	IF_9
0xb4bd	        0x488d50ff	                      lea rdx, [rax - 1]	      5679	ops.c	FUNCTION_67	IF_2	IF_9
0xb4c1	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5679	ops.c	FUNCTION_67	IF_2	IF_9
0xb4c8	          0x4801d0	                            add rax, rdx	      5679	ops.c	FUNCTION_67	IF_2	IF_9
0xb4cb	           0xfb600	                   movzx eax, byte [rax]	      5679	ops.c	FUNCTION_67	IF_2	IF_9
0xb4ce	            0x3c30	                            cmp al, 0x30	      5679	ops.c	FUNCTION_67	IF_2	IF_9
0xb4d0	            0x7566	                           jne 0x400b578	      5679	ops.c	FUNCTION_67	IF_2	IF_9
0xb4d2	    0x8b0500000000	            mov eax, dword [0x0400b518] 	      5681	ops.c	FUNCTION_67	IF_2	IF_9
0xb4d8	            0x85c0	                           test eax, eax	      5681	ops.c	FUNCTION_67	IF_2	IF_9
0xb4da	            0x7431	                            je 0x400b54d	      5681	ops.c	FUNCTION_67	IF_2	IF_9
0xb4dc	    0x488b05000000	            mov rax, qword [0x0400b523] 	      5682	ops.c	FUNCTION_67	IF_2	IF_9
0xb4e3	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      5682	ops.c	FUNCTION_67	IF_2	IF_9
0xb4e9	          0x4863d2	                         movsxd rdx, edx	      5682	ops.c	FUNCTION_67	IF_2	IF_9
0xb4ec	        0x488d4aff	                      lea rcx, [rdx - 1]	      5682	ops.c	FUNCTION_67	IF_2	IF_9
0xb4f0	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5682	ops.c	FUNCTION_67	IF_2	IF_9
0xb4f7	          0x4801d1	                            add rcx, rdx	      5682	ops.c	FUNCTION_67	IF_2	IF_9
0xb4fa	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5682	ops.c	FUNCTION_67	IF_2	IF_9
0xb501	          0x4889ce	                            mov rsi, rcx	      5682	ops.c	FUNCTION_67	IF_2	IF_9
0xb504	          0x4889d7	                            mov rdi, rdx	      5682	ops.c	FUNCTION_67	IF_2	IF_9
0xb507	            0xffd0	                                call rax	      5682	ops.c	FUNCTION_67	IF_2	IF_9
0xb509	            0x85c0	                           test eax, eax	      5681	ops.c	FUNCTION_67	IF_2	IF_9
0xb50b	            0x752b	                           jne 0x400b578	      5681	ops.c	FUNCTION_67	IF_2	IF_9
0xb50d	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5684	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0xb513	            0x4898	                                    cdqe	      5684	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0xb515	        0x488d5001	                      lea rdx, [rax + 1]	      5684	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0xb519	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5684	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0xb520	          0x4801d0	                            add rax, rdx	      5684	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0xb523	           0xfb600	                   movzx eax, byte [rax]	      5684	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0xb526	           0xfb6c0	                           movzx eax, al	      5684	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0xb529	            0x89c7	                            mov edi, eax	      5684	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0xb52b	      0xe800000000	                          call 0x400b570	      5684	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0xb530	            0x85c0	                           test eax, eax	      5684	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0xb532	     0xf85d5000000	                           jne 0x400b64d	      5684	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0xb538	    0x83bd40ffffff	               cmp dword [rbp - 0xc0], 0	      5684	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0xb53f	     0xf8411010000	                            je 0x400b696	      5684	ops.c	FUNCTION_67	IF_2	IF_9	CALL_10
0xb545	    0x83bd08ffffff	               cmp dword [rbp - 0xf8], 0	      5686	ops.c	FUNCTION_67	IF_2	IF_9
0xb54c	     0xf8e04010000	                           jle 0x400b696	      5686	ops.c	FUNCTION_67	IF_2	IF_9
0xb552	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5687	ops.c	FUNCTION_67	IF_2	IF_9
0xb558	          0x4863d0	                         movsxd rdx, eax	      5687	ops.c	FUNCTION_67	IF_2	IF_9
0xb55b	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5687	ops.c	FUNCTION_67	IF_2	IF_9
0xb562	          0x4801d0	                            add rax, rdx	      5687	ops.c	FUNCTION_67	IF_2	IF_9
0xb565	           0xfb600	                   movzx eax, byte [rax]	      5687	ops.c	FUNCTION_67	IF_2	IF_9
0xb568	            0x3c42	                            cmp al, 0x42	      5687	ops.c	FUNCTION_67	IF_2	IF_9
0xb56a	            0x741e	                            je 0x400b5ca	      5687	ops.c	FUNCTION_67	IF_2	IF_9
0xb56c	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5688	ops.c	FUNCTION_67	IF_2	IF_9
0xb572	          0x4863d0	                         movsxd rdx, eax	      5688	ops.c	FUNCTION_67	IF_2	IF_9
0xb575	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5688	ops.c	FUNCTION_67	IF_2	IF_9
0xb57c	          0x4801d0	                            add rax, rdx	      5688	ops.c	FUNCTION_67	IF_2	IF_9
0xb57f	           0xfb600	                   movzx eax, byte [rax]	      5688	ops.c	FUNCTION_67	IF_2	IF_9
0xb582	            0x3c62	                            cmp al, 0x62	      5688	ops.c	FUNCTION_67	IF_2	IF_9
0xb584	     0xf85cc000000	                           jne 0x400b696	      5688	ops.c	FUNCTION_67	IF_2	IF_9
0xb58a	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5689	ops.c	FUNCTION_67	IF_2	IF_9
0xb590	            0x4898	                                    cdqe	      5689	ops.c	FUNCTION_67	IF_2	IF_9
0xb592	        0x488d50ff	                      lea rdx, [rax - 1]	      5689	ops.c	FUNCTION_67	IF_2	IF_9
0xb596	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5689	ops.c	FUNCTION_67	IF_2	IF_9
0xb59d	          0x4801d0	                            add rax, rdx	      5689	ops.c	FUNCTION_67	IF_2	IF_9
0xb5a0	           0xfb600	                   movzx eax, byte [rax]	      5689	ops.c	FUNCTION_67	IF_2	IF_9
0xb5a3	            0x3c30	                            cmp al, 0x30	      5689	ops.c	FUNCTION_67	IF_2	IF_9
0xb5a5	     0xf85ab000000	                           jne 0x400b696	      5689	ops.c	FUNCTION_67	IF_2	IF_9
0xb5ab	    0x8b0500000000	            mov eax, dword [0x0400b5f1] 	      5691	ops.c	FUNCTION_67	IF_2	IF_9
0xb5b1	            0x85c0	                           test eax, eax	      5691	ops.c	FUNCTION_67	IF_2	IF_9
0xb5b3	            0x7431	                            je 0x400b626	      5691	ops.c	FUNCTION_67	IF_2	IF_9
0xb5b5	    0x488b05000000	            mov rax, qword [0x0400b5fc] 	      5692	ops.c	FUNCTION_67	IF_2	IF_9
0xb5bc	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      5692	ops.c	FUNCTION_67	IF_2	IF_9
0xb5c2	          0x4863d2	                         movsxd rdx, edx	      5692	ops.c	FUNCTION_67	IF_2	IF_9
0xb5c5	        0x488d4aff	                      lea rcx, [rdx - 1]	      5692	ops.c	FUNCTION_67	IF_2	IF_9
0xb5c9	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5692	ops.c	FUNCTION_67	IF_2	IF_9
0xb5d0	          0x4801d1	                            add rcx, rdx	      5692	ops.c	FUNCTION_67	IF_2	IF_9
0xb5d3	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5692	ops.c	FUNCTION_67	IF_2	IF_9
0xb5da	          0x4889ce	                            mov rsi, rcx	      5692	ops.c	FUNCTION_67	IF_2	IF_9
0xb5dd	          0x4889d7	                            mov rdi, rdx	      5692	ops.c	FUNCTION_67	IF_2	IF_9
0xb5e0	            0xffd0	                                call rax	      5692	ops.c	FUNCTION_67	IF_2	IF_9
0xb5e2	            0x85c0	                           test eax, eax	      5691	ops.c	FUNCTION_67	IF_2	IF_9
0xb5e4	            0x7570	                           jne 0x400b696	      5691	ops.c	FUNCTION_67	IF_2	IF_9
0xb5e6	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5694	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0xb5ec	            0x4898	                                    cdqe	      5694	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0xb5ee	        0x488d5001	                      lea rdx, [rax + 1]	      5694	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0xb5f2	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5694	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0xb5f9	          0x4801d0	                            add rax, rdx	      5694	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0xb5fc	           0xfb600	                   movzx eax, byte [rax]	      5694	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0xb5ff	           0xfb6c0	                           movzx eax, al	      5694	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0xb602	            0x89c7	                            mov edi, eax	      5694	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0xb604	      0xe800000000	                          call 0x400b649	      5694	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0xb609	            0x85c0	                           test eax, eax	      5694	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0xb60b	            0x7449	                            je 0x400b696	      5694	ops.c	FUNCTION_67	IF_2	IF_9	CALL_11
0xb60d	    0x83ad08ffffff	               sub dword [rbp - 0xf8], 1	      5697	ops.c	FUNCTION_67	IF_2	IF_9
0xb614	    0x8b0500000000	            mov eax, dword [0x0400b65a] 	      5699	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0xb61a	            0x85c0	                           test eax, eax	      5699	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0xb61c	     0xf84d6010000	                            je 0x400b838	      5699	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0xb622	    0x488b05000000	            mov rax, qword [0x0400b669] 	      5700	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0xb629	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      5700	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0xb62f	          0x4863ca	                         movsxd rcx, edx	      5700	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0xb632	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5700	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0xb639	          0x4801d1	                            add rcx, rdx	      5700	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0xb63c	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5700	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0xb643	          0x4889ce	                            mov rsi, rcx	      5700	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0xb646	          0x4889d7	                            mov rdi, rdx	      5700	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0xb649	            0xffd0	                                call rax	      5700	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0xb64b	    0x298508ffffff	             sub dword [rbp - 0xf8], eax	      5700	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0xb651	      0xe9a2010000	                           jmp 0x400b838	      5699	ops.c	FUNCTION_67	IF_2	IF_9	IF_10
0xb656	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      5708	ops.c	FUNCTION_67	IF_2	ELSE_1
0xb65d	          0x8b4008	                mov eax, dword [rax + 8]	      5708	ops.c	FUNCTION_67	IF_2	ELSE_1
0xb660	    0x898508ffffff	             mov dword [rbp - 0xf8], eax	      5708	ops.c	FUNCTION_67	IF_2	ELSE_1
0xb666	            0xeb36	                           jmp 0x400b6de	      5710	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0xb668	    0x8b0500000000	            mov eax, dword [0x0400b6ae] 	      5713	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0xb66e	            0x85c0	                           test eax, eax	      5713	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0xb670	            0x7421	                            je 0x400b6d3	      5713	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0xb672	    0x488b05000000	            mov rax, qword [0x0400b6b9] 	      5713	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0xb679	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      5713	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0xb67f	          0x4863ca	                         movsxd rcx, edx	      5713	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0xb682	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5713	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0xb689	          0x4801ca	                            add rdx, rcx	      5713	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0xb68c	          0x4889d7	                            mov rdi, rdx	      5713	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0xb68f	            0xffd0	                                call rax	      5713	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0xb691	            0xeb05	                           jmp 0x400b6d8	      5713	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0xb693	      0xb801000000	                              mov eax, 1	      5713	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0xb698	     0x18508ffffff	             add dword [rbp - 0xf8], eax	      5713	ops.c	FUNCTION_67	IF_2	ELSE_1	CALL_14
0xb69e	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5710	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0xb6a4	          0x4863d0	                         movsxd rdx, eax	      5710	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0xb6a7	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5710	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0xb6ae	          0x4801d0	                            add rax, rdx	      5710	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0xb6b1	           0xfb600	                   movzx eax, byte [rax]	      5710	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0xb6b4	            0x84c0	                             test al, al	      5710	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0xb6b6	     0xf84bd000000	                            je 0x400b7b9	      5710	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4
0xb6bc	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5711	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_12
0xb6c2	          0x4863d0	                         movsxd rdx, eax	      5711	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_12
0xb6c5	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5711	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_12
0xb6cc	          0x4801d0	                            add rax, rdx	      5711	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_12
0xb6cf	           0xfb600	                   movzx eax, byte [rax]	      5711	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_12
0xb6d2	           0xfb6c0	                           movzx eax, al	      5711	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_12
0xb6d5	            0x89c7	                            mov edi, eax	      5711	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_12
0xb6d7	      0xe800000000	                          call 0x400b71c	      5711	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_12
0xb6dc	            0x85c0	                           test eax, eax	      5711	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_12
0xb6de	     0xf8595000000	                           jne 0x400b7b9	      5711	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_12
0xb6e4	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 0	      5712	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0xb6eb	     0xf8477ffffff	                            je 0x400b6a8	      5712	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0xb6f1	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5712	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0xb6f7	          0x4863d0	                         movsxd rdx, eax	      5712	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0xb6fa	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5712	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0xb701	          0x4801d0	                            add rax, rdx	      5712	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0xb704	           0xfb600	                   movzx eax, byte [rax]	      5712	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0xb707	           0xfb6c0	                           movzx eax, al	      5712	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0xb70a	          0x83e841	                           sub eax, 0x41	      5712	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0xb70d	          0x83f819	                           cmp eax, 0x19	      5712	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0xb710	            0x7667	                           jbe 0x400b7b9	      5712	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0xb712	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5712	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0xb718	          0x4863d0	                         movsxd rdx, eax	      5712	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0xb71b	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5712	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0xb722	          0x4801d0	                            add rax, rdx	      5712	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0xb725	           0xfb600	                   movzx eax, byte [rax]	      5712	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0xb728	           0xfb6c0	                           movzx eax, al	      5712	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0xb72b	          0x83e861	                           sub eax, 0x61	      5712	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0xb72e	          0x83f819	                           cmp eax, 0x19	      5712	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0xb731	     0xf8731ffffff	                            ja 0x400b6a8	      5712	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_4	CALL_13
0xb737	            0xeb40	                           jmp 0x400b7b9	      5715	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0xb739	    0x83ad08ffffff	               sub dword [rbp - 0xf8], 1	      5719	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0xb740	    0x8b0500000000	            mov eax, dword [0x0400b786] 	      5721	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0xb746	            0x85c0	                           test eax, eax	      5721	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0xb748	            0x742f	                            je 0x400b7b9	      5721	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0xb74a	    0x488b05000000	            mov rax, qword [0x0400b791] 	      5722	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0xb751	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      5722	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0xb757	          0x4863ca	                         movsxd rcx, edx	      5722	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0xb75a	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5722	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0xb761	          0x4801d1	                            add rcx, rdx	      5722	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0xb764	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5722	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0xb76b	          0x4889ce	                            mov rsi, rcx	      5722	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0xb76e	          0x4889d7	                            mov rdi, rdx	      5722	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0xb771	            0xffd0	                                call rax	      5722	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0xb773	    0x298508ffffff	             sub dword [rbp - 0xf8], eax	      5722	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	IF_11
0xb779	    0x83bd08ffffff	               cmp dword [rbp - 0xf8], 0	      5715	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0xb780	            0x7e76	                           jle 0x400b838	      5715	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5
0xb782	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5716	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0xb788	            0x4898	                                    cdqe	      5716	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0xb78a	        0x488d50ff	                      lea rdx, [rax - 1]	      5716	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0xb78e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5716	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0xb795	          0x4801d0	                            add rax, rdx	      5716	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0xb798	           0xfb600	                   movzx eax, byte [rax]	      5716	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0xb79b	           0xfb6c0	                           movzx eax, al	      5716	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0xb79e	            0x89c7	                            mov edi, eax	      5716	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0xb7a0	      0xe800000000	                          call 0x400b7e5	      5716	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0xb7a5	            0x85c0	                           test eax, eax	      5716	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0xb7a7	            0x744f	                            je 0x400b838	      5716	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_15
0xb7a9	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 0	      5717	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0xb7b0	            0x7487	                            je 0x400b779	      5717	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0xb7b2	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5717	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0xb7b8	          0x4863d0	                         movsxd rdx, eax	      5717	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0xb7bb	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5717	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0xb7c2	          0x4801d0	                            add rax, rdx	      5717	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0xb7c5	           0xfb600	                   movzx eax, byte [rax]	      5717	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0xb7c8	           0xfb6c0	                           movzx eax, al	      5717	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0xb7cb	          0x83e841	                           sub eax, 0x41	      5717	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0xb7ce	          0x83f819	                           cmp eax, 0x19	      5717	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0xb7d1	            0x7625	                           jbe 0x400b838	      5717	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0xb7d3	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5717	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0xb7d9	          0x4863d0	                         movsxd rdx, eax	      5717	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0xb7dc	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5717	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0xb7e3	          0x4801d0	                            add rax, rdx	      5717	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0xb7e6	           0xfb600	                   movzx eax, byte [rax]	      5717	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0xb7e9	           0xfb6c0	                           movzx eax, al	      5717	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0xb7ec	          0x83e861	                           sub eax, 0x61	      5717	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0xb7ef	          0x83f819	                           cmp eax, 0x19	      5717	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0xb7f2	     0xf8741ffffff	                            ja 0x400b779	      5717	ops.c	FUNCTION_67	IF_2	ELSE_1	WHILE_5	CALL_16
0xb7f8	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	      5728	ops.c	FUNCTION_67	IF_12
0xb7ff	     0xf8481010000	                            je 0x400b9c6	      5728	ops.c	FUNCTION_67	IF_12
0xb805	            0xeb54	                           jmp 0x400b89b	      5730	ops.c	FUNCTION_67	IF_12	WHILE_6
0xb807	    0x8b0500000000	            mov eax, dword [0x0400b84d] 	      5734	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0xb80d	            0x85c0	                           test eax, eax	      5734	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0xb80f	            0x7421	                            je 0x400b872	      5734	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0xb811	    0x488b05000000	            mov rax, qword [0x0400b858] 	      5734	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0xb818	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      5734	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0xb81e	          0x4863ca	                         movsxd rcx, edx	      5734	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0xb821	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5734	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0xb828	          0x4801ca	                            add rdx, rcx	      5734	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0xb82b	          0x4889d7	                            mov rdi, rdx	      5734	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0xb82e	            0xffd0	                                call rax	      5734	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0xb830	            0xeb05	                           jmp 0x400b877	      5734	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0xb832	      0xb801000000	                              mov eax, 1	      5734	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0xb837	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	      5734	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_19
0xb83d	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	      5736	ops.c	FUNCTION_67	IF_12	WHILE_6
0xb843	     0x18508ffffff	             add dword [rbp - 0xf8], eax	      5736	ops.c	FUNCTION_67	IF_12	WHILE_6
0xb849	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      5737	ops.c	FUNCTION_67	IF_12	WHILE_6
0xb84f	    0x2b8548ffffff	             sub eax, dword [rbp - 0xb8]	      5737	ops.c	FUNCTION_67	IF_12	WHILE_6
0xb855	    0x8985f8feffff	            mov dword [rbp - 0x108], eax	      5737	ops.c	FUNCTION_67	IF_12	WHILE_6
0xb85b	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5730	ops.c	FUNCTION_67	IF_12	WHILE_6
0xb861	          0x4863d0	                         movsxd rdx, eax	      5730	ops.c	FUNCTION_67	IF_12	WHILE_6
0xb864	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5730	ops.c	FUNCTION_67	IF_12	WHILE_6
0xb86b	          0x4801d0	                            add rax, rdx	      5730	ops.c	FUNCTION_67	IF_12	WHILE_6
0xb86e	           0xfb600	                   movzx eax, byte [rax]	      5730	ops.c	FUNCTION_67	IF_12	WHILE_6
0xb871	            0x84c0	                             test al, al	      5730	ops.c	FUNCTION_67	IF_12	WHILE_6
0xb873	     0xf8481000000	                            je 0x400b93a	      5730	ops.c	FUNCTION_67	IF_12	WHILE_6
0xb879	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      5730	ops.c	FUNCTION_67	IF_12	WHILE_6
0xb87f	            0x85c0	                           test eax, eax	      5730	ops.c	FUNCTION_67	IF_12	WHILE_6
0xb881	            0x7e77	                           jle 0x400b93a	      5730	ops.c	FUNCTION_67	IF_12	WHILE_6
0xb883	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5731	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_17
0xb889	          0x4863d0	                         movsxd rdx, eax	      5731	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_17
0xb88c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5731	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_17
0xb893	          0x4801d0	                            add rax, rdx	      5731	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_17
0xb896	           0xfb600	                   movzx eax, byte [rax]	      5731	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_17
0xb899	           0xfb6c0	                           movzx eax, al	      5731	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_17
0xb89c	            0x89c7	                            mov edi, eax	      5731	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_17
0xb89e	      0xe800000000	                          call 0x400b8e3	      5731	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_17
0xb8a3	            0x85c0	                           test eax, eax	      5731	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_17
0xb8a5	            0x7553	                           jne 0x400b93a	      5731	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_17
0xb8a7	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 0	      5732	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0xb8ae	     0xf8453ffffff	                            je 0x400b847	      5732	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0xb8b4	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5732	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0xb8ba	          0x4863d0	                         movsxd rdx, eax	      5732	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0xb8bd	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5732	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0xb8c4	          0x4801d0	                            add rax, rdx	      5732	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0xb8c7	           0xfb600	                   movzx eax, byte [rax]	      5732	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0xb8ca	           0xfb6c0	                           movzx eax, al	      5732	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0xb8cd	          0x83e841	                           sub eax, 0x41	      5732	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0xb8d0	          0x83f819	                           cmp eax, 0x19	      5732	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0xb8d3	            0x7625	                           jbe 0x400b93a	      5732	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0xb8d5	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5732	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0xb8db	          0x4863d0	                         movsxd rdx, eax	      5732	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0xb8de	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5732	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0xb8e5	          0x4801d0	                            add rax, rdx	      5732	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0xb8e8	           0xfb600	                   movzx eax, byte [rax]	      5732	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0xb8eb	           0xfb6c0	                           movzx eax, al	      5732	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0xb8ee	          0x83e861	                           sub eax, 0x61	      5732	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0xb8f1	          0x83f819	                           cmp eax, 0x19	      5732	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0xb8f4	     0xf870dffffff	                            ja 0x400b847	      5732	ops.c	FUNCTION_67	IF_12	WHILE_6	CALL_18
0xb8fa	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      5740	ops.c	FUNCTION_67	IF_12	IF_13
0xb900	            0x85c0	                           test eax, eax	      5740	ops.c	FUNCTION_67	IF_12	IF_13
0xb902	     0xf842a0a0000	                            je 0x400c372	      5740	ops.c	FUNCTION_67	IF_12	IF_13
0xb908	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      5743	ops.c	FUNCTION_67	IF_12	IF_14
0xb90f	          0x8b4008	                mov eax, dword [rax + 8]	      5743	ops.c	FUNCTION_67	IF_12	IF_14
0xb912	    0x3b8508ffffff	             cmp eax, dword [rbp - 0xf8]	      5743	ops.c	FUNCTION_67	IF_12	IF_14
0xb918	            0x7d6c	                           jge 0x400b9c6	      5743	ops.c	FUNCTION_67	IF_12	IF_14
0xb91a	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5743	ops.c	FUNCTION_67	IF_12	IF_14
0xb920	            0x4898	                                    cdqe	      5743	ops.c	FUNCTION_67	IF_12	IF_14
0xb922	        0x488d50ff	                      lea rdx, [rax - 1]	      5743	ops.c	FUNCTION_67	IF_12	IF_14
0xb926	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5743	ops.c	FUNCTION_67	IF_12	IF_14
0xb92d	          0x4801d0	                            add rax, rdx	      5743	ops.c	FUNCTION_67	IF_12	IF_14
0xb930	           0xfb600	                   movzx eax, byte [rax]	      5743	ops.c	FUNCTION_67	IF_12	IF_14
0xb933	            0x3c2d	                            cmp al, 0x2d	      5743	ops.c	FUNCTION_67	IF_12	IF_14
0xb935	            0x754f	                           jne 0x400b9c6	      5743	ops.c	FUNCTION_67	IF_12	IF_14
0xb937	    0x8b0500000000	            mov eax, dword [0x0400b97d] 	      5745	ops.c	FUNCTION_67	IF_12	IF_14
0xb93d	            0x85c0	                           test eax, eax	      5745	ops.c	FUNCTION_67	IF_12	IF_14
0xb93f	            0x7431	                            je 0x400b9b2	      5745	ops.c	FUNCTION_67	IF_12	IF_14
0xb941	    0x488b05000000	            mov rax, qword [0x0400b988] 	      5746	ops.c	FUNCTION_67	IF_12	IF_14
0xb948	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      5746	ops.c	FUNCTION_67	IF_12	IF_14
0xb94e	          0x4863d2	                         movsxd rdx, edx	      5746	ops.c	FUNCTION_67	IF_12	IF_14
0xb951	        0x488d4aff	                      lea rcx, [rdx - 1]	      5746	ops.c	FUNCTION_67	IF_12	IF_14
0xb955	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5746	ops.c	FUNCTION_67	IF_12	IF_14
0xb95c	          0x4801d1	                            add rcx, rdx	      5746	ops.c	FUNCTION_67	IF_12	IF_14
0xb95f	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5746	ops.c	FUNCTION_67	IF_12	IF_14
0xb966	          0x4889ce	                            mov rsi, rcx	      5746	ops.c	FUNCTION_67	IF_12	IF_14
0xb969	          0x4889d7	                            mov rdi, rdx	      5746	ops.c	FUNCTION_67	IF_12	IF_14
0xb96c	            0xffd0	                                call rax	      5746	ops.c	FUNCTION_67	IF_12	IF_14
0xb96e	            0x85c0	                           test eax, eax	      5745	ops.c	FUNCTION_67	IF_12	IF_14
0xb970	            0x7514	                           jne 0x400b9c6	      5745	ops.c	FUNCTION_67	IF_12	IF_14
0xb972	    0xc7851cffffff	               mov dword [rbp - 0xe4], 1	      5750	ops.c	FUNCTION_67	IF_12	IF_14
0xb97c	    0xc78520ffffff	               mov dword [rbp - 0xe0], 0	      5751	ops.c	FUNCTION_67	IF_12	IF_14
0xb986	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5758	ops.c	FUNCTION_67
0xb98c	          0x4863d0	                         movsxd rdx, eax	      5758	ops.c	FUNCTION_67
0xb98f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5758	ops.c	FUNCTION_67
0xb996	          0x4801d0	                            add rax, rdx	      5758	ops.c	FUNCTION_67
0xb999	           0xfb600	                   movzx eax, byte [rax]	      5758	ops.c	FUNCTION_67
0xb99c	           0xfb6c0	                           movzx eax, al	      5758	ops.c	FUNCTION_67
0xb99f	    0x898514ffffff	             mov dword [rbp - 0xec], eax	      5758	ops.c	FUNCTION_67
0xb9a5	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      5759	ops.c	FUNCTION_67	IF_15	CALL_21
0xb9ab	          0x83e830	                           sub eax, 0x30	      5759	ops.c	FUNCTION_67	IF_15	CALL_21
0xb9ae	          0x83f809	                              cmp eax, 9	      5759	ops.c	FUNCTION_67	IF_15	CALL_21
0xb9b1	            0x762f	                           jbe 0x400ba22	      5759	ops.c	FUNCTION_67	IF_15	CALL_21
0xb9b3	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 0	      5759	ops.c	FUNCTION_67	IF_15	CALL_21
0xb9ba	            0x741c	                            je 0x400ba18	      5759	ops.c	FUNCTION_67	IF_15	CALL_21
0xb9bc	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      5759	ops.c	FUNCTION_67	IF_15	CALL_21
0xb9c2	          0x83e841	                           sub eax, 0x41	      5759	ops.c	FUNCTION_67	IF_15	CALL_21
0xb9c5	          0x83f819	                           cmp eax, 0x19	      5759	ops.c	FUNCTION_67	IF_15	CALL_21
0xb9c8	            0x7618	                           jbe 0x400ba22	      5759	ops.c	FUNCTION_67	IF_15	CALL_21
0xb9ca	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      5759	ops.c	FUNCTION_67	IF_15	CALL_21
0xb9d0	          0x83e861	                           sub eax, 0x61	      5759	ops.c	FUNCTION_67	IF_15	CALL_21
0xb9d3	          0x83f819	                           cmp eax, 0x19	      5759	ops.c	FUNCTION_67	IF_15	CALL_21
0xb9d6	            0x760a	                           jbe 0x400ba22	      5759	ops.c	FUNCTION_67	IF_15	CALL_21
0xb9d8	      0xe800000000	                          call 0x400ba1d	      5761	ops.c	FUNCTION_67	IF_15	CALL_22
0xb9dd	      0xe954090000	                           jmp 0x400c376	      5762	ops.c	FUNCTION_67	IF_15
0xb9e2	    0x83bd44ffffff	               cmp dword [rbp - 0xbc], 0	      5765	ops.c	FUNCTION_67	IF_16	CALL_23
0xb9e9	     0xf84b5010000	                            je 0x400bbe4	      5765	ops.c	FUNCTION_67	IF_16	CALL_23
0xb9ef	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      5765	ops.c	FUNCTION_67	IF_16	CALL_23
0xb9f5	          0x83e841	                           sub eax, 0x41	      5765	ops.c	FUNCTION_67	IF_16	CALL_23
0xb9f8	          0x83f819	                           cmp eax, 0x19	      5765	ops.c	FUNCTION_67	IF_16	CALL_23
0xb9fb	            0x7612	                           jbe 0x400ba4f	      5765	ops.c	FUNCTION_67	IF_16	CALL_23
0xb9fd	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      5765	ops.c	FUNCTION_67	IF_16	CALL_23
0xba03	          0x83e861	                           sub eax, 0x61	      5765	ops.c	FUNCTION_67	IF_16	CALL_23
0xba06	          0x83f819	                           cmp eax, 0x19	      5765	ops.c	FUNCTION_67	IF_16	CALL_23
0xba09	     0xf8795010000	                            ja 0x400bbe4	      5765	ops.c	FUNCTION_67	IF_16	CALL_23
0xba0f	    0x83bdfcfeffff	          cmp dword [rbp - 0x104], 0x1d 	      5768	ops.c	FUNCTION_67	IF_16	IF_17
0xba16	     0xf8588000000	                           jne 0x400bae4	      5768	ops.c	FUNCTION_67	IF_16	IF_17
0xba1c	    0x83bd14ffffff	           cmp dword [rbp - 0xec], 0x60 	      5770	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0xba23	            0x7f0d	                            jg 0x400ba72	      5770	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0xba25	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      5770	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0xba2b	          0x83e841	                           sub eax, 0x41	      5770	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0xba2e	            0x4898	                                    cdqe	      5770	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0xba30	            0xeb0b	                           jmp 0x400ba7d	      5770	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0xba32	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      5770	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0xba38	          0x83e861	                           sub eax, 0x61	      5770	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0xba3b	            0x4898	                                    cdqe	      5770	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0xba3d	    0x483b85e8feff	            cmp rax, qword [rbp - 0x118]	      5770	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0xba44	            0x7d44	                           jge 0x400baca	      5770	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	CALL_24
0xba46	      0xe800000000	                          call 0x400ba8b	      5772	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0xba4b	          0x488b00	                    mov rax, qword [rax]	      5772	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0xba4e	    0x8b9514ffffff	             mov edx, dword [rbp - 0xec]	      5772	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0xba54	          0x4863d2	                         movsxd rdx, edx	      5772	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0xba57	          0x4801d2	                            add rdx, rdx	      5772	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0xba5a	          0x4801d0	                            add rax, rdx	      5772	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0xba5d	           0xfb700	                   movzx eax, word [rax]	      5772	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0xba60	           0xfb7c0	                           movzx eax, ax	      5772	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0xba63	      0x2500010000	                          and eax, 0x100	      5772	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0xba68	            0x85c0	                           test eax, eax	      5772	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0xba6a	            0x740f	                            je 0x400babb	      5772	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19	CALL_25
0xba6c	    0xc78514ffffff	           mov dword [rbp - 0xec], 0x41 	      5773	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19
0xba76	      0xe9ac000000	                           jmp 0x400bb67	      5773	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	IF_19
0xba7b	    0xc78514ffffff	           mov dword [rbp - 0xec], 0x61 	      5775	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	ELSE_2
0xba85	      0xe99d000000	                           jmp 0x400bb67	      5775	ops.c	FUNCTION_67	IF_16	IF_17	IF_18	ELSE_2
0xba8a	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      5781	ops.c	FUNCTION_67	IF_16	IF_17
0xba90	    0x488b95e8feff	            mov rdx, qword [rbp - 0x118]	      5781	ops.c	FUNCTION_67	IF_16	IF_17
0xba97	            0x29d0	                            sub eax, edx	      5781	ops.c	FUNCTION_67	IF_16	IF_17
0xba99	    0x898514ffffff	             mov dword [rbp - 0xec], eax	      5781	ops.c	FUNCTION_67	IF_16	IF_17
0xba9f	      0xe983000000	                           jmp 0x400bb67	      5781	ops.c	FUNCTION_67	IF_16	IF_17
0xbaa4	    0x83bd14ffffff	           cmp dword [rbp - 0xec], 0x60 	      5786	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0xbaab	            0x7f0f	                            jg 0x400bafc	      5786	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0xbaad	      0xb85a000000	                           mov eax, 0x5a	      5786	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0xbab2	    0x2b8514ffffff	             sub eax, dword [rbp - 0xec]	      5786	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0xbab8	            0x4898	                                    cdqe	      5786	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0xbaba	            0xeb0d	                           jmp 0x400bb09	      5786	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0xbabc	      0xb87a000000	                           mov eax, 0x7a	      5786	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0xbac1	    0x2b8514ffffff	             sub eax, dword [rbp - 0xec]	      5786	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0xbac7	            0x4898	                                    cdqe	      5786	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0xbac9	    0x483b85e8feff	            cmp rax, qword [rbp - 0x118]	      5786	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0xbad0	            0x7d3e	                           jge 0x400bb50	      5786	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	CALL_27
0xbad2	      0xe800000000	                          call 0x400bb17	      5788	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0xbad7	          0x488b00	                    mov rax, qword [rax]	      5788	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0xbada	    0x8b9514ffffff	             mov edx, dword [rbp - 0xec]	      5788	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0xbae0	          0x4863d2	                         movsxd rdx, edx	      5788	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0xbae3	          0x4801d2	                            add rdx, rdx	      5788	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0xbae6	          0x4801d0	                            add rax, rdx	      5788	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0xbae9	           0xfb700	                   movzx eax, word [rax]	      5788	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0xbaec	           0xfb7c0	                           movzx eax, ax	      5788	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0xbaef	      0x2500010000	                          and eax, 0x100	      5788	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0xbaf4	            0x85c0	                           test eax, eax	      5788	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0xbaf6	            0x740c	                            je 0x400bb44	      5788	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21	CALL_28
0xbaf8	    0xc78514ffffff	           mov dword [rbp - 0xec], 0x5a 	      5789	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21
0xbb02	            0xeb23	                           jmp 0x400bb67	      5789	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	IF_21
0xbb04	    0xc78514ffffff	           mov dword [rbp - 0xec], 0x7a 	      5791	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	ELSE_5
0xbb0e	            0xeb17	                           jmp 0x400bb67	      5791	ops.c	FUNCTION_67	IF_16	ELSE_4	IF_20	ELSE_5
0xbb10	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      5797	ops.c	FUNCTION_67	IF_16	ELSE_4
0xbb17	            0x89c2	                            mov edx, eax	      5797	ops.c	FUNCTION_67	IF_16	ELSE_4
0xbb19	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      5797	ops.c	FUNCTION_67	IF_16	ELSE_4
0xbb1f	             0x1d0	                            add eax, edx	      5797	ops.c	FUNCTION_67	IF_16	ELSE_4
0xbb21	    0x898514ffffff	             mov dword [rbp - 0xec], eax	      5797	ops.c	FUNCTION_67	IF_16	ELSE_4
0xbb27	    0x488b05000000	            mov rax, qword [0x0400bb6e] 	      5800	ops.c	FUNCTION_67	IF_16
0xbb2e	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      5800	ops.c	FUNCTION_67	IF_16
0xbb34	          0x895040	             mov dword [rax + 0x40], edx	      5800	ops.c	FUNCTION_67	IF_16
0xbb37	    0x83bd24ffffff	               cmp dword [rbp - 0xdc], 0	      5801	ops.c	FUNCTION_67	IF_16	IF_22
0xbb3e	            0x7517	                           jne 0x400bb97	      5801	ops.c	FUNCTION_67	IF_16	IF_22
0xbb40	    0x488b05000000	            mov rax, qword [0x0400bb87] 	      5802	ops.c	FUNCTION_67	IF_16	IF_22
0xbb47	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      5802	ops.c	FUNCTION_67	IF_16	IF_22
0xbb4b	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5802	ops.c	FUNCTION_67	IF_16	IF_22
0xbb4f	        0x48894580	             mov qword [rbp - 0x80], rax	      5802	ops.c	FUNCTION_67	IF_16	IF_22
0xbb53	        0x48895588	             mov qword [rbp - 0x78], rdx	      5802	ops.c	FUNCTION_67	IF_16	IF_22
0xbb57	    0xc78524ffffff	               mov dword [rbp - 0xdc], 1	      5803	ops.c	FUNCTION_67	IF_16
0xbb61	      0xbf00000000	                              mov edi, 0	      5804	ops.c	FUNCTION_67	IF_16	CALL_30
0xbb66	      0xe800000000	                          call 0x400bbab	      5804	ops.c	FUNCTION_67	IF_16	CALL_30
0xbb6b	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	      5805	ops.c	FUNCTION_67	IF_16	CALL_31
0xbb71	            0x89c7	                            mov edi, eax	      5805	ops.c	FUNCTION_67	IF_16	CALL_31
0xbb73	      0xe800000000	                          call 0x400bbb8	      5805	ops.c	FUNCTION_67	IF_16	CALL_31
0xbb78	    0x488b05000000	            mov rax, qword [0x0400bbbf] 	      5806	ops.c	FUNCTION_67	IF_16
0xbb7f	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      5806	ops.c	FUNCTION_67	IF_16
0xbb83	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5806	ops.c	FUNCTION_67	IF_16
0xbb87	        0x48894590	             mov qword [rbp - 0x70], rax	      5806	ops.c	FUNCTION_67	IF_16
0xbb8b	        0x48895598	             mov qword [rbp - 0x68], rdx	      5806	ops.c	FUNCTION_67	IF_16
0xbb8f	    0x488b05000000	            mov rax, qword [0x0400bbd6] 	      5807	ops.c	FUNCTION_67	IF_16
0xbb96	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      5807	ops.c	FUNCTION_67	IF_16
0xbb9c	          0x895040	             mov dword [rax + 0x40], edx	      5807	ops.c	FUNCTION_67	IF_16
0xbb9f	      0xe91f070000	                           jmp 0x400c303	      5807	ops.c	FUNCTION_67	IF_16
0xbba4	    0x83bd08ffffff	               cmp dword [rbp - 0xf8], 0	      5811	ops.c	FUNCTION_67	ELSE_7	IF_23
0xbbab	            0x7e72	                           jle 0x400bc5f	      5811	ops.c	FUNCTION_67	ELSE_7	IF_23
0xbbad	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5811	ops.c	FUNCTION_67	ELSE_7	IF_23
0xbbb3	            0x4898	                                    cdqe	      5811	ops.c	FUNCTION_67	ELSE_7	IF_23
0xbbb5	        0x488d50ff	                      lea rdx, [rax - 1]	      5811	ops.c	FUNCTION_67	ELSE_7	IF_23
0xbbb9	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5811	ops.c	FUNCTION_67	ELSE_7	IF_23
0xbbc0	          0x4801d0	                            add rax, rdx	      5811	ops.c	FUNCTION_67	ELSE_7	IF_23
0xbbc3	           0xfb600	                   movzx eax, byte [rax]	      5811	ops.c	FUNCTION_67	ELSE_7	IF_23
0xbbc6	            0x3c2d	                            cmp al, 0x2d	      5811	ops.c	FUNCTION_67	ELSE_7	IF_23
0xbbc8	            0x7555	                           jne 0x400bc5f	      5811	ops.c	FUNCTION_67	ELSE_7	IF_23
0xbbca	    0x8b0500000000	            mov eax, dword [0x0400bc10] 	      5813	ops.c	FUNCTION_67	ELSE_7	IF_23
0xbbd0	            0x85c0	                           test eax, eax	      5813	ops.c	FUNCTION_67	ELSE_7	IF_23
0xbbd2	            0x7431	                            je 0x400bc45	      5813	ops.c	FUNCTION_67	ELSE_7	IF_23
0xbbd4	    0x488b05000000	            mov rax, qword [0x0400bc1b] 	      5814	ops.c	FUNCTION_67	ELSE_7	IF_23
0xbbdb	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      5814	ops.c	FUNCTION_67	ELSE_7	IF_23
0xbbe1	          0x4863d2	                         movsxd rdx, edx	      5814	ops.c	FUNCTION_67	ELSE_7	IF_23
0xbbe4	        0x488d4aff	                      lea rcx, [rdx - 1]	      5814	ops.c	FUNCTION_67	ELSE_7	IF_23
0xbbe8	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5814	ops.c	FUNCTION_67	ELSE_7	IF_23
0xbbef	          0x4801d1	                            add rcx, rdx	      5814	ops.c	FUNCTION_67	ELSE_7	IF_23
0xbbf2	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	      5814	ops.c	FUNCTION_67	ELSE_7	IF_23
0xbbf9	          0x4889ce	                            mov rsi, rcx	      5814	ops.c	FUNCTION_67	ELSE_7	IF_23
0xbbfc	          0x4889d7	                            mov rdi, rdx	      5814	ops.c	FUNCTION_67	ELSE_7	IF_23
0xbbff	            0xffd0	                                call rax	      5814	ops.c	FUNCTION_67	ELSE_7	IF_23
0xbc01	            0x85c0	                           test eax, eax	      5813	ops.c	FUNCTION_67	ELSE_7	IF_23
0xbc03	            0x751a	                           jne 0x400bc5f	      5813	ops.c	FUNCTION_67	ELSE_7	IF_23
0xbc05	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	      5816	ops.c	FUNCTION_67	ELSE_7	IF_23
0xbc0c	            0x7511	                           jne 0x400bc5f	      5816	ops.c	FUNCTION_67	ELSE_7	IF_23
0xbc0e	    0x83ad08ffffff	               sub dword [rbp - 0xf8], 1	      5819	ops.c	FUNCTION_67	ELSE_7	IF_23
0xbc15	    0xc7851cffffff	               mov dword [rbp - 0xe4], 1	      5820	ops.c	FUNCTION_67	ELSE_7	IF_23
0xbc1f	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	      5823	ops.c	FUNCTION_67	ELSE_7	IF_24
0xbc26	            0x7442	                            je 0x400bcaa	      5823	ops.c	FUNCTION_67	ELSE_7	IF_24
0xbc28	    0x8b0500000000	            mov eax, dword [0x0400bc6e] 	      5823	ops.c	FUNCTION_67	ELSE_7	IF_24
0xbc2e	          0x83f856	                           cmp eax, 0x56	      5823	ops.c	FUNCTION_67	ELSE_7	IF_24
0xbc31	            0x7437	                            je 0x400bcaa	      5823	ops.c	FUNCTION_67	ELSE_7	IF_24
0xbc33	    0x488b05000000	            mov rax, qword [0x0400bc7a] 	      5824	ops.c	FUNCTION_67	ELSE_7	IF_24
0xbc3a	    0x8b800c030000	           mov eax, dword [rax + 0x30c] 	      5824	ops.c	FUNCTION_67	ELSE_7	IF_24
0xbc40	      0x3dffffff7f	                     cmp eax, 0x7fffffff	      5826	ops.c	FUNCTION_67	ELSE_7	IF_24
0xbc45	            0x7517	                           jne 0x400bc9e	      5826	ops.c	FUNCTION_67	ELSE_7	IF_24
0xbc47	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5825	ops.c	FUNCTION_67	ELSE_7	IF_24	CALL_32
0xbc4e	          0x4889c7	                            mov rdi, rax	      5825	ops.c	FUNCTION_67	ELSE_7	IF_24	CALL_32
0xbc51	      0xe800000000	                          call 0x400bc96	      5825	ops.c	FUNCTION_67	ELSE_7	IF_24	CALL_32
0xbc56	    0x2b8508ffffff	             sub eax, dword [rbp - 0xf8]	      5826	ops.c	FUNCTION_67	ELSE_7	IF_24
0xbc5c	            0xeb06	                           jmp 0x400bca4	      5826	ops.c	FUNCTION_67	ELSE_7	IF_24
0xbc5e	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      5826	ops.c	FUNCTION_67	ELSE_7	IF_24
0xbc64	    0x898528ffffff	             mov dword [rbp - 0xd8], eax	      5824	ops.c	FUNCTION_67	ELSE_7	IF_24
0xbc6a	    0x83bd40ffffff	               cmp dword [rbp - 0xc0], 0	      5829	ops.c	FUNCTION_67	ELSE_7
0xbc71	           0xf95c0	                                setne al	      5829	ops.c	FUNCTION_67	ELSE_7
0xbc74	           0xfb6c0	                           movzx eax, al	      5829	ops.c	FUNCTION_67	ELSE_7
0xbc77	    0x83bd3cffffff	               cmp dword [rbp - 0xc4], 0	      5830	ops.c	FUNCTION_67	ELSE_7
0xbc7e	            0x7407	                            je 0x400bcc7	      5830	ops.c	FUNCTION_67	ELSE_7
0xbc80	      0xba02000000	                              mov edx, 2	      5830	ops.c	FUNCTION_67	ELSE_7
0xbc85	            0xeb05	                           jmp 0x400bccc	      5830	ops.c	FUNCTION_67	ELSE_7
0xbc87	      0xba00000000	                              mov edx, 0	      5830	ops.c	FUNCTION_67	ELSE_7
0xbc8c	             0x1d0	                            add eax, edx	      5830	ops.c	FUNCTION_67	ELSE_7
0xbc8e	    0x83bd38ffffff	               cmp dword [rbp - 0xc8], 0	      5831	ops.c	FUNCTION_67	ELSE_7
0xbc95	            0x7407	                            je 0x400bcde	      5831	ops.c	FUNCTION_67	ELSE_7
0xbc97	      0xba04000000	                              mov edx, 4	      5831	ops.c	FUNCTION_67	ELSE_7
0xbc9c	            0xeb05	                           jmp 0x400bce3	      5831	ops.c	FUNCTION_67	ELSE_7
0xbc9e	      0xba00000000	                              mov edx, 0	      5831	ops.c	FUNCTION_67	ELSE_7
0xbca3	          0x8d3410	                    lea esi, [rax + rdx]	      5828	ops.c	FUNCTION_67	ELSE_7	CALL_33
0xbca6	    0x8b8508ffffff	             mov eax, dword [rbp - 0xf8]	      5828	ops.c	FUNCTION_67	ELSE_7	CALL_33
0xbcac	          0x4863d0	                         movsxd rdx, eax	      5828	ops.c	FUNCTION_67	ELSE_7	CALL_33
0xbcaf	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5828	ops.c	FUNCTION_67	ELSE_7	CALL_33
0xbcb6	        0x488d3c02	                    lea rdi, [rdx + rax]	      5828	ops.c	FUNCTION_67	ELSE_7	CALL_33
0xbcba	    0x4c8d8550ffff	                    lea r8, [rbp - 0xb0]	      5828	ops.c	FUNCTION_67	ELSE_7	CALL_33
0xbcc1	    0x488d95f8feff	                  lea rdx, [rbp - 0x108]	      5828	ops.c	FUNCTION_67	ELSE_7	CALL_33
0xbcc8	    0x488d8504ffff	                   lea rax, [rbp - 0xfc]	      5828	ops.c	FUNCTION_67	ELSE_7	CALL_33
0xbccf	        0x4883ec08	                              sub rsp, 8	      5828	ops.c	FUNCTION_67	ELSE_7	CALL_33
0xbcd3	    0x8b8d28ffffff	             mov ecx, dword [rbp - 0xd8]	      5828	ops.c	FUNCTION_67	ELSE_7	CALL_33
0xbcd9	              0x51	                                push rcx	      5828	ops.c	FUNCTION_67	ELSE_7	CALL_33
0xbcda	          0x4d89c1	                              mov r9, r8	      5828	ops.c	FUNCTION_67	ELSE_7	CALL_33
0xbcdd	    0x41b800000000	                              mov r8d, 0	      5828	ops.c	FUNCTION_67	ELSE_7	CALL_33
0xbce3	            0x89f1	                            mov ecx, esi	      5828	ops.c	FUNCTION_67	ELSE_7	CALL_33
0xbce5	          0x4889c6	                            mov rsi, rax	      5828	ops.c	FUNCTION_67	ELSE_7	CALL_33
0xbce8	      0xe800000000	                          call 0x400bd2d	      5828	ops.c	FUNCTION_67	ELSE_7	CALL_33
0xbced	        0x4883c410	                           add rsp, 0x10	      5828	ops.c	FUNCTION_67	ELSE_7	CALL_33
0xbcf1	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5835	ops.c	FUNCTION_67	ELSE_7	IF_25
0xbcf7	            0x85c0	                           test eax, eax	      5835	ops.c	FUNCTION_67	ELSE_7	IF_25
0xbcf9	            0x7429	                            je 0x400bd64	      5835	ops.c	FUNCTION_67	ELSE_7	IF_25
0xbcfb	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 0	      5835	ops.c	FUNCTION_67	ELSE_7	IF_25
0xbd02	            0x7420	                            je 0x400bd64	      5835	ops.c	FUNCTION_67	ELSE_7	IF_25
0xbd04	    0x838508ffffff	               add dword [rbp - 0xf8], 1	      5837	ops.c	FUNCTION_67	ELSE_7	IF_25
0xbd0b	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      5838	ops.c	FUNCTION_67	ELSE_7	IF_25
0xbd11	          0x83e801	                              sub eax, 1	      5838	ops.c	FUNCTION_67	ELSE_7	IF_25
0xbd14	    0x8985f8feffff	            mov dword [rbp - 0x108], eax	      5838	ops.c	FUNCTION_67	ELSE_7	IF_25
0xbd1a	    0xc7851cffffff	               mov dword [rbp - 0xe4], 0	      5839	ops.c	FUNCTION_67	ELSE_7	IF_25
0xbd24	    0xc78518ffffff	               mov dword [rbp - 0xe8], 0	      5842	ops.c	FUNCTION_67	ELSE_7
0xbd2e	    0x83bdfcfeffff	          cmp dword [rbp - 0x104], 0x1d 	      5843	ops.c	FUNCTION_67	ELSE_7	IF_26
0xbd35	            0x7507	                           jne 0x400bd7e	      5843	ops.c	FUNCTION_67	ELSE_7	IF_26
0xbd37	    0x83b518ffffff	               xor dword [rbp - 0xe8], 1	      5844	ops.c	FUNCTION_67	ELSE_7	IF_26
0xbd3e	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 0	      5845	ops.c	FUNCTION_67	ELSE_7	IF_27
0xbd45	            0x7407	                            je 0x400bd8e	      5845	ops.c	FUNCTION_67	ELSE_7	IF_27
0xbd47	    0x83b518ffffff	               xor dword [rbp - 0xe8], 1	      5846	ops.c	FUNCTION_67	ELSE_7	IF_27
0xbd4e	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      5848	ops.c	FUNCTION_67	ELSE_7
0xbd55	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	      5848	ops.c	FUNCTION_67	ELSE_7
0xbd5c	    0x83bd18ffffff	               cmp dword [rbp - 0xe8], 0	      5849	ops.c	FUNCTION_67	ELSE_7	IF_28
0xbd63	            0x741d	                            je 0x400bdc2	      5849	ops.c	FUNCTION_67	ELSE_7	IF_28
0xbd65	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      5850	ops.c	FUNCTION_67	ELSE_7	IF_28
0xbd6c	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      5850	ops.c	FUNCTION_67	ELSE_7	IF_28
0xbd73	          0x4829c2	                            sub rdx, rax	      5850	ops.c	FUNCTION_67	ELSE_7	IF_28
0xbd76	          0x4889d0	                            mov rax, rdx	      5850	ops.c	FUNCTION_67	ELSE_7	IF_28
0xbd79	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      5850	ops.c	FUNCTION_67	ELSE_7	IF_28
0xbd80	            0xeb18	                           jmp 0x400bdda	      5850	ops.c	FUNCTION_67	ELSE_7	IF_28
0xbd82	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      5852	ops.c	FUNCTION_67	ELSE_7	ELSE_8
0xbd89	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      5852	ops.c	FUNCTION_67	ELSE_7	ELSE_8
0xbd90	          0x4801d0	                            add rax, rdx	      5852	ops.c	FUNCTION_67	ELSE_7	ELSE_8
0xbd93	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      5852	ops.c	FUNCTION_67	ELSE_7	ELSE_8
0xbd9a	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5854	ops.c	FUNCTION_67	ELSE_7	IF_29
0xbda0	            0x85c0	                           test eax, eax	      5854	ops.c	FUNCTION_67	ELSE_7	IF_29
0xbda2	            0x7571	                           jne 0x400be55	      5854	ops.c	FUNCTION_67	ELSE_7	IF_29
0xbda4	    0x83bd18ffffff	               cmp dword [rbp - 0xe8], 0	      5856	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30
0xbdab	            0x742a	                            je 0x400be17	      5856	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30
0xbdad	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      5858	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30	IF_31
0xbdb4	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      5858	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30	IF_31
0xbdbb	            0x7642	                           jbe 0x400be3f	      5858	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30	IF_31
0xbdbd	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      5860	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30	IF_31
0xbdc4	          0x48f7d8	                                 neg rax	      5860	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30	IF_31
0xbdc7	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      5860	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30	IF_31
0xbdce	    0x83b51cffffff	               xor dword [rbp - 0xe4], 1	      5861	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30	IF_31
0xbdd5	            0xeb28	                           jmp 0x400be3f	      5861	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_30	IF_31
0xbdd7	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      5867	ops.c	FUNCTION_67	ELSE_7	IF_29	ELSE_9	IF_32
0xbdde	    0x483b8560ffff	             cmp rax, qword [rbp - 0xa0]	      5867	ops.c	FUNCTION_67	ELSE_7	IF_29	ELSE_9	IF_32
0xbde5	            0x7318	                           jae 0x400be3f	      5867	ops.c	FUNCTION_67	ELSE_7	IF_29	ELSE_9	IF_32
0xbde7	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      5869	ops.c	FUNCTION_67	ELSE_7	IF_29	ELSE_9	IF_32
0xbdee	          0x48f7d0	                                 not rax	      5869	ops.c	FUNCTION_67	ELSE_7	IF_29	ELSE_9	IF_32
0xbdf1	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	      5869	ops.c	FUNCTION_67	ELSE_7	IF_29	ELSE_9	IF_32
0xbdf8	    0x83b51cffffff	               xor dword [rbp - 0xe4], 1	      5870	ops.c	FUNCTION_67	ELSE_7	IF_29	ELSE_9	IF_32
0xbdff	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	      5873	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_33
0xbe06	          0x4885c0	                           test rax, rax	      5873	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_33
0xbe09	            0x750a	                           jne 0x400be55	      5873	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_33
0xbe0b	    0xc7851cffffff	               mov dword [rbp - 0xe4], 0	      5874	ops.c	FUNCTION_67	ELSE_7	IF_29	IF_33
0xbe15	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	      5877	ops.c	FUNCTION_67	ELSE_7	IF_34
0xbe1c	            0x7431	                            je 0x400be8f	      5877	ops.c	FUNCTION_67	ELSE_7	IF_34
0xbe1e	    0x83bd20ffffff	               cmp dword [rbp - 0xe0], 0	      5877	ops.c	FUNCTION_67	ELSE_7	IF_34
0xbe25	            0x7528	                           jne 0x400be8f	      5877	ops.c	FUNCTION_67	ELSE_7	IF_34
0xbe27	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 0	      5877	ops.c	FUNCTION_67	ELSE_7	IF_34
0xbe2e	            0x751f	                           jne 0x400be8f	      5877	ops.c	FUNCTION_67	ELSE_7	IF_34
0xbe30	    0x83bd08ffffff	               cmp dword [rbp - 0xf8], 0	      5877	ops.c	FUNCTION_67	ELSE_7	IF_34
0xbe37	            0x7e16	                           jle 0x400be8f	      5877	ops.c	FUNCTION_67	ELSE_7	IF_34
0xbe39	    0x83ad08ffffff	               sub dword [rbp - 0xf8], 1	      5880	ops.c	FUNCTION_67	ELSE_7	IF_34
0xbe40	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      5881	ops.c	FUNCTION_67	ELSE_7	IF_34
0xbe46	          0x83c001	                              add eax, 1	      5881	ops.c	FUNCTION_67	ELSE_7	IF_34
0xbe49	    0x8985f8feffff	            mov dword [rbp - 0x108], eax	      5881	ops.c	FUNCTION_67	ELSE_7	IF_34
0xbe4f	    0x488b05000000	            mov rax, qword [0x0400be96] 	      5887	ops.c	FUNCTION_67	ELSE_7
0xbe56	    0x8b9508ffffff	             mov edx, dword [rbp - 0xf8]	      5887	ops.c	FUNCTION_67	ELSE_7
0xbe5c	          0x895040	             mov dword [rax + 0x40], edx	      5887	ops.c	FUNCTION_67	ELSE_7
0xbe5f	    0x83bd24ffffff	               cmp dword [rbp - 0xdc], 0	      5888	ops.c	FUNCTION_67	ELSE_7	IF_35
0xbe66	            0x7517	                           jne 0x400bebf	      5888	ops.c	FUNCTION_67	ELSE_7	IF_35
0xbe68	    0x488b05000000	            mov rax, qword [0x0400beaf] 	      5889	ops.c	FUNCTION_67	ELSE_7	IF_35
0xbe6f	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      5889	ops.c	FUNCTION_67	ELSE_7	IF_35
0xbe73	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5889	ops.c	FUNCTION_67	ELSE_7	IF_35
0xbe77	        0x48894580	             mov qword [rbp - 0x80], rax	      5889	ops.c	FUNCTION_67	ELSE_7	IF_35
0xbe7b	        0x48895588	             mov qword [rbp - 0x78], rdx	      5889	ops.c	FUNCTION_67	ELSE_7	IF_35
0xbe7f	    0xc78524ffffff	               mov dword [rbp - 0xdc], 1	      5890	ops.c	FUNCTION_67	ELSE_7
0xbe89	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      5891	ops.c	FUNCTION_67	ELSE_7
0xbe8f	    0x898510ffffff	             mov dword [rbp - 0xf0], eax	      5891	ops.c	FUNCTION_67	ELSE_7
0xbe95	      0xe800000000	                          call 0x400beda	      5892	ops.c	FUNCTION_67	ELSE_7	CALL_34
0xbe9a	    0x89850cffffff	             mov dword [rbp - 0xf4], eax	      5892	ops.c	FUNCTION_67	ELSE_7	CALL_34
0xbea0	    0x83bd0cffffff	           cmp dword [rbp - 0xf4], 0x2d 	      5897	ops.c	FUNCTION_67	ELSE_7	IF_36
0xbea7	     0xf8597000000	                           jne 0x400bf84	      5897	ops.c	FUNCTION_67	ELSE_7	IF_36
0xbead	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      5898	ops.c	FUNCTION_67	ELSE_7	IF_36
0xbeb3	          0x83e801	                              sub eax, 1	      5898	ops.c	FUNCTION_67	ELSE_7	IF_36
0xbeb6	    0x8985f8feffff	            mov dword [rbp - 0x108], eax	      5898	ops.c	FUNCTION_67	ELSE_7	IF_36
0xbebc	      0xe983000000	                           jmp 0x400bf84	      5899	ops.c	FUNCTION_67	ELSE_7	WHILE_7
0xbec1	    0x81bd0cffffff	           cmp dword [rbp - 0xf4], 0xff 	      5901	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0xbecb	            0x7f62	                            jg 0x400bf6f	      5901	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0xbecd	      0xe800000000	                          call 0x400bf12	      5901	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0xbed2	          0x488b00	                    mov rax, qword [rax]	      5901	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0xbed5	    0x8b950cffffff	             mov edx, dword [rbp - 0xf4]	      5901	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0xbedb	          0x4863d2	                         movsxd rdx, edx	      5901	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0xbede	          0x4801d2	                            add rdx, rdx	      5901	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0xbee1	          0x4801d0	                            add rax, rdx	      5901	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0xbee4	           0xfb700	                   movzx eax, word [rax]	      5901	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0xbee7	           0xfb7c0	                           movzx eax, ax	      5901	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0xbeea	      0x2500040000	                          and eax, 0x400	      5901	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0xbeef	            0x85c0	                           test eax, eax	      5901	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0xbef1	            0x743c	                            je 0x400bf6f	      5901	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	CALL_35
0xbef3	      0xe800000000	                          call 0x400bf38	      5903	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38	CALL_36
0xbef8	          0x488b00	                    mov rax, qword [rax]	      5903	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38	CALL_36
0xbefb	    0x8b950cffffff	             mov edx, dword [rbp - 0xf4]	      5903	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38	CALL_36
0xbf01	          0x4863d2	                         movsxd rdx, edx	      5903	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38	CALL_36
0xbf04	          0x4801d2	                            add rdx, rdx	      5903	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38	CALL_36
0xbf07	          0x4801d0	                            add rax, rdx	      5903	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38	CALL_36
0xbf0a	           0xfb700	                   movzx eax, word [rax]	      5903	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38	CALL_36
0xbf0d	           0xfb7c0	                           movzx eax, ax	      5903	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38	CALL_36
0xbf10	      0x2500010000	                          and eax, 0x100	      5903	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38	CALL_36
0xbf15	            0x85c0	                           test eax, eax	      5903	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38	CALL_36
0xbf17	            0x740c	                            je 0x400bf65	      5903	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38	CALL_36
0xbf19	    0xc70500000000	               mov dword [0x0400bf63], 1	      5904	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38
0xbf23	            0xeb0a	                           jmp 0x400bf6f	      5904	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	IF_38
0xbf25	    0xc70500000000	               mov dword [0x0400bf6f], 0	      5906	ops.c	FUNCTION_67	ELSE_7	WHILE_7	IF_37	ELSE_10
0xbf2f	      0xbf00000000	                              mov edi, 0	      5909	ops.c	FUNCTION_67	ELSE_7	WHILE_7	CALL_37
0xbf34	      0xe800000000	                          call 0x400bf79	      5909	ops.c	FUNCTION_67	ELSE_7	WHILE_7	CALL_37
0xbf39	      0xe800000000	                          call 0x400bf7e	      5910	ops.c	FUNCTION_67	ELSE_7	WHILE_7	CALL_38
0xbf3e	    0x89850cffffff	             mov dword [rbp - 0xf4], eax	      5910	ops.c	FUNCTION_67	ELSE_7	WHILE_7	CALL_38
0xbf44	    0x8b8510ffffff	             mov eax, dword [rbp - 0xf0]	      5899	ops.c	FUNCTION_67	ELSE_7	WHILE_7
0xbf4a	          0x8d50ff	                      lea edx, [rax - 1]	      5899	ops.c	FUNCTION_67	ELSE_7	WHILE_7
0xbf4d	    0x899510ffffff	             mov dword [rbp - 0xf0], edx	      5899	ops.c	FUNCTION_67	ELSE_7	WHILE_7
0xbf53	            0x85c0	                           test eax, eax	      5899	ops.c	FUNCTION_67	ELSE_7	WHILE_7
0xbf55	     0xf8f66ffffff	                            jg 0x400bf01	      5899	ops.c	FUNCTION_67	ELSE_7	WHILE_7
0xbf5b	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      5918	ops.c	FUNCTION_67	ELSE_7	CALL_39
0xbf61	          0x83c041	                           add eax, 0x41	      5918	ops.c	FUNCTION_67	ELSE_7	CALL_39
0xbf64	            0x89c7	                            mov edi, eax	      5918	ops.c	FUNCTION_67	ELSE_7	CALL_39
0xbf66	      0xe800000000	                          call 0x400bfab	      5918	ops.c	FUNCTION_67	ELSE_7	CALL_39
0xbf6b	    0x48898568ffff	             mov qword [rbp - 0x98], rax	      5918	ops.c	FUNCTION_67	ELSE_7	CALL_39
0xbf72	    0x4883bd68ffff	               cmp qword [rbp - 0x98], 0	      5919	ops.c	FUNCTION_67	ELSE_7	IF_39
0xbf7a	     0xf84b5030000	                            je 0x400c375	      5919	ops.c	FUNCTION_67	ELSE_7	IF_39
0xbf80	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5921	ops.c	FUNCTION_67	ELSE_7
0xbf87	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	      5921	ops.c	FUNCTION_67	ELSE_7
0xbf8e	    0x83bd1cffffff	               cmp dword [rbp - 0xe4], 0	      5922	ops.c	FUNCTION_67	ELSE_7	IF_40
0xbf95	            0x7427	                            je 0x400bffe	      5922	ops.c	FUNCTION_67	ELSE_7	IF_40
0xbf97	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	      5922	ops.c	FUNCTION_67	ELSE_7	IF_40
0xbf9e	            0x7409	                            je 0x400bfe9	      5922	ops.c	FUNCTION_67	ELSE_7	IF_40
0xbfa0	    0x83bd20ffffff	               cmp dword [rbp - 0xe0], 0	      5922	ops.c	FUNCTION_67	ELSE_7	IF_40
0xbfa7	            0x7415	                            je 0x400bffe	      5922	ops.c	FUNCTION_67	ELSE_7	IF_40
0xbfa9	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5924	ops.c	FUNCTION_67	ELSE_7	IF_40
0xbfb0	        0x488d5001	                      lea rdx, [rax + 1]	      5924	ops.c	FUNCTION_67	ELSE_7	IF_40
0xbfb4	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	      5924	ops.c	FUNCTION_67	ELSE_7	IF_40
0xbfbb	          0xc6002d	                    mov byte [rax], 0x2d	      5924	ops.c	FUNCTION_67	ELSE_7	IF_40
0xbfbe	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5926	ops.c	FUNCTION_67	ELSE_7	IF_41
0xbfc4	            0x85c0	                           test eax, eax	      5926	ops.c	FUNCTION_67	ELSE_7	IF_41
0xbfc6	            0x7424	                            je 0x400c02c	      5926	ops.c	FUNCTION_67	ELSE_7	IF_41
0xbfc8	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5928	ops.c	FUNCTION_67	ELSE_7	IF_41
0xbfcf	        0x488d5001	                      lea rdx, [rax + 1]	      5928	ops.c	FUNCTION_67	ELSE_7	IF_41
0xbfd3	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	      5928	ops.c	FUNCTION_67	ELSE_7	IF_41
0xbfda	          0xc60030	                    mov byte [rax], 0x30	      5928	ops.c	FUNCTION_67	ELSE_7	IF_41
0xbfdd	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      5929	ops.c	FUNCTION_67	ELSE_7	IF_41
0xbfe3	          0x83e801	                              sub eax, 1	      5929	ops.c	FUNCTION_67	ELSE_7	IF_41
0xbfe6	    0x8985f8feffff	            mov dword [rbp - 0x108], eax	      5929	ops.c	FUNCTION_67	ELSE_7	IF_41
0xbfec	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5931	ops.c	FUNCTION_67	ELSE_7	IF_42
0xbff2	          0x83f862	                           cmp eax, 0x62	      5931	ops.c	FUNCTION_67	ELSE_7	IF_42
0xbff5	            0x7421	                            je 0x400c058	      5931	ops.c	FUNCTION_67	ELSE_7	IF_42
0xbff7	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5931	ops.c	FUNCTION_67	ELSE_7	IF_42
0xbffd	          0x83f842	                           cmp eax, 0x42	      5931	ops.c	FUNCTION_67	ELSE_7	IF_42
0xc000	            0x7416	                            je 0x400c058	      5931	ops.c	FUNCTION_67	ELSE_7	IF_42
0xc002	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5932	ops.c	FUNCTION_67	ELSE_7	IF_42
0xc008	          0x83f878	                           cmp eax, 0x78	      5931	ops.c	FUNCTION_67	ELSE_7	IF_42
0xc00b	            0x740b	                            je 0x400c058	      5931	ops.c	FUNCTION_67	ELSE_7	IF_42
0xc00d	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5932	ops.c	FUNCTION_67	ELSE_7	IF_42
0xc013	          0x83f858	                           cmp eax, 0x58	      5932	ops.c	FUNCTION_67	ELSE_7	IF_42
0xc016	            0x7529	                           jne 0x400c081	      5932	ops.c	FUNCTION_67	ELSE_7	IF_42
0xc018	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5934	ops.c	FUNCTION_67	ELSE_7	IF_42
0xc01f	        0x488d5001	                      lea rdx, [rax + 1]	      5934	ops.c	FUNCTION_67	ELSE_7	IF_42
0xc023	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	      5934	ops.c	FUNCTION_67	ELSE_7	IF_42
0xc02a	    0x8b9504ffffff	             mov edx, dword [rbp - 0xfc]	      5934	ops.c	FUNCTION_67	ELSE_7	IF_42
0xc030	            0x8810	                      mov byte [rax], dl	      5934	ops.c	FUNCTION_67	ELSE_7	IF_42
0xc032	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      5935	ops.c	FUNCTION_67	ELSE_7	IF_42
0xc038	          0x83e801	                              sub eax, 1	      5935	ops.c	FUNCTION_67	ELSE_7	IF_42
0xc03b	    0x8985f8feffff	            mov dword [rbp - 0x108], eax	      5935	ops.c	FUNCTION_67	ELSE_7	IF_42
0xc041	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5941	ops.c	FUNCTION_67	ELSE_7	IF_43
0xc047	          0x83f862	                           cmp eax, 0x62	      5941	ops.c	FUNCTION_67	ELSE_7	IF_43
0xc04a	            0x740f	                            je 0x400c09b	      5941	ops.c	FUNCTION_67	ELSE_7	IF_43
0xc04c	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5941	ops.c	FUNCTION_67	ELSE_7	IF_43
0xc052	          0x83f842	                           cmp eax, 0x42	      5941	ops.c	FUNCTION_67	ELSE_7	IF_43
0xc055	     0xf85c4000000	                           jne 0x400c15f	      5941	ops.c	FUNCTION_67	ELSE_7	IF_43
0xc05b	    0xc78530ffffff	               mov dword [rbp - 0xd0], 0	      5944	ops.c	FUNCTION_67	ELSE_7	IF_43
0xc065	    0xc7854cffffff	           mov dword [rbp - 0xb4], 0x40 	      5945	ops.c	FUNCTION_67	ELSE_7	IF_43
0xc06f	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	      5948	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_1
0xc075	    0x898530ffffff	             mov dword [rbp - 0xd0], eax	      5948	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_1
0xc07b	            0xeb27	                           jmp 0x400c0e4	      5948	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_1
0xc07d	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      5949	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0xc084	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	      5949	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0xc08a	          0x83e801	                              sub eax, 1	      5949	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0xc08d	            0x89c1	                            mov ecx, eax	      5949	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0xc08f	          0x48d3ea	                             shr rdx, cl	      5949	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0xc092	          0x4889d0	                            mov rax, rdx	      5949	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0xc095	          0x83e001	                              and eax, 1	      5949	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0xc098	          0x4885c0	                           test rax, rax	      5949	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0xc09b	            0x7512	                           jne 0x400c0ef	      5949	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0xc09d	    0x83ad30ffffff	               sub dword [rbp - 0xd0], 1	      5948	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_1
0xc0a4	    0x83bd30ffffff	               cmp dword [rbp - 0xd0], 0	      5948	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_1
0xc0ab	            0x7fd0	                            jg 0x400c0bd	      5948	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_1
0xc0ad	            0xeb01	                           jmp 0x400c0f0	      5948	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_1
0xc0af	              0x90	                                     nop	      5949	ops.c	FUNCTION_67	ELSE_7	IF_43	IF_44
0xc0b0	    0xc7852cffffff	               mov dword [rbp - 0xd4], 0	      5951	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0xc0ba	            0xeb48	                           jmp 0x400c144	      5951	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0xc0bc	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      5952	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0xc0c2	          0x8d5001	                      lea edx, [rax + 1]	      5952	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0xc0c5	    0x89952cffffff	             mov dword [rbp - 0xd4], edx	      5952	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0xc0cb	    0x488bb550ffff	             mov rsi, qword [rbp - 0xb0]	      5952	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0xc0d2	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	      5952	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0xc0d8	          0x83ea01	                              sub edx, 1	      5952	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0xc0db	            0x89d1	                            mov ecx, edx	      5952	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0xc0dd	          0x48d3ee	                             shr rsi, cl	      5952	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0xc0e0	          0x4889f2	                            mov rdx, rsi	      5952	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0xc0e3	          0x83e201	                              and edx, 1	      5952	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0xc0e6	          0x4885d2	                           test rdx, rdx	      5952	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0xc0e9	            0x7407	                            je 0x400c132	      5952	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0xc0eb	      0xba31000000	                           mov edx, 0x31	      5952	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0xc0f0	            0xeb05	                           jmp 0x400c137	      5952	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0xc0f2	      0xba30000000	                           mov edx, 0x30	      5952	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0xc0f7	            0x4898	                                    cdqe	      5952	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0xc0f9	        0x885405a0	         mov byte [rbp + rax - 0x60], dl	      5952	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0xc0fd	    0x83ad30ffffff	               sub dword [rbp - 0xd0], 1	      5951	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0xc104	    0x83bd30ffffff	               cmp dword [rbp - 0xd0], 0	      5951	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0xc10b	            0x7faf	                            jg 0x400c0fc	      5951	ops.c	FUNCTION_67	ELSE_7	IF_43	FOR_2
0xc10d	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	      5954	ops.c	FUNCTION_67	ELSE_7	IF_43
0xc113	            0x4898	                                    cdqe	      5954	ops.c	FUNCTION_67	ELSE_7	IF_43
0xc115	      0xc64405a000	          mov byte [rbp + rax - 0x60], 0	      5954	ops.c	FUNCTION_67	ELSE_7	IF_43
0xc11a	      0xe9c6000000	                           jmp 0x400c225	      5942	ops.c	FUNCTION_67	ELSE_7	IF_43
0xc11f	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5956	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45
0xc125	            0x85c0	                           test eax, eax	      5956	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45
0xc127	            0x752a	                           jne 0x400c193	      5956	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45
0xc129	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      5957	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45
0xc130	        0x488d45a0	                   lea rax, [rbp - 0x60]	      5957	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45
0xc134	          0x4889d1	                            mov rcx, rdx	      5957	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45
0xc137	      0xba00000000	                              mov edx, 0	      5957	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45
0xc13c	      0xbe41000000	                           mov esi, 0x41	      5957	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45
0xc141	          0x4889c7	                            mov rdi, rax	      5957	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45
0xc144	      0xb800000000	                              mov eax, 0	      5957	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45
0xc149	      0xe800000000	                          call 0x400c18e	      5957	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45
0xc14e	      0xe992000000	                           jmp 0x400c225	      5957	ops.c	FUNCTION_67	ELSE_7	ELSE_11	IF_45
0xc153	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5958	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46
0xc159	          0x83f830	                           cmp eax, 0x30	      5958	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46
0xc15c	            0x7527	                           jne 0x400c1c5	      5958	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46
0xc15e	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      5959	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46
0xc165	        0x488d45a0	                   lea rax, [rbp - 0x60]	      5959	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46
0xc169	          0x4889d1	                            mov rcx, rdx	      5959	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46
0xc16c	      0xba00000000	                              mov edx, 0	      5959	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46
0xc171	      0xbe41000000	                           mov esi, 0x41	      5959	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46
0xc176	          0x4889c7	                            mov rdi, rax	      5959	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46
0xc179	      0xb800000000	                              mov eax, 0	      5959	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46
0xc17e	      0xe800000000	                          call 0x400c1c3	      5959	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46
0xc183	            0xeb60	                           jmp 0x400c225	      5959	ops.c	FUNCTION_67	ELSE_7	ELSE_12	IF_46
0xc185	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5960	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47
0xc18b	            0x85c0	                           test eax, eax	      5960	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47
0xc18d	            0x7431	                            je 0x400c200	      5960	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47
0xc18f	    0x8b0500000000	            mov eax, dword [0x0400c1d5] 	      5960	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47
0xc195	            0x85c0	                           test eax, eax	      5960	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47
0xc197	            0x7427	                            je 0x400c200	      5960	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47
0xc199	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      5961	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47
0xc1a0	        0x488d45a0	                   lea rax, [rbp - 0x60]	      5961	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47
0xc1a4	          0x4889d1	                            mov rcx, rdx	      5961	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47
0xc1a7	      0xba00000000	                              mov edx, 0	      5961	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47
0xc1ac	      0xbe41000000	                           mov esi, 0x41	      5961	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47
0xc1b1	          0x4889c7	                            mov rdi, rax	      5961	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47
0xc1b4	      0xb800000000	                              mov eax, 0	      5961	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47
0xc1b9	      0xe800000000	                          call 0x400c1fe	      5961	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47
0xc1be	            0xeb25	                           jmp 0x400c225	      5961	ops.c	FUNCTION_67	ELSE_7	ELSE_13	IF_47
0xc1c0	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	      5963	ops.c	FUNCTION_67	ELSE_7	CALL_43
0xc1c7	        0x488d45a0	                   lea rax, [rbp - 0x60]	      5963	ops.c	FUNCTION_67	ELSE_7	CALL_43
0xc1cb	          0x4889d1	                            mov rcx, rdx	      5963	ops.c	FUNCTION_67	ELSE_7	CALL_43
0xc1ce	      0xba00000000	                              mov edx, 0	      5963	ops.c	FUNCTION_67	ELSE_7	CALL_43
0xc1d3	      0xbe41000000	                           mov esi, 0x41	      5963	ops.c	FUNCTION_67	ELSE_7	CALL_43
0xc1d8	          0x4889c7	                            mov rdi, rax	      5963	ops.c	FUNCTION_67	ELSE_7	CALL_43
0xc1db	      0xb800000000	                              mov eax, 0	      5963	ops.c	FUNCTION_67	ELSE_7	CALL_43
0xc1e0	      0xe800000000	                          call 0x400c225	      5963	ops.c	FUNCTION_67	ELSE_7	CALL_43
0xc1e5	    0x8b9df8feffff	            mov ebx, dword [rbp - 0x108]	      5964	ops.c	FUNCTION_67	ELSE_7	CALL_44
0xc1eb	        0x488d45a0	                   lea rax, [rbp - 0x60]	      5964	ops.c	FUNCTION_67	ELSE_7	CALL_44
0xc1ef	          0x4889c7	                            mov rdi, rax	      5964	ops.c	FUNCTION_67	ELSE_7	CALL_44
0xc1f2	      0xe800000000	                          call 0x400c237	      5964	ops.c	FUNCTION_67	ELSE_7	CALL_44
0xc1f7	            0x29c3	                            sub ebx, eax	      5964	ops.c	FUNCTION_67	ELSE_7	CALL_44
0xc1f9	            0x89d8	                            mov eax, ebx	      5964	ops.c	FUNCTION_67	ELSE_7	CALL_44
0xc1fb	    0x8985f8feffff	            mov dword [rbp - 0x108], eax	      5964	ops.c	FUNCTION_67	ELSE_7	CALL_44
0xc201	    0x83bd14ffffff	           cmp dword [rbp - 0xec], 0x30 	      5972	ops.c	FUNCTION_67	ELSE_7	IF_48
0xc208	            0x753d	                           jne 0x400c287	      5972	ops.c	FUNCTION_67	ELSE_7	IF_48
0xc20a	    0x83bd3cffffff	               cmp dword [rbp - 0xc4], 0	      5972	ops.c	FUNCTION_67	ELSE_7	IF_48
0xc211	            0x7421	                            je 0x400c274	      5972	ops.c	FUNCTION_67	ELSE_7	IF_48
0xc213	    0x8b8504ffffff	             mov eax, dword [rbp - 0xfc]	      5972	ops.c	FUNCTION_67	ELSE_7	IF_48
0xc219	            0x85c0	                           test eax, eax	      5972	ops.c	FUNCTION_67	ELSE_7	IF_48
0xc21b	            0x742a	                            je 0x400c287	      5972	ops.c	FUNCTION_67	ELSE_7	IF_48
0xc21d	            0xeb15	                           jmp 0x400c274	      5973	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0xc21f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5974	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0xc226	        0x488d5001	                      lea rdx, [rax + 1]	      5974	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0xc22a	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	      5974	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0xc231	          0xc60030	                    mov byte [rax], 0x30	      5974	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0xc234	    0x8b85f8feffff	            mov eax, dword [rbp - 0x108]	      5973	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0xc23a	          0x8d50ff	                      lea edx, [rax - 1]	      5973	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0xc23d	    0x8995f8feffff	            mov dword [rbp - 0x108], edx	      5973	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0xc243	            0x85c0	                           test eax, eax	      5973	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0xc245	            0x7fd8	                            jg 0x400c25f	      5973	ops.c	FUNCTION_67	ELSE_7	IF_48	WHILE_8
0xc247	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      5975	ops.c	FUNCTION_67	ELSE_7
0xc24e	          0xc60000	                       mov byte [rax], 0	      5975	ops.c	FUNCTION_67	ELSE_7
0xc251	        0x488d55a0	                   lea rdx, [rbp - 0x60]	      5976	ops.c	FUNCTION_67	ELSE_7	CALL_45
0xc255	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5976	ops.c	FUNCTION_67	ELSE_7	CALL_45
0xc25c	          0x4889d6	                            mov rsi, rdx	      5976	ops.c	FUNCTION_67	ELSE_7	CALL_45
0xc25f	          0x4889c7	                            mov rdi, rax	      5976	ops.c	FUNCTION_67	ELSE_7	CALL_45
0xc262	      0xe800000000	                          call 0x400c2a7	      5976	ops.c	FUNCTION_67	ELSE_7	CALL_45
0xc267	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5977	ops.c	FUNCTION_67	ELSE_7	CALL_46
0xc26e	          0x4889c7	                            mov rdi, rax	      5977	ops.c	FUNCTION_67	ELSE_7	CALL_46
0xc271	      0xe800000000	                          call 0x400c2b6	      5977	ops.c	FUNCTION_67	ELSE_7	CALL_46
0xc276	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      5978	ops.c	FUNCTION_67	ELSE_7	CALL_47
0xc27d	          0x4889c7	                            mov rdi, rax	      5978	ops.c	FUNCTION_67	ELSE_7	CALL_47
0xc280	      0xe800000000	                          call 0x400c2c5	      5978	ops.c	FUNCTION_67	ELSE_7	CALL_47
0xc285	    0x488b05000000	            mov rax, qword [0x0400c2cc] 	      5979	ops.c	FUNCTION_67	ELSE_7
0xc28c	        0x488b5040	            mov rdx, qword [rax + 0x40] 	      5979	ops.c	FUNCTION_67	ELSE_7
0xc290	        0x488b4038	            mov rax, qword [rax + 0x38] 	      5979	ops.c	FUNCTION_67	ELSE_7
0xc294	        0x48894590	             mov qword [rbp - 0x70], rax	      5979	ops.c	FUNCTION_67	ELSE_7
0xc298	        0x48895598	             mov qword [rbp - 0x68], rdx	      5979	ops.c	FUNCTION_67	ELSE_7
0xc29c	    0x83bd24ffffff	               cmp dword [rbp - 0xdc], 0	      5980	ops.c	FUNCTION_67	ELSE_7	IF_49
0xc2a3	            0x741e	                            je 0x400c303	      5980	ops.c	FUNCTION_67	ELSE_7	IF_49
0xc2a5	    0x488b05000000	            mov rax, qword [0x0400c2ec] 	      5980	ops.c	FUNCTION_67	ELSE_7	IF_49
0xc2ac	          0x8b4040	            mov eax, dword [rax + 0x40] 	      5980	ops.c	FUNCTION_67	ELSE_7	IF_49
0xc2af	            0x85c0	                           test eax, eax	      5980	ops.c	FUNCTION_67	ELSE_7	IF_49
0xc2b1	            0x7410	                            je 0x400c303	      5980	ops.c	FUNCTION_67	ELSE_7	IF_49
0xc2b3	    0x488b05000000	            mov rax, qword [0x0400c2fa] 	      5981	ops.c	FUNCTION_67	ELSE_7	IF_49
0xc2ba	          0x8b5040	            mov edx, dword [rax + 0x40] 	      5981	ops.c	FUNCTION_67	ELSE_7	IF_49
0xc2bd	          0x83ea01	                              sub edx, 1	      5981	ops.c	FUNCTION_67	ELSE_7	IF_49
0xc2c0	          0x895040	             mov dword [rax + 0x40], edx	      5981	ops.c	FUNCTION_67	ELSE_7	IF_49
0xc2c3	    0x83bd24ffffff	               cmp dword [rbp - 0xdc], 0	      5984	ops.c	FUNCTION_67	IF_50
0xc2ca	            0x746a	                            je 0x400c376	      5984	ops.c	FUNCTION_67	IF_50
0xc2cc	    0x488b0d000000	            mov rcx, qword [0x0400c313] 	      5987	ops.c	FUNCTION_67	IF_50
0xc2d3	        0x488b4580	             mov rax, qword [rbp - 0x80]	      5987	ops.c	FUNCTION_67	IF_50
0xc2d7	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      5987	ops.c	FUNCTION_67	IF_50
0xc2db	    0x488981d01100	          mov qword [rcx + 0x11d0], rax 	      5987	ops.c	FUNCTION_67	IF_50
0xc2e2	    0x488991d81100	          mov qword [rcx + 0x11d8], rdx 	      5987	ops.c	FUNCTION_67	IF_50
0xc2e9	    0x488b0d000000	            mov rcx, qword [0x0400c330] 	      5988	ops.c	FUNCTION_67	IF_50
0xc2f0	        0x488b4590	             mov rax, qword [rbp - 0x70]	      5988	ops.c	FUNCTION_67	IF_50
0xc2f4	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      5988	ops.c	FUNCTION_67	IF_50
0xc2f8	    0x488981f01100	          mov qword [rcx + 0x11f0], rax 	      5988	ops.c	FUNCTION_67	IF_50
0xc2ff	    0x488991f81100	          mov qword [rcx + 0x11f8], rdx 	      5988	ops.c	FUNCTION_67	IF_50
0xc306	    0x488b05000000	            mov rax, qword [0x0400c34d] 	      5989	ops.c	FUNCTION_67	IF_50	IF_51
0xc30d	    0x8b80f8110000	          mov eax, dword [rax + 0x11f8] 	      5989	ops.c	FUNCTION_67	IF_50	IF_51
0xc313	            0x85c0	                           test eax, eax	      5989	ops.c	FUNCTION_67	IF_50	IF_51
0xc315	            0x7e1f	                           jle 0x400c376	      5989	ops.c	FUNCTION_67	IF_50	IF_51
0xc317	    0x488b05000000	            mov rax, qword [0x0400c35e] 	      5990	ops.c	FUNCTION_67	IF_50	IF_51
0xc31e	    0x8b90f8110000	          mov edx, dword [rax + 0x11f8] 	      5990	ops.c	FUNCTION_67	IF_50	IF_51
0xc324	          0x83ea01	                              sub edx, 1	      5990	ops.c	FUNCTION_67	IF_50	IF_51
0xc327	    0x8990f8110000	          mov dword [rax + 0x11f8], edx 	      5990	ops.c	FUNCTION_67	IF_50	IF_51
0xc32d	            0xeb07	                           jmp 0x400c376	      5990	ops.c	FUNCTION_67	IF_50	IF_51
0xc32f	              0x90	                                     nop	      5621	ops.c	FUNCTION_67	IF_1
0xc330	            0xeb04	                           jmp 0x400c376	      5621	ops.c	FUNCTION_67	IF_1
0xc332	              0x90	                                     nop	      5741	ops.c	FUNCTION_67	IF_12	IF_13
0xc333	            0xeb01	                           jmp 0x400c376	      5741	ops.c	FUNCTION_67	IF_12	IF_13
0xc335	              0x90	                                     nop	      5920	ops.c	FUNCTION_67	ELSE_7	IF_39
0xc336	    0x83bd34ffffff	               cmp dword [rbp - 0xcc], 0	      5994	ops.c	FUNCTION_67	IF_52
0xc33d	            0x741f	                            je 0x400c39e	      5994	ops.c	FUNCTION_67	IF_52
0xc33f	    0x488b0d000000	            mov rcx, qword [0x0400c386] 	      5995	ops.c	FUNCTION_67	IF_52
0xc346	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	      5995	ops.c	FUNCTION_67	IF_52
0xc34d	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	      5995	ops.c	FUNCTION_67	IF_52
0xc354	        0x48894138	             mov qword [rcx + 0x38], rax	      5995	ops.c	FUNCTION_67	IF_52
0xc358	        0x48895140	             mov qword [rcx + 0x40], rdx	      5995	ops.c	FUNCTION_67	IF_52
0xc35c	            0xeb17	                           jmp 0x400c3b5	      5995	ops.c	FUNCTION_67	IF_52
0xc35e	    0x83bd24ffffff	               cmp dword [rbp - 0xdc], 0	      5996	ops.c	FUNCTION_67	ELSE_15	IF_53
0xc365	            0x740e	                            je 0x400c3b5	      5996	ops.c	FUNCTION_67	ELSE_15	IF_53
0xc367	    0x488b05000000	            mov rax, qword [0x0400c3ae] 	      5997	ops.c	FUNCTION_67	ELSE_15	IF_53
0xc36e	    0xc7404c010000	               mov dword [rax + 0x4c], 1	      5997	ops.c	FUNCTION_67	ELSE_15	IF_53
0xc375	    0x8b8524ffffff	             mov eax, dword [rbp - 0xdc]	      5999	ops.c	FUNCTION_67
0xc37b	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      6000	ops.c	FUNCTION_67
0xc37f	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      6000	ops.c	FUNCTION_67
0xc388	            0x7405	                            je 0x400c3cf	      6000	ops.c	FUNCTION_67
0xc38a	      0xe800000000	                          call 0x400c3cf	      6000	ops.c	FUNCTION_67
0xc38f	        0x488b5df8	                mov rbx, qword [rbp - 8]	      6000	ops.c	FUNCTION_67
0xc393	              0xc9	                                   leave	      6000	ops.c	FUNCTION_67
0xc394	              0xc3	                                     ret	      6000	ops.c	FUNCTION_67
init_yank	CALL,0:FOR,1:SWITCH,0:functions,0:WHILE,0:DO,0:ELSE,0:IF,0	15
0x59a6	              0x55	                                push rbp	      2938	ops.c	FUNCTION_41
0x59a7	          0x4889e5	                            mov rbp, rsp	      2938	ops.c	FUNCTION_41
0x59aa	    0xc745fc000000	                  mov dword [rbp - 4], 0	      2941	ops.c	FUNCTION_41	FOR_1
0x59b1	            0xeb1a	                           jmp 0x4005a0d	      2941	ops.c	FUNCTION_41	FOR_1
0x59b3	          0x8b45fc	                mov eax, dword [rbp - 4]	      2942	ops.c	FUNCTION_41	FOR_1
0x59b6	            0x4898	                                    cdqe	      2942	ops.c	FUNCTION_41	FOR_1
0x59b8	        0x48c1e005	                              shl rax, 5	      2942	ops.c	FUNCTION_41	FOR_1
0x59bc	    0x480500000000	                              add rax, 0	      2942	ops.c	FUNCTION_41	FOR_1
0x59c2	    0x48c700000000	                      mov qword [rax], 0	      2942	ops.c	FUNCTION_41	FOR_1
0x59c9	        0x8345fc01	                  add dword [rbp - 4], 1	      2941	ops.c	FUNCTION_41	FOR_1
0x59cd	        0x837dfc26	               cmp dword [rbp - 4], 0x26	      2941	ops.c	FUNCTION_41	FOR_1
0x59d1	            0x7ee0	                           jle 0x40059f3	      2941	ops.c	FUNCTION_41	FOR_1
0x59d3	              0x90	                                     nop	      2943	ops.c	FUNCTION_41
0x59d4	              0x5d	                                 pop rbp	      2943	ops.c	FUNCTION_41
0x59d5	              0xc3	                                     ret	      2943	ops.c	FUNCTION_41
