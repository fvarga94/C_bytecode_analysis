strbuf_setlen	ELSE,1:SWITCH,0:functions,0:WHILE,0:DO,0:CALL,2:FOR,0:IF,2	43
0x41	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_3
0x42	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_3
0x45	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_3
0x49	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_3
0x4d	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_3
0x51	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_3	IF_1
0x55	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_3	IF_1
0x58	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_3	IF_1
0x5b	            0x740d	                            je 0x40000aa	       162	strbuf.h	FUNCTION_3	IF_1
0x5d	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_3	IF_1
0x61	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_3	IF_1
0x64	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_3	IF_1
0x68	            0xeb05	                           jmp 0x40000af	       162	strbuf.h	FUNCTION_3	IF_1
0x6a	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_3	IF_1
0x6f	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_3	IF_1
0x73	            0x730f	                           jae 0x40000c4	       162	strbuf.h	FUNCTION_3	IF_1
0x75	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_3	CALL_1
0x7a	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_3	CALL_1
0x7f	      0xe800000000	                          call 0x40000c4	       163	strbuf.h	FUNCTION_3	CALL_1
0x84	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_3
0x88	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_3
0x8c	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_3
0x90	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_3	IF_2
0x94	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_3	IF_2
0x98	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_3	IF_2
0x9e	            0x7414	                            je 0x40000f4	       165	strbuf.h	FUNCTION_3	IF_2
0xa0	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_3	IF_2
0xa4	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_3	IF_2
0xa8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_3	IF_2
0xac	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_3	IF_2
0xaf	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_3	IF_2
0xb2	            0xeb24	                           jmp 0x4000118	       169	strbuf.h	FUNCTION_3
0xb4	     0xfb605000000	           movzx eax, byte [0x040000fb] 	       168	strbuf.h	FUNCTION_3	CALL_2
0xbb	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_3	CALL_2
0xbd	            0x7419	                            je 0x4000118	       168	strbuf.h	FUNCTION_3	CALL_2
0xbf	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0xc4	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_3	CALL_2
0xc9	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0xce	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0xd3	      0xe800000000	                          call 0x4000118	       168	strbuf.h	FUNCTION_3	CALL_2
0xd8	              0x90	                                     nop	       169	strbuf.h	FUNCTION_3
0xd9	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_3
0xda	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_3
is_gtfrom	ELSE,0:SWITCH,0:functions,0:WHILE,0:DO,0:CALL,3:FOR,0:IF,1	34
0x2cc	              0x55	                                push rbp	        51	mailsplit.c	FUNCTION_13
0x2cd	          0x4889e5	                            mov rbp, rsp	        51	mailsplit.c	FUNCTION_13
0x2d0	        0x4883ec20	                           sub rsp, 0x20	        51	mailsplit.c	FUNCTION_13
0x2d4	        0x48897de8	             mov qword [rbp - 0x18], rdi	        51	mailsplit.c	FUNCTION_13
0x2d8	    0x48c745f00600	               mov qword [rbp - 0x10], 6	        52	mailsplit.c	FUNCTION_13	CALL_1
0x2e0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        55	mailsplit.c	FUNCTION_13	IF_1
0x2e4	        0x488b4008	                mov rax, qword [rax + 8]	        55	mailsplit.c	FUNCTION_13	IF_1
0x2e8	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	        55	mailsplit.c	FUNCTION_13	IF_1
0x2ec	            0x7307	                           jae 0x4000335	        55	mailsplit.c	FUNCTION_13	IF_1
0x2ee	      0xb800000000	                              mov eax, 0	        56	mailsplit.c	FUNCTION_13	IF_1
0x2f3	            0xeb4d	                           jmp 0x4000382	        56	mailsplit.c	FUNCTION_13	IF_1
0x2f5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        58	mailsplit.c	FUNCTION_13	CALL_2
0x2f9	        0x488b4010	            mov rax, qword [rax + 0x10] 	        58	mailsplit.c	FUNCTION_13	CALL_2
0x2fd	      0xbe00000000	                              mov esi, 0	        58	mailsplit.c	FUNCTION_13	CALL_2
0x302	          0x4889c7	                            mov rdi, rax	        58	mailsplit.c	FUNCTION_13	CALL_2
0x305	      0xe800000000	                          call 0x400034a	        58	mailsplit.c	FUNCTION_13	CALL_2
0x30a	        0x488945f8	                mov qword [rbp - 8], rax	        58	mailsplit.c	FUNCTION_13	CALL_2
0x30e	      0x48837df800	                  cmp qword [rbp - 8], 0	        59	mailsplit.c	FUNCTION_13	CALL_3
0x313	            0x7427	                            je 0x400037c	        59	mailsplit.c	FUNCTION_13	CALL_3
0x315	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        59	mailsplit.c	FUNCTION_13	CALL_3
0x319	        0x488b5010	            mov rdx, qword [rax + 0x10] 	        59	mailsplit.c	FUNCTION_13	CALL_3
0x31d	        0x488b45f8	                mov rax, qword [rbp - 8]	        59	mailsplit.c	FUNCTION_13	CALL_3
0x321	          0x4801d0	                            add rax, rdx	        59	mailsplit.c	FUNCTION_13	CALL_3
0x324	      0xbe00000000	                              mov esi, 0	        59	mailsplit.c	FUNCTION_13	CALL_3
0x329	          0x4889c7	                            mov rdi, rax	        59	mailsplit.c	FUNCTION_13	CALL_3
0x32c	      0xe800000000	                          call 0x4000371	        59	mailsplit.c	FUNCTION_13	CALL_3
0x331	            0x85c0	                           test eax, eax	        59	mailsplit.c	FUNCTION_13	CALL_3
0x333	            0x7407	                            je 0x400037c	        59	mailsplit.c	FUNCTION_13	CALL_3
0x335	      0xb801000000	                              mov eax, 1	        59	mailsplit.c	FUNCTION_13	CALL_3
0x33a	            0xeb05	                           jmp 0x4000381	        59	mailsplit.c	FUNCTION_13	CALL_3
0x33c	      0xb800000000	                              mov eax, 0	        59	mailsplit.c	FUNCTION_13	CALL_3
0x341	              0x90	                                     nop	        59	mailsplit.c	FUNCTION_13	CALL_3
0x342	              0xc9	                                   leave	        60	mailsplit.c	FUNCTION_13
0x343	              0xc3	                                     ret	        60	mailsplit.c	FUNCTION_13
_	ELSE,0:SWITCH,0:functions,0:WHILE,0:DO,0:CALL,2:FOR,0:IF,1	15
0x149	              0x55	                                push rbp	        51	gettext.h	FUNCTION_22
0x14a	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_22
0x14d	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_22
0x151	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_22
0x155	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_22	IF_1
0x159	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_22	IF_1
0x15c	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_22	IF_1
0x15e	            0x7507	                           jne 0x40001a7	        52	gettext.h	FUNCTION_22	IF_1
0x160	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_22	IF_1
0x165	            0xeb0c	                           jmp 0x40001b3	        53	gettext.h	FUNCTION_22	IF_1
0x167	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_22	CALL_2
0x16b	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_22	CALL_2
0x16e	      0xe800000000	                          call 0x40001b3	        54	gettext.h	FUNCTION_22	CALL_2
0x173	              0xc9	                                   leave	        55	gettext.h	FUNCTION_22
0x174	              0xc3	                                     ret	        55	gettext.h	FUNCTION_22
strbuf_avail	ELSE,0:SWITCH,0:functions,0:WHILE,0:DO,0:CALL,0:FOR,0:IF,0	18
0xb	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_2
0xc	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_2
0xf	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_2
0x13	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x17	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_2
0x1a	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_2
0x1d	            0x741b	                            je 0x400007a	       141	strbuf.h	FUNCTION_2
0x1f	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x23	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_2
0x26	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x2a	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_2
0x2e	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_2
0x31	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_2
0x34	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_2
0x38	            0xeb05	                           jmp 0x400007f	       141	strbuf.h	FUNCTION_2
0x3a	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_2
0x3f	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_2
0x40	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_2
populate_maildir_list	ELSE,0:SWITCH,0:functions,0:WHILE,1:DO,0:CALL,10:FOR,1:IF,3	93
0x564	              0x55	                                push rbp	       114	mailsplit.c	FUNCTION_15
0x565	          0x4889e5	                            mov rbp, rsp	       114	mailsplit.c	FUNCTION_15
0x568	        0x4883ec60	                           sub rsp, 0x60	       114	mailsplit.c	FUNCTION_15
0x56c	        0x48897da8	             mov qword [rbp - 0x58], rdi	       114	mailsplit.c	FUNCTION_15
0x570	        0x488975a0	             mov qword [rbp - 0x60], rsi	       114	mailsplit.c	FUNCTION_15
0x574	    0x64488b042528	                mov rax, qword fs:[0x28]	       114	mailsplit.c	FUNCTION_15
0x57d	        0x488945f8	                mov qword [rbp - 8], rax	       114	mailsplit.c	FUNCTION_15
0x581	            0x31c0	                            xor eax, eax	       114	mailsplit.c	FUNCTION_15
0x583	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       117	mailsplit.c	FUNCTION_15
0x58b	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       118	mailsplit.c	FUNCTION_15
0x593	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       118	mailsplit.c	FUNCTION_15
0x59b	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       118	mailsplit.c	FUNCTION_15
0x5a3	    0xc745bcffffff	     mov dword [rbp - 0x44], 0xffffffff 	       120	mailsplit.c	FUNCTION_15
0x5aa	        0x488d45e0	                   lea rax, [rbp - 0x20]	       122	mailsplit.c	FUNCTION_15	FOR_1
0x5ae	        0x488945c8	             mov qword [rbp - 0x38], rax	       122	mailsplit.c	FUNCTION_15	FOR_1
0x5b2	      0xe9f5000000	                           jmp 0x40006ec	       122	mailsplit.c	FUNCTION_15	FOR_1
0x5b7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       123	mailsplit.c	FUNCTION_15	FOR_1	CALL_1
0x5bb	          0x4889c7	                            mov rdi, rax	       123	mailsplit.c	FUNCTION_15	FOR_1	CALL_1
0x5be	      0xe800000000	                          call 0x4000603	       123	mailsplit.c	FUNCTION_15	FOR_1	CALL_1
0x5c3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       124	mailsplit.c	FUNCTION_15	FOR_1	CALL_2
0x5c7	          0x488b10	                    mov rdx, qword [rax]	       124	mailsplit.c	FUNCTION_15	FOR_1	CALL_2
0x5ca	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       124	mailsplit.c	FUNCTION_15	FOR_1	CALL_2
0x5ce	          0x4889c6	                            mov rsi, rax	       124	mailsplit.c	FUNCTION_15	FOR_1	CALL_2
0x5d1	      0xbf00000000	                              mov edi, 0	       124	mailsplit.c	FUNCTION_15	FOR_1	CALL_2
0x5d6	      0xb800000000	                              mov eax, 0	       124	mailsplit.c	FUNCTION_15	FOR_1	CALL_2
0x5db	      0xe800000000	                          call 0x4000620	       124	mailsplit.c	FUNCTION_15	FOR_1	CALL_2
0x5e0	        0x488945c0	             mov qword [rbp - 0x40], rax	       124	mailsplit.c	FUNCTION_15	FOR_1	CALL_2
0x5e4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       125	mailsplit.c	FUNCTION_15	FOR_1	IF_1	CALL_3
0x5e8	          0x4889c7	                            mov rdi, rax	       125	mailsplit.c	FUNCTION_15	FOR_1	IF_1	CALL_3
0x5eb	      0xe800000000	                          call 0x4000630	       125	mailsplit.c	FUNCTION_15	FOR_1	IF_1	CALL_3
0x5f0	        0x488945d0	             mov qword [rbp - 0x30], rax	       125	mailsplit.c	FUNCTION_15	FOR_1	IF_1	CALL_3
0x5f4	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       125	mailsplit.c	FUNCTION_15	FOR_1	IF_1	CALL_3
0x5f9	     0xf8582000000	                           jne 0x40006c1	       125	mailsplit.c	FUNCTION_15	FOR_1	IF_1	CALL_3
0x5ff	      0xe800000000	                          call 0x4000644	       126	mailsplit.c	FUNCTION_15	FOR_1	IF_1	IF_2
0x604	            0x8b00	                    mov eax, dword [rax]	       126	mailsplit.c	FUNCTION_15	FOR_1	IF_1	IF_2
0x606	          0x83f802	                              cmp eax, 2	       126	mailsplit.c	FUNCTION_15	FOR_1	IF_1	IF_2
0x609	     0xf8497000000	                            je 0x40006e6	       126	mailsplit.c	FUNCTION_15	FOR_1	IF_1	IF_2
0x60f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       128	mailsplit.c	FUNCTION_15	FOR_1	IF_1	CALL_4
0x613	          0x4889c6	                            mov rsi, rax	       128	mailsplit.c	FUNCTION_15	FOR_1	IF_1	CALL_4
0x616	      0xbf00000000	                              mov edi, 0	       128	mailsplit.c	FUNCTION_15	FOR_1	IF_1	CALL_4
0x61b	      0xb800000000	                              mov eax, 0	       128	mailsplit.c	FUNCTION_15	FOR_1	IF_1	CALL_4
0x620	      0xe800000000	                          call 0x4000665	       128	mailsplit.c	FUNCTION_15	FOR_1	IF_1	CALL_4
0x625	      0xe8d6f9ffff	                    call sym.const_error	       128	mailsplit.c	FUNCTION_15	FOR_1	IF_1	CALL_4
0x62a	      0xe994000000	                           jmp 0x4000703	       129	mailsplit.c	FUNCTION_15	FOR_1	IF_1
0x62f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       133	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	IF_3
0x633	         0xfb64013	           movzx eax, byte [rax + 0x13] 	       133	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	IF_3
0x637	            0x3c2e	                            cmp al, 0x2e	       133	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	IF_3
0x639	            0x7502	                           jne 0x400067d	       133	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	IF_3
0x63b	            0xeb44	                           jmp 0x40006c1	       134	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	IF_3
0x63d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       135	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_6
0x641	          0x4889c7	                            mov rdi, rax	       135	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_6
0x644	      0xe800000000	                          call 0x4000689	       135	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_6
0x649	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       136	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_7
0x64d	        0x488d5013	                   lea rdx, [rax + 0x13]	       136	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_7
0x651	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       136	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_7
0x655	          0x488b00	                    mov rax, qword [rax]	       136	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_7
0x658	          0x4889c6	                            mov rsi, rax	       136	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_7
0x65b	      0xbf00000000	                              mov edi, 0	       136	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_7
0x660	      0xb800000000	                              mov eax, 0	       136	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_7
0x665	      0xe800000000	                          call 0x40006aa	       136	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_7
0x66a	        0x488945c0	             mov qword [rbp - 0x40], rax	       136	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_7
0x66e	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       137	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_8
0x672	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       137	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_8
0x676	          0x4889d6	                            mov rsi, rdx	       137	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_8
0x679	          0x4889c7	                            mov rdi, rax	       137	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_8
0x67c	      0xe800000000	                          call 0x40006c1	       137	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_8
0x681	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       132	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_5
0x685	          0x4889c7	                            mov rdi, rax	       132	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_5
0x688	      0xe800000000	                          call 0x40006cd	       132	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_5
0x68d	        0x488945d8	             mov qword [rbp - 0x28], rax	       132	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_5
0x691	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       132	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_5
0x696	            0x7597	                           jne 0x400066f	       132	mailsplit.c	FUNCTION_15	FOR_1	WHILE_1	CALL_5
0x698	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       140	mailsplit.c	FUNCTION_15	FOR_1	CALL_9
0x69c	          0x4889c7	                            mov rdi, rax	       140	mailsplit.c	FUNCTION_15	FOR_1	CALL_9
0x69f	      0xe800000000	                          call 0x40006e4	       140	mailsplit.c	FUNCTION_15	FOR_1	CALL_9
0x6a4	            0xeb01	                           jmp 0x40006e7	       140	mailsplit.c	FUNCTION_15	FOR_1	CALL_9
0x6a6	              0x90	                                     nop	       127	mailsplit.c	FUNCTION_15	FOR_1	IF_1	IF_2
0x6a7	      0x488345c808	               add qword [rbp - 0x38], 8	       122	mailsplit.c	FUNCTION_15	FOR_1
0x6ac	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       122	mailsplit.c	FUNCTION_15	FOR_1
0x6b0	          0x488b00	                    mov rax, qword [rax]	       122	mailsplit.c	FUNCTION_15	FOR_1
0x6b3	          0x4885c0	                           test rax, rax	       122	mailsplit.c	FUNCTION_15	FOR_1
0x6b6	     0xf85fbfeffff	                           jne 0x40005f7	       122	mailsplit.c	FUNCTION_15	FOR_1
0x6bc	    0xc745bc000000	               mov dword [rbp - 0x44], 0	       143	mailsplit.c	FUNCTION_15
0x6c3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       146	mailsplit.c	FUNCTION_15	CALL_10
0x6c7	          0x4889c7	                            mov rdi, rax	       146	mailsplit.c	FUNCTION_15	CALL_10
0x6ca	      0xe800000000	                          call 0x400070f	       146	mailsplit.c	FUNCTION_15	CALL_10
0x6cf	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       147	mailsplit.c	FUNCTION_15
0x6d2	        0x488b4df8	                mov rcx, qword [rbp - 8]	       148	mailsplit.c	FUNCTION_15
0x6d6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       148	mailsplit.c	FUNCTION_15
0x6df	            0x7405	                            je 0x4000726	       148	mailsplit.c	FUNCTION_15
0x6e1	      0xe800000000	                          call 0x4000726	       148	mailsplit.c	FUNCTION_15
0x6e6	              0xc9	                                   leave	       148	mailsplit.c	FUNCTION_15
0x6e7	              0xc3	                                     ret	       148	mailsplit.c	FUNCTION_15
split_one	ELSE,0:SWITCH,0:functions,0:WHILE,0:DO,0:CALL,17:FOR,1:IF,8	135
0x344	              0x55	                                push rbp	        68	mailsplit.c	FUNCTION_14
0x345	          0x4889e5	                            mov rbp, rsp	        68	mailsplit.c	FUNCTION_14
0x348	        0x4883ec40	                           sub rsp, 0x40	        68	mailsplit.c	FUNCTION_14
0x34c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        68	mailsplit.c	FUNCTION_14
0x350	        0x488975d0	             mov qword [rbp - 0x30], rsi	        68	mailsplit.c	FUNCTION_14
0x354	          0x8955cc	             mov dword [rbp - 0x34], edx	        68	mailsplit.c	FUNCTION_14
0x357	    0xc745ec000000	               mov dword [rbp - 0x14], 0	        71	mailsplit.c	FUNCTION_14
0x35e	    0x488b05000000	            mov rax, qword [0x040003a5] 	        72	mailsplit.c	FUNCTION_14	CALL_1
0x365	            0x89c2	                            mov edx, eax	        72	mailsplit.c	FUNCTION_14	CALL_1
0x367	    0x488b05000000	            mov rax, qword [0x040003ae] 	        72	mailsplit.c	FUNCTION_14	CALL_1
0x36e	            0x89d6	                            mov esi, edx	        72	mailsplit.c	FUNCTION_14	CALL_1
0x370	          0x4889c7	                            mov rdi, rax	        72	mailsplit.c	FUNCTION_14	CALL_1
0x373	      0xe8fdfdffff	                   call sym.is_from_line	        72	mailsplit.c	FUNCTION_14	CALL_1
0x378	            0x85c0	                           test eax, eax	        72	mailsplit.c	FUNCTION_14	CALL_1
0x37a	           0xf94c0	                                 sete al	        72	mailsplit.c	FUNCTION_14	CALL_1
0x37d	           0xfb6c0	                           movzx eax, al	        72	mailsplit.c	FUNCTION_14	CALL_1
0x380	          0x8945f0	             mov dword [rbp - 0x10], eax	        72	mailsplit.c	FUNCTION_14	CALL_1
0x383	        0x837df000	               cmp dword [rbp - 0x10], 0	        74	mailsplit.c	FUNCTION_14	IF_1
0x387	            0x742e	                            je 0x40003f7	        74	mailsplit.c	FUNCTION_14	IF_1
0x389	        0x837dcc00	               cmp dword [rbp - 0x34], 0	        74	mailsplit.c	FUNCTION_14	IF_1
0x38d	            0x7528	                           jne 0x40003f7	        74	mailsplit.c	FUNCTION_14	IF_1
0x38f	    0x488b05000000	            mov rax, qword [0x040003d6] 	        75	mailsplit.c	FUNCTION_14	IF_1	CALL_2
0x396	          0x4889c1	                            mov rcx, rax	        75	mailsplit.c	FUNCTION_14	IF_1	CALL_2
0x399	      0xba10000000	                           mov edx, 0x10	        75	mailsplit.c	FUNCTION_14	IF_1	CALL_2
0x39e	      0xbe01000000	                              mov esi, 1	        75	mailsplit.c	FUNCTION_14	IF_1	CALL_2
0x3a3	      0xbf00000000	                              mov edi, 0	        75	mailsplit.c	FUNCTION_14	IF_1	CALL_2
0x3a8	      0xe800000000	                          call 0x40003ed	        75	mailsplit.c	FUNCTION_14	IF_1	CALL_2
0x3ad	      0xbf01000000	                              mov edi, 1	        76	mailsplit.c	FUNCTION_14	IF_1	CALL_3
0x3b2	      0xe800000000	                          call 0x40003f7	        76	mailsplit.c	FUNCTION_14	IF_1	CALL_3
0x3b7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        78	mailsplit.c	FUNCTION_14	CALL_4
0x3bb	      0xbab6010000	                          mov edx, 0x1b6	        78	mailsplit.c	FUNCTION_14	CALL_4
0x3c0	      0xbec1000000	                           mov esi, 0xc1	        78	mailsplit.c	FUNCTION_14	CALL_4
0x3c5	          0x4889c7	                            mov rdi, rax	        78	mailsplit.c	FUNCTION_14	CALL_4
0x3c8	      0xb800000000	                              mov eax, 0	        78	mailsplit.c	FUNCTION_14	CALL_4
0x3cd	      0xe800000000	                          call 0x4000412	        78	mailsplit.c	FUNCTION_14	CALL_4
0x3d2	          0x8945f4	              mov dword [rbp - 0xc], eax	        78	mailsplit.c	FUNCTION_14	CALL_4
0x3d5	        0x837df400	                cmp dword [rbp - 0xc], 0	        79	mailsplit.c	FUNCTION_14	IF_2
0x3d9	            0x7916	                           jns 0x4000431	        79	mailsplit.c	FUNCTION_14	IF_2
0x3db	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        80	mailsplit.c	FUNCTION_14	CALL_5
0x3df	          0x4889c6	                            mov rsi, rax	        80	mailsplit.c	FUNCTION_14	CALL_5
0x3e2	      0xbf00000000	                              mov edi, 0	        80	mailsplit.c	FUNCTION_14	CALL_5
0x3e7	      0xb800000000	                              mov eax, 0	        80	mailsplit.c	FUNCTION_14	CALL_5
0x3ec	      0xe800000000	                          call 0x4000431	        80	mailsplit.c	FUNCTION_14	CALL_5
0x3f1	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        81	mailsplit.c	FUNCTION_14	CALL_6
0x3f4	      0xbe00000000	                              mov esi, 0	        81	mailsplit.c	FUNCTION_14	CALL_6
0x3f9	            0x89c7	                            mov edi, eax	        81	mailsplit.c	FUNCTION_14	CALL_6
0x3fb	      0xe800000000	                          call 0x4000440	        81	mailsplit.c	FUNCTION_14	CALL_6
0x400	        0x488945f8	                mov qword [rbp - 8], rax	        81	mailsplit.c	FUNCTION_14	CALL_6
0x404	    0x8b0500000000	            mov eax, dword [0x0400044a] 	        87	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x40a	            0x85c0	                           test eax, eax	        87	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x40c	            0x756c	                           jne 0x40004ba	        87	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x40e	    0x488b05000000	            mov rax, qword [0x04000455] 	        87	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x415	        0x4883f801	                              cmp rax, 1	        87	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x419	            0x765f	                           jbe 0x40004ba	        87	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x41b	    0x488b05000000	            mov rax, qword [0x04000462] 	        87	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x422	    0x488b15000000	            mov rdx, qword [0x04000469] 	        87	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x429	        0x4883ea01	                              sub rdx, 1	        87	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x42d	          0x4801d0	                            add rax, rdx	        87	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x430	           0xfb600	                   movzx eax, byte [rax]	        87	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x433	            0x3c0a	                             cmp al, 0xa	        87	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x435	            0x7543	                           jne 0x40004ba	        87	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x437	    0x488b05000000	            mov rax, qword [0x0400047e] 	        88	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x43e	    0x488b15000000	            mov rdx, qword [0x04000485] 	        88	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x445	        0x4883ea02	                              sub rdx, 2	        88	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x449	          0x4801d0	                            add rax, rdx	        88	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x44c	           0xfb600	                   movzx eax, byte [rax]	        88	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x44f	            0x3c0d	                             cmp al, 0xd	        87	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x451	            0x7527	                           jne 0x40004ba	        87	mailsplit.c	FUNCTION_14	FOR_1	IF_3
0x453	    0x488b05000000	            mov rax, qword [0x0400049a] 	        89	mailsplit.c	FUNCTION_14	FOR_1	IF_3	CALL_7
0x45a	        0x4883e802	                              sub rax, 2	        89	mailsplit.c	FUNCTION_14	FOR_1	IF_3	CALL_7
0x45e	          0x4889c6	                            mov rsi, rax	        89	mailsplit.c	FUNCTION_14	FOR_1	IF_3	CALL_7
0x461	      0xbf00000000	                              mov edi, 0	        89	mailsplit.c	FUNCTION_14	FOR_1	IF_3	CALL_7
0x466	      0xe8d6fbffff	                  call sym.strbuf_setlen	        89	mailsplit.c	FUNCTION_14	FOR_1	IF_3	CALL_7
0x46b	      0xbe0a000000	                            mov esi, 0xa	        90	mailsplit.c	FUNCTION_14	FOR_1	IF_3	CALL_8
0x470	      0xbf00000000	                              mov edi, 0	        90	mailsplit.c	FUNCTION_14	FOR_1	IF_3	CALL_8
0x475	      0xe861fcffff	                   call sym.strbuf_addch	        90	mailsplit.c	FUNCTION_14	FOR_1	IF_3	CALL_8
0x47a	    0x8b0500000000	            mov eax, dword [0x040004c0] 	        93	mailsplit.c	FUNCTION_14	FOR_1	IF_4	CALL_9
0x480	            0x85c0	                           test eax, eax	        93	mailsplit.c	FUNCTION_14	FOR_1	IF_4	CALL_9
0x482	            0x7422	                            je 0x40004e6	        93	mailsplit.c	FUNCTION_14	FOR_1	IF_4	CALL_9
0x484	      0xbf00000000	                              mov edi, 0	        93	mailsplit.c	FUNCTION_14	FOR_1	IF_4	CALL_9
0x489	      0xe83efeffff	                      call sym.is_gtfrom	        93	mailsplit.c	FUNCTION_14	FOR_1	IF_4	CALL_9
0x48e	            0x85c0	                           test eax, eax	        93	mailsplit.c	FUNCTION_14	FOR_1	IF_4	CALL_9
0x490	            0x7414	                            je 0x40004e6	        93	mailsplit.c	FUNCTION_14	FOR_1	IF_4	CALL_9
0x492	      0xba01000000	                              mov edx, 1	        94	mailsplit.c	FUNCTION_14	FOR_1	CALL_10
0x497	      0xbe00000000	                              mov esi, 0	        94	mailsplit.c	FUNCTION_14	FOR_1	CALL_10
0x49c	      0xbf00000000	                              mov edi, 0	        94	mailsplit.c	FUNCTION_14	FOR_1	CALL_10
0x4a1	      0xe800000000	                          call 0x40004e6	        94	mailsplit.c	FUNCTION_14	FOR_1	CALL_10
0x4a6	    0x488b15000000	            mov rdx, qword [0x040004ed] 	        96	mailsplit.c	FUNCTION_14	FOR_1	IF_5	CALL_11
0x4ad	    0x488b05000000	            mov rax, qword [0x040004f4] 	        96	mailsplit.c	FUNCTION_14	FOR_1	IF_5	CALL_11
0x4b4	        0x488b4df8	                mov rcx, qword [rbp - 8]	        96	mailsplit.c	FUNCTION_14	FOR_1	IF_5	CALL_11
0x4b8	      0xbe01000000	                              mov esi, 1	        96	mailsplit.c	FUNCTION_14	FOR_1	IF_5	CALL_11
0x4bd	          0x4889c7	                            mov rdi, rax	        96	mailsplit.c	FUNCTION_14	FOR_1	IF_5	CALL_11
0x4c0	      0xe800000000	                          call 0x4000505	        96	mailsplit.c	FUNCTION_14	FOR_1	IF_5	CALL_11
0x4c5	          0x4889c2	                            mov rdx, rax	        96	mailsplit.c	FUNCTION_14	FOR_1	IF_5	CALL_11
0x4c8	    0x488b05000000	            mov rax, qword [0x0400050f] 	        96	mailsplit.c	FUNCTION_14	FOR_1	IF_5	CALL_11
0x4cf	          0x4839c2	                            cmp rdx, rax	        96	mailsplit.c	FUNCTION_14	FOR_1	IF_5	CALL_11
0x4d2	            0x740f	                            je 0x4000523	        96	mailsplit.c	FUNCTION_14	FOR_1	IF_5	CALL_11
0x4d4	      0xbf00000000	                              mov edi, 0	        97	mailsplit.c	FUNCTION_14	FOR_1	CALL_12
0x4d9	      0xb800000000	                              mov eax, 0	        97	mailsplit.c	FUNCTION_14	FOR_1	CALL_12
0x4de	      0xe800000000	                          call 0x4000523	        97	mailsplit.c	FUNCTION_14	FOR_1	CALL_12
0x4e3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        99	mailsplit.c	FUNCTION_14	FOR_1	IF_6	CALL_13
0x4e7	      0xba0a000000	                            mov edx, 0xa	        99	mailsplit.c	FUNCTION_14	FOR_1	IF_6	CALL_13
0x4ec	          0x4889c6	                            mov rsi, rax	        99	mailsplit.c	FUNCTION_14	FOR_1	IF_6	CALL_13
0x4ef	      0xbf00000000	                              mov edi, 0	        99	mailsplit.c	FUNCTION_14	FOR_1	IF_6	CALL_13
0x4f4	      0xe800000000	                          call 0x4000539	        99	mailsplit.c	FUNCTION_14	FOR_1	IF_6	CALL_13
0x4f9	            0x85c0	                           test eax, eax	        99	mailsplit.c	FUNCTION_14	FOR_1	IF_6	CALL_13
0x4fb	            0x7428	                            je 0x4000565	        99	mailsplit.c	FUNCTION_14	FOR_1	IF_6	CALL_13
0x4fd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       100	mailsplit.c	FUNCTION_14	FOR_1	IF_6	IF_7	CALL_14
0x501	          0x4889c7	                            mov rdi, rax	       100	mailsplit.c	FUNCTION_14	FOR_1	IF_6	IF_7	CALL_14
0x504	      0xe800000000	                          call 0x4000549	       100	mailsplit.c	FUNCTION_14	FOR_1	IF_6	IF_7	CALL_14
0x509	            0x85c0	                           test eax, eax	       100	mailsplit.c	FUNCTION_14	FOR_1	IF_6	IF_7	CALL_14
0x50b	            0x7409	                            je 0x4000556	       100	mailsplit.c	FUNCTION_14	FOR_1	IF_6	IF_7	CALL_14
0x50d	    0xc745ec010000	               mov dword [rbp - 0x14], 1	       101	mailsplit.c	FUNCTION_14	FOR_1	IF_6	IF_7
0x514	            0xeb3d	                           jmp 0x4000593	       102	mailsplit.c	FUNCTION_14	FOR_1	IF_6	IF_7
0x516	      0xbf00000000	                              mov edi, 0	       104	mailsplit.c	FUNCTION_14	FOR_1	IF_6	CALL_15
0x51b	      0xb800000000	                              mov eax, 0	       104	mailsplit.c	FUNCTION_14	FOR_1	IF_6	CALL_15
0x520	      0xe800000000	                          call 0x4000565	       104	mailsplit.c	FUNCTION_14	FOR_1	IF_6	CALL_15
0x525	        0x837df000	               cmp dword [rbp - 0x10], 0	       106	mailsplit.c	FUNCTION_14	FOR_1	IF_8	CALL_16
0x529	     0xf85d5feffff	                           jne 0x4000444	       106	mailsplit.c	FUNCTION_14	FOR_1	IF_8	CALL_16
0x52f	    0x488b05000000	            mov rax, qword [0x04000576] 	       106	mailsplit.c	FUNCTION_14	FOR_1	IF_8	CALL_16
0x536	            0x89c2	                            mov edx, eax	       106	mailsplit.c	FUNCTION_14	FOR_1	IF_8	CALL_16
0x538	    0x488b05000000	            mov rax, qword [0x0400057f] 	       106	mailsplit.c	FUNCTION_14	FOR_1	IF_8	CALL_16
0x53f	            0x89d6	                            mov esi, edx	       106	mailsplit.c	FUNCTION_14	FOR_1	IF_8	CALL_16
0x541	          0x4889c7	                            mov rdi, rax	       106	mailsplit.c	FUNCTION_14	FOR_1	IF_8	CALL_16
0x544	      0xe82cfcffff	                   call sym.is_from_line	       106	mailsplit.c	FUNCTION_14	FOR_1	IF_8	CALL_16
0x549	            0x85c0	                           test eax, eax	       106	mailsplit.c	FUNCTION_14	FOR_1	IF_8	CALL_16
0x54b	            0x7505	                           jne 0x4000592	       106	mailsplit.c	FUNCTION_14	FOR_1	IF_8	CALL_16
0x54d	      0xe9b2feffff	                           jmp 0x4000444	       108	mailsplit.c	FUNCTION_14	FOR_1
0x552	              0x90	                                     nop	       107	mailsplit.c	FUNCTION_14	FOR_1	IF_8
0x553	        0x488b45f8	                mov rax, qword [rbp - 8]	       109	mailsplit.c	FUNCTION_14	CALL_17
0x557	          0x4889c7	                            mov rdi, rax	       109	mailsplit.c	FUNCTION_14	CALL_17
0x55a	      0xe800000000	                          call 0x400059f	       109	mailsplit.c	FUNCTION_14	CALL_17
0x55f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       110	mailsplit.c	FUNCTION_14
0x562	              0xc9	                                   leave	       111	mailsplit.c	FUNCTION_14
0x563	              0xc3	                                     ret	       111	mailsplit.c	FUNCTION_14
split_maildir	ELSE,0:SWITCH,0:functions,0:WHILE,0:DO,0:CALL,14:FOR,1:IF,4	123
0x801	              0x55	                                push rbp	       173	mailsplit.c	FUNCTION_17
0x802	          0x4889e5	                            mov rbp, rsp	       173	mailsplit.c	FUNCTION_17
0x805	        0x4883ec70	                           sub rsp, 0x70	       173	mailsplit.c	FUNCTION_17
0x809	        0x48897da8	             mov qword [rbp - 0x58], rdi	       173	mailsplit.c	FUNCTION_17
0x80d	        0x488975a0	             mov qword [rbp - 0x60], rsi	       173	mailsplit.c	FUNCTION_17
0x811	          0x89559c	             mov dword [rbp - 0x64], edx	       173	mailsplit.c	FUNCTION_17
0x814	          0x894d98	             mov dword [rbp - 0x68], ecx	       173	mailsplit.c	FUNCTION_17
0x817	    0x64488b042528	                mov rax, qword fs:[0x28]	       173	mailsplit.c	FUNCTION_17
0x820	        0x488945f8	                mov qword [rbp - 8], rax	       173	mailsplit.c	FUNCTION_17
0x824	            0x31c0	                            xor eax, eax	       173	mailsplit.c	FUNCTION_17
0x826	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       174	mailsplit.c	FUNCTION_17
0x82e	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       175	mailsplit.c	FUNCTION_17
0x836	    0xc745b0ffffff	     mov dword [rbp - 0x50], 0xffffffff 	       176	mailsplit.c	FUNCTION_17
0x83d	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       178	mailsplit.c	FUNCTION_17
0x845	    0xc745d8000000	               mov dword [rbp - 0x28], 0	       178	mailsplit.c	FUNCTION_17
0x84c	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       178	mailsplit.c	FUNCTION_17
0x853	         0xfb645e0	            movzx eax, byte [rbp - 0x20]	       178	mailsplit.c	FUNCTION_17
0x857	          0x83c801	                               or eax, 1	       178	mailsplit.c	FUNCTION_17
0x85a	          0x8845e0	               mov byte [rbp - 0x20], al	       178	mailsplit.c	FUNCTION_17
0x85d	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       178	mailsplit.c	FUNCTION_17
0x865	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       180	mailsplit.c	FUNCTION_17
0x86d	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       182	mailsplit.c	FUNCTION_17	IF_1	CALL_1
0x871	        0x488d45d0	                   lea rax, [rbp - 0x30]	       182	mailsplit.c	FUNCTION_17	IF_1	CALL_1
0x875	          0x4889d6	                            mov rsi, rdx	       182	mailsplit.c	FUNCTION_17	IF_1	CALL_1
0x878	          0x4889c7	                            mov rdi, rax	       182	mailsplit.c	FUNCTION_17	IF_1	CALL_1
0x87b	      0xe8e4fcffff	          call sym.populate_maildir_list	       182	mailsplit.c	FUNCTION_17	IF_1	CALL_1
0x880	            0x85c0	                           test eax, eax	       182	mailsplit.c	FUNCTION_17	IF_1	CALL_1
0x882	     0xf882f010000	                            js 0x40009f7	       182	mailsplit.c	FUNCTION_17	IF_1	CALL_1
0x888	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	       185	mailsplit.c	FUNCTION_17	FOR_1
0x88f	      0xe90d010000	                           jmp 0x40009e1	       185	mailsplit.c	FUNCTION_17	FOR_1
0x894	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       188	mailsplit.c	FUNCTION_17	FOR_1	CALL_2
0x898	          0x4889c7	                            mov rdi, rax	       188	mailsplit.c	FUNCTION_17	FOR_1	CALL_2
0x89b	      0xe800000000	                          call 0x40008e0	       188	mailsplit.c	FUNCTION_17	FOR_1	CALL_2
0x8a0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       189	mailsplit.c	FUNCTION_17	FOR_1	CALL_3
0x8a4	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       189	mailsplit.c	FUNCTION_17	FOR_1	CALL_3
0x8a7	          0x4863d2	                         movsxd rdx, edx	       189	mailsplit.c	FUNCTION_17	FOR_1	CALL_3
0x8aa	        0x48c1e204	                              shl rdx, 4	       189	mailsplit.c	FUNCTION_17	FOR_1	CALL_3
0x8ae	          0x4801d0	                            add rax, rdx	       189	mailsplit.c	FUNCTION_17	FOR_1	CALL_3
0x8b1	          0x488b10	                    mov rdx, qword [rax]	       189	mailsplit.c	FUNCTION_17	FOR_1	CALL_3
0x8b4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       189	mailsplit.c	FUNCTION_17	FOR_1	CALL_3
0x8b8	          0x4889c6	                            mov rsi, rax	       189	mailsplit.c	FUNCTION_17	FOR_1	CALL_3
0x8bb	      0xbf00000000	                              mov edi, 0	       189	mailsplit.c	FUNCTION_17	FOR_1	CALL_3
0x8c0	      0xb800000000	                              mov eax, 0	       189	mailsplit.c	FUNCTION_17	FOR_1	CALL_3
0x8c5	      0xe800000000	                          call 0x400090a	       189	mailsplit.c	FUNCTION_17	FOR_1	CALL_3
0x8ca	        0x488945b8	             mov qword [rbp - 0x48], rax	       189	mailsplit.c	FUNCTION_17	FOR_1	CALL_3
0x8ce	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       191	mailsplit.c	FUNCTION_17	FOR_1	CALL_4
0x8d2	      0xbe00000000	                              mov esi, 0	       191	mailsplit.c	FUNCTION_17	FOR_1	CALL_4
0x8d7	          0x4889c7	                            mov rdi, rax	       191	mailsplit.c	FUNCTION_17	FOR_1	CALL_4
0x8da	      0xe800000000	                          call 0x400091f	       191	mailsplit.c	FUNCTION_17	FOR_1	CALL_4
0x8df	        0x488945c0	             mov qword [rbp - 0x40], rax	       191	mailsplit.c	FUNCTION_17	FOR_1	CALL_4
0x8e3	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       192	mailsplit.c	FUNCTION_17	FOR_1	IF_2
0x8e8	            0x7520	                           jne 0x400094a	       192	mailsplit.c	FUNCTION_17	FOR_1	IF_2
0x8ea	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       193	mailsplit.c	FUNCTION_17	FOR_1	IF_2	CALL_5
0x8ee	          0x4889c6	                            mov rsi, rax	       193	mailsplit.c	FUNCTION_17	FOR_1	IF_2	CALL_5
0x8f1	      0xbf00000000	                              mov edi, 0	       193	mailsplit.c	FUNCTION_17	FOR_1	IF_2	CALL_5
0x8f6	      0xb800000000	                              mov eax, 0	       193	mailsplit.c	FUNCTION_17	FOR_1	IF_2	CALL_5
0x8fb	      0xe800000000	                          call 0x4000940	       193	mailsplit.c	FUNCTION_17	FOR_1	IF_2	CALL_5
0x900	      0xe8fbf6ffff	                    call sym.const_error	       193	mailsplit.c	FUNCTION_17	FOR_1	IF_2	CALL_5
0x905	      0xe9ae000000	                           jmp 0x40009f8	       194	mailsplit.c	FUNCTION_17	FOR_1	IF_2
0x90a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       197	mailsplit.c	FUNCTION_17	FOR_1	IF_3	CALL_6
0x90e	      0xba0a000000	                            mov edx, 0xa	       197	mailsplit.c	FUNCTION_17	FOR_1	IF_3	CALL_6
0x913	          0x4889c6	                            mov rsi, rax	       197	mailsplit.c	FUNCTION_17	FOR_1	IF_3	CALL_6
0x916	      0xbf00000000	                              mov edi, 0	       197	mailsplit.c	FUNCTION_17	FOR_1	IF_3	CALL_6
0x91b	      0xe800000000	                          call 0x4000960	       197	mailsplit.c	FUNCTION_17	FOR_1	IF_3	CALL_6
0x920	            0x85c0	                           test eax, eax	       197	mailsplit.c	FUNCTION_17	FOR_1	IF_3	CALL_6
0x922	            0x741d	                            je 0x4000981	       197	mailsplit.c	FUNCTION_17	FOR_1	IF_3	CALL_6
0x924	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       198	mailsplit.c	FUNCTION_17	FOR_1	IF_3	CALL_7
0x928	          0x4889c6	                            mov rsi, rax	       198	mailsplit.c	FUNCTION_17	FOR_1	IF_3	CALL_7
0x92b	      0xbf00000000	                              mov edi, 0	       198	mailsplit.c	FUNCTION_17	FOR_1	IF_3	CALL_7
0x930	      0xb800000000	                              mov eax, 0	       198	mailsplit.c	FUNCTION_17	FOR_1	IF_3	CALL_7
0x935	      0xe800000000	                          call 0x400097a	       198	mailsplit.c	FUNCTION_17	FOR_1	IF_3	CALL_7
0x93a	      0xe8c1f6ffff	                    call sym.const_error	       198	mailsplit.c	FUNCTION_17	FOR_1	IF_3	CALL_7
0x93f	            0xeb77	                           jmp 0x40009f8	       199	mailsplit.c	FUNCTION_17	FOR_1	IF_3
0x941	        0x83459801	               add dword [rbp - 0x68], 1	       202	mailsplit.c	FUNCTION_17	FOR_1	CALL_8
0x945	          0x8b4d98	             mov ecx, dword [rbp - 0x68]	       202	mailsplit.c	FUNCTION_17	FOR_1	CALL_8
0x948	          0x8b559c	             mov edx, dword [rbp - 0x64]	       202	mailsplit.c	FUNCTION_17	FOR_1	CALL_8
0x94b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       202	mailsplit.c	FUNCTION_17	FOR_1	CALL_8
0x94f	          0x4889c6	                            mov rsi, rax	       202	mailsplit.c	FUNCTION_17	FOR_1	CALL_8
0x952	      0xbf00000000	                              mov edi, 0	       202	mailsplit.c	FUNCTION_17	FOR_1	CALL_8
0x957	      0xb800000000	                              mov eax, 0	       202	mailsplit.c	FUNCTION_17	FOR_1	CALL_8
0x95c	      0xe800000000	                          call 0x40009a1	       202	mailsplit.c	FUNCTION_17	FOR_1	CALL_8
0x961	        0x488945c8	             mov qword [rbp - 0x38], rax	       202	mailsplit.c	FUNCTION_17	FOR_1	CALL_8
0x965	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       203	mailsplit.c	FUNCTION_17	FOR_1	CALL_9
0x969	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       203	mailsplit.c	FUNCTION_17	FOR_1	CALL_9
0x96d	      0xba01000000	                              mov edx, 1	       203	mailsplit.c	FUNCTION_17	FOR_1	CALL_9
0x972	          0x4889ce	                            mov rsi, rcx	       203	mailsplit.c	FUNCTION_17	FOR_1	CALL_9
0x975	          0x4889c7	                            mov rdi, rax	       203	mailsplit.c	FUNCTION_17	FOR_1	CALL_9
0x978	      0xe8c7f9ffff	                      call sym.split_one	       203	mailsplit.c	FUNCTION_17	FOR_1	CALL_9
0x97d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       204	mailsplit.c	FUNCTION_17	FOR_1	CALL_10
0x981	          0x4889c7	                            mov rdi, rax	       204	mailsplit.c	FUNCTION_17	FOR_1	CALL_10
0x984	      0xe800000000	                          call 0x40009c9	       204	mailsplit.c	FUNCTION_17	FOR_1	CALL_10
0x989	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       206	mailsplit.c	FUNCTION_17	FOR_1	CALL_11
0x98d	          0x4889c7	                            mov rdi, rax	       206	mailsplit.c	FUNCTION_17	FOR_1	CALL_11
0x990	      0xe800000000	                          call 0x40009d5	       206	mailsplit.c	FUNCTION_17	FOR_1	CALL_11
0x995	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       207	mailsplit.c	FUNCTION_17	FOR_1
0x99d	        0x8345b401	               add dword [rbp - 0x4c], 1	       185	mailsplit.c	FUNCTION_17	FOR_1
0x9a1	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       185	mailsplit.c	FUNCTION_17	FOR_1
0x9a4	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       185	mailsplit.c	FUNCTION_17	FOR_1
0x9a7	            0x39c2	                            cmp edx, eax	       185	mailsplit.c	FUNCTION_17	FOR_1
0x9a9	     0xf87e5feffff	                            ja 0x40008d4	       185	mailsplit.c	FUNCTION_17	FOR_1
0x9af	          0x8b4598	             mov eax, dword [rbp - 0x68]	       210	mailsplit.c	FUNCTION_17
0x9b2	          0x8945b0	             mov dword [rbp - 0x50], eax	       210	mailsplit.c	FUNCTION_17
0x9b5	            0xeb01	                           jmp 0x40009f8	       210	mailsplit.c	FUNCTION_17
0x9b7	              0x90	                                     nop	       183	mailsplit.c	FUNCTION_17	IF_1
0x9b8	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       212	mailsplit.c	FUNCTION_17	IF_4
0x9bd	            0x740c	                            je 0x4000a0b	       212	mailsplit.c	FUNCTION_17	IF_4
0x9bf	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       213	mailsplit.c	FUNCTION_17	CALL_12
0x9c3	          0x4889c7	                            mov rdi, rax	       213	mailsplit.c	FUNCTION_17	CALL_12
0x9c6	      0xe800000000	                          call 0x4000a0b	       213	mailsplit.c	FUNCTION_17	CALL_12
0x9cb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       214	mailsplit.c	FUNCTION_17	CALL_13
0x9cf	          0x4889c7	                            mov rdi, rax	       214	mailsplit.c	FUNCTION_17	CALL_13
0x9d2	      0xe800000000	                          call 0x4000a17	       214	mailsplit.c	FUNCTION_17	CALL_13
0x9d7	        0x488d45d0	                   lea rax, [rbp - 0x30]	       215	mailsplit.c	FUNCTION_17	CALL_14
0x9db	      0xbe01000000	                              mov esi, 1	       215	mailsplit.c	FUNCTION_17	CALL_14
0x9e0	          0x4889c7	                            mov rdi, rax	       215	mailsplit.c	FUNCTION_17	CALL_14
0x9e3	      0xe800000000	                          call 0x4000a28	       215	mailsplit.c	FUNCTION_17	CALL_14
0x9e8	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       216	mailsplit.c	FUNCTION_17
0x9eb	        0x488b4df8	                mov rcx, qword [rbp - 8]	       217	mailsplit.c	FUNCTION_17
0x9ef	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       217	mailsplit.c	FUNCTION_17
0x9f8	            0x7405	                            je 0x4000a3f	       217	mailsplit.c	FUNCTION_17
0x9fa	      0xe800000000	                          call 0x4000a3f	       217	mailsplit.c	FUNCTION_17
0x9ff	              0xc9	                                   leave	       217	mailsplit.c	FUNCTION_17
0xa00	              0xc3	                                     ret	       217	mailsplit.c	FUNCTION_17
const_error	ELSE,0:SWITCH,0:functions,0:WHILE,0:DO,0:CALL,0:FOR,0:IF,0	5
0x0	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_29
0x1	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_29
0x4	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_29
0x9	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_29
0xa	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_29
is_from_line	ELSE,0:SWITCH,0:functions,0:WHILE,0:DO,0:CALL,7:FOR,1:IF,5	100
0x175	              0x55	                                push rbp	        16	mailsplit.c	FUNCTION_12
0x176	          0x4889e5	                            mov rbp, rsp	        16	mailsplit.c	FUNCTION_12
0x179	        0x4883ec20	                           sub rsp, 0x20	        16	mailsplit.c	FUNCTION_12
0x17d	        0x48897de8	             mov qword [rbp - 0x18], rdi	        16	mailsplit.c	FUNCTION_12
0x181	          0x8975e4	             mov dword [rbp - 0x1c], esi	        16	mailsplit.c	FUNCTION_12
0x184	        0x837de413	           cmp dword [rbp - 0x1c], 0x13 	        19	mailsplit.c	FUNCTION_12	IF_1	CALL_1
0x188	            0x7e1a	                           jle 0x40001e4	        19	mailsplit.c	FUNCTION_12	IF_1	CALL_1
0x18a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        19	mailsplit.c	FUNCTION_12	IF_1	CALL_1
0x18e	      0xba05000000	                              mov edx, 5	        19	mailsplit.c	FUNCTION_12	IF_1	CALL_1
0x193	          0x4889c6	                            mov rsi, rax	        19	mailsplit.c	FUNCTION_12	IF_1	CALL_1
0x196	      0xbf00000000	                              mov edi, 0	        19	mailsplit.c	FUNCTION_12	IF_1	CALL_1
0x19b	      0xe800000000	                          call 0x40001e0	        19	mailsplit.c	FUNCTION_12	IF_1	CALL_1
0x1a0	            0x85c0	                           test eax, eax	        19	mailsplit.c	FUNCTION_12	IF_1	CALL_1
0x1a2	            0x740a	                            je 0x40001ee	        19	mailsplit.c	FUNCTION_12	IF_1	CALL_1
0x1a4	      0xb800000000	                              mov eax, 0	        20	mailsplit.c	FUNCTION_12	IF_1
0x1a9	      0xe91c010000	                           jmp 0x400030a	        20	mailsplit.c	FUNCTION_12	IF_1
0x1ae	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        22	mailsplit.c	FUNCTION_12
0x1b1	            0x4898	                                    cdqe	        22	mailsplit.c	FUNCTION_12
0x1b3	        0x488d50fe	                      lea rdx, [rax - 2]	        22	mailsplit.c	FUNCTION_12
0x1b7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        22	mailsplit.c	FUNCTION_12
0x1bb	          0x4801d0	                            add rax, rdx	        22	mailsplit.c	FUNCTION_12
0x1be	        0x488945f8	                mov qword [rbp - 8], rax	        22	mailsplit.c	FUNCTION_12
0x1c2	      0x488345e805	               add qword [rbp - 0x18], 5	        23	mailsplit.c	FUNCTION_12
0x1c7	        0x488b45f8	                mov rax, qword [rbp - 8]	        25	mailsplit.c	FUNCTION_12	FOR_1	IF_2
0x1cb	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	        25	mailsplit.c	FUNCTION_12	FOR_1	IF_2
0x1cf	            0x730a	                           jae 0x400021b	        25	mailsplit.c	FUNCTION_12	FOR_1	IF_2
0x1d1	      0xb800000000	                              mov eax, 0	        26	mailsplit.c	FUNCTION_12	FOR_1	IF_2
0x1d6	      0xe9ef000000	                           jmp 0x400030a	        26	mailsplit.c	FUNCTION_12	FOR_1	IF_2
0x1db	      0x48836df801	                  sub qword [rbp - 8], 1	        27	mailsplit.c	FUNCTION_12	FOR_1	IF_3
0x1e0	        0x488b45f8	                mov rax, qword [rbp - 8]	        27	mailsplit.c	FUNCTION_12	FOR_1	IF_3
0x1e4	           0xfb600	                   movzx eax, byte [rax]	        27	mailsplit.c	FUNCTION_12	FOR_1	IF_3
0x1e7	            0x3c3a	                            cmp al, 0x3a	        27	mailsplit.c	FUNCTION_12	FOR_1	IF_3
0x1e9	            0x7402	                            je 0x400022d	        27	mailsplit.c	FUNCTION_12	FOR_1	IF_3
0x1eb	            0xebda	                           jmp 0x4000207	        29	mailsplit.c	FUNCTION_12	FOR_1
0x1ed	              0x90	                                     nop	        28	mailsplit.c	FUNCTION_12	FOR_1	IF_3
0x1ee	        0x488b45f8	                mov rax, qword [rbp - 8]	        31	mailsplit.c	FUNCTION_12	IF_4	CALL_2
0x1f2	        0x4883e804	                              sub rax, 4	        31	mailsplit.c	FUNCTION_12	IF_4	CALL_2
0x1f6	           0xfb600	                   movzx eax, byte [rax]	        31	mailsplit.c	FUNCTION_12	IF_4	CALL_2
0x1f9	           0xfb6c0	                           movzx eax, al	        31	mailsplit.c	FUNCTION_12	IF_4	CALL_2
0x1fc	            0x4898	                                    cdqe	        31	mailsplit.c	FUNCTION_12	IF_4	CALL_2
0x1fe	     0xfb680000000	                   movzx eax, byte [rax]	        31	mailsplit.c	FUNCTION_12	IF_4	CALL_2
0x205	           0xfb6c0	                           movzx eax, al	        31	mailsplit.c	FUNCTION_12	IF_4	CALL_2
0x208	          0x83e002	                              and eax, 2	        31	mailsplit.c	FUNCTION_12	IF_4	CALL_2
0x20b	            0x85c0	                           test eax, eax	        31	mailsplit.c	FUNCTION_12	IF_4	CALL_2
0x20d	     0xf8484000000	                            je 0x40002d7	        31	mailsplit.c	FUNCTION_12	IF_4	CALL_2
0x213	        0x488b45f8	                mov rax, qword [rbp - 8]	        32	mailsplit.c	FUNCTION_12	IF_4	CALL_3
0x217	        0x4883e802	                              sub rax, 2	        32	mailsplit.c	FUNCTION_12	IF_4	CALL_3
0x21b	           0xfb600	                   movzx eax, byte [rax]	        32	mailsplit.c	FUNCTION_12	IF_4	CALL_3
0x21e	           0xfb6c0	                           movzx eax, al	        32	mailsplit.c	FUNCTION_12	IF_4	CALL_3
0x221	            0x4898	                                    cdqe	        32	mailsplit.c	FUNCTION_12	IF_4	CALL_3
0x223	     0xfb680000000	                   movzx eax, byte [rax]	        32	mailsplit.c	FUNCTION_12	IF_4	CALL_3
0x22a	           0xfb6c0	                           movzx eax, al	        32	mailsplit.c	FUNCTION_12	IF_4	CALL_3
0x22d	          0x83e002	                              and eax, 2	        32	mailsplit.c	FUNCTION_12	IF_4	CALL_3
0x230	            0x85c0	                           test eax, eax	        31	mailsplit.c	FUNCTION_12	IF_4	CALL_2
0x232	            0x7463	                            je 0x40002d7	        31	mailsplit.c	FUNCTION_12	IF_4	CALL_2
0x234	        0x488b45f8	                mov rax, qword [rbp - 8]	        33	mailsplit.c	FUNCTION_12	IF_4	CALL_4
0x238	        0x4883e801	                              sub rax, 1	        33	mailsplit.c	FUNCTION_12	IF_4	CALL_4
0x23c	           0xfb600	                   movzx eax, byte [rax]	        33	mailsplit.c	FUNCTION_12	IF_4	CALL_4
0x23f	           0xfb6c0	                           movzx eax, al	        33	mailsplit.c	FUNCTION_12	IF_4	CALL_4
0x242	            0x4898	                                    cdqe	        33	mailsplit.c	FUNCTION_12	IF_4	CALL_4
0x244	     0xfb680000000	                   movzx eax, byte [rax]	        33	mailsplit.c	FUNCTION_12	IF_4	CALL_4
0x24b	           0xfb6c0	                           movzx eax, al	        33	mailsplit.c	FUNCTION_12	IF_4	CALL_4
0x24e	          0x83e002	                              and eax, 2	        33	mailsplit.c	FUNCTION_12	IF_4	CALL_4
0x251	            0x85c0	                           test eax, eax	        32	mailsplit.c	FUNCTION_12	IF_4	CALL_3
0x253	            0x7442	                            je 0x40002d7	        32	mailsplit.c	FUNCTION_12	IF_4	CALL_3
0x255	        0x488b45f8	                mov rax, qword [rbp - 8]	        34	mailsplit.c	FUNCTION_12	IF_4	CALL_5
0x259	        0x4883c001	                              add rax, 1	        34	mailsplit.c	FUNCTION_12	IF_4	CALL_5
0x25d	           0xfb600	                   movzx eax, byte [rax]	        34	mailsplit.c	FUNCTION_12	IF_4	CALL_5
0x260	           0xfb6c0	                           movzx eax, al	        34	mailsplit.c	FUNCTION_12	IF_4	CALL_5
0x263	            0x4898	                                    cdqe	        34	mailsplit.c	FUNCTION_12	IF_4	CALL_5
0x265	     0xfb680000000	                   movzx eax, byte [rax]	        34	mailsplit.c	FUNCTION_12	IF_4	CALL_5
0x26c	           0xfb6c0	                           movzx eax, al	        34	mailsplit.c	FUNCTION_12	IF_4	CALL_5
0x26f	          0x83e002	                              and eax, 2	        34	mailsplit.c	FUNCTION_12	IF_4	CALL_5
0x272	            0x85c0	                           test eax, eax	        33	mailsplit.c	FUNCTION_12	IF_4	CALL_4
0x274	            0x7421	                            je 0x40002d7	        33	mailsplit.c	FUNCTION_12	IF_4	CALL_4
0x276	        0x488b45f8	                mov rax, qword [rbp - 8]	        35	mailsplit.c	FUNCTION_12	IF_4	CALL_6
0x27a	        0x4883c002	                              add rax, 2	        35	mailsplit.c	FUNCTION_12	IF_4	CALL_6
0x27e	           0xfb600	                   movzx eax, byte [rax]	        35	mailsplit.c	FUNCTION_12	IF_4	CALL_6
0x281	           0xfb6c0	                           movzx eax, al	        35	mailsplit.c	FUNCTION_12	IF_4	CALL_6
0x284	            0x4898	                                    cdqe	        35	mailsplit.c	FUNCTION_12	IF_4	CALL_6
0x286	     0xfb680000000	                   movzx eax, byte [rax]	        35	mailsplit.c	FUNCTION_12	IF_4	CALL_6
0x28d	           0xfb6c0	                           movzx eax, al	        35	mailsplit.c	FUNCTION_12	IF_4	CALL_6
0x290	          0x83e002	                              and eax, 2	        35	mailsplit.c	FUNCTION_12	IF_4	CALL_6
0x293	            0x85c0	                           test eax, eax	        34	mailsplit.c	FUNCTION_12	IF_4	CALL_5
0x295	            0x7507	                           jne 0x40002de	        34	mailsplit.c	FUNCTION_12	IF_4	CALL_5
0x297	      0xb800000000	                              mov eax, 0	        36	mailsplit.c	FUNCTION_12	IF_4
0x29c	            0xeb2c	                           jmp 0x400030a	        36	mailsplit.c	FUNCTION_12	IF_4
0x29e	        0x488b45f8	                mov rax, qword [rbp - 8]	        39	mailsplit.c	FUNCTION_12	IF_5	CALL_7
0x2a2	        0x4883c003	                              add rax, 3	        39	mailsplit.c	FUNCTION_12	IF_5	CALL_7
0x2a6	      0xba0a000000	                            mov edx, 0xa	        39	mailsplit.c	FUNCTION_12	IF_5	CALL_7
0x2ab	      0xbe00000000	                              mov esi, 0	        39	mailsplit.c	FUNCTION_12	IF_5	CALL_7
0x2b0	          0x4889c7	                            mov rdi, rax	        39	mailsplit.c	FUNCTION_12	IF_5	CALL_7
0x2b3	      0xe800000000	                          call 0x40002f8	        39	mailsplit.c	FUNCTION_12	IF_5	CALL_7
0x2b8	        0x4883f85a	                           cmp rax, 0x5a	        39	mailsplit.c	FUNCTION_12	IF_5	CALL_7
0x2bc	            0x7f07	                            jg 0x4000305	        39	mailsplit.c	FUNCTION_12	IF_5	CALL_7
0x2be	      0xb800000000	                              mov eax, 0	        40	mailsplit.c	FUNCTION_12	IF_5
0x2c3	            0xeb05	                           jmp 0x400030a	        40	mailsplit.c	FUNCTION_12	IF_5
0x2c5	      0xb801000000	                              mov eax, 1	        43	mailsplit.c	FUNCTION_12
0x2ca	              0xc9	                                   leave	        44	mailsplit.c	FUNCTION_12
0x2cb	              0xc3	                                     ret	        44	mailsplit.c	FUNCTION_12
strbuf_addch	ELSE,0:SWITCH,0:functions,0:WHILE,0:DO,0:CALL,2:FOR,0:IF,1	33
0xdb	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_4
0xdc	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_4
0xdf	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_4
0xe3	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_4
0xe7	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_4
0xea	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0xee	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0xf1	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0xf6	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0xf9	            0x7511	                           jne 0x400014c	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0xfb	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_4	CALL_2
0xff	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_4	CALL_2
0x104	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_4	CALL_2
0x107	      0xe800000000	                          call 0x400014c	       228	strbuf.h	FUNCTION_4	CALL_2
0x10c	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x110	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_4
0x114	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x118	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_4
0x11c	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_4
0x120	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x124	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_4
0x128	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_4
0x12b	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_4
0x12e	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_4
0x130	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_4
0x134	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_4
0x138	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_4
0x13c	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_4
0x140	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_4
0x143	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_4
0x146	              0x90	                                     nop	       231	strbuf.h	FUNCTION_4
0x147	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_4
0x148	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_4
maildir_filename_cmp	ELSE,1:SWITCH,0:functions,0:WHILE,1:DO,0:CALL,4:FOR,0:IF,3	86
0x6e8	              0x55	                                push rbp	       151	mailsplit.c	FUNCTION_16
0x6e9	          0x4889e5	                            mov rbp, rsp	       151	mailsplit.c	FUNCTION_16
0x6ec	        0x4883ec20	                           sub rsp, 0x20	       151	mailsplit.c	FUNCTION_16
0x6f0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       151	mailsplit.c	FUNCTION_16
0x6f4	        0x488975e0	             mov qword [rbp - 0x20], rsi	       151	mailsplit.c	FUNCTION_16
0x6f8	      0xe9d0000000	                           jmp 0x400080d	       152	mailsplit.c	FUNCTION_16	WHILE_1
0x6fd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_2
0x701	           0xfb600	                   movzx eax, byte [rax]	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_2
0x704	           0xfb6c0	                           movzx eax, al	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_2
0x707	            0x4898	                                    cdqe	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_2
0x709	     0xfb680000000	                   movzx eax, byte [rax]	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_2
0x710	           0xfb6c0	                           movzx eax, al	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_2
0x713	          0x83e002	                              and eax, 2	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_2
0x716	            0x85c0	                           test eax, eax	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_2
0x718	            0x746f	                            je 0x40007c9	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_2
0x71a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_2
0x71e	           0xfb600	                   movzx eax, byte [rax]	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_2
0x721	           0xfb6c0	                           movzx eax, al	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_2
0x724	            0x4898	                                    cdqe	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_2
0x726	     0xfb680000000	                   movzx eax, byte [rax]	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_2
0x72d	           0xfb6c0	                           movzx eax, al	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_2
0x730	          0x83e002	                              and eax, 2	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_2
0x733	            0x85c0	                           test eax, eax	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_2
0x735	            0x7452	                            je 0x40007c9	       153	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_2
0x737	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       155	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_3
0x73b	        0x488d4de8	                   lea rcx, [rbp - 0x18]	       155	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_3
0x73f	      0xba0a000000	                            mov edx, 0xa	       155	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_3
0x744	          0x4889ce	                            mov rsi, rcx	       155	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_3
0x747	          0x4889c7	                            mov rdi, rax	       155	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_3
0x74a	      0xe800000000	                          call 0x400078f	       155	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_3
0x74f	        0x488945f0	             mov qword [rbp - 0x10], rax	       155	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_3
0x753	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       156	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_4
0x757	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       156	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_4
0x75b	      0xba0a000000	                            mov edx, 0xa	       156	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_4
0x760	          0x4889ce	                            mov rsi, rcx	       156	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_4
0x763	          0x4889c7	                            mov rdi, rax	       156	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_4
0x766	      0xe800000000	                          call 0x40007ab	       156	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_4
0x76b	        0x488945f8	                mov qword [rbp - 8], rax	       156	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	CALL_4
0x76f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       157	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	IF_2
0x773	        0x483b45f8	                cmp rax, qword [rbp - 8]	       157	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	IF_2
0x777	            0x7454	                            je 0x400080d	       157	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	IF_2
0x779	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       158	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	IF_2
0x77d	            0x89c2	                            mov edx, eax	       158	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	IF_2
0x77f	        0x488b45f8	                mov rax, qword [rbp - 8]	       158	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	IF_2
0x783	            0x29c2	                            sub edx, eax	       158	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	IF_2
0x785	            0x89d0	                            mov eax, edx	       158	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	IF_2
0x787	            0xeb76	                           jmp 0x400083f	       158	mailsplit.c	FUNCTION_16	WHILE_1	IF_1	IF_2
0x789	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       162	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1	IF_3
0x78d	           0xfb610	                   movzx edx, byte [rax]	       162	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1	IF_3
0x790	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       162	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1	IF_3
0x794	           0xfb600	                   movzx eax, byte [rax]	       162	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1	IF_3
0x797	            0x38c2	                              cmp dl, al	       162	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1	IF_3
0x799	            0x741a	                            je 0x40007f5	       162	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1	IF_3
0x79b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       163	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1	IF_3
0x79f	           0xfb600	                   movzx eax, byte [rax]	       163	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1	IF_3
0x7a2	           0xfb6d0	                           movzx edx, al	       163	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1	IF_3
0x7a5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       163	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1	IF_3
0x7a9	           0xfb600	                   movzx eax, byte [rax]	       163	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1	IF_3
0x7ac	           0xfb6c0	                           movzx eax, al	       163	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1	IF_3
0x7af	            0x29c2	                            sub edx, eax	       163	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1	IF_3
0x7b1	            0x89d0	                            mov eax, edx	       163	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1	IF_3
0x7b3	            0xeb4a	                           jmp 0x400083f	       163	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1	IF_3
0x7b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       164	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1
0x7b9	        0x4883c001	                              add rax, 1	       164	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1
0x7bd	        0x488945e8	             mov qword [rbp - 0x18], rax	       164	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1
0x7c1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       165	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1
0x7c5	        0x4883c001	                              add rax, 1	       165	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1
0x7c9	        0x488945e0	             mov qword [rbp - 0x20], rax	       165	mailsplit.c	FUNCTION_16	WHILE_1	ELSE_1
0x7cd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       152	mailsplit.c	FUNCTION_16	WHILE_1
0x7d1	           0xfb600	                   movzx eax, byte [rax]	       152	mailsplit.c	FUNCTION_16	WHILE_1
0x7d4	            0x84c0	                             test al, al	       152	mailsplit.c	FUNCTION_16	WHILE_1
0x7d6	            0x740f	                            je 0x4000827	       152	mailsplit.c	FUNCTION_16	WHILE_1
0x7d8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       152	mailsplit.c	FUNCTION_16	WHILE_1
0x7dc	           0xfb600	                   movzx eax, byte [rax]	       152	mailsplit.c	FUNCTION_16	WHILE_1
0x7df	            0x84c0	                             test al, al	       152	mailsplit.c	FUNCTION_16	WHILE_1
0x7e1	     0xf8516ffffff	                           jne 0x400073d	       152	mailsplit.c	FUNCTION_16	WHILE_1
0x7e7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       168	mailsplit.c	FUNCTION_16
0x7eb	           0xfb600	                   movzx eax, byte [rax]	       168	mailsplit.c	FUNCTION_16
0x7ee	           0xfb6d0	                           movzx edx, al	       168	mailsplit.c	FUNCTION_16
0x7f1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       168	mailsplit.c	FUNCTION_16
0x7f5	           0xfb600	                   movzx eax, byte [rax]	       168	mailsplit.c	FUNCTION_16
0x7f8	           0xfb6c0	                           movzx eax, al	       168	mailsplit.c	FUNCTION_16
0x7fb	            0x29c2	                            sub edx, eax	       168	mailsplit.c	FUNCTION_16
0x7fd	            0x89d0	                            mov eax, edx	       168	mailsplit.c	FUNCTION_16
0x7ff	              0xc9	                                   leave	       169	mailsplit.c	FUNCTION_16
0x800	              0xc3	                                     ret	       169	mailsplit.c	FUNCTION_16
split_mbox	ELSE,1:SWITCH,0:functions,0:WHILE,1:DO,1:CALL,15:FOR,0:IF,6	121
0xa01	              0x55	                                push rbp	       221	mailsplit.c	FUNCTION_18
0xa02	          0x4889e5	                            mov rbp, rsp	       221	mailsplit.c	FUNCTION_18
0xa05	        0x4883ec40	                           sub rsp, 0x40	       221	mailsplit.c	FUNCTION_18
0xa09	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       221	mailsplit.c	FUNCTION_18
0xa0d	        0x488975d0	             mov qword [rbp - 0x30], rsi	       221	mailsplit.c	FUNCTION_18
0xa11	          0x8955cc	             mov dword [rbp - 0x34], edx	       221	mailsplit.c	FUNCTION_18
0xa14	          0x894dc8	             mov dword [rbp - 0x38], ecx	       221	mailsplit.c	FUNCTION_18
0xa17	        0x448945c4	             mov dword [rbp - 0x3c], r8d	       221	mailsplit.c	FUNCTION_18
0xa1b	    0xc745e4ffffff	     mov dword [rbp - 0x1c], 0xffffffff 	       222	mailsplit.c	FUNCTION_18
0xa22	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       225	mailsplit.c	FUNCTION_18	CALL_2
0xa26	      0xbe00000000	                              mov esi, 0	       225	mailsplit.c	FUNCTION_18	CALL_2
0xa2b	          0x4889c7	                            mov rdi, rax	       225	mailsplit.c	FUNCTION_18	CALL_2
0xa2e	      0xe800000000	                          call 0x4000a73	       225	mailsplit.c	FUNCTION_18	CALL_2
0xa33	            0x85c0	                           test eax, eax	       225	mailsplit.c	FUNCTION_18	CALL_2
0xa35	            0x7413	                            je 0x4000a8a	       225	mailsplit.c	FUNCTION_18	CALL_2
0xa37	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       225	mailsplit.c	FUNCTION_18	CALL_2
0xa3b	      0xbe00000000	                              mov esi, 0	       225	mailsplit.c	FUNCTION_18	CALL_2
0xa40	          0x4889c7	                            mov rdi, rax	       225	mailsplit.c	FUNCTION_18	CALL_2
0xa43	      0xe800000000	                          call 0x4000a88	       225	mailsplit.c	FUNCTION_18	CALL_2
0xa48	            0xeb07	                           jmp 0x4000a91	       225	mailsplit.c	FUNCTION_18	CALL_2
0xa4a	    0x488b05000000	            mov rax, qword [0x04000a91] 	       225	mailsplit.c	FUNCTION_18	CALL_2
0xa51	        0x488945f0	             mov qword [rbp - 0x10], rax	       225	mailsplit.c	FUNCTION_18	CALL_2
0xa55	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       226	mailsplit.c	FUNCTION_18
0xa5c	      0x48837df000	               cmp qword [rbp - 0x10], 0	       228	mailsplit.c	FUNCTION_18	IF_1
0xa61	            0x7520	                           jne 0x4000ac3	       228	mailsplit.c	FUNCTION_18	IF_1
0xa63	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       229	mailsplit.c	FUNCTION_18	IF_1	CALL_3
0xa67	          0x4889c6	                            mov rsi, rax	       229	mailsplit.c	FUNCTION_18	IF_1	CALL_3
0xa6a	      0xbf00000000	                              mov edi, 0	       229	mailsplit.c	FUNCTION_18	IF_1	CALL_3
0xa6f	      0xb800000000	                              mov eax, 0	       229	mailsplit.c	FUNCTION_18	IF_1	CALL_3
0xa74	      0xe800000000	                          call 0x4000ab9	       229	mailsplit.c	FUNCTION_18	IF_1	CALL_3
0xa79	      0xe882f5ffff	                    call sym.const_error	       229	mailsplit.c	FUNCTION_18	IF_1	CALL_3
0xa7e	      0xe949010000	                           jmp 0x4000c0c	       230	mailsplit.c	FUNCTION_18	IF_1
0xa83	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       234	mailsplit.c	FUNCTION_18	DO_1	CALL_4
0xa87	          0x4889c7	                            mov rdi, rax	       234	mailsplit.c	FUNCTION_18	DO_1	CALL_4
0xa8a	      0xe800000000	                          call 0x4000acf	       234	mailsplit.c	FUNCTION_18	DO_1	CALL_4
0xa8f	          0x8945ec	             mov dword [rbp - 0x14], eax	       234	mailsplit.c	FUNCTION_18	DO_1	CALL_4
0xa92	        0x837decff	cmp dword [rbp - 0x14], 0xffffffffffffffff	       235	mailsplit.c	FUNCTION_18	DO_1	IF_2
0xa96	            0x754f	                           jne 0x4000b27	       235	mailsplit.c	FUNCTION_18	DO_1	IF_2
0xa98	    0x488b05000000	            mov rax, qword [0x04000adf] 	       236	mailsplit.c	FUNCTION_18	DO_1	IF_2	IF_3
0xa9f	        0x483945f0	            cmp qword [rbp - 0x10], rax 	       236	mailsplit.c	FUNCTION_18	DO_1	IF_2	IF_3
0xaa3	            0x750b	                           jne 0x4000af0	       236	mailsplit.c	FUNCTION_18	DO_1	IF_2	IF_3
0xaa5	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       238	mailsplit.c	FUNCTION_18	DO_1	IF_2	IF_3
0xaa8	          0x8945e4	             mov dword [rbp - 0x1c], eax	       238	mailsplit.c	FUNCTION_18	DO_1	IF_2	IF_3
0xaab	      0xe91c010000	                           jmp 0x4000c0c	       243	mailsplit.c	FUNCTION_18	DO_1	IF_2
0xab0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       240	mailsplit.c	FUNCTION_18	DO_1	IF_2	ELSE_1	CALL_5
0xab4	          0x4889c7	                            mov rdi, rax	       240	mailsplit.c	FUNCTION_18	DO_1	IF_2	ELSE_1	CALL_5
0xab7	      0xe800000000	                          call 0x4000afc	       240	mailsplit.c	FUNCTION_18	DO_1	IF_2	ELSE_1	CALL_5
0xabc	      0xbf00000000	                              mov edi, 0	       241	mailsplit.c	FUNCTION_18	DO_1	IF_2	ELSE_1	CALL_7
0xac1	      0xe883f6ffff	                               call sym.	       241	mailsplit.c	FUNCTION_18	DO_1	IF_2	ELSE_1	CALL_7
0xac6	          0x4889c2	                            mov rdx, rax	       241	mailsplit.c	FUNCTION_18	DO_1	IF_2	ELSE_1	CALL_7
0xac9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       241	mailsplit.c	FUNCTION_18	DO_1	IF_2	ELSE_1	CALL_7
0xacd	          0x4889c6	                            mov rsi, rax	       241	mailsplit.c	FUNCTION_18	DO_1	IF_2	ELSE_1	CALL_7
0xad0	          0x4889d7	                            mov rdi, rdx	       241	mailsplit.c	FUNCTION_18	DO_1	IF_2	ELSE_1	CALL_7
0xad3	      0xb800000000	                              mov eax, 0	       241	mailsplit.c	FUNCTION_18	DO_1	IF_2	ELSE_1	CALL_7
0xad8	      0xe800000000	                          call 0x4000b1d	       241	mailsplit.c	FUNCTION_18	DO_1	IF_2	ELSE_1	CALL_7
0xadd	      0xe81ef5ffff	                    call sym.const_error	       241	mailsplit.c	FUNCTION_18	DO_1	IF_2	ELSE_1	CALL_7
0xae2	      0xe9e5000000	                           jmp 0x4000c0c	       243	mailsplit.c	FUNCTION_18	DO_1	IF_2
0xae7	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       245	mailsplit.c	FUNCTION_18	CALL_8
0xaea	           0xfb6c0	                           movzx eax, al	       245	mailsplit.c	FUNCTION_18	CALL_8
0xaed	            0x4898	                                    cdqe	       245	mailsplit.c	FUNCTION_18	CALL_8
0xaef	     0xfb680000000	                   movzx eax, byte [rax]	       245	mailsplit.c	FUNCTION_18	CALL_8
0xaf6	           0xfb6c0	                           movzx eax, al	       245	mailsplit.c	FUNCTION_18	CALL_8
0xaf9	          0x83e001	                              and eax, 1	       245	mailsplit.c	FUNCTION_18	CALL_8
0xafc	            0x85c0	                           test eax, eax	       245	mailsplit.c	FUNCTION_18	CALL_8
0xafe	            0x7583	                           jne 0x4000ac3	       245	mailsplit.c	FUNCTION_18	CALL_8
0xb00	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       246	mailsplit.c	FUNCTION_18	CALL_9
0xb04	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       246	mailsplit.c	FUNCTION_18	CALL_9
0xb07	          0x4889d6	                            mov rsi, rdx	       246	mailsplit.c	FUNCTION_18	CALL_9
0xb0a	            0x89c7	                            mov edi, eax	       246	mailsplit.c	FUNCTION_18	CALL_9
0xb0c	      0xe800000000	                          call 0x4000b51	       246	mailsplit.c	FUNCTION_18	CALL_9
0xb11	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       248	mailsplit.c	FUNCTION_18	IF_4	CALL_10
0xb15	      0xba0a000000	                            mov edx, 0xa	       248	mailsplit.c	FUNCTION_18	IF_4	CALL_10
0xb1a	          0x4889c6	                            mov rsi, rax	       248	mailsplit.c	FUNCTION_18	IF_4	CALL_10
0xb1d	      0xbf00000000	                              mov edi, 0	       248	mailsplit.c	FUNCTION_18	IF_4	CALL_10
0xb22	      0xe800000000	                          call 0x4000b67	       248	mailsplit.c	FUNCTION_18	IF_4	CALL_10
0xb27	            0x85c0	                           test eax, eax	       248	mailsplit.c	FUNCTION_18	IF_4	CALL_10
0xb29	            0x747c	                            je 0x4000be7	       248	mailsplit.c	FUNCTION_18	IF_4	CALL_10
0xb2b	    0x488b05000000	            mov rax, qword [0x04000b72] 	       250	mailsplit.c	FUNCTION_18	IF_4	IF_5
0xb32	        0x483945f0	            cmp qword [rbp - 0x10], rax 	       250	mailsplit.c	FUNCTION_18	IF_4	IF_5
0xb36	            0x741d	                            je 0x4000b95	       250	mailsplit.c	FUNCTION_18	IF_4	IF_5
0xb38	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       251	mailsplit.c	FUNCTION_18	IF_4	IF_5	CALL_11
0xb3c	          0x4889c6	                            mov rsi, rax	       251	mailsplit.c	FUNCTION_18	IF_4	IF_5	CALL_11
0xb3f	      0xbf00000000	                              mov edi, 0	       251	mailsplit.c	FUNCTION_18	IF_4	IF_5	CALL_11
0xb44	      0xb800000000	                              mov eax, 0	       251	mailsplit.c	FUNCTION_18	IF_4	IF_5	CALL_11
0xb49	      0xe800000000	                          call 0x4000b8e	       251	mailsplit.c	FUNCTION_18	IF_4	IF_5	CALL_11
0xb4e	      0xe8adf4ffff	                    call sym.const_error	       251	mailsplit.c	FUNCTION_18	IF_4	IF_5	CALL_11
0xb53	            0xeb77	                           jmp 0x4000c0c	       252	mailsplit.c	FUNCTION_18	IF_4	IF_5
0xb55	    0xc745e8010000	               mov dword [rbp - 0x18], 1	       254	mailsplit.c	FUNCTION_18	IF_4
0xb5c	            0xeb49	                           jmp 0x4000be7	       257	mailsplit.c	FUNCTION_18	WHILE_1
0xb5e	        0x8345c401	               add dword [rbp - 0x3c], 1	       258	mailsplit.c	FUNCTION_18	WHILE_1	CALL_12
0xb62	          0x8b4dc4	             mov ecx, dword [rbp - 0x3c]	       258	mailsplit.c	FUNCTION_18	WHILE_1	CALL_12
0xb65	          0x8b55c8	             mov edx, dword [rbp - 0x38]	       258	mailsplit.c	FUNCTION_18	WHILE_1	CALL_12
0xb68	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       258	mailsplit.c	FUNCTION_18	WHILE_1	CALL_12
0xb6c	          0x4889c6	                            mov rsi, rax	       258	mailsplit.c	FUNCTION_18	WHILE_1	CALL_12
0xb6f	      0xbf00000000	                              mov edi, 0	       258	mailsplit.c	FUNCTION_18	WHILE_1	CALL_12
0xb74	      0xb800000000	                              mov eax, 0	       258	mailsplit.c	FUNCTION_18	WHILE_1	CALL_12
0xb79	      0xe800000000	                          call 0x4000bbe	       258	mailsplit.c	FUNCTION_18	WHILE_1	CALL_12
0xb7e	        0x488945f8	                mov qword [rbp - 8], rax	       258	mailsplit.c	FUNCTION_18	WHILE_1	CALL_12
0xb82	          0x8b55cc	             mov edx, dword [rbp - 0x34]	       259	mailsplit.c	FUNCTION_18	WHILE_1	CALL_13
0xb85	        0x488b4df8	                mov rcx, qword [rbp - 8]	       259	mailsplit.c	FUNCTION_18	WHILE_1	CALL_13
0xb89	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       259	mailsplit.c	FUNCTION_18	WHILE_1	CALL_13
0xb8d	          0x4889ce	                            mov rsi, rcx	       259	mailsplit.c	FUNCTION_18	WHILE_1	CALL_13
0xb90	          0x4889c7	                            mov rdi, rax	       259	mailsplit.c	FUNCTION_18	WHILE_1	CALL_13
0xb93	      0xe8acf7ffff	                      call sym.split_one	       259	mailsplit.c	FUNCTION_18	WHILE_1	CALL_13
0xb98	          0x8945e8	             mov dword [rbp - 0x18], eax	       259	mailsplit.c	FUNCTION_18	WHILE_1	CALL_13
0xb9b	        0x488b45f8	                mov rax, qword [rbp - 8]	       260	mailsplit.c	FUNCTION_18	WHILE_1	CALL_14
0xb9f	          0x4889c7	                            mov rdi, rax	       260	mailsplit.c	FUNCTION_18	WHILE_1	CALL_14
0xba2	      0xe800000000	                          call 0x4000be7	       260	mailsplit.c	FUNCTION_18	WHILE_1	CALL_14
0xba7	        0x837de800	               cmp dword [rbp - 0x18], 0	       257	mailsplit.c	FUNCTION_18	WHILE_1
0xbab	            0x74b1	                            je 0x4000b9e	       257	mailsplit.c	FUNCTION_18	WHILE_1
0xbad	    0x488b05000000	            mov rax, qword [0x04000bf4] 	       263	mailsplit.c	FUNCTION_18	IF_6
0xbb4	        0x483945f0	            cmp qword [rbp - 0x10], rax 	       263	mailsplit.c	FUNCTION_18	IF_6
0xbb8	            0x740c	                            je 0x4000c06	       263	mailsplit.c	FUNCTION_18	IF_6
0xbba	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       264	mailsplit.c	FUNCTION_18	CALL_15
0xbbe	          0x4889c7	                            mov rdi, rax	       264	mailsplit.c	FUNCTION_18	CALL_15
0xbc1	      0xe800000000	                          call 0x4000c06	       264	mailsplit.c	FUNCTION_18	CALL_15
0xbc6	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       266	mailsplit.c	FUNCTION_18
0xbc9	          0x8945e4	             mov dword [rbp - 0x1c], eax	       266	mailsplit.c	FUNCTION_18
0xbcc	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       268	mailsplit.c	FUNCTION_18
0xbcf	              0xc9	                                   leave	       269	mailsplit.c	FUNCTION_18
0xbd0	              0xc3	                                     ret	       269	mailsplit.c	FUNCTION_18
cmd_mailsplit	ELSE,10:SWITCH,1:functions,0:WHILE,1:DO,0:CALL,17:FOR,1:IF,17	271
0xbd1	              0x55	                                push rbp	       272	mailsplit.c	FUNCTION_19
0xbd2	          0x4889e5	                            mov rbp, rsp	       272	mailsplit.c	FUNCTION_19
0xbd5	    0x4881ec000100	                          sub rsp, 0x100	       272	mailsplit.c	FUNCTION_19
0xbdc	    0x89bd1cffffff	             mov dword [rbp - 0xe4], edi	       272	mailsplit.c	FUNCTION_19
0xbe2	    0x4889b510ffff	             mov qword [rbp - 0xf0], rsi	       272	mailsplit.c	FUNCTION_19
0xbe9	    0x48899508ffff	             mov qword [rbp - 0xf8], rdx	       272	mailsplit.c	FUNCTION_19
0xbf0	    0x64488b042528	                mov rax, qword fs:[0x28]	       272	mailsplit.c	FUNCTION_19
0xbf9	        0x488945f8	                mov qword [rbp - 8], rax	       272	mailsplit.c	FUNCTION_19
0xbfd	            0x31c0	                            xor eax, eax	       272	mailsplit.c	FUNCTION_19
0xbff	    0xc7852cffffff	               mov dword [rbp - 0xd4], 0	       273	mailsplit.c	FUNCTION_19
0xc09	    0xc78530ffffff	               mov dword [rbp - 0xd0], 4	       273	mailsplit.c	FUNCTION_19
0xc13	    0xc78534ffffff	               mov dword [rbp - 0xcc], 0	       273	mailsplit.c	FUNCTION_19
0xc1d	    0xc78538ffffff	               mov dword [rbp - 0xc8], 0	       274	mailsplit.c	FUNCTION_19
0xc27	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	       275	mailsplit.c	FUNCTION_19
0xc32	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       279	mailsplit.c	FUNCTION_19	FOR_1
0xc39	        0x4883c008	                              add rax, 8	       279	mailsplit.c	FUNCTION_19	FOR_1
0xc3d	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       279	mailsplit.c	FUNCTION_19	FOR_1
0xc44	      0xe9d4010000	                           jmp 0x4000e5d	       279	mailsplit.c	FUNCTION_19	FOR_1
0xc49	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       280	mailsplit.c	FUNCTION_19	FOR_1
0xc50	          0x488b00	                    mov rax, qword [rax]	       280	mailsplit.c	FUNCTION_19	FOR_1
0xc53	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	       280	mailsplit.c	FUNCTION_19	FOR_1
0xc5a	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       282	mailsplit.c	FUNCTION_19	FOR_1	IF_1
0xc61	           0xfb600	                   movzx eax, byte [rax]	       282	mailsplit.c	FUNCTION_19	FOR_1	IF_1
0xc64	            0x3c2d	                            cmp al, 0x2d	       282	mailsplit.c	FUNCTION_19	FOR_1	IF_1
0xc66	     0xf85c6010000	                           jne 0x4000e72	       282	mailsplit.c	FUNCTION_19	FOR_1	IF_1
0xc6c	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       285	mailsplit.c	FUNCTION_19	FOR_1	IF_2
0xc73	        0x4883c001	                              add rax, 1	       285	mailsplit.c	FUNCTION_19	FOR_1	IF_2
0xc77	           0xfb600	                   movzx eax, byte [rax]	       285	mailsplit.c	FUNCTION_19	FOR_1	IF_2
0xc7a	            0x3c64	                            cmp al, 0x64	       285	mailsplit.c	FUNCTION_19	FOR_1	IF_2
0xc7c	            0x7543	                           jne 0x4000d01	       285	mailsplit.c	FUNCTION_19	FOR_1	IF_2
0xc7e	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       286	mailsplit.c	FUNCTION_19	FOR_1	IF_2	CALL_1
0xc85	        0x4883c002	                              add rax, 2	       286	mailsplit.c	FUNCTION_19	FOR_1	IF_2	CALL_1
0xc89	      0xba0a000000	                            mov edx, 0xa	       286	mailsplit.c	FUNCTION_19	FOR_1	IF_2	CALL_1
0xc8e	      0xbe00000000	                              mov esi, 0	       286	mailsplit.c	FUNCTION_19	FOR_1	IF_2	CALL_1
0xc93	          0x4889c7	                            mov rdi, rax	       286	mailsplit.c	FUNCTION_19	FOR_1	IF_2	CALL_1
0xc96	      0xe800000000	                          call 0x4000cdb	       286	mailsplit.c	FUNCTION_19	FOR_1	IF_2	CALL_1
0xc9b	    0x898530ffffff	             mov dword [rbp - 0xd0], eax	       286	mailsplit.c	FUNCTION_19	FOR_1	IF_2	CALL_1
0xca1	    0x83bd30ffffff	               cmp dword [rbp - 0xd0], 2	       287	mailsplit.c	FUNCTION_19	FOR_1	IF_2	IF_3
0xca8	            0x7e0d	                           jle 0x4000cf7	       287	mailsplit.c	FUNCTION_19	FOR_1	IF_2	IF_3
0xcaa	    0x83bd30ffffff	               cmp dword [rbp - 0xd0], 9	       287	mailsplit.c	FUNCTION_19	FOR_1	IF_2	IF_3
0xcb1	     0xf8e5d010000	                           jle 0x4000e54	       287	mailsplit.c	FUNCTION_19	FOR_1	IF_2	IF_3
0xcb7	      0xbf00000000	                              mov edi, 0	       288	mailsplit.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0xcbc	      0xe800000000	                          call 0x4000d01	       288	mailsplit.c	FUNCTION_19	FOR_1	IF_2	CALL_2
0xcc1	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       290	mailsplit.c	FUNCTION_19	FOR_1	ELSE_1	IF_4
0xcc8	        0x4883c001	                              add rax, 1	       290	mailsplit.c	FUNCTION_19	FOR_1	ELSE_1	IF_4
0xccc	           0xfb600	                   movzx eax, byte [rax]	       290	mailsplit.c	FUNCTION_19	FOR_1	ELSE_1	IF_4
0xccf	            0x3c66	                            cmp al, 0x66	       290	mailsplit.c	FUNCTION_19	FOR_1	ELSE_1	IF_4
0xcd1	            0x7528	                           jne 0x4000d3b	       290	mailsplit.c	FUNCTION_19	FOR_1	ELSE_1	IF_4
0xcd3	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       291	mailsplit.c	FUNCTION_19	FOR_1	ELSE_1	IF_4	CALL_3
0xcda	        0x4883c002	                              add rax, 2	       291	mailsplit.c	FUNCTION_19	FOR_1	ELSE_1	IF_4	CALL_3
0xcde	      0xba0a000000	                            mov edx, 0xa	       291	mailsplit.c	FUNCTION_19	FOR_1	ELSE_1	IF_4	CALL_3
0xce3	      0xbe00000000	                              mov esi, 0	       291	mailsplit.c	FUNCTION_19	FOR_1	ELSE_1	IF_4	CALL_3
0xce8	          0x4889c7	                            mov rdi, rax	       291	mailsplit.c	FUNCTION_19	FOR_1	ELSE_1	IF_4	CALL_3
0xceb	      0xe800000000	                          call 0x4000d30	       291	mailsplit.c	FUNCTION_19	FOR_1	ELSE_1	IF_4	CALL_3
0xcf0	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	       291	mailsplit.c	FUNCTION_19	FOR_1	ELSE_1	IF_4	CALL_3
0xcf6	      0xe91a010000	                           jmp 0x4000e55	       291	mailsplit.c	FUNCTION_19	FOR_1	ELSE_1	IF_4	CALL_3
0xcfb	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       292	mailsplit.c	FUNCTION_19	FOR_1	ELSE_2	IF_5
0xd02	        0x4883c001	                              add rax, 1	       292	mailsplit.c	FUNCTION_19	FOR_1	ELSE_2	IF_5
0xd06	           0xfb600	                   movzx eax, byte [rax]	       292	mailsplit.c	FUNCTION_19	FOR_1	ELSE_2	IF_5
0xd09	            0x3c68	                            cmp al, 0x68	       292	mailsplit.c	FUNCTION_19	FOR_1	ELSE_2	IF_5
0xd0b	            0x750a	                           jne 0x4000d57	       292	mailsplit.c	FUNCTION_19	FOR_1	ELSE_2	IF_5
0xd0d	      0xbf00000000	                              mov edi, 0	       293	mailsplit.c	FUNCTION_19	FOR_1	ELSE_2	IF_5	CALL_4
0xd12	      0xe800000000	                          call 0x4000d57	       293	mailsplit.c	FUNCTION_19	FOR_1	ELSE_2	IF_5	CALL_4
0xd17	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       294	mailsplit.c	FUNCTION_19	FOR_1	ELSE_3	IF_6
0xd1e	        0x4883c001	                              add rax, 1	       294	mailsplit.c	FUNCTION_19	FOR_1	ELSE_3	IF_6
0xd22	           0xfb600	                   movzx eax, byte [rax]	       294	mailsplit.c	FUNCTION_19	FOR_1	ELSE_3	IF_6
0xd25	            0x3c62	                            cmp al, 0x62	       294	mailsplit.c	FUNCTION_19	FOR_1	ELSE_3	IF_6
0xd27	            0x7521	                           jne 0x4000d8a	       294	mailsplit.c	FUNCTION_19	FOR_1	ELSE_3	IF_6
0xd29	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       294	mailsplit.c	FUNCTION_19	FOR_1	ELSE_3	IF_6
0xd30	        0x4883c002	                              add rax, 2	       294	mailsplit.c	FUNCTION_19	FOR_1	ELSE_3	IF_6
0xd34	           0xfb600	                   movzx eax, byte [rax]	       294	mailsplit.c	FUNCTION_19	FOR_1	ELSE_3	IF_6
0xd37	            0x84c0	                             test al, al	       294	mailsplit.c	FUNCTION_19	FOR_1	ELSE_3	IF_6
0xd39	            0x750f	                           jne 0x4000d8a	       294	mailsplit.c	FUNCTION_19	FOR_1	ELSE_3	IF_6
0xd3b	    0xc78538ffffff	               mov dword [rbp - 0xc8], 1	       295	mailsplit.c	FUNCTION_19	FOR_1	ELSE_3	IF_6
0xd45	      0xe9cb000000	                           jmp 0x4000e55	       295	mailsplit.c	FUNCTION_19	FOR_1	ELSE_3	IF_6
0xd4a	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       296	mailsplit.c	FUNCTION_19	FOR_1	ELSE_4	IF_7	CALL_5
0xd51	      0xbe00000000	                              mov esi, 0	       296	mailsplit.c	FUNCTION_19	FOR_1	ELSE_4	IF_7	CALL_5
0xd56	          0x4889c7	                            mov rdi, rax	       296	mailsplit.c	FUNCTION_19	FOR_1	ELSE_4	IF_7	CALL_5
0xd59	      0xe800000000	                          call 0x4000d9e	       296	mailsplit.c	FUNCTION_19	FOR_1	ELSE_4	IF_7	CALL_5
0xd5e	            0x85c0	                           test eax, eax	       296	mailsplit.c	FUNCTION_19	FOR_1	ELSE_4	IF_7	CALL_5
0xd60	            0x750f	                           jne 0x4000db1	       296	mailsplit.c	FUNCTION_19	FOR_1	ELSE_4	IF_7	CALL_5
0xd62	    0xc70500000000	               mov dword [0x04000dac], 1	       297	mailsplit.c	FUNCTION_19	FOR_1	ELSE_4	IF_7
0xd6c	      0xe9a4000000	                           jmp 0x4000e55	       297	mailsplit.c	FUNCTION_19	FOR_1	ELSE_4	IF_7
0xd71	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       298	mailsplit.c	FUNCTION_19	FOR_1	ELSE_5	IF_8
0xd78	        0x4883c001	                              add rax, 1	       298	mailsplit.c	FUNCTION_19	FOR_1	ELSE_5	IF_8
0xd7c	           0xfb600	                   movzx eax, byte [rax]	       298	mailsplit.c	FUNCTION_19	FOR_1	ELSE_5	IF_8
0xd7f	            0x3c6f	                            cmp al, 0x6f	       298	mailsplit.c	FUNCTION_19	FOR_1	ELSE_5	IF_8
0xd81	            0x7526	                           jne 0x4000de9	       298	mailsplit.c	FUNCTION_19	FOR_1	ELSE_5	IF_8
0xd83	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       298	mailsplit.c	FUNCTION_19	FOR_1	ELSE_5	IF_8
0xd8a	        0x4883c002	                              add rax, 2	       298	mailsplit.c	FUNCTION_19	FOR_1	ELSE_5	IF_8
0xd8e	           0xfb600	                   movzx eax, byte [rax]	       298	mailsplit.c	FUNCTION_19	FOR_1	ELSE_5	IF_8
0xd91	            0x84c0	                             test al, al	       298	mailsplit.c	FUNCTION_19	FOR_1	ELSE_5	IF_8
0xd93	            0x7414	                            je 0x4000de9	       298	mailsplit.c	FUNCTION_19	FOR_1	ELSE_5	IF_8
0xd95	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       299	mailsplit.c	FUNCTION_19	FOR_1	ELSE_5	IF_8
0xd9c	        0x4883c002	                              add rax, 2	       299	mailsplit.c	FUNCTION_19	FOR_1	ELSE_5	IF_8
0xda0	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       299	mailsplit.c	FUNCTION_19	FOR_1	ELSE_5	IF_8
0xda7	            0xeb6c	                           jmp 0x4000e55	       299	mailsplit.c	FUNCTION_19	FOR_1	ELSE_5	IF_8
0xda9	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       300	mailsplit.c	FUNCTION_19	FOR_1	ELSE_6	IF_9	CALL_6
0xdb0	      0xbe00000000	                              mov esi, 0	       300	mailsplit.c	FUNCTION_19	FOR_1	ELSE_6	IF_9	CALL_6
0xdb5	          0x4889c7	                            mov rdi, rax	       300	mailsplit.c	FUNCTION_19	FOR_1	ELSE_6	IF_9	CALL_6
0xdb8	      0xe800000000	                          call 0x4000dfd	       300	mailsplit.c	FUNCTION_19	FOR_1	ELSE_6	IF_9	CALL_6
0xdbd	            0x85c0	                           test eax, eax	       300	mailsplit.c	FUNCTION_19	FOR_1	ELSE_6	IF_9	CALL_6
0xdbf	            0x750c	                           jne 0x4000e0d	       300	mailsplit.c	FUNCTION_19	FOR_1	ELSE_6	IF_9	CALL_6
0xdc1	    0xc70500000000	               mov dword [0x04000e0b], 1	       301	mailsplit.c	FUNCTION_19	FOR_1	ELSE_6	IF_9
0xdcb	            0xeb48	                           jmp 0x4000e55	       301	mailsplit.c	FUNCTION_19	FOR_1	ELSE_6	IF_9
0xdcd	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       302	mailsplit.c	FUNCTION_19	FOR_1	ELSE_7	IF_10
0xdd4	        0x4883c001	                              add rax, 1	       302	mailsplit.c	FUNCTION_19	FOR_1	ELSE_7	IF_10
0xdd8	           0xfb600	                   movzx eax, byte [rax]	       302	mailsplit.c	FUNCTION_19	FOR_1	ELSE_7	IF_10
0xddb	            0x3c2d	                            cmp al, 0x2d	       302	mailsplit.c	FUNCTION_19	FOR_1	ELSE_7	IF_10
0xddd	            0x751c	                           jne 0x4000e3b	       302	mailsplit.c	FUNCTION_19	FOR_1	ELSE_7	IF_10
0xddf	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       302	mailsplit.c	FUNCTION_19	FOR_1	ELSE_7	IF_10
0xde6	        0x4883c002	                              add rax, 2	       302	mailsplit.c	FUNCTION_19	FOR_1	ELSE_7	IF_10
0xdea	           0xfb600	                   movzx eax, byte [rax]	       302	mailsplit.c	FUNCTION_19	FOR_1	ELSE_7	IF_10
0xded	            0x84c0	                             test al, al	       302	mailsplit.c	FUNCTION_19	FOR_1	ELSE_7	IF_10
0xdef	            0x750a	                           jne 0x4000e3b	       302	mailsplit.c	FUNCTION_19	FOR_1	ELSE_7	IF_10
0xdf1	    0x48838548ffff	               add qword [rbp - 0xb8], 8	       303	mailsplit.c	FUNCTION_19	FOR_1	ELSE_7	IF_10
0xdf9	            0xeb38	                           jmp 0x4000e73	       304	mailsplit.c	FUNCTION_19	FOR_1	ELSE_7	IF_10
0xdfb	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       306	mailsplit.c	FUNCTION_19	FOR_1	ELSE_8	CALL_7
0xe02	          0x4889c6	                            mov rsi, rax	       306	mailsplit.c	FUNCTION_19	FOR_1	ELSE_8	CALL_7
0xe05	      0xbf00000000	                              mov edi, 0	       306	mailsplit.c	FUNCTION_19	FOR_1	ELSE_8	CALL_7
0xe0a	      0xb800000000	                              mov eax, 0	       306	mailsplit.c	FUNCTION_19	FOR_1	ELSE_8	CALL_7
0xe0f	      0xe800000000	                          call 0x4000e54	       306	mailsplit.c	FUNCTION_19	FOR_1	ELSE_8	CALL_7
0xe14	              0x90	                                     nop	       289	mailsplit.c	FUNCTION_19	FOR_1	IF_2
0xe15	    0x48838548ffff	               add qword [rbp - 0xb8], 8	       279	mailsplit.c	FUNCTION_19	FOR_1
0xe1d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       279	mailsplit.c	FUNCTION_19	FOR_1
0xe24	          0x488b00	                    mov rax, qword [rax]	       279	mailsplit.c	FUNCTION_19	FOR_1
0xe27	          0x4885c0	                           test rax, rax	       279	mailsplit.c	FUNCTION_19	FOR_1
0xe2a	     0xf8519feffff	                           jne 0x4000c89	       279	mailsplit.c	FUNCTION_19	FOR_1
0xe30	            0xeb01	                           jmp 0x4000e73	       279	mailsplit.c	FUNCTION_19	FOR_1
0xe32	              0x90	                                     nop	       283	mailsplit.c	FUNCTION_19	FOR_1	IF_1
0xe33	    0x4883bd40ffff	               cmp qword [rbp - 0xc0], 0	       310	mailsplit.c	FUNCTION_19	IF_11
0xe3b	     0xf8589000000	                           jne 0x4000f0a	       310	mailsplit.c	FUNCTION_19	IF_11
0xe41	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	       313	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0xe47	            0x4898	                                    cdqe	       313	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0xe49	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	       313	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0xe50	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	       313	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0xe57	          0x4829d1	                            sub rcx, rdx	       313	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0xe5a	          0x4889ca	                            mov rdx, rcx	       313	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0xe5d	        0x48c1fa03	                              sar rdx, 3	       313	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0xe61	          0x4829d0	                            sub rax, rdx	       313	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0xe64	        0x4883f801	                              cmp rax, 1	       313	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0xe68	            0x7408	                            je 0x4000eb2	       313	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0xe6a	        0x4883f802	                              cmp rax, 2	       313	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0xe6e	            0x7420	                            je 0x4000ed0	       313	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0xe70	            0xeb4e	                           jmp 0x4000f00	       313	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0xe72	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       315	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0xe79	          0x488b00	                    mov rax, qword [rax]	       315	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0xe7c	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       315	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0xe83	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	       316	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0xe8e	            0xeb58	                           jmp 0x4000f28	       317	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0xe90	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       319	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0xe97	          0x488b00	                    mov rax, qword [rax]	       319	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0xe9a	    0x488905000000	            mov qword [0x04000ee1], rax 	       319	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0xea1	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       320	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0xea8	        0x488b4008	                mov rax, qword [rax + 8]	       320	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0xeac	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       320	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0xeb3	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	       321	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0xebe	            0xeb28	                           jmp 0x4000f28	       322	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1
0xec0	      0xbf00000000	                              mov edi, 0	       324	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1	CALL_8
0xec5	      0xe800000000	                          call 0x4000f0a	       324	mailsplit.c	FUNCTION_19	IF_11	SWITCH_1	CALL_8
0xeca	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       328	mailsplit.c	FUNCTION_19	ELSE_9	IF_12
0xed1	          0x488b00	                    mov rax, qword [rax]	       328	mailsplit.c	FUNCTION_19	ELSE_9	IF_12
0xed4	          0x4885c0	                           test rax, rax	       328	mailsplit.c	FUNCTION_19	ELSE_9	IF_12
0xed7	     0xf85d4010000	                           jne 0x40010f1	       328	mailsplit.c	FUNCTION_19	ELSE_9	IF_12
0xedd	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	       329	mailsplit.c	FUNCTION_19	ELSE_9	IF_12
0xee8	      0xe9c4010000	                           jmp 0x40010f1	       332	mailsplit.c	FUNCTION_19	WHILE_1
0xeed	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       333	mailsplit.c	FUNCTION_19	WHILE_1
0xef4	        0x488d5008	                      lea rdx, [rax + 8]	       333	mailsplit.c	FUNCTION_19	WHILE_1
0xef8	    0x48899548ffff	             mov qword [rbp - 0xb8], rdx	       333	mailsplit.c	FUNCTION_19	WHILE_1
0xeff	          0x488b00	                    mov rax, qword [rax]	       333	mailsplit.c	FUNCTION_19	WHILE_1
0xf02	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       333	mailsplit.c	FUNCTION_19	WHILE_1
0xf09	    0xc7853cffffff	               mov dword [rbp - 0xc4], 0	       335	mailsplit.c	FUNCTION_19	WHILE_1
0xf13	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       337	mailsplit.c	FUNCTION_19	WHILE_1	IF_13
0xf1a	           0xfb600	                   movzx eax, byte [rax]	       337	mailsplit.c	FUNCTION_19	WHILE_1	IF_13
0xf1d	            0x3c2d	                            cmp al, 0x2d	       337	mailsplit.c	FUNCTION_19	WHILE_1	IF_13
0xf1f	     0xf858d000000	                           jne 0x4000ff2	       337	mailsplit.c	FUNCTION_19	WHILE_1	IF_13
0xf25	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       337	mailsplit.c	FUNCTION_19	WHILE_1	IF_13
0xf2c	        0x4883c001	                              add rax, 1	       337	mailsplit.c	FUNCTION_19	WHILE_1	IF_13
0xf30	           0xfb600	                   movzx eax, byte [rax]	       337	mailsplit.c	FUNCTION_19	WHILE_1	IF_13
0xf33	            0x84c0	                             test al, al	       337	mailsplit.c	FUNCTION_19	WHILE_1	IF_13
0xf35	            0x757b	                           jne 0x4000ff2	       337	mailsplit.c	FUNCTION_19	WHILE_1	IF_13
0xf37	    0x8bbd2cffffff	             mov edi, dword [rbp - 0xd4]	       338	mailsplit.c	FUNCTION_19	WHILE_1	IF_13	CALL_9
0xf3d	    0x8b8d30ffffff	             mov ecx, dword [rbp - 0xd0]	       338	mailsplit.c	FUNCTION_19	WHILE_1	IF_13	CALL_9
0xf43	    0x8b9538ffffff	             mov edx, dword [rbp - 0xc8]	       338	mailsplit.c	FUNCTION_19	WHILE_1	IF_13	CALL_9
0xf49	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	       338	mailsplit.c	FUNCTION_19	WHILE_1	IF_13	CALL_9
0xf50	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       338	mailsplit.c	FUNCTION_19	WHILE_1	IF_13	CALL_9
0xf57	          0x4189f8	                            mov r8d, edi	       338	mailsplit.c	FUNCTION_19	WHILE_1	IF_13	CALL_9
0xf5a	          0x4889c7	                            mov rdi, rax	       338	mailsplit.c	FUNCTION_19	WHILE_1	IF_13	CALL_9
0xf5d	      0xe89ffaffff	                     call sym.split_mbox	       338	mailsplit.c	FUNCTION_19	WHILE_1	IF_13	CALL_9
0xf62	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	       338	mailsplit.c	FUNCTION_19	WHILE_1	IF_13	CALL_9
0xf68	    0x83bd3cffffff	               cmp dword [rbp - 0xc4], 0	       339	mailsplit.c	FUNCTION_19	WHILE_1	IF_13	IF_14
0xf6f	            0x791e	                           jns 0x4000fcf	       339	mailsplit.c	FUNCTION_19	WHILE_1	IF_13	IF_14
0xf71	      0xbf00000000	                              mov edi, 0	       340	mailsplit.c	FUNCTION_19	WHILE_1	IF_13	IF_14	CALL_10
0xf76	      0xb800000000	                              mov eax, 0	       340	mailsplit.c	FUNCTION_19	WHILE_1	IF_13	IF_14	CALL_10
0xf7b	      0xe800000000	                          call 0x4000fc0	       340	mailsplit.c	FUNCTION_19	WHILE_1	IF_13	IF_14	CALL_10
0xf80	      0xe87bf0ffff	                    call sym.const_error	       340	mailsplit.c	FUNCTION_19	WHILE_1	IF_13	IF_14	CALL_10
0xf85	      0xb801000000	                              mov eax, 1	       341	mailsplit.c	FUNCTION_19	WHILE_1	IF_13	IF_14
0xf8a	      0xe951010000	                           jmp 0x4001120	       341	mailsplit.c	FUNCTION_19	WHILE_1	IF_13	IF_14
0xf8f	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	       343	mailsplit.c	FUNCTION_19	WHILE_1	IF_13
0xf95	    0x2b852cffffff	             sub eax, dword [rbp - 0xd4]	       343	mailsplit.c	FUNCTION_19	WHILE_1	IF_13
0xf9b	     0x18534ffffff	             add dword [rbp - 0xcc], eax	       343	mailsplit.c	FUNCTION_19	WHILE_1	IF_13
0xfa1	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	       344	mailsplit.c	FUNCTION_19	WHILE_1	IF_13
0xfa7	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	       344	mailsplit.c	FUNCTION_19	WHILE_1	IF_13
0xfad	      0xe9ff000000	                           jmp 0x40010f1	       344	mailsplit.c	FUNCTION_19	WHILE_1	IF_13
0xfb2	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       348	mailsplit.c	FUNCTION_19	WHILE_1	IF_15	CALL_11
0xfb9	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       348	mailsplit.c	FUNCTION_19	WHILE_1	IF_15	CALL_11
0xfc0	          0x4889d6	                            mov rsi, rdx	       348	mailsplit.c	FUNCTION_19	WHILE_1	IF_15	CALL_11
0xfc3	          0x4889c7	                            mov rdi, rax	       348	mailsplit.c	FUNCTION_19	WHILE_1	IF_15	CALL_11
0xfc6	      0xe800000000	                          call 0x400100b	       348	mailsplit.c	FUNCTION_19	WHILE_1	IF_15	CALL_11
0xfcb	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       348	mailsplit.c	FUNCTION_19	WHILE_1	IF_15	CALL_11
0xfce	            0x7528	                           jne 0x4001038	       348	mailsplit.c	FUNCTION_19	WHILE_1	IF_15	CALL_11
0xfd0	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       349	mailsplit.c	FUNCTION_19	WHILE_1	IF_15	CALL_12
0xfd7	          0x4889c6	                            mov rsi, rax	       349	mailsplit.c	FUNCTION_19	WHILE_1	IF_15	CALL_12
0xfda	      0xbf00000000	                              mov edi, 0	       349	mailsplit.c	FUNCTION_19	WHILE_1	IF_15	CALL_12
0xfdf	      0xb800000000	                              mov eax, 0	       349	mailsplit.c	FUNCTION_19	WHILE_1	IF_15	CALL_12
0xfe4	      0xe800000000	                          call 0x4001029	       349	mailsplit.c	FUNCTION_19	WHILE_1	IF_15	CALL_12
0xfe9	      0xe812f0ffff	                    call sym.const_error	       349	mailsplit.c	FUNCTION_19	WHILE_1	IF_15	CALL_12
0xfee	      0xb801000000	                              mov eax, 1	       350	mailsplit.c	FUNCTION_19	WHILE_1	IF_15
0xff3	      0xe9e8000000	                           jmp 0x4001120	       350	mailsplit.c	FUNCTION_19	WHILE_1	IF_15
0xff8	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       353	mailsplit.c	FUNCTION_19	WHILE_1	IF_16	CALL_13
0xffe	      0x2500f00000	                         and eax, 0xf000	       353	mailsplit.c	FUNCTION_19	WHILE_1	IF_16	CALL_13
0x1003	      0x3d00400000	                         cmp eax, 0x4000	       353	mailsplit.c	FUNCTION_19	WHILE_1	IF_16	CALL_13
0x1008	            0x752a	                           jne 0x4001074	       353	mailsplit.c	FUNCTION_19	WHILE_1	IF_16	CALL_13
0x100a	    0x8b8d2cffffff	             mov ecx, dword [rbp - 0xd4]	       354	mailsplit.c	FUNCTION_19	WHILE_1	CALL_14
0x1010	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	       354	mailsplit.c	FUNCTION_19	WHILE_1	CALL_14
0x1016	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	       354	mailsplit.c	FUNCTION_19	WHILE_1	CALL_14
0x101d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       354	mailsplit.c	FUNCTION_19	WHILE_1	CALL_14
0x1024	          0x4889c7	                            mov rdi, rax	       354	mailsplit.c	FUNCTION_19	WHILE_1	CALL_14
0x1027	      0xe8d5f7ffff	                  call sym.split_maildir	       354	mailsplit.c	FUNCTION_19	WHILE_1	CALL_14
0x102c	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	       354	mailsplit.c	FUNCTION_19	WHILE_1	CALL_14
0x1032	            0xeb31	                           jmp 0x40010a5	       354	mailsplit.c	FUNCTION_19	WHILE_1	CALL_14
0x1034	    0x8bbd2cffffff	             mov edi, dword [rbp - 0xd4]	       356	mailsplit.c	FUNCTION_19	WHILE_1	CALL_15
0x103a	    0x8b8d30ffffff	             mov ecx, dword [rbp - 0xd0]	       356	mailsplit.c	FUNCTION_19	WHILE_1	CALL_15
0x1040	    0x8b9538ffffff	             mov edx, dword [rbp - 0xc8]	       356	mailsplit.c	FUNCTION_19	WHILE_1	CALL_15
0x1046	    0x488bb540ffff	             mov rsi, qword [rbp - 0xc0]	       356	mailsplit.c	FUNCTION_19	WHILE_1	CALL_15
0x104d	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       356	mailsplit.c	FUNCTION_19	WHILE_1	CALL_15
0x1054	          0x4189f8	                            mov r8d, edi	       356	mailsplit.c	FUNCTION_19	WHILE_1	CALL_15
0x1057	          0x4889c7	                            mov rdi, rax	       356	mailsplit.c	FUNCTION_19	WHILE_1	CALL_15
0x105a	      0xe8a2f9ffff	                     call sym.split_mbox	       356	mailsplit.c	FUNCTION_19	WHILE_1	CALL_15
0x105f	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	       356	mailsplit.c	FUNCTION_19	WHILE_1	CALL_15
0x1065	    0x83bd3cffffff	               cmp dword [rbp - 0xc4], 0	       358	mailsplit.c	FUNCTION_19	WHILE_1	IF_17
0x106c	            0x7925	                           jns 0x40010d3	       358	mailsplit.c	FUNCTION_19	WHILE_1	IF_17
0x106e	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       359	mailsplit.c	FUNCTION_19	WHILE_1	IF_17	CALL_16
0x1075	          0x4889c6	                            mov rsi, rax	       359	mailsplit.c	FUNCTION_19	WHILE_1	IF_17	CALL_16
0x1078	      0xbf00000000	                              mov edi, 0	       359	mailsplit.c	FUNCTION_19	WHILE_1	IF_17	CALL_16
0x107d	      0xb800000000	                              mov eax, 0	       359	mailsplit.c	FUNCTION_19	WHILE_1	IF_17	CALL_16
0x1082	      0xe800000000	                          call 0x40010c7	       359	mailsplit.c	FUNCTION_19	WHILE_1	IF_17	CALL_16
0x1087	      0xe874efffff	                    call sym.const_error	       359	mailsplit.c	FUNCTION_19	WHILE_1	IF_17	CALL_16
0x108c	      0xb801000000	                              mov eax, 1	       360	mailsplit.c	FUNCTION_19	WHILE_1	IF_17
0x1091	            0xeb4d	                           jmp 0x4001120	       360	mailsplit.c	FUNCTION_19	WHILE_1	IF_17
0x1093	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	       362	mailsplit.c	FUNCTION_19	WHILE_1
0x1099	    0x2b852cffffff	             sub eax, dword [rbp - 0xd4]	       362	mailsplit.c	FUNCTION_19	WHILE_1
0x109f	     0x18534ffffff	             add dword [rbp - 0xcc], eax	       362	mailsplit.c	FUNCTION_19	WHILE_1
0x10a5	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	       363	mailsplit.c	FUNCTION_19	WHILE_1
0x10ab	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	       363	mailsplit.c	FUNCTION_19	WHILE_1
0x10b1	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       332	mailsplit.c	FUNCTION_19	WHILE_1
0x10b8	          0x488b00	                    mov rax, qword [rax]	       332	mailsplit.c	FUNCTION_19	WHILE_1
0x10bb	          0x4885c0	                           test rax, rax	       332	mailsplit.c	FUNCTION_19	WHILE_1
0x10be	     0xf8529feffff	                           jne 0x4000f2d	       332	mailsplit.c	FUNCTION_19	WHILE_1
0x10c4	    0x8b8534ffffff	             mov eax, dword [rbp - 0xcc]	       366	mailsplit.c	FUNCTION_19	CALL_17
0x10ca	            0x89c6	                            mov esi, eax	       366	mailsplit.c	FUNCTION_19	CALL_17
0x10cc	      0xbf00000000	                              mov edi, 0	       366	mailsplit.c	FUNCTION_19	CALL_17
0x10d1	      0xb800000000	                              mov eax, 0	       366	mailsplit.c	FUNCTION_19	CALL_17
0x10d6	      0xe800000000	                          call 0x400111b	       366	mailsplit.c	FUNCTION_19	CALL_17
0x10db	      0xb800000000	                              mov eax, 0	       368	mailsplit.c	FUNCTION_19
0x10e0	        0x488b4df8	                mov rcx, qword [rbp - 8]	       369	mailsplit.c	FUNCTION_19
0x10e4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       369	mailsplit.c	FUNCTION_19
0x10ed	            0x7405	                            je 0x4001134	       369	mailsplit.c	FUNCTION_19
0x10ef	      0xe800000000	                          call 0x4001134	       369	mailsplit.c	FUNCTION_19
0x10f4	              0xc9	                                   leave	       369	mailsplit.c	FUNCTION_19
0x10f5	              0xc3	                                     ret	       369	mailsplit.c	FUNCTION_19
