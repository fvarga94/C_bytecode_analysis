git_is_dir_sep	DO,0:ELSE,0:WHILE,0:functions,0:SWITCH,0:CALL,0:IF,0:FOR,0	8
0xf	              0x55	                                push rbp	       363	git-compat-util.h	FUNCTION_3
0x10	          0x4889e5	                            mov rbp, rsp	       363	git-compat-util.h	FUNCTION_3
0x13	          0x897dfc	                mov dword [rbp - 4], edi	       363	git-compat-util.h	FUNCTION_3
0x16	        0x837dfc2f	               cmp dword [rbp - 4], 0x2f	       364	git-compat-util.h	FUNCTION_3
0x1a	           0xf94c0	                                 sete al	       364	git-compat-util.h	FUNCTION_3
0x1d	           0xfb6c0	                           movzx eax, al	       364	git-compat-util.h	FUNCTION_3
0x20	              0x5d	                                 pop rbp	       365	git-compat-util.h	FUNCTION_3
0x21	              0xc3	                                     ret	       365	git-compat-util.h	FUNCTION_3
const_error	DO,0:ELSE,0:WHILE,0:functions,0:SWITCH,0:CALL,0:IF,0:FOR,0	5
0x22	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_6
0x23	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_6
0x26	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_6
0x2b	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_6
0x2c	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_6
git_has_dos_drive_prefix	DO,0:ELSE,0:WHILE,0:functions,0:SWITCH,0:CALL,0:IF,0:FOR,0	6
0x0	              0x55	                                push rbp	       347	git-compat-util.h	FUNCTION_1
0x1	          0x4889e5	                            mov rbp, rsp	       347	git-compat-util.h	FUNCTION_1
0x4	        0x48897df8	                mov qword [rbp - 8], rdi	       347	git-compat-util.h	FUNCTION_1
0x8	      0xb800000000	                              mov eax, 0	       348	git-compat-util.h	FUNCTION_1
0xd	              0x5d	                                 pop rbp	       349	git-compat-util.h	FUNCTION_1
0xe	              0xc3	                                     ret	       349	git-compat-util.h	FUNCTION_1
sane_case	DO,0:ELSE,0:WHILE,0:functions,0:SWITCH,0:CALL,1:IF,1:FOR,0	19
0x7f	              0x55	                                push rbp	       992	git-compat-util.h	FUNCTION_21
0x80	          0x4889e5	                            mov rbp, rsp	       992	git-compat-util.h	FUNCTION_21
0x83	          0x897dfc	                mov dword [rbp - 4], edi	       992	git-compat-util.h	FUNCTION_21
0x86	          0x8975f8	                mov dword [rbp - 8], esi	       992	git-compat-util.h	FUNCTION_21
0x89	          0x8b45fc	                mov eax, dword [rbp - 4]	       993	git-compat-util.h	FUNCTION_21	IF_1	CALL_1
0x8c	           0xfb6c0	                           movzx eax, al	       993	git-compat-util.h	FUNCTION_21	IF_1	CALL_1
0x8f	            0x4898	                                    cdqe	       993	git-compat-util.h	FUNCTION_21	IF_1	CALL_1
0x91	     0xfb680000000	                   movzx eax, byte [rax]	       993	git-compat-util.h	FUNCTION_21	IF_1	CALL_1
0x98	           0xfb6c0	                           movzx eax, al	       993	git-compat-util.h	FUNCTION_21	IF_1	CALL_1
0x9b	          0x83e004	                              and eax, 4	       993	git-compat-util.h	FUNCTION_21	IF_1	CALL_1
0x9e	            0x85c0	                           test eax, eax	       993	git-compat-util.h	FUNCTION_21	IF_1	CALL_1
0xa0	            0x740c	                            je 0x40000ee	       993	git-compat-util.h	FUNCTION_21	IF_1	CALL_1
0xa2	          0x8b45fc	                mov eax, dword [rbp - 4]	       994	git-compat-util.h	FUNCTION_21	IF_1
0xa5	          0x83e0df	                     and eax, 0xffffffdf	       994	git-compat-util.h	FUNCTION_21	IF_1
0xa8	           0xb45f8	                 or eax, dword [rbp - 8]	       994	git-compat-util.h	FUNCTION_21	IF_1
0xab	          0x8945fc	                mov dword [rbp - 4], eax	       994	git-compat-util.h	FUNCTION_21	IF_1
0xae	          0x8b45fc	                mov eax, dword [rbp - 4]	       995	git-compat-util.h	FUNCTION_21
0xb1	              0x5d	                                 pop rbp	       996	git-compat-util.h	FUNCTION_21
0xb2	              0xc3	                                     ret	       996	git-compat-util.h	FUNCTION_21
_	DO,0:ELSE,0:WHILE,0:functions,0:SWITCH,0:CALL,2:IF,1:FOR,0	15
0x226	              0x55	                                push rbp	        51	gettext.h	FUNCTION_177
0x227	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_177
0x22a	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_177
0x22e	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_177
0x232	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_177	IF_1
0x236	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_177	IF_1
0x239	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_177	IF_1
0x23b	            0x7507	                           jne 0x4000284	        52	gettext.h	FUNCTION_177	IF_1
0x23d	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_177	IF_1
0x242	            0xeb0c	                           jmp 0x4000290	        53	gettext.h	FUNCTION_177	IF_1
0x244	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_177	CALL_2
0x248	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_177	CALL_2
0x24b	      0xe800000000	                          call 0x4000290	        54	gettext.h	FUNCTION_177	CALL_2
0x250	              0xc9	                                   leave	        55	gettext.h	FUNCTION_177
0x251	              0xc3	                                     ret	        55	gettext.h	FUNCTION_177
strbuf_addch	DO,0:ELSE,0:WHILE,0:functions,0:SWITCH,0:CALL,2:IF,1:FOR,0	33
0x183	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_182
0x184	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_182
0x187	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_182
0x18b	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_182
0x18f	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_182
0x192	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_182	IF_1	CALL_1
0x196	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_182	IF_1	CALL_1
0x199	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_182	IF_1	CALL_1
0x19e	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_182	IF_1	CALL_1
0x1a1	            0x7511	                           jne 0x40001f4	       227	strbuf.h	FUNCTION_182	IF_1	CALL_1
0x1a3	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_182	CALL_2
0x1a7	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_182	CALL_2
0x1ac	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_182	CALL_2
0x1af	      0xe800000000	                          call 0x40001f4	       228	strbuf.h	FUNCTION_182	CALL_2
0x1b4	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_182
0x1b8	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_182
0x1bc	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_182
0x1c0	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_182
0x1c4	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_182
0x1c8	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_182
0x1cc	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_182
0x1d0	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_182
0x1d3	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_182
0x1d6	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_182
0x1d8	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_182
0x1dc	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_182
0x1e0	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_182
0x1e4	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_182
0x1e8	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_182
0x1eb	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_182
0x1ee	              0x90	                                     nop	       231	strbuf.h	FUNCTION_182
0x1ef	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_182
0x1f0	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_182
get_value	DO,0:ELSE,0:WHILE,1:functions,0:SWITCH,0:CALL,7:IF,6:FOR,1	285
0xb0e	              0x55	                                push rbp	       272	config.c	FUNCTION_37
0xb0f	          0x4889e5	                            mov rbp, rsp	       272	config.c	FUNCTION_37
0xb12	              0x53	                                push rbx	       272	config.c	FUNCTION_37
0xb13	        0x4883ec58	                           sub rsp, 0x58	       272	config.c	FUNCTION_37
0xb17	        0x48897da8	             mov qword [rbp - 0x58], rdi	       272	config.c	FUNCTION_37
0xb1b	        0x488975a0	             mov qword [rbp - 0x60], rsi	       272	config.c	FUNCTION_37
0xb1f	    0x64488b042528	                mov rax, qword fs:[0x28]	       272	config.c	FUNCTION_37
0xb28	        0x488945e8	             mov qword [rbp - 0x18], rax	       272	config.c	FUNCTION_37
0xb2c	            0x31c0	                            xor eax, eax	       272	config.c	FUNCTION_37
0xb2e	    0xc745b0070000	               mov dword [rbp - 0x50], 7	       273	config.c	FUNCTION_37
0xb35	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       274	config.c	FUNCTION_37
0xb3d	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       274	config.c	FUNCTION_37
0xb45	    0x8b0500000000	            mov eax, dword [0x04000b8b] 	       277	config.c	
0xb4b	            0x85c0	                           test eax, eax	       277	config.c	
0xb4d	     0xf842b010000	                            je 0x4000cbe	       277	config.c	
0xb53	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       286	config.c	FUNCTION_38
0xb57	          0x4889c7	                            mov rdi, rax	       286	config.c	FUNCTION_38
0xb5a	      0xe800000000	                          call 0x4000b9f	       286	config.c	FUNCTION_38
0xb5f	    0x488905000000	            mov qword [0x04000ba6], rax 	       286	config.c	FUNCTION_38
0xb66	    0x488b1d000000	            mov rbx, qword [0x04000bad] 	       287	config.c	FUNCTION_38
0xb6d	    0x488b05000000	            mov rax, qword [0x04000bb4] 	       287	config.c	FUNCTION_38
0xb74	          0x4889c7	                            mov rdi, rax	       287	config.c	FUNCTION_38
0xb77	      0xe800000000	                          call 0x4000bbc	       287	config.c	FUNCTION_38
0xb7c	        0x4883e801	                              sub rax, 1	       287	config.c	FUNCTION_38
0xb80	          0x4801d8	                            add rax, rbx	       287	config.c	FUNCTION_38
0xb83	        0x488945b8	             mov qword [rbp - 0x48], rax	       287	config.c	FUNCTION_38
0xb87	            0xeb23	                           jmp 0x4000bec	       287	config.c	FUNCTION_38
0xb89	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       290	config.c	FUNCTION_38	IF_1
0xb8d	           0xfb600	                   movzx eax, byte [rax]	       290	config.c	FUNCTION_38	IF_1
0xb90	           0xfb6c0	                           movzx eax, al	       290	config.c	FUNCTION_38	IF_1
0xb93	      0xbe20000000	                           mov esi, 0x20	       290	config.c	FUNCTION_38	IF_1
0xb98	            0x89c7	                            mov edi, eax	       290	config.c	FUNCTION_38	IF_1
0xb9a	      0xe8e0f4ffff	                      call sym.sane_case	       290	config.c	FUNCTION_38	IF_1
0xb9f	            0x89c2	                            mov edx, eax	       290	config.c	FUNCTION_38	IF_1
0xba1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       290	config.c	FUNCTION_38	IF_1
0xba5	            0x8810	                      mov byte [rax], dl	       290	config.c	FUNCTION_38	IF_1
0xba7	      0x48836db801	               sub qword [rbp - 0x48], 1	       289	config.c	FUNCTION_38	IF_1
0xbac	    0x488b05000000	            mov rax, qword [0x04000bf3] 	       288	config.c	FUNCTION_38	CALL_1
0xbb3	        0x483945b8	            cmp qword [rbp - 0x48], rax 	       287	config.c	FUNCTION_38
0xbb7	            0x720b	                            jb 0x4000c04	       287	config.c	FUNCTION_38
0xbb9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       288	config.c	FUNCTION_38	CALL_1
0xbbd	           0xfb600	                   movzx eax, byte [rax]	       288	config.c	FUNCTION_38	CALL_1
0xbc0	            0x3c2e	                            cmp al, 0x2e	       288	config.c	FUNCTION_38	CALL_1
0xbc2	            0x75c5	                           jne 0x4000bc9	       288	config.c	FUNCTION_38	CALL_1
0xbc4	    0x488b05000000	            mov rax, qword [0x04000c0b] 	       291	config.c	FUNCTION_38
0xbcb	        0x488945b8	             mov qword [rbp - 0x48], rax	       291	config.c	FUNCTION_38
0xbcf	            0xeb23	                           jmp 0x4000c34	       291	config.c	FUNCTION_38
0xbd1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       292	config.c	FUNCTION_38	IF_2	CALL_2
0xbd5	           0xfb600	                   movzx eax, byte [rax]	       292	config.c	FUNCTION_38	IF_2	CALL_2
0xbd8	           0xfb6c0	                           movzx eax, al	       292	config.c	FUNCTION_38	IF_2	CALL_2
0xbdb	      0xbe20000000	                           mov esi, 0x20	       292	config.c	FUNCTION_38	IF_2	CALL_2
0xbe0	            0x89c7	                            mov edi, eax	       292	config.c	FUNCTION_38	IF_2	CALL_2
0xbe2	      0xe898f4ffff	                      call sym.sane_case	       292	config.c	FUNCTION_38	IF_2	CALL_2
0xbe7	            0x89c2	                            mov edx, eax	       292	config.c	FUNCTION_38	IF_2	CALL_2
0xbe9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       292	config.c	FUNCTION_38	IF_2	CALL_2
0xbed	            0x8810	                      mov byte [rax], dl	       292	config.c	FUNCTION_38	IF_2	CALL_2
0xbef	      0x488345b801	               add qword [rbp - 0x48], 1	       291	config.c	FUNCTION_38
0xbf4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       291	config.c	FUNCTION_38
0xbf8	           0xfb600	                   movzx eax, byte [rax]	       291	config.c	FUNCTION_38
0xbfb	            0x84c0	                             test al, al	       291	config.c	FUNCTION_38
0xbfd	            0x740b	                            je 0x4000c4a	       291	config.c	FUNCTION_38
0xbff	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       291	config.c	FUNCTION_38
0xc03	           0xfb600	                   movzx eax, byte [rax]	       291	config.c	FUNCTION_38
0xc06	            0x3c2e	                            cmp al, 0x2e	       291	config.c	FUNCTION_38
0xc08	            0x75c7	                           jne 0x4000c11	       291	config.c	FUNCTION_38
0xc0a	      0xbf40000000	                           mov edi, 0x40	       294	config.c	FUNCTION_38
0xc0f	      0xe800000000	                          call 0x4000c54	       294	config.c	FUNCTION_38
0xc14	    0x488905000000	            mov qword [0x04000c5b], rax 	       294	config.c	FUNCTION_38
0xc1b	    0x488b0d000000	            mov rcx, qword [0x04000c62] 	       295	config.c	FUNCTION_38	IF_3	CALL_4
0xc22	    0x488b05000000	            mov rax, qword [0x04000c69] 	       295	config.c	FUNCTION_38	IF_3	CALL_4
0xc29	      0xba01000000	                              mov edx, 1	       295	config.c	FUNCTION_38	IF_3	CALL_4
0xc2e	          0x4889ce	                            mov rsi, rcx	       295	config.c	FUNCTION_38	IF_3	CALL_4
0xc31	          0x4889c7	                            mov rdi, rax	       295	config.c	FUNCTION_38	IF_3	CALL_4
0xc34	      0xe800000000	                          call 0x4000c79	       295	config.c	FUNCTION_38	IF_3	CALL_4
0xc39	            0x85c0	                           test eax, eax	       295	config.c	FUNCTION_38	IF_3	CALL_4
0xc3b	            0x7467	                            je 0x4000ce4	       295	config.c	FUNCTION_38	IF_3	CALL_4
0xc3d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       296	config.c	FUNCTION_38	IF_3	CALL_5
0xc41	          0x4889c6	                            mov rsi, rax	       296	config.c	FUNCTION_38	IF_3	CALL_5
0xc44	      0xbf00000000	                              mov edi, 0	       296	config.c	FUNCTION_38	IF_3	CALL_5
0xc49	      0xb800000000	                              mov eax, 0	       296	config.c	FUNCTION_38	IF_3	CALL_5
0xc4e	      0xe800000000	                          call 0x4000c93	       296	config.c	FUNCTION_38	IF_3	CALL_5
0xc53	      0xe8caf3ffff	                    call sym.const_error	       296	config.c	FUNCTION_38	IF_3	CALL_5
0xc58	    0x488b05000000	            mov rax, qword [0x04000c9f] 	       297	config.c	FUNCTION_38	IF_3	CALL_6
0xc5f	          0x4889c7	                            mov rdi, rax	       297	config.c	FUNCTION_38	IF_3	CALL_6
0xc62	      0xe800000000	                          call 0x4000ca7	       297	config.c	FUNCTION_38	IF_3	CALL_6
0xc67	    0x48c705000000	               mov qword [0x04000cb2], 0	       297	config.c	FUNCTION_38	IF_3	CALL_6
0xc72	    0xc745b0060000	               mov dword [rbp - 0x50], 6	       298	config.c	FUNCTION_38	CALL_7
0xc79	      0xe971020000	                           jmp 0x4000f2f	       299	config.c	FUNCTION_38
0xc7e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       302	config.c	
0xc82	      0xba00000000	                              mov edx, 0	       302	config.c	
0xc87	      0xbe00000000	                              mov esi, 0	       302	config.c	
0xc8c	          0x4889c7	                            mov rdi, rax	       302	config.c	
0xc8f	      0xe800000000	                          call 0x4000cd4	       302	config.c	
0xc94	            0x85c0	                           test eax, eax	       302	config.c	
0xc96	            0x740c	                            je 0x4000ce4	       302	config.c	
0xc98	    0xc745b0010000	               mov dword [rbp - 0x50], 1	       303	config.c	
0xc9f	      0xe94b020000	                           jmp 0x4000f2f	       304	config.c	FUNCTION_39
0xca4	      0x48837da000	               cmp qword [rbp - 0x60], 0	       308	config.c	FUNCTION_39	IF_1	CALL_2
0xca9	     0xf848b000000	                            je 0x4000d7a	       308	config.c	FUNCTION_39	IF_1	CALL_2
0xcaf	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       309	config.c	FUNCTION_39	IF_1	CALL_3
0xcb3	           0xfb600	                   movzx eax, byte [rax]	       309	config.c	FUNCTION_39	IF_1	CALL_3
0xcb6	            0x3c21	                            cmp al, 0x21	       309	config.c	FUNCTION_39	IF_1	CALL_3
0xcb8	            0x750f	                           jne 0x4000d09	       309	config.c	FUNCTION_39	IF_1	CALL_3
0xcba	    0xc70500000000	               mov dword [0x04000d04], 1	       310	config.c	FUNCTION_39	IF_1
0xcc4	      0x488345a001	               add qword [rbp - 0x60], 1	       311	config.c	FUNCTION_39	CALL_4
0xcc9	      0xbf40000000	                           mov edi, 0x40	       314	config.c	FUNCTION_39
0xcce	      0xe800000000	                          call 0x4000d13	       314	config.c	FUNCTION_39
0xcd3	    0x488905000000	            mov qword [0x04000d1a], rax 	       314	config.c	FUNCTION_39
0xcda	    0x488b05000000	            mov rax, qword [0x04000d21] 	       315	config.c	
0xce1	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	       315	config.c	
0xce5	      0xba01000000	                              mov edx, 1	       315	config.c	
0xcea	          0x4889ce	                            mov rsi, rcx	       315	config.c	
0xced	          0x4889c7	                            mov rdi, rax	       315	config.c	
0xcf0	      0xe800000000	                          call 0x4000d35	       315	config.c	
0xcf5	            0x85c0	                           test eax, eax	       315	config.c	
0xcf7	            0x7441	                            je 0x4000d7a	       315	config.c	
0xcf9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       316	config.c	
0xcfd	          0x4889c6	                            mov rsi, rax	       316	config.c	
0xd00	      0xbf00000000	                              mov edi, 0	       316	config.c	
0xd05	      0xb800000000	                              mov eax, 0	       316	config.c	
0xd0a	      0xe800000000	                          call 0x4000d4f	       316	config.c	
0xd0f	      0xe80ef3ffff	                    call sym.const_error	       316	config.c	
0xd14	    0x488b05000000	            mov rax, qword [0x04000d5b] 	       317	config.c	FUNCTION_40
0xd1b	          0x4889c7	                            mov rdi, rax	       317	config.c	FUNCTION_40
0xd1e	      0xe800000000	                          call 0x4000d63	       317	config.c	FUNCTION_40
0xd23	    0x48c705000000	               mov qword [0x04000d6e], 0	       317	config.c	FUNCTION_40
0xd2e	    0xc745b0060000	               mov dword [rbp - 0x50], 6	       318	config.c	FUNCTION_40	CALL_1
0xd35	      0xe9b5010000	                           jmp 0x4000f2f	       319	config.c	FUNCTION_40
0xd3a	        0x488d45d0	                   lea rax, [rbp - 0x30]	       323	config.c	
0xd3e	      0xb900000000	                              mov ecx, 0	       323	config.c	
0xd43	      0xba00000000	                              mov edx, 0	       323	config.c	
0xd48	          0x4889c6	                            mov rsi, rax	       323	config.c	
0xd4b	      0xbf00000000	                              mov edi, 0	       323	config.c	
0xd50	      0xe800000000	                          call 0x4000d95	       323	config.c	
0xd55	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       326	config.c	
0xd58	            0x85c0	                           test eax, eax	       326	config.c	
0xd5a	     0xf85fd000000	                           jne 0x4000e9d	       326	config.c	
0xd60	    0x488b05000000	            mov rax, qword [0x04000da7] 	       326	config.c	
0xd67	          0x4885c0	                           test rax, rax	       326	config.c	
0xd6a	     0xf84ed000000	                            je 0x4000e9d	       326	config.c	
0xd70	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       328	config.c	
0xd73	          0x8d5001	                      lea edx, [rax + 1]	       328	config.c	
0xd76	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       328	config.c	
0xd79	            0x39c2	                            cmp edx, eax	       328	config.c	
0xd7b	            0x7e6c	                           jle 0x4000e29	       328	config.c	
0xd7d	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       328	config.c	
0xd80	          0x8d5010	                   lea edx, [rax + 0x10]	       328	config.c	
0xd83	            0x89d0	                            mov eax, edx	       328	config.c	
0xd85	             0x1c0	                            add eax, eax	       328	config.c	
0xd87	             0x1d0	                            add eax, edx	       328	config.c	
0xd89	            0x89c2	                            mov edx, eax	       328	config.c	
0xd8b	          0xc1ea1f	                           shr edx, 0x1f	       328	config.c	
0xd8e	             0x1d0	                            add eax, edx	       328	config.c	
0xd90	            0xd1f8	                              sar eax, 1	       328	config.c	
0xd92	            0x89c2	                            mov edx, eax	       328	config.c	
0xd94	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       328	config.c	
0xd97	          0x83c001	                              add eax, 1	       328	config.c	
0xd9a	            0x39c2	                            cmp edx, eax	       328	config.c	
0xd9c	            0x7d0b	                           jge 0x4000de9	       328	config.c	
0xd9e	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       328	config.c	
0xda1	          0x83c001	                              add eax, 1	       328	config.c	
0xda4	          0x8945dc	             mov dword [rbp - 0x24], eax	       328	config.c	
0xda7	            0xeb18	                           jmp 0x4000e01	       328	config.c	
0xda9	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       328	config.c	
0xdac	          0x8d5010	                   lea edx, [rax + 0x10]	       328	config.c	
0xdaf	            0x89d0	                            mov eax, edx	       328	config.c	
0xdb1	             0x1c0	                            add eax, eax	       328	config.c	
0xdb3	             0x1d0	                            add eax, edx	       328	config.c	
0xdb5	            0x89c2	                            mov edx, eax	       328	config.c	
0xdb7	          0xc1ea1f	                           shr edx, 0x1f	       328	config.c	
0xdba	             0x1d0	                            add eax, edx	       328	config.c	
0xdbc	            0xd1f8	                              sar eax, 1	       328	config.c	
0xdbe	          0x8945dc	             mov dword [rbp - 0x24], eax	       328	config.c	
0xdc1	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       328	config.c	
0xdc4	            0x4898	                                    cdqe	       328	config.c	
0xdc6	          0x4889c6	                            mov rsi, rax	       328	config.c	
0xdc9	      0xbf18000000	                           mov edi, 0x18	       328	config.c	
0xdce	      0xe85af2ffff	                        call sym.st_mult	       328	config.c	
0xdd3	          0x4889c2	                            mov rdx, rax	       328	config.c	
0xdd6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       328	config.c	
0xdda	          0x4889d6	                            mov rsi, rdx	       328	config.c	
0xddd	          0x4889c7	                            mov rdi, rax	       328	config.c	
0xde0	      0xe800000000	                          call 0x4000e25	       328	config.c	
0xde5	        0x488945d0	             mov qword [rbp - 0x30], rax	       328	config.c	
0xde9	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       329	config.c	
0xded	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       329	config.c	
0xdf0	          0x8d5001	                      lea edx, [rax + 1]	       329	config.c	
0xdf3	          0x8955d8	             mov dword [rbp - 0x28], edx	       329	config.c	
0xdf6	          0x4863d0	                         movsxd rdx, eax	       329	config.c	
0xdf9	          0x4889d0	                            mov rax, rdx	       329	config.c	
0xdfc	          0x4801c0	                            add rax, rax	       329	config.c	
0xdff	          0x4801d0	                            add rax, rdx	       329	config.c	
0xe02	        0x48c1e003	                              shl rax, 3	       329	config.c	
0xe06	          0x4801c8	                            add rax, rcx	       329	config.c	
0xe09	        0x488945c0	             mov qword [rbp - 0x40], rax	       329	config.c	
0xe0d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       330	config.c	
0xe11	      0xbe00000000	                              mov esi, 0	       330	config.c	
0xe16	          0x4889c7	                            mov rdi, rax	       330	config.c	
0xe19	      0xe800000000	                          call 0x4000e5e	       330	config.c	
0xe1e	    0x488b15000000	            mov rdx, qword [0x04000e65] 	       331	config.c	
0xe25	        0x488b4da8	             mov rcx, qword [rbp - 0x58]	       331	config.c	
0xe29	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       331	config.c	
0xe2d	          0x4889ce	                            mov rsi, rcx	       331	config.c	
0xe30	          0x4889c7	                            mov rdi, rax	       331	config.c	
0xe33	      0xe8e1f7ffff	                  call sym.format_config	       331	config.c	
0xe38	            0x85c0	                           test eax, eax	       331	config.c	
0xe3a	            0x7921	                           jns 0x4000e9d	       331	config.c	
0xe3c	    0x488b1d000000	            mov rbx, qword [0x04000e83] 	       332	config.c	
0xe43	      0xbf00000000	                              mov edi, 0	       332	config.c	
0xe48	      0xe8d9f3ffff	                               call sym.	       332	config.c	
0xe4d	          0x4889de	                            mov rsi, rbx	       332	config.c	
0xe50	          0x4889c7	                            mov rdi, rax	       332	config.c	
0xe53	      0xb800000000	                              mov eax, 0	       332	config.c	
0xe58	      0xe800000000	                          call 0x4000e9d	       332	config.c	
0xe5d	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       336	config.c	FUNCTION_41	CALL_1
0xe60	            0x85c0	                           test eax, eax	       336	config.c	FUNCTION_41	CALL_1
0xe62	           0xf94c0	                                 sete al	       336	config.c	FUNCTION_41	CALL_1
0xe65	           0xfb6c0	                           movzx eax, al	       336	config.c	FUNCTION_41	CALL_1
0xe68	          0x8945b0	             mov dword [rbp - 0x50], eax	       336	config.c	FUNCTION_41	CALL_1
0xe6b	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	       338	config.c	FUNCTION_41
0xe72	            0xeb67	                           jmp 0x4000f1b	       338	config.c	FUNCTION_41
0xe74	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       339	config.c	FUNCTION_41
0xe78	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       339	config.c	FUNCTION_41
0xe7b	          0x4863d0	                         movsxd rdx, eax	       339	config.c	FUNCTION_41
0xe7e	          0x4889d0	                            mov rax, rdx	       339	config.c	FUNCTION_41
0xe81	          0x4801c0	                            add rax, rax	       339	config.c	FUNCTION_41
0xe84	          0x4801d0	                            add rax, rdx	       339	config.c	FUNCTION_41
0xe87	        0x48c1e003	                              shl rax, 3	       339	config.c	FUNCTION_41
0xe8b	          0x4801c8	                            add rax, rcx	       339	config.c	FUNCTION_41
0xe8e	        0x488945c8	             mov qword [rbp - 0x38], rax	       339	config.c	FUNCTION_41
0xe92	    0x8b0500000000	            mov eax, dword [0x04000ed8] 	       340	config.c	FUNCTION_41
0xe98	            0x85c0	                           test eax, eax	       340	config.c	FUNCTION_41
0xe9a	            0x750b	                           jne 0x4000ee7	       340	config.c	FUNCTION_41
0xe9c	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       340	config.c	FUNCTION_41
0xe9f	          0x83e801	                              sub eax, 1	       340	config.c	FUNCTION_41
0xea2	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	       340	config.c	FUNCTION_41
0xea5	            0x7524	                           jne 0x4000f0b	       340	config.c	FUNCTION_41
0xea7	    0x488b0d000000	            mov rcx, qword [0x04000eee] 	       341	config.c	FUNCTION_41
0xeae	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       341	config.c	FUNCTION_41
0xeb2	        0x488b5008	                mov rdx, qword [rax + 8]	       341	config.c	FUNCTION_41
0xeb6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       341	config.c	FUNCTION_41
0xeba	        0x488b4010	            mov rax, qword [rax + 0x10] 	       341	config.c	FUNCTION_41
0xebe	      0xbe01000000	                              mov esi, 1	       341	config.c	FUNCTION_41
0xec3	          0x4889c7	                            mov rdi, rax	       341	config.c	FUNCTION_41
0xec6	      0xe800000000	                          call 0x4000f0b	       341	config.c	FUNCTION_41
0xecb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       342	config.c	FUNCTION_41
0xecf	          0x4889c7	                            mov rdi, rax	       342	config.c	FUNCTION_41
0xed2	      0xe800000000	                          call 0x4000f17	       342	config.c	FUNCTION_41
0xed7	        0x8345b401	               add dword [rbp - 0x4c], 1	       338	config.c	FUNCTION_41
0xedb	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       338	config.c	FUNCTION_41
0xede	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	       338	config.c	FUNCTION_41
0xee1	            0x7f91	                            jg 0x4000eb4	       338	config.c	FUNCTION_41
0xee3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       344	config.c	FUNCTION_41	IF_1	IF_2
0xee7	          0x4889c7	                            mov rdi, rax	       344	config.c	FUNCTION_41	IF_1	IF_2
0xeea	      0xe800000000	                          call 0x4000f2f	       344	config.c	FUNCTION_41	IF_1	IF_2
0xeef	    0x488b05000000	            mov rax, qword [0x04000f36] 	       347	config.c	FUNCTION_41	IF_1
0xef6	          0x4889c7	                            mov rdi, rax	       347	config.c	FUNCTION_41	IF_1
0xef9	      0xe800000000	                          call 0x4000f3e	       347	config.c	FUNCTION_41	IF_1
0xefe	    0x488b05000000	            mov rax, qword [0x04000f45] 	       348	config.c	FUNCTION_41
0xf05	          0x4885c0	                           test rax, rax	       348	config.c	FUNCTION_41
0xf08	            0x741e	                            je 0x4000f68	       348	config.c	FUNCTION_41
0xf0a	    0x488b05000000	            mov rax, qword [0x04000f51] 	       349	config.c	FUNCTION_41	IF_3
0xf11	          0x4889c7	                            mov rdi, rax	       349	config.c	FUNCTION_41	IF_3
0xf14	      0xe800000000	                          call 0x4000f59	       349	config.c	FUNCTION_41	IF_3
0xf19	    0x488b05000000	            mov rax, qword [0x04000f60] 	       350	config.c	FUNCTION_41	IF_3	IF_4
0xf20	          0x4889c7	                            mov rdi, rax	       350	config.c	FUNCTION_41	IF_3	IF_4
0xf23	      0xe800000000	                          call 0x4000f68	       350	config.c	FUNCTION_41	IF_3	IF_4
0xf28	    0x488b05000000	            mov rax, qword [0x04000f6f] 	       352	config.c	FUNCTION_41	IF_3
0xf2f	          0x4885c0	                           test rax, rax	       352	config.c	FUNCTION_41	IF_3
0xf32	            0x741e	                            je 0x4000f92	       352	config.c	FUNCTION_41	IF_3
0xf34	    0x488b05000000	            mov rax, qword [0x04000f7b] 	       353	config.c	FUNCTION_41	IF_3
0xf3b	          0x4889c7	                            mov rdi, rax	       353	config.c	FUNCTION_41	IF_3
0xf3e	      0xe800000000	                          call 0x4000f83	       353	config.c	FUNCTION_41	IF_3
0xf43	    0x488b05000000	            mov rax, qword [0x04000f8a] 	       354	config.c	FUNCTION_41
0xf4a	          0x4889c7	                            mov rdi, rax	       354	config.c	FUNCTION_41
0xf4d	      0xe800000000	                          call 0x4000f92	       354	config.c	FUNCTION_41
0xf52	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       357	config.c	FUNCTION_41	IF_5
0xf55	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       358	config.c	FUNCTION_41
0xf59	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       358	config.c	FUNCTION_41
0xf62	            0x7405	                            je 0x4000fa9	       358	config.c	FUNCTION_41
0xf64	      0xe800000000	                          call 0x4000fa9	       358	config.c	FUNCTION_41
0xf69	        0x4883c458	                           add rsp, 0x58	       358	config.c	FUNCTION_41
0xf6d	              0x5b	                                 pop rbx	       358	config.c	FUNCTION_41
0xf6e	              0x5d	                                 pop rbp	       358	config.c	FUNCTION_41
0xf6f	              0xc3	                                     ret	       358	config.c	FUNCTION_41
strbuf_setlen	DO,0:ELSE,1:WHILE,0:functions,0:SWITCH,0:CALL,2:IF,2:FOR,0	43
0xe9	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_181
0xea	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_181
0xed	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_181
0xf1	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_181
0xf5	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_181
0xf9	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_181	IF_1
0xfd	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_181	IF_1
0x100	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_181	IF_1
0x103	            0x740d	                            je 0x4000152	       162	strbuf.h	FUNCTION_181	IF_1
0x105	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_181	IF_1
0x109	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_181	IF_1
0x10c	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_181	IF_1
0x110	            0xeb05	                           jmp 0x4000157	       162	strbuf.h	FUNCTION_181	IF_1
0x112	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_181	IF_1
0x117	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_181	IF_1
0x11b	            0x730f	                           jae 0x400016c	       162	strbuf.h	FUNCTION_181	IF_1
0x11d	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_181	CALL_1
0x122	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_181	CALL_1
0x127	      0xe800000000	                          call 0x400016c	       163	strbuf.h	FUNCTION_181	CALL_1
0x12c	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_181
0x130	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_181
0x134	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_181
0x138	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_181	IF_2
0x13c	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_181	IF_2
0x140	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_181	IF_2
0x146	            0x7414	                            je 0x400019c	       165	strbuf.h	FUNCTION_181	IF_2
0x148	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_181	IF_2
0x14c	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_181	IF_2
0x150	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_181	IF_2
0x154	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_181	IF_2
0x157	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_181	IF_2
0x15a	            0xeb24	                           jmp 0x40001c0	       169	strbuf.h	FUNCTION_181
0x15c	     0xfb605000000	           movzx eax, byte [0x040001a3] 	       168	strbuf.h	FUNCTION_181	CALL_2
0x163	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_181	CALL_2
0x165	            0x7419	                            je 0x40001c0	       168	strbuf.h	FUNCTION_181	CALL_2
0x167	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_181	CALL_2
0x16c	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_181	CALL_2
0x171	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_181	CALL_2
0x176	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_181	CALL_2
0x17b	      0xe800000000	                          call 0x40001c0	       168	strbuf.h	FUNCTION_181	CALL_2
0x180	              0x90	                                     nop	       169	strbuf.h	FUNCTION_181
0x181	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_181
0x182	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_181
strbuf_addstr	DO,0:ELSE,0:WHILE,0:functions,0:SWITCH,0:CALL,2:IF,0:FOR,0	17
0x1f1	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_183
0x1f2	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_183
0x1f5	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_183
0x1f9	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_183
0x1fd	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_183
0x201	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_183	CALL_2
0x205	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_183	CALL_2
0x208	      0xe800000000	                          call 0x400024d	       279	strbuf.h	FUNCTION_183	CALL_2
0x20d	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_183	CALL_2
0x210	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_183	CALL_2
0x214	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_183	CALL_2
0x218	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_183	CALL_2
0x21b	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_183	CALL_2
0x21e	      0xe800000000	                          call 0x4000263	       279	strbuf.h	FUNCTION_183	CALL_2
0x223	              0x90	                                     nop	       280	strbuf.h	FUNCTION_183
0x224	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_183
0x225	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_183
st_mult	DO,0:ELSE,0:WHILE,0:functions,0:SWITCH,0:CALL,2:IF,1:FOR,0	22
0x2d	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_15
0x2e	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_15
0x31	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_15
0x35	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_15
0x39	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_15
0x3d	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x42	            0x7430	                            je 0x40000b4	       795	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x44	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x4b	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x50	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x54	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x58	            0x731a	                           jae 0x40000b4	       795	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x5a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_15	IF_1	CALL_2
0x5e	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_15	IF_1	CALL_2
0x62	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_15	IF_1	CALL_2
0x65	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_15	IF_1	CALL_2
0x6a	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_15	IF_1	CALL_2
0x6f	      0xe800000000	                          call 0x40000b4	       796	git-compat-util.h	FUNCTION_15	IF_1	CALL_2
0x74	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_15
0x78	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_15
0x7d	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_15
0x7e	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_15
strbuf_avail	DO,0:ELSE,0:WHILE,0:functions,0:SWITCH,0:CALL,0:IF,0:FOR,0	18
0xb3	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_180
0xb4	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_180
0xb7	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_180
0xbb	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_180
0xbf	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_180
0xc2	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_180
0xc5	            0x741b	                            je 0x4000122	       141	strbuf.h	FUNCTION_180
0xc7	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_180
0xcb	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_180
0xce	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_180
0xd2	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_180
0xd6	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_180
0xd9	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_180
0xdc	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_180
0xe0	            0xeb05	                           jmp 0x4000127	       141	strbuf.h	FUNCTION_180
0xe2	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_180
0xe7	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_180
0xe8	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_180
