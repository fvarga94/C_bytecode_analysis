parse_reflog_param	functions,0:IF,4:ELSE,2:FOR,0:DO,0:CALL,2:SWITCH,0:WHILE,0	55
0x1628	              0x55	                                push rbp	       585	show-branch.c	FUNCTION_38
0x1629	          0x4889e5	                            mov rbp, rsp	       585	show-branch.c	FUNCTION_38
0x162c	        0x4883ec40	                           sub rsp, 0x40	       585	show-branch.c	FUNCTION_38
0x1630	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       585	show-branch.c	FUNCTION_38
0x1634	        0x488975d0	             mov qword [rbp - 0x30], rsi	       585	show-branch.c	FUNCTION_38
0x1638	          0x8955cc	             mov dword [rbp - 0x34], edx	       585	show-branch.c	FUNCTION_38
0x163b	    0x64488b042528	                mov rax, qword fs:[0x28]	       585	show-branch.c	FUNCTION_38
0x1644	        0x488945f8	                mov qword [rbp - 8], rax	       585	show-branch.c	FUNCTION_38
0x1648	            0x31c0	                            xor eax, eax	       585	show-branch.c	FUNCTION_38
0x164a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       587	show-branch.c	FUNCTION_38
0x164e	        0x488b4010	            mov rax, qword [rax + 0x10] 	       587	show-branch.c	FUNCTION_38
0x1652	        0x488945f0	             mov qword [rbp - 0x10], rax	       587	show-branch.c	FUNCTION_38
0x1656	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       588	show-branch.c	FUNCTION_38	IF_1
0x165b	            0x7508	                           jne 0x40016a5	       588	show-branch.c	FUNCTION_38	IF_1
0x165d	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       589	show-branch.c	FUNCTION_38	IF_1
0x1665	        0x488d4de8	                   lea rcx, [rbp - 0x18]	       590	show-branch.c	FUNCTION_38	CALL_1
0x1669	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       590	show-branch.c	FUNCTION_38	CALL_1
0x166d	      0xba0a000000	                            mov edx, 0xa	       590	show-branch.c	FUNCTION_38	CALL_1
0x1672	          0x4889ce	                            mov rsi, rcx	       590	show-branch.c	FUNCTION_38	CALL_1
0x1675	          0x4889c7	                            mov rdi, rax	       590	show-branch.c	FUNCTION_38	CALL_1
0x1678	      0xe800000000	                          call 0x40016bd	       590	show-branch.c	FUNCTION_38	CALL_1
0x167d	    0x890500000000	            mov dword [0x040016c3], eax 	       590	show-branch.c	FUNCTION_38	CALL_1
0x1683	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       591	show-branch.c	FUNCTION_38	IF_2
0x1687	           0xfb600	                   movzx eax, byte [rax]	       591	show-branch.c	FUNCTION_38	IF_2
0x168a	            0x3c2c	                            cmp al, 0x2c	       591	show-branch.c	FUNCTION_38	IF_2
0x168c	            0x7511	                           jne 0x40016df	       591	show-branch.c	FUNCTION_38	IF_2
0x168e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       592	show-branch.c	FUNCTION_38	IF_2
0x1692	        0x488d5001	                      lea rdx, [rax + 1]	       592	show-branch.c	FUNCTION_38	IF_2
0x1696	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       592	show-branch.c	FUNCTION_38	IF_2
0x169a	          0x488910	                    mov qword [rax], rdx	       592	show-branch.c	FUNCTION_38	IF_2
0x169d	            0xeb33	                           jmp 0x4001712	       592	show-branch.c	FUNCTION_38	IF_2
0x169f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       593	show-branch.c	FUNCTION_38	ELSE_1	IF_3
0x16a3	           0xfb600	                   movzx eax, byte [rax]	       593	show-branch.c	FUNCTION_38	ELSE_1	IF_3
0x16a6	            0x84c0	                             test al, al	       593	show-branch.c	FUNCTION_38	ELSE_1	IF_3
0x16a8	            0x741d	                            je 0x4001707	       593	show-branch.c	FUNCTION_38	ELSE_1	IF_3
0x16aa	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       594	show-branch.c	FUNCTION_38	ELSE_1	IF_3
0x16ae	          0x4889c6	                            mov rsi, rax	       594	show-branch.c	FUNCTION_38	ELSE_1	IF_3
0x16b1	      0xbf00000000	                              mov edi, 0	       594	show-branch.c	FUNCTION_38	ELSE_1	IF_3
0x16b6	      0xb800000000	                              mov eax, 0	       594	show-branch.c	FUNCTION_38	ELSE_1	IF_3
0x16bb	      0xe800000000	                          call 0x4001700	       594	show-branch.c	FUNCTION_38	ELSE_1	IF_3
0x16c0	      0xe83be9ffff	                    call sym.const_error	       594	show-branch.c	FUNCTION_38	ELSE_1	IF_3
0x16c5	            0xeb24	                           jmp 0x400172b	       594	show-branch.c	FUNCTION_38	ELSE_1	IF_3
0x16c7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       596	show-branch.c	FUNCTION_38	ELSE_2
0x16cb	    0x48c700000000	                      mov qword [rax], 0	       596	show-branch.c	FUNCTION_38	ELSE_2
0x16d2	    0x8b0500000000	            mov eax, dword [0x04001718] 	       597	show-branch.c	FUNCTION_38	IF_4
0x16d8	            0x85c0	                           test eax, eax	       597	show-branch.c	FUNCTION_38	IF_4
0x16da	            0x7f0a	                            jg 0x4001726	       597	show-branch.c	FUNCTION_38	IF_4
0x16dc	    0xc70500000000	               mov dword [0x04001726], 4	       598	show-branch.c	FUNCTION_38	IF_4
0x16e6	      0xb800000000	                              mov eax, 0	       599	show-branch.c	FUNCTION_38
0x16eb	        0x488b4df8	                mov rcx, qword [rbp - 8]	       600	show-branch.c	FUNCTION_38
0x16ef	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       600	show-branch.c	FUNCTION_38
0x16f8	            0x7405	                            je 0x400173f	       600	show-branch.c	FUNCTION_38
0x16fa	      0xe800000000	                          call 0x400173f	       600	show-branch.c	FUNCTION_38
0x16ff	              0xc9	                                   leave	       600	show-branch.c	FUNCTION_38
0x1700	              0xc3	                                     ret	       600	show-branch.c	FUNCTION_38
name_commits	functions,0:IF,5:ELSE,1:FOR,4:DO,2:CALL,10:SWITCH,1:WHILE,1	180
0x439	              0x55	                                push rbp	       117	show-branch.c	ELSE_1	FUNCTION_18
0x43a	          0x4889e5	                            mov rbp, rsp	       117	show-branch.c	ELSE_1	FUNCTION_18
0x43d	        0x4883ec70	                           sub rsp, 0x70	       117	show-branch.c	ELSE_1	FUNCTION_18
0x441	        0x48897da8	             mov qword [rbp - 0x58], rdi	       117	show-branch.c	ELSE_1	FUNCTION_18
0x445	        0x488975a0	             mov qword [rbp - 0x60], rsi	       117	show-branch.c	ELSE_1	FUNCTION_18
0x449	        0x48895598	             mov qword [rbp - 0x68], rdx	       117	show-branch.c	ELSE_1	FUNCTION_18
0x44d	          0x894d94	             mov dword [rbp - 0x6c], ecx	       117	show-branch.c	ELSE_1	FUNCTION_18
0x450	    0x64488b042528	                mov rax, qword fs:[0x28]	       117	show-branch.c	ELSE_1	FUNCTION_18
0x459	        0x488945f8	                mov qword [rbp - 8], rax	       117	show-branch.c	ELSE_1	FUNCTION_18
0x45d	            0x31c0	                            xor eax, eax	       117	show-branch.c	ELSE_1	FUNCTION_18
0x45f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       123	show-branch.c	ELSE_1	FUNCTION_18	FOR_1
0x463	        0x488945b8	             mov qword [rbp - 0x48], rax	       123	show-branch.c	ELSE_1	FUNCTION_18	FOR_1
0x467	      0xe986000000	                           jmp 0x4000532	       123	show-branch.c	ELSE_1	FUNCTION_18	FOR_1
0x46c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       124	show-branch.c	ELSE_1	FUNCTION_18	FOR_1
0x470	          0x488b00	                    mov rax, qword [rax]	       124	show-branch.c	ELSE_1	FUNCTION_18	FOR_1
0x473	        0x488945c8	             mov qword [rbp - 0x38], rax	       124	show-branch.c	ELSE_1	FUNCTION_18	FOR_1
0x477	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       125	show-branch.c	ELSE_1	FUNCTION_18	FOR_1	IF_1
0x47b	        0x488b4018	            mov rax, qword [rax + 0x18] 	       125	show-branch.c	ELSE_1	FUNCTION_18	FOR_1	IF_1
0x47f	          0x4885c0	                           test rax, rax	       125	show-branch.c	ELSE_1	FUNCTION_18	FOR_1	IF_1
0x482	            0x7561	                           jne 0x4000525	       125	show-branch.c	ELSE_1	FUNCTION_18	FOR_1	IF_1
0x484	    0xc745b0000000	               mov dword [rbp - 0x50], 0	       127	show-branch.c	ELSE_1	FUNCTION_18	FOR_1	FOR_2
0x48b	            0xeb4e	                           jmp 0x400051b	       127	show-branch.c	ELSE_1	FUNCTION_18	FOR_1	FOR_2
0x48d	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       128	show-branch.c	ELSE_1	FUNCTION_18	FOR_1	FOR_2	IF_2
0x490	            0x4898	                                    cdqe	       128	show-branch.c	ELSE_1	FUNCTION_18	FOR_1	FOR_2	IF_2
0x492	    0x488d14c50000	                        lea rdx, [rax*8]	       128	show-branch.c	ELSE_1	FUNCTION_18	FOR_1	FOR_2	IF_2
0x49a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       128	show-branch.c	ELSE_1	FUNCTION_18	FOR_1	FOR_2	IF_2
0x49e	          0x4801d0	                            add rax, rdx	       128	show-branch.c	ELSE_1	FUNCTION_18	FOR_1	FOR_2	IF_2
0x4a1	          0x488b00	                    mov rax, qword [rax]	       128	show-branch.c	ELSE_1	FUNCTION_18	FOR_1	FOR_2	IF_2
0x4a4	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       128	show-branch.c	ELSE_1	FUNCTION_18	FOR_1	FOR_2	IF_2
0x4a8	            0x752d	                           jne 0x4000517	       128	show-branch.c	ELSE_1	FUNCTION_18	FOR_1	FOR_2	IF_2
0x4aa	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       129	show-branch.c	ELSE_1	FUNCTION_18	FOR_1	FOR_2	IF_2	CALL_1
0x4ad	            0x4898	                                    cdqe	       129	show-branch.c	ELSE_1	FUNCTION_18	FOR_1	FOR_2	IF_2	CALL_1
0x4af	    0x488d14c50000	                        lea rdx, [rax*8]	       129	show-branch.c	ELSE_1	FUNCTION_18	FOR_1	FOR_2	IF_2	CALL_1
0x4b7	        0x488b4598	             mov rax, qword [rbp - 0x68]	       129	show-branch.c	ELSE_1	FUNCTION_18	FOR_1	FOR_2	IF_2	CALL_1
0x4bb	          0x4801d0	                            add rax, rdx	       129	show-branch.c	ELSE_1	FUNCTION_18	FOR_1	FOR_2	IF_2	CALL_1
0x4be	          0x488b08	                    mov rcx, qword [rax]	       129	show-branch.c	ELSE_1	FUNCTION_18	FOR_1	FOR_2	IF_2	CALL_1
0x4c1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       129	show-branch.c	ELSE_1	FUNCTION_18	FOR_1	FOR_2	IF_2	CALL_1
0x4c5	      0xba00000000	                              mov edx, 0	       129	show-branch.c	ELSE_1	FUNCTION_18	FOR_1	FOR_2	IF_2	CALL_1
0x4ca	          0x4889ce	                            mov rsi, rcx	       129	show-branch.c	ELSE_1	FUNCTION_18	FOR_1	FOR_2	IF_2	CALL_1
0x4cd	          0x4889c7	                            mov rdi, rax	       129	show-branch.c	ELSE_1	FUNCTION_18	FOR_1	FOR_2	IF_2	CALL_1
0x4d0	      0xe81cfeffff	                    call sym.name_commit	       129	show-branch.c	ELSE_1	FUNCTION_18	FOR_1	FOR_2	IF_2	CALL_1
0x4d5	            0xeb0f	                           jmp 0x4000526	       130	show-branch.c	ELSE_1	FUNCTION_18	FOR_1	FOR_2	IF_2
0x4d7	        0x8345b001	               add dword [rbp - 0x50], 1	       127	show-branch.c	ELSE_1	FUNCTION_18	FOR_1	FOR_2
0x4db	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       127	show-branch.c	ELSE_1	FUNCTION_18	FOR_1	FOR_2
0x4de	          0x3b4594	             cmp eax, dword [rbp - 0x6c]	       127	show-branch.c	ELSE_1	FUNCTION_18	FOR_1	FOR_2
0x4e1	            0x7caa	                            jl 0x40004cd	       127	show-branch.c	ELSE_1	FUNCTION_18	FOR_1	FOR_2
0x4e3	            0xeb01	                           jmp 0x4000526	       127	show-branch.c	ELSE_1	FUNCTION_18	FOR_1	FOR_2
0x4e5	              0x90	                                     nop	       126	show-branch.c	ELSE_1	FUNCTION_18	FOR_1	IF_1
0x4e6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       123	show-branch.c	ELSE_1	FUNCTION_18	FOR_1
0x4ea	        0x488b4008	                mov rax, qword [rax + 8]	       123	show-branch.c	ELSE_1	FUNCTION_18	FOR_1
0x4ee	        0x488945b8	             mov qword [rbp - 0x48], rax	       123	show-branch.c	ELSE_1	FUNCTION_18	FOR_1
0x4f2	      0x48837db800	               cmp qword [rbp - 0x48], 0	       123	show-branch.c	ELSE_1	FUNCTION_18	FOR_1
0x4f7	     0xf856fffffff	                           jne 0x40004ac	       123	show-branch.c	ELSE_1	FUNCTION_18	FOR_1
0x4fd	    0xc745b0000000	               mov dword [rbp - 0x50], 0	       137	show-branch.c	ELSE_1	FUNCTION_18	DO_1
0x504	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       138	show-branch.c	ELSE_1	FUNCTION_18	DO_1	FOR_3
0x508	        0x488945b8	             mov qword [rbp - 0x48], rax	       138	show-branch.c	ELSE_1	FUNCTION_18	DO_1	FOR_3
0x50c	            0xeb1e	                           jmp 0x400056c	       138	show-branch.c	ELSE_1	FUNCTION_18	DO_1	FOR_3
0x50e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       139	show-branch.c	ELSE_1	FUNCTION_18	DO_1	FOR_3	CALL_2
0x512	          0x488b00	                    mov rax, qword [rax]	       139	show-branch.c	ELSE_1	FUNCTION_18	DO_1	FOR_3	CALL_2
0x515	          0x4889c7	                            mov rdi, rax	       139	show-branch.c	ELSE_1	FUNCTION_18	DO_1	FOR_3	CALL_2
0x518	      0xe89dfeffff	        call sym.name_first_parent_chain	       139	show-branch.c	ELSE_1	FUNCTION_18	DO_1	FOR_3	CALL_2
0x51d	           0x145b0	             add dword [rbp - 0x50], eax	       139	show-branch.c	ELSE_1	FUNCTION_18	DO_1	FOR_3	CALL_2
0x520	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       138	show-branch.c	ELSE_1	FUNCTION_18	DO_1	FOR_3
0x524	        0x488b4008	                mov rax, qword [rax + 8]	       138	show-branch.c	ELSE_1	FUNCTION_18	DO_1	FOR_3
0x528	        0x488945b8	             mov qword [rbp - 0x48], rax	       138	show-branch.c	ELSE_1	FUNCTION_18	DO_1	FOR_3
0x52c	      0x48837db800	               cmp qword [rbp - 0x48], 0	       138	show-branch.c	ELSE_1	FUNCTION_18	DO_1	FOR_3
0x531	            0x75db	                           jne 0x400054e	       138	show-branch.c	ELSE_1	FUNCTION_18	DO_1	FOR_3
0x533	        0x837db000	               cmp dword [rbp - 0x50], 0	       141	show-branch.c	ELSE_1	FUNCTION_18	DO_1
0x537	            0x75c4	                           jne 0x400053d	       141	show-branch.c	ELSE_1	FUNCTION_18	DO_1
0x539	    0xc745b0000000	               mov dword [rbp - 0x50], 0	       145	show-branch.c	ELSE_1	FUNCTION_18	DO_2
0x540	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       146	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4
0x544	        0x488945b8	             mov qword [rbp - 0x48], rax	       146	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4
0x548	      0xe977010000	                           jmp 0x4000704	       146	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4
0x54d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       150	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4
0x551	          0x488b00	                    mov rax, qword [rax]	       150	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4
0x554	        0x488945c8	             mov qword [rbp - 0x38], rax	       150	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4
0x558	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       151	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	IF_3
0x55c	        0x488b4018	            mov rax, qword [rax + 0x18] 	       151	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	IF_3
0x560	          0x4885c0	                           test rax, rax	       151	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	IF_3
0x563	     0xf844e010000	                            je 0x40006f7	       151	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	IF_3
0x569	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       153	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4
0x56d	        0x488b4018	            mov rax, qword [rax + 0x18] 	       153	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4
0x571	        0x488945d0	             mov qword [rbp - 0x30], rax	       153	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4
0x575	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       154	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4
0x579	        0x488b4030	            mov rax, qword [rax + 0x30] 	       154	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4
0x57d	        0x488945c0	             mov qword [rbp - 0x40], rax	       154	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4
0x581	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	       155	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4
0x588	      0xe91d010000	                           jmp 0x40006ea	       156	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4
0x58d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       157	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4
0x591	          0x488b00	                    mov rax, qword [rax]	       157	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4
0x594	        0x488945d8	             mov qword [rbp - 0x28], rax	       157	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4
0x598	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       158	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4
0x5a0	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       158	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4
0x5a8	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       158	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4
0x5b0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       159	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4
0x5b4	        0x488b4008	                mov rax, qword [rax + 8]	       159	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4
0x5b8	        0x488945c0	             mov qword [rbp - 0x40], rax	       159	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4
0x5bc	        0x8345b401	               add dword [rbp - 0x4c], 1	       160	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4
0x5c0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       161	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	IF_4
0x5c4	        0x488b4018	            mov rax, qword [rax + 0x18] 	       161	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	IF_4
0x5c8	          0x4885c0	                           test rax, rax	       161	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	IF_4
0x5cb	            0x7405	                            je 0x4000612	       161	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	IF_4
0x5cd	      0xe9d8000000	                           jmp 0x40006ea	       161	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	IF_4
0x5d2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       163	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	SWITCH_1
0x5d6	          0x8b4008	                mov eax, dword [rax + 8]	       163	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	SWITCH_1
0x5d9	            0x85c0	                           test eax, eax	       163	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	SWITCH_1
0x5db	            0x7407	                            je 0x4000624	       163	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	SWITCH_1
0x5dd	          0x83f801	                              cmp eax, 1	       163	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	SWITCH_1
0x5e0	            0x741a	                            je 0x400063c	       163	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	SWITCH_1
0x5e2	            0xeb37	                           jmp 0x400065b	       163	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	SWITCH_1
0x5e4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       165	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	SWITCH_1	CALL_3
0x5e8	          0x488b10	                    mov rdx, qword [rax]	       165	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	SWITCH_1	CALL_3
0x5eb	        0x488d45e0	                   lea rax, [rbp - 0x20]	       165	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	SWITCH_1	CALL_3
0x5ef	          0x4889d6	                            mov rsi, rdx	       165	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	SWITCH_1	CALL_3
0x5f2	          0x4889c7	                            mov rdi, rax	       165	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	SWITCH_1	CALL_3
0x5f5	      0xe845fbffff	                  call sym.strbuf_addstr	       165	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	SWITCH_1	CALL_3
0x5fa	            0xeb44	                           jmp 0x4000680	       166	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	SWITCH_1
0x5fc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       168	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	SWITCH_1	CALL_4
0x600	          0x488b10	                    mov rdx, qword [rax]	       168	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	SWITCH_1	CALL_4
0x603	        0x488d45e0	                   lea rax, [rbp - 0x20]	       168	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	SWITCH_1	CALL_4
0x607	      0xbe00000000	                              mov esi, 0	       168	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	SWITCH_1	CALL_4
0x60c	          0x4889c7	                            mov rdi, rax	       168	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	SWITCH_1	CALL_4
0x60f	      0xb800000000	                              mov eax, 0	       168	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	SWITCH_1	CALL_4
0x614	      0xe800000000	                          call 0x4000659	       168	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	SWITCH_1	CALL_4
0x619	            0xeb25	                           jmp 0x4000680	       169	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	SWITCH_1
0x61b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       171	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	SWITCH_1	CALL_5
0x61f	          0x8b4808	                mov ecx, dword [rax + 8]	       171	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	SWITCH_1	CALL_5
0x622	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       171	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	SWITCH_1	CALL_5
0x626	          0x488b10	                    mov rdx, qword [rax]	       171	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	SWITCH_1	CALL_5
0x629	        0x488d45e0	                   lea rax, [rbp - 0x20]	       171	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	SWITCH_1	CALL_5
0x62d	      0xbe00000000	                              mov esi, 0	       171	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	SWITCH_1	CALL_5
0x632	          0x4889c7	                            mov rdi, rax	       171	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	SWITCH_1	CALL_5
0x635	      0xb800000000	                              mov eax, 0	       171	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	SWITCH_1	CALL_5
0x63a	      0xe800000000	                          call 0x400067f	       171	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	SWITCH_1	CALL_5
0x63f	              0x90	                                     nop	       173	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	SWITCH_1
0x640	        0x837db401	               cmp dword [rbp - 0x4c], 1	       175	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	IF_5
0x644	            0x7513	                           jne 0x4000699	       175	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	IF_5
0x646	        0x488d45e0	                   lea rax, [rbp - 0x20]	       176	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	CALL_6
0x64a	      0xbe5e000000	                           mov esi, 0x5e	       176	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	CALL_6
0x64f	          0x4889c7	                            mov rdi, rax	       176	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	CALL_6
0x652	      0xe87afaffff	                   call sym.strbuf_addch	       176	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	CALL_6
0x657	            0xeb19	                           jmp 0x40006b2	       176	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	CALL_6
0x659	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       178	show-branch.c	FUNCTION_18	DO_2	FOR_4	ELSE_1	CALL_7
0x65c	        0x488d45e0	                   lea rax, [rbp - 0x20]	       178	show-branch.c	FUNCTION_18	DO_2	FOR_4	ELSE_1	CALL_7
0x660	      0xbe00000000	                              mov esi, 0	       178	show-branch.c	FUNCTION_18	DO_2	FOR_4	ELSE_1	CALL_7
0x665	          0x4889c7	                            mov rdi, rax	       178	show-branch.c	FUNCTION_18	DO_2	FOR_4	ELSE_1	CALL_7
0x668	      0xb800000000	                              mov eax, 0	       178	show-branch.c	FUNCTION_18	DO_2	FOR_4	ELSE_1	CALL_7
0x66d	      0xe800000000	                          call 0x40006b2	       178	show-branch.c	FUNCTION_18	DO_2	FOR_4	ELSE_1	CALL_7
0x672	        0x488d45e0	                   lea rax, [rbp - 0x20]	       179	show-branch.c	FUNCTION_18	DO_2	FOR_4	ELSE_1	CALL_9
0x676	      0xbe00000000	                              mov esi, 0	       179	show-branch.c	FUNCTION_18	DO_2	FOR_4	ELSE_1	CALL_9
0x67b	          0x4889c7	                            mov rdi, rax	       179	show-branch.c	FUNCTION_18	DO_2	FOR_4	ELSE_1	CALL_9
0x67e	      0xe800000000	                          call 0x40006c3	       179	show-branch.c	FUNCTION_18	DO_2	FOR_4	ELSE_1	CALL_9
0x683	          0x4889c1	                            mov rcx, rax	       179	show-branch.c	FUNCTION_18	DO_2	FOR_4	ELSE_1	CALL_9
0x686	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       179	show-branch.c	FUNCTION_18	DO_2	FOR_4	ELSE_1	CALL_9
0x68a	      0xba00000000	                              mov edx, 0	       179	show-branch.c	FUNCTION_18	DO_2	FOR_4	ELSE_1	CALL_9
0x68f	          0x4889ce	                            mov rsi, rcx	       179	show-branch.c	FUNCTION_18	DO_2	FOR_4	ELSE_1	CALL_9
0x692	          0x4889c7	                            mov rdi, rax	       179	show-branch.c	FUNCTION_18	DO_2	FOR_4	ELSE_1	CALL_9
0x695	      0xe857fcffff	                    call sym.name_commit	       179	show-branch.c	FUNCTION_18	DO_2	FOR_4	ELSE_1	CALL_9
0x69a	        0x8345b001	               add dword [rbp - 0x50], 1	       180	show-branch.c	FUNCTION_18	DO_2	FOR_4	ELSE_1
0x69e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       181	show-branch.c	FUNCTION_18	DO_2	FOR_4	ELSE_1	CALL_10
0x6a2	          0x4889c7	                            mov rdi, rax	       181	show-branch.c	FUNCTION_18	DO_2	FOR_4	ELSE_1	CALL_10
0x6a5	      0xe810fdffff	        call sym.name_first_parent_chain	       181	show-branch.c	FUNCTION_18	DO_2	FOR_4	ELSE_1	CALL_10
0x6aa	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       156	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4
0x6af	     0xf85d8feffff	                           jne 0x40005cd	       156	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4
0x6b5	            0xeb01	                           jmp 0x40006f8	       156	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4
0x6b7	              0x90	                                     nop	       152	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4	IF_3
0x6b8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       146	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4
0x6bc	        0x488b4008	                mov rax, qword [rax + 8]	       146	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4
0x6c0	        0x488945b8	             mov qword [rbp - 0x48], rax	       146	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4
0x6c4	      0x48837db800	               cmp qword [rbp - 0x48], 0	       146	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4
0x6c9	     0xf857efeffff	                           jne 0x400058d	       146	show-branch.c	ELSE_1	FUNCTION_18	DO_2	FOR_4
0x6cf	        0x837db000	               cmp dword [rbp - 0x50], 0	       184	show-branch.c	FUNCTION_18	ELSE_1	WHILE_1
0x6d3	     0xf8560feffff	                           jne 0x4000579	       184	show-branch.c	FUNCTION_18	ELSE_1	WHILE_1
0x6d9	              0x90	                                     nop	       185	show-branch.c	FUNCTION_18	ELSE_1
0x6da	        0x488b45f8	                mov rax, qword [rbp - 8]	       185	show-branch.c	FUNCTION_18	ELSE_1
0x6de	    0x644833042528	                xor rax, qword fs:[0x28]	       185	show-branch.c	FUNCTION_18	ELSE_1
0x6e7	            0x7405	                            je 0x400072e	       185	show-branch.c	FUNCTION_18	ELSE_1
0x6e9	      0xe800000000	                          call 0x400072e	       185	show-branch.c	FUNCTION_18	ELSE_1
0x6ee	              0xc9	                                   leave	       185	show-branch.c	FUNCTION_18	ELSE_1
0x6ef	              0xc3	                                     ret	       185	show-branch.c	FUNCTION_18	ELSE_1
get_color_reset_code	functions,0:IF,1:ELSE,0:FOR,0:DO,0:CALL,1:SWITCH,0:WHILE,0	13
0x27d	              0x55	                                push rbp	        39	show-branch.c	FUNCTION_13
0x27e	          0x4889e5	                            mov rbp, rsp	        39	show-branch.c	FUNCTION_13
0x281	    0x8b0500000000	            mov eax, dword [0x040002c7] 	        40	show-branch.c	FUNCTION_13	IF_1	CALL_1
0x287	            0x89c6	                            mov esi, eax	        40	show-branch.c	FUNCTION_13	IF_1	CALL_1
0x289	      0xbf01000000	                              mov edi, 1	        40	show-branch.c	FUNCTION_13	IF_1	CALL_1
0x28e	      0xe800000000	                          call 0x40002d3	        40	show-branch.c	FUNCTION_13	IF_1	CALL_1
0x293	            0x85c0	                           test eax, eax	        40	show-branch.c	FUNCTION_13	IF_1	CALL_1
0x295	            0x7407	                            je 0x40002de	        40	show-branch.c	FUNCTION_13	IF_1	CALL_1
0x297	      0xb800000000	                              mov eax, 0	        41	show-branch.c	FUNCTION_13	IF_1
0x29c	            0xeb05	                           jmp 0x40002e3	        41	show-branch.c	FUNCTION_13	IF_1
0x29e	      0xb800000000	                              mov eax, 0	        42	show-branch.c	FUNCTION_13
0x2a3	              0x5d	                                 pop rbp	        43	show-branch.c	FUNCTION_13
0x2a4	              0xc3	                                     ret	        43	show-branch.c	FUNCTION_13
show_independent	functions,0:IF,1:ELSE,0:FOR,1:DO,0:CALL,2:SWITCH,0:WHILE,0	56
0x12b7	              0x55	                                push rbp	       500	show-branch.c	FUNCTION_34
0x12b8	          0x4889e5	                            mov rbp, rsp	       500	show-branch.c	FUNCTION_34
0x12bb	        0x4883ec30	                           sub rsp, 0x30	       500	show-branch.c	FUNCTION_34
0x12bf	        0x48897de8	             mov qword [rbp - 0x18], rdi	       500	show-branch.c	FUNCTION_34
0x12c3	          0x8975e4	             mov dword [rbp - 0x1c], esi	       500	show-branch.c	FUNCTION_34
0x12c6	        0x488955d8	             mov qword [rbp - 0x28], rdx	       500	show-branch.c	FUNCTION_34
0x12ca	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       500	show-branch.c	FUNCTION_34
0x12ce	    0xc745f0000000	               mov dword [rbp - 0x10], 0	       503	show-branch.c	FUNCTION_34	FOR_1
0x12d5	      0xe991000000	                           jmp 0x40013ab	       503	show-branch.c	FUNCTION_34	FOR_1
0x12da	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       504	show-branch.c	FUNCTION_34	FOR_1
0x12dd	            0x4898	                                    cdqe	       504	show-branch.c	FUNCTION_34	FOR_1
0x12df	    0x488d14c50000	                        lea rdx, [rax*8]	       504	show-branch.c	FUNCTION_34	FOR_1
0x12e7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       504	show-branch.c	FUNCTION_34	FOR_1
0x12eb	          0x4801d0	                            add rax, rdx	       504	show-branch.c	FUNCTION_34	FOR_1
0x12ee	          0x488b00	                    mov rax, qword [rax]	       504	show-branch.c	FUNCTION_34	FOR_1
0x12f1	        0x488945f8	                mov qword [rbp - 8], rax	       504	show-branch.c	FUNCTION_34	FOR_1
0x12f5	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       505	show-branch.c	FUNCTION_34	FOR_1
0x12f8	            0x4898	                                    cdqe	       505	show-branch.c	FUNCTION_34	FOR_1
0x12fa	    0x488d14850000	                        lea rdx, [rax*4]	       505	show-branch.c	FUNCTION_34	FOR_1
0x1302	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       505	show-branch.c	FUNCTION_34	FOR_1
0x1306	          0x4801d0	                            add rax, rdx	       505	show-branch.c	FUNCTION_34	FOR_1
0x1309	            0x8b00	                    mov eax, dword [rax]	       505	show-branch.c	FUNCTION_34	FOR_1
0x130b	          0x8945f4	              mov dword [rbp - 0xc], eax	       505	show-branch.c	FUNCTION_34	FOR_1
0x130e	        0x488b45f8	                mov rax, qword [rbp - 8]	       507	show-branch.c	FUNCTION_34	FOR_1	IF_1
0x1312	            0x8b00	                    mov eax, dword [rax]	       507	show-branch.c	FUNCTION_34	FOR_1	IF_1
0x1314	          0xc1e804	                              shr eax, 4	       507	show-branch.c	FUNCTION_34	FOR_1	IF_1
0x1317	      0x25ffffff07	                      and eax, 0x7ffffff	       507	show-branch.c	FUNCTION_34	FOR_1	IF_1
0x131c	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       507	show-branch.c	FUNCTION_34	FOR_1	IF_1
0x131f	            0x7518	                           jne 0x4001379	       507	show-branch.c	FUNCTION_34	FOR_1	IF_1
0x1321	        0x488b45f8	                mov rax, qword [rbp - 8]	       508	show-branch.c	FUNCTION_34	FOR_1	CALL_2
0x1325	        0x4883c004	                              add rax, 4	       508	show-branch.c	FUNCTION_34	FOR_1	CALL_2
0x1329	          0x4889c7	                            mov rdi, rax	       508	show-branch.c	FUNCTION_34	FOR_1	CALL_2
0x132c	      0xe800000000	                          call 0x4001371	       508	show-branch.c	FUNCTION_34	FOR_1	CALL_2
0x1331	          0x4889c7	                            mov rdi, rax	       508	show-branch.c	FUNCTION_34	FOR_1	CALL_2
0x1334	      0xe800000000	                          call 0x4001379	       508	show-branch.c	FUNCTION_34	FOR_1	CALL_2
0x1339	        0x488b45f8	                mov rax, qword [rbp - 8]	       509	show-branch.c	FUNCTION_34	FOR_1
0x133d	            0x8b00	                    mov eax, dword [rax]	       509	show-branch.c	FUNCTION_34	FOR_1
0x133f	          0xc1e804	                              shr eax, 4	       509	show-branch.c	FUNCTION_34	FOR_1
0x1342	      0x25ffffff07	                      and eax, 0x7ffffff	       509	show-branch.c	FUNCTION_34	FOR_1
0x1347	          0x83c801	                               or eax, 1	       509	show-branch.c	FUNCTION_34	FOR_1
0x134a	            0x89c2	                            mov edx, eax	       509	show-branch.c	FUNCTION_34	FOR_1
0x134c	        0x488b45f8	                mov rax, qword [rbp - 8]	       509	show-branch.c	FUNCTION_34	FOR_1
0x1350	    0x81e2ffffff07	                      and edx, 0x7ffffff	       509	show-branch.c	FUNCTION_34	FOR_1
0x1356	            0x89d1	                            mov ecx, edx	       509	show-branch.c	FUNCTION_34	FOR_1
0x1358	          0xc1e104	                              shl ecx, 4	       509	show-branch.c	FUNCTION_34	FOR_1
0x135b	            0x8b10	                    mov edx, dword [rax]	       509	show-branch.c	FUNCTION_34	FOR_1
0x135d	    0x81e20f000080	                     and edx, 0x8000000f	       509	show-branch.c	FUNCTION_34	FOR_1
0x1363	             0x9ca	                             or edx, ecx	       509	show-branch.c	FUNCTION_34	FOR_1
0x1365	            0x8910	                    mov dword [rax], edx	       509	show-branch.c	FUNCTION_34	FOR_1
0x1367	        0x8345f001	               add dword [rbp - 0x10], 1	       503	show-branch.c	FUNCTION_34	FOR_1
0x136b	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       503	show-branch.c	FUNCTION_34	FOR_1
0x136e	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	       503	show-branch.c	FUNCTION_34	FOR_1
0x1371	     0xf8c63ffffff	                            jl 0x400131a	       503	show-branch.c	FUNCTION_34	FOR_1
0x1377	      0xb800000000	                              mov eax, 0	       511	show-branch.c	FUNCTION_34
0x137c	              0xc9	                                   leave	       512	show-branch.c	FUNCTION_34
0x137d	              0xc3	                                     ret	       512	show-branch.c	FUNCTION_34
show_merge_base	functions,0:IF,1:ELSE,0:FOR,0:DO,0:CALL,3:SWITCH,0:WHILE,1	63
0x11e4	              0x55	                                push rbp	       478	show-branch.c	FUNCTION_33
0x11e5	          0x4889e5	                            mov rbp, rsp	       478	show-branch.c	FUNCTION_33
0x11e8	        0x4883ec30	                           sub rsp, 0x30	       478	show-branch.c	FUNCTION_33
0x11ec	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       478	show-branch.c	FUNCTION_33
0x11f0	          0x8975d4	             mov dword [rbp - 0x2c], esi	       478	show-branch.c	FUNCTION_33
0x11f3	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       479	show-branch.c	FUNCTION_33
0x11f6	          0x83c002	                              add eax, 2	       479	show-branch.c	FUNCTION_33
0x11f9	      0xba01000000	                              mov edx, 1	       479	show-branch.c	FUNCTION_33
0x11fe	            0x89c1	                            mov ecx, eax	       479	show-branch.c	FUNCTION_33
0x1200	            0xd3e2	                             shl edx, cl	       479	show-branch.c	FUNCTION_33
0x1202	            0x89d0	                            mov eax, edx	       479	show-branch.c	FUNCTION_33
0x1204	          0x83e801	                              sub eax, 1	       479	show-branch.c	FUNCTION_33
0x1207	          0x8945ec	             mov dword [rbp - 0x14], eax	       479	show-branch.c	FUNCTION_33
0x120a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       480	show-branch.c	FUNCTION_33
0x120d	          0x83e0fc	                     and eax, 0xfffffffc	       480	show-branch.c	FUNCTION_33
0x1210	          0x8945f0	             mov dword [rbp - 0x10], eax	       480	show-branch.c	FUNCTION_33
0x1213	    0xc745e8010000	               mov dword [rbp - 0x18], 1	       481	show-branch.c	FUNCTION_33
0x121a	      0xe986000000	                           jmp 0x40012e5	       483	show-branch.c	FUNCTION_33	WHILE_1
0x121f	        0x488d45d8	                   lea rax, [rbp - 0x28]	       484	show-branch.c	FUNCTION_33	WHILE_1	CALL_1
0x1223	          0x4889c7	                            mov rdi, rax	       484	show-branch.c	FUNCTION_33	WHILE_1	CALL_1
0x1226	      0xe800000000	                          call 0x400126b	       484	show-branch.c	FUNCTION_33	WHILE_1	CALL_1
0x122b	        0x488945f8	                mov qword [rbp - 8], rax	       484	show-branch.c	FUNCTION_33	WHILE_1	CALL_1
0x122f	        0x488b45f8	                mov rax, qword [rbp - 8]	       485	show-branch.c	FUNCTION_33	WHILE_1
0x1233	            0x8b00	                    mov eax, dword [rax]	       485	show-branch.c	FUNCTION_33	WHILE_1
0x1235	          0xc1e804	                              shr eax, 4	       485	show-branch.c	FUNCTION_33	WHILE_1
0x1238	      0x25ffffff07	                      and eax, 0x7ffffff	       485	show-branch.c	FUNCTION_33	WHILE_1
0x123d	          0x2345ec	             and eax, dword [rbp - 0x14]	       485	show-branch.c	FUNCTION_33	WHILE_1
0x1240	          0x8945f4	              mov dword [rbp - 0xc], eax	       485	show-branch.c	FUNCTION_33	WHILE_1
0x1243	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       486	show-branch.c	FUNCTION_33	WHILE_1	IF_1
0x1246	          0x83e001	                              and eax, 1	       486	show-branch.c	FUNCTION_33	WHILE_1	IF_1
0x1249	            0x85c0	                           test eax, eax	       486	show-branch.c	FUNCTION_33	WHILE_1	IF_1
0x124b	            0x7558	                           jne 0x40012e5	       486	show-branch.c	FUNCTION_33	WHILE_1	IF_1
0x124d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       487	show-branch.c	FUNCTION_33	WHILE_1	IF_1
0x1250	          0x2345f0	             and eax, dword [rbp - 0x10]	       487	show-branch.c	FUNCTION_33	WHILE_1	IF_1
0x1253	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	       486	show-branch.c	FUNCTION_33	WHILE_1	IF_1
0x1256	            0x754d	                           jne 0x40012e5	       486	show-branch.c	FUNCTION_33	WHILE_1	IF_1
0x1258	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	show-branch.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x125c	        0x4883c004	                              add rax, 4	       488	show-branch.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x1260	          0x4889c7	                            mov rdi, rax	       488	show-branch.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x1263	      0xe800000000	                          call 0x40012a8	       488	show-branch.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x1268	          0x4889c7	                            mov rdi, rax	       488	show-branch.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x126b	      0xe800000000	                          call 0x40012b0	       488	show-branch.c	FUNCTION_33	WHILE_1	IF_1	CALL_3
0x1270	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       489	show-branch.c	FUNCTION_33	WHILE_1	IF_1
0x1277	        0x488b45f8	                mov rax, qword [rbp - 8]	       490	show-branch.c	FUNCTION_33	WHILE_1	IF_1
0x127b	            0x8b00	                    mov eax, dword [rax]	       490	show-branch.c	FUNCTION_33	WHILE_1	IF_1
0x127d	          0xc1e804	                              shr eax, 4	       490	show-branch.c	FUNCTION_33	WHILE_1	IF_1
0x1280	      0x25ffffff07	                      and eax, 0x7ffffff	       490	show-branch.c	FUNCTION_33	WHILE_1	IF_1
0x1285	          0x83c801	                               or eax, 1	       490	show-branch.c	FUNCTION_33	WHILE_1	IF_1
0x1288	            0x89c2	                            mov edx, eax	       490	show-branch.c	FUNCTION_33	WHILE_1	IF_1
0x128a	        0x488b45f8	                mov rax, qword [rbp - 8]	       490	show-branch.c	FUNCTION_33	WHILE_1	IF_1
0x128e	    0x81e2ffffff07	                      and edx, 0x7ffffff	       490	show-branch.c	FUNCTION_33	WHILE_1	IF_1
0x1294	            0x89d1	                            mov ecx, edx	       490	show-branch.c	FUNCTION_33	WHILE_1	IF_1
0x1296	          0xc1e104	                              shl ecx, 4	       490	show-branch.c	FUNCTION_33	WHILE_1	IF_1
0x1299	            0x8b10	                    mov edx, dword [rax]	       490	show-branch.c	FUNCTION_33	WHILE_1	IF_1
0x129b	    0x81e20f000080	                     and edx, 0x8000000f	       490	show-branch.c	FUNCTION_33	WHILE_1	IF_1
0x12a1	             0x9ca	                             or edx, ecx	       490	show-branch.c	FUNCTION_33	WHILE_1	IF_1
0x12a3	            0x8910	                    mov dword [rax], edx	       490	show-branch.c	FUNCTION_33	WHILE_1	IF_1
0x12a5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       483	show-branch.c	FUNCTION_33	WHILE_1
0x12a9	          0x4885c0	                           test rax, rax	       483	show-branch.c	FUNCTION_33	WHILE_1
0x12ac	     0xf856dffffff	                           jne 0x400125f	       483	show-branch.c	FUNCTION_33	WHILE_1
0x12b2	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       493	show-branch.c	FUNCTION_33
0x12b5	              0xc9	                                   leave	       494	show-branch.c	FUNCTION_33
0x12b6	              0xc3	                                     ret	       494	show-branch.c	FUNCTION_33
join_revs	functions,0:IF,7:ELSE,0:FOR,2:DO,0:CALL,6:SWITCH,0:WHILE,3	181
0x730	              0x55	                                push rbp	       199	show-branch.c	FUNCTION_20
0x731	          0x4889e5	                            mov rbp, rsp	       199	show-branch.c	FUNCTION_20
0x734	        0x4883ec70	                           sub rsp, 0x70	       199	show-branch.c	FUNCTION_20
0x738	        0x48897da8	             mov qword [rbp - 0x58], rdi	       199	show-branch.c	FUNCTION_20
0x73c	        0x488975a0	             mov qword [rbp - 0x60], rsi	       199	show-branch.c	FUNCTION_20
0x740	          0x89559c	             mov dword [rbp - 0x64], edx	       199	show-branch.c	FUNCTION_20
0x743	          0x894d98	             mov dword [rbp - 0x68], ecx	       199	show-branch.c	FUNCTION_20
0x746	          0x8b459c	             mov eax, dword [rbp - 0x64]	       200	show-branch.c	FUNCTION_20
0x749	          0x83c002	                              add eax, 2	       200	show-branch.c	FUNCTION_20
0x74c	      0xba01000000	                              mov edx, 1	       200	show-branch.c	FUNCTION_20
0x751	            0x89c1	                            mov ecx, eax	       200	show-branch.c	FUNCTION_20
0x753	            0xd3e2	                             shl edx, cl	       200	show-branch.c	FUNCTION_20
0x755	            0x89d0	                            mov eax, edx	       200	show-branch.c	FUNCTION_20
0x757	          0x83e801	                              sub eax, 1	       200	show-branch.c	FUNCTION_20
0x75a	          0x8945b8	             mov dword [rbp - 0x48], eax	       200	show-branch.c	FUNCTION_20
0x75d	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       201	show-branch.c	FUNCTION_20
0x760	          0x83e0fc	                     and eax, 0xfffffffc	       201	show-branch.c	FUNCTION_20
0x763	          0x8945bc	             mov dword [rbp - 0x44], eax	       201	show-branch.c	FUNCTION_20
0x766	      0xe936010000	                           jmp 0x40008e1	       203	show-branch.c	FUNCTION_20	WHILE_1
0x76b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       205	show-branch.c	FUNCTION_20	WHILE_1	CALL_1
0x76f	          0x488b00	                    mov rax, qword [rax]	       205	show-branch.c	FUNCTION_20	WHILE_1	CALL_1
0x772	          0x4889c7	                            mov rdi, rax	       205	show-branch.c	FUNCTION_20	WHILE_1	CALL_1
0x775	      0xe82bfbffff	                    call sym.interesting	       205	show-branch.c	FUNCTION_20	WHILE_1	CALL_1
0x77a	          0x4885c0	                           test rax, rax	       205	show-branch.c	FUNCTION_20	WHILE_1	CALL_1
0x77d	           0xf95c0	                                setne al	       205	show-branch.c	FUNCTION_20	WHILE_1	CALL_1
0x780	           0xfb6c0	                           movzx eax, al	       205	show-branch.c	FUNCTION_20	WHILE_1	CALL_1
0x783	          0x8945c0	             mov dword [rbp - 0x40], eax	       205	show-branch.c	FUNCTION_20	WHILE_1	CALL_1
0x786	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       206	show-branch.c	FUNCTION_20	WHILE_1	CALL_2
0x78a	          0x4889c7	                            mov rdi, rax	       206	show-branch.c	FUNCTION_20	WHILE_1	CALL_2
0x78d	      0xe800000000	                          call 0x40007d2	       206	show-branch.c	FUNCTION_20	WHILE_1	CALL_2
0x792	        0x488945e0	             mov qword [rbp - 0x20], rax	       206	show-branch.c	FUNCTION_20	WHILE_1	CALL_2
0x796	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       207	show-branch.c	FUNCTION_20	WHILE_1
0x79a	            0x8b00	                    mov eax, dword [rax]	       207	show-branch.c	FUNCTION_20	WHILE_1
0x79c	          0xc1e804	                              shr eax, 4	       207	show-branch.c	FUNCTION_20	WHILE_1
0x79f	      0x25ffffff07	                      and eax, 0x7ffffff	       207	show-branch.c	FUNCTION_20	WHILE_1
0x7a4	          0x2345b8	             and eax, dword [rbp - 0x48]	       207	show-branch.c	FUNCTION_20	WHILE_1
0x7a7	          0x8945b0	             mov dword [rbp - 0x50], eax	       207	show-branch.c	FUNCTION_20	WHILE_1
0x7aa	        0x837dc000	               cmp dword [rbp - 0x40], 0	       209	show-branch.c	FUNCTION_20	WHILE_1	IF_1
0x7ae	            0x750b	                           jne 0x40007fb	       209	show-branch.c	FUNCTION_20	WHILE_1	IF_1
0x7b0	        0x837d9800	               cmp dword [rbp - 0x68], 0	       209	show-branch.c	FUNCTION_20	WHILE_1	IF_1
0x7b4	            0x7f05	                            jg 0x40007fb	       209	show-branch.c	FUNCTION_20	WHILE_1	IF_1
0x7b6	      0xe9f6000000	                           jmp 0x40008f1	       210	show-branch.c	FUNCTION_20	WHILE_1	IF_1
0x7bb	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       212	show-branch.c	FUNCTION_20	WHILE_1	CALL_3
0x7bf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       212	show-branch.c	FUNCTION_20	WHILE_1	CALL_3
0x7c3	          0x4889d6	                            mov rsi, rdx	       212	show-branch.c	FUNCTION_20	WHILE_1	CALL_3
0x7c6	          0x4889c7	                            mov rdi, rax	       212	show-branch.c	FUNCTION_20	WHILE_1	CALL_3
0x7c9	      0xe822ffffff	                      call sym.mark_seen	       212	show-branch.c	FUNCTION_20	WHILE_1	CALL_3
0x7ce	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       213	show-branch.c	FUNCTION_20	WHILE_1	IF_2
0x7d1	          0x2345bc	             and eax, dword [rbp - 0x44]	       213	show-branch.c	FUNCTION_20	WHILE_1	IF_2
0x7d4	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	       213	show-branch.c	FUNCTION_20	WHILE_1	IF_2
0x7d7	            0x7504	                           jne 0x400081d	       213	show-branch.c	FUNCTION_20	WHILE_1	IF_2
0x7d9	        0x834db001	                or dword [rbp - 0x50], 1	       214	show-branch.c	FUNCTION_20	WHILE_1	IF_2
0x7dd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       215	show-branch.c	FUNCTION_20	WHILE_1
0x7e1	        0x488b4030	            mov rax, qword [rax + 0x30] 	       215	show-branch.c	FUNCTION_20	WHILE_1
0x7e5	        0x488945c8	             mov qword [rbp - 0x38], rax	       215	show-branch.c	FUNCTION_20	WHILE_1
0x7e9	      0xe9a8000000	                           jmp 0x40008d6	       217	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2
0x7ee	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       218	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2
0x7f2	          0x488b00	                    mov rax, qword [rax]	       218	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2
0x7f5	        0x488945e8	             mov qword [rbp - 0x18], rax	       218	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2
0x7f9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       219	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2
0x7fd	            0x8b00	                    mov eax, dword [rax]	       219	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2
0x7ff	          0xc1e804	                              shr eax, 4	       219	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2
0x802	      0x25ffffff07	                      and eax, 0x7ffffff	       219	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2
0x807	          0x8945c4	             mov dword [rbp - 0x3c], eax	       219	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2
0x80a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       220	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2
0x80e	        0x488b4008	                mov rax, qword [rax + 8]	       220	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2
0x812	        0x488945c8	             mov qword [rbp - 0x38], rax	       220	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2
0x816	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       221	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2	IF_3
0x819	          0x2345b0	             and eax, dword [rbp - 0x50]	       221	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2	IF_3
0x81c	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	       221	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2	IF_3
0x81f	            0x7502	                           jne 0x4000863	       221	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2	IF_3
0x821	            0xeb73	                           jmp 0x40008d6	       222	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2	IF_3
0x823	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       223	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2	CALL_4
0x827	          0x4889c7	                            mov rdi, rax	       223	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2	CALL_4
0x82a	      0xe8edf9ffff	                   call sym.parse_commit	       223	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2	CALL_4
0x82f	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       224	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2	IF_4	CALL_5
0x833	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       224	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2	IF_4	CALL_5
0x837	          0x4889d6	                            mov rsi, rdx	       224	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2	IF_4	CALL_5
0x83a	          0x4889c7	                            mov rdi, rax	       224	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2	IF_4	CALL_5
0x83d	      0xe8aefeffff	                      call sym.mark_seen	       224	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2	IF_4	CALL_5
0x842	            0x85c0	                           test eax, eax	       224	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2	IF_4	CALL_5
0x844	            0x740a	                            je 0x4000890	       224	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2	IF_4	CALL_5
0x846	        0x837dc000	               cmp dword [rbp - 0x40], 0	       224	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2	IF_4	CALL_5
0x84a	            0x7504	                           jne 0x4000890	       224	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2	IF_4	CALL_5
0x84c	        0x836d9801	               sub dword [rbp - 0x68], 1	       225	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2	IF_4
0x850	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       226	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2
0x854	            0x8b00	                    mov eax, dword [rax]	       226	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2
0x856	          0xc1e804	                              shr eax, 4	       226	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2
0x859	      0x25ffffff07	                      and eax, 0x7ffffff	       226	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2
0x85e	           0xb45b0	              or eax, dword [rbp - 0x50]	       226	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2
0x861	      0x25ffffff07	                      and eax, 0x7ffffff	       226	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2
0x866	            0x89c2	                            mov edx, eax	       226	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2
0x868	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       226	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2
0x86c	    0x81e2ffffff07	                      and edx, 0x7ffffff	       226	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2
0x872	            0x89d1	                            mov ecx, edx	       226	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2
0x874	          0xc1e104	                              shl ecx, 4	       226	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2
0x877	            0x8b10	                    mov edx, dword [rax]	       226	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2
0x879	    0x81e20f000080	                     and edx, 0x8000000f	       226	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2
0x87f	             0x9ca	                             or edx, ecx	       226	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2
0x881	            0x8910	                    mov dword [rax], edx	       226	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2
0x883	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       227	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2	CALL_6
0x887	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       227	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2	CALL_6
0x88b	          0x4889d6	                            mov rsi, rdx	       227	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2	CALL_6
0x88e	          0x4889c7	                            mov rdi, rax	       227	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2	CALL_6
0x891	      0xe800000000	                          call 0x40008d6	       227	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2	CALL_6
0x896	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       217	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2
0x89b	     0xf854dffffff	                           jne 0x400082e	       217	show-branch.c	FUNCTION_20	WHILE_1	WHILE_2
0x8a1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       203	show-branch.c	FUNCTION_20	WHILE_1
0x8a5	          0x488b00	                    mov rax, qword [rax]	       203	show-branch.c	FUNCTION_20	WHILE_1
0x8a8	          0x4885c0	                           test rax, rax	       203	show-branch.c	FUNCTION_20	WHILE_1
0x8ab	     0xf85bafeffff	                           jne 0x40007ab	       203	show-branch.c	FUNCTION_20	WHILE_1
0x8b1	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	       239	show-branch.c	FUNCTION_20	FOR_1
0x8b8	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       241	show-branch.c	FUNCTION_20	FOR_1	FOR_2
0x8bc	          0x488b00	                    mov rax, qword [rax]	       241	show-branch.c	FUNCTION_20	FOR_1	FOR_2
0x8bf	        0x488945d0	             mov qword [rbp - 0x30], rax	       241	show-branch.c	FUNCTION_20	FOR_1	FOR_2
0x8c3	      0xe9bb000000	                           jmp 0x40009c3	       241	show-branch.c	FUNCTION_20	FOR_1	FOR_2
0x8c8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       242	show-branch.c	FUNCTION_20	FOR_1	FOR_2
0x8cc	          0x488b00	                    mov rax, qword [rax]	       242	show-branch.c	FUNCTION_20	FOR_1	FOR_2
0x8cf	        0x488945f0	             mov qword [rbp - 0x10], rax	       242	show-branch.c	FUNCTION_20	FOR_1	FOR_2
0x8d3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       245	show-branch.c	FUNCTION_20	FOR_1	FOR_2	IF_5
0x8d7	            0x8b00	                    mov eax, dword [rax]	       245	show-branch.c	FUNCTION_20	FOR_1	FOR_2	IF_5
0x8d9	          0xc1e804	                              shr eax, 4	       245	show-branch.c	FUNCTION_20	FOR_1	FOR_2	IF_5
0x8dc	      0x25ffffff07	                      and eax, 0x7ffffff	       245	show-branch.c	FUNCTION_20	FOR_1	FOR_2	IF_5
0x8e1	          0x2345bc	             and eax, dword [rbp - 0x44]	       245	show-branch.c	FUNCTION_20	FOR_1	FOR_2	IF_5
0x8e4	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	       245	show-branch.c	FUNCTION_20	FOR_1	FOR_2	IF_5
0x8e7	            0x7415	                            je 0x400093e	       245	show-branch.c	FUNCTION_20	FOR_1	FOR_2	IF_5
0x8e9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       246	show-branch.c	FUNCTION_20	FOR_1	FOR_2	IF_5
0x8ed	            0x8b00	                    mov eax, dword [rax]	       246	show-branch.c	FUNCTION_20	FOR_1	FOR_2	IF_5
0x8ef	          0xc1e804	                              shr eax, 4	       246	show-branch.c	FUNCTION_20	FOR_1	FOR_2	IF_5
0x8f2	      0x25ffffff07	                      and eax, 0x7ffffff	       246	show-branch.c	FUNCTION_20	FOR_1	FOR_2	IF_5
0x8f7	          0x83e001	                              and eax, 1	       246	show-branch.c	FUNCTION_20	FOR_1	FOR_2	IF_5
0x8fa	            0x85c0	                           test eax, eax	       245	show-branch.c	FUNCTION_20	FOR_1	FOR_2	IF_5
0x8fc	            0x7478	                            je 0x40009b6	       245	show-branch.c	FUNCTION_20	FOR_1	FOR_2	IF_5
0x8fe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       255	show-branch.c	FUNCTION_20	FOR_1	FOR_2
0x902	        0x488b4030	            mov rax, qword [rax + 0x30] 	       255	show-branch.c	FUNCTION_20	FOR_1	FOR_2
0x906	        0x488945d8	             mov qword [rbp - 0x28], rax	       255	show-branch.c	FUNCTION_20	FOR_1	FOR_2
0x90a	            0xeb61	                           jmp 0x40009ad	       256	show-branch.c	FUNCTION_20	FOR_1	FOR_2	WHILE_3
0x90c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       257	show-branch.c	FUNCTION_20	FOR_1	FOR_2	WHILE_3
0x910	          0x488b00	                    mov rax, qword [rax]	       257	show-branch.c	FUNCTION_20	FOR_1	FOR_2	WHILE_3
0x913	        0x488945f8	                mov qword [rbp - 8], rax	       257	show-branch.c	FUNCTION_20	FOR_1	FOR_2	WHILE_3
0x917	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       258	show-branch.c	FUNCTION_20	FOR_1	FOR_2	WHILE_3
0x91b	        0x488b4008	                mov rax, qword [rax + 8]	       258	show-branch.c	FUNCTION_20	FOR_1	FOR_2	WHILE_3
0x91f	        0x488945d8	             mov qword [rbp - 0x28], rax	       258	show-branch.c	FUNCTION_20	FOR_1	FOR_2	WHILE_3
0x923	        0x488b45f8	                mov rax, qword [rbp - 8]	       259	show-branch.c	FUNCTION_20	FOR_1	FOR_2	WHILE_3	IF_6
0x927	            0x8b00	                    mov eax, dword [rax]	       259	show-branch.c	FUNCTION_20	FOR_1	FOR_2	WHILE_3	IF_6
0x929	          0xc1e804	                              shr eax, 4	       259	show-branch.c	FUNCTION_20	FOR_1	FOR_2	WHILE_3	IF_6
0x92c	      0x25ffffff07	                      and eax, 0x7ffffff	       259	show-branch.c	FUNCTION_20	FOR_1	FOR_2	WHILE_3	IF_6
0x931	          0x83e001	                              and eax, 1	       259	show-branch.c	FUNCTION_20	FOR_1	FOR_2	WHILE_3	IF_6
0x934	            0x85c0	                           test eax, eax	       259	show-branch.c	FUNCTION_20	FOR_1	FOR_2	WHILE_3	IF_6
0x936	            0x7535	                           jne 0x40009ad	       259	show-branch.c	FUNCTION_20	FOR_1	FOR_2	WHILE_3	IF_6
0x938	        0x488b45f8	                mov rax, qword [rbp - 8]	       260	show-branch.c	FUNCTION_20	FOR_1	FOR_2	WHILE_3	IF_6
0x93c	            0x8b00	                    mov eax, dword [rax]	       260	show-branch.c	FUNCTION_20	FOR_1	FOR_2	WHILE_3	IF_6
0x93e	          0xc1e804	                              shr eax, 4	       260	show-branch.c	FUNCTION_20	FOR_1	FOR_2	WHILE_3	IF_6
0x941	      0x25ffffff07	                      and eax, 0x7ffffff	       260	show-branch.c	FUNCTION_20	FOR_1	FOR_2	WHILE_3	IF_6
0x946	          0x83c801	                               or eax, 1	       260	show-branch.c	FUNCTION_20	FOR_1	FOR_2	WHILE_3	IF_6
0x949	            0x89c2	                            mov edx, eax	       260	show-branch.c	FUNCTION_20	FOR_1	FOR_2	WHILE_3	IF_6
0x94b	        0x488b45f8	                mov rax, qword [rbp - 8]	       260	show-branch.c	FUNCTION_20	FOR_1	FOR_2	WHILE_3	IF_6
0x94f	    0x81e2ffffff07	                      and edx, 0x7ffffff	       260	show-branch.c	FUNCTION_20	FOR_1	FOR_2	WHILE_3	IF_6
0x955	            0x89d1	                            mov ecx, edx	       260	show-branch.c	FUNCTION_20	FOR_1	FOR_2	WHILE_3	IF_6
0x957	          0xc1e104	                              shl ecx, 4	       260	show-branch.c	FUNCTION_20	FOR_1	FOR_2	WHILE_3	IF_6
0x95a	            0x8b10	                    mov edx, dword [rax]	       260	show-branch.c	FUNCTION_20	FOR_1	FOR_2	WHILE_3	IF_6
0x95c	    0x81e20f000080	                     and edx, 0x8000000f	       260	show-branch.c	FUNCTION_20	FOR_1	FOR_2	WHILE_3	IF_6
0x962	             0x9ca	                             or edx, ecx	       260	show-branch.c	FUNCTION_20	FOR_1	FOR_2	WHILE_3	IF_6
0x964	            0x8910	                    mov dword [rax], edx	       260	show-branch.c	FUNCTION_20	FOR_1	FOR_2	WHILE_3	IF_6
0x966	    0xc745b4010000	               mov dword [rbp - 0x4c], 1	       261	show-branch.c	FUNCTION_20	FOR_1	FOR_2	WHILE_3	IF_6
0x96d	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       256	show-branch.c	FUNCTION_20	FOR_1	FOR_2	WHILE_3
0x972	            0x7598	                           jne 0x400094c	       256	show-branch.c	FUNCTION_20	FOR_1	FOR_2	WHILE_3
0x974	            0xeb01	                           jmp 0x40009b7	       256	show-branch.c	FUNCTION_20	FOR_1	FOR_2	WHILE_3
0x976	              0x90	                                     nop	       247	show-branch.c	FUNCTION_20	FOR_1	FOR_2	IF_5
0x977	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       241	show-branch.c	FUNCTION_20	FOR_1	FOR_2
0x97b	        0x488b4008	                mov rax, qword [rax + 8]	       241	show-branch.c	FUNCTION_20	FOR_1	FOR_2
0x97f	        0x488945d0	             mov qword [rbp - 0x30], rax	       241	show-branch.c	FUNCTION_20	FOR_1	FOR_2
0x983	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       241	show-branch.c	FUNCTION_20	FOR_1	FOR_2
0x988	     0xf853affffff	                           jne 0x4000908	       241	show-branch.c	FUNCTION_20	FOR_1	FOR_2
0x98e	        0x837db400	               cmp dword [rbp - 0x4c], 0	       265	show-branch.c	FUNCTION_20	FOR_1	IF_7
0x992	            0x7405	                            je 0x40009d9	       265	show-branch.c	FUNCTION_20	FOR_1	IF_7
0x994	      0xe918ffffff	                           jmp 0x40008f1	       267	show-branch.c	FUNCTION_20	FOR_1
0x999	              0x90	                                     nop	       266	show-branch.c	FUNCTION_20	FOR_1	IF_7
0x99a	              0x90	                                     nop	       268	show-branch.c	FUNCTION_20
0x99b	              0xc9	                                   leave	       268	show-branch.c	FUNCTION_20
0x99c	              0xc3	                                     ret	       268	show-branch.c	FUNCTION_20
interesting	functions,0:IF,1:ELSE,0:FOR,0:DO,0:CALL,0:SWITCH,0:WHILE,1	25
0x2a5	              0x55	                                push rbp	        46	show-branch.c	FUNCTION_14
0x2a6	          0x4889e5	                            mov rbp, rsp	        46	show-branch.c	FUNCTION_14
0x2a9	        0x48897de8	             mov qword [rbp - 0x18], rdi	        46	show-branch.c	FUNCTION_14
0x2ad	            0xeb34	                           jmp 0x4000323	        47	show-branch.c	FUNCTION_14	WHILE_1
0x2af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        48	show-branch.c	FUNCTION_14	WHILE_1
0x2b3	          0x488b00	                    mov rax, qword [rax]	        48	show-branch.c	FUNCTION_14	WHILE_1
0x2b6	        0x488945f8	                mov qword [rbp - 8], rax	        48	show-branch.c	FUNCTION_14	WHILE_1
0x2ba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        49	show-branch.c	FUNCTION_14	WHILE_1
0x2be	        0x488b4008	                mov rax, qword [rax + 8]	        49	show-branch.c	FUNCTION_14	WHILE_1
0x2c2	        0x488945e8	             mov qword [rbp - 0x18], rax	        49	show-branch.c	FUNCTION_14	WHILE_1
0x2c6	        0x488b45f8	                mov rax, qword [rbp - 8]	        50	show-branch.c	FUNCTION_14	WHILE_1	IF_1
0x2ca	            0x8b00	                    mov eax, dword [rax]	        50	show-branch.c	FUNCTION_14	WHILE_1	IF_1
0x2cc	          0xc1e804	                              shr eax, 4	        50	show-branch.c	FUNCTION_14	WHILE_1	IF_1
0x2cf	      0x25ffffff07	                      and eax, 0x7ffffff	        50	show-branch.c	FUNCTION_14	WHILE_1	IF_1
0x2d4	          0x83e001	                              and eax, 1	        50	show-branch.c	FUNCTION_14	WHILE_1	IF_1
0x2d7	            0x85c0	                           test eax, eax	        50	show-branch.c	FUNCTION_14	WHILE_1	IF_1
0x2d9	            0x7402	                            je 0x400031d	        50	show-branch.c	FUNCTION_14	WHILE_1	IF_1
0x2db	            0xeb06	                           jmp 0x4000323	        51	show-branch.c	FUNCTION_14	WHILE_1	IF_1
0x2dd	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	show-branch.c	FUNCTION_14	WHILE_1
0x2e1	            0xeb0c	                           jmp 0x400032f	        52	show-branch.c	FUNCTION_14	WHILE_1
0x2e3	      0x48837de800	               cmp qword [rbp - 0x18], 0	        47	show-branch.c	FUNCTION_14	WHILE_1
0x2e8	            0x75c5	                           jne 0x40002ef	        47	show-branch.c	FUNCTION_14	WHILE_1
0x2ea	      0xb800000000	                              mov eax, 0	        54	show-branch.c	FUNCTION_14
0x2ef	              0x5d	                                 pop rbp	        55	show-branch.c	FUNCTION_14
0x2f0	              0xc3	                                     ret	        55	show-branch.c	FUNCTION_14
append_head_ref	functions,0:IF,2:ELSE,0:FOR,0:DO,0:CALL,4:SWITCH,0:WHILE,0	52
0xde9	              0x55	                                push rbp	       388	show-branch.c	FUNCTION_27
0xdea	          0x4889e5	                            mov rbp, rsp	       388	show-branch.c	FUNCTION_27
0xded	        0x4883ec50	                           sub rsp, 0x50	       388	show-branch.c	FUNCTION_27
0xdf1	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       388	show-branch.c	FUNCTION_27
0xdf5	        0x488975c0	             mov qword [rbp - 0x40], rsi	       388	show-branch.c	FUNCTION_27
0xdf9	          0x8955bc	             mov dword [rbp - 0x44], edx	       388	show-branch.c	FUNCTION_27
0xdfc	        0x48894db0	             mov qword [rbp - 0x50], rcx	       388	show-branch.c	FUNCTION_27
0xe00	    0x64488b042528	                mov rax, qword fs:[0x28]	       388	show-branch.c	FUNCTION_27
0xe09	        0x488945f8	                mov qword [rbp - 8], rax	       388	show-branch.c	FUNCTION_27
0xe0d	            0x31c0	                            xor eax, eax	       388	show-branch.c	FUNCTION_27
0xe0f	    0xc745dc0b0000	            mov dword [rbp - 0x24], 0xb 	       390	show-branch.c	FUNCTION_27
0xe16	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       391	show-branch.c	FUNCTION_27	IF_1	CALL_1
0xe1a	      0xbe00000000	                              mov esi, 0	       391	show-branch.c	FUNCTION_27	IF_1	CALL_1
0xe1f	          0x4889c7	                            mov rdi, rax	       391	show-branch.c	FUNCTION_27	IF_1	CALL_1
0xe22	      0xe800000000	                          call 0x4000e67	       391	show-branch.c	FUNCTION_27	IF_1	CALL_1
0xe27	            0x85c0	                           test eax, eax	       391	show-branch.c	FUNCTION_27	IF_1	CALL_1
0xe29	            0x7507	                           jne 0x4000e72	       391	show-branch.c	FUNCTION_27	IF_1	CALL_1
0xe2b	      0xb800000000	                              mov eax, 0	       392	show-branch.c	FUNCTION_27	IF_1
0xe30	            0xeb60	                           jmp 0x4000ed2	       392	show-branch.c	FUNCTION_27	IF_1
0xe32	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       396	show-branch.c	FUNCTION_27	IF_2	CALL_3
0xe35	          0x4863d0	                         movsxd rdx, eax	       396	show-branch.c	FUNCTION_27	IF_2	CALL_3
0xe38	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       396	show-branch.c	FUNCTION_27	IF_2	CALL_3
0xe3c	          0x4801c2	                            add rdx, rax	       396	show-branch.c	FUNCTION_27	IF_2	CALL_3
0xe3f	        0x488d45e0	                   lea rax, [rbp - 0x20]	       396	show-branch.c	FUNCTION_27	IF_2	CALL_3
0xe43	          0x4889c6	                            mov rsi, rax	       396	show-branch.c	FUNCTION_27	IF_2	CALL_3
0xe46	          0x4889d7	                            mov rdi, rdx	       396	show-branch.c	FUNCTION_27	IF_2	CALL_3
0xe49	      0xe800000000	                          call 0x4000e8e	       396	show-branch.c	FUNCTION_27	IF_2	CALL_3
0xe4e	            0x85c0	                           test eax, eax	       396	show-branch.c	FUNCTION_27	IF_2	CALL_3
0xe50	            0x7517	                           jne 0x4000ea9	       396	show-branch.c	FUNCTION_27	IF_2	CALL_3
0xe52	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       396	show-branch.c	FUNCTION_27	IF_2	CALL_3
0xe56	        0x488d45e0	                   lea rax, [rbp - 0x20]	       396	show-branch.c	FUNCTION_27	IF_2	CALL_3
0xe5a	          0x4889d6	                            mov rsi, rdx	       396	show-branch.c	FUNCTION_27	IF_2	CALL_3
0xe5d	          0x4889c7	                            mov rdi, rax	       396	show-branch.c	FUNCTION_27	IF_2	CALL_3
0xe60	      0xe892f3ffff	                         call sym.oidcmp	       396	show-branch.c	FUNCTION_27	IF_2	CALL_3
0xe65	            0x85c0	                           test eax, eax	       396	show-branch.c	FUNCTION_27	IF_2	CALL_3
0xe67	            0x7407	                            je 0x4000eb0	       396	show-branch.c	FUNCTION_27	IF_2	CALL_3
0xe69	    0xc745dc050000	               mov dword [rbp - 0x24], 5	       397	show-branch.c	FUNCTION_27	IF_2
0xe70	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       398	show-branch.c	FUNCTION_27	CALL_4
0xe73	          0x4863d0	                         movsxd rdx, eax	       398	show-branch.c	FUNCTION_27	CALL_4
0xe76	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       398	show-branch.c	FUNCTION_27	CALL_4
0xe7a	        0x488d0c02	                    lea rcx, [rdx + rax]	       398	show-branch.c	FUNCTION_27	CALL_4
0xe7e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       398	show-branch.c	FUNCTION_27	CALL_4
0xe82	      0xba00000000	                              mov edx, 0	       398	show-branch.c	FUNCTION_27	CALL_4
0xe87	          0x4889c6	                            mov rsi, rax	       398	show-branch.c	FUNCTION_27	CALL_4
0xe8a	          0x4889cf	                            mov rdi, rcx	       398	show-branch.c	FUNCTION_27	CALL_4
0xe8d	      0xe84afeffff	                     call sym.append_ref	       398	show-branch.c	FUNCTION_27	CALL_4
0xe92	        0x488b4df8	                mov rcx, qword [rbp - 8]	       399	show-branch.c	FUNCTION_27
0xe96	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       399	show-branch.c	FUNCTION_27
0xe9f	            0x7405	                            je 0x4000ee6	       399	show-branch.c	FUNCTION_27
0xea1	      0xe800000000	                          call 0x4000ee6	       399	show-branch.c	FUNCTION_27
0xea6	              0xc9	                                   leave	       399	show-branch.c	FUNCTION_27
0xea7	              0xc3	                                     ret	       399	show-branch.c	FUNCTION_27
_	functions,0:IF,1:ELSE,0:FOR,0:DO,0:CALL,2:SWITCH,0:WHILE,0	15
0x174	              0x55	                                push rbp	        51	gettext.h	FUNCTION_42
0x175	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_42
0x178	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_42
0x17c	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_42
0x180	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_42	IF_1
0x184	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_42	IF_1
0x187	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_42	IF_1
0x189	            0x7507	                           jne 0x40001d2	        52	gettext.h	FUNCTION_42	IF_1
0x18b	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_42	IF_1
0x190	            0xeb0c	                           jmp 0x40001de	        53	gettext.h	FUNCTION_42	IF_1
0x192	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_42	CALL_2
0x196	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_42	CALL_2
0x199	      0xe800000000	                          call 0x40001de	        54	gettext.h	FUNCTION_42	CALL_2
0x19e	              0xc9	                                   leave	        55	gettext.h	FUNCTION_42
0x19f	              0xc3	                                     ret	        55	gettext.h	FUNCTION_42
mark_seen	functions,0:IF,1:ELSE,0:FOR,0:DO,0:CALL,1:SWITCH,0:WHILE,0	20
0x6f0	              0x55	                                push rbp	       188	show-branch.c	FUNCTION_19
0x6f1	          0x4889e5	                            mov rbp, rsp	       188	show-branch.c	FUNCTION_19
0x6f4	        0x4883ec10	                           sub rsp, 0x10	       188	show-branch.c	FUNCTION_19
0x6f8	        0x48897df8	                mov qword [rbp - 8], rdi	       188	show-branch.c	FUNCTION_19
0x6fc	        0x488975f0	             mov qword [rbp - 0x10], rsi	       188	show-branch.c	FUNCTION_19
0x700	        0x488b45f8	                mov rax, qword [rbp - 8]	       189	show-branch.c	FUNCTION_19	IF_1
0x704	            0x8b00	                    mov eax, dword [rax]	       189	show-branch.c	FUNCTION_19	IF_1
0x706	      0x25f0ffff7f	                     and eax, 0x7ffffff0	       189	show-branch.c	FUNCTION_19	IF_1
0x70b	            0x85c0	                           test eax, eax	       189	show-branch.c	FUNCTION_19	IF_1
0x70d	            0x751a	                           jne 0x4000769	       189	show-branch.c	FUNCTION_19	IF_1
0x70f	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       190	show-branch.c	FUNCTION_19	IF_1	CALL_1
0x713	        0x488b45f8	                mov rax, qword [rbp - 8]	       190	show-branch.c	FUNCTION_19	IF_1	CALL_1
0x717	          0x4889d6	                            mov rsi, rdx	       190	show-branch.c	FUNCTION_19	IF_1	CALL_1
0x71a	          0x4889c7	                            mov rdi, rax	       190	show-branch.c	FUNCTION_19	IF_1	CALL_1
0x71d	      0xe800000000	                          call 0x4000762	       190	show-branch.c	FUNCTION_19	IF_1	CALL_1
0x722	      0xb801000000	                              mov eax, 1	       191	show-branch.c	FUNCTION_19	IF_1
0x727	            0xeb05	                           jmp 0x400076e	       191	show-branch.c	FUNCTION_19	IF_1
0x729	      0xb800000000	                              mov eax, 0	       193	show-branch.c	FUNCTION_19
0x72e	              0xc9	                                   leave	       194	show-branch.c	FUNCTION_19
0x72f	              0xc3	                                     ret	       194	show-branch.c	FUNCTION_19
Q_	functions,0:IF,1:ELSE,0:FOR,0:DO,0:CALL,2:SWITCH,0:WHILE,0	14
0x1a0	              0x55	                                push rbp	        59	gettext.h	FUNCTION_43
0x1a1	          0x4889e5	                            mov rbp, rsp	        59	gettext.h	FUNCTION_43
0x1a4	        0x4883ec20	                           sub rsp, 0x20	        59	gettext.h	FUNCTION_43
0x1a8	        0x48897df8	                mov qword [rbp - 8], rdi	        59	gettext.h	FUNCTION_43
0x1ac	        0x488975f0	             mov qword [rbp - 0x10], rsi	        59	gettext.h	FUNCTION_43
0x1b0	        0x488955e8	             mov qword [rbp - 0x18], rdx	        59	gettext.h	FUNCTION_43
0x1b4	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        62	gettext.h	FUNCTION_43	CALL_2
0x1b8	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        62	gettext.h	FUNCTION_43	CALL_2
0x1bc	        0x488b45f8	                mov rax, qword [rbp - 8]	        62	gettext.h	FUNCTION_43	CALL_2
0x1c0	          0x4889ce	                            mov rsi, rcx	        62	gettext.h	FUNCTION_43	CALL_2
0x1c3	          0x4889c7	                            mov rdi, rax	        62	gettext.h	FUNCTION_43	CALL_2
0x1c6	      0xe800000000	                          call 0x400020b	        62	gettext.h	FUNCTION_43	CALL_2
0x1cb	              0xc9	                                   leave	        63	gettext.h	FUNCTION_43
0x1cc	              0xc3	                                     ret	        63	gettext.h	FUNCTION_43
omit_in_dense	functions,0:IF,3:ELSE,0:FOR,2:DO,0:CALL,0:SWITCH,0:WHILE,0	51
0x1586	              0x55	                                push rbp	       561	show-branch.c	FUNCTION_37
0x1587	          0x4889e5	                            mov rbp, rsp	       561	show-branch.c	FUNCTION_37
0x158a	        0x48897de8	             mov qword [rbp - 0x18], rdi	       561	show-branch.c	FUNCTION_37
0x158e	        0x488975e0	             mov qword [rbp - 0x20], rsi	       561	show-branch.c	FUNCTION_37
0x1592	          0x8955dc	             mov dword [rbp - 0x24], edx	       561	show-branch.c	FUNCTION_37
0x1595	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       568	show-branch.c	FUNCTION_37	FOR_1
0x159c	            0xeb28	                           jmp 0x4001606	       568	show-branch.c	FUNCTION_37	FOR_1
0x159e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       569	show-branch.c	FUNCTION_37	FOR_1	IF_1
0x15a1	            0x4898	                                    cdqe	       569	show-branch.c	FUNCTION_37	FOR_1	IF_1
0x15a3	    0x488d14c50000	                        lea rdx, [rax*8]	       569	show-branch.c	FUNCTION_37	FOR_1	IF_1
0x15ab	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       569	show-branch.c	FUNCTION_37	FOR_1	IF_1
0x15af	          0x4801d0	                            add rax, rdx	       569	show-branch.c	FUNCTION_37	FOR_1	IF_1
0x15b2	          0x488b00	                    mov rax, qword [rax]	       569	show-branch.c	FUNCTION_37	FOR_1	IF_1
0x15b5	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       569	show-branch.c	FUNCTION_37	FOR_1	IF_1
0x15b9	            0x7507	                           jne 0x4001602	       569	show-branch.c	FUNCTION_37	FOR_1	IF_1
0x15bb	      0xb800000000	                              mov eax, 0	       570	show-branch.c	FUNCTION_37	FOR_1	IF_1
0x15c0	            0xeb64	                           jmp 0x4001666	       570	show-branch.c	FUNCTION_37	FOR_1	IF_1
0x15c2	        0x8345f401	                add dword [rbp - 0xc], 1	       568	show-branch.c	FUNCTION_37	FOR_1
0x15c6	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       568	show-branch.c	FUNCTION_37	FOR_1
0x15c9	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	       568	show-branch.c	FUNCTION_37	FOR_1
0x15cc	            0x7cd0	                            jl 0x40015de	       568	show-branch.c	FUNCTION_37	FOR_1
0x15ce	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       571	show-branch.c	FUNCTION_37
0x15d2	            0x8b00	                    mov eax, dword [rax]	       571	show-branch.c	FUNCTION_37
0x15d4	          0xc1e804	                              shr eax, 4	       571	show-branch.c	FUNCTION_37
0x15d7	      0x25ffffff07	                      and eax, 0x7ffffff	       571	show-branch.c	FUNCTION_37
0x15dc	          0x8945fc	                mov dword [rbp - 4], eax	       571	show-branch.c	FUNCTION_37
0x15df	    0xc745f8000000	                  mov dword [rbp - 8], 0	       572	show-branch.c	FUNCTION_37	FOR_2
0x15e6	          0x8b45f8	                mov eax, dword [rbp - 8]	       572	show-branch.c	FUNCTION_37	FOR_2
0x15e9	          0x8945f4	              mov dword [rbp - 0xc], eax	       572	show-branch.c	FUNCTION_37	FOR_2
0x15ec	            0xeb1e	                           jmp 0x400164c	       572	show-branch.c	FUNCTION_37	FOR_2
0x15ee	          0x8b55fc	                mov edx, dword [rbp - 4]	       573	show-branch.c	FUNCTION_37	FOR_2	IF_2
0x15f1	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       573	show-branch.c	FUNCTION_37	FOR_2	IF_2
0x15f4	          0x83c002	                              add eax, 2	       573	show-branch.c	FUNCTION_37	FOR_2	IF_2
0x15f7	            0x89c1	                            mov ecx, eax	       573	show-branch.c	FUNCTION_37	FOR_2	IF_2
0x15f9	            0xd3ea	                             shr edx, cl	       573	show-branch.c	FUNCTION_37	FOR_2	IF_2
0x15fb	            0x89d0	                            mov eax, edx	       573	show-branch.c	FUNCTION_37	FOR_2	IF_2
0x15fd	          0x83e001	                              and eax, 1	       573	show-branch.c	FUNCTION_37	FOR_2	IF_2
0x1600	            0x85c0	                           test eax, eax	       573	show-branch.c	FUNCTION_37	FOR_2	IF_2
0x1602	            0x7404	                            je 0x4001648	       573	show-branch.c	FUNCTION_37	FOR_2	IF_2
0x1604	        0x8345f801	                  add dword [rbp - 8], 1	       574	show-branch.c	FUNCTION_37	FOR_2	IF_2
0x1608	        0x8345f401	                add dword [rbp - 0xc], 1	       572	show-branch.c	FUNCTION_37	FOR_2
0x160c	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       572	show-branch.c	FUNCTION_37	FOR_2
0x160f	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	       572	show-branch.c	FUNCTION_37	FOR_2
0x1612	            0x7cda	                            jl 0x400162e	       572	show-branch.c	FUNCTION_37	FOR_2
0x1614	        0x837df801	                  cmp dword [rbp - 8], 1	       576	show-branch.c	FUNCTION_37	IF_3
0x1618	            0x7507	                           jne 0x4001661	       576	show-branch.c	FUNCTION_37	IF_3
0x161a	      0xb801000000	                              mov eax, 1	       577	show-branch.c	FUNCTION_37	IF_3
0x161f	            0xeb05	                           jmp 0x4001666	       577	show-branch.c	FUNCTION_37	IF_3
0x1621	      0xb800000000	                              mov eax, 0	       578	show-branch.c	FUNCTION_37
0x1626	              0x5d	                                 pop rbp	       579	show-branch.c	FUNCTION_37
0x1627	              0xc3	                                     ret	       579	show-branch.c	FUNCTION_37
git_show_branch_config	functions,0:IF,4:ELSE,0:FOR,0:DO,0:CALL,7:SWITCH,0:WHILE,0	53
0x14c4	              0x55	                                push rbp	       538	show-branch.c	FUNCTION_36
0x14c5	          0x4889e5	                            mov rbp, rsp	       538	show-branch.c	FUNCTION_36
0x14c8	        0x4883ec20	                           sub rsp, 0x20	       538	show-branch.c	FUNCTION_36
0x14cc	        0x48897df8	                mov qword [rbp - 8], rdi	       538	show-branch.c	FUNCTION_36
0x14d0	        0x488975f0	             mov qword [rbp - 0x10], rsi	       538	show-branch.c	FUNCTION_36
0x14d4	        0x488955e8	             mov qword [rbp - 0x18], rdx	       538	show-branch.c	FUNCTION_36
0x14d8	        0x488b45f8	                mov rax, qword [rbp - 8]	       539	show-branch.c	FUNCTION_36	IF_1	CALL_1
0x14dc	      0xbe00000000	                              mov esi, 0	       539	show-branch.c	FUNCTION_36	IF_1	CALL_1
0x14e1	          0x4889c7	                            mov rdi, rax	       539	show-branch.c	FUNCTION_36	IF_1	CALL_1
0x14e4	      0xe800000000	                          call 0x4001529	       539	show-branch.c	FUNCTION_36	IF_1	CALL_1
0x14e9	            0x85c0	                           test eax, eax	       539	show-branch.c	FUNCTION_36	IF_1	CALL_1
0x14eb	            0x754b	                           jne 0x4001578	       539	show-branch.c	FUNCTION_36	IF_1	CALL_1
0x14ed	      0x48837df000	               cmp qword [rbp - 0x10], 0	       540	show-branch.c	FUNCTION_36	IF_1	IF_2
0x14f2	            0x7513	                           jne 0x4001547	       540	show-branch.c	FUNCTION_36	IF_1	IF_2
0x14f4	        0x488b45f8	                mov rax, qword [rbp - 8]	       541	show-branch.c	FUNCTION_36	IF_1	CALL_2
0x14f8	          0x4889c7	                            mov rdi, rax	       541	show-branch.c	FUNCTION_36	IF_1	CALL_2
0x14fb	      0xe800000000	                          call 0x4001540	       541	show-branch.c	FUNCTION_36	IF_1	CALL_2
0x1500	      0xe8fbeaffff	                    call sym.const_error	       541	show-branch.c	FUNCTION_36	IF_1	CALL_2
0x1505	            0xeb7d	                           jmp 0x40015c4	       541	show-branch.c	FUNCTION_36	IF_1	CALL_2
0x1507	    0x8b0500000000	            mov eax, dword [0x0400154d] 	       546	show-branch.c	FUNCTION_36	IF_1	IF_3
0x150d	            0x85c0	                           test eax, eax	       546	show-branch.c	FUNCTION_36	IF_1	IF_3
0x150f	            0x750f	                           jne 0x4001560	       546	show-branch.c	FUNCTION_36	IF_1	IF_3
0x1511	      0xbe00000000	                              mov esi, 0	       547	show-branch.c	FUNCTION_36	IF_1	CALL_3
0x1516	      0xbf00000000	                              mov edi, 0	       547	show-branch.c	FUNCTION_36	IF_1	CALL_3
0x151b	      0xe800000000	                          call 0x4001560	       547	show-branch.c	FUNCTION_36	IF_1	CALL_3
0x1520	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       548	show-branch.c	FUNCTION_36	IF_1	CALL_4
0x1524	          0x4889c6	                            mov rsi, rax	       548	show-branch.c	FUNCTION_36	IF_1	CALL_4
0x1527	      0xbf00000000	                              mov edi, 0	       548	show-branch.c	FUNCTION_36	IF_1	CALL_4
0x152c	      0xe800000000	                          call 0x4001571	       548	show-branch.c	FUNCTION_36	IF_1	CALL_4
0x1531	      0xb800000000	                              mov eax, 0	       549	show-branch.c	FUNCTION_36	IF_1
0x1536	            0xeb4c	                           jmp 0x40015c4	       549	show-branch.c	FUNCTION_36	IF_1
0x1538	        0x488b45f8	                mov rax, qword [rbp - 8]	       552	show-branch.c	FUNCTION_36	IF_4	CALL_5
0x153c	      0xbe00000000	                              mov esi, 0	       552	show-branch.c	FUNCTION_36	IF_4	CALL_5
0x1541	          0x4889c7	                            mov rdi, rax	       552	show-branch.c	FUNCTION_36	IF_4	CALL_5
0x1544	      0xe800000000	                          call 0x4001589	       552	show-branch.c	FUNCTION_36	IF_4	CALL_5
0x1549	            0x85c0	                           test eax, eax	       552	show-branch.c	FUNCTION_36	IF_4	CALL_5
0x154b	            0x7520	                           jne 0x40015ad	       552	show-branch.c	FUNCTION_36	IF_4	CALL_5
0x154d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       553	show-branch.c	FUNCTION_36	IF_4	CALL_6
0x1551	        0x488b45f8	                mov rax, qword [rbp - 8]	       553	show-branch.c	FUNCTION_36	IF_4	CALL_6
0x1555	          0x4889d6	                            mov rsi, rdx	       553	show-branch.c	FUNCTION_36	IF_4	CALL_6
0x1558	          0x4889c7	                            mov rdi, rax	       553	show-branch.c	FUNCTION_36	IF_4	CALL_6
0x155b	      0xe800000000	                          call 0x40015a0	       553	show-branch.c	FUNCTION_36	IF_4	CALL_6
0x1560	    0x890500000000	            mov dword [0x040015a6], eax 	       553	show-branch.c	FUNCTION_36	IF_4	CALL_6
0x1566	      0xb800000000	                              mov eax, 0	       554	show-branch.c	FUNCTION_36	IF_4
0x156b	            0xeb17	                           jmp 0x40015c4	       554	show-branch.c	FUNCTION_36	IF_4
0x156d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       557	show-branch.c	FUNCTION_36	CALL_7
0x1571	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       557	show-branch.c	FUNCTION_36	CALL_7
0x1575	        0x488b45f8	                mov rax, qword [rbp - 8]	       557	show-branch.c	FUNCTION_36	CALL_7
0x1579	          0x4889ce	                            mov rsi, rcx	       557	show-branch.c	FUNCTION_36	CALL_7
0x157c	          0x4889c7	                            mov rdi, rax	       557	show-branch.c	FUNCTION_36	CALL_7
0x157f	      0xe800000000	                          call 0x40015c4	       557	show-branch.c	FUNCTION_36	CALL_7
0x1584	              0xc9	                                   leave	       558	show-branch.c	FUNCTION_36
0x1585	              0xc3	                                     ret	       558	show-branch.c	FUNCTION_36
skip_prefix	functions,0:IF,1:ELSE,0:FOR,0:DO,1:CALL,0:SWITCH,0:WHILE,0	27
0xb	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_50
0xc	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_50
0xf	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_50
0x13	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_50
0x17	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_50
0x1b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_50	DO_1	IF_1
0x1f	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_50	DO_1	IF_1
0x22	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_50	DO_1	IF_1
0x24	            0x7512	                           jne 0x4000078	       484	git-compat-util.h	FUNCTION_50	DO_1	IF_1
0x26	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_50	DO_1	IF_1
0x2a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_50	DO_1	IF_1
0x2e	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_50	DO_1	IF_1
0x31	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_50	DO_1	IF_1
0x36	            0xeb27	                           jmp 0x400009f	       486	git-compat-util.h	FUNCTION_50	DO_1	IF_1
0x38	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_50	DO_1
0x3c	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_50	DO_1
0x40	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_50	DO_1
0x44	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_50	DO_1
0x47	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_50	DO_1
0x4b	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_50	DO_1
0x4f	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_50	DO_1
0x53	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_50	DO_1
0x56	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_50	DO_1
0x58	            0x74c1	                            je 0x400005b	       488	git-compat-util.h	FUNCTION_50	DO_1
0x5a	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_50
0x5f	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_50
0x60	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_50
sane_qsort	functions,0:IF,1:ELSE,0:FOR,0:DO,0:CALL,1:SWITCH,0:WHILE,0	18
0x61	              0x55	                                push rbp	      1047	git-compat-util.h	FUNCTION_68
0x62	          0x4889e5	                            mov rbp, rsp	      1047	git-compat-util.h	FUNCTION_68
0x65	        0x4883ec20	                           sub rsp, 0x20	      1047	git-compat-util.h	FUNCTION_68
0x69	        0x48897df8	                mov qword [rbp - 8], rdi	      1047	git-compat-util.h	FUNCTION_68
0x6d	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1047	git-compat-util.h	FUNCTION_68
0x71	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1047	git-compat-util.h	FUNCTION_68
0x75	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1047	git-compat-util.h	FUNCTION_68
0x79	      0x48837df001	               cmp qword [rbp - 0x10], 1	      1048	git-compat-util.h	FUNCTION_68	IF_1
0x7e	            0x7618	                           jbe 0x40000d8	      1048	git-compat-util.h	FUNCTION_68	IF_1
0x80	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1049	git-compat-util.h	FUNCTION_68	CALL_1
0x84	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1049	git-compat-util.h	FUNCTION_68	CALL_1
0x88	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1049	git-compat-util.h	FUNCTION_68	CALL_1
0x8c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1049	git-compat-util.h	FUNCTION_68	CALL_1
0x90	          0x4889c7	                            mov rdi, rax	      1049	git-compat-util.h	FUNCTION_68	CALL_1
0x93	      0xe800000000	                          call 0x40000d8	      1049	git-compat-util.h	FUNCTION_68	CALL_1
0x98	              0x90	                                     nop	      1050	git-compat-util.h	FUNCTION_68
0x99	              0xc9	                                   leave	      1050	git-compat-util.h	FUNCTION_68
0x9a	              0xc3	                                     ret	      1050	git-compat-util.h	FUNCTION_68
name_first_parent_chain	functions,0:IF,3:ELSE,1:FOR,0:DO,0:CALL,1:SWITCH,0:WHILE,1	41
0x3ba	              0x55	                                push rbp	        93	show-branch.c	FUNCTION_17
0x3bb	          0x4889e5	                            mov rbp, rsp	        93	show-branch.c	FUNCTION_17
0x3be	        0x4883ec20	                           sub rsp, 0x20	        93	show-branch.c	FUNCTION_17
0x3c2	        0x48897de8	             mov qword [rbp - 0x18], rdi	        93	show-branch.c	FUNCTION_17
0x3c6	    0xc745f4000000	                mov dword [rbp - 0xc], 0	        94	show-branch.c	FUNCTION_17
0x3cd	            0xeb55	                           jmp 0x4000464	        95	show-branch.c	FUNCTION_17	WHILE_1
0x3cf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        97	show-branch.c	FUNCTION_17	WHILE_1	IF_1
0x3d3	        0x488b4018	            mov rax, qword [rax + 0x18] 	        97	show-branch.c	FUNCTION_17	WHILE_1	IF_1
0x3d7	          0x4885c0	                           test rax, rax	        97	show-branch.c	FUNCTION_17	WHILE_1	IF_1
0x3da	            0x7451	                            je 0x400046d	        97	show-branch.c	FUNCTION_17	WHILE_1	IF_1
0x3dc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        99	show-branch.c	FUNCTION_17	WHILE_1	IF_2
0x3e0	        0x488b4030	            mov rax, qword [rax + 0x30] 	        99	show-branch.c	FUNCTION_17	WHILE_1	IF_2
0x3e4	          0x4885c0	                           test rax, rax	        99	show-branch.c	FUNCTION_17	WHILE_1	IF_2
0x3e7	            0x7447	                            je 0x4000470	        99	show-branch.c	FUNCTION_17	WHILE_1	IF_2
0x3e9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       101	show-branch.c	FUNCTION_17	WHILE_1
0x3ed	        0x488b4030	            mov rax, qword [rax + 0x30] 	       101	show-branch.c	FUNCTION_17	WHILE_1
0x3f1	          0x488b00	                    mov rax, qword [rax]	       101	show-branch.c	FUNCTION_17	WHILE_1
0x3f4	        0x488945f8	                mov qword [rbp - 8], rax	       101	show-branch.c	FUNCTION_17	WHILE_1
0x3f8	        0x488b45f8	                mov rax, qword [rbp - 8]	       102	show-branch.c	FUNCTION_17	WHILE_1	IF_3
0x3fc	        0x488b4018	            mov rax, qword [rax + 0x18] 	       102	show-branch.c	FUNCTION_17	WHILE_1	IF_3
0x400	          0x4885c0	                           test rax, rax	       102	show-branch.c	FUNCTION_17	WHILE_1	IF_3
0x403	            0x752e	                           jne 0x4000473	       102	show-branch.c	FUNCTION_17	WHILE_1	IF_3
0x405	        0x488b55f8	                mov rdx, qword [rbp - 8]	       103	show-branch.c	FUNCTION_17	WHILE_1	IF_3	CALL_1
0x409	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       103	show-branch.c	FUNCTION_17	WHILE_1	IF_3	CALL_1
0x40d	          0x4889d6	                            mov rsi, rdx	       103	show-branch.c	FUNCTION_17	WHILE_1	IF_3	CALL_1
0x410	          0x4889c7	                            mov rdi, rax	       103	show-branch.c	FUNCTION_17	WHILE_1	IF_3	CALL_1
0x413	      0xe832ffffff	                    call sym.name_parent	       103	show-branch.c	FUNCTION_17	WHILE_1	IF_3	CALL_1
0x418	        0x8345f401	                add dword [rbp - 0xc], 1	       104	show-branch.c	FUNCTION_17	WHILE_1	IF_3
0x41c	        0x488b45f8	                mov rax, qword [rbp - 8]	       108	show-branch.c	FUNCTION_17	WHILE_1	ELSE_1
0x420	        0x488945e8	             mov qword [rbp - 0x18], rax	       108	show-branch.c	FUNCTION_17	WHILE_1	ELSE_1
0x424	      0x48837de800	               cmp qword [rbp - 0x18], 0	        95	show-branch.c	FUNCTION_17	WHILE_1
0x429	            0x75a4	                           jne 0x400040f	        95	show-branch.c	FUNCTION_17	WHILE_1
0x42b	            0xeb07	                           jmp 0x4000474	        95	show-branch.c	FUNCTION_17	WHILE_1
0x42d	              0x90	                                     nop	        98	show-branch.c	FUNCTION_17	WHILE_1	IF_1
0x42e	            0xeb04	                           jmp 0x4000474	        98	show-branch.c	FUNCTION_17	WHILE_1	IF_1
0x430	              0x90	                                     nop	       100	show-branch.c	FUNCTION_17	WHILE_1	IF_2
0x431	            0xeb01	                           jmp 0x4000474	       100	show-branch.c	FUNCTION_17	WHILE_1	IF_2
0x433	              0x90	                                     nop	       107	show-branch.c	FUNCTION_17	WHILE_1	ELSE_1
0x434	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       110	show-branch.c	FUNCTION_17	ELSE_1
0x437	              0xc9	                                   leave	       111	show-branch.c	FUNCTION_17	ELSE_1
0x438	              0xc3	                                     ret	       111	show-branch.c	FUNCTION_17	ELSE_1
strbuf_addch	functions,0:IF,1:ELSE,0:FOR,0:DO,0:CALL,2:SWITCH,0:WHILE,0	33
0xd1	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_4
0xd2	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_4
0xd5	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_4
0xd9	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_4
0xdd	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_4
0xe0	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0xe4	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0xe7	      0xe8afffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0xec	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0xef	            0x7511	                           jne 0x4000142	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0xf1	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_4	CALL_2
0xf5	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_4	CALL_2
0xfa	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_4	CALL_2
0xfd	      0xe800000000	                          call 0x4000142	       228	strbuf.h	FUNCTION_4	CALL_2
0x102	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x106	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_4
0x10a	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x10e	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_4
0x112	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_4
0x116	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x11a	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_4
0x11e	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_4
0x121	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_4
0x124	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_4
0x126	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_4
0x12a	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_4
0x12e	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_4
0x132	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_4
0x136	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_4
0x139	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_4
0x13c	              0x90	                                     nop	       231	strbuf.h	FUNCTION_4
0x13d	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_4
0x13e	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_4
sort_ref_range	functions,0:IF,0:ELSE,0:FOR,0:DO,0:CALL,1:SWITCH,0:WHILE,0	19
0xca0	              0x55	                                push rbp	       356	show-branch.c	FUNCTION_25
0xca1	          0x4889e5	                            mov rbp, rsp	       356	show-branch.c	FUNCTION_25
0xca4	        0x4883ec10	                           sub rsp, 0x10	       356	show-branch.c	FUNCTION_25
0xca8	          0x897dfc	                mov dword [rbp - 4], edi	       356	show-branch.c	FUNCTION_25
0xcab	          0x8975f8	                mov dword [rbp - 8], esi	       356	show-branch.c	FUNCTION_25
0xcae	          0x8b45f8	                mov eax, dword [rbp - 8]	       357	show-branch.c	FUNCTION_25	CALL_1
0xcb1	          0x2b45fc	                sub eax, dword [rbp - 4]	       357	show-branch.c	FUNCTION_25	CALL_1
0xcb4	            0x4898	                                    cdqe	       357	show-branch.c	FUNCTION_25	CALL_1
0xcb6	          0x8b55fc	                mov edx, dword [rbp - 4]	       357	show-branch.c	FUNCTION_25	CALL_1
0xcb9	          0x4863d2	                         movsxd rdx, edx	       357	show-branch.c	FUNCTION_25	CALL_1
0xcbc	        0x48c1e203	                              shl rdx, 3	       357	show-branch.c	FUNCTION_25	CALL_1
0xcc0	    0x488dba000000	                          lea rdi, [rdx]	       357	show-branch.c	FUNCTION_25	CALL_1
0xcc7	      0xb900000000	                              mov ecx, 0	       357	show-branch.c	FUNCTION_25	CALL_1
0xccc	      0xba08000000	                              mov edx, 8	       357	show-branch.c	FUNCTION_25	CALL_1
0xcd1	          0x4889c6	                            mov rsi, rax	       357	show-branch.c	FUNCTION_25	CALL_1
0xcd4	      0xe888f3ffff	                     call sym.sane_qsort	       357	show-branch.c	FUNCTION_25	CALL_1
0xcd9	              0x90	                                     nop	       358	show-branch.c	FUNCTION_25
0xcda	              0xc9	                                   leave	       358	show-branch.c	FUNCTION_25
0xcdb	              0xc3	                                     ret	       358	show-branch.c	FUNCTION_25
strbuf_addstr	functions,0:IF,0:ELSE,0:FOR,0:DO,0:CALL,2:SWITCH,0:WHILE,0	17
0x13f	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_5
0x140	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_5
0x143	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_5
0x147	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_5
0x14b	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_5
0x14f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_5	CALL_2
0x153	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x156	      0xe800000000	                          call 0x400019b	       279	strbuf.h	FUNCTION_5	CALL_2
0x15b	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x15e	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_5	CALL_2
0x162	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_5	CALL_2
0x166	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_5	CALL_2
0x169	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x16c	      0xe800000000	                          call 0x40001b1	       279	strbuf.h	FUNCTION_5	CALL_2
0x171	              0x90	                                     nop	       280	strbuf.h	FUNCTION_5
0x172	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_5
0x173	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_5
append_one_rev	functions,0:IF,3:ELSE,0:FOR,0:DO,0:CALL,11:SWITCH,0:WHILE,0	82
0x137e	              0x55	                                push rbp	       515	show-branch.c	FUNCTION_35
0x137f	          0x4889e5	                            mov rbp, rsp	       515	show-branch.c	FUNCTION_35
0x1382	        0x4883ec40	                           sub rsp, 0x40	       515	show-branch.c	FUNCTION_35
0x1386	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       515	show-branch.c	FUNCTION_35
0x138a	    0x64488b042528	                mov rax, qword fs:[0x28]	       515	show-branch.c	FUNCTION_35
0x1393	        0x488945f8	                mov qword [rbp - 8], rax	       515	show-branch.c	FUNCTION_35
0x1397	            0x31c0	                            xor eax, eax	       515	show-branch.c	FUNCTION_35
0x1399	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       517	show-branch.c	FUNCTION_35	IF_1	CALL_1
0x139d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       517	show-branch.c	FUNCTION_35	IF_1	CALL_1
0x13a1	          0x4889d6	                            mov rsi, rdx	       517	show-branch.c	FUNCTION_35	IF_1	CALL_1
0x13a4	          0x4889c7	                            mov rdi, rax	       517	show-branch.c	FUNCTION_35	IF_1	CALL_1
0x13a7	      0xe800000000	                          call 0x40013ec	       517	show-branch.c	FUNCTION_35	IF_1	CALL_1
0x13ac	            0x85c0	                           test eax, eax	       517	show-branch.c	FUNCTION_35	IF_1	CALL_1
0x13ae	            0x751d	                           jne 0x400140d	       517	show-branch.c	FUNCTION_35	IF_1	CALL_1
0x13b0	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       518	show-branch.c	FUNCTION_35	IF_1	CALL_2
0x13b4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       518	show-branch.c	FUNCTION_35	IF_1	CALL_2
0x13b8	      0xba00000000	                              mov edx, 0	       518	show-branch.c	FUNCTION_35	IF_1	CALL_2
0x13bd	          0x4889ce	                            mov rsi, rcx	       518	show-branch.c	FUNCTION_35	IF_1	CALL_2
0x13c0	          0x4889c7	                            mov rdi, rax	       518	show-branch.c	FUNCTION_35	IF_1	CALL_2
0x13c3	      0xe814f9ffff	                     call sym.append_ref	       518	show-branch.c	FUNCTION_35	IF_1	CALL_2
0x13c8	      0xe9e1000000	                           jmp 0x40014ee	       519	show-branch.c	FUNCTION_35	IF_1
0x13cd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       521	show-branch.c	FUNCTION_35	IF_2	CALL_5
0x13d1	      0xbe2a000000	                           mov esi, 0x2a	       521	show-branch.c	FUNCTION_35	IF_2	CALL_5
0x13d6	          0x4889c7	                            mov rdi, rax	       521	show-branch.c	FUNCTION_35	IF_2	CALL_5
0x13d9	      0xe800000000	                          call 0x400141e	       521	show-branch.c	FUNCTION_35	IF_2	CALL_5
0x13de	          0x4885c0	                           test rax, rax	       521	show-branch.c	FUNCTION_35	IF_2	CALL_5
0x13e1	            0x7530	                           jne 0x4001453	       521	show-branch.c	FUNCTION_35	IF_2	CALL_5
0x13e3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       521	show-branch.c	FUNCTION_35	IF_2	CALL_5
0x13e7	      0xbe3f000000	                           mov esi, 0x3f	       521	show-branch.c	FUNCTION_35	IF_2	CALL_5
0x13ec	          0x4889c7	                            mov rdi, rax	       521	show-branch.c	FUNCTION_35	IF_2	CALL_5
0x13ef	      0xe800000000	                          call 0x4001434	       521	show-branch.c	FUNCTION_35	IF_2	CALL_5
0x13f4	          0x4885c0	                           test rax, rax	       521	show-branch.c	FUNCTION_35	IF_2	CALL_5
0x13f7	            0x751a	                           jne 0x4001453	       521	show-branch.c	FUNCTION_35	IF_2	CALL_5
0x13f9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       521	show-branch.c	FUNCTION_35	IF_2	CALL_5
0x13fd	      0xbe5b000000	                           mov esi, 0x5b	       521	show-branch.c	FUNCTION_35	IF_2	CALL_5
0x1402	          0x4889c7	                            mov rdi, rax	       521	show-branch.c	FUNCTION_35	IF_2	CALL_5
0x1405	      0xe800000000	                          call 0x400144a	       521	show-branch.c	FUNCTION_35	IF_2	CALL_5
0x140a	          0x4885c0	                           test rax, rax	       521	show-branch.c	FUNCTION_35	IF_2	CALL_5
0x140d	     0xf8485000000	                            je 0x40014d8	       521	show-branch.c	FUNCTION_35	IF_2	CALL_5
0x1413	    0x8b0500000000	            mov eax, dword [0x04001459] 	       523	show-branch.c	FUNCTION_35	IF_2
0x1419	          0x8945dc	             mov dword [rbp - 0x24], eax	       523	show-branch.c	FUNCTION_35	IF_2
0x141c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       525	show-branch.c	FUNCTION_35	IF_2
0x1420	    0x488905000000	            mov qword [0x04001467], rax 	       525	show-branch.c	FUNCTION_35	IF_2
0x1427	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       526	show-branch.c	FUNCTION_35	IF_2	CALL_6
0x142b	          0x4889c7	                            mov rdi, rax	       526	show-branch.c	FUNCTION_35	IF_2	CALL_6
0x142e	      0xe800000000	                          call 0x4001473	       526	show-branch.c	FUNCTION_35	IF_2	CALL_6
0x1433	    0x890500000000	            mov dword [0x04001479], eax 	       526	show-branch.c	FUNCTION_35	IF_2	CALL_6
0x1439	      0xbe00000000	                              mov esi, 0	       527	show-branch.c	FUNCTION_35	IF_2	CALL_7
0x143e	      0xbf00000000	                              mov edi, 0	       527	show-branch.c	FUNCTION_35	IF_2	CALL_7
0x1443	      0xe800000000	                          call 0x4001488	       527	show-branch.c	FUNCTION_35	IF_2	CALL_7
0x1448	    0x8b0500000000	            mov eax, dword [0x0400148e] 	       528	show-branch.c	FUNCTION_35	IF_2	IF_3
0x144e	          0x3945dc	            cmp dword [rbp - 0x24], eax 	       528	show-branch.c	FUNCTION_35	IF_2	IF_3
0x1451	            0x7531	                           jne 0x40014c4	       528	show-branch.c	FUNCTION_35	IF_2	IF_3
0x1453	    0x8b0500000000	            mov eax, dword [0x04001499] 	       529	show-branch.c	FUNCTION_35	IF_2	IF_3
0x1459	          0x83f818	                           cmp eax, 0x18	       528	show-branch.c	FUNCTION_35	IF_2	IF_3
0x145c	            0x7f26	                            jg 0x40014c4	       528	show-branch.c	FUNCTION_35	IF_2	IF_3
0x145e	      0xbf00000000	                              mov edi, 0	       530	show-branch.c	FUNCTION_35	IF_2	CALL_9
0x1463	      0xe80cedffff	                               call sym.	       530	show-branch.c	FUNCTION_35	IF_2	CALL_9
0x1468	          0x4889c2	                            mov rdx, rax	       530	show-branch.c	FUNCTION_35	IF_2	CALL_9
0x146b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       530	show-branch.c	FUNCTION_35	IF_2	CALL_9
0x146f	          0x4889c6	                            mov rsi, rax	       530	show-branch.c	FUNCTION_35	IF_2	CALL_9
0x1472	          0x4889d7	                            mov rdi, rdx	       530	show-branch.c	FUNCTION_35	IF_2	CALL_9
0x1475	      0xb800000000	                              mov eax, 0	       530	show-branch.c	FUNCTION_35	IF_2	CALL_9
0x147a	      0xe800000000	                          call 0x40014bf	       530	show-branch.c	FUNCTION_35	IF_2	CALL_9
0x147f	      0xe87cebffff	                    call sym.const_error	       530	show-branch.c	FUNCTION_35	IF_2	CALL_9
0x1484	    0x8b1500000000	            mov edx, dword [0x040014ca] 	       531	show-branch.c	FUNCTION_35	IF_2	CALL_10
0x148a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       531	show-branch.c	FUNCTION_35	IF_2	CALL_10
0x148d	            0x89d6	                            mov esi, edx	       531	show-branch.c	FUNCTION_35	IF_2	CALL_10
0x148f	            0x89c7	                            mov edi, eax	       531	show-branch.c	FUNCTION_35	IF_2	CALL_10
0x1491	      0xe80af8ffff	                 call sym.sort_ref_range	       531	show-branch.c	FUNCTION_35	IF_2	CALL_10
0x1496	            0xeb16	                           jmp 0x40014ee	       532	show-branch.c	FUNCTION_35	IF_2
0x1498	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       534	show-branch.c	FUNCTION_35	CALL_11
0x149c	          0x4889c6	                            mov rsi, rax	       534	show-branch.c	FUNCTION_35	CALL_11
0x149f	      0xbf00000000	                              mov edi, 0	       534	show-branch.c	FUNCTION_35	CALL_11
0x14a4	      0xb800000000	                              mov eax, 0	       534	show-branch.c	FUNCTION_35	CALL_11
0x14a9	      0xe800000000	                          call 0x40014ee	       534	show-branch.c	FUNCTION_35	CALL_11
0x14ae	        0x488b45f8	                mov rax, qword [rbp - 8]	       535	show-branch.c	FUNCTION_35
0x14b2	    0x644833042528	                xor rax, qword fs:[0x28]	       535	show-branch.c	FUNCTION_35
0x14bb	            0x7405	                            je 0x4001502	       535	show-branch.c	FUNCTION_35
0x14bd	      0xe800000000	                          call 0x4001502	       535	show-branch.c	FUNCTION_35
0x14c2	              0xc9	                                   leave	       535	show-branch.c	FUNCTION_35
0x14c3	              0xc3	                                     ret	       535	show-branch.c	FUNCTION_35
find_digit_prefix	functions,0:IF,0:ELSE,0:FOR,1:DO,0:CALL,0:SWITCH,0:WHILE,0	32
0xb02	              0x55	                                push rbp	       306	show-branch.c	FUNCTION_22
0xb03	          0x4889e5	                            mov rbp, rsp	       306	show-branch.c	FUNCTION_22
0xb06	        0x48897de8	             mov qword [rbp - 0x18], rdi	       306	show-branch.c	FUNCTION_22
0xb0a	        0x488975e0	             mov qword [rbp - 0x20], rsi	       306	show-branch.c	FUNCTION_22
0xb0e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       311	show-branch.c	FUNCTION_22	FOR_1
0xb12	        0x488945f8	                mov qword [rbp - 8], rax	       311	show-branch.c	FUNCTION_22	FOR_1
0xb16	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       311	show-branch.c	FUNCTION_22	FOR_1
0xb1d	            0xeb1f	                           jmp 0x4000b7e	       311	show-branch.c	FUNCTION_22	FOR_1
0xb1f	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       314	show-branch.c	FUNCTION_22	FOR_1
0xb22	            0x89d0	                            mov eax, edx	       314	show-branch.c	FUNCTION_22	FOR_1
0xb24	          0xc1e002	                              shl eax, 2	       314	show-branch.c	FUNCTION_22	FOR_1
0xb27	             0x1d0	                            add eax, edx	       314	show-branch.c	FUNCTION_22	FOR_1
0xb29	             0x1c0	                            add eax, eax	       314	show-branch.c	FUNCTION_22	FOR_1
0xb2b	            0x89c2	                            mov edx, eax	       314	show-branch.c	FUNCTION_22	FOR_1
0xb2d	         0xfbe45f3	             movsx eax, byte [rbp - 0xd]	       314	show-branch.c	FUNCTION_22	FOR_1
0xb31	             0x1d0	                            add eax, edx	       314	show-branch.c	FUNCTION_22	FOR_1
0xb33	          0x83e830	                           sub eax, 0x30	       314	show-branch.c	FUNCTION_22	FOR_1
0xb36	          0x8945f4	              mov dword [rbp - 0xc], eax	       314	show-branch.c	FUNCTION_22	FOR_1
0xb39	      0x488345f801	                  add qword [rbp - 8], 1	       313	show-branch.c	FUNCTION_22	FOR_1
0xb3e	        0x488b45f8	                mov rax, qword [rbp - 8]	       312	show-branch.c	FUNCTION_22	FOR_1
0xb42	           0xfb600	                   movzx eax, byte [rax]	       312	show-branch.c	FUNCTION_22	FOR_1
0xb45	          0x8845f3	                mov byte [rbp - 0xd], al	       312	show-branch.c	FUNCTION_22	FOR_1
0xb48	        0x807df32f	              cmp byte [rbp - 0xd], 0x2f	       311	show-branch.c	FUNCTION_22	FOR_1
0xb4c	            0x7e06	                           jle 0x4000b94	       311	show-branch.c	FUNCTION_22	FOR_1
0xb4e	        0x807df339	              cmp byte [rbp - 0xd], 0x39	       312	show-branch.c	FUNCTION_22	FOR_1
0xb52	            0x7ecb	                           jle 0x4000b5f	       312	show-branch.c	FUNCTION_22	FOR_1
0xb54	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       315	show-branch.c	FUNCTION_22
0xb58	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       315	show-branch.c	FUNCTION_22
0xb5b	            0x8910	                    mov dword [rax], edx	       315	show-branch.c	FUNCTION_22
0xb5d	        0x488b45f8	                mov rax, qword [rbp - 8]	       316	show-branch.c	FUNCTION_22
0xb61	              0x5d	                                 pop rbp	       317	show-branch.c	FUNCTION_22
0xb62	              0xc3	                                     ret	       317	show-branch.c	FUNCTION_22
append_remote_ref	functions,0:IF,2:ELSE,0:FOR,0:DO,0:CALL,4:SWITCH,0:WHILE,0	52
0xea8	              0x55	                                push rbp	       403	show-branch.c	FUNCTION_28
0xea9	          0x4889e5	                            mov rbp, rsp	       403	show-branch.c	FUNCTION_28
0xeac	        0x4883ec50	                           sub rsp, 0x50	       403	show-branch.c	FUNCTION_28
0xeb0	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       403	show-branch.c	FUNCTION_28
0xeb4	        0x488975c0	             mov qword [rbp - 0x40], rsi	       403	show-branch.c	FUNCTION_28
0xeb8	          0x8955bc	             mov dword [rbp - 0x44], edx	       403	show-branch.c	FUNCTION_28
0xebb	        0x48894db0	             mov qword [rbp - 0x50], rcx	       403	show-branch.c	FUNCTION_28
0xebf	    0x64488b042528	                mov rax, qword fs:[0x28]	       403	show-branch.c	FUNCTION_28
0xec8	        0x488945f8	                mov qword [rbp - 8], rax	       403	show-branch.c	FUNCTION_28
0xecc	            0x31c0	                            xor eax, eax	       403	show-branch.c	FUNCTION_28
0xece	    0xc745dc0d0000	            mov dword [rbp - 0x24], 0xd 	       405	show-branch.c	FUNCTION_28
0xed5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       406	show-branch.c	FUNCTION_28	IF_1	CALL_1
0xed9	      0xbe00000000	                              mov esi, 0	       406	show-branch.c	FUNCTION_28	IF_1	CALL_1
0xede	          0x4889c7	                            mov rdi, rax	       406	show-branch.c	FUNCTION_28	IF_1	CALL_1
0xee1	      0xe800000000	                          call 0x4000f26	       406	show-branch.c	FUNCTION_28	IF_1	CALL_1
0xee6	            0x85c0	                           test eax, eax	       406	show-branch.c	FUNCTION_28	IF_1	CALL_1
0xee8	            0x7507	                           jne 0x4000f31	       406	show-branch.c	FUNCTION_28	IF_1	CALL_1
0xeea	      0xb800000000	                              mov eax, 0	       407	show-branch.c	FUNCTION_28	IF_1
0xeef	            0xeb60	                           jmp 0x4000f91	       407	show-branch.c	FUNCTION_28	IF_1
0xef1	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       411	show-branch.c	FUNCTION_28	IF_2	CALL_3
0xef4	          0x4863d0	                         movsxd rdx, eax	       411	show-branch.c	FUNCTION_28	IF_2	CALL_3
0xef7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       411	show-branch.c	FUNCTION_28	IF_2	CALL_3
0xefb	          0x4801c2	                            add rdx, rax	       411	show-branch.c	FUNCTION_28	IF_2	CALL_3
0xefe	        0x488d45e0	                   lea rax, [rbp - 0x20]	       411	show-branch.c	FUNCTION_28	IF_2	CALL_3
0xf02	          0x4889c6	                            mov rsi, rax	       411	show-branch.c	FUNCTION_28	IF_2	CALL_3
0xf05	          0x4889d7	                            mov rdi, rdx	       411	show-branch.c	FUNCTION_28	IF_2	CALL_3
0xf08	      0xe800000000	                          call 0x4000f4d	       411	show-branch.c	FUNCTION_28	IF_2	CALL_3
0xf0d	            0x85c0	                           test eax, eax	       411	show-branch.c	FUNCTION_28	IF_2	CALL_3
0xf0f	            0x7517	                           jne 0x4000f68	       411	show-branch.c	FUNCTION_28	IF_2	CALL_3
0xf11	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       411	show-branch.c	FUNCTION_28	IF_2	CALL_3
0xf15	        0x488d45e0	                   lea rax, [rbp - 0x20]	       411	show-branch.c	FUNCTION_28	IF_2	CALL_3
0xf19	          0x4889d6	                            mov rsi, rdx	       411	show-branch.c	FUNCTION_28	IF_2	CALL_3
0xf1c	          0x4889c7	                            mov rdi, rax	       411	show-branch.c	FUNCTION_28	IF_2	CALL_3
0xf1f	      0xe8d3f2ffff	                         call sym.oidcmp	       411	show-branch.c	FUNCTION_28	IF_2	CALL_3
0xf24	            0x85c0	                           test eax, eax	       411	show-branch.c	FUNCTION_28	IF_2	CALL_3
0xf26	            0x7407	                            je 0x4000f6f	       411	show-branch.c	FUNCTION_28	IF_2	CALL_3
0xf28	    0xc745dc050000	               mov dword [rbp - 0x24], 5	       412	show-branch.c	FUNCTION_28	IF_2
0xf2f	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       413	show-branch.c	FUNCTION_28	CALL_4
0xf32	          0x4863d0	                         movsxd rdx, eax	       413	show-branch.c	FUNCTION_28	CALL_4
0xf35	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       413	show-branch.c	FUNCTION_28	CALL_4
0xf39	        0x488d0c02	                    lea rcx, [rdx + rax]	       413	show-branch.c	FUNCTION_28	CALL_4
0xf3d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       413	show-branch.c	FUNCTION_28	CALL_4
0xf41	      0xba00000000	                              mov edx, 0	       413	show-branch.c	FUNCTION_28	CALL_4
0xf46	          0x4889c6	                            mov rsi, rax	       413	show-branch.c	FUNCTION_28	CALL_4
0xf49	          0x4889cf	                            mov rdi, rcx	       413	show-branch.c	FUNCTION_28	CALL_4
0xf4c	      0xe88bfdffff	                     call sym.append_ref	       413	show-branch.c	FUNCTION_28	CALL_4
0xf51	        0x488b4df8	                mov rcx, qword [rbp - 8]	       414	show-branch.c	FUNCTION_28
0xf55	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       414	show-branch.c	FUNCTION_28
0xf5e	            0x7405	                            je 0x4000fa5	       414	show-branch.c	FUNCTION_28
0xf60	      0xe800000000	                          call 0x4000fa5	       414	show-branch.c	FUNCTION_28
0xf65	              0xc9	                                   leave	       414	show-branch.c	FUNCTION_28
0xf66	              0xc3	                                     ret	       414	show-branch.c	FUNCTION_28
compare_ref_name	functions,0:IF,0:ELSE,0:FOR,0:DO,0:CALL,1:SWITCH,0:WHILE,0	18
0xc65	              0x55	                                push rbp	       350	show-branch.c	FUNCTION_24
0xc66	          0x4889e5	                            mov rbp, rsp	       350	show-branch.c	FUNCTION_24
0xc69	        0x4883ec20	                           sub rsp, 0x20	       350	show-branch.c	FUNCTION_24
0xc6d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       350	show-branch.c	FUNCTION_24
0xc71	        0x488975e0	             mov qword [rbp - 0x20], rsi	       350	show-branch.c	FUNCTION_24
0xc75	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       351	show-branch.c	FUNCTION_24
0xc79	        0x488945f0	             mov qword [rbp - 0x10], rax	       351	show-branch.c	FUNCTION_24
0xc7d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       351	show-branch.c	FUNCTION_24
0xc81	        0x488945f8	                mov qword [rbp - 8], rax	       351	show-branch.c	FUNCTION_24
0xc85	        0x488b45f8	                mov rax, qword [rbp - 8]	       352	show-branch.c	FUNCTION_24	CALL_1
0xc89	          0x488b10	                    mov rdx, qword [rax]	       352	show-branch.c	FUNCTION_24	CALL_1
0xc8c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       352	show-branch.c	FUNCTION_24	CALL_1
0xc90	          0x488b00	                    mov rax, qword [rax]	       352	show-branch.c	FUNCTION_24	CALL_1
0xc93	          0x4889d6	                            mov rsi, rdx	       352	show-branch.c	FUNCTION_24	CALL_1
0xc96	          0x4889c7	                            mov rdi, rax	       352	show-branch.c	FUNCTION_24	CALL_1
0xc99	      0xe8c5feffff	                    call sym.version_cmp	       352	show-branch.c	FUNCTION_24	CALL_1
0xc9e	              0xc9	                                   leave	       353	show-branch.c	FUNCTION_24
0xc9f	              0xc3	                                     ret	       353	show-branch.c	FUNCTION_24
show_one_commit	functions,0:IF,5:ELSE,2:FOR,0:DO,0:CALL,10:SWITCH,0:WHILE,0	90
0x99d	              0x55	                                push rbp	       271	show-branch.c	FUNCTION_21
0x99e	          0x4889e5	                            mov rbp, rsp	       271	show-branch.c	FUNCTION_21
0x9a1	        0x4883ec40	                           sub rsp, 0x40	       271	show-branch.c	FUNCTION_21
0x9a5	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       271	show-branch.c	FUNCTION_21
0x9a9	          0x8975c4	             mov dword [rbp - 0x3c], esi	       271	show-branch.c	FUNCTION_21
0x9ac	    0x64488b042528	                mov rax, qword fs:[0x28]	       271	show-branch.c	FUNCTION_21
0x9b5	        0x488945f8	                mov qword [rbp - 8], rax	       271	show-branch.c	FUNCTION_21
0x9b9	            0x31c0	                            xor eax, eax	       271	show-branch.c	FUNCTION_21
0x9bb	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       272	show-branch.c	FUNCTION_21
0x9c3	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       272	show-branch.c	FUNCTION_21
0x9cb	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       272	show-branch.c	FUNCTION_21
0x9d3	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       273	show-branch.c	FUNCTION_21
0x9db	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       274	show-branch.c	FUNCTION_21
0x9df	        0x488b4018	            mov rax, qword [rax + 0x18] 	       274	show-branch.c	FUNCTION_21
0x9e3	        0x488945d8	             mov qword [rbp - 0x28], rax	       274	show-branch.c	FUNCTION_21
0x9e7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       276	show-branch.c	FUNCTION_21	IF_1
0x9eb	           0xfb600	                   movzx eax, byte [rax]	       276	show-branch.c	FUNCTION_21	IF_1
0x9ee	          0x83e001	                              and eax, 1	       276	show-branch.c	FUNCTION_21	IF_1
0x9f1	            0x84c0	                             test al, al	       276	show-branch.c	FUNCTION_21	IF_1
0x9f3	            0x741d	                            je 0x4000a52	       276	show-branch.c	FUNCTION_21	IF_1
0x9f5	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       277	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x9f9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       277	show-branch.c	FUNCTION_21	IF_1	CALL_1
0x9fd	          0x4889c6	                            mov rsi, rax	       277	show-branch.c	FUNCTION_21	IF_1	CALL_1
0xa00	      0xbf05000000	                              mov edi, 5	       277	show-branch.c	FUNCTION_21	IF_1	CALL_1
0xa05	      0xe800000000	                          call 0x4000a4a	       277	show-branch.c	FUNCTION_21	IF_1	CALL_1
0xa0a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       278	show-branch.c	FUNCTION_21	IF_1
0xa0e	        0x488945d0	             mov qword [rbp - 0x30], rax	       278	show-branch.c	FUNCTION_21	IF_1
0xa12	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       280	show-branch.c	FUNCTION_21	CALL_2
0xa16	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       280	show-branch.c	FUNCTION_21	CALL_2
0xa1a	      0xbe00000000	                              mov esi, 0	       280	show-branch.c	FUNCTION_21	CALL_2
0xa1f	          0x4889c7	                            mov rdi, rax	       280	show-branch.c	FUNCTION_21	CALL_2
0xa22	      0xe8e4f5ffff	                    call sym.skip_prefix	       280	show-branch.c	FUNCTION_21	CALL_2
0xa27	        0x837dc400	               cmp dword [rbp - 0x3c], 0	       282	show-branch.c	FUNCTION_21	IF_2
0xa2b	     0xf85a2000000	                           jne 0x4000b13	       282	show-branch.c	FUNCTION_21	IF_2
0xa31	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       283	show-branch.c	FUNCTION_21	IF_2	IF_3
0xa36	            0x7471	                            je 0x4000ae9	       283	show-branch.c	FUNCTION_21	IF_2	IF_3
0xa38	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       283	show-branch.c	FUNCTION_21	IF_2	IF_3
0xa3c	          0x488b00	                    mov rax, qword [rax]	       283	show-branch.c	FUNCTION_21	IF_2	IF_3
0xa3f	          0x4885c0	                           test rax, rax	       283	show-branch.c	FUNCTION_21	IF_2	IF_3
0xa42	            0x7465	                            je 0x4000ae9	       283	show-branch.c	FUNCTION_21	IF_2	IF_3
0xa44	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       284	show-branch.c	FUNCTION_21	IF_2	IF_3	CALL_3
0xa48	          0x488b00	                    mov rax, qword [rax]	       284	show-branch.c	FUNCTION_21	IF_2	IF_3	CALL_3
0xa4b	          0x4889c6	                            mov rsi, rax	       284	show-branch.c	FUNCTION_21	IF_2	IF_3	CALL_3
0xa4e	      0xbf00000000	                              mov edi, 0	       284	show-branch.c	FUNCTION_21	IF_2	IF_3	CALL_3
0xa53	      0xb800000000	                              mov eax, 0	       284	show-branch.c	FUNCTION_21	IF_2	IF_3	CALL_3
0xa58	      0xe800000000	                          call 0x4000a9d	       284	show-branch.c	FUNCTION_21	IF_2	IF_3	CALL_3
0xa5d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       285	show-branch.c	FUNCTION_21	IF_2	IF_3	IF_4
0xa61	          0x8b4008	                mov eax, dword [rax + 8]	       285	show-branch.c	FUNCTION_21	IF_2	IF_3	IF_4
0xa64	            0x85c0	                           test eax, eax	       285	show-branch.c	FUNCTION_21	IF_2	IF_3	IF_4
0xa66	            0x7430	                            je 0x4000ad8	       285	show-branch.c	FUNCTION_21	IF_2	IF_3	IF_4
0xa68	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       286	show-branch.c	FUNCTION_21	IF_2	IF_3	IF_4	IF_5
0xa6c	          0x8b4008	                mov eax, dword [rax + 8]	       286	show-branch.c	FUNCTION_21	IF_2	IF_3	IF_4	IF_5
0xa6f	          0x83f801	                              cmp eax, 1	       286	show-branch.c	FUNCTION_21	IF_2	IF_3	IF_4	IF_5
0xa72	            0x750c	                           jne 0x4000ac0	       286	show-branch.c	FUNCTION_21	IF_2	IF_3	IF_4	IF_5
0xa74	      0xbf5e000000	                           mov edi, 0x5e	       287	show-branch.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_4
0xa79	      0xe800000000	                          call 0x4000abe	       287	show-branch.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_4
0xa7e	            0xeb18	                           jmp 0x4000ad8	       287	show-branch.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_4
0xa80	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       289	show-branch.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_5
0xa84	          0x8b4008	                mov eax, dword [rax + 8]	       289	show-branch.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_5
0xa87	            0x89c6	                            mov esi, eax	       289	show-branch.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_5
0xa89	      0xbf00000000	                              mov edi, 0	       289	show-branch.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_5
0xa8e	      0xb800000000	                              mov eax, 0	       289	show-branch.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_5
0xa93	      0xe800000000	                          call 0x4000ad8	       289	show-branch.c	FUNCTION_21	IF_2	IF_3	IF_4	CALL_5
0xa98	      0xbf00000000	                              mov edi, 0	       291	show-branch.c	FUNCTION_21	IF_2	IF_3	CALL_6
0xa9d	      0xb800000000	                              mov eax, 0	       291	show-branch.c	FUNCTION_21	IF_2	IF_3	CALL_6
0xaa2	      0xe800000000	                          call 0x4000ae7	       291	show-branch.c	FUNCTION_21	IF_2	IF_3	CALL_6
0xaa7	            0xeb2a	                           jmp 0x4000b13	       291	show-branch.c	FUNCTION_21	IF_2	IF_3	CALL_6
0xaa9	    0x8b0500000000	            mov eax, dword [0x04000aef] 	       294	show-branch.c	FUNCTION_21	IF_2	ELSE_2	CALL_7
0xaaf	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       295	show-branch.c	FUNCTION_21	IF_2	ELSE_2	CALL_8
0xab3	        0x4883c204	                              add rdx, 4	       295	show-branch.c	FUNCTION_21	IF_2	ELSE_2	CALL_8
0xab7	            0x89c6	                            mov esi, eax	       294	show-branch.c	FUNCTION_21	IF_2	ELSE_2	CALL_7
0xab9	          0x4889d7	                            mov rdi, rdx	       294	show-branch.c	FUNCTION_21	IF_2	ELSE_2	CALL_7
0xabc	      0xe800000000	                          call 0x4000b01	       294	show-branch.c	FUNCTION_21	IF_2	ELSE_2	CALL_7
0xac1	          0x4889c6	                            mov rsi, rax	       294	show-branch.c	FUNCTION_21	IF_2	ELSE_2	CALL_7
0xac4	      0xbf00000000	                              mov edi, 0	       294	show-branch.c	FUNCTION_21	IF_2	ELSE_2	CALL_7
0xac9	      0xb800000000	                              mov eax, 0	       294	show-branch.c	FUNCTION_21	IF_2	ELSE_2	CALL_7
0xace	      0xe800000000	                          call 0x4000b13	       294	show-branch.c	FUNCTION_21	IF_2	ELSE_2	CALL_7
0xad3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       298	show-branch.c	FUNCTION_21	CALL_9
0xad7	          0x4889c7	                            mov rdi, rax	       298	show-branch.c	FUNCTION_21	CALL_9
0xada	      0xe800000000	                          call 0x4000b1f	       298	show-branch.c	FUNCTION_21	CALL_9
0xadf	        0x488d45e0	                   lea rax, [rbp - 0x20]	       299	show-branch.c	FUNCTION_21	CALL_10
0xae3	          0x4889c7	                            mov rdi, rax	       299	show-branch.c	FUNCTION_21	CALL_10
0xae6	      0xe800000000	                          call 0x4000b2b	       299	show-branch.c	FUNCTION_21	CALL_10
0xaeb	              0x90	                                     nop	       300	show-branch.c	FUNCTION_21
0xaec	        0x488b45f8	                mov rax, qword [rbp - 8]	       300	show-branch.c	FUNCTION_21
0xaf0	    0x644833042528	                xor rax, qword fs:[0x28]	       300	show-branch.c	FUNCTION_21
0xaf9	            0x7405	                            je 0x4000b40	       300	show-branch.c	FUNCTION_21
0xafb	      0xe800000000	                          call 0x4000b40	       300	show-branch.c	FUNCTION_21
0xb00	              0xc9	                                   leave	       300	show-branch.c	FUNCTION_21
0xb01	              0xc3	                                     ret	       300	show-branch.c	FUNCTION_21
rev_is_head	functions,0:IF,2:ELSE,0:FOR,0:DO,0:CALL,5:SWITCH,0:WHILE,0	50
0x1137	              0x55	                                push rbp	       468	show-branch.c	FUNCTION_32
0x1138	          0x4889e5	                            mov rbp, rsp	       468	show-branch.c	FUNCTION_32
0x113b	        0x4883ec20	                           sub rsp, 0x20	       468	show-branch.c	FUNCTION_32
0x113f	        0x48897df8	                mov qword [rbp - 8], rdi	       468	show-branch.c	FUNCTION_32
0x1143	        0x488975f0	             mov qword [rbp - 0x10], rsi	       468	show-branch.c	FUNCTION_32
0x1147	        0x488955e8	             mov qword [rbp - 0x18], rdx	       468	show-branch.c	FUNCTION_32
0x114b	        0x48894de0	             mov qword [rbp - 0x20], rcx	       468	show-branch.c	FUNCTION_32
0x114f	        0x488b45f8	                mov rax, qword [rbp - 8]	       469	show-branch.c	FUNCTION_32	IF_1	CALL_1
0x1153	          0x4885c0	                           test rax, rax	       469	show-branch.c	FUNCTION_32	IF_1	CALL_1
0x1156	            0x7425	                            je 0x40011bd	       469	show-branch.c	FUNCTION_32	IF_1	CALL_1
0x1158	      0x48837de800	               cmp qword [rbp - 0x18], 0	       469	show-branch.c	FUNCTION_32	IF_1	CALL_1
0x115d	            0x7425	                            je 0x40011c4	       469	show-branch.c	FUNCTION_32	IF_1	CALL_1
0x115f	      0x48837de000	               cmp qword [rbp - 0x20], 0	       469	show-branch.c	FUNCTION_32	IF_1	CALL_1
0x1164	            0x741e	                            je 0x40011c4	       469	show-branch.c	FUNCTION_32	IF_1	CALL_1
0x1166	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       469	show-branch.c	FUNCTION_32	IF_1	CALL_1
0x116a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       469	show-branch.c	FUNCTION_32	IF_1	CALL_1
0x116e	          0x4889d6	                            mov rsi, rdx	       469	show-branch.c	FUNCTION_32	IF_1	CALL_1
0x1171	          0x4889c7	                            mov rdi, rax	       469	show-branch.c	FUNCTION_32	IF_1	CALL_1
0x1174	      0xe854f0ffff	                        call sym.hashcmp	       469	show-branch.c	FUNCTION_32	IF_1	CALL_1
0x1179	            0x85c0	                           test eax, eax	       469	show-branch.c	FUNCTION_32	IF_1	CALL_1
0x117b	            0x7407	                            je 0x40011c4	       469	show-branch.c	FUNCTION_32	IF_1	CALL_1
0x117d	      0xb800000000	                              mov eax, 0	       470	show-branch.c	FUNCTION_32	IF_1
0x1182	            0xeb5e	                           jmp 0x4001222	       470	show-branch.c	FUNCTION_32	IF_1
0x1184	        0x488b45f8	                mov rax, qword [rbp - 8]	       471	show-branch.c	FUNCTION_32	CALL_2
0x1188	        0x488d55f8	                      lea rdx, [rbp - 8]	       471	show-branch.c	FUNCTION_32	CALL_2
0x118c	      0xbe00000000	                              mov esi, 0	       471	show-branch.c	FUNCTION_32	CALL_2
0x1191	          0x4889c7	                            mov rdi, rax	       471	show-branch.c	FUNCTION_32	CALL_2
0x1194	      0xe872eeffff	                    call sym.skip_prefix	       471	show-branch.c	FUNCTION_32	CALL_2
0x1199	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       472	show-branch.c	FUNCTION_32	IF_2	CALL_3
0x119d	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       472	show-branch.c	FUNCTION_32	IF_2	CALL_3
0x11a1	      0xbe00000000	                              mov esi, 0	       472	show-branch.c	FUNCTION_32	IF_2	CALL_3
0x11a6	          0x4889c7	                            mov rdi, rax	       472	show-branch.c	FUNCTION_32	IF_2	CALL_3
0x11a9	      0xe85deeffff	                    call sym.skip_prefix	       472	show-branch.c	FUNCTION_32	IF_2	CALL_3
0x11ae	            0x85c0	                           test eax, eax	       472	show-branch.c	FUNCTION_32	IF_2	CALL_3
0x11b0	            0x7515	                           jne 0x4001207	       472	show-branch.c	FUNCTION_32	IF_2	CALL_3
0x11b2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       473	show-branch.c	FUNCTION_32	CALL_4
0x11b6	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       473	show-branch.c	FUNCTION_32	CALL_4
0x11ba	      0xbe00000000	                              mov esi, 0	       473	show-branch.c	FUNCTION_32	CALL_4
0x11bf	          0x4889c7	                            mov rdi, rax	       473	show-branch.c	FUNCTION_32	CALL_4
0x11c2	      0xe844eeffff	                    call sym.skip_prefix	       473	show-branch.c	FUNCTION_32	CALL_4
0x11c7	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       474	show-branch.c	FUNCTION_32	CALL_5
0x11cb	        0x488b45f8	                mov rax, qword [rbp - 8]	       474	show-branch.c	FUNCTION_32	CALL_5
0x11cf	          0x4889d6	                            mov rsi, rdx	       474	show-branch.c	FUNCTION_32	CALL_5
0x11d2	          0x4889c7	                            mov rdi, rax	       474	show-branch.c	FUNCTION_32	CALL_5
0x11d5	      0xe800000000	                          call 0x400121a	       474	show-branch.c	FUNCTION_32	CALL_5
0x11da	            0x85c0	                           test eax, eax	       474	show-branch.c	FUNCTION_32	CALL_5
0x11dc	           0xf94c0	                                 sete al	       474	show-branch.c	FUNCTION_32	CALL_5
0x11df	           0xfb6c0	                           movzx eax, al	       474	show-branch.c	FUNCTION_32	CALL_5
0x11e2	              0xc9	                                   leave	       475	show-branch.c	FUNCTION_32
0x11e3	              0xc3	                                     ret	       475	show-branch.c	FUNCTION_32
version_cmp	functions,0:IF,6:ELSE,0:FOR,0:DO,0:CALL,2:SWITCH,0:WHILE,2	74
0xb63	              0x55	                                push rbp	       321	show-branch.c	FUNCTION_23
0xb64	          0x4889e5	                            mov rbp, rsp	       321	show-branch.c	FUNCTION_23
0xb67	        0x4883ec30	                           sub rsp, 0x30	       321	show-branch.c	FUNCTION_23
0xb6b	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       321	show-branch.c	FUNCTION_23
0xb6f	        0x488975d0	             mov qword [rbp - 0x30], rsi	       321	show-branch.c	FUNCTION_23
0xb73	    0x64488b042528	                mov rax, qword fs:[0x28]	       321	show-branch.c	FUNCTION_23
0xb7c	        0x488945f8	                mov qword [rbp - 8], rax	       321	show-branch.c	FUNCTION_23
0xb80	            0x31c0	                            xor eax, eax	       321	show-branch.c	FUNCTION_23
0xb82	        0x488d55e8	                   lea rdx, [rbp - 0x18]	       325	show-branch.c	FUNCTION_23	WHILE_1	CALL_1
0xb86	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       325	show-branch.c	FUNCTION_23	WHILE_1	CALL_1
0xb8a	          0x4889d6	                            mov rsi, rdx	       325	show-branch.c	FUNCTION_23	WHILE_1	CALL_1
0xb8d	          0x4889c7	                            mov rdi, rax	       325	show-branch.c	FUNCTION_23	WHILE_1	CALL_1
0xb90	      0xe86dffffff	              call sym.find_digit_prefix	       325	show-branch.c	FUNCTION_23	WHILE_1	CALL_1
0xb95	        0x488945d8	             mov qword [rbp - 0x28], rax	       325	show-branch.c	FUNCTION_23	WHILE_1	CALL_1
0xb99	        0x488d55ec	                   lea rdx, [rbp - 0x14]	       326	show-branch.c	FUNCTION_23	WHILE_1	CALL_2
0xb9d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       326	show-branch.c	FUNCTION_23	WHILE_1	CALL_2
0xba1	          0x4889d6	                            mov rsi, rdx	       326	show-branch.c	FUNCTION_23	WHILE_1	CALL_2
0xba4	          0x4889c7	                            mov rdi, rax	       326	show-branch.c	FUNCTION_23	WHILE_1	CALL_2
0xba7	      0xe856ffffff	              call sym.find_digit_prefix	       326	show-branch.c	FUNCTION_23	WHILE_1	CALL_2
0xbac	        0x488945d0	             mov qword [rbp - 0x30], rax	       326	show-branch.c	FUNCTION_23	WHILE_1	CALL_2
0xbb0	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       327	show-branch.c	FUNCTION_23	WHILE_1	IF_1
0xbb3	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       327	show-branch.c	FUNCTION_23	WHILE_1	IF_1
0xbb6	            0x39c2	                            cmp edx, eax	       327	show-branch.c	FUNCTION_23	WHILE_1	IF_1
0xbb8	            0x740f	                            je 0x4000c09	       327	show-branch.c	FUNCTION_23	WHILE_1	IF_1
0xbba	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       328	show-branch.c	FUNCTION_23	WHILE_1	IF_1
0xbbd	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       328	show-branch.c	FUNCTION_23	WHILE_1	IF_1
0xbc0	            0x29c2	                            sub edx, eax	       328	show-branch.c	FUNCTION_23	WHILE_1	IF_1
0xbc2	            0x89d0	                            mov eax, edx	       328	show-branch.c	FUNCTION_23	WHILE_1	IF_1
0xbc4	      0xe986000000	                           jmp 0x4000c8f	       328	show-branch.c	FUNCTION_23	WHILE_1	IF_1
0xbc9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       331	show-branch.c	FUNCTION_23	WHILE_1	WHILE_2
0xbcd	           0xfb600	                   movzx eax, byte [rax]	       331	show-branch.c	FUNCTION_23	WHILE_1	WHILE_2
0xbd0	           0xfbec0	                           movsx eax, al	       331	show-branch.c	FUNCTION_23	WHILE_1	WHILE_2
0xbd3	          0x8945f0	             mov dword [rbp - 0x10], eax	       331	show-branch.c	FUNCTION_23	WHILE_1	WHILE_2
0xbd6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       332	show-branch.c	FUNCTION_23	WHILE_1	WHILE_2
0xbda	           0xfb600	                   movzx eax, byte [rax]	       332	show-branch.c	FUNCTION_23	WHILE_1	WHILE_2
0xbdd	           0xfbec0	                           movsx eax, al	       332	show-branch.c	FUNCTION_23	WHILE_1	WHILE_2
0xbe0	          0x8945f4	              mov dword [rbp - 0xc], eax	       332	show-branch.c	FUNCTION_23	WHILE_1	WHILE_2
0xbe3	        0x837df02f	           cmp dword [rbp - 0x10], 0x2f 	       333	show-branch.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0xbe7	            0x7e0d	                           jle 0x4000c36	       333	show-branch.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0xbe9	        0x837df039	           cmp dword [rbp - 0x10], 0x39 	       333	show-branch.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0xbed	            0x7f07	                            jg 0x4000c36	       333	show-branch.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0xbef	    0xc745f0000000	               mov dword [rbp - 0x10], 0	       334	show-branch.c	FUNCTION_23	WHILE_1	WHILE_2	IF_2
0xbf6	        0x837df42f	            cmp dword [rbp - 0xc], 0x2f 	       335	show-branch.c	FUNCTION_23	WHILE_1	WHILE_2	IF_3
0xbfa	            0x7e0d	                           jle 0x4000c49	       335	show-branch.c	FUNCTION_23	WHILE_1	WHILE_2	IF_3
0xbfc	        0x837df439	            cmp dword [rbp - 0xc], 0x39 	       335	show-branch.c	FUNCTION_23	WHILE_1	WHILE_2	IF_3
0xc00	            0x7f07	                            jg 0x4000c49	       335	show-branch.c	FUNCTION_23	WHILE_1	WHILE_2	IF_3
0xc02	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       336	show-branch.c	FUNCTION_23	WHILE_1	WHILE_2	IF_3
0xc09	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       337	show-branch.c	FUNCTION_23	WHILE_1	WHILE_2	IF_4
0xc0c	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       337	show-branch.c	FUNCTION_23	WHILE_1	WHILE_2	IF_4
0xc0f	            0x7408	                            je 0x4000c59	       337	show-branch.c	FUNCTION_23	WHILE_1	WHILE_2	IF_4
0xc11	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       338	show-branch.c	FUNCTION_23	WHILE_1	WHILE_2	IF_4
0xc14	          0x2b45f4	              sub eax, dword [rbp - 0xc]	       338	show-branch.c	FUNCTION_23	WHILE_1	WHILE_2	IF_4
0xc17	            0xeb36	                           jmp 0x4000c8f	       338	show-branch.c	FUNCTION_23	WHILE_1	WHILE_2	IF_4
0xc19	        0x837df000	               cmp dword [rbp - 0x10], 0	       339	show-branch.c	FUNCTION_23	WHILE_1	WHILE_2	IF_5
0xc1d	            0x740c	                            je 0x4000c6b	       339	show-branch.c	FUNCTION_23	WHILE_1	WHILE_2	IF_5
0xc1f	      0x488345d801	               add qword [rbp - 0x28], 1	       341	show-branch.c	FUNCTION_23	WHILE_1	WHILE_2
0xc24	      0x488345d001	               add qword [rbp - 0x30], 1	       342	show-branch.c	FUNCTION_23	WHILE_1	WHILE_2
0xc29	            0xeb9e	                           jmp 0x4000c09	       343	show-branch.c	FUNCTION_23	WHILE_1	WHILE_2
0xc2b	              0x90	                                     nop	       340	show-branch.c	FUNCTION_23	WHILE_1	WHILE_2	IF_5
0xc2c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       344	show-branch.c	FUNCTION_23	WHILE_1	IF_6
0xc30	           0xfb600	                   movzx eax, byte [rax]	       344	show-branch.c	FUNCTION_23	WHILE_1	IF_6
0xc33	            0x84c0	                             test al, al	       344	show-branch.c	FUNCTION_23	WHILE_1	IF_6
0xc35	     0xf8547ffffff	                           jne 0x4000bc2	       344	show-branch.c	FUNCTION_23	WHILE_1	IF_6
0xc3b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       344	show-branch.c	FUNCTION_23	WHILE_1	IF_6
0xc3f	           0xfb600	                   movzx eax, byte [rax]	       344	show-branch.c	FUNCTION_23	WHILE_1	IF_6
0xc42	            0x84c0	                             test al, al	       344	show-branch.c	FUNCTION_23	WHILE_1	IF_6
0xc44	     0xf8538ffffff	                           jne 0x4000bc2	       344	show-branch.c	FUNCTION_23	WHILE_1	IF_6
0xc4a	      0xb800000000	                              mov eax, 0	       345	show-branch.c	FUNCTION_23	WHILE_1	IF_6
0xc4f	        0x488b4df8	                mov rcx, qword [rbp - 8]	       347	show-branch.c	FUNCTION_23
0xc53	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       347	show-branch.c	FUNCTION_23
0xc5c	            0x7405	                            je 0x4000ca3	       347	show-branch.c	FUNCTION_23
0xc5e	      0xe800000000	                          call 0x4000ca3	       347	show-branch.c	FUNCTION_23
0xc63	              0xc9	                                   leave	       347	show-branch.c	FUNCTION_23
0xc64	              0xc3	                                     ret	       347	show-branch.c	FUNCTION_23
append_matching_ref	functions,0:IF,5:ELSE,0:FOR,1:DO,0:CALL,7:SWITCH,0:WHILE,0	78
0xfb8	              0x55	                                push rbp	       429	show-branch.c	FUNCTION_30
0xfb9	          0x4889e5	                            mov rbp, rsp	       429	show-branch.c	FUNCTION_30
0xfbc	        0x4883ec30	                           sub rsp, 0x30	       429	show-branch.c	FUNCTION_30
0xfc0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       429	show-branch.c	FUNCTION_30
0xfc4	        0x488975e0	             mov qword [rbp - 0x20], rsi	       429	show-branch.c	FUNCTION_30
0xfc8	          0x8955dc	             mov dword [rbp - 0x24], edx	       429	show-branch.c	FUNCTION_30
0xfcb	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       429	show-branch.c	FUNCTION_30
0xfcf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       435	show-branch.c	FUNCTION_30	CALL_1
0xfd3	          0x4889c7	                            mov rdi, rax	       435	show-branch.c	FUNCTION_30	CALL_1
0xfd6	      0xe800000000	                          call 0x400101b	       435	show-branch.c	FUNCTION_30	CALL_1
0xfdb	          0x8945f4	              mov dword [rbp - 0xc], eax	       435	show-branch.c	FUNCTION_30	CALL_1
0xfde	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       436	show-branch.c	FUNCTION_30	FOR_1
0xfe2	        0x488945f8	                mov qword [rbp - 8], rax	       436	show-branch.c	FUNCTION_30	FOR_1
0xfe6	            0xeb17	                           jmp 0x400103f	       436	show-branch.c	FUNCTION_30	FOR_1
0xfe8	        0x488b45f8	                mov rax, qword [rbp - 8]	       437	show-branch.c	FUNCTION_30	FOR_1	IF_1
0xfec	        0x488d5001	                      lea rdx, [rax + 1]	       437	show-branch.c	FUNCTION_30	FOR_1	IF_1
0xff0	        0x488955f8	                mov qword [rbp - 8], rdx	       437	show-branch.c	FUNCTION_30	FOR_1	IF_1
0xff4	           0xfb600	                   movzx eax, byte [rax]	       437	show-branch.c	FUNCTION_30	FOR_1	IF_1
0xff7	            0x3c2f	                            cmp al, 0x2f	       437	show-branch.c	FUNCTION_30	FOR_1	IF_1
0xff9	            0x7504	                           jne 0x400103f	       437	show-branch.c	FUNCTION_30	FOR_1	IF_1
0xffb	        0x836df401	                sub dword [rbp - 0xc], 1	       438	show-branch.c	FUNCTION_30	FOR_1	IF_1
0xfff	        0x488b45f8	                mov rax, qword [rbp - 8]	       436	show-branch.c	FUNCTION_30	FOR_1
0x1003	           0xfb600	                   movzx eax, byte [rax]	       436	show-branch.c	FUNCTION_30	FOR_1
0x1006	            0x84c0	                             test al, al	       436	show-branch.c	FUNCTION_30	FOR_1
0x1008	            0x740b	                            je 0x4001055	       436	show-branch.c	FUNCTION_30	FOR_1
0x100a	    0x8b0500000000	            mov eax, dword [0x04001050] 	       436	show-branch.c	FUNCTION_30	FOR_1
0x1010	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       436	show-branch.c	FUNCTION_30	FOR_1
0x1013	            0x7cd3	                            jl 0x4001028	       436	show-branch.c	FUNCTION_30	FOR_1
0x1015	        0x488b45f8	                mov rax, qword [rbp - 8]	       439	show-branch.c	FUNCTION_30	IF_2
0x1019	           0xfb600	                   movzx eax, byte [rax]	       439	show-branch.c	FUNCTION_30	IF_2
0x101c	            0x84c0	                             test al, al	       439	show-branch.c	FUNCTION_30	IF_2
0x101e	            0x750a	                           jne 0x400106a	       439	show-branch.c	FUNCTION_30	IF_2
0x1020	      0xb800000000	                              mov eax, 0	       440	show-branch.c	FUNCTION_30	IF_2
0x1025	      0xe99a000000	                           jmp 0x4001104	       440	show-branch.c	FUNCTION_30	IF_2
0x102a	    0x488b05000000	            mov rax, qword [0x04001071] 	       441	show-branch.c	FUNCTION_30	IF_3	CALL_2
0x1031	        0x488b4df8	                mov rcx, qword [rbp - 8]	       441	show-branch.c	FUNCTION_30	IF_3	CALL_2
0x1035	      0xba00000000	                              mov edx, 0	       441	show-branch.c	FUNCTION_30	IF_3	CALL_2
0x103a	          0x4889ce	                            mov rsi, rcx	       441	show-branch.c	FUNCTION_30	IF_3	CALL_2
0x103d	          0x4889c7	                            mov rdi, rax	       441	show-branch.c	FUNCTION_30	IF_3	CALL_2
0x1040	      0xe800000000	                          call 0x4001085	       441	show-branch.c	FUNCTION_30	IF_3	CALL_2
0x1045	            0x85c0	                           test eax, eax	       441	show-branch.c	FUNCTION_30	IF_3	CALL_2
0x1047	            0x7407	                            je 0x4001090	       441	show-branch.c	FUNCTION_30	IF_3	CALL_2
0x1049	      0xb800000000	                              mov eax, 0	       442	show-branch.c	FUNCTION_30	IF_3
0x104e	            0xeb74	                           jmp 0x4001104	       442	show-branch.c	FUNCTION_30	IF_3
0x1050	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       443	show-branch.c	FUNCTION_30	IF_4	CALL_3
0x1054	      0xbe00000000	                              mov esi, 0	       443	show-branch.c	FUNCTION_30	IF_4	CALL_3
0x1059	          0x4889c7	                            mov rdi, rax	       443	show-branch.c	FUNCTION_30	IF_4	CALL_3
0x105c	      0xe800000000	                          call 0x40010a1	       443	show-branch.c	FUNCTION_30	IF_4	CALL_3
0x1061	            0x85c0	                           test eax, eax	       443	show-branch.c	FUNCTION_30	IF_4	CALL_3
0x1063	            0x7419	                            je 0x40010be	       443	show-branch.c	FUNCTION_30	IF_4	CALL_3
0x1065	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       444	show-branch.c	FUNCTION_30	CALL_4
0x1069	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       444	show-branch.c	FUNCTION_30	CALL_4
0x106c	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       444	show-branch.c	FUNCTION_30	CALL_4
0x1070	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       444	show-branch.c	FUNCTION_30	CALL_4
0x1074	          0x4889c7	                            mov rdi, rax	       444	show-branch.c	FUNCTION_30	CALL_4
0x1077	      0xe86dfdffff	                call sym.append_head_ref	       444	show-branch.c	FUNCTION_30	CALL_4
0x107c	            0xeb46	                           jmp 0x4001104	       444	show-branch.c	FUNCTION_30	CALL_4
0x107e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       445	show-branch.c	FUNCTION_30	IF_5	CALL_5
0x1082	      0xbe00000000	                              mov esi, 0	       445	show-branch.c	FUNCTION_30	IF_5	CALL_5
0x1087	          0x4889c7	                            mov rdi, rax	       445	show-branch.c	FUNCTION_30	IF_5	CALL_5
0x108a	      0xe800000000	                          call 0x40010cf	       445	show-branch.c	FUNCTION_30	IF_5	CALL_5
0x108f	            0x85c0	                           test eax, eax	       445	show-branch.c	FUNCTION_30	IF_5	CALL_5
0x1091	            0x7419	                            je 0x40010ec	       445	show-branch.c	FUNCTION_30	IF_5	CALL_5
0x1093	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       446	show-branch.c	FUNCTION_30	CALL_6
0x1097	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       446	show-branch.c	FUNCTION_30	CALL_6
0x109a	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       446	show-branch.c	FUNCTION_30	CALL_6
0x109e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       446	show-branch.c	FUNCTION_30	CALL_6
0x10a2	          0x4889c7	                            mov rdi, rax	       446	show-branch.c	FUNCTION_30	CALL_6
0x10a5	      0xe8bdfeffff	                 call sym.append_tag_ref	       446	show-branch.c	FUNCTION_30	CALL_6
0x10aa	            0xeb18	                           jmp 0x4001104	       446	show-branch.c	FUNCTION_30	CALL_6
0x10ac	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       447	show-branch.c	FUNCTION_30	CALL_7
0x10b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       447	show-branch.c	FUNCTION_30	CALL_7
0x10b4	      0xba00000000	                              mov edx, 0	       447	show-branch.c	FUNCTION_30	CALL_7
0x10b9	          0x4889ce	                            mov rsi, rcx	       447	show-branch.c	FUNCTION_30	CALL_7
0x10bc	          0x4889c7	                            mov rdi, rax	       447	show-branch.c	FUNCTION_30	CALL_7
0x10bf	      0xe818fcffff	                     call sym.append_ref	       447	show-branch.c	FUNCTION_30	CALL_7
0x10c4	              0xc9	                                   leave	       448	show-branch.c	FUNCTION_30
0x10c5	              0xc3	                                     ret	       448	show-branch.c	FUNCTION_30
name_commit	functions,0:IF,1:ELSE,0:FOR,0:DO,0:CALL,1:SWITCH,0:WHILE,0	27
0x2f1	              0x55	                                push rbp	        66	show-branch.c	FUNCTION_15
0x2f2	          0x4889e5	                            mov rbp, rsp	        66	show-branch.c	FUNCTION_15
0x2f5	        0x4883ec30	                           sub rsp, 0x30	        66	show-branch.c	FUNCTION_15
0x2f9	        0x48897de8	             mov qword [rbp - 0x18], rdi	        66	show-branch.c	FUNCTION_15
0x2fd	        0x488975e0	             mov qword [rbp - 0x20], rsi	        66	show-branch.c	FUNCTION_15
0x301	          0x8955dc	             mov dword [rbp - 0x24], edx	        66	show-branch.c	FUNCTION_15
0x304	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        68	show-branch.c	FUNCTION_15	IF_1
0x308	        0x488b4018	            mov rax, qword [rax + 0x18] 	        68	show-branch.c	FUNCTION_15	IF_1
0x30c	          0x4885c0	                           test rax, rax	        68	show-branch.c	FUNCTION_15	IF_1
0x30f	            0x7515	                           jne 0x4000366	        68	show-branch.c	FUNCTION_15	IF_1
0x311	      0xbf10000000	                           mov edi, 0x10	        69	show-branch.c	FUNCTION_15	CALL_1
0x316	      0xe800000000	                          call 0x400035b	        69	show-branch.c	FUNCTION_15	CALL_1
0x31b	          0x4889c2	                            mov rdx, rax	        69	show-branch.c	FUNCTION_15	CALL_1
0x31e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        69	show-branch.c	FUNCTION_15	CALL_1
0x322	        0x48895018	             mov qword [rax + 0x18], rdx	        69	show-branch.c	FUNCTION_15	CALL_1
0x326	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        70	show-branch.c	FUNCTION_15
0x32a	        0x488b4018	            mov rax, qword [rax + 0x18] 	        70	show-branch.c	FUNCTION_15
0x32e	        0x488945f8	                mov qword [rbp - 8], rax	        70	show-branch.c	FUNCTION_15
0x332	        0x488b45f8	                mov rax, qword [rbp - 8]	        71	show-branch.c	FUNCTION_15
0x336	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        71	show-branch.c	FUNCTION_15
0x33a	          0x488910	                    mov qword [rax], rdx	        71	show-branch.c	FUNCTION_15
0x33d	        0x488b45f8	                mov rax, qword [rbp - 8]	        72	show-branch.c	FUNCTION_15
0x341	          0x8b55dc	             mov edx, dword [rbp - 0x24]	        72	show-branch.c	FUNCTION_15
0x344	          0x895008	                mov dword [rax + 8], edx	        72	show-branch.c	FUNCTION_15
0x347	              0x90	                                     nop	        73	show-branch.c	FUNCTION_15
0x348	              0xc9	                                   leave	        73	show-branch.c	FUNCTION_15
0x349	              0xc3	                                     ret	        73	show-branch.c	FUNCTION_15
const_error	functions,0:IF,0:ELSE,0:FOR,0:DO,0:CALL,0:SWITCH,0:WHILE,0	5
0x0	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_49
0x1	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_49
0x4	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_49
0x9	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_49
0xa	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_49
get_color_code	functions,0:IF,1:ELSE,0:FOR,0:DO,0:CALL,1:SWITCH,0:WHILE,0	21
0x23b	              0x55	                                push rbp	        32	show-branch.c	FUNCTION_12
0x23c	          0x4889e5	                            mov rbp, rsp	        32	show-branch.c	FUNCTION_12
0x23f	        0x4883ec10	                           sub rsp, 0x10	        32	show-branch.c	FUNCTION_12
0x243	          0x897dfc	                mov dword [rbp - 4], edi	        32	show-branch.c	FUNCTION_12
0x246	    0x8b0500000000	            mov eax, dword [0x0400028c] 	        33	show-branch.c	FUNCTION_12	IF_1	CALL_1
0x24c	            0x89c6	                            mov esi, eax	        33	show-branch.c	FUNCTION_12	IF_1	CALL_1
0x24e	      0xbf01000000	                              mov edi, 1	        33	show-branch.c	FUNCTION_12	IF_1	CALL_1
0x253	      0xe800000000	                          call 0x4000298	        33	show-branch.c	FUNCTION_12	IF_1	CALL_1
0x258	            0x85c0	                           test eax, eax	        33	show-branch.c	FUNCTION_12	IF_1	CALL_1
0x25a	            0x741a	                            je 0x40002b6	        33	show-branch.c	FUNCTION_12	IF_1	CALL_1
0x25c	    0x8b0d00000000	            mov ecx, dword [0x040002a2] 	        34	show-branch.c	FUNCTION_12	IF_1
0x262	          0x8b45fc	                mov eax, dword [rbp - 4]	        34	show-branch.c	FUNCTION_12	IF_1
0x265	              0x99	                                     cdq	        34	show-branch.c	FUNCTION_12	IF_1
0x266	            0xf7f9	                                idiv ecx	        34	show-branch.c	FUNCTION_12	IF_1
0x268	            0x89d0	                            mov eax, edx	        34	show-branch.c	FUNCTION_12	IF_1
0x26a	            0x4898	                                    cdqe	        34	show-branch.c	FUNCTION_12	IF_1
0x26c	    0x488b04c50000	                  mov rax, qword [rax*8]	        34	show-branch.c	FUNCTION_12	IF_1
0x274	            0xeb05	                           jmp 0x40002bb	        34	show-branch.c	FUNCTION_12	IF_1
0x276	      0xb800000000	                              mov eax, 0	        35	show-branch.c	FUNCTION_12
0x27b	              0xc9	                                   leave	        36	show-branch.c	FUNCTION_12
0x27c	              0xc3	                                     ret	        36	show-branch.c	FUNCTION_12
name_parent	functions,0:IF,2:ELSE,0:FOR,0:DO,0:CALL,1:SWITCH,0:WHILE,0	35
0x34a	              0x55	                                push rbp	        81	show-branch.c	FUNCTION_16
0x34b	          0x4889e5	                            mov rbp, rsp	        81	show-branch.c	FUNCTION_16
0x34e	        0x4883ec20	                           sub rsp, 0x20	        81	show-branch.c	FUNCTION_16
0x352	        0x48897de8	             mov qword [rbp - 0x18], rdi	        81	show-branch.c	FUNCTION_16
0x356	        0x488975e0	             mov qword [rbp - 0x20], rsi	        81	show-branch.c	FUNCTION_16
0x35a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        82	show-branch.c	FUNCTION_16
0x35e	        0x488b4018	            mov rax, qword [rax + 0x18] 	        82	show-branch.c	FUNCTION_16
0x362	        0x488945f0	             mov qword [rbp - 0x10], rax	        82	show-branch.c	FUNCTION_16
0x366	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        83	show-branch.c	FUNCTION_16
0x36a	        0x488b4018	            mov rax, qword [rax + 0x18] 	        83	show-branch.c	FUNCTION_16
0x36e	        0x488945f8	                mov qword [rbp - 8], rax	        83	show-branch.c	FUNCTION_16
0x372	      0x48837df000	               cmp qword [rbp - 0x10], 0	        84	show-branch.c	FUNCTION_16	IF_1
0x377	            0x743e	                            je 0x40003f7	        84	show-branch.c	FUNCTION_16	IF_1
0x379	      0x48837df800	                  cmp qword [rbp - 8], 0	        86	show-branch.c	FUNCTION_16	IF_2
0x37e	            0x7415	                            je 0x40003d5	        86	show-branch.c	FUNCTION_16	IF_2
0x380	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        87	show-branch.c	FUNCTION_16	IF_2
0x384	          0x8b4008	                mov eax, dword [rax + 8]	        87	show-branch.c	FUNCTION_16	IF_2
0x387	          0x8d5001	                      lea edx, [rax + 1]	        87	show-branch.c	FUNCTION_16	IF_2
0x38a	        0x488b45f8	                mov rax, qword [rbp - 8]	        87	show-branch.c	FUNCTION_16	IF_2
0x38e	          0x8b4008	                mov eax, dword [rax + 8]	        87	show-branch.c	FUNCTION_16	IF_2
0x391	            0x39c2	                            cmp edx, eax	        86	show-branch.c	FUNCTION_16	IF_2
0x393	            0x7d23	                           jge 0x40003f8	        86	show-branch.c	FUNCTION_16	IF_2
0x395	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        89	show-branch.c	FUNCTION_16	IF_2
0x399	          0x8b4008	                mov eax, dword [rax + 8]	        89	show-branch.c	FUNCTION_16	IF_2
0x39c	          0x8d5001	                      lea edx, [rax + 1]	        88	show-branch.c	FUNCTION_16	IF_2	CALL_1
0x39f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        88	show-branch.c	FUNCTION_16	IF_2	CALL_1
0x3a3	          0x488b08	                    mov rcx, qword [rax]	        88	show-branch.c	FUNCTION_16	IF_2	CALL_1
0x3a6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        88	show-branch.c	FUNCTION_16	IF_2	CALL_1
0x3aa	          0x4889ce	                            mov rsi, rcx	        88	show-branch.c	FUNCTION_16	IF_2	CALL_1
0x3ad	          0x4889c7	                            mov rdi, rax	        88	show-branch.c	FUNCTION_16	IF_2	CALL_1
0x3b0	      0xe83cffffff	                    call sym.name_commit	        88	show-branch.c	FUNCTION_16	IF_2	CALL_1
0x3b5	            0xeb01	                           jmp 0x40003f8	        88	show-branch.c	FUNCTION_16	IF_2	CALL_1
0x3b7	              0x90	                                     nop	        85	show-branch.c	FUNCTION_16	IF_1
0x3b8	              0xc9	                                   leave	        90	show-branch.c	FUNCTION_16
0x3b9	              0xc3	                                     ret	        90	show-branch.c	FUNCTION_16
cmd_show_branch	functions,0:IF,42:ELSE,7:FOR,8:DO,0:CALL,104:SWITCH,0:WHILE,2	877
0x1701	              0x55	                                push rbp	       603	show-branch.c	FUNCTION_39
0x1702	          0x4889e5	                            mov rbp, rsp	       603	show-branch.c	FUNCTION_39
0x1705	            0x4155	                                push r13	       603	show-branch.c	FUNCTION_39
0x1707	            0x4154	                                push r12	       603	show-branch.c	FUNCTION_39
0x1709	              0x53	                                push rbx	       603	show-branch.c	FUNCTION_39
0x170a	    0x4881ec380700	                          sub rsp, 0x738	       603	show-branch.c	FUNCTION_39
0x1711	    0x89bdccf8ffff	            mov dword [rbp - 0x734], edi	       603	show-branch.c	FUNCTION_39
0x1717	    0x4889b5c0f8ff	            mov qword [rbp - 0x740], rsi	       603	show-branch.c	FUNCTION_39
0x171e	    0x488995b8f8ff	            mov qword [rbp - 0x748], rdx	       603	show-branch.c	FUNCTION_39
0x1725	    0x64488b042528	                mov rax, qword fs:[0x28]	       603	show-branch.c	FUNCTION_39
0x172e	        0x488945d8	             mov qword [rbp - 0x28], rax	       603	show-branch.c	FUNCTION_39
0x1732	            0x31c0	                            xor eax, eax	       603	show-branch.c	FUNCTION_39
0x1734	    0x48c78540f9ff	              mov qword [rbp - 0x6c0], 0	       606	show-branch.c	FUNCTION_39
0x173f	    0x48c78548f9ff	              mov qword [rbp - 0x6b8], 0	       606	show-branch.c	FUNCTION_39
0x174a	    0xc785d0f8ffff	              mov dword [rbp - 0x730], 0	       608	show-branch.c	FUNCTION_39
0x1754	    0xc785d4f8ffff	              mov dword [rbp - 0x72c], 0	       609	show-branch.c	FUNCTION_39
0x175e	    0xc785d8f8ffff	              mov dword [rbp - 0x728], 0	       609	show-branch.c	FUNCTION_39
0x1768	    0xc785dcf8ffff	              mov dword [rbp - 0x724], 0	       611	show-branch.c	FUNCTION_39
0x1772	    0xc785e0f8ffff	              mov dword [rbp - 0x720], 0	       614	show-branch.c	FUNCTION_39
0x177c	    0xc785e4f8ffff	              mov dword [rbp - 0x71c], 0	       615	show-branch.c	FUNCTION_39
0x1786	    0xc785e8f8ffff	              mov dword [rbp - 0x718], 0	       616	show-branch.c	FUNCTION_39
0x1790	    0xc785ecf8ffff	              mov dword [rbp - 0x714], 0	       617	show-branch.c	FUNCTION_39
0x179a	    0xc7850cf9ffff	              mov dword [rbp - 0x6f4], 0	       618	show-branch.c	FUNCTION_39
0x17a4	    0xc785f0f8ffff	              mov dword [rbp - 0x710], 0	       619	show-branch.c	FUNCTION_39
0x17ae	    0xc78510f9ffff	    mov dword [rbp - 0x6f0], 0xffffffff 	       620	show-branch.c	FUNCTION_39
0x17b8	    0xc785f4f8ffff	              mov dword [rbp - 0x70c], 0	       621	show-branch.c	FUNCTION_39
0x17c2	    0xc785f8f8ffff	              mov dword [rbp - 0x708], 1	       622	show-branch.c	FUNCTION_39
0x17cc	    0x48c78550f9ff	              mov qword [rbp - 0x6b0], 0	       623	show-branch.c	FUNCTION_39
0x17d7	    0x488d95d0fbff	                  lea rdx, [rbp - 0x430]	       624	show-branch.c	FUNCTION_39
0x17de	      0xb800000000	                              mov eax, 0	       624	show-branch.c	FUNCTION_39
0x17e3	      0xb980000000	                           mov ecx, 0x80	       624	show-branch.c	FUNCTION_39
0x17e8	          0x4889d7	                            mov rdi, rdx	       624	show-branch.c	FUNCTION_39
0x17eb	          0xf348ab	              rep stosq qword [rdi], rax	       624	show-branch.c	FUNCTION_39
0x17ee	    0xc785d0fbffff	              mov dword [rbp - 0x430], 7	       624	show-branch.c	FUNCTION_39
0x17f8	    0xc785d4fbffff	          mov dword [rbp - 0x42c], 0x61 	       624	show-branch.c	FUNCTION_39
0x1802	    0x48c785d8fbff	              mov qword [rbp - 0x428], 0	       624	show-branch.c	FUNCTION_39
0x180d	    0x488d85d4f8ff	                  lea rax, [rbp - 0x72c]	       624	show-branch.c	FUNCTION_39
0x1814	    0x488985e0fbff	            mov qword [rbp - 0x420], rax	       624	show-branch.c	FUNCTION_39
0x181b	    0x48c785f0fbff	              mov qword [rbp - 0x410], 0	       624	show-branch.c	FUNCTION_39
0x1826	    0xc785f8fbffff	              mov dword [rbp - 0x408], 2	       624	show-branch.c	FUNCTION_39
0x1830	    0x48c78508fcff	              mov qword [rbp - 0x3f8], 1	       624	show-branch.c	FUNCTION_39
0x183b	    0xc78510fcffff	              mov dword [rbp - 0x3f0], 7	       624	show-branch.c	FUNCTION_39
0x1845	    0xc78514fcffff	          mov dword [rbp - 0x3ec], 0x72 	       624	show-branch.c	FUNCTION_39
0x184f	    0x48c78518fcff	              mov qword [rbp - 0x3e8], 0	       624	show-branch.c	FUNCTION_39
0x185a	    0x488d85d8f8ff	                  lea rax, [rbp - 0x728]	       624	show-branch.c	FUNCTION_39
0x1861	    0x48898520fcff	            mov qword [rbp - 0x3e0], rax	       624	show-branch.c	FUNCTION_39
0x1868	    0x48c78530fcff	              mov qword [rbp - 0x3d0], 0	       624	show-branch.c	FUNCTION_39
0x1873	    0xc78538fcffff	              mov dword [rbp - 0x3c8], 2	       624	show-branch.c	FUNCTION_39
0x187d	    0x48c78548fcff	              mov qword [rbp - 0x3b8], 1	       624	show-branch.c	FUNCTION_39
0x1888	    0xc78550fcffff	           mov dword [rbp - 0x3b0], 0xc 	       624	show-branch.c	FUNCTION_39
0x1892	    0x48c78558fcff	              mov qword [rbp - 0x3a8], 0	       624	show-branch.c	FUNCTION_39
0x189d	    0x48c78560fcff	              mov qword [rbp - 0x3a0], 0	       624	show-branch.c	FUNCTION_39
0x18a8	    0x48c78568fcff	              mov qword [rbp - 0x398], 0	       624	show-branch.c	FUNCTION_39
0x18b3	    0x48c78570fcff	              mov qword [rbp - 0x390], 0	       624	show-branch.c	FUNCTION_39
0x18be	    0xc78578fcffff	              mov dword [rbp - 0x388], 1	       624	show-branch.c	FUNCTION_39
0x18c8	    0x48c78580fcff	              mov qword [rbp - 0x380], 0	       624	show-branch.c	FUNCTION_39
0x18d3	      0xb800000000	                              mov eax, 0	       629	show-branch.c	FUNCTION_39	CALL_5
0x18d8	    0x48898588fcff	            mov qword [rbp - 0x378], rax	       624	show-branch.c	FUNCTION_39
0x18df	    0xc78590fcffff	            mov dword [rbp - 0x370], 0xa	       624	show-branch.c	FUNCTION_39
0x18e9	    0x48c78598fcff	              mov qword [rbp - 0x368], 0	       624	show-branch.c	FUNCTION_39
0x18f4	    0x488d85d0f8ff	                  lea rax, [rbp - 0x730]	       624	show-branch.c	FUNCTION_39
0x18fb	    0x488985a0fcff	            mov qword [rbp - 0x360], rax	       624	show-branch.c	FUNCTION_39
0x1902	    0x48c785a8fcff	              mov qword [rbp - 0x358], 0	       624	show-branch.c	FUNCTION_39
0x190d	    0x48c785b0fcff	              mov qword [rbp - 0x350], 0	       624	show-branch.c	FUNCTION_39
0x1918	    0xc785b8fcffff	              mov dword [rbp - 0x348], 1	       624	show-branch.c	FUNCTION_39
0x1922	    0x48c785c8fcff	              mov qword [rbp - 0x338], 1	       624	show-branch.c	FUNCTION_39
0x192d	    0xc785d0fcffff	              mov dword [rbp - 0x330], 7	       624	show-branch.c	FUNCTION_39
0x1937	    0x48c785d8fcff	              mov qword [rbp - 0x328], 0	       624	show-branch.c	FUNCTION_39
0x1942	    0x488d85d0f8ff	                  lea rax, [rbp - 0x730]	       624	show-branch.c	FUNCTION_39
0x1949	    0x488985e0fcff	            mov qword [rbp - 0x320], rax	       624	show-branch.c	FUNCTION_39
0x1950	    0x48c785f0fcff	              mov qword [rbp - 0x310], 0	       624	show-branch.c	FUNCTION_39
0x195b	    0xc785f8fcffff	              mov dword [rbp - 0x308], 2	       624	show-branch.c	FUNCTION_39
0x1965	    0x48c78508fdff	mov qword [rbp - 0x2f8], 0xffffffffffffffff	       624	show-branch.c	FUNCTION_39
0x1970	    0xc78510fdffff	              mov dword [rbp - 0x2f0], 7	       624	show-branch.c	FUNCTION_39
0x197a	    0x48c78518fdff	              mov qword [rbp - 0x2e8], 0	       624	show-branch.c	FUNCTION_39
0x1985	    0x488d85e8f8ff	                  lea rax, [rbp - 0x718]	       624	show-branch.c	FUNCTION_39
0x198c	    0x48898520fdff	            mov qword [rbp - 0x2e0], rax	       624	show-branch.c	FUNCTION_39
0x1993	    0x48c78530fdff	              mov qword [rbp - 0x2d0], 0	       624	show-branch.c	FUNCTION_39
0x199e	    0xc78538fdffff	              mov dword [rbp - 0x2c8], 2	       624	show-branch.c	FUNCTION_39
0x19a8	    0x48c78548fdff	              mov qword [rbp - 0x2b8], 1	       624	show-branch.c	FUNCTION_39
0x19b3	    0xc78550fdffff	              mov dword [rbp - 0x2b0], 7	       624	show-branch.c	FUNCTION_39
0x19bd	    0x48c78558fdff	              mov qword [rbp - 0x2a8], 0	       624	show-branch.c	FUNCTION_39
0x19c8	    0x488d85f0f8ff	                  lea rax, [rbp - 0x710]	       624	show-branch.c	FUNCTION_39
0x19cf	    0x48898560fdff	            mov qword [rbp - 0x2a0], rax	       624	show-branch.c	FUNCTION_39
0x19d6	    0x48c78570fdff	              mov qword [rbp - 0x290], 0	       624	show-branch.c	FUNCTION_39
0x19e1	    0xc78578fdffff	              mov dword [rbp - 0x288], 2	       624	show-branch.c	FUNCTION_39
0x19eb	    0x48c78588fdff	              mov qword [rbp - 0x278], 1	       624	show-branch.c	FUNCTION_39
0x19f6	    0xc78590fdffff	              mov dword [rbp - 0x270], 7	       624	show-branch.c	FUNCTION_39
0x1a00	    0x48c78598fdff	              mov qword [rbp - 0x268], 0	       624	show-branch.c	FUNCTION_39
0x1a0b	    0x488d85ecf8ff	                  lea rax, [rbp - 0x714]	       624	show-branch.c	FUNCTION_39
0x1a12	    0x488985a0fdff	            mov qword [rbp - 0x260], rax	       624	show-branch.c	FUNCTION_39
0x1a19	    0x48c785b0fdff	              mov qword [rbp - 0x250], 0	       624	show-branch.c	FUNCTION_39
0x1a24	    0xc785b8fdffff	              mov dword [rbp - 0x248], 2	       624	show-branch.c	FUNCTION_39
0x1a2e	    0x48c785c8fdff	              mov qword [rbp - 0x238], 1	       624	show-branch.c	FUNCTION_39
0x1a39	    0xc785d0fdffff	              mov dword [rbp - 0x230], 7	       624	show-branch.c	FUNCTION_39
0x1a43	    0x48c785d8fdff	              mov qword [rbp - 0x228], 0	       624	show-branch.c	FUNCTION_39
0x1a4e	    0x488d85e0f8ff	                  lea rax, [rbp - 0x720]	       624	show-branch.c	FUNCTION_39
0x1a55	    0x488985e0fdff	            mov qword [rbp - 0x220], rax	       624	show-branch.c	FUNCTION_39
0x1a5c	    0x48c785f0fdff	              mov qword [rbp - 0x210], 0	       624	show-branch.c	FUNCTION_39
0x1a67	    0xc785f8fdffff	              mov dword [rbp - 0x208], 2	       624	show-branch.c	FUNCTION_39
0x1a71	    0x48c78508feff	              mov qword [rbp - 0x1f8], 1	       624	show-branch.c	FUNCTION_39
0x1a7c	    0xc78510feffff	              mov dword [rbp - 0x1f0], 7	       624	show-branch.c	FUNCTION_39
0x1a86	    0x48c78518feff	              mov qword [rbp - 0x1e8], 0	       624	show-branch.c	FUNCTION_39
0x1a91	    0x488d85e4f8ff	                  lea rax, [rbp - 0x71c]	       624	show-branch.c	FUNCTION_39
0x1a98	    0x48898520feff	            mov qword [rbp - 0x1e0], rax	       624	show-branch.c	FUNCTION_39
0x1a9f	    0x48c78530feff	              mov qword [rbp - 0x1d0], 0	       624	show-branch.c	FUNCTION_39
0x1aaa	    0xc78538feffff	              mov dword [rbp - 0x1c8], 2	       624	show-branch.c	FUNCTION_39
0x1ab4	    0x48c78548feff	              mov qword [rbp - 0x1b8], 1	       624	show-branch.c	FUNCTION_39
0x1abf	    0xc78550feffff	              mov dword [rbp - 0x1b0], 7	       624	show-branch.c	FUNCTION_39
0x1ac9	    0x48c78558feff	              mov qword [rbp - 0x1a8], 0	       624	show-branch.c	FUNCTION_39
0x1ad4	    0x488d85dcf8ff	                  lea rax, [rbp - 0x724]	       624	show-branch.c	FUNCTION_39
0x1adb	    0x48898560feff	            mov qword [rbp - 0x1a0], rax	       624	show-branch.c	FUNCTION_39
0x1ae2	    0x48c78570feff	              mov qword [rbp - 0x190], 0	       624	show-branch.c	FUNCTION_39
0x1aed	    0xc78578feffff	              mov dword [rbp - 0x188], 2	       624	show-branch.c	FUNCTION_39
0x1af7	    0xc78590feffff	              mov dword [rbp - 0x170], 7	       624	show-branch.c	FUNCTION_39
0x1b01	    0x48c78598feff	              mov qword [rbp - 0x168], 0	       624	show-branch.c	FUNCTION_39
0x1b0c	    0x488d85f4f8ff	                  lea rax, [rbp - 0x70c]	       624	show-branch.c	FUNCTION_39
0x1b13	    0x488985a0feff	            mov qword [rbp - 0x160], rax	       624	show-branch.c	FUNCTION_39
0x1b1a	    0x48c785b0feff	              mov qword [rbp - 0x150], 0	       624	show-branch.c	FUNCTION_39
0x1b25	    0xc785b8feffff	              mov dword [rbp - 0x148], 2	       624	show-branch.c	FUNCTION_39
0x1b2f	    0x48c785c8feff	              mov qword [rbp - 0x138], 1	       624	show-branch.c	FUNCTION_39
0x1b3a	    0xc785d0feffff	              mov dword [rbp - 0x130], 7	       624	show-branch.c	FUNCTION_39
0x1b44	    0x48c785d8feff	              mov qword [rbp - 0x128], 0	       624	show-branch.c	FUNCTION_39
0x1b4f	    0x488d85f8f8ff	                  lea rax, [rbp - 0x708]	       624	show-branch.c	FUNCTION_39
0x1b56	    0x488985e0feff	            mov qword [rbp - 0x120], rax	       624	show-branch.c	FUNCTION_39
0x1b5d	    0x48c785f0feff	              mov qword [rbp - 0x110], 0	       624	show-branch.c	FUNCTION_39
0x1b68	    0xc785f8feffff	              mov dword [rbp - 0x108], 2	       624	show-branch.c	FUNCTION_39
0x1b72	    0xc78510ffffff	               mov dword [rbp - 0xf0], 7	       624	show-branch.c	FUNCTION_39
0x1b7c	    0x48c78518ffff	               mov qword [rbp - 0xe8], 0	       624	show-branch.c	FUNCTION_39
0x1b87	    0x488d85dcf8ff	                  lea rax, [rbp - 0x724]	       624	show-branch.c	FUNCTION_39
0x1b8e	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	       624	show-branch.c	FUNCTION_39
0x1b95	    0x48c78530ffff	               mov qword [rbp - 0xd0], 0	       624	show-branch.c	FUNCTION_39
0x1ba0	    0xc78538ffffff	               mov dword [rbp - 0xc8], 2	       624	show-branch.c	FUNCTION_39
0x1baa	    0x48c78548ffff	               mov qword [rbp - 0xb8], 1	       624	show-branch.c	FUNCTION_39
0x1bb5	    0xc78550ffffff	            mov dword [rbp - 0xb0], 0xc 	       624	show-branch.c	FUNCTION_39
0x1bbf	    0xc78554ffffff	           mov dword [rbp - 0xac], 0x67 	       624	show-branch.c	FUNCTION_39
0x1bc9	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	       624	show-branch.c	FUNCTION_39
0x1bd4	    0x488d8550f9ff	                  lea rax, [rbp - 0x6b0]	       624	show-branch.c	FUNCTION_39
0x1bdb	    0x48898560ffff	             mov qword [rbp - 0xa0], rax	       624	show-branch.c	FUNCTION_39
0x1be2	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	       624	show-branch.c	FUNCTION_39
0x1bed	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	       624	show-branch.c	FUNCTION_39
0x1bf8	    0xc78578ffffff	           mov dword [rbp - 0x88], 0x41 	       624	show-branch.c	FUNCTION_39
0x1c02	    0x48c745800000	               mov qword [rbp - 0x80], 0	       624	show-branch.c	FUNCTION_39
0x1c0a	      0xbe00000000	                              mov esi, 0	       663	show-branch.c	FUNCTION_39	CALL_32
0x1c0f	      0xbf00000000	                              mov edi, 0	       663	show-branch.c	FUNCTION_39	CALL_32
0x1c14	      0xe800000000	                          call 0x4001c59	       663	show-branch.c	FUNCTION_39	CALL_32
0x1c19	    0x83bdccf8ffff	              cmp dword [rbp - 0x734], 1	       666	show-branch.c	FUNCTION_39	IF_1
0x1c20	            0x7524	                           jne 0x4001c86	       666	show-branch.c	FUNCTION_39	IF_1
0x1c22	    0x8b0500000000	            mov eax, dword [0x04001c68] 	       666	show-branch.c	FUNCTION_39	IF_1
0x1c28	            0x85c0	                           test eax, eax	       666	show-branch.c	FUNCTION_39	IF_1
0x1c2a	            0x741a	                            je 0x4001c86	       666	show-branch.c	FUNCTION_39	IF_1
0x1c2c	    0x8b0500000000	            mov eax, dword [0x04001c72] 	       667	show-branch.c	FUNCTION_39	IF_1
0x1c32	    0x8985ccf8ffff	            mov dword [rbp - 0x734], eax	       667	show-branch.c	FUNCTION_39	IF_1
0x1c38	    0x488b05000000	            mov rax, qword [0x04001c7f] 	       668	show-branch.c	FUNCTION_39	IF_1
0x1c3f	    0x488985c0f8ff	            mov qword [rbp - 0x740], rax	       668	show-branch.c	FUNCTION_39	IF_1
0x1c46	    0x488d8dd0fbff	                  lea rcx, [rbp - 0x430]	       671	show-branch.c	FUNCTION_39	CALL_33
0x1c4d	    0x488b95b8f8ff	            mov rdx, qword [rbp - 0x748]	       671	show-branch.c	FUNCTION_39	CALL_33
0x1c54	    0x488bb5c0f8ff	            mov rsi, qword [rbp - 0x740]	       671	show-branch.c	FUNCTION_39	CALL_33
0x1c5b	    0x8b85ccf8ffff	            mov eax, dword [rbp - 0x734]	       671	show-branch.c	FUNCTION_39	CALL_33
0x1c61	    0x41b902000000	                              mov r9d, 2	       671	show-branch.c	FUNCTION_39	CALL_33
0x1c67	    0x41b800000000	                              mov r8d, 0	       671	show-branch.c	FUNCTION_39	CALL_33
0x1c6d	            0x89c7	                            mov edi, eax	       671	show-branch.c	FUNCTION_39	CALL_33
0x1c6f	      0xe800000000	                          call 0x4001cb4	       671	show-branch.c	FUNCTION_39	CALL_33
0x1c74	    0x8985ccf8ffff	            mov dword [rbp - 0x734], eax	       671	show-branch.c	FUNCTION_39	CALL_33
0x1c7a	    0x8b85d4f8ffff	            mov eax, dword [rbp - 0x72c]	       673	show-branch.c	FUNCTION_39	IF_2
0x1c80	            0x85c0	                           test eax, eax	       673	show-branch.c	FUNCTION_39	IF_2
0x1c82	            0x740a	                            je 0x4001cce	       673	show-branch.c	FUNCTION_39	IF_2
0x1c84	    0xc785d8f8ffff	              mov dword [rbp - 0x728], 1	       674	show-branch.c	FUNCTION_39	IF_2
0x1c8e	    0x8b85d0f8ffff	            mov eax, dword [rbp - 0x730]	       676	show-branch.c	FUNCTION_39	IF_3
0x1c94	            0x85c0	                           test eax, eax	       676	show-branch.c	FUNCTION_39	IF_3
0x1c96	            0x750a	                           jne 0x4001ce2	       676	show-branch.c	FUNCTION_39	IF_3
0x1c98	    0x8b0500000000	            mov eax, dword [0x04001cde] 	       676	show-branch.c	FUNCTION_39	IF_3
0x1c9e	            0x85c0	                           test eax, eax	       676	show-branch.c	FUNCTION_39	IF_3
0x1ca0	            0x7467	                            je 0x4001d49	       676	show-branch.c	FUNCTION_39	IF_3
0x1ca2	    0x8b85e4f8ffff	            mov eax, dword [rbp - 0x71c]	       680	show-branch.c	FUNCTION_39	IF_3	IF_4
0x1ca8	            0x85c0	                           test eax, eax	       680	show-branch.c	FUNCTION_39	IF_3	IF_4
0x1caa	            0x750a	                           jne 0x4001cf6	       680	show-branch.c	FUNCTION_39	IF_3	IF_4
0x1cac	    0x8b85e0f8ffff	            mov eax, dword [rbp - 0x720]	       680	show-branch.c	FUNCTION_39	IF_3	IF_4
0x1cb2	            0x85c0	                           test eax, eax	       680	show-branch.c	FUNCTION_39	IF_3	IF_4
0x1cb4	            0x7414	                            je 0x4001d0a	       680	show-branch.c	FUNCTION_39	IF_3	IF_4
0x1cb6	    0x488d85d0fbff	                  lea rax, [rbp - 0x430]	       681	show-branch.c	FUNCTION_39	IF_3	IF_4	CALL_34
0x1cbd	          0x4889c6	                            mov rsi, rax	       681	show-branch.c	FUNCTION_39	IF_3	IF_4	CALL_34
0x1cc0	      0xbf00000000	                              mov edi, 0	       681	show-branch.c	FUNCTION_39	IF_3	IF_4	CALL_34
0x1cc5	      0xe800000000	                          call 0x4001d0a	       681	show-branch.c	FUNCTION_39	IF_3	IF_4	CALL_34
0x1cca	    0x8b0500000000	            mov eax, dword [0x04001d10] 	       683	show-branch.c	FUNCTION_39	IF_3	IF_5
0x1cd0	            0x85c0	                           test eax, eax	       683	show-branch.c	FUNCTION_39	IF_3	IF_5
0x1cd2	            0x7435	                            je 0x4001d49	       683	show-branch.c	FUNCTION_39	IF_3	IF_5
0x1cd4	    0x8b85d0f8ffff	            mov eax, dword [rbp - 0x730]	       683	show-branch.c	FUNCTION_39	IF_3	IF_5
0x1cda	            0x85c0	                           test eax, eax	       683	show-branch.c	FUNCTION_39	IF_3	IF_5
0x1cdc	            0x7f14	                            jg 0x4001d32	       683	show-branch.c	FUNCTION_39	IF_3	IF_5
0x1cde	    0x8b85d4f8ffff	            mov eax, dword [rbp - 0x72c]	       683	show-branch.c	FUNCTION_39	IF_3	IF_5
0x1ce4	            0x85c0	                           test eax, eax	       683	show-branch.c	FUNCTION_39	IF_3	IF_5
0x1ce6	            0x750a	                           jne 0x4001d32	       683	show-branch.c	FUNCTION_39	IF_3	IF_5
0x1ce8	    0x8b85d8f8ffff	            mov eax, dword [rbp - 0x728]	       683	show-branch.c	FUNCTION_39	IF_3	IF_5
0x1cee	            0x85c0	                           test eax, eax	       683	show-branch.c	FUNCTION_39	IF_3	IF_5
0x1cf0	            0x7417	                            je 0x4001d49	       683	show-branch.c	FUNCTION_39	IF_3	IF_5
0x1cf2	      0xbf00000000	                              mov edi, 0	       690	show-branch.c	FUNCTION_39	IF_3	IF_5	CALL_36
0x1cf7	      0xe878e4ffff	                               call sym.	       690	show-branch.c	FUNCTION_39	IF_3	IF_5	CALL_36
0x1cfc	          0x4889c7	                            mov rdi, rax	       690	show-branch.c	FUNCTION_39	IF_3	IF_5	CALL_36
0x1cff	      0xb800000000	                              mov eax, 0	       690	show-branch.c	FUNCTION_39	IF_3	IF_5	CALL_36
0x1d04	      0xe800000000	                          call 0x4001d49	       690	show-branch.c	FUNCTION_39	IF_3	IF_5	CALL_36
0x1d09	    0x8b85f4f8ffff	            mov eax, dword [rbp - 0x70c]	       695	show-branch.c	FUNCTION_39	IF_6
0x1d0f	    0x3985ccf8ffff	           cmp dword [rbp - 0x734], eax 	       695	show-branch.c	FUNCTION_39	IF_6
0x1d15	            0x7f1c	                            jg 0x4001d73	       695	show-branch.c	FUNCTION_39	IF_6
0x1d17	    0x8b95d4f8ffff	            mov edx, dword [rbp - 0x72c]	       695	show-branch.c	FUNCTION_39	IF_6
0x1d1d	    0x8b85d8f8ffff	            mov eax, dword [rbp - 0x728]	       695	show-branch.c	FUNCTION_39	IF_6
0x1d23	             0x1d0	                            add eax, edx	       695	show-branch.c	FUNCTION_39	IF_6
0x1d25	            0x85c0	                           test eax, eax	       695	show-branch.c	FUNCTION_39	IF_6
0x1d27	            0x750a	                           jne 0x4001d73	       695	show-branch.c	FUNCTION_39	IF_6
0x1d29	    0xc785d4f8ffff	              mov dword [rbp - 0x72c], 1	       696	show-branch.c	FUNCTION_39	IF_6
0x1d33	    0x8b0500000000	            mov eax, dword [0x04001d79] 	       698	show-branch.c	FUNCTION_39	IF_7
0x1d39	            0x85c0	                           test eax, eax	       698	show-branch.c	FUNCTION_39	IF_7
0x1d3b	     0xf849a030000	                            je 0x400211b	       698	show-branch.c	FUNCTION_39	IF_7
0x1d41	    0xc785fcf8ffff	              mov dword [rbp - 0x704], 0	       701	show-branch.c	FUNCTION_39	IF_7
0x1d4b	    0xc78520f9ffff	              mov dword [rbp - 0x6e0], 0	       702	show-branch.c	FUNCTION_39	IF_7
0x1d55	    0x83bdccf8ffff	              cmp dword [rbp - 0x734], 0	       704	show-branch.c	FUNCTION_39	IF_7	IF_8
0x1d5c	            0x756b	                           jne 0x4001e09	       704	show-branch.c	FUNCTION_39	IF_7	IF_8
0x1d5e	    0x488d8530faff	                  lea rax, [rbp - 0x5d0]	       707	show-branch.c	FUNCTION_39	IF_7	IF_8	CALL_37
0x1d65	      0xb900000000	                              mov ecx, 0	       707	show-branch.c	FUNCTION_39	IF_7	IF_8	CALL_37
0x1d6a	          0x4889c2	                            mov rdx, rax	       707	show-branch.c	FUNCTION_39	IF_7	IF_8	CALL_37
0x1d6d	      0xbe01000000	                              mov esi, 1	       707	show-branch.c	FUNCTION_39	IF_7	IF_8	CALL_37
0x1d72	      0xbf00000000	                              mov edi, 0	       707	show-branch.c	FUNCTION_39	IF_7	IF_8	CALL_37
0x1d77	      0xe800000000	                          call 0x4001dbc	       707	show-branch.c	FUNCTION_39	IF_7	IF_8	CALL_37
0x1d7c	    0x488905000000	            mov qword [0x04001dc3], rax 	       707	show-branch.c	FUNCTION_39	IF_7	IF_8	CALL_37
0x1d83	    0x48c705000000	               mov qword [0x04001dce], 0	       710	show-branch.c	FUNCTION_39	IF_7	IF_8
0x1d8e	    0x48c785c0f8ff	              mov qword [rbp - 0x740], 0	       711	show-branch.c	FUNCTION_39	IF_7	IF_8
0x1d99	    0xc785ccf8ffff	              mov dword [rbp - 0x734], 1	       712	show-branch.c	FUNCTION_39	IF_7	IF_8
0x1da3	    0x488b85c0f8ff	            mov rax, qword [rbp - 0x740]	       713	show-branch.c	FUNCTION_39	IF_7	IF_8	IF_9
0x1daa	          0x488b00	                    mov rax, qword [rax]	       713	show-branch.c	FUNCTION_39	IF_7	IF_8	IF_9
0x1dad	          0x4885c0	                           test rax, rax	       713	show-branch.c	FUNCTION_39	IF_7	IF_8	IF_9
0x1db0	            0x7517	                           jne 0x4001e09	       713	show-branch.c	FUNCTION_39	IF_7	IF_8	IF_9
0x1db2	      0xbf00000000	                              mov edi, 0	       714	show-branch.c	FUNCTION_39	IF_7	IF_8	CALL_39
0x1db7	      0xe8b8e3ffff	                               call sym.	       714	show-branch.c	FUNCTION_39	IF_7	IF_8	CALL_39
0x1dbc	          0x4889c7	                            mov rdi, rax	       714	show-branch.c	FUNCTION_39	IF_7	IF_8	CALL_39
0x1dbf	      0xb800000000	                              mov eax, 0	       714	show-branch.c	FUNCTION_39	IF_7	IF_8	CALL_39
0x1dc4	      0xe800000000	                          call 0x4001e09	       714	show-branch.c	FUNCTION_39	IF_7	IF_8	CALL_39
0x1dc9	    0x83bdccf8ffff	              cmp dword [rbp - 0x734], 1	       716	show-branch.c	FUNCTION_39	IF_7	IF_10
0x1dd0	            0x7417	                            je 0x4001e29	       716	show-branch.c	FUNCTION_39	IF_7	IF_10
0x1dd2	      0xbf00000000	                              mov edi, 0	       717	show-branch.c	FUNCTION_39	IF_7	CALL_41
0x1dd7	      0xe898e3ffff	                               call sym.	       717	show-branch.c	FUNCTION_39	IF_7	CALL_41
0x1ddc	          0x4889c7	                            mov rdi, rax	       717	show-branch.c	FUNCTION_39	IF_7	CALL_41
0x1ddf	      0xb800000000	                              mov eax, 0	       717	show-branch.c	FUNCTION_39	IF_7	CALL_41
0x1de4	      0xe800000000	                          call 0x4001e29	       717	show-branch.c	FUNCTION_39	IF_7	CALL_41
0x1de9	    0x8b0500000000	            mov eax, dword [0x04001e2f] 	       719	show-branch.c	FUNCTION_39	IF_7	IF_11
0x1def	          0x83f819	                           cmp eax, 0x19	       719	show-branch.c	FUNCTION_39	IF_7	IF_11
0x1df2	            0x7e26	                           jle 0x4001e5a	       719	show-branch.c	FUNCTION_39	IF_7	IF_11
0x1df4	      0xba19000000	                           mov edx, 0x19	       720	show-branch.c	FUNCTION_39	IF_7	IF_11	CALL_43
0x1df9	      0xbe00000000	                              mov esi, 0	       720	show-branch.c	FUNCTION_39	IF_7	IF_11	CALL_43
0x1dfe	      0xbf00000000	                              mov edi, 0	       720	show-branch.c	FUNCTION_39	IF_7	IF_11	CALL_43
0x1e03	      0xe898e3ffff	                              call sym.Q	       720	show-branch.c	FUNCTION_39	IF_7	IF_11	CALL_43
0x1e08	      0xbe19000000	                           mov esi, 0x19	       720	show-branch.c	FUNCTION_39	IF_7	IF_11	CALL_43
0x1e0d	          0x4889c7	                            mov rdi, rax	       720	show-branch.c	FUNCTION_39	IF_7	IF_11	CALL_43
0x1e10	      0xb800000000	                              mov eax, 0	       720	show-branch.c	FUNCTION_39	IF_7	IF_11	CALL_43
0x1e15	      0xe800000000	                          call 0x4001e5a	       720	show-branch.c	FUNCTION_39	IF_7	IF_11	CALL_43
0x1e1a	    0x488b85c0f8ff	            mov rax, qword [rbp - 0x740]	       723	show-branch.c	FUNCTION_39	IF_7	IF_12	CALL_45
0x1e21	          0x488b00	                    mov rax, qword [rax]	       723	show-branch.c	FUNCTION_39	IF_7	IF_12	CALL_45
0x1e24	          0x4889c7	                            mov rdi, rax	       723	show-branch.c	FUNCTION_39	IF_7	IF_12	CALL_45
0x1e27	      0xe800000000	                          call 0x4001e6c	       723	show-branch.c	FUNCTION_39	IF_7	IF_12	CALL_45
0x1e2c	            0x89c6	                            mov esi, eax	       723	show-branch.c	FUNCTION_39	IF_7	IF_12	CALL_45
0x1e2e	    0x488b85c0f8ff	            mov rax, qword [rbp - 0x740]	       723	show-branch.c	FUNCTION_39	IF_7	IF_12	CALL_45
0x1e35	          0x488b00	                    mov rax, qword [rax]	       723	show-branch.c	FUNCTION_39	IF_7	IF_12	CALL_45
0x1e38	    0x488d8d58f9ff	                  lea rcx, [rbp - 0x6a8]	       723	show-branch.c	FUNCTION_39	IF_7	IF_12	CALL_45
0x1e3f	    0x488d9530faff	                  lea rdx, [rbp - 0x5d0]	       723	show-branch.c	FUNCTION_39	IF_7	IF_12	CALL_45
0x1e46	          0x4889c7	                            mov rdi, rax	       723	show-branch.c	FUNCTION_39	IF_7	IF_12	CALL_45
0x1e49	      0xe800000000	                          call 0x4001e8e	       723	show-branch.c	FUNCTION_39	IF_7	IF_12	CALL_45
0x1e4e	            0x85c0	                           test eax, eax	       723	show-branch.c	FUNCTION_39	IF_7	IF_12	CALL_45
0x1e50	            0x7524	                           jne 0x4001eb6	       723	show-branch.c	FUNCTION_39	IF_7	IF_12	CALL_45
0x1e52	    0x488b85c0f8ff	            mov rax, qword [rbp - 0x740]	       724	show-branch.c	FUNCTION_39	IF_7	CALL_47
0x1e59	          0x488b18	                    mov rbx, qword [rax]	       724	show-branch.c	FUNCTION_39	IF_7	CALL_47
0x1e5c	      0xbf00000000	                              mov edi, 0	       724	show-branch.c	FUNCTION_39	IF_7	CALL_47
0x1e61	      0xe80ee3ffff	                               call sym.	       724	show-branch.c	FUNCTION_39	IF_7	CALL_47
0x1e66	          0x4889de	                            mov rsi, rbx	       724	show-branch.c	FUNCTION_39	IF_7	CALL_47
0x1e69	          0x4889c7	                            mov rdi, rax	       724	show-branch.c	FUNCTION_39	IF_7	CALL_47
0x1e6c	      0xb800000000	                              mov eax, 0	       724	show-branch.c	FUNCTION_39	IF_7	CALL_47
0x1e71	      0xe800000000	                          call 0x4001eb6	       724	show-branch.c	FUNCTION_39	IF_7	CALL_47
0x1e76	    0x488b8550f9ff	            mov rax, qword [rbp - 0x6b0]	       727	show-branch.c	FUNCTION_39	IF_7	IF_13
0x1e7d	          0x4885c0	                           test rax, rax	       727	show-branch.c	FUNCTION_39	IF_7	IF_13
0x1e80	     0xf8492000000	                            je 0x4001f58	       727	show-branch.c	FUNCTION_39	IF_7	IF_13
0x1e86	    0x488b8550f9ff	            mov rax, qword [rbp - 0x6b0]	       729	show-branch.c	FUNCTION_39	IF_7	IF_13	CALL_48
0x1e8d	    0x488d8d68f9ff	                  lea rcx, [rbp - 0x698]	       729	show-branch.c	FUNCTION_39	IF_7	IF_13	CALL_48
0x1e94	      0xba0a000000	                            mov edx, 0xa	       729	show-branch.c	FUNCTION_39	IF_7	IF_13	CALL_48
0x1e99	          0x4889ce	                            mov rsi, rcx	       729	show-branch.c	FUNCTION_39	IF_7	IF_13	CALL_48
0x1e9c	          0x4889c7	                            mov rdi, rax	       729	show-branch.c	FUNCTION_39	IF_7	IF_13	CALL_48
0x1e9f	      0xe800000000	                          call 0x4001ee4	       729	show-branch.c	FUNCTION_39	IF_7	IF_13	CALL_48
0x1ea4	    0x8985fcf8ffff	            mov dword [rbp - 0x704], eax	       729	show-branch.c	FUNCTION_39	IF_7	IF_13	CALL_48
0x1eaa	    0x488b8568f9ff	            mov rax, qword [rbp - 0x698]	       730	show-branch.c	FUNCTION_39	IF_7	IF_13	IF_14
0x1eb1	           0xfb600	                   movzx eax, byte [rax]	       730	show-branch.c	FUNCTION_39	IF_7	IF_13	IF_14
0x1eb4	            0x84c0	                             test al, al	       730	show-branch.c	FUNCTION_39	IF_7	IF_13	IF_14
0x1eb6	            0x7460	                            je 0x4001f58	       730	show-branch.c	FUNCTION_39	IF_7	IF_13	IF_14
0x1eb8	    0x488b8550f9ff	            mov rax, qword [rbp - 0x6b0]	       733	show-branch.c	FUNCTION_39	IF_7	IF_13	IF_14	CALL_49
0x1ebf	      0xbe00000000	                              mov esi, 0	       733	show-branch.c	FUNCTION_39	IF_7	IF_13	IF_14	CALL_49
0x1ec4	          0x4889c7	                            mov rdi, rax	       733	show-branch.c	FUNCTION_39	IF_7	IF_13	IF_14	CALL_49
0x1ec7	      0xe800000000	                          call 0x4001f0c	       733	show-branch.c	FUNCTION_39	IF_7	IF_13	IF_14	CALL_49
0x1ecc	    0x48898578f9ff	            mov qword [rbp - 0x688], rax	       733	show-branch.c	FUNCTION_39	IF_7	IF_13	IF_14	CALL_49
0x1ed3	    0x488b8558f9ff	            mov rax, qword [rbp - 0x6a8]	       734	show-branch.c	FUNCTION_39	IF_7	IF_13	IF_14	CALL_50
0x1eda	    0x488dbd30faff	                  lea rdi, [rbp - 0x5d0]	       734	show-branch.c	FUNCTION_39	IF_7	IF_13	IF_14	CALL_50
0x1ee1	    0x488b9578f9ff	            mov rdx, qword [rbp - 0x688]	       734	show-branch.c	FUNCTION_39	IF_7	IF_13	IF_14	CALL_50
0x1ee8	    0x8bb520f9ffff	            mov esi, dword [rbp - 0x6e0]	       734	show-branch.c	FUNCTION_39	IF_7	IF_13	IF_14	CALL_50
0x1eee	        0x4883ec08	                              sub rsp, 8	       734	show-branch.c	FUNCTION_39	IF_7	IF_13	IF_14	CALL_50
0x1ef2	    0x488d8dfcf8ff	                  lea rcx, [rbp - 0x704]	       734	show-branch.c	FUNCTION_39	IF_7	IF_13	IF_14	CALL_50
0x1ef9	              0x51	                                push rcx	       734	show-branch.c	FUNCTION_39	IF_7	IF_13	IF_14	CALL_50
0x1efa	            0x6a00	                                  push 0	       734	show-branch.c	FUNCTION_39	IF_7	IF_13	IF_14	CALL_50
0x1efc	            0x6a00	                                  push 0	       734	show-branch.c	FUNCTION_39	IF_7	IF_13	IF_14	CALL_50
0x1efe	    0x41b900000000	                              mov r9d, 0	       734	show-branch.c	FUNCTION_39	IF_7	IF_13	IF_14	CALL_50
0x1f04	          0x4989f8	                             mov r8, rdi	       734	show-branch.c	FUNCTION_39	IF_7	IF_13	IF_14	CALL_50
0x1f07	      0xb9ffffffff	                     mov ecx, 0xffffffff	       734	show-branch.c	FUNCTION_39	IF_7	IF_13	IF_14	CALL_50
0x1f0c	          0x4889c7	                            mov rdi, rax	       734	show-branch.c	FUNCTION_39	IF_7	IF_13	IF_14	CALL_50
0x1f0f	      0xe800000000	                          call 0x4001f54	       734	show-branch.c	FUNCTION_39	IF_7	IF_13	IF_14	CALL_50
0x1f14	        0x4883c420	                           add rsp, 0x20	       734	show-branch.c	FUNCTION_39	IF_7	IF_13	IF_14	CALL_50
0x1f18	    0xc78508f9ffff	              mov dword [rbp - 0x6f8], 0	       739	show-branch.c	FUNCTION_39	IF_7	FOR_1
0x1f22	      0xe970010000	                           jmp 0x40020d7	       739	show-branch.c	FUNCTION_39	IF_7	FOR_1
0x1f27	    0x8b95fcf8ffff	            mov edx, dword [rbp - 0x704]	       746	show-branch.c	FUNCTION_39	IF_7	FOR_1	IF_15	CALL_51
0x1f2d	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       746	show-branch.c	FUNCTION_39	IF_7	FOR_1	IF_15	CALL_51
0x1f33	          0x8d0c02	                    lea ecx, [rdx + rax]	       746	show-branch.c	FUNCTION_39	IF_7	FOR_1	IF_15	CALL_51
0x1f36	    0x488b8558f9ff	            mov rax, qword [rbp - 0x6a8]	       746	show-branch.c	FUNCTION_39	IF_7	FOR_1	IF_15	CALL_51
0x1f3d	    0x4c8d8560f9ff	                   lea r8, [rbp - 0x6a0]	       746	show-branch.c	FUNCTION_39	IF_7	FOR_1	IF_15	CALL_51
0x1f44	    0x488dbd30faff	                  lea rdi, [rbp - 0x5d0]	       746	show-branch.c	FUNCTION_39	IF_7	FOR_1	IF_15	CALL_51
0x1f4b	    0x8bb520f9ffff	            mov esi, dword [rbp - 0x6e0]	       746	show-branch.c	FUNCTION_39	IF_7	FOR_1	IF_15	CALL_51
0x1f51	        0x4883ec08	                              sub rsp, 8	       746	show-branch.c	FUNCTION_39	IF_7	FOR_1	IF_15	CALL_51
0x1f55	            0x6a00	                                  push 0	       746	show-branch.c	FUNCTION_39	IF_7	FOR_1	IF_15	CALL_51
0x1f57	    0x488d9500f9ff	                  lea rdx, [rbp - 0x700]	       746	show-branch.c	FUNCTION_39	IF_7	FOR_1	IF_15	CALL_51
0x1f5e	              0x52	                                push rdx	       746	show-branch.c	FUNCTION_39	IF_7	FOR_1	IF_15	CALL_51
0x1f5f	    0x488d9568f9ff	                  lea rdx, [rbp - 0x698]	       746	show-branch.c	FUNCTION_39	IF_7	FOR_1	IF_15	CALL_51
0x1f66	              0x52	                                push rdx	       746	show-branch.c	FUNCTION_39	IF_7	FOR_1	IF_15	CALL_51
0x1f67	          0x4d89c1	                              mov r9, r8	       746	show-branch.c	FUNCTION_39	IF_7	FOR_1	IF_15	CALL_51
0x1f6a	          0x4989f8	                             mov r8, rdi	       746	show-branch.c	FUNCTION_39	IF_7	FOR_1	IF_15	CALL_51
0x1f6d	      0xba00000000	                              mov edx, 0	       746	show-branch.c	FUNCTION_39	IF_7	FOR_1	IF_15	CALL_51
0x1f72	          0x4889c7	                            mov rdi, rax	       746	show-branch.c	FUNCTION_39	IF_7	FOR_1	IF_15	CALL_51
0x1f75	      0xe800000000	                          call 0x4001fba	       746	show-branch.c	FUNCTION_39	IF_7	FOR_1	IF_15	CALL_51
0x1f7a	        0x4883c420	                           add rsp, 0x20	       746	show-branch.c	FUNCTION_39	IF_7	FOR_1	IF_15	CALL_51
0x1f7e	            0x85c0	                           test eax, eax	       746	show-branch.c	FUNCTION_39	IF_7	FOR_1	IF_15	CALL_51
0x1f80	            0x7411	                            je 0x4001fd3	       746	show-branch.c	FUNCTION_39	IF_7	FOR_1	IF_15	CALL_51
0x1f82	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       748	show-branch.c	FUNCTION_39	IF_7	FOR_1	IF_15
0x1f88	    0x890500000000	            mov dword [0x04001fce], eax 	       748	show-branch.c	FUNCTION_39	IF_7	FOR_1	IF_15
0x1f8e	      0xe916010000	                           jmp 0x40020e9	       748	show-branch.c	FUNCTION_39	IF_7	FOR_1	IF_15
0x1f93	    0x488b8560f9ff	            mov rax, qword [rbp - 0x6a0]	       751	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_52
0x1f9a	      0xbe09000000	                              mov esi, 9	       751	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_52
0x1f9f	          0x4889c7	                            mov rdi, rax	       751	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_52
0x1fa2	      0xe800000000	                          call 0x4001fe7	       751	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_52
0x1fa7	    0x48898570f9ff	            mov qword [rbp - 0x690], rax	       751	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_52
0x1fae	    0x4883bd70f9ff	              cmp qword [rbp - 0x690], 0	       752	show-branch.c	FUNCTION_39	IF_7	FOR_1	IF_16
0x1fb6	            0x750d	                           jne 0x4002005	       752	show-branch.c	FUNCTION_39	IF_7	FOR_1	IF_16
0x1fb8	    0x48c78570f9ff	              mov qword [rbp - 0x690], 0	       753	show-branch.c	FUNCTION_39	IF_7	FOR_1	IF_16
0x1fc3	            0xeb08	                           jmp 0x400200d	       753	show-branch.c	FUNCTION_39	IF_7	FOR_1	IF_16
0x1fc5	    0x48838570f9ff	              add qword [rbp - 0x690], 1	       755	show-branch.c	FUNCTION_39	IF_7	FOR_1	ELSE_1
0x1fcd	      0xbf01000000	                              mov edi, 1	       758	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_55
0x1fd2	      0xe800000000	                          call 0x4002017	       758	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_55
0x1fd7	          0x4889c2	                            mov rdx, rax	       758	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_55
0x1fda	    0x8b8d00f9ffff	            mov ecx, dword [rbp - 0x700]	       756	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_53
0x1fe0	    0x488b8568f9ff	            mov rax, qword [rbp - 0x698]	       756	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_53
0x1fe7	            0x89ce	                            mov esi, ecx	       756	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_53
0x1fe9	          0x4889c7	                            mov rdi, rax	       756	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_53
0x1fec	      0xe800000000	                          call 0x4002031	       756	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_53
0x1ff1	          0x4889c1	                            mov rcx, rax	       756	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_53
0x1ff4	    0x488b8570f9ff	            mov rax, qword [rbp - 0x690]	       756	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_53
0x1ffb	          0x4889c2	                            mov rdx, rax	       756	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_53
0x1ffe	          0x4889ce	                            mov rsi, rcx	       756	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_53
0x2001	      0xbf00000000	                              mov edi, 0	       756	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_53
0x2006	      0xb800000000	                              mov eax, 0	       756	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_53
0x200b	      0xe800000000	                          call 0x4002050	       756	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_53
0x2010	          0x4889c2	                            mov rdx, rax	       756	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_53
0x2013	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       756	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_53
0x2019	            0x4898	                                    cdqe	       756	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_53
0x201b	    0x488994c500fb	    mov qword [rbp + rax*8 - 0x500], rdx	       756	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_53
0x2023	    0x488b8560f9ff	            mov rax, qword [rbp - 0x6a0]	       760	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_56
0x202a	          0x4889c7	                            mov rdi, rax	       760	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_56
0x202d	      0xe800000000	                          call 0x4002072	       760	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_56
0x2032	    0x8b95fcf8ffff	            mov edx, dword [rbp - 0x704]	       762	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_57
0x2038	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       762	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_57
0x203e	             0x1c2	                            add edx, eax	       762	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_57
0x2040	    0x488b85c0f8ff	            mov rax, qword [rbp - 0x740]	       762	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_57
0x2047	          0x488b00	                    mov rax, qword [rax]	       762	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_57
0x204a	          0x4889c6	                            mov rsi, rax	       762	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_57
0x204d	      0xbf00000000	                              mov edi, 0	       762	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_57
0x2052	      0xb800000000	                              mov eax, 0	       762	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_57
0x2057	      0xe800000000	                          call 0x400209c	       762	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_57
0x205c	    0x48898580f9ff	            mov qword [rbp - 0x680], rax	       762	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_57
0x2063	    0x488d8d30faff	                  lea rcx, [rbp - 0x5d0]	       763	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_58
0x206a	    0x488b8580f9ff	            mov rax, qword [rbp - 0x680]	       763	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_58
0x2071	      0xba01000000	                              mov edx, 1	       763	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_58
0x2076	          0x4889ce	                            mov rsi, rcx	       763	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_58
0x2079	          0x4889c7	                            mov rdi, rax	       763	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_58
0x207c	      0xe85becffff	                     call sym.append_ref	       763	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_58
0x2081	    0x488b8580f9ff	            mov rax, qword [rbp - 0x680]	       764	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_59
0x2088	          0x4889c7	                            mov rdi, rax	       764	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_59
0x208b	      0xe800000000	                          call 0x40020d0	       764	show-branch.c	FUNCTION_39	IF_7	FOR_1	CALL_59
0x2090	    0x838508f9ffff	              add dword [rbp - 0x6f8], 1	       739	show-branch.c	FUNCTION_39	IF_7	FOR_1
0x2097	    0x8b0500000000	            mov eax, dword [0x040020dd] 	       739	show-branch.c	FUNCTION_39	IF_7	FOR_1
0x209d	    0x398508f9ffff	           cmp dword [rbp - 0x6f8], eax 	       739	show-branch.c	FUNCTION_39	IF_7	FOR_1
0x20a3	     0xf8c7efeffff	                            jl 0x4001f67	       739	show-branch.c	FUNCTION_39	IF_7	FOR_1
0x20a9	    0x488b8558f9ff	            mov rax, qword [rbp - 0x6a8]	       766	show-branch.c	FUNCTION_39	IF_7	CALL_60
0x20b0	          0x4889c7	                            mov rdi, rax	       766	show-branch.c	FUNCTION_39	IF_7	CALL_60
0x20b3	      0xe800000000	                          call 0x40020f8	       766	show-branch.c	FUNCTION_39	IF_7	CALL_60
0x20b8	            0xeb51	                           jmp 0x400214b	       766	show-branch.c	FUNCTION_39	IF_7	CALL_60
0x20ba	    0x488b85c0f8ff	            mov rax, qword [rbp - 0x740]	       770	show-branch.c	FUNCTION_39	ELSE_2	WHILE_1	CALL_61
0x20c1	          0x488b00	                    mov rax, qword [rax]	       770	show-branch.c	FUNCTION_39	ELSE_2	WHILE_1	CALL_61
0x20c4	          0x4889c7	                            mov rdi, rax	       770	show-branch.c	FUNCTION_39	ELSE_2	WHILE_1	CALL_61
0x20c7	      0xe8b2f2ffff	                 call sym.append_one_rev	       770	show-branch.c	FUNCTION_39	ELSE_2	WHILE_1	CALL_61
0x20cc	    0x83adccf8ffff	              sub dword [rbp - 0x734], 1	       771	show-branch.c	FUNCTION_39	ELSE_2	WHILE_1
0x20d3	    0x488385c0f8ff	              add qword [rbp - 0x740], 8	       771	show-branch.c	FUNCTION_39	ELSE_2	WHILE_1
0x20db	    0x83bdccf8ffff	              cmp dword [rbp - 0x734], 0	       769	show-branch.c	FUNCTION_39	ELSE_2	WHILE_1
0x20e2	            0x7fd6	                            jg 0x40020fa	       769	show-branch.c	FUNCTION_39	ELSE_2	WHILE_1
0x20e4	    0x8b95d4f8ffff	            mov edx, dword [rbp - 0x72c]	       773	show-branch.c	FUNCTION_39	ELSE_2	IF_17
0x20ea	    0x8b85d8f8ffff	            mov eax, dword [rbp - 0x728]	       773	show-branch.c	FUNCTION_39	ELSE_2	IF_17
0x20f0	             0x1d0	                            add eax, edx	       773	show-branch.c	FUNCTION_39	ELSE_2	IF_17
0x20f2	            0x85c0	                           test eax, eax	       773	show-branch.c	FUNCTION_39	ELSE_2	IF_17
0x20f4	            0x7415	                            je 0x400214b	       773	show-branch.c	FUNCTION_39	ELSE_2	IF_17
0x20f6	    0x8b95d8f8ffff	            mov edx, dword [rbp - 0x728]	       774	show-branch.c	FUNCTION_39	ELSE_2	CALL_62
0x20fc	    0x8b85d4f8ffff	            mov eax, dword [rbp - 0x72c]	       774	show-branch.c	FUNCTION_39	ELSE_2	CALL_62
0x2102	            0x89d6	                            mov esi, edx	       774	show-branch.c	FUNCTION_39	ELSE_2	CALL_62
0x2104	            0x89c7	                            mov edi, eax	       774	show-branch.c	FUNCTION_39	ELSE_2	CALL_62
0x2106	      0xe8bbefffff	                     call sym.snarf_refs	       774	show-branch.c	FUNCTION_39	ELSE_2	CALL_62
0x210b	    0x488d85a0f9ff	                  lea rax, [rbp - 0x660]	       777	show-branch.c	FUNCTION_39	CALL_63
0x2112	      0xb900000000	                              mov ecx, 0	       777	show-branch.c	FUNCTION_39	CALL_63
0x2117	          0x4889c2	                            mov rdx, rax	       777	show-branch.c	FUNCTION_39	CALL_63
0x211a	      0xbe01000000	                              mov esi, 1	       777	show-branch.c	FUNCTION_39	CALL_63
0x211f	      0xbf00000000	                              mov edi, 0	       777	show-branch.c	FUNCTION_39	CALL_63
0x2124	      0xe800000000	                          call 0x4002169	       777	show-branch.c	FUNCTION_39	CALL_63
0x2129	    0x48898588f9ff	            mov qword [rbp - 0x678], rax	       777	show-branch.c	FUNCTION_39	CALL_63
0x2130	    0x8b85f0f8ffff	            mov eax, dword [rbp - 0x710]	       780	show-branch.c	FUNCTION_39	IF_18
0x2136	            0x85c0	                           test eax, eax	       780	show-branch.c	FUNCTION_39	IF_18
0x2138	     0xf84b9000000	                            je 0x4002237	       780	show-branch.c	FUNCTION_39	IF_18
0x213e	    0x4883bd88f9ff	              cmp qword [rbp - 0x678], 0	       780	show-branch.c	FUNCTION_39	IF_18
0x2146	     0xf84ab000000	                            je 0x4002237	       780	show-branch.c	FUNCTION_39	IF_18
0x214c	    0xc78514f9ffff	              mov dword [rbp - 0x6ec], 0	       781	show-branch.c	FUNCTION_39	IF_18
0x2156	    0xc78508f9ffff	              mov dword [rbp - 0x6f8], 0	       782	show-branch.c	FUNCTION_39	IF_18	FOR_2
0x2160	            0xeb3d	                           jmp 0x40021df	       782	show-branch.c	FUNCTION_39	IF_18	FOR_2
0x2162	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       787	show-branch.c	FUNCTION_39	IF_18	FOR_2	IF_19
0x2168	            0x4898	                                    cdqe	       787	show-branch.c	FUNCTION_39	IF_18	FOR_2	IF_19
0x216a	    0x488b34c50000	                  mov rsi, qword [rax*8]	       787	show-branch.c	FUNCTION_39	IF_18	FOR_2	IF_19
0x2172	    0x488d95a0f9ff	                  lea rdx, [rbp - 0x660]	       786	show-branch.c	FUNCTION_39	IF_18	FOR_2	IF_19	CALL_64
0x2179	    0x488b8588f9ff	            mov rax, qword [rbp - 0x678]	       786	show-branch.c	FUNCTION_39	IF_18	FOR_2	IF_19	CALL_64
0x2180	      0xb900000000	                              mov ecx, 0	       786	show-branch.c	FUNCTION_39	IF_18	FOR_2	IF_19	CALL_64
0x2185	          0x4889c7	                            mov rdi, rax	       786	show-branch.c	FUNCTION_39	IF_18	FOR_2	IF_19	CALL_64
0x2188	      0xe8aaefffff	                    call sym.rev_is_head	       786	show-branch.c	FUNCTION_39	IF_18	FOR_2	IF_19	CALL_64
0x218d	            0x85c0	                           test eax, eax	       786	show-branch.c	FUNCTION_39	IF_18	FOR_2	IF_19	CALL_64
0x218f	            0x7407	                            je 0x40021d8	       786	show-branch.c	FUNCTION_39	IF_18	FOR_2	IF_19	CALL_64
0x2191	    0x838514f9ffff	              add dword [rbp - 0x6ec], 1	       789	show-branch.c	FUNCTION_39	IF_18	FOR_2	IF_19
0x2198	    0x838508f9ffff	              add dword [rbp - 0x6f8], 1	       782	show-branch.c	FUNCTION_39	IF_18	FOR_2
0x219f	    0x83bd14f9ffff	              cmp dword [rbp - 0x6ec], 0	       782	show-branch.c	FUNCTION_39	IF_18	FOR_2
0x21a6	            0x750e	                           jne 0x40021f6	       782	show-branch.c	FUNCTION_39	IF_18	FOR_2
0x21a8	    0x8b0500000000	            mov eax, dword [0x040021ee] 	       782	show-branch.c	FUNCTION_39	IF_18	FOR_2
0x21ae	    0x398508f9ffff	           cmp dword [rbp - 0x6f8], eax 	       782	show-branch.c	FUNCTION_39	IF_18	FOR_2
0x21b4	            0x7cac	                            jl 0x40021a2	       782	show-branch.c	FUNCTION_39	IF_18	FOR_2
0x21b6	    0x83bd14f9ffff	              cmp dword [rbp - 0x6ec], 0	       791	show-branch.c	FUNCTION_39	IF_18	IF_20
0x21bd	            0x7538	                           jne 0x4002237	       791	show-branch.c	FUNCTION_39	IF_18	IF_20
0x21bf	    0x488b8588f9ff	            mov rax, qword [rbp - 0x678]	       792	show-branch.c	FUNCTION_39	IF_18	IF_20
0x21c6	    0x48898568f9ff	            mov qword [rbp - 0x698], rax	       792	show-branch.c	FUNCTION_39	IF_18	IF_20
0x21cd	    0x488b8568f9ff	            mov rax, qword [rbp - 0x698]	       793	show-branch.c	FUNCTION_39	IF_18	IF_20	CALL_65
0x21d4	    0x488d9568f9ff	                  lea rdx, [rbp - 0x698]	       793	show-branch.c	FUNCTION_39	IF_18	IF_20	CALL_65
0x21db	      0xbe00000000	                              mov esi, 0	       793	show-branch.c	FUNCTION_39	IF_18	IF_20	CALL_65
0x21e0	          0x4889c7	                            mov rdi, rax	       793	show-branch.c	FUNCTION_39	IF_18	IF_20	CALL_65
0x21e3	      0xe823deffff	                    call sym.skip_prefix	       793	show-branch.c	FUNCTION_39	IF_18	IF_20	CALL_65
0x21e8	    0x488b8568f9ff	            mov rax, qword [rbp - 0x698]	       794	show-branch.c	FUNCTION_39	IF_18	IF_20	CALL_66
0x21ef	          0x4889c7	                            mov rdi, rax	       794	show-branch.c	FUNCTION_39	IF_18	IF_20	CALL_66
0x21f2	      0xe887f1ffff	                 call sym.append_one_rev	       794	show-branch.c	FUNCTION_39	IF_18	IF_20	CALL_66
0x21f7	    0x8b0500000000	            mov eax, dword [0x0400223d] 	       798	show-branch.c	FUNCTION_39	IF_21
0x21fd	            0x85c0	                           test eax, eax	       798	show-branch.c	FUNCTION_39	IF_21
0x21ff	            0x7528	                           jne 0x4002269	       798	show-branch.c	FUNCTION_39	IF_21
0x2201	    0x488b05000000	            mov rax, qword [0x04002248] 	       799	show-branch.c	FUNCTION_39	IF_21	CALL_67
0x2208	          0x4889c1	                            mov rcx, rax	       799	show-branch.c	FUNCTION_39	IF_21	CALL_67
0x220b	      0xba15000000	                           mov edx, 0x15	       799	show-branch.c	FUNCTION_39	IF_21	CALL_67
0x2210	      0xbe01000000	                              mov esi, 1	       799	show-branch.c	FUNCTION_39	IF_21	CALL_67
0x2215	      0xbf00000000	                              mov edi, 0	       799	show-branch.c	FUNCTION_39	IF_21	CALL_67
0x221a	      0xe800000000	                          call 0x400225f	       799	show-branch.c	FUNCTION_39	IF_21	CALL_67
0x221f	      0xbf00000000	                              mov edi, 0	       800	show-branch.c	FUNCTION_39	IF_21	CALL_68
0x2224	      0xe800000000	                          call 0x4002269	       800	show-branch.c	FUNCTION_39	IF_21	CALL_68
0x2229	    0xc78504f9ffff	              mov dword [rbp - 0x6fc], 0	       803	show-branch.c	FUNCTION_39	FOR_3
0x2233	      0xe9ac010000	                           jmp 0x4002424	       803	show-branch.c	FUNCTION_39	FOR_3
0x2238	    0x8b8504f9ffff	            mov eax, dword [rbp - 0x6fc]	       805	show-branch.c	FUNCTION_39	FOR_3
0x223e	          0x83c002	                              add eax, 2	       805	show-branch.c	FUNCTION_39	FOR_3
0x2241	      0xba01000000	                              mov edx, 1	       805	show-branch.c	FUNCTION_39	FOR_3
0x2246	            0x89c1	                            mov ecx, eax	       805	show-branch.c	FUNCTION_39	FOR_3
0x2248	            0xd3e2	                             shl edx, cl	       805	show-branch.c	FUNCTION_39	FOR_3
0x224a	            0x89d0	                            mov eax, edx	       805	show-branch.c	FUNCTION_39	FOR_3
0x224c	    0x898524f9ffff	            mov dword [rbp - 0x6dc], eax	       805	show-branch.c	FUNCTION_39	FOR_3
0x2252	    0x83bd04f9ffff	          cmp dword [rbp - 0x6fc], 0x18 	       807	show-branch.c	FUNCTION_39	FOR_3	IF_22
0x2259	            0x7e26	                           jle 0x40022c1	       807	show-branch.c	FUNCTION_39	FOR_3	IF_22
0x225b	      0xba19000000	                           mov edx, 0x19	       808	show-branch.c	FUNCTION_39	FOR_3	IF_22	CALL_70
0x2260	      0xbe00000000	                              mov esi, 0	       808	show-branch.c	FUNCTION_39	FOR_3	IF_22	CALL_70
0x2265	      0xbf00000000	                              mov edi, 0	       808	show-branch.c	FUNCTION_39	FOR_3	IF_22	CALL_70
0x226a	      0xe831dfffff	                              call sym.Q	       808	show-branch.c	FUNCTION_39	FOR_3	IF_22	CALL_70
0x226f	      0xbe19000000	                           mov esi, 0x19	       808	show-branch.c	FUNCTION_39	FOR_3	IF_22	CALL_70
0x2274	          0x4889c7	                            mov rdi, rax	       808	show-branch.c	FUNCTION_39	FOR_3	IF_22	CALL_70
0x2277	      0xb800000000	                              mov eax, 0	       808	show-branch.c	FUNCTION_39	FOR_3	IF_22	CALL_70
0x227c	      0xe800000000	                          call 0x40022c1	       808	show-branch.c	FUNCTION_39	FOR_3	IF_22	CALL_70
0x2281	    0x8b8504f9ffff	            mov eax, dword [rbp - 0x6fc]	       811	show-branch.c	FUNCTION_39	FOR_3	IF_23	CALL_71
0x2287	            0x4898	                                    cdqe	       811	show-branch.c	FUNCTION_39	FOR_3	IF_23	CALL_71
0x2289	    0x488b04c50000	                  mov rax, qword [rax*8]	       811	show-branch.c	FUNCTION_39	FOR_3	IF_23	CALL_71
0x2291	    0x488d95c0f9ff	                  lea rdx, [rbp - 0x640]	       811	show-branch.c	FUNCTION_39	FOR_3	IF_23	CALL_71
0x2298	          0x4889d6	                            mov rsi, rdx	       811	show-branch.c	FUNCTION_39	FOR_3	IF_23	CALL_71
0x229b	          0x4889c7	                            mov rdi, rax	       811	show-branch.c	FUNCTION_39	FOR_3	IF_23	CALL_71
0x229e	      0xe800000000	                          call 0x40022e3	       811	show-branch.c	FUNCTION_39	FOR_3	IF_23	CALL_71
0x22a3	            0x85c0	                           test eax, eax	       811	show-branch.c	FUNCTION_39	FOR_3	IF_23	CALL_71
0x22a5	            0x742a	                            je 0x4002311	       811	show-branch.c	FUNCTION_39	FOR_3	IF_23	CALL_71
0x22a7	    0x8b8504f9ffff	            mov eax, dword [rbp - 0x6fc]	       812	show-branch.c	FUNCTION_39	FOR_3	CALL_73
0x22ad	            0x4898	                                    cdqe	       812	show-branch.c	FUNCTION_39	FOR_3	CALL_73
0x22af	    0x488b1cc50000	                  mov rbx, qword [rax*8]	       812	show-branch.c	FUNCTION_39	FOR_3	CALL_73
0x22b7	      0xbf00000000	                              mov edi, 0	       812	show-branch.c	FUNCTION_39	FOR_3	CALL_73
0x22bc	      0xe8b3deffff	                               call sym.	       812	show-branch.c	FUNCTION_39	FOR_3	CALL_73
0x22c1	          0x4889de	                            mov rsi, rbx	       812	show-branch.c	FUNCTION_39	FOR_3	CALL_73
0x22c4	          0x4889c7	                            mov rdi, rax	       812	show-branch.c	FUNCTION_39	FOR_3	CALL_73
0x22c7	      0xb800000000	                              mov eax, 0	       812	show-branch.c	FUNCTION_39	FOR_3	CALL_73
0x22cc	      0xe800000000	                          call 0x4002311	       812	show-branch.c	FUNCTION_39	FOR_3	CALL_73
0x22d1	    0x488d85c0f9ff	                  lea rax, [rbp - 0x640]	       813	show-branch.c	FUNCTION_39	FOR_3	CALL_74
0x22d8	          0x4889c7	                            mov rdi, rax	       813	show-branch.c	FUNCTION_39	FOR_3	CALL_74
0x22db	      0xe800000000	                          call 0x4002320	       813	show-branch.c	FUNCTION_39	FOR_3	CALL_74
0x22e0	    0x48898590f9ff	            mov qword [rbp - 0x670], rax	       813	show-branch.c	FUNCTION_39	FOR_3	CALL_74
0x22e7	    0x4883bd90f9ff	              cmp qword [rbp - 0x670], 0	       814	show-branch.c	FUNCTION_39	FOR_3	IF_24
0x22ef	            0x753f	                           jne 0x4002370	       814	show-branch.c	FUNCTION_39	FOR_3	IF_24
0x22f1	    0x488d85c0f9ff	                  lea rax, [rbp - 0x640]	       815	show-branch.c	FUNCTION_39	FOR_3	IF_24	CALL_76
0x22f8	          0x4889c7	                            mov rdi, rax	       815	show-branch.c	FUNCTION_39	FOR_3	IF_24	CALL_76
0x22fb	      0xe800000000	                          call 0x4002340	       815	show-branch.c	FUNCTION_39	FOR_3	IF_24	CALL_76
0x2300	          0x4989c4	                            mov r12, rax	       815	show-branch.c	FUNCTION_39	FOR_3	IF_24	CALL_76
0x2303	    0x8b8504f9ffff	            mov eax, dword [rbp - 0x6fc]	       815	show-branch.c	FUNCTION_39	FOR_3	IF_24	CALL_76
0x2309	            0x4898	                                    cdqe	       815	show-branch.c	FUNCTION_39	FOR_3	IF_24	CALL_76
0x230b	    0x488b1cc50000	                  mov rbx, qword [rax*8]	       815	show-branch.c	FUNCTION_39	FOR_3	IF_24	CALL_76
0x2313	      0xbf00000000	                              mov edi, 0	       815	show-branch.c	FUNCTION_39	FOR_3	IF_24	CALL_76
0x2318	      0xe857deffff	                               call sym.	       815	show-branch.c	FUNCTION_39	FOR_3	IF_24	CALL_76
0x231d	          0x4c89e2	                            mov rdx, r12	       815	show-branch.c	FUNCTION_39	FOR_3	IF_24	CALL_76
0x2320	          0x4889de	                            mov rsi, rbx	       815	show-branch.c	FUNCTION_39	FOR_3	IF_24	CALL_76
0x2323	          0x4889c7	                            mov rdi, rax	       815	show-branch.c	FUNCTION_39	FOR_3	IF_24	CALL_76
0x2326	      0xb800000000	                              mov eax, 0	       815	show-branch.c	FUNCTION_39	FOR_3	IF_24	CALL_76
0x232b	      0xe800000000	                          call 0x4002370	       815	show-branch.c	FUNCTION_39	FOR_3	IF_24	CALL_76
0x2330	    0x488b8590f9ff	            mov rax, qword [rbp - 0x670]	       817	show-branch.c	FUNCTION_39	FOR_3	CALL_78
0x2337	          0x4889c7	                            mov rdi, rax	       817	show-branch.c	FUNCTION_39	FOR_3	CALL_78
0x233a	      0xe8dddeffff	                   call sym.parse_commit	       817	show-branch.c	FUNCTION_39	FOR_3	CALL_78
0x233f	    0x488d9548f9ff	                  lea rdx, [rbp - 0x6b8]	       818	show-branch.c	FUNCTION_39	FOR_3	CALL_79
0x2346	    0x488b8590f9ff	            mov rax, qword [rbp - 0x670]	       818	show-branch.c	FUNCTION_39	FOR_3	CALL_79
0x234d	          0x4889d6	                            mov rsi, rdx	       818	show-branch.c	FUNCTION_39	FOR_3	CALL_79
0x2350	          0x4889c7	                            mov rdi, rax	       818	show-branch.c	FUNCTION_39	FOR_3	CALL_79
0x2353	      0xe898e3ffff	                      call sym.mark_seen	       818	show-branch.c	FUNCTION_39	FOR_3	CALL_79
0x2358	    0x488b8590f9ff	            mov rax, qword [rbp - 0x670]	       824	show-branch.c	FUNCTION_39	FOR_3
0x235f	            0x8b00	                    mov eax, dword [rax]	       824	show-branch.c	FUNCTION_39	FOR_3
0x2361	          0xc1e804	                              shr eax, 4	       824	show-branch.c	FUNCTION_39	FOR_3
0x2364	      0x25ffffff07	                      and eax, 0x7ffffff	       824	show-branch.c	FUNCTION_39	FOR_3
0x2369	     0xb8524f9ffff	             or eax, dword [rbp - 0x6dc]	       824	show-branch.c	FUNCTION_39	FOR_3
0x236f	      0x25ffffff07	                      and eax, 0x7ffffff	       824	show-branch.c	FUNCTION_39	FOR_3
0x2374	            0x89c2	                            mov edx, eax	       824	show-branch.c	FUNCTION_39	FOR_3
0x2376	    0x488b8590f9ff	            mov rax, qword [rbp - 0x670]	       824	show-branch.c	FUNCTION_39	FOR_3
0x237d	    0x81e2ffffff07	                      and edx, 0x7ffffff	       824	show-branch.c	FUNCTION_39	FOR_3
0x2383	            0x89d1	                            mov ecx, edx	       824	show-branch.c	FUNCTION_39	FOR_3
0x2385	          0xc1e104	                              shl ecx, 4	       824	show-branch.c	FUNCTION_39	FOR_3
0x2388	            0x8b10	                    mov edx, dword [rax]	       824	show-branch.c	FUNCTION_39	FOR_3
0x238a	    0x81e20f000080	                     and edx, 0x8000000f	       824	show-branch.c	FUNCTION_39	FOR_3
0x2390	             0x9ca	                             or edx, ecx	       824	show-branch.c	FUNCTION_39	FOR_3
0x2392	            0x8910	                    mov dword [rax], edx	       824	show-branch.c	FUNCTION_39	FOR_3
0x2394	    0x488b8590f9ff	            mov rax, qword [rbp - 0x670]	       825	show-branch.c	FUNCTION_39	FOR_3	IF_25
0x239b	            0x8b00	                    mov eax, dword [rax]	       825	show-branch.c	FUNCTION_39	FOR_3	IF_25
0x239d	          0xc1e804	                              shr eax, 4	       825	show-branch.c	FUNCTION_39	FOR_3	IF_25
0x23a0	      0x25ffffff07	                      and eax, 0x7ffffff	       825	show-branch.c	FUNCTION_39	FOR_3	IF_25
0x23a5	    0x3b8524f9ffff	            cmp eax, dword [rbp - 0x6dc]	       825	show-branch.c	FUNCTION_39	FOR_3	IF_25
0x23ab	            0x7519	                           jne 0x4002406	       825	show-branch.c	FUNCTION_39	FOR_3	IF_25
0x23ad	    0x488d9540f9ff	                  lea rdx, [rbp - 0x6c0]	       826	show-branch.c	FUNCTION_39	FOR_3	CALL_80
0x23b4	    0x488b8590f9ff	            mov rax, qword [rbp - 0x670]	       826	show-branch.c	FUNCTION_39	FOR_3	CALL_80
0x23bb	          0x4889d6	                            mov rsi, rdx	       826	show-branch.c	FUNCTION_39	FOR_3	CALL_80
0x23be	          0x4889c7	                            mov rdi, rax	       826	show-branch.c	FUNCTION_39	FOR_3	CALL_80
0x23c1	      0xe800000000	                          call 0x4002406	       826	show-branch.c	FUNCTION_39	FOR_3	CALL_80
0x23c6	    0x8b8504f9ffff	            mov eax, dword [rbp - 0x6fc]	       827	show-branch.c	FUNCTION_39	FOR_3
0x23cc	            0x4898	                                    cdqe	       827	show-branch.c	FUNCTION_39	FOR_3
0x23ce	    0x488b9590f9ff	            mov rdx, qword [rbp - 0x670]	       827	show-branch.c	FUNCTION_39	FOR_3
0x23d5	    0x488994c530fa	    mov qword [rbp + rax*8 - 0x5d0], rdx	       827	show-branch.c	FUNCTION_39	FOR_3
0x23dd	    0x838504f9ffff	              add dword [rbp - 0x6fc], 1	       803	show-branch.c	FUNCTION_39	FOR_3
0x23e4	    0x8b8504f9ffff	            mov eax, dword [rbp - 0x6fc]	       803	show-branch.c	FUNCTION_39	FOR_3
0x23ea	            0x4898	                                    cdqe	       803	show-branch.c	FUNCTION_39	FOR_3
0x23ec	    0x488b04c50000	                  mov rax, qword [rax*8]	       803	show-branch.c	FUNCTION_39	FOR_3
0x23f4	          0x4885c0	                           test rax, rax	       803	show-branch.c	FUNCTION_39	FOR_3
0x23f7	     0xf853bfeffff	                           jne 0x4002278	       803	show-branch.c	FUNCTION_39	FOR_3
0x23fd	    0xc78508f9ffff	              mov dword [rbp - 0x6f8], 0	       829	show-branch.c	FUNCTION_39	FOR_4
0x2407	            0xeb32	                           jmp 0x400247b	       829	show-branch.c	FUNCTION_39	FOR_4
0x2409	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       830	show-branch.c	FUNCTION_39	FOR_4
0x240f	            0x4898	                                    cdqe	       830	show-branch.c	FUNCTION_39	FOR_4
0x2411	    0x488b84c530fa	    mov rax, qword [rbp + rax*8 - 0x5d0]	       830	show-branch.c	FUNCTION_39	FOR_4
0x2419	            0x8b00	                    mov eax, dword [rax]	       830	show-branch.c	FUNCTION_39	FOR_4
0x241b	          0xc1e804	                              shr eax, 4	       830	show-branch.c	FUNCTION_39	FOR_4
0x241e	      0x25ffffff07	                      and eax, 0x7ffffff	       830	show-branch.c	FUNCTION_39	FOR_4
0x2423	            0x89c2	                            mov edx, eax	       830	show-branch.c	FUNCTION_39	FOR_4
0x2425	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       830	show-branch.c	FUNCTION_39	FOR_4
0x242b	            0x4898	                                    cdqe	       830	show-branch.c	FUNCTION_39	FOR_4
0x242d	    0x899485c0f9ff	    mov dword [rbp + rax*4 - 0x640], edx	       830	show-branch.c	FUNCTION_39	FOR_4
0x2434	    0x838508f9ffff	              add dword [rbp - 0x6f8], 1	       829	show-branch.c	FUNCTION_39	FOR_4
0x243b	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       829	show-branch.c	FUNCTION_39	FOR_4
0x2441	    0x3b8504f9ffff	            cmp eax, dword [rbp - 0x6fc]	       829	show-branch.c	FUNCTION_39	FOR_4
0x2447	            0x7cc0	                            jl 0x4002449	       829	show-branch.c	FUNCTION_39	FOR_4
0x2449	    0x8b85d0f8ffff	            mov eax, dword [rbp - 0x730]	       832	show-branch.c	FUNCTION_39	IF_26
0x244f	            0x85c0	                           test eax, eax	       832	show-branch.c	FUNCTION_39	IF_26
0x2451	            0x7822	                            js 0x40024b5	       832	show-branch.c	FUNCTION_39	IF_26
0x2453	    0x8b8dd0f8ffff	            mov ecx, dword [rbp - 0x730]	       833	show-branch.c	FUNCTION_39	CALL_81
0x2459	    0x8b9504f9ffff	            mov edx, dword [rbp - 0x6fc]	       833	show-branch.c	FUNCTION_39	CALL_81
0x245f	    0x488db548f9ff	                  lea rsi, [rbp - 0x6b8]	       833	show-branch.c	FUNCTION_39	CALL_81
0x2466	    0x488d8540f9ff	                  lea rax, [rbp - 0x6c0]	       833	show-branch.c	FUNCTION_39	CALL_81
0x246d	          0x4889c7	                            mov rdi, rax	       833	show-branch.c	FUNCTION_39	CALL_81
0x2470	      0xe8bbe2ffff	                      call sym.join_revs	       833	show-branch.c	FUNCTION_39	CALL_81
0x2475	    0x488d8548f9ff	                  lea rax, [rbp - 0x6b8]	       835	show-branch.c	FUNCTION_39	CALL_82
0x247c	          0x4889c7	                            mov rdi, rax	       835	show-branch.c	FUNCTION_39	CALL_82
0x247f	      0xe800000000	                          call 0x40024c4	       835	show-branch.c	FUNCTION_39	CALL_82
0x2484	    0x8b85e0f8ffff	            mov eax, dword [rbp - 0x720]	       837	show-branch.c	FUNCTION_39	IF_27
0x248a	            0x85c0	                           test eax, eax	       837	show-branch.c	FUNCTION_39	IF_27
0x248c	            0x741c	                            je 0x40024ea	       837	show-branch.c	FUNCTION_39	IF_27
0x248e	    0x488b8548f9ff	            mov rax, qword [rbp - 0x6b8]	       838	show-branch.c	FUNCTION_39	CALL_83
0x2495	    0x8b9504f9ffff	            mov edx, dword [rbp - 0x6fc]	       838	show-branch.c	FUNCTION_39	CALL_83
0x249b	            0x89d6	                            mov esi, edx	       838	show-branch.c	FUNCTION_39	CALL_83
0x249d	          0x4889c7	                            mov rdi, rax	       838	show-branch.c	FUNCTION_39	CALL_83
0x24a0	      0xe83fedffff	                call sym.show_merge_base	       838	show-branch.c	FUNCTION_39	CALL_83
0x24a5	      0xe9b4040000	                           jmp 0x400299e	       838	show-branch.c	FUNCTION_39	CALL_83
0x24aa	    0x8b85e4f8ffff	            mov eax, dword [rbp - 0x71c]	       840	show-branch.c	FUNCTION_39	IF_28
0x24b0	            0x85c0	                           test eax, eax	       840	show-branch.c	FUNCTION_39	IF_28
0x24b2	            0x7429	                            je 0x400251d	       840	show-branch.c	FUNCTION_39	IF_28
0x24b4	    0x488d95c0f9ff	                  lea rdx, [rbp - 0x640]	       841	show-branch.c	FUNCTION_39	CALL_84
0x24bb	    0x8bb504f9ffff	            mov esi, dword [rbp - 0x6fc]	       841	show-branch.c	FUNCTION_39	CALL_84
0x24c1	    0x488d8530faff	                  lea rax, [rbp - 0x5d0]	       841	show-branch.c	FUNCTION_39	CALL_84
0x24c8	          0x4889d1	                            mov rcx, rdx	       841	show-branch.c	FUNCTION_39	CALL_84
0x24cb	      0xba00000000	                              mov edx, 0	       841	show-branch.c	FUNCTION_39	CALL_84
0x24d0	          0x4889c7	                            mov rdi, rax	       841	show-branch.c	FUNCTION_39	CALL_84
0x24d3	      0xe8dfedffff	               call sym.show_independent	       841	show-branch.c	FUNCTION_39	CALL_84
0x24d8	      0xe981040000	                           jmp 0x400299e	       841	show-branch.c	FUNCTION_39	CALL_84
0x24dd	    0x83bd04f9ffff	              cmp dword [rbp - 0x6fc], 1	       844	show-branch.c	FUNCTION_39	IF_29
0x24e4	            0x7f0e	                            jg 0x4002534	       844	show-branch.c	FUNCTION_39	IF_29
0x24e6	    0x8b85d0f8ffff	            mov eax, dword [rbp - 0x730]	       844	show-branch.c	FUNCTION_39	IF_29
0x24ec	            0x85c0	                           test eax, eax	       844	show-branch.c	FUNCTION_39	IF_29
0x24ee	     0xf89c7010000	                           jns 0x40026fb	       844	show-branch.c	FUNCTION_39	IF_29
0x24f4	    0xc78508f9ffff	              mov dword [rbp - 0x6f8], 0	       845	show-branch.c	FUNCTION_39	IF_29	FOR_5
0x24fe	      0xe967010000	                           jmp 0x40026aa	       845	show-branch.c	FUNCTION_39	IF_29	FOR_5
0x2503	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       850	show-branch.c	FUNCTION_39	IF_29	FOR_5
0x2509	            0x4898	                                    cdqe	       850	show-branch.c	FUNCTION_39	IF_29	FOR_5
0x250b	    0x488b84c530fa	    mov rax, qword [rbp + rax*8 - 0x5d0]	       850	show-branch.c	FUNCTION_39	IF_29	FOR_5
0x2513	        0x488d4804	                      lea rcx, [rax + 4]	       850	show-branch.c	FUNCTION_39	IF_29	FOR_5
0x2517	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       848	show-branch.c	FUNCTION_39	IF_29	FOR_5
0x251d	            0x4898	                                    cdqe	       848	show-branch.c	FUNCTION_39	IF_29	FOR_5
0x251f	    0x488b34c50000	                  mov rsi, qword [rax*8]	       848	show-branch.c	FUNCTION_39	IF_29	FOR_5
0x2527	    0x488d95a0f9ff	                  lea rdx, [rbp - 0x660]	       847	show-branch.c	FUNCTION_39	IF_29	FOR_5	CALL_85
0x252e	    0x488b8588f9ff	            mov rax, qword [rbp - 0x678]	       847	show-branch.c	FUNCTION_39	IF_29	FOR_5	CALL_85
0x2535	          0x4889c7	                            mov rdi, rax	       847	show-branch.c	FUNCTION_39	IF_29	FOR_5	CALL_85
0x2538	      0xe8faebffff	                    call sym.rev_is_head	       847	show-branch.c	FUNCTION_39	IF_29	FOR_5	CALL_85
0x253d	    0x898528f9ffff	            mov dword [rbp - 0x6d8], eax	       847	show-branch.c	FUNCTION_39	IF_29	FOR_5	CALL_85
0x2543	    0x8b85d0f8ffff	            mov eax, dword [rbp - 0x730]	       851	show-branch.c	FUNCTION_39	IF_29	FOR_5	IF_30
0x2549	            0x85c0	                           test eax, eax	       851	show-branch.c	FUNCTION_39	IF_29	FOR_5	IF_30
0x254b	            0x793e	                           jns 0x40025cb	       851	show-branch.c	FUNCTION_39	IF_29	FOR_5	IF_30
0x254d	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       852	show-branch.c	FUNCTION_39	IF_29	FOR_5	IF_30	CALL_86
0x2553	            0x4898	                                    cdqe	       852	show-branch.c	FUNCTION_39	IF_29	FOR_5	IF_30	CALL_86
0x2555	    0x488b04c50000	                  mov rax, qword [rax*8]	       852	show-branch.c	FUNCTION_39	IF_29	FOR_5	IF_30	CALL_86
0x255d	    0x83bd28f9ffff	              cmp dword [rbp - 0x6d8], 0	       852	show-branch.c	FUNCTION_39	IF_29	FOR_5	IF_30	CALL_86
0x2564	            0x7407	                            je 0x40025ad	       852	show-branch.c	FUNCTION_39	IF_29	FOR_5	IF_30	CALL_86
0x2566	      0xb92a000000	                           mov ecx, 0x2a	       852	show-branch.c	FUNCTION_39	IF_29	FOR_5	IF_30	CALL_86
0x256b	            0xeb05	                           jmp 0x40025b2	       852	show-branch.c	FUNCTION_39	IF_29	FOR_5	IF_30	CALL_86
0x256d	      0xb920000000	                           mov ecx, 0x20	       852	show-branch.c	FUNCTION_39	IF_29	FOR_5	IF_30	CALL_86
0x2572	          0x4889c2	                            mov rdx, rax	       852	show-branch.c	FUNCTION_39	IF_29	FOR_5	IF_30	CALL_86
0x2575	            0x89ce	                            mov esi, ecx	       852	show-branch.c	FUNCTION_39	IF_29	FOR_5	IF_30	CALL_86
0x2577	      0xbf00000000	                              mov edi, 0	       852	show-branch.c	FUNCTION_39	IF_29	FOR_5	IF_30	CALL_86
0x257c	      0xb800000000	                              mov eax, 0	       852	show-branch.c	FUNCTION_39	IF_29	FOR_5	IF_30	CALL_86
0x2581	      0xe800000000	                          call 0x40025c6	       852	show-branch.c	FUNCTION_39	IF_29	FOR_5	IF_30	CALL_86
0x2586	      0xe982000000	                           jmp 0x400264d	       852	show-branch.c	FUNCTION_39	IF_29	FOR_5	IF_30	CALL_86
0x258b	    0xc78518f9ffff	              mov dword [rbp - 0x6e8], 0	       855	show-branch.c	FUNCTION_39	IF_29	FOR_5	ELSE_3	FOR_6
0x2595	            0xeb11	                           jmp 0x40025e8	       855	show-branch.c	FUNCTION_39	IF_29	FOR_5	ELSE_3	FOR_6
0x2597	      0xbf20000000	                           mov edi, 0x20	       856	show-branch.c	FUNCTION_39	IF_29	FOR_5	ELSE_3	CALL_87
0x259c	      0xe800000000	                          call 0x40025e1	       856	show-branch.c	FUNCTION_39	IF_29	FOR_5	ELSE_3	CALL_87
0x25a1	    0x838518f9ffff	              add dword [rbp - 0x6e8], 1	       855	show-branch.c	FUNCTION_39	IF_29	FOR_5	ELSE_3	FOR_6
0x25a8	    0x8b8518f9ffff	            mov eax, dword [rbp - 0x6e8]	       855	show-branch.c	FUNCTION_39	IF_29	FOR_5	ELSE_3	FOR_6
0x25ae	    0x3b8508f9ffff	            cmp eax, dword [rbp - 0x6f8]	       855	show-branch.c	FUNCTION_39	IF_29	FOR_5	ELSE_3	FOR_6
0x25b4	            0x7ce1	                            jl 0x40025d7	       855	show-branch.c	FUNCTION_39	IF_29	FOR_5	ELSE_3	FOR_6
0x25b6	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       857	show-branch.c	FUNCTION_39	IF_29	FOR_5	ELSE_3	CALL_88
0x25bc	            0x4898	                                    cdqe	       857	show-branch.c	FUNCTION_39	IF_29	FOR_5	ELSE_3	CALL_88
0x25be	    0x488b1cc50000	                  mov rbx, qword [rax*8]	       857	show-branch.c	FUNCTION_39	IF_29	FOR_5	ELSE_3	CALL_88
0x25c6	      0xe8b2dcffff	           call sym.get_color_reset_code	       857	show-branch.c	FUNCTION_39	IF_29	FOR_5	ELSE_3	CALL_88
0x25cb	          0x4989c5	                            mov r13, rax	       857	show-branch.c	FUNCTION_39	IF_29	FOR_5	ELSE_3	CALL_88
0x25ce	    0x83bd28f9ffff	              cmp dword [rbp - 0x6d8], 0	       857	show-branch.c	FUNCTION_39	IF_29	FOR_5	ELSE_3	CALL_88
0x25d5	            0x7408	                            je 0x400261f	       857	show-branch.c	FUNCTION_39	IF_29	FOR_5	ELSE_3	CALL_88
0x25d7	    0x41bc2a000000	                          mov r12d, 0x2a	       857	show-branch.c	FUNCTION_39	IF_29	FOR_5	ELSE_3	CALL_88
0x25dd	            0xeb06	                           jmp 0x4002625	       857	show-branch.c	FUNCTION_39	IF_29	FOR_5	ELSE_3	CALL_88
0x25df	    0x41bc21000000	                          mov r12d, 0x21	       857	show-branch.c	FUNCTION_39	IF_29	FOR_5	ELSE_3	CALL_88
0x25e5	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       857	show-branch.c	FUNCTION_39	IF_29	FOR_5	ELSE_3	CALL_88
0x25eb	            0x89c7	                            mov edi, eax	       857	show-branch.c	FUNCTION_39	IF_29	FOR_5	ELSE_3	CALL_88
0x25ed	      0xe849dcffff	                 call sym.get_color_code	       857	show-branch.c	FUNCTION_39	IF_29	FOR_5	ELSE_3	CALL_88
0x25f2	          0x4989d8	                             mov r8, rbx	       857	show-branch.c	FUNCTION_39	IF_29	FOR_5	ELSE_3	CALL_88
0x25f5	          0x4c89e9	                            mov rcx, r13	       857	show-branch.c	FUNCTION_39	IF_29	FOR_5	ELSE_3	CALL_88
0x25f8	          0x4489e2	                           mov edx, r12d	       857	show-branch.c	FUNCTION_39	IF_29	FOR_5	ELSE_3	CALL_88
0x25fb	          0x4889c6	                            mov rsi, rax	       857	show-branch.c	FUNCTION_39	IF_29	FOR_5	ELSE_3	CALL_88
0x25fe	      0xbf00000000	                              mov edi, 0	       857	show-branch.c	FUNCTION_39	IF_29	FOR_5	ELSE_3	CALL_88
0x2603	      0xb800000000	                              mov eax, 0	       857	show-branch.c	FUNCTION_39	IF_29	FOR_5	ELSE_3	CALL_88
0x2608	      0xe800000000	                          call 0x400264d	       857	show-branch.c	FUNCTION_39	IF_29	FOR_5	ELSE_3	CALL_88
0x260d	    0x8b0500000000	            mov eax, dword [0x04002653] 	       863	show-branch.c	FUNCTION_39	IF_29	FOR_5	IF_31
0x2613	            0x85c0	                           test eax, eax	       863	show-branch.c	FUNCTION_39	IF_29	FOR_5	IF_31
0x2615	            0x751f	                           jne 0x4002676	       863	show-branch.c	FUNCTION_39	IF_29	FOR_5	IF_31
0x2617	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       865	show-branch.c	FUNCTION_39	IF_29	FOR_5	IF_31	CALL_91
0x261d	            0x4898	                                    cdqe	       865	show-branch.c	FUNCTION_39	IF_29	FOR_5	IF_31	CALL_91
0x261f	    0x488b84c530fa	    mov rax, qword [rbp + rax*8 - 0x5d0]	       865	show-branch.c	FUNCTION_39	IF_29	FOR_5	IF_31	CALL_91
0x2627	      0xbe01000000	                              mov esi, 1	       865	show-branch.c	FUNCTION_39	IF_29	FOR_5	IF_31	CALL_91
0x262c	          0x4889c7	                            mov rdi, rax	       865	show-branch.c	FUNCTION_39	IF_29	FOR_5	IF_31	CALL_91
0x262f	      0xe869e3ffff	                call sym.show_one_commit	       865	show-branch.c	FUNCTION_39	IF_29	FOR_5	IF_31	CALL_91
0x2634	            0xeb18	                           jmp 0x400268e	       865	show-branch.c	FUNCTION_39	IF_29	FOR_5	IF_31	CALL_91
0x2636	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       868	show-branch.c	FUNCTION_39	IF_29	FOR_5	CALL_92
0x263c	            0x4898	                                    cdqe	       868	show-branch.c	FUNCTION_39	IF_29	FOR_5	CALL_92
0x263e	    0x488b84c500fb	    mov rax, qword [rbp + rax*8 - 0x500]	       868	show-branch.c	FUNCTION_39	IF_29	FOR_5	CALL_92
0x2646	          0x4889c7	                            mov rdi, rax	       868	show-branch.c	FUNCTION_39	IF_29	FOR_5	CALL_92
0x2649	      0xe800000000	                          call 0x400268e	       868	show-branch.c	FUNCTION_39	IF_29	FOR_5	CALL_92
0x264e	    0x83bd28f9ffff	              cmp dword [rbp - 0x6d8], 0	       870	show-branch.c	FUNCTION_39	IF_29	FOR_5	IF_32
0x2655	            0x740c	                            je 0x40026a3	       870	show-branch.c	FUNCTION_39	IF_29	FOR_5	IF_32
0x2657	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       871	show-branch.c	FUNCTION_39	IF_29	FOR_5	IF_32
0x265d	    0x898510f9ffff	            mov dword [rbp - 0x6f0], eax	       871	show-branch.c	FUNCTION_39	IF_29	FOR_5	IF_32
0x2663	    0x838508f9ffff	              add dword [rbp - 0x6f8], 1	       845	show-branch.c	FUNCTION_39	IF_29	FOR_5
0x266a	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       845	show-branch.c	FUNCTION_39	IF_29	FOR_5
0x2670	    0x3b8504f9ffff	            cmp eax, dword [rbp - 0x6fc]	       845	show-branch.c	FUNCTION_39	IF_29	FOR_5
0x2676	     0xf8c87feffff	                            jl 0x4002543	       845	show-branch.c	FUNCTION_39	IF_29	FOR_5
0x267c	    0x8b85d0f8ffff	            mov eax, dword [rbp - 0x730]	       873	show-branch.c	FUNCTION_39	IF_29	IF_33
0x2682	            0x85c0	                           test eax, eax	       873	show-branch.c	FUNCTION_39	IF_29	IF_33
0x2684	            0x7835	                            js 0x40026fb	       873	show-branch.c	FUNCTION_39	IF_29	IF_33
0x2686	    0xc78508f9ffff	              mov dword [rbp - 0x6f8], 0	       874	show-branch.c	FUNCTION_39	IF_29	IF_33	FOR_7
0x2690	            0xeb11	                           jmp 0x40026e3	       874	show-branch.c	FUNCTION_39	IF_29	IF_33	FOR_7
0x2692	      0xbf2d000000	                           mov edi, 0x2d	       875	show-branch.c	FUNCTION_39	IF_29	IF_33	CALL_93
0x2697	      0xe800000000	                          call 0x40026dc	       875	show-branch.c	FUNCTION_39	IF_29	IF_33	CALL_93
0x269c	    0x838508f9ffff	              add dword [rbp - 0x6f8], 1	       874	show-branch.c	FUNCTION_39	IF_29	IF_33	FOR_7
0x26a3	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       874	show-branch.c	FUNCTION_39	IF_29	IF_33	FOR_7
0x26a9	    0x3b8504f9ffff	            cmp eax, dword [rbp - 0x6fc]	       874	show-branch.c	FUNCTION_39	IF_29	IF_33	FOR_7
0x26af	            0x7ce1	                            jl 0x40026d2	       874	show-branch.c	FUNCTION_39	IF_29	IF_33	FOR_7
0x26b1	      0xbf0a000000	                            mov edi, 0xa	       876	show-branch.c	FUNCTION_39	IF_29	IF_33	CALL_94
0x26b6	      0xe800000000	                          call 0x40026fb	       876	show-branch.c	FUNCTION_39	IF_29	IF_33	CALL_94
0x26bb	    0x8b85d0f8ffff	            mov eax, dword [rbp - 0x730]	       879	show-branch.c	FUNCTION_39	IF_34
0x26c1	            0x85c0	                           test eax, eax	       879	show-branch.c	FUNCTION_39	IF_34
0x26c3	            0x790a	                           jns 0x400270f	       879	show-branch.c	FUNCTION_39	IF_34
0x26c5	      0xbf00000000	                              mov edi, 0	       880	show-branch.c	FUNCTION_39	CALL_95
0x26ca	      0xe800000000	                          call 0x400270f	       880	show-branch.c	FUNCTION_39	CALL_95
0x26cf	    0x8b95dcf8ffff	            mov edx, dword [rbp - 0x724]	       883	show-branch.c	FUNCTION_39	CALL_96
0x26d5	    0x488d8548f9ff	                  lea rax, [rbp - 0x6b8]	       883	show-branch.c	FUNCTION_39	CALL_96
0x26dc	            0x89d6	                            mov esi, edx	       883	show-branch.c	FUNCTION_39	CALL_96
0x26de	          0x4889c7	                            mov rdi, rax	       883	show-branch.c	FUNCTION_39	CALL_96
0x26e1	      0xe800000000	                          call 0x4002726	       883	show-branch.c	FUNCTION_39	CALL_96
0x26e6	    0x8b85ecf8ffff	            mov eax, dword [rbp - 0x714]	       886	show-branch.c	FUNCTION_39	IF_35
0x26ec	            0x85c0	                           test eax, eax	       886	show-branch.c	FUNCTION_39	IF_35
0x26ee	            0x752d	                           jne 0x400275d	       886	show-branch.c	FUNCTION_39	IF_35
0x26f0	    0x8b85e8f8ffff	            mov eax, dword [rbp - 0x718]	       886	show-branch.c	FUNCTION_39	IF_35
0x26f6	            0x85c0	                           test eax, eax	       886	show-branch.c	FUNCTION_39	IF_35
0x26f8	            0x7523	                           jne 0x400275d	       886	show-branch.c	FUNCTION_39	IF_35
0x26fa	    0x488b8548f9ff	            mov rax, qword [rbp - 0x6b8]	       887	show-branch.c	FUNCTION_39	CALL_97
0x2701	    0x8b9504f9ffff	            mov edx, dword [rbp - 0x6fc]	       887	show-branch.c	FUNCTION_39	CALL_97
0x2707	    0x488db530faff	                  lea rsi, [rbp - 0x5d0]	       887	show-branch.c	FUNCTION_39	CALL_97
0x270e	            0x89d1	                            mov ecx, edx	       887	show-branch.c	FUNCTION_39	CALL_97
0x2710	      0xba00000000	                              mov edx, 0	       887	show-branch.c	FUNCTION_39	CALL_97
0x2715	          0x4889c7	                            mov rdi, rax	       887	show-branch.c	FUNCTION_39	CALL_97
0x2718	      0xe81cddffff	                   call sym.name_commits	       887	show-branch.c	FUNCTION_39	CALL_97
0x271d	    0x8b8504f9ffff	            mov eax, dword [rbp - 0x6fc]	       889	show-branch.c	FUNCTION_39
0x2723	          0x83c002	                              add eax, 2	       889	show-branch.c	FUNCTION_39
0x2726	      0xba01000000	                              mov edx, 1	       889	show-branch.c	FUNCTION_39
0x272b	            0x89c1	                            mov ecx, eax	       889	show-branch.c	FUNCTION_39
0x272d	            0xd3e2	                             shl edx, cl	       889	show-branch.c	FUNCTION_39
0x272f	            0x89d0	                            mov eax, edx	       889	show-branch.c	FUNCTION_39
0x2731	          0x83e801	                              sub eax, 1	       889	show-branch.c	FUNCTION_39
0x2734	    0x89852cf9ffff	            mov dword [rbp - 0x6d4], eax	       889	show-branch.c	FUNCTION_39
0x273a	    0x8b852cf9ffff	            mov eax, dword [rbp - 0x6d4]	       890	show-branch.c	FUNCTION_39
0x2740	          0x83e0fc	                     and eax, 0xfffffffc	       890	show-branch.c	FUNCTION_39
0x2743	    0x898530f9ffff	            mov dword [rbp - 0x6d0], eax	       890	show-branch.c	FUNCTION_39
0x2749	      0xe9f8010000	                           jmp 0x4002986	       892	show-branch.c	FUNCTION_39	WHILE_2
0x274e	    0x488d8548f9ff	                  lea rax, [rbp - 0x6b8]	       893	show-branch.c	FUNCTION_39	WHILE_2	CALL_98
0x2755	          0x4889c7	                            mov rdi, rax	       893	show-branch.c	FUNCTION_39	WHILE_2	CALL_98
0x2758	      0xe800000000	                          call 0x400279d	       893	show-branch.c	FUNCTION_39	WHILE_2	CALL_98
0x275d	    0x48898598f9ff	            mov qword [rbp - 0x668], rax	       893	show-branch.c	FUNCTION_39	WHILE_2	CALL_98
0x2764	    0x488b8598f9ff	            mov rax, qword [rbp - 0x668]	       894	show-branch.c	FUNCTION_39	WHILE_2
0x276b	            0x8b00	                    mov eax, dword [rax]	       894	show-branch.c	FUNCTION_39	WHILE_2
0x276d	          0xc1e804	                              shr eax, 4	       894	show-branch.c	FUNCTION_39	WHILE_2
0x2770	      0x25ffffff07	                      and eax, 0x7ffffff	       894	show-branch.c	FUNCTION_39	WHILE_2
0x2775	    0x898534f9ffff	            mov dword [rbp - 0x6cc], eax	       894	show-branch.c	FUNCTION_39	WHILE_2
0x277b	    0x8b8534f9ffff	            mov eax, dword [rbp - 0x6cc]	       895	show-branch.c	FUNCTION_39	WHILE_2
0x2781	    0x238530f9ffff	            and eax, dword [rbp - 0x6d0]	       895	show-branch.c	FUNCTION_39	WHILE_2
0x2787	    0x3b8530f9ffff	            cmp eax, dword [rbp - 0x6d0]	       895	show-branch.c	FUNCTION_39	WHILE_2
0x278d	           0xf94c0	                                 sete al	       895	show-branch.c	FUNCTION_39	WHILE_2
0x2790	           0xfb6c0	                           movzx eax, al	       895	show-branch.c	FUNCTION_39	WHILE_2
0x2793	    0x898538f9ffff	            mov dword [rbp - 0x6c8], eax	       895	show-branch.c	FUNCTION_39	WHILE_2
0x2799	    0x8b8538f9ffff	            mov eax, dword [rbp - 0x6c8]	       897	show-branch.c	FUNCTION_39	WHILE_2
0x279f	     0x9850cf9ffff	             or dword [rbp - 0x6f4], eax	       897	show-branch.c	FUNCTION_39	WHILE_2
0x27a5	    0x83bd04f9ffff	              cmp dword [rbp - 0x6fc], 1	       899	show-branch.c	FUNCTION_39	WHILE_2	IF_36
0x27ac	     0xf8e5b010000	                           jle 0x400294d	       899	show-branch.c	FUNCTION_39	WHILE_2	IF_36
0x27b2	    0x488b8598f9ff	            mov rax, qword [rbp - 0x668]	       900	show-branch.c	FUNCTION_39	WHILE_2	IF_36
0x27b9	        0x488b4030	            mov rax, qword [rax + 0x30] 	       900	show-branch.c	FUNCTION_39	WHILE_2	IF_36
0x27bd	          0x4885c0	                           test rax, rax	       900	show-branch.c	FUNCTION_39	WHILE_2	IF_36
0x27c0	            0x741b	                            je 0x400281d	       900	show-branch.c	FUNCTION_39	WHILE_2	IF_36
0x27c2	    0x488b8598f9ff	            mov rax, qword [rbp - 0x668]	       901	show-branch.c	FUNCTION_39	WHILE_2	IF_36
0x27c9	        0x488b4030	            mov rax, qword [rax + 0x30] 	       901	show-branch.c	FUNCTION_39	WHILE_2	IF_36
0x27cd	        0x488b4008	                mov rax, qword [rax + 8]	       901	show-branch.c	FUNCTION_39	WHILE_2	IF_36
0x27d1	          0x4885c0	                           test rax, rax	       900	show-branch.c	FUNCTION_39	WHILE_2	IF_36
0x27d4	            0x7407	                            je 0x400281d	       900	show-branch.c	FUNCTION_39	WHILE_2	IF_36
0x27d6	      0xb801000000	                              mov eax, 1	       900	show-branch.c	FUNCTION_39	WHILE_2	IF_36
0x27db	            0xeb05	                           jmp 0x4002822	       900	show-branch.c	FUNCTION_39	WHILE_2	IF_36
0x27dd	      0xb800000000	                              mov eax, 0	       900	show-branch.c	FUNCTION_39	WHILE_2	IF_36
0x27e2	    0x89853cf9ffff	            mov dword [rbp - 0x6c4], eax	       900	show-branch.c	FUNCTION_39	WHILE_2	IF_36
0x27e8	    0x8b85f4f8ffff	            mov eax, dword [rbp - 0x70c]	       902	show-branch.c	FUNCTION_39	WHILE_2	IF_36	IF_37
0x27ee	            0x85c0	                           test eax, eax	       902	show-branch.c	FUNCTION_39	WHILE_2	IF_36	IF_37
0x27f0	            0x741b	                            je 0x400284d	       902	show-branch.c	FUNCTION_39	WHILE_2	IF_36	IF_37
0x27f2	    0x83bd38f9ffff	              cmp dword [rbp - 0x6c8], 0	       902	show-branch.c	FUNCTION_39	WHILE_2	IF_36	IF_37
0x27f9	            0x7512	                           jne 0x400284d	       902	show-branch.c	FUNCTION_39	WHILE_2	IF_36	IF_37
0x27fb	    0x8b8534f9ffff	            mov eax, dword [rbp - 0x6cc]	       904	show-branch.c	FUNCTION_39	WHILE_2	IF_36	IF_37
0x2801	          0x83e004	                              and eax, 4	       904	show-branch.c	FUNCTION_39	WHILE_2	IF_36	IF_37
0x2804	            0x85c0	                           test eax, eax	       903	show-branch.c	FUNCTION_39	WHILE_2	IF_36	IF_37
0x2806	            0x7405	                            je 0x400284d	       903	show-branch.c	FUNCTION_39	WHILE_2	IF_36	IF_37
0x2808	      0xe939010000	                           jmp 0x4002986	       905	show-branch.c	FUNCTION_39	WHILE_2	IF_36	IF_37
0x280d	    0x8b85f8f8ffff	            mov eax, dword [rbp - 0x708]	       906	show-branch.c	FUNCTION_39	WHILE_2	IF_36	IF_38
0x2813	            0x85c0	                           test eax, eax	       906	show-branch.c	FUNCTION_39	WHILE_2	IF_36	IF_38
0x2815	            0x7431	                            je 0x4002888	       906	show-branch.c	FUNCTION_39	WHILE_2	IF_36	IF_38
0x2817	    0x83bd3cf9ffff	              cmp dword [rbp - 0x6c4], 0	       906	show-branch.c	FUNCTION_39	WHILE_2	IF_36	IF_38
0x281e	            0x7428	                            je 0x4002888	       906	show-branch.c	FUNCTION_39	WHILE_2	IF_36	IF_38
0x2820	    0x8b9504f9ffff	            mov edx, dword [rbp - 0x6fc]	       907	show-branch.c	FUNCTION_39	WHILE_2	IF_36	IF_38	CALL_99
0x2826	    0x488d8d30faff	                  lea rcx, [rbp - 0x5d0]	       907	show-branch.c	FUNCTION_39	WHILE_2	IF_36	IF_38	CALL_99
0x282d	    0x488b8598f9ff	            mov rax, qword [rbp - 0x668]	       907	show-branch.c	FUNCTION_39	WHILE_2	IF_36	IF_38	CALL_99
0x2834	          0x4889ce	                            mov rsi, rcx	       907	show-branch.c	FUNCTION_39	WHILE_2	IF_36	IF_38	CALL_99
0x2837	          0x4889c7	                            mov rdi, rax	       907	show-branch.c	FUNCTION_39	WHILE_2	IF_36	IF_38	CALL_99
0x283a	      0xe847edffff	                  call sym.omit_in_dense	       907	show-branch.c	FUNCTION_39	WHILE_2	IF_36	IF_38	CALL_99
0x283f	            0x85c0	                           test eax, eax	       906	show-branch.c	FUNCTION_39	WHILE_2	IF_36	IF_38
0x2841	            0x7405	                            je 0x4002888	       906	show-branch.c	FUNCTION_39	WHILE_2	IF_36	IF_38
0x2843	      0xe9fe000000	                           jmp 0x4002986	       908	show-branch.c	FUNCTION_39	WHILE_2	IF_36	IF_38
0x2848	    0xc78508f9ffff	              mov dword [rbp - 0x6f8], 0	       909	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8
0x2852	      0xe99a000000	                           jmp 0x4002931	       909	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8
0x2857	    0x8b9534f9ffff	            mov edx, dword [rbp - 0x6cc]	       911	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8	IF_39
0x285d	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       911	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8	IF_39
0x2863	          0x83c002	                              add eax, 2	       911	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8	IF_39
0x2866	            0x89c1	                            mov ecx, eax	       911	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8	IF_39
0x2868	            0xd3ea	                             shr edx, cl	       911	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8	IF_39
0x286a	            0x89d0	                            mov eax, edx	       911	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8	IF_39
0x286c	          0x83e001	                              and eax, 1	       911	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8	IF_39
0x286f	            0x85c0	                           test eax, eax	       911	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8	IF_39
0x2871	            0x750c	                           jne 0x40028bf	       911	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8	IF_39
0x2873	    0xc7851cf9ffff	          mov dword [rbp - 0x6e4], 0x20 	       912	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8	IF_39
0x287d	            0xeb39	                           jmp 0x40028f8	       912	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8	IF_39
0x287f	    0x83bd3cf9ffff	              cmp dword [rbp - 0x6c4], 0	       913	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8	ELSE_5	IF_40
0x2886	            0x740c	                            je 0x40028d4	       913	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8	ELSE_5	IF_40
0x2888	    0xc7851cf9ffff	          mov dword [rbp - 0x6e4], 0x2d 	       914	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8	ELSE_5	IF_40
0x2892	            0xeb24	                           jmp 0x40028f8	       914	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8	ELSE_5	IF_40
0x2894	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       915	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8	ELSE_6	IF_41
0x289a	    0x3b8510f9ffff	            cmp eax, dword [rbp - 0x6f0]	       915	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8	ELSE_6	IF_41
0x28a0	            0x750c	                           jne 0x40028ee	       915	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8	ELSE_6	IF_41
0x28a2	    0xc7851cf9ffff	          mov dword [rbp - 0x6e4], 0x2a 	       916	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8	ELSE_6	IF_41
0x28ac	            0xeb0a	                           jmp 0x40028f8	       916	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8	ELSE_6	IF_41
0x28ae	    0xc7851cf9ffff	          mov dword [rbp - 0x6e4], 0x2b 	       918	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8	ELSE_7
0x28b8	      0xe8c0d9ffff	           call sym.get_color_reset_code	       919	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8	CALL_100
0x28bd	          0x4889c3	                            mov rbx, rax	       919	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8	CALL_100
0x28c0	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       919	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8	CALL_100
0x28c6	            0x89c7	                            mov edi, eax	       919	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8	CALL_100
0x28c8	      0xe86ed9ffff	                 call sym.get_color_code	       919	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8	CALL_100
0x28cd	          0x4889c6	                            mov rsi, rax	       919	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8	CALL_100
0x28d0	    0x8b851cf9ffff	            mov eax, dword [rbp - 0x6e4]	       919	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8	CALL_100
0x28d6	          0x4889d9	                            mov rcx, rbx	       919	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8	CALL_100
0x28d9	            0x89c2	                            mov edx, eax	       919	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8	CALL_100
0x28db	      0xbf00000000	                              mov edi, 0	       919	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8	CALL_100
0x28e0	      0xb800000000	                              mov eax, 0	       919	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8	CALL_100
0x28e5	      0xe800000000	                          call 0x400292a	       919	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8	CALL_100
0x28ea	    0x838508f9ffff	              add dword [rbp - 0x6f8], 1	       909	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8
0x28f1	    0x8b8508f9ffff	            mov eax, dword [rbp - 0x6f8]	       909	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8
0x28f7	    0x3b8504f9ffff	            cmp eax, dword [rbp - 0x6fc]	       909	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8
0x28fd	     0xf8c54ffffff	                            jl 0x4002897	       909	show-branch.c	FUNCTION_39	WHILE_2	IF_36	FOR_8
0x2903	      0xbf20000000	                           mov edi, 0x20	       923	show-branch.c	FUNCTION_39	WHILE_2	IF_36	CALL_103
0x2908	      0xe800000000	                          call 0x400294d	       923	show-branch.c	FUNCTION_39	WHILE_2	IF_36	CALL_103
0x290d	    0x8b95e8f8ffff	            mov edx, dword [rbp - 0x718]	       925	show-branch.c	FUNCTION_39	WHILE_2	CALL_104
0x2913	    0x488b8598f9ff	            mov rax, qword [rbp - 0x668]	       925	show-branch.c	FUNCTION_39	WHILE_2	CALL_104
0x291a	            0x89d6	                            mov esi, edx	       925	show-branch.c	FUNCTION_39	WHILE_2	CALL_104
0x291c	          0x4889c7	                            mov rdi, rax	       925	show-branch.c	FUNCTION_39	WHILE_2	CALL_104
0x291f	      0xe879e0ffff	                call sym.show_one_commit	       925	show-branch.c	FUNCTION_39	WHILE_2	CALL_104
0x2924	    0x83bd0cf9ffff	              cmp dword [rbp - 0x6f4], 0	       927	show-branch.c	FUNCTION_39	WHILE_2	IF_42
0x292b	            0x7419	                            je 0x4002986	       927	show-branch.c	FUNCTION_39	WHILE_2	IF_42
0x292d	    0x8b85d0f8ffff	            mov eax, dword [rbp - 0x730]	       927	show-branch.c	FUNCTION_39	WHILE_2	IF_42
0x2933	          0x83e801	                              sub eax, 1	       927	show-branch.c	FUNCTION_39	WHILE_2	IF_42
0x2936	    0x8985d0f8ffff	            mov dword [rbp - 0x730], eax	       927	show-branch.c	FUNCTION_39	WHILE_2	IF_42
0x293c	    0x8b85d0f8ffff	            mov eax, dword [rbp - 0x730]	       927	show-branch.c	FUNCTION_39	WHILE_2	IF_42
0x2942	            0x85c0	                           test eax, eax	       927	show-branch.c	FUNCTION_39	WHILE_2	IF_42
0x2944	            0x7812	                            js 0x4002998	       927	show-branch.c	FUNCTION_39	WHILE_2	IF_42
0x2946	    0x488b8548f9ff	            mov rax, qword [rbp - 0x6b8]	       892	show-branch.c	FUNCTION_39	WHILE_2
0x294d	          0x4885c0	                           test rax, rax	       892	show-branch.c	FUNCTION_39	WHILE_2
0x2950	     0xf85f8fdffff	                           jne 0x400278e	       892	show-branch.c	FUNCTION_39	WHILE_2
0x2956	            0xeb01	                           jmp 0x4002999	       892	show-branch.c	FUNCTION_39	WHILE_2
0x2958	              0x90	                                     nop	       928	show-branch.c	FUNCTION_39	WHILE_2	IF_42
0x2959	      0xb800000000	                              mov eax, 0	       930	show-branch.c	FUNCTION_39
0x295e	        0x488b5dd8	             mov rbx, qword [rbp - 0x28]	       931	show-branch.c	FUNCTION_39
0x2962	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       931	show-branch.c	FUNCTION_39
0x296b	            0x7405	                            je 0x40029b2	       931	show-branch.c	FUNCTION_39
0x296d	      0xe800000000	                          call 0x40029b2	       931	show-branch.c	FUNCTION_39
0x2972	        0x488d65e8	                   lea rsp, [rbp - 0x18]	       931	show-branch.c	FUNCTION_39
0x2976	              0x5b	                                 pop rbx	       931	show-branch.c	FUNCTION_39
0x2977	            0x415c	                                 pop r12	       931	show-branch.c	FUNCTION_39
0x2979	            0x415d	                                 pop r13	       931	show-branch.c	FUNCTION_39
0x297b	              0x5d	                                 pop rbp	       931	show-branch.c	FUNCTION_39
0x297c	              0xc3	                                     ret	       931	show-branch.c	FUNCTION_39
snarf_refs	functions,0:IF,2:ELSE,0:FOR,0:DO,0:CALL,4:SWITCH,0:WHILE,0	32
0x10c6	              0x55	                                push rbp	       451	show-branch.c	FUNCTION_31
0x10c7	          0x4889e5	                            mov rbp, rsp	       451	show-branch.c	FUNCTION_31
0x10ca	        0x4883ec20	                           sub rsp, 0x20	       451	show-branch.c	FUNCTION_31
0x10ce	          0x897dec	             mov dword [rbp - 0x14], edi	       451	show-branch.c	FUNCTION_31
0x10d1	          0x8975e8	             mov dword [rbp - 0x18], esi	       451	show-branch.c	FUNCTION_31
0x10d4	        0x837dec00	               cmp dword [rbp - 0x14], 0	       452	show-branch.c	FUNCTION_31	IF_1
0x10d8	            0x742a	                            je 0x4001144	       452	show-branch.c	FUNCTION_31	IF_1
0x10da	    0x8b0500000000	            mov eax, dword [0x04001120] 	       453	show-branch.c	FUNCTION_31	IF_1
0x10e0	          0x8945f8	                mov dword [rbp - 8], eax	       453	show-branch.c	FUNCTION_31	IF_1
0x10e3	      0xbe00000000	                              mov esi, 0	       455	show-branch.c	FUNCTION_31	IF_1	CALL_1
0x10e8	      0xbf00000000	                              mov edi, 0	       455	show-branch.c	FUNCTION_31	IF_1	CALL_1
0x10ed	      0xe800000000	                          call 0x4001132	       455	show-branch.c	FUNCTION_31	IF_1	CALL_1
0x10f2	    0x8b1500000000	            mov edx, dword [0x04001138] 	       456	show-branch.c	FUNCTION_31	IF_1	CALL_2
0x10f8	          0x8b45f8	                mov eax, dword [rbp - 8]	       456	show-branch.c	FUNCTION_31	IF_1	CALL_2
0x10fb	            0x89d6	                            mov esi, edx	       456	show-branch.c	FUNCTION_31	IF_1	CALL_2
0x10fd	            0x89c7	                            mov edi, eax	       456	show-branch.c	FUNCTION_31	IF_1	CALL_2
0x10ff	      0xe89cfbffff	                 call sym.sort_ref_range	       456	show-branch.c	FUNCTION_31	IF_1	CALL_2
0x1104	        0x837de800	               cmp dword [rbp - 0x18], 0	       458	show-branch.c	FUNCTION_31	IF_2
0x1108	            0x742a	                            je 0x4001174	       458	show-branch.c	FUNCTION_31	IF_2
0x110a	    0x8b0500000000	            mov eax, dword [0x04001150] 	       459	show-branch.c	FUNCTION_31	IF_2
0x1110	          0x8945fc	                mov dword [rbp - 4], eax	       459	show-branch.c	FUNCTION_31	IF_2
0x1113	      0xbe00000000	                              mov esi, 0	       461	show-branch.c	FUNCTION_31	IF_2	CALL_3
0x1118	      0xbf00000000	                              mov edi, 0	       461	show-branch.c	FUNCTION_31	IF_2	CALL_3
0x111d	      0xe800000000	                          call 0x4001162	       461	show-branch.c	FUNCTION_31	IF_2	CALL_3
0x1122	    0x8b1500000000	            mov edx, dword [0x04001168] 	       462	show-branch.c	FUNCTION_31	IF_2	CALL_4
0x1128	          0x8b45fc	                mov eax, dword [rbp - 4]	       462	show-branch.c	FUNCTION_31	IF_2	CALL_4
0x112b	            0x89d6	                            mov esi, edx	       462	show-branch.c	FUNCTION_31	IF_2	CALL_4
0x112d	            0x89c7	                            mov edi, eax	       462	show-branch.c	FUNCTION_31	IF_2	CALL_4
0x112f	      0xe86cfbffff	                 call sym.sort_ref_range	       462	show-branch.c	FUNCTION_31	IF_2	CALL_4
0x1134	              0x90	                                     nop	       464	show-branch.c	FUNCTION_31
0x1135	              0xc9	                                   leave	       464	show-branch.c	FUNCTION_31
0x1136	              0xc3	                                     ret	       464	show-branch.c	FUNCTION_31
parse_commit	functions,0:IF,0:ELSE,0:FOR,0:DO,0:CALL,1:SWITCH,0:WHILE,0	10
0x21c	              0x55	                                push rbp	        74	commit.h	FUNCTION_71
0x21d	          0x4889e5	                            mov rbp, rsp	        74	commit.h	FUNCTION_71
0x220	        0x4883ec10	                           sub rsp, 0x10	        74	commit.h	FUNCTION_71
0x224	        0x48897df8	                mov qword [rbp - 8], rdi	        74	commit.h	FUNCTION_71
0x228	        0x488b45f8	                mov rax, qword [rbp - 8]	        75	commit.h	FUNCTION_71	CALL_1
0x22c	      0xbe00000000	                              mov esi, 0	        75	commit.h	FUNCTION_71	CALL_1
0x231	          0x4889c7	                            mov rdi, rax	        75	commit.h	FUNCTION_71	CALL_1
0x234	      0xe800000000	                          call 0x4000279	        75	commit.h	FUNCTION_71	CALL_1
0x239	              0xc9	                                   leave	        76	commit.h	FUNCTION_71
0x23a	              0xc3	                                     ret	        76	commit.h	FUNCTION_71
append_tag_ref	functions,0:IF,1:ELSE,0:FOR,0:DO,0:CALL,2:SWITCH,0:WHILE,0	24
0xf67	              0x55	                                push rbp	       418	show-branch.c	FUNCTION_29
0xf68	          0x4889e5	                            mov rbp, rsp	       418	show-branch.c	FUNCTION_29
0xf6b	        0x4883ec20	                           sub rsp, 0x20	       418	show-branch.c	FUNCTION_29
0xf6f	        0x48897df8	                mov qword [rbp - 8], rdi	       418	show-branch.c	FUNCTION_29
0xf73	        0x488975f0	             mov qword [rbp - 0x10], rsi	       418	show-branch.c	FUNCTION_29
0xf77	          0x8955ec	             mov dword [rbp - 0x14], edx	       418	show-branch.c	FUNCTION_29
0xf7a	        0x48894de0	             mov qword [rbp - 0x20], rcx	       418	show-branch.c	FUNCTION_29
0xf7e	        0x488b45f8	                mov rax, qword [rbp - 8]	       419	show-branch.c	FUNCTION_29	IF_1	CALL_1
0xf82	      0xbe00000000	                              mov esi, 0	       419	show-branch.c	FUNCTION_29	IF_1	CALL_1
0xf87	          0x4889c7	                            mov rdi, rax	       419	show-branch.c	FUNCTION_29	IF_1	CALL_1
0xf8a	      0xe800000000	                          call 0x4000fcf	       419	show-branch.c	FUNCTION_29	IF_1	CALL_1
0xf8f	            0x85c0	                           test eax, eax	       419	show-branch.c	FUNCTION_29	IF_1	CALL_1
0xf91	            0x7507	                           jne 0x4000fda	       419	show-branch.c	FUNCTION_29	IF_1	CALL_1
0xf93	      0xb800000000	                              mov eax, 0	       420	show-branch.c	FUNCTION_29	IF_1
0xf98	            0xeb1c	                           jmp 0x4000ff6	       420	show-branch.c	FUNCTION_29	IF_1
0xf9a	        0x488b45f8	                mov rax, qword [rbp - 8]	       421	show-branch.c	FUNCTION_29	CALL_2
0xf9e	        0x488d4805	                      lea rcx, [rax + 5]	       421	show-branch.c	FUNCTION_29	CALL_2
0xfa2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       421	show-branch.c	FUNCTION_29	CALL_2
0xfa6	      0xba00000000	                              mov edx, 0	       421	show-branch.c	FUNCTION_29	CALL_2
0xfab	          0x4889c6	                            mov rsi, rax	       421	show-branch.c	FUNCTION_29	CALL_2
0xfae	          0x4889cf	                            mov rdi, rcx	       421	show-branch.c	FUNCTION_29	CALL_2
0xfb1	      0xe826fdffff	                     call sym.append_ref	       421	show-branch.c	FUNCTION_29	CALL_2
0xfb6	              0xc9	                                   leave	       422	show-branch.c	FUNCTION_29
0xfb7	              0xc3	                                     ret	       422	show-branch.c	FUNCTION_29
strbuf_avail	functions,0:IF,0:ELSE,0:FOR,0:DO,0:CALL,0:SWITCH,0:WHILE,0	18
0x9b	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_2
0x9c	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_2
0x9f	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_2
0xa3	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0xa7	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_2
0xaa	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_2
0xad	            0x741b	                            je 0x400010a	       141	strbuf.h	FUNCTION_2
0xaf	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0xb3	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_2
0xb6	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0xba	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_2
0xbe	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_2
0xc1	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_2
0xc4	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_2
0xc8	            0xeb05	                           jmp 0x400010f	       141	strbuf.h	FUNCTION_2
0xca	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_2
0xcf	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_2
0xd0	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_2
append_ref	functions,0:IF,4:ELSE,0:FOR,1:DO,0:CALL,5:SWITCH,0:WHILE,0	68
0xcdc	              0x55	                                push rbp	       362	show-branch.c	FUNCTION_26
0xcdd	          0x4889e5	                            mov rbp, rsp	       362	show-branch.c	FUNCTION_26
0xce0	              0x53	                                push rbx	       362	show-branch.c	FUNCTION_26
0xce1	        0x4883ec38	                           sub rsp, 0x38	       362	show-branch.c	FUNCTION_26
0xce5	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       362	show-branch.c	FUNCTION_26
0xce9	        0x488975d0	             mov qword [rbp - 0x30], rsi	       362	show-branch.c	FUNCTION_26
0xced	          0x8955cc	             mov dword [rbp - 0x34], edx	       362	show-branch.c	FUNCTION_26
0xcf0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       363	show-branch.c	FUNCTION_26	CALL_1
0xcf4	      0xbe01000000	                              mov esi, 1	       363	show-branch.c	FUNCTION_26	CALL_1
0xcf9	          0x4889c7	                            mov rdi, rax	       363	show-branch.c	FUNCTION_26	CALL_1
0xcfc	      0xe800000000	                          call 0x4000d41	       363	show-branch.c	FUNCTION_26	CALL_1
0xd01	        0x488945e8	             mov qword [rbp - 0x18], rax	       363	show-branch.c	FUNCTION_26	CALL_1
0xd05	      0x48837de800	               cmp qword [rbp - 0x18], 0	       366	show-branch.c	FUNCTION_26	IF_1
0xd0a	            0x750a	                           jne 0x4000d56	       366	show-branch.c	FUNCTION_26	IF_1
0xd0c	      0xb800000000	                              mov eax, 0	       367	show-branch.c	FUNCTION_26	IF_1
0xd11	      0xe9cc000000	                           jmp 0x4000e22	       367	show-branch.c	FUNCTION_26	IF_1
0xd16	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       369	show-branch.c	FUNCTION_26	IF_2
0xd1a	            0x7542	                           jne 0x4000d9e	       369	show-branch.c	FUNCTION_26	IF_2
0xd1c	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       371	show-branch.c	FUNCTION_26	IF_2	FOR_1
0xd23	            0xeb2e	                           jmp 0x4000d93	       371	show-branch.c	FUNCTION_26	IF_2	FOR_1
0xd25	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       372	show-branch.c	FUNCTION_26	IF_2	FOR_1	IF_3	CALL_2
0xd28	            0x4898	                                    cdqe	       372	show-branch.c	FUNCTION_26	IF_2	FOR_1	IF_3	CALL_2
0xd2a	    0x488b14c50000	                  mov rdx, qword [rax*8]	       372	show-branch.c	FUNCTION_26	IF_2	FOR_1	IF_3	CALL_2
0xd32	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       372	show-branch.c	FUNCTION_26	IF_2	FOR_1	IF_3	CALL_2
0xd36	          0x4889d6	                            mov rsi, rdx	       372	show-branch.c	FUNCTION_26	IF_2	FOR_1	IF_3	CALL_2
0xd39	          0x4889c7	                            mov rdi, rax	       372	show-branch.c	FUNCTION_26	IF_2	FOR_1	IF_3	CALL_2
0xd3c	      0xe800000000	                          call 0x4000d81	       372	show-branch.c	FUNCTION_26	IF_2	FOR_1	IF_3	CALL_2
0xd41	            0x85c0	                           test eax, eax	       372	show-branch.c	FUNCTION_26	IF_2	FOR_1	IF_3	CALL_2
0xd43	            0x750a	                           jne 0x4000d8f	       372	show-branch.c	FUNCTION_26	IF_2	FOR_1	IF_3	CALL_2
0xd45	      0xb800000000	                              mov eax, 0	       373	show-branch.c	FUNCTION_26	IF_2	FOR_1	IF_3
0xd4a	      0xe993000000	                           jmp 0x4000e22	       373	show-branch.c	FUNCTION_26	IF_2	FOR_1	IF_3
0xd4f	        0x8345e401	               add dword [rbp - 0x1c], 1	       371	show-branch.c	FUNCTION_26	IF_2	FOR_1
0xd53	    0x8b0500000000	            mov eax, dword [0x04000d99] 	       371	show-branch.c	FUNCTION_26	IF_2	FOR_1
0xd59	          0x3945e4	            cmp dword [rbp - 0x1c], eax 	       371	show-branch.c	FUNCTION_26	IF_2	FOR_1
0xd5c	            0x7cc7	                            jl 0x4000d65	       371	show-branch.c	FUNCTION_26	IF_2	FOR_1
0xd5e	    0x8b0500000000	            mov eax, dword [0x04000da4] 	       375	show-branch.c	FUNCTION_26	IF_4
0xd64	          0x83f818	                           cmp eax, 0x18	       375	show-branch.c	FUNCTION_26	IF_4
0xd67	            0x7e37	                           jle 0x4000de0	       375	show-branch.c	FUNCTION_26	IF_4
0xd69	      0xba19000000	                           mov edx, 0x19	       376	show-branch.c	FUNCTION_26	IF_4	CALL_4
0xd6e	      0xbe00000000	                              mov esi, 0	       376	show-branch.c	FUNCTION_26	IF_4	CALL_4
0xd73	      0xbf00000000	                              mov edi, 0	       376	show-branch.c	FUNCTION_26	IF_4	CALL_4
0xd78	      0xe823f4ffff	                              call sym.Q	       376	show-branch.c	FUNCTION_26	IF_4	CALL_4
0xd7d	          0x4889c1	                            mov rcx, rax	       376	show-branch.c	FUNCTION_26	IF_4	CALL_4
0xd80	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       376	show-branch.c	FUNCTION_26	IF_4	CALL_4
0xd84	      0xba19000000	                           mov edx, 0x19	       376	show-branch.c	FUNCTION_26	IF_4	CALL_4
0xd89	          0x4889c6	                            mov rsi, rax	       376	show-branch.c	FUNCTION_26	IF_4	CALL_4
0xd8c	          0x4889cf	                            mov rdi, rcx	       376	show-branch.c	FUNCTION_26	IF_4	CALL_4
0xd8f	      0xb800000000	                              mov eax, 0	       376	show-branch.c	FUNCTION_26	IF_4	CALL_4
0xd94	      0xe800000000	                          call 0x4000dd9	       376	show-branch.c	FUNCTION_26	IF_4	CALL_4
0xd99	      0xb800000000	                              mov eax, 0	       379	show-branch.c	FUNCTION_26	IF_4
0xd9e	            0xeb42	                           jmp 0x4000e22	       379	show-branch.c	FUNCTION_26	IF_4
0xda0	    0x8b1d00000000	            mov ebx, dword [0x04000de6] 	       381	show-branch.c	FUNCTION_26	CALL_5
0xda6	          0x8d4301	                      lea eax, [rbx + 1]	       381	show-branch.c	FUNCTION_26	CALL_5
0xda9	    0x890500000000	            mov dword [0x04000def], eax 	       381	show-branch.c	FUNCTION_26	CALL_5
0xdaf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       381	show-branch.c	FUNCTION_26	CALL_5
0xdb3	          0x4889c7	                            mov rdi, rax	       381	show-branch.c	FUNCTION_26	CALL_5
0xdb6	      0xe800000000	                          call 0x4000dfb	       381	show-branch.c	FUNCTION_26	CALL_5
0xdbb	          0x4889c2	                            mov rdx, rax	       381	show-branch.c	FUNCTION_26	CALL_5
0xdbe	          0x4863c3	                         movsxd rax, ebx	       381	show-branch.c	FUNCTION_26	CALL_5
0xdc1	    0x488914c50000	                  mov qword [rax*8], rdx	       381	show-branch.c	FUNCTION_26	CALL_5
0xdc9	    0x8b0500000000	            mov eax, dword [0x04000e0f] 	       382	show-branch.c	FUNCTION_26
0xdcf	            0x4898	                                    cdqe	       382	show-branch.c	FUNCTION_26
0xdd1	    0x48c704c50000	                    mov qword [rax*8], 0	       382	show-branch.c	FUNCTION_26
0xddd	      0xb800000000	                              mov eax, 0	       383	show-branch.c	FUNCTION_26
0xde2	        0x4883c438	                           add rsp, 0x38	       384	show-branch.c	FUNCTION_26
0xde6	              0x5b	                                 pop rbx	       384	show-branch.c	FUNCTION_26
0xde7	              0x5d	                                 pop rbp	       384	show-branch.c	FUNCTION_26
0xde8	              0xc3	                                     ret	       384	show-branch.c	FUNCTION_26
