st_mult	functions,0:DO,0:ELSE,0:FOR,0:IF,1:SWITCH,0:WHILE,0:CALL,2	22
0x56	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_15
0x57	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_15
0x5a	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_15
0x5e	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_15
0x62	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_15
0x66	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x6b	            0x7430	                            je 0x40000dd	       795	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x6d	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x74	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x79	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x7d	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x81	            0x731a	                           jae 0x40000dd	       795	git-compat-util.h	FUNCTION_15	IF_1	CALL_1
0x83	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_15	IF_1	CALL_2
0x87	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_15	IF_1	CALL_2
0x8b	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_15	IF_1	CALL_2
0x8e	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_15	IF_1	CALL_2
0x93	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_15	IF_1	CALL_2
0x98	      0xe800000000	                          call 0x40000dd	       796	git-compat-util.h	FUNCTION_15	IF_1	CALL_2
0x9d	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_15
0xa1	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_15
0xa6	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_15
0xa7	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_15
split_cmdline	functions,0:DO,0:ELSE,3:FOR,1:IF,6:SWITCH,0:WHILE,1:CALL,7	259
0x194	              0x55	                                push rbp	        37	alias.c	FUNCTION_30
0x195	          0x4889e5	                            mov rbp, rsp	        37	alias.c	FUNCTION_30
0x198	        0x4883ec30	                           sub rsp, 0x30	        37	alias.c	FUNCTION_30
0x19c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        37	alias.c	FUNCTION_30
0x1a0	        0x488975d0	             mov qword [rbp - 0x30], rsi	        37	alias.c	FUNCTION_30
0x1a4	    0xc745f8000000	                  mov dword [rbp - 8], 0	        38	alias.c	FUNCTION_30
0x1ab	    0xc745fc100000	               mov dword [rbp - 4], 0x10	        38	alias.c	FUNCTION_30
0x1b2	        0xc645ee00	                mov byte [rbp - 0x12], 0	        39	alias.c	FUNCTION_30
0x1b6	          0x8b45fc	                mov eax, dword [rbp - 4]	        41	alias.c	FUNCTION_30	CALL_1
0x1b9	            0x4898	                                    cdqe	        41	alias.c	FUNCTION_30	CALL_1
0x1bb	          0x4889c6	                            mov rsi, rax	        41	alias.c	FUNCTION_30	CALL_1
0x1be	      0xbf08000000	                              mov edi, 8	        41	alias.c	FUNCTION_30	CALL_1
0x1c3	      0xe88efeffff	                        call sym.st_mult	        41	alias.c	FUNCTION_30	CALL_1
0x1c8	          0x4889c7	                            mov rdi, rax	        41	alias.c	FUNCTION_30	CALL_1
0x1cb	      0xe800000000	                          call 0x4000210	        41	alias.c	FUNCTION_30	CALL_1
0x1d0	          0x4889c2	                            mov rdx, rax	        41	alias.c	FUNCTION_30	CALL_1
0x1d3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        41	alias.c	FUNCTION_30	CALL_1
0x1d7	          0x488910	                    mov qword [rax], rdx	        41	alias.c	FUNCTION_30	CALL_1
0x1da	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        44	alias.c	FUNCTION_30
0x1de	          0x488b08	                    mov rcx, qword [rax]	        44	alias.c	FUNCTION_30
0x1e1	          0x8b45f8	                mov eax, dword [rbp - 8]	        44	alias.c	FUNCTION_30
0x1e4	          0x8d5001	                      lea edx, [rax + 1]	        44	alias.c	FUNCTION_30
0x1e7	          0x8955f8	                mov dword [rbp - 8], edx	        44	alias.c	FUNCTION_30
0x1ea	            0x4898	                                    cdqe	        44	alias.c	FUNCTION_30
0x1ec	        0x48c1e003	                              shl rax, 3	        44	alias.c	FUNCTION_30
0x1f0	        0x488d1401	                    lea rdx, [rcx + rax]	        44	alias.c	FUNCTION_30
0x1f4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        44	alias.c	FUNCTION_30
0x1f8	          0x488902	                    mov qword [rdx], rax	        44	alias.c	FUNCTION_30
0x1fb	    0xc745f4000000	                mov dword [rbp - 0xc], 0	        45	alias.c	FUNCTION_30	FOR_1
0x202	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        45	alias.c	FUNCTION_30	FOR_1
0x205	          0x8945f0	             mov dword [rbp - 0x10], eax	        45	alias.c	FUNCTION_30	FOR_1
0x208	      0xe9d9010000	                           jmp 0x4000426	        45	alias.c	FUNCTION_30	FOR_1
0x20d	          0x8b45f0	             mov eax, dword [rbp - 0x10]	        46	alias.c	FUNCTION_30	FOR_1
0x210	          0x4863d0	                         movsxd rdx, eax	        46	alias.c	FUNCTION_30	FOR_1
0x213	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        46	alias.c	FUNCTION_30	FOR_1
0x217	          0x4801d0	                            add rax, rdx	        46	alias.c	FUNCTION_30	FOR_1
0x21a	           0xfb600	                   movzx eax, byte [rax]	        46	alias.c	FUNCTION_30	FOR_1
0x21d	          0x8845ef	               mov byte [rbp - 0x11], al	        46	alias.c	FUNCTION_30	FOR_1
0x220	        0x807dee00	                cmp byte [rbp - 0x12], 0	        47	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_2
0x224	     0xf8520010000	                           jne 0x400038a	        47	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_2
0x22a	         0xfb645ef	            movzx eax, byte [rbp - 0x11]	        47	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_2
0x22e	           0xfb6c0	                           movzx eax, al	        47	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_2
0x231	            0x4898	                                    cdqe	        47	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_2
0x233	     0xfb680000000	                   movzx eax, byte [rax]	        47	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_2
0x23a	           0xfb6c0	                           movzx eax, al	        47	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_2
0x23d	          0x83e001	                              and eax, 1	        47	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_2
0x240	            0x85c0	                           test eax, eax	        47	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_2
0x242	     0xf8402010000	                            je 0x400038a	        47	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_2
0x248	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        48	alias.c	FUNCTION_30	FOR_1	IF_1
0x24b	          0x8d5001	                      lea edx, [rax + 1]	        48	alias.c	FUNCTION_30	FOR_1	IF_1
0x24e	          0x8955f4	              mov dword [rbp - 0xc], edx	        48	alias.c	FUNCTION_30	FOR_1	IF_1
0x251	          0x4863d0	                         movsxd rdx, eax	        48	alias.c	FUNCTION_30	FOR_1	IF_1
0x254	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        48	alias.c	FUNCTION_30	FOR_1	IF_1
0x258	          0x4801d0	                            add rax, rdx	        48	alias.c	FUNCTION_30	FOR_1	IF_1
0x25b	          0xc60000	                       mov byte [rax], 0	        48	alias.c	FUNCTION_30	FOR_1	IF_1
0x25e	        0x8345f001	               add dword [rbp - 0x10], 1	        49	alias.c	FUNCTION_30	FOR_1	IF_1	WHILE_1
0x262	          0x8b45f0	             mov eax, dword [rbp - 0x10]	        49	alias.c	FUNCTION_30	FOR_1	IF_1	WHILE_1
0x265	          0x4863d0	                         movsxd rdx, eax	        49	alias.c	FUNCTION_30	FOR_1	IF_1	WHILE_1
0x268	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        49	alias.c	FUNCTION_30	FOR_1	IF_1	WHILE_1
0x26c	          0x4801d0	                            add rax, rdx	        49	alias.c	FUNCTION_30	FOR_1	IF_1	WHILE_1
0x26f	           0xfb600	                   movzx eax, byte [rax]	        49	alias.c	FUNCTION_30	FOR_1	IF_1	WHILE_1
0x272	            0x84c0	                             test al, al	        49	alias.c	FUNCTION_30	FOR_1	IF_1	WHILE_1
0x274	            0x7426	                            je 0x40002dc	        49	alias.c	FUNCTION_30	FOR_1	IF_1	WHILE_1
0x276	          0x8b45f0	             mov eax, dword [rbp - 0x10]	        50	alias.c	FUNCTION_30	FOR_1	IF_1	WHILE_1	CALL_3
0x279	          0x4863d0	                         movsxd rdx, eax	        50	alias.c	FUNCTION_30	FOR_1	IF_1	WHILE_1	CALL_3
0x27c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        50	alias.c	FUNCTION_30	FOR_1	IF_1	WHILE_1	CALL_3
0x280	          0x4801d0	                            add rax, rdx	        50	alias.c	FUNCTION_30	FOR_1	IF_1	WHILE_1	CALL_3
0x283	           0xfb600	                   movzx eax, byte [rax]	        50	alias.c	FUNCTION_30	FOR_1	IF_1	WHILE_1	CALL_3
0x286	           0xfb6c0	                           movzx eax, al	        50	alias.c	FUNCTION_30	FOR_1	IF_1	WHILE_1	CALL_3
0x289	            0x4898	                                    cdqe	        50	alias.c	FUNCTION_30	FOR_1	IF_1	WHILE_1	CALL_3
0x28b	     0xfb680000000	                   movzx eax, byte [rax]	        50	alias.c	FUNCTION_30	FOR_1	IF_1	WHILE_1	CALL_3
0x292	           0xfb6c0	                           movzx eax, al	        50	alias.c	FUNCTION_30	FOR_1	IF_1	WHILE_1	CALL_3
0x295	          0x83e001	                              and eax, 1	        50	alias.c	FUNCTION_30	FOR_1	IF_1	WHILE_1	CALL_3
0x298	            0x85c0	                           test eax, eax	        50	alias.c	FUNCTION_30	FOR_1	IF_1	WHILE_1	CALL_3
0x29a	            0x75c2	                           jne 0x400029e	        50	alias.c	FUNCTION_30	FOR_1	IF_1	WHILE_1	CALL_3
0x29c	          0x8b45f8	                mov eax, dword [rbp - 8]	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x29f	          0x83c001	                              add eax, 1	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2a2	          0x3b45fc	                cmp eax, dword [rbp - 4]	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2a5	            0x7e75	                           jle 0x400035c	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2a7	          0x8b45fc	                mov eax, dword [rbp - 4]	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2aa	          0x8d5010	                   lea edx, [rax + 0x10]	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2ad	            0x89d0	                            mov eax, edx	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2af	             0x1c0	                            add eax, eax	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2b1	             0x1d0	                            add eax, edx	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2b3	            0x89c2	                            mov edx, eax	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2b5	          0xc1ea1f	                           shr edx, 0x1f	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2b8	             0x1d0	                            add eax, edx	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2ba	            0xd1f8	                              sar eax, 1	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2bc	            0x89c2	                            mov edx, eax	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2be	          0x8b45f8	                mov eax, dword [rbp - 8]	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2c1	          0x83c001	                              add eax, 1	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2c4	            0x39c2	                            cmp edx, eax	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2c6	            0x7d0b	                           jge 0x4000313	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2c8	          0x8b45f8	                mov eax, dword [rbp - 8]	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2cb	          0x83c001	                              add eax, 1	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2ce	          0x8945fc	                mov dword [rbp - 4], eax	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2d1	            0xeb18	                           jmp 0x400032b	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2d3	          0x8b45fc	                mov eax, dword [rbp - 4]	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2d6	          0x8d5010	                   lea edx, [rax + 0x10]	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2d9	            0x89d0	                            mov eax, edx	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2db	             0x1c0	                            add eax, eax	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2dd	             0x1d0	                            add eax, edx	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2df	            0x89c2	                            mov edx, eax	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2e1	          0xc1ea1f	                           shr edx, 0x1f	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2e4	             0x1d0	                            add eax, edx	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2e6	            0xd1f8	                              sar eax, 1	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2e8	          0x8945fc	                mov dword [rbp - 4], eax	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2eb	          0x8b45fc	                mov eax, dword [rbp - 4]	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2ee	            0x4898	                                    cdqe	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2f0	          0x4889c6	                            mov rsi, rax	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2f3	      0xbf08000000	                              mov edi, 8	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2f8	      0xe859fdffff	                        call sym.st_mult	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x2fd	          0x4889c2	                            mov rdx, rax	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x300	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x304	          0x488b00	                    mov rax, qword [rax]	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x307	          0x4889d6	                            mov rsi, rdx	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x30a	          0x4889c7	                            mov rdi, rax	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x30d	      0xe800000000	                          call 0x4000352	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x312	          0x4889c2	                            mov rdx, rax	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x315	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x319	          0x488910	                    mov qword [rax], rdx	        52	alias.c	FUNCTION_30	FOR_1	IF_1	CALL_4
0x31c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        53	alias.c	FUNCTION_30	FOR_1	IF_1
0x320	          0x488b08	                    mov rcx, qword [rax]	        53	alias.c	FUNCTION_30	FOR_1	IF_1
0x323	          0x8b45f8	                mov eax, dword [rbp - 8]	        53	alias.c	FUNCTION_30	FOR_1	IF_1
0x326	          0x8d5001	                      lea edx, [rax + 1]	        53	alias.c	FUNCTION_30	FOR_1	IF_1
0x329	          0x8955f8	                mov dword [rbp - 8], edx	        53	alias.c	FUNCTION_30	FOR_1	IF_1
0x32c	            0x4898	                                    cdqe	        53	alias.c	FUNCTION_30	FOR_1	IF_1
0x32e	        0x48c1e003	                              shl rax, 3	        53	alias.c	FUNCTION_30	FOR_1	IF_1
0x332	          0x4801c8	                            add rax, rcx	        53	alias.c	FUNCTION_30	FOR_1	IF_1
0x335	          0x8b55f4	              mov edx, dword [rbp - 0xc]	        53	alias.c	FUNCTION_30	FOR_1	IF_1
0x338	          0x4863ca	                         movsxd rcx, edx	        53	alias.c	FUNCTION_30	FOR_1	IF_1
0x33b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	        53	alias.c	FUNCTION_30	FOR_1	IF_1
0x33f	          0x4801ca	                            add rdx, rcx	        53	alias.c	FUNCTION_30	FOR_1	IF_1
0x342	          0x488910	                    mov qword [rax], rdx	        53	alias.c	FUNCTION_30	FOR_1	IF_1
0x345	      0xe99c000000	                           jmp 0x4000426	        53	alias.c	FUNCTION_30	FOR_1	IF_1
0x34a	        0x807dee00	                cmp byte [rbp - 0x12], 0	        54	alias.c	FUNCTION_30	FOR_1	ELSE_1	IF_2
0x34e	            0x7519	                           jne 0x40003a9	        54	alias.c	FUNCTION_30	FOR_1	ELSE_1	IF_2
0x350	        0x807def27	            cmp byte [rbp - 0x11], 0x27 	        54	alias.c	FUNCTION_30	FOR_1	ELSE_1	IF_2
0x354	            0x7406	                            je 0x400039c	        54	alias.c	FUNCTION_30	FOR_1	ELSE_1	IF_2
0x356	        0x807def22	            cmp byte [rbp - 0x11], 0x22 	        54	alias.c	FUNCTION_30	FOR_1	ELSE_1	IF_2
0x35a	            0x750d	                           jne 0x40003a9	        54	alias.c	FUNCTION_30	FOR_1	ELSE_1	IF_2
0x35c	         0xfb645ef	            movzx eax, byte [rbp - 0x11]	        55	alias.c	FUNCTION_30	FOR_1	ELSE_1	IF_2
0x360	          0x8845ee	               mov byte [rbp - 0x12], al	        55	alias.c	FUNCTION_30	FOR_1	ELSE_1	IF_2
0x363	        0x8345f001	               add dword [rbp - 0x10], 1	        56	alias.c	FUNCTION_30	FOR_1	ELSE_1	IF_2
0x367	            0xeb7d	                           jmp 0x4000426	        56	alias.c	FUNCTION_30	FOR_1	ELSE_1	IF_2
0x369	         0xfb645ef	            movzx eax, byte [rbp - 0x11]	        57	alias.c	FUNCTION_30	FOR_1	ELSE_2	IF_3
0x36d	          0x3a45ee	               cmp al, byte [rbp - 0x12]	        57	alias.c	FUNCTION_30	FOR_1	ELSE_2	IF_3
0x370	            0x750a	                           jne 0x40003bc	        57	alias.c	FUNCTION_30	FOR_1	ELSE_2	IF_3
0x372	        0xc645ee00	                mov byte [rbp - 0x12], 0	        58	alias.c	FUNCTION_30	FOR_1	ELSE_2	IF_3
0x376	        0x8345f001	               add dword [rbp - 0x10], 1	        59	alias.c	FUNCTION_30	FOR_1	ELSE_2	IF_3
0x37a	            0xeb6a	                           jmp 0x4000426	        59	alias.c	FUNCTION_30	FOR_1	ELSE_2	IF_3
0x37c	        0x807def5c	            cmp byte [rbp - 0x11], 0x5c 	        61	alias.c	FUNCTION_30	FOR_1	ELSE_3	IF_4
0x380	            0x7547	                           jne 0x4000409	        61	alias.c	FUNCTION_30	FOR_1	ELSE_3	IF_4
0x382	        0x807dee27	            cmp byte [rbp - 0x12], 0x27 	        61	alias.c	FUNCTION_30	FOR_1	ELSE_3	IF_4
0x386	            0x7441	                            je 0x4000409	        61	alias.c	FUNCTION_30	FOR_1	ELSE_3	IF_4
0x388	        0x8345f001	               add dword [rbp - 0x10], 1	        62	alias.c	FUNCTION_30	FOR_1	ELSE_3	IF_4
0x38c	          0x8b45f0	             mov eax, dword [rbp - 0x10]	        63	alias.c	FUNCTION_30	FOR_1	ELSE_3	IF_4
0x38f	          0x4863d0	                         movsxd rdx, eax	        63	alias.c	FUNCTION_30	FOR_1	ELSE_3	IF_4
0x392	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        63	alias.c	FUNCTION_30	FOR_1	ELSE_3	IF_4
0x396	          0x4801d0	                            add rax, rdx	        63	alias.c	FUNCTION_30	FOR_1	ELSE_3	IF_4
0x399	           0xfb600	                   movzx eax, byte [rax]	        63	alias.c	FUNCTION_30	FOR_1	ELSE_3	IF_4
0x39c	          0x8845ef	               mov byte [rbp - 0x11], al	        63	alias.c	FUNCTION_30	FOR_1	ELSE_3	IF_4
0x39f	        0x807def00	                cmp byte [rbp - 0x11], 0	        64	alias.c	FUNCTION_30	FOR_1	ELSE_3	IF_4	IF_5
0x3a3	            0x7524	                           jne 0x4000409	        64	alias.c	FUNCTION_30	FOR_1	ELSE_3	IF_4	IF_5
0x3a5	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        65	alias.c	FUNCTION_30	FOR_1	ELSE_3	IF_4	IF_5	CALL_5
0x3a9	          0x488b00	                    mov rax, qword [rax]	        65	alias.c	FUNCTION_30	FOR_1	ELSE_3	IF_4	IF_5	CALL_5
0x3ac	          0x4889c7	                            mov rdi, rax	        65	alias.c	FUNCTION_30	FOR_1	ELSE_3	IF_4	IF_5	CALL_5
0x3af	      0xe800000000	                          call 0x40003f4	        65	alias.c	FUNCTION_30	FOR_1	ELSE_3	IF_4	IF_5	CALL_5
0x3b4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        65	alias.c	FUNCTION_30	FOR_1	ELSE_3	IF_4	IF_5	CALL_5
0x3b8	    0x48c700000000	                      mov qword [rax], 0	        65	alias.c	FUNCTION_30	FOR_1	ELSE_3	IF_4	IF_5	CALL_5
0x3bf	      0xb8ffffffff	                     mov eax, 0xffffffff	        66	alias.c	FUNCTION_30	FOR_1	ELSE_3	IF_4	IF_5
0x3c4	      0xe90d010000	                           jmp 0x4000516	        66	alias.c	FUNCTION_30	FOR_1	ELSE_3	IF_4	IF_5
0x3c9	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        69	alias.c	FUNCTION_30	FOR_1	ELSE_3
0x3cc	          0x8d5001	                      lea edx, [rax + 1]	        69	alias.c	FUNCTION_30	FOR_1	ELSE_3
0x3cf	          0x8955f4	              mov dword [rbp - 0xc], edx	        69	alias.c	FUNCTION_30	FOR_1	ELSE_3
0x3d2	          0x4863d0	                         movsxd rdx, eax	        69	alias.c	FUNCTION_30	FOR_1	ELSE_3
0x3d5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        69	alias.c	FUNCTION_30	FOR_1	ELSE_3
0x3d9	          0x4801c2	                            add rdx, rax	        69	alias.c	FUNCTION_30	FOR_1	ELSE_3
0x3dc	         0xfb645ef	            movzx eax, byte [rbp - 0x11]	        69	alias.c	FUNCTION_30	FOR_1	ELSE_3
0x3e0	            0x8802	                      mov byte [rdx], al	        69	alias.c	FUNCTION_30	FOR_1	ELSE_3
0x3e2	        0x8345f001	               add dword [rbp - 0x10], 1	        70	alias.c	FUNCTION_30	FOR_1	ELSE_3
0x3e6	          0x8b45f0	             mov eax, dword [rbp - 0x10]	        45	alias.c	FUNCTION_30	FOR_1
0x3e9	          0x4863d0	                         movsxd rdx, eax	        45	alias.c	FUNCTION_30	FOR_1
0x3ec	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        45	alias.c	FUNCTION_30	FOR_1
0x3f0	          0x4801d0	                            add rax, rdx	        45	alias.c	FUNCTION_30	FOR_1
0x3f3	           0xfb600	                   movzx eax, byte [rax]	        45	alias.c	FUNCTION_30	FOR_1
0x3f6	            0x84c0	                             test al, al	        45	alias.c	FUNCTION_30	FOR_1
0x3f8	     0xf850ffeffff	                           jne 0x400024d	        45	alias.c	FUNCTION_30	FOR_1
0x3fe	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        74	alias.c	FUNCTION_30
0x401	          0x4863d0	                         movsxd rdx, eax	        74	alias.c	FUNCTION_30
0x404	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        74	alias.c	FUNCTION_30
0x408	          0x4801d0	                            add rax, rdx	        74	alias.c	FUNCTION_30
0x40b	          0xc60000	                       mov byte [rax], 0	        74	alias.c	FUNCTION_30
0x40e	        0x807dee00	                cmp byte [rbp - 0x12], 0	        76	alias.c	FUNCTION_30	IF_6
0x412	            0x7424	                            je 0x4000478	        76	alias.c	FUNCTION_30	IF_6
0x414	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        77	alias.c	FUNCTION_30	IF_6	CALL_6
0x418	          0x488b00	                    mov rax, qword [rax]	        77	alias.c	FUNCTION_30	IF_6	CALL_6
0x41b	          0x4889c7	                            mov rdi, rax	        77	alias.c	FUNCTION_30	IF_6	CALL_6
0x41e	      0xe800000000	                          call 0x4000463	        77	alias.c	FUNCTION_30	IF_6	CALL_6
0x423	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        77	alias.c	FUNCTION_30	IF_6	CALL_6
0x427	    0x48c700000000	                      mov qword [rax], 0	        77	alias.c	FUNCTION_30	IF_6	CALL_6
0x42e	      0xb8feffffff	                     mov eax, 0xfffffffe	        78	alias.c	FUNCTION_30	IF_6
0x433	      0xe99e000000	                           jmp 0x4000516	        78	alias.c	FUNCTION_30	IF_6
0x438	          0x8b45f8	                mov eax, dword [rbp - 8]	        81	alias.c	FUNCTION_30	CALL_7
0x43b	          0x83c001	                              add eax, 1	        81	alias.c	FUNCTION_30	CALL_7
0x43e	          0x3b45fc	                cmp eax, dword [rbp - 4]	        81	alias.c	FUNCTION_30	CALL_7
0x441	            0x7e75	                           jle 0x40004f8	        81	alias.c	FUNCTION_30	CALL_7
0x443	          0x8b45fc	                mov eax, dword [rbp - 4]	        81	alias.c	FUNCTION_30	CALL_7
0x446	          0x8d5010	                   lea edx, [rax + 0x10]	        81	alias.c	FUNCTION_30	CALL_7
0x449	            0x89d0	                            mov eax, edx	        81	alias.c	FUNCTION_30	CALL_7
0x44b	             0x1c0	                            add eax, eax	        81	alias.c	FUNCTION_30	CALL_7
0x44d	             0x1d0	                            add eax, edx	        81	alias.c	FUNCTION_30	CALL_7
0x44f	            0x89c2	                            mov edx, eax	        81	alias.c	FUNCTION_30	CALL_7
0x451	          0xc1ea1f	                           shr edx, 0x1f	        81	alias.c	FUNCTION_30	CALL_7
0x454	             0x1d0	                            add eax, edx	        81	alias.c	FUNCTION_30	CALL_7
0x456	            0xd1f8	                              sar eax, 1	        81	alias.c	FUNCTION_30	CALL_7
0x458	            0x89c2	                            mov edx, eax	        81	alias.c	FUNCTION_30	CALL_7
0x45a	          0x8b45f8	                mov eax, dword [rbp - 8]	        81	alias.c	FUNCTION_30	CALL_7
0x45d	          0x83c001	                              add eax, 1	        81	alias.c	FUNCTION_30	CALL_7
0x460	            0x39c2	                            cmp edx, eax	        81	alias.c	FUNCTION_30	CALL_7
0x462	            0x7d0b	                           jge 0x40004af	        81	alias.c	FUNCTION_30	CALL_7
0x464	          0x8b45f8	                mov eax, dword [rbp - 8]	        81	alias.c	FUNCTION_30	CALL_7
0x467	          0x83c001	                              add eax, 1	        81	alias.c	FUNCTION_30	CALL_7
0x46a	          0x8945fc	                mov dword [rbp - 4], eax	        81	alias.c	FUNCTION_30	CALL_7
0x46d	            0xeb18	                           jmp 0x40004c7	        81	alias.c	FUNCTION_30	CALL_7
0x46f	          0x8b45fc	                mov eax, dword [rbp - 4]	        81	alias.c	FUNCTION_30	CALL_7
0x472	          0x8d5010	                   lea edx, [rax + 0x10]	        81	alias.c	FUNCTION_30	CALL_7
0x475	            0x89d0	                            mov eax, edx	        81	alias.c	FUNCTION_30	CALL_7
0x477	             0x1c0	                            add eax, eax	        81	alias.c	FUNCTION_30	CALL_7
0x479	             0x1d0	                            add eax, edx	        81	alias.c	FUNCTION_30	CALL_7
0x47b	            0x89c2	                            mov edx, eax	        81	alias.c	FUNCTION_30	CALL_7
0x47d	          0xc1ea1f	                           shr edx, 0x1f	        81	alias.c	FUNCTION_30	CALL_7
0x480	             0x1d0	                            add eax, edx	        81	alias.c	FUNCTION_30	CALL_7
0x482	            0xd1f8	                              sar eax, 1	        81	alias.c	FUNCTION_30	CALL_7
0x484	          0x8945fc	                mov dword [rbp - 4], eax	        81	alias.c	FUNCTION_30	CALL_7
0x487	          0x8b45fc	                mov eax, dword [rbp - 4]	        81	alias.c	FUNCTION_30	CALL_7
0x48a	            0x4898	                                    cdqe	        81	alias.c	FUNCTION_30	CALL_7
0x48c	          0x4889c6	                            mov rsi, rax	        81	alias.c	FUNCTION_30	CALL_7
0x48f	      0xbf08000000	                              mov edi, 8	        81	alias.c	FUNCTION_30	CALL_7
0x494	      0xe8bdfbffff	                        call sym.st_mult	        81	alias.c	FUNCTION_30	CALL_7
0x499	          0x4889c2	                            mov rdx, rax	        81	alias.c	FUNCTION_30	CALL_7
0x49c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        81	alias.c	FUNCTION_30	CALL_7
0x4a0	          0x488b00	                    mov rax, qword [rax]	        81	alias.c	FUNCTION_30	CALL_7
0x4a3	          0x4889d6	                            mov rsi, rdx	        81	alias.c	FUNCTION_30	CALL_7
0x4a6	          0x4889c7	                            mov rdi, rax	        81	alias.c	FUNCTION_30	CALL_7
0x4a9	      0xe800000000	                          call 0x40004ee	        81	alias.c	FUNCTION_30	CALL_7
0x4ae	          0x4889c2	                            mov rdx, rax	        81	alias.c	FUNCTION_30	CALL_7
0x4b1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        81	alias.c	FUNCTION_30	CALL_7
0x4b5	          0x488910	                    mov qword [rax], rdx	        81	alias.c	FUNCTION_30	CALL_7
0x4b8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        82	alias.c	FUNCTION_30
0x4bc	          0x488b00	                    mov rax, qword [rax]	        82	alias.c	FUNCTION_30
0x4bf	          0x8b55f8	                mov edx, dword [rbp - 8]	        82	alias.c	FUNCTION_30
0x4c2	          0x4863d2	                         movsxd rdx, edx	        82	alias.c	FUNCTION_30
0x4c5	        0x48c1e203	                              shl rdx, 3	        82	alias.c	FUNCTION_30
0x4c9	          0x4801d0	                            add rax, rdx	        82	alias.c	FUNCTION_30
0x4cc	    0x48c700000000	                      mov qword [rax], 0	        82	alias.c	FUNCTION_30
0x4d3	          0x8b45f8	                mov eax, dword [rbp - 8]	        84	alias.c	FUNCTION_30
0x4d6	              0xc9	                                   leave	        85	alias.c	FUNCTION_30
0x4d7	              0xc3	                                     ret	        85	alias.c	FUNCTION_30
skip_prefix	functions,0:DO,1:ELSE,0:FOR,0:IF,1:SWITCH,0:WHILE,0:CALL,0	27
0x0	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_7
0x1	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_7
0x4	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_7
0x8	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_7
0xc	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_7
0x10	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x14	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x17	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x19	            0x7512	                           jne 0x400006d	       484	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x1b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x1f	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x23	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x26	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x2b	            0xeb27	                           jmp 0x4000094	       486	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x2d	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_7	DO_1
0x31	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_7	DO_1
0x35	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_7	DO_1
0x39	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_7	DO_1
0x3c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_7	DO_1
0x40	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_7	DO_1
0x44	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_7	DO_1
0x48	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_7	DO_1
0x4b	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_7	DO_1
0x4d	            0x74c1	                            je 0x4000050	       488	git-compat-util.h	FUNCTION_7	DO_1
0x4f	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_7
0x54	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_7
0x55	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_7
config_alias_cb	functions,0:DO,0:ELSE,0:FOR,0:IF,1:SWITCH,0:WHILE,0:CALL,3	41
0xa8	              0x55	                                push rbp	        10	alias.c	FUNCTION_28
0xa9	          0x4889e5	                            mov rbp, rsp	        10	alias.c	FUNCTION_28
0xac	        0x4883ec40	                           sub rsp, 0x40	        10	alias.c	FUNCTION_28
0xb0	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        10	alias.c	FUNCTION_28
0xb4	        0x488975d0	             mov qword [rbp - 0x30], rsi	        10	alias.c	FUNCTION_28
0xb8	        0x488955c8	             mov qword [rbp - 0x38], rdx	        10	alias.c	FUNCTION_28
0xbc	    0x64488b042528	                mov rax, qword fs:[0x28]	        10	alias.c	FUNCTION_28
0xc5	        0x488945f8	                mov qword [rbp - 8], rax	        10	alias.c	FUNCTION_28
0xc9	            0x31c0	                            xor eax, eax	        10	alias.c	FUNCTION_28
0xcb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        11	alias.c	FUNCTION_28
0xcf	        0x488945f0	             mov qword [rbp - 0x10], rax	        11	alias.c	FUNCTION_28
0xd3	        0x488d55e8	                   lea rdx, [rbp - 0x18]	        14	alias.c	FUNCTION_28	IF_1	CALL_2
0xd7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        14	alias.c	FUNCTION_28	IF_1	CALL_2
0xdb	      0xbe00000000	                              mov esi, 0	        14	alias.c	FUNCTION_28	IF_1	CALL_2
0xe0	          0x4889c7	                            mov rdi, rax	        14	alias.c	FUNCTION_28	IF_1	CALL_2
0xe3	      0xe818ffffff	                    call sym.skip_prefix	        14	alias.c	FUNCTION_28	IF_1	CALL_2
0xe8	            0x85c0	                           test eax, eax	        14	alias.c	FUNCTION_28	IF_1	CALL_2
0xea	            0x7437	                            je 0x4000163	        14	alias.c	FUNCTION_28	IF_1	CALL_2
0xec	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        14	alias.c	FUNCTION_28	IF_1	CALL_2
0xf0	          0x488b10	                    mov rdx, qword [rax]	        14	alias.c	FUNCTION_28	IF_1	CALL_2
0xf3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        14	alias.c	FUNCTION_28	IF_1	CALL_2
0xf7	          0x4889d6	                            mov rsi, rdx	        14	alias.c	FUNCTION_28	IF_1	CALL_2
0xfa	          0x4889c7	                            mov rdi, rax	        14	alias.c	FUNCTION_28	IF_1	CALL_2
0xfd	      0xe800000000	                          call 0x4000142	        14	alias.c	FUNCTION_28	IF_1	CALL_2
0x102	            0x85c0	                           test eax, eax	        14	alias.c	FUNCTION_28	IF_1	CALL_2
0x104	            0x751d	                           jne 0x4000163	        14	alias.c	FUNCTION_28	IF_1	CALL_2
0x106	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        15	alias.c	FUNCTION_28	CALL_3
0x10a	        0x488d4808	                      lea rcx, [rax + 8]	        15	alias.c	FUNCTION_28	CALL_3
0x10e	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	        15	alias.c	FUNCTION_28	CALL_3
0x112	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        15	alias.c	FUNCTION_28	CALL_3
0x116	          0x4889c6	                            mov rsi, rax	        15	alias.c	FUNCTION_28	CALL_3
0x119	          0x4889cf	                            mov rdi, rcx	        15	alias.c	FUNCTION_28	CALL_3
0x11c	      0xe800000000	                          call 0x4000161	        15	alias.c	FUNCTION_28	CALL_3
0x121	            0xeb05	                           jmp 0x4000168	        15	alias.c	FUNCTION_28	CALL_3
0x123	      0xb800000000	                              mov eax, 0	        17	alias.c	FUNCTION_28
0x128	        0x488b4df8	                mov rcx, qword [rbp - 8]	        18	alias.c	FUNCTION_28
0x12c	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        18	alias.c	FUNCTION_28
0x135	            0x7405	                            je 0x400017c	        18	alias.c	FUNCTION_28
0x137	      0xe800000000	                          call 0x400017c	        18	alias.c	FUNCTION_28
0x13c	              0xc9	                                   leave	        18	alias.c	FUNCTION_28
0x13d	              0xc3	                                     ret	        18	alias.c	FUNCTION_28
alias_lookup	functions,0:DO,0:ELSE,0:FOR,0:IF,0:SWITCH,0:WHILE,0:CALL,1	21
0x13e	              0x55	                                push rbp	        21	alias.c	FUNCTION_29
0x13f	          0x4889e5	                            mov rbp, rsp	        21	alias.c	FUNCTION_29
0x142	        0x4883ec30	                           sub rsp, 0x30	        21	alias.c	FUNCTION_29
0x146	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        21	alias.c	FUNCTION_29
0x14a	    0x64488b042528	                mov rax, qword fs:[0x28]	        21	alias.c	FUNCTION_29
0x153	        0x488945f8	                mov qword [rbp - 8], rax	        21	alias.c	FUNCTION_29
0x157	            0x31c0	                            xor eax, eax	        21	alias.c	FUNCTION_29
0x159	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        22	alias.c	FUNCTION_29
0x15d	        0x488945e0	             mov qword [rbp - 0x20], rax	        22	alias.c	FUNCTION_29
0x161	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        22	alias.c	FUNCTION_29
0x169	        0x488d45e0	                   lea rax, [rbp - 0x20]	        24	alias.c	FUNCTION_29	CALL_1
0x16d	          0x4889c6	                            mov rsi, rax	        24	alias.c	FUNCTION_29	CALL_1
0x170	      0xbf00000000	                              mov edi, 0	        24	alias.c	FUNCTION_29	CALL_1
0x175	      0xe800000000	                          call 0x40001ba	        24	alias.c	FUNCTION_29	CALL_1
0x17a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        26	alias.c	FUNCTION_29
0x17e	        0x488b55f8	                mov rdx, qword [rbp - 8]	        27	alias.c	FUNCTION_29
0x182	    0x644833142528	                xor rdx, qword fs:[0x28]	        27	alias.c	FUNCTION_29
0x18b	            0x7405	                            je 0x40001d2	        27	alias.c	FUNCTION_29
0x18d	      0xe800000000	                          call 0x40001d2	        27	alias.c	FUNCTION_29
0x192	              0xc9	                                   leave	        27	alias.c	FUNCTION_29
0x193	              0xc3	                                     ret	        27	alias.c	FUNCTION_29
split_cmdline_strerror	functions,0:DO,0:ELSE,0:FOR,0:IF,0:SWITCH,0:WHILE,0:CALL,0	9
0x4d8	              0x55	                                push rbp	        88	alias.c	FUNCTION_31
0x4d9	          0x4889e5	                            mov rbp, rsp	        88	alias.c	FUNCTION_31
0x4dc	          0x897dfc	                mov dword [rbp - 4], edi	        88	alias.c	FUNCTION_31
0x4df	          0x8b45fc	                mov eax, dword [rbp - 4]	        89	alias.c	FUNCTION_31
0x4e2	            0xf7d0	                                 not eax	        89	alias.c	FUNCTION_31
0x4e4	            0x4898	                                    cdqe	        89	alias.c	FUNCTION_31
0x4e6	    0x488b04c50000	                  mov rax, qword [rax*8]	        89	alias.c	FUNCTION_31
0x4ee	              0x5d	                                 pop rbp	        90	alias.c	FUNCTION_31
0x4ef	              0xc3	                                     ret	        90	alias.c	FUNCTION_31
