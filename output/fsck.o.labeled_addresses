mark_used	FOR,0:SWITCH,0:WHILE,0:IF,1:ELSE,0:functions,0:CALL,0:DO,0	27
0x800	              0x55	                                push rbp	       211	fsck.c	FUNCTION_11
0x801	          0x4889e5	                            mov rbp, rsp	       211	fsck.c	FUNCTION_11
0x804	        0x48897df8	                mov qword [rbp - 8], rdi	       211	fsck.c	FUNCTION_11
0x808	          0x8975f4	              mov dword [rbp - 0xc], esi	       211	fsck.c	FUNCTION_11
0x80b	        0x488955e8	             mov qword [rbp - 0x18], rdx	       211	fsck.c	FUNCTION_11
0x80f	        0x48894de0	             mov qword [rbp - 0x20], rcx	       211	fsck.c	FUNCTION_11
0x813	      0x48837df800	                  cmp qword [rbp - 8], 0	       212	fsck.c	FUNCTION_11	IF_1
0x818	            0x7507	                           jne 0x4000861	       212	fsck.c	FUNCTION_11	IF_1
0x81a	      0xb801000000	                              mov eax, 1	       213	fsck.c	FUNCTION_11	IF_1
0x81f	            0xeb33	                           jmp 0x4000894	       213	fsck.c	FUNCTION_11	IF_1
0x821	        0x488b45f8	                mov rax, qword [rbp - 8]	       214	fsck.c	FUNCTION_11
0x825	            0x8b00	                    mov eax, dword [rax]	       214	fsck.c	FUNCTION_11
0x827	          0xc1e804	                              shr eax, 4	       214	fsck.c	FUNCTION_11
0x82a	      0x25ffffff07	                      and eax, 0x7ffffff	       214	fsck.c	FUNCTION_11
0x82f	          0x83c808	                               or eax, 8	       214	fsck.c	FUNCTION_11
0x832	            0x89c2	                            mov edx, eax	       214	fsck.c	FUNCTION_11
0x834	        0x488b45f8	                mov rax, qword [rbp - 8]	       214	fsck.c	FUNCTION_11
0x838	    0x81e2ffffff07	                      and edx, 0x7ffffff	       214	fsck.c	FUNCTION_11
0x83e	            0x89d1	                            mov ecx, edx	       214	fsck.c	FUNCTION_11
0x840	          0xc1e104	                              shl ecx, 4	       214	fsck.c	FUNCTION_11
0x843	            0x8b10	                    mov edx, dword [rax]	       214	fsck.c	FUNCTION_11
0x845	    0x81e20f000080	                     and edx, 0x8000000f	       214	fsck.c	FUNCTION_11
0x84b	             0x9ca	                             or edx, ecx	       214	fsck.c	FUNCTION_11
0x84d	            0x8910	                    mov dword [rax], edx	       214	fsck.c	FUNCTION_11
0x84f	      0xb800000000	                              mov eax, 0	       215	fsck.c	FUNCTION_11
0x854	              0x5d	                                 pop rbp	       216	fsck.c	FUNCTION_11
0x855	              0xc3	                                     ret	       216	fsck.c	FUNCTION_11
printable_type	FOR,0:SWITCH,0:WHILE,0:IF,3:ELSE,0:functions,0:CALL,3:DO,0	39
0x23b	              0x55	                                push rbp	        66	fsck.c	FUNCTION_2
0x23c	          0x4889e5	                            mov rbp, rsp	        66	fsck.c	FUNCTION_2
0x23f	        0x4883ec20	                           sub rsp, 0x20	        66	fsck.c	FUNCTION_2
0x243	        0x48897de8	             mov qword [rbp - 0x18], rdi	        66	fsck.c	FUNCTION_2
0x247	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        69	fsck.c	FUNCTION_2	IF_1
0x24b	           0xfb600	                   movzx eax, byte [rax]	        69	fsck.c	FUNCTION_2	IF_1
0x24e	          0x83e00e	                            and eax, 0xe	        69	fsck.c	FUNCTION_2	IF_1
0x251	            0x84c0	                             test al, al	        69	fsck.c	FUNCTION_2	IF_1
0x253	            0x753e	                           jne 0x40002d3	        69	fsck.c	FUNCTION_2	IF_1
0x255	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        71	fsck.c	FUNCTION_2	IF_1
0x259	        0x488d4804	                      lea rcx, [rax + 4]	        71	fsck.c	FUNCTION_2	IF_1
0x25d	    0x488b05000000	            mov rax, qword [0x040002a4] 	        70	fsck.c	FUNCTION_2	IF_1	CALL_1
0x264	      0xba00000000	                              mov edx, 0	        70	fsck.c	FUNCTION_2	IF_1	CALL_1
0x269	          0x4889ce	                            mov rsi, rcx	        70	fsck.c	FUNCTION_2	IF_1	CALL_1
0x26c	          0x4889c7	                            mov rdi, rax	        70	fsck.c	FUNCTION_2	IF_1	CALL_1
0x26f	      0xe800000000	                          call 0x40002b4	        70	fsck.c	FUNCTION_2	IF_1	CALL_1
0x274	          0x8945f4	              mov dword [rbp - 0xc], eax	        70	fsck.c	FUNCTION_2	IF_1	CALL_1
0x277	        0x837df400	                cmp dword [rbp - 0xc], 0	        72	fsck.c	FUNCTION_2	IF_1	IF_2
0x27b	            0x7e16	                           jle 0x40002d3	        72	fsck.c	FUNCTION_2	IF_1	IF_2
0x27d	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	        73	fsck.c	FUNCTION_2	IF_1	CALL_2
0x280	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        73	fsck.c	FUNCTION_2	IF_1	CALL_2
0x284	      0xba00000000	                              mov edx, 0	        73	fsck.c	FUNCTION_2	IF_1	CALL_2
0x289	            0x89ce	                            mov esi, ecx	        73	fsck.c	FUNCTION_2	IF_1	CALL_2
0x28b	          0x4889c7	                            mov rdi, rax	        73	fsck.c	FUNCTION_2	IF_1	CALL_2
0x28e	      0xe800000000	                          call 0x40002d3	        73	fsck.c	FUNCTION_2	IF_1	CALL_2
0x293	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        76	fsck.c	FUNCTION_2	CALL_3
0x297	           0xfb600	                   movzx eax, byte [rax]	        76	fsck.c	FUNCTION_2	CALL_3
0x29a	            0xd0e8	                               shr al, 1	        76	fsck.c	FUNCTION_2	CALL_3
0x29c	          0x83e007	                              and eax, 7	        76	fsck.c	FUNCTION_2	CALL_3
0x29f	           0xfb6c0	                           movzx eax, al	        76	fsck.c	FUNCTION_2	CALL_3
0x2a2	            0x89c7	                            mov edi, eax	        76	fsck.c	FUNCTION_2	CALL_3
0x2a4	      0xe800000000	                          call 0x40002e9	        76	fsck.c	FUNCTION_2	CALL_3
0x2a9	        0x488945f8	                mov qword [rbp - 8], rax	        76	fsck.c	FUNCTION_2	CALL_3
0x2ad	      0x48837df800	                  cmp qword [rbp - 8], 0	        77	fsck.c	FUNCTION_2	IF_3
0x2b2	            0x7508	                           jne 0x40002fc	        77	fsck.c	FUNCTION_2	IF_3
0x2b4	    0x48c745f80000	                  mov qword [rbp - 8], 0	        78	fsck.c	FUNCTION_2	IF_3
0x2bc	        0x488b45f8	                mov rax, qword [rbp - 8]	        80	fsck.c	FUNCTION_2
0x2c0	              0xc9	                                   leave	        81	fsck.c	FUNCTION_2
0x2c1	              0xc3	                                     ret	        81	fsck.c	FUNCTION_2
_	FOR,0:SWITCH,0:WHILE,0:IF,1:ELSE,0:functions,0:CALL,2:DO,0	15
0x130	              0x55	                                push rbp	        51	gettext.h	FUNCTION_36
0x131	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_36
0x134	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_36
0x138	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_36
0x13c	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_36	IF_1
0x140	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_36	IF_1
0x143	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_36	IF_1
0x145	            0x7507	                           jne 0x400018e	        52	gettext.h	FUNCTION_36	IF_1
0x147	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_36	IF_1
0x14c	            0xeb0c	                           jmp 0x400019a	        53	gettext.h	FUNCTION_36	IF_1
0x14e	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_36	CALL_2
0x152	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_36	CALL_2
0x155	      0xe800000000	                          call 0x400019a	        54	gettext.h	FUNCTION_36	CALL_2
0x15a	              0xc9	                                   leave	        55	gettext.h	FUNCTION_36
0x15b	              0xc3	                                     ret	        55	gettext.h	FUNCTION_36
skip_prefix	FOR,0:SWITCH,0:WHILE,0:IF,1:ELSE,0:functions,0:CALL,0:DO,1	27
0xb	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_44
0xc	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_44
0xf	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_44
0x13	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_44
0x17	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_44
0x1b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_44	DO_1	IF_1
0x1f	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_44	DO_1	IF_1
0x22	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_44	DO_1	IF_1
0x24	            0x7512	                           jne 0x4000078	       484	git-compat-util.h	FUNCTION_44	DO_1	IF_1
0x26	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_44	DO_1	IF_1
0x2a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_44	DO_1	IF_1
0x2e	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_44	DO_1	IF_1
0x31	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_44	DO_1	IF_1
0x36	            0xeb27	                           jmp 0x400009f	       486	git-compat-util.h	FUNCTION_44	DO_1	IF_1
0x38	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_44	DO_1
0x3c	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_44	DO_1
0x40	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_44	DO_1
0x44	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_44	DO_1
0x47	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_44	DO_1
0x4b	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_44	DO_1
0x4f	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_44	DO_1
0x53	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_44	DO_1
0x56	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_44	DO_1
0x58	            0x74c1	                            je 0x400005b	       488	git-compat-util.h	FUNCTION_44	DO_1
0x5a	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_44
0x5f	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_44
0x60	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_44
fsck_error_func	FOR,0:SWITCH,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,1:DO,0	22
0x487	              0x55	                                push rbp	       122	fsck.c	FUNCTION_6
0x488	          0x4889e5	                            mov rbp, rsp	       122	fsck.c	FUNCTION_6
0x48b	        0x4883ec20	                           sub rsp, 0x20	       122	fsck.c	FUNCTION_6
0x48f	        0x48897df8	                mov qword [rbp - 8], rdi	       122	fsck.c	FUNCTION_6
0x493	        0x488975f0	             mov qword [rbp - 0x10], rsi	       122	fsck.c	FUNCTION_6
0x497	          0x8955ec	             mov dword [rbp - 0x14], edx	       122	fsck.c	FUNCTION_6
0x49a	        0x48894de0	             mov qword [rbp - 0x20], rcx	       122	fsck.c	FUNCTION_6
0x49e	        0x837dec02	               cmp dword [rbp - 0x14], 2	       123	fsck.c	FUNCTION_6	CALL_1
0x4a2	            0x7507	                           jne 0x40004eb	       123	fsck.c	FUNCTION_6	CALL_1
0x4a4	      0xb900000000	                              mov ecx, 0	       123	fsck.c	FUNCTION_6	CALL_1
0x4a9	            0xeb05	                           jmp 0x40004f0	       123	fsck.c	FUNCTION_6	CALL_1
0x4ab	      0xb900000000	                              mov ecx, 0	       123	fsck.c	FUNCTION_6	CALL_1
0x4b0	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       123	fsck.c	FUNCTION_6	CALL_1
0x4b4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       123	fsck.c	FUNCTION_6	CALL_1
0x4b8	          0x4889ce	                            mov rsi, rcx	       123	fsck.c	FUNCTION_6	CALL_1
0x4bb	          0x4889c7	                            mov rdi, rax	       123	fsck.c	FUNCTION_6	CALL_1
0x4be	      0xe824ffffff	                      call sym.objreport	       123	fsck.c	FUNCTION_6	CALL_1
0x4c3	        0x837dec02	               cmp dword [rbp - 0x14], 2	       124	fsck.c	FUNCTION_6
0x4c7	           0xf95c0	                                setne al	       124	fsck.c	FUNCTION_6
0x4ca	           0xfb6c0	                           movzx eax, al	       124	fsck.c	FUNCTION_6
0x4cd	              0xc9	                                   leave	       125	fsck.c	FUNCTION_6
0x4ce	              0xc3	                                     ret	       125	fsck.c	FUNCTION_6
check_object	FOR,0:SWITCH,0:WHILE,0:IF,2:ELSE,1:functions,0:CALL,4:DO,0	33
0xaf1	              0x55	                                push rbp	       313	fsck.c	FUNCTION_14
0xaf2	          0x4889e5	                            mov rbp, rsp	       313	fsck.c	FUNCTION_14
0xaf5	        0x4883ec10	                           sub rsp, 0x10	       313	fsck.c	FUNCTION_14
0xaf9	        0x48897df8	                mov qword [rbp - 8], rdi	       313	fsck.c	FUNCTION_14
0xafd	    0x8b0500000000	            mov eax, dword [0x04000b43] 	       314	fsck.c	FUNCTION_14	IF_1
0xb03	            0x85c0	                           test eax, eax	       314	fsck.c	FUNCTION_14	IF_1
0xb05	            0x7428	                            je 0x4000b6f	       314	fsck.c	FUNCTION_14	IF_1
0xb07	        0x488b45f8	                mov rax, qword [rbp - 8]	       315	fsck.c	FUNCTION_14	CALL_2
0xb0b	          0x4889c7	                            mov rdi, rax	       315	fsck.c	FUNCTION_14	CALL_2
0xb0e	      0xe89af6ffff	                call sym.describe_object	       315	fsck.c	FUNCTION_14	CALL_2
0xb13	          0x4889c2	                            mov rdx, rax	       315	fsck.c	FUNCTION_14	CALL_2
0xb16	    0x488b05000000	            mov rax, qword [0x04000b5d] 	       315	fsck.c	FUNCTION_14	CALL_2
0xb1d	      0xbe00000000	                              mov esi, 0	       315	fsck.c	FUNCTION_14	CALL_2
0xb22	          0x4889c7	                            mov rdi, rax	       315	fsck.c	FUNCTION_14	CALL_2
0xb25	      0xb800000000	                              mov eax, 0	       315	fsck.c	FUNCTION_14	CALL_2
0xb2a	      0xe800000000	                          call 0x4000b6f	       315	fsck.c	FUNCTION_14	CALL_2
0xb2f	        0x488b45f8	                mov rax, qword [rbp - 8]	       317	fsck.c	FUNCTION_14	IF_2
0xb33	            0x8b00	                    mov eax, dword [rax]	       317	fsck.c	FUNCTION_14	IF_2
0xb35	          0xc1e804	                              shr eax, 4	       317	fsck.c	FUNCTION_14	IF_2
0xb38	      0x25ffffff07	                      and eax, 0x7ffffff	       317	fsck.c	FUNCTION_14	IF_2
0xb3d	          0x83e001	                              and eax, 1	       317	fsck.c	FUNCTION_14	IF_2
0xb40	            0x85c0	                           test eax, eax	       317	fsck.c	FUNCTION_14	IF_2
0xb42	            0x740e	                            je 0x4000b92	       317	fsck.c	FUNCTION_14	IF_2
0xb44	        0x488b45f8	                mov rax, qword [rbp - 8]	       318	fsck.c	FUNCTION_14	CALL_3
0xb48	          0x4889c7	                            mov rdi, rax	       318	fsck.c	FUNCTION_14	CALL_3
0xb4b	      0xe806fdffff	         call sym.check_reachable_object	       318	fsck.c	FUNCTION_14	CALL_3
0xb50	            0xeb0c	                           jmp 0x4000b9e	       321	fsck.c	FUNCTION_14
0xb52	        0x488b45f8	                mov rax, qword [rbp - 8]	       320	fsck.c	FUNCTION_14	CALL_4
0xb56	          0x4889c7	                            mov rdi, rax	       320	fsck.c	FUNCTION_14	CALL_4
0xb59	      0xe88ffdffff	       call sym.check_unreachable_object	       320	fsck.c	FUNCTION_14	CALL_4
0xb5e	              0x90	                                     nop	       321	fsck.c	FUNCTION_14
0xb5f	              0xc9	                                   leave	       321	fsck.c	FUNCTION_14
0xb60	              0xc3	                                     ret	       321	fsck.c	FUNCTION_14
strbuf_addstr	FOR,0:SWITCH,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,2:DO,0	17
0xfb	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_69
0xfc	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_69
0xff	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_69
0x103	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_69
0x107	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_69
0x10b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_69	CALL_2
0x10f	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_69	CALL_2
0x112	      0xe800000000	                          call 0x4000157	       279	strbuf.h	FUNCTION_69	CALL_2
0x117	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_69	CALL_2
0x11a	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_69	CALL_2
0x11e	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_69	CALL_2
0x122	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_69	CALL_2
0x125	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_69	CALL_2
0x128	      0xe800000000	                          call 0x400016d	       279	strbuf.h	FUNCTION_69	CALL_2
0x12d	              0x90	                                     nop	       280	strbuf.h	FUNCTION_69
0x12e	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_69
0x12f	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_69
check_reachable_object	FOR,0:SWITCH,0:WHILE,0:IF,3:ELSE,0:functions,0:CALL,5:DO,0	48
0x856	              0x55	                                push rbp	       222	fsck.c	FUNCTION_12
0x857	          0x4889e5	                            mov rbp, rsp	       222	fsck.c	FUNCTION_12
0x85a	              0x53	                                push rbx	       222	fsck.c	FUNCTION_12
0x85b	        0x4883ec18	                           sub rsp, 0x18	       222	fsck.c	FUNCTION_12
0x85f	        0x48897de8	             mov qword [rbp - 0x18], rdi	       222	fsck.c	FUNCTION_12
0x863	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       228	fsck.c	FUNCTION_12	IF_1
0x867	            0x8b00	                    mov eax, dword [rax]	       228	fsck.c	FUNCTION_12	IF_1
0x869	          0xc1e804	                              shr eax, 4	       228	fsck.c	FUNCTION_12	IF_1
0x86c	      0x25ffffff07	                      and eax, 0x7ffffff	       228	fsck.c	FUNCTION_12	IF_1
0x871	          0x83e004	                              and eax, 4	       228	fsck.c	FUNCTION_12	IF_1
0x874	            0x85c0	                           test eax, eax	       228	fsck.c	FUNCTION_12	IF_1
0x876	            0x756e	                           jne 0x4000926	       228	fsck.c	FUNCTION_12	IF_1
0x878	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       229	fsck.c	FUNCTION_12	IF_1	IF_2	CALL_1
0x87c	        0x4883c004	                              add rax, 4	       229	fsck.c	FUNCTION_12	IF_1	IF_2	CALL_1
0x880	          0x4889c7	                            mov rdi, rax	       229	fsck.c	FUNCTION_12	IF_1	IF_2	CALL_1
0x883	      0xe800000000	                          call 0x40008c8	       229	fsck.c	FUNCTION_12	IF_1	IF_2	CALL_1
0x888	            0x85c0	                           test eax, eax	       229	fsck.c	FUNCTION_12	IF_1	IF_2	CALL_1
0x88a	            0x7556	                           jne 0x4000922	       229	fsck.c	FUNCTION_12	IF_1	IF_2	CALL_1
0x88c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       231	fsck.c	FUNCTION_12	IF_1	IF_3	CALL_2
0x890	        0x4883c004	                              add rax, 4	       231	fsck.c	FUNCTION_12	IF_1	IF_3	CALL_2
0x894	          0x4889c7	                            mov rdi, rax	       231	fsck.c	FUNCTION_12	IF_1	IF_3	CALL_2
0x897	      0xe800000000	                          call 0x40008dc	       231	fsck.c	FUNCTION_12	IF_1	IF_3	CALL_2
0x89c	            0x85c0	                           test eax, eax	       231	fsck.c	FUNCTION_12	IF_1	IF_3	CALL_2
0x89e	            0x7545	                           jne 0x4000925	       231	fsck.c	FUNCTION_12	IF_1	IF_3	CALL_2
0x8a0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       233	fsck.c	FUNCTION_12	IF_1	CALL_4
0x8a4	          0x4889c7	                            mov rdi, rax	       233	fsck.c	FUNCTION_12	IF_1	CALL_4
0x8a7	      0xe801f9ffff	                call sym.describe_object	       233	fsck.c	FUNCTION_12	IF_1	CALL_4
0x8ac	          0x4889c3	                            mov rbx, rax	       233	fsck.c	FUNCTION_12	IF_1	CALL_4
0x8af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       233	fsck.c	FUNCTION_12	IF_1	CALL_4
0x8b3	          0x4889c7	                            mov rdi, rax	       233	fsck.c	FUNCTION_12	IF_1	CALL_4
0x8b6	      0xe880f9ffff	                 call sym.printable_type	       233	fsck.c	FUNCTION_12	IF_1	CALL_4
0x8bb	          0x4889da	                            mov rdx, rbx	       233	fsck.c	FUNCTION_12	IF_1	CALL_4
0x8be	          0x4889c6	                            mov rsi, rax	       233	fsck.c	FUNCTION_12	IF_1	CALL_4
0x8c1	      0xbf00000000	                              mov edi, 0	       233	fsck.c	FUNCTION_12	IF_1	CALL_4
0x8c6	      0xb800000000	                              mov eax, 0	       233	fsck.c	FUNCTION_12	IF_1	CALL_4
0x8cb	      0xe800000000	                          call 0x4000910	       233	fsck.c	FUNCTION_12	IF_1	CALL_4
0x8d0	    0x8b0500000000	            mov eax, dword [0x04000916] 	       235	fsck.c	FUNCTION_12	IF_1
0x8d6	          0x83c802	                               or eax, 2	       235	fsck.c	FUNCTION_12	IF_1
0x8d9	    0x890500000000	            mov dword [0x0400091f], eax 	       235	fsck.c	FUNCTION_12	IF_1
0x8df	              0x90	                                     nop	       236	fsck.c	FUNCTION_12	IF_1
0x8e0	            0xeb04	                           jmp 0x4000926	       236	fsck.c	FUNCTION_12	IF_1
0x8e2	              0x90	                                     nop	       230	fsck.c	FUNCTION_12	IF_1	IF_2
0x8e3	            0xeb01	                           jmp 0x4000926	       230	fsck.c	FUNCTION_12	IF_1	IF_2
0x8e5	              0x90	                                     nop	       232	fsck.c	FUNCTION_12	IF_1	IF_3
0x8e6	        0x4883c418	                           add rsp, 0x18	       238	fsck.c	FUNCTION_12
0x8ea	              0x5b	                                 pop rbx	       238	fsck.c	FUNCTION_12
0x8eb	              0x5d	                                 pop rbp	       238	fsck.c	FUNCTION_12
0x8ec	              0xc3	                                     ret	       238	fsck.c	FUNCTION_12
parse_loose_object	FOR,0:SWITCH,0:WHILE,0:IF,3:ELSE,0:functions,0:CALL,4:DO,0	51
0x12c0	              0x55	                                push rbp	       512	fsck.c	FUNCTION_23
0x12c1	          0x4889e5	                            mov rbp, rsp	       512	fsck.c	FUNCTION_23
0x12c4	        0x4883ec40	                           sub rsp, 0x40	       512	fsck.c	FUNCTION_23
0x12c8	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       512	fsck.c	FUNCTION_23
0x12cc	        0x488975c0	             mov qword [rbp - 0x40], rsi	       512	fsck.c	FUNCTION_23
0x12d0	    0x64488b042528	                mov rax, qword fs:[0x28]	       512	fsck.c	FUNCTION_23
0x12d9	        0x488945f8	                mov qword [rbp - 8], rax	       512	fsck.c	FUNCTION_23
0x12dd	            0x31c0	                            xor eax, eax	       512	fsck.c	FUNCTION_23
0x12df	        0x488d7de0	                   lea rdi, [rbp - 0x20]	       519	fsck.c	FUNCTION_23	IF_1	CALL_1
0x12e3	        0x488d4de8	                   lea rcx, [rbp - 0x18]	       519	fsck.c	FUNCTION_23	IF_1	CALL_1
0x12e7	        0x488d55d8	                   lea rdx, [rbp - 0x28]	       519	fsck.c	FUNCTION_23	IF_1	CALL_1
0x12eb	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       519	fsck.c	FUNCTION_23	IF_1	CALL_1
0x12ef	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       519	fsck.c	FUNCTION_23	IF_1	CALL_1
0x12f3	          0x4989f8	                             mov r8, rdi	       519	fsck.c	FUNCTION_23	IF_1	CALL_1
0x12f6	          0x4889c7	                            mov rdi, rax	       519	fsck.c	FUNCTION_23	IF_1	CALL_1
0x12f9	      0xe800000000	                          call 0x400133e	       519	fsck.c	FUNCTION_23	IF_1	CALL_1
0x12fe	            0x85c0	                           test eax, eax	       519	fsck.c	FUNCTION_23	IF_1	CALL_1
0x1300	            0x7907	                           jns 0x4001349	       519	fsck.c	FUNCTION_23	IF_1	CALL_1
0x1302	      0xb800000000	                              mov eax, 0	       520	fsck.c	FUNCTION_23	IF_1
0x1307	            0xeb59	                           jmp 0x40013a2	       520	fsck.c	FUNCTION_23	IF_1
0x1309	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       522	fsck.c	FUNCTION_23	IF_2
0x130d	          0x4885c0	                           test rax, rax	       522	fsck.c	FUNCTION_23	IF_2
0x1310	            0x7517	                           jne 0x4001369	       522	fsck.c	FUNCTION_23	IF_2
0x1312	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       522	fsck.c	FUNCTION_23	IF_2
0x1315	          0x83f803	                              cmp eax, 3	       522	fsck.c	FUNCTION_23	IF_2
0x1318	            0x740f	                            je 0x4001369	       522	fsck.c	FUNCTION_23	IF_2
0x131a	      0xbf00000000	                              mov edi, 0	       523	fsck.c	FUNCTION_23	CALL_2
0x131f	      0xb800000000	                              mov eax, 0	       523	fsck.c	FUNCTION_23	CALL_2
0x1324	      0xe800000000	                          call 0x4001369	       523	fsck.c	FUNCTION_23	CALL_2
0x1329	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       525	fsck.c	FUNCTION_23	CALL_3
0x132d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       525	fsck.c	FUNCTION_23	CALL_3
0x1331	          0x8b75d8	             mov esi, dword [rbp - 0x28]	       525	fsck.c	FUNCTION_23	CALL_3
0x1334	        0x488d7ddc	                   lea rdi, [rbp - 0x24]	       525	fsck.c	FUNCTION_23	CALL_3
0x1338	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       525	fsck.c	FUNCTION_23	CALL_3
0x133c	          0x4989f8	                             mov r8, rdi	       525	fsck.c	FUNCTION_23	CALL_3
0x133f	          0x4889c7	                            mov rdi, rax	       525	fsck.c	FUNCTION_23	CALL_3
0x1342	      0xe800000000	                          call 0x4001387	       525	fsck.c	FUNCTION_23	CALL_3
0x1347	        0x488945f0	             mov qword [rbp - 0x10], rax	       525	fsck.c	FUNCTION_23	CALL_3
0x134b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       527	fsck.c	FUNCTION_23	IF_3
0x134e	            0x85c0	                           test eax, eax	       527	fsck.c	FUNCTION_23	IF_3
0x1350	            0x750c	                           jne 0x400139e	       527	fsck.c	FUNCTION_23	IF_3
0x1352	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       528	fsck.c	FUNCTION_23	CALL_4
0x1356	          0x4889c7	                            mov rdi, rax	       528	fsck.c	FUNCTION_23	CALL_4
0x1359	      0xe800000000	                          call 0x400139e	       528	fsck.c	FUNCTION_23	CALL_4
0x135e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       529	fsck.c	FUNCTION_23
0x1362	        0x488b55f8	                mov rdx, qword [rbp - 8]	       530	fsck.c	FUNCTION_23
0x1366	    0x644833142528	                xor rdx, qword fs:[0x28]	       530	fsck.c	FUNCTION_23
0x136f	            0x7405	                            je 0x40013b6	       530	fsck.c	FUNCTION_23
0x1371	      0xe800000000	                          call 0x40013b6	       530	fsck.c	FUNCTION_23
0x1376	              0xc9	                                   leave	       530	fsck.c	FUNCTION_23
0x1377	              0xc3	                                     ret	       530	fsck.c	FUNCTION_23
mark_loose_for_connectivity	FOR,0:SWITCH,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,1:DO,0	12
0x18cd	              0x55	                                push rbp	       648	fsck.c	FUNCTION_31
0x18ce	          0x4889e5	                            mov rbp, rsp	       648	fsck.c	FUNCTION_31
0x18d1	        0x4883ec20	                           sub rsp, 0x20	       648	fsck.c	FUNCTION_31
0x18d5	        0x48897df8	                mov qword [rbp - 8], rdi	       648	fsck.c	FUNCTION_31
0x18d9	        0x488975f0	             mov qword [rbp - 0x10], rsi	       648	fsck.c	FUNCTION_31
0x18dd	        0x488955e8	             mov qword [rbp - 0x18], rdx	       648	fsck.c	FUNCTION_31
0x18e1	        0x488b45f8	                mov rax, qword [rbp - 8]	       649	fsck.c	FUNCTION_31	CALL_1
0x18e5	          0x4889c7	                            mov rdi, rax	       649	fsck.c	FUNCTION_31	CALL_1
0x18e8	      0xe893ffffff	   call sym.mark_object_for_connectivity	       649	fsck.c	FUNCTION_31	CALL_1
0x18ed	      0xb800000000	                              mov eax, 0	       650	fsck.c	FUNCTION_31
0x18f2	              0xc9	                                   leave	       651	fsck.c	FUNCTION_31
0x18f3	              0xc3	                                     ret	       651	fsck.c	FUNCTION_31
check_connectivity	FOR,1:SWITCH,0:WHILE,0:IF,2:ELSE,0:functions,0:CALL,5:DO,0	33
0xb61	              0x55	                                push rbp	       324	fsck.c	FUNCTION_15
0xb62	          0x4889e5	                            mov rbp, rsp	       324	fsck.c	FUNCTION_15
0xb65	        0x4883ec10	                           sub rsp, 0x10	       324	fsck.c	FUNCTION_15
0xb69	      0xe8ddfbffff	             call sym.traverse_reachable	       328	fsck.c	FUNCTION_15	CALL_1
0xb6e	      0xe800000000	                          call 0x4000bb3	       331	fsck.c	FUNCTION_15	CALL_2
0xb73	          0x8945f4	              mov dword [rbp - 0xc], eax	       331	fsck.c	FUNCTION_15	CALL_2
0xb76	    0x8b0500000000	            mov eax, dword [0x04000bbc] 	       332	fsck.c	FUNCTION_15	IF_1
0xb7c	            0x85c0	                           test eax, eax	       332	fsck.c	FUNCTION_15	IF_1
0xb7e	            0x741c	                            je 0x4000bdc	       332	fsck.c	FUNCTION_15	IF_1
0xb80	    0x488b05000000	            mov rax, qword [0x04000bc7] 	       333	fsck.c	FUNCTION_15	CALL_3
0xb87	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       333	fsck.c	FUNCTION_15	CALL_3
0xb8a	      0xbe00000000	                              mov esi, 0	       333	fsck.c	FUNCTION_15	CALL_3
0xb8f	          0x4889c7	                            mov rdi, rax	       333	fsck.c	FUNCTION_15	CALL_3
0xb92	      0xb800000000	                              mov eax, 0	       333	fsck.c	FUNCTION_15	CALL_3
0xb97	      0xe800000000	                          call 0x4000bdc	       333	fsck.c	FUNCTION_15	CALL_3
0xb9c	    0xc745f0000000	               mov dword [rbp - 0x10], 0	       335	fsck.c	FUNCTION_15	FOR_1
0xba3	            0xeb25	                           jmp 0x4000c0a	       335	fsck.c	FUNCTION_15	FOR_1
0xba5	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       336	fsck.c	FUNCTION_15	FOR_1	CALL_4
0xba8	            0x89c7	                            mov edi, eax	       336	fsck.c	FUNCTION_15	FOR_1	CALL_4
0xbaa	      0xe800000000	                          call 0x4000bef	       336	fsck.c	FUNCTION_15	FOR_1	CALL_4
0xbaf	        0x488945f8	                mov qword [rbp - 8], rax	       336	fsck.c	FUNCTION_15	FOR_1	CALL_4
0xbb3	      0x48837df800	                  cmp qword [rbp - 8], 0	       338	fsck.c	FUNCTION_15	FOR_1	IF_2
0xbb8	            0x740c	                            je 0x4000c06	       338	fsck.c	FUNCTION_15	FOR_1	IF_2
0xbba	        0x488b45f8	                mov rax, qword [rbp - 8]	       339	fsck.c	FUNCTION_15	FOR_1	CALL_5
0xbbe	          0x4889c7	                            mov rdi, rax	       339	fsck.c	FUNCTION_15	FOR_1	CALL_5
0xbc1	      0xe82bffffff	                   call sym.check_object	       339	fsck.c	FUNCTION_15	FOR_1	CALL_5
0xbc6	        0x8345f001	               add dword [rbp - 0x10], 1	       335	fsck.c	FUNCTION_15	FOR_1
0xbca	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       335	fsck.c	FUNCTION_15	FOR_1
0xbcd	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       335	fsck.c	FUNCTION_15	FOR_1
0xbd0	            0x7cd3	                            jl 0x4000be5	       335	fsck.c	FUNCTION_15	FOR_1
0xbd2	              0x90	                                     nop	       341	fsck.c	FUNCTION_15
0xbd3	              0xc9	                                   leave	       341	fsck.c	FUNCTION_15
0xbd4	              0xc3	                                     ret	       341	fsck.c	FUNCTION_15
check_unreachable_object	FOR,0:SWITCH,0:WHILE,0:IF,9:ELSE,1:functions,0:CALL,20:DO,0	141
0x8ed	              0x55	                                push rbp	       244	fsck.c	FUNCTION_13
0x8ee	          0x4889e5	                            mov rbp, rsp	       244	fsck.c	FUNCTION_13
0x8f1	              0x53	                                push rbx	       244	fsck.c	FUNCTION_13
0x8f2	        0x4883ec28	                           sub rsp, 0x28	       244	fsck.c	FUNCTION_13
0x8f6	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       244	fsck.c	FUNCTION_13
0x8fa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       251	fsck.c	FUNCTION_13	IF_1
0x8fe	            0x8b00	                    mov eax, dword [rax]	       251	fsck.c	FUNCTION_13	IF_1
0x900	          0xc1e804	                              shr eax, 4	       251	fsck.c	FUNCTION_13	IF_1
0x903	      0x25ffffff07	                      and eax, 0x7ffffff	       251	fsck.c	FUNCTION_13	IF_1
0x908	          0x83e004	                              and eax, 4	       251	fsck.c	FUNCTION_13	IF_1
0x90b	            0x85c0	                           test eax, eax	       251	fsck.c	FUNCTION_13	IF_1
0x90d	     0xf84d3010000	                            je 0x4000b26	       251	fsck.c	FUNCTION_13	IF_1
0x913	    0x8b0500000000	            mov eax, dword [0x04000959] 	       258	fsck.c	FUNCTION_13	IF_2
0x919	            0x85c0	                           test eax, eax	       258	fsck.c	FUNCTION_13	IF_2
0x91b	            0x7435	                            je 0x4000992	       258	fsck.c	FUNCTION_13	IF_2
0x91d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       259	fsck.c	FUNCTION_13	IF_2	CALL_2
0x921	          0x4889c7	                            mov rdi, rax	       259	fsck.c	FUNCTION_13	IF_2	CALL_2
0x924	      0xe884f8ffff	                call sym.describe_object	       259	fsck.c	FUNCTION_13	IF_2	CALL_2
0x929	          0x4889c3	                            mov rbx, rax	       259	fsck.c	FUNCTION_13	IF_2	CALL_2
0x92c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       259	fsck.c	FUNCTION_13	IF_2	CALL_2
0x930	          0x4889c7	                            mov rdi, rax	       259	fsck.c	FUNCTION_13	IF_2	CALL_2
0x933	      0xe803f9ffff	                 call sym.printable_type	       259	fsck.c	FUNCTION_13	IF_2	CALL_2
0x938	          0x4889da	                            mov rdx, rbx	       259	fsck.c	FUNCTION_13	IF_2	CALL_2
0x93b	          0x4889c6	                            mov rsi, rax	       259	fsck.c	FUNCTION_13	IF_2	CALL_2
0x93e	      0xbf00000000	                              mov edi, 0	       259	fsck.c	FUNCTION_13	IF_2	CALL_2
0x943	      0xb800000000	                              mov eax, 0	       259	fsck.c	FUNCTION_13	IF_2	CALL_2
0x948	      0xe800000000	                          call 0x400098d	       259	fsck.c	FUNCTION_13	IF_2	CALL_2
0x94d	      0xe998010000	                           jmp 0x4000b2a	       261	fsck.c	FUNCTION_13	IF_2
0x952	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       276	fsck.c	FUNCTION_13	IF_3
0x956	            0x8b00	                    mov eax, dword [rax]	       276	fsck.c	FUNCTION_13	IF_3
0x958	          0xc1e804	                              shr eax, 4	       276	fsck.c	FUNCTION_13	IF_3
0x95b	      0x25ffffff07	                      and eax, 0x7ffffff	       276	fsck.c	FUNCTION_13	IF_3
0x960	          0x83e008	                              and eax, 8	       276	fsck.c	FUNCTION_13	IF_3
0x963	            0x85c0	                           test eax, eax	       276	fsck.c	FUNCTION_13	IF_3
0x965	     0xf857f010000	                           jne 0x4000b2a	       276	fsck.c	FUNCTION_13	IF_3
0x96b	    0x8b0500000000	            mov eax, dword [0x040009b1] 	       277	fsck.c	FUNCTION_13	IF_3	IF_4
0x971	            0x85c0	                           test eax, eax	       277	fsck.c	FUNCTION_13	IF_3	IF_4
0x973	            0x7430	                            je 0x40009e5	       277	fsck.c	FUNCTION_13	IF_3	IF_4
0x975	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       278	fsck.c	FUNCTION_13	IF_3	IF_4	CALL_5
0x979	          0x4889c7	                            mov rdi, rax	       278	fsck.c	FUNCTION_13	IF_3	IF_4	CALL_5
0x97c	      0xe82cf8ffff	                call sym.describe_object	       278	fsck.c	FUNCTION_13	IF_3	IF_4	CALL_5
0x981	          0x4889c3	                            mov rbx, rax	       278	fsck.c	FUNCTION_13	IF_3	IF_4	CALL_5
0x984	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       278	fsck.c	FUNCTION_13	IF_3	IF_4	CALL_5
0x988	          0x4889c7	                            mov rdi, rax	       278	fsck.c	FUNCTION_13	IF_3	IF_4	CALL_5
0x98b	      0xe8abf8ffff	                 call sym.printable_type	       278	fsck.c	FUNCTION_13	IF_3	IF_4	CALL_5
0x990	          0x4889da	                            mov rdx, rbx	       278	fsck.c	FUNCTION_13	IF_3	IF_4	CALL_5
0x993	          0x4889c6	                            mov rsi, rax	       278	fsck.c	FUNCTION_13	IF_3	IF_4	CALL_5
0x996	      0xbf00000000	                              mov edi, 0	       278	fsck.c	FUNCTION_13	IF_3	IF_4	CALL_5
0x99b	      0xb800000000	                              mov eax, 0	       278	fsck.c	FUNCTION_13	IF_3	IF_4	CALL_5
0x9a0	      0xe800000000	                          call 0x40009e5	       278	fsck.c	FUNCTION_13	IF_3	IF_4	CALL_5
0x9a5	    0x8b0500000000	            mov eax, dword [0x040009eb] 	       280	fsck.c	FUNCTION_13	IF_3	IF_5
0x9ab	            0x85c0	                           test eax, eax	       280	fsck.c	FUNCTION_13	IF_3	IF_5
0x9ad	     0xf8436010000	                            je 0x4000b29	       280	fsck.c	FUNCTION_13	IF_3	IF_5
0x9b3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       281	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_7
0x9b7	          0x4889c7	                            mov rdi, rax	       281	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_7
0x9ba	      0xe8eef7ffff	                call sym.describe_object	       281	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_7
0x9bf	          0x4889c2	                            mov rdx, rax	       281	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_7
0x9c2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       282	fsck.c	FUNCTION_13	IF_3	IF_5
0x9c6	           0xfb600	                   movzx eax, byte [rax]	       282	fsck.c	FUNCTION_13	IF_3	IF_5
0x9c9	          0x83e00e	                            and eax, 0xe	       282	fsck.c	FUNCTION_13	IF_3	IF_5
0x9cc	            0x3c02	                               cmp al, 2	       281	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_7
0x9ce	            0x7507	                           jne 0x4000a17	       281	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_7
0x9d0	      0xb800000000	                              mov eax, 0	       281	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_7
0x9d5	            0xeb05	                           jmp 0x4000a1c	       281	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_7
0x9d7	      0xb800000000	                              mov eax, 0	       281	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_7
0x9dc	          0x4889c6	                            mov rsi, rax	       281	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_7
0x9df	      0xbf00000000	                              mov edi, 0	       281	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_7
0x9e4	      0xb800000000	                              mov eax, 0	       281	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_7
0x9e9	      0xe800000000	                          call 0x4000a2e	       281	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_7
0x9ee	        0x488945e0	             mov qword [rbp - 0x20], rax	       281	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_7
0x9f2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       286	fsck.c	FUNCTION_13	IF_3	IF_5	IF_6	CALL_9
0x9f6	          0x4889c7	                            mov rdi, rax	       286	fsck.c	FUNCTION_13	IF_3	IF_5	IF_6	CALL_9
0x9f9	      0xe800000000	                          call 0x4000a3e	       286	fsck.c	FUNCTION_13	IF_3	IF_5	IF_6	CALL_9
0x9fe	            0x85c0	                           test eax, eax	       286	fsck.c	FUNCTION_13	IF_3	IF_5	IF_6	CALL_9
0xa00	            0x7425	                            je 0x4000a67	       286	fsck.c	FUNCTION_13	IF_3	IF_5	IF_6	CALL_9
0xa02	      0xbf00000000	                              mov edi, 0	       287	fsck.c	FUNCTION_13	IF_3	IF_5	IF_6	CALL_10
0xa07	      0xb800000000	                              mov eax, 0	       287	fsck.c	FUNCTION_13	IF_3	IF_5	IF_6	CALL_10
0xa0c	      0xe800000000	                          call 0x4000a51	       287	fsck.c	FUNCTION_13	IF_3	IF_5	IF_6	CALL_10
0xa11	      0xe8eaf5ffff	                    call sym.const_error	       287	fsck.c	FUNCTION_13	IF_3	IF_5	IF_6	CALL_10
0xa16	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       288	fsck.c	FUNCTION_13	IF_3	IF_5	IF_6	CALL_11
0xa1a	          0x4889c7	                            mov rdi, rax	       288	fsck.c	FUNCTION_13	IF_3	IF_5	IF_6	CALL_11
0xa1d	      0xe800000000	                          call 0x4000a62	       288	fsck.c	FUNCTION_13	IF_3	IF_5	IF_6	CALL_11
0xa22	      0xe9c3000000	                           jmp 0x4000b2a	       289	fsck.c	FUNCTION_13	IF_3	IF_5	IF_6
0xa27	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       291	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_12
0xa2b	      0xbe00000000	                              mov esi, 0	       291	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_12
0xa30	          0x4889c7	                            mov rdi, rax	       291	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_12
0xa33	      0xe800000000	                          call 0x4000a78	       291	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_12
0xa38	        0x488945e8	             mov qword [rbp - 0x18], rax	       291	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_12
0xa3c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       292	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7
0xa40	           0xfb600	                   movzx eax, byte [rax]	       292	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7
0xa43	          0x83e00e	                            and eax, 0xe	       292	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7
0xa46	            0x3c06	                               cmp al, 6	       292	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7
0xa48	            0x7542	                           jne 0x4000acc	       292	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7
0xa4a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       293	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7	IF_8	CALL_14
0xa4e	        0x488d5804	                      lea rbx, [rax + 4]	       293	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7	IF_8	CALL_14
0xa52	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       293	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7	IF_8	CALL_14
0xa56	          0x4889c7	                            mov rdi, rax	       293	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7	IF_8	CALL_14
0xa59	      0xe800000000	                          call 0x4000a9e	       293	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7	IF_8	CALL_14
0xa5e	      0xb901000000	                              mov ecx, 1	       293	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7	IF_8	CALL_14
0xa63	      0xba00000000	                              mov edx, 0	       293	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7	IF_8	CALL_14
0xa68	          0x4889de	                            mov rsi, rbx	       293	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7	IF_8	CALL_14
0xa6b	            0x89c7	                            mov edi, eax	       293	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7	IF_8	CALL_14
0xa6d	      0xe800000000	                          call 0x4000ab2	       293	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7	IF_8	CALL_14
0xa72	            0x85c0	                           test eax, eax	       293	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7	IF_8	CALL_14
0xa74	            0x743b	                            je 0x4000af1	       293	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7	IF_8	CALL_14
0xa76	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       294	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7	CALL_15
0xa7a	          0x4889c6	                            mov rsi, rax	       294	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7	CALL_15
0xa7d	      0xbf00000000	                              mov edi, 0	       294	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7	CALL_15
0xa82	      0xb800000000	                              mov eax, 0	       294	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7	CALL_15
0xa87	      0xe800000000	                          call 0x4000acc	       294	fsck.c	FUNCTION_13	IF_3	IF_5	IF_7	CALL_15
0xa8c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       296	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_17
0xa90	          0x4889c7	                            mov rdi, rax	       296	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_17
0xa93	      0xe815f7ffff	                call sym.describe_object	       296	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_17
0xa98	          0x4889c2	                            mov rdx, rax	       296	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_17
0xa9b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       296	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_17
0xa9f	      0xbe00000000	                              mov esi, 0	       296	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_17
0xaa4	          0x4889c7	                            mov rdi, rax	       296	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_17
0xaa7	      0xb800000000	                              mov eax, 0	       296	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_17
0xaac	      0xe800000000	                          call 0x4000af1	       296	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_17
0xab1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       297	fsck.c	FUNCTION_13	IF_3	IF_5	IF_9	CALL_18
0xab5	          0x4889c7	                            mov rdi, rax	       297	fsck.c	FUNCTION_13	IF_3	IF_5	IF_9	CALL_18
0xab8	      0xe800000000	                          call 0x4000afd	       297	fsck.c	FUNCTION_13	IF_3	IF_5	IF_9	CALL_18
0xabd	            0x85c0	                           test eax, eax	       297	fsck.c	FUNCTION_13	IF_3	IF_5	IF_9	CALL_18
0xabf	            0x7416	                            je 0x4000b17	       297	fsck.c	FUNCTION_13	IF_3	IF_5	IF_9	CALL_18
0xac1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       298	fsck.c	FUNCTION_13	IF_3	IF_5	IF_9	CALL_19
0xac5	          0x4889c6	                            mov rsi, rax	       298	fsck.c	FUNCTION_13	IF_3	IF_5	IF_9	CALL_19
0xac8	      0xbf00000000	                              mov edi, 0	       298	fsck.c	FUNCTION_13	IF_3	IF_5	IF_9	CALL_19
0xacd	      0xb800000000	                              mov eax, 0	       298	fsck.c	FUNCTION_13	IF_3	IF_5	IF_9	CALL_19
0xad2	      0xe800000000	                          call 0x4000b17	       298	fsck.c	FUNCTION_13	IF_3	IF_5	IF_9	CALL_19
0xad7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       300	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_20
0xadb	          0x4889c7	                            mov rdi, rax	       300	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_20
0xade	      0xe800000000	                          call 0x4000b23	       300	fsck.c	FUNCTION_13	IF_3	IF_5	CALL_20
0xae3	              0x90	                                     nop	       302	fsck.c	FUNCTION_13	IF_3
0xae4	            0xeb03	                           jmp 0x4000b29	       302	fsck.c	FUNCTION_13	IF_3
0xae6	              0x90	                                     nop	       252	fsck.c	FUNCTION_13	IF_1
0xae7	            0xeb01	                           jmp 0x4000b2a	       252	fsck.c	FUNCTION_13	IF_1
0xae9	              0x90	                                     nop	       302	fsck.c	FUNCTION_13	IF_3
0xaea	        0x4883c428	                           add rsp, 0x28	       310	fsck.c	FUNCTION_13
0xaee	              0x5b	                                 pop rbx	       310	fsck.c	FUNCTION_13
0xaef	              0x5d	                                 pop rbp	       310	fsck.c	FUNCTION_13
0xaf0	              0xc3	                                     ret	       310	fsck.c	FUNCTION_13
mark_object	FOR,0:SWITCH,0:WHILE,0:IF,6:ELSE,0:functions,0:CALL,15:DO,0	139
0x4cf	              0x55	                                push rbp	       130	fsck.c	FUNCTION_7
0x4d0	          0x4889e5	                            mov rbp, rsp	       130	fsck.c	FUNCTION_7
0x4d3	              0x53	                                push rbx	       130	fsck.c	FUNCTION_7
0x4d4	        0x4883ec38	                           sub rsp, 0x38	       130	fsck.c	FUNCTION_7
0x4d8	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       130	fsck.c	FUNCTION_7
0x4dc	          0x8975d4	             mov dword [rbp - 0x2c], esi	       130	fsck.c	FUNCTION_7
0x4df	        0x488955c8	             mov qword [rbp - 0x38], rdx	       130	fsck.c	FUNCTION_7
0x4e3	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       130	fsck.c	FUNCTION_7
0x4e7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       131	fsck.c	FUNCTION_7
0x4eb	        0x488945e8	             mov qword [rbp - 0x18], rax	       131	fsck.c	FUNCTION_7
0x4ef	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       138	fsck.c	FUNCTION_7	IF_1
0x4f4	            0x7577	                           jne 0x40005ad	       138	fsck.c	FUNCTION_7	IF_1
0x4f6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       140	fsck.c	FUNCTION_7	IF_1	CALL_1
0x4fa	          0x4889c7	                            mov rdi, rax	       140	fsck.c	FUNCTION_7	IF_1	CALL_1
0x4fd	      0xe8abfcffff	                call sym.describe_object	       140	fsck.c	FUNCTION_7	IF_1	CALL_1
0x502	          0x4889c3	                            mov rbx, rax	       140	fsck.c	FUNCTION_7	IF_1	CALL_1
0x505	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       140	fsck.c	FUNCTION_7	IF_1	CALL_1
0x509	          0x4889c7	                            mov rdi, rax	       140	fsck.c	FUNCTION_7	IF_1	CALL_1
0x50c	      0xe82afdffff	                 call sym.printable_type	       140	fsck.c	FUNCTION_7	IF_1	CALL_1
0x511	          0x4889da	                            mov rdx, rbx	       140	fsck.c	FUNCTION_7	IF_1	CALL_1
0x514	          0x4889c6	                            mov rsi, rax	       140	fsck.c	FUNCTION_7	IF_1	CALL_1
0x517	      0xbf00000000	                              mov edi, 0	       140	fsck.c	FUNCTION_7	IF_1	CALL_1
0x51c	      0xb800000000	                              mov eax, 0	       140	fsck.c	FUNCTION_7	IF_1	CALL_1
0x521	      0xe800000000	                          call 0x4000566	       140	fsck.c	FUNCTION_7	IF_1	CALL_1
0x526	        0x837dd408	               cmp dword [rbp - 0x2c], 8	       142	fsck.c	FUNCTION_7	IF_1	CALL_4
0x52a	            0x740c	                            je 0x4000578	       142	fsck.c	FUNCTION_7	IF_1	CALL_4
0x52c	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       143	fsck.c	FUNCTION_7	IF_1	CALL_5
0x52f	            0x89c7	                            mov edi, eax	       142	fsck.c	FUNCTION_7	IF_1	CALL_4
0x531	      0xe800000000	                          call 0x4000576	       142	fsck.c	FUNCTION_7	IF_1	CALL_4
0x536	            0xeb05	                           jmp 0x400057d	       142	fsck.c	FUNCTION_7	IF_1	CALL_4
0x538	      0xb800000000	                              mov eax, 0	       142	fsck.c	FUNCTION_7	IF_1	CALL_4
0x53d	      0xba00000000	                              mov edx, 0	       142	fsck.c	FUNCTION_7	IF_1	CALL_4
0x542	          0x4889c6	                            mov rsi, rax	       142	fsck.c	FUNCTION_7	IF_1	CALL_4
0x545	      0xbf00000000	                              mov edi, 0	       142	fsck.c	FUNCTION_7	IF_1	CALL_4
0x54a	      0xb800000000	                              mov eax, 0	       142	fsck.c	FUNCTION_7	IF_1	CALL_4
0x54f	      0xe800000000	                          call 0x4000594	       142	fsck.c	FUNCTION_7	IF_1	CALL_4
0x554	    0x8b0500000000	            mov eax, dword [0x0400059a] 	       144	fsck.c	FUNCTION_7	IF_1
0x55a	          0x83c802	                               or eax, 2	       144	fsck.c	FUNCTION_7	IF_1
0x55d	    0x890500000000	            mov dword [0x040005a3], eax 	       144	fsck.c	FUNCTION_7	IF_1
0x563	      0xb801000000	                              mov eax, 1	       145	fsck.c	FUNCTION_7	IF_1
0x568	      0xe95f010000	                           jmp 0x400070c	       145	fsck.c	FUNCTION_7	IF_1
0x56d	        0x837dd408	               cmp dword [rbp - 0x2c], 8	       148	fsck.c	FUNCTION_7	IF_2
0x571	            0x7425	                            je 0x40005d8	       148	fsck.c	FUNCTION_7	IF_2
0x573	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       148	fsck.c	FUNCTION_7	IF_2
0x577	           0xfb600	                   movzx eax, byte [rax]	       148	fsck.c	FUNCTION_7	IF_2
0x57a	            0xd0e8	                               shr al, 1	       148	fsck.c	FUNCTION_7	IF_2
0x57c	          0x83e007	                              and eax, 7	       148	fsck.c	FUNCTION_7	IF_2
0x57f	           0xfb6c0	                           movzx eax, al	       148	fsck.c	FUNCTION_7	IF_2
0x582	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	       148	fsck.c	FUNCTION_7	IF_2
0x585	            0x7411	                            je 0x40005d8	       148	fsck.c	FUNCTION_7	IF_2
0x587	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       150	fsck.c	FUNCTION_7	CALL_6
0x58b	      0xbe00000000	                              mov esi, 0	       150	fsck.c	FUNCTION_7	CALL_6
0x590	          0x4889c7	                            mov rdi, rax	       150	fsck.c	FUNCTION_7	CALL_6
0x593	      0xe8b4feffff	                       call sym.objerror	       150	fsck.c	FUNCTION_7	CALL_6
0x598	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       152	fsck.c	FUNCTION_7	IF_3
0x59c	            0x8b00	                    mov eax, dword [rax]	       152	fsck.c	FUNCTION_7	IF_3
0x59e	          0xc1e804	                              shr eax, 4	       152	fsck.c	FUNCTION_7	IF_3
0x5a1	      0x25ffffff07	                      and eax, 0x7ffffff	       152	fsck.c	FUNCTION_7	IF_3
0x5a6	          0x83e001	                              and eax, 1	       152	fsck.c	FUNCTION_7	IF_3
0x5a9	            0x85c0	                           test eax, eax	       152	fsck.c	FUNCTION_7	IF_3
0x5ab	            0x740a	                            je 0x40005f7	       152	fsck.c	FUNCTION_7	IF_3
0x5ad	      0xb800000000	                              mov eax, 0	       153	fsck.c	FUNCTION_7	IF_3
0x5b2	      0xe915010000	                           jmp 0x400070c	       153	fsck.c	FUNCTION_7	IF_3
0x5b7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       154	fsck.c	FUNCTION_7
0x5bb	            0x8b00	                    mov eax, dword [rax]	       154	fsck.c	FUNCTION_7
0x5bd	          0xc1e804	                              shr eax, 4	       154	fsck.c	FUNCTION_7
0x5c0	      0x25ffffff07	                      and eax, 0x7ffffff	       154	fsck.c	FUNCTION_7
0x5c5	          0x83c801	                               or eax, 1	       154	fsck.c	FUNCTION_7
0x5c8	            0x89c2	                            mov edx, eax	       154	fsck.c	FUNCTION_7
0x5ca	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       154	fsck.c	FUNCTION_7
0x5ce	    0x81e2ffffff07	                      and edx, 0x7ffffff	       154	fsck.c	FUNCTION_7
0x5d4	            0x89d1	                            mov ecx, edx	       154	fsck.c	FUNCTION_7
0x5d6	          0xc1e104	                              shl ecx, 4	       154	fsck.c	FUNCTION_7
0x5d9	            0x8b10	                    mov edx, dword [rax]	       154	fsck.c	FUNCTION_7
0x5db	    0x81e20f000080	                     and edx, 0x8000000f	       154	fsck.c	FUNCTION_7
0x5e1	             0x9ca	                             or edx, ecx	       154	fsck.c	FUNCTION_7
0x5e3	            0x8910	                    mov dword [rax], edx	       154	fsck.c	FUNCTION_7
0x5e5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       156	fsck.c	FUNCTION_7	IF_4	CALL_7
0x5e9	        0x4883c004	                              add rax, 4	       156	fsck.c	FUNCTION_7	IF_4	CALL_7
0x5ed	          0x4889c7	                            mov rdi, rax	       156	fsck.c	FUNCTION_7	IF_4	CALL_7
0x5f0	      0xe800000000	                          call 0x4000635	       156	fsck.c	FUNCTION_7	IF_4	CALL_7
0x5f5	            0x85c0	                           test eax, eax	       156	fsck.c	FUNCTION_7	IF_4	CALL_7
0x5f7	            0x740a	                            je 0x4000643	       156	fsck.c	FUNCTION_7	IF_4	CALL_7
0x5f9	      0xb800000000	                              mov eax, 0	       162	fsck.c	FUNCTION_7	IF_4
0x5fe	      0xe9c9000000	                           jmp 0x400070c	       162	fsck.c	FUNCTION_7	IF_4
0x603	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       164	fsck.c	FUNCTION_7	IF_5
0x607	            0x8b00	                    mov eax, dword [rax]	       164	fsck.c	FUNCTION_7	IF_5
0x609	          0xc1e804	                              shr eax, 4	       164	fsck.c	FUNCTION_7	IF_5
0x60c	      0x25ffffff07	                      and eax, 0x7ffffff	       164	fsck.c	FUNCTION_7	IF_5
0x611	          0x83e004	                              and eax, 4	       164	fsck.c	FUNCTION_7	IF_5
0x614	            0x85c0	                           test eax, eax	       164	fsck.c	FUNCTION_7	IF_5
0x616	     0xf8595000000	                           jne 0x40006f1	       164	fsck.c	FUNCTION_7	IF_5
0x61c	      0x48837de800	               cmp qword [rbp - 0x18], 0	       165	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_8
0x621	     0xf8483000000	                            je 0x40006ea	       165	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_8
0x627	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       165	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_8
0x62b	        0x4883c004	                              add rax, 4	       165	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_8
0x62f	          0x4889c7	                            mov rdi, rax	       165	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_8
0x632	      0xe800000000	                          call 0x4000677	       165	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_8
0x637	            0x85c0	                           test eax, eax	       165	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_8
0x639	            0x756f	                           jne 0x40006ea	       165	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_8
0x63b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       166	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_9
0x63f	          0x4889c7	                            mov rdi, rax	       166	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_9
0x642	      0xe866fbffff	                call sym.describe_object	       166	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_9
0x647	          0x4889c3	                            mov rbx, rax	       166	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_9
0x64a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       166	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_9
0x64e	          0x4889c7	                            mov rdi, rax	       166	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_9
0x651	      0xe8e5fbffff	                 call sym.printable_type	       166	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_9
0x656	          0x4889da	                            mov rdx, rbx	       166	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_9
0x659	          0x4889c6	                            mov rsi, rax	       166	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_9
0x65c	      0xbf00000000	                              mov edi, 0	       166	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_9
0x661	      0xb800000000	                              mov eax, 0	       166	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_9
0x666	      0xe800000000	                          call 0x40006ab	       166	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_9
0x66b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       168	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_12
0x66f	          0x4889c7	                            mov rdi, rax	       168	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_12
0x672	      0xe836fbffff	                call sym.describe_object	       168	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_12
0x677	          0x4889c3	                            mov rbx, rax	       168	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_12
0x67a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       168	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_12
0x67e	          0x4889c7	                            mov rdi, rax	       168	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_12
0x681	      0xe8b5fbffff	                 call sym.printable_type	       168	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_12
0x686	          0x4889da	                            mov rdx, rbx	       168	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_12
0x689	          0x4889c6	                            mov rsi, rax	       168	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_12
0x68c	      0xbf00000000	                              mov edi, 0	       168	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_12
0x691	      0xb800000000	                              mov eax, 0	       168	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_12
0x696	      0xe800000000	                          call 0x40006db	       168	fsck.c	FUNCTION_7	IF_5	IF_6	CALL_12
0x69b	    0x8b0500000000	            mov eax, dword [0x040006e1] 	       170	fsck.c	FUNCTION_7	IF_5	IF_6
0x6a1	          0x83c802	                               or eax, 2	       170	fsck.c	FUNCTION_7	IF_5	IF_6
0x6a4	    0x890500000000	            mov dword [0x040006ea], eax 	       170	fsck.c	FUNCTION_7	IF_5	IF_6
0x6aa	      0xb801000000	                              mov eax, 1	       172	fsck.c	FUNCTION_7	IF_5
0x6af	            0xeb1b	                           jmp 0x400070c	       172	fsck.c	FUNCTION_7	IF_5
0x6b1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       175	fsck.c	FUNCTION_7	CALL_15
0x6b5	      0xba00000000	                              mov edx, 0	       175	fsck.c	FUNCTION_7	CALL_15
0x6ba	      0xbe00000000	                              mov esi, 0	       175	fsck.c	FUNCTION_7	CALL_15
0x6bf	          0x4889c7	                            mov rdi, rax	       175	fsck.c	FUNCTION_7	CALL_15
0x6c2	      0xe800000000	                          call 0x4000707	       175	fsck.c	FUNCTION_7	CALL_15
0x6c7	      0xb800000000	                              mov eax, 0	       176	fsck.c	FUNCTION_7
0x6cc	        0x4883c438	                           add rsp, 0x38	       177	fsck.c	FUNCTION_7
0x6d0	              0x5b	                                 pop rbx	       177	fsck.c	FUNCTION_7
0x6d1	              0x5d	                                 pop rbp	       177	fsck.c	FUNCTION_7
0x6d2	              0xc3	                                     ret	       177	fsck.c	FUNCTION_7
fsck_cache_tree	FOR,1:SWITCH,0:WHILE,0:IF,5:ELSE,0:functions,0:CALL,9:DO,0	98
0x170f	              0x55	                                push rbp	       611	fsck.c	FUNCTION_29
0x1710	          0x4889e5	                            mov rbp, rsp	       611	fsck.c	FUNCTION_29
0x1713	        0x4883ec20	                           sub rsp, 0x20	       611	fsck.c	FUNCTION_29
0x1717	        0x48897de8	             mov qword [rbp - 0x18], rdi	       611	fsck.c	FUNCTION_29
0x171b	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       613	fsck.c	FUNCTION_29
0x1722	    0x8b0500000000	            mov eax, dword [0x04001768] 	       615	fsck.c	FUNCTION_29	IF_1
0x1728	            0x85c0	                           test eax, eax	       615	fsck.c	FUNCTION_29	IF_1
0x172a	            0x741e	                            je 0x400178a	       615	fsck.c	FUNCTION_29	IF_1
0x172c	    0x488b05000000	            mov rax, qword [0x04001773] 	       616	fsck.c	FUNCTION_29	CALL_1
0x1733	          0x4889c1	                            mov rcx, rax	       616	fsck.c	FUNCTION_29	CALL_1
0x1736	      0xba14000000	                           mov edx, 0x14	       616	fsck.c	FUNCTION_29	CALL_1
0x173b	      0xbe01000000	                              mov esi, 1	       616	fsck.c	FUNCTION_29	CALL_1
0x1740	      0xbf00000000	                              mov edi, 0	       616	fsck.c	FUNCTION_29	CALL_1
0x1745	      0xe800000000	                          call 0x400178a	       616	fsck.c	FUNCTION_29	CALL_1
0x174a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       618	fsck.c	FUNCTION_29	IF_2
0x174e	            0x8b00	                    mov eax, dword [rax]	       618	fsck.c	FUNCTION_29	IF_2
0x1750	            0x85c0	                           test eax, eax	       618	fsck.c	FUNCTION_29	IF_2
0x1752	     0xf88e4000000	                            js 0x400187c	       618	fsck.c	FUNCTION_29	IF_2
0x1758	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       619	fsck.c	FUNCTION_29	IF_2	CALL_2
0x175c	        0x4883c004	                              add rax, 4	       619	fsck.c	FUNCTION_29	IF_2	CALL_2
0x1760	          0x4889c7	                            mov rdi, rax	       619	fsck.c	FUNCTION_29	IF_2	CALL_2
0x1763	      0xe800000000	                          call 0x40017a8	       619	fsck.c	FUNCTION_29	IF_2	CALL_2
0x1768	        0x488945f8	                mov qword [rbp - 8], rax	       619	fsck.c	FUNCTION_29	IF_2	CALL_2
0x176c	      0x48837df800	                  cmp qword [rbp - 8], 0	       620	fsck.c	FUNCTION_29	IF_2	IF_3
0x1771	            0x7540	                           jne 0x40017f3	       620	fsck.c	FUNCTION_29	IF_2	IF_3
0x1773	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       621	fsck.c	FUNCTION_29	IF_2	IF_3	CALL_3
0x1777	        0x4883c004	                              add rax, 4	       621	fsck.c	FUNCTION_29	IF_2	IF_3	CALL_3
0x177b	          0x4889c7	                            mov rdi, rax	       621	fsck.c	FUNCTION_29	IF_2	IF_3	CALL_3
0x177e	      0xe800000000	                          call 0x40017c3	       621	fsck.c	FUNCTION_29	IF_2	IF_3	CALL_3
0x1783	          0x4889c6	                            mov rsi, rax	       621	fsck.c	FUNCTION_29	IF_2	IF_3	CALL_3
0x1786	      0xbf00000000	                              mov edi, 0	       621	fsck.c	FUNCTION_29	IF_2	IF_3	CALL_3
0x178b	      0xb800000000	                              mov eax, 0	       621	fsck.c	FUNCTION_29	IF_2	IF_3	CALL_3
0x1790	      0xe800000000	                          call 0x40017d5	       621	fsck.c	FUNCTION_29	IF_2	IF_3	CALL_3
0x1795	      0xe866e8ffff	                    call sym.const_error	       621	fsck.c	FUNCTION_29	IF_2	IF_3	CALL_3
0x179a	    0x8b0500000000	            mov eax, dword [0x040017e0] 	       623	fsck.c	FUNCTION_29	IF_2	IF_3
0x17a0	          0x83c808	                               or eax, 8	       623	fsck.c	FUNCTION_29	IF_2	IF_3
0x17a3	    0x890500000000	            mov dword [0x040017e9], eax 	       623	fsck.c	FUNCTION_29	IF_2	IF_3
0x17a9	      0xb801000000	                              mov eax, 1	       624	fsck.c	FUNCTION_29	IF_2	IF_3
0x17ae	      0xe9cb000000	                           jmp 0x40018be	       624	fsck.c	FUNCTION_29	IF_2	IF_3
0x17b3	        0x488b45f8	                mov rax, qword [rbp - 8]	       626	fsck.c	FUNCTION_29	IF_2
0x17b7	            0x8b00	                    mov eax, dword [rax]	       626	fsck.c	FUNCTION_29	IF_2
0x17b9	          0xc1e804	                              shr eax, 4	       626	fsck.c	FUNCTION_29	IF_2
0x17bc	      0x25ffffff07	                      and eax, 0x7ffffff	       626	fsck.c	FUNCTION_29	IF_2
0x17c1	          0x83c808	                               or eax, 8	       626	fsck.c	FUNCTION_29	IF_2
0x17c4	            0x89c2	                            mov edx, eax	       626	fsck.c	FUNCTION_29	IF_2
0x17c6	        0x488b45f8	                mov rax, qword [rbp - 8]	       626	fsck.c	FUNCTION_29	IF_2
0x17ca	    0x81e2ffffff07	                      and edx, 0x7ffffff	       626	fsck.c	FUNCTION_29	IF_2
0x17d0	            0x89d1	                            mov ecx, edx	       626	fsck.c	FUNCTION_29	IF_2
0x17d2	          0xc1e104	                              shl ecx, 4	       626	fsck.c	FUNCTION_29	IF_2
0x17d5	            0x8b10	                    mov edx, dword [rax]	       626	fsck.c	FUNCTION_29	IF_2
0x17d7	    0x81e20f000080	                     and edx, 0x8000000f	       626	fsck.c	FUNCTION_29	IF_2
0x17dd	             0x9ca	                             or edx, ecx	       626	fsck.c	FUNCTION_29	IF_2
0x17df	            0x8910	                    mov dword [rax], edx	       626	fsck.c	FUNCTION_29	IF_2
0x17e1	    0x8b0500000000	            mov eax, dword [0x04001827] 	       627	fsck.c	FUNCTION_29	IF_2	IF_4
0x17e7	            0x85c0	                           test eax, eax	       627	fsck.c	FUNCTION_29	IF_2	IF_4
0x17e9	            0x7423	                            je 0x400184e	       627	fsck.c	FUNCTION_29	IF_2	IF_4
0x17eb	      0xbf00000000	                              mov edi, 0	       629	fsck.c	FUNCTION_29	IF_2	CALL_6
0x17f0	      0xe800000000	                          call 0x4001835	       629	fsck.c	FUNCTION_29	IF_2	CALL_6
0x17f5	          0x4889c2	                            mov rdx, rax	       629	fsck.c	FUNCTION_29	IF_2	CALL_6
0x17f8	    0x488b05000000	            mov rax, qword [0x0400183f] 	       628	fsck.c	FUNCTION_29	IF_2	IF_4	CALL_5
0x17ff	        0x488b4df8	                mov rcx, qword [rbp - 8]	       628	fsck.c	FUNCTION_29	IF_2	IF_4	CALL_5
0x1803	          0x4889ce	                            mov rsi, rcx	       628	fsck.c	FUNCTION_29	IF_2	IF_4	CALL_5
0x1806	          0x4889c7	                            mov rdi, rax	       628	fsck.c	FUNCTION_29	IF_2	IF_4	CALL_5
0x1809	      0xe800000000	                          call 0x400184e	       628	fsck.c	FUNCTION_29	IF_2	IF_4	CALL_5
0x180e	        0x488b45f8	                mov rax, qword [rbp - 8]	       630	fsck.c	FUNCTION_29	IF_2	CALL_7
0x1812	          0x4889c7	                            mov rdi, rax	       630	fsck.c	FUNCTION_29	IF_2	CALL_7
0x1815	      0xe8b9eeffff	          call sym.mark_object_reachable	       630	fsck.c	FUNCTION_29	IF_2	CALL_7
0x181a	        0x488b45f8	                mov rax, qword [rbp - 8]	       631	fsck.c	FUNCTION_29	IF_2	IF_5
0x181e	           0xfb600	                   movzx eax, byte [rax]	       631	fsck.c	FUNCTION_29	IF_2	IF_5
0x1821	          0x83e00e	                            and eax, 0xe	       631	fsck.c	FUNCTION_29	IF_2	IF_5
0x1824	            0x3c04	                               cmp al, 4	       631	fsck.c	FUNCTION_29	IF_2	IF_5
0x1826	            0x7414	                            je 0x400187c	       631	fsck.c	FUNCTION_29	IF_2	IF_5
0x1828	        0x488b45f8	                mov rax, qword [rbp - 8]	       632	fsck.c	FUNCTION_29	IF_2	CALL_8
0x182c	      0xbe00000000	                              mov esi, 0	       632	fsck.c	FUNCTION_29	IF_2	CALL_8
0x1831	          0x4889c7	                            mov rdi, rax	       632	fsck.c	FUNCTION_29	IF_2	CALL_8
0x1834	      0xe813ecffff	                       call sym.objerror	       632	fsck.c	FUNCTION_29	IF_2	CALL_8
0x1839	           0x945f4	               or dword [rbp - 0xc], eax	       632	fsck.c	FUNCTION_29	IF_2	CALL_8
0x183c	    0xc745f0000000	               mov dword [rbp - 0x10], 0	       634	fsck.c	FUNCTION_29	FOR_1
0x1843	            0xeb2a	                           jmp 0x40018af	       634	fsck.c	FUNCTION_29	FOR_1
0x1845	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       635	fsck.c	FUNCTION_29	CALL_9
0x1849	        0x488b4020	            mov rax, qword [rax + 0x20] 	       635	fsck.c	FUNCTION_29	CALL_9
0x184d	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       635	fsck.c	FUNCTION_29	CALL_9
0x1850	          0x4863d2	                         movsxd rdx, edx	       635	fsck.c	FUNCTION_29	CALL_9
0x1853	        0x48c1e203	                              shl rdx, 3	       635	fsck.c	FUNCTION_29	CALL_9
0x1857	          0x4801d0	                            add rax, rdx	       635	fsck.c	FUNCTION_29	CALL_9
0x185a	          0x488b00	                    mov rax, qword [rax]	       635	fsck.c	FUNCTION_29	CALL_9
0x185d	          0x488b00	                    mov rax, qword [rax]	       635	fsck.c	FUNCTION_29	CALL_9
0x1860	          0x4889c7	                            mov rdi, rax	       635	fsck.c	FUNCTION_29	CALL_9
0x1863	      0xe8a7feffff	                call sym.fsck_cache_tree	       635	fsck.c	FUNCTION_29	CALL_9
0x1868	           0x945f4	               or dword [rbp - 0xc], eax	       635	fsck.c	FUNCTION_29	CALL_9
0x186b	        0x8345f001	               add dword [rbp - 0x10], 1	       634	fsck.c	FUNCTION_29	FOR_1
0x186f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       634	fsck.c	FUNCTION_29	FOR_1
0x1873	          0x8b4018	            mov eax, dword [rax + 0x18] 	       634	fsck.c	FUNCTION_29	FOR_1
0x1876	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	       634	fsck.c	FUNCTION_29	FOR_1
0x1879	            0x7fca	                            jg 0x4001885	       634	fsck.c	FUNCTION_29	FOR_1
0x187b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       636	fsck.c	FUNCTION_29
0x187e	              0xc9	                                   leave	       637	fsck.c	FUNCTION_29
0x187f	              0xc3	                                     ret	       637	fsck.c	FUNCTION_29
mark_object_reachable	FOR,0:SWITCH,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,1:DO,0	13
0x6d3	              0x55	                                push rbp	       180	fsck.c	FUNCTION_8
0x6d4	          0x4889e5	                            mov rbp, rsp	       180	fsck.c	FUNCTION_8
0x6d7	        0x4883ec10	                           sub rsp, 0x10	       180	fsck.c	FUNCTION_8
0x6db	        0x48897df8	                mov qword [rbp - 8], rdi	       180	fsck.c	FUNCTION_8
0x6df	        0x488b45f8	                mov rax, qword [rbp - 8]	       181	fsck.c	FUNCTION_8	CALL_1
0x6e3	      0xb900000000	                              mov ecx, 0	       181	fsck.c	FUNCTION_8	CALL_1
0x6e8	      0xba00000000	                              mov edx, 0	       181	fsck.c	FUNCTION_8	CALL_1
0x6ed	      0xbe08000000	                              mov esi, 8	       181	fsck.c	FUNCTION_8	CALL_1
0x6f2	          0x4889c7	                            mov rdi, rax	       181	fsck.c	FUNCTION_8	CALL_1
0x6f5	      0xe8d5fdffff	                    call sym.mark_object	       181	fsck.c	FUNCTION_8	CALL_1
0x6fa	              0x90	                                     nop	       182	fsck.c	FUNCTION_8
0x6fb	              0xc9	                                   leave	       182	fsck.c	FUNCTION_8
0x6fc	              0xc3	                                     ret	       182	fsck.c	FUNCTION_8
fsck_object_dir	FOR,0:SWITCH,0:WHILE,0:IF,2:ELSE,0:functions,0:CALL,6:DO,0	48
0x14f2	              0x55	                                push rbp	       564	fsck.c	FUNCTION_27
0x14f3	          0x4889e5	                            mov rbp, rsp	       564	fsck.c	FUNCTION_27
0x14f6	        0x4883ec20	                           sub rsp, 0x20	       564	fsck.c	FUNCTION_27
0x14fa	        0x48897de8	             mov qword [rbp - 0x18], rdi	       564	fsck.c	FUNCTION_27
0x14fe	    0x64488b042528	                mov rax, qword fs:[0x28]	       564	fsck.c	FUNCTION_27
0x1507	        0x488945f8	                mov qword [rbp - 8], rax	       564	fsck.c	FUNCTION_27
0x150b	            0x31c0	                            xor eax, eax	       564	fsck.c	FUNCTION_27
0x150d	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       565	fsck.c	FUNCTION_27
0x1515	    0x8b0500000000	            mov eax, dword [0x0400155b] 	       567	fsck.c	FUNCTION_27	IF_1
0x151b	            0x85c0	                           test eax, eax	       567	fsck.c	FUNCTION_27	IF_1
0x151d	            0x741e	                            je 0x400157d	       567	fsck.c	FUNCTION_27	IF_1
0x151f	    0x488b05000000	            mov rax, qword [0x04001566] 	       568	fsck.c	FUNCTION_27	CALL_1
0x1526	          0x4889c1	                            mov rcx, rax	       568	fsck.c	FUNCTION_27	CALL_1
0x1529	      0xba1a000000	                           mov edx, 0x1a	       568	fsck.c	FUNCTION_27	CALL_1
0x152e	      0xbe01000000	                              mov esi, 1	       568	fsck.c	FUNCTION_27	CALL_1
0x1533	      0xbf00000000	                              mov edi, 0	       568	fsck.c	FUNCTION_27	CALL_1
0x1538	      0xe800000000	                          call 0x400157d	       568	fsck.c	FUNCTION_27	CALL_1
0x153d	    0x8b0500000000	            mov eax, dword [0x04001583] 	       570	fsck.c	FUNCTION_27	IF_2
0x1543	            0x85c0	                           test eax, eax	       570	fsck.c	FUNCTION_27	IF_2
0x1545	            0x741b	                            je 0x40015a2	       570	fsck.c	FUNCTION_27	IF_2
0x1547	      0xbf00000000	                              mov edi, 0	       571	fsck.c	FUNCTION_27	CALL_3
0x154c	      0xe8dfebffff	                               call sym.	       571	fsck.c	FUNCTION_27	CALL_3
0x1551	      0xbe00010000	                          mov esi, 0x100	       571	fsck.c	FUNCTION_27	CALL_3
0x1556	          0x4889c7	                            mov rdi, rax	       571	fsck.c	FUNCTION_27	CALL_3
0x1559	      0xe800000000	                          call 0x400159e	       571	fsck.c	FUNCTION_27	CALL_3
0x155e	        0x488945f0	             mov qword [rbp - 0x10], rax	       571	fsck.c	FUNCTION_27	CALL_3
0x1562	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       573	fsck.c	FUNCTION_27	CALL_4
0x1566	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       573	fsck.c	FUNCTION_27	CALL_4
0x156a	          0x4989d0	                             mov r8, rdx	       573	fsck.c	FUNCTION_27	CALL_4
0x156d	      0xb900000000	                              mov ecx, 0	       573	fsck.c	FUNCTION_27	CALL_4
0x1572	      0xba00000000	                              mov edx, 0	       573	fsck.c	FUNCTION_27	CALL_4
0x1577	      0xbe00000000	                              mov esi, 0	       573	fsck.c	FUNCTION_27	CALL_4
0x157c	          0x4889c7	                            mov rdi, rax	       573	fsck.c	FUNCTION_27	CALL_4
0x157f	      0xe800000000	                          call 0x40015c4	       573	fsck.c	FUNCTION_27	CALL_4
0x1584	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       575	fsck.c	FUNCTION_27	CALL_5
0x1588	      0xbe00010000	                          mov esi, 0x100	       575	fsck.c	FUNCTION_27	CALL_5
0x158d	          0x4889c7	                            mov rdi, rax	       575	fsck.c	FUNCTION_27	CALL_5
0x1590	      0xe800000000	                          call 0x40015d5	       575	fsck.c	FUNCTION_27	CALL_5
0x1595	        0x488d45f0	                   lea rax, [rbp - 0x10]	       576	fsck.c	FUNCTION_27	CALL_6
0x1599	          0x4889c7	                            mov rdi, rax	       576	fsck.c	FUNCTION_27	CALL_6
0x159c	      0xe800000000	                          call 0x40015e1	       576	fsck.c	FUNCTION_27	CALL_6
0x15a1	              0x90	                                     nop	       577	fsck.c	FUNCTION_27
0x15a2	        0x488b45f8	                mov rax, qword [rbp - 8]	       577	fsck.c	FUNCTION_27
0x15a6	    0x644833042528	                xor rax, qword fs:[0x28]	       577	fsck.c	FUNCTION_27
0x15af	            0x7405	                            je 0x40015f6	       577	fsck.c	FUNCTION_27
0x15b1	      0xe800000000	                          call 0x40015f6	       577	fsck.c	FUNCTION_27
0x15b6	              0xc9	                                   leave	       577	fsck.c	FUNCTION_27
0x15b7	              0xc3	                                     ret	       577	fsck.c	FUNCTION_27
fsck_handle_reflog	FOR,0:SWITCH,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,1:DO,0	15
0x1098	              0x55	                                push rbp	       445	fsck.c	FUNCTION_20
0x1099	          0x4889e5	                            mov rbp, rsp	       445	fsck.c	FUNCTION_20
0x109c	        0x4883ec20	                           sub rsp, 0x20	       445	fsck.c	FUNCTION_20
0x10a0	        0x48897df8	                mov qword [rbp - 8], rdi	       445	fsck.c	FUNCTION_20
0x10a4	        0x488975f0	             mov qword [rbp - 0x10], rsi	       445	fsck.c	FUNCTION_20
0x10a8	          0x8955ec	             mov dword [rbp - 0x14], edx	       445	fsck.c	FUNCTION_20
0x10ab	        0x48894de0	             mov qword [rbp - 0x20], rcx	       445	fsck.c	FUNCTION_20
0x10af	        0x488b55f8	                mov rdx, qword [rbp - 8]	       446	fsck.c	FUNCTION_20	CALL_1
0x10b3	        0x488b45f8	                mov rax, qword [rbp - 8]	       446	fsck.c	FUNCTION_20	CALL_1
0x10b7	      0xbe00000000	                              mov esi, 0	       446	fsck.c	FUNCTION_20	CALL_1
0x10bc	          0x4889c7	                            mov rdi, rax	       446	fsck.c	FUNCTION_20	CALL_1
0x10bf	      0xe800000000	                          call 0x4001104	       446	fsck.c	FUNCTION_20	CALL_1
0x10c4	      0xb800000000	                              mov eax, 0	       447	fsck.c	FUNCTION_20
0x10c9	              0xc9	                                   leave	       448	fsck.c	FUNCTION_20
0x10ca	              0xc3	                                     ret	       448	fsck.c	FUNCTION_20
fsck_cruft	FOR,0:SWITCH,0:WHILE,0:IF,1:ELSE,0:functions,0:CALL,2:DO,0	21
0x1474	              0x55	                                push rbp	       551	fsck.c	FUNCTION_25
0x1475	          0x4889e5	                            mov rbp, rsp	       551	fsck.c	FUNCTION_25
0x1478	        0x4883ec20	                           sub rsp, 0x20	       551	fsck.c	FUNCTION_25
0x147c	        0x48897df8	                mov qword [rbp - 8], rdi	       551	fsck.c	FUNCTION_25
0x1480	        0x488975f0	             mov qword [rbp - 0x10], rsi	       551	fsck.c	FUNCTION_25
0x1484	        0x488955e8	             mov qword [rbp - 0x18], rdx	       551	fsck.c	FUNCTION_25
0x1488	        0x488b45f8	                mov rax, qword [rbp - 8]	       552	fsck.c	FUNCTION_25	IF_1	CALL_1
0x148c	      0xbe00000000	                              mov esi, 0	       552	fsck.c	FUNCTION_25	IF_1	CALL_1
0x1491	          0x4889c7	                            mov rdi, rax	       552	fsck.c	FUNCTION_25	IF_1	CALL_1
0x1494	      0xe800000000	                          call 0x40014d9	       552	fsck.c	FUNCTION_25	IF_1	CALL_1
0x1499	            0x85c0	                           test eax, eax	       552	fsck.c	FUNCTION_25	IF_1	CALL_1
0x149b	            0x751d	                           jne 0x40014fa	       552	fsck.c	FUNCTION_25	IF_1	CALL_1
0x149d	    0x488b05000000	            mov rax, qword [0x040014e4] 	       553	fsck.c	FUNCTION_25	CALL_2
0x14a4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       553	fsck.c	FUNCTION_25	CALL_2
0x14a8	      0xbe00000000	                              mov esi, 0	       553	fsck.c	FUNCTION_25	CALL_2
0x14ad	          0x4889c7	                            mov rdi, rax	       553	fsck.c	FUNCTION_25	CALL_2
0x14b0	      0xb800000000	                              mov eax, 0	       553	fsck.c	FUNCTION_25	CALL_2
0x14b5	      0xe800000000	                          call 0x40014fa	       553	fsck.c	FUNCTION_25	CALL_2
0x14ba	      0xb800000000	                              mov eax, 0	       554	fsck.c	FUNCTION_25
0x14bf	              0xc9	                                   leave	       555	fsck.c	FUNCTION_25
0x14c0	              0xc3	                                     ret	       555	fsck.c	FUNCTION_25
fsck_handle_reflog_ent	FOR,0:SWITCH,0:WHILE,0:IF,1:ELSE,0:functions,0:CALL,5:DO,0	46
0xff0	              0x55	                                push rbp	       431	fsck.c	FUNCTION_19
0xff1	          0x4889e5	                            mov rbp, rsp	       431	fsck.c	FUNCTION_19
0xff4	              0x53	                                push rbx	       431	fsck.c	FUNCTION_19
0xff5	        0x4883ec48	                           sub rsp, 0x48	       431	fsck.c	FUNCTION_19
0xff9	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       431	fsck.c	FUNCTION_19
0xffd	        0x488975d0	             mov qword [rbp - 0x30], rsi	       431	fsck.c	FUNCTION_19
0x1001	        0x488955c8	             mov qword [rbp - 0x38], rdx	       431	fsck.c	FUNCTION_19
0x1005	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       431	fsck.c	FUNCTION_19
0x1009	        0x448945bc	             mov dword [rbp - 0x44], r8d	       431	fsck.c	FUNCTION_19
0x100d	        0x4c894db0	              mov qword [rbp - 0x50], r9	       431	fsck.c	FUNCTION_19
0x1011	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       432	fsck.c	FUNCTION_19
0x1015	        0x488945e8	             mov qword [rbp - 0x18], rax	       432	fsck.c	FUNCTION_19
0x1019	    0x8b0500000000	            mov eax, dword [0x0400105f] 	       434	fsck.c	FUNCTION_19	IF_1
0x101f	            0x85c0	                           test eax, eax	       434	fsck.c	FUNCTION_19	IF_1
0x1021	            0x743a	                            je 0x400109d	       434	fsck.c	FUNCTION_19	IF_1
0x1023	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       435	fsck.c	FUNCTION_19	IF_1	CALL_1
0x1027	          0x4889c7	                            mov rdi, rax	       435	fsck.c	FUNCTION_19	IF_1	CALL_1
0x102a	      0xe800000000	                          call 0x400106f	       435	fsck.c	FUNCTION_19	IF_1	CALL_1
0x102f	          0x4889c3	                            mov rbx, rax	       435	fsck.c	FUNCTION_19	IF_1	CALL_1
0x1032	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       435	fsck.c	FUNCTION_19	IF_1	CALL_1
0x1036	          0x4889c7	                            mov rdi, rax	       435	fsck.c	FUNCTION_19	IF_1	CALL_1
0x1039	      0xe800000000	                          call 0x400107e	       435	fsck.c	FUNCTION_19	IF_1	CALL_1
0x103e	          0x4889c2	                            mov rdx, rax	       435	fsck.c	FUNCTION_19	IF_1	CALL_1
0x1041	    0x488b05000000	            mov rax, qword [0x04001088] 	       435	fsck.c	FUNCTION_19	IF_1	CALL_1
0x1048	          0x4889d9	                            mov rcx, rbx	       435	fsck.c	FUNCTION_19	IF_1	CALL_1
0x104b	      0xbe00000000	                              mov esi, 0	       435	fsck.c	FUNCTION_19	IF_1	CALL_1
0x1050	          0x4889c7	                            mov rdi, rax	       435	fsck.c	FUNCTION_19	IF_1	CALL_1
0x1053	      0xb800000000	                              mov eax, 0	       435	fsck.c	FUNCTION_19	IF_1	CALL_1
0x1058	      0xe800000000	                          call 0x400109d	       435	fsck.c	FUNCTION_19	IF_1	CALL_1
0x105d	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       438	fsck.c	FUNCTION_19	CALL_4
0x1061	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       438	fsck.c	FUNCTION_19	CALL_4
0x1065	      0xba00000000	                              mov edx, 0	       438	fsck.c	FUNCTION_19	CALL_4
0x106a	          0x4889ce	                            mov rsi, rcx	       438	fsck.c	FUNCTION_19	CALL_4
0x106d	          0x4889c7	                            mov rdi, rax	       438	fsck.c	FUNCTION_19	CALL_4
0x1070	      0xe853feffff	         call sym.fsck_handle_reflog_oid	       438	fsck.c	FUNCTION_19	CALL_4
0x1075	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       439	fsck.c	FUNCTION_19	CALL_5
0x1079	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       439	fsck.c	FUNCTION_19	CALL_5
0x107d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       439	fsck.c	FUNCTION_19	CALL_5
0x1081	          0x4889ce	                            mov rsi, rcx	       439	fsck.c	FUNCTION_19	CALL_5
0x1084	          0x4889c7	                            mov rdi, rax	       439	fsck.c	FUNCTION_19	CALL_5
0x1087	      0xe83cfeffff	         call sym.fsck_handle_reflog_oid	       439	fsck.c	FUNCTION_19	CALL_5
0x108c	      0xb800000000	                              mov eax, 0	       440	fsck.c	FUNCTION_19
0x1091	        0x4883c448	                           add rsp, 0x48	       441	fsck.c	FUNCTION_19
0x1095	              0x5b	                                 pop rbx	       441	fsck.c	FUNCTION_19
0x1096	              0x5d	                                 pop rbp	       441	fsck.c	FUNCTION_19
0x1097	              0xc3	                                     ret	       441	fsck.c	FUNCTION_19
fsck_subdir	FOR,0:SWITCH,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,1:DO,0	16
0x14c1	              0x55	                                push rbp	       558	fsck.c	FUNCTION_26
0x14c2	          0x4889e5	                            mov rbp, rsp	       558	fsck.c	FUNCTION_26
0x14c5	        0x4883ec20	                           sub rsp, 0x20	       558	fsck.c	FUNCTION_26
0x14c9	          0x897dfc	                mov dword [rbp - 4], edi	       558	fsck.c	FUNCTION_26
0x14cc	        0x488975f0	             mov qword [rbp - 0x10], rsi	       558	fsck.c	FUNCTION_26
0x14d0	        0x488955e8	             mov qword [rbp - 0x18], rdx	       558	fsck.c	FUNCTION_26
0x14d4	          0x8b45fc	                mov eax, dword [rbp - 4]	       559	fsck.c	FUNCTION_26	CALL_1
0x14d7	          0x83c001	                              add eax, 1	       559	fsck.c	FUNCTION_26	CALL_1
0x14da	            0x89c2	                            mov edx, eax	       559	fsck.c	FUNCTION_26	CALL_1
0x14dc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       559	fsck.c	FUNCTION_26	CALL_1
0x14e0	          0x4889d6	                            mov rsi, rdx	       559	fsck.c	FUNCTION_26	CALL_1
0x14e3	          0x4889c7	                            mov rdi, rax	       559	fsck.c	FUNCTION_26	CALL_1
0x14e6	      0xe800000000	                          call 0x400152b	       559	fsck.c	FUNCTION_26	CALL_1
0x14eb	      0xb800000000	                              mov eax, 0	       560	fsck.c	FUNCTION_26
0x14f0	              0xc9	                                   leave	       561	fsck.c	FUNCTION_26
0x14f1	              0xc3	                                     ret	       561	fsck.c	FUNCTION_26
get_default_heads	FOR,0:SWITCH,0:WHILE,0:IF,3:ELSE,0:functions,0:CALL,5:DO,0	36
0x122c	              0x55	                                push rbp	       485	fsck.c	FUNCTION_22
0x122d	          0x4889e5	                            mov rbp, rsp	       485	fsck.c	FUNCTION_22
0x1230	    0x488b05000000	            mov rax, qword [0x04001277] 	       486	fsck.c	FUNCTION_22	IF_1	CALL_1
0x1237	          0x4885c0	                           test rax, rax	       486	fsck.c	FUNCTION_22	IF_1	CALL_1
0x123a	            0x7427	                            je 0x40012a3	       486	fsck.c	FUNCTION_22	IF_1	CALL_1
0x123c	      0xbf00000000	                              mov edi, 0	       486	fsck.c	FUNCTION_22	IF_1	CALL_1
0x1241	      0xe840efffff	                    call sym.is_null_oid	       486	fsck.c	FUNCTION_22	IF_1	CALL_1
0x1246	            0x85c0	                           test eax, eax	       486	fsck.c	FUNCTION_22	IF_1	CALL_1
0x1248	            0x7519	                           jne 0x40012a3	       486	fsck.c	FUNCTION_22	IF_1	CALL_1
0x124a	      0xb900000000	                              mov ecx, 0	       487	fsck.c	FUNCTION_22	CALL_2
0x124f	      0xba00000000	                              mov edx, 0	       487	fsck.c	FUNCTION_22	CALL_2
0x1254	      0xbe00000000	                              mov esi, 0	       487	fsck.c	FUNCTION_22	CALL_2
0x1259	      0xbf00000000	                              mov edi, 0	       487	fsck.c	FUNCTION_22	CALL_2
0x125e	      0xe868feffff	                call sym.fsck_handle_ref	       487	fsck.c	FUNCTION_22	CALL_2
0x1263	      0xbe00000000	                              mov esi, 0	       488	fsck.c	FUNCTION_22	CALL_3
0x1268	      0xbf00000000	                              mov edi, 0	       488	fsck.c	FUNCTION_22	CALL_3
0x126d	      0xe800000000	                          call 0x40012b2	       488	fsck.c	FUNCTION_22	CALL_3
0x1272	    0x8b0500000000	            mov eax, dword [0x040012b8] 	       489	fsck.c	FUNCTION_22	IF_2
0x1278	            0x85c0	                           test eax, eax	       489	fsck.c	FUNCTION_22	IF_2
0x127a	            0x740f	                            je 0x40012cb	       489	fsck.c	FUNCTION_22	IF_2
0x127c	      0xbe00000000	                              mov esi, 0	       490	fsck.c	FUNCTION_22	CALL_4
0x1281	      0xbf00000000	                              mov edi, 0	       490	fsck.c	FUNCTION_22	CALL_4
0x1286	      0xe800000000	                          call 0x40012cb	       490	fsck.c	FUNCTION_22	CALL_4
0x128b	    0x8b0500000000	            mov eax, dword [0x040012d1] 	       504	fsck.c	FUNCTION_22	IF_3
0x1291	            0x85c0	                           test eax, eax	       504	fsck.c	FUNCTION_22	IF_3
0x1293	            0x7528	                           jne 0x40012fd	       504	fsck.c	FUNCTION_22	IF_3
0x1295	    0x488b05000000	            mov rax, qword [0x040012dc] 	       505	fsck.c	FUNCTION_22	IF_3	CALL_5
0x129c	          0x4889c1	                            mov rcx, rax	       505	fsck.c	FUNCTION_22	IF_3	CALL_5
0x129f	      0xba1e000000	                           mov edx, 0x1e	       505	fsck.c	FUNCTION_22	IF_3	CALL_5
0x12a4	      0xbe01000000	                              mov esi, 1	       505	fsck.c	FUNCTION_22	IF_3	CALL_5
0x12a9	      0xbf00000000	                              mov edi, 0	       505	fsck.c	FUNCTION_22	IF_3	CALL_5
0x12ae	      0xe800000000	                          call 0x40012f3	       505	fsck.c	FUNCTION_22	IF_3	CALL_5
0x12b3	    0xc70500000000	               mov dword [0x040012fd], 0	       506	fsck.c	FUNCTION_22	IF_3
0x12bd	              0x90	                                     nop	       508	fsck.c	FUNCTION_22
0x12be	              0x5d	                                 pop rbp	       508	fsck.c	FUNCTION_22
0x12bf	              0xc3	                                     ret	       508	fsck.c	FUNCTION_22
fsck_handle_ref	FOR,0:SWITCH,0:WHILE,0:IF,4:ELSE,0:functions,0:CALL,9:DO,0	92
0x10cb	              0x55	                                push rbp	       452	fsck.c	FUNCTION_21
0x10cc	          0x4889e5	                            mov rbp, rsp	       452	fsck.c	FUNCTION_21
0x10cf	        0x4883ec30	                           sub rsp, 0x30	       452	fsck.c	FUNCTION_21
0x10d3	        0x48897de8	             mov qword [rbp - 0x18], rdi	       452	fsck.c	FUNCTION_21
0x10d7	        0x488975e0	             mov qword [rbp - 0x20], rsi	       452	fsck.c	FUNCTION_21
0x10db	          0x8955dc	             mov dword [rbp - 0x24], edx	       452	fsck.c	FUNCTION_21
0x10de	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       452	fsck.c	FUNCTION_21
0x10e2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       455	fsck.c	FUNCTION_21	CALL_1
0x10e6	          0x4889c7	                            mov rdi, rax	       455	fsck.c	FUNCTION_21	CALL_1
0x10e9	      0xe800000000	                          call 0x400112e	       455	fsck.c	FUNCTION_21	CALL_1
0x10ee	        0x488945f8	                mov qword [rbp - 8], rax	       455	fsck.c	FUNCTION_21	CALL_1
0x10f2	      0x48837df800	                  cmp qword [rbp - 8], 0	       456	fsck.c	FUNCTION_21	IF_1
0x10f7	            0x756c	                           jne 0x40011a5	       456	fsck.c	FUNCTION_21	IF_1
0x10f9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       457	fsck.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x10fd	          0x4889c7	                            mov rdi, rax	       457	fsck.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x1100	      0xe800000000	                          call 0x4001145	       457	fsck.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x1105	            0x85c0	                           test eax, eax	       457	fsck.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x1107	            0x7419	                            je 0x4001162	       457	fsck.c	FUNCTION_21	IF_1	IF_2	CALL_2
0x1109	    0x8b0500000000	            mov eax, dword [0x0400114f] 	       462	fsck.c	FUNCTION_21	IF_1	IF_2
0x110f	          0x83c001	                              add eax, 1	       462	fsck.c	FUNCTION_21	IF_1	IF_2
0x1112	    0x890500000000	            mov dword [0x04001158], eax 	       462	fsck.c	FUNCTION_21	IF_1	IF_2
0x1118	      0xb800000000	                              mov eax, 0	       463	fsck.c	FUNCTION_21	IF_1	IF_2
0x111d	      0xe908010000	                           jmp 0x400126a	       463	fsck.c	FUNCTION_21	IF_1	IF_2
0x1122	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       465	fsck.c	FUNCTION_21	IF_1	CALL_4
0x1126	          0x4889c7	                            mov rdi, rax	       465	fsck.c	FUNCTION_21	IF_1	CALL_4
0x1129	      0xe800000000	                          call 0x400116e	       465	fsck.c	FUNCTION_21	IF_1	CALL_4
0x112e	          0x4889c2	                            mov rdx, rax	       465	fsck.c	FUNCTION_21	IF_1	CALL_4
0x1131	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       465	fsck.c	FUNCTION_21	IF_1	CALL_4
0x1135	          0x4889c6	                            mov rsi, rax	       465	fsck.c	FUNCTION_21	IF_1	CALL_4
0x1138	      0xbf00000000	                              mov edi, 0	       465	fsck.c	FUNCTION_21	IF_1	CALL_4
0x113d	      0xb800000000	                              mov eax, 0	       465	fsck.c	FUNCTION_21	IF_1	CALL_4
0x1142	      0xe800000000	                          call 0x4001187	       465	fsck.c	FUNCTION_21	IF_1	CALL_4
0x1147	      0xe8b4eeffff	                    call sym.const_error	       465	fsck.c	FUNCTION_21	IF_1	CALL_4
0x114c	    0x8b0500000000	            mov eax, dword [0x04001192] 	       466	fsck.c	FUNCTION_21	IF_1
0x1152	          0x83c802	                               or eax, 2	       466	fsck.c	FUNCTION_21	IF_1
0x1155	    0x890500000000	            mov dword [0x0400119b], eax 	       466	fsck.c	FUNCTION_21	IF_1
0x115b	      0xb800000000	                              mov eax, 0	       468	fsck.c	FUNCTION_21	IF_1
0x1160	      0xe9c5000000	                           jmp 0x400126a	       468	fsck.c	FUNCTION_21	IF_1
0x1165	        0x488b45f8	                mov rax, qword [rbp - 8]	       470	fsck.c	FUNCTION_21	IF_3	CALL_5
0x1169	           0xfb600	                   movzx eax, byte [rax]	       470	fsck.c	FUNCTION_21	IF_3	CALL_5
0x116c	          0x83e00e	                            and eax, 0xe	       470	fsck.c	FUNCTION_21	IF_3	CALL_5
0x116f	            0x3c02	                               cmp al, 2	       470	fsck.c	FUNCTION_21	IF_3	CALL_5
0x1171	            0x743a	                            je 0x40011ed	       470	fsck.c	FUNCTION_21	IF_3	CALL_5
0x1173	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       470	fsck.c	FUNCTION_21	IF_3	CALL_5
0x1177	          0x4889c7	                            mov rdi, rax	       470	fsck.c	FUNCTION_21	IF_3	CALL_5
0x117a	      0xe800000000	                          call 0x40011bf	       470	fsck.c	FUNCTION_21	IF_3	CALL_5
0x117f	            0x85c0	                           test eax, eax	       470	fsck.c	FUNCTION_21	IF_3	CALL_5
0x1181	            0x742a	                            je 0x40011ed	       470	fsck.c	FUNCTION_21	IF_3	CALL_5
0x1183	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       471	fsck.c	FUNCTION_21	IF_3	CALL_6
0x1187	          0x4889c6	                            mov rsi, rax	       471	fsck.c	FUNCTION_21	IF_3	CALL_6
0x118a	      0xbf00000000	                              mov edi, 0	       471	fsck.c	FUNCTION_21	IF_3	CALL_6
0x118f	      0xb800000000	                              mov eax, 0	       471	fsck.c	FUNCTION_21	IF_3	CALL_6
0x1194	      0xe800000000	                          call 0x40011d9	       471	fsck.c	FUNCTION_21	IF_3	CALL_6
0x1199	      0xe862eeffff	                    call sym.const_error	       471	fsck.c	FUNCTION_21	IF_3	CALL_6
0x119e	    0x8b0500000000	            mov eax, dword [0x040011e4] 	       472	fsck.c	FUNCTION_21	IF_3
0x11a4	          0x83c808	                               or eax, 8	       472	fsck.c	FUNCTION_21	IF_3
0x11a7	    0x890500000000	            mov dword [0x040011ed], eax 	       472	fsck.c	FUNCTION_21	IF_3
0x11ad	    0x8b0500000000	            mov eax, dword [0x040011f3] 	       474	fsck.c	FUNCTION_21
0x11b3	          0x83c001	                              add eax, 1	       474	fsck.c	FUNCTION_21
0x11b6	    0x890500000000	            mov dword [0x040011fc], eax 	       474	fsck.c	FUNCTION_21
0x11bc	        0x488b45f8	                mov rax, qword [rbp - 8]	       475	fsck.c	FUNCTION_21
0x11c0	            0x8b00	                    mov eax, dword [rax]	       475	fsck.c	FUNCTION_21
0x11c2	          0xc1e804	                              shr eax, 4	       475	fsck.c	FUNCTION_21
0x11c5	      0x25ffffff07	                      and eax, 0x7ffffff	       475	fsck.c	FUNCTION_21
0x11ca	          0x83c808	                               or eax, 8	       475	fsck.c	FUNCTION_21
0x11cd	            0x89c2	                            mov edx, eax	       475	fsck.c	FUNCTION_21
0x11cf	        0x488b45f8	                mov rax, qword [rbp - 8]	       475	fsck.c	FUNCTION_21
0x11d3	    0x81e2ffffff07	                      and edx, 0x7ffffff	       475	fsck.c	FUNCTION_21
0x11d9	            0x89d1	                            mov ecx, edx	       475	fsck.c	FUNCTION_21
0x11db	          0xc1e104	                              shl ecx, 4	       475	fsck.c	FUNCTION_21
0x11de	            0x8b10	                    mov edx, dword [rax]	       475	fsck.c	FUNCTION_21
0x11e0	    0x81e20f000080	                     and edx, 0x8000000f	       475	fsck.c	FUNCTION_21
0x11e6	             0x9ca	                             or edx, ecx	       475	fsck.c	FUNCTION_21
0x11e8	            0x8910	                    mov dword [rax], edx	       475	fsck.c	FUNCTION_21
0x11ea	    0x8b0500000000	            mov eax, dword [0x04001230] 	       476	fsck.c	FUNCTION_21	IF_4
0x11f0	            0x85c0	                           test eax, eax	       476	fsck.c	FUNCTION_21	IF_4
0x11f2	            0x7425	                            je 0x4001259	       476	fsck.c	FUNCTION_21	IF_4
0x11f4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       478	fsck.c	FUNCTION_21	CALL_8
0x11f8	          0x4889c7	                            mov rdi, rax	       478	fsck.c	FUNCTION_21	CALL_8
0x11fb	      0xe800000000	                          call 0x4001240	       478	fsck.c	FUNCTION_21	CALL_8
0x1200	          0x4889c2	                            mov rdx, rax	       478	fsck.c	FUNCTION_21	CALL_8
0x1203	    0x488b05000000	            mov rax, qword [0x0400124a] 	       477	fsck.c	FUNCTION_21	IF_4	CALL_7
0x120a	        0x488b4df8	                mov rcx, qword [rbp - 8]	       477	fsck.c	FUNCTION_21	IF_4	CALL_7
0x120e	          0x4889ce	                            mov rsi, rcx	       477	fsck.c	FUNCTION_21	IF_4	CALL_7
0x1211	          0x4889c7	                            mov rdi, rax	       477	fsck.c	FUNCTION_21	IF_4	CALL_7
0x1214	      0xe800000000	                          call 0x4001259	       477	fsck.c	FUNCTION_21	IF_4	CALL_7
0x1219	        0x488b45f8	                mov rax, qword [rbp - 8]	       479	fsck.c	FUNCTION_21	CALL_9
0x121d	          0x4889c7	                            mov rdi, rax	       479	fsck.c	FUNCTION_21	CALL_9
0x1220	      0xe8aef4ffff	          call sym.mark_object_reachable	       479	fsck.c	FUNCTION_21	CALL_9
0x1225	      0xb800000000	                              mov eax, 0	       481	fsck.c	FUNCTION_21
0x122a	              0xc9	                                   leave	       482	fsck.c	FUNCTION_21
0x122b	              0xc3	                                     ret	       482	fsck.c	FUNCTION_21
strbuf_setlen	FOR,0:SWITCH,0:WHILE,0:IF,2:ELSE,1:functions,0:CALL,2:DO,0	43
0x61	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_67
0x62	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_67
0x65	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_67
0x69	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_67
0x6d	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_67
0x71	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_67	IF_1
0x75	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_67	IF_1
0x78	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_67	IF_1
0x7b	            0x740d	                            je 0x40000ca	       162	strbuf.h	FUNCTION_67	IF_1
0x7d	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_67	IF_1
0x81	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_67	IF_1
0x84	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_67	IF_1
0x88	            0xeb05	                           jmp 0x40000cf	       162	strbuf.h	FUNCTION_67	IF_1
0x8a	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_67	IF_1
0x8f	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_67	IF_1
0x93	            0x730f	                           jae 0x40000e4	       162	strbuf.h	FUNCTION_67	IF_1
0x95	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_67	CALL_1
0x9a	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_67	CALL_1
0x9f	      0xe800000000	                          call 0x40000e4	       163	strbuf.h	FUNCTION_67	CALL_1
0xa4	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_67
0xa8	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_67
0xac	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_67
0xb0	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_67	IF_2
0xb4	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_67	IF_2
0xb8	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_67	IF_2
0xbe	            0x7414	                            je 0x4000114	       165	strbuf.h	FUNCTION_67	IF_2
0xc0	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_67	IF_2
0xc4	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_67	IF_2
0xc8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_67	IF_2
0xcc	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_67	IF_2
0xcf	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_67	IF_2
0xd2	            0xeb24	                           jmp 0x4000138	       169	strbuf.h	FUNCTION_67
0xd4	     0xfb605000000	           movzx eax, byte [0x0400011b] 	       168	strbuf.h	FUNCTION_67	CALL_2
0xdb	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_67	CALL_2
0xdd	            0x7419	                            je 0x4000138	       168	strbuf.h	FUNCTION_67	CALL_2
0xdf	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_67	CALL_2
0xe4	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_67	CALL_2
0xe9	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_67	CALL_2
0xee	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_67	CALL_2
0xf3	      0xe800000000	                          call 0x4000138	       168	strbuf.h	FUNCTION_67	CALL_2
0xf8	              0x90	                                     nop	       169	strbuf.h	FUNCTION_67
0xf9	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_67
0xfa	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_67
fsck_handle_reflog_oid	FOR,0:SWITCH,0:WHILE,0:IF,4:ELSE,1:functions,0:CALL,8:DO,0	80
0xec8	              0x55	                                push rbp	       409	fsck.c	FUNCTION_18
0xec9	          0x4889e5	                            mov rbp, rsp	       409	fsck.c	FUNCTION_18
0xecc	        0x4883ec30	                           sub rsp, 0x30	       409	fsck.c	FUNCTION_18
0xed0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       409	fsck.c	FUNCTION_18
0xed4	        0x488975e0	             mov qword [rbp - 0x20], rsi	       409	fsck.c	FUNCTION_18
0xed8	        0x488955d8	             mov qword [rbp - 0x28], rdx	       409	fsck.c	FUNCTION_18
0xedc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       412	fsck.c	FUNCTION_18	IF_1	CALL_1
0xee0	          0x4889c7	                            mov rdi, rax	       412	fsck.c	FUNCTION_18	IF_1	CALL_1
0xee3	      0xe89ef2ffff	                    call sym.is_null_oid	       412	fsck.c	FUNCTION_18	IF_1	CALL_1
0xee8	            0x85c0	                           test eax, eax	       412	fsck.c	FUNCTION_18	IF_1	CALL_1
0xeea	     0xf85fd000000	                           jne 0x400102d	       412	fsck.c	FUNCTION_18	IF_1	CALL_1
0xef0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       413	fsck.c	FUNCTION_18	IF_1	CALL_2
0xef4	          0x4889c7	                            mov rdi, rax	       413	fsck.c	FUNCTION_18	IF_1	CALL_2
0xef7	      0xe800000000	                          call 0x4000f3c	       413	fsck.c	FUNCTION_18	IF_1	CALL_2
0xefc	        0x488945f8	                mov qword [rbp - 8], rax	       413	fsck.c	FUNCTION_18	IF_1	CALL_2
0xf00	      0x48837df800	                  cmp qword [rbp - 8], 0	       414	fsck.c	FUNCTION_18	IF_1	IF_2
0xf05	     0xf8499000000	                            je 0x4000fe4	       414	fsck.c	FUNCTION_18	IF_1	IF_2
0xf0b	        0x488b45f8	                mov rax, qword [rbp - 8]	       414	fsck.c	FUNCTION_18	IF_1	IF_2
0xf0f	            0x8b00	                    mov eax, dword [rax]	       414	fsck.c	FUNCTION_18	IF_1	IF_2
0xf11	          0xc1e804	                              shr eax, 4	       414	fsck.c	FUNCTION_18	IF_1	IF_2
0xf14	      0x25ffffff07	                      and eax, 0x7ffffff	       414	fsck.c	FUNCTION_18	IF_1	IF_2
0xf19	          0x83e004	                              and eax, 4	       414	fsck.c	FUNCTION_18	IF_1	IF_2
0xf1c	            0x85c0	                           test eax, eax	       414	fsck.c	FUNCTION_18	IF_1	IF_2
0xf1e	     0xf8480000000	                            je 0x4000fe4	       414	fsck.c	FUNCTION_18	IF_1	IF_2
0xf24	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       415	fsck.c	FUNCTION_18	IF_1	IF_2	IF_3
0xf29	            0x743d	                            je 0x4000fa8	       415	fsck.c	FUNCTION_18	IF_1	IF_2	IF_3
0xf2b	    0x8b0500000000	            mov eax, dword [0x04000f71] 	       415	fsck.c	FUNCTION_18	IF_1	IF_2	IF_3
0xf31	            0x85c0	                           test eax, eax	       415	fsck.c	FUNCTION_18	IF_1	IF_2	IF_3
0xf33	            0x7433	                            je 0x4000fa8	       415	fsck.c	FUNCTION_18	IF_1	IF_2	IF_3
0xf35	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       418	fsck.c	FUNCTION_18	IF_1	IF_2	CALL_4
0xf39	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       418	fsck.c	FUNCTION_18	IF_1	IF_2	CALL_4
0xf3d	          0x4889c6	                            mov rsi, rax	       418	fsck.c	FUNCTION_18	IF_1	IF_2	CALL_4
0xf40	      0xbf00000000	                              mov edi, 0	       418	fsck.c	FUNCTION_18	IF_1	IF_2	CALL_4
0xf45	      0xb800000000	                              mov eax, 0	       418	fsck.c	FUNCTION_18	IF_1	IF_2	CALL_4
0xf4a	      0xe800000000	                          call 0x4000f8f	       418	fsck.c	FUNCTION_18	IF_1	IF_2	CALL_4
0xf4f	          0x4889c2	                            mov rdx, rax	       418	fsck.c	FUNCTION_18	IF_1	IF_2	CALL_4
0xf52	    0x488b05000000	            mov rax, qword [0x04000f99] 	       416	fsck.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_3
0xf59	        0x488b4df8	                mov rcx, qword [rbp - 8]	       416	fsck.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_3
0xf5d	          0x4889ce	                            mov rsi, rcx	       416	fsck.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_3
0xf60	          0x4889c7	                            mov rdi, rax	       416	fsck.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_3
0xf63	      0xe800000000	                          call 0x4000fa8	       416	fsck.c	FUNCTION_18	IF_1	IF_2	IF_3	CALL_3
0xf68	        0x488b45f8	                mov rax, qword [rbp - 8]	       419	fsck.c	FUNCTION_18	IF_1	IF_2
0xf6c	            0x8b00	                    mov eax, dword [rax]	       419	fsck.c	FUNCTION_18	IF_1	IF_2
0xf6e	          0xc1e804	                              shr eax, 4	       419	fsck.c	FUNCTION_18	IF_1	IF_2
0xf71	      0x25ffffff07	                      and eax, 0x7ffffff	       419	fsck.c	FUNCTION_18	IF_1	IF_2
0xf76	          0x83c808	                               or eax, 8	       419	fsck.c	FUNCTION_18	IF_1	IF_2
0xf79	            0x89c2	                            mov edx, eax	       419	fsck.c	FUNCTION_18	IF_1	IF_2
0xf7b	        0x488b45f8	                mov rax, qword [rbp - 8]	       419	fsck.c	FUNCTION_18	IF_1	IF_2
0xf7f	    0x81e2ffffff07	                      and edx, 0x7ffffff	       419	fsck.c	FUNCTION_18	IF_1	IF_2
0xf85	            0x89d1	                            mov ecx, edx	       419	fsck.c	FUNCTION_18	IF_1	IF_2
0xf87	          0xc1e104	                              shl ecx, 4	       419	fsck.c	FUNCTION_18	IF_1	IF_2
0xf8a	            0x8b10	                    mov edx, dword [rax]	       419	fsck.c	FUNCTION_18	IF_1	IF_2
0xf8c	    0x81e20f000080	                     and edx, 0x8000000f	       419	fsck.c	FUNCTION_18	IF_1	IF_2
0xf92	             0x9ca	                             or edx, ecx	       419	fsck.c	FUNCTION_18	IF_1	IF_2
0xf94	            0x8910	                    mov dword [rax], edx	       419	fsck.c	FUNCTION_18	IF_1	IF_2
0xf96	        0x488b45f8	                mov rax, qword [rbp - 8]	       420	fsck.c	FUNCTION_18	IF_1	IF_2	CALL_5
0xf9a	          0x4889c7	                            mov rdi, rax	       420	fsck.c	FUNCTION_18	IF_1	IF_2	CALL_5
0xf9d	      0xe831f7ffff	          call sym.mark_object_reachable	       420	fsck.c	FUNCTION_18	IF_1	IF_2	CALL_5
0xfa2	            0xeb49	                           jmp 0x400102d	       426	fsck.c	FUNCTION_18
0xfa4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       421	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4	CALL_6
0xfa8	          0x4889c7	                            mov rdi, rax	       421	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4	CALL_6
0xfab	      0xe800000000	                          call 0x4000ff0	       421	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4	CALL_6
0xfb0	            0x85c0	                           test eax, eax	       421	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4	CALL_6
0xfb2	            0x7539	                           jne 0x400102d	       421	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4	CALL_6
0xfb4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       422	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4	CALL_8
0xfb8	          0x4889c7	                            mov rdi, rax	       422	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4	CALL_8
0xfbb	      0xe800000000	                          call 0x4001000	       422	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4	CALL_8
0xfc0	          0x4889c2	                            mov rdx, rax	       422	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4	CALL_8
0xfc3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       422	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4	CALL_8
0xfc7	          0x4889c6	                            mov rsi, rax	       422	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4	CALL_8
0xfca	      0xbf00000000	                              mov edi, 0	       422	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4	CALL_8
0xfcf	      0xb800000000	                              mov eax, 0	       422	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4	CALL_8
0xfd4	      0xe800000000	                          call 0x4001019	       422	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4	CALL_8
0xfd9	      0xe822f0ffff	                    call sym.const_error	       422	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4	CALL_8
0xfde	    0x8b0500000000	            mov eax, dword [0x04001024] 	       423	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4
0xfe4	          0x83c802	                               or eax, 2	       423	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4
0xfe7	    0x890500000000	            mov dword [0x0400102d], eax 	       423	fsck.c	FUNCTION_18	IF_1	ELSE_1	IF_4
0xfed	              0x90	                                     nop	       426	fsck.c	FUNCTION_18
0xfee	              0xc9	                                   leave	       426	fsck.c	FUNCTION_18
0xfef	              0xc3	                                     ret	       426	fsck.c	FUNCTION_18
mark_packed_for_connectivity	FOR,0:SWITCH,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,1:DO,0	13
0x18f4	              0x55	                                push rbp	       657	fsck.c	FUNCTION_32
0x18f5	          0x4889e5	                            mov rbp, rsp	       657	fsck.c	FUNCTION_32
0x18f8	        0x4883ec20	                           sub rsp, 0x20	       657	fsck.c	FUNCTION_32
0x18fc	        0x48897df8	                mov qword [rbp - 8], rdi	       657	fsck.c	FUNCTION_32
0x1900	        0x488975f0	             mov qword [rbp - 0x10], rsi	       657	fsck.c	FUNCTION_32
0x1904	          0x8955ec	             mov dword [rbp - 0x14], edx	       657	fsck.c	FUNCTION_32
0x1907	        0x48894de0	             mov qword [rbp - 0x20], rcx	       657	fsck.c	FUNCTION_32
0x190b	        0x488b45f8	                mov rax, qword [rbp - 8]	       658	fsck.c	FUNCTION_32	CALL_1
0x190f	          0x4889c7	                            mov rdi, rax	       658	fsck.c	FUNCTION_32	CALL_1
0x1912	      0xe869ffffff	   call sym.mark_object_for_connectivity	       658	fsck.c	FUNCTION_32	CALL_1
0x1917	      0xb800000000	                              mov eax, 0	       659	fsck.c	FUNCTION_32
0x191c	              0xc9	                                   leave	       660	fsck.c	FUNCTION_32
0x191d	              0xc3	                                     ret	       660	fsck.c	FUNCTION_32
fsck_loose	FOR,0:SWITCH,0:WHILE,0:IF,2:ELSE,0:functions,0:CALL,4:DO,0	69
0x1378	              0x55	                                push rbp	       533	fsck.c	FUNCTION_24
0x1379	          0x4889e5	                            mov rbp, rsp	       533	fsck.c	FUNCTION_24
0x137c	        0x4883ec30	                           sub rsp, 0x30	       533	fsck.c	FUNCTION_24
0x1380	        0x48897de8	             mov qword [rbp - 0x18], rdi	       533	fsck.c	FUNCTION_24
0x1384	        0x488975e0	             mov qword [rbp - 0x20], rsi	       533	fsck.c	FUNCTION_24
0x1388	        0x488955d8	             mov qword [rbp - 0x28], rdx	       533	fsck.c	FUNCTION_24
0x138c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       534	fsck.c	FUNCTION_24	CALL_1
0x1390	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       534	fsck.c	FUNCTION_24	CALL_1
0x1394	          0x4889d6	                            mov rsi, rdx	       534	fsck.c	FUNCTION_24	CALL_1
0x1397	          0x4889c7	                            mov rdi, rax	       534	fsck.c	FUNCTION_24	CALL_1
0x139a	      0xe821ffffff	             call sym.parse_loose_object	       534	fsck.c	FUNCTION_24	CALL_1
0x139f	        0x488945f8	                mov qword [rbp - 8], rax	       534	fsck.c	FUNCTION_24	CALL_1
0x13a3	      0x48837df800	                  cmp qword [rbp - 8], 0	       536	fsck.c	FUNCTION_24	IF_1
0x13a8	            0x7546	                           jne 0x4001430	       536	fsck.c	FUNCTION_24	IF_1
0x13aa	    0x8b0500000000	            mov eax, dword [0x040013f0] 	       537	fsck.c	FUNCTION_24	IF_1
0x13b0	          0x83c801	                               or eax, 1	       537	fsck.c	FUNCTION_24	IF_1
0x13b3	    0x890500000000	            mov dword [0x040013f9], eax 	       537	fsck.c	FUNCTION_24	IF_1
0x13b9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       538	fsck.c	FUNCTION_24	IF_1	CALL_2
0x13bd	          0x4889c7	                            mov rdi, rax	       538	fsck.c	FUNCTION_24	IF_1	CALL_2
0x13c0	      0xe800000000	                          call 0x4001405	       538	fsck.c	FUNCTION_24	IF_1	CALL_2
0x13c5	          0x4889c1	                            mov rcx, rax	       538	fsck.c	FUNCTION_24	IF_1	CALL_2
0x13c8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       538	fsck.c	FUNCTION_24	IF_1	CALL_2
0x13cc	          0x4889c2	                            mov rdx, rax	       538	fsck.c	FUNCTION_24	IF_1	CALL_2
0x13cf	          0x4889ce	                            mov rsi, rcx	       538	fsck.c	FUNCTION_24	IF_1	CALL_2
0x13d2	      0xbf00000000	                              mov edi, 0	       538	fsck.c	FUNCTION_24	IF_1	CALL_2
0x13d7	      0xb800000000	                              mov eax, 0	       538	fsck.c	FUNCTION_24	IF_1	CALL_2
0x13dc	      0xe800000000	                          call 0x4001421	       538	fsck.c	FUNCTION_24	IF_1	CALL_2
0x13e1	      0xe81aecffff	                    call sym.const_error	       538	fsck.c	FUNCTION_24	IF_1	CALL_2
0x13e6	      0xb800000000	                              mov eax, 0	       540	fsck.c	FUNCTION_24	IF_1
0x13eb	      0xe982000000	                           jmp 0x40014b2	       540	fsck.c	FUNCTION_24	IF_1
0x13f0	        0x488b45f8	                mov rax, qword [rbp - 8]	       543	fsck.c	FUNCTION_24
0x13f4	            0x8b00	                    mov eax, dword [rax]	       543	fsck.c	FUNCTION_24
0x13f6	          0xc1e804	                              shr eax, 4	       543	fsck.c	FUNCTION_24
0x13f9	      0x25ffffff07	                      and eax, 0x7ffffff	       543	fsck.c	FUNCTION_24
0x13fe	      0x25fcffff07	                      and eax, 0x7fffffc	       543	fsck.c	FUNCTION_24
0x1403	            0x89c2	                            mov edx, eax	       543	fsck.c	FUNCTION_24
0x1405	        0x488b45f8	                mov rax, qword [rbp - 8]	       543	fsck.c	FUNCTION_24
0x1409	    0x81e2ffffff07	                      and edx, 0x7ffffff	       543	fsck.c	FUNCTION_24
0x140f	            0x89d1	                            mov ecx, edx	       543	fsck.c	FUNCTION_24
0x1411	          0xc1e104	                              shl ecx, 4	       543	fsck.c	FUNCTION_24
0x1414	            0x8b10	                    mov edx, dword [rax]	       543	fsck.c	FUNCTION_24
0x1416	    0x81e20f000080	                     and edx, 0x8000000f	       543	fsck.c	FUNCTION_24
0x141c	             0x9ca	                             or edx, ecx	       543	fsck.c	FUNCTION_24
0x141e	            0x8910	                    mov dword [rax], edx	       543	fsck.c	FUNCTION_24
0x1420	        0x488b45f8	                mov rax, qword [rbp - 8]	       544	fsck.c	FUNCTION_24
0x1424	            0x8b00	                    mov eax, dword [rax]	       544	fsck.c	FUNCTION_24
0x1426	          0xc1e804	                              shr eax, 4	       544	fsck.c	FUNCTION_24
0x1429	      0x25ffffff07	                      and eax, 0x7ffffff	       544	fsck.c	FUNCTION_24
0x142e	          0x83c804	                               or eax, 4	       544	fsck.c	FUNCTION_24
0x1431	            0x89c2	                            mov edx, eax	       544	fsck.c	FUNCTION_24
0x1433	        0x488b45f8	                mov rax, qword [rbp - 8]	       544	fsck.c	FUNCTION_24
0x1437	    0x81e2ffffff07	                      and edx, 0x7ffffff	       544	fsck.c	FUNCTION_24
0x143d	            0x89d1	                            mov ecx, edx	       544	fsck.c	FUNCTION_24
0x143f	          0xc1e104	                              shl ecx, 4	       544	fsck.c	FUNCTION_24
0x1442	            0x8b10	                    mov edx, dword [rax]	       544	fsck.c	FUNCTION_24
0x1444	    0x81e20f000080	                     and edx, 0x8000000f	       544	fsck.c	FUNCTION_24
0x144a	             0x9ca	                             or edx, ecx	       544	fsck.c	FUNCTION_24
0x144c	            0x8910	                    mov dword [rax], edx	       544	fsck.c	FUNCTION_24
0x144e	        0x488b45f8	                mov rax, qword [rbp - 8]	       545	fsck.c	FUNCTION_24	IF_2	CALL_4
0x1452	          0x4889c7	                            mov rdi, rax	       545	fsck.c	FUNCTION_24	IF_2	CALL_4
0x1455	      0xe87bf7ffff	                       call sym.fsck_obj	       545	fsck.c	FUNCTION_24	IF_2	CALL_4
0x145a	            0x85c0	                           test eax, eax	       545	fsck.c	FUNCTION_24	IF_2	CALL_4
0x145c	            0x740f	                            je 0x40014ad	       545	fsck.c	FUNCTION_24	IF_2	CALL_4
0x145e	    0x8b0500000000	            mov eax, dword [0x040014a4] 	       546	fsck.c	FUNCTION_24	IF_2
0x1464	          0x83c801	                               or eax, 1	       546	fsck.c	FUNCTION_24	IF_2
0x1467	    0x890500000000	            mov dword [0x040014ad], eax 	       546	fsck.c	FUNCTION_24	IF_2
0x146d	      0xb800000000	                              mov eax, 0	       547	fsck.c	FUNCTION_24
0x1472	              0xc9	                                   leave	       548	fsck.c	FUNCTION_24
0x1473	              0xc3	                                     ret	       548	fsck.c	FUNCTION_24
objreport	FOR,0:SWITCH,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,3:DO,0	30
0x3e7	              0x55	                                push rbp	       108	fsck.c	FUNCTION_4
0x3e8	          0x4889e5	                            mov rbp, rsp	       108	fsck.c	FUNCTION_4
0x3eb	              0x53	                                push rbx	       108	fsck.c	FUNCTION_4
0x3ec	        0x4883ec28	                           sub rsp, 0x28	       108	fsck.c	FUNCTION_4
0x3f0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       108	fsck.c	FUNCTION_4
0x3f4	        0x488975e0	             mov qword [rbp - 0x20], rsi	       108	fsck.c	FUNCTION_4
0x3f8	        0x488955d8	             mov qword [rbp - 0x28], rdx	       108	fsck.c	FUNCTION_4
0x3fc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       109	fsck.c	FUNCTION_4	CALL_1
0x400	          0x4889c7	                            mov rdi, rax	       109	fsck.c	FUNCTION_4	CALL_1
0x403	      0xe8a5fdffff	                call sym.describe_object	       109	fsck.c	FUNCTION_4	CALL_1
0x408	          0x4889c3	                            mov rbx, rax	       109	fsck.c	FUNCTION_4	CALL_1
0x40b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       109	fsck.c	FUNCTION_4	CALL_1
0x40f	          0x4889c7	                            mov rdi, rax	       109	fsck.c	FUNCTION_4	CALL_1
0x412	      0xe824feffff	                 call sym.printable_type	       109	fsck.c	FUNCTION_4	CALL_1
0x417	          0x4889c6	                            mov rsi, rax	       109	fsck.c	FUNCTION_4	CALL_1
0x41a	    0x488b05000000	            mov rax, qword [0x04000461] 	       109	fsck.c	FUNCTION_4	CALL_1
0x421	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       109	fsck.c	FUNCTION_4	CALL_1
0x425	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       109	fsck.c	FUNCTION_4	CALL_1
0x429	          0x4989c9	                             mov r9, rcx	       109	fsck.c	FUNCTION_4	CALL_1
0x42c	          0x4989d8	                             mov r8, rbx	       109	fsck.c	FUNCTION_4	CALL_1
0x42f	          0x4889f1	                            mov rcx, rsi	       109	fsck.c	FUNCTION_4	CALL_1
0x432	      0xbe00000000	                              mov esi, 0	       109	fsck.c	FUNCTION_4	CALL_1
0x437	          0x4889c7	                            mov rdi, rax	       109	fsck.c	FUNCTION_4	CALL_1
0x43a	      0xb800000000	                              mov eax, 0	       109	fsck.c	FUNCTION_4	CALL_1
0x43f	      0xe800000000	                          call 0x4000484	       109	fsck.c	FUNCTION_4	CALL_1
0x444	              0x90	                                     nop	       111	fsck.c	FUNCTION_4
0x445	        0x4883c428	                           add rsp, 0x28	       111	fsck.c	FUNCTION_4
0x449	              0x5b	                                 pop rbx	       111	fsck.c	FUNCTION_4
0x44a	              0x5d	                                 pop rbp	       111	fsck.c	FUNCTION_4
0x44b	              0xc3	                                     ret	       111	fsck.c	FUNCTION_4
traverse_reachable	FOR,0:SWITCH,0:WHILE,1:IF,1:ELSE,0:functions,0:CALL,6:DO,0	45
0x74b	              0x55	                                push rbp	       196	fsck.c	FUNCTION_10
0x74c	          0x4889e5	                            mov rbp, rsp	       196	fsck.c	FUNCTION_10
0x74f	        0x4883ec20	                           sub rsp, 0x20	       196	fsck.c	FUNCTION_10
0x753	    0x64488b042528	                mov rax, qword fs:[0x28]	       196	fsck.c	FUNCTION_10
0x75c	        0x488945f8	                mov qword [rbp - 8], rax	       196	fsck.c	FUNCTION_10
0x760	            0x31c0	                            xor eax, eax	       196	fsck.c	FUNCTION_10
0x762	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       197	fsck.c	FUNCTION_10
0x76a	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       198	fsck.c	FUNCTION_10
0x771	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       199	fsck.c	FUNCTION_10
0x778	    0x8b0500000000	            mov eax, dword [0x040007be] 	       200	fsck.c	FUNCTION_10	IF_1
0x77e	            0x85c0	                           test eax, eax	       200	fsck.c	FUNCTION_10	IF_1
0x780	            0x7448	                            je 0x400080a	       200	fsck.c	FUNCTION_10	IF_1
0x782	      0xbf00000000	                              mov edi, 0	       201	fsck.c	FUNCTION_10	CALL_2
0x787	      0xe8a4f9ffff	                               call sym.	       201	fsck.c	FUNCTION_10	CALL_2
0x78c	      0xbe00000000	                              mov esi, 0	       201	fsck.c	FUNCTION_10	CALL_2
0x791	          0x4889c7	                            mov rdi, rax	       201	fsck.c	FUNCTION_10	CALL_2
0x794	      0xe800000000	                          call 0x40007d9	       201	fsck.c	FUNCTION_10	CALL_2
0x799	        0x488945f0	             mov qword [rbp - 0x10], rax	       201	fsck.c	FUNCTION_10	CALL_2
0x79d	            0xeb2b	                           jmp 0x400080a	       202	fsck.c	FUNCTION_10	WHILE_1
0x79f	      0xbf00000000	                              mov edi, 0	       203	fsck.c	FUNCTION_10	WHILE_1	CALL_4
0x7a4	      0xe800000000	                          call 0x40007e9	       203	fsck.c	FUNCTION_10	WHILE_1	CALL_4
0x7a9	          0x4889c7	                            mov rdi, rax	       203	fsck.c	FUNCTION_10	WHILE_1	CALL_4
0x7ac	      0xe84cffffff	            call sym.traverse_one_object	       203	fsck.c	FUNCTION_10	WHILE_1	CALL_4
0x7b1	           0x945ec	              or dword [rbp - 0x14], eax	       203	fsck.c	FUNCTION_10	WHILE_1	CALL_4
0x7b4	        0x8345e801	               add dword [rbp - 0x18], 1	       204	fsck.c	FUNCTION_10	WHILE_1	CALL_5
0x7b8	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       204	fsck.c	FUNCTION_10	WHILE_1	CALL_5
0x7bb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       204	fsck.c	FUNCTION_10	WHILE_1	CALL_5
0x7bf	          0x4889d6	                            mov rsi, rdx	       204	fsck.c	FUNCTION_10	WHILE_1	CALL_5
0x7c2	          0x4889c7	                            mov rdi, rax	       204	fsck.c	FUNCTION_10	WHILE_1	CALL_5
0x7c5	      0xe800000000	                          call 0x400080a	       204	fsck.c	FUNCTION_10	WHILE_1	CALL_5
0x7ca	    0x8b0500000000	            mov eax, dword [0x04000810] 	       202	fsck.c	FUNCTION_10	WHILE_1
0x7d0	            0x85c0	                           test eax, eax	       202	fsck.c	FUNCTION_10	WHILE_1
0x7d2	            0x75cb	                           jne 0x40007df	       202	fsck.c	FUNCTION_10	WHILE_1
0x7d4	        0x488d45f0	                   lea rax, [rbp - 0x10]	       206	fsck.c	FUNCTION_10	CALL_6
0x7d8	          0x4889c7	                            mov rdi, rax	       206	fsck.c	FUNCTION_10	CALL_6
0x7db	      0xe800000000	                          call 0x4000820	       206	fsck.c	FUNCTION_10	CALL_6
0x7e0	        0x837dec00	               cmp dword [rbp - 0x14], 0	       207	fsck.c	FUNCTION_10
0x7e4	           0xf95c0	                                setne al	       207	fsck.c	FUNCTION_10
0x7e7	           0xfb6c0	                           movzx eax, al	       207	fsck.c	FUNCTION_10
0x7ea	        0x488b4df8	                mov rcx, qword [rbp - 8]	       208	fsck.c	FUNCTION_10
0x7ee	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       208	fsck.c	FUNCTION_10
0x7f7	            0x7405	                            je 0x400083e	       208	fsck.c	FUNCTION_10
0x7f9	      0xe800000000	                          call 0x400083e	       208	fsck.c	FUNCTION_10
0x7fe	              0xc9	                                   leave	       208	fsck.c	FUNCTION_10
0x7ff	              0xc3	                                     ret	       208	fsck.c	FUNCTION_10
mark_object_for_connectivity	FOR,0:SWITCH,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,1:DO,0	25
0x1880	              0x55	                                push rbp	       640	fsck.c	FUNCTION_30
0x1881	          0x4889e5	                            mov rbp, rsp	       640	fsck.c	FUNCTION_30
0x1884	        0x4883ec20	                           sub rsp, 0x20	       640	fsck.c	FUNCTION_30
0x1888	        0x48897de8	             mov qword [rbp - 0x18], rdi	       640	fsck.c	FUNCTION_30
0x188c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       641	fsck.c	FUNCTION_30	CALL_1
0x1890	          0x4889c7	                            mov rdi, rax	       641	fsck.c	FUNCTION_30	CALL_1
0x1893	      0xe800000000	                          call 0x40018d8	       641	fsck.c	FUNCTION_30	CALL_1
0x1898	        0x488945f8	                mov qword [rbp - 8], rax	       641	fsck.c	FUNCTION_30	CALL_1
0x189c	        0x488b45f8	                mov rax, qword [rbp - 8]	       642	fsck.c	FUNCTION_30
0x18a0	            0x8b00	                    mov eax, dword [rax]	       642	fsck.c	FUNCTION_30
0x18a2	          0xc1e804	                              shr eax, 4	       642	fsck.c	FUNCTION_30
0x18a5	      0x25ffffff07	                      and eax, 0x7ffffff	       642	fsck.c	FUNCTION_30
0x18aa	          0x83c804	                               or eax, 4	       642	fsck.c	FUNCTION_30
0x18ad	            0x89c2	                            mov edx, eax	       642	fsck.c	FUNCTION_30
0x18af	        0x488b45f8	                mov rax, qword [rbp - 8]	       642	fsck.c	FUNCTION_30
0x18b3	    0x81e2ffffff07	                      and edx, 0x7ffffff	       642	fsck.c	FUNCTION_30
0x18b9	            0x89d1	                            mov ecx, edx	       642	fsck.c	FUNCTION_30
0x18bb	          0xc1e104	                              shl ecx, 4	       642	fsck.c	FUNCTION_30
0x18be	            0x8b10	                    mov edx, dword [rax]	       642	fsck.c	FUNCTION_30
0x18c0	    0x81e20f000080	                     and edx, 0x8000000f	       642	fsck.c	FUNCTION_30
0x18c6	             0x9ca	                             or edx, ecx	       642	fsck.c	FUNCTION_30
0x18c8	            0x8910	                    mov dword [rax], edx	       642	fsck.c	FUNCTION_30
0x18ca	              0x90	                                     nop	       643	fsck.c	FUNCTION_30
0x18cb	              0xc9	                                   leave	       643	fsck.c	FUNCTION_30
0x18cc	              0xc3	                                     ret	       643	fsck.c	FUNCTION_30
objerror	FOR,0:SWITCH,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,1:DO,0	16
0x44c	              0x55	                                push rbp	       114	fsck.c	FUNCTION_5
0x44d	          0x4889e5	                            mov rbp, rsp	       114	fsck.c	FUNCTION_5
0x450	        0x4883ec10	                           sub rsp, 0x10	       114	fsck.c	FUNCTION_5
0x454	        0x48897df8	                mov qword [rbp - 8], rdi	       114	fsck.c	FUNCTION_5
0x458	        0x488975f0	             mov qword [rbp - 0x10], rsi	       114	fsck.c	FUNCTION_5
0x45c	    0x8b0500000000	            mov eax, dword [0x040004a2] 	       115	fsck.c	FUNCTION_5
0x462	          0x83c801	                               or eax, 1	       115	fsck.c	FUNCTION_5
0x465	    0x890500000000	            mov dword [0x040004ab], eax 	       115	fsck.c	FUNCTION_5
0x46b	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       116	fsck.c	FUNCTION_5	CALL_1
0x46f	        0x488b45f8	                mov rax, qword [rbp - 8]	       116	fsck.c	FUNCTION_5	CALL_1
0x473	      0xbe00000000	                              mov esi, 0	       116	fsck.c	FUNCTION_5	CALL_1
0x478	          0x4889c7	                            mov rdi, rax	       116	fsck.c	FUNCTION_5	CALL_1
0x47b	      0xe867ffffff	                      call sym.objreport	       116	fsck.c	FUNCTION_5	CALL_1
0x480	      0xb8ffffffff	                     mov eax, 0xffffffff	       117	fsck.c	FUNCTION_5
0x485	              0xc9	                                   leave	       118	fsck.c	FUNCTION_5
0x486	              0xc3	                                     ret	       118	fsck.c	FUNCTION_5
fsck_obj	FOR,0:SWITCH,0:WHILE,0:IF,10:ELSE,0:functions,0:CALL,15:DO,0	147
0xbd5	              0x55	                                push rbp	       344	fsck.c	FUNCTION_16
0xbd6	          0x4889e5	                            mov rbp, rsp	       344	fsck.c	FUNCTION_16
0xbd9	              0x53	                                push rbx	       344	fsck.c	FUNCTION_16
0xbda	        0x4883ec38	                           sub rsp, 0x38	       344	fsck.c	FUNCTION_16
0xbde	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       344	fsck.c	FUNCTION_16
0xbe2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       347	fsck.c	FUNCTION_16	IF_1
0xbe6	            0x8b00	                    mov eax, dword [rax]	       347	fsck.c	FUNCTION_16	IF_1
0xbe8	          0xc1e804	                              shr eax, 4	       347	fsck.c	FUNCTION_16	IF_1
0xbeb	      0x25ffffff07	                      and eax, 0x7ffffff	       347	fsck.c	FUNCTION_16	IF_1
0xbf0	          0x83e002	                              and eax, 2	       347	fsck.c	FUNCTION_16	IF_1
0xbf3	            0x85c0	                           test eax, eax	       347	fsck.c	FUNCTION_16	IF_1
0xbf5	            0x740a	                            je 0x4000c41	       347	fsck.c	FUNCTION_16	IF_1
0xbf7	      0xb800000000	                              mov eax, 0	       348	fsck.c	FUNCTION_16	IF_1
0xbfc	      0xe9dc010000	                           jmp 0x4000e1d	       348	fsck.c	FUNCTION_16	IF_1
0xc01	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       349	fsck.c	FUNCTION_16
0xc05	            0x8b00	                    mov eax, dword [rax]	       349	fsck.c	FUNCTION_16
0xc07	          0xc1e804	                              shr eax, 4	       349	fsck.c	FUNCTION_16
0xc0a	      0x25ffffff07	                      and eax, 0x7ffffff	       349	fsck.c	FUNCTION_16
0xc0f	          0x83c802	                               or eax, 2	       349	fsck.c	FUNCTION_16
0xc12	            0x89c2	                            mov edx, eax	       349	fsck.c	FUNCTION_16
0xc14	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       349	fsck.c	FUNCTION_16
0xc18	    0x81e2ffffff07	                      and edx, 0x7ffffff	       349	fsck.c	FUNCTION_16
0xc1e	            0x89d1	                            mov ecx, edx	       349	fsck.c	FUNCTION_16
0xc20	          0xc1e104	                              shl ecx, 4	       349	fsck.c	FUNCTION_16
0xc23	            0x8b10	                    mov edx, dword [rax]	       349	fsck.c	FUNCTION_16
0xc25	    0x81e20f000080	                     and edx, 0x8000000f	       349	fsck.c	FUNCTION_16
0xc2b	             0x9ca	                             or edx, ecx	       349	fsck.c	FUNCTION_16
0xc2d	            0x8910	                    mov dword [rax], edx	       349	fsck.c	FUNCTION_16
0xc2f	    0x8b0500000000	            mov eax, dword [0x04000c75] 	       351	fsck.c	FUNCTION_16	IF_2
0xc35	            0x85c0	                           test eax, eax	       351	fsck.c	FUNCTION_16	IF_2
0xc37	            0x743a	                            je 0x4000cb3	       351	fsck.c	FUNCTION_16	IF_2
0xc39	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       352	fsck.c	FUNCTION_16	IF_2	CALL_1
0xc3d	          0x4889c7	                            mov rdi, rax	       352	fsck.c	FUNCTION_16	IF_2	CALL_1
0xc40	      0xe868f5ffff	                call sym.describe_object	       352	fsck.c	FUNCTION_16	IF_2	CALL_1
0xc45	          0x4889c3	                            mov rbx, rax	       352	fsck.c	FUNCTION_16	IF_2	CALL_1
0xc48	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       352	fsck.c	FUNCTION_16	IF_2	CALL_1
0xc4c	          0x4889c7	                            mov rdi, rax	       352	fsck.c	FUNCTION_16	IF_2	CALL_1
0xc4f	      0xe8e7f5ffff	                 call sym.printable_type	       352	fsck.c	FUNCTION_16	IF_2	CALL_1
0xc54	          0x4889c2	                            mov rdx, rax	       352	fsck.c	FUNCTION_16	IF_2	CALL_1
0xc57	    0x488b05000000	            mov rax, qword [0x04000c9e] 	       352	fsck.c	FUNCTION_16	IF_2	CALL_1
0xc5e	          0x4889d9	                            mov rcx, rbx	       352	fsck.c	FUNCTION_16	IF_2	CALL_1
0xc61	      0xbe00000000	                              mov esi, 0	       352	fsck.c	FUNCTION_16	IF_2	CALL_1
0xc66	          0x4889c7	                            mov rdi, rax	       352	fsck.c	FUNCTION_16	IF_2	CALL_1
0xc69	      0xb800000000	                              mov eax, 0	       352	fsck.c	FUNCTION_16	IF_2	CALL_1
0xc6e	      0xe800000000	                          call 0x4000cb3	       352	fsck.c	FUNCTION_16	IF_2	CALL_1
0xc73	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       355	fsck.c	FUNCTION_16	IF_3	CALL_4
0xc77	      0xba00000000	                              mov edx, 0	       355	fsck.c	FUNCTION_16	IF_3	CALL_4
0xc7c	      0xbe00000000	                              mov esi, 0	       355	fsck.c	FUNCTION_16	IF_3	CALL_4
0xc81	          0x4889c7	                            mov rdi, rax	       355	fsck.c	FUNCTION_16	IF_3	CALL_4
0xc84	      0xe800000000	                          call 0x4000cc9	       355	fsck.c	FUNCTION_16	IF_3	CALL_4
0xc89	            0x85c0	                           test eax, eax	       355	fsck.c	FUNCTION_16	IF_3	CALL_4
0xc8b	            0x7411	                            je 0x4000cde	       355	fsck.c	FUNCTION_16	IF_3	CALL_4
0xc8d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       356	fsck.c	FUNCTION_16	CALL_5
0xc91	      0xbe00000000	                              mov esi, 0	       356	fsck.c	FUNCTION_16	CALL_5
0xc96	          0x4889c7	                            mov rdi, rax	       356	fsck.c	FUNCTION_16	CALL_5
0xc99	      0xe8aef7ffff	                       call sym.objerror	       356	fsck.c	FUNCTION_16	CALL_5
0xc9e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       357	fsck.c	FUNCTION_16	CALL_6
0xca2	      0xb900000000	                              mov ecx, 0	       357	fsck.c	FUNCTION_16	CALL_6
0xca7	      0xba00000000	                              mov edx, 0	       357	fsck.c	FUNCTION_16	CALL_6
0xcac	      0xbe00000000	                              mov esi, 0	       357	fsck.c	FUNCTION_16	CALL_6
0xcb1	          0x4889c7	                            mov rdi, rax	       357	fsck.c	FUNCTION_16	CALL_6
0xcb4	      0xe800000000	                          call 0x4000cf9	       357	fsck.c	FUNCTION_16	CALL_6
0xcb9	          0x8945dc	             mov dword [rbp - 0x24], eax	       357	fsck.c	FUNCTION_16	CALL_6
0xcbc	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       358	fsck.c	FUNCTION_16	IF_4
0xcc0	     0xf85df000000	                           jne 0x4000de5	       358	fsck.c	FUNCTION_16	IF_4
0xcc6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       361	fsck.c	FUNCTION_16	IF_5
0xcca	           0xfb600	                   movzx eax, byte [rax]	       361	fsck.c	FUNCTION_16	IF_5
0xccd	          0x83e00e	                            and eax, 0xe	       361	fsck.c	FUNCTION_16	IF_5
0xcd0	            0x3c02	                               cmp al, 2	       361	fsck.c	FUNCTION_16	IF_5
0xcd2	            0x753d	                           jne 0x4000d51	       361	fsck.c	FUNCTION_16	IF_5
0xcd4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       362	fsck.c	FUNCTION_16	IF_5
0xcd8	        0x488945e0	             mov qword [rbp - 0x20], rax	       362	fsck.c	FUNCTION_16	IF_5
0xcdc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       364	fsck.c	FUNCTION_16	IF_5	IF_6
0xce0	        0x488b4030	            mov rax, qword [rax + 0x30] 	       364	fsck.c	FUNCTION_16	IF_5	IF_6
0xce4	          0x4885c0	                           test rax, rax	       364	fsck.c	FUNCTION_16	IF_5	IF_6
0xce7	            0x7528	                           jne 0x4000d51	       364	fsck.c	FUNCTION_16	IF_5	IF_6
0xce9	    0x8b0500000000	            mov eax, dword [0x04000d2f] 	       364	fsck.c	FUNCTION_16	IF_5	IF_6
0xcef	            0x85c0	                           test eax, eax	       364	fsck.c	FUNCTION_16	IF_5	IF_6
0xcf1	            0x741e	                            je 0x4000d51	       364	fsck.c	FUNCTION_16	IF_5	IF_6
0xcf3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       365	fsck.c	FUNCTION_16	IF_5	CALL_8
0xcf7	          0x4889c7	                            mov rdi, rax	       365	fsck.c	FUNCTION_16	IF_5	CALL_8
0xcfa	      0xe8aef4ffff	                call sym.describe_object	       365	fsck.c	FUNCTION_16	IF_5	CALL_8
0xcff	          0x4889c6	                            mov rsi, rax	       365	fsck.c	FUNCTION_16	IF_5	CALL_8
0xd02	      0xbf00000000	                              mov edi, 0	       365	fsck.c	FUNCTION_16	IF_5	CALL_8
0xd07	      0xb800000000	                              mov eax, 0	       365	fsck.c	FUNCTION_16	IF_5	CALL_8
0xd0c	      0xe800000000	                          call 0x4000d51	       365	fsck.c	FUNCTION_16	IF_5	CALL_8
0xd11	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       368	fsck.c	FUNCTION_16	IF_7
0xd15	           0xfb600	                   movzx eax, byte [rax]	       368	fsck.c	FUNCTION_16	IF_7
0xd18	          0x83e00e	                            and eax, 0xe	       368	fsck.c	FUNCTION_16	IF_7
0xd1b	            0x3c08	                               cmp al, 8	       368	fsck.c	FUNCTION_16	IF_7
0xd1d	     0xf8583000000	                           jne 0x4000de6	       368	fsck.c	FUNCTION_16	IF_7
0xd23	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       369	fsck.c	FUNCTION_16	IF_7
0xd27	        0x488945e8	             mov qword [rbp - 0x18], rax	       369	fsck.c	FUNCTION_16	IF_7
0xd2b	    0x8b0500000000	            mov eax, dword [0x04000d71] 	       371	fsck.c	FUNCTION_16	IF_7	IF_8
0xd31	            0x85c0	                           test eax, eax	       371	fsck.c	FUNCTION_16	IF_7	IF_8
0xd33	            0x7471	                            je 0x4000de6	       371	fsck.c	FUNCTION_16	IF_7	IF_8
0xd35	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       371	fsck.c	FUNCTION_16	IF_7	IF_8
0xd39	        0x488b4018	            mov rax, qword [rax + 0x18] 	       371	fsck.c	FUNCTION_16	IF_7	IF_8
0xd3d	          0x4885c0	                           test rax, rax	       371	fsck.c	FUNCTION_16	IF_7	IF_8
0xd40	            0x7464	                            je 0x4000de6	       371	fsck.c	FUNCTION_16	IF_7	IF_8
0xd42	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       372	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_10
0xd46	        0x488b4018	            mov rax, qword [rax + 0x18] 	       372	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_10
0xd4a	          0x4889c7	                            mov rdi, rax	       372	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_10
0xd4d	      0xe85bf4ffff	                call sym.describe_object	       372	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_10
0xd52	          0x4889c3	                            mov rbx, rax	       372	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_10
0xd55	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       372	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_10
0xd59	        0x488b4018	            mov rax, qword [rax + 0x18] 	       372	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_10
0xd5d	          0x4889c7	                            mov rdi, rax	       372	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_10
0xd60	      0xe8d6f4ffff	                 call sym.printable_type	       372	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_10
0xd65	          0x4889da	                            mov rdx, rbx	       372	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_10
0xd68	          0x4889c6	                            mov rsi, rax	       372	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_10
0xd6b	      0xbf00000000	                              mov edi, 0	       372	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_10
0xd70	      0xb800000000	                              mov eax, 0	       372	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_10
0xd75	      0xe800000000	                          call 0x4000dba	       372	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_10
0xd7a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       374	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_12
0xd7e	          0x4889c7	                            mov rdi, rax	       374	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_12
0xd81	      0xe827f4ffff	                call sym.describe_object	       374	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_12
0xd86	          0x4889c2	                            mov rdx, rax	       374	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_12
0xd89	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       374	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_12
0xd8d	        0x488b4020	            mov rax, qword [rax + 0x20] 	       374	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_12
0xd91	          0x4889c6	                            mov rsi, rax	       374	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_12
0xd94	      0xbf00000000	                              mov edi, 0	       374	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_12
0xd99	      0xb800000000	                              mov eax, 0	       374	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_12
0xd9e	      0xe800000000	                          call 0x4000de3	       374	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_12
0xda3	            0xeb01	                           jmp 0x4000de6	       374	fsck.c	FUNCTION_16	IF_7	IF_8	CALL_12
0xda5	              0x90	                                     nop	       359	fsck.c	FUNCTION_16	IF_4
0xda6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       380	fsck.c	FUNCTION_16	IF_9
0xdaa	           0xfb600	                   movzx eax, byte [rax]	       380	fsck.c	FUNCTION_16	IF_9
0xdad	          0x83e00e	                            and eax, 0xe	       380	fsck.c	FUNCTION_16	IF_9
0xdb0	            0x3c04	                               cmp al, 4	       380	fsck.c	FUNCTION_16	IF_9
0xdb2	            0x750c	                           jne 0x4000e00	       380	fsck.c	FUNCTION_16	IF_9
0xdb4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       381	fsck.c	FUNCTION_16	CALL_14
0xdb8	          0x4889c7	                            mov rdi, rax	       381	fsck.c	FUNCTION_16	CALL_14
0xdbb	      0xe800000000	                          call 0x4000e00	       381	fsck.c	FUNCTION_16	CALL_14
0xdc0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       382	fsck.c	FUNCTION_16	IF_10
0xdc4	           0xfb600	                   movzx eax, byte [rax]	       382	fsck.c	FUNCTION_16	IF_10
0xdc7	          0x83e00e	                            and eax, 0xe	       382	fsck.c	FUNCTION_16	IF_10
0xdca	            0x3c02	                               cmp al, 2	       382	fsck.c	FUNCTION_16	IF_10
0xdcc	            0x750c	                           jne 0x4000e1a	       382	fsck.c	FUNCTION_16	IF_10
0xdce	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       383	fsck.c	FUNCTION_16	CALL_15
0xdd2	          0x4889c7	                            mov rdi, rax	       383	fsck.c	FUNCTION_16	CALL_15
0xdd5	      0xe800000000	                          call 0x4000e1a	       383	fsck.c	FUNCTION_16	CALL_15
0xdda	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       384	fsck.c	FUNCTION_16
0xddd	        0x4883c438	                           add rsp, 0x38	       385	fsck.c	FUNCTION_16
0xde1	              0x5b	                                 pop rbx	       385	fsck.c	FUNCTION_16
0xde2	              0x5d	                                 pop rbp	       385	fsck.c	FUNCTION_16
0xde3	              0xc3	                                     ret	       385	fsck.c	FUNCTION_16
describe_object	FOR,0:SWITCH,0:WHILE,0:IF,1:ELSE,0:functions,0:CALL,5:DO,0	36
0x1ad	              0x55	                                push rbp	        52	fsck.c	FUNCTION_1
0x1ae	          0x4889e5	                            mov rbp, rsp	        52	fsck.c	FUNCTION_1
0x1b1	        0x4883ec20	                           sub rsp, 0x20	        52	fsck.c	FUNCTION_1
0x1b5	        0x48897de8	             mov qword [rbp - 0x18], rdi	        52	fsck.c	FUNCTION_1
0x1b9	    0x8b0500000000	            mov eax, dword [0x040001ff] 	        54	fsck.c	FUNCTION_1
0x1bf	            0x85c0	                           test eax, eax	        55	fsck.c	FUNCTION_1	CALL_1
0x1c1	            0x7418	                            je 0x400021b	        55	fsck.c	FUNCTION_1	CALL_1
0x1c3	    0x488b05000000	            mov rax, qword [0x0400020a] 	        55	fsck.c	FUNCTION_1	CALL_1
0x1ca	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        55	fsck.c	FUNCTION_1	CALL_1
0x1ce	          0x4889d6	                            mov rsi, rdx	        55	fsck.c	FUNCTION_1	CALL_1
0x1d1	          0x4889c7	                            mov rdi, rax	        55	fsck.c	FUNCTION_1	CALL_1
0x1d4	      0xe800000000	                          call 0x4000219	        55	fsck.c	FUNCTION_1	CALL_1
0x1d9	            0xeb05	                           jmp 0x4000220	        55	fsck.c	FUNCTION_1	CALL_1
0x1db	      0xb800000000	                              mov eax, 0	        55	fsck.c	FUNCTION_1	CALL_1
0x1e0	        0x488945f8	                mov qword [rbp - 8], rax	        54	fsck.c	FUNCTION_1
0x1e4	      0xbe00000000	                              mov esi, 0	        57	fsck.c	FUNCTION_1	CALL_2
0x1e9	      0xbf00000000	                              mov edi, 0	        57	fsck.c	FUNCTION_1	CALL_2
0x1ee	      0xe86efeffff	                  call sym.strbuf_setlen	        57	fsck.c	FUNCTION_1	CALL_2
0x1f3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        58	fsck.c	FUNCTION_1	CALL_4
0x1f7	        0x4883c004	                              add rax, 4	        58	fsck.c	FUNCTION_1	CALL_4
0x1fb	          0x4889c7	                            mov rdi, rax	        58	fsck.c	FUNCTION_1	CALL_4
0x1fe	      0xe800000000	                          call 0x4000243	        58	fsck.c	FUNCTION_1	CALL_4
0x203	          0x4889c6	                            mov rsi, rax	        58	fsck.c	FUNCTION_1	CALL_4
0x206	      0xbf00000000	                              mov edi, 0	        58	fsck.c	FUNCTION_1	CALL_4
0x20b	      0xe8ebfeffff	                  call sym.strbuf_addstr	        58	fsck.c	FUNCTION_1	CALL_4
0x210	      0x48837df800	                  cmp qword [rbp - 8], 0	        59	fsck.c	FUNCTION_1	IF_1
0x215	            0x741b	                            je 0x4000272	        59	fsck.c	FUNCTION_1	IF_1
0x217	        0x488b45f8	                mov rax, qword [rbp - 8]	        60	fsck.c	FUNCTION_1	CALL_5
0x21b	          0x4889c2	                            mov rdx, rax	        60	fsck.c	FUNCTION_1	CALL_5
0x21e	      0xbe00000000	                              mov esi, 0	        60	fsck.c	FUNCTION_1	CALL_5
0x223	      0xbf00000000	                              mov edi, 0	        60	fsck.c	FUNCTION_1	CALL_5
0x228	      0xb800000000	                              mov eax, 0	        60	fsck.c	FUNCTION_1	CALL_5
0x22d	      0xe800000000	                          call 0x4000272	        60	fsck.c	FUNCTION_1	CALL_5
0x232	    0x488b05000000	            mov rax, qword [0x04000279] 	        62	fsck.c	FUNCTION_1
0x239	              0xc9	                                   leave	        63	fsck.c	FUNCTION_1
0x23a	              0xc3	                                     ret	        63	fsck.c	FUNCTION_1
traverse_one_object	FOR,0:SWITCH,0:WHILE,0:IF,1:ELSE,0:functions,0:CALL,2:DO,0	24
0x6fd	              0x55	                                push rbp	       185	fsck.c	FUNCTION_9
0x6fe	          0x4889e5	                            mov rbp, rsp	       185	fsck.c	FUNCTION_9
0x701	        0x4883ec20	                           sub rsp, 0x20	       185	fsck.c	FUNCTION_9
0x705	        0x48897de8	             mov qword [rbp - 0x18], rdi	       185	fsck.c	FUNCTION_9
0x709	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       186	fsck.c	FUNCTION_9	CALL_1
0x70d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       186	fsck.c	FUNCTION_9	CALL_1
0x711	      0xba00000000	                              mov edx, 0	       186	fsck.c	FUNCTION_9	CALL_1
0x716	          0x4889ce	                            mov rsi, rcx	       186	fsck.c	FUNCTION_9	CALL_1
0x719	          0x4889c7	                            mov rdi, rax	       186	fsck.c	FUNCTION_9	CALL_1
0x71c	      0xe800000000	                          call 0x4000761	       186	fsck.c	FUNCTION_9	CALL_1
0x721	          0x8945f4	              mov dword [rbp - 0xc], eax	       186	fsck.c	FUNCTION_9	CALL_1
0x724	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       188	fsck.c	FUNCTION_9	IF_1
0x728	           0xfb600	                   movzx eax, byte [rax]	       188	fsck.c	FUNCTION_9	IF_1
0x72b	          0x83e00e	                            and eax, 0xe	       188	fsck.c	FUNCTION_9	IF_1
0x72e	            0x3c04	                               cmp al, 4	       188	fsck.c	FUNCTION_9	IF_1
0x730	            0x7514	                           jne 0x4000786	       188	fsck.c	FUNCTION_9	IF_1
0x732	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       189	fsck.c	FUNCTION_9	IF_1
0x736	        0x488945f8	                mov qword [rbp - 8], rax	       189	fsck.c	FUNCTION_9	IF_1
0x73a	        0x488b45f8	                mov rax, qword [rbp - 8]	       190	fsck.c	FUNCTION_9	IF_1	CALL_2
0x73e	          0x4889c7	                            mov rdi, rax	       190	fsck.c	FUNCTION_9	IF_1	CALL_2
0x741	      0xe800000000	                          call 0x4000786	       190	fsck.c	FUNCTION_9	IF_1	CALL_2
0x746	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       192	fsck.c	FUNCTION_9
0x749	              0xc9	                                   leave	       193	fsck.c	FUNCTION_9
0x74a	              0xc3	                                     ret	       193	fsck.c	FUNCTION_9
fsck_obj_buffer	FOR,0:SWITCH,0:WHILE,0:IF,1:ELSE,0:functions,0:CALL,4:DO,0	64
0xde4	              0x55	                                push rbp	       389	fsck.c	FUNCTION_17
0xde5	          0x4889e5	                            mov rbp, rsp	       389	fsck.c	FUNCTION_17
0xde8	        0x4883ec40	                           sub rsp, 0x40	       389	fsck.c	FUNCTION_17
0xdec	        0x48897de8	             mov qword [rbp - 0x18], rdi	       389	fsck.c	FUNCTION_17
0xdf0	          0x8975e4	             mov dword [rbp - 0x1c], esi	       389	fsck.c	FUNCTION_17
0xdf3	        0x488955d8	             mov qword [rbp - 0x28], rdx	       389	fsck.c	FUNCTION_17
0xdf7	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       389	fsck.c	FUNCTION_17
0xdfb	        0x4c8945c8	              mov qword [rbp - 0x38], r8	       389	fsck.c	FUNCTION_17
0xdff	        0x488b7dc8	             mov rdi, qword [rbp - 0x38]	       395	fsck.c	FUNCTION_17	CALL_1
0xe03	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       395	fsck.c	FUNCTION_17	CALL_1
0xe07	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       395	fsck.c	FUNCTION_17	CALL_1
0xe0b	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	       395	fsck.c	FUNCTION_17	CALL_1
0xe0e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       395	fsck.c	FUNCTION_17	CALL_1
0xe12	          0x4989f8	                             mov r8, rdi	       395	fsck.c	FUNCTION_17	CALL_1
0xe15	          0x4889c7	                            mov rdi, rax	       395	fsck.c	FUNCTION_17	CALL_1
0xe18	      0xe800000000	                          call 0x4000e5d	       395	fsck.c	FUNCTION_17	CALL_1
0xe1d	        0x488945f8	                mov qword [rbp - 8], rax	       395	fsck.c	FUNCTION_17	CALL_1
0xe21	      0x48837df800	                  cmp qword [rbp - 8], 0	       396	fsck.c	FUNCTION_17	IF_1
0xe26	            0x7534	                           jne 0x4000e9c	       396	fsck.c	FUNCTION_17	IF_1
0xe28	    0x8b0500000000	            mov eax, dword [0x04000e6e] 	       397	fsck.c	FUNCTION_17	IF_1
0xe2e	          0x83c801	                               or eax, 1	       397	fsck.c	FUNCTION_17	IF_1
0xe31	    0x890500000000	            mov dword [0x04000e77], eax 	       397	fsck.c	FUNCTION_17	IF_1
0xe37	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       398	fsck.c	FUNCTION_17	IF_1	CALL_3
0xe3b	          0x4889c7	                            mov rdi, rax	       398	fsck.c	FUNCTION_17	IF_1	CALL_3
0xe3e	      0xe800000000	                          call 0x4000e83	       398	fsck.c	FUNCTION_17	IF_1	CALL_3
0xe43	          0x4889c6	                            mov rsi, rax	       398	fsck.c	FUNCTION_17	IF_1	CALL_3
0xe46	      0xbf00000000	                              mov edi, 0	       398	fsck.c	FUNCTION_17	IF_1	CALL_3
0xe4b	      0xb800000000	                              mov eax, 0	       398	fsck.c	FUNCTION_17	IF_1	CALL_3
0xe50	      0xe800000000	                          call 0x4000e95	       398	fsck.c	FUNCTION_17	IF_1	CALL_3
0xe55	      0xe8a6f1ffff	                    call sym.const_error	       398	fsck.c	FUNCTION_17	IF_1	CALL_3
0xe5a	            0xeb6a	                           jmp 0x4000f06	       398	fsck.c	FUNCTION_17	IF_1	CALL_3
0xe5c	        0x488b45f8	                mov rax, qword [rbp - 8]	       400	fsck.c	FUNCTION_17
0xe60	            0x8b00	                    mov eax, dword [rax]	       400	fsck.c	FUNCTION_17
0xe62	          0xc1e804	                              shr eax, 4	       400	fsck.c	FUNCTION_17
0xe65	      0x25ffffff07	                      and eax, 0x7ffffff	       400	fsck.c	FUNCTION_17
0xe6a	      0x25fcffff07	                      and eax, 0x7fffffc	       400	fsck.c	FUNCTION_17
0xe6f	            0x89c2	                            mov edx, eax	       400	fsck.c	FUNCTION_17
0xe71	        0x488b45f8	                mov rax, qword [rbp - 8]	       400	fsck.c	FUNCTION_17
0xe75	    0x81e2ffffff07	                      and edx, 0x7ffffff	       400	fsck.c	FUNCTION_17
0xe7b	            0x89d1	                            mov ecx, edx	       400	fsck.c	FUNCTION_17
0xe7d	          0xc1e104	                              shl ecx, 4	       400	fsck.c	FUNCTION_17
0xe80	            0x8b10	                    mov edx, dword [rax]	       400	fsck.c	FUNCTION_17
0xe82	    0x81e20f000080	                     and edx, 0x8000000f	       400	fsck.c	FUNCTION_17
0xe88	             0x9ca	                             or edx, ecx	       400	fsck.c	FUNCTION_17
0xe8a	            0x8910	                    mov dword [rax], edx	       400	fsck.c	FUNCTION_17
0xe8c	        0x488b45f8	                mov rax, qword [rbp - 8]	       401	fsck.c	FUNCTION_17
0xe90	            0x8b00	                    mov eax, dword [rax]	       401	fsck.c	FUNCTION_17
0xe92	          0xc1e804	                              shr eax, 4	       401	fsck.c	FUNCTION_17
0xe95	      0x25ffffff07	                      and eax, 0x7ffffff	       401	fsck.c	FUNCTION_17
0xe9a	          0x83c804	                               or eax, 4	       401	fsck.c	FUNCTION_17
0xe9d	            0x89c2	                            mov edx, eax	       401	fsck.c	FUNCTION_17
0xe9f	        0x488b45f8	                mov rax, qword [rbp - 8]	       401	fsck.c	FUNCTION_17
0xea3	    0x81e2ffffff07	                      and edx, 0x7ffffff	       401	fsck.c	FUNCTION_17
0xea9	            0x89d1	                            mov ecx, edx	       401	fsck.c	FUNCTION_17
0xeab	          0xc1e104	                              shl ecx, 4	       401	fsck.c	FUNCTION_17
0xeae	            0x8b10	                    mov edx, dword [rax]	       401	fsck.c	FUNCTION_17
0xeb0	    0x81e20f000080	                     and edx, 0x8000000f	       401	fsck.c	FUNCTION_17
0xeb6	             0x9ca	                             or edx, ecx	       401	fsck.c	FUNCTION_17
0xeb8	            0x8910	                    mov dword [rax], edx	       401	fsck.c	FUNCTION_17
0xeba	        0x488b45f8	                mov rax, qword [rbp - 8]	       402	fsck.c	FUNCTION_17	CALL_4
0xebe	          0x4889c7	                            mov rdi, rax	       402	fsck.c	FUNCTION_17	CALL_4
0xec1	      0xe80ffdffff	                       call sym.fsck_obj	       402	fsck.c	FUNCTION_17	CALL_4
0xec6	              0xc9	                                   leave	       403	fsck.c	FUNCTION_17
0xec7	              0xc3	                                     ret	       403	fsck.c	FUNCTION_17
fsck_config	FOR,0:SWITCH,0:WHILE,0:IF,3:ELSE,0:functions,0:CALL,9:DO,0	72
0x2c2	              0x55	                                push rbp	        84	fsck.c	FUNCTION_3
0x2c3	          0x4889e5	                            mov rbp, rsp	        84	fsck.c	FUNCTION_3
0x2c6	        0x4883ec50	                           sub rsp, 0x50	        84	fsck.c	FUNCTION_3
0x2ca	        0x48897dc8	             mov qword [rbp - 0x38], rdi	        84	fsck.c	FUNCTION_3
0x2ce	        0x488975c0	             mov qword [rbp - 0x40], rsi	        84	fsck.c	FUNCTION_3
0x2d2	        0x488955b8	             mov qword [rbp - 0x48], rdx	        84	fsck.c	FUNCTION_3
0x2d6	    0x64488b042528	                mov rax, qword fs:[0x28]	        84	fsck.c	FUNCTION_3
0x2df	        0x488945f8	                mov qword [rbp - 8], rax	        84	fsck.c	FUNCTION_3
0x2e3	            0x31c0	                            xor eax, eax	        84	fsck.c	FUNCTION_3
0x2e5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        85	fsck.c	FUNCTION_3	IF_1	CALL_1
0x2e9	      0xbe00000000	                              mov esi, 0	        85	fsck.c	FUNCTION_3	IF_1	CALL_1
0x2ee	          0x4889c7	                            mov rdi, rax	        85	fsck.c	FUNCTION_3	IF_1	CALL_1
0x2f1	      0xe800000000	                          call 0x4000336	        85	fsck.c	FUNCTION_3	IF_1	CALL_1
0x2f6	            0x85c0	                           test eax, eax	        85	fsck.c	FUNCTION_3	IF_1	CALL_1
0x2f8	     0xf8587000000	                           jne 0x40003c5	        85	fsck.c	FUNCTION_3	IF_1	CALL_1
0x2fe	    0x48c745e00000	               mov qword [rbp - 0x20], 0	        87	fsck.c	FUNCTION_3	IF_1
0x306	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        87	fsck.c	FUNCTION_3	IF_1
0x30e	    0x48c745f00000	               mov qword [rbp - 0x10], 0	        87	fsck.c	FUNCTION_3	IF_1
0x316	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	        89	fsck.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x31a	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	        89	fsck.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x31e	        0x488d45d8	                   lea rax, [rbp - 0x28]	        89	fsck.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x322	          0x4889ce	                            mov rsi, rcx	        89	fsck.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x325	          0x4889c7	                            mov rdi, rax	        89	fsck.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x328	      0xe800000000	                          call 0x400036d	        89	fsck.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x32d	            0x85c0	                           test eax, eax	        89	fsck.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x32f	            0x740a	                            je 0x400037b	        89	fsck.c	FUNCTION_3	IF_1	IF_2	CALL_2
0x331	      0xb801000000	                              mov eax, 1	        90	fsck.c	FUNCTION_3	IF_1	IF_2
0x336	      0xe996000000	                           jmp 0x4000411	        90	fsck.c	FUNCTION_3	IF_1	IF_2
0x33b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	        91	fsck.c	FUNCTION_3	IF_1	CALL_3
0x33f	        0x488d45e0	                   lea rax, [rbp - 0x20]	        91	fsck.c	FUNCTION_3	IF_1	CALL_3
0x343	      0xbe00000000	                              mov esi, 0	        91	fsck.c	FUNCTION_3	IF_1	CALL_3
0x348	          0x4889c7	                            mov rdi, rax	        91	fsck.c	FUNCTION_3	IF_1	CALL_3
0x34b	      0xb800000000	                              mov eax, 0	        91	fsck.c	FUNCTION_3	IF_1	CALL_3
0x350	      0xe800000000	                          call 0x4000395	        91	fsck.c	FUNCTION_3	IF_1	CALL_3
0x355	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        92	fsck.c	FUNCTION_3	IF_1	CALL_4
0x359	          0x4889c7	                            mov rdi, rax	        92	fsck.c	FUNCTION_3	IF_1	CALL_4
0x35c	      0xe800000000	                          call 0x40003a1	        92	fsck.c	FUNCTION_3	IF_1	CALL_4
0x361	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        93	fsck.c	FUNCTION_3	IF_1	CALL_5
0x365	          0x4889c6	                            mov rsi, rax	        93	fsck.c	FUNCTION_3	IF_1	CALL_5
0x368	      0xbf00000000	                              mov edi, 0	        93	fsck.c	FUNCTION_3	IF_1	CALL_5
0x36d	      0xe800000000	                          call 0x40003b2	        93	fsck.c	FUNCTION_3	IF_1	CALL_5
0x372	        0x488d45e0	                   lea rax, [rbp - 0x20]	        94	fsck.c	FUNCTION_3	IF_1	CALL_6
0x376	          0x4889c7	                            mov rdi, rax	        94	fsck.c	FUNCTION_3	IF_1	CALL_6
0x379	      0xe800000000	                          call 0x40003be	        94	fsck.c	FUNCTION_3	IF_1	CALL_6
0x37e	      0xb800000000	                              mov eax, 0	        95	fsck.c	FUNCTION_3	IF_1
0x383	            0xeb4c	                           jmp 0x4000411	        95	fsck.c	FUNCTION_3	IF_1
0x385	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        98	fsck.c	FUNCTION_3	IF_3	CALL_7
0x389	        0x488d55c8	                   lea rdx, [rbp - 0x38]	        98	fsck.c	FUNCTION_3	IF_3	CALL_7
0x38d	      0xbe00000000	                              mov esi, 0	        98	fsck.c	FUNCTION_3	IF_3	CALL_7
0x392	          0x4889c7	                            mov rdi, rax	        98	fsck.c	FUNCTION_3	IF_3	CALL_7
0x395	      0xe871fcffff	                    call sym.skip_prefix	        98	fsck.c	FUNCTION_3	IF_3	CALL_7
0x39a	            0x85c0	                           test eax, eax	        98	fsck.c	FUNCTION_3	IF_3	CALL_7
0x39c	            0x741c	                            je 0x40003fa	        98	fsck.c	FUNCTION_3	IF_3	CALL_7
0x39e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        99	fsck.c	FUNCTION_3	IF_3	CALL_8
0x3a2	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	        99	fsck.c	FUNCTION_3	IF_3	CALL_8
0x3a6	          0x4889c6	                            mov rsi, rax	        99	fsck.c	FUNCTION_3	IF_3	CALL_8
0x3a9	      0xbf00000000	                              mov edi, 0	        99	fsck.c	FUNCTION_3	IF_3	CALL_8
0x3ae	      0xe800000000	                          call 0x40003f3	        99	fsck.c	FUNCTION_3	IF_3	CALL_8
0x3b3	      0xb800000000	                              mov eax, 0	       100	fsck.c	FUNCTION_3	IF_3
0x3b8	            0xeb17	                           jmp 0x4000411	       100	fsck.c	FUNCTION_3	IF_3
0x3ba	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       103	fsck.c	FUNCTION_3	CALL_9
0x3be	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       103	fsck.c	FUNCTION_3	CALL_9
0x3c2	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       103	fsck.c	FUNCTION_3	CALL_9
0x3c6	          0x4889ce	                            mov rsi, rcx	       103	fsck.c	FUNCTION_3	CALL_9
0x3c9	          0x4889c7	                            mov rdi, rax	       103	fsck.c	FUNCTION_3	CALL_9
0x3cc	      0xe800000000	                          call 0x4000411	       103	fsck.c	FUNCTION_3	CALL_9
0x3d1	        0x488b4df8	                mov rcx, qword [rbp - 8]	       104	fsck.c	FUNCTION_3
0x3d5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       104	fsck.c	FUNCTION_3
0x3de	            0x7405	                            je 0x4000425	       104	fsck.c	FUNCTION_3
0x3e0	      0xe800000000	                          call 0x4000425	       104	fsck.c	FUNCTION_3
0x3e5	              0xc9	                                   leave	       104	fsck.c	FUNCTION_3
0x3e6	              0xc3	                                     ret	       104	fsck.c	FUNCTION_3
const_error	FOR,0:SWITCH,0:WHILE,0:IF,0:ELSE,0:functions,0:CALL,0:DO,0	5
0x0	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_43
0x1	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_43
0x4	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_43
0x9	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_43
0xa	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_43
fsck_head_link	FOR,0:SWITCH,0:WHILE,0:IF,6:ELSE,1:functions,0:CALL,9:DO,0	78
0x15b8	              0x55	                                push rbp	       580	fsck.c	FUNCTION_28
0x15b9	          0x4889e5	                            mov rbp, rsp	       580	fsck.c	FUNCTION_28
0x15bc	        0x4883ec10	                           sub rsp, 0x10	       580	fsck.c	FUNCTION_28
0x15c0	    0xc745fc000000	                  mov dword [rbp - 4], 0	       581	fsck.c	FUNCTION_28
0x15c7	    0x8b0500000000	            mov eax, dword [0x0400160d] 	       583	fsck.c	FUNCTION_28	IF_1
0x15cd	            0x85c0	                           test eax, eax	       583	fsck.c	FUNCTION_28	IF_1
0x15cf	            0x741e	                            je 0x400162f	       583	fsck.c	FUNCTION_28	IF_1
0x15d1	    0x488b05000000	            mov rax, qword [0x04001618] 	       584	fsck.c	FUNCTION_28	CALL_1
0x15d8	          0x4889c1	                            mov rcx, rax	       584	fsck.c	FUNCTION_28	CALL_1
0x15db	      0xba13000000	                           mov edx, 0x13	       584	fsck.c	FUNCTION_28	CALL_1
0x15e0	      0xbe01000000	                              mov esi, 1	       584	fsck.c	FUNCTION_28	CALL_1
0x15e5	      0xbf00000000	                              mov edi, 0	       584	fsck.c	FUNCTION_28	CALL_1
0x15ea	      0xe800000000	                          call 0x400162f	       584	fsck.c	FUNCTION_28	CALL_1
0x15ef	      0xb900000000	                              mov ecx, 0	       586	fsck.c	FUNCTION_28	CALL_2
0x15f4	      0xba00000000	                              mov edx, 0	       586	fsck.c	FUNCTION_28	CALL_2
0x15f9	      0xbe00000000	                              mov esi, 0	       586	fsck.c	FUNCTION_28	CALL_2
0x15fe	      0xbf00000000	                              mov edi, 0	       586	fsck.c	FUNCTION_28	CALL_2
0x1603	      0xe800000000	                          call 0x4001648	       586	fsck.c	FUNCTION_28	CALL_2
0x1608	    0x488905000000	            mov qword [0x0400164f], rax 	       586	fsck.c	FUNCTION_28	CALL_2
0x160f	    0x488b05000000	            mov rax, qword [0x04001656] 	       587	fsck.c	FUNCTION_28	IF_2
0x1616	          0x4885c0	                           test rax, rax	       587	fsck.c	FUNCTION_28	IF_2
0x1619	            0x7528	                           jne 0x4001683	       587	fsck.c	FUNCTION_28	IF_2
0x161b	    0x8b0500000000	            mov eax, dword [0x04001661] 	       588	fsck.c	FUNCTION_28	IF_2
0x1621	          0x83c808	                               or eax, 8	       588	fsck.c	FUNCTION_28	IF_2
0x1624	    0x890500000000	            mov dword [0x0400166a], eax 	       588	fsck.c	FUNCTION_28	IF_2
0x162a	      0xbf00000000	                              mov edi, 0	       589	fsck.c	FUNCTION_28	IF_2	CALL_3
0x162f	      0xb800000000	                              mov eax, 0	       589	fsck.c	FUNCTION_28	IF_2	CALL_3
0x1634	      0xe800000000	                          call 0x4001679	       589	fsck.c	FUNCTION_28	IF_2	CALL_3
0x1639	      0xe8c2e9ffff	                    call sym.const_error	       589	fsck.c	FUNCTION_28	IF_2	CALL_3
0x163e	      0xe9ca000000	                           jmp 0x400174d	       589	fsck.c	FUNCTION_28	IF_2	CALL_3
0x1643	    0x488b05000000	            mov rax, qword [0x0400168a] 	       591	fsck.c	FUNCTION_28	IF_3	CALL_4
0x164a	      0xbe00000000	                              mov esi, 0	       591	fsck.c	FUNCTION_28	IF_3	CALL_4
0x164f	          0x4889c7	                            mov rdi, rax	       591	fsck.c	FUNCTION_28	IF_3	CALL_4
0x1652	      0xe800000000	                          call 0x4001697	       591	fsck.c	FUNCTION_28	IF_3	CALL_4
0x1657	            0x85c0	                           test eax, eax	       591	fsck.c	FUNCTION_28	IF_3	CALL_4
0x1659	            0x7509	                           jne 0x40016a4	       591	fsck.c	FUNCTION_28	IF_3	CALL_4
0x165b	    0xc745fc010000	                  mov dword [rbp - 4], 1	       593	fsck.c	FUNCTION_28	IF_3
0x1662	            0xeb47	                           jmp 0x40016eb	       593	fsck.c	FUNCTION_28	IF_3
0x1664	    0x488b05000000	            mov rax, qword [0x040016ab] 	       594	fsck.c	FUNCTION_28	ELSE_1	IF_4	CALL_5
0x166b	      0xbe00000000	                              mov esi, 0	       594	fsck.c	FUNCTION_28	ELSE_1	IF_4	CALL_5
0x1670	          0x4889c7	                            mov rdi, rax	       594	fsck.c	FUNCTION_28	ELSE_1	IF_4	CALL_5
0x1673	      0xe800000000	                          call 0x40016b8	       594	fsck.c	FUNCTION_28	ELSE_1	IF_4	CALL_5
0x1678	            0x85c0	                           test eax, eax	       594	fsck.c	FUNCTION_28	ELSE_1	IF_4	CALL_5
0x167a	            0x752f	                           jne 0x40016eb	       594	fsck.c	FUNCTION_28	ELSE_1	IF_4	CALL_5
0x167c	    0x8b0500000000	            mov eax, dword [0x040016c2] 	       595	fsck.c	FUNCTION_28	ELSE_1	IF_4
0x1682	          0x83c808	                               or eax, 8	       595	fsck.c	FUNCTION_28	ELSE_1	IF_4
0x1685	    0x890500000000	            mov dword [0x040016cb], eax 	       595	fsck.c	FUNCTION_28	ELSE_1	IF_4
0x168b	    0x488b05000000	            mov rax, qword [0x040016d2] 	       596	fsck.c	FUNCTION_28	ELSE_1	IF_4	CALL_6
0x1692	          0x4889c6	                            mov rsi, rax	       596	fsck.c	FUNCTION_28	ELSE_1	IF_4	CALL_6
0x1695	      0xbf00000000	                              mov edi, 0	       596	fsck.c	FUNCTION_28	ELSE_1	IF_4	CALL_6
0x169a	      0xb800000000	                              mov eax, 0	       596	fsck.c	FUNCTION_28	ELSE_1	IF_4	CALL_6
0x169f	      0xe800000000	                          call 0x40016e4	       596	fsck.c	FUNCTION_28	ELSE_1	IF_4	CALL_6
0x16a4	      0xe857e9ffff	                    call sym.const_error	       596	fsck.c	FUNCTION_28	ELSE_1	IF_4	CALL_6
0x16a9	            0xeb62	                           jmp 0x400174d	       596	fsck.c	FUNCTION_28	ELSE_1	IF_4	CALL_6
0x16ab	      0xbf00000000	                              mov edi, 0	       599	fsck.c	FUNCTION_28	IF_5	CALL_7
0x16b0	      0xe8d1eaffff	                    call sym.is_null_oid	       599	fsck.c	FUNCTION_28	IF_5	CALL_7
0x16b5	            0x85c0	                           test eax, eax	       599	fsck.c	FUNCTION_28	IF_5	CALL_7
0x16b7	            0x744f	                            je 0x4001748	       599	fsck.c	FUNCTION_28	IF_5	CALL_7
0x16b9	        0x837dfc00	                  cmp dword [rbp - 4], 0	       600	fsck.c	FUNCTION_28	IF_5	IF_6
0x16bd	            0x7425	                            je 0x4001724	       600	fsck.c	FUNCTION_28	IF_5	IF_6
0x16bf	    0x8b0500000000	            mov eax, dword [0x04001705] 	       601	fsck.c	FUNCTION_28	IF_5	IF_6
0x16c5	          0x83c808	                               or eax, 8	       601	fsck.c	FUNCTION_28	IF_5	IF_6
0x16c8	    0x890500000000	            mov dword [0x0400170e], eax 	       601	fsck.c	FUNCTION_28	IF_5	IF_6
0x16ce	      0xbf00000000	                              mov edi, 0	       602	fsck.c	FUNCTION_28	IF_5	IF_6	CALL_8
0x16d3	      0xb800000000	                              mov eax, 0	       602	fsck.c	FUNCTION_28	IF_5	IF_6	CALL_8
0x16d8	      0xe800000000	                          call 0x400171d	       602	fsck.c	FUNCTION_28	IF_5	IF_6	CALL_8
0x16dd	      0xe81ee9ffff	                    call sym.const_error	       602	fsck.c	FUNCTION_28	IF_5	IF_6	CALL_8
0x16e2	            0xeb29	                           jmp 0x400174d	       602	fsck.c	FUNCTION_28	IF_5	IF_6	CALL_8
0x16e4	    0x488b05000000	            mov rax, qword [0x0400172b] 	       604	fsck.c	FUNCTION_28	IF_5	CALL_9
0x16eb	        0x488d500b	                    lea rdx, [rax + 0xb]	       604	fsck.c	FUNCTION_28	IF_5	CALL_9
0x16ef	    0x488b05000000	            mov rax, qword [0x04001736] 	       604	fsck.c	FUNCTION_28	IF_5	CALL_9
0x16f6	      0xbe00000000	                              mov esi, 0	       604	fsck.c	FUNCTION_28	IF_5	CALL_9
0x16fb	          0x4889c7	                            mov rdi, rax	       604	fsck.c	FUNCTION_28	IF_5	CALL_9
0x16fe	      0xb800000000	                              mov eax, 0	       604	fsck.c	FUNCTION_28	IF_5	CALL_9
0x1703	      0xe800000000	                          call 0x4001748	       604	fsck.c	FUNCTION_28	IF_5	CALL_9
0x1708	      0xb800000000	                              mov eax, 0	       607	fsck.c	FUNCTION_28
0x170d	              0xc9	                                   leave	       608	fsck.c	FUNCTION_28
0x170e	              0xc3	                                     ret	       608	fsck.c	FUNCTION_28
cmd_fsck	FOR,5:SWITCH,0:WHILE,0:IF,20:ELSE,1:functions,0:CALL,36:DO,0	346
0x191e	              0x55	                                push rbp	       686	fsck.c	FUNCTION_33
0x191f	          0x4889e5	                            mov rbp, rsp	       686	fsck.c	FUNCTION_33
0x1922	              0x53	                                push rbx	       686	fsck.c	FUNCTION_33
0x1923	    0x4881ec980000	                           sub rsp, 0x98	       686	fsck.c	FUNCTION_33
0x192a	    0x89bd7cffffff	             mov dword [rbp - 0x84], edi	       686	fsck.c	FUNCTION_33
0x1930	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	       686	fsck.c	FUNCTION_33
0x1937	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	       686	fsck.c	FUNCTION_33
0x193e	    0x64488b042528	                mov rax, qword fs:[0x28]	       686	fsck.c	FUNCTION_33
0x1947	        0x488945e8	             mov qword [rbp - 0x18], rax	       686	fsck.c	FUNCTION_33
0x194b	            0x31c0	                            xor eax, eax	       686	fsck.c	FUNCTION_33
0x194d	    0xc70500000000	               mov dword [0x04001997], 0	       691	fsck.c	FUNCTION_33
0x1957	    0xc70500000000	               mov dword [0x040019a1], 0	       693	fsck.c	FUNCTION_33
0x1961	    0xc70500000000	               mov dword [0x040019ab], 0	       694	fsck.c	FUNCTION_33
0x196b	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       696	fsck.c	FUNCTION_33	CALL_1
0x1972	    0x488bb570ffff	             mov rsi, qword [rbp - 0x90]	       696	fsck.c	FUNCTION_33	CALL_1
0x1979	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	       696	fsck.c	FUNCTION_33	CALL_1
0x197f	    0x41b900000000	                              mov r9d, 0	       696	fsck.c	FUNCTION_33	CALL_1
0x1985	    0x41b800000000	                              mov r8d, 0	       696	fsck.c	FUNCTION_33	CALL_1
0x198b	      0xb900000000	                              mov ecx, 0	       696	fsck.c	FUNCTION_33	CALL_1
0x1990	            0x89c7	                            mov edi, eax	       696	fsck.c	FUNCTION_33	CALL_1
0x1992	      0xe800000000	                          call 0x40019d7	       696	fsck.c	FUNCTION_33	CALL_1
0x1997	    0x89857cffffff	             mov dword [rbp - 0x84], eax	       696	fsck.c	FUNCTION_33	CALL_1
0x199d	    0x48c705000000	               mov qword [0x040019e8], 0	       698	fsck.c	FUNCTION_33
0x19a8	    0x48c705000000	               mov qword [0x040019f3], 0	       699	fsck.c	FUNCTION_33
0x19b3	    0x48c705000000	               mov qword [0x040019fe], 0	       700	fsck.c	FUNCTION_33
0x19be	    0x8b0500000000	            mov eax, dword [0x04001a04] 	       701	fsck.c	FUNCTION_33	IF_1
0x19c4	            0x85c0	                           test eax, eax	       701	fsck.c	FUNCTION_33	IF_1
0x19c6	            0x7410	                            je 0x4001a18	       701	fsck.c	FUNCTION_33	IF_1
0x19c8	     0xfb605000000	           movzx eax, byte [0x04001a0f] 	       702	fsck.c	FUNCTION_33	IF_1
0x19cf	          0x83c801	                               or eax, 1	       702	fsck.c	FUNCTION_33	IF_1
0x19d2	    0x880500000000	               mov byte [0x04001a18], al	       702	fsck.c	FUNCTION_33	IF_1
0x19d8	    0x8b0500000000	            mov eax, dword [0x04001a1e] 	       704	fsck.c	FUNCTION_33	IF_2
0x19de	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       704	fsck.c	FUNCTION_33	IF_2
0x19e1	            0x7510	                           jne 0x4001a33	       704	fsck.c	FUNCTION_33	IF_2
0x19e3	      0xbf02000000	                              mov edi, 2	       705	fsck.c	FUNCTION_33	CALL_2
0x19e8	      0xe800000000	                          call 0x4001a2d	       705	fsck.c	FUNCTION_33	CALL_2
0x19ed	    0x890500000000	            mov dword [0x04001a33], eax 	       705	fsck.c	FUNCTION_33	CALL_2
0x19f3	    0x8b0500000000	            mov eax, dword [0x04001a39] 	       706	fsck.c	FUNCTION_33	IF_3
0x19f9	            0x85c0	                           test eax, eax	       706	fsck.c	FUNCTION_33	IF_3
0x19fb	            0x740a	                            je 0x4001a47	       706	fsck.c	FUNCTION_33	IF_3
0x19fd	    0xc70500000000	               mov dword [0x04001a47], 0	       707	fsck.c	FUNCTION_33	IF_3
0x1a07	    0x8b0500000000	            mov eax, dword [0x04001a4d] 	       709	fsck.c	FUNCTION_33	IF_4
0x1a0d	            0x85c0	                           test eax, eax	       709	fsck.c	FUNCTION_33	IF_4
0x1a0f	            0x7414	                            je 0x4001a65	       709	fsck.c	FUNCTION_33	IF_4
0x1a11	    0xc70500000000	               mov dword [0x04001a5b], 1	       710	fsck.c	FUNCTION_33	IF_4
0x1a1b	    0xc70500000000	               mov dword [0x04001a65], 0	       711	fsck.c	FUNCTION_33	IF_4
0x1a25	    0x8b0500000000	            mov eax, dword [0x04001a6b] 	       714	fsck.c	FUNCTION_33	IF_5
0x1a2b	            0x85c0	                           test eax, eax	       714	fsck.c	FUNCTION_33	IF_5
0x1a2d	            0x7416	                            je 0x4001a85	       714	fsck.c	FUNCTION_33	IF_5
0x1a2f	      0xbe18000000	                           mov esi, 0x18	       716	fsck.c	FUNCTION_33	CALL_3
0x1a34	      0xbf01000000	                              mov edi, 1	       716	fsck.c	FUNCTION_33	CALL_3
0x1a39	      0xe800000000	                          call 0x4001a7e	       716	fsck.c	FUNCTION_33	CALL_3
0x1a3e	    0x488905000000	            mov qword [0x04001a85], rax 	       715	fsck.c	FUNCTION_33	IF_5
0x1a45	      0xbe00000000	                              mov esi, 0	       718	fsck.c	FUNCTION_33	CALL_4
0x1a4a	      0xbf00000000	                              mov edi, 0	       718	fsck.c	FUNCTION_33	CALL_4
0x1a4f	      0xe800000000	                          call 0x4001a94	       718	fsck.c	FUNCTION_33	CALL_4
0x1a54	      0xe85ffbffff	                 call sym.fsck_head_link	       720	fsck.c	FUNCTION_33	CALL_5
0x1a59	    0x8b0500000000	            mov eax, dword [0x04001a9f] 	       721	fsck.c	FUNCTION_33	IF_6
0x1a5f	            0x85c0	                           test eax, eax	       721	fsck.c	FUNCTION_33	IF_6
0x1a61	            0x742d	                            je 0x4001ad0	       721	fsck.c	FUNCTION_33	IF_6
0x1a63	      0xba00000000	                              mov edx, 0	       722	fsck.c	FUNCTION_33	IF_6	CALL_6
0x1a68	      0xbe00000000	                              mov esi, 0	       722	fsck.c	FUNCTION_33	IF_6	CALL_6
0x1a6d	      0xbf00000000	                              mov edi, 0	       722	fsck.c	FUNCTION_33	IF_6	CALL_6
0x1a72	      0xe800000000	                          call 0x4001ab7	       722	fsck.c	FUNCTION_33	IF_6	CALL_6
0x1a77	      0xba00000000	                              mov edx, 0	       723	fsck.c	FUNCTION_33	IF_6	CALL_7
0x1a7c	      0xbe00000000	                              mov esi, 0	       723	fsck.c	FUNCTION_33	IF_6	CALL_7
0x1a81	      0xbf00000000	                              mov edi, 0	       723	fsck.c	FUNCTION_33	IF_6	CALL_7
0x1a86	      0xe800000000	                          call 0x4001acb	       723	fsck.c	FUNCTION_33	IF_6	CALL_7
0x1a8b	      0xe953010000	                           jmp 0x4001c23	       723	fsck.c	FUNCTION_33	IF_6	CALL_7
0x1a90	      0xe800000000	                          call 0x4001ad5	       727	fsck.c	FUNCTION_33	ELSE_1	CALL_9
0x1a95	          0x4889c7	                            mov rdi, rax	       727	fsck.c	FUNCTION_33	ELSE_1	CALL_9
0x1a98	      0xe855faffff	                call sym.fsck_object_dir	       727	fsck.c	FUNCTION_33	ELSE_1	CALL_9
0x1a9d	    0x488b05000000	            mov rax, qword [0x04001ae4] 	       729	fsck.c	FUNCTION_33	ELSE_1	CALL_10
0x1aa4	          0x4889c7	                            mov rdi, rax	       729	fsck.c	FUNCTION_33	ELSE_1	CALL_10
0x1aa7	      0xe800000000	                          call 0x4001aec	       729	fsck.c	FUNCTION_33	ELSE_1	CALL_10
0x1aac	    0x488b05000000	            mov rax, qword [0x04001af3] 	       730	fsck.c	FUNCTION_33	ELSE_1
0x1ab3	        0x488b4010	            mov rax, qword [rax + 0x10] 	       730	fsck.c	FUNCTION_33	ELSE_1
0x1ab7	        0x488b4010	            mov rax, qword [rax + 0x10] 	       730	fsck.c	FUNCTION_33	ELSE_1
0x1abb	        0x488945a8	             mov qword [rbp - 0x58], rax	       730	fsck.c	FUNCTION_33	ELSE_1
0x1abf	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       731	fsck.c	FUNCTION_33	ELSE_1	FOR_1
0x1ac3	        0x48894598	             mov qword [rbp - 0x68], rax	       731	fsck.c	FUNCTION_33	ELSE_1	FOR_1
0x1ac7	            0xeb1d	                           jmp 0x4001b26	       731	fsck.c	FUNCTION_33	ELSE_1	FOR_1
0x1ac9	        0x488b4598	             mov rax, qword [rbp - 0x68]	       732	fsck.c	FUNCTION_33	ELSE_1	CALL_11
0x1acd	    0x480540010000	                          add rax, 0x140	       732	fsck.c	FUNCTION_33	ELSE_1	CALL_11
0x1ad3	          0x4889c7	                            mov rdi, rax	       732	fsck.c	FUNCTION_33	ELSE_1	CALL_11
0x1ad6	      0xe817faffff	                call sym.fsck_object_dir	       732	fsck.c	FUNCTION_33	ELSE_1	CALL_11
0x1adb	        0x488b4598	             mov rax, qword [rbp - 0x68]	       731	fsck.c	FUNCTION_33	ELSE_1	FOR_1
0x1adf	          0x488b00	                    mov rax, qword [rax]	       731	fsck.c	FUNCTION_33	ELSE_1	FOR_1
0x1ae2	        0x48894598	             mov qword [rbp - 0x68], rax	       731	fsck.c	FUNCTION_33	ELSE_1	FOR_1
0x1ae6	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       731	fsck.c	FUNCTION_33	ELSE_1	FOR_1
0x1aeb	            0x75dc	                           jne 0x4001b09	       731	fsck.c	FUNCTION_33	ELSE_1	FOR_1
0x1aed	    0x8b0500000000	            mov eax, dword [0x04001b33] 	       734	fsck.c	FUNCTION_33	ELSE_1	IF_7
0x1af3	            0x85c0	                           test eax, eax	       734	fsck.c	FUNCTION_33	ELSE_1	IF_7
0x1af5	     0xf84e8000000	                            je 0x4001c23	       734	fsck.c	FUNCTION_33	ELSE_1	IF_7
0x1afb	    0xc74584000000	               mov dword [rbp - 0x7c], 0	       736	fsck.c	FUNCTION_33	ELSE_1	IF_7
0x1b02	    0xc74588000000	               mov dword [rbp - 0x78], 0	       736	fsck.c	FUNCTION_33	ELSE_1	IF_7
0x1b09	    0x48c745900000	               mov qword [rbp - 0x70], 0	       737	fsck.c	FUNCTION_33	ELSE_1	IF_7
0x1b11	    0x8b0500000000	            mov eax, dword [0x04001b57] 	       739	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8
0x1b17	            0x85c0	                           test eax, eax	       739	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8
0x1b19	            0x7460	                            je 0x4001bbb	       739	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8
0x1b1b	    0x488b05000000	            mov rax, qword [0x04001b62] 	       740	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2	CALL_12
0x1b22	          0x4889c7	                            mov rdi, rax	       740	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2	CALL_12
0x1b25	      0xe800000000	                          call 0x4001b6a	       740	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2	CALL_12
0x1b2a	        0x488945a0	             mov qword [rbp - 0x60], rax	       740	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2	CALL_12
0x1b2e	            0xeb28	                           jmp 0x4001b98	       740	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2	CALL_12
0x1b30	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       742	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2	IF_9	CALL_13
0x1b34	          0x4889c7	                            mov rdi, rax	       742	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2	IF_9	CALL_13
0x1b37	      0xe800000000	                          call 0x4001b7c	       742	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2	IF_9	CALL_13
0x1b3c	            0x85c0	                           test eax, eax	       742	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2	IF_9	CALL_13
0x1b3e	            0x750c	                           jne 0x4001b8c	       742	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2	IF_9	CALL_13
0x1b40	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       744	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2
0x1b44	          0x8b4038	            mov eax, dword [rax + 0x38] 	       744	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2
0x1b47	           0x14584	             add dword [rbp - 0x7c], eax	       744	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2
0x1b4a	            0xeb01	                           jmp 0x4001b8d	       744	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2
0x1b4c	              0x90	                                     nop	       743	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2	IF_9
0x1b4d	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       741	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2
0x1b51	          0x488b00	                    mov rax, qword [rax]	       741	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2
0x1b54	        0x488945a0	             mov qword [rbp - 0x60], rax	       741	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2
0x1b58	      0x48837da000	               cmp qword [rbp - 0x60], 0	       740	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2	CALL_12
0x1b5d	            0x75d1	                           jne 0x4001b70	       740	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	FOR_2	CALL_12
0x1b5f	          0x8b5d84	             mov ebx, dword [rbp - 0x7c]	       747	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	CALL_15
0x1b62	      0xbf00000000	                              mov edi, 0	       747	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	CALL_15
0x1b67	      0xe8c4e5ffff	                               call sym.	       747	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	CALL_15
0x1b6c	          0x4889de	                            mov rsi, rbx	       747	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	CALL_15
0x1b6f	          0x4889c7	                            mov rdi, rax	       747	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	CALL_15
0x1b72	      0xe800000000	                          call 0x4001bb7	       747	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	CALL_15
0x1b77	        0x48894590	             mov qword [rbp - 0x70], rax	       747	fsck.c	FUNCTION_33	ELSE_1	IF_7	IF_8	CALL_15
0x1b7b	    0x488b05000000	            mov rax, qword [0x04001bc2] 	       749	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	CALL_16
0x1b82	          0x4889c7	                            mov rdi, rax	       749	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	CALL_16
0x1b85	      0xe800000000	                          call 0x4001bca	       749	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	CALL_16
0x1b8a	        0x488945a0	             mov qword [rbp - 0x60], rax	       749	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	CALL_16
0x1b8e	            0xeb40	                           jmp 0x4001c10	       749	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	CALL_16
0x1b90	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       752	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	IF_10	CALL_17
0x1b94	          0x8b4d88	             mov ecx, dword [rbp - 0x78]	       752	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	IF_10	CALL_17
0x1b97	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       752	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	IF_10	CALL_17
0x1b9b	      0xbe00000000	                              mov esi, 0	       752	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	IF_10	CALL_17
0x1ba0	          0x4889c7	                            mov rdi, rax	       752	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	IF_10	CALL_17
0x1ba3	      0xe800000000	                          call 0x4001be8	       752	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	IF_10	CALL_17
0x1ba8	            0x85c0	                           test eax, eax	       752	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	IF_10	CALL_17
0x1baa	            0x740f	                            je 0x4001bfb	       752	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	IF_10	CALL_17
0x1bac	    0x8b0500000000	            mov eax, dword [0x04001bf2] 	       754	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	IF_10
0x1bb2	          0x83c804	                               or eax, 4	       754	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	IF_10
0x1bb5	    0x890500000000	            mov dword [0x04001bfb], eax 	       754	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	IF_10
0x1bbb	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       755	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3
0x1bbf	          0x8b4038	            mov eax, dword [rax + 0x38] 	       755	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3
0x1bc2	           0x14588	             add dword [rbp - 0x78], eax	       755	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3
0x1bc5	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       750	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3
0x1bc9	          0x488b00	                    mov rax, qword [rax]	       750	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3
0x1bcc	        0x488945a0	             mov qword [rbp - 0x60], rax	       750	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3
0x1bd0	      0x48837da000	               cmp qword [rbp - 0x60], 0	       749	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	CALL_16
0x1bd5	            0x75b9	                           jne 0x4001bd0	       749	fsck.c	FUNCTION_33	ELSE_1	IF_7	FOR_3	CALL_16
0x1bd7	        0x488d4590	                   lea rax, [rbp - 0x70]	       757	fsck.c	FUNCTION_33	ELSE_1	IF_7	CALL_18
0x1bdb	          0x4889c7	                            mov rdi, rax	       757	fsck.c	FUNCTION_33	ELSE_1	IF_7	CALL_18
0x1bde	      0xe800000000	                          call 0x4001c23	       757	fsck.c	FUNCTION_33	ELSE_1	IF_7	CALL_18
0x1be3	    0xc74580000000	               mov dword [rbp - 0x80], 0	       761	fsck.c	FUNCTION_33	FOR_4
0x1bea	      0xe94c010000	                           jmp 0x4001d7b	       761	fsck.c	FUNCTION_33	FOR_4
0x1bef	          0x8b4580	             mov eax, dword [rbp - 0x80]	       762	fsck.c	FUNCTION_33	FOR_4
0x1bf2	            0x4898	                                    cdqe	       762	fsck.c	FUNCTION_33	FOR_4
0x1bf4	    0x488d14c50000	                        lea rdx, [rax*8]	       762	fsck.c	FUNCTION_33	FOR_4
0x1bfc	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       762	fsck.c	FUNCTION_33	FOR_4
0x1c03	          0x4801d0	                            add rax, rdx	       762	fsck.c	FUNCTION_33	FOR_4
0x1c06	          0x488b00	                    mov rax, qword [rax]	       762	fsck.c	FUNCTION_33	FOR_4
0x1c09	        0x488945b0	             mov qword [rbp - 0x50], rax	       762	fsck.c	FUNCTION_33	FOR_4
0x1c0d	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       764	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_19
0x1c11	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       764	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_19
0x1c15	          0x4889d6	                            mov rsi, rdx	       764	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_19
0x1c18	          0x4889c7	                            mov rdi, rax	       764	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_19
0x1c1b	      0xe800000000	                          call 0x4001c60	       764	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_19
0x1c20	            0x85c0	                           test eax, eax	       764	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_19
0x1c22	     0xf85e2000000	                           jne 0x4001d4a	       764	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_19
0x1c28	        0x488d45d0	                   lea rax, [rbp - 0x30]	       765	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_20
0x1c2c	          0x4889c7	                            mov rdi, rax	       765	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_20
0x1c2f	      0xe800000000	                          call 0x4001c74	       765	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_20
0x1c34	        0x488945b8	             mov qword [rbp - 0x48], rax	       765	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_20
0x1c38	      0x48837db800	               cmp qword [rbp - 0x48], 0	       767	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12
0x1c3d	            0x7415	                            je 0x4001c94	       767	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12
0x1c3f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       767	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12
0x1c43	            0x8b00	                    mov eax, dword [rax]	       767	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12
0x1c45	          0xc1e804	                              shr eax, 4	       767	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12
0x1c48	      0x25ffffff07	                      and eax, 0x7ffffff	       767	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12
0x1c4d	          0x83e004	                              and eax, 4	       767	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12
0x1c50	            0x85c0	                           test eax, eax	       767	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12
0x1c52	            0x754b	                           jne 0x4001cdf	       767	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12
0x1c54	        0x488d45d0	                   lea rax, [rbp - 0x30]	       768	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12	IF_13	CALL_21
0x1c58	          0x4889c7	                            mov rdi, rax	       768	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12	IF_13	CALL_21
0x1c5b	      0xe800000000	                          call 0x4001ca0	       768	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12	IF_13	CALL_21
0x1c60	            0x85c0	                           test eax, eax	       768	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12	IF_13	CALL_21
0x1c62	     0xf85ce000000	                           jne 0x4001d76	       768	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12	IF_13	CALL_21
0x1c68	        0x488d45d0	                   lea rax, [rbp - 0x30]	       770	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12	CALL_23
0x1c6c	          0x4889c7	                            mov rdi, rax	       770	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12	CALL_23
0x1c6f	      0xe800000000	                          call 0x4001cb4	       770	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12	CALL_23
0x1c74	          0x4889c6	                            mov rsi, rax	       770	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12	CALL_23
0x1c77	      0xbf00000000	                              mov edi, 0	       770	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12	CALL_23
0x1c7c	      0xb800000000	                              mov eax, 0	       770	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12	CALL_23
0x1c81	      0xe800000000	                          call 0x4001cc6	       770	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12	CALL_23
0x1c86	      0xe875e3ffff	                    call sym.const_error	       770	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12	CALL_23
0x1c8b	    0x8b0500000000	            mov eax, dword [0x04001cd1] 	       771	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12
0x1c91	          0x83c801	                               or eax, 1	       771	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12
0x1c94	    0x890500000000	            mov dword [0x04001cda], eax 	       771	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12
0x1c9a	      0xe998000000	                           jmp 0x4001d77	       772	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12
0x1c9f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       775	fsck.c	FUNCTION_33	FOR_4	IF_11
0x1ca3	            0x8b00	                    mov eax, dword [rax]	       775	fsck.c	FUNCTION_33	FOR_4	IF_11
0x1ca5	          0xc1e804	                              shr eax, 4	       775	fsck.c	FUNCTION_33	FOR_4	IF_11
0x1ca8	      0x25ffffff07	                      and eax, 0x7ffffff	       775	fsck.c	FUNCTION_33	FOR_4	IF_11
0x1cad	          0x83c808	                               or eax, 8	       775	fsck.c	FUNCTION_33	FOR_4	IF_11
0x1cb0	            0x89c2	                            mov edx, eax	       775	fsck.c	FUNCTION_33	FOR_4	IF_11
0x1cb2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       775	fsck.c	FUNCTION_33	FOR_4	IF_11
0x1cb6	    0x81e2ffffff07	                      and edx, 0x7ffffff	       775	fsck.c	FUNCTION_33	FOR_4	IF_11
0x1cbc	            0x89d1	                            mov ecx, edx	       775	fsck.c	FUNCTION_33	FOR_4	IF_11
0x1cbe	          0xc1e104	                              shl ecx, 4	       775	fsck.c	FUNCTION_33	FOR_4	IF_11
0x1cc1	            0x8b10	                    mov edx, dword [rax]	       775	fsck.c	FUNCTION_33	FOR_4	IF_11
0x1cc3	    0x81e20f000080	                     and edx, 0x8000000f	       775	fsck.c	FUNCTION_33	FOR_4	IF_11
0x1cc9	             0x9ca	                             or edx, ecx	       775	fsck.c	FUNCTION_33	FOR_4	IF_11
0x1ccb	            0x8910	                    mov dword [rax], edx	       775	fsck.c	FUNCTION_33	FOR_4	IF_11
0x1ccd	    0x8b0500000000	            mov eax, dword [0x04001d13] 	       776	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_14
0x1cd3	            0x85c0	                           test eax, eax	       776	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_14
0x1cd5	            0x7425	                            je 0x4001d3c	       776	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_14
0x1cd7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       778	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_25
0x1cdb	          0x4889c7	                            mov rdi, rax	       778	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_25
0x1cde	      0xe800000000	                          call 0x4001d23	       778	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_25
0x1ce3	          0x4889c2	                            mov rdx, rax	       778	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_25
0x1ce6	    0x488b05000000	            mov rax, qword [0x04001d2d] 	       777	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_14	CALL_24
0x1ced	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       777	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_14	CALL_24
0x1cf1	          0x4889ce	                            mov rsi, rcx	       777	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_14	CALL_24
0x1cf4	          0x4889c7	                            mov rdi, rax	       777	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_14	CALL_24
0x1cf7	      0xe800000000	                          call 0x4001d3c	       777	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_14	CALL_24
0x1cfc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       779	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_26
0x1d00	          0x4889c7	                            mov rdi, rax	       779	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_26
0x1d03	      0xe8cbe9ffff	          call sym.mark_object_reachable	       779	fsck.c	FUNCTION_33	FOR_4	IF_11	CALL_26
0x1d08	            0xeb2d	                           jmp 0x4001d77	       780	fsck.c	FUNCTION_33	FOR_4	IF_11
0x1d0a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       782	fsck.c	FUNCTION_33	FOR_4	CALL_27
0x1d0e	          0x4889c6	                            mov rsi, rax	       782	fsck.c	FUNCTION_33	FOR_4	CALL_27
0x1d11	      0xbf00000000	                              mov edi, 0	       782	fsck.c	FUNCTION_33	FOR_4	CALL_27
0x1d16	      0xb800000000	                              mov eax, 0	       782	fsck.c	FUNCTION_33	FOR_4	CALL_27
0x1d1b	      0xe800000000	                          call 0x4001d60	       782	fsck.c	FUNCTION_33	FOR_4	CALL_27
0x1d20	      0xe8dbe2ffff	                    call sym.const_error	       782	fsck.c	FUNCTION_33	FOR_4	CALL_27
0x1d25	    0x8b0500000000	            mov eax, dword [0x04001d6b] 	       783	fsck.c	FUNCTION_33	FOR_4
0x1d2b	          0x83c801	                               or eax, 1	       783	fsck.c	FUNCTION_33	FOR_4
0x1d2e	    0x890500000000	            mov dword [0x04001d74], eax 	       783	fsck.c	FUNCTION_33	FOR_4
0x1d34	            0xeb01	                           jmp 0x4001d77	       783	fsck.c	FUNCTION_33	FOR_4
0x1d36	              0x90	                                     nop	       769	fsck.c	FUNCTION_33	FOR_4	IF_11	IF_12	IF_13
0x1d37	        0x83458001	               add dword [rbp - 0x80], 1	       761	fsck.c	FUNCTION_33	FOR_4
0x1d3b	          0x8b4580	             mov eax, dword [rbp - 0x80]	       761	fsck.c	FUNCTION_33	FOR_4
0x1d3e	    0x3b857cffffff	             cmp eax, dword [rbp - 0x84]	       761	fsck.c	FUNCTION_33	FOR_4
0x1d44	     0xf8ca5feffff	                            jl 0x4001c2f	       761	fsck.c	FUNCTION_33	FOR_4
0x1d4a	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	       791	fsck.c	FUNCTION_33	IF_15
0x1d51	            0x750f	                           jne 0x4001da2	       791	fsck.c	FUNCTION_33	IF_15
0x1d53	      0xe8d4f4ffff	              call sym.get_default_heads	       792	fsck.c	FUNCTION_33	IF_15	CALL_28
0x1d58	    0xc70500000000	               mov dword [0x04001da2], 1	       793	fsck.c	FUNCTION_33	IF_15
0x1d62	    0x8b0500000000	            mov eax, dword [0x04001da8] 	       796	fsck.c	FUNCTION_33	IF_16
0x1d68	            0x85c0	                           test eax, eax	       796	fsck.c	FUNCTION_33	IF_16
0x1d6a	     0xf8454010000	                            je 0x4001f04	       796	fsck.c	FUNCTION_33	IF_16
0x1d70	    0xc70500000000	               mov dword [0x04001dba], 1	       797	fsck.c	FUNCTION_33	IF_16
0x1d7a	    0xc70500000000	               mov dword [0x04001dc4], 1	       798	fsck.c	FUNCTION_33	IF_16
0x1d84	      0xbf00000000	                              mov edi, 0	       799	fsck.c	FUNCTION_33	IF_16	CALL_29
0x1d89	      0xe800000000	                          call 0x4001dce	       799	fsck.c	FUNCTION_33	IF_16	CALL_29
0x1d8e	    0xc74580000000	               mov dword [rbp - 0x80], 0	       800	fsck.c	FUNCTION_33	IF_16	FOR_5
0x1d95	      0xe9fe000000	                           jmp 0x4001ed8	       800	fsck.c	FUNCTION_33	IF_16	FOR_5
0x1d9a	    0x488b05000000	            mov rax, qword [0x04001de1] 	       805	fsck.c	FUNCTION_33	IF_16	FOR_5
0x1da1	          0x8b5580	             mov edx, dword [rbp - 0x80]	       805	fsck.c	FUNCTION_33	IF_16	FOR_5
0x1da4	          0x4863d2	                         movsxd rdx, edx	       805	fsck.c	FUNCTION_33	IF_16	FOR_5
0x1da7	        0x48c1e203	                              shl rdx, 3	       805	fsck.c	FUNCTION_33	IF_16	FOR_5
0x1dab	          0x4801d0	                            add rax, rdx	       805	fsck.c	FUNCTION_33	IF_16	FOR_5
0x1dae	          0x488b00	                    mov rax, qword [rax]	       805	fsck.c	FUNCTION_33	IF_16	FOR_5
0x1db1	          0x8b4034	            mov eax, dword [rax + 0x34] 	       805	fsck.c	FUNCTION_33	IF_16	FOR_5
0x1db4	          0x89458c	             mov dword [rbp - 0x74], eax	       805	fsck.c	FUNCTION_33	IF_16	FOR_5
0x1db7	          0x8b458c	             mov eax, dword [rbp - 0x74]	       806	fsck.c	FUNCTION_33	IF_16	FOR_5	IF_17	CALL_30
0x1dba	      0x2500f00000	                         and eax, 0xf000	       806	fsck.c	FUNCTION_33	IF_16	FOR_5	IF_17	CALL_30
0x1dbf	      0x3d00e00000	                         cmp eax, 0xe000	       806	fsck.c	FUNCTION_33	IF_16	FOR_5	IF_17	CALL_30
0x1dc4	     0xf84c6000000	                            je 0x4001ed0	       806	fsck.c	FUNCTION_33	IF_16	FOR_5	IF_17	CALL_30
0x1dca	    0x488b05000000	            mov rax, qword [0x04001e11] 	       808	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_31
0x1dd1	          0x8b5580	             mov edx, dword [rbp - 0x80]	       808	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_31
0x1dd4	          0x4863d2	                         movsxd rdx, edx	       808	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_31
0x1dd7	        0x48c1e203	                              shl rdx, 3	       808	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_31
0x1ddb	          0x4801d0	                            add rax, rdx	       808	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_31
0x1dde	          0x488b00	                    mov rax, qword [rax]	       808	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_31
0x1de1	        0x4883c044	                           add rax, 0x44	       808	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_31
0x1de5	          0x4889c7	                            mov rdi, rax	       808	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_31
0x1de8	      0xe800000000	                          call 0x4001e2d	       808	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_31
0x1ded	        0x488945c0	             mov qword [rbp - 0x40], rax	       808	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_31
0x1df1	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       809	fsck.c	FUNCTION_33	IF_16	FOR_5	IF_18
0x1df6	     0xf8497000000	                            je 0x4001ed3	       809	fsck.c	FUNCTION_33	IF_16	FOR_5	IF_18
0x1dfc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       811	fsck.c	FUNCTION_33	IF_16	FOR_5
0x1e00	        0x488945c8	             mov qword [rbp - 0x38], rax	       811	fsck.c	FUNCTION_33	IF_16	FOR_5
0x1e04	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       812	fsck.c	FUNCTION_33	IF_16	FOR_5
0x1e08	            0x8b00	                    mov eax, dword [rax]	       812	fsck.c	FUNCTION_33	IF_16	FOR_5
0x1e0a	          0xc1e804	                              shr eax, 4	       812	fsck.c	FUNCTION_33	IF_16	FOR_5
0x1e0d	      0x25ffffff07	                      and eax, 0x7ffffff	       812	fsck.c	FUNCTION_33	IF_16	FOR_5
0x1e12	          0x83c808	                               or eax, 8	       812	fsck.c	FUNCTION_33	IF_16	FOR_5
0x1e15	            0x89c2	                            mov edx, eax	       812	fsck.c	FUNCTION_33	IF_16	FOR_5
0x1e17	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       812	fsck.c	FUNCTION_33	IF_16	FOR_5
0x1e1b	    0x81e2ffffff07	                      and edx, 0x7ffffff	       812	fsck.c	FUNCTION_33	IF_16	FOR_5
0x1e21	            0x89d1	                            mov ecx, edx	       812	fsck.c	FUNCTION_33	IF_16	FOR_5
0x1e23	          0xc1e104	                              shl ecx, 4	       812	fsck.c	FUNCTION_33	IF_16	FOR_5
0x1e26	            0x8b10	                    mov edx, dword [rax]	       812	fsck.c	FUNCTION_33	IF_16	FOR_5
0x1e28	    0x81e20f000080	                     and edx, 0x8000000f	       812	fsck.c	FUNCTION_33	IF_16	FOR_5
0x1e2e	             0x9ca	                             or edx, ecx	       812	fsck.c	FUNCTION_33	IF_16	FOR_5
0x1e30	            0x8910	                    mov dword [rax], edx	       812	fsck.c	FUNCTION_33	IF_16	FOR_5
0x1e32	    0x8b0500000000	            mov eax, dword [0x04001e78] 	       813	fsck.c	FUNCTION_33	IF_16	FOR_5	IF_19
0x1e38	            0x85c0	                           test eax, eax	       813	fsck.c	FUNCTION_33	IF_16	FOR_5	IF_19
0x1e3a	            0x7446	                            je 0x4001ec2	       813	fsck.c	FUNCTION_33	IF_16	FOR_5	IF_19
0x1e3c	    0x488b05000000	            mov rax, qword [0x04001e83] 	       816	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_33
0x1e43	          0x8b5580	             mov edx, dword [rbp - 0x80]	       816	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_33
0x1e46	          0x4863d2	                         movsxd rdx, edx	       816	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_33
0x1e49	        0x48c1e203	                              shl rdx, 3	       816	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_33
0x1e4d	          0x4801d0	                            add rax, rdx	       816	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_33
0x1e50	          0x488b00	                    mov rax, qword [rax]	       816	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_33
0x1e53	        0x4883c058	                           add rax, 0x58	       816	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_33
0x1e57	          0x4889c6	                            mov rsi, rax	       816	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_33
0x1e5a	      0xbf00000000	                              mov edi, 0	       816	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_33
0x1e5f	      0xb800000000	                              mov eax, 0	       816	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_33
0x1e64	      0xe800000000	                          call 0x4001ea9	       816	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_33
0x1e69	          0x4889c2	                            mov rdx, rax	       816	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_33
0x1e6c	    0x488b05000000	            mov rax, qword [0x04001eb3] 	       814	fsck.c	FUNCTION_33	IF_16	FOR_5	IF_19	CALL_32
0x1e73	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       814	fsck.c	FUNCTION_33	IF_16	FOR_5	IF_19	CALL_32
0x1e77	          0x4889ce	                            mov rsi, rcx	       814	fsck.c	FUNCTION_33	IF_16	FOR_5	IF_19	CALL_32
0x1e7a	          0x4889c7	                            mov rdi, rax	       814	fsck.c	FUNCTION_33	IF_16	FOR_5	IF_19	CALL_32
0x1e7d	      0xe800000000	                          call 0x4001ec2	       814	fsck.c	FUNCTION_33	IF_16	FOR_5	IF_19	CALL_32
0x1e82	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       817	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_34
0x1e86	          0x4889c7	                            mov rdi, rax	       817	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_34
0x1e89	      0xe845e8ffff	          call sym.mark_object_reachable	       817	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_34
0x1e8e	            0xeb04	                           jmp 0x4001ed4	       817	fsck.c	FUNCTION_33	IF_16	FOR_5	CALL_34
0x1e90	              0x90	                                     nop	       807	fsck.c	FUNCTION_33	IF_16	FOR_5	IF_17
0x1e91	            0xeb01	                           jmp 0x4001ed4	       807	fsck.c	FUNCTION_33	IF_16	FOR_5	IF_17
0x1e93	              0x90	                                     nop	       810	fsck.c	FUNCTION_33	IF_16	FOR_5	IF_18
0x1e94	        0x83458001	               add dword [rbp - 0x80], 1	       800	fsck.c	FUNCTION_33	IF_16	FOR_5
0x1e98	    0x8b1500000000	            mov edx, dword [0x04001ede] 	       800	fsck.c	FUNCTION_33	IF_16	FOR_5
0x1e9e	          0x8b4580	             mov eax, dword [rbp - 0x80]	       800	fsck.c	FUNCTION_33	IF_16	FOR_5
0x1ea1	            0x39c2	                            cmp edx, eax	       800	fsck.c	FUNCTION_33	IF_16	FOR_5
0x1ea3	     0xf87f1feffff	                            ja 0x4001dda	       800	fsck.c	FUNCTION_33	IF_16	FOR_5
0x1ea9	    0x488b05000000	            mov rax, qword [0x04001ef0] 	       819	fsck.c	FUNCTION_33	IF_16	IF_20
0x1eb0	          0x4885c0	                           test rax, rax	       819	fsck.c	FUNCTION_33	IF_16	IF_20
0x1eb3	            0x740f	                            je 0x4001f04	       819	fsck.c	FUNCTION_33	IF_16	IF_20
0x1eb5	    0x488b05000000	            mov rax, qword [0x04001efc] 	       820	fsck.c	FUNCTION_33	IF_16	CALL_35
0x1ebc	          0x4889c7	                            mov rdi, rax	       820	fsck.c	FUNCTION_33	IF_16	CALL_35
0x1ebf	      0xe84bf8ffff	                call sym.fsck_cache_tree	       820	fsck.c	FUNCTION_33	IF_16	CALL_35
0x1ec4	      0xe898ecffff	             call sym.check_connectivity	       823	fsck.c	FUNCTION_33	CALL_36
0x1ec9	    0x8b0500000000	            mov eax, dword [0x04001f0f] 	       824	fsck.c	FUNCTION_33
0x1ecf	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       825	fsck.c	FUNCTION_33
0x1ed3	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       825	fsck.c	FUNCTION_33
0x1edc	            0x7405	                            je 0x4001f23	       825	fsck.c	FUNCTION_33
0x1ede	      0xe800000000	                          call 0x4001f23	       825	fsck.c	FUNCTION_33
0x1ee3	    0x4881c4980000	                           add rsp, 0x98	       825	fsck.c	FUNCTION_33
0x1eea	              0x5b	                                 pop rbx	       825	fsck.c	FUNCTION_33
0x1eeb	              0x5d	                                 pop rbp	       825	fsck.c	FUNCTION_33
0x1eec	              0xc3	                                     ret	       825	fsck.c	FUNCTION_33
