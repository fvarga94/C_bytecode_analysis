perl_quote_buf	FOR,0:functions,0:WHILE,1:IF,1:CALL,4:SWITCH,0:ELSE,0:DO,0	44
0x1198	              0x55	                                push rbp	       418	quote.c	FUNCTION_21
0x1199	          0x4889e5	                            mov rbp, rsp	       418	quote.c	FUNCTION_21
0x119c	        0x4883ec20	                           sub rsp, 0x20	       418	quote.c	FUNCTION_21
0x11a0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       418	quote.c	FUNCTION_21
0x11a4	        0x488975e0	             mov qword [rbp - 0x20], rsi	       418	quote.c	FUNCTION_21
0x11a8	        0xc645fd27	                mov byte [rbp - 3], 0x27	       419	quote.c	FUNCTION_21
0x11ac	        0xc645fe5c	                mov byte [rbp - 2], 0x5c	       420	quote.c	FUNCTION_21
0x11b0	         0xfbe55fd	               movsx edx, byte [rbp - 3]	       423	quote.c	FUNCTION_21	CALL_1
0x11b4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       423	quote.c	FUNCTION_21	CALL_1
0x11b8	            0x89d6	                            mov esi, edx	       423	quote.c	FUNCTION_21	CALL_1
0x11ba	          0x4889c7	                            mov rdi, rax	       423	quote.c	FUNCTION_21	CALL_1
0x11bd	      0xe860efffff	                   call sym.strbuf_addch	       423	quote.c	FUNCTION_21	CALL_1
0x11c2	            0xeb36	                           jmp 0x400123a	       424	quote.c	FUNCTION_21	WHILE_1
0x11c4	         0xfb645ff	               movzx eax, byte [rbp - 1]	       425	quote.c	FUNCTION_21	WHILE_1	IF_1
0x11c8	          0x3a45fd	                  cmp al, byte [rbp - 3]	       425	quote.c	FUNCTION_21	WHILE_1	IF_1
0x11cb	            0x7409	                            je 0x4001216	       425	quote.c	FUNCTION_21	WHILE_1	IF_1
0x11cd	         0xfb645ff	               movzx eax, byte [rbp - 1]	       425	quote.c	FUNCTION_21	WHILE_1	IF_1
0x11d1	          0x3a45fe	                  cmp al, byte [rbp - 2]	       425	quote.c	FUNCTION_21	WHILE_1	IF_1
0x11d4	            0x7512	                           jne 0x4001228	       425	quote.c	FUNCTION_21	WHILE_1	IF_1
0x11d6	         0xfbe55fe	               movsx edx, byte [rbp - 2]	       426	quote.c	FUNCTION_21	WHILE_1	CALL_2
0x11da	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       426	quote.c	FUNCTION_21	WHILE_1	CALL_2
0x11de	            0x89d6	                            mov esi, edx	       426	quote.c	FUNCTION_21	WHILE_1	CALL_2
0x11e0	          0x4889c7	                            mov rdi, rax	       426	quote.c	FUNCTION_21	WHILE_1	CALL_2
0x11e3	      0xe83aefffff	                   call sym.strbuf_addch	       426	quote.c	FUNCTION_21	WHILE_1	CALL_2
0x11e8	         0xfbe55ff	               movsx edx, byte [rbp - 1]	       427	quote.c	FUNCTION_21	WHILE_1	CALL_3
0x11ec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       427	quote.c	FUNCTION_21	WHILE_1	CALL_3
0x11f0	            0x89d6	                            mov esi, edx	       427	quote.c	FUNCTION_21	WHILE_1	CALL_3
0x11f2	          0x4889c7	                            mov rdi, rax	       427	quote.c	FUNCTION_21	WHILE_1	CALL_3
0x11f5	      0xe828efffff	                   call sym.strbuf_addch	       427	quote.c	FUNCTION_21	WHILE_1	CALL_3
0x11fa	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       424	quote.c	FUNCTION_21	WHILE_1
0x11fe	        0x488d5001	                      lea rdx, [rax + 1]	       424	quote.c	FUNCTION_21	WHILE_1
0x1202	        0x488955e0	             mov qword [rbp - 0x20], rdx	       424	quote.c	FUNCTION_21	WHILE_1
0x1206	           0xfb600	                   movzx eax, byte [rax]	       424	quote.c	FUNCTION_21	WHILE_1
0x1209	          0x8845ff	                  mov byte [rbp - 1], al	       424	quote.c	FUNCTION_21	WHILE_1
0x120c	        0x807dff00	                   cmp byte [rbp - 1], 0	       424	quote.c	FUNCTION_21	WHILE_1
0x1210	            0x75b2	                           jne 0x4001204	       424	quote.c	FUNCTION_21	WHILE_1
0x1212	         0xfbe55fd	               movsx edx, byte [rbp - 3]	       429	quote.c	FUNCTION_21	CALL_4
0x1216	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       429	quote.c	FUNCTION_21	CALL_4
0x121a	            0x89d6	                            mov esi, edx	       429	quote.c	FUNCTION_21	CALL_4
0x121c	          0x4889c7	                            mov rdi, rax	       429	quote.c	FUNCTION_21	CALL_4
0x121f	      0xe8feeeffff	                   call sym.strbuf_addch	       429	quote.c	FUNCTION_21	CALL_4
0x1224	              0x90	                                     nop	       430	quote.c	FUNCTION_21
0x1225	              0xc9	                                   leave	       430	quote.c	FUNCTION_21
0x1226	              0xc3	                                     ret	       430	quote.c	FUNCTION_21
tcl_quote_buf	FOR,0:functions,0:WHILE,1:IF,0:CALL,9:SWITCH,1:ELSE,0:DO,0	89
0x12e8	              0x55	                                push rbp	       454	quote.c	FUNCTION_23
0x12e9	          0x4889e5	                            mov rbp, rsp	       454	quote.c	FUNCTION_23
0x12ec	        0x4883ec20	                           sub rsp, 0x20	       454	quote.c	FUNCTION_23
0x12f0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       454	quote.c	FUNCTION_23
0x12f4	        0x488975e0	             mov qword [rbp - 0x20], rsi	       454	quote.c	FUNCTION_23
0x12f8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       457	quote.c	FUNCTION_23	CALL_1
0x12fc	      0xbe22000000	                           mov esi, 0x22	       457	quote.c	FUNCTION_23	CALL_1
0x1301	          0x4889c7	                            mov rdi, rax	       457	quote.c	FUNCTION_23	CALL_1
0x1304	      0xe819eeffff	                   call sym.strbuf_addch	       457	quote.c	FUNCTION_23	CALL_1
0x1309	      0xe9d6000000	                           jmp 0x4001424	       458	quote.c	FUNCTION_23	WHILE_1
0x130e	         0xfbe45ff	               movsx eax, byte [rbp - 1]	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x1312	          0x83f822	                           cmp eax, 0x22	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x1315	            0x744a	                            je 0x40013a1	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x1317	          0x83f822	                           cmp eax, 0x22	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x131a	            0x7f2a	                            jg 0x4001386	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x131c	          0x83f80b	                            cmp eax, 0xb	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x131f	     0xf84ad000000	                            je 0x4001412	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x1325	          0x83f80b	                            cmp eax, 0xb	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x1328	            0x7f10	                            jg 0x400137a	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x132a	          0x83f809	                              cmp eax, 9	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x132d	     0xf848c000000	                            je 0x40013ff	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x1333	          0x83f80a	                            cmp eax, 0xa	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x1336	            0x7474	                            je 0x40013ec	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x1338	            0xeb38	                           jmp 0x40013b2	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x133a	          0x83f80c	                            cmp eax, 0xc	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x133d	            0x7447	                            je 0x40013c6	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x133f	          0x83f80d	                            cmp eax, 0xd	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x1342	            0x7455	                            je 0x40013d9	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x1344	            0xeb2c	                           jmp 0x40013b2	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x1346	          0x83f85d	                           cmp eax, 0x5d	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x1349	            0x7f0c	                            jg 0x4001397	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x134b	          0x83f85b	                           cmp eax, 0x5b	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x134e	            0x7d11	                           jge 0x40013a1	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x1350	          0x83f824	                           cmp eax, 0x24	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x1353	            0x740c	                            je 0x40013a1	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x1355	            0xeb1b	                           jmp 0x40013b2	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x1357	          0x83f87b	                           cmp eax, 0x7b	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x135a	            0x7405	                            je 0x40013a1	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x135c	          0x83f87d	                           cmp eax, 0x7d	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x135f	            0x7511	                           jne 0x40013b2	       459	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x1361	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       463	quote.c	FUNCTION_23	WHILE_1	SWITCH_1	CALL_2
0x1365	      0xbe5c000000	                           mov esi, 0x5c	       463	quote.c	FUNCTION_23	WHILE_1	SWITCH_1	CALL_2
0x136a	          0x4889c7	                            mov rdi, rax	       463	quote.c	FUNCTION_23	WHILE_1	SWITCH_1	CALL_2
0x136d	      0xe8b0edffff	                   call sym.strbuf_addch	       463	quote.c	FUNCTION_23	WHILE_1	SWITCH_1	CALL_2
0x1372	         0xfbe55ff	               movsx edx, byte [rbp - 1]	       466	quote.c	FUNCTION_23	WHILE_1	SWITCH_1	CALL_3
0x1376	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       466	quote.c	FUNCTION_23	WHILE_1	SWITCH_1	CALL_3
0x137a	            0x89d6	                            mov esi, edx	       466	quote.c	FUNCTION_23	WHILE_1	SWITCH_1	CALL_3
0x137c	          0x4889c7	                            mov rdi, rax	       466	quote.c	FUNCTION_23	WHILE_1	SWITCH_1	CALL_3
0x137f	      0xe89eedffff	                   call sym.strbuf_addch	       466	quote.c	FUNCTION_23	WHILE_1	SWITCH_1	CALL_3
0x1384	            0xeb5e	                           jmp 0x4001424	       467	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x1386	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       469	quote.c	FUNCTION_23	WHILE_1	SWITCH_1	CALL_4
0x138a	      0xbe00000000	                              mov esi, 0	       469	quote.c	FUNCTION_23	WHILE_1	SWITCH_1	CALL_4
0x138f	          0x4889c7	                            mov rdi, rax	       469	quote.c	FUNCTION_23	WHILE_1	SWITCH_1	CALL_4
0x1392	      0xe8f9edffff	                  call sym.strbuf_addstr	       469	quote.c	FUNCTION_23	WHILE_1	SWITCH_1	CALL_4
0x1397	            0xeb4b	                           jmp 0x4001424	       470	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x1399	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       472	quote.c	FUNCTION_23	WHILE_1	SWITCH_1	CALL_5
0x139d	      0xbe00000000	                              mov esi, 0	       472	quote.c	FUNCTION_23	WHILE_1	SWITCH_1	CALL_5
0x13a2	          0x4889c7	                            mov rdi, rax	       472	quote.c	FUNCTION_23	WHILE_1	SWITCH_1	CALL_5
0x13a5	      0xe8e6edffff	                  call sym.strbuf_addstr	       472	quote.c	FUNCTION_23	WHILE_1	SWITCH_1	CALL_5
0x13aa	            0xeb38	                           jmp 0x4001424	       473	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x13ac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       475	quote.c	FUNCTION_23	WHILE_1	SWITCH_1	CALL_6
0x13b0	      0xbe00000000	                              mov esi, 0	       475	quote.c	FUNCTION_23	WHILE_1	SWITCH_1	CALL_6
0x13b5	          0x4889c7	                            mov rdi, rax	       475	quote.c	FUNCTION_23	WHILE_1	SWITCH_1	CALL_6
0x13b8	      0xe8d3edffff	                  call sym.strbuf_addstr	       475	quote.c	FUNCTION_23	WHILE_1	SWITCH_1	CALL_6
0x13bd	            0xeb25	                           jmp 0x4001424	       476	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x13bf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       478	quote.c	FUNCTION_23	WHILE_1	SWITCH_1	CALL_7
0x13c3	      0xbe00000000	                              mov esi, 0	       478	quote.c	FUNCTION_23	WHILE_1	SWITCH_1	CALL_7
0x13c8	          0x4889c7	                            mov rdi, rax	       478	quote.c	FUNCTION_23	WHILE_1	SWITCH_1	CALL_7
0x13cb	      0xe8c0edffff	                  call sym.strbuf_addstr	       478	quote.c	FUNCTION_23	WHILE_1	SWITCH_1	CALL_7
0x13d0	            0xeb12	                           jmp 0x4001424	       479	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x13d2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       481	quote.c	FUNCTION_23	WHILE_1	SWITCH_1	CALL_8
0x13d6	      0xbe00000000	                              mov esi, 0	       481	quote.c	FUNCTION_23	WHILE_1	SWITCH_1	CALL_8
0x13db	          0x4889c7	                            mov rdi, rax	       481	quote.c	FUNCTION_23	WHILE_1	SWITCH_1	CALL_8
0x13de	      0xe8adedffff	                  call sym.strbuf_addstr	       481	quote.c	FUNCTION_23	WHILE_1	SWITCH_1	CALL_8
0x13e3	              0x90	                                     nop	       482	quote.c	FUNCTION_23	WHILE_1	SWITCH_1
0x13e4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       458	quote.c	FUNCTION_23	WHILE_1
0x13e8	        0x488d5001	                      lea rdx, [rax + 1]	       458	quote.c	FUNCTION_23	WHILE_1
0x13ec	        0x488955e0	             mov qword [rbp - 0x20], rdx	       458	quote.c	FUNCTION_23	WHILE_1
0x13f0	           0xfb600	                   movzx eax, byte [rax]	       458	quote.c	FUNCTION_23	WHILE_1
0x13f3	          0x8845ff	                  mov byte [rbp - 1], al	       458	quote.c	FUNCTION_23	WHILE_1
0x13f6	        0x807dff00	                   cmp byte [rbp - 1], 0	       458	quote.c	FUNCTION_23	WHILE_1
0x13fa	     0xf850effffff	                           jne 0x400134e	       458	quote.c	FUNCTION_23	WHILE_1
0x1400	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	quote.c	FUNCTION_23	CALL_9
0x1404	      0xbe22000000	                           mov esi, 0x22	       485	quote.c	FUNCTION_23	CALL_9
0x1409	          0x4889c7	                            mov rdi, rax	       485	quote.c	FUNCTION_23	CALL_9
0x140c	      0xe811edffff	                   call sym.strbuf_addch	       485	quote.c	FUNCTION_23	CALL_9
0x1411	              0x90	                                     nop	       486	quote.c	FUNCTION_23
0x1412	              0xc9	                                   leave	       486	quote.c	FUNCTION_23
0x1413	              0xc3	                                     ret	       486	quote.c	FUNCTION_23
sq_must_quote	FOR,0:functions,0:WHILE,0:IF,0:CALL,0:SWITCH,0:ELSE,0:DO,0	16
0x927	              0x55	                                push rbp	       205	quote.c	FUNCTION_12
0x928	          0x4889e5	                            mov rbp, rsp	       205	quote.c	FUNCTION_12
0x92b	            0x89f8	                            mov eax, edi	       205	quote.c	FUNCTION_12
0x92d	          0x8845fc	                  mov byte [rbp - 4], al	       205	quote.c	FUNCTION_12
0x930	         0xfb645fc	               movzx eax, byte [rbp - 4]	       206	quote.c	FUNCTION_12
0x934	           0xfb6c0	                           movzx eax, al	       206	quote.c	FUNCTION_12
0x937	            0x4898	                                    cdqe	       206	quote.c	FUNCTION_12
0x939	     0xfb680000000	                   movzx eax, byte [rax]	       206	quote.c	FUNCTION_12
0x940	           0xfbed0	                           movsx edx, al	       206	quote.c	FUNCTION_12
0x943	    0x8b0500000000	            mov eax, dword [0x04000989] 	       206	quote.c	FUNCTION_12
0x949	             0x1d0	                            add eax, edx	       206	quote.c	FUNCTION_12
0x94b	            0x85c0	                           test eax, eax	       206	quote.c	FUNCTION_12
0x94d	           0xf9fc0	                                 setg al	       206	quote.c	FUNCTION_12
0x950	           0xfb6c0	                           movzx eax, al	       206	quote.c	FUNCTION_12
0x953	              0x5d	                                 pop rbp	       207	quote.c	FUNCTION_12
0x954	              0xc3	                                     ret	       207	quote.c	FUNCTION_12
sq_dequote_to_argv_internal	FOR,0:functions,0:WHILE,0:IF,4:CALL,3:SWITCH,0:ELSE,0:DO,1	117
0x734	              0x55	                                push rbp	       154	quote.c	FUNCTION_9
0x735	          0x4889e5	                            mov rbp, rsp	       154	quote.c	FUNCTION_9
0x738	        0x4883ec50	                           sub rsp, 0x50	       154	quote.c	FUNCTION_9
0x73c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       154	quote.c	FUNCTION_9
0x740	        0x488975d0	             mov qword [rbp - 0x30], rsi	       154	quote.c	FUNCTION_9
0x744	        0x488955c8	             mov qword [rbp - 0x38], rdx	       154	quote.c	FUNCTION_9
0x748	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       154	quote.c	FUNCTION_9
0x74c	        0x4c8945b8	              mov qword [rbp - 0x48], r8	       154	quote.c	FUNCTION_9
0x750	    0x64488b042528	                mov rax, qword fs:[0x28]	       154	quote.c	FUNCTION_9
0x759	        0x488945f8	                mov qword [rbp - 8], rax	       154	quote.c	FUNCTION_9
0x75d	            0x31c0	                            xor eax, eax	       154	quote.c	FUNCTION_9
0x75f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       155	quote.c	FUNCTION_9
0x763	        0x488945e8	             mov qword [rbp - 0x18], rax	       155	quote.c	FUNCTION_9
0x767	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       157	quote.c	FUNCTION_9	IF_1
0x76b	           0xfb600	                   movzx eax, byte [rax]	       157	quote.c	FUNCTION_9	IF_1
0x76e	            0x84c0	                             test al, al	       157	quote.c	FUNCTION_9	IF_1
0x770	            0x750a	                           jne 0x40007bc	       157	quote.c	FUNCTION_9	IF_1
0x772	      0xb800000000	                              mov eax, 0	       158	quote.c	FUNCTION_9	IF_1
0x777	      0xe929010000	                           jmp 0x40008e5	       158	quote.c	FUNCTION_9	IF_1
0x77c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       160	quote.c	FUNCTION_9	DO_1	CALL_1
0x780	        0x488d55e8	                   lea rdx, [rbp - 0x18]	       160	quote.c	FUNCTION_9	DO_1	CALL_1
0x784	          0x4889d6	                            mov rsi, rdx	       160	quote.c	FUNCTION_9	DO_1	CALL_1
0x787	          0x4889c7	                            mov rdi, rax	       160	quote.c	FUNCTION_9	DO_1	CALL_1
0x78a	      0xe821feffff	                call sym.sq_dequote_step	       160	quote.c	FUNCTION_9	DO_1	CALL_1
0x78f	        0x488945f0	             mov qword [rbp - 0x10], rax	       160	quote.c	FUNCTION_9	DO_1	CALL_1
0x793	      0x48837df000	               cmp qword [rbp - 0x10], 0	       161	quote.c	FUNCTION_9	DO_1	IF_2
0x798	            0x750a	                           jne 0x40007e4	       161	quote.c	FUNCTION_9	DO_1	IF_2
0x79a	      0xb8ffffffff	                     mov eax, 0xffffffff	       162	quote.c	FUNCTION_9	DO_1	IF_2
0x79f	      0xe901010000	                           jmp 0x40008e5	       162	quote.c	FUNCTION_9	DO_1	IF_2
0x7a4	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       163	quote.c	FUNCTION_9	DO_1	IF_3
0x7a9	     0xf84ca000000	                            je 0x40008b9	       163	quote.c	FUNCTION_9	DO_1	IF_3
0x7af	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x7b3	            0x8b00	                    mov eax, dword [rax]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x7b5	          0x8d5001	                      lea edx, [rax + 1]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x7b8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x7bc	            0x8b00	                    mov eax, dword [rax]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x7be	            0x39c2	                            cmp edx, eax	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x7c0	     0xf8e8c000000	                           jle 0x4000892	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x7c6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x7ca	            0x8b00	                    mov eax, dword [rax]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x7cc	          0x8d5010	                   lea edx, [rax + 0x10]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x7cf	            0x89d0	                            mov eax, edx	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x7d1	             0x1c0	                            add eax, eax	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x7d3	             0x1d0	                            add eax, edx	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x7d5	            0x89c2	                            mov edx, eax	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x7d7	          0xc1ea1f	                           shr edx, 0x1f	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x7da	             0x1d0	                            add eax, edx	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x7dc	            0xd1f8	                              sar eax, 1	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x7de	            0x89c2	                            mov edx, eax	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x7e0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x7e4	            0x8b00	                    mov eax, dword [rax]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x7e6	          0x83c001	                              add eax, 1	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x7e9	            0x39c2	                            cmp edx, eax	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x7eb	            0x7d11	                           jge 0x400083e	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x7ed	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x7f1	            0x8b00	                    mov eax, dword [rax]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x7f3	          0x8d5001	                      lea edx, [rax + 1]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x7f6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x7fa	            0x8910	                    mov dword [rax], edx	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x7fc	            0xeb20	                           jmp 0x400085e	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x7fe	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x802	            0x8b00	                    mov eax, dword [rax]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x804	          0x8d5010	                   lea edx, [rax + 0x10]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x807	            0x89d0	                            mov eax, edx	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x809	             0x1c0	                            add eax, eax	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x80b	             0x1d0	                            add eax, edx	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x80d	            0x89c2	                            mov edx, eax	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x80f	          0xc1ea1f	                           shr edx, 0x1f	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x812	             0x1d0	                            add eax, edx	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x814	            0xd1f8	                              sar eax, 1	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x816	            0x89c2	                            mov edx, eax	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x818	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x81c	            0x8910	                    mov dword [rax], edx	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x81e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x822	            0x8b00	                    mov eax, dword [rax]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x824	            0x4898	                                    cdqe	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x826	          0x4889c6	                            mov rsi, rax	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x829	      0xbf08000000	                              mov edi, 8	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x82e	      0xe8cdf7ffff	                        call sym.st_mult	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x833	          0x4889c2	                            mov rdx, rax	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x836	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x83a	          0x488b00	                    mov rax, qword [rax]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x83d	          0x4889d6	                            mov rsi, rdx	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x840	          0x4889c7	                            mov rdi, rax	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x843	      0xe800000000	                          call 0x4000888	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x848	          0x4889c2	                            mov rdx, rax	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x84b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x84f	          0x488910	                    mov qword [rax], rdx	       164	quote.c	FUNCTION_9	DO_1	IF_3	CALL_2
0x852	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       165	quote.c	FUNCTION_9	DO_1	IF_3
0x856	          0x488b30	                    mov rsi, qword [rax]	       165	quote.c	FUNCTION_9	DO_1	IF_3
0x859	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       165	quote.c	FUNCTION_9	DO_1	IF_3
0x85d	            0x8b00	                    mov eax, dword [rax]	       165	quote.c	FUNCTION_9	DO_1	IF_3
0x85f	          0x8d4801	                      lea ecx, [rax + 1]	       165	quote.c	FUNCTION_9	DO_1	IF_3
0x862	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       165	quote.c	FUNCTION_9	DO_1	IF_3
0x866	            0x890a	                    mov dword [rdx], ecx	       165	quote.c	FUNCTION_9	DO_1	IF_3
0x868	            0x4898	                                    cdqe	       165	quote.c	FUNCTION_9	DO_1	IF_3
0x86a	        0x48c1e003	                              shl rax, 3	       165	quote.c	FUNCTION_9	DO_1	IF_3
0x86e	        0x488d1406	                    lea rdx, [rsi + rax]	       165	quote.c	FUNCTION_9	DO_1	IF_3
0x872	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       165	quote.c	FUNCTION_9	DO_1	IF_3
0x876	          0x488902	                    mov qword [rdx], rax	       165	quote.c	FUNCTION_9	DO_1	IF_3
0x879	      0x48837db800	               cmp qword [rbp - 0x48], 0	       167	quote.c	FUNCTION_9	DO_1	IF_4
0x87e	            0x7413	                            je 0x40008d3	       167	quote.c	FUNCTION_9	DO_1	IF_4
0x880	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       168	quote.c	FUNCTION_9	DO_1	CALL_3
0x884	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       168	quote.c	FUNCTION_9	DO_1	CALL_3
0x888	          0x4889d6	                            mov rsi, rdx	       168	quote.c	FUNCTION_9	DO_1	CALL_3
0x88b	          0x4889c7	                            mov rdi, rax	       168	quote.c	FUNCTION_9	DO_1	CALL_3
0x88e	      0xe800000000	                          call 0x40008d3	       168	quote.c	FUNCTION_9	DO_1	CALL_3
0x893	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       169	quote.c	FUNCTION_9	DO_1
0x897	          0x4885c0	                           test rax, rax	       169	quote.c	FUNCTION_9	DO_1
0x89a	     0xf85dcfeffff	                           jne 0x40007bc	       169	quote.c	FUNCTION_9	DO_1
0x8a0	      0xb800000000	                              mov eax, 0	       171	quote.c	FUNCTION_9
0x8a5	        0x488b4df8	                mov rcx, qword [rbp - 8]	       172	quote.c	FUNCTION_9
0x8a9	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       172	quote.c	FUNCTION_9
0x8b2	            0x7405	                            je 0x40008f9	       172	quote.c	FUNCTION_9
0x8b4	      0xe800000000	                          call 0x40008f9	       172	quote.c	FUNCTION_9
0x8b9	              0xc9	                                   leave	       172	quote.c	FUNCTION_9
0x8ba	              0xc3	                                     ret	       172	quote.c	FUNCTION_9
sq_quote_argv	FOR,1:functions,0:WHILE,0:IF,0:CALL,3:SWITCH,0:ELSE,0:DO,0	37
0x4b9	              0x55	                                push rbp	        76	quote.c	FUNCTION_5
0x4ba	          0x4889e5	                            mov rbp, rsp	        76	quote.c	FUNCTION_5
0x4bd	        0x4883ec20	                           sub rsp, 0x20	        76	quote.c	FUNCTION_5
0x4c1	        0x48897de8	             mov qword [rbp - 0x18], rdi	        76	quote.c	FUNCTION_5
0x4c5	        0x488975e0	             mov qword [rbp - 0x20], rsi	        76	quote.c	FUNCTION_5
0x4c9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        80	quote.c	FUNCTION_5	CALL_1
0x4cd	      0xbeff000000	                           mov esi, 0xff	        80	quote.c	FUNCTION_5	CALL_1
0x4d2	          0x4889c7	                            mov rdi, rax	        80	quote.c	FUNCTION_5	CALL_1
0x4d5	      0xe800000000	                          call 0x400051a	        80	quote.c	FUNCTION_5	CALL_1
0x4da	    0xc745fc000000	                  mov dword [rbp - 4], 0	        81	quote.c	FUNCTION_5	FOR_1
0x4e1	            0xeb3b	                           jmp 0x400055e	        81	quote.c	FUNCTION_5	FOR_1
0x4e3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        82	quote.c	FUNCTION_5	FOR_1	CALL_2
0x4e7	      0xbe20000000	                           mov esi, 0x20	        82	quote.c	FUNCTION_5	FOR_1	CALL_2
0x4ec	          0x4889c7	                            mov rdi, rax	        82	quote.c	FUNCTION_5	FOR_1	CALL_2
0x4ef	      0xe82efcffff	                   call sym.strbuf_addch	        82	quote.c	FUNCTION_5	FOR_1	CALL_2
0x4f4	          0x8b45fc	                mov eax, dword [rbp - 4]	        83	quote.c	FUNCTION_5	FOR_1	CALL_3
0x4f7	            0x4898	                                    cdqe	        83	quote.c	FUNCTION_5	FOR_1	CALL_3
0x4f9	    0x488d14c50000	                        lea rdx, [rax*8]	        83	quote.c	FUNCTION_5	FOR_1	CALL_3
0x501	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        83	quote.c	FUNCTION_5	FOR_1	CALL_3
0x505	          0x4801d0	                            add rax, rdx	        83	quote.c	FUNCTION_5	FOR_1	CALL_3
0x508	          0x488b10	                    mov rdx, qword [rax]	        83	quote.c	FUNCTION_5	FOR_1	CALL_3
0x50b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        83	quote.c	FUNCTION_5	FOR_1	CALL_3
0x50f	          0x4889d6	                            mov rsi, rdx	        83	quote.c	FUNCTION_5	FOR_1	CALL_3
0x512	          0x4889c7	                            mov rdi, rax	        83	quote.c	FUNCTION_5	FOR_1	CALL_3
0x515	      0xe800000000	                          call 0x400055a	        83	quote.c	FUNCTION_5	FOR_1	CALL_3
0x51a	        0x8345fc01	                  add dword [rbp - 4], 1	        81	quote.c	FUNCTION_5	FOR_1
0x51e	          0x8b45fc	                mov eax, dword [rbp - 4]	        81	quote.c	FUNCTION_5	FOR_1
0x521	            0x4898	                                    cdqe	        81	quote.c	FUNCTION_5	FOR_1
0x523	    0x488d14c50000	                        lea rdx, [rax*8]	        81	quote.c	FUNCTION_5	FOR_1
0x52b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        81	quote.c	FUNCTION_5	FOR_1
0x52f	          0x4801d0	                            add rax, rdx	        81	quote.c	FUNCTION_5	FOR_1
0x532	          0x488b00	                    mov rax, qword [rax]	        81	quote.c	FUNCTION_5	FOR_1
0x535	          0x4885c0	                           test rax, rax	        81	quote.c	FUNCTION_5	FOR_1
0x538	            0x75a9	                           jne 0x4000523	        81	quote.c	FUNCTION_5	FOR_1
0x53a	              0x90	                                     nop	        85	quote.c	FUNCTION_5
0x53b	              0xc9	                                   leave	        85	quote.c	FUNCTION_5
0x53c	              0xc3	                                     ret	        85	quote.c	FUNCTION_5
write_name_quoted_relative	FOR,0:functions,0:WHILE,0:IF,0:CALL,3:SWITCH,0:ELSE,0:DO,0	36
0xe84	              0x55	                                push rbp	       323	quote.c	FUNCTION_18
0xe85	          0x4889e5	                            mov rbp, rsp	       323	quote.c	FUNCTION_18
0xe88	        0x4883ec40	                           sub rsp, 0x40	       323	quote.c	FUNCTION_18
0xe8c	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       323	quote.c	FUNCTION_18
0xe90	        0x488975d0	             mov qword [rbp - 0x30], rsi	       323	quote.c	FUNCTION_18
0xe94	        0x488955c8	             mov qword [rbp - 0x38], rdx	       323	quote.c	FUNCTION_18
0xe98	          0x894dc4	             mov dword [rbp - 0x3c], ecx	       323	quote.c	FUNCTION_18
0xe9b	    0x64488b042528	                mov rax, qword fs:[0x28]	       323	quote.c	FUNCTION_18
0xea4	        0x488945f8	                mov qword [rbp - 8], rax	       323	quote.c	FUNCTION_18
0xea8	            0x31c0	                            xor eax, eax	       323	quote.c	FUNCTION_18
0xeaa	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       324	quote.c	FUNCTION_18
0xeb2	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       324	quote.c	FUNCTION_18
0xeba	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       324	quote.c	FUNCTION_18
0xec2	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       326	quote.c	FUNCTION_18	CALL_1
0xec6	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       326	quote.c	FUNCTION_18	CALL_1
0xeca	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       326	quote.c	FUNCTION_18	CALL_1
0xece	          0x4889ce	                            mov rsi, rcx	       326	quote.c	FUNCTION_18	CALL_1
0xed1	          0x4889c7	                            mov rdi, rax	       326	quote.c	FUNCTION_18	CALL_1
0xed4	      0xe800000000	                          call 0x4000f19	       326	quote.c	FUNCTION_18	CALL_1
0xed9	        0x488945d8	             mov qword [rbp - 0x28], rax	       326	quote.c	FUNCTION_18	CALL_1
0xedd	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       327	quote.c	FUNCTION_18	CALL_2
0xee0	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       327	quote.c	FUNCTION_18	CALL_2
0xee4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       327	quote.c	FUNCTION_18	CALL_2
0xee8	          0x4889ce	                            mov rsi, rcx	       327	quote.c	FUNCTION_18	CALL_2
0xeeb	          0x4889c7	                            mov rdi, rax	       327	quote.c	FUNCTION_18	CALL_2
0xeee	      0xe800000000	                          call 0x4000f33	       327	quote.c	FUNCTION_18	CALL_2
0xef3	        0x488d45e0	                   lea rax, [rbp - 0x20]	       329	quote.c	FUNCTION_18	CALL_3
0xef7	          0x4889c7	                            mov rdi, rax	       329	quote.c	FUNCTION_18	CALL_3
0xefa	      0xe800000000	                          call 0x4000f3f	       329	quote.c	FUNCTION_18	CALL_3
0xeff	              0x90	                                     nop	       330	quote.c	FUNCTION_18
0xf00	        0x488b45f8	                mov rax, qword [rbp - 8]	       330	quote.c	FUNCTION_18
0xf04	    0x644833042528	                xor rax, qword fs:[0x28]	       330	quote.c	FUNCTION_18
0xf0d	            0x7405	                            je 0x4000f54	       330	quote.c	FUNCTION_18
0xf0f	      0xe800000000	                          call 0x4000f54	       330	quote.c	FUNCTION_18
0xf14	              0xc9	                                   leave	       330	quote.c	FUNCTION_18
0xf15	              0xc3	                                     ret	       330	quote.c	FUNCTION_18
strbuf_setlen	FOR,0:functions,0:WHILE,0:IF,2:CALL,2:SWITCH,0:ELSE,1:DO,0	43
0x88	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_27
0x89	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_27
0x8c	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_27
0x90	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_27
0x94	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_27
0x98	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_27	IF_1
0x9c	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_27	IF_1
0x9f	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_27	IF_1
0xa2	            0x740d	                            je 0x40000f1	       162	strbuf.h	FUNCTION_27	IF_1
0xa4	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_27	IF_1
0xa8	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_27	IF_1
0xab	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_27	IF_1
0xaf	            0xeb05	                           jmp 0x40000f6	       162	strbuf.h	FUNCTION_27	IF_1
0xb1	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_27	IF_1
0xb6	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_27	IF_1
0xba	            0x730f	                           jae 0x400010b	       162	strbuf.h	FUNCTION_27	IF_1
0xbc	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_27	CALL_1
0xc1	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_27	CALL_1
0xc6	      0xe800000000	                          call 0x400010b	       163	strbuf.h	FUNCTION_27	CALL_1
0xcb	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_27
0xcf	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_27
0xd3	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_27
0xd7	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_27	IF_2
0xdb	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_27	IF_2
0xdf	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_27	IF_2
0xe5	            0x7414	                            je 0x400013b	       165	strbuf.h	FUNCTION_27	IF_2
0xe7	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_27	IF_2
0xeb	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_27	IF_2
0xef	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_27	IF_2
0xf3	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_27	IF_2
0xf6	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_27	IF_2
0xf9	            0xeb24	                           jmp 0x400015f	       169	strbuf.h	FUNCTION_27
0xfb	     0xfb605000000	           movzx eax, byte [0x04000142] 	       168	strbuf.h	FUNCTION_27	CALL_2
0x102	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_27	CALL_2
0x104	            0x7419	                            je 0x400015f	       168	strbuf.h	FUNCTION_27	CALL_2
0x106	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_27	CALL_2
0x10b	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_27	CALL_2
0x110	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_27	CALL_2
0x115	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_27	CALL_2
0x11a	      0xe800000000	                          call 0x400015f	       168	strbuf.h	FUNCTION_27	CALL_2
0x11f	              0x90	                                     nop	       169	strbuf.h	FUNCTION_27
0x120	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_27
0x121	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_27
write_name_quoted	FOR,0:functions,0:WHILE,0:IF,1:CALL,3:SWITCH,0:ELSE,1:DO,0	28
0xe28	              0x55	                                push rbp	       312	quote.c	FUNCTION_17
0xe29	          0x4889e5	                            mov rbp, rsp	       312	quote.c	FUNCTION_17
0xe2c	        0x4883ec20	                           sub rsp, 0x20	       312	quote.c	FUNCTION_17
0xe30	        0x48897df8	                mov qword [rbp - 8], rdi	       312	quote.c	FUNCTION_17
0xe34	        0x488975f0	             mov qword [rbp - 0x10], rsi	       312	quote.c	FUNCTION_17
0xe38	          0x8955ec	             mov dword [rbp - 0x14], edx	       312	quote.c	FUNCTION_17
0xe3b	        0x837dec00	               cmp dword [rbp - 0x14], 0	       313	quote.c	FUNCTION_17	IF_1
0xe3f	            0x741c	                            je 0x4000e9d	       313	quote.c	FUNCTION_17	IF_1
0xe41	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       314	quote.c	FUNCTION_17	IF_1	CALL_1
0xe45	        0x488b45f8	                mov rax, qword [rbp - 8]	       314	quote.c	FUNCTION_17	IF_1	CALL_1
0xe49	      0xb900000000	                              mov ecx, 0	       314	quote.c	FUNCTION_17	IF_1	CALL_1
0xe4e	      0xbe00000000	                              mov esi, 0	       314	quote.c	FUNCTION_17	IF_1	CALL_1
0xe53	          0x4889c7	                            mov rdi, rax	       314	quote.c	FUNCTION_17	IF_1	CALL_1
0xe56	      0xe800000000	                          call 0x4000e9b	       314	quote.c	FUNCTION_17	IF_1	CALL_1
0xe5b	            0xeb13	                           jmp 0x4000eb0	       314	quote.c	FUNCTION_17	IF_1	CALL_1
0xe5d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       316	quote.c	FUNCTION_17	ELSE_1	CALL_2
0xe61	        0x488b45f8	                mov rax, qword [rbp - 8]	       316	quote.c	FUNCTION_17	ELSE_1	CALL_2
0xe65	          0x4889d6	                            mov rsi, rdx	       316	quote.c	FUNCTION_17	ELSE_1	CALL_2
0xe68	          0x4889c7	                            mov rdi, rax	       316	quote.c	FUNCTION_17	ELSE_1	CALL_2
0xe6b	      0xe800000000	                          call 0x4000eb0	       316	quote.c	FUNCTION_17	ELSE_1	CALL_2
0xe70	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       318	quote.c	FUNCTION_17	CALL_3
0xe74	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       318	quote.c	FUNCTION_17	CALL_3
0xe77	          0x4889d6	                            mov rsi, rdx	       318	quote.c	FUNCTION_17	CALL_3
0xe7a	            0x89c7	                            mov edi, eax	       318	quote.c	FUNCTION_17	CALL_3
0xe7c	      0xe800000000	                          call 0x4000ec1	       318	quote.c	FUNCTION_17	CALL_3
0xe81	              0x90	                                     nop	       319	quote.c	FUNCTION_17
0xe82	              0xc9	                                   leave	       319	quote.c	FUNCTION_17
0xe83	              0xc3	                                     ret	       319	quote.c	FUNCTION_17
sq_dequote_to_argv_array	FOR,0:functions,0:WHILE,0:IF,0:CALL,1:SWITCH,0:ELSE,0:DO,0	15
0x8f3	              0x55	                                push rbp	       180	quote.c	FUNCTION_11
0x8f4	          0x4889e5	                            mov rbp, rsp	       180	quote.c	FUNCTION_11
0x8f7	        0x4883ec10	                           sub rsp, 0x10	       180	quote.c	FUNCTION_11
0x8fb	        0x48897df8	                mov qword [rbp - 8], rdi	       180	quote.c	FUNCTION_11
0x8ff	        0x488975f0	             mov qword [rbp - 0x10], rsi	       180	quote.c	FUNCTION_11
0x903	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       181	quote.c	FUNCTION_11	CALL_1
0x907	        0x488b45f8	                mov rax, qword [rbp - 8]	       181	quote.c	FUNCTION_11	CALL_1
0x90b	          0x4989d0	                             mov r8, rdx	       181	quote.c	FUNCTION_11	CALL_1
0x90e	      0xb900000000	                              mov ecx, 0	       181	quote.c	FUNCTION_11	CALL_1
0x913	      0xba00000000	                              mov edx, 0	       181	quote.c	FUNCTION_11	CALL_1
0x918	      0xbe00000000	                              mov esi, 0	       181	quote.c	FUNCTION_11	CALL_1
0x91d	          0x4889c7	                            mov rdi, rax	       181	quote.c	FUNCTION_11	CALL_1
0x920	      0xe80ffeffff	    call sym.sq_dequote_to_argv_internal	       181	quote.c	FUNCTION_11	CALL_1
0x925	              0xc9	                                   leave	       182	quote.c	FUNCTION_11
0x926	              0xc3	                                     ret	       182	quote.c	FUNCTION_11
next_quote_pos	FOR,2:functions,0:WHILE,0:IF,1:CALL,2:SWITCH,0:ELSE,1:DO,0	38
0x955	              0x55	                                push rbp	       213	quote.c	FUNCTION_13
0x956	          0x4889e5	                            mov rbp, rsp	       213	quote.c	FUNCTION_13
0x959	        0x4883ec20	                           sub rsp, 0x20	       213	quote.c	FUNCTION_13
0x95d	        0x48897de8	             mov qword [rbp - 0x18], rdi	       213	quote.c	FUNCTION_13
0x961	        0x488975e0	             mov qword [rbp - 0x20], rsi	       213	quote.c	FUNCTION_13
0x965	      0x48837de000	               cmp qword [rbp - 0x20], 0	       215	quote.c	FUNCTION_13	IF_1
0x96a	            0x792d	                           jns 0x40009d9	       215	quote.c	FUNCTION_13	IF_1
0x96c	    0x48c745f80000	                  mov qword [rbp - 8], 0	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x974	            0xeb05	                           jmp 0x40009bb	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x976	      0x488345f801	                  add qword [rbp - 8], 1	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x97b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x97f	        0x488b45f8	                mov rax, qword [rbp - 8]	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x983	          0x4801d0	                            add rax, rdx	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x986	           0xfb600	                   movzx eax, byte [rax]	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x989	           0xfbec0	                           movsx eax, al	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x98c	            0x89c7	                            mov edi, eax	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x98e	      0xe894ffffff	                  call sym.sq_must_quote	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x993	            0x85c0	                           test eax, eax	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x995	            0x74df	                            je 0x40009b6	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x997	            0xeb35	                           jmp 0x4000a0e	       216	quote.c	FUNCTION_13	IF_1	CALL_1
0x999	    0x48c745f80000	                  mov qword [rbp - 8], 0	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x9a1	            0xeb05	                           jmp 0x40009e8	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x9a3	      0x488345f801	                  add qword [rbp - 8], 1	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x9a8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x9ac	        0x483945f8	                cmp qword [rbp - 8], rax	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x9b0	            0x731c	                           jae 0x4000a0e	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x9b2	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x9b6	        0x488b45f8	                mov rax, qword [rbp - 8]	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x9ba	          0x4801d0	                            add rax, rdx	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x9bd	           0xfb600	                   movzx eax, byte [rax]	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x9c0	           0xfbec0	                           movsx eax, al	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x9c3	            0x89c7	                            mov edi, eax	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x9c5	      0xe85dffffff	                  call sym.sq_must_quote	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x9ca	            0x85c0	                           test eax, eax	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x9cc	            0x74d5	                            je 0x40009e3	       218	quote.c	FUNCTION_13	ELSE_1	CALL_2
0x9ce	        0x488b45f8	                mov rax, qword [rbp - 8]	       220	quote.c	FUNCTION_13
0x9d2	              0xc9	                                   leave	       221	quote.c	FUNCTION_13
0x9d3	              0xc3	                                     ret	       221	quote.c	FUNCTION_13
sq_dequote_to_argv	FOR,0:functions,0:WHILE,0:IF,0:CALL,1:SWITCH,0:ELSE,0:DO,0	16
0x8bb	              0x55	                                push rbp	       175	quote.c	FUNCTION_10
0x8bc	          0x4889e5	                            mov rbp, rsp	       175	quote.c	FUNCTION_10
0x8bf	        0x4883ec20	                           sub rsp, 0x20	       175	quote.c	FUNCTION_10
0x8c3	        0x48897df8	                mov qword [rbp - 8], rdi	       175	quote.c	FUNCTION_10
0x8c7	        0x488975f0	             mov qword [rbp - 0x10], rsi	       175	quote.c	FUNCTION_10
0x8cb	        0x488955e8	             mov qword [rbp - 0x18], rdx	       175	quote.c	FUNCTION_10
0x8cf	        0x48894de0	             mov qword [rbp - 0x20], rcx	       175	quote.c	FUNCTION_10
0x8d3	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       176	quote.c	FUNCTION_10	CALL_1
0x8d7	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       176	quote.c	FUNCTION_10	CALL_1
0x8db	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       176	quote.c	FUNCTION_10	CALL_1
0x8df	        0x488b45f8	                mov rax, qword [rbp - 8]	       176	quote.c	FUNCTION_10	CALL_1
0x8e3	    0x41b800000000	                              mov r8d, 0	       176	quote.c	FUNCTION_10	CALL_1
0x8e9	          0x4889c7	                            mov rdi, rax	       176	quote.c	FUNCTION_10	CALL_1
0x8ec	      0xe843feffff	    call sym.sq_dequote_to_argv_internal	       176	quote.c	FUNCTION_10	CALL_1
0x8f1	              0xc9	                                   leave	       177	quote.c	FUNCTION_10
0x8f2	              0xc3	                                     ret	       177	quote.c	FUNCTION_10
strbuf_addch	FOR,0:functions,0:WHILE,0:IF,1:CALL,2:SWITCH,0:ELSE,0:DO,0	33
0x122	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_28
0x123	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_28
0x126	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_28
0x12a	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_28
0x12e	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_28
0x131	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x135	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x138	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x13d	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x140	            0x7511	                           jne 0x4000193	       227	strbuf.h	FUNCTION_28	IF_1	CALL_1
0x142	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_28	CALL_2
0x146	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_28	CALL_2
0x14b	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_28	CALL_2
0x14e	      0xe800000000	                          call 0x4000193	       228	strbuf.h	FUNCTION_28	CALL_2
0x153	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_28
0x157	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_28
0x15b	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_28
0x15f	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_28
0x163	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_28
0x167	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_28
0x16b	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_28
0x16f	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_28
0x172	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_28
0x175	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_28
0x177	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_28
0x17b	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_28
0x17f	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_28
0x183	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_28
0x187	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_28
0x18a	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_28
0x18d	              0x90	                                     nop	       231	strbuf.h	FUNCTION_28
0x18e	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_28
0x18f	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_28
sq_dequote_step	FOR,1:functions,0:WHILE,0:IF,6:CALL,3:SWITCH,1:ELSE,0:DO,1	104
0x5b0	              0x55	                                push rbp	        98	quote.c	FUNCTION_7
0x5b1	          0x4889e5	                            mov rbp, rsp	        98	quote.c	FUNCTION_7
0x5b4	        0x4883ec30	                           sub rsp, 0x30	        98	quote.c	FUNCTION_7
0x5b8	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        98	quote.c	FUNCTION_7
0x5bc	        0x488975d0	             mov qword [rbp - 0x30], rsi	        98	quote.c	FUNCTION_7
0x5c0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        99	quote.c	FUNCTION_7
0x5c4	        0x488945f0	             mov qword [rbp - 0x10], rax	        99	quote.c	FUNCTION_7
0x5c8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       100	quote.c	FUNCTION_7
0x5cc	        0x488945f8	                mov qword [rbp - 8], rax	       100	quote.c	FUNCTION_7
0x5d0	        0x488b45f8	                mov rax, qword [rbp - 8]	       103	quote.c	FUNCTION_7	IF_1
0x5d4	           0xfb600	                   movzx eax, byte [rax]	       103	quote.c	FUNCTION_7	IF_1
0x5d7	            0x3c27	                            cmp al, 0x27	       103	quote.c	FUNCTION_7	IF_1
0x5d9	            0x740a	                            je 0x4000625	       103	quote.c	FUNCTION_7	IF_1
0x5db	      0xb800000000	                              mov eax, 0	       104	quote.c	FUNCTION_7	IF_1
0x5e0	      0xe92e010000	                           jmp 0x4000753	       104	quote.c	FUNCTION_7	IF_1
0x5e5	      0x488345f801	                  add qword [rbp - 8], 1	       106	quote.c	FUNCTION_7	FOR_1
0x5ea	        0x488b45f8	                mov rax, qword [rbp - 8]	       106	quote.c	FUNCTION_7	FOR_1
0x5ee	           0xfb600	                   movzx eax, byte [rax]	       106	quote.c	FUNCTION_7	FOR_1
0x5f1	          0x8845ef	               mov byte [rbp - 0x11], al	       106	quote.c	FUNCTION_7	FOR_1
0x5f4	        0x807def00	                cmp byte [rbp - 0x11], 0	       107	quote.c	FUNCTION_7	FOR_1	IF_2
0x5f8	            0x750a	                           jne 0x4000644	       107	quote.c	FUNCTION_7	FOR_1	IF_2
0x5fa	      0xb800000000	                              mov eax, 0	       108	quote.c	FUNCTION_7	FOR_1	IF_2
0x5ff	      0xe90f010000	                           jmp 0x4000753	       108	quote.c	FUNCTION_7	FOR_1	IF_2
0x604	        0x807def27	            cmp byte [rbp - 0x11], 0x27 	       109	quote.c	FUNCTION_7	FOR_1	IF_3
0x608	            0x7417	                            je 0x4000661	       109	quote.c	FUNCTION_7	FOR_1	IF_3
0x60a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       110	quote.c	FUNCTION_7	FOR_1	IF_3
0x60e	        0x488d5001	                      lea rdx, [rax + 1]	       110	quote.c	FUNCTION_7	FOR_1	IF_3
0x612	        0x488955f0	             mov qword [rbp - 0x10], rdx	       110	quote.c	FUNCTION_7	FOR_1	IF_3
0x616	         0xfb655ef	            movzx edx, byte [rbp - 0x11]	       110	quote.c	FUNCTION_7	FOR_1	IF_3
0x61a	            0x8810	                      mov byte [rax], dl	       110	quote.c	FUNCTION_7	FOR_1	IF_3
0x61c	      0xe9ed000000	                           jmp 0x400074e	       111	quote.c	FUNCTION_7	FOR_1	IF_3
0x621	      0x488345f801	                  add qword [rbp - 8], 1	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x626	        0x488b45f8	                mov rax, qword [rbp - 8]	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x62a	           0xfb600	                   movzx eax, byte [rax]	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x62d	           0xfbec0	                           movsx eax, al	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x630	            0x85c0	                           test eax, eax	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x632	            0x7407	                            je 0x400067b	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x634	          0x83f85c	                           cmp eax, 0x5c	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x637	            0x7424	                            je 0x400069d	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x639	            0xeb67	                           jmp 0x40006e2	       114	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x63b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       116	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x63f	          0xc60000	                       mov byte [rax], 0	       116	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x642	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       117	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x647	            0x740b	                            je 0x4000694	       117	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x649	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       118	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x64d	    0x48c700000000	                      mov qword [rax], 0	       118	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_4
0x654	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       119	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x658	      0xe9b6000000	                           jmp 0x4000753	       119	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x65d	        0x488b45f8	                mov rax, qword [rbp - 8]	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x661	        0x4883c001	                              add rax, 1	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x665	           0xfb600	                   movzx eax, byte [rax]	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x668	           0xfbec0	                           movsx eax, al	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x66b	            0x89c7	                            mov edi, eax	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x66d	      0xe853fbffff	                  call sym.need_bs_quote	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x672	            0x85c0	                           test eax, eax	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x674	            0x742c	                            je 0x40006e2	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x676	        0x488b45f8	                mov rax, qword [rbp - 8]	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x67a	        0x4883c002	                              add rax, 2	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x67e	           0xfb600	                   movzx eax, byte [rax]	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x681	            0x3c27	                            cmp al, 0x27	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x683	            0x751d	                           jne 0x40006e2	       127	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5	CALL_1
0x685	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       128	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5
0x689	        0x488d5001	                      lea rdx, [rax + 1]	       128	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5
0x68d	        0x488955f0	             mov qword [rbp - 0x10], rdx	       128	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5
0x691	        0x488b55f8	                mov rdx, qword [rbp - 8]	       128	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5
0x695	         0xfb65201	               movzx edx, byte [rdx + 1]	       128	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5
0x699	            0x8810	                      mov byte [rax], dl	       128	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5
0x69b	      0x488345f802	                  add qword [rbp - 8], 2	       129	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5
0x6a0	            0xeb6c	                           jmp 0x400074e	       130	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_5
0x6a2	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       134	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6	CALL_2
0x6a7	            0x741d	                            je 0x4000706	       134	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6	CALL_2
0x6a9	        0x488b45f8	                mov rax, qword [rbp - 8]	       134	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6	CALL_2
0x6ad	           0xfb600	                   movzx eax, byte [rax]	       134	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6	CALL_2
0x6b0	           0xfb6c0	                           movzx eax, al	       134	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6	CALL_2
0x6b3	            0x4898	                                    cdqe	       134	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6	CALL_2
0x6b5	     0xfb680000000	                   movzx eax, byte [rax]	       134	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6	CALL_2
0x6bc	           0xfb6c0	                           movzx eax, al	       134	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6	CALL_2
0x6bf	          0x83e001	                              and eax, 1	       134	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6	CALL_2
0x6c2	            0x85c0	                           test eax, eax	       134	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6	CALL_2
0x6c4	            0x7507	                           jne 0x400070d	       134	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6	CALL_2
0x6c6	      0xb800000000	                              mov eax, 0	       135	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6
0x6cb	            0xeb46	                           jmp 0x4000753	       135	quote.c	FUNCTION_7	FOR_1	SWITCH_1	IF_6
0x6cd	      0x488345f801	                  add qword [rbp - 8], 1	       137	quote.c	FUNCTION_7	FOR_1	SWITCH_1	DO_1
0x6d2	        0x488b45f8	                mov rax, qword [rbp - 8]	       137	quote.c	FUNCTION_7	FOR_1	SWITCH_1	DO_1
0x6d6	           0xfb600	                   movzx eax, byte [rax]	       137	quote.c	FUNCTION_7	FOR_1	SWITCH_1	DO_1
0x6d9	          0x8845ef	               mov byte [rbp - 0x11], al	       137	quote.c	FUNCTION_7	FOR_1	SWITCH_1	DO_1
0x6dc	         0xfb645ef	            movzx eax, byte [rbp - 0x11]	       138	quote.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_3
0x6e0	           0xfb6c0	                           movzx eax, al	       138	quote.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_3
0x6e3	            0x4898	                                    cdqe	       138	quote.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_3
0x6e5	     0xfb680000000	                   movzx eax, byte [rax]	       138	quote.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_3
0x6ec	           0xfb6c0	                           movzx eax, al	       138	quote.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_3
0x6ef	          0x83e001	                              and eax, 1	       138	quote.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_3
0x6f2	            0x85c0	                           test eax, eax	       138	quote.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_3
0x6f4	            0x75d7	                           jne 0x400070d	       138	quote.c	FUNCTION_7	FOR_1	SWITCH_1	CALL_3
0x6f6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       139	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x6fa	          0xc60000	                       mov byte [rax], 0	       139	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x6fd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       140	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x701	        0x488b55f8	                mov rdx, qword [rbp - 8]	       140	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x705	          0x488910	                    mov qword [rax], rdx	       140	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x708	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       141	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x70c	            0xeb05	                           jmp 0x4000753	       141	quote.c	FUNCTION_7	FOR_1	SWITCH_1
0x70e	      0xe9d2feffff	                           jmp 0x4000625	       143	quote.c	FUNCTION_7	FOR_1
0x713	              0xc9	                                   leave	       144	quote.c	FUNCTION_7
0x714	              0xc3	                                     ret	       144	quote.c	FUNCTION_7
sq_quote_argv_pretty	FOR,1:functions,0:WHILE,0:IF,0:CALL,2:SWITCH,0:ELSE,0:DO,0	33
0x53d	              0x55	                                push rbp	        88	quote.c	FUNCTION_6
0x53e	          0x4889e5	                            mov rbp, rsp	        88	quote.c	FUNCTION_6
0x541	        0x4883ec20	                           sub rsp, 0x20	        88	quote.c	FUNCTION_6
0x545	        0x48897de8	             mov qword [rbp - 0x18], rdi	        88	quote.c	FUNCTION_6
0x549	        0x488975e0	             mov qword [rbp - 0x20], rsi	        88	quote.c	FUNCTION_6
0x54d	    0xc745fc000000	                  mov dword [rbp - 4], 0	        91	quote.c	FUNCTION_6	FOR_1
0x554	            0xeb3b	                           jmp 0x40005d1	        91	quote.c	FUNCTION_6	FOR_1
0x556	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        92	quote.c	FUNCTION_6	FOR_1	CALL_1
0x55a	      0xbe20000000	                           mov esi, 0x20	        92	quote.c	FUNCTION_6	FOR_1	CALL_1
0x55f	          0x4889c7	                            mov rdi, rax	        92	quote.c	FUNCTION_6	FOR_1	CALL_1
0x562	      0xe8bbfbffff	                   call sym.strbuf_addch	        92	quote.c	FUNCTION_6	FOR_1	CALL_1
0x567	          0x8b45fc	                mov eax, dword [rbp - 4]	        93	quote.c	FUNCTION_6	FOR_1	CALL_2
0x56a	            0x4898	                                    cdqe	        93	quote.c	FUNCTION_6	FOR_1	CALL_2
0x56c	    0x488d14c50000	                        lea rdx, [rax*8]	        93	quote.c	FUNCTION_6	FOR_1	CALL_2
0x574	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        93	quote.c	FUNCTION_6	FOR_1	CALL_2
0x578	          0x4801d0	                            add rax, rdx	        93	quote.c	FUNCTION_6	FOR_1	CALL_2
0x57b	          0x488b10	                    mov rdx, qword [rax]	        93	quote.c	FUNCTION_6	FOR_1	CALL_2
0x57e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        93	quote.c	FUNCTION_6	FOR_1	CALL_2
0x582	          0x4889d6	                            mov rsi, rdx	        93	quote.c	FUNCTION_6	FOR_1	CALL_2
0x585	          0x4889c7	                            mov rdi, rax	        93	quote.c	FUNCTION_6	FOR_1	CALL_2
0x588	      0xe800000000	                          call 0x40005cd	        93	quote.c	FUNCTION_6	FOR_1	CALL_2
0x58d	        0x8345fc01	                  add dword [rbp - 4], 1	        91	quote.c	FUNCTION_6	FOR_1
0x591	          0x8b45fc	                mov eax, dword [rbp - 4]	        91	quote.c	FUNCTION_6	FOR_1
0x594	            0x4898	                                    cdqe	        91	quote.c	FUNCTION_6	FOR_1
0x596	    0x488d14c50000	                        lea rdx, [rax*8]	        91	quote.c	FUNCTION_6	FOR_1
0x59e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        91	quote.c	FUNCTION_6	FOR_1
0x5a2	          0x4801d0	                            add rax, rdx	        91	quote.c	FUNCTION_6	FOR_1
0x5a5	          0x488b00	                    mov rax, qword [rax]	        91	quote.c	FUNCTION_6	FOR_1
0x5a8	          0x4885c0	                           test rax, rax	        91	quote.c	FUNCTION_6	FOR_1
0x5ab	            0x75a9	                           jne 0x4000596	        91	quote.c	FUNCTION_6	FOR_1
0x5ad	              0x90	                                     nop	        95	quote.c	FUNCTION_6
0x5ae	              0xc9	                                   leave	        95	quote.c	FUNCTION_6
0x5af	              0xc3	                                     ret	        95	quote.c	FUNCTION_6
need_bs_quote	FOR,0:functions,0:WHILE,0:IF,0:CALL,0:SWITCH,0:ELSE,0:DO,0	13
0x1c5	              0x55	                                push rbp	         8	quote.c	FUNCTION_1
0x1c6	          0x4889e5	                            mov rbp, rsp	         8	quote.c	FUNCTION_1
0x1c9	            0x89f8	                            mov eax, edi	         8	quote.c	FUNCTION_1
0x1cb	          0x8845fc	                  mov byte [rbp - 4], al	         8	quote.c	FUNCTION_1
0x1ce	        0x807dfc27	                cmp byte [rbp - 4], 0x27	         9	quote.c	FUNCTION_1
0x1d2	            0x7406	                            je 0x400021a	         9	quote.c	FUNCTION_1
0x1d4	        0x807dfc21	                cmp byte [rbp - 4], 0x21	         9	quote.c	FUNCTION_1
0x1d8	            0x7507	                           jne 0x4000221	         9	quote.c	FUNCTION_1
0x1da	      0xb801000000	                              mov eax, 1	         9	quote.c	FUNCTION_1
0x1df	            0xeb05	                           jmp 0x4000226	         9	quote.c	FUNCTION_1
0x1e1	      0xb800000000	                              mov eax, 0	         9	quote.c	FUNCTION_1
0x1e6	              0x5d	                                 pop rbp	        10	quote.c	FUNCTION_1
0x1e7	              0xc3	                                     ret	        10	quote.c	FUNCTION_1
quote_two_c_style	FOR,0:functions,0:WHILE,0:IF,3:CALL,8:SWITCH,0:ELSE,1:DO,0	61
0xd44	              0x55	                                push rbp	       296	quote.c	FUNCTION_16
0xd45	          0x4889e5	                            mov rbp, rsp	       296	quote.c	FUNCTION_16
0xd48	        0x4883ec20	                           sub rsp, 0x20	       296	quote.c	FUNCTION_16
0xd4c	        0x48897df8	                mov qword [rbp - 8], rdi	       296	quote.c	FUNCTION_16
0xd50	        0x488975f0	             mov qword [rbp - 0x10], rsi	       296	quote.c	FUNCTION_16
0xd54	        0x488955e8	             mov qword [rbp - 0x18], rdx	       296	quote.c	FUNCTION_16
0xd58	          0x894de4	             mov dword [rbp - 0x1c], ecx	       296	quote.c	FUNCTION_16
0xd5b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       297	quote.c	FUNCTION_16	IF_1	CALL_1
0xd5f	      0xb900000000	                              mov ecx, 0	       297	quote.c	FUNCTION_16	IF_1	CALL_1
0xd64	      0xba00000000	                              mov edx, 0	       297	quote.c	FUNCTION_16	IF_1	CALL_1
0xd69	      0xbe00000000	                              mov esi, 0	       297	quote.c	FUNCTION_16	IF_1	CALL_1
0xd6e	          0x4889c7	                            mov rdi, rax	       297	quote.c	FUNCTION_16	IF_1	CALL_1
0xd71	      0xe800000000	                          call 0x4000db6	       297	quote.c	FUNCTION_16	IF_1	CALL_1
0xd76	          0x4885c0	                           test rax, rax	       297	quote.c	FUNCTION_16	IF_1	CALL_1
0xd79	            0x7520	                           jne 0x4000ddb	       297	quote.c	FUNCTION_16	IF_1	CALL_1
0xd7b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       298	quote.c	FUNCTION_16	IF_1	CALL_2
0xd7f	      0xb900000000	                              mov ecx, 0	       298	quote.c	FUNCTION_16	IF_1	CALL_2
0xd84	      0xba00000000	                              mov edx, 0	       298	quote.c	FUNCTION_16	IF_1	CALL_2
0xd89	      0xbe00000000	                              mov esi, 0	       298	quote.c	FUNCTION_16	IF_1	CALL_2
0xd8e	          0x4889c7	                            mov rdi, rax	       298	quote.c	FUNCTION_16	IF_1	CALL_2
0xd91	      0xe800000000	                          call 0x4000dd6	       298	quote.c	FUNCTION_16	IF_1	CALL_2
0xd96	          0x4885c0	                           test rax, rax	       297	quote.c	FUNCTION_16	IF_1	CALL_1
0xd99	            0x7464	                            je 0x4000e3f	       297	quote.c	FUNCTION_16	IF_1	CALL_1
0xd9b	        0x837de400	               cmp dword [rbp - 0x1c], 0	       299	quote.c	FUNCTION_16	IF_1	IF_2
0xd9f	            0x7511	                           jne 0x4000df2	       299	quote.c	FUNCTION_16	IF_1	IF_2
0xda1	        0x488b45f8	                mov rax, qword [rbp - 8]	       300	quote.c	FUNCTION_16	IF_1	CALL_3
0xda5	      0xbe22000000	                           mov esi, 0x22	       300	quote.c	FUNCTION_16	IF_1	CALL_3
0xdaa	          0x4889c7	                            mov rdi, rax	       300	quote.c	FUNCTION_16	IF_1	CALL_3
0xdad	      0xe870f3ffff	                   call sym.strbuf_addch	       300	quote.c	FUNCTION_16	IF_1	CALL_3
0xdb2	        0x488b75f8	                mov rsi, qword [rbp - 8]	       301	quote.c	FUNCTION_16	IF_1	CALL_4
0xdb6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       301	quote.c	FUNCTION_16	IF_1	CALL_4
0xdba	      0xb901000000	                              mov ecx, 1	       301	quote.c	FUNCTION_16	IF_1	CALL_4
0xdbf	      0xba00000000	                              mov edx, 0	       301	quote.c	FUNCTION_16	IF_1	CALL_4
0xdc4	          0x4889c7	                            mov rdi, rax	       301	quote.c	FUNCTION_16	IF_1	CALL_4
0xdc7	      0xe800000000	                          call 0x4000e0c	       301	quote.c	FUNCTION_16	IF_1	CALL_4
0xdcc	        0x488b75f8	                mov rsi, qword [rbp - 8]	       302	quote.c	FUNCTION_16	IF_1	CALL_5
0xdd0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       302	quote.c	FUNCTION_16	IF_1	CALL_5
0xdd4	      0xb901000000	                              mov ecx, 1	       302	quote.c	FUNCTION_16	IF_1	CALL_5
0xdd9	      0xba00000000	                              mov edx, 0	       302	quote.c	FUNCTION_16	IF_1	CALL_5
0xdde	          0x4889c7	                            mov rdi, rax	       302	quote.c	FUNCTION_16	IF_1	CALL_5
0xde1	      0xe800000000	                          call 0x4000e26	       302	quote.c	FUNCTION_16	IF_1	CALL_5
0xde6	        0x837de400	               cmp dword [rbp - 0x1c], 0	       303	quote.c	FUNCTION_16	IF_1	IF_3
0xdea	            0x7539	                           jne 0x4000e65	       303	quote.c	FUNCTION_16	IF_1	IF_3
0xdec	        0x488b45f8	                mov rax, qword [rbp - 8]	       304	quote.c	FUNCTION_16	IF_1	CALL_6
0xdf0	      0xbe22000000	                           mov esi, 0x22	       304	quote.c	FUNCTION_16	IF_1	CALL_6
0xdf5	          0x4889c7	                            mov rdi, rax	       304	quote.c	FUNCTION_16	IF_1	CALL_6
0xdf8	      0xe825f3ffff	                   call sym.strbuf_addch	       304	quote.c	FUNCTION_16	IF_1	CALL_6
0xdfd	            0xeb26	                           jmp 0x4000e65	       303	quote.c	FUNCTION_16	IF_1	IF_3
0xdff	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       306	quote.c	FUNCTION_16	ELSE_1	CALL_7
0xe03	        0x488b45f8	                mov rax, qword [rbp - 8]	       306	quote.c	FUNCTION_16	ELSE_1	CALL_7
0xe07	          0x4889d6	                            mov rsi, rdx	       306	quote.c	FUNCTION_16	ELSE_1	CALL_7
0xe0a	          0x4889c7	                            mov rdi, rax	       306	quote.c	FUNCTION_16	ELSE_1	CALL_7
0xe0d	      0xe87ef3ffff	                  call sym.strbuf_addstr	       306	quote.c	FUNCTION_16	ELSE_1	CALL_7
0xe12	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       307	quote.c	FUNCTION_16	ELSE_1	CALL_8
0xe16	        0x488b45f8	                mov rax, qword [rbp - 8]	       307	quote.c	FUNCTION_16	ELSE_1	CALL_8
0xe1a	          0x4889d6	                            mov rsi, rdx	       307	quote.c	FUNCTION_16	ELSE_1	CALL_8
0xe1d	          0x4889c7	                            mov rdi, rax	       307	quote.c	FUNCTION_16	ELSE_1	CALL_8
0xe20	      0xe86bf3ffff	                  call sym.strbuf_addstr	       307	quote.c	FUNCTION_16	ELSE_1	CALL_8
0xe25	              0x90	                                     nop	       309	quote.c	FUNCTION_16
0xe26	              0xc9	                                   leave	       309	quote.c	FUNCTION_16
0xe27	              0xc3	                                     ret	       309	quote.c	FUNCTION_16
sq_quotef	FOR,0:functions,0:WHILE,0:IF,0:CALL,5:SWITCH,0:ELSE,0:DO,0	52
0x39e	              0x55	                                push rbp	        63	quote.c	FUNCTION_4
0x39f	          0x4889e5	                            mov rbp, rsp	        63	quote.c	FUNCTION_4
0x3a2	    0x4881ec000100	                          sub rsp, 0x100	        63	quote.c	FUNCTION_4
0x3a9	    0x4889bd08ffff	             mov qword [rbp - 0xf8], rdi	        63	quote.c	FUNCTION_4
0x3b0	    0x4889b500ffff	            mov qword [rbp - 0x100], rsi	        63	quote.c	FUNCTION_4
0x3b7	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	        63	quote.c	FUNCTION_4
0x3be	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	        63	quote.c	FUNCTION_4
0x3c5	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	        63	quote.c	FUNCTION_4
0x3cc	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	        63	quote.c	FUNCTION_4
0x3d3	            0x84c0	                             test al, al	        63	quote.c	FUNCTION_4
0x3d5	            0x7420	                            je 0x4000437	        63	quote.c	FUNCTION_4
0x3d7	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	        63	quote.c	FUNCTION_4
0x3db	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	        63	quote.c	FUNCTION_4
0x3df	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	        63	quote.c	FUNCTION_4
0x3e3	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	        63	quote.c	FUNCTION_4
0x3e7	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	        63	quote.c	FUNCTION_4
0x3eb	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	        63	quote.c	FUNCTION_4
0x3ef	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	        63	quote.c	FUNCTION_4
0x3f3	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	        63	quote.c	FUNCTION_4
0x3f7	    0x64488b042528	                mov rax, qword fs:[0x28]	        63	quote.c	FUNCTION_4
0x400	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	        63	quote.c	FUNCTION_4
0x407	            0x31c0	                            xor eax, eax	        63	quote.c	FUNCTION_4
0x409	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	        64	quote.c	FUNCTION_4
0x414	    0x48c78518ffff	               mov qword [rbp - 0xe8], 0	        64	quote.c	FUNCTION_4
0x41f	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	        64	quote.c	FUNCTION_4
0x42a	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	        67	quote.c	FUNCTION_4	CALL_1
0x434	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	        67	quote.c	FUNCTION_4	CALL_1
0x43e	        0x488d4510	                   lea rax, [rbp + 0x10]	        67	quote.c	FUNCTION_4	CALL_1
0x442	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	        67	quote.c	FUNCTION_4	CALL_1
0x449	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	        67	quote.c	FUNCTION_4	CALL_1
0x450	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	        67	quote.c	FUNCTION_4	CALL_1
0x457	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	        68	quote.c	FUNCTION_4	CALL_2
0x45e	    0x488b8d00ffff	            mov rcx, qword [rbp - 0x100]	        68	quote.c	FUNCTION_4	CALL_2
0x465	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	        68	quote.c	FUNCTION_4	CALL_2
0x46c	          0x4889ce	                            mov rsi, rcx	        68	quote.c	FUNCTION_4	CALL_2
0x46f	          0x4889c7	                            mov rdi, rax	        68	quote.c	FUNCTION_4	CALL_2
0x472	      0xe800000000	                          call 0x40004b7	        68	quote.c	FUNCTION_4	CALL_2
0x477	    0x488b9520ffff	             mov rdx, qword [rbp - 0xe0]	        71	quote.c	FUNCTION_4	CALL_4
0x47e	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	        71	quote.c	FUNCTION_4	CALL_4
0x485	          0x4889d6	                            mov rsi, rdx	        71	quote.c	FUNCTION_4	CALL_4
0x488	          0x4889c7	                            mov rdi, rax	        71	quote.c	FUNCTION_4	CALL_4
0x48b	      0xe800000000	                          call 0x40004d0	        71	quote.c	FUNCTION_4	CALL_4
0x490	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	        72	quote.c	FUNCTION_4	CALL_5
0x497	          0x4889c7	                            mov rdi, rax	        72	quote.c	FUNCTION_4	CALL_5
0x49a	      0xe800000000	                          call 0x40004df	        72	quote.c	FUNCTION_4	CALL_5
0x49f	              0x90	                                     nop	        73	quote.c	FUNCTION_4
0x4a0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	        73	quote.c	FUNCTION_4
0x4a7	    0x644833042528	                xor rax, qword fs:[0x28]	        73	quote.c	FUNCTION_4
0x4b0	            0x7405	                            je 0x40004f7	        73	quote.c	FUNCTION_4
0x4b2	      0xe800000000	                          call 0x40004f7	        73	quote.c	FUNCTION_4
0x4b7	              0xc9	                                   leave	        73	quote.c	FUNCTION_4
0x4b8	              0xc3	                                     ret	        73	quote.c	FUNCTION_4
basic_regex_quote_buf	FOR,0:functions,0:WHILE,1:IF,3:CALL,8:SWITCH,1:ELSE,0:DO,0	89
0x1414	              0x55	                                push rbp	       489	quote.c	FUNCTION_24
0x1415	          0x4889e5	                            mov rbp, rsp	       489	quote.c	FUNCTION_24
0x1418	        0x4883ec20	                           sub rsp, 0x20	       489	quote.c	FUNCTION_24
0x141c	        0x48897de8	             mov qword [rbp - 0x18], rdi	       489	quote.c	FUNCTION_24
0x1420	        0x488975e0	             mov qword [rbp - 0x20], rsi	       489	quote.c	FUNCTION_24
0x1424	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       492	quote.c	FUNCTION_24	IF_1
0x1428	           0xfb600	                   movzx eax, byte [rax]	       492	quote.c	FUNCTION_24	IF_1
0x142b	            0x3c5e	                            cmp al, 0x5e	       492	quote.c	FUNCTION_24	IF_1
0x142d	            0x7531	                           jne 0x40014a0	       492	quote.c	FUNCTION_24	IF_1
0x142f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       494	quote.c	FUNCTION_24	IF_1	CALL_1
0x1433	      0xbe5c000000	                           mov esi, 0x5c	       494	quote.c	FUNCTION_24	IF_1	CALL_1
0x1438	          0x4889c7	                            mov rdi, rax	       494	quote.c	FUNCTION_24	IF_1	CALL_1
0x143b	      0xe8e2ecffff	                   call sym.strbuf_addch	       494	quote.c	FUNCTION_24	IF_1	CALL_1
0x1440	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       495	quote.c	FUNCTION_24	IF_1	CALL_2
0x1444	        0x488d5001	                      lea rdx, [rax + 1]	       495	quote.c	FUNCTION_24	IF_1	CALL_2
0x1448	        0x488955e0	             mov qword [rbp - 0x20], rdx	       495	quote.c	FUNCTION_24	IF_1	CALL_2
0x144c	           0xfb600	                   movzx eax, byte [rax]	       495	quote.c	FUNCTION_24	IF_1	CALL_2
0x144f	           0xfbed0	                           movsx edx, al	       495	quote.c	FUNCTION_24	IF_1	CALL_2
0x1452	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       495	quote.c	FUNCTION_24	IF_1	CALL_2
0x1456	            0x89d6	                            mov esi, edx	       495	quote.c	FUNCTION_24	IF_1	CALL_2
0x1458	          0x4889c7	                            mov rdi, rax	       495	quote.c	FUNCTION_24	IF_1	CALL_2
0x145b	      0xe8c2ecffff	                   call sym.strbuf_addch	       495	quote.c	FUNCTION_24	IF_1	CALL_2
0x1460	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       497	quote.c	FUNCTION_24	IF_2
0x1464	           0xfb600	                   movzx eax, byte [rax]	       497	quote.c	FUNCTION_24	IF_2
0x1467	            0x3c2a	                            cmp al, 0x2a	       497	quote.c	FUNCTION_24	IF_2
0x1469	     0xf85af000000	                           jne 0x400155e	       497	quote.c	FUNCTION_24	IF_2
0x146f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       499	quote.c	FUNCTION_24	CALL_3
0x1473	        0x488d5001	                      lea rdx, [rax + 1]	       499	quote.c	FUNCTION_24	CALL_3
0x1477	        0x488955e0	             mov qword [rbp - 0x20], rdx	       499	quote.c	FUNCTION_24	CALL_3
0x147b	           0xfb600	                   movzx eax, byte [rax]	       499	quote.c	FUNCTION_24	CALL_3
0x147e	           0xfbed0	                           movsx edx, al	       499	quote.c	FUNCTION_24	CALL_3
0x1481	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       499	quote.c	FUNCTION_24	CALL_3
0x1485	            0x89d6	                            mov esi, edx	       499	quote.c	FUNCTION_24	CALL_3
0x1487	          0x4889c7	                            mov rdi, rax	       499	quote.c	FUNCTION_24	CALL_3
0x148a	      0xe893ecffff	                   call sym.strbuf_addch	       499	quote.c	FUNCTION_24	CALL_3
0x148f	      0xe98a000000	                           jmp 0x400155e	       501	quote.c	FUNCTION_24	WHILE_1
0x1494	         0xfbe45ff	               movsx eax, byte [rbp - 1]	       502	quote.c	FUNCTION_24	WHILE_1	SWITCH_1
0x1498	          0x83f82e	                           cmp eax, 0x2e	       502	quote.c	FUNCTION_24	WHILE_1	SWITCH_1
0x149b	            0x7419	                            je 0x40014f6	       502	quote.c	FUNCTION_24	WHILE_1	SWITCH_1
0x149d	          0x83f82e	                           cmp eax, 0x2e	       502	quote.c	FUNCTION_24	WHILE_1	SWITCH_1
0x14a0	            0x7f0c	                            jg 0x40014ee	       502	quote.c	FUNCTION_24	WHILE_1	SWITCH_1
0x14a2	          0x83f824	                           cmp eax, 0x24	       502	quote.c	FUNCTION_24	WHILE_1	SWITCH_1
0x14a5	            0x7434	                            je 0x400151b	       502	quote.c	FUNCTION_24	WHILE_1	SWITCH_1
0x14a7	          0x83f82a	                           cmp eax, 0x2a	       502	quote.c	FUNCTION_24	WHILE_1	SWITCH_1
0x14aa	            0x740a	                            je 0x40014f6	       502	quote.c	FUNCTION_24	WHILE_1	SWITCH_1
0x14ac	            0xeb5d	                           jmp 0x400154b	       502	quote.c	FUNCTION_24	WHILE_1	SWITCH_1
0x14ae	          0x83e85b	                           sub eax, 0x5b	       502	quote.c	FUNCTION_24	WHILE_1	SWITCH_1
0x14b1	          0x83f801	                              cmp eax, 1	       502	quote.c	FUNCTION_24	WHILE_1	SWITCH_1
0x14b4	            0x7755	                            ja 0x400154b	       502	quote.c	FUNCTION_24	WHILE_1	SWITCH_1
0x14b6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       507	quote.c	FUNCTION_24	WHILE_1	SWITCH_1	CALL_4
0x14ba	      0xbe5c000000	                           mov esi, 0x5c	       507	quote.c	FUNCTION_24	WHILE_1	SWITCH_1	CALL_4
0x14bf	          0x4889c7	                            mov rdi, rax	       507	quote.c	FUNCTION_24	WHILE_1	SWITCH_1	CALL_4
0x14c2	      0xe85becffff	                   call sym.strbuf_addch	       507	quote.c	FUNCTION_24	WHILE_1	SWITCH_1	CALL_4
0x14c7	         0xfbe55ff	               movsx edx, byte [rbp - 1]	       508	quote.c	FUNCTION_24	WHILE_1	SWITCH_1	CALL_5
0x14cb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       508	quote.c	FUNCTION_24	WHILE_1	SWITCH_1	CALL_5
0x14cf	            0x89d6	                            mov esi, edx	       508	quote.c	FUNCTION_24	WHILE_1	SWITCH_1	CALL_5
0x14d1	          0x4889c7	                            mov rdi, rax	       508	quote.c	FUNCTION_24	WHILE_1	SWITCH_1	CALL_5
0x14d4	      0xe849ecffff	                   call sym.strbuf_addch	       508	quote.c	FUNCTION_24	WHILE_1	SWITCH_1	CALL_5
0x14d9	            0xeb43	                           jmp 0x400155e	       509	quote.c	FUNCTION_24	WHILE_1	SWITCH_1
0x14db	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       513	quote.c	FUNCTION_24	WHILE_1	SWITCH_1	IF_3
0x14df	           0xfb600	                   movzx eax, byte [rax]	       513	quote.c	FUNCTION_24	WHILE_1	SWITCH_1	IF_3
0x14e2	            0x84c0	                             test al, al	       513	quote.c	FUNCTION_24	WHILE_1	SWITCH_1	IF_3
0x14e4	            0x7511	                           jne 0x4001537	       513	quote.c	FUNCTION_24	WHILE_1	SWITCH_1	IF_3
0x14e6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       514	quote.c	FUNCTION_24	WHILE_1	SWITCH_1	CALL_6
0x14ea	      0xbe5c000000	                           mov esi, 0x5c	       514	quote.c	FUNCTION_24	WHILE_1	SWITCH_1	CALL_6
0x14ef	          0x4889c7	                            mov rdi, rax	       514	quote.c	FUNCTION_24	WHILE_1	SWITCH_1	CALL_6
0x14f2	      0xe82becffff	                   call sym.strbuf_addch	       514	quote.c	FUNCTION_24	WHILE_1	SWITCH_1	CALL_6
0x14f7	         0xfbe55ff	               movsx edx, byte [rbp - 1]	       515	quote.c	FUNCTION_24	WHILE_1	SWITCH_1	CALL_7
0x14fb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       515	quote.c	FUNCTION_24	WHILE_1	SWITCH_1	CALL_7
0x14ff	            0x89d6	                            mov esi, edx	       515	quote.c	FUNCTION_24	WHILE_1	SWITCH_1	CALL_7
0x1501	          0x4889c7	                            mov rdi, rax	       515	quote.c	FUNCTION_24	WHILE_1	SWITCH_1	CALL_7
0x1504	      0xe819ecffff	                   call sym.strbuf_addch	       515	quote.c	FUNCTION_24	WHILE_1	SWITCH_1	CALL_7
0x1509	            0xeb13	                           jmp 0x400155e	       516	quote.c	FUNCTION_24	WHILE_1	SWITCH_1
0x150b	         0xfbe55ff	               movsx edx, byte [rbp - 1]	       519	quote.c	FUNCTION_24	WHILE_1	SWITCH_1	CALL_8
0x150f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       519	quote.c	FUNCTION_24	WHILE_1	SWITCH_1	CALL_8
0x1513	            0x89d6	                            mov esi, edx	       519	quote.c	FUNCTION_24	WHILE_1	SWITCH_1	CALL_8
0x1515	          0x4889c7	                            mov rdi, rax	       519	quote.c	FUNCTION_24	WHILE_1	SWITCH_1	CALL_8
0x1518	      0xe805ecffff	                   call sym.strbuf_addch	       519	quote.c	FUNCTION_24	WHILE_1	SWITCH_1	CALL_8
0x151d	              0x90	                                     nop	       520	quote.c	FUNCTION_24	WHILE_1	SWITCH_1
0x151e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       501	quote.c	FUNCTION_24	WHILE_1
0x1522	        0x488d5001	                      lea rdx, [rax + 1]	       501	quote.c	FUNCTION_24	WHILE_1
0x1526	        0x488955e0	             mov qword [rbp - 0x20], rdx	       501	quote.c	FUNCTION_24	WHILE_1
0x152a	           0xfb600	                   movzx eax, byte [rax]	       501	quote.c	FUNCTION_24	WHILE_1
0x152d	          0x8845ff	                  mov byte [rbp - 1], al	       501	quote.c	FUNCTION_24	WHILE_1
0x1530	        0x807dff00	                   cmp byte [rbp - 1], 0	       501	quote.c	FUNCTION_24	WHILE_1
0x1534	     0xf855affffff	                           jne 0x40014d4	       501	quote.c	FUNCTION_24	WHILE_1
0x153a	              0x90	                                     nop	       523	quote.c	FUNCTION_24
0x153b	              0xc9	                                   leave	       523	quote.c	FUNCTION_24
0x153c	              0xc3	                                     ret	       523	quote.c	FUNCTION_24
unquote_c_style	FOR,1:functions,0:WHILE,0:IF,4:CALL,4:SWITCH,2:ELSE,0:DO,0	125
0xfd1	              0x55	                                push rbp	       358	quote.c	FUNCTION_20
0xfd2	          0x4889e5	                            mov rbp, rsp	       358	quote.c	FUNCTION_20
0xfd5	        0x4883ec40	                           sub rsp, 0x40	       358	quote.c	FUNCTION_20
0xfd9	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       358	quote.c	FUNCTION_20
0xfdd	        0x488975d0	             mov qword [rbp - 0x30], rsi	       358	quote.c	FUNCTION_20
0xfe1	        0x488955c8	             mov qword [rbp - 0x38], rdx	       358	quote.c	FUNCTION_20
0xfe5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       359	quote.c	FUNCTION_20
0xfe9	        0x488b4008	                mov rax, qword [rax + 8]	       359	quote.c	FUNCTION_20
0xfed	        0x488945f0	             mov qword [rbp - 0x10], rax	       359	quote.c	FUNCTION_20
0xff1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       362	quote.c	FUNCTION_20	IF_1
0xff5	        0x488d5001	                      lea rdx, [rax + 1]	       362	quote.c	FUNCTION_20	IF_1
0xff9	        0x488955d0	             mov qword [rbp - 0x30], rdx	       362	quote.c	FUNCTION_20	IF_1
0xffd	           0xfb600	                   movzx eax, byte [rax]	       362	quote.c	FUNCTION_20	IF_1
0x1000	            0x3c22	                            cmp al, 0x22	       362	quote.c	FUNCTION_20	IF_1
0x1002	            0x740a	                            je 0x400104e	       362	quote.c	FUNCTION_20	IF_1
0x1004	      0xb8ffffffff	                     mov eax, 0xffffffff	       363	quote.c	FUNCTION_20	IF_1
0x1009	      0xe988010000	                           jmp 0x40011d6	       363	quote.c	FUNCTION_20	IF_1
0x100e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       366	quote.c	FUNCTION_20	FOR_1	CALL_1
0x1012	      0xbe00000000	                              mov esi, 0	       366	quote.c	FUNCTION_20	FOR_1	CALL_1
0x1017	          0x4889c7	                            mov rdi, rax	       366	quote.c	FUNCTION_20	FOR_1	CALL_1
0x101a	      0xe800000000	                          call 0x400105f	       366	quote.c	FUNCTION_20	FOR_1	CALL_1
0x101f	        0x488945f8	                mov qword [rbp - 8], rax	       366	quote.c	FUNCTION_20	FOR_1	CALL_1
0x1023	        0x488b55f8	                mov rdx, qword [rbp - 8]	       367	quote.c	FUNCTION_20	FOR_1	CALL_2
0x1027	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       367	quote.c	FUNCTION_20	FOR_1	CALL_2
0x102b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       367	quote.c	FUNCTION_20	FOR_1	CALL_2
0x102f	          0x4889ce	                            mov rsi, rcx	       367	quote.c	FUNCTION_20	FOR_1	CALL_2
0x1032	          0x4889c7	                            mov rdi, rax	       367	quote.c	FUNCTION_20	FOR_1	CALL_2
0x1035	      0xe800000000	                          call 0x400107a	       367	quote.c	FUNCTION_20	FOR_1	CALL_2
0x103a	        0x488b45f8	                mov rax, qword [rbp - 8]	       368	quote.c	FUNCTION_20	FOR_1
0x103e	        0x480145d0	            add qword [rbp - 0x30], rax 	       368	quote.c	FUNCTION_20	FOR_1
0x1042	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       370	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x1046	        0x488d5001	                      lea rdx, [rax + 1]	       370	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x104a	        0x488955d0	             mov qword [rbp - 0x30], rdx	       370	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x104e	           0xfb600	                   movzx eax, byte [rax]	       370	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x1051	           0xfbec0	                           movsx eax, al	       370	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x1054	          0x83f822	                           cmp eax, 0x22	       370	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x1057	            0x740a	                            je 0x40010a3	       370	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x1059	          0x83f85c	                           cmp eax, 0x5c	       370	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x105c	            0x7421	                            je 0x40010bf	       370	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x105e	      0xe91b010000	                           jmp 0x40011be	       378	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x1063	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       372	quote.c	FUNCTION_20	FOR_1	SWITCH_1	IF_2
0x1068	            0x740b	                            je 0x40010b5	       372	quote.c	FUNCTION_20	FOR_1	SWITCH_1	IF_2
0x106a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       373	quote.c	FUNCTION_20	FOR_1	SWITCH_1	IF_2
0x106e	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       373	quote.c	FUNCTION_20	FOR_1	SWITCH_1	IF_2
0x1072	          0x488910	                    mov qword [rax], rdx	       373	quote.c	FUNCTION_20	FOR_1	SWITCH_1	IF_2
0x1075	      0xb800000000	                              mov eax, 0	       374	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x107a	      0xe917010000	                           jmp 0x40011d6	       374	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x107f	              0x90	                                     nop	       376	quote.c	FUNCTION_20	FOR_1	SWITCH_1
0x1080	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x1084	        0x488d5001	                      lea rdx, [rax + 1]	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x1088	        0x488955d0	             mov qword [rbp - 0x30], rdx	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x108c	           0xfb600	                   movzx eax, byte [rax]	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x108f	           0xfbec0	                           movsx eax, al	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x1092	          0x8945e8	             mov dword [rbp - 0x18], eax	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x1095	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x1098	          0x83e822	                           sub eax, 0x22	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x109b	          0x83f854	                           cmp eax, 0x54	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x109e	     0xf87d9000000	                            ja 0x40011bd	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x10a4	            0x89c0	                            mov eax, eax	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x10a6	    0x488b04c50000	                  mov rax, qword [rax*8]	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x10ae	            0xffe0	                                 jmp rax	       381	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x10b0	    0xc745e8070000	               mov dword [rbp - 0x18], 7	       382	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x10b7	      0xe9ab000000	                           jmp 0x40011a7	       382	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x10bc	    0xc745e8080000	               mov dword [rbp - 0x18], 8	       383	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x10c3	      0xe99f000000	                           jmp 0x40011a7	       383	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x10c8	    0xc745e80c0000	            mov dword [rbp - 0x18], 0xc 	       384	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x10cf	      0xe993000000	                           jmp 0x40011a7	       384	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x10d4	    0xc745e80a0000	             mov dword [rbp - 0x18], 0xa	       385	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x10db	      0xe987000000	                           jmp 0x40011a7	       385	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x10e0	    0xc745e80d0000	            mov dword [rbp - 0x18], 0xd 	       386	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x10e7	            0xeb7e	                           jmp 0x40011a7	       386	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x10e9	    0xc745e8090000	               mov dword [rbp - 0x18], 9	       387	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x10f0	            0xeb75	                           jmp 0x40011a7	       387	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x10f2	    0xc745e80b0000	            mov dword [rbp - 0x18], 0xb 	       388	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x10f9	            0xeb6c	                           jmp 0x40011a7	       388	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x10fb	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       395	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x10fe	          0x83e830	                           sub eax, 0x30	       395	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x1101	          0xc1e006	                              shl eax, 6	       395	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x1104	          0x8945ec	             mov dword [rbp - 0x14], eax	       395	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x1107	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       396	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_3
0x110b	        0x488d5001	                      lea rdx, [rax + 1]	       396	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_3
0x110f	        0x488955d0	             mov qword [rbp - 0x30], rdx	       396	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_3
0x1113	           0xfb600	                   movzx eax, byte [rax]	       396	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_3
0x1116	           0xfbec0	                           movsx eax, al	       396	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_3
0x1119	          0x8945e8	             mov dword [rbp - 0x18], eax	       396	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_3
0x111c	        0x837de82f	           cmp dword [rbp - 0x18], 0x2f 	       396	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_3
0x1120	            0x7e5c	                           jle 0x40011be	       396	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_3
0x1122	        0x837de837	           cmp dword [rbp - 0x18], 0x37 	       396	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_3
0x1126	            0x7f56	                            jg 0x40011be	       396	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_3
0x1128	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       398	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x112b	          0x83e830	                           sub eax, 0x30	       398	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x112e	          0xc1e003	                              shl eax, 3	       398	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x1131	           0x945ec	              or dword [rbp - 0x14], eax	       398	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x1134	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       399	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_4
0x1138	        0x488d5001	                      lea rdx, [rax + 1]	       399	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_4
0x113c	        0x488955d0	             mov qword [rbp - 0x30], rdx	       399	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_4
0x1140	           0xfb600	                   movzx eax, byte [rax]	       399	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_4
0x1143	           0xfbec0	                           movsx eax, al	       399	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_4
0x1146	          0x8945e8	             mov dword [rbp - 0x18], eax	       399	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_4
0x1149	        0x837de82f	           cmp dword [rbp - 0x18], 0x2f 	       399	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_4
0x114d	            0x7e2f	                           jle 0x40011be	       399	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_4
0x114f	        0x837de837	           cmp dword [rbp - 0x18], 0x37 	       399	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_4
0x1153	            0x7f29	                            jg 0x40011be	       399	quote.c	FUNCTION_20	FOR_1	SWITCH_2	IF_4
0x1155	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       401	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x1158	          0x83e830	                           sub eax, 0x30	       401	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x115b	           0x945ec	              or dword [rbp - 0x14], eax	       401	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x115e	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       402	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x1161	          0x8945e8	             mov dword [rbp - 0x18], eax	       402	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x1164	            0xeb01	                           jmp 0x40011a7	       403	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x1166	              0x90	                                     nop	       391	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x1167	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       407	quote.c	FUNCTION_20	FOR_1	CALL_3
0x116a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       407	quote.c	FUNCTION_20	FOR_1	CALL_3
0x116e	            0x89d6	                            mov esi, edx	       407	quote.c	FUNCTION_20	FOR_1	CALL_3
0x1170	          0x4889c7	                            mov rdi, rax	       407	quote.c	FUNCTION_20	FOR_1	CALL_3
0x1173	      0xe8aaefffff	                   call sym.strbuf_addch	       407	quote.c	FUNCTION_20	FOR_1	CALL_3
0x1178	      0xe991feffff	                           jmp 0x400104e	       408	quote.c	FUNCTION_20	FOR_1
0x117d	              0x90	                                     nop	       405	quote.c	FUNCTION_20	FOR_1	SWITCH_2
0x117e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       411	quote.c	FUNCTION_20	CALL_4
0x1182	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       411	quote.c	FUNCTION_20	CALL_4
0x1186	          0x4889d6	                            mov rsi, rdx	       411	quote.c	FUNCTION_20	CALL_4
0x1189	          0x4889c7	                            mov rdi, rax	       411	quote.c	FUNCTION_20	CALL_4
0x118c	      0xe8f7eeffff	                  call sym.strbuf_setlen	       411	quote.c	FUNCTION_20	CALL_4
0x1191	      0xb8ffffffff	                     mov eax, 0xffffffff	       412	quote.c	FUNCTION_20
0x1196	              0xc9	                                   leave	       413	quote.c	FUNCTION_20
0x1197	              0xc3	                                     ret	       413	quote.c	FUNCTION_20
python_quote_buf	FOR,0:functions,0:WHILE,1:IF,2:CALL,6:SWITCH,0:ELSE,0:DO,0	58
0x1227	              0x55	                                push rbp	       433	quote.c	FUNCTION_22
0x1228	          0x4889e5	                            mov rbp, rsp	       433	quote.c	FUNCTION_22
0x122b	        0x4883ec20	                           sub rsp, 0x20	       433	quote.c	FUNCTION_22
0x122f	        0x48897de8	             mov qword [rbp - 0x18], rdi	       433	quote.c	FUNCTION_22
0x1233	        0x488975e0	             mov qword [rbp - 0x20], rsi	       433	quote.c	FUNCTION_22
0x1237	        0xc645fc27	                mov byte [rbp - 4], 0x27	       434	quote.c	FUNCTION_22
0x123b	        0xc645fd5c	                mov byte [rbp - 3], 0x5c	       435	quote.c	FUNCTION_22
0x123f	        0xc645fe0a	                 mov byte [rbp - 2], 0xa	       436	quote.c	FUNCTION_22
0x1243	         0xfbe55fc	               movsx edx, byte [rbp - 4]	       439	quote.c	FUNCTION_22	CALL_1
0x1247	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       439	quote.c	FUNCTION_22	CALL_1
0x124b	            0x89d6	                            mov esi, edx	       439	quote.c	FUNCTION_22	CALL_1
0x124d	          0x4889c7	                            mov rdi, rax	       439	quote.c	FUNCTION_22	CALL_1
0x1250	      0xe8cdeeffff	                   call sym.strbuf_addch	       439	quote.c	FUNCTION_22	CALL_1
0x1255	            0xeb64	                           jmp 0x40012fb	       440	quote.c	FUNCTION_22	WHILE_1
0x1257	         0xfb645ff	               movzx eax, byte [rbp - 1]	       441	quote.c	FUNCTION_22	WHILE_1	IF_1
0x125b	          0x3a45fe	                  cmp al, byte [rbp - 2]	       441	quote.c	FUNCTION_22	WHILE_1	IF_1
0x125e	            0x7525	                           jne 0x40012c5	       441	quote.c	FUNCTION_22	WHILE_1	IF_1
0x1260	         0xfbe55fd	               movsx edx, byte [rbp - 3]	       442	quote.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x1264	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       442	quote.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x1268	            0x89d6	                            mov esi, edx	       442	quote.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x126a	          0x4889c7	                            mov rdi, rax	       442	quote.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x126d	      0xe8b0eeffff	                   call sym.strbuf_addch	       442	quote.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x1272	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       443	quote.c	FUNCTION_22	WHILE_1	IF_1	CALL_3
0x1276	      0xbe6e000000	                           mov esi, 0x6e	       443	quote.c	FUNCTION_22	WHILE_1	IF_1	CALL_3
0x127b	          0x4889c7	                            mov rdi, rax	       443	quote.c	FUNCTION_22	WHILE_1	IF_1	CALL_3
0x127e	      0xe89feeffff	                   call sym.strbuf_addch	       443	quote.c	FUNCTION_22	WHILE_1	IF_1	CALL_3
0x1283	            0xeb36	                           jmp 0x40012fb	       444	quote.c	FUNCTION_22	WHILE_1	IF_1
0x1285	         0xfb645ff	               movzx eax, byte [rbp - 1]	       446	quote.c	FUNCTION_22	WHILE_1	IF_2
0x1289	          0x3a45fc	                  cmp al, byte [rbp - 4]	       446	quote.c	FUNCTION_22	WHILE_1	IF_2
0x128c	            0x7409	                            je 0x40012d7	       446	quote.c	FUNCTION_22	WHILE_1	IF_2
0x128e	         0xfb645ff	               movzx eax, byte [rbp - 1]	       446	quote.c	FUNCTION_22	WHILE_1	IF_2
0x1292	          0x3a45fd	                  cmp al, byte [rbp - 3]	       446	quote.c	FUNCTION_22	WHILE_1	IF_2
0x1295	            0x7512	                           jne 0x40012e9	       446	quote.c	FUNCTION_22	WHILE_1	IF_2
0x1297	         0xfbe55fd	               movsx edx, byte [rbp - 3]	       447	quote.c	FUNCTION_22	WHILE_1	CALL_4
0x129b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       447	quote.c	FUNCTION_22	WHILE_1	CALL_4
0x129f	            0x89d6	                            mov esi, edx	       447	quote.c	FUNCTION_22	WHILE_1	CALL_4
0x12a1	          0x4889c7	                            mov rdi, rax	       447	quote.c	FUNCTION_22	WHILE_1	CALL_4
0x12a4	      0xe879eeffff	                   call sym.strbuf_addch	       447	quote.c	FUNCTION_22	WHILE_1	CALL_4
0x12a9	         0xfbe55ff	               movsx edx, byte [rbp - 1]	       448	quote.c	FUNCTION_22	WHILE_1	CALL_5
0x12ad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       448	quote.c	FUNCTION_22	WHILE_1	CALL_5
0x12b1	            0x89d6	                            mov esi, edx	       448	quote.c	FUNCTION_22	WHILE_1	CALL_5
0x12b3	          0x4889c7	                            mov rdi, rax	       448	quote.c	FUNCTION_22	WHILE_1	CALL_5
0x12b6	      0xe867eeffff	                   call sym.strbuf_addch	       448	quote.c	FUNCTION_22	WHILE_1	CALL_5
0x12bb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       440	quote.c	FUNCTION_22	WHILE_1
0x12bf	        0x488d5001	                      lea rdx, [rax + 1]	       440	quote.c	FUNCTION_22	WHILE_1
0x12c3	        0x488955e0	             mov qword [rbp - 0x20], rdx	       440	quote.c	FUNCTION_22	WHILE_1
0x12c7	           0xfb600	                   movzx eax, byte [rax]	       440	quote.c	FUNCTION_22	WHILE_1
0x12ca	          0x8845ff	                  mov byte [rbp - 1], al	       440	quote.c	FUNCTION_22	WHILE_1
0x12cd	        0x807dff00	                   cmp byte [rbp - 1], 0	       440	quote.c	FUNCTION_22	WHILE_1
0x12d1	            0x7584	                           jne 0x4001297	       440	quote.c	FUNCTION_22	WHILE_1
0x12d3	         0xfbe55fc	               movsx edx, byte [rbp - 4]	       450	quote.c	FUNCTION_22	CALL_6
0x12d7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       450	quote.c	FUNCTION_22	CALL_6
0x12db	            0x89d6	                            mov esi, edx	       450	quote.c	FUNCTION_22	CALL_6
0x12dd	          0x4889c7	                            mov rdi, rax	       450	quote.c	FUNCTION_22	CALL_6
0x12e0	      0xe83deeffff	                   call sym.strbuf_addch	       450	quote.c	FUNCTION_22	CALL_6
0x12e5	              0x90	                                     nop	       451	quote.c	FUNCTION_22
0x12e6	              0xc9	                                   leave	       451	quote.c	FUNCTION_22
0x12e7	              0xc3	                                     ret	       451	quote.c	FUNCTION_22
strbuf_addstr	FOR,0:functions,0:WHILE,0:IF,0:CALL,2:SWITCH,0:ELSE,0:DO,0	17
0x190	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_29
0x191	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_29
0x194	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_29
0x198	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_29
0x19c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_29
0x1a0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_29	CALL_2
0x1a4	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_29	CALL_2
0x1a7	      0xe800000000	                          call 0x40001ec	       279	strbuf.h	FUNCTION_29	CALL_2
0x1ac	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_29	CALL_2
0x1af	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_29	CALL_2
0x1b3	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_29	CALL_2
0x1b7	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_29	CALL_2
0x1ba	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_29	CALL_2
0x1bd	      0xe800000000	                          call 0x4000202	       279	strbuf.h	FUNCTION_29	CALL_2
0x1c2	              0x90	                                     nop	       280	strbuf.h	FUNCTION_29
0x1c3	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_29
0x1c4	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_29
sq_quote_buf	FOR,0:functions,0:WHILE,2:IF,1:CALL,10:SWITCH,0:ELSE,0:DO,0	72
0x1e8	              0x55	                                push rbp	        25	quote.c	FUNCTION_2
0x1e9	          0x4889e5	                            mov rbp, rsp	        25	quote.c	FUNCTION_2
0x1ec	        0x4883ec20	                           sub rsp, 0x20	        25	quote.c	FUNCTION_2
0x1f0	        0x48897de8	             mov qword [rbp - 0x18], rdi	        25	quote.c	FUNCTION_2
0x1f4	        0x488975e0	             mov qword [rbp - 0x20], rsi	        25	quote.c	FUNCTION_2
0x1f8	    0x48c745f00000	               mov qword [rbp - 0x10], 0	        26	quote.c	FUNCTION_2
0x200	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        28	quote.c	FUNCTION_2	IF_1
0x204	        0x488b4010	            mov rax, qword [rax + 0x10] 	        28	quote.c	FUNCTION_2	IF_1
0x208	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	        28	quote.c	FUNCTION_2	IF_1
0x20c	            0x7515	                           jne 0x4000263	        28	quote.c	FUNCTION_2	IF_1
0x20e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        29	quote.c	FUNCTION_2	CALL_1
0x212	      0xbe00000000	                              mov esi, 0	        29	quote.c	FUNCTION_2	CALL_1
0x217	          0x4889c7	                            mov rdi, rax	        29	quote.c	FUNCTION_2	CALL_1
0x21a	      0xe800000000	                          call 0x400025f	        29	quote.c	FUNCTION_2	CALL_1
0x21f	        0x488945f0	             mov qword [rbp - 0x10], rax	        29	quote.c	FUNCTION_2	CALL_1
0x223	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        31	quote.c	FUNCTION_2	CALL_2
0x227	      0xbe27000000	                           mov esi, 0x27	        31	quote.c	FUNCTION_2	CALL_2
0x22c	          0x4889c7	                            mov rdi, rax	        31	quote.c	FUNCTION_2	CALL_2
0x22f	      0xe8eefeffff	                   call sym.strbuf_addch	        31	quote.c	FUNCTION_2	CALL_2
0x234	      0xe98d000000	                           jmp 0x4000306	        32	quote.c	FUNCTION_2	WHILE_1
0x239	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        33	quote.c	FUNCTION_2	WHILE_1	CALL_3
0x23d	      0xbe00000000	                              mov esi, 0	        33	quote.c	FUNCTION_2	WHILE_1	CALL_3
0x242	          0x4889c7	                            mov rdi, rax	        33	quote.c	FUNCTION_2	WHILE_1	CALL_3
0x245	      0xe800000000	                          call 0x400028a	        33	quote.c	FUNCTION_2	WHILE_1	CALL_3
0x24a	        0x488945f8	                mov qword [rbp - 8], rax	        33	quote.c	FUNCTION_2	WHILE_1	CALL_3
0x24e	        0x488b55f8	                mov rdx, qword [rbp - 8]	        34	quote.c	FUNCTION_2	WHILE_1	CALL_4
0x252	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	        34	quote.c	FUNCTION_2	WHILE_1	CALL_4
0x256	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        34	quote.c	FUNCTION_2	WHILE_1	CALL_4
0x25a	          0x4889ce	                            mov rsi, rcx	        34	quote.c	FUNCTION_2	WHILE_1	CALL_4
0x25d	          0x4889c7	                            mov rdi, rax	        34	quote.c	FUNCTION_2	WHILE_1	CALL_4
0x260	      0xe800000000	                          call 0x40002a5	        34	quote.c	FUNCTION_2	WHILE_1	CALL_4
0x265	        0x488b45f8	                mov rax, qword [rbp - 8]	        35	quote.c	FUNCTION_2	WHILE_1
0x269	        0x480145e0	            add qword [rbp - 0x20], rax 	        35	quote.c	FUNCTION_2	WHILE_1
0x26d	            0xeb42	                           jmp 0x40002f1	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_5
0x26f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        37	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_6
0x273	      0xbe00000000	                              mov esi, 0	        37	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_6
0x278	          0x4889c7	                            mov rdi, rax	        37	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_6
0x27b	      0xe810ffffff	                  call sym.strbuf_addstr	        37	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_6
0x280	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        38	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_7
0x284	        0x488d5001	                      lea rdx, [rax + 1]	        38	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_7
0x288	        0x488955e0	             mov qword [rbp - 0x20], rdx	        38	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_7
0x28c	           0xfb600	                   movzx eax, byte [rax]	        38	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_7
0x28f	           0xfbed0	                           movsx edx, al	        38	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_7
0x292	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        38	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_7
0x296	            0x89d6	                            mov esi, edx	        38	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_7
0x298	          0x4889c7	                            mov rdi, rax	        38	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_7
0x29b	      0xe882feffff	                   call sym.strbuf_addch	        38	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_7
0x2a0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        39	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_8
0x2a4	      0xbe27000000	                           mov esi, 0x27	        39	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_8
0x2a9	          0x4889c7	                            mov rdi, rax	        39	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_8
0x2ac	      0xe871feffff	                   call sym.strbuf_addch	        39	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_8
0x2b1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_5
0x2b5	           0xfb600	                   movzx eax, byte [rax]	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_5
0x2b8	           0xfbec0	                           movsx eax, al	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_5
0x2bb	            0x89c7	                            mov edi, eax	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_5
0x2bd	      0xe803ffffff	                  call sym.need_bs_quote	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_5
0x2c2	            0x85c0	                           test eax, eax	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_5
0x2c4	            0x75a9	                           jne 0x40002af	        36	quote.c	FUNCTION_2	WHILE_1	WHILE_2	CALL_5
0x2c6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        32	quote.c	FUNCTION_2	WHILE_1
0x2ca	           0xfb600	                   movzx eax, byte [rax]	        32	quote.c	FUNCTION_2	WHILE_1
0x2cd	            0x84c0	                             test al, al	        32	quote.c	FUNCTION_2	WHILE_1
0x2cf	     0xf8564ffffff	                           jne 0x4000279	        32	quote.c	FUNCTION_2	WHILE_1
0x2d5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        42	quote.c	FUNCTION_2	CALL_9
0x2d9	      0xbe27000000	                           mov esi, 0x27	        42	quote.c	FUNCTION_2	CALL_9
0x2de	          0x4889c7	                            mov rdi, rax	        42	quote.c	FUNCTION_2	CALL_9
0x2e1	      0xe83cfeffff	                   call sym.strbuf_addch	        42	quote.c	FUNCTION_2	CALL_9
0x2e6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        43	quote.c	FUNCTION_2	CALL_10
0x2ea	          0x4889c7	                            mov rdi, rax	        43	quote.c	FUNCTION_2	CALL_10
0x2ed	      0xe800000000	                          call 0x4000332	        43	quote.c	FUNCTION_2	CALL_10
0x2f2	              0x90	                                     nop	        44	quote.c	FUNCTION_2
0x2f3	              0xc9	                                   leave	        44	quote.c	FUNCTION_2
0x2f4	              0xc3	                                     ret	        44	quote.c	FUNCTION_2
strbuf_avail	FOR,0:functions,0:WHILE,0:IF,0:CALL,0:SWITCH,0:ELSE,0:DO,0	18
0x52	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_26
0x53	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_26
0x56	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_26
0x5a	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_26
0x5e	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_26
0x61	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_26
0x64	            0x741b	                            je 0x40000c1	       141	strbuf.h	FUNCTION_26
0x66	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_26
0x6a	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_26
0x6d	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_26
0x71	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_26
0x75	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_26
0x78	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_26
0x7b	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_26
0x7f	            0xeb05	                           jmp 0x40000c6	       141	strbuf.h	FUNCTION_26
0x81	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_26
0x86	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_26
0x87	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_26
sq_quote_buf_pretty	FOR,1:functions,0:WHILE,0:IF,1:CALL,5:SWITCH,0:ELSE,0:DO,0	52
0x2f5	              0x55	                                push rbp	        47	quote.c	FUNCTION_3
0x2f6	          0x4889e5	                            mov rbp, rsp	        47	quote.c	FUNCTION_3
0x2f9	        0x4883ec20	                           sub rsp, 0x20	        47	quote.c	FUNCTION_3
0x2fd	        0x48897de8	             mov qword [rbp - 0x18], rdi	        47	quote.c	FUNCTION_3
0x301	        0x488975e0	             mov qword [rbp - 0x20], rsi	        47	quote.c	FUNCTION_3
0x305	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        51	quote.c	FUNCTION_3	FOR_1
0x309	        0x488945f8	                mov qword [rbp - 8], rax	        51	quote.c	FUNCTION_3	FOR_1
0x30d	            0xeb6f	                           jmp 0x40003be	        51	quote.c	FUNCTION_3	FOR_1
0x30f	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x313	           0xfb600	                   movzx eax, byte [rax]	        52	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x316	           0xfb6c0	                           movzx eax, al	        52	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x319	            0x4898	                                    cdqe	        52	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x31b	     0xfb680000000	                   movzx eax, byte [rax]	        52	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x322	           0xfb6c0	                           movzx eax, al	        52	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x325	          0x83e004	                              and eax, 4	        52	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x328	            0x85c0	                           test eax, eax	        52	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x32a	            0x754d	                           jne 0x40003b9	        52	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x32c	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x330	           0xfb600	                   movzx eax, byte [rax]	        52	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x333	           0xfb6c0	                           movzx eax, al	        52	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x336	            0x4898	                                    cdqe	        52	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x338	     0xfb680000000	                   movzx eax, byte [rax]	        52	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x33f	           0xfb6c0	                           movzx eax, al	        52	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x342	          0x83e002	                              and eax, 2	        52	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x345	            0x85c0	                           test eax, eax	        52	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x347	            0x7530	                           jne 0x40003b9	        52	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x349	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x34d	           0xfb600	                   movzx eax, byte [rax]	        52	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x350	           0xfbec0	                           movsx eax, al	        52	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x353	            0x89c6	                            mov esi, eax	        52	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x355	      0xbf00000000	                              mov edi, 0	        52	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x35a	      0xe800000000	                          call 0x400039f	        52	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x35f	          0x4885c0	                           test rax, rax	        52	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x362	            0x7515	                           jne 0x40003b9	        52	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_3
0x364	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        53	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_4
0x368	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        53	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_4
0x36c	          0x4889d6	                            mov rsi, rdx	        53	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_4
0x36f	          0x4889c7	                            mov rdi, rax	        53	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_4
0x372	      0xe800000000	                          call 0x40003b7	        53	quote.c	FUNCTION_3	FOR_1	IF_1	CALL_4
0x377	            0xeb23	                           jmp 0x40003dc	        54	quote.c	FUNCTION_3	FOR_1	IF_1
0x379	      0x488345f801	                  add qword [rbp - 8], 1	        51	quote.c	FUNCTION_3	FOR_1
0x37e	        0x488b45f8	                mov rax, qword [rbp - 8]	        51	quote.c	FUNCTION_3	FOR_1
0x382	           0xfb600	                   movzx eax, byte [rax]	        51	quote.c	FUNCTION_3	FOR_1
0x385	            0x84c0	                             test al, al	        51	quote.c	FUNCTION_3	FOR_1
0x387	            0x7586	                           jne 0x400034f	        51	quote.c	FUNCTION_3	FOR_1
0x389	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        59	quote.c	FUNCTION_3	CALL_5
0x38d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        59	quote.c	FUNCTION_3	CALL_5
0x391	          0x4889d6	                            mov rsi, rdx	        59	quote.c	FUNCTION_3	CALL_5
0x394	          0x4889c7	                            mov rdi, rax	        59	quote.c	FUNCTION_3	CALL_5
0x397	      0xe8f4fdffff	                  call sym.strbuf_addstr	        59	quote.c	FUNCTION_3	CALL_5
0x39c	              0xc9	                                   leave	        60	quote.c	FUNCTION_3
0x39d	              0xc3	                                     ret	        60	quote.c	FUNCTION_3
quote_c_style_counted	FOR,1:functions,0:WHILE,0:IF,6:CALL,10:SWITCH,0:ELSE,1:DO,0	223
0x9d4	              0x55	                                push rbp	       238	quote.c	FUNCTION_14
0x9d5	          0x4889e5	                            mov rbp, rsp	       238	quote.c	FUNCTION_14
0x9d8	        0x4883ec50	                           sub rsp, 0x50	       238	quote.c	FUNCTION_14
0x9dc	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       238	quote.c	FUNCTION_14
0x9e0	        0x488975d0	             mov qword [rbp - 0x30], rsi	       238	quote.c	FUNCTION_14
0x9e4	        0x488955c8	             mov qword [rbp - 0x38], rdx	       238	quote.c	FUNCTION_14
0x9e8	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       238	quote.c	FUNCTION_14
0x9ec	        0x448945bc	             mov dword [rbp - 0x44], r8d	       238	quote.c	FUNCTION_14
0x9f0	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       253	quote.c	FUNCTION_14
0x9f8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       254	quote.c	FUNCTION_14
0x9fc	        0x488945f0	             mov qword [rbp - 0x10], rax	       254	quote.c	FUNCTION_14
0xa00	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       259	quote.c	FUNCTION_14	FOR_1	CALL_1
0xa04	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       259	quote.c	FUNCTION_14	FOR_1	CALL_1
0xa08	          0x4889d6	                            mov rsi, rdx	       259	quote.c	FUNCTION_14	FOR_1	CALL_1
0xa0b	          0x4889c7	                            mov rdi, rax	       259	quote.c	FUNCTION_14	FOR_1	CALL_1
0xa0e	      0xe842ffffff	                 call sym.next_quote_pos	       259	quote.c	FUNCTION_14	FOR_1	CALL_1
0xa13	        0x488945f8	                mov qword [rbp - 8], rax	       259	quote.c	FUNCTION_14	FOR_1	CALL_1
0xa17	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       260	quote.c	FUNCTION_14	FOR_1	IF_1
0xa1b	        0x483945f8	                cmp qword [rbp - 8], rax	       260	quote.c	FUNCTION_14	FOR_1	IF_1
0xa1f	     0xf844a020000	                            je 0x4000caf	       260	quote.c	FUNCTION_14	FOR_1	IF_1
0xa25	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       260	quote.c	FUNCTION_14	FOR_1	IF_1
0xa2a	            0x7916	                           jns 0x4000a82	       260	quote.c	FUNCTION_14	FOR_1	IF_1
0xa2c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       260	quote.c	FUNCTION_14	FOR_1	IF_1
0xa30	        0x488b45f8	                mov rax, qword [rbp - 8]	       260	quote.c	FUNCTION_14	FOR_1	IF_1
0xa34	          0x4801d0	                            add rax, rdx	       260	quote.c	FUNCTION_14	FOR_1	IF_1
0xa37	           0xfb600	                   movzx eax, byte [rax]	       260	quote.c	FUNCTION_14	FOR_1	IF_1
0xa3a	            0x84c0	                             test al, al	       260	quote.c	FUNCTION_14	FOR_1	IF_1
0xa3c	     0xf842d020000	                            je 0x4000caf	       260	quote.c	FUNCTION_14	FOR_1	IF_1
0xa42	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       263	quote.c	FUNCTION_14	FOR_1	IF_2
0xa46	            0x753f	                           jne 0x4000ac7	       263	quote.c	FUNCTION_14	FOR_1	IF_2
0xa48	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       263	quote.c	FUNCTION_14	FOR_1	IF_2
0xa4c	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       263	quote.c	FUNCTION_14	FOR_1	IF_2
0xa50	            0x7535	                           jne 0x4000ac7	       263	quote.c	FUNCTION_14	FOR_1	IF_2
0xa52	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       264	quote.c	FUNCTION_14	FOR_1	CALL_2
0xa57	            0x7411	                            je 0x4000aaa	       264	quote.c	FUNCTION_14	FOR_1	CALL_2
0xa59	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       264	quote.c	FUNCTION_14	FOR_1	CALL_2
0xa5d	      0xbe22000000	                           mov esi, 0x22	       264	quote.c	FUNCTION_14	FOR_1	CALL_2
0xa62	          0x4889c7	                            mov rdi, rax	       264	quote.c	FUNCTION_14	FOR_1	CALL_2
0xa65	      0xe8b8f6ffff	                   call sym.strbuf_addch	       264	quote.c	FUNCTION_14	FOR_1	CALL_2
0xa6a	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       264	quote.c	FUNCTION_14	FOR_1	CALL_2
0xa6f	            0x7411	                            je 0x4000ac2	       264	quote.c	FUNCTION_14	FOR_1	CALL_2
0xa71	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       264	quote.c	FUNCTION_14	FOR_1	CALL_2
0xa75	          0x4889c6	                            mov rsi, rax	       264	quote.c	FUNCTION_14	FOR_1	CALL_2
0xa78	      0xbf22000000	                           mov edi, 0x22	       264	quote.c	FUNCTION_14	FOR_1	CALL_2
0xa7d	      0xe800000000	                          call 0x4000ac2	       264	quote.c	FUNCTION_14	FOR_1	CALL_2
0xa82	      0x488345e801	               add qword [rbp - 0x18], 1	       264	quote.c	FUNCTION_14	FOR_1	CALL_2
0xa87	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0xa8c	            0x7417	                            je 0x4000ae5	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0xa8e	        0x488b55f8	                mov rdx, qword [rbp - 8]	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0xa92	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0xa96	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0xa9a	          0x4889ce	                            mov rsi, rcx	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0xa9d	          0x4889c7	                            mov rdi, rax	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0xaa0	      0xe800000000	                          call 0x4000ae5	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0xaa5	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0xaaa	            0x741c	                            je 0x4000b08	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0xaac	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0xab0	        0x488b75f8	                mov rsi, qword [rbp - 8]	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0xab4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0xab8	          0x4889d1	                            mov rcx, rdx	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0xabb	      0xba01000000	                              mov edx, 1	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0xac0	          0x4889c7	                            mov rdi, rax	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0xac3	      0xe800000000	                          call 0x4000b08	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0xac8	        0x488b45f8	                mov rax, qword [rbp - 8]	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0xacc	        0x480145e8	            add qword [rbp - 0x18], rax 	       266	quote.c	FUNCTION_14	FOR_1	CALL_3
0xad0	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       267	quote.c	FUNCTION_14	FOR_1	CALL_4
0xad5	            0x7411	                            je 0x4000b28	       267	quote.c	FUNCTION_14	FOR_1	CALL_4
0xad7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       267	quote.c	FUNCTION_14	FOR_1	CALL_4
0xadb	      0xbe5c000000	                           mov esi, 0x5c	       267	quote.c	FUNCTION_14	FOR_1	CALL_4
0xae0	          0x4889c7	                            mov rdi, rax	       267	quote.c	FUNCTION_14	FOR_1	CALL_4
0xae3	      0xe83af6ffff	                   call sym.strbuf_addch	       267	quote.c	FUNCTION_14	FOR_1	CALL_4
0xae8	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       267	quote.c	FUNCTION_14	FOR_1	CALL_4
0xaed	            0x7411	                            je 0x4000b40	       267	quote.c	FUNCTION_14	FOR_1	CALL_4
0xaef	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       267	quote.c	FUNCTION_14	FOR_1	CALL_4
0xaf3	          0x4889c6	                            mov rsi, rax	       267	quote.c	FUNCTION_14	FOR_1	CALL_4
0xaf6	      0xbf5c000000	                           mov edi, 0x5c	       267	quote.c	FUNCTION_14	FOR_1	CALL_4
0xafb	      0xe800000000	                          call 0x4000b40	       267	quote.c	FUNCTION_14	FOR_1	CALL_4
0xb00	      0x488345e801	               add qword [rbp - 0x18], 1	       267	quote.c	FUNCTION_14	FOR_1	CALL_4
0xb05	        0x488b45f8	                mov rax, qword [rbp - 8]	       268	quote.c	FUNCTION_14	FOR_1
0xb09	        0x480145f0	            add qword [rbp - 0x10], rax 	       268	quote.c	FUNCTION_14	FOR_1
0xb0d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       269	quote.c	FUNCTION_14	FOR_1
0xb11	        0x488d5001	                      lea rdx, [rax + 1]	       269	quote.c	FUNCTION_14	FOR_1
0xb15	        0x488955f0	             mov qword [rbp - 0x10], rdx	       269	quote.c	FUNCTION_14	FOR_1
0xb19	           0xfb600	                   movzx eax, byte [rax]	       269	quote.c	FUNCTION_14	FOR_1
0xb1c	           0xfb6c0	                           movzx eax, al	       269	quote.c	FUNCTION_14	FOR_1
0xb1f	          0x8945e4	             mov dword [rbp - 0x1c], eax	       269	quote.c	FUNCTION_14	FOR_1
0xb22	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       270	quote.c	FUNCTION_14	FOR_1	IF_3
0xb27	            0x7810	                            js 0x4000b79	       270	quote.c	FUNCTION_14	FOR_1	IF_3
0xb29	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       271	quote.c	FUNCTION_14	FOR_1	IF_3
0xb2d	        0x482b45f8	                sub rax, qword [rbp - 8]	       271	quote.c	FUNCTION_14	FOR_1	IF_3
0xb31	        0x4883e801	                              sub rax, 1	       271	quote.c	FUNCTION_14	FOR_1	IF_3
0xb35	        0x488945d0	             mov qword [rbp - 0x30], rax	       271	quote.c	FUNCTION_14	FOR_1	IF_3
0xb39	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       272	quote.c	FUNCTION_14	FOR_1	IF_4
0xb3c	            0x4898	                                    cdqe	       272	quote.c	FUNCTION_14	FOR_1	IF_4
0xb3e	     0xfb680000000	                   movzx eax, byte [rax]	       272	quote.c	FUNCTION_14	FOR_1	IF_4
0xb45	            0x3c1f	                            cmp al, 0x1f	       272	quote.c	FUNCTION_14	FOR_1	IF_4
0xb47	            0x7e52	                           jle 0x4000bdb	       272	quote.c	FUNCTION_14	FOR_1	IF_4
0xb49	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       273	quote.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0xb4e	            0x741d	                            je 0x4000bad	       273	quote.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0xb50	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       273	quote.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0xb53	            0x4898	                                    cdqe	       273	quote.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0xb55	     0xfb680000000	                   movzx eax, byte [rax]	       273	quote.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0xb5c	           0xfbed0	                           movsx edx, al	       273	quote.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0xb5f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       273	quote.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0xb63	            0x89d6	                            mov esi, edx	       273	quote.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0xb65	          0x4889c7	                            mov rdi, rax	       273	quote.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0xb68	      0xe8b5f5ffff	                   call sym.strbuf_addch	       273	quote.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0xb6d	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       273	quote.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0xb72	            0x741d	                            je 0x4000bd1	       273	quote.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0xb74	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       273	quote.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0xb77	            0x4898	                                    cdqe	       273	quote.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0xb79	     0xfb680000000	                   movzx eax, byte [rax]	       273	quote.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0xb80	           0xfbec0	                           movsx eax, al	       273	quote.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0xb83	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       273	quote.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0xb87	          0x4889d6	                            mov rsi, rdx	       273	quote.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0xb8a	            0x89c7	                            mov edi, eax	       273	quote.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0xb8c	      0xe800000000	                          call 0x4000bd1	       273	quote.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0xb91	      0x488345e801	               add qword [rbp - 0x18], 1	       273	quote.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0xb96	      0xe965feffff	                           jmp 0x4000a40	       273	quote.c	FUNCTION_14	FOR_1	IF_4	CALL_5
0xb9b	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0xba0	            0x741a	                            je 0x4000bfc	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0xba2	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0xba5	          0xc1f806	                              sar eax, 6	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0xba8	          0x83e003	                              and eax, 3	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0xbab	          0x8d5030	                   lea edx, [rax + 0x30]	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0xbae	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0xbb2	            0x89d6	                            mov esi, edx	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0xbb4	          0x4889c7	                            mov rdi, rax	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0xbb7	      0xe866f5ffff	                   call sym.strbuf_addch	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0xbbc	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0xbc1	            0x741a	                            je 0x4000c1d	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0xbc3	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0xbc6	          0xc1f806	                              sar eax, 6	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0xbc9	          0x83e003	                              and eax, 3	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0xbcc	          0x8d5030	                   lea edx, [rax + 0x30]	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0xbcf	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0xbd3	          0x4889c6	                            mov rsi, rax	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0xbd6	            0x89d7	                            mov edi, edx	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0xbd8	      0xe800000000	                          call 0x4000c1d	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0xbdd	      0x488345e801	               add qword [rbp - 0x18], 1	       275	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_6
0xbe2	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0xbe7	            0x741a	                            je 0x4000c43	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0xbe9	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0xbec	          0xc1f803	                              sar eax, 3	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0xbef	          0x83e007	                              and eax, 7	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0xbf2	          0x8d5030	                   lea edx, [rax + 0x30]	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0xbf5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0xbf9	            0x89d6	                            mov esi, edx	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0xbfb	          0x4889c7	                            mov rdi, rax	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0xbfe	      0xe81ff5ffff	                   call sym.strbuf_addch	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0xc03	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0xc08	            0x741a	                            je 0x4000c64	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0xc0a	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0xc0d	          0xc1f803	                              sar eax, 3	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0xc10	          0x83e007	                              and eax, 7	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0xc13	          0x8d5030	                   lea edx, [rax + 0x30]	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0xc16	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0xc1a	          0x4889c6	                            mov rsi, rax	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0xc1d	            0x89d7	                            mov edi, edx	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0xc1f	      0xe800000000	                          call 0x4000c64	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0xc24	      0x488345e801	               add qword [rbp - 0x18], 1	       276	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_7
0xc29	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_8
0xc2e	            0x7417	                            je 0x4000c87	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_8
0xc30	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_8
0xc33	          0x83e007	                              and eax, 7	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_8
0xc36	          0x8d5030	                   lea edx, [rax + 0x30]	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_8
0xc39	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_8
0xc3d	            0x89d6	                            mov esi, edx	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_8
0xc3f	          0x4889c7	                            mov rdi, rax	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_8
0xc42	      0xe8dbf4ffff	                   call sym.strbuf_addch	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_8
0xc47	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_8
0xc4c	            0x7417	                            je 0x4000ca5	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_8
0xc4e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_8
0xc51	          0x83e007	                              and eax, 7	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_8
0xc54	          0x8d5030	                   lea edx, [rax + 0x30]	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_8
0xc57	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_8
0xc5b	          0x4889c6	                            mov rsi, rax	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_8
0xc5e	            0x89d7	                            mov edi, edx	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_8
0xc60	      0xe800000000	                          call 0x4000ca5	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_8
0xc65	      0x488345e801	               add qword [rbp - 0x18], 1	       277	quote.c	FUNCTION_14	FOR_1	ELSE_1	CALL_8
0xc6a	      0xe991fdffff	                           jmp 0x4000a40	       279	quote.c	FUNCTION_14	FOR_1
0xc6f	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       281	quote.c	FUNCTION_14	CALL_9
0xc74	            0x7417	                            je 0x4000ccd	       281	quote.c	FUNCTION_14	CALL_9
0xc76	        0x488b55f8	                mov rdx, qword [rbp - 8]	       281	quote.c	FUNCTION_14	CALL_9
0xc7a	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       281	quote.c	FUNCTION_14	CALL_9
0xc7e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       281	quote.c	FUNCTION_14	CALL_9
0xc82	          0x4889ce	                            mov rsi, rcx	       281	quote.c	FUNCTION_14	CALL_9
0xc85	          0x4889c7	                            mov rdi, rax	       281	quote.c	FUNCTION_14	CALL_9
0xc88	      0xe800000000	                          call 0x4000ccd	       281	quote.c	FUNCTION_14	CALL_9
0xc8d	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       281	quote.c	FUNCTION_14	CALL_9
0xc92	            0x741c	                            je 0x4000cf0	       281	quote.c	FUNCTION_14	CALL_9
0xc94	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       281	quote.c	FUNCTION_14	CALL_9
0xc98	        0x488b75f8	                mov rsi, qword [rbp - 8]	       281	quote.c	FUNCTION_14	CALL_9
0xc9c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       281	quote.c	FUNCTION_14	CALL_9
0xca0	          0x4889d1	                            mov rcx, rdx	       281	quote.c	FUNCTION_14	CALL_9
0xca3	      0xba01000000	                              mov edx, 1	       281	quote.c	FUNCTION_14	CALL_9
0xca8	          0x4889c7	                            mov rdi, rax	       281	quote.c	FUNCTION_14	CALL_9
0xcab	      0xe800000000	                          call 0x4000cf0	       281	quote.c	FUNCTION_14	CALL_9
0xcb0	        0x488b45f8	                mov rax, qword [rbp - 8]	       281	quote.c	FUNCTION_14	CALL_9
0xcb4	        0x480145e8	            add qword [rbp - 0x18], rax 	       281	quote.c	FUNCTION_14	CALL_9
0xcb8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       282	quote.c	FUNCTION_14	IF_5
0xcbc	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       282	quote.c	FUNCTION_14	IF_5
0xcc0	            0x7507	                           jne 0x4000d09	       282	quote.c	FUNCTION_14	IF_5
0xcc2	      0xb800000000	                              mov eax, 0	       283	quote.c	FUNCTION_14	IF_5
0xcc7	            0xeb3f	                           jmp 0x4000d48	       283	quote.c	FUNCTION_14	IF_5
0xcc9	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       285	quote.c	FUNCTION_14	IF_6
0xccd	            0x7535	                           jne 0x4000d44	       285	quote.c	FUNCTION_14	IF_6
0xccf	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       286	quote.c	FUNCTION_14	CALL_10
0xcd4	            0x7411	                            je 0x4000d27	       286	quote.c	FUNCTION_14	CALL_10
0xcd6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       286	quote.c	FUNCTION_14	CALL_10
0xcda	      0xbe22000000	                           mov esi, 0x22	       286	quote.c	FUNCTION_14	CALL_10
0xcdf	          0x4889c7	                            mov rdi, rax	       286	quote.c	FUNCTION_14	CALL_10
0xce2	      0xe83bf4ffff	                   call sym.strbuf_addch	       286	quote.c	FUNCTION_14	CALL_10
0xce7	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       286	quote.c	FUNCTION_14	CALL_10
0xcec	            0x7411	                            je 0x4000d3f	       286	quote.c	FUNCTION_14	CALL_10
0xcee	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       286	quote.c	FUNCTION_14	CALL_10
0xcf2	          0x4889c6	                            mov rsi, rax	       286	quote.c	FUNCTION_14	CALL_10
0xcf5	      0xbf22000000	                           mov edi, 0x22	       286	quote.c	FUNCTION_14	CALL_10
0xcfa	      0xe800000000	                          call 0x4000d3f	       286	quote.c	FUNCTION_14	CALL_10
0xcff	      0x488345e801	               add qword [rbp - 0x18], 1	       286	quote.c	FUNCTION_14	CALL_10
0xd04	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       287	quote.c	FUNCTION_14
0xd08	              0xc9	                                   leave	       288	quote.c	FUNCTION_14
0xd09	              0xc3	                                     ret	       288	quote.c	FUNCTION_14
quote_c_style	FOR,0:functions,0:WHILE,0:IF,0:CALL,1:SWITCH,0:ELSE,0:DO,0	17
0xd0a	              0x55	                                push rbp	       291	quote.c	FUNCTION_15
0xd0b	          0x4889e5	                            mov rbp, rsp	       291	quote.c	FUNCTION_15
0xd0e	        0x4883ec20	                           sub rsp, 0x20	       291	quote.c	FUNCTION_15
0xd12	        0x48897df8	                mov qword [rbp - 8], rdi	       291	quote.c	FUNCTION_15
0xd16	        0x488975f0	             mov qword [rbp - 0x10], rsi	       291	quote.c	FUNCTION_15
0xd1a	        0x488955e8	             mov qword [rbp - 0x18], rdx	       291	quote.c	FUNCTION_15
0xd1e	          0x894de4	             mov dword [rbp - 0x1c], ecx	       291	quote.c	FUNCTION_15
0xd21	          0x8b75e4	             mov esi, dword [rbp - 0x1c]	       292	quote.c	FUNCTION_15	CALL_1
0xd24	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       292	quote.c	FUNCTION_15	CALL_1
0xd28	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       292	quote.c	FUNCTION_15	CALL_1
0xd2c	        0x488b45f8	                mov rax, qword [rbp - 8]	       292	quote.c	FUNCTION_15	CALL_1
0xd30	          0x4189f0	                            mov r8d, esi	       292	quote.c	FUNCTION_15	CALL_1
0xd33	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       292	quote.c	FUNCTION_15	CALL_1
0xd3a	          0x4889c7	                            mov rdi, rax	       292	quote.c	FUNCTION_15	CALL_1
0xd3d	      0xe892fcffff	          call sym.quote_c_style_counted	       292	quote.c	FUNCTION_15	CALL_1
0xd42	              0xc9	                                   leave	       293	quote.c	FUNCTION_15
0xd43	              0xc3	                                     ret	       293	quote.c	FUNCTION_15
sq_dequote	FOR,0:functions,0:WHILE,0:IF,0:CALL,1:SWITCH,0:ELSE,0:DO,0	10
0x715	              0x55	                                push rbp	       147	quote.c	FUNCTION_8
0x716	          0x4889e5	                            mov rbp, rsp	       147	quote.c	FUNCTION_8
0x719	        0x4883ec08	                              sub rsp, 8	       147	quote.c	FUNCTION_8
0x71d	        0x48897df8	                mov qword [rbp - 8], rdi	       147	quote.c	FUNCTION_8
0x721	        0x488b45f8	                mov rax, qword [rbp - 8]	       148	quote.c	FUNCTION_8	CALL_1
0x725	      0xbe00000000	                              mov esi, 0	       148	quote.c	FUNCTION_8	CALL_1
0x72a	          0x4889c7	                            mov rdi, rax	       148	quote.c	FUNCTION_8	CALL_1
0x72d	      0xe87efeffff	                call sym.sq_dequote_step	       148	quote.c	FUNCTION_8	CALL_1
0x732	              0xc9	                                   leave	       149	quote.c	FUNCTION_8
0x733	              0xc3	                                     ret	       149	quote.c	FUNCTION_8
quote_path_relative	FOR,0:functions,0:WHILE,0:IF,0:CALL,5:SWITCH,0:ELSE,0:DO,0	44
0xf16	              0x55	                                push rbp	       335	quote.c	FUNCTION_19
0xf17	          0x4889e5	                            mov rbp, rsp	       335	quote.c	FUNCTION_19
0xf1a	        0x4883ec50	                           sub rsp, 0x50	       335	quote.c	FUNCTION_19
0xf1e	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       335	quote.c	FUNCTION_19
0xf22	        0x488975c0	             mov qword [rbp - 0x40], rsi	       335	quote.c	FUNCTION_19
0xf26	        0x488955b8	             mov qword [rbp - 0x48], rdx	       335	quote.c	FUNCTION_19
0xf2a	    0x64488b042528	                mov rax, qword fs:[0x28]	       335	quote.c	FUNCTION_19
0xf33	        0x488945f8	                mov qword [rbp - 8], rax	       335	quote.c	FUNCTION_19
0xf37	            0x31c0	                            xor eax, eax	       335	quote.c	FUNCTION_19
0xf39	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       336	quote.c	FUNCTION_19
0xf41	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       336	quote.c	FUNCTION_19
0xf49	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       336	quote.c	FUNCTION_19
0xf51	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       337	quote.c	FUNCTION_19	CALL_1
0xf55	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       337	quote.c	FUNCTION_19	CALL_1
0xf59	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       337	quote.c	FUNCTION_19	CALL_1
0xf5d	          0x4889ce	                            mov rsi, rcx	       337	quote.c	FUNCTION_19	CALL_1
0xf60	          0x4889c7	                            mov rdi, rax	       337	quote.c	FUNCTION_19	CALL_1
0xf63	      0xe800000000	                          call 0x4000fa8	       337	quote.c	FUNCTION_19	CALL_1
0xf68	        0x488945d8	             mov qword [rbp - 0x28], rax	       337	quote.c	FUNCTION_19	CALL_1
0xf6c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       338	quote.c	FUNCTION_19	CALL_2
0xf70	      0xbe00000000	                              mov esi, 0	       338	quote.c	FUNCTION_19	CALL_2
0xf75	          0x4889c7	                            mov rdi, rax	       338	quote.c	FUNCTION_19	CALL_2
0xf78	      0xe80bf1ffff	                  call sym.strbuf_setlen	       338	quote.c	FUNCTION_19	CALL_2
0xf7d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       339	quote.c	FUNCTION_19	CALL_4
0xf81	          0x4889c7	                            mov rdi, rax	       339	quote.c	FUNCTION_19	CALL_4
0xf84	      0xe800000000	                          call 0x4000fc9	       339	quote.c	FUNCTION_19	CALL_4
0xf89	          0x4889c6	                            mov rsi, rax	       339	quote.c	FUNCTION_19	CALL_4
0xf8c	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       339	quote.c	FUNCTION_19	CALL_4
0xf90	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       339	quote.c	FUNCTION_19	CALL_4
0xf94	    0x41b800000000	                              mov r8d, 0	       339	quote.c	FUNCTION_19	CALL_4
0xf9a	      0xb900000000	                              mov ecx, 0	       339	quote.c	FUNCTION_19	CALL_4
0xf9f	          0x4889c7	                            mov rdi, rax	       339	quote.c	FUNCTION_19	CALL_4
0xfa2	      0xe82dfaffff	          call sym.quote_c_style_counted	       339	quote.c	FUNCTION_19	CALL_4
0xfa7	        0x488d45e0	                   lea rax, [rbp - 0x20]	       340	quote.c	FUNCTION_19	CALL_5
0xfab	          0x4889c7	                            mov rdi, rax	       340	quote.c	FUNCTION_19	CALL_5
0xfae	      0xe800000000	                          call 0x4000ff3	       340	quote.c	FUNCTION_19	CALL_5
0xfb3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       342	quote.c	FUNCTION_19
0xfb7	        0x488b4010	            mov rax, qword [rax + 0x10] 	       342	quote.c	FUNCTION_19
0xfbb	        0x488b4df8	                mov rcx, qword [rbp - 8]	       343	quote.c	FUNCTION_19
0xfbf	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       343	quote.c	FUNCTION_19
0xfc8	            0x7405	                            je 0x400100f	       343	quote.c	FUNCTION_19
0xfca	      0xe800000000	                          call 0x400100f	       343	quote.c	FUNCTION_19
0xfcf	              0xc9	                                   leave	       343	quote.c	FUNCTION_19
0xfd0	              0xc3	                                     ret	       343	quote.c	FUNCTION_19
st_mult	FOR,0:functions,0:WHILE,0:IF,1:CALL,2:SWITCH,0:ELSE,0:DO,0	22
0x0	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_50
0x1	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_50
0x4	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_50
0x8	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_50
0xc	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_50
0x10	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_50	IF_1	CALL_1
0x15	            0x7430	                            je 0x4000087	       795	git-compat-util.h	FUNCTION_50	IF_1	CALL_1
0x17	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_50	IF_1	CALL_1
0x1e	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_50	IF_1	CALL_1
0x23	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_50	IF_1	CALL_1
0x27	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_50	IF_1	CALL_1
0x2b	            0x731a	                           jae 0x4000087	       795	git-compat-util.h	FUNCTION_50	IF_1	CALL_1
0x2d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_50	IF_1	CALL_2
0x31	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_50	IF_1	CALL_2
0x35	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_50	IF_1	CALL_2
0x38	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_50	IF_1	CALL_2
0x3d	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_50	IF_1	CALL_2
0x42	      0xe800000000	                          call 0x4000087	       796	git-compat-util.h	FUNCTION_50	IF_1	CALL_2
0x47	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_50
0x4b	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_50
0x50	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_50
0x51	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_50
