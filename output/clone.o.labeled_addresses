remove_junk	WHILE,0:ELSE,0:IF,2:DO,0:SWITCH,1:CALL,8:functions,0:FOR,0	64
0x14ef	              0x55	                                push rbp	       495	clone.c	FUNCTION_11
0x14f0	          0x4889e5	                            mov rbp, rsp	       495	clone.c	FUNCTION_11
0x14f3	        0x4883ec20	                           sub rsp, 0x20	       495	clone.c	FUNCTION_11
0x14f7	    0x64488b042528	                mov rax, qword fs:[0x28]	       495	clone.c	FUNCTION_11
0x1500	        0x488945f8	                mov qword [rbp - 8], rax	       495	clone.c	FUNCTION_11
0x1504	            0x31c0	                            xor eax, eax	       495	clone.c	FUNCTION_11
0x1506	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       496	clone.c	FUNCTION_11
0x150e	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       496	clone.c	FUNCTION_11
0x1516	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       496	clone.c	FUNCTION_11
0x151e	    0x8b0500000000	            mov eax, dword [0x04001564] 	       498	clone.c	FUNCTION_11	SWITCH_1
0x1524	          0x83f801	                              cmp eax, 1	       498	clone.c	FUNCTION_11	SWITCH_1
0x1527	            0x7418	                            je 0x4001581	       498	clone.c	FUNCTION_11	SWITCH_1
0x1529	          0x83f802	                              cmp eax, 2	       498	clone.c	FUNCTION_11	SWITCH_1
0x152c	     0xf84af000000	                            je 0x4001621	       498	clone.c	FUNCTION_11	SWITCH_1
0x1532	              0x90	                                     nop	       506	clone.c	FUNCTION_11	SWITCH_1
0x1533	    0x488b05000000	            mov rax, qword [0x0400157a] 	       509	clone.c	FUNCTION_11	IF_1
0x153a	          0x4885c0	                           test rax, rax	       509	clone.c	FUNCTION_11	IF_1
0x153d	            0x745e	                            je 0x40015dd	       509	clone.c	FUNCTION_11	IF_1
0x153f	            0xeb21	                           jmp 0x40015a2	       509	clone.c	FUNCTION_11	IF_1
0x1541	      0xbf00000000	                              mov edi, 0	       500	clone.c	FUNCTION_11	SWITCH_1	CALL_2
0x1546	      0xe8b0edffff	                               call sym.	       500	clone.c	FUNCTION_11	SWITCH_1	CALL_2
0x154b	          0x4889c6	                            mov rsi, rax	       500	clone.c	FUNCTION_11	SWITCH_1	CALL_2
0x154e	      0xbf00000000	                              mov edi, 0	       500	clone.c	FUNCTION_11	SWITCH_1	CALL_2
0x1553	      0xb800000000	                              mov eax, 0	       500	clone.c	FUNCTION_11	SWITCH_1	CALL_2
0x1558	      0xe800000000	                          call 0x400159d	       500	clone.c	FUNCTION_11	SWITCH_1	CALL_2
0x155d	      0xe980000000	                           jmp 0x4001622	       500	clone.c	FUNCTION_11	SWITCH_1	CALL_2
0x1562	    0x488b15000000	            mov rdx, qword [0x040015a9] 	       510	clone.c	FUNCTION_11	IF_1	CALL_3
0x1569	        0x488d45e0	                   lea rax, [rbp - 0x20]	       510	clone.c	FUNCTION_11	IF_1	CALL_3
0x156d	          0x4889d6	                            mov rsi, rdx	       510	clone.c	FUNCTION_11	IF_1	CALL_3
0x1570	          0x4889c7	                            mov rdi, rax	       510	clone.c	FUNCTION_11	IF_1	CALL_3
0x1573	      0xe84eedffff	                  call sym.strbuf_addstr	       510	clone.c	FUNCTION_11	IF_1	CALL_3
0x1578	    0x8b1500000000	            mov edx, dword [0x040015be] 	       511	clone.c	FUNCTION_11	IF_1	CALL_4
0x157e	        0x488d45e0	                   lea rax, [rbp - 0x20]	       511	clone.c	FUNCTION_11	IF_1	CALL_4
0x1582	            0x89d6	                            mov esi, edx	       511	clone.c	FUNCTION_11	IF_1	CALL_4
0x1584	          0x4889c7	                            mov rdi, rax	       511	clone.c	FUNCTION_11	IF_1	CALL_4
0x1587	      0xe800000000	                          call 0x40015cc	       511	clone.c	FUNCTION_11	IF_1	CALL_4
0x158c	        0x488d45e0	                   lea rax, [rbp - 0x20]	       512	clone.c	FUNCTION_11	IF_1	CALL_5
0x1590	      0xbe00000000	                              mov esi, 0	       512	clone.c	FUNCTION_11	IF_1	CALL_5
0x1595	          0x4889c7	                            mov rdi, rax	       512	clone.c	FUNCTION_11	IF_1	CALL_5
0x1598	      0xe821ecffff	                  call sym.strbuf_setlen	       512	clone.c	FUNCTION_11	IF_1	CALL_5
0x159d	    0x488b05000000	            mov rax, qword [0x040015e4] 	       514	clone.c	FUNCTION_11	IF_2
0x15a4	          0x4885c0	                           test rax, rax	       514	clone.c	FUNCTION_11	IF_2
0x15a7	            0x742a	                            je 0x4001613	       514	clone.c	FUNCTION_11	IF_2
0x15a9	    0x488b15000000	            mov rdx, qword [0x040015f0] 	       515	clone.c	FUNCTION_11	IF_2	CALL_6
0x15b0	        0x488d45e0	                   lea rax, [rbp - 0x20]	       515	clone.c	FUNCTION_11	IF_2	CALL_6
0x15b4	          0x4889d6	                            mov rsi, rdx	       515	clone.c	FUNCTION_11	IF_2	CALL_6
0x15b7	          0x4889c7	                            mov rdi, rax	       515	clone.c	FUNCTION_11	IF_2	CALL_6
0x15ba	      0xe807edffff	                  call sym.strbuf_addstr	       515	clone.c	FUNCTION_11	IF_2	CALL_6
0x15bf	    0x8b1500000000	            mov edx, dword [0x04001605] 	       516	clone.c	FUNCTION_11	IF_2	CALL_7
0x15c5	        0x488d45e0	                   lea rax, [rbp - 0x20]	       516	clone.c	FUNCTION_11	IF_2	CALL_7
0x15c9	            0x89d6	                            mov esi, edx	       516	clone.c	FUNCTION_11	IF_2	CALL_7
0x15cb	          0x4889c7	                            mov rdi, rax	       516	clone.c	FUNCTION_11	IF_2	CALL_7
0x15ce	      0xe800000000	                          call 0x4001613	       516	clone.c	FUNCTION_11	IF_2	CALL_7
0x15d3	        0x488d45e0	                   lea rax, [rbp - 0x20]	       518	clone.c	FUNCTION_11	CALL_8
0x15d7	          0x4889c7	                            mov rdi, rax	       518	clone.c	FUNCTION_11	CALL_8
0x15da	      0xe800000000	                          call 0x400161f	       518	clone.c	FUNCTION_11	CALL_8
0x15df	            0xeb01	                           jmp 0x4001622	       518	clone.c	FUNCTION_11	CALL_8
0x15e1	              0x90	                                     nop	       503	clone.c	FUNCTION_11	SWITCH_1
0x15e2	        0x488b45f8	                mov rax, qword [rbp - 8]	       519	clone.c	FUNCTION_11
0x15e6	    0x644833042528	                xor rax, qword fs:[0x28]	       519	clone.c	FUNCTION_11
0x15ef	            0x7405	                            je 0x4001636	       519	clone.c	FUNCTION_11
0x15f1	      0xe800000000	                          call 0x4001636	       519	clone.c	FUNCTION_11
0x15f6	              0xc9	                                   leave	       519	clone.c	FUNCTION_11
0x15f7	              0xc3	                                     ret	       519	clone.c	FUNCTION_11
git_is_dir_sep	WHILE,0:ELSE,0:IF,0:DO,0:SWITCH,0:CALL,0:functions,0:FOR,0	8
0xf	              0x55	                                push rbp	       363	git-compat-util.h	FUNCTION_29
0x10	          0x4889e5	                            mov rbp, rsp	       363	git-compat-util.h	FUNCTION_29
0x13	          0x897dfc	                mov dword [rbp - 4], edi	       363	git-compat-util.h	FUNCTION_29
0x16	        0x837dfc2f	               cmp dword [rbp - 4], 0x2f	       364	git-compat-util.h	FUNCTION_29
0x1a	           0xf94c0	                                 sete al	       364	git-compat-util.h	FUNCTION_29
0x1d	           0xfb6c0	                           movzx eax, al	       364	git-compat-util.h	FUNCTION_29
0x20	              0x5d	                                 pop rbp	       365	git-compat-util.h	FUNCTION_29
0x21	              0xc3	                                     ret	       365	git-compat-util.h	FUNCTION_29
_	WHILE,0:ELSE,0:IF,1:DO,0:SWITCH,0:CALL,2:functions,0:FOR,0	15
0x2fb	              0x55	                                push rbp	        51	gettext.h	FUNCTION_56
0x2fc	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_56
0x2ff	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_56
0x303	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_56
0x307	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_56	IF_1
0x30b	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_56	IF_1
0x30e	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_56	IF_1
0x310	            0x7507	                           jne 0x4000359	        52	gettext.h	FUNCTION_56	IF_1
0x312	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_56	IF_1
0x317	            0xeb0c	                           jmp 0x4000365	        53	gettext.h	FUNCTION_56	IF_1
0x319	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_56	CALL_2
0x31d	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_56	CALL_2
0x320	      0xe800000000	                          call 0x4000365	        54	gettext.h	FUNCTION_56	CALL_2
0x325	              0xc9	                                   leave	        55	gettext.h	FUNCTION_56
0x326	              0xc3	                                     ret	        55	gettext.h	FUNCTION_56
update_remote_refs	WHILE,0:ELSE,0:IF,6:DO,0:SWITCH,0:CALL,11:functions,0:FOR,0	104
0x1b18	              0x55	                                push rbp	       652	clone.c	FUNCTION_18
0x1b19	          0x4889e5	                            mov rbp, rsp	       652	clone.c	FUNCTION_18
0x1b1c	              0x53	                                push rbx	       652	clone.c	FUNCTION_18
0x1b1d	        0x4883ec78	                           sub rsp, 0x78	       652	clone.c	FUNCTION_18
0x1b21	        0x48897da8	             mov qword [rbp - 0x58], rdi	       652	clone.c	FUNCTION_18
0x1b25	        0x488975a0	             mov qword [rbp - 0x60], rsi	       652	clone.c	FUNCTION_18
0x1b29	        0x48895598	             mov qword [rbp - 0x68], rdx	       652	clone.c	FUNCTION_18
0x1b2d	        0x48894d90	             mov qword [rbp - 0x70], rcx	       652	clone.c	FUNCTION_18
0x1b31	        0x4c894588	              mov qword [rbp - 0x78], r8	       652	clone.c	FUNCTION_18
0x1b35	        0x4c894d80	              mov qword [rbp - 0x80], r9	       652	clone.c	FUNCTION_18
0x1b39	    0x64488b042528	                mov rax, qword fs:[0x28]	       652	clone.c	FUNCTION_18
0x1b42	        0x488945e8	             mov qword [rbp - 0x18], rax	       652	clone.c	FUNCTION_18
0x1b46	            0x31c0	                            xor eax, eax	       652	clone.c	FUNCTION_18
0x1b48	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       653	clone.c	FUNCTION_18
0x1b4c	        0x488945b8	             mov qword [rbp - 0x48], rax	       653	clone.c	FUNCTION_18
0x1b50	        0x837d1000	               cmp dword [rbp + 0x10], 0	       655	clone.c	FUNCTION_18	IF_1
0x1b54	            0x7474	                            je 0x4001c0a	       655	clone.c	FUNCTION_18	IF_1
0x1b56	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       656	clone.c	FUNCTION_18	IF_1
0x1b5e	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       656	clone.c	FUNCTION_18	IF_1
0x1b66	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       656	clone.c	FUNCTION_18	IF_1
0x1b6e	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       656	clone.c	FUNCTION_18	IF_1
0x1b76	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       656	clone.c	FUNCTION_18	IF_1
0x1b7e	        0x488b4580	             mov rax, qword [rbp - 0x80]	       658	clone.c	FUNCTION_18	IF_1
0x1b82	        0x488945d0	             mov qword [rbp - 0x30], rax	       658	clone.c	FUNCTION_18	IF_1
0x1b86	        0x488b4580	             mov rax, qword [rbp - 0x80]	       659	clone.c	FUNCTION_18	IF_1
0x1b8a	         0xfb64048	           movzx eax, byte [rax + 0x48] 	       659	clone.c	FUNCTION_18	IF_1
0x1b8e	          0xc0e803	                               shr al, 3	       659	clone.c	FUNCTION_18	IF_1
0x1b91	          0x83e001	                              and eax, 1	       659	clone.c	FUNCTION_18	IF_1
0x1b94	           0xfb6c0	                           movzx eax, al	       659	clone.c	FUNCTION_18	IF_1
0x1b97	          0x8945dc	             mov dword [rbp - 0x24], eax	       659	clone.c	FUNCTION_18	IF_1
0x1b9a	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       661	clone.c	FUNCTION_18	IF_1	IF_2	CALL_1
0x1b9e	        0x488d45b8	                   lea rax, [rbp - 0x48]	       661	clone.c	FUNCTION_18	IF_1	IF_2	CALL_1
0x1ba2	          0x4889c6	                            mov rsi, rax	       661	clone.c	FUNCTION_18	IF_1	IF_2	CALL_1
0x1ba5	      0xbf00000000	                              mov edi, 0	       661	clone.c	FUNCTION_18	IF_1	IF_2	CALL_1
0x1baa	      0xe800000000	                          call 0x4001bef	       661	clone.c	FUNCTION_18	IF_1	IF_2	CALL_1
0x1baf	            0x85c0	                           test eax, eax	       661	clone.c	FUNCTION_18	IF_1	IF_2	CALL_1
0x1bb1	            0x7417	                            je 0x4001c0a	       661	clone.c	FUNCTION_18	IF_1	IF_2	CALL_1
0x1bb3	      0xbf00000000	                              mov edi, 0	       662	clone.c	FUNCTION_18	IF_1	CALL_3
0x1bb8	      0xe83ee7ffff	                               call sym.	       662	clone.c	FUNCTION_18	IF_1	CALL_3
0x1bbd	          0x4889c7	                            mov rdi, rax	       662	clone.c	FUNCTION_18	IF_1	CALL_3
0x1bc0	      0xb800000000	                              mov eax, 0	       662	clone.c	FUNCTION_18	IF_1	CALL_3
0x1bc5	      0xe800000000	                          call 0x4001c0a	       662	clone.c	FUNCTION_18	IF_1	CALL_3
0x1bca	      0x48837da800	               cmp qword [rbp - 0x58], 0	       665	clone.c	FUNCTION_18	IF_3
0x1bcf	            0x7433	                            je 0x4001c44	       665	clone.c	FUNCTION_18	IF_3
0x1bd1	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       666	clone.c	FUNCTION_18	IF_3	CALL_4
0x1bd5	          0x4889c7	                            mov rdi, rax	       666	clone.c	FUNCTION_18	IF_3	CALL_4
0x1bd8	      0xe8d9fcffff	              call sym.write_remote_refs	       666	clone.c	FUNCTION_18	IF_3	CALL_4
0x1bdd	    0x8b0500000000	            mov eax, dword [0x04001c23] 	       667	clone.c	FUNCTION_18	IF_3	IF_4
0x1be3	            0x85c0	                           test eax, eax	       667	clone.c	FUNCTION_18	IF_3	IF_4
0x1be5	            0x741d	                            je 0x4001c44	       667	clone.c	FUNCTION_18	IF_3	IF_4
0x1be7	    0x8b0500000000	            mov eax, dword [0x04001c2d] 	       667	clone.c	FUNCTION_18	IF_3	IF_4
0x1bed	            0x85c0	                           test eax, eax	       667	clone.c	FUNCTION_18	IF_3	IF_4
0x1bef	            0x7513	                           jne 0x4001c44	       667	clone.c	FUNCTION_18	IF_3	IF_4
0x1bf1	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       668	clone.c	FUNCTION_18	IF_3	CALL_5
0x1bf5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       668	clone.c	FUNCTION_18	IF_3	CALL_5
0x1bf9	          0x4889d6	                            mov rsi, rdx	       668	clone.c	FUNCTION_18	IF_3	CALL_5
0x1bfc	          0x4889c7	                            mov rdi, rax	       668	clone.c	FUNCTION_18	IF_3	CALL_5
0x1bff	      0xe8e4fdffff	               call sym.write_followtags	       668	clone.c	FUNCTION_18	IF_3	CALL_5
0x1c04	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       671	clone.c	FUNCTION_18	IF_5
0x1c09	     0xf8497000000	                            je 0x4001ce6	       671	clone.c	FUNCTION_18	IF_5
0x1c0f	    0x8b0500000000	            mov eax, dword [0x04001c55] 	       671	clone.c	FUNCTION_18	IF_5
0x1c15	            0x85c0	                           test eax, eax	       671	clone.c	FUNCTION_18	IF_5
0x1c17	     0xf8589000000	                           jne 0x4001ce6	       671	clone.c	FUNCTION_18	IF_5
0x1c1d	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       672	clone.c	FUNCTION_18	IF_5
0x1c25	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       672	clone.c	FUNCTION_18	IF_5
0x1c2d	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       672	clone.c	FUNCTION_18	IF_5
0x1c35	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       673	clone.c	FUNCTION_18	IF_5	CALL_6
0x1c39	        0x488d45c0	                   lea rax, [rbp - 0x40]	       673	clone.c	FUNCTION_18	IF_5	CALL_6
0x1c3d	          0x4889d6	                            mov rsi, rdx	       673	clone.c	FUNCTION_18	IF_5	CALL_6
0x1c40	          0x4889c7	                            mov rdi, rax	       673	clone.c	FUNCTION_18	IF_5	CALL_6
0x1c43	      0xe87ee6ffff	                  call sym.strbuf_addstr	       673	clone.c	FUNCTION_18	IF_5	CALL_6
0x1c48	        0x488d45c0	                   lea rax, [rbp - 0x40]	       674	clone.c	FUNCTION_18	IF_5	CALL_7
0x1c4c	      0xbe00000000	                              mov esi, 0	       674	clone.c	FUNCTION_18	IF_5	CALL_7
0x1c51	          0x4889c7	                            mov rdi, rax	       674	clone.c	FUNCTION_18	IF_5	CALL_7
0x1c54	      0xe86de6ffff	                  call sym.strbuf_addstr	       674	clone.c	FUNCTION_18	IF_5	CALL_7
0x1c59	        0x488b4598	             mov rax, qword [rbp - 0x68]	       676	clone.c	FUNCTION_18	IF_5	IF_6
0x1c5d	        0x488b4068	            mov rax, qword [rax + 0x68] 	       676	clone.c	FUNCTION_18	IF_5	IF_6
0x1c61	        0x488d4870	                   lea rcx, [rax + 0x70]	       676	clone.c	FUNCTION_18	IF_5	IF_6
0x1c65	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       675	clone.c	FUNCTION_18	IF_5	IF_6	CALL_8
0x1c69	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       675	clone.c	FUNCTION_18	IF_5	IF_6	CALL_8
0x1c6d	          0x4889ce	                            mov rsi, rcx	       675	clone.c	FUNCTION_18	IF_5	IF_6	CALL_8
0x1c70	          0x4889c7	                            mov rdi, rax	       675	clone.c	FUNCTION_18	IF_5	IF_6	CALL_8
0x1c73	      0xe800000000	                          call 0x4001cb8	       675	clone.c	FUNCTION_18	IF_5	IF_6	CALL_8
0x1c78	            0x85c0	                           test eax, eax	       675	clone.c	FUNCTION_18	IF_5	IF_6	CALL_8
0x1c7a	            0x791e	                           jns 0x4001cda	       675	clone.c	FUNCTION_18	IF_5	IF_6	CALL_8
0x1c7c	        0x488b5dd0	             mov rbx, qword [rbp - 0x30]	       678	clone.c	FUNCTION_18	IF_5	CALL_10
0x1c80	      0xbf00000000	                              mov edi, 0	       678	clone.c	FUNCTION_18	IF_5	CALL_10
0x1c85	      0xe871e6ffff	                               call sym.	       678	clone.c	FUNCTION_18	IF_5	CALL_10
0x1c8a	          0x4889de	                            mov rsi, rbx	       678	clone.c	FUNCTION_18	IF_5	CALL_10
0x1c8d	          0x4889c7	                            mov rdi, rax	       678	clone.c	FUNCTION_18	IF_5	CALL_10
0x1c90	      0xb800000000	                              mov eax, 0	       678	clone.c	FUNCTION_18	IF_5	CALL_10
0x1c95	      0xe800000000	                          call 0x4001cda	       678	clone.c	FUNCTION_18	IF_5	CALL_10
0x1c9a	        0x488d45c0	                   lea rax, [rbp - 0x40]	       679	clone.c	FUNCTION_18	IF_5	CALL_11
0x1c9e	          0x4889c7	                            mov rdi, rax	       679	clone.c	FUNCTION_18	IF_5	CALL_11
0x1ca1	      0xe800000000	                          call 0x4001ce6	       679	clone.c	FUNCTION_18	IF_5	CALL_11
0x1ca6	              0x90	                                     nop	       681	clone.c	FUNCTION_18
0x1ca7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       681	clone.c	FUNCTION_18
0x1cab	    0x644833042528	                xor rax, qword fs:[0x28]	       681	clone.c	FUNCTION_18
0x1cb4	            0x7405	                            je 0x4001cfb	       681	clone.c	FUNCTION_18
0x1cb6	      0xe800000000	                          call 0x4001cfb	       681	clone.c	FUNCTION_18
0x1cbb	        0x4883c478	                           add rsp, 0x78	       681	clone.c	FUNCTION_18
0x1cbf	              0x5b	                                 pop rbx	       681	clone.c	FUNCTION_18
0x1cc0	              0x5d	                                 pop rbp	       681	clone.c	FUNCTION_18
0x1cc1	              0xc3	                                     ret	       681	clone.c	FUNCTION_18
find_remote_branch	WHILE,0:ELSE,0:IF,1:DO,0:SWITCH,0:CALL,8:functions,0:FOR,0	58
0x161f	              0x55	                                push rbp	       529	clone.c	FUNCTION_13
0x1620	          0x4889e5	                            mov rbp, rsp	       529	clone.c	FUNCTION_13
0x1623	        0x4883ec40	                           sub rsp, 0x40	       529	clone.c	FUNCTION_13
0x1627	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       529	clone.c	FUNCTION_13
0x162b	        0x488975c0	             mov qword [rbp - 0x40], rsi	       529	clone.c	FUNCTION_13
0x162f	    0x64488b042528	                mov rax, qword fs:[0x28]	       529	clone.c	FUNCTION_13
0x1638	        0x488945f8	                mov qword [rbp - 8], rax	       529	clone.c	FUNCTION_13
0x163c	            0x31c0	                            xor eax, eax	       529	clone.c	FUNCTION_13
0x163e	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       531	clone.c	FUNCTION_13
0x1646	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       531	clone.c	FUNCTION_13
0x164e	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       531	clone.c	FUNCTION_13
0x1656	        0x488d45e0	                   lea rax, [rbp - 0x20]	       532	clone.c	FUNCTION_13	CALL_1
0x165a	      0xbe00000000	                              mov esi, 0	       532	clone.c	FUNCTION_13	CALL_1
0x165f	          0x4889c7	                            mov rdi, rax	       532	clone.c	FUNCTION_13	CALL_1
0x1662	      0xe85fecffff	                  call sym.strbuf_addstr	       532	clone.c	FUNCTION_13	CALL_1
0x1667	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       533	clone.c	FUNCTION_13	CALL_2
0x166b	        0x488d45e0	                   lea rax, [rbp - 0x20]	       533	clone.c	FUNCTION_13	CALL_2
0x166f	          0x4889d6	                            mov rsi, rdx	       533	clone.c	FUNCTION_13	CALL_2
0x1672	          0x4889c7	                            mov rdi, rax	       533	clone.c	FUNCTION_13	CALL_2
0x1675	      0xe84cecffff	                  call sym.strbuf_addstr	       533	clone.c	FUNCTION_13	CALL_2
0x167a	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       534	clone.c	FUNCTION_13	CALL_3
0x167e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       534	clone.c	FUNCTION_13	CALL_3
0x1682	          0x4889d6	                            mov rsi, rdx	       534	clone.c	FUNCTION_13	CALL_3
0x1685	          0x4889c7	                            mov rdi, rax	       534	clone.c	FUNCTION_13	CALL_3
0x1688	      0xe800000000	                          call 0x40016cd	       534	clone.c	FUNCTION_13	CALL_3
0x168d	        0x488945d8	             mov qword [rbp - 0x28], rax	       534	clone.c	FUNCTION_13	CALL_3
0x1691	        0x488d45e0	                   lea rax, [rbp - 0x20]	       535	clone.c	FUNCTION_13	CALL_4
0x1695	          0x4889c7	                            mov rdi, rax	       535	clone.c	FUNCTION_13	CALL_4
0x1698	      0xe800000000	                          call 0x40016dd	       535	clone.c	FUNCTION_13	CALL_4
0x169d	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       537	clone.c	FUNCTION_13	IF_1
0x16a2	            0x7406	                            je 0x40016ea	       537	clone.c	FUNCTION_13	IF_1
0x16a4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       538	clone.c	FUNCTION_13	IF_1
0x16a8	            0xeb4b	                           jmp 0x4001735	       538	clone.c	FUNCTION_13	IF_1
0x16aa	        0x488d45e0	                   lea rax, [rbp - 0x20]	       540	clone.c	FUNCTION_13	CALL_5
0x16ae	      0xbe00000000	                              mov esi, 0	       540	clone.c	FUNCTION_13	CALL_5
0x16b3	          0x4889c7	                            mov rdi, rax	       540	clone.c	FUNCTION_13	CALL_5
0x16b6	      0xe80becffff	                  call sym.strbuf_addstr	       540	clone.c	FUNCTION_13	CALL_5
0x16bb	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       541	clone.c	FUNCTION_13	CALL_6
0x16bf	        0x488d45e0	                   lea rax, [rbp - 0x20]	       541	clone.c	FUNCTION_13	CALL_6
0x16c3	          0x4889d6	                            mov rsi, rdx	       541	clone.c	FUNCTION_13	CALL_6
0x16c6	          0x4889c7	                            mov rdi, rax	       541	clone.c	FUNCTION_13	CALL_6
0x16c9	      0xe8f8ebffff	                  call sym.strbuf_addstr	       541	clone.c	FUNCTION_13	CALL_6
0x16ce	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       542	clone.c	FUNCTION_13	CALL_7
0x16d2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       542	clone.c	FUNCTION_13	CALL_7
0x16d6	          0x4889d6	                            mov rsi, rdx	       542	clone.c	FUNCTION_13	CALL_7
0x16d9	          0x4889c7	                            mov rdi, rax	       542	clone.c	FUNCTION_13	CALL_7
0x16dc	      0xe800000000	                          call 0x4001721	       542	clone.c	FUNCTION_13	CALL_7
0x16e1	        0x488945d8	             mov qword [rbp - 0x28], rax	       542	clone.c	FUNCTION_13	CALL_7
0x16e5	        0x488d45e0	                   lea rax, [rbp - 0x20]	       543	clone.c	FUNCTION_13	CALL_8
0x16e9	          0x4889c7	                            mov rdi, rax	       543	clone.c	FUNCTION_13	CALL_8
0x16ec	      0xe800000000	                          call 0x4001731	       543	clone.c	FUNCTION_13	CALL_8
0x16f1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       545	clone.c	FUNCTION_13
0x16f5	        0x488b4df8	                mov rcx, qword [rbp - 8]	       546	clone.c	FUNCTION_13
0x16f9	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       546	clone.c	FUNCTION_13
0x1702	            0x7405	                            je 0x4001749	       546	clone.c	FUNCTION_13
0x1704	      0xe800000000	                          call 0x4001749	       546	clone.c	FUNCTION_13
0x1709	              0xc9	                                   leave	       546	clone.c	FUNCTION_13
0x170a	              0xc3	                                     ret	       546	clone.c	FUNCTION_13
strbuf_addstr	WHILE,0:ELSE,0:IF,0:DO,0:SWITCH,0:CALL,2:functions,0:FOR,0	17
0x2c6	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_62
0x2c7	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_62
0x2ca	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_62
0x2ce	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_62
0x2d2	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_62
0x2d6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_62	CALL_2
0x2da	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_62	CALL_2
0x2dd	      0xe800000000	                          call 0x4000322	       279	strbuf.h	FUNCTION_62	CALL_2
0x2e2	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_62	CALL_2
0x2e5	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_62	CALL_2
0x2e9	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_62	CALL_2
0x2ed	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_62	CALL_2
0x2f0	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_62	CALL_2
0x2f3	      0xe800000000	                          call 0x4000338	       279	strbuf.h	FUNCTION_62	CALL_2
0x2f8	              0x90	                                     nop	       280	strbuf.h	FUNCTION_62
0x2f9	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_62
0x2fa	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_62
strip_suffix_mem	WHILE,0:ELSE,0:IF,1:DO,0:SWITCH,0:CALL,2:functions,0:FOR,0	38
0x78	              0x55	                                push rbp	       538	git-compat-util.h	FUNCTION_36
0x79	          0x4889e5	                            mov rbp, rsp	       538	git-compat-util.h	FUNCTION_36
0x7c	        0x4883ec30	                           sub rsp, 0x30	       538	git-compat-util.h	FUNCTION_36
0x80	        0x48897de8	             mov qword [rbp - 0x18], rdi	       538	git-compat-util.h	FUNCTION_36
0x84	        0x488975e0	             mov qword [rbp - 0x20], rsi	       538	git-compat-util.h	FUNCTION_36
0x88	        0x488955d8	             mov qword [rbp - 0x28], rdx	       538	git-compat-util.h	FUNCTION_36
0x8c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       539	git-compat-util.h	FUNCTION_36	CALL_1
0x90	          0x4889c7	                            mov rdi, rax	       539	git-compat-util.h	FUNCTION_36	CALL_1
0x93	      0xe800000000	                          call 0x40000d8	       539	git-compat-util.h	FUNCTION_36	CALL_1
0x98	        0x488945f8	                mov qword [rbp - 8], rax	       539	git-compat-util.h	FUNCTION_36	CALL_1
0x9c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       540	git-compat-util.h	FUNCTION_36	IF_1	CALL_2
0xa0	          0x488b00	                    mov rax, qword [rax]	       540	git-compat-util.h	FUNCTION_36	IF_1	CALL_2
0xa3	        0x483b45f8	                cmp rax, qword [rbp - 8]	       540	git-compat-util.h	FUNCTION_36	IF_1	CALL_2
0xa7	            0x722d	                            jb 0x4000116	       540	git-compat-util.h	FUNCTION_36	IF_1	CALL_2
0xa9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       540	git-compat-util.h	FUNCTION_36	IF_1	CALL_2
0xad	          0x488b00	                    mov rax, qword [rax]	       540	git-compat-util.h	FUNCTION_36	IF_1	CALL_2
0xb0	        0x482b45f8	                sub rax, qword [rbp - 8]	       540	git-compat-util.h	FUNCTION_36	IF_1	CALL_2
0xb4	          0x4889c2	                            mov rdx, rax	       540	git-compat-util.h	FUNCTION_36	IF_1	CALL_2
0xb7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       540	git-compat-util.h	FUNCTION_36	IF_1	CALL_2
0xbb	        0x488d0c02	                    lea rcx, [rdx + rax]	       540	git-compat-util.h	FUNCTION_36	IF_1	CALL_2
0xbf	        0x488b55f8	                mov rdx, qword [rbp - 8]	       540	git-compat-util.h	FUNCTION_36	IF_1	CALL_2
0xc3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       540	git-compat-util.h	FUNCTION_36	IF_1	CALL_2
0xc7	          0x4889c6	                            mov rsi, rax	       540	git-compat-util.h	FUNCTION_36	IF_1	CALL_2
0xca	          0x4889cf	                            mov rdi, rcx	       540	git-compat-util.h	FUNCTION_36	IF_1	CALL_2
0xcd	      0xe800000000	                          call 0x4000112	       540	git-compat-util.h	FUNCTION_36	IF_1	CALL_2
0xd2	            0x85c0	                           test eax, eax	       540	git-compat-util.h	FUNCTION_36	IF_1	CALL_2
0xd4	            0x7407	                            je 0x400011d	       540	git-compat-util.h	FUNCTION_36	IF_1	CALL_2
0xd6	      0xb800000000	                              mov eax, 0	       541	git-compat-util.h	FUNCTION_36	IF_1
0xdb	            0xeb1a	                           jmp 0x4000137	       541	git-compat-util.h	FUNCTION_36	IF_1
0xdd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       542	git-compat-util.h	FUNCTION_36
0xe1	          0x488b00	                    mov rax, qword [rax]	       542	git-compat-util.h	FUNCTION_36
0xe4	        0x482b45f8	                sub rax, qword [rbp - 8]	       542	git-compat-util.h	FUNCTION_36
0xe8	          0x4889c2	                            mov rdx, rax	       542	git-compat-util.h	FUNCTION_36
0xeb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       542	git-compat-util.h	FUNCTION_36
0xef	          0x488910	                    mov qword [rax], rdx	       542	git-compat-util.h	FUNCTION_36
0xf2	      0xb801000000	                              mov eax, 1	       543	git-compat-util.h	FUNCTION_36
0xf7	              0xc9	                                   leave	       544	git-compat-util.h	FUNCTION_36
0xf8	              0xc3	                                     ret	       544	git-compat-util.h	FUNCTION_36
remove_junk_on_signal	WHILE,0:ELSE,0:IF,0:DO,0:SWITCH,0:CALL,3:functions,0:FOR,0	14
0x15f8	              0x55	                                push rbp	       522	clone.c	FUNCTION_12
0x15f9	          0x4889e5	                            mov rbp, rsp	       522	clone.c	FUNCTION_12
0x15fc	        0x4883ec10	                           sub rsp, 0x10	       522	clone.c	FUNCTION_12
0x1600	          0x897dfc	                mov dword [rbp - 4], edi	       522	clone.c	FUNCTION_12
0x1603	      0xe8e7feffff	                    call sym.remove_junk	       523	clone.c	FUNCTION_12	CALL_1
0x1608	          0x8b45fc	                mov eax, dword [rbp - 4]	       524	clone.c	FUNCTION_12	CALL_2
0x160b	            0x89c7	                            mov edi, eax	       524	clone.c	FUNCTION_12	CALL_2
0x160d	      0xe800000000	                          call 0x4001652	       524	clone.c	FUNCTION_12	CALL_2
0x1612	          0x8b45fc	                mov eax, dword [rbp - 4]	       525	clone.c	FUNCTION_12	CALL_3
0x1615	            0x89c7	                            mov edi, eax	       525	clone.c	FUNCTION_12	CALL_3
0x1617	      0xe800000000	                          call 0x400165c	       525	clone.c	FUNCTION_12	CALL_3
0x161c	              0x90	                                     nop	       526	clone.c	FUNCTION_12
0x161d	              0xc9	                                   leave	       526	clone.c	FUNCTION_12
0x161e	              0xc3	                                     ret	       526	clone.c	FUNCTION_12
get_repo_path	WHILE,0:ELSE,0:IF,0:DO,0:SWITCH,0:CALL,4:functions,0:FOR,0	40
0x755	              0x55	                                push rbp	       193	clone.c	IF_9	FUNCTION_3
0x756	          0x4889e5	                            mov rbp, rsp	       193	clone.c	IF_9	FUNCTION_3
0x759	        0x4883ec40	                           sub rsp, 0x40	       193	clone.c	IF_9	FUNCTION_3
0x75d	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       193	clone.c	IF_9	FUNCTION_3
0x761	        0x488975c0	             mov qword [rbp - 0x40], rsi	       193	clone.c	IF_9	FUNCTION_3
0x765	    0x64488b042528	                mov rax, qword fs:[0x28]	       193	clone.c	IF_9	FUNCTION_3
0x76e	        0x488945f8	                mov qword [rbp - 8], rax	       193	clone.c	IF_9	FUNCTION_3
0x772	            0x31c0	                            xor eax, eax	       193	clone.c	IF_9	FUNCTION_3
0x774	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       194	clone.c	IF_9	FUNCTION_3
0x77c	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       194	clone.c	IF_9	FUNCTION_3
0x784	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       194	clone.c	IF_9	FUNCTION_3
0x78c	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       198	clone.c	IF_9	FUNCTION_3	CALL_1
0x790	        0x488d45e0	                   lea rax, [rbp - 0x20]	       198	clone.c	IF_9	FUNCTION_3	CALL_1
0x794	          0x4889d6	                            mov rsi, rdx	       198	clone.c	IF_9	FUNCTION_3	CALL_1
0x797	          0x4889c7	                            mov rdi, rax	       198	clone.c	IF_9	FUNCTION_3	CALL_1
0x79a	      0xe827fbffff	                  call sym.strbuf_addstr	       198	clone.c	IF_9	FUNCTION_3	CALL_1
0x79f	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       199	clone.c	IF_9	FUNCTION_3	CALL_2
0x7a3	        0x488d45e0	                   lea rax, [rbp - 0x20]	       199	clone.c	IF_9	FUNCTION_3	CALL_2
0x7a7	          0x4889d6	                            mov rsi, rdx	       199	clone.c	IF_9	FUNCTION_3	CALL_2
0x7aa	          0x4889c7	                            mov rdi, rax	       199	clone.c	IF_9	FUNCTION_3	CALL_2
0x7ad	      0xe8eafcffff	                call sym.get_repo_path_1	       199	clone.c	IF_9	FUNCTION_3	CALL_2
0x7b2	        0x488945d0	             mov qword [rbp - 0x30], rax	       199	clone.c	IF_9	FUNCTION_3	CALL_2
0x7b6	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       200	clone.c	IF_9	FUNCTION_3	CALL_3
0x7bb	            0x740e	                            je 0x400080b	       200	clone.c	IF_9	FUNCTION_3	CALL_3
0x7bd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       200	clone.c	IF_9	FUNCTION_3	CALL_3
0x7c1	          0x4889c7	                            mov rdi, rax	       200	clone.c	IF_9	FUNCTION_3	CALL_3
0x7c4	      0xe800000000	                          call 0x4000809	       200	clone.c	IF_9	FUNCTION_3	CALL_3
0x7c9	            0xeb05	                           jmp 0x4000810	       200	clone.c	IF_9	FUNCTION_3	CALL_3
0x7cb	      0xb800000000	                              mov eax, 0	       200	clone.c	IF_9	FUNCTION_3	CALL_3
0x7d0	        0x488945d8	             mov qword [rbp - 0x28], rax	       200	clone.c	IF_9	FUNCTION_3	CALL_3
0x7d4	        0x488d45e0	                   lea rax, [rbp - 0x20]	       201	clone.c	IF_9	FUNCTION_3	CALL_4
0x7d8	          0x4889c7	                            mov rdi, rax	       201	clone.c	IF_9	FUNCTION_3	CALL_4
0x7db	      0xe800000000	                          call 0x4000820	       201	clone.c	IF_9	FUNCTION_3	CALL_4
0x7e0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       202	clone.c	IF_9	FUNCTION_3
0x7e4	        0x488b4df8	                mov rcx, qword [rbp - 8]	       203	clone.c	IF_9	FUNCTION_3
0x7e8	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       203	clone.c	IF_9	FUNCTION_3
0x7f1	            0x7405	                            je 0x4000838	       203	clone.c	IF_9	FUNCTION_3
0x7f3	      0xe800000000	                          call 0x4000838	       203	clone.c	IF_9	FUNCTION_3
0x7f8	              0xc9	                                   leave	       203	clone.c	IF_9	FUNCTION_3
0x7f9	              0xc3	                                     ret	       203	clone.c	IF_9	FUNCTION_3
write_followtags	WHILE,0:ELSE,0:IF,3:DO,0:SWITCH,0:CALL,4:functions,0:FOR,1	52
0x19e8	              0x55	                                push rbp	       611	clone.c	FUNCTION_16
0x19e9	          0x4889e5	                            mov rbp, rsp	       611	clone.c	FUNCTION_16
0x19ec	        0x4883ec20	                           sub rsp, 0x20	       611	clone.c	FUNCTION_16
0x19f0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       611	clone.c	FUNCTION_16
0x19f4	        0x488975e0	             mov qword [rbp - 0x20], rsi	       611	clone.c	FUNCTION_16
0x19f8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       613	clone.c	FUNCTION_16	FOR_1
0x19fc	        0x488945f8	                mov qword [rbp - 8], rax	       613	clone.c	FUNCTION_16	FOR_1
0x1a00	      0xe987000000	                           jmp 0x4001acc	       613	clone.c	FUNCTION_16	FOR_1
0x1a05	        0x488b45f8	                mov rax, qword [rbp - 8]	       614	clone.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0x1a09	        0x4883c070	                           add rax, 0x70	       614	clone.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0x1a0d	      0xbe00000000	                              mov esi, 0	       614	clone.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0x1a12	          0x4889c7	                            mov rdi, rax	       614	clone.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0x1a15	      0xe800000000	                          call 0x4001a5a	       614	clone.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0x1a1a	            0x85c0	                           test eax, eax	       614	clone.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0x1a1c	            0x745c	                            je 0x4001aba	       614	clone.c	FUNCTION_16	FOR_1	IF_1	CALL_1
0x1a1e	        0x488b45f8	                mov rax, qword [rbp - 8]	       616	clone.c	FUNCTION_16	FOR_1	IF_2	CALL_2
0x1a22	        0x4883c070	                           add rax, 0x70	       616	clone.c	FUNCTION_16	FOR_1	IF_2	CALL_2
0x1a26	      0xbe00000000	                              mov esi, 0	       616	clone.c	FUNCTION_16	FOR_1	IF_2	CALL_2
0x1a2b	          0x4889c7	                            mov rdi, rax	       616	clone.c	FUNCTION_16	FOR_1	IF_2	CALL_2
0x1a2e	      0xe809e7ffff	                      call sym.ends_with	       616	clone.c	FUNCTION_16	FOR_1	IF_2	CALL_2
0x1a33	            0x85c0	                           test eax, eax	       616	clone.c	FUNCTION_16	FOR_1	IF_2	CALL_2
0x1a35	            0x7546	                           jne 0x4001abd	       616	clone.c	FUNCTION_16	FOR_1	IF_2	CALL_2
0x1a37	        0x488b45f8	                mov rax, qword [rbp - 8]	       618	clone.c	FUNCTION_16	FOR_1	IF_3	CALL_3
0x1a3b	        0x4883c008	                              add rax, 8	       618	clone.c	FUNCTION_16	FOR_1	IF_3	CALL_3
0x1a3f	          0x4889c7	                            mov rdi, rax	       618	clone.c	FUNCTION_16	FOR_1	IF_3	CALL_3
0x1a42	      0xe800000000	                          call 0x4001a87	       618	clone.c	FUNCTION_16	FOR_1	IF_3	CALL_3
0x1a47	            0x85c0	                           test eax, eax	       618	clone.c	FUNCTION_16	FOR_1	IF_3	CALL_3
0x1a49	            0x7435	                            je 0x4001ac0	       618	clone.c	FUNCTION_16	FOR_1	IF_3	CALL_3
0x1a4b	        0x488b45f8	                mov rax, qword [rbp - 8]	       620	clone.c	FUNCTION_16	FOR_1	CALL_4
0x1a4f	        0x488d5008	                      lea rdx, [rax + 8]	       620	clone.c	FUNCTION_16	FOR_1	CALL_4
0x1a53	        0x488b45f8	                mov rax, qword [rbp - 8]	       620	clone.c	FUNCTION_16	FOR_1	CALL_4
0x1a57	        0x488d7070	                   lea rsi, [rax + 0x70]	       620	clone.c	FUNCTION_16	FOR_1	CALL_4
0x1a5b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       620	clone.c	FUNCTION_16	FOR_1	CALL_4
0x1a5f	    0x41b901000000	                              mov r9d, 1	       620	clone.c	FUNCTION_16	FOR_1	CALL_4
0x1a65	    0x41b800000000	                              mov r8d, 0	       620	clone.c	FUNCTION_16	FOR_1	CALL_4
0x1a6b	      0xb900000000	                              mov ecx, 0	       620	clone.c	FUNCTION_16	FOR_1	CALL_4
0x1a70	          0x4889c7	                            mov rdi, rax	       620	clone.c	FUNCTION_16	FOR_1	CALL_4
0x1a73	      0xe800000000	                          call 0x4001ab8	       620	clone.c	FUNCTION_16	FOR_1	CALL_4
0x1a78	            0xeb07	                           jmp 0x4001ac1	       620	clone.c	FUNCTION_16	FOR_1	CALL_4
0x1a7a	              0x90	                                     nop	       615	clone.c	FUNCTION_16	FOR_1	IF_1
0x1a7b	            0xeb04	                           jmp 0x4001ac1	       615	clone.c	FUNCTION_16	FOR_1	IF_1
0x1a7d	              0x90	                                     nop	       617	clone.c	FUNCTION_16	FOR_1	IF_2
0x1a7e	            0xeb01	                           jmp 0x4001ac1	       617	clone.c	FUNCTION_16	FOR_1	IF_2
0x1a80	              0x90	                                     nop	       619	clone.c	FUNCTION_16	FOR_1	IF_3
0x1a81	        0x488b45f8	                mov rax, qword [rbp - 8]	       613	clone.c	FUNCTION_16	FOR_1
0x1a85	          0x488b00	                    mov rax, qword [rax]	       613	clone.c	FUNCTION_16	FOR_1
0x1a88	        0x488945f8	                mov qword [rbp - 8], rax	       613	clone.c	FUNCTION_16	FOR_1
0x1a8c	      0x48837df800	                  cmp qword [rbp - 8], 0	       613	clone.c	FUNCTION_16	FOR_1
0x1a91	     0xf856effffff	                           jne 0x4001a45	       613	clone.c	FUNCTION_16	FOR_1
0x1a97	              0x90	                                     nop	       623	clone.c	FUNCTION_16
0x1a98	              0xc9	                                   leave	       623	clone.c	FUNCTION_16
0x1a99	              0xc3	                                     ret	       623	clone.c	FUNCTION_16
skip_prefix	WHILE,0:ELSE,0:IF,1:DO,1:SWITCH,0:CALL,0:functions,0:FOR,0	27
0x22	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_33
0x23	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_33
0x26	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_33
0x2a	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_33
0x2e	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_33
0x32	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_33	DO_1	IF_1
0x36	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_33	DO_1	IF_1
0x39	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_33	DO_1	IF_1
0x3b	            0x7512	                           jne 0x400008f	       484	git-compat-util.h	FUNCTION_33	DO_1	IF_1
0x3d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_33	DO_1	IF_1
0x41	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_33	DO_1	IF_1
0x45	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_33	DO_1	IF_1
0x48	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_33	DO_1	IF_1
0x4d	            0xeb27	                           jmp 0x40000b6	       486	git-compat-util.h	FUNCTION_33	DO_1	IF_1
0x4f	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_33	DO_1
0x53	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_33	DO_1
0x57	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_33	DO_1
0x5b	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_33	DO_1
0x5e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_33	DO_1
0x62	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_33	DO_1
0x66	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_33	DO_1
0x6a	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_33	DO_1
0x6d	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_33	DO_1
0x6f	            0x74c1	                            je 0x4000072	       488	git-compat-util.h	FUNCTION_33	DO_1
0x71	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_33
0x76	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_33
0x77	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_33
cmd_clone	WHILE,0:ELSE,14:IF,62:DO,0:SWITCH,0:CALL,129:functions,1:FOR,1	896
0x2617	              0x55	                                push rbp	       879	clone.c	FUNCTION_26
0x2618	          0x4889e5	                            mov rbp, rsp	       879	clone.c	FUNCTION_26
0x261b	            0x4154	                                push r12	       879	clone.c	FUNCTION_26
0x261d	              0x53	                                push rbx	       879	clone.c	FUNCTION_26
0x261e	    0x4881ec600100	                          sub rsp, 0x160	       879	clone.c	FUNCTION_26
0x2625	    0x89bdacfeffff	            mov dword [rbp - 0x154], edi	       879	clone.c	FUNCTION_26
0x262b	    0x4889b5a0feff	            mov qword [rbp - 0x160], rsi	       879	clone.c	FUNCTION_26
0x2632	    0x48899598feff	            mov qword [rbp - 0x168], rdx	       879	clone.c	FUNCTION_26
0x2639	    0x64488b042528	                mov rax, qword fs:[0x28]	       879	clone.c	FUNCTION_26
0x2642	        0x488945e8	             mov qword [rbp - 0x18], rax	       879	clone.c	FUNCTION_26
0x2646	            0x31c0	                            xor eax, eax	       879	clone.c	FUNCTION_26
0x2648	    0xc785b0feffff	              mov dword [rbp - 0x150], 0	       880	clone.c	FUNCTION_26
0x2652	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	       889	clone.c	FUNCTION_26
0x265d	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	       889	clone.c	FUNCTION_26
0x2668	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	       889	clone.c	FUNCTION_26
0x2673	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	       889	clone.c	FUNCTION_26
0x267e	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	       889	clone.c	FUNCTION_26
0x2689	    0x48c745800000	               mov qword [rbp - 0x80], 0	       889	clone.c	FUNCTION_26
0x2691	    0x48c745900000	               mov qword [rbp - 0x70], 0	       890	clone.c	FUNCTION_26
0x2699	    0x48c745980000	               mov qword [rbp - 0x68], 0	       890	clone.c	FUNCTION_26
0x26a1	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       890	clone.c	FUNCTION_26
0x26a9	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       890	clone.c	FUNCTION_26
0x26b1	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       890	clone.c	FUNCTION_26
0x26b9	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       890	clone.c	FUNCTION_26
0x26c1	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	       891	clone.c	FUNCTION_26
0x26cc	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	       892	clone.c	FUNCTION_26
0x26d7	    0xc785bcfeffff	              mov dword [rbp - 0x144], 0	       894	clone.c	FUNCTION_26
0x26e1	    0xc785b8feffff	              mov dword [rbp - 0x148], 1	       894	clone.c	FUNCTION_26
0x26eb	    0xc70500000000	               mov dword [0x04002735], 0	       900	clone.c	FUNCTION_26
0x26f5	      0xbf00000000	                              mov edi, 0	       902	clone.c	FUNCTION_26	CALL_1
0x26fa	      0xe800000000	                          call 0x400273f	       902	clone.c	FUNCTION_26	CALL_1
0x26ff	    0x488b9598feff	            mov rdx, qword [rbp - 0x168]	       903	clone.c	FUNCTION_26	CALL_2
0x2706	    0x488bb5a0feff	            mov rsi, qword [rbp - 0x160]	       903	clone.c	FUNCTION_26	CALL_2
0x270d	    0x8b85acfeffff	            mov eax, dword [rbp - 0x154]	       903	clone.c	FUNCTION_26	CALL_2
0x2713	    0x41b900000000	                              mov r9d, 0	       903	clone.c	FUNCTION_26	CALL_2
0x2719	    0x41b800000000	                              mov r8d, 0	       903	clone.c	FUNCTION_26	CALL_2
0x271f	      0xb900000000	                              mov ecx, 0	       903	clone.c	FUNCTION_26	CALL_2
0x2724	            0x89c7	                            mov edi, eax	       903	clone.c	FUNCTION_26	CALL_2
0x2726	      0xe800000000	                          call 0x400276b	       903	clone.c	FUNCTION_26	CALL_2
0x272b	    0x8985acfeffff	            mov dword [rbp - 0x154], eax	       903	clone.c	FUNCTION_26	CALL_2
0x2731	    0x83bdacfeffff	              cmp dword [rbp - 0x154], 2	       906	clone.c	FUNCTION_26	IF_1
0x2738	            0x7e1c	                           jle 0x4002796	       906	clone.c	FUNCTION_26	IF_1
0x273a	      0xbf00000000	                              mov edi, 0	       907	clone.c	FUNCTION_26	IF_1	CALL_4
0x273f	      0xe8b7dbffff	                               call sym.	       907	clone.c	FUNCTION_26	IF_1	CALL_4
0x2744	      0xba00000000	                              mov edx, 0	       907	clone.c	FUNCTION_26	IF_1	CALL_4
0x2749	      0xbe00000000	                              mov esi, 0	       907	clone.c	FUNCTION_26	IF_1	CALL_4
0x274e	          0x4889c7	                            mov rdi, rax	       907	clone.c	FUNCTION_26	IF_1	CALL_4
0x2751	      0xe800000000	                          call 0x4002796	       907	clone.c	FUNCTION_26	IF_1	CALL_4
0x2756	    0x83bdacfeffff	              cmp dword [rbp - 0x154], 0	       910	clone.c	FUNCTION_26	IF_2
0x275d	            0x751c	                           jne 0x40027bb	       910	clone.c	FUNCTION_26	IF_2
0x275f	      0xbf00000000	                              mov edi, 0	       911	clone.c	FUNCTION_26	IF_2	CALL_6
0x2764	      0xe892dbffff	                               call sym.	       911	clone.c	FUNCTION_26	IF_2	CALL_6
0x2769	      0xba00000000	                              mov edx, 0	       911	clone.c	FUNCTION_26	IF_2	CALL_6
0x276e	      0xbe00000000	                              mov esi, 0	       911	clone.c	FUNCTION_26	IF_2	CALL_6
0x2773	          0x4889c7	                            mov rdi, rax	       911	clone.c	FUNCTION_26	IF_2	CALL_6
0x2776	      0xe800000000	                          call 0x40027bb	       911	clone.c	FUNCTION_26	IF_2	CALL_6
0x277b	    0x488b05000000	            mov rax, qword [0x040027c2] 	       914	clone.c	FUNCTION_26	IF_3
0x2782	          0x4885c0	                           test rax, rax	       914	clone.c	FUNCTION_26	IF_3
0x2785	            0x7516	                           jne 0x40027dd	       914	clone.c	FUNCTION_26	IF_3
0x2787	    0x488b05000000	            mov rax, qword [0x040027ce] 	       914	clone.c	FUNCTION_26	IF_3
0x278e	          0x4885c0	                           test rax, rax	       914	clone.c	FUNCTION_26	IF_3
0x2791	            0x750a	                           jne 0x40027dd	       914	clone.c	FUNCTION_26	IF_3
0x2793	    0x8b0500000000	            mov eax, dword [0x040027d9] 	       914	clone.c	FUNCTION_26	IF_3
0x2799	            0x85c0	                           test eax, eax	       914	clone.c	FUNCTION_26	IF_3
0x279b	            0x740a	                            je 0x40027e7	       914	clone.c	FUNCTION_26	IF_3
0x279d	    0xc70500000000	               mov dword [0x040027e7], 1	       915	clone.c	FUNCTION_26	IF_3
0x27a7	    0x8b0500000000	            mov eax, dword [0x040027ed] 	       916	clone.c	FUNCTION_26	IF_4
0x27ad	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       916	clone.c	FUNCTION_26	IF_4
0x27b0	            0x7514	                           jne 0x4002806	       916	clone.c	FUNCTION_26	IF_4
0x27b2	    0x8b0500000000	            mov eax, dword [0x040027f8] 	       917	clone.c	FUNCTION_26	IF_4
0x27b8	            0x85c0	                           test eax, eax	       917	clone.c	FUNCTION_26	IF_4
0x27ba	           0xf95c0	                                setne al	       917	clone.c	FUNCTION_26	IF_4
0x27bd	           0xfb6c0	                           movzx eax, al	       917	clone.c	FUNCTION_26	IF_4
0x27c0	    0x890500000000	            mov dword [0x04002806], eax 	       917	clone.c	FUNCTION_26	IF_4
0x27c6	    0x8b0500000000	            mov eax, dword [0x0400280c] 	       919	clone.c	FUNCTION_26	IF_5
0x27cc	            0x85c0	                           test eax, eax	       919	clone.c	FUNCTION_26	IF_5
0x27ce	            0x740a	                            je 0x400281a	       919	clone.c	FUNCTION_26	IF_5
0x27d0	    0xc70500000000	               mov dword [0x0400281a], 1	       920	clone.c	FUNCTION_26	IF_5
0x27da	    0x8b0500000000	            mov eax, dword [0x04002820] 	       922	clone.c	FUNCTION_26	IF_6
0x27e0	            0x85c0	                           test eax, eax	       922	clone.c	FUNCTION_26	IF_6
0x27e2	            0x745a	                            je 0x400287e	       922	clone.c	FUNCTION_26	IF_6
0x27e4	    0x488b05000000	            mov rax, qword [0x0400282b] 	       923	clone.c	FUNCTION_26	IF_6	IF_7
0x27eb	          0x4885c0	                           test rax, rax	       923	clone.c	FUNCTION_26	IF_6	IF_7
0x27ee	            0x7421	                            je 0x4002851	       923	clone.c	FUNCTION_26	IF_6	IF_7
0x27f0	    0x488b1d000000	            mov rbx, qword [0x04002837] 	       924	clone.c	FUNCTION_26	IF_6	IF_7	CALL_8
0x27f7	      0xbf00000000	                              mov edi, 0	       924	clone.c	FUNCTION_26	IF_6	IF_7	CALL_8
0x27fc	      0xe8fadaffff	                               call sym.	       924	clone.c	FUNCTION_26	IF_6	IF_7	CALL_8
0x2801	          0x4889de	                            mov rsi, rbx	       924	clone.c	FUNCTION_26	IF_6	IF_7	CALL_8
0x2804	          0x4889c7	                            mov rdi, rax	       924	clone.c	FUNCTION_26	IF_6	IF_7	CALL_8
0x2807	      0xb800000000	                              mov eax, 0	       924	clone.c	FUNCTION_26	IF_6	IF_7	CALL_8
0x280c	      0xe800000000	                          call 0x4002851	       924	clone.c	FUNCTION_26	IF_6	IF_7	CALL_8
0x2811	    0x488b05000000	            mov rax, qword [0x04002858] 	       926	clone.c	FUNCTION_26	IF_6	IF_8
0x2818	          0x4885c0	                           test rax, rax	       926	clone.c	FUNCTION_26	IF_6	IF_8
0x281b	            0x7417	                            je 0x4002874	       926	clone.c	FUNCTION_26	IF_6	IF_8
0x281d	      0xbf00000000	                              mov edi, 0	       927	clone.c	FUNCTION_26	IF_6	CALL_10
0x2822	      0xe8d4daffff	                               call sym.	       927	clone.c	FUNCTION_26	IF_6	CALL_10
0x2827	          0x4889c7	                            mov rdi, rax	       927	clone.c	FUNCTION_26	IF_6	CALL_10
0x282a	      0xb800000000	                              mov eax, 0	       927	clone.c	FUNCTION_26	IF_6	CALL_10
0x282f	      0xe800000000	                          call 0x4002874	       927	clone.c	FUNCTION_26	IF_6	CALL_10
0x2834	    0xc70500000000	               mov dword [0x0400287e], 1	       928	clone.c	FUNCTION_26	IF_6
0x283e	    0x488b05000000	            mov rax, qword [0x04002885] 	       931	clone.c	FUNCTION_26	IF_9
0x2845	          0x4885c0	                           test rax, rax	       931	clone.c	FUNCTION_26	IF_9
0x2848	            0x750b	                           jne 0x4002895	       931	clone.c	FUNCTION_26	IF_9
0x284a	    0x48c705000000	               mov qword [0x04002895], 0	       932	clone.c	FUNCTION_26	IF_9
0x2855	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       934	clone.c	FUNCTION_26
0x285c	          0x488b00	                    mov rax, qword [rax]	       934	clone.c	FUNCTION_26
0x285f	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	       934	clone.c	FUNCTION_26
0x2866	    0x488d95b0feff	                  lea rdx, [rbp - 0x150]	       936	clone.c	FUNCTION_26	CALL_11
0x286d	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       936	clone.c	FUNCTION_26	CALL_11
0x2874	          0x4889d6	                            mov rsi, rdx	       936	clone.c	FUNCTION_26	CALL_11
0x2877	          0x4889c7	                            mov rdi, rax	       936	clone.c	FUNCTION_26	CALL_11
0x287a	      0xe8d6deffff	                  call sym.get_repo_path	       936	clone.c	FUNCTION_26	CALL_11
0x287f	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	       936	clone.c	FUNCTION_26	CALL_11
0x2886	    0x4883bd30ffff	               cmp qword [rbp - 0xd0], 0	       937	clone.c	FUNCTION_26	IF_10
0x288e	            0x7418	                            je 0x40028e8	       937	clone.c	FUNCTION_26	IF_10
0x2890	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       938	clone.c	FUNCTION_26	CALL_12
0x2897	          0x4889c7	                            mov rdi, rax	       938	clone.c	FUNCTION_26	CALL_12
0x289a	      0xe800000000	                          call 0x40028df	       938	clone.c	FUNCTION_26	CALL_12
0x289f	    0x488985c8feff	            mov qword [rbp - 0x138], rax	       938	clone.c	FUNCTION_26	CALL_12
0x28a6	            0xeb4b	                           jmp 0x4002933	       938	clone.c	FUNCTION_26	CALL_12
0x28a8	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       939	clone.c	FUNCTION_26	ELSE_1	IF_11	CALL_13
0x28af	      0xbe3a000000	                           mov esi, 0x3a	       939	clone.c	FUNCTION_26	ELSE_1	IF_11	CALL_13
0x28b4	          0x4889c7	                            mov rdi, rax	       939	clone.c	FUNCTION_26	ELSE_1	IF_11	CALL_13
0x28b7	      0xe800000000	                          call 0x40028fc	       939	clone.c	FUNCTION_26	ELSE_1	IF_11	CALL_13
0x28bc	          0x4885c0	                           test rax, rax	       939	clone.c	FUNCTION_26	ELSE_1	IF_11	CALL_13
0x28bf	            0x7524	                           jne 0x4002925	       939	clone.c	FUNCTION_26	ELSE_1	IF_11	CALL_13
0x28c1	      0xbf00000000	                              mov edi, 0	       940	clone.c	FUNCTION_26	ELSE_1	IF_11
0x28c6	      0xe830daffff	                               call sym.	       940	clone.c	FUNCTION_26	ELSE_1	IF_11
0x28cb	          0x4889c2	                            mov rdx, rax	       940	clone.c	FUNCTION_26	ELSE_1	IF_11
0x28ce	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       940	clone.c	FUNCTION_26	ELSE_1	IF_11
0x28d5	          0x4889c6	                            mov rsi, rax	       940	clone.c	FUNCTION_26	ELSE_1	IF_11
0x28d8	          0x4889d7	                            mov rdi, rdx	       940	clone.c	FUNCTION_26	ELSE_1	IF_11
0x28db	      0xb800000000	                              mov eax, 0	       940	clone.c	FUNCTION_26	ELSE_1	IF_11
0x28e0	      0xe800000000	                          call 0x4002925	       940	clone.c	FUNCTION_26	ELSE_1	IF_11
0x28e5	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       942	clone.c	FUNCTION_26	ELSE_2
0x28ec	    0x488985c8feff	            mov qword [rbp - 0x138], rax	       942	clone.c	FUNCTION_26	ELSE_2
0x28f3	    0x488b05000000	            mov rax, qword [0x0400293a] 	       945	clone.c	FUNCTION_26	IF_12	CALL_16
0x28fa	          0x4885c0	                           test rax, rax	       945	clone.c	FUNCTION_26	IF_12	CALL_16
0x28fd	            0x7434	                            je 0x4002973	       945	clone.c	FUNCTION_26	IF_12	CALL_16
0x28ff	    0x488b05000000	            mov rax, qword [0x04002946] 	       945	clone.c	FUNCTION_26	IF_12	CALL_16
0x2906	          0x4889c7	                            mov rdi, rax	       945	clone.c	FUNCTION_26	IF_12	CALL_16
0x2909	      0xe800000000	                          call 0x400294e	       945	clone.c	FUNCTION_26	IF_12	CALL_16
0x290e	            0x85c0	                           test eax, eax	       945	clone.c	FUNCTION_26	IF_12	CALL_16
0x2910	            0x7f21	                            jg 0x4002973	       945	clone.c	FUNCTION_26	IF_12	CALL_16
0x2912	    0x488b1d000000	            mov rbx, qword [0x04002959] 	       946	clone.c	FUNCTION_26	CALL_18
0x2919	      0xbf00000000	                              mov edi, 0	       946	clone.c	FUNCTION_26	CALL_18
0x291e	      0xe8d8d9ffff	                               call sym.	       946	clone.c	FUNCTION_26	CALL_18
0x2923	          0x4889de	                            mov rsi, rbx	       946	clone.c	FUNCTION_26	CALL_18
0x2926	          0x4889c7	                            mov rdi, rax	       946	clone.c	FUNCTION_26	CALL_18
0x2929	      0xb800000000	                              mov eax, 0	       946	clone.c	FUNCTION_26	CALL_18
0x292e	      0xe800000000	                          call 0x4002973	       946	clone.c	FUNCTION_26	CALL_18
0x2933	    0x83bdacfeffff	              cmp dword [rbp - 0x154], 2	       948	clone.c	FUNCTION_26	IF_13
0x293a	            0x751f	                           jne 0x400299b	       948	clone.c	FUNCTION_26	IF_13
0x293c	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       949	clone.c	FUNCTION_26	CALL_19
0x2943	        0x4883c008	                              add rax, 8	       949	clone.c	FUNCTION_26	CALL_19
0x2947	          0x488b00	                    mov rax, qword [rax]	       949	clone.c	FUNCTION_26	CALL_19
0x294a	          0x4889c7	                            mov rdi, rax	       949	clone.c	FUNCTION_26	CALL_19
0x294d	      0xe800000000	                          call 0x4002992	       949	clone.c	FUNCTION_26	CALL_19
0x2952	    0x488985e0feff	            mov qword [rbp - 0x120], rax	       949	clone.c	FUNCTION_26	CALL_19
0x2959	            0xeb24	                           jmp 0x40029bf	       949	clone.c	FUNCTION_26	CALL_19
0x295b	    0x8b1500000000	            mov edx, dword [0x040029a1] 	       951	clone.c	FUNCTION_26	CALL_20
0x2961	    0x8b8db0feffff	            mov ecx, dword [rbp - 0x150]	       951	clone.c	FUNCTION_26	CALL_20
0x2967	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       951	clone.c	FUNCTION_26	CALL_20
0x296e	            0x89ce	                            mov esi, ecx	       951	clone.c	FUNCTION_26	CALL_20
0x2970	          0x4889c7	                            mov rdi, rax	       951	clone.c	FUNCTION_26	CALL_20
0x2973	      0xe882deffff	                 call sym.guess_dir_name	       951	clone.c	FUNCTION_26	CALL_20
0x2978	    0x488985e0feff	            mov qword [rbp - 0x120], rax	       951	clone.c	FUNCTION_26	CALL_20
0x297f	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       952	clone.c	FUNCTION_26	CALL_21
0x2986	          0x4889c7	                            mov rdi, rax	       952	clone.c	FUNCTION_26	CALL_21
0x2989	      0xe861e2ffff	         call sym.strip_trailing_slashes	       952	clone.c	FUNCTION_26	CALL_21
0x298e	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       954	clone.c	FUNCTION_26	CALL_22
0x2995	          0x4889c7	                            mov rdi, rax	       954	clone.c	FUNCTION_26	CALL_22
0x2998	      0xe822fcffff	                     call sym.dir_exists	       954	clone.c	FUNCTION_26	CALL_22
0x299d	    0x8985c0feffff	            mov dword [rbp - 0x140], eax	       954	clone.c	FUNCTION_26	CALL_22
0x29a3	    0x83bdc0feffff	              cmp dword [rbp - 0x140], 0	       955	clone.c	FUNCTION_26	IF_14	CALL_23
0x29aa	            0x7437	                            je 0x4002a23	       955	clone.c	FUNCTION_26	IF_14	CALL_23
0x29ac	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       955	clone.c	FUNCTION_26	IF_14	CALL_23
0x29b3	          0x4889c7	                            mov rdi, rax	       955	clone.c	FUNCTION_26	IF_14	CALL_23
0x29b6	      0xe800000000	                          call 0x40029fb	       955	clone.c	FUNCTION_26	IF_14	CALL_23
0x29bb	            0x85c0	                           test eax, eax	       955	clone.c	FUNCTION_26	IF_14	CALL_23
0x29bd	            0x7524	                           jne 0x4002a23	       955	clone.c	FUNCTION_26	IF_14	CALL_23
0x29bf	      0xbf00000000	                              mov edi, 0	       956	clone.c	FUNCTION_26	IF_14	CALL_25
0x29c4	      0xe832d9ffff	                               call sym.	       956	clone.c	FUNCTION_26	IF_14	CALL_25
0x29c9	          0x4889c2	                            mov rdx, rax	       956	clone.c	FUNCTION_26	IF_14	CALL_25
0x29cc	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       956	clone.c	FUNCTION_26	IF_14	CALL_25
0x29d3	          0x4889c6	                            mov rsi, rax	       956	clone.c	FUNCTION_26	IF_14	CALL_25
0x29d6	          0x4889d7	                            mov rdi, rdx	       956	clone.c	FUNCTION_26	IF_14	CALL_25
0x29d9	      0xb800000000	                              mov eax, 0	       956	clone.c	FUNCTION_26	IF_14	CALL_25
0x29de	      0xe800000000	                          call 0x4002a23	       956	clone.c	FUNCTION_26	IF_14	CALL_25
0x29e3	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	       959	clone.c	FUNCTION_26	CALL_26
0x29ea	        0x488d45b0	                   lea rax, [rbp - 0x50]	       959	clone.c	FUNCTION_26	CALL_26
0x29ee	      0xbe00000000	                              mov esi, 0	       959	clone.c	FUNCTION_26	CALL_26
0x29f3	          0x4889c7	                            mov rdi, rax	       959	clone.c	FUNCTION_26	CALL_26
0x29f6	      0xb800000000	                              mov eax, 0	       959	clone.c	FUNCTION_26	CALL_26
0x29fb	      0xe800000000	                          call 0x4002a40	       959	clone.c	FUNCTION_26	CALL_26
0x2a00	    0x8b0500000000	            mov eax, dword [0x04002a46] 	       961	clone.c	FUNCTION_26	IF_15
0x2a06	            0x85c0	                           test eax, eax	       961	clone.c	FUNCTION_26	IF_15
0x2a08	            0x740d	                            je 0x4002a57	       961	clone.c	FUNCTION_26	IF_15
0x2a0a	    0x48c785d0feff	              mov qword [rbp - 0x130], 0	       962	clone.c	FUNCTION_26	IF_15
0x2a15	            0xeb52	                           jmp 0x4002aa9	       962	clone.c	FUNCTION_26	IF_15
0x2a17	      0xbf00000000	                              mov edi, 0	       964	clone.c	FUNCTION_26	ELSE_4	CALL_27
0x2a1c	      0xe800000000	                          call 0x4002a61	       964	clone.c	FUNCTION_26	ELSE_4	CALL_27
0x2a21	    0x488985d0feff	            mov qword [rbp - 0x130], rax	       964	clone.c	FUNCTION_26	ELSE_4	CALL_27
0x2a28	    0x4883bdd0feff	              cmp qword [rbp - 0x130], 0	       965	clone.c	FUNCTION_26	ELSE_4	IF_16	CALL_28
0x2a30	            0x7437	                            je 0x4002aa9	       965	clone.c	FUNCTION_26	ELSE_4	IF_16	CALL_28
0x2a32	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       965	clone.c	FUNCTION_26	ELSE_4	IF_16	CALL_28
0x2a39	          0x4889c7	                            mov rdi, rax	       965	clone.c	FUNCTION_26	ELSE_4	IF_16	CALL_28
0x2a3c	      0xe87efbffff	                     call sym.dir_exists	       965	clone.c	FUNCTION_26	ELSE_4	IF_16	CALL_28
0x2a41	            0x85c0	                           test eax, eax	       965	clone.c	FUNCTION_26	ELSE_4	IF_16	CALL_28
0x2a43	            0x7424	                            je 0x4002aa9	       965	clone.c	FUNCTION_26	ELSE_4	IF_16	CALL_28
0x2a45	      0xbf00000000	                              mov edi, 0	       966	clone.c	FUNCTION_26	ELSE_4	CALL_30
0x2a4a	      0xe8acd8ffff	                               call sym.	       966	clone.c	FUNCTION_26	ELSE_4	CALL_30
0x2a4f	          0x4889c2	                            mov rdx, rax	       966	clone.c	FUNCTION_26	ELSE_4	CALL_30
0x2a52	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       966	clone.c	FUNCTION_26	ELSE_4	CALL_30
0x2a59	          0x4889c6	                            mov rsi, rax	       966	clone.c	FUNCTION_26	ELSE_4	CALL_30
0x2a5c	          0x4889d7	                            mov rdi, rdx	       966	clone.c	FUNCTION_26	ELSE_4	CALL_30
0x2a5f	      0xb800000000	                              mov eax, 0	       966	clone.c	FUNCTION_26	ELSE_4	CALL_30
0x2a64	      0xe800000000	                          call 0x4002aa9	       966	clone.c	FUNCTION_26	ELSE_4	CALL_30
0x2a69	    0x8b0500000000	            mov eax, dword [0x04002aaf] 	       969	clone.c	FUNCTION_26	IF_17
0x2a6f	            0x85c0	                           test eax, eax	       969	clone.c	FUNCTION_26	IF_17
0x2a71	            0x750a	                           jne 0x4002abd	       969	clone.c	FUNCTION_26	IF_17
0x2a73	    0x4883bdd0feff	              cmp qword [rbp - 0x130], 0	       969	clone.c	FUNCTION_26	IF_17
0x2a7b	            0x7418	                            je 0x4002ad5	       969	clone.c	FUNCTION_26	IF_17
0x2a7d	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       970	clone.c	FUNCTION_26	CALL_31
0x2a84	          0x4889c7	                            mov rdi, rax	       970	clone.c	FUNCTION_26	CALL_31
0x2a87	      0xe800000000	                          call 0x4002acc	       970	clone.c	FUNCTION_26	CALL_31
0x2a8c	    0x488985d8feff	            mov qword [rbp - 0x128], rax	       970	clone.c	FUNCTION_26	CALL_31
0x2a93	            0xeb2e	                           jmp 0x4002b03	       970	clone.c	FUNCTION_26	CALL_31
0x2a95	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       972	clone.c	FUNCTION_26	ELSE_5
0x2a9c	    0x488985d0feff	            mov qword [rbp - 0x130], rax	       972	clone.c	FUNCTION_26	ELSE_5
0x2aa3	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	       973	clone.c	FUNCTION_26	ELSE_5	CALL_32
0x2aaa	          0x4889c6	                            mov rsi, rax	       973	clone.c	FUNCTION_26	ELSE_5	CALL_32
0x2aad	      0xbf00000000	                              mov edi, 0	       973	clone.c	FUNCTION_26	ELSE_5	CALL_32
0x2ab2	      0xb800000000	                              mov eax, 0	       973	clone.c	FUNCTION_26	ELSE_5	CALL_32
0x2ab7	      0xe800000000	                          call 0x4002afc	       973	clone.c	FUNCTION_26	ELSE_5	CALL_32
0x2abc	    0x488985d8feff	            mov qword [rbp - 0x128], rax	       973	clone.c	FUNCTION_26	ELSE_5	CALL_32
0x2ac3	      0xbf00000000	                              mov edi, 0	       976	clone.c	FUNCTION_26	CALL_33
0x2ac8	      0xe800000000	                          call 0x4002b0d	       976	clone.c	FUNCTION_26	CALL_33
0x2acd	      0xbf00000000	                              mov edi, 0	       977	clone.c	FUNCTION_26	CALL_34
0x2ad2	      0xe800000000	                          call 0x4002b17	       977	clone.c	FUNCTION_26	CALL_34
0x2ad7	    0x8b0500000000	            mov eax, dword [0x04002b1d] 	       979	clone.c	FUNCTION_26	IF_18
0x2add	            0x85c0	                           test eax, eax	       979	clone.c	FUNCTION_26	IF_18
0x2adf	     0xf85aa000000	                           jne 0x4002bcf	       979	clone.c	FUNCTION_26	IF_18
0x2ae5	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       980	clone.c	FUNCTION_26	IF_18	IF_19	CALL_35
0x2aec	          0x4889c7	                            mov rdi, rax	       980	clone.c	FUNCTION_26	IF_18	IF_19	CALL_35
0x2aef	      0xe800000000	                          call 0x4002b34	       980	clone.c	FUNCTION_26	IF_18	IF_19	CALL_35
0x2af4	            0x85c0	                           test eax, eax	       980	clone.c	FUNCTION_26	IF_18	IF_19	CALL_35
0x2af6	            0x7924	                           jns 0x4002b5c	       980	clone.c	FUNCTION_26	IF_18	IF_19	CALL_35
0x2af8	      0xbf00000000	                              mov edi, 0	       981	clone.c	FUNCTION_26	IF_18	IF_19	CALL_37
0x2afd	      0xe8f9d7ffff	                               call sym.	       981	clone.c	FUNCTION_26	IF_18	IF_19	CALL_37
0x2b02	          0x4889c2	                            mov rdx, rax	       981	clone.c	FUNCTION_26	IF_18	IF_19	CALL_37
0x2b05	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       981	clone.c	FUNCTION_26	IF_18	IF_19	CALL_37
0x2b0c	          0x4889c6	                            mov rsi, rax	       981	clone.c	FUNCTION_26	IF_18	IF_19	CALL_37
0x2b0f	          0x4889d7	                            mov rdi, rdx	       981	clone.c	FUNCTION_26	IF_18	IF_19	CALL_37
0x2b12	      0xb800000000	                              mov eax, 0	       981	clone.c	FUNCTION_26	IF_18	IF_19	CALL_37
0x2b17	      0xe800000000	                          call 0x4002b5c	       981	clone.c	FUNCTION_26	IF_18	IF_19	CALL_37
0x2b1c	    0x83bdc0feffff	              cmp dword [rbp - 0x140], 0	       983	clone.c	FUNCTION_26	IF_18	IF_20
0x2b23	            0x7411	                            je 0x4002b76	       983	clone.c	FUNCTION_26	IF_18	IF_20
0x2b25	    0x8b0500000000	            mov eax, dword [0x04002b6b] 	       984	clone.c	FUNCTION_26	IF_18	IF_20
0x2b2b	          0x83c804	                               or eax, 4	       984	clone.c	FUNCTION_26	IF_18	IF_20
0x2b2e	    0x890500000000	            mov dword [0x04002b74], eax 	       984	clone.c	FUNCTION_26	IF_18	IF_20
0x2b34	            0xeb3c	                           jmp 0x4002bb2	       984	clone.c	FUNCTION_26	IF_18	IF_20
0x2b36	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       985	clone.c	FUNCTION_26	IF_18	ELSE_6	IF_21	CALL_38
0x2b3d	      0xbeff010000	                          mov esi, 0x1ff	       985	clone.c	FUNCTION_26	IF_18	ELSE_6	IF_21	CALL_38
0x2b42	          0x4889c7	                            mov rdi, rax	       985	clone.c	FUNCTION_26	IF_18	ELSE_6	IF_21	CALL_38
0x2b45	      0xe800000000	                          call 0x4002b8a	       985	clone.c	FUNCTION_26	IF_18	ELSE_6	IF_21	CALL_38
0x2b4a	            0x85c0	                           test eax, eax	       985	clone.c	FUNCTION_26	IF_18	ELSE_6	IF_21	CALL_38
0x2b4c	            0x7424	                            je 0x4002bb2	       985	clone.c	FUNCTION_26	IF_18	ELSE_6	IF_21	CALL_38
0x2b4e	      0xbf00000000	                              mov edi, 0	       986	clone.c	FUNCTION_26	IF_18	ELSE_6	IF_21	CALL_40
0x2b53	      0xe8a3d7ffff	                               call sym.	       986	clone.c	FUNCTION_26	IF_18	ELSE_6	IF_21	CALL_40
0x2b58	          0x4889c2	                            mov rdx, rax	       986	clone.c	FUNCTION_26	IF_18	ELSE_6	IF_21	CALL_40
0x2b5b	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       986	clone.c	FUNCTION_26	IF_18	ELSE_6	IF_21	CALL_40
0x2b62	          0x4889c6	                            mov rsi, rax	       986	clone.c	FUNCTION_26	IF_18	ELSE_6	IF_21	CALL_40
0x2b65	          0x4889d7	                            mov rdi, rdx	       986	clone.c	FUNCTION_26	IF_18	ELSE_6	IF_21	CALL_40
0x2b68	      0xb800000000	                              mov eax, 0	       986	clone.c	FUNCTION_26	IF_18	ELSE_6	IF_21	CALL_40
0x2b6d	      0xe800000000	                          call 0x4002bb2	       986	clone.c	FUNCTION_26	IF_18	ELSE_6	IF_21	CALL_40
0x2b72	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       988	clone.c	FUNCTION_26	IF_18
0x2b79	    0x488905000000	            mov qword [0x04002bc0], rax 	       988	clone.c	FUNCTION_26	IF_18
0x2b80	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       989	clone.c	FUNCTION_26	IF_18	CALL_41
0x2b87	          0x4889c7	                            mov rdi, rax	       989	clone.c	FUNCTION_26	IF_18	CALL_41
0x2b8a	      0xe800000000	                          call 0x4002bcf	       989	clone.c	FUNCTION_26	IF_18	CALL_41
0x2b8f	    0x488b05000000	            mov rax, qword [0x04002bd6] 	       992	clone.c	FUNCTION_26	IF_22
0x2b96	          0x4885c0	                           test rax, rax	       992	clone.c	FUNCTION_26	IF_22
0x2b99	            0x7432	                            je 0x4002c0d	       992	clone.c	FUNCTION_26	IF_22
0x2b9b	    0x488b05000000	            mov rax, qword [0x04002be2] 	       993	clone.c	FUNCTION_26	IF_22	IF_23	CALL_42
0x2ba2	          0x4889c7	                            mov rdi, rax	       993	clone.c	FUNCTION_26	IF_22	IF_23	CALL_42
0x2ba5	      0xe815faffff	                     call sym.dir_exists	       993	clone.c	FUNCTION_26	IF_22	IF_23	CALL_42
0x2baa	            0x85c0	                           test eax, eax	       993	clone.c	FUNCTION_26	IF_22	IF_23	CALL_42
0x2bac	            0x740f	                            je 0x4002bfd	       993	clone.c	FUNCTION_26	IF_22	IF_23	CALL_42
0x2bae	    0x8b0500000000	            mov eax, dword [0x04002bf4] 	       994	clone.c	FUNCTION_26	IF_22	IF_23
0x2bb4	          0x83c804	                               or eax, 4	       994	clone.c	FUNCTION_26	IF_22	IF_23
0x2bb7	    0x890500000000	            mov dword [0x04002bfd], eax 	       994	clone.c	FUNCTION_26	IF_22	IF_23
0x2bbd	    0x488b05000000	            mov rax, qword [0x04002c04] 	       995	clone.c	FUNCTION_26	IF_22
0x2bc4	    0x488905000000	            mov qword [0x04002c0b], rax 	       995	clone.c	FUNCTION_26	IF_22
0x2bcb	            0xeb26	                           jmp 0x4002c33	       995	clone.c	FUNCTION_26	IF_22
0x2bcd	    0x83bdc0feffff	              cmp dword [rbp - 0x140], 0	       997	clone.c	FUNCTION_26	ELSE_7	IF_24
0x2bd4	            0x740f	                            je 0x4002c25	       997	clone.c	FUNCTION_26	ELSE_7	IF_24
0x2bd6	    0x8b0500000000	            mov eax, dword [0x04002c1c] 	       998	clone.c	FUNCTION_26	ELSE_7	IF_24
0x2bdc	          0x83c804	                               or eax, 4	       998	clone.c	FUNCTION_26	ELSE_7	IF_24
0x2bdf	    0x890500000000	            mov dword [0x04002c25], eax 	       998	clone.c	FUNCTION_26	ELSE_7	IF_24
0x2be5	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       999	clone.c	FUNCTION_26	ELSE_7
0x2bec	    0x488905000000	            mov qword [0x04002c33], rax 	       999	clone.c	FUNCTION_26	ELSE_7
0x2bf3	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      1001	clone.c	FUNCTION_26	IF_25	CALL_43
0x2bfa	          0x4889c7	                            mov rdi, rax	      1001	clone.c	FUNCTION_26	IF_25	CALL_43
0x2bfd	      0xe800000000	                          call 0x4002c42	      1001	clone.c	FUNCTION_26	IF_25	CALL_43
0x2c02	            0x85c0	                           test eax, eax	      1001	clone.c	FUNCTION_26	IF_25	CALL_43
0x2c04	            0x7924	                           jns 0x4002c6a	      1001	clone.c	FUNCTION_26	IF_25	CALL_43
0x2c06	      0xbf00000000	                              mov edi, 0	      1002	clone.c	FUNCTION_26	CALL_45
0x2c0b	      0xe8ebd6ffff	                               call sym.	      1002	clone.c	FUNCTION_26	CALL_45
0x2c10	          0x4889c2	                            mov rdx, rax	      1002	clone.c	FUNCTION_26	CALL_45
0x2c13	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      1002	clone.c	FUNCTION_26	CALL_45
0x2c1a	          0x4889c6	                            mov rsi, rax	      1002	clone.c	FUNCTION_26	CALL_45
0x2c1d	          0x4889d7	                            mov rdi, rdx	      1002	clone.c	FUNCTION_26	CALL_45
0x2c20	      0xb800000000	                              mov eax, 0	      1002	clone.c	FUNCTION_26	CALL_45
0x2c25	      0xe800000000	                          call 0x4002c6a	      1002	clone.c	FUNCTION_26	CALL_45
0x2c2a	    0x8b0500000000	            mov eax, dword [0x04002c70] 	      1004	clone.c	FUNCTION_26	IF_26
0x2c30	            0x85c0	                           test eax, eax	      1004	clone.c	FUNCTION_26	IF_26
0x2c32	            0x7862	                            js 0x4002cd6	      1004	clone.c	FUNCTION_26	IF_26
0x2c34	    0x8b0500000000	            mov eax, dword [0x04002c7a] 	      1005	clone.c	FUNCTION_26	IF_26	IF_27
0x2c3a	            0x85c0	                           test eax, eax	      1005	clone.c	FUNCTION_26	IF_26	IF_27
0x2c3c	            0x742d	                            je 0x4002cab	      1005	clone.c	FUNCTION_26	IF_26	IF_27
0x2c3e	      0xbf00000000	                              mov edi, 0	      1006	clone.c	FUNCTION_26	IF_26	CALL_47
0x2c43	      0xe8b3d6ffff	                               call sym.	      1006	clone.c	FUNCTION_26	IF_26	CALL_47
0x2c48	          0x4889c1	                            mov rcx, rax	      1006	clone.c	FUNCTION_26	IF_26	CALL_47
0x2c4b	    0x488b05000000	            mov rax, qword [0x04002c92] 	      1006	clone.c	FUNCTION_26	IF_26	CALL_47
0x2c52	    0x488b95e0feff	            mov rdx, qword [rbp - 0x120]	      1006	clone.c	FUNCTION_26	IF_26	CALL_47
0x2c59	          0x4889ce	                            mov rsi, rcx	      1006	clone.c	FUNCTION_26	IF_26	CALL_47
0x2c5c	          0x4889c7	                            mov rdi, rax	      1006	clone.c	FUNCTION_26	IF_26	CALL_47
0x2c5f	      0xb800000000	                              mov eax, 0	      1006	clone.c	FUNCTION_26	IF_26	CALL_47
0x2c64	      0xe800000000	                          call 0x4002ca9	      1006	clone.c	FUNCTION_26	IF_26	CALL_47
0x2c69	            0xeb2b	                           jmp 0x4002cd6	      1006	clone.c	FUNCTION_26	IF_26	CALL_47
0x2c6b	      0xbf00000000	                              mov edi, 0	      1008	clone.c	FUNCTION_26	IF_26	CALL_49
0x2c70	      0xe886d6ffff	                               call sym.	      1008	clone.c	FUNCTION_26	IF_26	CALL_49
0x2c75	          0x4889c1	                            mov rcx, rax	      1008	clone.c	FUNCTION_26	IF_26	CALL_49
0x2c78	    0x488b05000000	            mov rax, qword [0x04002cbf] 	      1008	clone.c	FUNCTION_26	IF_26	CALL_49
0x2c7f	    0x488b95e0feff	            mov rdx, qword [rbp - 0x120]	      1008	clone.c	FUNCTION_26	IF_26	CALL_49
0x2c86	          0x4889ce	                            mov rsi, rcx	      1008	clone.c	FUNCTION_26	IF_26	CALL_49
0x2c89	          0x4889c7	                            mov rdi, rax	      1008	clone.c	FUNCTION_26	IF_26	CALL_49
0x2c8c	      0xb800000000	                              mov eax, 0	      1008	clone.c	FUNCTION_26	IF_26	CALL_49
0x2c91	      0xe800000000	                          call 0x4002cd6	      1008	clone.c	FUNCTION_26	IF_26	CALL_49
0x2c96	    0x8b0500000000	            mov eax, dword [0x04002cdc] 	      1011	clone.c	FUNCTION_26	IF_28
0x2c9c	            0x85c0	                           test eax, eax	      1011	clone.c	FUNCTION_26	IF_28
0x2c9e	     0xf842d010000	                            je 0x4002e11	      1011	clone.c	FUNCTION_26	IF_28
0x2ca4	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1013	clone.c	FUNCTION_26	IF_28
0x2cac	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      1013	clone.c	FUNCTION_26	IF_28
0x2cb4	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1013	clone.c	FUNCTION_26	IF_28
0x2cbc	      0xbf00000000	                              mov edi, 0	      1016	clone.c	FUNCTION_26	IF_28	CALL_50
0x2cc1	      0xe800000000	                          call 0x4002d06	      1016	clone.c	FUNCTION_26	IF_28	CALL_50
0x2cc6	      0xbe00000000	                              mov esi, 0	      1017	clone.c	FUNCTION_26	IF_28	CALL_51
0x2ccb	      0xbf00000000	                              mov edi, 0	      1017	clone.c	FUNCTION_26	IF_28	CALL_51
0x2cd0	      0xe800000000	                          call 0x4002d15	      1017	clone.c	FUNCTION_26	IF_28	CALL_51
0x2cd5	    0x488b05000000	            mov rax, qword [0x04002d1c] 	      1023	clone.c	FUNCTION_26	IF_28	FUNCTION_1
0x2cdc	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	      1023	clone.c	FUNCTION_26	IF_28	FUNCTION_1
0x2ce3	            0xeb46	                           jmp 0x4002d6b	      1023	clone.c	FUNCTION_26	IF_28	FUNCTION_1
0x2ce5	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	      1024	clone.c	FUNCTION_26	IF_28	FUNCTION_1	CALL_1
0x2cec	          0x488b10	                    mov rdx, qword [rax]	      1024	clone.c	FUNCTION_26	IF_28	FUNCTION_1	CALL_1
0x2cef	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1024	clone.c	FUNCTION_26	IF_28	FUNCTION_1	CALL_1
0x2cf3	      0xbe00000000	                              mov esi, 0	      1024	clone.c	FUNCTION_26	IF_28	FUNCTION_1	CALL_1
0x2cf8	          0x4889c7	                            mov rdi, rax	      1024	clone.c	FUNCTION_26	IF_28	FUNCTION_1	CALL_1
0x2cfb	      0xb800000000	                              mov eax, 0	      1024	clone.c	FUNCTION_26	IF_28	FUNCTION_1	CALL_1
0x2d00	      0xe800000000	                          call 0x4002d45	      1024	clone.c	FUNCTION_26	IF_28	FUNCTION_1	CALL_1
0x2d05	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1027	clone.c	FUNCTION_26	IF_28	FUNCTION_1	CALL_3
0x2d09	      0xbe00000000	                              mov esi, 0	      1027	clone.c	FUNCTION_26	IF_28	FUNCTION_1	CALL_3
0x2d0e	          0x4889c7	                            mov rdi, rax	      1027	clone.c	FUNCTION_26	IF_28	FUNCTION_1	CALL_3
0x2d11	      0xe800000000	                          call 0x4002d56	      1027	clone.c	FUNCTION_26	IF_28	FUNCTION_1	CALL_3
0x2d16	          0x4889c6	                            mov rsi, rax	      1026	clone.c	FUNCTION_26	IF_28	FUNCTION_1	CALL_2
0x2d19	      0xbf00000000	                              mov edi, 0	      1026	clone.c	FUNCTION_26	IF_28	FUNCTION_1	CALL_2
0x2d1e	      0xe800000000	                          call 0x4002d63	      1026	clone.c	FUNCTION_26	IF_28	FUNCTION_1	CALL_2
0x2d23	    0x48838518ffff	            add qword [rbp - 0xe8], 0x10	      1023	clone.c	FUNCTION_26	IF_28	FUNCTION_1
0x2d2b	    0x4883bd18ffff	               cmp qword [rbp - 0xe8], 0	      1023	clone.c	FUNCTION_26	IF_28	FUNCTION_1
0x2d33	            0x741f	                            je 0x4002d94	      1023	clone.c	FUNCTION_26	IF_28	FUNCTION_1
0x2d35	    0x488b05000000	            mov rax, qword [0x04002d7c] 	      1023	clone.c	FUNCTION_26	IF_28	FUNCTION_1
0x2d3c	    0x8b1500000000	            mov edx, dword [0x04002d82] 	      1023	clone.c	FUNCTION_26	IF_28	FUNCTION_1
0x2d42	            0x89d2	                            mov edx, edx	      1023	clone.c	FUNCTION_26	IF_28	FUNCTION_1
0x2d44	        0x48c1e204	                              shl rdx, 4	      1023	clone.c	FUNCTION_26	IF_28	FUNCTION_1
0x2d48	          0x4801d0	                            add rax, rdx	      1023	clone.c	FUNCTION_26	IF_28	FUNCTION_1
0x2d4b	    0x483b8518ffff	             cmp rax, qword [rbp - 0xe8]	      1023	clone.c	FUNCTION_26	IF_28	FUNCTION_1
0x2d52	            0x7791	                            ja 0x4002d25	      1023	clone.c	FUNCTION_26	IF_28	FUNCTION_1
0x2d54	    0x8b0500000000	            mov eax, dword [0x04002d9a] 	      1030	clone.c	FUNCTION_26	IF_28	IF_29
0x2d5a	            0x85c0	                           test eax, eax	      1030	clone.c	FUNCTION_26	IF_28	IF_29
0x2d5c	            0x7421	                            je 0x4002dbf	      1030	clone.c	FUNCTION_26	IF_28	IF_29
0x2d5e	    0x8b0500000000	            mov eax, dword [0x04002da4] 	      1031	clone.c	FUNCTION_26	IF_28	IF_29
0x2d64	            0x85c0	                           test eax, eax	      1030	clone.c	FUNCTION_26	IF_28	IF_29
0x2d66	            0x7417	                            je 0x4002dbf	      1030	clone.c	FUNCTION_26	IF_28	IF_29
0x2d68	      0xbf00000000	                              mov edi, 0	      1032	clone.c	FUNCTION_26	IF_28	IF_29	CALL_53
0x2d6d	      0xe889d5ffff	                               call sym.	      1032	clone.c	FUNCTION_26	IF_28	IF_29	CALL_53
0x2d72	          0x4889c7	                            mov rdi, rax	      1032	clone.c	FUNCTION_26	IF_28	IF_29	CALL_53
0x2d75	      0xb800000000	                              mov eax, 0	      1032	clone.c	FUNCTION_26	IF_28	IF_29	CALL_53
0x2d7a	      0xe800000000	                          call 0x4002dbf	      1032	clone.c	FUNCTION_26	IF_28	IF_29	CALL_53
0x2d7f	    0x8b0500000000	            mov eax, dword [0x04002dc5] 	      1034	clone.c	FUNCTION_26	IF_28	ELSE_9	IF_30
0x2d85	            0x85c0	                           test eax, eax	      1034	clone.c	FUNCTION_26	IF_28	ELSE_9	IF_30
0x2d87	            0x7420	                            je 0x4002de9	      1034	clone.c	FUNCTION_26	IF_28	ELSE_9	IF_30
0x2d89	      0xbe00000000	                              mov esi, 0	      1035	clone.c	FUNCTION_26	IF_28	ELSE_9	IF_30	CALL_54
0x2d8e	      0xbf00000000	                              mov edi, 0	      1035	clone.c	FUNCTION_26	IF_28	ELSE_9	IF_30	CALL_54
0x2d93	      0xe800000000	                          call 0x4002dd8	      1035	clone.c	FUNCTION_26	IF_28	ELSE_9	IF_30	CALL_54
0x2d98	      0xbe00000000	                              mov esi, 0	      1037	clone.c	FUNCTION_26	IF_28	ELSE_9	IF_30	CALL_55
0x2d9d	      0xbf00000000	                              mov edi, 0	      1037	clone.c	FUNCTION_26	IF_28	ELSE_9	IF_30	CALL_55
0x2da2	      0xe800000000	                          call 0x4002de7	      1037	clone.c	FUNCTION_26	IF_28	ELSE_9	IF_30	CALL_55
0x2da7	            0xeb28	                           jmp 0x4002e11	      1037	clone.c	FUNCTION_26	IF_28	ELSE_9	IF_30	CALL_55
0x2da9	    0x8b0500000000	            mov eax, dword [0x04002def] 	      1039	clone.c	FUNCTION_26	IF_28	ELSE_10	IF_31
0x2daf	            0x85c0	                           test eax, eax	      1039	clone.c	FUNCTION_26	IF_28	ELSE_10	IF_31
0x2db1	            0x741e	                            je 0x4002e11	      1039	clone.c	FUNCTION_26	IF_28	ELSE_10	IF_31
0x2db3	      0xbe00000000	                              mov esi, 0	      1040	clone.c	FUNCTION_26	IF_28	ELSE_10	IF_31	CALL_56
0x2db8	      0xbf00000000	                              mov edi, 0	      1040	clone.c	FUNCTION_26	IF_28	ELSE_10	IF_31	CALL_56
0x2dbd	      0xe800000000	                          call 0x4002e02	      1040	clone.c	FUNCTION_26	IF_28	ELSE_10	IF_31	CALL_56
0x2dc2	      0xbe00000000	                              mov esi, 0	      1042	clone.c	FUNCTION_26	IF_28	ELSE_10	IF_31	CALL_57
0x2dc7	      0xbf00000000	                              mov edi, 0	      1042	clone.c	FUNCTION_26	IF_28	ELSE_10	IF_31	CALL_57
0x2dcc	      0xe800000000	                          call 0x4002e11	      1042	clone.c	FUNCTION_26	IF_28	ELSE_10	IF_31	CALL_57
0x2dd1	    0x488b15000000	            mov rdx, qword [0x04002e18] 	      1047	clone.c	FUNCTION_26	CALL_58
0x2dd8	    0x488b35000000	            mov rsi, qword [0x04002e1f] 	      1047	clone.c	FUNCTION_26	CALL_58
0x2ddf	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	      1047	clone.c	FUNCTION_26	CALL_58
0x2de6	      0xb901000000	                              mov ecx, 1	      1047	clone.c	FUNCTION_26	CALL_58
0x2deb	          0x4889c7	                            mov rdi, rax	      1047	clone.c	FUNCTION_26	CALL_58
0x2dee	      0xe800000000	                          call 0x4002e33	      1047	clone.c	FUNCTION_26	CALL_58
0x2df3	    0x488b05000000	            mov rax, qword [0x04002e3a] 	      1049	clone.c	FUNCTION_26	IF_32
0x2dfa	          0x4885c0	                           test rax, rax	      1049	clone.c	FUNCTION_26	IF_32
0x2dfd	            0x740e	                            je 0x4002e4d	      1049	clone.c	FUNCTION_26	IF_32
0x2dff	    0x488b05000000	            mov rax, qword [0x04002e46] 	      1050	clone.c	FUNCTION_26	IF_32
0x2e06	    0x488985d8feff	            mov qword [rbp - 0x128], rax	      1050	clone.c	FUNCTION_26	IF_32
0x2e0d	      0xbf00000000	                              mov edi, 0	      1052	clone.c	FUNCTION_26	CALL_59
0x2e12	      0xe822f4ffff	                   call sym.write_config	      1052	clone.c	FUNCTION_26	CALL_59
0x2e17	      0xbe00000000	                              mov esi, 0	      1054	clone.c	FUNCTION_26	CALL_60
0x2e1c	      0xbf00000000	                              mov edi, 0	      1054	clone.c	FUNCTION_26	CALL_60
0x2e21	      0xe800000000	                          call 0x4002e66	      1054	clone.c	FUNCTION_26	CALL_60
0x2e26	    0x8b0500000000	            mov eax, dword [0x04002e6c] 	      1056	clone.c	FUNCTION_26	IF_33
0x2e2c	            0x85c0	                           test eax, eax	      1056	clone.c	FUNCTION_26	IF_33
0x2e2e	            0x743c	                            je 0x4002eac	      1056	clone.c	FUNCTION_26	IF_33
0x2e30	    0x8b0500000000	            mov eax, dword [0x04002e76] 	      1057	clone.c	FUNCTION_26	IF_33	IF_34
0x2e36	            0x85c0	                           test eax, eax	      1057	clone.c	FUNCTION_26	IF_33	IF_34
0x2e38	            0x740b	                            je 0x4002e85	      1057	clone.c	FUNCTION_26	IF_33	IF_34
0x2e3a	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	      1058	clone.c	FUNCTION_26	IF_33	IF_34
0x2e45	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      1059	clone.c	FUNCTION_26	IF_33	CALL_61
0x2e4c	        0x488d4590	                   lea rax, [rbp - 0x70]	      1059	clone.c	FUNCTION_26	IF_33	CALL_61
0x2e50	          0x4889d6	                            mov rsi, rdx	      1059	clone.c	FUNCTION_26	IF_33	CALL_61
0x2e53	          0x4889c7	                            mov rdi, rax	      1059	clone.c	FUNCTION_26	IF_33	CALL_61
0x2e56	      0xe86bd4ffff	                  call sym.strbuf_addstr	      1059	clone.c	FUNCTION_26	IF_33	CALL_61
0x2e5b	      0xbe00000000	                              mov esi, 0	      1061	clone.c	FUNCTION_26	IF_33	CALL_62
0x2e60	      0xbf00000000	                              mov edi, 0	      1061	clone.c	FUNCTION_26	IF_33	CALL_62
0x2e65	      0xe800000000	                          call 0x4002eaa	      1061	clone.c	FUNCTION_26	IF_33	CALL_62
0x2e6a	            0xeb1d	                           jmp 0x4002ec9	      1061	clone.c	FUNCTION_26	IF_33	CALL_62
0x2e6c	    0x488b15000000	            mov rdx, qword [0x04002eb3] 	      1063	clone.c	FUNCTION_26	ELSE_11	CALL_63
0x2e73	        0x488d4590	                   lea rax, [rbp - 0x70]	      1063	clone.c	FUNCTION_26	ELSE_11	CALL_63
0x2e77	      0xbe00000000	                              mov esi, 0	      1063	clone.c	FUNCTION_26	ELSE_11	CALL_63
0x2e7c	          0x4889c7	                            mov rdi, rax	      1063	clone.c	FUNCTION_26	ELSE_11	CALL_63
0x2e7f	      0xb800000000	                              mov eax, 0	      1063	clone.c	FUNCTION_26	ELSE_11	CALL_63
0x2e84	      0xe800000000	                          call 0x4002ec9	      1063	clone.c	FUNCTION_26	ELSE_11	CALL_63
0x2e89	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1066	clone.c	FUNCTION_26	CALL_64
0x2e8d	    0x488b9510ffff	             mov rdx, qword [rbp - 0xf0]	      1066	clone.c	FUNCTION_26	CALL_64
0x2e94	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      1066	clone.c	FUNCTION_26	CALL_64
0x2e9b	      0xbe00000000	                              mov esi, 0	      1066	clone.c	FUNCTION_26	CALL_64
0x2ea0	          0x4889c7	                            mov rdi, rax	      1066	clone.c	FUNCTION_26	CALL_64
0x2ea3	      0xb800000000	                              mov eax, 0	      1066	clone.c	FUNCTION_26	CALL_64
0x2ea8	      0xe800000000	                          call 0x4002eed	      1066	clone.c	FUNCTION_26	CALL_64
0x2ead	    0x488b15000000	            mov rdx, qword [0x04002ef4] 	      1067	clone.c	FUNCTION_26	CALL_65
0x2eb4	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      1067	clone.c	FUNCTION_26	CALL_65
0x2ebb	      0xbe00000000	                              mov esi, 0	      1067	clone.c	FUNCTION_26	CALL_65
0x2ec0	          0x4889c7	                            mov rdi, rax	      1067	clone.c	FUNCTION_26	CALL_65
0x2ec3	      0xb800000000	                              mov eax, 0	      1067	clone.c	FUNCTION_26	CALL_65
0x2ec8	      0xe800000000	                          call 0x4002f0d	      1067	clone.c	FUNCTION_26	CALL_65
0x2ecd	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1068	clone.c	FUNCTION_26	CALL_66
0x2ed4	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	      1068	clone.c	FUNCTION_26	CALL_66
0x2edb	          0x4889d6	                            mov rsi, rdx	      1068	clone.c	FUNCTION_26	CALL_66
0x2ede	          0x4889c7	                            mov rdi, rax	      1068	clone.c	FUNCTION_26	CALL_66
0x2ee1	      0xe800000000	                          call 0x4002f26	      1068	clone.c	FUNCTION_26	CALL_66
0x2ee6	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      1069	clone.c	FUNCTION_26	CALL_67
0x2eed	      0xbe00000000	                              mov esi, 0	      1069	clone.c	FUNCTION_26	CALL_67
0x2ef2	          0x4889c7	                            mov rdi, rax	      1069	clone.c	FUNCTION_26	CALL_67
0x2ef5	      0xe8c4d2ffff	                  call sym.strbuf_setlen	      1069	clone.c	FUNCTION_26	CALL_67
0x2efa	    0x8b0500000000	            mov eax, dword [0x04002f40] 	      1071	clone.c	FUNCTION_26	IF_35
0x2f00	            0x85c0	                           test eax, eax	      1071	clone.c	FUNCTION_26	IF_35
0x2f02	            0x7448	                            je 0x4002f8c	      1071	clone.c	FUNCTION_26	IF_35
0x2f04	    0x488b15000000	            mov rdx, qword [0x04002f4b] 	      1072	clone.c	FUNCTION_26	IF_35	CALL_68
0x2f0b	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      1072	clone.c	FUNCTION_26	IF_35	CALL_68
0x2f12	      0xbe00000000	                              mov esi, 0	      1072	clone.c	FUNCTION_26	IF_35	CALL_68
0x2f17	          0x4889c7	                            mov rdi, rax	      1072	clone.c	FUNCTION_26	IF_35	CALL_68
0x2f1a	      0xb800000000	                              mov eax, 0	      1072	clone.c	FUNCTION_26	IF_35	CALL_68
0x2f1f	      0xe800000000	                          call 0x4002f64	      1072	clone.c	FUNCTION_26	IF_35	CALL_68
0x2f24	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1073	clone.c	FUNCTION_26	IF_35	CALL_69
0x2f2b	      0xbe00000000	                              mov esi, 0	      1073	clone.c	FUNCTION_26	IF_35	CALL_69
0x2f30	          0x4889c7	                            mov rdi, rax	      1073	clone.c	FUNCTION_26	IF_35	CALL_69
0x2f33	      0xe800000000	                          call 0x4002f78	      1073	clone.c	FUNCTION_26	IF_35	CALL_69
0x2f38	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      1074	clone.c	FUNCTION_26	IF_35	CALL_70
0x2f3f	      0xbe00000000	                              mov esi, 0	      1074	clone.c	FUNCTION_26	IF_35	CALL_70
0x2f44	          0x4889c7	                            mov rdi, rax	      1074	clone.c	FUNCTION_26	IF_35	CALL_70
0x2f47	      0xe872d2ffff	                  call sym.strbuf_setlen	      1074	clone.c	FUNCTION_26	IF_35	CALL_70
0x2f4c	    0x8b0500000000	            mov eax, dword [0x04002f92] 	      1077	clone.c	FUNCTION_26	IF_36
0x2f52	            0x85c0	                           test eax, eax	      1077	clone.c	FUNCTION_26	IF_36
0x2f54	            0x750a	                           jne 0x4002fa0	      1077	clone.c	FUNCTION_26	IF_36
0x2f56	    0x8b0500000000	            mov eax, dword [0x04002f9c] 	      1077	clone.c	FUNCTION_26	IF_36
0x2f5c	            0x85c0	                           test eax, eax	      1077	clone.c	FUNCTION_26	IF_36
0x2f5e	            0x7405	                            je 0x4002fa5	      1077	clone.c	FUNCTION_26	IF_36
0x2f60	      0xe823deffff	                call sym.setup_reference	      1078	clone.c	FUNCTION_26	CALL_71
0x2f65	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1080	clone.c	FUNCTION_26
0x2f69	        0x488945d0	             mov qword [rbp - 0x30], rax	      1080	clone.c	FUNCTION_26
0x2f6d	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1081	clone.c	FUNCTION_26	CALL_72
0x2f71	          0x4889c6	                            mov rsi, rax	      1081	clone.c	FUNCTION_26	CALL_72
0x2f74	      0xbf01000000	                              mov edi, 1	      1081	clone.c	FUNCTION_26	CALL_72
0x2f79	      0xe800000000	                          call 0x4002fbe	      1081	clone.c	FUNCTION_26	CALL_72
0x2f7e	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	      1081	clone.c	FUNCTION_26	CALL_72
0x2f85	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      1083	clone.c	FUNCTION_26	CALL_73
0x2f8c	      0xbe00000000	                              mov esi, 0	      1083	clone.c	FUNCTION_26	CALL_73
0x2f91	          0x4889c7	                            mov rdi, rax	      1083	clone.c	FUNCTION_26	CALL_73
0x2f94	      0xe825d2ffff	                  call sym.strbuf_setlen	      1083	clone.c	FUNCTION_26	CALL_73
0x2f99	    0x488b05000000	            mov rax, qword [0x04002fe0] 	      1085	clone.c	FUNCTION_26	CALL_74
0x2fa0	          0x4889c7	                            mov rdi, rax	      1085	clone.c	FUNCTION_26	CALL_74
0x2fa3	      0xe800000000	                          call 0x4002fe8	      1085	clone.c	FUNCTION_26	CALL_74
0x2fa8	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	      1085	clone.c	FUNCTION_26	CALL_74
0x2faf	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1086	clone.c	FUNCTION_26	CALL_75
0x2fb6	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1086	clone.c	FUNCTION_26	CALL_75
0x2fba	          0x488b10	                    mov rdx, qword [rax]	      1086	clone.c	FUNCTION_26	CALL_75
0x2fbd	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1086	clone.c	FUNCTION_26	CALL_75
0x2fc4	          0x4889d6	                            mov rsi, rdx	      1086	clone.c	FUNCTION_26	CALL_75
0x2fc7	          0x4889c7	                            mov rdi, rax	      1086	clone.c	FUNCTION_26	CALL_75
0x2fca	      0xe800000000	                          call 0x400300f	      1086	clone.c	FUNCTION_26	CALL_75
0x2fcf	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	      1086	clone.c	FUNCTION_26	CALL_75
0x2fd6	    0x8b1500000000	            mov edx, dword [0x0400301c] 	      1087	clone.c	FUNCTION_26	CALL_76
0x2fdc	    0x8b0d00000000	            mov ecx, dword [0x04003022] 	      1087	clone.c	FUNCTION_26	CALL_76
0x2fe2	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1087	clone.c	FUNCTION_26	CALL_76
0x2fe9	            0x89ce	                            mov esi, ecx	      1087	clone.c	FUNCTION_26	CALL_76
0x2feb	          0x4889c7	                            mov rdi, rax	      1087	clone.c	FUNCTION_26	CALL_76
0x2fee	      0xe800000000	                          call 0x4003033	      1087	clone.c	FUNCTION_26	CALL_76
0x2ff3	    0x8b1500000000	            mov edx, dword [0x04003039] 	      1088	clone.c	FUNCTION_26
0x2ff9	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1088	clone.c	FUNCTION_26
0x3000	          0x895058	             mov dword [rax + 0x58], edx	      1088	clone.c	FUNCTION_26
0x3003	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	      1090	clone.c	FUNCTION_26	CALL_77
0x300a	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1090	clone.c	FUNCTION_26	CALL_77
0x300e	          0x488b00	                    mov rax, qword [rax]	      1090	clone.c	FUNCTION_26	CALL_77
0x3011	    0x488d95b0feff	                  lea rdx, [rbp - 0x150]	      1090	clone.c	FUNCTION_26	CALL_77
0x3018	          0x4889d6	                            mov rsi, rdx	      1090	clone.c	FUNCTION_26	CALL_77
0x301b	          0x4889c7	                            mov rdi, rax	      1090	clone.c	FUNCTION_26	CALL_77
0x301e	      0xe832d7ffff	                  call sym.get_repo_path	      1090	clone.c	FUNCTION_26	CALL_77
0x3023	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	      1090	clone.c	FUNCTION_26	CALL_77
0x302a	    0x8b0500000000	            mov eax, dword [0x04003070] 	      1091	clone.c	FUNCTION_26
0x3030	            0x85c0	                           test eax, eax	      1091	clone.c	FUNCTION_26
0x3032	            0x741b	                            je 0x400308f	      1091	clone.c	FUNCTION_26
0x3034	    0x4883bd30ffff	               cmp qword [rbp - 0xd0], 0	      1091	clone.c	FUNCTION_26
0x303c	            0x7411	                            je 0x400308f	      1091	clone.c	FUNCTION_26
0x303e	    0x8b85b0feffff	            mov eax, dword [rbp - 0x150]	      1091	clone.c	FUNCTION_26
0x3044	            0x85c0	                           test eax, eax	      1091	clone.c	FUNCTION_26
0x3046	            0x7507	                           jne 0x400308f	      1091	clone.c	FUNCTION_26
0x3048	      0xb801000000	                              mov eax, 1	      1091	clone.c	FUNCTION_26
0x304d	            0xeb05	                           jmp 0x4003094	      1091	clone.c	FUNCTION_26
0x304f	      0xb800000000	                              mov eax, 0	      1091	clone.c	FUNCTION_26
0x3054	    0x8985b4feffff	            mov dword [rbp - 0x14c], eax	      1091	clone.c	FUNCTION_26
0x305a	    0x83bdb4feffff	              cmp dword [rbp - 0x14c], 0	      1092	clone.c	FUNCTION_26	IF_37
0x3061	     0xf84dd000000	                            je 0x4003184	      1092	clone.c	FUNCTION_26	IF_37
0x3067	    0x488b05000000	            mov rax, qword [0x040030ae] 	      1093	clone.c	FUNCTION_26	IF_37	IF_38
0x306e	          0x4885c0	                           test rax, rax	      1093	clone.c	FUNCTION_26	IF_37	IF_38
0x3071	            0x7417	                            je 0x40030ca	      1093	clone.c	FUNCTION_26	IF_37	IF_38
0x3073	      0xbf00000000	                              mov edi, 0	      1094	clone.c	FUNCTION_26	IF_37	CALL_79
0x3078	      0xe87ed2ffff	                               call sym.	      1094	clone.c	FUNCTION_26	IF_37	CALL_79
0x307d	          0x4889c7	                            mov rdi, rax	      1094	clone.c	FUNCTION_26	IF_37	CALL_79
0x3080	      0xb800000000	                              mov eax, 0	      1094	clone.c	FUNCTION_26	IF_37	CALL_79
0x3085	      0xe800000000	                          call 0x40030ca	      1094	clone.c	FUNCTION_26	IF_37	CALL_79
0x308a	    0x488b05000000	            mov rax, qword [0x040030d1] 	      1095	clone.c	FUNCTION_26	IF_37	IF_39
0x3091	          0x4885c0	                           test rax, rax	      1095	clone.c	FUNCTION_26	IF_37	IF_39
0x3094	            0x7417	                            je 0x40030ed	      1095	clone.c	FUNCTION_26	IF_37	IF_39
0x3096	      0xbf00000000	                              mov edi, 0	      1096	clone.c	FUNCTION_26	IF_37	CALL_81
0x309b	      0xe85bd2ffff	                               call sym.	      1096	clone.c	FUNCTION_26	IF_37	CALL_81
0x30a0	          0x4889c7	                            mov rdi, rax	      1096	clone.c	FUNCTION_26	IF_37	CALL_81
0x30a3	      0xb800000000	                              mov eax, 0	      1096	clone.c	FUNCTION_26	IF_37	CALL_81
0x30a8	      0xe800000000	                          call 0x40030ed	      1096	clone.c	FUNCTION_26	IF_37	CALL_81
0x30ad	    0x8b0500000000	            mov eax, dword [0x040030f3] 	      1097	clone.c	FUNCTION_26	IF_37	IF_40
0x30b3	            0x85c0	                           test eax, eax	      1097	clone.c	FUNCTION_26	IF_37	IF_40
0x30b5	            0x7417	                            je 0x400310e	      1097	clone.c	FUNCTION_26	IF_37	IF_40
0x30b7	      0xbf00000000	                              mov edi, 0	      1098	clone.c	FUNCTION_26	IF_37	CALL_83
0x30bc	      0xe83ad2ffff	                               call sym.	      1098	clone.c	FUNCTION_26	IF_37	CALL_83
0x30c1	          0x4889c7	                            mov rdi, rax	      1098	clone.c	FUNCTION_26	IF_37	CALL_83
0x30c4	      0xb800000000	                              mov eax, 0	      1098	clone.c	FUNCTION_26	IF_37	CALL_83
0x30c9	      0xe800000000	                          call 0x400310e	      1098	clone.c	FUNCTION_26	IF_37	CALL_83
0x30ce	    0x8b0500000000	            mov eax, dword [0x04003114] 	      1099	clone.c	FUNCTION_26	IF_37	IF_41
0x30d4	            0x85c0	                           test eax, eax	      1099	clone.c	FUNCTION_26	IF_37	IF_41
0x30d6	            0x7417	                            je 0x400312f	      1099	clone.c	FUNCTION_26	IF_37	IF_41
0x30d8	      0xbf00000000	                              mov edi, 0	      1100	clone.c	FUNCTION_26	IF_37	CALL_85
0x30dd	      0xe819d2ffff	                               call sym.	      1100	clone.c	FUNCTION_26	IF_37	CALL_85
0x30e2	          0x4889c7	                            mov rdi, rax	      1100	clone.c	FUNCTION_26	IF_37	CALL_85
0x30e5	      0xb800000000	                              mov eax, 0	      1100	clone.c	FUNCTION_26	IF_37	CALL_85
0x30ea	      0xe800000000	                          call 0x400312f	      1100	clone.c	FUNCTION_26	IF_37	CALL_85
0x30ef	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      1101	clone.c	FUNCTION_26	IF_37	IF_42	CALL_87
0x30f6	          0x4889c6	                            mov rsi, rax	      1101	clone.c	FUNCTION_26	IF_37	IF_42	CALL_87
0x30f9	      0xbf00000000	                              mov edi, 0	      1101	clone.c	FUNCTION_26	IF_37	IF_42	CALL_87
0x30fe	      0xb800000000	                              mov eax, 0	      1101	clone.c	FUNCTION_26	IF_37	IF_42	CALL_87
0x3103	      0xe800000000	                          call 0x4003148	      1101	clone.c	FUNCTION_26	IF_37	IF_42	CALL_87
0x3108	      0xbe00000000	                              mov esi, 0	      1101	clone.c	FUNCTION_26	IF_37	IF_42	CALL_87
0x310d	          0x4889c7	                            mov rdi, rax	      1101	clone.c	FUNCTION_26	IF_37	IF_42	CALL_87
0x3110	      0xe800000000	                          call 0x4003155	      1101	clone.c	FUNCTION_26	IF_37	IF_42	CALL_87
0x3115	            0x85c0	                           test eax, eax	      1101	clone.c	FUNCTION_26	IF_37	IF_42	CALL_87
0x3117	            0x752b	                           jne 0x4003184	      1101	clone.c	FUNCTION_26	IF_37	IF_42	CALL_87
0x3119	    0x8b0500000000	            mov eax, dword [0x0400315f] 	      1102	clone.c	FUNCTION_26	IF_37	IF_42	IF_43
0x311f	            0x85c0	                           test eax, eax	      1102	clone.c	FUNCTION_26	IF_37	IF_42	IF_43
0x3121	            0x7e17	                           jle 0x400317a	      1102	clone.c	FUNCTION_26	IF_37	IF_42	IF_43
0x3123	      0xbf00000000	                              mov edi, 0	      1103	clone.c	FUNCTION_26	IF_37	IF_42	CALL_89
0x3128	      0xe8ced1ffff	                               call sym.	      1103	clone.c	FUNCTION_26	IF_37	IF_42	CALL_89
0x312d	          0x4889c7	                            mov rdi, rax	      1103	clone.c	FUNCTION_26	IF_37	IF_42	CALL_89
0x3130	      0xb800000000	                              mov eax, 0	      1103	clone.c	FUNCTION_26	IF_37	IF_42	CALL_89
0x3135	      0xe800000000	                          call 0x400317a	      1103	clone.c	FUNCTION_26	IF_37	IF_42	CALL_89
0x313a	    0xc785b4feffff	              mov dword [rbp - 0x14c], 0	      1104	clone.c	FUNCTION_26	IF_37	IF_42
0x3144	    0x8b0500000000	            mov eax, dword [0x0400318a] 	      1107	clone.c	FUNCTION_26	IF_44
0x314a	            0x85c0	                           test eax, eax	      1107	clone.c	FUNCTION_26	IF_44
0x314c	            0x7e20	                           jle 0x40031ae	      1107	clone.c	FUNCTION_26	IF_44
0x314e	    0x83bdb4feffff	              cmp dword [rbp - 0x14c], 0	      1107	clone.c	FUNCTION_26	IF_44
0x3155	            0x7517	                           jne 0x40031ae	      1107	clone.c	FUNCTION_26	IF_44
0x3157	      0xbf00000000	                              mov edi, 0	      1108	clone.c	FUNCTION_26	CALL_91
0x315c	      0xe89ad1ffff	                               call sym.	      1108	clone.c	FUNCTION_26	CALL_91
0x3161	          0x4889c7	                            mov rdi, rax	      1108	clone.c	FUNCTION_26	CALL_91
0x3164	      0xb800000000	                              mov eax, 0	      1108	clone.c	FUNCTION_26	CALL_91
0x3169	      0xe800000000	                          call 0x40031ae	      1108	clone.c	FUNCTION_26	CALL_91
0x316e	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1109	clone.c	FUNCTION_26
0x3175	         0xfb65028	           movzx edx, byte [rax + 0x28] 	      1109	clone.c	FUNCTION_26
0x3179	          0x83ca04	                               or edx, 4	      1109	clone.c	FUNCTION_26
0x317c	          0x885028	               mov byte [rax + 0x28], dl	      1109	clone.c	FUNCTION_26
0x317f	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1111	clone.c	FUNCTION_26	CALL_92
0x3186	      0xba00000000	                              mov edx, 0	      1111	clone.c	FUNCTION_26	CALL_92
0x318b	      0xbe00000000	                              mov esi, 0	      1111	clone.c	FUNCTION_26	CALL_92
0x3190	          0x4889c7	                            mov rdi, rax	      1111	clone.c	FUNCTION_26	CALL_92
0x3193	      0xe800000000	                          call 0x40031d8	      1111	clone.c	FUNCTION_26	CALL_92
0x3198	    0x488b05000000	            mov rax, qword [0x040031df] 	      1113	clone.c	FUNCTION_26	IF_45
0x319f	          0x4885c0	                           test rax, rax	      1113	clone.c	FUNCTION_26	IF_45
0x31a2	            0x741b	                            je 0x40031ff	      1113	clone.c	FUNCTION_26	IF_45
0x31a4	    0x488b15000000	            mov rdx, qword [0x040031eb] 	      1114	clone.c	FUNCTION_26	IF_45	CALL_93
0x31ab	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1114	clone.c	FUNCTION_26	IF_45	CALL_93
0x31b2	      0xbe00000000	                              mov esi, 0	      1114	clone.c	FUNCTION_26	IF_45	CALL_93
0x31b7	          0x4889c7	                            mov rdi, rax	      1114	clone.c	FUNCTION_26	IF_45	CALL_93
0x31ba	      0xe800000000	                          call 0x40031ff	      1114	clone.c	FUNCTION_26	IF_45	CALL_93
0x31bf	    0x488b05000000	            mov rax, qword [0x04003206] 	      1116	clone.c	FUNCTION_26	IF_46
0x31c6	          0x4885c0	                           test rax, rax	      1116	clone.c	FUNCTION_26	IF_46
0x31c9	            0x741b	                            je 0x4003226	      1116	clone.c	FUNCTION_26	IF_46
0x31cb	    0x488b15000000	            mov rdx, qword [0x04003212] 	      1117	clone.c	FUNCTION_26	IF_46	CALL_94
0x31d2	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1117	clone.c	FUNCTION_26	IF_46	CALL_94
0x31d9	      0xbe00000000	                              mov esi, 0	      1117	clone.c	FUNCTION_26	IF_46	CALL_94
0x31de	          0x4889c7	                            mov rdi, rax	      1117	clone.c	FUNCTION_26	IF_46	CALL_94
0x31e1	      0xe800000000	                          call 0x4003226	      1117	clone.c	FUNCTION_26	IF_46	CALL_94
0x31e6	    0x8b0500000000	            mov eax, dword [0x0400322c] 	      1119	clone.c	FUNCTION_26	IF_47
0x31ec	            0x85c0	                           test eax, eax	      1119	clone.c	FUNCTION_26	IF_47
0x31ee	            0x7419	                            je 0x4003249	      1119	clone.c	FUNCTION_26	IF_47
0x31f0	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1120	clone.c	FUNCTION_26	IF_47	CALL_95
0x31f7	      0xba00000000	                              mov edx, 0	      1120	clone.c	FUNCTION_26	IF_47	CALL_95
0x31fc	      0xbe00000000	                              mov esi, 0	      1120	clone.c	FUNCTION_26	IF_47	CALL_95
0x3201	          0x4889c7	                            mov rdi, rax	      1120	clone.c	FUNCTION_26	IF_47	CALL_95
0x3204	      0xe800000000	                          call 0x4003249	      1120	clone.c	FUNCTION_26	IF_47	CALL_95
0x3209	    0x8b0500000000	            mov eax, dword [0x0400324f] 	      1122	clone.c	FUNCTION_26	IF_48
0x320f	            0x85c0	                           test eax, eax	      1122	clone.c	FUNCTION_26	IF_48
0x3211	            0x7419	                            je 0x400326c	      1122	clone.c	FUNCTION_26	IF_48
0x3213	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1123	clone.c	FUNCTION_26	CALL_96
0x321a	      0xba00000000	                              mov edx, 0	      1123	clone.c	FUNCTION_26	CALL_96
0x321f	      0xbe00000000	                              mov esi, 0	      1123	clone.c	FUNCTION_26	CALL_96
0x3224	          0x4889c7	                            mov rdi, rax	      1123	clone.c	FUNCTION_26	CALL_96
0x3227	      0xe800000000	                          call 0x400326c	      1123	clone.c	FUNCTION_26	CALL_96
0x322c	    0x488b05000000	            mov rax, qword [0x04003273] 	      1125	clone.c	FUNCTION_26	IF_49
0x3233	          0x4885c0	                           test rax, rax	      1125	clone.c	FUNCTION_26	IF_49
0x3236	            0x741b	                            je 0x4003293	      1125	clone.c	FUNCTION_26	IF_49
0x3238	    0x488b15000000	            mov rdx, qword [0x0400327f] 	      1126	clone.c	FUNCTION_26	IF_49	CALL_97
0x323f	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1126	clone.c	FUNCTION_26	IF_49	CALL_97
0x3246	      0xbe00000000	                              mov esi, 0	      1126	clone.c	FUNCTION_26	IF_49	CALL_97
0x324b	          0x4889c7	                            mov rdi, rax	      1126	clone.c	FUNCTION_26	IF_49	CALL_97
0x324e	      0xe800000000	                          call 0x4003293	      1126	clone.c	FUNCTION_26	IF_49	CALL_97
0x3253	    0x8b0500000000	            mov eax, dword [0x04003299] 	      1129	clone.c	FUNCTION_26	IF_50
0x3259	            0x85c0	                           test eax, eax	      1129	clone.c	FUNCTION_26	IF_50
0x325b	            0x7434	                            je 0x40032d1	      1129	clone.c	FUNCTION_26	IF_50
0x325d	    0x488b15000000	            mov rdx, qword [0x040032a4] 	      1131	clone.c	FUNCTION_26	IF_50
0x3264	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1130	clone.c	FUNCTION_26	IF_50	CALL_98
0x326b	      0xbe00000000	                              mov esi, 0	      1130	clone.c	FUNCTION_26	IF_50	CALL_98
0x3270	          0x4889c7	                            mov rdi, rax	      1130	clone.c	FUNCTION_26	IF_50	CALL_98
0x3273	      0xe800000000	                          call 0x40032b8	      1130	clone.c	FUNCTION_26	IF_50	CALL_98
0x3278	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1132	clone.c	FUNCTION_26	IF_50	CALL_99
0x327f	      0xba00000000	                              mov edx, 0	      1132	clone.c	FUNCTION_26	IF_50	CALL_99
0x3284	      0xbe00000000	                              mov esi, 0	      1132	clone.c	FUNCTION_26	IF_50	CALL_99
0x3289	          0x4889c7	                            mov rdi, rax	      1132	clone.c	FUNCTION_26	IF_50	CALL_99
0x328c	      0xe800000000	                          call 0x40032d1	      1132	clone.c	FUNCTION_26	IF_50	CALL_99
0x3291	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1135	clone.c	FUNCTION_26	IF_51
0x3298	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1135	clone.c	FUNCTION_26	IF_51
0x329c	          0x4885c0	                           test rax, rax	      1135	clone.c	FUNCTION_26	IF_51
0x329f	            0x7427	                            je 0x4003308	      1135	clone.c	FUNCTION_26	IF_51
0x32a1	    0x8b0500000000	            mov eax, dword [0x040032e7] 	      1135	clone.c	FUNCTION_26	IF_51
0x32a7	            0x85c0	                           test eax, eax	      1135	clone.c	FUNCTION_26	IF_51
0x32a9	            0x751d	                           jne 0x4003308	      1135	clone.c	FUNCTION_26	IF_51
0x32ab	    0x8b0500000000	            mov eax, dword [0x040032f1] 	      1135	clone.c	FUNCTION_26	IF_51
0x32b1	            0x85c0	                           test eax, eax	      1135	clone.c	FUNCTION_26	IF_51
0x32b3	            0x7513	                           jne 0x4003308	      1135	clone.c	FUNCTION_26	IF_51
0x32b5	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1136	clone.c	FUNCTION_26	IF_51
0x32bc	        0x488b4050	            mov rax, qword [rax + 0x50] 	      1136	clone.c	FUNCTION_26	IF_51
0x32c0	           0xfb610	                   movzx edx, byte [rax]	      1136	clone.c	FUNCTION_26	IF_51
0x32c3	          0x83ca08	                               or edx, 8	      1136	clone.c	FUNCTION_26	IF_51
0x32c6	            0x8810	                      mov byte [rax], dl	      1136	clone.c	FUNCTION_26	IF_51
0x32c8	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1138	clone.c	FUNCTION_26	CALL_100
0x32cf	      0xbe00000000	                              mov esi, 0	      1138	clone.c	FUNCTION_26	CALL_100
0x32d4	          0x4889c7	                            mov rdi, rax	      1138	clone.c	FUNCTION_26	CALL_100
0x32d7	      0xe800000000	                          call 0x400331c	      1138	clone.c	FUNCTION_26	CALL_100
0x32dc	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	      1138	clone.c	FUNCTION_26	CALL_100
0x32e3	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      1140	clone.c	FUNCTION_26	IF_52
0x32eb	     0xf8451010000	                            je 0x4003482	      1140	clone.c	FUNCTION_26	IF_52
0x32f1	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	      1141	clone.c	FUNCTION_26	IF_52	CALL_101
0x32f8	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1141	clone.c	FUNCTION_26	IF_52	CALL_101
0x32ff	          0x4889d6	                            mov rsi, rdx	      1141	clone.c	FUNCTION_26	IF_52	CALL_101
0x3302	          0x4889c7	                            mov rdi, rax	      1141	clone.c	FUNCTION_26	IF_52	CALL_101
0x3305	      0xe801e4ffff	               call sym.wanted_peer_refs	      1141	clone.c	FUNCTION_26	IF_52	CALL_101
0x330a	    0x48898500ffff	            mov qword [rbp - 0x100], rax	      1141	clone.c	FUNCTION_26	IF_52	CALL_101
0x3311	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1152	clone.c	FUNCTION_26	IF_52	FOR_1
0x3318	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	      1152	clone.c	FUNCTION_26	IF_52	FOR_1
0x331f	            0xeb34	                           jmp 0x4003395	      1152	clone.c	FUNCTION_26	IF_52	FOR_1
0x3321	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1153	clone.c	FUNCTION_26	IF_52	FOR_1	IF_53	CALL_102
0x3328	        0x4883c008	                              add rax, 8	      1153	clone.c	FUNCTION_26	IF_52	FOR_1	IF_53	CALL_102
0x332c	          0x4889c7	                            mov rdi, rax	      1153	clone.c	FUNCTION_26	IF_52	FOR_1	IF_53	CALL_102
0x332f	      0xe81dd0ffff	                    call sym.is_null_oid	      1153	clone.c	FUNCTION_26	IF_52	FOR_1	IF_53	CALL_102
0x3334	            0x85c0	                           test eax, eax	      1153	clone.c	FUNCTION_26	IF_52	FOR_1	IF_53	CALL_102
0x3336	            0x740c	                            je 0x4003384	      1153	clone.c	FUNCTION_26	IF_52	FOR_1	IF_53	CALL_102
0x3338	    0xc785b8feffff	              mov dword [rbp - 0x148], 0	      1154	clone.c	FUNCTION_26	IF_52	FOR_1	IF_53
0x3342	            0xeb1b	                           jmp 0x400339f	      1155	clone.c	FUNCTION_26	IF_52	FOR_1	IF_53
0x3344	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	      1152	clone.c	FUNCTION_26	IF_52	FOR_1
0x334b	          0x488b00	                    mov rax, qword [rax]	      1152	clone.c	FUNCTION_26	IF_52	FOR_1
0x334e	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	      1152	clone.c	FUNCTION_26	IF_52	FOR_1
0x3355	    0x4883bd08ffff	               cmp qword [rbp - 0xf8], 0	      1152	clone.c	FUNCTION_26	IF_52	FOR_1
0x335d	            0x75c2	                           jne 0x4003361	      1152	clone.c	FUNCTION_26	IF_52	FOR_1
0x335f	    0x83bdb4feffff	              cmp dword [rbp - 0x14c], 0	      1158	clone.c	FUNCTION_26	IF_52	IF_54
0x3366	            0x7522	                           jne 0x40033ca	      1158	clone.c	FUNCTION_26	IF_52	IF_54
0x3368	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 0	      1158	clone.c	FUNCTION_26	IF_52	IF_54
0x336f	            0x7519	                           jne 0x40033ca	      1158	clone.c	FUNCTION_26	IF_52	IF_54
0x3371	    0x488b9500ffff	            mov rdx, qword [rbp - 0x100]	      1159	clone.c	FUNCTION_26	IF_52	CALL_103
0x3378	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1159	clone.c	FUNCTION_26	IF_52	CALL_103
0x337f	          0x4889d6	                            mov rsi, rdx	      1159	clone.c	FUNCTION_26	IF_52	CALL_103
0x3382	          0x4889c7	                            mov rdi, rax	      1159	clone.c	FUNCTION_26	IF_52	CALL_103
0x3385	      0xe800000000	                          call 0x40033ca	      1159	clone.c	FUNCTION_26	IF_52	CALL_103
0x338a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1161	clone.c	FUNCTION_26	IF_52	CALL_104
0x3391	      0xbe00000000	                              mov esi, 0	      1161	clone.c	FUNCTION_26	IF_52	CALL_104
0x3396	          0x4889c7	                            mov rdi, rax	      1161	clone.c	FUNCTION_26	IF_52	CALL_104
0x3399	      0xe800000000	                          call 0x40033de	      1161	clone.c	FUNCTION_26	IF_52	CALL_104
0x339e	    0x488985e8feff	            mov qword [rbp - 0x118], rax	      1161	clone.c	FUNCTION_26	IF_52	CALL_104
0x33a5	    0x488b8d00ffff	            mov rcx, qword [rbp - 0x100]	      1162	clone.c	FUNCTION_26	IF_52
0x33ac	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	      1162	clone.c	FUNCTION_26	IF_52
0x33b3	      0xba00000000	                              mov edx, 0	      1162	clone.c	FUNCTION_26	IF_52
0x33b8	          0x4889ce	                            mov rsi, rcx	      1162	clone.c	FUNCTION_26	IF_52
0x33bb	          0x4889c7	                            mov rdi, rax	      1162	clone.c	FUNCTION_26	IF_52
0x33be	      0xe800000000	                          call 0x4003403	      1162	clone.c	FUNCTION_26	IF_52
0x33c3	    0x488985f0feff	            mov qword [rbp - 0x110], rax	      1162	clone.c	FUNCTION_26	IF_52
0x33ca	    0x488b05000000	            mov rax, qword [0x04003411] 	      1165	clone.c	FUNCTION_26	IF_52	IF_55
0x33d1	          0x4885c0	                           test rax, rax	      1165	clone.c	FUNCTION_26	IF_52	IF_55
0x33d4	            0x7459	                            je 0x400346f	      1165	clone.c	FUNCTION_26	IF_52	IF_55
0x33d6	    0x488b15000000	            mov rdx, qword [0x0400341d] 	      1167	clone.c	FUNCTION_26	IF_52	IF_55	CALL_106
0x33dd	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	      1166	clone.c	FUNCTION_26	IF_52	IF_55
0x33e4	          0x4889d6	                            mov rsi, rdx	      1166	clone.c	FUNCTION_26	IF_52	IF_55
0x33e7	          0x4889c7	                            mov rdi, rax	      1166	clone.c	FUNCTION_26	IF_52	IF_55
0x33ea	      0xe830e2ffff	             call sym.find_remote_branch	      1166	clone.c	FUNCTION_26	IF_52	IF_55
0x33ef	    0x488985f8feff	            mov qword [rbp - 0x108], rax	      1166	clone.c	FUNCTION_26	IF_52	IF_55
0x33f6	    0x4883bdf8feff	              cmp qword [rbp - 0x108], 0	      1169	clone.c	FUNCTION_26	IF_52	IF_55	IF_56
0x33fe	     0xf85ea000000	                           jne 0x400352e	      1169	clone.c	FUNCTION_26	IF_52	IF_55	IF_56
0x3404	    0x4c8b25000000	            mov r12, qword [0x0400344b] 	      1170	clone.c	FUNCTION_26	IF_52	IF_55	IF_56	CALL_108
0x340b	    0x488b1d000000	            mov rbx, qword [0x04003452] 	      1170	clone.c	FUNCTION_26	IF_52	IF_55	IF_56	CALL_108
0x3412	      0xbf00000000	                              mov edi, 0	      1170	clone.c	FUNCTION_26	IF_52	IF_55	IF_56	CALL_108
0x3417	      0xe8dfceffff	                               call sym.	      1170	clone.c	FUNCTION_26	IF_52	IF_55	IF_56	CALL_108
0x341c	          0x4c89e2	                            mov rdx, r12	      1170	clone.c	FUNCTION_26	IF_52	IF_55	IF_56	CALL_108
0x341f	          0x4889de	                            mov rsi, rbx	      1170	clone.c	FUNCTION_26	IF_52	IF_55	IF_56	CALL_108
0x3422	          0x4889c7	                            mov rdi, rax	      1170	clone.c	FUNCTION_26	IF_52	IF_55	IF_56	CALL_108
0x3425	      0xb800000000	                              mov eax, 0	      1170	clone.c	FUNCTION_26	IF_52	IF_55	IF_56	CALL_108
0x342a	      0xe800000000	                          call 0x400346f	      1170	clone.c	FUNCTION_26	IF_52	IF_55	IF_56	CALL_108
0x342f	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	      1174	clone.c	FUNCTION_26	IF_52	ELSE_12
0x3436	    0x488985f8feff	            mov qword [rbp - 0x108], rax	      1174	clone.c	FUNCTION_26	IF_52	ELSE_12
0x343d	      0xe9ac000000	                           jmp 0x400352e	      1174	clone.c	FUNCTION_26	IF_52	ELSE_12
0x3442	    0x488b05000000	            mov rax, qword [0x04003489] 	      1177	clone.c	FUNCTION_26	ELSE_13	IF_57
0x3449	          0x4885c0	                           test rax, rax	      1177	clone.c	FUNCTION_26	ELSE_13	IF_57
0x344c	            0x742b	                            je 0x40034b9	      1177	clone.c	FUNCTION_26	ELSE_13	IF_57
0x344e	    0x4c8b25000000	            mov r12, qword [0x04003495] 	      1178	clone.c	FUNCTION_26	ELSE_13	IF_57	CALL_110
0x3455	    0x488b1d000000	            mov rbx, qword [0x0400349c] 	      1178	clone.c	FUNCTION_26	ELSE_13	IF_57	CALL_110
0x345c	      0xbf00000000	                              mov edi, 0	      1178	clone.c	FUNCTION_26	ELSE_13	IF_57	CALL_110
0x3461	      0xe895ceffff	                               call sym.	      1178	clone.c	FUNCTION_26	ELSE_13	IF_57	CALL_110
0x3466	          0x4c89e2	                            mov rdx, r12	      1178	clone.c	FUNCTION_26	ELSE_13	IF_57	CALL_110
0x3469	          0x4889de	                            mov rsi, rbx	      1178	clone.c	FUNCTION_26	ELSE_13	IF_57	CALL_110
0x346c	          0x4889c7	                            mov rdi, rax	      1178	clone.c	FUNCTION_26	ELSE_13	IF_57	CALL_110
0x346f	      0xb800000000	                              mov eax, 0	      1178	clone.c	FUNCTION_26	ELSE_13	IF_57	CALL_110
0x3474	      0xe800000000	                          call 0x40034b9	      1178	clone.c	FUNCTION_26	ELSE_13	IF_57	CALL_110
0x3479	      0xbf00000000	                              mov edi, 0	      1181	clone.c	FUNCTION_26	ELSE_13	CALL_112
0x347e	      0xe878ceffff	                               call sym.	      1181	clone.c	FUNCTION_26	ELSE_13	CALL_112
0x3483	          0x4889c7	                            mov rdi, rax	      1181	clone.c	FUNCTION_26	ELSE_13	CALL_112
0x3486	      0xb800000000	                              mov eax, 0	      1181	clone.c	FUNCTION_26	ELSE_13	CALL_112
0x348b	      0xe800000000	                          call 0x40034d0	      1181	clone.c	FUNCTION_26	ELSE_13	CALL_112
0x3490	    0x48c78500ffff	              mov qword [rbp - 0x100], 0	      1182	clone.c	FUNCTION_26	ELSE_13
0x349b	    0x48c785f8feff	              mov qword [rbp - 0x108], 0	      1183	clone.c	FUNCTION_26	ELSE_13
0x34a6	    0x48c785f0feff	              mov qword [rbp - 0x110], 0	      1184	clone.c	FUNCTION_26	ELSE_13
0x34b1	    0x48c785e8feff	              mov qword [rbp - 0x118], 0	      1185	clone.c	FUNCTION_26	ELSE_13
0x34bc	    0xc70500000000	               mov dword [0x04003506], 1	      1186	clone.c	FUNCTION_26	ELSE_13
0x34c6	    0x8b0500000000	            mov eax, dword [0x0400350c] 	      1187	clone.c	FUNCTION_26	ELSE_13	IF_58
0x34cc	            0x85c0	                           test eax, eax	      1187	clone.c	FUNCTION_26	ELSE_13	IF_58
0x34ce	            0x751e	                           jne 0x400352e	      1187	clone.c	FUNCTION_26	ELSE_13	IF_58
0x34d0	    0x488b05000000	            mov rax, qword [0x04003517] 	      1188	clone.c	FUNCTION_26	ELSE_13	IF_58	CALL_113
0x34d7	      0xb900000000	                              mov ecx, 0	      1188	clone.c	FUNCTION_26	ELSE_13	IF_58	CALL_113
0x34dc	          0x4889c2	                            mov rdx, rax	      1188	clone.c	FUNCTION_26	ELSE_13	IF_58	CALL_113
0x34df	      0xbe00000000	                              mov esi, 0	      1188	clone.c	FUNCTION_26	ELSE_13	IF_58	CALL_113
0x34e4	      0xbf00000000	                              mov edi, 0	      1188	clone.c	FUNCTION_26	ELSE_13	IF_58	CALL_113
0x34e9	      0xe800000000	                          call 0x400352e	      1188	clone.c	FUNCTION_26	ELSE_13	IF_58	CALL_113
0x34ee	        0x488d4d90	                   lea rcx, [rbp - 0x70]	      1192	clone.c	FUNCTION_26	CALL_114
0x34f2	    0x488b95f0feff	            mov rdx, qword [rbp - 0x110]	      1192	clone.c	FUNCTION_26	CALL_114
0x34f9	    0x488bb5f8feff	            mov rsi, qword [rbp - 0x108]	      1192	clone.c	FUNCTION_26	CALL_114
0x3500	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	      1192	clone.c	FUNCTION_26	CALL_114
0x3507	          0x4889c7	                            mov rdi, rax	      1192	clone.c	FUNCTION_26	CALL_114
0x350a	      0xe898edffff	           call sym.write_refspec_config	      1192	clone.c	FUNCTION_26	CALL_114
0x350f	    0x8b0500000000	            mov eax, dword [0x04003555] 	      1195	clone.c	FUNCTION_26	IF_59
0x3515	            0x85c0	                           test eax, eax	      1195	clone.c	FUNCTION_26	IF_59
0x3517	            0x740f	                            je 0x4003568	      1195	clone.c	FUNCTION_26	IF_59
0x3519	      0xbe00000000	                              mov esi, 0	      1196	clone.c	FUNCTION_26	CALL_115
0x351e	      0xbf00000000	                              mov edi, 0	      1196	clone.c	FUNCTION_26	CALL_115
0x3523	      0xe800000000	                          call 0x4003568	      1196	clone.c	FUNCTION_26	CALL_115
0x3528	    0x83bdb4feffff	              cmp dword [rbp - 0x14c], 0	      1198	clone.c	FUNCTION_26	IF_60
0x352f	            0x741b	                            je 0x400358c	      1198	clone.c	FUNCTION_26	IF_60
0x3531	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	      1199	clone.c	FUNCTION_26	CALL_116
0x3538	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	      1199	clone.c	FUNCTION_26	CALL_116
0x353f	          0x4889d6	                            mov rsi, rdx	      1199	clone.c	FUNCTION_26	CALL_116
0x3542	          0x4889c7	                            mov rdi, rax	      1199	clone.c	FUNCTION_26	CALL_116
0x3545	      0xe834deffff	                    call sym.clone_local	      1199	clone.c	FUNCTION_26	CALL_116
0x354a	            0xeb2c	                           jmp 0x40035b8	      1199	clone.c	FUNCTION_26	CALL_116
0x354c	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	      1200	clone.c	FUNCTION_26	ELSE_14	IF_61
0x3554	            0x7422	                            je 0x40035b8	      1200	clone.c	FUNCTION_26	ELSE_14	IF_61
0x3556	    0x83bdb8feffff	              cmp dword [rbp - 0x148], 0	      1200	clone.c	FUNCTION_26	ELSE_14	IF_61
0x355d	            0x7419	                            je 0x40035b8	      1200	clone.c	FUNCTION_26	ELSE_14	IF_61
0x355f	    0x488b9500ffff	            mov rdx, qword [rbp - 0x100]	      1201	clone.c	FUNCTION_26	ELSE_14	IF_61
0x3566	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1201	clone.c	FUNCTION_26	ELSE_14	IF_61
0x356d	          0x4889d6	                            mov rsi, rdx	      1201	clone.c	FUNCTION_26	ELSE_14	IF_61
0x3570	          0x4889c7	                            mov rdi, rax	      1201	clone.c	FUNCTION_26	ELSE_14	IF_61
0x3573	      0xe800000000	                          call 0x40035b8	      1201	clone.c	FUNCTION_26	ELSE_14	IF_61
0x3578	    0x83bdb4feffff	              cmp dword [rbp - 0x14c], 0	      1203	clone.c	FUNCTION_26	CALL_118
0x357f	            0x7512	                           jne 0x40035d3	      1203	clone.c	FUNCTION_26	CALL_118
0x3581	    0x8b0500000000	            mov eax, dword [0x040035c7] 	      1205	clone.c	FUNCTION_26
0x3587	            0x85c0	                           test eax, eax	      1203	clone.c	FUNCTION_26	CALL_118
0x3589	            0x7508	                           jne 0x40035d3	      1203	clone.c	FUNCTION_26	CALL_118
0x358b	    0x41b901000000	                              mov r9d, 1	      1203	clone.c	FUNCTION_26	CALL_118
0x3591	            0xeb06	                           jmp 0x40035d9	      1203	clone.c	FUNCTION_26	CALL_118
0x3593	    0x41b900000000	                              mov r9d, 0	      1203	clone.c	FUNCTION_26	CALL_118
0x3599	        0x488b7dc0	             mov rdi, qword [rbp - 0x40]	      1204	clone.c	FUNCTION_26
0x359d	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1204	clone.c	FUNCTION_26
0x35a1	    0x4c8b8520ffff	              mov r8, qword [rbp - 0xe0]	      1203	clone.c	FUNCTION_26	CALL_118
0x35a8	    0x488b95f0feff	            mov rdx, qword [rbp - 0x110]	      1203	clone.c	FUNCTION_26	CALL_118
0x35af	    0x488bb500ffff	            mov rsi, qword [rbp - 0x100]	      1203	clone.c	FUNCTION_26	CALL_118
0x35b6	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	      1203	clone.c	FUNCTION_26	CALL_118
0x35bd	        0x4883ec08	                              sub rsp, 8	      1203	clone.c	FUNCTION_26	CALL_118
0x35c1	            0x4151	                                 push r9	      1203	clone.c	FUNCTION_26	CALL_118
0x35c3	          0x4d89c1	                              mov r9, r8	      1203	clone.c	FUNCTION_26	CALL_118
0x35c6	          0x4989f8	                             mov r8, rdi	      1203	clone.c	FUNCTION_26	CALL_118
0x35c9	          0x4889c7	                            mov rdi, rax	      1203	clone.c	FUNCTION_26	CALL_118
0x35cc	      0xe847e5ffff	             call sym.update_remote_refs	      1203	clone.c	FUNCTION_26	CALL_118
0x35d1	        0x4883c410	                           add rsp, 0x10	      1203	clone.c	FUNCTION_26	CALL_118
0x35d5	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1207	clone.c	FUNCTION_26	CALL_119
0x35d9	    0x488b8de8feff	            mov rcx, qword [rbp - 0x118]	      1207	clone.c	FUNCTION_26	CALL_119
0x35e0	    0x488b85f8feff	            mov rax, qword [rbp - 0x108]	      1207	clone.c	FUNCTION_26	CALL_119
0x35e7	          0x4889ce	                            mov rsi, rcx	      1207	clone.c	FUNCTION_26	CALL_119
0x35ea	          0x4889c7	                            mov rdi, rax	      1207	clone.c	FUNCTION_26	CALL_119
0x35ed	      0xe8d0e6ffff	                    call sym.update_head	      1207	clone.c	FUNCTION_26	CALL_119
0x35f2	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1215	clone.c	FUNCTION_26
0x35f9	         0xfb64048	           movzx eax, byte [rax + 0x48] 	      1215	clone.c	FUNCTION_26
0x35fd	          0xc0e803	                               shr al, 3	      1215	clone.c	FUNCTION_26
0x3600	          0x83e001	                              and eax, 1	      1215	clone.c	FUNCTION_26
0x3603	           0xfb6c0	                           movzx eax, al	      1215	clone.c	FUNCTION_26
0x3606	    0x8985c4feffff	            mov dword [rbp - 0x13c], eax	      1215	clone.c	FUNCTION_26
0x360c	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1217	clone.c	FUNCTION_26	CALL_120
0x3613	          0x4889c7	                            mov rdi, rax	      1217	clone.c	FUNCTION_26	CALL_120
0x3616	      0xe800000000	                          call 0x400365b	      1217	clone.c	FUNCTION_26	CALL_120
0x361b	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	      1218	clone.c	FUNCTION_26	CALL_121
0x3622	          0x4889c7	                            mov rdi, rax	      1218	clone.c	FUNCTION_26	CALL_121
0x3625	      0xe800000000	                          call 0x400366a	      1218	clone.c	FUNCTION_26	CALL_121
0x362a	    0x8b0500000000	            mov eax, dword [0x04003670] 	      1220	clone.c	FUNCTION_26	IF_62
0x3630	            0x85c0	                           test eax, eax	      1220	clone.c	FUNCTION_26	IF_62
0x3632	            0x7418	                            je 0x400368c	      1220	clone.c	FUNCTION_26	IF_62
0x3634	    0x488b05000000	            mov rax, qword [0x0400367b] 	      1221	clone.c	FUNCTION_26	IF_62	CALL_122
0x363b	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1221	clone.c	FUNCTION_26	IF_62	CALL_122
0x363f	          0x4889c7	                            mov rdi, rax	      1221	clone.c	FUNCTION_26	IF_62	CALL_122
0x3642	      0xe800000000	                          call 0x4003687	      1221	clone.c	FUNCTION_26	IF_62	CALL_122
0x3647	      0xe8d7eeffff	     call sym.dissociate_from_references	      1222	clone.c	FUNCTION_26	IF_62	CALL_123
0x364c	    0xc70500000000	               mov dword [0x04003696], 1	      1225	clone.c	FUNCTION_26
0x3656	    0xc70500000000	               mov dword [0x040036a0], 1	      1226	clone.c	FUNCTION_26
0x3660	    0x8b85c4feffff	            mov eax, dword [rbp - 0x13c]	      1227	clone.c	FUNCTION_26	CALL_124
0x3666	            0x89c7	                            mov edi, eax	      1227	clone.c	FUNCTION_26	CALL_124
0x3668	      0xe8c7e7ffff	                       call sym.checkout	      1227	clone.c	FUNCTION_26	CALL_124
0x366d	    0x8985bcfeffff	            mov dword [rbp - 0x144], eax	      1227	clone.c	FUNCTION_26	CALL_124
0x3673	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1229	clone.c	FUNCTION_26	CALL_125
0x3677	          0x4889c7	                            mov rdi, rax	      1229	clone.c	FUNCTION_26	CALL_125
0x367a	      0xe800000000	                          call 0x40036bf	      1229	clone.c	FUNCTION_26	CALL_125
0x367f	        0x488d4590	                   lea rax, [rbp - 0x70]	      1230	clone.c	FUNCTION_26	CALL_126
0x3683	          0x4889c7	                            mov rdi, rax	      1230	clone.c	FUNCTION_26	CALL_126
0x3686	      0xe800000000	                          call 0x40036cb	      1230	clone.c	FUNCTION_26	CALL_126
0x368b	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	      1231	clone.c	FUNCTION_26	CALL_127
0x3692	          0x4889c7	                            mov rdi, rax	      1231	clone.c	FUNCTION_26	CALL_127
0x3695	      0xe800000000	                          call 0x40036da	      1231	clone.c	FUNCTION_26	CALL_127
0x369a	    0x488d8570ffff	                   lea rax, [rbp - 0x90]	      1232	clone.c	FUNCTION_26	CALL_128
0x36a1	          0x4889c7	                            mov rdi, rax	      1232	clone.c	FUNCTION_26	CALL_128
0x36a4	      0xe800000000	                          call 0x40036e9	      1232	clone.c	FUNCTION_26	CALL_128
0x36a9	    0xc70500000000	               mov dword [0x040036f3], 2	      1233	clone.c	FUNCTION_26
0x36b3	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	      1235	clone.c	FUNCTION_26	CALL_129
0x36ba	          0x4889c7	                            mov rdi, rax	      1235	clone.c	FUNCTION_26	CALL_129
0x36bd	      0xe800000000	                          call 0x4003702	      1235	clone.c	FUNCTION_26	CALL_129
0x36c2	    0x8b85bcfeffff	            mov eax, dword [rbp - 0x144]	      1236	clone.c	FUNCTION_26
0x36c8	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      1237	clone.c	FUNCTION_26
0x36cc	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1237	clone.c	FUNCTION_26
0x36d5	            0x7405	                            je 0x400371c	      1237	clone.c	FUNCTION_26
0x36d7	      0xe800000000	                          call 0x400371c	      1237	clone.c	FUNCTION_26
0x36dc	        0x488d65f0	                   lea rsp, [rbp - 0x10]	      1237	clone.c	FUNCTION_26
0x36e0	              0x5b	                                 pop rbx	      1237	clone.c	FUNCTION_26
0x36e1	            0x415c	                                 pop r12	      1237	clone.c	FUNCTION_26
0x36e3	              0x5d	                                 pop rbp	      1237	clone.c	FUNCTION_26
0x36e4	              0xc3	                                     ret	      1237	clone.c	FUNCTION_26
write_one_config	WHILE,0:ELSE,0:IF,0:DO,0:SWITCH,0:CALL,1:functions,0:FOR,0	18
0x21fb	              0x55	                                push rbp	       789	clone.c	FUNCTION_21
0x21fc	          0x4889e5	                            mov rbp, rsp	       789	clone.c	FUNCTION_21
0x21ff	        0x4883ec20	                           sub rsp, 0x20	       789	clone.c	FUNCTION_21
0x2203	        0x48897df8	                mov qword [rbp - 8], rdi	       789	clone.c	FUNCTION_21
0x2207	        0x488975f0	             mov qword [rbp - 0x10], rsi	       789	clone.c	FUNCTION_21
0x220b	        0x488955e8	             mov qword [rbp - 0x18], rdx	       789	clone.c	FUNCTION_21
0x220f	      0x48837df000	               cmp qword [rbp - 0x10], 0	       790	clone.c	FUNCTION_21	CALL_1
0x2214	            0x7406	                            je 0x400225c	       790	clone.c	FUNCTION_21	CALL_1
0x2216	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       790	clone.c	FUNCTION_21	CALL_1
0x221a	            0xeb05	                           jmp 0x4002261	       790	clone.c	FUNCTION_21	CALL_1
0x221c	      0xb800000000	                              mov eax, 0	       790	clone.c	FUNCTION_21	CALL_1
0x2221	        0x488b7df8	                mov rdi, qword [rbp - 8]	       790	clone.c	FUNCTION_21	CALL_1
0x2225	      0xb900000000	                              mov ecx, 0	       790	clone.c	FUNCTION_21	CALL_1
0x222a	      0xba01000000	                              mov edx, 1	       790	clone.c	FUNCTION_21	CALL_1
0x222f	          0x4889c6	                            mov rsi, rax	       790	clone.c	FUNCTION_21	CALL_1
0x2232	      0xe800000000	                          call 0x4002277	       790	clone.c	FUNCTION_21	CALL_1
0x2237	              0xc9	                                   leave	       793	clone.c	FUNCTION_21
0x2238	              0xc3	                                     ret	       793	clone.c	FUNCTION_21
get_repo_path_1	WHILE,0:ELSE,1:IF,7:DO,0:SWITCH,0:CALL,17:functions,0:FOR,2	146
0x49c	              0x55	                                push rbp	       146	clone.c	IF_9	FUNCTION_2
0x49d	          0x4889e5	                            mov rbp, rsp	       146	clone.c	IF_9	FUNCTION_2
0x4a0	    0x4881ecd00000	                           sub rsp, 0xd0	       146	clone.c	IF_9	FUNCTION_2
0x4a7	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	       146	clone.c	IF_9	FUNCTION_2
0x4ae	    0x4889b530ffff	             mov qword [rbp - 0xd0], rsi	       146	clone.c	IF_9	FUNCTION_2
0x4b5	    0x64488b042528	                mov rax, qword fs:[0x28]	       146	clone.c	IF_9	FUNCTION_2
0x4be	        0x488945f8	                mov qword [rbp - 8], rax	       146	clone.c	IF_9	FUNCTION_2
0x4c2	            0x31c0	                            xor eax, eax	       146	clone.c	IF_9	FUNCTION_2
0x4c4	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       149	clone.c	IF_9	FUNCTION_2
0x4cb	        0x488b4008	                mov rax, qword [rax + 8]	       149	clone.c	IF_9	FUNCTION_2
0x4cf	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	       149	clone.c	IF_9	FUNCTION_2
0x4d6	    0xc78544ffffff	               mov dword [rbp - 0xbc], 0	       153	clone.c	IF_9	FUNCTION_2	FOR_1	CALL_1
0x4e0	      0xe999010000	                           jmp 0x40006be	       153	clone.c	IF_9	FUNCTION_2	FOR_1	CALL_1
0x4e5	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	       154	clone.c	IF_9	FUNCTION_2	FOR_1	CALL_2
0x4ec	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       154	clone.c	IF_9	FUNCTION_2	FOR_1	CALL_2
0x4f3	          0x4889d6	                            mov rsi, rdx	       154	clone.c	IF_9	FUNCTION_2	FOR_1	CALL_2
0x4f6	          0x4889c7	                            mov rdi, rax	       154	clone.c	IF_9	FUNCTION_2	FOR_1	CALL_2
0x4f9	      0xe8c0fcffff	                  call sym.strbuf_setlen	       154	clone.c	IF_9	FUNCTION_2	FOR_1	CALL_2
0x4fe	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	       155	clone.c	IF_9	FUNCTION_2	FOR_1	CALL_3
0x504	            0x4898	                                    cdqe	       155	clone.c	IF_9	FUNCTION_2	FOR_1	CALL_3
0x506	    0x488b14c50000	                  mov rdx, qword [rax*8]	       155	clone.c	IF_9	FUNCTION_2	FOR_1	CALL_3
0x50e	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       155	clone.c	IF_9	FUNCTION_2	FOR_1	CALL_3
0x515	          0x4889d6	                            mov rsi, rdx	       155	clone.c	IF_9	FUNCTION_2	FOR_1	CALL_3
0x518	          0x4889c7	                            mov rdi, rax	       155	clone.c	IF_9	FUNCTION_2	FOR_1	CALL_3
0x51b	      0xe8a6fdffff	                  call sym.strbuf_addstr	       155	clone.c	IF_9	FUNCTION_2	FOR_1	CALL_3
0x520	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       156	clone.c	IF_9	FUNCTION_2	FOR_1	IF_1	CALL_4
0x527	        0x488b4010	            mov rax, qword [rax + 0x10] 	       156	clone.c	IF_9	FUNCTION_2	FOR_1	IF_1	CALL_4
0x52b	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       156	clone.c	IF_9	FUNCTION_2	FOR_1	IF_1	CALL_4
0x532	          0x4889d6	                            mov rsi, rdx	       156	clone.c	IF_9	FUNCTION_2	FOR_1	IF_1	CALL_4
0x535	          0x4889c7	                            mov rdi, rax	       156	clone.c	IF_9	FUNCTION_2	FOR_1	IF_1	CALL_4
0x538	      0xe800000000	                          call 0x400057d	       156	clone.c	IF_9	FUNCTION_2	FOR_1	IF_1	CALL_4
0x53d	            0x85c0	                           test eax, eax	       156	clone.c	IF_9	FUNCTION_2	FOR_1	IF_1	CALL_4
0x53f	     0xf852b010000	                           jne 0x40006b0	       156	clone.c	IF_9	FUNCTION_2	FOR_1	IF_1	CALL_4
0x545	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       158	clone.c	IF_9	FUNCTION_2	FOR_1	IF_2	CALL_6
0x54b	      0x2500f00000	                         and eax, 0xf000	       158	clone.c	IF_9	FUNCTION_2	FOR_1	IF_2	CALL_6
0x550	      0x3d00400000	                         cmp eax, 0x4000	       158	clone.c	IF_9	FUNCTION_2	FOR_1	IF_2	CALL_6
0x555	            0x7534	                           jne 0x40005cb	       158	clone.c	IF_9	FUNCTION_2	FOR_1	IF_2	CALL_6
0x557	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       158	clone.c	IF_9	FUNCTION_2	FOR_1	IF_2	CALL_6
0x55e	        0x488b4010	            mov rax, qword [rax + 0x10] 	       158	clone.c	IF_9	FUNCTION_2	FOR_1	IF_2	CALL_6
0x562	          0x4889c7	                            mov rdi, rax	       158	clone.c	IF_9	FUNCTION_2	FOR_1	IF_2	CALL_6
0x565	      0xe800000000	                          call 0x40005aa	       158	clone.c	IF_9	FUNCTION_2	FOR_1	IF_2	CALL_6
0x56a	            0x85c0	                           test eax, eax	       158	clone.c	IF_9	FUNCTION_2	FOR_1	IF_2	CALL_6
0x56c	            0x741d	                            je 0x40005cb	       158	clone.c	IF_9	FUNCTION_2	FOR_1	IF_2	CALL_6
0x56e	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       159	clone.c	IF_9	FUNCTION_2	FOR_1	IF_2
0x575	    0xc70000000000	                      mov dword [rax], 0	       159	clone.c	IF_9	FUNCTION_2	FOR_1	IF_2
0x57b	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       160	clone.c	IF_9	FUNCTION_2	FOR_1	IF_2
0x582	        0x488b4010	            mov rax, qword [rax + 0x10] 	       160	clone.c	IF_9	FUNCTION_2	FOR_1	IF_2
0x586	      0xe9b4010000	                           jmp 0x400077f	       160	clone.c	IF_9	FUNCTION_2	FOR_1	IF_2
0x58b	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       161	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	CALL_7
0x591	      0x2500f00000	                         and eax, 0xf000	       161	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	CALL_7
0x596	      0x3d00800000	                         cmp eax, 0x8000	       161	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	CALL_7
0x59b	     0xf85d6000000	                           jne 0x40006b7	       161	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	CALL_7
0x5a1	        0x488b4590	             mov rax, qword [rbp - 0x70]	       161	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	CALL_7
0x5a5	        0x4883f808	                              cmp rax, 8	       161	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	CALL_7
0x5a9	     0xf8ec8000000	                           jle 0x40006b7	       161	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	CALL_7
0x5af	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       165	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	CALL_8
0x5b6	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	CALL_8
0x5ba	      0xbe00000000	                              mov esi, 0	       165	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	CALL_8
0x5bf	          0x4889c7	                            mov rdi, rax	       165	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	CALL_8
0x5c2	      0xb800000000	                              mov eax, 0	       165	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	CALL_8
0x5c7	      0xe800000000	                          call 0x400060c	       165	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	CALL_8
0x5cc	    0x898548ffffff	             mov dword [rbp - 0xb8], eax	       165	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	CALL_8
0x5d2	    0x83bd48ffffff	               cmp dword [rbp - 0xb8], 0	       166	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	IF_4
0x5d9	     0xf8894000000	                            js 0x40006b3	       166	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	IF_4
0x5df	        0x488d4df0	                   lea rcx, [rbp - 0x10]	       168	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	CALL_9
0x5e3	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	       168	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	CALL_9
0x5e9	      0xba08000000	                              mov edx, 8	       168	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	CALL_9
0x5ee	          0x4889ce	                            mov rsi, rcx	       168	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	CALL_9
0x5f1	            0x89c7	                            mov edi, eax	       168	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	CALL_9
0x5f3	      0xe800000000	                          call 0x4000638	       168	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	CALL_9
0x5f8	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	       168	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	CALL_9
0x5fe	    0x8b8548ffffff	             mov eax, dword [rbp - 0xb8]	       169	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	CALL_10
0x604	            0x89c7	                            mov edi, eax	       169	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	CALL_10
0x606	      0xe800000000	                          call 0x400064b	       169	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	CALL_10
0x60b	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 8	       170	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	IF_5	CALL_11
0x612	            0x7562	                           jne 0x40006b6	       170	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	IF_5	CALL_11
0x614	        0x488d45f0	                   lea rax, [rbp - 0x10]	       170	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	IF_5	CALL_11
0x618	      0xba08000000	                              mov edx, 8	       170	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	IF_5	CALL_11
0x61d	      0xbe00000000	                              mov esi, 0	       170	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	IF_5	CALL_11
0x622	          0x4889c7	                            mov rdi, rax	       170	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	IF_5	CALL_11
0x625	      0xe800000000	                          call 0x400066a	       170	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	IF_5	CALL_11
0x62a	            0x85c0	                           test eax, eax	       170	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	IF_5	CALL_11
0x62c	            0x7548	                           jne 0x40006b6	       170	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	IF_5	CALL_11
0x62e	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       172	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	CALL_12
0x635	        0x488b4010	            mov rax, qword [rax + 0x10] 	       172	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	CALL_12
0x639	      0xbe00000000	                              mov esi, 0	       172	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	CALL_12
0x63e	          0x4889c7	                            mov rdi, rax	       172	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	CALL_12
0x641	      0xe800000000	                          call 0x4000686	       172	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	CALL_12
0x646	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       172	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	CALL_12
0x64d	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	       173	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	IF_6
0x655	            0x7420	                            je 0x40006b7	       173	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	IF_6
0x657	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       174	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	IF_6
0x65e	    0xc70000000000	                      mov dword [rax], 0	       174	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	IF_6
0x664	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       175	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	IF_6
0x66b	      0xe9cf000000	                           jmp 0x400077f	       175	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	IF_6
0x670	              0x90	                                     nop	       157	clone.c	IF_9	FUNCTION_2	FOR_1	IF_1
0x671	            0xeb04	                           jmp 0x40006b7	       157	clone.c	IF_9	FUNCTION_2	FOR_1	IF_1
0x673	              0x90	                                     nop	       167	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	IF_4
0x674	            0xeb01	                           jmp 0x40006b7	       167	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	IF_4
0x676	              0x90	                                     nop	       171	clone.c	IF_9	FUNCTION_2	FOR_1	ELSE_1	IF_3	IF_5
0x677	    0x838544ffffff	               add dword [rbp - 0xbc], 1	       153	clone.c	IF_9	FUNCTION_2	FOR_1	CALL_1
0x67e	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	       153	clone.c	IF_9	FUNCTION_2	FOR_1	CALL_1
0x684	          0x83f803	                              cmp eax, 3	       153	clone.c	IF_9	FUNCTION_2	FOR_1	CALL_1
0x687	     0xf8658feffff	                           jbe 0x4000525	       153	clone.c	IF_9	FUNCTION_2	FOR_1	CALL_1
0x68d	    0xc78544ffffff	               mov dword [rbp - 0xbc], 0	       180	clone.c	IF_9	FUNCTION_2	FOR_2	CALL_13
0x697	      0xe98f000000	                           jmp 0x400076b	       180	clone.c	IF_9	FUNCTION_2	FOR_2	CALL_13
0x69c	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	       181	clone.c	IF_9	FUNCTION_2	FOR_2	CALL_14
0x6a3	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       181	clone.c	IF_9	FUNCTION_2	FOR_2	CALL_14
0x6aa	          0x4889d6	                            mov rsi, rdx	       181	clone.c	IF_9	FUNCTION_2	FOR_2	CALL_14
0x6ad	          0x4889c7	                            mov rdi, rax	       181	clone.c	IF_9	FUNCTION_2	FOR_2	CALL_14
0x6b0	      0xe809fbffff	                  call sym.strbuf_setlen	       181	clone.c	IF_9	FUNCTION_2	FOR_2	CALL_14
0x6b5	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	       182	clone.c	IF_9	FUNCTION_2	FOR_2	CALL_15
0x6bb	            0x4898	                                    cdqe	       182	clone.c	IF_9	FUNCTION_2	FOR_2	CALL_15
0x6bd	    0x488b14c50000	                  mov rdx, qword [rax*8]	       182	clone.c	IF_9	FUNCTION_2	FOR_2	CALL_15
0x6c5	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       182	clone.c	IF_9	FUNCTION_2	FOR_2	CALL_15
0x6cc	          0x4889d6	                            mov rsi, rdx	       182	clone.c	IF_9	FUNCTION_2	FOR_2	CALL_15
0x6cf	          0x4889c7	                            mov rdi, rax	       182	clone.c	IF_9	FUNCTION_2	FOR_2	CALL_15
0x6d2	      0xe8effbffff	                  call sym.strbuf_addstr	       182	clone.c	IF_9	FUNCTION_2	FOR_2	CALL_15
0x6d7	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       183	clone.c	IF_9	FUNCTION_2	FOR_2	IF_7	CALL_17
0x6de	        0x488b4010	            mov rax, qword [rax + 0x10] 	       183	clone.c	IF_9	FUNCTION_2	FOR_2	IF_7	CALL_17
0x6e2	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       183	clone.c	IF_9	FUNCTION_2	FOR_2	IF_7	CALL_17
0x6e9	          0x4889d6	                            mov rsi, rdx	       183	clone.c	IF_9	FUNCTION_2	FOR_2	IF_7	CALL_17
0x6ec	          0x4889c7	                            mov rdi, rax	       183	clone.c	IF_9	FUNCTION_2	FOR_2	IF_7	CALL_17
0x6ef	      0xe800000000	                          call 0x4000734	       183	clone.c	IF_9	FUNCTION_2	FOR_2	IF_7	CALL_17
0x6f4	            0x85c0	                           test eax, eax	       183	clone.c	IF_9	FUNCTION_2	FOR_2	IF_7	CALL_17
0x6f6	            0x752c	                           jne 0x4000764	       183	clone.c	IF_9	FUNCTION_2	FOR_2	IF_7	CALL_17
0x6f8	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       183	clone.c	IF_9	FUNCTION_2	FOR_2	IF_7	CALL_17
0x6fe	      0x2500f00000	                         and eax, 0xf000	       183	clone.c	IF_9	FUNCTION_2	FOR_2	IF_7	CALL_17
0x703	      0x3d00800000	                         cmp eax, 0x8000	       183	clone.c	IF_9	FUNCTION_2	FOR_2	IF_7	CALL_17
0x708	            0x751a	                           jne 0x4000764	       183	clone.c	IF_9	FUNCTION_2	FOR_2	IF_7	CALL_17
0x70a	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       184	clone.c	IF_9	FUNCTION_2	FOR_2	IF_7
0x711	    0xc70001000000	                      mov dword [rax], 1	       184	clone.c	IF_9	FUNCTION_2	FOR_2	IF_7
0x717	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       185	clone.c	IF_9	FUNCTION_2	FOR_2	IF_7
0x71e	        0x488b4010	            mov rax, qword [rax + 0x10] 	       185	clone.c	IF_9	FUNCTION_2	FOR_2	IF_7
0x722	            0xeb1b	                           jmp 0x400077f	       185	clone.c	IF_9	FUNCTION_2	FOR_2	IF_7
0x724	    0x838544ffffff	               add dword [rbp - 0xbc], 1	       180	clone.c	IF_9	FUNCTION_2	FOR_2	CALL_13
0x72b	    0x8b8544ffffff	             mov eax, dword [rbp - 0xbc]	       180	clone.c	IF_9	FUNCTION_2	FOR_2	CALL_13
0x731	          0x83f801	                              cmp eax, 1	       180	clone.c	IF_9	FUNCTION_2	FOR_2	CALL_13
0x734	     0xf8662ffffff	                           jbe 0x40006dc	       180	clone.c	IF_9	FUNCTION_2	FOR_2	CALL_13
0x73a	      0xb800000000	                              mov eax, 0	       189	clone.c	IF_9	FUNCTION_2
0x73f	        0x488b4df8	                mov rcx, qword [rbp - 8]	       190	clone.c	IF_9	FUNCTION_2
0x743	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       190	clone.c	IF_9	FUNCTION_2
0x74c	            0x7405	                            je 0x4000793	       190	clone.c	IF_9	FUNCTION_2
0x74e	      0xe800000000	                          call 0x4000793	       190	clone.c	IF_9	FUNCTION_2
0x753	              0xc9	                                   leave	       190	clone.c	IF_9	FUNCTION_2
0x754	              0xc3	                                     ret	       190	clone.c	IF_9	FUNCTION_2
wanted_peer_refs	WHILE,0:ELSE,3:IF,4:DO,0:SWITCH,0:CALL,11:functions,0:FOR,0	106
0x170b	              0x55	                                push rbp	       550	clone.c	FUNCTION_14
0x170c	          0x4889e5	                            mov rbp, rsp	       550	clone.c	FUNCTION_14
0x170f	              0x53	                                push rbx	       550	clone.c	FUNCTION_14
0x1710	        0x4883ec48	                           sub rsp, 0x48	       550	clone.c	FUNCTION_14
0x1714	        0x48897db8	             mov qword [rbp - 0x48], rdi	       550	clone.c	FUNCTION_14
0x1718	        0x488975b0	             mov qword [rbp - 0x50], rsi	       550	clone.c	FUNCTION_14
0x171c	    0x64488b042528	                mov rax, qword fs:[0x28]	       550	clone.c	FUNCTION_14
0x1725	        0x488945e8	             mov qword [rbp - 0x18], rax	       550	clone.c	FUNCTION_14
0x1729	            0x31c0	                            xor eax, eax	       550	clone.c	FUNCTION_14
0x172b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       551	clone.c	FUNCTION_14	CALL_2
0x172f	      0xbe00000000	                              mov esi, 0	       551	clone.c	FUNCTION_14	CALL_2
0x1734	          0x4889c7	                            mov rdi, rax	       551	clone.c	FUNCTION_14	CALL_2
0x1737	      0xe800000000	                          call 0x400177c	       551	clone.c	FUNCTION_14	CALL_2
0x173c	          0x4889c7	                            mov rdi, rax	       551	clone.c	FUNCTION_14	CALL_2
0x173f	      0xe800000000	                          call 0x4001784	       551	clone.c	FUNCTION_14	CALL_2
0x1744	        0x488945e0	             mov qword [rbp - 0x20], rax	       551	clone.c	FUNCTION_14	CALL_2
0x1748	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       552	clone.c	FUNCTION_14
0x174c	        0x488945c8	             mov qword [rbp - 0x38], rax	       552	clone.c	FUNCTION_14
0x1750	      0x48837de000	               cmp qword [rbp - 0x20], 0	       553	clone.c	FUNCTION_14
0x1755	            0x7406	                            je 0x400179d	       553	clone.c	FUNCTION_14
0x1757	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       553	clone.c	FUNCTION_14
0x175b	            0xeb04	                           jmp 0x40017a1	       553	clone.c	FUNCTION_14
0x175d	        0x488d45c8	                   lea rax, [rbp - 0x38]	       553	clone.c	FUNCTION_14
0x1761	        0x488945d0	             mov qword [rbp - 0x30], rax	       553	clone.c	FUNCTION_14
0x1765	    0x8b0500000000	            mov eax, dword [0x040017ab] 	       555	clone.c	FUNCTION_14	IF_1
0x176b	            0x85c0	                           test eax, eax	       555	clone.c	FUNCTION_14	IF_1
0x176d	     0xf84d1000000	                            je 0x4001884	       555	clone.c	FUNCTION_14	IF_1
0x1773	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       556	clone.c	FUNCTION_14	IF_1
0x177b	    0x488b05000000	            mov rax, qword [0x040017c2] 	       558	clone.c	FUNCTION_14	IF_1	IF_2
0x1782	          0x4885c0	                           test rax, rax	       558	clone.c	FUNCTION_14	IF_1	IF_2
0x1785	            0x751e	                           jne 0x40017e5	       558	clone.c	FUNCTION_14	IF_1	IF_2
0x1787	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       559	clone.c	FUNCTION_14	IF_1	CALL_3
0x178b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       559	clone.c	FUNCTION_14	IF_1	CALL_3
0x178f	      0xba00000000	                              mov edx, 0	       559	clone.c	FUNCTION_14	IF_1	CALL_3
0x1794	          0x4889ce	                            mov rsi, rcx	       559	clone.c	FUNCTION_14	IF_1	CALL_3
0x1797	          0x4889c7	                            mov rdi, rax	       559	clone.c	FUNCTION_14	IF_1	CALL_3
0x179a	      0xe800000000	                          call 0x40017df	       559	clone.c	FUNCTION_14	IF_1	CALL_3
0x179f	        0x488945d8	             mov qword [rbp - 0x28], rax	       559	clone.c	FUNCTION_14	IF_1	CALL_3
0x17a3	            0xeb32	                           jmp 0x4001817	       559	clone.c	FUNCTION_14	IF_1	CALL_3
0x17a5	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       561	clone.c	FUNCTION_14	IF_1	ELSE_1
0x17ad	        0x488d45c8	                   lea rax, [rbp - 0x38]	       562	clone.c	FUNCTION_14	IF_1	ELSE_1
0x17b1	        0x488945d0	             mov qword [rbp - 0x30], rax	       562	clone.c	FUNCTION_14	IF_1	ELSE_1
0x17b5	    0x488b15000000	            mov rdx, qword [0x040017fc] 	       563	clone.c	FUNCTION_14	IF_1	ELSE_1	CALL_5
0x17bc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       563	clone.c	FUNCTION_14	IF_1	ELSE_1	CALL_5
0x17c0	          0x4889d6	                            mov rsi, rdx	       563	clone.c	FUNCTION_14	IF_1	ELSE_1	CALL_5
0x17c3	          0x4889c7	                            mov rdi, rax	       563	clone.c	FUNCTION_14	IF_1	ELSE_1	CALL_5
0x17c6	      0xe854feffff	             call sym.find_remote_branch	       563	clone.c	FUNCTION_14	IF_1	ELSE_1	CALL_5
0x17cb	          0x4889c7	                            mov rdi, rax	       563	clone.c	FUNCTION_14	IF_1	ELSE_1	CALL_5
0x17ce	      0xe800000000	                          call 0x4001813	       563	clone.c	FUNCTION_14	IF_1	ELSE_1	CALL_5
0x17d3	        0x488945d8	             mov qword [rbp - 0x28], rax	       563	clone.c	FUNCTION_14	IF_1	ELSE_1	CALL_5
0x17d7	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       566	clone.c	FUNCTION_14	IF_1	IF_3
0x17dc	            0x752f	                           jne 0x400184d	       566	clone.c	FUNCTION_14	IF_1	IF_3
0x17de	    0x488b05000000	            mov rax, qword [0x04001825] 	       566	clone.c	FUNCTION_14	IF_1	IF_3
0x17e5	          0x4885c0	                           test rax, rax	       566	clone.c	FUNCTION_14	IF_1	IF_3
0x17e8	            0x7423	                            je 0x400184d	       566	clone.c	FUNCTION_14	IF_1	IF_3
0x17ea	    0x488b1d000000	            mov rbx, qword [0x04001831] 	       567	clone.c	FUNCTION_14	IF_1	IF_3	CALL_7
0x17f1	      0xbf00000000	                              mov edi, 0	       567	clone.c	FUNCTION_14	IF_1	IF_3	CALL_7
0x17f6	      0xe800ebffff	                               call sym.	       567	clone.c	FUNCTION_14	IF_1	IF_3	CALL_7
0x17fb	          0x4889de	                            mov rsi, rbx	       567	clone.c	FUNCTION_14	IF_1	IF_3	CALL_7
0x17fe	          0x4889c7	                            mov rdi, rax	       567	clone.c	FUNCTION_14	IF_1	IF_3	CALL_7
0x1801	      0xb800000000	                              mov eax, 0	       567	clone.c	FUNCTION_14	IF_1	IF_3	CALL_7
0x1806	      0xe800000000	                          call 0x400184b	       567	clone.c	FUNCTION_14	IF_1	IF_3	CALL_7
0x180b	            0xeb50	                           jmp 0x400189d	       567	clone.c	FUNCTION_14	IF_1	IF_3	CALL_7
0x180d	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       570	clone.c	FUNCTION_14	IF_1	ELSE_2	CALL_8
0x1811	        0x488b75b0	             mov rsi, qword [rbp - 0x50]	       570	clone.c	FUNCTION_14	IF_1	ELSE_2	CALL_8
0x1815	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       570	clone.c	FUNCTION_14	IF_1	ELSE_2	CALL_8
0x1819	      0xb900000000	                              mov ecx, 0	       570	clone.c	FUNCTION_14	IF_1	ELSE_2	CALL_8
0x181e	          0x4889c7	                            mov rdi, rax	       570	clone.c	FUNCTION_14	IF_1	ELSE_2	CALL_8
0x1821	      0xe800000000	                          call 0x4001866	       570	clone.c	FUNCTION_14	IF_1	ELSE_2	CALL_8
0x1826	    0x488b35000000	            mov rsi, qword [0x0400186d] 	       573	clone.c	FUNCTION_14	IF_1	ELSE_2	CALL_9
0x182d	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       573	clone.c	FUNCTION_14	IF_1	ELSE_2	CALL_9
0x1831	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       573	clone.c	FUNCTION_14	IF_1	ELSE_2	CALL_9
0x1835	      0xb900000000	                              mov ecx, 0	       573	clone.c	FUNCTION_14	IF_1	ELSE_2	CALL_9
0x183a	          0x4889c7	                            mov rdi, rax	       573	clone.c	FUNCTION_14	IF_1	ELSE_2	CALL_9
0x183d	      0xe800000000	                          call 0x4001882	       573	clone.c	FUNCTION_14	IF_1	ELSE_2	CALL_9
0x1842	            0xeb19	                           jmp 0x400189d	       573	clone.c	FUNCTION_14	IF_1	ELSE_2	CALL_9
0x1844	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       576	clone.c	FUNCTION_14	CALL_10
0x1848	        0x488b75b0	             mov rsi, qword [rbp - 0x50]	       576	clone.c	FUNCTION_14	CALL_10
0x184c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       576	clone.c	FUNCTION_14	CALL_10
0x1850	      0xb900000000	                              mov ecx, 0	       576	clone.c	FUNCTION_14	CALL_10
0x1855	          0x4889c7	                            mov rdi, rax	       576	clone.c	FUNCTION_14	CALL_10
0x1858	      0xe800000000	                          call 0x400189d	       576	clone.c	FUNCTION_14	CALL_10
0x185d	    0x8b0500000000	            mov eax, dword [0x040018a3] 	       578	clone.c	FUNCTION_14	IF_4
0x1863	            0x85c0	                           test eax, eax	       578	clone.c	FUNCTION_14	IF_4
0x1865	            0x7530	                           jne 0x40018d7	       578	clone.c	FUNCTION_14	IF_4
0x1867	    0x8b0500000000	            mov eax, dword [0x040018ad] 	       578	clone.c	FUNCTION_14	IF_4
0x186d	            0x85c0	                           test eax, eax	       578	clone.c	FUNCTION_14	IF_4
0x186f	            0x7526	                           jne 0x40018d7	       578	clone.c	FUNCTION_14	IF_4
0x1871	    0x8b0500000000	            mov eax, dword [0x040018b7] 	       578	clone.c	FUNCTION_14	IF_4
0x1877	            0x85c0	                           test eax, eax	       578	clone.c	FUNCTION_14	IF_4
0x1879	            0x751c	                           jne 0x40018d7	       578	clone.c	FUNCTION_14	IF_4
0x187b	    0x488b35000000	            mov rsi, qword [0x040018c2] 	       579	clone.c	FUNCTION_14	CALL_11
0x1882	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       579	clone.c	FUNCTION_14	CALL_11
0x1886	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       579	clone.c	FUNCTION_14	CALL_11
0x188a	      0xb900000000	                              mov ecx, 0	       579	clone.c	FUNCTION_14	CALL_11
0x188f	          0x4889c7	                            mov rdi, rax	       579	clone.c	FUNCTION_14	CALL_11
0x1892	      0xe800000000	                          call 0x40018d7	       579	clone.c	FUNCTION_14	CALL_11
0x1897	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       581	clone.c	FUNCTION_14
0x189b	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       582	clone.c	FUNCTION_14
0x189f	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       582	clone.c	FUNCTION_14
0x18a8	            0x7405	                            je 0x40018ef	       582	clone.c	FUNCTION_14
0x18aa	      0xe800000000	                          call 0x40018ef	       582	clone.c	FUNCTION_14
0x18af	        0x4883c448	                           add rsp, 0x48	       582	clone.c	FUNCTION_14
0x18b3	              0x5b	                                 pop rbx	       582	clone.c	FUNCTION_14
0x18b4	              0x5d	                                 pop rbp	       582	clone.c	FUNCTION_14
0x18b5	              0xc3	                                     ret	       582	clone.c	FUNCTION_14
write_refspec_config	WHILE,0:ELSE,3:IF,8:DO,0:SWITCH,0:CALL,15:functions,0:FOR,0	150
0x22a7	              0x55	                                push rbp	       810	clone.c	FUNCTION_23
0x22a8	          0x4889e5	                            mov rbp, rsp	       810	clone.c	FUNCTION_23
0x22ab	        0x4883ec70	                           sub rsp, 0x70	       810	clone.c	FUNCTION_23
0x22af	        0x48897da8	             mov qword [rbp - 0x58], rdi	       810	clone.c	FUNCTION_23
0x22b3	        0x488975a0	             mov qword [rbp - 0x60], rsi	       810	clone.c	FUNCTION_23
0x22b7	        0x48895598	             mov qword [rbp - 0x68], rdx	       810	clone.c	FUNCTION_23
0x22bb	        0x48894d90	             mov qword [rbp - 0x70], rcx	       810	clone.c	FUNCTION_23
0x22bf	    0x64488b042528	                mov rax, qword fs:[0x28]	       810	clone.c	FUNCTION_23
0x22c8	        0x488945f8	                mov qword [rbp - 8], rax	       810	clone.c	FUNCTION_23
0x22cc	            0x31c0	                            xor eax, eax	       810	clone.c	FUNCTION_23
0x22ce	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       811	clone.c	FUNCTION_23
0x22d6	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       811	clone.c	FUNCTION_23
0x22de	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       811	clone.c	FUNCTION_23
0x22e6	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       812	clone.c	FUNCTION_23
0x22ee	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       812	clone.c	FUNCTION_23
0x22f6	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       812	clone.c	FUNCTION_23
0x22fe	    0x8b0500000000	            mov eax, dword [0x04002344] 	       814	clone.c	FUNCTION_23	IF_1
0x2304	            0x85c0	                           test eax, eax	       814	clone.c	FUNCTION_23	IF_1
0x2306	            0x750e	                           jne 0x4002356	       814	clone.c	FUNCTION_23	IF_1
0x2308	    0x8b0500000000	            mov eax, dword [0x0400234e] 	       814	clone.c	FUNCTION_23	IF_1
0x230e	            0x85c0	                           test eax, eax	       814	clone.c	FUNCTION_23	IF_1
0x2310	     0xf85de010000	                           jne 0x4002534	       814	clone.c	FUNCTION_23	IF_1
0x2316	    0x8b0500000000	            mov eax, dword [0x0400235c] 	       815	clone.c	FUNCTION_23	IF_1	IF_2
0x231c	            0x85c0	                           test eax, eax	       815	clone.c	FUNCTION_23	IF_1	IF_2
0x231e	     0xf840d010000	                            je 0x4002471	       815	clone.c	FUNCTION_23	IF_1	IF_2
0x2324	    0x8b0500000000	            mov eax, dword [0x0400236a] 	       815	clone.c	FUNCTION_23	IF_1	IF_2
0x232a	            0x85c0	                           test eax, eax	       815	clone.c	FUNCTION_23	IF_1	IF_2
0x232c	     0xf85ff000000	                           jne 0x4002471	       815	clone.c	FUNCTION_23	IF_1	IF_2
0x2332	    0x488b05000000	            mov rax, qword [0x04002379] 	       816	clone.c	FUNCTION_23	IF_1	IF_2	IF_3
0x2339	          0x4885c0	                           test rax, rax	       816	clone.c	FUNCTION_23	IF_1	IF_2	IF_3
0x233c	            0x747f	                            je 0x40023fd	       816	clone.c	FUNCTION_23	IF_1	IF_2	IF_3
0x233e	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       817	clone.c	FUNCTION_23	IF_1	IF_2	IF_3	IF_4	CALL_1
0x2342	        0x4883c070	                           add rax, 0x70	       817	clone.c	FUNCTION_23	IF_1	IF_2	IF_3	IF_4	CALL_1
0x2346	      0xbe00000000	                              mov esi, 0	       817	clone.c	FUNCTION_23	IF_1	IF_2	IF_3	IF_4	CALL_1
0x234b	          0x4889c7	                            mov rdi, rax	       817	clone.c	FUNCTION_23	IF_1	IF_2	IF_3	IF_4	CALL_1
0x234e	      0xe800000000	                          call 0x4002393	       817	clone.c	FUNCTION_23	IF_1	IF_2	IF_3	IF_4	CALL_1
0x2353	            0x85c0	                           test eax, eax	       817	clone.c	FUNCTION_23	IF_1	IF_2	IF_3	IF_4	CALL_1
0x2355	            0x742b	                            je 0x40023c2	       817	clone.c	FUNCTION_23	IF_1	IF_2	IF_3	IF_4	CALL_1
0x2357	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       819	clone.c	FUNCTION_23	IF_1	IF_2	IF_3	IF_4
0x235b	        0x488d4870	                   lea rcx, [rax + 0x70]	       819	clone.c	FUNCTION_23	IF_1	IF_2	IF_3	IF_4
0x235f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       818	clone.c	FUNCTION_23	IF_1	IF_2	IF_3	IF_4	CALL_2
0x2363	        0x488d5070	                   lea rdx, [rax + 0x70]	       818	clone.c	FUNCTION_23	IF_1	IF_2	IF_3	IF_4	CALL_2
0x2367	        0x488d45e0	                   lea rax, [rbp - 0x20]	       818	clone.c	FUNCTION_23	IF_1	IF_2	IF_3	IF_4	CALL_2
0x236b	      0xbe00000000	                              mov esi, 0	       818	clone.c	FUNCTION_23	IF_1	IF_2	IF_3	IF_4	CALL_2
0x2370	          0x4889c7	                            mov rdi, rax	       818	clone.c	FUNCTION_23	IF_1	IF_2	IF_3	IF_4	CALL_2
0x2373	      0xb800000000	                              mov eax, 0	       818	clone.c	FUNCTION_23	IF_1	IF_2	IF_3	IF_4	CALL_2
0x2378	      0xe800000000	                          call 0x40023bd	       818	clone.c	FUNCTION_23	IF_1	IF_2	IF_3	IF_4	CALL_2
0x237d	      0xe9d3000000	                           jmp 0x4002495	       816	clone.c	FUNCTION_23	IF_1	IF_2	IF_3
0x2382	    0x488b0d000000	            mov rcx, qword [0x040023c9] 	       821	clone.c	FUNCTION_23	IF_1	IF_2	IF_3	ELSE_1	CALL_3
0x2389	        0x488b4590	             mov rax, qword [rbp - 0x70]	       821	clone.c	FUNCTION_23	IF_1	IF_2	IF_3	ELSE_1	CALL_3
0x238d	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       821	clone.c	FUNCTION_23	IF_1	IF_2	IF_3	ELSE_1	CALL_3
0x2391	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       821	clone.c	FUNCTION_23	IF_1	IF_2	IF_3	ELSE_1	CALL_3
0x2395	        0x488d7070	                   lea rsi, [rax + 0x70]	       821	clone.c	FUNCTION_23	IF_1	IF_2	IF_3	ELSE_1	CALL_3
0x2399	        0x488d45e0	                   lea rax, [rbp - 0x20]	       821	clone.c	FUNCTION_23	IF_1	IF_2	IF_3	ELSE_1	CALL_3
0x239d	          0x4989c8	                             mov r8, rcx	       821	clone.c	FUNCTION_23	IF_1	IF_2	IF_3	ELSE_1	CALL_3
0x23a0	          0x4889d1	                            mov rcx, rdx	       821	clone.c	FUNCTION_23	IF_1	IF_2	IF_3	ELSE_1	CALL_3
0x23a3	          0x4889f2	                            mov rdx, rsi	       821	clone.c	FUNCTION_23	IF_1	IF_2	IF_3	ELSE_1	CALL_3
0x23a6	      0xbe00000000	                              mov esi, 0	       821	clone.c	FUNCTION_23	IF_1	IF_2	IF_3	ELSE_1	CALL_3
0x23ab	          0x4889c7	                            mov rdi, rax	       821	clone.c	FUNCTION_23	IF_1	IF_2	IF_3	ELSE_1	CALL_3
0x23ae	      0xb800000000	                              mov eax, 0	       821	clone.c	FUNCTION_23	IF_1	IF_2	IF_3	ELSE_1	CALL_3
0x23b3	      0xe800000000	                          call 0x40023f8	       821	clone.c	FUNCTION_23	IF_1	IF_2	IF_3	ELSE_1	CALL_3
0x23b8	      0xe998000000	                           jmp 0x4002495	       816	clone.c	FUNCTION_23	IF_1	IF_2	IF_3
0x23bd	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       823	clone.c	FUNCTION_23	IF_1	IF_2	ELSE_2	IF_5
0x23c2	     0xf848d000000	                            je 0x4002495	       823	clone.c	FUNCTION_23	IF_1	IF_2	ELSE_2	IF_5
0x23c8	        0x488b4598	             mov rax, qword [rbp - 0x68]	       824	clone.c	FUNCTION_23	IF_1	IF_2	ELSE_2	IF_5
0x23cc	        0x4883c070	                           add rax, 0x70	       824	clone.c	FUNCTION_23	IF_1	IF_2	ELSE_2	IF_5
0x23d0	        0x488945b8	             mov qword [rbp - 0x48], rax	       824	clone.c	FUNCTION_23	IF_1	IF_2	ELSE_2	IF_5
0x23d4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       825	clone.c	FUNCTION_23	IF_1	IF_2	ELSE_2	IF_5	IF_6	CALL_4
0x23d8	        0x488d55b8	                   lea rdx, [rbp - 0x48]	       825	clone.c	FUNCTION_23	IF_1	IF_2	ELSE_2	IF_5	IF_6	CALL_4
0x23dc	      0xbe00000000	                              mov esi, 0	       825	clone.c	FUNCTION_23	IF_1	IF_2	ELSE_2	IF_5	IF_6	CALL_4
0x23e1	          0x4889c7	                            mov rdi, rax	       825	clone.c	FUNCTION_23	IF_1	IF_2	ELSE_2	IF_5	IF_6	CALL_4
0x23e4	      0xe839dcffff	                    call sym.skip_prefix	       825	clone.c	FUNCTION_23	IF_1	IF_2	ELSE_2	IF_5	IF_6	CALL_4
0x23e9	            0x85c0	                           test eax, eax	       825	clone.c	FUNCTION_23	IF_1	IF_2	ELSE_2	IF_5	IF_6	CALL_4
0x23eb	            0x750f	                           jne 0x400243c	       825	clone.c	FUNCTION_23	IF_1	IF_2	ELSE_2	IF_5	IF_6	CALL_4
0x23ed	      0xbf00000000	                              mov edi, 0	       826	clone.c	FUNCTION_23	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0x23f2	      0xb800000000	                              mov eax, 0	       826	clone.c	FUNCTION_23	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0x23f7	      0xe800000000	                          call 0x400243c	       826	clone.c	FUNCTION_23	IF_1	IF_2	ELSE_2	IF_5	CALL_5
0x23fc	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       828	clone.c	FUNCTION_23	IF_1	IF_2	ELSE_2	IF_5	CALL_6
0x2400	        0x488b4590	             mov rax, qword [rbp - 0x70]	       828	clone.c	FUNCTION_23	IF_1	IF_2	ELSE_2	IF_5	CALL_6
0x2404	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       828	clone.c	FUNCTION_23	IF_1	IF_2	ELSE_2	IF_5	CALL_6
0x2408	        0x488b4598	             mov rax, qword [rbp - 0x68]	       828	clone.c	FUNCTION_23	IF_1	IF_2	ELSE_2	IF_5	CALL_6
0x240c	        0x488d7070	                   lea rsi, [rax + 0x70]	       828	clone.c	FUNCTION_23	IF_1	IF_2	ELSE_2	IF_5	CALL_6
0x2410	        0x488d45e0	                   lea rax, [rbp - 0x20]	       828	clone.c	FUNCTION_23	IF_1	IF_2	ELSE_2	IF_5	CALL_6
0x2414	          0x4989c8	                             mov r8, rcx	       828	clone.c	FUNCTION_23	IF_1	IF_2	ELSE_2	IF_5	CALL_6
0x2417	          0x4889d1	                            mov rcx, rdx	       828	clone.c	FUNCTION_23	IF_1	IF_2	ELSE_2	IF_5	CALL_6
0x241a	          0x4889f2	                            mov rdx, rsi	       828	clone.c	FUNCTION_23	IF_1	IF_2	ELSE_2	IF_5	CALL_6
0x241d	      0xbe00000000	                              mov esi, 0	       828	clone.c	FUNCTION_23	IF_1	IF_2	ELSE_2	IF_5	CALL_6
0x2422	          0x4889c7	                            mov rdi, rax	       828	clone.c	FUNCTION_23	IF_1	IF_2	ELSE_2	IF_5	CALL_6
0x2425	      0xb800000000	                              mov eax, 0	       828	clone.c	FUNCTION_23	IF_1	IF_2	ELSE_2	IF_5	CALL_6
0x242a	      0xe800000000	                          call 0x400246f	       828	clone.c	FUNCTION_23	IF_1	IF_2	ELSE_2	IF_5	CALL_6
0x242f	            0xeb24	                           jmp 0x4002495	       816	clone.c	FUNCTION_23	IF_1	IF_2	IF_3
0x2431	        0x488b4590	             mov rax, qword [rbp - 0x70]	       838	clone.c	FUNCTION_23	IF_1	ELSE_3	CALL_7
0x2435	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       838	clone.c	FUNCTION_23	IF_1	ELSE_3	CALL_7
0x2439	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       838	clone.c	FUNCTION_23	IF_1	ELSE_3	CALL_7
0x243d	        0x488d45e0	                   lea rax, [rbp - 0x20]	       838	clone.c	FUNCTION_23	IF_1	ELSE_3	CALL_7
0x2441	      0xbe00000000	                              mov esi, 0	       838	clone.c	FUNCTION_23	IF_1	ELSE_3	CALL_7
0x2446	          0x4889c7	                            mov rdi, rax	       838	clone.c	FUNCTION_23	IF_1	ELSE_3	CALL_7
0x2449	      0xb800000000	                              mov eax, 0	       838	clone.c	FUNCTION_23	IF_1	ELSE_3	CALL_7
0x244e	      0xe800000000	                          call 0x4002493	       838	clone.c	FUNCTION_23	IF_1	ELSE_3	CALL_7
0x2453	            0xeb01	                           jmp 0x4002496	       838	clone.c	FUNCTION_23	IF_1	ELSE_3	CALL_7
0x2455	              0x90	                                     nop	       816	clone.c	FUNCTION_23	IF_1	IF_2	IF_3
0x2456	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       841	clone.c	FUNCTION_23	IF_1	IF_7
0x245a	          0x4885c0	                           test rax, rax	       841	clone.c	FUNCTION_23	IF_1	IF_7
0x245d	     0xf8491000000	                            je 0x4002534	       841	clone.c	FUNCTION_23	IF_1	IF_7
0x2463	    0x488b15000000	            mov rdx, qword [0x040024aa] 	       842	clone.c	FUNCTION_23	IF_1	IF_7	CALL_8
0x246a	        0x488d45c0	                   lea rax, [rbp - 0x40]	       842	clone.c	FUNCTION_23	IF_1	IF_7	CALL_8
0x246e	      0xbe00000000	                              mov esi, 0	       842	clone.c	FUNCTION_23	IF_1	IF_7	CALL_8
0x2473	          0x4889c7	                            mov rdi, rax	       842	clone.c	FUNCTION_23	IF_1	IF_7	CALL_8
0x2476	      0xb800000000	                              mov eax, 0	       842	clone.c	FUNCTION_23	IF_1	IF_7	CALL_8
0x247b	      0xe800000000	                          call 0x40024c0	       842	clone.c	FUNCTION_23	IF_1	IF_7	CALL_8
0x2480	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       843	clone.c	FUNCTION_23	IF_1	IF_7	CALL_9
0x2484	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       843	clone.c	FUNCTION_23	IF_1	IF_7	CALL_9
0x2488	      0xb900000000	                              mov ecx, 0	       843	clone.c	FUNCTION_23	IF_1	IF_7	CALL_9
0x248d	      0xba00000000	                              mov edx, 0	       843	clone.c	FUNCTION_23	IF_1	IF_7	CALL_9
0x2492	          0x4889c7	                            mov rdi, rax	       843	clone.c	FUNCTION_23	IF_1	IF_7	CALL_9
0x2495	      0xe800000000	                          call 0x40024da	       843	clone.c	FUNCTION_23	IF_1	IF_7	CALL_9
0x249a	        0x488d45c0	                   lea rax, [rbp - 0x40]	       844	clone.c	FUNCTION_23	IF_1	IF_7	CALL_10
0x249e	      0xbe00000000	                              mov esi, 0	       844	clone.c	FUNCTION_23	IF_1	IF_7	CALL_10
0x24a3	          0x4889c7	                            mov rdi, rax	       844	clone.c	FUNCTION_23	IF_1	IF_7	CALL_10
0x24a6	      0xe813ddffff	                  call sym.strbuf_setlen	       844	clone.c	FUNCTION_23	IF_1	IF_7	CALL_10
0x24ab	    0x8b0500000000	            mov eax, dword [0x040024f1] 	       846	clone.c	FUNCTION_23	IF_1	IF_7	IF_8
0x24b1	            0x85c0	                           test eax, eax	       846	clone.c	FUNCTION_23	IF_1	IF_7	IF_8
0x24b3	            0x743f	                            je 0x4002534	       846	clone.c	FUNCTION_23	IF_1	IF_7	IF_8
0x24b5	    0x488b15000000	            mov rdx, qword [0x040024fc] 	       847	clone.c	FUNCTION_23	IF_1	IF_7	IF_8	CALL_11
0x24bc	        0x488d45c0	                   lea rax, [rbp - 0x40]	       847	clone.c	FUNCTION_23	IF_1	IF_7	IF_8	CALL_11
0x24c0	      0xbe00000000	                              mov esi, 0	       847	clone.c	FUNCTION_23	IF_1	IF_7	IF_8	CALL_11
0x24c5	          0x4889c7	                            mov rdi, rax	       847	clone.c	FUNCTION_23	IF_1	IF_7	IF_8	CALL_11
0x24c8	      0xb800000000	                              mov eax, 0	       847	clone.c	FUNCTION_23	IF_1	IF_7	IF_8	CALL_11
0x24cd	      0xe800000000	                          call 0x4002512	       847	clone.c	FUNCTION_23	IF_1	IF_7	IF_8	CALL_11
0x24d2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       848	clone.c	FUNCTION_23	IF_1	IF_7	IF_8	CALL_12
0x24d6	      0xbe00000000	                              mov esi, 0	       848	clone.c	FUNCTION_23	IF_1	IF_7	IF_8	CALL_12
0x24db	          0x4889c7	                            mov rdi, rax	       848	clone.c	FUNCTION_23	IF_1	IF_7	IF_8	CALL_12
0x24de	      0xe800000000	                          call 0x4002523	       848	clone.c	FUNCTION_23	IF_1	IF_7	IF_8	CALL_12
0x24e3	        0x488d45c0	                   lea rax, [rbp - 0x40]	       849	clone.c	FUNCTION_23	IF_1	IF_7	IF_8	CALL_13
0x24e7	      0xbe00000000	                              mov esi, 0	       849	clone.c	FUNCTION_23	IF_1	IF_7	IF_8	CALL_13
0x24ec	          0x4889c7	                            mov rdi, rax	       849	clone.c	FUNCTION_23	IF_1	IF_7	IF_8	CALL_13
0x24ef	      0xe8cadcffff	                  call sym.strbuf_setlen	       849	clone.c	FUNCTION_23	IF_1	IF_7	IF_8	CALL_13
0x24f4	        0x488d45c0	                   lea rax, [rbp - 0x40]	       854	clone.c	FUNCTION_23	CALL_14
0x24f8	          0x4889c7	                            mov rdi, rax	       854	clone.c	FUNCTION_23	CALL_14
0x24fb	      0xe800000000	                          call 0x4002540	       854	clone.c	FUNCTION_23	CALL_14
0x2500	        0x488d45e0	                   lea rax, [rbp - 0x20]	       855	clone.c	FUNCTION_23	CALL_15
0x2504	          0x4889c7	                            mov rdi, rax	       855	clone.c	FUNCTION_23	CALL_15
0x2507	      0xe800000000	                          call 0x400254c	       855	clone.c	FUNCTION_23	CALL_15
0x250c	              0x90	                                     nop	       856	clone.c	FUNCTION_23
0x250d	        0x488b45f8	                mov rax, qword [rbp - 8]	       856	clone.c	FUNCTION_23
0x2511	    0x644833042528	                xor rax, qword fs:[0x28]	       856	clone.c	FUNCTION_23
0x251a	            0x7405	                            je 0x4002561	       856	clone.c	FUNCTION_23
0x251c	      0xe800000000	                          call 0x4002561	       856	clone.c	FUNCTION_23
0x2521	              0xc9	                                   leave	       856	clone.c	FUNCTION_23
0x2522	              0xc3	                                     ret	       856	clone.c	FUNCTION_23
strip_trailing_slashes	WHILE,1:ELSE,0:IF,0:DO,0:SWITCH,0:CALL,2:functions,0:FOR,0	30
0xbef	              0x55	                                push rbp	       311	clone.c	FUNCTION_5
0xbf0	          0x4889e5	                            mov rbp, rsp	       311	clone.c	FUNCTION_5
0xbf3	        0x4883ec20	                           sub rsp, 0x20	       311	clone.c	FUNCTION_5
0xbf7	        0x48897de8	             mov qword [rbp - 0x18], rdi	       311	clone.c	FUNCTION_5
0xbfb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       312	clone.c	FUNCTION_5	CALL_1
0xbff	          0x4889c7	                            mov rdi, rax	       312	clone.c	FUNCTION_5	CALL_1
0xc02	      0xe800000000	                          call 0x4000c47	       312	clone.c	FUNCTION_5	CALL_1
0xc07	          0x4889c2	                            mov rdx, rax	       312	clone.c	FUNCTION_5	CALL_1
0xc0a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       312	clone.c	FUNCTION_5	CALL_1
0xc0e	          0x4801d0	                            add rax, rdx	       312	clone.c	FUNCTION_5	CALL_1
0xc11	        0x488945f8	                mov qword [rbp - 8], rax	       312	clone.c	FUNCTION_5	CALL_1
0xc15	            0xeb05	                           jmp 0x4000c5c	       314	clone.c	FUNCTION_5	WHILE_1	CALL_2
0xc17	      0x48836df801	                  sub qword [rbp - 8], 1	       315	clone.c	FUNCTION_5	WHILE_1
0xc1c	        0x488b45f8	                mov rax, qword [rbp - 8]	       314	clone.c	FUNCTION_5	WHILE_1	CALL_2
0xc20	        0x4883e801	                              sub rax, 1	       314	clone.c	FUNCTION_5	WHILE_1	CALL_2
0xc24	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       314	clone.c	FUNCTION_5	WHILE_1	CALL_2
0xc28	            0x7619	                           jbe 0x4000c83	       314	clone.c	FUNCTION_5	WHILE_1	CALL_2
0xc2a	        0x488b45f8	                mov rax, qword [rbp - 8]	       314	clone.c	FUNCTION_5	WHILE_1	CALL_2
0xc2e	        0x4883e801	                              sub rax, 1	       314	clone.c	FUNCTION_5	WHILE_1	CALL_2
0xc32	           0xfb600	                   movzx eax, byte [rax]	       314	clone.c	FUNCTION_5	WHILE_1	CALL_2
0xc35	           0xfbec0	                           movsx eax, al	       314	clone.c	FUNCTION_5	WHILE_1	CALL_2
0xc38	            0x89c7	                            mov edi, eax	       314	clone.c	FUNCTION_5	WHILE_1	CALL_2
0xc3a	      0xe8d0f3ffff	                 call sym.git_is_dir_sep	       314	clone.c	FUNCTION_5	WHILE_1	CALL_2
0xc3f	            0x85c0	                           test eax, eax	       314	clone.c	FUNCTION_5	WHILE_1	CALL_2
0xc41	            0x75d4	                           jne 0x4000c57	       314	clone.c	FUNCTION_5	WHILE_1	CALL_2
0xc43	        0x488b45f8	                mov rax, qword [rbp - 8]	       316	clone.c	FUNCTION_5
0xc47	          0xc60000	                       mov byte [rax], 0	       316	clone.c	FUNCTION_5
0xc4a	              0x90	                                     nop	       317	clone.c	FUNCTION_5
0xc4b	              0xc9	                                   leave	       317	clone.c	FUNCTION_5
0xc4c	              0xc3	                                     ret	       317	clone.c	FUNCTION_5
copy_alternates	WHILE,1:ELSE,1:IF,3:DO,0:SWITCH,0:CALL,11:functions,0:FOR,0	83
0xdf0	              0x55	                                push rbp	       356	clone.c	FUNCTION_8
0xdf1	          0x4889e5	                            mov rbp, rsp	       356	clone.c	FUNCTION_8
0xdf4	        0x4883ec50	                           sub rsp, 0x50	       356	clone.c	FUNCTION_8
0xdf8	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       356	clone.c	FUNCTION_8
0xdfc	        0x488975c0	             mov qword [rbp - 0x40], rsi	       356	clone.c	FUNCTION_8
0xe00	        0x488955b8	             mov qword [rbp - 0x48], rdx	       356	clone.c	FUNCTION_8
0xe04	    0x64488b042528	                mov rax, qword fs:[0x28]	       356	clone.c	FUNCTION_8
0xe0d	        0x488945f8	                mov qword [rbp - 8], rax	       356	clone.c	FUNCTION_8
0xe11	            0x31c0	                            xor eax, eax	       356	clone.c	FUNCTION_8
0xe13	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       369	clone.c	FUNCTION_8	CALL_1
0xe17	        0x488b4010	            mov rax, qword [rax + 0x10] 	       369	clone.c	FUNCTION_8	CALL_1
0xe1b	      0xbe00000000	                              mov esi, 0	       369	clone.c	FUNCTION_8	CALL_1
0xe20	          0x4889c7	                            mov rdi, rax	       369	clone.c	FUNCTION_8	CALL_1
0xe23	      0xe800000000	                          call 0x4000e68	       369	clone.c	FUNCTION_8	CALL_1
0xe28	        0x488945d0	             mov qword [rbp - 0x30], rax	       369	clone.c	FUNCTION_8	CALL_1
0xe2c	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       370	clone.c	FUNCTION_8
0xe34	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       370	clone.c	FUNCTION_8
0xe3c	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       370	clone.c	FUNCTION_8
0xe44	      0xe9a4000000	                           jmp 0x4000f2d	       372	clone.c	FUNCTION_8	WHILE_1	CALL_2
0xe49	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       374	clone.c	FUNCTION_8	WHILE_1	IF_1
0xe4d	          0x4885c0	                           test rax, rax	       374	clone.c	FUNCTION_8	WHILE_1	IF_1
0xe50	     0xf8497000000	                            je 0x4000f2d	       374	clone.c	FUNCTION_8	WHILE_1	IF_1
0xe56	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       374	clone.c	FUNCTION_8	WHILE_1	IF_1
0xe5a	           0xfb600	                   movzx eax, byte [rax]	       374	clone.c	FUNCTION_8	WHILE_1	IF_1
0xe5d	            0x3c23	                            cmp al, 0x23	       374	clone.c	FUNCTION_8	WHILE_1	IF_1
0xe5f	            0x7505	                           jne 0x4000ea6	       374	clone.c	FUNCTION_8	WHILE_1	IF_1
0xe61	      0xe987000000	                           jmp 0x4000f2d	       375	clone.c	FUNCTION_8	WHILE_1	IF_1
0xe66	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       376	clone.c	FUNCTION_8	WHILE_1	IF_2	CALL_3
0xe6a	          0x4889c7	                            mov rdi, rax	       376	clone.c	FUNCTION_8	WHILE_1	IF_2	CALL_3
0xe6d	      0xe857f5ffff	               call sym.is_absolute_path	       376	clone.c	FUNCTION_8	WHILE_1	IF_2	CALL_3
0xe72	            0x85c0	                           test eax, eax	       376	clone.c	FUNCTION_8	WHILE_1	IF_2	CALL_3
0xe74	            0x740e	                            je 0x4000ec4	       376	clone.c	FUNCTION_8	WHILE_1	IF_2	CALL_3
0xe76	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       377	clone.c	FUNCTION_8	WHILE_1	IF_2	CALL_4
0xe7a	          0x4889c7	                            mov rdi, rax	       377	clone.c	FUNCTION_8	WHILE_1	IF_2	CALL_4
0xe7d	      0xe800000000	                          call 0x4000ec2	       377	clone.c	FUNCTION_8	WHILE_1	IF_2	CALL_4
0xe82	            0xeb69	                           jmp 0x4000f2d	       378	clone.c	FUNCTION_8	WHILE_1	IF_2
0xe84	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       380	clone.c	FUNCTION_8	WHILE_1	CALL_5
0xe88	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       380	clone.c	FUNCTION_8	WHILE_1	CALL_5
0xe8c	          0x4889c6	                            mov rsi, rax	       380	clone.c	FUNCTION_8	WHILE_1	CALL_5
0xe8f	      0xbf00000000	                              mov edi, 0	       380	clone.c	FUNCTION_8	WHILE_1	CALL_5
0xe94	      0xb800000000	                              mov eax, 0	       380	clone.c	FUNCTION_8	WHILE_1	CALL_5
0xe99	      0xe800000000	                          call 0x4000ede	       380	clone.c	FUNCTION_8	WHILE_1	CALL_5
0xe9e	        0x488945d8	             mov qword [rbp - 0x28], rax	       380	clone.c	FUNCTION_8	WHILE_1	CALL_5
0xea2	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       381	clone.c	FUNCTION_8	WHILE_1	IF_3	CALL_6
0xea6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       381	clone.c	FUNCTION_8	WHILE_1	IF_3	CALL_6
0xeaa	          0x4889d6	                            mov rsi, rdx	       381	clone.c	FUNCTION_8	WHILE_1	IF_3	CALL_6
0xead	          0x4889c7	                            mov rdi, rax	       381	clone.c	FUNCTION_8	WHILE_1	IF_3	CALL_6
0xeb0	      0xe800000000	                          call 0x4000ef5	       381	clone.c	FUNCTION_8	WHILE_1	IF_3	CALL_6
0xeb5	            0x85c0	                           test eax, eax	       381	clone.c	FUNCTION_8	WHILE_1	IF_3	CALL_6
0xeb7	            0x750e	                           jne 0x4000f07	       381	clone.c	FUNCTION_8	WHILE_1	IF_3	CALL_6
0xeb9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       382	clone.c	FUNCTION_8	WHILE_1	CALL_7
0xebd	          0x4889c7	                            mov rdi, rax	       382	clone.c	FUNCTION_8	WHILE_1	CALL_7
0xec0	      0xe800000000	                          call 0x4000f05	       382	clone.c	FUNCTION_8	WHILE_1	CALL_7
0xec5	            0xeb1a	                           jmp 0x4000f21	       382	clone.c	FUNCTION_8	WHILE_1	CALL_7
0xec7	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       384	clone.c	FUNCTION_8	WHILE_1	ELSE_1	CALL_8
0xecb	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       384	clone.c	FUNCTION_8	WHILE_1	ELSE_1	CALL_8
0xecf	          0x4889c6	                            mov rsi, rax	       384	clone.c	FUNCTION_8	WHILE_1	ELSE_1	CALL_8
0xed2	      0xbf00000000	                              mov edi, 0	       384	clone.c	FUNCTION_8	WHILE_1	ELSE_1	CALL_8
0xed7	      0xb800000000	                              mov eax, 0	       384	clone.c	FUNCTION_8	WHILE_1	ELSE_1	CALL_8
0xedc	      0xe800000000	                          call 0x4000f21	       384	clone.c	FUNCTION_8	WHILE_1	ELSE_1	CALL_8
0xee1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       386	clone.c	FUNCTION_8	WHILE_1	CALL_9
0xee5	          0x4889c7	                            mov rdi, rax	       386	clone.c	FUNCTION_8	WHILE_1	CALL_9
0xee8	      0xe800000000	                          call 0x4000f2d	       386	clone.c	FUNCTION_8	WHILE_1	CALL_9
0xeed	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       372	clone.c	FUNCTION_8	WHILE_1	CALL_2
0xef1	        0x488d45e0	                   lea rax, [rbp - 0x20]	       372	clone.c	FUNCTION_8	WHILE_1	CALL_2
0xef5	          0x4889d6	                            mov rsi, rdx	       372	clone.c	FUNCTION_8	WHILE_1	CALL_2
0xef8	          0x4889c7	                            mov rdi, rax	       372	clone.c	FUNCTION_8	WHILE_1	CALL_2
0xefb	      0xe800000000	                          call 0x4000f40	       372	clone.c	FUNCTION_8	WHILE_1	CALL_2
0xf00	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       372	clone.c	FUNCTION_8	WHILE_1	CALL_2
0xf03	     0xf8540ffffff	                           jne 0x4000e89	       372	clone.c	FUNCTION_8	WHILE_1	CALL_2
0xf09	        0x488d45e0	                   lea rax, [rbp - 0x20]	       388	clone.c	FUNCTION_8	CALL_10
0xf0d	          0x4889c7	                            mov rdi, rax	       388	clone.c	FUNCTION_8	CALL_10
0xf10	      0xe800000000	                          call 0x4000f55	       388	clone.c	FUNCTION_8	CALL_10
0xf15	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       389	clone.c	FUNCTION_8	CALL_11
0xf19	          0x4889c7	                            mov rdi, rax	       389	clone.c	FUNCTION_8	CALL_11
0xf1c	      0xe800000000	                          call 0x4000f61	       389	clone.c	FUNCTION_8	CALL_11
0xf21	              0x90	                                     nop	       390	clone.c	FUNCTION_8
0xf22	        0x488b45f8	                mov rax, qword [rbp - 8]	       390	clone.c	FUNCTION_8
0xf26	    0x644833042528	                xor rax, qword fs:[0x28]	       390	clone.c	FUNCTION_8
0xf2f	            0x7405	                            je 0x4000f76	       390	clone.c	FUNCTION_8
0xf31	      0xe800000000	                          call 0x4000f76	       390	clone.c	FUNCTION_8
0xf36	              0xc9	                                   leave	       390	clone.c	FUNCTION_8
0xf37	              0xc3	                                     ret	       390	clone.c	FUNCTION_8
strbuf_addch	WHILE,0:ELSE,0:IF,1:DO,0:SWITCH,0:CALL,2:functions,0:FOR,0	33
0x258	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_61
0x259	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_61
0x25c	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_61
0x260	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_61
0x264	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_61
0x267	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_61	IF_1	CALL_1
0x26b	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_61	IF_1	CALL_1
0x26e	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_61	IF_1	CALL_1
0x273	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_61	IF_1	CALL_1
0x276	            0x7511	                           jne 0x40002c9	       227	strbuf.h	FUNCTION_61	IF_1	CALL_1
0x278	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_61	CALL_2
0x27c	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_61	CALL_2
0x281	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_61	CALL_2
0x284	      0xe800000000	                          call 0x40002c9	       228	strbuf.h	FUNCTION_61	CALL_2
0x289	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_61
0x28d	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_61
0x291	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_61
0x295	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_61
0x299	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_61
0x29d	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_61
0x2a1	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_61
0x2a5	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_61
0x2a8	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_61
0x2ab	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_61
0x2ad	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_61
0x2b1	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_61
0x2b5	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_61
0x2b9	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_61
0x2bd	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_61
0x2c0	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_61
0x2c3	              0x90	                                     nop	       231	strbuf.h	FUNCTION_61
0x2c4	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_61
0x2c5	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_61
ends_with	WHILE,0:ELSE,0:IF,0:DO,0:SWITCH,0:CALL,1:functions,0:FOR,0	20
0x13c	              0x55	                                push rbp	       560	git-compat-util.h	FUNCTION_38
0x13d	          0x4889e5	                            mov rbp, rsp	       560	git-compat-util.h	FUNCTION_38
0x140	        0x4883ec20	                           sub rsp, 0x20	       560	git-compat-util.h	FUNCTION_38
0x144	        0x48897de8	             mov qword [rbp - 0x18], rdi	       560	git-compat-util.h	FUNCTION_38
0x148	        0x488975e0	             mov qword [rbp - 0x20], rsi	       560	git-compat-util.h	FUNCTION_38
0x14c	    0x64488b042528	                mov rax, qword fs:[0x28]	       560	git-compat-util.h	FUNCTION_38
0x155	        0x488945f8	                mov qword [rbp - 8], rax	       560	git-compat-util.h	FUNCTION_38
0x159	            0x31c0	                            xor eax, eax	       560	git-compat-util.h	FUNCTION_38
0x15b	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       562	git-compat-util.h	FUNCTION_38	CALL_1
0x15f	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       562	git-compat-util.h	FUNCTION_38	CALL_1
0x163	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       562	git-compat-util.h	FUNCTION_38	CALL_1
0x167	          0x4889ce	                            mov rsi, rcx	       562	git-compat-util.h	FUNCTION_38	CALL_1
0x16a	          0x4889c7	                            mov rdi, rax	       562	git-compat-util.h	FUNCTION_38	CALL_1
0x16d	      0xe887ffffff	                   call sym.strip_suffix	       562	git-compat-util.h	FUNCTION_38	CALL_1
0x172	        0x488b4df8	                mov rcx, qword [rbp - 8]	       563	git-compat-util.h	FUNCTION_38
0x176	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       563	git-compat-util.h	FUNCTION_38
0x17f	            0x7405	                            je 0x40001c6	       563	git-compat-util.h	FUNCTION_38
0x181	      0xe800000000	                          call 0x40001c6	       563	git-compat-util.h	FUNCTION_38
0x186	              0xc9	                                   leave	       563	git-compat-util.h	FUNCTION_38
0x187	              0xc3	                                     ret	       563	git-compat-util.h	FUNCTION_38
setup_reference	WHILE,0:ELSE,0:IF,0:DO,0:SWITCH,0:CALL,2:functions,0:FOR,0	25
0xd88	              0x55	                                push rbp	       345	clone.c	FUNCTION_7
0xd89	          0x4889e5	                            mov rbp, rsp	       345	clone.c	FUNCTION_7
0xd8c	        0x4883ec10	                           sub rsp, 0x10	       345	clone.c	FUNCTION_7
0xd90	    0x64488b042528	                mov rax, qword fs:[0x28]	       345	clone.c	FUNCTION_7
0xd99	        0x488945f8	                mov qword [rbp - 8], rax	       345	clone.c	FUNCTION_7
0xd9d	            0x31c0	                            xor eax, eax	       345	clone.c	FUNCTION_7
0xd9f	    0xc745f4010000	                mov dword [rbp - 0xc], 1	       346	clone.c	FUNCTION_7
0xda6	        0x488d45f4	                    lea rax, [rbp - 0xc]	       347	clone.c	FUNCTION_7	CALL_1
0xdaa	          0x4889c2	                            mov rdx, rax	       347	clone.c	FUNCTION_7	CALL_1
0xdad	      0xbe00000000	                              mov esi, 0	       347	clone.c	FUNCTION_7	CALL_1
0xdb2	      0xbf00000000	                              mov edi, 0	       347	clone.c	FUNCTION_7	CALL_1
0xdb7	      0xe800000000	                          call 0x4000dfc	       347	clone.c	FUNCTION_7	CALL_1
0xdbc	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       349	clone.c	FUNCTION_7
0xdc3	        0x488d45f4	                    lea rax, [rbp - 0xc]	       350	clone.c	FUNCTION_7	CALL_2
0xdc7	          0x4889c2	                            mov rdx, rax	       350	clone.c	FUNCTION_7	CALL_2
0xdca	      0xbe00000000	                              mov esi, 0	       350	clone.c	FUNCTION_7	CALL_2
0xdcf	      0xbf00000000	                              mov edi, 0	       350	clone.c	FUNCTION_7	CALL_2
0xdd4	      0xe800000000	                          call 0x4000e19	       350	clone.c	FUNCTION_7	CALL_2
0xdd9	              0x90	                                     nop	       352	clone.c	FUNCTION_7
0xdda	        0x488b45f8	                mov rax, qword [rbp - 8]	       352	clone.c	FUNCTION_7
0xdde	    0x644833042528	                xor rax, qword fs:[0x28]	       352	clone.c	FUNCTION_7
0xde7	            0x7405	                            je 0x4000e2e	       352	clone.c	FUNCTION_7
0xde9	      0xe800000000	                          call 0x4000e2e	       352	clone.c	FUNCTION_7
0xdee	              0xc9	                                   leave	       352	clone.c	FUNCTION_7
0xdef	              0xc3	                                     ret	       352	clone.c	FUNCTION_7
git_has_dos_drive_prefix	WHILE,0:ELSE,0:IF,0:DO,0:SWITCH,0:CALL,0:functions,0:FOR,0	6
0x0	              0x55	                                push rbp	       347	git-compat-util.h	FUNCTION_27
0x1	          0x4889e5	                            mov rbp, rsp	       347	git-compat-util.h	FUNCTION_27
0x4	        0x48897df8	                mov qword [rbp - 8], rdi	       347	git-compat-util.h	FUNCTION_27
0x8	      0xb800000000	                              mov eax, 0	       348	git-compat-util.h	FUNCTION_27
0xd	              0x5d	                                 pop rbp	       349	git-compat-util.h	FUNCTION_27
0xe	              0xc3	                                     ret	       349	git-compat-util.h	FUNCTION_27
strip_suffix	WHILE,0:ELSE,0:IF,0:DO,0:SWITCH,0:CALL,2:functions,0:FOR,0	20
0xf9	              0x55	                                push rbp	       554	git-compat-util.h	FUNCTION_37
0xfa	          0x4889e5	                            mov rbp, rsp	       554	git-compat-util.h	FUNCTION_37
0xfd	        0x4883ec20	                           sub rsp, 0x20	       554	git-compat-util.h	FUNCTION_37
0x101	        0x48897df8	                mov qword [rbp - 8], rdi	       554	git-compat-util.h	FUNCTION_37
0x105	        0x488975f0	             mov qword [rbp - 0x10], rsi	       554	git-compat-util.h	FUNCTION_37
0x109	        0x488955e8	             mov qword [rbp - 0x18], rdx	       554	git-compat-util.h	FUNCTION_37
0x10d	        0x488b45f8	                mov rax, qword [rbp - 8]	       555	git-compat-util.h	FUNCTION_37	CALL_1
0x111	          0x4889c7	                            mov rdi, rax	       555	git-compat-util.h	FUNCTION_37	CALL_1
0x114	      0xe800000000	                          call 0x4000159	       555	git-compat-util.h	FUNCTION_37	CALL_1
0x119	          0x4889c2	                            mov rdx, rax	       555	git-compat-util.h	FUNCTION_37	CALL_1
0x11c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       555	git-compat-util.h	FUNCTION_37	CALL_1
0x120	          0x488910	                    mov qword [rax], rdx	       555	git-compat-util.h	FUNCTION_37	CALL_1
0x123	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       556	git-compat-util.h	FUNCTION_37	CALL_2
0x127	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       556	git-compat-util.h	FUNCTION_37	CALL_2
0x12b	        0x488b45f8	                mov rax, qword [rbp - 8]	       556	git-compat-util.h	FUNCTION_37	CALL_2
0x12f	          0x4889ce	                            mov rsi, rcx	       556	git-compat-util.h	FUNCTION_37	CALL_2
0x132	          0x4889c7	                            mov rdi, rax	       556	git-compat-util.h	FUNCTION_37	CALL_2
0x135	      0xe83effffff	               call sym.strip_suffix_mem	       556	git-compat-util.h	FUNCTION_37	CALL_2
0x13a	              0xc9	                                   leave	       557	git-compat-util.h	FUNCTION_37
0x13b	              0xc3	                                     ret	       557	git-compat-util.h	FUNCTION_37
update_head	WHILE,0:ELSE,2:IF,5:DO,0:SWITCH,0:CALL,9:functions,0:FOR,0	89
0x1cc2	              0x55	                                push rbp	       685	clone.c	FUNCTION_19
0x1cc3	          0x4889e5	                            mov rbp, rsp	       685	clone.c	FUNCTION_19
0x1cc6	        0x4883ec40	                           sub rsp, 0x40	       685	clone.c	FUNCTION_19
0x1cca	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       685	clone.c	FUNCTION_19
0x1cce	        0x488975d0	             mov qword [rbp - 0x30], rsi	       685	clone.c	FUNCTION_19
0x1cd2	        0x488955c8	             mov qword [rbp - 0x38], rdx	       685	clone.c	FUNCTION_19
0x1cd6	    0x64488b042528	                mov rax, qword fs:[0x28]	       685	clone.c	FUNCTION_19
0x1cdf	        0x488945f8	                mov qword [rbp - 8], rax	       685	clone.c	FUNCTION_19
0x1ce3	            0x31c0	                            xor eax, eax	       685	clone.c	FUNCTION_19
0x1ce5	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       687	clone.c	FUNCTION_19	IF_1	CALL_1
0x1cea	     0xf84b3000000	                            je 0x4001de3	       687	clone.c	FUNCTION_19	IF_1	CALL_1
0x1cf0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       687	clone.c	FUNCTION_19	IF_1	CALL_1
0x1cf4	        0x488d4870	                   lea rcx, [rax + 0x70]	       687	clone.c	FUNCTION_19	IF_1	CALL_1
0x1cf8	        0x488d45e8	                   lea rax, [rbp - 0x18]	       687	clone.c	FUNCTION_19	IF_1	CALL_1
0x1cfc	          0x4889c2	                            mov rdx, rax	       687	clone.c	FUNCTION_19	IF_1	CALL_1
0x1cff	      0xbe00000000	                              mov esi, 0	       687	clone.c	FUNCTION_19	IF_1	CALL_1
0x1d04	          0x4889cf	                            mov rdi, rcx	       687	clone.c	FUNCTION_19	IF_1	CALL_1
0x1d07	      0xe816e3ffff	                    call sym.skip_prefix	       687	clone.c	FUNCTION_19	IF_1	CALL_1
0x1d0c	            0x85c0	                           test eax, eax	       687	clone.c	FUNCTION_19	IF_1	CALL_1
0x1d0e	     0xf848f000000	                            je 0x4001de3	       687	clone.c	FUNCTION_19	IF_1	CALL_1
0x1d14	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       689	clone.c	FUNCTION_19	IF_1	IF_2	CALL_2
0x1d18	        0x4883c070	                           add rax, 0x70	       689	clone.c	FUNCTION_19	IF_1	IF_2	CALL_2
0x1d1c	      0xba00000000	                              mov edx, 0	       689	clone.c	FUNCTION_19	IF_1	IF_2	CALL_2
0x1d21	          0x4889c6	                            mov rsi, rax	       689	clone.c	FUNCTION_19	IF_1	IF_2	CALL_2
0x1d24	      0xbf00000000	                              mov edi, 0	       689	clone.c	FUNCTION_19	IF_1	IF_2	CALL_2
0x1d29	      0xe800000000	                          call 0x4001d6e	       689	clone.c	FUNCTION_19	IF_1	IF_2	CALL_2
0x1d2e	            0x85c0	                           test eax, eax	       689	clone.c	FUNCTION_19	IF_1	IF_2	CALL_2
0x1d30	            0x7917	                           jns 0x4001d89	       689	clone.c	FUNCTION_19	IF_1	IF_2	CALL_2
0x1d32	      0xbf00000000	                              mov edi, 0	       690	clone.c	FUNCTION_19	IF_1	CALL_4
0x1d37	      0xe8bfe5ffff	                               call sym.	       690	clone.c	FUNCTION_19	IF_1	CALL_4
0x1d3c	          0x4889c7	                            mov rdi, rax	       690	clone.c	FUNCTION_19	IF_1	CALL_4
0x1d3f	      0xb800000000	                              mov eax, 0	       690	clone.c	FUNCTION_19	IF_1	CALL_4
0x1d44	      0xe800000000	                          call 0x4001d89	       690	clone.c	FUNCTION_19	IF_1	CALL_4
0x1d49	    0x8b0500000000	            mov eax, dword [0x04001d8f] 	       691	clone.c	FUNCTION_19	IF_1	IF_3
0x1d4f	            0x85c0	                           test eax, eax	       691	clone.c	FUNCTION_19	IF_1	IF_3
0x1d51	     0xf85c6000000	                           jne 0x4001e5d	       691	clone.c	FUNCTION_19	IF_1	IF_3
0x1d57	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       692	clone.c	FUNCTION_19	IF_1	IF_3	CALL_5
0x1d5b	        0x488d5008	                      lea rdx, [rax + 8]	       692	clone.c	FUNCTION_19	IF_1	IF_3	CALL_5
0x1d5f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       692	clone.c	FUNCTION_19	IF_1	IF_3	CALL_5
0x1d63	    0x41b901000000	                              mov r9d, 1	       692	clone.c	FUNCTION_19	IF_1	IF_3	CALL_5
0x1d69	    0x41b800000000	                              mov r8d, 0	       692	clone.c	FUNCTION_19	IF_1	IF_3	CALL_5
0x1d6f	      0xb900000000	                              mov ecx, 0	       692	clone.c	FUNCTION_19	IF_1	IF_3	CALL_5
0x1d74	      0xbe00000000	                              mov esi, 0	       692	clone.c	FUNCTION_19	IF_1	IF_3	CALL_5
0x1d79	          0x4889c7	                            mov rdi, rax	       692	clone.c	FUNCTION_19	IF_1	IF_3	CALL_5
0x1d7c	      0xe800000000	                          call 0x4001dc1	       692	clone.c	FUNCTION_19	IF_1	IF_3	CALL_5
0x1d81	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       694	clone.c	FUNCTION_19	IF_1	IF_3	CALL_6
0x1d85	        0x488d4870	                   lea rcx, [rax + 0x70]	       694	clone.c	FUNCTION_19	IF_1	IF_3	CALL_6
0x1d89	    0x488b15000000	            mov rdx, qword [0x04001dd0] 	       694	clone.c	FUNCTION_19	IF_1	IF_3	CALL_6
0x1d90	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       694	clone.c	FUNCTION_19	IF_1	IF_3	CALL_6
0x1d94	          0x4889c6	                            mov rsi, rax	       694	clone.c	FUNCTION_19	IF_1	IF_3	CALL_6
0x1d97	      0xbf00000000	                              mov edi, 0	       694	clone.c	FUNCTION_19	IF_1	IF_3	CALL_6
0x1d9c	      0xe800000000	                          call 0x4001de1	       694	clone.c	FUNCTION_19	IF_1	IF_3	CALL_6
0x1da1	            0xeb7a	                           jmp 0x4001e5d	       691	clone.c	FUNCTION_19	IF_1	IF_3
0x1da3	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       696	clone.c	FUNCTION_19	ELSE_1	IF_4
0x1da8	            0x7440	                            je 0x4001e2a	       696	clone.c	FUNCTION_19	ELSE_1	IF_4
0x1daa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       697	clone.c	FUNCTION_19	ELSE_1	IF_4	CALL_7
0x1dae	        0x4883c008	                              add rax, 8	       697	clone.c	FUNCTION_19	ELSE_1	IF_4	CALL_7
0x1db2	          0x4889c7	                            mov rdi, rax	       697	clone.c	FUNCTION_19	ELSE_1	IF_4	CALL_7
0x1db5	      0xe800000000	                          call 0x4001dfa	       697	clone.c	FUNCTION_19	ELSE_1	IF_4	CALL_7
0x1dba	        0x488945f0	             mov qword [rbp - 0x10], rax	       697	clone.c	FUNCTION_19	ELSE_1	IF_4	CALL_7
0x1dbe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       699	clone.c	FUNCTION_19	ELSE_1	IF_4	CALL_8
0x1dc2	        0x488d5004	                      lea rdx, [rax + 4]	       699	clone.c	FUNCTION_19	ELSE_1	IF_4	CALL_8
0x1dc6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       699	clone.c	FUNCTION_19	ELSE_1	IF_4	CALL_8
0x1dca	    0x41b901000000	                              mov r9d, 1	       699	clone.c	FUNCTION_19	ELSE_1	IF_4	CALL_8
0x1dd0	    0x41b801000000	                              mov r8d, 1	       699	clone.c	FUNCTION_19	ELSE_1	IF_4	CALL_8
0x1dd6	      0xb900000000	                              mov ecx, 0	       699	clone.c	FUNCTION_19	ELSE_1	IF_4	CALL_8
0x1ddb	      0xbe00000000	                              mov esi, 0	       699	clone.c	FUNCTION_19	ELSE_1	IF_4	CALL_8
0x1de0	          0x4889c7	                            mov rdi, rax	       699	clone.c	FUNCTION_19	ELSE_1	IF_4	CALL_8
0x1de3	      0xe800000000	                          call 0x4001e28	       699	clone.c	FUNCTION_19	ELSE_1	IF_4	CALL_8
0x1de8	            0xeb33	                           jmp 0x4001e5d	       710	clone.c	FUNCTION_19
0x1dea	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       701	clone.c	FUNCTION_19	ELSE_2	IF_5
0x1def	            0x742c	                            je 0x4001e5d	       701	clone.c	FUNCTION_19	ELSE_2	IF_5
0x1df1	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       707	clone.c	FUNCTION_19	ELSE_2	IF_5	CALL_9
0x1df5	        0x488d5008	                      lea rdx, [rax + 8]	       707	clone.c	FUNCTION_19	ELSE_2	IF_5	CALL_9
0x1df9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       707	clone.c	FUNCTION_19	ELSE_2	IF_5	CALL_9
0x1dfd	    0x41b901000000	                              mov r9d, 1	       707	clone.c	FUNCTION_19	ELSE_2	IF_5	CALL_9
0x1e03	    0x41b801000000	                              mov r8d, 1	       707	clone.c	FUNCTION_19	ELSE_2	IF_5	CALL_9
0x1e09	      0xb900000000	                              mov ecx, 0	       707	clone.c	FUNCTION_19	ELSE_2	IF_5	CALL_9
0x1e0e	      0xbe00000000	                              mov esi, 0	       707	clone.c	FUNCTION_19	ELSE_2	IF_5	CALL_9
0x1e13	          0x4889c7	                            mov rdi, rax	       707	clone.c	FUNCTION_19	ELSE_2	IF_5	CALL_9
0x1e16	      0xe800000000	                          call 0x4001e5b	       707	clone.c	FUNCTION_19	ELSE_2	IF_5	CALL_9
0x1e1b	            0xeb00	                           jmp 0x4001e5d	       710	clone.c	FUNCTION_19
0x1e1d	              0x90	                                     nop	       710	clone.c	FUNCTION_19
0x1e1e	        0x488b45f8	                mov rax, qword [rbp - 8]	       710	clone.c	FUNCTION_19
0x1e22	    0x644833042528	                xor rax, qword fs:[0x28]	       710	clone.c	FUNCTION_19
0x1e2b	            0x7405	                            je 0x4001e72	       710	clone.c	FUNCTION_19
0x1e2d	      0xe800000000	                          call 0x4001e72	       710	clone.c	FUNCTION_19
0x1e32	              0xc9	                                   leave	       710	clone.c	FUNCTION_19
0x1e33	              0xc3	                                     ret	       710	clone.c	FUNCTION_19
recurse_submodules_cb	WHILE,0:ELSE,2:IF,2:DO,0:SWITCH,0:CALL,3:functions,0:FOR,0	34
0x427	              0x55	                                push rbp	        69	clone.c	IF_9	FUNCTION_1
0x428	          0x4889e5	                            mov rbp, rsp	        69	clone.c	IF_9	FUNCTION_1
0x42b	        0x4883ec20	                           sub rsp, 0x20	        69	clone.c	IF_9	FUNCTION_1
0x42f	        0x48897df8	                mov qword [rbp - 8], rdi	        69	clone.c	IF_9	FUNCTION_1
0x433	        0x488975f0	             mov qword [rbp - 0x10], rsi	        69	clone.c	IF_9	FUNCTION_1
0x437	          0x8955ec	             mov dword [rbp - 0x14], edx	        69	clone.c	IF_9	FUNCTION_1
0x43a	        0x837dec00	               cmp dword [rbp - 0x14], 0	        70	clone.c	IF_9	FUNCTION_1	IF_1
0x43e	            0x7417	                            je 0x4000497	        70	clone.c	IF_9	FUNCTION_1	IF_1
0x440	        0x488b45f8	                mov rax, qword [rbp - 8]	        71	clone.c	IF_9	FUNCTION_1	CALL_1
0x444	        0x488b4010	            mov rax, qword [rax + 0x10] 	        71	clone.c	IF_9	FUNCTION_1	CALL_1
0x448	      0xbe00000000	                              mov esi, 0	        71	clone.c	IF_9	FUNCTION_1	CALL_1
0x44d	          0x4889c7	                            mov rdi, rax	        71	clone.c	IF_9	FUNCTION_1	CALL_1
0x450	      0xe800000000	                          call 0x4000495	        71	clone.c	IF_9	FUNCTION_1	CALL_1
0x455	            0xeb3e	                           jmp 0x40004d5	        71	clone.c	IF_9	FUNCTION_1	CALL_1
0x457	      0x48837df000	               cmp qword [rbp - 0x10], 0	        72	clone.c	IF_9	FUNCTION_1	ELSE_1	IF_2
0x45c	            0x7419	                            je 0x40004b7	        72	clone.c	IF_9	FUNCTION_1	ELSE_1	IF_2
0x45e	        0x488b45f8	                mov rax, qword [rbp - 8]	        73	clone.c	IF_9	FUNCTION_1	ELSE_1	IF_2
0x462	        0x488b4010	            mov rax, qword [rax + 0x10] 	        73	clone.c	IF_9	FUNCTION_1	ELSE_1	IF_2
0x466	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        73	clone.c	IF_9	FUNCTION_1	ELSE_1	IF_2
0x46a	          0x4889d6	                            mov rsi, rdx	        73	clone.c	IF_9	FUNCTION_1	ELSE_1	IF_2
0x46d	          0x4889c7	                            mov rdi, rax	        73	clone.c	IF_9	FUNCTION_1	ELSE_1	IF_2
0x470	      0xe800000000	                          call 0x40004b5	        73	clone.c	IF_9	FUNCTION_1	ELSE_1	IF_2
0x475	            0xeb1e	                           jmp 0x40004d5	        73	clone.c	IF_9	FUNCTION_1	ELSE_1	IF_2
0x477	        0x488b45f8	                mov rax, qword [rbp - 8]	        76	clone.c	IF_9	FUNCTION_1	ELSE_2
0x47b	        0x488b4038	            mov rax, qword [rax + 0x38] 	        76	clone.c	IF_9	FUNCTION_1	ELSE_2
0x47f	          0x4889c2	                            mov rdx, rax	        75	clone.c	IF_9	FUNCTION_1	ELSE_2	CALL_3
0x482	        0x488b45f8	                mov rax, qword [rbp - 8]	        75	clone.c	IF_9	FUNCTION_1	ELSE_2	CALL_3
0x486	        0x488b4010	            mov rax, qword [rax + 0x10] 	        75	clone.c	IF_9	FUNCTION_1	ELSE_2	CALL_3
0x48a	          0x4889d6	                            mov rsi, rdx	        75	clone.c	IF_9	FUNCTION_1	ELSE_2	CALL_3
0x48d	          0x4889c7	                            mov rdi, rax	        75	clone.c	IF_9	FUNCTION_1	ELSE_2	CALL_3
0x490	      0xe800000000	                          call 0x40004d5	        75	clone.c	IF_9	FUNCTION_1	ELSE_2	CALL_3
0x495	      0xb800000000	                              mov eax, 0	        78	clone.c	IF_9	FUNCTION_1
0x49a	              0xc9	                                   leave	        79	clone.c	IF_9	FUNCTION_1
0x49b	              0xc3	                                     ret	        79	clone.c	IF_9	FUNCTION_1
dir_exists	WHILE,0:ELSE,0:IF,0:DO,0:SWITCH,0:CALL,1:functions,0:FOR,0	21
0x25bf	              0x55	                                push rbp	       873	clone.c	FUNCTION_25
0x25c0	          0x4889e5	                            mov rbp, rsp	       873	clone.c	FUNCTION_25
0x25c3	    0x4881ecb00000	                           sub rsp, 0xb0	       873	clone.c	FUNCTION_25
0x25ca	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	       873	clone.c	FUNCTION_25
0x25d1	    0x64488b042528	                mov rax, qword fs:[0x28]	       873	clone.c	FUNCTION_25
0x25da	        0x488945f8	                mov qword [rbp - 8], rax	       873	clone.c	FUNCTION_25
0x25de	            0x31c0	                            xor eax, eax	       873	clone.c	FUNCTION_25
0x25e0	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       875	clone.c	FUNCTION_25	CALL_1
0x25e7	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       875	clone.c	FUNCTION_25	CALL_1
0x25ee	          0x4889d6	                            mov rsi, rdx	       875	clone.c	FUNCTION_25	CALL_1
0x25f1	          0x4889c7	                            mov rdi, rax	       875	clone.c	FUNCTION_25	CALL_1
0x25f4	      0xe800000000	                          call 0x4002639	       875	clone.c	FUNCTION_25	CALL_1
0x25f9	            0x85c0	                           test eax, eax	       875	clone.c	FUNCTION_25	CALL_1
0x25fb	           0xf94c0	                                 sete al	       875	clone.c	FUNCTION_25	CALL_1
0x25fe	           0xfb6c0	                           movzx eax, al	       875	clone.c	FUNCTION_25	CALL_1
0x2601	        0x488b4df8	                mov rcx, qword [rbp - 8]	       876	clone.c	FUNCTION_25
0x2605	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       876	clone.c	FUNCTION_25
0x260e	            0x7405	                            je 0x4002655	       876	clone.c	FUNCTION_25
0x2610	      0xe800000000	                          call 0x4002655	       876	clone.c	FUNCTION_25
0x2615	              0xc9	                                   leave	       876	clone.c	FUNCTION_25
0x2616	              0xc3	                                     ret	       876	clone.c	FUNCTION_25
write_remote_refs	WHILE,0:ELSE,0:IF,4:DO,0:SWITCH,0:CALL,8:functions,0:FOR,1	78
0x18b6	              0x55	                                push rbp	       585	clone.c	FUNCTION_15
0x18b7	          0x4889e5	                            mov rbp, rsp	       585	clone.c	FUNCTION_15
0x18ba	        0x4883ec40	                           sub rsp, 0x40	       585	clone.c	FUNCTION_15
0x18be	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       585	clone.c	FUNCTION_15
0x18c2	    0x64488b042528	                mov rax, qword fs:[0x28]	       585	clone.c	FUNCTION_15
0x18cb	        0x488945f8	                mov qword [rbp - 8], rax	       585	clone.c	FUNCTION_15
0x18cf	            0x31c0	                            xor eax, eax	       585	clone.c	FUNCTION_15
0x18d1	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       589	clone.c	FUNCTION_15
0x18d9	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       589	clone.c	FUNCTION_15
0x18e1	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       589	clone.c	FUNCTION_15
0x18e9	        0x488d45e0	                   lea rax, [rbp - 0x20]	       591	clone.c	FUNCTION_15	CALL_1
0x18ed	          0x4889c7	                            mov rdi, rax	       591	clone.c	FUNCTION_15	CALL_1
0x18f0	      0xe800000000	                          call 0x4001935	       591	clone.c	FUNCTION_15	CALL_1
0x18f5	        0x488945d8	             mov qword [rbp - 0x28], rax	       591	clone.c	FUNCTION_15	CALL_1
0x18f9	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       592	clone.c	FUNCTION_15	IF_1
0x18fe	            0x7516	                           jne 0x4001956	       592	clone.c	FUNCTION_15	IF_1
0x1900	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       593	clone.c	FUNCTION_15	CALL_2
0x1904	          0x4889c6	                            mov rsi, rax	       593	clone.c	FUNCTION_15	CALL_2
0x1907	      0xbf00000000	                              mov edi, 0	       593	clone.c	FUNCTION_15	CALL_2
0x190c	      0xb800000000	                              mov eax, 0	       593	clone.c	FUNCTION_15	CALL_2
0x1911	      0xe800000000	                          call 0x4001956	       593	clone.c	FUNCTION_15	CALL_2
0x1916	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       595	clone.c	FUNCTION_15	FOR_1
0x191a	        0x488945d0	             mov qword [rbp - 0x30], rax	       595	clone.c	FUNCTION_15	FOR_1
0x191e	            0xeb65	                           jmp 0x40019c5	       595	clone.c	FUNCTION_15	FOR_1
0x1920	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       596	clone.c	FUNCTION_15	FOR_1	IF_2
0x1924	        0x488b4068	            mov rax, qword [rax + 0x68] 	       596	clone.c	FUNCTION_15	FOR_1	IF_2
0x1928	          0x4885c0	                           test rax, rax	       596	clone.c	FUNCTION_15	FOR_1	IF_2
0x192b	            0x744c	                            je 0x40019b9	       596	clone.c	FUNCTION_15	FOR_1	IF_2
0x192d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       598	clone.c	FUNCTION_15	FOR_1	IF_3	CALL_3
0x1931	        0x488d5008	                      lea rdx, [rax + 8]	       598	clone.c	FUNCTION_15	FOR_1	IF_3	CALL_3
0x1935	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       598	clone.c	FUNCTION_15	FOR_1	IF_3	CALL_3
0x1939	        0x488b4068	            mov rax, qword [rax + 0x68] 	       598	clone.c	FUNCTION_15	FOR_1	IF_3	CALL_3
0x193d	        0x488d7070	                   lea rsi, [rax + 0x70]	       598	clone.c	FUNCTION_15	FOR_1	IF_3	CALL_3
0x1941	        0x488d4de0	                   lea rcx, [rbp - 0x20]	       598	clone.c	FUNCTION_15	FOR_1	IF_3	CALL_3
0x1945	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       598	clone.c	FUNCTION_15	FOR_1	IF_3	CALL_3
0x1949	          0x4989c9	                             mov r9, rcx	       598	clone.c	FUNCTION_15	FOR_1	IF_3	CALL_3
0x194c	    0x41b800000000	                              mov r8d, 0	       598	clone.c	FUNCTION_15	FOR_1	IF_3	CALL_3
0x1952	      0xb900000000	                              mov ecx, 0	       598	clone.c	FUNCTION_15	FOR_1	IF_3	CALL_3
0x1957	          0x4889c7	                            mov rdi, rax	       598	clone.c	FUNCTION_15	FOR_1	IF_3	CALL_3
0x195a	      0xe800000000	                          call 0x400199f	       598	clone.c	FUNCTION_15	FOR_1	IF_3	CALL_3
0x195f	            0x85c0	                           test eax, eax	       598	clone.c	FUNCTION_15	FOR_1	IF_3	CALL_3
0x1961	            0x7417	                            je 0x40019ba	       598	clone.c	FUNCTION_15	FOR_1	IF_3	CALL_3
0x1963	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       600	clone.c	FUNCTION_15	FOR_1	CALL_4
0x1967	          0x4889c6	                            mov rsi, rax	       600	clone.c	FUNCTION_15	FOR_1	CALL_4
0x196a	      0xbf00000000	                              mov edi, 0	       600	clone.c	FUNCTION_15	FOR_1	CALL_4
0x196f	      0xb800000000	                              mov eax, 0	       600	clone.c	FUNCTION_15	FOR_1	CALL_4
0x1974	      0xe800000000	                          call 0x40019b9	       600	clone.c	FUNCTION_15	FOR_1	CALL_4
0x1979	              0x90	                                     nop	       597	clone.c	FUNCTION_15	FOR_1	IF_2
0x197a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       595	clone.c	FUNCTION_15	FOR_1
0x197e	          0x488b00	                    mov rax, qword [rax]	       595	clone.c	FUNCTION_15	FOR_1
0x1981	        0x488945d0	             mov qword [rbp - 0x30], rax	       595	clone.c	FUNCTION_15	FOR_1
0x1985	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       595	clone.c	FUNCTION_15	FOR_1
0x198a	            0x7594	                           jne 0x4001960	       595	clone.c	FUNCTION_15	FOR_1
0x198c	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       603	clone.c	FUNCTION_15	IF_4	CALL_5
0x1990	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       603	clone.c	FUNCTION_15	IF_4	CALL_5
0x1994	          0x4889d6	                            mov rsi, rdx	       603	clone.c	FUNCTION_15	IF_4	CALL_5
0x1997	          0x4889c7	                            mov rdi, rax	       603	clone.c	FUNCTION_15	IF_4	CALL_5
0x199a	      0xe800000000	                          call 0x40019df	       603	clone.c	FUNCTION_15	IF_4	CALL_5
0x199f	            0x85c0	                           test eax, eax	       603	clone.c	FUNCTION_15	IF_4	CALL_5
0x19a1	            0x7416	                            je 0x40019f9	       603	clone.c	FUNCTION_15	IF_4	CALL_5
0x19a3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       604	clone.c	FUNCTION_15	CALL_6
0x19a7	          0x4889c6	                            mov rsi, rax	       604	clone.c	FUNCTION_15	CALL_6
0x19aa	      0xbf00000000	                              mov edi, 0	       604	clone.c	FUNCTION_15	CALL_6
0x19af	      0xb800000000	                              mov eax, 0	       604	clone.c	FUNCTION_15	CALL_6
0x19b4	      0xe800000000	                          call 0x40019f9	       604	clone.c	FUNCTION_15	CALL_6
0x19b9	        0x488d45e0	                   lea rax, [rbp - 0x20]	       606	clone.c	FUNCTION_15	CALL_7
0x19bd	          0x4889c7	                            mov rdi, rax	       606	clone.c	FUNCTION_15	CALL_7
0x19c0	      0xe800000000	                          call 0x4001a05	       606	clone.c	FUNCTION_15	CALL_7
0x19c5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       607	clone.c	FUNCTION_15	CALL_8
0x19c9	          0x4889c7	                            mov rdi, rax	       607	clone.c	FUNCTION_15	CALL_8
0x19cc	      0xe800000000	                          call 0x4001a11	       607	clone.c	FUNCTION_15	CALL_8
0x19d1	              0x90	                                     nop	       608	clone.c	FUNCTION_15
0x19d2	        0x488b45f8	                mov rax, qword [rbp - 8]	       608	clone.c	FUNCTION_15
0x19d6	    0x644833042528	                xor rax, qword fs:[0x28]	       608	clone.c	FUNCTION_15
0x19df	            0x7405	                            je 0x4001a26	       608	clone.c	FUNCTION_15
0x19e1	      0xe800000000	                          call 0x4001a26	       608	clone.c	FUNCTION_15
0x19e6	              0xc9	                                   leave	       608	clone.c	FUNCTION_15
0x19e7	              0xc3	                                     ret	       608	clone.c	FUNCTION_15
strbuf_avail	WHILE,0:ELSE,0:IF,0:DO,0:SWITCH,0:CALL,0:functions,0:FOR,0	18
0x188	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_59
0x189	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_59
0x18c	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_59
0x190	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_59
0x194	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_59
0x197	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_59
0x19a	            0x741b	                            je 0x40001f7	       141	strbuf.h	FUNCTION_59
0x19c	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_59
0x1a0	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_59
0x1a3	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_59
0x1a7	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_59
0x1ab	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_59
0x1ae	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_59
0x1b1	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_59
0x1b5	            0xeb05	                           jmp 0x40001fc	       141	strbuf.h	FUNCTION_59
0x1b7	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_59
0x1bc	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_59
0x1bd	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_59
guess_dir_name	WHILE,4:ELSE,3:IF,12:DO,0:SWITCH,0:CALL,18:functions,0:FOR,2	291
0x7fa	              0x55	                                push rbp	       206	clone.c	IF_9	FUNCTION_4
0x7fb	          0x4889e5	                            mov rbp, rsp	       206	clone.c	IF_9	FUNCTION_4
0x7fe	        0x4883ec50	                           sub rsp, 0x50	       206	clone.c	IF_9	FUNCTION_4
0x802	        0x48897db8	             mov qword [rbp - 0x48], rdi	       206	clone.c	IF_9	FUNCTION_4
0x806	          0x8975b4	             mov dword [rbp - 0x4c], esi	       206	clone.c	IF_9	FUNCTION_4
0x809	          0x8955b0	             mov dword [rbp - 0x50], edx	       206	clone.c	IF_9	FUNCTION_4
0x80c	    0x64488b042528	                mov rax, qword fs:[0x28]	       206	clone.c	IF_9	FUNCTION_4
0x815	        0x488945f8	                mov qword [rbp - 8], rax	       206	clone.c	IF_9	FUNCTION_4
0x819	            0x31c0	                            xor eax, eax	       206	clone.c	IF_9	FUNCTION_4
0x81b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       207	clone.c	IF_9	FUNCTION_4	CALL_1
0x81f	          0x4889c7	                            mov rdi, rax	       207	clone.c	IF_9	FUNCTION_4	CALL_1
0x822	      0xe800000000	                          call 0x4000867	       207	clone.c	IF_9	FUNCTION_4	CALL_1
0x827	          0x4889c2	                            mov rdx, rax	       207	clone.c	IF_9	FUNCTION_4	CALL_1
0x82a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       207	clone.c	IF_9	FUNCTION_4	CALL_1
0x82e	          0x4801d0	                            add rax, rdx	       207	clone.c	IF_9	FUNCTION_4	CALL_1
0x831	        0x488945d0	             mov qword [rbp - 0x30], rax	       207	clone.c	IF_9	FUNCTION_4	CALL_1
0x835	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       214	clone.c	IF_9	FUNCTION_4	CALL_2
0x839	      0xbe00000000	                              mov esi, 0	       214	clone.c	IF_9	FUNCTION_4	CALL_2
0x83e	          0x4889c7	                            mov rdi, rax	       214	clone.c	IF_9	FUNCTION_4	CALL_2
0x841	      0xe800000000	                          call 0x4000886	       214	clone.c	IF_9	FUNCTION_4	CALL_2
0x846	        0x488945d8	             mov qword [rbp - 0x28], rax	       214	clone.c	IF_9	FUNCTION_4	CALL_2
0x84a	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       215	clone.c	IF_9	FUNCTION_4	IF_1
0x84f	            0x750a	                           jne 0x400089b	       215	clone.c	IF_9	FUNCTION_4	IF_1
0x851	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       216	clone.c	IF_9	FUNCTION_4	IF_1
0x855	        0x488945d8	             mov qword [rbp - 0x28], rax	       216	clone.c	IF_9	FUNCTION_4	IF_1
0x859	            0xeb05	                           jmp 0x40008a0	       216	clone.c	IF_9	FUNCTION_4	IF_1
0x85b	      0x488345d803	               add qword [rbp - 0x28], 3	       218	clone.c	IF_9	FUNCTION_4	ELSE_1
0x860	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       225	clone.c	IF_9	FUNCTION_4	ELSE_1	FOR_1	CALL_3
0x864	        0x488945e0	             mov qword [rbp - 0x20], rax	       225	clone.c	IF_9	FUNCTION_4	ELSE_1	FOR_1	CALL_3
0x868	            0xeb1c	                           jmp 0x40008c6	       225	clone.c	IF_9	FUNCTION_4	ELSE_1	FOR_1	CALL_3
0x86a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       226	clone.c	IF_9	FUNCTION_4	ELSE_1	FOR_1	IF_2
0x86e	           0xfb600	                   movzx eax, byte [rax]	       226	clone.c	IF_9	FUNCTION_4	ELSE_1	FOR_1	IF_2
0x871	            0x3c40	                            cmp al, 0x40	       226	clone.c	IF_9	FUNCTION_4	ELSE_1	FOR_1	IF_2
0x873	            0x750c	                           jne 0x40008c1	       226	clone.c	IF_9	FUNCTION_4	ELSE_1	FOR_1	IF_2
0x875	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       227	clone.c	IF_9	FUNCTION_4	ELSE_1	FOR_1	IF_2
0x879	        0x4883c001	                              add rax, 1	       227	clone.c	IF_9	FUNCTION_4	ELSE_1	FOR_1	IF_2
0x87d	        0x488945d8	             mov qword [rbp - 0x28], rax	       227	clone.c	IF_9	FUNCTION_4	ELSE_1	FOR_1	IF_2
0x881	      0x488345e001	               add qword [rbp - 0x20], 1	       225	clone.c	IF_9	FUNCTION_4	ELSE_1	FOR_1	CALL_3
0x886	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       225	clone.c	IF_9	FUNCTION_4	ELSE_1	FOR_1	CALL_3
0x88a	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       225	clone.c	IF_9	FUNCTION_4	ELSE_1	FOR_1	CALL_3
0x88e	            0x731c	                           jae 0x40008ec	       225	clone.c	IF_9	FUNCTION_4	ELSE_1	FOR_1	CALL_3
0x890	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       225	clone.c	IF_9	FUNCTION_4	ELSE_1	FOR_1	CALL_3
0x894	           0xfb600	                   movzx eax, byte [rax]	       225	clone.c	IF_9	FUNCTION_4	ELSE_1	FOR_1	CALL_3
0x897	           0xfbec0	                           movsx eax, al	       225	clone.c	IF_9	FUNCTION_4	ELSE_1	FOR_1	CALL_3
0x89a	            0x89c7	                            mov edi, eax	       225	clone.c	IF_9	FUNCTION_4	ELSE_1	FOR_1	CALL_3
0x89c	      0xe86ef7ffff	                 call sym.git_is_dir_sep	       225	clone.c	IF_9	FUNCTION_4	ELSE_1	FOR_1	CALL_3
0x8a1	            0x85c0	                           test eax, eax	       225	clone.c	IF_9	FUNCTION_4	ELSE_1	FOR_1	CALL_3
0x8a3	            0x74c5	                            je 0x40008aa	       225	clone.c	IF_9	FUNCTION_4	ELSE_1	FOR_1	CALL_3
0x8a5	            0xeb05	                           jmp 0x40008ec	       233	clone.c	IF_9	FUNCTION_4	WHILE_1	CALL_5
0x8a7	      0x48836dd001	               sub qword [rbp - 0x30], 1	       234	clone.c	IF_9	FUNCTION_4	WHILE_1
0x8ac	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       233	clone.c	IF_9	FUNCTION_4	WHILE_1	CALL_5
0x8b0	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       233	clone.c	IF_9	FUNCTION_4	WHILE_1	CALL_5
0x8b4	            0x733a	                           jae 0x4000930	       233	clone.c	IF_9	FUNCTION_4	WHILE_1	CALL_5
0x8b6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       233	clone.c	IF_9	FUNCTION_4	WHILE_1	CALL_5
0x8ba	        0x4883e801	                              sub rax, 1	       233	clone.c	IF_9	FUNCTION_4	WHILE_1	CALL_5
0x8be	           0xfb600	                   movzx eax, byte [rax]	       233	clone.c	IF_9	FUNCTION_4	WHILE_1	CALL_5
0x8c1	           0xfbec0	                           movsx eax, al	       233	clone.c	IF_9	FUNCTION_4	WHILE_1	CALL_5
0x8c4	            0x89c7	                            mov edi, eax	       233	clone.c	IF_9	FUNCTION_4	WHILE_1	CALL_5
0x8c6	      0xe844f7ffff	                 call sym.git_is_dir_sep	       233	clone.c	IF_9	FUNCTION_4	WHILE_1	CALL_5
0x8cb	            0x85c0	                           test eax, eax	       233	clone.c	IF_9	FUNCTION_4	WHILE_1	CALL_5
0x8cd	            0x75d8	                           jne 0x40008e7	       233	clone.c	IF_9	FUNCTION_4	WHILE_1	CALL_5
0x8cf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       233	clone.c	IF_9	FUNCTION_4	WHILE_1	CALL_5
0x8d3	        0x4883e801	                              sub rax, 1	       233	clone.c	IF_9	FUNCTION_4	WHILE_1	CALL_5
0x8d7	           0xfb600	                   movzx eax, byte [rax]	       233	clone.c	IF_9	FUNCTION_4	WHILE_1	CALL_5
0x8da	           0xfb6c0	                           movzx eax, al	       233	clone.c	IF_9	FUNCTION_4	WHILE_1	CALL_5
0x8dd	            0x4898	                                    cdqe	       233	clone.c	IF_9	FUNCTION_4	WHILE_1	CALL_5
0x8df	     0xfb680000000	                   movzx eax, byte [rax]	       233	clone.c	IF_9	FUNCTION_4	WHILE_1	CALL_5
0x8e6	           0xfb6c0	                           movzx eax, al	       233	clone.c	IF_9	FUNCTION_4	WHILE_1	CALL_5
0x8e9	          0x83e001	                              and eax, 1	       233	clone.c	IF_9	FUNCTION_4	WHILE_1	CALL_5
0x8ec	            0x85c0	                           test eax, eax	       233	clone.c	IF_9	FUNCTION_4	WHILE_1	CALL_5
0x8ee	            0x75b7	                           jne 0x40008e7	       233	clone.c	IF_9	FUNCTION_4	WHILE_1	CALL_5
0x8f0	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       235	clone.c	IF_9	FUNCTION_4	IF_3	CALL_6
0x8f4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       235	clone.c	IF_9	FUNCTION_4	IF_3	CALL_6
0x8f8	          0x4829c2	                            sub rdx, rax	       235	clone.c	IF_9	FUNCTION_4	IF_3	CALL_6
0x8fb	          0x4889d0	                            mov rax, rdx	       235	clone.c	IF_9	FUNCTION_4	IF_3	CALL_6
0x8fe	        0x4883f805	                              cmp rax, 5	       235	clone.c	IF_9	FUNCTION_4	IF_3	CALL_6
0x902	            0x7e66	                           jle 0x40009aa	       235	clone.c	IF_9	FUNCTION_4	IF_3	CALL_6
0x904	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       235	clone.c	IF_9	FUNCTION_4	IF_3	CALL_6
0x908	        0x4883e805	                              sub rax, 5	       235	clone.c	IF_9	FUNCTION_4	IF_3	CALL_6
0x90c	           0xfb600	                   movzx eax, byte [rax]	       235	clone.c	IF_9	FUNCTION_4	IF_3	CALL_6
0x90f	           0xfbec0	                           movsx eax, al	       235	clone.c	IF_9	FUNCTION_4	IF_3	CALL_6
0x912	            0x89c7	                            mov edi, eax	       235	clone.c	IF_9	FUNCTION_4	IF_3	CALL_6
0x914	      0xe8f6f6ffff	                 call sym.git_is_dir_sep	       235	clone.c	IF_9	FUNCTION_4	IF_3	CALL_6
0x919	            0x85c0	                           test eax, eax	       235	clone.c	IF_9	FUNCTION_4	IF_3	CALL_6
0x91b	            0x744d	                            je 0x40009aa	       235	clone.c	IF_9	FUNCTION_4	IF_3	CALL_6
0x91d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       236	clone.c	IF_9	FUNCTION_4	IF_3	CALL_7
0x921	        0x4883e804	                              sub rax, 4	       236	clone.c	IF_9	FUNCTION_4	IF_3	CALL_7
0x925	      0xba04000000	                              mov edx, 4	       236	clone.c	IF_9	FUNCTION_4	IF_3	CALL_7
0x92a	      0xbe00000000	                              mov esi, 0	       236	clone.c	IF_9	FUNCTION_4	IF_3	CALL_7
0x92f	          0x4889c7	                            mov rdi, rax	       236	clone.c	IF_9	FUNCTION_4	IF_3	CALL_7
0x932	      0xe800000000	                          call 0x4000977	       236	clone.c	IF_9	FUNCTION_4	IF_3	CALL_7
0x937	            0x85c0	                           test eax, eax	       235	clone.c	IF_9	FUNCTION_4	IF_3	CALL_6
0x939	            0x752f	                           jne 0x40009aa	       235	clone.c	IF_9	FUNCTION_4	IF_3	CALL_6
0x93b	      0x48836dd005	               sub qword [rbp - 0x30], 5	       237	clone.c	IF_9	FUNCTION_4	IF_3
0x940	            0xeb05	                           jmp 0x4000987	       238	clone.c	IF_9	FUNCTION_4	IF_3	WHILE_2	CALL_8
0x942	      0x48836dd001	               sub qword [rbp - 0x30], 1	       239	clone.c	IF_9	FUNCTION_4	IF_3	WHILE_2
0x947	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       238	clone.c	IF_9	FUNCTION_4	IF_3	WHILE_2	CALL_8
0x94b	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	       238	clone.c	IF_9	FUNCTION_4	IF_3	WHILE_2	CALL_8
0x94f	            0x7319	                           jae 0x40009aa	       238	clone.c	IF_9	FUNCTION_4	IF_3	WHILE_2	CALL_8
0x951	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       238	clone.c	IF_9	FUNCTION_4	IF_3	WHILE_2	CALL_8
0x955	        0x4883e801	                              sub rax, 1	       238	clone.c	IF_9	FUNCTION_4	IF_3	WHILE_2	CALL_8
0x959	           0xfb600	                   movzx eax, byte [rax]	       238	clone.c	IF_9	FUNCTION_4	IF_3	WHILE_2	CALL_8
0x95c	           0xfbec0	                           movsx eax, al	       238	clone.c	IF_9	FUNCTION_4	IF_3	WHILE_2	CALL_8
0x95f	            0x89c7	                            mov edi, eax	       238	clone.c	IF_9	FUNCTION_4	IF_3	WHILE_2	CALL_8
0x961	      0xe8a9f6ffff	                 call sym.git_is_dir_sep	       238	clone.c	IF_9	FUNCTION_4	IF_3	WHILE_2	CALL_8
0x966	            0x85c0	                           test eax, eax	       238	clone.c	IF_9	FUNCTION_4	IF_3	WHILE_2	CALL_8
0x968	            0x75d8	                           jne 0x4000982	       238	clone.c	IF_9	FUNCTION_4	IF_3	WHILE_2	CALL_8
0x96a	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       250	clone.c	IF_9	FUNCTION_4	IF_4	CALL_9
0x96e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       250	clone.c	IF_9	FUNCTION_4	IF_4	CALL_9
0x972	          0x4829c2	                            sub rdx, rax	       250	clone.c	IF_9	FUNCTION_4	IF_4	CALL_9
0x975	          0x4889d0	                            mov rax, rdx	       250	clone.c	IF_9	FUNCTION_4	IF_4	CALL_9
0x978	          0x4889c2	                            mov rdx, rax	       250	clone.c	IF_9	FUNCTION_4	IF_4	CALL_9
0x97b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       250	clone.c	IF_9	FUNCTION_4	IF_4	CALL_9
0x97f	      0xbe2f000000	                           mov esi, 0x2f	       250	clone.c	IF_9	FUNCTION_4	IF_4	CALL_9
0x984	          0x4889c7	                            mov rdi, rax	       250	clone.c	IF_9	FUNCTION_4	IF_4	CALL_9
0x987	      0xe800000000	                          call 0x40009cc	       250	clone.c	IF_9	FUNCTION_4	IF_4	CALL_9
0x98c	          0x4885c0	                           test rax, rax	       250	clone.c	IF_9	FUNCTION_4	IF_4	CALL_9
0x98f	     0xf8595000000	                           jne 0x4000a6a	       250	clone.c	IF_9	FUNCTION_4	IF_4	CALL_9
0x995	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       251	clone.c	IF_9	FUNCTION_4	IF_4	CALL_10
0x999	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       251	clone.c	IF_9	FUNCTION_4	IF_4	CALL_10
0x99d	          0x4829c2	                            sub rdx, rax	       251	clone.c	IF_9	FUNCTION_4	IF_4	CALL_10
0x9a0	          0x4889d0	                            mov rax, rdx	       251	clone.c	IF_9	FUNCTION_4	IF_4	CALL_10
0x9a3	          0x4889c2	                            mov rdx, rax	       251	clone.c	IF_9	FUNCTION_4	IF_4	CALL_10
0x9a6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       251	clone.c	IF_9	FUNCTION_4	IF_4	CALL_10
0x9aa	      0xbe3a000000	                           mov esi, 0x3a	       251	clone.c	IF_9	FUNCTION_4	IF_4	CALL_10
0x9af	          0x4889c7	                            mov rdi, rax	       251	clone.c	IF_9	FUNCTION_4	IF_4	CALL_10
0x9b2	      0xe800000000	                          call 0x40009f7	       251	clone.c	IF_9	FUNCTION_4	IF_4	CALL_10
0x9b7	          0x4885c0	                           test rax, rax	       251	clone.c	IF_9	FUNCTION_4	IF_4	CALL_10
0x9ba	            0x746e	                            je 0x4000a6a	       251	clone.c	IF_9	FUNCTION_4	IF_4	CALL_10
0x9bc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       252	clone.c	IF_9	FUNCTION_4	IF_4
0x9c0	        0x488945e0	             mov qword [rbp - 0x20], rax	       252	clone.c	IF_9	FUNCTION_4	IF_4
0x9c4	            0xeb05	                           jmp 0x4000a0b	       253	clone.c	IF_9	FUNCTION_4	IF_4	WHILE_3	CALL_11
0x9c6	      0x48836de001	               sub qword [rbp - 0x20], 1	       254	clone.c	IF_9	FUNCTION_4	IF_4	WHILE_3
0x9cb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       253	clone.c	IF_9	FUNCTION_4	IF_4	WHILE_3	CALL_11
0x9cf	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       253	clone.c	IF_9	FUNCTION_4	IF_4	WHILE_3	CALL_11
0x9d3	            0x7330	                           jae 0x4000a45	       253	clone.c	IF_9	FUNCTION_4	IF_4	WHILE_3	CALL_11
0x9d5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       253	clone.c	IF_9	FUNCTION_4	IF_4	WHILE_3	CALL_11
0x9d9	        0x4883e801	                              sub rax, 1	       253	clone.c	IF_9	FUNCTION_4	IF_4	WHILE_3	CALL_11
0x9dd	           0xfb600	                   movzx eax, byte [rax]	       253	clone.c	IF_9	FUNCTION_4	IF_4	WHILE_3	CALL_11
0x9e0	           0xfb6c0	                           movzx eax, al	       253	clone.c	IF_9	FUNCTION_4	IF_4	WHILE_3	CALL_11
0x9e3	            0x4898	                                    cdqe	       253	clone.c	IF_9	FUNCTION_4	IF_4	WHILE_3	CALL_11
0x9e5	     0xfb680000000	                   movzx eax, byte [rax]	       253	clone.c	IF_9	FUNCTION_4	IF_4	WHILE_3	CALL_11
0x9ec	           0xfb6c0	                           movzx eax, al	       253	clone.c	IF_9	FUNCTION_4	IF_4	WHILE_3	CALL_11
0x9ef	          0x83e002	                              and eax, 2	       253	clone.c	IF_9	FUNCTION_4	IF_4	WHILE_3	CALL_11
0x9f2	            0x85c0	                           test eax, eax	       253	clone.c	IF_9	FUNCTION_4	IF_4	WHILE_3	CALL_11
0x9f4	            0x740f	                            je 0x4000a45	       253	clone.c	IF_9	FUNCTION_4	IF_4	WHILE_3	CALL_11
0x9f6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       253	clone.c	IF_9	FUNCTION_4	IF_4	WHILE_3	CALL_11
0x9fa	        0x4883e801	                              sub rax, 1	       253	clone.c	IF_9	FUNCTION_4	IF_4	WHILE_3	CALL_11
0x9fe	           0xfb600	                   movzx eax, byte [rax]	       253	clone.c	IF_9	FUNCTION_4	IF_4	WHILE_3	CALL_11
0xa01	            0x3c3a	                            cmp al, 0x3a	       253	clone.c	IF_9	FUNCTION_4	IF_4	WHILE_3	CALL_11
0xa03	            0x75c1	                           jne 0x4000a06	       253	clone.c	IF_9	FUNCTION_4	IF_4	WHILE_3	CALL_11
0xa05	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       255	clone.c	IF_9	FUNCTION_4	IF_4	IF_5
0xa09	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       255	clone.c	IF_9	FUNCTION_4	IF_4	IF_5
0xa0d	            0x731b	                           jae 0x4000a6a	       255	clone.c	IF_9	FUNCTION_4	IF_4	IF_5
0xa0f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       255	clone.c	IF_9	FUNCTION_4	IF_4	IF_5
0xa13	        0x4883e801	                              sub rax, 1	       255	clone.c	IF_9	FUNCTION_4	IF_4	IF_5
0xa17	           0xfb600	                   movzx eax, byte [rax]	       255	clone.c	IF_9	FUNCTION_4	IF_4	IF_5
0xa1a	            0x3c3a	                            cmp al, 0x3a	       255	clone.c	IF_9	FUNCTION_4	IF_4	IF_5
0xa1c	            0x750c	                           jne 0x4000a6a	       255	clone.c	IF_9	FUNCTION_4	IF_4	IF_5
0xa1e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       256	clone.c	IF_9	FUNCTION_4	IF_4	IF_5
0xa22	        0x4883e801	                              sub rax, 1	       256	clone.c	IF_9	FUNCTION_4	IF_4	IF_5
0xa26	        0x488945d0	             mov qword [rbp - 0x30], rax	       256	clone.c	IF_9	FUNCTION_4	IF_4	IF_5
0xa2a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       265	clone.c	IF_9	FUNCTION_4
0xa2e	        0x488945e0	             mov qword [rbp - 0x20], rax	       265	clone.c	IF_9	FUNCTION_4
0xa32	            0xeb05	                           jmp 0x4000a79	       266	clone.c	IF_9	FUNCTION_4	WHILE_4	CALL_12
0xa34	      0x48836de001	               sub qword [rbp - 0x20], 1	       267	clone.c	IF_9	FUNCTION_4	WHILE_4
0xa39	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       266	clone.c	IF_9	FUNCTION_4	WHILE_4	CALL_12
0xa3d	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       266	clone.c	IF_9	FUNCTION_4	WHILE_4	CALL_12
0xa41	            0x7328	                           jae 0x4000aab	       266	clone.c	IF_9	FUNCTION_4	WHILE_4	CALL_12
0xa43	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       266	clone.c	IF_9	FUNCTION_4	WHILE_4	CALL_12
0xa47	        0x4883e801	                              sub rax, 1	       266	clone.c	IF_9	FUNCTION_4	WHILE_4	CALL_12
0xa4b	           0xfb600	                   movzx eax, byte [rax]	       266	clone.c	IF_9	FUNCTION_4	WHILE_4	CALL_12
0xa4e	           0xfbec0	                           movsx eax, al	       266	clone.c	IF_9	FUNCTION_4	WHILE_4	CALL_12
0xa51	            0x89c7	                            mov edi, eax	       266	clone.c	IF_9	FUNCTION_4	WHILE_4	CALL_12
0xa53	      0xe8b7f5ffff	                 call sym.git_is_dir_sep	       266	clone.c	IF_9	FUNCTION_4	WHILE_4	CALL_12
0xa58	            0x85c0	                           test eax, eax	       266	clone.c	IF_9	FUNCTION_4	WHILE_4	CALL_12
0xa5a	            0x750f	                           jne 0x4000aab	       266	clone.c	IF_9	FUNCTION_4	WHILE_4	CALL_12
0xa5c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       266	clone.c	IF_9	FUNCTION_4	WHILE_4	CALL_12
0xa60	        0x4883e801	                              sub rax, 1	       266	clone.c	IF_9	FUNCTION_4	WHILE_4	CALL_12
0xa64	           0xfb600	                   movzx eax, byte [rax]	       266	clone.c	IF_9	FUNCTION_4	WHILE_4	CALL_12
0xa67	            0x3c3a	                            cmp al, 0x3a	       266	clone.c	IF_9	FUNCTION_4	WHILE_4	CALL_12
0xa69	            0x75c9	                           jne 0x4000a74	       266	clone.c	IF_9	FUNCTION_4	WHILE_4	CALL_12
0xa6b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       268	clone.c	IF_9	FUNCTION_4
0xa6f	        0x488945d8	             mov qword [rbp - 0x28], rax	       268	clone.c	IF_9	FUNCTION_4
0xa73	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       273	clone.c	IF_9	FUNCTION_4
0xa77	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       273	clone.c	IF_9	FUNCTION_4
0xa7b	          0x4829c2	                            sub rdx, rax	       273	clone.c	IF_9	FUNCTION_4
0xa7e	          0x4889d0	                            mov rax, rdx	       273	clone.c	IF_9	FUNCTION_4
0xa81	        0x488945c8	             mov qword [rbp - 0x38], rax	       273	clone.c	IF_9	FUNCTION_4
0xa85	        0x837db400	               cmp dword [rbp - 0x4c], 0	       274	clone.c	IF_9	FUNCTION_4	CALL_13
0xa89	            0x7407	                            je 0x4000ad2	       274	clone.c	IF_9	FUNCTION_4	CALL_13
0xa8b	      0xba00000000	                              mov edx, 0	       274	clone.c	IF_9	FUNCTION_4	CALL_13
0xa90	            0xeb05	                           jmp 0x4000ad7	       274	clone.c	IF_9	FUNCTION_4	CALL_13
0xa92	      0xba00000000	                              mov edx, 0	       274	clone.c	IF_9	FUNCTION_4	CALL_13
0xa97	        0x488d4dc8	                   lea rcx, [rbp - 0x38]	       274	clone.c	IF_9	FUNCTION_4	CALL_13
0xa9b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       274	clone.c	IF_9	FUNCTION_4	CALL_13
0xa9f	          0x4889ce	                            mov rsi, rcx	       274	clone.c	IF_9	FUNCTION_4	CALL_13
0xaa2	          0x4889c7	                            mov rdi, rax	       274	clone.c	IF_9	FUNCTION_4	CALL_13
0xaa5	      0xe8cef5ffff	               call sym.strip_suffix_mem	       274	clone.c	IF_9	FUNCTION_4	CALL_13
0xaaa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       276	clone.c	IF_9	FUNCTION_4	IF_6
0xaae	          0x4885c0	                           test rax, rax	       276	clone.c	IF_9	FUNCTION_4	IF_6
0xab1	            0x7415	                            je 0x4000b08	       276	clone.c	IF_9	FUNCTION_4	IF_6
0xab3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       276	clone.c	IF_9	FUNCTION_4	IF_6
0xab7	        0x4883f801	                              cmp rax, 1	       276	clone.c	IF_9	FUNCTION_4	IF_6
0xabb	            0x7522	                           jne 0x4000b1f	       276	clone.c	IF_9	FUNCTION_4	IF_6
0xabd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       276	clone.c	IF_9	FUNCTION_4	IF_6
0xac1	           0xfb600	                   movzx eax, byte [rax]	       276	clone.c	IF_9	FUNCTION_4	IF_6
0xac4	            0x3c2f	                            cmp al, 0x2f	       276	clone.c	IF_9	FUNCTION_4	IF_6
0xac6	            0x7517	                           jne 0x4000b1f	       276	clone.c	IF_9	FUNCTION_4	IF_6
0xac8	      0xbf00000000	                              mov edi, 0	       277	clone.c	IF_9	FUNCTION_4	IF_6	CALL_15
0xacd	      0xe829f8ffff	                               call sym.	       277	clone.c	IF_9	FUNCTION_4	IF_6	CALL_15
0xad2	          0x4889c7	                            mov rdi, rax	       277	clone.c	IF_9	FUNCTION_4	IF_6	CALL_15
0xad5	      0xb800000000	                              mov eax, 0	       277	clone.c	IF_9	FUNCTION_4	IF_6	CALL_15
0xada	      0xe800000000	                          call 0x4000b1f	       277	clone.c	IF_9	FUNCTION_4	IF_6	CALL_15
0xadf	        0x837db000	               cmp dword [rbp - 0x50], 0	       280	clone.c	IF_9	FUNCTION_4	IF_7
0xae3	            0x7424	                            je 0x4000b49	       280	clone.c	IF_9	FUNCTION_4	IF_7
0xae5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       281	clone.c	IF_9	FUNCTION_4	CALL_16
0xae9	            0x89c1	                            mov ecx, eax	       281	clone.c	IF_9	FUNCTION_4	CALL_16
0xaeb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       281	clone.c	IF_9	FUNCTION_4	CALL_16
0xaef	          0x4889c2	                            mov rdx, rax	       281	clone.c	IF_9	FUNCTION_4	CALL_16
0xaf2	            0x89ce	                            mov esi, ecx	       281	clone.c	IF_9	FUNCTION_4	CALL_16
0xaf4	      0xbf00000000	                              mov edi, 0	       281	clone.c	IF_9	FUNCTION_4	CALL_16
0xaf9	      0xb800000000	                              mov eax, 0	       281	clone.c	IF_9	FUNCTION_4	CALL_16
0xafe	      0xe800000000	                          call 0x4000b43	       281	clone.c	IF_9	FUNCTION_4	CALL_16
0xb03	        0x488945e8	             mov qword [rbp - 0x18], rax	       281	clone.c	IF_9	FUNCTION_4	CALL_16
0xb07	            0xeb17	                           jmp 0x4000b60	       281	clone.c	IF_9	FUNCTION_4	CALL_16
0xb09	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       283	clone.c	IF_9	FUNCTION_4	CALL_17
0xb0d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       283	clone.c	IF_9	FUNCTION_4	CALL_17
0xb11	          0x4889d6	                            mov rsi, rdx	       283	clone.c	IF_9	FUNCTION_4	CALL_17
0xb14	          0x4889c7	                            mov rdi, rax	       283	clone.c	IF_9	FUNCTION_4	CALL_17
0xb17	      0xe800000000	                          call 0x4000b5c	       283	clone.c	IF_9	FUNCTION_4	CALL_17
0xb1c	        0x488945e8	             mov qword [rbp - 0x18], rax	       283	clone.c	IF_9	FUNCTION_4	CALL_17
0xb20	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       288	clone.c	IF_9	FUNCTION_4	IF_8
0xb24	           0xfb600	                   movzx eax, byte [rax]	       288	clone.c	IF_9	FUNCTION_4	IF_8
0xb27	            0x84c0	                             test al, al	       288	clone.c	IF_9	FUNCTION_4	IF_8
0xb29	     0xf84a6000000	                            je 0x4000c15	       288	clone.c	IF_9	FUNCTION_4	IF_8
0xb2f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       289	clone.c	IF_9	FUNCTION_4	IF_8
0xb33	        0x488945f0	             mov qword [rbp - 0x10], rax	       289	clone.c	IF_9	FUNCTION_4	IF_8
0xb37	    0xc745c4010000	               mov dword [rbp - 0x3c], 1	       290	clone.c	IF_9	FUNCTION_4	IF_8
0xb3e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       291	clone.c	IF_9	FUNCTION_4	IF_8	FOR_2
0xb42	        0x488945d0	             mov qword [rbp - 0x30], rax	       291	clone.c	IF_9	FUNCTION_4	IF_8	FOR_2
0xb46	            0xeb60	                           jmp 0x4000be8	       291	clone.c	IF_9	FUNCTION_4	IF_8	FOR_2
0xb48	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       292	clone.c	IF_9	FUNCTION_4	IF_8	FOR_2
0xb4c	           0xfb600	                   movzx eax, byte [rax]	       292	clone.c	IF_9	FUNCTION_4	IF_8	FOR_2
0xb4f	          0x8845c3	               mov byte [rbp - 0x3d], al	       292	clone.c	IF_9	FUNCTION_4	IF_8	FOR_2
0xb52	         0xfb645c3	            movzx eax, byte [rbp - 0x3d]	       293	clone.c	IF_9	FUNCTION_4	IF_8	FOR_2
0xb56	            0x3c1f	                            cmp al, 0x1f	       293	clone.c	IF_9	FUNCTION_4	IF_8	FOR_2
0xb58	            0x7704	                            ja 0x4000b9e	       293	clone.c	IF_9	FUNCTION_4	IF_8	FOR_2
0xb5a	        0xc645c320	            mov byte [rbp - 0x3d], 0x20 	       294	clone.c	FUNCTION_4	IF_8	FOR_2
0xb5e	         0xfb645c3	            movzx eax, byte [rbp - 0x3d]	       295	clone.c	FUNCTION_4	IF_8	FOR_2	IF_10	CALL_18
0xb62	           0xfb6c0	                           movzx eax, al	       295	clone.c	FUNCTION_4	IF_8	FOR_2	IF_10	CALL_18
0xb65	            0x4898	                                    cdqe	       295	clone.c	FUNCTION_4	IF_8	FOR_2	IF_10	CALL_18
0xb67	     0xfb680000000	                   movzx eax, byte [rax]	       295	clone.c	FUNCTION_4	IF_8	FOR_2	IF_10	CALL_18
0xb6e	           0xfb6c0	                           movzx eax, al	       295	clone.c	FUNCTION_4	IF_8	FOR_2	IF_10	CALL_18
0xb71	          0x83e001	                              and eax, 1	       295	clone.c	FUNCTION_4	IF_8	FOR_2	IF_10	CALL_18
0xb74	            0x85c0	                           test eax, eax	       295	clone.c	FUNCTION_4	IF_8	FOR_2	IF_10	CALL_18
0xb76	            0x740f	                            je 0x4000bc7	       295	clone.c	FUNCTION_4	IF_8	FOR_2	IF_10	CALL_18
0xb78	        0x837dc400	               cmp dword [rbp - 0x3c], 0	       296	clone.c	FUNCTION_4	IF_8	FOR_2	IF_10	IF_11
0xb7c	            0x7524	                           jne 0x4000be2	       296	clone.c	FUNCTION_4	IF_8	FOR_2	IF_10	IF_11
0xb7e	    0xc745c4010000	               mov dword [rbp - 0x3c], 1	       298	clone.c	FUNCTION_4	IF_8	FOR_2	IF_10
0xb85	            0xeb07	                           jmp 0x4000bce	       298	clone.c	FUNCTION_4	IF_8	FOR_2	IF_10
0xb87	    0xc745c4000000	               mov dword [rbp - 0x3c], 0	       300	clone.c	FUNCTION_4	IF_8	FOR_2	ELSE_3
0xb8e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       301	clone.c	FUNCTION_4	IF_8	FOR_2
0xb92	        0x488d5001	                      lea rdx, [rax + 1]	       301	clone.c	FUNCTION_4	IF_8	FOR_2
0xb96	        0x488955f0	             mov qword [rbp - 0x10], rdx	       301	clone.c	FUNCTION_4	IF_8	FOR_2
0xb9a	         0xfb655c3	            movzx edx, byte [rbp - 0x3d]	       301	clone.c	FUNCTION_4	IF_8	FOR_2
0xb9e	            0x8810	                      mov byte [rax], dl	       301	clone.c	FUNCTION_4	IF_8	FOR_2
0xba0	            0xeb01	                           jmp 0x4000be3	       301	clone.c	FUNCTION_4	IF_8	FOR_2
0xba2	              0x90	                                     nop	       297	clone.c	FUNCTION_4	IF_8	FOR_2	IF_10	IF_11
0xba3	      0x488345d001	               add qword [rbp - 0x30], 1	       291	clone.c	IF_9	FUNCTION_4	IF_8	FOR_2
0xba8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       291	clone.c	IF_9	FUNCTION_4	IF_8	FOR_2
0xbac	           0xfb600	                   movzx eax, byte [rax]	       291	clone.c	IF_9	FUNCTION_4	IF_8	FOR_2
0xbaf	            0x84c0	                             test al, al	       291	clone.c	IF_9	FUNCTION_4	IF_8	FOR_2
0xbb1	            0x7595	                           jne 0x4000b88	       291	clone.c	IF_9	FUNCTION_4	IF_8	FOR_2
0xbb3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       303	clone.c	FUNCTION_4	IF_8
0xbb7	          0xc60000	                       mov byte [rax], 0	       303	clone.c	FUNCTION_4	IF_8
0xbba	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       304	clone.c	FUNCTION_4	IF_8	IF_12
0xbbe	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       304	clone.c	FUNCTION_4	IF_8	IF_12
0xbc2	            0x7611	                           jbe 0x4000c15	       304	clone.c	FUNCTION_4	IF_8	IF_12
0xbc4	        0x837dc400	               cmp dword [rbp - 0x3c], 0	       304	clone.c	FUNCTION_4	IF_8	IF_12
0xbc8	            0x740b	                            je 0x4000c15	       304	clone.c	FUNCTION_4	IF_8	IF_12
0xbca	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       305	clone.c	FUNCTION_4	IF_8	IF_12
0xbce	        0x4883e801	                              sub rax, 1	       305	clone.c	FUNCTION_4	IF_8	IF_12
0xbd2	          0xc60000	                       mov byte [rax], 0	       305	clone.c	FUNCTION_4	IF_8	IF_12
0xbd5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       307	clone.c	FUNCTION_4
0xbd9	        0x488b4df8	                mov rcx, qword [rbp - 8]	       308	clone.c	FUNCTION_4
0xbdd	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       308	clone.c	FUNCTION_4
0xbe6	            0x7405	                            je 0x4000c2d	       308	clone.c	FUNCTION_4
0xbe8	      0xe800000000	                          call 0x4000c2d	       308	clone.c	FUNCTION_4
0xbed	              0xc9	                                   leave	       308	clone.c	FUNCTION_4
0xbee	              0xc3	                                     ret	       308	clone.c	FUNCTION_4
strbuf_setlen	WHILE,0:ELSE,1:IF,2:DO,0:SWITCH,0:CALL,2:functions,0:FOR,0	43
0x1be	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_60
0x1bf	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_60
0x1c2	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_60
0x1c6	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_60
0x1ca	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_60
0x1ce	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_60	IF_1
0x1d2	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_60	IF_1
0x1d5	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_60	IF_1
0x1d8	            0x740d	                            je 0x4000227	       162	strbuf.h	FUNCTION_60	IF_1
0x1da	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_60	IF_1
0x1de	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_60	IF_1
0x1e1	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_60	IF_1
0x1e5	            0xeb05	                           jmp 0x400022c	       162	strbuf.h	FUNCTION_60	IF_1
0x1e7	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_60	IF_1
0x1ec	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_60	IF_1
0x1f0	            0x730f	                           jae 0x4000241	       162	strbuf.h	FUNCTION_60	IF_1
0x1f2	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_60	CALL_1
0x1f7	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_60	CALL_1
0x1fc	      0xe800000000	                          call 0x4000241	       163	strbuf.h	FUNCTION_60	CALL_1
0x201	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_60
0x205	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_60
0x209	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_60
0x20d	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_60	IF_2
0x211	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_60	IF_2
0x215	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_60	IF_2
0x21b	            0x7414	                            je 0x4000271	       165	strbuf.h	FUNCTION_60	IF_2
0x21d	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_60	IF_2
0x221	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_60	IF_2
0x225	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_60	IF_2
0x229	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_60	IF_2
0x22c	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_60	IF_2
0x22f	            0xeb24	                           jmp 0x4000295	       169	strbuf.h	FUNCTION_60
0x231	     0xfb605000000	           movzx eax, byte [0x04000278] 	       168	strbuf.h	FUNCTION_60	CALL_2
0x238	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_60	CALL_2
0x23a	            0x7419	                            je 0x4000295	       168	strbuf.h	FUNCTION_60	CALL_2
0x23c	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_60	CALL_2
0x241	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_60	CALL_2
0x246	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_60	CALL_2
0x24b	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_60	CALL_2
0x250	      0xe800000000	                          call 0x4000295	       168	strbuf.h	FUNCTION_60	CALL_2
0x255	              0x90	                                     nop	       169	strbuf.h	FUNCTION_60
0x256	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_60
0x257	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_60
clone_local	WHILE,0:ELSE,1:IF,2:DO,0:SWITCH,0:CALL,13:functions,0:FOR,0	85
0x137e	              0x55	                                push rbp	       456	clone.c	FUNCTION_10
0x137f	          0x4889e5	                            mov rbp, rsp	       456	clone.c	FUNCTION_10
0x1382	        0x4883ec50	                           sub rsp, 0x50	       456	clone.c	FUNCTION_10
0x1386	        0x48897db8	             mov qword [rbp - 0x48], rdi	       456	clone.c	FUNCTION_10
0x138a	        0x488975b0	             mov qword [rbp - 0x50], rsi	       456	clone.c	FUNCTION_10
0x138e	    0x64488b042528	                mov rax, qword fs:[0x28]	       456	clone.c	FUNCTION_10
0x1397	        0x488945f8	                mov qword [rbp - 8], rax	       456	clone.c	FUNCTION_10
0x139b	            0x31c0	                            xor eax, eax	       456	clone.c	FUNCTION_10
0x139d	    0x8b0500000000	            mov eax, dword [0x040013e3] 	       457	clone.c	FUNCTION_10	IF_1
0x13a3	            0x85c0	                           test eax, eax	       457	clone.c	FUNCTION_10	IF_1
0x13a5	            0x7459	                            je 0x4001440	       457	clone.c	FUNCTION_10	IF_1
0x13a7	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       458	clone.c	FUNCTION_10	IF_1
0x13af	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       458	clone.c	FUNCTION_10	IF_1
0x13b7	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       458	clone.c	FUNCTION_10	IF_1
0x13bf	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       459	clone.c	FUNCTION_10	IF_1	CALL_1
0x13c3	        0x488d45e0	                   lea rax, [rbp - 0x20]	       459	clone.c	FUNCTION_10	IF_1	CALL_1
0x13c7	          0x4889d6	                            mov rsi, rdx	       459	clone.c	FUNCTION_10	IF_1	CALL_1
0x13ca	          0x4889c7	                            mov rdi, rax	       459	clone.c	FUNCTION_10	IF_1	CALL_1
0x13cd	      0xe800000000	                          call 0x4001412	       459	clone.c	FUNCTION_10	IF_1	CALL_1
0x13d2	        0x488d45e0	                   lea rax, [rbp - 0x20]	       460	clone.c	FUNCTION_10	IF_1	CALL_2
0x13d6	      0xbe00000000	                              mov esi, 0	       460	clone.c	FUNCTION_10	IF_1	CALL_2
0x13db	          0x4889c7	                            mov rdi, rax	       460	clone.c	FUNCTION_10	IF_1	CALL_2
0x13de	      0xe8e3eeffff	                  call sym.strbuf_addstr	       460	clone.c	FUNCTION_10	IF_1	CALL_2
0x13e3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       461	clone.c	FUNCTION_10	IF_1	CALL_3
0x13e7	          0x4889c7	                            mov rdi, rax	       461	clone.c	FUNCTION_10	IF_1	CALL_3
0x13ea	      0xe800000000	                          call 0x400142f	       461	clone.c	FUNCTION_10	IF_1	CALL_3
0x13ef	        0x488d45e0	                   lea rax, [rbp - 0x20]	       462	clone.c	FUNCTION_10	IF_1	CALL_4
0x13f3	          0x4889c7	                            mov rdi, rax	       462	clone.c	FUNCTION_10	IF_1	CALL_4
0x13f6	      0xe800000000	                          call 0x400143b	       462	clone.c	FUNCTION_10	IF_1	CALL_4
0x13fb	      0xe9aa000000	                           jmp 0x40014ea	       462	clone.c	FUNCTION_10	IF_1	CALL_4
0x1400	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       464	clone.c	FUNCTION_10	ELSE_1
0x1408	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       464	clone.c	FUNCTION_10	ELSE_1
0x1410	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       464	clone.c	FUNCTION_10	ELSE_1
0x1418	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       465	clone.c	FUNCTION_10	ELSE_1
0x1420	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       465	clone.c	FUNCTION_10	ELSE_1
0x1428	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       465	clone.c	FUNCTION_10	ELSE_1
0x1430	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       466	clone.c	FUNCTION_10	ELSE_1	CALL_5
0x1434	        0x488d45c0	                   lea rax, [rbp - 0x40]	       466	clone.c	FUNCTION_10	ELSE_1	CALL_5
0x1438	          0x4889d6	                            mov rsi, rdx	       466	clone.c	FUNCTION_10	ELSE_1	CALL_5
0x143b	          0x4889c7	                            mov rdi, rax	       466	clone.c	FUNCTION_10	ELSE_1	CALL_5
0x143e	      0xe800000000	                          call 0x4001483	       466	clone.c	FUNCTION_10	ELSE_1	CALL_5
0x1443	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       467	clone.c	FUNCTION_10	ELSE_1	CALL_6
0x1447	        0x488d45e0	                   lea rax, [rbp - 0x20]	       467	clone.c	FUNCTION_10	ELSE_1	CALL_6
0x144b	          0x4889d6	                            mov rsi, rdx	       467	clone.c	FUNCTION_10	ELSE_1	CALL_6
0x144e	          0x4889c7	                            mov rdi, rax	       467	clone.c	FUNCTION_10	ELSE_1	CALL_6
0x1451	      0xe800000000	                          call 0x4001496	       467	clone.c	FUNCTION_10	ELSE_1	CALL_6
0x1456	        0x488d45c0	                   lea rax, [rbp - 0x40]	       468	clone.c	FUNCTION_10	ELSE_1	CALL_7
0x145a	      0xbe00000000	                              mov esi, 0	       468	clone.c	FUNCTION_10	ELSE_1	CALL_7
0x145f	          0x4889c7	                            mov rdi, rax	       468	clone.c	FUNCTION_10	ELSE_1	CALL_7
0x1462	      0xe85feeffff	                  call sym.strbuf_addstr	       468	clone.c	FUNCTION_10	ELSE_1	CALL_7
0x1467	        0x488d45e0	                   lea rax, [rbp - 0x20]	       469	clone.c	FUNCTION_10	ELSE_1	CALL_8
0x146b	      0xbe00000000	                              mov esi, 0	       469	clone.c	FUNCTION_10	ELSE_1	CALL_8
0x1470	          0x4889c7	                            mov rdi, rax	       469	clone.c	FUNCTION_10	ELSE_1	CALL_8
0x1473	      0xe84eeeffff	                  call sym.strbuf_addstr	       469	clone.c	FUNCTION_10	ELSE_1	CALL_8
0x1478	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       470	clone.c	FUNCTION_10	ELSE_1	CALL_9
0x147c	            0x89c1	                            mov ecx, eax	       470	clone.c	FUNCTION_10	ELSE_1	CALL_9
0x147e	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       470	clone.c	FUNCTION_10	ELSE_1	CALL_9
0x1482	        0x488d75e0	                   lea rsi, [rbp - 0x20]	       470	clone.c	FUNCTION_10	ELSE_1	CALL_9
0x1486	        0x488d45c0	                   lea rax, [rbp - 0x40]	       470	clone.c	FUNCTION_10	ELSE_1	CALL_9
0x148a	          0x4889c7	                            mov rdi, rax	       470	clone.c	FUNCTION_10	ELSE_1	CALL_9
0x148d	      0xe8a6faffff	         call sym.copy_or_link_directory	       470	clone.c	FUNCTION_10	ELSE_1	CALL_9
0x1492	        0x488d45c0	                   lea rax, [rbp - 0x40]	       471	clone.c	FUNCTION_10	ELSE_1	CALL_10
0x1496	          0x4889c7	                            mov rdi, rax	       471	clone.c	FUNCTION_10	ELSE_1	CALL_10
0x1499	      0xe800000000	                          call 0x40014de	       471	clone.c	FUNCTION_10	ELSE_1	CALL_10
0x149e	        0x488d45e0	                   lea rax, [rbp - 0x20]	       472	clone.c	FUNCTION_10	ELSE_1	CALL_11
0x14a2	          0x4889c7	                            mov rdi, rax	       472	clone.c	FUNCTION_10	ELSE_1	CALL_11
0x14a5	      0xe800000000	                          call 0x40014ea	       472	clone.c	FUNCTION_10	ELSE_1	CALL_11
0x14aa	    0x8b0500000000	            mov eax, dword [0x040014f0] 	       475	clone.c	FUNCTION_10	IF_2
0x14b0	            0x85c0	                           test eax, eax	       475	clone.c	FUNCTION_10	IF_2
0x14b2	            0x7824	                            js 0x4001518	       475	clone.c	FUNCTION_10	IF_2
0x14b4	      0xbf00000000	                              mov edi, 0	       476	clone.c	FUNCTION_10	CALL_13
0x14b9	      0xe83deeffff	                               call sym.	       476	clone.c	FUNCTION_10	CALL_13
0x14be	          0x4889c2	                            mov rdx, rax	       476	clone.c	FUNCTION_10	CALL_13
0x14c1	    0x488b05000000	            mov rax, qword [0x04001508] 	       476	clone.c	FUNCTION_10	CALL_13
0x14c8	          0x4889d6	                            mov rsi, rdx	       476	clone.c	FUNCTION_10	CALL_13
0x14cb	          0x4889c7	                            mov rdi, rax	       476	clone.c	FUNCTION_10	CALL_13
0x14ce	      0xb800000000	                              mov eax, 0	       476	clone.c	FUNCTION_10	CALL_13
0x14d3	      0xe800000000	                          call 0x4001518	       476	clone.c	FUNCTION_10	CALL_13
0x14d8	              0x90	                                     nop	       477	clone.c	FUNCTION_10
0x14d9	        0x488b45f8	                mov rax, qword [rbp - 8]	       477	clone.c	FUNCTION_10
0x14dd	    0x644833042528	                xor rax, qword fs:[0x28]	       477	clone.c	FUNCTION_10
0x14e6	            0x7405	                            je 0x400152d	       477	clone.c	FUNCTION_10
0x14e8	      0xe800000000	                          call 0x400152d	       477	clone.c	FUNCTION_10
0x14ed	              0xc9	                                   leave	       477	clone.c	FUNCTION_10
0x14ee	              0xc3	                                     ret	       477	clone.c	FUNCTION_10
copy_or_link_directory	WHILE,1:ELSE,2:IF,14:DO,0:SWITCH,0:CALL,36:functions,0:FOR,0	240
0xf38	              0x55	                                push rbp	       394	clone.c	FUNCTION_9
0xf39	          0x4889e5	                            mov rbp, rsp	       394	clone.c	FUNCTION_9
0xf3c	              0x53	                                push rbx	       394	clone.c	FUNCTION_9
0xf3d	    0x4881ece80000	                           sub rsp, 0xe8	       394	clone.c	FUNCTION_9
0xf44	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	       394	clone.c	FUNCTION_9
0xf4b	    0x4889b520ffff	             mov qword [rbp - 0xe0], rsi	       394	clone.c	FUNCTION_9
0xf52	    0x48899518ffff	             mov qword [rbp - 0xe8], rdx	       394	clone.c	FUNCTION_9
0xf59	    0x898d14ffffff	             mov dword [rbp - 0xec], ecx	       394	clone.c	FUNCTION_9
0xf5f	    0x64488b042528	                mov rax, qword fs:[0x28]	       394	clone.c	FUNCTION_9
0xf68	        0x488945e8	             mov qword [rbp - 0x18], rax	       394	clone.c	FUNCTION_9
0xf6c	            0x31c0	                            xor eax, eax	       394	clone.c	FUNCTION_9
0xf6e	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       400	clone.c	FUNCTION_9	CALL_1
0xf75	        0x488b4010	            mov rax, qword [rax + 0x10] 	       400	clone.c	FUNCTION_9	CALL_1
0xf79	          0x4889c7	                            mov rdi, rax	       400	clone.c	FUNCTION_9	CALL_1
0xf7c	      0xe800000000	                          call 0x4000fc1	       400	clone.c	FUNCTION_9	CALL_1
0xf81	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       400	clone.c	FUNCTION_9	CALL_1
0xf88	    0x4883bd40ffff	               cmp qword [rbp - 0xc0], 0	       401	clone.c	FUNCTION_9	IF_1
0xf90	            0x7525	                           jne 0x4000ff7	       401	clone.c	FUNCTION_9	IF_1
0xf92	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       402	clone.c	FUNCTION_9	CALL_3
0xf99	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       402	clone.c	FUNCTION_9	CALL_3
0xf9d	      0xbf00000000	                              mov edi, 0	       402	clone.c	FUNCTION_9	CALL_3
0xfa2	      0xe854f3ffff	                               call sym.	       402	clone.c	FUNCTION_9	CALL_3
0xfa7	          0x4889de	                            mov rsi, rbx	       402	clone.c	FUNCTION_9	CALL_3
0xfaa	          0x4889c7	                            mov rdi, rax	       402	clone.c	FUNCTION_9	CALL_3
0xfad	      0xb800000000	                              mov eax, 0	       402	clone.c	FUNCTION_9	CALL_3
0xfb2	      0xe800000000	                          call 0x4000ff7	       402	clone.c	FUNCTION_9	CALL_3
0xfb7	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       404	clone.c	FUNCTION_9	IF_2	CALL_4
0xfbe	        0x488b4010	            mov rax, qword [rax + 0x10] 	       404	clone.c	FUNCTION_9	IF_2	CALL_4
0xfc2	      0xbeff010000	                          mov esi, 0x1ff	       404	clone.c	FUNCTION_9	IF_2	CALL_4
0xfc7	          0x4889c7	                            mov rdi, rax	       404	clone.c	FUNCTION_9	IF_2	CALL_4
0xfca	      0xe800000000	                          call 0x400100f	       404	clone.c	FUNCTION_9	IF_2	CALL_4
0xfcf	            0x85c0	                           test eax, eax	       404	clone.c	FUNCTION_9	IF_2	CALL_4
0xfd1	     0xf84ae000000	                            je 0x40010c5	       404	clone.c	FUNCTION_9	IF_2	CALL_4
0xfd7	      0xe800000000	                          call 0x400101c	       405	clone.c	FUNCTION_9	IF_2	IF_3
0xfdc	            0x8b00	                    mov eax, dword [rax]	       405	clone.c	FUNCTION_9	IF_2	IF_3
0xfde	          0x83f811	                           cmp eax, 0x11	       405	clone.c	FUNCTION_9	IF_2	IF_3
0xfe1	            0x7425	                            je 0x4001048	       405	clone.c	FUNCTION_9	IF_2	IF_3
0xfe3	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       406	clone.c	FUNCTION_9	IF_2	CALL_6
0xfea	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       406	clone.c	FUNCTION_9	IF_2	CALL_6
0xfee	      0xbf00000000	                              mov edi, 0	       406	clone.c	FUNCTION_9	IF_2	CALL_6
0xff3	      0xe803f3ffff	                               call sym.	       406	clone.c	FUNCTION_9	IF_2	CALL_6
0xff8	          0x4889de	                            mov rsi, rbx	       406	clone.c	FUNCTION_9	IF_2	CALL_6
0xffb	          0x4889c7	                            mov rdi, rax	       406	clone.c	FUNCTION_9	IF_2	CALL_6
0xffe	      0xb800000000	                              mov eax, 0	       406	clone.c	FUNCTION_9	IF_2	CALL_6
0x1003	      0xe800000000	                          call 0x4001048	       406	clone.c	FUNCTION_9	IF_2	CALL_6
0x1008	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       407	clone.c	FUNCTION_9	IF_2	ELSE_1	IF_4	CALL_7
0x100f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       407	clone.c	FUNCTION_9	IF_2	ELSE_1	IF_4	CALL_7
0x1013	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       407	clone.c	FUNCTION_9	IF_2	ELSE_1	IF_4	CALL_7
0x101a	          0x4889d6	                            mov rsi, rdx	       407	clone.c	FUNCTION_9	IF_2	ELSE_1	IF_4	CALL_7
0x101d	          0x4889c7	                            mov rdi, rax	       407	clone.c	FUNCTION_9	IF_2	ELSE_1	IF_4	CALL_7
0x1020	      0xe800000000	                          call 0x4001065	       407	clone.c	FUNCTION_9	IF_2	ELSE_1	IF_4	CALL_7
0x1025	            0x85c0	                           test eax, eax	       407	clone.c	FUNCTION_9	IF_2	ELSE_1	IF_4	CALL_7
0x1027	            0x7425	                            je 0x400108e	       407	clone.c	FUNCTION_9	IF_2	ELSE_1	IF_4	CALL_7
0x1029	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       408	clone.c	FUNCTION_9	IF_2	ELSE_1	IF_4
0x1030	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       408	clone.c	FUNCTION_9	IF_2	ELSE_1	IF_4
0x1034	      0xbf00000000	                              mov edi, 0	       408	clone.c	FUNCTION_9	IF_2	ELSE_1	IF_4
0x1039	      0xe8bdf2ffff	                               call sym.	       408	clone.c	FUNCTION_9	IF_2	ELSE_1	IF_4
0x103e	          0x4889de	                            mov rsi, rbx	       408	clone.c	FUNCTION_9	IF_2	ELSE_1	IF_4
0x1041	          0x4889c7	                            mov rdi, rax	       408	clone.c	FUNCTION_9	IF_2	ELSE_1	IF_4
0x1044	      0xb800000000	                              mov eax, 0	       408	clone.c	FUNCTION_9	IF_2	ELSE_1	IF_4
0x1049	      0xe800000000	                          call 0x400108e	       408	clone.c	FUNCTION_9	IF_2	ELSE_1	IF_4
0x104e	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	       409	clone.c	FUNCTION_9	IF_2	ELSE_2	IF_5	CALL_10
0x1054	      0x2500f00000	                         and eax, 0xf000	       409	clone.c	FUNCTION_9	IF_2	ELSE_2	IF_5	CALL_10
0x1059	      0x3d00400000	                         cmp eax, 0x4000	       409	clone.c	FUNCTION_9	IF_2	ELSE_2	IF_5	CALL_10
0x105e	            0x7425	                            je 0x40010c5	       409	clone.c	FUNCTION_9	IF_2	ELSE_2	IF_5	CALL_10
0x1060	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       410	clone.c	FUNCTION_9	IF_2	ELSE_2	IF_5
0x1067	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       410	clone.c	FUNCTION_9	IF_2	ELSE_2	IF_5
0x106b	      0xbf00000000	                              mov edi, 0	       410	clone.c	FUNCTION_9	IF_2	ELSE_2	IF_5
0x1070	      0xe886f2ffff	                               call sym.	       410	clone.c	FUNCTION_9	IF_2	ELSE_2	IF_5
0x1075	          0x4889de	                            mov rsi, rbx	       410	clone.c	FUNCTION_9	IF_2	ELSE_2	IF_5
0x1078	          0x4889c7	                            mov rdi, rax	       410	clone.c	FUNCTION_9	IF_2	ELSE_2	IF_5
0x107b	      0xb800000000	                              mov eax, 0	       410	clone.c	FUNCTION_9	IF_2	ELSE_2	IF_5
0x1080	      0xe800000000	                          call 0x40010c5	       410	clone.c	FUNCTION_9	IF_2	ELSE_2	IF_5
0x1085	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       413	clone.c	FUNCTION_9	CALL_13
0x108c	      0xbe2f000000	                           mov esi, 0x2f	       413	clone.c	FUNCTION_9	CALL_13
0x1091	          0x4889c7	                            mov rdi, rax	       413	clone.c	FUNCTION_9	CALL_13
0x1094	      0xe8bff1ffff	                   call sym.strbuf_addch	       413	clone.c	FUNCTION_9	CALL_13
0x1099	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       414	clone.c	FUNCTION_9
0x10a0	        0x488b4008	                mov rax, qword [rax + 8]	       414	clone.c	FUNCTION_9
0x10a4	    0x898538ffffff	             mov dword [rbp - 0xc8], eax	       414	clone.c	FUNCTION_9
0x10aa	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       415	clone.c	FUNCTION_9	CALL_14
0x10b1	      0xbe2f000000	                           mov esi, 0x2f	       415	clone.c	FUNCTION_9	CALL_14
0x10b6	          0x4889c7	                            mov rdi, rax	       415	clone.c	FUNCTION_9	CALL_14
0x10b9	      0xe89af1ffff	                   call sym.strbuf_addch	       415	clone.c	FUNCTION_9	CALL_14
0x10be	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       416	clone.c	FUNCTION_9
0x10c5	        0x488b4008	                mov rax, qword [rax + 8]	       416	clone.c	FUNCTION_9
0x10c9	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	       416	clone.c	FUNCTION_9
0x10cf	      0xe958020000	                           jmp 0x400136c	       418	clone.c	FUNCTION_9	WHILE_1	CALL_15
0x10d4	    0x8b8538ffffff	             mov eax, dword [rbp - 0xc8]	       419	clone.c	FUNCTION_9	WHILE_1	CALL_16
0x10da	          0x4863d0	                         movsxd rdx, eax	       419	clone.c	FUNCTION_9	WHILE_1	CALL_16
0x10dd	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       419	clone.c	FUNCTION_9	WHILE_1	CALL_16
0x10e4	          0x4889d6	                            mov rsi, rdx	       419	clone.c	FUNCTION_9	WHILE_1	CALL_16
0x10e7	          0x4889c7	                            mov rdi, rax	       419	clone.c	FUNCTION_9	WHILE_1	CALL_16
0x10ea	      0xe8cff0ffff	                  call sym.strbuf_setlen	       419	clone.c	FUNCTION_9	WHILE_1	CALL_16
0x10ef	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       420	clone.c	FUNCTION_9	WHILE_1	CALL_17
0x10f6	        0x488d5013	                   lea rdx, [rax + 0x13]	       420	clone.c	FUNCTION_9	WHILE_1	CALL_17
0x10fa	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       420	clone.c	FUNCTION_9	WHILE_1	CALL_17
0x1101	          0x4889d6	                            mov rsi, rdx	       420	clone.c	FUNCTION_9	WHILE_1	CALL_17
0x1104	          0x4889c7	                            mov rdi, rax	       420	clone.c	FUNCTION_9	WHILE_1	CALL_17
0x1107	      0xe8baf1ffff	                  call sym.strbuf_addstr	       420	clone.c	FUNCTION_9	WHILE_1	CALL_17
0x110c	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	       421	clone.c	FUNCTION_9	WHILE_1	CALL_18
0x1112	          0x4863d0	                         movsxd rdx, eax	       421	clone.c	FUNCTION_9	WHILE_1	CALL_18
0x1115	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       421	clone.c	FUNCTION_9	WHILE_1	CALL_18
0x111c	          0x4889d6	                            mov rsi, rdx	       421	clone.c	FUNCTION_9	WHILE_1	CALL_18
0x111f	          0x4889c7	                            mov rdi, rax	       421	clone.c	FUNCTION_9	WHILE_1	CALL_18
0x1122	      0xe897f0ffff	                  call sym.strbuf_setlen	       421	clone.c	FUNCTION_9	WHILE_1	CALL_18
0x1127	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       422	clone.c	FUNCTION_9	WHILE_1	CALL_19
0x112e	        0x488d5013	                   lea rdx, [rax + 0x13]	       422	clone.c	FUNCTION_9	WHILE_1	CALL_19
0x1132	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       422	clone.c	FUNCTION_9	WHILE_1	CALL_19
0x1139	          0x4889d6	                            mov rsi, rdx	       422	clone.c	FUNCTION_9	WHILE_1	CALL_19
0x113c	          0x4889c7	                            mov rdi, rax	       422	clone.c	FUNCTION_9	WHILE_1	CALL_19
0x113f	      0xe882f1ffff	                  call sym.strbuf_addstr	       422	clone.c	FUNCTION_9	WHILE_1	CALL_19
0x1144	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       423	clone.c	FUNCTION_9	WHILE_1	IF_6	CALL_20
0x114b	        0x488b4010	            mov rax, qword [rax + 0x10] 	       423	clone.c	FUNCTION_9	WHILE_1	IF_6	CALL_20
0x114f	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       423	clone.c	FUNCTION_9	WHILE_1	IF_6	CALL_20
0x1156	          0x4889d6	                            mov rsi, rdx	       423	clone.c	FUNCTION_9	WHILE_1	IF_6	CALL_20
0x1159	          0x4889c7	                            mov rdi, rax	       423	clone.c	FUNCTION_9	WHILE_1	IF_6	CALL_20
0x115c	      0xe800000000	                          call 0x40011a1	       423	clone.c	FUNCTION_9	WHILE_1	IF_6	CALL_20
0x1161	            0x85c0	                           test eax, eax	       423	clone.c	FUNCTION_9	WHILE_1	IF_6	CALL_20
0x1163	            0x742a	                            je 0x40011cf	       423	clone.c	FUNCTION_9	WHILE_1	IF_6	CALL_20
0x1165	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       424	clone.c	FUNCTION_9	WHILE_1	IF_6	CALL_22
0x116c	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       424	clone.c	FUNCTION_9	WHILE_1	IF_6	CALL_22
0x1170	      0xbf00000000	                              mov edi, 0	       424	clone.c	FUNCTION_9	WHILE_1	IF_6	CALL_22
0x1175	      0xe881f1ffff	                               call sym.	       424	clone.c	FUNCTION_9	WHILE_1	IF_6	CALL_22
0x117a	          0x4889de	                            mov rsi, rbx	       424	clone.c	FUNCTION_9	WHILE_1	IF_6	CALL_22
0x117d	          0x4889c7	                            mov rdi, rax	       424	clone.c	FUNCTION_9	WHILE_1	IF_6	CALL_22
0x1180	      0xb800000000	                              mov eax, 0	       424	clone.c	FUNCTION_9	WHILE_1	IF_6	CALL_22
0x1185	      0xe800000000	                          call 0x40011ca	       424	clone.c	FUNCTION_9	WHILE_1	IF_6	CALL_22
0x118a	      0xe99d010000	                           jmp 0x400136c	       425	clone.c	FUNCTION_9	WHILE_1	IF_6
0x118f	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	       427	clone.c	FUNCTION_9	WHILE_1	IF_7	CALL_23
0x1195	      0x2500f00000	                         and eax, 0xf000	       427	clone.c	FUNCTION_9	WHILE_1	IF_7	CALL_23
0x119a	      0x3d00400000	                         cmp eax, 0x4000	       427	clone.c	FUNCTION_9	WHILE_1	IF_7	CALL_23
0x119f	            0x753b	                           jne 0x400121c	       427	clone.c	FUNCTION_9	WHILE_1	IF_7	CALL_23
0x11a1	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       428	clone.c	FUNCTION_9	WHILE_1	IF_7	IF_8
0x11a8	         0xfb64013	           movzx eax, byte [rax + 0x13] 	       428	clone.c	FUNCTION_9	WHILE_1	IF_7	IF_8
0x11ac	            0x3c2e	                            cmp al, 0x2e	       428	clone.c	FUNCTION_9	WHILE_1	IF_7	IF_8
0x11ae	     0xf8478010000	                            je 0x400136c	       428	clone.c	FUNCTION_9	WHILE_1	IF_7	IF_8
0x11b4	    0x8b8d14ffffff	             mov ecx, dword [rbp - 0xec]	       429	clone.c	FUNCTION_9	WHILE_1	IF_7	IF_8	CALL_24
0x11ba	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       429	clone.c	FUNCTION_9	WHILE_1	IF_7	IF_8	CALL_24
0x11c1	    0x488bb520ffff	             mov rsi, qword [rbp - 0xe0]	       429	clone.c	FUNCTION_9	WHILE_1	IF_7	IF_8	CALL_24
0x11c8	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       429	clone.c	FUNCTION_9	WHILE_1	IF_7	IF_8	CALL_24
0x11cf	          0x4889c7	                            mov rdi, rax	       429	clone.c	FUNCTION_9	WHILE_1	IF_7	IF_8	CALL_24
0x11d2	      0xe861fdffff	         call sym.copy_or_link_directory	       429	clone.c	FUNCTION_9	WHILE_1	IF_7	IF_8	CALL_24
0x11d7	      0xe950010000	                           jmp 0x400136c	       431	clone.c	FUNCTION_9	WHILE_1	IF_7
0x11dc	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       435	clone.c	FUNCTION_9	WHILE_1	IF_9	CALL_25
0x11e3	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       435	clone.c	FUNCTION_9	WHILE_1	IF_9	CALL_25
0x11e7	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	       435	clone.c	FUNCTION_9	WHILE_1	IF_9	CALL_25
0x11ed	            0x4898	                                    cdqe	       435	clone.c	FUNCTION_9	WHILE_1	IF_9	CALL_25
0x11ef	          0x4801d0	                            add rax, rdx	       435	clone.c	FUNCTION_9	WHILE_1	IF_9	CALL_25
0x11f2	      0xbe00000000	                              mov esi, 0	       435	clone.c	FUNCTION_9	WHILE_1	IF_9	CALL_25
0x11f7	          0x4889c7	                            mov rdi, rax	       435	clone.c	FUNCTION_9	WHILE_1	IF_9	CALL_25
0x11fa	      0xe800000000	                          call 0x400123f	       435	clone.c	FUNCTION_9	WHILE_1	IF_9	CALL_25
0x11ff	            0x85c0	                           test eax, eax	       435	clone.c	FUNCTION_9	WHILE_1	IF_9	CALL_25
0x1201	            0x7525	                           jne 0x4001268	       435	clone.c	FUNCTION_9	WHILE_1	IF_9	CALL_25
0x1203	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       436	clone.c	FUNCTION_9	WHILE_1	IF_9	CALL_26
0x120a	    0x488b8d20ffff	             mov rcx, qword [rbp - 0xe0]	       436	clone.c	FUNCTION_9	WHILE_1	IF_9	CALL_26
0x1211	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       436	clone.c	FUNCTION_9	WHILE_1	IF_9	CALL_26
0x1218	          0x4889ce	                            mov rsi, rcx	       436	clone.c	FUNCTION_9	WHILE_1	IF_9	CALL_26
0x121b	          0x4889c7	                            mov rdi, rax	       436	clone.c	FUNCTION_9	WHILE_1	IF_9	CALL_26
0x121e	      0xe8cdfbffff	                call sym.copy_alternates	       436	clone.c	FUNCTION_9	WHILE_1	IF_9	CALL_26
0x1223	      0xe904010000	                           jmp 0x400136c	       437	clone.c	FUNCTION_9	WHILE_1	IF_9
0x1228	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       440	clone.c	FUNCTION_9	WHILE_1	IF_10	CALL_27
0x122f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       440	clone.c	FUNCTION_9	WHILE_1	IF_10	CALL_27
0x1233	          0x4889c7	                            mov rdi, rax	       440	clone.c	FUNCTION_9	WHILE_1	IF_10	CALL_27
0x1236	      0xe800000000	                          call 0x400127b	       440	clone.c	FUNCTION_9	WHILE_1	IF_10	CALL_27
0x123b	            0x85c0	                           test eax, eax	       440	clone.c	FUNCTION_9	WHILE_1	IF_10	CALL_27
0x123d	            0x7431	                            je 0x40012b0	       440	clone.c	FUNCTION_9	WHILE_1	IF_10	CALL_27
0x123f	      0xe800000000	                          call 0x4001284	       440	clone.c	FUNCTION_9	WHILE_1	IF_10	CALL_27
0x1244	            0x8b00	                    mov eax, dword [rax]	       440	clone.c	FUNCTION_9	WHILE_1	IF_10	CALL_27
0x1246	          0x83f802	                              cmp eax, 2	       440	clone.c	FUNCTION_9	WHILE_1	IF_10	CALL_27
0x1249	            0x7425	                            je 0x40012b0	       440	clone.c	FUNCTION_9	WHILE_1	IF_10	CALL_27
0x124b	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       441	clone.c	FUNCTION_9	WHILE_1	CALL_29
0x1252	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       441	clone.c	FUNCTION_9	WHILE_1	CALL_29
0x1256	      0xbf00000000	                              mov edi, 0	       441	clone.c	FUNCTION_9	WHILE_1	CALL_29
0x125b	      0xe89bf0ffff	                               call sym.	       441	clone.c	FUNCTION_9	WHILE_1	CALL_29
0x1260	          0x4889de	                            mov rsi, rbx	       441	clone.c	FUNCTION_9	WHILE_1	CALL_29
0x1263	          0x4889c7	                            mov rdi, rax	       441	clone.c	FUNCTION_9	WHILE_1	CALL_29
0x1266	      0xb800000000	                              mov eax, 0	       441	clone.c	FUNCTION_9	WHILE_1	CALL_29
0x126b	      0xe800000000	                          call 0x40012b0	       441	clone.c	FUNCTION_9	WHILE_1	CALL_29
0x1270	    0x8b0500000000	            mov eax, dword [0x040012b6] 	       442	clone.c	FUNCTION_9	WHILE_1	IF_11
0x1276	            0x85c0	                           test eax, eax	       442	clone.c	FUNCTION_9	WHILE_1	IF_11
0x1278	            0x7563	                           jne 0x400131d	       442	clone.c	FUNCTION_9	WHILE_1	IF_11
0x127a	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       443	clone.c	FUNCTION_9	WHILE_1	IF_11	IF_12	CALL_30
0x1281	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       443	clone.c	FUNCTION_9	WHILE_1	IF_11	IF_12	CALL_30
0x1285	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       443	clone.c	FUNCTION_9	WHILE_1	IF_11	IF_12	CALL_30
0x128c	        0x488b4010	            mov rax, qword [rax + 0x10] 	       443	clone.c	FUNCTION_9	WHILE_1	IF_11	IF_12	CALL_30
0x1290	          0x4889d6	                            mov rsi, rdx	       443	clone.c	FUNCTION_9	WHILE_1	IF_11	IF_12	CALL_30
0x1293	          0x4889c7	                            mov rdi, rax	       443	clone.c	FUNCTION_9	WHILE_1	IF_11	IF_12	CALL_30
0x1296	      0xe800000000	                          call 0x40012db	       443	clone.c	FUNCTION_9	WHILE_1	IF_11	IF_12	CALL_30
0x129b	            0x85c0	                           test eax, eax	       443	clone.c	FUNCTION_9	WHILE_1	IF_11	IF_12	CALL_30
0x129d	            0x7505	                           jne 0x40012e4	       443	clone.c	FUNCTION_9	WHILE_1	IF_11	IF_12	CALL_30
0x129f	      0xe988000000	                           jmp 0x400136c	       444	clone.c	FUNCTION_9	WHILE_1	IF_11	IF_12
0x12a4	    0x8b0500000000	            mov eax, dword [0x040012ea] 	       445	clone.c	FUNCTION_9	WHILE_1	IF_11	IF_13
0x12aa	            0x85c0	                           test eax, eax	       445	clone.c	FUNCTION_9	WHILE_1	IF_11	IF_13
0x12ac	            0x7e25	                           jle 0x4001313	       445	clone.c	FUNCTION_9	WHILE_1	IF_11	IF_13
0x12ae	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       446	clone.c	FUNCTION_9	WHILE_1	IF_11	CALL_32
0x12b5	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       446	clone.c	FUNCTION_9	WHILE_1	IF_11	CALL_32
0x12b9	      0xbf00000000	                              mov edi, 0	       446	clone.c	FUNCTION_9	WHILE_1	IF_11	CALL_32
0x12be	      0xe838f0ffff	                               call sym.	       446	clone.c	FUNCTION_9	WHILE_1	IF_11	CALL_32
0x12c3	          0x4889de	                            mov rsi, rbx	       446	clone.c	FUNCTION_9	WHILE_1	IF_11	CALL_32
0x12c6	          0x4889c7	                            mov rdi, rax	       446	clone.c	FUNCTION_9	WHILE_1	IF_11	CALL_32
0x12c9	      0xb800000000	                              mov eax, 0	       446	clone.c	FUNCTION_9	WHILE_1	IF_11	CALL_32
0x12ce	      0xe800000000	                          call 0x4001313	       446	clone.c	FUNCTION_9	WHILE_1	IF_11	CALL_32
0x12d3	    0xc70500000000	               mov dword [0x0400131d], 1	       447	clone.c	FUNCTION_9	WHILE_1	IF_11
0x12dd	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       449	clone.c	FUNCTION_9	WHILE_1	IF_14	CALL_33
0x12e4	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       449	clone.c	FUNCTION_9	WHILE_1	IF_14	CALL_33
0x12e8	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       449	clone.c	FUNCTION_9	WHILE_1	IF_14	CALL_33
0x12ef	        0x488b4010	            mov rax, qword [rax + 0x10] 	       449	clone.c	FUNCTION_9	WHILE_1	IF_14	CALL_33
0x12f3	      0xbab6010000	                          mov edx, 0x1b6	       449	clone.c	FUNCTION_9	WHILE_1	IF_14	CALL_33
0x12f8	          0x4889ce	                            mov rsi, rcx	       449	clone.c	FUNCTION_9	WHILE_1	IF_14	CALL_33
0x12fb	          0x4889c7	                            mov rdi, rax	       449	clone.c	FUNCTION_9	WHILE_1	IF_14	CALL_33
0x12fe	      0xe800000000	                          call 0x4001343	       449	clone.c	FUNCTION_9	WHILE_1	IF_14	CALL_33
0x1303	            0x85c0	                           test eax, eax	       449	clone.c	FUNCTION_9	WHILE_1	IF_14	CALL_33
0x1305	            0x7425	                            je 0x400136c	       449	clone.c	FUNCTION_9	WHILE_1	IF_14	CALL_33
0x1307	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       450	clone.c	FUNCTION_9	WHILE_1	CALL_35
0x130e	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       450	clone.c	FUNCTION_9	WHILE_1	CALL_35
0x1312	      0xbf00000000	                              mov edi, 0	       450	clone.c	FUNCTION_9	WHILE_1	CALL_35
0x1317	      0xe8dfefffff	                               call sym.	       450	clone.c	FUNCTION_9	WHILE_1	CALL_35
0x131c	          0x4889de	                            mov rsi, rbx	       450	clone.c	FUNCTION_9	WHILE_1	CALL_35
0x131f	          0x4889c7	                            mov rdi, rax	       450	clone.c	FUNCTION_9	WHILE_1	CALL_35
0x1322	      0xb800000000	                              mov eax, 0	       450	clone.c	FUNCTION_9	WHILE_1	CALL_35
0x1327	      0xe800000000	                          call 0x400136c	       450	clone.c	FUNCTION_9	WHILE_1	CALL_35
0x132c	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       418	clone.c	FUNCTION_9	WHILE_1	CALL_15
0x1333	          0x4889c7	                            mov rdi, rax	       418	clone.c	FUNCTION_9	WHILE_1	CALL_15
0x1336	      0xe800000000	                          call 0x400137b	       418	clone.c	FUNCTION_9	WHILE_1	CALL_15
0x133b	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       418	clone.c	FUNCTION_9	WHILE_1	CALL_15
0x1342	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	       418	clone.c	FUNCTION_9	WHILE_1	CALL_15
0x134a	     0xf8584fdffff	                           jne 0x4001114	       418	clone.c	FUNCTION_9	WHILE_1	CALL_15
0x1350	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       452	clone.c	FUNCTION_9	CALL_36
0x1357	          0x4889c7	                            mov rdi, rax	       452	clone.c	FUNCTION_9	CALL_36
0x135a	      0xe800000000	                          call 0x400139f	       452	clone.c	FUNCTION_9	CALL_36
0x135f	              0x90	                                     nop	       453	clone.c	FUNCTION_9
0x1360	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       453	clone.c	FUNCTION_9
0x1364	    0x644833042528	                xor rax, qword fs:[0x28]	       453	clone.c	FUNCTION_9
0x136d	            0x7405	                            je 0x40013b4	       453	clone.c	FUNCTION_9
0x136f	      0xe800000000	                          call 0x40013b4	       453	clone.c	FUNCTION_9
0x1374	    0x4881c4e80000	                           add rsp, 0xe8	       453	clone.c	FUNCTION_9
0x137b	              0x5b	                                 pop rbx	       453	clone.c	FUNCTION_9
0x137c	              0x5d	                                 pop rbp	       453	clone.c	FUNCTION_9
0x137d	              0xc3	                                     ret	       453	clone.c	FUNCTION_9
checkout	WHILE,0:ELSE,1:IF,12:DO,0:SWITCH,0:CALL,32:functions,0:FOR,0	197
0x1e34	              0x55	                                push rbp	       713	clone.c	FUNCTION_20
0x1e35	          0x4889e5	                            mov rbp, rsp	       713	clone.c	FUNCTION_20
0x1e38	              0x53	                                push rbx	       713	clone.c	FUNCTION_20
0x1e39	    0x4881ecb80300	                          sub rsp, 0x3b8	       713	clone.c	FUNCTION_20
0x1e40	    0x89bd4cfcffff	            mov dword [rbp - 0x3b4], edi	       713	clone.c	FUNCTION_20
0x1e46	    0x64488b042528	                mov rax, qword fs:[0x28]	       713	clone.c	FUNCTION_20
0x1e4f	        0x488945e8	             mov qword [rbp - 0x18], rax	       713	clone.c	FUNCTION_20
0x1e53	            0x31c0	                            xor eax, eax	       713	clone.c	FUNCTION_20
0x1e55	    0x48c78560fcff	              mov qword [rbp - 0x3a0], 0	       716	clone.c	FUNCTION_20
0x1e60	    0xc7855cfcffff	              mov dword [rbp - 0x3a4], 0	       720	clone.c	FUNCTION_20
0x1e6a	    0x8b0500000000	            mov eax, dword [0x04001eb0] 	       722	clone.c	FUNCTION_20	IF_1
0x1e70	            0x85c0	                           test eax, eax	       722	clone.c	FUNCTION_20	IF_1
0x1e72	            0x740a	                            je 0x4001ebe	       722	clone.c	FUNCTION_20	IF_1
0x1e74	      0xb800000000	                              mov eax, 0	       723	clone.c	FUNCTION_20	IF_1
0x1e79	      0xe95f030000	                           jmp 0x400221d	       723	clone.c	FUNCTION_20	IF_1
0x1e7e	    0x488d85c0fcff	                  lea rax, [rbp - 0x340]	       725	clone.c	FUNCTION_20	CALL_1
0x1e85	      0xb900000000	                              mov ecx, 0	       725	clone.c	FUNCTION_20	CALL_1
0x1e8a	          0x4889c2	                            mov rdx, rax	       725	clone.c	FUNCTION_20	CALL_1
0x1e8d	      0xbe01000000	                              mov esi, 1	       725	clone.c	FUNCTION_20	CALL_1
0x1e92	      0xbf00000000	                              mov edi, 0	       725	clone.c	FUNCTION_20	CALL_1
0x1e97	      0xe800000000	                          call 0x4001edc	       725	clone.c	FUNCTION_20	CALL_1
0x1e9c	    0x48898570fcff	            mov qword [rbp - 0x390], rax	       725	clone.c	FUNCTION_20	CALL_1
0x1ea3	    0x4883bd70fcff	              cmp qword [rbp - 0x390], 0	       726	clone.c	FUNCTION_20	IF_2
0x1eab	            0x7521	                           jne 0x4001f0e	       726	clone.c	FUNCTION_20	IF_2
0x1ead	      0xbf00000000	                              mov edi, 0	       727	clone.c	FUNCTION_20	IF_2	CALL_3
0x1eb2	      0xe844e4ffff	                               call sym.	       727	clone.c	FUNCTION_20	IF_2	CALL_3
0x1eb7	          0x4889c7	                            mov rdi, rax	       727	clone.c	FUNCTION_20	IF_2	CALL_3
0x1eba	      0xb800000000	                              mov eax, 0	       727	clone.c	FUNCTION_20	IF_2	CALL_3
0x1ebf	      0xe800000000	                          call 0x4001f04	       727	clone.c	FUNCTION_20	IF_2	CALL_3
0x1ec4	      0xb800000000	                              mov eax, 0	       729	clone.c	FUNCTION_20	IF_2
0x1ec9	      0xe90f030000	                           jmp 0x400221d	       729	clone.c	FUNCTION_20	IF_2
0x1ece	    0x488b8570fcff	            mov rax, qword [rbp - 0x390]	       731	clone.c	FUNCTION_20	IF_3	CALL_4
0x1ed5	      0xbe00000000	                              mov esi, 0	       731	clone.c	FUNCTION_20	IF_3	CALL_4
0x1eda	          0x4889c7	                            mov rdi, rax	       731	clone.c	FUNCTION_20	IF_3	CALL_4
0x1edd	      0xe800000000	                          call 0x4001f22	       731	clone.c	FUNCTION_20	IF_3	CALL_4
0x1ee2	            0x85c0	                           test eax, eax	       731	clone.c	FUNCTION_20	IF_3	CALL_4
0x1ee4	            0x7523	                           jne 0x4001f49	       731	clone.c	FUNCTION_20	IF_3	CALL_4
0x1ee6	    0x8b0500000000	            mov eax, dword [0x04001f2c] 	       732	clone.c	FUNCTION_20	IF_3	IF_4
0x1eec	            0x85c0	                           test eax, eax	       732	clone.c	FUNCTION_20	IF_3	IF_4
0x1eee	            0x7448	                            je 0x4001f78	       732	clone.c	FUNCTION_20	IF_3	IF_4
0x1ef0	    0x488d85c0fcff	                  lea rax, [rbp - 0x340]	       733	clone.c	FUNCTION_20	IF_3	CALL_6
0x1ef7	          0x4889c7	                            mov rdi, rax	       733	clone.c	FUNCTION_20	IF_3	CALL_6
0x1efa	      0xe800000000	                          call 0x4001f3f	       733	clone.c	FUNCTION_20	IF_3	CALL_6
0x1eff	          0x4889c7	                            mov rdi, rax	       733	clone.c	FUNCTION_20	IF_3	CALL_6
0x1f02	      0xe800000000	                          call 0x4001f47	       733	clone.c	FUNCTION_20	IF_3	CALL_6
0x1f07	            0xeb2f	                           jmp 0x4001f78	       733	clone.c	FUNCTION_20	IF_3	CALL_6
0x1f09	    0x488b8570fcff	            mov rax, qword [rbp - 0x390]	       735	clone.c	FUNCTION_20	ELSE_1	IF_5	CALL_7
0x1f10	      0xbe00000000	                              mov esi, 0	       735	clone.c	FUNCTION_20	ELSE_1	IF_5	CALL_7
0x1f15	          0x4889c7	                            mov rdi, rax	       735	clone.c	FUNCTION_20	ELSE_1	IF_5	CALL_7
0x1f18	      0xe800000000	                          call 0x4001f5d	       735	clone.c	FUNCTION_20	ELSE_1	IF_5	CALL_7
0x1f1d	            0x85c0	                           test eax, eax	       735	clone.c	FUNCTION_20	ELSE_1	IF_5	CALL_7
0x1f1f	            0x7517	                           jne 0x4001f78	       735	clone.c	FUNCTION_20	ELSE_1	IF_5	CALL_7
0x1f21	      0xbf00000000	                              mov edi, 0	       736	clone.c	FUNCTION_20	ELSE_1	CALL_9
0x1f26	      0xe8d0e3ffff	                               call sym.	       736	clone.c	FUNCTION_20	ELSE_1	CALL_9
0x1f2b	          0x4889c7	                            mov rdi, rax	       736	clone.c	FUNCTION_20	ELSE_1	CALL_9
0x1f2e	      0xb800000000	                              mov eax, 0	       736	clone.c	FUNCTION_20	ELSE_1	CALL_9
0x1f33	      0xe800000000	                          call 0x4001f78	       736	clone.c	FUNCTION_20	ELSE_1	CALL_9
0x1f38	    0x488b8570fcff	            mov rax, qword [rbp - 0x390]	       738	clone.c	FUNCTION_20	CALL_10
0x1f3f	          0x4889c7	                            mov rdi, rax	       738	clone.c	FUNCTION_20	CALL_10
0x1f42	      0xe800000000	                          call 0x4001f87	       738	clone.c	FUNCTION_20	CALL_10
0x1f47	      0xe800000000	                          call 0x4001f8c	       741	clone.c	FUNCTION_20	CALL_11
0x1f4c	    0x488d8560fcff	                  lea rax, [rbp - 0x3a0]	       743	clone.c	FUNCTION_20	CALL_12
0x1f53	      0xbe01000000	                              mov esi, 1	       743	clone.c	FUNCTION_20	CALL_12
0x1f58	          0x4889c7	                            mov rdi, rax	       743	clone.c	FUNCTION_20	CALL_12
0x1f5b	      0xe800000000	                          call 0x4001fa0	       743	clone.c	FUNCTION_20	CALL_12
0x1f60	    0x488d85e0fcff	                  lea rax, [rbp - 0x320]	       745	clone.c	FUNCTION_20	CALL_13
0x1f67	      0xba00030000	                          mov edx, 0x300	       745	clone.c	FUNCTION_20	CALL_13
0x1f6c	      0xbe00000000	                              mov esi, 0	       745	clone.c	FUNCTION_20	CALL_13
0x1f71	          0x4889c7	                            mov rdi, rax	       745	clone.c	FUNCTION_20	CALL_13
0x1f74	      0xe800000000	                          call 0x4001fb9	       745	clone.c	FUNCTION_20	CALL_13
0x1f79	    0xc785e8fcffff	              mov dword [rbp - 0x318], 1	       746	clone.c	FUNCTION_20
0x1f83	    0xc785e4fcffff	              mov dword [rbp - 0x31c], 1	       747	clone.c	FUNCTION_20
0x1f8d	    0x48c78548fdff	              mov qword [rbp - 0x2b8], 0	       748	clone.c	FUNCTION_20
0x1f98	    0x8b0500000000	            mov eax, dword [0x04001fde] 	       749	clone.c	FUNCTION_20
0x1f9e	            0xf7d0	                                 not eax	       749	clone.c	FUNCTION_20
0x1fa0	          0xc1e81f	                           shr eax, 0x1f	       749	clone.c	FUNCTION_20
0x1fa3	           0xfb6c0	                           movzx eax, al	       749	clone.c	FUNCTION_20
0x1fa6	    0x8985f8fcffff	            mov dword [rbp - 0x308], eax	       749	clone.c	FUNCTION_20
0x1fac	    0x48c78500ffff	              mov qword [rbp - 0x100], 0	       750	clone.c	FUNCTION_20
0x1fb7	    0x48c785f8feff	              mov qword [rbp - 0x108], 0	       751	clone.c	FUNCTION_20
0x1fc2	    0x488d85c0fcff	                  lea rax, [rbp - 0x340]	       753	clone.c	FUNCTION_20	CALL_14
0x1fc9	          0x4889c7	                            mov rdi, rax	       753	clone.c	FUNCTION_20	CALL_14
0x1fcc	      0xe800000000	                          call 0x4002011	       753	clone.c	FUNCTION_20	CALL_14
0x1fd1	    0x48898578fcff	            mov qword [rbp - 0x388], rax	       753	clone.c	FUNCTION_20	CALL_14
0x1fd8	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	       754	clone.c	FUNCTION_20	CALL_15
0x1fdf	          0x4889c7	                            mov rdi, rax	       754	clone.c	FUNCTION_20	CALL_15
0x1fe2	      0xe821e4ffff	                     call sym.parse_tree	       754	clone.c	FUNCTION_20	CALL_15
0x1fe7	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	       755	clone.c	FUNCTION_20	CALL_16
0x1fee	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       755	clone.c	FUNCTION_20	CALL_16
0x1ff2	    0x488b8578fcff	            mov rax, qword [rbp - 0x388]	       755	clone.c	FUNCTION_20	CALL_16
0x1ff9	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       755	clone.c	FUNCTION_20	CALL_16
0x1ffd	    0x488d8590fcff	                  lea rax, [rbp - 0x370]	       755	clone.c	FUNCTION_20	CALL_16
0x2004	          0x4889ce	                            mov rsi, rcx	       755	clone.c	FUNCTION_20	CALL_16
0x2007	          0x4889c7	                            mov rdi, rax	       755	clone.c	FUNCTION_20	CALL_16
0x200a	      0xe800000000	                          call 0x400204f	       755	clone.c	FUNCTION_20	CALL_16
0x200f	    0x488d95e0fcff	                  lea rdx, [rbp - 0x320]	       756	clone.c	FUNCTION_20	IF_6	CALL_17
0x2016	    0x488d8590fcff	                  lea rax, [rbp - 0x370]	       756	clone.c	FUNCTION_20	IF_6	CALL_17
0x201d	          0x4889c6	                            mov rsi, rax	       756	clone.c	FUNCTION_20	IF_6	CALL_17
0x2020	      0xbf01000000	                              mov edi, 1	       756	clone.c	FUNCTION_20	IF_6	CALL_17
0x2025	      0xe800000000	                          call 0x400206a	       756	clone.c	FUNCTION_20	IF_6	CALL_17
0x202a	            0x85c0	                           test eax, eax	       756	clone.c	FUNCTION_20	IF_6	CALL_17
0x202c	            0x7917	                           jns 0x4002085	       756	clone.c	FUNCTION_20	IF_6	CALL_17
0x202e	      0xbf00000000	                              mov edi, 0	       757	clone.c	FUNCTION_20	CALL_19
0x2033	      0xe8c3e2ffff	                               call sym.	       757	clone.c	FUNCTION_20	CALL_19
0x2038	          0x4889c7	                            mov rdi, rax	       757	clone.c	FUNCTION_20	CALL_19
0x203b	      0xb800000000	                              mov eax, 0	       757	clone.c	FUNCTION_20	CALL_19
0x2040	      0xe800000000	                          call 0x4002085	       757	clone.c	FUNCTION_20	CALL_19
0x2045	    0x488d8560fcff	                  lea rax, [rbp - 0x3a0]	       759	clone.c	FUNCTION_20	IF_7	CALL_20
0x204c	      0xba01000000	                              mov edx, 1	       759	clone.c	FUNCTION_20	IF_7	CALL_20
0x2051	          0x4889c6	                            mov rsi, rax	       759	clone.c	FUNCTION_20	IF_7	CALL_20
0x2054	      0xbf00000000	                              mov edi, 0	       759	clone.c	FUNCTION_20	IF_7	CALL_20
0x2059	      0xe800000000	                          call 0x400209e	       759	clone.c	FUNCTION_20	IF_7	CALL_20
0x205e	            0x85c0	                           test eax, eax	       759	clone.c	FUNCTION_20	IF_7	CALL_20
0x2060	            0x7417	                            je 0x40020b9	       759	clone.c	FUNCTION_20	IF_7	CALL_20
0x2062	      0xbf00000000	                              mov edi, 0	       760	clone.c	FUNCTION_20	CALL_22
0x2067	      0xe88fe2ffff	                               call sym.	       760	clone.c	FUNCTION_20	CALL_22
0x206c	          0x4889c7	                            mov rdi, rax	       760	clone.c	FUNCTION_20	CALL_22
0x206f	      0xb800000000	                              mov eax, 0	       760	clone.c	FUNCTION_20	CALL_22
0x2074	      0xe800000000	                          call 0x40020b9	       760	clone.c	FUNCTION_20	CALL_22
0x2079	    0x488d85c0fcff	                  lea rax, [rbp - 0x340]	       762	clone.c	FUNCTION_20	CALL_24
0x2080	          0x4889c7	                            mov rdi, rax	       762	clone.c	FUNCTION_20	CALL_24
0x2083	      0xe800000000	                          call 0x40020c8	       762	clone.c	FUNCTION_20	CALL_24
0x2088	          0x4889c3	                            mov rbx, rax	       762	clone.c	FUNCTION_20	CALL_24
0x208b	      0xbf00000000	                              mov edi, 0	       762	clone.c	FUNCTION_20	CALL_24
0x2090	      0xe800000000	                          call 0x40020d5	       762	clone.c	FUNCTION_20	CALL_24
0x2095	    0x41b900000000	                              mov r9d, 0	       762	clone.c	FUNCTION_20	CALL_24
0x209b	    0x41b800000000	                              mov r8d, 0	       762	clone.c	FUNCTION_20	CALL_24
0x20a1	          0x4889d9	                            mov rcx, rbx	       762	clone.c	FUNCTION_20	CALL_24
0x20a4	          0x4889c2	                            mov rdx, rax	       762	clone.c	FUNCTION_20	CALL_24
0x20a7	      0xbe00000000	                              mov esi, 0	       762	clone.c	FUNCTION_20	CALL_24
0x20ac	      0xbf00000000	                              mov edi, 0	       762	clone.c	FUNCTION_20	CALL_24
0x20b1	      0xb800000000	                              mov eax, 0	       762	clone.c	FUNCTION_20	CALL_24
0x20b6	      0xe800000000	                          call 0x40020fb	       762	clone.c	FUNCTION_20	CALL_24
0x20bb	     0x9855cfcffff	             or dword [rbp - 0x3a4], eax	       762	clone.c	FUNCTION_20	CALL_24
0x20c1	    0x83bd5cfcffff	              cmp dword [rbp - 0x3a4], 0	       765	clone.c	FUNCTION_20	IF_8
0x20c8	     0xf8509010000	                           jne 0x4002217	       765	clone.c	FUNCTION_20	IF_8
0x20ce	    0x8b0500000000	            mov eax, dword [0x04002114] 	       765	clone.c	FUNCTION_20	IF_8
0x20d4	            0x85c0	                           test eax, eax	       765	clone.c	FUNCTION_20	IF_8
0x20d6	     0xf84fb000000	                            je 0x4002217	       765	clone.c	FUNCTION_20	IF_8
0x20dc	    0x48c78580fcff	              mov qword [rbp - 0x380], 0	       766	clone.c	FUNCTION_20	IF_8
0x20e7	    0xc78588fcffff	              mov dword [rbp - 0x378], 0	       766	clone.c	FUNCTION_20	IF_8
0x20f1	    0xc7858cfcffff	              mov dword [rbp - 0x374], 0	       766	clone.c	FUNCTION_20	IF_8
0x20fb	    0x488d8580fcff	                  lea rax, [rbp - 0x380]	       767	clone.c	FUNCTION_20	IF_8	CALL_26
0x2102	    0x41b900000000	                              mov r9d, 0	       767	clone.c	FUNCTION_20	IF_8	CALL_26
0x2108	    0x41b800000000	                              mov r8d, 0	       767	clone.c	FUNCTION_20	IF_8	CALL_26
0x210e	      0xb900000000	                              mov ecx, 0	       767	clone.c	FUNCTION_20	IF_8	CALL_26
0x2113	      0xba00000000	                              mov edx, 0	       767	clone.c	FUNCTION_20	IF_8	CALL_26
0x2118	      0xbe00000000	                              mov esi, 0	       767	clone.c	FUNCTION_20	IF_8	CALL_26
0x211d	          0x4889c7	                            mov rdi, rax	       767	clone.c	FUNCTION_20	IF_8	CALL_26
0x2120	      0xb800000000	                              mov eax, 0	       767	clone.c	FUNCTION_20	IF_8	CALL_26
0x2125	      0xe800000000	                          call 0x400216a	       767	clone.c	FUNCTION_20	IF_8	CALL_26
0x212a	    0x8b0500000000	            mov eax, dword [0x04002170] 	       769	clone.c	FUNCTION_20	IF_8	IF_9
0x2130	          0x83f801	                              cmp eax, 1	       769	clone.c	FUNCTION_20	IF_8	IF_9
0x2133	            0x7514	                           jne 0x4002189	       769	clone.c	FUNCTION_20	IF_8	IF_9
0x2135	    0x488d8580fcff	                  lea rax, [rbp - 0x380]	       770	clone.c	FUNCTION_20	IF_8	CALL_27
0x213c	      0xbe00000000	                              mov esi, 0	       770	clone.c	FUNCTION_20	IF_8	CALL_27
0x2141	          0x4889c7	                            mov rdi, rax	       770	clone.c	FUNCTION_20	IF_8	CALL_27
0x2144	      0xe800000000	                          call 0x4002189	       770	clone.c	FUNCTION_20	IF_8	CALL_27
0x2149	    0x8b0500000000	            mov eax, dword [0x0400218f] 	       772	clone.c	FUNCTION_20	IF_8	IF_10
0x214f	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       772	clone.c	FUNCTION_20	IF_8	IF_10
0x2152	            0x741f	                            je 0x40021b3	       772	clone.c	FUNCTION_20	IF_8	IF_10
0x2154	    0x8b1500000000	            mov edx, dword [0x0400219a] 	       773	clone.c	FUNCTION_20	IF_8	CALL_28
0x215a	    0x488d8580fcff	                  lea rax, [rbp - 0x380]	       773	clone.c	FUNCTION_20	IF_8	CALL_28
0x2161	      0xbe00000000	                              mov esi, 0	       773	clone.c	FUNCTION_20	IF_8	CALL_28
0x2166	          0x4889c7	                            mov rdi, rax	       773	clone.c	FUNCTION_20	IF_8	CALL_28
0x2169	      0xb800000000	                              mov eax, 0	       773	clone.c	FUNCTION_20	IF_8	CALL_28
0x216e	      0xe800000000	                          call 0x40021b3	       773	clone.c	FUNCTION_20	IF_8	CALL_28
0x2173	    0x83bd4cfcffff	              cmp dword [rbp - 0x3b4], 0	       775	clone.c	FUNCTION_20	IF_8	IF_11
0x217a	            0x7414	                            je 0x40021d0	       775	clone.c	FUNCTION_20	IF_8	IF_11
0x217c	    0x488d8580fcff	                  lea rax, [rbp - 0x380]	       776	clone.c	FUNCTION_20	IF_8	CALL_29
0x2183	      0xbe00000000	                              mov esi, 0	       776	clone.c	FUNCTION_20	IF_8	CALL_29
0x2188	          0x4889c7	                            mov rdi, rax	       776	clone.c	FUNCTION_20	IF_8	CALL_29
0x218b	      0xe800000000	                          call 0x40021d0	       776	clone.c	FUNCTION_20	IF_8	CALL_29
0x2190	    0x8b0500000000	            mov eax, dword [0x040021d6] 	       778	clone.c	FUNCTION_20	IF_8	IF_12
0x2196	            0x85c0	                           test eax, eax	       778	clone.c	FUNCTION_20	IF_8	IF_12
0x2198	            0x7914	                           jns 0x40021ee	       778	clone.c	FUNCTION_20	IF_8	IF_12
0x219a	    0x488d8580fcff	                  lea rax, [rbp - 0x380]	       779	clone.c	FUNCTION_20	IF_8	CALL_30
0x21a1	      0xbe00000000	                              mov esi, 0	       779	clone.c	FUNCTION_20	IF_8	CALL_30
0x21a6	          0x4889c7	                            mov rdi, rax	       779	clone.c	FUNCTION_20	IF_8	CALL_30
0x21a9	      0xe800000000	                          call 0x40021ee	       779	clone.c	FUNCTION_20	IF_8	CALL_30
0x21ae	    0x488b8580fcff	            mov rax, qword [rbp - 0x380]	       781	clone.c	FUNCTION_20	IF_8	CALL_31
0x21b5	      0xbe02000000	                              mov esi, 2	       781	clone.c	FUNCTION_20	IF_8	CALL_31
0x21ba	          0x4889c7	                            mov rdi, rax	       781	clone.c	FUNCTION_20	IF_8	CALL_31
0x21bd	      0xe800000000	                          call 0x4002202	       781	clone.c	FUNCTION_20	IF_8	CALL_31
0x21c2	    0x89855cfcffff	            mov dword [rbp - 0x3a4], eax	       781	clone.c	FUNCTION_20	IF_8	CALL_31
0x21c8	    0x488d8580fcff	                  lea rax, [rbp - 0x380]	       782	clone.c	FUNCTION_20	IF_8	CALL_32
0x21cf	          0x4889c7	                            mov rdi, rax	       782	clone.c	FUNCTION_20	IF_8	CALL_32
0x21d2	      0xe800000000	                          call 0x4002217	       782	clone.c	FUNCTION_20	IF_8	CALL_32
0x21d7	    0x8b855cfcffff	            mov eax, dword [rbp - 0x3a4]	       785	clone.c	FUNCTION_20
0x21dd	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       786	clone.c	FUNCTION_20
0x21e1	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       786	clone.c	FUNCTION_20
0x21ea	            0x7405	                            je 0x4002231	       786	clone.c	FUNCTION_20
0x21ec	      0xe800000000	                          call 0x4002231	       786	clone.c	FUNCTION_20
0x21f1	    0x4881c4b80300	                          add rsp, 0x3b8	       786	clone.c	FUNCTION_20
0x21f8	              0x5b	                                 pop rbx	       786	clone.c	FUNCTION_20
0x21f9	              0x5d	                                 pop rbp	       786	clone.c	FUNCTION_20
0x21fa	              0xc3	                                     ret	       786	clone.c	FUNCTION_20
write_config	WHILE,0:ELSE,0:IF,1:DO,0:SWITCH,0:CALL,3:functions,0:FOR,1	33
0x2239	              0x55	                                push rbp	       796	clone.c	FUNCTION_22
0x223a	          0x4889e5	                            mov rbp, rsp	       796	clone.c	FUNCTION_22
0x223d	        0x4883ec20	                           sub rsp, 0x20	       796	clone.c	FUNCTION_22
0x2241	        0x48897de8	             mov qword [rbp - 0x18], rdi	       796	clone.c	FUNCTION_22
0x2245	    0xc745fc000000	                  mov dword [rbp - 4], 0	       799	clone.c	FUNCTION_22	FOR_1
0x224c	            0xeb48	                           jmp 0x40022d6	       799	clone.c	FUNCTION_22	FOR_1
0x224e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       800	clone.c	FUNCTION_22	FOR_1	IF_1	CALL_1
0x2252	          0x488b00	                    mov rax, qword [rax]	       800	clone.c	FUNCTION_22	FOR_1	IF_1	CALL_1
0x2255	          0x8b55fc	                mov edx, dword [rbp - 4]	       800	clone.c	FUNCTION_22	FOR_1	IF_1	CALL_1
0x2258	          0x4863d2	                         movsxd rdx, edx	       800	clone.c	FUNCTION_22	FOR_1	IF_1	CALL_1
0x225b	        0x48c1e204	                              shl rdx, 4	       800	clone.c	FUNCTION_22	FOR_1	IF_1	CALL_1
0x225f	          0x4801d0	                            add rax, rdx	       800	clone.c	FUNCTION_22	FOR_1	IF_1	CALL_1
0x2262	          0x488b00	                    mov rax, qword [rax]	       800	clone.c	FUNCTION_22	FOR_1	IF_1	CALL_1
0x2265	      0xba00000000	                              mov edx, 0	       800	clone.c	FUNCTION_22	FOR_1	IF_1	CALL_1
0x226a	      0xbe00000000	                              mov esi, 0	       800	clone.c	FUNCTION_22	FOR_1	IF_1	CALL_1
0x226f	          0x4889c7	                            mov rdi, rax	       800	clone.c	FUNCTION_22	FOR_1	IF_1	CALL_1
0x2272	      0xe800000000	                          call 0x40022b7	       800	clone.c	FUNCTION_22	FOR_1	IF_1	CALL_1
0x2277	            0x85c0	                           test eax, eax	       800	clone.c	FUNCTION_22	FOR_1	IF_1	CALL_1
0x2279	            0x7917	                           jns 0x40022d2	       800	clone.c	FUNCTION_22	FOR_1	IF_1	CALL_1
0x227b	      0xbf00000000	                              mov edi, 0	       802	clone.c	FUNCTION_22	FOR_1	CALL_3
0x2280	      0xe876e0ffff	                               call sym.	       802	clone.c	FUNCTION_22	FOR_1	CALL_3
0x2285	          0x4889c7	                            mov rdi, rax	       802	clone.c	FUNCTION_22	FOR_1	CALL_3
0x2288	      0xb800000000	                              mov eax, 0	       802	clone.c	FUNCTION_22	FOR_1	CALL_3
0x228d	      0xe800000000	                          call 0x40022d2	       802	clone.c	FUNCTION_22	FOR_1	CALL_3
0x2292	        0x8345fc01	                  add dword [rbp - 4], 1	       799	clone.c	FUNCTION_22	FOR_1
0x2296	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       799	clone.c	FUNCTION_22	FOR_1
0x229a	          0x8b5008	                mov edx, dword [rax + 8]	       799	clone.c	FUNCTION_22	FOR_1
0x229d	          0x8b45fc	                mov eax, dword [rbp - 4]	       799	clone.c	FUNCTION_22	FOR_1
0x22a0	            0x39c2	                            cmp edx, eax	       799	clone.c	FUNCTION_22	FOR_1
0x22a2	            0x77aa	                            ja 0x400228e	       799	clone.c	FUNCTION_22	FOR_1
0x22a4	              0x90	                                     nop	       804	clone.c	FUNCTION_22
0x22a5	              0xc9	                                   leave	       804	clone.c	FUNCTION_22
0x22a6	              0xc3	                                     ret	       804	clone.c	FUNCTION_22
dissociate_from_references	WHILE,0:ELSE,0:IF,3:DO,0:SWITCH,0:CALL,9:functions,0:FOR,0	43
0x2523	              0x55	                                push rbp	       859	clone.c	FUNCTION_24
0x2524	          0x4889e5	                            mov rbp, rsp	       859	clone.c	FUNCTION_24
0x2527	        0x4883ec10	                           sub rsp, 0x10	       859	clone.c	FUNCTION_24
0x252b	      0xbf00000000	                              mov edi, 0	       861	clone.c	FUNCTION_24	CALL_1
0x2530	      0xb800000000	                              mov eax, 0	       861	clone.c	FUNCTION_24	CALL_1
0x2535	      0xe800000000	                          call 0x400257a	       861	clone.c	FUNCTION_24	CALL_1
0x253a	        0x488945f8	                mov qword [rbp - 8], rax	       861	clone.c	FUNCTION_24	CALL_1
0x253e	        0x488b45f8	                mov rax, qword [rbp - 8]	       863	clone.c	FUNCTION_24	IF_1	CALL_2
0x2542	      0xbe00000000	                              mov esi, 0	       863	clone.c	FUNCTION_24	IF_1	CALL_2
0x2547	          0x4889c7	                            mov rdi, rax	       863	clone.c	FUNCTION_24	IF_1	CALL_2
0x254a	      0xe800000000	                          call 0x400258f	       863	clone.c	FUNCTION_24	IF_1	CALL_2
0x254f	            0x85c0	                           test eax, eax	       863	clone.c	FUNCTION_24	IF_1	CALL_2
0x2551	            0x755d	                           jne 0x40025f0	       863	clone.c	FUNCTION_24	IF_1	CALL_2
0x2553	      0xbe03000000	                              mov esi, 3	       864	clone.c	FUNCTION_24	IF_1	IF_2	CALL_3
0x2558	      0xbf00000000	                              mov edi, 0	       864	clone.c	FUNCTION_24	IF_1	IF_2	CALL_3
0x255d	      0xe800000000	                          call 0x40025a2	       864	clone.c	FUNCTION_24	IF_1	IF_2	CALL_3
0x2562	            0x85c0	                           test eax, eax	       864	clone.c	FUNCTION_24	IF_1	IF_2	CALL_3
0x2564	            0x7417	                            je 0x40025bd	       864	clone.c	FUNCTION_24	IF_1	IF_2	CALL_3
0x2566	      0xbf00000000	                              mov edi, 0	       865	clone.c	FUNCTION_24	IF_1	CALL_5
0x256b	      0xe88bddffff	                               call sym.	       865	clone.c	FUNCTION_24	IF_1	CALL_5
0x2570	          0x4889c7	                            mov rdi, rax	       865	clone.c	FUNCTION_24	IF_1	CALL_5
0x2573	      0xb800000000	                              mov eax, 0	       865	clone.c	FUNCTION_24	IF_1	CALL_5
0x2578	      0xe800000000	                          call 0x40025bd	       865	clone.c	FUNCTION_24	IF_1	CALL_5
0x257d	        0x488b45f8	                mov rax, qword [rbp - 8]	       866	clone.c	FUNCTION_24	IF_1	IF_3	CALL_6
0x2581	          0x4889c7	                            mov rdi, rax	       866	clone.c	FUNCTION_24	IF_1	IF_3	CALL_6
0x2584	      0xe800000000	                          call 0x40025c9	       866	clone.c	FUNCTION_24	IF_1	IF_3	CALL_6
0x2589	            0x85c0	                           test eax, eax	       866	clone.c	FUNCTION_24	IF_1	IF_3	CALL_6
0x258b	            0x7423	                            je 0x40025f0	       866	clone.c	FUNCTION_24	IF_1	IF_3	CALL_6
0x258d	      0xe800000000	                          call 0x40025d2	       866	clone.c	FUNCTION_24	IF_1	IF_3	CALL_6
0x2592	            0x8b00	                    mov eax, dword [rax]	       866	clone.c	FUNCTION_24	IF_1	IF_3	CALL_6
0x2594	          0x83f802	                              cmp eax, 2	       866	clone.c	FUNCTION_24	IF_1	IF_3	CALL_6
0x2597	            0x7417	                            je 0x40025f0	       866	clone.c	FUNCTION_24	IF_1	IF_3	CALL_6
0x2599	      0xbf00000000	                              mov edi, 0	       867	clone.c	FUNCTION_24	IF_1	CALL_8
0x259e	      0xe858ddffff	                               call sym.	       867	clone.c	FUNCTION_24	IF_1	CALL_8
0x25a3	          0x4889c7	                            mov rdi, rax	       867	clone.c	FUNCTION_24	IF_1	CALL_8
0x25a6	      0xb800000000	                              mov eax, 0	       867	clone.c	FUNCTION_24	IF_1	CALL_8
0x25ab	      0xe800000000	                          call 0x40025f0	       867	clone.c	FUNCTION_24	IF_1	CALL_8
0x25b0	        0x488b45f8	                mov rax, qword [rbp - 8]	       869	clone.c	FUNCTION_24	CALL_9
0x25b4	          0x4889c7	                            mov rdi, rax	       869	clone.c	FUNCTION_24	CALL_9
0x25b7	      0xe800000000	                          call 0x40025fc	       869	clone.c	FUNCTION_24	CALL_9
0x25bc	              0x90	                                     nop	       870	clone.c	FUNCTION_24
0x25bd	              0xc9	                                   leave	       870	clone.c	FUNCTION_24
0x25be	              0xc3	                                     ret	       870	clone.c	FUNCTION_24
iterate_ref_map	WHILE,1:ELSE,0:IF,1:DO,0:SWITCH,0:CALL,1:functions,0:FOR,0	37
0x1a9a	              0x55	                                push rbp	       626	clone.c	FUNCTION_17
0x1a9b	          0x4889e5	                            mov rbp, rsp	       626	clone.c	FUNCTION_17
0x1a9e	        0x4883ec20	                           sub rsp, 0x20	       626	clone.c	FUNCTION_17
0x1aa2	        0x48897de8	             mov qword [rbp - 0x18], rdi	       626	clone.c	FUNCTION_17
0x1aa6	        0x488975e0	             mov qword [rbp - 0x20], rsi	       626	clone.c	FUNCTION_17
0x1aaa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       627	clone.c	FUNCTION_17
0x1aae	        0x488945f8	                mov qword [rbp - 8], rax	       627	clone.c	FUNCTION_17
0x1ab2	        0x488b45f8	                mov rax, qword [rbp - 8]	       628	clone.c	FUNCTION_17
0x1ab6	          0x488b00	                    mov rax, qword [rax]	       628	clone.c	FUNCTION_17
0x1ab9	        0x488945f0	             mov qword [rbp - 0x10], rax	       628	clone.c	FUNCTION_17
0x1abd	            0xeb0b	                           jmp 0x4001b0a	       634	clone.c	FUNCTION_17	WHILE_1
0x1abf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       635	clone.c	FUNCTION_17	WHILE_1
0x1ac3	          0x488b00	                    mov rax, qword [rax]	       635	clone.c	FUNCTION_17	WHILE_1
0x1ac6	        0x488945f0	             mov qword [rbp - 0x10], rax	       635	clone.c	FUNCTION_17	WHILE_1
0x1aca	      0x48837df000	               cmp qword [rbp - 0x10], 0	       634	clone.c	FUNCTION_17	WHILE_1
0x1acf	            0x740d	                            je 0x4001b1e	       634	clone.c	FUNCTION_17	WHILE_1
0x1ad1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       634	clone.c	FUNCTION_17	WHILE_1
0x1ad5	        0x488b4068	            mov rax, qword [rax + 0x68] 	       634	clone.c	FUNCTION_17	WHILE_1
0x1ad9	          0x4885c0	                           test rax, rax	       634	clone.c	FUNCTION_17	WHILE_1
0x1adc	            0x74e1	                            je 0x4001aff	       634	clone.c	FUNCTION_17	WHILE_1
0x1ade	      0x48837df000	               cmp qword [rbp - 0x10], 0	       637	clone.c	FUNCTION_17	IF_1
0x1ae3	            0x7507	                           jne 0x4001b2c	       637	clone.c	FUNCTION_17	IF_1
0x1ae5	      0xb8ffffffff	                     mov eax, 0xffffffff	       638	clone.c	FUNCTION_17	IF_1
0x1aea	            0xeb2a	                           jmp 0x4001b56	       638	clone.c	FUNCTION_17	IF_1
0x1aec	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       640	clone.c	FUNCTION_17	CALL_1
0x1af0	        0x488d5008	                      lea rdx, [rax + 8]	       640	clone.c	FUNCTION_17	CALL_1
0x1af4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       640	clone.c	FUNCTION_17	CALL_1
0x1af8	          0x4889d6	                            mov rsi, rdx	       640	clone.c	FUNCTION_17	CALL_1
0x1afb	          0x4889c7	                            mov rdi, rax	       640	clone.c	FUNCTION_17	CALL_1
0x1afe	      0xe8a0e8ffff	                         call sym.oidcpy	       640	clone.c	FUNCTION_17	CALL_1
0x1b03	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       641	clone.c	FUNCTION_17
0x1b07	          0x488b10	                    mov rdx, qword [rax]	       641	clone.c	FUNCTION_17
0x1b0a	        0x488b45f8	                mov rax, qword [rbp - 8]	       641	clone.c	FUNCTION_17
0x1b0e	          0x488910	                    mov qword [rax], rdx	       641	clone.c	FUNCTION_17
0x1b11	      0xb800000000	                              mov eax, 0	       642	clone.c	FUNCTION_17
0x1b16	              0xc9	                                   leave	       643	clone.c	FUNCTION_17
0x1b17	              0xc3	                                     ret	       643	clone.c	FUNCTION_17
add_one_reference	WHILE,0:ELSE,2:IF,2:DO,0:SWITCH,0:CALL,9:functions,0:FOR,0	77
0xc4d	              0x55	                                push rbp	       320	clone.c	FUNCTION_6
0xc4e	          0x4889e5	                            mov rbp, rsp	       320	clone.c	FUNCTION_6
0xc51	            0x4154	                                push r12	       320	clone.c	FUNCTION_6
0xc53	              0x53	                                push rbx	       320	clone.c	FUNCTION_6
0xc54	        0x4883ec60	                           sub rsp, 0x60	       320	clone.c	FUNCTION_6
0xc58	        0x48897d98	             mov qword [rbp - 0x68], rdi	       320	clone.c	FUNCTION_6
0xc5c	        0x48897590	             mov qword [rbp - 0x70], rsi	       320	clone.c	FUNCTION_6
0xc60	    0x64488b042528	                mov rax, qword fs:[0x28]	       320	clone.c	FUNCTION_6
0xc69	        0x488945e8	             mov qword [rbp - 0x18], rax	       320	clone.c	FUNCTION_6
0xc6d	            0x31c0	                            xor eax, eax	       320	clone.c	FUNCTION_6
0xc6f	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       321	clone.c	FUNCTION_6
0xc77	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       321	clone.c	FUNCTION_6
0xc7f	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       321	clone.c	FUNCTION_6
0xc87	        0x488b4590	             mov rax, qword [rbp - 0x70]	       322	clone.c	FUNCTION_6
0xc8b	        0x488945a0	             mov qword [rbp - 0x60], rax	       322	clone.c	FUNCTION_6
0xc8f	        0x488b4598	             mov rax, qword [rbp - 0x68]	       323	clone.c	FUNCTION_6	CALL_1
0xc93	          0x488b00	                    mov rax, qword [rax]	       323	clone.c	FUNCTION_6	CALL_1
0xc96	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       323	clone.c	FUNCTION_6	CALL_1
0xc9a	          0x4889d6	                            mov rsi, rdx	       323	clone.c	FUNCTION_6	CALL_1
0xc9d	          0x4889c7	                            mov rdi, rax	       323	clone.c	FUNCTION_6	CALL_1
0xca0	      0xe800000000	                          call 0x4000ce5	       323	clone.c	FUNCTION_6	CALL_1
0xca5	        0x488945a8	             mov qword [rbp - 0x58], rax	       323	clone.c	FUNCTION_6	CALL_1
0xca9	      0x48837da800	               cmp qword [rbp - 0x58], 0	       325	clone.c	FUNCTION_6	IF_1
0xcae	            0x7554	                           jne 0x4000d44	       325	clone.c	FUNCTION_6	IF_1
0xcb0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       326	clone.c	FUNCTION_6	IF_1	IF_2
0xcb4	            0x8b00	                    mov eax, dword [rax]	       326	clone.c	FUNCTION_6	IF_1	IF_2
0xcb6	            0x85c0	                           test eax, eax	       326	clone.c	FUNCTION_6	IF_1	IF_2
0xcb8	            0x7416	                            je 0x4000d10	       326	clone.c	FUNCTION_6	IF_1	IF_2
0xcba	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       327	clone.c	FUNCTION_6	IF_1	CALL_2
0xcbe	          0x4889c6	                            mov rsi, rax	       327	clone.c	FUNCTION_6	IF_1	CALL_2
0xcc1	      0xbf00000000	                              mov edi, 0	       327	clone.c	FUNCTION_6	IF_1	CALL_2
0xcc6	      0xb800000000	                              mov eax, 0	       327	clone.c	FUNCTION_6	IF_1	CALL_2
0xccb	      0xe800000000	                          call 0x4000d10	       327	clone.c	FUNCTION_6	IF_1	CALL_2
0xcd0	        0x4c8b65c0	             mov r12, qword [rbp - 0x40]	       329	clone.c	FUNCTION_6	IF_1	ELSE_1	CALL_3
0xcd4	        0x488b4598	             mov rax, qword [rbp - 0x68]	       329	clone.c	FUNCTION_6	IF_1	ELSE_1	CALL_3
0xcd8	          0x488b18	                    mov rbx, qword [rax]	       329	clone.c	FUNCTION_6	IF_1	ELSE_1	CALL_3
0xcdb	      0xbf00000000	                              mov edi, 0	       329	clone.c	FUNCTION_6	IF_1	ELSE_1	CALL_3
0xce0	      0xe816f6ffff	                               call sym.	       329	clone.c	FUNCTION_6	IF_1	ELSE_1	CALL_3
0xce5	          0x4889c6	                            mov rsi, rax	       329	clone.c	FUNCTION_6	IF_1	ELSE_1	CALL_3
0xce8	    0x488b05000000	            mov rax, qword [0x04000d2f] 	       329	clone.c	FUNCTION_6	IF_1	ELSE_1	CALL_3
0xcef	          0x4c89e1	                            mov rcx, r12	       329	clone.c	FUNCTION_6	IF_1	ELSE_1	CALL_3
0xcf2	          0x4889da	                            mov rdx, rbx	       329	clone.c	FUNCTION_6	IF_1	ELSE_1	CALL_3
0xcf5	          0x4889c7	                            mov rdi, rax	       329	clone.c	FUNCTION_6	IF_1	ELSE_1	CALL_3
0xcf8	      0xb800000000	                              mov eax, 0	       329	clone.c	FUNCTION_6	IF_1	ELSE_1	CALL_3
0xcfd	      0xe800000000	                          call 0x4000d42	       329	clone.c	FUNCTION_6	IF_1	ELSE_1	CALL_3
0xd02	            0xeb4a	                           jmp 0x4000d8e	       329	clone.c	FUNCTION_6	IF_1	ELSE_1	CALL_3
0xd04	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       333	clone.c	FUNCTION_6	ELSE_2
0xd0c	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       333	clone.c	FUNCTION_6	ELSE_2
0xd14	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       333	clone.c	FUNCTION_6	ELSE_2
0xd1c	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       334	clone.c	FUNCTION_6	ELSE_2	CALL_5
0xd20	        0x488d45d0	                   lea rax, [rbp - 0x30]	       334	clone.c	FUNCTION_6	ELSE_2	CALL_5
0xd24	      0xbe00000000	                              mov esi, 0	       334	clone.c	FUNCTION_6	ELSE_2	CALL_5
0xd29	          0x4889c7	                            mov rdi, rax	       334	clone.c	FUNCTION_6	ELSE_2	CALL_5
0xd2c	      0xb800000000	                              mov eax, 0	       334	clone.c	FUNCTION_6	ELSE_2	CALL_5
0xd31	      0xe800000000	                          call 0x4000d76	       334	clone.c	FUNCTION_6	ELSE_2	CALL_5
0xd36	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       335	clone.c	FUNCTION_6	ELSE_2	CALL_6
0xd3a	          0x4889c7	                            mov rdi, rax	       335	clone.c	FUNCTION_6	ELSE_2	CALL_6
0xd3d	      0xe800000000	                          call 0x4000d82	       335	clone.c	FUNCTION_6	ELSE_2	CALL_6
0xd42	        0x488d45d0	                   lea rax, [rbp - 0x30]	       336	clone.c	FUNCTION_6	ELSE_2	CALL_7
0xd46	          0x4889c7	                            mov rdi, rax	       336	clone.c	FUNCTION_6	ELSE_2	CALL_7
0xd49	      0xe800000000	                          call 0x4000d8e	       336	clone.c	FUNCTION_6	ELSE_2	CALL_7
0xd4e	        0x488d45b0	                   lea rax, [rbp - 0x50]	       339	clone.c	FUNCTION_6	CALL_8
0xd52	          0x4889c7	                            mov rdi, rax	       339	clone.c	FUNCTION_6	CALL_8
0xd55	      0xe800000000	                          call 0x4000d9a	       339	clone.c	FUNCTION_6	CALL_8
0xd5a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       340	clone.c	FUNCTION_6	CALL_9
0xd5e	          0x4889c7	                            mov rdi, rax	       340	clone.c	FUNCTION_6	CALL_9
0xd61	      0xe800000000	                          call 0x4000da6	       340	clone.c	FUNCTION_6	CALL_9
0xd66	      0xb800000000	                              mov eax, 0	       341	clone.c	FUNCTION_6
0xd6b	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       342	clone.c	FUNCTION_6
0xd6f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       342	clone.c	FUNCTION_6
0xd78	            0x7405	                            je 0x4000dbf	       342	clone.c	FUNCTION_6
0xd7a	      0xe800000000	                          call 0x4000dbf	       342	clone.c	FUNCTION_6
0xd7f	        0x4883c460	                           add rsp, 0x60	       342	clone.c	FUNCTION_6
0xd83	              0x5b	                                 pop rbx	       342	clone.c	FUNCTION_6
0xd84	            0x415c	                                 pop r12	       342	clone.c	FUNCTION_6
0xd86	              0x5d	                                 pop rbp	       342	clone.c	FUNCTION_6
0xd87	              0xc3	                                     ret	       342	clone.c	FUNCTION_6
