update_index_from_diff	WHILE,0:SWITCH,0:functions,0:DO,0:FOR,1:CALL,7:ELSE,0:IF,3	91
0x54c	              0x55	                                push rbp	       123	reset.c	FUNCTION_4
0x54d	          0x4889e5	                            mov rbp, rsp	       123	reset.c	FUNCTION_4
0x550	              0x53	                                push rbx	       123	reset.c	FUNCTION_4
0x551	        0x4883ec48	                           sub rsp, 0x48	       123	reset.c	FUNCTION_4
0x555	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       123	reset.c	FUNCTION_4
0x559	        0x488975c0	             mov qword [rbp - 0x40], rsi	       123	reset.c	FUNCTION_4
0x55d	        0x488955b8	             mov qword [rbp - 0x48], rdx	       123	reset.c	FUNCTION_4
0x561	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       125	reset.c	FUNCTION_4
0x565	            0x8b00	                    mov eax, dword [rax]	       125	reset.c	FUNCTION_4
0x567	          0x8945d8	             mov dword [rbp - 0x28], eax	       125	reset.c	FUNCTION_4
0x56a	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       127	reset.c	FUNCTION_4	FOR_1
0x571	      0xe907010000	                           jmp 0x40006bd	       127	reset.c	FUNCTION_4	FOR_1
0x576	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       128	reset.c	FUNCTION_4	FOR_1
0x57a	          0x488b00	                    mov rax, qword [rax]	       128	reset.c	FUNCTION_4	FOR_1
0x57d	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	       128	reset.c	FUNCTION_4	FOR_1
0x580	          0x4863d2	                         movsxd rdx, edx	       128	reset.c	FUNCTION_4	FOR_1
0x583	        0x48c1e203	                              shl rdx, 3	       128	reset.c	FUNCTION_4	FOR_1
0x587	          0x4801d0	                            add rax, rdx	       128	reset.c	FUNCTION_4	FOR_1
0x58a	          0x488b00	                    mov rax, qword [rax]	       128	reset.c	FUNCTION_4	FOR_1
0x58d	          0x488b00	                    mov rax, qword [rax]	       128	reset.c	FUNCTION_4	FOR_1
0x590	        0x488945e0	             mov qword [rbp - 0x20], rax	       128	reset.c	FUNCTION_4	FOR_1
0x594	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       129	reset.c	FUNCTION_4	FOR_1	CALL_1
0x598	         0xfb74040	           movzx eax, word [rax + 0x40] 	       129	reset.c	FUNCTION_4	FOR_1	CALL_1
0x59c	          0x6685c0	                             test ax, ax	       129	reset.c	FUNCTION_4	FOR_1	CALL_1
0x59f	            0x7410	                            je 0x40005f1	       129	reset.c	FUNCTION_4	FOR_1	CALL_1
0x5a1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       129	reset.c	FUNCTION_4	FOR_1	CALL_1
0x5a5	          0x4889c7	                            mov rdi, rax	       129	reset.c	FUNCTION_4	FOR_1	CALL_1
0x5a8	      0xe84efbffff	                    call sym.is_null_oid	       129	reset.c	FUNCTION_4	FOR_1	CALL_1
0x5ad	            0x85c0	                           test eax, eax	       129	reset.c	FUNCTION_4	FOR_1	CALL_1
0x5af	            0x7407	                            je 0x40005f8	       129	reset.c	FUNCTION_4	FOR_1	CALL_1
0x5b1	      0xb801000000	                              mov eax, 1	       129	reset.c	FUNCTION_4	FOR_1	CALL_1
0x5b6	            0xeb05	                           jmp 0x40005fd	       129	reset.c	FUNCTION_4	FOR_1	CALL_1
0x5b8	      0xb800000000	                              mov eax, 0	       129	reset.c	FUNCTION_4	FOR_1	CALL_1
0x5bd	          0x8945dc	             mov dword [rbp - 0x24], eax	       129	reset.c	FUNCTION_4	FOR_1	CALL_1
0x5c0	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       132	reset.c	FUNCTION_4	FOR_1	IF_1
0x5c4	            0x7420	                            je 0x4000626	       132	reset.c	FUNCTION_4	FOR_1	IF_1
0x5c6	        0x837dd800	               cmp dword [rbp - 0x28], 0	       132	reset.c	FUNCTION_4	FOR_1	IF_1
0x5ca	            0x751a	                           jne 0x4000626	       132	reset.c	FUNCTION_4	FOR_1	IF_1
0x5cc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       133	reset.c	FUNCTION_4	FOR_1	IF_1	CALL_2
0x5d0	        0x488b4018	            mov rax, qword [rax + 0x18] 	       133	reset.c	FUNCTION_4	FOR_1	IF_1	CALL_2
0x5d4	          0x4889c6	                            mov rsi, rax	       133	reset.c	FUNCTION_4	FOR_1	IF_1	CALL_2
0x5d7	      0xbf00000000	                              mov edi, 0	       133	reset.c	FUNCTION_4	FOR_1	IF_1	CALL_2
0x5dc	      0xe800000000	                          call 0x4000621	       133	reset.c	FUNCTION_4	FOR_1	IF_1	CALL_2
0x5e1	      0xe993000000	                           jmp 0x40006b9	       134	reset.c	FUNCTION_4	FOR_1	IF_1
0x5e6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       137	reset.c	FUNCTION_4	FOR_1	CALL_3
0x5ea	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       137	reset.c	FUNCTION_4	FOR_1	CALL_3
0x5ee	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       137	reset.c	FUNCTION_4	FOR_1	CALL_3
0x5f2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       137	reset.c	FUNCTION_4	FOR_1	CALL_3
0x5f6	         0xfb74040	           movzx eax, word [rax + 0x40] 	       137	reset.c	FUNCTION_4	FOR_1	CALL_3
0x5fa	           0xfb7c0	                           movzx eax, ax	       137	reset.c	FUNCTION_4	FOR_1	CALL_3
0x5fd	    0x41b800000000	                              mov r8d, 0	       137	reset.c	FUNCTION_4	FOR_1	CALL_3
0x603	      0xb900000000	                              mov ecx, 0	       137	reset.c	FUNCTION_4	FOR_1	CALL_3
0x608	            0x89c7	                            mov edi, eax	       137	reset.c	FUNCTION_4	FOR_1	CALL_3
0x60a	      0xe800000000	                          call 0x400064f	       137	reset.c	FUNCTION_4	FOR_1	CALL_3
0x60f	        0x488945e8	             mov qword [rbp - 0x18], rax	       137	reset.c	FUNCTION_4	FOR_1	CALL_3
0x613	      0x48837de800	               cmp qword [rbp - 0x18], 0	       139	reset.c	FUNCTION_4	FOR_1	IF_2
0x618	            0x7522	                           jne 0x400067c	       139	reset.c	FUNCTION_4	FOR_1	IF_2
0x61a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       140	reset.c	FUNCTION_4	FOR_1	IF_2	CALL_5
0x61e	        0x488b5818	            mov rbx, qword [rax + 0x18] 	       140	reset.c	FUNCTION_4	FOR_1	IF_2	CALL_5
0x622	      0xbf00000000	                              mov edi, 0	       140	reset.c	FUNCTION_4	FOR_1	IF_2	CALL_5
0x627	      0xe879faffff	                               call sym.	       140	reset.c	FUNCTION_4	FOR_1	IF_2	CALL_5
0x62c	          0x4889de	                            mov rsi, rbx	       140	reset.c	FUNCTION_4	FOR_1	IF_2	CALL_5
0x62f	          0x4889c7	                            mov rdi, rax	       140	reset.c	FUNCTION_4	FOR_1	IF_2	CALL_5
0x632	      0xb800000000	                              mov eax, 0	       140	reset.c	FUNCTION_4	FOR_1	IF_2	CALL_5
0x637	      0xe800000000	                          call 0x400067c	       140	reset.c	FUNCTION_4	FOR_1	IF_2	CALL_5
0x63c	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       142	reset.c	FUNCTION_4	FOR_1	IF_3
0x640	            0x7421	                            je 0x40006a3	       142	reset.c	FUNCTION_4	FOR_1	IF_3
0x642	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       143	reset.c	FUNCTION_4	FOR_1	IF_3
0x646	          0x8b4038	            mov eax, dword [rax + 0x38] 	       143	reset.c	FUNCTION_4	FOR_1	IF_3
0x649	       0xd00000020	                      or eax, 0x20000000	       143	reset.c	FUNCTION_4	FOR_1	IF_3
0x64e	            0x89c2	                            mov edx, eax	       143	reset.c	FUNCTION_4	FOR_1	IF_3
0x650	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       143	reset.c	FUNCTION_4	FOR_1	IF_3
0x654	          0x895038	             mov dword [rax + 0x38], edx	       143	reset.c	FUNCTION_4	FOR_1	IF_3
0x657	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       144	reset.c	FUNCTION_4	FOR_1	IF_3	CALL_6
0x65b	          0x4889c7	                            mov rdi, rax	       144	reset.c	FUNCTION_4	FOR_1	IF_3	CALL_6
0x65e	      0xe800000000	                          call 0x40006a3	       144	reset.c	FUNCTION_4	FOR_1	IF_3	CALL_6
0x663	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       146	reset.c	FUNCTION_4	FOR_1	CALL_7
0x667	      0xba03000000	                              mov edx, 3	       146	reset.c	FUNCTION_4	FOR_1	CALL_7
0x66c	          0x4889c6	                            mov rsi, rax	       146	reset.c	FUNCTION_4	FOR_1	CALL_7
0x66f	      0xbf00000000	                              mov edi, 0	       146	reset.c	FUNCTION_4	FOR_1	CALL_7
0x674	      0xe800000000	                          call 0x40006b9	       146	reset.c	FUNCTION_4	FOR_1	CALL_7
0x679	        0x8345d401	               add dword [rbp - 0x2c], 1	       127	reset.c	FUNCTION_4	FOR_1
0x67d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       127	reset.c	FUNCTION_4	FOR_1
0x681	          0x8b400c	              mov eax, dword [rax + 0xc]	       127	reset.c	FUNCTION_4	FOR_1
0x684	          0x3b45d4	             cmp eax, dword [rbp - 0x2c]	       127	reset.c	FUNCTION_4	FOR_1
0x687	     0xf8fe9feffff	                            jg 0x40005b6	       127	reset.c	FUNCTION_4	FOR_1
0x68d	              0x90	                                     nop	       148	reset.c	FUNCTION_4
0x68e	        0x4883c448	                           add rsp, 0x48	       148	reset.c	FUNCTION_4
0x692	              0x5b	                                 pop rbx	       148	reset.c	FUNCTION_4
0x693	              0x5d	                                 pop rbp	       148	reset.c	FUNCTION_4
0x694	              0xc3	                                     ret	       148	reset.c	FUNCTION_4
die_if_unmerged_cache	WHILE,0:SWITCH,0:functions,0:DO,0:FOR,0:CALL,5:ELSE,0:IF,1	29
0x835	              0x55	                                push rbp	       187	reset.c	FUNCTION_7
0x836	          0x4889e5	                            mov rbp, rsp	       187	reset.c	FUNCTION_7
0x839	              0x53	                                push rbx	       187	reset.c	FUNCTION_7
0x83a	        0x4883ec18	                           sub rsp, 0x18	       187	reset.c	FUNCTION_7
0x83e	          0x897dec	             mov dword [rbp - 0x14], edi	       187	reset.c	FUNCTION_7
0x841	      0xe82df9ffff	                       call sym.is_merge	       188	reset.c	FUNCTION_7	IF_1	CALL_2
0x846	            0x85c0	                           test eax, eax	       188	reset.c	FUNCTION_7	IF_1	CALL_2
0x848	            0x750e	                           jne 0x4000898	       188	reset.c	FUNCTION_7	IF_1	CALL_2
0x84a	      0xbf00000000	                              mov edi, 0	       188	reset.c	FUNCTION_7	IF_1	CALL_2
0x84f	      0xe800000000	                          call 0x4000894	       188	reset.c	FUNCTION_7	IF_1	CALL_2
0x854	            0x85c0	                           test eax, eax	       188	reset.c	FUNCTION_7	IF_1	CALL_2
0x856	            0x7432	                            je 0x40008ca	       188	reset.c	FUNCTION_7	IF_1	CALL_2
0x858	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       189	reset.c	FUNCTION_7	IF_1	CALL_4
0x85b	            0x4898	                                    cdqe	       189	reset.c	FUNCTION_7	IF_1	CALL_4
0x85d	    0x488b04c50000	                  mov rax, qword [rax*8]	       189	reset.c	FUNCTION_7	IF_1	CALL_4
0x865	          0x4889c7	                            mov rdi, rax	       189	reset.c	FUNCTION_7	IF_1	CALL_4
0x868	      0xe838f8ffff	                               call sym.	       189	reset.c	FUNCTION_7	IF_1	CALL_4
0x86d	          0x4889c3	                            mov rbx, rax	       189	reset.c	FUNCTION_7	IF_1	CALL_4
0x870	      0xbf00000000	                              mov edi, 0	       189	reset.c	FUNCTION_7	IF_1	CALL_4
0x875	      0xe82bf8ffff	                               call sym.	       189	reset.c	FUNCTION_7	IF_1	CALL_4
0x87a	          0x4889de	                            mov rsi, rbx	       189	reset.c	FUNCTION_7	IF_1	CALL_4
0x87d	          0x4889c7	                            mov rdi, rax	       189	reset.c	FUNCTION_7	IF_1	CALL_4
0x880	      0xb800000000	                              mov eax, 0	       189	reset.c	FUNCTION_7	IF_1	CALL_4
0x885	      0xe800000000	                          call 0x40008ca	       189	reset.c	FUNCTION_7	IF_1	CALL_4
0x88a	              0x90	                                     nop	       192	reset.c	FUNCTION_7
0x88b	        0x4883c418	                           add rsp, 0x18	       192	reset.c	FUNCTION_7
0x88f	              0x5b	                                 pop rbx	       192	reset.c	FUNCTION_7
0x890	              0x5d	                                 pop rbp	       192	reset.c	FUNCTION_7
0x891	              0xc3	                                     ret	       192	reset.c	FUNCTION_7
is_merge	WHILE,0:SWITCH,0:functions,0:DO,0:FOR,0:CALL,2:ELSE,0:IF,0	11
0x173	              0x55	                                push rbp	        41	reset.c	FUNCTION_1
0x174	          0x4889e5	                            mov rbp, rsp	        41	reset.c	FUNCTION_1
0x177	      0xe800000000	                          call 0x40001bc	        42	reset.c	FUNCTION_1	CALL_2
0x17c	      0xbe00000000	                              mov esi, 0	        42	reset.c	FUNCTION_1	CALL_2
0x181	          0x4889c7	                            mov rdi, rax	        42	reset.c	FUNCTION_1	CALL_2
0x184	      0xe800000000	                          call 0x40001c9	        42	reset.c	FUNCTION_1	CALL_2
0x189	            0x85c0	                           test eax, eax	        42	reset.c	FUNCTION_1	CALL_2
0x18b	           0xf94c0	                                 sete al	        42	reset.c	FUNCTION_1	CALL_2
0x18e	           0xfb6c0	                           movzx eax, al	        42	reset.c	FUNCTION_1	CALL_2
0x191	              0x5d	                                 pop rbp	        43	reset.c	FUNCTION_1
0x192	              0xc3	                                     ret	        43	reset.c	FUNCTION_1
_	WHILE,0:SWITCH,0:functions,0:DO,0:FOR,0:CALL,2:ELSE,0:IF,1	15
0xa5	              0x55	                                push rbp	        51	gettext.h	FUNCTION_14
0xa6	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_14
0xa9	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_14
0xad	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_14
0xb1	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_14	IF_1
0xb5	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_14	IF_1
0xb8	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_14	IF_1
0xba	            0x7507	                           jne 0x4000103	        52	gettext.h	FUNCTION_14	IF_1
0xbc	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_14	IF_1
0xc1	            0xeb0c	                           jmp 0x400010f	        53	gettext.h	FUNCTION_14	IF_1
0xc3	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_14	CALL_2
0xc7	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_14	CALL_2
0xca	      0xe800000000	                          call 0x400010f	        54	gettext.h	FUNCTION_14	CALL_2
0xcf	              0xc9	                                   leave	        55	gettext.h	FUNCTION_14
0xd0	              0xc3	                                     ret	        55	gettext.h	FUNCTION_14
cmd_reset	WHILE,0:SWITCH,0:functions,0:DO,0:FOR,0:CALL,70:ELSE,4:IF,26	410
0xbf7	              0x55	                                push rbp	       281	reset.c	FUNCTION_11
0xbf8	          0x4889e5	                            mov rbp, rsp	       281	reset.c	FUNCTION_11
0xbfb	              0x53	                                push rbx	       281	reset.c	FUNCTION_11
0xbfc	    0x4881ec380300	                          sub rsp, 0x338	       281	reset.c	FUNCTION_11
0xc03	    0x89bddcfcffff	            mov dword [rbp - 0x324], edi	       281	reset.c	FUNCTION_11
0xc09	    0x4889b5d0fcff	            mov qword [rbp - 0x330], rsi	       281	reset.c	FUNCTION_11
0xc10	    0x488995c8fcff	            mov qword [rbp - 0x338], rdx	       281	reset.c	FUNCTION_11
0xc17	    0x64488b042528	                mov rax, qword fs:[0x28]	       281	reset.c	FUNCTION_11
0xc20	        0x488945e8	             mov qword [rbp - 0x18], rax	       281	reset.c	FUNCTION_11
0xc24	            0x31c0	                            xor eax, eax	       281	reset.c	FUNCTION_11
0xc26	    0xc785e0fcffff	              mov dword [rbp - 0x320], 5	       282	reset.c	FUNCTION_11
0xc30	    0xc785f0fcffff	              mov dword [rbp - 0x310], 0	       282	reset.c	FUNCTION_11
0xc3a	    0xc785e4fcffff	              mov dword [rbp - 0x31c], 0	       282	reset.c	FUNCTION_11
0xc44	    0xc785e8fcffff	              mov dword [rbp - 0x318], 0	       283	reset.c	FUNCTION_11
0xc4e	    0xc785ecfcffff	              mov dword [rbp - 0x314], 0	       287	reset.c	FUNCTION_11
0xc58	    0x488d9560fdff	                  lea rdx, [rbp - 0x2a0]	       288	reset.c	FUNCTION_11
0xc5f	      0xb800000000	                              mov eax, 0	       288	reset.c	FUNCTION_11
0xc64	      0xb950000000	                           mov ecx, 0x50	       288	reset.c	FUNCTION_11
0xc69	          0x4889d7	                            mov rdi, rdx	       288	reset.c	FUNCTION_11
0xc6c	          0xf348ab	              rep stosq qword [rdi], rax	       288	reset.c	FUNCTION_11
0xc6f	    0xc78560fdffff	              mov dword [rbp - 0x2a0], 6	       288	reset.c	FUNCTION_11
0xc79	    0xc78564fdffff	          mov dword [rbp - 0x29c], 0x71 	       288	reset.c	FUNCTION_11
0xc83	    0x48c78568fdff	              mov qword [rbp - 0x298], 0	       288	reset.c	FUNCTION_11
0xc8e	    0x488d85e4fcff	                  lea rax, [rbp - 0x31c]	       288	reset.c	FUNCTION_11
0xc95	    0x48898570fdff	            mov qword [rbp - 0x290], rax	       288	reset.c	FUNCTION_11
0xc9c	    0x48c78580fdff	              mov qword [rbp - 0x280], 0	       288	reset.c	FUNCTION_11
0xca7	    0xc78588fdffff	              mov dword [rbp - 0x278], 2	       288	reset.c	FUNCTION_11
0xcb1	    0xc785a0fdffff	              mov dword [rbp - 0x260], 7	       288	reset.c	FUNCTION_11
0xcbb	    0x48c785a8fdff	              mov qword [rbp - 0x258], 0	       288	reset.c	FUNCTION_11
0xcc6	    0x488d85e0fcff	                  lea rax, [rbp - 0x320]	       288	reset.c	FUNCTION_11
0xccd	    0x488985b0fdff	            mov qword [rbp - 0x250], rax	       288	reset.c	FUNCTION_11
0xcd4	    0x48c785c0fdff	              mov qword [rbp - 0x240], 0	       288	reset.c	FUNCTION_11
0xcdf	    0xc785c8fdffff	              mov dword [rbp - 0x238], 2	       288	reset.c	FUNCTION_11
0xce9	    0xc785e0fdffff	              mov dword [rbp - 0x220], 7	       288	reset.c	FUNCTION_11
0xcf3	    0x48c785e8fdff	              mov qword [rbp - 0x218], 0	       288	reset.c	FUNCTION_11
0xcfe	    0x488d85e0fcff	                  lea rax, [rbp - 0x320]	       288	reset.c	FUNCTION_11
0xd05	    0x488985f0fdff	            mov qword [rbp - 0x210], rax	       288	reset.c	FUNCTION_11
0xd0c	    0x48c78500feff	              mov qword [rbp - 0x200], 0	       288	reset.c	FUNCTION_11
0xd17	    0xc78508feffff	              mov dword [rbp - 0x1f8], 2	       288	reset.c	FUNCTION_11
0xd21	    0x48c78518feff	              mov qword [rbp - 0x1e8], 1	       288	reset.c	FUNCTION_11
0xd2c	    0xc78520feffff	              mov dword [rbp - 0x1e0], 7	       288	reset.c	FUNCTION_11
0xd36	    0x48c78528feff	              mov qword [rbp - 0x1d8], 0	       288	reset.c	FUNCTION_11
0xd41	    0x488d85e0fcff	                  lea rax, [rbp - 0x320]	       288	reset.c	FUNCTION_11
0xd48	    0x48898530feff	            mov qword [rbp - 0x1d0], rax	       288	reset.c	FUNCTION_11
0xd4f	    0x48c78540feff	              mov qword [rbp - 0x1c0], 0	       288	reset.c	FUNCTION_11
0xd5a	    0xc78548feffff	              mov dword [rbp - 0x1b8], 2	       288	reset.c	FUNCTION_11
0xd64	    0x48c78558feff	              mov qword [rbp - 0x1a8], 2	       288	reset.c	FUNCTION_11
0xd6f	    0xc78560feffff	              mov dword [rbp - 0x1a0], 7	       288	reset.c	FUNCTION_11
0xd79	    0x48c78568feff	              mov qword [rbp - 0x198], 0	       288	reset.c	FUNCTION_11
0xd84	    0x488d85e0fcff	                  lea rax, [rbp - 0x320]	       288	reset.c	FUNCTION_11
0xd8b	    0x48898570feff	            mov qword [rbp - 0x190], rax	       288	reset.c	FUNCTION_11
0xd92	    0x48c78580feff	              mov qword [rbp - 0x180], 0	       288	reset.c	FUNCTION_11
0xd9d	    0xc78588feffff	              mov dword [rbp - 0x178], 2	       288	reset.c	FUNCTION_11
0xda7	    0x48c78598feff	              mov qword [rbp - 0x168], 3	       288	reset.c	FUNCTION_11
0xdb2	    0xc785a0feffff	              mov dword [rbp - 0x160], 7	       288	reset.c	FUNCTION_11
0xdbc	    0x48c785a8feff	              mov qword [rbp - 0x158], 0	       288	reset.c	FUNCTION_11
0xdc7	    0x488d85e0fcff	                  lea rax, [rbp - 0x320]	       288	reset.c	FUNCTION_11
0xdce	    0x488985b0feff	            mov qword [rbp - 0x150], rax	       288	reset.c	FUNCTION_11
0xdd5	    0x48c785c0feff	              mov qword [rbp - 0x140], 0	       288	reset.c	FUNCTION_11
0xde0	    0xc785c8feffff	              mov dword [rbp - 0x138], 2	       288	reset.c	FUNCTION_11
0xdea	    0x48c785d8feff	              mov qword [rbp - 0x128], 4	       288	reset.c	FUNCTION_11
0xdf5	    0xc785e0feffff	           mov dword [rbp - 0x120], 0xc 	       288	reset.c	FUNCTION_11
0xdff	    0x48c785e8feff	              mov qword [rbp - 0x118], 0	       288	reset.c	FUNCTION_11
0xe0a	    0x48c785f8feff	              mov qword [rbp - 0x108], 0	       288	reset.c	FUNCTION_11
0xe15	    0x48c78500ffff	              mov qword [rbp - 0x100], 0	       288	reset.c	FUNCTION_11
0xe20	    0xc78508ffffff	               mov dword [rbp - 0xf8], 1	       288	reset.c	FUNCTION_11
0xe2a	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	       288	reset.c	FUNCTION_11
0xe35	    0xc78520ffffff	               mov dword [rbp - 0xe0], 7	       288	reset.c	FUNCTION_11
0xe3f	    0xc78524ffffff	           mov dword [rbp - 0xdc], 0x70 	       288	reset.c	FUNCTION_11
0xe49	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	       288	reset.c	FUNCTION_11
0xe54	    0x488d85e8fcff	                  lea rax, [rbp - 0x318]	       288	reset.c	FUNCTION_11
0xe5b	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	       288	reset.c	FUNCTION_11
0xe62	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	       288	reset.c	FUNCTION_11
0xe6d	    0xc78548ffffff	               mov dword [rbp - 0xb8], 2	       288	reset.c	FUNCTION_11
0xe77	    0x48c78558ffff	               mov qword [rbp - 0xa8], 1	       288	reset.c	FUNCTION_11
0xe82	    0xc78560ffffff	               mov dword [rbp - 0xa0], 7	       288	reset.c	FUNCTION_11
0xe8c	    0xc78564ffffff	           mov dword [rbp - 0x9c], 0x4e 	       288	reset.c	FUNCTION_11
0xe96	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	       288	reset.c	FUNCTION_11
0xea1	    0x488d85ecfcff	                  lea rax, [rbp - 0x314]	       288	reset.c	FUNCTION_11
0xea8	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       288	reset.c	FUNCTION_11
0xeaf	    0x48c745800000	               mov qword [rbp - 0x80], 0	       288	reset.c	FUNCTION_11
0xeb7	    0xc74588020000	               mov dword [rbp - 0x78], 2	       288	reset.c	FUNCTION_11
0xebe	    0x48c745980100	               mov qword [rbp - 0x68], 1	       288	reset.c	FUNCTION_11
0xec6	      0xbe00000000	                              mov esi, 0	       308	reset.c	FUNCTION_11	CALL_18
0xecb	      0xbf00000000	                              mov edi, 0	       308	reset.c	FUNCTION_11	CALL_18
0xed0	      0xe800000000	                          call 0x4000f15	       308	reset.c	FUNCTION_11	CALL_18
0xed5	    0x488d8d60fdff	                  lea rcx, [rbp - 0x2a0]	       310	reset.c	FUNCTION_11	CALL_19
0xedc	    0x488b95c8fcff	            mov rdx, qword [rbp - 0x338]	       310	reset.c	FUNCTION_11	CALL_19
0xee3	    0x488bb5d0fcff	            mov rsi, qword [rbp - 0x330]	       310	reset.c	FUNCTION_11	CALL_19
0xeea	    0x8b85dcfcffff	            mov eax, dword [rbp - 0x324]	       310	reset.c	FUNCTION_11	CALL_19
0xef0	    0x41b901000000	                              mov r9d, 1	       310	reset.c	FUNCTION_11	CALL_19
0xef6	    0x41b800000000	                              mov r8d, 0	       310	reset.c	FUNCTION_11	CALL_19
0xefc	            0x89c7	                            mov edi, eax	       310	reset.c	FUNCTION_11	CALL_19
0xefe	      0xe800000000	                          call 0x4000f43	       310	reset.c	FUNCTION_11	CALL_19
0xf03	    0x8985dcfcffff	            mov dword [rbp - 0x324], eax	       310	reset.c	FUNCTION_11	CALL_19
0xf09	    0x8b8de8fcffff	            mov ecx, dword [rbp - 0x318]	       312	reset.c	FUNCTION_11	CALL_20
0xf0f	    0x488dbd08fdff	                  lea rdi, [rbp - 0x2f8]	       312	reset.c	FUNCTION_11	CALL_20
0xf16	    0x488b95c8fcff	            mov rdx, qword [rbp - 0x338]	       312	reset.c	FUNCTION_11	CALL_20
0xf1d	    0x488bb5d0fcff	            mov rsi, qword [rbp - 0x330]	       312	reset.c	FUNCTION_11	CALL_20
0xf24	    0x488d8520fdff	                  lea rax, [rbp - 0x2e0]	       312	reset.c	FUNCTION_11	CALL_20
0xf2b	          0x4989f8	                             mov r8, rdi	       312	reset.c	FUNCTION_11	CALL_20
0xf2e	          0x4889c7	                            mov rdi, rax	       312	reset.c	FUNCTION_11	CALL_20
0xf31	      0xe85cf9ffff	                     call sym.parse_args	       312	reset.c	FUNCTION_11	CALL_20
0xf36	    0x488b8508fdff	            mov rax, qword [rbp - 0x2f8]	       314	reset.c	FUNCTION_11	CALL_22
0xf3d	      0xbe00000000	                              mov esi, 0	       314	reset.c	FUNCTION_11	CALL_22
0xf42	          0x4889c7	                            mov rdi, rax	       314	reset.c	FUNCTION_11	CALL_22
0xf45	      0xe800000000	                          call 0x4000f8a	       314	reset.c	FUNCTION_11	CALL_22
0xf4a	            0x85c0	                           test eax, eax	       314	reset.c	FUNCTION_11	CALL_22
0xf4c	            0x751f	                           jne 0x4000fad	       314	reset.c	FUNCTION_11	CALL_22
0xf4e	    0x488d8540fdff	                  lea rax, [rbp - 0x2c0]	       314	reset.c	FUNCTION_11	CALL_22
0xf55	          0x4889c6	                            mov rsi, rax	       314	reset.c	FUNCTION_11	CALL_22
0xf58	      0xbf00000000	                              mov edi, 0	       314	reset.c	FUNCTION_11	CALL_22
0xf5d	      0xe800000000	                          call 0x4000fa2	       314	reset.c	FUNCTION_11	CALL_22
0xf62	            0x85c0	                           test eax, eax	       314	reset.c	FUNCTION_11	CALL_22
0xf64	            0x7407	                            je 0x4000fad	       314	reset.c	FUNCTION_11	CALL_22
0xf66	      0xb801000000	                              mov eax, 1	       314	reset.c	FUNCTION_11	CALL_22
0xf6b	            0xeb05	                           jmp 0x4000fb2	       314	reset.c	FUNCTION_11	CALL_22
0xf6d	      0xb800000000	                              mov eax, 0	       314	reset.c	FUNCTION_11	CALL_22
0xf72	    0x8985f8fcffff	            mov dword [rbp - 0x308], eax	       314	reset.c	FUNCTION_11	CALL_22
0xf78	    0x83bdf8fcffff	              cmp dword [rbp - 0x308], 0	       315	reset.c	FUNCTION_11	IF_1
0xf7f	            0x7419	                            je 0x4000fda	       315	reset.c	FUNCTION_11	IF_1
0xf81	    0x488d8540fdff	                  lea rax, [rbp - 0x2c0]	       317	reset.c	FUNCTION_11	IF_1	CALL_23
0xf88	      0xbe00000000	                              mov esi, 0	       317	reset.c	FUNCTION_11	IF_1	CALL_23
0xf8d	          0x4889c7	                            mov rdi, rax	       317	reset.c	FUNCTION_11	IF_1	CALL_23
0xf90	      0xe88df1ffff	                        call sym.hashcpy	       317	reset.c	FUNCTION_11	IF_1	CALL_23
0xf95	      0xe94b010000	                           jmp 0x4001125	       317	reset.c	FUNCTION_11	IF_1	CALL_23
0xf9a	    0x8b8520fdffff	            mov eax, dword [rbp - 0x2e0]	       318	reset.c	FUNCTION_11	ELSE_1	IF_2
0xfa0	            0x85c0	                           test eax, eax	       318	reset.c	FUNCTION_11	ELSE_1	IF_2
0xfa2	     0xf85a1000000	                           jne 0x4001089	       318	reset.c	FUNCTION_11	ELSE_1	IF_2
0xfa8	    0x488b8508fdff	            mov rax, qword [rbp - 0x2f8]	       320	reset.c	FUNCTION_11	ELSE_1	IF_2	IF_3	CALL_24
0xfaf	    0x488d9540fdff	                  lea rdx, [rbp - 0x2c0]	       320	reset.c	FUNCTION_11	ELSE_1	IF_2	IF_3	CALL_24
0xfb6	          0x4889d6	                            mov rsi, rdx	       320	reset.c	FUNCTION_11	ELSE_1	IF_2	IF_3	CALL_24
0xfb9	          0x4889c7	                            mov rdi, rax	       320	reset.c	FUNCTION_11	ELSE_1	IF_2	IF_3	CALL_24
0xfbc	      0xe800000000	                          call 0x4001001	       320	reset.c	FUNCTION_11	ELSE_1	IF_2	IF_3	CALL_24
0xfc1	            0x85c0	                           test eax, eax	       320	reset.c	FUNCTION_11	ELSE_1	IF_2	IF_3	CALL_24
0xfc3	            0x7421	                            je 0x4001026	       320	reset.c	FUNCTION_11	ELSE_1	IF_2	IF_3	CALL_24
0xfc5	    0x488b9d08fdff	            mov rbx, qword [rbp - 0x2f8]	       321	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_26
0xfcc	      0xbf00000000	                              mov edi, 0	       321	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_26
0xfd1	      0xe8cff0ffff	                               call sym.	       321	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_26
0xfd6	          0x4889de	                            mov rsi, rbx	       321	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_26
0xfd9	          0x4889c7	                            mov rdi, rax	       321	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_26
0xfdc	      0xb800000000	                              mov eax, 0	       321	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_26
0xfe1	      0xe800000000	                          call 0x4001026	       321	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_26
0xfe6	    0x488d8540fdff	                  lea rax, [rbp - 0x2c0]	       322	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_27
0xfed	          0x4889c7	                            mov rdi, rax	       322	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_27
0xff0	      0xe800000000	                          call 0x4001035	       322	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_27
0xff5	    0x48898510fdff	            mov qword [rbp - 0x2f0], rax	       322	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_27
0xffc	    0x4883bd10fdff	              cmp qword [rbp - 0x2f0], 0	       323	reset.c	FUNCTION_11	ELSE_1	IF_2	IF_4
0x1004	            0x7521	                           jne 0x4001067	       323	reset.c	FUNCTION_11	ELSE_1	IF_2	IF_4
0x1006	    0x488b9d08fdff	            mov rbx, qword [rbp - 0x2f8]	       324	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_29
0x100d	      0xbf00000000	                              mov edi, 0	       324	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_29
0x1012	      0xe88ef0ffff	                               call sym.	       324	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_29
0x1017	          0x4889de	                            mov rsi, rbx	       324	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_29
0x101a	          0x4889c7	                            mov rdi, rax	       324	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_29
0x101d	      0xb800000000	                              mov eax, 0	       324	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_29
0x1022	      0xe800000000	                          call 0x4001067	       324	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_29
0x1027	    0x488b8510fdff	            mov rax, qword [rbp - 0x2f0]	       325	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_30
0x102e	        0x488d5004	                      lea rdx, [rax + 4]	       325	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_30
0x1032	    0x488d8540fdff	                  lea rax, [rbp - 0x2c0]	       325	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_30
0x1039	          0x4889d6	                            mov rsi, rdx	       325	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_30
0x103c	          0x4889c7	                            mov rdi, rax	       325	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_30
0x103f	      0xe809f1ffff	                         call sym.oidcpy	       325	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_30
0x1044	      0xe99c000000	                           jmp 0x4001125	       325	reset.c	FUNCTION_11	ELSE_1	IF_2	CALL_30
0x1049	    0x488b8508fdff	            mov rax, qword [rbp - 0x2f8]	       328	reset.c	FUNCTION_11	ELSE_2	IF_5	CALL_31
0x1050	    0x488d9540fdff	                  lea rdx, [rbp - 0x2c0]	       328	reset.c	FUNCTION_11	ELSE_2	IF_5	CALL_31
0x1057	          0x4889d6	                            mov rsi, rdx	       328	reset.c	FUNCTION_11	ELSE_2	IF_5	CALL_31
0x105a	          0x4889c7	                            mov rdi, rax	       328	reset.c	FUNCTION_11	ELSE_2	IF_5	CALL_31
0x105d	      0xe800000000	                          call 0x40010a2	       328	reset.c	FUNCTION_11	ELSE_2	IF_5	CALL_31
0x1062	            0x85c0	                           test eax, eax	       328	reset.c	FUNCTION_11	ELSE_2	IF_5	CALL_31
0x1064	            0x7421	                            je 0x40010c7	       328	reset.c	FUNCTION_11	ELSE_2	IF_5	CALL_31
0x1066	    0x488b9d08fdff	            mov rbx, qword [rbp - 0x2f8]	       329	reset.c	FUNCTION_11	ELSE_2	CALL_33
0x106d	      0xbf00000000	                              mov edi, 0	       329	reset.c	FUNCTION_11	ELSE_2	CALL_33
0x1072	      0xe82ef0ffff	                               call sym.	       329	reset.c	FUNCTION_11	ELSE_2	CALL_33
0x1077	          0x4889de	                            mov rsi, rbx	       329	reset.c	FUNCTION_11	ELSE_2	CALL_33
0x107a	          0x4889c7	                            mov rdi, rax	       329	reset.c	FUNCTION_11	ELSE_2	CALL_33
0x107d	      0xb800000000	                              mov eax, 0	       329	reset.c	FUNCTION_11	ELSE_2	CALL_33
0x1082	      0xe800000000	                          call 0x40010c7	       329	reset.c	FUNCTION_11	ELSE_2	CALL_33
0x1087	    0x488d8540fdff	                  lea rax, [rbp - 0x2c0]	       330	reset.c	FUNCTION_11	ELSE_2	CALL_34
0x108e	          0x4889c7	                            mov rdi, rax	       330	reset.c	FUNCTION_11	ELSE_2	CALL_34
0x1091	      0xe800000000	                          call 0x40010d6	       330	reset.c	FUNCTION_11	ELSE_2	CALL_34
0x1096	    0x48898518fdff	            mov qword [rbp - 0x2e8], rax	       330	reset.c	FUNCTION_11	ELSE_2	CALL_34
0x109d	    0x4883bd18fdff	              cmp qword [rbp - 0x2e8], 0	       331	reset.c	FUNCTION_11	ELSE_2	IF_6
0x10a5	            0x7521	                           jne 0x4001108	       331	reset.c	FUNCTION_11	ELSE_2	IF_6
0x10a7	    0x488b9d08fdff	            mov rbx, qword [rbp - 0x2f8]	       332	reset.c	FUNCTION_11	ELSE_2	CALL_36
0x10ae	      0xbf00000000	                              mov edi, 0	       332	reset.c	FUNCTION_11	ELSE_2	CALL_36
0x10b3	      0xe8edefffff	                               call sym.	       332	reset.c	FUNCTION_11	ELSE_2	CALL_36
0x10b8	          0x4889de	                            mov rsi, rbx	       332	reset.c	FUNCTION_11	ELSE_2	CALL_36
0x10bb	          0x4889c7	                            mov rdi, rax	       332	reset.c	FUNCTION_11	ELSE_2	CALL_36
0x10be	      0xb800000000	                              mov eax, 0	       332	reset.c	FUNCTION_11	ELSE_2	CALL_36
0x10c3	      0xe800000000	                          call 0x4001108	       332	reset.c	FUNCTION_11	ELSE_2	CALL_36
0x10c8	    0x488b8518fdff	            mov rax, qword [rbp - 0x2e8]	       333	reset.c	FUNCTION_11	ELSE_2	CALL_37
0x10cf	        0x488d5004	                      lea rdx, [rax + 4]	       333	reset.c	FUNCTION_11	ELSE_2	CALL_37
0x10d3	    0x488d8540fdff	                  lea rax, [rbp - 0x2c0]	       333	reset.c	FUNCTION_11	ELSE_2	CALL_37
0x10da	          0x4889d6	                            mov rsi, rdx	       333	reset.c	FUNCTION_11	ELSE_2	CALL_37
0x10dd	          0x4889c7	                            mov rdi, rax	       333	reset.c	FUNCTION_11	ELSE_2	CALL_37
0x10e0	      0xe868f0ffff	                         call sym.oidcpy	       333	reset.c	FUNCTION_11	ELSE_2	CALL_37
0x10e5	    0x8b85e8fcffff	            mov eax, dword [rbp - 0x318]	       336	reset.c	FUNCTION_11	IF_7
0x10eb	            0x85c0	                           test eax, eax	       336	reset.c	FUNCTION_11	IF_7
0x10ed	            0x7442	                            je 0x4001171	       336	reset.c	FUNCTION_11	IF_7
0x10ef	    0x8b85e0fcffff	            mov eax, dword [rbp - 0x320]	       337	reset.c	FUNCTION_11	IF_7	IF_8
0x10f5	          0x83f805	                              cmp eax, 5	       337	reset.c	FUNCTION_11	IF_7	IF_8
0x10f8	            0x7417	                            je 0x4001151	       337	reset.c	FUNCTION_11	IF_7	IF_8
0x10fa	      0xbf00000000	                              mov edi, 0	       338	reset.c	FUNCTION_11	IF_7	CALL_39
0x10ff	      0xe8a1efffff	                               call sym.	       338	reset.c	FUNCTION_11	IF_7	CALL_39
0x1104	          0x4889c7	                            mov rdi, rax	       338	reset.c	FUNCTION_11	IF_7	CALL_39
0x1107	      0xb800000000	                              mov eax, 0	       338	reset.c	FUNCTION_11	IF_7	CALL_39
0x110c	      0xe800000000	                          call 0x4001151	       338	reset.c	FUNCTION_11	IF_7	CALL_39
0x1111	    0x488b8508fdff	            mov rax, qword [rbp - 0x2f8]	       339	reset.c	FUNCTION_11	IF_7	CALL_40
0x1118	    0x488d9520fdff	                  lea rdx, [rbp - 0x2e0]	       339	reset.c	FUNCTION_11	IF_7	CALL_40
0x111f	      0xbe00000000	                              mov esi, 0	       339	reset.c	FUNCTION_11	IF_7	CALL_40
0x1124	          0x4889c7	                            mov rdi, rax	       339	reset.c	FUNCTION_11	IF_7	CALL_40
0x1127	      0xe800000000	                          call 0x400116c	       339	reset.c	FUNCTION_11	IF_7	CALL_40
0x112c	      0xe931030000	                           jmp 0x40014a2	       339	reset.c	FUNCTION_11	IF_7	CALL_40
0x1131	    0x8b8520fdffff	            mov eax, dword [rbp - 0x2e0]	       345	reset.c	FUNCTION_11	IF_9
0x1137	            0x85c0	                           test eax, eax	       345	reset.c	FUNCTION_11	IF_9
0x1139	            0x7463	                            je 0x40011de	       345	reset.c	FUNCTION_11	IF_9
0x113b	    0x8b85e0fcffff	            mov eax, dword [rbp - 0x320]	       346	reset.c	FUNCTION_11	IF_9	IF_10
0x1141	            0x85c0	                           test eax, eax	       346	reset.c	FUNCTION_11	IF_9	IF_10
0x1143	            0x7519	                           jne 0x400119e	       346	reset.c	FUNCTION_11	IF_9	IF_10
0x1145	      0xbf00000000	                              mov edi, 0	       347	reset.c	FUNCTION_11	IF_9	CALL_42
0x114a	      0xe856efffff	                               call sym.	       347	reset.c	FUNCTION_11	IF_9	CALL_42
0x114f	          0x4889c7	                            mov rdi, rax	       347	reset.c	FUNCTION_11	IF_9	CALL_42
0x1152	      0xb800000000	                              mov eax, 0	       347	reset.c	FUNCTION_11	IF_9	CALL_42
0x1157	      0xe800000000	                          call 0x400119c	       347	reset.c	FUNCTION_11	IF_9	CALL_42
0x115c	            0xeb40	                           jmp 0x40011de	       347	reset.c	FUNCTION_11	IF_9	CALL_42
0x115e	    0x8b85e0fcffff	            mov eax, dword [rbp - 0x320]	       348	reset.c	FUNCTION_11	IF_9	ELSE_3	IF_11
0x1164	          0x83f805	                              cmp eax, 5	       348	reset.c	FUNCTION_11	IF_9	ELSE_3	IF_11
0x1167	            0x7435	                            je 0x40011de	       348	reset.c	FUNCTION_11	IF_9	ELSE_3	IF_11
0x1169	    0x8b85e0fcffff	            mov eax, dword [rbp - 0x320]	       349	reset.c	FUNCTION_11	IF_9	ELSE_3	IF_11	CALL_44
0x116f	            0x4898	                                    cdqe	       349	reset.c	FUNCTION_11	IF_9	ELSE_3	IF_11	CALL_44
0x1171	    0x488b04c50000	                  mov rax, qword [rax*8]	       349	reset.c	FUNCTION_11	IF_9	ELSE_3	IF_11	CALL_44
0x1179	          0x4889c7	                            mov rdi, rax	       349	reset.c	FUNCTION_11	IF_9	ELSE_3	IF_11	CALL_44
0x117c	      0xe824efffff	                               call sym.	       349	reset.c	FUNCTION_11	IF_9	ELSE_3	IF_11	CALL_44
0x1181	          0x4889c3	                            mov rbx, rax	       349	reset.c	FUNCTION_11	IF_9	ELSE_3	IF_11	CALL_44
0x1184	      0xbf00000000	                              mov edi, 0	       349	reset.c	FUNCTION_11	IF_9	ELSE_3	IF_11	CALL_44
0x1189	      0xe817efffff	                               call sym.	       349	reset.c	FUNCTION_11	IF_9	ELSE_3	IF_11	CALL_44
0x118e	          0x4889de	                            mov rsi, rbx	       349	reset.c	FUNCTION_11	IF_9	ELSE_3	IF_11	CALL_44
0x1191	          0x4889c7	                            mov rdi, rax	       349	reset.c	FUNCTION_11	IF_9	ELSE_3	IF_11	CALL_44
0x1194	      0xb800000000	                              mov eax, 0	       349	reset.c	FUNCTION_11	IF_9	ELSE_3	IF_11	CALL_44
0x1199	      0xe800000000	                          call 0x40011de	       349	reset.c	FUNCTION_11	IF_9	ELSE_3	IF_11	CALL_44
0x119e	    0x8b85e0fcffff	            mov eax, dword [rbp - 0x320]	       352	reset.c	FUNCTION_11	IF_12
0x11a4	          0x83f805	                              cmp eax, 5	       352	reset.c	FUNCTION_11	IF_12
0x11a7	            0x750a	                           jne 0x40011f3	       352	reset.c	FUNCTION_11	IF_12
0x11a9	    0xc785e0fcffff	              mov dword [rbp - 0x320], 0	       353	reset.c	FUNCTION_11	IF_12
0x11b3	    0x8b85e0fcffff	            mov eax, dword [rbp - 0x320]	       355	reset.c	FUNCTION_11	IF_13	CALL_46
0x11b9	          0x83f801	                              cmp eax, 1	       355	reset.c	FUNCTION_11	IF_13	CALL_46
0x11bc	            0x7419	                            je 0x4001217	       355	reset.c	FUNCTION_11	IF_13	CALL_46
0x11be	    0x8b85e0fcffff	            mov eax, dword [rbp - 0x320]	       355	reset.c	FUNCTION_11	IF_13	CALL_46
0x11c4	            0x85c0	                           test eax, eax	       355	reset.c	FUNCTION_11	IF_13	CALL_46
0x11c6	            0x750a	                           jne 0x4001212	       355	reset.c	FUNCTION_11	IF_13	CALL_46
0x11c8	      0xe800000000	                          call 0x400120d	       355	reset.c	FUNCTION_11	IF_13	CALL_46
0x11cd	          0x4885c0	                           test rax, rax	       355	reset.c	FUNCTION_11	IF_13	CALL_46
0x11d0	            0x7405	                            je 0x4001217	       355	reset.c	FUNCTION_11	IF_13	CALL_46
0x11d2	      0xe800000000	                          call 0x4001217	       356	reset.c	FUNCTION_11	CALL_47
0x11d7	    0x8b85e0fcffff	            mov eax, dword [rbp - 0x320]	       358	reset.c	FUNCTION_11	IF_14	CALL_48
0x11dd	            0x85c0	                           test eax, eax	       358	reset.c	FUNCTION_11	IF_14	CALL_48
0x11df	            0x753e	                           jne 0x400125f	       358	reset.c	FUNCTION_11	IF_14	CALL_48
0x11e1	      0xe800000000	                          call 0x4001226	       358	reset.c	FUNCTION_11	IF_14	CALL_48
0x11e6	            0x85c0	                           test eax, eax	       358	reset.c	FUNCTION_11	IF_14	CALL_48
0x11e8	            0x7435	                            je 0x400125f	       358	reset.c	FUNCTION_11	IF_14	CALL_48
0x11ea	    0x8b85e0fcffff	            mov eax, dword [rbp - 0x320]	       359	reset.c	FUNCTION_11	IF_14	CALL_50
0x11f0	            0x4898	                                    cdqe	       359	reset.c	FUNCTION_11	IF_14	CALL_50
0x11f2	    0x488b04c50000	                  mov rax, qword [rax*8]	       359	reset.c	FUNCTION_11	IF_14	CALL_50
0x11fa	          0x4889c7	                            mov rdi, rax	       359	reset.c	FUNCTION_11	IF_14	CALL_50
0x11fd	      0xe8a3eeffff	                               call sym.	       359	reset.c	FUNCTION_11	IF_14	CALL_50
0x1202	          0x4889c3	                            mov rbx, rax	       359	reset.c	FUNCTION_11	IF_14	CALL_50
0x1205	      0xbf00000000	                              mov edi, 0	       359	reset.c	FUNCTION_11	IF_14	CALL_50
0x120a	      0xe896eeffff	                               call sym.	       359	reset.c	FUNCTION_11	IF_14	CALL_50
0x120f	          0x4889de	                            mov rsi, rbx	       359	reset.c	FUNCTION_11	IF_14	CALL_50
0x1212	          0x4889c7	                            mov rdi, rax	       359	reset.c	FUNCTION_11	IF_14	CALL_50
0x1215	      0xb800000000	                              mov eax, 0	       359	reset.c	FUNCTION_11	IF_14	CALL_50
0x121a	      0xe800000000	                          call 0x400125f	       359	reset.c	FUNCTION_11	IF_14	CALL_50
0x121f	    0x8b85ecfcffff	            mov eax, dword [rbp - 0x314]	       362	reset.c	FUNCTION_11	IF_15
0x1225	            0x85c0	                           test eax, eax	       362	reset.c	FUNCTION_11	IF_15
0x1227	            0x7421	                            je 0x400128a	       362	reset.c	FUNCTION_11	IF_15
0x1229	    0x8b85e0fcffff	            mov eax, dword [rbp - 0x320]	       362	reset.c	FUNCTION_11	IF_15
0x122f	            0x85c0	                           test eax, eax	       362	reset.c	FUNCTION_11	IF_15
0x1231	            0x7417	                            je 0x400128a	       362	reset.c	FUNCTION_11	IF_15
0x1233	      0xbf00000000	                              mov edi, 0	       363	reset.c	FUNCTION_11	CALL_53
0x1238	      0xe868eeffff	                               call sym.	       363	reset.c	FUNCTION_11	CALL_53
0x123d	          0x4889c7	                            mov rdi, rax	       363	reset.c	FUNCTION_11	CALL_53
0x1240	      0xb800000000	                              mov eax, 0	       363	reset.c	FUNCTION_11	CALL_53
0x1245	      0xe800000000	                          call 0x400128a	       363	reset.c	FUNCTION_11	CALL_53
0x124a	    0x8b85e0fcffff	            mov eax, dword [rbp - 0x320]	       368	reset.c	FUNCTION_11	IF_16
0x1250	          0x83f801	                              cmp eax, 1	       368	reset.c	FUNCTION_11	IF_16
0x1253	            0x740b	                            je 0x40012a0	       368	reset.c	FUNCTION_11	IF_16
0x1255	    0x8b85e0fcffff	            mov eax, dword [rbp - 0x320]	       368	reset.c	FUNCTION_11	IF_16
0x125b	          0x83f804	                              cmp eax, 4	       368	reset.c	FUNCTION_11	IF_16
0x125e	            0x750d	                           jne 0x40012ad	       368	reset.c	FUNCTION_11	IF_16
0x1260	    0x8b85e0fcffff	            mov eax, dword [rbp - 0x320]	       369	reset.c	FUNCTION_11	CALL_54
0x1266	            0x89c7	                            mov edi, eax	       369	reset.c	FUNCTION_11	CALL_54
0x1268	      0xe8c8f5ffff	          call sym.die_if_unmerged_cache	       369	reset.c	FUNCTION_11	CALL_54
0x126d	    0x8b85e0fcffff	            mov eax, dword [rbp - 0x320]	       371	reset.c	FUNCTION_11	IF_17
0x1273	          0x83f801	                              cmp eax, 1	       371	reset.c	FUNCTION_11	IF_17
0x1276	     0xf846a010000	                            je 0x4001426	       371	reset.c	FUNCTION_11	IF_17
0x127c	    0x48c78500fdff	              mov qword [rbp - 0x300], 0	       372	reset.c	FUNCTION_11	IF_17
0x1287	    0x488d8500fdff	                  lea rax, [rbp - 0x300]	       373	reset.c	FUNCTION_11	IF_17	CALL_55
0x128e	      0xbe01000000	                              mov esi, 1	       373	reset.c	FUNCTION_11	IF_17	CALL_55
0x1293	          0x4889c7	                            mov rdi, rax	       373	reset.c	FUNCTION_11	IF_17	CALL_55
0x1296	      0xe800000000	                          call 0x40012db	       373	reset.c	FUNCTION_11	IF_17	CALL_55
0x129b	    0x8b85e0fcffff	            mov eax, dword [rbp - 0x320]	       374	reset.c	FUNCTION_11	IF_17	IF_18
0x12a1	            0x85c0	                           test eax, eax	       374	reset.c	FUNCTION_11	IF_17	IF_18
0x12a3	     0xf8588000000	                           jne 0x4001371	       374	reset.c	FUNCTION_11	IF_17	IF_18
0x12a9	    0x8b85e4fcffff	            mov eax, dword [rbp - 0x31c]	       375	reset.c	FUNCTION_11	IF_17	IF_18
0x12af	            0x85c0	                           test eax, eax	       375	reset.c	FUNCTION_11	IF_17	IF_18
0x12b1	            0x7407	                            je 0x40012fa	       375	reset.c	FUNCTION_11	IF_17	IF_18
0x12b3	      0xb804000000	                              mov eax, 4	       375	reset.c	FUNCTION_11	IF_17	IF_18
0x12b8	            0xeb05	                           jmp 0x40012ff	       375	reset.c	FUNCTION_11	IF_17	IF_18
0x12ba	      0xb820000000	                           mov eax, 0x20	       375	reset.c	FUNCTION_11	IF_17	IF_18
0x12bf	    0x8985fcfcffff	            mov dword [rbp - 0x304], eax	       375	reset.c	FUNCTION_11	IF_17	IF_18
0x12c5	    0x8b95ecfcffff	            mov edx, dword [rbp - 0x314]	       376	reset.c	FUNCTION_11	IF_17	IF_18	IF_19	CALL_56
0x12cb	    0x488d8d40fdff	                  lea rcx, [rbp - 0x2c0]	       376	reset.c	FUNCTION_11	IF_17	IF_18	IF_19	CALL_56
0x12d2	    0x488d8520fdff	                  lea rax, [rbp - 0x2e0]	       376	reset.c	FUNCTION_11	IF_17	IF_18	IF_19	CALL_56
0x12d9	          0x4889ce	                            mov rsi, rcx	       376	reset.c	FUNCTION_11	IF_17	IF_18	IF_19	CALL_56
0x12dc	          0x4889c7	                            mov rdi, rax	       376	reset.c	FUNCTION_11	IF_17	IF_18	IF_19	CALL_56
0x12df	      0xe8b1f3ffff	                 call sym.read_from_tree	       376	reset.c	FUNCTION_11	IF_17	IF_18	IF_19	CALL_56
0x12e4	            0x85c0	                           test eax, eax	       376	reset.c	FUNCTION_11	IF_17	IF_18	IF_19	CALL_56
0x12e6	            0x740a	                            je 0x4001332	       376	reset.c	FUNCTION_11	IF_17	IF_18	IF_19	CALL_56
0x12e8	      0xb801000000	                              mov eax, 1	       377	reset.c	FUNCTION_11	IF_17	IF_18	IF_19
0x12ed	      0xe970010000	                           jmp 0x40014a2	       377	reset.c	FUNCTION_11	IF_17	IF_18	IF_19
0x12f2	      0xe800000000	                          call 0x4001337	       378	reset.c	FUNCTION_11	IF_17	IF_18	IF_20	CALL_57
0x12f7	          0x4885c0	                           test rax, rax	       378	reset.c	FUNCTION_11	IF_17	IF_18	IF_20	CALL_57
0x12fa	     0xf84b2000000	                            je 0x40013f2	       378	reset.c	FUNCTION_11	IF_17	IF_18	IF_20	CALL_57
0x1300	      0xbf00000000	                              mov edi, 0	       379	reset.c	FUNCTION_11	IF_17	IF_18	IF_20	CALL_58
0x1305	      0xe89bedffff	                               call sym.	       379	reset.c	FUNCTION_11	IF_17	IF_18	IF_20	CALL_58
0x130a	          0x4889c2	                            mov rdx, rax	       379	reset.c	FUNCTION_11	IF_17	IF_18	IF_20	CALL_58
0x130d	    0x8b85fcfcffff	            mov eax, dword [rbp - 0x304]	       379	reset.c	FUNCTION_11	IF_17	IF_18	IF_20	CALL_58
0x1313	          0x4989d0	                             mov r8, rdx	       379	reset.c	FUNCTION_11	IF_17	IF_18	IF_20	CALL_58
0x1316	      0xb900000000	                              mov ecx, 0	       379	reset.c	FUNCTION_11	IF_17	IF_18	IF_20	CALL_58
0x131b	      0xba00000000	                              mov edx, 0	       379	reset.c	FUNCTION_11	IF_17	IF_18	IF_20	CALL_58
0x1320	            0x89c6	                            mov esi, eax	       379	reset.c	FUNCTION_11	IF_17	IF_18	IF_20	CALL_58
0x1322	      0xbf00000000	                              mov edi, 0	       379	reset.c	FUNCTION_11	IF_17	IF_18	IF_20	CALL_58
0x1327	      0xe800000000	                          call 0x400136c	       379	reset.c	FUNCTION_11	IF_17	IF_18	IF_20	CALL_58
0x132c	      0xe981000000	                           jmp 0x40013f2	       379	reset.c	FUNCTION_11	IF_17	IF_18	IF_20	CALL_58
0x1331	    0x8b95e4fcffff	            mov edx, dword [rbp - 0x31c]	       382	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_60
0x1337	    0x8b8de0fcffff	            mov ecx, dword [rbp - 0x320]	       382	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_60
0x133d	    0x488d8540fdff	                  lea rax, [rbp - 0x2c0]	       382	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_60
0x1344	            0x89ce	                            mov esi, ecx	       382	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_60
0x1346	          0x4889c7	                            mov rdi, rax	       382	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_60
0x1349	      0xe845eeffff	                    call sym.reset_index	       382	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_60
0x134e	    0x8985f4fcffff	            mov dword [rbp - 0x30c], eax	       382	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_60
0x1354	    0x8b85e0fcffff	            mov eax, dword [rbp - 0x320]	       383	reset.c	FUNCTION_11	IF_17	ELSE_4	IF_21
0x135a	          0x83f804	                              cmp eax, 4	       383	reset.c	FUNCTION_11	IF_17	ELSE_4	IF_21
0x135d	            0x7529	                           jne 0x40013c8	       383	reset.c	FUNCTION_11	IF_17	ELSE_4	IF_21
0x135f	    0x83bdf4fcffff	              cmp dword [rbp - 0x30c], 0	       383	reset.c	FUNCTION_11	IF_17	ELSE_4	IF_21
0x1366	            0x7520	                           jne 0x40013c8	       383	reset.c	FUNCTION_11	IF_17	ELSE_4	IF_21
0x1368	    0x8b95e4fcffff	            mov edx, dword [rbp - 0x31c]	       384	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_61
0x136e	    0x488d8540fdff	                  lea rax, [rbp - 0x2c0]	       384	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_61
0x1375	      0xbe00000000	                              mov esi, 0	       384	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_61
0x137a	          0x4889c7	                            mov rdi, rax	       384	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_61
0x137d	      0xe811eeffff	                    call sym.reset_index	       384	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_61
0x1382	    0x8985f4fcffff	            mov dword [rbp - 0x30c], eax	       384	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_61
0x1388	    0x83bdf4fcffff	              cmp dword [rbp - 0x30c], 0	       385	reset.c	FUNCTION_11	IF_17	ELSE_4	IF_22
0x138f	            0x7421	                            je 0x40013f2	       385	reset.c	FUNCTION_11	IF_17	ELSE_4	IF_22
0x1391	    0x488b9d08fdff	            mov rbx, qword [rbp - 0x2f8]	       386	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_63
0x1398	      0xbf00000000	                              mov edi, 0	       386	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_63
0x139d	      0xe803edffff	                               call sym.	       386	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_63
0x13a2	          0x4889de	                            mov rsi, rbx	       386	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_63
0x13a5	          0x4889c7	                            mov rdi, rax	       386	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_63
0x13a8	      0xb800000000	                              mov eax, 0	       386	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_63
0x13ad	      0xe800000000	                          call 0x40013f2	       386	reset.c	FUNCTION_11	IF_17	ELSE_4	CALL_63
0x13b2	    0x488d8500fdff	                  lea rax, [rbp - 0x300]	       389	reset.c	FUNCTION_11	IF_17	IF_23	CALL_64
0x13b9	      0xba01000000	                              mov edx, 1	       389	reset.c	FUNCTION_11	IF_17	IF_23	CALL_64
0x13be	          0x4889c6	                            mov rsi, rax	       389	reset.c	FUNCTION_11	IF_17	IF_23	CALL_64
0x13c1	      0xbf00000000	                              mov edi, 0	       389	reset.c	FUNCTION_11	IF_17	IF_23	CALL_64
0x13c6	      0xe800000000	                          call 0x400140b	       389	reset.c	FUNCTION_11	IF_17	IF_23	CALL_64
0x13cb	            0x85c0	                           test eax, eax	       389	reset.c	FUNCTION_11	IF_17	IF_23	CALL_64
0x13cd	            0x7417	                            je 0x4001426	       389	reset.c	FUNCTION_11	IF_17	IF_23	CALL_64
0x13cf	      0xbf00000000	                              mov edi, 0	       390	reset.c	FUNCTION_11	IF_17	CALL_66
0x13d4	      0xe8ccecffff	                               call sym.	       390	reset.c	FUNCTION_11	IF_17	CALL_66
0x13d9	          0x4889c7	                            mov rdi, rax	       390	reset.c	FUNCTION_11	IF_17	CALL_66
0x13dc	      0xb800000000	                              mov eax, 0	       390	reset.c	FUNCTION_11	IF_17	CALL_66
0x13e1	      0xe800000000	                          call 0x4001426	       390	reset.c	FUNCTION_11	IF_17	CALL_66
0x13e6	    0x8b8520fdffff	            mov eax, dword [rbp - 0x2e0]	       393	reset.c	FUNCTION_11	IF_24
0x13ec	            0x85c0	                           test eax, eax	       393	reset.c	FUNCTION_11	IF_24
0x13ee	            0x755d	                           jne 0x400148d	       393	reset.c	FUNCTION_11	IF_24
0x13f0	    0x83bdf8fcffff	              cmp dword [rbp - 0x308], 0	       393	reset.c	FUNCTION_11	IF_24
0x13f7	            0x7554	                           jne 0x400148d	       393	reset.c	FUNCTION_11	IF_24
0x13f9	    0x488b8508fdff	            mov rax, qword [rbp - 0x2f8]	       396	reset.c	FUNCTION_11	IF_24	CALL_67
0x1400	    0x488d9540fdff	                  lea rdx, [rbp - 0x2c0]	       396	reset.c	FUNCTION_11	IF_24	CALL_67
0x1407	          0x4889d6	                            mov rsi, rdx	       396	reset.c	FUNCTION_11	IF_24	CALL_67
0x140a	          0x4889c7	                            mov rdi, rax	       396	reset.c	FUNCTION_11	IF_24	CALL_67
0x140d	      0xe839f6ffff	                     call sym.reset_refs	       396	reset.c	FUNCTION_11	IF_24	CALL_67
0x1412	    0x8985f0fcffff	            mov dword [rbp - 0x310], eax	       396	reset.c	FUNCTION_11	IF_24	CALL_67
0x1418	    0x8b85e0fcffff	            mov eax, dword [rbp - 0x320]	       398	reset.c	FUNCTION_11	IF_24	IF_25
0x141e	          0x83f802	                              cmp eax, 2	       398	reset.c	FUNCTION_11	IF_24	IF_25
0x1421	            0x752a	                           jne 0x400148d	       398	reset.c	FUNCTION_11	IF_24	IF_25
0x1423	    0x83bdf0fcffff	              cmp dword [rbp - 0x310], 0	       398	reset.c	FUNCTION_11	IF_24	IF_25
0x142a	            0x7521	                           jne 0x400148d	       398	reset.c	FUNCTION_11	IF_24	IF_25
0x142c	    0x8b85e4fcffff	            mov eax, dword [rbp - 0x31c]	       398	reset.c	FUNCTION_11	IF_24	IF_25
0x1432	            0x85c0	                           test eax, eax	       398	reset.c	FUNCTION_11	IF_24	IF_25
0x1434	            0x7517	                           jne 0x400148d	       398	reset.c	FUNCTION_11	IF_24	IF_25
0x1436	    0x488d8540fdff	                  lea rax, [rbp - 0x2c0]	       399	reset.c	FUNCTION_11	IF_24	CALL_69
0x143d	          0x4889c7	                            mov rdi, rax	       399	reset.c	FUNCTION_11	IF_24	CALL_69
0x1440	      0xe800000000	                          call 0x4001485	       399	reset.c	FUNCTION_11	IF_24	CALL_69
0x1445	          0x4889c7	                            mov rdi, rax	       399	reset.c	FUNCTION_11	IF_24	CALL_69
0x1448	      0xe830f0ffff	            call sym.print_new_head_line	       399	reset.c	FUNCTION_11	IF_24	CALL_69
0x144d	    0x8b8520fdffff	            mov eax, dword [rbp - 0x2e0]	       401	reset.c	FUNCTION_11	IF_26
0x1453	            0x85c0	                           test eax, eax	       401	reset.c	FUNCTION_11	IF_26
0x1455	            0x7505	                           jne 0x400149c	       401	reset.c	FUNCTION_11	IF_26
0x1457	      0xe800000000	                          call 0x400149c	       402	reset.c	FUNCTION_11	CALL_70
0x145c	    0x8b85f0fcffff	            mov eax, dword [rbp - 0x310]	       404	reset.c	FUNCTION_11
0x1462	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       405	reset.c	FUNCTION_11
0x1466	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       405	reset.c	FUNCTION_11
0x146f	            0x7405	                            je 0x40014b6	       405	reset.c	FUNCTION_11
0x1471	      0xe800000000	                          call 0x40014b6	       405	reset.c	FUNCTION_11
0x1476	    0x4881c4380300	                          add rsp, 0x338	       405	reset.c	FUNCTION_11
0x147d	              0x5b	                                 pop rbx	       405	reset.c	FUNCTION_11
0x147e	              0x5d	                                 pop rbp	       405	reset.c	FUNCTION_11
0x147f	              0xc3	                                     ret	       405	reset.c	FUNCTION_11
reset_refs	WHILE,0:SWITCH,0:functions,0:DO,0:FOR,0:CALL,8:ELSE,1:IF,3	75
0xa4b	              0x55	                                push rbp	       250	reset.c	FUNCTION_9
0xa4c	          0x4889e5	                            mov rbp, rsp	       250	reset.c	FUNCTION_9
0xa4f	    0x4881ec900000	                           sub rsp, 0x90	       250	reset.c	FUNCTION_9
0xa56	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	       250	reset.c	FUNCTION_9
0xa5d	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	       250	reset.c	FUNCTION_9
0xa64	    0x64488b042528	                mov rax, qword fs:[0x28]	       250	reset.c	FUNCTION_9
0xa6d	        0x488945f8	                mov qword [rbp - 8], rax	       250	reset.c	FUNCTION_9
0xa71	            0x31c0	                            xor eax, eax	       250	reset.c	FUNCTION_9
0xa73	    0x48c745a00000	               mov qword [rbp - 0x60], 0	       252	reset.c	FUNCTION_9
0xa7b	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       252	reset.c	FUNCTION_9
0xa83	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       252	reset.c	FUNCTION_9
0xa8b	    0x48c745900000	               mov qword [rbp - 0x70], 0	       253	reset.c	FUNCTION_9
0xa93	    0x48c745980000	               mov qword [rbp - 0x68], 0	       254	reset.c	FUNCTION_9
0xa9b	        0x488d45e0	                   lea rax, [rbp - 0x20]	       256	reset.c	FUNCTION_9	IF_1	CALL_1
0xa9f	          0x4889c6	                            mov rsi, rax	       256	reset.c	FUNCTION_9	IF_1	CALL_1
0xaa2	      0xbf00000000	                              mov edi, 0	       256	reset.c	FUNCTION_9	IF_1	CALL_1
0xaa7	      0xe800000000	                          call 0x4000aec	       256	reset.c	FUNCTION_9	IF_1	CALL_1
0xaac	            0x85c0	                           test eax, eax	       256	reset.c	FUNCTION_9	IF_1	CALL_1
0xaae	            0x7508	                           jne 0x4000af8	       256	reset.c	FUNCTION_9	IF_1	CALL_1
0xab0	        0x488d45e0	                   lea rax, [rbp - 0x20]	       257	reset.c	FUNCTION_9	IF_1
0xab4	        0x48894598	             mov qword [rbp - 0x68], rax	       257	reset.c	FUNCTION_9	IF_1
0xab8	        0x488d45c0	                   lea rax, [rbp - 0x40]	       258	reset.c	FUNCTION_9	IF_2	CALL_2
0xabc	          0x4889c6	                            mov rsi, rax	       258	reset.c	FUNCTION_9	IF_2	CALL_2
0xabf	      0xbf00000000	                              mov edi, 0	       258	reset.c	FUNCTION_9	IF_2	CALL_2
0xac4	      0xe800000000	                          call 0x4000b09	       258	reset.c	FUNCTION_9	IF_2	CALL_2
0xac9	            0x85c0	                           test eax, eax	       258	reset.c	FUNCTION_9	IF_2	CALL_2
0xacb	            0x7545	                           jne 0x4000b52	       258	reset.c	FUNCTION_9	IF_2	CALL_2
0xacd	        0x488d45c0	                   lea rax, [rbp - 0x40]	       259	reset.c	FUNCTION_9	IF_2
0xad1	        0x48894590	             mov qword [rbp - 0x70], rax	       259	reset.c	FUNCTION_9	IF_2
0xad5	        0x488d45a0	                   lea rax, [rbp - 0x60]	       260	reset.c	FUNCTION_9	IF_2	CALL_3
0xad9	      0xba00000000	                              mov edx, 0	       260	reset.c	FUNCTION_9	IF_2	CALL_3
0xade	      0xbe00000000	                              mov esi, 0	       260	reset.c	FUNCTION_9	IF_2	CALL_3
0xae3	          0x4889c7	                            mov rdi, rax	       260	reset.c	FUNCTION_9	IF_2	CALL_3
0xae6	      0xe8b0fcffff	             call sym.set_reflog_message	       260	reset.c	FUNCTION_9	IF_2	CALL_3
0xaeb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       261	reset.c	FUNCTION_9	IF_2	CALL_4
0xaef	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	       261	reset.c	FUNCTION_9	IF_2	CALL_4
0xaf3	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       261	reset.c	FUNCTION_9	IF_2	CALL_4
0xaf7	    0x41b900000000	                              mov r9d, 0	       261	reset.c	FUNCTION_9	IF_2	CALL_4
0xafd	    0x41b800000000	                              mov r8d, 0	       261	reset.c	FUNCTION_9	IF_2	CALL_4
0xb03	      0xbe00000000	                              mov esi, 0	       261	reset.c	FUNCTION_9	IF_2	CALL_4
0xb08	          0x4889c7	                            mov rdi, rax	       261	reset.c	FUNCTION_9	IF_2	CALL_4
0xb0b	      0xe800000000	                          call 0x4000b50	       261	reset.c	FUNCTION_9	IF_2	CALL_4
0xb10	            0xeb22	                           jmp 0x4000b74	       261	reset.c	FUNCTION_9	IF_2	CALL_4
0xb12	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       263	reset.c	FUNCTION_9	ELSE_1	IF_3
0xb17	            0x741b	                            je 0x4000b74	       263	reset.c	FUNCTION_9	ELSE_1	IF_3
0xb19	        0x488b4598	             mov rax, qword [rbp - 0x68]	       264	reset.c	FUNCTION_9	ELSE_1	IF_3
0xb1d	      0xb900000000	                              mov ecx, 0	       264	reset.c	FUNCTION_9	ELSE_1	IF_3
0xb22	          0x4889c2	                            mov rdx, rax	       264	reset.c	FUNCTION_9	ELSE_1	IF_3
0xb25	      0xbe00000000	                              mov esi, 0	       264	reset.c	FUNCTION_9	ELSE_1	IF_3
0xb2a	      0xbf00000000	                              mov edi, 0	       264	reset.c	FUNCTION_9	ELSE_1	IF_3
0xb2f	      0xe800000000	                          call 0x4000b74	       264	reset.c	FUNCTION_9	ELSE_1	IF_3
0xb34	    0x488b9578ffff	             mov rdx, qword [rbp - 0x88]	       265	reset.c	FUNCTION_9	CALL_6
0xb3b	        0x488d45a0	                   lea rax, [rbp - 0x60]	       265	reset.c	FUNCTION_9	CALL_6
0xb3f	      0xbe00000000	                              mov esi, 0	       265	reset.c	FUNCTION_9	CALL_6
0xb44	          0x4889c7	                            mov rdi, rax	       265	reset.c	FUNCTION_9	CALL_6
0xb47	      0xe84ffcffff	             call sym.set_reflog_message	       265	reset.c	FUNCTION_9	CALL_6
0xb4c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       266	reset.c	FUNCTION_9	CALL_7
0xb50	        0x488b4d90	             mov rcx, qword [rbp - 0x70]	       266	reset.c	FUNCTION_9	CALL_7
0xb54	    0x488b9570ffff	             mov rdx, qword [rbp - 0x90]	       266	reset.c	FUNCTION_9	CALL_7
0xb5b	    0x41b900000000	                              mov r9d, 0	       266	reset.c	FUNCTION_9	CALL_7
0xb61	    0x41b800000000	                              mov r8d, 0	       266	reset.c	FUNCTION_9	CALL_7
0xb67	      0xbe00000000	                              mov esi, 0	       266	reset.c	FUNCTION_9	CALL_7
0xb6c	          0x4889c7	                            mov rdi, rax	       266	reset.c	FUNCTION_9	CALL_7
0xb6f	      0xe800000000	                          call 0x4000bb4	       266	reset.c	FUNCTION_9	CALL_7
0xb74	          0x89458c	             mov dword [rbp - 0x74], eax	       266	reset.c	FUNCTION_9	CALL_7
0xb77	        0x488d45a0	                   lea rax, [rbp - 0x60]	       268	reset.c	FUNCTION_9	CALL_8
0xb7b	          0x4889c7	                            mov rdi, rax	       268	reset.c	FUNCTION_9	CALL_8
0xb7e	      0xe800000000	                          call 0x4000bc3	       268	reset.c	FUNCTION_9	CALL_8
0xb83	          0x8b458c	             mov eax, dword [rbp - 0x74]	       269	reset.c	FUNCTION_9
0xb86	        0x488b4df8	                mov rcx, qword [rbp - 8]	       270	reset.c	FUNCTION_9
0xb8a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       270	reset.c	FUNCTION_9
0xb93	            0x7405	                            je 0x4000bda	       270	reset.c	FUNCTION_9
0xb95	      0xe800000000	                          call 0x4000bda	       270	reset.c	FUNCTION_9
0xb9a	              0xc9	                                   leave	       270	reset.c	FUNCTION_9
0xb9b	              0xc3	                                     ret	       270	reset.c	FUNCTION_9
read_from_tree	WHILE,0:SWITCH,0:functions,0:DO,0:FOR,0:CALL,6:ELSE,0:IF,1	53
0x695	              0x55	                                push rbp	       153	reset.c	FUNCTION_5
0x696	          0x4889e5	                            mov rbp, rsp	       153	reset.c	FUNCTION_5
0x699	    0x4881ecb00100	                          sub rsp, 0x1b0	       153	reset.c	FUNCTION_5
0x6a0	    0x4889bd68feff	            mov qword [rbp - 0x198], rdi	       153	reset.c	FUNCTION_5
0x6a7	    0x4889b560feff	            mov qword [rbp - 0x1a0], rsi	       153	reset.c	FUNCTION_5
0x6ae	    0x89955cfeffff	            mov dword [rbp - 0x1a4], edx	       153	reset.c	FUNCTION_5
0x6b4	    0x64488b042528	                mov rax, qword fs:[0x28]	       153	reset.c	FUNCTION_5
0x6bd	        0x488945f8	                mov qword [rbp - 8], rax	       153	reset.c	FUNCTION_5
0x6c1	            0x31c0	                            xor eax, eax	       153	reset.c	FUNCTION_5
0x6c3	    0x488d8570feff	                  lea rax, [rbp - 0x190]	       156	reset.c	FUNCTION_5	CALL_1
0x6ca	      0xba80010000	                          mov edx, 0x180	       156	reset.c	FUNCTION_5	CALL_1
0x6cf	      0xbe00000000	                              mov esi, 0	       156	reset.c	FUNCTION_5	CALL_1
0x6d4	          0x4889c7	                            mov rdi, rax	       156	reset.c	FUNCTION_5	CALL_1
0x6d7	      0xe800000000	                          call 0x400071c	       156	reset.c	FUNCTION_5	CALL_1
0x6dc	    0x488b8568feff	            mov rax, qword [rbp - 0x198]	       157	reset.c	FUNCTION_5	CALL_2
0x6e3	    0x488d9570feff	                  lea rdx, [rbp - 0x190]	       157	reset.c	FUNCTION_5	CALL_2
0x6ea	    0x4881c2100100	                          add rdx, 0x110	       157	reset.c	FUNCTION_5	CALL_2
0x6f1	          0x4889c6	                            mov rsi, rax	       157	reset.c	FUNCTION_5	CALL_2
0x6f4	          0x4889d7	                            mov rdi, rdx	       157	reset.c	FUNCTION_5	CALL_2
0x6f7	      0xe800000000	                          call 0x400073c	       157	reset.c	FUNCTION_5	CALL_2
0x6fc	    0xc785d0feffff	         mov dword [rbp - 0x130], 0x1000	       158	reset.c	FUNCTION_5
0x706	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       159	reset.c	FUNCTION_5
0x70e	    0x488d855cfeff	                  lea rax, [rbp - 0x1a4]	       160	reset.c	FUNCTION_5
0x715	        0x488945c0	             mov qword [rbp - 0x40], rax	       160	reset.c	FUNCTION_5
0x719	     0xfb685abfeff	           movzx eax, byte [rbp - 0x155]	       161	reset.c	FUNCTION_5
0x720	          0x83c804	                               or eax, 4	       161	reset.c	FUNCTION_5
0x723	    0x8885abfeffff	              mov byte [rbp - 0x155], al	       161	reset.c	FUNCTION_5
0x729	    0x488d9570feff	                  lea rdx, [rbp - 0x190]	       163	reset.c	FUNCTION_5	IF_1	CALL_3
0x730	    0x488b8560feff	            mov rax, qword [rbp - 0x1a0]	       163	reset.c	FUNCTION_5	IF_1	CALL_3
0x737	          0x4889d6	                            mov rsi, rdx	       163	reset.c	FUNCTION_5	IF_1	CALL_3
0x73a	          0x4889c7	                            mov rdi, rax	       163	reset.c	FUNCTION_5	IF_1	CALL_3
0x73d	      0xe800000000	                          call 0x4000782	       163	reset.c	FUNCTION_5	IF_1	CALL_3
0x742	            0x85c0	                           test eax, eax	       163	reset.c	FUNCTION_5	IF_1	CALL_3
0x744	            0x7407	                            je 0x400078d	       163	reset.c	FUNCTION_5	IF_1	CALL_3
0x746	      0xb801000000	                              mov eax, 1	       164	reset.c	FUNCTION_5	IF_1
0x74b	            0xeb38	                           jmp 0x40007c5	       164	reset.c	FUNCTION_5	IF_1
0x74d	    0x488d8570feff	                  lea rax, [rbp - 0x190]	       165	reset.c	FUNCTION_5	CALL_4
0x754	          0x4889c7	                            mov rdi, rax	       165	reset.c	FUNCTION_5	CALL_4
0x757	      0xe800000000	                          call 0x400079c	       165	reset.c	FUNCTION_5	CALL_4
0x75c	    0x488d8570feff	                  lea rax, [rbp - 0x190]	       166	reset.c	FUNCTION_5	CALL_5
0x763	          0x4889c7	                            mov rdi, rax	       166	reset.c	FUNCTION_5	CALL_5
0x766	      0xe800000000	                          call 0x40007ab	       166	reset.c	FUNCTION_5	CALL_5
0x76b	    0x488d8570feff	                  lea rax, [rbp - 0x190]	       167	reset.c	FUNCTION_5	CALL_6
0x772	    0x480510010000	                          add rax, 0x110	       167	reset.c	FUNCTION_5	CALL_6
0x778	          0x4889c7	                            mov rdi, rax	       167	reset.c	FUNCTION_5	CALL_6
0x77b	      0xe800000000	                          call 0x40007c0	       167	reset.c	FUNCTION_5	CALL_6
0x780	      0xb800000000	                              mov eax, 0	       169	reset.c	FUNCTION_5
0x785	        0x488b4df8	                mov rcx, qword [rbp - 8]	       170	reset.c	FUNCTION_5
0x789	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       170	reset.c	FUNCTION_5
0x792	            0x7405	                            je 0x40007d9	       170	reset.c	FUNCTION_5
0x794	      0xe800000000	                          call 0x40007d9	       170	reset.c	FUNCTION_5
0x799	              0xc9	                                   leave	       170	reset.c	FUNCTION_5
0x79a	              0xc3	                                     ret	       170	reset.c	FUNCTION_5
strbuf_setlen	WHILE,0:SWITCH,0:functions,0:DO,0:FOR,0:CALL,2:ELSE,1:IF,2	43
0xb	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_18
0xc	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_18
0xf	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_18
0x13	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_18
0x17	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_18
0x1b	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_18	IF_1
0x1f	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_18	IF_1
0x22	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_18	IF_1
0x25	            0x740d	                            je 0x4000074	       162	strbuf.h	FUNCTION_18	IF_1
0x27	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_18	IF_1
0x2b	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_18	IF_1
0x2e	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_18	IF_1
0x32	            0xeb05	                           jmp 0x4000079	       162	strbuf.h	FUNCTION_18	IF_1
0x34	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_18	IF_1
0x39	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_18	IF_1
0x3d	            0x730f	                           jae 0x400008e	       162	strbuf.h	FUNCTION_18	IF_1
0x3f	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_18	CALL_1
0x44	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_18	CALL_1
0x49	      0xe800000000	                          call 0x400008e	       163	strbuf.h	FUNCTION_18	CALL_1
0x4e	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_18
0x52	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_18
0x56	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_18
0x5a	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_18	IF_2
0x5e	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_18	IF_2
0x62	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_18	IF_2
0x68	            0x7414	                            je 0x40000be	       165	strbuf.h	FUNCTION_18	IF_2
0x6a	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_18	IF_2
0x6e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_18	IF_2
0x72	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_18	IF_2
0x76	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_18	IF_2
0x79	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_18	IF_2
0x7c	            0xeb24	                           jmp 0x40000e2	       169	strbuf.h	FUNCTION_18
0x7e	     0xfb605000000	           movzx eax, byte [0x040000c5] 	       168	strbuf.h	FUNCTION_18	CALL_2
0x85	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_18	CALL_2
0x87	            0x7419	                            je 0x40000e2	       168	strbuf.h	FUNCTION_18	CALL_2
0x89	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_18	CALL_2
0x8e	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_18	CALL_2
0x93	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_18	CALL_2
0x98	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_18	CALL_2
0x9d	      0xe800000000	                          call 0x40000e2	       168	strbuf.h	FUNCTION_18	CALL_2
0xa2	              0x90	                                     nop	       169	strbuf.h	FUNCTION_18
0xa3	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_18
0xa4	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_18
set_reflog_message	WHILE,0:SWITCH,0:functions,0:DO,0:FOR,0:CALL,5:ELSE,2:IF,2	41
0x79b	              0x55	                                push rbp	       174	reset.c	FUNCTION_6
0x79c	          0x4889e5	                            mov rbp, rsp	       174	reset.c	FUNCTION_6
0x79f	        0x4883ec30	                           sub rsp, 0x30	       174	reset.c	FUNCTION_6
0x7a3	        0x48897de8	             mov qword [rbp - 0x18], rdi	       174	reset.c	FUNCTION_6
0x7a7	        0x488975e0	             mov qword [rbp - 0x20], rsi	       174	reset.c	FUNCTION_6
0x7ab	        0x488955d8	             mov qword [rbp - 0x28], rdx	       174	reset.c	FUNCTION_6
0x7af	      0xbf00000000	                              mov edi, 0	       175	reset.c	FUNCTION_6	CALL_1
0x7b4	      0xe800000000	                          call 0x40007f9	       175	reset.c	FUNCTION_6	CALL_1
0x7b9	        0x488945f8	                mov qword [rbp - 8], rax	       175	reset.c	FUNCTION_6	CALL_1
0x7bd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       177	reset.c	FUNCTION_6	CALL_2
0x7c1	      0xbe00000000	                              mov esi, 0	       177	reset.c	FUNCTION_6	CALL_2
0x7c6	          0x4889c7	                            mov rdi, rax	       177	reset.c	FUNCTION_6	CALL_2
0x7c9	      0xe83df8ffff	                  call sym.strbuf_setlen	       177	reset.c	FUNCTION_6	CALL_2
0x7ce	      0x48837df800	                  cmp qword [rbp - 8], 0	       178	reset.c	FUNCTION_6	IF_1
0x7d3	            0x7420	                            je 0x4000835	       178	reset.c	FUNCTION_6	IF_1
0x7d5	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       179	reset.c	FUNCTION_6	CALL_3
0x7d9	        0x488b55f8	                mov rdx, qword [rbp - 8]	       179	reset.c	FUNCTION_6	CALL_3
0x7dd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       179	reset.c	FUNCTION_6	CALL_3
0x7e1	      0xbe00000000	                              mov esi, 0	       179	reset.c	FUNCTION_6	CALL_3
0x7e6	          0x4889c7	                            mov rdi, rax	       179	reset.c	FUNCTION_6	CALL_3
0x7e9	      0xb800000000	                              mov eax, 0	       179	reset.c	FUNCTION_6	CALL_3
0x7ee	      0xe800000000	                          call 0x4000833	       179	reset.c	FUNCTION_6	CALL_3
0x7f3	            0xeb3d	                           jmp 0x4000872	       184	reset.c	FUNCTION_6
0x7f5	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       180	reset.c	FUNCTION_6	ELSE_1	IF_2
0x7fa	            0x741c	                            je 0x4000858	       180	reset.c	FUNCTION_6	ELSE_1	IF_2
0x7fc	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       181	reset.c	FUNCTION_6	ELSE_1	IF_2
0x800	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       181	reset.c	FUNCTION_6	ELSE_1	IF_2
0x804	      0xbe00000000	                              mov esi, 0	       181	reset.c	FUNCTION_6	ELSE_1	IF_2
0x809	          0x4889c7	                            mov rdi, rax	       181	reset.c	FUNCTION_6	ELSE_1	IF_2
0x80c	      0xb800000000	                              mov eax, 0	       181	reset.c	FUNCTION_6	ELSE_1	IF_2
0x811	      0xe800000000	                          call 0x4000856	       181	reset.c	FUNCTION_6	ELSE_1	IF_2
0x816	            0xeb1a	                           jmp 0x4000872	       184	reset.c	FUNCTION_6
0x818	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       183	reset.c	FUNCTION_6	CALL_5
0x81c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       183	reset.c	FUNCTION_6	CALL_5
0x820	      0xbe00000000	                              mov esi, 0	       183	reset.c	FUNCTION_6	CALL_5
0x825	          0x4889c7	                            mov rdi, rax	       183	reset.c	FUNCTION_6	CALL_5
0x828	      0xb800000000	                              mov eax, 0	       183	reset.c	FUNCTION_6	CALL_5
0x82d	      0xe800000000	                          call 0x4000872	       183	reset.c	FUNCTION_6	CALL_5
0x832	              0x90	                                     nop	       184	reset.c	FUNCTION_6
0x833	              0xc9	                                   leave	       184	reset.c	FUNCTION_6
0x834	              0xc3	                                     ret	       184	reset.c	FUNCTION_6
const_error	WHILE,0:SWITCH,0:functions,0:DO,0:FOR,0:CALL,0:ELSE,0:IF,0	5
0x0	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_32
0x1	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_32
0x4	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_32
0x9	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_32
0xa	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_32
reset_index	WHILE,0:SWITCH,1:functions,0:DO,0:FOR,1:CALL,16:ELSE,0:IF,7	155
0x193	              0x55	                                push rbp	        46	reset.c	FUNCTION_2
0x194	          0x4889e5	                            mov rbp, rsp	        46	reset.c	FUNCTION_2
0x197	              0x53	                                push rbx	        46	reset.c	FUNCTION_2
0x198	    0x4881ecb80300	                          sub rsp, 0x3b8	        46	reset.c	FUNCTION_2
0x19f	    0x4889bd48fcff	            mov qword [rbp - 0x3b8], rdi	        46	reset.c	FUNCTION_2
0x1a6	    0x89b544fcffff	            mov dword [rbp - 0x3bc], esi	        46	reset.c	FUNCTION_2
0x1ac	    0x899540fcffff	            mov dword [rbp - 0x3c0], edx	        46	reset.c	FUNCTION_2
0x1b2	    0x64488b042528	                mov rax, qword fs:[0x28]	        46	reset.c	FUNCTION_2
0x1bb	        0x488945e8	             mov qword [rbp - 0x18], rax	        46	reset.c	FUNCTION_2
0x1bf	            0x31c0	                            xor eax, eax	        46	reset.c	FUNCTION_2
0x1c1	    0xc78560fcffff	              mov dword [rbp - 0x3a0], 0	        47	reset.c	FUNCTION_2
0x1cb	    0xc78564fcffff	    mov dword [rbp - 0x39c], 0xffffffff 	        51	reset.c	FUNCTION_2
0x1d5	    0x488d85e0fcff	                  lea rax, [rbp - 0x320]	        53	reset.c	FUNCTION_2	CALL_1
0x1dc	      0xba00030000	                          mov edx, 0x300	        53	reset.c	FUNCTION_2	CALL_1
0x1e1	      0xbe00000000	                              mov esi, 0	        53	reset.c	FUNCTION_2	CALL_1
0x1e6	          0x4889c7	                            mov rdi, rax	        53	reset.c	FUNCTION_2	CALL_1
0x1e9	      0xe800000000	                          call 0x400022e	        53	reset.c	FUNCTION_2	CALL_1
0x1ee	    0xc785e0feffff	              mov dword [rbp - 0x120], 1	        54	reset.c	FUNCTION_2
0x1f8	    0x48c78500ffff	              mov qword [rbp - 0x100], 0	        55	reset.c	FUNCTION_2
0x203	    0x48c785f8feff	              mov qword [rbp - 0x108], 0	        56	reset.c	FUNCTION_2
0x20e	    0x48c78548fdff	              mov qword [rbp - 0x2b8], 0	        57	reset.c	FUNCTION_2
0x219	    0xc785e4fcffff	              mov dword [rbp - 0x31c], 1	        58	reset.c	FUNCTION_2
0x223	    0x83bd40fcffff	              cmp dword [rbp - 0x3c0], 0	        59	reset.c	FUNCTION_2	IF_1
0x22a	            0x750a	                           jne 0x4000276	        59	reset.c	FUNCTION_2	IF_1
0x22c	    0xc785f8fcffff	              mov dword [rbp - 0x308], 1	        60	reset.c	FUNCTION_2	IF_1
0x236	    0x8b8544fcffff	            mov eax, dword [rbp - 0x3bc]	        61	reset.c	FUNCTION_2	SWITCH_1
0x23c	          0x83f802	                              cmp eax, 2	        61	reset.c	FUNCTION_2	SWITCH_1
0x23f	            0x7416	                            je 0x4000297	        61	reset.c	FUNCTION_2	SWITCH_1
0x241	          0x83f802	                              cmp eax, 2	        61	reset.c	FUNCTION_2	SWITCH_1
0x244	            0x7c1b	                            jl 0x40002a1	        61	reset.c	FUNCTION_2	SWITCH_1
0x246	          0x83f804	                              cmp eax, 4	        61	reset.c	FUNCTION_2	SWITCH_1
0x249	            0x7f16	                            jg 0x40002a1	        61	reset.c	FUNCTION_2	SWITCH_1
0x24b	    0xc785e8fcffff	              mov dword [rbp - 0x318], 1	        64	reset.c	FUNCTION_2	SWITCH_1
0x255	            0xeb14	                           jmp 0x40002ab	        65	reset.c	FUNCTION_2	SWITCH_1
0x257	    0xc785e8fcffff	              mov dword [rbp - 0x318], 1	        67	reset.c	FUNCTION_2	SWITCH_1
0x261	    0xc785e0fcffff	              mov dword [rbp - 0x320], 1	        70	reset.c	FUNCTION_2	SWITCH_1
0x26b	      0xbf00000000	                              mov edi, 0	        73	reset.c	FUNCTION_2	CALL_2
0x270	      0xe800000000	                          call 0x40002b5	        73	reset.c	FUNCTION_2	CALL_2
0x275	    0x83bd44fcffff	              cmp dword [rbp - 0x3bc], 4	        75	reset.c	FUNCTION_2	IF_2
0x27c	     0xf85a7000000	                           jne 0x4000369	        75	reset.c	FUNCTION_2	IF_2
0x282	    0x488d8570fcff	                  lea rax, [rbp - 0x390]	        77	reset.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x289	          0x4889c6	                            mov rsi, rax	        77	reset.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x28c	      0xbf00000000	                              mov edi, 0	        77	reset.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x291	      0xe800000000	                          call 0x40002d6	        77	reset.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x296	            0x85c0	                           test eax, eax	        77	reset.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x298	            0x7421	                            je 0x40002fb	        77	reset.c	FUNCTION_2	IF_2	IF_3	CALL_3
0x29a	      0xbf00000000	                              mov edi, 0	        78	reset.c	FUNCTION_2	IF_2	CALL_5
0x29f	      0xe801feffff	                               call sym.	        78	reset.c	FUNCTION_2	IF_2	CALL_5
0x2a4	          0x4889c7	                            mov rdi, rax	        78	reset.c	FUNCTION_2	IF_2	CALL_5
0x2a7	      0xb800000000	                              mov eax, 0	        78	reset.c	FUNCTION_2	IF_2	CALL_5
0x2ac	      0xe800000000	                          call 0x40002f1	        78	reset.c	FUNCTION_2	IF_2	CALL_5
0x2b1	      0xe84afdffff	                    call sym.const_error	        78	reset.c	FUNCTION_2	IF_2	CALL_5
0x2b6	      0xe9a4010000	                           jmp 0x400049f	        78	reset.c	FUNCTION_2	IF_2	CALL_5
0x2bb	    0x8b8560fcffff	            mov eax, dword [rbp - 0x3a0]	        79	reset.c	FUNCTION_2	IF_2	IF_4	CALL_6
0x2c1	          0x4863d0	                         movsxd rdx, eax	        79	reset.c	FUNCTION_2	IF_2	IF_4	CALL_6
0x2c4	          0x4889d0	                            mov rax, rdx	        79	reset.c	FUNCTION_2	IF_2	IF_4	CALL_6
0x2c7	        0x48c1e002	                              shl rax, 2	        79	reset.c	FUNCTION_2	IF_2	IF_4	CALL_6
0x2cb	          0x4801d0	                            add rax, rdx	        79	reset.c	FUNCTION_2	IF_2	IF_4	CALL_6
0x2ce	        0x48c1e003	                              shl rax, 3	        79	reset.c	FUNCTION_2	IF_2	IF_4	CALL_6
0x2d2	          0x4889c2	                            mov rdx, rax	        79	reset.c	FUNCTION_2	IF_2	IF_4	CALL_6
0x2d5	    0x488d8590fcff	                  lea rax, [rbp - 0x370]	        79	reset.c	FUNCTION_2	IF_2	IF_4	CALL_6
0x2dc	          0x4801c2	                            add rdx, rax	        79	reset.c	FUNCTION_2	IF_2	IF_4	CALL_6
0x2df	    0x488d8570fcff	                  lea rax, [rbp - 0x390]	        79	reset.c	FUNCTION_2	IF_2	IF_4	CALL_6
0x2e6	          0x4889c6	                            mov rsi, rax	        79	reset.c	FUNCTION_2	IF_2	IF_4	CALL_6
0x2e9	          0x4889d7	                            mov rdi, rdx	        79	reset.c	FUNCTION_2	IF_2	IF_4	CALL_6
0x2ec	      0xe800000000	                          call 0x4000331	        79	reset.c	FUNCTION_2	IF_2	IF_4	CALL_6
0x2f1	          0x4885c0	                           test rax, rax	        79	reset.c	FUNCTION_2	IF_2	IF_4	CALL_6
0x2f4	            0x7521	                           jne 0x4000357	        79	reset.c	FUNCTION_2	IF_2	IF_4	CALL_6
0x2f6	      0xbf00000000	                              mov edi, 0	        80	reset.c	FUNCTION_2	IF_2	CALL_8
0x2fb	      0xe8a5fdffff	                               call sym.	        80	reset.c	FUNCTION_2	IF_2	CALL_8
0x300	          0x4889c7	                            mov rdi, rax	        80	reset.c	FUNCTION_2	IF_2	CALL_8
0x303	      0xb800000000	                              mov eax, 0	        80	reset.c	FUNCTION_2	IF_2	CALL_8
0x308	      0xe800000000	                          call 0x400034d	        80	reset.c	FUNCTION_2	IF_2	CALL_8
0x30d	      0xe8eefcffff	                    call sym.const_error	        80	reset.c	FUNCTION_2	IF_2	CALL_8
0x312	      0xe948010000	                           jmp 0x400049f	        80	reset.c	FUNCTION_2	IF_2	CALL_8
0x317	    0x838560fcffff	              add dword [rbp - 0x3a0], 1	        81	reset.c	FUNCTION_2	IF_2
0x31e	    0x48c78548fdff	              mov qword [rbp - 0x2b8], 0	        82	reset.c	FUNCTION_2	IF_2
0x329	    0x8b8560fcffff	            mov eax, dword [rbp - 0x3a0]	        85	reset.c	FUNCTION_2	IF_5	CALL_9
0x32f	          0x4863d0	                         movsxd rdx, eax	        85	reset.c	FUNCTION_2	IF_5	CALL_9
0x332	          0x4889d0	                            mov rax, rdx	        85	reset.c	FUNCTION_2	IF_5	CALL_9
0x335	        0x48c1e002	                              shl rax, 2	        85	reset.c	FUNCTION_2	IF_5	CALL_9
0x339	          0x4801d0	                            add rax, rdx	        85	reset.c	FUNCTION_2	IF_5	CALL_9
0x33c	        0x48c1e003	                              shl rax, 3	        85	reset.c	FUNCTION_2	IF_5	CALL_9
0x340	          0x4889c2	                            mov rdx, rax	        85	reset.c	FUNCTION_2	IF_5	CALL_9
0x343	    0x488d8590fcff	                  lea rax, [rbp - 0x370]	        85	reset.c	FUNCTION_2	IF_5	CALL_9
0x34a	          0x4801c2	                            add rdx, rax	        85	reset.c	FUNCTION_2	IF_5	CALL_9
0x34d	    0x488b8548fcff	            mov rax, qword [rbp - 0x3b8]	        85	reset.c	FUNCTION_2	IF_5	CALL_9
0x354	          0x4889c6	                            mov rsi, rax	        85	reset.c	FUNCTION_2	IF_5	CALL_9
0x357	          0x4889d7	                            mov rdi, rdx	        85	reset.c	FUNCTION_2	IF_5	CALL_9
0x35a	      0xe800000000	                          call 0x400039f	        85	reset.c	FUNCTION_2	IF_5	CALL_9
0x35f	          0x4885c0	                           test rax, rax	        85	reset.c	FUNCTION_2	IF_5	CALL_9
0x362	            0x7533	                           jne 0x40003d7	        85	reset.c	FUNCTION_2	IF_5	CALL_9
0x364	    0x488b8548fcff	            mov rax, qword [rbp - 0x3b8]	        86	reset.c	FUNCTION_2	IF_5	CALL_12
0x36b	          0x4889c7	                            mov rdi, rax	        86	reset.c	FUNCTION_2	IF_5	CALL_12
0x36e	      0xe800000000	                          call 0x40003b3	        86	reset.c	FUNCTION_2	IF_5	CALL_12
0x373	          0x4889c3	                            mov rbx, rax	        86	reset.c	FUNCTION_2	IF_5	CALL_12
0x376	      0xbf00000000	                              mov edi, 0	        86	reset.c	FUNCTION_2	IF_5	CALL_12
0x37b	      0xe825fdffff	                               call sym.	        86	reset.c	FUNCTION_2	IF_5	CALL_12
0x380	          0x4889de	                            mov rsi, rbx	        86	reset.c	FUNCTION_2	IF_5	CALL_12
0x383	          0x4889c7	                            mov rdi, rax	        86	reset.c	FUNCTION_2	IF_5	CALL_12
0x386	      0xb800000000	                              mov eax, 0	        86	reset.c	FUNCTION_2	IF_5	CALL_12
0x38b	      0xe800000000	                          call 0x40003d0	        86	reset.c	FUNCTION_2	IF_5	CALL_12
0x390	      0xe86bfcffff	                    call sym.const_error	        86	reset.c	FUNCTION_2	IF_5	CALL_12
0x395	            0xeb72	                           jmp 0x4000449	        87	reset.c	FUNCTION_2	IF_5
0x397	    0x838560fcffff	              add dword [rbp - 0x3a0], 1	        89	reset.c	FUNCTION_2
0x39e	    0x8b8560fcffff	            mov eax, dword [rbp - 0x3a0]	        91	reset.c	FUNCTION_2	IF_6	CALL_13
0x3a4	    0x488d95e0fcff	                  lea rdx, [rbp - 0x320]	        91	reset.c	FUNCTION_2	IF_6	CALL_13
0x3ab	    0x488d8d90fcff	                  lea rcx, [rbp - 0x370]	        91	reset.c	FUNCTION_2	IF_6	CALL_13
0x3b2	          0x4889ce	                            mov rsi, rcx	        91	reset.c	FUNCTION_2	IF_6	CALL_13
0x3b5	            0x89c7	                            mov edi, eax	        91	reset.c	FUNCTION_2	IF_6	CALL_13
0x3b7	      0xe800000000	                          call 0x40003fc	        91	reset.c	FUNCTION_2	IF_6	CALL_13
0x3bc	            0x85c0	                           test eax, eax	        91	reset.c	FUNCTION_2	IF_6	CALL_13
0x3be	            0x7548	                           jne 0x4000448	        91	reset.c	FUNCTION_2	IF_6	CALL_13
0x3c0	    0x83bd44fcffff	              cmp dword [rbp - 0x3bc], 0	        94	reset.c	FUNCTION_2	IF_7
0x3c7	            0x7409	                            je 0x4000412	        94	reset.c	FUNCTION_2	IF_7
0x3c9	    0x83bd44fcffff	              cmp dword [rbp - 0x3bc], 2	        94	reset.c	FUNCTION_2	IF_7
0x3d0	            0x752a	                           jne 0x400043c	        94	reset.c	FUNCTION_2	IF_7
0x3d2	    0x488b8548fcff	            mov rax, qword [rbp - 0x3b8]	        95	reset.c	FUNCTION_2	IF_7	CALL_14
0x3d9	          0x4889c7	                            mov rdi, rax	        95	reset.c	FUNCTION_2	IF_7	CALL_14
0x3dc	      0xe800000000	                          call 0x4000421	        95	reset.c	FUNCTION_2	IF_7	CALL_14
0x3e1	    0x48898568fcff	            mov qword [rbp - 0x398], rax	        95	reset.c	FUNCTION_2	IF_7	CALL_14
0x3e8	    0x488b8568fcff	            mov rax, qword [rbp - 0x398]	        96	reset.c	FUNCTION_2	IF_7	CALL_15
0x3ef	          0x4889c6	                            mov rsi, rax	        96	reset.c	FUNCTION_2	IF_7	CALL_15
0x3f2	      0xbf00000000	                              mov edi, 0	        96	reset.c	FUNCTION_2	IF_7	CALL_15
0x3f7	      0xe800000000	                          call 0x400043c	        96	reset.c	FUNCTION_2	IF_7	CALL_15
0x3fc	    0xc78564fcffff	              mov dword [rbp - 0x39c], 0	        99	reset.c	FUNCTION_2
0x406	            0xeb01	                           jmp 0x4000449	        99	reset.c	FUNCTION_2
0x408	              0x90	                                     nop	        92	reset.c	FUNCTION_2	IF_6
0x409	    0xc7855cfcffff	              mov dword [rbp - 0x3a4], 0	       102	reset.c	FUNCTION_2	FOR_1
0x413	            0xeb36	                           jmp 0x400048b	       102	reset.c	FUNCTION_2	FOR_1
0x415	    0x8b855cfcffff	            mov eax, dword [rbp - 0x3a4]	       103	reset.c	FUNCTION_2	CALL_16
0x41b	          0x4863d0	                         movsxd rdx, eax	       103	reset.c	FUNCTION_2	CALL_16
0x41e	          0x4889d0	                            mov rax, rdx	       103	reset.c	FUNCTION_2	CALL_16
0x421	        0x48c1e002	                              shl rax, 2	       103	reset.c	FUNCTION_2	CALL_16
0x425	          0x4801d0	                            add rax, rdx	       103	reset.c	FUNCTION_2	CALL_16
0x428	        0x48c1e003	                              shl rax, 3	       103	reset.c	FUNCTION_2	CALL_16
0x42c	        0x488d4df0	                   lea rcx, [rbp - 0x10]	       103	reset.c	FUNCTION_2	CALL_16
0x430	          0x4801c8	                            add rax, rcx	       103	reset.c	FUNCTION_2	CALL_16
0x433	    0x482d60030000	                          sub rax, 0x360	       103	reset.c	FUNCTION_2	CALL_16
0x439	          0x488b00	                    mov rax, qword [rax]	       103	reset.c	FUNCTION_2	CALL_16
0x43c	          0x4889c7	                            mov rdi, rax	       103	reset.c	FUNCTION_2	CALL_16
0x43f	      0xe800000000	                          call 0x4000484	       103	reset.c	FUNCTION_2	CALL_16
0x444	    0x83855cfcffff	              add dword [rbp - 0x3a4], 1	       102	reset.c	FUNCTION_2	FOR_1
0x44b	    0x8b855cfcffff	            mov eax, dword [rbp - 0x3a4]	       102	reset.c	FUNCTION_2	FOR_1
0x451	    0x3b8560fcffff	            cmp eax, dword [rbp - 0x3a0]	       102	reset.c	FUNCTION_2	FOR_1
0x457	            0x7cbc	                            jl 0x4000455	       102	reset.c	FUNCTION_2	FOR_1
0x459	    0x8b8564fcffff	            mov eax, dword [rbp - 0x39c]	       104	reset.c	FUNCTION_2
0x45f	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       105	reset.c	FUNCTION_2
0x463	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       105	reset.c	FUNCTION_2
0x46c	            0x7405	                            je 0x40004b3	       105	reset.c	FUNCTION_2
0x46e	      0xe800000000	                          call 0x40004b3	       105	reset.c	FUNCTION_2
0x473	    0x4881c4b80300	                          add rsp, 0x3b8	       105	reset.c	FUNCTION_2
0x47a	              0x5b	                                 pop rbx	       105	reset.c	FUNCTION_2
0x47b	              0x5d	                                 pop rbp	       105	reset.c	FUNCTION_2
0x47c	              0xc3	                                     ret	       105	reset.c	FUNCTION_2
git_reset_config	WHILE,0:SWITCH,0:functions,0:DO,0:FOR,0:CALL,3:ELSE,0:IF,1	27
0xb9c	              0x55	                                push rbp	       273	reset.c	FUNCTION_10
0xb9d	          0x4889e5	                            mov rbp, rsp	       273	reset.c	FUNCTION_10
0xba0	        0x4883ec20	                           sub rsp, 0x20	       273	reset.c	FUNCTION_10
0xba4	        0x48897df8	                mov qword [rbp - 8], rdi	       273	reset.c	FUNCTION_10
0xba8	        0x488975f0	             mov qword [rbp - 0x10], rsi	       273	reset.c	FUNCTION_10
0xbac	        0x488955e8	             mov qword [rbp - 0x18], rdx	       273	reset.c	FUNCTION_10
0xbb0	        0x488b45f8	                mov rax, qword [rbp - 8]	       274	reset.c	FUNCTION_10	IF_1	CALL_1
0xbb4	      0xbe00000000	                              mov esi, 0	       274	reset.c	FUNCTION_10	IF_1	CALL_1
0xbb9	          0x4889c7	                            mov rdi, rax	       274	reset.c	FUNCTION_10	IF_1	CALL_1
0xbbc	      0xe800000000	                          call 0x4000c01	       274	reset.c	FUNCTION_10	IF_1	CALL_1
0xbc1	            0x85c0	                           test eax, eax	       274	reset.c	FUNCTION_10	IF_1	CALL_1
0xbc3	            0x7519	                           jne 0x4000c1e	       274	reset.c	FUNCTION_10	IF_1	CALL_1
0xbc5	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       275	reset.c	FUNCTION_10	CALL_2
0xbc9	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       275	reset.c	FUNCTION_10	CALL_2
0xbcd	        0x488b45f8	                mov rax, qword [rbp - 8]	       275	reset.c	FUNCTION_10	CALL_2
0xbd1	          0x4889ce	                            mov rsi, rcx	       275	reset.c	FUNCTION_10	CALL_2
0xbd4	          0x4889c7	                            mov rdi, rax	       275	reset.c	FUNCTION_10	CALL_2
0xbd7	      0xe800000000	                          call 0x4000c1c	       275	reset.c	FUNCTION_10	CALL_2
0xbdc	            0xeb17	                           jmp 0x4000c35	       275	reset.c	FUNCTION_10	CALL_2
0xbde	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       277	reset.c	FUNCTION_10	CALL_3
0xbe2	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       277	reset.c	FUNCTION_10	CALL_3
0xbe6	        0x488b45f8	                mov rax, qword [rbp - 8]	       277	reset.c	FUNCTION_10	CALL_3
0xbea	          0x4889ce	                            mov rsi, rcx	       277	reset.c	FUNCTION_10	CALL_3
0xbed	          0x4889c7	                            mov rdi, rax	       277	reset.c	FUNCTION_10	CALL_3
0xbf0	      0xe800000000	                          call 0x4000c35	       277	reset.c	FUNCTION_10	CALL_3
0xbf5	              0xc9	                                   leave	       278	reset.c	FUNCTION_10
0xbf6	              0xc3	                                     ret	       278	reset.c	FUNCTION_10
print_new_head_line	WHILE,0:SWITCH,0:functions,0:DO,0:FOR,0:CALL,7:ELSE,0:IF,1	51
0x47d	              0x55	                                push rbp	       108	reset.c	FUNCTION_3
0x47e	          0x4889e5	                            mov rbp, rsp	       108	reset.c	FUNCTION_3
0x481	              0x53	                                push rbx	       108	reset.c	FUNCTION_3
0x482	        0x4883ec38	                           sub rsp, 0x38	       108	reset.c	FUNCTION_3
0x486	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       108	reset.c	FUNCTION_3
0x48a	    0x64488b042528	                mov rax, qword fs:[0x28]	       108	reset.c	FUNCTION_3
0x493	        0x488945e8	             mov qword [rbp - 0x18], rax	       108	reset.c	FUNCTION_3
0x497	            0x31c0	                            xor eax, eax	       108	reset.c	FUNCTION_3
0x499	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       109	reset.c	FUNCTION_3
0x4a1	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       109	reset.c	FUNCTION_3
0x4a9	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       109	reset.c	FUNCTION_3
0x4b1	    0x8b0500000000	            mov eax, dword [0x040004f7] 	       111	reset.c	FUNCTION_3	CALL_2
0x4b7	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       112	reset.c	FUNCTION_3	CALL_3
0x4bb	        0x4883c204	                              add rdx, 4	       112	reset.c	FUNCTION_3	CALL_3
0x4bf	            0x89c6	                            mov esi, eax	       111	reset.c	FUNCTION_3	CALL_2
0x4c1	          0x4889d7	                            mov rdi, rdx	       111	reset.c	FUNCTION_3	CALL_2
0x4c4	      0xe800000000	                          call 0x4000509	       111	reset.c	FUNCTION_3	CALL_2
0x4c9	          0x4889c3	                            mov rbx, rax	       111	reset.c	FUNCTION_3	CALL_2
0x4cc	      0xbf00000000	                              mov edi, 0	       111	reset.c	FUNCTION_3	CALL_2
0x4d1	      0xe8cffbffff	                               call sym.	       111	reset.c	FUNCTION_3	CALL_2
0x4d6	          0x4889de	                            mov rsi, rbx	       111	reset.c	FUNCTION_3	CALL_2
0x4d9	          0x4889c7	                            mov rdi, rax	       111	reset.c	FUNCTION_3	CALL_2
0x4dc	      0xb800000000	                              mov eax, 0	       111	reset.c	FUNCTION_3	CALL_2
0x4e1	      0xe800000000	                          call 0x4000526	       111	reset.c	FUNCTION_3	CALL_2
0x4e6	        0x488d55d0	                   lea rdx, [rbp - 0x30]	       114	reset.c	FUNCTION_3	CALL_4
0x4ea	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       114	reset.c	FUNCTION_3	CALL_4
0x4ee	          0x4889c6	                            mov rsi, rax	       114	reset.c	FUNCTION_3	CALL_4
0x4f1	      0xbf05000000	                              mov edi, 5	       114	reset.c	FUNCTION_3	CALL_4
0x4f6	      0xe800000000	                          call 0x400053b	       114	reset.c	FUNCTION_3	CALL_4
0x4fb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       115	reset.c	FUNCTION_3	IF_1
0x4ff	          0x4885c0	                           test rax, rax	       115	reset.c	FUNCTION_3	IF_1
0x502	            0x7416	                            je 0x400055a	       115	reset.c	FUNCTION_3	IF_1
0x504	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       116	reset.c	FUNCTION_3	CALL_5
0x508	          0x4889c6	                            mov rsi, rax	       116	reset.c	FUNCTION_3	CALL_5
0x50b	      0xbf00000000	                              mov edi, 0	       116	reset.c	FUNCTION_3	CALL_5
0x510	      0xb800000000	                              mov eax, 0	       116	reset.c	FUNCTION_3	CALL_5
0x515	      0xe800000000	                          call 0x400055a	       116	reset.c	FUNCTION_3	CALL_5
0x51a	      0xbf0a000000	                            mov edi, 0xa	       117	reset.c	FUNCTION_3	CALL_6
0x51f	      0xe800000000	                          call 0x4000564	       117	reset.c	FUNCTION_3	CALL_6
0x524	        0x488d45d0	                   lea rax, [rbp - 0x30]	       118	reset.c	FUNCTION_3	CALL_7
0x528	          0x4889c7	                            mov rdi, rax	       118	reset.c	FUNCTION_3	CALL_7
0x52b	      0xe800000000	                          call 0x4000570	       118	reset.c	FUNCTION_3	CALL_7
0x530	              0x90	                                     nop	       119	reset.c	FUNCTION_3
0x531	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       119	reset.c	FUNCTION_3
0x535	    0x644833042528	                xor rax, qword fs:[0x28]	       119	reset.c	FUNCTION_3
0x53e	            0x7405	                            je 0x4000585	       119	reset.c	FUNCTION_3
0x540	      0xe800000000	                          call 0x4000585	       119	reset.c	FUNCTION_3
0x545	        0x4883c438	                           add rsp, 0x38	       119	reset.c	FUNCTION_3
0x549	              0x5b	                                 pop rbx	       119	reset.c	FUNCTION_3
0x54a	              0x5d	                                 pop rbp	       119	reset.c	FUNCTION_3
0x54b	              0xc3	                                     ret	       119	reset.c	FUNCTION_3
parse_args	WHILE,0:SWITCH,0:functions,0:DO,0:FOR,0:CALL,10:ELSE,3:IF,5	121
0x892	              0x55	                                push rbp	       198	reset.c	FUNCTION_8
0x893	          0x4889e5	                            mov rbp, rsp	       198	reset.c	FUNCTION_8
0x896	        0x4883ec60	                           sub rsp, 0x60	       198	reset.c	FUNCTION_8
0x89a	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       198	reset.c	FUNCTION_8
0x89e	        0x488975c0	             mov qword [rbp - 0x40], rsi	       198	reset.c	FUNCTION_8
0x8a2	        0x488955b8	             mov qword [rbp - 0x48], rdx	       198	reset.c	FUNCTION_8
0x8a6	          0x894db4	             mov dword [rbp - 0x4c], ecx	       198	reset.c	FUNCTION_8
0x8a9	        0x4c8945a8	              mov qword [rbp - 0x58], r8	       198	reset.c	FUNCTION_8
0x8ad	    0x64488b042528	                mov rax, qword fs:[0x28]	       198	reset.c	FUNCTION_8
0x8b6	        0x488945f8	                mov qword [rbp - 8], rax	       198	reset.c	FUNCTION_8
0x8ba	            0x31c0	                            xor eax, eax	       198	reset.c	FUNCTION_8
0x8bc	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       199	reset.c	FUNCTION_8
0x8c4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       213	reset.c	FUNCTION_8	IF_1
0x8c8	          0x488b00	                    mov rax, qword [rax]	       213	reset.c	FUNCTION_8	IF_1
0x8cb	          0x4885c0	                           test rax, rax	       213	reset.c	FUNCTION_8	IF_1
0x8ce	     0xf84fd000000	                            je 0x4000a11	       213	reset.c	FUNCTION_8	IF_1
0x8d4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       214	reset.c	FUNCTION_8	IF_1	IF_2	CALL_1
0x8d8	          0x488b00	                    mov rax, qword [rax]	       214	reset.c	FUNCTION_8	IF_1	IF_2	CALL_1
0x8db	      0xbe00000000	                              mov esi, 0	       214	reset.c	FUNCTION_8	IF_1	IF_2	CALL_1
0x8e0	          0x4889c7	                            mov rdi, rax	       214	reset.c	FUNCTION_8	IF_1	IF_2	CALL_1
0x8e3	      0xe800000000	                          call 0x4000928	       214	reset.c	FUNCTION_8	IF_1	IF_2	CALL_1
0x8e8	            0x85c0	                           test eax, eax	       214	reset.c	FUNCTION_8	IF_1	IF_2	CALL_1
0x8ea	            0x750a	                           jne 0x4000936	       214	reset.c	FUNCTION_8	IF_1	IF_2	CALL_1
0x8ec	      0x488345c008	               add qword [rbp - 0x40], 8	       215	reset.c	FUNCTION_8	IF_1	IF_2
0x8f1	      0xe9db000000	                           jmp 0x4000a11	       215	reset.c	FUNCTION_8	IF_1	IF_2
0x8f6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       216	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3	CALL_2
0x8fa	        0x4883c008	                              add rax, 8	       216	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3	CALL_2
0x8fe	          0x488b00	                    mov rax, qword [rax]	       216	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3	CALL_2
0x901	          0x4885c0	                           test rax, rax	       216	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3	CALL_2
0x904	            0x7431	                            je 0x4000977	       216	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3	CALL_2
0x906	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       216	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3	CALL_2
0x90a	        0x4883c008	                              add rax, 8	       216	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3	CALL_2
0x90e	          0x488b00	                    mov rax, qword [rax]	       216	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3	CALL_2
0x911	      0xbe00000000	                              mov esi, 0	       216	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3	CALL_2
0x916	          0x4889c7	                            mov rdi, rax	       216	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3	CALL_2
0x919	      0xe800000000	                          call 0x400095e	       216	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3	CALL_2
0x91e	            0x85c0	                           test eax, eax	       216	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3	CALL_2
0x920	            0x7515	                           jne 0x4000977	       216	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3	CALL_2
0x922	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       217	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3
0x926	          0x488b00	                    mov rax, qword [rax]	       217	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3
0x929	        0x488945d8	             mov qword [rbp - 0x28], rax	       217	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3
0x92d	      0x488345c010	            add qword [rbp - 0x40], 0x10	       218	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3
0x932	      0xe99a000000	                           jmp 0x4000a11	       218	reset.c	FUNCTION_8	IF_1	ELSE_1	IF_3
0x937	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       225	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_3
0x93b	        0x4883c008	                              add rax, 8	       225	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_3
0x93f	          0x488b00	                    mov rax, qword [rax]	       225	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_3
0x942	          0x4885c0	                           test rax, rax	       225	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_3
0x945	            0x751a	                           jne 0x40009a1	       225	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_3
0x947	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       225	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_3
0x94b	          0x488b00	                    mov rax, qword [rax]	       225	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_3
0x94e	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       225	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_3
0x952	          0x4889d6	                            mov rsi, rdx	       225	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_3
0x955	          0x4889c7	                            mov rdi, rax	       225	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_3
0x958	      0xe800000000	                          call 0x400099d	       225	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_3
0x95d	            0x85c0	                           test eax, eax	       225	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_3
0x95f	            0x742a	                            je 0x40009cb	       225	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_3
0x961	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       226	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_4
0x965	        0x4883c008	                              add rax, 8	       226	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_4
0x969	          0x488b00	                    mov rax, qword [rax]	       226	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_4
0x96c	          0x4885c0	                           test rax, rax	       225	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_3
0x96f	            0x7445	                            je 0x40009f6	       225	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_3
0x971	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       226	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_4
0x975	          0x488b00	                    mov rax, qword [rax]	       226	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_4
0x978	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       226	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_4
0x97c	          0x4889d6	                            mov rsi, rdx	       226	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_4
0x97f	          0x4889c7	                            mov rdi, rax	       226	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_4
0x982	      0xe800000000	                          call 0x40009c7	       226	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_4
0x987	            0x85c0	                           test eax, eax	       226	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_4
0x989	            0x752b	                           jne 0x40009f6	       226	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_4
0x98b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       231	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_5
0x98f	          0x488b10	                    mov rdx, qword [rax]	       231	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_5
0x992	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       231	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_5
0x996	          0x4889d6	                            mov rsi, rdx	       231	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_5
0x999	          0x4889c7	                            mov rdi, rax	       231	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_5
0x99c	      0xe800000000	                          call 0x40009e1	       231	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4	CALL_5
0x9a1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       232	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4
0x9a5	        0x488d5008	                      lea rdx, [rax + 8]	       232	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4
0x9a9	        0x488955c0	             mov qword [rbp - 0x40], rdx	       232	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4
0x9ad	          0x488b00	                    mov rax, qword [rax]	       232	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4
0x9b0	        0x488945d8	             mov qword [rbp - 0x28], rax	       232	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4
0x9b4	            0xeb1b	                           jmp 0x4000a11	       232	reset.c	FUNCTION_8	IF_1	ELSE_2	IF_4
0x9b6	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       235	reset.c	FUNCTION_8	IF_1	ELSE_3	CALL_6
0x9ba	          0x488b08	                    mov rcx, qword [rax]	       235	reset.c	FUNCTION_8	IF_1	ELSE_3	CALL_6
0x9bd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       235	reset.c	FUNCTION_8	IF_1	ELSE_3	CALL_6
0x9c1	      0xba01000000	                              mov edx, 1	       235	reset.c	FUNCTION_8	IF_1	ELSE_3	CALL_6
0x9c6	          0x4889ce	                            mov rsi, rcx	       235	reset.c	FUNCTION_8	IF_1	ELSE_3	CALL_6
0x9c9	          0x4889c7	                            mov rdi, rax	       235	reset.c	FUNCTION_8	IF_1	ELSE_3	CALL_6
0x9cc	      0xe800000000	                          call 0x4000a11	       235	reset.c	FUNCTION_8	IF_1	ELSE_3	CALL_6
0x9d1	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       238	reset.c	FUNCTION_8
0x9d5	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       238	reset.c	FUNCTION_8
0x9d9	          0x488910	                    mov qword [rax], rdx	       238	reset.c	FUNCTION_8
0x9dc	      0xbf00000000	                              mov edi, 0	       240	reset.c	FUNCTION_8	IF_5	CALL_7
0x9e1	      0xe800000000	                          call 0x4000a26	       240	reset.c	FUNCTION_8	IF_5	CALL_7
0x9e6	            0x85c0	                           test eax, eax	       240	reset.c	FUNCTION_8	IF_5	CALL_7
0x9e8	            0x7917	                           jns 0x4000a41	       240	reset.c	FUNCTION_8	IF_5	CALL_7
0x9ea	      0xbf00000000	                              mov edi, 0	       241	reset.c	FUNCTION_8	CALL_9
0x9ef	      0xe8b1f6ffff	                               call sym.	       241	reset.c	FUNCTION_8	CALL_9
0x9f4	          0x4889c7	                            mov rdi, rax	       241	reset.c	FUNCTION_8	CALL_9
0x9f7	      0xb800000000	                              mov eax, 0	       241	reset.c	FUNCTION_8	CALL_9
0x9fc	      0xe800000000	                          call 0x4000a41	       241	reset.c	FUNCTION_8	CALL_9
0xa01	        0x837db400	               cmp dword [rbp - 0x4c], 0	       243	reset.c	FUNCTION_8	CALL_10
0xa05	            0x7407	                            je 0x4000a4e	       243	reset.c	FUNCTION_8	CALL_10
0xa07	      0xbe12000000	                           mov esi, 0x12	       243	reset.c	FUNCTION_8	CALL_10
0xa0c	            0xeb05	                           jmp 0x4000a53	       243	reset.c	FUNCTION_8	CALL_10
0xa0e	      0xbe02000000	                              mov esi, 2	       243	reset.c	FUNCTION_8	CALL_10
0xa13	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       243	reset.c	FUNCTION_8	CALL_10
0xa17	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       243	reset.c	FUNCTION_8	CALL_10
0xa1b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       243	reset.c	FUNCTION_8	CALL_10
0xa1f	          0x4989c8	                             mov r8, rcx	       243	reset.c	FUNCTION_8	CALL_10
0xa22	          0x4889d1	                            mov rcx, rdx	       243	reset.c	FUNCTION_8	CALL_10
0xa25	            0x89f2	                            mov edx, esi	       243	reset.c	FUNCTION_8	CALL_10
0xa27	      0xbe00000000	                              mov esi, 0	       243	reset.c	FUNCTION_8	CALL_10
0xa2c	          0x4889c7	                            mov rdi, rax	       243	reset.c	FUNCTION_8	CALL_10
0xa2f	      0xe800000000	                          call 0x4000a74	       243	reset.c	FUNCTION_8	CALL_10
0xa34	              0x90	                                     nop	       247	reset.c	FUNCTION_8
0xa35	        0x488b45f8	                mov rax, qword [rbp - 8]	       247	reset.c	FUNCTION_8
0xa39	    0x644833042528	                xor rax, qword fs:[0x28]	       247	reset.c	FUNCTION_8
0xa42	            0x7405	                            je 0x4000a89	       247	reset.c	FUNCTION_8
0xa44	      0xe800000000	                          call 0x4000a89	       247	reset.c	FUNCTION_8
0xa49	              0xc9	                                   leave	       247	reset.c	FUNCTION_8
0xa4a	              0xc3	                                     ret	       247	reset.c	FUNCTION_8
