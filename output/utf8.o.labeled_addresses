reencode_string_len	ELSE,0:IF,3:FOR,0:DO,0:functions,0:WHILE,0:CALL,6:SWITCH,0	52
0x131d	              0x55	                                push rbp	       540	utf8.c	FUNCTION_19
0x131e	          0x4889e5	                            mov rbp, rsp	       540	utf8.c	FUNCTION_19
0x1321	        0x4883ec40	                           sub rsp, 0x40	       540	utf8.c	FUNCTION_19
0x1325	        0x48897de8	             mov qword [rbp - 0x18], rdi	       540	utf8.c	FUNCTION_19
0x1329	          0x8975e4	             mov dword [rbp - 0x1c], esi	       540	utf8.c	FUNCTION_19
0x132c	        0x488955d8	             mov qword [rbp - 0x28], rdx	       540	utf8.c	FUNCTION_19
0x1330	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       540	utf8.c	FUNCTION_19
0x1334	        0x4c8945c8	              mov qword [rbp - 0x38], r8	       540	utf8.c	FUNCTION_19
0x1338	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       544	utf8.c	FUNCTION_19	IF_1
0x133d	            0x750a	                           jne 0x4001389	       544	utf8.c	FUNCTION_19	IF_1
0x133f	      0xb800000000	                              mov eax, 0	       545	utf8.c	FUNCTION_19	IF_1
0x1344	      0xe991000000	                           jmp 0x400141a	       545	utf8.c	FUNCTION_19	IF_1
0x1349	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       547	utf8.c	FUNCTION_19	CALL_1
0x134d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       547	utf8.c	FUNCTION_19	CALL_1
0x1351	          0x4889d6	                            mov rsi, rdx	       547	utf8.c	FUNCTION_19	CALL_1
0x1354	          0x4889c7	                            mov rdi, rax	       547	utf8.c	FUNCTION_19	CALL_1
0x1357	      0xe800000000	                          call 0x400139c	       547	utf8.c	FUNCTION_19	CALL_1
0x135c	        0x488945f0	             mov qword [rbp - 0x10], rax	       547	utf8.c	FUNCTION_19	CALL_1
0x1360	      0x48837df0ff	cmp qword [rbp - 0x10], 0xffffffffffffffff	       548	utf8.c	FUNCTION_19	IF_2
0x1365	            0x7545	                           jne 0x40013ec	       548	utf8.c	FUNCTION_19	IF_2
0x1367	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       549	utf8.c	FUNCTION_19	IF_2	CALL_2
0x136b	          0x4889c7	                            mov rdi, rax	       549	utf8.c	FUNCTION_19	IF_2	CALL_2
0x136e	      0xe865ffffff	              call sym.fallback_encoding	       549	utf8.c	FUNCTION_19	IF_2	CALL_2
0x1373	        0x488945d0	             mov qword [rbp - 0x30], rax	       549	utf8.c	FUNCTION_19	IF_2	CALL_2
0x1377	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       550	utf8.c	FUNCTION_19	IF_2	CALL_3
0x137b	          0x4889c7	                            mov rdi, rax	       550	utf8.c	FUNCTION_19	IF_2	CALL_3
0x137e	      0xe855ffffff	              call sym.fallback_encoding	       550	utf8.c	FUNCTION_19	IF_2	CALL_3
0x1383	        0x488945d8	             mov qword [rbp - 0x28], rax	       550	utf8.c	FUNCTION_19	IF_2	CALL_3
0x1387	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       552	utf8.c	FUNCTION_19	IF_2	CALL_4
0x138b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       552	utf8.c	FUNCTION_19	IF_2	CALL_4
0x138f	          0x4889d6	                            mov rsi, rdx	       552	utf8.c	FUNCTION_19	IF_2	CALL_4
0x1392	          0x4889c7	                            mov rdi, rax	       552	utf8.c	FUNCTION_19	IF_2	CALL_4
0x1395	      0xe800000000	                          call 0x40013da	       552	utf8.c	FUNCTION_19	IF_2	CALL_4
0x139a	        0x488945f0	             mov qword [rbp - 0x10], rax	       552	utf8.c	FUNCTION_19	IF_2	CALL_4
0x139e	      0x48837df0ff	cmp qword [rbp - 0x10], 0xffffffffffffffff	       553	utf8.c	FUNCTION_19	IF_2	IF_3
0x13a3	            0x7507	                           jne 0x40013ec	       553	utf8.c	FUNCTION_19	IF_2	IF_3
0x13a5	      0xb800000000	                              mov eax, 0	       554	utf8.c	FUNCTION_19	IF_2	IF_3
0x13aa	            0xeb2e	                           jmp 0x400141a	       554	utf8.c	FUNCTION_19	IF_2	IF_3
0x13ac	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       557	utf8.c	FUNCTION_19	CALL_5
0x13af	          0x4863f0	                         movsxd rsi, eax	       557	utf8.c	FUNCTION_19	CALL_5
0x13b2	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       557	utf8.c	FUNCTION_19	CALL_5
0x13b6	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       557	utf8.c	FUNCTION_19	CALL_5
0x13ba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       557	utf8.c	FUNCTION_19	CALL_5
0x13be	          0x4889c7	                            mov rdi, rax	       557	utf8.c	FUNCTION_19	CALL_5
0x13c1	      0xe800000000	                          call 0x4001406	       557	utf8.c	FUNCTION_19	CALL_5
0x13c6	        0x488945f8	                mov qword [rbp - 8], rax	       557	utf8.c	FUNCTION_19	CALL_5
0x13ca	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       558	utf8.c	FUNCTION_19	CALL_6
0x13ce	          0x4889c7	                            mov rdi, rax	       558	utf8.c	FUNCTION_19	CALL_6
0x13d1	      0xe800000000	                          call 0x4001416	       558	utf8.c	FUNCTION_19	CALL_6
0x13d6	        0x488b45f8	                mov rax, qword [rbp - 8]	       559	utf8.c	FUNCTION_19
0x13da	              0xc9	                                   leave	       560	utf8.c	FUNCTION_19
0x13db	              0xc3	                                     ret	       560	utf8.c	FUNCTION_19
display_mode_esc_sequence_len	ELSE,0:IF,3:FOR,0:DO,0:functions,0:WHILE,1:CALL,1:SWITCH,0	49
0x21a	              0x55	                                push rbp	        13	utf8.c	IF_1	FUNCTION_1
0x21b	          0x4889e5	                            mov rbp, rsp	        13	utf8.c	IF_1	FUNCTION_1
0x21e	        0x48897de8	             mov qword [rbp - 0x18], rdi	        13	utf8.c	IF_1	FUNCTION_1
0x222	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        14	utf8.c	IF_1	FUNCTION_1
0x226	        0x488945f8	                mov qword [rbp - 8], rax	        14	utf8.c	IF_1	FUNCTION_1
0x22a	        0x488b45f8	                mov rax, qword [rbp - 8]	        15	utf8.c	IF_1	FUNCTION_1
0x22e	        0x488d5001	                      lea rdx, [rax + 1]	        15	utf8.c	IF_1	FUNCTION_1
0x232	        0x488955f8	                mov qword [rbp - 8], rdx	        15	utf8.c	IF_1	FUNCTION_1
0x236	           0xfb600	                   movzx eax, byte [rax]	        15	utf8.c	IF_1	FUNCTION_1
0x239	            0x3c1b	                            cmp al, 0x1b	        15	utf8.c	IF_1	FUNCTION_1
0x23b	            0x7407	                            je 0x4000284	        15	utf8.c	IF_1	FUNCTION_1
0x23d	      0xb800000000	                              mov eax, 0	        16	utf8.c	FUNCTION_1
0x242	            0xeb6f	                           jmp 0x40002f3	        16	utf8.c	FUNCTION_1
0x244	        0x488b45f8	                mov rax, qword [rbp - 8]	        17	utf8.c	FUNCTION_1	IF_2
0x248	        0x488d5001	                      lea rdx, [rax + 1]	        17	utf8.c	FUNCTION_1	IF_2
0x24c	        0x488955f8	                mov qword [rbp - 8], rdx	        17	utf8.c	FUNCTION_1	IF_2
0x250	           0xfb600	                   movzx eax, byte [rax]	        17	utf8.c	FUNCTION_1	IF_2
0x253	            0x3c5b	                            cmp al, 0x5b	        17	utf8.c	FUNCTION_1	IF_2
0x255	            0x740c	                            je 0x40002a3	        17	utf8.c	FUNCTION_1	IF_2
0x257	      0xb800000000	                              mov eax, 0	        18	utf8.c	FUNCTION_1	IF_2
0x25c	            0xeb55	                           jmp 0x40002f3	        18	utf8.c	FUNCTION_1	IF_2
0x25e	      0x488345f801	                  add qword [rbp - 8], 1	        20	utf8.c	FUNCTION_1	WHILE_1
0x263	        0x488b45f8	                mov rax, qword [rbp - 8]	        19	utf8.c	FUNCTION_1	WHILE_1	CALL_1
0x267	           0xfb600	                   movzx eax, byte [rax]	        19	utf8.c	FUNCTION_1	WHILE_1	CALL_1
0x26a	           0xfb6c0	                           movzx eax, al	        19	utf8.c	FUNCTION_1	WHILE_1	CALL_1
0x26d	            0x4898	                                    cdqe	        19	utf8.c	FUNCTION_1	WHILE_1	CALL_1
0x26f	     0xfb680000000	                   movzx eax, byte [rax]	        19	utf8.c	FUNCTION_1	WHILE_1	CALL_1
0x276	           0xfb6c0	                           movzx eax, al	        19	utf8.c	FUNCTION_1	WHILE_1	CALL_1
0x279	          0x83e002	                              and eax, 2	        19	utf8.c	FUNCTION_1	WHILE_1	CALL_1
0x27c	            0x85c0	                           test eax, eax	        19	utf8.c	FUNCTION_1	WHILE_1	CALL_1
0x27e	            0x75de	                           jne 0x400029e	        19	utf8.c	FUNCTION_1	WHILE_1	CALL_1
0x280	        0x488b45f8	                mov rax, qword [rbp - 8]	        19	utf8.c	FUNCTION_1	WHILE_1	CALL_1
0x284	           0xfb600	                   movzx eax, byte [rax]	        19	utf8.c	FUNCTION_1	WHILE_1	CALL_1
0x287	            0x3c3b	                            cmp al, 0x3b	        19	utf8.c	FUNCTION_1	WHILE_1	CALL_1
0x289	            0x74d3	                            je 0x400029e	        19	utf8.c	FUNCTION_1	WHILE_1	CALL_1
0x28b	        0x488b45f8	                mov rax, qword [rbp - 8]	        21	utf8.c	FUNCTION_1	IF_3
0x28f	        0x488d5001	                      lea rdx, [rax + 1]	        21	utf8.c	FUNCTION_1	IF_3
0x293	        0x488955f8	                mov qword [rbp - 8], rdx	        21	utf8.c	FUNCTION_1	IF_3
0x297	           0xfb600	                   movzx eax, byte [rax]	        21	utf8.c	FUNCTION_1	IF_3
0x29a	            0x3c6d	                            cmp al, 0x6d	        21	utf8.c	FUNCTION_1	IF_3
0x29c	            0x7407	                            je 0x40002e5	        21	utf8.c	FUNCTION_1	IF_3
0x29e	      0xb800000000	                              mov eax, 0	        22	utf8.c	FUNCTION_1	IF_3
0x2a3	            0xeb0e	                           jmp 0x40002f3	        22	utf8.c	FUNCTION_1	IF_3
0x2a5	        0x488b55f8	                mov rdx, qword [rbp - 8]	        23	utf8.c	FUNCTION_1
0x2a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        23	utf8.c	FUNCTION_1
0x2ad	          0x4829c2	                            sub rdx, rax	        23	utf8.c	FUNCTION_1
0x2b0	          0x4889d0	                            mov rax, rdx	        23	utf8.c	FUNCTION_1
0x2b3	              0x5d	                                 pop rbp	        24	utf8.c	FUNCTION_1
0x2b4	              0xc3	                                     ret	        24	utf8.c	FUNCTION_1
is_utf8	ELSE,0:IF,2:FOR,0:DO,0:functions,0:WHILE,1:CALL,1:SWITCH,0	37
0x892	              0x55	                                push rbp	       229	utf8.c	FUNCTION_8
0x893	          0x4889e5	                            mov rbp, rsp	       229	utf8.c	FUNCTION_8
0x896	        0x4883ec08	                              sub rsp, 8	       229	utf8.c	FUNCTION_8
0x89a	        0x48897df8	                mov qword [rbp - 8], rdi	       229	utf8.c	FUNCTION_8
0x89e	            0xeb50	                           jmp 0x4000930	       230	utf8.c	FUNCTION_8	WHILE_1
0x8a0	        0x488b45f8	                mov rax, qword [rbp - 8]	       231	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x8a4	           0xfb600	                   movzx eax, byte [rax]	       231	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x8a7	            0x3c0a	                             cmp al, 0xa	       231	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x8a9	            0x7416	                            je 0x4000901	       231	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x8ab	        0x488b45f8	                mov rax, qword [rbp - 8]	       231	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x8af	           0xfb600	                   movzx eax, byte [rax]	       231	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x8b2	            0x3c09	                               cmp al, 9	       231	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x8b4	            0x740b	                            je 0x4000901	       231	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x8b6	        0x488b45f8	                mov rax, qword [rbp - 8]	       231	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x8ba	           0xfb600	                   movzx eax, byte [rax]	       231	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x8bd	            0x3c0d	                             cmp al, 0xd	       231	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x8bf	            0x750e	                           jne 0x400090f	       231	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x8c1	        0x488b45f8	                mov rax, qword [rbp - 8]	       232	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x8c5	        0x4883c001	                              add rax, 1	       232	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x8c9	        0x488945f8	                mov qword [rbp - 8], rax	       232	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x8cd	            0xeb21	                           jmp 0x4000930	       233	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x8cf	        0x488d45f8	                      lea rax, [rbp - 8]	       235	utf8.c	FUNCTION_8	WHILE_1	CALL_1
0x8d3	      0xbe00000000	                              mov esi, 0	       235	utf8.c	FUNCTION_8	WHILE_1	CALL_1
0x8d8	          0x4889c7	                            mov rdi, rax	       235	utf8.c	FUNCTION_8	WHILE_1	CALL_1
0x8db	      0xe800000000	                          call 0x4000920	       235	utf8.c	FUNCTION_8	WHILE_1	CALL_1
0x8e0	        0x488b45f8	                mov rax, qword [rbp - 8]	       236	utf8.c	FUNCTION_8	WHILE_1	IF_2
0x8e4	          0x4885c0	                           test rax, rax	       236	utf8.c	FUNCTION_8	WHILE_1	IF_2
0x8e7	            0x7507	                           jne 0x4000930	       236	utf8.c	FUNCTION_8	WHILE_1	IF_2
0x8e9	      0xb800000000	                              mov eax, 0	       237	utf8.c	FUNCTION_8	WHILE_1	IF_2
0x8ee	            0xeb10	                           jmp 0x4000940	       237	utf8.c	FUNCTION_8	WHILE_1	IF_2
0x8f0	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	utf8.c	FUNCTION_8	WHILE_1
0x8f4	           0xfb600	                   movzx eax, byte [rax]	       230	utf8.c	FUNCTION_8	WHILE_1
0x8f7	            0x84c0	                             test al, al	       230	utf8.c	FUNCTION_8	WHILE_1
0x8f9	            0x75a5	                           jne 0x40008e0	       230	utf8.c	FUNCTION_8	WHILE_1
0x8fb	      0xb801000000	                              mov eax, 1	       239	utf8.c	FUNCTION_8
0x900	              0xc9	                                   leave	       240	utf8.c	FUNCTION_8
0x901	              0xc3	                                     ret	       240	utf8.c	FUNCTION_8
has_bom_prefix	ELSE,0:IF,0:FOR,0:DO,0:functions,0:WHILE,0:CALL,1:SWITCH,0	27
0x13dc	              0x55	                                push rbp	       565	utf8.c	FUNCTION_20
0x13dd	          0x4889e5	                            mov rbp, rsp	       565	utf8.c	FUNCTION_20
0x13e0	        0x4883ec20	                           sub rsp, 0x20	       565	utf8.c	FUNCTION_20
0x13e4	        0x48897df8	                mov qword [rbp - 8], rdi	       565	utf8.c	FUNCTION_20
0x13e8	        0x488975f0	             mov qword [rbp - 0x10], rsi	       565	utf8.c	FUNCTION_20
0x13ec	        0x488955e8	             mov qword [rbp - 0x18], rdx	       565	utf8.c	FUNCTION_20
0x13f0	        0x48894de0	             mov qword [rbp - 0x20], rcx	       565	utf8.c	FUNCTION_20
0x13f4	      0x48837df800	                  cmp qword [rbp - 8], 0	       566	utf8.c	FUNCTION_20	CALL_1
0x13f9	            0x7433	                            je 0x400146e	       566	utf8.c	FUNCTION_20	CALL_1
0x13fb	      0x48837de800	               cmp qword [rbp - 0x18], 0	       566	utf8.c	FUNCTION_20	CALL_1
0x1400	            0x742c	                            je 0x400146e	       566	utf8.c	FUNCTION_20	CALL_1
0x1402	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       566	utf8.c	FUNCTION_20	CALL_1
0x1406	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       566	utf8.c	FUNCTION_20	CALL_1
0x140a	            0x7222	                            jb 0x400146e	       566	utf8.c	FUNCTION_20	CALL_1
0x140c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       566	utf8.c	FUNCTION_20	CALL_1
0x1410	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       566	utf8.c	FUNCTION_20	CALL_1
0x1414	        0x488b45f8	                mov rax, qword [rbp - 8]	       566	utf8.c	FUNCTION_20	CALL_1
0x1418	          0x4889ce	                            mov rsi, rcx	       566	utf8.c	FUNCTION_20	CALL_1
0x141b	          0x4889c7	                            mov rdi, rax	       566	utf8.c	FUNCTION_20	CALL_1
0x141e	      0xe800000000	                          call 0x4001463	       566	utf8.c	FUNCTION_20	CALL_1
0x1423	            0x85c0	                           test eax, eax	       566	utf8.c	FUNCTION_20	CALL_1
0x1425	            0x7507	                           jne 0x400146e	       566	utf8.c	FUNCTION_20	CALL_1
0x1427	      0xb801000000	                              mov eax, 1	       566	utf8.c	FUNCTION_20	CALL_1
0x142c	            0xeb05	                           jmp 0x4001473	       566	utf8.c	FUNCTION_20	CALL_1
0x142e	      0xb800000000	                              mov eax, 0	       566	utf8.c	FUNCTION_20	CALL_1
0x1433	              0xc9	                                   leave	       567	utf8.c	FUNCTION_20
0x1434	              0xc3	                                     ret	       567	utf8.c	FUNCTION_20
strbuf_setlen	ELSE,1:IF,2:FOR,0:DO,0:functions,0:WHILE,0:CALL,2:SWITCH,0	43
0xdd	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_57
0xde	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_57
0xe1	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_57
0xe5	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_57
0xe9	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_57
0xed	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_57	IF_1
0xf1	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_57	IF_1
0xf4	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_57	IF_1
0xf7	            0x740d	                            je 0x4000146	       162	strbuf.h	FUNCTION_57	IF_1
0xf9	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_57	IF_1
0xfd	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_57	IF_1
0x100	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_57	IF_1
0x104	            0xeb05	                           jmp 0x400014b	       162	strbuf.h	FUNCTION_57	IF_1
0x106	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_57	IF_1
0x10b	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_57	IF_1
0x10f	            0x730f	                           jae 0x4000160	       162	strbuf.h	FUNCTION_57	IF_1
0x111	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_57	CALL_1
0x116	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_57	CALL_1
0x11b	      0xe800000000	                          call 0x4000160	       163	strbuf.h	FUNCTION_57	CALL_1
0x120	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_57
0x124	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_57
0x128	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_57
0x12c	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_57	IF_2
0x130	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_57	IF_2
0x134	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_57	IF_2
0x13a	            0x7414	                            je 0x4000190	       165	strbuf.h	FUNCTION_57	IF_2
0x13c	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_57	IF_2
0x140	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_57	IF_2
0x144	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_57	IF_2
0x148	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_57	IF_2
0x14b	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_57	IF_2
0x14e	            0xeb24	                           jmp 0x40001b4	       169	strbuf.h	FUNCTION_57
0x150	     0xfb605000000	           movzx eax, byte [0x04000197] 	       168	strbuf.h	FUNCTION_57	CALL_2
0x157	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_57	CALL_2
0x159	            0x7419	                            je 0x40001b4	       168	strbuf.h	FUNCTION_57	CALL_2
0x15b	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_57	CALL_2
0x160	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_57	CALL_2
0x165	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_57	CALL_2
0x16a	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_57	CALL_2
0x16f	      0xe800000000	                          call 0x40001b4	       168	strbuf.h	FUNCTION_57	CALL_2
0x174	              0x90	                                     nop	       169	strbuf.h	FUNCTION_57
0x175	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_57
0x176	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_57
utf8_fprintf	ELSE,0:IF,1:FOR,0:DO,0:functions,0:WHILE,0:CALL,6:SWITCH,0	59
0x1040	              0x55	                                push rbp	       447	utf8.c	FUNCTION_16
0x1041	          0x4889e5	                            mov rbp, rsp	       447	utf8.c	FUNCTION_16
0x1044	    0x4881ec100100	                          sub rsp, 0x110	       447	utf8.c	FUNCTION_16
0x104b	    0x4889bdf8feff	            mov qword [rbp - 0x108], rdi	       447	utf8.c	FUNCTION_16
0x1052	    0x4889b5f0feff	            mov qword [rbp - 0x110], rsi	       447	utf8.c	FUNCTION_16
0x1059	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       447	utf8.c	FUNCTION_16
0x1060	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       447	utf8.c	FUNCTION_16
0x1067	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       447	utf8.c	FUNCTION_16
0x106e	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       447	utf8.c	FUNCTION_16
0x1075	            0x84c0	                             test al, al	       447	utf8.c	FUNCTION_16
0x1077	            0x7420	                            je 0x40010d9	       447	utf8.c	FUNCTION_16
0x1079	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       447	utf8.c	FUNCTION_16
0x107d	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       447	utf8.c	FUNCTION_16
0x1081	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       447	utf8.c	FUNCTION_16
0x1085	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       447	utf8.c	FUNCTION_16
0x1089	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       447	utf8.c	FUNCTION_16
0x108d	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       447	utf8.c	FUNCTION_16
0x1091	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       447	utf8.c	FUNCTION_16
0x1095	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       447	utf8.c	FUNCTION_16
0x1099	    0x64488b042528	                mov rax, qword fs:[0x28]	       447	utf8.c	FUNCTION_16
0x10a2	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       447	utf8.c	FUNCTION_16
0x10a9	            0x31c0	                            xor eax, eax	       447	utf8.c	FUNCTION_16
0x10ab	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	       448	utf8.c	FUNCTION_16
0x10b6	    0x48c78518ffff	               mov qword [rbp - 0xe8], 0	       448	utf8.c	FUNCTION_16
0x10c1	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	       448	utf8.c	FUNCTION_16
0x10cc	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	       452	utf8.c	FUNCTION_16	CALL_1
0x10d6	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       452	utf8.c	FUNCTION_16	CALL_1
0x10e0	        0x488d4510	                   lea rax, [rbp + 0x10]	       452	utf8.c	FUNCTION_16	CALL_1
0x10e4	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       452	utf8.c	FUNCTION_16	CALL_1
0x10eb	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       452	utf8.c	FUNCTION_16	CALL_1
0x10f2	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       452	utf8.c	FUNCTION_16	CALL_1
0x10f9	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	       453	utf8.c	FUNCTION_16	CALL_2
0x1100	    0x488b8df0feff	            mov rcx, qword [rbp - 0x110]	       453	utf8.c	FUNCTION_16	CALL_2
0x1107	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	       453	utf8.c	FUNCTION_16	CALL_2
0x110e	          0x4889ce	                            mov rsi, rcx	       453	utf8.c	FUNCTION_16	CALL_2
0x1111	          0x4889c7	                            mov rdi, rax	       453	utf8.c	FUNCTION_16	CALL_2
0x1114	      0xe800000000	                          call 0x4001159	       453	utf8.c	FUNCTION_16	CALL_2
0x1119	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       456	utf8.c	FUNCTION_16	CALL_4
0x1120	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	       456	utf8.c	FUNCTION_16	CALL_4
0x1127	          0x4889d6	                            mov rsi, rdx	       456	utf8.c	FUNCTION_16	CALL_4
0x112a	          0x4889c7	                            mov rdi, rax	       456	utf8.c	FUNCTION_16	CALL_4
0x112d	      0xe800000000	                          call 0x4001172	       456	utf8.c	FUNCTION_16	CALL_4
0x1132	    0x89850cffffff	             mov dword [rbp - 0xf4], eax	       456	utf8.c	FUNCTION_16	CALL_4
0x1138	    0x83bd0cffffff	               cmp dword [rbp - 0xf4], 0	       457	utf8.c	FUNCTION_16	IF_1
0x113f	            0x7815	                            js 0x4001196	       457	utf8.c	FUNCTION_16	IF_1
0x1141	    0x488b8520ffff	             mov rax, qword [rbp - 0xe0]	       458	utf8.c	FUNCTION_16	CALL_5
0x1148	          0x4889c7	                            mov rdi, rax	       458	utf8.c	FUNCTION_16	CALL_5
0x114b	      0xe800000000	                          call 0x4001190	       458	utf8.c	FUNCTION_16	CALL_5
0x1150	    0x89850cffffff	             mov dword [rbp - 0xf4], eax	       458	utf8.c	FUNCTION_16	CALL_5
0x1156	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	       459	utf8.c	FUNCTION_16	CALL_6
0x115d	          0x4889c7	                            mov rdi, rax	       459	utf8.c	FUNCTION_16	CALL_6
0x1160	      0xe800000000	                          call 0x40011a5	       459	utf8.c	FUNCTION_16	CALL_6
0x1165	    0x8b850cffffff	             mov eax, dword [rbp - 0xf4]	       460	utf8.c	FUNCTION_16
0x116b	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	       461	utf8.c	FUNCTION_16
0x1172	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       461	utf8.c	FUNCTION_16
0x117b	            0x7405	                            je 0x40011c2	       461	utf8.c	FUNCTION_16
0x117d	      0xe800000000	                          call 0x40011c2	       461	utf8.c	FUNCTION_16
0x1182	              0xc9	                                   leave	       461	utf8.c	FUNCTION_16
0x1183	              0xc3	                                     ret	       461	utf8.c	FUNCTION_16
git_wcwidth	ELSE,0:IF,4:FOR,0:DO,0:functions,0:WHILE,0:CALL,2:SWITCH,0	37
0x374	              0x55	                                push rbp	        80	utf8.c	ELSE_2	FUNCTION_3
0x375	          0x4889e5	                            mov rbp, rsp	        80	utf8.c	ELSE_2	FUNCTION_3
0x378	        0x4883ec08	                              sub rsp, 8	        80	utf8.c	ELSE_2	FUNCTION_3
0x37c	          0x897dfc	                mov dword [rbp - 4], edi	        80	utf8.c	ELSE_2	FUNCTION_3
0x37f	        0x837dfc00	                  cmp dword [rbp - 4], 0	        87	utf8.c	ELSE_2	FUNCTION_3	IF_1
0x383	            0x7507	                           jne 0x40003cc	        87	utf8.c	ELSE_2	FUNCTION_3	IF_1
0x385	      0xb800000000	                              mov eax, 0	        88	utf8.c	ELSE_2	FUNCTION_3	IF_1
0x38a	            0xeb5f	                           jmp 0x400042b	        88	utf8.c	ELSE_2	FUNCTION_3	IF_1
0x38c	        0x837dfc1f	               cmp dword [rbp - 4], 0x1f	        89	utf8.c	ELSE_2	FUNCTION_3	IF_2
0x390	            0x760f	                           jbe 0x40003e1	        89	utf8.c	ELSE_2	FUNCTION_3	IF_2
0x392	        0x837dfc7e	               cmp dword [rbp - 4], 0x7e	        89	utf8.c	ELSE_2	FUNCTION_3	IF_2
0x396	            0x7610	                           jbe 0x40003e8	        89	utf8.c	ELSE_2	FUNCTION_3	IF_2
0x398	    0x817dfc9f0000	               cmp dword [rbp - 4], 0x9f	        89	utf8.c	ELSE_2	FUNCTION_3	IF_2
0x39f	            0x7707	                            ja 0x40003e8	        89	utf8.c	ELSE_2	FUNCTION_3	IF_2
0x3a1	      0xb8ffffffff	                     mov eax, 0xffffffff	        90	utf8.c	ELSE_2	FUNCTION_3	IF_2
0x3a6	            0xeb43	                           jmp 0x400042b	        90	utf8.c	ELSE_2	FUNCTION_3	IF_2
0x3a8	          0x8b45fc	                mov eax, dword [rbp - 4]	        93	utf8.c	ELSE_2	FUNCTION_3	IF_3	CALL_1
0x3ab	      0xba37010000	                          mov edx, 0x137	        93	utf8.c	ELSE_2	FUNCTION_3	IF_3	CALL_1
0x3b0	      0xbe00000000	                              mov esi, 0	        93	utf8.c	ELSE_2	FUNCTION_3	IF_3	CALL_1
0x3b5	            0x89c7	                            mov edi, eax	        93	utf8.c	ELSE_2	FUNCTION_3	IF_3	CALL_1
0x3b7	      0xe8f9feffff	                       call sym.bisearch	        93	utf8.c	ELSE_2	FUNCTION_3	IF_3	CALL_1
0x3bc	            0x85c0	                           test eax, eax	        93	utf8.c	ELSE_2	FUNCTION_3	IF_3	CALL_1
0x3be	            0x7407	                            je 0x4000407	        93	utf8.c	ELSE_2	FUNCTION_3	IF_3	CALL_1
0x3c0	      0xb800000000	                              mov eax, 0	        95	utf8.c	ELSE_2	FUNCTION_3	IF_3
0x3c5	            0xeb24	                           jmp 0x400042b	        95	utf8.c	ELSE_2	FUNCTION_3	IF_3
0x3c7	          0x8b45fc	                mov eax, dword [rbp - 4]	        98	utf8.c	ELSE_2	FUNCTION_3	IF_4	CALL_2
0x3ca	      0xba69000000	                           mov edx, 0x69	        98	utf8.c	ELSE_2	FUNCTION_3	IF_4	CALL_2
0x3cf	      0xbe00000000	                              mov esi, 0	        98	utf8.c	ELSE_2	FUNCTION_3	IF_4	CALL_2
0x3d4	            0x89c7	                            mov edi, eax	        98	utf8.c	ELSE_2	FUNCTION_3	IF_4	CALL_2
0x3d6	      0xe8dafeffff	                       call sym.bisearch	        98	utf8.c	ELSE_2	FUNCTION_3	IF_4	CALL_2
0x3db	            0x85c0	                           test eax, eax	        98	utf8.c	ELSE_2	FUNCTION_3	IF_4	CALL_2
0x3dd	            0x7407	                            je 0x4000426	        98	utf8.c	ELSE_2	FUNCTION_3	IF_4	CALL_2
0x3df	      0xb802000000	                              mov eax, 2	       100	utf8.c	ELSE_2	FUNCTION_3	IF_4
0x3e4	            0xeb05	                           jmp 0x400042b	       100	utf8.c	ELSE_2	FUNCTION_3	IF_4
0x3e6	      0xb801000000	                              mov eax, 1	       102	utf8.c	ELSE_2	FUNCTION_3
0x3eb	              0xc9	                                   leave	       103	utf8.c	ELSE_2	FUNCTION_3
0x3ec	              0xc3	                                     ret	       103	utf8.c	ELSE_2	FUNCTION_3
same_encoding	ELSE,0:IF,3:FOR,0:DO,0:functions,0:WHILE,0:CALL,2:SWITCH,0	30
0xfd7	              0x55	                                push rbp	       430	utf8.c	FUNCTION_15
0xfd8	          0x4889e5	                            mov rbp, rsp	       430	utf8.c	FUNCTION_15
0xfdb	        0x4883ec10	                           sub rsp, 0x10	       430	utf8.c	FUNCTION_15
0xfdf	        0x48897df8	                mov qword [rbp - 8], rdi	       430	utf8.c	FUNCTION_15
0xfe3	        0x488975f0	             mov qword [rbp - 0x10], rsi	       430	utf8.c	FUNCTION_15
0xfe7	      0x48837df800	                  cmp qword [rbp - 8], 0	       433	utf8.c	FUNCTION_15	IF_1
0xfec	            0x7508	                           jne 0x4001036	       433	utf8.c	FUNCTION_15	IF_1
0xfee	    0x48c745f80000	                  mov qword [rbp - 8], 0	       434	utf8.c	FUNCTION_15	IF_1
0xff6	      0x48837df000	               cmp qword [rbp - 0x10], 0	       435	utf8.c	FUNCTION_15	IF_2
0xffb	            0x7508	                           jne 0x4001045	       435	utf8.c	FUNCTION_15	IF_2
0xffd	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       436	utf8.c	FUNCTION_15	IF_2
0x1005	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       437	utf8.c	FUNCTION_15	IF_3	CALL_1
0x1009	        0x488b45f8	                mov rax, qword [rbp - 8]	       437	utf8.c	FUNCTION_15	IF_3	CALL_1
0x100d	          0x4889d6	                            mov rsi, rdx	       437	utf8.c	FUNCTION_15	IF_3	CALL_1
0x1010	          0x4889c7	                            mov rdi, rax	       437	utf8.c	FUNCTION_15	IF_3	CALL_1
0x1013	      0xe8d2feffff	              call sym.same_utf_encoding	       437	utf8.c	FUNCTION_15	IF_3	CALL_1
0x1018	            0x85c0	                           test eax, eax	       437	utf8.c	FUNCTION_15	IF_3	CALL_1
0x101a	            0x7407	                            je 0x4001063	       437	utf8.c	FUNCTION_15	IF_3	CALL_1
0x101c	      0xb801000000	                              mov eax, 1	       438	utf8.c	FUNCTION_15	IF_3
0x1021	            0xeb1b	                           jmp 0x400107e	       438	utf8.c	FUNCTION_15	IF_3
0x1023	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       439	utf8.c	FUNCTION_15	CALL_2
0x1027	        0x488b45f8	                mov rax, qword [rbp - 8]	       439	utf8.c	FUNCTION_15	CALL_2
0x102b	          0x4889d6	                            mov rsi, rdx	       439	utf8.c	FUNCTION_15	CALL_2
0x102e	          0x4889c7	                            mov rdi, rax	       439	utf8.c	FUNCTION_15	CALL_2
0x1031	      0xe800000000	                          call 0x4001076	       439	utf8.c	FUNCTION_15	CALL_2
0x1036	            0x85c0	                           test eax, eax	       439	utf8.c	FUNCTION_15	CALL_2
0x1038	           0xf94c0	                                 sete al	       439	utf8.c	FUNCTION_15	CALL_2
0x103b	           0xfb6c0	                           movzx eax, al	       439	utf8.c	FUNCTION_15	CALL_2
0x103e	              0xc9	                                   leave	       440	utf8.c	FUNCTION_15
0x103f	              0xc3	                                     ret	       440	utf8.c	FUNCTION_15
reencode_string_iconv	ELSE,1:IF,3:FOR,0:DO,0:functions,0:WHILE,1:CALL,4:SWITCH,0	90
0x1184	              0x55	                                push rbp	       474	utf8.c	FUNCTION_17
0x1185	          0x4889e5	                            mov rbp, rsp	       474	utf8.c	FUNCTION_17
0x1188	        0x4883ec60	                           sub rsp, 0x60	       474	utf8.c	FUNCTION_17
0x118c	        0x48897db8	             mov qword [rbp - 0x48], rdi	       474	utf8.c	FUNCTION_17
0x1190	        0x488975b0	             mov qword [rbp - 0x50], rsi	       474	utf8.c	FUNCTION_17
0x1194	        0x488955a8	             mov qword [rbp - 0x58], rdx	       474	utf8.c	FUNCTION_17
0x1198	        0x48894da0	             mov qword [rbp - 0x60], rcx	       474	utf8.c	FUNCTION_17
0x119c	    0x64488b042528	                mov rax, qword fs:[0x28]	       474	utf8.c	FUNCTION_17
0x11a5	        0x488945f8	                mov qword [rbp - 8], rax	       474	utf8.c	FUNCTION_17
0x11a9	            0x31c0	                            xor eax, eax	       474	utf8.c	FUNCTION_17
0x11ab	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       479	utf8.c	FUNCTION_17
0x11af	        0x488945c0	             mov qword [rbp - 0x40], rax	       479	utf8.c	FUNCTION_17
0x11b3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       480	utf8.c	FUNCTION_17
0x11b7	        0x4883c001	                              add rax, 1	       480	utf8.c	FUNCTION_17
0x11bb	        0x488945e0	             mov qword [rbp - 0x20], rax	       480	utf8.c	FUNCTION_17
0x11bf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       481	utf8.c	FUNCTION_17	CALL_1
0x11c3	          0x4889c7	                            mov rdi, rax	       481	utf8.c	FUNCTION_17	CALL_1
0x11c6	      0xe800000000	                          call 0x400120b	       481	utf8.c	FUNCTION_17	CALL_1
0x11cb	        0x488945d8	             mov qword [rbp - 0x28], rax	       481	utf8.c	FUNCTION_17	CALL_1
0x11cf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       482	utf8.c	FUNCTION_17
0x11d3	        0x488945c8	             mov qword [rbp - 0x38], rax	       482	utf8.c	FUNCTION_17
0x11d7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       483	utf8.c	FUNCTION_17
0x11db	        0x488945d0	             mov qword [rbp - 0x30], rax	       483	utf8.c	FUNCTION_17
0x11df	        0x488d7dc0	                   lea rdi, [rbp - 0x40]	       486	utf8.c	FUNCTION_17	WHILE_1	CALL_2
0x11e3	        0x488d4dc8	                   lea rcx, [rbp - 0x38]	       486	utf8.c	FUNCTION_17	WHILE_1	CALL_2
0x11e7	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       486	utf8.c	FUNCTION_17	WHILE_1	CALL_2
0x11eb	        0x488d75d0	                   lea rsi, [rbp - 0x30]	       486	utf8.c	FUNCTION_17	WHILE_1	CALL_2
0x11ef	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       486	utf8.c	FUNCTION_17	WHILE_1	CALL_2
0x11f3	          0x4989f8	                             mov r8, rdi	       486	utf8.c	FUNCTION_17	WHILE_1	CALL_2
0x11f6	          0x4889c7	                            mov rdi, rax	       486	utf8.c	FUNCTION_17	WHILE_1	CALL_2
0x11f9	      0xe800000000	                          call 0x400123e	       486	utf8.c	FUNCTION_17	WHILE_1	CALL_2
0x11fe	        0x488945e8	             mov qword [rbp - 0x18], rax	       486	utf8.c	FUNCTION_17	WHILE_1	CALL_2
0x1202	      0x48837de8ff	cmp qword [rbp - 0x18], 0xffffffffffffffff	       488	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x1207	     0xf8589000000	                           jne 0x40012d6	       488	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x120d	      0xe800000000	                          call 0x4001252	       490	utf8.c	FUNCTION_17	WHILE_1	IF_1	IF_2
0x1212	            0x8b00	                    mov eax, dword [rax]	       490	utf8.c	FUNCTION_17	WHILE_1	IF_1	IF_2
0x1214	          0x83f807	                              cmp eax, 7	       490	utf8.c	FUNCTION_17	WHILE_1	IF_1	IF_2
0x1217	            0x7416	                            je 0x400126f	       490	utf8.c	FUNCTION_17	WHILE_1	IF_1	IF_2
0x1219	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       491	utf8.c	FUNCTION_17	WHILE_1	IF_1	IF_2	CALL_3
0x121d	          0x4889c7	                            mov rdi, rax	       491	utf8.c	FUNCTION_17	WHILE_1	IF_1	IF_2	CALL_3
0x1220	      0xe800000000	                          call 0x4001265	       491	utf8.c	FUNCTION_17	WHILE_1	IF_1	IF_2	CALL_3
0x1225	      0xb800000000	                              mov eax, 0	       492	utf8.c	FUNCTION_17	WHILE_1	IF_1	IF_2
0x122a	      0xe993000000	                           jmp 0x4001302	       492	utf8.c	FUNCTION_17	WHILE_1	IF_1	IF_2
0x122f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       499	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x1233	          0x4889c2	                            mov rdx, rax	       499	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x1236	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       499	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x123a	          0x4829c2	                            sub rdx, rax	       499	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x123d	          0x4889d0	                            mov rax, rdx	       499	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x1240	        0x488945f0	             mov qword [rbp - 0x10], rax	       499	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x1244	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       500	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x1248	        0x488d1400	                    lea rdx, [rax + rax]	       500	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x124c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       500	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x1250	          0x4801d0	                            add rax, rdx	       500	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x1253	        0x4883c020	                           add rax, 0x20	       500	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x1257	        0x488945e0	             mov qword [rbp - 0x20], rax	       500	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x125b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       501	utf8.c	FUNCTION_17	WHILE_1	IF_1	CALL_4
0x125f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       501	utf8.c	FUNCTION_17	WHILE_1	IF_1	CALL_4
0x1263	          0x4889d6	                            mov rsi, rdx	       501	utf8.c	FUNCTION_17	WHILE_1	IF_1	CALL_4
0x1266	          0x4889c7	                            mov rdi, rax	       501	utf8.c	FUNCTION_17	WHILE_1	IF_1	CALL_4
0x1269	      0xe800000000	                          call 0x40012ae	       501	utf8.c	FUNCTION_17	WHILE_1	IF_1	CALL_4
0x126e	        0x488945d8	             mov qword [rbp - 0x28], rax	       501	utf8.c	FUNCTION_17	WHILE_1	IF_1	CALL_4
0x1272	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       502	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x1276	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       502	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x127a	          0x4801d0	                            add rax, rdx	       502	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x127d	        0x488945c8	             mov qword [rbp - 0x38], rax	       502	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x1281	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       503	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x1285	        0x482b45f0	             sub rax, qword [rbp - 0x10]	       503	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x1289	        0x4883e801	                              sub rax, 1	       503	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x128d	        0x488945c0	             mov qword [rbp - 0x40], rax	       503	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x1291	      0xe949ffffff	                           jmp 0x400121f	       503	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x1296	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       506	utf8.c	FUNCTION_17	WHILE_1	ELSE_1
0x129a	          0xc60000	                       mov byte [rax], 0	       506	utf8.c	FUNCTION_17	WHILE_1	ELSE_1
0x129d	      0x48837da000	               cmp qword [rbp - 0x60], 0	       507	utf8.c	FUNCTION_17	WHILE_1	ELSE_1	IF_3
0x12a2	            0x7419	                            je 0x40012fd	       507	utf8.c	FUNCTION_17	WHILE_1	ELSE_1	IF_3
0x12a4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       508	utf8.c	FUNCTION_17	WHILE_1	ELSE_1	IF_3
0x12a8	          0x4889c2	                            mov rdx, rax	       508	utf8.c	FUNCTION_17	WHILE_1	ELSE_1	IF_3
0x12ab	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       508	utf8.c	FUNCTION_17	WHILE_1	ELSE_1	IF_3
0x12af	          0x4829c2	                            sub rdx, rax	       508	utf8.c	FUNCTION_17	WHILE_1	ELSE_1	IF_3
0x12b2	          0x4889d0	                            mov rax, rdx	       508	utf8.c	FUNCTION_17	WHILE_1	ELSE_1	IF_3
0x12b5	            0x89c2	                            mov edx, eax	       508	utf8.c	FUNCTION_17	WHILE_1	ELSE_1	IF_3
0x12b7	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       508	utf8.c	FUNCTION_17	WHILE_1	ELSE_1	IF_3
0x12bb	            0x8910	                    mov dword [rax], edx	       508	utf8.c	FUNCTION_17	WHILE_1	ELSE_1	IF_3
0x12bd	              0x90	                                     nop	       509	utf8.c	FUNCTION_17	WHILE_1	ELSE_1
0x12be	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       512	utf8.c	FUNCTION_17
0x12c2	        0x488b4df8	                mov rcx, qword [rbp - 8]	       513	utf8.c	FUNCTION_17
0x12c6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       513	utf8.c	FUNCTION_17
0x12cf	            0x7405	                            je 0x4001316	       513	utf8.c	FUNCTION_17
0x12d1	      0xe800000000	                          call 0x4001316	       513	utf8.c	FUNCTION_17
0x12d6	              0xc9	                                   leave	       513	utf8.c	FUNCTION_17
0x12d7	              0xc3	                                     ret	       513	utf8.c	FUNCTION_17
is_hfs_dotgit	ELSE,0:IF,5:FOR,0:DO,0:functions,0:WHILE,0:CALL,6:SWITCH,0	58
0x1752	              0x55	                                push rbp	       685	utf8.c	FUNCTION_25
0x1753	          0x4889e5	                            mov rbp, rsp	       685	utf8.c	FUNCTION_25
0x1756	        0x4883ec18	                           sub rsp, 0x18	       685	utf8.c	FUNCTION_25
0x175a	        0x48897de8	             mov qword [rbp - 0x18], rdi	       685	utf8.c	FUNCTION_25
0x175e	        0x488d45e8	                   lea rax, [rbp - 0x18]	       688	utf8.c	FUNCTION_25	CALL_1
0x1762	          0x4889c7	                            mov rdi, rax	       688	utf8.c	FUNCTION_25	CALL_1
0x1765	      0xe87cffffff	                  call sym.next_hfs_char	       688	utf8.c	FUNCTION_25	CALL_1
0x176a	          0x8945fc	                mov dword [rbp - 4], eax	       688	utf8.c	FUNCTION_25	CALL_1
0x176d	        0x837dfc2e	               cmp dword [rbp - 4], 0x2e	       689	utf8.c	FUNCTION_25	IF_1
0x1771	            0x740a	                            je 0x40017bd	       689	utf8.c	FUNCTION_25	IF_1
0x1773	      0xb800000000	                              mov eax, 0	       690	utf8.c	FUNCTION_25	IF_1
0x1778	      0xe995000000	                           jmp 0x4001852	       690	utf8.c	FUNCTION_25	IF_1
0x177d	        0x488d45e8	                   lea rax, [rbp - 0x18]	       691	utf8.c	FUNCTION_25	CALL_2
0x1781	          0x4889c7	                            mov rdi, rax	       691	utf8.c	FUNCTION_25	CALL_2
0x1784	      0xe85dffffff	                  call sym.next_hfs_char	       691	utf8.c	FUNCTION_25	CALL_2
0x1789	          0x8945fc	                mov dword [rbp - 4], eax	       691	utf8.c	FUNCTION_25	CALL_2
0x178c	        0x837dfc67	               cmp dword [rbp - 4], 0x67	       698	utf8.c	FUNCTION_25	IF_2
0x1790	            0x740d	                            je 0x40017df	       698	utf8.c	FUNCTION_25	IF_2
0x1792	        0x837dfc47	               cmp dword [rbp - 4], 0x47	       698	utf8.c	FUNCTION_25	IF_2
0x1796	            0x7407	                            je 0x40017df	       698	utf8.c	FUNCTION_25	IF_2
0x1798	      0xb800000000	                              mov eax, 0	       699	utf8.c	FUNCTION_25	IF_2
0x179d	            0xeb73	                           jmp 0x4001852	       699	utf8.c	FUNCTION_25	IF_2
0x179f	        0x488d45e8	                   lea rax, [rbp - 0x18]	       700	utf8.c	FUNCTION_25	CALL_3
0x17a3	          0x4889c7	                            mov rdi, rax	       700	utf8.c	FUNCTION_25	CALL_3
0x17a6	      0xe83bffffff	                  call sym.next_hfs_char	       700	utf8.c	FUNCTION_25	CALL_3
0x17ab	          0x8945fc	                mov dword [rbp - 4], eax	       700	utf8.c	FUNCTION_25	CALL_3
0x17ae	        0x837dfc69	               cmp dword [rbp - 4], 0x69	       701	utf8.c	FUNCTION_25	IF_3
0x17b2	            0x740d	                            je 0x4001801	       701	utf8.c	FUNCTION_25	IF_3
0x17b4	        0x837dfc49	               cmp dword [rbp - 4], 0x49	       701	utf8.c	FUNCTION_25	IF_3
0x17b8	            0x7407	                            je 0x4001801	       701	utf8.c	FUNCTION_25	IF_3
0x17ba	      0xb800000000	                              mov eax, 0	       702	utf8.c	FUNCTION_25	IF_3
0x17bf	            0xeb51	                           jmp 0x4001852	       702	utf8.c	FUNCTION_25	IF_3
0x17c1	        0x488d45e8	                   lea rax, [rbp - 0x18]	       703	utf8.c	FUNCTION_25	CALL_4
0x17c5	          0x4889c7	                            mov rdi, rax	       703	utf8.c	FUNCTION_25	CALL_4
0x17c8	      0xe819ffffff	                  call sym.next_hfs_char	       703	utf8.c	FUNCTION_25	CALL_4
0x17cd	          0x8945fc	                mov dword [rbp - 4], eax	       703	utf8.c	FUNCTION_25	CALL_4
0x17d0	        0x837dfc74	               cmp dword [rbp - 4], 0x74	       704	utf8.c	FUNCTION_25	IF_4
0x17d4	            0x740d	                            je 0x4001823	       704	utf8.c	FUNCTION_25	IF_4
0x17d6	        0x837dfc54	               cmp dword [rbp - 4], 0x54	       704	utf8.c	FUNCTION_25	IF_4
0x17da	            0x7407	                            je 0x4001823	       704	utf8.c	FUNCTION_25	IF_4
0x17dc	      0xb800000000	                              mov eax, 0	       705	utf8.c	FUNCTION_25	IF_4
0x17e1	            0xeb2f	                           jmp 0x4001852	       705	utf8.c	FUNCTION_25	IF_4
0x17e3	        0x488d45e8	                   lea rax, [rbp - 0x18]	       706	utf8.c	FUNCTION_25	CALL_5
0x17e7	          0x4889c7	                            mov rdi, rax	       706	utf8.c	FUNCTION_25	CALL_5
0x17ea	      0xe8f7feffff	                  call sym.next_hfs_char	       706	utf8.c	FUNCTION_25	CALL_5
0x17ef	          0x8945fc	                mov dword [rbp - 4], eax	       706	utf8.c	FUNCTION_25	CALL_5
0x17f2	        0x837dfc00	                  cmp dword [rbp - 4], 0	       707	utf8.c	FUNCTION_25	IF_5	CALL_6
0x17f6	            0x7415	                            je 0x400184d	       707	utf8.c	FUNCTION_25	IF_5	CALL_6
0x17f8	          0x8b45fc	                mov eax, dword [rbp - 4]	       707	utf8.c	FUNCTION_25	IF_5	CALL_6
0x17fb	            0x89c7	                            mov edi, eax	       707	utf8.c	FUNCTION_25	IF_5	CALL_6
0x17fd	      0xe8fee7ffff	                 call sym.git_is_dir_sep	       707	utf8.c	FUNCTION_25	IF_5	CALL_6
0x1802	            0x85c0	                           test eax, eax	       707	utf8.c	FUNCTION_25	IF_5	CALL_6
0x1804	            0x7507	                           jne 0x400184d	       707	utf8.c	FUNCTION_25	IF_5	CALL_6
0x1806	      0xb800000000	                              mov eax, 0	       708	utf8.c	FUNCTION_25	IF_5
0x180b	            0xeb05	                           jmp 0x4001852	       708	utf8.c	FUNCTION_25	IF_5
0x180d	      0xb801000000	                              mov eax, 1	       710	utf8.c	FUNCTION_25
0x1812	              0xc9	                                   leave	       711	utf8.c	FUNCTION_25
0x1813	              0xc3	                                     ret	       711	utf8.c	FUNCTION_25
git_is_dir_sep	ELSE,0:IF,0:FOR,0:DO,0:functions,0:WHILE,0:CALL,0:SWITCH,0	8
0x0	              0x55	                                push rbp	       363	git-compat-util.h	FUNCTION_30
0x1	          0x4889e5	                            mov rbp, rsp	       363	git-compat-util.h	FUNCTION_30
0x4	          0x897dfc	                mov dword [rbp - 4], edi	       363	git-compat-util.h	FUNCTION_30
0x7	        0x837dfc2f	               cmp dword [rbp - 4], 0x2f	       364	git-compat-util.h	FUNCTION_30
0xb	           0xf94c0	                                 sete al	       364	git-compat-util.h	FUNCTION_30
0xe	           0xfb6c0	                           movzx eax, al	       364	git-compat-util.h	FUNCTION_30
0x11	              0x5d	                                 pop rbp	       365	git-compat-util.h	FUNCTION_30
0x12	              0xc3	                                     ret	       365	git-compat-util.h	FUNCTION_30
strbuf_avail	ELSE,0:IF,0:FOR,0:DO,0:functions,0:WHILE,0:CALL,0:SWITCH,0	18
0xa7	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_56
0xa8	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_56
0xab	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_56
0xaf	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_56
0xb3	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_56
0xb6	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_56
0xb9	            0x741b	                            je 0x4000116	       141	strbuf.h	FUNCTION_56
0xbb	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_56
0xbf	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_56
0xc2	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_56
0xc6	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_56
0xca	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_56
0xcd	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_56
0xd0	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_56
0xd4	            0xeb05	                           jmp 0x400011b	       141	strbuf.h	FUNCTION_56
0xd6	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_56
0xdb	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_56
0xdc	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_56
has_prohibited_utf_bom	ELSE,0:IF,0:FOR,0:DO,0:functions,0:WHILE,0:CALL,8:SWITCH,0	67
0x1435	              0x55	                                push rbp	       575	utf8.c	FUNCTION_21
0x1436	          0x4889e5	                            mov rbp, rsp	       575	utf8.c	FUNCTION_21
0x1439	        0x4883ec20	                           sub rsp, 0x20	       575	utf8.c	FUNCTION_21
0x143d	        0x48897df8	                mov qword [rbp - 8], rdi	       575	utf8.c	FUNCTION_21
0x1441	        0x488975f0	             mov qword [rbp - 0x10], rsi	       575	utf8.c	FUNCTION_21
0x1445	        0x488955e8	             mov qword [rbp - 0x18], rdx	       575	utf8.c	FUNCTION_21
0x1449	        0x488b45f8	                mov rax, qword [rbp - 8]	       577	utf8.c	FUNCTION_21	CALL_1
0x144d	          0x4889c6	                            mov rsi, rax	       577	utf8.c	FUNCTION_21	CALL_1
0x1450	      0xbf00000000	                              mov edi, 0	       577	utf8.c	FUNCTION_21	CALL_1
0x1455	      0xe890faffff	              call sym.same_utf_encoding	       577	utf8.c	FUNCTION_21	CALL_1
0x145a	            0x85c0	                           test eax, eax	       581	utf8.c	FUNCTION_21
0x145c	            0x7515	                           jne 0x40014b3	       581	utf8.c	FUNCTION_21
0x145e	        0x488b45f8	                mov rax, qword [rbp - 8]	       578	utf8.c	FUNCTION_21	CALL_2
0x1462	          0x4889c6	                            mov rsi, rax	       578	utf8.c	FUNCTION_21	CALL_2
0x1465	      0xbf00000000	                              mov edi, 0	       578	utf8.c	FUNCTION_21	CALL_2
0x146a	      0xe87bfaffff	              call sym.same_utf_encoding	       578	utf8.c	FUNCTION_21	CALL_2
0x146f	            0x85c0	                           test eax, eax	       577	utf8.c	FUNCTION_21	CALL_1
0x1471	            0x7440	                            je 0x40014f3	       577	utf8.c	FUNCTION_21	CALL_1
0x1473	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       579	utf8.c	FUNCTION_21	CALL_3
0x1477	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       579	utf8.c	FUNCTION_21	CALL_3
0x147b	      0xb902000000	                              mov ecx, 2	       579	utf8.c	FUNCTION_21	CALL_3
0x1480	      0xba00000000	                              mov edx, 0	       579	utf8.c	FUNCTION_21	CALL_3
0x1485	          0x4889c7	                            mov rdi, rax	       579	utf8.c	FUNCTION_21	CALL_3
0x1488	      0xe84fffffff	                 call sym.has_bom_prefix	       579	utf8.c	FUNCTION_21	CALL_3
0x148d	            0x85c0	                           test eax, eax	       578	utf8.c	FUNCTION_21	CALL_2
0x148f	     0xf8584000000	                           jne 0x4001559	       578	utf8.c	FUNCTION_21	CALL_2
0x1495	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       580	utf8.c	FUNCTION_21	CALL_4
0x1499	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       580	utf8.c	FUNCTION_21	CALL_4
0x149d	      0xb902000000	                              mov ecx, 2	       580	utf8.c	FUNCTION_21	CALL_4
0x14a2	      0xba00000000	                              mov edx, 0	       580	utf8.c	FUNCTION_21	CALL_4
0x14a7	          0x4889c7	                            mov rdi, rax	       580	utf8.c	FUNCTION_21	CALL_4
0x14aa	      0xe82dffffff	                 call sym.has_bom_prefix	       580	utf8.c	FUNCTION_21	CALL_4
0x14af	            0x85c0	                           test eax, eax	       579	utf8.c	FUNCTION_21	CALL_3
0x14b1	            0x7566	                           jne 0x4001559	       579	utf8.c	FUNCTION_21	CALL_3
0x14b3	        0x488b45f8	                mov rax, qword [rbp - 8]	       582	utf8.c	FUNCTION_21	CALL_5
0x14b7	          0x4889c6	                            mov rsi, rax	       582	utf8.c	FUNCTION_21	CALL_5
0x14ba	      0xbf00000000	                              mov edi, 0	       582	utf8.c	FUNCTION_21	CALL_5
0x14bf	      0xe826faffff	              call sym.same_utf_encoding	       582	utf8.c	FUNCTION_21	CALL_5
0x14c4	            0x85c0	                           test eax, eax	       581	utf8.c	FUNCTION_21
0x14c6	            0x7515	                           jne 0x400151d	       581	utf8.c	FUNCTION_21
0x14c8	        0x488b45f8	                mov rax, qword [rbp - 8]	       583	utf8.c	FUNCTION_21	CALL_6
0x14cc	          0x4889c6	                            mov rsi, rax	       583	utf8.c	FUNCTION_21	CALL_6
0x14cf	      0xbf00000000	                              mov edi, 0	       583	utf8.c	FUNCTION_21	CALL_6
0x14d4	      0xe811faffff	              call sym.same_utf_encoding	       583	utf8.c	FUNCTION_21	CALL_6
0x14d9	            0x85c0	                           test eax, eax	       582	utf8.c	FUNCTION_21	CALL_5
0x14db	            0x7443	                            je 0x4001560	       582	utf8.c	FUNCTION_21	CALL_5
0x14dd	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       584	utf8.c	FUNCTION_21	CALL_7
0x14e1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       584	utf8.c	FUNCTION_21	CALL_7
0x14e5	      0xb904000000	                              mov ecx, 4	       584	utf8.c	FUNCTION_21	CALL_7
0x14ea	      0xba00000000	                              mov edx, 0	       584	utf8.c	FUNCTION_21	CALL_7
0x14ef	          0x4889c7	                            mov rdi, rax	       584	utf8.c	FUNCTION_21	CALL_7
0x14f2	      0xe8e5feffff	                 call sym.has_bom_prefix	       584	utf8.c	FUNCTION_21	CALL_7
0x14f7	            0x85c0	                           test eax, eax	       583	utf8.c	FUNCTION_21	CALL_6
0x14f9	            0x751e	                           jne 0x4001559	       583	utf8.c	FUNCTION_21	CALL_6
0x14fb	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       585	utf8.c	FUNCTION_21	CALL_8
0x14ff	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       585	utf8.c	FUNCTION_21	CALL_8
0x1503	      0xb904000000	                              mov ecx, 4	       585	utf8.c	FUNCTION_21	CALL_8
0x1508	      0xba00000000	                              mov edx, 0	       585	utf8.c	FUNCTION_21	CALL_8
0x150d	          0x4889c7	                            mov rdi, rax	       585	utf8.c	FUNCTION_21	CALL_8
0x1510	      0xe8c7feffff	                 call sym.has_bom_prefix	       585	utf8.c	FUNCTION_21	CALL_8
0x1515	            0x85c0	                           test eax, eax	       584	utf8.c	FUNCTION_21	CALL_7
0x1517	            0x7407	                            je 0x4001560	       584	utf8.c	FUNCTION_21	CALL_7
0x1519	      0xb801000000	                              mov eax, 1	       581	utf8.c	FUNCTION_21
0x151e	            0xeb05	                           jmp 0x4001565	       581	utf8.c	FUNCTION_21
0x1520	      0xb800000000	                              mov eax, 0	       581	utf8.c	FUNCTION_21
0x1525	              0xc9	                                   leave	       587	utf8.c	FUNCTION_21
0x1526	              0xc3	                                     ret	       587	utf8.c	FUNCTION_21
strbuf_addch	ELSE,0:IF,1:FOR,0:DO,0:functions,0:WHILE,0:CALL,2:SWITCH,0	33
0x177	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_58
0x178	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_58
0x17b	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_58
0x17f	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_58
0x183	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_58
0x186	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_58	IF_1	CALL_1
0x18a	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_58	IF_1	CALL_1
0x18d	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_58	IF_1	CALL_1
0x192	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_58	IF_1	CALL_1
0x195	            0x7511	                           jne 0x40001e8	       227	strbuf.h	FUNCTION_58	IF_1	CALL_1
0x197	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_58	CALL_2
0x19b	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_58	CALL_2
0x1a0	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_58	CALL_2
0x1a3	      0xe800000000	                          call 0x40001e8	       228	strbuf.h	FUNCTION_58	CALL_2
0x1a8	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_58
0x1ac	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_58
0x1b0	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_58
0x1b4	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_58
0x1b8	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_58
0x1bc	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_58
0x1c0	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_58
0x1c4	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_58
0x1c7	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_58
0x1ca	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_58
0x1cc	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_58
0x1d0	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_58
0x1d4	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_58
0x1d8	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_58
0x1dc	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_58
0x1df	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_58
0x1e2	              0x90	                                     nop	       231	strbuf.h	FUNCTION_58
0x1e3	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_58
0x1e4	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_58
is_encoding_utf8	ELSE,0:IF,2:FOR,0:DO,0:functions,0:WHILE,0:CALL,1:SWITCH,0	19
0xf9a	              0x55	                                push rbp	       421	utf8.c	FUNCTION_14
0xf9b	          0x4889e5	                            mov rbp, rsp	       421	utf8.c	FUNCTION_14
0xf9e	        0x4883ec10	                           sub rsp, 0x10	       421	utf8.c	FUNCTION_14
0xfa2	        0x48897df8	                mov qword [rbp - 8], rdi	       421	utf8.c	FUNCTION_14
0xfa6	      0x48837df800	                  cmp qword [rbp - 8], 0	       422	utf8.c	FUNCTION_14	IF_1
0xfab	            0x7507	                           jne 0x4000ff4	       422	utf8.c	FUNCTION_14	IF_1
0xfad	      0xb801000000	                              mov eax, 1	       423	utf8.c	FUNCTION_14	IF_1
0xfb2	            0xeb21	                           jmp 0x4001015	       423	utf8.c	FUNCTION_14	IF_1
0xfb4	        0x488b45f8	                mov rax, qword [rbp - 8]	       424	utf8.c	FUNCTION_14	IF_2	CALL_1
0xfb8	          0x4889c6	                            mov rsi, rax	       424	utf8.c	FUNCTION_14	IF_2	CALL_1
0xfbb	      0xbf00000000	                              mov edi, 0	       424	utf8.c	FUNCTION_14	IF_2	CALL_1
0xfc0	      0xe825ffffff	              call sym.same_utf_encoding	       424	utf8.c	FUNCTION_14	IF_2	CALL_1
0xfc5	            0x85c0	                           test eax, eax	       424	utf8.c	FUNCTION_14	IF_2	CALL_1
0xfc7	            0x7407	                            je 0x4001010	       424	utf8.c	FUNCTION_14	IF_2	CALL_1
0xfc9	      0xb801000000	                              mov eax, 1	       425	utf8.c	FUNCTION_14	IF_2
0xfce	            0xeb05	                           jmp 0x4001015	       425	utf8.c	FUNCTION_14	IF_2
0xfd0	      0xb800000000	                              mov eax, 0	       426	utf8.c	FUNCTION_14
0xfd5	              0xc9	                                   leave	       427	utf8.c	FUNCTION_14
0xfd6	              0xc3	                                     ret	       427	utf8.c	FUNCTION_14
strbuf_add_indented_text	ELSE,0:IF,2:FOR,0:DO,0:functions,0:WHILE,1:CALL,3:SWITCH,0	48
0x902	              0x55	                                push rbp	       244	utf8.c	FUNCTION_9
0x903	          0x4889e5	                            mov rbp, rsp	       244	utf8.c	FUNCTION_9
0x906	        0x4883ec30	                           sub rsp, 0x30	       244	utf8.c	FUNCTION_9
0x90a	        0x48897de8	             mov qword [rbp - 0x18], rdi	       244	utf8.c	FUNCTION_9
0x90e	        0x488975e0	             mov qword [rbp - 0x20], rsi	       244	utf8.c	FUNCTION_9
0x912	          0x8955dc	             mov dword [rbp - 0x24], edx	       244	utf8.c	FUNCTION_9
0x915	          0x894dd8	             mov dword [rbp - 0x28], ecx	       244	utf8.c	FUNCTION_9
0x918	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       245	utf8.c	FUNCTION_9	IF_1
0x91c	            0x7977	                           jns 0x40009d5	       245	utf8.c	FUNCTION_9	IF_1
0x91e	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       246	utf8.c	FUNCTION_9	IF_1
0x925	            0xeb6e	                           jmp 0x40009d5	       247	utf8.c	FUNCTION_9	WHILE_1
0x927	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       248	utf8.c	FUNCTION_9	WHILE_1	CALL_1
0x92b	      0xbe0a000000	                            mov esi, 0xa	       248	utf8.c	FUNCTION_9	WHILE_1	CALL_1
0x930	          0x4889c7	                            mov rdi, rax	       248	utf8.c	FUNCTION_9	WHILE_1	CALL_1
0x933	      0xe800000000	                          call 0x4000978	       248	utf8.c	FUNCTION_9	WHILE_1	CALL_1
0x938	        0x488945f8	                mov qword [rbp - 8], rax	       248	utf8.c	FUNCTION_9	WHILE_1	CALL_1
0x93c	        0x488b45f8	                mov rax, qword [rbp - 8]	       249	utf8.c	FUNCTION_9	WHILE_1	IF_2
0x940	           0xfb600	                   movzx eax, byte [rax]	       249	utf8.c	FUNCTION_9	WHILE_1	IF_2
0x943	            0x3c0a	                             cmp al, 0xa	       249	utf8.c	FUNCTION_9	WHILE_1	IF_2
0x945	            0x7505	                           jne 0x400098c	       249	utf8.c	FUNCTION_9	WHILE_1	IF_2
0x947	      0x488345f801	                  add qword [rbp - 8], 1	       250	utf8.c	FUNCTION_9	WHILE_1	IF_2
0x94c	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       251	utf8.c	FUNCTION_9	WHILE_1	CALL_2
0x94f	          0x4863d0	                         movsxd rdx, eax	       251	utf8.c	FUNCTION_9	WHILE_1	CALL_2
0x952	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       251	utf8.c	FUNCTION_9	WHILE_1	CALL_2
0x956	      0xbe20000000	                           mov esi, 0x20	       251	utf8.c	FUNCTION_9	WHILE_1	CALL_2
0x95b	          0x4889c7	                            mov rdi, rax	       251	utf8.c	FUNCTION_9	WHILE_1	CALL_2
0x95e	      0xe800000000	                          call 0x40009a3	       251	utf8.c	FUNCTION_9	WHILE_1	CALL_2
0x963	        0x488b55f8	                mov rdx, qword [rbp - 8]	       252	utf8.c	FUNCTION_9	WHILE_1	CALL_3
0x967	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       252	utf8.c	FUNCTION_9	WHILE_1	CALL_3
0x96b	          0x4829c2	                            sub rdx, rax	       252	utf8.c	FUNCTION_9	WHILE_1	CALL_3
0x96e	          0x4889d0	                            mov rax, rdx	       252	utf8.c	FUNCTION_9	WHILE_1	CALL_3
0x971	          0x4889c2	                            mov rdx, rax	       252	utf8.c	FUNCTION_9	WHILE_1	CALL_3
0x974	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       252	utf8.c	FUNCTION_9	WHILE_1	CALL_3
0x978	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       252	utf8.c	FUNCTION_9	WHILE_1	CALL_3
0x97c	          0x4889ce	                            mov rsi, rcx	       252	utf8.c	FUNCTION_9	WHILE_1	CALL_3
0x97f	          0x4889c7	                            mov rdi, rax	       252	utf8.c	FUNCTION_9	WHILE_1	CALL_3
0x982	      0xe800000000	                          call 0x40009c7	       252	utf8.c	FUNCTION_9	WHILE_1	CALL_3
0x987	        0x488b45f8	                mov rax, qword [rbp - 8]	       253	utf8.c	FUNCTION_9	WHILE_1
0x98b	        0x488945e0	             mov qword [rbp - 0x20], rax	       253	utf8.c	FUNCTION_9	WHILE_1
0x98f	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       254	utf8.c	FUNCTION_9	WHILE_1
0x992	          0x8945dc	             mov dword [rbp - 0x24], eax	       254	utf8.c	FUNCTION_9	WHILE_1
0x995	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       247	utf8.c	FUNCTION_9	WHILE_1
0x999	           0xfb600	                   movzx eax, byte [rax]	       247	utf8.c	FUNCTION_9	WHILE_1
0x99c	            0x84c0	                             test al, al	       247	utf8.c	FUNCTION_9	WHILE_1
0x99e	            0x7587	                           jne 0x4000967	       247	utf8.c	FUNCTION_9	WHILE_1
0x9a0	              0x90	                                     nop	       256	utf8.c	FUNCTION_9
0x9a1	              0xc9	                                   leave	       256	utf8.c	FUNCTION_9
0x9a2	              0xc3	                                     ret	       256	utf8.c	FUNCTION_9
strbuf_swap	ELSE,0:IF,0:FOR,0:DO,0:functions,0:WHILE,0:CALL,1:SWITCH,0	39
0x13	              0x55	                                push rbp	       126	strbuf.h	FUNCTION_55
0x14	          0x4889e5	                            mov rbp, rsp	       126	strbuf.h	FUNCTION_55
0x17	        0x4883ec40	                           sub rsp, 0x40	       126	strbuf.h	FUNCTION_55
0x1b	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       126	strbuf.h	FUNCTION_55
0x1f	        0x488975c0	             mov qword [rbp - 0x40], rsi	       126	strbuf.h	FUNCTION_55
0x23	    0x64488b042528	                mov rax, qword fs:[0x28]	       126	strbuf.h	FUNCTION_55
0x2c	        0x488945f8	                mov qword [rbp - 8], rax	       126	strbuf.h	FUNCTION_55
0x30	            0x31c0	                            xor eax, eax	       126	strbuf.h	FUNCTION_55
0x32	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       127	strbuf.h	FUNCTION_55	CALL_1
0x36	        0x488945d0	             mov qword [rbp - 0x30], rax	       127	strbuf.h	FUNCTION_55	CALL_1
0x3a	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       127	strbuf.h	FUNCTION_55	CALL_1
0x3e	        0x488945d8	             mov qword [rbp - 0x28], rax	       127	strbuf.h	FUNCTION_55	CALL_1
0x42	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       127	strbuf.h	FUNCTION_55	CALL_1
0x46	          0x488b10	                    mov rdx, qword [rax]	       127	strbuf.h	FUNCTION_55	CALL_1
0x49	        0x488955e0	             mov qword [rbp - 0x20], rdx	       127	strbuf.h	FUNCTION_55	CALL_1
0x4d	        0x488b5008	                mov rdx, qword [rax + 8]	       127	strbuf.h	FUNCTION_55	CALL_1
0x51	        0x488955e8	             mov qword [rbp - 0x18], rdx	       127	strbuf.h	FUNCTION_55	CALL_1
0x55	        0x488b4010	            mov rax, qword [rax + 0x10] 	       127	strbuf.h	FUNCTION_55	CALL_1
0x59	        0x488945f0	             mov qword [rbp - 0x10], rax	       127	strbuf.h	FUNCTION_55	CALL_1
0x5d	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       127	strbuf.h	FUNCTION_55	CALL_1
0x61	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       127	strbuf.h	FUNCTION_55	CALL_1
0x65	      0xba18000000	                           mov edx, 0x18	       127	strbuf.h	FUNCTION_55	CALL_1
0x6a	          0x4889ce	                            mov rsi, rcx	       127	strbuf.h	FUNCTION_55	CALL_1
0x6d	          0x4889c7	                            mov rdi, rax	       127	strbuf.h	FUNCTION_55	CALL_1
0x70	      0xe800000000	                          call 0x40000b5	       127	strbuf.h	FUNCTION_55	CALL_1
0x75	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       127	strbuf.h	FUNCTION_55	CALL_1
0x79	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       127	strbuf.h	FUNCTION_55	CALL_1
0x7d	          0x488910	                    mov qword [rax], rdx	       127	strbuf.h	FUNCTION_55	CALL_1
0x80	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       127	strbuf.h	FUNCTION_55	CALL_1
0x84	        0x48895008	                mov qword [rax + 8], rdx	       127	strbuf.h	FUNCTION_55	CALL_1
0x88	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       127	strbuf.h	FUNCTION_55	CALL_1
0x8c	        0x48895010	             mov qword [rax + 0x10], rdx	       127	strbuf.h	FUNCTION_55	CALL_1
0x90	              0x90	                                     nop	       128	strbuf.h	FUNCTION_55
0x91	        0x488b45f8	                mov rax, qword [rbp - 8]	       128	strbuf.h	FUNCTION_55
0x95	    0x644833042528	                xor rax, qword fs:[0x28]	       128	strbuf.h	FUNCTION_55
0x9e	            0x7405	                            je 0x40000e5	       128	strbuf.h	FUNCTION_55
0xa0	      0xe800000000	                          call 0x40000e5	       128	strbuf.h	FUNCTION_55
0xa5	              0xc9	                                   leave	       128	strbuf.h	FUNCTION_55
0xa6	              0xc3	                                     ret	       128	strbuf.h	FUNCTION_55
utf8_strnwidth	ELSE,0:IF,1:FOR,0:DO,0:functions,0:WHILE,2:CALL,3:SWITCH,0	52
0x7c5	              0x55	                                push rbp	       207	utf8.c	FUNCTION_6
0x7c6	          0x4889e5	                            mov rbp, rsp	       207	utf8.c	FUNCTION_6
0x7c9	        0x4883ec20	                           sub rsp, 0x20	       207	utf8.c	FUNCTION_6
0x7cd	        0x48897de8	             mov qword [rbp - 0x18], rdi	       207	utf8.c	FUNCTION_6
0x7d1	          0x8975e4	             mov dword [rbp - 0x1c], esi	       207	utf8.c	FUNCTION_6
0x7d4	          0x8955e0	             mov dword [rbp - 0x20], edx	       207	utf8.c	FUNCTION_6
0x7d7	    0xc745f0000000	               mov dword [rbp - 0x10], 0	       208	utf8.c	FUNCTION_6
0x7de	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       209	utf8.c	FUNCTION_6
0x7e2	        0x488945f8	                mov qword [rbp - 8], rax	       209	utf8.c	FUNCTION_6
0x7e6	        0x837de4ff	cmp dword [rbp - 0x1c], 0xffffffffffffffff	       211	utf8.c	FUNCTION_6	IF_1
0x7ea	            0x7550	                           jne 0x400087c	       211	utf8.c	FUNCTION_6	IF_1
0x7ec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       212	utf8.c	FUNCTION_6	CALL_1
0x7f0	          0x4889c7	                            mov rdi, rax	       212	utf8.c	FUNCTION_6	CALL_1
0x7f3	      0xe800000000	                          call 0x4000838	       212	utf8.c	FUNCTION_6	CALL_1
0x7f8	          0x8945e4	             mov dword [rbp - 0x1c], eax	       212	utf8.c	FUNCTION_6	CALL_1
0x7fb	            0xeb3f	                           jmp 0x400087c	       213	utf8.c	FUNCTION_6	WHILE_1
0x7fd	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       217	utf8.c	FUNCTION_6	WHILE_1	WHILE_2
0x801	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       217	utf8.c	FUNCTION_6	WHILE_1	WHILE_2
0x804	            0x4898	                                    cdqe	       217	utf8.c	FUNCTION_6	WHILE_1	WHILE_2
0x806	          0x4801d0	                            add rax, rdx	       217	utf8.c	FUNCTION_6	WHILE_1	WHILE_2
0x809	        0x488945e8	             mov qword [rbp - 0x18], rax	       217	utf8.c	FUNCTION_6	WHILE_1	WHILE_2
0x80d	        0x837de000	               cmp dword [rbp - 0x20], 0	       215	utf8.c	FUNCTION_6	WHILE_1	WHILE_2
0x811	            0x7415	                            je 0x4000868	       215	utf8.c	FUNCTION_6	WHILE_1	WHILE_2
0x813	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       216	utf8.c	FUNCTION_6	WHILE_1	WHILE_2	CALL_2
0x817	          0x4889c7	                            mov rdi, rax	       216	utf8.c	FUNCTION_6	WHILE_1	WHILE_2	CALL_2
0x81a	      0xe800000000	                          call 0x400085f	       216	utf8.c	FUNCTION_6	WHILE_1	WHILE_2	CALL_2
0x81f	          0x8945f4	              mov dword [rbp - 0xc], eax	       216	utf8.c	FUNCTION_6	WHILE_1	WHILE_2	CALL_2
0x822	        0x837df400	                cmp dword [rbp - 0xc], 0	       215	utf8.c	FUNCTION_6	WHILE_1	WHILE_2
0x826	            0x75d5	                           jne 0x400083d	       215	utf8.c	FUNCTION_6	WHILE_1	WHILE_2
0x828	        0x488d45e8	                   lea rax, [rbp - 0x18]	       218	utf8.c	FUNCTION_6	WHILE_1	CALL_3
0x82c	      0xbe00000000	                              mov esi, 0	       218	utf8.c	FUNCTION_6	WHILE_1	CALL_3
0x831	          0x4889c7	                            mov rdi, rax	       218	utf8.c	FUNCTION_6	WHILE_1	CALL_3
0x834	      0xe800000000	                          call 0x4000879	       218	utf8.c	FUNCTION_6	WHILE_1	CALL_3
0x839	           0x145f0	             add dword [rbp - 0x10], eax	       218	utf8.c	FUNCTION_6	WHILE_1	CALL_3
0x83c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       213	utf8.c	FUNCTION_6	WHILE_1
0x840	          0x4885c0	                           test rax, rax	       213	utf8.c	FUNCTION_6	WHILE_1
0x843	            0x7416	                            je 0x400089b	       213	utf8.c	FUNCTION_6	WHILE_1
0x845	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       213	utf8.c	FUNCTION_6	WHILE_1
0x848	          0x4863d0	                         movsxd rdx, eax	       213	utf8.c	FUNCTION_6	WHILE_1
0x84b	        0x488b45f8	                mov rax, qword [rbp - 8]	       213	utf8.c	FUNCTION_6	WHILE_1
0x84f	          0x4801c2	                            add rdx, rax	       213	utf8.c	FUNCTION_6	WHILE_1
0x852	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       213	utf8.c	FUNCTION_6	WHILE_1
0x856	          0x4839c2	                            cmp rdx, rax	       213	utf8.c	FUNCTION_6	WHILE_1
0x859	            0x77b2	                            ja 0x400084d	       213	utf8.c	FUNCTION_6	WHILE_1
0x85b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       220	utf8.c	FUNCTION_6
0x85f	          0x4885c0	                           test rax, rax	       220	utf8.c	FUNCTION_6
0x862	            0x7405	                            je 0x40008a9	       220	utf8.c	FUNCTION_6
0x864	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       220	utf8.c	FUNCTION_6
0x867	            0xeb03	                           jmp 0x40008ac	       220	utf8.c	FUNCTION_6
0x869	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       220	utf8.c	FUNCTION_6
0x86c	              0xc9	                                   leave	       221	utf8.c	FUNCTION_6
0x86d	              0xc3	                                     ret	       221	utf8.c	FUNCTION_6
mbs_chrlen	ELSE,1:IF,3:FOR,0:DO,0:functions,0:WHILE,0:CALL,2:SWITCH,0	71
0x15eb	              0x55	                                push rbp	       612	utf8.c	FUNCTION_23
0x15ec	          0x4889e5	                            mov rbp, rsp	       612	utf8.c	FUNCTION_23
0x15ef	        0x4883ec40	                           sub rsp, 0x40	       612	utf8.c	FUNCTION_23
0x15f3	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       612	utf8.c	FUNCTION_23
0x15f7	        0x488975d0	             mov qword [rbp - 0x30], rsi	       612	utf8.c	FUNCTION_23
0x15fb	        0x488955c8	             mov qword [rbp - 0x38], rdx	       612	utf8.c	FUNCTION_23
0x15ff	    0x64488b042528	                mov rax, qword fs:[0x28]	       612	utf8.c	FUNCTION_23
0x1608	        0x488945f8	                mov qword [rbp - 8], rax	       612	utf8.c	FUNCTION_23
0x160c	            0x31c0	                            xor eax, eax	       612	utf8.c	FUNCTION_23
0x160e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       614	utf8.c	FUNCTION_23
0x1612	          0x488b00	                    mov rax, qword [rax]	       614	utf8.c	FUNCTION_23
0x1615	        0x488945e8	             mov qword [rbp - 0x18], rax	       614	utf8.c	FUNCTION_23
0x1619	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       615	utf8.c	FUNCTION_23
0x161e	            0x7409	                            je 0x4001669	       615	utf8.c	FUNCTION_23
0x1620	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       615	utf8.c	FUNCTION_23
0x1624	          0x488b00	                    mov rax, qword [rax]	       615	utf8.c	FUNCTION_23
0x1627	            0xeb07	                           jmp 0x4001670	       615	utf8.c	FUNCTION_23
0x1629	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       615	utf8.c	FUNCTION_23
0x1630	        0x488945f0	             mov qword [rbp - 0x10], rax	       615	utf8.c	FUNCTION_23
0x1634	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       617	utf8.c	FUNCTION_23	IF_1
0x1638	          0x4885c0	                           test rax, rax	       617	utf8.c	FUNCTION_23	IF_1
0x163b	            0x750a	                           jne 0x4001687	       617	utf8.c	FUNCTION_23	IF_1
0x163d	      0xb800000000	                              mov eax, 0	       618	utf8.c	FUNCTION_23	IF_1
0x1642	      0xe989000000	                           jmp 0x4001710	       618	utf8.c	FUNCTION_23	IF_1
0x1647	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       620	utf8.c	FUNCTION_23	IF_2	CALL_1
0x164b	          0x4889c7	                            mov rdi, rax	       620	utf8.c	FUNCTION_23	IF_2	CALL_1
0x164e	      0xe800000000	                          call 0x4001693	       620	utf8.c	FUNCTION_23	IF_2	CALL_1
0x1653	            0x85c0	                           test eax, eax	       620	utf8.c	FUNCTION_23	IF_2	CALL_1
0x1655	            0x743c	                            je 0x40016d3	       620	utf8.c	FUNCTION_23	IF_2	CALL_1
0x1657	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       621	utf8.c	FUNCTION_23	IF_2	CALL_2
0x165b	        0x488d45e8	                   lea rax, [rbp - 0x18]	       621	utf8.c	FUNCTION_23	IF_2	CALL_2
0x165f	          0x4889d6	                            mov rsi, rdx	       621	utf8.c	FUNCTION_23	IF_2	CALL_2
0x1662	          0x4889c7	                            mov rdi, rax	       621	utf8.c	FUNCTION_23	IF_2	CALL_2
0x1665	      0xe883edffff	             call sym.pick_one_utf8_char	       621	utf8.c	FUNCTION_23	IF_2	CALL_2
0x166a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       623	utf8.c	FUNCTION_23	IF_2
0x166e	          0x4885c0	                           test rax, rax	       623	utf8.c	FUNCTION_23	IF_2
0x1671	            0x7416	                            je 0x40016c9	       623	utf8.c	FUNCTION_23	IF_2
0x1673	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       623	utf8.c	FUNCTION_23	IF_2
0x1677	          0x4889c2	                            mov rdx, rax	       623	utf8.c	FUNCTION_23	IF_2
0x167a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       623	utf8.c	FUNCTION_23	IF_2
0x167e	          0x488b00	                    mov rax, qword [rax]	       623	utf8.c	FUNCTION_23	IF_2
0x1681	          0x4829c2	                            sub rdx, rax	       623	utf8.c	FUNCTION_23	IF_2
0x1684	          0x4889d0	                            mov rax, rdx	       623	utf8.c	FUNCTION_23	IF_2
0x1687	            0xeb05	                           jmp 0x40016ce	       623	utf8.c	FUNCTION_23	IF_2
0x1689	      0xb801000000	                              mov eax, 1	       623	utf8.c	FUNCTION_23	IF_2
0x168e	          0x8945e4	             mov dword [rbp - 0x1c], eax	       623	utf8.c	FUNCTION_23	IF_2
0x1691	            0xeb07	                           jmp 0x40016da	       623	utf8.c	FUNCTION_23	IF_2
0x1693	    0xc745e4010000	               mov dword [rbp - 0x1c], 1	       631	utf8.c	FUNCTION_23	ELSE_1
0x169a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       634	utf8.c	FUNCTION_23
0x169e	          0x488b10	                    mov rdx, qword [rax]	       634	utf8.c	FUNCTION_23
0x16a1	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       634	utf8.c	FUNCTION_23
0x16a4	            0x4898	                                    cdqe	       634	utf8.c	FUNCTION_23
0x16a6	          0x4801c2	                            add rdx, rax	       634	utf8.c	FUNCTION_23
0x16a9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       634	utf8.c	FUNCTION_23
0x16ad	          0x488910	                    mov qword [rax], rdx	       634	utf8.c	FUNCTION_23
0x16b0	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       635	utf8.c	FUNCTION_23	IF_3
0x16b5	            0x7416	                            je 0x400170d	       635	utf8.c	FUNCTION_23	IF_3
0x16b7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       636	utf8.c	FUNCTION_23	IF_3
0x16bb	          0x488b10	                    mov rdx, qword [rax]	       636	utf8.c	FUNCTION_23	IF_3
0x16be	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       636	utf8.c	FUNCTION_23	IF_3
0x16c1	            0x4898	                                    cdqe	       636	utf8.c	FUNCTION_23	IF_3
0x16c3	          0x4829c2	                            sub rdx, rax	       636	utf8.c	FUNCTION_23	IF_3
0x16c6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       636	utf8.c	FUNCTION_23	IF_3
0x16ca	          0x488910	                    mov qword [rax], rdx	       636	utf8.c	FUNCTION_23	IF_3
0x16cd	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       638	utf8.c	FUNCTION_23
0x16d0	        0x488b4df8	                mov rcx, qword [rbp - 8]	       639	utf8.c	FUNCTION_23
0x16d4	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       639	utf8.c	FUNCTION_23
0x16dd	            0x7405	                            je 0x4001724	       639	utf8.c	FUNCTION_23
0x16df	      0xe800000000	                          call 0x4001724	       639	utf8.c	FUNCTION_23
0x16e4	              0xc9	                                   leave	       639	utf8.c	FUNCTION_23
0x16e5	              0xc3	                                     ret	       639	utf8.c	FUNCTION_23
same_utf_encoding	ELSE,0:IF,1:FOR,0:DO,0:functions,0:WHILE,0:CALL,3:SWITCH,0	53
0xeea	              0x55	                                push rbp	       410	utf8.c	FUNCTION_13
0xeeb	          0x4889e5	                            mov rbp, rsp	       410	utf8.c	FUNCTION_13
0xeee	        0x4883ec20	                           sub rsp, 0x20	       410	utf8.c	FUNCTION_13
0xef2	        0x48897de8	             mov qword [rbp - 0x18], rdi	       410	utf8.c	FUNCTION_13
0xef6	        0x488975e0	             mov qword [rbp - 0x20], rsi	       410	utf8.c	FUNCTION_13
0xefa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       411	utf8.c	FUNCTION_13	IF_1	CALL_2
0xefe	      0xbe00000000	                              mov esi, 0	       411	utf8.c	FUNCTION_13	IF_1	CALL_2
0xf03	          0x4889c7	                            mov rdi, rax	       411	utf8.c	FUNCTION_13	IF_1	CALL_2
0xf06	      0xe800000000	                          call 0x4000f4b	       411	utf8.c	FUNCTION_13	IF_1	CALL_2
0xf0b	            0x85c0	                           test eax, eax	       411	utf8.c	FUNCTION_13	IF_1	CALL_2
0xf0d	     0xf8480000000	                            je 0x4000fd3	       411	utf8.c	FUNCTION_13	IF_1	CALL_2
0xf13	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       411	utf8.c	FUNCTION_13	IF_1	CALL_2
0xf17	      0xbe00000000	                              mov esi, 0	       411	utf8.c	FUNCTION_13	IF_1	CALL_2
0xf1c	          0x4889c7	                            mov rdi, rax	       411	utf8.c	FUNCTION_13	IF_1	CALL_2
0xf1f	      0xe800000000	                          call 0x4000f64	       411	utf8.c	FUNCTION_13	IF_1	CALL_2
0xf24	            0x85c0	                           test eax, eax	       411	utf8.c	FUNCTION_13	IF_1	CALL_2
0xf26	            0x746b	                            je 0x4000fd3	       411	utf8.c	FUNCTION_13	IF_1	CALL_2
0xf28	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       413	utf8.c	FUNCTION_13	IF_1
0xf2c	        0x4883c003	                              add rax, 3	       413	utf8.c	FUNCTION_13	IF_1
0xf30	           0xfb600	                   movzx eax, byte [rax]	       413	utf8.c	FUNCTION_13	IF_1
0xf33	            0x3c2d	                            cmp al, 0x2d	       413	utf8.c	FUNCTION_13	IF_1
0xf35	            0x7507	                           jne 0x4000f7e	       413	utf8.c	FUNCTION_13	IF_1
0xf37	      0xb804000000	                              mov eax, 4	       413	utf8.c	FUNCTION_13	IF_1
0xf3c	            0xeb05	                           jmp 0x4000f83	       413	utf8.c	FUNCTION_13	IF_1
0xf3e	      0xb803000000	                              mov eax, 3	       413	utf8.c	FUNCTION_13	IF_1
0xf43	          0x8945f8	                mov dword [rbp - 8], eax	       413	utf8.c	FUNCTION_13	IF_1
0xf46	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       414	utf8.c	FUNCTION_13	IF_1
0xf4a	        0x4883c003	                              add rax, 3	       414	utf8.c	FUNCTION_13	IF_1
0xf4e	           0xfb600	                   movzx eax, byte [rax]	       414	utf8.c	FUNCTION_13	IF_1
0xf51	            0x3c2d	                            cmp al, 0x2d	       414	utf8.c	FUNCTION_13	IF_1
0xf53	            0x7507	                           jne 0x4000f9c	       414	utf8.c	FUNCTION_13	IF_1
0xf55	      0xb804000000	                              mov eax, 4	       414	utf8.c	FUNCTION_13	IF_1
0xf5a	            0xeb05	                           jmp 0x4000fa1	       414	utf8.c	FUNCTION_13	IF_1
0xf5c	      0xb803000000	                              mov eax, 3	       414	utf8.c	FUNCTION_13	IF_1
0xf61	          0x8945fc	                mov dword [rbp - 4], eax	       414	utf8.c	FUNCTION_13	IF_1
0xf64	          0x8b45fc	                mov eax, dword [rbp - 4]	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0xf67	          0x4863d0	                         movsxd rdx, eax	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0xf6a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0xf6e	          0x4801c2	                            add rdx, rax	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0xf71	          0x8b45f8	                mov eax, dword [rbp - 8]	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0xf74	          0x4863c8	                         movsxd rcx, eax	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0xf77	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0xf7b	          0x4801c8	                            add rax, rcx	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0xf7e	          0x4889d6	                            mov rsi, rdx	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0xf81	          0x4889c7	                            mov rdi, rax	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0xf84	      0xe800000000	                          call 0x4000fc9	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0xf89	            0x85c0	                           test eax, eax	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0xf8b	           0xf94c0	                                 sete al	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0xf8e	           0xfb6c0	                           movzx eax, al	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0xf91	            0xeb05	                           jmp 0x4000fd8	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0xf93	      0xb800000000	                              mov eax, 0	       417	utf8.c	FUNCTION_13
0xf98	              0xc9	                                   leave	       418	utf8.c	FUNCTION_13
0xf99	              0xc3	                                     ret	       418	utf8.c	FUNCTION_13
is_missing_required_utf_bom	ELSE,0:IF,0:FOR,0:DO,0:functions,0:WHILE,0:CALL,6:SWITCH,0	55
0x1527	              0x55	                                push rbp	       590	utf8.c	FUNCTION_22
0x1528	          0x4889e5	                            mov rbp, rsp	       590	utf8.c	FUNCTION_22
0x152b	        0x4883ec20	                           sub rsp, 0x20	       590	utf8.c	FUNCTION_22
0x152f	        0x48897df8	                mov qword [rbp - 8], rdi	       590	utf8.c	FUNCTION_22
0x1533	        0x488975f0	             mov qword [rbp - 0x10], rsi	       590	utf8.c	FUNCTION_22
0x1537	        0x488955e8	             mov qword [rbp - 0x18], rdx	       590	utf8.c	FUNCTION_22
0x153b	        0x488b45f8	                mov rax, qword [rbp - 8]	       592	utf8.c	FUNCTION_22	CALL_1
0x153f	      0xbe00000000	                              mov esi, 0	       592	utf8.c	FUNCTION_22	CALL_1
0x1544	          0x4889c7	                            mov rdi, rax	       592	utf8.c	FUNCTION_22	CALL_1
0x1547	      0xe89ef9ffff	              call sym.same_utf_encoding	       592	utf8.c	FUNCTION_22	CALL_1
0x154c	            0x85c0	                           test eax, eax	       595	utf8.c	FUNCTION_22
0x154e	            0x743c	                            je 0x40015cc	       595	utf8.c	FUNCTION_22
0x1550	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       593	utf8.c	FUNCTION_22	CALL_2
0x1554	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       593	utf8.c	FUNCTION_22	CALL_2
0x1558	      0xb902000000	                              mov ecx, 2	       593	utf8.c	FUNCTION_22	CALL_2
0x155d	      0xba00000000	                              mov edx, 0	       593	utf8.c	FUNCTION_22	CALL_2
0x1562	          0x4889c7	                            mov rdi, rax	       593	utf8.c	FUNCTION_22	CALL_2
0x1565	      0xe872feffff	                 call sym.has_bom_prefix	       593	utf8.c	FUNCTION_22	CALL_2
0x156a	            0x85c0	                           test eax, eax	       592	utf8.c	FUNCTION_22	CALL_1
0x156c	            0x751e	                           jne 0x40015cc	       592	utf8.c	FUNCTION_22	CALL_1
0x156e	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       594	utf8.c	FUNCTION_22	CALL_3
0x1572	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       594	utf8.c	FUNCTION_22	CALL_3
0x1576	      0xb902000000	                              mov ecx, 2	       594	utf8.c	FUNCTION_22	CALL_3
0x157b	      0xba00000000	                              mov edx, 0	       594	utf8.c	FUNCTION_22	CALL_3
0x1580	          0x4889c7	                            mov rdi, rax	       594	utf8.c	FUNCTION_22	CALL_3
0x1583	      0xe854feffff	                 call sym.has_bom_prefix	       594	utf8.c	FUNCTION_22	CALL_3
0x1588	            0x85c0	                           test eax, eax	       593	utf8.c	FUNCTION_22	CALL_2
0x158a	            0x7451	                            je 0x400161d	       593	utf8.c	FUNCTION_22	CALL_2
0x158c	        0x488b45f8	                mov rax, qword [rbp - 8]	       596	utf8.c	FUNCTION_22	CALL_4
0x1590	      0xbe00000000	                              mov esi, 0	       596	utf8.c	FUNCTION_22	CALL_4
0x1595	          0x4889c7	                            mov rdi, rax	       596	utf8.c	FUNCTION_22	CALL_4
0x1598	      0xe84df9ffff	              call sym.same_utf_encoding	       596	utf8.c	FUNCTION_22	CALL_4
0x159d	            0x85c0	                           test eax, eax	       595	utf8.c	FUNCTION_22
0x159f	            0x7443	                            je 0x4001624	       595	utf8.c	FUNCTION_22
0x15a1	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       597	utf8.c	FUNCTION_22	CALL_5
0x15a5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       597	utf8.c	FUNCTION_22	CALL_5
0x15a9	      0xb904000000	                              mov ecx, 4	       597	utf8.c	FUNCTION_22	CALL_5
0x15ae	      0xba00000000	                              mov edx, 0	       597	utf8.c	FUNCTION_22	CALL_5
0x15b3	          0x4889c7	                            mov rdi, rax	       597	utf8.c	FUNCTION_22	CALL_5
0x15b6	      0xe821feffff	                 call sym.has_bom_prefix	       597	utf8.c	FUNCTION_22	CALL_5
0x15bb	            0x85c0	                           test eax, eax	       596	utf8.c	FUNCTION_22	CALL_4
0x15bd	            0x7525	                           jne 0x4001624	       596	utf8.c	FUNCTION_22	CALL_4
0x15bf	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       598	utf8.c	FUNCTION_22	CALL_6
0x15c3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       598	utf8.c	FUNCTION_22	CALL_6
0x15c7	      0xb904000000	                              mov ecx, 4	       598	utf8.c	FUNCTION_22	CALL_6
0x15cc	      0xba00000000	                              mov edx, 0	       598	utf8.c	FUNCTION_22	CALL_6
0x15d1	          0x4889c7	                            mov rdi, rax	       598	utf8.c	FUNCTION_22	CALL_6
0x15d4	      0xe803feffff	                 call sym.has_bom_prefix	       598	utf8.c	FUNCTION_22	CALL_6
0x15d9	            0x85c0	                           test eax, eax	       597	utf8.c	FUNCTION_22	CALL_5
0x15db	            0x7507	                           jne 0x4001624	       597	utf8.c	FUNCTION_22	CALL_5
0x15dd	      0xb801000000	                              mov eax, 1	       595	utf8.c	FUNCTION_22
0x15e2	            0xeb05	                           jmp 0x4001629	       595	utf8.c	FUNCTION_22
0x15e4	      0xb800000000	                              mov eax, 0	       595	utf8.c	FUNCTION_22
0x15e9	              0xc9	                                   leave	       600	utf8.c	FUNCTION_22
0x15ea	              0xc3	                                     ret	       600	utf8.c	FUNCTION_22
utf8_strwidth	ELSE,0:IF,0:FOR,0:DO,0:functions,0:WHILE,0:CALL,1:SWITCH,0	11
0x86e	              0x55	                                push rbp	       224	utf8.c	FUNCTION_7
0x86f	          0x4889e5	                            mov rbp, rsp	       224	utf8.c	FUNCTION_7
0x872	        0x4883ec10	                           sub rsp, 0x10	       224	utf8.c	FUNCTION_7
0x876	        0x48897df8	                mov qword [rbp - 8], rdi	       224	utf8.c	FUNCTION_7
0x87a	        0x488b45f8	                mov rax, qword [rbp - 8]	       225	utf8.c	FUNCTION_7	CALL_1
0x87e	      0xba00000000	                              mov edx, 0	       225	utf8.c	FUNCTION_7	CALL_1
0x883	      0xbeffffffff	                     mov esi, 0xffffffff	       225	utf8.c	FUNCTION_7	CALL_1
0x888	          0x4889c7	                            mov rdi, rax	       225	utf8.c	FUNCTION_7	CALL_1
0x88b	      0xe800000000	                          call 0x40008d0	       225	utf8.c	FUNCTION_7	CALL_1
0x890	              0xc9	                                   leave	       226	utf8.c	FUNCTION_7
0x891	              0xc3	                                     ret	       226	utf8.c	FUNCTION_7
fallback_encoding	ELSE,0:IF,2:FOR,0:DO,0:functions,0:WHILE,0:CALL,2:SWITCH,0	22
0x12d8	              0x55	                                push rbp	       516	utf8.c	FUNCTION_18
0x12d9	          0x4889e5	                            mov rbp, rsp	       516	utf8.c	FUNCTION_18
0x12dc	        0x4883ec10	                           sub rsp, 0x10	       516	utf8.c	FUNCTION_18
0x12e0	        0x48897df8	                mov qword [rbp - 8], rdi	       516	utf8.c	FUNCTION_18
0x12e4	        0x488b45f8	                mov rax, qword [rbp - 8]	       524	utf8.c	FUNCTION_18	IF_1	CALL_1
0x12e8	          0x4889c7	                            mov rdi, rax	       524	utf8.c	FUNCTION_18	IF_1	CALL_1
0x12eb	      0xe800000000	                          call 0x4001330	       524	utf8.c	FUNCTION_18	IF_1	CALL_1
0x12f0	            0x85c0	                           test eax, eax	       524	utf8.c	FUNCTION_18	IF_1	CALL_1
0x12f2	            0x7407	                            je 0x400133b	       524	utf8.c	FUNCTION_18	IF_1	CALL_1
0x12f4	      0xb800000000	                              mov eax, 0	       525	utf8.c	FUNCTION_18	IF_1
0x12f9	            0xeb20	                           jmp 0x400135b	       525	utf8.c	FUNCTION_18	IF_1
0x12fb	        0x488b45f8	                mov rax, qword [rbp - 8]	       531	utf8.c	FUNCTION_18	IF_2	CALL_2
0x12ff	      0xbe00000000	                              mov esi, 0	       531	utf8.c	FUNCTION_18	IF_2	CALL_2
0x1304	          0x4889c7	                            mov rdi, rax	       531	utf8.c	FUNCTION_18	IF_2	CALL_2
0x1307	      0xe800000000	                          call 0x400134c	       531	utf8.c	FUNCTION_18	IF_2	CALL_2
0x130c	            0x85c0	                           test eax, eax	       531	utf8.c	FUNCTION_18	IF_2	CALL_2
0x130e	            0x7507	                           jne 0x4001357	       531	utf8.c	FUNCTION_18	IF_2	CALL_2
0x1310	      0xb800000000	                              mov eax, 0	       532	utf8.c	FUNCTION_18	IF_2
0x1315	            0xeb04	                           jmp 0x400135b	       532	utf8.c	FUNCTION_18	IF_2
0x1317	        0x488b45f8	                mov rax, qword [rbp - 8]	       534	utf8.c	FUNCTION_18
0x131b	              0xc9	                                   leave	       535	utf8.c	FUNCTION_18
0x131c	              0xc3	                                     ret	       535	utf8.c	FUNCTION_18
utf8_width	ELSE,0:IF,1:FOR,0:DO,0:functions,0:WHILE,0:CALL,2:SWITCH,0	22
0x780	              0x55	                                push rbp	       194	utf8.c	FUNCTION_5
0x781	          0x4889e5	                            mov rbp, rsp	       194	utf8.c	FUNCTION_5
0x784	        0x4883ec20	                           sub rsp, 0x20	       194	utf8.c	FUNCTION_5
0x788	        0x48897de8	             mov qword [rbp - 0x18], rdi	       194	utf8.c	FUNCTION_5
0x78c	        0x488975e0	             mov qword [rbp - 0x20], rsi	       194	utf8.c	FUNCTION_5
0x790	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       195	utf8.c	FUNCTION_5	CALL_1
0x794	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       195	utf8.c	FUNCTION_5	CALL_1
0x798	          0x4889d6	                            mov rsi, rdx	       195	utf8.c	FUNCTION_5	CALL_1
0x79b	          0x4889c7	                            mov rdi, rax	       195	utf8.c	FUNCTION_5	CALL_1
0x79e	      0xe84afcffff	             call sym.pick_one_utf8_char	       195	utf8.c	FUNCTION_5	CALL_1
0x7a3	          0x8945fc	                mov dword [rbp - 4], eax	       195	utf8.c	FUNCTION_5	CALL_1
0x7a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       196	utf8.c	FUNCTION_5	IF_1
0x7aa	          0x488b00	                    mov rax, qword [rax]	       196	utf8.c	FUNCTION_5	IF_1
0x7ad	          0x4885c0	                           test rax, rax	       196	utf8.c	FUNCTION_5	IF_1
0x7b0	            0x7507	                           jne 0x40007f9	       196	utf8.c	FUNCTION_5	IF_1
0x7b2	      0xb800000000	                              mov eax, 0	       197	utf8.c	FUNCTION_5	IF_1
0x7b7	            0xeb0a	                           jmp 0x4000803	       197	utf8.c	FUNCTION_5	IF_1
0x7b9	          0x8b45fc	                mov eax, dword [rbp - 4]	       198	utf8.c	FUNCTION_5	CALL_2
0x7bc	            0x89c7	                            mov edi, eax	       198	utf8.c	FUNCTION_5	CALL_2
0x7be	      0xe8b1fbffff	                    call sym.git_wcwidth	       198	utf8.c	FUNCTION_5	CALL_2
0x7c3	              0xc9	                                   leave	       199	utf8.c	FUNCTION_5
0x7c4	              0xc3	                                     ret	       199	utf8.c	FUNCTION_5
pick_one_utf8_char	ELSE,5:IF,9:FOR,0:DO,0:functions,0:WHILE,0:CALL,0:SWITCH,0	246
0x3ed	              0x55	                                push rbp	       118	utf8.c	FUNCTION_4
0x3ee	          0x4889e5	                            mov rbp, rsp	       118	utf8.c	FUNCTION_4
0x3f1	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       118	utf8.c	FUNCTION_4
0x3f5	        0x488975d0	             mov qword [rbp - 0x30], rsi	       118	utf8.c	FUNCTION_4
0x3f9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       119	utf8.c	FUNCTION_4
0x3fd	          0x488b00	                    mov rax, qword [rax]	       119	utf8.c	FUNCTION_4
0x400	        0x488945f0	             mov qword [rbp - 0x10], rax	       119	utf8.c	FUNCTION_4
0x404	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       128	utf8.c	FUNCTION_4
0x409	            0x7409	                            je 0x4000454	       128	utf8.c	FUNCTION_4
0x40b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       128	utf8.c	FUNCTION_4
0x40f	          0x488b00	                    mov rax, qword [rax]	       128	utf8.c	FUNCTION_4
0x412	            0xeb05	                           jmp 0x4000459	       128	utf8.c	FUNCTION_4
0x414	      0xb8e7030000	                          mov eax, 0x3e7	       128	utf8.c	FUNCTION_4
0x419	        0x488945f8	                mov qword [rbp - 8], rax	       128	utf8.c	FUNCTION_4
0x41d	      0x48837df800	                  cmp qword [rbp - 8], 0	       130	utf8.c	FUNCTION_4	IF_1
0x422	     0xf8412030000	                            je 0x400077a	       130	utf8.c	FUNCTION_4	IF_1
0x428	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       132	utf8.c	FUNCTION_4	ELSE_1	IF_2
0x42c	           0xfb600	                   movzx eax, byte [rax]	       132	utf8.c	FUNCTION_4	ELSE_1	IF_2
0x42f	            0x84c0	                             test al, al	       132	utf8.c	FUNCTION_4	ELSE_1	IF_2
0x431	            0x781a	                            js 0x400048d	       132	utf8.c	FUNCTION_4	ELSE_1	IF_2
0x433	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       134	utf8.c	FUNCTION_4	ELSE_1	IF_2
0x437	           0xfb600	                   movzx eax, byte [rax]	       134	utf8.c	FUNCTION_4	ELSE_1	IF_2
0x43a	           0xfb6c0	                           movzx eax, al	       134	utf8.c	FUNCTION_4	ELSE_1	IF_2
0x43d	          0x8945e4	             mov dword [rbp - 0x1c], eax	       134	utf8.c	FUNCTION_4	ELSE_1	IF_2
0x440	    0x48c745e80100	               mov qword [rbp - 0x18], 1	       135	utf8.c	FUNCTION_4	ELSE_1	IF_2
0x448	      0xe900030000	                           jmp 0x400078d	       135	utf8.c	FUNCTION_4	ELSE_1	IF_2
0x44d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       136	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x451	           0xfb600	                   movzx eax, byte [rax]	       136	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x454	           0xfb6c0	                           movzx eax, al	       136	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x457	      0x25e0000000	                           and eax, 0xe0	       136	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x45c	      0x3dc0000000	                           cmp eax, 0xc0	       136	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x461	            0x7578	                           jne 0x400051b	       136	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x463	      0x48837df801	                  cmp qword [rbp - 8], 1	       138	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x468	     0xf86cd020000	                           jbe 0x400077b	       138	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x46e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       139	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x472	        0x4883c001	                              add rax, 1	       139	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x476	           0xfb600	                   movzx eax, byte [rax]	       139	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x479	           0xfb6c0	                           movzx eax, al	       139	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x47c	      0x25c0000000	                           and eax, 0xc0	       139	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x481	      0x3d80000000	                           cmp eax, 0x80	       138	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x486	     0xf85af020000	                           jne 0x400077b	       138	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x48c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       140	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x490	           0xfb600	                   movzx eax, byte [rax]	       140	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x493	           0xfb6c0	                           movzx eax, al	       140	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x496	      0x25fe000000	                           and eax, 0xfe	       140	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x49b	      0x3dc0000000	                           cmp eax, 0xc0	       139	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x4a0	     0xf8495020000	                            je 0x400077b	       139	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x4a6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4aa	           0xfb600	                   movzx eax, byte [rax]	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4ad	           0xfb6c0	                           movzx eax, al	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4b0	          0x83e01f	                           and eax, 0x1f	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4b3	          0xc1e006	                              shl eax, 6	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4b6	            0x89c2	                            mov edx, eax	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4b8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4bc	        0x4883c001	                              add rax, 1	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4c0	           0xfb600	                   movzx eax, byte [rax]	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4c3	           0xfb6c0	                           movzx eax, al	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4c6	          0x83e03f	                           and eax, 0x3f	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4c9	             0x9d0	                             or eax, edx	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4cb	          0x8945e4	             mov dword [rbp - 0x1c], eax	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4ce	    0x48c745e80200	               mov qword [rbp - 0x18], 2	       143	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4d6	      0xe972020000	                           jmp 0x400078d	       143	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4db	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       144	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x4df	           0xfb600	                   movzx eax, byte [rax]	       144	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x4e2	           0xfb6c0	                           movzx eax, al	       144	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x4e5	      0x25f0000000	                           and eax, 0xf0	       144	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x4ea	      0x3de0000000	                           cmp eax, 0xe0	       144	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x4ef	     0xf851a010000	                           jne 0x400064f	       144	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x4f5	      0x48837df802	                  cmp qword [rbp - 8], 2	       146	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4fa	     0xf863b020000	                           jbe 0x400077b	       146	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x500	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       147	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x504	        0x4883c001	                              add rax, 1	       147	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x508	           0xfb600	                   movzx eax, byte [rax]	       147	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x50b	           0xfb6c0	                           movzx eax, al	       147	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x50e	      0x25c0000000	                           and eax, 0xc0	       147	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x513	      0x3d80000000	                           cmp eax, 0x80	       146	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x518	     0xf851d020000	                           jne 0x400077b	       146	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x51e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       148	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x522	        0x4883c002	                              add rax, 2	       148	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x526	           0xfb600	                   movzx eax, byte [rax]	       148	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x529	           0xfb6c0	                           movzx eax, al	       148	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x52c	      0x25c0000000	                           and eax, 0xc0	       148	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x531	      0x3d80000000	                           cmp eax, 0x80	       147	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x536	     0xf85ff010000	                           jne 0x400077b	       147	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x53c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x540	           0xfb600	                   movzx eax, byte [rax]	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x543	            0x3ce0	                            cmp al, 0xe0	       148	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x545	            0x751e	                           jne 0x40005a5	       148	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x547	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x54b	        0x4883c001	                              add rax, 1	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x54f	           0xfb600	                   movzx eax, byte [rax]	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x552	           0xfb6c0	                           movzx eax, al	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x555	      0x25e0000000	                           and eax, 0xe0	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x55a	      0x3d80000000	                           cmp eax, 0x80	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x55f	     0xf84d6010000	                            je 0x400077b	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x565	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       152	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x569	           0xfb600	                   movzx eax, byte [rax]	       152	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x56c	            0x3ced	                            cmp al, 0xed	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x56e	            0x751e	                           jne 0x40005ce	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x570	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       152	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x574	        0x4883c001	                              add rax, 1	       152	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x578	           0xfb600	                   movzx eax, byte [rax]	       152	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x57b	           0xfb6c0	                           movzx eax, al	       152	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x57e	      0x25e0000000	                           and eax, 0xe0	       152	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x583	      0x3da0000000	                           cmp eax, 0xa0	       152	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x588	     0xf84ad010000	                            je 0x400077b	       152	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x58e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       154	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x592	           0xfb600	                   movzx eax, byte [rax]	       154	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x595	            0x3cef	                            cmp al, 0xef	       152	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x597	            0x752d	                           jne 0x4000606	       152	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x599	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       154	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x59d	        0x4883c001	                              add rax, 1	       154	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x5a1	           0xfb600	                   movzx eax, byte [rax]	       154	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x5a4	            0x3cbf	                            cmp al, 0xbf	       154	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x5a6	            0x751e	                           jne 0x4000606	       154	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x5a8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       155	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x5ac	        0x4883c002	                              add rax, 2	       155	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x5b0	           0xfb600	                   movzx eax, byte [rax]	       155	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x5b3	           0xfb6c0	                           movzx eax, al	       155	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x5b6	      0x25fe000000	                           and eax, 0xfe	       155	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x5bb	      0x3dbe000000	                           cmp eax, 0xbe	       154	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x5c0	     0xf8475010000	                            je 0x400077b	       154	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x5c6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       157	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x5ca	           0xfb600	                   movzx eax, byte [rax]	       157	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x5cd	           0xfb6c0	                           movzx eax, al	       157	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x5d0	          0xc1e00c	                            shl eax, 0xc	       157	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x5d3	           0xfb7c0	                           movzx eax, ax	       157	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x5d6	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       158	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x5da	        0x4883c201	                              add rdx, 1	       158	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x5de	           0xfb612	                   movzx edx, byte [rdx]	       158	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x5e1	           0xfb6d2	                           movzx edx, dl	       158	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x5e4	          0x83e23f	                           and edx, 0x3f	       158	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x5e7	          0xc1e206	                              shl edx, 6	       158	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x5ea	             0x9c2	                             or edx, eax	       157	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x5ec	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       158	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x5f0	        0x4883c002	                              add rax, 2	       158	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x5f4	           0xfb600	                   movzx eax, byte [rax]	       158	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x5f7	           0xfb6c0	                           movzx eax, al	       158	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x5fa	          0x83e03f	                           and eax, 0x3f	       158	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x5fd	             0x9d0	                             or eax, edx	       158	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x5ff	          0x8945e4	             mov dword [rbp - 0x1c], eax	       157	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x602	    0x48c745e80300	               mov qword [rbp - 0x18], 3	       159	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x60a	      0xe93e010000	                           jmp 0x400078d	       159	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x60f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       160	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x613	           0xfb600	                   movzx eax, byte [rax]	       160	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x616	           0xfb6c0	                           movzx eax, al	       160	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x619	      0x25f8000000	                           and eax, 0xf8	       160	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x61e	      0x3df0000000	                           cmp eax, 0xf0	       160	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x623	     0xf8512010000	                           jne 0x400077b	       160	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x629	      0x48837df803	                  cmp qword [rbp - 8], 3	       162	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x62e	     0xf8607010000	                           jbe 0x400077b	       162	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x634	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       163	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x638	        0x4883c001	                              add rax, 1	       163	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x63c	           0xfb600	                   movzx eax, byte [rax]	       163	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x63f	           0xfb6c0	                           movzx eax, al	       163	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x642	      0x25c0000000	                           and eax, 0xc0	       163	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x647	      0x3d80000000	                           cmp eax, 0x80	       162	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x64c	     0xf85e9000000	                           jne 0x400077b	       162	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x652	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       164	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x656	        0x4883c002	                              add rax, 2	       164	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x65a	           0xfb600	                   movzx eax, byte [rax]	       164	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x65d	           0xfb6c0	                           movzx eax, al	       164	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x660	      0x25c0000000	                           and eax, 0xc0	       164	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x665	      0x3d80000000	                           cmp eax, 0x80	       163	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x66a	     0xf85cb000000	                           jne 0x400077b	       163	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x670	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       165	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x674	        0x4883c003	                              add rax, 3	       165	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x678	           0xfb600	                   movzx eax, byte [rax]	       165	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x67b	           0xfb6c0	                           movzx eax, al	       165	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x67e	      0x25c0000000	                           and eax, 0xc0	       165	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x683	      0x3d80000000	                           cmp eax, 0x80	       164	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x688	     0xf85ad000000	                           jne 0x400077b	       164	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x68e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       167	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x692	           0xfb600	                   movzx eax, byte [rax]	       167	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x695	            0x3cf0	                            cmp al, 0xf0	       165	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x697	            0x751e	                           jne 0x40006f7	       165	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x699	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       167	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x69d	        0x4883c001	                              add rax, 1	       167	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x6a1	           0xfb600	                   movzx eax, byte [rax]	       167	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x6a4	           0xfb6c0	                           movzx eax, al	       167	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x6a7	      0x25f0000000	                           and eax, 0xf0	       167	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x6ac	      0x3d80000000	                           cmp eax, 0x80	       167	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x6b1	     0xf8484000000	                            je 0x400077b	       167	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x6b7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       169	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x6bb	           0xfb600	                   movzx eax, byte [rax]	       169	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x6be	            0x3cf4	                            cmp al, 0xf4	       167	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x6c0	            0x750f	                           jne 0x4000711	       167	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x6c2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       169	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x6c6	        0x4883c001	                              add rax, 1	       169	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x6ca	           0xfb600	                   movzx eax, byte [rax]	       169	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x6cd	            0x3c8f	                            cmp al, 0x8f	       169	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x6cf	            0x776a	                            ja 0x400077b	       169	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x6d1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       169	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x6d5	           0xfb600	                   movzx eax, byte [rax]	       169	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x6d8	            0x3cf4	                            cmp al, 0xf4	       169	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x6da	            0x775f	                            ja 0x400077b	       169	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x6dc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x6e0	           0xfb600	                   movzx eax, byte [rax]	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x6e3	           0xfb6c0	                           movzx eax, al	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x6e6	          0x83e007	                              and eax, 7	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x6e9	          0xc1e012	                           shl eax, 0x12	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x6ec	            0x89c2	                            mov edx, eax	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x6ee	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x6f2	        0x4883c001	                              add rax, 1	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x6f6	           0xfb600	                   movzx eax, byte [rax]	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x6f9	           0xfb6c0	                           movzx eax, al	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x6fc	          0x83e03f	                           and eax, 0x3f	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x6ff	          0xc1e00c	                            shl eax, 0xc	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x702	             0x9c2	                             or edx, eax	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x704	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       172	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x708	        0x4883c002	                              add rax, 2	       172	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x70c	           0xfb600	                   movzx eax, byte [rax]	       172	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x70f	           0xfb6c0	                           movzx eax, al	       172	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x712	          0x83e03f	                           and eax, 0x3f	       172	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x715	          0xc1e006	                              shl eax, 6	       172	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x718	             0x9c2	                             or edx, eax	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x71a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       172	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x71e	        0x4883c003	                              add rax, 3	       172	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x722	           0xfb600	                   movzx eax, byte [rax]	       172	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x725	           0xfb6c0	                           movzx eax, al	       172	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x728	          0x83e03f	                           and eax, 0x3f	       172	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x72b	             0x9d0	                             or eax, edx	       172	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x72d	          0x8945e4	             mov dword [rbp - 0x1c], eax	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x730	    0x48c745e80400	               mov qword [rbp - 0x18], 4	       173	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x738	            0xeb13	                           jmp 0x400078d	       173	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x73a	              0x90	                                     nop	       131	utf8.c	FUNCTION_4	IF_1
0x73b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       176	utf8.c	FUNCTION_4	ELSE_5
0x73f	    0x48c700000000	                      mov qword [rax], 0	       176	utf8.c	FUNCTION_4	ELSE_5
0x746	      0xb800000000	                              mov eax, 0	       177	utf8.c	FUNCTION_4	ELSE_5
0x74b	            0xeb31	                           jmp 0x40007be	       177	utf8.c	FUNCTION_4	ELSE_5
0x74d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       180	utf8.c	FUNCTION_4
0x751	          0x488b10	                    mov rdx, qword [rax]	       180	utf8.c	FUNCTION_4
0x754	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       180	utf8.c	FUNCTION_4
0x758	          0x4801c2	                            add rdx, rax	       180	utf8.c	FUNCTION_4
0x75b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       180	utf8.c	FUNCTION_4
0x75f	          0x488910	                    mov qword [rax], rdx	       180	utf8.c	FUNCTION_4
0x762	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       181	utf8.c	FUNCTION_4	IF_9
0x767	            0x7412	                            je 0x40007bb	       181	utf8.c	FUNCTION_4	IF_9
0x769	        0x488b45f8	                mov rax, qword [rbp - 8]	       182	utf8.c	FUNCTION_4	IF_9
0x76d	        0x482b45e8	             sub rax, qword [rbp - 0x18]	       182	utf8.c	FUNCTION_4	IF_9
0x771	          0x4889c2	                            mov rdx, rax	       182	utf8.c	FUNCTION_4	IF_9
0x774	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       182	utf8.c	FUNCTION_4	IF_9
0x778	          0x488910	                    mov qword [rax], rdx	       182	utf8.c	FUNCTION_4	IF_9
0x77b	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       183	utf8.c	FUNCTION_4
0x77e	              0x5d	                                 pop rbp	       184	utf8.c	FUNCTION_4
0x77f	              0xc3	                                     ret	       184	utf8.c	FUNCTION_4
bisearch	ELSE,2:IF,3:FOR,0:DO,0:functions,0:WHILE,1:CALL,0:SWITCH,0	62
0x2b5	              0x55	                                push rbp	        28	utf8.c	FUNCTION_2
0x2b6	          0x4889e5	                            mov rbp, rsp	        28	utf8.c	FUNCTION_2
0x2b9	          0x897dec	             mov dword [rbp - 0x14], edi	        28	utf8.c	FUNCTION_2
0x2bc	        0x488975e0	             mov qword [rbp - 0x20], rsi	        28	utf8.c	FUNCTION_2
0x2c0	          0x8955e8	             mov dword [rbp - 0x18], edx	        28	utf8.c	FUNCTION_2
0x2c3	    0xc745f8000000	                  mov dword [rbp - 8], 0	        29	utf8.c	FUNCTION_2
0x2ca	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        32	utf8.c	FUNCTION_2	IF_1
0x2ce	            0x8b00	                    mov eax, dword [rax]	        32	utf8.c	FUNCTION_2	IF_1
0x2d0	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	        32	utf8.c	FUNCTION_2	IF_1
0x2d3	            0x771c	                            ja 0x4000331	        32	utf8.c	FUNCTION_2	IF_1
0x2d5	          0x8b45e8	             mov eax, dword [rbp - 0x18]	        32	utf8.c	FUNCTION_2	IF_1
0x2d8	            0x4898	                                    cdqe	        32	utf8.c	FUNCTION_2	IF_1
0x2da	    0x488d14c50000	                        lea rdx, [rax*8]	        32	utf8.c	FUNCTION_2	IF_1
0x2e2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        32	utf8.c	FUNCTION_2	IF_1
0x2e6	          0x4801d0	                            add rax, rdx	        32	utf8.c	FUNCTION_2	IF_1
0x2e9	          0x8b4004	                mov eax, dword [rax + 4]	        32	utf8.c	FUNCTION_2	IF_1
0x2ec	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	        32	utf8.c	FUNCTION_2	IF_1
0x2ef	            0x7374	                           jae 0x40003a5	        32	utf8.c	FUNCTION_2	IF_1
0x2f1	      0xb800000000	                              mov eax, 0	        33	utf8.c	FUNCTION_2	IF_1
0x2f6	            0xeb7a	                           jmp 0x40003b2	        33	utf8.c	FUNCTION_2	IF_1
0x2f8	          0x8b45e8	             mov eax, dword [rbp - 0x18]	        35	utf8.c	FUNCTION_2	WHILE_1
0x2fb	          0x2b45f8	                sub eax, dword [rbp - 8]	        35	utf8.c	FUNCTION_2	WHILE_1
0x2fe	            0x89c2	                            mov edx, eax	        35	utf8.c	FUNCTION_2	WHILE_1
0x300	          0xc1ea1f	                           shr edx, 0x1f	        35	utf8.c	FUNCTION_2	WHILE_1
0x303	             0x1d0	                            add eax, edx	        35	utf8.c	FUNCTION_2	WHILE_1
0x305	            0xd1f8	                              sar eax, 1	        35	utf8.c	FUNCTION_2	WHILE_1
0x307	            0x89c2	                            mov edx, eax	        35	utf8.c	FUNCTION_2	WHILE_1
0x309	          0x8b45f8	                mov eax, dword [rbp - 8]	        35	utf8.c	FUNCTION_2	WHILE_1
0x30c	             0x1d0	                            add eax, edx	        35	utf8.c	FUNCTION_2	WHILE_1
0x30e	          0x8945fc	                mov dword [rbp - 4], eax	        35	utf8.c	FUNCTION_2	WHILE_1
0x311	          0x8b45fc	                mov eax, dword [rbp - 4]	        36	utf8.c	FUNCTION_2	WHILE_1	IF_2
0x314	            0x4898	                                    cdqe	        36	utf8.c	FUNCTION_2	WHILE_1	IF_2
0x316	    0x488d14c50000	                        lea rdx, [rax*8]	        36	utf8.c	FUNCTION_2	WHILE_1	IF_2
0x31e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        36	utf8.c	FUNCTION_2	WHILE_1	IF_2
0x322	          0x4801d0	                            add rax, rdx	        36	utf8.c	FUNCTION_2	WHILE_1	IF_2
0x325	          0x8b4004	                mov eax, dword [rax + 4]	        36	utf8.c	FUNCTION_2	WHILE_1	IF_2
0x328	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	        36	utf8.c	FUNCTION_2	WHILE_1	IF_2
0x32b	            0x730b	                           jae 0x4000378	        36	utf8.c	FUNCTION_2	WHILE_1	IF_2
0x32d	          0x8b45fc	                mov eax, dword [rbp - 4]	        37	utf8.c	FUNCTION_2	WHILE_1	IF_2
0x330	          0x83c001	                              add eax, 1	        37	utf8.c	FUNCTION_2	WHILE_1	IF_2
0x333	          0x8945f8	                mov dword [rbp - 8], eax	        37	utf8.c	FUNCTION_2	WHILE_1	IF_2
0x336	            0xeb2d	                           jmp 0x40003a5	        37	utf8.c	FUNCTION_2	WHILE_1	IF_2
0x338	          0x8b45fc	                mov eax, dword [rbp - 4]	        38	utf8.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3
0x33b	            0x4898	                                    cdqe	        38	utf8.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3
0x33d	    0x488d14c50000	                        lea rdx, [rax*8]	        38	utf8.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3
0x345	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        38	utf8.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3
0x349	          0x4801d0	                            add rax, rdx	        38	utf8.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3
0x34c	            0x8b00	                    mov eax, dword [rax]	        38	utf8.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3
0x34e	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	        38	utf8.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3
0x351	            0x760b	                           jbe 0x400039e	        38	utf8.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3
0x353	          0x8b45fc	                mov eax, dword [rbp - 4]	        39	utf8.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3
0x356	          0x83e801	                              sub eax, 1	        39	utf8.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3
0x359	          0x8945e8	             mov dword [rbp - 0x18], eax	        39	utf8.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3
0x35c	            0xeb07	                           jmp 0x40003a5	        39	utf8.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3
0x35e	      0xb801000000	                              mov eax, 1	        41	utf8.c	FUNCTION_2	WHILE_1	ELSE_2
0x363	            0xeb0d	                           jmp 0x40003b2	        41	utf8.c	FUNCTION_2	WHILE_1	ELSE_2
0x365	          0x8b45e8	             mov eax, dword [rbp - 0x18]	        34	utf8.c	FUNCTION_2	WHILE_1
0x368	          0x3b45f8	                cmp eax, dword [rbp - 8]	        34	utf8.c	FUNCTION_2	WHILE_1
0x36b	            0x7d8b	                           jge 0x4000338	        34	utf8.c	FUNCTION_2	WHILE_1
0x36d	      0xb800000000	                              mov eax, 0	        44	utf8.c	FUNCTION_2	ELSE_2
0x372	              0x5d	                                 pop rbp	        45	utf8.c	FUNCTION_2	ELSE_2
0x373	              0xc3	                                     ret	        45	utf8.c	FUNCTION_2	ELSE_2
next_hfs_char	ELSE,0:IF,1:FOR,0:DO,0:functions,0:WHILE,1:CALL,1:SWITCH,1	34
0x16e6	              0x55	                                push rbp	       647	utf8.c	FUNCTION_24
0x16e7	          0x4889e5	                            mov rbp, rsp	       647	utf8.c	FUNCTION_24
0x16ea	        0x4883ec18	                           sub rsp, 0x18	       647	utf8.c	FUNCTION_24
0x16ee	        0x48897de8	             mov qword [rbp - 0x18], rdi	       647	utf8.c	FUNCTION_24
0x16f2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       649	utf8.c	FUNCTION_24	WHILE_1	CALL_1
0x16f6	      0xbe00000000	                              mov esi, 0	       649	utf8.c	FUNCTION_24	WHILE_1	CALL_1
0x16fb	          0x4889c7	                            mov rdi, rax	       649	utf8.c	FUNCTION_24	WHILE_1	CALL_1
0x16fe	      0xe8eaecffff	             call sym.pick_one_utf8_char	       649	utf8.c	FUNCTION_24	WHILE_1	CALL_1
0x1703	          0x8945fc	                mov dword [rbp - 4], eax	       649	utf8.c	FUNCTION_24	WHILE_1	CALL_1
0x1706	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       656	utf8.c	FUNCTION_24	WHILE_1	IF_1
0x170a	          0x488b00	                    mov rax, qword [rax]	       656	utf8.c	FUNCTION_24	WHILE_1	IF_1
0x170d	          0x4885c0	                           test rax, rax	       656	utf8.c	FUNCTION_24	WHILE_1	IF_1
0x1710	            0x7507	                           jne 0x4001759	       656	utf8.c	FUNCTION_24	WHILE_1	IF_1
0x1712	      0xb800000000	                              mov eax, 0	       657	utf8.c	FUNCTION_24	WHILE_1	IF_1
0x1717	            0xeb37	                           jmp 0x4001790	       657	utf8.c	FUNCTION_24	WHILE_1	IF_1
0x1719	          0x8b45fc	                mov eax, dword [rbp - 4]	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x171c	      0x3d2e200000	                         cmp eax, 0x202e	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x1721	            0x7713	                            ja 0x4001776	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x1723	      0x3d2a200000	                         cmp eax, 0x202a	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x1728	            0x73c8	                           jae 0x4001732	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x172a	      0x2d0c200000	                         sub eax, 0x200c	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x172f	          0x83f803	                              cmp eax, 3	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x1732	            0x7719	                            ja 0x400178d	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x1734	            0xeb15	                           jmp 0x400178b	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x1736	      0x3d6a200000	                         cmp eax, 0x206a	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x173b	            0x7210	                            jb 0x400178d	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x173d	      0x3d6f200000	                         cmp eax, 0x206f	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x1742	            0x76ae	                           jbe 0x4001732	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x1744	      0x3dfffe0000	                         cmp eax, 0xfeff	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x1749	            0x7502	                           jne 0x400178d	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x174b	            0xeba5	                           jmp 0x4001732	       681	utf8.c	FUNCTION_24	WHILE_1
0x174d	          0x8b45fc	                mov eax, dword [rbp - 4]	       680	utf8.c	FUNCTION_24	WHILE_1
0x1750	              0xc9	                                   leave	       682	utf8.c	FUNCTION_24
0x1751	              0xc3	                                     ret	       682	utf8.c	FUNCTION_24
strbuf_utf8_replace	ELSE,0:IF,5:FOR,0:DO,0:functions,0:WHILE,2:CALL,10:SWITCH,0	154
0xcb1	              0x55	                                push rbp	       356	utf8.c	FUNCTION_12
0xcb2	          0x4889e5	                            mov rbp, rsp	       356	utf8.c	FUNCTION_12
0xcb5	        0x4883ec70	                           sub rsp, 0x70	       356	utf8.c	FUNCTION_12
0xcb9	        0x48897da8	             mov qword [rbp - 0x58], rdi	       356	utf8.c	FUNCTION_12
0xcbd	          0x8975a4	             mov dword [rbp - 0x5c], esi	       356	utf8.c	FUNCTION_12
0xcc0	          0x8955a0	             mov dword [rbp - 0x60], edx	       356	utf8.c	FUNCTION_12
0xcc3	        0x48894d98	             mov qword [rbp - 0x68], rcx	       356	utf8.c	FUNCTION_12
0xcc7	    0x64488b042528	                mov rax, qword fs:[0x28]	       356	utf8.c	FUNCTION_12
0xcd0	        0x488945f8	                mov qword [rbp - 8], rax	       356	utf8.c	FUNCTION_12
0xcd4	            0x31c0	                            xor eax, eax	       356	utf8.c	FUNCTION_12
0xcd6	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       357	utf8.c	FUNCTION_12
0xcde	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       357	utf8.c	FUNCTION_12
0xce6	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       357	utf8.c	FUNCTION_12
0xcee	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       358	utf8.c	FUNCTION_12
0xcf2	        0x488b4010	            mov rax, qword [rax + 0x10] 	       358	utf8.c	FUNCTION_12
0xcf6	        0x488945b8	             mov qword [rbp - 0x48], rax	       358	utf8.c	FUNCTION_12
0xcfa	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       359	utf8.c	FUNCTION_12
0xcfe	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       359	utf8.c	FUNCTION_12
0xd02	        0x488b4008	                mov rax, qword [rax + 8]	       359	utf8.c	FUNCTION_12
0xd06	          0x4801d0	                            add rax, rdx	       359	utf8.c	FUNCTION_12
0xd09	        0x488945c8	             mov qword [rbp - 0x38], rax	       359	utf8.c	FUNCTION_12
0xd0d	    0xc745b0000000	               mov dword [rbp - 0x50], 0	       361	utf8.c	FUNCTION_12
0xd14	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	       361	utf8.c	FUNCTION_12
0xd1b	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       363	utf8.c	FUNCTION_12	IF_1
0xd20	            0x740f	                            je 0x4000d71	       363	utf8.c	FUNCTION_12	IF_1
0xd22	        0x488b4598	             mov rax, qword [rbp - 0x68]	       364	utf8.c	FUNCTION_12	CALL_1
0xd26	          0x4889c7	                            mov rdi, rax	       364	utf8.c	FUNCTION_12	CALL_1
0xd29	      0xe800000000	                          call 0x4000d6e	       364	utf8.c	FUNCTION_12	CALL_1
0xd2e	          0x8945b4	             mov dword [rbp - 0x4c], eax	       364	utf8.c	FUNCTION_12	CALL_1
0xd31	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       365	utf8.c	FUNCTION_12	CALL_2
0xd35	        0x488b5008	                mov rdx, qword [rax + 8]	       365	utf8.c	FUNCTION_12	CALL_2
0xd39	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       365	utf8.c	FUNCTION_12	CALL_2
0xd3c	            0x4898	                                    cdqe	       365	utf8.c	FUNCTION_12	CALL_2
0xd3e	          0x4801c2	                            add rdx, rax	       365	utf8.c	FUNCTION_12	CALL_2
0xd41	        0x488d45e0	                   lea rax, [rbp - 0x20]	       365	utf8.c	FUNCTION_12	CALL_2
0xd45	          0x4889d6	                            mov rsi, rdx	       365	utf8.c	FUNCTION_12	CALL_2
0xd48	          0x4889c7	                            mov rdi, rax	       365	utf8.c	FUNCTION_12	CALL_2
0xd4b	      0xe800000000	                          call 0x4000d90	       365	utf8.c	FUNCTION_12	CALL_2
0xd50	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       366	utf8.c	FUNCTION_12
0xd54	        0x488945c0	             mov qword [rbp - 0x40], rax	       366	utf8.c	FUNCTION_12
0xd58	      0xe926010000	                           jmp 0x4000ec3	       368	utf8.c	FUNCTION_12	WHILE_1
0xd5d	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       373	utf8.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_4
0xd61	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       373	utf8.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_4
0xd65	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       373	utf8.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_4
0xd69	          0x4889ce	                            mov rsi, rcx	       373	utf8.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_4
0xd6c	          0x4889c7	                            mov rdi, rax	       373	utf8.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_4
0xd6f	      0xe800000000	                          call 0x4000db4	       373	utf8.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_4
0xd74	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       374	utf8.c	FUNCTION_12	WHILE_1	WHILE_2
0xd78	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       374	utf8.c	FUNCTION_12	WHILE_1	WHILE_2
0xd7c	          0x4801d0	                            add rax, rdx	       374	utf8.c	FUNCTION_12	WHILE_1	WHILE_2
0xd7f	        0x488945b8	             mov qword [rbp - 0x48], rax	       374	utf8.c	FUNCTION_12	WHILE_1	WHILE_2
0xd83	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       375	utf8.c	FUNCTION_12	WHILE_1	WHILE_2
0xd87	        0x480145c0	            add qword [rbp - 0x40], rax 	       375	utf8.c	FUNCTION_12	WHILE_1	WHILE_2
0xd8b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       372	utf8.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_3
0xd8f	          0x4889c7	                            mov rdi, rax	       372	utf8.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_3
0xd92	      0xe800000000	                          call 0x4000dd7	       372	utf8.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_3
0xd97	        0x488945d0	             mov qword [rbp - 0x30], rax	       372	utf8.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_3
0xd9b	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       372	utf8.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_3
0xda0	            0x75bb	                           jne 0x4000d9d	       372	utf8.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_3
0xda2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       378	utf8.c	FUNCTION_12	WHILE_1	IF_2
0xda6	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       378	utf8.c	FUNCTION_12	WHILE_1	IF_2
0xdaa	     0xf83e3000000	                           jae 0x4000ed3	       378	utf8.c	FUNCTION_12	WHILE_1	IF_2
0xdb0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       381	utf8.c	FUNCTION_12	WHILE_1
0xdb4	        0x488945d8	             mov qword [rbp - 0x28], rax	       381	utf8.c	FUNCTION_12	WHILE_1
0xdb8	        0x488d45b8	                   lea rax, [rbp - 0x48]	       382	utf8.c	FUNCTION_12	WHILE_1	CALL_5
0xdbc	      0xbe00000000	                              mov esi, 0	       382	utf8.c	FUNCTION_12	WHILE_1	CALL_5
0xdc1	          0x4889c7	                            mov rdi, rax	       382	utf8.c	FUNCTION_12	WHILE_1	CALL_5
0xdc4	      0xe800000000	                          call 0x4000e09	       382	utf8.c	FUNCTION_12	WHILE_1	CALL_5
0xdc9	            0x4898	                                    cdqe	       382	utf8.c	FUNCTION_12	WHILE_1	CALL_5
0xdcb	        0x488945d0	             mov qword [rbp - 0x30], rax	       382	utf8.c	FUNCTION_12	WHILE_1	CALL_5
0xdcf	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       383	utf8.c	FUNCTION_12	WHILE_1	IF_3
0xdd3	          0x4885c0	                           test rax, rax	       383	utf8.c	FUNCTION_12	WHILE_1	IF_3
0xdd6	     0xf84ea000000	                            je 0x4000f06	       383	utf8.c	FUNCTION_12	WHILE_1	IF_3
0xddc	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0xde1	            0x7456	                            je 0x4000e79	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0xde3	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0xde6	          0x3b45a4	             cmp eax, dword [rbp - 0x5c]	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0xde9	            0x7c4e	                            jl 0x4000e79	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0xdeb	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0xdee	          0x8b45a0	             mov eax, dword [rbp - 0x60]	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0xdf1	             0x1d0	                            add eax, edx	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0xdf3	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0xdf6	            0x7e41	                           jle 0x4000e79	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0xdf8	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       386	utf8.c	FUNCTION_12	WHILE_1	IF_4	IF_5
0xdfd	            0x742a	                            je 0x4000e69	       386	utf8.c	FUNCTION_12	WHILE_1	IF_4	IF_5
0xdff	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       387	utf8.c	FUNCTION_12	WHILE_1	IF_4	IF_5	CALL_6
0xe02	          0x4863d0	                         movsxd rdx, eax	       387	utf8.c	FUNCTION_12	WHILE_1	IF_4	IF_5	CALL_6
0xe05	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	       387	utf8.c	FUNCTION_12	WHILE_1	IF_4	IF_5	CALL_6
0xe09	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       387	utf8.c	FUNCTION_12	WHILE_1	IF_4	IF_5	CALL_6
0xe0d	          0x4889ce	                            mov rsi, rcx	       387	utf8.c	FUNCTION_12	WHILE_1	IF_4	IF_5	CALL_6
0xe10	          0x4889c7	                            mov rdi, rax	       387	utf8.c	FUNCTION_12	WHILE_1	IF_4	IF_5	CALL_6
0xe13	      0xe800000000	                          call 0x4000e58	       387	utf8.c	FUNCTION_12	WHILE_1	IF_4	IF_5	CALL_6
0xe18	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       388	utf8.c	FUNCTION_12	WHILE_1	IF_4	IF_5
0xe1b	            0x4898	                                    cdqe	       388	utf8.c	FUNCTION_12	WHILE_1	IF_4	IF_5
0xe1d	        0x480145c0	            add qword [rbp - 0x40], rax 	       388	utf8.c	FUNCTION_12	WHILE_1	IF_4	IF_5
0xe21	    0x48c745980000	               mov qword [rbp - 0x68], 0	       389	utf8.c	FUNCTION_12	WHILE_1	IF_4	IF_5
0xe29	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       391	utf8.c	FUNCTION_12	WHILE_1	IF_4
0xe2d	            0x89c2	                            mov edx, eax	       391	utf8.c	FUNCTION_12	WHILE_1	IF_4
0xe2f	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       391	utf8.c	FUNCTION_12	WHILE_1	IF_4
0xe32	             0x1d0	                            add eax, edx	       391	utf8.c	FUNCTION_12	WHILE_1	IF_4
0xe34	          0x8945b0	             mov dword [rbp - 0x50], eax	       391	utf8.c	FUNCTION_12	WHILE_1	IF_4
0xe37	            0xeb4a	                           jmp 0x4000ec3	       392	utf8.c	FUNCTION_12	WHILE_1	IF_4
0xe39	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       394	utf8.c	FUNCTION_12	WHILE_1	CALL_7
0xe3d	          0x4889c2	                            mov rdx, rax	       394	utf8.c	FUNCTION_12	WHILE_1	CALL_7
0xe40	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       394	utf8.c	FUNCTION_12	WHILE_1	CALL_7
0xe44	          0x4829c2	                            sub rdx, rax	       394	utf8.c	FUNCTION_12	WHILE_1	CALL_7
0xe47	          0x4889d0	                            mov rax, rdx	       394	utf8.c	FUNCTION_12	WHILE_1	CALL_7
0xe4a	          0x4889c2	                            mov rdx, rax	       394	utf8.c	FUNCTION_12	WHILE_1	CALL_7
0xe4d	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       394	utf8.c	FUNCTION_12	WHILE_1	CALL_7
0xe51	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       394	utf8.c	FUNCTION_12	WHILE_1	CALL_7
0xe55	          0x4889ce	                            mov rsi, rcx	       394	utf8.c	FUNCTION_12	WHILE_1	CALL_7
0xe58	          0x4889c7	                            mov rdi, rax	       394	utf8.c	FUNCTION_12	WHILE_1	CALL_7
0xe5b	      0xe800000000	                          call 0x4000ea0	       394	utf8.c	FUNCTION_12	WHILE_1	CALL_7
0xe60	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       395	utf8.c	FUNCTION_12	WHILE_1
0xe64	          0x4889c2	                            mov rdx, rax	       395	utf8.c	FUNCTION_12	WHILE_1
0xe67	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       395	utf8.c	FUNCTION_12	WHILE_1
0xe6b	          0x4829c2	                            sub rdx, rax	       395	utf8.c	FUNCTION_12	WHILE_1
0xe6e	          0x4889d0	                            mov rax, rdx	       395	utf8.c	FUNCTION_12	WHILE_1
0xe71	        0x480145c0	            add qword [rbp - 0x40], rax 	       395	utf8.c	FUNCTION_12	WHILE_1
0xe75	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       396	utf8.c	FUNCTION_12	WHILE_1
0xe79	            0x89c2	                            mov edx, eax	       396	utf8.c	FUNCTION_12	WHILE_1
0xe7b	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       396	utf8.c	FUNCTION_12	WHILE_1
0xe7e	             0x1d0	                            add eax, edx	       396	utf8.c	FUNCTION_12	WHILE_1
0xe80	          0x8945b0	             mov dword [rbp - 0x50], eax	       396	utf8.c	FUNCTION_12	WHILE_1
0xe83	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       368	utf8.c	FUNCTION_12	WHILE_1
0xe87	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	       368	utf8.c	FUNCTION_12	WHILE_1
0xe8b	     0xf82fafeffff	                            jb 0x4000dcb	       368	utf8.c	FUNCTION_12	WHILE_1
0xe91	            0xeb01	                           jmp 0x4000ed4	       368	utf8.c	FUNCTION_12	WHILE_1
0xe93	              0x90	                                     nop	       379	utf8.c	FUNCTION_12	WHILE_1	IF_2
0xe94	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       398	utf8.c	FUNCTION_12	CALL_8
0xe98	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       398	utf8.c	FUNCTION_12	CALL_8
0xe9c	          0x4829d0	                            sub rax, rdx	       398	utf8.c	FUNCTION_12	CALL_8
0xe9f	          0x4889c2	                            mov rdx, rax	       398	utf8.c	FUNCTION_12	CALL_8
0xea2	        0x488d45e0	                   lea rax, [rbp - 0x20]	       398	utf8.c	FUNCTION_12	CALL_8
0xea6	          0x4889d6	                            mov rsi, rdx	       398	utf8.c	FUNCTION_12	CALL_8
0xea9	          0x4889c7	                            mov rdi, rax	       398	utf8.c	FUNCTION_12	CALL_8
0xeac	      0xe82cf2ffff	                  call sym.strbuf_setlen	       398	utf8.c	FUNCTION_12	CALL_8
0xeb1	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       399	utf8.c	FUNCTION_12	CALL_9
0xeb5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       399	utf8.c	FUNCTION_12	CALL_9
0xeb9	          0x4889d6	                            mov rsi, rdx	       399	utf8.c	FUNCTION_12	CALL_9
0xebc	          0x4889c7	                            mov rdi, rax	       399	utf8.c	FUNCTION_12	CALL_9
0xebf	      0xe84ff1ffff	                    call sym.strbuf_swap	       399	utf8.c	FUNCTION_12	CALL_9
0xec4	            0xeb01	                           jmp 0x4000f07	       399	utf8.c	FUNCTION_12	CALL_9
0xec6	              0x90	                                     nop	       384	utf8.c	FUNCTION_12	WHILE_1	IF_3
0xec7	        0x488d45e0	                   lea rax, [rbp - 0x20]	       401	utf8.c	FUNCTION_12	CALL_10
0xecb	          0x4889c7	                            mov rdi, rax	       401	utf8.c	FUNCTION_12	CALL_10
0xece	      0xe800000000	                          call 0x4000f13	       401	utf8.c	FUNCTION_12	CALL_10
0xed3	              0x90	                                     nop	       402	utf8.c	FUNCTION_12
0xed4	        0x488b45f8	                mov rax, qword [rbp - 8]	       402	utf8.c	FUNCTION_12
0xed8	    0x644833042528	                xor rax, qword fs:[0x28]	       402	utf8.c	FUNCTION_12
0xee1	            0x7405	                            je 0x4000f28	       402	utf8.c	FUNCTION_12
0xee3	      0xe800000000	                          call 0x4000f28	       402	utf8.c	FUNCTION_12
0xee8	              0xc9	                                   leave	       402	utf8.c	FUNCTION_12
0xee9	              0xc3	                                     ret	       402	utf8.c	FUNCTION_12
strbuf_addstr	ELSE,0:IF,0:FOR,0:DO,0:functions,0:WHILE,0:CALL,2:SWITCH,0	17
0x1e5	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_59
0x1e6	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_59
0x1e9	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_59
0x1ed	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_59
0x1f1	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_59
0x1f5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_59	CALL_2
0x1f9	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_59	CALL_2
0x1fc	      0xe800000000	                          call 0x4000241	       279	strbuf.h	FUNCTION_59	CALL_2
0x201	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_59	CALL_2
0x204	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_59	CALL_2
0x208	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_59	CALL_2
0x20c	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_59	CALL_2
0x20f	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_59	CALL_2
0x212	      0xe800000000	                          call 0x4000257	       279	strbuf.h	FUNCTION_59	CALL_2
0x217	              0x90	                                     nop	       280	strbuf.h	FUNCTION_59
0x218	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_59
0x219	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_59
strbuf_utf8_align	ELSE,2:IF,4:FOR,0:DO,0:functions,0:WHILE,0:CALL,6:SWITCH,0	83
0x1868	              0x55	                                push rbp	       726	utf8.c	FUNCTION_27
0x1869	          0x4889e5	                            mov rbp, rsp	       726	utf8.c	FUNCTION_27
0x186c	        0x4883ec30	                           sub rsp, 0x30	       726	utf8.c	FUNCTION_27
0x1870	        0x48897de8	             mov qword [rbp - 0x18], rdi	       726	utf8.c	FUNCTION_27
0x1874	          0x8975e4	             mov dword [rbp - 0x1c], esi	       726	utf8.c	FUNCTION_27
0x1877	          0x8955e0	             mov dword [rbp - 0x20], edx	       726	utf8.c	FUNCTION_27
0x187a	        0x48894dd8	             mov qword [rbp - 0x28], rcx	       726	utf8.c	FUNCTION_27
0x187e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       727	utf8.c	FUNCTION_27	CALL_1
0x1882	          0x4889c7	                            mov rdi, rax	       727	utf8.c	FUNCTION_27	CALL_1
0x1885	      0xe800000000	                          call 0x40018ca	       727	utf8.c	FUNCTION_27	CALL_1
0x188a	          0x8945f0	             mov dword [rbp - 0x10], eax	       727	utf8.c	FUNCTION_27	CALL_1
0x188d	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	       728	utf8.c	FUNCTION_27	CALL_2
0x1890	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       728	utf8.c	FUNCTION_27	CALL_2
0x1894	      0xba00000000	                              mov edx, 0	       728	utf8.c	FUNCTION_27	CALL_2
0x1899	            0x89ce	                            mov esi, ecx	       728	utf8.c	FUNCTION_27	CALL_2
0x189b	          0x4889c7	                            mov rdi, rax	       728	utf8.c	FUNCTION_27	CALL_2
0x189e	      0xe800000000	                          call 0x40018e3	       728	utf8.c	FUNCTION_27	CALL_2
0x18a3	          0x8945f4	              mov dword [rbp - 0xc], eax	       728	utf8.c	FUNCTION_27	CALL_2
0x18a6	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       729	utf8.c	FUNCTION_27
0x18a9	          0x2b45f4	              sub eax, dword [rbp - 0xc]	       729	utf8.c	FUNCTION_27
0x18ac	          0x8945f8	                mov dword [rbp - 8], eax	       729	utf8.c	FUNCTION_27
0x18af	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       731	utf8.c	FUNCTION_27	IF_1
0x18b2	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	       731	utf8.c	FUNCTION_27	IF_1
0x18b5	            0x7218	                            jb 0x400190f	       731	utf8.c	FUNCTION_27	IF_1
0x18b7	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       732	utf8.c	FUNCTION_27	IF_1	CALL_3
0x18bb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       732	utf8.c	FUNCTION_27	IF_1	CALL_3
0x18bf	          0x4889d6	                            mov rsi, rdx	       732	utf8.c	FUNCTION_27	IF_1	CALL_3
0x18c2	          0x4889c7	                            mov rdi, rax	       732	utf8.c	FUNCTION_27	IF_1	CALL_3
0x18c5	      0xe81be9ffff	                  call sym.strbuf_addstr	       732	utf8.c	FUNCTION_27	IF_1	CALL_3
0x18ca	      0xe9ab000000	                           jmp 0x40019ba	       733	utf8.c	FUNCTION_27	IF_1
0x18cf	        0x837de400	               cmp dword [rbp - 0x1c], 0	       736	utf8.c	FUNCTION_27	IF_2
0x18d3	            0x752a	                           jne 0x400193f	       736	utf8.c	FUNCTION_27	IF_2
0x18d5	          0x8b55f8	                mov edx, dword [rbp - 8]	       737	utf8.c	FUNCTION_27	CALL_4
0x18d8	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       737	utf8.c	FUNCTION_27	CALL_4
0x18db	          0x8d3402	                    lea esi, [rdx + rax]	       737	utf8.c	FUNCTION_27	CALL_4
0x18de	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       737	utf8.c	FUNCTION_27	CALL_4
0x18e2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       737	utf8.c	FUNCTION_27	CALL_4
0x18e6	          0x4889d1	                            mov rcx, rdx	       737	utf8.c	FUNCTION_27	CALL_4
0x18e9	            0x89f2	                            mov edx, esi	       737	utf8.c	FUNCTION_27	CALL_4
0x18eb	      0xbe00000000	                              mov esi, 0	       737	utf8.c	FUNCTION_27	CALL_4
0x18f0	          0x4889c7	                            mov rdi, rax	       737	utf8.c	FUNCTION_27	CALL_4
0x18f3	      0xb800000000	                              mov eax, 0	       737	utf8.c	FUNCTION_27	CALL_4
0x18f8	      0xe800000000	                          call 0x400193d	       737	utf8.c	FUNCTION_27	CALL_4
0x18fd	            0xeb7b	                           jmp 0x40019ba	       737	utf8.c	FUNCTION_27	CALL_4
0x18ff	        0x837de401	               cmp dword [rbp - 0x1c], 1	       738	utf8.c	FUNCTION_27	ELSE_1	IF_3
0x1903	            0x7547	                           jne 0x400198c	       738	utf8.c	FUNCTION_27	ELSE_1	IF_3
0x1905	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       739	utf8.c	FUNCTION_27	ELSE_1	IF_3
0x1908	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       739	utf8.c	FUNCTION_27	ELSE_1	IF_3
0x190b	            0x29c2	                            sub edx, eax	       739	utf8.c	FUNCTION_27	ELSE_1	IF_3
0x190d	            0x89d0	                            mov eax, edx	       739	utf8.c	FUNCTION_27	ELSE_1	IF_3
0x190f	            0xd1e8	                              shr eax, 1	       739	utf8.c	FUNCTION_27	ELSE_1	IF_3
0x1911	          0x8945fc	                mov dword [rbp - 4], eax	       739	utf8.c	FUNCTION_27	ELSE_1	IF_3
0x1914	          0x8b45fc	                mov eax, dword [rbp - 4]	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x1917	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x191a	            0x29c2	                            sub edx, eax	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x191c	          0x8b45f8	                mov eax, dword [rbp - 8]	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x191f	          0x8d3402	                    lea esi, [rdx + rax]	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x1922	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x1926	          0x8b55fc	                mov edx, dword [rbp - 4]	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x1929	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x192d	          0x4989c9	                             mov r9, rcx	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x1930	          0x4189f0	                            mov r8d, esi	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x1933	      0xb900000000	                              mov ecx, 0	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x1938	      0xbe00000000	                              mov esi, 0	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x193d	          0x4889c7	                            mov rdi, rax	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x1940	      0xb800000000	                              mov eax, 0	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x1945	      0xe800000000	                          call 0x400198a	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x194a	            0xeb2e	                           jmp 0x40019ba	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x194c	        0x837de402	               cmp dword [rbp - 0x1c], 2	       741	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x1950	            0x7528	                           jne 0x40019ba	       741	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x1952	          0x8b55f8	                mov edx, dword [rbp - 8]	       742	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x1955	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       742	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x1958	          0x8d3402	                    lea esi, [rdx + rax]	       742	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x195b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       742	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x195f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       742	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x1963	          0x4889d1	                            mov rcx, rdx	       742	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x1966	            0x89f2	                            mov edx, esi	       742	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x1968	      0xbe00000000	                              mov esi, 0	       742	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x196d	          0x4889c7	                            mov rdi, rax	       742	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x1970	      0xb800000000	                              mov eax, 0	       742	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x1975	      0xe800000000	                          call 0x40019ba	       742	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x197a	              0xc9	                                   leave	       743	utf8.c	FUNCTION_27
0x197b	              0xc3	                                     ret	       743	utf8.c	FUNCTION_27
skip_utf8_bom	ELSE,0:IF,1:FOR,0:DO,0:functions,0:WHILE,0:CALL,4:SWITCH,0	25
0x1814	              0x55	                                push rbp	       716	utf8.c	FUNCTION_26
0x1815	          0x4889e5	                            mov rbp, rsp	       716	utf8.c	FUNCTION_26
0x1818	        0x4883ec10	                           sub rsp, 0x10	       716	utf8.c	FUNCTION_26
0x181c	        0x48897df8	                mov qword [rbp - 8], rdi	       716	utf8.c	FUNCTION_26
0x1820	        0x488975f0	             mov qword [rbp - 0x10], rsi	       716	utf8.c	FUNCTION_26
0x1824	      0x48837df002	               cmp qword [rbp - 0x10], 2	       717	utf8.c	FUNCTION_26	IF_1	CALL_1
0x1829	            0x761d	                           jbe 0x4001888	       717	utf8.c	FUNCTION_26	IF_1	CALL_1
0x182b	        0x488b45f8	                mov rax, qword [rbp - 8]	       718	utf8.c	FUNCTION_26	IF_1	CALL_3
0x182f	          0x488b00	                    mov rax, qword [rax]	       718	utf8.c	FUNCTION_26	IF_1	CALL_3
0x1832	      0xba03000000	                              mov edx, 3	       718	utf8.c	FUNCTION_26	IF_1	CALL_3
0x1837	      0xbe00000000	                              mov esi, 0	       718	utf8.c	FUNCTION_26	IF_1	CALL_3
0x183c	          0x4889c7	                            mov rdi, rax	       718	utf8.c	FUNCTION_26	IF_1	CALL_3
0x183f	      0xe800000000	                          call 0x4001884	       718	utf8.c	FUNCTION_26	IF_1	CALL_3
0x1844	            0x85c0	                           test eax, eax	       717	utf8.c	FUNCTION_26	IF_1	CALL_1
0x1846	            0x7407	                            je 0x400188f	       717	utf8.c	FUNCTION_26	IF_1	CALL_1
0x1848	      0xb800000000	                              mov eax, 0	       719	utf8.c	FUNCTION_26	IF_1
0x184d	            0xeb17	                           jmp 0x40018a6	       719	utf8.c	FUNCTION_26	IF_1
0x184f	        0x488b45f8	                mov rax, qword [rbp - 8]	       720	utf8.c	FUNCTION_26	CALL_4
0x1853	          0x488b00	                    mov rax, qword [rax]	       720	utf8.c	FUNCTION_26	CALL_4
0x1856	        0x488d5003	                      lea rdx, [rax + 3]	       720	utf8.c	FUNCTION_26	CALL_4
0x185a	        0x488b45f8	                mov rax, qword [rbp - 8]	       720	utf8.c	FUNCTION_26	CALL_4
0x185e	          0x488910	                    mov qword [rax], rdx	       720	utf8.c	FUNCTION_26	CALL_4
0x1861	      0xb801000000	                              mov eax, 1	       721	utf8.c	FUNCTION_26
0x1866	              0xc9	                                   leave	       722	utf8.c	FUNCTION_26
0x1867	              0xc3	                                     ret	       722	utf8.c	FUNCTION_26
strbuf_add_wrapped_bytes	ELSE,0:IF,0:FOR,0:DO,0:functions,0:WHILE,0:CALL,3:SWITCH,0	30
0xc4f	              0x55	                                push rbp	       348	utf8.c	FUNCTION_11
0xc50	          0x4889e5	                            mov rbp, rsp	       348	utf8.c	FUNCTION_11
0xc53	        0x4883ec30	                           sub rsp, 0x30	       348	utf8.c	FUNCTION_11
0xc57	        0x48897de8	             mov qword [rbp - 0x18], rdi	       348	utf8.c	FUNCTION_11
0xc5b	        0x488975e0	             mov qword [rbp - 0x20], rsi	       348	utf8.c	FUNCTION_11
0xc5f	          0x8955dc	             mov dword [rbp - 0x24], edx	       348	utf8.c	FUNCTION_11
0xc62	          0x894dd8	             mov dword [rbp - 0x28], ecx	       348	utf8.c	FUNCTION_11
0xc65	        0x448945d4	             mov dword [rbp - 0x2c], r8d	       348	utf8.c	FUNCTION_11
0xc69	        0x44894dd0	             mov dword [rbp - 0x30], r9d	       348	utf8.c	FUNCTION_11
0xc6d	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       349	utf8.c	FUNCTION_11	CALL_1
0xc70	          0x4863d0	                         movsxd rdx, eax	       349	utf8.c	FUNCTION_11	CALL_1
0xc73	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       349	utf8.c	FUNCTION_11	CALL_1
0xc77	          0x4889d6	                            mov rsi, rdx	       349	utf8.c	FUNCTION_11	CALL_1
0xc7a	          0x4889c7	                            mov rdi, rax	       349	utf8.c	FUNCTION_11	CALL_1
0xc7d	      0xe800000000	                          call 0x4000cc2	       349	utf8.c	FUNCTION_11	CALL_1
0xc82	        0x488945f8	                mov qword [rbp - 8], rax	       349	utf8.c	FUNCTION_11	CALL_1
0xc86	          0x8b7dd0	             mov edi, dword [rbp - 0x30]	       350	utf8.c	FUNCTION_11	CALL_2
0xc89	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	       350	utf8.c	FUNCTION_11	CALL_2
0xc8c	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       350	utf8.c	FUNCTION_11	CALL_2
0xc8f	        0x488b75f8	                mov rsi, qword [rbp - 8]	       350	utf8.c	FUNCTION_11	CALL_2
0xc93	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       350	utf8.c	FUNCTION_11	CALL_2
0xc97	          0x4189f8	                            mov r8d, edi	       350	utf8.c	FUNCTION_11	CALL_2
0xc9a	          0x4889c7	                            mov rdi, rax	       350	utf8.c	FUNCTION_11	CALL_2
0xc9d	      0xe800000000	                          call 0x4000ce2	       350	utf8.c	FUNCTION_11	CALL_2
0xca2	        0x488b45f8	                mov rax, qword [rbp - 8]	       351	utf8.c	FUNCTION_11	CALL_3
0xca6	          0x4889c7	                            mov rdi, rax	       351	utf8.c	FUNCTION_11	CALL_3
0xca9	      0xe800000000	                          call 0x4000cee	       351	utf8.c	FUNCTION_11	CALL_3
0xcae	              0x90	                                     nop	       352	utf8.c	FUNCTION_11
0xcaf	              0xc9	                                   leave	       352	utf8.c	FUNCTION_11
0xcb0	              0xc3	                                     ret	       352	utf8.c	FUNCTION_11
strbuf_add_wrapped_text	ELSE,6:IF,13:FOR,1:DO,0:functions,0:WHILE,1:CALL,12:SWITCH,0	189
0x9a3	              0x55	                                push rbp	       266	utf8.c	FUNCTION_10
0x9a4	          0x4889e5	                            mov rbp, rsp	       266	utf8.c	FUNCTION_10
0x9a7	        0x4883ec60	                           sub rsp, 0x60	       266	utf8.c	FUNCTION_10
0x9ab	        0x48897db8	             mov qword [rbp - 0x48], rdi	       266	utf8.c	FUNCTION_10
0x9af	        0x488975b0	             mov qword [rbp - 0x50], rsi	       266	utf8.c	FUNCTION_10
0x9b3	          0x8955ac	             mov dword [rbp - 0x54], edx	       266	utf8.c	FUNCTION_10
0x9b6	          0x894da8	             mov dword [rbp - 0x58], ecx	       266	utf8.c	FUNCTION_10
0x9b9	        0x448945a4	             mov dword [rbp - 0x5c], r8d	       266	utf8.c	FUNCTION_10
0x9bd	    0xc745cc010000	               mov dword [rbp - 0x34], 1	       267	utf8.c	FUNCTION_10
0x9c4	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       268	utf8.c	FUNCTION_10
0x9c8	        0x488945e8	             mov qword [rbp - 0x18], rax	       268	utf8.c	FUNCTION_10
0x9cc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       269	utf8.c	FUNCTION_10
0x9d0	        0x488b4008	                mov rax, qword [rax + 8]	       269	utf8.c	FUNCTION_10
0x9d4	        0x488945f0	             mov qword [rbp - 0x10], rax	       269	utf8.c	FUNCTION_10
0x9d8	        0x837da400	               cmp dword [rbp - 0x5c], 0	       271	utf8.c	FUNCTION_10	IF_1
0x9dc	            0x7f1b	                            jg 0x4000a39	       271	utf8.c	FUNCTION_10	IF_1
0x9de	        0x488b75b0	             mov rsi, qword [rbp - 0x50]	       272	utf8.c	FUNCTION_10	IF_1	CALL_1
0x9e2	          0x8b4da8	             mov ecx, dword [rbp - 0x58]	       272	utf8.c	FUNCTION_10	IF_1	CALL_1
0x9e5	          0x8b55ac	             mov edx, dword [rbp - 0x54]	       272	utf8.c	FUNCTION_10	IF_1	CALL_1
0x9e8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       272	utf8.c	FUNCTION_10	IF_1	CALL_1
0x9ec	          0x4889c7	                            mov rdi, rax	       272	utf8.c	FUNCTION_10	IF_1	CALL_1
0x9ef	      0xe80effffff	       call sym.strbuf_add_indented_text	       272	utf8.c	FUNCTION_10	IF_1	CALL_1
0x9f4	      0xe954020000	                           jmp 0x4000c8d	       273	utf8.c	FUNCTION_10	IF_1
0x9f9	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       277	utf8.c	FUNCTION_10
0x9fd	        0x488945d0	             mov qword [rbp - 0x30], rax	       277	utf8.c	FUNCTION_10
0xa01	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       278	utf8.c	FUNCTION_10
0xa04	          0x8945c4	             mov dword [rbp - 0x3c], eax	       278	utf8.c	FUNCTION_10
0xa07	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       278	utf8.c	FUNCTION_10
0xa0a	          0x8945c8	             mov dword [rbp - 0x38], eax	       278	utf8.c	FUNCTION_10
0xa0d	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       279	utf8.c	FUNCTION_10
0xa15	        0x837dc400	               cmp dword [rbp - 0x3c], 0	       280	utf8.c	FUNCTION_10	IF_2
0xa19	            0x7921	                           jns 0x4000a7c	       280	utf8.c	FUNCTION_10	IF_2
0xa1b	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       281	utf8.c	FUNCTION_10	IF_2
0xa1e	            0xf7d8	                                 neg eax	       281	utf8.c	FUNCTION_10	IF_2
0xa20	          0x8945c8	             mov dword [rbp - 0x38], eax	       281	utf8.c	FUNCTION_10	IF_2
0xa23	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       282	utf8.c	FUNCTION_10	IF_2
0xa27	        0x488945d8	             mov qword [rbp - 0x28], rax	       282	utf8.c	FUNCTION_10	IF_2
0xa2b	            0xeb0f	                           jmp 0x4000a7c	       289	utf8.c	FUNCTION_10	FOR_1	WHILE_1	CALL_2
0xa2d	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       290	utf8.c	FUNCTION_10	FOR_1	WHILE_1
0xa31	        0x488b45f8	                mov rax, qword [rbp - 8]	       290	utf8.c	FUNCTION_10	FOR_1	WHILE_1
0xa35	          0x4801d0	                            add rax, rdx	       290	utf8.c	FUNCTION_10	FOR_1	WHILE_1
0xa38	        0x488945b0	             mov qword [rbp - 0x50], rax	       290	utf8.c	FUNCTION_10	FOR_1	WHILE_1
0xa3c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       289	utf8.c	FUNCTION_10	FOR_1	WHILE_1	CALL_2
0xa40	          0x4889c7	                            mov rdi, rax	       289	utf8.c	FUNCTION_10	FOR_1	WHILE_1	CALL_2
0xa43	      0xe800000000	                          call 0x4000a88	       289	utf8.c	FUNCTION_10	FOR_1	WHILE_1	CALL_2
0xa48	        0x488945f8	                mov qword [rbp - 8], rax	       289	utf8.c	FUNCTION_10	FOR_1	WHILE_1	CALL_2
0xa4c	      0x48837df800	                  cmp qword [rbp - 8], 0	       289	utf8.c	FUNCTION_10	FOR_1	WHILE_1	CALL_2
0xa51	            0x75da	                           jne 0x4000a6d	       289	utf8.c	FUNCTION_10	FOR_1	WHILE_1	CALL_2
0xa53	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       292	utf8.c	FUNCTION_10	FOR_1
0xa57	           0xfb600	                   movzx eax, byte [rax]	       292	utf8.c	FUNCTION_10	FOR_1
0xa5a	          0x8845c3	               mov byte [rbp - 0x3d], al	       292	utf8.c	FUNCTION_10	FOR_1
0xa5d	        0x807dc300	                cmp byte [rbp - 0x3d], 0	       293	utf8.c	FUNCTION_10	FOR_1	IF_3	CALL_3
0xa61	            0x741e	                            je 0x4000ac1	       293	utf8.c	FUNCTION_10	FOR_1	IF_3	CALL_3
0xa63	         0xfb645c3	            movzx eax, byte [rbp - 0x3d]	       293	utf8.c	FUNCTION_10	FOR_1	IF_3	CALL_3
0xa67	           0xfb6c0	                           movzx eax, al	       293	utf8.c	FUNCTION_10	FOR_1	IF_3	CALL_3
0xa6a	            0x4898	                                    cdqe	       293	utf8.c	FUNCTION_10	FOR_1	IF_3	CALL_3
0xa6c	     0xfb680000000	                   movzx eax, byte [rax]	       293	utf8.c	FUNCTION_10	FOR_1	IF_3	CALL_3
0xa73	           0xfb6c0	                           movzx eax, al	       293	utf8.c	FUNCTION_10	FOR_1	IF_3	CALL_3
0xa76	          0x83e001	                              and eax, 1	       293	utf8.c	FUNCTION_10	FOR_1	IF_3	CALL_3
0xa79	            0x85c0	                           test eax, eax	       293	utf8.c	FUNCTION_10	FOR_1	IF_3	CALL_3
0xa7b	     0xf8465010000	                            je 0x4000c26	       293	utf8.c	FUNCTION_10	FOR_1	IF_3	CALL_3
0xa81	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       294	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0xa84	          0x3b45a4	             cmp eax, dword [rbp - 0x5c]	       294	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0xa87	            0x7e0b	                           jle 0x4000ad4	       294	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0xa89	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       294	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0xa8e	     0xf85f7000000	                           jne 0x4000bcb	       294	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0xa94	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       295	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0xa98	        0x488945e0	             mov qword [rbp - 0x20], rax	       295	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0xa9c	        0x807dc300	                cmp byte [rbp - 0x3d], 0	       296	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5
0xaa0	            0x750e	                           jne 0x4000af0	       296	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5
0xaa2	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       296	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5
0xaa6	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       296	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5
0xaaa	     0xf8499010000	                            je 0x4000c89	       296	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5
0xab0	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       298	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_6
0xab5	            0x740a	                            je 0x4000b01	       298	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_6
0xab7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       299	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_6
0xabb	        0x488945e0	             mov qword [rbp - 0x20], rax	       299	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_6
0xabf	            0xeb17	                           jmp 0x4000b18	       299	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_6
0xac1	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       301	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_4
0xac4	          0x4863d0	                         movsxd rdx, eax	       301	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_4
0xac7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       301	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_4
0xacb	      0xbe20000000	                           mov esi, 0x20	       301	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_4
0xad0	          0x4889c7	                            mov rdi, rax	       301	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_4
0xad3	      0xe800000000	                          call 0x4000b18	       301	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_4
0xad8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0xadc	          0x4889c2	                            mov rdx, rax	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0xadf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0xae3	          0x4829c2	                            sub rdx, rax	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0xae6	          0x4889d0	                            mov rax, rdx	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0xae9	          0x4889c2	                            mov rdx, rax	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0xaec	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0xaf0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0xaf4	          0x4889ce	                            mov rsi, rcx	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0xaf7	          0x4889c7	                            mov rdi, rax	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0xafa	      0xe800000000	                          call 0x4000b3f	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0xaff	        0x807dc300	                cmp byte [rbp - 0x3d], 0	       303	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_7
0xb03	     0xf8443010000	                            je 0x4000c8c	       303	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_7
0xb09	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       305	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0xb0d	        0x488945d8	             mov qword [rbp - 0x28], rax	       305	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0xb11	        0x807dc309	                cmp byte [rbp - 0x3d], 9	       306	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_8
0xb15	            0x7506	                           jne 0x4000b5d	       306	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_8
0xb17	        0x834dc807	                or dword [rbp - 0x38], 7	       307	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_8
0xb1b	            0xeb57	                           jmp 0x4000bb4	       307	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_8
0xb1d	        0x807dc30a	              cmp byte [rbp - 0x3d], 0xa	       308	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9
0xb21	            0x7551	                           jne 0x4000bb4	       308	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9
0xb23	      0x488345d801	               add qword [rbp - 0x28], 1	       309	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9
0xb28	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       310	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	IF_10
0xb2c	           0xfb600	                   movzx eax, byte [rax]	       310	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	IF_10
0xb2f	            0x3c0a	                             cmp al, 0xa	       310	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	IF_10
0xb31	            0x7513	                           jne 0x4000b86	       310	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	IF_10
0xb33	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       311	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	IF_10	CALL_6
0xb37	      0xbe0a000000	                            mov esi, 0xa	       311	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	IF_10	CALL_6
0xb3c	          0x4889c7	                            mov rdi, rax	       311	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	IF_10	CALL_6
0xb3f	      0xe833f6ffff	                   call sym.strbuf_addch	       311	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	IF_10	CALL_6
0xb44	            0xeb45	                           jmp 0x4000bcb	       312	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	IF_10
0xb46	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       314	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	ELSE_3	IF_11	CALL_7
0xb4a	           0xfb600	                   movzx eax, byte [rax]	       314	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	ELSE_3	IF_11	CALL_7
0xb4d	           0xfb6c0	                           movzx eax, al	       314	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	ELSE_3	IF_11	CALL_7
0xb50	            0x4898	                                    cdqe	       314	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	ELSE_3	IF_11	CALL_7
0xb52	     0xfb680000000	                   movzx eax, byte [rax]	       314	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	ELSE_3	IF_11	CALL_7
0xb59	           0xfb6c0	                           movzx eax, al	       314	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	ELSE_3	IF_11	CALL_7
0xb5c	          0x83e006	                              and eax, 6	       314	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	ELSE_3	IF_11	CALL_7
0xb5f	            0x85c0	                           test eax, eax	       314	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	ELSE_3	IF_11	CALL_7
0xb61	            0x7427	                            je 0x4000bca	       314	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	ELSE_3	IF_11	CALL_7
0xb63	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       317	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	CALL_8
0xb67	      0xbe20000000	                           mov esi, 0x20	       317	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	CALL_8
0xb6c	          0x4889c7	                            mov rdi, rax	       317	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	CALL_8
0xb6f	      0xe803f6ffff	                   call sym.strbuf_addch	       317	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	CALL_8
0xb74	        0x8345c801	               add dword [rbp - 0x38], 1	       319	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0xb78	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       320	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0xb7c	        0x4883c001	                              add rax, 1	       320	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0xb80	        0x488945b0	             mov qword [rbp - 0x50], rax	       320	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0xb84	              0x90	                                     nop	       294	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0xb85	      0xe9ba000000	                           jmp 0x4000c84	       329	utf8.c	FUNCTION_10	FOR_1	IF_3
0xb8a	              0x90	                                     nop	       315	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	ELSE_3	IF_11
0xb8b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       324	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_9
0xb8f	      0xbe0a000000	                            mov esi, 0xa	       324	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_9
0xb94	          0x4889c7	                            mov rdi, rax	       324	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_9
0xb97	      0xe8dbf5ffff	                   call sym.strbuf_addch	       324	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_9
0xb9c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_10
0xba0	           0xfb600	                   movzx eax, byte [rax]	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_10
0xba3	           0xfb6c0	                           movzx eax, al	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_10
0xba6	            0x4898	                                    cdqe	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_10
0xba8	     0xfb680000000	                   movzx eax, byte [rax]	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_10
0xbaf	           0xfb6c0	                           movzx eax, al	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_10
0xbb2	          0x83e001	                              and eax, 1	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_10
0xbb5	            0x85c0	                           test eax, eax	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_10
0xbb7	           0xf95c0	                                setne al	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_10
0xbba	           0xfb6d0	                           movzx edx, al	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_10
0xbbd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_10
0xbc1	          0x4801d0	                            add rax, rdx	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_10
0xbc4	        0x488945d0	             mov qword [rbp - 0x30], rax	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_10
0xbc8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_10
0xbcc	        0x488945b0	             mov qword [rbp - 0x50], rax	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_10
0xbd0	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       326	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0xbd8	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       327	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0xbdb	          0x8945c4	             mov dword [rbp - 0x3c], eax	       327	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0xbde	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       327	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0xbe1	          0x8945c8	             mov dword [rbp - 0x38], eax	       327	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0xbe4	            0xeb5e	                           jmp 0x4000c84	       329	utf8.c	FUNCTION_10	FOR_1	IF_3
0xbe6	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       331	utf8.c	FUNCTION_10	FOR_1	IF_12
0xbea	            0x7448	                            je 0x4000c74	       331	utf8.c	FUNCTION_10	FOR_1	IF_12
0xbec	        0x488d45b0	                   lea rax, [rbp - 0x50]	       332	utf8.c	FUNCTION_10	FOR_1	IF_12	CALL_11
0xbf0	      0xbe00000000	                              mov esi, 0	       332	utf8.c	FUNCTION_10	FOR_1	IF_12	CALL_11
0xbf5	          0x4889c7	                            mov rdi, rax	       332	utf8.c	FUNCTION_10	FOR_1	IF_12	CALL_11
0xbf8	      0xe800000000	                          call 0x4000c3d	       332	utf8.c	FUNCTION_10	FOR_1	IF_12	CALL_11
0xbfd	           0x145c8	             add dword [rbp - 0x38], eax	       332	utf8.c	FUNCTION_10	FOR_1	IF_12	CALL_11
0xc00	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       333	utf8.c	FUNCTION_10	FOR_1	IF_12	IF_13
0xc04	          0x4885c0	                           test rax, rax	       333	utf8.c	FUNCTION_10	FOR_1	IF_12	IF_13
0xc07	     0xf851efeffff	                           jne 0x4000a6b	       333	utf8.c	FUNCTION_10	FOR_1	IF_12	IF_13
0xc0d	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       334	utf8.c	FUNCTION_10	FOR_1	IF_12	IF_13
0xc14	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       335	utf8.c	FUNCTION_10	FOR_1	IF_12	IF_13
0xc18	        0x488945b0	             mov qword [rbp - 0x50], rax	       335	utf8.c	FUNCTION_10	FOR_1	IF_12	IF_13
0xc1c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       336	utf8.c	FUNCTION_10	FOR_1	IF_12	IF_13	CALL_12
0xc20	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       336	utf8.c	FUNCTION_10	FOR_1	IF_12	IF_13	CALL_12
0xc24	          0x4889d6	                            mov rsi, rdx	       336	utf8.c	FUNCTION_10	FOR_1	IF_12	IF_13	CALL_12
0xc27	          0x4889c7	                            mov rdi, rax	       336	utf8.c	FUNCTION_10	FOR_1	IF_12	IF_13	CALL_12
0xc2a	      0xe8aef4ffff	                  call sym.strbuf_setlen	       336	utf8.c	FUNCTION_10	FOR_1	IF_12	IF_13	CALL_12
0xc2f	      0xe9c5fdffff	                           jmp 0x4000a39	       337	utf8.c	FUNCTION_10	FOR_1	IF_12	IF_13
0xc34	        0x8345c801	               add dword [rbp - 0x38], 1	       340	utf8.c	FUNCTION_10	FOR_1	ELSE_6
0xc38	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       341	utf8.c	FUNCTION_10	FOR_1	ELSE_6
0xc3c	        0x4883c001	                              add rax, 1	       341	utf8.c	FUNCTION_10	FOR_1	ELSE_6
0xc40	        0x488945b0	             mov qword [rbp - 0x50], rax	       341	utf8.c	FUNCTION_10	FOR_1	ELSE_6
0xc44	      0xe9e2fdffff	                           jmp 0x4000a6b	       343	utf8.c	FUNCTION_10	FOR_1
0xc49	              0x90	                                     nop	       297	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5
0xc4a	            0xeb01	                           jmp 0x4000c8d	       297	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5
0xc4c	              0x90	                                     nop	       304	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_7
0xc4d	              0xc9	                                   leave	       344	utf8.c	FUNCTION_10
0xc4e	              0xc3	                                     ret	       344	utf8.c	FUNCTION_10
