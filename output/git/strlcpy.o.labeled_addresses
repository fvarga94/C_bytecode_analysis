gitstrlcpy	SWITCH,0:functions,0:FOR,0:ELSE,0:IF,1:DO,0:CALL,2:WHILE,0	33
0x0	              0x55	                                push rbp	         4	strlcpy.c	FUNCTION_1
0x1	          0x4889e5	                            mov rbp, rsp	         4	strlcpy.c	FUNCTION_1
0x4	        0x4883ec30	                           sub rsp, 0x30	         4	strlcpy.c	FUNCTION_1
0x8	        0x48897de8	             mov qword [rbp - 0x18], rdi	         4	strlcpy.c	FUNCTION_1
0xc	        0x488975e0	             mov qword [rbp - 0x20], rsi	         4	strlcpy.c	FUNCTION_1
0x10	        0x488955d8	             mov qword [rbp - 0x28], rdx	         4	strlcpy.c	FUNCTION_1
0x14	        0x488b45e0	             mov rax, qword [rbp - 0x20]	         5	strlcpy.c	FUNCTION_1	CALL_1
0x18	          0x4889c7	                            mov rdi, rax	         5	strlcpy.c	FUNCTION_1	CALL_1
0x1b	      0xe800000000	                          call 0x4000060	         5	strlcpy.c	FUNCTION_1	CALL_1
0x20	        0x488945f0	             mov qword [rbp - 0x10], rax	         5	strlcpy.c	FUNCTION_1	CALL_1
0x24	      0x48837dd800	               cmp qword [rbp - 0x28], 0	         7	strlcpy.c	FUNCTION_1	IF_1
0x29	            0x7441	                            je 0x40000ac	         7	strlcpy.c	FUNCTION_1	IF_1
0x2b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	         8	strlcpy.c	FUNCTION_1	IF_1
0x2f	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	         8	strlcpy.c	FUNCTION_1	IF_1
0x33	            0x720a	                            jb 0x400007f	         8	strlcpy.c	FUNCTION_1	IF_1
0x35	        0x488b45d8	             mov rax, qword [rbp - 0x28]	         8	strlcpy.c	FUNCTION_1	IF_1
0x39	        0x4883e801	                              sub rax, 1	         8	strlcpy.c	FUNCTION_1	IF_1
0x3d	            0xeb04	                           jmp 0x4000083	         8	strlcpy.c	FUNCTION_1	IF_1
0x3f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	         8	strlcpy.c	FUNCTION_1	IF_1
0x43	        0x488945f8	                mov qword [rbp - 8], rax	         8	strlcpy.c	FUNCTION_1	IF_1
0x47	        0x488b55f8	                mov rdx, qword [rbp - 8]	         9	strlcpy.c	FUNCTION_1	IF_1	CALL_2
0x4b	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	         9	strlcpy.c	FUNCTION_1	IF_1	CALL_2
0x4f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	         9	strlcpy.c	FUNCTION_1	IF_1	CALL_2
0x53	          0x4889ce	                            mov rsi, rcx	         9	strlcpy.c	FUNCTION_1	IF_1	CALL_2
0x56	          0x4889c7	                            mov rdi, rax	         9	strlcpy.c	FUNCTION_1	IF_1	CALL_2
0x59	      0xe800000000	                          call 0x400009e	         9	strlcpy.c	FUNCTION_1	IF_1	CALL_2
0x5e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        10	strlcpy.c	FUNCTION_1	IF_1
0x62	        0x488b45f8	                mov rax, qword [rbp - 8]	        10	strlcpy.c	FUNCTION_1	IF_1
0x66	          0x4801d0	                            add rax, rdx	        10	strlcpy.c	FUNCTION_1	IF_1
0x69	          0xc60000	                       mov byte [rax], 0	        10	strlcpy.c	FUNCTION_1	IF_1
0x6c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        12	strlcpy.c	FUNCTION_1
0x70	              0xc9	                                   leave	        13	strlcpy.c	FUNCTION_1
0x71	              0xc3	                                     ret	        13	strlcpy.c	FUNCTION_1
