diffcore_merge_broken	ELSE,2:CALL,8:IF,4:WHILE,0:DO,0:FOR,2:SWITCH,0:functions,0	135
0x841	              0x55	                                push rbp	       262	diffcore-break.c	FUNCTION_4
0x842	          0x4889e5	                            mov rbp, rsp	       262	diffcore-break.c	FUNCTION_4
0x845	        0x4883ec40	                           sub rsp, 0x40	       262	diffcore-break.c	FUNCTION_4
0x849	    0x64488b042528	                mov rax, qword fs:[0x28]	       262	diffcore-break.c	FUNCTION_4
0x852	        0x488945f8	                mov qword [rbp - 8], rax	       262	diffcore-break.c	FUNCTION_4
0x856	            0x31c0	                            xor eax, eax	       262	diffcore-break.c	FUNCTION_4
0x858	    0x48c745c80000	               mov qword [rbp - 0x38], 0	       263	diffcore-break.c	FUNCTION_4
0x860	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       267	diffcore-break.c	FUNCTION_4	CALL_1
0x868	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       267	diffcore-break.c	FUNCTION_4	CALL_1
0x86f	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       267	diffcore-break.c	FUNCTION_4	CALL_1
0x872	          0x8945ec	             mov dword [rbp - 0x14], eax	       267	diffcore-break.c	FUNCTION_4	CALL_1
0x875	    0xc745c0000000	               mov dword [rbp - 0x40], 0	       269	diffcore-break.c	FUNCTION_4	FOR_1
0x87c	      0xe96e010000	                           jmp 0x4000a2f	       269	diffcore-break.c	FUNCTION_4	FOR_1
0x881	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       270	diffcore-break.c	FUNCTION_4	FOR_1
0x885	          0x488b00	                    mov rax, qword [rax]	       270	diffcore-break.c	FUNCTION_4	FOR_1
0x888	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       270	diffcore-break.c	FUNCTION_4	FOR_1
0x88b	          0x4863d2	                         movsxd rdx, edx	       270	diffcore-break.c	FUNCTION_4	FOR_1
0x88e	        0x48c1e203	                              shl rdx, 3	       270	diffcore-break.c	FUNCTION_4	FOR_1
0x892	          0x4801d0	                            add rax, rdx	       270	diffcore-break.c	FUNCTION_4	FOR_1
0x895	          0x488b00	                    mov rax, qword [rax]	       270	diffcore-break.c	FUNCTION_4	FOR_1
0x898	        0x488945d0	             mov qword [rbp - 0x30], rax	       270	diffcore-break.c	FUNCTION_4	FOR_1
0x89c	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       271	diffcore-break.c	FUNCTION_4	FOR_1	IF_1
0x8a1	     0xf8443010000	                            je 0x4000a2a	       271	diffcore-break.c	FUNCTION_4	FOR_1	IF_1
0x8a7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       274	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2
0x8ab	         0xfb64013	           movzx eax, byte [rax + 0x13] 	       274	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2
0x8af	          0x83e001	                              and eax, 1	       274	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2
0x8b2	            0x84c0	                             test al, al	       274	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2
0x8b4	     0xf841b010000	                            je 0x4000a15	       274	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2
0x8ba	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       275	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_2
0x8be	        0x488b4008	                mov rax, qword [rax + 8]	       275	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_2
0x8c2	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       275	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_2
0x8c6	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       275	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_2
0x8ca	          0x488b00	                    mov rax, qword [rax]	       275	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_2
0x8cd	        0x488b4018	            mov rax, qword [rax + 0x18] 	       275	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_2
0x8d1	          0x4889d6	                            mov rsi, rdx	       275	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_2
0x8d4	          0x4889c7	                            mov rdi, rax	       275	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_2
0x8d7	      0xe800000000	                          call 0x400091c	       275	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_2
0x8dc	            0x85c0	                           test eax, eax	       274	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2
0x8de	     0xf85f1000000	                           jne 0x4000a15	       274	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2
0x8e4	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x8e7	          0x83c001	                              add eax, 1	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x8ea	          0x8945c4	             mov dword [rbp - 0x3c], eax	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x8ed	      0xe9b2000000	                           jmp 0x40009e4	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x8f2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       280	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x8f6	          0x488b00	                    mov rax, qword [rax]	       280	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x8f9	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       280	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x8fc	          0x4863d2	                         movsxd rdx, edx	       280	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x8ff	        0x48c1e203	                              shl rdx, 3	       280	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x903	          0x4801d0	                            add rax, rdx	       280	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x906	          0x488b00	                    mov rax, qword [rax]	       280	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x909	        0x488945d8	             mov qword [rbp - 0x28], rax	       280	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x90d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       281	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x911	         0xfb64013	           movzx eax, byte [rax + 0x13] 	       281	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x915	          0x83e001	                              and eax, 1	       281	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x918	            0x84c0	                             test al, al	       281	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x91a	     0xf8480000000	                            je 0x40009e0	       281	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x920	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       282	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_3
0x924	        0x488b4008	                mov rax, qword [rax + 8]	       282	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_3
0x928	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       282	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_3
0x92c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       282	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_3
0x930	          0x488b00	                    mov rax, qword [rax]	       282	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_3
0x933	        0x488b4018	            mov rax, qword [rax + 0x18] 	       282	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_3
0x937	          0x4889d6	                            mov rsi, rdx	       282	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_3
0x93a	          0x4889c7	                            mov rdi, rax	       282	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_3
0x93d	      0xe800000000	                          call 0x4000982	       282	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_3
0x942	            0x85c0	                           test eax, eax	       281	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x944	            0x755a	                           jne 0x40009e0	       281	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x946	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       283	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_4
0x94a	        0x488b4008	                mov rax, qword [rax + 8]	       283	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_4
0x94e	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       283	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_4
0x952	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       283	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_4
0x956	          0x488b00	                    mov rax, qword [rax]	       283	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_4
0x959	        0x488b4018	            mov rax, qword [rax + 0x18] 	       283	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_4
0x95d	          0x4889d6	                            mov rsi, rdx	       283	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_4
0x960	          0x4889c7	                            mov rdi, rax	       283	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_4
0x963	      0xe800000000	                          call 0x40009a8	       283	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_4
0x968	            0x85c0	                           test eax, eax	       282	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_3
0x96a	            0x7534	                           jne 0x40009e0	       282	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_3
0x96c	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       285	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_5
0x970	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       285	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_5
0x974	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       285	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_5
0x978	          0x4889ce	                            mov rsi, rcx	       285	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_5
0x97b	          0x4889c7	                            mov rdi, rax	       285	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_5
0x97e	      0xe880fdffff	                   call sym.merge_broken	       285	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3	CALL_5
0x983	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       286	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x987	          0x488b00	                    mov rax, qword [rax]	       286	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x98a	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       286	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x98d	          0x4863d2	                         movsxd rdx, edx	       286	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x990	        0x48c1e203	                              shl rdx, 3	       286	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x994	          0x4801d0	                            add rax, rdx	       286	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x997	    0x48c700000000	                      mov qword [rax], 0	       286	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x99e	            0xeb14	                           jmp 0x40009f4	       287	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2	IF_3
0x9a0	        0x8345c401	               add dword [rbp - 0x3c], 1	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x9a4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x9a8	          0x8b400c	              mov eax, dword [rax + 0xc]	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x9ab	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x9ae	     0xf8f3effffff	                            jg 0x4000932	       279	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	FOR_2
0x9b4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       290	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	IF_4
0x9b8	          0x8b400c	              mov eax, dword [rax + 0xc]	       290	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	IF_4
0x9bb	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	       290	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	IF_4
0x9be	            0x7f2b	                            jg 0x4000a2b	       290	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	IF_4
0x9c0	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       294	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_6
0x9c4	        0x488d45e0	                   lea rax, [rbp - 0x20]	       294	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_6
0x9c8	          0x4889d6	                            mov rsi, rdx	       294	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_6
0x9cb	          0x4889c7	                            mov rdi, rax	       294	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_6
0x9ce	      0xe800000000	                          call 0x4000a13	       294	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	CALL_6
0x9d3	            0xeb16	                           jmp 0x4000a2b	       290	diffcore-break.c	FUNCTION_4	FOR_1	ELSE_1	IF_2	IF_4
0x9d5	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       297	diffcore-break.c	FUNCTION_4	FOR_1	CALL_7
0x9d9	        0x488d45e0	                   lea rax, [rbp - 0x20]	       297	diffcore-break.c	FUNCTION_4	FOR_1	CALL_7
0x9dd	          0x4889d6	                            mov rsi, rdx	       297	diffcore-break.c	FUNCTION_4	FOR_1	CALL_7
0x9e0	          0x4889c7	                            mov rdi, rax	       297	diffcore-break.c	FUNCTION_4	FOR_1	CALL_7
0x9e3	      0xe800000000	                          call 0x4000a28	       297	diffcore-break.c	FUNCTION_4	FOR_1	CALL_7
0x9e8	            0xeb01	                           jmp 0x4000a2b	       297	diffcore-break.c	FUNCTION_4	FOR_1	CALL_7
0x9ea	              0x90	                                     nop	       273	diffcore-break.c	FUNCTION_4	FOR_1	IF_1
0x9eb	        0x8345c001	               add dword [rbp - 0x40], 1	       269	diffcore-break.c	FUNCTION_4	FOR_1
0x9ef	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       269	diffcore-break.c	FUNCTION_4	FOR_1
0x9f3	          0x8b400c	              mov eax, dword [rax + 0xc]	       269	diffcore-break.c	FUNCTION_4	FOR_1
0x9f6	          0x3b45c0	             cmp eax, dword [rbp - 0x40]	       269	diffcore-break.c	FUNCTION_4	FOR_1
0x9f9	     0xf8f82feffff	                            jg 0x40008c1	       269	diffcore-break.c	FUNCTION_4	FOR_1
0x9ff	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       299	diffcore-break.c	FUNCTION_4	CALL_8
0xa03	          0x488b00	                    mov rax, qword [rax]	       299	diffcore-break.c	FUNCTION_4	CALL_8
0xa06	          0x4889c7	                            mov rdi, rax	       299	diffcore-break.c	FUNCTION_4	CALL_8
0xa09	      0xe800000000	                          call 0x4000a4e	       299	diffcore-break.c	FUNCTION_4	CALL_8
0xa0e	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       300	diffcore-break.c	FUNCTION_4
0xa12	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       300	diffcore-break.c	FUNCTION_4
0xa16	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       300	diffcore-break.c	FUNCTION_4
0xa1a	          0x488901	                    mov qword [rcx], rax	       300	diffcore-break.c	FUNCTION_4
0xa1d	        0x48895108	                mov qword [rcx + 8], rdx	       300	diffcore-break.c	FUNCTION_4
0xa21	              0x90	                                     nop	       302	diffcore-break.c	FUNCTION_4
0xa22	        0x488b45f8	                mov rax, qword [rbp - 8]	       303	diffcore-break.c	FUNCTION_4
0xa26	    0x644833042528	                xor rax, qword fs:[0x28]	       303	diffcore-break.c	FUNCTION_4
0xa2f	            0x7405	                            je 0x4000a76	       303	diffcore-break.c	FUNCTION_4
0xa31	      0xe800000000	                          call 0x4000a76	       303	diffcore-break.c	FUNCTION_4
0xa36	              0xc9	                                   leave	       303	diffcore-break.c	FUNCTION_4
0xa37	              0xc3	                                     ret	       303	diffcore-break.c	FUNCTION_4
diffcore_break	ELSE,0:CALL,18:IF,5:WHILE,0:DO,0:FOR,1:SWITCH,0:functions,0	173
0x468	              0x55	                                push rbp	       118	diffcore-break.c	FUNCTION_2
0x469	          0x4889e5	                            mov rbp, rsp	       118	diffcore-break.c	FUNCTION_2
0x46c	        0x4883ec70	                           sub rsp, 0x70	       118	diffcore-break.c	FUNCTION_2
0x470	          0x897d9c	             mov dword [rbp - 0x64], edi	       118	diffcore-break.c	FUNCTION_2
0x473	    0x64488b042528	                mov rax, qword fs:[0x28]	       118	diffcore-break.c	FUNCTION_2
0x47c	        0x488945f8	                mov qword [rbp - 8], rax	       118	diffcore-break.c	FUNCTION_2
0x480	            0x31c0	                            xor eax, eax	       118	diffcore-break.c	FUNCTION_2
0x482	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       119	diffcore-break.c	FUNCTION_2
0x48a	          0x8b459c	             mov eax, dword [rbp - 0x64]	       159	diffcore-break.c	FUNCTION_2
0x48d	          0xc1e810	                           shr eax, 0x10	       159	diffcore-break.c	FUNCTION_2
0x490	          0x8945b0	             mov dword [rbp - 0x50], eax	       159	diffcore-break.c	FUNCTION_2
0x493	    0x81659cffff00	          and dword [rbp - 0x64], 0xffff	       160	diffcore-break.c	FUNCTION_2
0x49a	        0x837d9c00	               cmp dword [rbp - 0x64], 0	       162	diffcore-break.c	FUNCTION_2	IF_1
0x49e	            0x7507	                           jne 0x40004e7	       162	diffcore-break.c	FUNCTION_2	IF_1
0x4a0	    0xc7459c307500	          mov dword [rbp - 0x64], 0x7530	       163	diffcore-break.c	FUNCTION_2	IF_1
0x4a7	        0x837db000	               cmp dword [rbp - 0x50], 0	       164	diffcore-break.c	FUNCTION_2	IF_2
0x4ab	            0x7507	                           jne 0x40004f4	       164	diffcore-break.c	FUNCTION_2	IF_2
0x4ad	    0xc745b0a08c00	          mov dword [rbp - 0x50], 0x8ca0	       165	diffcore-break.c	FUNCTION_2	IF_2
0x4b4	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       167	diffcore-break.c	FUNCTION_2	CALL_1
0x4bc	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       167	diffcore-break.c	FUNCTION_2	CALL_1
0x4c3	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       167	diffcore-break.c	FUNCTION_2	CALL_1
0x4c6	          0x8945ec	             mov dword [rbp - 0x14], eax	       167	diffcore-break.c	FUNCTION_2	CALL_1
0x4c9	    0xc745b4000000	               mov dword [rbp - 0x4c], 0	       169	diffcore-break.c	FUNCTION_2	FOR_1
0x4d0	      0xe9e5010000	                           jmp 0x40006fa	       169	diffcore-break.c	FUNCTION_2	FOR_1
0x4d5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       170	diffcore-break.c	FUNCTION_2	FOR_1
0x4d9	          0x488b00	                    mov rax, qword [rax]	       170	diffcore-break.c	FUNCTION_2	FOR_1
0x4dc	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       170	diffcore-break.c	FUNCTION_2	FOR_1
0x4df	          0x4863d2	                         movsxd rdx, edx	       170	diffcore-break.c	FUNCTION_2	FOR_1
0x4e2	        0x48c1e203	                              shl rdx, 3	       170	diffcore-break.c	FUNCTION_2	FOR_1
0x4e6	          0x4801d0	                            add rax, rdx	       170	diffcore-break.c	FUNCTION_2	FOR_1
0x4e9	          0x488b00	                    mov rax, qword [rax]	       170	diffcore-break.c	FUNCTION_2	FOR_1
0x4ec	        0x488945c0	             mov qword [rbp - 0x40], rax	       170	diffcore-break.c	FUNCTION_2	FOR_1
0x4f0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       177	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_3
0x4f4	          0x488b00	                    mov rax, qword [rax]	       177	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_3
0x4f7	         0xfb74040	           movzx eax, word [rax + 0x40] 	       177	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_3
0x4fb	          0x6685c0	                             test ax, ax	       177	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_3
0x4fe	     0xf8480010000	                            je 0x40006c4	       177	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_3
0x504	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       177	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_3
0x508	        0x488b4008	                mov rax, qword [rax + 8]	       177	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_3
0x50c	         0xfb74040	           movzx eax, word [rax + 0x40] 	       177	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_3
0x510	          0x6685c0	                             test ax, ax	       177	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_3
0x513	     0xf846b010000	                            je 0x40006c4	       177	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_3
0x519	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       178	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_4
0x51d	          0x488b00	                    mov rax, qword [rax]	       178	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_4
0x520	         0xfb74040	           movzx eax, word [rax + 0x40] 	       178	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_4
0x524	           0xfb7c0	                           movzx eax, ax	       178	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_4
0x527	            0x89c7	                            mov edi, eax	       178	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_4
0x529	      0xe8d2faffff	                    call sym.object_type	       178	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_4
0x52e	          0x83f803	                              cmp eax, 3	       177	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_3
0x531	     0xf854d010000	                           jne 0x40006c4	       177	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_3
0x537	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       179	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_5
0x53b	        0x488b4008	                mov rax, qword [rax + 8]	       179	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_5
0x53f	         0xfb74040	           movzx eax, word [rax + 0x40] 	       179	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_5
0x543	           0xfb7c0	                           movzx eax, ax	       179	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_5
0x546	            0x89c7	                            mov edi, eax	       179	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_5
0x548	      0xe8b3faffff	                    call sym.object_type	       179	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_5
0x54d	          0x83f803	                              cmp eax, 3	       178	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_4
0x550	     0xf852e010000	                           jne 0x40006c4	       178	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_4
0x556	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       180	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_6
0x55a	        0x488b4008	                mov rax, qword [rax + 8]	       180	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_6
0x55e	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       180	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_6
0x562	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       180	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_6
0x566	          0x488b00	                    mov rax, qword [rax]	       180	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_6
0x569	        0x488b4018	            mov rax, qword [rax + 0x18] 	       180	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_6
0x56d	          0x4889d6	                            mov rsi, rdx	       180	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_6
0x570	          0x4889c7	                            mov rdi, rax	       180	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_6
0x573	      0xe800000000	                          call 0x40005b8	       180	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_6
0x578	            0x85c0	                           test eax, eax	       179	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_5
0x57a	     0xf8504010000	                           jne 0x40006c4	       179	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	CALL_5
0x580	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       181	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_7
0x584	        0x488b7008	                mov rsi, qword [rax + 8]	       181	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_7
0x588	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       181	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_7
0x58c	          0x488b00	                    mov rax, qword [rax]	       181	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_7
0x58f	        0x488d4dac	                   lea rcx, [rbp - 0x54]	       181	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_7
0x593	          0x8b559c	             mov edx, dword [rbp - 0x64]	       181	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_7
0x596	          0x4889c7	                            mov rdi, rax	       181	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_7
0x599	      0xe8ebfaffff	                   call sym.should_break	       181	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_7
0x59e	            0x85c0	                           test eax, eax	       181	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_7
0x5a0	     0xf84de000000	                            je 0x40006c4	       181	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_7
0x5a6	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       193	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	IF_5
0x5a9	          0x3b45b0	             cmp eax, dword [rbp - 0x50]	       193	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	IF_5
0x5ac	            0x7d07	                           jge 0x40005f5	       193	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	IF_5
0x5ae	    0xc745ac000000	               mov dword [rbp - 0x54], 0	       194	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	IF_5
0x5b5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       197	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_8
0x5b9	          0x488b00	                    mov rax, qword [rax]	       197	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_8
0x5bc	        0x488b4018	            mov rax, qword [rax + 0x18] 	       197	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_8
0x5c0	          0x4889c7	                            mov rdi, rax	       197	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_8
0x5c3	      0xe800000000	                          call 0x4000608	       197	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_8
0x5c8	        0x488945c8	             mov qword [rbp - 0x38], rax	       197	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_8
0x5cc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       198	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_9
0x5d0	          0x488b08	                    mov rcx, qword [rax]	       198	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_9
0x5d3	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       198	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_9
0x5d7	        0x488d45e0	                   lea rax, [rbp - 0x20]	       198	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_9
0x5db	          0x4889ce	                            mov rsi, rcx	       198	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_9
0x5de	          0x4889c7	                            mov rdi, rax	       198	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_9
0x5e1	      0xe800000000	                          call 0x4000626	       198	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_9
0x5e6	        0x488945d0	             mov qword [rbp - 0x30], rax	       198	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_9
0x5ea	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       199	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x5ed	            0x89c2	                            mov edx, eax	       199	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x5ef	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       199	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x5f3	        0x66895010	               mov word [rax + 0x10], dx	       199	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x5f7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       200	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x5fb	         0xfb65013	           movzx edx, byte [rax + 0x13] 	       200	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x5ff	          0x83ca01	                               or edx, 1	       200	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x602	          0x885013	               mov byte [rax + 0x13], dl	       200	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x605	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       203	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_10
0x609	        0x488b4008	                mov rax, qword [rax + 8]	       203	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_10
0x60d	        0x488b4018	            mov rax, qword [rax + 0x18] 	       203	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_10
0x611	          0x4889c7	                            mov rdi, rax	       203	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_10
0x614	      0xe800000000	                          call 0x4000659	       203	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_10
0x619	        0x488945d8	             mov qword [rbp - 0x28], rax	       203	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_10
0x61d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       204	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_11
0x621	        0x488b5008	                mov rdx, qword [rax + 8]	       204	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_11
0x625	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       204	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_11
0x629	        0x488d45e0	                   lea rax, [rbp - 0x20]	       204	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_11
0x62d	          0x4889ce	                            mov rsi, rcx	       204	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_11
0x630	          0x4889c7	                            mov rdi, rax	       204	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_11
0x633	      0xe800000000	                          call 0x4000678	       204	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_11
0x638	        0x488945d0	             mov qword [rbp - 0x30], rax	       204	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_11
0x63c	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       205	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x63f	            0x89c2	                            mov edx, eax	       205	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x641	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       205	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x645	        0x66895010	               mov word [rax + 0x10], dx	       205	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x649	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       206	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x64d	         0xfb65013	           movzx edx, byte [rax + 0x13] 	       206	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x651	          0x83ca01	                               or edx, 1	       206	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x654	          0x885013	               mov byte [rax + 0x13], dl	       206	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4
0x657	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       208	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_12
0x65b	          0x488b00	                    mov rax, qword [rax]	       208	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_12
0x65e	          0x4889c7	                            mov rdi, rax	       208	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_12
0x661	      0xe800000000	                          call 0x40006a6	       208	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_12
0x666	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       209	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_13
0x66a	        0x488b4008	                mov rax, qword [rax + 8]	       209	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_13
0x66e	          0x4889c7	                            mov rdi, rax	       209	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_13
0x671	      0xe800000000	                          call 0x40006b6	       209	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_13
0x676	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       210	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_14
0x67a	          0x4889c7	                            mov rdi, rax	       210	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_14
0x67d	      0xe800000000	                          call 0x40006c2	       210	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_14
0x682	            0xeb32	                           jmp 0x40006f6	       210	diffcore-break.c	FUNCTION_2	FOR_1	IF_3	IF_4	CALL_14
0x684	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       216	diffcore-break.c	FUNCTION_2	FOR_1	CALL_15
0x688	          0x488b00	                    mov rax, qword [rax]	       216	diffcore-break.c	FUNCTION_2	FOR_1	CALL_15
0x68b	          0x4889c7	                            mov rdi, rax	       216	diffcore-break.c	FUNCTION_2	FOR_1	CALL_15
0x68e	      0xe800000000	                          call 0x40006d3	       216	diffcore-break.c	FUNCTION_2	FOR_1	CALL_15
0x693	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       217	diffcore-break.c	FUNCTION_2	FOR_1	CALL_16
0x697	        0x488b4008	                mov rax, qword [rax + 8]	       217	diffcore-break.c	FUNCTION_2	FOR_1	CALL_16
0x69b	          0x4889c7	                            mov rdi, rax	       217	diffcore-break.c	FUNCTION_2	FOR_1	CALL_16
0x69e	      0xe800000000	                          call 0x40006e3	       217	diffcore-break.c	FUNCTION_2	FOR_1	CALL_16
0x6a3	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       218	diffcore-break.c	FUNCTION_2	FOR_1	CALL_17
0x6a7	        0x488d45e0	                   lea rax, [rbp - 0x20]	       218	diffcore-break.c	FUNCTION_2	FOR_1	CALL_17
0x6ab	          0x4889d6	                            mov rsi, rdx	       218	diffcore-break.c	FUNCTION_2	FOR_1	CALL_17
0x6ae	          0x4889c7	                            mov rdi, rax	       218	diffcore-break.c	FUNCTION_2	FOR_1	CALL_17
0x6b1	      0xe800000000	                          call 0x40006f6	       218	diffcore-break.c	FUNCTION_2	FOR_1	CALL_17
0x6b6	        0x8345b401	               add dword [rbp - 0x4c], 1	       169	diffcore-break.c	FUNCTION_2	FOR_1
0x6ba	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       169	diffcore-break.c	FUNCTION_2	FOR_1
0x6be	          0x8b400c	              mov eax, dword [rax + 0xc]	       169	diffcore-break.c	FUNCTION_2	FOR_1
0x6c1	          0x3b45b4	             cmp eax, dword [rbp - 0x4c]	       169	diffcore-break.c	FUNCTION_2	FOR_1
0x6c4	     0xf8f0bfeffff	                            jg 0x4000515	       169	diffcore-break.c	FUNCTION_2	FOR_1
0x6ca	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       220	diffcore-break.c	FUNCTION_2	CALL_18
0x6ce	          0x488b00	                    mov rax, qword [rax]	       220	diffcore-break.c	FUNCTION_2	CALL_18
0x6d1	          0x4889c7	                            mov rdi, rax	       220	diffcore-break.c	FUNCTION_2	CALL_18
0x6d4	      0xe800000000	                          call 0x4000719	       220	diffcore-break.c	FUNCTION_2	CALL_18
0x6d9	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       221	diffcore-break.c	FUNCTION_2
0x6dd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       221	diffcore-break.c	FUNCTION_2
0x6e1	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       221	diffcore-break.c	FUNCTION_2
0x6e5	          0x488901	                    mov qword [rcx], rax	       221	diffcore-break.c	FUNCTION_2
0x6e8	        0x48895108	                mov qword [rcx + 8], rdx	       221	diffcore-break.c	FUNCTION_2
0x6ec	              0x90	                                     nop	       223	diffcore-break.c	FUNCTION_2
0x6ed	        0x488b45f8	                mov rax, qword [rbp - 8]	       224	diffcore-break.c	FUNCTION_2
0x6f1	    0x644833042528	                xor rax, qword fs:[0x28]	       224	diffcore-break.c	FUNCTION_2
0x6fa	            0x7405	                            je 0x4000741	       224	diffcore-break.c	FUNCTION_2
0x6fc	      0xe800000000	                          call 0x4000741	       224	diffcore-break.c	FUNCTION_2
0x701	              0xc9	                                   leave	       224	diffcore-break.c	FUNCTION_2
0x702	              0xc3	                                     ret	       224	diffcore-break.c	FUNCTION_2
merge_broken	ELSE,0:CALL,14:IF,5:WHILE,0:DO,0:FOR,0:SWITCH,0:functions,0	86
0x703	              0x55	                                push rbp	       229	diffcore-break.c	FUNCTION_3
0x704	          0x4889e5	                            mov rbp, rsp	       229	diffcore-break.c	FUNCTION_3
0x707	        0x4883ec40	                           sub rsp, 0x40	       229	diffcore-break.c	FUNCTION_3
0x70b	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       229	diffcore-break.c	FUNCTION_3
0x70f	        0x488975d0	             mov qword [rbp - 0x30], rsi	       229	diffcore-break.c	FUNCTION_3
0x713	        0x488955c8	             mov qword [rbp - 0x38], rdx	       229	diffcore-break.c	FUNCTION_3
0x717	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       231	diffcore-break.c	FUNCTION_3
0x71b	        0x488945e8	             mov qword [rbp - 0x18], rax	       231	diffcore-break.c	FUNCTION_3
0x71f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       231	diffcore-break.c	FUNCTION_3
0x723	        0x488945f0	             mov qword [rbp - 0x10], rax	       231	diffcore-break.c	FUNCTION_3
0x727	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       232	diffcore-break.c	FUNCTION_3	IF_1	CALL_1
0x72b	          0x488b00	                    mov rax, qword [rax]	       232	diffcore-break.c	FUNCTION_3	IF_1	CALL_1
0x72e	         0xfb74040	           movzx eax, word [rax + 0x40] 	       232	diffcore-break.c	FUNCTION_3	IF_1	CALL_1
0x732	          0x6685c0	                             test ax, ax	       232	diffcore-break.c	FUNCTION_3	IF_1	CALL_1
0x735	            0x7410	                            je 0x4000787	       232	diffcore-break.c	FUNCTION_3	IF_1	CALL_1
0x737	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       234	diffcore-break.c	FUNCTION_3	IF_1
0x73b	        0x488945f0	             mov qword [rbp - 0x10], rax	       234	diffcore-break.c	FUNCTION_3	IF_1
0x73f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       234	diffcore-break.c	FUNCTION_3	IF_1
0x743	        0x488945e8	             mov qword [rbp - 0x18], rax	       234	diffcore-break.c	FUNCTION_3	IF_1
0x747	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       237	diffcore-break.c	FUNCTION_3	IF_2	CALL_2
0x74b	          0x488b00	                    mov rax, qword [rax]	       237	diffcore-break.c	FUNCTION_3	IF_2	CALL_2
0x74e	         0xfb74040	           movzx eax, word [rax + 0x40] 	       237	diffcore-break.c	FUNCTION_3	IF_2	CALL_2
0x752	          0x6685c0	                             test ax, ax	       237	diffcore-break.c	FUNCTION_3	IF_2	CALL_2
0x755	            0x750f	                           jne 0x40007a6	       237	diffcore-break.c	FUNCTION_3	IF_2	CALL_2
0x757	      0xbf00000000	                              mov edi, 0	       238	diffcore-break.c	FUNCTION_3	CALL_3
0x75c	      0xb800000000	                              mov eax, 0	       238	diffcore-break.c	FUNCTION_3	CALL_3
0x761	      0xe800000000	                          call 0x40007a6	       238	diffcore-break.c	FUNCTION_3	CALL_3
0x766	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       239	diffcore-break.c	FUNCTION_3	IF_3	CALL_4
0x76a	        0x488b4008	                mov rax, qword [rax + 8]	       239	diffcore-break.c	FUNCTION_3	IF_3	CALL_4
0x76e	         0xfb74040	           movzx eax, word [rax + 0x40] 	       239	diffcore-break.c	FUNCTION_3	IF_3	CALL_4
0x772	          0x6685c0	                             test ax, ax	       239	diffcore-break.c	FUNCTION_3	IF_3	CALL_4
0x775	            0x740f	                            je 0x40007c6	       239	diffcore-break.c	FUNCTION_3	IF_3	CALL_4
0x777	      0xbf00000000	                              mov edi, 0	       240	diffcore-break.c	FUNCTION_3	CALL_5
0x77c	      0xb800000000	                              mov eax, 0	       240	diffcore-break.c	FUNCTION_3	CALL_5
0x781	      0xe800000000	                          call 0x40007c6	       240	diffcore-break.c	FUNCTION_3	CALL_5
0x786	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       241	diffcore-break.c	FUNCTION_3	IF_4	CALL_6
0x78a	          0x488b00	                    mov rax, qword [rax]	       241	diffcore-break.c	FUNCTION_3	IF_4	CALL_6
0x78d	         0xfb74040	           movzx eax, word [rax + 0x40] 	       241	diffcore-break.c	FUNCTION_3	IF_4	CALL_6
0x791	          0x6685c0	                             test ax, ax	       241	diffcore-break.c	FUNCTION_3	IF_4	CALL_6
0x794	            0x740f	                            je 0x40007e5	       241	diffcore-break.c	FUNCTION_3	IF_4	CALL_6
0x796	      0xbf00000000	                              mov edi, 0	       242	diffcore-break.c	FUNCTION_3	CALL_7
0x79b	      0xb800000000	                              mov eax, 0	       242	diffcore-break.c	FUNCTION_3	CALL_7
0x7a0	      0xe800000000	                          call 0x40007e5	       242	diffcore-break.c	FUNCTION_3	CALL_7
0x7a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       243	diffcore-break.c	FUNCTION_3	IF_5	CALL_8
0x7a9	        0x488b4008	                mov rax, qword [rax + 8]	       243	diffcore-break.c	FUNCTION_3	IF_5	CALL_8
0x7ad	         0xfb74040	           movzx eax, word [rax + 0x40] 	       243	diffcore-break.c	FUNCTION_3	IF_5	CALL_8
0x7b1	          0x6685c0	                             test ax, ax	       243	diffcore-break.c	FUNCTION_3	IF_5	CALL_8
0x7b4	            0x750f	                           jne 0x4000805	       243	diffcore-break.c	FUNCTION_3	IF_5	CALL_8
0x7b6	      0xbf00000000	                              mov edi, 0	       244	diffcore-break.c	FUNCTION_3	CALL_9
0x7bb	      0xb800000000	                              mov eax, 0	       244	diffcore-break.c	FUNCTION_3	CALL_9
0x7c0	      0xe800000000	                          call 0x4000805	       244	diffcore-break.c	FUNCTION_3	CALL_9
0x7c5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       246	diffcore-break.c	FUNCTION_3	CALL_10
0x7c9	        0x488b5008	                mov rdx, qword [rax + 8]	       246	diffcore-break.c	FUNCTION_3	CALL_10
0x7cd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       246	diffcore-break.c	FUNCTION_3	CALL_10
0x7d1	          0x488b08	                    mov rcx, qword [rax]	       246	diffcore-break.c	FUNCTION_3	CALL_10
0x7d4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       246	diffcore-break.c	FUNCTION_3	CALL_10
0x7d8	          0x4889ce	                            mov rsi, rcx	       246	diffcore-break.c	FUNCTION_3	CALL_10
0x7db	          0x4889c7	                            mov rdi, rax	       246	diffcore-break.c	FUNCTION_3	CALL_10
0x7de	      0xe800000000	                          call 0x4000823	       246	diffcore-break.c	FUNCTION_3	CALL_10
0x7e3	        0x488945f8	                mov qword [rbp - 8], rax	       246	diffcore-break.c	FUNCTION_3	CALL_10
0x7e7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       247	diffcore-break.c	FUNCTION_3
0x7eb	         0xfb75010	           movzx edx, word [rax + 0x10] 	       247	diffcore-break.c	FUNCTION_3
0x7ef	        0x488b45f8	                mov rax, qword [rbp - 8]	       247	diffcore-break.c	FUNCTION_3
0x7f3	        0x66895010	               mov word [rax + 0x10], dx	       247	diffcore-break.c	FUNCTION_3
0x7f7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       254	diffcore-break.c	FUNCTION_3
0x7fb	          0x488b00	                    mov rax, qword [rax]	       254	diffcore-break.c	FUNCTION_3
0x7fe	          0x8b503c	            mov edx, dword [rax + 0x3c] 	       254	diffcore-break.c	FUNCTION_3
0x801	          0x83c201	                              add edx, 1	       254	diffcore-break.c	FUNCTION_3
0x804	          0x89503c	             mov dword [rax + 0x3c], edx	       254	diffcore-break.c	FUNCTION_3
0x807	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       255	diffcore-break.c	FUNCTION_3	CALL_11
0x80b	        0x488b4008	                mov rax, qword [rax + 8]	       255	diffcore-break.c	FUNCTION_3	CALL_11
0x80f	          0x4889c7	                            mov rdi, rax	       255	diffcore-break.c	FUNCTION_3	CALL_11
0x812	      0xe800000000	                          call 0x4000857	       255	diffcore-break.c	FUNCTION_3	CALL_11
0x817	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       256	diffcore-break.c	FUNCTION_3	CALL_12
0x81b	          0x488b00	                    mov rax, qword [rax]	       256	diffcore-break.c	FUNCTION_3	CALL_12
0x81e	          0x4889c7	                            mov rdi, rax	       256	diffcore-break.c	FUNCTION_3	CALL_12
0x821	      0xe800000000	                          call 0x4000866	       256	diffcore-break.c	FUNCTION_3	CALL_12
0x826	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       257	diffcore-break.c	FUNCTION_3	CALL_13
0x82a	          0x4889c7	                            mov rdi, rax	       257	diffcore-break.c	FUNCTION_3	CALL_13
0x82d	      0xe800000000	                          call 0x4000872	       257	diffcore-break.c	FUNCTION_3	CALL_13
0x832	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       258	diffcore-break.c	FUNCTION_3	CALL_14
0x836	          0x4889c7	                            mov rdi, rax	       258	diffcore-break.c	FUNCTION_3	CALL_14
0x839	      0xe800000000	                          call 0x400087e	       258	diffcore-break.c	FUNCTION_3	CALL_14
0x83e	              0x90	                                     nop	       259	diffcore-break.c	FUNCTION_3
0x83f	              0xc9	                                   leave	       259	diffcore-break.c	FUNCTION_3
0x840	              0xc3	                                     ret	       259	diffcore-break.c	FUNCTION_3
should_break	ELSE,1:CALL,6:IF,12:WHILE,0:DO,0:FOR,0:SWITCH,0:functions,0	269
0x89	              0x55	                                push rbp	        12	diffcore-break.c	FUNCTION_1
0x8a	          0x4889e5	                            mov rbp, rsp	        12	diffcore-break.c	FUNCTION_1
0x8d	        0x4883ec50	                           sub rsp, 0x50	        12	diffcore-break.c	FUNCTION_1
0x91	        0x48897dc8	             mov qword [rbp - 0x38], rdi	        12	diffcore-break.c	FUNCTION_1
0x95	        0x488975c0	             mov qword [rbp - 0x40], rsi	        12	diffcore-break.c	FUNCTION_1
0x99	          0x8955bc	             mov dword [rbp - 0x44], edx	        12	diffcore-break.c	FUNCTION_1
0x9c	        0x48894db0	             mov qword [rbp - 0x50], rcx	        12	diffcore-break.c	FUNCTION_1
0xa0	    0x64488b042528	                mov rax, qword fs:[0x28]	        12	diffcore-break.c	FUNCTION_1
0xa9	        0x488945f8	                mov qword [rbp - 8], rax	        12	diffcore-break.c	FUNCTION_1
0xad	            0x31c0	                            xor eax, eax	        12	diffcore-break.c	FUNCTION_1
0xaf	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        51	diffcore-break.c	FUNCTION_1
0xb3	    0xc70000000000	                      mov dword [rax], 0	        51	diffcore-break.c	FUNCTION_1
0xb9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0xbd	         0xfb74040	           movzx eax, word [rax + 0x40] 	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0xc1	           0xfb7c0	                           movzx eax, ax	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0xc4	      0x2500f00000	                         and eax, 0xf000	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0xc9	      0x3d00800000	                         cmp eax, 0x8000	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0xce	           0xf94c2	                                 sete dl	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0xd1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0xd5	         0xfb74040	           movzx eax, word [rax + 0x40] 	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0xd9	           0xfb7c0	                           movzx eax, ax	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0xdc	      0x2500f00000	                         and eax, 0xf000	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0xe1	      0x3d00800000	                         cmp eax, 0x8000	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0xe6	           0xf94c0	                                 sete al	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0xe9	            0x31d0	                            xor eax, edx	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0xeb	            0x84c0	                             test al, al	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0xed	            0x7414	                            je 0x4000143	        55	diffcore-break.c	FUNCTION_1	IF_1	CALL_2
0xef	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        56	diffcore-break.c	FUNCTION_1	IF_1
0xf3	    0xc70060ea0000	                 mov dword [rax], 0xea60	        56	diffcore-break.c	FUNCTION_1	IF_1
0xf9	      0xb801000000	                              mov eax, 1	        57	diffcore-break.c	FUNCTION_1	IF_1
0xfe	      0xe94f030000	                           jmp 0x4000492	        57	diffcore-break.c	FUNCTION_1	IF_1
0x103	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        60	diffcore-break.c	FUNCTION_1	IF_2
0x107	         0xfb64042	           movzx eax, byte [rax + 0x42] 	        60	diffcore-break.c	FUNCTION_1	IF_2
0x10b	          0x83e001	                              and eax, 1	        60	diffcore-break.c	FUNCTION_1	IF_2
0x10e	            0x84c0	                             test al, al	        60	diffcore-break.c	FUNCTION_1	IF_2
0x110	            0x7430	                            je 0x4000182	        60	diffcore-break.c	FUNCTION_1	IF_2
0x112	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        60	diffcore-break.c	FUNCTION_1	IF_2
0x116	         0xfb64042	           movzx eax, byte [rax + 0x42] 	        60	diffcore-break.c	FUNCTION_1	IF_2
0x11a	          0x83e001	                              and eax, 1	        60	diffcore-break.c	FUNCTION_1	IF_2
0x11d	            0x84c0	                             test al, al	        60	diffcore-break.c	FUNCTION_1	IF_2
0x11f	            0x7421	                            je 0x4000182	        60	diffcore-break.c	FUNCTION_1	IF_2
0x121	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	        61	diffcore-break.c	FUNCTION_1	IF_2	CALL_3
0x125	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        61	diffcore-break.c	FUNCTION_1	IF_2	CALL_3
0x129	          0x4889d6	                            mov rsi, rdx	        61	diffcore-break.c	FUNCTION_1	IF_2	CALL_3
0x12c	          0x4889c7	                            mov rdi, rax	        61	diffcore-break.c	FUNCTION_1	IF_2	CALL_3
0x12f	      0xe830ffffff	                         call sym.oidcmp	        61	diffcore-break.c	FUNCTION_1	IF_2	CALL_3
0x134	            0x85c0	                           test eax, eax	        60	diffcore-break.c	FUNCTION_1	IF_2
0x136	            0x750a	                           jne 0x4000182	        60	diffcore-break.c	FUNCTION_1	IF_2
0x138	      0xb800000000	                              mov eax, 0	        62	diffcore-break.c	FUNCTION_1	IF_2
0x13d	      0xe910030000	                           jmp 0x4000492	        62	diffcore-break.c	FUNCTION_1	IF_2
0x142	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x146	      0xbe00000000	                              mov esi, 0	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x14b	          0x4889c7	                            mov rdi, rax	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x14e	      0xe800000000	                          call 0x4000193	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x153	            0x85c0	                           test eax, eax	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x155	            0x7515	                           jne 0x40001ac	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x157	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x15b	      0xbe00000000	                              mov esi, 0	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x160	          0x4889c7	                            mov rdi, rax	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x163	      0xe800000000	                          call 0x40001a8	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x168	            0x85c0	                           test eax, eax	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x16a	            0x740a	                            je 0x40001b6	        64	diffcore-break.c	FUNCTION_1	IF_3	CALL_5
0x16c	      0xb800000000	                              mov eax, 0	        65	diffcore-break.c	FUNCTION_1	IF_3
0x171	      0xe9dc020000	                           jmp 0x4000492	        65	diffcore-break.c	FUNCTION_1	IF_3
0x176	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        67	diffcore-break.c	FUNCTION_1
0x17a	        0x488b5030	            mov rdx, qword [rax + 0x30] 	        67	diffcore-break.c	FUNCTION_1
0x17e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        67	diffcore-break.c	FUNCTION_1
0x182	        0x488b4030	            mov rax, qword [rax + 0x30] 	        67	diffcore-break.c	FUNCTION_1
0x186	          0x4839c2	                            cmp rdx, rax	        67	diffcore-break.c	FUNCTION_1
0x189	        0x480f43c2	                         cmovae rax, rdx	        67	diffcore-break.c	FUNCTION_1
0x18d	        0x488945e0	             mov qword [rbp - 0x20], rax	        67	diffcore-break.c	FUNCTION_1
0x191	    0x48817de08f01	          cmp qword [rbp - 0x20], 0x18f 	        68	diffcore-break.c	FUNCTION_1	IF_4
0x199	            0x770a	                            ja 0x40001e5	        68	diffcore-break.c	FUNCTION_1	IF_4
0x19b	      0xb800000000	                              mov eax, 0	        69	diffcore-break.c	FUNCTION_1	IF_4
0x1a0	      0xe9ad020000	                           jmp 0x4000492	        69	diffcore-break.c	FUNCTION_1	IF_4
0x1a5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        71	diffcore-break.c	FUNCTION_1	IF_5
0x1a9	        0x488b4030	            mov rax, qword [rax + 0x30] 	        71	diffcore-break.c	FUNCTION_1	IF_5
0x1ad	          0x4885c0	                           test rax, rax	        71	diffcore-break.c	FUNCTION_1	IF_5
0x1b0	            0x750a	                           jne 0x40001fc	        71	diffcore-break.c	FUNCTION_1	IF_5
0x1b2	      0xb800000000	                              mov eax, 0	        72	diffcore-break.c	FUNCTION_1	IF_5
0x1b7	      0xe996020000	                           jmp 0x4000492	        72	diffcore-break.c	FUNCTION_1	IF_5
0x1bc	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x1c0	        0x488d4828	                   lea rcx, [rax + 0x28]	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x1c4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x1c8	        0x488d5028	                   lea rdx, [rax + 0x28]	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x1cc	        0x4c8d45d8	                    lea r8, [rbp - 0x28]	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x1d0	        0x488d7dd0	                   lea rdi, [rbp - 0x30]	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x1d4	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x1d8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x1dc	          0x4d89c1	                              mov r9, r8	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x1df	          0x4989f8	                             mov r8, rdi	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x1e2	          0x4889c7	                            mov rdi, rax	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x1e5	      0xe800000000	                          call 0x400022a	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x1ea	            0x85c0	                           test eax, eax	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x1ec	            0x740a	                            je 0x4000238	        74	diffcore-break.c	FUNCTION_1	IF_6	CALL_6
0x1ee	      0xb800000000	                              mov eax, 0	        77	diffcore-break.c	FUNCTION_1	IF_6
0x1f3	      0xe95a020000	                           jmp 0x4000492	        77	diffcore-break.c	FUNCTION_1	IF_6
0x1f8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        80	diffcore-break.c	FUNCTION_1	IF_7
0x1fc	        0x488b5030	            mov rdx, qword [rax + 0x30] 	        80	diffcore-break.c	FUNCTION_1	IF_7
0x200	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        80	diffcore-break.c	FUNCTION_1	IF_7
0x204	          0x4839c2	                            cmp rdx, rax	        80	diffcore-break.c	FUNCTION_1	IF_7
0x207	            0x730c	                           jae 0x4000255	        80	diffcore-break.c	FUNCTION_1	IF_7
0x209	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        81	diffcore-break.c	FUNCTION_1	IF_7
0x20d	        0x488b4030	            mov rax, qword [rax + 0x30] 	        81	diffcore-break.c	FUNCTION_1	IF_7
0x211	        0x488945d0	             mov qword [rbp - 0x30], rax	        81	diffcore-break.c	FUNCTION_1	IF_7
0x215	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        82	diffcore-break.c	FUNCTION_1	IF_8
0x219	        0x488b4030	            mov rax, qword [rax + 0x30] 	        82	diffcore-break.c	FUNCTION_1	IF_8
0x21d	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	        82	diffcore-break.c	FUNCTION_1	IF_8
0x221	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	        82	diffcore-break.c	FUNCTION_1	IF_8
0x225	          0x4801ca	                            add rdx, rcx	        82	diffcore-break.c	FUNCTION_1	IF_8
0x228	          0x4839d0	                            cmp rax, rdx	        82	diffcore-break.c	FUNCTION_1	IF_8
0x22b	            0x7331	                           jae 0x400029e	        82	diffcore-break.c	FUNCTION_1	IF_8
0x22d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        83	diffcore-break.c	FUNCTION_1	IF_8	IF_9
0x231	        0x488b5030	            mov rdx, qword [rax + 0x30] 	        83	diffcore-break.c	FUNCTION_1	IF_8	IF_9
0x235	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        83	diffcore-break.c	FUNCTION_1	IF_8	IF_9
0x239	          0x4839c2	                            cmp rdx, rax	        83	diffcore-break.c	FUNCTION_1	IF_8	IF_9
0x23c	            0x7618	                           jbe 0x4000296	        83	diffcore-break.c	FUNCTION_1	IF_8	IF_9
0x23e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        84	diffcore-break.c	FUNCTION_1	IF_8	IF_9
0x242	        0x488b5030	            mov rdx, qword [rax + 0x30] 	        84	diffcore-break.c	FUNCTION_1	IF_8	IF_9
0x246	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        84	diffcore-break.c	FUNCTION_1	IF_8	IF_9
0x24a	          0x4829c2	                            sub rdx, rax	        84	diffcore-break.c	FUNCTION_1	IF_8	IF_9
0x24d	          0x4889d0	                            mov rax, rdx	        84	diffcore-break.c	FUNCTION_1	IF_8	IF_9
0x250	        0x488945d8	             mov qword [rbp - 0x28], rax	        84	diffcore-break.c	FUNCTION_1	IF_8	IF_9
0x254	            0xeb08	                           jmp 0x400029e	        84	diffcore-break.c	FUNCTION_1	IF_8	IF_9
0x256	    0x48c745d80000	               mov qword [rbp - 0x28], 0	        86	diffcore-break.c	FUNCTION_1	IF_8	ELSE_1
0x25e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        88	diffcore-break.c	FUNCTION_1
0x262	        0x488b5030	            mov rdx, qword [rax + 0x30] 	        88	diffcore-break.c	FUNCTION_1
0x266	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        88	diffcore-break.c	FUNCTION_1
0x26a	          0x4829c2	                            sub rdx, rax	        88	diffcore-break.c	FUNCTION_1
0x26d	          0x4889d0	                            mov rax, rdx	        88	diffcore-break.c	FUNCTION_1
0x270	        0x488945e8	             mov qword [rbp - 0x18], rax	        88	diffcore-break.c	FUNCTION_1
0x274	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        95	diffcore-break.c	FUNCTION_1
0x278	          0x4885c0	                           test rax, rax	        95	diffcore-break.c	FUNCTION_1
0x27b	            0x780b	                            js 0x40002c8	        95	diffcore-break.c	FUNCTION_1
0x27d	        0x660fefc0	                         pxor xmm0, xmm0	        95	diffcore-break.c	FUNCTION_1
0x281	      0xf2480f2ac0	                      cvtsi2sd xmm0, rax	        95	diffcore-break.c	FUNCTION_1
0x286	            0xeb19	                           jmp 0x40002e1	        95	diffcore-break.c	FUNCTION_1
0x288	          0x4889c2	                            mov rdx, rax	        95	diffcore-break.c	FUNCTION_1
0x28b	          0x48d1ea	                              shr rdx, 1	        95	diffcore-break.c	FUNCTION_1
0x28e	          0x83e001	                              and eax, 1	        95	diffcore-break.c	FUNCTION_1
0x291	          0x4809c2	                             or rdx, rax	        95	diffcore-break.c	FUNCTION_1
0x294	        0x660fefc0	                         pxor xmm0, xmm0	        95	diffcore-break.c	FUNCTION_1
0x298	      0xf2480f2ac2	                      cvtsi2sd xmm0, rdx	        95	diffcore-break.c	FUNCTION_1
0x29d	        0xf20f58c0	                        addsd xmm0, xmm0	        95	diffcore-break.c	FUNCTION_1
0x2a1	    0xf20f100d0000	         movsd xmm1, qword [0x040002e9] 	        95	diffcore-break.c	FUNCTION_1
0x2a9	        0xf20f59c8	                        mulsd xmm1, xmm0	        95	diffcore-break.c	FUNCTION_1
0x2ad	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        95	diffcore-break.c	FUNCTION_1
0x2b1	        0x488b4030	            mov rax, qword [rax + 0x30] 	        95	diffcore-break.c	FUNCTION_1
0x2b5	          0x4885c0	                           test rax, rax	        95	diffcore-break.c	FUNCTION_1
0x2b8	            0x780b	                            js 0x4000305	        95	diffcore-break.c	FUNCTION_1
0x2ba	        0x660fefc0	                         pxor xmm0, xmm0	        95	diffcore-break.c	FUNCTION_1
0x2be	      0xf2480f2ac0	                      cvtsi2sd xmm0, rax	        95	diffcore-break.c	FUNCTION_1
0x2c3	            0xeb19	                           jmp 0x400031e	        95	diffcore-break.c	FUNCTION_1
0x2c5	          0x4889c2	                            mov rdx, rax	        95	diffcore-break.c	FUNCTION_1
0x2c8	          0x48d1ea	                              shr rdx, 1	        95	diffcore-break.c	FUNCTION_1
0x2cb	          0x83e001	                              and eax, 1	        95	diffcore-break.c	FUNCTION_1
0x2ce	          0x4809c2	                             or rdx, rax	        95	diffcore-break.c	FUNCTION_1
0x2d1	        0x660fefc0	                         pxor xmm0, xmm0	        95	diffcore-break.c	FUNCTION_1
0x2d5	      0xf2480f2ac2	                      cvtsi2sd xmm0, rdx	        95	diffcore-break.c	FUNCTION_1
0x2da	        0xf20f58c0	                        addsd xmm0, xmm0	        95	diffcore-break.c	FUNCTION_1
0x2de	        0xf20f5ec8	                        divsd xmm1, xmm0	        95	diffcore-break.c	FUNCTION_1
0x2e2	        0x660f28c1	                       movapd xmm0, xmm1	        95	diffcore-break.c	FUNCTION_1
0x2e6	        0xf20f2cd0	                     cvttsd2si edx, xmm0	        95	diffcore-break.c	FUNCTION_1
0x2ea	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        95	diffcore-break.c	FUNCTION_1
0x2ee	            0x8910	                    mov dword [rax], edx	        95	diffcore-break.c	FUNCTION_1
0x2f0	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        96	diffcore-break.c	FUNCTION_1	IF_10
0x2f4	            0x8b00	                    mov eax, dword [rax]	        96	diffcore-break.c	FUNCTION_1	IF_10
0x2f6	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	        96	diffcore-break.c	FUNCTION_1	IF_10
0x2f9	            0x7e0a	                           jle 0x4000345	        96	diffcore-break.c	FUNCTION_1	IF_10
0x2fb	      0xb801000000	                              mov eax, 1	        97	diffcore-break.c	FUNCTION_1	IF_10
0x300	      0xe94d010000	                           jmp 0x4000492	        97	diffcore-break.c	FUNCTION_1	IF_10
0x305	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       102	diffcore-break.c	FUNCTION_1
0x309	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       102	diffcore-break.c	FUNCTION_1
0x30d	          0x4801d0	                            add rax, rdx	       102	diffcore-break.c	FUNCTION_1
0x310	        0x488945f0	             mov qword [rbp - 0x10], rax	       102	diffcore-break.c	FUNCTION_1
0x314	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       103	diffcore-break.c	FUNCTION_1	IF_11
0x318	          0x4885c0	                           test rax, rax	       103	diffcore-break.c	FUNCTION_1	IF_11
0x31b	            0x780b	                            js 0x4000368	       103	diffcore-break.c	FUNCTION_1	IF_11
0x31d	        0x660fefc0	                         pxor xmm0, xmm0	       103	diffcore-break.c	FUNCTION_1	IF_11
0x321	      0xf2480f2ac0	                      cvtsi2sd xmm0, rax	       103	diffcore-break.c	FUNCTION_1	IF_11
0x326	            0xeb19	                           jmp 0x4000381	       103	diffcore-break.c	FUNCTION_1	IF_11
0x328	          0x4889c2	                            mov rdx, rax	       103	diffcore-break.c	FUNCTION_1	IF_11
0x32b	          0x48d1ea	                              shr rdx, 1	       103	diffcore-break.c	FUNCTION_1	IF_11
0x32e	          0x83e001	                              and eax, 1	       103	diffcore-break.c	FUNCTION_1	IF_11
0x331	          0x4809c2	                             or rdx, rax	       103	diffcore-break.c	FUNCTION_1	IF_11
0x334	        0x660fefc0	                         pxor xmm0, xmm0	       103	diffcore-break.c	FUNCTION_1	IF_11
0x338	      0xf2480f2ac2	                      cvtsi2sd xmm0, rdx	       103	diffcore-break.c	FUNCTION_1	IF_11
0x33d	        0xf20f58c0	                        addsd xmm0, xmm0	       103	diffcore-break.c	FUNCTION_1	IF_11
0x341	    0xf20f100d0000	         movsd xmm1, qword [0x04000389] 	       103	diffcore-break.c	FUNCTION_1	IF_11
0x349	        0xf20f59c8	                        mulsd xmm1, xmm0	       103	diffcore-break.c	FUNCTION_1	IF_11
0x34d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       103	diffcore-break.c	FUNCTION_1	IF_11
0x351	          0x4885c0	                           test rax, rax	       103	diffcore-break.c	FUNCTION_1	IF_11
0x354	            0x780b	                            js 0x40003a1	       103	diffcore-break.c	FUNCTION_1	IF_11
0x356	        0x660fefc0	                         pxor xmm0, xmm0	       103	diffcore-break.c	FUNCTION_1	IF_11
0x35a	      0xf2480f2ac0	                      cvtsi2sd xmm0, rax	       103	diffcore-break.c	FUNCTION_1	IF_11
0x35f	            0xeb19	                           jmp 0x40003ba	       103	diffcore-break.c	FUNCTION_1	IF_11
0x361	          0x4889c2	                            mov rdx, rax	       103	diffcore-break.c	FUNCTION_1	IF_11
0x364	          0x48d1ea	                              shr rdx, 1	       103	diffcore-break.c	FUNCTION_1	IF_11
0x367	          0x83e001	                              and eax, 1	       103	diffcore-break.c	FUNCTION_1	IF_11
0x36a	          0x4809c2	                             or rdx, rax	       103	diffcore-break.c	FUNCTION_1	IF_11
0x36d	        0x660fefc0	                         pxor xmm0, xmm0	       103	diffcore-break.c	FUNCTION_1	IF_11
0x371	      0xf2480f2ac2	                      cvtsi2sd xmm0, rdx	       103	diffcore-break.c	FUNCTION_1	IF_11
0x376	        0xf20f58c0	                        addsd xmm0, xmm0	       103	diffcore-break.c	FUNCTION_1	IF_11
0x37a	        0xf20f5ec8	                        divsd xmm1, xmm0	       103	diffcore-break.c	FUNCTION_1	IF_11
0x37e	        0x660fefc0	                         pxor xmm0, xmm0	       103	diffcore-break.c	FUNCTION_1	IF_11
0x382	      0xf20f2a45bc	       cvtsi2sd xmm0, dword [rbp - 0x44]	       103	diffcore-break.c	FUNCTION_1	IF_11
0x387	        0x660f2ec1	                      ucomisd xmm0, xmm1	       103	diffcore-break.c	FUNCTION_1	IF_11
0x38b	            0x760a	                           jbe 0x40003d7	       103	diffcore-break.c	FUNCTION_1	IF_11
0x38d	      0xb800000000	                              mov eax, 0	       104	diffcore-break.c	FUNCTION_1	IF_11
0x392	      0xe9bb000000	                           jmp 0x4000492	       104	diffcore-break.c	FUNCTION_1	IF_11
0x397	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       109	diffcore-break.c	FUNCTION_1	IF_12
0x39b	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       109	diffcore-break.c	FUNCTION_1	IF_12
0x39f	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       109	diffcore-break.c	FUNCTION_1	IF_12
0x3a2	            0x4898	                                    cdqe	       109	diffcore-break.c	FUNCTION_1	IF_12
0x3a4	        0x480fafc2	                           imul rax, rdx	       109	diffcore-break.c	FUNCTION_1	IF_12
0x3a8	          0x4885c0	                           test rax, rax	       109	diffcore-break.c	FUNCTION_1	IF_12
0x3ab	            0x780b	                            js 0x40003f8	       109	diffcore-break.c	FUNCTION_1	IF_12
0x3ad	        0x660fefc0	                         pxor xmm0, xmm0	       109	diffcore-break.c	FUNCTION_1	IF_12
0x3b1	      0xf2480f2ac0	                      cvtsi2sd xmm0, rax	       109	diffcore-break.c	FUNCTION_1	IF_12
0x3b6	            0xeb19	                           jmp 0x4000411	       109	diffcore-break.c	FUNCTION_1	IF_12
0x3b8	          0x4889c2	                            mov rdx, rax	       109	diffcore-break.c	FUNCTION_1	IF_12
0x3bb	          0x48d1ea	                              shr rdx, 1	       109	diffcore-break.c	FUNCTION_1	IF_12
0x3be	          0x83e001	                              and eax, 1	       109	diffcore-break.c	FUNCTION_1	IF_12
0x3c1	          0x4809c2	                             or rdx, rax	       109	diffcore-break.c	FUNCTION_1	IF_12
0x3c4	        0x660fefc0	                         pxor xmm0, xmm0	       109	diffcore-break.c	FUNCTION_1	IF_12
0x3c8	      0xf2480f2ac2	                      cvtsi2sd xmm0, rdx	       109	diffcore-break.c	FUNCTION_1	IF_12
0x3cd	        0xf20f58c0	                        addsd xmm0, xmm0	       109	diffcore-break.c	FUNCTION_1	IF_12
0x3d1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       109	diffcore-break.c	FUNCTION_1	IF_12
0x3d5	          0x4885c0	                           test rax, rax	       109	diffcore-break.c	FUNCTION_1	IF_12
0x3d8	            0x780b	                            js 0x4000425	       109	diffcore-break.c	FUNCTION_1	IF_12
0x3da	        0x660fefc9	                         pxor xmm1, xmm1	       109	diffcore-break.c	FUNCTION_1	IF_12
0x3de	      0xf2480f2ac8	                      cvtsi2sd xmm1, rax	       109	diffcore-break.c	FUNCTION_1	IF_12
0x3e3	            0xeb19	                           jmp 0x400043e	       109	diffcore-break.c	FUNCTION_1	IF_12
0x3e5	          0x4889c2	                            mov rdx, rax	       109	diffcore-break.c	FUNCTION_1	IF_12
0x3e8	          0x48d1ea	                              shr rdx, 1	       109	diffcore-break.c	FUNCTION_1	IF_12
0x3eb	          0x83e001	                              and eax, 1	       109	diffcore-break.c	FUNCTION_1	IF_12
0x3ee	          0x4809c2	                             or rdx, rax	       109	diffcore-break.c	FUNCTION_1	IF_12
0x3f1	        0x660fefc9	                         pxor xmm1, xmm1	       109	diffcore-break.c	FUNCTION_1	IF_12
0x3f5	      0xf2480f2aca	                      cvtsi2sd xmm1, rdx	       109	diffcore-break.c	FUNCTION_1	IF_12
0x3fa	        0xf20f58c9	                        addsd xmm1, xmm1	       109	diffcore-break.c	FUNCTION_1	IF_12
0x3fe	    0xf20f10150000	         movsd xmm2, qword [0x04000446] 	       109	diffcore-break.c	FUNCTION_1	IF_12
0x406	        0xf20f59ca	                        mulsd xmm1, xmm2	       109	diffcore-break.c	FUNCTION_1	IF_12
0x40a	        0x660f2ec8	                      ucomisd xmm1, xmm0	       109	diffcore-break.c	FUNCTION_1	IF_12
0x40e	            0x763d	                           jbe 0x400048d	       109	diffcore-break.c	FUNCTION_1	IF_12
0x410	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       110	diffcore-break.c	FUNCTION_1	IF_12
0x414	          0x4889d0	                            mov rax, rdx	       110	diffcore-break.c	FUNCTION_1	IF_12
0x417	        0x48c1e002	                              shl rax, 2	       110	diffcore-break.c	FUNCTION_1	IF_12
0x41b	          0x4801d0	                            add rax, rdx	       110	diffcore-break.c	FUNCTION_1	IF_12
0x41e	        0x48c1e002	                              shl rax, 2	       110	diffcore-break.c	FUNCTION_1	IF_12
0x422	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       109	diffcore-break.c	FUNCTION_1	IF_12
0x426	            0x7325	                           jae 0x400048d	       109	diffcore-break.c	FUNCTION_1	IF_12
0x428	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       111	diffcore-break.c	FUNCTION_1	IF_12
0x42c	          0x4889d0	                            mov rax, rdx	       111	diffcore-break.c	FUNCTION_1	IF_12
0x42f	        0x48c1e002	                              shl rax, 2	       111	diffcore-break.c	FUNCTION_1	IF_12
0x433	          0x4801d0	                            add rax, rdx	       111	diffcore-break.c	FUNCTION_1	IF_12
0x436	        0x48c1e002	                              shl rax, 2	       111	diffcore-break.c	FUNCTION_1	IF_12
0x43a	          0x4889c2	                            mov rdx, rax	       111	diffcore-break.c	FUNCTION_1	IF_12
0x43d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       111	diffcore-break.c	FUNCTION_1	IF_12
0x441	          0x4839c2	                            cmp rdx, rax	       110	diffcore-break.c	FUNCTION_1	IF_12
0x444	            0x7307	                           jae 0x400048d	       110	diffcore-break.c	FUNCTION_1	IF_12
0x446	      0xb800000000	                              mov eax, 0	       112	diffcore-break.c	FUNCTION_1	IF_12
0x44b	            0xeb05	                           jmp 0x4000492	       112	diffcore-break.c	FUNCTION_1	IF_12
0x44d	      0xb801000000	                              mov eax, 1	       114	diffcore-break.c	FUNCTION_1
0x452	        0x488b4df8	                mov rcx, qword [rbp - 8]	       115	diffcore-break.c	FUNCTION_1
0x456	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       115	diffcore-break.c	FUNCTION_1
0x45f	            0x7405	                            je 0x40004a6	       115	diffcore-break.c	FUNCTION_1
0x461	      0xe800000000	                          call 0x40004a6	       115	diffcore-break.c	FUNCTION_1
0x466	              0xc9	                                   leave	       115	diffcore-break.c	FUNCTION_1
0x467	              0xc3	                                     ret	       115	diffcore-break.c	FUNCTION_1
