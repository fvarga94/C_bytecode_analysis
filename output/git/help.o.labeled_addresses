list_common_guides_help	WHILE,0:functions,0:DO,0:CALL,12:FOR,2:ELSE,0:IF,1:SWITCH,0	78
0x129e	              0x55	                                push rbp	       418	help.c	FUNCTION_24
0x129f	          0x4889e5	                            mov rbp, rsp	       418	help.c	FUNCTION_24
0x12a2	              0x53	                                push rbx	       418	help.c	FUNCTION_24
0x12a3	        0x4883ec18	                           sub rsp, 0x18	       418	help.c	FUNCTION_24
0x12a7	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       419	help.c	FUNCTION_24
0x12ae	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       421	help.c	FUNCTION_24	FOR_1	CALL_1
0x12b5	            0xeb46	                           jmp 0x400133d	       421	help.c	FUNCTION_24	FOR_1	CALL_1
0x12b7	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       422	help.c	FUNCTION_24	FOR_1	IF_1	CALL_2
0x12ba	          0x4863d8	                         movsxd rbx, eax	       422	help.c	FUNCTION_24	FOR_1	IF_1	CALL_2
0x12bd	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       422	help.c	FUNCTION_24	FOR_1	IF_1	CALL_2
0x12c0	            0x4898	                                    cdqe	       422	help.c	FUNCTION_24	FOR_1	IF_1	CALL_2
0x12c2	        0x48c1e004	                              shl rax, 4	       422	help.c	FUNCTION_24	FOR_1	IF_1	CALL_2
0x12c6	    0x480500000000	                              add rax, 0	       422	help.c	FUNCTION_24	FOR_1	IF_1	CALL_2
0x12cc	          0x488b00	                    mov rax, qword [rax]	       422	help.c	FUNCTION_24	FOR_1	IF_1	CALL_2
0x12cf	          0x4889c7	                            mov rdi, rax	       422	help.c	FUNCTION_24	FOR_1	IF_1	CALL_2
0x12d2	      0xe800000000	                          call 0x4001317	       422	help.c	FUNCTION_24	FOR_1	IF_1	CALL_2
0x12d7	          0x4839c3	                            cmp rbx, rax	       422	help.c	FUNCTION_24	FOR_1	IF_1	CALL_2
0x12da	            0x731d	                           jae 0x4001339	       422	help.c	FUNCTION_24	FOR_1	IF_1	CALL_2
0x12dc	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       423	help.c	FUNCTION_24	FOR_1	CALL_3
0x12df	            0x4898	                                    cdqe	       423	help.c	FUNCTION_24	FOR_1	CALL_3
0x12e1	        0x48c1e004	                              shl rax, 4	       423	help.c	FUNCTION_24	FOR_1	CALL_3
0x12e5	    0x480500000000	                              add rax, 0	       423	help.c	FUNCTION_24	FOR_1	CALL_3
0x12eb	          0x488b00	                    mov rax, qword [rax]	       423	help.c	FUNCTION_24	FOR_1	CALL_3
0x12ee	          0x4889c7	                            mov rdi, rax	       423	help.c	FUNCTION_24	FOR_1	CALL_3
0x12f1	      0xe800000000	                          call 0x4001336	       423	help.c	FUNCTION_24	FOR_1	CALL_3
0x12f6	          0x8945ec	             mov dword [rbp - 0x14], eax	       423	help.c	FUNCTION_24	FOR_1	CALL_3
0x12f9	        0x8345e801	               add dword [rbp - 0x18], 1	       421	help.c	FUNCTION_24	FOR_1	CALL_1
0x12fd	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       421	help.c	FUNCTION_24	FOR_1	CALL_1
0x1300	          0x83f807	                              cmp eax, 7	       421	help.c	FUNCTION_24	FOR_1	CALL_1
0x1303	            0x76b2	                           jbe 0x40012f7	       421	help.c	FUNCTION_24	FOR_1	CALL_1
0x1305	      0xbf00000000	                              mov edi, 0	       426	help.c	FUNCTION_24	CALL_5
0x130a	      0xe8ddeeffff	                               call sym.	       426	help.c	FUNCTION_24	CALL_5
0x130f	          0x4889c7	                            mov rdi, rax	       426	help.c	FUNCTION_24	CALL_5
0x1312	      0xe800000000	                          call 0x4001357	       426	help.c	FUNCTION_24	CALL_5
0x1317	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       427	help.c	FUNCTION_24	FOR_2	CALL_6
0x131e	            0xeb77	                           jmp 0x40013d7	       427	help.c	FUNCTION_24	FOR_2	CALL_6
0x1320	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       428	help.c	FUNCTION_24	FOR_2	CALL_7
0x1323	            0x4898	                                    cdqe	       428	help.c	FUNCTION_24	FOR_2	CALL_7
0x1325	        0x48c1e004	                              shl rax, 4	       428	help.c	FUNCTION_24	FOR_2	CALL_7
0x1329	    0x480500000000	                              add rax, 0	       428	help.c	FUNCTION_24	FOR_2	CALL_7
0x132f	          0x488b00	                    mov rax, qword [rax]	       428	help.c	FUNCTION_24	FOR_2	CALL_7
0x1332	          0x4889c6	                            mov rsi, rax	       428	help.c	FUNCTION_24	FOR_2	CALL_7
0x1335	      0xbf00000000	                              mov edi, 0	       428	help.c	FUNCTION_24	FOR_2	CALL_7
0x133a	      0xb800000000	                              mov eax, 0	       428	help.c	FUNCTION_24	FOR_2	CALL_7
0x133f	      0xe800000000	                          call 0x4001384	       428	help.c	FUNCTION_24	FOR_2	CALL_7
0x1344	          0x8b5dec	             mov ebx, dword [rbp - 0x14]	       429	help.c	FUNCTION_24	FOR_2	CALL_9
0x1347	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       429	help.c	FUNCTION_24	FOR_2	CALL_9
0x134a	            0x4898	                                    cdqe	       429	help.c	FUNCTION_24	FOR_2	CALL_9
0x134c	        0x48c1e004	                              shl rax, 4	       429	help.c	FUNCTION_24	FOR_2	CALL_9
0x1350	    0x480500000000	                              add rax, 0	       429	help.c	FUNCTION_24	FOR_2	CALL_9
0x1356	          0x488b00	                    mov rax, qword [rax]	       429	help.c	FUNCTION_24	FOR_2	CALL_9
0x1359	          0x4889c7	                            mov rdi, rax	       429	help.c	FUNCTION_24	FOR_2	CALL_9
0x135c	      0xe800000000	                          call 0x40013a1	       429	help.c	FUNCTION_24	FOR_2	CALL_9
0x1361	            0x29c3	                            sub ebx, eax	       429	help.c	FUNCTION_24	FOR_2	CALL_9
0x1363	            0x89d8	                            mov eax, ebx	       429	help.c	FUNCTION_24	FOR_2	CALL_9
0x1365	            0x89c6	                            mov esi, eax	       429	help.c	FUNCTION_24	FOR_2	CALL_9
0x1367	      0xbf20000000	                           mov edi, 0x20	       429	help.c	FUNCTION_24	FOR_2	CALL_9
0x136c	      0xe8a7eeffff	                      call sym.mput_char	       429	help.c	FUNCTION_24	FOR_2	CALL_9
0x1371	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       430	help.c	FUNCTION_24	FOR_2	CALL_11
0x1374	            0x4898	                                    cdqe	       430	help.c	FUNCTION_24	FOR_2	CALL_11
0x1376	        0x48c1e004	                              shl rax, 4	       430	help.c	FUNCTION_24	FOR_2	CALL_11
0x137a	    0x480500000000	                              add rax, 0	       430	help.c	FUNCTION_24	FOR_2	CALL_11
0x1380	          0x488b00	                    mov rax, qword [rax]	       430	help.c	FUNCTION_24	FOR_2	CALL_11
0x1383	          0x4889c7	                            mov rdi, rax	       430	help.c	FUNCTION_24	FOR_2	CALL_11
0x1386	      0xe861eeffff	                               call sym.	       430	help.c	FUNCTION_24	FOR_2	CALL_11
0x138b	          0x4889c7	                            mov rdi, rax	       430	help.c	FUNCTION_24	FOR_2	CALL_11
0x138e	      0xe800000000	                          call 0x40013d3	       430	help.c	FUNCTION_24	FOR_2	CALL_11
0x1393	        0x8345e801	               add dword [rbp - 0x18], 1	       427	help.c	FUNCTION_24	FOR_2	CALL_6
0x1397	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       427	help.c	FUNCTION_24	FOR_2	CALL_6
0x139a	          0x83f807	                              cmp eax, 7	       427	help.c	FUNCTION_24	FOR_2	CALL_6
0x139d	            0x7681	                           jbe 0x4001360	       427	help.c	FUNCTION_24	FOR_2	CALL_6
0x139f	      0xbf0a000000	                            mov edi, 0xa	       432	help.c	FUNCTION_24	CALL_12
0x13a4	      0xe800000000	                          call 0x40013e9	       432	help.c	FUNCTION_24	CALL_12
0x13a9	              0x90	                                     nop	       433	help.c	FUNCTION_24
0x13aa	        0x4883c418	                           add rsp, 0x18	       433	help.c	FUNCTION_24
0x13ae	              0x5b	                                 pop rbx	       433	help.c	FUNCTION_24
0x13af	              0x5d	                                 pop rbp	       433	help.c	FUNCTION_24
0x13b0	              0xc3	                                     ret	       433	help.c	FUNCTION_24
show_html_page	WHILE,0:functions,0:DO,0:CALL,3:FOR,0:ELSE,0:IF,0:SWITCH,0	26
0x123d	              0x55	                                push rbp	       394	help.c	FUNCTION_23
0x123e	          0x4889e5	                            mov rbp, rsp	       394	help.c	FUNCTION_23
0x1241	        0x4883ec40	                           sub rsp, 0x40	       394	help.c	FUNCTION_23
0x1245	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       394	help.c	FUNCTION_23
0x1249	    0x64488b042528	                mov rax, qword fs:[0x28]	       394	help.c	FUNCTION_23
0x1252	        0x488945f8	                mov qword [rbp - 8], rax	       394	help.c	FUNCTION_23
0x1256	            0x31c0	                            xor eax, eax	       394	help.c	FUNCTION_23
0x1258	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       395	help.c	FUNCTION_23	CALL_1
0x125c	          0x4889c7	                            mov rdi, rax	       395	help.c	FUNCTION_23	CALL_1
0x125f	      0xe82ffbffff	                    call sym.cmd_to_page	       395	help.c	FUNCTION_23	CALL_1
0x1264	        0x488945d8	             mov qword [rbp - 0x28], rax	       395	help.c	FUNCTION_23	CALL_1
0x1268	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       398	help.c	FUNCTION_23	CALL_2
0x126c	        0x488d45e0	                   lea rax, [rbp - 0x20]	       398	help.c	FUNCTION_23	CALL_2
0x1270	          0x4889d6	                            mov rsi, rdx	       398	help.c	FUNCTION_23	CALL_2
0x1273	          0x4889c7	                            mov rdi, rax	       398	help.c	FUNCTION_23	CALL_2
0x1276	      0xe858feffff	             call sym.get_html_page_path	       398	help.c	FUNCTION_23	CALL_2
0x127b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       400	help.c	FUNCTION_23	CALL_3
0x127f	          0x4889c7	                            mov rdi, rax	       400	help.c	FUNCTION_23	CALL_3
0x1282	      0xe881ffffff	                      call sym.open_html	       400	help.c	FUNCTION_23	CALL_3
0x1287	              0x90	                                     nop	       401	help.c	FUNCTION_23
0x1288	        0x488b45f8	                mov rax, qword [rbp - 8]	       401	help.c	FUNCTION_23
0x128c	    0x644833042528	                xor rax, qword fs:[0x28]	       401	help.c	FUNCTION_23
0x1295	            0x7405	                            je 0x40012dc	       401	help.c	FUNCTION_23
0x1297	      0xe800000000	                          call 0x40012dc	       401	help.c	FUNCTION_23
0x129c	              0xc9	                                   leave	       401	help.c	FUNCTION_23
0x129d	              0xc3	                                     ret	       401	help.c	FUNCTION_23
git_help_config	WHILE,0:functions,0:DO,0:CALL,14:FOR,0:ELSE,0:IF,8:SWITCH,0	95
0xbb9	              0x55	                                push rbp	       255	help.c	FUNCTION_14
0xbba	          0x4889e5	                            mov rbp, rsp	       255	help.c	FUNCTION_14
0xbbd	        0x4883ec20	                           sub rsp, 0x20	       255	help.c	FUNCTION_14
0xbc1	        0x48897df8	                mov qword [rbp - 8], rdi	       255	help.c	FUNCTION_14
0xbc5	        0x488975f0	             mov qword [rbp - 0x10], rsi	       255	help.c	FUNCTION_14
0xbc9	        0x488955e8	             mov qword [rbp - 0x18], rdx	       255	help.c	FUNCTION_14
0xbcd	        0x488b45f8	                mov rax, qword [rbp - 8]	       256	help.c	FUNCTION_14	IF_1	CALL_1
0xbd1	      0xbe00000000	                              mov esi, 0	       256	help.c	FUNCTION_14	IF_1	CALL_1
0xbd6	          0x4889c7	                            mov rdi, rax	       256	help.c	FUNCTION_14	IF_1	CALL_1
0xbd9	      0xe800000000	                          call 0x4000c1e	       256	help.c	FUNCTION_14	IF_1	CALL_1
0xbde	            0x85c0	                           test eax, eax	       256	help.c	FUNCTION_14	IF_1	CALL_1
0xbe0	            0x741f	                            je 0x4000c41	       256	help.c	FUNCTION_14	IF_1	CALL_1
0xbe2	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       257	help.c	FUNCTION_14	CALL_2
0xbe6	        0x488b45f8	                mov rax, qword [rbp - 8]	       257	help.c	FUNCTION_14	CALL_2
0xbea	      0xb900000000	                              mov ecx, 0	       257	help.c	FUNCTION_14	CALL_2
0xbef	      0xba00000000	                              mov edx, 0	       257	help.c	FUNCTION_14	CALL_2
0xbf4	          0x4889c7	                            mov rdi, rax	       257	help.c	FUNCTION_14	CALL_2
0xbf7	      0xe800000000	                          call 0x4000c3c	       257	help.c	FUNCTION_14	CALL_2
0xbfc	      0xe920010000	                           jmp 0x4000d61	       257	help.c	FUNCTION_14	CALL_2
0xc01	        0x488b45f8	                mov rax, qword [rbp - 8]	       258	help.c	FUNCTION_14	IF_2	CALL_3
0xc05	      0xbe00000000	                              mov esi, 0	       258	help.c	FUNCTION_14	IF_2	CALL_3
0xc0a	          0x4889c7	                            mov rdi, rax	       258	help.c	FUNCTION_14	IF_2	CALL_3
0xc0d	      0xe800000000	                          call 0x4000c52	       258	help.c	FUNCTION_14	IF_2	CALL_3
0xc12	            0x85c0	                           test eax, eax	       258	help.c	FUNCTION_14	IF_2	CALL_3
0xc14	            0x7539	                           jne 0x4000c8f	       258	help.c	FUNCTION_14	IF_2	CALL_3
0xc16	      0x48837df000	               cmp qword [rbp - 0x10], 0	       259	help.c	FUNCTION_14	IF_2	IF_3
0xc1b	            0x7516	                           jne 0x4000c73	       259	help.c	FUNCTION_14	IF_2	IF_3
0xc1d	        0x488b45f8	                mov rax, qword [rbp - 8]	       260	help.c	FUNCTION_14	IF_2	CALL_4
0xc21	          0x4889c7	                            mov rdi, rax	       260	help.c	FUNCTION_14	IF_2	CALL_4
0xc24	      0xe800000000	                          call 0x4000c69	       260	help.c	FUNCTION_14	IF_2	CALL_4
0xc29	      0xe8d2f3ffff	                    call sym.const_error	       260	help.c	FUNCTION_14	IF_2	CALL_4
0xc2e	      0xe9ee000000	                           jmp 0x4000d61	       260	help.c	FUNCTION_14	IF_2	CALL_4
0xc33	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       261	help.c	FUNCTION_14	IF_2	CALL_5
0xc37	          0x4889c7	                            mov rdi, rax	       261	help.c	FUNCTION_14	IF_2	CALL_5
0xc3a	      0xe806f6ffff	              call sym.parse_help_format	       261	help.c	FUNCTION_14	IF_2	CALL_5
0xc3f	    0x890500000000	            mov dword [0x04000c85], eax 	       261	help.c	FUNCTION_14	IF_2	CALL_5
0xc45	      0xb800000000	                              mov eax, 0	       262	help.c	FUNCTION_14	IF_2
0xc4a	      0xe9d2000000	                           jmp 0x4000d61	       262	help.c	FUNCTION_14	IF_2
0xc4f	        0x488b45f8	                mov rax, qword [rbp - 8]	       264	help.c	FUNCTION_14	IF_4	CALL_6
0xc53	      0xbe00000000	                              mov esi, 0	       264	help.c	FUNCTION_14	IF_4	CALL_6
0xc58	          0x4889c7	                            mov rdi, rax	       264	help.c	FUNCTION_14	IF_4	CALL_6
0xc5b	      0xe800000000	                          call 0x4000ca0	       264	help.c	FUNCTION_14	IF_4	CALL_6
0xc60	            0x85c0	                           test eax, eax	       264	help.c	FUNCTION_14	IF_4	CALL_6
0xc62	            0x753a	                           jne 0x4000cde	       264	help.c	FUNCTION_14	IF_4	CALL_6
0xc64	      0x48837df000	               cmp qword [rbp - 0x10], 0	       265	help.c	FUNCTION_14	IF_4	IF_5
0xc69	            0x7516	                           jne 0x4000cc1	       265	help.c	FUNCTION_14	IF_4	IF_5
0xc6b	        0x488b45f8	                mov rax, qword [rbp - 8]	       266	help.c	FUNCTION_14	IF_4	CALL_7
0xc6f	          0x4889c7	                            mov rdi, rax	       266	help.c	FUNCTION_14	IF_4	CALL_7
0xc72	      0xe800000000	                          call 0x4000cb7	       266	help.c	FUNCTION_14	IF_4	CALL_7
0xc77	      0xe884f3ffff	                    call sym.const_error	       266	help.c	FUNCTION_14	IF_4	CALL_7
0xc7c	      0xe9a0000000	                           jmp 0x4000d61	       266	help.c	FUNCTION_14	IF_4	CALL_7
0xc81	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       267	help.c	FUNCTION_14	IF_4	CALL_8
0xc85	          0x4889c7	                            mov rdi, rax	       267	help.c	FUNCTION_14	IF_4	CALL_8
0xc88	      0xe800000000	                          call 0x4000ccd	       267	help.c	FUNCTION_14	IF_4	CALL_8
0xc8d	    0x488905000000	            mov qword [0x04000cd4], rax 	       267	help.c	FUNCTION_14	IF_4	CALL_8
0xc94	      0xb800000000	                              mov eax, 0	       268	help.c	FUNCTION_14	IF_4
0xc99	      0xe983000000	                           jmp 0x4000d61	       268	help.c	FUNCTION_14	IF_4
0xc9e	        0x488b45f8	                mov rax, qword [rbp - 8]	       270	help.c	FUNCTION_14	IF_6	CALL_9
0xca2	      0xbe00000000	                              mov esi, 0	       270	help.c	FUNCTION_14	IF_6	CALL_9
0xca7	          0x4889c7	                            mov rdi, rax	       270	help.c	FUNCTION_14	IF_6	CALL_9
0xcaa	      0xe800000000	                          call 0x4000cef	       270	help.c	FUNCTION_14	IF_6	CALL_9
0xcaf	            0x85c0	                           test eax, eax	       270	help.c	FUNCTION_14	IF_6	CALL_9
0xcb1	            0x752d	                           jne 0x4000d20	       270	help.c	FUNCTION_14	IF_6	CALL_9
0xcb3	      0x48837df000	               cmp qword [rbp - 0x10], 0	       271	help.c	FUNCTION_14	IF_6	IF_7
0xcb8	            0x7513	                           jne 0x4000d0d	       271	help.c	FUNCTION_14	IF_6	IF_7
0xcba	        0x488b45f8	                mov rax, qword [rbp - 8]	       272	help.c	FUNCTION_14	IF_6	CALL_10
0xcbe	          0x4889c7	                            mov rdi, rax	       272	help.c	FUNCTION_14	IF_6	CALL_10
0xcc1	      0xe800000000	                          call 0x4000d06	       272	help.c	FUNCTION_14	IF_6	CALL_10
0xcc6	      0xe835f3ffff	                    call sym.const_error	       272	help.c	FUNCTION_14	IF_6	CALL_10
0xccb	            0xeb54	                           jmp 0x4000d61	       272	help.c	FUNCTION_14	IF_6	CALL_10
0xccd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       273	help.c	FUNCTION_14	IF_6	CALL_11
0xcd1	          0x4889c7	                            mov rdi, rax	       273	help.c	FUNCTION_14	IF_6	CALL_11
0xcd4	      0xe86efbffff	                 call sym.add_man_viewer	       273	help.c	FUNCTION_14	IF_6	CALL_11
0xcd9	      0xb800000000	                              mov eax, 0	       274	help.c	FUNCTION_14	IF_6
0xcde	            0xeb41	                           jmp 0x4000d61	       274	help.c	FUNCTION_14	IF_6
0xce0	        0x488b45f8	                mov rax, qword [rbp - 8]	       276	help.c	FUNCTION_14	IF_8	CALL_12
0xce4	      0xbe00000000	                              mov esi, 0	       276	help.c	FUNCTION_14	IF_8	CALL_12
0xce9	          0x4889c7	                            mov rdi, rax	       276	help.c	FUNCTION_14	IF_8	CALL_12
0xcec	      0xe800000000	                          call 0x4000d31	       276	help.c	FUNCTION_14	IF_8	CALL_12
0xcf1	            0x85c0	                           test eax, eax	       276	help.c	FUNCTION_14	IF_8	CALL_12
0xcf3	            0x7415	                            je 0x4000d4a	       276	help.c	FUNCTION_14	IF_8	CALL_12
0xcf5	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       277	help.c	FUNCTION_14	CALL_13
0xcf9	        0x488b45f8	                mov rax, qword [rbp - 8]	       277	help.c	FUNCTION_14	CALL_13
0xcfd	          0x4889d6	                            mov rsi, rdx	       277	help.c	FUNCTION_14	CALL_13
0xd00	          0x4889c7	                            mov rdi, rax	       277	help.c	FUNCTION_14	CALL_13
0xd03	      0xe8acfdffff	            call sym.add_man_viewer_info	       277	help.c	FUNCTION_14	CALL_13
0xd08	            0xeb17	                           jmp 0x4000d61	       277	help.c	FUNCTION_14	CALL_13
0xd0a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       279	help.c	FUNCTION_14	CALL_14
0xd0e	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	help.c	FUNCTION_14	CALL_14
0xd12	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	help.c	FUNCTION_14	CALL_14
0xd16	          0x4889ce	                            mov rsi, rcx	       279	help.c	FUNCTION_14	CALL_14
0xd19	          0x4889c7	                            mov rdi, rax	       279	help.c	FUNCTION_14	CALL_14
0xd1c	      0xe800000000	                          call 0x4000d61	       279	help.c	FUNCTION_14	CALL_14
0xd21	              0xc9	                                   leave	       280	help.c	FUNCTION_14
0xd22	              0xc3	                                     ret	       280	help.c	FUNCTION_14
is_git_command	WHILE,0:functions,0:DO,0:CALL,4:FOR,0:ELSE,0:IF,1:SWITCH,0	33
0xd23	              0x55	                                push rbp	       285	help.c	FUNCTION_15
0xd24	          0x4889e5	                            mov rbp, rsp	       285	help.c	FUNCTION_15
0xd27	        0x4883ec10	                           sub rsp, 0x10	       285	help.c	FUNCTION_15
0xd2b	        0x48897df8	                mov qword [rbp - 8], rdi	       285	help.c	FUNCTION_15
0xd2f	        0x488b45f8	                mov rax, qword [rbp - 8]	       286	help.c	FUNCTION_15	IF_1	CALL_1
0xd33	          0x4889c7	                            mov rdi, rax	       286	help.c	FUNCTION_15	IF_1	CALL_1
0xd36	      0xe800000000	                          call 0x4000d7b	       286	help.c	FUNCTION_15	IF_1	CALL_1
0xd3b	            0x85c0	                           test eax, eax	       286	help.c	FUNCTION_15	IF_1	CALL_1
0xd3d	            0x7407	                            je 0x4000d86	       286	help.c	FUNCTION_15	IF_1	CALL_1
0xd3f	      0xb801000000	                              mov eax, 1	       287	help.c	FUNCTION_15	IF_1
0xd44	            0xeb4b	                           jmp 0x4000dd1	       287	help.c	FUNCTION_15	IF_1
0xd46	      0xba00000000	                              mov edx, 0	       289	help.c	FUNCTION_15	CALL_2
0xd4b	      0xbe00000000	                              mov esi, 0	       289	help.c	FUNCTION_15	CALL_2
0xd50	      0xbf00000000	                              mov edi, 0	       289	help.c	FUNCTION_15	CALL_2
0xd55	      0xe800000000	                          call 0x4000d9a	       289	help.c	FUNCTION_15	CALL_2
0xd5a	        0x488b45f8	                mov rax, qword [rbp - 8]	       290	help.c	FUNCTION_15	CALL_3
0xd5e	          0x4889c6	                            mov rsi, rax	       290	help.c	FUNCTION_15	CALL_3
0xd61	      0xbf00000000	                              mov edi, 0	       290	help.c	FUNCTION_15	CALL_3
0xd66	      0xe800000000	                          call 0x4000dab	       290	help.c	FUNCTION_15	CALL_3
0xd6b	            0x85c0	                           test eax, eax	       290	help.c	FUNCTION_15	CALL_3
0xd6d	            0x7515	                           jne 0x4000dc4	       290	help.c	FUNCTION_15	CALL_3
0xd6f	        0x488b45f8	                mov rax, qword [rbp - 8]	       291	help.c	FUNCTION_15	CALL_4
0xd73	          0x4889c6	                            mov rsi, rax	       291	help.c	FUNCTION_15	CALL_4
0xd76	      0xbf00000000	                              mov edi, 0	       291	help.c	FUNCTION_15	CALL_4
0xd7b	      0xe800000000	                          call 0x4000dc0	       291	help.c	FUNCTION_15	CALL_4
0xd80	            0x85c0	                           test eax, eax	       290	help.c	FUNCTION_15	CALL_3
0xd82	            0x7407	                            je 0x4000dcb	       290	help.c	FUNCTION_15	CALL_3
0xd84	      0xb801000000	                              mov eax, 1	       290	help.c	FUNCTION_15	CALL_3
0xd89	            0xeb05	                           jmp 0x4000dd0	       290	help.c	FUNCTION_15	CALL_3
0xd8b	      0xb800000000	                              mov eax, 0	       290	help.c	FUNCTION_15	CALL_3
0xd90	              0x90	                                     nop	       290	help.c	FUNCTION_15	CALL_3
0xd91	              0xc9	                                   leave	       292	help.c	FUNCTION_15
0xd92	              0xc3	                                     ret	       292	help.c	FUNCTION_15
exec_man_konqueror	WHILE,0:functions,0:DO,0:CALL,9:FOR,0:ELSE,1:IF,3:SWITCH,0	78
0x5de	              0x55	                                push rbp	       139	help.c	FUNCTION_5
0x5df	          0x4889e5	                            mov rbp, rsp	       139	help.c	FUNCTION_5
0x5e2	        0x4883ec50	                           sub rsp, 0x50	       139	help.c	FUNCTION_5
0x5e6	        0x48897db8	             mov qword [rbp - 0x48], rdi	       139	help.c	FUNCTION_5
0x5ea	        0x488975b0	             mov qword [rbp - 0x50], rsi	       139	help.c	FUNCTION_5
0x5ee	    0x64488b042528	                mov rax, qword fs:[0x28]	       139	help.c	FUNCTION_5
0x5f7	        0x488945f8	                mov qword [rbp - 8], rax	       139	help.c	FUNCTION_5
0x5fb	            0x31c0	                            xor eax, eax	       139	help.c	FUNCTION_5
0x5fd	      0xbf00000000	                              mov edi, 0	       140	help.c	FUNCTION_5	CALL_1
0x602	      0xe800000000	                          call 0x4000647	       140	help.c	FUNCTION_5	CALL_1
0x607	        0x488945d8	             mov qword [rbp - 0x28], rax	       140	help.c	FUNCTION_5	CALL_1
0x60b	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       141	help.c	FUNCTION_5	IF_1
0x610	     0xf84f9000000	                            je 0x400074f	       141	help.c	FUNCTION_5	IF_1
0x616	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       141	help.c	FUNCTION_5	IF_1
0x61a	           0xfb600	                   movzx eax, byte [rax]	       141	help.c	FUNCTION_5	IF_1
0x61d	            0x84c0	                             test al, al	       141	help.c	FUNCTION_5	IF_1
0x61f	     0xf84ea000000	                            je 0x400074f	       141	help.c	FUNCTION_5	IF_1
0x625	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       142	help.c	FUNCTION_5	IF_1
0x62d	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       142	help.c	FUNCTION_5	IF_1
0x635	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       142	help.c	FUNCTION_5	IF_1
0x63d	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       143	help.c	FUNCTION_5	IF_1
0x645	      0x48837db800	               cmp qword [rbp - 0x48], 0	       146	help.c	FUNCTION_5	IF_1	IF_2
0x64a	            0x744d	                            je 0x40006d9	       146	help.c	FUNCTION_5	IF_1	IF_2
0x64c	        0x488d55c8	                   lea rdx, [rbp - 0x38]	       148	help.c	FUNCTION_5	IF_1	IF_2	IF_3	CALL_2
0x650	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       148	help.c	FUNCTION_5	IF_1	IF_2	IF_3	CALL_2
0x654	      0xbe00000000	                              mov esi, 0	       148	help.c	FUNCTION_5	IF_1	IF_2	IF_3	CALL_2
0x659	          0x4889c7	                            mov rdi, rax	       148	help.c	FUNCTION_5	IF_1	IF_2	IF_3	CALL_2
0x65c	      0xe82bfaffff	                   call sym.strip_suffix	       148	help.c	FUNCTION_5	IF_1	IF_2	IF_3	CALL_2
0x661	            0x85c0	                           test eax, eax	       148	help.c	FUNCTION_5	IF_1	IF_2	IF_3	CALL_2
0x663	            0x7422	                            je 0x40006c7	       148	help.c	FUNCTION_5	IF_1	IF_2	IF_3	CALL_2
0x665	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       149	help.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x669	            0x89c1	                            mov ecx, eax	       149	help.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x66b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       149	help.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x66f	          0x4889c2	                            mov rdx, rax	       149	help.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x672	            0x89ce	                            mov esi, ecx	       149	help.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x674	      0xbf00000000	                              mov edi, 0	       149	help.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x679	      0xb800000000	                              mov eax, 0	       149	help.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x67e	      0xe800000000	                          call 0x40006c3	       149	help.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x683	        0x488945b8	             mov qword [rbp - 0x48], rax	       149	help.c	FUNCTION_5	IF_1	IF_2	CALL_3
0x687	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       150	help.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x68b	          0x4889c7	                            mov rdi, rax	       150	help.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x68e	      0xe800000000	                          call 0x40006d3	       150	help.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x693	        0x488945d0	             mov qword [rbp - 0x30], rax	       150	help.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x697	            0xeb08	                           jmp 0x40006e1	       150	help.c	FUNCTION_5	IF_1	IF_2	CALL_4
0x699	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       152	help.c	FUNCTION_5	IF_1	ELSE_1
0x6a1	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       153	help.c	FUNCTION_5	IF_1	CALL_5
0x6a5	        0x488d45e0	                   lea rax, [rbp - 0x20]	       153	help.c	FUNCTION_5	IF_1	CALL_5
0x6a9	      0xbe00000000	                              mov esi, 0	       153	help.c	FUNCTION_5	IF_1	CALL_5
0x6ae	          0x4889c7	                            mov rdi, rax	       153	help.c	FUNCTION_5	IF_1	CALL_5
0x6b1	      0xb800000000	                              mov eax, 0	       153	help.c	FUNCTION_5	IF_1	CALL_5
0x6b6	      0xe800000000	                          call 0x40006fb	       153	help.c	FUNCTION_5	IF_1	CALL_5
0x6bb	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       154	help.c	FUNCTION_5	IF_1	CALL_6
0x6bf	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	       154	help.c	FUNCTION_5	IF_1	CALL_6
0x6c3	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       154	help.c	FUNCTION_5	IF_1	CALL_6
0x6c7	    0x41b800000000	                              mov r8d, 0	       154	help.c	FUNCTION_5	IF_1	CALL_6
0x6cd	          0x4889d1	                            mov rcx, rdx	       154	help.c	FUNCTION_5	IF_1	CALL_6
0x6d0	      0xba00000000	                              mov edx, 0	       154	help.c	FUNCTION_5	IF_1	CALL_6
0x6d5	          0x4889c7	                            mov rdi, rax	       154	help.c	FUNCTION_5	IF_1	CALL_6
0x6d8	      0xb800000000	                              mov eax, 0	       154	help.c	FUNCTION_5	IF_1	CALL_6
0x6dd	      0xe800000000	                          call 0x4000722	       154	help.c	FUNCTION_5	IF_1	CALL_6
0x6e2	      0xbf00000000	                              mov edi, 0	       155	help.c	FUNCTION_5	IF_1	CALL_8
0x6e7	      0xe800fbffff	                               call sym.	       155	help.c	FUNCTION_5	IF_1	CALL_8
0x6ec	          0x4889c2	                            mov rdx, rax	       155	help.c	FUNCTION_5	IF_1	CALL_8
0x6ef	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       155	help.c	FUNCTION_5	IF_1	CALL_8
0x6f3	          0x4889c6	                            mov rsi, rax	       155	help.c	FUNCTION_5	IF_1	CALL_8
0x6f6	          0x4889d7	                            mov rdi, rdx	       155	help.c	FUNCTION_5	IF_1	CALL_8
0x6f9	      0xb800000000	                              mov eax, 0	       155	help.c	FUNCTION_5	IF_1	CALL_8
0x6fe	      0xe800000000	                          call 0x4000743	       155	help.c	FUNCTION_5	IF_1	CALL_8
0x703	        0x488d45e0	                   lea rax, [rbp - 0x20]	       156	help.c	FUNCTION_5	IF_1	CALL_9
0x707	          0x4889c7	                            mov rdi, rax	       156	help.c	FUNCTION_5	IF_1	CALL_9
0x70a	      0xe800000000	                          call 0x400074f	       156	help.c	FUNCTION_5	IF_1	CALL_9
0x70f	              0x90	                                     nop	       158	help.c	FUNCTION_5
0x710	        0x488b45f8	                mov rax, qword [rbp - 8]	       158	help.c	FUNCTION_5
0x714	    0x644833042528	                xor rax, qword fs:[0x28]	       158	help.c	FUNCTION_5
0x71d	            0x7405	                            je 0x4000764	       158	help.c	FUNCTION_5
0x71f	      0xe800000000	                          call 0x4000764	       158	help.c	FUNCTION_5
0x724	              0xc9	                                   leave	       158	help.c	FUNCTION_5
0x725	              0xc3	                                     ret	       158	help.c	FUNCTION_5
parse_help_format	WHILE,0:functions,0:DO,0:CALL,6:FOR,0:ELSE,0:IF,3:SWITCH,0	44
0x245	              0x55	                                push rbp	        60	help.c	FUNCTION_1
0x246	          0x4889e5	                            mov rbp, rsp	        60	help.c	FUNCTION_1
0x249	        0x4883ec10	                           sub rsp, 0x10	        60	help.c	FUNCTION_1
0x24d	        0x48897df8	                mov qword [rbp - 8], rdi	        60	help.c	FUNCTION_1
0x251	        0x488b45f8	                mov rax, qword [rbp - 8]	        61	help.c	FUNCTION_1	IF_1	CALL_1
0x255	      0xbe00000000	                              mov esi, 0	        61	help.c	FUNCTION_1	IF_1	CALL_1
0x25a	          0x4889c7	                            mov rdi, rax	        61	help.c	FUNCTION_1	IF_1	CALL_1
0x25d	      0xe800000000	                          call 0x40002a2	        61	help.c	FUNCTION_1	IF_1	CALL_1
0x262	            0x85c0	                           test eax, eax	        61	help.c	FUNCTION_1	IF_1	CALL_1
0x264	            0x7507	                           jne 0x40002ad	        61	help.c	FUNCTION_1	IF_1	CALL_1
0x266	      0xb801000000	                              mov eax, 1	        62	help.c	FUNCTION_1	IF_1
0x26b	            0xeb6e	                           jmp 0x400031b	        62	help.c	FUNCTION_1	IF_1
0x26d	        0x488b45f8	                mov rax, qword [rbp - 8]	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x271	      0xbe00000000	                              mov esi, 0	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x276	          0x4889c7	                            mov rdi, rax	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x279	      0xe800000000	                          call 0x40002be	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x27e	            0x85c0	                           test eax, eax	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x280	            0x7507	                           jne 0x40002c9	        63	help.c	FUNCTION_1	IF_2	CALL_2
0x282	      0xb802000000	                              mov eax, 2	        64	help.c	FUNCTION_1	IF_2
0x287	            0xeb52	                           jmp 0x400031b	        64	help.c	FUNCTION_1	IF_2
0x289	        0x488b45f8	                mov rax, qword [rbp - 8]	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x28d	      0xbe00000000	                              mov esi, 0	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x292	          0x4889c7	                            mov rdi, rax	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x295	      0xe800000000	                          call 0x40002da	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x29a	            0x85c0	                           test eax, eax	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x29c	            0x7415	                            je 0x40002f3	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x29e	        0x488b45f8	                mov rax, qword [rbp - 8]	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x2a2	      0xbe00000000	                              mov esi, 0	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x2a7	          0x4889c7	                            mov rdi, rax	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x2aa	      0xe800000000	                          call 0x40002ef	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x2af	            0x85c0	                           test eax, eax	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x2b1	            0x7507	                           jne 0x40002fa	        65	help.c	FUNCTION_1	IF_3	CALL_4
0x2b3	      0xb803000000	                              mov eax, 3	        66	help.c	FUNCTION_1	IF_3
0x2b8	            0xeb21	                           jmp 0x400031b	        66	help.c	FUNCTION_1	IF_3
0x2ba	      0xbf00000000	                              mov edi, 0	        67	help.c	FUNCTION_1	CALL_6
0x2bf	      0xe828ffffff	                               call sym.	        67	help.c	FUNCTION_1	CALL_6
0x2c4	          0x4889c2	                            mov rdx, rax	        67	help.c	FUNCTION_1	CALL_6
0x2c7	        0x488b45f8	                mov rax, qword [rbp - 8]	        67	help.c	FUNCTION_1	CALL_6
0x2cb	          0x4889c6	                            mov rsi, rax	        67	help.c	FUNCTION_1	CALL_6
0x2ce	          0x4889d7	                            mov rdi, rdx	        67	help.c	FUNCTION_1	CALL_6
0x2d1	      0xb800000000	                              mov eax, 0	        67	help.c	FUNCTION_1	CALL_6
0x2d6	      0xe800000000	                          call 0x400031b	        67	help.c	FUNCTION_1	CALL_6
0x2db	              0xc9	                                   leave	        68	help.c	FUNCTION_1
0x2dc	              0xc3	                                     ret	        68	help.c	FUNCTION_1
strbuf_addstr	WHILE,0:functions,0:DO,0:CALL,2:FOR,0:ELSE,0:IF,0:SWITCH,0	17
0x1b7	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_31
0x1b8	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_31
0x1bb	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_31
0x1bf	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_31
0x1c3	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_31
0x1c7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_31	CALL_2
0x1cb	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_31	CALL_2
0x1ce	      0xe800000000	                          call 0x4000213	       279	strbuf.h	FUNCTION_31	CALL_2
0x1d3	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_31	CALL_2
0x1d6	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_31	CALL_2
0x1da	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_31	CALL_2
0x1de	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_31	CALL_2
0x1e1	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_31	CALL_2
0x1e4	      0xe800000000	                          call 0x4000229	       279	strbuf.h	FUNCTION_31	CALL_2
0x1e9	              0x90	                                     nop	       280	strbuf.h	FUNCTION_31
0x1ea	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_31
0x1eb	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_31
const_error	WHILE,0:functions,0:DO,0:CALL,0:FOR,0:ELSE,0:IF,0:SWITCH,0	5
0x0	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_43
0x1	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_43
0x4	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_43
0x9	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_43
0xa	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_43
add_man_viewer_path	WHILE,0:functions,0:DO,0:CALL,4:FOR,0:ELSE,1:IF,1:SWITCH,0	31
0x9dc	              0x55	                                push rbp	       207	help.c	FUNCTION_11
0x9dd	          0x4889e5	                            mov rbp, rsp	       207	help.c	FUNCTION_11
0x9e0	        0x4883ec20	                           sub rsp, 0x20	       207	help.c	FUNCTION_11
0x9e4	        0x48897df8	                mov qword [rbp - 8], rdi	       207	help.c	FUNCTION_11
0x9e8	        0x488975f0	             mov qword [rbp - 0x10], rsi	       207	help.c	FUNCTION_11
0x9ec	        0x488955e8	             mov qword [rbp - 0x18], rdx	       207	help.c	FUNCTION_11
0x9f0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       208	help.c	FUNCTION_11	IF_1	CALL_1
0x9f4	        0x488b45f8	                mov rax, qword [rbp - 8]	       208	help.c	FUNCTION_11	IF_1	CALL_1
0x9f8	          0x4889d6	                            mov rsi, rdx	       208	help.c	FUNCTION_11	IF_1	CALL_1
0x9fb	          0x4889c7	                            mov rdi, rax	       208	help.c	FUNCTION_11	IF_1	CALL_1
0x9fe	      0xe8d7feffff	           call sym.supported_man_viewer	       208	help.c	FUNCTION_11	IF_1	CALL_1
0xa03	            0x85c0	                           test eax, eax	       208	help.c	FUNCTION_11	IF_1	CALL_1
0xa05	            0x7419	                            je 0x4000a60	       208	help.c	FUNCTION_11	IF_1	CALL_1
0xa07	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       209	help.c	FUNCTION_11	CALL_2
0xa0b	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       209	help.c	FUNCTION_11	CALL_2
0xa0f	        0x488b45f8	                mov rax, qword [rbp - 8]	       209	help.c	FUNCTION_11	CALL_2
0xa13	          0x4889ce	                            mov rsi, rcx	       209	help.c	FUNCTION_11	CALL_2
0xa16	          0x4889c7	                            mov rdi, rax	       209	help.c	FUNCTION_11	CALL_2
0xa19	      0xe825ffffff	         call sym.do_add_man_viewer_info	       209	help.c	FUNCTION_11	CALL_2
0xa1e	            0xeb21	                           jmp 0x4000a81	       209	help.c	FUNCTION_11	CALL_2
0xa20	      0xbf00000000	                              mov edi, 0	       211	help.c	FUNCTION_11	ELSE_1	CALL_4
0xa25	      0xe8c2f7ffff	                               call sym.	       211	help.c	FUNCTION_11	ELSE_1	CALL_4
0xa2a	          0x4889c2	                            mov rdx, rax	       211	help.c	FUNCTION_11	ELSE_1	CALL_4
0xa2d	        0x488b45f8	                mov rax, qword [rbp - 8]	       211	help.c	FUNCTION_11	ELSE_1	CALL_4
0xa31	          0x4889c6	                            mov rsi, rax	       211	help.c	FUNCTION_11	ELSE_1	CALL_4
0xa34	          0x4889d7	                            mov rdi, rdx	       211	help.c	FUNCTION_11	ELSE_1	CALL_4
0xa37	      0xb800000000	                              mov eax, 0	       211	help.c	FUNCTION_11	ELSE_1	CALL_4
0xa3c	      0xe800000000	                          call 0x4000a81	       211	help.c	FUNCTION_11	ELSE_1	CALL_4
0xa41	      0xb800000000	                              mov eax, 0	       215	help.c	FUNCTION_11
0xa46	              0xc9	                                   leave	       216	help.c	FUNCTION_11
0xa47	              0xc3	                                     ret	       216	help.c	FUNCTION_11
supported_man_viewer	WHILE,0:functions,0:DO,0:CALL,3:FOR,0:ELSE,0:IF,0:SWITCH,0	31
0x8da	              0x55	                                push rbp	       187	help.c	FUNCTION_9
0x8db	          0x4889e5	                            mov rbp, rsp	       187	help.c	FUNCTION_9
0x8de	        0x4883ec10	                           sub rsp, 0x10	       187	help.c	FUNCTION_9
0x8e2	        0x48897df8	                mov qword [rbp - 8], rdi	       187	help.c	FUNCTION_9
0x8e6	        0x488975f0	             mov qword [rbp - 0x10], rsi	       187	help.c	FUNCTION_9
0x8ea	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       188	help.c	FUNCTION_9	CALL_1
0x8ee	        0x488b45f8	                mov rax, qword [rbp - 8]	       188	help.c	FUNCTION_9	CALL_1
0x8f2	          0x4889c6	                            mov rsi, rax	       188	help.c	FUNCTION_9	CALL_1
0x8f5	      0xbf00000000	                              mov edi, 0	       188	help.c	FUNCTION_9	CALL_1
0x8fa	      0xe800000000	                          call 0x400093f	       188	help.c	FUNCTION_9	CALL_1
0x8ff	            0x85c0	                           test eax, eax	       189	help.c	FUNCTION_9	CALL_2
0x901	            0x7432	                            je 0x4000975	       189	help.c	FUNCTION_9	CALL_2
0x903	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       189	help.c	FUNCTION_9	CALL_2
0x907	        0x488b45f8	                mov rax, qword [rbp - 8]	       189	help.c	FUNCTION_9	CALL_2
0x90b	          0x4889c6	                            mov rsi, rax	       189	help.c	FUNCTION_9	CALL_2
0x90e	      0xbf00000000	                              mov edi, 0	       189	help.c	FUNCTION_9	CALL_2
0x913	      0xe800000000	                          call 0x4000958	       189	help.c	FUNCTION_9	CALL_2
0x918	            0x85c0	                           test eax, eax	       188	help.c	FUNCTION_9	CALL_1
0x91a	            0x7419	                            je 0x4000975	       188	help.c	FUNCTION_9	CALL_1
0x91c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       190	help.c	FUNCTION_9	CALL_3
0x920	        0x488b45f8	                mov rax, qword [rbp - 8]	       190	help.c	FUNCTION_9	CALL_3
0x924	          0x4889c6	                            mov rsi, rax	       190	help.c	FUNCTION_9	CALL_3
0x927	      0xbf00000000	                              mov edi, 0	       190	help.c	FUNCTION_9	CALL_3
0x92c	      0xe800000000	                          call 0x4000971	       190	help.c	FUNCTION_9	CALL_3
0x931	            0x85c0	                           test eax, eax	       189	help.c	FUNCTION_9	CALL_2
0x933	            0x7507	                           jne 0x400097c	       189	help.c	FUNCTION_9	CALL_2
0x935	      0xb801000000	                              mov eax, 1	       189	help.c	FUNCTION_9	CALL_2
0x93a	            0xeb05	                           jmp 0x4000981	       189	help.c	FUNCTION_9	CALL_2
0x93c	      0xb800000000	                              mov eax, 0	       189	help.c	FUNCTION_9	CALL_2
0x941	              0xc9	                                   leave	       191	help.c	FUNCTION_9
0x942	              0xc3	                                     ret	       191	help.c	FUNCTION_9
exec_man_man	WHILE,0:functions,0:DO,0:CALL,3:FOR,0:ELSE,0:IF,1:SWITCH,0	26
0x726	              0x55	                                push rbp	       161	help.c	FUNCTION_6
0x727	          0x4889e5	                            mov rbp, rsp	       161	help.c	FUNCTION_6
0x72a	        0x4883ec10	                           sub rsp, 0x10	       161	help.c	FUNCTION_6
0x72e	        0x48897df8	                mov qword [rbp - 8], rdi	       161	help.c	FUNCTION_6
0x732	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	help.c	FUNCTION_6
0x736	      0x48837df800	                  cmp qword [rbp - 8], 0	       162	help.c	FUNCTION_6	IF_1
0x73b	            0x7508	                           jne 0x4000785	       162	help.c	FUNCTION_6	IF_1
0x73d	    0x48c745f80000	                  mov qword [rbp - 8], 0	       163	help.c	FUNCTION_6	IF_1
0x745	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	help.c	FUNCTION_6	CALL_1
0x749	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	help.c	FUNCTION_6	CALL_1
0x74d	      0xb900000000	                              mov ecx, 0	       164	help.c	FUNCTION_6	CALL_1
0x752	      0xbe00000000	                              mov esi, 0	       164	help.c	FUNCTION_6	CALL_1
0x757	          0x4889c7	                            mov rdi, rax	       164	help.c	FUNCTION_6	CALL_1
0x75a	      0xb800000000	                              mov eax, 0	       164	help.c	FUNCTION_6	CALL_1
0x75f	      0xe800000000	                          call 0x40007a4	       164	help.c	FUNCTION_6	CALL_1
0x764	      0xbf00000000	                              mov edi, 0	       165	help.c	FUNCTION_6	CALL_3
0x769	      0xe87efaffff	                               call sym.	       165	help.c	FUNCTION_6	CALL_3
0x76e	          0x4889c2	                            mov rdx, rax	       165	help.c	FUNCTION_6	CALL_3
0x771	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	help.c	FUNCTION_6	CALL_3
0x775	          0x4889c6	                            mov rsi, rax	       165	help.c	FUNCTION_6	CALL_3
0x778	          0x4889d7	                            mov rdi, rdx	       165	help.c	FUNCTION_6	CALL_3
0x77b	      0xb800000000	                              mov eax, 0	       165	help.c	FUNCTION_6	CALL_3
0x780	      0xe800000000	                          call 0x40007c5	       165	help.c	FUNCTION_6	CALL_3
0x785	              0x90	                                     nop	       166	help.c	FUNCTION_6
0x786	              0xc9	                                   leave	       166	help.c	FUNCTION_6
0x787	              0xc3	                                     ret	       166	help.c	FUNCTION_6
open_html	WHILE,0:functions,0:DO,0:CALL,1:FOR,0:ELSE,0:IF,0:SWITCH,0	15
0x1208	              0x55	                                push rbp	       389	help.c	FUNCTION_22
0x1209	          0x4889e5	                            mov rbp, rsp	       389	help.c	FUNCTION_22
0x120c	        0x4883ec10	                           sub rsp, 0x10	       389	help.c	FUNCTION_22
0x1210	        0x48897df8	                mov qword [rbp - 8], rdi	       389	help.c	FUNCTION_22
0x1214	        0x488b45f8	                mov rax, qword [rbp - 8]	       390	help.c	FUNCTION_22	CALL_1
0x1218	    0x41b800000000	                              mov r8d, 0	       390	help.c	FUNCTION_22	CALL_1
0x121e	          0x4889c1	                            mov rcx, rax	       390	help.c	FUNCTION_22	CALL_1
0x1221	      0xba00000000	                              mov edx, 0	       390	help.c	FUNCTION_22	CALL_1
0x1226	      0xbe00000000	                              mov esi, 0	       390	help.c	FUNCTION_22	CALL_1
0x122b	      0xbf00000000	                              mov edi, 0	       390	help.c	FUNCTION_22	CALL_1
0x1230	      0xb800000000	                              mov eax, 0	       390	help.c	FUNCTION_22	CALL_1
0x1235	      0xe800000000	                          call 0x400127a	       390	help.c	FUNCTION_22	CALL_1
0x123a	              0x90	                                     nop	       391	help.c	FUNCTION_22
0x123b	              0xc9	                                   leave	       391	help.c	FUNCTION_22
0x123c	              0xc3	                                     ret	       391	help.c	FUNCTION_22
strip_suffix	WHILE,0:functions,0:DO,0:CALL,2:FOR,0:ELSE,0:IF,0:SWITCH,0	20
0x8c	              0x55	                                push rbp	       554	git-compat-util.h	FUNCTION_48
0x8d	          0x4889e5	                            mov rbp, rsp	       554	git-compat-util.h	FUNCTION_48
0x90	        0x4883ec20	                           sub rsp, 0x20	       554	git-compat-util.h	FUNCTION_48
0x94	        0x48897df8	                mov qword [rbp - 8], rdi	       554	git-compat-util.h	FUNCTION_48
0x98	        0x488975f0	             mov qword [rbp - 0x10], rsi	       554	git-compat-util.h	FUNCTION_48
0x9c	        0x488955e8	             mov qword [rbp - 0x18], rdx	       554	git-compat-util.h	FUNCTION_48
0xa0	        0x488b45f8	                mov rax, qword [rbp - 8]	       555	git-compat-util.h	FUNCTION_48	CALL_1
0xa4	          0x4889c7	                            mov rdi, rax	       555	git-compat-util.h	FUNCTION_48	CALL_1
0xa7	      0xe800000000	                          call 0x40000ec	       555	git-compat-util.h	FUNCTION_48	CALL_1
0xac	          0x4889c2	                            mov rdx, rax	       555	git-compat-util.h	FUNCTION_48	CALL_1
0xaf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       555	git-compat-util.h	FUNCTION_48	CALL_1
0xb3	          0x488910	                    mov qword [rax], rdx	       555	git-compat-util.h	FUNCTION_48	CALL_1
0xb6	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       556	git-compat-util.h	FUNCTION_48	CALL_2
0xba	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       556	git-compat-util.h	FUNCTION_48	CALL_2
0xbe	        0x488b45f8	                mov rax, qword [rbp - 8]	       556	git-compat-util.h	FUNCTION_48	CALL_2
0xc2	          0x4889ce	                            mov rsi, rcx	       556	git-compat-util.h	FUNCTION_48	CALL_2
0xc5	          0x4889c7	                            mov rdi, rax	       556	git-compat-util.h	FUNCTION_48	CALL_2
0xc8	      0xe83effffff	               call sym.strip_suffix_mem	       556	git-compat-util.h	FUNCTION_48	CALL_2
0xcd	              0xc9	                                   leave	       557	git-compat-util.h	FUNCTION_48
0xce	              0xc3	                                     ret	       557	git-compat-util.h	FUNCTION_48
exec_man_cmd	WHILE,0:functions,0:DO,0:CALL,5:FOR,0:ELSE,0:IF,0:SWITCH,0	44
0x788	              0x55	                                push rbp	       169	help.c	FUNCTION_7
0x789	          0x4889e5	                            mov rbp, rsp	       169	help.c	FUNCTION_7
0x78c	        0x4883ec30	                           sub rsp, 0x30	       169	help.c	FUNCTION_7
0x790	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       169	help.c	FUNCTION_7
0x794	        0x488975d0	             mov qword [rbp - 0x30], rsi	       169	help.c	FUNCTION_7
0x798	    0x64488b042528	                mov rax, qword fs:[0x28]	       169	help.c	FUNCTION_7
0x7a1	        0x488945f8	                mov qword [rbp - 8], rax	       169	help.c	FUNCTION_7
0x7a5	            0x31c0	                            xor eax, eax	       169	help.c	FUNCTION_7
0x7a7	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       170	help.c	FUNCTION_7
0x7af	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       170	help.c	FUNCTION_7
0x7b7	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       170	help.c	FUNCTION_7
0x7bf	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       171	help.c	FUNCTION_7	CALL_1
0x7c3	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       171	help.c	FUNCTION_7	CALL_1
0x7c7	        0x488d45e0	                   lea rax, [rbp - 0x20]	       171	help.c	FUNCTION_7	CALL_1
0x7cb	      0xbe00000000	                              mov esi, 0	       171	help.c	FUNCTION_7	CALL_1
0x7d0	          0x4889c7	                            mov rdi, rax	       171	help.c	FUNCTION_7	CALL_1
0x7d3	      0xb800000000	                              mov eax, 0	       171	help.c	FUNCTION_7	CALL_1
0x7d8	      0xe800000000	                          call 0x400081d	       171	help.c	FUNCTION_7	CALL_1
0x7dd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       172	help.c	FUNCTION_7	CALL_2
0x7e1	    0x41b800000000	                              mov r8d, 0	       172	help.c	FUNCTION_7	CALL_2
0x7e7	          0x4889c1	                            mov rcx, rax	       172	help.c	FUNCTION_7	CALL_2
0x7ea	      0xba00000000	                              mov edx, 0	       172	help.c	FUNCTION_7	CALL_2
0x7ef	      0xbe00000000	                              mov esi, 0	       172	help.c	FUNCTION_7	CALL_2
0x7f4	      0xbf00000000	                              mov edi, 0	       172	help.c	FUNCTION_7	CALL_2
0x7f9	      0xb800000000	                              mov eax, 0	       172	help.c	FUNCTION_7	CALL_2
0x7fe	      0xe800000000	                          call 0x4000843	       172	help.c	FUNCTION_7	CALL_2
0x803	      0xbf00000000	                              mov edi, 0	       173	help.c	FUNCTION_7	CALL_4
0x808	      0xe8dff9ffff	                               call sym.	       173	help.c	FUNCTION_7	CALL_4
0x80d	          0x4889c2	                            mov rdx, rax	       173	help.c	FUNCTION_7	CALL_4
0x810	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       173	help.c	FUNCTION_7	CALL_4
0x814	          0x4889c6	                            mov rsi, rax	       173	help.c	FUNCTION_7	CALL_4
0x817	          0x4889d7	                            mov rdi, rdx	       173	help.c	FUNCTION_7	CALL_4
0x81a	      0xb800000000	                              mov eax, 0	       173	help.c	FUNCTION_7	CALL_4
0x81f	      0xe800000000	                          call 0x4000864	       173	help.c	FUNCTION_7	CALL_4
0x824	        0x488d45e0	                   lea rax, [rbp - 0x20]	       174	help.c	FUNCTION_7	CALL_5
0x828	          0x4889c7	                            mov rdi, rax	       174	help.c	FUNCTION_7	CALL_5
0x82b	      0xe800000000	                          call 0x4000870	       174	help.c	FUNCTION_7	CALL_5
0x830	              0x90	                                     nop	       175	help.c	FUNCTION_7
0x831	        0x488b45f8	                mov rax, qword [rbp - 8]	       175	help.c	FUNCTION_7
0x835	    0x644833042528	                xor rax, qword fs:[0x28]	       175	help.c	FUNCTION_7
0x83e	            0x7405	                            je 0x4000885	       175	help.c	FUNCTION_7
0x840	      0xe800000000	                          call 0x4000885	       175	help.c	FUNCTION_7
0x845	              0xc9	                                   leave	       175	help.c	FUNCTION_7
0x846	              0xc3	                                     ret	       175	help.c	FUNCTION_7
do_add_man_viewer_info	WHILE,0:functions,0:DO,0:CALL,2:FOR,0:ELSE,0:IF,0:SWITCH,0	40
0x943	              0x55	                                push rbp	       196	help.c	FUNCTION_10
0x944	          0x4889e5	                            mov rbp, rsp	       196	help.c	FUNCTION_10
0x947	        0x4883ec30	                           sub rsp, 0x30	       196	help.c	FUNCTION_10
0x94b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       196	help.c	FUNCTION_10
0x94f	        0x488975e0	             mov qword [rbp - 0x20], rsi	       196	help.c	FUNCTION_10
0x953	        0x488955d8	             mov qword [rbp - 0x28], rdx	       196	help.c	FUNCTION_10
0x957	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       198	help.c	FUNCTION_10	CALL_1
0x95b	        0x488945f0	             mov qword [rbp - 0x10], rax	       198	help.c	FUNCTION_10	CALL_1
0x95f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       198	help.c	FUNCTION_10	CALL_1
0x963	          0x4889c6	                            mov rsi, rax	       198	help.c	FUNCTION_10	CALL_1
0x966	      0xbf10000000	                           mov edi, 0x10	       198	help.c	FUNCTION_10	CALL_1
0x96b	      0xe85ff7ffff	                         call sym.st_add	       198	help.c	FUNCTION_10	CALL_1
0x970	      0xbe01000000	                              mov esi, 1	       198	help.c	FUNCTION_10	CALL_1
0x975	          0x4889c7	                            mov rdi, rax	       198	help.c	FUNCTION_10	CALL_1
0x978	      0xe852f7ffff	                         call sym.st_add	       198	help.c	FUNCTION_10	CALL_1
0x97d	          0x4889c6	                            mov rsi, rax	       198	help.c	FUNCTION_10	CALL_1
0x980	      0xbf01000000	                              mov edi, 1	       198	help.c	FUNCTION_10	CALL_1
0x985	      0xe800000000	                          call 0x40009ca	       198	help.c	FUNCTION_10	CALL_1
0x98a	        0x488945f8	                mov qword [rbp - 8], rax	       198	help.c	FUNCTION_10	CALL_1
0x98e	        0x488b45f8	                mov rax, qword [rbp - 8]	       198	help.c	FUNCTION_10	CALL_1
0x992	        0x488d4810	                   lea rcx, [rax + 0x10]	       198	help.c	FUNCTION_10	CALL_1
0x996	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       198	help.c	FUNCTION_10	CALL_1
0x99a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       198	help.c	FUNCTION_10	CALL_1
0x99e	          0x4889c6	                            mov rsi, rax	       198	help.c	FUNCTION_10	CALL_1
0x9a1	          0x4889cf	                            mov rdi, rcx	       198	help.c	FUNCTION_10	CALL_1
0x9a4	      0xe800000000	                          call 0x40009e9	       198	help.c	FUNCTION_10	CALL_1
0x9a9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       199	help.c	FUNCTION_10	CALL_2
0x9ad	          0x4889c7	                            mov rdi, rax	       199	help.c	FUNCTION_10	CALL_2
0x9b0	      0xe800000000	                          call 0x40009f5	       199	help.c	FUNCTION_10	CALL_2
0x9b5	          0x4889c2	                            mov rdx, rax	       199	help.c	FUNCTION_10	CALL_2
0x9b8	        0x488b45f8	                mov rax, qword [rbp - 8]	       199	help.c	FUNCTION_10	CALL_2
0x9bc	        0x48895008	                mov qword [rax + 8], rdx	       199	help.c	FUNCTION_10	CALL_2
0x9c0	    0x488b15000000	            mov rdx, qword [0x04000a07] 	       200	help.c	FUNCTION_10
0x9c7	        0x488b45f8	                mov rax, qword [rbp - 8]	       200	help.c	FUNCTION_10
0x9cb	          0x488910	                    mov qword [rax], rdx	       200	help.c	FUNCTION_10
0x9ce	        0x488b45f8	                mov rax, qword [rbp - 8]	       201	help.c	FUNCTION_10
0x9d2	    0x488905000000	            mov qword [0x04000a19], rax 	       201	help.c	FUNCTION_10
0x9d9	              0x90	                                     nop	       202	help.c	FUNCTION_10
0x9da	              0xc9	                                   leave	       202	help.c	FUNCTION_10
0x9db	              0xc3	                                     ret	       202	help.c	FUNCTION_10
check_git_cmd	WHILE,0:functions,0:DO,0:CALL,7:FOR,0:ELSE,0:IF,3:SWITCH,0	41
0x13b1	              0x55	                                push rbp	       436	help.c	FUNCTION_25
0x13b2	          0x4889e5	                            mov rbp, rsp	       436	help.c	FUNCTION_25
0x13b5	        0x4883ec20	                           sub rsp, 0x20	       436	help.c	FUNCTION_25
0x13b9	        0x48897de8	             mov qword [rbp - 0x18], rdi	       436	help.c	FUNCTION_25
0x13bd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       439	help.c	FUNCTION_25	IF_1	CALL_1
0x13c1	          0x4889c7	                            mov rdi, rax	       439	help.c	FUNCTION_25	IF_1	CALL_1
0x13c4	      0xe85af9ffff	                 call sym.is_git_command	       439	help.c	FUNCTION_25	IF_1	CALL_1
0x13c9	            0x85c0	                           test eax, eax	       439	help.c	FUNCTION_25	IF_1	CALL_1
0x13cb	            0x7406	                            je 0x4001413	       439	help.c	FUNCTION_25	IF_1	CALL_1
0x13cd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       440	help.c	FUNCTION_25	IF_1
0x13d1	            0xeb6e	                           jmp 0x4001481	       440	help.c	FUNCTION_25	IF_1
0x13d3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       442	help.c	FUNCTION_25	CALL_2
0x13d7	          0x4889c7	                            mov rdi, rax	       442	help.c	FUNCTION_25	CALL_2
0x13da	      0xe800000000	                          call 0x400141f	       442	help.c	FUNCTION_25	CALL_2
0x13df	        0x488945f8	                mov qword [rbp - 8], rax	       442	help.c	FUNCTION_25	CALL_2
0x13e3	      0x48837df800	                  cmp qword [rbp - 8], 0	       443	help.c	FUNCTION_25	IF_2
0x13e8	            0x743b	                            je 0x4001465	       443	help.c	FUNCTION_25	IF_2
0x13ea	      0xbf00000000	                              mov edi, 0	       444	help.c	FUNCTION_25	IF_2	CALL_4
0x13ef	      0xe8f8edffff	                               call sym.	       444	help.c	FUNCTION_25	IF_2	CALL_4
0x13f4	          0x4889c1	                            mov rcx, rax	       444	help.c	FUNCTION_25	IF_2	CALL_4
0x13f7	        0x488b55f8	                mov rdx, qword [rbp - 8]	       444	help.c	FUNCTION_25	IF_2	CALL_4
0x13fb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       444	help.c	FUNCTION_25	IF_2	CALL_4
0x13ff	          0x4889c6	                            mov rsi, rax	       444	help.c	FUNCTION_25	IF_2	CALL_4
0x1402	          0x4889cf	                            mov rdi, rcx	       444	help.c	FUNCTION_25	IF_2	CALL_4
0x1405	      0xb800000000	                              mov eax, 0	       444	help.c	FUNCTION_25	IF_2	CALL_4
0x140a	      0xe800000000	                          call 0x400144f	       444	help.c	FUNCTION_25	IF_2	CALL_4
0x140f	        0x488b45f8	                mov rax, qword [rbp - 8]	       445	help.c	FUNCTION_25	IF_2	CALL_5
0x1413	          0x4889c7	                            mov rdi, rax	       445	help.c	FUNCTION_25	IF_2	CALL_5
0x1416	      0xe800000000	                          call 0x400145b	       445	help.c	FUNCTION_25	IF_2	CALL_5
0x141b	      0xbf00000000	                              mov edi, 0	       446	help.c	FUNCTION_25	IF_2	CALL_6
0x1420	      0xe800000000	                          call 0x4001465	       446	help.c	FUNCTION_25	IF_2	CALL_6
0x1425	    0x8b0500000000	            mov eax, dword [0x0400146b] 	       449	help.c	FUNCTION_25	IF_3
0x142b	            0x85c0	                           test eax, eax	       449	help.c	FUNCTION_25	IF_3
0x142d	            0x740e	                            je 0x400147d	       449	help.c	FUNCTION_25	IF_3
0x142f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       450	help.c	FUNCTION_25	CALL_7
0x1433	          0x4889c7	                            mov rdi, rax	       450	help.c	FUNCTION_25	CALL_7
0x1436	      0xe800000000	                          call 0x400147b	       450	help.c	FUNCTION_25	CALL_7
0x143b	            0xeb04	                           jmp 0x4001481	       450	help.c	FUNCTION_25	CALL_7
0x143d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       452	help.c	FUNCTION_25
0x1441	              0xc9	                                   leave	       453	help.c	FUNCTION_25
0x1442	              0xc3	                                     ret	       453	help.c	FUNCTION_25
strbuf_avail	WHILE,0:functions,0:DO,0:CALL,0:FOR,0:ELSE,0:IF,0:SWITCH,0	18
0x113	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_28
0x114	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_28
0x117	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_28
0x11b	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_28
0x11f	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_28
0x122	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_28
0x125	            0x741b	                            je 0x4000182	       141	strbuf.h	FUNCTION_28
0x127	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_28
0x12b	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_28
0x12e	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_28
0x132	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_28
0x136	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_28
0x139	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_28
0x13c	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_28
0x140	            0xeb05	                           jmp 0x4000187	       141	strbuf.h	FUNCTION_28
0x142	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_28
0x147	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_28
0x148	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_28
check_emacsclient_version	WHILE,0:functions,0:DO,0:CALL,17:FOR,0:ELSE,0:IF,3:SWITCH,0	99
0x334	              0x55	                                push rbp	        83	help.c	FUNCTION_3
0x335	          0x4889e5	                            mov rbp, rsp	        83	help.c	FUNCTION_3
0x338	    0x4881ecb00000	                           sub rsp, 0xb0	        83	help.c	FUNCTION_3
0x33f	    0x64488b042528	                mov rax, qword fs:[0x28]	        83	help.c	FUNCTION_3
0x348	        0x488945f8	                mov qword [rbp - 8], rax	        83	help.c	FUNCTION_3
0x34c	            0x31c0	                            xor eax, eax	        83	help.c	FUNCTION_3
0x34e	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	        84	help.c	FUNCTION_3
0x359	    0x48c78568ffff	               mov qword [rbp - 0x98], 0	        84	help.c	FUNCTION_3
0x364	    0x48c78570ffff	               mov qword [rbp - 0x90], 0	        84	help.c	FUNCTION_3
0x36f	        0x488d5580	                   lea rdx, [rbp - 0x80]	        85	help.c	FUNCTION_3
0x373	      0xb800000000	                              mov eax, 0	        85	help.c	FUNCTION_3
0x378	      0xb90c000000	                            mov ecx, 0xc	        85	help.c	FUNCTION_3
0x37d	          0x4889d7	                            mov rdi, rdx	        85	help.c	FUNCTION_3
0x380	          0xf348ab	              rep stosq qword [rdi], rax	        85	help.c	FUNCTION_3
0x383	    0x48c745880000	               mov qword [rbp - 0x78], 0	        85	help.c	FUNCTION_3
0x38b	    0x48c745980000	               mov qword [rbp - 0x68], 0	        85	help.c	FUNCTION_3
0x393	    0x48c745e00000	               mov qword [rbp - 0x20], 0	        86	help.c	FUNCTION_3
0x39b	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        86	help.c	FUNCTION_3
0x3a3	    0x48c745f00000	               mov qword [rbp - 0x10], 0	        86	help.c	FUNCTION_3
0x3ab	        0x488d45e0	                   lea rax, [rbp - 0x20]	        90	help.c	FUNCTION_3
0x3af	        0x48894580	             mov qword [rbp - 0x80], rax	        90	help.c	FUNCTION_3
0x3b3	    0xc745b4ffffff	     mov dword [rbp - 0x4c], 0xffffffff 	        91	help.c	FUNCTION_3
0x3ba	         0xfb645c8	            movzx eax, byte [rbp - 0x38]	        92	help.c	FUNCTION_3
0x3be	          0x83c820	                            or eax, 0x20	        92	help.c	FUNCTION_3
0x3c1	          0x8845c8	               mov byte [rbp - 0x38], al	        92	help.c	FUNCTION_3
0x3c4	        0x488d4580	                   lea rax, [rbp - 0x80]	        93	help.c	FUNCTION_3	IF_1	CALL_1
0x3c8	          0x4889c7	                            mov rdi, rax	        93	help.c	FUNCTION_3	IF_1	CALL_1
0x3cb	      0xe800000000	                          call 0x4000410	        93	help.c	FUNCTION_3	IF_1	CALL_1
0x3d0	            0x85c0	                           test eax, eax	        93	help.c	FUNCTION_3	IF_1	CALL_1
0x3d2	            0x7421	                            je 0x4000435	        93	help.c	FUNCTION_3	IF_1	CALL_1
0x3d4	      0xbf00000000	                              mov edi, 0	        94	help.c	FUNCTION_3	CALL_3
0x3d9	      0xe80efeffff	                               call sym.	        94	help.c	FUNCTION_3	CALL_3
0x3de	          0x4889c7	                            mov rdi, rax	        94	help.c	FUNCTION_3	CALL_3
0x3e1	      0xb800000000	                              mov eax, 0	        94	help.c	FUNCTION_3	CALL_3
0x3e6	      0xe800000000	                          call 0x400042b	        94	help.c	FUNCTION_3	CALL_3
0x3eb	      0xe810fcffff	                    call sym.const_error	        94	help.c	FUNCTION_3	CALL_3
0x3f0	      0xe9fa000000	                           jmp 0x400052f	        94	help.c	FUNCTION_3	CALL_3
0x3f5	          0x8b4db4	             mov ecx, dword [rbp - 0x4c]	        96	help.c	FUNCTION_3	CALL_4
0x3f8	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	        96	help.c	FUNCTION_3	CALL_4
0x3ff	      0xba14000000	                           mov edx, 0x14	        96	help.c	FUNCTION_3	CALL_4
0x404	            0x89ce	                            mov esi, ecx	        96	help.c	FUNCTION_3	CALL_4
0x406	          0x4889c7	                            mov rdi, rax	        96	help.c	FUNCTION_3	CALL_4
0x409	      0xe800000000	                          call 0x400044e	        96	help.c	FUNCTION_3	CALL_4
0x40e	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	        97	help.c	FUNCTION_3	CALL_5
0x411	            0x89c7	                            mov edi, eax	        97	help.c	FUNCTION_3	CALL_5
0x413	      0xe800000000	                          call 0x4000458	        97	help.c	FUNCTION_3	CALL_5
0x418	        0x488d4580	                   lea rax, [rbp - 0x80]	       103	help.c	FUNCTION_3	CALL_6
0x41c	          0x4889c7	                            mov rdi, rax	       103	help.c	FUNCTION_3	CALL_6
0x41f	      0xe800000000	                          call 0x4000464	       103	help.c	FUNCTION_3	CALL_6
0x424	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       105	help.c	FUNCTION_3	IF_2	CALL_7
0x42b	      0xbe00000000	                              mov esi, 0	       105	help.c	FUNCTION_3	IF_2	CALL_7
0x430	          0x4889c7	                            mov rdi, rax	       105	help.c	FUNCTION_3	IF_2	CALL_7
0x433	      0xe800000000	                          call 0x4000478	       105	help.c	FUNCTION_3	IF_2	CALL_7
0x438	            0x85c0	                           test eax, eax	       105	help.c	FUNCTION_3	IF_2	CALL_7
0x43a	            0x7530	                           jne 0x40004ac	       105	help.c	FUNCTION_3	IF_2	CALL_7
0x43c	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	       106	help.c	FUNCTION_3	IF_2	CALL_8
0x443	          0x4889c7	                            mov rdi, rax	       106	help.c	FUNCTION_3	IF_2	CALL_8
0x446	      0xe800000000	                          call 0x400048b	       106	help.c	FUNCTION_3	IF_2	CALL_8
0x44b	      0xbf00000000	                              mov edi, 0	       107	help.c	FUNCTION_3	IF_2	CALL_10
0x450	      0xe897fdffff	                               call sym.	       107	help.c	FUNCTION_3	IF_2	CALL_10
0x455	          0x4889c7	                            mov rdi, rax	       107	help.c	FUNCTION_3	IF_2	CALL_10
0x458	      0xb800000000	                              mov eax, 0	       107	help.c	FUNCTION_3	IF_2	CALL_10
0x45d	      0xe800000000	                          call 0x40004a2	       107	help.c	FUNCTION_3	IF_2	CALL_10
0x462	      0xe899fbffff	                    call sym.const_error	       107	help.c	FUNCTION_3	IF_2	CALL_10
0x467	      0xe983000000	                           jmp 0x400052f	       107	help.c	FUNCTION_3	IF_2	CALL_10
0x46c	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	       110	help.c	FUNCTION_3	CALL_12
0x473	      0xba0b000000	                            mov edx, 0xb	       110	help.c	FUNCTION_3	CALL_12
0x478	      0xbe00000000	                              mov esi, 0	       110	help.c	FUNCTION_3	CALL_12
0x47d	          0x4889c7	                            mov rdi, rax	       110	help.c	FUNCTION_3	CALL_12
0x480	      0xe800000000	                          call 0x40004c5	       110	help.c	FUNCTION_3	CALL_12
0x485	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       111	help.c	FUNCTION_3	CALL_13
0x48c	          0x4889c7	                            mov rdi, rax	       111	help.c	FUNCTION_3	CALL_13
0x48f	      0xe800000000	                          call 0x40004d4	       111	help.c	FUNCTION_3	CALL_13
0x494	    0x89855cffffff	             mov dword [rbp - 0xa4], eax	       111	help.c	FUNCTION_3	CALL_13
0x49a	    0x83bd5cffffff	           cmp dword [rbp - 0xa4], 0x15 	       113	help.c	FUNCTION_3	IF_3
0x4a1	            0x7f38	                            jg 0x400051b	       113	help.c	FUNCTION_3	IF_3
0x4a3	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	       114	help.c	FUNCTION_3	IF_3	CALL_14
0x4aa	          0x4889c7	                            mov rdi, rax	       114	help.c	FUNCTION_3	IF_3	CALL_14
0x4ad	      0xe800000000	                          call 0x40004f2	       114	help.c	FUNCTION_3	IF_3	CALL_14
0x4b2	      0xbf00000000	                              mov edi, 0	       115	help.c	FUNCTION_3	IF_3	CALL_16
0x4b7	      0xe830fdffff	                               call sym.	       115	help.c	FUNCTION_3	IF_3	CALL_16
0x4bc	          0x4889c2	                            mov rdx, rax	       115	help.c	FUNCTION_3	IF_3	CALL_16
0x4bf	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	       115	help.c	FUNCTION_3	IF_3	CALL_16
0x4c5	            0x89c6	                            mov esi, eax	       115	help.c	FUNCTION_3	IF_3	CALL_16
0x4c7	          0x4889d7	                            mov rdi, rdx	       115	help.c	FUNCTION_3	IF_3	CALL_16
0x4ca	      0xb800000000	                              mov eax, 0	       115	help.c	FUNCTION_3	IF_3	CALL_16
0x4cf	      0xe800000000	                          call 0x4000514	       115	help.c	FUNCTION_3	IF_3	CALL_16
0x4d4	      0xe827fbffff	                    call sym.const_error	       115	help.c	FUNCTION_3	IF_3	CALL_16
0x4d9	            0xeb14	                           jmp 0x400052f	       115	help.c	FUNCTION_3	IF_3	CALL_16
0x4db	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	       119	help.c	FUNCTION_3	CALL_17
0x4e2	          0x4889c7	                            mov rdi, rax	       119	help.c	FUNCTION_3	CALL_17
0x4e5	      0xe800000000	                          call 0x400052a	       119	help.c	FUNCTION_3	CALL_17
0x4ea	      0xb800000000	                              mov eax, 0	       120	help.c	FUNCTION_3
0x4ef	        0x488b4df8	                mov rcx, qword [rbp - 8]	       121	help.c	FUNCTION_3
0x4f3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       121	help.c	FUNCTION_3
0x4fc	            0x7405	                            je 0x4000543	       121	help.c	FUNCTION_3
0x4fe	      0xe800000000	                          call 0x4000543	       121	help.c	FUNCTION_3
0x503	              0xc9	                                   leave	       121	help.c	FUNCTION_3
0x504	              0xc3	                                     ret	       121	help.c	FUNCTION_3
st_add	WHILE,0:functions,0:DO,0:CALL,2:FOR,0:ELSE,0:IF,1:SWITCH,0	20
0xcf	              0x55	                                push rbp	       784	git-compat-util.h	FUNCTION_51
0xd0	          0x4889e5	                            mov rbp, rsp	       784	git-compat-util.h	FUNCTION_51
0xd3	        0x4883ec10	                           sub rsp, 0x10	       784	git-compat-util.h	FUNCTION_51
0xd7	        0x48897df8	                mov qword [rbp - 8], rdi	       784	git-compat-util.h	FUNCTION_51
0xdb	        0x488975f0	             mov qword [rbp - 0x10], rsi	       784	git-compat-util.h	FUNCTION_51
0xdf	        0x488b45f8	                mov rax, qword [rbp - 8]	       785	git-compat-util.h	FUNCTION_51	IF_1	CALL_1
0xe3	          0x48f7d0	                                 not rax	       785	git-compat-util.h	FUNCTION_51	IF_1	CALL_1
0xe6	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       785	git-compat-util.h	FUNCTION_51	IF_1	CALL_1
0xea	            0x731a	                           jae 0x4000146	       785	git-compat-util.h	FUNCTION_51	IF_1	CALL_1
0xec	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       786	git-compat-util.h	FUNCTION_51	IF_1	CALL_2
0xf0	        0x488b45f8	                mov rax, qword [rbp - 8]	       786	git-compat-util.h	FUNCTION_51	IF_1	CALL_2
0xf4	          0x4889c6	                            mov rsi, rax	       786	git-compat-util.h	FUNCTION_51	IF_1	CALL_2
0xf7	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_51	IF_1	CALL_2
0xfc	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_51	IF_1	CALL_2
0x101	      0xe800000000	                          call 0x4000146	       786	git-compat-util.h	FUNCTION_51	IF_1	CALL_2
0x106	        0x488b55f8	                mov rdx, qword [rbp - 8]	       788	git-compat-util.h	FUNCTION_51
0x10a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       788	git-compat-util.h	FUNCTION_51
0x10e	          0x4801d0	                            add rax, rdx	       788	git-compat-util.h	FUNCTION_51
0x111	              0xc9	                                   leave	       789	git-compat-util.h	FUNCTION_51
0x112	              0xc3	                                     ret	       789	git-compat-util.h	FUNCTION_51
add_man_viewer	WHILE,1:functions,0:DO,0:CALL,1:FOR,0:ELSE,0:IF,0:SWITCH,0	41
0x847	              0x55	                                push rbp	       178	help.c	FUNCTION_8
0x848	          0x4889e5	                            mov rbp, rsp	       178	help.c	FUNCTION_8
0x84b	        0x4883ec20	                           sub rsp, 0x20	       178	help.c	FUNCTION_8
0x84f	        0x48897de8	             mov qword [rbp - 0x18], rdi	       178	help.c	FUNCTION_8
0x853	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       179	help.c	FUNCTION_8
0x85b	            0xeb0b	                           jmp 0x40008a8	       181	help.c	FUNCTION_8	WHILE_1
0x85d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       182	help.c	FUNCTION_8	WHILE_1
0x861	          0x488b00	                    mov rax, qword [rax]	       182	help.c	FUNCTION_8	WHILE_1
0x864	        0x488945f0	             mov qword [rbp - 0x10], rax	       182	help.c	FUNCTION_8	WHILE_1
0x868	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       181	help.c	FUNCTION_8	WHILE_1
0x86c	          0x488b00	                    mov rax, qword [rax]	       181	help.c	FUNCTION_8	WHILE_1
0x86f	          0x4885c0	                           test rax, rax	       181	help.c	FUNCTION_8	WHILE_1
0x872	            0x75e9	                           jne 0x400089d	       181	help.c	FUNCTION_8	WHILE_1
0x874	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       183	help.c	FUNCTION_8	CALL_1
0x878	          0x4889c7	                            mov rdi, rax	       183	help.c	FUNCTION_8	CALL_1
0x87b	      0xe800000000	                          call 0x40008c0	       183	help.c	FUNCTION_8	CALL_1
0x880	        0x488945f8	                mov qword [rbp - 8], rax	       183	help.c	FUNCTION_8	CALL_1
0x884	        0x488b45f8	                mov rax, qword [rbp - 8]	       183	help.c	FUNCTION_8	CALL_1
0x888	          0x4889c6	                            mov rsi, rax	       183	help.c	FUNCTION_8	CALL_1
0x88b	      0xbf08000000	                              mov edi, 8	       183	help.c	FUNCTION_8	CALL_1
0x890	      0xe83af8ffff	                         call sym.st_add	       183	help.c	FUNCTION_8	CALL_1
0x895	      0xbe01000000	                              mov esi, 1	       183	help.c	FUNCTION_8	CALL_1
0x89a	          0x4889c7	                            mov rdi, rax	       183	help.c	FUNCTION_8	CALL_1
0x89d	      0xe82df8ffff	                         call sym.st_add	       183	help.c	FUNCTION_8	CALL_1
0x8a2	          0x4889c6	                            mov rsi, rax	       183	help.c	FUNCTION_8	CALL_1
0x8a5	      0xbf01000000	                              mov edi, 1	       183	help.c	FUNCTION_8	CALL_1
0x8aa	      0xe800000000	                          call 0x40008ef	       183	help.c	FUNCTION_8	CALL_1
0x8af	          0x4889c2	                            mov rdx, rax	       183	help.c	FUNCTION_8	CALL_1
0x8b2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       183	help.c	FUNCTION_8	CALL_1
0x8b6	          0x488910	                    mov qword [rax], rdx	       183	help.c	FUNCTION_8	CALL_1
0x8b9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       183	help.c	FUNCTION_8	CALL_1
0x8bd	          0x488b00	                    mov rax, qword [rax]	       183	help.c	FUNCTION_8	CALL_1
0x8c0	        0x488d4808	                      lea rcx, [rax + 8]	       183	help.c	FUNCTION_8	CALL_1
0x8c4	        0x488b55f8	                mov rdx, qword [rbp - 8]	       183	help.c	FUNCTION_8	CALL_1
0x8c8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       183	help.c	FUNCTION_8	CALL_1
0x8cc	          0x4889c6	                            mov rsi, rax	       183	help.c	FUNCTION_8	CALL_1
0x8cf	          0x4889cf	                            mov rdi, rcx	       183	help.c	FUNCTION_8	CALL_1
0x8d2	      0xe800000000	                          call 0x4000917	       183	help.c	FUNCTION_8	CALL_1
0x8d7	              0x90	                                     nop	       184	help.c	FUNCTION_8
0x8d8	              0xc9	                                   leave	       184	help.c	FUNCTION_8
0x8d9	              0xc3	                                     ret	       184	help.c	FUNCTION_8
add_man_viewer_info	WHILE,0:functions,0:DO,0:CALL,7:FOR,0:ELSE,0:IF,5:SWITCH,0	72
0xab4	              0x55	                                push rbp	       233	help.c	FUNCTION_13
0xab5	          0x4889e5	                            mov rbp, rsp	       233	help.c	FUNCTION_13
0xab8	        0x4883ec30	                           sub rsp, 0x30	       233	help.c	FUNCTION_13
0xabc	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       233	help.c	FUNCTION_13
0xac0	        0x488975d0	             mov qword [rbp - 0x30], rsi	       233	help.c	FUNCTION_13
0xac4	    0x64488b042528	                mov rax, qword fs:[0x28]	       233	help.c	FUNCTION_13
0xacd	        0x488945f8	                mov qword [rbp - 8], rax	       233	help.c	FUNCTION_13
0xad1	            0x31c0	                            xor eax, eax	       233	help.c	FUNCTION_13
0xad3	        0x488d75f0	                   lea rsi, [rbp - 0x10]	       237	help.c	FUNCTION_13	IF_1	CALL_1
0xad7	        0x488d4de4	                   lea rcx, [rbp - 0x1c]	       237	help.c	FUNCTION_13	IF_1	CALL_1
0xadb	        0x488d55e8	                   lea rdx, [rbp - 0x18]	       237	help.c	FUNCTION_13	IF_1	CALL_1
0xadf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       237	help.c	FUNCTION_13	IF_1	CALL_1
0xae3	          0x4989f0	                             mov r8, rsi	       237	help.c	FUNCTION_13	IF_1	CALL_1
0xae6	      0xbe00000000	                              mov esi, 0	       237	help.c	FUNCTION_13	IF_1	CALL_1
0xaeb	          0x4889c7	                            mov rdi, rax	       237	help.c	FUNCTION_13	IF_1	CALL_1
0xaee	      0xe800000000	                          call 0x4000b33	       237	help.c	FUNCTION_13	IF_1	CALL_1
0xaf3	            0x85c0	                           test eax, eax	       237	help.c	FUNCTION_13	IF_1	CALL_1
0xaf5	            0x7809	                            js 0x4000b40	       237	help.c	FUNCTION_13	IF_1	CALL_1
0xaf7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       237	help.c	FUNCTION_13	IF_1	CALL_1
0xafb	          0x4885c0	                           test rax, rax	       237	help.c	FUNCTION_13	IF_1	CALL_1
0xafe	            0x750a	                           jne 0x4000b4a	       237	help.c	FUNCTION_13	IF_1	CALL_1
0xb00	      0xb800000000	                              mov eax, 0	       238	help.c	FUNCTION_13	IF_1
0xb05	      0xe999000000	                           jmp 0x4000be3	       238	help.c	FUNCTION_13	IF_1
0xb0a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       240	help.c	FUNCTION_13	IF_2	CALL_2
0xb0e	      0xbe00000000	                              mov esi, 0	       240	help.c	FUNCTION_13	IF_2	CALL_2
0xb13	          0x4889c7	                            mov rdi, rax	       240	help.c	FUNCTION_13	IF_2	CALL_2
0xb16	      0xe800000000	                          call 0x4000b5b	       240	help.c	FUNCTION_13	IF_2	CALL_2
0xb1b	            0x85c0	                           test eax, eax	       240	help.c	FUNCTION_13	IF_2	CALL_2
0xb1d	            0x7535	                           jne 0x4000b94	       240	help.c	FUNCTION_13	IF_2	CALL_2
0xb1f	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       241	help.c	FUNCTION_13	IF_2	IF_3
0xb24	            0x7513	                           jne 0x4000b79	       241	help.c	FUNCTION_13	IF_2	IF_3
0xb26	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       242	help.c	FUNCTION_13	IF_2	CALL_3
0xb2a	          0x4889c7	                            mov rdi, rax	       242	help.c	FUNCTION_13	IF_2	CALL_3
0xb2d	      0xe800000000	                          call 0x4000b72	       242	help.c	FUNCTION_13	IF_2	CALL_3
0xb32	      0xe8c9f4ffff	                    call sym.const_error	       242	help.c	FUNCTION_13	IF_2	CALL_3
0xb37	            0xeb6a	                           jmp 0x4000be3	       242	help.c	FUNCTION_13	IF_2	CALL_3
0xb39	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       243	help.c	FUNCTION_13	IF_2	CALL_4
0xb3c	          0x4863c8	                         movsxd rcx, eax	       243	help.c	FUNCTION_13	IF_2	CALL_4
0xb3f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       243	help.c	FUNCTION_13	IF_2	CALL_4
0xb43	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       243	help.c	FUNCTION_13	IF_2	CALL_4
0xb47	          0x4889ce	                            mov rsi, rcx	       243	help.c	FUNCTION_13	IF_2	CALL_4
0xb4a	          0x4889c7	                            mov rdi, rax	       243	help.c	FUNCTION_13	IF_2	CALL_4
0xb4d	      0xe88afeffff	            call sym.add_man_viewer_path	       243	help.c	FUNCTION_13	IF_2	CALL_4
0xb52	            0xeb4f	                           jmp 0x4000be3	       243	help.c	FUNCTION_13	IF_2	CALL_4
0xb54	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       245	help.c	FUNCTION_13	IF_4	CALL_5
0xb58	      0xbe00000000	                              mov esi, 0	       245	help.c	FUNCTION_13	IF_4	CALL_5
0xb5d	          0x4889c7	                            mov rdi, rax	       245	help.c	FUNCTION_13	IF_4	CALL_5
0xb60	      0xe800000000	                          call 0x4000ba5	       245	help.c	FUNCTION_13	IF_4	CALL_5
0xb65	            0x85c0	                           test eax, eax	       245	help.c	FUNCTION_13	IF_4	CALL_5
0xb67	            0x7535	                           jne 0x4000bde	       245	help.c	FUNCTION_13	IF_4	CALL_5
0xb69	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       246	help.c	FUNCTION_13	IF_4	IF_5
0xb6e	            0x7513	                           jne 0x4000bc3	       246	help.c	FUNCTION_13	IF_4	IF_5
0xb70	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       247	help.c	FUNCTION_13	IF_4	CALL_6
0xb74	          0x4889c7	                            mov rdi, rax	       247	help.c	FUNCTION_13	IF_4	CALL_6
0xb77	      0xe800000000	                          call 0x4000bbc	       247	help.c	FUNCTION_13	IF_4	CALL_6
0xb7c	      0xe87ff4ffff	                    call sym.const_error	       247	help.c	FUNCTION_13	IF_4	CALL_6
0xb81	            0xeb20	                           jmp 0x4000be3	       247	help.c	FUNCTION_13	IF_4	CALL_6
0xb83	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       248	help.c	FUNCTION_13	IF_4	CALL_7
0xb86	          0x4863c8	                         movsxd rcx, eax	       248	help.c	FUNCTION_13	IF_4	CALL_7
0xb89	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       248	help.c	FUNCTION_13	IF_4	CALL_7
0xb8d	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       248	help.c	FUNCTION_13	IF_4	CALL_7
0xb91	          0x4889ce	                            mov rsi, rcx	       248	help.c	FUNCTION_13	IF_4	CALL_7
0xb94	          0x4889c7	                            mov rdi, rax	       248	help.c	FUNCTION_13	IF_4	CALL_7
0xb97	      0xe8acfeffff	             call sym.add_man_viewer_cmd	       248	help.c	FUNCTION_13	IF_4	CALL_7
0xb9c	            0xeb05	                           jmp 0x4000be3	       248	help.c	FUNCTION_13	IF_4	CALL_7
0xb9e	      0xb800000000	                              mov eax, 0	       251	help.c	FUNCTION_13
0xba3	        0x488b4df8	                mov rcx, qword [rbp - 8]	       252	help.c	FUNCTION_13
0xba7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       252	help.c	FUNCTION_13
0xbb0	            0x7405	                            je 0x4000bf7	       252	help.c	FUNCTION_13
0xbb2	      0xe800000000	                          call 0x4000bf7	       252	help.c	FUNCTION_13
0xbb7	              0xc9	                                   leave	       252	help.c	FUNCTION_13
0xbb8	              0xc3	                                     ret	       252	help.c	FUNCTION_13
setup_man_path	WHILE,0:functions,0:DO,0:CALL,8:FOR,0:ELSE,0:IF,1:SWITCH,0	49
0xe08	              0x55	                                push rbp	       307	help.c	FUNCTION_17
0xe09	          0x4889e5	                            mov rbp, rsp	       307	help.c	FUNCTION_17
0xe0c	        0x4883ec30	                           sub rsp, 0x30	       307	help.c	FUNCTION_17
0xe10	    0x64488b042528	                mov rax, qword fs:[0x28]	       307	help.c	FUNCTION_17
0xe19	        0x488945f8	                mov qword [rbp - 8], rax	       307	help.c	FUNCTION_17
0xe1d	            0x31c0	                            xor eax, eax	       307	help.c	FUNCTION_17
0xe1f	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       308	help.c	FUNCTION_17
0xe27	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       308	help.c	FUNCTION_17
0xe2f	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       308	help.c	FUNCTION_17
0xe37	      0xbf00000000	                              mov edi, 0	       309	help.c	FUNCTION_17	CALL_1
0xe3c	      0xe800000000	                          call 0x4000e81	       309	help.c	FUNCTION_17	CALL_1
0xe41	        0x488945d0	             mov qword [rbp - 0x30], rax	       309	help.c	FUNCTION_17	CALL_1
0xe45	      0xbf00000000	                              mov edi, 0	       310	help.c	FUNCTION_17	CALL_2
0xe4a	      0xe800000000	                          call 0x4000e8f	       310	help.c	FUNCTION_17	CALL_2
0xe4f	        0x488945d8	             mov qword [rbp - 0x28], rax	       310	help.c	FUNCTION_17	CALL_2
0xe53	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       316	help.c	FUNCTION_17	CALL_3
0xe57	        0x488d45e0	                   lea rax, [rbp - 0x20]	       316	help.c	FUNCTION_17	CALL_3
0xe5b	          0x4889d6	                            mov rsi, rdx	       316	help.c	FUNCTION_17	CALL_3
0xe5e	          0x4889c7	                            mov rdi, rax	       316	help.c	FUNCTION_17	CALL_3
0xe61	      0xe851f3ffff	                  call sym.strbuf_addstr	       316	help.c	FUNCTION_17	CALL_3
0xe66	        0x488d45e0	                   lea rax, [rbp - 0x20]	       317	help.c	FUNCTION_17	CALL_4
0xe6a	      0xbe3a000000	                           mov esi, 0x3a	       317	help.c	FUNCTION_17	CALL_4
0xe6f	          0x4889c7	                            mov rdi, rax	       317	help.c	FUNCTION_17	CALL_4
0xe72	      0xe8d2f2ffff	                   call sym.strbuf_addch	       317	help.c	FUNCTION_17	CALL_4
0xe77	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       318	help.c	FUNCTION_17	IF_1
0xe7c	            0x7413	                            je 0x4000ed1	       318	help.c	FUNCTION_17	IF_1
0xe7e	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       319	help.c	FUNCTION_17	CALL_5
0xe82	        0x488d45e0	                   lea rax, [rbp - 0x20]	       319	help.c	FUNCTION_17	CALL_5
0xe86	          0x4889d6	                            mov rsi, rdx	       319	help.c	FUNCTION_17	CALL_5
0xe89	          0x4889c7	                            mov rdi, rax	       319	help.c	FUNCTION_17	CALL_5
0xe8c	      0xe826f3ffff	                  call sym.strbuf_addstr	       319	help.c	FUNCTION_17	CALL_5
0xe91	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       321	help.c	FUNCTION_17	CALL_6
0xe95	          0x4889c7	                            mov rdi, rax	       321	help.c	FUNCTION_17	CALL_6
0xe98	      0xe800000000	                          call 0x4000edd	       321	help.c	FUNCTION_17	CALL_6
0xe9d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       322	help.c	FUNCTION_17	CALL_7
0xea1	      0xba01000000	                              mov edx, 1	       322	help.c	FUNCTION_17	CALL_7
0xea6	          0x4889c6	                            mov rsi, rax	       322	help.c	FUNCTION_17	CALL_7
0xea9	      0xbf00000000	                              mov edi, 0	       322	help.c	FUNCTION_17	CALL_7
0xeae	      0xe800000000	                          call 0x4000ef3	       322	help.c	FUNCTION_17	CALL_7
0xeb3	        0x488d45e0	                   lea rax, [rbp - 0x20]	       324	help.c	FUNCTION_17	CALL_8
0xeb7	          0x4889c7	                            mov rdi, rax	       324	help.c	FUNCTION_17	CALL_8
0xeba	      0xe800000000	                          call 0x4000eff	       324	help.c	FUNCTION_17	CALL_8
0xebf	              0x90	                                     nop	       325	help.c	FUNCTION_17
0xec0	        0x488b45f8	                mov rax, qword [rbp - 8]	       325	help.c	FUNCTION_17
0xec4	    0x644833042528	                xor rax, qword fs:[0x28]	       325	help.c	FUNCTION_17
0xecd	            0x7405	                            je 0x4000f14	       325	help.c	FUNCTION_17
0xecf	      0xe800000000	                          call 0x4000f14	       325	help.c	FUNCTION_17
0xed4	              0xc9	                                   leave	       325	help.c	FUNCTION_17
0xed5	              0xc3	                                     ret	       325	help.c	FUNCTION_17
show_info_page	WHILE,0:functions,0:DO,0:CALL,6:FOR,0:ELSE,0:IF,0:SWITCH,0	27
0x105e	              0x55	                                push rbp	       361	help.c	FUNCTION_20
0x105f	          0x4889e5	                            mov rbp, rsp	       361	help.c	FUNCTION_20
0x1062	        0x4883ec20	                           sub rsp, 0x20	       361	help.c	FUNCTION_20
0x1066	        0x48897de8	             mov qword [rbp - 0x18], rdi	       361	help.c	FUNCTION_20
0x106a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       362	help.c	FUNCTION_20	CALL_1
0x106e	          0x4889c7	                            mov rdi, rax	       362	help.c	FUNCTION_20	CALL_1
0x1071	      0xe81dfdffff	                    call sym.cmd_to_page	       362	help.c	FUNCTION_20	CALL_1
0x1076	        0x488945f8	                mov qword [rbp - 8], rax	       362	help.c	FUNCTION_20	CALL_1
0x107a	      0xbf00000000	                              mov edi, 0	       363	help.c	FUNCTION_20	CALL_3
0x107f	      0xe800000000	                          call 0x40010c4	       363	help.c	FUNCTION_20	CALL_3
0x1084	      0xba01000000	                              mov edx, 1	       363	help.c	FUNCTION_20	CALL_3
0x1089	          0x4889c6	                            mov rsi, rax	       363	help.c	FUNCTION_20	CALL_3
0x108c	      0xbf00000000	                              mov edi, 0	       363	help.c	FUNCTION_20	CALL_3
0x1091	      0xe800000000	                          call 0x40010d6	       363	help.c	FUNCTION_20	CALL_3
0x1096	        0x488b45f8	                mov rax, qword [rbp - 8]	       364	help.c	FUNCTION_20	CALL_4
0x109a	    0x41b800000000	                              mov r8d, 0	       364	help.c	FUNCTION_20	CALL_4
0x10a0	          0x4889c1	                            mov rcx, rax	       364	help.c	FUNCTION_20	CALL_4
0x10a3	      0xba00000000	                              mov edx, 0	       364	help.c	FUNCTION_20	CALL_4
0x10a8	      0xbe00000000	                              mov esi, 0	       364	help.c	FUNCTION_20	CALL_4
0x10ad	      0xbf00000000	                              mov edi, 0	       364	help.c	FUNCTION_20	CALL_4
0x10b2	      0xb800000000	                              mov eax, 0	       364	help.c	FUNCTION_20	CALL_4
0x10b7	      0xe800000000	                          call 0x40010fc	       364	help.c	FUNCTION_20	CALL_4
0x10bc	      0xbf00000000	                              mov edi, 0	       365	help.c	FUNCTION_20	CALL_6
0x10c1	      0xe826f1ffff	                               call sym.	       365	help.c	FUNCTION_20	CALL_6
0x10c6	          0x4889c7	                            mov rdi, rax	       365	help.c	FUNCTION_20	CALL_6
0x10c9	      0xb800000000	                              mov eax, 0	       365	help.c	FUNCTION_20	CALL_6
0x10ce	      0xe800000000	             call sym.get_html_page_path	       365	help.c	FUNCTION_20	CALL_6
show_man_page	WHILE,0:functions,0:DO,0:CALL,8:FOR,1:ELSE,0:IF,1:SWITCH,0	42
0xfb7	              0x55	                                push rbp	       344	help.c	FUNCTION_19
0xfb8	          0x4889e5	                            mov rbp, rsp	       344	help.c	FUNCTION_19
0xfbb	        0x4883ec30	                           sub rsp, 0x30	       344	help.c	FUNCTION_19
0xfbf	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       344	help.c	FUNCTION_19
0xfc3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       346	help.c	FUNCTION_19	CALL_1
0xfc7	          0x4889c7	                            mov rdi, rax	       346	help.c	FUNCTION_19	CALL_1
0xfca	      0xe8c4fdffff	                    call sym.cmd_to_page	       346	help.c	FUNCTION_19	CALL_1
0xfcf	        0x488945f0	             mov qword [rbp - 0x10], rax	       346	help.c	FUNCTION_19	CALL_1
0xfd3	      0xbf00000000	                              mov edi, 0	       347	help.c	FUNCTION_19	CALL_2
0xfd8	      0xe800000000	                          call 0x400101d	       347	help.c	FUNCTION_19	CALL_2
0xfdd	        0x488945f8	                mov qword [rbp - 8], rax	       347	help.c	FUNCTION_19	CALL_2
0xfe1	      0xe822feffff	                 call sym.setup_man_path	       349	help.c	FUNCTION_19	CALL_3
0xfe6	    0x488b05000000	            mov rax, qword [0x0400102d] 	       350	help.c	FUNCTION_19	FOR_1
0xfed	        0x488945e8	             mov qword [rbp - 0x18], rax	       350	help.c	FUNCTION_19	FOR_1
0xff1	            0xeb22	                           jmp 0x4001055	       350	help.c	FUNCTION_19	FOR_1
0xff3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       352	help.c	FUNCTION_19	FOR_1	CALL_4
0xff7	        0x488d5008	                      lea rdx, [rax + 8]	       352	help.c	FUNCTION_19	FOR_1	CALL_4
0xffb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       352	help.c	FUNCTION_19	FOR_1	CALL_4
0xfff	          0x4889c6	                            mov rsi, rax	       352	help.c	FUNCTION_19	FOR_1	CALL_4
0x1002	          0x4889d7	                            mov rdi, rdx	       352	help.c	FUNCTION_19	FOR_1	CALL_4
0x1005	      0xe8ccfeffff	                    call sym.exec_viewer	       352	help.c	FUNCTION_19	FOR_1	CALL_4
0x100a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       350	help.c	FUNCTION_19	FOR_1
0x100e	          0x488b00	                    mov rax, qword [rax]	       350	help.c	FUNCTION_19	FOR_1
0x1011	        0x488945e8	             mov qword [rbp - 0x18], rax	       350	help.c	FUNCTION_19	FOR_1
0x1015	      0x48837de800	               cmp qword [rbp - 0x18], 0	       350	help.c	FUNCTION_19	FOR_1
0x101a	            0x75d7	                           jne 0x4001033	       350	help.c	FUNCTION_19	FOR_1
0x101c	      0x48837df800	                  cmp qword [rbp - 8], 0	       354	help.c	FUNCTION_19	IF_1
0x1021	            0x7413	                            je 0x4001076	       354	help.c	FUNCTION_19	IF_1
0x1023	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       355	help.c	FUNCTION_19	CALL_5
0x1027	        0x488b45f8	                mov rax, qword [rbp - 8]	       355	help.c	FUNCTION_19	CALL_5
0x102b	          0x4889d6	                            mov rsi, rdx	       355	help.c	FUNCTION_19	CALL_5
0x102e	          0x4889c7	                            mov rdi, rax	       355	help.c	FUNCTION_19	CALL_5
0x1031	      0xe8a0feffff	                    call sym.exec_viewer	       355	help.c	FUNCTION_19	CALL_5
0x1036	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       356	help.c	FUNCTION_19	CALL_6
0x103a	          0x4889c6	                            mov rsi, rax	       356	help.c	FUNCTION_19	CALL_6
0x103d	      0xbf00000000	                              mov edi, 0	       356	help.c	FUNCTION_19	CALL_6
0x1042	      0xe88ffeffff	                    call sym.exec_viewer	       356	help.c	FUNCTION_19	CALL_6
0x1047	      0xbf00000000	                              mov edi, 0	       357	help.c	FUNCTION_19	CALL_8
0x104c	      0xe89bf1ffff	                               call sym.	       357	help.c	FUNCTION_19	CALL_8
0x1051	          0x4889c7	                            mov rdi, rax	       357	help.c	FUNCTION_19	CALL_8
0x1054	      0xb800000000	                              mov eax, 0	       357	help.c	FUNCTION_19	CALL_8
0x1059	      0xe800000000	                 call sym.show_info_page	       357	help.c	FUNCTION_19	CALL_8
cmd_help	WHILE,0:functions,0:DO,0:CALL,23:FOR,0:ELSE,0:IF,6:SWITCH,1	140
0x1443	              0x55	                                push rbp	       456	help.c	FUNCTION_26
0x1444	          0x4889e5	                            mov rbp, rsp	       456	help.c	FUNCTION_26
0x1447	              0x53	                                push rbx	       456	help.c	FUNCTION_26
0x1448	        0x4883ec38	                           sub rsp, 0x38	       456	help.c	FUNCTION_26
0x144c	          0x897ddc	             mov dword [rbp - 0x24], edi	       456	help.c	FUNCTION_26
0x144f	        0x488975d0	             mov qword [rbp - 0x30], rsi	       456	help.c	FUNCTION_26
0x1453	        0x488955c8	             mov qword [rbp - 0x38], rdx	       456	help.c	FUNCTION_26
0x1457	    0x64488b042528	                mov rax, qword fs:[0x28]	       456	help.c	FUNCTION_26
0x1460	        0x488945e8	             mov qword [rbp - 0x18], rax	       456	help.c	FUNCTION_26
0x1464	            0x31c0	                            xor eax, eax	       456	help.c	FUNCTION_26
0x1466	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       460	help.c	FUNCTION_26	CALL_1
0x146a	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	       460	help.c	FUNCTION_26	CALL_1
0x146e	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       460	help.c	FUNCTION_26	CALL_1
0x1471	    0x41b900000000	                              mov r9d, 0	       460	help.c	FUNCTION_26	CALL_1
0x1477	    0x41b800000000	                              mov r8d, 0	       460	help.c	FUNCTION_26	CALL_1
0x147d	      0xb900000000	                              mov ecx, 0	       460	help.c	FUNCTION_26	CALL_1
0x1482	            0x89c7	                            mov edi, eax	       460	help.c	FUNCTION_26	CALL_1
0x1484	      0xe800000000	                          call 0x40014c9	       460	help.c	FUNCTION_26	CALL_1
0x1489	          0x8945dc	             mov dword [rbp - 0x24], eax	       460	help.c	FUNCTION_26	CALL_1
0x148c	    0x8b0500000000	            mov eax, dword [0x040014d2] 	       462	help.c	FUNCTION_26
0x1492	          0x8945e4	             mov dword [rbp - 0x1c], eax	       462	help.c	FUNCTION_26
0x1495	    0x8b0500000000	            mov eax, dword [0x040014db] 	       464	help.c	FUNCTION_26	IF_1
0x149b	            0x85c0	                           test eax, eax	       464	help.c	FUNCTION_26	IF_1
0x149d	            0x7466	                            je 0x4001545	       464	help.c	FUNCTION_26	IF_1
0x149f	      0xbe00000000	                              mov esi, 0	       465	help.c	FUNCTION_26	IF_1	CALL_2
0x14a4	      0xbf00000000	                              mov edi, 0	       465	help.c	FUNCTION_26	IF_1	CALL_2
0x14a9	      0xe800000000	                          call 0x40014ee	       465	help.c	FUNCTION_26	IF_1	CALL_2
0x14ae	      0xbf00000000	                              mov edi, 0	       466	help.c	FUNCTION_26	IF_1	CALL_5
0x14b3	      0xe834edffff	                               call sym.	       466	help.c	FUNCTION_26	IF_1	CALL_5
0x14b8	          0x4889c3	                            mov rbx, rax	       466	help.c	FUNCTION_26	IF_1	CALL_5
0x14bb	      0xbf00000000	                              mov edi, 0	       466	help.c	FUNCTION_26	IF_1	CALL_5
0x14c0	      0xe827edffff	                               call sym.	       466	help.c	FUNCTION_26	IF_1	CALL_5
0x14c5	      0xba00000000	                              mov edx, 0	       466	help.c	FUNCTION_26	IF_1	CALL_5
0x14ca	          0x4889de	                            mov rsi, rbx	       466	help.c	FUNCTION_26	IF_1	CALL_5
0x14cd	          0x4889c7	                            mov rdi, rax	       466	help.c	FUNCTION_26	IF_1	CALL_5
0x14d0	      0xb800000000	                              mov eax, 0	       466	help.c	FUNCTION_26	IF_1	CALL_5
0x14d5	      0xe800000000	                          call 0x400151a	       466	help.c	FUNCTION_26	IF_1	CALL_5
0x14da	      0xba00000000	                              mov edx, 0	       467	help.c	FUNCTION_26	IF_1	CALL_6
0x14df	      0xbe00000000	                              mov esi, 0	       467	help.c	FUNCTION_26	IF_1	CALL_6
0x14e4	      0xbf00000000	                              mov edi, 0	       467	help.c	FUNCTION_26	IF_1	CALL_6
0x14e9	      0xe800000000	                          call 0x400152e	       467	help.c	FUNCTION_26	IF_1	CALL_6
0x14ee	    0x8b0500000000	            mov eax, dword [0x04001534] 	       468	help.c	FUNCTION_26	IF_1	CALL_7
0x14f4	      0xba00000000	                              mov edx, 0	       468	help.c	FUNCTION_26	IF_1	CALL_7
0x14f9	      0xbe00000000	                              mov esi, 0	       468	help.c	FUNCTION_26	IF_1	CALL_7
0x14fe	            0x89c7	                            mov edi, eax	       468	help.c	FUNCTION_26	IF_1	CALL_7
0x1500	      0xe800000000	                          call 0x4001545	       468	help.c	FUNCTION_26	IF_1	CALL_7
0x1505	    0x8b0500000000	            mov eax, dword [0x0400154b] 	       471	help.c	FUNCTION_26	IF_2
0x150b	            0x85c0	                           test eax, eax	       471	help.c	FUNCTION_26	IF_2
0x150d	            0x7405	                            je 0x4001554	       471	help.c	FUNCTION_26	IF_2
0x150f	      0xe88afdffff	        call sym.list_common_guides_help	       472	help.c	FUNCTION_26	CALL_8
0x1514	    0x8b0500000000	            mov eax, dword [0x0400155a] 	       474	help.c	FUNCTION_26	IF_3
0x151a	            0x85c0	                           test eax, eax	       474	help.c	FUNCTION_26	IF_3
0x151c	            0x750a	                           jne 0x4001568	       474	help.c	FUNCTION_26	IF_3
0x151e	    0x8b0500000000	            mov eax, dword [0x04001564] 	       474	help.c	FUNCTION_26	IF_3
0x1524	            0x85c0	                           test eax, eax	       474	help.c	FUNCTION_26	IF_3
0x1526	            0x741c	                            je 0x4001584	       474	help.c	FUNCTION_26	IF_3
0x1528	      0xbf00000000	                              mov edi, 0	       475	help.c	FUNCTION_26	IF_3	CALL_10
0x152d	      0xe8baecffff	                               call sym.	       475	help.c	FUNCTION_26	IF_3	CALL_10
0x1532	          0x4889c7	                            mov rdi, rax	       475	help.c	FUNCTION_26	IF_3	CALL_10
0x1535	      0xe800000000	                          call 0x400157a	       475	help.c	FUNCTION_26	IF_3	CALL_10
0x153a	      0xb800000000	                              mov eax, 0	       479	help.c	FUNCTION_26	IF_3
0x153f	      0xe90e010000	                           jmp 0x4001692	       479	help.c	FUNCTION_26	IF_3
0x1544	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       482	help.c	FUNCTION_26	IF_4
0x1548	          0x488b00	                    mov rax, qword [rax]	       482	help.c	FUNCTION_26	IF_4
0x154b	          0x4885c0	                           test rax, rax	       482	help.c	FUNCTION_26	IF_4
0x154e	            0x7557	                           jne 0x40015e7	       482	help.c	FUNCTION_26	IF_4
0x1550	      0xbf00000000	                              mov edi, 0	       483	help.c	FUNCTION_26	IF_4	CALL_13
0x1555	      0xe892ecffff	                               call sym.	       483	help.c	FUNCTION_26	IF_4	CALL_13
0x155a	          0x4889c3	                            mov rbx, rax	       483	help.c	FUNCTION_26	IF_4	CALL_13
0x155d	      0xbf00000000	                              mov edi, 0	       483	help.c	FUNCTION_26	IF_4	CALL_13
0x1562	      0xe885ecffff	                               call sym.	       483	help.c	FUNCTION_26	IF_4	CALL_13
0x1567	      0xba00000000	                              mov edx, 0	       483	help.c	FUNCTION_26	IF_4	CALL_13
0x156c	          0x4889de	                            mov rsi, rbx	       483	help.c	FUNCTION_26	IF_4	CALL_13
0x156f	          0x4889c7	                            mov rdi, rax	       483	help.c	FUNCTION_26	IF_4	CALL_13
0x1572	      0xb800000000	                              mov eax, 0	       483	help.c	FUNCTION_26	IF_4	CALL_13
0x1577	      0xe800000000	                          call 0x40015bc	       483	help.c	FUNCTION_26	IF_4	CALL_13
0x157c	      0xe800000000	                          call 0x40015c1	       484	help.c	FUNCTION_26	IF_4	CALL_14
0x1581	      0xbf00000000	                              mov edi, 0	       485	help.c	FUNCTION_26	IF_4	CALL_16
0x1586	      0xe861ecffff	                               call sym.	       485	help.c	FUNCTION_26	IF_4	CALL_16
0x158b	          0x4889c6	                            mov rsi, rax	       485	help.c	FUNCTION_26	IF_4	CALL_16
0x158e	      0xbf00000000	                              mov edi, 0	       485	help.c	FUNCTION_26	IF_4	CALL_16
0x1593	      0xb800000000	                              mov eax, 0	       485	help.c	FUNCTION_26	IF_4	CALL_16
0x1598	      0xe800000000	                          call 0x40015dd	       485	help.c	FUNCTION_26	IF_4	CALL_16
0x159d	      0xb800000000	                              mov eax, 0	       486	help.c	FUNCTION_26	IF_4
0x15a2	      0xe9ab000000	                           jmp 0x4001692	       486	help.c	FUNCTION_26	IF_4
0x15a7	        0x488d45e0	                   lea rax, [rbp - 0x20]	       489	help.c	FUNCTION_26	CALL_17
0x15ab	          0x4889c7	                            mov rdi, rax	       489	help.c	FUNCTION_26	CALL_17
0x15ae	      0xe800000000	                          call 0x40015f3	       489	help.c	FUNCTION_26	CALL_17
0x15b3	      0xbe00000000	                              mov esi, 0	       490	help.c	FUNCTION_26	CALL_18
0x15b8	      0xbf00000000	                              mov edi, 0	       490	help.c	FUNCTION_26	CALL_18
0x15bd	      0xe800000000	                          call 0x4001602	       490	help.c	FUNCTION_26	CALL_18
0x15c2	        0x837de400	               cmp dword [rbp - 0x1c], 0	       492	help.c	FUNCTION_26	IF_5
0x15c6	            0x7409	                            je 0x4001611	       492	help.c	FUNCTION_26	IF_5
0x15c8	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       493	help.c	FUNCTION_26	IF_5
0x15cb	    0x890500000000	            mov dword [0x04001611], eax 	       493	help.c	FUNCTION_26	IF_5
0x15d1	    0x8b0500000000	            mov eax, dword [0x04001617] 	       494	help.c	FUNCTION_26	IF_6
0x15d7	            0x85c0	                           test eax, eax	       494	help.c	FUNCTION_26	IF_6
0x15d9	            0x7510	                           jne 0x400162b	       494	help.c	FUNCTION_26	IF_6
0x15db	      0xbf00000000	                              mov edi, 0	       495	help.c	FUNCTION_26	CALL_19
0x15e0	      0xe860ecffff	              call sym.parse_help_format	       495	help.c	FUNCTION_26	CALL_19
0x15e5	    0x890500000000	            mov dword [0x0400162b], eax 	       495	help.c	FUNCTION_26	CALL_19
0x15eb	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       497	help.c	FUNCTION_26	CALL_20
0x15ef	          0x488b00	                    mov rax, qword [rax]	       497	help.c	FUNCTION_26	CALL_20
0x15f2	          0x4889c7	                            mov rdi, rax	       497	help.c	FUNCTION_26	CALL_20
0x15f5	      0xe8b7fdffff	                  call sym.check_git_cmd	       497	help.c	FUNCTION_26	CALL_20
0x15fa	          0x4889c2	                            mov rdx, rax	       497	help.c	FUNCTION_26	CALL_20
0x15fd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       497	help.c	FUNCTION_26	CALL_20
0x1601	          0x488910	                    mov qword [rax], rdx	       497	help.c	FUNCTION_26	CALL_20
0x1604	    0x8b0500000000	            mov eax, dword [0x0400164a] 	       499	help.c	FUNCTION_26	SWITCH_1
0x160a	          0x83f802	                              cmp eax, 2	       499	help.c	FUNCTION_26	SWITCH_1
0x160d	            0x741d	                            je 0x400166c	       499	help.c	FUNCTION_26	SWITCH_1
0x160f	          0x83f802	                              cmp eax, 2	       499	help.c	FUNCTION_26	SWITCH_1
0x1612	            0x7207	                            jb 0x400165b	       499	help.c	FUNCTION_26	SWITCH_1
0x1614	          0x83f803	                              cmp eax, 3	       499	help.c	FUNCTION_26	SWITCH_1
0x1617	            0x7424	                            je 0x400167d	       499	help.c	FUNCTION_26	SWITCH_1
0x1619	            0xeb32	                           jmp 0x400168d	       499	help.c	FUNCTION_26	SWITCH_1
0x161b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       502	help.c	FUNCTION_26	SWITCH_1	CALL_21
0x161f	          0x488b00	                    mov rax, qword [rax]	       502	help.c	FUNCTION_26	SWITCH_1	CALL_21
0x1622	          0x4889c7	                            mov rdi, rax	       502	help.c	FUNCTION_26	SWITCH_1	CALL_21
0x1625	      0xe88df9ffff	                  call sym.show_man_page	       502	help.c	FUNCTION_26	SWITCH_1	CALL_21
0x162a	            0xeb21	                           jmp 0x400168d	       503	help.c	FUNCTION_26	SWITCH_1
0x162c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       505	help.c	FUNCTION_26	SWITCH_1	CALL_22
0x1630	          0x488b00	                    mov rax, qword [rax]	       505	help.c	FUNCTION_26	SWITCH_1	CALL_22
0x1633	          0x4889c7	                            mov rdi, rax	       505	help.c	FUNCTION_26	SWITCH_1	CALL_22
0x1636	      0xe823faffff	                 call sym.show_info_page	       505	help.c	FUNCTION_26	SWITCH_1	CALL_22
0x163b	            0xeb10	                           jmp 0x400168d	       506	help.c	FUNCTION_26	SWITCH_1
0x163d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       508	help.c	FUNCTION_26	SWITCH_1	CALL_23
0x1641	          0x488b00	                    mov rax, qword [rax]	       508	help.c	FUNCTION_26	SWITCH_1	CALL_23
0x1644	          0x4889c7	                            mov rdi, rax	       508	help.c	FUNCTION_26	SWITCH_1	CALL_23
0x1647	      0xe8f1fbffff	                 call sym.show_html_page	       508	help.c	FUNCTION_26	SWITCH_1	CALL_23
0x164c	              0x90	                                     nop	       509	help.c	FUNCTION_26	SWITCH_1
0x164d	      0xb800000000	                              mov eax, 0	       512	help.c	FUNCTION_26
0x1652	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       513	help.c	FUNCTION_26
0x1656	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       513	help.c	FUNCTION_26
0x165f	            0x7405	                            je 0x40016a6	       513	help.c	FUNCTION_26
0x1661	      0xe800000000	                          call 0x40016a6	       513	help.c	FUNCTION_26
0x1666	        0x4883c438	                           add rsp, 0x38	       513	help.c	FUNCTION_26
0x166a	              0x5b	                                 pop rbx	       513	help.c	FUNCTION_26
0x166b	              0x5d	                                 pop rbp	       513	help.c	FUNCTION_26
0x166c	              0xc3	                                     ret	       513	help.c	FUNCTION_26
strip_suffix_mem	WHILE,0:functions,0:DO,0:CALL,2:FOR,0:ELSE,0:IF,1:SWITCH,0	38
0xb	              0x55	                                push rbp	       538	git-compat-util.h	FUNCTION_47
0xc	          0x4889e5	                            mov rbp, rsp	       538	git-compat-util.h	FUNCTION_47
0xf	        0x4883ec30	                           sub rsp, 0x30	       538	git-compat-util.h	FUNCTION_47
0x13	        0x48897de8	             mov qword [rbp - 0x18], rdi	       538	git-compat-util.h	FUNCTION_47
0x17	        0x488975e0	             mov qword [rbp - 0x20], rsi	       538	git-compat-util.h	FUNCTION_47
0x1b	        0x488955d8	             mov qword [rbp - 0x28], rdx	       538	git-compat-util.h	FUNCTION_47
0x1f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       539	git-compat-util.h	FUNCTION_47	CALL_1
0x23	          0x4889c7	                            mov rdi, rax	       539	git-compat-util.h	FUNCTION_47	CALL_1
0x26	      0xe800000000	                          call 0x400006b	       539	git-compat-util.h	FUNCTION_47	CALL_1
0x2b	        0x488945f8	                mov qword [rbp - 8], rax	       539	git-compat-util.h	FUNCTION_47	CALL_1
0x2f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       540	git-compat-util.h	FUNCTION_47	IF_1	CALL_2
0x33	          0x488b00	                    mov rax, qword [rax]	       540	git-compat-util.h	FUNCTION_47	IF_1	CALL_2
0x36	        0x483b45f8	                cmp rax, qword [rbp - 8]	       540	git-compat-util.h	FUNCTION_47	IF_1	CALL_2
0x3a	            0x722d	                            jb 0x40000a9	       540	git-compat-util.h	FUNCTION_47	IF_1	CALL_2
0x3c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       540	git-compat-util.h	FUNCTION_47	IF_1	CALL_2
0x40	          0x488b00	                    mov rax, qword [rax]	       540	git-compat-util.h	FUNCTION_47	IF_1	CALL_2
0x43	        0x482b45f8	                sub rax, qword [rbp - 8]	       540	git-compat-util.h	FUNCTION_47	IF_1	CALL_2
0x47	          0x4889c2	                            mov rdx, rax	       540	git-compat-util.h	FUNCTION_47	IF_1	CALL_2
0x4a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       540	git-compat-util.h	FUNCTION_47	IF_1	CALL_2
0x4e	        0x488d0c02	                    lea rcx, [rdx + rax]	       540	git-compat-util.h	FUNCTION_47	IF_1	CALL_2
0x52	        0x488b55f8	                mov rdx, qword [rbp - 8]	       540	git-compat-util.h	FUNCTION_47	IF_1	CALL_2
0x56	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       540	git-compat-util.h	FUNCTION_47	IF_1	CALL_2
0x5a	          0x4889c6	                            mov rsi, rax	       540	git-compat-util.h	FUNCTION_47	IF_1	CALL_2
0x5d	          0x4889cf	                            mov rdi, rcx	       540	git-compat-util.h	FUNCTION_47	IF_1	CALL_2
0x60	      0xe800000000	                          call 0x40000a5	       540	git-compat-util.h	FUNCTION_47	IF_1	CALL_2
0x65	            0x85c0	                           test eax, eax	       540	git-compat-util.h	FUNCTION_47	IF_1	CALL_2
0x67	            0x7407	                            je 0x40000b0	       540	git-compat-util.h	FUNCTION_47	IF_1	CALL_2
0x69	      0xb800000000	                              mov eax, 0	       541	git-compat-util.h	FUNCTION_47	IF_1
0x6e	            0xeb1a	                           jmp 0x40000ca	       541	git-compat-util.h	FUNCTION_47	IF_1
0x70	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       542	git-compat-util.h	FUNCTION_47
0x74	          0x488b00	                    mov rax, qword [rax]	       542	git-compat-util.h	FUNCTION_47
0x77	        0x482b45f8	                sub rax, qword [rbp - 8]	       542	git-compat-util.h	FUNCTION_47
0x7b	          0x4889c2	                            mov rdx, rax	       542	git-compat-util.h	FUNCTION_47
0x7e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       542	git-compat-util.h	FUNCTION_47
0x82	          0x488910	                    mov qword [rax], rdx	       542	git-compat-util.h	FUNCTION_47
0x85	      0xb801000000	                              mov eax, 1	       543	git-compat-util.h	FUNCTION_47
0x8a	              0xc9	                                   leave	       544	git-compat-util.h	FUNCTION_47
0x8b	              0xc3	                                     ret	       544	git-compat-util.h	FUNCTION_47
add_man_viewer_cmd	WHILE,0:functions,0:DO,0:CALL,4:FOR,0:ELSE,1:IF,1:SWITCH,0	31
0xa48	              0x55	                                push rbp	       221	help.c	FUNCTION_12
0xa49	          0x4889e5	                            mov rbp, rsp	       221	help.c	FUNCTION_12
0xa4c	        0x4883ec20	                           sub rsp, 0x20	       221	help.c	FUNCTION_12
0xa50	        0x48897df8	                mov qword [rbp - 8], rdi	       221	help.c	FUNCTION_12
0xa54	        0x488975f0	             mov qword [rbp - 0x10], rsi	       221	help.c	FUNCTION_12
0xa58	        0x488955e8	             mov qword [rbp - 0x18], rdx	       221	help.c	FUNCTION_12
0xa5c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       222	help.c	FUNCTION_12	IF_1	CALL_1
0xa60	        0x488b45f8	                mov rax, qword [rbp - 8]	       222	help.c	FUNCTION_12	IF_1	CALL_1
0xa64	          0x4889d6	                            mov rsi, rdx	       222	help.c	FUNCTION_12	IF_1	CALL_1
0xa67	          0x4889c7	                            mov rdi, rax	       222	help.c	FUNCTION_12	IF_1	CALL_1
0xa6a	      0xe86bfeffff	           call sym.supported_man_viewer	       222	help.c	FUNCTION_12	IF_1	CALL_1
0xa6f	            0x85c0	                           test eax, eax	       222	help.c	FUNCTION_12	IF_1	CALL_1
0xa71	            0x7423	                            je 0x4000ad6	       222	help.c	FUNCTION_12	IF_1	CALL_1
0xa73	      0xbf00000000	                              mov edi, 0	       223	help.c	FUNCTION_12	IF_1	CALL_3
0xa78	      0xe86ff7ffff	                               call sym.	       223	help.c	FUNCTION_12	IF_1	CALL_3
0xa7d	          0x4889c2	                            mov rdx, rax	       223	help.c	FUNCTION_12	IF_1	CALL_3
0xa80	        0x488b45f8	                mov rax, qword [rbp - 8]	       223	help.c	FUNCTION_12	IF_1	CALL_3
0xa84	          0x4889c6	                            mov rsi, rax	       223	help.c	FUNCTION_12	IF_1	CALL_3
0xa87	          0x4889d7	                            mov rdi, rdx	       223	help.c	FUNCTION_12	IF_1	CALL_3
0xa8a	      0xb800000000	                              mov eax, 0	       223	help.c	FUNCTION_12	IF_1	CALL_3
0xa8f	      0xe800000000	                          call 0x4000ad4	       223	help.c	FUNCTION_12	IF_1	CALL_3
0xa94	            0xeb17	                           jmp 0x4000aed	       223	help.c	FUNCTION_12	IF_1	CALL_3
0xa96	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       227	help.c	FUNCTION_12	CALL_4
0xa9a	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       227	help.c	FUNCTION_12	CALL_4
0xa9e	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	help.c	FUNCTION_12	CALL_4
0xaa2	          0x4889ce	                            mov rsi, rcx	       227	help.c	FUNCTION_12	CALL_4
0xaa5	          0x4889c7	                            mov rdi, rax	       227	help.c	FUNCTION_12	CALL_4
0xaa8	      0xe896feffff	         call sym.do_add_man_viewer_info	       227	help.c	FUNCTION_12	CALL_4
0xaad	      0xb800000000	                              mov eax, 0	       229	help.c	FUNCTION_12
0xab2	              0xc9	                                   leave	       230	help.c	FUNCTION_12
0xab3	              0xc3	                                     ret	       230	help.c	FUNCTION_12
exec_viewer	WHILE,0:functions,0:DO,0:CALL,10:FOR,0:ELSE,4:IF,4:SWITCH,0	64
0xed6	              0x55	                                push rbp	       328	help.c	FUNCTION_18
0xed7	          0x4889e5	                            mov rbp, rsp	       328	help.c	FUNCTION_18
0xeda	        0x4883ec20	                           sub rsp, 0x20	       328	help.c	FUNCTION_18
0xede	        0x48897de8	             mov qword [rbp - 0x18], rdi	       328	help.c	FUNCTION_18
0xee2	        0x488975e0	             mov qword [rbp - 0x20], rsi	       328	help.c	FUNCTION_18
0xee6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       329	help.c	FUNCTION_18	CALL_1
0xeea	          0x4889c7	                            mov rdi, rax	       329	help.c	FUNCTION_18	CALL_1
0xeed	      0xe8ebf3ffff	            call sym.get_man_viewer_info	       329	help.c	FUNCTION_18	CALL_1
0xef2	        0x488945f8	                mov qword [rbp - 8], rax	       329	help.c	FUNCTION_18	CALL_1
0xef6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       331	help.c	FUNCTION_18	IF_1	CALL_2
0xefa	      0xbe00000000	                              mov esi, 0	       331	help.c	FUNCTION_18	IF_1	CALL_2
0xeff	          0x4889c7	                            mov rdi, rax	       331	help.c	FUNCTION_18	IF_1	CALL_2
0xf02	      0xe800000000	                          call 0x4000f47	       331	help.c	FUNCTION_18	IF_1	CALL_2
0xf07	            0x85c0	                           test eax, eax	       331	help.c	FUNCTION_18	IF_1	CALL_2
0xf09	            0x7518	                           jne 0x4000f63	       331	help.c	FUNCTION_18	IF_1	CALL_2
0xf0b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       332	help.c	FUNCTION_18	CALL_3
0xf0f	        0x488b45f8	                mov rax, qword [rbp - 8]	       332	help.c	FUNCTION_18	CALL_3
0xf13	          0x4889d6	                            mov rsi, rdx	       332	help.c	FUNCTION_18	CALL_3
0xf16	          0x4889c7	                            mov rdi, rax	       332	help.c	FUNCTION_18	CALL_3
0xf19	      0xe808f8ffff	                   call sym.exec_man_man	       332	help.c	FUNCTION_18	CALL_3
0xf1e	      0xe991000000	                           jmp 0x4000ff4	       341	help.c	FUNCTION_18
0xf23	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       333	help.c	FUNCTION_18	ELSE_1	IF_2	CALL_4
0xf27	      0xbe00000000	                              mov esi, 0	       333	help.c	FUNCTION_18	ELSE_1	IF_2	CALL_4
0xf2c	          0x4889c7	                            mov rdi, rax	       333	help.c	FUNCTION_18	ELSE_1	IF_2	CALL_4
0xf2f	      0xe800000000	                          call 0x4000f74	       333	help.c	FUNCTION_18	ELSE_1	IF_2	CALL_4
0xf34	            0x85c0	                           test eax, eax	       333	help.c	FUNCTION_18	ELSE_1	IF_2	CALL_4
0xf36	            0x7515	                           jne 0x4000f8d	       333	help.c	FUNCTION_18	ELSE_1	IF_2	CALL_4
0xf38	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       334	help.c	FUNCTION_18	ELSE_1	IF_2
0xf3c	        0x488b45f8	                mov rax, qword [rbp - 8]	       334	help.c	FUNCTION_18	ELSE_1	IF_2
0xf40	          0x4889d6	                            mov rsi, rdx	       334	help.c	FUNCTION_18	ELSE_1	IF_2
0xf43	          0x4889c7	                            mov rdi, rax	       334	help.c	FUNCTION_18	ELSE_1	IF_2
0xf46	      0xe8baf5ffff	               call sym.exec_woman_emacs	       334	help.c	FUNCTION_18	ELSE_1	IF_2
0xf4b	            0xeb67	                           jmp 0x4000ff4	       341	help.c	FUNCTION_18
0xf4d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       335	help.c	FUNCTION_18	ELSE_2	IF_3	CALL_6
0xf51	      0xbe00000000	                              mov esi, 0	       335	help.c	FUNCTION_18	ELSE_2	IF_3	CALL_6
0xf56	          0x4889c7	                            mov rdi, rax	       335	help.c	FUNCTION_18	ELSE_2	IF_3	CALL_6
0xf59	      0xe800000000	                          call 0x4000f9e	       335	help.c	FUNCTION_18	ELSE_2	IF_3	CALL_6
0xf5e	            0x85c0	                           test eax, eax	       335	help.c	FUNCTION_18	ELSE_2	IF_3	CALL_6
0xf60	            0x7515	                           jne 0x4000fb7	       335	help.c	FUNCTION_18	ELSE_2	IF_3	CALL_6
0xf62	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       336	help.c	FUNCTION_18	ELSE_2	IF_3
0xf66	        0x488b45f8	                mov rax, qword [rbp - 8]	       336	help.c	FUNCTION_18	ELSE_2	IF_3
0xf6a	          0x4889d6	                            mov rsi, rdx	       336	help.c	FUNCTION_18	ELSE_2	IF_3
0xf6d	          0x4889c7	                            mov rdi, rax	       336	help.c	FUNCTION_18	ELSE_2	IF_3
0xf70	      0xe869f6ffff	             call sym.exec_man_konqueror	       336	help.c	FUNCTION_18	ELSE_2	IF_3
0xf75	            0xeb3d	                           jmp 0x4000ff4	       341	help.c	FUNCTION_18
0xf77	      0x48837df800	                  cmp qword [rbp - 8], 0	       337	help.c	FUNCTION_18	ELSE_3	IF_4
0xf7c	            0x7415	                            je 0x4000fd3	       337	help.c	FUNCTION_18	ELSE_3	IF_4
0xf7e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       338	help.c	FUNCTION_18	ELSE_3	IF_4
0xf82	        0x488b45f8	                mov rax, qword [rbp - 8]	       338	help.c	FUNCTION_18	ELSE_3	IF_4
0xf86	          0x4889d6	                            mov rsi, rdx	       338	help.c	FUNCTION_18	ELSE_3	IF_4
0xf89	          0x4889c7	                            mov rdi, rax	       338	help.c	FUNCTION_18	ELSE_3	IF_4
0xf8c	      0xe8f7f7ffff	                   call sym.exec_man_cmd	       338	help.c	FUNCTION_18	ELSE_3	IF_4
0xf91	            0xeb21	                           jmp 0x4000ff4	       341	help.c	FUNCTION_18
0xf93	      0xbf00000000	                              mov edi, 0	       340	help.c	FUNCTION_18	CALL_10
0xf98	      0xe84ff2ffff	                               call sym.	       340	help.c	FUNCTION_18	CALL_10
0xf9d	          0x4889c2	                            mov rdx, rax	       340	help.c	FUNCTION_18	CALL_10
0xfa0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       340	help.c	FUNCTION_18	CALL_10
0xfa4	          0x4889c6	                            mov rsi, rax	       340	help.c	FUNCTION_18	CALL_10
0xfa7	          0x4889d7	                            mov rdi, rdx	       340	help.c	FUNCTION_18	CALL_10
0xfaa	      0xb800000000	                              mov eax, 0	       340	help.c	FUNCTION_18	CALL_10
0xfaf	      0xe800000000	                          call 0x4000ff4	       340	help.c	FUNCTION_18	CALL_10
0xfb4	              0x90	                                     nop	       341	help.c	FUNCTION_18
0xfb5	              0xc9	                                   leave	       341	help.c	FUNCTION_18
0xfb6	              0xc3	                                     ret	       341	help.c	FUNCTION_18
exec_woman_emacs	WHILE,0:functions,0:DO,0:CALL,6:FOR,0:ELSE,0:IF,2:SWITCH,0	50
0x505	              0x55	                                push rbp	       124	help.c	FUNCTION_4
0x506	          0x4889e5	                            mov rbp, rsp	       124	help.c	FUNCTION_4
0x509	        0x4883ec30	                           sub rsp, 0x30	       124	help.c	FUNCTION_4
0x50d	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       124	help.c	FUNCTION_4
0x511	        0x488975d0	             mov qword [rbp - 0x30], rsi	       124	help.c	FUNCTION_4
0x515	    0x64488b042528	                mov rax, qword fs:[0x28]	       124	help.c	FUNCTION_4
0x51e	        0x488945f8	                mov qword [rbp - 8], rax	       124	help.c	FUNCTION_4
0x522	            0x31c0	                            xor eax, eax	       124	help.c	FUNCTION_4
0x524	      0xe80bfeffff	      call sym.check_emacsclient_version	       125	help.c	FUNCTION_4	IF_1	CALL_1
0x529	            0x85c0	                           test eax, eax	       125	help.c	FUNCTION_4	IF_1	CALL_1
0x52b	     0xf8596000000	                           jne 0x4000607	       125	help.c	FUNCTION_4	IF_1	CALL_1
0x531	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       127	help.c	FUNCTION_4	IF_1
0x539	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       127	help.c	FUNCTION_4	IF_1
0x541	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       127	help.c	FUNCTION_4	IF_1
0x549	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       129	help.c	FUNCTION_4	IF_1	IF_2
0x54e	            0x7508	                           jne 0x4000598	       129	help.c	FUNCTION_4	IF_1	IF_2
0x550	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       130	help.c	FUNCTION_4	IF_1	IF_2
0x558	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       131	help.c	FUNCTION_4	IF_1	CALL_2
0x55c	        0x488d45e0	                   lea rax, [rbp - 0x20]	       131	help.c	FUNCTION_4	IF_1	CALL_2
0x560	      0xbe00000000	                              mov esi, 0	       131	help.c	FUNCTION_4	IF_1	CALL_2
0x565	          0x4889c7	                            mov rdi, rax	       131	help.c	FUNCTION_4	IF_1	CALL_2
0x568	      0xb800000000	                              mov eax, 0	       131	help.c	FUNCTION_4	IF_1	CALL_2
0x56d	      0xe800000000	                          call 0x40005b2	       131	help.c	FUNCTION_4	IF_1	CALL_2
0x572	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       132	help.c	FUNCTION_4	IF_1	CALL_3
0x576	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       132	help.c	FUNCTION_4	IF_1	CALL_3
0x57a	    0x41b800000000	                              mov r8d, 0	       132	help.c	FUNCTION_4	IF_1	CALL_3
0x580	          0x4889d1	                            mov rcx, rdx	       132	help.c	FUNCTION_4	IF_1	CALL_3
0x583	      0xba00000000	                              mov edx, 0	       132	help.c	FUNCTION_4	IF_1	CALL_3
0x588	      0xbe00000000	                              mov esi, 0	       132	help.c	FUNCTION_4	IF_1	CALL_3
0x58d	          0x4889c7	                            mov rdi, rax	       132	help.c	FUNCTION_4	IF_1	CALL_3
0x590	      0xb800000000	                              mov eax, 0	       132	help.c	FUNCTION_4	IF_1	CALL_3
0x595	      0xe800000000	                          call 0x40005da	       132	help.c	FUNCTION_4	IF_1	CALL_3
0x59a	      0xbf00000000	                              mov edi, 0	       133	help.c	FUNCTION_4	IF_1	CALL_5
0x59f	      0xe848fcffff	                               call sym.	       133	help.c	FUNCTION_4	IF_1	CALL_5
0x5a4	          0x4889c2	                            mov rdx, rax	       133	help.c	FUNCTION_4	IF_1	CALL_5
0x5a7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       133	help.c	FUNCTION_4	IF_1	CALL_5
0x5ab	          0x4889c6	                            mov rsi, rax	       133	help.c	FUNCTION_4	IF_1	CALL_5
0x5ae	          0x4889d7	                            mov rdi, rdx	       133	help.c	FUNCTION_4	IF_1	CALL_5
0x5b1	      0xb800000000	                              mov eax, 0	       133	help.c	FUNCTION_4	IF_1	CALL_5
0x5b6	      0xe800000000	                          call 0x40005fb	       133	help.c	FUNCTION_4	IF_1	CALL_5
0x5bb	        0x488d45e0	                   lea rax, [rbp - 0x20]	       134	help.c	FUNCTION_4	IF_1	CALL_6
0x5bf	          0x4889c7	                            mov rdi, rax	       134	help.c	FUNCTION_4	IF_1	CALL_6
0x5c2	      0xe800000000	                          call 0x4000607	       134	help.c	FUNCTION_4	IF_1	CALL_6
0x5c7	              0x90	                                     nop	       136	help.c	FUNCTION_4
0x5c8	        0x488b45f8	                mov rax, qword [rbp - 8]	       136	help.c	FUNCTION_4
0x5cc	    0x644833042528	                xor rax, qword fs:[0x28]	       136	help.c	FUNCTION_4
0x5d5	            0x7405	                            je 0x400061c	       136	help.c	FUNCTION_4
0x5d7	      0xe800000000	                          call 0x400061c	       136	help.c	FUNCTION_4
0x5dc	              0xc9	                                   leave	       136	help.c	FUNCTION_4
0x5dd	              0xc3	                                     ret	       136	help.c	FUNCTION_4
strbuf_addch	WHILE,0:functions,0:DO,0:CALL,2:FOR,0:ELSE,0:IF,1:SWITCH,0	33
0x149	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_30
0x14a	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_30
0x14d	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_30
0x151	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_30
0x155	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_30
0x158	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_30	IF_1	CALL_1
0x15c	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_30	IF_1	CALL_1
0x15f	      0xe8afffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_30	IF_1	CALL_1
0x164	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_30	IF_1	CALL_1
0x167	            0x7511	                           jne 0x40001ba	       227	strbuf.h	FUNCTION_30	IF_1	CALL_1
0x169	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_30	CALL_2
0x16d	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_30	CALL_2
0x172	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_30	CALL_2
0x175	      0xe800000000	                          call 0x40001ba	       228	strbuf.h	FUNCTION_30	CALL_2
0x17a	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_30
0x17e	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_30
0x182	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_30
0x186	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_30
0x18a	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_30
0x18e	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_30
0x192	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_30
0x196	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_30
0x199	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_30
0x19c	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_30
0x19e	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_30
0x1a2	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_30
0x1a6	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_30
0x1aa	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_30
0x1ae	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_30
0x1b1	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_30
0x1b4	              0x90	                                     nop	       231	strbuf.h	FUNCTION_30
0x1b5	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_30
0x1b6	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_30
get_man_viewer_info	WHILE,0:functions,0:DO,0:CALL,1:FOR,1:ELSE,0:IF,1:SWITCH,0	26
0x2dd	              0x55	                                push rbp	        71	help.c	FUNCTION_2
0x2de	          0x4889e5	                            mov rbp, rsp	        71	help.c	FUNCTION_2
0x2e1	        0x4883ec20	                           sub rsp, 0x20	        71	help.c	FUNCTION_2
0x2e5	        0x48897de8	             mov qword [rbp - 0x18], rdi	        71	help.c	FUNCTION_2
0x2e9	    0x488b05000000	            mov rax, qword [0x04000330] 	        74	help.c	FUNCTION_2	FOR_1
0x2f0	        0x488945f8	                mov qword [rbp - 8], rax	        74	help.c	FUNCTION_2	FOR_1
0x2f4	            0xeb30	                           jmp 0x4000366	        74	help.c	FUNCTION_2	FOR_1
0x2f6	        0x488b45f8	                mov rax, qword [rbp - 8]	        76	help.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x2fa	        0x488d5010	                   lea rdx, [rax + 0x10]	        76	help.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x2fe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        76	help.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x302	          0x4889d6	                            mov rsi, rdx	        76	help.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x305	          0x4889c7	                            mov rdi, rax	        76	help.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x308	      0xe800000000	                          call 0x400034d	        76	help.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x30d	            0x85c0	                           test eax, eax	        76	help.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x30f	            0x750a	                           jne 0x400035b	        76	help.c	FUNCTION_2	FOR_1	IF_1	CALL_1
0x311	        0x488b45f8	                mov rax, qword [rbp - 8]	        77	help.c	FUNCTION_2	FOR_1	IF_1
0x315	        0x488b4008	                mov rax, qword [rax + 8]	        77	help.c	FUNCTION_2	FOR_1	IF_1
0x319	            0xeb17	                           jmp 0x4000372	        77	help.c	FUNCTION_2	FOR_1	IF_1
0x31b	        0x488b45f8	                mov rax, qword [rbp - 8]	        74	help.c	FUNCTION_2	FOR_1
0x31f	          0x488b00	                    mov rax, qword [rax]	        74	help.c	FUNCTION_2	FOR_1
0x322	        0x488945f8	                mov qword [rbp - 8], rax	        74	help.c	FUNCTION_2	FOR_1
0x326	      0x48837df800	                  cmp qword [rbp - 8], 0	        74	help.c	FUNCTION_2	FOR_1
0x32b	            0x75c9	                           jne 0x4000336	        74	help.c	FUNCTION_2	FOR_1
0x32d	      0xb800000000	                              mov eax, 0	        79	help.c	FUNCTION_2
0x332	              0xc9	                                   leave	        80	help.c	FUNCTION_2
0x333	              0xc3	                                     ret	        80	help.c	FUNCTION_2
get_html_page_path	WHILE,0:functions,0:DO,0:CALL,9:FOR,0:ELSE,0:IF,3:SWITCH,0	65
0x10d3	              0x55	                                push rbp	       369	help.c	FUNCTION_21
0x10d4	          0x4889e5	                            mov rbp, rsp	       369	help.c	FUNCTION_21
0x10d7	    0x4881ecc00000	                           sub rsp, 0xc0	       369	help.c	FUNCTION_21
0x10de	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	       369	help.c	FUNCTION_21
0x10e5	    0x4889b540ffff	             mov qword [rbp - 0xc0], rsi	       369	help.c	FUNCTION_21
0x10ec	    0x64488b042528	                mov rax, qword fs:[0x28]	       369	help.c	FUNCTION_21
0x10f5	        0x488945f8	                mov qword [rbp - 8], rax	       369	help.c	FUNCTION_21
0x10f9	            0x31c0	                            xor eax, eax	       369	help.c	FUNCTION_21
0x10fb	    0x48c78558ffff	               mov qword [rbp - 0xa8], 0	       371	help.c	FUNCTION_21
0x1106	    0x488b05000000	            mov rax, qword [0x0400114d] 	       373	help.c	FUNCTION_21	IF_1
0x110d	          0x4885c0	                           test rax, rax	       373	help.c	FUNCTION_21	IF_1
0x1110	            0x751f	                           jne 0x4001171	       373	help.c	FUNCTION_21	IF_1
0x1112	      0xbf00000000	                              mov edi, 0	       374	help.c	FUNCTION_21	CALL_1
0x1117	      0xe800000000	                          call 0x400115c	       374	help.c	FUNCTION_21	CALL_1
0x111c	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       374	help.c	FUNCTION_21	CALL_1
0x1123	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       374	help.c	FUNCTION_21	CALL_1
0x112a	    0x488905000000	            mov qword [0x04001171], rax 	       374	help.c	FUNCTION_21	CALL_1
0x1131	    0x488b05000000	            mov rax, qword [0x04001178] 	       377	help.c	FUNCTION_21	IF_2	CALL_2
0x1138	      0xbe00000000	                              mov esi, 0	       377	help.c	FUNCTION_21	IF_2	CALL_2
0x113d	          0x4889c7	                            mov rdi, rax	       377	help.c	FUNCTION_21	IF_2	CALL_2
0x1140	      0xe800000000	                          call 0x4001185	       377	help.c	FUNCTION_21	IF_2	CALL_2
0x1145	          0x4885c0	                           test rax, rax	       377	help.c	FUNCTION_21	IF_2	CALL_2
0x1148	            0x755d	                           jne 0x40011e7	       377	help.c	FUNCTION_21	IF_2	CALL_2
0x114a	    0x488b05000000	            mov rax, qword [0x04001191] 	       378	help.c	FUNCTION_21	IF_2	IF_3	CALL_4
0x1151	          0x4889c6	                            mov rsi, rax	       378	help.c	FUNCTION_21	IF_2	IF_3	CALL_4
0x1154	      0xbf00000000	                              mov edi, 0	       378	help.c	FUNCTION_21	IF_2	IF_3	CALL_4
0x1159	      0xb800000000	                              mov eax, 0	       378	help.c	FUNCTION_21	IF_2	IF_3	CALL_4
0x115e	      0xe800000000	                          call 0x40011a3	       378	help.c	FUNCTION_21	IF_2	IF_3	CALL_4
0x1163	          0x4889c2	                            mov rdx, rax	       378	help.c	FUNCTION_21	IF_2	IF_3	CALL_4
0x1166	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	       378	help.c	FUNCTION_21	IF_2	IF_3	CALL_4
0x116d	          0x4889c6	                            mov rsi, rax	       378	help.c	FUNCTION_21	IF_2	IF_3	CALL_4
0x1170	          0x4889d7	                            mov rdi, rdx	       378	help.c	FUNCTION_21	IF_2	IF_3	CALL_4
0x1173	      0xe800000000	                          call 0x40011b8	       378	help.c	FUNCTION_21	IF_2	IF_3	CALL_4
0x1178	            0x85c0	                           test eax, eax	       378	help.c	FUNCTION_21	IF_2	IF_3	CALL_4
0x117a	            0x7512	                           jne 0x40011ce	       378	help.c	FUNCTION_21	IF_2	IF_3	CALL_4
0x117c	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       379	help.c	FUNCTION_21	IF_2	IF_3	CALL_5
0x1182	      0x2500f00000	                         and eax, 0xf000	       379	help.c	FUNCTION_21	IF_2	IF_3	CALL_5
0x1187	      0x3d00800000	                         cmp eax, 0x8000	       379	help.c	FUNCTION_21	IF_2	IF_3	CALL_5
0x118c	            0x7419	                            je 0x40011e7	       379	help.c	FUNCTION_21	IF_2	IF_3	CALL_5
0x118e	    0x488b05000000	            mov rax, qword [0x040011d5] 	       380	help.c	FUNCTION_21	IF_2	CALL_6
0x1195	          0x4889c6	                            mov rsi, rax	       380	help.c	FUNCTION_21	IF_2	CALL_6
0x1198	      0xbf00000000	                              mov edi, 0	       380	help.c	FUNCTION_21	IF_2	CALL_6
0x119d	      0xb800000000	                              mov eax, 0	       380	help.c	FUNCTION_21	IF_2	CALL_6
0x11a2	      0xe800000000	                          call 0x40011e7	       380	help.c	FUNCTION_21	IF_2	CALL_6
0x11a7	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       383	help.c	FUNCTION_21	CALL_7
0x11ae	      0xbe00000000	                              mov esi, 0	       383	help.c	FUNCTION_21	CALL_7
0x11b3	          0x4889c7	                            mov rdi, rax	       383	help.c	FUNCTION_21	CALL_7
0x11b6	      0xe800000000	                          call 0x40011fb	       383	help.c	FUNCTION_21	CALL_7
0x11bb	    0x488b15000000	            mov rdx, qword [0x04001202] 	       384	help.c	FUNCTION_21	CALL_8
0x11c2	    0x488b8d40ffff	             mov rcx, qword [rbp - 0xc0]	       384	help.c	FUNCTION_21	CALL_8
0x11c9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       384	help.c	FUNCTION_21	CALL_8
0x11d0	      0xbe00000000	                              mov esi, 0	       384	help.c	FUNCTION_21	CALL_8
0x11d5	          0x4889c7	                            mov rdi, rax	       384	help.c	FUNCTION_21	CALL_8
0x11d8	      0xb800000000	                              mov eax, 0	       384	help.c	FUNCTION_21	CALL_8
0x11dd	      0xe800000000	                          call 0x4001222	       384	help.c	FUNCTION_21	CALL_8
0x11e2	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       385	help.c	FUNCTION_21	CALL_9
0x11e9	          0x4889c7	                            mov rdi, rax	       385	help.c	FUNCTION_21	CALL_9
0x11ec	      0xe800000000	                          call 0x4001231	       385	help.c	FUNCTION_21	CALL_9
0x11f1	              0x90	                                     nop	       386	help.c	FUNCTION_21
0x11f2	        0x488b45f8	                mov rax, qword [rbp - 8]	       386	help.c	FUNCTION_21
0x11f6	    0x644833042528	                xor rax, qword fs:[0x28]	       386	help.c	FUNCTION_21
0x11ff	            0x7405	                            je 0x4001246	       386	help.c	FUNCTION_21
0x1201	      0xe800000000	                          call 0x4001246	       386	help.c	FUNCTION_21
0x1206	              0xc9	                                   leave	       386	help.c	FUNCTION_21
0x1207	              0xc3	                                     ret	       386	help.c	FUNCTION_21
mput_char	WHILE,1:functions,0:DO,0:CALL,1:FOR,0:ELSE,0:IF,0:SWITCH,0	18
0x218	              0x55	                                push rbp	        14	help.h	FUNCTION_65
0x219	          0x4889e5	                            mov rbp, rsp	        14	help.h	FUNCTION_65
0x21c	        0x4883ec10	                           sub rsp, 0x10	        14	help.h	FUNCTION_65
0x220	            0x89f8	                            mov eax, edi	        14	help.h	FUNCTION_65
0x222	          0x8975f8	                mov dword [rbp - 8], esi	        14	help.h	FUNCTION_65
0x225	          0x8845fc	                  mov byte [rbp - 4], al	        14	help.h	FUNCTION_65
0x228	            0xeb0b	                           jmp 0x4000275	        15	help.h	FUNCTION_65	WHILE_1
0x22a	         0xfbe45fc	               movsx eax, byte [rbp - 4]	        16	help.h	FUNCTION_65	CALL_1
0x22e	            0x89c7	                            mov edi, eax	        16	help.h	FUNCTION_65	CALL_1
0x230	      0xe800000000	                          call 0x4000275	        16	help.h	FUNCTION_65	CALL_1
0x235	          0x8b45f8	                mov eax, dword [rbp - 8]	        15	help.h	FUNCTION_65	WHILE_1
0x238	          0x8d50ff	                      lea edx, [rax - 1]	        15	help.h	FUNCTION_65	WHILE_1
0x23b	          0x8955f8	                mov dword [rbp - 8], edx	        15	help.h	FUNCTION_65	WHILE_1
0x23e	            0x85c0	                           test eax, eax	        15	help.h	FUNCTION_65	WHILE_1
0x240	            0x75e8	                           jne 0x400026a	        15	help.h	FUNCTION_65	WHILE_1
0x242	              0x90	                                     nop	        17	help.h	FUNCTION_65
0x243	              0xc9	                                   leave	        17	help.h	FUNCTION_65
0x244	              0xc3	                                     ret	        17	help.h	FUNCTION_65
_	WHILE,0:functions,0:DO,0:CALL,2:FOR,0:ELSE,0:IF,1:SWITCH,0	15
0x1ec	              0x55	                                push rbp	        51	gettext.h	FUNCTION_68
0x1ed	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_68
0x1f0	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_68
0x1f4	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_68
0x1f8	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_68	IF_1
0x1fc	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_68	IF_1
0x1ff	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_68	IF_1
0x201	            0x7507	                           jne 0x400024a	        52	gettext.h	FUNCTION_68	IF_1
0x203	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_68	IF_1
0x208	            0xeb0c	                           jmp 0x4000256	        53	gettext.h	FUNCTION_68	IF_1
0x20a	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_68	CALL_2
0x20e	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_68	CALL_2
0x211	      0xe800000000	                          call 0x4000256	        54	gettext.h	FUNCTION_68	CALL_2
0x216	              0xc9	                                   leave	        55	gettext.h	FUNCTION_68
0x217	              0xc3	                                     ret	        55	gettext.h	FUNCTION_68
cmd_to_page	WHILE,0:functions,0:DO,0:CALL,4:FOR,0:ELSE,3:IF,3:SWITCH,0	34
0xd93	              0x55	                                push rbp	       295	help.c	FUNCTION_16
0xd94	          0x4889e5	                            mov rbp, rsp	       295	help.c	FUNCTION_16
0xd97	        0x4883ec10	                           sub rsp, 0x10	       295	help.c	FUNCTION_16
0xd9b	        0x48897df8	                mov qword [rbp - 8], rdi	       295	help.c	FUNCTION_16
0xd9f	      0x48837df800	                  cmp qword [rbp - 8], 0	       296	help.c	FUNCTION_16	IF_1
0xda4	            0x7507	                           jne 0x4000ded	       296	help.c	FUNCTION_16	IF_1
0xda6	      0xb800000000	                              mov eax, 0	       297	help.c	FUNCTION_16	IF_1
0xdab	            0xeb59	                           jmp 0x4000e46	       297	help.c	FUNCTION_16	IF_1
0xdad	        0x488b45f8	                mov rax, qword [rbp - 8]	       298	help.c	FUNCTION_16	ELSE_1	IF_2	CALL_1
0xdb1	      0xbe00000000	                              mov esi, 0	       298	help.c	FUNCTION_16	ELSE_1	IF_2	CALL_1
0xdb6	          0x4889c7	                            mov rdi, rax	       298	help.c	FUNCTION_16	ELSE_1	IF_2	CALL_1
0xdb9	      0xe800000000	                          call 0x4000dfe	       298	help.c	FUNCTION_16	ELSE_1	IF_2	CALL_1
0xdbe	            0x85c0	                           test eax, eax	       298	help.c	FUNCTION_16	ELSE_1	IF_2	CALL_1
0xdc0	            0x7406	                            je 0x4000e08	       298	help.c	FUNCTION_16	ELSE_1	IF_2	CALL_1
0xdc2	        0x488b45f8	                mov rax, qword [rbp - 8]	       299	help.c	FUNCTION_16	ELSE_1	IF_2
0xdc6	            0xeb3e	                           jmp 0x4000e46	       299	help.c	FUNCTION_16	ELSE_1	IF_2
0xdc8	        0x488b45f8	                mov rax, qword [rbp - 8]	       300	help.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0xdcc	          0x4889c7	                            mov rdi, rax	       300	help.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0xdcf	      0xe84fffffff	                 call sym.is_git_command	       300	help.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0xdd4	            0x85c0	                           test eax, eax	       300	help.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0xdd6	            0x7418	                            je 0x4000e30	       300	help.c	FUNCTION_16	ELSE_2	IF_3	CALL_2
0xdd8	        0x488b45f8	                mov rax, qword [rbp - 8]	       301	help.c	FUNCTION_16	ELSE_2	IF_3
0xddc	          0x4889c6	                            mov rsi, rax	       301	help.c	FUNCTION_16	ELSE_2	IF_3
0xddf	      0xbf00000000	                              mov edi, 0	       301	help.c	FUNCTION_16	ELSE_2	IF_3
0xde4	      0xb800000000	                              mov eax, 0	       301	help.c	FUNCTION_16	ELSE_2	IF_3
0xde9	      0xe800000000	                          call 0x4000e2e	       301	help.c	FUNCTION_16	ELSE_2	IF_3
0xdee	            0xeb16	                           jmp 0x4000e46	       301	help.c	FUNCTION_16	ELSE_2	IF_3
0xdf0	        0x488b45f8	                mov rax, qword [rbp - 8]	       303	help.c	FUNCTION_16	CALL_4
0xdf4	          0x4889c6	                            mov rsi, rax	       303	help.c	FUNCTION_16	CALL_4
0xdf7	      0xbf00000000	                              mov edi, 0	       303	help.c	FUNCTION_16	CALL_4
0xdfc	      0xb800000000	                              mov eax, 0	       303	help.c	FUNCTION_16	CALL_4
0xe01	      0xe800000000	                          call 0x4000e46	       303	help.c	FUNCTION_16	CALL_4
0xe06	              0xc9	                                   leave	       304	help.c	FUNCTION_16
0xe07	              0xc3	                                     ret	       304	help.c	FUNCTION_16
