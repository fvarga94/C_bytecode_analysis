copy_array	IF,1:FOR,0:CALL,2:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0	23
0xa9	              0x55	                                push rbp	       852	git-compat-util.h	FUNCTION_22
0xaa	          0x4889e5	                            mov rbp, rsp	       852	git-compat-util.h	FUNCTION_22
0xad	        0x4883ec20	                           sub rsp, 0x20	       852	git-compat-util.h	FUNCTION_22
0xb1	        0x48897df8	                mov qword [rbp - 8], rdi	       852	git-compat-util.h	FUNCTION_22
0xb5	        0x488975f0	             mov qword [rbp - 0x10], rsi	       852	git-compat-util.h	FUNCTION_22
0xb9	        0x488955e8	             mov qword [rbp - 0x18], rdx	       852	git-compat-util.h	FUNCTION_22
0xbd	        0x48894de0	             mov qword [rbp - 0x20], rcx	       852	git-compat-util.h	FUNCTION_22
0xc1	      0x48837de800	               cmp qword [rbp - 0x18], 0	       853	git-compat-util.h	FUNCTION_22	IF_1
0xc6	            0x7429	                            je 0x4000131	       853	git-compat-util.h	FUNCTION_22	IF_1
0xc8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       854	git-compat-util.h	FUNCTION_22	CALL_2
0xcc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       854	git-compat-util.h	FUNCTION_22	CALL_2
0xd0	          0x4889d6	                            mov rsi, rdx	       854	git-compat-util.h	FUNCTION_22	CALL_2
0xd3	          0x4889c7	                            mov rdi, rax	       854	git-compat-util.h	FUNCTION_22	CALL_2
0xd6	      0xe87cffffff	                        call sym.st_mult	       854	git-compat-util.h	FUNCTION_22	CALL_2
0xdb	          0x4889c2	                            mov rdx, rax	       854	git-compat-util.h	FUNCTION_22	CALL_2
0xde	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       854	git-compat-util.h	FUNCTION_22	CALL_2
0xe2	        0x488b45f8	                mov rax, qword [rbp - 8]	       854	git-compat-util.h	FUNCTION_22	CALL_2
0xe6	          0x4889ce	                            mov rsi, rcx	       854	git-compat-util.h	FUNCTION_22	CALL_2
0xe9	          0x4889c7	                            mov rdi, rax	       854	git-compat-util.h	FUNCTION_22	CALL_2
0xec	      0xe800000000	                          call 0x4000131	       854	git-compat-util.h	FUNCTION_22	CALL_2
0xf1	              0x90	                                     nop	       855	git-compat-util.h	FUNCTION_22
0xf2	              0xc9	                                   leave	       855	git-compat-util.h	FUNCTION_22
0xf3	              0xc3	                                     ret	       855	git-compat-util.h	FUNCTION_22
strbuf_avail	IF,0:FOR,0:CALL,0:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0	18
0xf4	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_38
0xf5	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_38
0xf8	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_38
0xfc	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_38
0x100	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_38
0x103	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_38
0x106	            0x741b	                            je 0x4000163	       141	strbuf.h	FUNCTION_38
0x108	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_38
0x10c	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_38
0x10f	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_38
0x113	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_38
0x117	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_38
0x11a	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_38
0x11d	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_38
0x121	            0xeb05	                           jmp 0x4000168	       141	strbuf.h	FUNCTION_38
0x123	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_38
0x128	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_38
0x129	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_38
git_is_dir_sep	IF,0:FOR,0:CALL,0:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0	8
0x0	              0x55	                                push rbp	       363	git-compat-util.h	FUNCTION_8
0x1	          0x4889e5	                            mov rbp, rsp	       363	git-compat-util.h	FUNCTION_8
0x4	          0x897dfc	                mov dword [rbp - 4], edi	       363	git-compat-util.h	FUNCTION_8
0x7	        0x837dfc2f	               cmp dword [rbp - 4], 0x2f	       364	git-compat-util.h	FUNCTION_8
0xb	           0xf94c0	                                 sete al	       364	git-compat-util.h	FUNCTION_8
0xe	           0xfb6c0	                           movzx eax, al	       364	git-compat-util.h	FUNCTION_8
0x11	              0x5d	                                 pop rbp	       365	git-compat-util.h	FUNCTION_8
0x12	              0xc3	                                     ret	       365	git-compat-util.h	FUNCTION_8
strbuf_addch	IF,1:FOR,0:CALL,2:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0	33
0x1c4	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_40
0x1c5	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_40
0x1c8	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_40
0x1cc	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_40
0x1d0	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_40
0x1d3	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_40	IF_1	CALL_1
0x1d7	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_40	IF_1	CALL_1
0x1da	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_40	IF_1	CALL_1
0x1df	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_40	IF_1	CALL_1
0x1e2	            0x7511	                           jne 0x4000235	       227	strbuf.h	FUNCTION_40	IF_1	CALL_1
0x1e4	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_40	CALL_2
0x1e8	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_40	CALL_2
0x1ed	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_40	CALL_2
0x1f0	      0xe800000000	                          call 0x4000235	       228	strbuf.h	FUNCTION_40	CALL_2
0x1f5	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_40
0x1f9	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_40
0x1fd	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_40
0x201	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_40
0x205	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_40
0x209	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_40
0x20d	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_40
0x211	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_40
0x214	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_40
0x217	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_40
0x219	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_40
0x21d	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_40
0x221	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_40
0x225	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_40
0x229	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_40
0x22c	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_40
0x22f	              0x90	                                     nop	       231	strbuf.h	FUNCTION_40
0x230	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_40
0x231	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_40
strbuf_setlen	IF,2:FOR,0:CALL,2:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,1	43
0x12a	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_39
0x12b	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_39
0x12e	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_39
0x132	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_39
0x136	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_39
0x13a	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_39	IF_1
0x13e	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_39	IF_1
0x141	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_39	IF_1
0x144	            0x740d	                            je 0x4000193	       162	strbuf.h	FUNCTION_39	IF_1
0x146	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_39	IF_1
0x14a	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_39	IF_1
0x14d	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_39	IF_1
0x151	            0xeb05	                           jmp 0x4000198	       162	strbuf.h	FUNCTION_39	IF_1
0x153	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_39	IF_1
0x158	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_39	IF_1
0x15c	            0x730f	                           jae 0x40001ad	       162	strbuf.h	FUNCTION_39	IF_1
0x15e	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_39	CALL_1
0x163	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_39	CALL_1
0x168	      0xe800000000	                          call 0x40001ad	       163	strbuf.h	FUNCTION_39	CALL_1
0x16d	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_39
0x171	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_39
0x175	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_39
0x179	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_39	IF_2
0x17d	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_39	IF_2
0x181	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_39	IF_2
0x187	            0x7414	                            je 0x40001dd	       165	strbuf.h	FUNCTION_39	IF_2
0x189	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_39	IF_2
0x18d	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_39	IF_2
0x191	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_39	IF_2
0x195	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_39	IF_2
0x198	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_39	IF_2
0x19b	            0xeb24	                           jmp 0x4000201	       169	strbuf.h	FUNCTION_39
0x19d	     0xfb605000000	           movzx eax, byte [0x040001e4] 	       168	strbuf.h	FUNCTION_39	CALL_2
0x1a4	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_39	CALL_2
0x1a6	            0x7419	                            je 0x4000201	       168	strbuf.h	FUNCTION_39	CALL_2
0x1a8	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_39	CALL_2
0x1ad	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_39	CALL_2
0x1b2	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_39	CALL_2
0x1b7	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_39	CALL_2
0x1bc	      0xe800000000	                          call 0x4000201	       168	strbuf.h	FUNCTION_39	CALL_2
0x1c1	              0x90	                                     nop	       169	strbuf.h	FUNCTION_39
0x1c2	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_39
0x1c3	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_39
hashmap_entry_init	IF,0:FOR,0:CALL,0:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0	14
0x267	              0x55	                                push rbp	       246	hashmap.h	FUNCTION_49
0x268	          0x4889e5	                            mov rbp, rsp	       246	hashmap.h	FUNCTION_49
0x26b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       246	hashmap.h	FUNCTION_49
0x26f	          0x8975e4	             mov dword [rbp - 0x1c], esi	       246	hashmap.h	FUNCTION_49
0x272	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       247	hashmap.h	FUNCTION_49
0x276	        0x488945f8	                mov qword [rbp - 8], rax	       247	hashmap.h	FUNCTION_49
0x27a	        0x488b45f8	                mov rax, qword [rbp - 8]	       248	hashmap.h	FUNCTION_49
0x27e	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       248	hashmap.h	FUNCTION_49
0x281	          0x895008	                mov dword [rax + 8], edx	       248	hashmap.h	FUNCTION_49
0x284	        0x488b45f8	                mov rax, qword [rbp - 8]	       249	hashmap.h	FUNCTION_49
0x288	    0x48c700000000	                      mov qword [rax], 0	       249	hashmap.h	FUNCTION_49
0x28f	              0x90	                                     nop	       250	hashmap.h	FUNCTION_49
0x290	              0x5d	                                 pop rbp	       250	hashmap.h	FUNCTION_49
0x291	              0xc3	                                     ret	       250	hashmap.h	FUNCTION_49
hashmap_get_size	IF,1:FOR,0:CALL,1:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0	19
0x292	              0x55	                                push rbp	       256	hashmap.h	FUNCTION_50
0x293	          0x4889e5	                            mov rbp, rsp	       256	hashmap.h	FUNCTION_50
0x296	        0x4883ec10	                           sub rsp, 0x10	       256	hashmap.h	FUNCTION_50
0x29a	        0x48897df8	                mov qword [rbp - 8], rdi	       256	hashmap.h	FUNCTION_50
0x29e	        0x488b45f8	                mov rax, qword [rbp - 8]	       257	hashmap.h	FUNCTION_50	IF_1
0x2a2	         0xfb64028	           movzx eax, byte [rax + 0x28] 	       257	hashmap.h	FUNCTION_50	IF_1
0x2a6	          0x83e001	                              and eax, 1	       257	hashmap.h	FUNCTION_50	IF_1
0x2a9	            0x84c0	                             test al, al	       257	hashmap.h	FUNCTION_50	IF_1
0x2ab	            0x7409	                            je 0x40002f6	       257	hashmap.h	FUNCTION_50	IF_1
0x2ad	        0x488b45f8	                mov rax, qword [rbp - 8]	       258	hashmap.h	FUNCTION_50	IF_1
0x2b1	          0x8b4018	            mov eax, dword [rax + 0x18] 	       258	hashmap.h	FUNCTION_50	IF_1
0x2b4	            0xeb19	                           jmp 0x400030f	       258	hashmap.h	FUNCTION_50	IF_1
0x2b6	      0xba00000000	                              mov edx, 0	       260	hashmap.h	FUNCTION_50	CALL_1
0x2bb	      0xbe04010000	                          mov esi, 0x104	       260	hashmap.h	FUNCTION_50	CALL_1
0x2c0	      0xbf00000000	                              mov edi, 0	       260	hashmap.h	FUNCTION_50	CALL_1
0x2c5	      0xb800000000	                              mov eax, 0	       260	hashmap.h	FUNCTION_50	CALL_1
0x2ca	      0xe800000000	                          call 0x400030f	       260	hashmap.h	FUNCTION_50	CALL_1
0x2cf	              0xc9	                                   leave	       262	hashmap.h	FUNCTION_50
0x2d0	              0xc3	                                     ret	       262	hashmap.h	FUNCTION_50
_	IF,1:FOR,0:CALL,2:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0	15
0x2d1	              0x55	                                push rbp	        51	gettext.h	FUNCTION_35
0x2d2	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_35
0x2d5	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_35
0x2d9	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_35
0x2dd	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_35	IF_1
0x2e1	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_35	IF_1
0x2e4	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_35	IF_1
0x2e6	            0x7507	                           jne 0x400032f	        52	gettext.h	FUNCTION_35	IF_1
0x2e8	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_35	IF_1
0x2ed	            0xeb0c	                           jmp 0x400033b	        53	gettext.h	FUNCTION_35	IF_1
0x2ef	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_35	CALL_2
0x2f3	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_35	CALL_2
0x2f6	      0xe800000000	                          call 0x400033b	        54	gettext.h	FUNCTION_35	CALL_2
0x2fb	              0xc9	                                   leave	        55	gettext.h	FUNCTION_35
0x2fc	              0xc3	                                     ret	        55	gettext.h	FUNCTION_35
st_mult	IF,1:FOR,0:CALL,2:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0	22
0x57	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_20
0x58	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_20
0x5b	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_20
0x5f	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_20
0x63	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_20
0x67	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_20	IF_1	CALL_1
0x6c	            0x7430	                            je 0x40000de	       795	git-compat-util.h	FUNCTION_20	IF_1	CALL_1
0x6e	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_20	IF_1	CALL_1
0x75	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_20	IF_1	CALL_1
0x7a	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_20	IF_1	CALL_1
0x7e	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_20	IF_1	CALL_1
0x82	            0x731a	                           jae 0x40000de	       795	git-compat-util.h	FUNCTION_20	IF_1	CALL_1
0x84	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_20	IF_1	CALL_2
0x88	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_20	IF_1	CALL_2
0x8c	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_20	IF_1	CALL_2
0x8f	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_20	IF_1	CALL_2
0x94	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_20	IF_1	CALL_2
0x99	      0xe800000000	                          call 0x40000de	       796	git-compat-util.h	FUNCTION_20	IF_1	CALL_2
0x9e	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_20
0xa2	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_20
0xa7	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_20
0xa8	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_20
st_add	IF,1:FOR,0:CALL,2:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0	20
0x13	              0x55	                                push rbp	       784	git-compat-util.h	FUNCTION_19
0x14	          0x4889e5	                            mov rbp, rsp	       784	git-compat-util.h	FUNCTION_19
0x17	        0x4883ec10	                           sub rsp, 0x10	       784	git-compat-util.h	FUNCTION_19
0x1b	        0x48897df8	                mov qword [rbp - 8], rdi	       784	git-compat-util.h	FUNCTION_19
0x1f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       784	git-compat-util.h	FUNCTION_19
0x23	        0x488b45f8	                mov rax, qword [rbp - 8]	       785	git-compat-util.h	FUNCTION_19	IF_1	CALL_1
0x27	          0x48f7d0	                                 not rax	       785	git-compat-util.h	FUNCTION_19	IF_1	CALL_1
0x2a	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       785	git-compat-util.h	FUNCTION_19	IF_1	CALL_1
0x2e	            0x731a	                           jae 0x400008a	       785	git-compat-util.h	FUNCTION_19	IF_1	CALL_1
0x30	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       786	git-compat-util.h	FUNCTION_19	IF_1	CALL_2
0x34	        0x488b45f8	                mov rax, qword [rbp - 8]	       786	git-compat-util.h	FUNCTION_19	IF_1	CALL_2
0x38	          0x4889c6	                            mov rsi, rax	       786	git-compat-util.h	FUNCTION_19	IF_1	CALL_2
0x3b	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_19	IF_1	CALL_2
0x40	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_19	IF_1	CALL_2
0x45	      0xe800000000	                          call 0x400008a	       786	git-compat-util.h	FUNCTION_19	IF_1	CALL_2
0x4a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       788	git-compat-util.h	FUNCTION_19
0x4e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       788	git-compat-util.h	FUNCTION_19
0x52	          0x4801d0	                            add rax, rdx	       788	git-compat-util.h	FUNCTION_19
0x55	              0xc9	                                   leave	       789	git-compat-util.h	FUNCTION_19
0x56	              0xc3	                                     ret	       789	git-compat-util.h	FUNCTION_19
strbuf_addstr	IF,0:FOR,0:CALL,2:DO,0:SWITCH,0:WHILE,0:functions,0:ELSE,0	17
0x232	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_41
0x233	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_41
0x236	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_41
0x23a	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_41
0x23e	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_41
0x242	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_41	CALL_2
0x246	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_41	CALL_2
0x249	      0xe800000000	                          call 0x400028e	       279	strbuf.h	FUNCTION_41	CALL_2
0x24e	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_41	CALL_2
0x251	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_41	CALL_2
0x255	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_41	CALL_2
0x259	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_41	CALL_2
0x25c	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_41	CALL_2
0x25f	      0xe800000000	                          call 0x40002a4	       279	strbuf.h	FUNCTION_41	CALL_2
0x264	              0x90	                                     nop	       280	strbuf.h	FUNCTION_41
0x265	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_41
0x266	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_41
