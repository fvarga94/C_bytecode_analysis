patch_delta	CALL,9:ELSE,2:SWITCH,0:functions,0:FOR,0:DO,0:IF,15:WHILE,1	221
0x8d	              0x55	                                push rbp	        18	patch-delta.c	FUNCTION_1
0x8e	          0x4889e5	                            mov rbp, rsp	        18	patch-delta.c	FUNCTION_1
0x91	        0x4883c480	             add rsp, 0xffffffffffffff80	        18	patch-delta.c	FUNCTION_1
0x95	        0x48897da8	             mov qword [rbp - 0x58], rdi	        18	patch-delta.c	FUNCTION_1
0x99	        0x488975a0	             mov qword [rbp - 0x60], rsi	        18	patch-delta.c	FUNCTION_1
0x9d	        0x48895598	             mov qword [rbp - 0x68], rdx	        18	patch-delta.c	FUNCTION_1
0xa1	        0x48894d90	             mov qword [rbp - 0x70], rcx	        18	patch-delta.c	FUNCTION_1
0xa5	        0x4c894588	              mov qword [rbp - 0x78], r8	        18	patch-delta.c	FUNCTION_1
0xa9	    0x64488b042528	                mov rax, qword fs:[0x28]	        18	patch-delta.c	FUNCTION_1
0xb2	        0x488945f8	                mov qword [rbp - 8], rax	        18	patch-delta.c	FUNCTION_1
0xb6	            0x31c0	                            xor eax, eax	        18	patch-delta.c	FUNCTION_1
0xb8	      0x48837d9003	               cmp qword [rbp - 0x70], 3	        23	patch-delta.c	FUNCTION_1	IF_1
0xbd	            0x770a	                            ja 0x4000109	        23	patch-delta.c	FUNCTION_1	IF_1
0xbf	      0xb800000000	                              mov eax, 0	        24	patch-delta.c	FUNCTION_1	IF_1
0xc4	      0xe9db020000	                           jmp 0x40003e4	        24	patch-delta.c	FUNCTION_1	IF_1
0xc9	        0x488b4598	             mov rax, qword [rbp - 0x68]	        26	patch-delta.c	FUNCTION_1
0xcd	        0x488945c0	             mov qword [rbp - 0x40], rax	        26	patch-delta.c	FUNCTION_1
0xd1	        0x488b5598	             mov rdx, qword [rbp - 0x68]	        27	patch-delta.c	FUNCTION_1
0xd5	        0x488b4590	             mov rax, qword [rbp - 0x70]	        27	patch-delta.c	FUNCTION_1
0xd9	          0x4801d0	                            add rax, rdx	        27	patch-delta.c	FUNCTION_1
0xdc	        0x488945e8	             mov qword [rbp - 0x18], rax	        27	patch-delta.c	FUNCTION_1
0xe0	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        30	patch-delta.c	FUNCTION_1	CALL_1
0xe4	        0x488d45c0	                   lea rax, [rbp - 0x40]	        30	patch-delta.c	FUNCTION_1	CALL_1
0xe8	          0x4889d6	                            mov rsi, rdx	        30	patch-delta.c	FUNCTION_1	CALL_1
0xeb	          0x4889c7	                            mov rdi, rax	        30	patch-delta.c	FUNCTION_1	CALL_1
0xee	      0xe818ffffff	             call sym.get_delta_hdr_size	        30	patch-delta.c	FUNCTION_1	CALL_1
0xf3	        0x488945d0	             mov qword [rbp - 0x30], rax	        30	patch-delta.c	FUNCTION_1	CALL_1
0xf7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        31	patch-delta.c	FUNCTION_1	IF_2
0xfb	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	        31	patch-delta.c	FUNCTION_1	IF_2
0xff	            0x740a	                            je 0x400014b	        31	patch-delta.c	FUNCTION_1	IF_2
0x101	      0xb800000000	                              mov eax, 0	        32	patch-delta.c	FUNCTION_1	IF_2
0x106	      0xe999020000	                           jmp 0x40003e4	        32	patch-delta.c	FUNCTION_1	IF_2
0x10b	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        35	patch-delta.c	FUNCTION_1	CALL_2
0x10f	        0x488d45c0	                   lea rax, [rbp - 0x40]	        35	patch-delta.c	FUNCTION_1	CALL_2
0x113	          0x4889d6	                            mov rsi, rdx	        35	patch-delta.c	FUNCTION_1	CALL_2
0x116	          0x4889c7	                            mov rdi, rax	        35	patch-delta.c	FUNCTION_1	CALL_2
0x119	      0xe8edfeffff	             call sym.get_delta_hdr_size	        35	patch-delta.c	FUNCTION_1	CALL_2
0x11e	        0x488945d0	             mov qword [rbp - 0x30], rax	        35	patch-delta.c	FUNCTION_1	CALL_2
0x122	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        36	patch-delta.c	FUNCTION_1	CALL_3
0x126	          0x4889c7	                            mov rdi, rax	        36	patch-delta.c	FUNCTION_1	CALL_3
0x129	      0xe800000000	                          call 0x400016e	        36	patch-delta.c	FUNCTION_1	CALL_3
0x12e	        0x488945f0	             mov qword [rbp - 0x10], rax	        36	patch-delta.c	FUNCTION_1	CALL_3
0x132	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        38	patch-delta.c	FUNCTION_1
0x136	        0x488945c8	             mov qword [rbp - 0x38], rax	        38	patch-delta.c	FUNCTION_1
0x13a	      0xe900020000	                           jmp 0x400037f	        39	patch-delta.c	FUNCTION_1	WHILE_1
0x13f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        40	patch-delta.c	FUNCTION_1	WHILE_1
0x143	        0x488d5001	                      lea rdx, [rax + 1]	        40	patch-delta.c	FUNCTION_1	WHILE_1
0x147	        0x488955c0	             mov qword [rbp - 0x40], rdx	        40	patch-delta.c	FUNCTION_1	WHILE_1
0x14b	           0xfb600	                   movzx eax, byte [rax]	        40	patch-delta.c	FUNCTION_1	WHILE_1
0x14e	          0x8845bf	               mov byte [rbp - 0x41], al	        40	patch-delta.c	FUNCTION_1	WHILE_1
0x151	         0xfb645bf	            movzx eax, byte [rbp - 0x41]	        41	patch-delta.c	FUNCTION_1	WHILE_1	IF_3
0x155	            0x84c0	                             test al, al	        41	patch-delta.c	FUNCTION_1	WHILE_1	IF_3
0x157	     0xf8984010000	                           jns 0x4000321	        41	patch-delta.c	FUNCTION_1	WHILE_1	IF_3
0x15d	    0x48c745d80000	               mov qword [rbp - 0x28], 0	        42	patch-delta.c	FUNCTION_1	WHILE_1	IF_3
0x165	    0x48c745e00000	               mov qword [rbp - 0x20], 0	        42	patch-delta.c	FUNCTION_1	WHILE_1	IF_3
0x16d	         0xfb645bf	            movzx eax, byte [rbp - 0x41]	        43	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_4
0x171	          0x83e001	                              and eax, 1	        43	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_4
0x174	            0x85c0	                           test eax, eax	        43	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_4
0x176	            0x7416	                            je 0x40001ce	        43	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_4
0x178	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        43	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_4
0x17c	        0x488d5001	                      lea rdx, [rax + 1]	        43	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_4
0x180	        0x488955c0	             mov qword [rbp - 0x40], rdx	        43	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_4
0x184	           0xfb600	                   movzx eax, byte [rax]	        43	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_4
0x187	           0xfb6c0	                           movzx eax, al	        43	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_4
0x18a	        0x488945d8	             mov qword [rbp - 0x28], rax	        43	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_4
0x18e	         0xfb645bf	            movzx eax, byte [rbp - 0x41]	        44	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_5
0x192	          0x83e002	                              and eax, 2	        44	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_5
0x195	            0x85c0	                           test eax, eax	        44	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_5
0x197	            0x741b	                            je 0x40001f4	        44	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_5
0x199	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        44	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_5
0x19d	        0x488d5001	                      lea rdx, [rax + 1]	        44	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_5
0x1a1	        0x488955c0	             mov qword [rbp - 0x40], rdx	        44	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_5
0x1a5	           0xfb600	                   movzx eax, byte [rax]	        44	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_5
0x1a8	           0xfb6c0	                           movzx eax, al	        44	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_5
0x1ab	          0xc1e008	                              shl eax, 8	        44	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_5
0x1ae	            0x4898	                                    cdqe	        44	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_5
0x1b0	        0x480945d8	              or qword [rbp - 0x28], rax	        44	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_5
0x1b4	         0xfb645bf	            movzx eax, byte [rbp - 0x41]	        45	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_6
0x1b8	          0x83e004	                              and eax, 4	        45	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_6
0x1bb	            0x85c0	                           test eax, eax	        45	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_6
0x1bd	            0x741b	                            je 0x400021a	        45	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_6
0x1bf	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        45	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_6
0x1c3	        0x488d5001	                      lea rdx, [rax + 1]	        45	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_6
0x1c7	        0x488955c0	             mov qword [rbp - 0x40], rdx	        45	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_6
0x1cb	           0xfb600	                   movzx eax, byte [rax]	        45	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_6
0x1ce	           0xfb6c0	                           movzx eax, al	        45	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_6
0x1d1	          0xc1e010	                           shl eax, 0x10	        45	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_6
0x1d4	            0x4898	                                    cdqe	        45	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_6
0x1d6	        0x480945d8	              or qword [rbp - 0x28], rax	        45	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_6
0x1da	         0xfb645bf	            movzx eax, byte [rbp - 0x41]	        46	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_7
0x1de	          0x83e008	                              and eax, 8	        46	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_7
0x1e1	            0x85c0	                           test eax, eax	        46	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_7
0x1e3	            0x741b	                            je 0x4000240	        46	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_7
0x1e5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        46	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_7
0x1e9	        0x488d5001	                      lea rdx, [rax + 1]	        46	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_7
0x1ed	        0x488955c0	             mov qword [rbp - 0x40], rdx	        46	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_7
0x1f1	           0xfb600	                   movzx eax, byte [rax]	        46	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_7
0x1f4	           0xfb6c0	                           movzx eax, al	        46	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_7
0x1f7	          0xc1e018	                           shl eax, 0x18	        46	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_7
0x1fa	            0x89c0	                            mov eax, eax	        46	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_7
0x1fc	        0x480945d8	              or qword [rbp - 0x28], rax	        46	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_7
0x200	         0xfb645bf	            movzx eax, byte [rbp - 0x41]	        47	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_8
0x204	          0x83e010	                           and eax, 0x10	        47	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_8
0x207	            0x85c0	                           test eax, eax	        47	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_8
0x209	            0x7416	                            je 0x4000261	        47	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_8
0x20b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        47	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_8
0x20f	        0x488d5001	                      lea rdx, [rax + 1]	        47	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_8
0x213	        0x488955c0	             mov qword [rbp - 0x40], rdx	        47	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_8
0x217	           0xfb600	                   movzx eax, byte [rax]	        47	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_8
0x21a	           0xfb6c0	                           movzx eax, al	        47	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_8
0x21d	        0x488945e0	             mov qword [rbp - 0x20], rax	        47	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_8
0x221	         0xfb645bf	            movzx eax, byte [rbp - 0x41]	        48	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_9
0x225	          0x83e020	                           and eax, 0x20	        48	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_9
0x228	            0x85c0	                           test eax, eax	        48	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_9
0x22a	            0x741b	                            je 0x4000287	        48	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_9
0x22c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        48	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_9
0x230	        0x488d5001	                      lea rdx, [rax + 1]	        48	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_9
0x234	        0x488955c0	             mov qword [rbp - 0x40], rdx	        48	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_9
0x238	           0xfb600	                   movzx eax, byte [rax]	        48	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_9
0x23b	           0xfb6c0	                           movzx eax, al	        48	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_9
0x23e	          0xc1e008	                              shl eax, 8	        48	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_9
0x241	            0x4898	                                    cdqe	        48	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_9
0x243	        0x480945e0	              or qword [rbp - 0x20], rax	        48	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_9
0x247	         0xfb645bf	            movzx eax, byte [rbp - 0x41]	        49	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_10
0x24b	          0x83e040	                           and eax, 0x40	        49	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_10
0x24e	            0x85c0	                           test eax, eax	        49	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_10
0x250	            0x741b	                            je 0x40002ad	        49	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_10
0x252	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        49	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_10
0x256	        0x488d5001	                      lea rdx, [rax + 1]	        49	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_10
0x25a	        0x488955c0	             mov qword [rbp - 0x40], rdx	        49	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_10
0x25e	           0xfb600	                   movzx eax, byte [rax]	        49	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_10
0x261	           0xfb6c0	                           movzx eax, al	        49	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_10
0x264	          0xc1e010	                           shl eax, 0x10	        49	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_10
0x267	            0x4898	                                    cdqe	        49	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_10
0x269	        0x480945e0	              or qword [rbp - 0x20], rax	        49	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_10
0x26d	      0x48837de000	               cmp qword [rbp - 0x20], 0	        50	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_11
0x272	            0x7508	                           jne 0x40002bc	        50	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_11
0x274	    0x48c745e00000	         mov qword [rbp - 0x20], 0x10000	        50	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_11
0x27c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        51	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_12	CALL_4
0x280	          0x48f7d0	                                 not rax	        51	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_12	CALL_4
0x283	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	        51	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_12	CALL_4
0x287	     0xf82c3000000	                            jb 0x4000390	        51	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_12	CALL_4
0x28d	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	        52	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_12
0x291	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        52	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_12
0x295	          0x4801d0	                            add rax, rdx	        52	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_12
0x298	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	        51	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_12	CALL_4
0x29c	     0xf87ae000000	                            ja 0x4000390	        51	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_12	CALL_4
0x2a2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        52	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_12
0x2a6	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	        52	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_12
0x2aa	     0xf87a0000000	                            ja 0x4000390	        52	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	IF_12
0x2b0	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	        55	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	CALL_5
0x2b4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        55	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	CALL_5
0x2b8	        0x488d0c02	                    lea rcx, [rdx + rax]	        55	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	CALL_5
0x2bc	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        55	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	CALL_5
0x2c0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        55	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	CALL_5
0x2c4	          0x4889ce	                            mov rsi, rcx	        55	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	CALL_5
0x2c7	          0x4889c7	                            mov rdi, rax	        55	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	CALL_5
0x2ca	      0xe800000000	                          call 0x400030f	        55	patch-delta.c	FUNCTION_1	WHILE_1	IF_3	CALL_5
0x2cf	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        56	patch-delta.c	FUNCTION_1	WHILE_1	IF_3
0x2d3	        0x480145c8	            add qword [rbp - 0x38], rax 	        56	patch-delta.c	FUNCTION_1	WHILE_1	IF_3
0x2d7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        57	patch-delta.c	FUNCTION_1	WHILE_1	IF_3
0x2db	        0x482945d0	             sub qword [rbp - 0x30], rax	        57	patch-delta.c	FUNCTION_1	WHILE_1	IF_3
0x2df	            0xeb5e	                           jmp 0x400037f	        57	patch-delta.c	FUNCTION_1	WHILE_1	IF_3
0x2e1	        0x807dbf00	                cmp byte [rbp - 0x41], 0	        58	patch-delta.c	FUNCTION_1	WHILE_1	ELSE_1	IF_13
0x2e5	            0x7442	                            je 0x4000369	        58	patch-delta.c	FUNCTION_1	WHILE_1	ELSE_1	IF_13
0x2e7	         0xfb645bf	            movzx eax, byte [rbp - 0x41]	        59	patch-delta.c	FUNCTION_1	WHILE_1	ELSE_1	IF_13	IF_14
0x2eb	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	        59	patch-delta.c	FUNCTION_1	WHILE_1	ELSE_1	IF_13	IF_14
0x2ef	            0x775e	                            ja 0x400038f	        59	patch-delta.c	FUNCTION_1	WHILE_1	ELSE_1	IF_13	IF_14
0x2f1	         0xfb655bf	            movzx edx, byte [rbp - 0x41]	        61	patch-delta.c	FUNCTION_1	WHILE_1	ELSE_1	IF_13	CALL_6
0x2f5	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	        61	patch-delta.c	FUNCTION_1	WHILE_1	ELSE_1	IF_13	CALL_6
0x2f9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        61	patch-delta.c	FUNCTION_1	WHILE_1	ELSE_1	IF_13	CALL_6
0x2fd	          0x4889ce	                            mov rsi, rcx	        61	patch-delta.c	FUNCTION_1	WHILE_1	ELSE_1	IF_13	CALL_6
0x300	          0x4889c7	                            mov rdi, rax	        61	patch-delta.c	FUNCTION_1	WHILE_1	ELSE_1	IF_13	CALL_6
0x303	      0xe800000000	                          call 0x4000348	        61	patch-delta.c	FUNCTION_1	WHILE_1	ELSE_1	IF_13	CALL_6
0x308	         0xfb645bf	            movzx eax, byte [rbp - 0x41]	        62	patch-delta.c	FUNCTION_1	WHILE_1	ELSE_1	IF_13
0x30c	        0x480145c8	            add qword [rbp - 0x38], rax 	        62	patch-delta.c	FUNCTION_1	WHILE_1	ELSE_1	IF_13
0x310	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	        63	patch-delta.c	FUNCTION_1	WHILE_1	ELSE_1	IF_13
0x314	         0xfb645bf	            movzx eax, byte [rbp - 0x41]	        63	patch-delta.c	FUNCTION_1	WHILE_1	ELSE_1	IF_13
0x318	          0x4801d0	                            add rax, rdx	        63	patch-delta.c	FUNCTION_1	WHILE_1	ELSE_1	IF_13
0x31b	        0x488945c0	             mov qword [rbp - 0x40], rax	        63	patch-delta.c	FUNCTION_1	WHILE_1	ELSE_1	IF_13
0x31f	         0xfb645bf	            movzx eax, byte [rbp - 0x41]	        64	patch-delta.c	FUNCTION_1	WHILE_1	ELSE_1	IF_13
0x323	        0x482945d0	             sub qword [rbp - 0x30], rax	        64	patch-delta.c	FUNCTION_1	WHILE_1	ELSE_1	IF_13
0x327	            0xeb16	                           jmp 0x400037f	        64	patch-delta.c	FUNCTION_1	WHILE_1	ELSE_1	IF_13
0x329	      0xbf00000000	                              mov edi, 0	        71	patch-delta.c	FUNCTION_1	WHILE_1	ELSE_2	CALL_7
0x32e	      0xb800000000	                              mov eax, 0	        71	patch-delta.c	FUNCTION_1	WHILE_1	ELSE_2	CALL_7
0x333	      0xe800000000	                          call 0x4000378	        71	patch-delta.c	FUNCTION_1	WHILE_1	ELSE_2	CALL_7
0x338	      0xe8c3fcffff	                    call sym.const_error	        71	patch-delta.c	FUNCTION_1	WHILE_1	ELSE_2	CALL_7
0x33d	            0xeb36	                           jmp 0x40003b5	        72	patch-delta.c	FUNCTION_1	WHILE_1	ELSE_2
0x33f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        39	patch-delta.c	FUNCTION_1	WHILE_1
0x343	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	        39	patch-delta.c	FUNCTION_1	WHILE_1
0x347	     0xf82f2fdffff	                            jb 0x400017f	        39	patch-delta.c	FUNCTION_1	WHILE_1
0x34d	            0xeb01	                           jmp 0x4000390	        39	patch-delta.c	FUNCTION_1	WHILE_1
0x34f	              0x90	                                     nop	        60	patch-delta.c	FUNCTION_1	WHILE_1	ELSE_1	IF_13	IF_14
0x350	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        77	patch-delta.c	FUNCTION_1	IF_15
0x354	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	        77	patch-delta.c	FUNCTION_1	IF_15
0x358	            0x7507	                           jne 0x40003a1	        77	patch-delta.c	FUNCTION_1	IF_15
0x35a	      0x48837dd000	               cmp qword [rbp - 0x30], 0	        77	patch-delta.c	FUNCTION_1	IF_15
0x35f	            0x7427	                            je 0x40003c8	        77	patch-delta.c	FUNCTION_1	IF_15
0x361	      0xbf00000000	                              mov edi, 0	        78	patch-delta.c	FUNCTION_1	IF_15	CALL_8
0x366	      0xb800000000	                              mov eax, 0	        78	patch-delta.c	FUNCTION_1	IF_15	CALL_8
0x36b	      0xe800000000	                          call 0x40003b0	        78	patch-delta.c	FUNCTION_1	IF_15	CALL_8
0x370	      0xe88bfcffff	                    call sym.const_error	        78	patch-delta.c	FUNCTION_1	IF_15	CALL_8
0x375	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        80	patch-delta.c	FUNCTION_1	IF_15	CALL_9
0x379	          0x4889c7	                            mov rdi, rax	        80	patch-delta.c	FUNCTION_1	IF_15	CALL_9
0x37c	      0xe800000000	                          call 0x40003c1	        80	patch-delta.c	FUNCTION_1	IF_15	CALL_9
0x381	      0xb800000000	                              mov eax, 0	        81	patch-delta.c	FUNCTION_1	IF_15
0x386	            0xeb1c	                           jmp 0x40003e4	        81	patch-delta.c	FUNCTION_1	IF_15
0x388	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	        84	patch-delta.c	FUNCTION_1
0x38c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        84	patch-delta.c	FUNCTION_1
0x390	          0x4829c2	                            sub rdx, rax	        84	patch-delta.c	FUNCTION_1
0x393	          0x4889d0	                            mov rax, rdx	        84	patch-delta.c	FUNCTION_1
0x396	          0x4889c2	                            mov rdx, rax	        84	patch-delta.c	FUNCTION_1
0x399	        0x488b4588	             mov rax, qword [rbp - 0x78]	        84	patch-delta.c	FUNCTION_1
0x39d	          0x488910	                    mov qword [rax], rdx	        84	patch-delta.c	FUNCTION_1
0x3a0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        85	patch-delta.c	FUNCTION_1
0x3a4	        0x488b4df8	                mov rcx, qword [rbp - 8]	        86	patch-delta.c	FUNCTION_1
0x3a8	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        86	patch-delta.c	FUNCTION_1
0x3b1	            0x7405	                            je 0x40003f8	        86	patch-delta.c	FUNCTION_1
0x3b3	      0xe800000000	                          call 0x40003f8	        86	patch-delta.c	FUNCTION_1
0x3b8	              0xc9	                                   leave	        86	patch-delta.c	FUNCTION_1
0x3b9	              0xc3	                                     ret	        86	patch-delta.c	FUNCTION_1
const_error	CALL,0:ELSE,0:SWITCH,0:functions,0:FOR,0:DO,0:IF,0:WHILE,0	5
0x0	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_9
0x1	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_9
0x4	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_9
0x9	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_9
0xa	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_9
get_delta_hdr_size	CALL,0:ELSE,0:SWITCH,0:functions,0:FOR,0:DO,1:IF,0:WHILE,0	37
0xb	              0x55	                                push rbp	        91	delta.h	FUNCTION_3
0xc	          0x4889e5	                            mov rbp, rsp	        91	delta.h	FUNCTION_3
0xf	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        91	delta.h	FUNCTION_3
0x13	        0x488975d0	             mov qword [rbp - 0x30], rsi	        91	delta.h	FUNCTION_3
0x17	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        92	delta.h	FUNCTION_3
0x1b	          0x488b00	                    mov rax, qword [rax]	        92	delta.h	FUNCTION_3
0x1e	        0x488945e8	             mov qword [rbp - 0x18], rax	        92	delta.h	FUNCTION_3
0x22	    0x48c745f00000	               mov qword [rbp - 0x10], 0	        93	delta.h	FUNCTION_3
0x2a	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	        94	delta.h	FUNCTION_3
0x31	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        96	delta.h	FUNCTION_3	DO_1
0x35	        0x488d5001	                      lea rdx, [rax + 1]	        96	delta.h	FUNCTION_3	DO_1
0x39	        0x488955e8	             mov qword [rbp - 0x18], rdx	        96	delta.h	FUNCTION_3	DO_1
0x3d	           0xfb600	                   movzx eax, byte [rax]	        96	delta.h	FUNCTION_3	DO_1
0x40	           0xfb6c0	                           movzx eax, al	        96	delta.h	FUNCTION_3	DO_1
0x43	        0x488945f8	                mov qword [rbp - 8], rax	        96	delta.h	FUNCTION_3	DO_1
0x47	        0x488b45f8	                mov rax, qword [rbp - 8]	        97	delta.h	FUNCTION_3	DO_1
0x4b	          0x83e07f	                           and eax, 0x7f	        97	delta.h	FUNCTION_3	DO_1
0x4e	          0x4889c2	                            mov rdx, rax	        97	delta.h	FUNCTION_3	DO_1
0x51	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        97	delta.h	FUNCTION_3	DO_1
0x54	            0x89c1	                            mov ecx, eax	        97	delta.h	FUNCTION_3	DO_1
0x56	          0x48d3e2	                             shl rdx, cl	        97	delta.h	FUNCTION_3	DO_1
0x59	          0x4889d0	                            mov rax, rdx	        97	delta.h	FUNCTION_3	DO_1
0x5c	        0x480945f0	              or qword [rbp - 0x10], rax	        97	delta.h	FUNCTION_3	DO_1
0x60	        0x8345e407	               add dword [rbp - 0x1c], 7	        98	delta.h	FUNCTION_3	DO_1
0x64	        0x488b45f8	                mov rax, qword [rbp - 8]	        99	delta.h	FUNCTION_3	DO_1
0x68	      0x2580000000	                           and eax, 0x80	        99	delta.h	FUNCTION_3	DO_1
0x6d	          0x4885c0	                           test rax, rax	        99	delta.h	FUNCTION_3	DO_1
0x70	            0x740a	                            je 0x40000bc	        99	delta.h	FUNCTION_3	DO_1
0x72	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        99	delta.h	FUNCTION_3	DO_1
0x76	        0x483b45d0	             cmp rax, qword [rbp - 0x30]	        99	delta.h	FUNCTION_3	DO_1
0x7a	            0x72b5	                            jb 0x4000071	        99	delta.h	FUNCTION_3	DO_1
0x7c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       100	delta.h	FUNCTION_3
0x80	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       100	delta.h	FUNCTION_3
0x84	          0x488910	                    mov qword [rax], rdx	       100	delta.h	FUNCTION_3
0x87	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       101	delta.h	FUNCTION_3
0x8b	              0x5d	                                 pop rbp	       102	delta.h	FUNCTION_3
0x8c	              0xc3	                                     ret	       102	delta.h	FUNCTION_3
