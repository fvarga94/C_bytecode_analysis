die_conclude_merge	CALL,6:SWITCH,0:DO,0:WHILE,0:IF,1:FOR,0:ELSE,0:functions,0	21
0x61f	              0x55	                                push rbp	       167	advice.c	FUNCTION_7
0x620	          0x4889e5	                            mov rbp, rsp	       167	advice.c	FUNCTION_7
0x623	      0xbf00000000	                              mov edi, 0	       168	advice.c	FUNCTION_7	CALL_2
0x628	      0xe834faffff	                               call sym.	       168	advice.c	FUNCTION_7	CALL_2
0x62d	          0x4889c7	                            mov rdi, rax	       168	advice.c	FUNCTION_7	CALL_2
0x630	      0xb800000000	                              mov eax, 0	       168	advice.c	FUNCTION_7	CALL_2
0x635	      0xe800000000	                          call 0x400067a	       168	advice.c	FUNCTION_7	CALL_2
0x63a	      0xe8c1f9ffff	                    call sym.const_error	       168	advice.c	FUNCTION_7	CALL_2
0x63f	    0x8b0500000000	            mov eax, dword [0x04000685] 	       169	advice.c	FUNCTION_7	IF_1
0x645	            0x85c0	                           test eax, eax	       169	advice.c	FUNCTION_7	IF_1
0x647	            0x7417	                            je 0x40006a0	       169	advice.c	FUNCTION_7	IF_1
0x649	      0xbf00000000	                              mov edi, 0	       170	advice.c	FUNCTION_7	CALL_4
0x64e	      0xe80efaffff	                               call sym.	       170	advice.c	FUNCTION_7	CALL_4
0x653	          0x4889c7	                            mov rdi, rax	       170	advice.c	FUNCTION_7	CALL_4
0x656	      0xb800000000	                              mov eax, 0	       170	advice.c	FUNCTION_7	CALL_4
0x65b	      0xe800000000	                          call 0x40006a0	       170	advice.c	FUNCTION_7	CALL_4
0x660	      0xbf00000000	                              mov edi, 0	       171	advice.c	FUNCTION_7	CALL_6
0x665	      0xe8f7f9ffff	                               call sym.	       171	advice.c	FUNCTION_7	CALL_6
0x66a	          0x4889c7	                            mov rdi, rax	       171	advice.c	FUNCTION_7	CALL_6
0x66d	      0xb800000000	                              mov eax, 0	       171	advice.c	FUNCTION_7	CALL_6
0x672	      0xe800000000	                  call sym.detach_advice	       171	advice.c	FUNCTION_7	CALL_6
advise_get_color	CALL,1:SWITCH,0:DO,0:WHILE,0:IF,1:FOR,0:ELSE,0:functions,0	22
0xd8	              0x55	                                push rbp	        46	advice.c	FUNCTION_2
0xd9	          0x4889e5	                            mov rbp, rsp	        46	advice.c	FUNCTION_2
0xdc	        0x4883ec10	                           sub rsp, 0x10	        46	advice.c	FUNCTION_2
0xe0	          0x897dfc	                mov dword [rbp - 4], edi	        46	advice.c	FUNCTION_2
0xe3	    0x8b0500000000	            mov eax, dword [0x04000129] 	        47	advice.c	FUNCTION_2	IF_1	CALL_1
0xe9	            0x89c6	                            mov esi, eax	        47	advice.c	FUNCTION_2	IF_1	CALL_1
0xeb	      0xbf02000000	                              mov edi, 2	        47	advice.c	FUNCTION_2	IF_1	CALL_1
0xf0	      0xe800000000	                          call 0x4000135	        47	advice.c	FUNCTION_2	IF_1	CALL_1
0xf5	            0x85c0	                           test eax, eax	        47	advice.c	FUNCTION_2	IF_1	CALL_1
0xf7	            0x7420	                            je 0x4000159	        47	advice.c	FUNCTION_2	IF_1	CALL_1
0xf9	          0x8b55fc	                mov edx, dword [rbp - 4]	        48	advice.c	FUNCTION_2	IF_1
0xfc	          0x4889d0	                            mov rax, rdx	        48	advice.c	FUNCTION_2	IF_1
0xff	        0x48c1e002	                              shl rax, 2	        48	advice.c	FUNCTION_2	IF_1
0x103	          0x4801d0	                            add rax, rdx	        48	advice.c	FUNCTION_2	IF_1
0x106	          0x4889c2	                            mov rdx, rax	        48	advice.c	FUNCTION_2	IF_1
0x109	        0x48c1e204	                              shl rdx, 4	        48	advice.c	FUNCTION_2	IF_1
0x10d	          0x4829c2	                            sub rdx, rax	        48	advice.c	FUNCTION_2	IF_1
0x110	    0x488d82000000	                          lea rax, [rdx]	        48	advice.c	FUNCTION_2	IF_1
0x117	            0xeb05	                           jmp 0x400015e	        48	advice.c	FUNCTION_2	IF_1
0x119	      0xb800000000	                              mov eax, 0	        49	advice.c	FUNCTION_2
0x11e	              0xc9	                                   leave	        50	advice.c	FUNCTION_2
0x11f	              0xc3	                                     ret	        50	advice.c	FUNCTION_2
git_default_advice_config	CALL,10:SWITCH,0:DO,0:WHILE,0:IF,6:FOR,1:ELSE,0:functions,0	108
0x302	              0x55	                                push rbp	       103	advice.c	FUNCTION_4
0x303	          0x4889e5	                            mov rbp, rsp	       103	advice.c	FUNCTION_4
0x306	              0x53	                                push rbx	       103	advice.c	FUNCTION_4
0x307	        0x4883ec38	                           sub rsp, 0x38	       103	advice.c	FUNCTION_4
0x30b	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       103	advice.c	FUNCTION_4
0x30f	        0x488975c0	             mov qword [rbp - 0x40], rsi	       103	advice.c	FUNCTION_4
0x313	    0x64488b042528	                mov rax, qword fs:[0x28]	       103	advice.c	FUNCTION_4
0x31c	        0x488945e8	             mov qword [rbp - 0x18], rax	       103	advice.c	FUNCTION_4
0x320	            0x31c0	                            xor eax, eax	       103	advice.c	FUNCTION_4
0x322	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       107	advice.c	FUNCTION_4	IF_1	CALL_1
0x326	      0xbe00000000	                              mov esi, 0	       107	advice.c	FUNCTION_4	IF_1	CALL_1
0x32b	          0x4889c7	                            mov rdi, rax	       107	advice.c	FUNCTION_4	IF_1	CALL_1
0x32e	      0xe800000000	                          call 0x4000373	       107	advice.c	FUNCTION_4	IF_1	CALL_1
0x333	            0x85c0	                           test eax, eax	       107	advice.c	FUNCTION_4	IF_1	CALL_1
0x335	            0x7523	                           jne 0x400039a	       107	advice.c	FUNCTION_4	IF_1	CALL_1
0x337	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       108	advice.c	FUNCTION_4	IF_1	CALL_2
0x33b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       108	advice.c	FUNCTION_4	IF_1	CALL_2
0x33f	          0x4889d6	                            mov rsi, rdx	       108	advice.c	FUNCTION_4	IF_1	CALL_2
0x342	          0x4889c7	                            mov rdi, rax	       108	advice.c	FUNCTION_4	IF_1	CALL_2
0x345	      0xe800000000	                          call 0x400038a	       108	advice.c	FUNCTION_4	IF_1	CALL_2
0x34a	    0x890500000000	            mov dword [0x04000390], eax 	       108	advice.c	FUNCTION_4	IF_1	CALL_2
0x350	      0xb800000000	                              mov eax, 0	       109	advice.c	FUNCTION_4	IF_1
0x355	      0xe919010000	                           jmp 0x40004b3	       109	advice.c	FUNCTION_4	IF_1
0x35a	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       112	advice.c	FUNCTION_4	IF_2	CALL_3
0x35e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       112	advice.c	FUNCTION_4	IF_2	CALL_3
0x362	      0xbe00000000	                              mov esi, 0	       112	advice.c	FUNCTION_4	IF_2	CALL_3
0x367	          0x4889c7	                            mov rdi, rax	       112	advice.c	FUNCTION_4	IF_2	CALL_3
0x36a	      0xe89cfcffff	                    call sym.skip_prefix	       112	advice.c	FUNCTION_4	IF_2	CALL_3
0x36f	            0x85c0	                           test eax, eax	       112	advice.c	FUNCTION_4	IF_2	CALL_3
0x371	            0x7471	                            je 0x4000424	       112	advice.c	FUNCTION_4	IF_2	CALL_3
0x373	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       113	advice.c	FUNCTION_4	IF_2	CALL_4
0x377	          0x4889c7	                            mov rdi, rax	       113	advice.c	FUNCTION_4	IF_2	CALL_4
0x37a	      0xe80efdffff	        call sym.parse_advise_color_slot	       113	advice.c	FUNCTION_4	IF_2	CALL_4
0x37f	          0x8945d4	             mov dword [rbp - 0x2c], eax	       113	advice.c	FUNCTION_4	IF_2	CALL_4
0x382	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       114	advice.c	FUNCTION_4	IF_2	IF_3
0x386	            0x790a	                           jns 0x40003d2	       114	advice.c	FUNCTION_4	IF_2	IF_3
0x388	      0xb800000000	                              mov eax, 0	       115	advice.c	FUNCTION_4	IF_2	IF_3
0x38d	      0xe9e1000000	                           jmp 0x40004b3	       115	advice.c	FUNCTION_4	IF_2	IF_3
0x392	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       116	advice.c	FUNCTION_4	IF_2	IF_4
0x397	            0x7516	                           jne 0x40003ef	       116	advice.c	FUNCTION_4	IF_2	IF_4
0x399	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       117	advice.c	FUNCTION_4	IF_2	CALL_5
0x39d	          0x4889c7	                            mov rdi, rax	       117	advice.c	FUNCTION_4	IF_2	CALL_5
0x3a0	      0xe800000000	                          call 0x40003e5	       117	advice.c	FUNCTION_4	IF_2	CALL_5
0x3a5	      0xe856fcffff	                    call sym.const_error	       117	advice.c	FUNCTION_4	IF_2	CALL_5
0x3aa	      0xe9c4000000	                           jmp 0x40004b3	       117	advice.c	FUNCTION_4	IF_2	CALL_5
0x3af	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x3b2	          0x4863d0	                         movsxd rdx, eax	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x3b5	          0x4889d0	                            mov rax, rdx	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x3b8	        0x48c1e002	                              shl rax, 2	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x3bc	          0x4801d0	                            add rax, rdx	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x3bf	          0x4889c2	                            mov rdx, rax	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x3c2	        0x48c1e204	                              shl rdx, 4	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x3c6	          0x4829c2	                            sub rdx, rax	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x3c9	    0x4881c2000000	                              add rdx, 0	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x3d0	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x3d4	          0x4889d6	                            mov rsi, rdx	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x3d7	          0x4889c7	                            mov rdi, rax	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x3da	      0xe800000000	                          call 0x400041f	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x3df	      0xe98f000000	                           jmp 0x40004b3	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x3e4	        0x488d55d8	                   lea rdx, [rbp - 0x28]	       121	advice.c	FUNCTION_4	IF_5	CALL_7
0x3e8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       121	advice.c	FUNCTION_4	IF_5	CALL_7
0x3ec	      0xbe00000000	                              mov esi, 0	       121	advice.c	FUNCTION_4	IF_5	CALL_7
0x3f1	          0x4889c7	                            mov rdi, rax	       121	advice.c	FUNCTION_4	IF_5	CALL_7
0x3f4	      0xe812fcffff	                    call sym.skip_prefix	       121	advice.c	FUNCTION_4	IF_5	CALL_7
0x3f9	            0x85c0	                           test eax, eax	       121	advice.c	FUNCTION_4	IF_5	CALL_7
0x3fb	            0x7507	                           jne 0x4000444	       121	advice.c	FUNCTION_4	IF_5	CALL_7
0x3fd	      0xb800000000	                              mov eax, 0	       122	advice.c	FUNCTION_4	IF_5
0x402	            0xeb6f	                           jmp 0x40004b3	       122	advice.c	FUNCTION_4	IF_5
0x404	    0xc745d0000000	               mov dword [rbp - 0x30], 0	       124	advice.c	FUNCTION_4	FOR_1	CALL_8
0x40b	            0xeb59	                           jmp 0x40004a6	       124	advice.c	FUNCTION_4	FOR_1	CALL_8
0x40d	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       125	advice.c	FUNCTION_4	FOR_1	IF_6	CALL_9
0x410	            0x4898	                                    cdqe	       125	advice.c	FUNCTION_4	FOR_1	IF_6	CALL_9
0x412	        0x48c1e004	                              shl rax, 4	       125	advice.c	FUNCTION_4	FOR_1	IF_6	CALL_9
0x416	    0x480500000000	                              add rax, 0	       125	advice.c	FUNCTION_4	FOR_1	IF_6	CALL_9
0x41c	          0x488b10	                    mov rdx, qword [rax]	       125	advice.c	FUNCTION_4	FOR_1	IF_6	CALL_9
0x41f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       125	advice.c	FUNCTION_4	FOR_1	IF_6	CALL_9
0x423	          0x4889d6	                            mov rsi, rdx	       125	advice.c	FUNCTION_4	FOR_1	IF_6	CALL_9
0x426	          0x4889c7	                            mov rdi, rax	       125	advice.c	FUNCTION_4	FOR_1	IF_6	CALL_9
0x429	      0xe800000000	                          call 0x400046e	       125	advice.c	FUNCTION_4	FOR_1	IF_6	CALL_9
0x42e	            0x85c0	                           test eax, eax	       125	advice.c	FUNCTION_4	FOR_1	IF_6	CALL_9
0x430	            0x7406	                            je 0x4000478	       125	advice.c	FUNCTION_4	FOR_1	IF_6	CALL_9
0x432	        0x8345d001	               add dword [rbp - 0x30], 1	       124	advice.c	FUNCTION_4	FOR_1	CALL_8
0x436	            0xeb2e	                           jmp 0x40004a6	       124	advice.c	FUNCTION_4	FOR_1	CALL_8
0x438	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       127	advice.c	FUNCTION_4	FOR_1	CALL_10
0x43b	            0x4898	                                    cdqe	       127	advice.c	FUNCTION_4	FOR_1	CALL_10
0x43d	        0x48c1e004	                              shl rax, 4	       127	advice.c	FUNCTION_4	FOR_1	CALL_10
0x441	    0x480500000000	                              add rax, 0	       127	advice.c	FUNCTION_4	FOR_1	CALL_10
0x447	          0x488b18	                    mov rbx, qword [rax]	       127	advice.c	FUNCTION_4	FOR_1	CALL_10
0x44a	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       127	advice.c	FUNCTION_4	FOR_1	CALL_10
0x44e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       127	advice.c	FUNCTION_4	FOR_1	CALL_10
0x452	          0x4889d6	                            mov rsi, rdx	       127	advice.c	FUNCTION_4	FOR_1	CALL_10
0x455	          0x4889c7	                            mov rdi, rax	       127	advice.c	FUNCTION_4	FOR_1	CALL_10
0x458	      0xe800000000	                          call 0x400049d	       127	advice.c	FUNCTION_4	FOR_1	CALL_10
0x45d	            0x8903	                    mov dword [rbx], eax	       127	advice.c	FUNCTION_4	FOR_1	CALL_10
0x45f	      0xb800000000	                              mov eax, 0	       128	advice.c	FUNCTION_4	FOR_1
0x464	            0xeb0d	                           jmp 0x40004b3	       128	advice.c	FUNCTION_4	FOR_1
0x466	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       124	advice.c	FUNCTION_4	FOR_1	CALL_8
0x469	          0x83f813	                           cmp eax, 0x13	       124	advice.c	FUNCTION_4	FOR_1	CALL_8
0x46c	            0x769f	                           jbe 0x400044d	       124	advice.c	FUNCTION_4	FOR_1	CALL_8
0x46e	      0xb800000000	                              mov eax, 0	       131	advice.c	FUNCTION_4
0x473	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       132	advice.c	FUNCTION_4
0x477	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       132	advice.c	FUNCTION_4
0x480	            0x7405	                            je 0x40004c7	       132	advice.c	FUNCTION_4
0x482	      0xe800000000	                          call 0x40004c7	       132	advice.c	FUNCTION_4
0x487	        0x4883c438	                           add rsp, 0x38	       132	advice.c	FUNCTION_4
0x48b	              0x5b	                                 pop rbx	       132	advice.c	FUNCTION_4
0x48c	              0x5d	                                 pop rbp	       132	advice.c	FUNCTION_4
0x48d	              0xc3	                                     ret	       132	advice.c	FUNCTION_4
_	CALL,2:SWITCH,0:DO,0:WHILE,0:IF,1:FOR,0:ELSE,0:functions,0	15
0x61	              0x55	                                push rbp	        51	gettext.h	FUNCTION_11
0x62	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_11
0x65	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_11
0x69	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_11
0x6d	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_11	IF_1
0x71	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_11	IF_1
0x74	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_11	IF_1
0x76	            0x7507	                           jne 0x40000bf	        52	gettext.h	FUNCTION_11	IF_1
0x78	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_11	IF_1
0x7d	            0xeb0c	                           jmp 0x40000cb	        53	gettext.h	FUNCTION_11	IF_1
0x7f	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_11	CALL_2
0x83	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_11	CALL_2
0x86	      0xe800000000	                          call 0x40000cb	        54	gettext.h	FUNCTION_11	CALL_2
0x8b	              0xc9	                                   leave	        55	gettext.h	FUNCTION_11
0x8c	              0xc3	                                     ret	        55	gettext.h	FUNCTION_11
advise	CALL,9:SWITCH,0:DO,0:WHILE,0:IF,1:FOR,1:ELSE,0:functions,0	96
0x120	              0x55	                                push rbp	        81	advice.c	FUNCTION_3
0x121	          0x4889e5	                            mov rbp, rsp	        81	advice.c	FUNCTION_3
0x124	            0x4155	                                push r13	        81	advice.c	FUNCTION_3
0x126	            0x4154	                                push r12	        81	advice.c	FUNCTION_3
0x128	              0x53	                                push rbx	        81	advice.c	FUNCTION_3
0x129	    0x4881ec180100	                          sub rsp, 0x118	        81	advice.c	FUNCTION_3
0x130	    0x4889bdd8feff	            mov qword [rbp - 0x128], rdi	        81	advice.c	FUNCTION_3
0x137	    0x4889b538ffff	             mov qword [rbp - 0xc8], rsi	        81	advice.c	FUNCTION_3
0x13e	    0x48899540ffff	             mov qword [rbp - 0xc0], rdx	        81	advice.c	FUNCTION_3
0x145	    0x48898d48ffff	             mov qword [rbp - 0xb8], rcx	        81	advice.c	FUNCTION_3
0x14c	    0x4c898550ffff	              mov qword [rbp - 0xb0], r8	        81	advice.c	FUNCTION_3
0x153	    0x4c898d58ffff	              mov qword [rbp - 0xa8], r9	        81	advice.c	FUNCTION_3
0x15a	            0x84c0	                             test al, al	        81	advice.c	FUNCTION_3
0x15c	            0x7426	                            je 0x40001c4	        81	advice.c	FUNCTION_3
0x15e	     0xf298560ffff	       movaps xmmword [rbp - 0xa0], xmm0	        81	advice.c	FUNCTION_3
0x165	     0xf298d70ffff	       movaps xmmword [rbp - 0x90], xmm1	        81	advice.c	FUNCTION_3
0x16c	         0xf295580	       movaps xmmword [rbp - 0x80], xmm2	        81	advice.c	FUNCTION_3
0x170	         0xf295d90	       movaps xmmword [rbp - 0x70], xmm3	        81	advice.c	FUNCTION_3
0x174	         0xf2965a0	       movaps xmmword [rbp - 0x60], xmm4	        81	advice.c	FUNCTION_3
0x178	         0xf296db0	       movaps xmmword [rbp - 0x50], xmm5	        81	advice.c	FUNCTION_3
0x17c	         0xf2975c0	       movaps xmmword [rbp - 0x40], xmm6	        81	advice.c	FUNCTION_3
0x180	         0xf297dd0	       movaps xmmword [rbp - 0x30], xmm7	        81	advice.c	FUNCTION_3
0x184	    0x64488b042528	                mov rax, qword fs:[0x28]	        81	advice.c	FUNCTION_3
0x18d	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	        81	advice.c	FUNCTION_3
0x194	            0x31c0	                            xor eax, eax	        81	advice.c	FUNCTION_3
0x196	    0x48c785f0feff	              mov qword [rbp - 0x110], 0	        82	advice.c	FUNCTION_3
0x1a1	    0x48c785f8feff	              mov qword [rbp - 0x108], 0	        82	advice.c	FUNCTION_3
0x1ac	    0x48c78500ffff	              mov qword [rbp - 0x100], 0	        82	advice.c	FUNCTION_3
0x1b7	    0xc78510ffffff	               mov dword [rbp - 0xf0], 8	        86	advice.c	FUNCTION_3	CALL_1
0x1c1	    0xc78514ffffff	           mov dword [rbp - 0xec], 0x30 	        86	advice.c	FUNCTION_3	CALL_1
0x1cb	        0x488d4510	                   lea rax, [rbp + 0x10]	        86	advice.c	FUNCTION_3	CALL_1
0x1cf	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	        86	advice.c	FUNCTION_3	CALL_1
0x1d6	    0x488d8530ffff	                   lea rax, [rbp - 0xd0]	        86	advice.c	FUNCTION_3	CALL_1
0x1dd	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	        86	advice.c	FUNCTION_3	CALL_1
0x1e4	    0x488d9510ffff	                   lea rdx, [rbp - 0xf0]	        87	advice.c	FUNCTION_3	CALL_2
0x1eb	    0x488b8dd8feff	            mov rcx, qword [rbp - 0x128]	        87	advice.c	FUNCTION_3	CALL_2
0x1f2	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	        87	advice.c	FUNCTION_3	CALL_2
0x1f9	          0x4889ce	                            mov rsi, rcx	        87	advice.c	FUNCTION_3	CALL_2
0x1fc	          0x4889c7	                            mov rdi, rax	        87	advice.c	FUNCTION_3	CALL_2
0x1ff	      0xe800000000	                          call 0x4000244	        87	advice.c	FUNCTION_3	CALL_2
0x204	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	        90	advice.c	FUNCTION_3	FOR_1
0x20b	    0x488985e0feff	            mov qword [rbp - 0x120], rax	        90	advice.c	FUNCTION_3	FOR_1
0x212	      0xe9a4000000	                           jmp 0x40002fb	        90	advice.c	FUNCTION_3	FOR_1
0x217	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	        91	advice.c	FUNCTION_3	FOR_1	CALL_4
0x21e	      0xbe0a000000	                            mov esi, 0xa	        91	advice.c	FUNCTION_3	FOR_1	CALL_4
0x223	          0x4889c7	                            mov rdi, rax	        91	advice.c	FUNCTION_3	FOR_1	CALL_4
0x226	      0xe800000000	                          call 0x400026b	        91	advice.c	FUNCTION_3	FOR_1	CALL_4
0x22b	    0x488985e8feff	            mov qword [rbp - 0x118], rax	        91	advice.c	FUNCTION_3	FOR_1	CALL_4
0x232	      0xbf00000000	                              mov edi, 0	        92	advice.c	FUNCTION_3	FOR_1	CALL_6
0x237	      0xe89cfeffff	               call sym.advise_get_color	        92	advice.c	FUNCTION_3	FOR_1	CALL_6
0x23c	          0x4989c5	                            mov r13, rax	        92	advice.c	FUNCTION_3	FOR_1	CALL_6
0x23f	    0x488b95e8feff	            mov rdx, qword [rbp - 0x118]	        94	advice.c	FUNCTION_3	FOR_1
0x246	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	        94	advice.c	FUNCTION_3	FOR_1
0x24d	          0x4829c2	                            sub rdx, rax	        94	advice.c	FUNCTION_3	FOR_1
0x250	          0x4889d0	                            mov rax, rdx	        94	advice.c	FUNCTION_3	FOR_1
0x253	          0x4189c4	                           mov r12d, eax	        92	advice.c	FUNCTION_3	FOR_1	CALL_6
0x256	      0xbf01000000	                              mov edi, 1	        92	advice.c	FUNCTION_3	FOR_1	CALL_6
0x25b	      0xe878feffff	               call sym.advise_get_color	        92	advice.c	FUNCTION_3	FOR_1	CALL_6
0x260	          0x4889c3	                            mov rbx, rax	        92	advice.c	FUNCTION_3	FOR_1	CALL_6
0x263	      0xbf00000000	                              mov edi, 0	        92	advice.c	FUNCTION_3	FOR_1	CALL_6
0x268	      0xe8f4fdffff	                               call sym.	        92	advice.c	FUNCTION_3	FOR_1	CALL_6
0x26d	          0x4889c6	                            mov rsi, rax	        92	advice.c	FUNCTION_3	FOR_1	CALL_6
0x270	    0x488b05000000	            mov rax, qword [0x040002b7] 	        92	advice.c	FUNCTION_3	FOR_1	CALL_6
0x277	    0x488b95e0feff	            mov rdx, qword [rbp - 0x120]	        92	advice.c	FUNCTION_3	FOR_1	CALL_6
0x27e	          0x4d89e9	                             mov r9, r13	        92	advice.c	FUNCTION_3	FOR_1	CALL_6
0x281	          0x4989d0	                             mov r8, rdx	        92	advice.c	FUNCTION_3	FOR_1	CALL_6
0x284	          0x4489e1	                           mov ecx, r12d	        92	advice.c	FUNCTION_3	FOR_1	CALL_6
0x287	          0x4889da	                            mov rdx, rbx	        92	advice.c	FUNCTION_3	FOR_1	CALL_6
0x28a	          0x4889c7	                            mov rdi, rax	        92	advice.c	FUNCTION_3	FOR_1	CALL_6
0x28d	      0xb800000000	                              mov eax, 0	        92	advice.c	FUNCTION_3	FOR_1	CALL_6
0x292	      0xe800000000	                          call 0x40002d7	        92	advice.c	FUNCTION_3	FOR_1	CALL_6
0x297	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	        96	advice.c	FUNCTION_3	FOR_1	IF_1
0x29e	           0xfb600	                   movzx eax, byte [rax]	        96	advice.c	FUNCTION_3	FOR_1	IF_1
0x2a1	            0x84c0	                             test al, al	        96	advice.c	FUNCTION_3	FOR_1	IF_1
0x2a3	            0x7408	                            je 0x40002ed	        96	advice.c	FUNCTION_3	FOR_1	IF_1
0x2a5	    0x488385e8feff	              add qword [rbp - 0x118], 1	        97	advice.c	FUNCTION_3	FOR_1	IF_1
0x2ad	    0x488b85e8feff	            mov rax, qword [rbp - 0x118]	        90	advice.c	FUNCTION_3	FOR_1
0x2b4	    0x488985e0feff	            mov qword [rbp - 0x120], rax	        90	advice.c	FUNCTION_3	FOR_1
0x2bb	    0x488b85e0feff	            mov rax, qword [rbp - 0x120]	        90	advice.c	FUNCTION_3	FOR_1
0x2c2	           0xfb600	                   movzx eax, byte [rax]	        90	advice.c	FUNCTION_3	FOR_1
0x2c5	            0x84c0	                             test al, al	        90	advice.c	FUNCTION_3	FOR_1
0x2c7	     0xf854affffff	                           jne 0x4000257	        90	advice.c	FUNCTION_3	FOR_1
0x2cd	    0x488d85f0feff	                  lea rax, [rbp - 0x110]	        99	advice.c	FUNCTION_3	CALL_9
0x2d4	          0x4889c7	                            mov rdi, rax	        99	advice.c	FUNCTION_3	CALL_9
0x2d7	      0xe800000000	                          call 0x400031c	        99	advice.c	FUNCTION_3	CALL_9
0x2dc	              0x90	                                     nop	       100	advice.c	FUNCTION_3
0x2dd	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       100	advice.c	FUNCTION_3
0x2e4	    0x644833042528	                xor rax, qword fs:[0x28]	       100	advice.c	FUNCTION_3
0x2ed	            0x7405	                            je 0x4000334	       100	advice.c	FUNCTION_3
0x2ef	      0xe800000000	                          call 0x4000334	       100	advice.c	FUNCTION_3
0x2f4	    0x4881c4180100	                          add rsp, 0x118	       100	advice.c	FUNCTION_3
0x2fb	              0x5b	                                 pop rbx	       100	advice.c	FUNCTION_3
0x2fc	            0x415c	                                 pop r12	       100	advice.c	FUNCTION_3
0x2fe	            0x415d	                                 pop r13	       100	advice.c	FUNCTION_3
0x300	              0x5d	                                 pop rbp	       100	advice.c	FUNCTION_3
0x301	              0xc3	                                     ret	       100	advice.c	FUNCTION_3
parse_advise_color_slot	CALL,2:SWITCH,0:DO,0:WHILE,0:IF,2:FOR,0:ELSE,0:functions,0	23
0x8d	              0x55	                                push rbp	        37	advice.c	FUNCTION_1
0x8e	          0x4889e5	                            mov rbp, rsp	        37	advice.c	FUNCTION_1
0x91	        0x4883ec10	                           sub rsp, 0x10	        37	advice.c	FUNCTION_1
0x95	        0x48897df8	                mov qword [rbp - 8], rdi	        37	advice.c	FUNCTION_1
0x99	        0x488b45f8	                mov rax, qword [rbp - 8]	        38	advice.c	FUNCTION_1	IF_1	CALL_1
0x9d	      0xbe00000000	                              mov esi, 0	        38	advice.c	FUNCTION_1	IF_1	CALL_1
0xa2	          0x4889c7	                            mov rdi, rax	        38	advice.c	FUNCTION_1	IF_1	CALL_1
0xa5	      0xe800000000	                          call 0x40000ea	        38	advice.c	FUNCTION_1	IF_1	CALL_1
0xaa	            0x85c0	                           test eax, eax	        38	advice.c	FUNCTION_1	IF_1	CALL_1
0xac	            0x7507	                           jne 0x40000f5	        38	advice.c	FUNCTION_1	IF_1	CALL_1
0xae	      0xb800000000	                              mov eax, 0	        39	advice.c	FUNCTION_1	IF_1
0xb3	            0xeb21	                           jmp 0x4000116	        39	advice.c	FUNCTION_1	IF_1
0xb5	        0x488b45f8	                mov rax, qword [rbp - 8]	        40	advice.c	FUNCTION_1	IF_2	CALL_2
0xb9	      0xbe00000000	                              mov esi, 0	        40	advice.c	FUNCTION_1	IF_2	CALL_2
0xbe	          0x4889c7	                            mov rdi, rax	        40	advice.c	FUNCTION_1	IF_2	CALL_2
0xc1	      0xe800000000	                          call 0x4000106	        40	advice.c	FUNCTION_1	IF_2	CALL_2
0xc6	            0x85c0	                           test eax, eax	        40	advice.c	FUNCTION_1	IF_2	CALL_2
0xc8	            0x7507	                           jne 0x4000111	        40	advice.c	FUNCTION_1	IF_2	CALL_2
0xca	      0xb801000000	                              mov eax, 1	        41	advice.c	FUNCTION_1	IF_2
0xcf	            0xeb05	                           jmp 0x4000116	        41	advice.c	FUNCTION_1	IF_2
0xd1	      0xb8ffffffff	                     mov eax, 0xffffffff	        42	advice.c	FUNCTION_1
0xd6	              0xc9	                                   leave	        43	advice.c	FUNCTION_1
0xd7	              0xc3	                                     ret	        43	advice.c	FUNCTION_1
const_error	CALL,0:SWITCH,0:DO,0:WHILE,0:IF,0:FOR,0:ELSE,0:functions,0	5
0x0	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_18
0x1	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_18
0x4	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_18
0x9	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_18
0xa	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_18
die_resolve_conflict	CALL,3:SWITCH,0:DO,0:WHILE,0:IF,0:FOR,0:ELSE,0:functions,0	12
0x5f0	              0x55	                                push rbp	       161	advice.c	FUNCTION_6
0x5f1	          0x4889e5	                            mov rbp, rsp	       161	advice.c	FUNCTION_6
0x5f4	        0x4883ec10	                           sub rsp, 0x10	       161	advice.c	FUNCTION_6
0x5f8	        0x48897df8	                mov qword [rbp - 8], rdi	       161	advice.c	FUNCTION_6
0x5fc	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	advice.c	FUNCTION_6	CALL_1
0x600	          0x4889c7	                            mov rdi, rax	       162	advice.c	FUNCTION_6	CALL_1
0x603	      0xe800000000	                          call 0x4000648	       162	advice.c	FUNCTION_6	CALL_1
0x608	      0xbf00000000	                              mov edi, 0	       163	advice.c	FUNCTION_6	CALL_3
0x60d	      0xe84ffaffff	                               call sym.	       163	advice.c	FUNCTION_6	CALL_3
0x612	          0x4889c7	                            mov rdi, rax	       163	advice.c	FUNCTION_6	CALL_3
0x615	      0xb800000000	                              mov eax, 0	       163	advice.c	FUNCTION_6	CALL_3
0x61a	      0xe800000000	             call sym.die_conclude_merge	       163	advice.c	FUNCTION_6	CALL_3
skip_prefix	CALL,0:SWITCH,0:DO,1:WHILE,0:IF,1:FOR,0:ELSE,0:functions,0	27
0xb	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_19
0xc	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_19
0xf	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_19
0x13	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_19
0x17	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_19
0x1b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_19	DO_1	IF_1
0x1f	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_19	DO_1	IF_1
0x22	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_19	DO_1	IF_1
0x24	            0x7512	                           jne 0x4000078	       484	git-compat-util.h	FUNCTION_19	DO_1	IF_1
0x26	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_19	DO_1	IF_1
0x2a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_19	DO_1	IF_1
0x2e	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_19	DO_1	IF_1
0x31	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_19	DO_1	IF_1
0x36	            0xeb27	                           jmp 0x400009f	       486	git-compat-util.h	FUNCTION_19	DO_1	IF_1
0x38	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_19	DO_1
0x3c	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_19	DO_1
0x40	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_19	DO_1
0x44	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_19	DO_1
0x47	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_19	DO_1
0x4b	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_19	DO_1
0x4f	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_19	DO_1
0x53	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_19	DO_1
0x56	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_19	DO_1
0x58	            0x74c1	                            je 0x400005b	       488	git-compat-util.h	FUNCTION_19	DO_1
0x5a	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_19
0x5f	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_19
0x60	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_19
detach_advice	CALL,2:SWITCH,0:DO,0:WHILE,0:IF,0:FOR,0:ELSE,0:functions,0	17
0x677	              0x55	                                push rbp	       175	advice.c	FUNCTION_8
0x678	          0x4889e5	                            mov rbp, rsp	       175	advice.c	FUNCTION_8
0x67b	        0x4883ec20	                           sub rsp, 0x20	       175	advice.c	FUNCTION_8
0x67f	        0x48897de8	             mov qword [rbp - 0x18], rdi	       175	advice.c	FUNCTION_8
0x683	      0xbf00000000	                              mov edi, 0	       176	advice.c	FUNCTION_8
0x688	      0xe8d4f9ffff	                               call sym.	       176	advice.c	FUNCTION_8
0x68d	        0x488945f8	                mov qword [rbp - 8], rax	       176	advice.c	FUNCTION_8
0x691	    0x488b05000000	            mov rax, qword [0x040006d8] 	       185	advice.c	FUNCTION_8	CALL_2
0x698	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       185	advice.c	FUNCTION_8	CALL_2
0x69c	        0x488b4df8	                mov rcx, qword [rbp - 8]	       185	advice.c	FUNCTION_8	CALL_2
0x6a0	          0x4889ce	                            mov rsi, rcx	       185	advice.c	FUNCTION_8	CALL_2
0x6a3	          0x4889c7	                            mov rdi, rax	       185	advice.c	FUNCTION_8	CALL_2
0x6a6	      0xb800000000	                              mov eax, 0	       185	advice.c	FUNCTION_8	CALL_2
0x6ab	      0xe800000000	                          call 0x40006f0	       185	advice.c	FUNCTION_8	CALL_2
0x6b0	              0x90	                                     nop	       186	advice.c	FUNCTION_8
0x6b1	              0xc9	                                   leave	       186	advice.c	FUNCTION_8
0x6b2	              0xc3	                                     ret	       186	advice.c	FUNCTION_8
error_resolve_conflict	CALL,19:SWITCH,0:DO,0:WHILE,0:IF,6:FOR,0:ELSE,5:functions,0	89
0x48e	              0x55	                                push rbp	       135	advice.c	FUNCTION_5
0x48f	          0x4889e5	                            mov rbp, rsp	       135	advice.c	FUNCTION_5
0x492	        0x4883ec10	                           sub rsp, 0x10	       135	advice.c	FUNCTION_5
0x496	        0x48897df8	                mov qword [rbp - 8], rdi	       135	advice.c	FUNCTION_5
0x49a	        0x488b45f8	                mov rax, qword [rbp - 8]	       136	advice.c	FUNCTION_5	IF_1	CALL_1
0x49e	      0xbe00000000	                              mov esi, 0	       136	advice.c	FUNCTION_5	IF_1	CALL_1
0x4a3	          0x4889c7	                            mov rdi, rax	       136	advice.c	FUNCTION_5	IF_1	CALL_1
0x4a6	      0xe800000000	                          call 0x40004eb	       136	advice.c	FUNCTION_5	IF_1	CALL_1
0x4ab	            0x85c0	                           test eax, eax	       136	advice.c	FUNCTION_5	IF_1	CALL_1
0x4ad	            0x7521	                           jne 0x4000510	       136	advice.c	FUNCTION_5	IF_1	CALL_1
0x4af	      0xbf00000000	                              mov edi, 0	       137	advice.c	FUNCTION_5	CALL_3
0x4b4	      0xe8a8fbffff	                               call sym.	       137	advice.c	FUNCTION_5	CALL_3
0x4b9	          0x4889c7	                            mov rdi, rax	       137	advice.c	FUNCTION_5	CALL_3
0x4bc	      0xb800000000	                              mov eax, 0	       137	advice.c	FUNCTION_5	CALL_3
0x4c1	      0xe800000000	                          call 0x4000506	       137	advice.c	FUNCTION_5	CALL_3
0x4c6	      0xe835fbffff	                    call sym.const_error	       137	advice.c	FUNCTION_5	CALL_3
0x4cb	      0xe9f8000000	                           jmp 0x4000608	       137	advice.c	FUNCTION_5	CALL_3
0x4d0	        0x488b45f8	                mov rax, qword [rbp - 8]	       138	advice.c	FUNCTION_5	ELSE_1	IF_2	CALL_4
0x4d4	      0xbe00000000	                              mov esi, 0	       138	advice.c	FUNCTION_5	ELSE_1	IF_2	CALL_4
0x4d9	          0x4889c7	                            mov rdi, rax	       138	advice.c	FUNCTION_5	ELSE_1	IF_2	CALL_4
0x4dc	      0xe800000000	                          call 0x4000521	       138	advice.c	FUNCTION_5	ELSE_1	IF_2	CALL_4
0x4e1	            0x85c0	                           test eax, eax	       138	advice.c	FUNCTION_5	ELSE_1	IF_2	CALL_4
0x4e3	            0x7521	                           jne 0x4000546	       138	advice.c	FUNCTION_5	ELSE_1	IF_2	CALL_4
0x4e5	      0xbf00000000	                              mov edi, 0	       139	advice.c	FUNCTION_5	ELSE_1	IF_2
0x4ea	      0xe872fbffff	                               call sym.	       139	advice.c	FUNCTION_5	ELSE_1	IF_2
0x4ef	          0x4889c7	                            mov rdi, rax	       139	advice.c	FUNCTION_5	ELSE_1	IF_2
0x4f2	      0xb800000000	                              mov eax, 0	       139	advice.c	FUNCTION_5	ELSE_1	IF_2
0x4f7	      0xe800000000	                          call 0x400053c	       139	advice.c	FUNCTION_5	ELSE_1	IF_2
0x4fc	      0xe8fffaffff	                    call sym.const_error	       139	advice.c	FUNCTION_5	ELSE_1	IF_2
0x501	      0xe9c2000000	                           jmp 0x4000608	       139	advice.c	FUNCTION_5	ELSE_1	IF_2
0x506	        0x488b45f8	                mov rax, qword [rbp - 8]	       140	advice.c	FUNCTION_5	ELSE_2	IF_3	CALL_7
0x50a	      0xbe00000000	                              mov esi, 0	       140	advice.c	FUNCTION_5	ELSE_2	IF_3	CALL_7
0x50f	          0x4889c7	                            mov rdi, rax	       140	advice.c	FUNCTION_5	ELSE_2	IF_3	CALL_7
0x512	      0xe800000000	                          call 0x4000557	       140	advice.c	FUNCTION_5	ELSE_2	IF_3	CALL_7
0x517	            0x85c0	                           test eax, eax	       140	advice.c	FUNCTION_5	ELSE_2	IF_3	CALL_7
0x519	            0x7521	                           jne 0x400057c	       140	advice.c	FUNCTION_5	ELSE_2	IF_3	CALL_7
0x51b	      0xbf00000000	                              mov edi, 0	       141	advice.c	FUNCTION_5	ELSE_2	IF_3
0x520	      0xe83cfbffff	                               call sym.	       141	advice.c	FUNCTION_5	ELSE_2	IF_3
0x525	          0x4889c7	                            mov rdi, rax	       141	advice.c	FUNCTION_5	ELSE_2	IF_3
0x528	      0xb800000000	                              mov eax, 0	       141	advice.c	FUNCTION_5	ELSE_2	IF_3
0x52d	      0xe800000000	                          call 0x4000572	       141	advice.c	FUNCTION_5	ELSE_2	IF_3
0x532	      0xe8c9faffff	                    call sym.const_error	       141	advice.c	FUNCTION_5	ELSE_2	IF_3
0x537	      0xe98c000000	                           jmp 0x4000608	       141	advice.c	FUNCTION_5	ELSE_2	IF_3
0x53c	        0x488b45f8	                mov rax, qword [rbp - 8]	       142	advice.c	FUNCTION_5	ELSE_3	IF_4	CALL_10
0x540	      0xbe00000000	                              mov esi, 0	       142	advice.c	FUNCTION_5	ELSE_3	IF_4	CALL_10
0x545	          0x4889c7	                            mov rdi, rax	       142	advice.c	FUNCTION_5	ELSE_3	IF_4	CALL_10
0x548	      0xe800000000	                          call 0x400058d	       142	advice.c	FUNCTION_5	ELSE_3	IF_4	CALL_10
0x54d	            0x85c0	                           test eax, eax	       142	advice.c	FUNCTION_5	ELSE_3	IF_4	CALL_10
0x54f	            0x751e	                           jne 0x40005af	       142	advice.c	FUNCTION_5	ELSE_3	IF_4	CALL_10
0x551	      0xbf00000000	                              mov edi, 0	       143	advice.c	FUNCTION_5	ELSE_3	IF_4
0x556	      0xe806fbffff	                               call sym.	       143	advice.c	FUNCTION_5	ELSE_3	IF_4
0x55b	          0x4889c7	                            mov rdi, rax	       143	advice.c	FUNCTION_5	ELSE_3	IF_4
0x55e	      0xb800000000	                              mov eax, 0	       143	advice.c	FUNCTION_5	ELSE_3	IF_4
0x563	      0xe800000000	                          call 0x40005a8	       143	advice.c	FUNCTION_5	ELSE_3	IF_4
0x568	      0xe893faffff	                    call sym.const_error	       143	advice.c	FUNCTION_5	ELSE_3	IF_4
0x56d	            0xeb59	                           jmp 0x4000608	       143	advice.c	FUNCTION_5	ELSE_3	IF_4
0x56f	        0x488b45f8	                mov rax, qword [rbp - 8]	       144	advice.c	FUNCTION_5	ELSE_4	IF_5	CALL_13
0x573	      0xbe00000000	                              mov esi, 0	       144	advice.c	FUNCTION_5	ELSE_4	IF_5	CALL_13
0x578	          0x4889c7	                            mov rdi, rax	       144	advice.c	FUNCTION_5	ELSE_4	IF_5	CALL_13
0x57b	      0xe800000000	                          call 0x40005c0	       144	advice.c	FUNCTION_5	ELSE_4	IF_5	CALL_13
0x580	            0x85c0	                           test eax, eax	       144	advice.c	FUNCTION_5	ELSE_4	IF_5	CALL_13
0x582	            0x751e	                           jne 0x40005e2	       144	advice.c	FUNCTION_5	ELSE_4	IF_5	CALL_13
0x584	      0xbf00000000	                              mov edi, 0	       145	advice.c	FUNCTION_5	ELSE_4	IF_5
0x589	      0xe8d3faffff	                               call sym.	       145	advice.c	FUNCTION_5	ELSE_4	IF_5
0x58e	          0x4889c7	                            mov rdi, rax	       145	advice.c	FUNCTION_5	ELSE_4	IF_5
0x591	      0xb800000000	                              mov eax, 0	       145	advice.c	FUNCTION_5	ELSE_4	IF_5
0x596	      0xe800000000	                          call 0x40005db	       145	advice.c	FUNCTION_5	ELSE_4	IF_5
0x59b	      0xe860faffff	                    call sym.const_error	       145	advice.c	FUNCTION_5	ELSE_4	IF_5
0x5a0	            0xeb26	                           jmp 0x4000608	       145	advice.c	FUNCTION_5	ELSE_4	IF_5
0x5a2	      0xbf00000000	                              mov edi, 0	       147	advice.c	FUNCTION_5	ELSE_5	CALL_17
0x5a7	      0xe8b5faffff	                               call sym.	       147	advice.c	FUNCTION_5	ELSE_5	CALL_17
0x5ac	          0x4889c2	                            mov rdx, rax	       147	advice.c	FUNCTION_5	ELSE_5	CALL_17
0x5af	        0x488b45f8	                mov rax, qword [rbp - 8]	       147	advice.c	FUNCTION_5	ELSE_5	CALL_17
0x5b3	          0x4889c6	                            mov rsi, rax	       147	advice.c	FUNCTION_5	ELSE_5	CALL_17
0x5b6	          0x4889d7	                            mov rdi, rdx	       147	advice.c	FUNCTION_5	ELSE_5	CALL_17
0x5b9	      0xb800000000	                              mov eax, 0	       147	advice.c	FUNCTION_5	ELSE_5	CALL_17
0x5be	      0xe800000000	                          call 0x4000603	       147	advice.c	FUNCTION_5	ELSE_5	CALL_17
0x5c3	      0xe838faffff	                    call sym.const_error	       147	advice.c	FUNCTION_5	ELSE_5	CALL_17
0x5c8	    0x8b0500000000	            mov eax, dword [0x0400060e] 	       150	advice.c	FUNCTION_5	IF_6
0x5ce	            0x85c0	                           test eax, eax	       150	advice.c	FUNCTION_5	IF_6
0x5d0	            0x7417	                            je 0x4000629	       150	advice.c	FUNCTION_5	IF_6
0x5d2	      0xbf00000000	                              mov edi, 0	       155	advice.c	FUNCTION_5	IF_6	CALL_19
0x5d7	      0xe885faffff	                               call sym.	       155	advice.c	FUNCTION_5	IF_6	CALL_19
0x5dc	          0x4889c7	                            mov rdi, rax	       155	advice.c	FUNCTION_5	IF_6	CALL_19
0x5df	      0xb800000000	                              mov eax, 0	       155	advice.c	FUNCTION_5	IF_6	CALL_19
0x5e4	      0xe800000000	                          call 0x4000629	       155	advice.c	FUNCTION_5	IF_6	CALL_19
0x5e9	      0xb8ffffffff	                     mov eax, 0xffffffff	       157	advice.c	FUNCTION_5
0x5ee	              0xc9	                                   leave	       158	advice.c	FUNCTION_5
0x5ef	              0xc3	                                     ret	       158	advice.c	FUNCTION_5
