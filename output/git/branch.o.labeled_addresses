strbuf_setlen	IF,2:ELSE,1:SWITCH,0:functions,0:CALL,2:DO,0:FOR,0:WHILE,0	43
0x97	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_31
0x98	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_31
0x9b	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_31
0x9f	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_31
0xa3	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_31
0xa7	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_31	IF_1
0xab	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_31	IF_1
0xae	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_31	IF_1
0xb1	            0x740d	                            je 0x4000100	       162	strbuf.h	FUNCTION_31	IF_1
0xb3	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_31	IF_1
0xb7	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_31	IF_1
0xba	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_31	IF_1
0xbe	            0xeb05	                           jmp 0x4000105	       162	strbuf.h	FUNCTION_31	IF_1
0xc0	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_31	IF_1
0xc5	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_31	IF_1
0xc9	            0x730f	                           jae 0x400011a	       162	strbuf.h	FUNCTION_31	IF_1
0xcb	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_31	CALL_1
0xd0	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_31	CALL_1
0xd5	      0xe800000000	                          call 0x400011a	       163	strbuf.h	FUNCTION_31	CALL_1
0xda	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_31
0xde	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_31
0xe2	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_31
0xe6	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_31	IF_2
0xea	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_31	IF_2
0xee	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_31	IF_2
0xf4	            0x7414	                            je 0x400014a	       165	strbuf.h	FUNCTION_31	IF_2
0xf6	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_31	IF_2
0xfa	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_31	IF_2
0xfe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_31	IF_2
0x102	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_31	IF_2
0x105	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_31	IF_2
0x108	            0xeb24	                           jmp 0x400016e	       169	strbuf.h	FUNCTION_31
0x10a	     0xfb605000000	           movzx eax, byte [0x04000151] 	       168	strbuf.h	FUNCTION_31	CALL_2
0x111	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_31	CALL_2
0x113	            0x7419	                            je 0x400016e	       168	strbuf.h	FUNCTION_31	CALL_2
0x115	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_31	CALL_2
0x11a	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_31	CALL_2
0x11f	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_31	CALL_2
0x124	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_31	CALL_2
0x129	      0xe800000000	                          call 0x400016e	       168	strbuf.h	FUNCTION_31	CALL_2
0x12e	              0x90	                                     nop	       169	strbuf.h	FUNCTION_31
0x12f	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_31
0x130	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_31
column_active	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,0:DO,0:FOR,0:WHILE,0	10
0x251	              0x55	                                push rbp	        35	column.h	FUNCTION_40
0x252	          0x4889e5	                            mov rbp, rsp	        35	column.h	FUNCTION_40
0x255	          0x897dfc	                mov dword [rbp - 4], edi	        35	column.h	FUNCTION_40
0x258	          0x8b45fc	                mov eax, dword [rbp - 4]	        36	column.h	FUNCTION_40
0x25b	          0x83e030	                           and eax, 0x30	        36	column.h	FUNCTION_40
0x25e	          0x83f810	                           cmp eax, 0x10	        36	column.h	FUNCTION_40
0x261	           0xf94c0	                                 sete al	        36	column.h	FUNCTION_40
0x264	           0xfb6c0	                           movzx eax, al	        36	column.h	FUNCTION_40
0x267	              0x5d	                                 pop rbp	        37	column.h	FUNCTION_40
0x268	              0xc3	                                     ret	        37	column.h	FUNCTION_40
const_error	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,0:DO,0:FOR,0:WHILE,0	5
0x0	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_46
0x1	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_46
0x4	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_46
0x9	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_46
0xa	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_46
skip_prefix	IF,1:ELSE,0:SWITCH,0:functions,0:CALL,0:DO,1:FOR,0:WHILE,0	27
0xb	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_47
0xc	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_47
0xf	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_47
0x13	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_47
0x17	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_47
0x1b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_47	DO_1	IF_1
0x1f	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_47	DO_1	IF_1
0x22	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_47	DO_1	IF_1
0x24	            0x7512	                           jne 0x4000078	       484	git-compat-util.h	FUNCTION_47	DO_1	IF_1
0x26	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_47	DO_1	IF_1
0x2a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_47	DO_1	IF_1
0x2e	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_47	DO_1	IF_1
0x31	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_47	DO_1	IF_1
0x36	            0xeb27	                           jmp 0x400009f	       486	git-compat-util.h	FUNCTION_47	DO_1	IF_1
0x38	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_47	DO_1
0x3c	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_47	DO_1
0x40	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_47	DO_1
0x44	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_47	DO_1
0x47	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_47	DO_1
0x4b	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_47	DO_1
0x4f	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_47	DO_1
0x53	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_47	DO_1
0x56	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_47	DO_1
0x58	            0x74c1	                            je 0x400005b	       488	git-compat-util.h	FUNCTION_47	DO_1
0x5a	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_47
0x5f	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_47
0x60	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_47
_	IF,1:ELSE,0:SWITCH,0:functions,0:CALL,2:DO,0:FOR,0:WHILE,0	15
0x1d4	              0x55	                                push rbp	        51	gettext.h	FUNCTION_70
0x1d5	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_70
0x1d8	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_70
0x1dc	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_70
0x1e0	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_70	IF_1
0x1e4	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_70	IF_1
0x1e7	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_70	IF_1
0x1e9	            0x7507	                           jne 0x4000232	        52	gettext.h	FUNCTION_70	IF_1
0x1eb	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_70	IF_1
0x1f0	            0xeb0c	                           jmp 0x400023e	        53	gettext.h	FUNCTION_70	IF_1
0x1f2	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_70	CALL_2
0x1f6	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_70	CALL_2
0x1f9	      0xe800000000	                          call 0x400023e	        54	gettext.h	FUNCTION_70	CALL_2
0x1fe	              0xc9	                                   leave	        55	gettext.h	FUNCTION_70
0x1ff	              0xc3	                                     ret	        55	gettext.h	FUNCTION_70
strbuf_addch	IF,1:ELSE,0:SWITCH,0:functions,0:CALL,2:DO,0:FOR,0:WHILE,0	33
0x131	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_32
0x132	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_32
0x135	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_32
0x139	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_32
0x13d	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_32
0x140	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_32	IF_1	CALL_1
0x144	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_32	IF_1	CALL_1
0x147	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_32	IF_1	CALL_1
0x14c	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_32	IF_1	CALL_1
0x14f	            0x7511	                           jne 0x40001a2	       227	strbuf.h	FUNCTION_32	IF_1	CALL_1
0x151	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_32	CALL_2
0x155	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_32	CALL_2
0x15a	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_32	CALL_2
0x15d	      0xe800000000	                          call 0x40001a2	       228	strbuf.h	FUNCTION_32	CALL_2
0x162	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_32
0x166	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_32
0x16a	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_32
0x16e	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_32
0x172	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_32
0x176	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_32
0x17a	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_32
0x17e	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_32
0x181	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_32
0x184	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_32
0x186	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_32
0x18a	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_32
0x18e	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_32
0x192	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_32
0x196	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_32
0x199	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_32
0x19c	              0x90	                                     nop	       231	strbuf.h	FUNCTION_32
0x19d	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_32
0x19e	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_32
strbuf_addstr	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,2:DO,0:FOR,0:WHILE,0	17
0x19f	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_33
0x1a0	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_33
0x1a3	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_33
0x1a7	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_33
0x1ab	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_33
0x1af	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_33	CALL_2
0x1b3	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_33	CALL_2
0x1b6	      0xe800000000	                          call 0x40001fb	       279	strbuf.h	FUNCTION_33	CALL_2
0x1bb	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_33	CALL_2
0x1be	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_33	CALL_2
0x1c2	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_33	CALL_2
0x1c6	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_33	CALL_2
0x1c9	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_33	CALL_2
0x1cc	      0xe800000000	                          call 0x4000211	       279	strbuf.h	FUNCTION_33	CALL_2
0x1d1	              0x90	                                     nop	       280	strbuf.h	FUNCTION_33
0x1d2	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_33
0x1d3	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_33
strbuf_avail	IF,0:ELSE,0:SWITCH,0:functions,0:CALL,0:DO,0:FOR,0:WHILE,0	18
0x61	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_30
0x62	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_30
0x65	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_30
0x69	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_30
0x6d	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_30
0x70	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_30
0x73	            0x741b	                            je 0x40000d0	       141	strbuf.h	FUNCTION_30
0x75	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_30
0x79	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_30
0x7c	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_30
0x80	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_30
0x84	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_30
0x87	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_30
0x8a	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_30
0x8e	            0xeb05	                           jmp 0x40000d5	       141	strbuf.h	FUNCTION_30
0x90	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_30
0x95	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_30
0x96	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_30
