throughput_string	WHILE,0:FOR,0:DO,0:CALL,6:ELSE,0:IF,0:functions,0:SWITCH,0	37
0x4ab	              0x55	                                push rbp	       120	progress.c	FUNCTION_6
0x4ac	          0x4889e5	                            mov rbp, rsp	       120	progress.c	FUNCTION_6
0x4af	        0x4883ec20	                           sub rsp, 0x20	       120	progress.c	FUNCTION_6
0x4b3	        0x48897df8	                mov qword [rbp - 8], rdi	       120	progress.c	FUNCTION_6
0x4b7	        0x488975f0	             mov qword [rbp - 0x10], rsi	       120	progress.c	FUNCTION_6
0x4bb	          0x8955ec	             mov dword [rbp - 0x14], edx	       120	progress.c	FUNCTION_6
0x4be	        0x488b45f8	                mov rax, qword [rbp - 8]	       121	progress.c	FUNCTION_6	CALL_1
0x4c2	      0xbe00000000	                              mov esi, 0	       121	progress.c	FUNCTION_6	CALL_1
0x4c7	          0x4889c7	                            mov rdi, rax	       121	progress.c	FUNCTION_6	CALL_1
0x4ca	      0xe85dfbffff	                  call sym.strbuf_setlen	       121	progress.c	FUNCTION_6	CALL_1
0x4cf	        0x488b45f8	                mov rax, qword [rbp - 8]	       122	progress.c	FUNCTION_6	CALL_2
0x4d3	      0xbe00000000	                              mov esi, 0	       122	progress.c	FUNCTION_6	CALL_2
0x4d8	          0x4889c7	                            mov rdi, rax	       122	progress.c	FUNCTION_6	CALL_2
0x4db	      0xe8e6fbffff	                  call sym.strbuf_addstr	       122	progress.c	FUNCTION_6	CALL_2
0x4e0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       123	progress.c	FUNCTION_6	CALL_3
0x4e4	        0x488b45f8	                mov rax, qword [rbp - 8]	       123	progress.c	FUNCTION_6	CALL_3
0x4e8	          0x4889d6	                            mov rsi, rdx	       123	progress.c	FUNCTION_6	CALL_3
0x4eb	          0x4889c7	                            mov rdi, rax	       123	progress.c	FUNCTION_6	CALL_3
0x4ee	      0xe800000000	                          call 0x4000533	       123	progress.c	FUNCTION_6	CALL_3
0x4f3	        0x488b45f8	                mov rax, qword [rbp - 8]	       124	progress.c	FUNCTION_6	CALL_4
0x4f7	      0xbe00000000	                              mov esi, 0	       124	progress.c	FUNCTION_6	CALL_4
0x4fc	          0x4889c7	                            mov rdi, rax	       124	progress.c	FUNCTION_6	CALL_4
0x4ff	      0xe8c2fbffff	                  call sym.strbuf_addstr	       124	progress.c	FUNCTION_6	CALL_4
0x504	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       125	progress.c	FUNCTION_6	CALL_5
0x507	          0xc1e00a	                            shl eax, 0xa	       125	progress.c	FUNCTION_6	CALL_5
0x50a	            0x89c2	                            mov edx, eax	       125	progress.c	FUNCTION_6	CALL_5
0x50c	        0x488b45f8	                mov rax, qword [rbp - 8]	       125	progress.c	FUNCTION_6	CALL_5
0x510	          0x4889d6	                            mov rsi, rdx	       125	progress.c	FUNCTION_6	CALL_5
0x513	          0x4889c7	                            mov rdi, rax	       125	progress.c	FUNCTION_6	CALL_5
0x516	      0xe800000000	                          call 0x400055b	       125	progress.c	FUNCTION_6	CALL_5
0x51b	        0x488b45f8	                mov rax, qword [rbp - 8]	       126	progress.c	FUNCTION_6	CALL_6
0x51f	      0xbe00000000	                              mov esi, 0	       126	progress.c	FUNCTION_6	CALL_6
0x524	          0x4889c7	                            mov rdi, rax	       126	progress.c	FUNCTION_6	CALL_6
0x527	      0xe89afbffff	                  call sym.strbuf_addstr	       126	progress.c	FUNCTION_6	CALL_6
0x52c	              0x90	                                     nop	       127	progress.c	FUNCTION_6
0x52d	              0xc9	                                   leave	       127	progress.c	FUNCTION_6
0x52e	              0xc3	                                     ret	       127	progress.c	FUNCTION_6
stop_progress_msg	WHILE,0:FOR,0:DO,0:CALL,9:ELSE,0:IF,4:functions,0:SWITCH,0	88
0x8da	              0x55	                                push rbp	       233	progress.c	FUNCTION_13
0x8db	          0x4889e5	                            mov rbp, rsp	       233	progress.c	FUNCTION_13
0x8de	        0x4883ec40	                           sub rsp, 0x40	       233	progress.c	FUNCTION_13
0x8e2	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       233	progress.c	FUNCTION_13
0x8e6	        0x488975c0	             mov qword [rbp - 0x40], rsi	       233	progress.c	FUNCTION_13
0x8ea	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       234	progress.c	FUNCTION_13
0x8ee	          0x488b00	                    mov rax, qword [rax]	       234	progress.c	FUNCTION_13
0x8f1	        0x488945e0	             mov qword [rbp - 0x20], rax	       234	progress.c	FUNCTION_13
0x8f5	      0x48837de000	               cmp qword [rbp - 0x20], 0	       235	progress.c	FUNCTION_13	IF_1
0x8fa	     0xf8426010000	                            je 0x4000a66	       235	progress.c	FUNCTION_13	IF_1
0x900	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       237	progress.c	FUNCTION_13
0x904	    0x48c700000000	                      mov qword [rax], 0	       237	progress.c	FUNCTION_13
0x90b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       238	progress.c	FUNCTION_13	IF_2
0x90f	        0x488b4008	                mov rax, qword [rax + 8]	       238	progress.c	FUNCTION_13	IF_2
0x913	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       238	progress.c	FUNCTION_13	IF_2
0x917	     0xf84c5000000	                            je 0x4000a22	       238	progress.c	FUNCTION_13	IF_2
0x91d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       241	progress.c	FUNCTION_13	IF_2
0x921	        0x488b4020	            mov rax, qword [rax + 0x20] 	       241	progress.c	FUNCTION_13	IF_2
0x925	        0x488945e8	             mov qword [rbp - 0x18], rax	       241	progress.c	FUNCTION_13	IF_2
0x929	      0x48837de800	               cmp qword [rbp - 0x18], 0	       243	progress.c	FUNCTION_13	IF_2	IF_3
0x92e	            0x7467	                            je 0x40009d7	       243	progress.c	FUNCTION_13	IF_2	IF_3
0x930	      0xe800000000	                          call 0x4000975	       244	progress.c	FUNCTION_13	IF_2	IF_3	CALL_1
0x935	        0x488945f0	             mov qword [rbp - 0x10], rax	       244	progress.c	FUNCTION_13	IF_2	IF_3	CALL_1
0x939	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       246	progress.c	FUNCTION_13	IF_2	IF_3
0x93d	        0x488b4028	            mov rax, qword [rax + 0x28] 	       246	progress.c	FUNCTION_13	IF_2	IF_3
0x941	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       246	progress.c	FUNCTION_13	IF_2	IF_3
0x945	          0x4829c2	                            sub rdx, rax	       246	progress.c	FUNCTION_13	IF_2	IF_3
0x948	          0x4889d0	                            mov rax, rdx	       246	progress.c	FUNCTION_13	IF_2	IF_3
0x94b	    0x4869c02e1100	                   imul rax, rax, 0x112e	       246	progress.c	FUNCTION_13	IF_2	IF_3
0x952	        0x48c1e820	                           shr rax, 0x20	       246	progress.c	FUNCTION_13	IF_2	IF_3
0x956	          0x8945d8	             mov dword [rbp - 0x28], eax	       246	progress.c	FUNCTION_13	IF_2	IF_3
0x959	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       247	progress.c	FUNCTION_13	IF_2	IF_3
0x95d	          0x488b00	                    mov rax, qword [rax]	       247	progress.c	FUNCTION_13	IF_2	IF_3
0x960	        0x837dd800	               cmp dword [rbp - 0x28], 0	       247	progress.c	FUNCTION_13	IF_2	IF_3
0x964	            0x7405	                            je 0x40009ab	       247	progress.c	FUNCTION_13	IF_2	IF_3
0x966	          0x8b4dd8	             mov ecx, dword [rbp - 0x28]	       247	progress.c	FUNCTION_13	IF_2	IF_3
0x969	            0xeb05	                           jmp 0x40009b0	       247	progress.c	FUNCTION_13	IF_2	IF_3
0x96b	      0xb901000000	                              mov ecx, 1	       247	progress.c	FUNCTION_13	IF_2	IF_3
0x970	            0x4899	                                     cqo	       247	progress.c	FUNCTION_13	IF_2	IF_3
0x972	          0x48f7f9	                                idiv rcx	       247	progress.c	FUNCTION_13	IF_2	IF_3
0x975	          0x8945dc	             mov dword [rbp - 0x24], eax	       247	progress.c	FUNCTION_13	IF_2	IF_3
0x978	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       248	progress.c	FUNCTION_13	IF_2	IF_3	CALL_2
0x97c	          0x488b00	                    mov rax, qword [rax]	       248	progress.c	FUNCTION_13	IF_2	IF_3	CALL_2
0x97f	          0x4889c6	                            mov rsi, rax	       248	progress.c	FUNCTION_13	IF_2	IF_3	CALL_2
0x982	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       248	progress.c	FUNCTION_13	IF_2	IF_3	CALL_2
0x986	        0x488d4868	                   lea rcx, [rax + 0x68]	       248	progress.c	FUNCTION_13	IF_2	IF_3	CALL_2
0x98a	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       248	progress.c	FUNCTION_13	IF_2	IF_3	CALL_2
0x98d	            0x89c2	                            mov edx, eax	       248	progress.c	FUNCTION_13	IF_2	IF_3	CALL_2
0x98f	          0x4889cf	                            mov rdi, rcx	       248	progress.c	FUNCTION_13	IF_2	IF_3	CALL_2
0x992	      0xe814fbffff	              call sym.throughput_string	       248	progress.c	FUNCTION_13	IF_2	IF_3	CALL_2
0x997	    0xc70500000000	               mov dword [0x040009e1], 1	       250	progress.c	FUNCTION_13	IF_2
0x9a1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       251	progress.c	FUNCTION_13	IF_2	CALL_3
0x9a5	          0x4889c6	                            mov rsi, rax	       251	progress.c	FUNCTION_13	IF_2	CALL_3
0x9a8	      0xbf00000000	                              mov edi, 0	       251	progress.c	FUNCTION_13	IF_2	CALL_3
0x9ad	      0xb800000000	                              mov eax, 0	       251	progress.c	FUNCTION_13	IF_2	CALL_3
0x9b2	      0xe800000000	                          call 0x40009f7	       251	progress.c	FUNCTION_13	IF_2	CALL_3
0x9b7	        0x488945f8	                mov qword [rbp - 8], rax	       251	progress.c	FUNCTION_13	IF_2	CALL_3
0x9bb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       252	progress.c	FUNCTION_13	IF_2	CALL_4
0x9bf	        0x488b4808	                mov rcx, qword [rax + 8]	       252	progress.c	FUNCTION_13	IF_2	CALL_4
0x9c3	        0x488b55f8	                mov rdx, qword [rbp - 8]	       252	progress.c	FUNCTION_13	IF_2	CALL_4
0x9c7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       252	progress.c	FUNCTION_13	IF_2	CALL_4
0x9cb	          0x4889ce	                            mov rsi, rcx	       252	progress.c	FUNCTION_13	IF_2	CALL_4
0x9ce	          0x4889c7	                            mov rdi, rax	       252	progress.c	FUNCTION_13	IF_2	CALL_4
0x9d1	      0xe8cef8ffff	                        call sym.display	       252	progress.c	FUNCTION_13	IF_2	CALL_4
0x9d6	        0x488b45f8	                mov rax, qword [rbp - 8]	       253	progress.c	FUNCTION_13	IF_2	CALL_5
0x9da	          0x4889c7	                            mov rdi, rax	       253	progress.c	FUNCTION_13	IF_2	CALL_5
0x9dd	      0xe800000000	                          call 0x4000a22	       253	progress.c	FUNCTION_13	IF_2	CALL_5
0x9e2	      0xe805f8ffff	          call sym.clear_progress_signal	       255	progress.c	FUNCTION_13	CALL_6
0x9e7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       256	progress.c	FUNCTION_13	IF_4
0x9eb	        0x488b4020	            mov rax, qword [rax + 0x20] 	       256	progress.c	FUNCTION_13	IF_4
0x9ef	          0x4885c0	                           test rax, rax	       256	progress.c	FUNCTION_13	IF_4
0x9f2	            0x7414	                            je 0x4000a48	       256	progress.c	FUNCTION_13	IF_4
0x9f4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       257	progress.c	FUNCTION_13	CALL_7
0x9f8	        0x488b4020	            mov rax, qword [rax + 0x20] 	       257	progress.c	FUNCTION_13	CALL_7
0x9fc	        0x4883c068	                           add rax, 0x68	       257	progress.c	FUNCTION_13	CALL_7
0xa00	          0x4889c7	                            mov rdi, rax	       257	progress.c	FUNCTION_13	CALL_7
0xa03	      0xe800000000	                          call 0x4000a48	       257	progress.c	FUNCTION_13	CALL_7
0xa08	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       258	progress.c	FUNCTION_13	CALL_8
0xa0c	        0x488b4020	            mov rax, qword [rax + 0x20] 	       258	progress.c	FUNCTION_13	CALL_8
0xa10	          0x4889c7	                            mov rdi, rax	       258	progress.c	FUNCTION_13	CALL_8
0xa13	      0xe800000000	                          call 0x4000a58	       258	progress.c	FUNCTION_13	CALL_8
0xa18	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       259	progress.c	FUNCTION_13	CALL_9
0xa1c	          0x4889c7	                            mov rdi, rax	       259	progress.c	FUNCTION_13	CALL_9
0xa1f	      0xe800000000	                          call 0x4000a64	       259	progress.c	FUNCTION_13	CALL_9
0xa24	            0xeb01	                           jmp 0x4000a67	       259	progress.c	FUNCTION_13	CALL_9
0xa26	              0x90	                                     nop	       236	progress.c	FUNCTION_13	IF_1
0xa27	              0xc9	                                   leave	       260	progress.c	FUNCTION_13
0xa28	              0xc3	                                     ret	       260	progress.c	FUNCTION_13
start_progress_delay	WHILE,0:FOR,0:DO,0:CALL,5:ELSE,0:IF,1:functions,0:SWITCH,0	45
0x7a1	              0x55	                                push rbp	       198	progress.c	FUNCTION_9
0x7a2	          0x4889e5	                            mov rbp, rsp	       198	progress.c	FUNCTION_9
0x7a5	        0x4883ec30	                           sub rsp, 0x30	       198	progress.c	FUNCTION_9
0x7a9	        0x48897de8	             mov qword [rbp - 0x18], rdi	       198	progress.c	FUNCTION_9
0x7ad	        0x488975e0	             mov qword [rbp - 0x20], rsi	       198	progress.c	FUNCTION_9
0x7b1	          0x8955dc	             mov dword [rbp - 0x24], edx	       198	progress.c	FUNCTION_9
0x7b4	      0xbf30000000	                           mov edi, 0x30	       199	progress.c	FUNCTION_9	CALL_1
0x7b9	      0xe800000000	                          call 0x40007fe	       199	progress.c	FUNCTION_9	CALL_1
0x7be	        0x488945f8	                mov qword [rbp - 8], rax	       199	progress.c	FUNCTION_9	CALL_1
0x7c2	      0x48837df800	                  cmp qword [rbp - 8], 0	       200	progress.c	FUNCTION_9	IF_1
0x7c7	            0x7533	                           jne 0x400083c	       200	progress.c	FUNCTION_9	IF_1
0x7c9	    0x488b05000000	            mov rax, qword [0x04000810] 	       202	progress.c	FUNCTION_9	IF_1	CALL_2
0x7d0	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       202	progress.c	FUNCTION_9	IF_1	CALL_2
0x7d4	      0xbe00000000	                              mov esi, 0	       202	progress.c	FUNCTION_9	IF_1	CALL_2
0x7d9	          0x4889c7	                            mov rdi, rax	       202	progress.c	FUNCTION_9	IF_1	CALL_2
0x7dc	      0xb800000000	                              mov eax, 0	       202	progress.c	FUNCTION_9	IF_1	CALL_2
0x7e1	      0xe800000000	                          call 0x4000826	       202	progress.c	FUNCTION_9	IF_1	CALL_2
0x7e6	    0x488b05000000	            mov rax, qword [0x0400082d] 	       203	progress.c	FUNCTION_9	IF_1	CALL_3
0x7ed	          0x4889c7	                            mov rdi, rax	       203	progress.c	FUNCTION_9	IF_1	CALL_3
0x7f0	      0xe800000000	                          call 0x4000835	       203	progress.c	FUNCTION_9	IF_1	CALL_3
0x7f5	      0xb800000000	                              mov eax, 0	       204	progress.c	FUNCTION_9	IF_1
0x7fa	            0xeb5d	                           jmp 0x4000899	       204	progress.c	FUNCTION_9	IF_1
0x7fc	        0x488b45f8	                mov rax, qword [rbp - 8]	       206	progress.c	FUNCTION_9
0x800	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       206	progress.c	FUNCTION_9
0x804	          0x488910	                    mov qword [rax], rdx	       206	progress.c	FUNCTION_9
0x807	        0x488b45f8	                mov rax, qword [rbp - 8]	       207	progress.c	FUNCTION_9
0x80b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       207	progress.c	FUNCTION_9
0x80f	        0x48895010	             mov qword [rax + 0x10], rdx	       207	progress.c	FUNCTION_9
0x813	        0x488b45f8	                mov rax, qword [rbp - 8]	       208	progress.c	FUNCTION_9
0x817	    0x48c74008ffff	 mov qword [rax + 8], 0xffffffffffffffff	       208	progress.c	FUNCTION_9
0x81f	        0x488b45f8	                mov rax, qword [rbp - 8]	       209	progress.c	FUNCTION_9
0x823	    0xc74018ffffff	     mov dword [rax + 0x18], 0xffffffff 	       209	progress.c	FUNCTION_9
0x82a	        0x488b45f8	                mov rax, qword [rbp - 8]	       210	progress.c	FUNCTION_9
0x82e	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       210	progress.c	FUNCTION_9
0x831	          0x89501c	             mov dword [rax + 0x1c], edx	       210	progress.c	FUNCTION_9
0x834	        0x488b45f8	                mov rax, qword [rbp - 8]	       211	progress.c	FUNCTION_9
0x838	    0x48c740200000	               mov qword [rax + 0x20], 0	       211	progress.c	FUNCTION_9
0x840	      0xe800000000	                          call 0x4000885	       212	progress.c	FUNCTION_9	CALL_4
0x845	          0x4889c2	                            mov rdx, rax	       212	progress.c	FUNCTION_9	CALL_4
0x848	        0x488b45f8	                mov rax, qword [rbp - 8]	       212	progress.c	FUNCTION_9	CALL_4
0x84c	        0x48895028	             mov qword [rax + 0x28], rdx	       212	progress.c	FUNCTION_9	CALL_4
0x850	      0xe8baf8ffff	            call sym.set_progress_signal	       213	progress.c	FUNCTION_9	CALL_5
0x855	        0x488b45f8	                mov rax, qword [rbp - 8]	       214	progress.c	FUNCTION_9
0x859	              0xc9	                                   leave	       215	progress.c	FUNCTION_9
0x85a	              0xc3	                                     ret	       215	progress.c	FUNCTION_9
set_progress_signal	WHILE,0:FOR,0:DO,0:CALL,4:ELSE,0:IF,0:functions,0:SWITCH,0	41
0x10f	              0x55	                                push rbp	        49	progress.c	FUNCTION_2
0x110	          0x4889e5	                            mov rbp, rsp	        49	progress.c	FUNCTION_2
0x113	    0x4881ecc00000	                           sub rsp, 0xc0	        49	progress.c	FUNCTION_2
0x11a	    0x64488b042528	                mov rax, qword fs:[0x28]	        49	progress.c	FUNCTION_2
0x123	        0x488945f8	                mov qword [rbp - 8], rax	        49	progress.c	FUNCTION_2
0x127	            0x31c0	                            xor eax, eax	        49	progress.c	FUNCTION_2
0x129	    0xc70500000000	               mov dword [0x04000173], 0	        53	progress.c	FUNCTION_2
0x133	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	        55	progress.c	FUNCTION_2	CALL_1
0x13a	      0xba98000000	                           mov edx, 0x98	        55	progress.c	FUNCTION_2	CALL_1
0x13f	      0xbe00000000	                              mov esi, 0	        55	progress.c	FUNCTION_2	CALL_1
0x144	          0x4889c7	                            mov rdi, rax	        55	progress.c	FUNCTION_2	CALL_1
0x147	      0xe800000000	                          call 0x400018c	        55	progress.c	FUNCTION_2	CALL_1
0x14c	    0x48c78560ffff	               mov qword [rbp - 0xa0], 0	        56	progress.c	FUNCTION_2
0x157	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	        57	progress.c	FUNCTION_2	CALL_2
0x15e	        0x4883c008	                              add rax, 8	        57	progress.c	FUNCTION_2	CALL_2
0x162	          0x4889c7	                            mov rdi, rax	        57	progress.c	FUNCTION_2	CALL_2
0x165	      0xe800000000	                          call 0x40001aa	        57	progress.c	FUNCTION_2	CALL_2
0x16a	    0xc745e8000000	      mov dword [rbp - 0x18], 0x10000000	        58	progress.c	FUNCTION_2
0x171	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	        59	progress.c	FUNCTION_2	CALL_3
0x178	      0xba00000000	                              mov edx, 0	        59	progress.c	FUNCTION_2	CALL_3
0x17d	          0x4889c6	                            mov rsi, rax	        59	progress.c	FUNCTION_2	CALL_3
0x180	      0xbf0e000000	                            mov edi, 0xe	        59	progress.c	FUNCTION_2	CALL_3
0x185	      0xe800000000	                          call 0x40001ca	        59	progress.c	FUNCTION_2	CALL_3
0x18a	    0x48c78540ffff	               mov qword [rbp - 0xc0], 1	        61	progress.c	FUNCTION_2
0x195	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	        62	progress.c	FUNCTION_2
0x1a0	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	        63	progress.c	FUNCTION_2
0x1a7	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	        63	progress.c	FUNCTION_2
0x1ae	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	        63	progress.c	FUNCTION_2
0x1b5	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	        63	progress.c	FUNCTION_2
0x1bc	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	        64	progress.c	FUNCTION_2	CALL_4
0x1c3	      0xba00000000	                              mov edx, 0	        64	progress.c	FUNCTION_2	CALL_4
0x1c8	          0x4889c6	                            mov rsi, rax	        64	progress.c	FUNCTION_2	CALL_4
0x1cb	      0xbf00000000	                              mov edi, 0	        64	progress.c	FUNCTION_2	CALL_4
0x1d0	      0xe800000000	                          call 0x4000215	        64	progress.c	FUNCTION_2	CALL_4
0x1d5	              0x90	                                     nop	        65	progress.c	FUNCTION_2
0x1d6	        0x488b45f8	                mov rax, qword [rbp - 8]	        65	progress.c	FUNCTION_2
0x1da	    0x644833042528	                xor rax, qword fs:[0x28]	        65	progress.c	FUNCTION_2
0x1e3	            0x7405	                            je 0x400022a	        65	progress.c	FUNCTION_2
0x1e5	      0xe800000000	                          call 0x400022a	        65	progress.c	FUNCTION_2
0x1ea	              0xc9	                                   leave	        65	progress.c	FUNCTION_2
0x1eb	              0xc3	                                     ret	        65	progress.c	FUNCTION_2
clear_progress_signal	WHILE,0:FOR,0:DO,0:CALL,2:ELSE,0:IF,0:functions,0:SWITCH,0	26
0x1ec	              0x55	                                push rbp	        68	progress.c	FUNCTION_3
0x1ed	          0x4889e5	                            mov rbp, rsp	        68	progress.c	FUNCTION_3
0x1f0	        0x4883ec30	                           sub rsp, 0x30	        68	progress.c	FUNCTION_3
0x1f4	    0x64488b042528	                mov rax, qword fs:[0x28]	        68	progress.c	FUNCTION_3
0x1fd	        0x488945f8	                mov qword [rbp - 8], rax	        68	progress.c	FUNCTION_3
0x201	            0x31c0	                            xor eax, eax	        68	progress.c	FUNCTION_3
0x203	    0x48c745d00000	               mov qword [rbp - 0x30], 0	        69	progress.c	FUNCTION_3
0x20b	    0x48c745d80000	               mov qword [rbp - 0x28], 0	        69	progress.c	FUNCTION_3
0x213	    0x48c745e00000	               mov qword [rbp - 0x20], 0	        69	progress.c	FUNCTION_3
0x21b	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        69	progress.c	FUNCTION_3
0x223	        0x488d45d0	                   lea rax, [rbp - 0x30]	        70	progress.c	FUNCTION_3	CALL_1
0x227	      0xba00000000	                              mov edx, 0	        70	progress.c	FUNCTION_3	CALL_1
0x22c	          0x4889c6	                            mov rsi, rax	        70	progress.c	FUNCTION_3	CALL_1
0x22f	      0xbf00000000	                              mov edi, 0	        70	progress.c	FUNCTION_3	CALL_1
0x234	      0xe800000000	                          call 0x4000279	        70	progress.c	FUNCTION_3	CALL_1
0x239	      0xbe01000000	                              mov esi, 1	        71	progress.c	FUNCTION_3	CALL_2
0x23e	      0xbf0e000000	                            mov edi, 0xe	        71	progress.c	FUNCTION_3	CALL_2
0x243	      0xe800000000	                          call 0x4000288	        71	progress.c	FUNCTION_3	CALL_2
0x248	    0xc70500000000	               mov dword [0x04000292], 0	        72	progress.c	FUNCTION_3
0x252	              0x90	                                     nop	        73	progress.c	FUNCTION_3
0x253	        0x488b45f8	                mov rax, qword [rbp - 8]	        73	progress.c	FUNCTION_3
0x257	    0x644833042528	                xor rax, qword fs:[0x28]	        73	progress.c	FUNCTION_3
0x260	            0x7405	                            je 0x40002a7	        73	progress.c	FUNCTION_3
0x262	      0xe800000000	                          call 0x40002a7	        73	progress.c	FUNCTION_3
0x267	              0xc9	                                   leave	        73	progress.c	FUNCTION_3
0x268	              0xc3	                                     ret	        73	progress.c	FUNCTION_3
start_delayed_progress	WHILE,0:FOR,0:DO,0:CALL,1:ELSE,0:IF,0:functions,0:SWITCH,0	13
0x85b	              0x55	                                push rbp	       218	progress.c	FUNCTION_10
0x85c	          0x4889e5	                            mov rbp, rsp	       218	progress.c	FUNCTION_10
0x85f	        0x4883ec10	                           sub rsp, 0x10	       218	progress.c	FUNCTION_10
0x863	        0x48897df8	                mov qword [rbp - 8], rdi	       218	progress.c	FUNCTION_10
0x867	        0x488975f0	             mov qword [rbp - 0x10], rsi	       218	progress.c	FUNCTION_10
0x86b	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       219	progress.c	FUNCTION_10	CALL_1
0x86f	        0x488b45f8	                mov rax, qword [rbp - 8]	       219	progress.c	FUNCTION_10	CALL_1
0x873	      0xba02000000	                              mov edx, 2	       219	progress.c	FUNCTION_10	CALL_1
0x878	          0x4889ce	                            mov rsi, rcx	       219	progress.c	FUNCTION_10	CALL_1
0x87b	          0x4889c7	                            mov rdi, rax	       219	progress.c	FUNCTION_10	CALL_1
0x87e	      0xe81effffff	           call sym.start_progress_delay	       219	progress.c	FUNCTION_10	CALL_1
0x883	              0xc9	                                   leave	       220	progress.c	FUNCTION_10
0x884	              0xc3	                                     ret	       220	progress.c	FUNCTION_10
stop_progress	WHILE,0:FOR,0:DO,0:CALL,2:ELSE,0:IF,0:functions,0:SWITCH,0	14
0x8af	              0x55	                                push rbp	       228	progress.c	FUNCTION_12
0x8b0	          0x4889e5	                            mov rbp, rsp	       228	progress.c	FUNCTION_12
0x8b3	        0x4883ec10	                           sub rsp, 0x10	       228	progress.c	FUNCTION_12
0x8b7	        0x48897df8	                mov qword [rbp - 8], rdi	       228	progress.c	FUNCTION_12
0x8bb	      0xbf00000000	                              mov edi, 0	       229	progress.c	FUNCTION_12	CALL_2
0x8c0	      0xe83bf7ffff	                          call 0x4000040	       229	progress.c	FUNCTION_12	CALL_2
0x8c5	          0x4889c2	                            mov rdx, rax	       229	progress.c	FUNCTION_12	CALL_2
0x8c8	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	progress.c	FUNCTION_12	CALL_2
0x8cc	          0x4889d6	                            mov rsi, rdx	       229	progress.c	FUNCTION_12	CALL_2
0x8cf	          0x4889c7	                            mov rdi, rax	       229	progress.c	FUNCTION_12	CALL_2
0x8d2	      0xe800000000	                          call 0x4000917	       229	progress.c	FUNCTION_12	CALL_2
0x8d7	              0x90	                                     nop	       230	progress.c	FUNCTION_12
0x8d8	              0xc9	                                   leave	       230	progress.c	FUNCTION_12
0x8d9	              0xc3	                                     ret	       230	progress.c	FUNCTION_12
display_progress	WHILE,0:FOR,0:DO,0:CALL,1:ELSE,0:IF,0:functions,0:SWITCH,0	17
0x769	              0x55	                                push rbp	       192	progress.c	FUNCTION_8
0x76a	          0x4889e5	                            mov rbp, rsp	       192	progress.c	FUNCTION_8
0x76d	        0x4883ec10	                           sub rsp, 0x10	       192	progress.c	FUNCTION_8
0x771	        0x48897df8	                mov qword [rbp - 8], rdi	       192	progress.c	FUNCTION_8
0x775	        0x488975f0	             mov qword [rbp - 0x10], rsi	       192	progress.c	FUNCTION_8
0x779	      0x48837df800	                  cmp qword [rbp - 8], 0	       193	progress.c	FUNCTION_8	CALL_1
0x77e	            0x741a	                            je 0x40007da	       193	progress.c	FUNCTION_8	CALL_1
0x780	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       193	progress.c	FUNCTION_8	CALL_1
0x784	        0x488b45f8	                mov rax, qword [rbp - 8]	       193	progress.c	FUNCTION_8	CALL_1
0x788	      0xba00000000	                              mov edx, 0	       193	progress.c	FUNCTION_8	CALL_1
0x78d	          0x4889ce	                            mov rsi, rcx	       193	progress.c	FUNCTION_8	CALL_1
0x790	          0x4889c7	                            mov rdi, rax	       193	progress.c	FUNCTION_8	CALL_1
0x793	      0xe80cfbffff	                        call sym.display	       193	progress.c	FUNCTION_8	CALL_1
0x798	            0xeb05	                           jmp 0x40007df	       193	progress.c	FUNCTION_8	CALL_1
0x79a	      0xb800000000	                              mov eax, 0	       193	progress.c	FUNCTION_8	CALL_1
0x79f	              0xc9	                                   leave	       194	progress.c	FUNCTION_8
0x7a0	              0xc3	                                     ret	       194	progress.c	FUNCTION_8
progress_interval	WHILE,0:FOR,0:DO,0:CALL,0:ELSE,0:IF,0:functions,0:SWITCH,0	7
0xfb	              0x55	                                push rbp	        44	progress.c	FUNCTION_1
0xfc	          0x4889e5	                            mov rbp, rsp	        44	progress.c	FUNCTION_1
0xff	          0x897dfc	                mov dword [rbp - 4], edi	        44	progress.c	FUNCTION_1
0x102	    0xc70500000000	               mov dword [0x0400014c], 1	        45	progress.c	FUNCTION_1
0x10c	              0x90	                                     nop	        46	progress.c	FUNCTION_1
0x10d	              0x5d	                                 pop rbp	        46	progress.c	FUNCTION_1
0x10e	              0xc3	                                     ret	        46	progress.c	FUNCTION_1
is_foreground_fd	WHILE,0:FOR,0:DO,0:CALL,2:ELSE,0:IF,0:functions,0:SWITCH,0	19
0x269	              0x55	                                push rbp	        76	progress.c	FUNCTION_4
0x26a	          0x4889e5	                            mov rbp, rsp	        76	progress.c	FUNCTION_4
0x26d	        0x4883ec20	                           sub rsp, 0x20	        76	progress.c	FUNCTION_4
0x271	          0x897dec	             mov dword [rbp - 0x14], edi	        76	progress.c	FUNCTION_4
0x274	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        77	progress.c	FUNCTION_4	CALL_1
0x277	            0x89c7	                            mov edi, eax	        77	progress.c	FUNCTION_4	CALL_1
0x279	      0xe800000000	                          call 0x40002be	        77	progress.c	FUNCTION_4	CALL_1
0x27e	          0x8945fc	                mov dword [rbp - 4], eax	        77	progress.c	FUNCTION_4	CALL_1
0x281	        0x837dfc00	                  cmp dword [rbp - 4], 0	        78	progress.c	FUNCTION_4	CALL_2
0x285	            0x780f	                            js 0x40002d6	        78	progress.c	FUNCTION_4	CALL_2
0x287	      0xbf00000000	                              mov edi, 0	        78	progress.c	FUNCTION_4	CALL_2
0x28c	      0xe800000000	                          call 0x40002d1	        78	progress.c	FUNCTION_4	CALL_2
0x291	          0x3b45fc	                cmp eax, dword [rbp - 4]	        78	progress.c	FUNCTION_4	CALL_2
0x294	            0x7507	                           jne 0x40002dd	        78	progress.c	FUNCTION_4	CALL_2
0x296	      0xb801000000	                              mov eax, 1	        78	progress.c	FUNCTION_4	CALL_2
0x29b	            0xeb05	                           jmp 0x40002e2	        78	progress.c	FUNCTION_4	CALL_2
0x29d	      0xb800000000	                              mov eax, 0	        78	progress.c	FUNCTION_4	CALL_2
0x2a2	              0xc9	                                   leave	        79	progress.c	FUNCTION_4
0x2a3	              0xc3	                                     ret	        79	progress.c	FUNCTION_4
display_throughput	WHILE,0:FOR,0:DO,0:CALL,5:ELSE,0:IF,5:functions,0:SWITCH,0	161
0x52f	              0x55	                                push rbp	       130	progress.c	FUNCTION_7
0x530	          0x4889e5	                            mov rbp, rsp	       130	progress.c	FUNCTION_7
0x533	        0x4883ec30	                           sub rsp, 0x30	       130	progress.c	FUNCTION_7
0x537	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       130	progress.c	FUNCTION_7
0x53b	        0x488975d0	             mov qword [rbp - 0x30], rsi	       130	progress.c	FUNCTION_7
0x53f	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       135	progress.c	FUNCTION_7	IF_1
0x544	     0xf8416020000	                            je 0x40007a0	       135	progress.c	FUNCTION_7	IF_1
0x54a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       137	progress.c	FUNCTION_7
0x54e	        0x488b4020	            mov rax, qword [rax + 0x20] 	       137	progress.c	FUNCTION_7
0x552	        0x488945f0	             mov qword [rbp - 0x10], rax	       137	progress.c	FUNCTION_7
0x556	      0xe800000000	                          call 0x400059b	       139	progress.c	FUNCTION_7	CALL_1
0x55b	        0x488945f8	                mov qword [rbp - 8], rax	       139	progress.c	FUNCTION_7	CALL_1
0x55f	      0x48837df000	               cmp qword [rbp - 0x10], 0	       141	progress.c	FUNCTION_7	IF_2
0x564	            0x756a	                           jne 0x4000610	       141	progress.c	FUNCTION_7	IF_2
0x566	      0xbe80000000	                           mov esi, 0x80	       142	progress.c	FUNCTION_7	IF_2	CALL_2
0x56b	      0xbf01000000	                              mov edi, 1	       142	progress.c	FUNCTION_7	IF_2	CALL_2
0x570	      0xe800000000	                          call 0x40005b5	       142	progress.c	FUNCTION_7	IF_2	CALL_2
0x575	        0x488945f0	             mov qword [rbp - 0x10], rax	       142	progress.c	FUNCTION_7	IF_2	CALL_2
0x579	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       142	progress.c	FUNCTION_7	IF_2	CALL_2
0x57d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       142	progress.c	FUNCTION_7	IF_2	CALL_2
0x581	        0x48895020	             mov qword [rax + 0x20], rdx	       142	progress.c	FUNCTION_7	IF_2	CALL_2
0x585	      0x48837df000	               cmp qword [rbp - 0x10], 0	       143	progress.c	FUNCTION_7	IF_2	IF_3
0x58a	     0xf84d3010000	                            je 0x40007a3	       143	progress.c	FUNCTION_7	IF_2	IF_3
0x590	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       144	progress.c	FUNCTION_7	IF_2	IF_3
0x594	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       144	progress.c	FUNCTION_7	IF_2	IF_3
0x598	          0x488910	                    mov qword [rax], rdx	       144	progress.c	FUNCTION_7	IF_2	IF_3
0x59b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       144	progress.c	FUNCTION_7	IF_2	IF_3
0x59f	          0x488b10	                    mov rdx, qword [rax]	       144	progress.c	FUNCTION_7	IF_2	IF_3
0x5a2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       144	progress.c	FUNCTION_7	IF_2	IF_3
0x5a6	        0x48895008	                mov qword [rax + 8], rdx	       144	progress.c	FUNCTION_7	IF_2	IF_3
0x5aa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       145	progress.c	FUNCTION_7	IF_2	IF_3
0x5ae	        0x488b55f8	                mov rdx, qword [rbp - 8]	       145	progress.c	FUNCTION_7	IF_2	IF_3
0x5b2	        0x48895010	             mov qword [rax + 0x10], rdx	       145	progress.c	FUNCTION_7	IF_2	IF_3
0x5b6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       146	progress.c	FUNCTION_7	IF_2	IF_3	CALL_3
0x5ba	        0x4883c068	                           add rax, 0x68	       146	progress.c	FUNCTION_7	IF_2	IF_3	CALL_3
0x5be	      0xbe00000000	                              mov esi, 0	       146	progress.c	FUNCTION_7	IF_2	IF_3	CALL_3
0x5c3	          0x4889c7	                            mov rdi, rax	       146	progress.c	FUNCTION_7	IF_2	IF_3	CALL_3
0x5c6	      0xe800000000	                          call 0x400060b	       146	progress.c	FUNCTION_7	IF_2	IF_3	CALL_3
0x5cb	      0xe993010000	                           jmp 0x40007a3	       148	progress.c	FUNCTION_7	IF_2
0x5d0	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       150	progress.c	FUNCTION_7
0x5d4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       150	progress.c	FUNCTION_7
0x5d8	          0x488910	                    mov qword [rax], rdx	       150	progress.c	FUNCTION_7
0x5db	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       153	progress.c	FUNCTION_7	IF_4
0x5df	        0x488b4010	            mov rax, qword [rax + 0x10] 	       153	progress.c	FUNCTION_7	IF_4
0x5e3	        0x488b55f8	                mov rdx, qword [rbp - 8]	       153	progress.c	FUNCTION_7	IF_4
0x5e7	          0x4829c2	                            sub rdx, rax	       153	progress.c	FUNCTION_7	IF_4
0x5ea	          0x4889d0	                            mov rax, rdx	       153	progress.c	FUNCTION_7	IF_4
0x5ed	    0x483d0065cd1d	                     cmp rax, 0x1dcd6500	       153	progress.c	FUNCTION_7	IF_4
0x5f3	     0xf866d010000	                           jbe 0x40007a6	       153	progress.c	FUNCTION_7	IF_4
0x5f9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       172	progress.c	FUNCTION_7
0x5fd	        0x488b4010	            mov rax, qword [rax + 0x10] 	       172	progress.c	FUNCTION_7
0x601	        0x488b55f8	                mov rdx, qword [rbp - 8]	       172	progress.c	FUNCTION_7
0x605	          0x4829c2	                            sub rdx, rax	       172	progress.c	FUNCTION_7
0x608	          0x4889d0	                            mov rax, rdx	       172	progress.c	FUNCTION_7
0x60b	    0x4869c02e1100	                   imul rax, rax, 0x112e	       172	progress.c	FUNCTION_7
0x612	        0x48c1e820	                           shr rax, 0x20	       172	progress.c	FUNCTION_7
0x616	          0x8945e4	             mov dword [rbp - 0x1c], eax	       172	progress.c	FUNCTION_7
0x619	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       174	progress.c	FUNCTION_7
0x61d	            0x89c2	                            mov edx, eax	       174	progress.c	FUNCTION_7
0x61f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       174	progress.c	FUNCTION_7
0x623	        0x488b4008	                mov rax, qword [rax + 8]	       174	progress.c	FUNCTION_7
0x627	            0x29c2	                            sub edx, eax	       174	progress.c	FUNCTION_7
0x629	            0x89d0	                            mov eax, edx	       174	progress.c	FUNCTION_7
0x62b	          0x8945e8	             mov dword [rbp - 0x18], eax	       174	progress.c	FUNCTION_7
0x62e	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       175	progress.c	FUNCTION_7
0x632	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       175	progress.c	FUNCTION_7
0x636	        0x48895008	                mov qword [rax + 8], rdx	       175	progress.c	FUNCTION_7
0x63a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       176	progress.c	FUNCTION_7
0x63e	        0x488b55f8	                mov rdx, qword [rbp - 8]	       176	progress.c	FUNCTION_7
0x642	        0x48895010	             mov qword [rax + 0x10], rdx	       176	progress.c	FUNCTION_7
0x646	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       177	progress.c	FUNCTION_7
0x64a	          0x8b5018	            mov edx, dword [rax + 0x18] 	       177	progress.c	FUNCTION_7
0x64d	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       177	progress.c	FUNCTION_7
0x650	             0x1c2	                            add edx, eax	       177	progress.c	FUNCTION_7
0x652	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       177	progress.c	FUNCTION_7
0x656	          0x895018	             mov dword [rax + 0x18], edx	       177	progress.c	FUNCTION_7
0x659	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       178	progress.c	FUNCTION_7
0x65d	          0x8b501c	            mov edx, dword [rax + 0x1c] 	       178	progress.c	FUNCTION_7
0x660	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       178	progress.c	FUNCTION_7
0x663	             0x1c2	                            add edx, eax	       178	progress.c	FUNCTION_7
0x665	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       178	progress.c	FUNCTION_7
0x669	          0x89501c	             mov dword [rax + 0x1c], edx	       178	progress.c	FUNCTION_7
0x66c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       179	progress.c	FUNCTION_7
0x670	          0x8b4018	            mov eax, dword [rax + 0x18] 	       179	progress.c	FUNCTION_7
0x673	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       179	progress.c	FUNCTION_7
0x677	          0x8b721c	            mov esi, dword [rdx + 0x1c] 	       179	progress.c	FUNCTION_7
0x67a	      0xba00000000	                              mov edx, 0	       179	progress.c	FUNCTION_7
0x67f	            0xf7f6	                                 div esi	       179	progress.c	FUNCTION_7
0x681	          0x8945ec	             mov dword [rbp - 0x14], eax	       179	progress.c	FUNCTION_7
0x684	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       180	progress.c	FUNCTION_7
0x688	          0x8b5018	            mov edx, dword [rax + 0x18] 	       180	progress.c	FUNCTION_7
0x68b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       180	progress.c	FUNCTION_7
0x68f	          0x8b4860	            mov ecx, dword [rax + 0x60] 	       180	progress.c	FUNCTION_7
0x692	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       180	progress.c	FUNCTION_7
0x696	            0x89c9	                            mov ecx, ecx	       180	progress.c	FUNCTION_7
0x698	        0x4883c108	                              add rcx, 8	       180	progress.c	FUNCTION_7
0x69c	          0x8b0488	            mov eax, dword [rax + rcx*4]	       180	progress.c	FUNCTION_7
0x69f	            0x29c2	                            sub edx, eax	       180	progress.c	FUNCTION_7
0x6a1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       180	progress.c	FUNCTION_7
0x6a5	          0x895018	             mov dword [rax + 0x18], edx	       180	progress.c	FUNCTION_7
0x6a8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       181	progress.c	FUNCTION_7
0x6ac	          0x8b501c	            mov edx, dword [rax + 0x1c] 	       181	progress.c	FUNCTION_7
0x6af	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       181	progress.c	FUNCTION_7
0x6b3	          0x8b4860	            mov ecx, dword [rax + 0x60] 	       181	progress.c	FUNCTION_7
0x6b6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       181	progress.c	FUNCTION_7
0x6ba	            0x89c9	                            mov ecx, ecx	       181	progress.c	FUNCTION_7
0x6bc	        0x4883c110	                           add rcx, 0x10	       181	progress.c	FUNCTION_7
0x6c0	          0x8b0488	            mov eax, dword [rax + rcx*4]	       181	progress.c	FUNCTION_7
0x6c3	            0x29c2	                            sub edx, eax	       181	progress.c	FUNCTION_7
0x6c5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       181	progress.c	FUNCTION_7
0x6c9	          0x89501c	             mov dword [rax + 0x1c], edx	       181	progress.c	FUNCTION_7
0x6cc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       182	progress.c	FUNCTION_7
0x6d0	          0x8b5060	            mov edx, dword [rax + 0x60] 	       182	progress.c	FUNCTION_7
0x6d3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       182	progress.c	FUNCTION_7
0x6d7	            0x89d2	                            mov edx, edx	       182	progress.c	FUNCTION_7
0x6d9	        0x488d4a08	                      lea rcx, [rdx + 8]	       182	progress.c	FUNCTION_7
0x6dd	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       182	progress.c	FUNCTION_7
0x6e0	          0x891488	            mov dword [rax + rcx*4], edx	       182	progress.c	FUNCTION_7
0x6e3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       183	progress.c	FUNCTION_7
0x6e7	          0x8b5060	            mov edx, dword [rax + 0x60] 	       183	progress.c	FUNCTION_7
0x6ea	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       183	progress.c	FUNCTION_7
0x6ee	            0x89d2	                            mov edx, edx	       183	progress.c	FUNCTION_7
0x6f0	        0x488d4a10	                   lea rcx, [rdx + 0x10]	       183	progress.c	FUNCTION_7
0x6f4	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       183	progress.c	FUNCTION_7
0x6f7	          0x891488	            mov dword [rax + rcx*4], edx	       183	progress.c	FUNCTION_7
0x6fa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       184	progress.c	FUNCTION_7
0x6fe	          0x8b4060	            mov eax, dword [rax + 0x60] 	       184	progress.c	FUNCTION_7
0x701	          0x83c001	                              add eax, 1	       184	progress.c	FUNCTION_7
0x704	          0x83e007	                              and eax, 7	       184	progress.c	FUNCTION_7
0x707	            0x89c2	                            mov edx, eax	       184	progress.c	FUNCTION_7
0x709	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       184	progress.c	FUNCTION_7
0x70d	          0x895060	             mov dword [rax + 0x60], edx	       184	progress.c	FUNCTION_7
0x710	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       186	progress.c	FUNCTION_7	CALL_4
0x714	        0x488d4868	                   lea rcx, [rax + 0x68]	       186	progress.c	FUNCTION_7	CALL_4
0x718	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       186	progress.c	FUNCTION_7	CALL_4
0x71b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       186	progress.c	FUNCTION_7	CALL_4
0x71f	          0x4889c6	                            mov rsi, rax	       186	progress.c	FUNCTION_7	CALL_4
0x722	          0x4889cf	                            mov rdi, rcx	       186	progress.c	FUNCTION_7	CALL_4
0x725	      0xe881fdffff	              call sym.throughput_string	       186	progress.c	FUNCTION_7	CALL_4
0x72a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       187	progress.c	FUNCTION_7	IF_5
0x72e	        0x488b4008	                mov rax, qword [rax + 8]	       187	progress.c	FUNCTION_7	IF_5
0x732	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       187	progress.c	FUNCTION_7	IF_5
0x736	            0x742f	                            je 0x40007a7	       187	progress.c	FUNCTION_7	IF_5
0x738	    0x8b0500000000	            mov eax, dword [0x0400077e] 	       187	progress.c	FUNCTION_7	IF_5
0x73e	            0x85c0	                           test eax, eax	       187	progress.c	FUNCTION_7	IF_5
0x740	            0x7425	                            je 0x40007a7	       187	progress.c	FUNCTION_7	IF_5
0x742	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       188	progress.c	FUNCTION_7	CALL_5
0x746	        0x488b4808	                mov rcx, qword [rax + 8]	       188	progress.c	FUNCTION_7	CALL_5
0x74a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       188	progress.c	FUNCTION_7	CALL_5
0x74e	      0xba00000000	                              mov edx, 0	       188	progress.c	FUNCTION_7	CALL_5
0x753	          0x4889ce	                            mov rsi, rcx	       188	progress.c	FUNCTION_7	CALL_5
0x756	          0x4889c7	                            mov rdi, rax	       188	progress.c	FUNCTION_7	CALL_5
0x759	      0xe846fbffff	                        call sym.display	       188	progress.c	FUNCTION_7	CALL_5
0x75e	            0xeb07	                           jmp 0x40007a7	       188	progress.c	FUNCTION_7	CALL_5
0x760	              0x90	                                     nop	       136	progress.c	FUNCTION_7	IF_1
0x761	            0xeb04	                           jmp 0x40007a7	       136	progress.c	FUNCTION_7	IF_1
0x763	              0x90	                                     nop	       148	progress.c	FUNCTION_7	IF_2
0x764	            0xeb01	                           jmp 0x40007a7	       148	progress.c	FUNCTION_7	IF_2
0x766	              0x90	                                     nop	       154	progress.c	FUNCTION_7	IF_4
0x767	              0xc9	                                   leave	       189	progress.c	FUNCTION_7
0x768	              0xc3	                                     ret	       189	progress.c	FUNCTION_7
start_progress	WHILE,0:FOR,0:DO,0:CALL,1:ELSE,0:IF,0:functions,0:SWITCH,0	13
0x885	              0x55	                                push rbp	       223	progress.c	FUNCTION_11
0x886	          0x4889e5	                            mov rbp, rsp	       223	progress.c	FUNCTION_11
0x889	        0x4883ec10	                           sub rsp, 0x10	       223	progress.c	FUNCTION_11
0x88d	        0x48897df8	                mov qword [rbp - 8], rdi	       223	progress.c	FUNCTION_11
0x891	        0x488975f0	             mov qword [rbp - 0x10], rsi	       223	progress.c	FUNCTION_11
0x895	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       224	progress.c	FUNCTION_11	CALL_1
0x899	        0x488b45f8	                mov rax, qword [rbp - 8]	       224	progress.c	FUNCTION_11	CALL_1
0x89d	      0xba00000000	                              mov edx, 0	       224	progress.c	FUNCTION_11	CALL_1
0x8a2	          0x4889ce	                            mov rsi, rcx	       224	progress.c	FUNCTION_11	CALL_1
0x8a5	          0x4889c7	                            mov rdi, rax	       224	progress.c	FUNCTION_11	CALL_1
0x8a8	      0xe8f4feffff	           call sym.start_progress_delay	       224	progress.c	FUNCTION_11	CALL_1
0x8ad	              0xc9	                                   leave	       225	progress.c	FUNCTION_11
0x8ae	              0xc3	                                     ret	       225	progress.c	FUNCTION_11
display	WHILE,0:FOR,0:DO,0:CALL,8:ELSE,1:IF,6:functions,0:SWITCH,0	135
0x2a4	              0x55	                                push rbp	        82	progress.c	FUNCTION_5
0x2a5	          0x4889e5	                            mov rbp, rsp	        82	progress.c	FUNCTION_5
0x2a8	        0x4883ec40	                           sub rsp, 0x40	        82	progress.c	FUNCTION_5
0x2ac	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        82	progress.c	FUNCTION_5
0x2b0	        0x488975d0	             mov qword [rbp - 0x30], rsi	        82	progress.c	FUNCTION_5
0x2b4	        0x488955c8	             mov qword [rbp - 0x38], rdx	        82	progress.c	FUNCTION_5
0x2b8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        85	progress.c	FUNCTION_5	IF_1
0x2bc	          0x8b401c	            mov eax, dword [rax + 0x1c] 	        85	progress.c	FUNCTION_5	IF_1
0x2bf	            0x85c0	                           test eax, eax	        85	progress.c	FUNCTION_5	IF_1
0x2c1	            0x7430	                            je 0x4000333	        85	progress.c	FUNCTION_5	IF_1
0x2c3	    0x8b0500000000	            mov eax, dword [0x04000309] 	        85	progress.c	FUNCTION_5	IF_1
0x2c9	            0x85c0	                           test eax, eax	        85	progress.c	FUNCTION_5	IF_1
0x2cb	            0x741c	                            je 0x4000329	        85	progress.c	FUNCTION_5	IF_1
0x2cd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        85	progress.c	FUNCTION_5	IF_1
0x2d1	          0x8b401c	            mov eax, dword [rax + 0x1c] 	        85	progress.c	FUNCTION_5	IF_1
0x2d4	          0x8d50ff	                      lea edx, [rax - 1]	        85	progress.c	FUNCTION_5	IF_1
0x2d7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        85	progress.c	FUNCTION_5	IF_1
0x2db	          0x89501c	             mov dword [rax + 0x1c], edx	        85	progress.c	FUNCTION_5	IF_1
0x2de	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        85	progress.c	FUNCTION_5	IF_1
0x2e2	          0x8b401c	            mov eax, dword [rax + 0x1c] 	        85	progress.c	FUNCTION_5	IF_1
0x2e5	            0x85c0	                           test eax, eax	        85	progress.c	FUNCTION_5	IF_1
0x2e7	            0x740a	                            je 0x4000333	        85	progress.c	FUNCTION_5	IF_1
0x2e9	      0xb800000000	                              mov eax, 0	        86	progress.c	FUNCTION_5	IF_1
0x2ee	      0xe9b6010000	                           jmp 0x40004e9	        86	progress.c	FUNCTION_5	IF_1
0x2f3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        88	progress.c	FUNCTION_5
0x2f7	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	        88	progress.c	FUNCTION_5
0x2fb	        0x48895008	                mov qword [rax + 8], rdx	        88	progress.c	FUNCTION_5
0x2ff	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        89	progress.c	FUNCTION_5
0x303	        0x488b4020	            mov rax, qword [rax + 0x20] 	        89	progress.c	FUNCTION_5
0x307	          0x4885c0	                           test rax, rax	        89	progress.c	FUNCTION_5
0x30a	            0x740e	                            je 0x400035a	        89	progress.c	FUNCTION_5
0x30c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        89	progress.c	FUNCTION_5
0x310	        0x488b4020	            mov rax, qword [rax + 0x20] 	        89	progress.c	FUNCTION_5
0x314	        0x488b4078	            mov rax, qword [rax + 0x78] 	        89	progress.c	FUNCTION_5
0x318	            0xeb05	                           jmp 0x400035f	        89	progress.c	FUNCTION_5
0x31a	      0xb800000000	                              mov eax, 0	        89	progress.c	FUNCTION_5
0x31f	        0x488945f0	             mov qword [rbp - 0x10], rax	        89	progress.c	FUNCTION_5
0x323	      0x48837dc800	               cmp qword [rbp - 0x38], 0	        90	progress.c	FUNCTION_5
0x328	            0x7406	                            je 0x4000370	        90	progress.c	FUNCTION_5
0x32a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        90	progress.c	FUNCTION_5
0x32e	            0xeb05	                           jmp 0x4000375	        90	progress.c	FUNCTION_5
0x330	      0xb800000000	                              mov eax, 0	        90	progress.c	FUNCTION_5
0x335	        0x488945f8	                mov qword [rbp - 8], rax	        90	progress.c	FUNCTION_5
0x339	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        91	progress.c	FUNCTION_5	IF_2
0x33d	        0x488b4010	            mov rax, qword [rax + 0x10] 	        91	progress.c	FUNCTION_5	IF_2
0x341	          0x4885c0	                           test rax, rax	        91	progress.c	FUNCTION_5	IF_2
0x344	     0xf84dd000000	                            je 0x4000467	        91	progress.c	FUNCTION_5	IF_2
0x34a	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	        92	progress.c	FUNCTION_5	IF_2
0x34e	          0x4889d0	                            mov rax, rdx	        92	progress.c	FUNCTION_5	IF_2
0x351	        0x48c1e002	                              shl rax, 2	        92	progress.c	FUNCTION_5	IF_2
0x355	          0x4801d0	                            add rax, rdx	        92	progress.c	FUNCTION_5	IF_2
0x358	    0x488d14850000	                        lea rdx, [rax*4]	        92	progress.c	FUNCTION_5	IF_2
0x360	          0x4801d0	                            add rax, rdx	        92	progress.c	FUNCTION_5	IF_2
0x363	        0x48c1e002	                              shl rax, 2	        92	progress.c	FUNCTION_5	IF_2
0x367	          0x4889c1	                            mov rcx, rax	        92	progress.c	FUNCTION_5	IF_2
0x36a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        92	progress.c	FUNCTION_5	IF_2
0x36e	        0x488b7010	            mov rsi, qword [rax + 0x10] 	        92	progress.c	FUNCTION_5	IF_2
0x372	          0x4889c8	                            mov rax, rcx	        92	progress.c	FUNCTION_5	IF_2
0x375	      0xba00000000	                              mov edx, 0	        92	progress.c	FUNCTION_5	IF_2
0x37a	          0x48f7f6	                                 div rsi	        92	progress.c	FUNCTION_5	IF_2
0x37d	          0x8945ec	             mov dword [rbp - 0x14], eax	        92	progress.c	FUNCTION_5	IF_2
0x380	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        93	progress.c	FUNCTION_5	IF_2	IF_3
0x384	          0x8b4018	            mov eax, dword [rax + 0x18] 	        93	progress.c	FUNCTION_5	IF_2	IF_3
0x387	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	        93	progress.c	FUNCTION_5	IF_2	IF_3
0x38a	            0x750e	                           jne 0x40003da	        93	progress.c	FUNCTION_5	IF_2	IF_3
0x38c	    0x8b0500000000	            mov eax, dword [0x040003d2] 	        93	progress.c	FUNCTION_5	IF_2	IF_3
0x392	            0x85c0	                           test eax, eax	        93	progress.c	FUNCTION_5	IF_2	IF_3
0x394	     0xf840a010000	                            je 0x40004e4	        93	progress.c	FUNCTION_5	IF_2	IF_3
0x39a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        94	progress.c	FUNCTION_5	IF_2	IF_3
0x39e	          0x8b55ec	             mov edx, dword [rbp - 0x14]	        94	progress.c	FUNCTION_5	IF_2	IF_3
0x3a1	          0x895018	             mov dword [rax + 0x18], edx	        94	progress.c	FUNCTION_5	IF_2	IF_3
0x3a4	    0x488b05000000	            mov rax, qword [0x040003eb] 	        95	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_2
0x3ab	          0x4889c7	                            mov rdi, rax	        95	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_2
0x3ae	      0xe800000000	                          call 0x40003f3	        95	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_2
0x3b3	            0x89c7	                            mov edi, eax	        95	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_2
0x3b5	      0xe8affeffff	               call sym.is_foreground_fd	        95	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_2
0x3ba	            0x85c0	                           test eax, eax	        95	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_2
0x3bc	            0x7507	                           jne 0x4000405	        95	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_2
0x3be	      0x48837dc800	               cmp qword [rbp - 0x38], 0	        95	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_2
0x3c3	            0x744e	                            je 0x4000453	        95	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_2
0x3c5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        98	progress.c	FUNCTION_5	IF_2	IF_3	IF_4
0x3c9	        0x488b7810	            mov rdi, qword [rax + 0x10] 	        98	progress.c	FUNCTION_5	IF_2	IF_3	IF_4
0x3cd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        96	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_3
0x3d1	          0x488b10	                    mov rdx, qword [rax]	        96	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_3
0x3d4	    0x488b05000000	            mov rax, qword [0x0400041b] 	        96	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_3
0x3db	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	        96	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_3
0x3df	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	        96	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_3
0x3e2	          0xff75f8	                    push qword [rbp - 8]	        96	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_3
0x3e5	          0xff75f0	                 push qword [rbp - 0x10]	        96	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_3
0x3e8	          0x4989f9	                             mov r9, rdi	        96	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_3
0x3eb	          0x4989f0	                             mov r8, rsi	        96	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_3
0x3ee	      0xbe00000000	                              mov esi, 0	        96	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_3
0x3f3	          0x4889c7	                            mov rdi, rax	        96	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_3
0x3f6	      0xb800000000	                              mov eax, 0	        96	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_3
0x3fb	      0xe800000000	                          call 0x4000440	        96	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_3
0x400	        0x4883c410	                           add rsp, 0x10	        96	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_3
0x404	    0x488b05000000	            mov rax, qword [0x0400044b] 	       100	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_4
0x40b	          0x4889c7	                            mov rdi, rax	       100	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_4
0x40e	      0xe800000000	                          call 0x4000453	       100	progress.c	FUNCTION_5	IF_2	IF_3	IF_4	CALL_4
0x413	    0xc70500000000	               mov dword [0x0400045d], 0	       102	progress.c	FUNCTION_5	IF_2	IF_3
0x41d	      0xb801000000	                              mov eax, 1	       103	progress.c	FUNCTION_5	IF_2	IF_3
0x422	      0xe982000000	                           jmp 0x40004e9	       103	progress.c	FUNCTION_5	IF_2	IF_3
0x427	    0x8b0500000000	            mov eax, dword [0x0400046d] 	       105	progress.c	FUNCTION_5	ELSE_1	IF_5
0x42d	            0x85c0	                           test eax, eax	       105	progress.c	FUNCTION_5	ELSE_1	IF_5
0x42f	            0x7473	                            je 0x40004e4	       105	progress.c	FUNCTION_5	ELSE_1	IF_5
0x431	    0x488b05000000	            mov rax, qword [0x04000478] 	       106	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_6
0x438	          0x4889c7	                            mov rdi, rax	       106	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_6
0x43b	      0xe800000000	                          call 0x4000480	       106	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_6
0x440	            0x89c7	                            mov edi, eax	       106	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_6
0x442	      0xe822feffff	               call sym.is_foreground_fd	       106	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_6
0x447	            0x85c0	                           test eax, eax	       106	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_6
0x449	            0x7507	                           jne 0x4000492	       106	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_6
0x44b	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       106	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_6
0x450	            0x7441	                            je 0x40004d3	       106	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_6
0x452	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       107	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_7
0x456	          0x488b10	                    mov rdx, qword [rax]	       107	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_7
0x459	    0x488b05000000	            mov rax, qword [0x040004a0] 	       107	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_7
0x460	        0x488b7df8	                mov rdi, qword [rbp - 8]	       107	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_7
0x464	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       107	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_7
0x468	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       107	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_7
0x46c	          0x4989f9	                             mov r9, rdi	       107	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_7
0x46f	          0x4989f0	                             mov r8, rsi	       107	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_7
0x472	      0xbe00000000	                              mov esi, 0	       107	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_7
0x477	          0x4889c7	                            mov rdi, rax	       107	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_7
0x47a	      0xb800000000	                              mov eax, 0	       107	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_7
0x47f	      0xe800000000	                          call 0x40004c4	       107	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_7
0x484	    0x488b05000000	            mov rax, qword [0x040004cb] 	       109	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_8
0x48b	          0x4889c7	                            mov rdi, rax	       109	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_8
0x48e	      0xe800000000	                          call 0x40004d3	       109	progress.c	FUNCTION_5	ELSE_1	IF_5	IF_6	CALL_8
0x493	    0xc70500000000	               mov dword [0x040004dd], 0	       111	progress.c	FUNCTION_5	ELSE_1	IF_5
0x49d	      0xb801000000	                              mov eax, 1	       112	progress.c	FUNCTION_5	ELSE_1	IF_5
0x4a2	            0xeb05	                           jmp 0x40004e9	       112	progress.c	FUNCTION_5	ELSE_1	IF_5
0x4a4	      0xb800000000	                              mov eax, 0	       115	progress.c	FUNCTION_5
0x4a9	              0xc9	                                   leave	       116	progress.c	FUNCTION_5
0x4aa	              0xc3	                                     ret	       116	progress.c	FUNCTION_5
strbuf_setlen	WHILE,0:FOR,0:DO,0:CALL,2:ELSE,1:IF,2:functions,0:SWITCH,0	43
0x2c	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_20
0x2d	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_20
0x30	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_20
0x34	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_20
0x38	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_20
0x3c	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_20	IF_1
0x40	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_20	IF_1
0x43	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_20	IF_1
0x46	            0x740d	                            je 0x4000095	       162	strbuf.h	FUNCTION_20	IF_1
0x48	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_20	IF_1
0x4c	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_20	IF_1
0x4f	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_20	IF_1
0x53	            0xeb05	                           jmp 0x400009a	       162	strbuf.h	FUNCTION_20	IF_1
0x55	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_20	IF_1
0x5a	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_20	IF_1
0x5e	            0x730f	                           jae 0x40000af	       162	strbuf.h	FUNCTION_20	IF_1
0x60	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_20	CALL_1
0x65	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_20	CALL_1
0x6a	      0xe800000000	                          call 0x40000af	       163	strbuf.h	FUNCTION_20	CALL_1
0x6f	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_20
0x73	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_20
0x77	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_20
0x7b	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_20	IF_2
0x7f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_20	IF_2
0x83	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_20	IF_2
0x89	            0x7414	                            je 0x40000df	       165	strbuf.h	FUNCTION_20	IF_2
0x8b	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_20	IF_2
0x8f	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_20	IF_2
0x93	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_20	IF_2
0x97	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_20	IF_2
0x9a	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_20	IF_2
0x9d	            0xeb24	                           jmp 0x4000103	       169	strbuf.h	FUNCTION_20
0x9f	     0xfb605000000	           movzx eax, byte [0x040000e6] 	       168	strbuf.h	FUNCTION_20	CALL_2
0xa6	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_20	CALL_2
0xa8	            0x7419	                            je 0x4000103	       168	strbuf.h	FUNCTION_20	CALL_2
0xaa	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_20	CALL_2
0xaf	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_20	CALL_2
0xb4	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_20	CALL_2
0xb9	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_20	CALL_2
0xbe	      0xe800000000	                          call 0x4000103	       168	strbuf.h	FUNCTION_20	CALL_2
0xc3	              0x90	                                     nop	       169	strbuf.h	FUNCTION_20
0xc4	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_20
0xc5	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_20
_	WHILE,0:FOR,0:DO,0:CALL,2:ELSE,0:IF,1:functions,0:SWITCH,0	15
0x0	              0x55	                                push rbp	        51	gettext.h	FUNCTION_16
0x1	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_16
0x4	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_16
0x8	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_16
0xc	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_16	IF_1
0x10	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_16	IF_1
0x13	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_16	IF_1
0x15	            0x7507	                           jne 0x400005e	        52	gettext.h	FUNCTION_16	IF_1
0x17	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_16	IF_1
0x1c	            0xeb0c	                           jmp 0x400006a	        53	gettext.h	FUNCTION_16	IF_1
0x1e	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_16	CALL_2
0x22	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_16	CALL_2
0x25	      0xe800000000	                          call 0x400006a	        54	gettext.h	FUNCTION_16	CALL_2
0x2a	              0xc9	                                   leave	        55	gettext.h	FUNCTION_16
0x2b	              0xc3	                                     ret	        55	gettext.h	FUNCTION_16
strbuf_addstr	WHILE,0:FOR,0:DO,0:CALL,2:ELSE,0:IF,0:functions,0:SWITCH,0	17
0xc6	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_22
0xc7	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_22
0xca	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_22
0xce	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_22
0xd2	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_22
0xd6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_22	CALL_2
0xda	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_22	CALL_2
0xdd	      0xe800000000	                          call 0x4000122	       279	strbuf.h	FUNCTION_22	CALL_2
0xe2	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_22	CALL_2
0xe5	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_22	CALL_2
0xe9	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_22	CALL_2
0xed	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_22	CALL_2
0xf0	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_22	CALL_2
0xf3	      0xe800000000	                          call 0x4000138	       279	strbuf.h	FUNCTION_22	CALL_2
0xf8	              0x90	                                     nop	       280	strbuf.h	FUNCTION_22
0xf9	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_22
0xfa	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_22
