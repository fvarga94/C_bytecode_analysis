hex_to_bytes	ELSE,0:functions,0:WHILE,0:CALL,2:IF,1:FOR,1:SWITCH,0:DO,0	43
0x71	              0x55	                                push rbp	        39	hex.c	FUNCTION_1
0x72	          0x4889e5	                            mov rbp, rsp	        39	hex.c	FUNCTION_1
0x75	              0x53	                                push rbx	        39	hex.c	FUNCTION_1
0x76	        0x4883ec28	                           sub rsp, 0x28	        39	hex.c	FUNCTION_1
0x7a	        0x48897de0	             mov qword [rbp - 0x20], rdi	        39	hex.c	FUNCTION_1
0x7e	        0x488975d8	             mov qword [rbp - 0x28], rsi	        39	hex.c	FUNCTION_1
0x82	        0x488955d0	             mov qword [rbp - 0x30], rdx	        39	hex.c	FUNCTION_1
0x86	            0xeb5b	                           jmp 0x4000123	        40	hex.c	FUNCTION_1	FOR_1
0x88	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        41	hex.c	FUNCTION_1	FOR_1	CALL_2
0x8c	           0xfb600	                   movzx eax, byte [rax]	        41	hex.c	FUNCTION_1	FOR_1	CALL_2
0x8f	           0xfb6c0	                           movzx eax, al	        41	hex.c	FUNCTION_1	FOR_1	CALL_2
0x92	            0x89c7	                            mov edi, eax	        41	hex.c	FUNCTION_1	FOR_1	CALL_2
0x94	      0xe867ffffff	                         call sym.hexval	        41	hex.c	FUNCTION_1	FOR_1	CALL_2
0x99	          0xc1e004	                              shl eax, 4	        41	hex.c	FUNCTION_1	FOR_1	CALL_2
0x9c	            0x89c3	                            mov ebx, eax	        41	hex.c	FUNCTION_1	FOR_1	CALL_2
0x9e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        41	hex.c	FUNCTION_1	FOR_1	CALL_2
0xa2	        0x4883c001	                              add rax, 1	        41	hex.c	FUNCTION_1	FOR_1	CALL_2
0xa6	           0xfb600	                   movzx eax, byte [rax]	        41	hex.c	FUNCTION_1	FOR_1	CALL_2
0xa9	           0xfb6c0	                           movzx eax, al	        41	hex.c	FUNCTION_1	FOR_1	CALL_2
0xac	            0x89c7	                            mov edi, eax	        41	hex.c	FUNCTION_1	FOR_1	CALL_2
0xae	      0xe84dffffff	                         call sym.hexval	        41	hex.c	FUNCTION_1	FOR_1	CALL_2
0xb3	             0x9d8	                             or eax, ebx	        41	hex.c	FUNCTION_1	FOR_1	CALL_2
0xb5	          0x8945f4	              mov dword [rbp - 0xc], eax	        41	hex.c	FUNCTION_1	FOR_1	CALL_2
0xb8	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        43	hex.c	FUNCTION_1	FOR_1	IF_1
0xbb	            0xb000	                               mov al, 0	        43	hex.c	FUNCTION_1	FOR_1	IF_1
0xbd	            0x85c0	                           test eax, eax	        43	hex.c	FUNCTION_1	FOR_1	IF_1
0xbf	            0x7407	                            je 0x4000108	        43	hex.c	FUNCTION_1	FOR_1	IF_1
0xc1	      0xb8ffffffff	                     mov eax, 0xffffffff	        44	hex.c	FUNCTION_1	FOR_1	IF_1
0xc6	            0xeb27	                           jmp 0x400012f	        44	hex.c	FUNCTION_1	FOR_1	IF_1
0xc8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        45	hex.c	FUNCTION_1	FOR_1
0xcc	        0x488d5001	                      lea rdx, [rax + 1]	        45	hex.c	FUNCTION_1	FOR_1
0xd0	        0x488955e0	             mov qword [rbp - 0x20], rdx	        45	hex.c	FUNCTION_1	FOR_1
0xd4	          0x8b55f4	              mov edx, dword [rbp - 0xc]	        45	hex.c	FUNCTION_1	FOR_1
0xd7	            0x8810	                      mov byte [rax], dl	        45	hex.c	FUNCTION_1	FOR_1
0xd9	      0x48836dd001	               sub qword [rbp - 0x30], 1	        40	hex.c	FUNCTION_1	FOR_1
0xde	      0x488345d802	               add qword [rbp - 0x28], 2	        40	hex.c	FUNCTION_1	FOR_1
0xe3	      0x48837dd000	               cmp qword [rbp - 0x30], 0	        40	hex.c	FUNCTION_1	FOR_1
0xe8	            0x759e	                           jne 0x40000c8	        40	hex.c	FUNCTION_1	FOR_1
0xea	      0xb800000000	                              mov eax, 0	        47	hex.c	FUNCTION_1
0xef	        0x4883c428	                           add rsp, 0x28	        48	hex.c	FUNCTION_1
0xf3	              0x5b	                                 pop rbx	        48	hex.c	FUNCTION_1
0xf4	              0x5d	                                 pop rbp	        48	hex.c	FUNCTION_1
0xf5	              0xc3	                                     ret	        48	hex.c	FUNCTION_1
oid_to_hex	ELSE,0:functions,0:WHILE,0:CALL,1:IF,0:FOR,0:SWITCH,0:DO,0	9
0x2b3	              0x55	                                push rbp	       106	hex.c	FUNCTION_8
0x2b4	          0x4889e5	                            mov rbp, rsp	       106	hex.c	FUNCTION_8
0x2b7	        0x4883ec08	                              sub rsp, 8	       106	hex.c	FUNCTION_8
0x2bb	        0x48897df8	                mov qword [rbp - 8], rdi	       106	hex.c	FUNCTION_8
0x2bf	        0x488b45f8	                mov rax, qword [rbp - 8]	       107	hex.c	FUNCTION_8	CALL_1
0x2c3	          0x4889c7	                            mov rdi, rax	       107	hex.c	FUNCTION_8	CALL_1
0x2c6	      0xe800000000	                          call 0x400030b	       107	hex.c	FUNCTION_8	CALL_1
0x2cb	              0xc9	                                   leave	       108	hex.c	FUNCTION_8
0x2cc	              0xc3	                                     ret	       108	hex.c	FUNCTION_8
get_sha1_hex	ELSE,0:functions,0:WHILE,0:CALL,1:IF,1:FOR,1:SWITCH,0:DO,0	27
0xf6	              0x55	                                push rbp	        51	hex.c	FUNCTION_2
0xf7	          0x4889e5	                            mov rbp, rsp	        51	hex.c	FUNCTION_2
0xfa	        0x4883ec20	                           sub rsp, 0x20	        51	hex.c	FUNCTION_2
0xfe	        0x48897de8	             mov qword [rbp - 0x18], rdi	        51	hex.c	FUNCTION_2
0x102	        0x488975e0	             mov qword [rbp - 0x20], rsi	        51	hex.c	FUNCTION_2
0x106	    0xc745f8000000	                  mov dword [rbp - 8], 0	        53	hex.c	FUNCTION_2	FOR_1
0x10d	            0xeb36	                           jmp 0x4000185	        53	hex.c	FUNCTION_2	FOR_1
0x10f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        54	hex.c	FUNCTION_2	FOR_1	CALL_1
0x113	          0x4889c7	                            mov rdi, rax	        54	hex.c	FUNCTION_2	FOR_1	CALL_1
0x116	      0xe800ffffff	                        call sym.hex2chr	        54	hex.c	FUNCTION_2	FOR_1	CALL_1
0x11b	          0x8945fc	                mov dword [rbp - 4], eax	        54	hex.c	FUNCTION_2	FOR_1	CALL_1
0x11e	        0x837dfc00	                  cmp dword [rbp - 4], 0	        55	hex.c	FUNCTION_2	FOR_1	IF_1
0x122	            0x7907	                           jns 0x400016b	        55	hex.c	FUNCTION_2	FOR_1	IF_1
0x124	      0xb8ffffffff	                     mov eax, 0xffffffff	        56	hex.c	FUNCTION_2	FOR_1	IF_1
0x129	            0xeb25	                           jmp 0x4000190	        56	hex.c	FUNCTION_2	FOR_1	IF_1
0x12b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        57	hex.c	FUNCTION_2	FOR_1
0x12f	        0x488d5001	                      lea rdx, [rax + 1]	        57	hex.c	FUNCTION_2	FOR_1
0x133	        0x488955e0	             mov qword [rbp - 0x20], rdx	        57	hex.c	FUNCTION_2	FOR_1
0x137	          0x8b55fc	                mov edx, dword [rbp - 4]	        57	hex.c	FUNCTION_2	FOR_1
0x13a	            0x8810	                      mov byte [rax], dl	        57	hex.c	FUNCTION_2	FOR_1
0x13c	      0x488345e802	               add qword [rbp - 0x18], 2	        58	hex.c	FUNCTION_2	FOR_1
0x141	        0x8345f801	                  add dword [rbp - 8], 1	        53	hex.c	FUNCTION_2	FOR_1
0x145	        0x837df813	               cmp dword [rbp - 8], 0x13	        53	hex.c	FUNCTION_2	FOR_1
0x149	            0x7ec4	                           jle 0x400014f	        53	hex.c	FUNCTION_2	FOR_1
0x14b	      0xb800000000	                              mov eax, 0	        60	hex.c	FUNCTION_2
0x150	              0xc9	                                   leave	        61	hex.c	FUNCTION_2
0x151	              0xc3	                                     ret	        61	hex.c	FUNCTION_2
parse_oid_hex	ELSE,0:functions,0:WHILE,0:CALL,1:IF,1:FOR,0:SWITCH,0:DO,0	21
0x177	              0x55	                                push rbp	        69	hex.c	FUNCTION_4
0x178	          0x4889e5	                            mov rbp, rsp	        69	hex.c	FUNCTION_4
0x17b	        0x4883ec28	                           sub rsp, 0x28	        69	hex.c	FUNCTION_4
0x17f	        0x48897de8	             mov qword [rbp - 0x18], rdi	        69	hex.c	FUNCTION_4
0x183	        0x488975e0	             mov qword [rbp - 0x20], rsi	        69	hex.c	FUNCTION_4
0x187	        0x488955d8	             mov qword [rbp - 0x28], rdx	        69	hex.c	FUNCTION_4
0x18b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        70	hex.c	FUNCTION_4	CALL_1
0x18f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        70	hex.c	FUNCTION_4	CALL_1
0x193	          0x4889d6	                            mov rsi, rdx	        70	hex.c	FUNCTION_4	CALL_1
0x196	          0x4889c7	                            mov rdi, rax	        70	hex.c	FUNCTION_4	CALL_1
0x199	      0xe800000000	                          call 0x40001de	        70	hex.c	FUNCTION_4	CALL_1
0x19e	          0x8945fc	                mov dword [rbp - 4], eax	        70	hex.c	FUNCTION_4	CALL_1
0x1a1	        0x837dfc00	                  cmp dword [rbp - 4], 0	        71	hex.c	FUNCTION_4	IF_1
0x1a5	            0x750f	                           jne 0x40001f6	        71	hex.c	FUNCTION_4	IF_1
0x1a7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        72	hex.c	FUNCTION_4	IF_1
0x1ab	        0x488d5028	                   lea rdx, [rax + 0x28]	        72	hex.c	FUNCTION_4	IF_1
0x1af	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        72	hex.c	FUNCTION_4	IF_1
0x1b3	          0x488910	                    mov qword [rax], rdx	        72	hex.c	FUNCTION_4	IF_1
0x1b6	          0x8b45fc	                mov eax, dword [rbp - 4]	        73	hex.c	FUNCTION_4
0x1b9	              0xc9	                                   leave	        74	hex.c	FUNCTION_4
0x1ba	              0xc3	                                     ret	        74	hex.c	FUNCTION_4
oid_to_hex_r	ELSE,0:functions,0:WHILE,0:CALL,1:IF,0:FOR,0:SWITCH,0:DO,0	12
0x23e	              0x55	                                push rbp	        93	hex.c	FUNCTION_6
0x23f	          0x4889e5	                            mov rbp, rsp	        93	hex.c	FUNCTION_6
0x242	        0x4883ec10	                           sub rsp, 0x10	        93	hex.c	FUNCTION_6
0x246	        0x48897df8	                mov qword [rbp - 8], rdi	        93	hex.c	FUNCTION_6
0x24a	        0x488975f0	             mov qword [rbp - 0x10], rsi	        93	hex.c	FUNCTION_6
0x24e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        94	hex.c	FUNCTION_6	CALL_1
0x252	        0x488b45f8	                mov rax, qword [rbp - 8]	        94	hex.c	FUNCTION_6	CALL_1
0x256	          0x4889d6	                            mov rsi, rdx	        94	hex.c	FUNCTION_6	CALL_1
0x259	          0x4889c7	                            mov rdi, rax	        94	hex.c	FUNCTION_6	CALL_1
0x25c	      0xe800000000	                          call 0x40002a1	        94	hex.c	FUNCTION_6	CALL_1
0x261	              0xc9	                                   leave	        95	hex.c	FUNCTION_6
0x262	              0xc3	                                     ret	        95	hex.c	FUNCTION_6
get_oid_hex	ELSE,0:functions,0:WHILE,0:CALL,1:IF,0:FOR,0:SWITCH,0:DO,0	12
0x152	              0x55	                                push rbp	        64	hex.c	FUNCTION_3
0x153	          0x4889e5	                            mov rbp, rsp	        64	hex.c	FUNCTION_3
0x156	        0x4883ec10	                           sub rsp, 0x10	        64	hex.c	FUNCTION_3
0x15a	        0x48897df8	                mov qword [rbp - 8], rdi	        64	hex.c	FUNCTION_3
0x15e	        0x488975f0	             mov qword [rbp - 0x10], rsi	        64	hex.c	FUNCTION_3
0x162	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        65	hex.c	FUNCTION_3	CALL_1
0x166	        0x488b45f8	                mov rax, qword [rbp - 8]	        65	hex.c	FUNCTION_3	CALL_1
0x16a	          0x4889d6	                            mov rsi, rdx	        65	hex.c	FUNCTION_3	CALL_1
0x16d	          0x4889c7	                            mov rdi, rax	        65	hex.c	FUNCTION_3	CALL_1
0x170	      0xe800000000	                          call 0x40001b5	        65	hex.c	FUNCTION_3	CALL_1
0x175	              0xc9	                                   leave	        66	hex.c	FUNCTION_3
0x176	              0xc3	                                     ret	        66	hex.c	FUNCTION_3
sha1_to_hex_r	ELSE,0:functions,0:WHILE,0:CALL,0:IF,0:FOR,1:SWITCH,0:DO,0	38
0x1bb	              0x55	                                push rbp	        77	hex.c	FUNCTION_5
0x1bc	          0x4889e5	                            mov rbp, rsp	        77	hex.c	FUNCTION_5
0x1bf	        0x48897de8	             mov qword [rbp - 0x18], rdi	        77	hex.c	FUNCTION_5
0x1c3	        0x488975e0	             mov qword [rbp - 0x20], rsi	        77	hex.c	FUNCTION_5
0x1c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        79	hex.c	FUNCTION_5
0x1cb	        0x488945f8	                mov qword [rbp - 8], rax	        79	hex.c	FUNCTION_5
0x1cf	    0xc745f0000000	               mov dword [rbp - 0x10], 0	        82	hex.c	FUNCTION_5	FOR_1
0x1d6	            0xeb53	                           jmp 0x400026b	        82	hex.c	FUNCTION_5	FOR_1
0x1d8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        83	hex.c	FUNCTION_5	FOR_1
0x1dc	        0x488d5001	                      lea rdx, [rax + 1]	        83	hex.c	FUNCTION_5	FOR_1
0x1e0	        0x488955e0	             mov qword [rbp - 0x20], rdx	        83	hex.c	FUNCTION_5	FOR_1
0x1e4	           0xfb600	                   movzx eax, byte [rax]	        83	hex.c	FUNCTION_5	FOR_1
0x1e7	           0xfb6c0	                           movzx eax, al	        83	hex.c	FUNCTION_5	FOR_1
0x1ea	          0x8945f4	              mov dword [rbp - 0xc], eax	        83	hex.c	FUNCTION_5	FOR_1
0x1ed	        0x488b45f8	                mov rax, qword [rbp - 8]	        84	hex.c	FUNCTION_5	FOR_1
0x1f1	        0x488d5001	                      lea rdx, [rax + 1]	        84	hex.c	FUNCTION_5	FOR_1
0x1f5	        0x488955f8	                mov qword [rbp - 8], rdx	        84	hex.c	FUNCTION_5	FOR_1
0x1f9	          0x8b55f4	              mov edx, dword [rbp - 0xc]	        84	hex.c	FUNCTION_5	FOR_1
0x1fc	          0xc1ea04	                              shr edx, 4	        84	hex.c	FUNCTION_5	FOR_1
0x1ff	            0x89d2	                            mov edx, edx	        84	hex.c	FUNCTION_5	FOR_1
0x201	     0xfb692000000	                   movzx edx, byte [rdx]	        84	hex.c	FUNCTION_5	FOR_1
0x208	            0x8810	                      mov byte [rax], dl	        84	hex.c	FUNCTION_5	FOR_1
0x20a	        0x488b45f8	                mov rax, qword [rbp - 8]	        85	hex.c	FUNCTION_5	FOR_1
0x20e	        0x488d5001	                      lea rdx, [rax + 1]	        85	hex.c	FUNCTION_5	FOR_1
0x212	        0x488955f8	                mov qword [rbp - 8], rdx	        85	hex.c	FUNCTION_5	FOR_1
0x216	          0x8b55f4	              mov edx, dword [rbp - 0xc]	        85	hex.c	FUNCTION_5	FOR_1
0x219	          0x83e20f	                            and edx, 0xf	        85	hex.c	FUNCTION_5	FOR_1
0x21c	            0x89d2	                            mov edx, edx	        85	hex.c	FUNCTION_5	FOR_1
0x21e	     0xfb692000000	                   movzx edx, byte [rdx]	        85	hex.c	FUNCTION_5	FOR_1
0x225	            0x8810	                      mov byte [rax], dl	        85	hex.c	FUNCTION_5	FOR_1
0x227	        0x8345f001	               add dword [rbp - 0x10], 1	        82	hex.c	FUNCTION_5	FOR_1
0x22b	        0x837df013	           cmp dword [rbp - 0x10], 0x13 	        82	hex.c	FUNCTION_5	FOR_1
0x22f	            0x7ea7	                           jle 0x4000218	        82	hex.c	FUNCTION_5	FOR_1
0x231	        0x488b45f8	                mov rax, qword [rbp - 8]	        87	hex.c	FUNCTION_5
0x235	          0xc60000	                       mov byte [rax], 0	        87	hex.c	FUNCTION_5
0x238	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        89	hex.c	FUNCTION_5
0x23c	              0x5d	                                 pop rbp	        90	hex.c	FUNCTION_5
0x23d	              0xc3	                                     ret	        90	hex.c	FUNCTION_5
sha1_to_hex	ELSE,0:functions,0:WHILE,0:CALL,2:IF,0:FOR,0:SWITCH,0:DO,0	22
0x263	              0x55	                                push rbp	        98	hex.c	FUNCTION_7
0x264	          0x4889e5	                            mov rbp, rsp	        98	hex.c	FUNCTION_7
0x267	        0x4883ec08	                              sub rsp, 8	        98	hex.c	FUNCTION_7
0x26b	        0x48897df8	                mov qword [rbp - 8], rdi	        98	hex.c	FUNCTION_7
0x26f	    0x8b0500000000	            mov eax, dword [0x040002b5] 	       101	hex.c	FUNCTION_7	CALL_1
0x275	          0x83c001	                              add eax, 1	       101	hex.c	FUNCTION_7	CALL_1
0x278	          0x83e003	                              and eax, 3	       101	hex.c	FUNCTION_7	CALL_1
0x27b	    0x890500000000	            mov dword [0x040002c1], eax 	       101	hex.c	FUNCTION_7	CALL_1
0x281	    0x8b0500000000	            mov eax, dword [0x040002c7] 	       102	hex.c	FUNCTION_7	CALL_2
0x287	          0x4863d0	                         movsxd rdx, eax	       102	hex.c	FUNCTION_7	CALL_2
0x28a	          0x4889d0	                            mov rax, rdx	       102	hex.c	FUNCTION_7	CALL_2
0x28d	        0x48c1e002	                              shl rax, 2	       102	hex.c	FUNCTION_7	CALL_2
0x291	          0x4801d0	                            add rax, rdx	       102	hex.c	FUNCTION_7	CALL_2
0x294	        0x48c1e003	                              shl rax, 3	       102	hex.c	FUNCTION_7	CALL_2
0x298	          0x4801d0	                            add rax, rdx	       102	hex.c	FUNCTION_7	CALL_2
0x29b	    0x488d90000000	                          lea rdx, [rax]	       102	hex.c	FUNCTION_7	CALL_2
0x2a2	        0x488b45f8	                mov rax, qword [rbp - 8]	       102	hex.c	FUNCTION_7	CALL_2
0x2a6	          0x4889c6	                            mov rsi, rax	       102	hex.c	FUNCTION_7	CALL_2
0x2a9	          0x4889d7	                            mov rdi, rdx	       102	hex.c	FUNCTION_7	CALL_2
0x2ac	      0xe800000000	                          call 0x40002f1	       102	hex.c	FUNCTION_7	CALL_2
0x2b1	              0xc9	                                   leave	       103	hex.c	FUNCTION_7
0x2b2	              0xc3	                                     ret	       103	hex.c	FUNCTION_7
