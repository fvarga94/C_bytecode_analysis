managed_skipped	CALL,2:FOR,0:WHILE,0:IF,2:DO,0:SWITCH,0:ELSE,0:functions,0	41
0x1404	              0x55	                                push rbp	       606	bisect.c	FUNCTION_21
0x1405	          0x4889e5	                            mov rbp, rsp	       606	bisect.c	FUNCTION_21
0x1408	        0x4883ec20	                           sub rsp, 0x20	       606	bisect.c	FUNCTION_21
0x140c	        0x48897de8	             mov qword [rbp - 0x18], rdi	       606	bisect.c	FUNCTION_21
0x1410	        0x488975e0	             mov qword [rbp - 0x20], rsi	       606	bisect.c	FUNCTION_21
0x1414	    0x64488b042528	                mov rax, qword fs:[0x28]	       606	bisect.c	FUNCTION_21
0x141d	        0x488945f8	                mov qword [rbp - 8], rax	       606	bisect.c	FUNCTION_21
0x1421	            0x31c0	                            xor eax, eax	       606	bisect.c	FUNCTION_21
0x1423	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       609	bisect.c	FUNCTION_21
0x1427	    0x48c700000000	                      mov qword [rax], 0	       609	bisect.c	FUNCTION_21
0x142e	    0x8b0500000000	            mov eax, dword [0x04001474] 	       611	bisect.c	FUNCTION_21	IF_1
0x1434	            0x85c0	                           test eax, eax	       611	bisect.c	FUNCTION_21	IF_1
0x1436	            0x7506	                           jne 0x400147e	       611	bisect.c	FUNCTION_21	IF_1
0x1438	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       612	bisect.c	FUNCTION_21	IF_1
0x143c	            0xeb45	                           jmp 0x40014c3	       612	bisect.c	FUNCTION_21	IF_1
0x143e	        0x488d4df4	                    lea rcx, [rbp - 0xc]	       614	bisect.c	FUNCTION_21	CALL_1
0x1442	        0x488d55f0	                   lea rdx, [rbp - 0x10]	       614	bisect.c	FUNCTION_21	CALL_1
0x1446	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       614	bisect.c	FUNCTION_21	CALL_1
0x144a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       614	bisect.c	FUNCTION_21	CALL_1
0x144e	          0x4989c8	                             mov r8, rcx	       614	bisect.c	FUNCTION_21	CALL_1
0x1451	          0x4889d1	                            mov rcx, rdx	       614	bisect.c	FUNCTION_21	CALL_1
0x1454	      0xba00000000	                              mov edx, 0	       614	bisect.c	FUNCTION_21	CALL_1
0x1459	          0x4889c7	                            mov rdi, rax	       614	bisect.c	FUNCTION_21	CALL_1
0x145c	      0xe800000000	                          call 0x40014a1	       614	bisect.c	FUNCTION_21	CALL_1
0x1461	        0x488945e8	             mov qword [rbp - 0x18], rax	       614	bisect.c	FUNCTION_21	CALL_1
0x1465	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       616	bisect.c	FUNCTION_21	IF_2
0x1468	            0x85c0	                           test eax, eax	       616	bisect.c	FUNCTION_21	IF_2
0x146a	            0x7506	                           jne 0x40014b2	       616	bisect.c	FUNCTION_21	IF_2
0x146c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       617	bisect.c	FUNCTION_21	IF_2
0x1470	            0xeb11	                           jmp 0x40014c3	       617	bisect.c	FUNCTION_21	IF_2
0x1472	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       619	bisect.c	FUNCTION_21	CALL_2
0x1475	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       619	bisect.c	FUNCTION_21	CALL_2
0x1479	            0x89d6	                            mov esi, edx	       619	bisect.c	FUNCTION_21	CALL_2
0x147b	          0x4889c7	                            mov rdi, rax	       619	bisect.c	FUNCTION_21	CALL_2
0x147e	      0xe8a7feffff	                      call sym.skip_away	       619	bisect.c	FUNCTION_21	CALL_2
0x1483	        0x488b4df8	                mov rcx, qword [rbp - 8]	       620	bisect.c	FUNCTION_21
0x1487	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       620	bisect.c	FUNCTION_21
0x1490	            0x7405	                            je 0x40014d7	       620	bisect.c	FUNCTION_21
0x1492	      0xe800000000	                          call 0x40014d7	       620	bisect.c	FUNCTION_21
0x1497	              0xc9	                                   leave	       620	bisect.c	FUNCTION_21
0x1498	              0xc3	                                     ret	       620	bisect.c	FUNCTION_21
count_distance	CALL,1:FOR,0:WHILE,2:IF,3:DO,0:SWITCH,0:ELSE,0:functions,0	65
0x2f8	              0x55	                                push rbp	        38	bisect.c	FUNCTION_1
0x2f9	          0x4889e5	                            mov rbp, rsp	        38	bisect.c	FUNCTION_1
0x2fc	        0x4883ec30	                           sub rsp, 0x30	        38	bisect.c	FUNCTION_1
0x300	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        38	bisect.c	FUNCTION_1
0x304	    0xc745ec000000	               mov dword [rbp - 0x14], 0	        39	bisect.c	FUNCTION_1
0x30b	      0xe9ba000000	                           jmp 0x400040a	        41	bisect.c	FUNCTION_1	WHILE_1
0x310	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        42	bisect.c	FUNCTION_1	WHILE_1
0x314	          0x488b00	                    mov rax, qword [rax]	        42	bisect.c	FUNCTION_1	WHILE_1
0x317	        0x488945f8	                mov qword [rbp - 8], rax	        42	bisect.c	FUNCTION_1	WHILE_1
0x31b	        0x488b45f8	                mov rax, qword [rbp - 8]	        45	bisect.c	FUNCTION_1	WHILE_1	IF_1
0x31f	            0x8b00	                    mov eax, dword [rax]	        45	bisect.c	FUNCTION_1	WHILE_1	IF_1
0x321	          0xc1e804	                              shr eax, 4	        45	bisect.c	FUNCTION_1	WHILE_1	IF_1
0x324	      0x25ffffff07	                      and eax, 0x7ffffff	        45	bisect.c	FUNCTION_1	WHILE_1	IF_1
0x329	      0x2502000100	                        and eax, 0x10002	        45	bisect.c	FUNCTION_1	WHILE_1	IF_1
0x32e	            0x85c0	                           test eax, eax	        45	bisect.c	FUNCTION_1	WHILE_1	IF_1
0x330	     0xf85a1000000	                           jne 0x4000417	        45	bisect.c	FUNCTION_1	WHILE_1	IF_1
0x336	        0x488b45f8	                mov rax, qword [rbp - 8]	        47	bisect.c	FUNCTION_1	WHILE_1	IF_2
0x33a	            0x8b00	                    mov eax, dword [rax]	        47	bisect.c	FUNCTION_1	WHILE_1	IF_2
0x33c	          0xc1e804	                              shr eax, 4	        47	bisect.c	FUNCTION_1	WHILE_1	IF_2
0x33f	      0x25ffffff07	                      and eax, 0x7ffffff	        47	bisect.c	FUNCTION_1	WHILE_1	IF_2
0x344	          0x83e004	                              and eax, 4	        47	bisect.c	FUNCTION_1	WHILE_1	IF_2
0x347	            0x85c0	                           test eax, eax	        47	bisect.c	FUNCTION_1	WHILE_1	IF_2
0x349	            0x7504	                           jne 0x400038f	        47	bisect.c	FUNCTION_1	WHILE_1	IF_2
0x34b	        0x8345ec01	               add dword [rbp - 0x14], 1	        48	bisect.c	FUNCTION_1	WHILE_1	IF_2
0x34f	        0x488b45f8	                mov rax, qword [rbp - 8]	        49	bisect.c	FUNCTION_1	WHILE_1
0x353	            0x8b00	                    mov eax, dword [rax]	        49	bisect.c	FUNCTION_1	WHILE_1
0x355	          0xc1e804	                              shr eax, 4	        49	bisect.c	FUNCTION_1	WHILE_1
0x358	      0x25ffffff07	                      and eax, 0x7ffffff	        49	bisect.c	FUNCTION_1	WHILE_1
0x35d	       0xd00000100	                         or eax, 0x10000	        49	bisect.c	FUNCTION_1	WHILE_1
0x362	            0x89c2	                            mov edx, eax	        49	bisect.c	FUNCTION_1	WHILE_1
0x364	        0x488b45f8	                mov rax, qword [rbp - 8]	        49	bisect.c	FUNCTION_1	WHILE_1
0x368	    0x81e2ffffff07	                      and edx, 0x7ffffff	        49	bisect.c	FUNCTION_1	WHILE_1
0x36e	            0x89d1	                            mov ecx, edx	        49	bisect.c	FUNCTION_1	WHILE_1
0x370	          0xc1e104	                              shl ecx, 4	        49	bisect.c	FUNCTION_1	WHILE_1
0x373	            0x8b10	                    mov edx, dword [rax]	        49	bisect.c	FUNCTION_1	WHILE_1
0x375	    0x81e20f000080	                     and edx, 0x8000000f	        49	bisect.c	FUNCTION_1	WHILE_1
0x37b	             0x9ca	                             or edx, ecx	        49	bisect.c	FUNCTION_1	WHILE_1
0x37d	            0x8910	                    mov dword [rax], edx	        49	bisect.c	FUNCTION_1	WHILE_1
0x37f	        0x488b45f8	                mov rax, qword [rbp - 8]	        50	bisect.c	FUNCTION_1	WHILE_1
0x383	        0x488b4030	            mov rax, qword [rax + 0x30] 	        50	bisect.c	FUNCTION_1	WHILE_1
0x387	        0x488945f0	             mov qword [rbp - 0x10], rax	        50	bisect.c	FUNCTION_1	WHILE_1
0x38b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        51	bisect.c	FUNCTION_1	WHILE_1
0x38f	        0x488945d8	             mov qword [rbp - 0x28], rax	        51	bisect.c	FUNCTION_1	WHILE_1
0x393	      0x48837df000	               cmp qword [rbp - 0x10], 0	        52	bisect.c	FUNCTION_1	WHILE_1	IF_3
0x398	            0x7430	                            je 0x400040a	        52	bisect.c	FUNCTION_1	WHILE_1	IF_3
0x39a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        53	bisect.c	FUNCTION_1	WHILE_1	IF_3
0x39e	        0x488b4008	                mov rax, qword [rax + 8]	        53	bisect.c	FUNCTION_1	WHILE_1	IF_3
0x3a2	        0x488945f0	             mov qword [rbp - 0x10], rax	        53	bisect.c	FUNCTION_1	WHILE_1	IF_3
0x3a6	            0xeb1b	                           jmp 0x4000403	        54	bisect.c	FUNCTION_1	WHILE_1	IF_3	WHILE_2
0x3a8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        55	bisect.c	FUNCTION_1	WHILE_1	IF_3	WHILE_2	CALL_1
0x3ac	          0x4889c7	                            mov rdi, rax	        55	bisect.c	FUNCTION_1	WHILE_1	IF_3	WHILE_2	CALL_1
0x3af	      0xe844ffffff	                 call sym.count_distance	        55	bisect.c	FUNCTION_1	WHILE_1	IF_3	WHILE_2	CALL_1
0x3b4	           0x145ec	             add dword [rbp - 0x14], eax	        55	bisect.c	FUNCTION_1	WHILE_1	IF_3	WHILE_2	CALL_1
0x3b7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        56	bisect.c	FUNCTION_1	WHILE_1	IF_3	WHILE_2
0x3bb	        0x488b4008	                mov rax, qword [rax + 8]	        56	bisect.c	FUNCTION_1	WHILE_1	IF_3	WHILE_2
0x3bf	        0x488945f0	             mov qword [rbp - 0x10], rax	        56	bisect.c	FUNCTION_1	WHILE_1	IF_3	WHILE_2
0x3c3	      0x48837df000	               cmp qword [rbp - 0x10], 0	        54	bisect.c	FUNCTION_1	WHILE_1	IF_3	WHILE_2
0x3c8	            0x75de	                           jne 0x40003e8	        54	bisect.c	FUNCTION_1	WHILE_1	IF_3	WHILE_2
0x3ca	      0x48837dd800	               cmp qword [rbp - 0x28], 0	        41	bisect.c	FUNCTION_1	WHILE_1
0x3cf	     0xf853bffffff	                           jne 0x4000350	        41	bisect.c	FUNCTION_1	WHILE_1
0x3d5	            0xeb01	                           jmp 0x4000418	        41	bisect.c	FUNCTION_1	WHILE_1
0x3d7	              0x90	                                     nop	        46	bisect.c	FUNCTION_1	WHILE_1	IF_1
0x3d8	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        61	bisect.c	FUNCTION_1
0x3db	              0xc9	                                   leave	        62	bisect.c	FUNCTION_1
0x3dc	              0xc3	                                     ret	        62	bisect.c	FUNCTION_1
get_prn	CALL,0:FOR,0:WHILE,0:IF,0:DO,0:SWITCH,0:ELSE,0:functions,0	12
0x1276	              0x55	                                push rbp	       554	bisect.c	FUNCTION_18
0x1277	          0x4889e5	                            mov rbp, rsp	       554	bisect.c	FUNCTION_18
0x127a	          0x897dfc	                mov dword [rbp - 4], edi	       554	bisect.c	FUNCTION_18
0x127d	          0x8b45fc	                mov eax, dword [rbp - 4]	       555	bisect.c	FUNCTION_18
0x1280	    0x69c06d4ec641	               imul eax, eax, 0x41c64e6d	       555	bisect.c	FUNCTION_18
0x1286	       0x539300000	                         add eax, 0x3039	       555	bisect.c	FUNCTION_18
0x128b	          0x8945fc	                mov dword [rbp - 4], eax	       555	bisect.c	FUNCTION_18
0x128e	          0x8b45fc	                mov eax, dword [rbp - 4]	       556	bisect.c	FUNCTION_18
0x1291	          0xc1e810	                           shr eax, 0x10	       556	bisect.c	FUNCTION_18
0x1294	      0x25ff7f0000	                         and eax, 0x7fff	       556	bisect.c	FUNCTION_18
0x1299	              0x5d	                                 pop rbp	       557	bisect.c	FUNCTION_18
0x129a	              0xc3	                                     ret	       557	bisect.c	FUNCTION_18
check_good_are_ancestors_of_bad	CALL,14:FOR,0:WHILE,0:IF,5:DO,0:SWITCH,0:ELSE,1:functions,0	95
0x1e59	              0x55	                                push rbp	       844	bisect.c	FUNCTION_33
0x1e5a	          0x4889e5	                            mov rbp, rsp	       844	bisect.c	FUNCTION_33
0x1e5d	              0x53	                                push rbx	       844	bisect.c	FUNCTION_33
0x1e5e	    0x4881ecd80000	                           sub rsp, 0xd8	       844	bisect.c	FUNCTION_33
0x1e65	    0x4889bd28ffff	             mov qword [rbp - 0xd8], rdi	       844	bisect.c	FUNCTION_33
0x1e6c	    0x89b524ffffff	             mov dword [rbp - 0xdc], esi	       844	bisect.c	FUNCTION_33
0x1e72	    0x64488b042528	                mov rax, qword fs:[0x28]	       844	bisect.c	FUNCTION_33
0x1e7b	        0x488945e8	             mov qword [rbp - 0x18], rax	       844	bisect.c	FUNCTION_33
0x1e7f	            0x31c0	                            xor eax, eax	       844	bisect.c	FUNCTION_33
0x1e81	      0xbf00000000	                              mov edi, 0	       845	bisect.c	FUNCTION_33	CALL_1
0x1e86	      0xb800000000	                              mov eax, 0	       845	bisect.c	FUNCTION_33	CALL_1
0x1e8b	      0xe800000000	                          call 0x4001ed0	       845	bisect.c	FUNCTION_33	CALL_1
0x1e90	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       845	bisect.c	FUNCTION_33	CALL_1
0x1e97	    0x488b05000000	            mov rax, qword [0x04001ede] 	       850	bisect.c	FUNCTION_33	IF_1
0x1e9e	          0x4885c0	                           test rax, rax	       850	bisect.c	FUNCTION_33	IF_1
0x1ea1	            0x7521	                           jne 0x4001f04	       850	bisect.c	FUNCTION_33	IF_1
0x1ea3	    0x488b1d000000	            mov rbx, qword [0x04001eea] 	       851	bisect.c	FUNCTION_33	CALL_3
0x1eaa	      0xbf00000000	                              mov edi, 0	       851	bisect.c	FUNCTION_33	CALL_3
0x1eaf	      0xe84be3ffff	                               call sym.	       851	bisect.c	FUNCTION_33	CALL_3
0x1eb4	          0x4889de	                            mov rsi, rbx	       851	bisect.c	FUNCTION_33	CALL_3
0x1eb7	          0x4889c7	                            mov rdi, rax	       851	bisect.c	FUNCTION_33	CALL_3
0x1eba	      0xb800000000	                              mov eax, 0	       851	bisect.c	FUNCTION_33	CALL_3
0x1ebf	      0xe800000000	                          call 0x4001f04	       851	bisect.c	FUNCTION_33	CALL_3
0x1ec4	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       854	bisect.c	FUNCTION_33	IF_2	CALL_5
0x1ecb	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       854	bisect.c	FUNCTION_33	IF_2	CALL_5
0x1ed2	          0x4889d6	                            mov rsi, rdx	       854	bisect.c	FUNCTION_33	IF_2	CALL_5
0x1ed5	          0x4889c7	                            mov rdi, rax	       854	bisect.c	FUNCTION_33	IF_2	CALL_5
0x1ed8	      0xe800000000	                          call 0x4001f1d	       854	bisect.c	FUNCTION_33	IF_2	CALL_5
0x1edd	            0x85c0	                           test eax, eax	       854	bisect.c	FUNCTION_33	IF_2	CALL_5
0x1edf	            0x7516	                           jne 0x4001f37	       854	bisect.c	FUNCTION_33	IF_2	CALL_5
0x1ee1	    0x8b8568ffffff	             mov eax, dword [rbp - 0x98]	       854	bisect.c	FUNCTION_33	IF_2	CALL_5
0x1ee7	      0x2500f00000	                         and eax, 0xf000	       854	bisect.c	FUNCTION_33	IF_2	CALL_5
0x1eec	      0x3d00800000	                         cmp eax, 0x8000	       854	bisect.c	FUNCTION_33	IF_2	CALL_5
0x1ef1	     0xf84d4000000	                            je 0x400200b	       854	bisect.c	FUNCTION_33	IF_2	CALL_5
0x1ef7	    0x8b0500000000	            mov eax, dword [0x04001f3d] 	       858	bisect.c	FUNCTION_33	IF_3
0x1efd	            0x85c0	                           test eax, eax	       858	bisect.c	FUNCTION_33	IF_3
0x1eff	     0xf84c9000000	                            je 0x400200e	       858	bisect.c	FUNCTION_33	IF_3
0x1f05	    0x488d8538ffff	                   lea rax, [rbp - 0xc8]	       862	bisect.c	FUNCTION_33	CALL_6
0x1f0c	          0x4889c7	                            mov rdi, rax	       862	bisect.c	FUNCTION_33	CALL_6
0x1f0f	      0xe875faffff	       call sym.get_bad_and_good_commits	       862	bisect.c	FUNCTION_33	CALL_6
0x1f14	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       862	bisect.c	FUNCTION_33	CALL_6
0x1f1b	    0x8b8538ffffff	             mov eax, dword [rbp - 0xc8]	       863	bisect.c	FUNCTION_33	IF_4	CALL_7
0x1f21	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	       863	bisect.c	FUNCTION_33	IF_4	CALL_7
0x1f28	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	       863	bisect.c	FUNCTION_33	IF_4	CALL_7
0x1f2f	          0x4889ce	                            mov rsi, rcx	       863	bisect.c	FUNCTION_33	IF_4	CALL_7
0x1f32	            0x89c7	                            mov edi, eax	       863	bisect.c	FUNCTION_33	IF_4	CALL_7
0x1f34	      0xe86ffeffff	                call sym.check_ancestors	       863	bisect.c	FUNCTION_33	IF_4	CALL_7
0x1f39	            0x85c0	                           test eax, eax	       863	bisect.c	FUNCTION_33	IF_4	CALL_7
0x1f3b	            0x741d	                            je 0x4001f9a	       863	bisect.c	FUNCTION_33	IF_4	CALL_7
0x1f3d	    0x8b8538ffffff	             mov eax, dword [rbp - 0xc8]	       864	bisect.c	FUNCTION_33	CALL_8
0x1f43	    0x8b9524ffffff	             mov edx, dword [rbp - 0xdc]	       864	bisect.c	FUNCTION_33	CALL_8
0x1f49	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	       864	bisect.c	FUNCTION_33	CALL_8
0x1f50	          0x4889ce	                            mov rsi, rcx	       864	bisect.c	FUNCTION_33	CALL_8
0x1f53	            0x89c7	                            mov edi, eax	       864	bisect.c	FUNCTION_33	CALL_8
0x1f55	      0xe856fdffff	              call sym.check_merge_bases	       864	bisect.c	FUNCTION_33	CALL_8
0x1f5a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       865	bisect.c	FUNCTION_33	CALL_9
0x1f61	          0x4889c7	                            mov rdi, rax	       865	bisect.c	FUNCTION_33	CALL_9
0x1f64	      0xe800000000	                          call 0x4001fa9	       865	bisect.c	FUNCTION_33	CALL_9
0x1f69	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       868	bisect.c	FUNCTION_33	CALL_10
0x1f70	      0xba80010000	                          mov edx, 0x180	       868	bisect.c	FUNCTION_33	CALL_10
0x1f75	      0xbe41020000	                          mov esi, 0x241	       868	bisect.c	FUNCTION_33	CALL_10
0x1f7a	          0x4889c7	                            mov rdi, rax	       868	bisect.c	FUNCTION_33	CALL_10
0x1f7d	      0xb800000000	                              mov eax, 0	       868	bisect.c	FUNCTION_33	CALL_10
0x1f82	      0xe800000000	                          call 0x4001fc7	       868	bisect.c	FUNCTION_33	CALL_10
0x1f87	    0x89853cffffff	             mov dword [rbp - 0xc4], eax	       868	bisect.c	FUNCTION_33	CALL_10
0x1f8d	    0x83bd3cffffff	               cmp dword [rbp - 0xc4], 0	       869	bisect.c	FUNCTION_33	IF_5
0x1f94	            0x7926	                           jns 0x4001ffc	       869	bisect.c	FUNCTION_33	IF_5
0x1f96	      0xbf00000000	                              mov edi, 0	       870	bisect.c	FUNCTION_33	IF_5	CALL_12
0x1f9b	      0xe85fe2ffff	                               call sym.	       870	bisect.c	FUNCTION_33	IF_5	CALL_12
0x1fa0	          0x4889c2	                            mov rdx, rax	       870	bisect.c	FUNCTION_33	IF_5	CALL_12
0x1fa3	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       870	bisect.c	FUNCTION_33	IF_5	CALL_12
0x1faa	          0x4889c6	                            mov rsi, rax	       870	bisect.c	FUNCTION_33	IF_5	CALL_12
0x1fad	          0x4889d7	                            mov rdi, rdx	       870	bisect.c	FUNCTION_33	IF_5	CALL_12
0x1fb0	      0xb800000000	                              mov eax, 0	       870	bisect.c	FUNCTION_33	IF_5	CALL_12
0x1fb5	      0xe800000000	                          call 0x4001ffa	       870	bisect.c	FUNCTION_33	IF_5	CALL_12
0x1fba	            0xeb13	                           jmp 0x400200f	       870	bisect.c	FUNCTION_33	IF_5	CALL_12
0x1fbc	    0x8b853cffffff	             mov eax, dword [rbp - 0xc4]	       873	bisect.c	FUNCTION_33	CALL_13
0x1fc2	            0x89c7	                            mov edi, eax	       873	bisect.c	FUNCTION_33	CALL_13
0x1fc4	      0xe800000000	                          call 0x4002009	       873	bisect.c	FUNCTION_33	CALL_13
0x1fc9	            0xeb04	                           jmp 0x400200f	       873	bisect.c	FUNCTION_33	CALL_13
0x1fcb	              0x90	                                     nop	       855	bisect.c	FUNCTION_33	IF_2
0x1fcc	            0xeb01	                           jmp 0x400200f	       855	bisect.c	FUNCTION_33	IF_2
0x1fce	              0x90	                                     nop	       859	bisect.c	FUNCTION_33	IF_3
0x1fcf	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       875	bisect.c	FUNCTION_33	CALL_14
0x1fd6	          0x4889c7	                            mov rdi, rax	       875	bisect.c	FUNCTION_33	CALL_14
0x1fd9	      0xe800000000	                          call 0x400201e	       875	bisect.c	FUNCTION_33	CALL_14
0x1fde	              0x90	                                     nop	       876	bisect.c	FUNCTION_33
0x1fdf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       876	bisect.c	FUNCTION_33
0x1fe3	    0x644833042528	                xor rax, qword fs:[0x28]	       876	bisect.c	FUNCTION_33
0x1fec	            0x7405	                            je 0x4002033	       876	bisect.c	FUNCTION_33
0x1fee	      0xe800000000	                          call 0x4002033	       876	bisect.c	FUNCTION_33
0x1ff3	    0x4881c4d80000	                           add rsp, 0xd8	       876	bisect.c	FUNCTION_33
0x1ffa	              0x5b	                                 pop rbx	       876	bisect.c	FUNCTION_33
0x1ffb	              0x5d	                                 pop rbp	       876	bisect.c	FUNCTION_33
0x1ffc	              0xc3	                                     ret	       876	bisect.c	FUNCTION_33
estimate_bisect_steps	CALL,2:FOR,0:WHILE,0:IF,1:DO,0:SWITCH,0:ELSE,0:functions,0	32
0x2594	              0x55	                                push rbp	      1037	bisect.c	FUNCTION_39
0x2595	          0x4889e5	                            mov rbp, rsp	      1037	bisect.c	FUNCTION_39
0x2598	        0x4883ec18	                           sub rsp, 0x18	      1037	bisect.c	FUNCTION_39
0x259c	          0x897dec	             mov dword [rbp - 0x14], edi	      1037	bisect.c	FUNCTION_39
0x259f	        0x837dec02	               cmp dword [rbp - 0x14], 2	      1040	bisect.c	FUNCTION_39	IF_1
0x25a3	            0x7f07	                            jg 0x40025ec	      1040	bisect.c	FUNCTION_39	IF_1
0x25a5	      0xb800000000	                              mov eax, 0	      1041	bisect.c	FUNCTION_39	IF_1
0x25aa	            0xeb3d	                           jmp 0x4002629	      1041	bisect.c	FUNCTION_39	IF_1
0x25ac	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1043	bisect.c	FUNCTION_39	CALL_1
0x25af	            0x89c7	                            mov edi, eax	      1043	bisect.c	FUNCTION_39	CALL_1
0x25b1	      0xe8a5ffffff	                          call sym.log2i	      1043	bisect.c	FUNCTION_39	CALL_1
0x25b6	          0x8945f4	              mov dword [rbp - 0xc], eax	      1043	bisect.c	FUNCTION_39	CALL_1
0x25b9	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1044	bisect.c	FUNCTION_39	CALL_2
0x25bc	            0x89c7	                            mov edi, eax	      1044	bisect.c	FUNCTION_39	CALL_2
0x25be	      0xe8baffffff	                          call sym.exp2i	      1044	bisect.c	FUNCTION_39	CALL_2
0x25c3	          0x8945f8	                mov dword [rbp - 8], eax	      1044	bisect.c	FUNCTION_39	CALL_2
0x25c6	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1045	bisect.c	FUNCTION_39
0x25c9	          0x2b45f8	                sub eax, dword [rbp - 8]	      1045	bisect.c	FUNCTION_39
0x25cc	          0x8945fc	                mov dword [rbp - 4], eax	      1045	bisect.c	FUNCTION_39
0x25cf	          0x8b55fc	                mov edx, dword [rbp - 4]	      1047	bisect.c	FUNCTION_39
0x25d2	            0x89d0	                            mov eax, edx	      1047	bisect.c	FUNCTION_39
0x25d4	             0x1c0	                            add eax, eax	      1047	bisect.c	FUNCTION_39
0x25d6	             0x1d0	                            add eax, edx	      1047	bisect.c	FUNCTION_39
0x25d8	          0x3b45f8	                cmp eax, dword [rbp - 8]	      1047	bisect.c	FUNCTION_39
0x25db	            0x7f08	                            jg 0x4002625	      1047	bisect.c	FUNCTION_39
0x25dd	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1047	bisect.c	FUNCTION_39
0x25e0	          0x83e801	                              sub eax, 1	      1047	bisect.c	FUNCTION_39
0x25e3	            0xeb03	                           jmp 0x4002628	      1047	bisect.c	FUNCTION_39
0x25e5	          0x8b45f4	              mov eax, dword [rbp - 0xc]	      1047	bisect.c	FUNCTION_39
0x25e8	              0x90	                                     nop	      1047	bisect.c	FUNCTION_39
0x25e9	              0xc9	                                   leave	      1048	bisect.c	FUNCTION_39
0x25ea	              0xc3	                                     ret	      1048	bisect.c	FUNCTION_39
filter_skipped	CALL,1:FOR,0:WHILE,1:IF,10:DO,0:SWITCH,0:ELSE,2:functions,0	107
0x10e2	              0x55	                                push rbp	       501	bisect.c	FUNCTION_17
0x10e3	          0x4889e5	                            mov rbp, rsp	       501	bisect.c	FUNCTION_17
0x10e6	        0x4883ec50	                           sub rsp, 0x50	       501	bisect.c	FUNCTION_17
0x10ea	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       501	bisect.c	FUNCTION_17
0x10ee	        0x488975d0	             mov qword [rbp - 0x30], rsi	       501	bisect.c	FUNCTION_17
0x10f2	          0x8955cc	             mov dword [rbp - 0x34], edx	       501	bisect.c	FUNCTION_17
0x10f5	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       501	bisect.c	FUNCTION_17
0x10f9	        0x4c8945b8	              mov qword [rbp - 0x48], r8	       501	bisect.c	FUNCTION_17
0x10fd	    0x64488b042528	                mov rax, qword fs:[0x28]	       501	bisect.c	FUNCTION_17
0x1106	        0x488945f8	                mov qword [rbp - 8], rax	       501	bisect.c	FUNCTION_17
0x110a	            0x31c0	                            xor eax, eax	       501	bisect.c	FUNCTION_17
0x110c	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       502	bisect.c	FUNCTION_17
0x1114	        0x488d45e0	                   lea rax, [rbp - 0x20]	       502	bisect.c	FUNCTION_17
0x1118	        0x488945e8	             mov qword [rbp - 0x18], rax	       502	bisect.c	FUNCTION_17
0x111c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       504	bisect.c	FUNCTION_17
0x1120	    0x48c700000000	                      mov qword [rax], 0	       504	bisect.c	FUNCTION_17
0x1127	      0x48837db800	               cmp qword [rbp - 0x48], 0	       506	bisect.c	FUNCTION_17	IF_1
0x112c	            0x740a	                            je 0x4001178	       506	bisect.c	FUNCTION_17	IF_1
0x112e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       507	bisect.c	FUNCTION_17	IF_1
0x1132	    0xc70000000000	                      mov dword [rax], 0	       507	bisect.c	FUNCTION_17	IF_1
0x1138	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       508	bisect.c	FUNCTION_17	IF_2
0x113d	            0x740a	                            je 0x4001189	       508	bisect.c	FUNCTION_17	IF_2
0x113f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       509	bisect.c	FUNCTION_17	IF_2
0x1143	    0xc70000000000	                      mov dword [rax], 0	       509	bisect.c	FUNCTION_17	IF_2
0x1149	    0x8b0500000000	            mov eax, dword [0x0400118f] 	       511	bisect.c	FUNCTION_17	IF_3
0x114f	            0x85c0	                           test eax, eax	       511	bisect.c	FUNCTION_17	IF_3
0x1151	     0xf85de000000	                           jne 0x4001275	       511	bisect.c	FUNCTION_17	IF_3
0x1157	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       512	bisect.c	FUNCTION_17	IF_3
0x115b	      0xe900010000	                           jmp 0x40012a0	       512	bisect.c	FUNCTION_17	IF_3
0x1160	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       515	bisect.c	FUNCTION_17	WHILE_1
0x1164	        0x488b4008	                mov rax, qword [rax + 8]	       515	bisect.c	FUNCTION_17	WHILE_1
0x1168	        0x488945f0	             mov qword [rbp - 0x10], rax	       515	bisect.c	FUNCTION_17	WHILE_1
0x116c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       516	bisect.c	FUNCTION_17	WHILE_1
0x1170	    0x48c740080000	                  mov qword [rax + 8], 0	       516	bisect.c	FUNCTION_17	WHILE_1
0x1178	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       517	bisect.c	FUNCTION_17	WHILE_1	IF_4	CALL_1
0x117c	          0x488b00	                    mov rax, qword [rax]	       517	bisect.c	FUNCTION_17	WHILE_1	IF_4	CALL_1
0x117f	        0x4883c004	                              add rax, 4	       517	bisect.c	FUNCTION_17	WHILE_1	IF_4	CALL_1
0x1183	          0x4889c6	                            mov rsi, rax	       517	bisect.c	FUNCTION_17	WHILE_1	IF_4	CALL_1
0x1186	      0xbf00000000	                              mov edi, 0	       517	bisect.c	FUNCTION_17	WHILE_1	IF_4	CALL_1
0x118b	      0xe800000000	                          call 0x40011d0	       517	bisect.c	FUNCTION_17	WHILE_1	IF_4	CALL_1
0x1190	            0x85c0	                           test eax, eax	       517	bisect.c	FUNCTION_17	WHILE_1	IF_4	CALL_1
0x1192	            0x7834	                            js 0x4001208	       517	bisect.c	FUNCTION_17	WHILE_1	IF_4	CALL_1
0x1194	      0x48837db800	               cmp qword [rbp - 0x48], 0	       518	bisect.c	FUNCTION_17	WHILE_1	IF_4	IF_5
0x1199	            0x7414	                            je 0x40011ef	       518	bisect.c	FUNCTION_17	WHILE_1	IF_4	IF_5
0x119b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       518	bisect.c	FUNCTION_17	WHILE_1	IF_4	IF_5
0x119f	            0x8b00	                    mov eax, dword [rax]	       518	bisect.c	FUNCTION_17	WHILE_1	IF_4	IF_5
0x11a1	            0x85c0	                           test eax, eax	       518	bisect.c	FUNCTION_17	WHILE_1	IF_4	IF_5
0x11a3	            0x750a	                           jne 0x40011ef	       518	bisect.c	FUNCTION_17	WHILE_1	IF_4	IF_5
0x11a5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       519	bisect.c	FUNCTION_17	WHILE_1	IF_4	IF_5
0x11a9	    0xc70001000000	                      mov dword [rax], 1	       519	bisect.c	FUNCTION_17	WHILE_1	IF_4	IF_5
0x11af	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       521	bisect.c	FUNCTION_17	WHILE_1	IF_4
0x11b3	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       521	bisect.c	FUNCTION_17	WHILE_1	IF_4
0x11b7	          0x488910	                    mov qword [rax], rdx	       521	bisect.c	FUNCTION_17	WHILE_1	IF_4
0x11ba	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       522	bisect.c	FUNCTION_17	WHILE_1	IF_4
0x11be	        0x4883c008	                              add rax, 8	       522	bisect.c	FUNCTION_17	WHILE_1	IF_4
0x11c2	        0x488945d0	             mov qword [rbp - 0x30], rax	       522	bisect.c	FUNCTION_17	WHILE_1	IF_4
0x11c6	            0xeb65	                           jmp 0x400126d	       522	bisect.c	FUNCTION_17	WHILE_1	IF_4
0x11c8	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       524	bisect.c	FUNCTION_17	WHILE_1	ELSE_1	IF_6
0x11cc	            0x7517	                           jne 0x4001225	       524	bisect.c	FUNCTION_17	WHILE_1	ELSE_1	IF_6
0x11ce	      0x48837db800	               cmp qword [rbp - 0x48], 0	       525	bisect.c	FUNCTION_17	WHILE_1	ELSE_1	IF_6	IF_7
0x11d3	            0x740a	                            je 0x400121f	       525	bisect.c	FUNCTION_17	WHILE_1	ELSE_1	IF_6	IF_7
0x11d5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       525	bisect.c	FUNCTION_17	WHILE_1	ELSE_1	IF_6	IF_7
0x11d9	            0x8b00	                    mov eax, dword [rax]	       525	bisect.c	FUNCTION_17	WHILE_1	ELSE_1	IF_6	IF_7
0x11db	            0x85c0	                           test eax, eax	       525	bisect.c	FUNCTION_17	WHILE_1	ELSE_1	IF_6	IF_7
0x11dd	            0x7521	                           jne 0x4001240	       525	bisect.c	FUNCTION_17	WHILE_1	ELSE_1	IF_6	IF_7
0x11df	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       526	bisect.c	FUNCTION_17	WHILE_1	ELSE_1	IF_6	IF_7
0x11e3	            0xeb7b	                           jmp 0x40012a0	       526	bisect.c	FUNCTION_17	WHILE_1	ELSE_1	IF_6	IF_7
0x11e5	      0x48837db800	               cmp qword [rbp - 0x48], 0	       527	bisect.c	FUNCTION_17	WHILE_1	ELSE_1	ELSE_2	IF_8
0x11ea	            0x7414	                            je 0x4001240	       527	bisect.c	FUNCTION_17	WHILE_1	ELSE_1	ELSE_2	IF_8
0x11ec	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       527	bisect.c	FUNCTION_17	WHILE_1	ELSE_1	ELSE_2	IF_8
0x11f0	            0x8b00	                    mov eax, dword [rax]	       527	bisect.c	FUNCTION_17	WHILE_1	ELSE_1	ELSE_2	IF_8
0x11f2	            0x85c0	                           test eax, eax	       527	bisect.c	FUNCTION_17	WHILE_1	ELSE_1	ELSE_2	IF_8
0x11f4	            0x750a	                           jne 0x4001240	       527	bisect.c	FUNCTION_17	WHILE_1	ELSE_1	ELSE_2	IF_8
0x11f6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       529	bisect.c	FUNCTION_17	WHILE_1	ELSE_1	ELSE_2	IF_8
0x11fa	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	       529	bisect.c	FUNCTION_17	WHILE_1	ELSE_1	ELSE_2	IF_8
0x1200	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       532	bisect.c	FUNCTION_17	WHILE_1	ELSE_1
0x1204	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       532	bisect.c	FUNCTION_17	WHILE_1	ELSE_1
0x1208	          0x488910	                    mov qword [rax], rdx	       532	bisect.c	FUNCTION_17	WHILE_1	ELSE_1
0x120b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       533	bisect.c	FUNCTION_17	WHILE_1	ELSE_1
0x120f	        0x4883c008	                              add rax, 8	       533	bisect.c	FUNCTION_17	WHILE_1	ELSE_1
0x1213	        0x488945e8	             mov qword [rbp - 0x18], rax	       533	bisect.c	FUNCTION_17	WHILE_1	ELSE_1
0x1217	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       534	bisect.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x121c	            0x740f	                            je 0x400126d	       534	bisect.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x121e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       535	bisect.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x1222	            0x8b00	                    mov eax, dword [rax]	       535	bisect.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x1224	          0x8d5001	                      lea edx, [rax + 1]	       535	bisect.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x1227	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       535	bisect.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x122b	            0x8910	                    mov dword [rax], edx	       535	bisect.c	FUNCTION_17	WHILE_1	ELSE_1	IF_9
0x122d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       537	bisect.c	FUNCTION_17	WHILE_1
0x1231	        0x488945d8	             mov qword [rbp - 0x28], rax	       537	bisect.c	FUNCTION_17	WHILE_1
0x1235	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       514	bisect.c	FUNCTION_17	WHILE_1
0x123a	     0xf8520ffffff	                           jne 0x40011a0	       514	bisect.c	FUNCTION_17	WHILE_1
0x1240	      0x48837db800	               cmp qword [rbp - 0x48], 0	       540	bisect.c	FUNCTION_17	IF_10
0x1245	            0x7415	                            je 0x400129c	       540	bisect.c	FUNCTION_17	IF_10
0x1247	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       540	bisect.c	FUNCTION_17	IF_10
0x124b	            0x8b00	                    mov eax, dword [rax]	       540	bisect.c	FUNCTION_17	IF_10
0x124d	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       540	bisect.c	FUNCTION_17	IF_10
0x1250	            0x750a	                           jne 0x400129c	       540	bisect.c	FUNCTION_17	IF_10
0x1252	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       541	bisect.c	FUNCTION_17	IF_10
0x1256	    0xc70000000000	                      mov dword [rax], 0	       541	bisect.c	FUNCTION_17	IF_10
0x125c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       543	bisect.c	FUNCTION_17
0x1260	        0x488b4df8	                mov rcx, qword [rbp - 8]	       544	bisect.c	FUNCTION_17
0x1264	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       544	bisect.c	FUNCTION_17
0x126d	            0x7405	                            je 0x40012b4	       544	bisect.c	FUNCTION_17
0x126f	      0xe800000000	                          call 0x40012b4	       544	bisect.c	FUNCTION_17
0x1274	              0xc9	                                   leave	       544	bisect.c	FUNCTION_17
0x1275	              0xc3	                                     ret	       544	bisect.c	FUNCTION_17
strbuf_avail	CALL,0:FOR,0:WHILE,0:IF,0:DO,0:SWITCH,0:ELSE,0:functions,0	18
0x8c	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_43
0x8d	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_43
0x90	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_43
0x94	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_43
0x98	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_43
0x9b	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_43
0x9e	            0x741b	                            je 0x40000fb	       141	strbuf.h	FUNCTION_43
0xa0	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_43
0xa4	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_43
0xa7	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_43
0xab	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_43
0xaf	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_43
0xb2	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_43
0xb5	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_43
0xb9	            0xeb05	                           jmp 0x4000100	       141	strbuf.h	FUNCTION_43
0xbb	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_43
0xc0	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_43
0xc1	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_43
weight	CALL,0:FOR,0:WHILE,0:IF,0:DO,0:SWITCH,0:ELSE,0:functions,0	9
0x438	              0x55	                                push rbp	        76	bisect.c	FUNCTION_3
0x439	          0x4889e5	                            mov rbp, rsp	        76	bisect.c	FUNCTION_3
0x43c	        0x48897df8	                mov qword [rbp - 8], rdi	        76	bisect.c	FUNCTION_3
0x440	        0x488b45f8	                mov rax, qword [rbp - 8]	        77	bisect.c	FUNCTION_3
0x444	          0x488b00	                    mov rax, qword [rax]	        77	bisect.c	FUNCTION_3
0x447	        0x488b4018	            mov rax, qword [rax + 0x18] 	        77	bisect.c	FUNCTION_3
0x44b	            0x8b00	                    mov eax, dword [rax]	        77	bisect.c	FUNCTION_3
0x44d	              0x5d	                                 pop rbp	        78	bisect.c	FUNCTION_3
0x44e	              0xc3	                                     ret	        78	bisect.c	FUNCTION_3
Q_	CALL,2:FOR,0:WHILE,0:IF,1:DO,0:SWITCH,0:ELSE,0:functions,0	14
0x22b	              0x55	                                push rbp	        59	gettext.h	FUNCTION_56
0x22c	          0x4889e5	                            mov rbp, rsp	        59	gettext.h	FUNCTION_56
0x22f	        0x4883ec20	                           sub rsp, 0x20	        59	gettext.h	FUNCTION_56
0x233	        0x48897df8	                mov qword [rbp - 8], rdi	        59	gettext.h	FUNCTION_56
0x237	        0x488975f0	             mov qword [rbp - 0x10], rsi	        59	gettext.h	FUNCTION_56
0x23b	        0x488955e8	             mov qword [rbp - 0x18], rdx	        59	gettext.h	FUNCTION_56
0x23f	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        62	gettext.h	FUNCTION_56	CALL_2
0x243	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        62	gettext.h	FUNCTION_56	CALL_2
0x247	        0x488b45f8	                mov rax, qword [rbp - 8]	        62	gettext.h	FUNCTION_56	CALL_2
0x24b	          0x4889ce	                            mov rsi, rcx	        62	gettext.h	FUNCTION_56	CALL_2
0x24e	          0x4889c7	                            mov rdi, rax	        62	gettext.h	FUNCTION_56	CALL_2
0x251	      0xe800000000	                          call 0x4000296	        62	gettext.h	FUNCTION_56	CALL_2
0x256	              0xc9	                                   leave	        63	gettext.h	FUNCTION_56
0x257	              0xc3	                                     ret	        63	gettext.h	FUNCTION_56
bisect_next_all	CALL,30:FOR,0:WHILE,0:IF,4:DO,0:SWITCH,0:ELSE,0:functions,0	180
0x2221	              0x55	                                push rbp	       942	bisect.c	FUNCTION_36
0x2222	          0x4889e5	                            mov rbp, rsp	       942	bisect.c	FUNCTION_36
0x2225	            0x4155	                                push r13	       942	bisect.c	FUNCTION_36
0x2227	            0x4154	                                push r12	       942	bisect.c	FUNCTION_36
0x2229	              0x53	                                push rbx	       942	bisect.c	FUNCTION_36
0x222a	    0x4881ec080900	                          sub rsp, 0x908	       942	bisect.c	FUNCTION_36
0x2231	    0x4889bde8f6ff	            mov qword [rbp - 0x918], rdi	       942	bisect.c	FUNCTION_36
0x2238	    0x89b5e4f6ffff	            mov dword [rbp - 0x91c], esi	       942	bisect.c	FUNCTION_36
0x223e	    0x64488b042528	                mov rax, qword fs:[0x28]	       942	bisect.c	FUNCTION_36
0x2247	        0x488945d8	             mov qword [rbp - 0x28], rax	       942	bisect.c	FUNCTION_36
0x224b	            0x31c0	                            xor eax, eax	       942	bisect.c	FUNCTION_36
0x224d	    0xc785f8f6ffff	              mov dword [rbp - 0x908], 0	       945	bisect.c	FUNCTION_36
0x2257	    0xc785fcf6ffff	              mov dword [rbp - 0x904], 0	       945	bisect.c	FUNCTION_36
0x2261	      0xbe00000000	                              mov esi, 0	       949	bisect.c	FUNCTION_36	CALL_1
0x2266	      0xbf00000000	                              mov edi, 0	       949	bisect.c	FUNCTION_36	CALL_1
0x226b	      0xe800000000	                          call 0x40022b0	       949	bisect.c	FUNCTION_36	CALL_1
0x2270	      0xe81debffff	               call sym.read_bisect_refs	       950	bisect.c	FUNCTION_36	IF_1	CALL_2
0x2275	            0x85c0	                           test eax, eax	       950	bisect.c	FUNCTION_36	IF_1	CALL_2
0x2277	            0x7417	                            je 0x40022d0	       950	bisect.c	FUNCTION_36	IF_1	CALL_2
0x2279	      0xbf00000000	                              mov edi, 0	       951	bisect.c	FUNCTION_36	CALL_4
0x227e	      0xe87cdfffff	                               call sym.	       951	bisect.c	FUNCTION_36	CALL_4
0x2283	          0x4889c7	                            mov rdi, rax	       951	bisect.c	FUNCTION_36	CALL_4
0x2286	      0xb800000000	                              mov eax, 0	       951	bisect.c	FUNCTION_36	CALL_4
0x228b	      0xe800000000	                          call 0x40022d0	       951	bisect.c	FUNCTION_36	CALL_4
0x2290	    0x8b95e4f6ffff	            mov edx, dword [rbp - 0x91c]	       953	bisect.c	FUNCTION_36	CALL_5
0x2296	    0x488b85e8f6ff	            mov rax, qword [rbp - 0x918]	       953	bisect.c	FUNCTION_36	CALL_5
0x229d	            0x89d6	                            mov esi, edx	       953	bisect.c	FUNCTION_36	CALL_5
0x229f	          0x4889c7	                            mov rdi, rax	       953	bisect.c	FUNCTION_36	CALL_5
0x22a2	      0xe8b2fbffff	call sym.check_good_are_ancestors_of_bad	       953	bisect.c	FUNCTION_36	CALL_5
0x22a7	    0x488bb5e8f6ff	            mov rsi, qword [rbp - 0x918]	       955	bisect.c	FUNCTION_36	CALL_6
0x22ae	    0x488d8520f7ff	                  lea rax, [rbp - 0x8e0]	       955	bisect.c	FUNCTION_36	CALL_6
0x22b5	    0x41b801000000	                              mov r8d, 1	       955	bisect.c	FUNCTION_36	CALL_6
0x22bb	      0xb900000000	                              mov ecx, 0	       955	bisect.c	FUNCTION_36	CALL_6
0x22c0	      0xba00000000	                              mov edx, 0	       955	bisect.c	FUNCTION_36	CALL_6
0x22c5	          0x4889c7	                            mov rdi, rax	       955	bisect.c	FUNCTION_36	CALL_6
0x22c8	      0xe8ccf1ffff	               call sym.bisect_rev_setup	       955	bisect.c	FUNCTION_36	CALL_6
0x22cd	     0xfb68596f7ff	           movzx eax, byte [rbp - 0x86a]	       956	bisect.c	FUNCTION_36
0x22d4	          0x83c804	                               or eax, 4	       956	bisect.c	FUNCTION_36
0x22d7	    0x888596f7ffff	              mov byte [rbp - 0x86a], al	       956	bisect.c	FUNCTION_36
0x22dd	    0x488d8520f7ff	                  lea rax, [rbp - 0x8e0]	       958	bisect.c	FUNCTION_36	CALL_7
0x22e4	          0x4889c7	                            mov rdi, rax	       958	bisect.c	FUNCTION_36	CALL_7
0x22e7	      0xe802f3ffff	                  call sym.bisect_common	       958	bisect.c	FUNCTION_36	CALL_7
0x22ec	    0x8b0500000000	            mov eax, dword [0x04002332] 	       960	bisect.c	FUNCTION_36	CALL_8
0x22f2	            0x85c0	                           test eax, eax	       960	bisect.c	FUNCTION_36	CALL_8
0x22f4	           0xf95c0	                                setne al	       960	bisect.c	FUNCTION_36	CALL_8
0x22f7	           0xfb6c8	                           movzx ecx, al	       960	bisect.c	FUNCTION_36	CALL_8
0x22fa	    0x488d95fcf6ff	                  lea rdx, [rbp - 0x904]	       960	bisect.c	FUNCTION_36	CALL_8
0x2301	    0x488db5f8f6ff	                  lea rsi, [rbp - 0x908]	       960	bisect.c	FUNCTION_36	CALL_8
0x2308	    0x488d8520f7ff	                  lea rax, [rbp - 0x8e0]	       960	bisect.c	FUNCTION_36	CALL_8
0x230f	          0x4889c7	                            mov rdi, rax	       960	bisect.c	FUNCTION_36	CALL_8
0x2312	      0xe800000000	                          call 0x4002357	       960	bisect.c	FUNCTION_36	CALL_8
0x2317	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	       961	bisect.c	FUNCTION_36	CALL_9
0x231e	    0x488d9508f7ff	                  lea rdx, [rbp - 0x8f8]	       961	bisect.c	FUNCTION_36	CALL_9
0x2325	          0x4889d6	                            mov rsi, rdx	       961	bisect.c	FUNCTION_36	CALL_9
0x2328	          0x4889c7	                            mov rdi, rax	       961	bisect.c	FUNCTION_36	CALL_9
0x232b	      0xe8d4f0ffff	                call sym.managed_skipped	       961	bisect.c	FUNCTION_36	CALL_9
0x2330	    0x48898520f7ff	            mov qword [rbp - 0x8e0], rax	       961	bisect.c	FUNCTION_36	CALL_9
0x2337	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	       963	bisect.c	FUNCTION_36	IF_2
0x233e	          0x4885c0	                           test rax, rax	       963	bisect.c	FUNCTION_36	IF_2
0x2341	            0x755e	                           jne 0x40023e1	       963	bisect.c	FUNCTION_36	IF_2
0x2343	    0x488b8508f7ff	            mov rax, qword [rbp - 0x8f8]	       968	bisect.c	FUNCTION_36	IF_2	CALL_10
0x234a	      0xbe00000000	                              mov esi, 0	       968	bisect.c	FUNCTION_36	IF_2	CALL_10
0x234f	          0x4889c7	                            mov rdi, rax	       968	bisect.c	FUNCTION_36	IF_2	CALL_10
0x2352	      0xe8e5f2ffff	        call sym.exit_if_skipped_commits	       968	bisect.c	FUNCTION_36	IF_2	CALL_10
0x2357	    0x4c8b25000000	            mov r12, qword [0x0400239e] 	       970	bisect.c	FUNCTION_36	IF_2	CALL_12
0x235e	    0x488b1d000000	            mov rbx, qword [0x040023a5] 	       970	bisect.c	FUNCTION_36	IF_2	CALL_12
0x2365	    0x488b05000000	            mov rax, qword [0x040023ac] 	       970	bisect.c	FUNCTION_36	IF_2	CALL_12
0x236c	          0x4889c7	                            mov rdi, rax	       970	bisect.c	FUNCTION_36	IF_2	CALL_12
0x236f	      0xe800000000	                          call 0x40023b4	       970	bisect.c	FUNCTION_36	IF_2	CALL_12
0x2374	          0x4989c5	                            mov r13, rax	       970	bisect.c	FUNCTION_36	IF_2	CALL_12
0x2377	      0xbf00000000	                              mov edi, 0	       970	bisect.c	FUNCTION_36	IF_2	CALL_12
0x237c	      0xe87edeffff	                               call sym.	       970	bisect.c	FUNCTION_36	IF_2	CALL_12
0x2381	          0x4c89e1	                            mov rcx, r12	       970	bisect.c	FUNCTION_36	IF_2	CALL_12
0x2384	          0x4889da	                            mov rdx, rbx	       970	bisect.c	FUNCTION_36	IF_2	CALL_12
0x2387	          0x4c89ee	                            mov rsi, r13	       970	bisect.c	FUNCTION_36	IF_2	CALL_12
0x238a	          0x4889c7	                            mov rdi, rax	       970	bisect.c	FUNCTION_36	IF_2	CALL_12
0x238d	      0xb800000000	                              mov eax, 0	       970	bisect.c	FUNCTION_36	IF_2	CALL_12
0x2392	      0xe800000000	                          call 0x40023d7	       970	bisect.c	FUNCTION_36	IF_2	CALL_12
0x2397	      0xbf01000000	                              mov edi, 1	       974	bisect.c	FUNCTION_36	IF_2	CALL_14
0x239c	      0xe800000000	                          call 0x40023e1	       974	bisect.c	FUNCTION_36	IF_2	CALL_14
0x23a1	    0x8b85fcf6ffff	            mov eax, dword [rbp - 0x904]	       977	bisect.c	FUNCTION_36	IF_3
0x23a7	            0x85c0	                           test eax, eax	       977	bisect.c	FUNCTION_36	IF_3
0x23a9	            0x752e	                           jne 0x4002419	       977	bisect.c	FUNCTION_36	IF_3
0x23ab	      0xbf00000000	                              mov edi, 0	       978	bisect.c	FUNCTION_36	IF_3	CALL_16
0x23b0	      0xe84adeffff	                               call sym.	       978	bisect.c	FUNCTION_36	IF_3	CALL_16
0x23b5	          0x4889c2	                            mov rdx, rax	       978	bisect.c	FUNCTION_36	IF_3	CALL_16
0x23b8	    0x488b05000000	            mov rax, qword [0x040023ff] 	       978	bisect.c	FUNCTION_36	IF_3	CALL_16
0x23bf	          0x4889d6	                            mov rsi, rdx	       978	bisect.c	FUNCTION_36	IF_3	CALL_16
0x23c2	          0x4889c7	                            mov rdi, rax	       978	bisect.c	FUNCTION_36	IF_3	CALL_16
0x23c5	      0xb800000000	                              mov eax, 0	       978	bisect.c	FUNCTION_36	IF_3	CALL_16
0x23ca	      0xe800000000	                          call 0x400240f	       978	bisect.c	FUNCTION_36	IF_3	CALL_16
0x23cf	      0xbf04000000	                              mov edi, 4	       980	bisect.c	FUNCTION_36	IF_3	CALL_17
0x23d4	      0xe800000000	                          call 0x4002419	       980	bisect.c	FUNCTION_36	IF_3	CALL_17
0x23d9	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	       983	bisect.c	FUNCTION_36
0x23e0	          0x488b00	                    mov rax, qword [rax]	       983	bisect.c	FUNCTION_36
0x23e3	        0x4883c004	                              add rax, 4	       983	bisect.c	FUNCTION_36
0x23e7	    0x48898510f7ff	            mov qword [rbp - 0x8f0], rax	       983	bisect.c	FUNCTION_36
0x23ee	    0x488b15000000	            mov rdx, qword [0x04002435] 	       985	bisect.c	FUNCTION_36	IF_4	CALL_18
0x23f5	    0x488b8510f7ff	            mov rax, qword [rbp - 0x8f0]	       985	bisect.c	FUNCTION_36	IF_4	CALL_18
0x23fc	          0x4889d6	                            mov rsi, rdx	       985	bisect.c	FUNCTION_36	IF_4	CALL_18
0x23ff	          0x4889c7	                            mov rdi, rax	       985	bisect.c	FUNCTION_36	IF_4	CALL_18
0x2402	      0xe87bdeffff	                         call sym.oidcmp	       985	bisect.c	FUNCTION_36	IF_4	CALL_18
0x2407	            0x85c0	                           test eax, eax	       985	bisect.c	FUNCTION_36	IF_4	CALL_18
0x2409	            0x756a	                           jne 0x40024b5	       985	bisect.c	FUNCTION_36	IF_4	CALL_18
0x240b	    0x488b15000000	            mov rdx, qword [0x04002452] 	       986	bisect.c	FUNCTION_36	IF_4	CALL_19
0x2412	    0x488b8508f7ff	            mov rax, qword [rbp - 0x8f8]	       986	bisect.c	FUNCTION_36	IF_4	CALL_19
0x2419	          0x4889d6	                            mov rsi, rdx	       986	bisect.c	FUNCTION_36	IF_4	CALL_19
0x241c	          0x4889c7	                            mov rdi, rax	       986	bisect.c	FUNCTION_36	IF_4	CALL_19
0x241f	      0xe818f2ffff	        call sym.exit_if_skipped_commits	       986	bisect.c	FUNCTION_36	IF_4	CALL_19
0x2424	    0x488b1d000000	            mov rbx, qword [0x0400246b] 	       987	bisect.c	FUNCTION_36	IF_4	CALL_21
0x242b	    0x488b8510f7ff	            mov rax, qword [rbp - 0x8f0]	       987	bisect.c	FUNCTION_36	IF_4	CALL_21
0x2432	          0x4889c7	                            mov rdi, rax	       987	bisect.c	FUNCTION_36	IF_4	CALL_21
0x2435	      0xe800000000	                          call 0x400247a	       987	bisect.c	FUNCTION_36	IF_4	CALL_21
0x243a	          0x4889da	                            mov rdx, rbx	       987	bisect.c	FUNCTION_36	IF_4	CALL_21
0x243d	          0x4889c6	                            mov rsi, rax	       987	bisect.c	FUNCTION_36	IF_4	CALL_21
0x2440	      0xbf00000000	                              mov edi, 0	       987	bisect.c	FUNCTION_36	IF_4	CALL_21
0x2445	      0xb800000000	                              mov eax, 0	       987	bisect.c	FUNCTION_36	IF_4	CALL_21
0x244a	      0xe800000000	                          call 0x400248f	       987	bisect.c	FUNCTION_36	IF_4	CALL_21
0x244f	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	       989	bisect.c	FUNCTION_36	IF_4	CALL_22
0x2456	          0x488b10	                    mov rdx, qword [rax]	       989	bisect.c	FUNCTION_36	IF_4	CALL_22
0x2459	    0x488b85e8f6ff	            mov rax, qword [rbp - 0x918]	       989	bisect.c	FUNCTION_36	IF_4	CALL_22
0x2460	          0x4889d6	                            mov rsi, rdx	       989	bisect.c	FUNCTION_36	IF_4	CALL_22
0x2463	          0x4889c7	                            mov rdi, rax	       989	bisect.c	FUNCTION_36	IF_4	CALL_22
0x2466	      0xe892fbffff	                 call sym.show_diff_tree	       989	bisect.c	FUNCTION_36	IF_4	CALL_22
0x246b	      0xbf0a000000	                            mov edi, 0xa	       991	bisect.c	FUNCTION_36	IF_4	CALL_23
0x2470	      0xe800000000	                          call 0x40024b5	       991	bisect.c	FUNCTION_36	IF_4	CALL_23
0x2475	    0x8b95fcf6ffff	            mov edx, dword [rbp - 0x904]	       994	bisect.c	FUNCTION_36
0x247b	    0x8b85f8f6ffff	            mov eax, dword [rbp - 0x908]	       994	bisect.c	FUNCTION_36
0x2481	            0x29c2	                            sub edx, eax	       994	bisect.c	FUNCTION_36
0x2483	            0x89d0	                            mov eax, edx	       994	bisect.c	FUNCTION_36
0x2485	          0x83e801	                              sub eax, 1	       994	bisect.c	FUNCTION_36
0x2488	    0x898500f7ffff	            mov dword [rbp - 0x900], eax	       994	bisect.c	FUNCTION_36
0x248e	    0x8b85fcf6ffff	            mov eax, dword [rbp - 0x904]	       995	bisect.c	FUNCTION_36	CALL_24
0x2494	            0x89c7	                            mov edi, eax	       995	bisect.c	FUNCTION_36	CALL_24
0x2496	      0xe800000000	                          call 0x40024db	       995	bisect.c	FUNCTION_36	CALL_24
0x249b	    0x898504f7ffff	            mov dword [rbp - 0x8fc], eax	       995	bisect.c	FUNCTION_36	CALL_24
0x24a1	    0x8b8504f7ffff	            mov eax, dword [rbp - 0x8fc]	       997	bisect.c	FUNCTION_36	CALL_26
0x24a7	            0x4898	                                    cdqe	       997	bisect.c	FUNCTION_36	CALL_26
0x24a9	          0x4889c2	                            mov rdx, rax	       997	bisect.c	FUNCTION_36	CALL_26
0x24ac	      0xbe00000000	                              mov esi, 0	       997	bisect.c	FUNCTION_36	CALL_26
0x24b1	      0xbf00000000	                              mov edi, 0	       997	bisect.c	FUNCTION_36	CALL_26
0x24b6	      0xe870ddffff	                              call sym.Q	       997	bisect.c	FUNCTION_36	CALL_26
0x24bb	          0x4889c2	                            mov rdx, rax	       997	bisect.c	FUNCTION_36	CALL_26
0x24be	    0x8b8504f7ffff	            mov eax, dword [rbp - 0x8fc]	       997	bisect.c	FUNCTION_36	CALL_26
0x24c4	            0x89c6	                            mov esi, eax	       997	bisect.c	FUNCTION_36	CALL_26
0x24c6	          0x4889d7	                            mov rdi, rdx	       997	bisect.c	FUNCTION_36	CALL_26
0x24c9	      0xb800000000	                              mov eax, 0	       997	bisect.c	FUNCTION_36	CALL_26
0x24ce	      0xe800000000	                          call 0x4002513	       997	bisect.c	FUNCTION_36	CALL_26
0x24d3	    0x48898518f7ff	            mov qword [rbp - 0x8e8], rax	       997	bisect.c	FUNCTION_36	CALL_26
0x24da	    0x8b8500f7ffff	            mov eax, dword [rbp - 0x900]	      1003	bisect.c	FUNCTION_36	CALL_28
0x24e0	            0x4898	                                    cdqe	      1003	bisect.c	FUNCTION_36	CALL_28
0x24e2	          0x4889c2	                            mov rdx, rax	      1003	bisect.c	FUNCTION_36	CALL_28
0x24e5	      0xbe00000000	                              mov esi, 0	      1003	bisect.c	FUNCTION_36	CALL_28
0x24ea	      0xbf00000000	                              mov edi, 0	      1003	bisect.c	FUNCTION_36	CALL_28
0x24ef	      0xe837ddffff	                              call sym.Q	      1003	bisect.c	FUNCTION_36	CALL_28
0x24f4	          0x4889c1	                            mov rcx, rax	      1003	bisect.c	FUNCTION_36	CALL_28
0x24f7	    0x488b9518f7ff	            mov rdx, qword [rbp - 0x8e8]	      1003	bisect.c	FUNCTION_36	CALL_28
0x24fe	    0x8b8500f7ffff	            mov eax, dword [rbp - 0x900]	      1003	bisect.c	FUNCTION_36	CALL_28
0x2504	            0x89c6	                            mov esi, eax	      1003	bisect.c	FUNCTION_36	CALL_28
0x2506	          0x4889cf	                            mov rdi, rcx	      1003	bisect.c	FUNCTION_36	CALL_28
0x2509	      0xb800000000	                              mov eax, 0	      1003	bisect.c	FUNCTION_36	CALL_28
0x250e	      0xe800000000	                          call 0x4002553	      1003	bisect.c	FUNCTION_36	CALL_28
0x2513	    0x488b8518f7ff	            mov rax, qword [rbp - 0x8e8]	      1006	bisect.c	FUNCTION_36	CALL_29
0x251a	          0x4889c7	                            mov rdi, rax	      1006	bisect.c	FUNCTION_36	CALL_29
0x251d	      0xe800000000	                          call 0x4002562	      1006	bisect.c	FUNCTION_36	CALL_29
0x2522	    0x8b95e4f6ffff	            mov edx, dword [rbp - 0x91c]	      1008	bisect.c	FUNCTION_36	CALL_30
0x2528	    0x488b8510f7ff	            mov rax, qword [rbp - 0x8f0]	      1008	bisect.c	FUNCTION_36	CALL_30
0x252f	            0x89d6	                            mov esi, edx	      1008	bisect.c	FUNCTION_36	CALL_30
0x2531	          0x4889c7	                            mov rdi, rax	      1008	bisect.c	FUNCTION_36	CALL_30
0x2534	      0xe8edf2ffff	                call sym.bisect_checkout	      1008	bisect.c	FUNCTION_36	CALL_30
0x2539	        0x488b5dd8	             mov rbx, qword [rbp - 0x28]	      1009	bisect.c	FUNCTION_36
0x253d	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1009	bisect.c	FUNCTION_36
0x2546	            0x7405	                            je 0x400258d	      1009	bisect.c	FUNCTION_36
0x2548	      0xe800000000	                          call 0x400258d	      1009	bisect.c	FUNCTION_36
0x254d	    0x4881c4080900	                          add rsp, 0x908	      1009	bisect.c	FUNCTION_36
0x2554	              0x5b	                                 pop rbx	      1009	bisect.c	FUNCTION_36
0x2555	            0x415c	                                 pop r12	      1009	bisect.c	FUNCTION_36
0x2557	            0x415d	                                 pop r13	      1009	bisect.c	FUNCTION_36
0x2559	              0x5d	                                 pop rbp	      1009	bisect.c	FUNCTION_36
0x255a	              0xc3	                                     ret	      1009	bisect.c	FUNCTION_36
do_find_bisection	CALL,23:FOR,4:WHILE,1:IF,11:DO,0:SWITCH,1:ELSE,2:functions,0	215
0x844	              0x55	                                push rbp	       258	bisect.c	FUNCTION_11
0x845	          0x4889e5	                            mov rbp, rsp	       258	bisect.c	FUNCTION_11
0x848	        0x4883ec50	                           sub rsp, 0x50	       258	bisect.c	FUNCTION_11
0x84c	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       258	bisect.c	FUNCTION_11
0x850	          0x8975c4	             mov dword [rbp - 0x3c], esi	       258	bisect.c	FUNCTION_11
0x853	        0x488955b8	             mov qword [rbp - 0x48], rdx	       258	bisect.c	FUNCTION_11
0x857	          0x894dc0	             mov dword [rbp - 0x40], ecx	       258	bisect.c	FUNCTION_11
0x85a	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       262	bisect.c	FUNCTION_11
0x861	    0xc745d8000000	               mov dword [rbp - 0x28], 0	       264	bisect.c	FUNCTION_11	FOR_1
0x868	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       264	bisect.c	FUNCTION_11	FOR_1
0x86c	        0x488945e8	             mov qword [rbp - 0x18], rax	       264	bisect.c	FUNCTION_11	FOR_1
0x870	      0xe9ac000000	                           jmp 0x4000961	       264	bisect.c	FUNCTION_11	FOR_1
0x875	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       265	bisect.c	FUNCTION_11	FOR_1
0x879	          0x488b00	                    mov rax, qword [rax]	       265	bisect.c	FUNCTION_11	FOR_1
0x87c	        0x488945f8	                mov qword [rbp - 8], rax	       265	bisect.c	FUNCTION_11	FOR_1
0x880	        0x488b45f8	                mov rax, qword [rbp - 8]	       266	bisect.c	FUNCTION_11	FOR_1
0x884	            0x8b00	                    mov eax, dword [rax]	       266	bisect.c	FUNCTION_11	FOR_1
0x886	          0xc1e804	                              shr eax, 4	       266	bisect.c	FUNCTION_11	FOR_1
0x889	      0x25ffffff07	                      and eax, 0x7ffffff	       266	bisect.c	FUNCTION_11	FOR_1
0x88e	          0x8945e0	             mov dword [rbp - 0x20], eax	       266	bisect.c	FUNCTION_11	FOR_1
0x891	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       268	bisect.c	FUNCTION_11	FOR_1
0x895	          0x488b10	                    mov rdx, qword [rax]	       268	bisect.c	FUNCTION_11	FOR_1
0x898	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       268	bisect.c	FUNCTION_11	FOR_1
0x89b	          0x8d4801	                      lea ecx, [rax + 1]	       268	bisect.c	FUNCTION_11	FOR_1
0x89e	          0x894dd8	             mov dword [rbp - 0x28], ecx	       268	bisect.c	FUNCTION_11	FOR_1
0x8a1	            0x4898	                                    cdqe	       268	bisect.c	FUNCTION_11	FOR_1
0x8a3	    0x488d0c850000	                        lea rcx, [rax*4]	       268	bisect.c	FUNCTION_11	FOR_1
0x8ab	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       268	bisect.c	FUNCTION_11	FOR_1
0x8af	          0x4801c8	                            add rax, rcx	       268	bisect.c	FUNCTION_11	FOR_1
0x8b2	        0x48894218	             mov qword [rdx + 0x18], rax	       268	bisect.c	FUNCTION_11	FOR_1
0x8b6	        0x488b45f8	                mov rax, qword [rbp - 8]	       269	bisect.c	FUNCTION_11	FOR_1	SWITCH_1	CALL_1
0x8ba	          0x4889c7	                            mov rdi, rax	       269	bisect.c	FUNCTION_11	FOR_1	SWITCH_1	CALL_1
0x8bd	      0xe8abfbffff	      call sym.count_interesting_parents	       269	bisect.c	FUNCTION_11	FOR_1	SWITCH_1	CALL_1
0x8c2	            0x85c0	                           test eax, eax	       269	bisect.c	FUNCTION_11	FOR_1	SWITCH_1	CALL_1
0x8c4	            0x7407	                            je 0x400090d	       269	bisect.c	FUNCTION_11	FOR_1	SWITCH_1	CALL_1
0x8c6	          0x83f801	                              cmp eax, 1	       269	bisect.c	FUNCTION_11	FOR_1	SWITCH_1	CALL_1
0x8c9	            0x7423	                            je 0x400092e	       269	bisect.c	FUNCTION_11	FOR_1	SWITCH_1	CALL_1
0x8cb	            0xeb34	                           jmp 0x4000941	       269	bisect.c	FUNCTION_11	FOR_1	SWITCH_1	CALL_1
0x8cd	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       271	bisect.c	FUNCTION_11	FOR_1	SWITCH_1	IF_1
0x8d0	          0x83e004	                              and eax, 4	       271	bisect.c	FUNCTION_11	FOR_1	SWITCH_1	IF_1
0x8d3	            0x85c0	                           test eax, eax	       271	bisect.c	FUNCTION_11	FOR_1	SWITCH_1	IF_1
0x8d5	            0x753d	                           jne 0x4000954	       271	bisect.c	FUNCTION_11	FOR_1	SWITCH_1	IF_1
0x8d7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       272	bisect.c	FUNCTION_11	FOR_1	SWITCH_1	IF_1	CALL_2
0x8db	      0xbe01000000	                              mov esi, 1	       272	bisect.c	FUNCTION_11	FOR_1	SWITCH_1	IF_1	CALL_2
0x8e0	          0x4889c7	                            mov rdi, rax	       272	bisect.c	FUNCTION_11	FOR_1	SWITCH_1	IF_1	CALL_2
0x8e3	      0xe867fbffff	                     call sym.weight_set	       272	bisect.c	FUNCTION_11	FOR_1	SWITCH_1	IF_1	CALL_2
0x8e8	        0x8345dc01	               add dword [rbp - 0x24], 1	       273	bisect.c	FUNCTION_11	FOR_1	SWITCH_1	IF_1
0x8ec	            0xeb26	                           jmp 0x4000954	       281	bisect.c	FUNCTION_11	FOR_1	SWITCH_1
0x8ee	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       283	bisect.c	FUNCTION_11	FOR_1	SWITCH_1	CALL_4
0x8f2	      0xbeffffffff	                     mov esi, 0xffffffff	       283	bisect.c	FUNCTION_11	FOR_1	SWITCH_1	CALL_4
0x8f7	          0x4889c7	                            mov rdi, rax	       283	bisect.c	FUNCTION_11	FOR_1	SWITCH_1	CALL_4
0x8fa	      0xe850fbffff	                     call sym.weight_set	       283	bisect.c	FUNCTION_11	FOR_1	SWITCH_1	CALL_4
0x8ff	            0xeb14	                           jmp 0x4000955	       284	bisect.c	FUNCTION_11	FOR_1	SWITCH_1
0x901	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       286	bisect.c	FUNCTION_11	FOR_1	SWITCH_1	CALL_5
0x905	      0xbefeffffff	                     mov esi, 0xfffffffe	       286	bisect.c	FUNCTION_11	FOR_1	SWITCH_1	CALL_5
0x90a	          0x4889c7	                            mov rdi, rax	       286	bisect.c	FUNCTION_11	FOR_1	SWITCH_1	CALL_5
0x90d	      0xe83dfbffff	                     call sym.weight_set	       286	bisect.c	FUNCTION_11	FOR_1	SWITCH_1	CALL_5
0x912	            0xeb01	                           jmp 0x4000955	       287	bisect.c	FUNCTION_11	FOR_1	SWITCH_1
0x914	              0x90	                                     nop	       281	bisect.c	FUNCTION_11	FOR_1	SWITCH_1
0x915	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       264	bisect.c	FUNCTION_11	FOR_1
0x919	        0x488b4008	                mov rax, qword [rax + 8]	       264	bisect.c	FUNCTION_11	FOR_1
0x91d	        0x488945e8	             mov qword [rbp - 0x18], rax	       264	bisect.c	FUNCTION_11	FOR_1
0x921	      0x48837de800	               cmp qword [rbp - 0x18], 0	       264	bisect.c	FUNCTION_11	FOR_1
0x926	     0xf8549ffffff	                           jne 0x40008b5	       264	bisect.c	FUNCTION_11	FOR_1
0x92c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       307	bisect.c	FUNCTION_11	FOR_2
0x930	        0x488945e8	             mov qword [rbp - 0x18], rax	       307	bisect.c	FUNCTION_11	FOR_2
0x934	      0xe98b000000	                           jmp 0x4000a04	       307	bisect.c	FUNCTION_11	FOR_2
0x939	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       308	bisect.c	FUNCTION_11	FOR_2	IF_2
0x93d	          0x488b00	                    mov rax, qword [rax]	       308	bisect.c	FUNCTION_11	FOR_2	IF_2
0x940	            0x8b00	                    mov eax, dword [rax]	       308	bisect.c	FUNCTION_11	FOR_2	IF_2
0x942	          0xc1e804	                              shr eax, 4	       308	bisect.c	FUNCTION_11	FOR_2	IF_2
0x945	      0x25ffffff07	                      and eax, 0x7ffffff	       308	bisect.c	FUNCTION_11	FOR_2	IF_2
0x94a	          0x83e002	                              and eax, 2	       308	bisect.c	FUNCTION_11	FOR_2	IF_2
0x94d	            0x85c0	                           test eax, eax	       308	bisect.c	FUNCTION_11	FOR_2	IF_2
0x94f	            0x7563	                           jne 0x40009f4	       308	bisect.c	FUNCTION_11	FOR_2	IF_2
0x951	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       310	bisect.c	FUNCTION_11	FOR_2	IF_3	CALL_7
0x955	          0x4889c7	                            mov rdi, rax	       310	bisect.c	FUNCTION_11	FOR_2	IF_3	CALL_7
0x958	      0xe8dbfaffff	                         call sym.weight	       310	bisect.c	FUNCTION_11	FOR_2	IF_3	CALL_7
0x95d	          0x83f8fe	             cmp eax, 0xfffffffffffffffe	       310	bisect.c	FUNCTION_11	FOR_2	IF_3	CALL_7
0x960	            0x7555	                           jne 0x40009f7	       310	bisect.c	FUNCTION_11	FOR_2	IF_3	CALL_7
0x962	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       312	bisect.c	FUNCTION_11	FOR_2	CALL_9
0x966	          0x4889c7	                            mov rdi, rax	       312	bisect.c	FUNCTION_11	FOR_2	CALL_9
0x969	      0xe88af9ffff	                 call sym.count_distance	       312	bisect.c	FUNCTION_11	FOR_2	CALL_9
0x96e	            0x89c2	                            mov edx, eax	       312	bisect.c	FUNCTION_11	FOR_2	CALL_9
0x970	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       312	bisect.c	FUNCTION_11	FOR_2	CALL_9
0x974	            0x89d6	                            mov esi, edx	       312	bisect.c	FUNCTION_11	FOR_2	CALL_9
0x976	          0x4889c7	                            mov rdi, rax	       312	bisect.c	FUNCTION_11	FOR_2	CALL_9
0x979	      0xe8d1faffff	                     call sym.weight_set	       312	bisect.c	FUNCTION_11	FOR_2	CALL_9
0x97e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       313	bisect.c	FUNCTION_11	FOR_2	CALL_10
0x982	          0x4889c7	                            mov rdi, rax	       313	bisect.c	FUNCTION_11	FOR_2	CALL_10
0x985	      0xe853faffff	                 call sym.clear_distance	       313	bisect.c	FUNCTION_11	FOR_2	CALL_10
0x98a	        0x837dc000	               cmp dword [rbp - 0x40], 0	       316	bisect.c	FUNCTION_11	FOR_2	IF_4	CALL_11
0x98e	            0x751e	                           jne 0x40009ee	       316	bisect.c	FUNCTION_11	FOR_2	IF_4	CALL_11
0x990	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       316	bisect.c	FUNCTION_11	FOR_2	IF_4	CALL_11
0x993	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       316	bisect.c	FUNCTION_11	FOR_2	IF_4	CALL_11
0x997	            0x89d6	                            mov esi, edx	       316	bisect.c	FUNCTION_11	FOR_2	IF_4	CALL_11
0x999	          0x4889c7	                            mov rdi, rax	       316	bisect.c	FUNCTION_11	FOR_2	IF_4	CALL_11
0x99c	      0xe820fbffff	                        call sym.halfway	       316	bisect.c	FUNCTION_11	FOR_2	IF_4	CALL_11
0x9a1	            0x85c0	                           test eax, eax	       316	bisect.c	FUNCTION_11	FOR_2	IF_4	CALL_11
0x9a3	            0x7409	                            je 0x40009ee	       316	bisect.c	FUNCTION_11	FOR_2	IF_4	CALL_11
0x9a5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       317	bisect.c	FUNCTION_11	FOR_2	IF_4
0x9a9	      0xe96f010000	                           jmp 0x4000b5d	       317	bisect.c	FUNCTION_11	FOR_2	IF_4
0x9ae	        0x8345dc01	               add dword [rbp - 0x24], 1	       318	bisect.c	FUNCTION_11	FOR_2
0x9b2	            0xeb04	                           jmp 0x40009f8	       318	bisect.c	FUNCTION_11	FOR_2
0x9b4	              0x90	                                     nop	       309	bisect.c	FUNCTION_11	FOR_2	IF_2
0x9b5	            0xeb01	                           jmp 0x40009f8	       309	bisect.c	FUNCTION_11	FOR_2	IF_2
0x9b7	              0x90	                                     nop	       311	bisect.c	FUNCTION_11	FOR_2	IF_3
0x9b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       307	bisect.c	FUNCTION_11	FOR_2
0x9bc	        0x488b4008	                mov rax, qword [rax + 8]	       307	bisect.c	FUNCTION_11	FOR_2
0x9c0	        0x488945e8	             mov qword [rbp - 0x18], rax	       307	bisect.c	FUNCTION_11	FOR_2
0x9c4	      0x48837de800	               cmp qword [rbp - 0x18], 0	       307	bisect.c	FUNCTION_11	FOR_2
0x9c9	     0xf856affffff	                           jne 0x4000979	       307	bisect.c	FUNCTION_11	FOR_2
0x9cf	      0xe913010000	                           jmp 0x4000b27	       323	bisect.c	FUNCTION_11	WHILE_1
0x9d4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       324	bisect.c	FUNCTION_11	WHILE_1	FOR_3
0x9d8	        0x488945e8	             mov qword [rbp - 0x18], rax	       324	bisect.c	FUNCTION_11	WHILE_1	FOR_3
0x9dc	      0xe9fb000000	                           jmp 0x4000b1c	       324	bisect.c	FUNCTION_11	WHILE_1	FOR_3
0x9e1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       326	bisect.c	FUNCTION_11	WHILE_1	FOR_3
0x9e5	          0x488b00	                    mov rax, qword [rax]	       326	bisect.c	FUNCTION_11	WHILE_1	FOR_3
0x9e8	            0x8b00	                    mov eax, dword [rax]	       326	bisect.c	FUNCTION_11	WHILE_1	FOR_3
0x9ea	          0xc1e804	                              shr eax, 4	       326	bisect.c	FUNCTION_11	WHILE_1	FOR_3
0x9ed	      0x25ffffff07	                      and eax, 0x7ffffff	       326	bisect.c	FUNCTION_11	WHILE_1	FOR_3
0x9f2	          0x8945e4	             mov dword [rbp - 0x1c], eax	       326	bisect.c	FUNCTION_11	WHILE_1	FOR_3
0x9f5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       328	bisect.c	FUNCTION_11	WHILE_1	FOR_3	IF_5	CALL_13
0x9f9	          0x4889c7	                            mov rdi, rax	       328	bisect.c	FUNCTION_11	WHILE_1	FOR_3	IF_5	CALL_13
0x9fc	      0xe837faffff	                         call sym.weight	       328	bisect.c	FUNCTION_11	WHILE_1	FOR_3	IF_5	CALL_13
0xa01	            0x85c0	                           test eax, eax	       328	bisect.c	FUNCTION_11	WHILE_1	FOR_3	IF_5	CALL_13
0xa03	     0xf89c3000000	                           jns 0x4000b0c	       328	bisect.c	FUNCTION_11	WHILE_1	FOR_3	IF_5	CALL_13
0xa09	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       330	bisect.c	FUNCTION_11	WHILE_1	FOR_3	FOR_4
0xa0d	          0x488b00	                    mov rax, qword [rax]	       330	bisect.c	FUNCTION_11	WHILE_1	FOR_3	FOR_4
0xa10	        0x488b4030	            mov rax, qword [rax + 0x30] 	       330	bisect.c	FUNCTION_11	WHILE_1	FOR_3	FOR_4
0xa14	        0x488945f0	             mov qword [rbp - 0x10], rax	       330	bisect.c	FUNCTION_11	WHILE_1	FOR_3	FOR_4
0xa18	            0xeb37	                           jmp 0x4000a91	       330	bisect.c	FUNCTION_11	WHILE_1	FOR_3	FOR_4
0xa1a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       331	bisect.c	FUNCTION_11	WHILE_1	FOR_3	FOR_4	IF_6
0xa1e	          0x488b00	                    mov rax, qword [rax]	       331	bisect.c	FUNCTION_11	WHILE_1	FOR_3	FOR_4	IF_6
0xa21	            0x8b00	                    mov eax, dword [rax]	       331	bisect.c	FUNCTION_11	WHILE_1	FOR_3	FOR_4	IF_6
0xa23	          0xc1e804	                              shr eax, 4	       331	bisect.c	FUNCTION_11	WHILE_1	FOR_3	FOR_4	IF_6
0xa26	      0x25ffffff07	                      and eax, 0x7ffffff	       331	bisect.c	FUNCTION_11	WHILE_1	FOR_3	FOR_4	IF_6
0xa2b	          0x83e002	                              and eax, 2	       331	bisect.c	FUNCTION_11	WHILE_1	FOR_3	FOR_4	IF_6
0xa2e	            0x85c0	                           test eax, eax	       331	bisect.c	FUNCTION_11	WHILE_1	FOR_3	FOR_4	IF_6
0xa30	            0x7512	                           jne 0x4000a84	       331	bisect.c	FUNCTION_11	WHILE_1	FOR_3	FOR_4	IF_6
0xa32	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       333	bisect.c	FUNCTION_11	WHILE_1	FOR_3	FOR_4	IF_7	CALL_14
0xa36	          0x4889c7	                            mov rdi, rax	       333	bisect.c	FUNCTION_11	WHILE_1	FOR_3	FOR_4	IF_7	CALL_14
0xa39	      0xe8faf9ffff	                         call sym.weight	       333	bisect.c	FUNCTION_11	WHILE_1	FOR_3	FOR_4	IF_7	CALL_14
0xa3e	            0x85c0	                           test eax, eax	       333	bisect.c	FUNCTION_11	WHILE_1	FOR_3	FOR_4	IF_7	CALL_14
0xa40	            0x7918	                           jns 0x4000a9a	       333	bisect.c	FUNCTION_11	WHILE_1	FOR_3	FOR_4	IF_7	CALL_14
0xa42	            0xeb01	                           jmp 0x4000a85	       333	bisect.c	FUNCTION_11	WHILE_1	FOR_3	FOR_4	IF_7	CALL_14
0xa44	              0x90	                                     nop	       332	bisect.c	FUNCTION_11	WHILE_1	FOR_3	FOR_4	IF_6
0xa45	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       330	bisect.c	FUNCTION_11	WHILE_1	FOR_3	FOR_4
0xa49	        0x488b4008	                mov rax, qword [rax + 8]	       330	bisect.c	FUNCTION_11	WHILE_1	FOR_3	FOR_4
0xa4d	        0x488945f0	             mov qword [rbp - 0x10], rax	       330	bisect.c	FUNCTION_11	WHILE_1	FOR_3	FOR_4
0xa51	      0x48837df000	               cmp qword [rbp - 0x10], 0	       330	bisect.c	FUNCTION_11	WHILE_1	FOR_3	FOR_4
0xa56	            0x75c2	                           jne 0x4000a5a	       330	bisect.c	FUNCTION_11	WHILE_1	FOR_3	FOR_4
0xa58	            0xeb01	                           jmp 0x4000a9b	       330	bisect.c	FUNCTION_11	WHILE_1	FOR_3	FOR_4
0xa5a	              0x90	                                     nop	       334	bisect.c	FUNCTION_11	WHILE_1	FOR_3	FOR_4	IF_7
0xa5b	      0x48837df000	               cmp qword [rbp - 0x10], 0	       336	bisect.c	FUNCTION_11	WHILE_1	FOR_3	IF_8
0xa60	            0x746d	                            je 0x4000b0f	       336	bisect.c	FUNCTION_11	WHILE_1	FOR_3	IF_8
0xa62	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       344	bisect.c	FUNCTION_11	WHILE_1	FOR_3	IF_9
0xa65	          0x83e004	                              and eax, 4	       344	bisect.c	FUNCTION_11	WHILE_1	FOR_3	IF_9
0xa68	            0x85c0	                           test eax, eax	       344	bisect.c	FUNCTION_11	WHILE_1	FOR_3	IF_9
0xa6a	            0x7523	                           jne 0x4000acf	       344	bisect.c	FUNCTION_11	WHILE_1	FOR_3	IF_9
0xa6c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       345	bisect.c	FUNCTION_11	WHILE_1	FOR_3	IF_9	CALL_16
0xa70	          0x4889c7	                            mov rdi, rax	       345	bisect.c	FUNCTION_11	WHILE_1	FOR_3	IF_9	CALL_16
0xa73	      0xe8c0f9ffff	                         call sym.weight	       345	bisect.c	FUNCTION_11	WHILE_1	FOR_3	IF_9	CALL_16
0xa78	          0x8d5001	                      lea edx, [rax + 1]	       345	bisect.c	FUNCTION_11	WHILE_1	FOR_3	IF_9	CALL_16
0xa7b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       345	bisect.c	FUNCTION_11	WHILE_1	FOR_3	IF_9	CALL_16
0xa7f	            0x89d6	                            mov esi, edx	       345	bisect.c	FUNCTION_11	WHILE_1	FOR_3	IF_9	CALL_16
0xa81	          0x4889c7	                            mov rdi, rax	       345	bisect.c	FUNCTION_11	WHILE_1	FOR_3	IF_9	CALL_16
0xa84	      0xe8c6f9ffff	                     call sym.weight_set	       345	bisect.c	FUNCTION_11	WHILE_1	FOR_3	IF_9	CALL_16
0xa89	        0x8345dc01	               add dword [rbp - 0x24], 1	       346	bisect.c	FUNCTION_11	WHILE_1	FOR_3	IF_9
0xa8d	            0xeb1c	                           jmp 0x4000aeb	       346	bisect.c	FUNCTION_11	WHILE_1	FOR_3	IF_9
0xa8f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       351	bisect.c	FUNCTION_11	WHILE_1	FOR_3	CALL_19
0xa93	          0x4889c7	                            mov rdi, rax	       351	bisect.c	FUNCTION_11	WHILE_1	FOR_3	CALL_19
0xa96	      0xe89df9ffff	                         call sym.weight	       351	bisect.c	FUNCTION_11	WHILE_1	FOR_3	CALL_19
0xa9b	            0x89c2	                            mov edx, eax	       351	bisect.c	FUNCTION_11	WHILE_1	FOR_3	CALL_19
0xa9d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       351	bisect.c	FUNCTION_11	WHILE_1	FOR_3	CALL_19
0xaa1	            0x89d6	                            mov esi, edx	       351	bisect.c	FUNCTION_11	WHILE_1	FOR_3	CALL_19
0xaa3	          0x4889c7	                            mov rdi, rax	       351	bisect.c	FUNCTION_11	WHILE_1	FOR_3	CALL_19
0xaa6	      0xe8a4f9ffff	                     call sym.weight_set	       351	bisect.c	FUNCTION_11	WHILE_1	FOR_3	CALL_19
0xaab	        0x837dc000	               cmp dword [rbp - 0x40], 0	       354	bisect.c	FUNCTION_11	WHILE_1	FOR_3	IF_10	CALL_20
0xaaf	            0x751f	                           jne 0x4000b10	       354	bisect.c	FUNCTION_11	WHILE_1	FOR_3	IF_10	CALL_20
0xab1	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       354	bisect.c	FUNCTION_11	WHILE_1	FOR_3	IF_10	CALL_20
0xab4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       354	bisect.c	FUNCTION_11	WHILE_1	FOR_3	IF_10	CALL_20
0xab8	            0x89d6	                            mov esi, edx	       354	bisect.c	FUNCTION_11	WHILE_1	FOR_3	IF_10	CALL_20
0xaba	          0x4889c7	                            mov rdi, rax	       354	bisect.c	FUNCTION_11	WHILE_1	FOR_3	IF_10	CALL_20
0xabd	      0xe8fff9ffff	                        call sym.halfway	       354	bisect.c	FUNCTION_11	WHILE_1	FOR_3	IF_10	CALL_20
0xac2	            0x85c0	                           test eax, eax	       354	bisect.c	FUNCTION_11	WHILE_1	FOR_3	IF_10	CALL_20
0xac4	            0x740a	                            je 0x4000b10	       354	bisect.c	FUNCTION_11	WHILE_1	FOR_3	IF_10	CALL_20
0xac6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       355	bisect.c	FUNCTION_11	WHILE_1	FOR_3	IF_10
0xaca	            0xeb51	                           jmp 0x4000b5d	       355	bisect.c	FUNCTION_11	WHILE_1	FOR_3	IF_10
0xacc	              0x90	                                     nop	       329	bisect.c	FUNCTION_11	WHILE_1	FOR_3	IF_5
0xacd	            0xeb01	                           jmp 0x4000b10	       329	bisect.c	FUNCTION_11	WHILE_1	FOR_3	IF_5
0xacf	              0x90	                                     nop	       337	bisect.c	FUNCTION_11	WHILE_1	FOR_3	IF_8
0xad0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       324	bisect.c	FUNCTION_11	WHILE_1	FOR_3
0xad4	        0x488b4008	                mov rax, qword [rax + 8]	       324	bisect.c	FUNCTION_11	WHILE_1	FOR_3
0xad8	        0x488945e8	             mov qword [rbp - 0x18], rax	       324	bisect.c	FUNCTION_11	WHILE_1	FOR_3
0xadc	      0x48837de800	               cmp qword [rbp - 0x18], 0	       324	bisect.c	FUNCTION_11	WHILE_1	FOR_3
0xae1	     0xf85fafeffff	                           jne 0x4000a21	       324	bisect.c	FUNCTION_11	WHILE_1	FOR_3
0xae7	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       323	bisect.c	FUNCTION_11	WHILE_1
0xaea	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	       323	bisect.c	FUNCTION_11	WHILE_1
0xaed	     0xf8ce1feffff	                            jl 0x4000a14	       323	bisect.c	FUNCTION_11	WHILE_1
0xaf3	        0x837dc000	               cmp dword [rbp - 0x40], 0	       361	bisect.c	FUNCTION_11	IF_11
0xaf7	            0x7513	                           jne 0x4000b4c	       361	bisect.c	FUNCTION_11	IF_11
0xaf9	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       362	bisect.c	FUNCTION_11	CALL_22
0xafc	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       362	bisect.c	FUNCTION_11	CALL_22
0xb00	            0x89d6	                            mov esi, edx	       362	bisect.c	FUNCTION_11	CALL_22
0xb02	          0x4889c7	                            mov rdi, rax	       362	bisect.c	FUNCTION_11	CALL_22
0xb05	      0xe80cfaffff	                 call sym.best_bisection	       362	bisect.c	FUNCTION_11	CALL_22
0xb0a	            0xeb11	                           jmp 0x4000b5d	       362	bisect.c	FUNCTION_11	CALL_22
0xb0c	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       364	bisect.c	FUNCTION_11	CALL_23
0xb0f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       364	bisect.c	FUNCTION_11	CALL_23
0xb13	            0x89d6	                            mov esi, edx	       364	bisect.c	FUNCTION_11	CALL_23
0xb15	          0x4889c7	                            mov rdi, rax	       364	bisect.c	FUNCTION_11	CALL_23
0xb18	      0xe8fdfaffff	          call sym.best_bisection_sorted	       364	bisect.c	FUNCTION_11	CALL_23
0xb1d	              0xc9	                                   leave	       365	bisect.c	FUNCTION_11
0xb1e	              0xc3	                                     ret	       365	bisect.c	FUNCTION_11
check_merge_bases	CALL,11:FOR,1:WHILE,0:IF,3:DO,0:SWITCH,0:ELSE,3:functions,0	70
0x1cb0	              0x55	                                push rbp	       797	bisect.c	FUNCTION_31
0x1cb1	          0x4889e5	                            mov rbp, rsp	       797	bisect.c	FUNCTION_31
0x1cb4	        0x4883ec20	                           sub rsp, 0x20	       797	bisect.c	FUNCTION_31
0x1cb8	          0x897dec	             mov dword [rbp - 0x14], edi	       797	bisect.c	FUNCTION_31
0x1cbb	        0x488975e0	             mov qword [rbp - 0x20], rsi	       797	bisect.c	FUNCTION_31
0x1cbf	          0x8955e8	             mov dword [rbp - 0x18], edx	       797	bisect.c	FUNCTION_31
0x1cc2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       800	bisect.c	FUNCTION_31	CALL_1
0x1cc6	        0x488d5008	                      lea rdx, [rax + 8]	       800	bisect.c	FUNCTION_31	CALL_1
0x1cca	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       800	bisect.c	FUNCTION_31	CALL_1
0x1ccd	          0x8d48ff	                      lea ecx, [rax - 1]	       800	bisect.c	FUNCTION_31	CALL_1
0x1cd0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       800	bisect.c	FUNCTION_31	CALL_1
0x1cd4	          0x488b00	                    mov rax, qword [rax]	       800	bisect.c	FUNCTION_31	CALL_1
0x1cd7	            0x89ce	                            mov esi, ecx	       800	bisect.c	FUNCTION_31	CALL_1
0x1cd9	          0x4889c7	                            mov rdi, rax	       800	bisect.c	FUNCTION_31	CALL_1
0x1cdc	      0xe800000000	                          call 0x4001d21	       800	bisect.c	FUNCTION_31	CALL_1
0x1ce1	        0x488945f0	             mov qword [rbp - 0x10], rax	       800	bisect.c	FUNCTION_31	CALL_1
0x1ce5	      0xe9a4000000	                           jmp 0x4001dce	       802	bisect.c	FUNCTION_31	FOR_1
0x1cea	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       803	bisect.c	FUNCTION_31	FOR_1
0x1cee	          0x488b00	                    mov rax, qword [rax]	       803	bisect.c	FUNCTION_31	FOR_1
0x1cf1	        0x4883c004	                              add rax, 4	       803	bisect.c	FUNCTION_31	FOR_1
0x1cf5	        0x488945f8	                mov qword [rbp - 8], rax	       803	bisect.c	FUNCTION_31	FOR_1
0x1cf9	    0x488b15000000	            mov rdx, qword [0x04001d40] 	       804	bisect.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x1d00	        0x488b45f8	                mov rax, qword [rbp - 8]	       804	bisect.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x1d04	          0x4889d6	                            mov rsi, rdx	       804	bisect.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x1d07	          0x4889c7	                            mov rdi, rax	       804	bisect.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x1d0a	      0xe873e5ffff	                         call sym.oidcmp	       804	bisect.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x1d0f	            0x85c0	                           test eax, eax	       804	bisect.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x1d11	            0x7507	                           jne 0x4001d5a	       804	bisect.c	FUNCTION_31	FOR_1	IF_1	CALL_2
0x1d13	      0xe846fdffff	          call sym.handle_bad_merge_base	       805	bisect.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x1d18	            0xeb68	                           jmp 0x4001dc2	       805	bisect.c	FUNCTION_31	FOR_1	IF_1	CALL_3
0x1d1a	        0x488b45f8	                mov rax, qword [rbp - 8]	       806	bisect.c	FUNCTION_31	FOR_1	ELSE_1	IF_2	CALL_4
0x1d1e	          0x4889c6	                            mov rsi, rax	       806	bisect.c	FUNCTION_31	FOR_1	ELSE_1	IF_2	CALL_4
0x1d21	      0xbf00000000	                              mov edi, 0	       806	bisect.c	FUNCTION_31	FOR_1	ELSE_1	IF_2	CALL_4
0x1d26	      0xe800000000	                          call 0x4001d6b	       806	bisect.c	FUNCTION_31	FOR_1	ELSE_1	IF_2	CALL_4
0x1d2b	            0x85c0	                           test eax, eax	       806	bisect.c	FUNCTION_31	FOR_1	ELSE_1	IF_2	CALL_4
0x1d2d	            0x7952	                           jns 0x4001dc1	       806	bisect.c	FUNCTION_31	FOR_1	ELSE_1	IF_2	CALL_4
0x1d2f	        0x488b45f8	                mov rax, qword [rbp - 8]	       808	bisect.c	FUNCTION_31	FOR_1	ELSE_2	IF_3	CALL_5
0x1d33	          0x4889c6	                            mov rsi, rax	       808	bisect.c	FUNCTION_31	FOR_1	ELSE_2	IF_3	CALL_5
0x1d36	      0xbf00000000	                              mov edi, 0	       808	bisect.c	FUNCTION_31	FOR_1	ELSE_2	IF_3	CALL_5
0x1d3b	      0xe800000000	                          call 0x4001d80	       808	bisect.c	FUNCTION_31	FOR_1	ELSE_2	IF_3	CALL_5
0x1d40	            0x85c0	                           test eax, eax	       808	bisect.c	FUNCTION_31	FOR_1	ELSE_2	IF_3	CALL_5
0x1d42	            0x780e	                            js 0x4001d92	       808	bisect.c	FUNCTION_31	FOR_1	ELSE_2	IF_3	CALL_5
0x1d44	        0x488b45f8	                mov rax, qword [rbp - 8]	       809	bisect.c	FUNCTION_31	FOR_1	ELSE_2	IF_3	CALL_6
0x1d48	          0x4889c7	                            mov rdi, rax	       809	bisect.c	FUNCTION_31	FOR_1	ELSE_2	IF_3	CALL_6
0x1d4b	      0xe8cffeffff	      call sym.handle_skipped_merge_base	       809	bisect.c	FUNCTION_31	FOR_1	ELSE_2	IF_3	CALL_6
0x1d50	            0xeb30	                           jmp 0x4001dc2	       809	bisect.c	FUNCTION_31	FOR_1	ELSE_2	IF_3	CALL_6
0x1d52	      0xbf00000000	                              mov edi, 0	       811	bisect.c	FUNCTION_31	FOR_1	ELSE_3	CALL_8
0x1d57	      0xe8a3e4ffff	                               call sym.	       811	bisect.c	FUNCTION_31	FOR_1	ELSE_3	CALL_8
0x1d5c	          0x4889c7	                            mov rdi, rax	       811	bisect.c	FUNCTION_31	FOR_1	ELSE_3	CALL_8
0x1d5f	      0xb800000000	                              mov eax, 0	       811	bisect.c	FUNCTION_31	FOR_1	ELSE_3	CALL_8
0x1d64	      0xe800000000	                          call 0x4001da9	       811	bisect.c	FUNCTION_31	FOR_1	ELSE_3	CALL_8
0x1d69	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       812	bisect.c	FUNCTION_31	FOR_1	ELSE_3	CALL_10
0x1d6c	        0x488b45f8	                mov rax, qword [rbp - 8]	       812	bisect.c	FUNCTION_31	FOR_1	ELSE_3	CALL_10
0x1d70	            0x89d6	                            mov esi, edx	       812	bisect.c	FUNCTION_31	FOR_1	ELSE_3	CALL_10
0x1d72	          0x4889c7	                            mov rdi, rax	       812	bisect.c	FUNCTION_31	FOR_1	ELSE_3	CALL_10
0x1d75	      0xe8acfaffff	                call sym.bisect_checkout	       812	bisect.c	FUNCTION_31	FOR_1	ELSE_3	CALL_10
0x1d7a	            0x89c7	                            mov edi, eax	       812	bisect.c	FUNCTION_31	FOR_1	ELSE_3	CALL_10
0x1d7c	      0xe800000000	                          call 0x4001dc1	       812	bisect.c	FUNCTION_31	FOR_1	ELSE_3	CALL_10
0x1d81	              0x90	                                     nop	       807	bisect.c	FUNCTION_31	FOR_1	ELSE_1	IF_2
0x1d82	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       802	bisect.c	FUNCTION_31	FOR_1
0x1d86	        0x488b4008	                mov rax, qword [rax + 8]	       802	bisect.c	FUNCTION_31	FOR_1
0x1d8a	        0x488945f0	             mov qword [rbp - 0x10], rax	       802	bisect.c	FUNCTION_31	FOR_1
0x1d8e	      0x48837df000	               cmp qword [rbp - 0x10], 0	       802	bisect.c	FUNCTION_31	FOR_1
0x1d93	     0xf8551ffffff	                           jne 0x4001d2a	       802	bisect.c	FUNCTION_31	FOR_1
0x1d99	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       816	bisect.c	FUNCTION_31	CALL_11
0x1d9d	          0x4889c7	                            mov rdi, rax	       816	bisect.c	FUNCTION_31	CALL_11
0x1da0	      0xe800000000	                          call 0x4001de5	       816	bisect.c	FUNCTION_31	CALL_11
0x1da5	              0x90	                                     nop	       817	bisect.c	FUNCTION_31
0x1da6	              0xc9	                                   leave	       817	bisect.c	FUNCTION_31
0x1da7	              0xc3	                                     ret	       817	bisect.c	FUNCTION_31
sane_qsort	CALL,1:FOR,0:WHILE,0:IF,1:DO,0:SWITCH,0:ELSE,0:functions,0	18
0x52	              0x55	                                push rbp	      1047	git-compat-util.h	FUNCTION_81
0x53	          0x4889e5	                            mov rbp, rsp	      1047	git-compat-util.h	FUNCTION_81
0x56	        0x4883ec20	                           sub rsp, 0x20	      1047	git-compat-util.h	FUNCTION_81
0x5a	        0x48897df8	                mov qword [rbp - 8], rdi	      1047	git-compat-util.h	FUNCTION_81
0x5e	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1047	git-compat-util.h	FUNCTION_81
0x62	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1047	git-compat-util.h	FUNCTION_81
0x66	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1047	git-compat-util.h	FUNCTION_81
0x6a	      0x48837df001	               cmp qword [rbp - 0x10], 1	      1048	git-compat-util.h	FUNCTION_81	IF_1
0x6f	            0x7618	                           jbe 0x40000c9	      1048	git-compat-util.h	FUNCTION_81	IF_1
0x71	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1049	git-compat-util.h	FUNCTION_81	CALL_1
0x75	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1049	git-compat-util.h	FUNCTION_81	CALL_1
0x79	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1049	git-compat-util.h	FUNCTION_81	CALL_1
0x7d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1049	git-compat-util.h	FUNCTION_81	CALL_1
0x81	          0x4889c7	                            mov rdi, rax	      1049	git-compat-util.h	FUNCTION_81	CALL_1
0x84	      0xe800000000	                          call 0x40000c9	      1049	git-compat-util.h	FUNCTION_81	CALL_1
0x89	              0x90	                                     nop	      1050	git-compat-util.h	FUNCTION_81
0x8a	              0xc9	                                   leave	      1050	git-compat-util.h	FUNCTION_81
0x8b	              0xc3	                                     ret	      1050	git-compat-util.h	FUNCTION_81
mark_for_removal	CALL,2:FOR,0:WHILE,0:IF,0:DO,0:SWITCH,0:ELSE,0:functions,0	23
0x25eb	              0x55	                                push rbp	      1052	bisect.c	FUNCTION_40
0x25ec	          0x4889e5	                            mov rbp, rsp	      1052	bisect.c	FUNCTION_40
0x25ef	        0x4883ec30	                           sub rsp, 0x30	      1052	bisect.c	FUNCTION_40
0x25f3	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1052	bisect.c	FUNCTION_40
0x25f7	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1052	bisect.c	FUNCTION_40
0x25fb	          0x8955dc	             mov dword [rbp - 0x24], edx	      1052	bisect.c	FUNCTION_40
0x25fe	        0x48894dd0	             mov qword [rbp - 0x30], rcx	      1052	bisect.c	FUNCTION_40
0x2602	        0x488b45d0	             mov rax, qword [rbp - 0x30]	      1053	bisect.c	FUNCTION_40
0x2606	        0x488945f0	             mov qword [rbp - 0x10], rax	      1053	bisect.c	FUNCTION_40
0x260a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1054	bisect.c	FUNCTION_40	CALL_1
0x260e	          0x4889c6	                            mov rsi, rax	      1054	bisect.c	FUNCTION_40	CALL_1
0x2611	      0xbf00000000	                              mov edi, 0	      1054	bisect.c	FUNCTION_40	CALL_1
0x2616	      0xb800000000	                              mov eax, 0	      1054	bisect.c	FUNCTION_40	CALL_1
0x261b	      0xe800000000	                          call 0x4002660	      1054	bisect.c	FUNCTION_40	CALL_1
0x2620	        0x488945f8	                mov qword [rbp - 8], rax	      1054	bisect.c	FUNCTION_40	CALL_1
0x2624	        0x488b55f8	                mov rdx, qword [rbp - 8]	      1055	bisect.c	FUNCTION_40	CALL_2
0x2628	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1055	bisect.c	FUNCTION_40	CALL_2
0x262c	          0x4889d6	                            mov rsi, rdx	      1055	bisect.c	FUNCTION_40	CALL_2
0x262f	          0x4889c7	                            mov rdi, rax	      1055	bisect.c	FUNCTION_40	CALL_2
0x2632	      0xe800000000	                          call 0x4002677	      1055	bisect.c	FUNCTION_40	CALL_2
0x2637	      0xb800000000	                              mov eax, 0	      1056	bisect.c	FUNCTION_40
0x263c	              0xc9	                                   leave	      1057	bisect.c	FUNCTION_40
0x263d	              0xc3	                                     ret	      1057	bisect.c	FUNCTION_40
bisect_clean_state	CALL,21:FOR,0:WHILE,0:IF,0:DO,0:SWITCH,0:ELSE,0:functions,0	70
0x263e	              0x55	                                push rbp	      1060	bisect.c	FUNCTION_41
0x263f	          0x4889e5	                            mov rbp, rsp	      1060	bisect.c	FUNCTION_41
0x2642	        0x4883ec40	                           sub rsp, 0x40	      1060	bisect.c	FUNCTION_41
0x2646	    0x64488b042528	                mov rax, qword fs:[0x28]	      1060	bisect.c	FUNCTION_41
0x264f	        0x488945f8	                mov qword [rbp - 8], rax	      1060	bisect.c	FUNCTION_41
0x2653	            0x31c0	                            xor eax, eax	      1060	bisect.c	FUNCTION_41
0x2655	    0xc745cc000000	               mov dword [rbp - 0x34], 0	      1061	bisect.c	FUNCTION_41
0x265c	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1064	bisect.c	FUNCTION_41
0x2664	    0xc745d8000000	               mov dword [rbp - 0x28], 0	      1064	bisect.c	FUNCTION_41
0x266b	    0xc745dc000000	               mov dword [rbp - 0x24], 0	      1064	bisect.c	FUNCTION_41
0x2672	         0xfb645e0	            movzx eax, byte [rbp - 0x20]	      1064	bisect.c	FUNCTION_41
0x2676	          0x83e0fe	                     and eax, 0xfffffffe	      1064	bisect.c	FUNCTION_41
0x2679	          0x8845e0	               mov byte [rbp - 0x20], al	      1064	bisect.c	FUNCTION_41
0x267c	    0x48c745e80000	               mov qword [rbp - 0x18], 0	      1064	bisect.c	FUNCTION_41
0x2684	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1065	bisect.c	FUNCTION_41	CALL_1
0x2688	          0x4889c2	                            mov rdx, rax	      1065	bisect.c	FUNCTION_41	CALL_1
0x268b	      0xbe00000000	                              mov esi, 0	      1065	bisect.c	FUNCTION_41	CALL_1
0x2690	      0xbf00000000	                              mov edi, 0	      1065	bisect.c	FUNCTION_41	CALL_1
0x2695	      0xe800000000	                          call 0x40026da	      1065	bisect.c	FUNCTION_41	CALL_1
0x269a	      0xbf00000000	                              mov edi, 0	      1066	bisect.c	FUNCTION_41	CALL_3
0x269f	      0xe800000000	                          call 0x40026e4	      1066	bisect.c	FUNCTION_41	CALL_3
0x26a4	          0x4889c2	                            mov rdx, rax	      1066	bisect.c	FUNCTION_41	CALL_3
0x26a7	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1066	bisect.c	FUNCTION_41	CALL_3
0x26ab	          0x4889d6	                            mov rsi, rdx	      1066	bisect.c	FUNCTION_41	CALL_3
0x26ae	          0x4889c7	                            mov rdi, rax	      1066	bisect.c	FUNCTION_41	CALL_3
0x26b1	      0xe800000000	                          call 0x40026f6	      1066	bisect.c	FUNCTION_41	CALL_3
0x26b6	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1067	bisect.c	FUNCTION_41	CALL_4
0x26ba	      0xba01000000	                              mov edx, 1	      1067	bisect.c	FUNCTION_41	CALL_4
0x26bf	          0x4889c6	                            mov rsi, rax	      1067	bisect.c	FUNCTION_41	CALL_4
0x26c2	      0xbf00000000	                              mov edi, 0	      1067	bisect.c	FUNCTION_41	CALL_4
0x26c7	      0xe800000000	                          call 0x400270c	      1067	bisect.c	FUNCTION_41	CALL_4
0x26cc	          0x8945cc	             mov dword [rbp - 0x34], eax	      1067	bisect.c	FUNCTION_41	CALL_4
0x26cf	         0xfb645e0	            movzx eax, byte [rbp - 0x20]	      1068	bisect.c	FUNCTION_41
0x26d3	          0x83c801	                               or eax, 1	      1068	bisect.c	FUNCTION_41
0x26d6	          0x8845e0	               mov byte [rbp - 0x20], al	      1068	bisect.c	FUNCTION_41
0x26d9	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1069	bisect.c	FUNCTION_41	CALL_5
0x26dd	      0xbe00000000	                              mov esi, 0	      1069	bisect.c	FUNCTION_41	CALL_5
0x26e2	          0x4889c7	                            mov rdi, rax	      1069	bisect.c	FUNCTION_41	CALL_5
0x26e5	      0xe800000000	                          call 0x400272a	      1069	bisect.c	FUNCTION_41	CALL_5
0x26ea	      0xe8ece6ffff	   call sym.git_path_bisect_expected_rev	      1070	bisect.c	FUNCTION_41	CALL_7
0x26ef	          0x4889c7	                            mov rdi, rax	      1070	bisect.c	FUNCTION_41	CALL_7
0x26f2	      0xe800000000	                          call 0x4002737	      1070	bisect.c	FUNCTION_41	CALL_7
0x26f7	      0xe80ee7ffff	   call sym.git_path_bisect_ancestors_ok	      1071	bisect.c	FUNCTION_41	CALL_9
0x26fc	          0x4889c7	                            mov rdi, rax	      1071	bisect.c	FUNCTION_41	CALL_9
0x26ff	      0xe800000000	                          call 0x4002744	      1071	bisect.c	FUNCTION_41	CALL_9
0x2704	      0xe88ee7ffff	            call sym.git_path_bisect_log	      1072	bisect.c	FUNCTION_41	CALL_11
0x2709	          0x4889c7	                            mov rdi, rax	      1072	bisect.c	FUNCTION_41	CALL_11
0x270c	      0xe800000000	                          call 0x4002751	      1072	bisect.c	FUNCTION_41	CALL_11
0x2711	      0xe896e6ffff	          call sym.git_path_bisect_names	      1073	bisect.c	FUNCTION_41	CALL_13
0x2716	          0x4889c7	                            mov rdi, rax	      1073	bisect.c	FUNCTION_41	CALL_13
0x2719	      0xe800000000	                          call 0x400275e	      1073	bisect.c	FUNCTION_41	CALL_13
0x271e	      0xe816e7ffff	            call sym.git_path_bisect_run	      1074	bisect.c	FUNCTION_41	CALL_15
0x2723	          0x4889c7	                            mov rdi, rax	      1074	bisect.c	FUNCTION_41	CALL_15
0x2726	      0xe800000000	                          call 0x400276b	      1074	bisect.c	FUNCTION_41	CALL_15
0x272b	      0xe896e7ffff	          call sym.git_path_bisect_terms	      1075	bisect.c	FUNCTION_41	CALL_17
0x2730	          0x4889c7	                            mov rdi, rax	      1075	bisect.c	FUNCTION_41	CALL_17
0x2733	      0xe800000000	                          call 0x4002778	      1075	bisect.c	FUNCTION_41	CALL_17
0x2738	      0xe8b8e7ffff	             call sym.git_path_head_name	      1077	bisect.c	FUNCTION_41	CALL_19
0x273d	          0x4889c7	                            mov rdi, rax	      1077	bisect.c	FUNCTION_41	CALL_19
0x2740	      0xe800000000	                          call 0x4002785	      1077	bisect.c	FUNCTION_41	CALL_19
0x2745	      0xe81ee7ffff	          call sym.git_path_bisect_start	      1082	bisect.c	FUNCTION_41	CALL_21
0x274a	          0x4889c7	                            mov rdi, rax	      1082	bisect.c	FUNCTION_41	CALL_21
0x274d	      0xe800000000	                          call 0x4002792	      1082	bisect.c	FUNCTION_41	CALL_21
0x2752	          0x8b45cc	             mov eax, dword [rbp - 0x34]	      1084	bisect.c	FUNCTION_41
0x2755	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1085	bisect.c	FUNCTION_41
0x2759	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1085	bisect.c	FUNCTION_41
0x2762	            0x7405	                            je 0x40027a9	      1085	bisect.c	FUNCTION_41
0x2764	      0xe800000000	                          call 0x40027a9	      1085	bisect.c	FUNCTION_41
0x2769	              0xc9	                                   leave	      1085	bisect.c	FUNCTION_41
0x276a	              0xc3	                                     ret	      1085	bisect.c	FUNCTION_41
read_bisect_refs	CALL,1:FOR,0:WHILE,0:IF,0:DO,0:SWITCH,0:ELSE,0:functions,0	8
0xd92	              0x55	                                push rbp	       439	bisect.c	FUNCTION_14
0xd93	          0x4889e5	                            mov rbp, rsp	       439	bisect.c	FUNCTION_14
0xd96	      0xba00000000	                              mov edx, 0	       440	bisect.c	FUNCTION_14	CALL_1
0xd9b	      0xbe00000000	                              mov esi, 0	       440	bisect.c	FUNCTION_14	CALL_1
0xda0	      0xbf00000000	                              mov edi, 0	       440	bisect.c	FUNCTION_14	CALL_1
0xda5	      0xe800000000	                          call 0x4000dea	       440	bisect.c	FUNCTION_14	CALL_1
0xdaa	              0x5d	                                 pop rbp	       441	bisect.c	FUNCTION_14
0xdab	              0xc3	                                     ret	       441	bisect.c	FUNCTION_14
handle_skipped_merge_base	CALL,6:FOR,0:WHILE,0:IF,0:DO,0:SWITCH,0:ELSE,0:functions,0	39
0x1c1f	              0x55	                                push rbp	       773	bisect.c	FUNCTION_30
0x1c20	          0x4889e5	                            mov rbp, rsp	       773	bisect.c	FUNCTION_30
0x1c23	              0x53	                                push rbx	       773	bisect.c	FUNCTION_30
0x1c24	        0x4883ec38	                           sub rsp, 0x38	       773	bisect.c	FUNCTION_30
0x1c28	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       773	bisect.c	FUNCTION_30
0x1c2c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       774	bisect.c	FUNCTION_30	CALL_1
0x1c30	          0x4889c7	                            mov rdi, rax	       774	bisect.c	FUNCTION_30	CALL_1
0x1c33	      0xe800000000	                          call 0x4001c78	       774	bisect.c	FUNCTION_30	CALL_1
0x1c38	        0x488945d8	             mov qword [rbp - 0x28], rax	       774	bisect.c	FUNCTION_30	CALL_1
0x1c3c	    0x488b05000000	            mov rax, qword [0x04001c83] 	       775	bisect.c	FUNCTION_30	CALL_2
0x1c43	          0x4889c7	                            mov rdi, rax	       775	bisect.c	FUNCTION_30	CALL_2
0x1c46	      0xe800000000	                          call 0x4001c8b	       775	bisect.c	FUNCTION_30	CALL_2
0x1c4b	        0x488945e0	             mov qword [rbp - 0x20], rax	       775	bisect.c	FUNCTION_30	CALL_2
0x1c4f	      0xbe20000000	                           mov esi, 0x20	       776	bisect.c	FUNCTION_30	CALL_3
0x1c54	      0xbf00000000	                              mov edi, 0	       776	bisect.c	FUNCTION_30	CALL_3
0x1c59	      0xe8b1f3ffff	            call sym.join_sha1_array_hex	       776	bisect.c	FUNCTION_30	CALL_3
0x1c5e	        0x488945e8	             mov qword [rbp - 0x18], rax	       776	bisect.c	FUNCTION_30	CALL_3
0x1c62	    0x488b1d000000	            mov rbx, qword [0x04001ca9] 	       778	bisect.c	FUNCTION_30	CALL_5
0x1c69	      0xbf00000000	                              mov edi, 0	       778	bisect.c	FUNCTION_30	CALL_5
0x1c6e	      0xe88ce5ffff	                               call sym.	       778	bisect.c	FUNCTION_30	CALL_5
0x1c73	          0x4889c7	                            mov rdi, rax	       778	bisect.c	FUNCTION_30	CALL_5
0x1c76	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       778	bisect.c	FUNCTION_30	CALL_5
0x1c7a	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       778	bisect.c	FUNCTION_30	CALL_5
0x1c7e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       778	bisect.c	FUNCTION_30	CALL_5
0x1c82	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       778	bisect.c	FUNCTION_30	CALL_5
0x1c86	          0x4989f1	                             mov r9, rsi	       778	bisect.c	FUNCTION_30	CALL_5
0x1c89	          0x4989c8	                             mov r8, rcx	       778	bisect.c	FUNCTION_30	CALL_5
0x1c8c	          0x4889d9	                            mov rcx, rbx	       778	bisect.c	FUNCTION_30	CALL_5
0x1c8f	          0x4889c6	                            mov rsi, rax	       778	bisect.c	FUNCTION_30	CALL_5
0x1c92	      0xb800000000	                              mov eax, 0	       778	bisect.c	FUNCTION_30	CALL_5
0x1c97	      0xe800000000	                          call 0x4001cdc	       778	bisect.c	FUNCTION_30	CALL_5
0x1c9c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       784	bisect.c	FUNCTION_30	CALL_6
0x1ca0	          0x4889c7	                            mov rdi, rax	       784	bisect.c	FUNCTION_30	CALL_6
0x1ca3	      0xe800000000	                          call 0x4001ce8	       784	bisect.c	FUNCTION_30	CALL_6
0x1ca8	              0x90	                                     nop	       785	bisect.c	FUNCTION_30
0x1ca9	        0x4883c438	                           add rsp, 0x38	       785	bisect.c	FUNCTION_30
0x1cad	              0x5b	                                 pop rbx	       785	bisect.c	FUNCTION_30
0x1cae	              0x5d	                                 pop rbp	       785	bisect.c	FUNCTION_30
0x1caf	              0xc3	                                     ret	       785	bisect.c	FUNCTION_30
exp2i	CALL,0:FOR,0:WHILE,0:IF,0:DO,0:SWITCH,0:ELSE,0:functions,0	10
0x257d	              0x55	                                push rbp	      1022	bisect.c	FUNCTION_38
0x257e	          0x4889e5	                            mov rbp, rsp	      1022	bisect.c	FUNCTION_38
0x2581	          0x897dfc	                mov dword [rbp - 4], edi	      1022	bisect.c	FUNCTION_38
0x2584	          0x8b45fc	                mov eax, dword [rbp - 4]	      1023	bisect.c	FUNCTION_38
0x2587	      0xba01000000	                              mov edx, 1	      1023	bisect.c	FUNCTION_38
0x258c	            0x89c1	                            mov ecx, eax	      1023	bisect.c	FUNCTION_38
0x258e	            0xd3e2	                             shl edx, cl	      1023	bisect.c	FUNCTION_38
0x2590	            0x89d0	                            mov eax, edx	      1023	bisect.c	FUNCTION_38
0x2592	              0x5d	                                 pop rbp	      1024	bisect.c	FUNCTION_38
0x2593	              0xc3	                                     ret	      1024	bisect.c	FUNCTION_38
read_bisect_terms	CALL,10:FOR,0:WHILE,0:IF,2:DO,0:SWITCH,0:ELSE,2:functions,0	73
0x20f3	              0x55	                                push rbp	       910	bisect.c	FUNCTION_35
0x20f4	          0x4889e5	                            mov rbp, rsp	       910	bisect.c	FUNCTION_35
0x20f7	        0x4883ec40	                           sub rsp, 0x40	       910	bisect.c	FUNCTION_35
0x20fb	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       910	bisect.c	FUNCTION_35
0x20ff	        0x488975c0	             mov qword [rbp - 0x40], rsi	       910	bisect.c	FUNCTION_35
0x2103	    0x64488b042528	                mov rax, qword fs:[0x28]	       910	bisect.c	FUNCTION_35
0x210c	        0x488945f8	                mov qword [rbp - 8], rax	       910	bisect.c	FUNCTION_35
0x2110	            0x31c0	                            xor eax, eax	       910	bisect.c	FUNCTION_35
0x2112	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       911	bisect.c	FUNCTION_35
0x211a	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       911	bisect.c	FUNCTION_35
0x2122	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       911	bisect.c	FUNCTION_35
0x212a	      0xe897edffff	          call sym.git_path_bisect_terms	       912	bisect.c	FUNCTION_35	CALL_1
0x212f	        0x488945d0	             mov qword [rbp - 0x30], rax	       912	bisect.c	FUNCTION_35	CALL_1
0x2133	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       913	bisect.c	FUNCTION_35	CALL_2
0x2137	      0xbe00000000	                              mov esi, 0	       913	bisect.c	FUNCTION_35	CALL_2
0x213c	          0x4889c7	                            mov rdi, rax	       913	bisect.c	FUNCTION_35	CALL_2
0x213f	      0xe800000000	                          call 0x4002184	       913	bisect.c	FUNCTION_35	CALL_2
0x2144	        0x488945d8	             mov qword [rbp - 0x28], rax	       913	bisect.c	FUNCTION_35	CALL_2
0x2148	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       915	bisect.c	FUNCTION_35	IF_1
0x214d	            0x7548	                           jne 0x40021d7	       915	bisect.c	FUNCTION_35	IF_1
0x214f	      0xe800000000	                          call 0x4002194	       916	bisect.c	FUNCTION_35	IF_1	IF_2
0x2154	            0x8b00	                    mov eax, dword [rax]	       916	bisect.c	FUNCTION_35	IF_1	IF_2
0x2156	          0x83f802	                              cmp eax, 2	       916	bisect.c	FUNCTION_35	IF_1	IF_2
0x2159	            0x751b	                           jne 0x40021b6	       916	bisect.c	FUNCTION_35	IF_1	IF_2
0x215b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       917	bisect.c	FUNCTION_35	IF_1	IF_2
0x215f	    0x48c700000000	                      mov qword [rax], 0	       917	bisect.c	FUNCTION_35	IF_1	IF_2
0x2166	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       918	bisect.c	FUNCTION_35	IF_1	IF_2
0x216a	    0x48c700000000	                      mov qword [rax], 0	       918	bisect.c	FUNCTION_35	IF_1	IF_2
0x2171	      0xe995000000	                           jmp 0x400224b	       918	bisect.c	FUNCTION_35	IF_1	IF_2
0x2176	      0xbf00000000	                              mov edi, 0	       921	bisect.c	FUNCTION_35	IF_1	ELSE_1	CALL_4
0x217b	      0xe87fe0ffff	                               call sym.	       921	bisect.c	FUNCTION_35	IF_1	ELSE_1	CALL_4
0x2180	          0x4889c2	                            mov rdx, rax	       921	bisect.c	FUNCTION_35	IF_1	ELSE_1	CALL_4
0x2183	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       921	bisect.c	FUNCTION_35	IF_1	ELSE_1	CALL_4
0x2187	          0x4889c6	                            mov rsi, rax	       921	bisect.c	FUNCTION_35	IF_1	ELSE_1	CALL_4
0x218a	          0x4889d7	                            mov rdi, rdx	       921	bisect.c	FUNCTION_35	IF_1	ELSE_1	CALL_4
0x218d	      0xb800000000	                              mov eax, 0	       921	bisect.c	FUNCTION_35	IF_1	ELSE_1	CALL_4
0x2192	      0xe800000000	                          call 0x40021d7	       921	bisect.c	FUNCTION_35	IF_1	ELSE_1	CALL_4
0x2197	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       924	bisect.c	FUNCTION_35	ELSE_2	CALL_5
0x219b	        0x488d45e0	                   lea rax, [rbp - 0x20]	       924	bisect.c	FUNCTION_35	ELSE_2	CALL_5
0x219f	          0x4889d6	                            mov rsi, rdx	       924	bisect.c	FUNCTION_35	ELSE_2	CALL_5
0x21a2	          0x4889c7	                            mov rdi, rax	       924	bisect.c	FUNCTION_35	ELSE_2	CALL_5
0x21a5	      0xe800000000	                          call 0x40021ea	       924	bisect.c	FUNCTION_35	ELSE_2	CALL_5
0x21aa	        0x488d45e0	                   lea rax, [rbp - 0x20]	       925	bisect.c	FUNCTION_35	ELSE_2	CALL_6
0x21ae	      0xbe00000000	                              mov esi, 0	       925	bisect.c	FUNCTION_35	ELSE_2	CALL_6
0x21b3	          0x4889c7	                            mov rdi, rax	       925	bisect.c	FUNCTION_35	ELSE_2	CALL_6
0x21b6	      0xe800000000	                          call 0x40021fb	       925	bisect.c	FUNCTION_35	ELSE_2	CALL_6
0x21bb	          0x4889c2	                            mov rdx, rax	       925	bisect.c	FUNCTION_35	ELSE_2	CALL_6
0x21be	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       925	bisect.c	FUNCTION_35	ELSE_2	CALL_6
0x21c2	          0x488910	                    mov qword [rax], rdx	       925	bisect.c	FUNCTION_35	ELSE_2	CALL_6
0x21c5	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       926	bisect.c	FUNCTION_35	ELSE_2	CALL_7
0x21c9	        0x488d45e0	                   lea rax, [rbp - 0x20]	       926	bisect.c	FUNCTION_35	ELSE_2	CALL_7
0x21cd	          0x4889d6	                            mov rsi, rdx	       926	bisect.c	FUNCTION_35	ELSE_2	CALL_7
0x21d0	          0x4889c7	                            mov rdi, rax	       926	bisect.c	FUNCTION_35	ELSE_2	CALL_7
0x21d3	      0xe800000000	                          call 0x4002218	       926	bisect.c	FUNCTION_35	ELSE_2	CALL_7
0x21d8	        0x488d45e0	                   lea rax, [rbp - 0x20]	       927	bisect.c	FUNCTION_35	ELSE_2	CALL_8
0x21dc	      0xbe00000000	                              mov esi, 0	       927	bisect.c	FUNCTION_35	ELSE_2	CALL_8
0x21e1	          0x4889c7	                            mov rdi, rax	       927	bisect.c	FUNCTION_35	ELSE_2	CALL_8
0x21e4	      0xe800000000	                          call 0x4002229	       927	bisect.c	FUNCTION_35	ELSE_2	CALL_8
0x21e9	          0x4889c2	                            mov rdx, rax	       927	bisect.c	FUNCTION_35	ELSE_2	CALL_8
0x21ec	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       927	bisect.c	FUNCTION_35	ELSE_2	CALL_8
0x21f0	          0x488910	                    mov qword [rax], rdx	       927	bisect.c	FUNCTION_35	ELSE_2	CALL_8
0x21f3	        0x488d45e0	                   lea rax, [rbp - 0x20]	       929	bisect.c	FUNCTION_35	CALL_9
0x21f7	          0x4889c7	                            mov rdi, rax	       929	bisect.c	FUNCTION_35	CALL_9
0x21fa	      0xe800000000	                          call 0x400223f	       929	bisect.c	FUNCTION_35	CALL_9
0x21ff	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       930	bisect.c	FUNCTION_35	CALL_10
0x2203	          0x4889c7	                            mov rdi, rax	       930	bisect.c	FUNCTION_35	CALL_10
0x2206	      0xe800000000	                          call 0x400224b	       930	bisect.c	FUNCTION_35	CALL_10
0x220b	        0x488b45f8	                mov rax, qword [rbp - 8]	       931	bisect.c	FUNCTION_35
0x220f	    0x644833042528	                xor rax, qword fs:[0x28]	       931	bisect.c	FUNCTION_35
0x2218	            0x7405	                            je 0x400225f	       931	bisect.c	FUNCTION_35
0x221a	      0xe800000000	                          call 0x400225f	       931	bisect.c	FUNCTION_35
0x221f	              0xc9	                                   leave	       931	bisect.c	FUNCTION_35
0x2220	              0xc3	                                     ret	       931	bisect.c	FUNCTION_35
check_ancestors	CALL,3:FOR,0:WHILE,0:IF,0:DO,0:SWITCH,0:ELSE,0:functions,0	37
0x1da8	              0x55	                                push rbp	       820	bisect.c	FUNCTION_32
0x1da9	          0x4889e5	                            mov rbp, rsp	       820	bisect.c	FUNCTION_32
0x1dac	    0x4881ecf00800	                          sub rsp, 0x8f0	       820	bisect.c	FUNCTION_32
0x1db3	    0x89bd2cf7ffff	            mov dword [rbp - 0x8d4], edi	       820	bisect.c	FUNCTION_32
0x1db9	    0x4889b520f7ff	            mov qword [rbp - 0x8e0], rsi	       820	bisect.c	FUNCTION_32
0x1dc0	    0x48899518f7ff	            mov qword [rbp - 0x8e8], rdx	       820	bisect.c	FUNCTION_32
0x1dc7	    0x64488b042528	                mov rax, qword fs:[0x28]	       820	bisect.c	FUNCTION_32
0x1dd0	        0x488945f8	                mov qword [rbp - 8], rax	       820	bisect.c	FUNCTION_32
0x1dd4	            0x31c0	                            xor eax, eax	       820	bisect.c	FUNCTION_32
0x1dd6	    0x488bb518f7ff	            mov rsi, qword [rbp - 0x8e8]	       824	bisect.c	FUNCTION_32	CALL_1
0x1ddd	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       824	bisect.c	FUNCTION_32	CALL_1
0x1de4	    0x41b800000000	                              mov r8d, 0	       824	bisect.c	FUNCTION_32	CALL_1
0x1dea	      0xb900000000	                              mov ecx, 0	       824	bisect.c	FUNCTION_32	CALL_1
0x1def	      0xba00000000	                              mov edx, 0	       824	bisect.c	FUNCTION_32	CALL_1
0x1df4	          0x4889c7	                            mov rdi, rax	       824	bisect.c	FUNCTION_32	CALL_1
0x1df7	      0xe89df6ffff	               call sym.bisect_rev_setup	       824	bisect.c	FUNCTION_32	CALL_1
0x1dfc	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       826	bisect.c	FUNCTION_32	CALL_2
0x1e03	          0x4889c7	                            mov rdi, rax	       826	bisect.c	FUNCTION_32	CALL_2
0x1e06	      0xe8e3f7ffff	                  call sym.bisect_common	       826	bisect.c	FUNCTION_32	CALL_2
0x1e0b	    0x488b8540f7ff	            mov rax, qword [rbp - 0x8c0]	       827	bisect.c	FUNCTION_32
0x1e12	          0x4885c0	                           test rax, rax	       827	bisect.c	FUNCTION_32
0x1e15	           0xf95c0	                                setne al	       827	bisect.c	FUNCTION_32
0x1e18	           0xfb6c0	                           movzx eax, al	       827	bisect.c	FUNCTION_32
0x1e1b	    0x89853cf7ffff	            mov dword [rbp - 0x8c4], eax	       827	bisect.c	FUNCTION_32
0x1e21	    0x488b8d20f7ff	            mov rcx, qword [rbp - 0x8e0]	       830	bisect.c	FUNCTION_32	CALL_3
0x1e28	    0x8b852cf7ffff	            mov eax, dword [rbp - 0x8d4]	       830	bisect.c	FUNCTION_32	CALL_3
0x1e2e	      0xbaff070004	                      mov edx, 0x40007ff	       830	bisect.c	FUNCTION_32	CALL_3
0x1e33	          0x4889ce	                            mov rsi, rcx	       830	bisect.c	FUNCTION_32	CALL_3
0x1e36	            0x89c7	                            mov edi, eax	       830	bisect.c	FUNCTION_32	CALL_3
0x1e38	      0xe800000000	                          call 0x4001e7d	       830	bisect.c	FUNCTION_32	CALL_3
0x1e3d	    0x8b853cf7ffff	            mov eax, dword [rbp - 0x8c4]	       832	bisect.c	FUNCTION_32
0x1e43	        0x488b55f8	                mov rdx, qword [rbp - 8]	       833	bisect.c	FUNCTION_32
0x1e47	    0x644833142528	                xor rdx, qword fs:[0x28]	       833	bisect.c	FUNCTION_32
0x1e50	            0x7405	                            je 0x4001e97	       833	bisect.c	FUNCTION_32
0x1e52	      0xe800000000	                          call 0x4001e97	       833	bisect.c	FUNCTION_32
0x1e57	              0xc9	                                   leave	       833	bisect.c	FUNCTION_32
0x1e58	              0xc3	                                     ret	       833	bisect.c	FUNCTION_32
handle_bad_merge_base	CALL,17:FOR,0:WHILE,0:IF,3:DO,0:SWITCH,0:ELSE,2:functions,0	106
0x1a5e	              0x55	                                push rbp	       742	bisect.c	FUNCTION_29
0x1a5f	          0x4889e5	                            mov rbp, rsp	       742	bisect.c	FUNCTION_29
0x1a62	            0x4156	                                push r14	       742	bisect.c	FUNCTION_29
0x1a64	            0x4155	                                push r13	       742	bisect.c	FUNCTION_29
0x1a66	            0x4154	                                push r12	       742	bisect.c	FUNCTION_29
0x1a68	              0x53	                                push rbx	       742	bisect.c	FUNCTION_29
0x1a69	        0x4883ec10	                           sub rsp, 0x10	       742	bisect.c	FUNCTION_29
0x1a6d	    0x488b05000000	            mov rax, qword [0x04001ab4] 	       743	bisect.c	FUNCTION_29	IF_1	CALL_1
0x1a74	          0x4889c7	                            mov rdi, rax	       743	bisect.c	FUNCTION_29	IF_1	CALL_1
0x1a77	      0xe863fcffff	                call sym.is_expected_rev	       743	bisect.c	FUNCTION_29	IF_1	CALL_1
0x1a7c	            0x85c0	                           test eax, eax	       743	bisect.c	FUNCTION_29	IF_1	CALL_1
0x1a7e	     0xf8448010000	                            je 0x4001c0c	       743	bisect.c	FUNCTION_29	IF_1	CALL_1
0x1a84	    0x488b05000000	            mov rax, qword [0x04001acb] 	       744	bisect.c	FUNCTION_29	IF_1	CALL_2
0x1a8b	          0x4889c7	                            mov rdi, rax	       744	bisect.c	FUNCTION_29	IF_1	CALL_2
0x1a8e	      0xe800000000	                          call 0x4001ad3	       744	bisect.c	FUNCTION_29	IF_1	CALL_2
0x1a93	        0x488945d0	             mov qword [rbp - 0x30], rax	       744	bisect.c	FUNCTION_29	IF_1	CALL_2
0x1a97	      0xbe20000000	                           mov esi, 0x20	       745	bisect.c	FUNCTION_29	IF_1	CALL_3
0x1a9c	      0xbf00000000	                              mov edi, 0	       745	bisect.c	FUNCTION_29	IF_1	CALL_3
0x1aa1	      0xe869f5ffff	            call sym.join_sha1_array_hex	       745	bisect.c	FUNCTION_29	IF_1	CALL_3
0x1aa6	        0x488945d8	             mov qword [rbp - 0x28], rax	       745	bisect.c	FUNCTION_29	IF_1	CALL_3
0x1aaa	    0x488b05000000	            mov rax, qword [0x04001af1] 	       746	bisect.c	FUNCTION_29	IF_1	IF_2	CALL_5
0x1ab1	      0xbe00000000	                              mov esi, 0	       746	bisect.c	FUNCTION_29	IF_1	IF_2	CALL_5
0x1ab6	          0x4889c7	                            mov rdi, rax	       746	bisect.c	FUNCTION_29	IF_1	IF_2	CALL_5
0x1ab9	      0xe800000000	                          call 0x4001afe	       746	bisect.c	FUNCTION_29	IF_1	IF_2	CALL_5
0x1abe	            0x85c0	                           test eax, eax	       746	bisect.c	FUNCTION_29	IF_1	IF_2	CALL_5
0x1ac0	            0x7550	                           jne 0x4001b52	       746	bisect.c	FUNCTION_29	IF_1	IF_2	CALL_5
0x1ac2	    0x488b05000000	            mov rax, qword [0x04001b09] 	       746	bisect.c	FUNCTION_29	IF_1	IF_2	CALL_5
0x1ac9	      0xbe00000000	                              mov esi, 0	       746	bisect.c	FUNCTION_29	IF_1	IF_2	CALL_5
0x1ace	          0x4889c7	                            mov rdi, rax	       746	bisect.c	FUNCTION_29	IF_1	IF_2	CALL_5
0x1ad1	      0xe800000000	                          call 0x4001b16	       746	bisect.c	FUNCTION_29	IF_1	IF_2	CALL_5
0x1ad6	            0x85c0	                           test eax, eax	       746	bisect.c	FUNCTION_29	IF_1	IF_2	CALL_5
0x1ad8	            0x7538	                           jne 0x4001b52	       746	bisect.c	FUNCTION_29	IF_1	IF_2	CALL_5
0x1ada	      0xbf00000000	                              mov edi, 0	       747	bisect.c	FUNCTION_29	IF_1	IF_2	CALL_7
0x1adf	      0xe81be7ffff	                               call sym.	       747	bisect.c	FUNCTION_29	IF_1	IF_2	CALL_7
0x1ae4	          0x4889c7	                            mov rdi, rax	       747	bisect.c	FUNCTION_29	IF_1	IF_2	CALL_7
0x1ae7	    0x488b05000000	            mov rax, qword [0x04001b2e] 	       747	bisect.c	FUNCTION_29	IF_1	IF_2	CALL_7
0x1aee	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       747	bisect.c	FUNCTION_29	IF_1	IF_2	CALL_7
0x1af2	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       747	bisect.c	FUNCTION_29	IF_1	IF_2	CALL_7
0x1af6	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       747	bisect.c	FUNCTION_29	IF_1	IF_2	CALL_7
0x1afa	          0x4989f0	                             mov r8, rsi	       747	bisect.c	FUNCTION_29	IF_1	IF_2	CALL_7
0x1afd	          0x4889fe	                            mov rsi, rdi	       747	bisect.c	FUNCTION_29	IF_1	IF_2	CALL_7
0x1b00	          0x4889c7	                            mov rdi, rax	       747	bisect.c	FUNCTION_29	IF_1	IF_2	CALL_7
0x1b03	      0xb800000000	                              mov eax, 0	       747	bisect.c	FUNCTION_29	IF_1	IF_2	CALL_7
0x1b08	      0xe800000000	                          call 0x4001b4d	       747	bisect.c	FUNCTION_29	IF_1	IF_2	CALL_7
0x1b0d	      0xe9b0000000	                           jmp 0x4001c02	       747	bisect.c	FUNCTION_29	IF_1	IF_2	CALL_7
0x1b12	    0x488b05000000	            mov rax, qword [0x04001b59] 	       751	bisect.c	FUNCTION_29	IF_1	ELSE_1	IF_3	CALL_9
0x1b19	      0xbe00000000	                              mov esi, 0	       751	bisect.c	FUNCTION_29	IF_1	ELSE_1	IF_3	CALL_9
0x1b1e	          0x4889c7	                            mov rdi, rax	       751	bisect.c	FUNCTION_29	IF_1	ELSE_1	IF_3	CALL_9
0x1b21	      0xe800000000	                          call 0x4001b66	       751	bisect.c	FUNCTION_29	IF_1	ELSE_1	IF_3	CALL_9
0x1b26	            0x85c0	                           test eax, eax	       751	bisect.c	FUNCTION_29	IF_1	ELSE_1	IF_3	CALL_9
0x1b28	            0x754d	                           jne 0x4001bb7	       751	bisect.c	FUNCTION_29	IF_1	ELSE_1	IF_3	CALL_9
0x1b2a	    0x488b05000000	            mov rax, qword [0x04001b71] 	       751	bisect.c	FUNCTION_29	IF_1	ELSE_1	IF_3	CALL_9
0x1b31	      0xbe00000000	                              mov esi, 0	       751	bisect.c	FUNCTION_29	IF_1	ELSE_1	IF_3	CALL_9
0x1b36	          0x4889c7	                            mov rdi, rax	       751	bisect.c	FUNCTION_29	IF_1	ELSE_1	IF_3	CALL_9
0x1b39	      0xe800000000	                          call 0x4001b7e	       751	bisect.c	FUNCTION_29	IF_1	ELSE_1	IF_3	CALL_9
0x1b3e	            0x85c0	                           test eax, eax	       751	bisect.c	FUNCTION_29	IF_1	ELSE_1	IF_3	CALL_9
0x1b40	            0x7535	                           jne 0x4001bb7	       751	bisect.c	FUNCTION_29	IF_1	ELSE_1	IF_3	CALL_9
0x1b42	      0xbf00000000	                              mov edi, 0	       752	bisect.c	FUNCTION_29	IF_1	ELSE_1	IF_3	CALL_11
0x1b47	      0xe8b3e6ffff	                               call sym.	       752	bisect.c	FUNCTION_29	IF_1	ELSE_1	IF_3	CALL_11
0x1b4c	          0x4889c7	                            mov rdi, rax	       752	bisect.c	FUNCTION_29	IF_1	ELSE_1	IF_3	CALL_11
0x1b4f	    0x488b05000000	            mov rax, qword [0x04001b96] 	       752	bisect.c	FUNCTION_29	IF_1	ELSE_1	IF_3	CALL_11
0x1b56	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       752	bisect.c	FUNCTION_29	IF_1	ELSE_1	IF_3	CALL_11
0x1b5a	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       752	bisect.c	FUNCTION_29	IF_1	ELSE_1	IF_3	CALL_11
0x1b5e	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       752	bisect.c	FUNCTION_29	IF_1	ELSE_1	IF_3	CALL_11
0x1b62	          0x4989f0	                             mov r8, rsi	       752	bisect.c	FUNCTION_29	IF_1	ELSE_1	IF_3	CALL_11
0x1b65	          0x4889fe	                            mov rsi, rdi	       752	bisect.c	FUNCTION_29	IF_1	ELSE_1	IF_3	CALL_11
0x1b68	          0x4889c7	                            mov rdi, rax	       752	bisect.c	FUNCTION_29	IF_1	ELSE_1	IF_3	CALL_11
0x1b6b	      0xb800000000	                              mov eax, 0	       752	bisect.c	FUNCTION_29	IF_1	ELSE_1	IF_3	CALL_11
0x1b70	      0xe800000000	                          call 0x4001bb5	       752	bisect.c	FUNCTION_29	IF_1	ELSE_1	IF_3	CALL_11
0x1b75	            0xeb4b	                           jmp 0x4001c02	       752	bisect.c	FUNCTION_29	IF_1	ELSE_1	IF_3	CALL_11
0x1b77	    0x4c8b25000000	            mov r12, qword [0x04001bbe] 	       757	bisect.c	FUNCTION_29	IF_1	ELSE_2	CALL_13
0x1b7e	    0x488b1d000000	            mov rbx, qword [0x04001bc5] 	       757	bisect.c	FUNCTION_29	IF_1	ELSE_2	CALL_13
0x1b85	      0xbf00000000	                              mov edi, 0	       757	bisect.c	FUNCTION_29	IF_1	ELSE_2	CALL_13
0x1b8a	      0xe870e6ffff	                               call sym.	       757	bisect.c	FUNCTION_29	IF_1	ELSE_2	CALL_13
0x1b8f	          0x4889c6	                            mov rsi, rax	       757	bisect.c	FUNCTION_29	IF_1	ELSE_2	CALL_13
0x1b92	    0x488b05000000	            mov rax, qword [0x04001bd9] 	       757	bisect.c	FUNCTION_29	IF_1	ELSE_2	CALL_13
0x1b99	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       757	bisect.c	FUNCTION_29	IF_1	ELSE_2	CALL_13
0x1b9d	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       757	bisect.c	FUNCTION_29	IF_1	ELSE_2	CALL_13
0x1ba1	        0x4883ec08	                              sub rsp, 8	       757	bisect.c	FUNCTION_29	IF_1	ELSE_2	CALL_13
0x1ba5	          0xff75d8	                 push qword [rbp - 0x28]	       757	bisect.c	FUNCTION_29	IF_1	ELSE_2	CALL_13
0x1ba8	          0x4989c9	                             mov r9, rcx	       757	bisect.c	FUNCTION_29	IF_1	ELSE_2	CALL_13
0x1bab	          0x4d89e0	                             mov r8, r12	       757	bisect.c	FUNCTION_29	IF_1	ELSE_2	CALL_13
0x1bae	          0x4889d9	                            mov rcx, rbx	       757	bisect.c	FUNCTION_29	IF_1	ELSE_2	CALL_13
0x1bb1	          0x4889c7	                            mov rdi, rax	       757	bisect.c	FUNCTION_29	IF_1	ELSE_2	CALL_13
0x1bb4	      0xb800000000	                              mov eax, 0	       757	bisect.c	FUNCTION_29	IF_1	ELSE_2	CALL_13
0x1bb9	      0xe800000000	                          call 0x4001bfe	       757	bisect.c	FUNCTION_29	IF_1	ELSE_2	CALL_13
0x1bbe	        0x4883c410	                           add rsp, 0x10	       757	bisect.c	FUNCTION_29	IF_1	ELSE_2	CALL_13
0x1bc2	      0xbf03000000	                              mov edi, 3	       762	bisect.c	FUNCTION_29	IF_1	CALL_14
0x1bc7	      0xe800000000	                          call 0x4001c0c	       762	bisect.c	FUNCTION_29	IF_1	CALL_14
0x1bcc	    0x4c8b35000000	            mov r14, qword [0x04001c13] 	       765	bisect.c	FUNCTION_29	CALL_16
0x1bd3	    0x4c8b2d000000	            mov r13, qword [0x04001c1a] 	       765	bisect.c	FUNCTION_29	CALL_16
0x1bda	    0x4c8b25000000	            mov r12, qword [0x04001c21] 	       765	bisect.c	FUNCTION_29	CALL_16
0x1be1	    0x488b1d000000	            mov rbx, qword [0x04001c28] 	       765	bisect.c	FUNCTION_29	CALL_16
0x1be8	      0xbf00000000	                              mov edi, 0	       765	bisect.c	FUNCTION_29	CALL_16
0x1bed	      0xe80de6ffff	                               call sym.	       765	bisect.c	FUNCTION_29	CALL_16
0x1bf2	          0x4889c6	                            mov rsi, rax	       765	bisect.c	FUNCTION_29	CALL_16
0x1bf5	    0x488b05000000	            mov rax, qword [0x04001c3c] 	       765	bisect.c	FUNCTION_29	CALL_16
0x1bfc	          0x4d89f1	                             mov r9, r14	       765	bisect.c	FUNCTION_29	CALL_16
0x1bff	          0x4d89e8	                             mov r8, r13	       765	bisect.c	FUNCTION_29	CALL_16
0x1c02	          0x4c89e1	                            mov rcx, r12	       765	bisect.c	FUNCTION_29	CALL_16
0x1c05	          0x4889da	                            mov rdx, rbx	       765	bisect.c	FUNCTION_29	CALL_16
0x1c08	          0x4889c7	                            mov rdi, rax	       765	bisect.c	FUNCTION_29	CALL_16
0x1c0b	      0xb800000000	                              mov eax, 0	       765	bisect.c	FUNCTION_29	CALL_16
0x1c10	      0xe800000000	                          call 0x4001c55	       765	bisect.c	FUNCTION_29	CALL_16
0x1c15	      0xbf01000000	                              mov edi, 1	       769	bisect.c	FUNCTION_29	CALL_17
0x1c1a	      0xe800000000	      call sym.handle_skipped_merge_base	       769	bisect.c	FUNCTION_29	CALL_17
read_bisect_paths	CALL,9:FOR,0:WHILE,1:IF,1:DO,0:SWITCH,0:ELSE,0:functions,0	61
0xf24	              0x55	                                push rbp	       453	bisect.c	FUNCTION_15
0xf25	          0x4889e5	                            mov rbp, rsp	       453	bisect.c	FUNCTION_15
0xf28	              0x53	                                push rbx	       453	bisect.c	FUNCTION_15
0xf29	        0x4883ec48	                           sub rsp, 0x48	       453	bisect.c	FUNCTION_15
0xf2d	        0x48897db8	             mov qword [rbp - 0x48], rdi	       453	bisect.c	FUNCTION_15
0xf31	    0x64488b042528	                mov rax, qword fs:[0x28]	       453	bisect.c	FUNCTION_15
0xf3a	        0x488945e8	             mov qword [rbp - 0x18], rax	       453	bisect.c	FUNCTION_15
0xf3e	            0x31c0	                            xor eax, eax	       453	bisect.c	FUNCTION_15
0xf40	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       454	bisect.c	FUNCTION_15
0xf48	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       454	bisect.c	FUNCTION_15
0xf50	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       454	bisect.c	FUNCTION_15
0xf58	      0xe84ffeffff	          call sym.git_path_bisect_names	       455	bisect.c	FUNCTION_15	CALL_1
0xf5d	        0x488945c0	             mov qword [rbp - 0x40], rax	       455	bisect.c	FUNCTION_15	CALL_1
0xf61	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       456	bisect.c	FUNCTION_15	CALL_2
0xf65	      0xbe00000000	                              mov esi, 0	       456	bisect.c	FUNCTION_15	CALL_2
0xf6a	          0x4889c7	                            mov rdi, rax	       456	bisect.c	FUNCTION_15	CALL_2
0xf6d	      0xe800000000	                          call 0x4000fb2	       456	bisect.c	FUNCTION_15	CALL_2
0xf72	        0x488945c8	             mov qword [rbp - 0x38], rax	       456	bisect.c	FUNCTION_15	CALL_2
0xf76	            0xeb4b	                           jmp 0x4001003	       458	bisect.c	FUNCTION_15	WHILE_1	CALL_3
0xf78	        0x488d45d0	                   lea rax, [rbp - 0x30]	       459	bisect.c	FUNCTION_15	WHILE_1	CALL_4
0xf7c	          0x4889c7	                            mov rdi, rax	       459	bisect.c	FUNCTION_15	WHILE_1	CALL_4
0xf7f	      0xe800000000	                          call 0x4000fc4	       459	bisect.c	FUNCTION_15	WHILE_1	CALL_4
0xf84	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       460	bisect.c	FUNCTION_15	WHILE_1	IF_1	CALL_5
0xf88	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       460	bisect.c	FUNCTION_15	WHILE_1	IF_1	CALL_5
0xf8c	          0x4889d6	                            mov rsi, rdx	       460	bisect.c	FUNCTION_15	WHILE_1	IF_1	CALL_5
0xf8f	          0x4889c7	                            mov rdi, rax	       460	bisect.c	FUNCTION_15	WHILE_1	IF_1	CALL_5
0xf92	      0xe800000000	                          call 0x4000fd7	       460	bisect.c	FUNCTION_15	WHILE_1	IF_1	CALL_5
0xf97	            0x85c0	                           test eax, eax	       460	bisect.c	FUNCTION_15	WHILE_1	IF_1	CALL_5
0xf99	            0x7428	                            je 0x4001003	       460	bisect.c	FUNCTION_15	WHILE_1	IF_1	CALL_5
0xf9b	        0x488b5de0	             mov rbx, qword [rbp - 0x20]	       461	bisect.c	FUNCTION_15	WHILE_1	IF_1	CALL_7
0xf9f	      0xbf00000000	                              mov edi, 0	       461	bisect.c	FUNCTION_15	WHILE_1	IF_1	CALL_7
0xfa4	      0xe856f2ffff	                               call sym.	       461	bisect.c	FUNCTION_15	WHILE_1	IF_1	CALL_7
0xfa9	          0x4889c1	                            mov rcx, rax	       461	bisect.c	FUNCTION_15	WHILE_1	IF_1	CALL_7
0xfac	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       461	bisect.c	FUNCTION_15	WHILE_1	IF_1	CALL_7
0xfb0	          0x4889da	                            mov rdx, rbx	       461	bisect.c	FUNCTION_15	WHILE_1	IF_1	CALL_7
0xfb3	          0x4889c6	                            mov rsi, rax	       461	bisect.c	FUNCTION_15	WHILE_1	IF_1	CALL_7
0xfb6	          0x4889cf	                            mov rdi, rcx	       461	bisect.c	FUNCTION_15	WHILE_1	IF_1	CALL_7
0xfb9	      0xb800000000	                              mov eax, 0	       461	bisect.c	FUNCTION_15	WHILE_1	IF_1	CALL_7
0xfbe	      0xe800000000	                          call 0x4001003	       461	bisect.c	FUNCTION_15	WHILE_1	IF_1	CALL_7
0xfc3	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       458	bisect.c	FUNCTION_15	WHILE_1	CALL_3
0xfc7	        0x488d45d0	                   lea rax, [rbp - 0x30]	       458	bisect.c	FUNCTION_15	WHILE_1	CALL_3
0xfcb	          0x4889d6	                            mov rsi, rdx	       458	bisect.c	FUNCTION_15	WHILE_1	CALL_3
0xfce	          0x4889c7	                            mov rdi, rax	       458	bisect.c	FUNCTION_15	WHILE_1	CALL_3
0xfd1	      0xe800000000	                          call 0x4001016	       458	bisect.c	FUNCTION_15	WHILE_1	CALL_3
0xfd6	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       458	bisect.c	FUNCTION_15	WHILE_1	CALL_3
0xfd9	            0x759d	                           jne 0x4000fb8	       458	bisect.c	FUNCTION_15	WHILE_1	CALL_3
0xfdb	        0x488d45d0	                   lea rax, [rbp - 0x30]	       465	bisect.c	FUNCTION_15	CALL_8
0xfdf	          0x4889c7	                            mov rdi, rax	       465	bisect.c	FUNCTION_15	CALL_8
0xfe2	      0xe800000000	                          call 0x4001027	       465	bisect.c	FUNCTION_15	CALL_8
0xfe7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       466	bisect.c	FUNCTION_15	CALL_9
0xfeb	          0x4889c7	                            mov rdi, rax	       466	bisect.c	FUNCTION_15	CALL_9
0xfee	      0xe800000000	                          call 0x4001033	       466	bisect.c	FUNCTION_15	CALL_9
0xff3	              0x90	                                     nop	       467	bisect.c	FUNCTION_15
0xff4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       467	bisect.c	FUNCTION_15
0xff8	    0x644833042528	                xor rax, qword fs:[0x28]	       467	bisect.c	FUNCTION_15
0x1001	            0x7405	                            je 0x4001048	       467	bisect.c	FUNCTION_15
0x1003	      0xe800000000	                          call 0x4001048	       467	bisect.c	FUNCTION_15
0x1008	        0x4883c448	                           add rsp, 0x48	       467	bisect.c	FUNCTION_15
0x100c	              0x5b	                                 pop rbx	       467	bisect.c	FUNCTION_15
0x100d	              0x5d	                                 pop rbp	       467	bisect.c	FUNCTION_15
0x100e	              0xc3	                                     ret	       467	bisect.c	FUNCTION_15
exit_if_skipped_commits	CALL,8:FOR,1:WHILE,0:IF,2:DO,0:SWITCH,0:ELSE,0:functions,0	42
0x163c	              0x55	                                push rbp	       657	bisect.c	FUNCTION_24
0x163d	          0x4889e5	                            mov rbp, rsp	       657	bisect.c	FUNCTION_24
0x1640	        0x4883ec10	                           sub rsp, 0x10	       657	bisect.c	FUNCTION_24
0x1644	        0x48897df8	                mov qword [rbp - 8], rdi	       657	bisect.c	FUNCTION_24
0x1648	        0x488975f0	             mov qword [rbp - 0x10], rsi	       657	bisect.c	FUNCTION_24
0x164c	      0x48837df800	                  cmp qword [rbp - 8], 0	       658	bisect.c	FUNCTION_24	IF_1
0x1651	     0xf8485000000	                            je 0x400171c	       658	bisect.c	FUNCTION_24	IF_1
0x1657	    0x488b05000000	            mov rax, qword [0x0400169e] 	       661	bisect.c	FUNCTION_24	CALL_1
0x165e	          0x4889c6	                            mov rsi, rax	       661	bisect.c	FUNCTION_24	CALL_1
0x1661	      0xbf00000000	                              mov edi, 0	       661	bisect.c	FUNCTION_24	CALL_1
0x1666	      0xb800000000	                              mov eax, 0	       661	bisect.c	FUNCTION_24	CALL_1
0x166b	      0xe800000000	                          call 0x40016b0	       661	bisect.c	FUNCTION_24	CALL_1
0x1670	            0xeb27	                           jmp 0x40016d9	       664	bisect.c	FUNCTION_24	FOR_1
0x1672	        0x488b45f8	                mov rax, qword [rbp - 8]	       665	bisect.c	FUNCTION_24	CALL_3
0x1676	          0x488b00	                    mov rax, qword [rax]	       665	bisect.c	FUNCTION_24	CALL_3
0x1679	        0x4883c004	                              add rax, 4	       665	bisect.c	FUNCTION_24	CALL_3
0x167d	          0x4889c7	                            mov rdi, rax	       665	bisect.c	FUNCTION_24	CALL_3
0x1680	      0xe800000000	                          call 0x40016c5	       665	bisect.c	FUNCTION_24	CALL_3
0x1685	          0x4889c7	                            mov rdi, rax	       665	bisect.c	FUNCTION_24	CALL_3
0x1688	      0xe800000000	                          call 0x40016cd	       665	bisect.c	FUNCTION_24	CALL_3
0x168d	        0x488b45f8	                mov rax, qword [rbp - 8]	       664	bisect.c	FUNCTION_24	FOR_1
0x1691	        0x488b4008	                mov rax, qword [rax + 8]	       664	bisect.c	FUNCTION_24	FOR_1
0x1695	        0x488945f8	                mov qword [rbp - 8], rax	       664	bisect.c	FUNCTION_24	FOR_1
0x1699	      0x48837df800	                  cmp qword [rbp - 8], 0	       664	bisect.c	FUNCTION_24	FOR_1
0x169e	            0x75d2	                           jne 0x40016b2	       664	bisect.c	FUNCTION_24	FOR_1
0x16a0	      0x48837df000	               cmp qword [rbp - 0x10], 0	       667	bisect.c	FUNCTION_24	IF_2
0x16a5	            0x7414	                            je 0x40016fb	       667	bisect.c	FUNCTION_24	IF_2
0x16a7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       668	bisect.c	FUNCTION_24	CALL_5
0x16ab	          0x4889c7	                            mov rdi, rax	       668	bisect.c	FUNCTION_24	CALL_5
0x16ae	      0xe800000000	                          call 0x40016f3	       668	bisect.c	FUNCTION_24	CALL_5
0x16b3	          0x4889c7	                            mov rdi, rax	       668	bisect.c	FUNCTION_24	CALL_5
0x16b6	      0xe800000000	                          call 0x40016fb	       668	bisect.c	FUNCTION_24	CALL_5
0x16bb	      0xbf00000000	                              mov edi, 0	       669	bisect.c	FUNCTION_24	CALL_7
0x16c0	      0xe83aebffff	                               call sym.	       669	bisect.c	FUNCTION_24	CALL_7
0x16c5	          0x4889c7	                            mov rdi, rax	       669	bisect.c	FUNCTION_24	CALL_7
0x16c8	      0xb800000000	                              mov eax, 0	       669	bisect.c	FUNCTION_24	CALL_7
0x16cd	      0xe800000000	                          call 0x4001712	       669	bisect.c	FUNCTION_24	CALL_7
0x16d2	      0xbf02000000	                              mov edi, 2	       670	bisect.c	FUNCTION_24	CALL_8
0x16d7	      0xe800000000	                          call 0x400171c	       670	bisect.c	FUNCTION_24	CALL_8
0x16dc	              0x90	                                     nop	       659	bisect.c	FUNCTION_24	IF_1
0x16dd	              0xc9	                                   leave	       671	bisect.c	FUNCTION_24
0x16de	              0xc3	                                     ret	       671	bisect.c	FUNCTION_24
join_sha1_array_hex	CALL,4:FOR,1:WHILE,0:IF,1:DO,0:SWITCH,0:ELSE,0:functions,0	56
0x100f	              0x55	                                push rbp	       470	bisect.c	FUNCTION_16
0x1010	          0x4889e5	                            mov rbp, rsp	       470	bisect.c	FUNCTION_16
0x1013	        0x4883ec40	                           sub rsp, 0x40	       470	bisect.c	FUNCTION_16
0x1017	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       470	bisect.c	FUNCTION_16
0x101b	            0x89f0	                            mov eax, esi	       470	bisect.c	FUNCTION_16
0x101d	          0x8845c4	               mov byte [rbp - 0x3c], al	       470	bisect.c	FUNCTION_16
0x1020	    0x64488b042528	                mov rax, qword fs:[0x28]	       470	bisect.c	FUNCTION_16
0x1029	        0x488945f8	                mov qword [rbp - 8], rax	       470	bisect.c	FUNCTION_16
0x102d	            0x31c0	                            xor eax, eax	       470	bisect.c	FUNCTION_16
0x102f	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       471	bisect.c	FUNCTION_16
0x1037	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       471	bisect.c	FUNCTION_16
0x103f	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       471	bisect.c	FUNCTION_16
0x1047	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       474	bisect.c	FUNCTION_16	FOR_1
0x104e	            0xeb5f	                           jmp 0x40010ef	       474	bisect.c	FUNCTION_16	FOR_1
0x1050	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       475	bisect.c	FUNCTION_16	FOR_1	CALL_2
0x1054	          0x488b08	                    mov rcx, qword [rax]	       475	bisect.c	FUNCTION_16	FOR_1	CALL_2
0x1057	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       475	bisect.c	FUNCTION_16	FOR_1	CALL_2
0x105a	          0x4863d0	                         movsxd rdx, eax	       475	bisect.c	FUNCTION_16	FOR_1	CALL_2
0x105d	          0x4889d0	                            mov rax, rdx	       475	bisect.c	FUNCTION_16	FOR_1	CALL_2
0x1060	        0x48c1e002	                              shl rax, 2	       475	bisect.c	FUNCTION_16	FOR_1	CALL_2
0x1064	          0x4801d0	                            add rax, rdx	       475	bisect.c	FUNCTION_16	FOR_1	CALL_2
0x1067	        0x48c1e002	                              shl rax, 2	       475	bisect.c	FUNCTION_16	FOR_1	CALL_2
0x106b	          0x4801c8	                            add rax, rcx	       475	bisect.c	FUNCTION_16	FOR_1	CALL_2
0x106e	          0x4889c7	                            mov rdi, rax	       475	bisect.c	FUNCTION_16	FOR_1	CALL_2
0x1071	      0xe800000000	                          call 0x40010b6	       475	bisect.c	FUNCTION_16	FOR_1	CALL_2
0x1076	          0x4889c2	                            mov rdx, rax	       475	bisect.c	FUNCTION_16	FOR_1	CALL_2
0x1079	        0x488d45e0	                   lea rax, [rbp - 0x20]	       475	bisect.c	FUNCTION_16	FOR_1	CALL_2
0x107d	          0x4889d6	                            mov rsi, rdx	       475	bisect.c	FUNCTION_16	FOR_1	CALL_2
0x1080	          0x4889c7	                            mov rdi, rax	       475	bisect.c	FUNCTION_16	FOR_1	CALL_2
0x1083	      0xe842f1ffff	                  call sym.strbuf_addstr	       475	bisect.c	FUNCTION_16	FOR_1	CALL_2
0x1088	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       476	bisect.c	FUNCTION_16	FOR_1	IF_1
0x108b	          0x8d5001	                      lea edx, [rax + 1]	       476	bisect.c	FUNCTION_16	FOR_1	IF_1
0x108e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       476	bisect.c	FUNCTION_16	FOR_1	IF_1
0x1092	          0x8b4008	                mov eax, dword [rax + 8]	       476	bisect.c	FUNCTION_16	FOR_1	IF_1
0x1095	            0x39c2	                            cmp edx, eax	       476	bisect.c	FUNCTION_16	FOR_1	IF_1
0x1097	            0x7d12	                           jge 0x40010eb	       476	bisect.c	FUNCTION_16	FOR_1	IF_1
0x1099	         0xfbe55c4	            movsx edx, byte [rbp - 0x3c]	       477	bisect.c	FUNCTION_16	FOR_1	CALL_3
0x109d	        0x488d45e0	                   lea rax, [rbp - 0x20]	       477	bisect.c	FUNCTION_16	FOR_1	CALL_3
0x10a1	            0x89d6	                            mov esi, edx	       477	bisect.c	FUNCTION_16	FOR_1	CALL_3
0x10a3	          0x4889c7	                            mov rdi, rax	       477	bisect.c	FUNCTION_16	FOR_1	CALL_3
0x10a6	      0xe8b1f0ffff	                   call sym.strbuf_addch	       477	bisect.c	FUNCTION_16	FOR_1	CALL_3
0x10ab	        0x8345dc01	               add dword [rbp - 0x24], 1	       474	bisect.c	FUNCTION_16	FOR_1
0x10af	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       474	bisect.c	FUNCTION_16	FOR_1
0x10b3	          0x8b4008	                mov eax, dword [rax + 8]	       474	bisect.c	FUNCTION_16	FOR_1
0x10b6	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	       474	bisect.c	FUNCTION_16	FOR_1
0x10b9	            0x7f95	                            jg 0x4001090	       474	bisect.c	FUNCTION_16	FOR_1
0x10bb	        0x488d45e0	                   lea rax, [rbp - 0x20]	       480	bisect.c	FUNCTION_16	CALL_4
0x10bf	      0xbe00000000	                              mov esi, 0	       480	bisect.c	FUNCTION_16	CALL_4
0x10c4	          0x4889c7	                            mov rdi, rax	       480	bisect.c	FUNCTION_16	CALL_4
0x10c7	      0xe800000000	                          call 0x400110c	       480	bisect.c	FUNCTION_16	CALL_4
0x10cc	        0x488b4df8	                mov rcx, qword [rbp - 8]	       481	bisect.c	FUNCTION_16
0x10d0	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       481	bisect.c	FUNCTION_16
0x10d9	            0x7405	                            je 0x4001120	       481	bisect.c	FUNCTION_16
0x10db	      0xe800000000	                          call 0x4001120	       481	bisect.c	FUNCTION_16
0x10e0	              0xc9	                                   leave	       481	bisect.c	FUNCTION_16
0x10e1	              0xc3	                                     ret	       481	bisect.c	FUNCTION_16
sqrti	CALL,0:FOR,0:WHILE,0:IF,1:DO,1:SWITCH,0:ELSE,0:functions,0	35
0x129b	              0x55	                                push rbp	       564	bisect.c	FUNCTION_19
0x129c	          0x4889e5	                            mov rbp, rsp	       564	bisect.c	FUNCTION_19
0x129f	          0x897dec	             mov dword [rbp - 0x14], edi	       564	bisect.c	FUNCTION_19
0x12a2	        0x660fefc0	                         pxor xmm0, xmm0	       565	bisect.c	FUNCTION_19
0x12a6	      0xf30f2a45ec	       cvtsi2ss xmm0, dword [rbp - 0x14]	       565	bisect.c	FUNCTION_19
0x12ab	      0xf30f1145f4	           movss dword [rbp - 0xc], xmm0	       565	bisect.c	FUNCTION_19
0x12b0	        0x837dec00	               cmp dword [rbp - 0x14], 0	       567	bisect.c	FUNCTION_19	IF_1
0x12b4	            0x7507	                           jne 0x40012fd	       567	bisect.c	FUNCTION_19	IF_1
0x12b6	      0xb800000000	                              mov eax, 0	       568	bisect.c	FUNCTION_19	IF_1
0x12bb	            0xeb6b	                           jmp 0x4001368	       568	bisect.c	FUNCTION_19	IF_1
0x12bd	        0x660fefc0	                         pxor xmm0, xmm0	       571	bisect.c	FUNCTION_19	DO_1
0x12c1	      0xf30f2a45ec	       cvtsi2ss xmm0, dword [rbp - 0x14]	       571	bisect.c	FUNCTION_19	DO_1
0x12c6	      0xf30f5e45f4	           divss xmm0, dword [rbp - 0xc]	       571	bisect.c	FUNCTION_19	DO_1
0x12cb	      0xf30f5845f4	           addss xmm0, dword [rbp - 0xc]	       571	bisect.c	FUNCTION_19	DO_1
0x12d0	    0xf30f100d0000	         movss xmm1, dword [0x04001318] 	       571	bisect.c	FUNCTION_19	DO_1
0x12d8	        0xf30f5ec1	                        divss xmm0, xmm1	       571	bisect.c	FUNCTION_19	DO_1
0x12dc	      0xf30f1145f8	             movss dword [rbp - 8], xmm0	       571	bisect.c	FUNCTION_19	DO_1
0x12e1	      0xf30f1045f8	             movss xmm0, dword [rbp - 8]	       572	bisect.c	FUNCTION_19	DO_1
0x12e6	         0xf2e45f4	         ucomiss xmm0, dword [rbp - 0xc]	       572	bisect.c	FUNCTION_19	DO_1
0x12ea	            0x760c	                           jbe 0x4001338	       572	bisect.c	FUNCTION_19	DO_1
0x12ec	      0xf30f1045f8	             movss xmm0, dword [rbp - 8]	       572	bisect.c	FUNCTION_19	DO_1
0x12f1	      0xf30f5c45f4	           subss xmm0, dword [rbp - 0xc]	       572	bisect.c	FUNCTION_19	DO_1
0x12f6	            0xeb0a	                           jmp 0x4001342	       572	bisect.c	FUNCTION_19	DO_1
0x12f8	      0xf30f1045f4	           movss xmm0, dword [rbp - 0xc]	       572	bisect.c	FUNCTION_19	DO_1
0x12fd	      0xf30f5c45f8	             subss xmm0, dword [rbp - 8]	       572	bisect.c	FUNCTION_19	DO_1
0x1302	      0xf30f1145fc	             movss dword [rbp - 4], xmm0	       572	bisect.c	FUNCTION_19	DO_1
0x1307	      0xf30f1045f8	             movss xmm0, dword [rbp - 8]	       573	bisect.c	FUNCTION_19	DO_1
0x130c	      0xf30f1145f4	           movss dword [rbp - 0xc], xmm0	       573	bisect.c	FUNCTION_19	DO_1
0x1311	      0xf30f1045fc	             movss xmm0, dword [rbp - 4]	       574	bisect.c	FUNCTION_19	DO_1
0x1316	     0xf2e05000000	        ucomiss xmm0, dword [0x0400135d]	       574	bisect.c	FUNCTION_19	DO_1
0x131d	            0x739e	                           jae 0x40012fd	       574	bisect.c	FUNCTION_19	DO_1
0x131f	      0xf30f1045f4	           movss xmm0, dword [rbp - 0xc]	       576	bisect.c	FUNCTION_19
0x1324	        0xf30f2cc0	                     cvttss2si eax, xmm0	       576	bisect.c	FUNCTION_19
0x1328	              0x5d	                                 pop rbp	       577	bisect.c	FUNCTION_19
0x1329	              0xc3	                                     ret	       577	bisect.c	FUNCTION_19
show_diff_tree	CALL,4:FOR,0:WHILE,0:IF,1:DO,0:SWITCH,0:ELSE,0:functions,0	49
0x1ffd	              0x55	                                push rbp	       882	bisect.c	FUNCTION_34
0x1ffe	          0x4889e5	                            mov rbp, rsp	       882	bisect.c	FUNCTION_34
0x2001	    0x4881ecd00800	                          sub rsp, 0x8d0	       882	bisect.c	FUNCTION_34
0x2008	    0x4889bd38f7ff	            mov qword [rbp - 0x8c8], rdi	       882	bisect.c	FUNCTION_34
0x200f	    0x4889b530f7ff	            mov qword [rbp - 0x8d0], rsi	       882	bisect.c	FUNCTION_34
0x2016	    0x64488b042528	                mov rax, qword fs:[0x28]	       882	bisect.c	FUNCTION_34
0x201f	        0x488945f8	                mov qword [rbp - 8], rax	       882	bisect.c	FUNCTION_34
0x2023	            0x31c0	                            xor eax, eax	       882	bisect.c	FUNCTION_34
0x2025	    0x488b9538f7ff	            mov rdx, qword [rbp - 0x8c8]	       886	bisect.c	FUNCTION_34	CALL_1
0x202c	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       886	bisect.c	FUNCTION_34	CALL_1
0x2033	          0x4889d6	                            mov rsi, rdx	       886	bisect.c	FUNCTION_34	CALL_1
0x2036	          0x4889c7	                            mov rdi, rax	       886	bisect.c	FUNCTION_34	CALL_1
0x2039	      0xe800000000	                          call 0x400207e	       886	bisect.c	FUNCTION_34	CALL_1
0x203e	      0xbe00000000	                              mov esi, 0	       887	bisect.c	FUNCTION_34	CALL_2
0x2043	      0xbf00000000	                              mov edi, 0	       887	bisect.c	FUNCTION_34	CALL_2
0x2048	      0xe800000000	                          call 0x400208d	       887	bisect.c	FUNCTION_34	CALL_2
0x204d	    0xc785e0f7ffff	              mov dword [rbp - 0x820], 0	       888	bisect.c	FUNCTION_34
0x2057	     0xfb685b9f7ff	           movzx eax, byte [rbp - 0x847]	       889	bisect.c	FUNCTION_34
0x205e	          0x83c801	                               or eax, 1	       889	bisect.c	FUNCTION_34
0x2061	    0x8885b9f7ffff	              mov byte [rbp - 0x847], al	       889	bisect.c	FUNCTION_34
0x2067	     0xfb685b9f7ff	           movzx eax, byte [rbp - 0x847]	       892	bisect.c	FUNCTION_34
0x206e	          0x83c810	                            or eax, 0x10	       892	bisect.c	FUNCTION_34
0x2071	    0x8885b9f7ffff	              mov byte [rbp - 0x847], al	       892	bisect.c	FUNCTION_34
0x2077	     0xfb685bbf7ff	           movzx eax, byte [rbp - 0x845]	       893	bisect.c	FUNCTION_34
0x207e	          0x83e0f7	                     and eax, 0xfffffff7	       893	bisect.c	FUNCTION_34
0x2081	    0x8885bbf7ffff	              mov byte [rbp - 0x845], al	       893	bisect.c	FUNCTION_34
0x2087	    0xc785e4f7ffff	              mov dword [rbp - 0x81c], 1	       894	bisect.c	FUNCTION_34
0x2091	    0x8b8598fcffff	            mov eax, dword [rbp - 0x368]	       897	bisect.c	FUNCTION_34	IF_1
0x2097	            0x85c0	                           test eax, eax	       897	bisect.c	FUNCTION_34	IF_1
0x2099	            0x750a	                           jne 0x40020e5	       897	bisect.c	FUNCTION_34	IF_1
0x209b	    0xc78598fcffff	              mov dword [rbp - 0x368], 1	       898	bisect.c	FUNCTION_34	IF_1
0x20a5	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       900	bisect.c	FUNCTION_34	CALL_3
0x20ac	      0xb900000000	                              mov ecx, 0	       900	bisect.c	FUNCTION_34	CALL_3
0x20b1	          0x4889c2	                            mov rdx, rax	       900	bisect.c	FUNCTION_34	CALL_3
0x20b4	      0xbe00000000	                              mov esi, 0	       900	bisect.c	FUNCTION_34	CALL_3
0x20b9	      0xbf00000000	                              mov edi, 0	       900	bisect.c	FUNCTION_34	CALL_3
0x20be	      0xe800000000	                          call 0x4002103	       900	bisect.c	FUNCTION_34	CALL_3
0x20c3	    0x488b9530f7ff	            mov rdx, qword [rbp - 0x8d0]	       901	bisect.c	FUNCTION_34	CALL_4
0x20ca	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       901	bisect.c	FUNCTION_34	CALL_4
0x20d1	          0x4889d6	                            mov rsi, rdx	       901	bisect.c	FUNCTION_34	CALL_4
0x20d4	          0x4889c7	                            mov rdi, rax	       901	bisect.c	FUNCTION_34	CALL_4
0x20d7	      0xe800000000	                          call 0x400211c	       901	bisect.c	FUNCTION_34	CALL_4
0x20dc	              0x90	                                     nop	       902	bisect.c	FUNCTION_34
0x20dd	        0x488b45f8	                mov rax, qword [rbp - 8]	       902	bisect.c	FUNCTION_34
0x20e1	    0x644833042528	                xor rax, qword fs:[0x28]	       902	bisect.c	FUNCTION_34
0x20ea	            0x7405	                            je 0x4002131	       902	bisect.c	FUNCTION_34
0x20ec	      0xe800000000	                          call 0x4002131	       902	bisect.c	FUNCTION_34
0x20f1	              0xc9	                                   leave	       902	bisect.c	FUNCTION_34
0x20f2	              0xc3	                                     ret	       902	bisect.c	FUNCTION_34
halfway	CALL,1:FOR,0:WHILE,0:IF,2:DO,0:SWITCH,1:ELSE,0:functions,0	28
0x4c1	              0x55	                                push rbp	        99	bisect.c	FUNCTION_6
0x4c2	          0x4889e5	                            mov rbp, rsp	        99	bisect.c	FUNCTION_6
0x4c5	        0x4883ec10	                           sub rsp, 0x10	        99	bisect.c	FUNCTION_6
0x4c9	        0x48897df8	                mov qword [rbp - 8], rdi	        99	bisect.c	FUNCTION_6
0x4cd	          0x8975f4	              mov dword [rbp - 0xc], esi	        99	bisect.c	FUNCTION_6
0x4d0	        0x488b45f8	                mov rax, qword [rbp - 8]	       103	bisect.c	FUNCTION_6	IF_1
0x4d4	          0x488b00	                    mov rax, qword [rax]	       103	bisect.c	FUNCTION_6	IF_1
0x4d7	            0x8b00	                    mov eax, dword [rax]	       103	bisect.c	FUNCTION_6	IF_1
0x4d9	          0xc1e804	                              shr eax, 4	       103	bisect.c	FUNCTION_6	IF_1
0x4dc	      0x25ffffff07	                      and eax, 0x7ffffff	       103	bisect.c	FUNCTION_6	IF_1
0x4e1	          0x83e004	                              and eax, 4	       103	bisect.c	FUNCTION_6	IF_1
0x4e4	            0x85c0	                           test eax, eax	       103	bisect.c	FUNCTION_6	IF_1
0x4e6	            0x7407	                            je 0x400052f	       103	bisect.c	FUNCTION_6	IF_1
0x4e8	      0xb800000000	                              mov eax, 0	       104	bisect.c	FUNCTION_6	IF_1
0x4ed	            0xeb25	                           jmp 0x4000554	       104	bisect.c	FUNCTION_6	IF_1
0x4ef	        0x488b45f8	                mov rax, qword [rbp - 8]	       111	bisect.c	FUNCTION_6	SWITCH_1	CALL_1
0x4f3	          0x4889c7	                            mov rdi, rax	       111	bisect.c	FUNCTION_6	SWITCH_1	CALL_1
0x4f6	      0xe83dffffff	                         call sym.weight	       111	bisect.c	FUNCTION_6	SWITCH_1	CALL_1
0x4fb	             0x1c0	                            add eax, eax	       111	bisect.c	FUNCTION_6	SWITCH_1	CALL_1
0x4fd	          0x2b45f4	              sub eax, dword [rbp - 0xc]	       111	bisect.c	FUNCTION_6	SWITCH_1	CALL_1
0x500	          0x83c001	                              add eax, 1	       111	bisect.c	FUNCTION_6	SWITCH_1	CALL_1
0x503	          0x83f802	                              cmp eax, 2	       111	bisect.c	FUNCTION_6	SWITCH_1	CALL_1
0x506	            0x7707	                            ja 0x400054f	       111	bisect.c	FUNCTION_6	SWITCH_1	CALL_1
0x508	      0xb801000000	                              mov eax, 1	       113	bisect.c	FUNCTION_6	SWITCH_1
0x50d	            0xeb05	                           jmp 0x4000554	       113	bisect.c	FUNCTION_6	SWITCH_1
0x50f	      0xb800000000	                              mov eax, 0	       115	bisect.c	FUNCTION_6	SWITCH_1
0x514	              0xc9	                                   leave	       117	bisect.c	FUNCTION_6
0x515	              0xc3	                                     ret	       117	bisect.c	FUNCTION_6
find_bisection	CALL,8:FOR,1:WHILE,0:IF,4:DO,0:SWITCH,0:ELSE,0:functions,0	96
0xb1f	              0x55	                                push rbp	       369	bisect.c	FUNCTION_12
0xb20	          0x4889e5	                            mov rbp, rsp	       369	bisect.c	FUNCTION_12
0xb23	        0x4883ec60	                           sub rsp, 0x60	       369	bisect.c	FUNCTION_12
0xb27	        0x48897db8	             mov qword [rbp - 0x48], rdi	       369	bisect.c	FUNCTION_12
0xb2b	        0x488975b0	             mov qword [rbp - 0x50], rsi	       369	bisect.c	FUNCTION_12
0xb2f	        0x488955a8	             mov qword [rbp - 0x58], rdx	       369	bisect.c	FUNCTION_12
0xb33	          0x894da4	             mov dword [rbp - 0x5c], ecx	       369	bisect.c	FUNCTION_12
0xb36	    0xc745c8000000	               mov dword [rbp - 0x38], 0	       380	bisect.c	FUNCTION_12	FOR_1
0xb3d	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       380	bisect.c	FUNCTION_12	FOR_1
0xb40	          0x8945c4	             mov dword [rbp - 0x3c], eax	       380	bisect.c	FUNCTION_12	FOR_1
0xb43	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       380	bisect.c	FUNCTION_12	FOR_1
0xb4b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       380	bisect.c	FUNCTION_12	FOR_1
0xb4f	          0x488b00	                    mov rax, qword [rax]	       380	bisect.c	FUNCTION_12	FOR_1
0xb52	        0x488945d0	             mov qword [rbp - 0x30], rax	       380	bisect.c	FUNCTION_12	FOR_1
0xb56	            0xeb66	                           jmp 0x4000bfe	       380	bisect.c	FUNCTION_12	FOR_1
0xb58	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       383	bisect.c	FUNCTION_12	FOR_1
0xb5c	          0x488b00	                    mov rax, qword [rax]	       383	bisect.c	FUNCTION_12	FOR_1
0xb5f	            0x8b00	                    mov eax, dword [rax]	       383	bisect.c	FUNCTION_12	FOR_1
0xb61	          0xc1e804	                              shr eax, 4	       383	bisect.c	FUNCTION_12	FOR_1
0xb64	      0x25ffffff07	                      and eax, 0x7ffffff	       383	bisect.c	FUNCTION_12	FOR_1
0xb69	          0x8945cc	             mov dword [rbp - 0x34], eax	       383	bisect.c	FUNCTION_12	FOR_1
0xb6c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       385	bisect.c	FUNCTION_12	FOR_1
0xb70	        0x488b4008	                mov rax, qword [rax + 8]	       385	bisect.c	FUNCTION_12	FOR_1
0xb74	        0x488945e8	             mov qword [rbp - 0x18], rax	       385	bisect.c	FUNCTION_12	FOR_1
0xb78	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       386	bisect.c	FUNCTION_12	FOR_1	IF_1
0xb7b	          0x83e002	                              and eax, 2	       386	bisect.c	FUNCTION_12	FOR_1	IF_1
0xb7e	            0x85c0	                           test eax, eax	       386	bisect.c	FUNCTION_12	FOR_1	IF_1
0xb80	            0x740e	                            je 0x4000bd0	       386	bisect.c	FUNCTION_12	FOR_1	IF_1
0xb82	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       387	bisect.c	FUNCTION_12	FOR_1	IF_1	CALL_2
0xb86	          0x4889c7	                            mov rdi, rax	       387	bisect.c	FUNCTION_12	FOR_1	IF_1	CALL_2
0xb89	      0xe800000000	                          call 0x4000bce	       387	bisect.c	FUNCTION_12	FOR_1	IF_1	CALL_2
0xb8e	            0xeb26	                           jmp 0x4000bf6	       388	bisect.c	FUNCTION_12	FOR_1	IF_1
0xb90	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       390	bisect.c	FUNCTION_12	FOR_1
0xb94	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       390	bisect.c	FUNCTION_12	FOR_1
0xb98	        0x48895008	                mov qword [rax + 8], rdx	       390	bisect.c	FUNCTION_12	FOR_1
0xb9c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       391	bisect.c	FUNCTION_12	FOR_1
0xba0	        0x488945e0	             mov qword [rbp - 0x20], rax	       391	bisect.c	FUNCTION_12	FOR_1
0xba4	          0x8b45cc	             mov eax, dword [rbp - 0x34]	       392	bisect.c	FUNCTION_12	FOR_1	IF_2
0xba7	          0x83e004	                              and eax, 4	       392	bisect.c	FUNCTION_12	FOR_1	IF_2
0xbaa	            0x85c0	                           test eax, eax	       392	bisect.c	FUNCTION_12	FOR_1	IF_2
0xbac	            0x7504	                           jne 0x4000bf2	       392	bisect.c	FUNCTION_12	FOR_1	IF_2
0xbae	        0x8345c401	               add dword [rbp - 0x3c], 1	       393	bisect.c	FUNCTION_12	FOR_1	IF_2
0xbb2	        0x8345c801	               add dword [rbp - 0x38], 1	       394	bisect.c	FUNCTION_12	FOR_1
0xbb6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       382	bisect.c	FUNCTION_12	FOR_1
0xbba	        0x488945d0	             mov qword [rbp - 0x30], rax	       382	bisect.c	FUNCTION_12	FOR_1
0xbbe	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       380	bisect.c	FUNCTION_12	FOR_1
0xbc3	            0x7593	                           jne 0x4000b98	       380	bisect.c	FUNCTION_12	FOR_1
0xbc5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       396	bisect.c	FUNCTION_12
0xbc9	        0x488945f0	             mov qword [rbp - 0x10], rax	       396	bisect.c	FUNCTION_12
0xbcd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       399	bisect.c	FUNCTION_12
0xbd1	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       399	bisect.c	FUNCTION_12
0xbd4	            0x8910	                    mov dword [rax], edx	       399	bisect.c	FUNCTION_12
0xbd6	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       400	bisect.c	FUNCTION_12	CALL_4
0xbd9	            0x4898	                                    cdqe	       400	bisect.c	FUNCTION_12	CALL_4
0xbdb	      0xbe04000000	                              mov esi, 4	       400	bisect.c	FUNCTION_12	CALL_4
0xbe0	          0x4889c7	                            mov rdi, rax	       400	bisect.c	FUNCTION_12	CALL_4
0xbe3	      0xe800000000	                          call 0x4000c28	       400	bisect.c	FUNCTION_12	CALL_4
0xbe8	        0x488945f8	                mov qword [rbp - 8], rax	       400	bisect.c	FUNCTION_12	CALL_4
0xbec	          0x8b4da4	             mov ecx, dword [rbp - 0x5c]	       403	bisect.c	FUNCTION_12	CALL_5
0xbef	        0x488b55f8	                mov rdx, qword [rbp - 8]	       403	bisect.c	FUNCTION_12	CALL_5
0xbf3	          0x8b75c4	             mov esi, dword [rbp - 0x3c]	       403	bisect.c	FUNCTION_12	CALL_5
0xbf6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       403	bisect.c	FUNCTION_12	CALL_5
0xbfa	          0x4889c7	                            mov rdi, rax	       403	bisect.c	FUNCTION_12	CALL_5
0xbfd	      0xe842fcffff	              call sym.do_find_bisection	       403	bisect.c	FUNCTION_12	CALL_5
0xc02	        0x488945d8	             mov qword [rbp - 0x28], rax	       403	bisect.c	FUNCTION_12	CALL_5
0xc06	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       404	bisect.c	FUNCTION_12	IF_3
0xc0b	            0x744c	                            je 0x4000c99	       404	bisect.c	FUNCTION_12	IF_3
0xc0d	        0x837da400	               cmp dword [rbp - 0x5c], 0	       405	bisect.c	FUNCTION_12	IF_3	IF_4
0xc11	            0x7532	                           jne 0x4000c85	       405	bisect.c	FUNCTION_12	IF_3	IF_4
0xc13	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       406	bisect.c	FUNCTION_12	IF_3	IF_4
0xc17	          0x488b10	                    mov rdx, qword [rax]	       406	bisect.c	FUNCTION_12	IF_3	IF_4
0xc1a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       406	bisect.c	FUNCTION_12	IF_3	IF_4
0xc1e	          0x488910	                    mov qword [rax], rdx	       406	bisect.c	FUNCTION_12	IF_3	IF_4
0xc21	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       407	bisect.c	FUNCTION_12	IF_3	IF_4	CALL_6
0xc25	        0x488b4008	                mov rax, qword [rax + 8]	       407	bisect.c	FUNCTION_12	IF_3	IF_4	CALL_6
0xc29	          0x4889c7	                            mov rdi, rax	       407	bisect.c	FUNCTION_12	IF_3	IF_4	CALL_6
0xc2c	      0xe800000000	                          call 0x4000c71	       407	bisect.c	FUNCTION_12	IF_3	IF_4	CALL_6
0xc31	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       408	bisect.c	FUNCTION_12	IF_3	IF_4
0xc35	        0x488945d8	             mov qword [rbp - 0x28], rax	       408	bisect.c	FUNCTION_12	IF_3	IF_4
0xc39	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       409	bisect.c	FUNCTION_12	IF_3	IF_4
0xc3d	    0x48c740080000	                  mov qword [rax + 8], 0	       409	bisect.c	FUNCTION_12	IF_3	IF_4
0xc45	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       411	bisect.c	FUNCTION_12	IF_3	CALL_7
0xc49	          0x4889c7	                            mov rdi, rax	       411	bisect.c	FUNCTION_12	IF_3	CALL_7
0xc4c	      0xe8e7f7ffff	                         call sym.weight	       411	bisect.c	FUNCTION_12	IF_3	CALL_7
0xc51	            0x89c2	                            mov edx, eax	       411	bisect.c	FUNCTION_12	IF_3	CALL_7
0xc53	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       411	bisect.c	FUNCTION_12	IF_3	CALL_7
0xc57	            0x8910	                    mov dword [rax], edx	       411	bisect.c	FUNCTION_12	IF_3	CALL_7
0xc59	        0x488b45f8	                mov rax, qword [rbp - 8]	       413	bisect.c	FUNCTION_12	CALL_8
0xc5d	          0x4889c7	                            mov rdi, rax	       413	bisect.c	FUNCTION_12	CALL_8
0xc60	      0xe800000000	                          call 0x4000ca5	       413	bisect.c	FUNCTION_12	CALL_8
0xc65	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       414	bisect.c	FUNCTION_12
0xc69	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       414	bisect.c	FUNCTION_12
0xc6d	          0x488910	                    mov qword [rax], rdx	       414	bisect.c	FUNCTION_12
0xc70	              0x90	                                     nop	       415	bisect.c	FUNCTION_12
0xc71	              0xc9	                                   leave	       415	bisect.c	FUNCTION_12
0xc72	              0xc3	                                     ret	       415	bisect.c	FUNCTION_12
bisect_rev_setup	CALL,9:FOR,1:WHILE,0:IF,1:DO,0:SWITCH,0:ELSE,0:functions,0	82
0x1499	              0x55	                                push rbp	       625	bisect.c	FUNCTION_22
0x149a	          0x4889e5	                            mov rbp, rsp	       625	bisect.c	FUNCTION_22
0x149d	        0x4883ec60	                           sub rsp, 0x60	       625	bisect.c	FUNCTION_22
0x14a1	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       625	bisect.c	FUNCTION_22
0x14a5	        0x488975c0	             mov qword [rbp - 0x40], rsi	       625	bisect.c	FUNCTION_22
0x14a9	        0x488955b8	             mov qword [rbp - 0x48], rdx	       625	bisect.c	FUNCTION_22
0x14ad	        0x48894db0	             mov qword [rbp - 0x50], rcx	       625	bisect.c	FUNCTION_22
0x14b1	        0x448945ac	             mov dword [rbp - 0x54], r8d	       625	bisect.c	FUNCTION_22
0x14b5	    0x64488b042528	                mov rax, qword fs:[0x28]	       625	bisect.c	FUNCTION_22
0x14be	        0x488945f8	                mov qword [rbp - 8], rax	       625	bisect.c	FUNCTION_22
0x14c2	            0x31c0	                            xor eax, eax	       625	bisect.c	FUNCTION_22
0x14c4	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       626	bisect.c	FUNCTION_22
0x14cc	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       626	bisect.c	FUNCTION_22
0x14d3	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       626	bisect.c	FUNCTION_22
0x14da	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       629	bisect.c	FUNCTION_22	CALL_1
0x14de	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       629	bisect.c	FUNCTION_22	CALL_1
0x14e2	          0x4889d6	                            mov rsi, rdx	       629	bisect.c	FUNCTION_22	CALL_1
0x14e5	          0x4889c7	                            mov rdi, rax	       629	bisect.c	FUNCTION_22	CALL_1
0x14e8	      0xe800000000	                          call 0x400152d	       629	bisect.c	FUNCTION_22	CALL_1
0x14ed	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       630	bisect.c	FUNCTION_22
0x14f1	    0xc780a0000000	               mov dword [rax + 0xa0], 0	       630	bisect.c	FUNCTION_22
0x14fb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       631	bisect.c	FUNCTION_22
0x14ff	    0xc780a4000000	               mov dword [rax + 0xa4], 9	       631	bisect.c	FUNCTION_22
0x1509	        0x488d45e0	                   lea rax, [rbp - 0x20]	       634	bisect.c	FUNCTION_22	CALL_2
0x150d	      0xbe00000000	                              mov esi, 0	       634	bisect.c	FUNCTION_22	CALL_2
0x1512	          0x4889c7	                            mov rdi, rax	       634	bisect.c	FUNCTION_22	CALL_2
0x1515	      0xe800000000	                          call 0x400155a	       634	bisect.c	FUNCTION_22	CALL_2
0x151a	    0x488b05000000	            mov rax, qword [0x04001561] 	       635	bisect.c	FUNCTION_22	CALL_4
0x1521	          0x4889c7	                            mov rdi, rax	       635	bisect.c	FUNCTION_22	CALL_4
0x1524	      0xe800000000	                          call 0x4001569	       635	bisect.c	FUNCTION_22	CALL_4
0x1529	          0x4889c2	                            mov rdx, rax	       635	bisect.c	FUNCTION_22	CALL_4
0x152c	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       635	bisect.c	FUNCTION_22	CALL_4
0x1530	        0x488d45e0	                   lea rax, [rbp - 0x20]	       635	bisect.c	FUNCTION_22	CALL_4
0x1534	          0x4889ce	                            mov rsi, rcx	       635	bisect.c	FUNCTION_22	CALL_4
0x1537	          0x4889c7	                            mov rdi, rax	       635	bisect.c	FUNCTION_22	CALL_4
0x153a	      0xb800000000	                              mov eax, 0	       635	bisect.c	FUNCTION_22	CALL_4
0x153f	      0xe800000000	                          call 0x4001584	       635	bisect.c	FUNCTION_22	CALL_4
0x1544	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       636	bisect.c	FUNCTION_22	FOR_1
0x154b	            0xeb45	                           jmp 0x40015d2	       636	bisect.c	FUNCTION_22	FOR_1
0x154d	    0x488b0d000000	            mov rcx, qword [0x04001594] 	       638	bisect.c	FUNCTION_22	CALL_6
0x1554	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       637	bisect.c	FUNCTION_22	FOR_1	CALL_5
0x1557	          0x4863d0	                         movsxd rdx, eax	       637	bisect.c	FUNCTION_22	FOR_1	CALL_5
0x155a	          0x4889d0	                            mov rax, rdx	       638	bisect.c	FUNCTION_22	CALL_6
0x155d	        0x48c1e002	                              shl rax, 2	       638	bisect.c	FUNCTION_22	CALL_6
0x1561	          0x4801d0	                            add rax, rdx	       638	bisect.c	FUNCTION_22	CALL_6
0x1564	        0x48c1e002	                              shl rax, 2	       638	bisect.c	FUNCTION_22	CALL_6
0x1568	          0x4801c8	                            add rax, rcx	       637	bisect.c	FUNCTION_22	FOR_1	CALL_5
0x156b	          0x4889c7	                            mov rdi, rax	       637	bisect.c	FUNCTION_22	FOR_1	CALL_5
0x156e	      0xe800000000	                          call 0x40015b3	       637	bisect.c	FUNCTION_22	FOR_1	CALL_5
0x1573	          0x4889c2	                            mov rdx, rax	       637	bisect.c	FUNCTION_22	FOR_1	CALL_5
0x1576	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       637	bisect.c	FUNCTION_22	FOR_1	CALL_5
0x157a	        0x488d45e0	                   lea rax, [rbp - 0x20]	       637	bisect.c	FUNCTION_22	FOR_1	CALL_5
0x157e	          0x4889ce	                            mov rsi, rcx	       637	bisect.c	FUNCTION_22	FOR_1	CALL_5
0x1581	          0x4889c7	                            mov rdi, rax	       637	bisect.c	FUNCTION_22	FOR_1	CALL_5
0x1584	      0xb800000000	                              mov eax, 0	       637	bisect.c	FUNCTION_22	FOR_1	CALL_5
0x1589	      0xe800000000	                          call 0x40015ce	       637	bisect.c	FUNCTION_22	FOR_1	CALL_5
0x158e	        0x8345dc01	               add dword [rbp - 0x24], 1	       636	bisect.c	FUNCTION_22	FOR_1
0x1592	    0x8b0500000000	            mov eax, dword [0x040015d8] 	       636	bisect.c	FUNCTION_22	FOR_1
0x1598	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	       636	bisect.c	FUNCTION_22	FOR_1
0x159b	            0x7fb0	                            jg 0x400158d	       636	bisect.c	FUNCTION_22	FOR_1
0x159d	        0x488d45e0	                   lea rax, [rbp - 0x20]	       639	bisect.c	FUNCTION_22	CALL_7
0x15a1	      0xbe00000000	                              mov esi, 0	       639	bisect.c	FUNCTION_22	CALL_7
0x15a6	          0x4889c7	                            mov rdi, rax	       639	bisect.c	FUNCTION_22	CALL_7
0x15a9	      0xe800000000	                          call 0x40015ee	       639	bisect.c	FUNCTION_22	CALL_7
0x15ae	        0x837dac00	               cmp dword [rbp - 0x54], 0	       640	bisect.c	FUNCTION_22	IF_1
0x15b2	            0x740c	                            je 0x4001600	       640	bisect.c	FUNCTION_22	IF_1
0x15b4	        0x488d45e0	                   lea rax, [rbp - 0x20]	       641	bisect.c	FUNCTION_22	CALL_8
0x15b8	          0x4889c7	                            mov rdi, rax	       641	bisect.c	FUNCTION_22	CALL_8
0x15bb	      0xe864f9ffff	              call sym.read_bisect_paths	       641	bisect.c	FUNCTION_22	CALL_8
0x15c0	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       643	bisect.c	FUNCTION_22	CALL_9
0x15c4	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       643	bisect.c	FUNCTION_22	CALL_9
0x15c7	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       643	bisect.c	FUNCTION_22	CALL_9
0x15cb	      0xb900000000	                              mov ecx, 0	       643	bisect.c	FUNCTION_22	CALL_9
0x15d0	            0x89c7	                            mov edi, eax	       643	bisect.c	FUNCTION_22	CALL_9
0x15d2	      0xe800000000	                          call 0x4001617	       643	bisect.c	FUNCTION_22	CALL_9
0x15d7	              0x90	                                     nop	       645	bisect.c	FUNCTION_22
0x15d8	        0x488b45f8	                mov rax, qword [rbp - 8]	       645	bisect.c	FUNCTION_22
0x15dc	    0x644833042528	                xor rax, qword fs:[0x28]	       645	bisect.c	FUNCTION_22
0x15e5	            0x7405	                            je 0x400162c	       645	bisect.c	FUNCTION_22
0x15e7	      0xe800000000	                          call 0x400162c	       645	bisect.c	FUNCTION_22
0x15ec	              0xc9	                                   leave	       645	bisect.c	FUNCTION_22
0x15ed	              0xc3	                                     ret	       645	bisect.c	FUNCTION_22
best_bisection	CALL,1:FOR,1:WHILE,0:IF,3:DO,0:SWITCH,0:ELSE,0:functions,0	49
0x516	              0x55	                                push rbp	       162	bisect.c	FUNCTION_8
0x517	          0x4889e5	                            mov rbp, rsp	       162	bisect.c	FUNCTION_8
0x51a	        0x4883ec30	                           sub rsp, 0x30	       162	bisect.c	FUNCTION_8
0x51e	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       162	bisect.c	FUNCTION_8
0x522	          0x8975d4	             mov dword [rbp - 0x2c], esi	       162	bisect.c	FUNCTION_8
0x525	    0xc745e4ffffff	     mov dword [rbp - 0x1c], 0xffffffff 	       164	bisect.c	FUNCTION_8
0x52c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       166	bisect.c	FUNCTION_8
0x530	        0x488945f8	                mov qword [rbp - 8], rax	       166	bisect.c	FUNCTION_8
0x534	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       167	bisect.c	FUNCTION_8	FOR_1
0x538	        0x488945f0	             mov qword [rbp - 0x10], rax	       167	bisect.c	FUNCTION_8	FOR_1
0x53c	            0xeb66	                           jmp 0x40005e4	       167	bisect.c	FUNCTION_8	FOR_1
0x53e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       169	bisect.c	FUNCTION_8	FOR_1
0x542	          0x488b00	                    mov rax, qword [rax]	       169	bisect.c	FUNCTION_8	FOR_1
0x545	            0x8b00	                    mov eax, dword [rax]	       169	bisect.c	FUNCTION_8	FOR_1
0x547	          0xc1e804	                              shr eax, 4	       169	bisect.c	FUNCTION_8	FOR_1
0x54a	      0x25ffffff07	                      and eax, 0x7ffffff	       169	bisect.c	FUNCTION_8	FOR_1
0x54f	          0x8945ec	             mov dword [rbp - 0x14], eax	       169	bisect.c	FUNCTION_8	FOR_1
0x552	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       171	bisect.c	FUNCTION_8	FOR_1	IF_1
0x555	          0x83e004	                              and eax, 4	       171	bisect.c	FUNCTION_8	FOR_1	IF_1
0x558	            0x85c0	                           test eax, eax	       171	bisect.c	FUNCTION_8	FOR_1	IF_1
0x55a	            0x753b	                           jne 0x40005d7	       171	bisect.c	FUNCTION_8	FOR_1	IF_1
0x55c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       173	bisect.c	FUNCTION_8	FOR_1	CALL_1
0x560	          0x4889c7	                            mov rdi, rax	       173	bisect.c	FUNCTION_8	FOR_1	CALL_1
0x563	      0xe8d0feffff	                         call sym.weight	       173	bisect.c	FUNCTION_8	FOR_1	CALL_1
0x568	          0x8945e8	             mov dword [rbp - 0x18], eax	       173	bisect.c	FUNCTION_8	FOR_1	CALL_1
0x56b	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       174	bisect.c	FUNCTION_8	FOR_1	IF_2
0x56e	          0x2b45e8	             sub eax, dword [rbp - 0x18]	       174	bisect.c	FUNCTION_8	FOR_1	IF_2
0x571	          0x3b45e8	             cmp eax, dword [rbp - 0x18]	       174	bisect.c	FUNCTION_8	FOR_1	IF_2
0x574	            0x7d09	                           jge 0x40005bf	       174	bisect.c	FUNCTION_8	FOR_1	IF_2
0x576	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       175	bisect.c	FUNCTION_8	FOR_1	IF_2
0x579	          0x2b45e8	             sub eax, dword [rbp - 0x18]	       175	bisect.c	FUNCTION_8	FOR_1	IF_2
0x57c	          0x8945e8	             mov dword [rbp - 0x18], eax	       175	bisect.c	FUNCTION_8	FOR_1	IF_2
0x57f	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       176	bisect.c	FUNCTION_8	FOR_1	IF_3
0x582	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	       176	bisect.c	FUNCTION_8	FOR_1	IF_3
0x585	            0x7e11	                           jle 0x40005d8	       176	bisect.c	FUNCTION_8	FOR_1	IF_3
0x587	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       177	bisect.c	FUNCTION_8	FOR_1	IF_3
0x58b	        0x488945f8	                mov qword [rbp - 8], rax	       177	bisect.c	FUNCTION_8	FOR_1	IF_3
0x58f	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       178	bisect.c	FUNCTION_8	FOR_1	IF_3
0x592	          0x8945e4	             mov dword [rbp - 0x1c], eax	       178	bisect.c	FUNCTION_8	FOR_1	IF_3
0x595	            0xeb01	                           jmp 0x40005d8	       178	bisect.c	FUNCTION_8	FOR_1	IF_3
0x597	              0x90	                                     nop	       172	bisect.c	FUNCTION_8	FOR_1	IF_1
0x598	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       167	bisect.c	FUNCTION_8	FOR_1
0x59c	        0x488b4008	                mov rax, qword [rax + 8]	       167	bisect.c	FUNCTION_8	FOR_1
0x5a0	        0x488945f0	             mov qword [rbp - 0x10], rax	       167	bisect.c	FUNCTION_8	FOR_1
0x5a4	      0x48837df000	               cmp qword [rbp - 0x10], 0	       167	bisect.c	FUNCTION_8	FOR_1
0x5a9	            0x7593	                           jne 0x400057e	       167	bisect.c	FUNCTION_8	FOR_1
0x5ab	        0x488b45f8	                mov rax, qword [rbp - 8]	       182	bisect.c	FUNCTION_8
0x5af	              0xc9	                                   leave	       183	bisect.c	FUNCTION_8
0x5b0	              0xc3	                                     ret	       183	bisect.c	FUNCTION_8
skip_away	CALL,4:FOR,1:WHILE,0:IF,3:DO,0:SWITCH,0:ELSE,0:functions,0	66
0x132a	              0x55	                                push rbp	       580	bisect.c	FUNCTION_20
0x132b	          0x4889e5	                            mov rbp, rsp	       580	bisect.c	FUNCTION_20
0x132e	              0x53	                                push rbx	       580	bisect.c	FUNCTION_20
0x132f	        0x4883ec38	                           sub rsp, 0x38	       580	bisect.c	FUNCTION_20
0x1333	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       580	bisect.c	FUNCTION_20
0x1337	          0x8975c4	             mov dword [rbp - 0x3c], esi	       580	bisect.c	FUNCTION_20
0x133a	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       584	bisect.c	FUNCTION_20	CALL_1
0x133d	            0x89c7	                            mov edi, eax	       584	bisect.c	FUNCTION_20	CALL_1
0x133f	      0xe832ffffff	                        call sym.get_prn	       584	bisect.c	FUNCTION_20	CALL_1
0x1344	          0x8945d8	             mov dword [rbp - 0x28], eax	       584	bisect.c	FUNCTION_20	CALL_1
0x1347	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       585	bisect.c	FUNCTION_20	CALL_3
0x134a	         0xfaf45d8	            imul eax, dword [rbp - 0x28]	       585	bisect.c	FUNCTION_20	CALL_3
0x134e	    0x8d90ff7f0000	                 lea edx, [rax + 0x7fff]	       585	bisect.c	FUNCTION_20	CALL_3
0x1354	            0x85c0	                           test eax, eax	       585	bisect.c	FUNCTION_20	CALL_3
0x1356	           0xf48c2	                          cmovs eax, edx	       585	bisect.c	FUNCTION_20	CALL_3
0x1359	          0xc1f80f	                            sar eax, 0xf	       585	bisect.c	FUNCTION_20	CALL_3
0x135c	            0x89c3	                            mov ebx, eax	       585	bisect.c	FUNCTION_20	CALL_3
0x135e	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       585	bisect.c	FUNCTION_20	CALL_3
0x1361	            0x89c7	                            mov edi, eax	       585	bisect.c	FUNCTION_20	CALL_3
0x1363	      0xe833ffffff	                          call sym.sqrti	       585	bisect.c	FUNCTION_20	CALL_3
0x1368	           0xfafd8	                           imul ebx, eax	       585	bisect.c	FUNCTION_20	CALL_3
0x136b	      0xbf00800000	                         mov edi, 0x8000	       585	bisect.c	FUNCTION_20	CALL_3
0x1370	      0xe826ffffff	                          call sym.sqrti	       585	bisect.c	FUNCTION_20	CALL_3
0x1375	            0x89c1	                            mov ecx, eax	       585	bisect.c	FUNCTION_20	CALL_3
0x1377	            0x89d8	                            mov eax, ebx	       585	bisect.c	FUNCTION_20	CALL_3
0x1379	              0x99	                                     cdq	       585	bisect.c	FUNCTION_20	CALL_3
0x137a	            0xf7f9	                                idiv ecx	       585	bisect.c	FUNCTION_20	CALL_3
0x137c	          0x8945dc	             mov dword [rbp - 0x24], eax	       585	bisect.c	FUNCTION_20	CALL_3
0x137f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       587	bisect.c	FUNCTION_20
0x1383	        0x488945e0	             mov qword [rbp - 0x20], rax	       587	bisect.c	FUNCTION_20
0x1387	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       588	bisect.c	FUNCTION_20
0x138f	    0xc745d4000000	               mov dword [rbp - 0x2c], 0	       590	bisect.c	FUNCTION_20	FOR_1
0x1396	            0xeb5a	                           jmp 0x4001432	       590	bisect.c	FUNCTION_20	FOR_1
0x1398	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	       591	bisect.c	FUNCTION_20	FOR_1	IF_1
0x139b	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	       591	bisect.c	FUNCTION_20	FOR_1	IF_1
0x139e	            0x753a	                           jne 0x400141a	       591	bisect.c	FUNCTION_20	FOR_1	IF_1
0x13a0	    0x488b05000000	            mov rax, qword [0x040013e7] 	       592	bisect.c	FUNCTION_20	FOR_1	IF_1	IF_2	CALL_4
0x13a7	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       592	bisect.c	FUNCTION_20	FOR_1	IF_1	IF_2	CALL_4
0x13ab	          0x488b12	                    mov rdx, qword [rdx]	       592	bisect.c	FUNCTION_20	FOR_1	IF_1	IF_2	CALL_4
0x13ae	        0x4883c204	                              add rdx, 4	       592	bisect.c	FUNCTION_20	FOR_1	IF_1	IF_2	CALL_4
0x13b2	          0x4889c6	                            mov rsi, rax	       592	bisect.c	FUNCTION_20	FOR_1	IF_1	IF_2	CALL_4
0x13b5	          0x4889d7	                            mov rdi, rdx	       592	bisect.c	FUNCTION_20	FOR_1	IF_1	IF_2	CALL_4
0x13b8	      0xe8c5eeffff	                         call sym.oidcmp	       592	bisect.c	FUNCTION_20	FOR_1	IF_1	IF_2	CALL_4
0x13bd	            0x85c0	                           test eax, eax	       592	bisect.c	FUNCTION_20	FOR_1	IF_1	IF_2	CALL_4
0x13bf	            0x7406	                            je 0x4001407	       592	bisect.c	FUNCTION_20	FOR_1	IF_1	IF_2	CALL_4
0x13c1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       593	bisect.c	FUNCTION_20	FOR_1	IF_1	IF_2
0x13c5	            0xeb36	                           jmp 0x400143d	       593	bisect.c	FUNCTION_20	FOR_1	IF_1	IF_2
0x13c7	      0x48837de800	               cmp qword [rbp - 0x18], 0	       594	bisect.c	FUNCTION_20	FOR_1	IF_1	IF_3
0x13cc	            0x7406	                            je 0x4001414	       594	bisect.c	FUNCTION_20	FOR_1	IF_1	IF_3
0x13ce	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       595	bisect.c	FUNCTION_20	FOR_1	IF_1	IF_3
0x13d2	            0xeb29	                           jmp 0x400143d	       595	bisect.c	FUNCTION_20	FOR_1	IF_1	IF_3
0x13d4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       596	bisect.c	FUNCTION_20	FOR_1	IF_1
0x13d8	            0xeb23	                           jmp 0x400143d	       596	bisect.c	FUNCTION_20	FOR_1	IF_1
0x13da	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       598	bisect.c	FUNCTION_20	FOR_1
0x13de	        0x488945e8	             mov qword [rbp - 0x18], rax	       598	bisect.c	FUNCTION_20	FOR_1
0x13e2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       590	bisect.c	FUNCTION_20	FOR_1
0x13e6	        0x488b4008	                mov rax, qword [rax + 8]	       590	bisect.c	FUNCTION_20	FOR_1
0x13ea	        0x488945e0	             mov qword [rbp - 0x20], rax	       590	bisect.c	FUNCTION_20	FOR_1
0x13ee	        0x8345d401	               add dword [rbp - 0x2c], 1	       590	bisect.c	FUNCTION_20	FOR_1
0x13f2	      0x48837de000	               cmp qword [rbp - 0x20], 0	       590	bisect.c	FUNCTION_20	FOR_1
0x13f7	            0x759f	                           jne 0x40013d8	       590	bisect.c	FUNCTION_20	FOR_1
0x13f9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       601	bisect.c	FUNCTION_20
0x13fd	        0x4883c438	                           add rsp, 0x38	       602	bisect.c	FUNCTION_20
0x1401	              0x5b	                                 pop rbx	       602	bisect.c	FUNCTION_20
0x1402	              0x5d	                                 pop rbp	       602	bisect.c	FUNCTION_20
0x1403	              0xc3	                                     ret	       602	bisect.c	FUNCTION_20
strbuf_addch	CALL,2:FOR,0:WHILE,0:IF,1:DO,0:SWITCH,0:ELSE,0:functions,0	33
0x15c	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_45
0x15d	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_45
0x160	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_45
0x164	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_45
0x168	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_45
0x16b	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_45	IF_1	CALL_1
0x16f	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_45	IF_1	CALL_1
0x172	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_45	IF_1	CALL_1
0x177	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_45	IF_1	CALL_1
0x17a	            0x7511	                           jne 0x40001cd	       227	strbuf.h	FUNCTION_45	IF_1	CALL_1
0x17c	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_45	CALL_2
0x180	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_45	CALL_2
0x185	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_45	CALL_2
0x188	      0xe800000000	                          call 0x40001cd	       228	strbuf.h	FUNCTION_45	CALL_2
0x18d	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_45
0x191	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_45
0x195	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_45
0x199	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_45
0x19d	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_45
0x1a1	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_45
0x1a5	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_45
0x1a9	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_45
0x1ac	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_45
0x1af	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_45
0x1b1	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_45
0x1b5	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_45
0x1b9	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_45
0x1bd	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_45
0x1c1	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_45
0x1c4	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_45
0x1c7	              0x90	                                     nop	       231	strbuf.h	FUNCTION_45
0x1c8	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_45
0x1c9	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_45
bisect_checkout	CALL,7:FOR,0:WHILE,0:IF,2:DO,0:SWITCH,0:ELSE,1:functions,0	64
0x1826	              0x55	                                push rbp	       698	bisect.c	FUNCTION_26
0x1827	          0x4889e5	                            mov rbp, rsp	       698	bisect.c	FUNCTION_26
0x182a	        0x4883ec60	                           sub rsp, 0x60	       698	bisect.c	FUNCTION_26
0x182e	        0x48897da8	             mov qword [rbp - 0x58], rdi	       698	bisect.c	FUNCTION_26
0x1832	          0x8975a4	             mov dword [rbp - 0x5c], esi	       698	bisect.c	FUNCTION_26
0x1835	    0x64488b042528	                mov rax, qword fs:[0x28]	       698	bisect.c	FUNCTION_26
0x183e	        0x488945f8	                mov qword [rbp - 8], rax	       698	bisect.c	FUNCTION_26
0x1842	            0x31c0	                            xor eax, eax	       698	bisect.c	FUNCTION_26
0x1844	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       701	bisect.c	FUNCTION_26	CALL_2
0x1848	          0x4889c7	                            mov rdi, rax	       701	bisect.c	FUNCTION_26	CALL_2
0x184b	      0xe800000000	                          call 0x4001890	       701	bisect.c	FUNCTION_26	CALL_2
0x1850	          0x488b10	                    mov rdx, qword [rax]	       701	bisect.c	FUNCTION_26	CALL_2
0x1853	        0x488955c0	             mov qword [rbp - 0x40], rdx	       701	bisect.c	FUNCTION_26	CALL_2
0x1857	        0x488b5008	                mov rdx, qword [rax + 8]	       701	bisect.c	FUNCTION_26	CALL_2
0x185b	        0x488955c8	             mov qword [rbp - 0x38], rdx	       701	bisect.c	FUNCTION_26	CALL_2
0x185f	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       701	bisect.c	FUNCTION_26	CALL_2
0x1863	        0x488955d0	             mov qword [rbp - 0x30], rdx	       701	bisect.c	FUNCTION_26	CALL_2
0x1867	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       701	bisect.c	FUNCTION_26	CALL_2
0x186b	        0x488955d8	             mov qword [rbp - 0x28], rdx	       701	bisect.c	FUNCTION_26	CALL_2
0x186f	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       701	bisect.c	FUNCTION_26	CALL_2
0x1873	        0x488955e0	             mov qword [rbp - 0x20], rdx	       701	bisect.c	FUNCTION_26	CALL_2
0x1877	         0xfb64028	           movzx eax, byte [rax + 0x28] 	       701	bisect.c	FUNCTION_26	CALL_2
0x187b	          0x8845e8	               mov byte [rbp - 0x18], al	       701	bisect.c	FUNCTION_26	CALL_2
0x187e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       702	bisect.c	FUNCTION_26	CALL_3
0x1882	    0x41b901000000	                              mov r9d, 1	       702	bisect.c	FUNCTION_26	CALL_3
0x1888	    0x41b800000000	                              mov r8d, 0	       702	bisect.c	FUNCTION_26	CALL_3
0x188e	      0xb900000000	                              mov ecx, 0	       702	bisect.c	FUNCTION_26	CALL_3
0x1893	          0x4889c2	                            mov rdx, rax	       702	bisect.c	FUNCTION_26	CALL_3
0x1896	      0xbe00000000	                              mov esi, 0	       702	bisect.c	FUNCTION_26	CALL_3
0x189b	      0xbf00000000	                              mov edi, 0	       702	bisect.c	FUNCTION_26	CALL_3
0x18a0	      0xe800000000	                          call 0x40018e5	       702	bisect.c	FUNCTION_26	CALL_3
0x18a5	        0x488d45c0	                   lea rax, [rbp - 0x40]	       704	bisect.c	FUNCTION_26
0x18a9	    0x488905000000	            mov qword [0x040018f0], rax 	       704	bisect.c	FUNCTION_26
0x18b0	        0x837da400	               cmp dword [rbp - 0x5c], 0	       705	bisect.c	FUNCTION_26	IF_1
0x18b4	            0x7429	                            je 0x400191f	       705	bisect.c	FUNCTION_26	IF_1
0x18b6	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       706	bisect.c	FUNCTION_26	IF_1	CALL_4
0x18ba	    0x41b901000000	                              mov r9d, 1	       706	bisect.c	FUNCTION_26	IF_1	CALL_4
0x18c0	    0x41b800000000	                              mov r8d, 0	       706	bisect.c	FUNCTION_26	IF_1	CALL_4
0x18c6	      0xb900000000	                              mov ecx, 0	       706	bisect.c	FUNCTION_26	IF_1	CALL_4
0x18cb	          0x4889c2	                            mov rdx, rax	       706	bisect.c	FUNCTION_26	IF_1	CALL_4
0x18ce	      0xbe00000000	                              mov esi, 0	       706	bisect.c	FUNCTION_26	IF_1	CALL_4
0x18d3	      0xbf00000000	                              mov edi, 0	       706	bisect.c	FUNCTION_26	IF_1	CALL_4
0x18d8	      0xe800000000	                          call 0x400191d	       706	bisect.c	FUNCTION_26	IF_1	CALL_4
0x18dd	            0xeb22	                           jmp 0x4001941	       706	bisect.c	FUNCTION_26	IF_1	CALL_4
0x18df	      0xbe02000000	                              mov esi, 2	       710	bisect.c	FUNCTION_26	ELSE_1	CALL_5
0x18e4	      0xbf00000000	                              mov edi, 0	       710	bisect.c	FUNCTION_26	ELSE_1	CALL_5
0x18e9	      0xe800000000	                          call 0x400192e	       710	bisect.c	FUNCTION_26	ELSE_1	CALL_5
0x18ee	          0x8945bc	             mov dword [rbp - 0x44], eax	       710	bisect.c	FUNCTION_26	ELSE_1	CALL_5
0x18f1	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       711	bisect.c	FUNCTION_26	ELSE_1	IF_2
0x18f5	            0x740a	                            je 0x4001941	       711	bisect.c	FUNCTION_26	ELSE_1	IF_2
0x18f7	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       712	bisect.c	FUNCTION_26	ELSE_1	CALL_6
0x18fa	            0x89c7	                            mov edi, eax	       712	bisect.c	FUNCTION_26	ELSE_1	CALL_6
0x18fc	      0xe800000000	                          call 0x4001941	       712	bisect.c	FUNCTION_26	ELSE_1	CALL_6
0x1901	        0x488d45c0	                   lea rax, [rbp - 0x40]	       715	bisect.c	FUNCTION_26
0x1905	    0x488905000000	            mov qword [0x0400194c], rax 	       715	bisect.c	FUNCTION_26
0x190c	      0xbe02000000	                              mov esi, 2	       716	bisect.c	FUNCTION_26	CALL_7
0x1911	      0xbf00000000	                              mov edi, 0	       716	bisect.c	FUNCTION_26	CALL_7
0x1916	      0xe800000000	                          call 0x400195b	       716	bisect.c	FUNCTION_26	CALL_7
0x191b	        0x488b4df8	                mov rcx, qword [rbp - 8]	       717	bisect.c	FUNCTION_26
0x191f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       717	bisect.c	FUNCTION_26
0x1928	            0x7405	                            je 0x400196f	       717	bisect.c	FUNCTION_26
0x192a	      0xe800000000	                          call 0x400196f	       717	bisect.c	FUNCTION_26
0x192f	              0xc9	                                   leave	       717	bisect.c	FUNCTION_26
0x1930	              0xc3	                                     ret	       717	bisect.c	FUNCTION_26
strbuf_addstr	CALL,2:FOR,0:WHILE,0:IF,0:DO,0:SWITCH,0:ELSE,0:functions,0	17
0x1ca	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_46
0x1cb	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_46
0x1ce	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_46
0x1d2	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_46
0x1d6	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_46
0x1da	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_46	CALL_2
0x1de	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_46	CALL_2
0x1e1	      0xe800000000	                          call 0x4000226	       279	strbuf.h	FUNCTION_46	CALL_2
0x1e6	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_46	CALL_2
0x1e9	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_46	CALL_2
0x1ed	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_46	CALL_2
0x1f1	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_46	CALL_2
0x1f4	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_46	CALL_2
0x1f7	      0xe800000000	                          call 0x400023c	       279	strbuf.h	FUNCTION_46	CALL_2
0x1fc	              0x90	                                     nop	       280	strbuf.h	FUNCTION_46
0x1fd	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_46
0x1fe	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_46
get_bad_and_good_commits	CALL,3:FOR,1:WHILE,0:IF,0:DO,0:SWITCH,0:ELSE,0:functions,0	58
0x1989	              0x55	                                push rbp	       728	bisect.c	FUNCTION_28
0x198a	          0x4889e5	                            mov rbp, rsp	       728	bisect.c	FUNCTION_28
0x198d	              0x53	                                push rbx	       728	bisect.c	FUNCTION_28
0x198e	        0x4883ec28	                           sub rsp, 0x28	       728	bisect.c	FUNCTION_28
0x1992	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       728	bisect.c	FUNCTION_28
0x1996	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       730	bisect.c	FUNCTION_28
0x199d	    0x8b0500000000	            mov eax, dword [0x040019e3] 	       732	bisect.c	FUNCTION_28	CALL_1
0x19a3	          0x83c001	                              add eax, 1	       732	bisect.c	FUNCTION_28	CALL_1
0x19a6	            0x4898	                                    cdqe	       732	bisect.c	FUNCTION_28	CALL_1
0x19a8	          0x4889c6	                            mov rsi, rax	       732	bisect.c	FUNCTION_28	CALL_1
0x19ab	      0xbf08000000	                              mov edi, 8	       732	bisect.c	FUNCTION_28	CALL_1
0x19b0	      0xe84be6ffff	                        call sym.st_mult	       732	bisect.c	FUNCTION_28	CALL_1
0x19b5	          0x4889c7	                            mov rdi, rax	       732	bisect.c	FUNCTION_28	CALL_1
0x19b8	      0xe800000000	                          call 0x40019fd	       732	bisect.c	FUNCTION_28	CALL_1
0x19bd	        0x488945e8	             mov qword [rbp - 0x18], rax	       732	bisect.c	FUNCTION_28	CALL_1
0x19c1	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       733	bisect.c	FUNCTION_28	CALL_2
0x19c4	          0x8d5001	                      lea edx, [rax + 1]	       733	bisect.c	FUNCTION_28	CALL_2
0x19c7	          0x8955e4	             mov dword [rbp - 0x1c], edx	       733	bisect.c	FUNCTION_28	CALL_2
0x19ca	            0x4898	                                    cdqe	       733	bisect.c	FUNCTION_28	CALL_2
0x19cc	    0x488d14c50000	                        lea rdx, [rax*8]	       733	bisect.c	FUNCTION_28	CALL_2
0x19d4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       733	bisect.c	FUNCTION_28	CALL_2
0x19d8	        0x488d1c02	                    lea rbx, [rdx + rax]	       733	bisect.c	FUNCTION_28	CALL_2
0x19dc	    0x488b05000000	            mov rax, qword [0x04001a23] 	       733	bisect.c	FUNCTION_28	CALL_2
0x19e3	          0x4889c7	                            mov rdi, rax	       733	bisect.c	FUNCTION_28	CALL_2
0x19e6	      0xe846ffffff	           call sym.get_commit_reference	       733	bisect.c	FUNCTION_28	CALL_2
0x19eb	          0x488903	                    mov qword [rbx], rax	       733	bisect.c	FUNCTION_28	CALL_2
0x19ee	    0xc745e0000000	               mov dword [rbp - 0x20], 0	       734	bisect.c	FUNCTION_28	FOR_1
0x19f5	            0xeb48	                           jmp 0x4001a7f	       734	bisect.c	FUNCTION_28	FOR_1
0x19f7	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       735	bisect.c	FUNCTION_28	CALL_3
0x19fa	          0x8d5001	                      lea edx, [rax + 1]	       735	bisect.c	FUNCTION_28	CALL_3
0x19fd	          0x8955e4	             mov dword [rbp - 0x1c], edx	       735	bisect.c	FUNCTION_28	CALL_3
0x1a00	            0x4898	                                    cdqe	       735	bisect.c	FUNCTION_28	CALL_3
0x1a02	    0x488d14c50000	                        lea rdx, [rax*8]	       735	bisect.c	FUNCTION_28	CALL_3
0x1a0a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       735	bisect.c	FUNCTION_28	CALL_3
0x1a0e	        0x488d1c02	                    lea rbx, [rdx + rax]	       735	bisect.c	FUNCTION_28	CALL_3
0x1a12	    0x488b0d000000	            mov rcx, qword [0x04001a59] 	       735	bisect.c	FUNCTION_28	CALL_3
0x1a19	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       735	bisect.c	FUNCTION_28	CALL_3
0x1a1c	          0x4863d0	                         movsxd rdx, eax	       735	bisect.c	FUNCTION_28	CALL_3
0x1a1f	          0x4889d0	                            mov rax, rdx	       735	bisect.c	FUNCTION_28	CALL_3
0x1a22	        0x48c1e002	                              shl rax, 2	       735	bisect.c	FUNCTION_28	CALL_3
0x1a26	          0x4801d0	                            add rax, rdx	       735	bisect.c	FUNCTION_28	CALL_3
0x1a29	        0x48c1e002	                              shl rax, 2	       735	bisect.c	FUNCTION_28	CALL_3
0x1a2d	          0x4801c8	                            add rax, rcx	       735	bisect.c	FUNCTION_28	CALL_3
0x1a30	          0x4889c7	                            mov rdi, rax	       735	bisect.c	FUNCTION_28	CALL_3
0x1a33	      0xe8f9feffff	           call sym.get_commit_reference	       735	bisect.c	FUNCTION_28	CALL_3
0x1a38	          0x488903	                    mov qword [rbx], rax	       735	bisect.c	FUNCTION_28	CALL_3
0x1a3b	        0x8345e001	               add dword [rbp - 0x20], 1	       734	bisect.c	FUNCTION_28	FOR_1
0x1a3f	    0x8b0500000000	            mov eax, dword [0x04001a85] 	       734	bisect.c	FUNCTION_28	FOR_1
0x1a45	          0x3b45e0	             cmp eax, dword [rbp - 0x20]	       734	bisect.c	FUNCTION_28	FOR_1
0x1a48	            0x7fad	                            jg 0x4001a37	       734	bisect.c	FUNCTION_28	FOR_1
0x1a4a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       736	bisect.c	FUNCTION_28
0x1a4e	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       736	bisect.c	FUNCTION_28
0x1a51	            0x8910	                    mov dword [rax], edx	       736	bisect.c	FUNCTION_28
0x1a53	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       738	bisect.c	FUNCTION_28
0x1a57	        0x4883c428	                           add rsp, 0x28	       739	bisect.c	FUNCTION_28
0x1a5b	              0x5b	                                 pop rbx	       739	bisect.c	FUNCTION_28
0x1a5c	              0x5d	                                 pop rbp	       739	bisect.c	FUNCTION_28
0x1a5d	              0xc3	                                     ret	       739	bisect.c	FUNCTION_28
weight_set	CALL,0:FOR,0:WHILE,0:IF,0:DO,0:SWITCH,0:ELSE,0:functions,0	12
0x44f	              0x55	                                push rbp	        81	bisect.c	FUNCTION_4
0x450	          0x4889e5	                            mov rbp, rsp	        81	bisect.c	FUNCTION_4
0x453	        0x48897df8	                mov qword [rbp - 8], rdi	        81	bisect.c	FUNCTION_4
0x457	          0x8975f4	              mov dword [rbp - 0xc], esi	        81	bisect.c	FUNCTION_4
0x45a	        0x488b45f8	                mov rax, qword [rbp - 8]	        82	bisect.c	FUNCTION_4
0x45e	          0x488b00	                    mov rax, qword [rax]	        82	bisect.c	FUNCTION_4
0x461	        0x488b4018	            mov rax, qword [rax + 0x18] 	        82	bisect.c	FUNCTION_4
0x465	          0x8b55f4	              mov edx, dword [rbp - 0xc]	        82	bisect.c	FUNCTION_4
0x468	            0x8910	                    mov dword [rax], edx	        82	bisect.c	FUNCTION_4
0x46a	              0x90	                                     nop	        83	bisect.c	FUNCTION_4
0x46b	              0x5d	                                 pop rbp	        83	bisect.c	FUNCTION_4
0x46c	              0xc3	                                     ret	        83	bisect.c	FUNCTION_4
best_bisection_sorted	CALL,9:FOR,2:WHILE,0:IF,4:DO,0:SWITCH,0:ELSE,0:functions,0	148
0x61a	              0x55	                                push rbp	       202	bisect.c	FUNCTION_10
0x61b	          0x4889e5	                            mov rbp, rsp	       202	bisect.c	FUNCTION_10
0x61e	        0x4883ec60	                           sub rsp, 0x60	       202	bisect.c	FUNCTION_10
0x622	        0x48897da8	             mov qword [rbp - 0x58], rdi	       202	bisect.c	FUNCTION_10
0x626	          0x8975a4	             mov dword [rbp - 0x5c], esi	       202	bisect.c	FUNCTION_10
0x629	    0x64488b042528	                mov rax, qword fs:[0x28]	       202	bisect.c	FUNCTION_10
0x632	        0x488945f8	                mov qword [rbp - 8], rax	       202	bisect.c	FUNCTION_10
0x636	            0x31c0	                            xor eax, eax	       202	bisect.c	FUNCTION_10
0x638	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       204	bisect.c	FUNCTION_10	CALL_1
0x63b	            0x4898	                                    cdqe	       204	bisect.c	FUNCTION_10	CALL_1
0x63d	      0xbe10000000	                           mov esi, 0x10	       204	bisect.c	FUNCTION_10	CALL_1
0x642	          0x4889c7	                            mov rdi, rax	       204	bisect.c	FUNCTION_10	CALL_1
0x645	      0xe800000000	                          call 0x400068a	       204	bisect.c	FUNCTION_10	CALL_1
0x64a	        0x488945d0	             mov qword [rbp - 0x30], rax	       204	bisect.c	FUNCTION_10	CALL_1
0x64e	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       205	bisect.c	FUNCTION_10
0x656	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       205	bisect.c	FUNCTION_10
0x65e	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       205	bisect.c	FUNCTION_10
0x666	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       208	bisect.c	FUNCTION_10	FOR_1
0x66a	        0x488945c8	             mov qword [rbp - 0x38], rax	       208	bisect.c	FUNCTION_10	FOR_1
0x66e	    0xc745b8000000	               mov dword [rbp - 0x48], 0	       208	bisect.c	FUNCTION_10	FOR_1
0x675	      0xe98a000000	                           jmp 0x4000744	       208	bisect.c	FUNCTION_10	FOR_1
0x67a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       210	bisect.c	FUNCTION_10	FOR_1
0x67e	          0x488b00	                    mov rax, qword [rax]	       210	bisect.c	FUNCTION_10	FOR_1
0x681	            0x8b00	                    mov eax, dword [rax]	       210	bisect.c	FUNCTION_10	FOR_1
0x683	          0xc1e804	                              shr eax, 4	       210	bisect.c	FUNCTION_10	FOR_1
0x686	      0x25ffffff07	                      and eax, 0x7ffffff	       210	bisect.c	FUNCTION_10	FOR_1
0x68b	          0x8945c4	             mov dword [rbp - 0x3c], eax	       210	bisect.c	FUNCTION_10	FOR_1
0x68e	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       212	bisect.c	FUNCTION_10	FOR_1	IF_1
0x691	          0x83e004	                              and eax, 4	       212	bisect.c	FUNCTION_10	FOR_1	IF_1
0x694	            0x85c0	                           test eax, eax	       212	bisect.c	FUNCTION_10	FOR_1	IF_1
0x696	            0x755f	                           jne 0x4000737	       212	bisect.c	FUNCTION_10	FOR_1	IF_1
0x698	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       214	bisect.c	FUNCTION_10	FOR_1	CALL_2
0x69c	          0x4889c7	                            mov rdi, rax	       214	bisect.c	FUNCTION_10	FOR_1	CALL_2
0x69f	      0xe894fdffff	                         call sym.weight	       214	bisect.c	FUNCTION_10	FOR_1	CALL_2
0x6a4	          0x8945c0	             mov dword [rbp - 0x40], eax	       214	bisect.c	FUNCTION_10	FOR_1	CALL_2
0x6a7	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       215	bisect.c	FUNCTION_10	FOR_1	IF_2
0x6aa	          0x2b45c0	             sub eax, dword [rbp - 0x40]	       215	bisect.c	FUNCTION_10	FOR_1	IF_2
0x6ad	          0x3b45c0	             cmp eax, dword [rbp - 0x40]	       215	bisect.c	FUNCTION_10	FOR_1	IF_2
0x6b0	            0x7d09	                           jge 0x40006fb	       215	bisect.c	FUNCTION_10	FOR_1	IF_2
0x6b2	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       216	bisect.c	FUNCTION_10	FOR_1	IF_2
0x6b5	          0x2b45c0	             sub eax, dword [rbp - 0x40]	       216	bisect.c	FUNCTION_10	FOR_1	IF_2
0x6b8	          0x8945c0	             mov dword [rbp - 0x40], eax	       216	bisect.c	FUNCTION_10	FOR_1	IF_2
0x6bb	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       217	bisect.c	FUNCTION_10	FOR_1
0x6be	            0x4898	                                    cdqe	       217	bisect.c	FUNCTION_10	FOR_1
0x6c0	        0x48c1e004	                              shl rax, 4	       217	bisect.c	FUNCTION_10	FOR_1
0x6c4	          0x4889c2	                            mov rdx, rax	       217	bisect.c	FUNCTION_10	FOR_1
0x6c7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       217	bisect.c	FUNCTION_10	FOR_1
0x6cb	          0x4801c2	                            add rdx, rax	       217	bisect.c	FUNCTION_10	FOR_1
0x6ce	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       217	bisect.c	FUNCTION_10	FOR_1
0x6d2	          0x488b00	                    mov rax, qword [rax]	       217	bisect.c	FUNCTION_10	FOR_1
0x6d5	          0x488902	                    mov qword [rdx], rax	       217	bisect.c	FUNCTION_10	FOR_1
0x6d8	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       218	bisect.c	FUNCTION_10	FOR_1
0x6db	            0x4898	                                    cdqe	       218	bisect.c	FUNCTION_10	FOR_1
0x6dd	        0x48c1e004	                              shl rax, 4	       218	bisect.c	FUNCTION_10	FOR_1
0x6e1	          0x4889c2	                            mov rdx, rax	       218	bisect.c	FUNCTION_10	FOR_1
0x6e4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       218	bisect.c	FUNCTION_10	FOR_1
0x6e8	          0x4801c2	                            add rdx, rax	       218	bisect.c	FUNCTION_10	FOR_1
0x6eb	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       218	bisect.c	FUNCTION_10	FOR_1
0x6ee	          0x894208	                mov dword [rdx + 8], eax	       218	bisect.c	FUNCTION_10	FOR_1
0x6f1	        0x8345b801	               add dword [rbp - 0x48], 1	       219	bisect.c	FUNCTION_10	FOR_1
0x6f5	            0xeb01	                           jmp 0x4000738	       219	bisect.c	FUNCTION_10	FOR_1
0x6f7	              0x90	                                     nop	       213	bisect.c	FUNCTION_10	FOR_1	IF_1
0x6f8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       208	bisect.c	FUNCTION_10	FOR_1
0x6fc	        0x488b4008	                mov rax, qword [rax + 8]	       208	bisect.c	FUNCTION_10	FOR_1
0x700	        0x488945c8	             mov qword [rbp - 0x38], rax	       208	bisect.c	FUNCTION_10	FOR_1
0x704	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       208	bisect.c	FUNCTION_10	FOR_1
0x709	     0xf856bffffff	                           jne 0x40006ba	       208	bisect.c	FUNCTION_10	FOR_1
0x70f	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       221	bisect.c	FUNCTION_10	CALL_3
0x712	          0x4863f0	                         movsxd rsi, eax	       221	bisect.c	FUNCTION_10	CALL_3
0x715	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       221	bisect.c	FUNCTION_10	CALL_3
0x719	      0xb900000000	                              mov ecx, 0	       221	bisect.c	FUNCTION_10	CALL_3
0x71e	      0xba10000000	                           mov edx, 0x10	       221	bisect.c	FUNCTION_10	CALL_3
0x723	          0x4889c7	                            mov rdi, rax	       221	bisect.c	FUNCTION_10	CALL_3
0x726	      0xe827f9ffff	                     call sym.sane_qsort	       221	bisect.c	FUNCTION_10	CALL_3
0x72b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       222	bisect.c	FUNCTION_10	FOR_2
0x72f	        0x488945c8	             mov qword [rbp - 0x38], rax	       222	bisect.c	FUNCTION_10	FOR_2
0x733	    0xc745bc000000	               mov dword [rbp - 0x44], 0	       222	bisect.c	FUNCTION_10	FOR_2
0x73a	      0xe9a4000000	                           jmp 0x4000823	       222	bisect.c	FUNCTION_10	FOR_2
0x73f	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       223	bisect.c	FUNCTION_10	FOR_2
0x742	            0x4898	                                    cdqe	       223	bisect.c	FUNCTION_10	FOR_2
0x744	        0x48c1e004	                              shl rax, 4	       223	bisect.c	FUNCTION_10	FOR_2
0x748	          0x4889c2	                            mov rdx, rax	       223	bisect.c	FUNCTION_10	FOR_2
0x74b	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       223	bisect.c	FUNCTION_10	FOR_2
0x74f	          0x4801d0	                            add rax, rdx	       223	bisect.c	FUNCTION_10	FOR_2
0x752	          0x488b00	                    mov rax, qword [rax]	       223	bisect.c	FUNCTION_10	FOR_2
0x755	        0x488945d8	             mov qword [rbp - 0x28], rax	       223	bisect.c	FUNCTION_10	FOR_2
0x759	        0x488d45e0	                   lea rax, [rbp - 0x20]	       225	bisect.c	FUNCTION_10	FOR_2	CALL_4
0x75d	      0xbe00000000	                              mov esi, 0	       225	bisect.c	FUNCTION_10	FOR_2	CALL_4
0x762	          0x4889c7	                            mov rdi, rax	       225	bisect.c	FUNCTION_10	FOR_2	CALL_4
0x765	      0xe858f9ffff	                  call sym.strbuf_setlen	       225	bisect.c	FUNCTION_10	FOR_2	CALL_4
0x76a	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       226	bisect.c	FUNCTION_10	FOR_2	CALL_5
0x76d	            0x4898	                                    cdqe	       226	bisect.c	FUNCTION_10	FOR_2	CALL_5
0x76f	        0x48c1e004	                              shl rax, 4	       226	bisect.c	FUNCTION_10	FOR_2	CALL_5
0x773	          0x4889c2	                            mov rdx, rax	       226	bisect.c	FUNCTION_10	FOR_2	CALL_5
0x776	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       226	bisect.c	FUNCTION_10	FOR_2	CALL_5
0x77a	          0x4801d0	                            add rax, rdx	       226	bisect.c	FUNCTION_10	FOR_2	CALL_5
0x77d	          0x8b5008	                mov edx, dword [rax + 8]	       226	bisect.c	FUNCTION_10	FOR_2	CALL_5
0x780	        0x488d45e0	                   lea rax, [rbp - 0x20]	       226	bisect.c	FUNCTION_10	FOR_2	CALL_5
0x784	      0xbe00000000	                              mov esi, 0	       226	bisect.c	FUNCTION_10	FOR_2	CALL_5
0x789	          0x4889c7	                            mov rdi, rax	       226	bisect.c	FUNCTION_10	FOR_2	CALL_5
0x78c	      0xb800000000	                              mov eax, 0	       226	bisect.c	FUNCTION_10	FOR_2	CALL_5
0x791	      0xe800000000	                          call 0x40007d6	       226	bisect.c	FUNCTION_10	FOR_2	CALL_5
0x796	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       227	bisect.c	FUNCTION_10	FOR_2	CALL_6
0x79a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       227	bisect.c	FUNCTION_10	FOR_2	CALL_6
0x79e	          0x4889c6	                            mov rsi, rax	       227	bisect.c	FUNCTION_10	FOR_2	CALL_6
0x7a1	      0xbf00000000	                              mov edi, 0	       227	bisect.c	FUNCTION_10	FOR_2	CALL_6
0x7a6	      0xe800000000	                          call 0x40007eb	       227	bisect.c	FUNCTION_10	FOR_2	CALL_6
0x7ab	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       229	bisect.c	FUNCTION_10	FOR_2
0x7ae	            0x4898	                                    cdqe	       229	bisect.c	FUNCTION_10	FOR_2
0x7b0	        0x48c1e004	                              shl rax, 4	       229	bisect.c	FUNCTION_10	FOR_2
0x7b4	          0x4889c2	                            mov rdx, rax	       229	bisect.c	FUNCTION_10	FOR_2
0x7b7	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       229	bisect.c	FUNCTION_10	FOR_2
0x7bb	          0x4801d0	                            add rax, rdx	       229	bisect.c	FUNCTION_10	FOR_2
0x7be	          0x488b10	                    mov rdx, qword [rax]	       229	bisect.c	FUNCTION_10	FOR_2
0x7c1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       229	bisect.c	FUNCTION_10	FOR_2
0x7c5	          0x488910	                    mov qword [rax], rdx	       229	bisect.c	FUNCTION_10	FOR_2
0x7c8	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       230	bisect.c	FUNCTION_10	FOR_2	IF_3
0x7cb	          0x83e801	                              sub eax, 1	       230	bisect.c	FUNCTION_10	FOR_2	IF_3
0x7ce	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	       230	bisect.c	FUNCTION_10	FOR_2	IF_3
0x7d1	            0x7e0c	                           jle 0x400081f	       230	bisect.c	FUNCTION_10	FOR_2	IF_3
0x7d3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       231	bisect.c	FUNCTION_10	FOR_2	IF_3
0x7d7	        0x488b4008	                mov rax, qword [rax + 8]	       231	bisect.c	FUNCTION_10	FOR_2	IF_3
0x7db	        0x488945c8	             mov qword [rbp - 0x38], rax	       231	bisect.c	FUNCTION_10	FOR_2	IF_3
0x7df	        0x8345bc01	               add dword [rbp - 0x44], 1	       222	bisect.c	FUNCTION_10	FOR_2
0x7e3	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       222	bisect.c	FUNCTION_10	FOR_2
0x7e6	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	       222	bisect.c	FUNCTION_10	FOR_2
0x7e9	     0xf8c50ffffff	                            jl 0x400077f	       222	bisect.c	FUNCTION_10	FOR_2
0x7ef	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       233	bisect.c	FUNCTION_10	IF_4
0x7f4	            0x741c	                            je 0x4000852	       233	bisect.c	FUNCTION_10	IF_4
0x7f6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       234	bisect.c	FUNCTION_10	IF_4	CALL_7
0x7fa	        0x488b4008	                mov rax, qword [rax + 8]	       234	bisect.c	FUNCTION_10	IF_4	CALL_7
0x7fe	          0x4889c7	                            mov rdi, rax	       234	bisect.c	FUNCTION_10	IF_4	CALL_7
0x801	      0xe800000000	                          call 0x4000846	       234	bisect.c	FUNCTION_10	IF_4	CALL_7
0x806	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       235	bisect.c	FUNCTION_10	IF_4
0x80a	    0x48c740080000	                  mov qword [rax + 8], 0	       235	bisect.c	FUNCTION_10	IF_4
0x812	        0x488d45e0	                   lea rax, [rbp - 0x20]	       237	bisect.c	FUNCTION_10	CALL_8
0x816	          0x4889c7	                            mov rdi, rax	       237	bisect.c	FUNCTION_10	CALL_8
0x819	      0xe800000000	                          call 0x400085e	       237	bisect.c	FUNCTION_10	CALL_8
0x81e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       238	bisect.c	FUNCTION_10	CALL_9
0x822	          0x4889c7	                            mov rdi, rax	       238	bisect.c	FUNCTION_10	CALL_9
0x825	      0xe800000000	                          call 0x400086a	       238	bisect.c	FUNCTION_10	CALL_9
0x82a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       239	bisect.c	FUNCTION_10
0x82e	        0x488b4df8	                mov rcx, qword [rbp - 8]	       240	bisect.c	FUNCTION_10
0x832	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       240	bisect.c	FUNCTION_10
0x83b	            0x7405	                            je 0x4000882	       240	bisect.c	FUNCTION_10
0x83d	      0xe800000000	                          call 0x4000882	       240	bisect.c	FUNCTION_10
0x842	              0xc9	                                   leave	       240	bisect.c	FUNCTION_10
0x843	              0xc3	                                     ret	       240	bisect.c	FUNCTION_10
count_interesting_parents	CALL,0:FOR,1:WHILE,0:IF,1:DO,0:SWITCH,0:ELSE,0:functions,0	27
0x46d	              0x55	                                push rbp	        86	bisect.c	FUNCTION_5
0x46e	          0x4889e5	                            mov rbp, rsp	        86	bisect.c	FUNCTION_5
0x471	        0x48897de8	             mov qword [rbp - 0x18], rdi	        86	bisect.c	FUNCTION_5
0x475	    0xc745f4000000	                mov dword [rbp - 0xc], 0	        90	bisect.c	FUNCTION_5	FOR_1
0x47c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        90	bisect.c	FUNCTION_5	FOR_1
0x480	        0x488b4030	            mov rax, qword [rax + 0x30] 	        90	bisect.c	FUNCTION_5	FOR_1
0x484	        0x488945f8	                mov qword [rbp - 8], rax	        90	bisect.c	FUNCTION_5	FOR_1
0x488	            0xeb2b	                           jmp 0x40004f5	        90	bisect.c	FUNCTION_5	FOR_1
0x48a	        0x488b45f8	                mov rax, qword [rbp - 8]	        91	bisect.c	FUNCTION_5	FOR_1	IF_1
0x48e	          0x488b00	                    mov rax, qword [rax]	        91	bisect.c	FUNCTION_5	FOR_1	IF_1
0x491	            0x8b00	                    mov eax, dword [rax]	        91	bisect.c	FUNCTION_5	FOR_1	IF_1
0x493	          0xc1e804	                              shr eax, 4	        91	bisect.c	FUNCTION_5	FOR_1	IF_1
0x496	      0x25ffffff07	                      and eax, 0x7ffffff	        91	bisect.c	FUNCTION_5	FOR_1	IF_1
0x49b	          0x83e002	                              and eax, 2	        91	bisect.c	FUNCTION_5	FOR_1	IF_1
0x49e	            0x85c0	                           test eax, eax	        91	bisect.c	FUNCTION_5	FOR_1	IF_1
0x4a0	            0x7506	                           jne 0x40004e8	        91	bisect.c	FUNCTION_5	FOR_1	IF_1
0x4a2	        0x8345f401	                add dword [rbp - 0xc], 1	        93	bisect.c	FUNCTION_5	FOR_1
0x4a6	            0xeb01	                           jmp 0x40004e9	        93	bisect.c	FUNCTION_5	FOR_1
0x4a8	              0x90	                                     nop	        92	bisect.c	FUNCTION_5	FOR_1	IF_1
0x4a9	        0x488b45f8	                mov rax, qword [rbp - 8]	        90	bisect.c	FUNCTION_5	FOR_1
0x4ad	        0x488b4008	                mov rax, qword [rax + 8]	        90	bisect.c	FUNCTION_5	FOR_1
0x4b1	        0x488945f8	                mov qword [rbp - 8], rax	        90	bisect.c	FUNCTION_5	FOR_1
0x4b5	      0x48837df800	                  cmp qword [rbp - 8], 0	        90	bisect.c	FUNCTION_5	FOR_1
0x4ba	            0x75ce	                           jne 0x40004ca	        90	bisect.c	FUNCTION_5	FOR_1
0x4bc	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        95	bisect.c	FUNCTION_5
0x4bf	              0x5d	                                 pop rbp	        96	bisect.c	FUNCTION_5
0x4c0	              0xc3	                                     ret	        96	bisect.c	FUNCTION_5
strbuf_setlen	CALL,2:FOR,0:WHILE,0:IF,2:DO,0:SWITCH,0:ELSE,1:functions,0	43
0xc2	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_44
0xc3	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_44
0xc6	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_44
0xca	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_44
0xce	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_44
0xd2	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_44	IF_1
0xd6	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_44	IF_1
0xd9	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_44	IF_1
0xdc	            0x740d	                            je 0x400012b	       162	strbuf.h	FUNCTION_44	IF_1
0xde	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_44	IF_1
0xe2	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_44	IF_1
0xe5	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_44	IF_1
0xe9	            0xeb05	                           jmp 0x4000130	       162	strbuf.h	FUNCTION_44	IF_1
0xeb	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_44	IF_1
0xf0	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_44	IF_1
0xf4	            0x730f	                           jae 0x4000145	       162	strbuf.h	FUNCTION_44	IF_1
0xf6	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_44	CALL_1
0xfb	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_44	CALL_1
0x100	      0xe800000000	                          call 0x4000145	       163	strbuf.h	FUNCTION_44	CALL_1
0x105	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_44
0x109	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_44
0x10d	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_44
0x111	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_44	IF_2
0x115	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_44	IF_2
0x119	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_44	IF_2
0x11f	            0x7414	                            je 0x4000175	       165	strbuf.h	FUNCTION_44	IF_2
0x121	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_44	IF_2
0x125	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_44	IF_2
0x129	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_44	IF_2
0x12d	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_44	IF_2
0x130	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_44	IF_2
0x133	            0xeb24	                           jmp 0x4000199	       169	strbuf.h	FUNCTION_44
0x135	     0xfb605000000	           movzx eax, byte [0x0400017c] 	       168	strbuf.h	FUNCTION_44	CALL_2
0x13c	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_44	CALL_2
0x13e	            0x7419	                            je 0x4000199	       168	strbuf.h	FUNCTION_44	CALL_2
0x140	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_44	CALL_2
0x145	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_44	CALL_2
0x14a	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_44	CALL_2
0x14f	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_44	CALL_2
0x154	      0xe800000000	                          call 0x4000199	       168	strbuf.h	FUNCTION_44	CALL_2
0x159	              0x90	                                     nop	       169	strbuf.h	FUNCTION_44
0x15a	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_44
0x15b	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_44
is_expected_rev	CALL,9:FOR,0:WHILE,0:IF,3:DO,0:SWITCH,0:ELSE,0:functions,0	67
0x16df	              0x55	                                push rbp	       674	bisect.c	FUNCTION_25
0x16e0	          0x4889e5	                            mov rbp, rsp	       674	bisect.c	FUNCTION_25
0x16e3	    0x4881ecf00000	                           sub rsp, 0xf0	       674	bisect.c	FUNCTION_25
0x16ea	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	       674	bisect.c	FUNCTION_25
0x16f1	    0x64488b042528	                mov rax, qword fs:[0x28]	       674	bisect.c	FUNCTION_25
0x16fa	        0x488945f8	                mov qword [rbp - 8], rax	       674	bisect.c	FUNCTION_25
0x16fe	            0x31c0	                            xor eax, eax	       674	bisect.c	FUNCTION_25
0x1700	      0xe8d6f6ffff	   call sym.git_path_bisect_expected_rev	       675	bisect.c	FUNCTION_25	CALL_1
0x1705	    0x48898530ffff	             mov qword [rbp - 0xd0], rax	       675	bisect.c	FUNCTION_25	CALL_1
0x170c	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	       677	bisect.c	FUNCTION_25
0x1717	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	       677	bisect.c	FUNCTION_25
0x1722	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	       677	bisect.c	FUNCTION_25
0x172d	    0xc7852cffffff	               mov dword [rbp - 0xd4], 0	       679	bisect.c	FUNCTION_25
0x1737	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       681	bisect.c	FUNCTION_25	IF_1	CALL_3
0x173e	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       681	bisect.c	FUNCTION_25	IF_1	CALL_3
0x1745	          0x4889d6	                            mov rsi, rdx	       681	bisect.c	FUNCTION_25	IF_1	CALL_3
0x1748	          0x4889c7	                            mov rdi, rax	       681	bisect.c	FUNCTION_25	IF_1	CALL_3
0x174b	      0xe800000000	                          call 0x4001790	       681	bisect.c	FUNCTION_25	IF_1	CALL_3
0x1750	            0x85c0	                           test eax, eax	       681	bisect.c	FUNCTION_25	IF_1	CALL_3
0x1752	            0x7512	                           jne 0x40017a6	       681	bisect.c	FUNCTION_25	IF_1	CALL_3
0x1754	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       681	bisect.c	FUNCTION_25	IF_1	CALL_3
0x175a	      0x2500f00000	                         and eax, 0xf000	       681	bisect.c	FUNCTION_25	IF_1	CALL_3
0x175f	      0x3d00800000	                         cmp eax, 0x8000	       681	bisect.c	FUNCTION_25	IF_1	CALL_3
0x1764	            0x740a	                            je 0x40017b0	       681	bisect.c	FUNCTION_25	IF_1	CALL_3
0x1766	      0xb800000000	                              mov eax, 0	       682	bisect.c	FUNCTION_25	IF_1
0x176b	      0xe9a0000000	                           jmp 0x4001850	       682	bisect.c	FUNCTION_25	IF_1
0x1770	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       684	bisect.c	FUNCTION_25	CALL_4
0x1777	      0xbe00000000	                              mov esi, 0	       684	bisect.c	FUNCTION_25	CALL_4
0x177c	          0x4889c7	                            mov rdi, rax	       684	bisect.c	FUNCTION_25	CALL_4
0x177f	      0xe800000000	                          call 0x40017c4	       684	bisect.c	FUNCTION_25	CALL_4
0x1784	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       684	bisect.c	FUNCTION_25	CALL_4
0x178b	    0x4883bd38ffff	               cmp qword [rbp - 0xc8], 0	       685	bisect.c	FUNCTION_25	IF_2
0x1793	            0x7507	                           jne 0x40017dc	       685	bisect.c	FUNCTION_25	IF_2
0x1795	      0xb800000000	                              mov eax, 0	       686	bisect.c	FUNCTION_25	IF_2
0x179a	            0xeb74	                           jmp 0x4001850	       686	bisect.c	FUNCTION_25	IF_2
0x179c	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	       688	bisect.c	FUNCTION_25	IF_3	CALL_5
0x17a3	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	       688	bisect.c	FUNCTION_25	IF_3	CALL_5
0x17aa	          0x4889d6	                            mov rsi, rdx	       688	bisect.c	FUNCTION_25	IF_3	CALL_5
0x17ad	          0x4889c7	                            mov rdi, rax	       688	bisect.c	FUNCTION_25	IF_3	CALL_5
0x17b0	      0xe800000000	                          call 0x40017f5	       688	bisect.c	FUNCTION_25	IF_3	CALL_5
0x17b5	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       688	bisect.c	FUNCTION_25	IF_3	CALL_5
0x17b8	            0x7432	                            je 0x400182c	       688	bisect.c	FUNCTION_25	IF_3	CALL_5
0x17ba	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       689	bisect.c	FUNCTION_25	CALL_7
0x17c1	          0x4889c7	                            mov rdi, rax	       689	bisect.c	FUNCTION_25	CALL_7
0x17c4	      0xe800000000	                          call 0x4001809	       689	bisect.c	FUNCTION_25	CALL_7
0x17c9	          0x4889c2	                            mov rdx, rax	       689	bisect.c	FUNCTION_25	CALL_7
0x17cc	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       689	bisect.c	FUNCTION_25	CALL_7
0x17d3	          0x4889d6	                            mov rsi, rdx	       689	bisect.c	FUNCTION_25	CALL_7
0x17d6	          0x4889c7	                            mov rdi, rax	       689	bisect.c	FUNCTION_25	CALL_7
0x17d9	      0xe800000000	                          call 0x400181e	       689	bisect.c	FUNCTION_25	CALL_7
0x17de	            0x85c0	                           test eax, eax	       689	bisect.c	FUNCTION_25	CALL_7
0x17e0	           0xf94c0	                                 sete al	       689	bisect.c	FUNCTION_25	CALL_7
0x17e3	           0xfb6c0	                           movzx eax, al	       689	bisect.c	FUNCTION_25	CALL_7
0x17e6	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	       689	bisect.c	FUNCTION_25	CALL_7
0x17ec	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	       691	bisect.c	FUNCTION_25	CALL_8
0x17f3	          0x4889c7	                            mov rdi, rax	       691	bisect.c	FUNCTION_25	CALL_8
0x17f6	      0xe800000000	                          call 0x400183b	       691	bisect.c	FUNCTION_25	CALL_8
0x17fb	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       692	bisect.c	FUNCTION_25	CALL_9
0x1802	          0x4889c7	                            mov rdi, rax	       692	bisect.c	FUNCTION_25	CALL_9
0x1805	      0xe800000000	                          call 0x400184a	       692	bisect.c	FUNCTION_25	CALL_9
0x180a	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       694	bisect.c	FUNCTION_25
0x1810	        0x488b4df8	                mov rcx, qword [rbp - 8]	       695	bisect.c	FUNCTION_25
0x1814	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       695	bisect.c	FUNCTION_25
0x181d	            0x7405	                            je 0x4001864	       695	bisect.c	FUNCTION_25
0x181f	      0xe800000000	                          call 0x4001864	       695	bisect.c	FUNCTION_25
0x1824	              0xc9	                                   leave	       695	bisect.c	FUNCTION_25
0x1825	              0xc3	                                     ret	       695	bisect.c	FUNCTION_25
log2i	CALL,0:FOR,1:WHILE,0:IF,0:DO,0:SWITCH,0:ELSE,0:functions,0	12
0x255b	              0x55	                                push rbp	      1012	bisect.c	FUNCTION_37
0x255c	          0x4889e5	                            mov rbp, rsp	      1012	bisect.c	FUNCTION_37
0x255f	          0x897dec	             mov dword [rbp - 0x14], edi	      1012	bisect.c	FUNCTION_37
0x2562	    0xc745fc000000	                  mov dword [rbp - 4], 0	      1013	bisect.c	FUNCTION_37
0x2569	            0xeb07	                           jmp 0x40025b2	      1015	bisect.c	FUNCTION_37	FOR_1
0x256b	        0x8345fc01	                  add dword [rbp - 4], 1	      1016	bisect.c	FUNCTION_37	FOR_1
0x256f	          0xd17dec	               sar dword [rbp - 0x14], 1	      1015	bisect.c	FUNCTION_37	FOR_1
0x2572	        0x837dec01	               cmp dword [rbp - 0x14], 1	      1015	bisect.c	FUNCTION_37	FOR_1
0x2576	            0x7ff3	                            jg 0x40025ab	      1015	bisect.c	FUNCTION_37	FOR_1
0x2578	          0x8b45fc	                mov eax, dword [rbp - 4]	      1018	bisect.c	FUNCTION_37
0x257b	              0x5d	                                 pop rbp	      1019	bisect.c	FUNCTION_37
0x257c	              0xc3	                                     ret	      1019	bisect.c	FUNCTION_37
compare_commit_dist	CALL,1:FOR,0:WHILE,0:IF,1:DO,0:SWITCH,0:ELSE,0:functions,0	33
0x5b1	              0x55	                                push rbp	       191	bisect.c	FUNCTION_9
0x5b2	          0x4889e5	                            mov rbp, rsp	       191	bisect.c	FUNCTION_9
0x5b5	        0x4883ec20	                           sub rsp, 0x20	       191	bisect.c	FUNCTION_9
0x5b9	        0x48897de8	             mov qword [rbp - 0x18], rdi	       191	bisect.c	FUNCTION_9
0x5bd	        0x488975e0	             mov qword [rbp - 0x20], rsi	       191	bisect.c	FUNCTION_9
0x5c1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       194	bisect.c	FUNCTION_9
0x5c5	        0x488945f0	             mov qword [rbp - 0x10], rax	       194	bisect.c	FUNCTION_9
0x5c9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       195	bisect.c	FUNCTION_9
0x5cd	        0x488945f8	                mov qword [rbp - 8], rax	       195	bisect.c	FUNCTION_9
0x5d1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       196	bisect.c	FUNCTION_9	IF_1
0x5d5	          0x8b5008	                mov edx, dword [rax + 8]	       196	bisect.c	FUNCTION_9	IF_1
0x5d8	        0x488b45f8	                mov rax, qword [rbp - 8]	       196	bisect.c	FUNCTION_9	IF_1
0x5dc	          0x8b4008	                mov eax, dword [rax + 8]	       196	bisect.c	FUNCTION_9	IF_1
0x5df	            0x39c2	                            cmp edx, eax	       196	bisect.c	FUNCTION_9	IF_1
0x5e1	            0x7414	                            je 0x4000637	       196	bisect.c	FUNCTION_9	IF_1
0x5e3	        0x488b45f8	                mov rax, qword [rbp - 8]	       197	bisect.c	FUNCTION_9	IF_1
0x5e7	          0x8b5008	                mov edx, dword [rax + 8]	       197	bisect.c	FUNCTION_9	IF_1
0x5ea	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       197	bisect.c	FUNCTION_9	IF_1
0x5ee	          0x8b4008	                mov eax, dword [rax + 8]	       197	bisect.c	FUNCTION_9	IF_1
0x5f1	            0x29c2	                            sub edx, eax	       197	bisect.c	FUNCTION_9	IF_1
0x5f3	            0x89d0	                            mov eax, edx	       197	bisect.c	FUNCTION_9	IF_1
0x5f5	            0xeb21	                           jmp 0x4000658	       197	bisect.c	FUNCTION_9	IF_1
0x5f7	        0x488b45f8	                mov rax, qword [rbp - 8]	       198	bisect.c	FUNCTION_9	CALL_1
0x5fb	          0x488b00	                    mov rax, qword [rax]	       198	bisect.c	FUNCTION_9	CALL_1
0x5fe	        0x488d5004	                      lea rdx, [rax + 4]	       198	bisect.c	FUNCTION_9	CALL_1
0x602	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       198	bisect.c	FUNCTION_9	CALL_1
0x606	          0x488b00	                    mov rax, qword [rax]	       198	bisect.c	FUNCTION_9	CALL_1
0x609	        0x4883c004	                              add rax, 4	       198	bisect.c	FUNCTION_9	CALL_1
0x60d	          0x4889d6	                            mov rsi, rdx	       198	bisect.c	FUNCTION_9	CALL_1
0x610	          0x4889c7	                            mov rdi, rax	       198	bisect.c	FUNCTION_9	CALL_1
0x613	      0xe86afcffff	                         call sym.oidcmp	       198	bisect.c	FUNCTION_9	CALL_1
0x618	              0xc9	                                   leave	       199	bisect.c	FUNCTION_9
0x619	              0xc3	                                     ret	       199	bisect.c	FUNCTION_9
get_commit_reference	CALL,4:FOR,0:WHILE,0:IF,1:DO,0:SWITCH,0:ELSE,0:functions,0	26
0x1931	              0x55	                                push rbp	       720	bisect.c	FUNCTION_27
0x1932	          0x4889e5	                            mov rbp, rsp	       720	bisect.c	FUNCTION_27
0x1935	              0x53	                                push rbx	       720	bisect.c	FUNCTION_27
0x1936	        0x4883ec28	                           sub rsp, 0x28	       720	bisect.c	FUNCTION_27
0x193a	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       720	bisect.c	FUNCTION_27
0x193e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       721	bisect.c	FUNCTION_27	CALL_1
0x1942	          0x4889c7	                            mov rdi, rax	       721	bisect.c	FUNCTION_27	CALL_1
0x1945	      0xe800000000	                          call 0x400198a	       721	bisect.c	FUNCTION_27	CALL_1
0x194a	        0x488945e8	             mov qword [rbp - 0x18], rax	       721	bisect.c	FUNCTION_27	CALL_1
0x194e	      0x48837de800	               cmp qword [rbp - 0x18], 0	       722	bisect.c	FUNCTION_27	IF_1
0x1953	            0x7529	                           jne 0x40019be	       722	bisect.c	FUNCTION_27	IF_1
0x1955	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       723	bisect.c	FUNCTION_27	CALL_4
0x1959	          0x4889c7	                            mov rdi, rax	       723	bisect.c	FUNCTION_27	CALL_4
0x195c	      0xe800000000	                          call 0x40019a1	       723	bisect.c	FUNCTION_27	CALL_4
0x1961	          0x4889c3	                            mov rbx, rax	       723	bisect.c	FUNCTION_27	CALL_4
0x1964	      0xbf00000000	                              mov edi, 0	       723	bisect.c	FUNCTION_27	CALL_4
0x1969	      0xe891e8ffff	                               call sym.	       723	bisect.c	FUNCTION_27	CALL_4
0x196e	          0x4889de	                            mov rsi, rbx	       723	bisect.c	FUNCTION_27	CALL_4
0x1971	          0x4889c7	                            mov rdi, rax	       723	bisect.c	FUNCTION_27	CALL_4
0x1974	      0xb800000000	                              mov eax, 0	       723	bisect.c	FUNCTION_27	CALL_4
0x1979	      0xe800000000	                          call 0x40019be	       723	bisect.c	FUNCTION_27	CALL_4
0x197e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       724	bisect.c	FUNCTION_27
0x1982	        0x4883c428	                           add rsp, 0x28	       725	bisect.c	FUNCTION_27
0x1986	              0x5b	                                 pop rbx	       725	bisect.c	FUNCTION_27
0x1987	              0x5d	                                 pop rbp	       725	bisect.c	FUNCTION_27
0x1988	              0xc3	                                     ret	       725	bisect.c	FUNCTION_27
_	CALL,2:FOR,0:WHILE,0:IF,1:DO,0:SWITCH,0:ELSE,0:functions,0	15
0x1ff	              0x55	                                push rbp	        51	gettext.h	FUNCTION_55
0x200	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_55
0x203	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_55
0x207	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_55
0x20b	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_55	IF_1
0x20f	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_55	IF_1
0x212	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_55	IF_1
0x214	            0x7507	                           jne 0x400025d	        52	gettext.h	FUNCTION_55	IF_1
0x216	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_55	IF_1
0x21b	            0xeb0c	                           jmp 0x4000269	        53	gettext.h	FUNCTION_55	IF_1
0x21d	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_55	CALL_2
0x221	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_55	CALL_2
0x224	      0xe800000000	                          call 0x4000269	        54	gettext.h	FUNCTION_55	CALL_2
0x229	              0xc9	                                   leave	        55	gettext.h	FUNCTION_55
0x22a	              0xc3	                                     ret	        55	gettext.h	FUNCTION_55
bisect_common	CALL,3:FOR,0:WHILE,0:IF,2:DO,0:SWITCH,0:ELSE,0:functions,0	24
0x15ee	              0x55	                                push rbp	       648	bisect.c	FUNCTION_23
0x15ef	          0x4889e5	                            mov rbp, rsp	       648	bisect.c	FUNCTION_23
0x15f2	        0x4883ec10	                           sub rsp, 0x10	       648	bisect.c	FUNCTION_23
0x15f6	        0x48897df8	                mov qword [rbp - 8], rdi	       648	bisect.c	FUNCTION_23
0x15fa	        0x488b45f8	                mov rax, qword [rbp - 8]	       649	bisect.c	FUNCTION_23	IF_1	CALL_1
0x15fe	          0x4889c7	                            mov rdi, rax	       649	bisect.c	FUNCTION_23	IF_1	CALL_1
0x1601	      0xe800000000	                          call 0x4001646	       649	bisect.c	FUNCTION_23	IF_1	CALL_1
0x1606	            0x85c0	                           test eax, eax	       649	bisect.c	FUNCTION_23	IF_1	CALL_1
0x1608	            0x740f	                            je 0x4001659	       649	bisect.c	FUNCTION_23	IF_1	CALL_1
0x160a	      0xbf00000000	                              mov edi, 0	       650	bisect.c	FUNCTION_23	CALL_2
0x160f	      0xb800000000	                              mov eax, 0	       650	bisect.c	FUNCTION_23	CALL_2
0x1614	      0xe800000000	                          call 0x4001659	       650	bisect.c	FUNCTION_23	CALL_2
0x1619	        0x488b45f8	                mov rax, qword [rbp - 8]	       651	bisect.c	FUNCTION_23	IF_2
0x161d	         0xfb64075	           movzx eax, byte [rax + 0x75] 	       651	bisect.c	FUNCTION_23	IF_2
0x1621	          0x83e020	                           and eax, 0x20	       651	bisect.c	FUNCTION_23	IF_2
0x1624	            0x84c0	                             test al, al	       651	bisect.c	FUNCTION_23	IF_2
0x1626	            0x7411	                            je 0x4001679	       651	bisect.c	FUNCTION_23	IF_2
0x1628	        0x488b45f8	                mov rax, qword [rbp - 8]	       652	bisect.c	FUNCTION_23	CALL_3
0x162c	      0xbe00000000	                              mov esi, 0	       652	bisect.c	FUNCTION_23	CALL_3
0x1631	          0x4889c7	                            mov rdi, rax	       652	bisect.c	FUNCTION_23	CALL_3
0x1634	      0xe800000000	                          call 0x4001679	       652	bisect.c	FUNCTION_23	CALL_3
0x1639	              0x90	                                     nop	       653	bisect.c	FUNCTION_23
0x163a	              0xc9	                                   leave	       653	bisect.c	FUNCTION_23
0x163b	              0xc3	                                     ret	       653	bisect.c	FUNCTION_23
st_mult	CALL,2:FOR,0:WHILE,0:IF,1:DO,0:SWITCH,0:ELSE,0:functions,0	22
0x0	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_71
0x1	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_71
0x4	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_71
0x8	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_71
0xc	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_71
0x10	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_71	IF_1	CALL_1
0x15	            0x7430	                            je 0x4000087	       795	git-compat-util.h	FUNCTION_71	IF_1	CALL_1
0x17	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_71	IF_1	CALL_1
0x1e	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_71	IF_1	CALL_1
0x23	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_71	IF_1	CALL_1
0x27	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_71	IF_1	CALL_1
0x2b	            0x731a	                           jae 0x4000087	       795	git-compat-util.h	FUNCTION_71	IF_1	CALL_1
0x2d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_71	IF_1	CALL_2
0x31	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_71	IF_1	CALL_2
0x35	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_71	IF_1	CALL_2
0x38	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_71	IF_1	CALL_2
0x3d	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_71	IF_1	CALL_2
0x42	      0xe800000000	                          call 0x4000087	       796	git-compat-util.h	FUNCTION_71	IF_1	CALL_2
0x47	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_71
0x4b	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_71
0x50	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_71
0x51	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_71
register_ref	CALL,10:FOR,0:WHILE,0:IF,3:DO,0:SWITCH,0:ELSE,2:functions,0	70
0xc73	              0x55	                                push rbp	       419	bisect.c	FUNCTION_13
0xc74	          0x4889e5	                            mov rbp, rsp	       419	bisect.c	FUNCTION_13
0xc77	        0x4883ec40	                           sub rsp, 0x40	       419	bisect.c	FUNCTION_13
0xc7b	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       419	bisect.c	FUNCTION_13
0xc7f	        0x488975d0	             mov qword [rbp - 0x30], rsi	       419	bisect.c	FUNCTION_13
0xc83	          0x8955cc	             mov dword [rbp - 0x34], edx	       419	bisect.c	FUNCTION_13
0xc86	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       419	bisect.c	FUNCTION_13
0xc8a	    0x64488b042528	                mov rax, qword fs:[0x28]	       419	bisect.c	FUNCTION_13
0xc93	        0x488945f8	                mov qword [rbp - 8], rax	       419	bisect.c	FUNCTION_13
0xc97	            0x31c0	                            xor eax, eax	       419	bisect.c	FUNCTION_13
0xc99	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       420	bisect.c	FUNCTION_13
0xca1	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       420	bisect.c	FUNCTION_13
0xca9	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       420	bisect.c	FUNCTION_13
0xcb1	    0x488b15000000	            mov rdx, qword [0x04000cf8] 	       421	bisect.c	FUNCTION_13	CALL_1
0xcb8	        0x488d45e0	                   lea rax, [rbp - 0x20]	       421	bisect.c	FUNCTION_13	CALL_1
0xcbc	          0x4889d6	                            mov rsi, rdx	       421	bisect.c	FUNCTION_13	CALL_1
0xcbf	          0x4889c7	                            mov rdi, rax	       421	bisect.c	FUNCTION_13	CALL_1
0xcc2	      0xe803f5ffff	                  call sym.strbuf_addstr	       421	bisect.c	FUNCTION_13	CALL_1
0xcc7	        0x488d45e0	                   lea rax, [rbp - 0x20]	       422	bisect.c	FUNCTION_13	CALL_2
0xccb	      0xbe00000000	                              mov esi, 0	       422	bisect.c	FUNCTION_13	CALL_2
0xcd0	          0x4889c7	                            mov rdi, rax	       422	bisect.c	FUNCTION_13	CALL_2
0xcd3	      0xe8f2f4ffff	                  call sym.strbuf_addstr	       422	bisect.c	FUNCTION_13	CALL_2
0xcd8	    0x488b15000000	            mov rdx, qword [0x04000d1f] 	       424	bisect.c	FUNCTION_13	IF_1	CALL_3
0xcdf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       424	bisect.c	FUNCTION_13	IF_1	CALL_3
0xce3	          0x4889d6	                            mov rsi, rdx	       424	bisect.c	FUNCTION_13	IF_1	CALL_3
0xce6	          0x4889c7	                            mov rdi, rax	       424	bisect.c	FUNCTION_13	IF_1	CALL_3
0xce9	      0xe800000000	                          call 0x4000d2e	       424	bisect.c	FUNCTION_13	IF_1	CALL_3
0xcee	            0x85c0	                           test eax, eax	       424	bisect.c	FUNCTION_13	IF_1	CALL_3
0xcf0	            0x7529	                           jne 0x4000d5b	       424	bisect.c	FUNCTION_13	IF_1	CALL_3
0xcf2	      0xbf14000000	                           mov edi, 0x14	       425	bisect.c	FUNCTION_13	IF_1	CALL_4
0xcf7	      0xe800000000	                          call 0x4000d3c	       425	bisect.c	FUNCTION_13	IF_1	CALL_4
0xcfc	    0x488905000000	            mov qword [0x04000d43], rax 	       425	bisect.c	FUNCTION_13	IF_1	CALL_4
0xd03	    0x488b05000000	            mov rax, qword [0x04000d4a] 	       426	bisect.c	FUNCTION_13	IF_1	CALL_5
0xd0a	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       426	bisect.c	FUNCTION_13	IF_1	CALL_5
0xd0e	          0x4889d6	                            mov rsi, rdx	       426	bisect.c	FUNCTION_13	IF_1	CALL_5
0xd11	          0x4889c7	                            mov rdi, rax	       426	bisect.c	FUNCTION_13	IF_1	CALL_5
0xd14	      0xe8b9f5ffff	                         call sym.oidcpy	       426	bisect.c	FUNCTION_13	IF_1	CALL_5
0xd19	            0xeb50	                           jmp 0x4000dab	       426	bisect.c	FUNCTION_13	IF_1	CALL_5
0xd1b	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       427	bisect.c	FUNCTION_13	ELSE_1	IF_2	CALL_6
0xd1f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       427	bisect.c	FUNCTION_13	ELSE_1	IF_2	CALL_6
0xd23	          0x4889d6	                            mov rsi, rdx	       427	bisect.c	FUNCTION_13	ELSE_1	IF_2	CALL_6
0xd26	          0x4889c7	                            mov rdi, rax	       427	bisect.c	FUNCTION_13	ELSE_1	IF_2	CALL_6
0xd29	      0xe800000000	                          call 0x4000d6e	       427	bisect.c	FUNCTION_13	ELSE_1	IF_2	CALL_6
0xd2e	            0x85c0	                           test eax, eax	       427	bisect.c	FUNCTION_13	ELSE_1	IF_2	CALL_6
0xd30	            0x7413	                            je 0x4000d85	       427	bisect.c	FUNCTION_13	ELSE_1	IF_2	CALL_6
0xd32	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       428	bisect.c	FUNCTION_13	ELSE_1	IF_2	CALL_7
0xd36	          0x4889c6	                            mov rsi, rax	       428	bisect.c	FUNCTION_13	ELSE_1	IF_2	CALL_7
0xd39	      0xbf00000000	                              mov edi, 0	       428	bisect.c	FUNCTION_13	ELSE_1	IF_2	CALL_7
0xd3e	      0xe800000000	                          call 0x4000d83	       428	bisect.c	FUNCTION_13	ELSE_1	IF_2	CALL_7
0xd43	            0xeb26	                           jmp 0x4000dab	       428	bisect.c	FUNCTION_13	ELSE_1	IF_2	CALL_7
0xd45	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       429	bisect.c	FUNCTION_13	ELSE_2	IF_3	CALL_8
0xd49	      0xbe00000000	                              mov esi, 0	       429	bisect.c	FUNCTION_13	ELSE_2	IF_3	CALL_8
0xd4e	          0x4889c7	                            mov rdi, rax	       429	bisect.c	FUNCTION_13	ELSE_2	IF_3	CALL_8
0xd51	      0xe800000000	                          call 0x4000d96	       429	bisect.c	FUNCTION_13	ELSE_2	IF_3	CALL_8
0xd56	            0x85c0	                           test eax, eax	       429	bisect.c	FUNCTION_13	ELSE_2	IF_3	CALL_8
0xd58	            0x7411	                            je 0x4000dab	       429	bisect.c	FUNCTION_13	ELSE_2	IF_3	CALL_8
0xd5a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       430	bisect.c	FUNCTION_13	ELSE_2	IF_3	CALL_9
0xd5e	          0x4889c6	                            mov rsi, rax	       430	bisect.c	FUNCTION_13	ELSE_2	IF_3	CALL_9
0xd61	      0xbf00000000	                              mov edi, 0	       430	bisect.c	FUNCTION_13	ELSE_2	IF_3	CALL_9
0xd66	      0xe800000000	                          call 0x4000dab	       430	bisect.c	FUNCTION_13	ELSE_2	IF_3	CALL_9
0xd6b	        0x488d45e0	                   lea rax, [rbp - 0x20]	       433	bisect.c	FUNCTION_13	CALL_10
0xd6f	          0x4889c7	                            mov rdi, rax	       433	bisect.c	FUNCTION_13	CALL_10
0xd72	      0xe800000000	                          call 0x4000db7	       433	bisect.c	FUNCTION_13	CALL_10
0xd77	      0xb800000000	                              mov eax, 0	       435	bisect.c	FUNCTION_13
0xd7c	        0x488b4df8	                mov rcx, qword [rbp - 8]	       436	bisect.c	FUNCTION_13
0xd80	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       436	bisect.c	FUNCTION_13
0xd89	            0x7405	                            je 0x4000dd0	       436	bisect.c	FUNCTION_13
0xd8b	      0xe800000000	                          call 0x4000dd0	       436	bisect.c	FUNCTION_13
0xd90	              0xc9	                                   leave	       436	bisect.c	FUNCTION_13
0xd91	              0xc3	                                     ret	       436	bisect.c	FUNCTION_13
clear_distance	CALL,0:FOR,0:WHILE,1:IF,0:DO,0:SWITCH,0:ELSE,0:functions,0	29
0x3dd	              0x55	                                push rbp	        65	bisect.c	FUNCTION_2
0x3de	          0x4889e5	                            mov rbp, rsp	        65	bisect.c	FUNCTION_2
0x3e1	        0x48897de8	             mov qword [rbp - 0x18], rdi	        65	bisect.c	FUNCTION_2
0x3e5	            0xeb47	                           jmp 0x400046e	        66	bisect.c	FUNCTION_2	WHILE_1
0x3e7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        67	bisect.c	FUNCTION_2	WHILE_1
0x3eb	          0x488b00	                    mov rax, qword [rax]	        67	bisect.c	FUNCTION_2	WHILE_1
0x3ee	        0x488945f8	                mov qword [rbp - 8], rax	        67	bisect.c	FUNCTION_2	WHILE_1
0x3f2	        0x488b45f8	                mov rax, qword [rbp - 8]	        68	bisect.c	FUNCTION_2	WHILE_1
0x3f6	            0x8b00	                    mov eax, dword [rax]	        68	bisect.c	FUNCTION_2	WHILE_1
0x3f8	          0xc1e804	                              shr eax, 4	        68	bisect.c	FUNCTION_2	WHILE_1
0x3fb	      0x25ffffff07	                      and eax, 0x7ffffff	        68	bisect.c	FUNCTION_2	WHILE_1
0x400	      0x25fffffe07	                      and eax, 0x7feffff	        68	bisect.c	FUNCTION_2	WHILE_1
0x405	            0x89c2	                            mov edx, eax	        68	bisect.c	FUNCTION_2	WHILE_1
0x407	        0x488b45f8	                mov rax, qword [rbp - 8]	        68	bisect.c	FUNCTION_2	WHILE_1
0x40b	    0x81e2ffffff07	                      and edx, 0x7ffffff	        68	bisect.c	FUNCTION_2	WHILE_1
0x411	            0x89d1	                            mov ecx, edx	        68	bisect.c	FUNCTION_2	WHILE_1
0x413	          0xc1e104	                              shl ecx, 4	        68	bisect.c	FUNCTION_2	WHILE_1
0x416	            0x8b10	                    mov edx, dword [rax]	        68	bisect.c	FUNCTION_2	WHILE_1
0x418	    0x81e20f000080	                     and edx, 0x8000000f	        68	bisect.c	FUNCTION_2	WHILE_1
0x41e	             0x9ca	                             or edx, ecx	        68	bisect.c	FUNCTION_2	WHILE_1
0x420	            0x8910	                    mov dword [rax], edx	        68	bisect.c	FUNCTION_2	WHILE_1
0x422	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        69	bisect.c	FUNCTION_2	WHILE_1
0x426	        0x488b4008	                mov rax, qword [rax + 8]	        69	bisect.c	FUNCTION_2	WHILE_1
0x42a	        0x488945e8	             mov qword [rbp - 0x18], rax	        69	bisect.c	FUNCTION_2	WHILE_1
0x42e	      0x48837de800	               cmp qword [rbp - 0x18], 0	        66	bisect.c	FUNCTION_2	WHILE_1
0x433	            0x75b2	                           jne 0x4000427	        66	bisect.c	FUNCTION_2	WHILE_1
0x435	              0x90	                                     nop	        71	bisect.c	FUNCTION_2
0x436	              0x5d	                                 pop rbp	        71	bisect.c	FUNCTION_2
0x437	              0xc3	                                     ret	        71	bisect.c	FUNCTION_2
