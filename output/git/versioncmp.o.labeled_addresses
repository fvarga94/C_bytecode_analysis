swap_prereleases	DO,0:WHILE,0:CALL,3:FOR,1:IF,5:ELSE,3:functions,0:SWITCH,0	107
0x96	              0x55	                                push rbp	        75	versioncmp.c	FUNCTION_2
0x97	          0x4889e5	                            mov rbp, rsp	        75	versioncmp.c	FUNCTION_2
0x9a	        0x4883ec70	                           sub rsp, 0x70	        75	versioncmp.c	FUNCTION_2
0x9e	        0x48897da8	             mov qword [rbp - 0x58], rdi	        75	versioncmp.c	FUNCTION_2
0xa2	        0x488975a0	             mov qword [rbp - 0x60], rsi	        75	versioncmp.c	FUNCTION_2
0xa6	          0x89559c	             mov dword [rbp - 0x64], edx	        75	versioncmp.c	FUNCTION_2
0xa9	        0x48894d90	             mov qword [rbp - 0x70], rcx	        75	versioncmp.c	FUNCTION_2
0xad	    0x64488b042528	                mov rax, qword fs:[0x28]	        75	versioncmp.c	FUNCTION_2
0xb6	        0x488945f8	                mov qword [rbp - 8], rax	        75	versioncmp.c	FUNCTION_2
0xba	            0x31c0	                            xor eax, eax	        75	versioncmp.c	FUNCTION_2
0xbc	    0xc745d0ffffff	     mov dword [rbp - 0x30], 0xffffffff 	        77	versioncmp.c	FUNCTION_2
0xc3	          0x8b459c	             mov eax, dword [rbp - 0x64]	        77	versioncmp.c	FUNCTION_2
0xc6	          0x8945d4	             mov dword [rbp - 0x2c], eax	        77	versioncmp.c	FUNCTION_2
0xc9	    0xc745d8ffffff	     mov dword [rbp - 0x28], 0xffffffff 	        77	versioncmp.c	FUNCTION_2
0xd0	    0xc745e0ffffff	     mov dword [rbp - 0x20], 0xffffffff 	        78	versioncmp.c	FUNCTION_2
0xd7	          0x8b459c	             mov eax, dword [rbp - 0x64]	        78	versioncmp.c	FUNCTION_2
0xda	          0x8945e4	             mov dword [rbp - 0x1c], eax	        78	versioncmp.c	FUNCTION_2
0xdd	    0xc745e8ffffff	     mov dword [rbp - 0x18], 0xffffffff 	        78	versioncmp.c	FUNCTION_2
0xe4	    0xc745bc000000	               mov dword [rbp - 0x44], 0	        80	versioncmp.c	FUNCTION_2	FOR_1
0xeb	      0xe991000000	                           jmp 0x40001c1	        80	versioncmp.c	FUNCTION_2	FOR_1
0xf0	    0x488b05000000	            mov rax, qword [0x04000137] 	        81	versioncmp.c	FUNCTION_2	FOR_1
0xf7	          0x488b00	                    mov rax, qword [rax]	        81	versioncmp.c	FUNCTION_2	FOR_1
0xfa	          0x8b55bc	             mov edx, dword [rbp - 0x44]	        81	versioncmp.c	FUNCTION_2	FOR_1
0xfd	          0x4863d2	                         movsxd rdx, edx	        81	versioncmp.c	FUNCTION_2	FOR_1
0x100	        0x48c1e204	                              shl rdx, 4	        81	versioncmp.c	FUNCTION_2	FOR_1
0x104	          0x4801d0	                            add rax, rdx	        81	versioncmp.c	FUNCTION_2	FOR_1
0x107	          0x488b00	                    mov rax, qword [rax]	        81	versioncmp.c	FUNCTION_2	FOR_1
0x10a	        0x488945c8	             mov qword [rbp - 0x38], rax	        81	versioncmp.c	FUNCTION_2	FOR_1
0x10e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        82	versioncmp.c	FUNCTION_2	FOR_1	CALL_1
0x112	          0x4889c7	                            mov rdi, rax	        82	versioncmp.c	FUNCTION_2	FOR_1	CALL_1
0x115	      0xe800000000	                          call 0x400015a	        82	versioncmp.c	FUNCTION_2	FOR_1	CALL_1
0x11a	          0x8945c4	             mov dword [rbp - 0x3c], eax	        82	versioncmp.c	FUNCTION_2	FOR_1	CALL_1
0x11d	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	        83	versioncmp.c	FUNCTION_2	FOR_1	IF_1
0x120	          0x3b459c	             cmp eax, dword [rbp - 0x64]	        83	versioncmp.c	FUNCTION_2	FOR_1	IF_1
0x123	            0x7d0b	                           jge 0x4000170	        83	versioncmp.c	FUNCTION_2	FOR_1	IF_1
0x125	          0x8b459c	             mov eax, dword [rbp - 0x64]	        84	versioncmp.c	FUNCTION_2	FOR_1	IF_1
0x128	          0x2b45c4	             sub eax, dword [rbp - 0x3c]	        84	versioncmp.c	FUNCTION_2	FOR_1	IF_1
0x12b	          0x8945c0	             mov dword [rbp - 0x40], eax	        84	versioncmp.c	FUNCTION_2	FOR_1	IF_1
0x12e	            0xeb07	                           jmp 0x4000177	        84	versioncmp.c	FUNCTION_2	FOR_1	IF_1
0x130	    0xc745c0000000	               mov dword [rbp - 0x40], 0	        86	versioncmp.c	FUNCTION_2	FOR_1	ELSE_1
0x137	        0x4c8d45d0	                    lea r8, [rbp - 0x30]	        87	versioncmp.c	FUNCTION_2	FOR_1	CALL_2
0x13b	          0x8b7dbc	             mov edi, dword [rbp - 0x44]	        87	versioncmp.c	FUNCTION_2	FOR_1	CALL_2
0x13e	          0x8b4dc0	             mov ecx, dword [rbp - 0x40]	        87	versioncmp.c	FUNCTION_2	FOR_1	CALL_2
0x141	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	        87	versioncmp.c	FUNCTION_2	FOR_1	CALL_2
0x144	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	        87	versioncmp.c	FUNCTION_2	FOR_1	CALL_2
0x148	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        87	versioncmp.c	FUNCTION_2	FOR_1	CALL_2
0x14c	          0x4d89c1	                              mov r9, r8	        87	versioncmp.c	FUNCTION_2	FOR_1	CALL_2
0x14f	          0x4189f8	                            mov r8d, edi	        87	versioncmp.c	FUNCTION_2	FOR_1	CALL_2
0x152	          0x4889c7	                            mov rdi, rax	        87	versioncmp.c	FUNCTION_2	FOR_1	CALL_2
0x155	      0xe8a6feffff	    call sym.find_better_matching_suffix	        87	versioncmp.c	FUNCTION_2	FOR_1	CALL_2
0x15a	        0x4c8d45e0	                    lea r8, [rbp - 0x20]	        89	versioncmp.c	FUNCTION_2	FOR_1	CALL_3
0x15e	          0x8b7dbc	             mov edi, dword [rbp - 0x44]	        89	versioncmp.c	FUNCTION_2	FOR_1	CALL_3
0x161	          0x8b4dc0	             mov ecx, dword [rbp - 0x40]	        89	versioncmp.c	FUNCTION_2	FOR_1	CALL_3
0x164	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	        89	versioncmp.c	FUNCTION_2	FOR_1	CALL_3
0x167	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	        89	versioncmp.c	FUNCTION_2	FOR_1	CALL_3
0x16b	        0x488b45a0	             mov rax, qword [rbp - 0x60]	        89	versioncmp.c	FUNCTION_2	FOR_1	CALL_3
0x16f	          0x4d89c1	                              mov r9, r8	        89	versioncmp.c	FUNCTION_2	FOR_1	CALL_3
0x172	          0x4189f8	                            mov r8d, edi	        89	versioncmp.c	FUNCTION_2	FOR_1	CALL_3
0x175	          0x4889c7	                            mov rdi, rax	        89	versioncmp.c	FUNCTION_2	FOR_1	CALL_3
0x178	      0xe883feffff	    call sym.find_better_matching_suffix	        89	versioncmp.c	FUNCTION_2	FOR_1	CALL_3
0x17d	        0x8345bc01	               add dword [rbp - 0x44], 1	        80	versioncmp.c	FUNCTION_2	FOR_1
0x181	    0x488b05000000	            mov rax, qword [0x040001c8] 	        80	versioncmp.c	FUNCTION_2	FOR_1
0x188	          0x8b5008	                mov edx, dword [rax + 8]	        80	versioncmp.c	FUNCTION_2	FOR_1
0x18b	          0x8b45bc	             mov eax, dword [rbp - 0x44]	        80	versioncmp.c	FUNCTION_2	FOR_1
0x18e	            0x39c2	                            cmp edx, eax	        80	versioncmp.c	FUNCTION_2	FOR_1
0x190	     0xf875affffff	                            ja 0x4000130	        80	versioncmp.c	FUNCTION_2	FOR_1
0x196	          0x8b45d0	             mov eax, dword [rbp - 0x30]	        92	versioncmp.c	FUNCTION_2	IF_2
0x199	          0x83f8ff	             cmp eax, 0xffffffffffffffff	        92	versioncmp.c	FUNCTION_2	IF_2
0x19c	            0x750f	                           jne 0x40001ed	        92	versioncmp.c	FUNCTION_2	IF_2
0x19e	          0x8b45e0	             mov eax, dword [rbp - 0x20]	        92	versioncmp.c	FUNCTION_2	IF_2
0x1a1	          0x83f8ff	             cmp eax, 0xffffffffffffffff	        92	versioncmp.c	FUNCTION_2	IF_2
0x1a4	            0x7507	                           jne 0x40001ed	        92	versioncmp.c	FUNCTION_2	IF_2
0x1a6	      0xb800000000	                              mov eax, 0	        93	versioncmp.c	FUNCTION_2	IF_2
0x1ab	            0xeb51	                           jmp 0x400023e	        93	versioncmp.c	FUNCTION_2	IF_2
0x1ad	          0x8b55d0	             mov edx, dword [rbp - 0x30]	        94	versioncmp.c	FUNCTION_2	IF_3
0x1b0	          0x8b45e0	             mov eax, dword [rbp - 0x20]	        94	versioncmp.c	FUNCTION_2	IF_3
0x1b3	            0x39c2	                            cmp edx, eax	        94	versioncmp.c	FUNCTION_2	IF_3
0x1b5	            0x7507	                           jne 0x40001fe	        94	versioncmp.c	FUNCTION_2	IF_3
0x1b7	      0xb800000000	                              mov eax, 0	        98	versioncmp.c	FUNCTION_2	IF_3
0x1bc	            0xeb40	                           jmp 0x400023e	        98	versioncmp.c	FUNCTION_2	IF_3
0x1be	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       100	versioncmp.c	FUNCTION_2	IF_4
0x1c1	            0x85c0	                           test eax, eax	       100	versioncmp.c	FUNCTION_2	IF_4
0x1c3	            0x7817	                            js 0x400021c	       100	versioncmp.c	FUNCTION_2	IF_4
0x1c5	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       100	versioncmp.c	FUNCTION_2	IF_4
0x1c8	            0x85c0	                           test eax, eax	       100	versioncmp.c	FUNCTION_2	IF_4
0x1ca	            0x7810	                            js 0x400021c	       100	versioncmp.c	FUNCTION_2	IF_4
0x1cc	          0x8b55d0	             mov edx, dword [rbp - 0x30]	       101	versioncmp.c	FUNCTION_2	IF_4
0x1cf	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       101	versioncmp.c	FUNCTION_2	IF_4
0x1d2	            0x29c2	                            sub edx, eax	       101	versioncmp.c	FUNCTION_2	IF_4
0x1d4	        0x488b4590	             mov rax, qword [rbp - 0x70]	       101	versioncmp.c	FUNCTION_2	IF_4
0x1d8	            0x8910	                    mov dword [rax], edx	       101	versioncmp.c	FUNCTION_2	IF_4
0x1da	            0xeb1d	                           jmp 0x4000239	       101	versioncmp.c	FUNCTION_2	IF_4
0x1dc	          0x8b45d0	             mov eax, dword [rbp - 0x30]	       102	versioncmp.c	FUNCTION_2	ELSE_2	IF_5
0x1df	            0x85c0	                           test eax, eax	       102	versioncmp.c	FUNCTION_2	ELSE_2	IF_5
0x1e1	            0x780c	                            js 0x400022f	       102	versioncmp.c	FUNCTION_2	ELSE_2	IF_5
0x1e3	        0x488b4590	             mov rax, qword [rbp - 0x70]	       103	versioncmp.c	FUNCTION_2	ELSE_2	IF_5
0x1e7	    0xc700ffffffff	            mov dword [rax], 0xffffffff 	       103	versioncmp.c	FUNCTION_2	ELSE_2	IF_5
0x1ed	            0xeb0a	                           jmp 0x4000239	       103	versioncmp.c	FUNCTION_2	ELSE_2	IF_5
0x1ef	        0x488b4590	             mov rax, qword [rbp - 0x70]	       105	versioncmp.c	FUNCTION_2	ELSE_3
0x1f3	    0xc70001000000	                      mov dword [rax], 1	       105	versioncmp.c	FUNCTION_2	ELSE_3
0x1f9	      0xb801000000	                              mov eax, 1	       106	versioncmp.c	FUNCTION_2	ELSE_3
0x1fe	        0x488b4df8	                mov rcx, qword [rbp - 8]	       107	versioncmp.c	FUNCTION_2	ELSE_3
0x202	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       107	versioncmp.c	FUNCTION_2	ELSE_3
0x20b	            0x7405	                            je 0x4000252	       107	versioncmp.c	FUNCTION_2	ELSE_3
0x20d	      0xe800000000	                          call 0x4000252	       107	versioncmp.c	FUNCTION_2	ELSE_3
0x212	              0xc9	                                   leave	       107	versioncmp.c	FUNCTION_2	ELSE_3
0x213	              0xc3	                                     ret	       107	versioncmp.c	FUNCTION_2	ELSE_3
find_better_matching_suffix	DO,0:WHILE,0:CALL,1:FOR,1:IF,1:ELSE,0:functions,0:SWITCH,0	50
0x0	              0x55	                                push rbp	        37	versioncmp.c	FUNCTION_1
0x1	          0x4889e5	                            mov rbp, rsp	        37	versioncmp.c	FUNCTION_1
0x4	        0x4883ec40	                           sub rsp, 0x40	        37	versioncmp.c	FUNCTION_1
0x8	        0x48897de8	             mov qword [rbp - 0x18], rdi	        37	versioncmp.c	FUNCTION_1
0xc	        0x488975e0	             mov qword [rbp - 0x20], rsi	        37	versioncmp.c	FUNCTION_1
0x10	          0x8955dc	             mov dword [rbp - 0x24], edx	        37	versioncmp.c	FUNCTION_1
0x13	          0x894dd8	             mov dword [rbp - 0x28], ecx	        37	versioncmp.c	FUNCTION_1
0x16	        0x448945d4	             mov dword [rbp - 0x2c], r8d	        37	versioncmp.c	FUNCTION_1
0x1a	        0x4c894dc8	              mov qword [rbp - 0x38], r9	        37	versioncmp.c	FUNCTION_1
0x1e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        42	versioncmp.c	FUNCTION_1
0x22	          0x8b4008	                mov eax, dword [rax + 8]	        42	versioncmp.c	FUNCTION_1
0x25	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	        42	versioncmp.c	FUNCTION_1
0x28	            0x7d09	                           jge 0x4000073	        42	versioncmp.c	FUNCTION_1
0x2a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        42	versioncmp.c	FUNCTION_1
0x2e	          0x8b4004	                mov eax, dword [rax + 4]	        42	versioncmp.c	FUNCTION_1
0x31	            0xeb0a	                           jmp 0x400007d	        42	versioncmp.c	FUNCTION_1
0x33	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        42	versioncmp.c	FUNCTION_1
0x37	          0x8b4004	                mov eax, dword [rax + 4]	        42	versioncmp.c	FUNCTION_1
0x3a	          0x83e801	                              sub eax, 1	        42	versioncmp.c	FUNCTION_1
0x3d	          0x8945fc	                mov dword [rbp - 4], eax	        42	versioncmp.c	FUNCTION_1
0x40	          0x8b45d8	             mov eax, dword [rbp - 0x28]	        44	versioncmp.c	FUNCTION_1	FOR_1
0x43	          0x8945f8	                mov dword [rbp - 8], eax	        44	versioncmp.c	FUNCTION_1	FOR_1
0x46	            0xeb43	                           jmp 0x40000cb	        44	versioncmp.c	FUNCTION_1	FOR_1
0x48	          0x8b45f8	                mov eax, dword [rbp - 8]	        45	versioncmp.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4b	          0x4863d0	                         movsxd rdx, eax	        45	versioncmp.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x4e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        45	versioncmp.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x52	          0x4801c2	                            add rdx, rax	        45	versioncmp.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x55	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        45	versioncmp.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x59	          0x4889c6	                            mov rsi, rax	        45	versioncmp.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x5c	          0x4889d7	                            mov rdi, rdx	        45	versioncmp.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x5f	      0xe800000000	                          call 0x40000a4	        45	versioncmp.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x64	            0x85c0	                           test eax, eax	        45	versioncmp.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x66	            0x741f	                            je 0x40000c7	        45	versioncmp.c	FUNCTION_1	FOR_1	IF_1	CALL_1
0x68	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        46	versioncmp.c	FUNCTION_1	FOR_1	IF_1
0x6c	          0x8b55d4	             mov edx, dword [rbp - 0x2c]	        46	versioncmp.c	FUNCTION_1	FOR_1	IF_1
0x6f	            0x8910	                    mov dword [rax], edx	        46	versioncmp.c	FUNCTION_1	FOR_1	IF_1
0x71	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        47	versioncmp.c	FUNCTION_1	FOR_1	IF_1
0x75	          0x8b55f8	                mov edx, dword [rbp - 8]	        47	versioncmp.c	FUNCTION_1	FOR_1	IF_1
0x78	          0x895004	                mov dword [rax + 4], edx	        47	versioncmp.c	FUNCTION_1	FOR_1	IF_1
0x7b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        48	versioncmp.c	FUNCTION_1	FOR_1	IF_1
0x7f	          0x8b55dc	             mov edx, dword [rbp - 0x24]	        48	versioncmp.c	FUNCTION_1	FOR_1	IF_1
0x82	          0x895008	                mov dword [rax + 8], edx	        48	versioncmp.c	FUNCTION_1	FOR_1	IF_1
0x85	            0xeb0c	                           jmp 0x40000d3	        49	versioncmp.c	FUNCTION_1	FOR_1	IF_1
0x87	        0x8345f801	                  add dword [rbp - 8], 1	        44	versioncmp.c	FUNCTION_1	FOR_1
0x8b	          0x8b45f8	                mov eax, dword [rbp - 8]	        44	versioncmp.c	FUNCTION_1	FOR_1
0x8e	          0x3b45fc	                cmp eax, dword [rbp - 4]	        44	versioncmp.c	FUNCTION_1	FOR_1
0x91	            0x7eb5	                           jle 0x4000088	        44	versioncmp.c	FUNCTION_1	FOR_1
0x93	              0x90	                                     nop	        51	versioncmp.c	FUNCTION_1
0x94	              0xc9	                                   leave	        51	versioncmp.c	FUNCTION_1
0x95	              0xc3	                                     ret	        51	versioncmp.c	FUNCTION_1
versioncmp	DO,0:WHILE,2:CALL,10:FOR,0:IF,7:ELSE,1:functions,0:SWITCH,1	195
0x214	              0x55	                                push rbp	       117	versioncmp.c	ELSE_3	FUNCTION_3
0x215	          0x4889e5	                            mov rbp, rsp	       117	versioncmp.c	ELSE_3	FUNCTION_3
0x218	        0x4883ec40	                           sub rsp, 0x40	       117	versioncmp.c	ELSE_3	FUNCTION_3
0x21c	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       117	versioncmp.c	ELSE_3	FUNCTION_3
0x220	        0x488975c0	             mov qword [rbp - 0x40], rsi	       117	versioncmp.c	ELSE_3	FUNCTION_3
0x224	    0x64488b042528	                mov rax, qword fs:[0x28]	       117	versioncmp.c	ELSE_3	FUNCTION_3
0x22d	        0x488945f8	                mov qword [rbp - 8], rax	       117	versioncmp.c	ELSE_3	FUNCTION_3
0x231	            0x31c0	                            xor eax, eax	       117	versioncmp.c	ELSE_3	FUNCTION_3
0x233	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       118	versioncmp.c	ELSE_3	FUNCTION_3
0x237	        0x488945e0	             mov qword [rbp - 0x20], rax	       118	versioncmp.c	ELSE_3	FUNCTION_3
0x23b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       119	versioncmp.c	ELSE_3	FUNCTION_3
0x23f	        0x488945e8	             mov qword [rbp - 0x18], rax	       119	versioncmp.c	ELSE_3	FUNCTION_3
0x243	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       144	versioncmp.c	ELSE_3	FUNCTION_3	IF_1
0x247	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       144	versioncmp.c	ELSE_3	FUNCTION_3	IF_1
0x24b	            0x750a	                           jne 0x4000297	       144	versioncmp.c	ELSE_3	FUNCTION_3	IF_1
0x24d	      0xb800000000	                              mov eax, 0	       145	versioncmp.c	ELSE_3	FUNCTION_3	IF_1
0x252	      0xe951020000	                           jmp 0x40004e8	       145	versioncmp.c	ELSE_3	FUNCTION_3	IF_1
0x257	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       147	versioncmp.c	ELSE_3	FUNCTION_3
0x25b	        0x488d5001	                      lea rdx, [rax + 1]	       147	versioncmp.c	ELSE_3	FUNCTION_3
0x25f	        0x488955e0	             mov qword [rbp - 0x20], rdx	       147	versioncmp.c	ELSE_3	FUNCTION_3
0x263	           0xfb600	                   movzx eax, byte [rax]	       147	versioncmp.c	ELSE_3	FUNCTION_3
0x266	          0x8845d6	               mov byte [rbp - 0x2a], al	       147	versioncmp.c	ELSE_3	FUNCTION_3
0x269	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       148	versioncmp.c	ELSE_3	FUNCTION_3
0x26d	        0x488d5001	                      lea rdx, [rax + 1]	       148	versioncmp.c	ELSE_3	FUNCTION_3
0x271	        0x488955e8	             mov qword [rbp - 0x18], rdx	       148	versioncmp.c	ELSE_3	FUNCTION_3
0x275	           0xfb600	                   movzx eax, byte [rax]	       148	versioncmp.c	ELSE_3	FUNCTION_3
0x278	          0x8845d7	               mov byte [rbp - 0x29], al	       148	versioncmp.c	ELSE_3	FUNCTION_3
0x27b	        0x807dd630	            cmp byte [rbp - 0x2a], 0x30 	       150	versioncmp.c	ELSE_3	FUNCTION_3	CALL_1
0x27f	           0xf94c0	                                 sete al	       150	versioncmp.c	ELSE_3	FUNCTION_3	CALL_1
0x282	           0xfb6d0	                           movzx edx, al	       150	versioncmp.c	ELSE_3	FUNCTION_3	CALL_1
0x285	         0xfb645d6	            movzx eax, byte [rbp - 0x2a]	       150	versioncmp.c	ELSE_3	FUNCTION_3	CALL_1
0x289	            0x4898	                                    cdqe	       150	versioncmp.c	ELSE_3	FUNCTION_3	CALL_1
0x28b	     0xfb680000000	                   movzx eax, byte [rax]	       150	versioncmp.c	ELSE_3	FUNCTION_3	CALL_1
0x292	           0xfb6c0	                           movzx eax, al	       150	versioncmp.c	ELSE_3	FUNCTION_3	CALL_1
0x295	          0x83e002	                              and eax, 2	       150	versioncmp.c	ELSE_3	FUNCTION_3	CALL_1
0x298	            0x85c0	                           test eax, eax	       150	versioncmp.c	ELSE_3	FUNCTION_3	CALL_1
0x29a	           0xf95c0	                                setne al	       150	versioncmp.c	ELSE_3	FUNCTION_3	CALL_1
0x29d	           0xfb6c0	                           movzx eax, al	       150	versioncmp.c	ELSE_3	FUNCTION_3	CALL_1
0x2a0	             0x1d0	                            add eax, edx	       150	versioncmp.c	ELSE_3	FUNCTION_3	CALL_1
0x2a2	          0x8945dc	             mov dword [rbp - 0x24], eax	       150	versioncmp.c	ELSE_3	FUNCTION_3	CALL_1
0x2a5	            0xeb6e	                           jmp 0x4000355	       152	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x2a7	        0x807dd600	                cmp byte [rbp - 0x2a], 0	       153	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1	IF_2
0x2ab	            0x7508	                           jne 0x40002f5	       153	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1	IF_2
0x2ad	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       154	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1	IF_2
0x2b0	      0xe9f3010000	                           jmp 0x40004e8	       154	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1	IF_2
0x2b5	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       156	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x2b8	            0x4898	                                    cdqe	       156	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x2ba	     0xfb680000000	                   movzx eax, byte [rax]	       156	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x2c1	           0xfb6c0	                           movzx eax, al	       156	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x2c4	          0x8945dc	             mov dword [rbp - 0x24], eax	       156	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x2c7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       157	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x2cb	        0x488d5001	                      lea rdx, [rax + 1]	       157	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x2cf	        0x488955e0	             mov qword [rbp - 0x20], rdx	       157	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x2d3	           0xfb600	                   movzx eax, byte [rax]	       157	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x2d6	          0x8845d6	               mov byte [rbp - 0x2a], al	       157	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x2d9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       158	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x2dd	        0x488d5001	                      lea rdx, [rax + 1]	       158	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x2e1	        0x488955e8	             mov qword [rbp - 0x18], rdx	       158	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x2e5	           0xfb600	                   movzx eax, byte [rax]	       158	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x2e8	          0x8845d7	               mov byte [rbp - 0x29], al	       158	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x2eb	        0x807dd630	            cmp byte [rbp - 0x2a], 0x30 	       159	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1	CALL_2
0x2ef	           0xf94c0	                                 sete al	       159	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1	CALL_2
0x2f2	           0xfb6d0	                           movzx edx, al	       159	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1	CALL_2
0x2f5	         0xfb645d6	            movzx eax, byte [rbp - 0x2a]	       159	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1	CALL_2
0x2f9	            0x4898	                                    cdqe	       159	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1	CALL_2
0x2fb	     0xfb680000000	                   movzx eax, byte [rax]	       159	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1	CALL_2
0x302	           0xfb6c0	                           movzx eax, al	       159	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1	CALL_2
0x305	          0x83e002	                              and eax, 2	       159	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1	CALL_2
0x308	            0x85c0	                           test eax, eax	       159	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1	CALL_2
0x30a	           0xf95c0	                                setne al	       159	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1	CALL_2
0x30d	           0xfb6c0	                           movzx eax, al	       159	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1	CALL_2
0x310	             0x1d0	                            add eax, edx	       159	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1	CALL_2
0x312	           0x145dc	             add dword [rbp - 0x24], eax	       159	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1	CALL_2
0x315	         0xfb655d6	            movzx edx, byte [rbp - 0x2a]	       152	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x319	         0xfb645d7	            movzx eax, byte [rbp - 0x29]	       152	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x31d	            0x29c2	                            sub edx, eax	       152	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x31f	            0x89d0	                            mov eax, edx	       152	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x321	          0x8945d8	             mov dword [rbp - 0x28], eax	       152	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x324	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       152	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x327	            0x85c0	                           test eax, eax	       152	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x329	     0xf8478ffffff	                            je 0x40002e7	       152	versioncmp.c	ELSE_3	FUNCTION_3	WHILE_1
0x32f	    0x8b0500000000	            mov eax, dword [0x04000375] 	       162	versioncmp.c	ELSE_3	FUNCTION_3	IF_3
0x335	            0x85c0	                           test eax, eax	       162	versioncmp.c	ELSE_3	FUNCTION_3	IF_3
0x337	            0x7558	                           jne 0x40003d1	       162	versioncmp.c	ELSE_3	FUNCTION_3	IF_3
0x339	    0xc70500000000	               mov dword [0x04000383], 1	       164	versioncmp.c	ELSE_3	FUNCTION_3	IF_3
0x343	      0xbf00000000	                              mov edi, 0	       165	versioncmp.c	ELSE_3	FUNCTION_3	IF_3	CALL_3
0x348	      0xe800000000	                          call 0x400038d	       165	versioncmp.c	ELSE_3	FUNCTION_3	IF_3	CALL_3
0x34d	    0x488905000000	            mov qword [0x04000394], rax 	       165	versioncmp.c	ELSE_3	FUNCTION_3	IF_3	CALL_3
0x354	      0xbf00000000	                              mov edi, 0	       166	versioncmp.c	ELSE_3	FUNCTION_3	IF_3	CALL_4
0x359	      0xe800000000	                          call 0x400039e	       166	versioncmp.c	ELSE_3	FUNCTION_3	IF_3	CALL_4
0x35e	        0x488945f0	             mov qword [rbp - 0x10], rax	       166	versioncmp.c	ELSE_3	FUNCTION_3	IF_3	CALL_4
0x362	    0x488b05000000	            mov rax, qword [0x040003a9] 	       167	versioncmp.c	ELSE_3	FUNCTION_3	IF_3	IF_4
0x369	          0x4885c0	                           test rax, rax	       167	versioncmp.c	ELSE_3	FUNCTION_3	IF_3	IF_4
0x36c	            0x7418	                            je 0x40003c6	       167	versioncmp.c	ELSE_3	FUNCTION_3	IF_3	IF_4
0x36e	      0x48837df000	               cmp qword [rbp - 0x10], 0	       168	versioncmp.c	ELSE_3	FUNCTION_3	IF_3	IF_4	IF_5
0x373	            0x741c	                            je 0x40003d1	       168	versioncmp.c	ELSE_3	FUNCTION_3	IF_3	IF_4	IF_5
0x375	      0xbf00000000	                              mov edi, 0	       169	versioncmp.c	ELSE_3	FUNCTION_3	IF_3	IF_4	CALL_5
0x37a	      0xb800000000	                              mov eax, 0	       169	versioncmp.c	ELSE_3	FUNCTION_3	IF_3	IF_4	CALL_5
0x37f	      0xe800000000	                          call 0x40003c4	       169	versioncmp.c	ELSE_3	FUNCTION_3	IF_3	IF_4	CALL_5
0x384	            0xeb0b	                           jmp 0x40003d1	       169	versioncmp.c	ELSE_3	FUNCTION_3	IF_3	IF_4	CALL_5
0x386	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       171	versioncmp.c	ELSE_3	FUNCTION_3	IF_3	ELSE_1
0x38a	    0x488905000000	            mov qword [0x040003d1], rax 	       171	versioncmp.c	ELSE_3	FUNCTION_3	IF_3	ELSE_1
0x391	    0x488b05000000	            mov rax, qword [0x040003d8] 	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x398	          0x4885c0	                           test rax, rax	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x39b	            0x7438	                            je 0x4000415	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x39d	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x3a1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x3a5	          0x4829c2	                            sub rdx, rax	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x3a8	          0x4889d0	                            mov rax, rdx	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x3ab	          0x83e801	                              sub eax, 1	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x3ae	            0x89c7	                            mov edi, eax	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x3b0	        0x488d55d8	                   lea rdx, [rbp - 0x28]	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x3b4	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x3b8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x3bc	          0x4889d1	                            mov rcx, rdx	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x3bf	            0x89fa	                            mov edx, edi	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x3c1	          0x4889c7	                            mov rdi, rax	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x3c4	      0xe8cdfcffff	               call sym.swap_prereleases	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x3c9	            0x85c0	                           test eax, eax	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x3cb	            0x7408	                            je 0x4000415	       173	versioncmp.c	ELSE_3	FUNCTION_3	IF_6	CALL_6
0x3cd	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       175	versioncmp.c	ELSE_3	FUNCTION_3	IF_6
0x3d0	      0xe9d3000000	                           jmp 0x40004e8	       175	versioncmp.c	ELSE_3	FUNCTION_3	IF_6
0x3d5	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x3d8	            0x89d0	                            mov eax, edx	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x3da	             0x1c0	                            add eax, eax	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x3dc	          0x8d0c10	                    lea ecx, [rax + rdx]	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x3df	        0x807dd730	            cmp byte [rbp - 0x29], 0x30 	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x3e3	           0xf94c0	                                 sete al	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x3e6	           0xfb6d0	                           movzx edx, al	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x3e9	         0xfb645d7	            movzx eax, byte [rbp - 0x29]	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x3ed	            0x4898	                                    cdqe	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x3ef	     0xfb680000000	                   movzx eax, byte [rax]	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x3f6	           0xfb6c0	                           movzx eax, al	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x3f9	          0x83e002	                              and eax, 2	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x3fc	            0x85c0	                           test eax, eax	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x3fe	           0xf95c0	                                setne al	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x401	           0xfb6c0	                           movzx eax, al	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x404	             0x1d0	                            add eax, edx	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x406	             0x1c8	                            add eax, ecx	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x408	            0x4898	                                    cdqe	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x40a	     0xfb680000000	                   movzx eax, byte [rax]	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x411	           0xfbec0	                           movsx eax, al	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x414	          0x8945dc	             mov dword [rbp - 0x24], eax	       177	versioncmp.c	ELSE_3	FUNCTION_3	CALL_7
0x417	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       179	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1
0x41a	          0x83f802	                              cmp eax, 2	       179	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1
0x41d	            0x7407	                            je 0x4000466	       179	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1
0x41f	          0x83f803	                              cmp eax, 3	       179	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1
0x422	            0x7433	                            je 0x4000497	       179	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1
0x424	            0xeb7f	                           jmp 0x40004e5	       179	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1
0x426	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       181	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1
0x429	            0xeb7d	                           jmp 0x40004e8	       181	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1
0x42b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       185	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	IF_7	CALL_9
0x42f	        0x488d5001	                      lea rdx, [rax + 1]	       185	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	IF_7	CALL_9
0x433	        0x488955e8	             mov qword [rbp - 0x18], rdx	       185	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	IF_7	CALL_9
0x437	           0xfb600	                   movzx eax, byte [rax]	       185	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	IF_7	CALL_9
0x43a	           0xfb6c0	                           movzx eax, al	       185	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	IF_7	CALL_9
0x43d	            0x4898	                                    cdqe	       185	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	IF_7	CALL_9
0x43f	     0xfb680000000	                   movzx eax, byte [rax]	       185	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	IF_7	CALL_9
0x446	           0xfb6c0	                           movzx eax, al	       185	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	IF_7	CALL_9
0x449	          0x83e002	                              and eax, 2	       185	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	IF_7	CALL_9
0x44c	            0x85c0	                           test eax, eax	       185	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	IF_7	CALL_9
0x44e	            0x7507	                           jne 0x4000497	       185	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	IF_7	CALL_9
0x450	      0xb801000000	                              mov eax, 1	       186	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	IF_7
0x455	            0xeb51	                           jmp 0x40004e8	       186	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	IF_7
0x457	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       184	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	CALL_8
0x45b	        0x488d5001	                      lea rdx, [rax + 1]	       184	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	CALL_8
0x45f	        0x488955e0	             mov qword [rbp - 0x20], rdx	       184	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	CALL_8
0x463	           0xfb600	                   movzx eax, byte [rax]	       184	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	CALL_8
0x466	           0xfb6c0	                           movzx eax, al	       184	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	CALL_8
0x469	            0x4898	                                    cdqe	       184	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	CALL_8
0x46b	     0xfb680000000	                   movzx eax, byte [rax]	       184	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	CALL_8
0x472	           0xfb6c0	                           movzx eax, al	       184	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	CALL_8
0x475	          0x83e002	                              and eax, 2	       184	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	CALL_8
0x478	            0x85c0	                           test eax, eax	       184	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	CALL_8
0x47a	            0x75af	                           jne 0x400046b	       184	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	WHILE_2	CALL_8
0x47c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       188	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	CALL_10
0x480	           0xfb600	                   movzx eax, byte [rax]	       188	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	CALL_10
0x483	           0xfb6c0	                           movzx eax, al	       188	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	CALL_10
0x486	            0x4898	                                    cdqe	       188	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	CALL_10
0x488	     0xfb680000000	                   movzx eax, byte [rax]	       188	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	CALL_10
0x48f	           0xfb6c0	                           movzx eax, al	       188	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	CALL_10
0x492	          0x83e002	                              and eax, 2	       188	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	CALL_10
0x495	            0x85c0	                           test eax, eax	       188	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	CALL_10
0x497	            0x7505	                           jne 0x40004de	       188	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	CALL_10
0x499	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       188	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	CALL_10
0x49c	            0xeb0a	                           jmp 0x40004e8	       188	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	CALL_10
0x49e	      0xb8ffffffff	                     mov eax, 0xffffffff	       188	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	CALL_10
0x4a3	            0xeb03	                           jmp 0x40004e8	       188	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1	CALL_10
0x4a5	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       191	versioncmp.c	ELSE_3	FUNCTION_3	SWITCH_1
0x4a8	        0x488b4df8	                mov rcx, qword [rbp - 8]	       193	versioncmp.c	ELSE_3	FUNCTION_3
0x4ac	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       193	versioncmp.c	ELSE_3	FUNCTION_3
0x4b5	            0x7405	                            je 0x40004fc	       193	versioncmp.c	ELSE_3	FUNCTION_3
0x4b7	      0xe800000000	                          call 0x40004fc	       193	versioncmp.c	ELSE_3	FUNCTION_3
0x4bc	              0xc9	                                   leave	       193	versioncmp.c	ELSE_3	FUNCTION_3
0x4bd	              0xc3	                                     ret	       193	versioncmp.c	ELSE_3	FUNCTION_3
