access_or_die	IF,1:SWITCH,0:functions,0:CALL,4:WHILE,0:FOR,0:ELSE,0:DO,0	33
0x15c3	              0x55	                                push rbp	       621	wrapper.c	FUNCTION_40
0x15c4	          0x4889e5	                            mov rbp, rsp	       621	wrapper.c	FUNCTION_40
0x15c7	        0x4883ec20	                           sub rsp, 0x20	       621	wrapper.c	FUNCTION_40
0x15cb	        0x48897de8	             mov qword [rbp - 0x18], rdi	       621	wrapper.c	FUNCTION_40
0x15cf	          0x8975e4	             mov dword [rbp - 0x1c], esi	       621	wrapper.c	FUNCTION_40
0x15d2	          0x8955e0	             mov dword [rbp - 0x20], edx	       621	wrapper.c	FUNCTION_40
0x15d5	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       622	wrapper.c	FUNCTION_40	CALL_1
0x15d8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       622	wrapper.c	FUNCTION_40	CALL_1
0x15dc	            0x89d6	                            mov esi, edx	       622	wrapper.c	FUNCTION_40	CALL_1
0x15de	          0x4889c7	                            mov rdi, rax	       622	wrapper.c	FUNCTION_40	CALL_1
0x15e1	      0xe800000000	                          call 0x4001626	       622	wrapper.c	FUNCTION_40	CALL_1
0x15e6	          0x8945fc	                mov dword [rbp - 4], eax	       622	wrapper.c	FUNCTION_40	CALL_1
0x15e9	        0x837dfc00	                  cmp dword [rbp - 4], 0	       623	wrapper.c	FUNCTION_40	IF_1	CALL_2
0x15ed	            0x7438	                            je 0x4001667	       623	wrapper.c	FUNCTION_40	IF_1	CALL_2
0x15ef	      0xe800000000	                          call 0x4001634	       623	wrapper.c	FUNCTION_40	IF_1	CALL_2
0x15f4	            0x8b00	                    mov eax, dword [rax]	       623	wrapper.c	FUNCTION_40	IF_1	CALL_2
0x15f6	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       623	wrapper.c	FUNCTION_40	IF_1	CALL_2
0x15f9	            0x89d6	                            mov esi, edx	       623	wrapper.c	FUNCTION_40	IF_1	CALL_2
0x15fb	            0x89c7	                            mov edi, eax	       623	wrapper.c	FUNCTION_40	IF_1	CALL_2
0x15fd	      0xe833ffffff	             call sym.access_error_is_ok	       623	wrapper.c	FUNCTION_40	IF_1	CALL_2
0x1602	            0x85c0	                           test eax, eax	       623	wrapper.c	FUNCTION_40	IF_1	CALL_2
0x1604	            0x7521	                           jne 0x4001667	       623	wrapper.c	FUNCTION_40	IF_1	CALL_2
0x1606	      0xbf00000000	                              mov edi, 0	       624	wrapper.c	FUNCTION_40	CALL_4
0x160b	      0xe832ebffff	                               call sym.	       624	wrapper.c	FUNCTION_40	CALL_4
0x1610	          0x4889c2	                            mov rdx, rax	       624	wrapper.c	FUNCTION_40	CALL_4
0x1613	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       624	wrapper.c	FUNCTION_40	CALL_4
0x1617	          0x4889c6	                            mov rsi, rax	       624	wrapper.c	FUNCTION_40	CALL_4
0x161a	          0x4889d7	                            mov rdi, rdx	       624	wrapper.c	FUNCTION_40	CALL_4
0x161d	      0xb800000000	                              mov eax, 0	       624	wrapper.c	FUNCTION_40	CALL_4
0x1622	      0xe800000000	                          call 0x4001667	       624	wrapper.c	FUNCTION_40	CALL_4
0x1627	          0x8b45fc	                mov eax, dword [rbp - 4]	       625	wrapper.c	FUNCTION_40
0x162a	              0xc9	                                   leave	       626	wrapper.c	FUNCTION_40
0x162b	              0xc3	                                     ret	       626	wrapper.c	FUNCTION_40
unlink_or_warn	IF,0:SWITCH,0:functions,0:CALL,2:WHILE,0:FOR,0:ELSE,0:DO,0	14
0x14a1	              0x55	                                push rbp	       592	wrapper.c	FUNCTION_35
0x14a2	          0x4889e5	                            mov rbp, rsp	       592	wrapper.c	FUNCTION_35
0x14a5	        0x4883ec10	                           sub rsp, 0x10	       592	wrapper.c	FUNCTION_35
0x14a9	        0x48897df8	                mov qword [rbp - 8], rdi	       592	wrapper.c	FUNCTION_35
0x14ad	        0x488b45f8	                mov rax, qword [rbp - 8]	       593	wrapper.c	FUNCTION_35	CALL_2
0x14b1	          0x4889c7	                            mov rdi, rax	       593	wrapper.c	FUNCTION_35	CALL_2
0x14b4	      0xe800000000	                          call 0x40014f9	       593	wrapper.c	FUNCTION_35	CALL_2
0x14b9	            0x89c2	                            mov edx, eax	       593	wrapper.c	FUNCTION_35	CALL_2
0x14bb	        0x488b45f8	                mov rax, qword [rbp - 8]	       593	wrapper.c	FUNCTION_35	CALL_2
0x14bf	          0x4889c6	                            mov rsi, rax	       593	wrapper.c	FUNCTION_35	CALL_2
0x14c2	      0xbf00000000	                              mov edi, 0	       593	wrapper.c	FUNCTION_35	CALL_2
0x14c7	      0xe8e9feffff	            call sym.warn_if_unremovable	       593	wrapper.c	FUNCTION_35	CALL_2
0x14cc	              0xc9	                                   leave	       594	wrapper.c	FUNCTION_35
0x14cd	              0xc3	                                     ret	       594	wrapper.c	FUNCTION_35
do_nothing	IF,0:SWITCH,0:functions,0:CALL,0:WHILE,0:FOR,0:ELSE,0:DO,0	6
0x16e	              0x55	                                push rbp	         8	wrapper.c	FUNCTION_1
0x16f	          0x4889e5	                            mov rbp, rsp	         8	wrapper.c	FUNCTION_1
0x172	        0x48897df8	                mov qword [rbp - 8], rdi	         8	wrapper.c	FUNCTION_1
0x176	              0x90	                                     nop	         9	wrapper.c	FUNCTION_1
0x177	              0x5d	                                 pop rbp	         9	wrapper.c	FUNCTION_1
0x178	              0xc3	                                     ret	         9	wrapper.c	FUNCTION_1
access_error_is_ok	IF,0:SWITCH,0:functions,0:CALL,1:WHILE,0:FOR,0:ELSE,0:DO,0	21
0x1535	              0x55	                                push rbp	       607	wrapper.c	FUNCTION_38
0x1536	          0x4889e5	                            mov rbp, rsp	       607	wrapper.c	FUNCTION_38
0x1539	        0x4883ec08	                              sub rsp, 8	       607	wrapper.c	FUNCTION_38
0x153d	          0x897dfc	                mov dword [rbp - 4], edi	       607	wrapper.c	FUNCTION_38
0x1540	          0x8975f8	                mov dword [rbp - 8], esi	       607	wrapper.c	FUNCTION_38
0x1543	          0x8b45fc	                mov eax, dword [rbp - 4]	       608	wrapper.c	FUNCTION_38	CALL_1
0x1546	            0x89c7	                            mov edi, eax	       608	wrapper.c	FUNCTION_38	CALL_1
0x1548	      0xe8beeaffff	          call sym.is_missing_file_error	       608	wrapper.c	FUNCTION_38	CALL_1
0x154d	            0x85c0	                           test eax, eax	       608	wrapper.c	FUNCTION_38	CALL_1
0x154f	            0x7510	                           jne 0x40015a1	       608	wrapper.c	FUNCTION_38	CALL_1
0x1551	          0x8b45f8	                mov eax, dword [rbp - 8]	       609	wrapper.c	FUNCTION_38
0x1554	          0x83e001	                              and eax, 1	       609	wrapper.c	FUNCTION_38
0x1557	            0x85c0	                           test eax, eax	       608	wrapper.c	FUNCTION_38	CALL_1
0x1559	            0x740d	                            je 0x40015a8	       608	wrapper.c	FUNCTION_38	CALL_1
0x155b	        0x837dfc0d	                cmp dword [rbp - 4], 0xd	       609	wrapper.c	FUNCTION_38
0x155f	            0x7507	                           jne 0x40015a8	       609	wrapper.c	FUNCTION_38
0x1561	      0xb801000000	                              mov eax, 1	       608	wrapper.c	FUNCTION_38	CALL_1
0x1566	            0xeb05	                           jmp 0x40015ad	       608	wrapper.c	FUNCTION_38	CALL_1
0x1568	      0xb800000000	                              mov eax, 0	       608	wrapper.c	FUNCTION_38	CALL_1
0x156d	              0xc9	                                   leave	       610	wrapper.c	FUNCTION_38
0x156e	              0xc3	                                     ret	       610	wrapper.c	FUNCTION_38
xstrdup	IF,2:SWITCH,0:functions,0:CALL,5:WHILE,0:FOR,0:ELSE,0:DO,0	32
0x254	              0x55	                                push rbp	        43	wrapper.c	FUNCTION_4
0x255	          0x4889e5	                            mov rbp, rsp	        43	wrapper.c	FUNCTION_4
0x258	              0x53	                                push rbx	        43	wrapper.c	FUNCTION_4
0x259	        0x4883ec28	                           sub rsp, 0x28	        43	wrapper.c	FUNCTION_4
0x25d	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        43	wrapper.c	FUNCTION_4
0x261	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        44	wrapper.c	FUNCTION_4	CALL_1
0x265	          0x4889c7	                            mov rdi, rax	        44	wrapper.c	FUNCTION_4	CALL_1
0x268	      0xe800000000	                          call 0x40002ad	        44	wrapper.c	FUNCTION_4	CALL_1
0x26d	        0x488945e8	             mov qword [rbp - 0x18], rax	        44	wrapper.c	FUNCTION_4	CALL_1
0x271	      0x48837de800	               cmp qword [rbp - 0x18], 0	        45	wrapper.c	FUNCTION_4	IF_1
0x276	            0x7542	                           jne 0x40002fa	        45	wrapper.c	FUNCTION_4	IF_1
0x278	    0x488b1d000000	            mov rbx, qword [0x040002bf] 	        46	wrapper.c	FUNCTION_4	IF_1	CALL_3
0x27f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        46	wrapper.c	FUNCTION_4	IF_1	CALL_3
0x283	          0x4889c7	                            mov rdi, rax	        46	wrapper.c	FUNCTION_4	IF_1	CALL_3
0x286	      0xe800000000	                          call 0x40002cb	        46	wrapper.c	FUNCTION_4	IF_1	CALL_3
0x28b	        0x4883c001	                              add rax, 1	        46	wrapper.c	FUNCTION_4	IF_1	CALL_3
0x28f	          0x4889c7	                            mov rdi, rax	        46	wrapper.c	FUNCTION_4	IF_1	CALL_3
0x292	            0xffd3	                                call rbx	        46	wrapper.c	FUNCTION_4	IF_1	CALL_3
0x294	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        47	wrapper.c	FUNCTION_4	IF_1	CALL_4
0x298	          0x4889c7	                            mov rdi, rax	        47	wrapper.c	FUNCTION_4	IF_1	CALL_4
0x29b	      0xe800000000	                          call 0x40002e0	        47	wrapper.c	FUNCTION_4	IF_1	CALL_4
0x2a0	        0x488945e8	             mov qword [rbp - 0x18], rax	        47	wrapper.c	FUNCTION_4	IF_1	CALL_4
0x2a4	      0x48837de800	               cmp qword [rbp - 0x18], 0	        48	wrapper.c	FUNCTION_4	IF_1	IF_2
0x2a9	            0x750f	                           jne 0x40002fa	        48	wrapper.c	FUNCTION_4	IF_1	IF_2
0x2ab	      0xbf00000000	                              mov edi, 0	        49	wrapper.c	FUNCTION_4	IF_1	CALL_5
0x2b0	      0xb800000000	                              mov eax, 0	        49	wrapper.c	FUNCTION_4	IF_1	CALL_5
0x2b5	      0xe800000000	                          call 0x40002fa	        49	wrapper.c	FUNCTION_4	IF_1	CALL_5
0x2ba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        51	wrapper.c	FUNCTION_4
0x2be	        0x4883c428	                           add rsp, 0x28	        52	wrapper.c	FUNCTION_4
0x2c2	              0x5b	                                 pop rbx	        52	wrapper.c	FUNCTION_4
0x2c3	              0x5d	                                 pop rbp	        52	wrapper.c	FUNCTION_4
0x2c4	              0xc3	                                     ret	        52	wrapper.c	FUNCTION_4
xmkstemp	IF,2:SWITCH,0:functions,0:CALL,6:WHILE,0:FOR,0:ELSE,0:DO,0	56
0xe9d	              0x55	                                push rbp	       449	wrapper.c	FUNCTION_29
0xe9e	          0x4889e5	                            mov rbp, rsp	       449	wrapper.c	FUNCTION_29
0xea1	              0x53	                                push rbx	       449	wrapper.c	FUNCTION_29
0xea2	    0x4881ec381000	                         sub rsp, 0x1038	       449	wrapper.c	FUNCTION_29
0xea9	    0x4889bdc8efff	           mov qword [rbp - 0x1038], rdi	       449	wrapper.c	FUNCTION_29
0xeb0	    0x64488b042528	                mov rax, qword fs:[0x28]	       449	wrapper.c	FUNCTION_29
0xeb9	        0x488945e8	             mov qword [rbp - 0x18], rax	       449	wrapper.c	FUNCTION_29
0xebd	            0x31c0	                            xor eax, eax	       449	wrapper.c	FUNCTION_29
0xebf	    0x488b8dc8efff	           mov rcx, qword [rbp - 0x1038]	       452	wrapper.c	FUNCTION_29	CALL_1
0xec6	    0x488d85e0efff	                 lea rax, [rbp - 0x1020]	       452	wrapper.c	FUNCTION_29	CALL_1
0xecd	      0xba00100000	                         mov edx, 0x1000	       452	wrapper.c	FUNCTION_29	CALL_1
0xed2	          0x4889ce	                            mov rsi, rcx	       452	wrapper.c	FUNCTION_29	CALL_1
0xed5	          0x4889c7	                            mov rdi, rax	       452	wrapper.c	FUNCTION_29	CALL_1
0xed8	      0xe800000000	                          call 0x4000f1d	       452	wrapper.c	FUNCTION_29	CALL_1
0xedd	    0x488b85c8efff	           mov rax, qword [rbp - 0x1038]	       454	wrapper.c	FUNCTION_29	CALL_2
0xee4	          0x4889c7	                            mov rdi, rax	       454	wrapper.c	FUNCTION_29	CALL_2
0xee7	      0xe800000000	                          call 0x4000f2c	       454	wrapper.c	FUNCTION_29	CALL_2
0xeec	    0x8985d0efffff	           mov dword [rbp - 0x1030], eax	       454	wrapper.c	FUNCTION_29	CALL_2
0xef2	    0x83bdd0efffff	             cmp dword [rbp - 0x1030], 0	       455	wrapper.c	FUNCTION_29	IF_1
0xef9	     0xf8980000000	                           jns 0x4000fbf	       455	wrapper.c	FUNCTION_29	IF_1
0xeff	      0xe800000000	                          call 0x4000f44	       456	wrapper.c	FUNCTION_29	IF_1
0xf04	            0x8b00	                    mov eax, dword [rax]	       456	wrapper.c	FUNCTION_29	IF_1
0xf06	    0x8985d4efffff	           mov dword [rbp - 0x102c], eax	       456	wrapper.c	FUNCTION_29	IF_1
0xf0c	    0x488b85c8efff	           mov rax, qword [rbp - 0x1038]	       459	wrapper.c	FUNCTION_29	IF_1	IF_2	CALL_4
0xf13	          0x4889c7	                            mov rdi, rax	       459	wrapper.c	FUNCTION_29	IF_1	IF_2	CALL_4
0xf16	      0xe800000000	                          call 0x4000f5b	       459	wrapper.c	FUNCTION_29	IF_1	IF_2	CALL_4
0xf1b	          0x4889c3	                            mov rbx, rax	       459	wrapper.c	FUNCTION_29	IF_1	IF_2	CALL_4
0xf1e	    0x488d85e0efff	                 lea rax, [rbp - 0x1020]	       459	wrapper.c	FUNCTION_29	IF_1	IF_2	CALL_4
0xf25	          0x4889c7	                            mov rdi, rax	       459	wrapper.c	FUNCTION_29	IF_1	IF_2	CALL_4
0xf28	      0xe800000000	                          call 0x4000f6d	       459	wrapper.c	FUNCTION_29	IF_1	IF_2	CALL_4
0xf2d	          0x4839c3	                            cmp rbx, rax	       459	wrapper.c	FUNCTION_29	IF_1	IF_2	CALL_4
0xf30	            0x740e	                            je 0x4000f80	       459	wrapper.c	FUNCTION_29	IF_1	IF_2	CALL_4
0xf32	    0x488d85e0efff	                 lea rax, [rbp - 0x1020]	       460	wrapper.c	FUNCTION_29	IF_1	IF_2
0xf39	    0x488985c8efff	           mov qword [rbp - 0x1038], rax	       460	wrapper.c	FUNCTION_29	IF_1	IF_2
0xf40	    0x488b85c8efff	           mov rax, qword [rbp - 0x1038]	       462	wrapper.c	FUNCTION_29	IF_1	CALL_5
0xf47	          0x4889c7	                            mov rdi, rax	       462	wrapper.c	FUNCTION_29	IF_1	CALL_5
0xf4a	      0xe800000000	                          call 0x4000f8f	       462	wrapper.c	FUNCTION_29	IF_1	CALL_5
0xf4f	    0x488985d8efff	           mov qword [rbp - 0x1028], rax	       462	wrapper.c	FUNCTION_29	IF_1	CALL_5
0xf56	      0xe800000000	                          call 0x4000f9b	       463	wrapper.c	FUNCTION_29	IF_1
0xf5b	          0x4889c2	                            mov rdx, rax	       463	wrapper.c	FUNCTION_29	IF_1
0xf5e	    0x8b85d4efffff	           mov eax, dword [rbp - 0x102c]	       463	wrapper.c	FUNCTION_29	IF_1
0xf64	            0x8902	                    mov dword [rdx], eax	       463	wrapper.c	FUNCTION_29	IF_1
0xf66	    0x488b85d8efff	           mov rax, qword [rbp - 0x1028]	       464	wrapper.c	FUNCTION_29	IF_1	CALL_6
0xf6d	          0x4889c6	                            mov rsi, rax	       464	wrapper.c	FUNCTION_29	IF_1	CALL_6
0xf70	      0xbf00000000	                              mov edi, 0	       464	wrapper.c	FUNCTION_29	IF_1	CALL_6
0xf75	      0xb800000000	                              mov eax, 0	       464	wrapper.c	FUNCTION_29	IF_1	CALL_6
0xf7a	      0xe800000000	                          call 0x4000fbf	       464	wrapper.c	FUNCTION_29	IF_1	CALL_6
0xf7f	    0x8b85d0efffff	           mov eax, dword [rbp - 0x1030]	       467	wrapper.c	FUNCTION_29
0xf85	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       468	wrapper.c	FUNCTION_29
0xf89	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       468	wrapper.c	FUNCTION_29
0xf92	            0x7405	                            je 0x4000fd9	       468	wrapper.c	FUNCTION_29
0xf94	      0xe800000000	                          call 0x4000fd9	       468	wrapper.c	FUNCTION_29
0xf99	    0x4881c4381000	                         add rsp, 0x1038	       468	wrapper.c	FUNCTION_29
0xfa0	              0x5b	                                 pop rbx	       468	wrapper.c	FUNCTION_29
0xfa1	              0x5d	                                 pop rbp	       468	wrapper.c	FUNCTION_29
0xfa2	              0xc3	                                     ret	       468	wrapper.c	FUNCTION_29
fopen_for_writing	IF,2:SWITCH,0:functions,0:CALL,3:WHILE,0:FOR,0:ELSE,1:DO,0	31
0xd7c	              0x55	                                push rbp	       410	wrapper.c	FUNCTION_25
0xd7d	          0x4889e5	                            mov rbp, rsp	       410	wrapper.c	FUNCTION_25
0xd80	        0x4883ec20	                           sub rsp, 0x20	       410	wrapper.c	FUNCTION_25
0xd84	        0x48897de8	             mov qword [rbp - 0x18], rdi	       410	wrapper.c	FUNCTION_25
0xd88	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       411	wrapper.c	FUNCTION_25	CALL_1
0xd8c	      0xbe00000000	                              mov esi, 0	       411	wrapper.c	FUNCTION_25	CALL_1
0xd91	          0x4889c7	                            mov rdi, rax	       411	wrapper.c	FUNCTION_25	CALL_1
0xd94	      0xe800000000	                          call 0x4000dd9	       411	wrapper.c	FUNCTION_25	CALL_1
0xd99	        0x488945f8	                mov qword [rbp - 8], rax	       411	wrapper.c	FUNCTION_25	CALL_1
0xd9d	      0x48837df800	                  cmp qword [rbp - 8], 0	       413	wrapper.c	FUNCTION_25	IF_1
0xda2	            0x753e	                           jne 0x4000e22	       413	wrapper.c	FUNCTION_25	IF_1
0xda4	      0xe800000000	                          call 0x4000de9	       413	wrapper.c	FUNCTION_25	IF_1
0xda9	            0x8b00	                    mov eax, dword [rax]	       413	wrapper.c	FUNCTION_25	IF_1
0xdab	          0x83f801	                              cmp eax, 1	       413	wrapper.c	FUNCTION_25	IF_1
0xdae	            0x7532	                           jne 0x4000e22	       413	wrapper.c	FUNCTION_25	IF_1
0xdb0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       414	wrapper.c	FUNCTION_25	IF_1	IF_2	CALL_2
0xdb4	          0x4889c7	                            mov rdi, rax	       414	wrapper.c	FUNCTION_25	IF_1	IF_2	CALL_2
0xdb7	      0xe800000000	                          call 0x4000dfc	       414	wrapper.c	FUNCTION_25	IF_1	IF_2	CALL_2
0xdbc	            0x85c0	                           test eax, eax	       414	wrapper.c	FUNCTION_25	IF_1	IF_2	CALL_2
0xdbe	            0x7517	                           jne 0x4000e17	       414	wrapper.c	FUNCTION_25	IF_1	IF_2	CALL_2
0xdc0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       415	wrapper.c	FUNCTION_25	IF_1	CALL_3
0xdc4	      0xbe00000000	                              mov esi, 0	       415	wrapper.c	FUNCTION_25	IF_1	CALL_3
0xdc9	          0x4889c7	                            mov rdi, rax	       415	wrapper.c	FUNCTION_25	IF_1	CALL_3
0xdcc	      0xe800000000	                          call 0x4000e11	       415	wrapper.c	FUNCTION_25	IF_1	CALL_3
0xdd1	        0x488945f8	                mov qword [rbp - 8], rax	       415	wrapper.c	FUNCTION_25	IF_1	CALL_3
0xdd5	            0xeb0b	                           jmp 0x4000e22	       415	wrapper.c	FUNCTION_25	IF_1	CALL_3
0xdd7	      0xe800000000	                          call 0x4000e1c	       417	wrapper.c	FUNCTION_25	IF_1	ELSE_1
0xddc	    0xc70001000000	                      mov dword [rax], 1	       417	wrapper.c	FUNCTION_25	IF_1	ELSE_1
0xde2	        0x488b45f8	                mov rax, qword [rbp - 8]	       419	wrapper.c	FUNCTION_25	ELSE_1
0xde6	              0xc9	                                   leave	       420	wrapper.c	FUNCTION_25	ELSE_1
0xde7	              0xc3	                                     ret	       420	wrapper.c	FUNCTION_25	ELSE_1
write_file	IF,0:SWITCH,0:functions,0:CALL,6:WHILE,0:FOR,0:ELSE,0:DO,0	56
0x1861	              0x55	                                push rbp	       662	wrapper.c	FUNCTION_44
0x1862	          0x4889e5	                            mov rbp, rsp	       662	wrapper.c	FUNCTION_44
0x1865	    0x4881ec000100	                          sub rsp, 0x100	       662	wrapper.c	FUNCTION_44
0x186c	    0x4889bd08ffff	             mov qword [rbp - 0xf8], rdi	       662	wrapper.c	FUNCTION_44
0x1873	    0x4889b500ffff	            mov qword [rbp - 0x100], rsi	       662	wrapper.c	FUNCTION_44
0x187a	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       662	wrapper.c	FUNCTION_44
0x1881	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       662	wrapper.c	FUNCTION_44
0x1888	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       662	wrapper.c	FUNCTION_44
0x188f	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       662	wrapper.c	FUNCTION_44
0x1896	            0x84c0	                             test al, al	       662	wrapper.c	FUNCTION_44
0x1898	            0x7420	                            je 0x40018fa	       662	wrapper.c	FUNCTION_44
0x189a	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       662	wrapper.c	FUNCTION_44
0x189e	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       662	wrapper.c	FUNCTION_44
0x18a2	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       662	wrapper.c	FUNCTION_44
0x18a6	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       662	wrapper.c	FUNCTION_44
0x18aa	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       662	wrapper.c	FUNCTION_44
0x18ae	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       662	wrapper.c	FUNCTION_44
0x18b2	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       662	wrapper.c	FUNCTION_44
0x18b6	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       662	wrapper.c	FUNCTION_44
0x18ba	    0x64488b042528	                mov rax, qword fs:[0x28]	       662	wrapper.c	FUNCTION_44
0x18c3	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       662	wrapper.c	FUNCTION_44
0x18ca	            0x31c0	                            xor eax, eax	       662	wrapper.c	FUNCTION_44
0x18cc	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	       664	wrapper.c	FUNCTION_44
0x18d7	    0x48c78518ffff	               mov qword [rbp - 0xe8], 0	       664	wrapper.c	FUNCTION_44
0x18e2	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	       664	wrapper.c	FUNCTION_44
0x18ed	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	       666	wrapper.c	FUNCTION_44	CALL_1
0x18f7	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       666	wrapper.c	FUNCTION_44	CALL_1
0x1901	        0x488d4510	                   lea rax, [rbp + 0x10]	       666	wrapper.c	FUNCTION_44	CALL_1
0x1905	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       666	wrapper.c	FUNCTION_44	CALL_1
0x190c	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       666	wrapper.c	FUNCTION_44	CALL_1
0x1913	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       666	wrapper.c	FUNCTION_44	CALL_1
0x191a	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	       667	wrapper.c	FUNCTION_44	CALL_2
0x1921	    0x488b8d00ffff	            mov rcx, qword [rbp - 0x100]	       667	wrapper.c	FUNCTION_44	CALL_2
0x1928	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	       667	wrapper.c	FUNCTION_44	CALL_2
0x192f	          0x4889ce	                            mov rsi, rcx	       667	wrapper.c	FUNCTION_44	CALL_2
0x1932	          0x4889c7	                            mov rdi, rax	       667	wrapper.c	FUNCTION_44	CALL_2
0x1935	      0xe800000000	                          call 0x400197a	       667	wrapper.c	FUNCTION_44	CALL_2
0x193a	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	       670	wrapper.c	FUNCTION_44	CALL_4
0x1941	          0x4889c7	                            mov rdi, rax	       670	wrapper.c	FUNCTION_44	CALL_4
0x1944	      0xe8d9e7ffff	           call sym.strbuf_complete_line	       670	wrapper.c	FUNCTION_44	CALL_4
0x1949	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       672	wrapper.c	FUNCTION_44	CALL_5
0x1950	    0x488b8d20ffff	             mov rcx, qword [rbp - 0xe0]	       672	wrapper.c	FUNCTION_44	CALL_5
0x1957	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       672	wrapper.c	FUNCTION_44	CALL_5
0x195e	          0x4889ce	                            mov rsi, rcx	       672	wrapper.c	FUNCTION_44	CALL_5
0x1961	          0x4889c7	                            mov rdi, rax	       672	wrapper.c	FUNCTION_44	CALL_5
0x1964	      0xe800000000	                          call 0x40019a9	       672	wrapper.c	FUNCTION_44	CALL_5
0x1969	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	       673	wrapper.c	FUNCTION_44	CALL_6
0x1970	          0x4889c7	                            mov rdi, rax	       673	wrapper.c	FUNCTION_44	CALL_6
0x1973	      0xe800000000	                          call 0x40019b8	       673	wrapper.c	FUNCTION_44	CALL_6
0x1978	              0x90	                                     nop	       674	wrapper.c	FUNCTION_44
0x1979	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       674	wrapper.c	FUNCTION_44
0x1980	    0x644833042528	                xor rax, qword fs:[0x28]	       674	wrapper.c	FUNCTION_44
0x1989	            0x7405	                            je 0x40019d0	       674	wrapper.c	FUNCTION_44
0x198b	      0xe800000000	                          call 0x40019d0	       674	wrapper.c	FUNCTION_44
0x1990	              0xc9	                                   leave	       674	wrapper.c	FUNCTION_44
0x1991	              0xc3	                                     ret	       674	wrapper.c	FUNCTION_44
strbuf_complete_line	IF,0:SWITCH,0:functions,0:CALL,1:WHILE,0:FOR,0:ELSE,0:DO,0	11
0x122	              0x55	                                push rbp	       600	strbuf.h	FUNCTION_84
0x123	          0x4889e5	                            mov rbp, rsp	       600	strbuf.h	FUNCTION_84
0x126	        0x4883ec10	                           sub rsp, 0x10	       600	strbuf.h	FUNCTION_84
0x12a	        0x48897df8	                mov qword [rbp - 8], rdi	       600	strbuf.h	FUNCTION_84
0x12e	        0x488b45f8	                mov rax, qword [rbp - 8]	       601	strbuf.h	FUNCTION_84	CALL_1
0x132	      0xbe0a000000	                            mov esi, 0xa	       601	strbuf.h	FUNCTION_84	CALL_1
0x137	          0x4889c7	                            mov rdi, rax	       601	strbuf.h	FUNCTION_84	CALL_1
0x13a	      0xe891ffffff	                call sym.strbuf_complete	       601	strbuf.h	FUNCTION_84	CALL_1
0x13f	              0x90	                                     nop	       602	strbuf.h	FUNCTION_84
0x140	              0xc9	                                   leave	       602	strbuf.h	FUNCTION_84
0x141	              0xc3	                                     ret	       602	strbuf.h	FUNCTION_84
xstrndup	IF,0:SWITCH,0:functions,0:CALL,2:WHILE,0:FOR,0:ELSE,0:DO,0	25
0x4bc	              0x55	                                push rbp	       128	wrapper.c	FUNCTION_11
0x4bd	          0x4889e5	                            mov rbp, rsp	       128	wrapper.c	FUNCTION_11
0x4c0	        0x4883ec20	                           sub rsp, 0x20	       128	wrapper.c	FUNCTION_11
0x4c4	        0x48897de8	             mov qword [rbp - 0x18], rdi	       128	wrapper.c	FUNCTION_11
0x4c8	        0x488975e0	             mov qword [rbp - 0x20], rsi	       128	wrapper.c	FUNCTION_11
0x4cc	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       129	wrapper.c	FUNCTION_11	CALL_1
0x4d0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       129	wrapper.c	FUNCTION_11	CALL_1
0x4d4	      0xbe00000000	                              mov esi, 0	       129	wrapper.c	FUNCTION_11	CALL_1
0x4d9	          0x4889c7	                            mov rdi, rax	       129	wrapper.c	FUNCTION_11	CALL_1
0x4dc	      0xe800000000	                          call 0x4000521	       129	wrapper.c	FUNCTION_11	CALL_1
0x4e1	        0x488945f8	                mov qword [rbp - 8], rax	       129	wrapper.c	FUNCTION_11	CALL_1
0x4e5	      0x48837df800	                  cmp qword [rbp - 8], 0	       130	wrapper.c	FUNCTION_11	CALL_2
0x4ea	            0x7410	                            je 0x400053c	       130	wrapper.c	FUNCTION_11	CALL_2
0x4ec	        0x488b55f8	                mov rdx, qword [rbp - 8]	       130	wrapper.c	FUNCTION_11	CALL_2
0x4f0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       130	wrapper.c	FUNCTION_11	CALL_2
0x4f4	          0x4829c2	                            sub rdx, rax	       130	wrapper.c	FUNCTION_11	CALL_2
0x4f7	          0x4889d0	                            mov rax, rdx	       130	wrapper.c	FUNCTION_11	CALL_2
0x4fa	            0xeb04	                           jmp 0x4000540	       130	wrapper.c	FUNCTION_11	CALL_2
0x4fc	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       130	wrapper.c	FUNCTION_11	CALL_2
0x500	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       130	wrapper.c	FUNCTION_11	CALL_2
0x504	          0x4889c6	                            mov rsi, rax	       130	wrapper.c	FUNCTION_11	CALL_2
0x507	          0x4889d7	                            mov rdi, rdx	       130	wrapper.c	FUNCTION_11	CALL_2
0x50a	      0xe800000000	                          call 0x400054f	       130	wrapper.c	FUNCTION_11	CALL_2
0x50f	              0xc9	                                   leave	       131	wrapper.c	FUNCTION_11
0x510	              0xc3	                                     ret	       131	wrapper.c	FUNCTION_11
warn_if_unremovable	IF,1:SWITCH,0:functions,0:CALL,1:WHILE,0:FOR,0:ELSE,0:DO,0	30
0x13b5	              0x55	                                push rbp	       567	wrapper.c	FUNCTION_33
0x13b6	          0x4889e5	                            mov rbp, rsp	       567	wrapper.c	FUNCTION_33
0x13b9	        0x4883ec30	                           sub rsp, 0x30	       567	wrapper.c	FUNCTION_33
0x13bd	        0x48897de8	             mov qword [rbp - 0x18], rdi	       567	wrapper.c	FUNCTION_33
0x13c1	        0x488975e0	             mov qword [rbp - 0x20], rsi	       567	wrapper.c	FUNCTION_33
0x13c5	          0x8955dc	             mov dword [rbp - 0x24], edx	       567	wrapper.c	FUNCTION_33
0x13c8	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       569	wrapper.c	FUNCTION_33	IF_1
0x13cc	            0x740c	                            je 0x400141a	       569	wrapper.c	FUNCTION_33	IF_1
0x13ce	      0xe800000000	                          call 0x4001413	       569	wrapper.c	FUNCTION_33	IF_1
0x13d3	            0x8b00	                    mov eax, dword [rax]	       569	wrapper.c	FUNCTION_33	IF_1
0x13d5	          0x83f802	                              cmp eax, 2	       569	wrapper.c	FUNCTION_33	IF_1
0x13d8	            0x7507	                           jne 0x4001421	       569	wrapper.c	FUNCTION_33	IF_1
0x13da	      0xb800000000	                              mov eax, 0	       570	wrapper.c	FUNCTION_33	IF_1
0x13df	            0xeb34	                           jmp 0x4001455	       570	wrapper.c	FUNCTION_33	IF_1
0x13e1	      0xe800000000	                          call 0x4001426	       571	wrapper.c	FUNCTION_33
0x13e6	            0x8b00	                    mov eax, dword [rax]	       571	wrapper.c	FUNCTION_33
0x13e8	          0x8945fc	                mov dword [rbp - 4], eax	       571	wrapper.c	FUNCTION_33
0x13eb	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       572	wrapper.c	FUNCTION_33	CALL_1
0x13ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       572	wrapper.c	FUNCTION_33	CALL_1
0x13f3	          0x4889c6	                            mov rsi, rax	       572	wrapper.c	FUNCTION_33	CALL_1
0x13f6	      0xbf00000000	                              mov edi, 0	       572	wrapper.c	FUNCTION_33	CALL_1
0x13fb	      0xb800000000	                              mov eax, 0	       572	wrapper.c	FUNCTION_33	CALL_1
0x1400	      0xe800000000	                          call 0x4001445	       572	wrapper.c	FUNCTION_33	CALL_1
0x1405	      0xe800000000	                          call 0x400144a	       573	wrapper.c	FUNCTION_33
0x140a	          0x4889c2	                            mov rdx, rax	       573	wrapper.c	FUNCTION_33
0x140d	          0x8b45fc	                mov eax, dword [rbp - 4]	       573	wrapper.c	FUNCTION_33
0x1410	            0x8902	                    mov dword [rdx], eax	       573	wrapper.c	FUNCTION_33
0x1412	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       574	wrapper.c	FUNCTION_33
0x1415	              0xc9	                                   leave	       575	wrapper.c	FUNCTION_33
0x1416	              0xc3	                                     ret	       575	wrapper.c	FUNCTION_33
fopen_or_warn	IF,1:SWITCH,0:functions,0:CALL,2:WHILE,0:FOR,0:ELSE,0:DO,0	21
0xe56	              0x55	                                push rbp	       438	wrapper.c	FUNCTION_28
0xe57	          0x4889e5	                            mov rbp, rsp	       438	wrapper.c	FUNCTION_28
0xe5a	        0x4883ec20	                           sub rsp, 0x20	       438	wrapper.c	FUNCTION_28
0xe5e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       438	wrapper.c	FUNCTION_28
0xe62	        0x488975e0	             mov qword [rbp - 0x20], rsi	       438	wrapper.c	FUNCTION_28
0xe66	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       439	wrapper.c	FUNCTION_28	CALL_1
0xe6a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       439	wrapper.c	FUNCTION_28	CALL_1
0xe6e	          0x4889d6	                            mov rsi, rdx	       439	wrapper.c	FUNCTION_28	CALL_1
0xe71	          0x4889c7	                            mov rdi, rax	       439	wrapper.c	FUNCTION_28	CALL_1
0xe74	      0xe800000000	                          call 0x4000eb9	       439	wrapper.c	FUNCTION_28	CALL_1
0xe79	        0x488945f8	                mov qword [rbp - 8], rax	       439	wrapper.c	FUNCTION_28	CALL_1
0xe7d	      0x48837df800	                  cmp qword [rbp - 8], 0	       441	wrapper.c	FUNCTION_28	IF_1
0xe82	            0x7406	                            je 0x4000eca	       441	wrapper.c	FUNCTION_28	IF_1
0xe84	        0x488b45f8	                mov rax, qword [rbp - 8]	       442	wrapper.c	FUNCTION_28	IF_1
0xe88	            0xeb11	                           jmp 0x4000edb	       442	wrapper.c	FUNCTION_28	IF_1
0xe8a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       444	wrapper.c	FUNCTION_28	CALL_2
0xe8e	          0x4889c7	                            mov rdi, rax	       444	wrapper.c	FUNCTION_28	CALL_2
0xe91	      0xe800000000	                          call 0x4000ed6	       444	wrapper.c	FUNCTION_28	CALL_2
0xe96	      0xb800000000	                              mov eax, 0	       445	wrapper.c	FUNCTION_28
0xe9b	              0xc9	                                   leave	       446	wrapper.c	FUNCTION_28
0xe9c	              0xc3	                                     ret	       446	wrapper.c	FUNCTION_28
xrealloc	IF,4:SWITCH,0:functions,0:CALL,7:WHILE,0:FOR,0:ELSE,0:DO,0	53
0x511	              0x55	                                push rbp	       134	wrapper.c	FUNCTION_12
0x512	          0x4889e5	                            mov rbp, rsp	       134	wrapper.c	FUNCTION_12
0x515	        0x4883ec20	                           sub rsp, 0x20	       134	wrapper.c	FUNCTION_12
0x519	        0x48897de8	             mov qword [rbp - 0x18], rdi	       134	wrapper.c	FUNCTION_12
0x51d	        0x488975e0	             mov qword [rbp - 0x20], rsi	       134	wrapper.c	FUNCTION_12
0x521	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       137	wrapper.c	FUNCTION_12	CALL_1
0x525	      0xbe00000000	                              mov esi, 0	       137	wrapper.c	FUNCTION_12	CALL_1
0x52a	          0x4889c7	                            mov rdi, rax	       137	wrapper.c	FUNCTION_12	CALL_1
0x52d	      0xe847fcffff	             call sym.memory_limit_check	       137	wrapper.c	FUNCTION_12	CALL_1
0x532	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       138	wrapper.c	FUNCTION_12	CALL_2
0x536	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       138	wrapper.c	FUNCTION_12	CALL_2
0x53a	          0x4889d6	                            mov rsi, rdx	       138	wrapper.c	FUNCTION_12	CALL_2
0x53d	          0x4889c7	                            mov rdi, rax	       138	wrapper.c	FUNCTION_12	CALL_2
0x540	      0xe800000000	                          call 0x4000585	       138	wrapper.c	FUNCTION_12	CALL_2
0x545	        0x488945f8	                mov qword [rbp - 8], rax	       138	wrapper.c	FUNCTION_12	CALL_2
0x549	      0x48837df800	                  cmp qword [rbp - 8], 0	       139	wrapper.c	FUNCTION_12	IF_1
0x54e	            0x751c	                           jne 0x40005ac	       139	wrapper.c	FUNCTION_12	IF_1
0x550	      0x48837de000	               cmp qword [rbp - 0x20], 0	       139	wrapper.c	FUNCTION_12	IF_1
0x555	            0x7515	                           jne 0x40005ac	       139	wrapper.c	FUNCTION_12	IF_1
0x557	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       140	wrapper.c	FUNCTION_12	CALL_3
0x55b	      0xbe01000000	                              mov esi, 1	       140	wrapper.c	FUNCTION_12	CALL_3
0x560	          0x4889c7	                            mov rdi, rax	       140	wrapper.c	FUNCTION_12	CALL_3
0x563	      0xe800000000	                          call 0x40005a8	       140	wrapper.c	FUNCTION_12	CALL_3
0x568	        0x488945f8	                mov qword [rbp - 8], rax	       140	wrapper.c	FUNCTION_12	CALL_3
0x56c	      0x48837df800	                  cmp qword [rbp - 8], 0	       141	wrapper.c	FUNCTION_12	IF_2
0x571	            0x7560	                           jne 0x4000613	       141	wrapper.c	FUNCTION_12	IF_2
0x573	    0x488b05000000	            mov rax, qword [0x040005ba] 	       142	wrapper.c	FUNCTION_12	IF_2	CALL_4
0x57a	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       142	wrapper.c	FUNCTION_12	IF_2	CALL_4
0x57e	          0x4889d7	                            mov rdi, rdx	       142	wrapper.c	FUNCTION_12	IF_2	CALL_4
0x581	            0xffd0	                                call rax	       142	wrapper.c	FUNCTION_12	IF_2	CALL_4
0x583	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       143	wrapper.c	FUNCTION_12	IF_2	CALL_5
0x587	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       143	wrapper.c	FUNCTION_12	IF_2	CALL_5
0x58b	          0x4889d6	                            mov rsi, rdx	       143	wrapper.c	FUNCTION_12	IF_2	CALL_5
0x58e	          0x4889c7	                            mov rdi, rax	       143	wrapper.c	FUNCTION_12	IF_2	CALL_5
0x591	      0xe800000000	                          call 0x40005d6	       143	wrapper.c	FUNCTION_12	IF_2	CALL_5
0x596	        0x488945f8	                mov qword [rbp - 8], rax	       143	wrapper.c	FUNCTION_12	IF_2	CALL_5
0x59a	      0x48837df800	                  cmp qword [rbp - 8], 0	       144	wrapper.c	FUNCTION_12	IF_2	IF_3
0x59f	            0x751c	                           jne 0x40005fd	       144	wrapper.c	FUNCTION_12	IF_2	IF_3
0x5a1	      0x48837de000	               cmp qword [rbp - 0x20], 0	       144	wrapper.c	FUNCTION_12	IF_2	IF_3
0x5a6	            0x7515	                           jne 0x40005fd	       144	wrapper.c	FUNCTION_12	IF_2	IF_3
0x5a8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       145	wrapper.c	FUNCTION_12	IF_2	CALL_6
0x5ac	      0xbe01000000	                              mov esi, 1	       145	wrapper.c	FUNCTION_12	IF_2	CALL_6
0x5b1	          0x4889c7	                            mov rdi, rax	       145	wrapper.c	FUNCTION_12	IF_2	CALL_6
0x5b4	      0xe800000000	                          call 0x40005f9	       145	wrapper.c	FUNCTION_12	IF_2	CALL_6
0x5b9	        0x488945f8	                mov qword [rbp - 8], rax	       145	wrapper.c	FUNCTION_12	IF_2	CALL_6
0x5bd	      0x48837df800	                  cmp qword [rbp - 8], 0	       146	wrapper.c	FUNCTION_12	IF_2	IF_4
0x5c2	            0x750f	                           jne 0x4000613	       146	wrapper.c	FUNCTION_12	IF_2	IF_4
0x5c4	      0xbf00000000	                              mov edi, 0	       147	wrapper.c	FUNCTION_12	IF_2	CALL_7
0x5c9	      0xb800000000	                              mov eax, 0	       147	wrapper.c	FUNCTION_12	IF_2	CALL_7
0x5ce	      0xe800000000	                          call 0x4000613	       147	wrapper.c	FUNCTION_12	IF_2	CALL_7
0x5d3	        0x488b45f8	                mov rax, qword [rbp - 8]	       149	wrapper.c	FUNCTION_12
0x5d7	              0xc9	                                   leave	       150	wrapper.c	FUNCTION_12
0x5d8	              0xc3	                                     ret	       150	wrapper.c	FUNCTION_12
const_error	IF,0:SWITCH,0:functions,0:CALL,0:WHILE,0:FOR,0:ELSE,0:DO,0	5
0x0	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_52
0x1	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_52
0x4	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_52
0x9	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_52
0xa	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_52
memory_limit_check	IF,4:SWITCH,0:functions,0:CALL,3:WHILE,0:FOR,0:ELSE,1:DO,0	39
0x179	              0x55	                                push rbp	        14	wrapper.c	FUNCTION_2
0x17a	          0x4889e5	                            mov rbp, rsp	        14	wrapper.c	FUNCTION_2
0x17d	        0x4883ec10	                           sub rsp, 0x10	        14	wrapper.c	FUNCTION_2
0x181	        0x48897df8	                mov qword [rbp - 8], rdi	        14	wrapper.c	FUNCTION_2
0x185	          0x8975f4	              mov dword [rbp - 0xc], esi	        14	wrapper.c	FUNCTION_2
0x188	    0x488b05000000	            mov rax, qword [0x040001cf] 	        16	wrapper.c	FUNCTION_2	IF_1
0x18f	          0x4885c0	                           test rax, rax	        16	wrapper.c	FUNCTION_2	IF_1
0x192	            0x752d	                           jne 0x4000201	        16	wrapper.c	FUNCTION_2	IF_1
0x194	      0xbe00000000	                              mov esi, 0	        17	wrapper.c	FUNCTION_2	IF_1	CALL_1
0x199	      0xbf00000000	                              mov edi, 0	        17	wrapper.c	FUNCTION_2	IF_1	CALL_1
0x19e	      0xe800000000	                          call 0x40001e3	        17	wrapper.c	FUNCTION_2	IF_1	CALL_1
0x1a3	    0x488905000000	            mov qword [0x040001ea], rax 	        17	wrapper.c	FUNCTION_2	IF_1	CALL_1
0x1aa	    0x488b05000000	            mov rax, qword [0x040001f1] 	        18	wrapper.c	FUNCTION_2	IF_1	IF_2
0x1b1	          0x4885c0	                           test rax, rax	        18	wrapper.c	FUNCTION_2	IF_1	IF_2
0x1b4	            0x750b	                           jne 0x4000201	        18	wrapper.c	FUNCTION_2	IF_1	IF_2
0x1b6	    0x48c705000000	mov qword [0x04000201], 0xffffffffffffffff 	        19	wrapper.c	FUNCTION_2	IF_1	IF_2
0x1c1	    0x488b05000000	            mov rax, qword [0x04000208] 	        21	wrapper.c	FUNCTION_2	IF_3
0x1c8	        0x483945f8	                cmp qword [rbp - 8], rax	        21	wrapper.c	FUNCTION_2	IF_3
0x1cc	            0x764c	                           jbe 0x400025a	        21	wrapper.c	FUNCTION_2	IF_3
0x1ce	        0x837df400	                cmp dword [rbp - 0xc], 0	        22	wrapper.c	FUNCTION_2	IF_3	IF_4
0x1d2	            0x7429	                            je 0x400023d	        22	wrapper.c	FUNCTION_2	IF_3	IF_4
0x1d4	    0x488b15000000	            mov rdx, qword [0x0400021b] 	        23	wrapper.c	FUNCTION_2	IF_3	IF_4	CALL_2
0x1db	        0x488b45f8	                mov rax, qword [rbp - 8]	        23	wrapper.c	FUNCTION_2	IF_3	IF_4	CALL_2
0x1df	          0x4889c6	                            mov rsi, rax	        23	wrapper.c	FUNCTION_2	IF_3	IF_4	CALL_2
0x1e2	      0xbf00000000	                              mov edi, 0	        23	wrapper.c	FUNCTION_2	IF_3	IF_4	CALL_2
0x1e7	      0xb800000000	                              mov eax, 0	        23	wrapper.c	FUNCTION_2	IF_3	IF_4	CALL_2
0x1ec	      0xe800000000	                          call 0x4000231	        23	wrapper.c	FUNCTION_2	IF_3	IF_4	CALL_2
0x1f1	      0xe80afeffff	                    call sym.const_error	        23	wrapper.c	FUNCTION_2	IF_3	IF_4	CALL_2
0x1f6	      0xb8ffffffff	                     mov eax, 0xffffffff	        25	wrapper.c	FUNCTION_2	IF_3	IF_4
0x1fb	            0xeb22	                           jmp 0x400025f	        25	wrapper.c	FUNCTION_2	IF_3	IF_4
0x1fd	    0x488b15000000	            mov rdx, qword [0x04000244] 	        27	wrapper.c	FUNCTION_2	IF_3	ELSE_1	CALL_3
0x204	        0x488b45f8	                mov rax, qword [rbp - 8]	        27	wrapper.c	FUNCTION_2	IF_3	ELSE_1	CALL_3
0x208	          0x4889c6	                            mov rsi, rax	        27	wrapper.c	FUNCTION_2	IF_3	ELSE_1	CALL_3
0x20b	      0xbf00000000	                              mov edi, 0	        27	wrapper.c	FUNCTION_2	IF_3	ELSE_1	CALL_3
0x210	      0xb800000000	                              mov eax, 0	        27	wrapper.c	FUNCTION_2	IF_3	ELSE_1	CALL_3
0x215	      0xe800000000	                          call 0x400025a	        27	wrapper.c	FUNCTION_2	IF_3	ELSE_1	CALL_3
0x21a	      0xb800000000	                              mov eax, 0	        30	wrapper.c	FUNCTION_2
0x21f	              0xc9	                                   leave	        31	wrapper.c	FUNCTION_2
0x220	              0xc3	                                     ret	        31	wrapper.c	FUNCTION_2
xmemdupz	IF,0:SWITCH,0:functions,0:CALL,2:WHILE,0:FOR,0:ELSE,0:DO,0	16
0x488	              0x55	                                push rbp	       123	wrapper.c	FUNCTION_10
0x489	          0x4889e5	                            mov rbp, rsp	       123	wrapper.c	FUNCTION_10
0x48c	        0x4883ec10	                           sub rsp, 0x10	       123	wrapper.c	FUNCTION_10
0x490	        0x48897df8	                mov qword [rbp - 8], rdi	       123	wrapper.c	FUNCTION_10
0x494	        0x488975f0	             mov qword [rbp - 0x10], rsi	       123	wrapper.c	FUNCTION_10
0x498	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       124	wrapper.c	FUNCTION_10	CALL_2
0x49c	          0x4889c7	                            mov rdi, rax	       124	wrapper.c	FUNCTION_10	CALL_2
0x49f	      0xe800000000	                          call 0x40004e4	       124	wrapper.c	FUNCTION_10	CALL_2
0x4a4	          0x4889c1	                            mov rcx, rax	       124	wrapper.c	FUNCTION_10	CALL_2
0x4a7	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       124	wrapper.c	FUNCTION_10	CALL_2
0x4ab	        0x488b45f8	                mov rax, qword [rbp - 8]	       124	wrapper.c	FUNCTION_10	CALL_2
0x4af	          0x4889c6	                            mov rsi, rax	       124	wrapper.c	FUNCTION_10	CALL_2
0x4b2	          0x4889cf	                            mov rdi, rcx	       124	wrapper.c	FUNCTION_10	CALL_2
0x4b5	      0xe800000000	                          call 0x40004fa	       124	wrapper.c	FUNCTION_10	CALL_2
0x4ba	              0xc9	                                   leave	       125	wrapper.c	FUNCTION_10
0x4bb	              0xc3	                                     ret	       125	wrapper.c	FUNCTION_10
is_missing_file_error	IF,0:SWITCH,0:functions,0:CALL,0:WHILE,0:FOR,0:ELSE,0:DO,0	12
0xb	              0x55	                                push rbp	      1196	git-compat-util.h	FUNCTION_73
0xc	          0x4889e5	                            mov rbp, rsp	      1196	git-compat-util.h	FUNCTION_73
0xf	          0x897dfc	                mov dword [rbp - 4], edi	      1196	git-compat-util.h	FUNCTION_73
0x12	        0x837dfc02	                  cmp dword [rbp - 4], 2	      1197	git-compat-util.h	FUNCTION_73
0x16	            0x7406	                            je 0x400005e	      1197	git-compat-util.h	FUNCTION_73
0x18	        0x837dfc14	               cmp dword [rbp - 4], 0x14	      1197	git-compat-util.h	FUNCTION_73
0x1c	            0x7507	                           jne 0x4000065	      1197	git-compat-util.h	FUNCTION_73
0x1e	      0xb801000000	                              mov eax, 1	      1197	git-compat-util.h	FUNCTION_73
0x23	            0xeb05	                           jmp 0x400006a	      1197	git-compat-util.h	FUNCTION_73
0x25	      0xb800000000	                              mov eax, 0	      1197	git-compat-util.h	FUNCTION_73
0x2a	              0x5d	                                 pop rbp	      1198	git-compat-util.h	FUNCTION_73
0x2b	              0xc3	                                     ret	      1198	git-compat-util.h	FUNCTION_73
do_xmallocz	IF,3:SWITCH,0:functions,0:CALL,4:WHILE,0:FOR,0:ELSE,1:DO,0	34
0x3d0	              0x55	                                push rbp	        91	wrapper.c	FUNCTION_7
0x3d1	          0x4889e5	                            mov rbp, rsp	        91	wrapper.c	FUNCTION_7
0x3d4	        0x4883ec20	                           sub rsp, 0x20	        91	wrapper.c	FUNCTION_7
0x3d8	        0x48897de8	             mov qword [rbp - 0x18], rdi	        91	wrapper.c	FUNCTION_7
0x3dc	          0x8975e4	             mov dword [rbp - 0x1c], esi	        91	wrapper.c	FUNCTION_7
0x3df	      0x48837de8ff	cmp qword [rbp - 0x18], 0xffffffffffffffff	        93	wrapper.c	FUNCTION_7	IF_1	CALL_1
0x3e4	            0x7530	                           jne 0x4000456	        93	wrapper.c	FUNCTION_7	IF_1	CALL_1
0x3e6	        0x837de400	               cmp dword [rbp - 0x1c], 0	        94	wrapper.c	FUNCTION_7	IF_1	IF_2
0x3ea	            0x741b	                            je 0x4000447	        94	wrapper.c	FUNCTION_7	IF_1	IF_2
0x3ec	      0xbf00000000	                              mov edi, 0	        95	wrapper.c	FUNCTION_7	IF_1	IF_2	CALL_2
0x3f1	      0xb800000000	                              mov eax, 0	        95	wrapper.c	FUNCTION_7	IF_1	IF_2	CALL_2
0x3f6	      0xe800000000	                          call 0x400043b	        95	wrapper.c	FUNCTION_7	IF_1	IF_2	CALL_2
0x3fb	      0xe800fcffff	                    call sym.const_error	        95	wrapper.c	FUNCTION_7	IF_1	IF_2	CALL_2
0x400	      0xb800000000	                              mov eax, 0	        96	wrapper.c	FUNCTION_7	IF_1	IF_2
0x405	            0xeb41	                           jmp 0x4000488	        96	wrapper.c	FUNCTION_7	IF_1	IF_2
0x407	      0xbf00000000	                              mov edi, 0	        98	wrapper.c	FUNCTION_7	IF_1	CALL_3
0x40c	      0xb800000000	                              mov eax, 0	        98	wrapper.c	FUNCTION_7	IF_1	CALL_3
0x411	      0xe800000000	                          call 0x4000456	        98	wrapper.c	FUNCTION_7	IF_1	CALL_3
0x416	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       100	wrapper.c	FUNCTION_7	CALL_4
0x41a	        0x488d5001	                      lea rdx, [rax + 1]	       100	wrapper.c	FUNCTION_7	CALL_4
0x41e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       100	wrapper.c	FUNCTION_7	CALL_4
0x421	            0x89c6	                            mov esi, eax	       100	wrapper.c	FUNCTION_7	CALL_4
0x423	          0x4889d7	                            mov rdi, rdx	       100	wrapper.c	FUNCTION_7	CALL_4
0x426	      0xe89afeffff	                     call sym.do_xmalloc	       100	wrapper.c	FUNCTION_7	CALL_4
0x42b	        0x488945f8	                mov qword [rbp - 8], rax	       100	wrapper.c	FUNCTION_7	CALL_4
0x42f	      0x48837df800	                  cmp qword [rbp - 8], 0	       101	wrapper.c	FUNCTION_7	IF_3
0x434	            0x740e	                            je 0x4000484	       101	wrapper.c	FUNCTION_7	IF_3
0x436	        0x488b55f8	                mov rdx, qword [rbp - 8]	       102	wrapper.c	FUNCTION_7	IF_3
0x43a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       102	wrapper.c	FUNCTION_7	IF_3
0x43e	          0x4801d0	                            add rax, rdx	       102	wrapper.c	FUNCTION_7	IF_3
0x441	          0xc60000	                       mov byte [rax], 0	       102	wrapper.c	FUNCTION_7	IF_3
0x444	        0x488b45f8	                mov rax, qword [rbp - 8]	       103	wrapper.c	FUNCTION_7
0x448	              0xc9	                                   leave	       104	wrapper.c	FUNCTION_7
0x449	              0xc3	                                     ret	       104	wrapper.c	FUNCTION_7
xread	IF,4:SWITCH,0:functions,0:CALL,2:WHILE,1:FOR,0:ELSE,0:DO,0	38
0x939	              0x55	                                push rbp	       255	wrapper.c	FUNCTION_16
0x93a	          0x4889e5	                            mov rbp, rsp	       255	wrapper.c	FUNCTION_16
0x93d	        0x4883ec30	                           sub rsp, 0x30	       255	wrapper.c	FUNCTION_16
0x941	          0x897dec	             mov dword [rbp - 0x14], edi	       255	wrapper.c	FUNCTION_16
0x944	        0x488975e0	             mov qword [rbp - 0x20], rsi	       255	wrapper.c	FUNCTION_16
0x948	        0x488955d8	             mov qword [rbp - 0x28], rdx	       255	wrapper.c	FUNCTION_16
0x94c	    0x48817dd80000	       cmp qword [rbp - 0x28], 0x800000 	       257	wrapper.c	FUNCTION_16	IF_1
0x954	            0x7608	                           jbe 0x400099e	       257	wrapper.c	FUNCTION_16	IF_1
0x956	    0x48c745d80000	        mov qword [rbp - 0x28], 0x800000	       258	wrapper.c	FUNCTION_16	IF_1
0x95e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       260	wrapper.c	FUNCTION_16	WHILE_1	CALL_1
0x962	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       260	wrapper.c	FUNCTION_16	WHILE_1	CALL_1
0x966	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       260	wrapper.c	FUNCTION_16	WHILE_1	CALL_1
0x969	          0x4889ce	                            mov rsi, rcx	       260	wrapper.c	FUNCTION_16	WHILE_1	CALL_1
0x96c	            0x89c7	                            mov edi, eax	       260	wrapper.c	FUNCTION_16	WHILE_1	CALL_1
0x96e	      0xe800000000	                          call 0x40009b3	       260	wrapper.c	FUNCTION_16	WHILE_1	CALL_1
0x973	        0x488945f8	                mov qword [rbp - 8], rax	       260	wrapper.c	FUNCTION_16	WHILE_1	CALL_1
0x977	      0x48837df800	                  cmp qword [rbp - 8], 0	       261	wrapper.c	FUNCTION_16	WHILE_1	IF_2
0x97c	            0x7926	                           jns 0x40009e4	       261	wrapper.c	FUNCTION_16	WHILE_1	IF_2
0x97e	      0xe800000000	                          call 0x40009c3	       262	wrapper.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x983	            0x8b00	                    mov eax, dword [rax]	       262	wrapper.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x985	          0x83f804	                              cmp eax, 4	       262	wrapper.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x988	            0x7420	                            je 0x40009ea	       262	wrapper.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x98a	      0xe800000000	                          call 0x40009cf	       264	wrapper.c	FUNCTION_16	WHILE_1	IF_2	IF_4	CALL_2
0x98f	            0x8b10	                    mov edx, dword [rax]	       264	wrapper.c	FUNCTION_16	WHILE_1	IF_2	IF_4	CALL_2
0x991	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       264	wrapper.c	FUNCTION_16	WHILE_1	IF_2	IF_4	CALL_2
0x994	      0xbe01000000	                              mov esi, 1	       264	wrapper.c	FUNCTION_16	WHILE_1	IF_2	IF_4	CALL_2
0x999	            0x89c7	                            mov edi, eax	       264	wrapper.c	FUNCTION_16	WHILE_1	IF_2	IF_4	CALL_2
0x99b	      0xe824ffffff	                call sym.handle_nonblock	       264	wrapper.c	FUNCTION_16	WHILE_1	IF_2	IF_4	CALL_2
0x9a0	            0x85c0	                           test eax, eax	       264	wrapper.c	FUNCTION_16	WHILE_1	IF_2	IF_4	CALL_2
0x9a2	            0x7509	                           jne 0x40009ed	       264	wrapper.c	FUNCTION_16	WHILE_1	IF_2	IF_4	CALL_2
0x9a4	        0x488b45f8	                mov rax, qword [rbp - 8]	       267	wrapper.c	FUNCTION_16	WHILE_1
0x9a8	            0xeb06	                           jmp 0x40009f0	       267	wrapper.c	FUNCTION_16	WHILE_1
0x9aa	              0x90	                                     nop	       263	wrapper.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x9ab	            0xebb1	                           jmp 0x400099e	       263	wrapper.c	FUNCTION_16	WHILE_1	IF_2	IF_3
0x9ad	              0x90	                                     nop	       265	wrapper.c	FUNCTION_16	WHILE_1	IF_2	IF_4
0x9ae	            0xebae	                           jmp 0x400099e	       268	wrapper.c	FUNCTION_16	WHILE_1
0x9b0	              0xc9	                                   leave	       269	wrapper.c	FUNCTION_16
0x9b1	              0xc3	                                     ret	       269	wrapper.c	FUNCTION_16
xfopen	IF,4:SWITCH,0:functions,0:CALL,7:WHILE,0:FOR,1:ELSE,2:DO,0	63
0xc62	              0x55	                                push rbp	       384	wrapper.c	FUNCTION_23
0xc63	          0x4889e5	                            mov rbp, rsp	       384	wrapper.c	FUNCTION_23
0xc66	        0x4883ec20	                           sub rsp, 0x20	       384	wrapper.c	FUNCTION_23
0xc6a	        0x48897de8	             mov qword [rbp - 0x18], rdi	       384	wrapper.c	FUNCTION_23
0xc6e	        0x488975e0	             mov qword [rbp - 0x20], rsi	       384	wrapper.c	FUNCTION_23
0xc72	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       386	wrapper.c	FUNCTION_23	FOR_1	CALL_1
0xc76	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       386	wrapper.c	FUNCTION_23	FOR_1	CALL_1
0xc7a	          0x4889d6	                            mov rsi, rdx	       386	wrapper.c	FUNCTION_23	FOR_1	CALL_1
0xc7d	          0x4889c7	                            mov rdi, rax	       386	wrapper.c	FUNCTION_23	FOR_1	CALL_1
0xc80	      0xe800000000	                          call 0x4000cc5	       386	wrapper.c	FUNCTION_23	FOR_1	CALL_1
0xc85	        0x488945f8	                mov qword [rbp - 8], rax	       386	wrapper.c	FUNCTION_23	FOR_1	CALL_1
0xc89	      0x48837df800	                  cmp qword [rbp - 8], 0	       387	wrapper.c	FUNCTION_23	FOR_1	IF_1
0xc8e	            0x7409	                            je 0x4000cd9	       387	wrapper.c	FUNCTION_23	FOR_1	IF_1
0xc90	        0x488b45f8	                mov rax, qword [rbp - 8]	       388	wrapper.c	FUNCTION_23	FOR_1	IF_1
0xc94	      0xe9a1000000	                           jmp 0x4000d7a	       388	wrapper.c	FUNCTION_23	FOR_1	IF_1
0xc99	      0xe800000000	                          call 0x4000cde	       389	wrapper.c	FUNCTION_23	FOR_1	IF_2
0xc9e	            0x8b00	                    mov eax, dword [rax]	       389	wrapper.c	FUNCTION_23	FOR_1	IF_2
0xca0	          0x83f804	                              cmp eax, 4	       389	wrapper.c	FUNCTION_23	FOR_1	IF_2
0xca3	            0x7502	                           jne 0x4000ce7	       389	wrapper.c	FUNCTION_23	FOR_1	IF_2
0xca5	            0xebcb	                           jmp 0x4000cb2	       398	wrapper.c	FUNCTION_23	FOR_1
0xca7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       392	wrapper.c	FUNCTION_23	FOR_1	IF_3
0xcab	           0xfb600	                   movzx eax, byte [rax]	       392	wrapper.c	FUNCTION_23	FOR_1	IF_3
0xcae	            0x84c0	                             test al, al	       392	wrapper.c	FUNCTION_23	FOR_1	IF_3
0xcb0	            0x7430	                            je 0x4000d22	       392	wrapper.c	FUNCTION_23	FOR_1	IF_3
0xcb2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       392	wrapper.c	FUNCTION_23	FOR_1	IF_3
0xcb6	        0x4883c001	                              add rax, 1	       392	wrapper.c	FUNCTION_23	FOR_1	IF_3
0xcba	           0xfb600	                   movzx eax, byte [rax]	       392	wrapper.c	FUNCTION_23	FOR_1	IF_3
0xcbd	            0x3c2b	                            cmp al, 0x2b	       392	wrapper.c	FUNCTION_23	FOR_1	IF_3
0xcbf	            0x7521	                           jne 0x4000d22	       392	wrapper.c	FUNCTION_23	FOR_1	IF_3
0xcc1	      0xbf00000000	                              mov edi, 0	       393	wrapper.c	FUNCTION_23	FOR_1	CALL_3
0xcc6	      0xe877f4ffff	                               call sym.	       393	wrapper.c	FUNCTION_23	FOR_1	CALL_3
0xccb	          0x4889c2	                            mov rdx, rax	       393	wrapper.c	FUNCTION_23	FOR_1	CALL_3
0xcce	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       393	wrapper.c	FUNCTION_23	FOR_1	CALL_3
0xcd2	          0x4889c6	                            mov rsi, rax	       393	wrapper.c	FUNCTION_23	FOR_1	CALL_3
0xcd5	          0x4889d7	                            mov rdi, rdx	       393	wrapper.c	FUNCTION_23	FOR_1	CALL_3
0xcd8	      0xb800000000	                              mov eax, 0	       393	wrapper.c	FUNCTION_23	FOR_1	CALL_3
0xcdd	      0xe800000000	                          call 0x4000d22	       393	wrapper.c	FUNCTION_23	FOR_1	CALL_3
0xce2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       394	wrapper.c	FUNCTION_23	FOR_1	ELSE_1	IF_4
0xce6	           0xfb600	                   movzx eax, byte [rax]	       394	wrapper.c	FUNCTION_23	FOR_1	ELSE_1	IF_4
0xce9	            0x3c77	                            cmp al, 0x77	       394	wrapper.c	FUNCTION_23	FOR_1	ELSE_1	IF_4
0xceb	            0x740b	                            je 0x4000d38	       394	wrapper.c	FUNCTION_23	FOR_1	ELSE_1	IF_4
0xced	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       394	wrapper.c	FUNCTION_23	FOR_1	ELSE_1	IF_4
0xcf1	           0xfb600	                   movzx eax, byte [rax]	       394	wrapper.c	FUNCTION_23	FOR_1	ELSE_1	IF_4
0xcf4	            0x3c61	                            cmp al, 0x61	       394	wrapper.c	FUNCTION_23	FOR_1	ELSE_1	IF_4
0xcf6	            0x7521	                           jne 0x4000d59	       394	wrapper.c	FUNCTION_23	FOR_1	ELSE_1	IF_4
0xcf8	      0xbf00000000	                              mov edi, 0	       395	wrapper.c	FUNCTION_23	FOR_1	ELSE_1	IF_4
0xcfd	      0xe840f4ffff	                               call sym.	       395	wrapper.c	FUNCTION_23	FOR_1	ELSE_1	IF_4
0xd02	          0x4889c2	                            mov rdx, rax	       395	wrapper.c	FUNCTION_23	FOR_1	ELSE_1	IF_4
0xd05	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       395	wrapper.c	FUNCTION_23	FOR_1	ELSE_1	IF_4
0xd09	          0x4889c6	                            mov rsi, rax	       395	wrapper.c	FUNCTION_23	FOR_1	ELSE_1	IF_4
0xd0c	          0x4889d7	                            mov rdi, rdx	       395	wrapper.c	FUNCTION_23	FOR_1	ELSE_1	IF_4
0xd0f	      0xb800000000	                              mov eax, 0	       395	wrapper.c	FUNCTION_23	FOR_1	ELSE_1	IF_4
0xd14	      0xe800000000	                          call 0x4000d59	       395	wrapper.c	FUNCTION_23	FOR_1	ELSE_1	IF_4
0xd19	      0xbf00000000	                              mov edi, 0	       397	wrapper.c	FUNCTION_23	FOR_1	CALL_7
0xd1e	      0xe81ff4ffff	                               call sym.	       397	wrapper.c	FUNCTION_23	FOR_1	CALL_7
0xd23	          0x4889c2	                            mov rdx, rax	       397	wrapper.c	FUNCTION_23	FOR_1	CALL_7
0xd26	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       397	wrapper.c	FUNCTION_23	FOR_1	CALL_7
0xd2a	          0x4889c6	                            mov rsi, rax	       397	wrapper.c	FUNCTION_23	FOR_1	CALL_7
0xd2d	          0x4889d7	                            mov rdi, rdx	       397	wrapper.c	FUNCTION_23	FOR_1	CALL_7
0xd30	      0xb800000000	                              mov eax, 0	       397	wrapper.c	FUNCTION_23	FOR_1	CALL_7
0xd35	      0xe800000000	                          call 0x4000d7a	       397	wrapper.c	FUNCTION_23	FOR_1	CALL_7
0xd3a	              0xc9	                                   leave	       399	wrapper.c	FUNCTION_23
0xd3b	              0xc3	                                     ret	       399	wrapper.c	FUNCTION_23
xmallocz	IF,0:SWITCH,0:functions,0:CALL,1:WHILE,0:FOR,0:ELSE,0:DO,0	10
0x44a	              0x55	                                push rbp	       107	wrapper.c	FUNCTION_8
0x44b	          0x4889e5	                            mov rbp, rsp	       107	wrapper.c	FUNCTION_8
0x44e	        0x4883ec10	                           sub rsp, 0x10	       107	wrapper.c	FUNCTION_8
0x452	        0x48897df8	                mov qword [rbp - 8], rdi	       107	wrapper.c	FUNCTION_8
0x456	        0x488b45f8	                mov rax, qword [rbp - 8]	       108	wrapper.c	FUNCTION_8	CALL_1
0x45a	      0xbe00000000	                              mov esi, 0	       108	wrapper.c	FUNCTION_8	CALL_1
0x45f	          0x4889c7	                            mov rdi, rax	       108	wrapper.c	FUNCTION_8	CALL_1
0x462	      0xe869ffffff	                    call sym.do_xmallocz	       108	wrapper.c	FUNCTION_8	CALL_1
0x467	              0xc9	                                   leave	       109	wrapper.c	FUNCTION_8
0x468	              0xc3	                                     ret	       109	wrapper.c	FUNCTION_8
xmalloc	IF,0:SWITCH,0:functions,0:CALL,1:WHILE,0:FOR,0:ELSE,0:DO,0	10
0x3b1	              0x55	                                push rbp	        86	wrapper.c	FUNCTION_6
0x3b2	          0x4889e5	                            mov rbp, rsp	        86	wrapper.c	FUNCTION_6
0x3b5	        0x4883ec10	                           sub rsp, 0x10	        86	wrapper.c	FUNCTION_6
0x3b9	        0x48897df8	                mov qword [rbp - 8], rdi	        86	wrapper.c	FUNCTION_6
0x3bd	        0x488b45f8	                mov rax, qword [rbp - 8]	        87	wrapper.c	FUNCTION_6	CALL_1
0x3c1	      0xbe00000000	                              mov esi, 0	        87	wrapper.c	FUNCTION_6	CALL_1
0x3c6	          0x4889c7	                            mov rdi, rax	        87	wrapper.c	FUNCTION_6	CALL_1
0x3c9	      0xe8f7feffff	                     call sym.do_xmalloc	        87	wrapper.c	FUNCTION_6	CALL_1
0x3ce	              0xc9	                                   leave	        88	wrapper.c	FUNCTION_6
0x3cf	              0xc3	                                     ret	        88	wrapper.c	FUNCTION_6
handle_nonblock	IF,1:SWITCH,0:functions,0:CALL,1:WHILE,0:FOR,0:ELSE,0:DO,0	32
0x8c4	              0x55	                                push rbp	       232	wrapper.c	FUNCTION_15
0x8c5	          0x4889e5	                            mov rbp, rsp	       232	wrapper.c	FUNCTION_15
0x8c8	        0x4883ec20	                           sub rsp, 0x20	       232	wrapper.c	FUNCTION_15
0x8cc	          0x897dec	             mov dword [rbp - 0x14], edi	       232	wrapper.c	FUNCTION_15
0x8cf	            0x89f0	                            mov eax, esi	       232	wrapper.c	FUNCTION_15
0x8d1	          0x8955e4	             mov dword [rbp - 0x1c], edx	       232	wrapper.c	FUNCTION_15
0x8d4	        0x668945e8	               mov word [rbp - 0x18], ax	       232	wrapper.c	FUNCTION_15
0x8d8	    0x64488b042528	                mov rax, qword fs:[0x28]	       232	wrapper.c	FUNCTION_15
0x8e1	        0x488945f8	                mov qword [rbp - 8], rax	       232	wrapper.c	FUNCTION_15
0x8e5	            0x31c0	                            xor eax, eax	       232	wrapper.c	FUNCTION_15
0x8e7	        0x837de40b	            cmp dword [rbp - 0x1c], 0xb 	       235	wrapper.c	FUNCTION_15	IF_1
0x8eb	            0x740d	                            je 0x400093a	       235	wrapper.c	FUNCTION_15	IF_1
0x8ed	        0x837de40b	            cmp dword [rbp - 0x1c], 0xb 	       235	wrapper.c	FUNCTION_15	IF_1
0x8f1	            0x7407	                            je 0x400093a	       235	wrapper.c	FUNCTION_15	IF_1
0x8f3	      0xb800000000	                              mov eax, 0	       236	wrapper.c	FUNCTION_15	IF_1
0x8f8	            0xeb29	                           jmp 0x4000963	       236	wrapper.c	FUNCTION_15	IF_1
0x8fa	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       238	wrapper.c	FUNCTION_15
0x8fd	          0x8945f0	             mov dword [rbp - 0x10], eax	       238	wrapper.c	FUNCTION_15
0x900	         0xfb745e8	            movzx eax, word [rbp - 0x18]	       239	wrapper.c	FUNCTION_15
0x904	        0x668945f4	                mov word [rbp - 0xc], ax	       239	wrapper.c	FUNCTION_15
0x908	        0x488d45f0	                   lea rax, [rbp - 0x10]	       245	wrapper.c	FUNCTION_15	CALL_1
0x90c	      0xbaffffffff	                     mov edx, 0xffffffff	       245	wrapper.c	FUNCTION_15	CALL_1
0x911	      0xbe01000000	                              mov esi, 1	       245	wrapper.c	FUNCTION_15	CALL_1
0x916	          0x4889c7	                            mov rdi, rax	       245	wrapper.c	FUNCTION_15	CALL_1
0x919	      0xe800000000	                          call 0x400095e	       245	wrapper.c	FUNCTION_15	CALL_1
0x91e	      0xb801000000	                              mov eax, 1	       246	wrapper.c	FUNCTION_15
0x923	        0x488b4df8	                mov rcx, qword [rbp - 8]	       247	wrapper.c	FUNCTION_15
0x927	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       247	wrapper.c	FUNCTION_15
0x930	            0x7405	                            je 0x4000977	       247	wrapper.c	FUNCTION_15
0x932	      0xe800000000	                          call 0x4000977	       247	wrapper.c	FUNCTION_15
0x937	              0xc9	                                   leave	       247	wrapper.c	FUNCTION_15
0x938	              0xc3	                                     ret	       247	wrapper.c	FUNCTION_15
pread_in_full	IF,2:SWITCH,0:functions,0:CALL,1:WHILE,1:FOR,0:ELSE,0:DO,0	39
0xba3	              0x55	                                push rbp	       353	wrapper.c	FUNCTION_21
0xba4	          0x4889e5	                            mov rbp, rsp	       353	wrapper.c	FUNCTION_21
0xba7	        0x4883ec40	                           sub rsp, 0x40	       353	wrapper.c	FUNCTION_21
0xbab	          0x897ddc	             mov dword [rbp - 0x24], edi	       353	wrapper.c	FUNCTION_21
0xbae	        0x488975d0	             mov qword [rbp - 0x30], rsi	       353	wrapper.c	FUNCTION_21
0xbb2	        0x488955c8	             mov qword [rbp - 0x38], rdx	       353	wrapper.c	FUNCTION_21
0xbb6	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       353	wrapper.c	FUNCTION_21
0xbba	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       354	wrapper.c	FUNCTION_21
0xbbe	        0x488945e8	             mov qword [rbp - 0x18], rax	       354	wrapper.c	FUNCTION_21
0xbc2	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       355	wrapper.c	FUNCTION_21
0xbca	            0xeb57	                           jmp 0x4000c63	       357	wrapper.c	FUNCTION_21	WHILE_1
0xbcc	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       358	wrapper.c	FUNCTION_21	WHILE_1	CALL_1
0xbd0	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       358	wrapper.c	FUNCTION_21	WHILE_1	CALL_1
0xbd4	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       358	wrapper.c	FUNCTION_21	WHILE_1	CALL_1
0xbd8	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       358	wrapper.c	FUNCTION_21	WHILE_1	CALL_1
0xbdb	            0x89c7	                            mov edi, eax	       358	wrapper.c	FUNCTION_21	WHILE_1	CALL_1
0xbdd	      0xe800000000	                          call 0x4000c22	       358	wrapper.c	FUNCTION_21	WHILE_1	CALL_1
0xbe2	        0x488945f8	                mov qword [rbp - 8], rax	       358	wrapper.c	FUNCTION_21	WHILE_1	CALL_1
0xbe6	      0x48837df800	                  cmp qword [rbp - 8], 0	       359	wrapper.c	FUNCTION_21	WHILE_1	IF_1
0xbeb	            0x7909	                           jns 0x4000c36	       359	wrapper.c	FUNCTION_21	WHILE_1	IF_1
0xbed	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       360	wrapper.c	FUNCTION_21	WHILE_1	IF_1
0xbf4	            0xeb38	                           jmp 0x4000c6e	       360	wrapper.c	FUNCTION_21	WHILE_1	IF_1
0xbf6	      0x48837df800	                  cmp qword [rbp - 8], 0	       361	wrapper.c	FUNCTION_21	WHILE_1	IF_2
0xbfb	            0x7506	                           jne 0x4000c43	       361	wrapper.c	FUNCTION_21	WHILE_1	IF_2
0xbfd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       362	wrapper.c	FUNCTION_21	WHILE_1	IF_2
0xc01	            0xeb2b	                           jmp 0x4000c6e	       362	wrapper.c	FUNCTION_21	WHILE_1	IF_2
0xc03	        0x488b45f8	                mov rax, qword [rbp - 8]	       363	wrapper.c	FUNCTION_21	WHILE_1
0xc07	        0x482945c8	             sub qword [rbp - 0x38], rax	       363	wrapper.c	FUNCTION_21	WHILE_1
0xc0b	        0x488b45f8	                mov rax, qword [rbp - 8]	       364	wrapper.c	FUNCTION_21	WHILE_1
0xc0f	        0x480145e8	            add qword [rbp - 0x18], rax 	       364	wrapper.c	FUNCTION_21	WHILE_1
0xc13	        0x488b45f8	                mov rax, qword [rbp - 8]	       365	wrapper.c	FUNCTION_21	WHILE_1
0xc17	        0x480145f0	            add qword [rbp - 0x10], rax 	       365	wrapper.c	FUNCTION_21	WHILE_1
0xc1b	        0x488b45f8	                mov rax, qword [rbp - 8]	       366	wrapper.c	FUNCTION_21	WHILE_1
0xc1f	        0x480145c0	            add qword [rbp - 0x40], rax 	       366	wrapper.c	FUNCTION_21	WHILE_1
0xc23	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       357	wrapper.c	FUNCTION_21	WHILE_1
0xc28	            0x75a2	                           jne 0x4000c0c	       357	wrapper.c	FUNCTION_21	WHILE_1
0xc2a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       369	wrapper.c	FUNCTION_21
0xc2e	              0xc9	                                   leave	       370	wrapper.c	FUNCTION_21
0xc2f	              0xc3	                                     ret	       370	wrapper.c	FUNCTION_21
xgethostname	IF,1:SWITCH,0:functions,0:CALL,1:WHILE,0:FOR,0:ELSE,0:DO,0	21
0x19b4	              0x55	                                push rbp	       682	wrapper.c	FUNCTION_46
0x19b5	          0x4889e5	                            mov rbp, rsp	       682	wrapper.c	FUNCTION_46
0x19b8	        0x4883ec20	                           sub rsp, 0x20	       682	wrapper.c	FUNCTION_46
0x19bc	        0x48897de8	             mov qword [rbp - 0x18], rdi	       682	wrapper.c	FUNCTION_46
0x19c0	        0x488975e0	             mov qword [rbp - 0x20], rsi	       682	wrapper.c	FUNCTION_46
0x19c4	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       688	wrapper.c	FUNCTION_46	CALL_1
0x19c8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       688	wrapper.c	FUNCTION_46	CALL_1
0x19cc	          0x4889d6	                            mov rsi, rdx	       688	wrapper.c	FUNCTION_46	CALL_1
0x19cf	          0x4889c7	                            mov rdi, rax	       688	wrapper.c	FUNCTION_46	CALL_1
0x19d2	      0xe800000000	                          call 0x4001a17	       688	wrapper.c	FUNCTION_46	CALL_1
0x19d7	          0x8945fc	                mov dword [rbp - 4], eax	       688	wrapper.c	FUNCTION_46	CALL_1
0x19da	        0x837dfc00	                  cmp dword [rbp - 4], 0	       689	wrapper.c	FUNCTION_46	IF_1
0x19de	            0x7512	                           jne 0x4001a32	       689	wrapper.c	FUNCTION_46	IF_1
0x19e0	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       690	wrapper.c	FUNCTION_46	IF_1
0x19e4	        0x488d50ff	                      lea rdx, [rax - 1]	       690	wrapper.c	FUNCTION_46	IF_1
0x19e8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       690	wrapper.c	FUNCTION_46	IF_1
0x19ec	          0x4801d0	                            add rax, rdx	       690	wrapper.c	FUNCTION_46	IF_1
0x19ef	          0xc60000	                       mov byte [rax], 0	       690	wrapper.c	FUNCTION_46	IF_1
0x19f2	          0x8b45fc	                mov eax, dword [rbp - 4]	       691	wrapper.c	FUNCTION_46
0x19f5	              0xc9	                                   leave	       692	wrapper.c	FUNCTION_46
0x19f6	              0xc3	                                     ret	       692	wrapper.c	FUNCTION_46
xfdopen	IF,1:SWITCH,0:functions,0:CALL,2:WHILE,0:FOR,0:ELSE,0:DO,0	19
0xd3c	              0x55	                                push rbp	       402	wrapper.c	FUNCTION_24
0xd3d	          0x4889e5	                            mov rbp, rsp	       402	wrapper.c	FUNCTION_24
0xd40	        0x4883ec20	                           sub rsp, 0x20	       402	wrapper.c	FUNCTION_24
0xd44	          0x897dec	             mov dword [rbp - 0x14], edi	       402	wrapper.c	FUNCTION_24
0xd47	        0x488975e0	             mov qword [rbp - 0x20], rsi	       402	wrapper.c	FUNCTION_24
0xd4b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       403	wrapper.c	FUNCTION_24	CALL_1
0xd4f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       403	wrapper.c	FUNCTION_24	CALL_1
0xd52	          0x4889d6	                            mov rsi, rdx	       403	wrapper.c	FUNCTION_24	CALL_1
0xd55	            0x89c7	                            mov edi, eax	       403	wrapper.c	FUNCTION_24	CALL_1
0xd57	      0xe800000000	                          call 0x4000d9c	       403	wrapper.c	FUNCTION_24	CALL_1
0xd5c	        0x488945f8	                mov qword [rbp - 8], rax	       403	wrapper.c	FUNCTION_24	CALL_1
0xd60	      0x48837df800	                  cmp qword [rbp - 8], 0	       404	wrapper.c	FUNCTION_24	IF_1
0xd65	            0x750f	                           jne 0x4000db6	       404	wrapper.c	FUNCTION_24	IF_1
0xd67	      0xbf00000000	                              mov edi, 0	       405	wrapper.c	FUNCTION_24	CALL_2
0xd6c	      0xb800000000	                              mov eax, 0	       405	wrapper.c	FUNCTION_24	CALL_2
0xd71	      0xe800000000	                          call 0x4000db6	       405	wrapper.c	FUNCTION_24	CALL_2
0xd76	        0x488b45f8	                mov rax, qword [rbp - 8]	       406	wrapper.c	FUNCTION_24
0xd7a	              0xc9	                                   leave	       407	wrapper.c	FUNCTION_24
0xd7b	              0xc3	                                     ret	       407	wrapper.c	FUNCTION_24
unlink_or_msg	IF,1:SWITCH,0:functions,0:CALL,4:WHILE,0:FOR,0:ELSE,0:DO,0	38
0x1417	              0x55	                                push rbp	       578	wrapper.c	FUNCTION_34
0x1418	          0x4889e5	                            mov rbp, rsp	       578	wrapper.c	FUNCTION_34
0x141b	        0x4883ec20	                           sub rsp, 0x20	       578	wrapper.c	FUNCTION_34
0x141f	        0x48897de8	             mov qword [rbp - 0x18], rdi	       578	wrapper.c	FUNCTION_34
0x1423	        0x488975e0	             mov qword [rbp - 0x20], rsi	       578	wrapper.c	FUNCTION_34
0x1427	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       579	wrapper.c	FUNCTION_34	CALL_1
0x142b	          0x4889c7	                            mov rdi, rax	       579	wrapper.c	FUNCTION_34	CALL_1
0x142e	      0xe800000000	                          call 0x4001473	       579	wrapper.c	FUNCTION_34	CALL_1
0x1433	          0x8945fc	                mov dword [rbp - 4], eax	       579	wrapper.c	FUNCTION_34	CALL_1
0x1436	      0x48837de000	               cmp qword [rbp - 0x20], 0	       581	wrapper.c	FUNCTION_34	CALL_2
0x143b	            0x7519	                           jne 0x4001496	       581	wrapper.c	FUNCTION_34	CALL_2
0x143d	      0xb900000000	                              mov ecx, 0	       581	wrapper.c	FUNCTION_34	CALL_2
0x1442	      0xba45020000	                          mov edx, 0x245	       581	wrapper.c	FUNCTION_34	CALL_2
0x1447	      0xbe00000000	                              mov esi, 0	       581	wrapper.c	FUNCTION_34	CALL_2
0x144c	      0xbf00000000	                              mov edi, 0	       581	wrapper.c	FUNCTION_34	CALL_2
0x1451	      0xe800000000	                          call 0x4001496	       581	wrapper.c	FUNCTION_34	CALL_2
0x1456	        0x837dfc00	                  cmp dword [rbp - 4], 0	       583	wrapper.c	FUNCTION_34	IF_1
0x145a	            0x740c	                            je 0x40014a8	       583	wrapper.c	FUNCTION_34	IF_1
0x145c	      0xe800000000	                          call 0x40014a1	       583	wrapper.c	FUNCTION_34	IF_1
0x1461	            0x8b00	                    mov eax, dword [rax]	       583	wrapper.c	FUNCTION_34	IF_1
0x1463	          0x83f802	                              cmp eax, 2	       583	wrapper.c	FUNCTION_34	IF_1
0x1466	            0x7507	                           jne 0x40014af	       583	wrapper.c	FUNCTION_34	IF_1
0x1468	      0xb800000000	                              mov eax, 0	       584	wrapper.c	FUNCTION_34	IF_1
0x146d	            0xeb30	                           jmp 0x40014df	       584	wrapper.c	FUNCTION_34	IF_1
0x146f	      0xe800000000	                          call 0x40014b4	       587	wrapper.c	FUNCTION_34	CALL_4
0x1474	            0x8b00	                    mov eax, dword [rax]	       586	wrapper.c	FUNCTION_34	CALL_3
0x1476	            0x89c7	                            mov edi, eax	       586	wrapper.c	FUNCTION_34	CALL_3
0x1478	      0xe800000000	                          call 0x40014bd	       586	wrapper.c	FUNCTION_34	CALL_3
0x147d	          0x4889c1	                            mov rcx, rax	       586	wrapper.c	FUNCTION_34	CALL_3
0x1480	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       586	wrapper.c	FUNCTION_34	CALL_3
0x1484	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       586	wrapper.c	FUNCTION_34	CALL_3
0x1488	      0xbe00000000	                              mov esi, 0	       586	wrapper.c	FUNCTION_34	CALL_3
0x148d	          0x4889c7	                            mov rdi, rax	       586	wrapper.c	FUNCTION_34	CALL_3
0x1490	      0xb800000000	                              mov eax, 0	       586	wrapper.c	FUNCTION_34	CALL_3
0x1495	      0xe800000000	                          call 0x40014da	       586	wrapper.c	FUNCTION_34	CALL_3
0x149a	      0xb8ffffffff	                     mov eax, 0xffffffff	       588	wrapper.c	FUNCTION_34
0x149f	              0xc9	                                   leave	       589	wrapper.c	FUNCTION_34
0x14a0	              0xc3	                                     ret	       589	wrapper.c	FUNCTION_34
strbuf_avail	IF,0:SWITCH,0:functions,0:CALL,0:WHILE,0:FOR,0:ELSE,0:DO,0	18
0x2c	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_75
0x2d	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_75
0x30	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_75
0x34	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_75
0x38	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_75
0x3b	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_75
0x3e	            0x741b	                            je 0x400009b	       141	strbuf.h	FUNCTION_75
0x40	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_75
0x44	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_75
0x47	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_75
0x4b	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_75
0x4f	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_75
0x52	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_75
0x55	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_75
0x59	            0xeb05	                           jmp 0x40000a0	       141	strbuf.h	FUNCTION_75
0x5b	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_75
0x60	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_75
0x61	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_75
strbuf_addch	IF,1:SWITCH,0:functions,0:CALL,2:WHILE,0:FOR,0:ELSE,0:DO,0	33
0x62	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_77
0x63	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_77
0x66	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_77
0x6a	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_77
0x6e	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_77
0x71	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_77	IF_1	CALL_1
0x75	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_77	IF_1	CALL_1
0x78	      0xe8afffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_77	IF_1	CALL_1
0x7d	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_77	IF_1	CALL_1
0x80	            0x7511	                           jne 0x40000d3	       227	strbuf.h	FUNCTION_77	IF_1	CALL_1
0x82	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_77	CALL_2
0x86	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_77	CALL_2
0x8b	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_77	CALL_2
0x8e	      0xe800000000	                          call 0x40000d3	       228	strbuf.h	FUNCTION_77	CALL_2
0x93	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_77
0x97	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_77
0x9b	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_77
0x9f	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_77
0xa3	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_77
0xa7	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_77
0xab	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_77
0xaf	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_77
0xb2	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_77
0xb5	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_77
0xb7	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_77
0xbb	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_77
0xbf	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_77
0xc3	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_77
0xc7	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_77
0xca	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_77
0xcd	              0x90	                                     nop	       231	strbuf.h	FUNCTION_77
0xce	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_77
0xcf	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_77
xsnprintf	IF,2:SWITCH,0:functions,0:CALL,5:WHILE,0:FOR,0:ELSE,0:DO,0	54
0x16a9	              0x55	                                push rbp	       637	wrapper.c	FUNCTION_42
0x16aa	          0x4889e5	                            mov rbp, rsp	       637	wrapper.c	FUNCTION_42
0x16ad	    0x4881ec000100	                          sub rsp, 0x100	       637	wrapper.c	FUNCTION_42
0x16b4	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	       637	wrapper.c	FUNCTION_42
0x16bb	    0x4889b510ffff	             mov qword [rbp - 0xf0], rsi	       637	wrapper.c	FUNCTION_42
0x16c2	    0x48899508ffff	             mov qword [rbp - 0xf8], rdx	       637	wrapper.c	FUNCTION_42
0x16c9	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       637	wrapper.c	FUNCTION_42
0x16d0	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       637	wrapper.c	FUNCTION_42
0x16d7	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       637	wrapper.c	FUNCTION_42
0x16de	            0x84c0	                             test al, al	       637	wrapper.c	FUNCTION_42
0x16e0	            0x7420	                            je 0x4001742	       637	wrapper.c	FUNCTION_42
0x16e2	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       637	wrapper.c	FUNCTION_42
0x16e6	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       637	wrapper.c	FUNCTION_42
0x16ea	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       637	wrapper.c	FUNCTION_42
0x16ee	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       637	wrapper.c	FUNCTION_42
0x16f2	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       637	wrapper.c	FUNCTION_42
0x16f6	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       637	wrapper.c	FUNCTION_42
0x16fa	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       637	wrapper.c	FUNCTION_42
0x16fe	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       637	wrapper.c	FUNCTION_42
0x1702	    0x64488b042528	                mov rax, qword fs:[0x28]	       637	wrapper.c	FUNCTION_42
0x170b	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       637	wrapper.c	FUNCTION_42
0x1712	            0x31c0	                            xor eax, eax	       637	wrapper.c	FUNCTION_42
0x1714	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x18 	       641	wrapper.c	FUNCTION_42	CALL_1
0x171e	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       641	wrapper.c	FUNCTION_42	CALL_1
0x1728	        0x488d4510	                   lea rax, [rbp + 0x10]	       641	wrapper.c	FUNCTION_42	CALL_1
0x172c	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       641	wrapper.c	FUNCTION_42	CALL_1
0x1733	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       641	wrapper.c	FUNCTION_42	CALL_1
0x173a	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       641	wrapper.c	FUNCTION_42	CALL_1
0x1741	    0x488d8d30ffff	                   lea rcx, [rbp - 0xd0]	       642	wrapper.c	FUNCTION_42	CALL_2
0x1748	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	       642	wrapper.c	FUNCTION_42	CALL_2
0x174f	    0x488bb510ffff	             mov rsi, qword [rbp - 0xf0]	       642	wrapper.c	FUNCTION_42	CALL_2
0x1756	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       642	wrapper.c	FUNCTION_42	CALL_2
0x175d	          0x4889c7	                            mov rdi, rax	       642	wrapper.c	FUNCTION_42	CALL_2
0x1760	      0xe800000000	                          call 0x40017a5	       642	wrapper.c	FUNCTION_42	CALL_2
0x1765	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	       642	wrapper.c	FUNCTION_42	CALL_2
0x176b	    0x83bd2cffffff	               cmp dword [rbp - 0xd4], 0	       645	wrapper.c	FUNCTION_42	IF_1
0x1772	            0x790f	                           jns 0x40017c3	       645	wrapper.c	FUNCTION_42	IF_1
0x1774	      0xbf00000000	                              mov edi, 0	       646	wrapper.c	FUNCTION_42	CALL_4
0x1779	      0xb800000000	                              mov eax, 0	       646	wrapper.c	FUNCTION_42	CALL_4
0x177e	      0xe800000000	                          call 0x40017c3	       646	wrapper.c	FUNCTION_42	CALL_4
0x1783	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       647	wrapper.c	FUNCTION_42	IF_2
0x1789	            0x4898	                                    cdqe	       647	wrapper.c	FUNCTION_42	IF_2
0x178b	    0x483b8510ffff	             cmp rax, qword [rbp - 0xf0]	       647	wrapper.c	FUNCTION_42	IF_2
0x1792	            0x720f	                            jb 0x40017e3	       647	wrapper.c	FUNCTION_42	IF_2
0x1794	      0xbf00000000	                              mov edi, 0	       648	wrapper.c	FUNCTION_42	CALL_5
0x1799	      0xb800000000	                              mov eax, 0	       648	wrapper.c	FUNCTION_42	CALL_5
0x179e	      0xe800000000	                          call 0x40017e3	       648	wrapper.c	FUNCTION_42	CALL_5
0x17a3	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       649	wrapper.c	FUNCTION_42
0x17a9	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	       650	wrapper.c	FUNCTION_42
0x17b0	    0x644833142528	                xor rdx, qword fs:[0x28]	       650	wrapper.c	FUNCTION_42
0x17b9	            0x7405	                            je 0x4001800	       650	wrapper.c	FUNCTION_42
0x17bb	      0xe800000000	                          call 0x4001800	       650	wrapper.c	FUNCTION_42
0x17c0	              0xc9	                                   leave	       650	wrapper.c	FUNCTION_42
0x17c1	              0xc3	                                     ret	       650	wrapper.c	FUNCTION_42
sleep_millisec	IF,0:SWITCH,0:functions,0:CALL,1:WHILE,0:FOR,0:ELSE,0:DO,0	12
0x1992	              0x55	                                push rbp	       677	wrapper.c	FUNCTION_45
0x1993	          0x4889e5	                            mov rbp, rsp	       677	wrapper.c	FUNCTION_45
0x1996	        0x4883ec10	                           sub rsp, 0x10	       677	wrapper.c	FUNCTION_45
0x199a	          0x897dfc	                mov dword [rbp - 4], edi	       677	wrapper.c	FUNCTION_45
0x199d	          0x8b45fc	                mov eax, dword [rbp - 4]	       678	wrapper.c	FUNCTION_45	CALL_1
0x19a0	            0x89c2	                            mov edx, eax	       678	wrapper.c	FUNCTION_45	CALL_1
0x19a2	      0xbe00000000	                              mov esi, 0	       678	wrapper.c	FUNCTION_45	CALL_1
0x19a7	      0xbf00000000	                              mov edi, 0	       678	wrapper.c	FUNCTION_45	CALL_1
0x19ac	      0xe800000000	                          call 0x40019f1	       678	wrapper.c	FUNCTION_45	CALL_1
0x19b1	              0x90	                                     nop	       679	wrapper.c	FUNCTION_45
0x19b2	              0xc9	                                   leave	       679	wrapper.c	FUNCTION_45
0x19b3	              0xc3	                                     ret	       679	wrapper.c	FUNCTION_45
set_try_to_free_routine	IF,1:SWITCH,0:functions,0:CALL,0:WHILE,0:FOR,0:ELSE,0:DO,0	13
0x221	              0x55	                                push rbp	        34	wrapper.c	FUNCTION_3
0x222	          0x4889e5	                            mov rbp, rsp	        34	wrapper.c	FUNCTION_3
0x225	        0x48897de8	             mov qword [rbp - 0x18], rdi	        34	wrapper.c	FUNCTION_3
0x229	    0x488b05000000	            mov rax, qword [0x04000270] 	        35	wrapper.c	FUNCTION_3
0x230	        0x488945f8	                mov qword [rbp - 8], rax	        35	wrapper.c	FUNCTION_3
0x234	      0x48837de800	               cmp qword [rbp - 0x18], 0	        36	wrapper.c	FUNCTION_3	IF_1
0x239	            0x7508	                           jne 0x4000283	        36	wrapper.c	FUNCTION_3	IF_1
0x23b	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        37	wrapper.c	FUNCTION_3	IF_1
0x243	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        38	wrapper.c	FUNCTION_3
0x247	    0x488905000000	            mov qword [0x0400028e], rax 	        38	wrapper.c	FUNCTION_3
0x24e	        0x488b45f8	                mov rax, qword [rbp - 8]	        39	wrapper.c	FUNCTION_3
0x252	              0x5d	                                 pop rbp	        40	wrapper.c	FUNCTION_3
0x253	              0xc3	                                     ret	        40	wrapper.c	FUNCTION_3
remove_or_warn	IF,0:SWITCH,0:functions,0:CALL,3:WHILE,0:FOR,0:ELSE,0:DO,0	18
0x14fb	              0x55	                                push rbp	       602	wrapper.c	FUNCTION_37
0x14fc	          0x4889e5	                            mov rbp, rsp	       602	wrapper.c	FUNCTION_37
0x14ff	        0x4883ec10	                           sub rsp, 0x10	       602	wrapper.c	FUNCTION_37
0x1503	          0x897dfc	                mov dword [rbp - 4], edi	       602	wrapper.c	FUNCTION_37
0x1506	        0x488975f0	             mov qword [rbp - 0x10], rsi	       602	wrapper.c	FUNCTION_37
0x150a	          0x8b45fc	                mov eax, dword [rbp - 4]	       603	wrapper.c	FUNCTION_37	CALL_3
0x150d	      0x2500f00000	                         and eax, 0xf000	       603	wrapper.c	FUNCTION_37	CALL_3
0x1512	      0x3d00e00000	                         cmp eax, 0xe000	       603	wrapper.c	FUNCTION_37	CALL_3
0x1517	            0x750e	                           jne 0x4001567	       603	wrapper.c	FUNCTION_37	CALL_3
0x1519	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       603	wrapper.c	FUNCTION_37	CALL_3
0x151d	          0x4889c7	                            mov rdi, rax	       603	wrapper.c	FUNCTION_37	CALL_3
0x1520	      0xe800000000	                          call 0x4001565	       603	wrapper.c	FUNCTION_37	CALL_3
0x1525	            0xeb0c	                           jmp 0x4001573	       603	wrapper.c	FUNCTION_37	CALL_3
0x1527	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       603	wrapper.c	FUNCTION_37	CALL_3
0x152b	          0x4889c7	                            mov rdi, rax	       603	wrapper.c	FUNCTION_37	CALL_3
0x152e	      0xe800000000	                          call 0x4001573	       603	wrapper.c	FUNCTION_37	CALL_3
0x1533	              0xc9	                                   leave	       604	wrapper.c	FUNCTION_37
0x1534	              0xc3	                                     ret	       604	wrapper.c	FUNCTION_37
xpread	IF,2:SWITCH,0:functions,0:CALL,1:WHILE,1:FOR,0:ELSE,0:DO,0	31
0xa2b	              0x55	                                push rbp	       300	wrapper.c	FUNCTION_18
0xa2c	          0x4889e5	                            mov rbp, rsp	       300	wrapper.c	FUNCTION_18
0xa2f	        0x4883ec30	                           sub rsp, 0x30	       300	wrapper.c	FUNCTION_18
0xa33	          0x897dec	             mov dword [rbp - 0x14], edi	       300	wrapper.c	FUNCTION_18
0xa36	        0x488975e0	             mov qword [rbp - 0x20], rsi	       300	wrapper.c	FUNCTION_18
0xa3a	        0x488955d8	             mov qword [rbp - 0x28], rdx	       300	wrapper.c	FUNCTION_18
0xa3e	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       300	wrapper.c	FUNCTION_18
0xa42	    0x48817dd80000	       cmp qword [rbp - 0x28], 0x800000 	       302	wrapper.c	FUNCTION_18	IF_1
0xa4a	            0x7608	                           jbe 0x4000a94	       302	wrapper.c	FUNCTION_18	IF_1
0xa4c	    0x48c745d80000	        mov qword [rbp - 0x28], 0x800000	       303	wrapper.c	FUNCTION_18	IF_1
0xa54	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       305	wrapper.c	FUNCTION_18	WHILE_1	CALL_1
0xa58	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       305	wrapper.c	FUNCTION_18	WHILE_1	CALL_1
0xa5c	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       305	wrapper.c	FUNCTION_18	WHILE_1	CALL_1
0xa60	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       305	wrapper.c	FUNCTION_18	WHILE_1	CALL_1
0xa63	            0x89c7	                            mov edi, eax	       305	wrapper.c	FUNCTION_18	WHILE_1	CALL_1
0xa65	      0xe800000000	                          call 0x4000aaa	       305	wrapper.c	FUNCTION_18	WHILE_1	CALL_1
0xa6a	        0x488945f8	                mov qword [rbp - 8], rax	       305	wrapper.c	FUNCTION_18	WHILE_1	CALL_1
0xa6e	      0x48837df800	                  cmp qword [rbp - 8], 0	       306	wrapper.c	FUNCTION_18	WHILE_1	IF_2
0xa73	            0x791a	                           jns 0x4000acf	       306	wrapper.c	FUNCTION_18	WHILE_1	IF_2
0xa75	      0xe800000000	                          call 0x4000aba	       306	wrapper.c	FUNCTION_18	WHILE_1	IF_2
0xa7a	            0x8b00	                    mov eax, dword [rax]	       306	wrapper.c	FUNCTION_18	WHILE_1	IF_2
0xa7c	          0x83f80b	                            cmp eax, 0xb	       306	wrapper.c	FUNCTION_18	WHILE_1	IF_2
0xa7f	            0x74d3	                            je 0x4000a94	       306	wrapper.c	FUNCTION_18	WHILE_1	IF_2
0xa81	      0xe800000000	                          call 0x4000ac6	       306	wrapper.c	FUNCTION_18	WHILE_1	IF_2
0xa86	            0x8b00	                    mov eax, dword [rax]	       306	wrapper.c	FUNCTION_18	WHILE_1	IF_2
0xa88	          0x83f804	                              cmp eax, 4	       306	wrapper.c	FUNCTION_18	WHILE_1	IF_2
0xa8b	            0x7502	                           jne 0x4000acf	       306	wrapper.c	FUNCTION_18	WHILE_1	IF_2
0xa8d	            0xebc5	                           jmp 0x4000a94	       309	wrapper.c	FUNCTION_18	WHILE_1
0xa8f	        0x488b45f8	                mov rax, qword [rbp - 8]	       308	wrapper.c	FUNCTION_18	WHILE_1
0xa93	              0xc9	                                   leave	       310	wrapper.c	FUNCTION_18
0xa94	              0xc3	                                     ret	       310	wrapper.c	FUNCTION_18
xdup	IF,1:SWITCH,0:functions,0:CALL,2:WHILE,0:FOR,0:ELSE,0:DO,0	16
0xc30	              0x55	                                push rbp	       373	wrapper.c	FUNCTION_22
0xc31	          0x4889e5	                            mov rbp, rsp	       373	wrapper.c	FUNCTION_22
0xc34	        0x4883ec20	                           sub rsp, 0x20	       373	wrapper.c	FUNCTION_22
0xc38	          0x897dec	             mov dword [rbp - 0x14], edi	       373	wrapper.c	FUNCTION_22
0xc3b	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       374	wrapper.c	FUNCTION_22	CALL_1
0xc3e	            0x89c7	                            mov edi, eax	       374	wrapper.c	FUNCTION_22	CALL_1
0xc40	      0xe800000000	                          call 0x4000c85	       374	wrapper.c	FUNCTION_22	CALL_1
0xc45	          0x8945fc	                mov dword [rbp - 4], eax	       374	wrapper.c	FUNCTION_22	CALL_1
0xc48	        0x837dfc00	                  cmp dword [rbp - 4], 0	       375	wrapper.c	FUNCTION_22	IF_1
0xc4c	            0x790f	                           jns 0x4000c9d	       375	wrapper.c	FUNCTION_22	IF_1
0xc4e	      0xbf00000000	                              mov edi, 0	       376	wrapper.c	FUNCTION_22	CALL_2
0xc53	      0xb800000000	                              mov eax, 0	       376	wrapper.c	FUNCTION_22	CALL_2
0xc58	      0xe800000000	                          call 0x4000c9d	       376	wrapper.c	FUNCTION_22	CALL_2
0xc5d	          0x8b45fc	                mov eax, dword [rbp - 4]	       377	wrapper.c	FUNCTION_22
0xc60	              0xc9	                                   leave	       378	wrapper.c	FUNCTION_22
0xc61	              0xc3	                                     ret	       378	wrapper.c	FUNCTION_22
xgetcwd	IF,1:SWITCH,0:functions,0:CALL,4:WHILE,0:FOR,0:ELSE,0:DO,0	29
0x162c	              0x55	                                push rbp	       629	wrapper.c	FUNCTION_41
0x162d	          0x4889e5	                            mov rbp, rsp	       629	wrapper.c	FUNCTION_41
0x1630	        0x4883ec20	                           sub rsp, 0x20	       629	wrapper.c	FUNCTION_41
0x1634	    0x64488b042528	                mov rax, qword fs:[0x28]	       629	wrapper.c	FUNCTION_41
0x163d	        0x488945f8	                mov qword [rbp - 8], rax	       629	wrapper.c	FUNCTION_41
0x1641	            0x31c0	                            xor eax, eax	       629	wrapper.c	FUNCTION_41
0x1643	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       630	wrapper.c	FUNCTION_41
0x164b	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       630	wrapper.c	FUNCTION_41
0x1653	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       630	wrapper.c	FUNCTION_41
0x165b	        0x488d45e0	                   lea rax, [rbp - 0x20]	       631	wrapper.c	FUNCTION_41	IF_1	CALL_1
0x165f	          0x4889c7	                            mov rdi, rax	       631	wrapper.c	FUNCTION_41	IF_1	CALL_1
0x1662	      0xe800000000	                          call 0x40016a7	       631	wrapper.c	FUNCTION_41	IF_1	CALL_1
0x1667	            0x85c0	                           test eax, eax	       631	wrapper.c	FUNCTION_41	IF_1	CALL_1
0x1669	            0x7417	                            je 0x40016c2	       631	wrapper.c	FUNCTION_41	IF_1	CALL_1
0x166b	      0xbf00000000	                              mov edi, 0	       632	wrapper.c	FUNCTION_41	CALL_3
0x1670	      0xe8cdeaffff	                               call sym.	       632	wrapper.c	FUNCTION_41	CALL_3
0x1675	          0x4889c7	                            mov rdi, rax	       632	wrapper.c	FUNCTION_41	CALL_3
0x1678	      0xb800000000	                              mov eax, 0	       632	wrapper.c	FUNCTION_41	CALL_3
0x167d	      0xe800000000	                          call 0x40016c2	       632	wrapper.c	FUNCTION_41	CALL_3
0x1682	        0x488d45e0	                   lea rax, [rbp - 0x20]	       633	wrapper.c	FUNCTION_41	CALL_4
0x1686	      0xbe00000000	                              mov esi, 0	       633	wrapper.c	FUNCTION_41	CALL_4
0x168b	          0x4889c7	                            mov rdi, rax	       633	wrapper.c	FUNCTION_41	CALL_4
0x168e	      0xe800000000	                          call 0x40016d3	       633	wrapper.c	FUNCTION_41	CALL_4
0x1693	        0x488b55f8	                mov rdx, qword [rbp - 8]	       634	wrapper.c	FUNCTION_41
0x1697	    0x644833142528	                xor rdx, qword fs:[0x28]	       634	wrapper.c	FUNCTION_41
0x16a0	            0x7405	                            je 0x40016e7	       634	wrapper.c	FUNCTION_41
0x16a2	      0xe800000000	                          call 0x40016e7	       634	wrapper.c	FUNCTION_41
0x16a7	              0xc9	                                   leave	       634	wrapper.c	FUNCTION_41
0x16a8	              0xc3	                                     ret	       634	wrapper.c	FUNCTION_41
_	IF,1:SWITCH,0:functions,0:CALL,2:WHILE,0:FOR,0:ELSE,0:DO,0	15
0x142	              0x55	                                push rbp	        51	gettext.h	FUNCTION_87
0x143	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_87
0x146	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_87
0x14a	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_87
0x14e	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_87	IF_1
0x152	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_87	IF_1
0x155	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_87	IF_1
0x157	            0x7507	                           jne 0x40001a0	        52	gettext.h	FUNCTION_87	IF_1
0x159	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_87	IF_1
0x15e	            0xeb0c	                           jmp 0x40001ac	        53	gettext.h	FUNCTION_87	IF_1
0x160	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_87	CALL_2
0x164	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_87	CALL_2
0x167	      0xe800000000	                          call 0x40001ac	        54	gettext.h	FUNCTION_87	CALL_2
0x16c	              0xc9	                                   leave	        55	gettext.h	FUNCTION_87
0x16d	              0xc3	                                     ret	        55	gettext.h	FUNCTION_87
do_xmalloc	IF,6:SWITCH,0:functions,0:CALL,9:WHILE,0:FOR,0:ELSE,1:DO,0	62
0x2c5	              0x55	                                push rbp	        55	wrapper.c	FUNCTION_5
0x2c6	          0x4889e5	                            mov rbp, rsp	        55	wrapper.c	FUNCTION_5
0x2c9	        0x4883ec20	                           sub rsp, 0x20	        55	wrapper.c	FUNCTION_5
0x2cd	        0x48897de8	             mov qword [rbp - 0x18], rdi	        55	wrapper.c	FUNCTION_5
0x2d1	          0x8975e4	             mov dword [rbp - 0x1c], esi	        55	wrapper.c	FUNCTION_5
0x2d4	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	        58	wrapper.c	FUNCTION_5	IF_1	CALL_1
0x2d7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        58	wrapper.c	FUNCTION_5	IF_1	CALL_1
0x2db	            0x89d6	                            mov esi, edx	        58	wrapper.c	FUNCTION_5	IF_1	CALL_1
0x2dd	          0x4889c7	                            mov rdi, rax	        58	wrapper.c	FUNCTION_5	IF_1	CALL_1
0x2e0	      0xe894feffff	             call sym.memory_limit_check	        58	wrapper.c	FUNCTION_5	IF_1	CALL_1
0x2e5	            0x85c0	                           test eax, eax	        58	wrapper.c	FUNCTION_5	IF_1	CALL_1
0x2e7	            0x740a	                            je 0x4000333	        58	wrapper.c	FUNCTION_5	IF_1	CALL_1
0x2e9	      0xb800000000	                              mov eax, 0	        59	wrapper.c	FUNCTION_5	IF_1
0x2ee	      0xe9bc000000	                           jmp 0x40003ef	        59	wrapper.c	FUNCTION_5	IF_1
0x2f3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        60	wrapper.c	FUNCTION_5	CALL_2
0x2f7	          0x4889c7	                            mov rdi, rax	        60	wrapper.c	FUNCTION_5	CALL_2
0x2fa	      0xe800000000	                          call 0x400033f	        60	wrapper.c	FUNCTION_5	CALL_2
0x2ff	        0x488945f8	                mov qword [rbp - 8], rax	        60	wrapper.c	FUNCTION_5	CALL_2
0x303	      0x48837df800	                  cmp qword [rbp - 8], 0	        61	wrapper.c	FUNCTION_5	IF_2
0x308	            0x7515	                           jne 0x400035f	        61	wrapper.c	FUNCTION_5	IF_2
0x30a	      0x48837de800	               cmp qword [rbp - 0x18], 0	        61	wrapper.c	FUNCTION_5	IF_2
0x30f	            0x750e	                           jne 0x400035f	        61	wrapper.c	FUNCTION_5	IF_2
0x311	      0xbf01000000	                              mov edi, 1	        62	wrapper.c	FUNCTION_5	CALL_3
0x316	      0xe800000000	                          call 0x400035b	        62	wrapper.c	FUNCTION_5	CALL_3
0x31b	        0x488945f8	                mov qword [rbp - 8], rax	        62	wrapper.c	FUNCTION_5	CALL_3
0x31f	      0x48837df800	                  cmp qword [rbp - 8], 0	        63	wrapper.c	FUNCTION_5	IF_3
0x324	     0xf8581000000	                           jne 0x40003eb	        63	wrapper.c	FUNCTION_5	IF_3
0x32a	    0x488b05000000	            mov rax, qword [0x04000371] 	        64	wrapper.c	FUNCTION_5	IF_3	CALL_4
0x331	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        64	wrapper.c	FUNCTION_5	IF_3	CALL_4
0x335	          0x4889d7	                            mov rdi, rdx	        64	wrapper.c	FUNCTION_5	IF_3	CALL_4
0x338	            0xffd0	                                call rax	        64	wrapper.c	FUNCTION_5	IF_3	CALL_4
0x33a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        65	wrapper.c	FUNCTION_5	IF_3	CALL_5
0x33e	          0x4889c7	                            mov rdi, rax	        65	wrapper.c	FUNCTION_5	IF_3	CALL_5
0x341	      0xe800000000	                          call 0x4000386	        65	wrapper.c	FUNCTION_5	IF_3	CALL_5
0x346	        0x488945f8	                mov qword [rbp - 8], rax	        65	wrapper.c	FUNCTION_5	IF_3	CALL_5
0x34a	      0x48837df800	                  cmp qword [rbp - 8], 0	        66	wrapper.c	FUNCTION_5	IF_3	IF_4
0x34f	            0x7515	                           jne 0x40003a6	        66	wrapper.c	FUNCTION_5	IF_3	IF_4
0x351	      0x48837de800	               cmp qword [rbp - 0x18], 0	        66	wrapper.c	FUNCTION_5	IF_3	IF_4
0x356	            0x750e	                           jne 0x40003a6	        66	wrapper.c	FUNCTION_5	IF_3	IF_4
0x358	      0xbf01000000	                              mov edi, 1	        67	wrapper.c	FUNCTION_5	IF_3	CALL_6
0x35d	      0xe800000000	                          call 0x40003a2	        67	wrapper.c	FUNCTION_5	IF_3	CALL_6
0x362	        0x488945f8	                mov qword [rbp - 8], rax	        67	wrapper.c	FUNCTION_5	IF_3	CALL_6
0x366	      0x48837df800	                  cmp qword [rbp - 8], 0	        68	wrapper.c	FUNCTION_5	IF_3	IF_5
0x36b	            0x753e	                           jne 0x40003eb	        68	wrapper.c	FUNCTION_5	IF_3	IF_5
0x36d	        0x837de400	               cmp dword [rbp - 0x1c], 0	        69	wrapper.c	FUNCTION_5	IF_3	IF_5	IF_6
0x371	            0x7516	                           jne 0x40003c9	        69	wrapper.c	FUNCTION_5	IF_3	IF_5	IF_6
0x373	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        70	wrapper.c	FUNCTION_5	IF_3	IF_5	IF_6	CALL_7
0x377	          0x4889c6	                            mov rsi, rax	        70	wrapper.c	FUNCTION_5	IF_3	IF_5	IF_6	CALL_7
0x37a	      0xbf00000000	                              mov edi, 0	        70	wrapper.c	FUNCTION_5	IF_3	IF_5	IF_6	CALL_7
0x37f	      0xb800000000	                              mov eax, 0	        70	wrapper.c	FUNCTION_5	IF_3	IF_5	IF_6	CALL_7
0x384	      0xe800000000	                          call 0x40003c9	        70	wrapper.c	FUNCTION_5	IF_3	IF_5	IF_6	CALL_7
0x389	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        73	wrapper.c	FUNCTION_5	IF_3	IF_5	ELSE_1	CALL_8
0x38d	          0x4889c6	                            mov rsi, rax	        73	wrapper.c	FUNCTION_5	IF_3	IF_5	ELSE_1	CALL_8
0x390	      0xbf00000000	                              mov edi, 0	        73	wrapper.c	FUNCTION_5	IF_3	IF_5	ELSE_1	CALL_8
0x395	      0xb800000000	                              mov eax, 0	        73	wrapper.c	FUNCTION_5	IF_3	IF_5	ELSE_1	CALL_8
0x39a	      0xe800000000	                          call 0x40003df	        73	wrapper.c	FUNCTION_5	IF_3	IF_5	ELSE_1	CALL_8
0x39f	      0xe85cfcffff	                    call sym.const_error	        73	wrapper.c	FUNCTION_5	IF_3	IF_5	ELSE_1	CALL_8
0x3a4	      0xb800000000	                              mov eax, 0	        75	wrapper.c	FUNCTION_5	IF_3	IF_5	ELSE_1
0x3a9	            0xeb04	                           jmp 0x40003ef	        75	wrapper.c	FUNCTION_5	IF_3	IF_5	ELSE_1
0x3ab	        0x488b45f8	                mov rax, qword [rbp - 8]	        82	wrapper.c	FUNCTION_5
0x3af	              0xc9	                                   leave	        83	wrapper.c	FUNCTION_5
0x3b0	              0xc3	                                     ret	        83	wrapper.c	FUNCTION_5
warn_on_inaccessible	IF,0:SWITCH,0:functions,0:CALL,2:WHILE,0:FOR,0:ELSE,0:DO,0	15
0xde8	              0x55	                                push rbp	       423	wrapper.c	ELSE_1	FUNCTION_26
0xde9	          0x4889e5	                            mov rbp, rsp	       423	wrapper.c	ELSE_1	FUNCTION_26
0xdec	        0x4883ec10	                           sub rsp, 0x10	       423	wrapper.c	ELSE_1	FUNCTION_26
0xdf0	        0x48897df8	                mov qword [rbp - 8], rdi	       423	wrapper.c	ELSE_1	FUNCTION_26
0xdf4	      0xbf00000000	                              mov edi, 0	       424	wrapper.c	ELSE_1	FUNCTION_26	CALL_2
0xdf9	      0xe844f3ffff	                               call sym.	       424	wrapper.c	ELSE_1	FUNCTION_26	CALL_2
0xdfe	          0x4889c2	                            mov rdx, rax	       424	wrapper.c	ELSE_1	FUNCTION_26	CALL_2
0xe01	        0x488b45f8	                mov rax, qword [rbp - 8]	       424	wrapper.c	ELSE_1	FUNCTION_26	CALL_2
0xe05	          0x4889c6	                            mov rsi, rax	       424	wrapper.c	ELSE_1	FUNCTION_26	CALL_2
0xe08	          0x4889d7	                            mov rdi, rdx	       424	wrapper.c	ELSE_1	FUNCTION_26	CALL_2
0xe0b	      0xb800000000	                              mov eax, 0	       424	wrapper.c	ELSE_1	FUNCTION_26	CALL_2
0xe10	      0xe800000000	                          call 0x4000e55	       424	wrapper.c	ELSE_1	FUNCTION_26	CALL_2
0xe15	              0x90	                                     nop	       425	wrapper.c	ELSE_1	FUNCTION_26
0xe16	              0xc9	                                   leave	       425	wrapper.c	ELSE_1	FUNCTION_26
0xe17	              0xc3	                                     ret	       425	wrapper.c	ELSE_1	FUNCTION_26
xopen	IF,5:SWITCH,0:functions,0:CALL,10:WHILE,0:FOR,1:ELSE,2:DO,0	104
0x6e1	              0x55	                                push rbp	       200	wrapper.c	FUNCTION_14
0x6e2	          0x4889e5	                            mov rbp, rsp	       200	wrapper.c	FUNCTION_14
0x6e5	    0x4881ecf00000	                           sub rsp, 0xf0	       200	wrapper.c	FUNCTION_14
0x6ec	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	       200	wrapper.c	FUNCTION_14
0x6f3	    0x89b514ffffff	             mov dword [rbp - 0xec], esi	       200	wrapper.c	FUNCTION_14
0x6f9	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       200	wrapper.c	FUNCTION_14
0x700	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       200	wrapper.c	FUNCTION_14
0x707	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       200	wrapper.c	FUNCTION_14
0x70e	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       200	wrapper.c	FUNCTION_14
0x715	            0x84c0	                             test al, al	       200	wrapper.c	FUNCTION_14
0x717	            0x7420	                            je 0x4000779	       200	wrapper.c	FUNCTION_14
0x719	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       200	wrapper.c	FUNCTION_14
0x71d	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       200	wrapper.c	FUNCTION_14
0x721	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       200	wrapper.c	FUNCTION_14
0x725	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       200	wrapper.c	FUNCTION_14
0x729	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       200	wrapper.c	FUNCTION_14
0x72d	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       200	wrapper.c	FUNCTION_14
0x731	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       200	wrapper.c	FUNCTION_14
0x735	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       200	wrapper.c	FUNCTION_14
0x739	    0x64488b042528	                mov rax, qword fs:[0x28]	       200	wrapper.c	FUNCTION_14
0x742	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       200	wrapper.c	FUNCTION_14
0x749	            0x31c0	                            xor eax, eax	       200	wrapper.c	FUNCTION_14
0x74b	    0xc78528ffffff	               mov dword [rbp - 0xd8], 0	       201	wrapper.c	FUNCTION_14
0x755	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	       210	wrapper.c	FUNCTION_14	CALL_1
0x75f	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       210	wrapper.c	FUNCTION_14	CALL_1
0x769	        0x488d4510	                   lea rax, [rbp + 0x10]	       210	wrapper.c	FUNCTION_14	CALL_1
0x76d	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       210	wrapper.c	FUNCTION_14	CALL_1
0x774	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       210	wrapper.c	FUNCTION_14	CALL_1
0x77b	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       210	wrapper.c	FUNCTION_14	CALL_1
0x782	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	       211	wrapper.c	FUNCTION_14	IF_1
0x788	          0x83e040	                           and eax, 0x40	       211	wrapper.c	FUNCTION_14	IF_1
0x78b	            0x85c0	                           test eax, eax	       211	wrapper.c	FUNCTION_14	IF_1
0x78d	            0x7448	                            je 0x4000817	       211	wrapper.c	FUNCTION_14	IF_1
0x78f	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	       212	wrapper.c	FUNCTION_14	CALL_2
0x795	          0x83f830	                           cmp eax, 0x30	       212	wrapper.c	FUNCTION_14	CALL_2
0x798	            0x7323	                           jae 0x40007fd	       212	wrapper.c	FUNCTION_14	CALL_2
0x79a	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       212	wrapper.c	FUNCTION_14	CALL_2
0x7a1	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	       212	wrapper.c	FUNCTION_14	CALL_2
0x7a7	            0x89d2	                            mov edx, edx	       212	wrapper.c	FUNCTION_14	CALL_2
0x7a9	          0x4801d0	                            add rax, rdx	       212	wrapper.c	FUNCTION_14	CALL_2
0x7ac	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	       212	wrapper.c	FUNCTION_14	CALL_2
0x7b2	          0x83c208	                              add edx, 8	       212	wrapper.c	FUNCTION_14	CALL_2
0x7b5	    0x899530ffffff	             mov dword [rbp - 0xd0], edx	       212	wrapper.c	FUNCTION_14	CALL_2
0x7bb	            0xeb12	                           jmp 0x400080f	       212	wrapper.c	FUNCTION_14	CALL_2
0x7bd	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       212	wrapper.c	FUNCTION_14	CALL_2
0x7c4	        0x488d5008	                      lea rdx, [rax + 8]	       212	wrapper.c	FUNCTION_14	CALL_2
0x7c8	    0x48899538ffff	             mov qword [rbp - 0xc8], rdx	       212	wrapper.c	FUNCTION_14	CALL_2
0x7cf	            0x8b00	                    mov eax, dword [rax]	       212	wrapper.c	FUNCTION_14	CALL_2
0x7d1	    0x898528ffffff	             mov dword [rbp - 0xd8], eax	       212	wrapper.c	FUNCTION_14	CALL_2
0x7d7	    0x8b9528ffffff	             mov edx, dword [rbp - 0xd8]	       216	wrapper.c	FUNCTION_14	FOR_1	CALL_4
0x7dd	    0x8b8d14ffffff	             mov ecx, dword [rbp - 0xec]	       216	wrapper.c	FUNCTION_14	FOR_1	CALL_4
0x7e3	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       216	wrapper.c	FUNCTION_14	FOR_1	CALL_4
0x7ea	            0x89ce	                            mov esi, ecx	       216	wrapper.c	FUNCTION_14	FOR_1	CALL_4
0x7ec	          0x4889c7	                            mov rdi, rax	       216	wrapper.c	FUNCTION_14	FOR_1	CALL_4
0x7ef	      0xb800000000	                              mov eax, 0	       216	wrapper.c	FUNCTION_14	FOR_1	CALL_4
0x7f4	      0xe800000000	                          call 0x4000839	       216	wrapper.c	FUNCTION_14	FOR_1	CALL_4
0x7f9	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	       216	wrapper.c	FUNCTION_14	FOR_1	CALL_4
0x7ff	    0x83bd2cffffff	               cmp dword [rbp - 0xd4], 0	       217	wrapper.c	FUNCTION_14	FOR_1	IF_2
0x806	            0x7821	                            js 0x4000869	       217	wrapper.c	FUNCTION_14	FOR_1	IF_2
0x808	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       218	wrapper.c	FUNCTION_14	FOR_1	IF_2
0x80e	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	       229	wrapper.c	FUNCTION_14
0x815	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       229	wrapper.c	FUNCTION_14
0x81e	     0xf849e000000	                            je 0x4000902	       229	wrapper.c	FUNCTION_14
0x824	      0xe994000000	                           jmp 0x40008fd	       229	wrapper.c	FUNCTION_14
0x829	      0xe800000000	                          call 0x400086e	       219	wrapper.c	FUNCTION_14	FOR_1	IF_3
0x82e	            0x8b00	                    mov eax, dword [rax]	       219	wrapper.c	FUNCTION_14	FOR_1	IF_3
0x830	          0x83f804	                              cmp eax, 4	       219	wrapper.c	FUNCTION_14	FOR_1	IF_3
0x833	            0x7502	                           jne 0x4000877	       219	wrapper.c	FUNCTION_14	FOR_1	IF_3
0x835	            0xeba0	                           jmp 0x4000817	       228	wrapper.c	FUNCTION_14	FOR_1
0x837	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	       222	wrapper.c	FUNCTION_14	FOR_1	IF_4
0x83d	          0x83e002	                              and eax, 2	       222	wrapper.c	FUNCTION_14	FOR_1	IF_4
0x840	            0x85c0	                           test eax, eax	       222	wrapper.c	FUNCTION_14	FOR_1	IF_4
0x842	            0x7424	                            je 0x40008a8	       222	wrapper.c	FUNCTION_14	FOR_1	IF_4
0x844	      0xbf00000000	                              mov edi, 0	       223	wrapper.c	FUNCTION_14	FOR_1	CALL_6
0x849	      0xe8f4f8ffff	                               call sym.	       223	wrapper.c	FUNCTION_14	FOR_1	CALL_6
0x84e	          0x4889c2	                            mov rdx, rax	       223	wrapper.c	FUNCTION_14	FOR_1	CALL_6
0x851	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       223	wrapper.c	FUNCTION_14	FOR_1	CALL_6
0x858	          0x4889c6	                            mov rsi, rax	       223	wrapper.c	FUNCTION_14	FOR_1	CALL_6
0x85b	          0x4889d7	                            mov rdi, rdx	       223	wrapper.c	FUNCTION_14	FOR_1	CALL_6
0x85e	      0xb800000000	                              mov eax, 0	       223	wrapper.c	FUNCTION_14	FOR_1	CALL_6
0x863	      0xe800000000	                          call 0x40008a8	       223	wrapper.c	FUNCTION_14	FOR_1	CALL_6
0x868	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	       224	wrapper.c	FUNCTION_14	FOR_1	ELSE_1	IF_5
0x86e	          0x83e001	                              and eax, 1	       224	wrapper.c	FUNCTION_14	FOR_1	ELSE_1	IF_5
0x871	            0x85c0	                           test eax, eax	       224	wrapper.c	FUNCTION_14	FOR_1	ELSE_1	IF_5
0x873	            0x7424	                            je 0x40008d9	       224	wrapper.c	FUNCTION_14	FOR_1	ELSE_1	IF_5
0x875	      0xbf00000000	                              mov edi, 0	       225	wrapper.c	FUNCTION_14	FOR_1	ELSE_1	IF_5
0x87a	      0xe8c3f8ffff	                               call sym.	       225	wrapper.c	FUNCTION_14	FOR_1	ELSE_1	IF_5
0x87f	          0x4889c2	                            mov rdx, rax	       225	wrapper.c	FUNCTION_14	FOR_1	ELSE_1	IF_5
0x882	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       225	wrapper.c	FUNCTION_14	FOR_1	ELSE_1	IF_5
0x889	          0x4889c6	                            mov rsi, rax	       225	wrapper.c	FUNCTION_14	FOR_1	ELSE_1	IF_5
0x88c	          0x4889d7	                            mov rdi, rdx	       225	wrapper.c	FUNCTION_14	FOR_1	ELSE_1	IF_5
0x88f	      0xb800000000	                              mov eax, 0	       225	wrapper.c	FUNCTION_14	FOR_1	ELSE_1	IF_5
0x894	      0xe800000000	                          call 0x40008d9	       225	wrapper.c	FUNCTION_14	FOR_1	ELSE_1	IF_5
0x899	      0xbf00000000	                              mov edi, 0	       227	wrapper.c	FUNCTION_14	FOR_1	CALL_10
0x89e	      0xe89ff8ffff	                               call sym.	       227	wrapper.c	FUNCTION_14	FOR_1	CALL_10
0x8a3	          0x4889c2	                            mov rdx, rax	       227	wrapper.c	FUNCTION_14	FOR_1	CALL_10
0x8a6	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       227	wrapper.c	FUNCTION_14	FOR_1	CALL_10
0x8ad	          0x4889c6	                            mov rsi, rax	       227	wrapper.c	FUNCTION_14	FOR_1	CALL_10
0x8b0	          0x4889d7	                            mov rdi, rdx	       227	wrapper.c	FUNCTION_14	FOR_1	CALL_10
0x8b3	      0xb800000000	                              mov eax, 0	       227	wrapper.c	FUNCTION_14	FOR_1	CALL_10
0x8b8	      0xe800000000	                          call 0x40008fd	       227	wrapper.c	FUNCTION_14	FOR_1	CALL_10
0x8bd	      0xe800000000	                          call 0x4000902	       229	wrapper.c	FUNCTION_14
0x8c2	              0xc9	                                   leave	       229	wrapper.c	FUNCTION_14
0x8c3	              0xc3	                                     ret	       229	wrapper.c	FUNCTION_14
xmkstemp_mode	IF,2:SWITCH,0:functions,0:CALL,4:WHILE,0:FOR,0:ELSE,0:DO,0	51
0x12c6	              0x55	                                push rbp	       545	wrapper.c	FUNCTION_32
0x12c7	          0x4889e5	                            mov rbp, rsp	       545	wrapper.c	FUNCTION_32
0x12ca	    0x4881ec301000	                         sub rsp, 0x1030	       545	wrapper.c	FUNCTION_32
0x12d1	    0x4889bdd8efff	           mov qword [rbp - 0x1028], rdi	       545	wrapper.c	FUNCTION_32
0x12d8	    0x89b5d4efffff	           mov dword [rbp - 0x102c], esi	       545	wrapper.c	FUNCTION_32
0x12de	    0x64488b042528	                mov rax, qword fs:[0x28]	       545	wrapper.c	FUNCTION_32
0x12e7	        0x488945f8	                mov qword [rbp - 8], rax	       545	wrapper.c	FUNCTION_32
0x12eb	            0x31c0	                            xor eax, eax	       545	wrapper.c	FUNCTION_32
0x12ed	    0x488b8dd8efff	           mov rcx, qword [rbp - 0x1028]	       548	wrapper.c	FUNCTION_32	CALL_1
0x12f4	    0x488d85f0efff	                 lea rax, [rbp - 0x1010]	       548	wrapper.c	FUNCTION_32	CALL_1
0x12fb	      0xba00100000	                         mov edx, 0x1000	       548	wrapper.c	FUNCTION_32	CALL_1
0x1300	          0x4889ce	                            mov rsi, rcx	       548	wrapper.c	FUNCTION_32	CALL_1
0x1303	          0x4889c7	                            mov rdi, rax	       548	wrapper.c	FUNCTION_32	CALL_1
0x1306	      0xe800000000	                          call 0x400134b	       548	wrapper.c	FUNCTION_32	CALL_1
0x130b	    0x8b95d4efffff	           mov edx, dword [rbp - 0x102c]	       550	wrapper.c	FUNCTION_32	CALL_2
0x1311	    0x488b85d8efff	           mov rax, qword [rbp - 0x1028]	       550	wrapper.c	FUNCTION_32	CALL_2
0x1318	            0x89d6	                            mov esi, edx	       550	wrapper.c	FUNCTION_32	CALL_2
0x131a	          0x4889c7	                            mov rdi, rax	       550	wrapper.c	FUNCTION_32	CALL_2
0x131d	      0xe800000000	                          call 0x4001362	       550	wrapper.c	FUNCTION_32	CALL_2
0x1322	    0x8985e0efffff	           mov dword [rbp - 0x1020], eax	       550	wrapper.c	FUNCTION_32	CALL_2
0x1328	    0x83bde0efffff	             cmp dword [rbp - 0x1020], 0	       551	wrapper.c	FUNCTION_32	IF_1
0x132f	            0x7968	                           jns 0x40013d9	       551	wrapper.c	FUNCTION_32	IF_1
0x1331	      0xe800000000	                          call 0x4001376	       552	wrapper.c	FUNCTION_32	IF_1
0x1336	            0x8b00	                    mov eax, dword [rax]	       552	wrapper.c	FUNCTION_32	IF_1
0x1338	    0x8985e4efffff	           mov dword [rbp - 0x101c], eax	       552	wrapper.c	FUNCTION_32	IF_1
0x133e	    0x488b85d8efff	           mov rax, qword [rbp - 0x1028]	       555	wrapper.c	FUNCTION_32	IF_1	IF_2
0x1345	           0xfb600	                   movzx eax, byte [rax]	       555	wrapper.c	FUNCTION_32	IF_1	IF_2
0x1348	            0x84c0	                             test al, al	       555	wrapper.c	FUNCTION_32	IF_1	IF_2
0x134a	            0x750e	                           jne 0x400139a	       555	wrapper.c	FUNCTION_32	IF_1	IF_2
0x134c	    0x488d85f0efff	                 lea rax, [rbp - 0x1010]	       556	wrapper.c	FUNCTION_32	IF_1	IF_2
0x1353	    0x488985d8efff	           mov qword [rbp - 0x1028], rax	       556	wrapper.c	FUNCTION_32	IF_1	IF_2
0x135a	    0x488b85d8efff	           mov rax, qword [rbp - 0x1028]	       558	wrapper.c	FUNCTION_32	IF_1	CALL_3
0x1361	          0x4889c7	                            mov rdi, rax	       558	wrapper.c	FUNCTION_32	IF_1	CALL_3
0x1364	      0xe800000000	                          call 0x40013a9	       558	wrapper.c	FUNCTION_32	IF_1	CALL_3
0x1369	    0x488985e8efff	           mov qword [rbp - 0x1018], rax	       558	wrapper.c	FUNCTION_32	IF_1	CALL_3
0x1370	      0xe800000000	                          call 0x40013b5	       559	wrapper.c	FUNCTION_32	IF_1
0x1375	          0x4889c2	                            mov rdx, rax	       559	wrapper.c	FUNCTION_32	IF_1
0x1378	    0x8b85e4efffff	           mov eax, dword [rbp - 0x101c]	       559	wrapper.c	FUNCTION_32	IF_1
0x137e	            0x8902	                    mov dword [rdx], eax	       559	wrapper.c	FUNCTION_32	IF_1
0x1380	    0x488b85e8efff	           mov rax, qword [rbp - 0x1018]	       560	wrapper.c	FUNCTION_32	IF_1	CALL_4
0x1387	          0x4889c6	                            mov rsi, rax	       560	wrapper.c	FUNCTION_32	IF_1	CALL_4
0x138a	      0xbf00000000	                              mov edi, 0	       560	wrapper.c	FUNCTION_32	IF_1	CALL_4
0x138f	      0xb800000000	                              mov eax, 0	       560	wrapper.c	FUNCTION_32	IF_1	CALL_4
0x1394	      0xe800000000	                          call 0x40013d9	       560	wrapper.c	FUNCTION_32	IF_1	CALL_4
0x1399	    0x8b85e0efffff	           mov eax, dword [rbp - 0x1020]	       563	wrapper.c	FUNCTION_32
0x139f	        0x488b4df8	                mov rcx, qword [rbp - 8]	       564	wrapper.c	FUNCTION_32
0x13a3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       564	wrapper.c	FUNCTION_32
0x13ac	            0x7405	                            je 0x40013f3	       564	wrapper.c	FUNCTION_32
0x13ae	      0xe800000000	                          call 0x40013f3	       564	wrapper.c	FUNCTION_32
0x13b3	              0xc9	                                   leave	       564	wrapper.c	FUNCTION_32
0x13b4	              0xc3	                                     ret	       564	wrapper.c	FUNCTION_32
access_or_warn	IF,1:SWITCH,0:functions,0:CALL,3:WHILE,0:FOR,0:ELSE,0:DO,0	28
0x156f	              0x55	                                push rbp	       613	wrapper.c	FUNCTION_39
0x1570	          0x4889e5	                            mov rbp, rsp	       613	wrapper.c	FUNCTION_39
0x1573	        0x4883ec20	                           sub rsp, 0x20	       613	wrapper.c	FUNCTION_39
0x1577	        0x48897de8	             mov qword [rbp - 0x18], rdi	       613	wrapper.c	FUNCTION_39
0x157b	          0x8975e4	             mov dword [rbp - 0x1c], esi	       613	wrapper.c	FUNCTION_39
0x157e	          0x8955e0	             mov dword [rbp - 0x20], edx	       613	wrapper.c	FUNCTION_39
0x1581	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       614	wrapper.c	FUNCTION_39	CALL_1
0x1584	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       614	wrapper.c	FUNCTION_39	CALL_1
0x1588	            0x89d6	                            mov esi, edx	       614	wrapper.c	FUNCTION_39	CALL_1
0x158a	          0x4889c7	                            mov rdi, rax	       614	wrapper.c	FUNCTION_39	CALL_1
0x158d	      0xe800000000	                          call 0x40015d2	       614	wrapper.c	FUNCTION_39	CALL_1
0x1592	          0x8945fc	                mov dword [rbp - 4], eax	       614	wrapper.c	FUNCTION_39	CALL_1
0x1595	        0x837dfc00	                  cmp dword [rbp - 4], 0	       615	wrapper.c	FUNCTION_39	IF_1	CALL_2
0x1599	            0x7423	                            je 0x40015fe	       615	wrapper.c	FUNCTION_39	IF_1	CALL_2
0x159b	      0xe800000000	                          call 0x40015e0	       615	wrapper.c	FUNCTION_39	IF_1	CALL_2
0x15a0	            0x8b00	                    mov eax, dword [rax]	       615	wrapper.c	FUNCTION_39	IF_1	CALL_2
0x15a2	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       615	wrapper.c	FUNCTION_39	IF_1	CALL_2
0x15a5	            0x89d6	                            mov esi, edx	       615	wrapper.c	FUNCTION_39	IF_1	CALL_2
0x15a7	            0x89c7	                            mov edi, eax	       615	wrapper.c	FUNCTION_39	IF_1	CALL_2
0x15a9	      0xe887ffffff	             call sym.access_error_is_ok	       615	wrapper.c	FUNCTION_39	IF_1	CALL_2
0x15ae	            0x85c0	                           test eax, eax	       615	wrapper.c	FUNCTION_39	IF_1	CALL_2
0x15b0	            0x750c	                           jne 0x40015fe	       615	wrapper.c	FUNCTION_39	IF_1	CALL_2
0x15b2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       616	wrapper.c	FUNCTION_39	CALL_3
0x15b6	          0x4889c7	                            mov rdi, rax	       616	wrapper.c	FUNCTION_39	CALL_3
0x15b9	      0xe82af8ffff	           call sym.warn_on_inaccessible	       616	wrapper.c	FUNCTION_39	CALL_3
0x15be	          0x8b45fc	                mov eax, dword [rbp - 4]	       617	wrapper.c	FUNCTION_39
0x15c1	              0xc9	                                   leave	       618	wrapper.c	FUNCTION_39
0x15c2	              0xc3	                                     ret	       618	wrapper.c	FUNCTION_39
rmdir_or_warn	IF,0:SWITCH,0:functions,0:CALL,2:WHILE,0:FOR,0:ELSE,0:DO,0	14
0x14ce	              0x55	                                push rbp	       597	wrapper.c	FUNCTION_36
0x14cf	          0x4889e5	                            mov rbp, rsp	       597	wrapper.c	FUNCTION_36
0x14d2	        0x4883ec10	                           sub rsp, 0x10	       597	wrapper.c	FUNCTION_36
0x14d6	        0x48897df8	                mov qword [rbp - 8], rdi	       597	wrapper.c	FUNCTION_36
0x14da	        0x488b45f8	                mov rax, qword [rbp - 8]	       598	wrapper.c	FUNCTION_36	CALL_2
0x14de	          0x4889c7	                            mov rdi, rax	       598	wrapper.c	FUNCTION_36	CALL_2
0x14e1	      0xe800000000	                          call 0x4001526	       598	wrapper.c	FUNCTION_36	CALL_2
0x14e6	            0x89c2	                            mov edx, eax	       598	wrapper.c	FUNCTION_36	CALL_2
0x14e8	        0x488b45f8	                mov rax, qword [rbp - 8]	       598	wrapper.c	FUNCTION_36	CALL_2
0x14ec	          0x4889c6	                            mov rsi, rax	       598	wrapper.c	FUNCTION_36	CALL_2
0x14ef	      0xbf00000000	                              mov edi, 0	       598	wrapper.c	FUNCTION_36	CALL_2
0x14f4	      0xe8bcfeffff	            call sym.warn_if_unremovable	       598	wrapper.c	FUNCTION_36	CALL_2
0x14f9	              0xc9	                                   leave	       599	wrapper.c	FUNCTION_36
0x14fa	              0xc3	                                     ret	       599	wrapper.c	FUNCTION_36
xwrite	IF,4:SWITCH,0:functions,0:CALL,2:WHILE,1:FOR,0:ELSE,0:DO,0	38
0x9b2	              0x55	                                push rbp	       277	wrapper.c	FUNCTION_17
0x9b3	          0x4889e5	                            mov rbp, rsp	       277	wrapper.c	FUNCTION_17
0x9b6	        0x4883ec30	                           sub rsp, 0x30	       277	wrapper.c	FUNCTION_17
0x9ba	          0x897dec	             mov dword [rbp - 0x14], edi	       277	wrapper.c	FUNCTION_17
0x9bd	        0x488975e0	             mov qword [rbp - 0x20], rsi	       277	wrapper.c	FUNCTION_17
0x9c1	        0x488955d8	             mov qword [rbp - 0x28], rdx	       277	wrapper.c	FUNCTION_17
0x9c5	    0x48817dd80000	       cmp qword [rbp - 0x28], 0x800000 	       279	wrapper.c	FUNCTION_17	IF_1
0x9cd	            0x7608	                           jbe 0x4000a17	       279	wrapper.c	FUNCTION_17	IF_1
0x9cf	    0x48c745d80000	        mov qword [rbp - 0x28], 0x800000	       280	wrapper.c	FUNCTION_17	IF_1
0x9d7	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       282	wrapper.c	FUNCTION_17	WHILE_1	CALL_1
0x9db	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       282	wrapper.c	FUNCTION_17	WHILE_1	CALL_1
0x9df	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       282	wrapper.c	FUNCTION_17	WHILE_1	CALL_1
0x9e2	          0x4889ce	                            mov rsi, rcx	       282	wrapper.c	FUNCTION_17	WHILE_1	CALL_1
0x9e5	            0x89c7	                            mov edi, eax	       282	wrapper.c	FUNCTION_17	WHILE_1	CALL_1
0x9e7	      0xe800000000	                          call 0x4000a2c	       282	wrapper.c	FUNCTION_17	WHILE_1	CALL_1
0x9ec	        0x488945f8	                mov qword [rbp - 8], rax	       282	wrapper.c	FUNCTION_17	WHILE_1	CALL_1
0x9f0	      0x48837df800	                  cmp qword [rbp - 8], 0	       283	wrapper.c	FUNCTION_17	WHILE_1	IF_2
0x9f5	            0x7926	                           jns 0x4000a5d	       283	wrapper.c	FUNCTION_17	WHILE_1	IF_2
0x9f7	      0xe800000000	                          call 0x4000a3c	       284	wrapper.c	FUNCTION_17	WHILE_1	IF_2	IF_3
0x9fc	            0x8b00	                    mov eax, dword [rax]	       284	wrapper.c	FUNCTION_17	WHILE_1	IF_2	IF_3
0x9fe	          0x83f804	                              cmp eax, 4	       284	wrapper.c	FUNCTION_17	WHILE_1	IF_2	IF_3
0xa01	            0x7420	                            je 0x4000a63	       284	wrapper.c	FUNCTION_17	WHILE_1	IF_2	IF_3
0xa03	      0xe800000000	                          call 0x4000a48	       286	wrapper.c	FUNCTION_17	WHILE_1	IF_2	IF_4	CALL_2
0xa08	            0x8b10	                    mov edx, dword [rax]	       286	wrapper.c	FUNCTION_17	WHILE_1	IF_2	IF_4	CALL_2
0xa0a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       286	wrapper.c	FUNCTION_17	WHILE_1	IF_2	IF_4	CALL_2
0xa0d	      0xbe04000000	                              mov esi, 4	       286	wrapper.c	FUNCTION_17	WHILE_1	IF_2	IF_4	CALL_2
0xa12	            0x89c7	                            mov edi, eax	       286	wrapper.c	FUNCTION_17	WHILE_1	IF_2	IF_4	CALL_2
0xa14	      0xe8abfeffff	                call sym.handle_nonblock	       286	wrapper.c	FUNCTION_17	WHILE_1	IF_2	IF_4	CALL_2
0xa19	            0x85c0	                           test eax, eax	       286	wrapper.c	FUNCTION_17	WHILE_1	IF_2	IF_4	CALL_2
0xa1b	            0x7509	                           jne 0x4000a66	       286	wrapper.c	FUNCTION_17	WHILE_1	IF_2	IF_4	CALL_2
0xa1d	        0x488b45f8	                mov rax, qword [rbp - 8]	       290	wrapper.c	FUNCTION_17	WHILE_1
0xa21	            0xeb06	                           jmp 0x4000a69	       290	wrapper.c	FUNCTION_17	WHILE_1
0xa23	              0x90	                                     nop	       285	wrapper.c	FUNCTION_17	WHILE_1	IF_2	IF_3
0xa24	            0xebb1	                           jmp 0x4000a17	       285	wrapper.c	FUNCTION_17	WHILE_1	IF_2	IF_3
0xa26	              0x90	                                     nop	       287	wrapper.c	FUNCTION_17	WHILE_1	IF_2	IF_4
0xa27	            0xebae	                           jmp 0x4000a17	       291	wrapper.c	FUNCTION_17	WHILE_1
0xa29	              0xc9	                                   leave	       292	wrapper.c	FUNCTION_17
0xa2a	              0xc3	                                     ret	       292	wrapper.c	FUNCTION_17
xcalloc	IF,5:SWITCH,0:functions,0:CALL,9:WHILE,0:FOR,0:ELSE,0:DO,0	67
0x5d9	              0x55	                                push rbp	       153	wrapper.c	FUNCTION_13
0x5da	          0x4889e5	                            mov rbp, rsp	       153	wrapper.c	FUNCTION_13
0x5dd	        0x4883ec20	                           sub rsp, 0x20	       153	wrapper.c	FUNCTION_13
0x5e1	        0x48897de8	             mov qword [rbp - 0x18], rdi	       153	wrapper.c	FUNCTION_13
0x5e5	        0x488975e0	             mov qword [rbp - 0x20], rsi	       153	wrapper.c	FUNCTION_13
0x5e9	      0x48837de800	               cmp qword [rbp - 0x18], 0	       156	wrapper.c	FUNCTION_13	IF_1	CALL_1
0x5ee	            0x7425	                            je 0x4000655	       156	wrapper.c	FUNCTION_13	IF_1	CALL_1
0x5f0	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       156	wrapper.c	FUNCTION_13	IF_1	CALL_1
0x5f7	      0xba00000000	                              mov edx, 0	       156	wrapper.c	FUNCTION_13	IF_1	CALL_1
0x5fc	        0x48f775e8	                  div qword [rbp - 0x18]	       156	wrapper.c	FUNCTION_13	IF_1	CALL_1
0x600	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       156	wrapper.c	FUNCTION_13	IF_1	CALL_1
0x604	            0x730f	                           jae 0x4000655	       156	wrapper.c	FUNCTION_13	IF_1	CALL_1
0x606	      0xbf00000000	                              mov edi, 0	       157	wrapper.c	FUNCTION_13	CALL_2
0x60b	      0xb800000000	                              mov eax, 0	       157	wrapper.c	FUNCTION_13	CALL_2
0x610	      0xe800000000	                          call 0x4000655	       157	wrapper.c	FUNCTION_13	CALL_2
0x615	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       159	wrapper.c	FUNCTION_13	CALL_3
0x619	      0x480faf45e8	            imul rax, qword [rbp - 0x18]	       159	wrapper.c	FUNCTION_13	CALL_3
0x61e	      0xbe00000000	                              mov esi, 0	       159	wrapper.c	FUNCTION_13	CALL_3
0x623	          0x4889c7	                            mov rdi, rax	       159	wrapper.c	FUNCTION_13	CALL_3
0x626	      0xe84efbffff	             call sym.memory_limit_check	       159	wrapper.c	FUNCTION_13	CALL_3
0x62b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       160	wrapper.c	FUNCTION_13	CALL_4
0x62f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       160	wrapper.c	FUNCTION_13	CALL_4
0x633	          0x4889d6	                            mov rsi, rdx	       160	wrapper.c	FUNCTION_13	CALL_4
0x636	          0x4889c7	                            mov rdi, rax	       160	wrapper.c	FUNCTION_13	CALL_4
0x639	      0xe800000000	                          call 0x400067e	       160	wrapper.c	FUNCTION_13	CALL_4
0x63e	        0x488945f8	                mov qword [rbp - 8], rax	       160	wrapper.c	FUNCTION_13	CALL_4
0x642	      0x48837df800	                  cmp qword [rbp - 8], 0	       161	wrapper.c	FUNCTION_13	IF_2
0x647	            0x7521	                           jne 0x40006aa	       161	wrapper.c	FUNCTION_13	IF_2
0x649	      0x48837de800	               cmp qword [rbp - 0x18], 0	       161	wrapper.c	FUNCTION_13	IF_2
0x64e	            0x7407	                            je 0x4000697	       161	wrapper.c	FUNCTION_13	IF_2
0x650	      0x48837de000	               cmp qword [rbp - 0x20], 0	       161	wrapper.c	FUNCTION_13	IF_2
0x655	            0x7513	                           jne 0x40006aa	       161	wrapper.c	FUNCTION_13	IF_2
0x657	      0xbe01000000	                              mov esi, 1	       162	wrapper.c	FUNCTION_13	CALL_5
0x65c	      0xbf01000000	                              mov edi, 1	       162	wrapper.c	FUNCTION_13	CALL_5
0x661	      0xe800000000	                          call 0x40006a6	       162	wrapper.c	FUNCTION_13	CALL_5
0x666	        0x488945f8	                mov qword [rbp - 8], rax	       162	wrapper.c	FUNCTION_13	CALL_5
0x66a	      0x48837df800	                  cmp qword [rbp - 8], 0	       163	wrapper.c	FUNCTION_13	IF_3
0x66f	            0x756a	                           jne 0x400071b	       163	wrapper.c	FUNCTION_13	IF_3
0x671	    0x488b05000000	            mov rax, qword [0x040006b8] 	       164	wrapper.c	FUNCTION_13	IF_3	CALL_6
0x678	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       164	wrapper.c	FUNCTION_13	IF_3	CALL_6
0x67c	      0x480faf55e0	            imul rdx, qword [rbp - 0x20]	       164	wrapper.c	FUNCTION_13	IF_3	CALL_6
0x681	          0x4889d7	                            mov rdi, rdx	       164	wrapper.c	FUNCTION_13	IF_3	CALL_6
0x684	            0xffd0	                                call rax	       164	wrapper.c	FUNCTION_13	IF_3	CALL_6
0x686	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       165	wrapper.c	FUNCTION_13	IF_3	CALL_7
0x68a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       165	wrapper.c	FUNCTION_13	IF_3	CALL_7
0x68e	          0x4889d6	                            mov rsi, rdx	       165	wrapper.c	FUNCTION_13	IF_3	CALL_7
0x691	          0x4889c7	                            mov rdi, rax	       165	wrapper.c	FUNCTION_13	IF_3	CALL_7
0x694	      0xe800000000	                          call 0x40006d9	       165	wrapper.c	FUNCTION_13	IF_3	CALL_7
0x699	        0x488945f8	                mov qword [rbp - 8], rax	       165	wrapper.c	FUNCTION_13	IF_3	CALL_7
0x69d	      0x48837df800	                  cmp qword [rbp - 8], 0	       166	wrapper.c	FUNCTION_13	IF_3	IF_4
0x6a2	            0x7521	                           jne 0x4000705	       166	wrapper.c	FUNCTION_13	IF_3	IF_4
0x6a4	      0x48837de800	               cmp qword [rbp - 0x18], 0	       166	wrapper.c	FUNCTION_13	IF_3	IF_4
0x6a9	            0x7407	                            je 0x40006f2	       166	wrapper.c	FUNCTION_13	IF_3	IF_4
0x6ab	      0x48837de000	               cmp qword [rbp - 0x20], 0	       166	wrapper.c	FUNCTION_13	IF_3	IF_4
0x6b0	            0x7513	                           jne 0x4000705	       166	wrapper.c	FUNCTION_13	IF_3	IF_4
0x6b2	      0xbe01000000	                              mov esi, 1	       167	wrapper.c	FUNCTION_13	IF_3	CALL_8
0x6b7	      0xbf01000000	                              mov edi, 1	       167	wrapper.c	FUNCTION_13	IF_3	CALL_8
0x6bc	      0xe800000000	                          call 0x4000701	       167	wrapper.c	FUNCTION_13	IF_3	CALL_8
0x6c1	        0x488945f8	                mov qword [rbp - 8], rax	       167	wrapper.c	FUNCTION_13	IF_3	CALL_8
0x6c5	      0x48837df800	                  cmp qword [rbp - 8], 0	       168	wrapper.c	FUNCTION_13	IF_3	IF_5
0x6ca	            0x750f	                           jne 0x400071b	       168	wrapper.c	FUNCTION_13	IF_3	IF_5
0x6cc	      0xbf00000000	                              mov edi, 0	       169	wrapper.c	FUNCTION_13	IF_3	CALL_9
0x6d1	      0xb800000000	                              mov eax, 0	       169	wrapper.c	FUNCTION_13	IF_3	CALL_9
0x6d6	      0xe800000000	                          call 0x400071b	       169	wrapper.c	FUNCTION_13	IF_3	CALL_9
0x6db	        0x488b45f8	                mov rax, qword [rbp - 8]	       171	wrapper.c	FUNCTION_13
0x6df	              0xc9	                                   leave	       172	wrapper.c	FUNCTION_13
0x6e0	              0xc3	                                     ret	       172	wrapper.c	FUNCTION_13
git_mkstemps_mode	IF,4:SWITCH,0:functions,0:CALL,5:WHILE,0:FOR,1:ELSE,0:DO,0	195
0xfa3	              0x55	                                push rbp	       476	wrapper.c	FUNCTION_30
0xfa4	          0x4889e5	                            mov rbp, rsp	       476	wrapper.c	FUNCTION_30
0xfa7	              0x53	                                push rbx	       476	wrapper.c	FUNCTION_30
0xfa8	        0x4883ec68	                           sub rsp, 0x68	       476	wrapper.c	FUNCTION_30
0xfac	        0x48897d98	             mov qword [rbp - 0x68], rdi	       476	wrapper.c	FUNCTION_30
0xfb0	          0x897594	             mov dword [rbp - 0x6c], esi	       476	wrapper.c	FUNCTION_30
0xfb3	          0x895590	             mov dword [rbp - 0x70], edx	       476	wrapper.c	FUNCTION_30
0xfb6	    0x64488b042528	                mov rax, qword fs:[0x28]	       476	wrapper.c	FUNCTION_30
0xfbf	        0x488945e8	             mov qword [rbp - 0x18], rax	       476	wrapper.c	FUNCTION_30
0xfc3	            0x31c0	                            xor eax, eax	       476	wrapper.c	FUNCTION_30
0xfc5	        0x488b4598	             mov rax, qword [rbp - 0x68]	       488	wrapper.c	FUNCTION_30	CALL_1
0xfc9	          0x4889c7	                            mov rdi, rax	       488	wrapper.c	FUNCTION_30	CALL_1
0xfcc	      0xe800000000	                          call 0x4001011	       488	wrapper.c	FUNCTION_30	CALL_1
0xfd1	        0x488945b8	             mov qword [rbp - 0x48], rax	       488	wrapper.c	FUNCTION_30	CALL_1
0xfd5	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       490	wrapper.c	FUNCTION_30	IF_1
0xfd8	          0x83c006	                              add eax, 6	       490	wrapper.c	FUNCTION_30	IF_1
0xfdb	            0x4898	                                    cdqe	       490	wrapper.c	FUNCTION_30	IF_1
0xfdd	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	       490	wrapper.c	FUNCTION_30	IF_1
0xfe1	            0x7615	                           jbe 0x4001038	       490	wrapper.c	FUNCTION_30	IF_1
0xfe3	      0xe800000000	                          call 0x4001028	       491	wrapper.c	FUNCTION_30	IF_1
0xfe8	    0xc70016000000	                   mov dword [rax], 0x16	       491	wrapper.c	FUNCTION_30	IF_1
0xfee	      0xb8ffffffff	                     mov eax, 0xffffffff	       492	wrapper.c	FUNCTION_30	IF_1
0xff3	      0xe98e020000	                           jmp 0x40012c6	       492	wrapper.c	FUNCTION_30	IF_1
0xff8	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       495	wrapper.c	FUNCTION_30	IF_2	CALL_2
0xffb	            0x4898	                                    cdqe	       495	wrapper.c	FUNCTION_30	IF_2	CALL_2
0xffd	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       495	wrapper.c	FUNCTION_30	IF_2	CALL_2
0x1001	          0x4829c2	                            sub rdx, rax	       495	wrapper.c	FUNCTION_30	IF_2	CALL_2
0x1004	          0x4889d0	                            mov rax, rdx	       495	wrapper.c	FUNCTION_30	IF_2	CALL_2
0x1007	        0x488d50fa	                      lea rdx, [rax - 6]	       495	wrapper.c	FUNCTION_30	IF_2	CALL_2
0x100b	        0x488b4598	             mov rax, qword [rbp - 0x68]	       495	wrapper.c	FUNCTION_30	IF_2	CALL_2
0x100f	          0x4801d0	                            add rax, rdx	       495	wrapper.c	FUNCTION_30	IF_2	CALL_2
0x1012	      0xba06000000	                              mov edx, 6	       495	wrapper.c	FUNCTION_30	IF_2	CALL_2
0x1017	      0xbe00000000	                              mov esi, 0	       495	wrapper.c	FUNCTION_30	IF_2	CALL_2
0x101c	          0x4889c7	                            mov rdi, rax	       495	wrapper.c	FUNCTION_30	IF_2	CALL_2
0x101f	      0xe800000000	                          call 0x4001064	       495	wrapper.c	FUNCTION_30	IF_2	CALL_2
0x1024	            0x85c0	                           test eax, eax	       495	wrapper.c	FUNCTION_30	IF_2	CALL_2
0x1026	            0x7415	                            je 0x400107d	       495	wrapper.c	FUNCTION_30	IF_2	CALL_2
0x1028	      0xe800000000	                          call 0x400106d	       496	wrapper.c	FUNCTION_30	IF_2
0x102d	    0xc70016000000	                   mov dword [rax], 0x16	       496	wrapper.c	FUNCTION_30	IF_2
0x1033	      0xb8ffffffff	                     mov eax, 0xffffffff	       497	wrapper.c	FUNCTION_30	IF_2
0x1038	      0xe949020000	                           jmp 0x40012c6	       497	wrapper.c	FUNCTION_30	IF_2
0x103d	        0x488d45d0	                   lea rax, [rbp - 0x30]	       504	wrapper.c	FUNCTION_30	CALL_3
0x1041	      0xbe00000000	                              mov esi, 0	       504	wrapper.c	FUNCTION_30	CALL_3
0x1046	          0x4889c7	                            mov rdi, rax	       504	wrapper.c	FUNCTION_30	CALL_3
0x1049	      0xe800000000	                          call 0x400108e	       504	wrapper.c	FUNCTION_30	CALL_3
0x104e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       505	wrapper.c	FUNCTION_30	CALL_4
0x1052	        0x48c1e010	                           shl rax, 0x10	       505	wrapper.c	FUNCTION_30	CALL_4
0x1056	          0x4889c2	                            mov rdx, rax	       505	wrapper.c	FUNCTION_30	CALL_4
0x1059	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       505	wrapper.c	FUNCTION_30	CALL_4
0x105d	          0x4889d3	                            mov rbx, rdx	       505	wrapper.c	FUNCTION_30	CALL_4
0x1060	          0x4831c3	                            xor rbx, rax	       505	wrapper.c	FUNCTION_30	CALL_4
0x1063	      0xe800000000	                          call 0x40010a8	       505	wrapper.c	FUNCTION_30	CALL_4
0x1068	            0x4898	                                    cdqe	       505	wrapper.c	FUNCTION_30	CALL_4
0x106a	          0x4831d8	                            xor rax, rbx	       505	wrapper.c	FUNCTION_30	CALL_4
0x106d	        0x488945b0	             mov qword [rbp - 0x50], rax	       505	wrapper.c	FUNCTION_30	CALL_4
0x1071	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       506	wrapper.c	FUNCTION_30
0x1074	            0x4898	                                    cdqe	       506	wrapper.c	FUNCTION_30
0x1076	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       506	wrapper.c	FUNCTION_30
0x107a	          0x4829c2	                            sub rdx, rax	       506	wrapper.c	FUNCTION_30
0x107d	          0x4889d0	                            mov rax, rdx	       506	wrapper.c	FUNCTION_30
0x1080	        0x488d50fa	                      lea rdx, [rax - 6]	       506	wrapper.c	FUNCTION_30
0x1084	        0x488b4598	             mov rax, qword [rbp - 0x68]	       506	wrapper.c	FUNCTION_30
0x1088	          0x4801d0	                            add rax, rdx	       506	wrapper.c	FUNCTION_30
0x108b	        0x488945c0	             mov qword [rbp - 0x40], rax	       506	wrapper.c	FUNCTION_30
0x108f	    0xc745a8000000	               mov dword [rbp - 0x58], 0	       507	wrapper.c	FUNCTION_30	FOR_1
0x1096	      0xe9cf010000	                           jmp 0x40012aa	       507	wrapper.c	FUNCTION_30	FOR_1
0x109b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       508	wrapper.c	FUNCTION_30	FOR_1
0x109f	        0x488945c8	             mov qword [rbp - 0x38], rax	       508	wrapper.c	FUNCTION_30	FOR_1
0x10a3	    0x8b0500000000	            mov eax, dword [0x040010e9] 	       510	wrapper.c	FUNCTION_30	FOR_1
0x10a9	          0x4863c8	                         movsxd rcx, eax	       510	wrapper.c	FUNCTION_30	FOR_1
0x10ac	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       510	wrapper.c	FUNCTION_30	FOR_1
0x10b0	      0xba00000000	                              mov edx, 0	       510	wrapper.c	FUNCTION_30	FOR_1
0x10b5	          0x48f7f1	                                 div rcx	       510	wrapper.c	FUNCTION_30	FOR_1
0x10b8	          0x4889d0	                            mov rax, rdx	       510	wrapper.c	FUNCTION_30	FOR_1
0x10bb	     0xfb690000000	                   movzx edx, byte [rax]	       510	wrapper.c	FUNCTION_30	FOR_1
0x10c2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       510	wrapper.c	FUNCTION_30	FOR_1
0x10c6	            0x8810	                      mov byte [rax], dl	       510	wrapper.c	FUNCTION_30	FOR_1
0x10c8	    0x8b0500000000	            mov eax, dword [0x0400110e] 	       510	wrapper.c	FUNCTION_30	FOR_1
0x10ce	          0x4863d8	                         movsxd rbx, eax	       510	wrapper.c	FUNCTION_30	FOR_1
0x10d1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       510	wrapper.c	FUNCTION_30	FOR_1
0x10d5	      0xba00000000	                              mov edx, 0	       510	wrapper.c	FUNCTION_30	FOR_1
0x10da	          0x48f7f3	                                 div rbx	       510	wrapper.c	FUNCTION_30	FOR_1
0x10dd	        0x488945c8	             mov qword [rbp - 0x38], rax	       510	wrapper.c	FUNCTION_30	FOR_1
0x10e1	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       511	wrapper.c	FUNCTION_30	FOR_1
0x10e5	        0x488d4801	                      lea rcx, [rax + 1]	       511	wrapper.c	FUNCTION_30	FOR_1
0x10e9	    0x8b0500000000	            mov eax, dword [0x0400112f] 	       511	wrapper.c	FUNCTION_30	FOR_1
0x10ef	          0x4863f0	                         movsxd rsi, eax	       511	wrapper.c	FUNCTION_30	FOR_1
0x10f2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       511	wrapper.c	FUNCTION_30	FOR_1
0x10f6	      0xba00000000	                              mov edx, 0	       511	wrapper.c	FUNCTION_30	FOR_1
0x10fb	          0x48f7f6	                                 div rsi	       511	wrapper.c	FUNCTION_30	FOR_1
0x10fe	          0x4889d0	                            mov rax, rdx	       511	wrapper.c	FUNCTION_30	FOR_1
0x1101	     0xfb680000000	                   movzx eax, byte [rax]	       511	wrapper.c	FUNCTION_30	FOR_1
0x1108	            0x8801	                      mov byte [rcx], al	       511	wrapper.c	FUNCTION_30	FOR_1
0x110a	    0x8b0500000000	            mov eax, dword [0x04001150] 	       511	wrapper.c	FUNCTION_30	FOR_1
0x1110	          0x4863f8	                         movsxd rdi, eax	       511	wrapper.c	FUNCTION_30	FOR_1
0x1113	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       511	wrapper.c	FUNCTION_30	FOR_1
0x1117	      0xba00000000	                              mov edx, 0	       511	wrapper.c	FUNCTION_30	FOR_1
0x111c	          0x48f7f7	                                 div rdi	       511	wrapper.c	FUNCTION_30	FOR_1
0x111f	        0x488945c8	             mov qword [rbp - 0x38], rax	       511	wrapper.c	FUNCTION_30	FOR_1
0x1123	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       512	wrapper.c	FUNCTION_30	FOR_1
0x1127	        0x488d4802	                      lea rcx, [rax + 2]	       512	wrapper.c	FUNCTION_30	FOR_1
0x112b	    0x8b0500000000	            mov eax, dword [0x04001171] 	       512	wrapper.c	FUNCTION_30	FOR_1
0x1131	          0x4863f0	                         movsxd rsi, eax	       512	wrapper.c	FUNCTION_30	FOR_1
0x1134	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       512	wrapper.c	FUNCTION_30	FOR_1
0x1138	      0xba00000000	                              mov edx, 0	       512	wrapper.c	FUNCTION_30	FOR_1
0x113d	          0x48f7f6	                                 div rsi	       512	wrapper.c	FUNCTION_30	FOR_1
0x1140	          0x4889d0	                            mov rax, rdx	       512	wrapper.c	FUNCTION_30	FOR_1
0x1143	     0xfb680000000	                   movzx eax, byte [rax]	       512	wrapper.c	FUNCTION_30	FOR_1
0x114a	            0x8801	                      mov byte [rcx], al	       512	wrapper.c	FUNCTION_30	FOR_1
0x114c	    0x8b0500000000	            mov eax, dword [0x04001192] 	       512	wrapper.c	FUNCTION_30	FOR_1
0x1152	          0x4863d8	                         movsxd rbx, eax	       512	wrapper.c	FUNCTION_30	FOR_1
0x1155	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       512	wrapper.c	FUNCTION_30	FOR_1
0x1159	      0xba00000000	                              mov edx, 0	       512	wrapper.c	FUNCTION_30	FOR_1
0x115e	          0x48f7f3	                                 div rbx	       512	wrapper.c	FUNCTION_30	FOR_1
0x1161	        0x488945c8	             mov qword [rbp - 0x38], rax	       512	wrapper.c	FUNCTION_30	FOR_1
0x1165	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       513	wrapper.c	FUNCTION_30	FOR_1
0x1169	        0x488d4803	                      lea rcx, [rax + 3]	       513	wrapper.c	FUNCTION_30	FOR_1
0x116d	    0x8b0500000000	            mov eax, dword [0x040011b3] 	       513	wrapper.c	FUNCTION_30	FOR_1
0x1173	          0x4863f0	                         movsxd rsi, eax	       513	wrapper.c	FUNCTION_30	FOR_1
0x1176	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       513	wrapper.c	FUNCTION_30	FOR_1
0x117a	      0xba00000000	                              mov edx, 0	       513	wrapper.c	FUNCTION_30	FOR_1
0x117f	          0x48f7f6	                                 div rsi	       513	wrapper.c	FUNCTION_30	FOR_1
0x1182	          0x4889d0	                            mov rax, rdx	       513	wrapper.c	FUNCTION_30	FOR_1
0x1185	     0xfb680000000	                   movzx eax, byte [rax]	       513	wrapper.c	FUNCTION_30	FOR_1
0x118c	            0x8801	                      mov byte [rcx], al	       513	wrapper.c	FUNCTION_30	FOR_1
0x118e	    0x8b0500000000	            mov eax, dword [0x040011d4] 	       513	wrapper.c	FUNCTION_30	FOR_1
0x1194	          0x4863f8	                         movsxd rdi, eax	       513	wrapper.c	FUNCTION_30	FOR_1
0x1197	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       513	wrapper.c	FUNCTION_30	FOR_1
0x119b	      0xba00000000	                              mov edx, 0	       513	wrapper.c	FUNCTION_30	FOR_1
0x11a0	          0x48f7f7	                                 div rdi	       513	wrapper.c	FUNCTION_30	FOR_1
0x11a3	        0x488945c8	             mov qword [rbp - 0x38], rax	       513	wrapper.c	FUNCTION_30	FOR_1
0x11a7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       514	wrapper.c	FUNCTION_30	FOR_1
0x11ab	        0x488d4804	                      lea rcx, [rax + 4]	       514	wrapper.c	FUNCTION_30	FOR_1
0x11af	    0x8b0500000000	            mov eax, dword [0x040011f5] 	       514	wrapper.c	FUNCTION_30	FOR_1
0x11b5	          0x4863f0	                         movsxd rsi, eax	       514	wrapper.c	FUNCTION_30	FOR_1
0x11b8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       514	wrapper.c	FUNCTION_30	FOR_1
0x11bc	      0xba00000000	                              mov edx, 0	       514	wrapper.c	FUNCTION_30	FOR_1
0x11c1	          0x48f7f6	                                 div rsi	       514	wrapper.c	FUNCTION_30	FOR_1
0x11c4	          0x4889d0	                            mov rax, rdx	       514	wrapper.c	FUNCTION_30	FOR_1
0x11c7	     0xfb680000000	                   movzx eax, byte [rax]	       514	wrapper.c	FUNCTION_30	FOR_1
0x11ce	            0x8801	                      mov byte [rcx], al	       514	wrapper.c	FUNCTION_30	FOR_1
0x11d0	    0x8b0500000000	            mov eax, dword [0x04001216] 	       514	wrapper.c	FUNCTION_30	FOR_1
0x11d6	          0x4863d8	                         movsxd rbx, eax	       514	wrapper.c	FUNCTION_30	FOR_1
0x11d9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       514	wrapper.c	FUNCTION_30	FOR_1
0x11dd	      0xba00000000	                              mov edx, 0	       514	wrapper.c	FUNCTION_30	FOR_1
0x11e2	          0x48f7f3	                                 div rbx	       514	wrapper.c	FUNCTION_30	FOR_1
0x11e5	        0x488945c8	             mov qword [rbp - 0x38], rax	       514	wrapper.c	FUNCTION_30	FOR_1
0x11e9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       515	wrapper.c	FUNCTION_30	FOR_1
0x11ed	        0x488d4805	                      lea rcx, [rax + 5]	       515	wrapper.c	FUNCTION_30	FOR_1
0x11f1	    0x8b0500000000	            mov eax, dword [0x04001237] 	       515	wrapper.c	FUNCTION_30	FOR_1
0x11f7	          0x4863f0	                         movsxd rsi, eax	       515	wrapper.c	FUNCTION_30	FOR_1
0x11fa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       515	wrapper.c	FUNCTION_30	FOR_1
0x11fe	      0xba00000000	                              mov edx, 0	       515	wrapper.c	FUNCTION_30	FOR_1
0x1203	          0x48f7f6	                                 div rsi	       515	wrapper.c	FUNCTION_30	FOR_1
0x1206	          0x4889d0	                            mov rax, rdx	       515	wrapper.c	FUNCTION_30	FOR_1
0x1209	     0xfb680000000	                   movzx eax, byte [rax]	       515	wrapper.c	FUNCTION_30	FOR_1
0x1210	            0x8801	                      mov byte [rcx], al	       515	wrapper.c	FUNCTION_30	FOR_1
0x1212	    0x8b0500000000	            mov eax, dword [0x04001258] 	       515	wrapper.c	FUNCTION_30	FOR_1
0x1218	          0x4863f8	                         movsxd rdi, eax	       515	wrapper.c	FUNCTION_30	FOR_1
0x121b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       515	wrapper.c	FUNCTION_30	FOR_1
0x121f	      0xba00000000	                              mov edx, 0	       515	wrapper.c	FUNCTION_30	FOR_1
0x1224	          0x48f7f7	                                 div rdi	       515	wrapper.c	FUNCTION_30	FOR_1
0x1227	        0x488945c8	             mov qword [rbp - 0x38], rax	       515	wrapper.c	FUNCTION_30	FOR_1
0x122b	          0x8b5590	             mov edx, dword [rbp - 0x70]	       517	wrapper.c	FUNCTION_30	FOR_1	CALL_5
0x122e	        0x488b4598	             mov rax, qword [rbp - 0x68]	       517	wrapper.c	FUNCTION_30	FOR_1	CALL_5
0x1232	      0xbec2000000	                           mov esi, 0xc2	       517	wrapper.c	FUNCTION_30	FOR_1	CALL_5
0x1237	          0x4889c7	                            mov rdi, rax	       517	wrapper.c	FUNCTION_30	FOR_1	CALL_5
0x123a	      0xb800000000	                              mov eax, 0	       517	wrapper.c	FUNCTION_30	FOR_1	CALL_5
0x123f	      0xe800000000	                          call 0x4001284	       517	wrapper.c	FUNCTION_30	FOR_1	CALL_5
0x1244	          0x8945ac	             mov dword [rbp - 0x54], eax	       517	wrapper.c	FUNCTION_30	FOR_1	CALL_5
0x1247	        0x837dac00	               cmp dword [rbp - 0x54], 0	       518	wrapper.c	FUNCTION_30	FOR_1	IF_3
0x124b	            0x7805	                            js 0x4001292	       518	wrapper.c	FUNCTION_30	FOR_1	IF_3
0x124d	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       519	wrapper.c	FUNCTION_30	FOR_1	IF_3
0x1250	            0xeb34	                           jmp 0x40012c6	       519	wrapper.c	FUNCTION_30	FOR_1	IF_3
0x1252	      0xe800000000	                          call 0x4001297	       524	wrapper.c	FUNCTION_30	FOR_1	IF_4
0x1257	            0x8b00	                    mov eax, dword [rax]	       524	wrapper.c	FUNCTION_30	FOR_1	IF_4
0x1259	          0x83f811	                           cmp eax, 0x11	       524	wrapper.c	FUNCTION_30	FOR_1	IF_4
0x125c	            0x751b	                           jne 0x40012b9	       524	wrapper.c	FUNCTION_30	FOR_1	IF_4
0x125e	    0x488145b0611e	          add qword [rbp - 0x50], 0x1e61	       531	wrapper.c	FUNCTION_30	FOR_1
0x1266	        0x8345a801	               add dword [rbp - 0x58], 1	       507	wrapper.c	FUNCTION_30	FOR_1
0x126a	    0x817da8ff3f00	         cmp dword [rbp - 0x58], 0x3fff 	       507	wrapper.c	FUNCTION_30	FOR_1
0x1271	     0xf8e24feffff	                           jle 0x40010db	       507	wrapper.c	FUNCTION_30	FOR_1
0x1277	            0xeb01	                           jmp 0x40012ba	       507	wrapper.c	FUNCTION_30	FOR_1
0x1279	              0x90	                                     nop	       525	wrapper.c	FUNCTION_30	FOR_1	IF_4
0x127a	        0x488b4598	             mov rax, qword [rbp - 0x68]	       534	wrapper.c	FUNCTION_30
0x127e	          0xc60000	                       mov byte [rax], 0	       534	wrapper.c	FUNCTION_30
0x1281	      0xb8ffffffff	                     mov eax, 0xffffffff	       535	wrapper.c	FUNCTION_30
0x1286	        0x488b7de8	             mov rdi, qword [rbp - 0x18]	       536	wrapper.c	FUNCTION_30
0x128a	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       536	wrapper.c	FUNCTION_30
0x1293	            0x7405	                            je 0x40012da	       536	wrapper.c	FUNCTION_30
0x1295	      0xe800000000	                          call 0x40012da	       536	wrapper.c	FUNCTION_30
0x129a	        0x4883c468	                           add rsp, 0x68	       536	wrapper.c	FUNCTION_30
0x129e	              0x5b	                                 pop rbx	       536	wrapper.c	FUNCTION_30
0x129f	              0x5d	                                 pop rbp	       536	wrapper.c	FUNCTION_30
0x12a0	              0xc3	                                     ret	       536	wrapper.c	FUNCTION_30
write_in_full	IF,2:SWITCH,0:functions,0:CALL,1:WHILE,1:FOR,0:ELSE,0:DO,0	38
0xb15	              0x55	                                push rbp	       332	wrapper.c	FUNCTION_20
0xb16	          0x4889e5	                            mov rbp, rsp	       332	wrapper.c	FUNCTION_20
0xb19	        0x4883ec40	                           sub rsp, 0x40	       332	wrapper.c	FUNCTION_20
0xb1d	          0x897ddc	             mov dword [rbp - 0x24], edi	       332	wrapper.c	FUNCTION_20
0xb20	        0x488975d0	             mov qword [rbp - 0x30], rsi	       332	wrapper.c	FUNCTION_20
0xb24	        0x488955c8	             mov qword [rbp - 0x38], rdx	       332	wrapper.c	FUNCTION_20
0xb28	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       333	wrapper.c	FUNCTION_20
0xb2c	        0x488945e8	             mov qword [rbp - 0x18], rax	       333	wrapper.c	FUNCTION_20
0xb30	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       334	wrapper.c	FUNCTION_20
0xb38	            0xeb5c	                           jmp 0x4000bd6	       336	wrapper.c	FUNCTION_20	WHILE_1
0xb3a	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       337	wrapper.c	FUNCTION_20	WHILE_1	CALL_1
0xb3e	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       337	wrapper.c	FUNCTION_20	WHILE_1	CALL_1
0xb42	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       337	wrapper.c	FUNCTION_20	WHILE_1	CALL_1
0xb45	          0x4889ce	                            mov rsi, rcx	       337	wrapper.c	FUNCTION_20	WHILE_1	CALL_1
0xb48	            0x89c7	                            mov edi, eax	       337	wrapper.c	FUNCTION_20	WHILE_1	CALL_1
0xb4a	      0xe800000000	                          call 0x4000b8f	       337	wrapper.c	FUNCTION_20	WHILE_1	CALL_1
0xb4f	        0x488945f8	                mov qword [rbp - 8], rax	       337	wrapper.c	FUNCTION_20	WHILE_1	CALL_1
0xb53	      0x48837df800	                  cmp qword [rbp - 8], 0	       338	wrapper.c	FUNCTION_20	WHILE_1	IF_1
0xb58	            0x7909	                           jns 0x4000ba3	       338	wrapper.c	FUNCTION_20	WHILE_1	IF_1
0xb5a	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       339	wrapper.c	FUNCTION_20	WHILE_1	IF_1
0xb61	            0xeb3e	                           jmp 0x4000be1	       339	wrapper.c	FUNCTION_20	WHILE_1	IF_1
0xb63	      0x48837df800	                  cmp qword [rbp - 8], 0	       340	wrapper.c	FUNCTION_20	WHILE_1	IF_2
0xb68	            0x7514	                           jne 0x4000bbe	       340	wrapper.c	FUNCTION_20	WHILE_1	IF_2
0xb6a	      0xe800000000	                          call 0x4000baf	       341	wrapper.c	FUNCTION_20	WHILE_1	IF_2
0xb6f	    0xc7001c000000	                   mov dword [rax], 0x1c	       341	wrapper.c	FUNCTION_20	WHILE_1	IF_2
0xb75	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       342	wrapper.c	FUNCTION_20	WHILE_1	IF_2
0xb7c	            0xeb23	                           jmp 0x4000be1	       342	wrapper.c	FUNCTION_20	WHILE_1	IF_2
0xb7e	        0x488b45f8	                mov rax, qword [rbp - 8]	       344	wrapper.c	FUNCTION_20	WHILE_1
0xb82	        0x482945c8	             sub qword [rbp - 0x38], rax	       344	wrapper.c	FUNCTION_20	WHILE_1
0xb86	        0x488b45f8	                mov rax, qword [rbp - 8]	       345	wrapper.c	FUNCTION_20	WHILE_1
0xb8a	        0x480145e8	            add qword [rbp - 0x18], rax 	       345	wrapper.c	FUNCTION_20	WHILE_1
0xb8e	        0x488b45f8	                mov rax, qword [rbp - 8]	       346	wrapper.c	FUNCTION_20	WHILE_1
0xb92	        0x480145f0	            add qword [rbp - 0x10], rax 	       346	wrapper.c	FUNCTION_20	WHILE_1
0xb96	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       336	wrapper.c	FUNCTION_20	WHILE_1
0xb9b	            0x759d	                           jne 0x4000b7a	       336	wrapper.c	FUNCTION_20	WHILE_1
0xb9d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       349	wrapper.c	FUNCTION_20
0xba1	              0xc9	                                   leave	       350	wrapper.c	FUNCTION_20
0xba2	              0xc3	                                     ret	       350	wrapper.c	FUNCTION_20
warn_on_fopen_errors	IF,1:SWITCH,0:functions,0:CALL,1:WHILE,0:FOR,0:ELSE,0:DO,0	20
0xe18	              0x55	                                push rbp	       428	wrapper.c	FUNCTION_27
0xe19	          0x4889e5	                            mov rbp, rsp	       428	wrapper.c	FUNCTION_27
0xe1c	        0x4883ec10	                           sub rsp, 0x10	       428	wrapper.c	FUNCTION_27
0xe20	        0x48897df8	                mov qword [rbp - 8], rdi	       428	wrapper.c	FUNCTION_27
0xe24	      0xe800000000	                          call 0x4000e69	       429	wrapper.c	FUNCTION_27	IF_1
0xe29	            0x8b00	                    mov eax, dword [rax]	       429	wrapper.c	FUNCTION_27	IF_1
0xe2b	          0x83f802	                              cmp eax, 2	       429	wrapper.c	FUNCTION_27	IF_1
0xe2e	            0x741f	                            je 0x4000e8f	       429	wrapper.c	FUNCTION_27	IF_1
0xe30	      0xe800000000	                          call 0x4000e75	       429	wrapper.c	FUNCTION_27	IF_1
0xe35	            0x8b00	                    mov eax, dword [rax]	       429	wrapper.c	FUNCTION_27	IF_1
0xe37	          0x83f814	                           cmp eax, 0x14	       429	wrapper.c	FUNCTION_27	IF_1
0xe3a	            0x7413	                            je 0x4000e8f	       429	wrapper.c	FUNCTION_27	IF_1
0xe3c	        0x488b45f8	                mov rax, qword [rbp - 8]	       430	wrapper.c	FUNCTION_27	IF_1	CALL_1
0xe40	          0x4889c7	                            mov rdi, rax	       430	wrapper.c	FUNCTION_27	IF_1	CALL_1
0xe43	      0xe8a0ffffff	           call sym.warn_on_inaccessible	       430	wrapper.c	FUNCTION_27	IF_1	CALL_1
0xe48	      0xb8ffffffff	                     mov eax, 0xffffffff	       431	wrapper.c	FUNCTION_27	IF_1
0xe4d	            0xeb05	                           jmp 0x4000e94	       431	wrapper.c	FUNCTION_27	IF_1
0xe4f	      0xb800000000	                              mov eax, 0	       434	wrapper.c	FUNCTION_27
0xe54	              0xc9	                                   leave	       435	wrapper.c	FUNCTION_27
0xe55	              0xc3	                                     ret	       435	wrapper.c	FUNCTION_27
read_in_full	IF,2:SWITCH,0:functions,0:CALL,1:WHILE,1:FOR,0:ELSE,0:DO,0	36
0xa95	              0x55	                                push rbp	       313	wrapper.c	FUNCTION_19
0xa96	          0x4889e5	                            mov rbp, rsp	       313	wrapper.c	FUNCTION_19
0xa99	        0x4883ec40	                           sub rsp, 0x40	       313	wrapper.c	FUNCTION_19
0xa9d	          0x897ddc	             mov dword [rbp - 0x24], edi	       313	wrapper.c	FUNCTION_19
0xaa0	        0x488975d0	             mov qword [rbp - 0x30], rsi	       313	wrapper.c	FUNCTION_19
0xaa4	        0x488955c8	             mov qword [rbp - 0x38], rdx	       313	wrapper.c	FUNCTION_19
0xaa8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       314	wrapper.c	FUNCTION_19
0xaac	        0x488945e8	             mov qword [rbp - 0x18], rax	       314	wrapper.c	FUNCTION_19
0xab0	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       315	wrapper.c	FUNCTION_19
0xab8	            0xeb4e	                           jmp 0x4000b48	       317	wrapper.c	FUNCTION_19	WHILE_1
0xaba	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       318	wrapper.c	FUNCTION_19	WHILE_1	CALL_1
0xabe	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       318	wrapper.c	FUNCTION_19	WHILE_1	CALL_1
0xac2	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       318	wrapper.c	FUNCTION_19	WHILE_1	CALL_1
0xac5	          0x4889ce	                            mov rsi, rcx	       318	wrapper.c	FUNCTION_19	WHILE_1	CALL_1
0xac8	            0x89c7	                            mov edi, eax	       318	wrapper.c	FUNCTION_19	WHILE_1	CALL_1
0xaca	      0xe800000000	                          call 0x4000b0f	       318	wrapper.c	FUNCTION_19	WHILE_1	CALL_1
0xacf	        0x488945f8	                mov qword [rbp - 8], rax	       318	wrapper.c	FUNCTION_19	WHILE_1	CALL_1
0xad3	      0x48837df800	                  cmp qword [rbp - 8], 0	       319	wrapper.c	FUNCTION_19	WHILE_1	IF_1
0xad8	            0x7909	                           jns 0x4000b23	       319	wrapper.c	FUNCTION_19	WHILE_1	IF_1
0xada	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       320	wrapper.c	FUNCTION_19	WHILE_1	IF_1
0xae1	            0xeb30	                           jmp 0x4000b53	       320	wrapper.c	FUNCTION_19	WHILE_1	IF_1
0xae3	      0x48837df800	                  cmp qword [rbp - 8], 0	       321	wrapper.c	FUNCTION_19	WHILE_1	IF_2
0xae8	            0x7506	                           jne 0x4000b30	       321	wrapper.c	FUNCTION_19	WHILE_1	IF_2
0xaea	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       322	wrapper.c	FUNCTION_19	WHILE_1	IF_2
0xaee	            0xeb23	                           jmp 0x4000b53	       322	wrapper.c	FUNCTION_19	WHILE_1	IF_2
0xaf0	        0x488b45f8	                mov rax, qword [rbp - 8]	       323	wrapper.c	FUNCTION_19	WHILE_1
0xaf4	        0x482945c8	             sub qword [rbp - 0x38], rax	       323	wrapper.c	FUNCTION_19	WHILE_1
0xaf8	        0x488b45f8	                mov rax, qword [rbp - 8]	       324	wrapper.c	FUNCTION_19	WHILE_1
0xafc	        0x480145e8	            add qword [rbp - 0x18], rax 	       324	wrapper.c	FUNCTION_19	WHILE_1
0xb00	        0x488b45f8	                mov rax, qword [rbp - 8]	       325	wrapper.c	FUNCTION_19	WHILE_1
0xb04	        0x480145f0	            add qword [rbp - 0x10], rax 	       325	wrapper.c	FUNCTION_19	WHILE_1
0xb08	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       317	wrapper.c	FUNCTION_19	WHILE_1
0xb0d	            0x75ab	                           jne 0x4000afa	       317	wrapper.c	FUNCTION_19	WHILE_1
0xb0f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       328	wrapper.c	FUNCTION_19
0xb13	              0xc9	                                   leave	       329	wrapper.c	FUNCTION_19
0xb14	              0xc3	                                     ret	       329	wrapper.c	FUNCTION_19
git_mkstemp_mode	IF,0:SWITCH,0:functions,0:CALL,1:WHILE,0:FOR,0:ELSE,0:DO,0	12
0x12a1	              0x55	                                push rbp	       539	wrapper.c	FUNCTION_31
0x12a2	          0x4889e5	                            mov rbp, rsp	       539	wrapper.c	FUNCTION_31
0x12a5	        0x4883ec10	                           sub rsp, 0x10	       539	wrapper.c	FUNCTION_31
0x12a9	        0x48897df8	                mov qword [rbp - 8], rdi	       539	wrapper.c	FUNCTION_31
0x12ad	          0x8975f4	              mov dword [rbp - 0xc], esi	       539	wrapper.c	FUNCTION_31
0x12b0	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       541	wrapper.c	FUNCTION_31	CALL_1
0x12b3	        0x488b45f8	                mov rax, qword [rbp - 8]	       541	wrapper.c	FUNCTION_31	CALL_1
0x12b7	      0xbe00000000	                              mov esi, 0	       541	wrapper.c	FUNCTION_31	CALL_1
0x12bc	          0x4889c7	                            mov rdi, rax	       541	wrapper.c	FUNCTION_31	CALL_1
0x12bf	      0xe800000000	                          call 0x4001304	       541	wrapper.c	FUNCTION_31	CALL_1
0x12c4	              0xc9	                                   leave	       542	wrapper.c	FUNCTION_31
0x12c5	              0xc3	                                     ret	       542	wrapper.c	FUNCTION_31
strbuf_complete	IF,1:SWITCH,0:functions,0:CALL,1:WHILE,0:FOR,0:ELSE,0:DO,0	27
0xd0	              0x55	                                push rbp	       594	strbuf.h	FUNCTION_83
0xd1	          0x4889e5	                            mov rbp, rsp	       594	strbuf.h	FUNCTION_83
0xd4	        0x4883ec10	                           sub rsp, 0x10	       594	strbuf.h	FUNCTION_83
0xd8	        0x48897df8	                mov qword [rbp - 8], rdi	       594	strbuf.h	FUNCTION_83
0xdc	            0x89f0	                            mov eax, esi	       594	strbuf.h	FUNCTION_83
0xde	          0x8845f4	                mov byte [rbp - 0xc], al	       594	strbuf.h	FUNCTION_83
0xe1	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_83	IF_1
0xe5	        0x488b4008	                mov rax, qword [rax + 8]	       595	strbuf.h	FUNCTION_83	IF_1
0xe9	          0x4885c0	                           test rax, rax	       595	strbuf.h	FUNCTION_83	IF_1
0xec	            0x7431	                            je 0x400015f	       595	strbuf.h	FUNCTION_83	IF_1
0xee	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_83	IF_1
0xf2	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       595	strbuf.h	FUNCTION_83	IF_1
0xf6	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_83	IF_1
0xfa	        0x488b4008	                mov rax, qword [rax + 8]	       595	strbuf.h	FUNCTION_83	IF_1
0xfe	        0x4883e801	                              sub rax, 1	       595	strbuf.h	FUNCTION_83	IF_1
0x102	          0x4801d0	                            add rax, rdx	       595	strbuf.h	FUNCTION_83	IF_1
0x105	           0xfb600	                   movzx eax, byte [rax]	       595	strbuf.h	FUNCTION_83	IF_1
0x108	          0x3a45f4	                cmp al, byte [rbp - 0xc]	       595	strbuf.h	FUNCTION_83	IF_1
0x10b	            0x7412	                            je 0x400015f	       595	strbuf.h	FUNCTION_83	IF_1
0x10d	         0xfbe55f4	             movsx edx, byte [rbp - 0xc]	       596	strbuf.h	FUNCTION_83	CALL_1
0x111	        0x488b45f8	                mov rax, qword [rbp - 8]	       596	strbuf.h	FUNCTION_83	CALL_1
0x115	            0x89d6	                            mov esi, edx	       596	strbuf.h	FUNCTION_83	CALL_1
0x117	          0x4889c7	                            mov rdi, rax	       596	strbuf.h	FUNCTION_83	CALL_1
0x11a	      0xe843ffffff	                   call sym.strbuf_addch	       596	strbuf.h	FUNCTION_83	CALL_1
0x11f	              0x90	                                     nop	       597	strbuf.h	FUNCTION_83
0x120	              0xc9	                                   leave	       597	strbuf.h	FUNCTION_83
0x121	              0xc3	                                     ret	       597	strbuf.h	FUNCTION_83
write_file_buf	IF,2:SWITCH,0:functions,0:CALL,7:WHILE,0:FOR,0:ELSE,0:DO,0	45
0x17c2	              0x55	                                push rbp	       653	wrapper.c	FUNCTION_43
0x17c3	          0x4889e5	                            mov rbp, rsp	       653	wrapper.c	FUNCTION_43
0x17c6	        0x4883ec30	                           sub rsp, 0x30	       653	wrapper.c	FUNCTION_43
0x17ca	        0x48897de8	             mov qword [rbp - 0x18], rdi	       653	wrapper.c	FUNCTION_43
0x17ce	        0x488975e0	             mov qword [rbp - 0x20], rsi	       653	wrapper.c	FUNCTION_43
0x17d2	        0x488955d8	             mov qword [rbp - 0x28], rdx	       653	wrapper.c	FUNCTION_43
0x17d6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       654	wrapper.c	FUNCTION_43	CALL_1
0x17da	      0xbab6010000	                          mov edx, 0x1b6	       654	wrapper.c	FUNCTION_43	CALL_1
0x17df	      0xbe41020000	                          mov esi, 0x241	       654	wrapper.c	FUNCTION_43	CALL_1
0x17e4	          0x4889c7	                            mov rdi, rax	       654	wrapper.c	FUNCTION_43	CALL_1
0x17e7	      0xb800000000	                              mov eax, 0	       654	wrapper.c	FUNCTION_43	CALL_1
0x17ec	      0xe800000000	                          call 0x4001831	       654	wrapper.c	FUNCTION_43	CALL_1
0x17f1	          0x8945fc	                mov dword [rbp - 4], eax	       654	wrapper.c	FUNCTION_43	CALL_1
0x17f4	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       655	wrapper.c	FUNCTION_43	IF_1	CALL_2
0x17f8	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       655	wrapper.c	FUNCTION_43	IF_1	CALL_2
0x17fc	          0x8b45fc	                mov eax, dword [rbp - 4]	       655	wrapper.c	FUNCTION_43	IF_1	CALL_2
0x17ff	          0x4889ce	                            mov rsi, rcx	       655	wrapper.c	FUNCTION_43	IF_1	CALL_2
0x1802	            0x89c7	                            mov edi, eax	       655	wrapper.c	FUNCTION_43	IF_1	CALL_2
0x1804	      0xe800000000	                          call 0x4001849	       655	wrapper.c	FUNCTION_43	IF_1	CALL_2
0x1809	          0x4885c0	                           test rax, rax	       655	wrapper.c	FUNCTION_43	IF_1	CALL_2
0x180c	            0x7921	                           jns 0x400186f	       655	wrapper.c	FUNCTION_43	IF_1	CALL_2
0x180e	      0xbf00000000	                              mov edi, 0	       656	wrapper.c	FUNCTION_43	CALL_4
0x1813	      0xe82ae9ffff	                               call sym.	       656	wrapper.c	FUNCTION_43	CALL_4
0x1818	          0x4889c2	                            mov rdx, rax	       656	wrapper.c	FUNCTION_43	CALL_4
0x181b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       656	wrapper.c	FUNCTION_43	CALL_4
0x181f	          0x4889c6	                            mov rsi, rax	       656	wrapper.c	FUNCTION_43	CALL_4
0x1822	          0x4889d7	                            mov rdi, rdx	       656	wrapper.c	FUNCTION_43	CALL_4
0x1825	      0xb800000000	                              mov eax, 0	       656	wrapper.c	FUNCTION_43	CALL_4
0x182a	      0xe800000000	                          call 0x400186f	       656	wrapper.c	FUNCTION_43	CALL_4
0x182f	          0x8b45fc	                mov eax, dword [rbp - 4]	       657	wrapper.c	FUNCTION_43	IF_2	CALL_5
0x1832	            0x89c7	                            mov edi, eax	       657	wrapper.c	FUNCTION_43	IF_2	CALL_5
0x1834	      0xe800000000	                          call 0x4001879	       657	wrapper.c	FUNCTION_43	IF_2	CALL_5
0x1839	            0x85c0	                           test eax, eax	       657	wrapper.c	FUNCTION_43	IF_2	CALL_5
0x183b	            0x7421	                            je 0x400189e	       657	wrapper.c	FUNCTION_43	IF_2	CALL_5
0x183d	      0xbf00000000	                              mov edi, 0	       658	wrapper.c	FUNCTION_43	CALL_7
0x1842	      0xe8fbe8ffff	                               call sym.	       658	wrapper.c	FUNCTION_43	CALL_7
0x1847	          0x4889c2	                            mov rdx, rax	       658	wrapper.c	FUNCTION_43	CALL_7
0x184a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       658	wrapper.c	FUNCTION_43	CALL_7
0x184e	          0x4889c6	                            mov rsi, rax	       658	wrapper.c	FUNCTION_43	CALL_7
0x1851	          0x4889d7	                            mov rdi, rdx	       658	wrapper.c	FUNCTION_43	CALL_7
0x1854	      0xb800000000	                              mov eax, 0	       658	wrapper.c	FUNCTION_43	CALL_7
0x1859	      0xe800000000	                          call 0x400189e	       658	wrapper.c	FUNCTION_43	CALL_7
0x185e	              0x90	                                     nop	       659	wrapper.c	FUNCTION_43
0x185f	              0xc9	                                   leave	       659	wrapper.c	FUNCTION_43
0x1860	              0xc3	                                     ret	       659	wrapper.c	FUNCTION_43
xmallocz_gently	IF,0:SWITCH,0:functions,0:CALL,1:WHILE,0:FOR,0:ELSE,0:DO,0	10
0x469	              0x55	                                push rbp	       112	wrapper.c	FUNCTION_9
0x46a	          0x4889e5	                            mov rbp, rsp	       112	wrapper.c	FUNCTION_9
0x46d	        0x4883ec10	                           sub rsp, 0x10	       112	wrapper.c	FUNCTION_9
0x471	        0x48897df8	                mov qword [rbp - 8], rdi	       112	wrapper.c	FUNCTION_9
0x475	        0x488b45f8	                mov rax, qword [rbp - 8]	       113	wrapper.c	FUNCTION_9	CALL_1
0x479	      0xbe01000000	                              mov esi, 1	       113	wrapper.c	FUNCTION_9	CALL_1
0x47e	          0x4889c7	                            mov rdi, rax	       113	wrapper.c	FUNCTION_9	CALL_1
0x481	      0xe84affffff	                    call sym.do_xmallocz	       113	wrapper.c	FUNCTION_9	CALL_1
0x486	              0xc9	                                   leave	       114	wrapper.c	FUNCTION_9
0x487	              0xc3	                                     ret	       114	wrapper.c	FUNCTION_9
