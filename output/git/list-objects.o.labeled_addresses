strbuf_addch	FOR,0:SWITCH,0:IF,1:ELSE,0:functions,0:CALL,2:WHILE,0:DO,0	33
0xd0	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_4
0xd1	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_4
0xd4	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_4
0xd8	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_4
0xdc	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_4
0xdf	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0xe3	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0xe6	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0xeb	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0xee	            0x7511	                           jne 0x4000141	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0xf0	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_4	CALL_2
0xf4	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_4	CALL_2
0xf9	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_4	CALL_2
0xfc	      0xe800000000	                          call 0x4000141	       228	strbuf.h	FUNCTION_4	CALL_2
0x101	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x105	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_4
0x109	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x10d	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_4
0x111	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_4
0x115	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x119	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_4
0x11d	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_4
0x120	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_4
0x123	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_4
0x125	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_4
0x129	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_4
0x12d	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_4
0x131	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_4
0x135	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_4
0x138	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_4
0x13b	              0x90	                                     nop	       231	strbuf.h	FUNCTION_4
0x13c	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_4
0x13d	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_4
add_pending_tree	FOR,0:SWITCH,0:IF,0:ELSE,0:functions,0:CALL,1:WHILE,0:DO,0	14
0xab7	              0x55	                                push rbp	       240	list-objects.c	FUNCTION_17
0xab8	          0x4889e5	                            mov rbp, rsp	       240	list-objects.c	FUNCTION_17
0xabb	        0x4883ec10	                           sub rsp, 0x10	       240	list-objects.c	FUNCTION_17
0xabf	        0x48897df8	                mov qword [rbp - 8], rdi	       240	list-objects.c	FUNCTION_17
0xac3	        0x488975f0	             mov qword [rbp - 0x10], rsi	       240	list-objects.c	FUNCTION_17
0xac7	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       241	list-objects.c	FUNCTION_17	CALL_1
0xacb	        0x488b45f8	                mov rax, qword [rbp - 8]	       241	list-objects.c	FUNCTION_17	CALL_1
0xacf	      0xba00000000	                              mov edx, 0	       241	list-objects.c	FUNCTION_17	CALL_1
0xad4	          0x4889ce	                            mov rsi, rcx	       241	list-objects.c	FUNCTION_17	CALL_1
0xad7	          0x4889c7	                            mov rdi, rax	       241	list-objects.c	FUNCTION_17	CALL_1
0xada	      0xe800000000	                          call 0x4000b1f	       241	list-objects.c	FUNCTION_17	CALL_1
0xadf	              0x90	                                     nop	       242	list-objects.c	FUNCTION_17
0xae0	              0xc9	                                   leave	       242	list-objects.c	FUNCTION_17
0xae1	              0xc3	                                     ret	       242	list-objects.c	FUNCTION_17
traverse_commit_list_filtered	FOR,0:SWITCH,0:IF,1:ELSE,0:functions,0:CALL,3:WHILE,0:DO,0	48
0xe21	              0x55	                                push rbp	       338	list-objects.c	FUNCTION_21
0xe22	          0x4889e5	                            mov rbp, rsp	       338	list-objects.c	FUNCTION_21
0xe25	        0x4883ec50	                           sub rsp, 0x50	       338	list-objects.c	FUNCTION_21
0xe29	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       338	list-objects.c	FUNCTION_21
0xe2d	        0x488975d0	             mov qword [rbp - 0x30], rsi	       338	list-objects.c	FUNCTION_21
0xe31	        0x488955c8	             mov qword [rbp - 0x38], rdx	       338	list-objects.c	FUNCTION_21
0xe35	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       338	list-objects.c	FUNCTION_21
0xe39	        0x4c8945b8	              mov qword [rbp - 0x48], r8	       338	list-objects.c	FUNCTION_21
0xe3d	        0x4c894db0	              mov qword [rbp - 0x50], r9	       338	list-objects.c	FUNCTION_21
0xe41	    0x64488b042528	                mov rax, qword fs:[0x28]	       338	list-objects.c	FUNCTION_21
0xe4a	        0x488945f8	                mov qword [rbp - 8], rax	       338	list-objects.c	FUNCTION_21
0xe4e	            0x31c0	                            xor eax, eax	       338	list-objects.c	FUNCTION_21
0xe50	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       339	list-objects.c	FUNCTION_21
0xe58	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       340	list-objects.c	FUNCTION_21
0xe60	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       341	list-objects.c	FUNCTION_21
0xe68	        0x488d4de8	                   lea rcx, [rbp - 0x18]	       343	list-objects.c	FUNCTION_21	CALL_1
0xe6c	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       343	list-objects.c	FUNCTION_21	CALL_1
0xe70	        0x488b75d8	             mov rsi, qword [rbp - 0x28]	       343	list-objects.c	FUNCTION_21	CALL_1
0xe74	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       343	list-objects.c	FUNCTION_21	CALL_1
0xe78	          0x4889c7	                            mov rdi, rax	       343	list-objects.c	FUNCTION_21	CALL_1
0xe7b	      0xe800000000	                          call 0x4000ec0	       343	list-objects.c	FUNCTION_21	CALL_1
0xe80	        0x488945f0	             mov qword [rbp - 0x10], rax	       343	list-objects.c	FUNCTION_21	CALL_1
0xe84	        0x488b7de0	             mov rdi, qword [rbp - 0x20]	       345	list-objects.c	FUNCTION_21	CALL_2
0xe88	        0x4c8b45f0	              mov r8, qword [rbp - 0x10]	       345	list-objects.c	FUNCTION_21	CALL_2
0xe8c	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	       345	list-objects.c	FUNCTION_21	CALL_2
0xe90	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       345	list-objects.c	FUNCTION_21	CALL_2
0xe94	        0x488b75c8	             mov rsi, qword [rbp - 0x38]	       345	list-objects.c	FUNCTION_21	CALL_2
0xe98	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       345	list-objects.c	FUNCTION_21	CALL_2
0xe9c	          0x4d89c1	                              mov r9, r8	       345	list-objects.c	FUNCTION_21	CALL_2
0xe9f	          0x4989f8	                             mov r8, rdi	       345	list-objects.c	FUNCTION_21	CALL_2
0xea2	          0x4889c7	                            mov rdi, rax	       345	list-objects.c	FUNCTION_21	CALL_2
0xea5	      0xe81afeffff	                    call sym.do_traverse	       345	list-objects.c	FUNCTION_21	CALL_2
0xeaa	      0x48837df000	               cmp qword [rbp - 0x10], 0	       347	list-objects.c	FUNCTION_21	IF_1
0xeaf	            0x7416	                            je 0x4000f07	       347	list-objects.c	FUNCTION_21	IF_1
0xeb1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       347	list-objects.c	FUNCTION_21	IF_1
0xeb5	          0x4885c0	                           test rax, rax	       347	list-objects.c	FUNCTION_21	IF_1
0xeb8	            0x740d	                            je 0x4000f07	       347	list-objects.c	FUNCTION_21	IF_1
0xeba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       348	list-objects.c	FUNCTION_21	CALL_3
0xebe	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       348	list-objects.c	FUNCTION_21	CALL_3
0xec2	          0x4889d7	                            mov rdi, rdx	       348	list-objects.c	FUNCTION_21	CALL_3
0xec5	            0xffd0	                                call rax	       348	list-objects.c	FUNCTION_21	CALL_3
0xec7	              0x90	                                     nop	       349	list-objects.c	FUNCTION_21
0xec8	        0x488b45f8	                mov rax, qword [rbp - 8]	       349	list-objects.c	FUNCTION_21
0xecc	    0x644833042528	                xor rax, qword fs:[0x28]	       349	list-objects.c	FUNCTION_21
0xed5	            0x7405	                            je 0x4000f1c	       349	list-objects.c	FUNCTION_21
0xed7	      0xe800000000	                          call 0x4000f1c	       349	list-objects.c	FUNCTION_21
0xedc	              0xc9	                                   leave	       349	list-objects.c	FUNCTION_21
0xedd	              0xc3	                                     ret	       349	list-objects.c	FUNCTION_21
traverse_trees_and_blobs	FOR,1:SWITCH,0:IF,5:ELSE,0:functions,0:CALL,7:WHILE,0:DO,0	135
0xae2	              0x55	                                push rbp	       250	list-objects.c	FUNCTION_18
0xae3	          0x4889e5	                            mov rbp, rsp	       250	list-objects.c	FUNCTION_18
0xae6	        0x4883ec60	                           sub rsp, 0x60	       250	list-objects.c	FUNCTION_18
0xaea	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       250	list-objects.c	FUNCTION_18
0xaee	        0x488975c0	             mov qword [rbp - 0x40], rsi	       250	list-objects.c	FUNCTION_18
0xaf2	        0x488955b8	             mov qword [rbp - 0x48], rdx	       250	list-objects.c	FUNCTION_18
0xaf6	        0x48894db0	             mov qword [rbp - 0x50], rcx	       250	list-objects.c	FUNCTION_18
0xafa	        0x4c8945a8	              mov qword [rbp - 0x58], r8	       250	list-objects.c	FUNCTION_18
0xafe	        0x4c894da0	              mov qword [rbp - 0x60], r9	       250	list-objects.c	FUNCTION_18
0xb02	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       253	list-objects.c	FUNCTION_18	CALL_1
0xb06	        0x488b4008	                mov rax, qword [rax + 8]	       253	list-objects.c	FUNCTION_18	CALL_1
0xb0a	          0x4885c0	                           test rax, rax	       253	list-objects.c	FUNCTION_18	CALL_1
0xb0d	            0x7419	                            je 0x4000b68	       253	list-objects.c	FUNCTION_18	CALL_1
0xb0f	      0xb900000000	                              mov ecx, 0	       253	list-objects.c	FUNCTION_18	CALL_1
0xb14	      0xbafd000000	                           mov edx, 0xfd	       253	list-objects.c	FUNCTION_18	CALL_1
0xb19	      0xbe00000000	                              mov esi, 0	       253	list-objects.c	FUNCTION_18	CALL_1
0xb1e	      0xbf00000000	                              mov edi, 0	       253	list-objects.c	FUNCTION_18	CALL_1
0xb23	      0xe800000000	                          call 0x4000b68	       253	list-objects.c	FUNCTION_18	CALL_1
0xb28	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       255	list-objects.c	FUNCTION_18	FOR_1
0xb2f	      0xe96b010000	                           jmp 0x4000cdf	       255	list-objects.c	FUNCTION_18	FOR_1
0xb34	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       256	list-objects.c	FUNCTION_18	FOR_1
0xb38	        0x488b4010	            mov rax, qword [rax + 0x10] 	       256	list-objects.c	FUNCTION_18	FOR_1
0xb3c	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       256	list-objects.c	FUNCTION_18	FOR_1
0xb3f	          0x4863d2	                         movsxd rdx, edx	       256	list-objects.c	FUNCTION_18	FOR_1
0xb42	        0x48c1e205	                              shl rdx, 5	       256	list-objects.c	FUNCTION_18	FOR_1
0xb46	          0x4801d0	                            add rax, rdx	       256	list-objects.c	FUNCTION_18	FOR_1
0xb49	        0x488945e8	             mov qword [rbp - 0x18], rax	       256	list-objects.c	FUNCTION_18	FOR_1
0xb4d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       257	list-objects.c	FUNCTION_18	FOR_1
0xb51	          0x488b00	                    mov rax, qword [rax]	       257	list-objects.c	FUNCTION_18	FOR_1
0xb54	        0x488945f0	             mov qword [rbp - 0x10], rax	       257	list-objects.c	FUNCTION_18	FOR_1
0xb58	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       258	list-objects.c	FUNCTION_18	FOR_1
0xb5c	        0x488b4008	                mov rax, qword [rax + 8]	       258	list-objects.c	FUNCTION_18	FOR_1
0xb60	        0x488945f8	                mov qword [rbp - 8], rax	       258	list-objects.c	FUNCTION_18	FOR_1
0xb64	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       259	list-objects.c	FUNCTION_18	FOR_1
0xb68	        0x488b4010	            mov rax, qword [rax + 0x10] 	       259	list-objects.c	FUNCTION_18	FOR_1
0xb6c	        0x488945e0	             mov qword [rbp - 0x20], rax	       259	list-objects.c	FUNCTION_18	FOR_1
0xb70	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       260	list-objects.c	FUNCTION_18	FOR_1	IF_1
0xb74	            0x8b00	                    mov eax, dword [rax]	       260	list-objects.c	FUNCTION_18	FOR_1	IF_1
0xb76	          0xc1e804	                              shr eax, 4	       260	list-objects.c	FUNCTION_18	FOR_1	IF_1
0xb79	      0x25ffffff07	                      and eax, 0x7ffffff	       260	list-objects.c	FUNCTION_18	FOR_1	IF_1
0xb7e	          0x83e003	                              and eax, 3	       260	list-objects.c	FUNCTION_18	FOR_1	IF_1
0xb81	            0x85c0	                           test eax, eax	       260	list-objects.c	FUNCTION_18	FOR_1	IF_1
0xb83	     0xf8511010000	                           jne 0x4000cda	       260	list-objects.c	FUNCTION_18	FOR_1	IF_1
0xb89	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       262	list-objects.c	FUNCTION_18	FOR_1	IF_2
0xb8d	           0xfb600	                   movzx eax, byte [rax]	       262	list-objects.c	FUNCTION_18	FOR_1	IF_2
0xb90	          0x83e00e	                            and eax, 0xe	       262	list-objects.c	FUNCTION_18	FOR_1	IF_2
0xb93	            0x3c08	                               cmp al, 8	       262	list-objects.c	FUNCTION_18	FOR_1	IF_2
0xb95	            0x7548	                           jne 0x4000c1f	       262	list-objects.c	FUNCTION_18	FOR_1	IF_2
0xb97	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       263	list-objects.c	FUNCTION_18	FOR_1	IF_2
0xb9b	            0x8b00	                    mov eax, dword [rax]	       263	list-objects.c	FUNCTION_18	FOR_1	IF_2
0xb9d	          0xc1e804	                              shr eax, 4	       263	list-objects.c	FUNCTION_18	FOR_1	IF_2
0xba0	      0x25ffffff07	                      and eax, 0x7ffffff	       263	list-objects.c	FUNCTION_18	FOR_1	IF_2
0xba5	          0x83c801	                               or eax, 1	       263	list-objects.c	FUNCTION_18	FOR_1	IF_2
0xba8	            0x89c2	                            mov edx, eax	       263	list-objects.c	FUNCTION_18	FOR_1	IF_2
0xbaa	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       263	list-objects.c	FUNCTION_18	FOR_1	IF_2
0xbae	    0x81e2ffffff07	                      and edx, 0x7ffffff	       263	list-objects.c	FUNCTION_18	FOR_1	IF_2
0xbb4	            0x89d1	                            mov ecx, edx	       263	list-objects.c	FUNCTION_18	FOR_1	IF_2
0xbb6	          0xc1e104	                              shl ecx, 4	       263	list-objects.c	FUNCTION_18	FOR_1	IF_2
0xbb9	            0x8b10	                    mov edx, dword [rax]	       263	list-objects.c	FUNCTION_18	FOR_1	IF_2
0xbbb	    0x81e20f000080	                     and edx, 0x8000000f	       263	list-objects.c	FUNCTION_18	FOR_1	IF_2
0xbc1	             0x9ca	                             or edx, ecx	       263	list-objects.c	FUNCTION_18	FOR_1	IF_2
0xbc3	            0x8910	                    mov dword [rax], edx	       263	list-objects.c	FUNCTION_18	FOR_1	IF_2
0xbc5	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       264	list-objects.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0xbc9	        0x488b75f8	                mov rsi, qword [rbp - 8]	       264	list-objects.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0xbcd	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       264	list-objects.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0xbd1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       264	list-objects.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0xbd5	          0x4889cf	                            mov rdi, rcx	       264	list-objects.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0xbd8	            0xffd0	                                call rax	       264	list-objects.c	FUNCTION_18	FOR_1	IF_2	CALL_2
0xbda	      0xe9bc000000	                           jmp 0x4000cdb	       265	list-objects.c	FUNCTION_18	FOR_1	IF_2
0xbdf	      0x48837de000	               cmp qword [rbp - 0x20], 0	       267	list-objects.c	FUNCTION_18	FOR_1	IF_3
0xbe4	            0x7508	                           jne 0x4000c2e	       267	list-objects.c	FUNCTION_18	FOR_1	IF_3
0xbe6	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       268	list-objects.c	FUNCTION_18	FOR_1	IF_3
0xbee	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       269	list-objects.c	FUNCTION_18	FOR_1	IF_4
0xbf2	           0xfb600	                   movzx eax, byte [rax]	       269	list-objects.c	FUNCTION_18	FOR_1	IF_4
0xbf5	          0x83e00e	                            and eax, 0xe	       269	list-objects.c	FUNCTION_18	FOR_1	IF_4
0xbf8	            0x3c04	                               cmp al, 4	       269	list-objects.c	FUNCTION_18	FOR_1	IF_4
0xbfa	            0x7532	                           jne 0x4000c6e	       269	list-objects.c	FUNCTION_18	FOR_1	IF_4
0xbfc	        0x4c8b45b0	              mov r8, qword [rbp - 0x50]	       270	list-objects.c	FUNCTION_18	FOR_1	IF_4	CALL_3
0xc00	        0x488b7de0	             mov rdi, qword [rbp - 0x20]	       270	list-objects.c	FUNCTION_18	FOR_1	IF_4	CALL_3
0xc04	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       270	list-objects.c	FUNCTION_18	FOR_1	IF_4	CALL_3
0xc08	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       270	list-objects.c	FUNCTION_18	FOR_1	IF_4	CALL_3
0xc0c	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       270	list-objects.c	FUNCTION_18	FOR_1	IF_4	CALL_3
0xc10	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       270	list-objects.c	FUNCTION_18	FOR_1	IF_4	CALL_3
0xc14	          0xff75a0	                 push qword [rbp - 0x60]	       270	list-objects.c	FUNCTION_18	FOR_1	IF_4	CALL_3
0xc17	          0xff75a8	                 push qword [rbp - 0x58]	       270	list-objects.c	FUNCTION_18	FOR_1	IF_4	CALL_3
0xc1a	          0x4d89c1	                              mov r9, r8	       270	list-objects.c	FUNCTION_18	FOR_1	IF_4	CALL_3
0xc1d	          0x4989f8	                             mov r8, rdi	       270	list-objects.c	FUNCTION_18	FOR_1	IF_4	CALL_3
0xc20	          0x4889c7	                            mov rdi, rax	       270	list-objects.c	FUNCTION_18	FOR_1	IF_4	CALL_3
0xc23	      0xe8e6f6ffff	                   call sym.process_tree	       270	list-objects.c	FUNCTION_18	FOR_1	IF_4	CALL_3
0xc28	        0x4883c410	                           add rsp, 0x10	       270	list-objects.c	FUNCTION_18	FOR_1	IF_4	CALL_3
0xc2c	            0xeb6d	                           jmp 0x4000cdb	       273	list-objects.c	FUNCTION_18	FOR_1	IF_4
0xc2e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       275	list-objects.c	FUNCTION_18	FOR_1	IF_5
0xc32	           0xfb600	                   movzx eax, byte [rax]	       275	list-objects.c	FUNCTION_18	FOR_1	IF_5
0xc35	          0x83e00e	                            and eax, 0xe	       275	list-objects.c	FUNCTION_18	FOR_1	IF_5
0xc38	            0x3c06	                               cmp al, 6	       275	list-objects.c	FUNCTION_18	FOR_1	IF_5
0xc3a	            0x7532	                           jne 0x4000cae	       275	list-objects.c	FUNCTION_18	FOR_1	IF_5
0xc3c	        0x4c8b45b0	              mov r8, qword [rbp - 0x50]	       276	list-objects.c	FUNCTION_18	FOR_1	IF_5	CALL_4
0xc40	        0x488b7de0	             mov rdi, qword [rbp - 0x20]	       276	list-objects.c	FUNCTION_18	FOR_1	IF_5	CALL_4
0xc44	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       276	list-objects.c	FUNCTION_18	FOR_1	IF_5	CALL_4
0xc48	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       276	list-objects.c	FUNCTION_18	FOR_1	IF_5	CALL_4
0xc4c	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       276	list-objects.c	FUNCTION_18	FOR_1	IF_5	CALL_4
0xc50	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       276	list-objects.c	FUNCTION_18	FOR_1	IF_5	CALL_4
0xc54	          0xff75a0	                 push qword [rbp - 0x60]	       276	list-objects.c	FUNCTION_18	FOR_1	IF_5	CALL_4
0xc57	          0xff75a8	                 push qword [rbp - 0x58]	       276	list-objects.c	FUNCTION_18	FOR_1	IF_5	CALL_4
0xc5a	          0x4d89c1	                              mov r9, r8	       276	list-objects.c	FUNCTION_18	FOR_1	IF_5	CALL_4
0xc5d	          0x4989f8	                             mov r8, rdi	       276	list-objects.c	FUNCTION_18	FOR_1	IF_5	CALL_4
0xc60	          0x4889c7	                            mov rdi, rax	       276	list-objects.c	FUNCTION_18	FOR_1	IF_5	CALL_4
0xc63	      0xe80bf5ffff	                   call sym.process_blob	       276	list-objects.c	FUNCTION_18	FOR_1	IF_5	CALL_4
0xc68	        0x4883c410	                           add rsp, 0x10	       276	list-objects.c	FUNCTION_18	FOR_1	IF_5	CALL_4
0xc6c	            0xeb2d	                           jmp 0x4000cdb	       279	list-objects.c	FUNCTION_18	FOR_1	IF_5
0xc6e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       282	list-objects.c	FUNCTION_18	FOR_1	CALL_6
0xc72	        0x4883c004	                              add rax, 4	       282	list-objects.c	FUNCTION_18	FOR_1	CALL_6
0xc76	          0x4889c7	                            mov rdi, rax	       281	list-objects.c	FUNCTION_18	FOR_1	CALL_5
0xc79	      0xe800000000	                          call 0x4000cbe	       281	list-objects.c	FUNCTION_18	FOR_1	CALL_5
0xc7e	          0x4889c1	                            mov rcx, rax	       281	list-objects.c	FUNCTION_18	FOR_1	CALL_5
0xc81	        0x488b45f8	                mov rax, qword [rbp - 8]	       281	list-objects.c	FUNCTION_18	FOR_1	CALL_5
0xc85	          0x4889c2	                            mov rdx, rax	       281	list-objects.c	FUNCTION_18	FOR_1	CALL_5
0xc88	          0x4889ce	                            mov rsi, rcx	       281	list-objects.c	FUNCTION_18	FOR_1	CALL_5
0xc8b	      0xbf00000000	                              mov edi, 0	       281	list-objects.c	FUNCTION_18	FOR_1	CALL_5
0xc90	      0xb800000000	                              mov eax, 0	       281	list-objects.c	FUNCTION_18	FOR_1	CALL_5
0xc95	      0xe800000000	                          call 0x4000cda	       281	list-objects.c	FUNCTION_18	FOR_1	CALL_5
0xc9a	              0x90	                                     nop	       261	list-objects.c	FUNCTION_18	FOR_1	IF_1
0xc9b	        0x8345dc01	               add dword [rbp - 0x24], 1	       255	list-objects.c	FUNCTION_18	FOR_1
0xc9f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       255	list-objects.c	FUNCTION_18	FOR_1
0xca3	          0x8b5008	                mov edx, dword [rax + 8]	       255	list-objects.c	FUNCTION_18	FOR_1
0xca6	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       255	list-objects.c	FUNCTION_18	FOR_1
0xca9	            0x39c2	                            cmp edx, eax	       255	list-objects.c	FUNCTION_18	FOR_1
0xcab	     0xf8783feffff	                            ja 0x4000b74	       255	list-objects.c	FUNCTION_18	FOR_1
0xcb1	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       284	list-objects.c	FUNCTION_18	CALL_7
0xcb5	        0x4883c008	                              add rax, 8	       284	list-objects.c	FUNCTION_18	CALL_7
0xcb9	          0x4889c7	                            mov rdi, rax	       284	list-objects.c	FUNCTION_18	CALL_7
0xcbc	      0xe800000000	                          call 0x4000d01	       284	list-objects.c	FUNCTION_18	CALL_7
0xcc1	              0x90	                                     nop	       285	list-objects.c	FUNCTION_18
0xcc2	              0xc9	                                   leave	       285	list-objects.c	FUNCTION_18
0xcc3	              0xc3	                                     ret	       285	list-objects.c	FUNCTION_18
traverse_commit_list	FOR,0:SWITCH,0:IF,0:ELSE,0:functions,0:CALL,1:WHILE,0:DO,0	18
0xde2	              0x55	                                push rbp	       327	list-objects.c	FUNCTION_20
0xde3	          0x4889e5	                            mov rbp, rsp	       327	list-objects.c	FUNCTION_20
0xde6	        0x4883ec20	                           sub rsp, 0x20	       327	list-objects.c	FUNCTION_20
0xdea	        0x48897df8	                mov qword [rbp - 8], rdi	       327	list-objects.c	FUNCTION_20
0xdee	        0x488975f0	             mov qword [rbp - 0x10], rsi	       327	list-objects.c	FUNCTION_20
0xdf2	        0x488955e8	             mov qword [rbp - 0x18], rdx	       327	list-objects.c	FUNCTION_20
0xdf6	        0x48894de0	             mov qword [rbp - 0x20], rcx	       327	list-objects.c	FUNCTION_20
0xdfa	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       328	list-objects.c	FUNCTION_20	CALL_1
0xdfe	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       328	list-objects.c	FUNCTION_20	CALL_1
0xe02	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       328	list-objects.c	FUNCTION_20	CALL_1
0xe06	        0x488b45f8	                mov rax, qword [rbp - 8]	       328	list-objects.c	FUNCTION_20	CALL_1
0xe0a	    0x41b900000000	                              mov r9d, 0	       328	list-objects.c	FUNCTION_20	CALL_1
0xe10	    0x41b800000000	                              mov r8d, 0	       328	list-objects.c	FUNCTION_20	CALL_1
0xe16	          0x4889c7	                            mov rdi, rax	       328	list-objects.c	FUNCTION_20	CALL_1
0xe19	      0xe8a6feffff	                    call sym.do_traverse	       328	list-objects.c	FUNCTION_20	CALL_1
0xe1e	              0x90	                                     nop	       329	list-objects.c	FUNCTION_20
0xe1f	              0xc9	                                   leave	       329	list-objects.c	FUNCTION_20
0xe20	              0xc3	                                     ret	       329	list-objects.c	FUNCTION_20
strbuf_addstr	FOR,0:SWITCH,0:IF,0:ELSE,0:functions,0:CALL,2:WHILE,0:DO,0	17
0x13e	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_5
0x13f	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_5
0x142	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_5
0x146	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_5
0x14a	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_5
0x14e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_5	CALL_2
0x152	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x155	      0xe800000000	                          call 0x400019a	       279	strbuf.h	FUNCTION_5	CALL_2
0x15a	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x15d	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_5	CALL_2
0x161	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_5	CALL_2
0x165	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_5	CALL_2
0x168	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x16b	      0xe800000000	                          call 0x40001b0	       279	strbuf.h	FUNCTION_5	CALL_2
0x170	              0x90	                                     nop	       280	strbuf.h	FUNCTION_5
0x171	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_5
0x172	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_5
process_tree	FOR,0:SWITCH,0:IF,18:ELSE,2:functions,0:CALL,23:WHILE,1:DO,0	310
0x30e	              0x55	                                push rbp	       101	list-objects.c	FUNCTION_14
0x30f	          0x4889e5	                            mov rbp, rsp	       101	list-objects.c	FUNCTION_14
0x312	              0x53	                                push rbx	       101	list-objects.c	FUNCTION_14
0x313	    0x4881ecb80000	                           sub rsp, 0xb8	       101	list-objects.c	FUNCTION_14
0x31a	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	       101	list-objects.c	FUNCTION_14
0x321	    0x4889b570ffff	             mov qword [rbp - 0x90], rsi	       101	list-objects.c	FUNCTION_14
0x328	    0x48899568ffff	             mov qword [rbp - 0x98], rdx	       101	list-objects.c	FUNCTION_14
0x32f	    0x48898d60ffff	             mov qword [rbp - 0xa0], rcx	       101	list-objects.c	FUNCTION_14
0x336	    0x4c898558ffff	              mov qword [rbp - 0xa8], r8	       101	list-objects.c	FUNCTION_14
0x33d	    0x4c898d50ffff	              mov qword [rbp - 0xb0], r9	       101	list-objects.c	FUNCTION_14
0x344	        0x488b4510	            mov rax, qword [rbp + 0x10] 	       101	list-objects.c	FUNCTION_14
0x348	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       101	list-objects.c	FUNCTION_14
0x34f	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       101	list-objects.c	FUNCTION_14
0x353	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       101	list-objects.c	FUNCTION_14
0x35a	    0x64488b042528	                mov rax, qword fs:[0x28]	       101	list-objects.c	FUNCTION_14
0x363	        0x488945e8	             mov qword [rbp - 0x18], rax	       101	list-objects.c	FUNCTION_14
0x367	            0x31c0	                            xor eax, eax	       101	list-objects.c	FUNCTION_14
0x369	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       102	list-objects.c	FUNCTION_14
0x370	        0x48894598	             mov qword [rbp - 0x68], rax	       102	list-objects.c	FUNCTION_14
0x374	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       105	list-objects.c	FUNCTION_14
0x37b	    0x8b8008060000	           mov eax, dword [rax + 0x608] 	       105	list-objects.c	FUNCTION_14
0x381	            0x85c0	                           test eax, eax	       106	list-objects.c	FUNCTION_14
0x383	            0x7507	                           jne 0x40003cc	       106	list-objects.c	FUNCTION_14
0x385	      0xb802000000	                              mov eax, 2	       106	list-objects.c	FUNCTION_14
0x38a	            0xeb05	                           jmp 0x40003d1	       106	list-objects.c	FUNCTION_14
0x38c	      0xb800000000	                              mov eax, 0	       106	list-objects.c	FUNCTION_14
0x391	          0x894588	             mov dword [rbp - 0x78], eax	       105	list-objects.c	FUNCTION_14
0x394	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       107	list-objects.c	FUNCTION_14
0x39b	        0x488b4008	                mov rax, qword [rax + 8]	       107	list-objects.c	FUNCTION_14
0x39f	          0x894590	             mov dword [rbp - 0x70], eax	       107	list-objects.c	FUNCTION_14
0x3a2	    0xc7458c030000	               mov dword [rbp - 0x74], 3	       108	list-objects.c	FUNCTION_14
0x3a9	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       109	list-objects.c	FUNCTION_14
0x3b0	         0xfb64074	           movzx eax, byte [rax + 0x74] 	       109	list-objects.c	FUNCTION_14
0x3b4	          0x83e002	                              and eax, 2	       109	list-objects.c	FUNCTION_14
0x3b7	            0x84c0	                             test al, al	       109	list-objects.c	FUNCTION_14
0x3b9	            0x7512	                           jne 0x400040d	       109	list-objects.c	FUNCTION_14
0x3bb	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       109	list-objects.c	FUNCTION_14
0x3c2	         0xfb64078	           movzx eax, byte [rax + 0x78] 	       109	list-objects.c	FUNCTION_14
0x3c6	          0x83e080	                     and eax, 0xffffff80	       109	list-objects.c	FUNCTION_14
0x3c9	            0x84c0	                             test al, al	       109	list-objects.c	FUNCTION_14
0x3cb	            0x7407	                            je 0x4000414	       109	list-objects.c	FUNCTION_14
0x3cd	      0xb801000000	                              mov eax, 1	       109	list-objects.c	FUNCTION_14
0x3d2	            0xeb05	                           jmp 0x4000419	       109	list-objects.c	FUNCTION_14
0x3d4	      0xb800000000	                              mov eax, 0	       109	list-objects.c	FUNCTION_14
0x3d9	          0x894594	             mov dword [rbp - 0x6c], eax	       109	list-objects.c	FUNCTION_14
0x3dc	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       112	list-objects.c	FUNCTION_14	IF_1
0x3e3	         0xfb64075	           movzx eax, byte [rax + 0x75] 	       112	list-objects.c	FUNCTION_14	IF_1
0x3e7	          0x83e020	                           and eax, 0x20	       112	list-objects.c	FUNCTION_14	IF_1
0x3ea	            0x84c0	                             test al, al	       112	list-objects.c	FUNCTION_14	IF_1
0x3ec	     0xf84f7030000	                            je 0x4000829	       112	list-objects.c	FUNCTION_14	IF_1
0x3f2	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       114	list-objects.c	FUNCTION_14	IF_2
0x3f7	            0x750f	                           jne 0x4000448	       114	list-objects.c	FUNCTION_14	IF_2
0x3f9	      0xbf00000000	                              mov edi, 0	       115	list-objects.c	FUNCTION_14	CALL_1
0x3fe	      0xb800000000	                              mov eax, 0	       115	list-objects.c	FUNCTION_14	CALL_1
0x403	      0xe800000000	                          call 0x4000448	       115	list-objects.c	FUNCTION_14	CALL_1
0x408	        0x488b4598	             mov rax, qword [rbp - 0x68]	       116	list-objects.c	FUNCTION_14	IF_3
0x40c	            0x8b00	                    mov eax, dword [rax]	       116	list-objects.c	FUNCTION_14	IF_3
0x40e	          0xc1e804	                              shr eax, 4	       116	list-objects.c	FUNCTION_14	IF_3
0x411	      0x25ffffff07	                      and eax, 0x7ffffff	       116	list-objects.c	FUNCTION_14	IF_3
0x416	          0x83e003	                              and eax, 3	       116	list-objects.c	FUNCTION_14	IF_3
0x419	            0x85c0	                           test eax, eax	       116	list-objects.c	FUNCTION_14	IF_3
0x41b	     0xf85cb030000	                           jne 0x400082c	       116	list-objects.c	FUNCTION_14	IF_3
0x421	          0x8b5594	             mov edx, dword [rbp - 0x6c]	       118	list-objects.c	FUNCTION_14	IF_4	CALL_2
0x424	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       118	list-objects.c	FUNCTION_14	IF_4	CALL_2
0x42b	            0x89d6	                            mov esi, edx	       118	list-objects.c	FUNCTION_14	IF_4	CALL_2
0x42d	          0x4889c7	                            mov rdi, rax	       118	list-objects.c	FUNCTION_14	IF_4	CALL_2
0x430	      0xe800000000	                          call 0x4000475	       118	list-objects.c	FUNCTION_14	IF_4	CALL_2
0x435	            0x85c0	                           test eax, eax	       118	list-objects.c	FUNCTION_14	IF_4	CALL_2
0x437	            0x7962	                           jns 0x40004db	       118	list-objects.c	FUNCTION_14	IF_4	CALL_2
0x439	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       119	list-objects.c	FUNCTION_14	IF_4	IF_5
0x440	         0xfb64074	           movzx eax, byte [rax + 0x74] 	       119	list-objects.c	FUNCTION_14	IF_4	IF_5
0x444	          0x83e002	                              and eax, 2	       119	list-objects.c	FUNCTION_14	IF_4	IF_5
0x447	            0x84c0	                             test al, al	       119	list-objects.c	FUNCTION_14	IF_4	IF_5
0x449	     0xf85a0030000	                           jne 0x400082f	       119	list-objects.c	FUNCTION_14	IF_4	IF_5
0x44f	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       127	list-objects.c	FUNCTION_14	IF_4	IF_6
0x456	         0xfb64078	           movzx eax, byte [rax + 0x78] 	       127	list-objects.c	FUNCTION_14	IF_4	IF_6
0x45a	          0x83e080	                     and eax, 0xffffff80	       127	list-objects.c	FUNCTION_14	IF_4	IF_6
0x45d	            0x84c0	                             test al, al	       127	list-objects.c	FUNCTION_14	IF_4	IF_6
0x45f	            0x7418	                            je 0x40004b9	       127	list-objects.c	FUNCTION_14	IF_4	IF_6
0x461	        0x488b4598	             mov rax, qword [rbp - 0x68]	       128	list-objects.c	FUNCTION_14	IF_4	IF_6	CALL_3
0x465	        0x4883c004	                              add rax, 4	       128	list-objects.c	FUNCTION_14	IF_4	IF_6	CALL_3
0x469	          0x4889c7	                            mov rdi, rax	       128	list-objects.c	FUNCTION_14	IF_4	IF_6	CALL_3
0x46c	      0xe800000000	                          call 0x40004b1	       128	list-objects.c	FUNCTION_14	IF_4	IF_6	CALL_3
0x471	            0x85c0	                           test eax, eax	       127	list-objects.c	FUNCTION_14	IF_4	IF_6
0x473	     0xf8579030000	                           jne 0x4000832	       127	list-objects.c	FUNCTION_14	IF_4	IF_6
0x479	        0x488b4598	             mov rax, qword [rbp - 0x68]	       131	list-objects.c	FUNCTION_14	IF_4	CALL_5
0x47d	        0x4883c004	                              add rax, 4	       131	list-objects.c	FUNCTION_14	IF_4	CALL_5
0x481	          0x4889c7	                            mov rdi, rax	       131	list-objects.c	FUNCTION_14	IF_4	CALL_5
0x484	      0xe800000000	                          call 0x40004c9	       131	list-objects.c	FUNCTION_14	IF_4	CALL_5
0x489	          0x4889c6	                            mov rsi, rax	       131	list-objects.c	FUNCTION_14	IF_4	CALL_5
0x48c	      0xbf00000000	                              mov edi, 0	       131	list-objects.c	FUNCTION_14	IF_4	CALL_5
0x491	      0xb800000000	                              mov eax, 0	       131	list-objects.c	FUNCTION_14	IF_4	CALL_5
0x496	      0xe800000000	                          call 0x40004db	       131	list-objects.c	FUNCTION_14	IF_4	CALL_5
0x49b	    0x488b9558ffff	             mov rdx, qword [rbp - 0xa8]	       134	list-objects.c	FUNCTION_14	CALL_6
0x4a2	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       134	list-objects.c	FUNCTION_14	CALL_6
0x4a9	          0x4889d6	                            mov rsi, rdx	       134	list-objects.c	FUNCTION_14	CALL_6
0x4ac	          0x4889c7	                            mov rdi, rax	       134	list-objects.c	FUNCTION_14	CALL_6
0x4af	      0xe88afcffff	                  call sym.strbuf_addstr	       134	list-objects.c	FUNCTION_14	CALL_6
0x4b4	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	       135	list-objects.c	FUNCTION_14	IF_7
0x4bc	            0x743e	                            je 0x400053c	       135	list-objects.c	FUNCTION_14	IF_7
0x4be	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       137	list-objects.c	FUNCTION_14	IF_7
0x4c5	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       137	list-objects.c	FUNCTION_14	IF_7
0x4c9	          0x8b4590	             mov eax, dword [rbp - 0x70]	       136	list-objects.c	FUNCTION_14	IF_7	CALL_7
0x4cc	            0x4898	                                    cdqe	       136	list-objects.c	FUNCTION_14	IF_7	CALL_7
0x4ce	        0x488d0c02	                    lea rcx, [rdx + rax]	       136	list-objects.c	FUNCTION_14	IF_7	CALL_7
0x4d2	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       137	list-objects.c	FUNCTION_14	IF_7
0x4d9	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       137	list-objects.c	FUNCTION_14	IF_7
0x4dd	    0x488bbd40ffff	             mov rdi, qword [rbp - 0xc0]	       136	list-objects.c	FUNCTION_14	IF_7	CALL_7
0x4e4	        0x488b7598	             mov rsi, qword [rbp - 0x68]	       136	list-objects.c	FUNCTION_14	IF_7	CALL_7
0x4e8	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       136	list-objects.c	FUNCTION_14	IF_7	CALL_7
0x4ef	          0x4989f8	                             mov r8, rdi	       136	list-objects.c	FUNCTION_14	IF_7	CALL_7
0x4f2	      0xbf00000000	                              mov edi, 0	       136	list-objects.c	FUNCTION_14	IF_7	CALL_7
0x4f7	            0xffd0	                                call rax	       136	list-objects.c	FUNCTION_14	IF_7	CALL_7
0x4f9	          0x89458c	             mov dword [rbp - 0x74], eax	       136	list-objects.c	FUNCTION_14	IF_7	CALL_7
0x4fc	          0x8b458c	             mov eax, dword [rbp - 0x74]	       139	list-objects.c	FUNCTION_14	IF_8
0x4ff	          0x83e001	                              and eax, 1	       139	list-objects.c	FUNCTION_14	IF_8
0x502	            0x85c0	                           test eax, eax	       139	list-objects.c	FUNCTION_14	IF_8
0x504	            0x742e	                            je 0x4000574	       139	list-objects.c	FUNCTION_14	IF_8
0x506	        0x488b4598	             mov rax, qword [rbp - 0x68]	       140	list-objects.c	FUNCTION_14	IF_8
0x50a	            0x8b00	                    mov eax, dword [rax]	       140	list-objects.c	FUNCTION_14	IF_8
0x50c	          0xc1e804	                              shr eax, 4	       140	list-objects.c	FUNCTION_14	IF_8
0x50f	      0x25ffffff07	                      and eax, 0x7ffffff	       140	list-objects.c	FUNCTION_14	IF_8
0x514	          0x83c801	                               or eax, 1	       140	list-objects.c	FUNCTION_14	IF_8
0x517	            0x89c2	                            mov edx, eax	       140	list-objects.c	FUNCTION_14	IF_8
0x519	        0x488b4598	             mov rax, qword [rbp - 0x68]	       140	list-objects.c	FUNCTION_14	IF_8
0x51d	    0x81e2ffffff07	                      and edx, 0x7ffffff	       140	list-objects.c	FUNCTION_14	IF_8
0x523	            0x89d1	                            mov ecx, edx	       140	list-objects.c	FUNCTION_14	IF_8
0x525	          0xc1e104	                              shl ecx, 4	       140	list-objects.c	FUNCTION_14	IF_8
0x528	            0x8b10	                    mov edx, dword [rax]	       140	list-objects.c	FUNCTION_14	IF_8
0x52a	    0x81e20f000080	                     and edx, 0x8000000f	       140	list-objects.c	FUNCTION_14	IF_8
0x530	             0x9ca	                             or edx, ecx	       140	list-objects.c	FUNCTION_14	IF_8
0x532	            0x8910	                    mov dword [rax], edx	       140	list-objects.c	FUNCTION_14	IF_8
0x534	          0x8b458c	             mov eax, dword [rbp - 0x74]	       141	list-objects.c	FUNCTION_14	IF_9
0x537	          0x83e002	                              and eax, 2	       141	list-objects.c	FUNCTION_14	IF_9
0x53a	            0x85c0	                           test eax, eax	       141	list-objects.c	FUNCTION_14	IF_9
0x53c	            0x7422	                            je 0x40005a0	       141	list-objects.c	FUNCTION_14	IF_9
0x53e	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       142	list-objects.c	FUNCTION_14	CALL_8
0x545	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       142	list-objects.c	FUNCTION_14	CALL_8
0x549	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	       142	list-objects.c	FUNCTION_14	CALL_8
0x550	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	       142	list-objects.c	FUNCTION_14	CALL_8
0x554	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       142	list-objects.c	FUNCTION_14	CALL_8
0x55b	          0x4889cf	                            mov rdi, rcx	       142	list-objects.c	FUNCTION_14	CALL_8
0x55e	            0xffd0	                                call rax	       142	list-objects.c	FUNCTION_14	CALL_8
0x560	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       143	list-objects.c	FUNCTION_14	IF_10
0x567	        0x488b4008	                mov rax, qword [rax + 8]	       143	list-objects.c	FUNCTION_14	IF_10
0x56b	          0x4885c0	                           test rax, rax	       143	list-objects.c	FUNCTION_14	IF_10
0x56e	            0x7414	                            je 0x40005c4	       143	list-objects.c	FUNCTION_14	IF_10
0x570	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       144	list-objects.c	FUNCTION_14	CALL_9
0x577	      0xbe2f000000	                           mov esi, 0x2f	       144	list-objects.c	FUNCTION_14	CALL_9
0x57c	          0x4889c7	                            mov rdi, rax	       144	list-objects.c	FUNCTION_14	CALL_9
0x57f	      0xe84cfbffff	                   call sym.strbuf_addch	       144	list-objects.c	FUNCTION_14	CALL_9
0x584	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       146	list-objects.c	FUNCTION_14	CALL_10
0x58b	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       146	list-objects.c	FUNCTION_14	CALL_10
0x58f	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       146	list-objects.c	FUNCTION_14	CALL_10
0x596	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       146	list-objects.c	FUNCTION_14	CALL_10
0x59a	        0x488d45c0	                   lea rax, [rbp - 0x40]	       146	list-objects.c	FUNCTION_14	CALL_10
0x59e	          0x4889ce	                            mov rsi, rcx	       146	list-objects.c	FUNCTION_14	CALL_10
0x5a1	          0x4889c7	                            mov rdi, rax	       146	list-objects.c	FUNCTION_14	CALL_10
0x5a4	      0xe800000000	                          call 0x40005e9	       146	list-objects.c	FUNCTION_14	CALL_10
0x5a9	      0xe944010000	                           jmp 0x4000732	       148	list-objects.c	FUNCTION_14	WHILE_1	CALL_11
0x5ae	        0x837d8802	               cmp dword [rbp - 0x78], 2	       149	list-objects.c	FUNCTION_14	WHILE_1	IF_11
0x5b2	            0x7441	                            je 0x4000635	       149	list-objects.c	FUNCTION_14	WHILE_1	IF_11
0x5b4	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       151	list-objects.c	FUNCTION_14	WHILE_1	IF_11
0x5bb	    0x488d90080600	                  lea rdx, [rax + 0x608]	       151	list-objects.c	FUNCTION_14	WHILE_1	IF_11
0x5c2	    0x488bb560ffff	             mov rsi, qword [rbp - 0xa0]	       150	list-objects.c	FUNCTION_14	WHILE_1	IF_11	CALL_12
0x5c9	        0x488d45a0	                   lea rax, [rbp - 0x60]	       150	list-objects.c	FUNCTION_14	WHILE_1	IF_11	CALL_12
0x5cd	          0x4889d1	                            mov rcx, rdx	       150	list-objects.c	FUNCTION_14	WHILE_1	IF_11	CALL_12
0x5d0	      0xba00000000	                              mov edx, 0	       150	list-objects.c	FUNCTION_14	WHILE_1	IF_11	CALL_12
0x5d5	          0x4889c7	                            mov rdi, rax	       150	list-objects.c	FUNCTION_14	WHILE_1	IF_11	CALL_12
0x5d8	      0xe800000000	                          call 0x400061d	       150	list-objects.c	FUNCTION_14	WHILE_1	IF_11	CALL_12
0x5dd	          0x894588	             mov dword [rbp - 0x78], eax	       150	list-objects.c	FUNCTION_14	WHILE_1	IF_11	CALL_12
0x5e0	        0x837d88ff	cmp dword [rbp - 0x78], 0xffffffffffffffff	       152	list-objects.c	FUNCTION_14	WHILE_1	IF_11	IF_12
0x5e4	     0xf8425010000	                            je 0x400074f	       152	list-objects.c	FUNCTION_14	WHILE_1	IF_11	IF_12
0x5ea	        0x837d8800	               cmp dword [rbp - 0x78], 0	       154	list-objects.c	FUNCTION_14	WHILE_1	IF_11	IF_13
0x5ee	            0x7505	                           jne 0x4000635	       154	list-objects.c	FUNCTION_14	WHILE_1	IF_11	IF_13
0x5f0	      0xe9fd000000	                           jmp 0x4000732	       155	list-objects.c	FUNCTION_14	WHILE_1	IF_11	IF_13
0x5f5	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       158	list-objects.c	FUNCTION_14	WHILE_1	IF_14	CALL_13
0x5f8	      0x2500f00000	                         and eax, 0xf000	       158	list-objects.c	FUNCTION_14	WHILE_1	IF_14	CALL_13
0x5fd	      0x3d00400000	                         cmp eax, 0x4000	       158	list-objects.c	FUNCTION_14	WHILE_1	IF_14	CALL_13
0x602	            0x7555	                           jne 0x4000699	       158	list-objects.c	FUNCTION_14	WHILE_1	IF_14	CALL_13
0x604	        0x488b5da8	             mov rbx, qword [rbp - 0x58]	       159	list-objects.c	FUNCTION_14	WHILE_1	IF_14	CALL_14
0x608	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       159	list-objects.c	FUNCTION_14	WHILE_1	IF_14	CALL_14
0x60c	          0x4889c7	                            mov rdi, rax	       159	list-objects.c	FUNCTION_14	WHILE_1	IF_14	CALL_14
0x60f	      0xe800000000	                          call 0x4000654	       159	list-objects.c	FUNCTION_14	WHILE_1	IF_14	CALL_14
0x614	          0x4889c7	                            mov rdi, rax	       159	list-objects.c	FUNCTION_14	WHILE_1	IF_14	CALL_14
0x617	    0x488bb550ffff	             mov rsi, qword [rbp - 0xb0]	       159	list-objects.c	FUNCTION_14	WHILE_1	IF_14	CALL_14
0x61e	    0x488b8d60ffff	             mov rcx, qword [rbp - 0xa0]	       159	list-objects.c	FUNCTION_14	WHILE_1	IF_14	CALL_14
0x625	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       159	list-objects.c	FUNCTION_14	WHILE_1	IF_14	CALL_14
0x62c	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       159	list-objects.c	FUNCTION_14	WHILE_1	IF_14	CALL_14
0x633	    0xffb540ffffff	                 push qword [rbp - 0xc0]	       159	list-objects.c	FUNCTION_14	WHILE_1	IF_14	CALL_14
0x639	    0xffb548ffffff	                 push qword [rbp - 0xb8]	       159	list-objects.c	FUNCTION_14	WHILE_1	IF_14	CALL_14
0x63f	          0x4989f1	                             mov r9, rsi	       159	list-objects.c	FUNCTION_14	WHILE_1	IF_14	CALL_14
0x642	          0x4989d8	                             mov r8, rbx	       159	list-objects.c	FUNCTION_14	WHILE_1	IF_14	CALL_14
0x645	          0x4889fe	                            mov rsi, rdi	       159	list-objects.c	FUNCTION_14	WHILE_1	IF_14	CALL_14
0x648	          0x4889c7	                            mov rdi, rax	       159	list-objects.c	FUNCTION_14	WHILE_1	IF_14	CALL_14
0x64b	      0xe8befcffff	                   call sym.process_tree	       159	list-objects.c	FUNCTION_14	WHILE_1	IF_14	CALL_14
0x650	        0x4883c410	                           add rsp, 0x10	       159	list-objects.c	FUNCTION_14	WHILE_1	IF_14	CALL_14
0x654	      0xe999000000	                           jmp 0x4000732	       159	list-objects.c	FUNCTION_14	WHILE_1	IF_14	CALL_14
0x659	          0x8b45b0	             mov eax, dword [rbp - 0x50]	       163	list-objects.c	FUNCTION_14	WHILE_1	ELSE_1	IF_15	CALL_16
0x65c	      0x2500f00000	                         and eax, 0xf000	       163	list-objects.c	FUNCTION_14	WHILE_1	ELSE_1	IF_15	CALL_16
0x661	      0x3d00e00000	                         cmp eax, 0xe000	       163	list-objects.c	FUNCTION_14	WHILE_1	ELSE_1	IF_15	CALL_16
0x666	            0x753a	                           jne 0x40006e2	       163	list-objects.c	FUNCTION_14	WHILE_1	ELSE_1	IF_15	CALL_16
0x668	        0x488b75a8	             mov rsi, qword [rbp - 0x58]	       164	list-objects.c	FUNCTION_14	WHILE_1	ELSE_1	IF_15	CALL_17
0x66c	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       164	list-objects.c	FUNCTION_14	WHILE_1	ELSE_1	IF_15	CALL_17
0x670	          0x4989c2	                            mov r10, rax	       164	list-objects.c	FUNCTION_14	WHILE_1	ELSE_1	IF_15	CALL_17
0x673	    0x488bbd50ffff	             mov rdi, qword [rbp - 0xb0]	       164	list-objects.c	FUNCTION_14	WHILE_1	ELSE_1	IF_15	CALL_17
0x67a	    0x488b8d60ffff	             mov rcx, qword [rbp - 0xa0]	       164	list-objects.c	FUNCTION_14	WHILE_1	ELSE_1	IF_15	CALL_17
0x681	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       164	list-objects.c	FUNCTION_14	WHILE_1	ELSE_1	IF_15	CALL_17
0x688	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       164	list-objects.c	FUNCTION_14	WHILE_1	ELSE_1	IF_15	CALL_17
0x68f	          0x4989f9	                             mov r9, rdi	       164	list-objects.c	FUNCTION_14	WHILE_1	ELSE_1	IF_15	CALL_17
0x692	          0x4989f0	                             mov r8, rsi	       164	list-objects.c	FUNCTION_14	WHILE_1	ELSE_1	IF_15	CALL_17
0x695	          0x4c89d6	                            mov rsi, r10	       164	list-objects.c	FUNCTION_14	WHILE_1	ELSE_1	IF_15	CALL_17
0x698	          0x4889c7	                            mov rdi, rax	       164	list-objects.c	FUNCTION_14	WHILE_1	ELSE_1	IF_15	CALL_17
0x69b	      0xe84ffcffff	                call sym.process_gitlink	       164	list-objects.c	FUNCTION_14	WHILE_1	ELSE_1	IF_15	CALL_17
0x6a0	            0xeb50	                           jmp 0x4000732	       164	list-objects.c	FUNCTION_14	WHILE_1	ELSE_1	IF_15	CALL_17
0x6a2	        0x488b5da8	             mov rbx, qword [rbp - 0x58]	       168	list-objects.c	FUNCTION_14	WHILE_1	ELSE_2	CALL_18
0x6a6	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       168	list-objects.c	FUNCTION_14	WHILE_1	ELSE_2	CALL_18
0x6aa	          0x4889c7	                            mov rdi, rax	       168	list-objects.c	FUNCTION_14	WHILE_1	ELSE_2	CALL_18
0x6ad	      0xe800000000	                          call 0x40006f2	       168	list-objects.c	FUNCTION_14	WHILE_1	ELSE_2	CALL_18
0x6b2	          0x4889c7	                            mov rdi, rax	       168	list-objects.c	FUNCTION_14	WHILE_1	ELSE_2	CALL_18
0x6b5	    0x488bb550ffff	             mov rsi, qword [rbp - 0xb0]	       168	list-objects.c	FUNCTION_14	WHILE_1	ELSE_2	CALL_18
0x6bc	    0x488b8d60ffff	             mov rcx, qword [rbp - 0xa0]	       168	list-objects.c	FUNCTION_14	WHILE_1	ELSE_2	CALL_18
0x6c3	    0x488b9568ffff	             mov rdx, qword [rbp - 0x98]	       168	list-objects.c	FUNCTION_14	WHILE_1	ELSE_2	CALL_18
0x6ca	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       168	list-objects.c	FUNCTION_14	WHILE_1	ELSE_2	CALL_18
0x6d1	    0xffb540ffffff	                 push qword [rbp - 0xc0]	       168	list-objects.c	FUNCTION_14	WHILE_1	ELSE_2	CALL_18
0x6d7	    0xffb548ffffff	                 push qword [rbp - 0xb8]	       168	list-objects.c	FUNCTION_14	WHILE_1	ELSE_2	CALL_18
0x6dd	          0x4989f1	                             mov r9, rsi	       168	list-objects.c	FUNCTION_14	WHILE_1	ELSE_2	CALL_18
0x6e0	          0x4989d8	                             mov r8, rbx	       168	list-objects.c	FUNCTION_14	WHILE_1	ELSE_2	CALL_18
0x6e3	          0x4889fe	                            mov rsi, rdi	       168	list-objects.c	FUNCTION_14	WHILE_1	ELSE_2	CALL_18
0x6e6	          0x4889c7	                            mov rdi, rax	       168	list-objects.c	FUNCTION_14	WHILE_1	ELSE_2	CALL_18
0x6e9	      0xe885faffff	                   call sym.process_blob	       168	list-objects.c	FUNCTION_14	WHILE_1	ELSE_2	CALL_18
0x6ee	        0x4883c410	                           add rsp, 0x10	       168	list-objects.c	FUNCTION_14	WHILE_1	ELSE_2	CALL_18
0x6f2	        0x488d55a0	                   lea rdx, [rbp - 0x60]	       148	list-objects.c	FUNCTION_14	WHILE_1	CALL_11
0x6f6	        0x488d45c0	                   lea rax, [rbp - 0x40]	       148	list-objects.c	FUNCTION_14	WHILE_1	CALL_11
0x6fa	          0x4889d6	                            mov rsi, rdx	       148	list-objects.c	FUNCTION_14	WHILE_1	CALL_11
0x6fd	          0x4889c7	                            mov rdi, rax	       148	list-objects.c	FUNCTION_14	WHILE_1	CALL_11
0x700	      0xe800000000	                          call 0x4000745	       148	list-objects.c	FUNCTION_14	WHILE_1	CALL_11
0x705	            0x85c0	                           test eax, eax	       148	list-objects.c	FUNCTION_14	WHILE_1	CALL_11
0x707	     0xf85a1feffff	                           jne 0x40005ee	       148	list-objects.c	FUNCTION_14	WHILE_1	CALL_11
0x70d	            0xeb01	                           jmp 0x4000750	       148	list-objects.c	FUNCTION_14	WHILE_1	CALL_11
0x70f	              0x90	                                     nop	       153	list-objects.c	FUNCTION_14	WHILE_1	IF_11	IF_12
0x710	    0x4883bd48ffff	               cmp qword [rbp - 0xb8], 0	       174	list-objects.c	FUNCTION_14	IF_16
0x718	     0xf84a2000000	                            je 0x4000800	       174	list-objects.c	FUNCTION_14	IF_16
0x71e	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       176	list-objects.c	FUNCTION_14	IF_16
0x725	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       176	list-objects.c	FUNCTION_14	IF_16
0x729	          0x8b4590	             mov eax, dword [rbp - 0x70]	       175	list-objects.c	FUNCTION_14	IF_16	CALL_20
0x72c	            0x4898	                                    cdqe	       175	list-objects.c	FUNCTION_14	IF_16	CALL_20
0x72e	        0x488d0c02	                    lea rcx, [rdx + rax]	       175	list-objects.c	FUNCTION_14	IF_16	CALL_20
0x732	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       176	list-objects.c	FUNCTION_14	IF_16
0x739	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       176	list-objects.c	FUNCTION_14	IF_16
0x73d	    0x488bbd40ffff	             mov rdi, qword [rbp - 0xc0]	       175	list-objects.c	FUNCTION_14	IF_16	CALL_20
0x744	        0x488b7598	             mov rsi, qword [rbp - 0x68]	       175	list-objects.c	FUNCTION_14	IF_16	CALL_20
0x748	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       175	list-objects.c	FUNCTION_14	IF_16	CALL_20
0x74f	          0x4989f8	                             mov r8, rdi	       175	list-objects.c	FUNCTION_14	IF_16	CALL_20
0x752	      0xbf01000000	                              mov edi, 1	       175	list-objects.c	FUNCTION_14	IF_16	CALL_20
0x757	            0xffd0	                                call rax	       175	list-objects.c	FUNCTION_14	IF_16	CALL_20
0x759	          0x89458c	             mov dword [rbp - 0x74], eax	       175	list-objects.c	FUNCTION_14	IF_16	CALL_20
0x75c	          0x8b458c	             mov eax, dword [rbp - 0x74]	       178	list-objects.c	FUNCTION_14	IF_16	IF_17
0x75f	          0x83e001	                              and eax, 1	       178	list-objects.c	FUNCTION_14	IF_16	IF_17
0x762	            0x85c0	                           test eax, eax	       178	list-objects.c	FUNCTION_14	IF_16	IF_17
0x764	            0x742e	                            je 0x40007d4	       178	list-objects.c	FUNCTION_14	IF_16	IF_17
0x766	        0x488b4598	             mov rax, qword [rbp - 0x68]	       179	list-objects.c	FUNCTION_14	IF_16	IF_17
0x76a	            0x8b00	                    mov eax, dword [rax]	       179	list-objects.c	FUNCTION_14	IF_16	IF_17
0x76c	          0xc1e804	                              shr eax, 4	       179	list-objects.c	FUNCTION_14	IF_16	IF_17
0x76f	      0x25ffffff07	                      and eax, 0x7ffffff	       179	list-objects.c	FUNCTION_14	IF_16	IF_17
0x774	          0x83c801	                               or eax, 1	       179	list-objects.c	FUNCTION_14	IF_16	IF_17
0x777	            0x89c2	                            mov edx, eax	       179	list-objects.c	FUNCTION_14	IF_16	IF_17
0x779	        0x488b4598	             mov rax, qword [rbp - 0x68]	       179	list-objects.c	FUNCTION_14	IF_16	IF_17
0x77d	    0x81e2ffffff07	                      and edx, 0x7ffffff	       179	list-objects.c	FUNCTION_14	IF_16	IF_17
0x783	            0x89d1	                            mov ecx, edx	       179	list-objects.c	FUNCTION_14	IF_16	IF_17
0x785	          0xc1e104	                              shl ecx, 4	       179	list-objects.c	FUNCTION_14	IF_16	IF_17
0x788	            0x8b10	                    mov edx, dword [rax]	       179	list-objects.c	FUNCTION_14	IF_16	IF_17
0x78a	    0x81e20f000080	                     and edx, 0x8000000f	       179	list-objects.c	FUNCTION_14	IF_16	IF_17
0x790	             0x9ca	                             or edx, ecx	       179	list-objects.c	FUNCTION_14	IF_16	IF_17
0x792	            0x8910	                    mov dword [rax], edx	       179	list-objects.c	FUNCTION_14	IF_16	IF_17
0x794	          0x8b458c	             mov eax, dword [rbp - 0x74]	       180	list-objects.c	FUNCTION_14	IF_16	IF_18
0x797	          0x83e002	                              and eax, 2	       180	list-objects.c	FUNCTION_14	IF_16	IF_18
0x79a	            0x85c0	                           test eax, eax	       180	list-objects.c	FUNCTION_14	IF_16	IF_18
0x79c	            0x7422	                            je 0x4000800	       180	list-objects.c	FUNCTION_14	IF_16	IF_18
0x79e	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       181	list-objects.c	FUNCTION_14	IF_16	CALL_21
0x7a5	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       181	list-objects.c	FUNCTION_14	IF_16	CALL_21
0x7a9	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	       181	list-objects.c	FUNCTION_14	IF_16	CALL_21
0x7b0	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	       181	list-objects.c	FUNCTION_14	IF_16	CALL_21
0x7b4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       181	list-objects.c	FUNCTION_14	IF_16	CALL_21
0x7bb	          0x4889cf	                            mov rdi, rcx	       181	list-objects.c	FUNCTION_14	IF_16	CALL_21
0x7be	            0xffd0	                                call rax	       181	list-objects.c	FUNCTION_14	IF_16	CALL_21
0x7c0	          0x8b4590	             mov eax, dword [rbp - 0x70]	       184	list-objects.c	FUNCTION_14	CALL_22
0x7c3	          0x4863d0	                         movsxd rdx, eax	       184	list-objects.c	FUNCTION_14	CALL_22
0x7c6	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	       184	list-objects.c	FUNCTION_14	CALL_22
0x7cd	          0x4889d6	                            mov rsi, rdx	       184	list-objects.c	FUNCTION_14	CALL_22
0x7d0	          0x4889c7	                            mov rdi, rax	       184	list-objects.c	FUNCTION_14	CALL_22
0x7d3	      0xe85ef8ffff	                  call sym.strbuf_setlen	       184	list-objects.c	FUNCTION_14	CALL_22
0x7d8	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       185	list-objects.c	FUNCTION_14	CALL_23
0x7df	          0x4889c7	                            mov rdi, rax	       185	list-objects.c	FUNCTION_14	CALL_23
0x7e2	      0xe800000000	                          call 0x4000827	       185	list-objects.c	FUNCTION_14	CALL_23
0x7e7	            0xeb0a	                           jmp 0x4000833	       185	list-objects.c	FUNCTION_14	CALL_23
0x7e9	              0x90	                                     nop	       113	list-objects.c	FUNCTION_14	IF_1
0x7ea	            0xeb07	                           jmp 0x4000833	       113	list-objects.c	FUNCTION_14	IF_1
0x7ec	              0x90	                                     nop	       117	list-objects.c	FUNCTION_14	IF_3
0x7ed	            0xeb04	                           jmp 0x4000833	       117	list-objects.c	FUNCTION_14	IF_3
0x7ef	              0x90	                                     nop	       120	list-objects.c	FUNCTION_14	IF_4	IF_5
0x7f0	            0xeb01	                           jmp 0x4000833	       120	list-objects.c	FUNCTION_14	IF_4	IF_5
0x7f2	              0x90	                                     nop	       129	list-objects.c	FUNCTION_14	IF_4	IF_6
0x7f3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       186	list-objects.c	FUNCTION_14
0x7f7	    0x644833042528	                xor rax, qword fs:[0x28]	       186	list-objects.c	FUNCTION_14
0x800	            0x7405	                            je 0x4000847	       186	list-objects.c	FUNCTION_14
0x802	      0xe800000000	                          call 0x4000847	       186	list-objects.c	FUNCTION_14
0x807	        0x488b5df8	                mov rbx, qword [rbp - 8]	       186	list-objects.c	FUNCTION_14
0x80b	              0xc9	                                   leave	       186	list-objects.c	FUNCTION_14
0x80c	              0xc3	                                     ret	       186	list-objects.c	FUNCTION_14
mark_edges_uninteresting	FOR,2:SWITCH,0:IF,5:ELSE,0:functions,0:CALL,7:WHILE,0:DO,0	141
0x8e2	              0x55	                                push rbp	       207	list-objects.c	FUNCTION_16
0x8e3	          0x4889e5	                            mov rbp, rsp	       207	list-objects.c	FUNCTION_16
0x8e6	        0x4883ec40	                           sub rsp, 0x40	       207	list-objects.c	FUNCTION_16
0x8ea	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       207	list-objects.c	FUNCTION_16
0x8ee	        0x488975c0	             mov qword [rbp - 0x40], rsi	       207	list-objects.c	FUNCTION_16
0x8f2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       211	list-objects.c	FUNCTION_16	FOR_1
0x8f6	          0x488b00	                    mov rax, qword [rax]	       211	list-objects.c	FUNCTION_16	FOR_1
0x8f9	        0x488945e0	             mov qword [rbp - 0x20], rax	       211	list-objects.c	FUNCTION_16	FOR_1
0x8fd	      0xe9bb000000	                           jmp 0x40009fd	       211	list-objects.c	FUNCTION_16	FOR_1
0x902	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       212	list-objects.c	FUNCTION_16	FOR_1
0x906	          0x488b00	                    mov rax, qword [rax]	       212	list-objects.c	FUNCTION_16	FOR_1
0x909	        0x488945e8	             mov qword [rbp - 0x18], rax	       212	list-objects.c	FUNCTION_16	FOR_1
0x90d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       214	list-objects.c	FUNCTION_16	FOR_1	IF_1
0x911	            0x8b00	                    mov eax, dword [rax]	       214	list-objects.c	FUNCTION_16	FOR_1	IF_1
0x913	          0xc1e804	                              shr eax, 4	       214	list-objects.c	FUNCTION_16	FOR_1	IF_1
0x916	      0x25ffffff07	                      and eax, 0x7ffffff	       214	list-objects.c	FUNCTION_16	FOR_1	IF_1
0x91b	          0x83e002	                              and eax, 2	       214	list-objects.c	FUNCTION_16	FOR_1	IF_1
0x91e	            0x85c0	                           test eax, eax	       214	list-objects.c	FUNCTION_16	FOR_1	IF_1
0x920	            0x7475	                            je 0x40009d7	       214	list-objects.c	FUNCTION_16	FOR_1	IF_1
0x922	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       215	list-objects.c	FUNCTION_16	FOR_1	IF_1	CALL_2
0x926	          0x4889c7	                            mov rdi, rax	       215	list-objects.c	FUNCTION_16	FOR_1	IF_1	CALL_2
0x929	      0xe800000000	                          call 0x400096e	       215	list-objects.c	FUNCTION_16	FOR_1	IF_1	CALL_2
0x92e	          0x4889c7	                            mov rdi, rax	       215	list-objects.c	FUNCTION_16	FOR_1	IF_1	CALL_2
0x931	      0xe800000000	                          call 0x4000976	       215	list-objects.c	FUNCTION_16	FOR_1	IF_1	CALL_2
0x936	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       216	list-objects.c	FUNCTION_16	FOR_1	IF_1	IF_2
0x93a	         0xfb64076	           movzx eax, byte [rax + 0x76] 	       216	list-objects.c	FUNCTION_16	FOR_1	IF_1	IF_2
0x93e	          0x83e002	                              and eax, 2	       216	list-objects.c	FUNCTION_16	FOR_1	IF_1	IF_2
0x941	            0x84c0	                             test al, al	       216	list-objects.c	FUNCTION_16	FOR_1	IF_1	IF_2
0x943	            0x746b	                            je 0x40009f0	       216	list-objects.c	FUNCTION_16	FOR_1	IF_1	IF_2
0x945	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       216	list-objects.c	FUNCTION_16	FOR_1	IF_1	IF_2
0x949	            0x8b00	                    mov eax, dword [rax]	       216	list-objects.c	FUNCTION_16	FOR_1	IF_1	IF_2
0x94b	          0xc1e804	                              shr eax, 4	       216	list-objects.c	FUNCTION_16	FOR_1	IF_1	IF_2
0x94e	      0x25ffffff07	                      and eax, 0x7ffffff	       216	list-objects.c	FUNCTION_16	FOR_1	IF_1	IF_2
0x953	          0x83e008	                              and eax, 8	       216	list-objects.c	FUNCTION_16	FOR_1	IF_1	IF_2
0x956	            0x85c0	                           test eax, eax	       216	list-objects.c	FUNCTION_16	FOR_1	IF_1	IF_2
0x958	            0x7556	                           jne 0x40009f0	       216	list-objects.c	FUNCTION_16	FOR_1	IF_1	IF_2
0x95a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       217	list-objects.c	FUNCTION_16	FOR_1	IF_1	IF_2
0x95e	            0x8b00	                    mov eax, dword [rax]	       217	list-objects.c	FUNCTION_16	FOR_1	IF_1	IF_2
0x960	          0xc1e804	                              shr eax, 4	       217	list-objects.c	FUNCTION_16	FOR_1	IF_1	IF_2
0x963	      0x25ffffff07	                      and eax, 0x7ffffff	       217	list-objects.c	FUNCTION_16	FOR_1	IF_1	IF_2
0x968	          0x83c808	                               or eax, 8	       217	list-objects.c	FUNCTION_16	FOR_1	IF_1	IF_2
0x96b	            0x89c2	                            mov edx, eax	       217	list-objects.c	FUNCTION_16	FOR_1	IF_1	IF_2
0x96d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       217	list-objects.c	FUNCTION_16	FOR_1	IF_1	IF_2
0x971	    0x81e2ffffff07	                      and edx, 0x7ffffff	       217	list-objects.c	FUNCTION_16	FOR_1	IF_1	IF_2
0x977	            0x89d1	                            mov ecx, edx	       217	list-objects.c	FUNCTION_16	FOR_1	IF_1	IF_2
0x979	          0xc1e104	                              shl ecx, 4	       217	list-objects.c	FUNCTION_16	FOR_1	IF_1	IF_2
0x97c	            0x8b10	                    mov edx, dword [rax]	       217	list-objects.c	FUNCTION_16	FOR_1	IF_1	IF_2
0x97e	    0x81e20f000080	                     and edx, 0x8000000f	       217	list-objects.c	FUNCTION_16	FOR_1	IF_1	IF_2
0x984	             0x9ca	                             or edx, ecx	       217	list-objects.c	FUNCTION_16	FOR_1	IF_1	IF_2
0x986	            0x8910	                    mov dword [rax], edx	       217	list-objects.c	FUNCTION_16	FOR_1	IF_1	IF_2
0x988	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       218	list-objects.c	FUNCTION_16	FOR_1	IF_1	IF_2	CALL_3
0x98c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       218	list-objects.c	FUNCTION_16	FOR_1	IF_1	IF_2	CALL_3
0x990	          0x4889d7	                            mov rdi, rdx	       218	list-objects.c	FUNCTION_16	FOR_1	IF_1	IF_2	CALL_3
0x993	            0xffd0	                                call rax	       218	list-objects.c	FUNCTION_16	FOR_1	IF_1	IF_2	CALL_3
0x995	            0xeb19	                           jmp 0x40009f0	       220	list-objects.c	FUNCTION_16	FOR_1	IF_1
0x997	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       222	list-objects.c	FUNCTION_16	FOR_1	CALL_4
0x99b	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       222	list-objects.c	FUNCTION_16	FOR_1	CALL_4
0x99f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       222	list-objects.c	FUNCTION_16	FOR_1	CALL_4
0x9a3	          0x4889ce	                            mov rsi, rcx	       222	list-objects.c	FUNCTION_16	FOR_1	CALL_4
0x9a6	          0x4889c7	                            mov rdi, rax	       222	list-objects.c	FUNCTION_16	FOR_1	CALL_4
0x9a9	      0xe85ffeffff	call sym.mark_edge_parents_uninteresting	       222	list-objects.c	FUNCTION_16	FOR_1	CALL_4
0x9ae	            0xeb01	                           jmp 0x40009f1	       222	list-objects.c	FUNCTION_16	FOR_1	CALL_4
0x9b0	              0x90	                                     nop	       220	list-objects.c	FUNCTION_16	FOR_1	IF_1
0x9b1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       211	list-objects.c	FUNCTION_16	FOR_1
0x9b5	        0x488b4008	                mov rax, qword [rax + 8]	       211	list-objects.c	FUNCTION_16	FOR_1
0x9b9	        0x488945e0	             mov qword [rbp - 0x20], rax	       211	list-objects.c	FUNCTION_16	FOR_1
0x9bd	      0x48837de000	               cmp qword [rbp - 0x20], 0	       211	list-objects.c	FUNCTION_16	FOR_1
0x9c2	     0xf853affffff	                           jne 0x4000942	       211	list-objects.c	FUNCTION_16	FOR_1
0x9c8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       224	list-objects.c	FUNCTION_16	IF_3
0x9cc	         0xfb64076	           movzx eax, byte [rax + 0x76] 	       224	list-objects.c	FUNCTION_16	IF_3
0x9d0	          0x83e002	                              and eax, 2	       224	list-objects.c	FUNCTION_16	IF_3
0x9d3	            0x84c0	                             test al, al	       224	list-objects.c	FUNCTION_16	IF_3
0x9d5	     0xf84d9000000	                            je 0x4000af4	       224	list-objects.c	FUNCTION_16	IF_3
0x9db	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       225	list-objects.c	FUNCTION_16	IF_3	FOR_2
0x9e2	      0xe9bb000000	                           jmp 0x4000ae2	       225	list-objects.c	FUNCTION_16	IF_3	FOR_2
0x9e7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       226	list-objects.c	FUNCTION_16	IF_3	FOR_2
0x9eb	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       226	list-objects.c	FUNCTION_16	IF_3	FOR_2
0x9ef	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       226	list-objects.c	FUNCTION_16	IF_3	FOR_2
0x9f2	          0x4863d0	                         movsxd rdx, eax	       226	list-objects.c	FUNCTION_16	IF_3	FOR_2
0x9f5	          0x4889d0	                            mov rax, rdx	       226	list-objects.c	FUNCTION_16	IF_3	FOR_2
0x9f8	          0x4801c0	                            add rax, rax	       226	list-objects.c	FUNCTION_16	IF_3	FOR_2
0x9fb	          0x4801d0	                            add rax, rdx	       226	list-objects.c	FUNCTION_16	IF_3	FOR_2
0x9fe	        0x48c1e003	                              shl rax, 3	       226	list-objects.c	FUNCTION_16	IF_3	FOR_2
0xa02	          0x4801c8	                            add rax, rcx	       226	list-objects.c	FUNCTION_16	IF_3	FOR_2
0xa05	          0x488b00	                    mov rax, qword [rax]	       226	list-objects.c	FUNCTION_16	IF_3	FOR_2
0xa08	        0x488945f0	             mov qword [rbp - 0x10], rax	       226	list-objects.c	FUNCTION_16	IF_3	FOR_2
0xa0c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       227	list-objects.c	FUNCTION_16	IF_3	FOR_2
0xa10	        0x488945f8	                mov qword [rbp - 8], rax	       227	list-objects.c	FUNCTION_16	IF_3	FOR_2
0xa14	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       228	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_4
0xa18	           0xfb600	                   movzx eax, byte [rax]	       228	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_4
0xa1b	          0x83e00e	                            and eax, 0xe	       228	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_4
0xa1e	            0x3c02	                               cmp al, 2	       228	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_4
0xa20	            0x757b	                           jne 0x4000add	       228	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_4
0xa22	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       228	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_4
0xa26	            0x8b00	                    mov eax, dword [rax]	       228	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_4
0xa28	          0xc1e804	                              shr eax, 4	       228	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_4
0xa2b	      0x25ffffff07	                      and eax, 0x7ffffff	       228	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_4
0xa30	          0x83e002	                              and eax, 2	       228	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_4
0xa33	            0x85c0	                           test eax, eax	       228	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_4
0xa35	            0x7466	                            je 0x4000add	       228	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_4
0xa37	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	list-objects.c	FUNCTION_16	IF_3	FOR_2	CALL_6
0xa3b	          0x4889c7	                            mov rdi, rax	       230	list-objects.c	FUNCTION_16	IF_3	FOR_2	CALL_6
0xa3e	      0xe800000000	                          call 0x4000a83	       230	list-objects.c	FUNCTION_16	IF_3	FOR_2	CALL_6
0xa43	          0x4889c7	                            mov rdi, rax	       230	list-objects.c	FUNCTION_16	IF_3	FOR_2	CALL_6
0xa46	      0xe800000000	                          call 0x4000a8b	       230	list-objects.c	FUNCTION_16	IF_3	FOR_2	CALL_6
0xa4b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       231	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_5
0xa4f	            0x8b00	                    mov eax, dword [rax]	       231	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_5
0xa51	          0xc1e804	                              shr eax, 4	       231	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_5
0xa54	      0x25ffffff07	                      and eax, 0x7ffffff	       231	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_5
0xa59	          0x83e008	                              and eax, 8	       231	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_5
0xa5c	            0x85c0	                           test eax, eax	       231	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_5
0xa5e	            0x753e	                           jne 0x4000ade	       231	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_5
0xa60	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       232	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_5
0xa64	            0x8b00	                    mov eax, dword [rax]	       232	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_5
0xa66	          0xc1e804	                              shr eax, 4	       232	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_5
0xa69	      0x25ffffff07	                      and eax, 0x7ffffff	       232	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_5
0xa6e	          0x83c808	                               or eax, 8	       232	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_5
0xa71	            0x89c2	                            mov edx, eax	       232	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_5
0xa73	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       232	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_5
0xa77	    0x81e2ffffff07	                      and edx, 0x7ffffff	       232	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_5
0xa7d	            0x89d1	                            mov ecx, edx	       232	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_5
0xa7f	          0xc1e104	                              shl ecx, 4	       232	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_5
0xa82	            0x8b10	                    mov edx, dword [rax]	       232	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_5
0xa84	    0x81e20f000080	                     and edx, 0x8000000f	       232	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_5
0xa8a	             0x9ca	                             or edx, ecx	       232	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_5
0xa8c	            0x8910	                    mov dword [rax], edx	       232	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_5
0xa8e	        0x488b55f8	                mov rdx, qword [rbp - 8]	       233	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_5	CALL_7
0xa92	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       233	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_5	CALL_7
0xa96	          0x4889d7	                            mov rdi, rdx	       233	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_5	CALL_7
0xa99	            0xffd0	                                call rax	       233	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_5	CALL_7
0xa9b	            0xeb01	                           jmp 0x4000ade	       233	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_5	CALL_7
0xa9d	              0x90	                                     nop	       229	list-objects.c	FUNCTION_16	IF_3	FOR_2	IF_4
0xa9e	        0x8345dc01	               add dword [rbp - 0x24], 1	       225	list-objects.c	FUNCTION_16	IF_3	FOR_2
0xaa2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       225	list-objects.c	FUNCTION_16	IF_3	FOR_2
0xaa6	          0x8b5028	            mov edx, dword [rax + 0x28] 	       225	list-objects.c	FUNCTION_16	IF_3	FOR_2
0xaa9	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       225	list-objects.c	FUNCTION_16	IF_3	FOR_2
0xaac	            0x39c2	                            cmp edx, eax	       225	list-objects.c	FUNCTION_16	IF_3	FOR_2
0xaae	     0xf8733ffffff	                            ja 0x4000a27	       225	list-objects.c	FUNCTION_16	IF_3	FOR_2
0xab4	              0x90	                                     nop	       237	list-objects.c	FUNCTION_16
0xab5	              0xc9	                                   leave	       237	list-objects.c	FUNCTION_16
0xab6	              0xc3	                                     ret	       237	list-objects.c	FUNCTION_16
process_blob	FOR,0:SWITCH,0:IF,7:ELSE,0:functions,0:CALL,7:WHILE,0:DO,0	111
0x173	              0x55	                                push rbp	        22	list-objects.c	FUNCTION_12
0x174	          0x4889e5	                            mov rbp, rsp	        22	list-objects.c	FUNCTION_12
0x177	        0x4883ec50	                           sub rsp, 0x50	        22	list-objects.c	FUNCTION_12
0x17b	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        22	list-objects.c	FUNCTION_12
0x17f	        0x488975d0	             mov qword [rbp - 0x30], rsi	        22	list-objects.c	FUNCTION_12
0x183	        0x488955c8	             mov qword [rbp - 0x38], rdx	        22	list-objects.c	FUNCTION_12
0x187	        0x48894dc0	             mov qword [rbp - 0x40], rcx	        22	list-objects.c	FUNCTION_12
0x18b	        0x4c8945b8	              mov qword [rbp - 0x48], r8	        22	list-objects.c	FUNCTION_12
0x18f	        0x4c894db0	              mov qword [rbp - 0x50], r9	        22	list-objects.c	FUNCTION_12
0x193	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        23	list-objects.c	FUNCTION_12
0x197	        0x488945f0	             mov qword [rbp - 0x10], rax	        23	list-objects.c	FUNCTION_12
0x19b	    0xc745ec030000	               mov dword [rbp - 0x14], 3	        25	list-objects.c	FUNCTION_12
0x1a2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        27	list-objects.c	FUNCTION_12	IF_1
0x1a6	         0xfb64075	           movzx eax, byte [rax + 0x75] 	        27	list-objects.c	FUNCTION_12	IF_1
0x1aa	          0x83e040	                           and eax, 0x40	        27	list-objects.c	FUNCTION_12	IF_1
0x1ad	            0x84c0	                             test al, al	        27	list-objects.c	FUNCTION_12	IF_1
0x1af	     0xf8431010000	                            je 0x4000326	        27	list-objects.c	FUNCTION_12	IF_1
0x1b5	      0x48837df000	               cmp qword [rbp - 0x10], 0	        29	list-objects.c	FUNCTION_12	IF_2
0x1ba	            0x750f	                           jne 0x400020b	        29	list-objects.c	FUNCTION_12	IF_2
0x1bc	      0xbf00000000	                              mov edi, 0	        30	list-objects.c	FUNCTION_12	CALL_1
0x1c1	      0xb800000000	                              mov eax, 0	        30	list-objects.c	FUNCTION_12	CALL_1
0x1c6	      0xe800000000	                          call 0x400020b	        30	list-objects.c	FUNCTION_12	CALL_1
0x1cb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        31	list-objects.c	FUNCTION_12	IF_3
0x1cf	            0x8b00	                    mov eax, dword [rax]	        31	list-objects.c	FUNCTION_12	IF_3
0x1d1	          0xc1e804	                              shr eax, 4	        31	list-objects.c	FUNCTION_12	IF_3
0x1d4	      0x25ffffff07	                      and eax, 0x7ffffff	        31	list-objects.c	FUNCTION_12	IF_3
0x1d9	          0x83e003	                              and eax, 3	        31	list-objects.c	FUNCTION_12	IF_3
0x1dc	            0x85c0	                           test eax, eax	        31	list-objects.c	FUNCTION_12	IF_3
0x1de	     0xf8505010000	                           jne 0x4000329	        31	list-objects.c	FUNCTION_12	IF_3
0x1e4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        43	list-objects.c	FUNCTION_12	IF_4
0x1e8	         0xfb64078	           movzx eax, byte [rax + 0x78] 	        43	list-objects.c	FUNCTION_12	IF_4
0x1ec	          0x83e080	                     and eax, 0xffffff80	        43	list-objects.c	FUNCTION_12	IF_4
0x1ef	            0x84c0	                             test al, al	        43	list-objects.c	FUNCTION_12	IF_4
0x1f1	            0x742c	                            je 0x400025f	        43	list-objects.c	FUNCTION_12	IF_4
0x1f3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        44	list-objects.c	FUNCTION_12	IF_4	CALL_2
0x1f7	        0x4883c004	                              add rax, 4	        44	list-objects.c	FUNCTION_12	IF_4	CALL_2
0x1fb	          0x4889c7	                            mov rdi, rax	        44	list-objects.c	FUNCTION_12	IF_4	CALL_2
0x1fe	      0xe800000000	                          call 0x4000243	        44	list-objects.c	FUNCTION_12	IF_4	CALL_2
0x203	            0x85c0	                           test eax, eax	        43	list-objects.c	FUNCTION_12	IF_4
0x205	            0x7518	                           jne 0x400025f	        43	list-objects.c	FUNCTION_12	IF_4
0x207	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        45	list-objects.c	FUNCTION_12	IF_4	CALL_3
0x20b	        0x4883c004	                              add rax, 4	        45	list-objects.c	FUNCTION_12	IF_4	CALL_3
0x20f	          0x4889c7	                            mov rdi, rax	        45	list-objects.c	FUNCTION_12	IF_4	CALL_3
0x212	      0xe800000000	                          call 0x4000257	        45	list-objects.c	FUNCTION_12	IF_4	CALL_3
0x217	            0x85c0	                           test eax, eax	        44	list-objects.c	FUNCTION_12	IF_4	CALL_2
0x219	     0xf85cd000000	                           jne 0x400032c	        44	list-objects.c	FUNCTION_12	IF_4	CALL_2
0x21f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        48	list-objects.c	FUNCTION_12
0x223	        0x488b4008	                mov rax, qword [rax + 8]	        48	list-objects.c	FUNCTION_12
0x227	        0x488945f8	                mov qword [rbp - 8], rax	        48	list-objects.c	FUNCTION_12
0x22b	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	        49	list-objects.c	FUNCTION_12	CALL_4
0x22f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        49	list-objects.c	FUNCTION_12	CALL_4
0x233	          0x4889d6	                            mov rsi, rdx	        49	list-objects.c	FUNCTION_12	CALL_4
0x236	          0x4889c7	                            mov rdi, rax	        49	list-objects.c	FUNCTION_12	CALL_4
0x239	      0xe800ffffff	                  call sym.strbuf_addstr	        49	list-objects.c	FUNCTION_12	CALL_4
0x23e	      0x48837d1000	               cmp qword [rbp + 0x10], 0	        50	list-objects.c	FUNCTION_12	IF_5
0x243	            0x7431	                            je 0x40002b6	        50	list-objects.c	FUNCTION_12	IF_5
0x245	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        52	list-objects.c	FUNCTION_12	IF_5
0x249	        0x488b5010	            mov rdx, qword [rax + 0x10] 	        52	list-objects.c	FUNCTION_12	IF_5
0x24d	        0x488b45f8	                mov rax, qword [rbp - 8]	        51	list-objects.c	FUNCTION_12	IF_5	CALL_5
0x251	        0x488d0c02	                    lea rcx, [rdx + rax]	        51	list-objects.c	FUNCTION_12	IF_5	CALL_5
0x255	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        52	list-objects.c	FUNCTION_12	IF_5
0x259	        0x488b5010	            mov rdx, qword [rax + 0x10] 	        52	list-objects.c	FUNCTION_12	IF_5
0x25d	        0x488b7d18	            mov rdi, qword [rbp + 0x18] 	        51	list-objects.c	FUNCTION_12	IF_5	CALL_5
0x261	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	        51	list-objects.c	FUNCTION_12	IF_5	CALL_5
0x265	        0x488b4510	            mov rax, qword [rbp + 0x10] 	        51	list-objects.c	FUNCTION_12	IF_5	CALL_5
0x269	          0x4989f8	                             mov r8, rdi	        51	list-objects.c	FUNCTION_12	IF_5	CALL_5
0x26c	      0xbf02000000	                              mov edi, 2	        51	list-objects.c	FUNCTION_12	IF_5	CALL_5
0x271	            0xffd0	                                call rax	        51	list-objects.c	FUNCTION_12	IF_5	CALL_5
0x273	          0x8945ec	             mov dword [rbp - 0x14], eax	        51	list-objects.c	FUNCTION_12	IF_5	CALL_5
0x276	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        54	list-objects.c	FUNCTION_12	IF_6
0x279	          0x83e001	                              and eax, 1	        54	list-objects.c	FUNCTION_12	IF_6
0x27c	            0x85c0	                           test eax, eax	        54	list-objects.c	FUNCTION_12	IF_6
0x27e	            0x742e	                            je 0x40002ee	        54	list-objects.c	FUNCTION_12	IF_6
0x280	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        55	list-objects.c	FUNCTION_12	IF_6
0x284	            0x8b00	                    mov eax, dword [rax]	        55	list-objects.c	FUNCTION_12	IF_6
0x286	          0xc1e804	                              shr eax, 4	        55	list-objects.c	FUNCTION_12	IF_6
0x289	      0x25ffffff07	                      and eax, 0x7ffffff	        55	list-objects.c	FUNCTION_12	IF_6
0x28e	          0x83c801	                               or eax, 1	        55	list-objects.c	FUNCTION_12	IF_6
0x291	            0x89c2	                            mov edx, eax	        55	list-objects.c	FUNCTION_12	IF_6
0x293	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        55	list-objects.c	FUNCTION_12	IF_6
0x297	    0x81e2ffffff07	                      and edx, 0x7ffffff	        55	list-objects.c	FUNCTION_12	IF_6
0x29d	            0x89d1	                            mov ecx, edx	        55	list-objects.c	FUNCTION_12	IF_6
0x29f	          0xc1e104	                              shl ecx, 4	        55	list-objects.c	FUNCTION_12	IF_6
0x2a2	            0x8b10	                    mov edx, dword [rax]	        55	list-objects.c	FUNCTION_12	IF_6
0x2a4	    0x81e20f000080	                     and edx, 0x8000000f	        55	list-objects.c	FUNCTION_12	IF_6
0x2aa	             0x9ca	                             or edx, ecx	        55	list-objects.c	FUNCTION_12	IF_6
0x2ac	            0x8910	                    mov dword [rax], edx	        55	list-objects.c	FUNCTION_12	IF_6
0x2ae	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        56	list-objects.c	FUNCTION_12	IF_7
0x2b1	          0x83e002	                              and eax, 2	        56	list-objects.c	FUNCTION_12	IF_7
0x2b4	            0x85c0	                           test eax, eax	        56	list-objects.c	FUNCTION_12	IF_7
0x2b6	            0x7419	                            je 0x4000311	        56	list-objects.c	FUNCTION_12	IF_7
0x2b8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        57	list-objects.c	FUNCTION_12	CALL_6
0x2bc	        0x488b7010	            mov rsi, qword [rax + 0x10] 	        57	list-objects.c	FUNCTION_12	CALL_6
0x2c0	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	        57	list-objects.c	FUNCTION_12	CALL_6
0x2c4	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        57	list-objects.c	FUNCTION_12	CALL_6
0x2c8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        57	list-objects.c	FUNCTION_12	CALL_6
0x2cc	          0x4889cf	                            mov rdi, rcx	        57	list-objects.c	FUNCTION_12	CALL_6
0x2cf	            0xffd0	                                call rax	        57	list-objects.c	FUNCTION_12	CALL_6
0x2d1	        0x488b55f8	                mov rdx, qword [rbp - 8]	        58	list-objects.c	FUNCTION_12	CALL_7
0x2d5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        58	list-objects.c	FUNCTION_12	CALL_7
0x2d9	          0x4889d6	                            mov rsi, rdx	        58	list-objects.c	FUNCTION_12	CALL_7
0x2dc	          0x4889c7	                            mov rdi, rax	        58	list-objects.c	FUNCTION_12	CALL_7
0x2df	      0xe852fdffff	                  call sym.strbuf_setlen	        58	list-objects.c	FUNCTION_12	CALL_7
0x2e4	            0xeb07	                           jmp 0x400032d	        58	list-objects.c	FUNCTION_12	CALL_7
0x2e6	              0x90	                                     nop	        28	list-objects.c	FUNCTION_12	IF_1
0x2e7	            0xeb04	                           jmp 0x400032d	        28	list-objects.c	FUNCTION_12	IF_1
0x2e9	              0x90	                                     nop	        32	list-objects.c	FUNCTION_12	IF_3
0x2ea	            0xeb01	                           jmp 0x400032d	        32	list-objects.c	FUNCTION_12	IF_3
0x2ec	              0x90	                                     nop	        46	list-objects.c	FUNCTION_12	IF_4
0x2ed	              0xc9	                                   leave	        59	list-objects.c	FUNCTION_12
0x2ee	              0xc3	                                     ret	        59	list-objects.c	FUNCTION_12
process_gitlink	FOR,0:SWITCH,0:IF,0:ELSE,0:functions,0:CALL,0:WHILE,0:DO,0	11
0x2ef	              0x55	                                push rbp	        89	list-objects.c	FUNCTION_13
0x2f0	          0x4889e5	                            mov rbp, rsp	        89	list-objects.c	FUNCTION_13
0x2f3	        0x48897df8	                mov qword [rbp - 8], rdi	        89	list-objects.c	FUNCTION_13
0x2f7	        0x488975f0	             mov qword [rbp - 0x10], rsi	        89	list-objects.c	FUNCTION_13
0x2fb	        0x488955e8	             mov qword [rbp - 0x18], rdx	        89	list-objects.c	FUNCTION_13
0x2ff	        0x48894de0	             mov qword [rbp - 0x20], rcx	        89	list-objects.c	FUNCTION_13
0x303	        0x4c8945d8	              mov qword [rbp - 0x28], r8	        89	list-objects.c	FUNCTION_13
0x307	        0x4c894dd0	              mov qword [rbp - 0x30], r9	        89	list-objects.c	FUNCTION_13
0x30b	              0x90	                                     nop	        91	list-objects.c	FUNCTION_13
0x30c	              0x5d	                                 pop rbp	        91	list-objects.c	FUNCTION_13
0x30d	              0xc3	                                     ret	        91	list-objects.c	FUNCTION_13
strbuf_setlen	FOR,0:SWITCH,0:IF,2:ELSE,1:functions,0:CALL,2:WHILE,0:DO,0	43
0x36	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_3
0x37	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_3
0x3a	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_3
0x3e	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_3
0x42	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_3
0x46	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_3	IF_1
0x4a	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_3	IF_1
0x4d	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_3	IF_1
0x50	            0x740d	                            je 0x400009f	       162	strbuf.h	FUNCTION_3	IF_1
0x52	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_3	IF_1
0x56	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_3	IF_1
0x59	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_3	IF_1
0x5d	            0xeb05	                           jmp 0x40000a4	       162	strbuf.h	FUNCTION_3	IF_1
0x5f	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_3	IF_1
0x64	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_3	IF_1
0x68	            0x730f	                           jae 0x40000b9	       162	strbuf.h	FUNCTION_3	IF_1
0x6a	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_3	CALL_1
0x6f	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_3	CALL_1
0x74	      0xe800000000	                          call 0x40000b9	       163	strbuf.h	FUNCTION_3	CALL_1
0x79	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_3
0x7d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_3
0x81	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_3
0x85	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_3	IF_2
0x89	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_3	IF_2
0x8d	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_3	IF_2
0x93	            0x7414	                            je 0x40000e9	       165	strbuf.h	FUNCTION_3	IF_2
0x95	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_3	IF_2
0x99	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_3	IF_2
0x9d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_3	IF_2
0xa1	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_3	IF_2
0xa4	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_3	IF_2
0xa7	            0xeb24	                           jmp 0x400010d	       169	strbuf.h	FUNCTION_3
0xa9	     0xfb605000000	           movzx eax, byte [0x040000f0] 	       168	strbuf.h	FUNCTION_3	CALL_2
0xb0	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_3	CALL_2
0xb2	            0x7419	                            je 0x400010d	       168	strbuf.h	FUNCTION_3	CALL_2
0xb4	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0xb9	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_3	CALL_2
0xbe	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0xc3	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0xc8	      0xe800000000	                          call 0x400010d	       168	strbuf.h	FUNCTION_3	CALL_2
0xcd	              0x90	                                     nop	       169	strbuf.h	FUNCTION_3
0xce	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_3
0xcf	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_3
strbuf_avail	FOR,0:SWITCH,0:IF,0:ELSE,0:functions,0:CALL,0:WHILE,0:DO,0	18
0x0	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_2
0x1	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_2
0x4	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_2
0x8	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0xc	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_2
0xf	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_2
0x12	            0x741b	                            je 0x400006f	       141	strbuf.h	FUNCTION_2
0x14	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x18	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_2
0x1b	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x1f	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_2
0x23	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_2
0x26	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_2
0x29	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_2
0x2d	            0xeb05	                           jmp 0x4000074	       141	strbuf.h	FUNCTION_2
0x2f	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_2
0x34	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_2
0x35	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_2
mark_edge_parents_uninteresting	FOR,1:SWITCH,0:IF,2:ELSE,0:functions,0:CALL,3:WHILE,0:DO,0	65
0x80d	              0x55	                                push rbp	       191	list-objects.c	FUNCTION_15
0x80e	          0x4889e5	                            mov rbp, rsp	       191	list-objects.c	FUNCTION_15
0x811	        0x4883ec30	                           sub rsp, 0x30	       191	list-objects.c	FUNCTION_15
0x815	        0x48897de8	             mov qword [rbp - 0x18], rdi	       191	list-objects.c	FUNCTION_15
0x819	        0x488975e0	             mov qword [rbp - 0x20], rsi	       191	list-objects.c	FUNCTION_15
0x81d	        0x488955d8	             mov qword [rbp - 0x28], rdx	       191	list-objects.c	FUNCTION_15
0x821	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       194	list-objects.c	FUNCTION_15	FOR_1
0x825	        0x488b4030	            mov rax, qword [rax + 0x30] 	       194	list-objects.c	FUNCTION_15	FOR_1
0x829	        0x488945f0	             mov qword [rbp - 0x10], rax	       194	list-objects.c	FUNCTION_15	FOR_1
0x82d	      0xe9a2000000	                           jmp 0x4000914	       194	list-objects.c	FUNCTION_15	FOR_1
0x832	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       195	list-objects.c	FUNCTION_15	FOR_1
0x836	          0x488b00	                    mov rax, qword [rax]	       195	list-objects.c	FUNCTION_15	FOR_1
0x839	        0x488945f8	                mov qword [rbp - 8], rax	       195	list-objects.c	FUNCTION_15	FOR_1
0x83d	        0x488b45f8	                mov rax, qword [rbp - 8]	       196	list-objects.c	FUNCTION_15	FOR_1	IF_1
0x841	            0x8b00	                    mov eax, dword [rax]	       196	list-objects.c	FUNCTION_15	FOR_1	IF_1
0x843	          0xc1e804	                              shr eax, 4	       196	list-objects.c	FUNCTION_15	FOR_1	IF_1
0x846	      0x25ffffff07	                      and eax, 0x7ffffff	       196	list-objects.c	FUNCTION_15	FOR_1	IF_1
0x84b	          0x83e002	                              and eax, 2	       196	list-objects.c	FUNCTION_15	FOR_1	IF_1
0x84e	            0x85c0	                           test eax, eax	       196	list-objects.c	FUNCTION_15	FOR_1	IF_1
0x850	            0x7475	                            je 0x4000907	       196	list-objects.c	FUNCTION_15	FOR_1	IF_1
0x852	        0x488b45f8	                mov rax, qword [rbp - 8]	       198	list-objects.c	FUNCTION_15	FOR_1	CALL_2
0x856	          0x4889c7	                            mov rdi, rax	       198	list-objects.c	FUNCTION_15	FOR_1	CALL_2
0x859	      0xe800000000	                          call 0x400089e	       198	list-objects.c	FUNCTION_15	FOR_1	CALL_2
0x85e	          0x4889c7	                            mov rdi, rax	       198	list-objects.c	FUNCTION_15	FOR_1	CALL_2
0x861	      0xe800000000	                          call 0x40008a6	       198	list-objects.c	FUNCTION_15	FOR_1	CALL_2
0x866	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       199	list-objects.c	FUNCTION_15	FOR_1	IF_2
0x86a	         0xfb64076	           movzx eax, byte [rax + 0x76] 	       199	list-objects.c	FUNCTION_15	FOR_1	IF_2
0x86e	          0x83e001	                              and eax, 1	       199	list-objects.c	FUNCTION_15	FOR_1	IF_2
0x871	            0x84c0	                             test al, al	       199	list-objects.c	FUNCTION_15	FOR_1	IF_2
0x873	            0x7453	                            je 0x4000908	       199	list-objects.c	FUNCTION_15	FOR_1	IF_2
0x875	        0x488b45f8	                mov rax, qword [rbp - 8]	       199	list-objects.c	FUNCTION_15	FOR_1	IF_2
0x879	            0x8b00	                    mov eax, dword [rax]	       199	list-objects.c	FUNCTION_15	FOR_1	IF_2
0x87b	          0xc1e804	                              shr eax, 4	       199	list-objects.c	FUNCTION_15	FOR_1	IF_2
0x87e	      0x25ffffff07	                      and eax, 0x7ffffff	       199	list-objects.c	FUNCTION_15	FOR_1	IF_2
0x883	          0x83e008	                              and eax, 8	       199	list-objects.c	FUNCTION_15	FOR_1	IF_2
0x886	            0x85c0	                           test eax, eax	       199	list-objects.c	FUNCTION_15	FOR_1	IF_2
0x888	            0x753e	                           jne 0x4000908	       199	list-objects.c	FUNCTION_15	FOR_1	IF_2
0x88a	        0x488b45f8	                mov rax, qword [rbp - 8]	       200	list-objects.c	FUNCTION_15	FOR_1	IF_2
0x88e	            0x8b00	                    mov eax, dword [rax]	       200	list-objects.c	FUNCTION_15	FOR_1	IF_2
0x890	          0xc1e804	                              shr eax, 4	       200	list-objects.c	FUNCTION_15	FOR_1	IF_2
0x893	      0x25ffffff07	                      and eax, 0x7ffffff	       200	list-objects.c	FUNCTION_15	FOR_1	IF_2
0x898	          0x83c808	                               or eax, 8	       200	list-objects.c	FUNCTION_15	FOR_1	IF_2
0x89b	            0x89c2	                            mov edx, eax	       200	list-objects.c	FUNCTION_15	FOR_1	IF_2
0x89d	        0x488b45f8	                mov rax, qword [rbp - 8]	       200	list-objects.c	FUNCTION_15	FOR_1	IF_2
0x8a1	    0x81e2ffffff07	                      and edx, 0x7ffffff	       200	list-objects.c	FUNCTION_15	FOR_1	IF_2
0x8a7	            0x89d1	                            mov ecx, edx	       200	list-objects.c	FUNCTION_15	FOR_1	IF_2
0x8a9	          0xc1e104	                              shl ecx, 4	       200	list-objects.c	FUNCTION_15	FOR_1	IF_2
0x8ac	            0x8b10	                    mov edx, dword [rax]	       200	list-objects.c	FUNCTION_15	FOR_1	IF_2
0x8ae	    0x81e20f000080	                     and edx, 0x8000000f	       200	list-objects.c	FUNCTION_15	FOR_1	IF_2
0x8b4	             0x9ca	                             or edx, ecx	       200	list-objects.c	FUNCTION_15	FOR_1	IF_2
0x8b6	            0x8910	                    mov dword [rax], edx	       200	list-objects.c	FUNCTION_15	FOR_1	IF_2
0x8b8	        0x488b55f8	                mov rdx, qword [rbp - 8]	       201	list-objects.c	FUNCTION_15	FOR_1	IF_2	CALL_3
0x8bc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       201	list-objects.c	FUNCTION_15	FOR_1	IF_2	CALL_3
0x8c0	          0x4889d7	                            mov rdi, rdx	       201	list-objects.c	FUNCTION_15	FOR_1	IF_2	CALL_3
0x8c3	            0xffd0	                                call rax	       201	list-objects.c	FUNCTION_15	FOR_1	IF_2	CALL_3
0x8c5	            0xeb01	                           jmp 0x4000908	       201	list-objects.c	FUNCTION_15	FOR_1	IF_2	CALL_3
0x8c7	              0x90	                                     nop	       197	list-objects.c	FUNCTION_15	FOR_1	IF_1
0x8c8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       194	list-objects.c	FUNCTION_15	FOR_1
0x8cc	        0x488b4008	                mov rax, qword [rax + 8]	       194	list-objects.c	FUNCTION_15	FOR_1
0x8d0	        0x488945f0	             mov qword [rbp - 0x10], rax	       194	list-objects.c	FUNCTION_15	FOR_1
0x8d4	      0x48837df000	               cmp qword [rbp - 0x10], 0	       194	list-objects.c	FUNCTION_15	FOR_1
0x8d9	     0xf8553ffffff	                           jne 0x4000872	       194	list-objects.c	FUNCTION_15	FOR_1
0x8df	              0x90	                                     nop	       204	list-objects.c	FUNCTION_15
0x8e0	              0xc9	                                   leave	       204	list-objects.c	FUNCTION_15
0x8e1	              0xc3	                                     ret	       204	list-objects.c	FUNCTION_15
do_traverse	FOR,0:SWITCH,0:IF,2:ELSE,0:functions,0:CALL,9:WHILE,1:DO,0	77
0xcc4	              0x55	                                push rbp	       293	list-objects.c	FUNCTION_19
0xcc5	          0x4889e5	                            mov rbp, rsp	       293	list-objects.c	FUNCTION_19
0xcc8	        0x4883ec60	                           sub rsp, 0x60	       293	list-objects.c	FUNCTION_19
0xccc	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       293	list-objects.c	FUNCTION_19
0xcd0	        0x488975c0	             mov qword [rbp - 0x40], rsi	       293	list-objects.c	FUNCTION_19
0xcd4	        0x488955b8	             mov qword [rbp - 0x48], rdx	       293	list-objects.c	FUNCTION_19
0xcd8	        0x48894db0	             mov qword [rbp - 0x50], rcx	       293	list-objects.c	FUNCTION_19
0xcdc	        0x4c8945a8	              mov qword [rbp - 0x58], r8	       293	list-objects.c	FUNCTION_19
0xce0	        0x4c894da0	              mov qword [rbp - 0x60], r9	       293	list-objects.c	FUNCTION_19
0xce4	    0x64488b042528	                mov rax, qword fs:[0x28]	       293	list-objects.c	FUNCTION_19
0xced	        0x488945f8	                mov qword [rbp - 8], rax	       293	list-objects.c	FUNCTION_19
0xcf1	            0x31c0	                            xor eax, eax	       293	list-objects.c	FUNCTION_19
0xcf3	        0x488d45e0	                   lea rax, [rbp - 0x20]	       296	list-objects.c	FUNCTION_19	CALL_1
0xcf7	      0xbe00100000	                         mov esi, 0x1000	       296	list-objects.c	FUNCTION_19	CALL_1
0xcfc	          0x4889c7	                            mov rdi, rax	       296	list-objects.c	FUNCTION_19	CALL_1
0xcff	      0xe800000000	                          call 0x4000d44	       296	list-objects.c	FUNCTION_19	CALL_1
0xd04	            0xeb78	                           jmp 0x4000dbe	       298	list-objects.c	FUNCTION_19	WHILE_1	CALL_2
0xd06	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       303	list-objects.c	FUNCTION_19	WHILE_1	IF_1	CALL_3
0xd0a	          0x4889c7	                            mov rdi, rax	       303	list-objects.c	FUNCTION_19	WHILE_1	IF_1	CALL_3
0xd0d	      0xe800000000	                          call 0x4000d52	       303	list-objects.c	FUNCTION_19	WHILE_1	IF_1	CALL_3
0xd12	          0x4885c0	                           test rax, rax	       303	list-objects.c	FUNCTION_19	WHILE_1	IF_1	CALL_3
0xd15	            0x741e	                            je 0x4000d75	       303	list-objects.c	FUNCTION_19	WHILE_1	IF_1	CALL_3
0xd17	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       304	list-objects.c	FUNCTION_19	WHILE_1	CALL_5
0xd1b	          0x4889c7	                            mov rdi, rax	       304	list-objects.c	FUNCTION_19	WHILE_1	CALL_5
0xd1e	      0xe800000000	                          call 0x4000d63	       304	list-objects.c	FUNCTION_19	WHILE_1	CALL_5
0xd23	          0x4889c2	                            mov rdx, rax	       304	list-objects.c	FUNCTION_19	WHILE_1	CALL_5
0xd26	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       304	list-objects.c	FUNCTION_19	WHILE_1	CALL_5
0xd2a	          0x4889d6	                            mov rsi, rdx	       304	list-objects.c	FUNCTION_19	WHILE_1	CALL_5
0xd2d	          0x4889c7	                            mov rdi, rax	       304	list-objects.c	FUNCTION_19	WHILE_1	CALL_5
0xd30	      0xe882fdffff	               call sym.add_pending_tree	       304	list-objects.c	FUNCTION_19	WHILE_1	CALL_5
0xd35	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       305	list-objects.c	FUNCTION_19	WHILE_1	CALL_6
0xd39	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       305	list-objects.c	FUNCTION_19	WHILE_1	CALL_6
0xd3d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       305	list-objects.c	FUNCTION_19	WHILE_1	CALL_6
0xd41	          0x4889ce	                            mov rsi, rcx	       305	list-objects.c	FUNCTION_19	WHILE_1	CALL_6
0xd44	          0x4889d7	                            mov rdi, rdx	       305	list-objects.c	FUNCTION_19	WHILE_1	CALL_6
0xd47	            0xffd0	                                call rax	       305	list-objects.c	FUNCTION_19	WHILE_1	CALL_6
0xd49	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       307	list-objects.c	FUNCTION_19	WHILE_1	IF_2
0xd4d	         0xfb64078	           movzx eax, byte [rax + 0x78] 	       307	list-objects.c	FUNCTION_19	WHILE_1	IF_2
0xd51	          0x83e040	                           and eax, 0x40	       307	list-objects.c	FUNCTION_19	WHILE_1	IF_2
0xd54	            0x84c0	                             test al, al	       307	list-objects.c	FUNCTION_19	WHILE_1	IF_2
0xd56	            0x7426	                            je 0x4000dbe	       307	list-objects.c	FUNCTION_19	WHILE_1	IF_2
0xd58	        0x4c8b45a0	              mov r8, qword [rbp - 0x60]	       313	list-objects.c	FUNCTION_19	WHILE_1	IF_2	CALL_7
0xd5c	        0x488b7da8	             mov rdi, qword [rbp - 0x58]	       313	list-objects.c	FUNCTION_19	WHILE_1	IF_2	CALL_7
0xd60	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       313	list-objects.c	FUNCTION_19	WHILE_1	IF_2	CALL_7
0xd64	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       313	list-objects.c	FUNCTION_19	WHILE_1	IF_2	CALL_7
0xd68	        0x488d75e0	                   lea rsi, [rbp - 0x20]	       313	list-objects.c	FUNCTION_19	WHILE_1	IF_2	CALL_7
0xd6c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       313	list-objects.c	FUNCTION_19	WHILE_1	IF_2	CALL_7
0xd70	          0x4d89c1	                              mov r9, r8	       313	list-objects.c	FUNCTION_19	WHILE_1	IF_2	CALL_7
0xd73	          0x4989f8	                             mov r8, rdi	       313	list-objects.c	FUNCTION_19	WHILE_1	IF_2	CALL_7
0xd76	          0x4889c7	                            mov rdi, rax	       313	list-objects.c	FUNCTION_19	WHILE_1	IF_2	CALL_7
0xd79	      0xe864fdffff	       call sym.traverse_trees_and_blobs	       313	list-objects.c	FUNCTION_19	WHILE_1	IF_2	CALL_7
0xd7e	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       298	list-objects.c	FUNCTION_19	WHILE_1	CALL_2
0xd82	          0x4889c7	                            mov rdi, rax	       298	list-objects.c	FUNCTION_19	WHILE_1	CALL_2
0xd85	      0xe800000000	                          call 0x4000dca	       298	list-objects.c	FUNCTION_19	WHILE_1	CALL_2
0xd8a	        0x488945d8	             mov qword [rbp - 0x28], rax	       298	list-objects.c	FUNCTION_19	WHILE_1	CALL_2
0xd8e	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       298	list-objects.c	FUNCTION_19	WHILE_1	CALL_2
0xd93	     0xf856dffffff	                           jne 0x4000d46	       298	list-objects.c	FUNCTION_19	WHILE_1	CALL_2
0xd99	        0x4c8b45a0	              mov r8, qword [rbp - 0x60]	       317	list-objects.c	FUNCTION_19	CALL_8
0xd9d	        0x488b7da8	             mov rdi, qword [rbp - 0x58]	       317	list-objects.c	FUNCTION_19	CALL_8
0xda1	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       317	list-objects.c	FUNCTION_19	CALL_8
0xda5	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       317	list-objects.c	FUNCTION_19	CALL_8
0xda9	        0x488d75e0	                   lea rsi, [rbp - 0x20]	       317	list-objects.c	FUNCTION_19	CALL_8
0xdad	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       317	list-objects.c	FUNCTION_19	CALL_8
0xdb1	          0x4d89c1	                              mov r9, r8	       317	list-objects.c	FUNCTION_19	CALL_8
0xdb4	          0x4989f8	                             mov r8, rdi	       317	list-objects.c	FUNCTION_19	CALL_8
0xdb7	          0x4889c7	                            mov rdi, rax	       317	list-objects.c	FUNCTION_19	CALL_8
0xdba	      0xe823fdffff	       call sym.traverse_trees_and_blobs	       317	list-objects.c	FUNCTION_19	CALL_8
0xdbf	        0x488d45e0	                   lea rax, [rbp - 0x20]	       320	list-objects.c	FUNCTION_19	CALL_9
0xdc3	          0x4889c7	                            mov rdi, rax	       320	list-objects.c	FUNCTION_19	CALL_9
0xdc6	      0xe800000000	                          call 0x4000e0b	       320	list-objects.c	FUNCTION_19	CALL_9
0xdcb	              0x90	                                     nop	       321	list-objects.c	FUNCTION_19
0xdcc	        0x488b45f8	                mov rax, qword [rbp - 8]	       321	list-objects.c	FUNCTION_19
0xdd0	    0x644833042528	                xor rax, qword fs:[0x28]	       321	list-objects.c	FUNCTION_19
0xdd9	            0x7405	                            je 0x4000e20	       321	list-objects.c	FUNCTION_19
0xddb	      0xe800000000	                          call 0x4000e20	       321	list-objects.c	FUNCTION_19
0xde0	              0xc9	                                   leave	       321	list-objects.c	FUNCTION_19
0xde1	              0xc3	                                     ret	       321	list-objects.c	FUNCTION_19
