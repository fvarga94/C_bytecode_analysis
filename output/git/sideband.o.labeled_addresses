strbuf_avail	SWITCH,0:CALL,0:DO,0:IF,0:functions,0:FOR,0:ELSE,0:WHILE,0	18
0x0	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_2
0x1	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_2
0x4	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_2
0x8	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0xc	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_2
0xf	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_2
0x12	            0x741b	                            je 0x400006f	       141	strbuf.h	FUNCTION_2
0x14	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x18	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_2
0x1b	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x1f	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_2
0x23	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_2
0x26	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_2
0x29	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_2
0x2d	            0xeb05	                           jmp 0x4000074	       141	strbuf.h	FUNCTION_2
0x2f	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_2
0x34	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_2
0x35	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_2
strbuf_setlen	SWITCH,0:CALL,2:DO,0:IF,2:functions,0:FOR,0:ELSE,1:WHILE,0	43
0x36	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_3
0x37	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_3
0x3a	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_3
0x3e	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_3
0x42	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_3
0x46	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_3	IF_1
0x4a	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_3	IF_1
0x4d	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_3	IF_1
0x50	            0x740d	                            je 0x400009f	       162	strbuf.h	FUNCTION_3	IF_1
0x52	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_3	IF_1
0x56	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_3	IF_1
0x59	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_3	IF_1
0x5d	            0xeb05	                           jmp 0x40000a4	       162	strbuf.h	FUNCTION_3	IF_1
0x5f	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_3	IF_1
0x64	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_3	IF_1
0x68	            0x730f	                           jae 0x40000b9	       162	strbuf.h	FUNCTION_3	IF_1
0x6a	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_3	CALL_1
0x6f	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_3	CALL_1
0x74	      0xe800000000	                          call 0x40000b9	       163	strbuf.h	FUNCTION_3	CALL_1
0x79	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_3
0x7d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_3
0x81	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_3
0x85	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_3	IF_2
0x89	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_3	IF_2
0x8d	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_3	IF_2
0x93	            0x7414	                            je 0x40000e9	       165	strbuf.h	FUNCTION_3	IF_2
0x95	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_3	IF_2
0x99	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_3	IF_2
0x9d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_3	IF_2
0xa1	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_3	IF_2
0xa4	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_3	IF_2
0xa7	            0xeb24	                           jmp 0x400010d	       169	strbuf.h	FUNCTION_3
0xa9	     0xfb605000000	           movzx eax, byte [0x040000f0] 	       168	strbuf.h	FUNCTION_3	CALL_2
0xb0	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_3	CALL_2
0xb2	            0x7419	                            je 0x400010d	       168	strbuf.h	FUNCTION_3	CALL_2
0xb4	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0xb9	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_3	CALL_2
0xbe	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0xc3	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0xc8	      0xe800000000	                          call 0x400010d	       168	strbuf.h	FUNCTION_3	CALL_2
0xcd	              0x90	                                     nop	       169	strbuf.h	FUNCTION_3
0xce	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_3
0xcf	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_3
strbuf_addch	SWITCH,0:CALL,2:DO,0:IF,1:functions,0:FOR,0:ELSE,0:WHILE,0	33
0xd0	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_4
0xd1	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_4
0xd4	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_4
0xd8	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_4
0xdc	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_4
0xdf	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0xe3	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0xe6	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0xeb	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0xee	            0x7511	                           jne 0x4000141	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0xf0	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_4	CALL_2
0xf4	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_4	CALL_2
0xf9	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_4	CALL_2
0xfc	      0xe800000000	                          call 0x4000141	       228	strbuf.h	FUNCTION_4	CALL_2
0x101	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x105	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_4
0x109	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x10d	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_4
0x111	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_4
0x115	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x119	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_4
0x11d	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_4
0x120	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_4
0x123	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_4
0x125	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_4
0x129	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_4
0x12d	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_4
0x131	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_4
0x135	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_4
0x138	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_4
0x13b	              0x90	                                     nop	       231	strbuf.h	FUNCTION_4
0x13c	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_4
0x13d	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_4
send_sideband	SWITCH,0:CALL,5:DO,0:IF,2:functions,0:FOR,0:ELSE,1:WHILE,1	77
0x593	              0x55	                                push rbp	       111	sideband.c	FUNCTION_13
0x594	          0x4889e5	                            mov rbp, rsp	       111	sideband.c	FUNCTION_13
0x597	        0x4883ec40	                           sub rsp, 0x40	       111	sideband.c	FUNCTION_13
0x59b	          0x897ddc	             mov dword [rbp - 0x24], edi	       111	sideband.c	FUNCTION_13
0x59e	          0x8975d8	             mov dword [rbp - 0x28], esi	       111	sideband.c	FUNCTION_13
0x5a1	        0x488955d0	             mov qword [rbp - 0x30], rdx	       111	sideband.c	FUNCTION_13
0x5a5	        0x48894dc8	             mov qword [rbp - 0x38], rcx	       111	sideband.c	FUNCTION_13
0x5a9	        0x448945c4	             mov dword [rbp - 0x3c], r8d	       111	sideband.c	FUNCTION_13
0x5ad	    0x64488b042528	                mov rax, qword fs:[0x28]	       111	sideband.c	FUNCTION_13
0x5b6	        0x488945f8	                mov qword [rbp - 8], rax	       111	sideband.c	FUNCTION_13
0x5ba	            0x31c0	                            xor eax, eax	       111	sideband.c	FUNCTION_13
0x5bc	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       112	sideband.c	FUNCTION_13
0x5c0	        0x488945e8	             mov qword [rbp - 0x18], rax	       112	sideband.c	FUNCTION_13
0x5c4	      0xe9bd000000	                           jmp 0x40006c6	       114	sideband.c	FUNCTION_13	WHILE_1
0x5c9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       118	sideband.c	FUNCTION_13	WHILE_1
0x5cd	          0x8945e4	             mov dword [rbp - 0x1c], eax	       118	sideband.c	FUNCTION_13	WHILE_1
0x5d0	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       119	sideband.c	FUNCTION_13	WHILE_1	IF_1
0x5d3	          0x83e805	                              sub eax, 5	       119	sideband.c	FUNCTION_13	WHILE_1	IF_1
0x5d6	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	       119	sideband.c	FUNCTION_13	WHILE_1	IF_1
0x5d9	            0x7309	                           jae 0x4000624	       119	sideband.c	FUNCTION_13	WHILE_1	IF_1
0x5db	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       120	sideband.c	FUNCTION_13	WHILE_1	IF_1
0x5de	          0x83e805	                              sub eax, 5	       120	sideband.c	FUNCTION_13	WHILE_1	IF_1
0x5e1	          0x8945e4	             mov dword [rbp - 0x1c], eax	       120	sideband.c	FUNCTION_13	WHILE_1	IF_1
0x5e4	        0x837dd800	               cmp dword [rbp - 0x28], 0	       121	sideband.c	FUNCTION_13	WHILE_1	IF_2
0x5e8	            0x7841	                            js 0x400066b	       121	sideband.c	FUNCTION_13	WHILE_1	IF_2
0x5ea	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       122	sideband.c	FUNCTION_13	WHILE_1	IF_2	CALL_1
0x5ed	          0x8d5005	                      lea edx, [rax + 5]	       122	sideband.c	FUNCTION_13	WHILE_1	IF_2	CALL_1
0x5f0	        0x488d45f0	                   lea rax, [rbp - 0x10]	       122	sideband.c	FUNCTION_13	WHILE_1	IF_2	CALL_1
0x5f4	            0x89d1	                            mov ecx, edx	       122	sideband.c	FUNCTION_13	WHILE_1	IF_2	CALL_1
0x5f6	      0xba00000000	                              mov edx, 0	       122	sideband.c	FUNCTION_13	WHILE_1	IF_2	CALL_1
0x5fb	      0xbe05000000	                              mov esi, 5	       122	sideband.c	FUNCTION_13	WHILE_1	IF_2	CALL_1
0x600	          0x4889c7	                            mov rdi, rax	       122	sideband.c	FUNCTION_13	WHILE_1	IF_2	CALL_1
0x603	      0xb800000000	                              mov eax, 0	       122	sideband.c	FUNCTION_13	WHILE_1	IF_2	CALL_1
0x608	      0xe800000000	                          call 0x400064d	       122	sideband.c	FUNCTION_13	WHILE_1	IF_2	CALL_1
0x60d	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       123	sideband.c	FUNCTION_13	WHILE_1	IF_2
0x610	          0x8845f4	                mov byte [rbp - 0xc], al	       123	sideband.c	FUNCTION_13	WHILE_1	IF_2
0x613	        0x488d4df0	                   lea rcx, [rbp - 0x10]	       124	sideband.c	FUNCTION_13	WHILE_1	IF_2	CALL_2
0x617	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       124	sideband.c	FUNCTION_13	WHILE_1	IF_2	CALL_2
0x61a	      0xba05000000	                              mov edx, 5	       124	sideband.c	FUNCTION_13	WHILE_1	IF_2	CALL_2
0x61f	          0x4889ce	                            mov rsi, rcx	       124	sideband.c	FUNCTION_13	WHILE_1	IF_2	CALL_2
0x622	            0x89c7	                            mov edi, eax	       124	sideband.c	FUNCTION_13	WHILE_1	IF_2	CALL_2
0x624	      0xe800000000	                          call 0x4000669	       124	sideband.c	FUNCTION_13	WHILE_1	IF_2	CALL_2
0x629	            0xeb39	                           jmp 0x40006a4	       124	sideband.c	FUNCTION_13	WHILE_1	IF_2	CALL_2
0x62b	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       126	sideband.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_3
0x62e	          0x8d5004	                      lea edx, [rax + 4]	       126	sideband.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_3
0x631	        0x488d45f0	                   lea rax, [rbp - 0x10]	       126	sideband.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_3
0x635	            0x89d1	                            mov ecx, edx	       126	sideband.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_3
0x637	      0xba00000000	                              mov edx, 0	       126	sideband.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_3
0x63c	      0xbe05000000	                              mov esi, 5	       126	sideband.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_3
0x641	          0x4889c7	                            mov rdi, rax	       126	sideband.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_3
0x644	      0xb800000000	                              mov eax, 0	       126	sideband.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_3
0x649	      0xe800000000	                          call 0x400068e	       126	sideband.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_3
0x64e	        0x488d4df0	                   lea rcx, [rbp - 0x10]	       127	sideband.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_4
0x652	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       127	sideband.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_4
0x655	      0xba04000000	                              mov edx, 4	       127	sideband.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_4
0x65a	          0x4889ce	                            mov rsi, rcx	       127	sideband.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_4
0x65d	            0x89c7	                            mov edi, eax	       127	sideband.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_4
0x65f	      0xe800000000	                          call 0x40006a4	       127	sideband.c	FUNCTION_13	WHILE_1	ELSE_1	CALL_4
0x664	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       129	sideband.c	FUNCTION_13	WHILE_1	CALL_5
0x667	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       129	sideband.c	FUNCTION_13	WHILE_1	CALL_5
0x66b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       129	sideband.c	FUNCTION_13	WHILE_1	CALL_5
0x66e	          0x4889ce	                            mov rsi, rcx	       129	sideband.c	FUNCTION_13	WHILE_1	CALL_5
0x671	            0x89c7	                            mov edi, eax	       129	sideband.c	FUNCTION_13	WHILE_1	CALL_5
0x673	      0xe800000000	                          call 0x40006b8	       129	sideband.c	FUNCTION_13	WHILE_1	CALL_5
0x678	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       130	sideband.c	FUNCTION_13	WHILE_1
0x67b	        0x480145e8	            add qword [rbp - 0x18], rax 	       130	sideband.c	FUNCTION_13	WHILE_1
0x67f	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       131	sideband.c	FUNCTION_13	WHILE_1
0x682	        0x482945c8	             sub qword [rbp - 0x38], rax	       131	sideband.c	FUNCTION_13	WHILE_1
0x686	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       114	sideband.c	FUNCTION_13	WHILE_1
0x68b	     0xf8538ffffff	                           jne 0x4000609	       114	sideband.c	FUNCTION_13	WHILE_1
0x691	              0x90	                                     nop	       133	sideband.c	FUNCTION_13
0x692	        0x488b45f8	                mov rax, qword [rbp - 8]	       133	sideband.c	FUNCTION_13
0x696	    0x644833042528	                xor rax, qword fs:[0x28]	       133	sideband.c	FUNCTION_13
0x69f	            0x7405	                            je 0x40006e6	       133	sideband.c	FUNCTION_13
0x6a1	      0xe800000000	                          call 0x40006e6	       133	sideband.c	FUNCTION_13
0x6a6	              0xc9	                                   leave	       133	sideband.c	FUNCTION_13
0x6a7	              0xc3	                                     ret	       133	sideband.c	FUNCTION_13
recv_sideband	SWITCH,1:CALL,17:DO,0:IF,7:functions,0:FOR,0:ELSE,2:WHILE,2	216
0x173	              0x55	                                push rbp	        22	sideband.c	FUNCTION_12
0x174	          0x4889e5	                            mov rbp, rsp	        22	sideband.c	FUNCTION_12
0x177	    0x4881ec600001	                        sub rsp, 0x10060	        22	sideband.c	FUNCTION_12
0x17e	    0x4889bda8fffe	          mov qword [rbp - 0x10058], rdi	        22	sideband.c	FUNCTION_12
0x185	    0x89b5a4fffeff	          mov dword [rbp - 0x1005c], esi	        22	sideband.c	FUNCTION_12
0x18b	    0x8995a0fffeff	          mov dword [rbp - 0x10060], edx	        22	sideband.c	FUNCTION_12
0x191	    0x64488b042528	                mov rax, qword fs:[0x28]	        22	sideband.c	FUNCTION_12
0x19a	        0x488945f8	                mov qword [rbp - 8], rax	        22	sideband.c	FUNCTION_12
0x19e	            0x31c0	                            xor eax, eax	        22	sideband.c	FUNCTION_12
0x1a0	    0x48c785e0fffe	            mov qword [rbp - 0x10020], 0	        25	sideband.c	FUNCTION_12
0x1ab	    0x48c785e8fffe	            mov qword [rbp - 0x10018], 0	        25	sideband.c	FUNCTION_12
0x1b6	    0x48c785f0fffe	            mov qword [rbp - 0x10010], 0	        25	sideband.c	FUNCTION_12
0x1c1	    0xc785b8fffeff	            mov dword [rbp - 0x10048], 0	        26	sideband.c	FUNCTION_12
0x1cb	      0xbf02000000	                              mov edi, 2	        28	sideband.c	FUNCTION_12	IF_1	CALL_2
0x1d0	      0xe800000000	                          call 0x4000215	        28	sideband.c	FUNCTION_12	IF_1	CALL_2
0x1d5	            0x85c0	                           test eax, eax	        28	sideband.c	FUNCTION_12	IF_1	CALL_2
0x1d7	            0x7416	                            je 0x400022f	        28	sideband.c	FUNCTION_12	IF_1	CALL_2
0x1d9	      0xe800000000	                          call 0x400021e	        28	sideband.c	FUNCTION_12	IF_1	CALL_2
0x1de	            0x85c0	                           test eax, eax	        28	sideband.c	FUNCTION_12	IF_1	CALL_2
0x1e0	            0x750d	                           jne 0x400022f	        28	sideband.c	FUNCTION_12	IF_1	CALL_2
0x1e2	    0x48c785c8fffe	            mov qword [rbp - 0x10038], 0	        29	sideband.c	FUNCTION_12	IF_1
0x1ed	            0xeb0b	                           jmp 0x400023a	        29	sideband.c	FUNCTION_12	IF_1
0x1ef	    0x48c785c8fffe	            mov qword [rbp - 0x10038], 0	        31	sideband.c	FUNCTION_12	ELSE_1
0x1fa	      0xe91e030000	                           jmp 0x400055d	        33	sideband.c	FUNCTION_12	ELSE_1	WHILE_1
0x1ff	    0x488d950000ff	                lea rdx, [rbp - 0x10000]	        36	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	CALL_3
0x206	    0x8b85a4fffeff	          mov eax, dword [rbp - 0x1005c]	        36	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	CALL_3
0x20c	    0x41b900000000	                              mov r9d, 0	        36	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	CALL_3
0x212	    0x41b8f0ff0000	                         mov r8d, 0xfff0	        36	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	CALL_3
0x218	          0x4889d1	                            mov rcx, rdx	        36	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	CALL_3
0x21b	      0xba00000000	                              mov edx, 0	        36	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	CALL_3
0x220	      0xbe00000000	                              mov esi, 0	        36	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	CALL_3
0x225	            0x89c7	                            mov edi, eax	        36	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	CALL_3
0x227	      0xe800000000	                          call 0x400026c	        36	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	CALL_3
0x22c	    0x8985bcfffeff	          mov dword [rbp - 0x10044], eax	        36	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	CALL_3
0x232	    0x83bdbcfffeff	            cmp dword [rbp - 0x10044], 0	        37	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_2
0x239	     0xf84ed020000	                            je 0x400056c	        37	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_2
0x23f	    0x83bdbcfffeff	            cmp dword [rbp - 0x10044], 0	        39	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3
0x246	            0x7f4d	                            jg 0x40002d5	        39	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3
0x248	    0x488b85e8fffe	          mov rax, qword [rbp - 0x10018]	        42	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3
0x24f	          0x4885c0	                           test rax, rax	        40	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3	CALL_4
0x252	            0x7407	                            je 0x400029b	        40	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3	CALL_4
0x254	      0xbe00000000	                              mov esi, 0	        40	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3	CALL_4
0x259	            0xeb05	                           jmp 0x40002a0	        40	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3	CALL_4
0x25b	      0xbe00000000	                              mov esi, 0	        40	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3	CALL_4
0x260	    0x488b95a8fffe	          mov rdx, qword [rbp - 0x10058]	        40	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3	CALL_4
0x267	    0x488d85e0fffe	                lea rax, [rbp - 0x10020]	        40	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3	CALL_4
0x26e	          0x4889d1	                            mov rcx, rdx	        40	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3	CALL_4
0x271	          0x4889f2	                            mov rdx, rsi	        40	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3	CALL_4
0x274	      0xbe00000000	                              mov esi, 0	        40	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3	CALL_4
0x279	          0x4889c7	                            mov rdi, rax	        40	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3	CALL_4
0x27c	      0xb800000000	                              mov eax, 0	        40	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3	CALL_4
0x281	      0xe800000000	                          call 0x40002c6	        40	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3	CALL_4
0x286	    0xc785b8fffeff	  mov dword [rbp - 0x10048], 0xfffffffe 	        43	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3
0x290	      0xe998020000	                           jmp 0x400056d	        44	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_3
0x295	     0xfb6850000ff	         movzx eax, byte [rbp - 0x10000]	        46	sideband.c	FUNCTION_12	ELSE_1	WHILE_1
0x29c	           0xfbec0	                           movsx eax, al	        46	sideband.c	FUNCTION_12	ELSE_1	WHILE_1
0x29f	      0x25ff000000	                           and eax, 0xff	        46	sideband.c	FUNCTION_12	ELSE_1	WHILE_1
0x2a4	    0x8985c0fffeff	          mov dword [rbp - 0x10040], eax	        46	sideband.c	FUNCTION_12	ELSE_1	WHILE_1
0x2aa	    0x8b85bcfffeff	          mov eax, dword [rbp - 0x10044]	        47	sideband.c	FUNCTION_12	ELSE_1	WHILE_1
0x2b0	            0x4898	                                    cdqe	        47	sideband.c	FUNCTION_12	ELSE_1	WHILE_1
0x2b2	    0xc684050000ff	       mov byte [rbp + rax - 0x10000], 0	        47	sideband.c	FUNCTION_12	ELSE_1	WHILE_1
0x2ba	    0x83adbcfffeff	            sub dword [rbp - 0x10044], 1	        48	sideband.c	FUNCTION_12	ELSE_1	WHILE_1
0x2c1	    0x8b85c0fffeff	          mov eax, dword [rbp - 0x10040]	        49	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x2c7	          0x83f802	                              cmp eax, 2	        49	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x2ca	            0x7463	                            je 0x400036f	        49	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x2cc	          0x83f803	                              cmp eax, 3	        49	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x2cf	            0x740e	                            je 0x400031f	        49	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x2d1	          0x83f801	                              cmp eax, 1	        49	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x2d4	     0xf84cb010000	                            je 0x40004e5	        49	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x2da	      0xe9ec010000	                           jmp 0x400050b	        49	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x2df	    0x488d850000ff	                lea rax, [rbp - 0x10000]	        51	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x2e6	        0x4883c001	                              add rax, 1	        51	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x2ea	    0x488b95e8fffe	          mov rdx, qword [rbp - 0x10018]	        51	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x2f1	          0x4885d2	                           test rdx, rdx	        51	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x2f4	            0x7407	                            je 0x400033d	        51	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x2f6	      0xba00000000	                              mov edx, 0	        51	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x2fb	            0xeb05	                           jmp 0x4000342	        51	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x2fd	      0xba00000000	                              mov edx, 0	        51	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x302	    0x488dbde0fffe	                lea rdi, [rbp - 0x10020]	        51	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x309	          0x4989c0	                             mov r8, rax	        51	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x30c	      0xb900000000	                              mov ecx, 0	        51	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x311	      0xbe00000000	                              mov esi, 0	        51	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x316	      0xb800000000	                              mov eax, 0	        51	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x31b	      0xe800000000	                          call 0x4000360	        51	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_5
0x320	    0xc785b8fffeff	  mov dword [rbp - 0x10048], 0xffffffff 	        53	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x32a	      0xe9ee010000	                           jmp 0x400055d	        54	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x32f	    0x488d850000ff	                lea rax, [rbp - 0x10000]	        56	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x336	        0x4883c001	                              add rax, 1	        56	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x33a	    0x488985d0fffe	          mov qword [rbp - 0x10030], rax	        56	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x341	      0xe9e4000000	                           jmp 0x400046a	        66	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_6
0x346	    0x488b95d8fffe	          mov rdx, qword [rbp - 0x10028]	        67	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x34d	    0x488b85d0fffe	          mov rax, qword [rbp - 0x10030]	        67	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x354	          0x4829c2	                            sub rdx, rax	        67	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x357	          0x4889d0	                            mov rax, rdx	        67	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x35a	    0x8985c4fffeff	          mov dword [rbp - 0x1003c], eax	        67	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x360	    0x488b85e8fffe	          mov rax, qword [rbp - 0x10018]	        69	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_4
0x367	          0x4885c0	                           test rax, rax	        69	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_4
0x36a	            0x7514	                           jne 0x40003c0	        69	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_4
0x36c	    0x488d85e0fffe	                lea rax, [rbp - 0x10020]	        70	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_7
0x373	      0xbe00000000	                              mov esi, 0	        70	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_7
0x378	          0x4889c7	                            mov rdi, rax	        70	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_7
0x37b	      0xe8befdffff	                  call sym.strbuf_addstr	        70	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_7
0x380	    0x83bdc4fffeff	            cmp dword [rbp - 0x1003c], 0	        71	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5
0x387	            0x7e42	                           jle 0x400040b	        71	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5
0x389	    0x488b85d8fffe	          mov rax, qword [rbp - 0x10028]	        73	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5
0x390	           0xfb600	                   movzx eax, byte [rax]	        73	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5
0x393	           0xfbef8	                           movsx edi, al	        72	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_8
0x396	    0x488bb5c8fffe	          mov rsi, qword [rbp - 0x10038]	        72	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_8
0x39d	    0x488b8dd0fffe	          mov rcx, qword [rbp - 0x10030]	        72	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_8
0x3a4	    0x8b95c4fffeff	          mov edx, dword [rbp - 0x1003c]	        72	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_8
0x3aa	    0x488d85e0fffe	                lea rax, [rbp - 0x10020]	        72	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_8
0x3b1	          0x4189f9	                            mov r9d, edi	        72	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_8
0x3b4	          0x4989f0	                             mov r8, rsi	        72	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_8
0x3b7	      0xbe00000000	                              mov esi, 0	        72	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_8
0x3bc	          0x4889c7	                            mov rdi, rax	        72	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_8
0x3bf	      0xb800000000	                              mov eax, 0	        72	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_8
0x3c4	      0xe800000000	                          call 0x4000409	        72	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_8
0x3c9	            0xeb1e	                           jmp 0x4000429	        72	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	IF_5	CALL_8
0x3cb	    0x488b85d8fffe	          mov rax, qword [rbp - 0x10028]	        75	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	ELSE_2	CALL_9
0x3d2	           0xfb600	                   movzx eax, byte [rax]	        75	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	ELSE_2	CALL_9
0x3d5	           0xfbed0	                           movsx edx, al	        75	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	ELSE_2	CALL_9
0x3d8	    0x488d85e0fffe	                lea rax, [rbp - 0x10020]	        75	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	ELSE_2	CALL_9
0x3df	            0x89d6	                            mov esi, edx	        75	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	ELSE_2	CALL_9
0x3e1	          0x4889c7	                            mov rdi, rax	        75	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	ELSE_2	CALL_9
0x3e4	      0xe8e7fcffff	                   call sym.strbuf_addch	        75	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	ELSE_2	CALL_9
0x3e9	    0x488b95e8fffe	          mov rdx, qword [rbp - 0x10018]	        77	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_10
0x3f0	    0x488b85f0fffe	          mov rax, qword [rbp - 0x10010]	        77	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_10
0x3f7	          0x4889c6	                            mov rsi, rax	        77	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_10
0x3fa	      0xbf02000000	                              mov edi, 2	        77	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_10
0x3ff	      0xe800000000	                          call 0x4000444	        77	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_10
0x404	    0x488d85e0fffe	                lea rax, [rbp - 0x10020]	        78	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_11
0x40b	      0xbe00000000	                              mov esi, 0	        78	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_11
0x410	          0x4889c7	                            mov rdi, rax	        78	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_11
0x413	      0xe81efcffff	                  call sym.strbuf_setlen	        78	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_11
0x418	    0x488b85d8fffe	          mov rax, qword [rbp - 0x10028]	        80	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x41f	        0x4883c001	                              add rax, 1	        80	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x423	    0x488985d0fffe	          mov qword [rbp - 0x10030], rax	        80	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2
0x42a	    0x488b85d0fffe	          mov rax, qword [rbp - 0x10030]	        66	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_6
0x431	      0xbe00000000	                              mov esi, 0	        66	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_6
0x436	          0x4889c7	                            mov rdi, rax	        66	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_6
0x439	      0xe800000000	                          call 0x400047e	        66	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_6
0x43e	    0x488985d8fffe	          mov qword [rbp - 0x10028], rax	        66	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_6
0x445	    0x4883bdd8fffe	            cmp qword [rbp - 0x10028], 0	        66	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_6
0x44d	     0xf85f3feffff	                           jne 0x4000386	        66	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	WHILE_2	CALL_6
0x453	    0x488b85d0fffe	          mov rax, qword [rbp - 0x10030]	        83	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6
0x45a	           0xfb600	                   movzx eax, byte [rax]	        83	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6
0x45d	            0x84c0	                             test al, al	        83	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6
0x45f	     0xf84b8000000	                            je 0x400055d	        83	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6
0x465	    0x488b85e8fffe	          mov rax, qword [rbp - 0x10018]	        84	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_12
0x46c	          0x4885c0	                           test rax, rax	        84	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_12
0x46f	            0x7407	                            je 0x40004b8	        84	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_12
0x471	      0xbe00000000	                              mov esi, 0	        84	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_12
0x476	            0xeb05	                           jmp 0x40004bd	        84	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_12
0x478	      0xbe00000000	                              mov esi, 0	        84	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_12
0x47d	    0x488b95d0fffe	          mov rdx, qword [rbp - 0x10030]	        84	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_12
0x484	    0x488d85e0fffe	                lea rax, [rbp - 0x10020]	        84	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_12
0x48b	          0x4889d1	                            mov rcx, rdx	        84	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_12
0x48e	          0x4889f2	                            mov rdx, rsi	        84	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_12
0x491	      0xbe00000000	                              mov esi, 0	        84	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_12
0x496	          0x4889c7	                            mov rdi, rax	        84	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_12
0x499	      0xb800000000	                              mov eax, 0	        84	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_12
0x49e	      0xe800000000	                          call 0x40004e3	        84	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	IF_6	CALL_12
0x4a3	            0xeb78	                           jmp 0x400055d	        86	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x4a5	    0x8b85bcfffeff	          mov eax, dword [rbp - 0x10044]	        88	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_13
0x4ab	          0x4863d0	                         movsxd rdx, eax	        88	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_13
0x4ae	    0x488d850000ff	                lea rax, [rbp - 0x10000]	        88	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_13
0x4b5	        0x4883c001	                              add rax, 1	        88	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_13
0x4b9	    0x8b8da0fffeff	          mov ecx, dword [rbp - 0x10060]	        88	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_13
0x4bf	          0x4889c6	                            mov rsi, rax	        88	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_13
0x4c2	            0x89cf	                            mov edi, ecx	        88	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_13
0x4c4	      0xe800000000	                          call 0x4000509	        88	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_13
0x4c9	            0xeb52	                           jmp 0x400055d	        89	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x4cb	    0x488b85e8fffe	          mov rax, qword [rbp - 0x10018]	        92	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x4d2	          0x4885c0	                           test rax, rax	        91	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_14
0x4d5	            0x7407	                            je 0x400051e	        91	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_14
0x4d7	      0xbe00000000	                              mov esi, 0	        91	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_14
0x4dc	            0xeb05	                           jmp 0x4000523	        91	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_14
0x4de	      0xbe00000000	                              mov esi, 0	        91	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_14
0x4e3	    0x8b8dc0fffeff	          mov ecx, dword [rbp - 0x10040]	        91	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_14
0x4e9	    0x488b95a8fffe	          mov rdx, qword [rbp - 0x10058]	        91	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_14
0x4f0	    0x488d85e0fffe	                lea rax, [rbp - 0x10020]	        91	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_14
0x4f7	          0x4189c8	                            mov r8d, ecx	        91	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_14
0x4fa	          0x4889d1	                            mov rcx, rdx	        91	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_14
0x4fd	          0x4889f2	                            mov rdx, rsi	        91	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_14
0x500	      0xbe00000000	                              mov esi, 0	        91	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_14
0x505	          0x4889c7	                            mov rdi, rax	        91	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_14
0x508	      0xb800000000	                              mov eax, 0	        91	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_14
0x50d	      0xe800000000	                          call 0x4000552	        91	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1	CALL_14
0x512	    0xc785b8fffeff	  mov dword [rbp - 0x10048], 0xfffffffe 	        93	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x51c	              0x90	                                     nop	        94	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	SWITCH_1
0x51d	    0x83bdb8fffeff	            cmp dword [rbp - 0x10048], 0	        33	sideband.c	FUNCTION_12	ELSE_1	WHILE_1
0x524	     0xf84d5fcffff	                            je 0x400023f	        33	sideband.c	FUNCTION_12	ELSE_1	WHILE_1
0x52a	            0xeb01	                           jmp 0x400056d	        33	sideband.c	FUNCTION_12	ELSE_1	WHILE_1
0x52c	              0x90	                                     nop	        38	sideband.c	FUNCTION_12	ELSE_1	WHILE_1	IF_2
0x52d	    0x488b85e8fffe	          mov rax, qword [rbp - 0x10018]	        98	sideband.c	FUNCTION_12	IF_7
0x534	          0x4885c0	                           test rax, rax	        98	sideband.c	FUNCTION_12	IF_7
0x537	            0x742f	                            je 0x40005a8	        98	sideband.c	FUNCTION_12	IF_7
0x539	    0x488d85e0fffe	                lea rax, [rbp - 0x10020]	        99	sideband.c	FUNCTION_12	IF_7	CALL_15
0x540	      0xbe0a000000	                            mov esi, 0xa	        99	sideband.c	FUNCTION_12	IF_7	CALL_15
0x545	          0x4889c7	                            mov rdi, rax	        99	sideband.c	FUNCTION_12	IF_7	CALL_15
0x548	      0xe883fbffff	                   call sym.strbuf_addch	        99	sideband.c	FUNCTION_12	IF_7	CALL_15
0x54d	    0x488b95e8fffe	          mov rdx, qword [rbp - 0x10018]	       100	sideband.c	FUNCTION_12	IF_7	CALL_16
0x554	    0x488b85f0fffe	          mov rax, qword [rbp - 0x10010]	       100	sideband.c	FUNCTION_12	IF_7	CALL_16
0x55b	          0x4889c6	                            mov rsi, rax	       100	sideband.c	FUNCTION_12	IF_7	CALL_16
0x55e	      0xbf02000000	                              mov edi, 2	       100	sideband.c	FUNCTION_12	IF_7	CALL_16
0x563	      0xe800000000	                          call 0x40005a8	       100	sideband.c	FUNCTION_12	IF_7	CALL_16
0x568	    0x488d85e0fffe	                lea rax, [rbp - 0x10020]	       102	sideband.c	FUNCTION_12	CALL_17
0x56f	          0x4889c7	                            mov rdi, rax	       102	sideband.c	FUNCTION_12	CALL_17
0x572	      0xe800000000	                          call 0x40005b7	       102	sideband.c	FUNCTION_12	CALL_17
0x577	    0x8b85b8fffeff	          mov eax, dword [rbp - 0x10048]	       103	sideband.c	FUNCTION_12
0x57d	        0x488b4df8	                mov rcx, qword [rbp - 8]	       104	sideband.c	FUNCTION_12
0x581	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       104	sideband.c	FUNCTION_12
0x58a	            0x7405	                            je 0x40005d1	       104	sideband.c	FUNCTION_12
0x58c	      0xe800000000	                          call 0x40005d1	       104	sideband.c	FUNCTION_12
0x591	              0xc9	                                   leave	       104	sideband.c	FUNCTION_12
0x592	              0xc3	                                     ret	       104	sideband.c	FUNCTION_12
strbuf_addstr	SWITCH,0:CALL,2:DO,0:IF,0:functions,0:FOR,0:ELSE,0:WHILE,0	17
0x13e	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_5
0x13f	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_5
0x142	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_5
0x146	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_5
0x14a	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_5
0x14e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_5	CALL_2
0x152	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x155	      0xe800000000	                          call 0x400019a	       279	strbuf.h	FUNCTION_5	CALL_2
0x15a	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x15d	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_5	CALL_2
0x161	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_5	CALL_2
0x165	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_5	CALL_2
0x168	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x16b	      0xe800000000	                          call 0x40001b0	       279	strbuf.h	FUNCTION_5	CALL_2
0x170	              0x90	                                     nop	       280	strbuf.h	FUNCTION_5
0x171	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_5
0x172	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_5
