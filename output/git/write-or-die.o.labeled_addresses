maybe_flush_or_die	FOR,0:functions,0:CALL,9:DO,0:IF,6:WHILE,0:SWITCH,0:ELSE,2	73
0x0	              0x55	                                push rbp	        18	write-or-die.c	FUNCTION_1
0x1	          0x4889e5	                            mov rbp, rsp	        18	write-or-die.c	FUNCTION_1
0x4	    0x4881ecc00000	                           sub rsp, 0xc0	        18	write-or-die.c	FUNCTION_1
0xb	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	        18	write-or-die.c	FUNCTION_1
0x12	    0x4889b540ffff	             mov qword [rbp - 0xc0], rsi	        18	write-or-die.c	FUNCTION_1
0x19	    0x64488b042528	                mov rax, qword fs:[0x28]	        18	write-or-die.c	FUNCTION_1
0x22	        0x488945f8	                mov qword [rbp - 8], rax	        18	write-or-die.c	FUNCTION_1
0x26	            0x31c0	                            xor eax, eax	        18	write-or-die.c	FUNCTION_1
0x28	    0x488b05000000	            mov rax, qword [0x0400006f] 	        23	write-or-die.c	FUNCTION_1	IF_1
0x2f	    0x48398548ffff	            cmp qword [rbp - 0xb8], rax 	        23	write-or-die.c	FUNCTION_1	IF_1
0x36	     0xf85b3000000	                           jne 0x400012f	        23	write-or-die.c	FUNCTION_1	IF_1
0x3c	    0x8b0500000000	            mov eax, dword [0x04000082] 	        24	write-or-die.c	FUNCTION_1	IF_1	IF_2
0x42	            0x85c0	                           test eax, eax	        24	write-or-die.c	FUNCTION_1	IF_1	IF_2
0x44	     0xf8988000000	                           jns 0x4000112	        24	write-or-die.c	FUNCTION_1	IF_1	IF_2
0x4a	      0xbf00000000	                              mov edi, 0	        25	write-or-die.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x4f	      0xe800000000	                          call 0x4000094	        25	write-or-die.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x54	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	        25	write-or-die.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x5b	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	        26	write-or-die.c	FUNCTION_1	IF_1	IF_2	IF_3
0x63	            0x741f	                            je 0x40000c4	        26	write-or-die.c	FUNCTION_1	IF_1	IF_2	IF_3
0x65	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	        27	write-or-die.c	FUNCTION_1	IF_1	IF_2	CALL_2
0x6c	          0x4889c7	                            mov rdi, rax	        27	write-or-die.c	FUNCTION_1	IF_1	IF_2	CALL_2
0x6f	      0xe800000000	                          call 0x40000b4	        27	write-or-die.c	FUNCTION_1	IF_1	IF_2	CALL_2
0x74	            0x85c0	                           test eax, eax	        27	write-or-die.c	FUNCTION_1	IF_1	IF_2	CALL_2
0x76	           0xf94c0	                                 sete al	        27	write-or-die.c	FUNCTION_1	IF_1	IF_2	CALL_2
0x79	           0xfb6c0	                           movzx eax, al	        27	write-or-die.c	FUNCTION_1	IF_1	IF_2	CALL_2
0x7c	    0x890500000000	            mov dword [0x040000c2], eax 	        27	write-or-die.c	FUNCTION_1	IF_1	IF_2	CALL_2
0x82	            0xeb4e	                           jmp 0x4000112	        27	write-or-die.c	FUNCTION_1	IF_1	IF_2	CALL_2
0x84	    0x488b05000000	            mov rax, qword [0x040000cb] 	        28	write-or-die.c	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x8b	          0x4889c7	                            mov rdi, rax	        28	write-or-die.c	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x8e	      0xe800000000	                          call 0x40000d3	        28	write-or-die.c	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x93	            0x89c2	                            mov edx, eax	        28	write-or-die.c	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x95	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	        28	write-or-die.c	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x9c	          0x4889c6	                            mov rsi, rax	        28	write-or-die.c	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x9f	            0x89d7	                            mov edi, edx	        28	write-or-die.c	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0xa1	      0xe800000000	                          call 0x40000e6	        28	write-or-die.c	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0xa6	            0x85c0	                           test eax, eax	        28	write-or-die.c	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0xa8	            0x751e	                           jne 0x4000108	        28	write-or-die.c	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0xaa	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	        29	write-or-die.c	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4	CALL_5
0xb0	      0x2500f00000	                         and eax, 0xf000	        29	write-or-die.c	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4	CALL_5
0xb5	      0x3d00800000	                         cmp eax, 0x8000	        28	write-or-die.c	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0xba	            0x750c	                           jne 0x4000108	        28	write-or-die.c	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0xbc	    0xc70500000000	               mov dword [0x04000106], 1	        30	write-or-die.c	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4
0xc6	            0xeb0a	                           jmp 0x4000112	        30	write-or-die.c	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4
0xc8	    0xc70500000000	               mov dword [0x04000112], 0	        32	write-or-die.c	FUNCTION_1	IF_1	IF_2	ELSE_2
0xd2	    0x8b0500000000	            mov eax, dword [0x04000118] 	        34	write-or-die.c	FUNCTION_1	IF_1	IF_5	CALL_6
0xd8	            0x85c0	                           test eax, eax	        34	write-or-die.c	FUNCTION_1	IF_1	IF_5	CALL_6
0xda	            0x7413	                            je 0x400012f	        34	write-or-die.c	FUNCTION_1	IF_1	IF_5	CALL_6
0xdc	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	        34	write-or-die.c	FUNCTION_1	IF_1	IF_5	CALL_6
0xe3	          0x4889c7	                            mov rdi, rax	        34	write-or-die.c	FUNCTION_1	IF_1	IF_5	CALL_6
0xe6	      0xe800000000	                          call 0x400012b	        34	write-or-die.c	FUNCTION_1	IF_1	IF_5	CALL_6
0xeb	            0x85c0	                           test eax, eax	        34	write-or-die.c	FUNCTION_1	IF_1	IF_5	CALL_6
0xed	            0x743a	                            je 0x4000169	        34	write-or-die.c	FUNCTION_1	IF_1	IF_5	CALL_6
0xef	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	        37	write-or-die.c	FUNCTION_1	IF_6	CALL_7
0xf6	          0x4889c7	                            mov rdi, rax	        37	write-or-die.c	FUNCTION_1	IF_6	CALL_7
0xf9	      0xe800000000	                          call 0x400013e	        37	write-or-die.c	FUNCTION_1	IF_6	CALL_7
0xfe	            0x85c0	                           test eax, eax	        37	write-or-die.c	FUNCTION_1	IF_6	CALL_7
0x100	            0x7428	                            je 0x400016a	        37	write-or-die.c	FUNCTION_1	IF_6	CALL_7
0x102	      0xe800000000	                          call 0x4000147	        38	write-or-die.c	FUNCTION_1	IF_6	CALL_8
0x107	            0x8b00	                    mov eax, dword [rax]	        38	write-or-die.c	FUNCTION_1	IF_6	CALL_8
0x109	            0x89c7	                            mov edi, eax	        38	write-or-die.c	FUNCTION_1	IF_6	CALL_8
0x10b	      0xe800000000	                          call 0x4000150	        38	write-or-die.c	FUNCTION_1	IF_6	CALL_8
0x110	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	        39	write-or-die.c	FUNCTION_1	IF_6	CALL_9
0x117	          0x4889c6	                            mov rsi, rax	        39	write-or-die.c	FUNCTION_1	IF_6	CALL_9
0x11a	      0xbf00000000	                              mov edi, 0	        39	write-or-die.c	FUNCTION_1	IF_6	CALL_9
0x11f	      0xb800000000	                              mov eax, 0	        39	write-or-die.c	FUNCTION_1	IF_6	CALL_9
0x124	      0xe800000000	                          call 0x4000169	        39	write-or-die.c	FUNCTION_1	IF_6	CALL_9
0x129	              0x90	                                     nop	        35	write-or-die.c	FUNCTION_1	IF_1	IF_5
0x12a	        0x488b45f8	                mov rax, qword [rbp - 8]	        41	write-or-die.c	FUNCTION_1
0x12e	    0x644833042528	                xor rax, qword fs:[0x28]	        41	write-or-die.c	FUNCTION_1
0x137	            0x7405	                            je 0x400017e	        41	write-or-die.c	FUNCTION_1
0x139	      0xe800000000	                          call 0x400017e	        41	write-or-die.c	FUNCTION_1
0x13e	              0xc9	                                   leave	        41	write-or-die.c	FUNCTION_1
0x13f	              0xc3	                                     ret	        41	write-or-die.c	FUNCTION_1
write_or_die	FOR,0:functions,0:CALL,3:DO,0:IF,1:WHILE,0:SWITCH,0:ELSE,0	24
0x274	              0x55	                                push rbp	        66	write-or-die.c	FUNCTION_4
0x275	          0x4889e5	                            mov rbp, rsp	        66	write-or-die.c	FUNCTION_4
0x278	        0x4883ec20	                           sub rsp, 0x20	        66	write-or-die.c	FUNCTION_4
0x27c	          0x897dfc	                mov dword [rbp - 4], edi	        66	write-or-die.c	FUNCTION_4
0x27f	        0x488975f0	             mov qword [rbp - 0x10], rsi	        66	write-or-die.c	FUNCTION_4
0x283	        0x488955e8	             mov qword [rbp - 0x18], rdx	        66	write-or-die.c	FUNCTION_4
0x287	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        67	write-or-die.c	FUNCTION_4	IF_1	CALL_1
0x28b	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        67	write-or-die.c	FUNCTION_4	IF_1	CALL_1
0x28f	          0x8b45fc	                mov eax, dword [rbp - 4]	        67	write-or-die.c	FUNCTION_4	IF_1	CALL_1
0x292	          0x4889ce	                            mov rsi, rcx	        67	write-or-die.c	FUNCTION_4	IF_1	CALL_1
0x295	            0x89c7	                            mov edi, eax	        67	write-or-die.c	FUNCTION_4	IF_1	CALL_1
0x297	      0xe800000000	                          call 0x40002dc	        67	write-or-die.c	FUNCTION_4	IF_1	CALL_1
0x29c	          0x4885c0	                           test rax, rax	        67	write-or-die.c	FUNCTION_4	IF_1	CALL_1
0x29f	            0x791d	                           jns 0x40002fe	        67	write-or-die.c	FUNCTION_4	IF_1	CALL_1
0x2a1	      0xe800000000	                          call 0x40002e6	        68	write-or-die.c	FUNCTION_4	IF_1	CALL_2
0x2a6	            0x8b00	                    mov eax, dword [rax]	        68	write-or-die.c	FUNCTION_4	IF_1	CALL_2
0x2a8	            0x89c7	                            mov edi, eax	        68	write-or-die.c	FUNCTION_4	IF_1	CALL_2
0x2aa	      0xe800000000	                          call 0x40002ef	        68	write-or-die.c	FUNCTION_4	IF_1	CALL_2
0x2af	      0xbf00000000	                              mov edi, 0	        69	write-or-die.c	FUNCTION_4	IF_1	CALL_3
0x2b4	      0xb800000000	                              mov eax, 0	        69	write-or-die.c	FUNCTION_4	IF_1	CALL_3
0x2b9	      0xe800000000	                          call 0x40002fe	        69	write-or-die.c	FUNCTION_4	IF_1	CALL_3
0x2be	              0x90	                                     nop	        71	write-or-die.c	FUNCTION_4
0x2bf	              0xc9	                                   leave	        71	write-or-die.c	FUNCTION_4
0x2c0	              0xc3	                                     ret	        71	write-or-die.c	FUNCTION_4
fsync_or_die	FOR,0:functions,0:CALL,2:DO,0:IF,1:WHILE,0:SWITCH,0:ELSE,0	18
0x23e	              0x55	                                push rbp	        59	write-or-die.c	FUNCTION_3
0x23f	          0x4889e5	                            mov rbp, rsp	        59	write-or-die.c	FUNCTION_3
0x242	        0x4883ec10	                           sub rsp, 0x10	        59	write-or-die.c	FUNCTION_3
0x246	          0x897dfc	                mov dword [rbp - 4], edi	        59	write-or-die.c	FUNCTION_3
0x249	        0x488975f0	             mov qword [rbp - 0x10], rsi	        59	write-or-die.c	FUNCTION_3
0x24d	          0x8b45fc	                mov eax, dword [rbp - 4]	        60	write-or-die.c	FUNCTION_3	IF_1	CALL_1
0x250	            0x89c7	                            mov edi, eax	        60	write-or-die.c	FUNCTION_3	IF_1	CALL_1
0x252	      0xe800000000	                          call 0x4000297	        60	write-or-die.c	FUNCTION_3	IF_1	CALL_1
0x257	            0x85c0	                           test eax, eax	        60	write-or-die.c	FUNCTION_3	IF_1	CALL_1
0x259	            0x7916	                           jns 0x40002b1	        60	write-or-die.c	FUNCTION_3	IF_1	CALL_1
0x25b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        61	write-or-die.c	FUNCTION_3	IF_1	CALL_2
0x25f	          0x4889c6	                            mov rsi, rax	        61	write-or-die.c	FUNCTION_3	IF_1	CALL_2
0x262	      0xbf00000000	                              mov edi, 0	        61	write-or-die.c	FUNCTION_3	IF_1	CALL_2
0x267	      0xb800000000	                              mov eax, 0	        61	write-or-die.c	FUNCTION_3	IF_1	CALL_2
0x26c	      0xe800000000	                          call 0x40002b1	        61	write-or-die.c	FUNCTION_3	IF_1	CALL_2
0x271	              0x90	                                     nop	        63	write-or-die.c	FUNCTION_3
0x272	              0xc9	                                   leave	        63	write-or-die.c	FUNCTION_3
0x273	              0xc3	                                     ret	        63	write-or-die.c	FUNCTION_3
fprintf_or_die	FOR,0:functions,0:CALL,5:DO,0:IF,1:WHILE,0:SWITCH,0:ELSE,0	51
0x140	              0x55	                                push rbp	        44	write-or-die.c	FUNCTION_2
0x141	          0x4889e5	                            mov rbp, rsp	        44	write-or-die.c	FUNCTION_2
0x144	    0x4881ecf00000	                           sub rsp, 0xf0	        44	write-or-die.c	FUNCTION_2
0x14b	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	        44	write-or-die.c	FUNCTION_2
0x152	    0x4889b510ffff	             mov qword [rbp - 0xf0], rsi	        44	write-or-die.c	FUNCTION_2
0x159	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	        44	write-or-die.c	FUNCTION_2
0x160	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	        44	write-or-die.c	FUNCTION_2
0x167	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	        44	write-or-die.c	FUNCTION_2
0x16e	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	        44	write-or-die.c	FUNCTION_2
0x175	            0x84c0	                             test al, al	        44	write-or-die.c	FUNCTION_2
0x177	            0x7420	                            je 0x40001d9	        44	write-or-die.c	FUNCTION_2
0x179	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	        44	write-or-die.c	FUNCTION_2
0x17d	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	        44	write-or-die.c	FUNCTION_2
0x181	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	        44	write-or-die.c	FUNCTION_2
0x185	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	        44	write-or-die.c	FUNCTION_2
0x189	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	        44	write-or-die.c	FUNCTION_2
0x18d	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	        44	write-or-die.c	FUNCTION_2
0x191	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	        44	write-or-die.c	FUNCTION_2
0x195	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	        44	write-or-die.c	FUNCTION_2
0x199	    0x64488b042528	                mov rax, qword fs:[0x28]	        44	write-or-die.c	FUNCTION_2
0x1a2	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	        44	write-or-die.c	FUNCTION_2
0x1a9	            0x31c0	                            xor eax, eax	        44	write-or-die.c	FUNCTION_2
0x1ab	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	        48	write-or-die.c	FUNCTION_2	CALL_1
0x1b5	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	        48	write-or-die.c	FUNCTION_2	CALL_1
0x1bf	        0x488d4510	                   lea rax, [rbp + 0x10]	        48	write-or-die.c	FUNCTION_2	CALL_1
0x1c3	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	        48	write-or-die.c	FUNCTION_2	CALL_1
0x1ca	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	        48	write-or-die.c	FUNCTION_2	CALL_1
0x1d1	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	        48	write-or-die.c	FUNCTION_2	CALL_1
0x1d8	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	        49	write-or-die.c	FUNCTION_2	CALL_2
0x1df	    0x488b8d10ffff	             mov rcx, qword [rbp - 0xf0]	        49	write-or-die.c	FUNCTION_2	CALL_2
0x1e6	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	        49	write-or-die.c	FUNCTION_2	CALL_2
0x1ed	          0x4889ce	                            mov rsi, rcx	        49	write-or-die.c	FUNCTION_2	CALL_2
0x1f0	          0x4889c7	                            mov rdi, rax	        49	write-or-die.c	FUNCTION_2	CALL_2
0x1f3	      0xe800000000	                          call 0x4000238	        49	write-or-die.c	FUNCTION_2	CALL_2
0x1f8	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	        49	write-or-die.c	FUNCTION_2	CALL_2
0x1fe	    0x83bd2cffffff	               cmp dword [rbp - 0xd4], 0	        52	write-or-die.c	FUNCTION_2	IF_1
0x205	            0x791d	                           jns 0x4000264	        52	write-or-die.c	FUNCTION_2	IF_1
0x207	      0xe800000000	                          call 0x400024c	        53	write-or-die.c	FUNCTION_2	IF_1	CALL_4
0x20c	            0x8b00	                    mov eax, dword [rax]	        53	write-or-die.c	FUNCTION_2	IF_1	CALL_4
0x20e	            0x89c7	                            mov edi, eax	        53	write-or-die.c	FUNCTION_2	IF_1	CALL_4
0x210	      0xe800000000	                          call 0x4000255	        53	write-or-die.c	FUNCTION_2	IF_1	CALL_4
0x215	      0xbf00000000	                              mov edi, 0	        54	write-or-die.c	FUNCTION_2	IF_1	CALL_5
0x21a	      0xb800000000	                              mov eax, 0	        54	write-or-die.c	FUNCTION_2	IF_1	CALL_5
0x21f	      0xe800000000	                          call 0x4000264	        54	write-or-die.c	FUNCTION_2	IF_1	CALL_5
0x224	              0x90	                                     nop	        56	write-or-die.c	FUNCTION_2
0x225	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	        56	write-or-die.c	FUNCTION_2
0x22c	    0x644833042528	                xor rax, qword fs:[0x28]	        56	write-or-die.c	FUNCTION_2
0x235	            0x7405	                            je 0x400027c	        56	write-or-die.c	FUNCTION_2
0x237	      0xe800000000	                          call 0x400027c	        56	write-or-die.c	FUNCTION_2
0x23c	              0xc9	                                   leave	        56	write-or-die.c	FUNCTION_2
0x23d	              0xc3	                                     ret	        56	write-or-die.c	FUNCTION_2
