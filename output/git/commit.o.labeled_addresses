get_lock_file_path	WHILE,0:DO,0:IF,0:FOR,0:CALL,1:functions,0:SWITCH,0:ELSE,0	10
0x2f2	              0x55	                                push rbp	       219	lockfile.h	FUNCTION_19
0x2f3	          0x4889e5	                            mov rbp, rsp	       219	lockfile.h	FUNCTION_19
0x2f6	        0x4883ec10	                           sub rsp, 0x10	       219	lockfile.h	FUNCTION_19
0x2fa	        0x48897df8	                mov qword [rbp - 8], rdi	       219	lockfile.h	FUNCTION_19
0x2fe	        0x488b45f8	                mov rax, qword [rbp - 8]	       220	lockfile.h	FUNCTION_19	CALL_1
0x302	          0x488b00	                    mov rax, qword [rax]	       220	lockfile.h	FUNCTION_19	CALL_1
0x305	          0x4889c7	                            mov rdi, rax	       220	lockfile.h	FUNCTION_19	CALL_1
0x308	      0xe800000000	                          call 0x400034d	       220	lockfile.h	FUNCTION_19	CALL_1
0x30d	              0xc9	                                   leave	       221	lockfile.h	FUNCTION_19
0x30e	              0xc3	                                     ret	       221	lockfile.h	FUNCTION_19
parse_commit	WHILE,0:DO,0:IF,0:FOR,0:CALL,1:functions,0:SWITCH,0:ELSE,0	10
0x3dc	              0x55	                                push rbp	        74	commit.h	FUNCTION_26
0x3dd	          0x4889e5	                            mov rbp, rsp	        74	commit.h	FUNCTION_26
0x3e0	        0x4883ec10	                           sub rsp, 0x10	        74	commit.h	FUNCTION_26
0x3e4	        0x48897df8	                mov qword [rbp - 8], rdi	        74	commit.h	FUNCTION_26
0x3e8	        0x488b45f8	                mov rax, qword [rbp - 8]	        75	commit.h	FUNCTION_26	CALL_1
0x3ec	      0xbe00000000	                              mov esi, 0	        75	commit.h	FUNCTION_26	CALL_1
0x3f1	          0x4889c7	                            mov rdi, rax	        75	commit.h	FUNCTION_26	CALL_1
0x3f4	      0xe800000000	                          call 0x4000439	        75	commit.h	FUNCTION_26	CALL_1
0x3f9	              0xc9	                                   leave	        76	commit.h	FUNCTION_26
0x3fa	              0xc3	                                     ret	        76	commit.h	FUNCTION_26
strbuf_avail	WHILE,0:DO,0:IF,0:FOR,0:CALL,0:functions,0:SWITCH,0:ELSE,0	18
0x89	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_6
0x8a	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_6
0x8d	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_6
0x91	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_6
0x95	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_6
0x98	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_6
0x9b	            0x741b	                            je 0x40000f8	       141	strbuf.h	FUNCTION_6
0x9d	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_6
0xa1	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_6
0xa4	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_6
0xa8	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_6
0xac	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_6
0xaf	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_6
0xb2	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_6
0xb6	            0xeb05	                           jmp 0x40000fd	       141	strbuf.h	FUNCTION_6
0xb8	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_6
0xbd	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_6
0xbe	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_6
strbuf_addch	WHILE,0:DO,0:IF,1:FOR,0:CALL,2:functions,0:SWITCH,0:ELSE,0	33
0x159	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_8
0x15a	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_8
0x15d	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_8
0x161	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_8
0x165	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_8
0x168	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_8	IF_1	CALL_1
0x16c	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_8	IF_1	CALL_1
0x16f	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_8	IF_1	CALL_1
0x174	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_8	IF_1	CALL_1
0x177	            0x7511	                           jne 0x40001ca	       227	strbuf.h	FUNCTION_8	IF_1	CALL_1
0x179	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_8	CALL_2
0x17d	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_8	CALL_2
0x182	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_8	CALL_2
0x185	      0xe800000000	                          call 0x40001ca	       228	strbuf.h	FUNCTION_8	CALL_2
0x18a	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_8
0x18e	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_8
0x192	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_8
0x196	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_8
0x19a	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_8
0x19e	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_8
0x1a2	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_8
0x1a6	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_8
0x1a9	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_8
0x1ac	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_8
0x1ae	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_8
0x1b2	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_8
0x1b6	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_8
0x1ba	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_8
0x1be	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_8
0x1c1	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_8
0x1c4	              0x90	                                     nop	       231	strbuf.h	FUNCTION_8
0x1c5	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_8
0x1c6	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_8
skip_prefix	WHILE,0:DO,1:IF,1:FOR,0:CALL,0:functions,0:SWITCH,0:ELSE,0	27
0xb	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_33
0xc	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_33
0xf	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_33
0x13	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_33
0x17	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_33
0x1b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_33	DO_1	IF_1
0x1f	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_33	DO_1	IF_1
0x22	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_33	DO_1	IF_1
0x24	            0x7512	                           jne 0x4000078	       484	git-compat-util.h	FUNCTION_33	DO_1	IF_1
0x26	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_33	DO_1	IF_1
0x2a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_33	DO_1	IF_1
0x2e	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_33	DO_1	IF_1
0x31	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_33	DO_1	IF_1
0x36	            0xeb27	                           jmp 0x400009f	       486	git-compat-util.h	FUNCTION_33	DO_1	IF_1
0x38	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_33	DO_1
0x3c	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_33	DO_1
0x40	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_33	DO_1
0x44	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_33	DO_1
0x47	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_33	DO_1
0x4b	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_33	DO_1
0x4f	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_33	DO_1
0x53	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_33	DO_1
0x56	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_33	DO_1
0x58	            0x74c1	                            je 0x400005b	       488	git-compat-util.h	FUNCTION_33	DO_1
0x5a	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_33
0x5f	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_33
0x60	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_33
const_error	WHILE,0:DO,0:IF,0:FOR,0:CALL,0:functions,0:SWITCH,0:ELSE,0	5
0x0	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_32
0x1	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_32
0x4	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_32
0x9	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_32
0xa	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_32
rollback_lock_file	WHILE,0:DO,0:IF,0:FOR,0:CALL,1:functions,0:SWITCH,0:ELSE,0	10
0x32c	              0x55	                                push rbp	       303	lockfile.h	FUNCTION_25
0x32d	          0x4889e5	                            mov rbp, rsp	       303	lockfile.h	FUNCTION_25
0x330	        0x4883ec10	                           sub rsp, 0x10	       303	lockfile.h	FUNCTION_25
0x334	        0x48897df8	                mov qword [rbp - 8], rdi	       303	lockfile.h	FUNCTION_25
0x338	        0x488b45f8	                mov rax, qword [rbp - 8]	       304	lockfile.h	FUNCTION_25	CALL_1
0x33c	          0x4889c7	                            mov rdi, rax	       304	lockfile.h	FUNCTION_25	CALL_1
0x33f	      0xe800000000	                          call 0x4000384	       304	lockfile.h	FUNCTION_25	CALL_1
0x344	              0x90	                                     nop	       305	lockfile.h	FUNCTION_25
0x345	              0xc9	                                   leave	       305	lockfile.h	FUNCTION_25
0x346	              0xc3	                                     ret	       305	lockfile.h	FUNCTION_25
strbuf_addstr	WHILE,0:DO,0:IF,0:FOR,0:CALL,2:functions,0:SWITCH,0:ELSE,0	17
0x1c7	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_9
0x1c8	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_9
0x1cb	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_9
0x1cf	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_9
0x1d3	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_9
0x1d7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_9	CALL_2
0x1db	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_9	CALL_2
0x1de	      0xe800000000	                          call 0x4000223	       279	strbuf.h	FUNCTION_9	CALL_2
0x1e3	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_9	CALL_2
0x1e6	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_9	CALL_2
0x1ea	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_9	CALL_2
0x1ee	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_9	CALL_2
0x1f1	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_9	CALL_2
0x1f4	      0xe800000000	                          call 0x4000239	       279	strbuf.h	FUNCTION_9	CALL_2
0x1f9	              0x90	                                     nop	       280	strbuf.h	FUNCTION_9
0x1fa	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_9
0x1fb	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_9
hold_lock_file_for_update	WHILE,0:DO,0:IF,0:FOR,0:CALL,1:functions,0:SWITCH,0:ELSE,0	14
0x2c5	              0x55	                                push rbp	       174	lockfile.h	FUNCTION_16
0x2c6	          0x4889e5	                            mov rbp, rsp	       174	lockfile.h	FUNCTION_16
0x2c9	        0x4883ec20	                           sub rsp, 0x20	       174	lockfile.h	FUNCTION_16
0x2cd	        0x48897df8	                mov qword [rbp - 8], rdi	       174	lockfile.h	FUNCTION_16
0x2d1	        0x488975f0	             mov qword [rbp - 0x10], rsi	       174	lockfile.h	FUNCTION_16
0x2d5	          0x8955ec	             mov dword [rbp - 0x14], edx	       174	lockfile.h	FUNCTION_16
0x2d8	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       175	lockfile.h	FUNCTION_16	CALL_1
0x2db	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       175	lockfile.h	FUNCTION_16	CALL_1
0x2df	        0x488b45f8	                mov rax, qword [rbp - 8]	       175	lockfile.h	FUNCTION_16	CALL_1
0x2e3	      0xb900000000	                              mov ecx, 0	       175	lockfile.h	FUNCTION_16	CALL_1
0x2e8	          0x4889c7	                            mov rdi, rax	       175	lockfile.h	FUNCTION_16	CALL_1
0x2eb	      0xe800000000	                          call 0x4000330	       175	lockfile.h	FUNCTION_16	CALL_1
0x2f0	              0xc9	                                   leave	       176	lockfile.h	FUNCTION_16
0x2f1	              0xc3	                                     ret	       176	lockfile.h	FUNCTION_16
ce_path_match	WHILE,0:DO,0:IF,0:FOR,0:CALL,4:functions,0:SWITCH,0:ELSE,0	34
0x366	              0x55	                                push rbp	       335	dir.h	FUNCTION_55
0x367	          0x4889e5	                            mov rbp, rsp	       335	dir.h	FUNCTION_55
0x36a	        0x4883ec20	                           sub rsp, 0x20	       335	dir.h	FUNCTION_55
0x36e	        0x48897df8	                mov qword [rbp - 8], rdi	       335	dir.h	FUNCTION_55
0x372	        0x488975f0	             mov qword [rbp - 0x10], rsi	       335	dir.h	FUNCTION_55
0x376	        0x488955e8	             mov qword [rbp - 0x18], rdx	       335	dir.h	FUNCTION_55
0x37a	        0x488b45f8	                mov rax, qword [rbp - 8]	       337	dir.h	FUNCTION_55	CALL_4
0x37e	          0x8b4034	            mov eax, dword [rax + 0x34] 	       337	dir.h	FUNCTION_55	CALL_4
0x381	      0x2500f00000	                         and eax, 0xf000	       337	dir.h	FUNCTION_55	CALL_4
0x386	      0x3d00400000	                         cmp eax, 0x4000	       336	dir.h	FUNCTION_55	CALL_2
0x38b	            0x7413	                            je 0x40003e0	       336	dir.h	FUNCTION_55	CALL_2
0x38d	        0x488b45f8	                mov rax, qword [rbp - 8]	       337	dir.h	FUNCTION_55	CALL_4
0x391	          0x8b4034	            mov eax, dword [rax + 0x34] 	       337	dir.h	FUNCTION_55	CALL_4
0x394	      0x2500f00000	                         and eax, 0xf000	       337	dir.h	FUNCTION_55	CALL_4
0x399	      0x3d00e00000	                         cmp eax, 0xe000	       336	dir.h	FUNCTION_55	CALL_2
0x39e	            0x7507	                           jne 0x40003e7	       336	dir.h	FUNCTION_55	CALL_2
0x3a0	      0xb901000000	                              mov ecx, 1	       336	dir.h	FUNCTION_55	CALL_2
0x3a5	            0xeb05	                           jmp 0x40003ec	       336	dir.h	FUNCTION_55	CALL_2
0x3a7	      0xb900000000	                              mov ecx, 0	       336	dir.h	FUNCTION_55	CALL_2
0x3ac	        0x488b45f8	                mov rax, qword [rbp - 8]	       336	dir.h	FUNCTION_55	CALL_2
0x3b0	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       336	dir.h	FUNCTION_55	CALL_2
0x3b3	            0x89c7	                            mov edi, eax	       336	dir.h	FUNCTION_55	CALL_2
0x3b5	        0x488b45f8	                mov rax, qword [rbp - 8]	       336	dir.h	FUNCTION_55	CALL_2
0x3b9	        0x488d7058	                   lea rsi, [rax + 0x58]	       336	dir.h	FUNCTION_55	CALL_2
0x3bd	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       336	dir.h	FUNCTION_55	CALL_2
0x3c1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       336	dir.h	FUNCTION_55	CALL_2
0x3c5	          0x4189c9	                            mov r9d, ecx	       336	dir.h	FUNCTION_55	CALL_2
0x3c8	          0x4989d0	                             mov r8, rdx	       336	dir.h	FUNCTION_55	CALL_2
0x3cb	      0xb900000000	                              mov ecx, 0	       336	dir.h	FUNCTION_55	CALL_2
0x3d0	            0x89fa	                            mov edx, edi	       336	dir.h	FUNCTION_55	CALL_2
0x3d2	          0x4889c7	                            mov rdi, rax	       336	dir.h	FUNCTION_55	CALL_2
0x3d5	      0xe800000000	                          call 0x400041a	       336	dir.h	FUNCTION_55	CALL_2
0x3da	              0xc9	                                   leave	       338	dir.h	FUNCTION_55
0x3db	              0xc3	                                     ret	       338	dir.h	FUNCTION_55
_	WHILE,0:DO,0:IF,1:FOR,0:CALL,2:functions,0:SWITCH,0:ELSE,0	15
0x26e	              0x55	                                push rbp	        51	gettext.h	FUNCTION_59
0x26f	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_59
0x272	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_59
0x276	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_59
0x27a	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_59	IF_1
0x27e	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_59	IF_1
0x281	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_59	IF_1
0x283	            0x7507	                           jne 0x40002cc	        52	gettext.h	FUNCTION_59	IF_1
0x285	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_59	IF_1
0x28a	            0xeb0c	                           jmp 0x40002d8	        53	gettext.h	FUNCTION_59	IF_1
0x28c	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_59	CALL_2
0x290	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_59	CALL_2
0x293	      0xe800000000	                          call 0x40002d8	        54	gettext.h	FUNCTION_59	CALL_2
0x298	              0xc9	                                   leave	        55	gettext.h	FUNCTION_59
0x299	              0xc3	                                     ret	        55	gettext.h	FUNCTION_59
xstrdup_or_null	WHILE,0:DO,0:IF,0:FOR,0:CALL,1:functions,0:SWITCH,0:ELSE,0	13
0x61	              0x55	                                push rbp	       923	git-compat-util.h	FUNCTION_45
0x62	          0x4889e5	                            mov rbp, rsp	       923	git-compat-util.h	FUNCTION_45
0x65	        0x4883ec10	                           sub rsp, 0x10	       923	git-compat-util.h	FUNCTION_45
0x69	        0x48897df8	                mov qword [rbp - 8], rdi	       923	git-compat-util.h	FUNCTION_45
0x6d	      0x48837df800	                  cmp qword [rbp - 8], 0	       924	git-compat-util.h	FUNCTION_45	CALL_1
0x72	            0x740e	                            je 0x40000c2	       924	git-compat-util.h	FUNCTION_45	CALL_1
0x74	        0x488b45f8	                mov rax, qword [rbp - 8]	       924	git-compat-util.h	FUNCTION_45	CALL_1
0x78	          0x4889c7	                            mov rdi, rax	       924	git-compat-util.h	FUNCTION_45	CALL_1
0x7b	      0xe800000000	                          call 0x40000c0	       924	git-compat-util.h	FUNCTION_45	CALL_1
0x80	            0xeb05	                           jmp 0x40000c7	       924	git-compat-util.h	FUNCTION_45	CALL_1
0x82	      0xb800000000	                              mov eax, 0	       924	git-compat-util.h	FUNCTION_45	CALL_1
0x87	              0xc9	                                   leave	       925	git-compat-util.h	FUNCTION_45
0x88	              0xc3	                                     ret	       925	git-compat-util.h	FUNCTION_45
strbuf_complete_line	WHILE,0:DO,0:IF,0:FOR,0:CALL,1:functions,0:SWITCH,0:ELSE,0	11
0x24e	              0x55	                                push rbp	       600	strbuf.h	FUNCTION_15
0x24f	          0x4889e5	                            mov rbp, rsp	       600	strbuf.h	FUNCTION_15
0x252	        0x4883ec10	                           sub rsp, 0x10	       600	strbuf.h	FUNCTION_15
0x256	        0x48897df8	                mov qword [rbp - 8], rdi	       600	strbuf.h	FUNCTION_15
0x25a	        0x488b45f8	                mov rax, qword [rbp - 8]	       601	strbuf.h	FUNCTION_15	CALL_1
0x25e	      0xbe0a000000	                            mov esi, 0xa	       601	strbuf.h	FUNCTION_15	CALL_1
0x263	          0x4889c7	                            mov rdi, rax	       601	strbuf.h	FUNCTION_15	CALL_1
0x266	      0xe891ffffff	                call sym.strbuf_complete	       601	strbuf.h	FUNCTION_15	CALL_1
0x26b	              0x90	                                     nop	       602	strbuf.h	FUNCTION_15
0x26c	              0xc9	                                   leave	       602	strbuf.h	FUNCTION_15
0x26d	              0xc3	                                     ret	       602	strbuf.h	FUNCTION_15
reopen_lock_file	WHILE,0:DO,0:IF,0:FOR,0:CALL,1:functions,0:SWITCH,0:ELSE,0	10
0x30f	              0x55	                                push rbp	       272	lockfile.h	FUNCTION_23
0x310	          0x4889e5	                            mov rbp, rsp	       272	lockfile.h	FUNCTION_23
0x313	        0x4883ec10	                           sub rsp, 0x10	       272	lockfile.h	FUNCTION_23
0x317	        0x48897df8	                mov qword [rbp - 8], rdi	       272	lockfile.h	FUNCTION_23
0x31b	        0x488b45f8	                mov rax, qword [rbp - 8]	       273	lockfile.h	FUNCTION_23	CALL_1
0x31f	          0x488b00	                    mov rax, qword [rax]	       273	lockfile.h	FUNCTION_23	CALL_1
0x322	          0x4889c7	                            mov rdi, rax	       273	lockfile.h	FUNCTION_23	CALL_1
0x325	      0xe800000000	                          call 0x400036a	       273	lockfile.h	FUNCTION_23	CALL_1
0x32a	              0xc9	                                   leave	       274	lockfile.h	FUNCTION_23
0x32b	              0xc3	                                     ret	       274	lockfile.h	FUNCTION_23
strbuf_setlen	WHILE,0:DO,0:IF,2:FOR,0:CALL,2:functions,0:SWITCH,0:ELSE,1	43
0xbf	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_7
0xc0	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_7
0xc3	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_7
0xc7	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_7
0xcb	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_7
0xcf	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_7	IF_1
0xd3	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_7	IF_1
0xd6	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_7	IF_1
0xd9	            0x740d	                            je 0x4000128	       162	strbuf.h	FUNCTION_7	IF_1
0xdb	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_7	IF_1
0xdf	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_7	IF_1
0xe2	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_7	IF_1
0xe6	            0xeb05	                           jmp 0x400012d	       162	strbuf.h	FUNCTION_7	IF_1
0xe8	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_7	IF_1
0xed	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_7	IF_1
0xf1	            0x730f	                           jae 0x4000142	       162	strbuf.h	FUNCTION_7	IF_1
0xf3	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_7	CALL_1
0xf8	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_7	CALL_1
0xfd	      0xe800000000	                          call 0x4000142	       163	strbuf.h	FUNCTION_7	CALL_1
0x102	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_7
0x106	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_7
0x10a	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_7
0x10e	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_7	IF_2
0x112	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_7	IF_2
0x116	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_7	IF_2
0x11c	            0x7414	                            je 0x4000172	       165	strbuf.h	FUNCTION_7	IF_2
0x11e	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_7	IF_2
0x122	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_7	IF_2
0x126	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_7	IF_2
0x12a	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_7	IF_2
0x12d	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_7	IF_2
0x130	            0xeb24	                           jmp 0x4000196	       169	strbuf.h	FUNCTION_7
0x132	     0xfb605000000	           movzx eax, byte [0x04000179] 	       168	strbuf.h	FUNCTION_7	CALL_2
0x139	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_7	CALL_2
0x13b	            0x7419	                            je 0x4000196	       168	strbuf.h	FUNCTION_7	CALL_2
0x13d	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_7	CALL_2
0x142	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_7	CALL_2
0x147	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_7	CALL_2
0x14c	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_7	CALL_2
0x151	      0xe800000000	                          call 0x4000196	       168	strbuf.h	FUNCTION_7	CALL_2
0x156	              0x90	                                     nop	       169	strbuf.h	FUNCTION_7
0x157	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_7
0x158	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_7
strbuf_complete	WHILE,0:DO,0:IF,1:FOR,0:CALL,1:functions,0:SWITCH,0:ELSE,0	27
0x1fc	              0x55	                                push rbp	       594	strbuf.h	FUNCTION_14
0x1fd	          0x4889e5	                            mov rbp, rsp	       594	strbuf.h	FUNCTION_14
0x200	        0x4883ec10	                           sub rsp, 0x10	       594	strbuf.h	FUNCTION_14
0x204	        0x48897df8	                mov qword [rbp - 8], rdi	       594	strbuf.h	FUNCTION_14
0x208	            0x89f0	                            mov eax, esi	       594	strbuf.h	FUNCTION_14
0x20a	          0x8845f4	                mov byte [rbp - 0xc], al	       594	strbuf.h	FUNCTION_14
0x20d	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_14	IF_1
0x211	        0x488b4008	                mov rax, qword [rax + 8]	       595	strbuf.h	FUNCTION_14	IF_1
0x215	          0x4885c0	                           test rax, rax	       595	strbuf.h	FUNCTION_14	IF_1
0x218	            0x7431	                            je 0x400028b	       595	strbuf.h	FUNCTION_14	IF_1
0x21a	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_14	IF_1
0x21e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       595	strbuf.h	FUNCTION_14	IF_1
0x222	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_14	IF_1
0x226	        0x488b4008	                mov rax, qword [rax + 8]	       595	strbuf.h	FUNCTION_14	IF_1
0x22a	        0x4883e801	                              sub rax, 1	       595	strbuf.h	FUNCTION_14	IF_1
0x22e	          0x4801d0	                            add rax, rdx	       595	strbuf.h	FUNCTION_14	IF_1
0x231	           0xfb600	                   movzx eax, byte [rax]	       595	strbuf.h	FUNCTION_14	IF_1
0x234	          0x3a45f4	                cmp al, byte [rbp - 0xc]	       595	strbuf.h	FUNCTION_14	IF_1
0x237	            0x7412	                            je 0x400028b	       595	strbuf.h	FUNCTION_14	IF_1
0x239	         0xfbe55f4	             movsx edx, byte [rbp - 0xc]	       596	strbuf.h	FUNCTION_14	CALL_1
0x23d	        0x488b45f8	                mov rax, qword [rbp - 8]	       596	strbuf.h	FUNCTION_14	CALL_1
0x241	            0x89d6	                            mov esi, edx	       596	strbuf.h	FUNCTION_14	CALL_1
0x243	          0x4889c7	                            mov rdi, rax	       596	strbuf.h	FUNCTION_14	CALL_1
0x246	      0xe80effffff	                   call sym.strbuf_addch	       596	strbuf.h	FUNCTION_14	CALL_1
0x24b	              0x90	                                     nop	       597	strbuf.h	FUNCTION_14
0x24c	              0xc9	                                   leave	       597	strbuf.h	FUNCTION_14
0x24d	              0xc3	                                     ret	       597	strbuf.h	FUNCTION_14
