real_path_if_valid	functions,0:DO,0:CALL,1:IF,0:WHILE,0:FOR,0:SWITCH,0:ELSE,0	11
0x9a0	              0x55	                                push rbp	       216	abspath.c	FUNCTION_7
0x9a1	          0x4889e5	                            mov rbp, rsp	       216	abspath.c	FUNCTION_7
0x9a4	        0x4883ec10	                           sub rsp, 0x10	       216	abspath.c	FUNCTION_7
0x9a8	        0x48897df8	                mov qword [rbp - 8], rdi	       216	abspath.c	FUNCTION_7
0x9ac	        0x488b45f8	                mov rax, qword [rbp - 8]	       218	abspath.c	FUNCTION_7	CALL_1
0x9b0	      0xba00000000	                              mov edx, 0	       218	abspath.c	FUNCTION_7	CALL_1
0x9b5	          0x4889c6	                            mov rsi, rax	       218	abspath.c	FUNCTION_7	CALL_1
0x9b8	      0xbf00000000	                              mov edi, 0	       218	abspath.c	FUNCTION_7	CALL_1
0x9bd	      0xe800000000	                          call 0x4000a02	       218	abspath.c	FUNCTION_7	CALL_1
0x9c2	              0xc9	                                   leave	       219	abspath.c	FUNCTION_7
0x9c3	              0xc3	                                     ret	       219	abspath.c	FUNCTION_7
git_offset_1st_component	functions,0:DO,0:CALL,1:IF,0:WHILE,0:FOR,0:SWITCH,0:ELSE,0	11
0x22	              0x55	                                push rbp	       371	git-compat-util.h	FUNCTION_26
0x23	          0x4889e5	                            mov rbp, rsp	       371	git-compat-util.h	FUNCTION_26
0x26	        0x4883ec08	                              sub rsp, 8	       371	git-compat-util.h	FUNCTION_26
0x2a	        0x48897df8	                mov qword [rbp - 8], rdi	       371	git-compat-util.h	FUNCTION_26
0x2e	        0x488b45f8	                mov rax, qword [rbp - 8]	       372	git-compat-util.h	FUNCTION_26	CALL_1
0x32	           0xfb600	                   movzx eax, byte [rax]	       372	git-compat-util.h	FUNCTION_26	CALL_1
0x35	           0xfbec0	                           movsx eax, al	       372	git-compat-util.h	FUNCTION_26	CALL_1
0x38	            0x89c7	                            mov edi, eax	       372	git-compat-util.h	FUNCTION_26	CALL_1
0x3a	      0xe8d0ffffff	                 call sym.git_is_dir_sep	       372	git-compat-util.h	FUNCTION_26	CALL_1
0x3f	              0xc9	                                   leave	       373	git-compat-util.h	FUNCTION_26
0x40	              0xc3	                                     ret	       373	git-compat-util.h	FUNCTION_26
strip_last_component	functions,0:DO,0:CALL,4:IF,0:WHILE,2:FOR,0:SWITCH,0:ELSE,0	53
0x2f9	              0x55	                                push rbp	        16	abspath.c	FUNCTION_2
0x2fa	          0x4889e5	                            mov rbp, rsp	        16	abspath.c	FUNCTION_2
0x2fd	        0x4883ec20	                           sub rsp, 0x20	        16	abspath.c	FUNCTION_2
0x301	        0x48897de8	             mov qword [rbp - 0x18], rdi	        16	abspath.c	FUNCTION_2
0x305	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        17	abspath.c	FUNCTION_2	CALL_1
0x309	        0x488b4010	            mov rax, qword [rax + 0x10] 	        17	abspath.c	FUNCTION_2	CALL_1
0x30d	          0x4889c7	                            mov rdi, rax	        17	abspath.c	FUNCTION_2	CALL_1
0x310	      0xe80dfdffff	       call sym.git_offset_1st_component	        17	abspath.c	FUNCTION_2	CALL_1
0x315	            0x4898	                                    cdqe	        17	abspath.c	FUNCTION_2	CALL_1
0x317	        0x488945f8	                mov qword [rbp - 8], rax	        17	abspath.c	FUNCTION_2	CALL_1
0x31b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        18	abspath.c	FUNCTION_2
0x31f	        0x488b4008	                mov rax, qword [rax + 8]	        18	abspath.c	FUNCTION_2
0x323	        0x488945f0	             mov qword [rbp - 0x10], rax	        18	abspath.c	FUNCTION_2
0x327	            0xeb05	                           jmp 0x400036e	        21	abspath.c	FUNCTION_2	WHILE_1	CALL_2
0x329	      0x48836df001	               sub qword [rbp - 0x10], 1	        22	abspath.c	FUNCTION_2	WHILE_1
0x32e	        0x488b45f8	                mov rax, qword [rbp - 8]	        21	abspath.c	FUNCTION_2	WHILE_1	CALL_2
0x332	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	        21	abspath.c	FUNCTION_2	WHILE_1	CALL_2
0x336	            0x732b	                           jae 0x40003a3	        21	abspath.c	FUNCTION_2	WHILE_1	CALL_2
0x338	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        21	abspath.c	FUNCTION_2	WHILE_1	CALL_2
0x33c	        0x488b4010	            mov rax, qword [rax + 0x10] 	        21	abspath.c	FUNCTION_2	WHILE_1	CALL_2
0x340	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        21	abspath.c	FUNCTION_2	WHILE_1	CALL_2
0x344	        0x4883ea01	                              sub rdx, 1	        21	abspath.c	FUNCTION_2	WHILE_1	CALL_2
0x348	          0x4801d0	                            add rax, rdx	        21	abspath.c	FUNCTION_2	WHILE_1	CALL_2
0x34b	           0xfb600	                   movzx eax, byte [rax]	        21	abspath.c	FUNCTION_2	WHILE_1	CALL_2
0x34e	           0xfbec0	                           movsx eax, al	        21	abspath.c	FUNCTION_2	WHILE_1	CALL_2
0x351	            0x89c7	                            mov edi, eax	        21	abspath.c	FUNCTION_2	WHILE_1	CALL_2
0x353	      0xe8b7fcffff	                 call sym.git_is_dir_sep	        21	abspath.c	FUNCTION_2	WHILE_1	CALL_2
0x358	            0x85c0	                           test eax, eax	        21	abspath.c	FUNCTION_2	WHILE_1	CALL_2
0x35a	            0x74cd	                            je 0x4000369	        21	abspath.c	FUNCTION_2	WHILE_1	CALL_2
0x35c	            0xeb05	                           jmp 0x40003a3	        24	abspath.c	FUNCTION_2	WHILE_2	CALL_3
0x35e	      0x48836df001	               sub qword [rbp - 0x10], 1	        25	abspath.c	FUNCTION_2	WHILE_2
0x363	        0x488b45f8	                mov rax, qword [rbp - 8]	        24	abspath.c	FUNCTION_2	WHILE_2	CALL_3
0x367	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	        24	abspath.c	FUNCTION_2	WHILE_2	CALL_3
0x36b	            0x7324	                           jae 0x40003d1	        24	abspath.c	FUNCTION_2	WHILE_2	CALL_3
0x36d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        24	abspath.c	FUNCTION_2	WHILE_2	CALL_3
0x371	        0x488b4010	            mov rax, qword [rax + 0x10] 	        24	abspath.c	FUNCTION_2	WHILE_2	CALL_3
0x375	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        24	abspath.c	FUNCTION_2	WHILE_2	CALL_3
0x379	        0x4883ea01	                              sub rdx, 1	        24	abspath.c	FUNCTION_2	WHILE_2	CALL_3
0x37d	          0x4801d0	                            add rax, rdx	        24	abspath.c	FUNCTION_2	WHILE_2	CALL_3
0x380	           0xfb600	                   movzx eax, byte [rax]	        24	abspath.c	FUNCTION_2	WHILE_2	CALL_3
0x383	           0xfbec0	                           movsx eax, al	        24	abspath.c	FUNCTION_2	WHILE_2	CALL_3
0x386	            0x89c7	                            mov edi, eax	        24	abspath.c	FUNCTION_2	WHILE_2	CALL_3
0x388	      0xe882fcffff	                 call sym.git_is_dir_sep	        24	abspath.c	FUNCTION_2	WHILE_2	CALL_3
0x38d	            0x85c0	                           test eax, eax	        24	abspath.c	FUNCTION_2	WHILE_2	CALL_3
0x38f	            0x75cd	                           jne 0x400039e	        24	abspath.c	FUNCTION_2	WHILE_2	CALL_3
0x391	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        27	abspath.c	FUNCTION_2	CALL_4
0x395	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        27	abspath.c	FUNCTION_2	CALL_4
0x399	          0x4889d6	                            mov rsi, rdx	        27	abspath.c	FUNCTION_2	CALL_4
0x39c	          0x4889c7	                            mov rdi, rax	        27	abspath.c	FUNCTION_2	CALL_4
0x39f	      0xe867fdffff	                  call sym.strbuf_setlen	        27	abspath.c	FUNCTION_2	CALL_4
0x3a4	              0x90	                                     nop	        28	abspath.c	FUNCTION_2
0x3a5	              0xc9	                                   leave	        28	abspath.c	FUNCTION_2
0x3a6	              0xc3	                                     ret	        28	abspath.c	FUNCTION_2
git_is_dir_sep	functions,0:DO,0:CALL,0:IF,0:WHILE,0:FOR,0:SWITCH,0:ELSE,0	8
0xf	              0x55	                                push rbp	       363	git-compat-util.h	FUNCTION_25
0x10	          0x4889e5	                            mov rbp, rsp	       363	git-compat-util.h	FUNCTION_25
0x13	          0x897dfc	                mov dword [rbp - 4], edi	       363	git-compat-util.h	FUNCTION_25
0x16	        0x837dfc2f	               cmp dword [rbp - 4], 0x2f	       364	git-compat-util.h	FUNCTION_25
0x1a	           0xf94c0	                                 sete al	       364	git-compat-util.h	FUNCTION_25
0x1d	           0xfb6c0	                           movzx eax, al	       364	git-compat-util.h	FUNCTION_25
0x20	              0x5d	                                 pop rbp	       365	git-compat-util.h	FUNCTION_25
0x21	              0xc3	                                     ret	       365	git-compat-util.h	FUNCTION_25
get_next_component	functions,0:DO,0:CALL,5:IF,0:WHILE,0:FOR,2:SWITCH,0:ELSE,0	61
0x3a7	              0x55	                                push rbp	        32	abspath.c	FUNCTION_3
0x3a8	          0x4889e5	                            mov rbp, rsp	        32	abspath.c	FUNCTION_3
0x3ab	        0x4883ec20	                           sub rsp, 0x20	        32	abspath.c	FUNCTION_3
0x3af	        0x48897de8	             mov qword [rbp - 0x18], rdi	        32	abspath.c	FUNCTION_3
0x3b3	        0x488975e0	             mov qword [rbp - 0x20], rsi	        32	abspath.c	FUNCTION_3
0x3b7	    0x48c745f00000	               mov qword [rbp - 0x10], 0	        33	abspath.c	FUNCTION_3
0x3bf	    0x48c745f80000	                  mov qword [rbp - 8], 0	        34	abspath.c	FUNCTION_3
0x3c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        36	abspath.c	FUNCTION_3	CALL_1
0x3cb	      0xbe00000000	                              mov esi, 0	        36	abspath.c	FUNCTION_3	CALL_1
0x3d0	          0x4889c7	                            mov rdi, rax	        36	abspath.c	FUNCTION_3	CALL_1
0x3d3	      0xe833fdffff	                  call sym.strbuf_setlen	        36	abspath.c	FUNCTION_3	CALL_1
0x3d8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        40	abspath.c	FUNCTION_3	FOR_1	CALL_2
0x3dc	        0x488b4010	            mov rax, qword [rax + 0x10] 	        40	abspath.c	FUNCTION_3	FOR_1	CALL_2
0x3e0	        0x488945f0	             mov qword [rbp - 0x10], rax	        40	abspath.c	FUNCTION_3	FOR_1	CALL_2
0x3e4	            0xeb05	                           jmp 0x400042b	        40	abspath.c	FUNCTION_3	FOR_1	CALL_2
0x3e6	      0x488345f001	               add qword [rbp - 0x10], 1	        40	abspath.c	FUNCTION_3	FOR_1	CALL_2
0x3eb	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        40	abspath.c	FUNCTION_3	FOR_1	CALL_2
0x3ef	           0xfb600	                   movzx eax, byte [rax]	        40	abspath.c	FUNCTION_3	FOR_1	CALL_2
0x3f2	           0xfbec0	                           movsx eax, al	        40	abspath.c	FUNCTION_3	FOR_1	CALL_2
0x3f5	            0x89c7	                            mov edi, eax	        40	abspath.c	FUNCTION_3	FOR_1	CALL_2
0x3f7	      0xe813fcffff	                 call sym.git_is_dir_sep	        40	abspath.c	FUNCTION_3	FOR_1	CALL_2
0x3fc	            0x85c0	                           test eax, eax	        40	abspath.c	FUNCTION_3	FOR_1	CALL_2
0x3fe	            0x75e6	                           jne 0x4000426	        40	abspath.c	FUNCTION_3	FOR_1	CALL_2
0x400	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        43	abspath.c	FUNCTION_3	FOR_2	CALL_3
0x404	        0x488945f8	                mov qword [rbp - 8], rax	        43	abspath.c	FUNCTION_3	FOR_2	CALL_3
0x408	            0xeb05	                           jmp 0x400044f	        43	abspath.c	FUNCTION_3	FOR_2	CALL_3
0x40a	      0x488345f801	                  add qword [rbp - 8], 1	        43	abspath.c	FUNCTION_3	FOR_2	CALL_3
0x40f	        0x488b45f8	                mov rax, qword [rbp - 8]	        43	abspath.c	FUNCTION_3	FOR_2	CALL_3
0x413	           0xfb600	                   movzx eax, byte [rax]	        43	abspath.c	FUNCTION_3	FOR_2	CALL_3
0x416	            0x84c0	                             test al, al	        43	abspath.c	FUNCTION_3	FOR_2	CALL_3
0x418	            0x7415	                            je 0x400046f	        43	abspath.c	FUNCTION_3	FOR_2	CALL_3
0x41a	        0x488b45f8	                mov rax, qword [rbp - 8]	        43	abspath.c	FUNCTION_3	FOR_2	CALL_3
0x41e	           0xfb600	                   movzx eax, byte [rax]	        43	abspath.c	FUNCTION_3	FOR_2	CALL_3
0x421	           0xfbec0	                           movsx eax, al	        43	abspath.c	FUNCTION_3	FOR_2	CALL_3
0x424	            0x89c7	                            mov edi, eax	        43	abspath.c	FUNCTION_3	FOR_2	CALL_3
0x426	      0xe8e4fbffff	                 call sym.git_is_dir_sep	        43	abspath.c	FUNCTION_3	FOR_2	CALL_3
0x42b	            0x85c0	                           test eax, eax	        43	abspath.c	FUNCTION_3	FOR_2	CALL_3
0x42d	            0x74db	                            je 0x400044a	        43	abspath.c	FUNCTION_3	FOR_2	CALL_3
0x42f	        0x488b55f8	                mov rdx, qword [rbp - 8]	        46	abspath.c	FUNCTION_3	CALL_4
0x433	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        46	abspath.c	FUNCTION_3	CALL_4
0x437	          0x4829c2	                            sub rdx, rax	        46	abspath.c	FUNCTION_3	CALL_4
0x43a	          0x4889d0	                            mov rax, rdx	        46	abspath.c	FUNCTION_3	CALL_4
0x43d	          0x4889c2	                            mov rdx, rax	        46	abspath.c	FUNCTION_3	CALL_4
0x440	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        46	abspath.c	FUNCTION_3	CALL_4
0x444	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        46	abspath.c	FUNCTION_3	CALL_4
0x448	          0x4889ce	                            mov rsi, rcx	        46	abspath.c	FUNCTION_3	CALL_4
0x44b	          0x4889c7	                            mov rdi, rax	        46	abspath.c	FUNCTION_3	CALL_4
0x44e	      0xe800000000	                          call 0x4000493	        46	abspath.c	FUNCTION_3	CALL_4
0x453	        0x488b55f8	                mov rdx, qword [rbp - 8]	        48	abspath.c	FUNCTION_3	CALL_5
0x457	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        48	abspath.c	FUNCTION_3	CALL_5
0x45b	        0x488b4010	            mov rax, qword [rax + 0x10] 	        48	abspath.c	FUNCTION_3	CALL_5
0x45f	          0x4829c2	                            sub rdx, rax	        48	abspath.c	FUNCTION_3	CALL_5
0x462	          0x4889d0	                            mov rax, rdx	        48	abspath.c	FUNCTION_3	CALL_5
0x465	          0x4889c2	                            mov rdx, rax	        48	abspath.c	FUNCTION_3	CALL_5
0x468	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        48	abspath.c	FUNCTION_3	CALL_5
0x46c	      0xbe00000000	                              mov esi, 0	        48	abspath.c	FUNCTION_3	CALL_5
0x471	          0x4889c7	                            mov rdi, rax	        48	abspath.c	FUNCTION_3	CALL_5
0x474	      0xe800000000	                          call 0x40004b9	        48	abspath.c	FUNCTION_3	CALL_5
0x479	              0x90	                                     nop	        49	abspath.c	FUNCTION_3
0x47a	              0xc9	                                   leave	        49	abspath.c	FUNCTION_3
0x47b	              0xc3	                                     ret	        49	abspath.c	FUNCTION_3
strbuf_addch	functions,0:DO,0:CALL,2:IF,1:WHILE,0:FOR,0:SWITCH,0:ELSE,0	33
0x1a5	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_15
0x1a6	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_15
0x1a9	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_15
0x1ad	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_15
0x1b1	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_15
0x1b4	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x1b8	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x1bb	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x1c0	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x1c3	            0x7511	                           jne 0x4000216	       227	strbuf.h	FUNCTION_15	IF_1	CALL_1
0x1c5	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_15	CALL_2
0x1c9	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_15	CALL_2
0x1ce	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_15	CALL_2
0x1d1	      0xe800000000	                          call 0x4000216	       228	strbuf.h	FUNCTION_15	CALL_2
0x1d6	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_15
0x1da	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_15
0x1de	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_15
0x1e2	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_15
0x1e6	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_15
0x1ea	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_15
0x1ee	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_15
0x1f2	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_15
0x1f5	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_15
0x1f8	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_15
0x1fa	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_15
0x1fe	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_15
0x202	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_15
0x206	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_15
0x20a	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_15
0x20d	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_15
0x210	              0x90	                                     nop	       231	strbuf.h	FUNCTION_15
0x211	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_15
0x212	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_15
strbuf_addstr	functions,0:DO,0:CALL,2:IF,0:WHILE,0:FOR,0:SWITCH,0:ELSE,0	17
0x213	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_16
0x214	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_16
0x217	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_16
0x21b	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_16
0x21f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_16
0x223	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_16	CALL_2
0x227	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_16	CALL_2
0x22a	      0xe800000000	                          call 0x400026f	       279	strbuf.h	FUNCTION_16	CALL_2
0x22f	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_16	CALL_2
0x232	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_16	CALL_2
0x236	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_16	CALL_2
0x23a	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_16	CALL_2
0x23d	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_16	CALL_2
0x240	      0xe800000000	                          call 0x4000285	       279	strbuf.h	FUNCTION_16	CALL_2
0x245	              0x90	                                     nop	       280	strbuf.h	FUNCTION_16
0x246	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_16
0x247	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_16
strbuf_setlen	functions,0:DO,0:CALL,2:IF,2:WHILE,0:FOR,0:SWITCH,0:ELSE,1	43
0x10b	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_14
0x10c	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_14
0x10f	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_14
0x113	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_14
0x117	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_14
0x11b	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_14	IF_1
0x11f	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_14	IF_1
0x122	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_14	IF_1
0x125	            0x740d	                            je 0x4000174	       162	strbuf.h	FUNCTION_14	IF_1
0x127	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_14	IF_1
0x12b	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_14	IF_1
0x12e	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_14	IF_1
0x132	            0xeb05	                           jmp 0x4000179	       162	strbuf.h	FUNCTION_14	IF_1
0x134	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_14	IF_1
0x139	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_14	IF_1
0x13d	            0x730f	                           jae 0x400018e	       162	strbuf.h	FUNCTION_14	IF_1
0x13f	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_14	CALL_1
0x144	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_14	CALL_1
0x149	      0xe800000000	                          call 0x400018e	       163	strbuf.h	FUNCTION_14	CALL_1
0x14e	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_14
0x152	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_14
0x156	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_14
0x15a	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_14	IF_2
0x15e	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_14	IF_2
0x162	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_14	IF_2
0x168	            0x7414	                            je 0x40001be	       165	strbuf.h	FUNCTION_14	IF_2
0x16a	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_14	IF_2
0x16e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_14	IF_2
0x172	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_14	IF_2
0x176	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_14	IF_2
0x179	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_14	IF_2
0x17c	            0xeb24	                           jmp 0x40001e2	       169	strbuf.h	FUNCTION_14
0x17e	     0xfb605000000	           movzx eax, byte [0x040001c5] 	       168	strbuf.h	FUNCTION_14	CALL_2
0x185	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_14	CALL_2
0x187	            0x7419	                            je 0x40001e2	       168	strbuf.h	FUNCTION_14	CALL_2
0x189	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_14	CALL_2
0x18e	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_14	CALL_2
0x193	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_14	CALL_2
0x198	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_14	CALL_2
0x19d	      0xe800000000	                          call 0x40001e2	       168	strbuf.h	FUNCTION_14	CALL_2
0x1a2	              0x90	                                     nop	       169	strbuf.h	FUNCTION_14
0x1a3	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_14
0x1a4	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_14
prefix_filename	functions,0:DO,0:CALL,6:IF,2:WHILE,0:FOR,0:SWITCH,0:ELSE,2	49
0xafa	              0x55	                                push rbp	       254	abspath.c	FUNCTION_11
0xafb	          0x4889e5	                            mov rbp, rsp	       254	abspath.c	FUNCTION_11
0xafe	        0x4883ec40	                           sub rsp, 0x40	       254	abspath.c	FUNCTION_11
0xb02	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       254	abspath.c	FUNCTION_11
0xb06	        0x488975c0	             mov qword [rbp - 0x40], rsi	       254	abspath.c	FUNCTION_11
0xb0a	    0x64488b042528	                mov rax, qword fs:[0x28]	       254	abspath.c	FUNCTION_11
0xb13	        0x488945f8	                mov qword [rbp - 8], rax	       254	abspath.c	FUNCTION_11
0xb17	            0x31c0	                            xor eax, eax	       254	abspath.c	FUNCTION_11
0xb19	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       255	abspath.c	FUNCTION_11
0xb21	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       255	abspath.c	FUNCTION_11
0xb29	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       255	abspath.c	FUNCTION_11
0xb31	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       256	abspath.c	FUNCTION_11	CALL_1
0xb36	            0x740e	                            je 0x4000b86	       256	abspath.c	FUNCTION_11	CALL_1
0xb38	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       256	abspath.c	FUNCTION_11	CALL_1
0xb3c	          0x4889c7	                            mov rdi, rax	       256	abspath.c	FUNCTION_11	CALL_1
0xb3f	      0xe800000000	                          call 0x4000b84	       256	abspath.c	FUNCTION_11	CALL_1
0xb44	            0xeb05	                           jmp 0x4000b8b	       256	abspath.c	FUNCTION_11	CALL_1
0xb46	      0xb800000000	                              mov eax, 0	       256	abspath.c	FUNCTION_11	CALL_1
0xb4b	        0x488945d8	             mov qword [rbp - 0x28], rax	       256	abspath.c	FUNCTION_11	CALL_1
0xb4f	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       258	abspath.c	FUNCTION_11	IF_1
0xb54	            0x7431	                            je 0x4000bc7	       258	abspath.c	FUNCTION_11	IF_1
0xb56	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       260	abspath.c	FUNCTION_11	ELSE_1	IF_2	CALL_2
0xb5a	          0x4889c7	                            mov rdi, rax	       260	abspath.c	FUNCTION_11	ELSE_1	IF_2	CALL_2
0xb5d	      0xe8e6f6ffff	               call sym.is_absolute_path	       260	abspath.c	FUNCTION_11	ELSE_1	IF_2	CALL_2
0xb62	            0x85c0	                           test eax, eax	       260	abspath.c	FUNCTION_11	ELSE_1	IF_2	CALL_2
0xb64	            0x740a	                            je 0x4000bb0	       260	abspath.c	FUNCTION_11	ELSE_1	IF_2	CALL_2
0xb66	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       261	abspath.c	FUNCTION_11	ELSE_1	IF_2
0xb6e	            0xeb17	                           jmp 0x4000bc7	       261	abspath.c	FUNCTION_11	ELSE_1	IF_2
0xb70	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       263	abspath.c	FUNCTION_11	CALL_3
0xb74	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       263	abspath.c	FUNCTION_11	CALL_3
0xb78	        0x488d45e0	                   lea rax, [rbp - 0x20]	       263	abspath.c	FUNCTION_11	CALL_3
0xb7c	          0x4889ce	                            mov rsi, rcx	       263	abspath.c	FUNCTION_11	CALL_3
0xb7f	          0x4889c7	                            mov rdi, rax	       263	abspath.c	FUNCTION_11	CALL_3
0xb82	      0xe800000000	                          call 0x4000bc7	       263	abspath.c	FUNCTION_11	CALL_3
0xb87	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       265	abspath.c	FUNCTION_11	CALL_4
0xb8b	        0x488d45e0	                   lea rax, [rbp - 0x20]	       265	abspath.c	FUNCTION_11	CALL_4
0xb8f	          0x4889d6	                            mov rsi, rdx	       265	abspath.c	FUNCTION_11	CALL_4
0xb92	          0x4889c7	                            mov rdi, rax	       265	abspath.c	FUNCTION_11	CALL_4
0xb95	      0xe879f6ffff	                  call sym.strbuf_addstr	       265	abspath.c	FUNCTION_11	CALL_4
0xb9a	        0x488d45e0	                   lea rax, [rbp - 0x20]	       269	abspath.c	FUNCTION_11	CALL_6
0xb9e	      0xbe00000000	                              mov esi, 0	       269	abspath.c	FUNCTION_11	CALL_6
0xba3	          0x4889c7	                            mov rdi, rax	       269	abspath.c	FUNCTION_11	CALL_6
0xba6	      0xe800000000	                          call 0x4000beb	       269	abspath.c	FUNCTION_11	CALL_6
0xbab	        0x488b4df8	                mov rcx, qword [rbp - 8]	       270	abspath.c	FUNCTION_11
0xbaf	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       270	abspath.c	FUNCTION_11
0xbb8	            0x7405	                            je 0x4000bff	       270	abspath.c	FUNCTION_11
0xbba	      0xe800000000	                          call 0x4000bff	       270	abspath.c	FUNCTION_11
0xbbf	              0xc9	                                   leave	       270	abspath.c	FUNCTION_11
0xbc0	              0xc3	                                     ret	       270	abspath.c	FUNCTION_11
strbuf_swap	functions,0:DO,0:CALL,1:IF,0:WHILE,0:FOR,0:SWITCH,0:ELSE,0	39
0x41	              0x55	                                push rbp	       126	strbuf.h	FUNCTION_12
0x42	          0x4889e5	                            mov rbp, rsp	       126	strbuf.h	FUNCTION_12
0x45	        0x4883ec40	                           sub rsp, 0x40	       126	strbuf.h	FUNCTION_12
0x49	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       126	strbuf.h	FUNCTION_12
0x4d	        0x488975c0	             mov qword [rbp - 0x40], rsi	       126	strbuf.h	FUNCTION_12
0x51	    0x64488b042528	                mov rax, qword fs:[0x28]	       126	strbuf.h	FUNCTION_12
0x5a	        0x488945f8	                mov qword [rbp - 8], rax	       126	strbuf.h	FUNCTION_12
0x5e	            0x31c0	                            xor eax, eax	       126	strbuf.h	FUNCTION_12
0x60	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       127	strbuf.h	FUNCTION_12	CALL_1
0x64	        0x488945d0	             mov qword [rbp - 0x30], rax	       127	strbuf.h	FUNCTION_12	CALL_1
0x68	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       127	strbuf.h	FUNCTION_12	CALL_1
0x6c	        0x488945d8	             mov qword [rbp - 0x28], rax	       127	strbuf.h	FUNCTION_12	CALL_1
0x70	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       127	strbuf.h	FUNCTION_12	CALL_1
0x74	          0x488b10	                    mov rdx, qword [rax]	       127	strbuf.h	FUNCTION_12	CALL_1
0x77	        0x488955e0	             mov qword [rbp - 0x20], rdx	       127	strbuf.h	FUNCTION_12	CALL_1
0x7b	        0x488b5008	                mov rdx, qword [rax + 8]	       127	strbuf.h	FUNCTION_12	CALL_1
0x7f	        0x488955e8	             mov qword [rbp - 0x18], rdx	       127	strbuf.h	FUNCTION_12	CALL_1
0x83	        0x488b4010	            mov rax, qword [rax + 0x10] 	       127	strbuf.h	FUNCTION_12	CALL_1
0x87	        0x488945f0	             mov qword [rbp - 0x10], rax	       127	strbuf.h	FUNCTION_12	CALL_1
0x8b	        0x488b4dd8	             mov rcx, qword [rbp - 0x28]	       127	strbuf.h	FUNCTION_12	CALL_1
0x8f	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       127	strbuf.h	FUNCTION_12	CALL_1
0x93	      0xba18000000	                           mov edx, 0x18	       127	strbuf.h	FUNCTION_12	CALL_1
0x98	          0x4889ce	                            mov rsi, rcx	       127	strbuf.h	FUNCTION_12	CALL_1
0x9b	          0x4889c7	                            mov rdi, rax	       127	strbuf.h	FUNCTION_12	CALL_1
0x9e	      0xe800000000	                          call 0x40000e3	       127	strbuf.h	FUNCTION_12	CALL_1
0xa3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       127	strbuf.h	FUNCTION_12	CALL_1
0xa7	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       127	strbuf.h	FUNCTION_12	CALL_1
0xab	          0x488910	                    mov qword [rax], rdx	       127	strbuf.h	FUNCTION_12	CALL_1
0xae	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       127	strbuf.h	FUNCTION_12	CALL_1
0xb2	        0x48895008	                mov qword [rax + 8], rdx	       127	strbuf.h	FUNCTION_12	CALL_1
0xb6	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       127	strbuf.h	FUNCTION_12	CALL_1
0xba	        0x48895010	             mov qword [rax + 0x10], rdx	       127	strbuf.h	FUNCTION_12	CALL_1
0xbe	              0x90	                                     nop	       128	strbuf.h	FUNCTION_12
0xbf	        0x488b45f8	                mov rax, qword [rbp - 8]	       128	strbuf.h	FUNCTION_12
0xc3	    0x644833042528	                xor rax, qword fs:[0x28]	       128	strbuf.h	FUNCTION_12
0xcc	            0x7405	                            je 0x4000113	       128	strbuf.h	FUNCTION_12
0xce	      0xe800000000	                          call 0x4000113	       128	strbuf.h	FUNCTION_12
0xd3	              0xc9	                                   leave	       128	strbuf.h	FUNCTION_12
0xd4	              0xc3	                                     ret	       128	strbuf.h	FUNCTION_12
absolute_pathdup	functions,0:DO,0:CALL,2:IF,0:WHILE,0:FOR,0:SWITCH,0:ELSE,0	25
0xa8d	              0x55	                                push rbp	       247	abspath.c	FUNCTION_10
0xa8e	          0x4889e5	                            mov rbp, rsp	       247	abspath.c	FUNCTION_10
0xa91	        0x4883ec30	                           sub rsp, 0x30	       247	abspath.c	FUNCTION_10
0xa95	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       247	abspath.c	FUNCTION_10
0xa99	    0x64488b042528	                mov rax, qword fs:[0x28]	       247	abspath.c	FUNCTION_10
0xaa2	        0x488945f8	                mov qword [rbp - 8], rax	       247	abspath.c	FUNCTION_10
0xaa6	            0x31c0	                            xor eax, eax	       247	abspath.c	FUNCTION_10
0xaa8	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       248	abspath.c	FUNCTION_10
0xab0	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       248	abspath.c	FUNCTION_10
0xab8	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       248	abspath.c	FUNCTION_10
0xac0	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       249	abspath.c	FUNCTION_10	CALL_1
0xac4	        0x488d45e0	                   lea rax, [rbp - 0x20]	       249	abspath.c	FUNCTION_10	CALL_1
0xac8	          0x4889d6	                            mov rsi, rdx	       249	abspath.c	FUNCTION_10	CALL_1
0xacb	          0x4889c7	                            mov rdi, rax	       249	abspath.c	FUNCTION_10	CALL_1
0xace	      0xe800000000	                          call 0x4000b13	       249	abspath.c	FUNCTION_10	CALL_1
0xad3	        0x488d45e0	                   lea rax, [rbp - 0x20]	       250	abspath.c	FUNCTION_10	CALL_2
0xad7	      0xbe00000000	                              mov esi, 0	       250	abspath.c	FUNCTION_10	CALL_2
0xadc	          0x4889c7	                            mov rdi, rax	       250	abspath.c	FUNCTION_10	CALL_2
0xadf	      0xe800000000	                          call 0x4000b24	       250	abspath.c	FUNCTION_10	CALL_2
0xae4	        0x488b4df8	                mov rcx, qword [rbp - 8]	       251	abspath.c	FUNCTION_10
0xae8	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       251	abspath.c	FUNCTION_10
0xaf1	            0x7405	                            je 0x4000b38	       251	abspath.c	FUNCTION_10
0xaf3	      0xe800000000	                          call 0x4000b38	       251	abspath.c	FUNCTION_10
0xaf8	              0xc9	                                   leave	       251	abspath.c	FUNCTION_10
0xaf9	              0xc3	                                     ret	       251	abspath.c	FUNCTION_10
absolute_path	functions,0:DO,0:CALL,2:IF,0:WHILE,0:FOR,0:SWITCH,0:ELSE,0	14
0xa58	              0x55	                                push rbp	       239	abspath.c	FUNCTION_9
0xa59	          0x4889e5	                            mov rbp, rsp	       239	abspath.c	FUNCTION_9
0xa5c	        0x4883ec10	                           sub rsp, 0x10	       239	abspath.c	FUNCTION_9
0xa60	        0x48897df8	                mov qword [rbp - 8], rdi	       239	abspath.c	FUNCTION_9
0xa64	      0xbe00000000	                              mov esi, 0	       241	abspath.c	FUNCTION_9	CALL_1
0xa69	      0xbf00000000	                              mov edi, 0	       241	abspath.c	FUNCTION_9	CALL_1
0xa6e	      0xe898f6ffff	                  call sym.strbuf_setlen	       241	abspath.c	FUNCTION_9	CALL_1
0xa73	        0x488b45f8	                mov rax, qword [rbp - 8]	       242	abspath.c	FUNCTION_9	CALL_2
0xa77	          0x4889c6	                            mov rsi, rax	       242	abspath.c	FUNCTION_9	CALL_2
0xa7a	      0xbf00000000	                              mov edi, 0	       242	abspath.c	FUNCTION_9	CALL_2
0xa7f	      0xe800000000	                          call 0x4000ac4	       242	abspath.c	FUNCTION_9	CALL_2
0xa84	    0x488b05000000	            mov rax, qword [0x04000acb] 	       243	abspath.c	FUNCTION_9
0xa8b	              0xc9	                                   leave	       244	abspath.c	FUNCTION_9
0xa8c	              0xc3	                                     ret	       244	abspath.c	FUNCTION_9
strbuf_avail	functions,0:DO,0:CALL,0:IF,0:WHILE,0:FOR,0:SWITCH,0:ELSE,0	18
0xd5	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_13
0xd6	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_13
0xd9	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_13
0xdd	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_13
0xe1	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_13
0xe4	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_13
0xe7	            0x741b	                            je 0x4000144	       141	strbuf.h	FUNCTION_13
0xe9	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_13
0xed	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_13
0xf0	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_13
0xf4	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_13
0xf8	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_13
0xfb	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_13
0xfe	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_13
0x102	            0xeb05	                           jmp 0x4000149	       141	strbuf.h	FUNCTION_13
0x104	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_13
0x109	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_13
0x10a	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_13
git_has_dos_drive_prefix	functions,0:DO,0:CALL,0:IF,0:WHILE,0:FOR,0:SWITCH,0:ELSE,0	6
0x0	              0x55	                                push rbp	       347	git-compat-util.h	FUNCTION_23
0x1	          0x4889e5	                            mov rbp, rsp	       347	git-compat-util.h	FUNCTION_23
0x4	        0x48897df8	                mov qword [rbp - 8], rdi	       347	git-compat-util.h	FUNCTION_23
0x8	      0xb800000000	                              mov eax, 0	       348	git-compat-util.h	FUNCTION_23
0xd	              0x5d	                                 pop rbp	       349	git-compat-util.h	FUNCTION_23
0xe	              0xc3	                                     ret	       349	git-compat-util.h	FUNCTION_23
is_directory	functions,0:DO,0:CALL,2:IF,0:WHILE,0:FOR,0:SWITCH,0:ELSE,0	27
0x287	              0x55	                                push rbp	         9	abspath.c	FUNCTION_1
0x288	          0x4889e5	                            mov rbp, rsp	         9	abspath.c	FUNCTION_1
0x28b	    0x4881ecb00000	                           sub rsp, 0xb0	         9	abspath.c	FUNCTION_1
0x292	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	         9	abspath.c	FUNCTION_1
0x299	    0x64488b042528	                mov rax, qword fs:[0x28]	         9	abspath.c	FUNCTION_1
0x2a2	        0x488945f8	                mov qword [rbp - 8], rax	         9	abspath.c	FUNCTION_1
0x2a6	            0x31c0	                            xor eax, eax	         9	abspath.c	FUNCTION_1
0x2a8	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	        11	abspath.c	FUNCTION_1	CALL_2
0x2af	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	        11	abspath.c	FUNCTION_1	CALL_2
0x2b6	          0x4889d6	                            mov rsi, rdx	        11	abspath.c	FUNCTION_1	CALL_2
0x2b9	          0x4889c7	                            mov rdi, rax	        11	abspath.c	FUNCTION_1	CALL_2
0x2bc	      0xe800000000	                          call 0x4000301	        11	abspath.c	FUNCTION_1	CALL_2
0x2c1	            0x85c0	                           test eax, eax	        11	abspath.c	FUNCTION_1	CALL_2
0x2c3	            0x7519	                           jne 0x400031e	        11	abspath.c	FUNCTION_1	CALL_2
0x2c5	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	        11	abspath.c	FUNCTION_1	CALL_2
0x2cb	      0x2500f00000	                         and eax, 0xf000	        11	abspath.c	FUNCTION_1	CALL_2
0x2d0	      0x3d00400000	                         cmp eax, 0x4000	        11	abspath.c	FUNCTION_1	CALL_2
0x2d5	            0x7507	                           jne 0x400031e	        11	abspath.c	FUNCTION_1	CALL_2
0x2d7	      0xb801000000	                              mov eax, 1	        11	abspath.c	FUNCTION_1	CALL_2
0x2dc	            0xeb05	                           jmp 0x4000323	        11	abspath.c	FUNCTION_1	CALL_2
0x2de	      0xb800000000	                              mov eax, 0	        11	abspath.c	FUNCTION_1	CALL_2
0x2e3	        0x488b4df8	                mov rcx, qword [rbp - 8]	        12	abspath.c	FUNCTION_1
0x2e7	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        12	abspath.c	FUNCTION_1
0x2f0	            0x7405	                            je 0x4000337	        12	abspath.c	FUNCTION_1
0x2f2	      0xe800000000	                          call 0x4000337	        12	abspath.c	FUNCTION_1
0x2f7	              0xc9	                                   leave	        12	abspath.c	FUNCTION_1
0x2f8	              0xc3	                                     ret	        12	abspath.c	FUNCTION_1
strbuf_realpath	functions,0:DO,0:CALL,29:IF,20:WHILE,1:FOR,0:SWITCH,0:ELSE,9	241
0x4e7	              0x55	                                push rbp	        83	abspath.c	FUNCTION_5
0x4e8	          0x4889e5	                            mov rbp, rsp	        83	abspath.c	FUNCTION_5
0x4eb	    0x4881ec400100	                          sub rsp, 0x140	        83	abspath.c	FUNCTION_5
0x4f2	    0x4889bdd8feff	            mov qword [rbp - 0x128], rdi	        83	abspath.c	FUNCTION_5
0x4f9	    0x4889b5d0feff	            mov qword [rbp - 0x130], rsi	        83	abspath.c	FUNCTION_5
0x500	    0x8995ccfeffff	            mov dword [rbp - 0x134], edx	        83	abspath.c	FUNCTION_5
0x506	    0x64488b042528	                mov rax, qword fs:[0x28]	        83	abspath.c	FUNCTION_5
0x50f	        0x488945f8	                mov qword [rbp - 8], rax	        83	abspath.c	FUNCTION_5
0x513	            0x31c0	                            xor eax, eax	        83	abspath.c	FUNCTION_5
0x515	    0x48c78500ffff	              mov qword [rbp - 0x100], 0	        84	abspath.c	FUNCTION_5
0x520	    0x48c78508ffff	               mov qword [rbp - 0xf8], 0	        84	abspath.c	FUNCTION_5
0x52b	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	        84	abspath.c	FUNCTION_5
0x536	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	        85	abspath.c	FUNCTION_5
0x541	    0x48c78528ffff	               mov qword [rbp - 0xd8], 0	        85	abspath.c	FUNCTION_5
0x54c	    0x48c78530ffff	               mov qword [rbp - 0xd0], 0	        85	abspath.c	FUNCTION_5
0x557	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	        86	abspath.c	FUNCTION_5
0x562	    0x48c78548ffff	               mov qword [rbp - 0xb8], 0	        86	abspath.c	FUNCTION_5
0x56d	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	        86	abspath.c	FUNCTION_5
0x578	    0x48c785f0feff	              mov qword [rbp - 0x110], 0	        87	abspath.c	FUNCTION_5
0x583	    0xc785ecfeffff	              mov dword [rbp - 0x114], 0	        88	abspath.c	FUNCTION_5
0x58d	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	        91	abspath.c	FUNCTION_5	IF_1
0x594	           0xfb600	                   movzx eax, byte [rax]	        91	abspath.c	FUNCTION_5	IF_1
0x597	            0x84c0	                             test al, al	        91	abspath.c	FUNCTION_5	IF_1
0x599	            0x751c	                           jne 0x40005f7	        91	abspath.c	FUNCTION_5	IF_1
0x59b	    0x83bdccfeffff	              cmp dword [rbp - 0x134], 0	        92	abspath.c	FUNCTION_5	IF_1	IF_2
0x5a2	     0xf845f030000	                            je 0x4000947	        92	abspath.c	FUNCTION_5	IF_1	IF_2
0x5a8	      0xbf00000000	                              mov edi, 0	        93	abspath.c	FUNCTION_5	IF_1	CALL_1
0x5ad	      0xb800000000	                              mov eax, 0	        93	abspath.c	FUNCTION_5	IF_1	CALL_1
0x5b2	      0xe800000000	                          call 0x40005f7	        93	abspath.c	FUNCTION_5	IF_1	CALL_1
0x5b7	    0x488b95d0feff	            mov rdx, qword [rbp - 0x130]	        98	abspath.c	FUNCTION_5	CALL_2
0x5be	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	        98	abspath.c	FUNCTION_5	CALL_2
0x5c5	          0x4889d6	                            mov rsi, rdx	        98	abspath.c	FUNCTION_5	CALL_2
0x5c8	          0x4889c7	                            mov rdi, rax	        98	abspath.c	FUNCTION_5	CALL_2
0x5cb	      0xe843fcffff	                  call sym.strbuf_addstr	        98	abspath.c	FUNCTION_5	CALL_2
0x5d0	    0x488d9500ffff	                  lea rdx, [rbp - 0x100]	        99	abspath.c	FUNCTION_5	CALL_3
0x5d7	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	        99	abspath.c	FUNCTION_5	CALL_3
0x5de	          0x4889d6	                            mov rsi, rdx	        99	abspath.c	FUNCTION_5	CALL_3
0x5e1	          0x4889c7	                            mov rdi, rax	        99	abspath.c	FUNCTION_5	CALL_3
0x5e4	      0xe893feffff	                  call sym.get_root_part	        99	abspath.c	FUNCTION_5	CALL_3
0x5e9	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       101	abspath.c	FUNCTION_5	IF_3
0x5f0	        0x488b4008	                mov rax, qword [rax + 8]	       101	abspath.c	FUNCTION_5	IF_3
0x5f4	          0x4885c0	                           test rax, rax	       101	abspath.c	FUNCTION_5	IF_3
0x5f7	     0xf85e6020000	                           jne 0x4000923	       101	abspath.c	FUNCTION_5	IF_3
0x5fd	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       103	abspath.c	FUNCTION_5	IF_3	IF_4	CALL_4
0x604	          0x4889c7	                            mov rdi, rax	       103	abspath.c	FUNCTION_5	IF_3	IF_4	CALL_4
0x607	      0xe800000000	                          call 0x400064c	       103	abspath.c	FUNCTION_5	IF_3	IF_4	CALL_4
0x60c	            0x85c0	                           test eax, eax	       103	abspath.c	FUNCTION_5	IF_3	IF_4	CALL_4
0x60e	     0xf84cf020000	                            je 0x4000923	       103	abspath.c	FUNCTION_5	IF_3	IF_4	CALL_4
0x614	    0x83bdccfeffff	              cmp dword [rbp - 0x134], 0	       104	abspath.c	FUNCTION_5	IF_3	IF_4	IF_5
0x61b	     0xf84e9020000	                            je 0x400094a	       104	abspath.c	FUNCTION_5	IF_3	IF_4	IF_5
0x621	      0xbf00000000	                              mov edi, 0	       105	abspath.c	FUNCTION_5	IF_3	IF_4	CALL_5
0x626	      0xb800000000	                              mov eax, 0	       105	abspath.c	FUNCTION_5	IF_3	IF_4	CALL_5
0x62b	      0xe800000000	                          call 0x4000670	       105	abspath.c	FUNCTION_5	IF_3	IF_4	CALL_5
0x630	    0x488d9500ffff	                  lea rdx, [rbp - 0x100]	       113	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_6
0x637	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	       113	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_6
0x63e	          0x4889d6	                            mov rsi, rdx	       113	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_6
0x641	          0x4889c7	                            mov rdi, rax	       113	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_6
0x644	      0xe85efdffff	             call sym.get_next_component	       113	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_6
0x649	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       115	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_6
0x650	          0x4885c0	                           test rax, rax	       115	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_6
0x653	            0x7505	                           jne 0x400069a	       115	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_6
0x655	      0xe989020000	                           jmp 0x4000923	       116	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_6
0x65a	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       117	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_3	IF_7	CALL_7
0x661	        0x4883f801	                              cmp rax, 1	       117	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_3	IF_7	CALL_7
0x665	            0x751d	                           jne 0x40006c4	       117	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_3	IF_7	CALL_7
0x667	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       117	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_3	IF_7	CALL_7
0x66e	      0xbe00000000	                              mov esi, 0	       117	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_3	IF_7	CALL_7
0x673	          0x4889c7	                            mov rdi, rax	       117	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_3	IF_7	CALL_7
0x676	      0xe800000000	                          call 0x40006bb	       117	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_3	IF_7	CALL_7
0x67b	            0x85c0	                           test eax, eax	       117	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_3	IF_7	CALL_7
0x67d	            0x7505	                           jne 0x40006c4	       117	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_3	IF_7	CALL_7
0x67f	      0xe95f020000	                           jmp 0x4000923	       118	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_3	IF_7
0x684	    0x488b8528ffff	             mov rax, qword [rbp - 0xd8]	       119	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_8
0x68b	        0x4883f802	                              cmp rax, 2	       119	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_8
0x68f	            0x752c	                           jne 0x40006fd	       119	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_8
0x691	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	       119	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_8
0x698	      0xbe00000000	                              mov esi, 0	       119	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_8
0x69d	          0x4889c7	                            mov rdi, rax	       119	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_8
0x6a0	      0xe800000000	                          call 0x40006e5	       119	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_8
0x6a5	            0x85c0	                           test eax, eax	       119	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_8
0x6a7	            0x7514	                           jne 0x40006fd	       119	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_8
0x6a9	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       121	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_9
0x6b0	          0x4889c7	                            mov rdi, rax	       121	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_9
0x6b3	      0xe841fcffff	           call sym.strip_last_component	       121	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	IF_8	CALL_9
0x6b8	      0xe926020000	                           jmp 0x4000923	       122	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_4	IF_8
0x6bd	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       126	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_9	CALL_10
0x6c4	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       126	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_9	CALL_10
0x6c8	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       126	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_9	CALL_10
0x6cf	        0x488b4008	                mov rax, qword [rax + 8]	       126	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_9	CALL_10
0x6d3	        0x4883e801	                              sub rax, 1	       126	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_9	CALL_10
0x6d7	          0x4801d0	                            add rax, rdx	       126	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_9	CALL_10
0x6da	           0xfb600	                   movzx eax, byte [rax]	       126	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_9	CALL_10
0x6dd	           0xfbec0	                           movsx eax, al	       126	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_9	CALL_10
0x6e0	            0x89c7	                            mov edi, eax	       126	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_9	CALL_10
0x6e2	      0xe828f9ffff	                 call sym.git_is_dir_sep	       126	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_9	CALL_10
0x6e7	            0x85c0	                           test eax, eax	       126	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_9	CALL_10
0x6e9	            0x7514	                           jne 0x400073f	       126	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_9	CALL_10
0x6eb	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       127	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_11
0x6f2	      0xbe2f000000	                           mov esi, 0x2f	       127	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_11
0x6f7	          0x4889c7	                            mov rdi, rax	       127	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_11
0x6fa	      0xe8a6faffff	                   call sym.strbuf_addch	       127	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_11
0x6ff	    0x488d9520ffff	                   lea rdx, [rbp - 0xe0]	       128	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_12
0x706	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       128	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_12
0x70d	          0x4889d6	                            mov rsi, rdx	       128	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_12
0x710	          0x4889c7	                            mov rdi, rax	       128	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_12
0x713	      0xe800000000	                          call 0x4000758	       128	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	CALL_12
0x718	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       130	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	CALL_13
0x71f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       130	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	CALL_13
0x723	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       130	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	CALL_13
0x72a	          0x4889d6	                            mov rsi, rdx	       130	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	CALL_13
0x72d	          0x4889c7	                            mov rdi, rax	       130	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	CALL_13
0x730	      0xe800000000	                          call 0x4000775	       130	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	CALL_13
0x735	            0x85c0	                           test eax, eax	       130	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	CALL_13
0x737	            0x7446	                            je 0x40007bf	       130	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	CALL_13
0x739	      0xe800000000	                          call 0x400077e	       132	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	IF_11
0x73e	            0x8b00	                    mov eax, dword [rax]	       132	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	IF_11
0x740	          0x83f802	                              cmp eax, 2	       132	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	IF_11
0x743	            0x7510	                           jne 0x4000795	       132	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	IF_11
0x745	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       132	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	IF_11
0x74c	          0x4885c0	                           test rax, rax	       132	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	IF_11
0x74f	     0xf848e010000	                            je 0x4000923	       132	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	IF_11
0x755	    0x83bdccfeffff	              cmp dword [rbp - 0x134], 0	       133	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	IF_11	IF_12
0x75c	     0xf84ab010000	                            je 0x400094d	       133	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	IF_11	IF_12
0x762	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       134	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	IF_11	IF_12	CALL_14
0x769	        0x488b4010	            mov rax, qword [rax + 0x10] 	       134	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	IF_11	IF_12	CALL_14
0x76d	          0x4889c6	                            mov rsi, rax	       134	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	IF_11	IF_12	CALL_14
0x770	      0xbf00000000	                              mov edi, 0	       134	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	IF_11	IF_12	CALL_14
0x775	      0xb800000000	                              mov eax, 0	       134	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	IF_11	IF_12	CALL_14
0x77a	      0xe800000000	                          call 0x40007bf	       134	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	IF_11	IF_12	CALL_14
0x77f	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	       139	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_15
0x785	      0x2500f00000	                         and eax, 0xf000	       139	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_15
0x78a	      0x3d00a00000	                         cmp eax, 0xa000	       139	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_15
0x78f	     0xf854e010000	                           jne 0x4000923	       139	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_15
0x795	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	       141	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_16
0x79c	      0xbe00000000	                              mov esi, 0	       141	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_16
0x7a1	          0x4889c7	                            mov rdi, rax	       141	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_16
0x7a4	      0xe862f9ffff	                  call sym.strbuf_setlen	       141	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_16
0x7a9	    0x8b85ecfeffff	            mov eax, dword [rbp - 0x114]	       143	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_14
0x7af	          0x8d5001	                      lea edx, [rax + 1]	       143	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_14
0x7b2	    0x8995ecfeffff	            mov dword [rbp - 0x114], edx	       143	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_14
0x7b8	          0x83f820	                           cmp eax, 0x20	       143	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_14
0x7bb	            0x7e36	                           jle 0x4000833	       143	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_14
0x7bd	      0xe800000000	                          call 0x4000802	       144	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_14
0x7c2	    0xc70028000000	                   mov dword [rax], 0x28	       144	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_14
0x7c8	    0x83bdccfeffff	              cmp dword [rbp - 0x134], 0	       146	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_14	IF_15
0x7cf	     0xf843b010000	                            je 0x4000950	       146	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_14	IF_15
0x7d5	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       147	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_14	IF_15	CALL_17
0x7dc	          0x4889c2	                            mov rdx, rax	       147	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_14	IF_15	CALL_17
0x7df	      0xbe20000000	                           mov esi, 0x20	       147	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_14	IF_15	CALL_17
0x7e4	      0xbf00000000	                              mov edi, 0	       147	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_14	IF_15	CALL_17
0x7e9	      0xb800000000	                              mov eax, 0	       147	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_14	IF_15	CALL_17
0x7ee	      0xe800000000	                          call 0x4000833	       147	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_14	IF_15	CALL_17
0x7f3	        0x488b4590	             mov rax, qword [rbp - 0x70]	       154	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13
0x7f7	          0x4889c2	                            mov rdx, rax	       153	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_18
0x7fa	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       153	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_18
0x801	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       153	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_18
0x805	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	       153	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_18
0x80c	          0x4889ce	                            mov rsi, rcx	       153	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_18
0x80f	          0x4889c7	                            mov rdi, rax	       153	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_18
0x812	      0xe800000000	                          call 0x4000857	       153	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_18
0x817	            0x4898	                                    cdqe	       153	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_18
0x819	    0x488985f8feff	            mov qword [rbp - 0x108], rax	       153	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_18
0x820	    0x4883bdf8feff	              cmp qword [rbp - 0x108], 0	       155	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_16
0x828	            0x792a	                           jns 0x4000894	       155	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_16
0x82a	    0x83bdccfeffff	              cmp dword [rbp - 0x134], 0	       156	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_16	IF_17
0x831	     0xf84dc000000	                            je 0x4000953	       156	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_16	IF_17
0x837	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       157	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_16	IF_17	CALL_19
0x83e	        0x488b4010	            mov rax, qword [rax + 0x10] 	       157	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_16	IF_17	CALL_19
0x842	          0x4889c6	                            mov rsi, rax	       157	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_16	IF_17	CALL_19
0x845	      0xbf00000000	                              mov edi, 0	       157	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_16	IF_17	CALL_19
0x84a	      0xb800000000	                              mov eax, 0	       157	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_16	IF_17	CALL_19
0x84f	      0xe800000000	                          call 0x4000894	       157	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_16	IF_17	CALL_19
0x854	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       163	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	ELSE_8	IF_18	CALL_20
0x85b	          0x4889c7	                            mov rdi, rax	       163	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	ELSE_8	IF_18	CALL_20
0x85e	      0xe8e5f9ffff	               call sym.is_absolute_path	       163	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	ELSE_8	IF_18	CALL_20
0x863	            0x85c0	                           test eax, eax	       163	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	ELSE_8	IF_18	CALL_20
0x865	            0x741b	                            je 0x40008c2	       163	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	ELSE_8	IF_18	CALL_20
0x867	    0x488d9540ffff	                   lea rdx, [rbp - 0xc0]	       165	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	ELSE_8	IF_18	CALL_21
0x86e	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       165	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	ELSE_8	IF_18	CALL_21
0x875	          0x4889d6	                            mov rsi, rdx	       165	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	ELSE_8	IF_18	CALL_21
0x878	          0x4889c7	                            mov rdi, rax	       165	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	ELSE_8	IF_18	CALL_21
0x87b	      0xe8fcfbffff	                  call sym.get_root_part	       165	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	ELSE_8	IF_18	CALL_21
0x880	            0xeb0f	                           jmp 0x40008d1	       165	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	ELSE_8	IF_18	CALL_21
0x882	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       172	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	ELSE_9	CALL_22
0x889	          0x4889c7	                            mov rdi, rax	       172	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	ELSE_9	CALL_22
0x88c	      0xe868faffff	           call sym.strip_last_component	       172	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	ELSE_9	CALL_22
0x891	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       179	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_19
0x898	          0x4885c0	                           test rax, rax	       179	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_19
0x89b	            0x742d	                            je 0x400090a	       179	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_19
0x89d	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	       180	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_19	CALL_23
0x8a4	      0xbe2f000000	                           mov esi, 0x2f	       180	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_19	CALL_23
0x8a9	          0x4889c7	                            mov rdi, rax	       180	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_19	CALL_23
0x8ac	      0xe8f4f8ffff	                   call sym.strbuf_addch	       180	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_19	CALL_23
0x8b1	    0x488d9500ffff	                  lea rdx, [rbp - 0x100]	       181	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_19	CALL_24
0x8b8	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	       181	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_19	CALL_24
0x8bf	          0x4889d6	                            mov rsi, rdx	       181	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_19	CALL_24
0x8c2	          0x4889c7	                            mov rdi, rax	       181	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_19	CALL_24
0x8c5	      0xe800000000	                          call 0x400090a	       181	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_19	CALL_24
0x8ca	    0x488d9500ffff	                  lea rdx, [rbp - 0x100]	       188	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_25
0x8d1	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	       188	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_25
0x8d8	          0x4889d6	                            mov rsi, rdx	       188	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_25
0x8db	          0x4889c7	                            mov rdi, rax	       188	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_25
0x8de	      0xe85ef7ffff	                    call sym.strbuf_swap	       188	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	CALL_25
0x8e3	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       112	abspath.c	FUNCTION_5	ELSE_2	WHILE_1
0x8ea	          0x4885c0	                           test rax, rax	       112	abspath.c	FUNCTION_5	ELSE_2	WHILE_1
0x8ed	     0xf853dfdffff	                           jne 0x4000670	       112	abspath.c	FUNCTION_5	ELSE_2	WHILE_1
0x8f3	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       192	abspath.c	FUNCTION_5
0x8fa	        0x488b4010	            mov rax, qword [rax + 0x10] 	       192	abspath.c	FUNCTION_5
0x8fe	    0x488985f0feff	            mov qword [rbp - 0x110], rax	       192	abspath.c	FUNCTION_5
0x905	            0xeb0d	                           jmp 0x4000954	       192	abspath.c	FUNCTION_5
0x907	              0x90	                                     nop	        95	abspath.c	FUNCTION_5	IF_1	ELSE_1
0x908	            0xeb0a	                           jmp 0x4000954	        95	abspath.c	FUNCTION_5	IF_1	ELSE_1
0x90a	              0x90	                                     nop	       107	abspath.c	FUNCTION_5	IF_3	IF_4	ELSE_2
0x90b	            0xeb07	                           jmp 0x4000954	       107	abspath.c	FUNCTION_5	IF_3	IF_4	ELSE_2
0x90d	              0x90	                                     nop	       137	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	IF_11	ELSE_5
0x90e	            0xeb04	                           jmp 0x4000954	       137	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	IF_10	IF_11	ELSE_5
0x910	              0x90	                                     nop	       150	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_14	ELSE_7
0x911	            0xeb01	                           jmp 0x4000954	       150	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_14	ELSE_7
0x913	              0x90	                                     nop	       160	abspath.c	FUNCTION_5	ELSE_2	WHILE_1	ELSE_5	ELSE_6	IF_13	IF_16	ELSE_8
0x914	    0x488d8500ffff	                  lea rax, [rbp - 0x100]	       195	abspath.c	FUNCTION_5	CALL_26
0x91b	          0x4889c7	                            mov rdi, rax	       195	abspath.c	FUNCTION_5	CALL_26
0x91e	      0xe800000000	                          call 0x4000963	       195	abspath.c	FUNCTION_5	CALL_26
0x923	    0x488d8520ffff	                   lea rax, [rbp - 0xe0]	       196	abspath.c	FUNCTION_5	CALL_27
0x92a	          0x4889c7	                            mov rdi, rax	       196	abspath.c	FUNCTION_5	CALL_27
0x92d	      0xe800000000	                          call 0x4000972	       196	abspath.c	FUNCTION_5	CALL_27
0x932	    0x488d8540ffff	                   lea rax, [rbp - 0xc0]	       197	abspath.c	FUNCTION_5	CALL_28
0x939	          0x4889c7	                            mov rdi, rax	       197	abspath.c	FUNCTION_5	CALL_28
0x93c	      0xe800000000	                          call 0x4000981	       197	abspath.c	FUNCTION_5	CALL_28
0x941	    0x4883bdf0feff	              cmp qword [rbp - 0x110], 0	       199	abspath.c	FUNCTION_5	IF_20
0x949	            0x7514	                           jne 0x400099f	       199	abspath.c	FUNCTION_5	IF_20
0x94b	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       200	abspath.c	FUNCTION_5	CALL_29
0x952	      0xbe00000000	                              mov esi, 0	       200	abspath.c	FUNCTION_5	CALL_29
0x957	          0x4889c7	                            mov rdi, rax	       200	abspath.c	FUNCTION_5	CALL_29
0x95a	      0xe8acf7ffff	                  call sym.strbuf_setlen	       200	abspath.c	FUNCTION_5	CALL_29
0x95f	    0x488b85f0feff	            mov rax, qword [rbp - 0x110]	       202	abspath.c	FUNCTION_5
0x966	        0x488b4df8	                mov rcx, qword [rbp - 8]	       203	abspath.c	FUNCTION_5
0x96a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       203	abspath.c	FUNCTION_5
0x973	            0x7405	                            je 0x40009ba	       203	abspath.c	FUNCTION_5
0x975	      0xe800000000	                          call 0x40009ba	       203	abspath.c	FUNCTION_5
0x97a	              0xc9	                                   leave	       203	abspath.c	FUNCTION_5
0x97b	              0xc3	                                     ret	       203	abspath.c	FUNCTION_5
get_root_part	functions,0:DO,0:CALL,5:IF,0:WHILE,0:FOR,0:SWITCH,0:ELSE,0	31
0x47c	              0x55	                                push rbp	        53	abspath.c	FUNCTION_4
0x47d	          0x4889e5	                            mov rbp, rsp	        53	abspath.c	FUNCTION_4
0x480	        0x4883ec20	                           sub rsp, 0x20	        53	abspath.c	FUNCTION_4
0x484	        0x48897de8	             mov qword [rbp - 0x18], rdi	        53	abspath.c	FUNCTION_4
0x488	        0x488975e0	             mov qword [rbp - 0x20], rsi	        53	abspath.c	FUNCTION_4
0x48c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        54	abspath.c	FUNCTION_4	CALL_1
0x490	        0x488b4010	            mov rax, qword [rax + 0x10] 	        54	abspath.c	FUNCTION_4	CALL_1
0x494	          0x4889c7	                            mov rdi, rax	        54	abspath.c	FUNCTION_4	CALL_1
0x497	      0xe886fbffff	       call sym.git_offset_1st_component	        54	abspath.c	FUNCTION_4	CALL_1
0x49c	          0x8945fc	                mov dword [rbp - 4], eax	        54	abspath.c	FUNCTION_4	CALL_1
0x49f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        56	abspath.c	FUNCTION_4	CALL_2
0x4a3	      0xbe00000000	                              mov esi, 0	        56	abspath.c	FUNCTION_4	CALL_2
0x4a8	          0x4889c7	                            mov rdi, rax	        56	abspath.c	FUNCTION_4	CALL_2
0x4ab	      0xe85bfcffff	                  call sym.strbuf_setlen	        56	abspath.c	FUNCTION_4	CALL_2
0x4b0	          0x8b45fc	                mov eax, dword [rbp - 4]	        57	abspath.c	FUNCTION_4	CALL_3
0x4b3	          0x4863d0	                         movsxd rdx, eax	        57	abspath.c	FUNCTION_4	CALL_3
0x4b6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        57	abspath.c	FUNCTION_4	CALL_3
0x4ba	        0x488b4810	            mov rcx, qword [rax + 0x10] 	        57	abspath.c	FUNCTION_4	CALL_3
0x4be	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        57	abspath.c	FUNCTION_4	CALL_3
0x4c2	          0x4889ce	                            mov rsi, rcx	        57	abspath.c	FUNCTION_4	CALL_3
0x4c5	          0x4889c7	                            mov rdi, rax	        57	abspath.c	FUNCTION_4	CALL_3
0x4c8	      0xe800000000	                          call 0x400050d	        57	abspath.c	FUNCTION_4	CALL_3
0x4cd	          0x8b45fc	                mov eax, dword [rbp - 4]	        61	abspath.c	FUNCTION_4	CALL_5
0x4d0	          0x4863d0	                         movsxd rdx, eax	        61	abspath.c	FUNCTION_4	CALL_5
0x4d3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        61	abspath.c	FUNCTION_4	CALL_5
0x4d7	      0xbe00000000	                              mov esi, 0	        61	abspath.c	FUNCTION_4	CALL_5
0x4dc	          0x4889c7	                            mov rdi, rax	        61	abspath.c	FUNCTION_4	CALL_5
0x4df	      0xe800000000	                          call 0x4000524	        61	abspath.c	FUNCTION_4	CALL_5
0x4e4	              0x90	                                     nop	        62	abspath.c	FUNCTION_4
0x4e5	              0xc9	                                   leave	        62	abspath.c	FUNCTION_4
0x4e6	              0xc3	                                     ret	        62	abspath.c	FUNCTION_4
real_pathdup	functions,0:DO,0:CALL,3:IF,1:WHILE,0:FOR,0:SWITCH,0:ELSE,0	35
0x9c4	              0x55	                                push rbp	       222	abspath.c	FUNCTION_8
0x9c5	          0x4889e5	                            mov rbp, rsp	       222	abspath.c	FUNCTION_8
0x9c8	        0x4883ec40	                           sub rsp, 0x40	       222	abspath.c	FUNCTION_8
0x9cc	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       222	abspath.c	FUNCTION_8
0x9d0	          0x8975c4	             mov dword [rbp - 0x3c], esi	       222	abspath.c	FUNCTION_8
0x9d3	    0x64488b042528	                mov rax, qword fs:[0x28]	       222	abspath.c	FUNCTION_8
0x9dc	        0x488945f8	                mov qword [rbp - 8], rax	       222	abspath.c	FUNCTION_8
0x9e0	            0x31c0	                            xor eax, eax	       222	abspath.c	FUNCTION_8
0x9e2	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       223	abspath.c	FUNCTION_8
0x9ea	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       223	abspath.c	FUNCTION_8
0x9f2	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       223	abspath.c	FUNCTION_8
0x9fa	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       224	abspath.c	FUNCTION_8
0xa02	          0x8b55c4	             mov edx, dword [rbp - 0x3c]	       226	abspath.c	FUNCTION_8	IF_1	CALL_1
0xa05	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       226	abspath.c	FUNCTION_8	IF_1	CALL_1
0xa09	        0x488d45e0	                   lea rax, [rbp - 0x20]	       226	abspath.c	FUNCTION_8	IF_1	CALL_1
0xa0d	          0x4889ce	                            mov rsi, rcx	       226	abspath.c	FUNCTION_8	IF_1	CALL_1
0xa10	          0x4889c7	                            mov rdi, rax	       226	abspath.c	FUNCTION_8	IF_1	CALL_1
0xa13	      0xe800000000	                          call 0x4000a58	       226	abspath.c	FUNCTION_8	IF_1	CALL_1
0xa18	          0x4885c0	                           test rax, rax	       226	abspath.c	FUNCTION_8	IF_1	CALL_1
0xa1b	            0x7415	                            je 0x4000a72	       226	abspath.c	FUNCTION_8	IF_1	CALL_1
0xa1d	        0x488d45e0	                   lea rax, [rbp - 0x20]	       227	abspath.c	FUNCTION_8	CALL_2
0xa21	      0xbe00000000	                              mov esi, 0	       227	abspath.c	FUNCTION_8	CALL_2
0xa26	          0x4889c7	                            mov rdi, rax	       227	abspath.c	FUNCTION_8	CALL_2
0xa29	      0xe800000000	                          call 0x4000a6e	       227	abspath.c	FUNCTION_8	CALL_2
0xa2e	        0x488945d8	             mov qword [rbp - 0x28], rax	       227	abspath.c	FUNCTION_8	CALL_2
0xa32	        0x488d45e0	                   lea rax, [rbp - 0x20]	       229	abspath.c	FUNCTION_8	CALL_3
0xa36	          0x4889c7	                            mov rdi, rax	       229	abspath.c	FUNCTION_8	CALL_3
0xa39	      0xe800000000	                          call 0x4000a7e	       229	abspath.c	FUNCTION_8	CALL_3
0xa3e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       231	abspath.c	FUNCTION_8
0xa42	        0x488b4df8	                mov rcx, qword [rbp - 8]	       232	abspath.c	FUNCTION_8
0xa46	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       232	abspath.c	FUNCTION_8
0xa4f	            0x7405	                            je 0x4000a96	       232	abspath.c	FUNCTION_8
0xa51	      0xe800000000	                          call 0x4000a96	       232	abspath.c	FUNCTION_8
0xa56	              0xc9	                                   leave	       232	abspath.c	FUNCTION_8
0xa57	              0xc3	                                     ret	       232	abspath.c	FUNCTION_8
real_path	functions,0:DO,0:CALL,1:IF,0:WHILE,0:FOR,0:SWITCH,0:ELSE,0	11
0x97c	              0x55	                                push rbp	       210	abspath.c	FUNCTION_6
0x97d	          0x4889e5	                            mov rbp, rsp	       210	abspath.c	FUNCTION_6
0x980	        0x4883ec10	                           sub rsp, 0x10	       210	abspath.c	FUNCTION_6
0x984	        0x48897df8	                mov qword [rbp - 8], rdi	       210	abspath.c	FUNCTION_6
0x988	        0x488b45f8	                mov rax, qword [rbp - 8]	       212	abspath.c	FUNCTION_6	CALL_1
0x98c	      0xba01000000	                              mov edx, 1	       212	abspath.c	FUNCTION_6	CALL_1
0x991	          0x4889c6	                            mov rsi, rax	       212	abspath.c	FUNCTION_6	CALL_1
0x994	      0xbf00000000	                              mov edi, 0	       212	abspath.c	FUNCTION_6	CALL_1
0x999	      0xe800000000	                          call 0x40009de	       212	abspath.c	FUNCTION_6	CALL_1
0x99e	              0xc9	                                   leave	       213	abspath.c	FUNCTION_6
0x99f	              0xc3	                                     ret	       213	abspath.c	FUNCTION_6
