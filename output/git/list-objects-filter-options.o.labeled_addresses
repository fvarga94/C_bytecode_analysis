_	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,1:DO,0:CALL,2:WHILE,0	15
0x8b	              0x55	                                push rbp	        51	gettext.h	FUNCTION_3
0x8c	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_3
0x8f	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_3
0x93	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_3
0x97	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_3	IF_1
0x9b	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_3	IF_1
0x9e	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_3	IF_1
0xa0	            0x7507	                           jne 0x40000e9	        52	gettext.h	FUNCTION_3	IF_1
0xa2	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_3	IF_1
0xa7	            0xeb0c	                           jmp 0x40000f5	        53	gettext.h	FUNCTION_3	IF_1
0xa9	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_3	CALL_2
0xad	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_3	CALL_2
0xb0	      0xe800000000	                          call 0x40000f5	        54	gettext.h	FUNCTION_3	CALL_2
0xb5	              0xc9	                                   leave	        55	gettext.h	FUNCTION_3
0xb6	              0xc3	                                     ret	        55	gettext.h	FUNCTION_3
list_objects_filter_set_no_filter	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,0:DO,0:CALL,1:WHILE,0	14
0x13b	              0x55	                                push rbp	        68	list-objects-filter-options.h	FUNCTION_5
0x13c	          0x4889e5	                            mov rbp, rsp	        68	list-objects-filter-options.h	FUNCTION_5
0x13f	        0x4883ec10	                           sub rsp, 0x10	        68	list-objects-filter-options.h	FUNCTION_5
0x143	        0x48897df8	                mov qword [rbp - 8], rdi	        68	list-objects-filter-options.h	FUNCTION_5
0x147	        0x488b45f8	                mov rax, qword [rbp - 8]	        69	list-objects-filter-options.h	FUNCTION_5	CALL_1
0x14b	          0x4889c7	                            mov rdi, rax	        69	list-objects-filter-options.h	FUNCTION_5	CALL_1
0x14e	      0xe800000000	                          call 0x4000193	        69	list-objects-filter-options.h	FUNCTION_5	CALL_1
0x153	        0x488b45f8	                mov rax, qword [rbp - 8]	        70	list-objects-filter-options.h	FUNCTION_5
0x157	         0xfb6500c	            movzx edx, byte [rax + 0xc] 	        70	list-objects-filter-options.h	FUNCTION_5
0x15b	          0x83ca01	                               or edx, 1	        70	list-objects-filter-options.h	FUNCTION_5
0x15e	          0x88500c	                mov byte [rax + 0xc], dl	        70	list-objects-filter-options.h	FUNCTION_5
0x161	              0x90	                                     nop	        71	list-objects-filter-options.h	FUNCTION_5
0x162	              0xc9	                                   leave	        71	list-objects-filter-options.h	FUNCTION_5
0x163	              0xc3	                                     ret	        71	list-objects-filter-options.h	FUNCTION_5
partial_clone_register	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,1:DO,0:CALL,8:WHILE,0	47
0x4a7	              0x55	                                push rbp	       116	list-objects-filter-options.c	FUNCTION_10
0x4a8	          0x4889e5	                            mov rbp, rsp	       116	list-objects-filter-options.c	FUNCTION_10
0x4ab	        0x4883ec10	                           sub rsp, 0x10	       116	list-objects-filter-options.c	FUNCTION_10
0x4af	        0x48897df8	                mov qword [rbp - 8], rdi	       116	list-objects-filter-options.c	FUNCTION_10
0x4b3	        0x488975f0	             mov qword [rbp - 0x10], rsi	       116	list-objects-filter-options.c	FUNCTION_10
0x4b7	    0x488b05000000	            mov rax, qword [0x040004fe] 	       123	list-objects-filter-options.c	FUNCTION_10	IF_1
0x4be	          0x4885c0	                           test rax, rax	       123	list-objects-filter-options.c	FUNCTION_10	IF_1
0x4c1	            0x743f	                            je 0x4000542	       123	list-objects-filter-options.c	FUNCTION_10	IF_1
0x4c3	    0x488b05000000	            mov rax, qword [0x0400050a] 	       123	list-objects-filter-options.c	FUNCTION_10	IF_1
0x4ca	           0xfb600	                   movzx eax, byte [rax]	       123	list-objects-filter-options.c	FUNCTION_10	IF_1
0x4cd	            0x84c0	                             test al, al	       123	list-objects-filter-options.c	FUNCTION_10	IF_1
0x4cf	            0x7431	                            je 0x4000542	       123	list-objects-filter-options.c	FUNCTION_10	IF_1
0x4d1	    0x488b15000000	            mov rdx, qword [0x04000518] 	       125	list-objects-filter-options.c	FUNCTION_10	IF_1	CALL_1
0x4d8	        0x488b45f8	                mov rax, qword [rbp - 8]	       125	list-objects-filter-options.c	FUNCTION_10	IF_1	CALL_1
0x4dc	          0x4889d6	                            mov rsi, rdx	       125	list-objects-filter-options.c	FUNCTION_10	IF_1	CALL_1
0x4df	          0x4889c7	                            mov rdi, rax	       125	list-objects-filter-options.c	FUNCTION_10	IF_1	CALL_1
0x4e2	      0xe800000000	                          call 0x4000527	       125	list-objects-filter-options.c	FUNCTION_10	IF_1	CALL_1
0x4e7	            0x85c0	                           test eax, eax	       124	list-objects-filter-options.c	FUNCTION_10	IF_1
0x4e9	            0x7417	                            je 0x4000542	       124	list-objects-filter-options.c	FUNCTION_10	IF_1
0x4eb	      0xbf00000000	                              mov edi, 0	       126	list-objects-filter-options.c	FUNCTION_10	CALL_3
0x4f0	      0xe896fbffff	                               call sym.	       126	list-objects-filter-options.c	FUNCTION_10	CALL_3
0x4f5	          0x4889c7	                            mov rdi, rax	       126	list-objects-filter-options.c	FUNCTION_10	CALL_3
0x4f8	      0xb800000000	                              mov eax, 0	       126	list-objects-filter-options.c	FUNCTION_10	CALL_3
0x4fd	      0xe800000000	                          call 0x4000542	       126	list-objects-filter-options.c	FUNCTION_10	CALL_3
0x502	      0xbe00000000	                              mov esi, 0	       128	list-objects-filter-options.c	FUNCTION_10	CALL_4
0x507	      0xbf00000000	                              mov edi, 0	       128	list-objects-filter-options.c	FUNCTION_10	CALL_4
0x50c	      0xe800000000	                          call 0x4000551	       128	list-objects-filter-options.c	FUNCTION_10	CALL_4
0x511	        0x488b45f8	                mov rax, qword [rbp - 8]	       129	list-objects-filter-options.c	FUNCTION_10	CALL_5
0x515	          0x4889c6	                            mov rsi, rax	       129	list-objects-filter-options.c	FUNCTION_10	CALL_5
0x518	      0xbf00000000	                              mov edi, 0	       129	list-objects-filter-options.c	FUNCTION_10	CALL_5
0x51d	      0xe800000000	                          call 0x4000562	       129	list-objects-filter-options.c	FUNCTION_10	CALL_5
0x522	        0x488b45f8	                mov rax, qword [rbp - 8]	       131	list-objects-filter-options.c	FUNCTION_10	CALL_6
0x526	          0x4889c7	                            mov rdi, rax	       131	list-objects-filter-options.c	FUNCTION_10	CALL_6
0x529	      0xe800000000	                          call 0x400056e	       131	list-objects-filter-options.c	FUNCTION_10	CALL_6
0x52e	    0x488905000000	            mov qword [0x04000575], rax 	       131	list-objects-filter-options.c	FUNCTION_10	CALL_6
0x535	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       138	list-objects-filter-options.c	FUNCTION_10	CALL_7
0x539	          0x488b00	                    mov rax, qword [rax]	       138	list-objects-filter-options.c	FUNCTION_10	CALL_7
0x53c	          0x4889c7	                            mov rdi, rax	       138	list-objects-filter-options.c	FUNCTION_10	CALL_7
0x53f	      0xe800000000	                          call 0x4000584	       138	list-objects-filter-options.c	FUNCTION_10	CALL_7
0x544	    0x488905000000	            mov qword [0x0400058b], rax 	       137	list-objects-filter-options.c	FUNCTION_10
0x54b	    0x488b05000000	            mov rax, qword [0x04000592] 	       139	list-objects-filter-options.c	FUNCTION_10	CALL_8
0x552	          0x4889c6	                            mov rsi, rax	       139	list-objects-filter-options.c	FUNCTION_10	CALL_8
0x555	      0xbf00000000	                              mov edi, 0	       139	list-objects-filter-options.c	FUNCTION_10	CALL_8
0x55a	      0xe800000000	                          call 0x400059f	       139	list-objects-filter-options.c	FUNCTION_10	CALL_8
0x55f	              0x90	                                     nop	       141	list-objects-filter-options.c	FUNCTION_10
0x560	              0xc9	                                   leave	       141	list-objects-filter-options.c	FUNCTION_10
0x561	              0xc3	                                     ret	       141	list-objects-filter-options.c	FUNCTION_10
partial_clone_get_default_filter_spec	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,0:DO,0:CALL,1:WHILE,0	13
0x562	              0x55	                                push rbp	       145	list-objects-filter-options.c	FUNCTION_11
0x563	          0x4889e5	                            mov rbp, rsp	       145	list-objects-filter-options.c	FUNCTION_11
0x566	        0x4883ec10	                           sub rsp, 0x10	       145	list-objects-filter-options.c	FUNCTION_11
0x56a	        0x48897df8	                mov qword [rbp - 8], rdi	       145	list-objects-filter-options.c	FUNCTION_11
0x56e	    0x488b0d000000	            mov rcx, qword [0x040005b5] 	       149	list-objects-filter-options.c	FUNCTION_11	CALL_1
0x575	        0x488b45f8	                mov rax, qword [rbp - 8]	       149	list-objects-filter-options.c	FUNCTION_11	CALL_1
0x579	      0xba00000000	                              mov edx, 0	       149	list-objects-filter-options.c	FUNCTION_11	CALL_1
0x57e	          0x4889ce	                            mov rsi, rcx	       149	list-objects-filter-options.c	FUNCTION_11	CALL_1
0x581	          0x4889c7	                            mov rdi, rax	       149	list-objects-filter-options.c	FUNCTION_11	CALL_1
0x584	      0xe8dbfbffff	call sym.gently_parse_list_objects_filter	       149	list-objects-filter-options.c	FUNCTION_11	CALL_1
0x589	              0x90	                                     nop	       152	list-objects-filter-options.c	FUNCTION_11
0x58a	              0xc9	                                   leave	       152	list-objects-filter-options.c	FUNCTION_11
0x58b	              0xc3	                                     ret	       152	list-objects-filter-options.c	FUNCTION_11
opt_parse_list_objects_filter	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,1:DO,0:CALL,2:WHILE,0	25
0x3ff	              0x55	                                push rbp	        93	list-objects-filter-options.c	FUNCTION_8
0x400	          0x4889e5	                            mov rbp, rsp	        93	list-objects-filter-options.c	FUNCTION_8
0x403	        0x4883ec30	                           sub rsp, 0x30	        93	list-objects-filter-options.c	FUNCTION_8
0x407	        0x48897de8	             mov qword [rbp - 0x18], rdi	        93	list-objects-filter-options.c	FUNCTION_8
0x40b	        0x488975e0	             mov qword [rbp - 0x20], rsi	        93	list-objects-filter-options.c	FUNCTION_8
0x40f	          0x8955dc	             mov dword [rbp - 0x24], edx	        93	list-objects-filter-options.c	FUNCTION_8
0x412	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        94	list-objects-filter-options.c	FUNCTION_8
0x416	        0x488b4010	            mov rax, qword [rax + 0x10] 	        94	list-objects-filter-options.c	FUNCTION_8
0x41a	        0x488945f8	                mov qword [rbp - 8], rax	        94	list-objects-filter-options.c	FUNCTION_8
0x41e	        0x837ddc00	               cmp dword [rbp - 0x24], 0	        96	list-objects-filter-options.c	FUNCTION_8	IF_1
0x422	            0x7507	                           jne 0x400046b	        96	list-objects-filter-options.c	FUNCTION_8	IF_1
0x424	      0x48837de000	               cmp qword [rbp - 0x20], 0	        96	list-objects-filter-options.c	FUNCTION_8	IF_1
0x429	            0x7513	                           jne 0x400047e	        96	list-objects-filter-options.c	FUNCTION_8	IF_1
0x42b	        0x488b45f8	                mov rax, qword [rbp - 8]	        97	list-objects-filter-options.c	FUNCTION_8	IF_1	CALL_1
0x42f	          0x4889c7	                            mov rdi, rax	        97	list-objects-filter-options.c	FUNCTION_8	IF_1	CALL_1
0x432	      0xe804fdffff	call sym.list_objects_filter_set_no_filter	        97	list-objects-filter-options.c	FUNCTION_8	IF_1	CALL_1
0x437	      0xb800000000	                              mov eax, 0	        98	list-objects-filter-options.c	FUNCTION_8	IF_1
0x43c	            0xeb13	                           jmp 0x4000491	        98	list-objects-filter-options.c	FUNCTION_8	IF_1
0x43e	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       101	list-objects-filter-options.c	FUNCTION_8	CALL_2
0x442	        0x488b45f8	                mov rax, qword [rbp - 8]	       101	list-objects-filter-options.c	FUNCTION_8	CALL_2
0x446	          0x4889d6	                            mov rsi, rdx	       101	list-objects-filter-options.c	FUNCTION_8	CALL_2
0x449	          0x4889c7	                            mov rdi, rax	       101	list-objects-filter-options.c	FUNCTION_8	CALL_2
0x44c	      0xe800000000	                          call 0x4000491	       101	list-objects-filter-options.c	FUNCTION_8	CALL_2
0x451	              0xc9	                                   leave	       102	list-objects-filter-options.c	FUNCTION_8
0x452	              0xc3	                                     ret	       102	list-objects-filter-options.c	FUNCTION_8
skip_prefix	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,1:DO,1:CALL,0:WHILE,0	27
0x0	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_18
0x1	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_18
0x4	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_18
0x8	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_18
0xc	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_18
0x10	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_18	DO_1	IF_1
0x14	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_18	DO_1	IF_1
0x17	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_18	DO_1	IF_1
0x19	            0x7512	                           jne 0x400006d	       484	git-compat-util.h	FUNCTION_18	DO_1	IF_1
0x1b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_18	DO_1	IF_1
0x1f	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_18	DO_1	IF_1
0x23	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_18	DO_1	IF_1
0x26	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_18	DO_1	IF_1
0x2b	            0xeb27	                           jmp 0x4000094	       486	git-compat-util.h	FUNCTION_18	DO_1	IF_1
0x2d	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_18	DO_1
0x31	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_18	DO_1
0x35	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_18	DO_1
0x39	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_18	DO_1
0x3c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_18	DO_1
0x40	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_18	DO_1
0x44	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_18	DO_1
0x48	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_18	DO_1
0x4b	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_18	DO_1
0x4d	            0x74c1	                            je 0x4000050	       488	git-compat-util.h	FUNCTION_18	DO_1
0x4f	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_18
0x54	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_18
0x55	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_18
list_objects_filter_release	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,0:DO,0:CALL,4:WHILE,0	24
0x453	              0x55	                                push rbp	       106	list-objects-filter-options.c	FUNCTION_9
0x454	          0x4889e5	                            mov rbp, rsp	       106	list-objects-filter-options.c	FUNCTION_9
0x457	        0x4883ec10	                           sub rsp, 0x10	       106	list-objects-filter-options.c	FUNCTION_9
0x45b	        0x48897df8	                mov qword [rbp - 8], rdi	       106	list-objects-filter-options.c	FUNCTION_9
0x45f	        0x488b45f8	                mov rax, qword [rbp - 8]	       107	list-objects-filter-options.c	FUNCTION_9	CALL_1
0x463	          0x488b00	                    mov rax, qword [rax]	       107	list-objects-filter-options.c	FUNCTION_9	CALL_1
0x466	          0x4889c7	                            mov rdi, rax	       107	list-objects-filter-options.c	FUNCTION_9	CALL_1
0x469	      0xe800000000	                          call 0x40004ae	       107	list-objects-filter-options.c	FUNCTION_9	CALL_1
0x46e	        0x488b45f8	                mov rax, qword [rbp - 8]	       108	list-objects-filter-options.c	FUNCTION_9	CALL_2
0x472	        0x488b4010	            mov rax, qword [rax + 0x10] 	       108	list-objects-filter-options.c	FUNCTION_9	CALL_2
0x476	          0x4889c7	                            mov rdi, rax	       108	list-objects-filter-options.c	FUNCTION_9	CALL_2
0x479	      0xe800000000	                          call 0x40004be	       108	list-objects-filter-options.c	FUNCTION_9	CALL_2
0x47e	        0x488b45f8	                mov rax, qword [rbp - 8]	       109	list-objects-filter-options.c	FUNCTION_9	CALL_3
0x482	        0x488b4018	            mov rax, qword [rax + 0x18] 	       109	list-objects-filter-options.c	FUNCTION_9	CALL_3
0x486	          0x4889c7	                            mov rdi, rax	       109	list-objects-filter-options.c	FUNCTION_9	CALL_3
0x489	      0xe800000000	                          call 0x40004ce	       109	list-objects-filter-options.c	FUNCTION_9	CALL_3
0x48e	        0x488b45f8	                mov rax, qword [rbp - 8]	       110	list-objects-filter-options.c	FUNCTION_9	CALL_4
0x492	      0xba28000000	                           mov edx, 0x28	       110	list-objects-filter-options.c	FUNCTION_9	CALL_4
0x497	      0xbe00000000	                              mov esi, 0	       110	list-objects-filter-options.c	FUNCTION_9	CALL_4
0x49c	          0x4889c7	                            mov rdi, rax	       110	list-objects-filter-options.c	FUNCTION_9	CALL_4
0x49f	      0xe800000000	                          call 0x40004e4	       110	list-objects-filter-options.c	FUNCTION_9	CALL_4
0x4a4	              0x90	                                     nop	       111	list-objects-filter-options.c	FUNCTION_9
0x4a5	              0xc9	                                   leave	       111	list-objects-filter-options.c	FUNCTION_9
0x4a6	              0xc3	                                     ret	       111	list-objects-filter-options.c	FUNCTION_9
gently_parse_list_objects_filter	SWITCH,0:functions,0:ELSE,3:FOR,0:IF,9:DO,0:CALL,15:WHILE,0	129
0x164	              0x55	                                push rbp	        28	list-objects-filter-options.c	FUNCTION_6
0x165	          0x4889e5	                            mov rbp, rsp	        28	list-objects-filter-options.c	FUNCTION_6
0x168	    0x4881ec900000	                           sub rsp, 0x90	        28	list-objects-filter-options.c	FUNCTION_6
0x16f	        0x48897d88	             mov qword [rbp - 0x78], rdi	        28	list-objects-filter-options.c	FUNCTION_6
0x173	        0x48897580	             mov qword [rbp - 0x80], rsi	        28	list-objects-filter-options.c	FUNCTION_6
0x177	    0x48899578ffff	             mov qword [rbp - 0x88], rdx	        28	list-objects-filter-options.c	FUNCTION_6
0x17e	    0x64488b042528	                mov rax, qword fs:[0x28]	        28	list-objects-filter-options.c	FUNCTION_6
0x187	        0x488945f8	                mov qword [rbp - 8], rax	        28	list-objects-filter-options.c	FUNCTION_6
0x18b	            0x31c0	                            xor eax, eax	        28	list-objects-filter-options.c	FUNCTION_6
0x18d	        0x488b4588	             mov rax, qword [rbp - 0x78]	        31	list-objects-filter-options.c	FUNCTION_6	IF_1
0x191	          0x8b4008	                mov eax, dword [rax + 8]	        31	list-objects-filter-options.c	FUNCTION_6	IF_1
0x194	            0x85c0	                           test eax, eax	        31	list-objects-filter-options.c	FUNCTION_6	IF_1
0x196	            0x7447	                            je 0x400021f	        31	list-objects-filter-options.c	FUNCTION_6	IF_1
0x198	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	        32	list-objects-filter-options.c	FUNCTION_6	IF_1	IF_2
0x1a0	            0x7433	                            je 0x4000215	        32	list-objects-filter-options.c	FUNCTION_6	IF_1	IF_2
0x1a2	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	        33	list-objects-filter-options.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x1a9	      0xbe00000000	                              mov esi, 0	        33	list-objects-filter-options.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x1ae	          0x4889c7	                            mov rdi, rax	        33	list-objects-filter-options.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x1b1	      0xe800000000	                          call 0x40001f6	        33	list-objects-filter-options.c	FUNCTION_6	IF_1	IF_2	CALL_1
0x1b6	      0xbf00000000	                              mov edi, 0	        34	list-objects-filter-options.c	FUNCTION_6	IF_1	IF_2	CALL_2
0x1bb	      0xe8cbfeffff	                               call sym.	        34	list-objects-filter-options.c	FUNCTION_6	IF_1	IF_2	CALL_2
0x1c0	          0x4889c2	                            mov rdx, rax	        34	list-objects-filter-options.c	FUNCTION_6	IF_1	IF_2	CALL_2
0x1c3	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	        34	list-objects-filter-options.c	FUNCTION_6	IF_1	IF_2	CALL_2
0x1ca	          0x4889d6	                            mov rsi, rdx	        34	list-objects-filter-options.c	FUNCTION_6	IF_1	IF_2	CALL_2
0x1cd	          0x4889c7	                            mov rdi, rax	        34	list-objects-filter-options.c	FUNCTION_6	IF_1	IF_2	CALL_2
0x1d0	      0xe881feffff	                  call sym.strbuf_addstr	        34	list-objects-filter-options.c	FUNCTION_6	IF_1	IF_2	CALL_2
0x1d5	      0xb801000000	                              mov eax, 1	        38	list-objects-filter-options.c	FUNCTION_6	IF_1
0x1da	      0xe987010000	                           jmp 0x40003a6	        38	list-objects-filter-options.c	FUNCTION_6	IF_1
0x1df	        0x488b4580	             mov rax, qword [rbp - 0x80]	        41	list-objects-filter-options.c	FUNCTION_6	CALL_4
0x1e3	          0x4889c7	                            mov rdi, rax	        41	list-objects-filter-options.c	FUNCTION_6	CALL_4
0x1e6	      0xe800000000	                          call 0x400022b	        41	list-objects-filter-options.c	FUNCTION_6	CALL_4
0x1eb	          0x4889c2	                            mov rdx, rax	        41	list-objects-filter-options.c	FUNCTION_6	CALL_4
0x1ee	        0x488b4588	             mov rax, qword [rbp - 0x78]	        41	list-objects-filter-options.c	FUNCTION_6	CALL_4
0x1f2	          0x488910	                    mov qword [rax], rdx	        41	list-objects-filter-options.c	FUNCTION_6	CALL_4
0x1f5	        0x488b4580	             mov rax, qword [rbp - 0x80]	        43	list-objects-filter-options.c	FUNCTION_6	IF_3	CALL_5
0x1f9	      0xbe00000000	                              mov esi, 0	        43	list-objects-filter-options.c	FUNCTION_6	IF_3	CALL_5
0x1fe	          0x4889c7	                            mov rdi, rax	        43	list-objects-filter-options.c	FUNCTION_6	IF_3	CALL_5
0x201	      0xe800000000	                          call 0x4000246	        43	list-objects-filter-options.c	FUNCTION_6	IF_3	CALL_5
0x206	            0x85c0	                           test eax, eax	        43	list-objects-filter-options.c	FUNCTION_6	IF_3	CALL_5
0x208	            0x7515	                           jne 0x400025f	        43	list-objects-filter-options.c	FUNCTION_6	IF_3	CALL_5
0x20a	        0x488b4588	             mov rax, qword [rbp - 0x78]	        44	list-objects-filter-options.c	FUNCTION_6	IF_3
0x20e	    0xc74008010000	                  mov dword [rax + 8], 1	        44	list-objects-filter-options.c	FUNCTION_6	IF_3
0x215	      0xb800000000	                              mov eax, 0	        45	list-objects-filter-options.c	FUNCTION_6	IF_3
0x21a	      0xe947010000	                           jmp 0x40003a6	        45	list-objects-filter-options.c	FUNCTION_6	IF_3
0x21f	        0x488d5598	                   lea rdx, [rbp - 0x68]	        47	list-objects-filter-options.c	FUNCTION_6	ELSE_1	IF_4	CALL_6
0x223	        0x488b4580	             mov rax, qword [rbp - 0x80]	        47	list-objects-filter-options.c	FUNCTION_6	ELSE_1	IF_4	CALL_6
0x227	      0xbe00000000	                              mov esi, 0	        47	list-objects-filter-options.c	FUNCTION_6	ELSE_1	IF_4	CALL_6
0x22c	          0x4889c7	                            mov rdi, rax	        47	list-objects-filter-options.c	FUNCTION_6	ELSE_1	IF_4	CALL_6
0x22f	      0xe8ccfdffff	                    call sym.skip_prefix	        47	list-objects-filter-options.c	FUNCTION_6	ELSE_1	IF_4	CALL_6
0x234	            0x85c0	                           test eax, eax	        47	list-objects-filter-options.c	FUNCTION_6	ELSE_1	IF_4	CALL_6
0x236	            0x7434	                            je 0x40002ac	        47	list-objects-filter-options.c	FUNCTION_6	ELSE_1	IF_4	CALL_6
0x238	        0x488b4588	             mov rax, qword [rbp - 0x78]	        48	list-objects-filter-options.c	FUNCTION_6	ELSE_1	IF_4	IF_5	CALL_7
0x23c	        0x488d5020	                   lea rdx, [rax + 0x20]	        48	list-objects-filter-options.c	FUNCTION_6	ELSE_1	IF_4	IF_5	CALL_7
0x240	        0x488b4598	             mov rax, qword [rbp - 0x68]	        48	list-objects-filter-options.c	FUNCTION_6	ELSE_1	IF_4	IF_5	CALL_7
0x244	          0x4889d6	                            mov rsi, rdx	        48	list-objects-filter-options.c	FUNCTION_6	ELSE_1	IF_4	IF_5	CALL_7
0x247	          0x4889c7	                            mov rdi, rax	        48	list-objects-filter-options.c	FUNCTION_6	ELSE_1	IF_4	IF_5	CALL_7
0x24a	      0xe800000000	                          call 0x400028f	        48	list-objects-filter-options.c	FUNCTION_6	ELSE_1	IF_4	IF_5	CALL_7
0x24f	            0x85c0	                           test eax, eax	        48	list-objects-filter-options.c	FUNCTION_6	ELSE_1	IF_4	IF_5	CALL_7
0x251	     0xf84b9000000	                            je 0x4000350	        48	list-objects-filter-options.c	FUNCTION_6	ELSE_1	IF_4	IF_5	CALL_7
0x257	        0x488b4588	             mov rax, qword [rbp - 0x78]	        49	list-objects-filter-options.c	FUNCTION_6	ELSE_1	IF_4	IF_5
0x25b	    0xc74008020000	                  mov dword [rax + 8], 2	        49	list-objects-filter-options.c	FUNCTION_6	ELSE_1	IF_4	IF_5
0x262	      0xb800000000	                              mov eax, 0	        50	list-objects-filter-options.c	FUNCTION_6	ELSE_1	IF_4	IF_5
0x267	      0xe9fa000000	                           jmp 0x40003a6	        50	list-objects-filter-options.c	FUNCTION_6	ELSE_1	IF_4	IF_5
0x26c	        0x488d5598	                   lea rdx, [rbp - 0x68]	        53	list-objects-filter-options.c	FUNCTION_6	ELSE_2	IF_6	CALL_8
0x270	        0x488b4580	             mov rax, qword [rbp - 0x80]	        53	list-objects-filter-options.c	FUNCTION_6	ELSE_2	IF_6	CALL_8
0x274	      0xbe00000000	                              mov esi, 0	        53	list-objects-filter-options.c	FUNCTION_6	ELSE_2	IF_6	CALL_8
0x279	          0x4889c7	                            mov rdi, rax	        53	list-objects-filter-options.c	FUNCTION_6	ELSE_2	IF_6	CALL_8
0x27c	      0xe87ffdffff	                    call sym.skip_prefix	        53	list-objects-filter-options.c	FUNCTION_6	ELSE_2	IF_6	CALL_8
0x281	            0x85c0	                           test eax, eax	        53	list-objects-filter-options.c	FUNCTION_6	ELSE_2	IF_6	CALL_8
0x283	            0x7449	                            je 0x400030e	        53	list-objects-filter-options.c	FUNCTION_6	ELSE_2	IF_6	CALL_8
0x285	        0x488b4598	             mov rax, qword [rbp - 0x68]	        62	list-objects-filter-options.c	FUNCTION_6	ELSE_2	IF_6	IF_7	CALL_9
0x289	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	        62	list-objects-filter-options.c	FUNCTION_6	ELSE_2	IF_6	IF_7	CALL_9
0x28d	        0x488d55a0	                   lea rdx, [rbp - 0x60]	        62	list-objects-filter-options.c	FUNCTION_6	ELSE_2	IF_6	IF_7	CALL_9
0x291	      0xbe20000000	                           mov esi, 0x20	        62	list-objects-filter-options.c	FUNCTION_6	ELSE_2	IF_6	IF_7	CALL_9
0x296	          0x4889c7	                            mov rdi, rax	        62	list-objects-filter-options.c	FUNCTION_6	ELSE_2	IF_6	IF_7	CALL_9
0x299	      0xe800000000	                          call 0x40002de	        62	list-objects-filter-options.c	FUNCTION_6	ELSE_2	IF_6	IF_7	CALL_9
0x29e	            0x85c0	                           test eax, eax	        62	list-objects-filter-options.c	FUNCTION_6	ELSE_2	IF_6	IF_7	CALL_9
0x2a0	            0x7517	                           jne 0x40002f9	        62	list-objects-filter-options.c	FUNCTION_6	ELSE_2	IF_6	IF_7	CALL_9
0x2a2	        0x488d45a0	                   lea rax, [rbp - 0x60]	        64	list-objects-filter-options.c	FUNCTION_6	ELSE_2	IF_6	CALL_10
0x2a6	          0x4889c7	                            mov rdi, rax	        64	list-objects-filter-options.c	FUNCTION_6	ELSE_2	IF_6	CALL_10
0x2a9	      0xe85afeffff	                         call sym.oiddup	        64	list-objects-filter-options.c	FUNCTION_6	ELSE_2	IF_6	CALL_10
0x2ae	          0x4889c2	                            mov rdx, rax	        64	list-objects-filter-options.c	FUNCTION_6	ELSE_2	IF_6	CALL_10
0x2b1	        0x488b4588	             mov rax, qword [rbp - 0x78]	        64	list-objects-filter-options.c	FUNCTION_6	ELSE_2	IF_6	CALL_10
0x2b5	        0x48895010	             mov qword [rax + 0x10], rdx	        64	list-objects-filter-options.c	FUNCTION_6	ELSE_2	IF_6	CALL_10
0x2b9	        0x488b4588	             mov rax, qword [rbp - 0x78]	        65	list-objects-filter-options.c	FUNCTION_6	ELSE_2	IF_6
0x2bd	    0xc74008030000	                  mov dword [rax + 8], 3	        65	list-objects-filter-options.c	FUNCTION_6	ELSE_2	IF_6
0x2c4	      0xb800000000	                              mov eax, 0	        66	list-objects-filter-options.c	FUNCTION_6	ELSE_2	IF_6
0x2c9	      0xe998000000	                           jmp 0x40003a6	        66	list-objects-filter-options.c	FUNCTION_6	ELSE_2	IF_6
0x2ce	        0x488d5598	                   lea rdx, [rbp - 0x68]	        68	list-objects-filter-options.c	FUNCTION_6	ELSE_3	IF_8	CALL_11
0x2d2	        0x488b4580	             mov rax, qword [rbp - 0x80]	        68	list-objects-filter-options.c	FUNCTION_6	ELSE_3	IF_8	CALL_11
0x2d6	      0xbe00000000	                              mov esi, 0	        68	list-objects-filter-options.c	FUNCTION_6	ELSE_3	IF_8	CALL_11
0x2db	          0x4889c7	                            mov rdi, rax	        68	list-objects-filter-options.c	FUNCTION_6	ELSE_3	IF_8	CALL_11
0x2de	      0xe81dfdffff	                    call sym.skip_prefix	        68	list-objects-filter-options.c	FUNCTION_6	ELSE_3	IF_8	CALL_11
0x2e3	            0x85c0	                           test eax, eax	        68	list-objects-filter-options.c	FUNCTION_6	ELSE_3	IF_8	CALL_11
0x2e5	            0x7429	                            je 0x4000350	        68	list-objects-filter-options.c	FUNCTION_6	ELSE_3	IF_8	CALL_11
0x2e7	        0x488b4588	             mov rax, qword [rbp - 0x78]	        69	list-objects-filter-options.c	FUNCTION_6	ELSE_3	IF_8
0x2eb	    0xc74008040000	                  mov dword [rax + 8], 4	        69	list-objects-filter-options.c	FUNCTION_6	ELSE_3	IF_8
0x2f2	        0x488b4598	             mov rax, qword [rbp - 0x68]	        70	list-objects-filter-options.c	FUNCTION_6	ELSE_3	IF_8	CALL_12
0x2f6	          0x4889c7	                            mov rdi, rax	        70	list-objects-filter-options.c	FUNCTION_6	ELSE_3	IF_8	CALL_12
0x2f9	      0xe800000000	                          call 0x400033e	        70	list-objects-filter-options.c	FUNCTION_6	ELSE_3	IF_8	CALL_12
0x2fe	          0x4889c2	                            mov rdx, rax	        70	list-objects-filter-options.c	FUNCTION_6	ELSE_3	IF_8	CALL_12
0x301	        0x488b4588	             mov rax, qword [rbp - 0x78]	        70	list-objects-filter-options.c	FUNCTION_6	ELSE_3	IF_8	CALL_12
0x305	        0x48895018	             mov qword [rax + 0x18], rdx	        70	list-objects-filter-options.c	FUNCTION_6	ELSE_3	IF_8	CALL_12
0x309	      0xb800000000	                              mov eax, 0	        71	list-objects-filter-options.c	FUNCTION_6	ELSE_3	IF_8
0x30e	            0xeb56	                           jmp 0x40003a6	        71	list-objects-filter-options.c	FUNCTION_6	ELSE_3	IF_8
0x310	    0x4883bd78ffff	               cmp qword [rbp - 0x88], 0	        74	list-objects-filter-options.c	FUNCTION_6	IF_9
0x318	            0x7431	                            je 0x400038b	        74	list-objects-filter-options.c	FUNCTION_6	IF_9
0x31a	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	        75	list-objects-filter-options.c	FUNCTION_6	IF_9	CALL_13
0x321	      0xbe00000000	                              mov esi, 0	        75	list-objects-filter-options.c	FUNCTION_6	IF_9	CALL_13
0x326	          0x4889c7	                            mov rdi, rax	        75	list-objects-filter-options.c	FUNCTION_6	IF_9	CALL_13
0x329	      0xe800000000	                          call 0x400036e	        75	list-objects-filter-options.c	FUNCTION_6	IF_9	CALL_13
0x32e	        0x488b5580	             mov rdx, qword [rbp - 0x80]	        76	list-objects-filter-options.c	FUNCTION_6	IF_9	CALL_14
0x332	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	        76	list-objects-filter-options.c	FUNCTION_6	IF_9	CALL_14
0x339	      0xbe00000000	                              mov esi, 0	        76	list-objects-filter-options.c	FUNCTION_6	IF_9	CALL_14
0x33e	          0x4889c7	                            mov rdi, rax	        76	list-objects-filter-options.c	FUNCTION_6	IF_9	CALL_14
0x341	      0xb800000000	                              mov eax, 0	        76	list-objects-filter-options.c	FUNCTION_6	IF_9	CALL_14
0x346	      0xe800000000	                          call 0x400038b	        76	list-objects-filter-options.c	FUNCTION_6	IF_9	CALL_14
0x34b	        0x488b4588	             mov rax, qword [rbp - 0x78]	        78	list-objects-filter-options.c	FUNCTION_6	CALL_15
0x34f	      0xba28000000	                           mov edx, 0x28	        78	list-objects-filter-options.c	FUNCTION_6	CALL_15
0x354	      0xbe00000000	                              mov esi, 0	        78	list-objects-filter-options.c	FUNCTION_6	CALL_15
0x359	          0x4889c7	                            mov rdi, rax	        78	list-objects-filter-options.c	FUNCTION_6	CALL_15
0x35c	      0xe800000000	                          call 0x40003a1	        78	list-objects-filter-options.c	FUNCTION_6	CALL_15
0x361	      0xb801000000	                              mov eax, 1	        79	list-objects-filter-options.c	FUNCTION_6
0x366	        0x488b4df8	                mov rcx, qword [rbp - 8]	        80	list-objects-filter-options.c	FUNCTION_6
0x36a	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        80	list-objects-filter-options.c	FUNCTION_6
0x373	            0x7405	                            je 0x40003ba	        80	list-objects-filter-options.c	FUNCTION_6
0x375	      0xe800000000	                          call 0x40003ba	        80	list-objects-filter-options.c	FUNCTION_6
0x37a	              0xc9	                                   leave	        80	list-objects-filter-options.c	FUNCTION_6
0x37b	              0xc3	                                     ret	        80	list-objects-filter-options.c	FUNCTION_6
strbuf_addstr	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,0:DO,0:CALL,2:WHILE,0	17
0x56	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_43
0x57	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_43
0x5a	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_43
0x5e	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_43
0x62	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_43
0x66	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_43	CALL_2
0x6a	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_43	CALL_2
0x6d	      0xe800000000	                          call 0x40000b2	       279	strbuf.h	FUNCTION_43	CALL_2
0x72	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_43	CALL_2
0x75	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_43	CALL_2
0x79	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_43	CALL_2
0x7d	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_43	CALL_2
0x80	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_43	CALL_2
0x83	      0xe800000000	                          call 0x40000c8	       279	strbuf.h	FUNCTION_43	CALL_2
0x88	              0x90	                                     nop	       280	strbuf.h	FUNCTION_43
0x89	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_43
0x8a	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_43
parse_list_objects_filter	SWITCH,0:functions,0:ELSE,0:FOR,0:IF,1:DO,0:CALL,2:WHILE,0	31
0x37c	              0x55	                                push rbp	        84	list-objects-filter-options.c	FUNCTION_7
0x37d	          0x4889e5	                            mov rbp, rsp	        84	list-objects-filter-options.c	FUNCTION_7
0x380	        0x4883ec30	                           sub rsp, 0x30	        84	list-objects-filter-options.c	FUNCTION_7
0x384	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        84	list-objects-filter-options.c	FUNCTION_7
0x388	        0x488975d0	             mov qword [rbp - 0x30], rsi	        84	list-objects-filter-options.c	FUNCTION_7
0x38c	    0x64488b042528	                mov rax, qword fs:[0x28]	        84	list-objects-filter-options.c	FUNCTION_7
0x395	        0x488945f8	                mov qword [rbp - 8], rax	        84	list-objects-filter-options.c	FUNCTION_7
0x399	            0x31c0	                            xor eax, eax	        84	list-objects-filter-options.c	FUNCTION_7
0x39b	    0x48c745e00000	               mov qword [rbp - 0x20], 0	        85	list-objects-filter-options.c	FUNCTION_7
0x3a3	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        85	list-objects-filter-options.c	FUNCTION_7
0x3ab	    0x48c745f00000	               mov qword [rbp - 0x10], 0	        85	list-objects-filter-options.c	FUNCTION_7
0x3b3	        0x488d55e0	                   lea rdx, [rbp - 0x20]	        86	list-objects-filter-options.c	FUNCTION_7	IF_1	CALL_1
0x3b7	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	        86	list-objects-filter-options.c	FUNCTION_7	IF_1	CALL_1
0x3bb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        86	list-objects-filter-options.c	FUNCTION_7	IF_1	CALL_1
0x3bf	          0x4889ce	                            mov rsi, rcx	        86	list-objects-filter-options.c	FUNCTION_7	IF_1	CALL_1
0x3c2	          0x4889c7	                            mov rdi, rax	        86	list-objects-filter-options.c	FUNCTION_7	IF_1	CALL_1
0x3c5	      0xe89afdffff	call sym.gently_parse_list_objects_filter	        86	list-objects-filter-options.c	FUNCTION_7	IF_1	CALL_1
0x3ca	            0x85c0	                           test eax, eax	        86	list-objects-filter-options.c	FUNCTION_7	IF_1	CALL_1
0x3cc	            0x7416	                            je 0x4000424	        86	list-objects-filter-options.c	FUNCTION_7	IF_1	CALL_1
0x3ce	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        87	list-objects-filter-options.c	FUNCTION_7	CALL_2
0x3d2	          0x4889c6	                            mov rsi, rax	        87	list-objects-filter-options.c	FUNCTION_7	CALL_2
0x3d5	      0xbf00000000	                              mov edi, 0	        87	list-objects-filter-options.c	FUNCTION_7	CALL_2
0x3da	      0xb800000000	                              mov eax, 0	        87	list-objects-filter-options.c	FUNCTION_7	CALL_2
0x3df	      0xe800000000	                          call 0x4000424	        87	list-objects-filter-options.c	FUNCTION_7	CALL_2
0x3e4	      0xb800000000	                              mov eax, 0	        88	list-objects-filter-options.c	FUNCTION_7
0x3e9	        0x488b4df8	                mov rcx, qword [rbp - 8]	        89	list-objects-filter-options.c	FUNCTION_7
0x3ed	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        89	list-objects-filter-options.c	FUNCTION_7
0x3f6	            0x7405	                            je 0x400043d	        89	list-objects-filter-options.c	FUNCTION_7
0x3f8	      0xe800000000	                          call 0x400043d	        89	list-objects-filter-options.c	FUNCTION_7
0x3fd	              0xc9	                                   leave	        89	list-objects-filter-options.c	FUNCTION_7
0x3fe	              0xc3	                                     ret	        89	list-objects-filter-options.c	FUNCTION_7
