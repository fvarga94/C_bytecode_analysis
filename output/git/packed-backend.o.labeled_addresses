die_invalid_line	functions,0:IF,2:DO,0:FOR,0:WHILE,0:CALL,4:ELSE,2:SWITCH,0	45
0x642	              0x55	                                push rbp	       257	packed-backend.c	FUNCTION_8
0x643	          0x4889e5	                            mov rbp, rsp	       257	packed-backend.c	FUNCTION_8
0x646	        0x4883ec30	                           sub rsp, 0x30	       257	packed-backend.c	FUNCTION_8
0x64a	        0x48897de8	             mov qword [rbp - 0x18], rdi	       257	packed-backend.c	FUNCTION_8
0x64e	        0x488975e0	             mov qword [rbp - 0x20], rsi	       257	packed-backend.c	FUNCTION_8
0x652	        0x488955d8	             mov qword [rbp - 0x28], rdx	       257	packed-backend.c	FUNCTION_8
0x656	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       258	packed-backend.c	FUNCTION_8	CALL_1
0x65a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       258	packed-backend.c	FUNCTION_8	CALL_1
0x65e	      0xbe0a000000	                            mov esi, 0xa	       258	packed-backend.c	FUNCTION_8	CALL_1
0x663	          0x4889c7	                            mov rdi, rax	       258	packed-backend.c	FUNCTION_8	CALL_1
0x666	      0xe800000000	                          call 0x40006ab	       258	packed-backend.c	FUNCTION_8	CALL_1
0x66b	        0x488945f8	                mov qword [rbp - 8], rax	       258	packed-backend.c	FUNCTION_8	CALL_1
0x66f	      0x48837df800	                  cmp qword [rbp - 8], 0	       260	packed-backend.c	FUNCTION_8	IF_1
0x674	            0x7517	                           jne 0x40006cd	       260	packed-backend.c	FUNCTION_8	IF_1
0x676	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       261	packed-backend.c	FUNCTION_8	CALL_2
0x67a	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       261	packed-backend.c	FUNCTION_8	CALL_2
0x67e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       261	packed-backend.c	FUNCTION_8	CALL_2
0x682	          0x4889ce	                            mov rsi, rcx	       261	packed-backend.c	FUNCTION_8	CALL_2
0x685	          0x4889c7	                            mov rdi, rax	       261	packed-backend.c	FUNCTION_8	CALL_2
0x688	      0xe85bffffff	          call sym.die_unterminated_line	       261	packed-backend.c	FUNCTION_8	CALL_2
0x68d	        0x488b55f8	                mov rdx, qword [rbp - 8]	       262	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x691	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       262	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x695	          0x4829c2	                            sub rdx, rax	       262	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x698	          0x4889d0	                            mov rax, rdx	       262	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x69b	        0x4883f84f	                           cmp rax, 0x4f	       262	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x69f	            0x7f2f	                            jg 0x4000710	       262	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x6a1	        0x488b55f8	                mov rdx, qword [rbp - 8]	       263	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x6a5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       263	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x6a9	          0x4829c2	                            sub rdx, rax	       263	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x6ac	          0x4889d0	                            mov rax, rdx	       263	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x6af	            0x89c6	                            mov esi, eax	       263	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x6b1	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       263	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x6b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       263	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x6b9	          0x4889d1	                            mov rcx, rdx	       263	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x6bc	            0x89f2	                            mov edx, esi	       263	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x6be	          0x4889c6	                            mov rsi, rax	       263	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x6c1	      0xbf00000000	                              mov edi, 0	       263	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x6c6	      0xb800000000	                              mov eax, 0	       263	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x6cb	      0xe800000000	                          call 0x4000710	       263	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x6d0	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       265	packed-backend.c	FUNCTION_8	CALL_4
0x6d4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       265	packed-backend.c	FUNCTION_8	CALL_4
0x6d8	          0x4889c6	                            mov rsi, rax	       265	packed-backend.c	FUNCTION_8	CALL_4
0x6db	      0xbf00000000	                              mov edi, 0	       265	packed-backend.c	FUNCTION_8	CALL_4
0x6e0	      0xb800000000	                              mov eax, 0	       265	packed-backend.c	FUNCTION_8	CALL_4
0x6e5	      0xe800000000	         call sym.cmp_packed_ref_records	       265	packed-backend.c	FUNCTION_8	CALL_4
sane_qsort	functions,0:IF,1:DO,0:FOR,0:WHILE,0:CALL,1:ELSE,0:SWITCH,0	18
0xe6	              0x55	                                push rbp	      1047	git-compat-util.h	FUNCTION_74
0xe7	          0x4889e5	                            mov rbp, rsp	      1047	git-compat-util.h	FUNCTION_74
0xea	        0x4883ec20	                           sub rsp, 0x20	      1047	git-compat-util.h	FUNCTION_74
0xee	        0x48897df8	                mov qword [rbp - 8], rdi	      1047	git-compat-util.h	FUNCTION_74
0xf2	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1047	git-compat-util.h	FUNCTION_74
0xf6	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1047	git-compat-util.h	FUNCTION_74
0xfa	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1047	git-compat-util.h	FUNCTION_74
0xfe	      0x48837df001	               cmp qword [rbp - 0x10], 1	      1048	git-compat-util.h	FUNCTION_74	IF_1
0x103	            0x7618	                           jbe 0x400015d	      1048	git-compat-util.h	FUNCTION_74	IF_1
0x105	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1049	git-compat-util.h	FUNCTION_74	CALL_1
0x109	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1049	git-compat-util.h	FUNCTION_74	CALL_1
0x10d	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1049	git-compat-util.h	FUNCTION_74	CALL_1
0x111	        0x488b45f8	                mov rax, qword [rbp - 8]	      1049	git-compat-util.h	FUNCTION_74	CALL_1
0x115	          0x4889c7	                            mov rdi, rax	      1049	git-compat-util.h	FUNCTION_74	CALL_1
0x118	      0xe800000000	                          call 0x400015d	      1049	git-compat-util.h	FUNCTION_74	CALL_1
0x11d	              0x90	                                     nop	      1050	git-compat-util.h	FUNCTION_74
0x11e	              0xc9	                                   leave	      1050	git-compat-util.h	FUNCTION_74
0x11f	              0xc3	                                     ret	      1050	git-compat-util.h	FUNCTION_74
const_error	functions,0:IF,0:DO,0:FOR,0:WHILE,0:CALL,0:ELSE,0:SWITCH,0	5
0x0	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_55
0x1	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_55
0x4	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_55
0x9	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_55
0xa	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_55
acquire_snapshot	functions,0:IF,0:DO,0:FOR,0:WHILE,0:CALL,0:ELSE,0:SWITCH,0	11
0x384	              0x55	                                push rbp	       158	packed-backend.c	FUNCTION_1
0x385	          0x4889e5	                            mov rbp, rsp	       158	packed-backend.c	FUNCTION_1
0x388	        0x48897df8	                mov qword [rbp - 8], rdi	       158	packed-backend.c	FUNCTION_1
0x38c	        0x488b45f8	                mov rax, qword [rbp - 8]	       159	packed-backend.c	FUNCTION_1
0x390	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       159	packed-backend.c	FUNCTION_1
0x393	          0x8d5001	                      lea edx, [rax + 1]	       159	packed-backend.c	FUNCTION_1
0x396	        0x488b45f8	                mov rax, qword [rbp - 8]	       159	packed-backend.c	FUNCTION_1
0x39a	          0x89502c	             mov dword [rax + 0x2c], edx	       159	packed-backend.c	FUNCTION_1
0x39d	              0x90	                                     nop	       160	packed-backend.c	FUNCTION_1
0x39e	              0x5d	                                 pop rbp	       160	packed-backend.c	FUNCTION_1
0x39f	              0xc3	                                     ret	       160	packed-backend.c	FUNCTION_1
validate_snapshot	functions,0:IF,1:DO,0:FOR,0:WHILE,0:CALL,2:ELSE,0:SWITCH,0	24
0x13dd	              0x55	                                push rbp	       699	packed-backend.c	FUNCTION_18
0x13de	          0x4889e5	                            mov rbp, rsp	       699	packed-backend.c	FUNCTION_18
0x13e1	        0x4883ec10	                           sub rsp, 0x10	       699	packed-backend.c	FUNCTION_18
0x13e5	        0x48897df8	                mov qword [rbp - 8], rdi	       699	packed-backend.c	FUNCTION_18
0x13e9	        0x488b45f8	                mov rax, qword [rbp - 8]	       700	packed-backend.c	FUNCTION_18	IF_1
0x13ed	        0x488b4018	            mov rax, qword [rax + 0x18] 	       700	packed-backend.c	FUNCTION_18	IF_1
0x13f1	          0x4885c0	                           test rax, rax	       700	packed-backend.c	FUNCTION_18	IF_1
0x13f4	            0x742f	                            je 0x4001465	       700	packed-backend.c	FUNCTION_18	IF_1
0x13f6	        0x488b45f8	                mov rax, qword [rbp - 8]	       701	packed-backend.c	FUNCTION_18	IF_1	CALL_1
0x13fa	        0x488b4010	            mov rax, qword [rax + 0x10] 	       701	packed-backend.c	FUNCTION_18	IF_1	CALL_1
0x13fe	        0x488b55f8	                mov rdx, qword [rbp - 8]	       701	packed-backend.c	FUNCTION_18	IF_1	CALL_1
0x1402	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	       701	packed-backend.c	FUNCTION_18	IF_1	CALL_1
0x1406	        0x4883c230	                           add rdx, 0x30	       701	packed-backend.c	FUNCTION_18	IF_1	CALL_1
0x140a	          0x4889c6	                            mov rsi, rax	       701	packed-backend.c	FUNCTION_18	IF_1	CALL_1
0x140d	          0x4889d7	                            mov rdi, rdx	       701	packed-backend.c	FUNCTION_18	IF_1	CALL_1
0x1410	      0xe800000000	                          call 0x4001455	       701	packed-backend.c	FUNCTION_18	IF_1	CALL_1
0x1415	            0x85c0	                           test eax, eax	       700	packed-backend.c	FUNCTION_18	IF_1
0x1417	            0x750c	                           jne 0x4001465	       700	packed-backend.c	FUNCTION_18	IF_1
0x1419	        0x488b45f8	                mov rax, qword [rbp - 8]	       702	packed-backend.c	FUNCTION_18	CALL_2
0x141d	          0x4889c7	                            mov rdi, rax	       702	packed-backend.c	FUNCTION_18	CALL_2
0x1420	      0xe883f1ffff	                 call sym.clear_snapshot	       702	packed-backend.c	FUNCTION_18	CALL_2
0x1425	              0x90	                                     nop	       703	packed-backend.c	FUNCTION_18
0x1426	              0xc9	                                   leave	       703	packed-backend.c	FUNCTION_18
0x1427	              0xc3	                                     ret	       703	packed-backend.c	FUNCTION_18
packed_transaction_cleanup	functions,0:IF,3:DO,0:FOR,0:WHILE,0:CALL,6:ELSE,0:SWITCH,0	50
0x261b	              0x55	                                push rbp	      1374	packed-backend.c	FUNCTION_33
0x261c	          0x4889e5	                            mov rbp, rsp	      1374	packed-backend.c	FUNCTION_33
0x261f	        0x4883ec20	                           sub rsp, 0x20	      1374	packed-backend.c	FUNCTION_33
0x2623	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1374	packed-backend.c	FUNCTION_33
0x2627	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1374	packed-backend.c	FUNCTION_33
0x262b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1375	packed-backend.c	FUNCTION_33
0x262f	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1375	packed-backend.c	FUNCTION_33
0x2633	        0x488945f8	                mov qword [rbp - 8], rax	      1375	packed-backend.c	FUNCTION_33
0x2637	      0x48837df800	                  cmp qword [rbp - 8], 0	      1377	packed-backend.c	FUNCTION_33	IF_1
0x263c	     0xf8485000000	                            je 0x4002707	      1377	packed-backend.c	FUNCTION_33	IF_1
0x2642	        0x488b45f8	                mov rax, qword [rbp - 8]	      1378	packed-backend.c	FUNCTION_33	IF_1	CALL_1
0x2646	        0x4883c008	                              add rax, 8	      1378	packed-backend.c	FUNCTION_33	IF_1	CALL_1
0x264a	      0xbe00000000	                              mov esi, 0	      1378	packed-backend.c	FUNCTION_33	IF_1	CALL_1
0x264f	          0x4889c7	                            mov rdi, rax	      1378	packed-backend.c	FUNCTION_33	IF_1	CALL_1
0x2652	      0xe800000000	                          call 0x4002697	      1378	packed-backend.c	FUNCTION_33	IF_1	CALL_1
0x2657	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1380	packed-backend.c	FUNCTION_33	IF_1	IF_2	CALL_2
0x265b	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1380	packed-backend.c	FUNCTION_33	IF_1	IF_2	CALL_2
0x265f	          0x4889c7	                            mov rdi, rax	      1380	packed-backend.c	FUNCTION_33	IF_1	IF_2	CALL_2
0x2662	      0xe8a0dcffff	             call sym.is_tempfile_active	      1380	packed-backend.c	FUNCTION_33	IF_1	IF_2	CALL_2
0x2667	            0x85c0	                           test eax, eax	      1380	packed-backend.c	FUNCTION_33	IF_1	IF_2	CALL_2
0x2669	            0x7410	                            je 0x40026bb	      1380	packed-backend.c	FUNCTION_33	IF_1	IF_2	CALL_2
0x266b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1381	packed-backend.c	FUNCTION_33	IF_1	CALL_3
0x266f	        0x4883c028	                           add rax, 0x28	      1381	packed-backend.c	FUNCTION_33	IF_1	CALL_3
0x2673	          0x4889c7	                            mov rdi, rax	      1381	packed-backend.c	FUNCTION_33	IF_1	CALL_3
0x2676	      0xe800000000	                          call 0x40026bb	      1381	packed-backend.c	FUNCTION_33	IF_1	CALL_3
0x267b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1383	packed-backend.c	FUNCTION_33	IF_1	IF_3	CALL_4
0x267f	            0x8b00	                    mov eax, dword [rax]	      1383	packed-backend.c	FUNCTION_33	IF_1	IF_3	CALL_4
0x2681	            0x85c0	                           test eax, eax	      1383	packed-backend.c	FUNCTION_33	IF_1	IF_3	CALL_4
0x2683	            0x742a	                            je 0x40026ef	      1383	packed-backend.c	FUNCTION_33	IF_1	IF_3	CALL_4
0x2685	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1383	packed-backend.c	FUNCTION_33	IF_1	IF_3	CALL_4
0x2689	        0x4883c020	                           add rax, 0x20	      1383	packed-backend.c	FUNCTION_33	IF_1	IF_3	CALL_4
0x268d	          0x4889c7	                            mov rdi, rax	      1383	packed-backend.c	FUNCTION_33	IF_1	IF_3	CALL_4
0x2690	      0xe89adcffff	            call sym.is_lock_file_locked	      1383	packed-backend.c	FUNCTION_33	IF_1	IF_3	CALL_4
0x2695	            0x85c0	                           test eax, eax	      1383	packed-backend.c	FUNCTION_33	IF_1	IF_3	CALL_4
0x2697	            0x7416	                            je 0x40026ef	      1383	packed-backend.c	FUNCTION_33	IF_1	IF_3	CALL_4
0x2699	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1384	packed-backend.c	FUNCTION_33	IF_1	IF_3	CALL_5
0x269d	          0x4889c7	                            mov rdi, rax	      1384	packed-backend.c	FUNCTION_33	IF_1	IF_3	CALL_5
0x26a0	      0xe800000000	                          call 0x40026e5	      1384	packed-backend.c	FUNCTION_33	IF_1	IF_3	CALL_5
0x26a5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1385	packed-backend.c	FUNCTION_33	IF_1	IF_3
0x26a9	    0xc70000000000	                      mov dword [rax], 0	      1385	packed-backend.c	FUNCTION_33	IF_1	IF_3
0x26af	        0x488b45f8	                mov rax, qword [rbp - 8]	      1388	packed-backend.c	FUNCTION_33	IF_1	CALL_6
0x26b3	          0x4889c7	                            mov rdi, rax	      1388	packed-backend.c	FUNCTION_33	IF_1	CALL_6
0x26b6	      0xe800000000	                          call 0x40026fb	      1388	packed-backend.c	FUNCTION_33	IF_1	CALL_6
0x26bb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1389	packed-backend.c	FUNCTION_33	IF_1
0x26bf	    0x48c740280000	               mov qword [rax + 0x28], 0	      1389	packed-backend.c	FUNCTION_33	IF_1
0x26c7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1392	packed-backend.c	FUNCTION_33
0x26cb	    0xc74020020000	               mov dword [rax + 0x20], 2	      1392	packed-backend.c	FUNCTION_33
0x26d2	              0x90	                                     nop	      1393	packed-backend.c	FUNCTION_33
0x26d3	              0xc9	                                   leave	      1393	packed-backend.c	FUNCTION_33
0x26d4	              0xc3	                                     ret	      1393	packed-backend.c	FUNCTION_33
sort_snapshot	functions,0:IF,7:DO,0:FOR,1:WHILE,1:CALL,13:ELSE,0:SWITCH,0	280
0x834	              0x55	                                push rbp	       320	packed-backend.c	FUNCTION_11
0x835	          0x4889e5	                            mov rbp, rsp	       320	packed-backend.c	FUNCTION_11
0x838	        0x4883ec70	                           sub rsp, 0x70	       320	packed-backend.c	FUNCTION_11
0x83c	        0x48897d98	             mov qword [rbp - 0x68], rdi	       320	packed-backend.c	FUNCTION_11
0x840	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       321	packed-backend.c	FUNCTION_11
0x848	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       322	packed-backend.c	FUNCTION_11
0x850	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       322	packed-backend.c	FUNCTION_11
0x858	    0xc745a4010000	               mov dword [rbp - 0x5c], 1	       323	packed-backend.c	FUNCTION_11
0x85f	        0x488b4598	             mov rax, qword [rbp - 0x68]	       328	packed-backend.c	FUNCTION_11
0x863	        0x488b4018	            mov rax, qword [rax + 0x18] 	       328	packed-backend.c	FUNCTION_11
0x867	        0x488945c0	             mov qword [rbp - 0x40], rax	       328	packed-backend.c	FUNCTION_11
0x86b	        0x488b4598	             mov rax, qword [rbp - 0x68]	       329	packed-backend.c	FUNCTION_11
0x86f	        0x488b4020	            mov rax, qword [rax + 0x20] 	       329	packed-backend.c	FUNCTION_11
0x873	        0x488945e0	             mov qword [rbp - 0x20], rax	       329	packed-backend.c	FUNCTION_11
0x877	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       331	packed-backend.c	FUNCTION_11	IF_1
0x87b	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       331	packed-backend.c	FUNCTION_11	IF_1
0x87f	     0xf84dd030000	                            je 0x4000ca2	       331	packed-backend.c	FUNCTION_11	IF_1
0x885	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       334	packed-backend.c	FUNCTION_11
0x889	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       334	packed-backend.c	FUNCTION_11
0x88d	          0x4829c2	                            sub rdx, rax	       334	packed-backend.c	FUNCTION_11
0x890	          0x4889d0	                            mov rax, rdx	       334	packed-backend.c	FUNCTION_11
0x893	        0x488945e8	             mov qword [rbp - 0x18], rax	       334	packed-backend.c	FUNCTION_11
0x897	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       340	packed-backend.c	FUNCTION_11	CALL_1
0x89b	    0x48bacdcccccc	          movabs rdx, 0xcccccccccccccccd	       340	packed-backend.c	FUNCTION_11	CALL_1
0x8a5	          0x48f7e2	                                 mul rdx	       340	packed-backend.c	FUNCTION_11	CALL_1
0x8a8	          0x4889d0	                            mov rax, rdx	       340	packed-backend.c	FUNCTION_11	CALL_1
0x8ab	        0x48c1e806	                              shr rax, 6	       340	packed-backend.c	FUNCTION_11	CALL_1
0x8af	        0x4883c014	                           add rax, 0x14	       340	packed-backend.c	FUNCTION_11	CALL_1
0x8b3	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	       340	packed-backend.c	FUNCTION_11	CALL_1
0x8b7	     0xf86a2020000	                           jbe 0x4000b9f	       340	packed-backend.c	FUNCTION_11	CALL_1
0x8bd	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       340	packed-backend.c	FUNCTION_11	CALL_1
0x8c1	          0x4889d0	                            mov rax, rdx	       340	packed-backend.c	FUNCTION_11	CALL_1
0x8c4	          0x4801c0	                            add rax, rax	       340	packed-backend.c	FUNCTION_11	CALL_1
0x8c7	          0x4801d0	                            add rax, rdx	       340	packed-backend.c	FUNCTION_11	CALL_1
0x8ca	        0x4883c030	                           add rax, 0x30	       340	packed-backend.c	FUNCTION_11	CALL_1
0x8ce	          0x48d1e8	                              shr rax, 1	       340	packed-backend.c	FUNCTION_11	CALL_1
0x8d1	          0x4889c1	                            mov rcx, rax	       340	packed-backend.c	FUNCTION_11	CALL_1
0x8d4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       340	packed-backend.c	FUNCTION_11	CALL_1
0x8d8	    0x48bacdcccccc	          movabs rdx, 0xcccccccccccccccd	       340	packed-backend.c	FUNCTION_11	CALL_1
0x8e2	          0x48f7e2	                                 mul rdx	       340	packed-backend.c	FUNCTION_11	CALL_1
0x8e5	          0x4889d0	                            mov rax, rdx	       340	packed-backend.c	FUNCTION_11	CALL_1
0x8e8	        0x48c1e806	                              shr rax, 6	       340	packed-backend.c	FUNCTION_11	CALL_1
0x8ec	        0x4883c014	                           add rax, 0x14	       340	packed-backend.c	FUNCTION_11	CALL_1
0x8f0	          0x4839c1	                            cmp rcx, rax	       340	packed-backend.c	FUNCTION_11	CALL_1
0x8f3	            0x7322	                           jae 0x4000957	       340	packed-backend.c	FUNCTION_11	CALL_1
0x8f5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       340	packed-backend.c	FUNCTION_11	CALL_1
0x8f9	    0x48bacdcccccc	          movabs rdx, 0xcccccccccccccccd	       340	packed-backend.c	FUNCTION_11	CALL_1
0x903	          0x48f7e2	                                 mul rdx	       340	packed-backend.c	FUNCTION_11	CALL_1
0x906	          0x4889d0	                            mov rax, rdx	       340	packed-backend.c	FUNCTION_11	CALL_1
0x909	        0x48c1e806	                              shr rax, 6	       340	packed-backend.c	FUNCTION_11	CALL_1
0x90d	        0x4883c014	                           add rax, 0x14	       340	packed-backend.c	FUNCTION_11	CALL_1
0x911	        0x488945b0	             mov qword [rbp - 0x50], rax	       340	packed-backend.c	FUNCTION_11	CALL_1
0x915	            0xeb18	                           jmp 0x400096f	       340	packed-backend.c	FUNCTION_11	CALL_1
0x917	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       340	packed-backend.c	FUNCTION_11	CALL_1
0x91b	          0x4889d0	                            mov rax, rdx	       340	packed-backend.c	FUNCTION_11	CALL_1
0x91e	          0x4801c0	                            add rax, rax	       340	packed-backend.c	FUNCTION_11	CALL_1
0x921	          0x4801d0	                            add rax, rdx	       340	packed-backend.c	FUNCTION_11	CALL_1
0x924	        0x4883c030	                           add rax, 0x30	       340	packed-backend.c	FUNCTION_11	CALL_1
0x928	          0x48d1e8	                              shr rax, 1	       340	packed-backend.c	FUNCTION_11	CALL_1
0x92b	        0x488945b0	             mov qword [rbp - 0x50], rax	       340	packed-backend.c	FUNCTION_11	CALL_1
0x92f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       340	packed-backend.c	FUNCTION_11	CALL_1
0x933	          0x4889c6	                            mov rsi, rax	       340	packed-backend.c	FUNCTION_11	CALL_1
0x936	      0xbf10000000	                           mov edi, 0x10	       340	packed-backend.c	FUNCTION_11	CALL_1
0x93b	      0xe821f7ffff	                        call sym.st_mult	       340	packed-backend.c	FUNCTION_11	CALL_1
0x940	          0x4889c2	                            mov rdx, rax	       340	packed-backend.c	FUNCTION_11	CALL_1
0x943	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       340	packed-backend.c	FUNCTION_11	CALL_1
0x947	          0x4889d6	                            mov rsi, rdx	       340	packed-backend.c	FUNCTION_11	CALL_1
0x94a	          0x4889c7	                            mov rdi, rax	       340	packed-backend.c	FUNCTION_11	CALL_1
0x94d	      0xe800000000	                          call 0x4000992	       340	packed-backend.c	FUNCTION_11	CALL_1
0x952	        0x488945a8	             mov qword [rbp - 0x58], rax	       340	packed-backend.c	FUNCTION_11	CALL_1
0x956	      0xe904020000	                           jmp 0x4000b9f	       342	packed-backend.c	FUNCTION_11	WHILE_1
0x95b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       343	packed-backend.c	FUNCTION_11	WHILE_1	CALL_2
0x95f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       343	packed-backend.c	FUNCTION_11	WHILE_1	CALL_2
0x963	          0x4829c2	                            sub rdx, rax	       343	packed-backend.c	FUNCTION_11	WHILE_1	CALL_2
0x966	          0x4889d0	                            mov rax, rdx	       343	packed-backend.c	FUNCTION_11	WHILE_1	CALL_2
0x969	          0x4889c2	                            mov rdx, rax	       343	packed-backend.c	FUNCTION_11	WHILE_1	CALL_2
0x96c	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       343	packed-backend.c	FUNCTION_11	WHILE_1	CALL_2
0x970	      0xbe0a000000	                            mov esi, 0xa	       343	packed-backend.c	FUNCTION_11	WHILE_1	CALL_2
0x975	          0x4889c7	                            mov rdi, rax	       343	packed-backend.c	FUNCTION_11	WHILE_1	CALL_2
0x978	      0xe800000000	                          call 0x40009bd	       343	packed-backend.c	FUNCTION_11	WHILE_1	CALL_2
0x97d	        0x488945c8	             mov qword [rbp - 0x38], rax	       343	packed-backend.c	FUNCTION_11	WHILE_1	CALL_2
0x981	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       344	packed-backend.c	FUNCTION_11	WHILE_1	IF_2
0x986	            0x7519	                           jne 0x40009e1	       344	packed-backend.c	FUNCTION_11	WHILE_1	IF_2
0x988	      0xba00000000	                              mov edx, 0	       346	packed-backend.c	FUNCTION_11	WHILE_1	CALL_3
0x98d	      0xbe5a010000	                          mov esi, 0x15a	       346	packed-backend.c	FUNCTION_11	WHILE_1	CALL_3
0x992	      0xbf00000000	                              mov edi, 0	       346	packed-backend.c	FUNCTION_11	WHILE_1	CALL_3
0x997	      0xb800000000	                              mov eax, 0	       346	packed-backend.c	FUNCTION_11	WHILE_1	CALL_3
0x99c	      0xe800000000	                          call 0x40009e1	       346	packed-backend.c	FUNCTION_11	WHILE_1	CALL_3
0x9a1	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       347	packed-backend.c	FUNCTION_11	WHILE_1	IF_3
0x9a5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       347	packed-backend.c	FUNCTION_11	WHILE_1	IF_3
0x9a9	          0x4829c2	                            sub rdx, rax	       347	packed-backend.c	FUNCTION_11	WHILE_1	IF_3
0x9ac	          0x4889d0	                            mov rax, rdx	       347	packed-backend.c	FUNCTION_11	WHILE_1	IF_3
0x9af	        0x4883f829	                           cmp rax, 0x29	       347	packed-backend.c	FUNCTION_11	WHILE_1	IF_3
0x9b3	            0x7f2b	                            jg 0x4000a20	       347	packed-backend.c	FUNCTION_11	WHILE_1	IF_3
0x9b5	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       349	packed-backend.c	FUNCTION_11	WHILE_1	IF_3
0x9b9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       349	packed-backend.c	FUNCTION_11	WHILE_1	IF_3
0x9bd	          0x4829c2	                            sub rdx, rax	       349	packed-backend.c	FUNCTION_11	WHILE_1	IF_3
0x9c0	          0x4889d0	                            mov rax, rdx	       349	packed-backend.c	FUNCTION_11	WHILE_1	IF_3
0x9c3	          0x4889c2	                            mov rdx, rax	       348	packed-backend.c	FUNCTION_11	WHILE_1	IF_3	CALL_4
0x9c6	        0x488b4598	             mov rax, qword [rbp - 0x68]	       348	packed-backend.c	FUNCTION_11	WHILE_1	IF_3	CALL_4
0x9ca	          0x488b00	                    mov rax, qword [rax]	       348	packed-backend.c	FUNCTION_11	WHILE_1	IF_3	CALL_4
0x9cd	        0x488b4010	            mov rax, qword [rax + 0x10] 	       348	packed-backend.c	FUNCTION_11	WHILE_1	IF_3	CALL_4
0x9d1	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       348	packed-backend.c	FUNCTION_11	WHILE_1	IF_3	CALL_4
0x9d5	          0x4889ce	                            mov rsi, rcx	       348	packed-backend.c	FUNCTION_11	WHILE_1	IF_3	CALL_4
0x9d8	          0x4889c7	                            mov rdi, rax	       348	packed-backend.c	FUNCTION_11	WHILE_1	IF_3	CALL_4
0x9db	      0xe862fcffff	               call sym.die_invalid_line	       348	packed-backend.c	FUNCTION_11	WHILE_1	IF_3	CALL_4
0x9e0	      0x488345c801	               add qword [rbp - 0x38], 1	       350	packed-backend.c	FUNCTION_11	WHILE_1
0x9e5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       351	packed-backend.c	FUNCTION_11	WHILE_1	IF_4
0x9e9	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       351	packed-backend.c	FUNCTION_11	WHILE_1	IF_4
0x9ed	            0x735e	                           jae 0x4000a8d	       351	packed-backend.c	FUNCTION_11	WHILE_1	IF_4
0x9ef	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       351	packed-backend.c	FUNCTION_11	WHILE_1	IF_4
0x9f3	           0xfb600	                   movzx eax, byte [rax]	       351	packed-backend.c	FUNCTION_11	WHILE_1	IF_4
0x9f6	            0x3c5e	                            cmp al, 0x5e	       351	packed-backend.c	FUNCTION_11	WHILE_1	IF_4
0x9f8	            0x7553	                           jne 0x4000a8d	       351	packed-backend.c	FUNCTION_11	WHILE_1	IF_4
0x9fa	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       356	packed-backend.c	FUNCTION_11	WHILE_1	IF_4
0x9fe	        0x488945f0	             mov qword [rbp - 0x10], rax	       356	packed-backend.c	FUNCTION_11	WHILE_1	IF_4
0xa02	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       358	packed-backend.c	FUNCTION_11	WHILE_1	IF_4	CALL_5
0xa06	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       358	packed-backend.c	FUNCTION_11	WHILE_1	IF_4	CALL_5
0xa0a	          0x4829c2	                            sub rdx, rax	       358	packed-backend.c	FUNCTION_11	WHILE_1	IF_4	CALL_5
0xa0d	          0x4889d0	                            mov rax, rdx	       358	packed-backend.c	FUNCTION_11	WHILE_1	IF_4	CALL_5
0xa10	          0x4889c2	                            mov rdx, rax	       358	packed-backend.c	FUNCTION_11	WHILE_1	IF_4	CALL_5
0xa13	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       358	packed-backend.c	FUNCTION_11	WHILE_1	IF_4	CALL_5
0xa17	      0xbe0a000000	                            mov esi, 0xa	       358	packed-backend.c	FUNCTION_11	WHILE_1	IF_4	CALL_5
0xa1c	          0x4889c7	                            mov rdi, rax	       358	packed-backend.c	FUNCTION_11	WHILE_1	IF_4	CALL_5
0xa1f	      0xe800000000	                          call 0x4000a64	       358	packed-backend.c	FUNCTION_11	WHILE_1	IF_4	CALL_5
0xa24	        0x488945c8	             mov qword [rbp - 0x38], rax	       358	packed-backend.c	FUNCTION_11	WHILE_1	IF_4	CALL_5
0xa28	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       359	packed-backend.c	FUNCTION_11	WHILE_1	IF_4	IF_5
0xa2d	            0x7519	                           jne 0x4000a88	       359	packed-backend.c	FUNCTION_11	WHILE_1	IF_4	IF_5
0xa2f	      0xba00000000	                              mov edx, 0	       361	packed-backend.c	FUNCTION_11	WHILE_1	IF_4	CALL_6
0xa34	      0xbe69010000	                          mov esi, 0x169	       361	packed-backend.c	FUNCTION_11	WHILE_1	IF_4	CALL_6
0xa39	      0xbf00000000	                              mov edi, 0	       361	packed-backend.c	FUNCTION_11	WHILE_1	IF_4	CALL_6
0xa3e	      0xb800000000	                              mov eax, 0	       361	packed-backend.c	FUNCTION_11	WHILE_1	IF_4	CALL_6
0xa43	      0xe800000000	                          call 0x4000a88	       361	packed-backend.c	FUNCTION_11	WHILE_1	IF_4	CALL_6
0xa48	      0x488345c801	               add qword [rbp - 0x38], 1	       362	packed-backend.c	FUNCTION_11	WHILE_1	IF_4
0xa4d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xa51	        0x4883c001	                              add rax, 1	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xa55	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xa59	            0x7671	                           jbe 0x4000b0c	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xa5b	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xa5f	          0x4889d0	                            mov rax, rdx	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xa62	          0x4801c0	                            add rax, rax	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xa65	          0x4801d0	                            add rax, rdx	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xa68	        0x4883c030	                           add rax, 0x30	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xa6c	          0x48d1e8	                              shr rax, 1	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xa6f	          0x4889c2	                            mov rdx, rax	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xa72	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xa76	        0x4883c001	                              add rax, 1	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xa7a	          0x4839c2	                            cmp rdx, rax	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xa7d	            0x730e	                           jae 0x4000acd	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xa7f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xa83	        0x4883c001	                              add rax, 1	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xa87	        0x488945b0	             mov qword [rbp - 0x50], rax	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xa8b	            0xeb18	                           jmp 0x4000ae5	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xa8d	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xa91	          0x4889d0	                            mov rax, rdx	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xa94	          0x4801c0	                            add rax, rax	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xa97	          0x4801d0	                            add rax, rdx	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xa9a	        0x4883c030	                           add rax, 0x30	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xa9e	          0x48d1e8	                              shr rax, 1	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xaa1	        0x488945b0	             mov qword [rbp - 0x50], rax	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xaa5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xaa9	          0x4889c6	                            mov rsi, rax	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xaac	      0xbf10000000	                           mov edi, 0x10	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xab1	      0xe8abf5ffff	                        call sym.st_mult	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xab6	          0x4889c2	                            mov rdx, rax	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xab9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xabd	          0x4889d6	                            mov rsi, rdx	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xac0	          0x4889c7	                            mov rdi, rax	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xac3	      0xe800000000	                          call 0x4000b08	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xac8	        0x488945a8	             mov qword [rbp - 0x58], rax	       365	packed-backend.c	FUNCTION_11	WHILE_1	CALL_7
0xacc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       366	packed-backend.c	FUNCTION_11	WHILE_1
0xad0	        0x48c1e004	                              shl rax, 4	       366	packed-backend.c	FUNCTION_11	WHILE_1
0xad4	          0x4889c2	                            mov rdx, rax	       366	packed-backend.c	FUNCTION_11	WHILE_1
0xad7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       366	packed-backend.c	FUNCTION_11	WHILE_1
0xadb	          0x4801c2	                            add rdx, rax	       366	packed-backend.c	FUNCTION_11	WHILE_1
0xade	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       366	packed-backend.c	FUNCTION_11	WHILE_1
0xae2	          0x488902	                    mov qword [rdx], rax	       366	packed-backend.c	FUNCTION_11	WHILE_1
0xae5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       367	packed-backend.c	FUNCTION_11	WHILE_1
0xae9	        0x48c1e004	                              shl rax, 4	       367	packed-backend.c	FUNCTION_11	WHILE_1
0xaed	          0x4889c2	                            mov rdx, rax	       367	packed-backend.c	FUNCTION_11	WHILE_1
0xaf0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       367	packed-backend.c	FUNCTION_11	WHILE_1
0xaf4	          0x4801d0	                            add rax, rdx	       367	packed-backend.c	FUNCTION_11	WHILE_1
0xaf7	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       367	packed-backend.c	FUNCTION_11	WHILE_1
0xafb	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       367	packed-backend.c	FUNCTION_11	WHILE_1
0xaff	          0x4829d1	                            sub rcx, rdx	       367	packed-backend.c	FUNCTION_11	WHILE_1
0xb02	          0x4889ca	                            mov rdx, rcx	       367	packed-backend.c	FUNCTION_11	WHILE_1
0xb05	        0x48895008	                mov qword [rax + 8], rdx	       367	packed-backend.c	FUNCTION_11	WHILE_1
0xb09	      0x488345b801	               add qword [rbp - 0x48], 1	       368	packed-backend.c	FUNCTION_11	WHILE_1
0xb0e	        0x837da400	               cmp dword [rbp - 0x5c], 0	       370	packed-backend.c	FUNCTION_11	WHILE_1	IF_6
0xb12	            0x7443	                            je 0x4000b97	       370	packed-backend.c	FUNCTION_11	WHILE_1	IF_6
0xb14	      0x48837db801	               cmp qword [rbp - 0x48], 1	       370	packed-backend.c	FUNCTION_11	WHILE_1	IF_6
0xb19	            0x763c	                           jbe 0x4000b97	       370	packed-backend.c	FUNCTION_11	WHILE_1	IF_6
0xb1b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       373	packed-backend.c	FUNCTION_11	WHILE_1	IF_6
0xb1f	        0x48c1e004	                              shl rax, 4	       373	packed-backend.c	FUNCTION_11	WHILE_1	IF_6
0xb23	        0x488d50f0	                   lea rdx, [rax - 0x10]	       373	packed-backend.c	FUNCTION_11	WHILE_1	IF_6
0xb27	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       373	packed-backend.c	FUNCTION_11	WHILE_1	IF_6
0xb2b	          0x4801c2	                            add rdx, rax	       373	packed-backend.c	FUNCTION_11	WHILE_1	IF_6
0xb2e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       372	packed-backend.c	FUNCTION_11	WHILE_1	IF_6	CALL_8
0xb32	        0x48c1e004	                              shl rax, 4	       372	packed-backend.c	FUNCTION_11	WHILE_1	IF_6	CALL_8
0xb36	        0x488d48e0	                   lea rcx, [rax - 0x20]	       372	packed-backend.c	FUNCTION_11	WHILE_1	IF_6	CALL_8
0xb3a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       372	packed-backend.c	FUNCTION_11	WHILE_1	IF_6	CALL_8
0xb3e	          0x4801c8	                            add rax, rcx	       372	packed-backend.c	FUNCTION_11	WHILE_1	IF_6	CALL_8
0xb41	          0x4889d6	                            mov rsi, rdx	       372	packed-backend.c	FUNCTION_11	WHILE_1	IF_6	CALL_8
0xb44	          0x4889c7	                            mov rdi, rax	       372	packed-backend.c	FUNCTION_11	WHILE_1	IF_6	CALL_8
0xb47	      0xe89efbffff	         call sym.cmp_packed_ref_records	       372	packed-backend.c	FUNCTION_11	WHILE_1	IF_6	CALL_8
0xb4c	            0x85c0	                           test eax, eax	       371	packed-backend.c	FUNCTION_11	WHILE_1	IF_6
0xb4e	            0x7807	                            js 0x4000b97	       371	packed-backend.c	FUNCTION_11	WHILE_1	IF_6
0xb50	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	       374	packed-backend.c	FUNCTION_11	WHILE_1	IF_6
0xb57	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       376	packed-backend.c	FUNCTION_11	WHILE_1
0xb5b	        0x488945c0	             mov qword [rbp - 0x40], rax	       376	packed-backend.c	FUNCTION_11	WHILE_1
0xb5f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       342	packed-backend.c	FUNCTION_11	WHILE_1
0xb63	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       342	packed-backend.c	FUNCTION_11	WHILE_1
0xb67	     0xf82eefdffff	                            jb 0x400099b	       342	packed-backend.c	FUNCTION_11	WHILE_1
0xb6d	        0x837da400	               cmp dword [rbp - 0x5c], 0	       379	packed-backend.c	FUNCTION_11	IF_7
0xb71	     0xf85dc000000	                           jne 0x4000c93	       379	packed-backend.c	FUNCTION_11	IF_7
0xb77	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	       383	packed-backend.c	FUNCTION_11	CALL_9
0xb7b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       383	packed-backend.c	FUNCTION_11	CALL_9
0xb7f	      0xb900000000	                              mov ecx, 0	       383	packed-backend.c	FUNCTION_11	CALL_9
0xb84	      0xba10000000	                           mov edx, 0x10	       383	packed-backend.c	FUNCTION_11	CALL_9
0xb89	          0x4889c7	                            mov rdi, rax	       383	packed-backend.c	FUNCTION_11	CALL_9
0xb8c	      0xe855f5ffff	                     call sym.sane_qsort	       383	packed-backend.c	FUNCTION_11	CALL_9
0xb91	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	packed-backend.c	FUNCTION_11	CALL_10
0xb95	          0x4889c7	                            mov rdi, rax	       390	packed-backend.c	FUNCTION_11	CALL_10
0xb98	      0xe800000000	                          call 0x4000bdd	       390	packed-backend.c	FUNCTION_11	CALL_10
0xb9d	        0x488945f8	                mov qword [rbp - 8], rax	       390	packed-backend.c	FUNCTION_11	CALL_10
0xba1	        0x488b45f8	                mov rax, qword [rbp - 8]	       391	packed-backend.c	FUNCTION_11	FOR_1
0xba5	        0x488945d8	             mov qword [rbp - 0x28], rax	       391	packed-backend.c	FUNCTION_11	FOR_1
0xba9	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       391	packed-backend.c	FUNCTION_11	FOR_1
0xbb1	            0xeb59	                           jmp 0x4000c4c	       391	packed-backend.c	FUNCTION_11	FOR_1
0xbb3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       392	packed-backend.c	FUNCTION_11	FOR_1	CALL_11
0xbb7	        0x48c1e004	                              shl rax, 4	       392	packed-backend.c	FUNCTION_11	FOR_1	CALL_11
0xbbb	          0x4889c2	                            mov rdx, rax	       392	packed-backend.c	FUNCTION_11	FOR_1	CALL_11
0xbbe	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       392	packed-backend.c	FUNCTION_11	FOR_1	CALL_11
0xbc2	          0x4801d0	                            add rax, rdx	       392	packed-backend.c	FUNCTION_11	FOR_1	CALL_11
0xbc5	        0x488b5008	                mov rdx, qword [rax + 8]	       392	packed-backend.c	FUNCTION_11	FOR_1	CALL_11
0xbc9	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       392	packed-backend.c	FUNCTION_11	FOR_1	CALL_11
0xbcd	        0x48c1e004	                              shl rax, 4	       392	packed-backend.c	FUNCTION_11	FOR_1	CALL_11
0xbd1	          0x4889c1	                            mov rcx, rax	       392	packed-backend.c	FUNCTION_11	FOR_1	CALL_11
0xbd4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       392	packed-backend.c	FUNCTION_11	FOR_1	CALL_11
0xbd8	          0x4801c8	                            add rax, rcx	       392	packed-backend.c	FUNCTION_11	FOR_1	CALL_11
0xbdb	          0x488b08	                    mov rcx, qword [rax]	       392	packed-backend.c	FUNCTION_11	FOR_1	CALL_11
0xbde	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       392	packed-backend.c	FUNCTION_11	FOR_1	CALL_11
0xbe2	          0x4889ce	                            mov rsi, rcx	       392	packed-backend.c	FUNCTION_11	FOR_1	CALL_11
0xbe5	          0x4889c7	                            mov rdi, rax	       392	packed-backend.c	FUNCTION_11	FOR_1	CALL_11
0xbe8	      0xe800000000	                          call 0x4000c2d	       392	packed-backend.c	FUNCTION_11	FOR_1	CALL_11
0xbed	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       393	packed-backend.c	FUNCTION_11	FOR_1
0xbf1	        0x48c1e004	                              shl rax, 4	       393	packed-backend.c	FUNCTION_11	FOR_1
0xbf5	          0x4889c2	                            mov rdx, rax	       393	packed-backend.c	FUNCTION_11	FOR_1
0xbf8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       393	packed-backend.c	FUNCTION_11	FOR_1
0xbfc	          0x4801d0	                            add rax, rdx	       393	packed-backend.c	FUNCTION_11	FOR_1
0xbff	        0x488b4008	                mov rax, qword [rax + 8]	       393	packed-backend.c	FUNCTION_11	FOR_1
0xc03	        0x480145d8	            add qword [rbp - 0x28], rax 	       393	packed-backend.c	FUNCTION_11	FOR_1
0xc07	      0x488345d001	               add qword [rbp - 0x30], 1	       391	packed-backend.c	FUNCTION_11	FOR_1
0xc0c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       391	packed-backend.c	FUNCTION_11	FOR_1
0xc10	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	       391	packed-backend.c	FUNCTION_11	FOR_1
0xc14	            0x729d	                            jb 0x4000bf3	       391	packed-backend.c	FUNCTION_11	FOR_1
0xc16	        0x488b4598	             mov rax, qword [rbp - 0x68]	       400	packed-backend.c	FUNCTION_11	CALL_12
0xc1a	          0x4889c7	                            mov rdi, rax	       400	packed-backend.c	FUNCTION_11	CALL_12
0xc1d	      0xe87ef7ffff	          call sym.clear_snapshot_buffer	       400	packed-backend.c	FUNCTION_11	CALL_12
0xc22	        0x488b4598	             mov rax, qword [rbp - 0x68]	       401	packed-backend.c	FUNCTION_11
0xc26	        0x488b55f8	                mov rdx, qword [rbp - 8]	       401	packed-backend.c	FUNCTION_11
0xc2a	        0x48895018	             mov qword [rax + 0x18], rdx	       401	packed-backend.c	FUNCTION_11
0xc2e	        0x488b4598	             mov rax, qword [rbp - 0x68]	       401	packed-backend.c	FUNCTION_11
0xc32	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       401	packed-backend.c	FUNCTION_11
0xc36	        0x488b4598	             mov rax, qword [rbp - 0x68]	       401	packed-backend.c	FUNCTION_11
0xc3a	        0x48895010	             mov qword [rax + 0x10], rdx	       401	packed-backend.c	FUNCTION_11
0xc3e	        0x488b55f8	                mov rdx, qword [rbp - 8]	       402	packed-backend.c	FUNCTION_11
0xc42	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       402	packed-backend.c	FUNCTION_11
0xc46	          0x4801c2	                            add rdx, rax	       402	packed-backend.c	FUNCTION_11
0xc49	        0x488b4598	             mov rax, qword [rbp - 0x68]	       402	packed-backend.c	FUNCTION_11
0xc4d	        0x48895020	             mov qword [rax + 0x20], rdx	       402	packed-backend.c	FUNCTION_11
0xc51	            0xeb01	                           jmp 0x4000c94	       402	packed-backend.c	FUNCTION_11
0xc53	              0x90	                                     nop	       380	packed-backend.c	FUNCTION_11	IF_7
0xc54	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       405	packed-backend.c	FUNCTION_11	CALL_13
0xc58	          0x4889c7	                            mov rdi, rax	       405	packed-backend.c	FUNCTION_11	CALL_13
0xc5b	      0xe800000000	                          call 0x4000ca0	       405	packed-backend.c	FUNCTION_11	CALL_13
0xc60	            0xeb01	                           jmp 0x4000ca3	       405	packed-backend.c	FUNCTION_11	CALL_13
0xc62	              0x90	                                     nop	       332	packed-backend.c	FUNCTION_11	IF_1
0xc63	              0xc9	                                   leave	       406	packed-backend.c	FUNCTION_11
0xc64	              0xc3	                                     ret	       406	packed-backend.c	FUNCTION_11
packed_refs_unlock	functions,0:IF,1:DO,0:FOR,0:WHILE,0:CALL,4:ELSE,0:SWITCH,0	26
0x1db9	              0x55	                                push rbp	      1032	packed-backend.c	FUNCTION_28
0x1dba	          0x4889e5	                            mov rbp, rsp	      1032	packed-backend.c	FUNCTION_28
0x1dbd	        0x4883ec20	                           sub rsp, 0x20	      1032	packed-backend.c	FUNCTION_28
0x1dc1	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1032	packed-backend.c	FUNCTION_28
0x1dc5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1033	packed-backend.c	FUNCTION_28	CALL_1
0x1dc9	      0xba00000000	                              mov edx, 0	      1033	packed-backend.c	FUNCTION_28	CALL_1
0x1dce	      0xbe03000000	                              mov esi, 3	      1033	packed-backend.c	FUNCTION_28	CALL_1
0x1dd3	          0x4889c7	                            mov rdi, rax	      1033	packed-backend.c	FUNCTION_28	CALL_1
0x1dd6	      0xe84de7ffff	                call sym.packed_downcast	      1033	packed-backend.c	FUNCTION_28	CALL_1
0x1ddb	        0x488945f8	                mov qword [rbp - 8], rax	      1033	packed-backend.c	FUNCTION_28	CALL_1
0x1ddf	        0x488b45f8	                mov rax, qword [rbp - 8]	      1038	packed-backend.c	FUNCTION_28	IF_1	CALL_2
0x1de3	        0x4883c020	                           add rax, 0x20	      1038	packed-backend.c	FUNCTION_28	IF_1	CALL_2
0x1de7	          0x4889c7	                            mov rdi, rax	      1038	packed-backend.c	FUNCTION_28	IF_1	CALL_2
0x1dea	      0xe840e5ffff	            call sym.is_lock_file_locked	      1038	packed-backend.c	FUNCTION_28	IF_1	CALL_2
0x1def	            0x85c0	                           test eax, eax	      1038	packed-backend.c	FUNCTION_28	IF_1	CALL_2
0x1df1	            0x750f	                           jne 0x4001e42	      1038	packed-backend.c	FUNCTION_28	IF_1	CALL_2
0x1df3	      0xbf00000000	                              mov edi, 0	      1039	packed-backend.c	FUNCTION_28	CALL_3
0x1df8	      0xb800000000	                              mov eax, 0	      1039	packed-backend.c	FUNCTION_28	CALL_3
0x1dfd	      0xe800000000	                          call 0x4001e42	      1039	packed-backend.c	FUNCTION_28	CALL_3
0x1e02	        0x488b45f8	                mov rax, qword [rbp - 8]	      1040	packed-backend.c	FUNCTION_28	CALL_4
0x1e06	        0x4883c020	                           add rax, 0x20	      1040	packed-backend.c	FUNCTION_28	CALL_4
0x1e0a	          0x4889c7	                            mov rdi, rax	      1040	packed-backend.c	FUNCTION_28	CALL_4
0x1e0d	      0xe857e5ffff	             call sym.rollback_lock_file	      1040	packed-backend.c	FUNCTION_28	CALL_4
0x1e12	              0x90	                                     nop	      1041	packed-backend.c	FUNCTION_28
0x1e13	              0xc9	                                   leave	      1041	packed-backend.c	FUNCTION_28
0x1e14	              0xc3	                                     ret	      1041	packed-backend.c	FUNCTION_28
packed_downcast	functions,0:IF,2:DO,0:FOR,0:WHILE,0:CALL,2:ELSE,0:SWITCH,0	36
0x528	              0x55	                                push rbp	       220	packed-backend.c	FUNCTION_5
0x529	          0x4889e5	                            mov rbp, rsp	       220	packed-backend.c	FUNCTION_5
0x52c	        0x4883ec30	                           sub rsp, 0x30	       220	packed-backend.c	FUNCTION_5
0x530	        0x48897de8	             mov qword [rbp - 0x18], rdi	       220	packed-backend.c	FUNCTION_5
0x534	          0x8975e4	             mov dword [rbp - 0x1c], esi	       220	packed-backend.c	FUNCTION_5
0x537	        0x488955d8	             mov qword [rbp - 0x28], rdx	       220	packed-backend.c	FUNCTION_5
0x53b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       223	packed-backend.c	FUNCTION_5	IF_1
0x53f	          0x488b00	                    mov rax, qword [rax]	       223	packed-backend.c	FUNCTION_5	IF_1
0x542	    0x483d00000000	                              cmp rax, 0	       223	packed-backend.c	FUNCTION_5	IF_1
0x548	            0x7421	                            je 0x40005ab	       223	packed-backend.c	FUNCTION_5	IF_1
0x54a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       225	packed-backend.c	FUNCTION_5	IF_1
0x54e	          0x488b00	                    mov rax, qword [rax]	       225	packed-backend.c	FUNCTION_5	IF_1
0x551	        0x488b4008	                mov rax, qword [rax + 8]	       224	packed-backend.c	FUNCTION_5	IF_1	CALL_1
0x555	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       224	packed-backend.c	FUNCTION_5	IF_1	CALL_1
0x559	          0x4889c6	                            mov rsi, rax	       224	packed-backend.c	FUNCTION_5	IF_1	CALL_1
0x55c	      0xbf00000000	                              mov edi, 0	       224	packed-backend.c	FUNCTION_5	IF_1	CALL_1
0x561	      0xb800000000	                              mov eax, 0	       224	packed-backend.c	FUNCTION_5	IF_1	CALL_1
0x566	      0xe800000000	                          call 0x40005ab	       224	packed-backend.c	FUNCTION_5	IF_1	CALL_1
0x56b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       227	packed-backend.c	FUNCTION_5
0x56f	        0x488945f8	                mov qword [rbp - 8], rax	       227	packed-backend.c	FUNCTION_5
0x573	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	packed-backend.c	FUNCTION_5	IF_2
0x577	          0x8b4008	                mov eax, dword [rax + 8]	       229	packed-backend.c	FUNCTION_5	IF_2
0x57a	          0x2345e4	             and eax, dword [rbp - 0x1c]	       229	packed-backend.c	FUNCTION_5	IF_2
0x57d	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	       229	packed-backend.c	FUNCTION_5	IF_2
0x580	            0x7420	                            je 0x40005e2	       229	packed-backend.c	FUNCTION_5	IF_2
0x582	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	packed-backend.c	FUNCTION_5	IF_2	CALL_2
0x586	          0x8b4808	                mov ecx, dword [rax + 8]	       230	packed-backend.c	FUNCTION_5	IF_2	CALL_2
0x589	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       230	packed-backend.c	FUNCTION_5	IF_2	CALL_2
0x58c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       230	packed-backend.c	FUNCTION_5	IF_2	CALL_2
0x590	          0x4889c6	                            mov rsi, rax	       230	packed-backend.c	FUNCTION_5	IF_2	CALL_2
0x593	      0xbf00000000	                              mov edi, 0	       230	packed-backend.c	FUNCTION_5	IF_2	CALL_2
0x598	      0xb800000000	                              mov eax, 0	       230	packed-backend.c	FUNCTION_5	IF_2	CALL_2
0x59d	      0xe800000000	                          call 0x40005e2	       230	packed-backend.c	FUNCTION_5	IF_2	CALL_2
0x5a2	        0x488b45f8	                mov rax, qword [rbp - 8]	       233	packed-backend.c	FUNCTION_5
0x5a6	              0xc9	                                   leave	       234	packed-backend.c	FUNCTION_5
0x5a7	              0xc3	                                     ret	       234	packed-backend.c	FUNCTION_5
skip_prefix	functions,0:IF,1:DO,1:FOR,0:WHILE,0:CALL,0:ELSE,0:SWITCH,0	27
0xb	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_56
0xc	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_56
0xf	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_56
0x13	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_56
0x17	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_56
0x1b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_56	DO_1	IF_1
0x1f	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_56	DO_1	IF_1
0x22	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_56	DO_1	IF_1
0x24	            0x7512	                           jne 0x4000078	       484	git-compat-util.h	FUNCTION_56	DO_1	IF_1
0x26	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_56	DO_1	IF_1
0x2a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_56	DO_1	IF_1
0x2e	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_56	DO_1	IF_1
0x31	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_56	DO_1	IF_1
0x36	            0xeb27	                           jmp 0x400009f	       486	git-compat-util.h	FUNCTION_56	DO_1	IF_1
0x38	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_56	DO_1
0x3c	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_56	DO_1
0x40	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_56	DO_1
0x44	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_56	DO_1
0x47	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_56	DO_1
0x4b	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_56	DO_1
0x4f	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_56	DO_1
0x53	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_56	DO_1
0x56	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_56	DO_1
0x58	            0x74c1	                            je 0x400005b	       488	git-compat-util.h	FUNCTION_56	DO_1
0x5a	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_56
0x5f	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_56
0x60	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_56
packed_ref_iterator_advance	functions,0:IF,3:DO,0:FOR,0:WHILE,1:CALL,4:ELSE,0:SWITCH,0	53
0x1917	              0x55	                                push rbp	       854	packed-backend.c	FUNCTION_22
0x1918	          0x4889e5	                            mov rbp, rsp	       854	packed-backend.c	FUNCTION_22
0x191b	        0x4883ec20	                           sub rsp, 0x20	       854	packed-backend.c	FUNCTION_22
0x191f	        0x48897de8	             mov qword [rbp - 0x18], rdi	       854	packed-backend.c	FUNCTION_22
0x1923	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       855	packed-backend.c	FUNCTION_22
0x1927	        0x488945f8	                mov qword [rbp - 8], rax	       855	packed-backend.c	FUNCTION_22
0x192b	            0xeb6a	                           jmp 0x40019d7	       859	packed-backend.c	FUNCTION_22	WHILE_1	CALL_1
0x192d	        0x488b45f8	                mov rax, qword [rbp - 8]	       860	packed-backend.c	FUNCTION_22	WHILE_1	IF_1
0x1931	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	       860	packed-backend.c	FUNCTION_22	WHILE_1	IF_1
0x1937	          0x83e002	                              and eax, 2	       860	packed-backend.c	FUNCTION_22	WHILE_1	IF_1
0x193a	            0x85c0	                           test eax, eax	       860	packed-backend.c	FUNCTION_22	WHILE_1	IF_1
0x193c	            0x7416	                            je 0x4001994	       860	packed-backend.c	FUNCTION_22	WHILE_1	IF_1
0x193e	        0x488b45f8	                mov rax, qword [rbp - 8]	       861	packed-backend.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x1942	        0x488b4010	            mov rax, qword [rax + 0x10] 	       861	packed-backend.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x1946	          0x4889c7	                            mov rdi, rax	       861	packed-backend.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x1949	      0xe800000000	                          call 0x400198e	       861	packed-backend.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x194e	            0x85c0	                           test eax, eax	       860	packed-backend.c	FUNCTION_22	WHILE_1	IF_1
0x1950	            0x7402	                            je 0x4001994	       860	packed-backend.c	FUNCTION_22	WHILE_1	IF_1
0x1952	            0xeb43	                           jmp 0x40019d7	       862	packed-backend.c	FUNCTION_22	WHILE_1	IF_1
0x1954	        0x488b45f8	                mov rax, qword [rbp - 8]	       864	packed-backend.c	FUNCTION_22	WHILE_1	IF_2
0x1958	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	       864	packed-backend.c	FUNCTION_22	WHILE_1	IF_2
0x195e	          0x83e001	                              and eax, 1	       864	packed-backend.c	FUNCTION_22	WHILE_1	IF_2
0x1961	            0x85c0	                           test eax, eax	       864	packed-backend.c	FUNCTION_22	WHILE_1	IF_2
0x1963	            0x752b	                           jne 0x40019d0	       864	packed-backend.c	FUNCTION_22	WHILE_1	IF_2
0x1965	        0x488b45f8	                mov rax, qword [rbp - 8]	       865	packed-backend.c	FUNCTION_22	WHILE_1	IF_2	CALL_3
0x1969	    0x8b9080000000	            mov edx, dword [rax + 0x80] 	       865	packed-backend.c	FUNCTION_22	WHILE_1	IF_2	CALL_3
0x196f	        0x488b45f8	                mov rax, qword [rbp - 8]	       865	packed-backend.c	FUNCTION_22	WHILE_1	IF_2	CALL_3
0x1973	        0x488d4840	                   lea rcx, [rax + 0x40]	       865	packed-backend.c	FUNCTION_22	WHILE_1	IF_2	CALL_3
0x1977	        0x488b45f8	                mov rax, qword [rbp - 8]	       865	packed-backend.c	FUNCTION_22	WHILE_1	IF_2	CALL_3
0x197b	        0x488b4010	            mov rax, qword [rax + 0x10] 	       865	packed-backend.c	FUNCTION_22	WHILE_1	IF_2	CALL_3
0x197f	          0x4889ce	                            mov rsi, rcx	       865	packed-backend.c	FUNCTION_22	WHILE_1	IF_2	CALL_3
0x1982	          0x4889c7	                            mov rdi, rax	       865	packed-backend.c	FUNCTION_22	WHILE_1	IF_2	CALL_3
0x1985	      0xe800000000	                          call 0x40019ca	       865	packed-backend.c	FUNCTION_22	WHILE_1	IF_2	CALL_3
0x198a	            0x85c0	                           test eax, eax	       864	packed-backend.c	FUNCTION_22	WHILE_1	IF_2
0x198c	            0x7502	                           jne 0x40019d0	       864	packed-backend.c	FUNCTION_22	WHILE_1	IF_2
0x198e	            0xeb07	                           jmp 0x40019d7	       867	packed-backend.c	FUNCTION_22	WHILE_1	IF_2
0x1990	      0xb800000000	                              mov eax, 0	       869	packed-backend.c	FUNCTION_22	WHILE_1
0x1995	            0xeb30	                           jmp 0x4001a07	       869	packed-backend.c	FUNCTION_22	WHILE_1
0x1997	        0x488b45f8	                mov rax, qword [rbp - 8]	       859	packed-backend.c	FUNCTION_22	WHILE_1	CALL_1
0x199b	          0x4889c7	                            mov rdi, rax	       859	packed-backend.c	FUNCTION_22	WHILE_1	CALL_1
0x199e	      0xe8bbfbffff	                    call sym.next_record	       859	packed-backend.c	FUNCTION_22	WHILE_1	CALL_1
0x19a3	          0x8945f4	              mov dword [rbp - 0xc], eax	       859	packed-backend.c	FUNCTION_22	WHILE_1	CALL_1
0x19a6	        0x837df400	                cmp dword [rbp - 0xc], 0	       859	packed-backend.c	FUNCTION_22	WHILE_1	CALL_1
0x19aa	            0x7481	                            je 0x400196d	       859	packed-backend.c	FUNCTION_22	WHILE_1	CALL_1
0x19ac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       872	packed-backend.c	FUNCTION_22	IF_3	CALL_4
0x19b0	          0x4889c7	                            mov rdi, rax	       872	packed-backend.c	FUNCTION_22	IF_3	CALL_4
0x19b3	      0xe800000000	                          call 0x40019f8	       872	packed-backend.c	FUNCTION_22	IF_3	CALL_4
0x19b8	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       872	packed-backend.c	FUNCTION_22	IF_3	CALL_4
0x19bb	            0x7407	                            je 0x4001a04	       872	packed-backend.c	FUNCTION_22	IF_3	CALL_4
0x19bd	    0xc745f4feffff	      mov dword [rbp - 0xc], 0xfffffffe 	       873	packed-backend.c	FUNCTION_22	IF_3
0x19c4	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       875	packed-backend.c	FUNCTION_22
0x19c7	              0xc9	                                   leave	       876	packed-backend.c	FUNCTION_22
0x19c8	              0xc3	                                     ret	       876	packed-backend.c	FUNCTION_22
cmp_packed_ref_records	functions,0:IF,3:DO,0:FOR,0:WHILE,1:CALL,0:ELSE,1:SWITCH,0	56
0x6ea	              0x55	                                push rbp	       275	packed-backend.c	FUNCTION_9
0x6eb	          0x4889e5	                            mov rbp, rsp	       275	packed-backend.c	FUNCTION_9
0x6ee	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       275	packed-backend.c	FUNCTION_9
0x6f2	        0x488975d0	             mov qword [rbp - 0x30], rsi	       275	packed-backend.c	FUNCTION_9
0x6f6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       276	packed-backend.c	FUNCTION_9
0x6fa	        0x488945f0	             mov qword [rbp - 0x10], rax	       276	packed-backend.c	FUNCTION_9
0x6fe	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       276	packed-backend.c	FUNCTION_9
0x702	        0x488945f8	                mov qword [rbp - 8], rax	       276	packed-backend.c	FUNCTION_9
0x706	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       277	packed-backend.c	FUNCTION_9
0x70a	          0x488b00	                    mov rax, qword [rax]	       277	packed-backend.c	FUNCTION_9
0x70d	        0x4883c029	                           add rax, 0x29	       277	packed-backend.c	FUNCTION_9
0x711	        0x488945e0	             mov qword [rbp - 0x20], rax	       277	packed-backend.c	FUNCTION_9
0x715	        0x488b45f8	                mov rax, qword [rbp - 8]	       278	packed-backend.c	FUNCTION_9
0x719	          0x488b00	                    mov rax, qword [rax]	       278	packed-backend.c	FUNCTION_9
0x71c	        0x4883c029	                           add rax, 0x29	       278	packed-backend.c	FUNCTION_9
0x720	        0x488945e8	             mov qword [rbp - 0x18], rax	       278	packed-backend.c	FUNCTION_9
0x724	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       281	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x728	           0xfb600	                   movzx eax, byte [rax]	       281	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x72b	            0x3c0a	                             cmp al, 0xa	       281	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x72d	            0x7519	                           jne 0x4000788	       281	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x72f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       282	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x733	           0xfb600	                   movzx eax, byte [rax]	       282	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x736	            0x3c0a	                             cmp al, 0xa	       282	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x738	            0x7507	                           jne 0x4000781	       282	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x73a	      0xb800000000	                              mov eax, 0	       282	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x73f	            0xeb59	                           jmp 0x40007da	       282	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x741	      0xb8ffffffff	                     mov eax, 0xffffffff	       282	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x746	            0xeb52	                           jmp 0x40007da	       282	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x748	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       283	packed-backend.c	FUNCTION_9	WHILE_1	IF_2
0x74c	           0xfb610	                   movzx edx, byte [rax]	       283	packed-backend.c	FUNCTION_9	WHILE_1	IF_2
0x74f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       283	packed-backend.c	FUNCTION_9	WHILE_1	IF_2
0x753	           0xfb600	                   movzx eax, byte [rax]	       283	packed-backend.c	FUNCTION_9	WHILE_1	IF_2
0x756	            0x38c2	                              cmp dl, al	       283	packed-backend.c	FUNCTION_9	WHILE_1	IF_2
0x758	            0x7434	                            je 0x40007ce	       283	packed-backend.c	FUNCTION_9	WHILE_1	IF_2
0x75a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       284	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	IF_3
0x75e	           0xfb600	                   movzx eax, byte [rax]	       284	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	IF_3
0x761	            0x3c0a	                             cmp al, 0xa	       284	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	IF_3
0x763	            0x7507	                           jne 0x40007ac	       284	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	IF_3
0x765	      0xb801000000	                              mov eax, 1	       285	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	IF_3
0x76a	            0xeb2e	                           jmp 0x40007da	       285	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	IF_3
0x76c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       287	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	ELSE_1
0x770	           0xfb600	                   movzx eax, byte [rax]	       287	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	ELSE_1
0x773	            0x89c2	                            mov edx, eax	       287	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	ELSE_1
0x775	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       287	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	ELSE_1
0x779	           0xfb600	                   movzx eax, byte [rax]	       287	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	ELSE_1
0x77c	            0x38c2	                              cmp dl, al	       287	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	ELSE_1
0x77e	            0x7307	                           jae 0x40007c7	       287	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	ELSE_1
0x780	      0xb8ffffffff	                     mov eax, 0xffffffff	       287	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	ELSE_1
0x785	            0xeb13	                           jmp 0x40007da	       287	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	ELSE_1
0x787	      0xb801000000	                              mov eax, 1	       287	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	ELSE_1
0x78c	            0xeb0c	                           jmp 0x40007da	       287	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	ELSE_1
0x78e	      0x488345e001	               add qword [rbp - 0x20], 1	       289	packed-backend.c	FUNCTION_9	WHILE_1
0x793	      0x488345e801	               add qword [rbp - 0x18], 1	       290	packed-backend.c	FUNCTION_9	WHILE_1
0x798	            0xeb8a	                           jmp 0x4000764	       291	packed-backend.c	FUNCTION_9	WHILE_1
0x79a	              0x5d	                                 pop rbp	       292	packed-backend.c	FUNCTION_9
0x79b	              0xc3	                                     ret	       292	packed-backend.c	FUNCTION_9
packed_reflog_iterator_begin	functions,0:IF,0:DO,0:FOR,0:WHILE,0:CALL,1:ELSE,0:SWITCH,0	7
0x2c05	              0x55	                                push rbp	      1584	packed-backend.c	FUNCTION_43
0x2c06	          0x4889e5	                            mov rbp, rsp	      1584	packed-backend.c	FUNCTION_43
0x2c09	        0x4883ec10	                           sub rsp, 0x10	      1584	packed-backend.c	FUNCTION_43
0x2c0d	        0x48897df8	                mov qword [rbp - 8], rdi	      1584	packed-backend.c	FUNCTION_43
0x2c11	      0xe800000000	                          call 0x4002c56	      1585	packed-backend.c	FUNCTION_43	CALL_1
0x2c16	              0xc9	                                   leave	      1586	packed-backend.c	FUNCTION_43
0x2c17	              0xc3	                                     ret	      1586	packed-backend.c	FUNCTION_43
is_lock_file_locked	functions,0:IF,0:DO,0:FOR,0:WHILE,0:CALL,1:ELSE,0:SWITCH,0	10
0x32f	              0x55	                                push rbp	       182	lockfile.h	FUNCTION_78
0x330	          0x4889e5	                            mov rbp, rsp	       182	lockfile.h	FUNCTION_78
0x333	        0x4883ec08	                              sub rsp, 8	       182	lockfile.h	FUNCTION_78
0x337	        0x48897df8	                mov qword [rbp - 8], rdi	       182	lockfile.h	FUNCTION_78
0x33b	        0x488b45f8	                mov rax, qword [rbp - 8]	       183	lockfile.h	FUNCTION_78	CALL_1
0x33f	          0x488b00	                    mov rax, qword [rax]	       183	lockfile.h	FUNCTION_78	CALL_1
0x342	          0x4889c7	                            mov rdi, rax	       183	lockfile.h	FUNCTION_78	CALL_1
0x345	      0xe8bdffffff	             call sym.is_tempfile_active	       183	lockfile.h	FUNCTION_78	CALL_1
0x34a	              0xc9	                                   leave	       184	lockfile.h	FUNCTION_78
0x34b	              0xc3	                                     ret	       184	lockfile.h	FUNCTION_78
packed_copy_ref	functions,0:IF,0:DO,0:FOR,0:WHILE,0:CALL,1:ELSE,0:SWITCH,0	10
0x2bde	              0x55	                                push rbp	      1579	packed-backend.c	FUNCTION_42
0x2bdf	          0x4889e5	                            mov rbp, rsp	      1579	packed-backend.c	FUNCTION_42
0x2be2	        0x4883ec20	                           sub rsp, 0x20	      1579	packed-backend.c	FUNCTION_42
0x2be6	        0x48897df8	                mov qword [rbp - 8], rdi	      1579	packed-backend.c	FUNCTION_42
0x2bea	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1579	packed-backend.c	FUNCTION_42
0x2bee	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1579	packed-backend.c	FUNCTION_42
0x2bf2	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1579	packed-backend.c	FUNCTION_42
0x2bf6	      0xbf00000000	                              mov edi, 0	      1580	packed-backend.c	FUNCTION_42	CALL_1
0x2bfb	      0xb800000000	                              mov eax, 0	      1580	packed-backend.c	FUNCTION_42	CALL_1
0x2c00	      0xe800000000	   call sym.packed_reflog_iterator_begin	      1580	packed-backend.c	FUNCTION_42	CALL_1
release_snapshot	functions,0:IF,1:DO,0:FOR,0:WHILE,0:CALL,3:ELSE,1:SWITCH,0	28
0x453	              0x55	                                push rbp	       185	packed-backend.c	FUNCTION_3
0x454	          0x4889e5	                            mov rbp, rsp	       185	packed-backend.c	FUNCTION_3
0x457	        0x4883ec10	                           sub rsp, 0x10	       185	packed-backend.c	FUNCTION_3
0x45b	        0x48897df8	                mov qword [rbp - 8], rdi	       185	packed-backend.c	FUNCTION_3
0x45f	        0x488b45f8	                mov rax, qword [rbp - 8]	       186	packed-backend.c	FUNCTION_3	IF_1
0x463	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       186	packed-backend.c	FUNCTION_3	IF_1
0x466	          0x8d50ff	                      lea edx, [rax - 1]	       186	packed-backend.c	FUNCTION_3	IF_1
0x469	        0x488b45f8	                mov rax, qword [rbp - 8]	       186	packed-backend.c	FUNCTION_3	IF_1
0x46d	          0x89502c	             mov dword [rax + 0x2c], edx	       186	packed-backend.c	FUNCTION_3	IF_1
0x470	        0x488b45f8	                mov rax, qword [rbp - 8]	       186	packed-backend.c	FUNCTION_3	IF_1
0x474	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       186	packed-backend.c	FUNCTION_3	IF_1
0x477	            0x85c0	                           test eax, eax	       186	packed-backend.c	FUNCTION_3	IF_1
0x479	            0x752f	                           jne 0x40004ea	       186	packed-backend.c	FUNCTION_3	IF_1
0x47b	        0x488b45f8	                mov rax, qword [rbp - 8]	       187	packed-backend.c	FUNCTION_3	IF_1	CALL_1
0x47f	        0x4883c030	                           add rax, 0x30	       187	packed-backend.c	FUNCTION_3	IF_1	CALL_1
0x483	          0x4889c7	                            mov rdi, rax	       187	packed-backend.c	FUNCTION_3	IF_1	CALL_1
0x486	      0xe800000000	                          call 0x40004cb	       187	packed-backend.c	FUNCTION_3	IF_1	CALL_1
0x48b	        0x488b45f8	                mov rax, qword [rbp - 8]	       188	packed-backend.c	FUNCTION_3	IF_1	CALL_2
0x48f	          0x4889c7	                            mov rdi, rax	       188	packed-backend.c	FUNCTION_3	IF_1	CALL_2
0x492	      0xe809ffffff	          call sym.clear_snapshot_buffer	       188	packed-backend.c	FUNCTION_3	IF_1	CALL_2
0x497	        0x488b45f8	                mov rax, qword [rbp - 8]	       189	packed-backend.c	FUNCTION_3	IF_1	CALL_3
0x49b	          0x4889c7	                            mov rdi, rax	       189	packed-backend.c	FUNCTION_3	IF_1	CALL_3
0x49e	      0xe800000000	                          call 0x40004e3	       189	packed-backend.c	FUNCTION_3	IF_1	CALL_3
0x4a3	      0xb801000000	                              mov eax, 1	       190	packed-backend.c	FUNCTION_3	IF_1
0x4a8	            0xeb05	                           jmp 0x40004ef	       190	packed-backend.c	FUNCTION_3	IF_1
0x4aa	      0xb800000000	                              mov eax, 0	       192	packed-backend.c	FUNCTION_3	ELSE_1
0x4af	              0xc9	                                   leave	       194	packed-backend.c	FUNCTION_3
0x4b0	              0xc3	                                     ret	       194	packed-backend.c	FUNCTION_3
packed_transaction_prepare	functions,0:IF,4:DO,0:FOR,1:WHILE,0:CALL,10:ELSE,0:SWITCH,0	103
0x26d5	              0x55	                                push rbp	      1398	packed-backend.c	FUNCTION_34
0x26d6	          0x4889e5	                            mov rbp, rsp	      1398	packed-backend.c	FUNCTION_34
0x26d9	        0x4883ec50	                           sub rsp, 0x50	      1398	packed-backend.c	FUNCTION_34
0x26dd	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1398	packed-backend.c	FUNCTION_34
0x26e1	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1398	packed-backend.c	FUNCTION_34
0x26e5	        0x488955b8	             mov qword [rbp - 0x48], rdx	      1398	packed-backend.c	FUNCTION_34
0x26e9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1399	packed-backend.c	FUNCTION_34	CALL_1
0x26ed	      0xba00000000	                              mov edx, 0	      1399	packed-backend.c	FUNCTION_34	CALL_1
0x26f2	      0xbe07000000	                              mov esi, 7	      1399	packed-backend.c	FUNCTION_34	CALL_1
0x26f7	          0x4889c7	                            mov rdi, rax	      1399	packed-backend.c	FUNCTION_34	CALL_1
0x26fa	      0xe829deffff	                call sym.packed_downcast	      1399	packed-backend.c	FUNCTION_34	CALL_1
0x26ff	        0x488945e0	             mov qword [rbp - 0x20], rax	      1399	packed-backend.c	FUNCTION_34	CALL_1
0x2703	    0xc745d4feffff	     mov dword [rbp - 0x2c], 0xfffffffe 	      1405	packed-backend.c	FUNCTION_34
0x270a	      0xbe28000000	                           mov esi, 0x28	      1416	packed-backend.c	FUNCTION_34	CALL_2
0x270f	      0xbf01000000	                              mov edi, 1	      1416	packed-backend.c	FUNCTION_34	CALL_2
0x2714	      0xe800000000	                          call 0x4002759	      1416	packed-backend.c	FUNCTION_34	CALL_2
0x2719	        0x488945e8	             mov qword [rbp - 0x18], rax	      1416	packed-backend.c	FUNCTION_34	CALL_2
0x271d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1417	packed-backend.c	FUNCTION_34	CALL_3
0x2721	        0x4883c008	                              add rax, 8	      1417	packed-backend.c	FUNCTION_34	CALL_3
0x2725	      0xbe00000000	                              mov esi, 0	      1417	packed-backend.c	FUNCTION_34	CALL_3
0x272a	          0x4889c7	                            mov rdi, rax	      1417	packed-backend.c	FUNCTION_34	CALL_3
0x272d	      0xe800000000	                          call 0x4002772	      1417	packed-backend.c	FUNCTION_34	CALL_3
0x2732	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1419	packed-backend.c	FUNCTION_34
0x2736	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1419	packed-backend.c	FUNCTION_34
0x273a	        0x48895028	             mov qword [rax + 0x28], rdx	      1419	packed-backend.c	FUNCTION_34
0x273e	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      1425	packed-backend.c	FUNCTION_34	FOR_1
0x2746	            0xeb4a	                           jmp 0x40027d2	      1425	packed-backend.c	FUNCTION_34	FOR_1
0x2748	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1426	packed-backend.c	FUNCTION_34	FOR_1
0x274c	        0x488b4008	                mov rax, qword [rax + 8]	      1426	packed-backend.c	FUNCTION_34	FOR_1
0x2750	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1426	packed-backend.c	FUNCTION_34	FOR_1
0x2754	        0x48c1e203	                              shl rdx, 3	      1426	packed-backend.c	FUNCTION_34	FOR_1
0x2758	          0x4801d0	                            add rax, rdx	      1426	packed-backend.c	FUNCTION_34	FOR_1
0x275b	          0x488b00	                    mov rax, qword [rax]	      1426	packed-backend.c	FUNCTION_34	FOR_1
0x275e	        0x488945f0	             mov qword [rbp - 0x10], rax	      1426	packed-backend.c	FUNCTION_34	FOR_1
0x2762	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1428	packed-backend.c	FUNCTION_34	FOR_1	CALL_4
0x2766	        0x488d5050	                   lea rdx, [rax + 0x50]	      1428	packed-backend.c	FUNCTION_34	FOR_1	CALL_4
0x276a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1428	packed-backend.c	FUNCTION_34	FOR_1	CALL_4
0x276e	        0x4883c008	                              add rax, 8	      1428	packed-backend.c	FUNCTION_34	FOR_1	CALL_4
0x2772	          0x4889d6	                            mov rsi, rdx	      1427	packed-backend.c	FUNCTION_34	FOR_1
0x2775	          0x4889c7	                            mov rdi, rax	      1427	packed-backend.c	FUNCTION_34	FOR_1
0x2778	      0xe800000000	                          call 0x40027bd	      1427	packed-backend.c	FUNCTION_34	FOR_1
0x277d	        0x488945f8	                mov qword [rbp - 8], rax	      1427	packed-backend.c	FUNCTION_34	FOR_1
0x2781	        0x488b45f8	                mov rax, qword [rbp - 8]	      1431	packed-backend.c	FUNCTION_34	FOR_1
0x2785	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1431	packed-backend.c	FUNCTION_34	FOR_1
0x2789	        0x48895008	                mov qword [rax + 8], rdx	      1431	packed-backend.c	FUNCTION_34	FOR_1
0x278d	      0x488345d801	               add qword [rbp - 0x28], 1	      1425	packed-backend.c	FUNCTION_34	FOR_1
0x2792	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1425	packed-backend.c	FUNCTION_34	FOR_1
0x2796	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1425	packed-backend.c	FUNCTION_34	FOR_1
0x279a	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1425	packed-backend.c	FUNCTION_34	FOR_1
0x279e	            0x77a8	                            ja 0x4002788	      1425	packed-backend.c	FUNCTION_34	FOR_1
0x27a0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1433	packed-backend.c	FUNCTION_34	CALL_5
0x27a4	        0x4883c008	                              add rax, 8	      1433	packed-backend.c	FUNCTION_34	CALL_5
0x27a8	          0x4889c7	                            mov rdi, rax	      1433	packed-backend.c	FUNCTION_34	CALL_5
0x27ab	      0xe800000000	                          call 0x40027f0	      1433	packed-backend.c	FUNCTION_34	CALL_5
0x27b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1435	packed-backend.c	FUNCTION_34	IF_1	CALL_6
0x27b4	        0x488d5008	                      lea rdx, [rax + 8]	      1435	packed-backend.c	FUNCTION_34	IF_1	CALL_6
0x27b8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1435	packed-backend.c	FUNCTION_34	IF_1	CALL_6
0x27bc	          0x4889c6	                            mov rsi, rax	      1435	packed-backend.c	FUNCTION_34	IF_1	CALL_6
0x27bf	          0x4889d7	                            mov rdi, rdx	      1435	packed-backend.c	FUNCTION_34	IF_1	CALL_6
0x27c2	      0xe800000000	                          call 0x4002807	      1435	packed-backend.c	FUNCTION_34	IF_1	CALL_6
0x27c7	            0x85c0	                           test eax, eax	      1435	packed-backend.c	FUNCTION_34	IF_1	CALL_6
0x27c9	            0x7568	                           jne 0x4002873	      1435	packed-backend.c	FUNCTION_34	IF_1	CALL_6
0x27cb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1438	packed-backend.c	FUNCTION_34	IF_2	CALL_7
0x27cf	        0x4883c020	                           add rax, 0x20	      1438	packed-backend.c	FUNCTION_34	IF_2	CALL_7
0x27d3	          0x4889c7	                            mov rdi, rax	      1438	packed-backend.c	FUNCTION_34	IF_2	CALL_7
0x27d6	      0xe854dbffff	            call sym.is_lock_file_locked	      1438	packed-backend.c	FUNCTION_34	IF_2	CALL_7
0x27db	            0x85c0	                           test eax, eax	      1438	packed-backend.c	FUNCTION_34	IF_2	CALL_7
0x27dd	            0x7523	                           jne 0x4002842	      1438	packed-backend.c	FUNCTION_34	IF_2	CALL_7
0x27df	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1439	packed-backend.c	FUNCTION_34	IF_2	IF_3	CALL_8
0x27e3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1439	packed-backend.c	FUNCTION_34	IF_2	IF_3	CALL_8
0x27e7	      0xbe00000000	                              mov esi, 0	      1439	packed-backend.c	FUNCTION_34	IF_2	IF_3	CALL_8
0x27ec	          0x4889c7	                            mov rdi, rax	      1439	packed-backend.c	FUNCTION_34	IF_2	IF_3	CALL_8
0x27ef	      0xe800000000	                          call 0x4002834	      1439	packed-backend.c	FUNCTION_34	IF_2	IF_3	CALL_8
0x27f4	            0x85c0	                           test eax, eax	      1439	packed-backend.c	FUNCTION_34	IF_2	IF_3	CALL_8
0x27f6	            0x753e	                           jne 0x4002876	      1439	packed-backend.c	FUNCTION_34	IF_2	IF_3	CALL_8
0x27f8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1441	packed-backend.c	FUNCTION_34	IF_2
0x27fc	    0xc70001000000	                      mov dword [rax], 1	      1441	packed-backend.c	FUNCTION_34	IF_2
0x2802	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1444	packed-backend.c	FUNCTION_34	IF_4	CALL_9
0x2806	        0x488d4808	                      lea rcx, [rax + 8]	      1444	packed-backend.c	FUNCTION_34	IF_4	CALL_9
0x280a	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1444	packed-backend.c	FUNCTION_34	IF_4	CALL_9
0x280e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1444	packed-backend.c	FUNCTION_34	IF_4	CALL_9
0x2812	          0x4889ce	                            mov rsi, rcx	      1444	packed-backend.c	FUNCTION_34	IF_4	CALL_9
0x2815	          0x4889c7	                            mov rdi, rax	      1444	packed-backend.c	FUNCTION_34	IF_4	CALL_9
0x2818	      0xe843f6ffff	             call sym.write_with_updates	      1444	packed-backend.c	FUNCTION_34	IF_4	CALL_9
0x281d	            0x85c0	                           test eax, eax	      1444	packed-backend.c	FUNCTION_34	IF_4	CALL_9
0x281f	            0x7518	                           jne 0x4002879	      1444	packed-backend.c	FUNCTION_34	IF_4	CALL_9
0x2821	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1447	packed-backend.c	FUNCTION_34
0x2825	    0xc74020010000	               mov dword [rax + 0x20], 1	      1447	packed-backend.c	FUNCTION_34
0x282c	      0xb800000000	                              mov eax, 0	      1448	packed-backend.c	FUNCTION_34
0x2831	            0xeb1d	                           jmp 0x4002890	      1448	packed-backend.c	FUNCTION_34
0x2833	              0x90	                                     nop	      1436	packed-backend.c	FUNCTION_34	IF_1
0x2834	            0xeb04	                           jmp 0x400287a	      1436	packed-backend.c	FUNCTION_34	IF_1
0x2836	              0x90	                                     nop	      1440	packed-backend.c	FUNCTION_34	IF_2	IF_3
0x2837	            0xeb01	                           jmp 0x400287a	      1440	packed-backend.c	FUNCTION_34	IF_2	IF_3
0x2839	              0x90	                                     nop	      1445	packed-backend.c	FUNCTION_34	IF_4
0x283a	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1451	packed-backend.c	FUNCTION_34	CALL_10
0x283e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1451	packed-backend.c	FUNCTION_34	CALL_10
0x2842	          0x4889d6	                            mov rsi, rdx	      1451	packed-backend.c	FUNCTION_34	CALL_10
0x2845	          0x4889c7	                            mov rdi, rax	      1451	packed-backend.c	FUNCTION_34	CALL_10
0x2848	      0xe8cefdffff	     call sym.packed_transaction_cleanup	      1451	packed-backend.c	FUNCTION_34	CALL_10
0x284d	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1452	packed-backend.c	FUNCTION_34
0x2850	              0xc9	                                   leave	      1453	packed-backend.c	FUNCTION_34
0x2851	              0xc3	                                     ret	      1453	packed-backend.c	FUNCTION_34
packed_refs_lock	functions,0:IF,3:DO,0:FOR,0:WHILE,0:CALL,10:ELSE,0:SWITCH,0	73
0x1ca4	              0x55	                                push rbp	       982	packed-backend.c	FUNCTION_27
0x1ca5	          0x4889e5	                            mov rbp, rsp	       982	packed-backend.c	FUNCTION_27
0x1ca8	        0x4883ec30	                           sub rsp, 0x30	       982	packed-backend.c	FUNCTION_27
0x1cac	        0x48897de8	             mov qword [rbp - 0x18], rdi	       982	packed-backend.c	FUNCTION_27
0x1cb0	          0x8975e4	             mov dword [rbp - 0x1c], esi	       982	packed-backend.c	FUNCTION_27
0x1cb3	        0x488955d8	             mov qword [rbp - 0x28], rdx	       982	packed-backend.c	FUNCTION_27
0x1cb7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       983	packed-backend.c	FUNCTION_27
0x1cbb	      0xba00000000	                              mov edx, 0	       983	packed-backend.c	FUNCTION_27
0x1cc0	      0xbe0a000000	                            mov esi, 0xa	       983	packed-backend.c	FUNCTION_27
0x1cc5	          0x4889c7	                            mov rdi, rax	       983	packed-backend.c	FUNCTION_27
0x1cc8	      0xe85be8ffff	                call sym.packed_downcast	       983	packed-backend.c	FUNCTION_27
0x1ccd	        0x488945f8	                mov qword [rbp - 8], rax	       983	packed-backend.c	FUNCTION_27
0x1cd1	    0x8b0500000000	            mov eax, dword [0x04001d17] 	       989	packed-backend.c	FUNCTION_27	IF_1
0x1cd7	            0x85c0	                           test eax, eax	       989	packed-backend.c	FUNCTION_27	IF_1
0x1cd9	            0x7519	                           jne 0x4001d34	       989	packed-backend.c	FUNCTION_27	IF_1
0x1cdb	      0xbe00000000	                              mov esi, 0	       990	packed-backend.c	FUNCTION_27	IF_1	CALL_2
0x1ce0	      0xbf00000000	                              mov edi, 0	       990	packed-backend.c	FUNCTION_27	IF_1	CALL_2
0x1ce5	      0xe800000000	                          call 0x4001d2a	       990	packed-backend.c	FUNCTION_27	IF_1	CALL_2
0x1cea	    0xc70500000000	               mov dword [0x04001d34], 1	       991	packed-backend.c	FUNCTION_27	IF_1
0x1cf4	    0x8b0500000000	            mov eax, dword [0x04001d3a] 	       999	packed-backend.c	FUNCTION_27	IF_2	CALL_3
0x1cfa	          0x4863c8	                         movsxd rcx, eax	       999	packed-backend.c	FUNCTION_27	IF_2	CALL_3
0x1cfd	        0x488b45f8	                mov rax, qword [rbp - 8]	      1001	packed-backend.c	FUNCTION_27	IF_2
0x1d01	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1001	packed-backend.c	FUNCTION_27	IF_2
0x1d05	        0x488b55f8	                mov rdx, qword [rbp - 8]	       999	packed-backend.c	FUNCTION_27	IF_2	CALL_3
0x1d09	        0x488d7a20	                   lea rdi, [rdx + 0x20]	       999	packed-backend.c	FUNCTION_27	IF_2	CALL_3
0x1d0d	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       999	packed-backend.c	FUNCTION_27	IF_2	CALL_3
0x1d10	          0x4889c6	                            mov rsi, rax	       999	packed-backend.c	FUNCTION_27	IF_2	CALL_3
0x1d13	      0xe800000000	                          call 0x4001d58	       999	packed-backend.c	FUNCTION_27	IF_2	CALL_3
0x1d18	            0x85c0	                           test eax, eax	       999	packed-backend.c	FUNCTION_27	IF_2	CALL_3
0x1d1a	            0x7924	                           jns 0x4001d80	       999	packed-backend.c	FUNCTION_27	IF_2	CALL_3
0x1d1c	      0xe800000000	                          call 0x4001d61	      1003	packed-backend.c	FUNCTION_27	IF_2	CALL_4
0x1d21	            0x8b08	                    mov ecx, dword [rax]	      1003	packed-backend.c	FUNCTION_27	IF_2	CALL_4
0x1d23	        0x488b45f8	                mov rax, qword [rbp - 8]	      1003	packed-backend.c	FUNCTION_27	IF_2	CALL_4
0x1d27	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1003	packed-backend.c	FUNCTION_27	IF_2	CALL_4
0x1d2b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1003	packed-backend.c	FUNCTION_27	IF_2	CALL_4
0x1d2f	            0x89ce	                            mov esi, ecx	      1003	packed-backend.c	FUNCTION_27	IF_2	CALL_4
0x1d31	          0x4889c7	                            mov rdi, rax	      1003	packed-backend.c	FUNCTION_27	IF_2	CALL_4
0x1d34	      0xe800000000	                          call 0x4001d79	      1003	packed-backend.c	FUNCTION_27	IF_2	CALL_4
0x1d39	      0xb8ffffffff	                     mov eax, 0xffffffff	      1004	packed-backend.c	FUNCTION_27	IF_2
0x1d3e	            0xeb77	                           jmp 0x4001df7	      1004	packed-backend.c	FUNCTION_27	IF_2
0x1d40	        0x488b45f8	                mov rax, qword [rbp - 8]	      1007	packed-backend.c	FUNCTION_27	IF_3	CALL_5
0x1d44	        0x4883c020	                           add rax, 0x20	      1007	packed-backend.c	FUNCTION_27	IF_3	CALL_5
0x1d48	          0x4889c7	                            mov rdi, rax	      1007	packed-backend.c	FUNCTION_27	IF_3	CALL_5
0x1d4b	      0xe8fce5ffff	         call sym.close_lock_file_gently	      1007	packed-backend.c	FUNCTION_27	IF_3	CALL_5
0x1d50	            0x85c0	                           test eax, eax	      1007	packed-backend.c	FUNCTION_27	IF_3	CALL_5
0x1d52	            0x7446	                            je 0x4001dda	      1007	packed-backend.c	FUNCTION_27	IF_3	CALL_5
0x1d54	      0xe800000000	                          call 0x4001d99	      1008	packed-backend.c	FUNCTION_27	IF_3	CALL_7
0x1d59	            0x8b00	                    mov eax, dword [rax]	      1008	packed-backend.c	FUNCTION_27	IF_3	CALL_7
0x1d5b	            0x89c7	                            mov edi, eax	      1008	packed-backend.c	FUNCTION_27	IF_3	CALL_7
0x1d5d	      0xe800000000	                          call 0x4001da2	      1008	packed-backend.c	FUNCTION_27	IF_3	CALL_7
0x1d62	          0x4889c1	                            mov rcx, rax	      1008	packed-backend.c	FUNCTION_27	IF_3	CALL_7
0x1d65	        0x488b45f8	                mov rax, qword [rbp - 8]	      1008	packed-backend.c	FUNCTION_27	IF_3	CALL_7
0x1d69	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1008	packed-backend.c	FUNCTION_27	IF_3	CALL_7
0x1d6d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1008	packed-backend.c	FUNCTION_27	IF_3	CALL_7
0x1d71	      0xbe00000000	                              mov esi, 0	      1008	packed-backend.c	FUNCTION_27	IF_3	CALL_7
0x1d76	          0x4889c7	                            mov rdi, rax	      1008	packed-backend.c	FUNCTION_27	IF_3	CALL_7
0x1d79	      0xb800000000	                              mov eax, 0	      1008	packed-backend.c	FUNCTION_27	IF_3	CALL_7
0x1d7e	      0xe800000000	                          call 0x4001dc3	      1008	packed-backend.c	FUNCTION_27	IF_3	CALL_7
0x1d83	        0x488b45f8	                mov rax, qword [rbp - 8]	      1009	packed-backend.c	FUNCTION_27	IF_3	CALL_8
0x1d87	        0x4883c020	                           add rax, 0x20	      1009	packed-backend.c	FUNCTION_27	IF_3	CALL_8
0x1d8b	          0x4889c7	                            mov rdi, rax	      1009	packed-backend.c	FUNCTION_27	IF_3	CALL_8
0x1d8e	      0xe8d6e5ffff	             call sym.rollback_lock_file	      1009	packed-backend.c	FUNCTION_27	IF_3	CALL_8
0x1d93	      0xb8ffffffff	                     mov eax, 0xffffffff	      1010	packed-backend.c	FUNCTION_27	IF_3
0x1d98	            0xeb1d	                           jmp 0x4001df7	      1010	packed-backend.c	FUNCTION_27	IF_3
0x1d9a	        0x488b45f8	                mov rax, qword [rbp - 8]	      1021	packed-backend.c	FUNCTION_27	CALL_9
0x1d9e	          0x4889c7	                            mov rdi, rax	      1021	packed-backend.c	FUNCTION_27	CALL_9
0x1da1	      0xe837f6ffff	              call sym.validate_snapshot	      1021	packed-backend.c	FUNCTION_27	CALL_9
0x1da6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1027	packed-backend.c	FUNCTION_27	CALL_10
0x1daa	          0x4889c7	                            mov rdi, rax	      1027	packed-backend.c	FUNCTION_27	CALL_10
0x1dad	      0xe876f6ffff	                   call sym.get_snapshot	      1027	packed-backend.c	FUNCTION_27	CALL_10
0x1db2	      0xb800000000	                              mov eax, 0	      1028	packed-backend.c	FUNCTION_27
0x1db7	              0xc9	                                   leave	      1029	packed-backend.c	FUNCTION_27
0x1db8	              0xc3	                                     ret	      1029	packed-backend.c	FUNCTION_27
packed_transaction_abort	functions,0:IF,0:DO,0:FOR,0:WHILE,0:CALL,2:ELSE,0:SWITCH,0	20
0x2852	              0x55	                                push rbp	      1458	packed-backend.c	FUNCTION_35
0x2853	          0x4889e5	                            mov rbp, rsp	      1458	packed-backend.c	FUNCTION_35
0x2856	        0x4883ec30	                           sub rsp, 0x30	      1458	packed-backend.c	FUNCTION_35
0x285a	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1458	packed-backend.c	FUNCTION_35
0x285e	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1458	packed-backend.c	FUNCTION_35
0x2862	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1458	packed-backend.c	FUNCTION_35
0x2866	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1459	packed-backend.c	FUNCTION_35	CALL_1
0x286a	      0xba00000000	                              mov edx, 0	      1459	packed-backend.c	FUNCTION_35	CALL_1
0x286f	      0xbe07000000	                              mov esi, 7	      1459	packed-backend.c	FUNCTION_35	CALL_1
0x2874	          0x4889c7	                            mov rdi, rax	      1459	packed-backend.c	FUNCTION_35	CALL_1
0x2877	      0xe8acdcffff	                call sym.packed_downcast	      1459	packed-backend.c	FUNCTION_35	CALL_1
0x287c	        0x488945f8	                mov qword [rbp - 8], rax	      1459	packed-backend.c	FUNCTION_35	CALL_1
0x2880	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1464	packed-backend.c	FUNCTION_35	CALL_2
0x2884	        0x488b45f8	                mov rax, qword [rbp - 8]	      1464	packed-backend.c	FUNCTION_35	CALL_2
0x2888	          0x4889d6	                            mov rsi, rdx	      1464	packed-backend.c	FUNCTION_35	CALL_2
0x288b	          0x4889c7	                            mov rdi, rax	      1464	packed-backend.c	FUNCTION_35	CALL_2
0x288e	      0xe888fdffff	     call sym.packed_transaction_cleanup	      1464	packed-backend.c	FUNCTION_35	CALL_2
0x2893	      0xb800000000	                              mov eax, 0	      1465	packed-backend.c	FUNCTION_35
0x2898	              0xc9	                                   leave	      1466	packed-backend.c	FUNCTION_35
0x2899	              0xc3	                                     ret	      1466	packed-backend.c	FUNCTION_35
_	functions,0:IF,1:DO,0:FOR,0:WHILE,0:CALL,2:ELSE,0:SWITCH,0	15
0x1ef	              0x55	                                push rbp	        51	gettext.h	FUNCTION_89
0x1f0	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_89
0x1f3	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_89
0x1f7	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_89
0x1fb	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_89	IF_1
0x1ff	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_89	IF_1
0x202	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_89	IF_1
0x204	            0x7507	                           jne 0x400024d	        52	gettext.h	FUNCTION_89	IF_1
0x206	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_89	IF_1
0x20b	            0xeb0c	                           jmp 0x4000259	        53	gettext.h	FUNCTION_89	IF_1
0x20d	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_89	CALL_2
0x211	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_89	CALL_2
0x214	      0xe800000000	                          call 0x4000259	        54	gettext.h	FUNCTION_89	CALL_2
0x219	              0xc9	                                   leave	        55	gettext.h	FUNCTION_89
0x21a	              0xc3	                                     ret	        55	gettext.h	FUNCTION_89
clear_snapshot_buffer	functions,0:IF,2:DO,0:FOR,0:WHILE,0:CALL,3:ELSE,1:SWITCH,0	50
0x3a0	              0x55	                                push rbp	       168	packed-backend.c	FUNCTION_2
0x3a1	          0x4889e5	                            mov rbp, rsp	       168	packed-backend.c	FUNCTION_2
0x3a4	        0x4883ec10	                           sub rsp, 0x10	       168	packed-backend.c	FUNCTION_2
0x3a8	        0x48897df8	                mov qword [rbp - 8], rdi	       168	packed-backend.c	FUNCTION_2
0x3ac	        0x488b45f8	                mov rax, qword [rbp - 8]	       169	packed-backend.c	FUNCTION_2	IF_1
0x3b0	          0x8b4008	                mov eax, dword [rax + 8]	       169	packed-backend.c	FUNCTION_2	IF_1
0x3b3	            0x85c0	                           test eax, eax	       169	packed-backend.c	FUNCTION_2	IF_1
0x3b5	            0x745d	                            je 0x4000454	       169	packed-backend.c	FUNCTION_2	IF_1
0x3b7	        0x488b45f8	                mov rax, qword [rbp - 8]	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x3bb	        0x488b4020	            mov rax, qword [rax + 0x20] 	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x3bf	          0x4889c2	                            mov rdx, rax	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x3c2	        0x488b45f8	                mov rax, qword [rbp - 8]	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x3c6	        0x488b4010	            mov rax, qword [rax + 0x10] 	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x3ca	          0x4829c2	                            sub rdx, rax	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x3cd	          0x4889d0	                            mov rax, rdx	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x3d0	          0x4889c2	                            mov rdx, rax	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x3d3	        0x488b45f8	                mov rax, qword [rbp - 8]	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x3d7	        0x488b4010	            mov rax, qword [rax + 0x10] 	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x3db	          0x4889d6	                            mov rsi, rdx	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x3de	          0x4889c7	                            mov rdi, rax	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x3e1	      0xe800000000	                          call 0x4000426	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x3e6	            0x85c0	                           test eax, eax	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x3e8	            0x741d	                            je 0x4000447	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x3ea	        0x488b45f8	                mov rax, qword [rbp - 8]	       172	packed-backend.c	FUNCTION_2	IF_1	IF_2
0x3ee	          0x488b00	                    mov rax, qword [rax]	       172	packed-backend.c	FUNCTION_2	IF_1	IF_2
0x3f1	        0x488b4010	            mov rax, qword [rax + 0x10] 	       171	packed-backend.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x3f5	          0x4889c6	                            mov rsi, rax	       171	packed-backend.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x3f8	      0xbf00000000	                              mov edi, 0	       171	packed-backend.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x3fd	      0xb800000000	                              mov eax, 0	       171	packed-backend.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x402	      0xe800000000	                          call 0x4000447	       171	packed-backend.c	FUNCTION_2	IF_1	IF_2	CALL_2
0x407	        0x488b45f8	                mov rax, qword [rbp - 8]	       173	packed-backend.c	FUNCTION_2	IF_1
0x40b	    0xc74008000000	                  mov dword [rax + 8], 0	       173	packed-backend.c	FUNCTION_2	IF_1
0x412	            0xeb10	                           jmp 0x4000464	       173	packed-backend.c	FUNCTION_2	IF_1
0x414	        0x488b45f8	                mov rax, qword [rbp - 8]	       175	packed-backend.c	FUNCTION_2	ELSE_1	CALL_3
0x418	        0x488b4010	            mov rax, qword [rax + 0x10] 	       175	packed-backend.c	FUNCTION_2	ELSE_1	CALL_3
0x41c	          0x4889c7	                            mov rdi, rax	       175	packed-backend.c	FUNCTION_2	ELSE_1	CALL_3
0x41f	      0xe800000000	                          call 0x4000464	       175	packed-backend.c	FUNCTION_2	ELSE_1	CALL_3
0x424	        0x488b45f8	                mov rax, qword [rbp - 8]	       177	packed-backend.c	FUNCTION_2
0x428	    0x48c740200000	               mov qword [rax + 0x20], 0	       177	packed-backend.c	FUNCTION_2
0x430	        0x488b45f8	                mov rax, qword [rbp - 8]	       177	packed-backend.c	FUNCTION_2
0x434	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       177	packed-backend.c	FUNCTION_2
0x438	        0x488b45f8	                mov rax, qword [rbp - 8]	       177	packed-backend.c	FUNCTION_2
0x43c	        0x48895018	             mov qword [rax + 0x18], rdx	       177	packed-backend.c	FUNCTION_2
0x440	        0x488b45f8	                mov rax, qword [rbp - 8]	       177	packed-backend.c	FUNCTION_2
0x444	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       177	packed-backend.c	FUNCTION_2
0x448	        0x488b45f8	                mov rax, qword [rbp - 8]	       177	packed-backend.c	FUNCTION_2
0x44c	        0x48895010	             mov qword [rax + 0x10], rdx	       177	packed-backend.c	FUNCTION_2
0x450	              0x90	                                     nop	       178	packed-backend.c	FUNCTION_2
0x451	              0xc9	                                   leave	       178	packed-backend.c	FUNCTION_2
0x452	              0xc3	                                     ret	       178	packed-backend.c	FUNCTION_2
strbuf_addstr	functions,0:IF,0:DO,0:FOR,0:WHILE,0:CALL,2:ELSE,0:SWITCH,0	17
0x1ba	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_95
0x1bb	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_95
0x1be	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_95
0x1c2	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_95
0x1c6	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_95
0x1ca	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_95	CALL_2
0x1ce	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_95	CALL_2
0x1d1	      0xe800000000	                          call 0x4000216	       279	strbuf.h	FUNCTION_95	CALL_2
0x1d6	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_95	CALL_2
0x1d9	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_95	CALL_2
0x1dd	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_95	CALL_2
0x1e1	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_95	CALL_2
0x1e4	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_95	CALL_2
0x1e7	      0xe800000000	                          call 0x400022c	       279	strbuf.h	FUNCTION_95	CALL_2
0x1ec	              0x90	                                     nop	       280	strbuf.h	FUNCTION_95
0x1ed	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_95
0x1ee	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_95
packed_create_reflog	functions,0:IF,0:DO,0:FOR,0:WHILE,0:CALL,1:ELSE,0:SWITCH,0	10
0x2c61	              0x55	                                push rbp	      1612	packed-backend.c	FUNCTION_47
0x2c62	          0x4889e5	                            mov rbp, rsp	      1612	packed-backend.c	FUNCTION_47
0x2c65	        0x4883ec20	                           sub rsp, 0x20	      1612	packed-backend.c	FUNCTION_47
0x2c69	        0x48897df8	                mov qword [rbp - 8], rdi	      1612	packed-backend.c	FUNCTION_47
0x2c6d	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1612	packed-backend.c	FUNCTION_47
0x2c71	          0x8955ec	             mov dword [rbp - 0x14], edx	      1612	packed-backend.c	FUNCTION_47
0x2c74	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1612	packed-backend.c	FUNCTION_47
0x2c78	      0xbf00000000	                              mov edi, 0	      1613	packed-backend.c	FUNCTION_47	CALL_1
0x2c7d	      0xb800000000	                              mov eax, 0	      1613	packed-backend.c	FUNCTION_47	CALL_1
0x2c82	      0xe800000000	           call sym.packed_delete_reflog	      1613	packed-backend.c	FUNCTION_47	CALL_1
packed_pack_refs	functions,0:IF,0:DO,0:FOR,0:WHILE,0:CALL,0:ELSE,0:SWITCH,0	7
0x2b7e	              0x55	                                push rbp	      1553	packed-backend.c	FUNCTION_39
0x2b7f	          0x4889e5	                            mov rbp, rsp	      1553	packed-backend.c	FUNCTION_39
0x2b82	        0x48897df8	                mov qword [rbp - 8], rdi	      1553	packed-backend.c	FUNCTION_39
0x2b86	          0x8975f4	              mov dword [rbp - 0xc], esi	      1553	packed-backend.c	FUNCTION_39
0x2b89	      0xb800000000	                              mov eax, 0	      1559	packed-backend.c	FUNCTION_39
0x2b8e	              0x5d	                                 pop rbp	      1560	packed-backend.c	FUNCTION_39
0x2b8f	              0xc3	                                     ret	      1560	packed-backend.c	FUNCTION_39
close_lock_file_gently	functions,0:IF,0:DO,0:FOR,0:WHILE,0:CALL,1:ELSE,0:SWITCH,0	10
0x34c	              0x55	                                push rbp	       248	lockfile.h	FUNCTION_83
0x34d	          0x4889e5	                            mov rbp, rsp	       248	lockfile.h	FUNCTION_83
0x350	        0x4883ec10	                           sub rsp, 0x10	       248	lockfile.h	FUNCTION_83
0x354	        0x48897df8	                mov qword [rbp - 8], rdi	       248	lockfile.h	FUNCTION_83
0x358	        0x488b45f8	                mov rax, qword [rbp - 8]	       249	lockfile.h	FUNCTION_83	CALL_1
0x35c	          0x488b00	                    mov rax, qword [rax]	       249	lockfile.h	FUNCTION_83	CALL_1
0x35f	          0x4889c7	                            mov rdi, rax	       249	lockfile.h	FUNCTION_83	CALL_1
0x362	      0xe800000000	                          call 0x40003a7	       249	lockfile.h	FUNCTION_83	CALL_1
0x367	              0xc9	                                   leave	       250	lockfile.h	FUNCTION_83
0x368	              0xc3	                                     ret	       250	lockfile.h	FUNCTION_83
packed_ref_store_create	functions,0:IF,0:DO,0:FOR,0:WHILE,0:CALL,4:ELSE,0:SWITCH,0	32
0x4b1	              0x55	                                push rbp	       198	packed-backend.c	FUNCTION_4
0x4b2	          0x4889e5	                            mov rbp, rsp	       198	packed-backend.c	FUNCTION_4
0x4b5	        0x4883ec20	                           sub rsp, 0x20	       198	packed-backend.c	FUNCTION_4
0x4b9	        0x48897de8	             mov qword [rbp - 0x18], rdi	       198	packed-backend.c	FUNCTION_4
0x4bd	          0x8975e4	             mov dword [rbp - 0x1c], esi	       198	packed-backend.c	FUNCTION_4
0x4c0	      0xbe30000000	                           mov esi, 0x30	       199	packed-backend.c	FUNCTION_4	CALL_1
0x4c5	      0xbf01000000	                              mov edi, 1	       199	packed-backend.c	FUNCTION_4	CALL_1
0x4ca	      0xe800000000	                          call 0x400050f	       199	packed-backend.c	FUNCTION_4	CALL_1
0x4cf	        0x488945f0	             mov qword [rbp - 0x10], rax	       199	packed-backend.c	FUNCTION_4	CALL_1
0x4d3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       200	packed-backend.c	FUNCTION_4
0x4d7	        0x488945f8	                mov qword [rbp - 8], rax	       200	packed-backend.c	FUNCTION_4
0x4db	        0x488b45f8	                mov rax, qword [rbp - 8]	       202	packed-backend.c	FUNCTION_4	CALL_2
0x4df	      0xbe00000000	                              mov esi, 0	       202	packed-backend.c	FUNCTION_4	CALL_2
0x4e4	          0x4889c7	                            mov rdi, rax	       202	packed-backend.c	FUNCTION_4	CALL_2
0x4e7	      0xe800000000	                          call 0x400052c	       202	packed-backend.c	FUNCTION_4	CALL_2
0x4ec	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       203	packed-backend.c	FUNCTION_4
0x4f0	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       203	packed-backend.c	FUNCTION_4
0x4f3	          0x895008	                mov dword [rax + 8], edx	       203	packed-backend.c	FUNCTION_4
0x4f6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       205	packed-backend.c	FUNCTION_4	CALL_3
0x4fa	          0x4889c7	                            mov rdi, rax	       205	packed-backend.c	FUNCTION_4	CALL_3
0x4fd	      0xe800000000	                          call 0x4000542	       205	packed-backend.c	FUNCTION_4	CALL_3
0x502	          0x4889c2	                            mov rdx, rax	       205	packed-backend.c	FUNCTION_4	CALL_3
0x505	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       205	packed-backend.c	FUNCTION_4	CALL_3
0x509	        0x48895010	             mov qword [rax + 0x10], rdx	       205	packed-backend.c	FUNCTION_4	CALL_3
0x50d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       206	packed-backend.c	FUNCTION_4	CALL_4
0x511	        0x4883c010	                           add rax, 0x10	       206	packed-backend.c	FUNCTION_4	CALL_4
0x515	          0x4889c6	                            mov rsi, rax	       206	packed-backend.c	FUNCTION_4	CALL_4
0x518	      0xbf00000000	                              mov edi, 0	       206	packed-backend.c	FUNCTION_4	CALL_4
0x51d	      0xe800000000	                          call 0x4000562	       206	packed-backend.c	FUNCTION_4	CALL_4
0x522	        0x488b45f8	                mov rax, qword [rbp - 8]	       208	packed-backend.c	FUNCTION_4
0x526	              0xc9	                                   leave	       209	packed-backend.c	FUNCTION_4
0x527	              0xc3	                                     ret	       209	packed-backend.c	FUNCTION_4
get_snapshot	functions,0:IF,2:DO,0:FOR,0:WHILE,0:CALL,3:ELSE,0:SWITCH,0	27
0x1428	              0x55	                                push rbp	       715	packed-backend.c	FUNCTION_19
0x1429	          0x4889e5	                            mov rbp, rsp	       715	packed-backend.c	FUNCTION_19
0x142c	        0x4883ec10	                           sub rsp, 0x10	       715	packed-backend.c	FUNCTION_19
0x1430	        0x48897df8	                mov qword [rbp - 8], rdi	       715	packed-backend.c	FUNCTION_19
0x1434	        0x488b45f8	                mov rax, qword [rbp - 8]	       716	packed-backend.c	FUNCTION_19	IF_1	CALL_1
0x1438	        0x4883c020	                           add rax, 0x20	       716	packed-backend.c	FUNCTION_19	IF_1	CALL_1
0x143c	          0x4889c7	                            mov rdi, rax	       716	packed-backend.c	FUNCTION_19	IF_1	CALL_1
0x143f	      0xe8ebeeffff	            call sym.is_lock_file_locked	       716	packed-backend.c	FUNCTION_19	IF_1	CALL_1
0x1444	            0x85c0	                           test eax, eax	       716	packed-backend.c	FUNCTION_19	IF_1	CALL_1
0x1446	            0x750c	                           jne 0x4001494	       716	packed-backend.c	FUNCTION_19	IF_1	CALL_1
0x1448	        0x488b45f8	                mov rax, qword [rbp - 8]	       717	packed-backend.c	FUNCTION_19	CALL_2
0x144c	          0x4889c7	                            mov rdi, rax	       717	packed-backend.c	FUNCTION_19	CALL_2
0x144f	      0xe889ffffff	              call sym.validate_snapshot	       717	packed-backend.c	FUNCTION_19	CALL_2
0x1454	        0x488b45f8	                mov rax, qword [rbp - 8]	       719	packed-backend.c	FUNCTION_19	IF_2
0x1458	        0x488b4018	            mov rax, qword [rax + 0x18] 	       719	packed-backend.c	FUNCTION_19	IF_2
0x145c	          0x4885c0	                           test rax, rax	       719	packed-backend.c	FUNCTION_19	IF_2
0x145f	            0x7517	                           jne 0x40014b8	       719	packed-backend.c	FUNCTION_19	IF_2
0x1461	        0x488b45f8	                mov rax, qword [rbp - 8]	       720	packed-backend.c	FUNCTION_19	CALL_3
0x1465	          0x4889c7	                            mov rdi, rax	       720	packed-backend.c	FUNCTION_19	CALL_3
0x1468	      0xe83bfcffff	                call sym.create_snapshot	       720	packed-backend.c	FUNCTION_19	CALL_3
0x146d	          0x4889c2	                            mov rdx, rax	       720	packed-backend.c	FUNCTION_19	CALL_3
0x1470	        0x488b45f8	                mov rax, qword [rbp - 8]	       720	packed-backend.c	FUNCTION_19	CALL_3
0x1474	        0x48895018	             mov qword [rax + 0x18], rdx	       720	packed-backend.c	FUNCTION_19	CALL_3
0x1478	        0x488b45f8	                mov rax, qword [rbp - 8]	       722	packed-backend.c	FUNCTION_19
0x147c	        0x488b4018	            mov rax, qword [rax + 0x18] 	       722	packed-backend.c	FUNCTION_19
0x1480	              0xc9	                                   leave	       723	packed-backend.c	FUNCTION_19
0x1481	              0xc3	                                     ret	       723	packed-backend.c	FUNCTION_19
packed_rename_ref	functions,0:IF,0:DO,0:FOR,0:WHILE,0:CALL,1:ELSE,0:SWITCH,0	10
0x2bb7	              0x55	                                push rbp	      1572	packed-backend.c	FUNCTION_41
0x2bb8	          0x4889e5	                            mov rbp, rsp	      1572	packed-backend.c	FUNCTION_41
0x2bbb	        0x4883ec20	                           sub rsp, 0x20	      1572	packed-backend.c	FUNCTION_41
0x2bbf	        0x48897df8	                mov qword [rbp - 8], rdi	      1572	packed-backend.c	FUNCTION_41
0x2bc3	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1572	packed-backend.c	FUNCTION_41
0x2bc7	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1572	packed-backend.c	FUNCTION_41
0x2bcb	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1572	packed-backend.c	FUNCTION_41
0x2bcf	      0xbf00000000	                              mov edi, 0	      1573	packed-backend.c	FUNCTION_41	CALL_1
0x2bd4	      0xb800000000	                              mov eax, 0	      1573	packed-backend.c	FUNCTION_41	CALL_1
0x2bd9	      0xe800000000	                call sym.packed_copy_ref	      1573	packed-backend.c	FUNCTION_41	CALL_1
packed_delete_refs	functions,1:IF,4:DO,0:FOR,0:WHILE,0:CALL,9:ELSE,1:SWITCH,0	130
0x298f	              0x55	                                push rbp	      1505	packed-backend.c	FUNCTION_38
0x2990	          0x4889e5	                            mov rbp, rsp	      1505	packed-backend.c	FUNCTION_38
0x2993	            0x4154	                                push r12	      1505	packed-backend.c	FUNCTION_38
0x2995	              0x53	                                push rbx	      1505	packed-backend.c	FUNCTION_38
0x2996	        0x4883ec60	                           sub rsp, 0x60	      1505	packed-backend.c	FUNCTION_38
0x299a	        0x48897da8	             mov qword [rbp - 0x58], rdi	      1505	packed-backend.c	FUNCTION_38
0x299e	        0x488975a0	             mov qword [rbp - 0x60], rsi	      1505	packed-backend.c	FUNCTION_38
0x29a2	        0x48895598	             mov qword [rbp - 0x68], rdx	      1505	packed-backend.c	FUNCTION_38
0x29a6	          0x894d94	             mov dword [rbp - 0x6c], ecx	      1505	packed-backend.c	FUNCTION_38
0x29a9	    0x64488b042528	                mov rax, qword fs:[0x28]	      1505	packed-backend.c	FUNCTION_38
0x29b2	        0x488945e8	             mov qword [rbp - 0x18], rax	      1505	packed-backend.c	FUNCTION_38
0x29b6	            0x31c0	                            xor eax, eax	      1505	packed-backend.c	FUNCTION_38
0x29b8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1506	packed-backend.c	FUNCTION_38
0x29bc	      0xba00000000	                              mov edx, 0	      1506	packed-backend.c	FUNCTION_38
0x29c1	      0xbe02000000	                              mov esi, 2	      1506	packed-backend.c	FUNCTION_38
0x29c6	          0x4889c7	                            mov rdi, rax	      1506	packed-backend.c	FUNCTION_38
0x29c9	      0xe85adbffff	                call sym.packed_downcast	      1506	packed-backend.c	FUNCTION_38
0x29ce	        0x488945c0	             mov qword [rbp - 0x40], rax	      1506	packed-backend.c	FUNCTION_38
0x29d2	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1508	packed-backend.c	FUNCTION_38
0x29da	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      1508	packed-backend.c	FUNCTION_38
0x29e2	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1508	packed-backend.c	FUNCTION_38
0x29ea	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1515	packed-backend.c	FUNCTION_38	IF_1
0x29ee	          0x8b4008	                mov eax, dword [rax + 8]	      1515	packed-backend.c	FUNCTION_38	IF_1
0x29f1	            0x85c0	                           test eax, eax	      1515	packed-backend.c	FUNCTION_38	IF_1
0x29f3	            0x750a	                           jne 0x4002a3f	      1515	packed-backend.c	FUNCTION_38	IF_1
0x29f5	      0xb800000000	                              mov eax, 0	      1516	packed-backend.c	FUNCTION_38	IF_1
0x29fa	      0xe962010000	                           jmp 0x4002ba1	      1516	packed-backend.c	FUNCTION_38	IF_1
0x29ff	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1524	packed-backend.c	FUNCTION_38	CALL_2
0x2a03	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1524	packed-backend.c	FUNCTION_38	CALL_2
0x2a07	          0x4889d6	                            mov rsi, rdx	      1524	packed-backend.c	FUNCTION_38	CALL_2
0x2a0a	          0x4889c7	                            mov rdi, rax	      1524	packed-backend.c	FUNCTION_38	CALL_2
0x2a0d	      0xe800000000	                          call 0x4002a52	      1524	packed-backend.c	FUNCTION_38	CALL_2
0x2a12	        0x488945c8	             mov qword [rbp - 0x38], rax	      1524	packed-backend.c	FUNCTION_38	CALL_2
0x2a16	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1525	packed-backend.c	FUNCTION_38	IF_2
0x2a1b	            0x750a	                           jne 0x4002a67	      1525	packed-backend.c	FUNCTION_38	IF_2
0x2a1d	      0xb8ffffffff	                     mov eax, 0xffffffff	      1526	packed-backend.c	FUNCTION_38	IF_2
0x2a22	      0xe93a010000	                           jmp 0x4002ba1	      1526	packed-backend.c	FUNCTION_38	IF_2
0x2a27	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x2a2b	          0x488b00	                    mov rax, qword [rax]	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x2a2e	        0x488945b8	             mov qword [rbp - 0x48], rax	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x2a32	            0xeb6d	                           jmp 0x4002ae1	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x2a34	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x2a38	          0x488b30	                    mov rsi, qword [rax]	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x2a3b	        0x488d7dd0	                   lea rdi, [rbp - 0x30]	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x2a3f	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x2a43	          0x8b5594	             mov edx, dword [rbp - 0x6c]	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x2a46	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x2a4a	          0x4989f9	                             mov r9, rdi	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x2a4d	          0x4989c8	                             mov r8, rcx	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x2a50	            0x89d1	                            mov ecx, edx	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x2a52	      0xba00000000	                              mov edx, 0	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x2a57	          0x4889c7	                            mov rdi, rax	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x2a5a	      0xe800000000	                          call 0x4002a9f	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x2a5f	            0x85c0	                           test eax, eax	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x2a61	            0x7439	                            je 0x4002adc	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x2a63	        0x4c8b65e0	             mov r12, qword [rbp - 0x20]	      1531	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_3
0x2a67	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1531	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_3
0x2a6b	          0x488b18	                    mov rbx, qword [rax]	      1531	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_3
0x2a6e	      0xbf00000000	                              mov edi, 0	      1531	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_3
0x2a73	      0xe877d7ffff	                               call sym.	      1531	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_3
0x2a78	          0x4c89e2	                            mov rdx, r12	      1531	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_3
0x2a7b	          0x4889de	                            mov rsi, rbx	      1531	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_3
0x2a7e	          0x4889c7	                            mov rdi, rax	      1531	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_3
0x2a81	      0xb800000000	                              mov eax, 0	      1531	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_3
0x2a86	      0xe800000000	                          call 0x4002acb	      1531	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_3
0x2a8b	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1533	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_4
0x2a8f	      0xbe00000000	                              mov esi, 0	      1533	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_4
0x2a94	          0x4889c7	                            mov rdi, rax	      1533	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_4
0x2a97	      0xe884d6ffff	                  call sym.strbuf_setlen	      1533	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_4
0x2a9c	      0x488345b810	            add qword [rbp - 0x48], 0x10	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x2aa1	      0x48837db800	               cmp qword [rbp - 0x48], 0	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x2aa6	            0x7421	                            je 0x4002b09	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x2aa8	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x2aac	          0x488b10	                    mov rdx, qword [rax]	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x2aaf	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x2ab3	          0x8b4008	                mov eax, dword [rax + 8]	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x2ab6	            0x89c0	                            mov eax, eax	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x2ab8	        0x48c1e004	                              shl rax, 4	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x2abc	          0x4801d0	                            add rax, rdx	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x2abf	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x2ac3	     0xf876bffffff	                            ja 0x4002a74	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x2ac9	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1537	packed-backend.c	FUNCTION_38	CALL_3
0x2acd	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1537	packed-backend.c	FUNCTION_38	CALL_3
0x2ad1	          0x4889d6	                            mov rsi, rdx	      1537	packed-backend.c	FUNCTION_38	CALL_3
0x2ad4	          0x4889c7	                            mov rdi, rax	      1537	packed-backend.c	FUNCTION_38	CALL_3
0x2ad7	      0xe800000000	                          call 0x4002b1c	      1537	packed-backend.c	FUNCTION_38	CALL_3
0x2adc	          0x8945b4	             mov dword [rbp - 0x4c], eax	      1537	packed-backend.c	FUNCTION_38	CALL_3
0x2adf	        0x837db400	               cmp dword [rbp - 0x4c], 0	      1539	packed-backend.c	FUNCTION_38	IF_3
0x2ae3	            0x7461	                            je 0x4002b86	      1539	packed-backend.c	FUNCTION_38	IF_3
0x2ae5	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1540	packed-backend.c	FUNCTION_38	IF_3	IF_4
0x2ae9	          0x8b4008	                mov eax, dword [rax + 8]	      1540	packed-backend.c	FUNCTION_38	IF_3	IF_4
0x2aec	          0x83f801	                              cmp eax, 1	      1540	packed-backend.c	FUNCTION_38	IF_3	IF_4
0x2aef	            0x7532	                           jne 0x4002b63	      1540	packed-backend.c	FUNCTION_38	IF_3	IF_4
0x2af1	        0x4c8b65e0	             mov r12, qword [rbp - 0x20]	      1541	packed-backend.c	FUNCTION_38	IF_3	IF_4	CALL_5
0x2af5	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1541	packed-backend.c	FUNCTION_38	IF_3	IF_4	CALL_5
0x2af9	          0x488b00	                    mov rax, qword [rax]	      1541	packed-backend.c	FUNCTION_38	IF_3	IF_4	CALL_5
0x2afc	          0x488b18	                    mov rbx, qword [rax]	      1541	packed-backend.c	FUNCTION_38	IF_3	IF_4	CALL_5
0x2aff	      0xbf00000000	                              mov edi, 0	      1541	packed-backend.c	FUNCTION_38	IF_3	IF_4	CALL_5
0x2b04	      0xe8e6d6ffff	                               call sym.	      1541	packed-backend.c	FUNCTION_38	IF_3	IF_4	CALL_5
0x2b09	          0x4c89e2	                            mov rdx, r12	      1541	packed-backend.c	FUNCTION_38	IF_3	IF_4	CALL_5
0x2b0c	          0x4889de	                            mov rsi, rbx	      1541	packed-backend.c	FUNCTION_38	IF_3	IF_4	CALL_5
0x2b0f	          0x4889c7	                            mov rdi, rax	      1541	packed-backend.c	FUNCTION_38	IF_3	IF_4	CALL_5
0x2b12	      0xb800000000	                              mov eax, 0	      1541	packed-backend.c	FUNCTION_38	IF_3	IF_4	CALL_5
0x2b17	      0xe800000000	                          call 0x4002b5c	      1541	packed-backend.c	FUNCTION_38	IF_3	IF_4	CALL_5
0x2b1c	      0xe8dfd4ffff	                    call sym.const_error	      1541	packed-backend.c	FUNCTION_38	IF_3	IF_4	CALL_5
0x2b21	            0xeb23	                           jmp 0x4002b86	      1541	packed-backend.c	FUNCTION_38	IF_3	IF_4	CALL_5
0x2b23	        0x488b5de0	             mov rbx, qword [rbp - 0x20]	      1544	packed-backend.c	FUNCTION_38	IF_3	CALL_7
0x2b27	      0xbf00000000	                              mov edi, 0	      1544	packed-backend.c	FUNCTION_38	IF_3	CALL_7
0x2b2c	      0xe8bed6ffff	                               call sym.	      1544	packed-backend.c	FUNCTION_38	IF_3	CALL_7
0x2b31	          0x4889de	                            mov rsi, rbx	      1544	packed-backend.c	FUNCTION_38	IF_3	CALL_7
0x2b34	          0x4889c7	                            mov rdi, rax	      1544	packed-backend.c	FUNCTION_38	IF_3	CALL_7
0x2b37	      0xb800000000	                              mov eax, 0	      1544	packed-backend.c	FUNCTION_38	IF_3	CALL_7
0x2b3c	      0xe800000000	                          call 0x4002b81	      1544	packed-backend.c	FUNCTION_38	IF_3	CALL_7
0x2b41	      0xe8bad4ffff	                    call sym.const_error	      1544	packed-backend.c	FUNCTION_38	IF_3	CALL_7
0x2b46	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1547	packed-backend.c	FUNCTION_38	CALL_8
0x2b4a	          0x4889c7	                            mov rdi, rax	      1547	packed-backend.c	FUNCTION_38	CALL_8
0x2b4d	      0xe800000000	                          call 0x4002b92	      1547	packed-backend.c	FUNCTION_38	CALL_8
0x2b52	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1548	packed-backend.c	FUNCTION_38	CALL_9
0x2b56	          0x4889c7	                            mov rdi, rax	      1548	packed-backend.c	FUNCTION_38	CALL_9
0x2b59	      0xe800000000	                          call 0x4002b9e	      1548	packed-backend.c	FUNCTION_38	CALL_9
0x2b5e	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1549	packed-backend.c	FUNCTION_38
0x2b61	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1550	packed-backend.c	FUNCTION_38
0x2b65	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1550	packed-backend.c	FUNCTION_38
0x2b6e	            0x7405	                            je 0x4002bb5	      1550	packed-backend.c	FUNCTION_38
0x2b70	      0xe800000000	                          call 0x4002bb5	      1550	packed-backend.c	FUNCTION_38
0x2b75	        0x4883c460	                           add rsp, 0x60	      1550	packed-backend.c	FUNCTION_38
0x2b79	              0x5b	                                 pop rbx	      1550	packed-backend.c	FUNCTION_38
0x2b7a	            0x415c	                                 pop r12	      1550	packed-backend.c	FUNCTION_38
0x2b7c	              0x5d	                                 pop rbp	      1550	packed-backend.c	FUNCTION_38
0x2b7d	              0xc3	                                     ret	      1550	packed-backend.c	FUNCTION_38
create_snapshot	functions,0:IF,8:DO,0:FOR,0:WHILE,0:CALL,20:ELSE,1:SWITCH,0	208
0x10a8	              0x55	                                push rbp	       616	packed-backend.c	ELSE_3	FUNCTION_17
0x10a9	          0x4889e5	                            mov rbp, rsp	       616	packed-backend.c	ELSE_3	FUNCTION_17
0x10ac	        0x4883c480	             add rsp, 0xffffffffffffff80	       616	packed-backend.c	ELSE_3	FUNCTION_17
0x10b0	        0x48897d88	             mov qword [rbp - 0x78], rdi	       616	packed-backend.c	ELSE_3	FUNCTION_17
0x10b4	    0x64488b042528	                mov rax, qword fs:[0x28]	       616	packed-backend.c	ELSE_3	FUNCTION_17
0x10bd	        0x488945f8	                mov qword [rbp - 8], rax	       616	packed-backend.c	ELSE_3	FUNCTION_17
0x10c1	            0x31c0	                            xor eax, eax	       616	packed-backend.c	ELSE_3	FUNCTION_17
0x10c3	      0xbe38000000	                           mov esi, 0x38	       617	packed-backend.c	ELSE_3	FUNCTION_17	CALL_1
0x10c8	      0xbf01000000	                              mov edi, 1	       617	packed-backend.c	ELSE_3	FUNCTION_17	CALL_1
0x10cd	      0xe800000000	                          call 0x4001112	       617	packed-backend.c	ELSE_3	FUNCTION_17	CALL_1
0x10d2	        0x488945a8	             mov qword [rbp - 0x58], rax	       617	packed-backend.c	ELSE_3	FUNCTION_17	CALL_1
0x10d6	    0xc7459c000000	               mov dword [rbp - 0x64], 0	       618	packed-backend.c	ELSE_3	FUNCTION_17
0x10dd	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       620	packed-backend.c	ELSE_3	FUNCTION_17
0x10e1	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       620	packed-backend.c	ELSE_3	FUNCTION_17
0x10e5	          0x488910	                    mov qword [rax], rdx	       620	packed-backend.c	ELSE_3	FUNCTION_17
0x10e8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       621	packed-backend.c	ELSE_3	FUNCTION_17	CALL_2
0x10ec	          0x4889c7	                            mov rdi, rax	       621	packed-backend.c	ELSE_3	FUNCTION_17	CALL_2
0x10ef	      0xe890f2ffff	               call sym.acquire_snapshot	       621	packed-backend.c	ELSE_3	FUNCTION_17	CALL_2
0x10f4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       622	packed-backend.c	ELSE_3	FUNCTION_17
0x10f8	    0xc74028000000	               mov dword [rax + 0x28], 0	       622	packed-backend.c	ELSE_3	FUNCTION_17
0x10ff	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       624	packed-backend.c	ELSE_3	FUNCTION_17	IF_1	CALL_3
0x1103	          0x4889c7	                            mov rdi, rax	       624	packed-backend.c	ELSE_3	FUNCTION_17	IF_1	CALL_3
0x1106	      0xe86cfcffff	                  call sym.load_contents	       624	packed-backend.c	ELSE_3	FUNCTION_17	IF_1	CALL_3
0x110b	            0x85c0	                           test eax, eax	       624	packed-backend.c	ELSE_3	FUNCTION_17	IF_1	CALL_3
0x110d	            0x7509	                           jne 0x4001158	       624	packed-backend.c	ELSE_3	FUNCTION_17	IF_1	CALL_3
0x110f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       625	packed-backend.c	ELSE_3	FUNCTION_17	IF_1
0x1113	      0xe9af020000	                           jmp 0x4001407	       625	packed-backend.c	ELSE_3	FUNCTION_17	IF_1
0x1118	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       628	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x111c	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       628	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x1120	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       628	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x1124	        0x488b4020	            mov rax, qword [rax + 0x20] 	       628	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x1128	          0x4839c2	                            cmp rdx, rax	       628	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x112b	     0xf83c7010000	                           jae 0x4001338	       628	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x1131	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       628	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x1135	        0x488b4010	            mov rax, qword [rax + 0x10] 	       628	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x1139	           0xfb600	                   movzx eax, byte [rax]	       628	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x113c	            0x3c23	                            cmp al, 0x23	       628	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x113e	     0xf85b4010000	                           jne 0x4001338	       628	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x1144	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       630	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x114c	    0xc745d8000000	               mov dword [rbp - 0x28], 0	       630	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x1153	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       630	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x115a	         0xfb645e0	            movzx eax, byte [rbp - 0x20]	       630	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x115e	          0x83e0fe	                     and eax, 0xfffffffe	       630	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x1161	          0x8845e0	               mov byte [rbp - 0x20], al	       630	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x1164	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       630	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x116c	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       633	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x1170	        0x488b4020	            mov rax, qword [rax + 0x20] 	       633	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x1174	          0x4889c2	                            mov rdx, rax	       633	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x1177	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       633	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x117b	        0x488b4010	            mov rax, qword [rax + 0x10] 	       633	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x117f	          0x4829c2	                            sub rdx, rax	       633	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x1182	          0x4889d0	                            mov rax, rdx	       633	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x1185	          0x4889c2	                            mov rdx, rax	       632	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_4
0x1188	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       632	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_4
0x118c	        0x488b4010	            mov rax, qword [rax + 0x10] 	       632	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_4
0x1190	      0xbe0a000000	                            mov esi, 0xa	       632	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_4
0x1195	          0x4889c7	                            mov rdi, rax	       632	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_4
0x1198	      0xe800000000	                          call 0x40011dd	       632	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_4
0x119d	        0x488945b0	             mov qword [rbp - 0x50], rax	       632	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_4
0x11a1	      0x48837db000	               cmp qword [rbp - 0x50], 0	       634	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_3
0x11a6	            0x7537	                           jne 0x400121f	       634	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_3
0x11a8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       637	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_3
0x11ac	        0x488b4020	            mov rax, qword [rax + 0x20] 	       637	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_3
0x11b0	          0x4889c2	                            mov rdx, rax	       637	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_3
0x11b3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       637	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_3
0x11b7	        0x488b4010	            mov rax, qword [rax + 0x10] 	       637	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_3
0x11bb	          0x4829c2	                            sub rdx, rax	       637	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_3
0x11be	          0x4889d0	                            mov rax, rdx	       637	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_3
0x11c1	          0x4889c2	                            mov rdx, rax	       635	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_3	CALL_5
0x11c4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       636	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_3
0x11c8	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       636	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_3
0x11cc	        0x488b4588	             mov rax, qword [rbp - 0x78]	       635	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_3	CALL_5
0x11d0	        0x488b4010	            mov rax, qword [rax + 0x10] 	       635	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_3	CALL_5
0x11d4	          0x4889ce	                            mov rsi, rcx	       635	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_3	CALL_5
0x11d7	          0x4889c7	                            mov rdi, rax	       635	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_3	CALL_5
0x11da	      0xe809f4ffff	          call sym.die_unterminated_line	       635	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_3	CALL_5
0x11df	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       639	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_6
0x11e3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       639	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_6
0x11e7	        0x488b4010	            mov rax, qword [rax + 0x10] 	       639	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_6
0x11eb	          0x4829c2	                            sub rdx, rax	       639	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_6
0x11ee	          0x4889d0	                            mov rax, rdx	       639	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_6
0x11f1	          0x4889c2	                            mov rdx, rax	       639	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_6
0x11f4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       639	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_6
0x11f8	        0x488b4010	            mov rax, qword [rax + 0x10] 	       639	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_6
0x11fc	          0x4889d6	                            mov rsi, rdx	       639	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_6
0x11ff	          0x4889c7	                            mov rdi, rax	       639	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_6
0x1202	      0xe800000000	                          call 0x4001247	       639	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_6
0x1207	        0x488945b8	             mov qword [rbp - 0x48], rax	       639	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_6
0x120b	        0x488d55a0	                   lea rdx, [rbp - 0x60]	       641	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4	CALL_7
0x120f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       641	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4	CALL_7
0x1213	      0xbe00000000	                              mov esi, 0	       641	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4	CALL_7
0x1218	          0x4889c7	                            mov rdi, rax	       641	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4	CALL_7
0x121b	      0xe8ebedffff	                    call sym.skip_prefix	       641	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4	CALL_7
0x1220	            0x85c0	                           test eax, eax	       641	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4	CALL_7
0x1222	            0x7537	                           jne 0x400129b	       641	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4	CALL_7
0x1224	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       644	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4
0x1228	        0x488b4020	            mov rax, qword [rax + 0x20] 	       644	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4
0x122c	          0x4889c2	                            mov rdx, rax	       644	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4
0x122f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       644	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4
0x1233	        0x488b4010	            mov rax, qword [rax + 0x10] 	       644	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4
0x1237	          0x4829c2	                            sub rdx, rax	       644	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4
0x123a	          0x4889d0	                            mov rax, rdx	       644	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4
0x123d	          0x4889c2	                            mov rdx, rax	       642	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4	CALL_8
0x1240	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       643	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4
0x1244	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       643	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4
0x1248	        0x488b4588	             mov rax, qword [rbp - 0x78]	       642	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4	CALL_8
0x124c	        0x488b4010	            mov rax, qword [rax + 0x10] 	       642	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4	CALL_8
0x1250	          0x4889ce	                            mov rsi, rcx	       642	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4	CALL_8
0x1253	          0x4889c7	                            mov rdi, rax	       642	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4	CALL_8
0x1256	      0xe8e7f3ffff	               call sym.die_invalid_line	       642	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4	CALL_8
0x125b	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	       646	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_9
0x125f	        0x488d45d0	                   lea rax, [rbp - 0x30]	       646	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_9
0x1263	      0xb9ffffffff	                     mov ecx, 0xffffffff	       646	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_9
0x1268	      0xba20000000	                           mov edx, 0x20	       646	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_9
0x126d	          0x4889c7	                            mov rdi, rax	       646	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_9
0x1270	      0xe800000000	                          call 0x40012b5	       646	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_9
0x1275	        0x488d45d0	                   lea rax, [rbp - 0x30]	       648	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_5	CALL_10
0x1279	      0xbe00000000	                              mov esi, 0	       648	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_5	CALL_10
0x127e	          0x4889c7	                            mov rdi, rax	       648	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_5	CALL_10
0x1281	      0xe800000000	                          call 0x40012c6	       648	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_5	CALL_10
0x1286	            0x85c0	                           test eax, eax	       648	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_5	CALL_10
0x1288	            0x740d	                            je 0x40012d7	       648	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_5	CALL_10
0x128a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       649	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_5
0x128e	    0xc74028020000	               mov dword [rax + 0x28], 2	       649	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_5
0x1295	            0xeb20	                           jmp 0x40012f7	       649	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_5
0x1297	        0x488d45d0	                   lea rax, [rbp - 0x30]	       650	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	ELSE_1	IF_6	CALL_11
0x129b	      0xbe00000000	                              mov esi, 0	       650	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	ELSE_1	IF_6	CALL_11
0x12a0	          0x4889c7	                            mov rdi, rax	       650	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	ELSE_1	IF_6	CALL_11
0x12a3	      0xe800000000	                          call 0x40012e8	       650	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	ELSE_1	IF_6	CALL_11
0x12a8	            0x85c0	                           test eax, eax	       650	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	ELSE_1	IF_6	CALL_11
0x12aa	            0x740b	                            je 0x40012f7	       650	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	ELSE_1	IF_6	CALL_11
0x12ac	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       651	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	ELSE_1	IF_6
0x12b0	    0xc74028010000	               mov dword [rax + 0x28], 1	       651	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	ELSE_1	IF_6
0x12b7	        0x488d45d0	                   lea rax, [rbp - 0x30]	       653	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_12
0x12bb	      0xbe00000000	                              mov esi, 0	       653	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_12
0x12c0	          0x4889c7	                            mov rdi, rax	       653	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_12
0x12c3	      0xe800000000	                          call 0x4001308	       653	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_12
0x12c8	          0x89459c	             mov dword [rbp - 0x64], eax	       653	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_12
0x12cb	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       658	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x12cf	        0x488d5001	                      lea rdx, [rax + 1]	       658	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x12d3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       658	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x12d7	        0x48895018	             mov qword [rax + 0x18], rdx	       658	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x12db	        0x488d45d0	                   lea rax, [rbp - 0x30]	       660	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_13
0x12df	      0xbe00000000	                              mov esi, 0	       660	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_13
0x12e4	          0x4889c7	                            mov rdi, rax	       660	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_13
0x12e7	      0xe800000000	                          call 0x400132c	       660	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_13
0x12ec	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       661	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_14
0x12f0	          0x4889c7	                            mov rdi, rax	       661	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_14
0x12f3	      0xe800000000	                          call 0x4001338	       661	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_14
0x12f8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       664	packed-backend.c	ELSE_3	FUNCTION_17	CALL_15
0x12fc	          0x4889c7	                            mov rdi, rax	       664	packed-backend.c	ELSE_3	FUNCTION_17	CALL_15
0x12ff	      0xe8d9f9ffff	             call sym.verify_buffer_safe	       664	packed-backend.c	ELSE_3	FUNCTION_17	CALL_15
0x1304	        0x837d9c00	               cmp dword [rbp - 0x64], 0	       666	packed-backend.c	ELSE_3	FUNCTION_17	IF_7
0x1308	            0x7518	                           jne 0x4001362	       666	packed-backend.c	ELSE_3	FUNCTION_17	IF_7
0x130a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       667	packed-backend.c	ELSE_3	FUNCTION_17	IF_7	CALL_16
0x130e	          0x4889c7	                            mov rdi, rax	       667	packed-backend.c	ELSE_3	FUNCTION_17	IF_7	CALL_16
0x1311	      0xe81ef5ffff	                  call sym.sort_snapshot	       667	packed-backend.c	ELSE_3	FUNCTION_17	IF_7	CALL_16
0x1316	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       674	packed-backend.c	ELSE_3	FUNCTION_17	IF_7	CALL_17
0x131a	          0x4889c7	                            mov rdi, rax	       674	packed-backend.c	ELSE_3	FUNCTION_17	IF_7	CALL_17
0x131d	      0xe8bbf9ffff	             call sym.verify_buffer_safe	       674	packed-backend.c	ELSE_3	FUNCTION_17	IF_7	CALL_17
0x1322	    0x8b0500000000	            mov eax, dword [0x04001368] 	       677	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x1328	          0x83f802	                              cmp eax, 2	       677	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x132b	     0xf8492000000	                            je 0x4001403	       677	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x1331	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       677	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x1335	          0x8b4008	                mov eax, dword [rax + 8]	       677	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x1338	            0x85c0	                           test eax, eax	       677	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x133a	     0xf8483000000	                            je 0x4001403	       677	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x1340	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       682	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x1344	        0x488b4020	            mov rax, qword [rax + 0x20] 	       682	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x1348	          0x4889c2	                            mov rdx, rax	       682	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x134b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       682	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x134f	        0x488b4018	            mov rax, qword [rax + 0x18] 	       682	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x1353	          0x4829c2	                            sub rdx, rax	       682	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x1356	          0x4889d0	                            mov rax, rdx	       682	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x1359	        0x488945c0	             mov qword [rbp - 0x40], rax	       682	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x135d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       683	packed-backend.c	ELSE_3	FUNCTION_17	IF_8	CALL_18
0x1361	          0x4889c7	                            mov rdi, rax	       683	packed-backend.c	ELSE_3	FUNCTION_17	IF_8	CALL_18
0x1364	      0xe800000000	                          call 0x40013a9	       683	packed-backend.c	ELSE_3	FUNCTION_17	IF_8	CALL_18
0x1369	        0x488945c8	             mov qword [rbp - 0x38], rax	       683	packed-backend.c	ELSE_3	FUNCTION_17	IF_8	CALL_18
0x136d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       685	packed-backend.c	ELSE_3	FUNCTION_17	IF_8	CALL_19
0x1371	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       685	packed-backend.c	ELSE_3	FUNCTION_17	IF_8	CALL_19
0x1375	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       685	packed-backend.c	ELSE_3	FUNCTION_17	IF_8	CALL_19
0x1379	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       685	packed-backend.c	ELSE_3	FUNCTION_17	IF_8	CALL_19
0x137d	          0x4889ce	                            mov rsi, rcx	       685	packed-backend.c	ELSE_3	FUNCTION_17	IF_8	CALL_19
0x1380	          0x4889c7	                            mov rdi, rax	       685	packed-backend.c	ELSE_3	FUNCTION_17	IF_8	CALL_19
0x1383	      0xe800000000	                          call 0x40013c8	       685	packed-backend.c	ELSE_3	FUNCTION_17	IF_8	CALL_19
0x1388	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       686	packed-backend.c	ELSE_3	FUNCTION_17	IF_8	CALL_20
0x138c	          0x4889c7	                            mov rdi, rax	       686	packed-backend.c	ELSE_3	FUNCTION_17	IF_8	CALL_20
0x138f	      0xe80cf0ffff	          call sym.clear_snapshot_buffer	       686	packed-backend.c	ELSE_3	FUNCTION_17	IF_8	CALL_20
0x1394	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       687	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x1398	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       687	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x139c	        0x48895018	             mov qword [rax + 0x18], rdx	       687	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x13a0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       687	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x13a4	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       687	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x13a8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       687	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x13ac	        0x48895010	             mov qword [rax + 0x10], rdx	       687	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x13b0	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       688	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x13b4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       688	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x13b8	          0x4801c2	                            add rdx, rax	       688	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x13bb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       688	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x13bf	        0x48895020	             mov qword [rax + 0x20], rdx	       688	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x13c3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       691	packed-backend.c	ELSE_3	FUNCTION_17
0x13c7	        0x488b4df8	                mov rcx, qword [rbp - 8]	       692	packed-backend.c	ELSE_3	FUNCTION_17
0x13cb	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       692	packed-backend.c	ELSE_3	FUNCTION_17
0x13d4	            0x7405	                            je 0x400141b	       692	packed-backend.c	ELSE_3	FUNCTION_17
0x13d6	      0xe800000000	                          call 0x400141b	       692	packed-backend.c	ELSE_3	FUNCTION_17
0x13db	              0xc9	                                   leave	       692	packed-backend.c	ELSE_3	FUNCTION_17
0x13dc	              0xc3	                                     ret	       692	packed-backend.c	ELSE_3	FUNCTION_17
is_packed_transaction_needed	functions,0:IF,5:DO,0:FOR,2:WHILE,0:CALL,6:ELSE,0:SWITCH,0	109
0x2478	              0x55	                                push rbp	      1273	packed-backend.c	FUNCTION_32
0x2479	          0x4889e5	                            mov rbp, rsp	      1273	packed-backend.c	FUNCTION_32
0x247c	        0x4883c480	             add rsp, 0xffffffffffffff80	      1273	packed-backend.c	FUNCTION_32
0x2480	        0x48897d88	             mov qword [rbp - 0x78], rdi	      1273	packed-backend.c	FUNCTION_32
0x2484	        0x48897580	             mov qword [rbp - 0x80], rsi	      1273	packed-backend.c	FUNCTION_32
0x2488	    0x64488b042528	                mov rax, qword fs:[0x28]	      1273	packed-backend.c	FUNCTION_32
0x2491	        0x488945f8	                mov qword [rbp - 8], rax	      1273	packed-backend.c	FUNCTION_32
0x2495	            0x31c0	                            xor eax, eax	      1273	packed-backend.c	FUNCTION_32
0x2497	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1274	packed-backend.c	FUNCTION_32	CALL_1
0x249b	      0xba00000000	                              mov edx, 0	      1274	packed-backend.c	FUNCTION_32	CALL_1
0x24a0	      0xbe01000000	                              mov esi, 1	      1274	packed-backend.c	FUNCTION_32	CALL_1
0x24a5	          0x4889c7	                            mov rdi, rax	      1274	packed-backend.c	FUNCTION_32	CALL_1
0x24a8	      0xe87be0ffff	                call sym.packed_downcast	      1274	packed-backend.c	FUNCTION_32	CALL_1
0x24ad	        0x488945a8	             mov qword [rbp - 0x58], rax	      1274	packed-backend.c	FUNCTION_32	CALL_1
0x24b1	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1278	packed-backend.c	FUNCTION_32
0x24b9	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1278	packed-backend.c	FUNCTION_32
0x24c1	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1278	packed-backend.c	FUNCTION_32
0x24c9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1282	packed-backend.c	FUNCTION_32	IF_1	CALL_2
0x24cd	        0x4883c020	                           add rax, 0x20	      1282	packed-backend.c	FUNCTION_32	IF_1	CALL_2
0x24d1	          0x4889c7	                            mov rdi, rax	      1282	packed-backend.c	FUNCTION_32	IF_1	CALL_2
0x24d4	      0xe856deffff	            call sym.is_lock_file_locked	      1282	packed-backend.c	FUNCTION_32	IF_1	CALL_2
0x24d9	            0x85c0	                           test eax, eax	      1282	packed-backend.c	FUNCTION_32	IF_1	CALL_2
0x24db	            0x7519	                           jne 0x4002536	      1282	packed-backend.c	FUNCTION_32	IF_1	CALL_2
0x24dd	      0xba00000000	                              mov edx, 0	      1283	packed-backend.c	FUNCTION_32	CALL_3
0x24e2	      0xbe03050000	                          mov esi, 0x503	      1283	packed-backend.c	FUNCTION_32	CALL_3
0x24e7	      0xbf00000000	                              mov edi, 0	      1283	packed-backend.c	FUNCTION_32	CALL_3
0x24ec	      0xb800000000	                              mov eax, 0	      1283	packed-backend.c	FUNCTION_32	CALL_3
0x24f1	      0xe800000000	                          call 0x4002536	      1283	packed-backend.c	FUNCTION_32	CALL_3
0x24f6	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      1317	packed-backend.c	FUNCTION_32	FOR_1
0x24fe	            0xeb5f	                           jmp 0x400259f	      1317	packed-backend.c	FUNCTION_32	FOR_1
0x2500	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1318	packed-backend.c	FUNCTION_32	FOR_1
0x2504	        0x488b4008	                mov rax, qword [rax + 8]	      1318	packed-backend.c	FUNCTION_32	FOR_1
0x2508	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1318	packed-backend.c	FUNCTION_32	FOR_1
0x250c	        0x48c1e203	                              shl rdx, 3	      1318	packed-backend.c	FUNCTION_32	FOR_1
0x2510	          0x4801d0	                            add rax, rdx	      1318	packed-backend.c	FUNCTION_32	FOR_1
0x2513	          0x488b00	                    mov rax, qword [rax]	      1318	packed-backend.c	FUNCTION_32	FOR_1
0x2516	        0x488945b0	             mov qword [rbp - 0x50], rax	      1318	packed-backend.c	FUNCTION_32	FOR_1
0x251a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1320	packed-backend.c	FUNCTION_32	FOR_1	IF_2
0x251e	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1320	packed-backend.c	FUNCTION_32	FOR_1	IF_2
0x2521	          0x83e008	                              and eax, 8	      1320	packed-backend.c	FUNCTION_32	FOR_1	IF_2
0x2524	            0x85c0	                           test eax, eax	      1320	packed-backend.c	FUNCTION_32	FOR_1	IF_2
0x2526	            0x740a	                            je 0x4002572	      1320	packed-backend.c	FUNCTION_32	FOR_1	IF_2
0x2528	      0xb801000000	                              mov eax, 1	      1322	packed-backend.c	FUNCTION_32	FOR_1	IF_2
0x252d	      0xe9d3000000	                           jmp 0x4002645	      1322	packed-backend.c	FUNCTION_32	FOR_1	IF_2
0x2532	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1324	packed-backend.c	FUNCTION_32	FOR_1	IF_3	CALL_4
0x2536	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1324	packed-backend.c	FUNCTION_32	FOR_1	IF_3	CALL_4
0x2539	          0x83e004	                              and eax, 4	      1324	packed-backend.c	FUNCTION_32	FOR_1	IF_3	CALL_4
0x253c	            0x85c0	                           test eax, eax	      1324	packed-backend.c	FUNCTION_32	FOR_1	IF_3	CALL_4
0x253e	            0x741a	                            je 0x400259a	      1324	packed-backend.c	FUNCTION_32	FOR_1	IF_3	CALL_4
0x2540	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1324	packed-backend.c	FUNCTION_32	FOR_1	IF_3	CALL_4
0x2544	          0x4889c7	                            mov rdi, rax	      1324	packed-backend.c	FUNCTION_32	FOR_1	IF_3	CALL_4
0x2547	      0xe81eddffff	                    call sym.is_null_oid	      1324	packed-backend.c	FUNCTION_32	FOR_1	IF_3	CALL_4
0x254c	            0x85c0	                           test eax, eax	      1324	packed-backend.c	FUNCTION_32	FOR_1	IF_3	CALL_4
0x254e	            0x750a	                           jne 0x400259a	      1324	packed-backend.c	FUNCTION_32	FOR_1	IF_3	CALL_4
0x2550	      0xb801000000	                              mov eax, 1	      1326	packed-backend.c	FUNCTION_32	FOR_1	IF_3
0x2555	      0xe9ab000000	                           jmp 0x4002645	      1326	packed-backend.c	FUNCTION_32	FOR_1	IF_3
0x255a	      0x488345a001	               add qword [rbp - 0x60], 1	      1317	packed-backend.c	FUNCTION_32	FOR_1
0x255f	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1317	packed-backend.c	FUNCTION_32	FOR_1
0x2563	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1317	packed-backend.c	FUNCTION_32	FOR_1
0x2567	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	      1317	packed-backend.c	FUNCTION_32	FOR_1
0x256b	            0x7793	                            ja 0x4002540	      1317	packed-backend.c	FUNCTION_32	FOR_1
0x256d	    0xc7459c000000	               mov dword [rbp - 0x64], 0	      1336	packed-backend.c	FUNCTION_32
0x2574	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      1337	packed-backend.c	FUNCTION_32	FOR_2
0x257c	            0xeb6a	                           jmp 0x4002628	      1337	packed-backend.c	FUNCTION_32	FOR_2
0x257e	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1338	packed-backend.c	FUNCTION_32	FOR_2
0x2582	        0x488b4008	                mov rax, qword [rax + 8]	      1338	packed-backend.c	FUNCTION_32	FOR_2
0x2586	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1338	packed-backend.c	FUNCTION_32	FOR_2
0x258a	        0x48c1e203	                              shl rdx, 3	      1338	packed-backend.c	FUNCTION_32	FOR_2
0x258e	          0x4801d0	                            add rax, rdx	      1338	packed-backend.c	FUNCTION_32	FOR_2
0x2591	          0x488b00	                    mov rax, qword [rax]	      1338	packed-backend.c	FUNCTION_32	FOR_2
0x2594	        0x488945b8	             mov qword [rbp - 0x48], rax	      1338	packed-backend.c	FUNCTION_32	FOR_2
0x2598	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1342	packed-backend.c	FUNCTION_32	FOR_2	IF_4
0x259c	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1342	packed-backend.c	FUNCTION_32	FOR_2	IF_4
0x259f	          0x83e004	                              and eax, 4	      1342	packed-backend.c	FUNCTION_32	FOR_2	IF_4
0x25a2	            0x85c0	                           test eax, eax	      1342	packed-backend.c	FUNCTION_32	FOR_2	IF_4
0x25a4	            0x743c	                            je 0x4002622	      1342	packed-backend.c	FUNCTION_32	FOR_2	IF_4
0x25a6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1349	packed-backend.c	FUNCTION_32	FOR_2	IF_5	CALL_5
0x25aa	        0x488d7050	                   lea rsi, [rax + 0x50]	      1349	packed-backend.c	FUNCTION_32	FOR_2	IF_5	CALL_5
0x25ae	        0x488d7d98	                   lea rdi, [rbp - 0x68]	      1349	packed-backend.c	FUNCTION_32	FOR_2	IF_5	CALL_5
0x25b2	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	      1349	packed-backend.c	FUNCTION_32	FOR_2	IF_5	CALL_5
0x25b6	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1349	packed-backend.c	FUNCTION_32	FOR_2	IF_5	CALL_5
0x25ba	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1349	packed-backend.c	FUNCTION_32	FOR_2	IF_5	CALL_5
0x25be	          0x4989f8	                             mov r8, rdi	      1349	packed-backend.c	FUNCTION_32	FOR_2	IF_5	CALL_5
0x25c1	          0x4889c7	                            mov rdi, rax	      1349	packed-backend.c	FUNCTION_32	FOR_2	IF_5	CALL_5
0x25c4	      0xe800000000	                          call 0x4002609	      1349	packed-backend.c	FUNCTION_32	FOR_2	IF_5	CALL_5
0x25c9	            0x85c0	                           test eax, eax	      1349	packed-backend.c	FUNCTION_32	FOR_2	IF_5	CALL_5
0x25cb	            0x740c	                            je 0x4002619	      1349	packed-backend.c	FUNCTION_32	FOR_2	IF_5	CALL_5
0x25cd	      0xe800000000	                          call 0x4002612	      1351	packed-backend.c	FUNCTION_32	FOR_2	IF_5
0x25d2	            0x8b00	                    mov eax, dword [rax]	      1351	packed-backend.c	FUNCTION_32	FOR_2	IF_5
0x25d4	          0x83f802	                              cmp eax, 2	      1350	packed-backend.c	FUNCTION_32	FOR_2	IF_5
0x25d7	            0x740a	                            je 0x4002623	      1350	packed-backend.c	FUNCTION_32	FOR_2	IF_5
0x25d9	    0xc7459c010000	               mov dword [rbp - 0x64], 1	      1356	packed-backend.c	FUNCTION_32	FOR_2	IF_5
0x25e0	            0xeb14	                           jmp 0x4002636	      1356	packed-backend.c	FUNCTION_32	FOR_2	IF_5
0x25e2	              0x90	                                     nop	      1347	packed-backend.c	FUNCTION_32	FOR_2	IF_4
0x25e3	      0x488345a001	               add qword [rbp - 0x60], 1	      1337	packed-backend.c	FUNCTION_32	FOR_2
0x25e8	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1337	packed-backend.c	FUNCTION_32	FOR_2
0x25ec	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1337	packed-backend.c	FUNCTION_32	FOR_2
0x25f0	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	      1337	packed-backend.c	FUNCTION_32	FOR_2
0x25f4	            0x7788	                            ja 0x40025be	      1337	packed-backend.c	FUNCTION_32	FOR_2
0x25f6	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1361	packed-backend.c	FUNCTION_32	CALL_6
0x25fa	          0x4889c7	                            mov rdi, rax	      1361	packed-backend.c	FUNCTION_32	CALL_6
0x25fd	      0xe800000000	                          call 0x4002642	      1361	packed-backend.c	FUNCTION_32	CALL_6
0x2602	          0x8b459c	             mov eax, dword [rbp - 0x64]	      1362	packed-backend.c	FUNCTION_32
0x2605	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1363	packed-backend.c	FUNCTION_32
0x2609	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1363	packed-backend.c	FUNCTION_32
0x2612	            0x7405	                            je 0x4002659	      1363	packed-backend.c	FUNCTION_32
0x2614	      0xe800000000	                          call 0x4002659	      1363	packed-backend.c	FUNCTION_32
0x2619	              0xc9	                                   leave	      1363	packed-backend.c	FUNCTION_32
0x261a	              0xc3	                                     ret	      1363	packed-backend.c	FUNCTION_32
st_mult	functions,0:IF,1:DO,0:FOR,0:WHILE,0:CALL,2:ELSE,0:SWITCH,0	22
0x61	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_64
0x62	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_64
0x65	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_64
0x69	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_64
0x6d	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_64
0x71	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_64	IF_1	CALL_1
0x76	            0x7430	                            je 0x40000e8	       795	git-compat-util.h	FUNCTION_64	IF_1	CALL_1
0x78	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_64	IF_1	CALL_1
0x7f	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_64	IF_1	CALL_1
0x84	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_64	IF_1	CALL_1
0x88	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_64	IF_1	CALL_1
0x8c	            0x731a	                           jae 0x40000e8	       795	git-compat-util.h	FUNCTION_64	IF_1	CALL_1
0x8e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_64	IF_1	CALL_2
0x92	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_64	IF_1	CALL_2
0x96	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_64	IF_1	CALL_2
0x99	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_64	IF_1	CALL_2
0x9e	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_64	IF_1	CALL_2
0xa3	      0xe800000000	                          call 0x40000e8	       796	git-compat-util.h	FUNCTION_64	IF_1	CALL_2
0xa8	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_64
0xac	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_64
0xb1	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_64
0xb2	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_64
strbuf_setlen	functions,0:IF,2:DO,0:FOR,0:WHILE,0:CALL,2:ELSE,1:SWITCH,0	43
0x120	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_93
0x121	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_93
0x124	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_93
0x128	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_93
0x12c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_93
0x130	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_93	IF_1
0x134	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_93	IF_1
0x137	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_93	IF_1
0x13a	            0x740d	                            je 0x4000189	       162	strbuf.h	FUNCTION_93	IF_1
0x13c	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_93	IF_1
0x140	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_93	IF_1
0x143	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_93	IF_1
0x147	            0xeb05	                           jmp 0x400018e	       162	strbuf.h	FUNCTION_93	IF_1
0x149	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_93	IF_1
0x14e	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_93	IF_1
0x152	            0x730f	                           jae 0x40001a3	       162	strbuf.h	FUNCTION_93	IF_1
0x154	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_93	CALL_1
0x159	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_93	CALL_1
0x15e	      0xe800000000	                          call 0x40001a3	       163	strbuf.h	FUNCTION_93	CALL_1
0x163	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_93
0x167	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_93
0x16b	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_93
0x16f	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_93	IF_2
0x173	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_93	IF_2
0x177	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_93	IF_2
0x17d	            0x7414	                            je 0x40001d3	       165	strbuf.h	FUNCTION_93	IF_2
0x17f	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_93	IF_2
0x183	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_93	IF_2
0x187	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_93	IF_2
0x18b	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_93	IF_2
0x18e	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_93	IF_2
0x191	            0xeb24	                           jmp 0x40001f7	       169	strbuf.h	FUNCTION_93
0x193	     0xfb605000000	           movzx eax, byte [0x040001da] 	       168	strbuf.h	FUNCTION_93	CALL_2
0x19a	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_93	CALL_2
0x19c	            0x7419	                            je 0x40001f7	       168	strbuf.h	FUNCTION_93	CALL_2
0x19e	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_93	CALL_2
0x1a3	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_93	CALL_2
0x1a8	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_93	CALL_2
0x1ad	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_93	CALL_2
0x1b2	      0xe800000000	                          call 0x40001f7	       168	strbuf.h	FUNCTION_93	CALL_2
0x1b7	              0x90	                                     nop	       169	strbuf.h	FUNCTION_93
0x1b8	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_93
0x1b9	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_93
packed_init_db	functions,0:IF,0:DO,0:FOR,0:WHILE,0:CALL,0:ELSE,0:SWITCH,0	7
0x1e4d	              0x55	                                push rbp	      1065	packed-backend.c	FUNCTION_30
0x1e4e	          0x4889e5	                            mov rbp, rsp	      1065	packed-backend.c	FUNCTION_30
0x1e51	        0x48897df8	                mov qword [rbp - 8], rdi	      1065	packed-backend.c	FUNCTION_30
0x1e55	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1065	packed-backend.c	FUNCTION_30
0x1e59	      0xb800000000	                              mov eax, 0	      1067	packed-backend.c	FUNCTION_30
0x1e5e	              0x5d	                                 pop rbp	      1068	packed-backend.c	FUNCTION_30
0x1e5f	              0xc3	                                     ret	      1068	packed-backend.c	FUNCTION_30
packed_transaction_finish	functions,0:IF,1:DO,0:FOR,0:WHILE,0:CALL,8:ELSE,0:SWITCH,0	54
0x289a	              0x55	                                push rbp	      1471	packed-backend.c	FUNCTION_36
0x289b	          0x4889e5	                            mov rbp, rsp	      1471	packed-backend.c	FUNCTION_36
0x289e	        0x4883ec40	                           sub rsp, 0x40	      1471	packed-backend.c	FUNCTION_36
0x28a2	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1471	packed-backend.c	FUNCTION_36
0x28a6	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1471	packed-backend.c	FUNCTION_36
0x28aa	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1471	packed-backend.c	FUNCTION_36
0x28ae	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1472	packed-backend.c	FUNCTION_36	CALL_1
0x28b2	      0xba00000000	                              mov edx, 0	      1472	packed-backend.c	FUNCTION_36	CALL_1
0x28b7	      0xbe07000000	                              mov esi, 7	      1472	packed-backend.c	FUNCTION_36	CALL_1
0x28bc	          0x4889c7	                            mov rdi, rax	      1472	packed-backend.c	FUNCTION_36	CALL_1
0x28bf	      0xe864dcffff	                call sym.packed_downcast	      1472	packed-backend.c	FUNCTION_36	CALL_1
0x28c4	        0x488945f0	             mov qword [rbp - 0x10], rax	      1472	packed-backend.c	FUNCTION_36	CALL_1
0x28c8	    0xc745ecfeffff	     mov dword [rbp - 0x14], 0xfffffffe 	      1476	packed-backend.c	FUNCTION_36
0x28cf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1479	packed-backend.c	FUNCTION_36	CALL_2
0x28d3	          0x4889c7	                            mov rdi, rax	      1479	packed-backend.c	FUNCTION_36	CALL_2
0x28d6	      0xe8cddcffff	                 call sym.clear_snapshot	      1479	packed-backend.c	FUNCTION_36	CALL_2
0x28db	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1481	packed-backend.c	FUNCTION_36	CALL_3
0x28df	        0x4883c020	                           add rax, 0x20	      1481	packed-backend.c	FUNCTION_36	CALL_3
0x28e3	          0x4889c7	                            mov rdi, rax	      1481	packed-backend.c	FUNCTION_36	CALL_3
0x28e6	      0xe800000000	                          call 0x400292b	      1481	packed-backend.c	FUNCTION_36	CALL_3
0x28eb	        0x488945f8	                mov qword [rbp - 8], rax	      1481	packed-backend.c	FUNCTION_36	CALL_3
0x28ef	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1482	packed-backend.c	FUNCTION_36	IF_1	CALL_4
0x28f3	        0x488d5028	                   lea rdx, [rax + 0x28]	      1482	packed-backend.c	FUNCTION_36	IF_1	CALL_4
0x28f7	        0x488b45f8	                mov rax, qword [rbp - 8]	      1482	packed-backend.c	FUNCTION_36	IF_1	CALL_4
0x28fb	          0x4889c6	                            mov rsi, rax	      1482	packed-backend.c	FUNCTION_36	IF_1	CALL_4
0x28fe	          0x4889d7	                            mov rdi, rdx	      1482	packed-backend.c	FUNCTION_36	IF_1	CALL_4
0x2901	      0xe800000000	                          call 0x4002946	      1482	packed-backend.c	FUNCTION_36	IF_1	CALL_4
0x2906	            0x85c0	                           test eax, eax	      1482	packed-backend.c	FUNCTION_36	IF_1	CALL_4
0x2908	            0x7431	                            je 0x400297b	      1482	packed-backend.c	FUNCTION_36	IF_1	CALL_4
0x290a	      0xe800000000	                          call 0x400294f	      1484	packed-backend.c	FUNCTION_36	IF_1	CALL_6
0x290f	            0x8b00	                    mov eax, dword [rax]	      1483	packed-backend.c	FUNCTION_36	IF_1	CALL_5
0x2911	            0x89c7	                            mov edi, eax	      1483	packed-backend.c	FUNCTION_36	IF_1	CALL_5
0x2913	      0xe800000000	                          call 0x4002958	      1483	packed-backend.c	FUNCTION_36	IF_1	CALL_5
0x2918	          0x4889c1	                            mov rcx, rax	      1483	packed-backend.c	FUNCTION_36	IF_1	CALL_5
0x291b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1483	packed-backend.c	FUNCTION_36	IF_1	CALL_5
0x291f	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1483	packed-backend.c	FUNCTION_36	IF_1	CALL_5
0x2923	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1483	packed-backend.c	FUNCTION_36	IF_1	CALL_5
0x2927	      0xbe00000000	                              mov esi, 0	      1483	packed-backend.c	FUNCTION_36	IF_1	CALL_5
0x292c	          0x4889c7	                            mov rdi, rax	      1483	packed-backend.c	FUNCTION_36	IF_1	CALL_5
0x292f	      0xb800000000	                              mov eax, 0	      1483	packed-backend.c	FUNCTION_36	IF_1	CALL_5
0x2934	      0xe800000000	                          call 0x4002979	      1483	packed-backend.c	FUNCTION_36	IF_1	CALL_5
0x2939	            0xeb07	                           jmp 0x4002982	      1485	packed-backend.c	FUNCTION_36	IF_1
0x293b	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      1488	packed-backend.c	FUNCTION_36
0x2942	        0x488b45f8	                mov rax, qword [rbp - 8]	      1491	packed-backend.c	FUNCTION_36	CALL_7
0x2946	          0x4889c7	                            mov rdi, rax	      1491	packed-backend.c	FUNCTION_36	CALL_7
0x2949	      0xe800000000	                          call 0x400298e	      1491	packed-backend.c	FUNCTION_36	CALL_7
0x294e	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1492	packed-backend.c	FUNCTION_36	CALL_8
0x2952	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1492	packed-backend.c	FUNCTION_36	CALL_8
0x2956	          0x4889d6	                            mov rsi, rdx	      1492	packed-backend.c	FUNCTION_36	CALL_8
0x2959	          0x4889c7	                            mov rdi, rax	      1492	packed-backend.c	FUNCTION_36	CALL_8
0x295c	      0xe8bafcffff	     call sym.packed_transaction_cleanup	      1492	packed-backend.c	FUNCTION_36	CALL_8
0x2961	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1493	packed-backend.c	FUNCTION_36
0x2964	              0xc9	                                   leave	      1494	packed-backend.c	FUNCTION_36
0x2965	              0xc3	                                     ret	      1494	packed-backend.c	FUNCTION_36
rollback_lock_file	functions,0:IF,0:DO,0:FOR,0:WHILE,0:CALL,1:ELSE,0:SWITCH,0	10
0x369	              0x55	                                push rbp	       303	lockfile.h	FUNCTION_86
0x36a	          0x4889e5	                            mov rbp, rsp	       303	lockfile.h	FUNCTION_86
0x36d	        0x4883ec10	                           sub rsp, 0x10	       303	lockfile.h	FUNCTION_86
0x371	        0x48897df8	                mov qword [rbp - 8], rdi	       303	lockfile.h	FUNCTION_86
0x375	        0x488b45f8	                mov rax, qword [rbp - 8]	       304	lockfile.h	FUNCTION_86	CALL_1
0x379	          0x4889c7	                            mov rdi, rax	       304	lockfile.h	FUNCTION_86	CALL_1
0x37c	      0xe800000000	                          call 0x40003c1	       304	lockfile.h	FUNCTION_86	CALL_1
0x381	              0x90	                                     nop	       305	lockfile.h	FUNCTION_86
0x382	              0xc9	                                   leave	       305	lockfile.h	FUNCTION_86
0x383	              0xc3	                                     ret	       305	lockfile.h	FUNCTION_86
packed_ref_iterator_begin	functions,0:IF,4:DO,0:FOR,0:WHILE,0:CALL,9:ELSE,1:SWITCH,0	98
0x1aaa	              0x55	                                push rbp	       915	packed-backend.c	FUNCTION_25
0x1aab	          0x4889e5	                            mov rbp, rsp	       915	packed-backend.c	FUNCTION_25
0x1aae	        0x4883ec50	                           sub rsp, 0x50	       915	packed-backend.c	FUNCTION_25
0x1ab2	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       915	packed-backend.c	FUNCTION_25
0x1ab6	        0x488975c0	             mov qword [rbp - 0x40], rsi	       915	packed-backend.c	FUNCTION_25
0x1aba	          0x8955bc	             mov dword [rbp - 0x44], edx	       915	packed-backend.c	FUNCTION_25
0x1abd	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	       921	packed-backend.c	FUNCTION_25
0x1ac4	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       923	packed-backend.c	FUNCTION_25	IF_1
0x1ac7	          0x83e001	                              and eax, 1	       923	packed-backend.c	FUNCTION_25	IF_1
0x1aca	            0x85c0	                           test eax, eax	       923	packed-backend.c	FUNCTION_25	IF_1
0x1acc	            0x7504	                           jne 0x4001b12	       923	packed-backend.c	FUNCTION_25	IF_1
0x1ace	        0x834dd404	                or dword [rbp - 0x2c], 4	       924	packed-backend.c	FUNCTION_25	IF_1
0x1ad2	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	       925	packed-backend.c	FUNCTION_25	CALL_1
0x1ad5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       925	packed-backend.c	FUNCTION_25	CALL_1
0x1ad9	      0xba00000000	                              mov edx, 0	       925	packed-backend.c	FUNCTION_25	CALL_1
0x1ade	            0x89ce	                            mov esi, ecx	       925	packed-backend.c	FUNCTION_25	CALL_1
0x1ae0	          0x4889c7	                            mov rdi, rax	       925	packed-backend.c	FUNCTION_25	CALL_1
0x1ae3	      0xe840eaffff	                call sym.packed_downcast	       925	packed-backend.c	FUNCTION_25	CALL_1
0x1ae8	        0x488945e8	             mov qword [rbp - 0x18], rax	       925	packed-backend.c	FUNCTION_25	CALL_1
0x1aec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       932	packed-backend.c	FUNCTION_25	CALL_2
0x1af0	          0x4889c7	                            mov rdi, rax	       932	packed-backend.c	FUNCTION_25	CALL_2
0x1af3	      0xe830f9ffff	                   call sym.get_snapshot	       932	packed-backend.c	FUNCTION_25	CALL_2
0x1af8	        0x488945f0	             mov qword [rbp - 0x10], rax	       932	packed-backend.c	FUNCTION_25	CALL_2
0x1afc	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       934	packed-backend.c	FUNCTION_25	IF_2
0x1b01	            0x7429	                            je 0x4001b6c	       934	packed-backend.c	FUNCTION_25	IF_2
0x1b03	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       934	packed-backend.c	FUNCTION_25	IF_2
0x1b07	           0xfb600	                   movzx eax, byte [rax]	       934	packed-backend.c	FUNCTION_25	IF_2
0x1b0a	            0x84c0	                             test al, al	       934	packed-backend.c	FUNCTION_25	IF_2
0x1b0c	            0x741e	                            je 0x4001b6c	       934	packed-backend.c	FUNCTION_25	IF_2
0x1b0e	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       935	packed-backend.c	FUNCTION_25	CALL_3
0x1b12	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       935	packed-backend.c	FUNCTION_25	CALL_3
0x1b16	      0xba00000000	                              mov edx, 0	       935	packed-backend.c	FUNCTION_25	CALL_3
0x1b1b	          0x4889ce	                            mov rsi, rcx	       935	packed-backend.c	FUNCTION_25	CALL_3
0x1b1e	          0x4889c7	                            mov rdi, rax	       935	packed-backend.c	FUNCTION_25	CALL_3
0x1b21	      0xe8a6f4ffff	        call sym.find_reference_location	       935	packed-backend.c	FUNCTION_25	CALL_3
0x1b26	        0x488945d8	             mov qword [rbp - 0x28], rax	       935	packed-backend.c	FUNCTION_25	CALL_3
0x1b2a	            0xeb0c	                           jmp 0x4001b78	       935	packed-backend.c	FUNCTION_25	CALL_3
0x1b2c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       937	packed-backend.c	FUNCTION_25	ELSE_1
0x1b30	        0x488b4018	            mov rax, qword [rax + 0x18] 	       937	packed-backend.c	FUNCTION_25	ELSE_1
0x1b34	        0x488945d8	             mov qword [rbp - 0x28], rax	       937	packed-backend.c	FUNCTION_25	ELSE_1
0x1b38	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       939	packed-backend.c	FUNCTION_25	IF_3
0x1b3c	        0x488b4020	            mov rax, qword [rax + 0x20] 	       939	packed-backend.c	FUNCTION_25	IF_3
0x1b40	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       939	packed-backend.c	FUNCTION_25	IF_3
0x1b44	            0x750a	                           jne 0x4001b90	       939	packed-backend.c	FUNCTION_25	IF_3
0x1b46	      0xe800000000	                          call 0x4001b8b	       940	packed-backend.c	FUNCTION_25	CALL_4
0x1b4b	      0xe9c9000000	                           jmp 0x4001c59	       940	packed-backend.c	FUNCTION_25	CALL_4
0x1b50	      0xbe88000000	                           mov esi, 0x88	       942	packed-backend.c	FUNCTION_25	CALL_5
0x1b55	      0xbf01000000	                              mov edi, 1	       942	packed-backend.c	FUNCTION_25	CALL_5
0x1b5a	      0xe800000000	                          call 0x4001b9f	       942	packed-backend.c	FUNCTION_25	CALL_5
0x1b5f	        0x488945f8	                mov qword [rbp - 8], rax	       942	packed-backend.c	FUNCTION_25	CALL_5
0x1b63	        0x488b45f8	                mov rax, qword [rbp - 8]	       943	packed-backend.c	FUNCTION_25
0x1b67	        0x488945e0	             mov qword [rbp - 0x20], rax	       943	packed-backend.c	FUNCTION_25
0x1b6b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       944	packed-backend.c	FUNCTION_25	CALL_6
0x1b6f	      0xba01000000	                              mov edx, 1	       944	packed-backend.c	FUNCTION_25	CALL_6
0x1b74	      0xbe00000000	                              mov esi, 0	       944	packed-backend.c	FUNCTION_25	CALL_6
0x1b79	          0x4889c7	                            mov rdi, rax	       944	packed-backend.c	FUNCTION_25	CALL_6
0x1b7c	      0xe800000000	                          call 0x4001bc1	       944	packed-backend.c	FUNCTION_25	CALL_6
0x1b81	        0x488b45f8	                mov rax, qword [rbp - 8]	       946	packed-backend.c	FUNCTION_25
0x1b85	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       946	packed-backend.c	FUNCTION_25
0x1b89	        0x48895028	             mov qword [rax + 0x28], rdx	       946	packed-backend.c	FUNCTION_25
0x1b8d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       947	packed-backend.c	FUNCTION_25	CALL_7
0x1b91	          0x4889c7	                            mov rdi, rax	       947	packed-backend.c	FUNCTION_25	CALL_7
0x1b94	      0xe8ebe7ffff	               call sym.acquire_snapshot	       947	packed-backend.c	FUNCTION_25	CALL_7
0x1b99	        0x488b45f8	                mov rax, qword [rbp - 8]	       949	packed-backend.c	FUNCTION_25
0x1b9d	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       949	packed-backend.c	FUNCTION_25
0x1ba1	        0x48895030	             mov qword [rax + 0x30], rdx	       949	packed-backend.c	FUNCTION_25
0x1ba5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       950	packed-backend.c	FUNCTION_25
0x1ba9	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       950	packed-backend.c	FUNCTION_25
0x1bad	        0x488b45f8	                mov rax, qword [rbp - 8]	       950	packed-backend.c	FUNCTION_25
0x1bb1	        0x48895038	             mov qword [rax + 0x38], rdx	       950	packed-backend.c	FUNCTION_25
0x1bb5	        0x488b45f8	                mov rax, qword [rbp - 8]	       951	packed-backend.c	FUNCTION_25	CALL_8
0x1bb9	        0x4883c068	                           add rax, 0x68	       951	packed-backend.c	FUNCTION_25	CALL_8
0x1bbd	      0xbe00000000	                              mov esi, 0	       951	packed-backend.c	FUNCTION_25	CALL_8
0x1bc2	          0x4889c7	                            mov rdi, rax	       951	packed-backend.c	FUNCTION_25	CALL_8
0x1bc5	      0xe800000000	                          call 0x4001c0a	       951	packed-backend.c	FUNCTION_25	CALL_8
0x1bca	        0x488b45f8	                mov rax, qword [rbp - 8]	       953	packed-backend.c	FUNCTION_25
0x1bce	        0x488d5040	                   lea rdx, [rax + 0x40]	       953	packed-backend.c	FUNCTION_25
0x1bd2	        0x488b45f8	                mov rax, qword [rbp - 8]	       953	packed-backend.c	FUNCTION_25
0x1bd6	        0x48895018	             mov qword [rax + 0x18], rdx	       953	packed-backend.c	FUNCTION_25
0x1bda	        0x488b45f8	                mov rax, qword [rbp - 8]	       955	packed-backend.c	FUNCTION_25
0x1bde	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       955	packed-backend.c	FUNCTION_25
0x1be1	    0x899080000000	             mov dword [rax + 0x80], edx	       955	packed-backend.c	FUNCTION_25
0x1be7	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       957	packed-backend.c	FUNCTION_25	IF_4
0x1bec	            0x7427	                            je 0x4001c55	       957	packed-backend.c	FUNCTION_25	IF_4
0x1bee	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       957	packed-backend.c	FUNCTION_25	IF_4
0x1bf2	           0xfb600	                   movzx eax, byte [rax]	       957	packed-backend.c	FUNCTION_25	IF_4
0x1bf5	            0x84c0	                             test al, al	       957	packed-backend.c	FUNCTION_25	IF_4
0x1bf7	            0x741c	                            je 0x4001c55	       957	packed-backend.c	FUNCTION_25	IF_4
0x1bf9	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       959	packed-backend.c	FUNCTION_25	CALL_9
0x1bfd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       959	packed-backend.c	FUNCTION_25	CALL_9
0x1c01	      0xba00000000	                              mov edx, 0	       959	packed-backend.c	FUNCTION_25	CALL_9
0x1c06	          0x4889ce	                            mov rsi, rcx	       959	packed-backend.c	FUNCTION_25	CALL_9
0x1c09	          0x4889c7	                            mov rdi, rax	       959	packed-backend.c	FUNCTION_25	CALL_9
0x1c0c	      0xe800000000	                          call 0x4001c51	       959	packed-backend.c	FUNCTION_25	CALL_9
0x1c11	        0x488945e0	             mov qword [rbp - 0x20], rax	       959	packed-backend.c	FUNCTION_25	CALL_9
0x1c15	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       961	packed-backend.c	FUNCTION_25
0x1c19	              0xc9	                                   leave	       962	packed-backend.c	FUNCTION_25
0x1c1a	              0xc3	                                     ret	       962	packed-backend.c	FUNCTION_25
find_start_of_record	functions,0:IF,0:DO,0:FOR,0:WHILE,1:CALL,0:ELSE,0:SWITCH,0	21
0xc65	              0x55	                                push rbp	       414	packed-backend.c	FUNCTION_12
0xc66	          0x4889e5	                            mov rbp, rsp	       414	packed-backend.c	FUNCTION_12
0xc69	        0x48897df8	                mov qword [rbp - 8], rdi	       414	packed-backend.c	FUNCTION_12
0xc6d	        0x488975f0	             mov qword [rbp - 0x10], rsi	       414	packed-backend.c	FUNCTION_12
0xc71	            0xeb05	                           jmp 0x4000cb8	       415	packed-backend.c	FUNCTION_12	WHILE_1
0xc73	      0x48836df001	               sub qword [rbp - 0x10], 1	       416	packed-backend.c	FUNCTION_12	WHILE_1
0xc78	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       415	packed-backend.c	FUNCTION_12	WHILE_1
0xc7c	        0x483b45f8	                cmp rax, qword [rbp - 8]	       415	packed-backend.c	FUNCTION_12	WHILE_1
0xc80	            0x761a	                           jbe 0x4000cdc	       415	packed-backend.c	FUNCTION_12	WHILE_1
0xc82	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       415	packed-backend.c	FUNCTION_12	WHILE_1
0xc86	        0x4883e801	                              sub rax, 1	       415	packed-backend.c	FUNCTION_12	WHILE_1
0xc8a	           0xfb600	                   movzx eax, byte [rax]	       415	packed-backend.c	FUNCTION_12	WHILE_1
0xc8d	            0x3c0a	                             cmp al, 0xa	       415	packed-backend.c	FUNCTION_12	WHILE_1
0xc8f	            0x75e2	                           jne 0x4000cb3	       415	packed-backend.c	FUNCTION_12	WHILE_1
0xc91	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       415	packed-backend.c	FUNCTION_12	WHILE_1
0xc95	           0xfb600	                   movzx eax, byte [rax]	       415	packed-backend.c	FUNCTION_12	WHILE_1
0xc98	            0x3c5e	                            cmp al, 0x5e	       415	packed-backend.c	FUNCTION_12	WHILE_1
0xc9a	            0x74d7	                            je 0x4000cb3	       415	packed-backend.c	FUNCTION_12	WHILE_1
0xc9c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       417	packed-backend.c	FUNCTION_12
0xca0	              0x5d	                                 pop rbp	       418	packed-backend.c	FUNCTION_12
0xca1	              0xc3	                                     ret	       418	packed-backend.c	FUNCTION_12
die_unterminated_line	functions,0:IF,1:DO,0:FOR,0:WHILE,0:CALL,2:ELSE,1:SWITCH,0	24
0x5e8	              0x55	                                push rbp	       248	packed-backend.c	FUNCTION_7
0x5e9	          0x4889e5	                            mov rbp, rsp	       248	packed-backend.c	FUNCTION_7
0x5ec	        0x4883ec20	                           sub rsp, 0x20	       248	packed-backend.c	FUNCTION_7
0x5f0	        0x48897df8	                mov qword [rbp - 8], rdi	       248	packed-backend.c	FUNCTION_7
0x5f4	        0x488975f0	             mov qword [rbp - 0x10], rsi	       248	packed-backend.c	FUNCTION_7
0x5f8	        0x488955e8	             mov qword [rbp - 0x18], rdx	       248	packed-backend.c	FUNCTION_7
0x5fc	      0x48837de84f	           cmp qword [rbp - 0x18], 0x4f 	       249	packed-backend.c	FUNCTION_7	IF_1
0x601	            0x7725	                            ja 0x4000668	       249	packed-backend.c	FUNCTION_7	IF_1
0x603	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       250	packed-backend.c	FUNCTION_7	CALL_1
0x607	            0x89c6	                            mov esi, eax	       250	packed-backend.c	FUNCTION_7	CALL_1
0x609	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       250	packed-backend.c	FUNCTION_7	CALL_1
0x60d	        0x488b45f8	                mov rax, qword [rbp - 8]	       250	packed-backend.c	FUNCTION_7	CALL_1
0x611	          0x4889d1	                            mov rcx, rdx	       250	packed-backend.c	FUNCTION_7	CALL_1
0x614	            0x89f2	                            mov edx, esi	       250	packed-backend.c	FUNCTION_7	CALL_1
0x616	          0x4889c6	                            mov rsi, rax	       250	packed-backend.c	FUNCTION_7	CALL_1
0x619	      0xbf00000000	                              mov edi, 0	       250	packed-backend.c	FUNCTION_7	CALL_1
0x61e	      0xb800000000	                              mov eax, 0	       250	packed-backend.c	FUNCTION_7	CALL_1
0x623	      0xe800000000	                          call 0x4000668	       250	packed-backend.c	FUNCTION_7	CALL_1
0x628	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       252	packed-backend.c	FUNCTION_7	CALL_2
0x62c	        0x488b45f8	                mov rax, qword [rbp - 8]	       252	packed-backend.c	FUNCTION_7	CALL_2
0x630	          0x4889c6	                            mov rsi, rax	       252	packed-backend.c	FUNCTION_7	CALL_2
0x633	      0xbf00000000	                              mov edi, 0	       252	packed-backend.c	FUNCTION_7	CALL_2
0x638	      0xb800000000	                              mov eax, 0	       252	packed-backend.c	FUNCTION_7	CALL_2
0x63d	      0xe800000000	               call sym.die_invalid_line	       252	packed-backend.c	FUNCTION_7	CALL_2
packed_for_each_reflog_ent_reverse	functions,0:IF,0:DO,0:FOR,0:WHILE,0:CALL,0:ELSE,0:SWITCH,0	9
0x2c33	              0x55	                                push rbp	      1599	packed-backend.c	FUNCTION_45
0x2c34	          0x4889e5	                            mov rbp, rsp	      1599	packed-backend.c	FUNCTION_45
0x2c37	        0x48897df8	                mov qword [rbp - 8], rdi	      1599	packed-backend.c	FUNCTION_45
0x2c3b	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1599	packed-backend.c	FUNCTION_45
0x2c3f	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1599	packed-backend.c	FUNCTION_45
0x2c43	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1599	packed-backend.c	FUNCTION_45
0x2c47	      0xb800000000	                              mov eax, 0	      1600	packed-backend.c	FUNCTION_45
0x2c4c	              0x5d	                                 pop rbp	      1601	packed-backend.c	FUNCTION_45
0x2c4d	              0xc3	                                     ret	      1601	packed-backend.c	FUNCTION_45
write_packed_entry	functions,0:IF,1:DO,0:FOR,0:WHILE,0:CALL,4:ELSE,0:SWITCH,0	39
0x1c1b	              0x55	                                push rbp	       973	packed-backend.c	FUNCTION_26
0x1c1c	          0x4889e5	                            mov rbp, rsp	       973	packed-backend.c	FUNCTION_26
0x1c1f	        0x4883ec20	                           sub rsp, 0x20	       973	packed-backend.c	FUNCTION_26
0x1c23	        0x48897df8	                mov qword [rbp - 8], rdi	       973	packed-backend.c	FUNCTION_26
0x1c27	        0x488975f0	             mov qword [rbp - 0x10], rsi	       973	packed-backend.c	FUNCTION_26
0x1c2b	        0x488955e8	             mov qword [rbp - 0x18], rdx	       973	packed-backend.c	FUNCTION_26
0x1c2f	        0x48894de0	             mov qword [rbp - 0x20], rcx	       973	packed-backend.c	FUNCTION_26
0x1c33	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x1c37	          0x4889c7	                            mov rdi, rax	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x1c3a	      0xe800000000	                          call 0x4001c7f	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x1c3f	          0x4889c6	                            mov rsi, rax	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x1c42	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x1c46	        0x488b45f8	                mov rax, qword [rbp - 8]	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x1c4a	          0x4889d1	                            mov rcx, rdx	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x1c4d	          0x4889f2	                            mov rdx, rsi	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x1c50	      0xbe00000000	                              mov esi, 0	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x1c55	          0x4889c7	                            mov rdi, rax	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x1c58	      0xb800000000	                              mov eax, 0	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x1c5d	      0xe800000000	                          call 0x4001ca2	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x1c62	            0x85c0	                           test eax, eax	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x1c64	            0x7830	                            js 0x4001cd6	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x1c66	      0x48837de000	               cmp qword [rbp - 0x20], 0	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x1c6b	            0x7430	                            je 0x4001cdd	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x1c6d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       975	packed-backend.c	FUNCTION_26	IF_1	CALL_4
0x1c71	          0x4889c7	                            mov rdi, rax	       975	packed-backend.c	FUNCTION_26	IF_1	CALL_4
0x1c74	      0xe800000000	                          call 0x4001cb9	       975	packed-backend.c	FUNCTION_26	IF_1	CALL_4
0x1c79	          0x4889c2	                            mov rdx, rax	       975	packed-backend.c	FUNCTION_26	IF_1	CALL_4
0x1c7c	        0x488b45f8	                mov rax, qword [rbp - 8]	       975	packed-backend.c	FUNCTION_26	IF_1	CALL_4
0x1c80	      0xbe00000000	                              mov esi, 0	       975	packed-backend.c	FUNCTION_26	IF_1	CALL_4
0x1c85	          0x4889c7	                            mov rdi, rax	       975	packed-backend.c	FUNCTION_26	IF_1	CALL_4
0x1c88	      0xb800000000	                              mov eax, 0	       975	packed-backend.c	FUNCTION_26	IF_1	CALL_4
0x1c8d	      0xe800000000	                          call 0x4001cd2	       975	packed-backend.c	FUNCTION_26	IF_1	CALL_4
0x1c92	            0x85c0	                           test eax, eax	       975	packed-backend.c	FUNCTION_26	IF_1	CALL_4
0x1c94	            0x7907	                           jns 0x4001cdd	       975	packed-backend.c	FUNCTION_26	IF_1	CALL_4
0x1c96	      0xb8ffffffff	                     mov eax, 0xffffffff	       976	packed-backend.c	FUNCTION_26	IF_1
0x1c9b	            0xeb05	                           jmp 0x4001ce2	       976	packed-backend.c	FUNCTION_26	IF_1
0x1c9d	      0xb800000000	                              mov eax, 0	       978	packed-backend.c	FUNCTION_26
0x1ca2	              0xc9	                                   leave	       979	packed-backend.c	FUNCTION_26
0x1ca3	              0xc3	                                     ret	       979	packed-backend.c	FUNCTION_26
packed_read_raw_ref	functions,0:IF,2:DO,0:FOR,0:WHILE,0:CALL,5:ELSE,0:SWITCH,0	58
0x1482	              0x55	                                push rbp	       728	packed-backend.c	FUNCTION_20
0x1483	          0x4889e5	                            mov rbp, rsp	       728	packed-backend.c	FUNCTION_20
0x1486	        0x4883ec50	                           sub rsp, 0x50	       728	packed-backend.c	FUNCTION_20
0x148a	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       728	packed-backend.c	FUNCTION_20
0x148e	        0x488975d0	             mov qword [rbp - 0x30], rsi	       728	packed-backend.c	FUNCTION_20
0x1492	        0x488955c8	             mov qword [rbp - 0x38], rdx	       728	packed-backend.c	FUNCTION_20
0x1496	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       728	packed-backend.c	FUNCTION_20
0x149a	        0x4c8945b8	              mov qword [rbp - 0x48], r8	       728	packed-backend.c	FUNCTION_20
0x149e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       729	packed-backend.c	FUNCTION_20
0x14a2	      0xba00000000	                              mov edx, 0	       729	packed-backend.c	FUNCTION_20
0x14a7	      0xbe01000000	                              mov esi, 1	       729	packed-backend.c	FUNCTION_20
0x14ac	          0x4889c7	                            mov rdi, rax	       729	packed-backend.c	FUNCTION_20
0x14af	      0xe874f0ffff	                call sym.packed_downcast	       729	packed-backend.c	FUNCTION_20
0x14b4	        0x488945e8	             mov qword [rbp - 0x18], rax	       729	packed-backend.c	FUNCTION_20
0x14b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       731	packed-backend.c	FUNCTION_20	CALL_2
0x14bc	          0x4889c7	                            mov rdi, rax	       731	packed-backend.c	FUNCTION_20	CALL_2
0x14bf	      0xe864ffffff	                   call sym.get_snapshot	       731	packed-backend.c	FUNCTION_20	CALL_2
0x14c4	        0x488945f0	             mov qword [rbp - 0x10], rax	       731	packed-backend.c	FUNCTION_20	CALL_2
0x14c8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       734	packed-backend.c	FUNCTION_20
0x14cc	    0xc70000000000	                      mov dword [rax], 0	       734	packed-backend.c	FUNCTION_20
0x14d2	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       736	packed-backend.c	FUNCTION_20	CALL_3
0x14d6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       736	packed-backend.c	FUNCTION_20	CALL_3
0x14da	      0xba01000000	                              mov edx, 1	       736	packed-backend.c	FUNCTION_20	CALL_3
0x14df	          0x4889ce	                            mov rsi, rcx	       736	packed-backend.c	FUNCTION_20	CALL_3
0x14e2	          0x4889c7	                            mov rdi, rax	       736	packed-backend.c	FUNCTION_20	CALL_3
0x14e5	      0xe8e2faffff	        call sym.find_reference_location	       736	packed-backend.c	FUNCTION_20	CALL_3
0x14ea	        0x488945f8	                mov qword [rbp - 8], rax	       736	packed-backend.c	FUNCTION_20	CALL_3
0x14ee	      0x48837df800	                  cmp qword [rbp - 8], 0	       738	packed-backend.c	FUNCTION_20	IF_1
0x14f3	            0x7512	                           jne 0x4001547	       738	packed-backend.c	FUNCTION_20	IF_1
0x14f5	      0xe800000000	                          call 0x400153a	       740	packed-backend.c	FUNCTION_20	IF_1
0x14fa	    0xc70002000000	                      mov dword [rax], 2	       740	packed-backend.c	FUNCTION_20	IF_1
0x1500	      0xb8ffffffff	                     mov eax, 0xffffffff	       741	packed-backend.c	FUNCTION_20	IF_1
0x1505	            0xeb55	                           jmp 0x400159c	       741	packed-backend.c	FUNCTION_20	IF_1
0x1507	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       744	packed-backend.c	FUNCTION_20	IF_2	CALL_4
0x150b	        0x488b45f8	                mov rax, qword [rbp - 8]	       744	packed-backend.c	FUNCTION_20	IF_2	CALL_4
0x150f	          0x4889d6	                            mov rsi, rdx	       744	packed-backend.c	FUNCTION_20	IF_2	CALL_4
0x1512	          0x4889c7	                            mov rdi, rax	       744	packed-backend.c	FUNCTION_20	IF_2	CALL_4
0x1515	      0xe800000000	                          call 0x400155a	       744	packed-backend.c	FUNCTION_20	IF_2	CALL_4
0x151a	            0x85c0	                           test eax, eax	       744	packed-backend.c	FUNCTION_20	IF_2	CALL_4
0x151c	            0x742f	                            je 0x400158d	       744	packed-backend.c	FUNCTION_20	IF_2	CALL_4
0x151e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       745	packed-backend.c	FUNCTION_20	CALL_5
0x1522	        0x488b4020	            mov rax, qword [rax + 0x20] 	       745	packed-backend.c	FUNCTION_20	CALL_5
0x1526	          0x4889c2	                            mov rdx, rax	       745	packed-backend.c	FUNCTION_20	CALL_5
0x1529	        0x488b45f8	                mov rax, qword [rbp - 8]	       745	packed-backend.c	FUNCTION_20	CALL_5
0x152d	          0x4829c2	                            sub rdx, rax	       745	packed-backend.c	FUNCTION_20	CALL_5
0x1530	          0x4889d0	                            mov rax, rdx	       745	packed-backend.c	FUNCTION_20	CALL_5
0x1533	          0x4889c2	                            mov rdx, rax	       745	packed-backend.c	FUNCTION_20	CALL_5
0x1536	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       745	packed-backend.c	FUNCTION_20	CALL_5
0x153a	        0x488b4010	            mov rax, qword [rax + 0x10] 	       745	packed-backend.c	FUNCTION_20	CALL_5
0x153e	        0x488b4df8	                mov rcx, qword [rbp - 8]	       745	packed-backend.c	FUNCTION_20	CALL_5
0x1542	          0x4889ce	                            mov rsi, rcx	       745	packed-backend.c	FUNCTION_20	CALL_5
0x1545	          0x4889c7	                            mov rdi, rax	       745	packed-backend.c	FUNCTION_20	CALL_5
0x1548	      0xe8f5f0ffff	               call sym.die_invalid_line	       745	packed-backend.c	FUNCTION_20	CALL_5
0x154d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       747	packed-backend.c	FUNCTION_20
0x1551	    0xc70002000000	                      mov dword [rax], 2	       747	packed-backend.c	FUNCTION_20
0x1557	      0xb800000000	                              mov eax, 0	       748	packed-backend.c	FUNCTION_20
0x155c	              0xc9	                                   leave	       749	packed-backend.c	FUNCTION_20
0x155d	              0xc3	                                     ret	       749	packed-backend.c	FUNCTION_20
find_end_of_record	functions,0:IF,0:DO,0:FOR,0:WHILE,1:CALL,0:ELSE,0:SWITCH,0	20
0xca2	              0x55	                                push rbp	       425	packed-backend.c	FUNCTION_13
0xca3	          0x4889e5	                            mov rbp, rsp	       425	packed-backend.c	FUNCTION_13
0xca6	        0x48897df8	                mov qword [rbp - 8], rdi	       425	packed-backend.c	FUNCTION_13
0xcaa	        0x488975f0	             mov qword [rbp - 0x10], rsi	       425	packed-backend.c	FUNCTION_13
0xcae	      0x488345f801	                  add qword [rbp - 8], 1	       426	packed-backend.c	FUNCTION_13	WHILE_1
0xcb3	        0x488b45f8	                mov rax, qword [rbp - 8]	       426	packed-backend.c	FUNCTION_13	WHILE_1
0xcb7	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       426	packed-backend.c	FUNCTION_13	WHILE_1
0xcbb	            0x731a	                           jae 0x4000d17	       426	packed-backend.c	FUNCTION_13	WHILE_1
0xcbd	        0x488b45f8	                mov rax, qword [rbp - 8]	       426	packed-backend.c	FUNCTION_13	WHILE_1
0xcc1	        0x4883e801	                              sub rax, 1	       426	packed-backend.c	FUNCTION_13	WHILE_1
0xcc5	           0xfb600	                   movzx eax, byte [rax]	       426	packed-backend.c	FUNCTION_13	WHILE_1
0xcc8	            0x3c0a	                             cmp al, 0xa	       426	packed-backend.c	FUNCTION_13	WHILE_1
0xcca	            0x75e2	                           jne 0x4000cee	       426	packed-backend.c	FUNCTION_13	WHILE_1
0xccc	        0x488b45f8	                mov rax, qword [rbp - 8]	       426	packed-backend.c	FUNCTION_13	WHILE_1
0xcd0	           0xfb600	                   movzx eax, byte [rax]	       426	packed-backend.c	FUNCTION_13	WHILE_1
0xcd3	            0x3c5e	                            cmp al, 0x5e	       426	packed-backend.c	FUNCTION_13	WHILE_1
0xcd5	            0x74d7	                            je 0x4000cee	       426	packed-backend.c	FUNCTION_13	WHILE_1
0xcd7	        0x488b45f8	                mov rax, qword [rbp - 8]	       428	packed-backend.c	FUNCTION_13
0xcdb	              0x5d	                                 pop rbp	       429	packed-backend.c	FUNCTION_13
0xcdc	              0xc3	                                     ret	       429	packed-backend.c	FUNCTION_13
find_reference_location	functions,0:IF,3:DO,0:FOR,0:WHILE,1:CALL,3:ELSE,3:SWITCH,0	63
0xfcc	              0x55	                                push rbp	       537	packed-backend.c	FUNCTION_16
0xfcd	          0x4889e5	                            mov rbp, rsp	       537	packed-backend.c	FUNCTION_16
0xfd0	        0x4883ec48	                           sub rsp, 0x48	       537	packed-backend.c	FUNCTION_16
0xfd4	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       537	packed-backend.c	FUNCTION_16
0xfd8	        0x488975c0	             mov qword [rbp - 0x40], rsi	       537	packed-backend.c	FUNCTION_16
0xfdc	          0x8955bc	             mov dword [rbp - 0x44], edx	       537	packed-backend.c	FUNCTION_16
0xfdf	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       552	packed-backend.c	FUNCTION_16
0xfe3	        0x488b4018	            mov rax, qword [rax + 0x18] 	       552	packed-backend.c	FUNCTION_16
0xfe7	        0x488945e0	             mov qword [rbp - 0x20], rax	       552	packed-backend.c	FUNCTION_16
0xfeb	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       558	packed-backend.c	FUNCTION_16
0xfef	        0x488b4020	            mov rax, qword [rax + 0x20] 	       558	packed-backend.c	FUNCTION_16
0xff3	        0x488945e8	             mov qword [rbp - 0x18], rax	       558	packed-backend.c	FUNCTION_16
0xff7	      0xe98b000000	                           jmp 0x40010c7	       560	packed-backend.c	FUNCTION_16	WHILE_1
0xffc	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       564	packed-backend.c	FUNCTION_16	WHILE_1
0x1000	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       564	packed-backend.c	FUNCTION_16	WHILE_1
0x1004	          0x4829c2	                            sub rdx, rax	       564	packed-backend.c	FUNCTION_16	WHILE_1
0x1007	          0x4889d0	                            mov rax, rdx	       564	packed-backend.c	FUNCTION_16	WHILE_1
0x100a	          0x4889c2	                            mov rdx, rax	       564	packed-backend.c	FUNCTION_16	WHILE_1
0x100d	        0x48c1ea3f	                           shr rdx, 0x3f	       564	packed-backend.c	FUNCTION_16	WHILE_1
0x1011	          0x4801d0	                            add rax, rdx	       564	packed-backend.c	FUNCTION_16	WHILE_1
0x1014	          0x48d1f8	                              sar rax, 1	       564	packed-backend.c	FUNCTION_16	WHILE_1
0x1017	          0x4889c2	                            mov rdx, rax	       564	packed-backend.c	FUNCTION_16	WHILE_1
0x101a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       564	packed-backend.c	FUNCTION_16	WHILE_1
0x101e	          0x4801d0	                            add rax, rdx	       564	packed-backend.c	FUNCTION_16	WHILE_1
0x1021	        0x488945f0	             mov qword [rbp - 0x10], rax	       564	packed-backend.c	FUNCTION_16	WHILE_1
0x1025	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       565	packed-backend.c	FUNCTION_16	WHILE_1	CALL_1
0x1029	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       565	packed-backend.c	FUNCTION_16	WHILE_1	CALL_1
0x102d	          0x4889d6	                            mov rsi, rdx	       565	packed-backend.c	FUNCTION_16	WHILE_1	CALL_1
0x1030	          0x4889c7	                            mov rdi, rax	       565	packed-backend.c	FUNCTION_16	WHILE_1	CALL_1
0x1033	      0xe82dfcffff	           call sym.find_start_of_record	       565	packed-backend.c	FUNCTION_16	WHILE_1	CALL_1
0x1038	        0x488945f8	                mov qword [rbp - 8], rax	       565	packed-backend.c	FUNCTION_16	WHILE_1	CALL_1
0x103c	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       566	packed-backend.c	FUNCTION_16	WHILE_1	CALL_2
0x1040	        0x488b45f8	                mov rax, qword [rbp - 8]	       566	packed-backend.c	FUNCTION_16	WHILE_1	CALL_2
0x1044	          0x4889d6	                            mov rsi, rdx	       566	packed-backend.c	FUNCTION_16	WHILE_1	CALL_2
0x1047	          0x4889c7	                            mov rdi, rax	       566	packed-backend.c	FUNCTION_16	WHILE_1	CALL_2
0x104a	      0xe84df7ffff	          call sym.cmp_record_to_refname	       566	packed-backend.c	FUNCTION_16	WHILE_1	CALL_2
0x104f	          0x8945dc	             mov dword [rbp - 0x24], eax	       566	packed-backend.c	FUNCTION_16	WHILE_1	CALL_2
0x1052	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       567	packed-backend.c	FUNCTION_16	WHILE_1	IF_1
0x1056	            0x7919	                           jns 0x40010b1	       567	packed-backend.c	FUNCTION_16	WHILE_1	IF_1
0x1058	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       568	packed-backend.c	FUNCTION_16	WHILE_1	IF_1	CALL_3
0x105c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       568	packed-backend.c	FUNCTION_16	WHILE_1	IF_1	CALL_3
0x1060	          0x4889d6	                            mov rsi, rdx	       568	packed-backend.c	FUNCTION_16	WHILE_1	IF_1	CALL_3
0x1063	          0x4889c7	                            mov rdi, rax	       568	packed-backend.c	FUNCTION_16	WHILE_1	IF_1	CALL_3
0x1066	      0xe837fcffff	             call sym.find_end_of_record	       568	packed-backend.c	FUNCTION_16	WHILE_1	IF_1	CALL_3
0x106b	        0x488945e0	             mov qword [rbp - 0x20], rax	       568	packed-backend.c	FUNCTION_16	WHILE_1	IF_1	CALL_3
0x106f	            0xeb16	                           jmp 0x40010c7	       568	packed-backend.c	FUNCTION_16	WHILE_1	IF_1	CALL_3
0x1071	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       569	packed-backend.c	FUNCTION_16	WHILE_1	ELSE_1	IF_2
0x1075	            0x7e0a	                           jle 0x40010c1	       569	packed-backend.c	FUNCTION_16	WHILE_1	ELSE_1	IF_2
0x1077	        0x488b45f8	                mov rax, qword [rbp - 8]	       570	packed-backend.c	FUNCTION_16	WHILE_1	ELSE_1	IF_2
0x107b	        0x488945e8	             mov qword [rbp - 0x18], rax	       570	packed-backend.c	FUNCTION_16	WHILE_1	ELSE_1	IF_2
0x107f	            0xeb06	                           jmp 0x40010c7	       570	packed-backend.c	FUNCTION_16	WHILE_1	ELSE_1	IF_2
0x1081	        0x488b45f8	                mov rax, qword [rbp - 8]	       572	packed-backend.c	FUNCTION_16	WHILE_1	ELSE_2
0x1085	            0xeb1f	                           jmp 0x40010e6	       572	packed-backend.c	FUNCTION_16	WHILE_1	ELSE_2
0x1087	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       560	packed-backend.c	FUNCTION_16	WHILE_1
0x108b	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       560	packed-backend.c	FUNCTION_16	WHILE_1
0x108f	     0xf8567ffffff	                           jne 0x400103c	       560	packed-backend.c	FUNCTION_16	WHILE_1
0x1095	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       576	packed-backend.c	FUNCTION_16	IF_3
0x1099	            0x7407	                            je 0x40010e2	       576	packed-backend.c	FUNCTION_16	IF_3
0x109b	      0xb800000000	                              mov eax, 0	       577	packed-backend.c	FUNCTION_16	IF_3
0x10a0	            0xeb04	                           jmp 0x40010e6	       577	packed-backend.c	FUNCTION_16	IF_3
0x10a2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       579	packed-backend.c	FUNCTION_16	ELSE_3
0x10a6	              0xc9	                                   leave	       580	packed-backend.c	FUNCTION_16	ELSE_3
0x10a7	              0xc3	                                     ret	       580	packed-backend.c	FUNCTION_16	ELSE_3
packed_refs_is_locked	functions,0:IF,0:DO,0:FOR,0:WHILE,0:CALL,2:ELSE,0:SWITCH,0	16
0x1e15	              0x55	                                push rbp	      1044	packed-backend.c	FUNCTION_29
0x1e16	          0x4889e5	                            mov rbp, rsp	      1044	packed-backend.c	FUNCTION_29
0x1e19	        0x4883ec20	                           sub rsp, 0x20	      1044	packed-backend.c	FUNCTION_29
0x1e1d	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1044	packed-backend.c	FUNCTION_29
0x1e21	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1045	packed-backend.c	FUNCTION_29	CALL_1
0x1e25	      0xba00000000	                              mov edx, 0	      1045	packed-backend.c	FUNCTION_29	CALL_1
0x1e2a	      0xbe03000000	                              mov esi, 3	      1045	packed-backend.c	FUNCTION_29	CALL_1
0x1e2f	          0x4889c7	                            mov rdi, rax	      1045	packed-backend.c	FUNCTION_29	CALL_1
0x1e32	      0xe8f1e6ffff	                call sym.packed_downcast	      1045	packed-backend.c	FUNCTION_29	CALL_1
0x1e37	        0x488945f8	                mov qword [rbp - 8], rax	      1045	packed-backend.c	FUNCTION_29	CALL_1
0x1e3b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1050	packed-backend.c	FUNCTION_29	CALL_2
0x1e3f	        0x4883c020	                           add rax, 0x20	      1050	packed-backend.c	FUNCTION_29	CALL_2
0x1e43	          0x4889c7	                            mov rdi, rax	      1050	packed-backend.c	FUNCTION_29	CALL_2
0x1e46	      0xe8e4e4ffff	            call sym.is_lock_file_locked	      1050	packed-backend.c	FUNCTION_29	CALL_2
0x1e4b	              0xc9	                                   leave	      1051	packed-backend.c	FUNCTION_29
0x1e4c	              0xc3	                                     ret	      1051	packed-backend.c	FUNCTION_29
packed_create_symref	functions,0:IF,0:DO,0:FOR,0:WHILE,0:CALL,1:ELSE,0:SWITCH,0	10
0x2b90	              0x55	                                push rbp	      1565	packed-backend.c	FUNCTION_40
0x2b91	          0x4889e5	                            mov rbp, rsp	      1565	packed-backend.c	FUNCTION_40
0x2b94	        0x4883ec20	                           sub rsp, 0x20	      1565	packed-backend.c	FUNCTION_40
0x2b98	        0x48897df8	                mov qword [rbp - 8], rdi	      1565	packed-backend.c	FUNCTION_40
0x2b9c	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1565	packed-backend.c	FUNCTION_40
0x2ba0	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1565	packed-backend.c	FUNCTION_40
0x2ba4	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1565	packed-backend.c	FUNCTION_40
0x2ba8	      0xbf00000000	                              mov edi, 0	      1566	packed-backend.c	FUNCTION_40	CALL_1
0x2bad	      0xb800000000	                              mov eax, 0	      1566	packed-backend.c	FUNCTION_40	CALL_1
0x2bb2	      0xe800000000	              call sym.packed_rename_ref	      1566	packed-backend.c	FUNCTION_40	CALL_1
clear_snapshot	functions,0:IF,1:DO,0:FOR,0:WHILE,0:CALL,1:ELSE,0:SWITCH,0	19
0x5a8	              0x55	                                push rbp	       237	packed-backend.c	FUNCTION_6
0x5a9	          0x4889e5	                            mov rbp, rsp	       237	packed-backend.c	FUNCTION_6
0x5ac	        0x4883ec20	                           sub rsp, 0x20	       237	packed-backend.c	FUNCTION_6
0x5b0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       237	packed-backend.c	FUNCTION_6
0x5b4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       238	packed-backend.c	FUNCTION_6	IF_1
0x5b8	        0x488b4018	            mov rax, qword [rax + 0x18] 	       238	packed-backend.c	FUNCTION_6	IF_1
0x5bc	          0x4885c0	                           test rax, rax	       238	packed-backend.c	FUNCTION_6	IF_1
0x5bf	            0x7424	                            je 0x4000625	       238	packed-backend.c	FUNCTION_6	IF_1
0x5c1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       239	packed-backend.c	FUNCTION_6	IF_1
0x5c5	        0x488b4018	            mov rax, qword [rax + 0x18] 	       239	packed-backend.c	FUNCTION_6	IF_1
0x5c9	        0x488945f8	                mov qword [rbp - 8], rax	       239	packed-backend.c	FUNCTION_6	IF_1
0x5cd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       241	packed-backend.c	FUNCTION_6	IF_1
0x5d1	    0x48c740180000	               mov qword [rax + 0x18], 0	       241	packed-backend.c	FUNCTION_6	IF_1
0x5d9	        0x488b45f8	                mov rax, qword [rbp - 8]	       242	packed-backend.c	FUNCTION_6	IF_1	CALL_1
0x5dd	          0x4889c7	                            mov rdi, rax	       242	packed-backend.c	FUNCTION_6	IF_1	CALL_1
0x5e0	      0xe86efeffff	               call sym.release_snapshot	       242	packed-backend.c	FUNCTION_6	IF_1	CALL_1
0x5e5	              0x90	                                     nop	       244	packed-backend.c	FUNCTION_6
0x5e6	              0xc9	                                   leave	       244	packed-backend.c	FUNCTION_6
0x5e7	              0xc3	                                     ret	       244	packed-backend.c	FUNCTION_6
packed_delete_reflog	functions,0:IF,0:DO,0:FOR,0:WHILE,0:CALL,0:ELSE,0:SWITCH,0	7
0x2c87	              0x55	                                push rbp	      1618	packed-backend.c	FUNCTION_48
0x2c88	          0x4889e5	                            mov rbp, rsp	      1618	packed-backend.c	FUNCTION_48
0x2c8b	        0x48897df8	                mov qword [rbp - 8], rdi	      1618	packed-backend.c	FUNCTION_48
0x2c8f	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1618	packed-backend.c	FUNCTION_48
0x2c93	      0xb800000000	                              mov eax, 0	      1619	packed-backend.c	FUNCTION_48
0x2c98	              0x5d	                                 pop rbp	      1620	packed-backend.c	FUNCTION_48
0x2c99	              0xc3	                                     ret	      1620	packed-backend.c	FUNCTION_48
cmp_record_to_refname	functions,0:IF,3:DO,0:FOR,0:WHILE,1:CALL,0:ELSE,0:SWITCH,0	49
0x79c	              0x55	                                push rbp	       299	packed-backend.c	FUNCTION_10
0x79d	          0x4889e5	                            mov rbp, rsp	       299	packed-backend.c	FUNCTION_10
0x7a0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       299	packed-backend.c	FUNCTION_10
0x7a4	        0x488975e0	             mov qword [rbp - 0x20], rsi	       299	packed-backend.c	FUNCTION_10
0x7a8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       300	packed-backend.c	FUNCTION_10
0x7ac	        0x4883c029	                           add rax, 0x29	       300	packed-backend.c	FUNCTION_10
0x7b0	        0x488945f0	             mov qword [rbp - 0x10], rax	       300	packed-backend.c	FUNCTION_10
0x7b4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       301	packed-backend.c	FUNCTION_10
0x7b8	        0x488945f8	                mov qword [rbp - 8], rax	       301	packed-backend.c	FUNCTION_10
0x7bc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       304	packed-backend.c	FUNCTION_10	WHILE_1	IF_1
0x7c0	           0xfb600	                   movzx eax, byte [rax]	       304	packed-backend.c	FUNCTION_10	WHILE_1	IF_1
0x7c3	            0x3c0a	                             cmp al, 0xa	       304	packed-backend.c	FUNCTION_10	WHILE_1	IF_1
0x7c5	            0x7519	                           jne 0x4000820	       304	packed-backend.c	FUNCTION_10	WHILE_1	IF_1
0x7c7	        0x488b45f8	                mov rax, qword [rbp - 8]	       305	packed-backend.c	FUNCTION_10	WHILE_1	IF_1
0x7cb	           0xfb600	                   movzx eax, byte [rax]	       305	packed-backend.c	FUNCTION_10	WHILE_1	IF_1
0x7ce	            0x84c0	                             test al, al	       305	packed-backend.c	FUNCTION_10	WHILE_1	IF_1
0x7d0	            0x7407	                            je 0x4000819	       305	packed-backend.c	FUNCTION_10	WHILE_1	IF_1
0x7d2	      0xb8ffffffff	                     mov eax, 0xffffffff	       305	packed-backend.c	FUNCTION_10	WHILE_1	IF_1
0x7d7	            0xeb59	                           jmp 0x4000872	       305	packed-backend.c	FUNCTION_10	WHILE_1	IF_1
0x7d9	      0xb800000000	                              mov eax, 0	       305	packed-backend.c	FUNCTION_10	WHILE_1	IF_1
0x7de	            0xeb52	                           jmp 0x4000872	       305	packed-backend.c	FUNCTION_10	WHILE_1	IF_1
0x7e0	        0x488b45f8	                mov rax, qword [rbp - 8]	       306	packed-backend.c	FUNCTION_10	WHILE_1	IF_2
0x7e4	           0xfb600	                   movzx eax, byte [rax]	       306	packed-backend.c	FUNCTION_10	WHILE_1	IF_2
0x7e7	            0x84c0	                             test al, al	       306	packed-backend.c	FUNCTION_10	WHILE_1	IF_2
0x7e9	            0x7507	                           jne 0x4000832	       306	packed-backend.c	FUNCTION_10	WHILE_1	IF_2
0x7eb	      0xb801000000	                              mov eax, 1	       307	packed-backend.c	FUNCTION_10	WHILE_1	IF_2
0x7f0	            0xeb40	                           jmp 0x4000872	       307	packed-backend.c	FUNCTION_10	WHILE_1	IF_2
0x7f2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       308	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x7f6	           0xfb610	                   movzx edx, byte [rax]	       308	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x7f9	        0x488b45f8	                mov rax, qword [rbp - 8]	       308	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x7fd	           0xfb600	                   movzx eax, byte [rax]	       308	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x800	            0x38c2	                              cmp dl, al	       308	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x802	            0x7422	                            je 0x4000866	       308	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x804	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       309	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x808	           0xfb600	                   movzx eax, byte [rax]	       309	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x80b	            0x89c2	                            mov edx, eax	       309	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x80d	        0x488b45f8	                mov rax, qword [rbp - 8]	       309	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x811	           0xfb600	                   movzx eax, byte [rax]	       309	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x814	            0x38c2	                              cmp dl, al	       309	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x816	            0x7307	                           jae 0x400085f	       309	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x818	      0xb8ffffffff	                     mov eax, 0xffffffff	       309	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x81d	            0xeb13	                           jmp 0x4000872	       309	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x81f	      0xb801000000	                              mov eax, 1	       309	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x824	            0xeb0c	                           jmp 0x4000872	       309	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x826	      0x488345f001	               add qword [rbp - 0x10], 1	       310	packed-backend.c	FUNCTION_10	WHILE_1
0x82b	      0x488345f801	                  add qword [rbp - 8], 1	       311	packed-backend.c	FUNCTION_10	WHILE_1
0x830	            0xeb8a	                           jmp 0x40007fc	       312	packed-backend.c	FUNCTION_10	WHILE_1
0x832	              0x5d	                                 pop rbp	       313	packed-backend.c	FUNCTION_10
0x833	              0xc3	                                     ret	       313	packed-backend.c	FUNCTION_10
packed_ref_iterator_peel	functions,0:IF,2:DO,0:FOR,0:WHILE,0:CALL,3:ELSE,2:SWITCH,0	46
0x19c9	              0x55	                                push rbp	       880	packed-backend.c	FUNCTION_23
0x19ca	          0x4889e5	                            mov rbp, rsp	       880	packed-backend.c	FUNCTION_23
0x19cd	        0x4883ec20	                           sub rsp, 0x20	       880	packed-backend.c	FUNCTION_23
0x19d1	        0x48897de8	             mov qword [rbp - 0x18], rdi	       880	packed-backend.c	FUNCTION_23
0x19d5	        0x488975e0	             mov qword [rbp - 0x20], rsi	       880	packed-backend.c	FUNCTION_23
0x19d9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       881	packed-backend.c	FUNCTION_23
0x19dd	        0x488945f8	                mov qword [rbp - 8], rax	       881	packed-backend.c	FUNCTION_23
0x19e1	        0x488b45f8	                mov rax, qword [rbp - 8]	       884	packed-backend.c	FUNCTION_23	IF_1
0x19e5	          0x8b4020	            mov eax, dword [rax + 0x20] 	       884	packed-backend.c	FUNCTION_23	IF_1
0x19e8	          0x83e040	                           and eax, 0x40	       884	packed-backend.c	FUNCTION_23	IF_1
0x19eb	            0x85c0	                           test eax, eax	       884	packed-backend.c	FUNCTION_23	IF_1
0x19ed	            0x7439	                            je 0x4001a68	       884	packed-backend.c	FUNCTION_23	IF_1
0x19ef	        0x488b45f8	                mov rax, qword [rbp - 8]	       885	packed-backend.c	FUNCTION_23	IF_1	CALL_1
0x19f3	        0x488d5054	                   lea rdx, [rax + 0x54]	       885	packed-backend.c	FUNCTION_23	IF_1	CALL_1
0x19f7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       885	packed-backend.c	FUNCTION_23	IF_1	CALL_1
0x19fb	          0x4889d6	                            mov rsi, rdx	       885	packed-backend.c	FUNCTION_23	IF_1	CALL_1
0x19fe	          0x4889c7	                            mov rdi, rax	       885	packed-backend.c	FUNCTION_23	IF_1	CALL_1
0x1a01	      0xe8b6e8ffff	                         call sym.oidcpy	       885	packed-backend.c	FUNCTION_23	IF_1	CALL_1
0x1a06	        0x488b45f8	                mov rax, qword [rbp - 8]	       886	packed-backend.c	FUNCTION_23	IF_1	CALL_2
0x1a0a	        0x4883c054	                           add rax, 0x54	       886	packed-backend.c	FUNCTION_23	IF_1	CALL_2
0x1a0e	          0x4889c7	                            mov rdi, rax	       886	packed-backend.c	FUNCTION_23	IF_1	CALL_2
0x1a11	      0xe854e8ffff	                    call sym.is_null_oid	       886	packed-backend.c	FUNCTION_23	IF_1	CALL_2
0x1a16	            0x85c0	                           test eax, eax	       886	packed-backend.c	FUNCTION_23	IF_1	CALL_2
0x1a18	            0x7407	                            je 0x4001a61	       886	packed-backend.c	FUNCTION_23	IF_1	CALL_2
0x1a1a	      0xb8ffffffff	                     mov eax, 0xffffffff	       886	packed-backend.c	FUNCTION_23	IF_1	CALL_2
0x1a1f	            0xeb3b	                           jmp 0x4001a9c	       886	packed-backend.c	FUNCTION_23	IF_1	CALL_2
0x1a21	      0xb800000000	                              mov eax, 0	       886	packed-backend.c	FUNCTION_23	IF_1	CALL_2
0x1a26	            0xeb34	                           jmp 0x4001a9c	       886	packed-backend.c	FUNCTION_23	IF_1	CALL_2
0x1a28	        0x488b45f8	                mov rax, qword [rbp - 8]	       887	packed-backend.c	FUNCTION_23	ELSE_1	IF_2
0x1a2c	          0x8b4020	            mov eax, dword [rax + 0x20] 	       887	packed-backend.c	FUNCTION_23	ELSE_1	IF_2
0x1a2f	          0x83e005	                              and eax, 5	       887	packed-backend.c	FUNCTION_23	ELSE_1	IF_2
0x1a32	            0x85c0	                           test eax, eax	       887	packed-backend.c	FUNCTION_23	ELSE_1	IF_2
0x1a34	            0x7407	                            je 0x4001a7d	       887	packed-backend.c	FUNCTION_23	ELSE_1	IF_2
0x1a36	      0xb8ffffffff	                     mov eax, 0xffffffff	       888	packed-backend.c	FUNCTION_23	ELSE_1	IF_2
0x1a3b	            0xeb1f	                           jmp 0x4001a9c	       888	packed-backend.c	FUNCTION_23	ELSE_1	IF_2
0x1a3d	        0x488b45f8	                mov rax, qword [rbp - 8]	       890	packed-backend.c	FUNCTION_23	ELSE_2	CALL_3
0x1a41	        0x488d5040	                   lea rdx, [rax + 0x40]	       890	packed-backend.c	FUNCTION_23	ELSE_2	CALL_3
0x1a45	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       890	packed-backend.c	FUNCTION_23	ELSE_2	CALL_3
0x1a49	          0x4889c6	                            mov rsi, rax	       890	packed-backend.c	FUNCTION_23	ELSE_2	CALL_3
0x1a4c	          0x4889d7	                            mov rdi, rdx	       890	packed-backend.c	FUNCTION_23	ELSE_2	CALL_3
0x1a4f	      0xe800000000	                          call 0x4001a94	       890	packed-backend.c	FUNCTION_23	ELSE_2	CALL_3
0x1a54	            0x85c0	                           test eax, eax	       890	packed-backend.c	FUNCTION_23	ELSE_2	CALL_3
0x1a56	           0xf95c0	                                setne al	       890	packed-backend.c	FUNCTION_23	ELSE_2	CALL_3
0x1a59	           0xfb6c0	                           movzx eax, al	       890	packed-backend.c	FUNCTION_23	ELSE_2	CALL_3
0x1a5c	              0xc9	                                   leave	       892	packed-backend.c	FUNCTION_23
0x1a5d	              0xc3	                                     ret	       892	packed-backend.c	FUNCTION_23
packed_reflog_exists	functions,0:IF,0:DO,0:FOR,0:WHILE,0:CALL,0:ELSE,0:SWITCH,0	7
0x2c4e	              0x55	                                push rbp	      1605	packed-backend.c	FUNCTION_46
0x2c4f	          0x4889e5	                            mov rbp, rsp	      1605	packed-backend.c	FUNCTION_46
0x2c52	        0x48897df8	                mov qword [rbp - 8], rdi	      1605	packed-backend.c	FUNCTION_46
0x2c56	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1605	packed-backend.c	FUNCTION_46
0x2c5a	      0xb800000000	                              mov eax, 0	      1606	packed-backend.c	FUNCTION_46
0x2c5f	              0x5d	                                 pop rbp	      1607	packed-backend.c	FUNCTION_46
0x2c60	              0xc3	                                     ret	      1607	packed-backend.c	FUNCTION_46
load_contents	functions,0:IF,6:DO,0:FOR,0:WHILE,0:CALL,11:ELSE,3:SWITCH,0	126
0xd77	              0x55	                                push rbp	       473	packed-backend.c	FUNCTION_15
0xd78	          0x4889e5	                            mov rbp, rsp	       473	packed-backend.c	FUNCTION_15
0xd7b	    0x4881ecd00000	                           sub rsp, 0xd0	       473	packed-backend.c	FUNCTION_15
0xd82	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	       473	packed-backend.c	FUNCTION_15
0xd89	    0x64488b042528	                mov rax, qword fs:[0x28]	       473	packed-backend.c	FUNCTION_15
0xd92	        0x488945f8	                mov qword [rbp - 8], rax	       473	packed-backend.c	FUNCTION_15
0xd96	            0x31c0	                            xor eax, eax	       473	packed-backend.c	FUNCTION_15
0xd98	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       479	packed-backend.c	FUNCTION_15	CALL_1
0xd9f	          0x488b00	                    mov rax, qword [rax]	       479	packed-backend.c	FUNCTION_15	CALL_1
0xda2	        0x488b4010	            mov rax, qword [rax + 0x10] 	       479	packed-backend.c	FUNCTION_15	CALL_1
0xda6	      0xbe00000000	                              mov esi, 0	       479	packed-backend.c	FUNCTION_15	CALL_1
0xdab	          0x4889c7	                            mov rdi, rax	       479	packed-backend.c	FUNCTION_15	CALL_1
0xdae	      0xb800000000	                              mov eax, 0	       479	packed-backend.c	FUNCTION_15	CALL_1
0xdb3	      0xe800000000	                          call 0x4000df8	       479	packed-backend.c	FUNCTION_15	CALL_1
0xdb8	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	       479	packed-backend.c	FUNCTION_15	CALL_1
0xdbe	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 0	       480	packed-backend.c	FUNCTION_15	IF_1
0xdc5	            0x7936	                           jns 0x4000e3d	       480	packed-backend.c	FUNCTION_15	IF_1
0xdc7	      0xe800000000	                          call 0x4000e0c	       481	packed-backend.c	FUNCTION_15	IF_1	IF_2
0xdcc	            0x8b00	                    mov eax, dword [rax]	       481	packed-backend.c	FUNCTION_15	IF_1	IF_2
0xdce	          0x83f802	                              cmp eax, 2	       481	packed-backend.c	FUNCTION_15	IF_1	IF_2
0xdd1	            0x750a	                           jne 0x4000e1d	       481	packed-backend.c	FUNCTION_15	IF_1	IF_2
0xdd3	      0xb800000000	                              mov eax, 0	       489	packed-backend.c	FUNCTION_15	IF_1	IF_2
0xdd8	      0xe9d9010000	                           jmp 0x4000ff6	       489	packed-backend.c	FUNCTION_15	IF_1	IF_2
0xddd	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       491	packed-backend.c	FUNCTION_15	IF_1	ELSE_1	CALL_2
0xde4	          0x488b00	                    mov rax, qword [rax]	       491	packed-backend.c	FUNCTION_15	IF_1	ELSE_1	CALL_2
0xde7	        0x488b4010	            mov rax, qword [rax + 0x10] 	       491	packed-backend.c	FUNCTION_15	IF_1	ELSE_1	CALL_2
0xdeb	          0x4889c6	                            mov rsi, rax	       491	packed-backend.c	FUNCTION_15	IF_1	ELSE_1	CALL_2
0xdee	      0xbf00000000	                              mov edi, 0	       491	packed-backend.c	FUNCTION_15	IF_1	ELSE_1	CALL_2
0xdf3	      0xb800000000	                              mov eax, 0	       491	packed-backend.c	FUNCTION_15	IF_1	ELSE_1	CALL_2
0xdf8	      0xe800000000	                          call 0x4000e3d	       491	packed-backend.c	FUNCTION_15	IF_1	ELSE_1	CALL_2
0xdfd	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       495	packed-backend.c	FUNCTION_15	CALL_3
0xe04	        0x488d5030	                   lea rdx, [rax + 0x30]	       495	packed-backend.c	FUNCTION_15	CALL_3
0xe08	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	       495	packed-backend.c	FUNCTION_15	CALL_3
0xe0e	            0x89c6	                            mov esi, eax	       495	packed-backend.c	FUNCTION_15	CALL_3
0xe10	          0x4889d7	                            mov rdi, rdx	       495	packed-backend.c	FUNCTION_15	CALL_3
0xe13	      0xe800000000	                          call 0x4000e58	       495	packed-backend.c	FUNCTION_15	CALL_3
0xe18	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       497	packed-backend.c	FUNCTION_15	IF_3	CALL_4
0xe1f	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	       497	packed-backend.c	FUNCTION_15	IF_3	CALL_4
0xe25	          0x4889d6	                            mov rsi, rdx	       497	packed-backend.c	FUNCTION_15	IF_3	CALL_4
0xe28	            0x89c7	                            mov edi, eax	       497	packed-backend.c	FUNCTION_15	IF_3	CALL_4
0xe2a	      0xe800000000	                          call 0x4000e6f	       497	packed-backend.c	FUNCTION_15	IF_3	CALL_4
0xe2f	            0x85c0	                           test eax, eax	       497	packed-backend.c	FUNCTION_15	IF_3	CALL_4
0xe31	            0x7920	                           jns 0x4000e93	       497	packed-backend.c	FUNCTION_15	IF_3	CALL_4
0xe33	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       498	packed-backend.c	FUNCTION_15	CALL_5
0xe3a	          0x488b00	                    mov rax, qword [rax]	       498	packed-backend.c	FUNCTION_15	CALL_5
0xe3d	        0x488b4010	            mov rax, qword [rax + 0x10] 	       498	packed-backend.c	FUNCTION_15	CALL_5
0xe41	          0x4889c6	                            mov rsi, rax	       498	packed-backend.c	FUNCTION_15	CALL_5
0xe44	      0xbf00000000	                              mov edi, 0	       498	packed-backend.c	FUNCTION_15	CALL_5
0xe49	      0xb800000000	                              mov eax, 0	       498	packed-backend.c	FUNCTION_15	CALL_5
0xe4e	      0xe800000000	                          call 0x4000e93	       498	packed-backend.c	FUNCTION_15	CALL_5
0xe53	        0x488b4590	             mov rax, qword [rbp - 0x70]	       499	packed-backend.c	FUNCTION_15	CALL_6
0xe57	          0x4889c7	                            mov rdi, rax	       499	packed-backend.c	FUNCTION_15	CALL_6
0xe5a	      0xe854f2ffff	                        call sym.xsize_t	       499	packed-backend.c	FUNCTION_15	CALL_6
0xe5f	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	       499	packed-backend.c	FUNCTION_15	CALL_6
0xe66	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	       501	packed-backend.c	FUNCTION_15	IF_4
0xe6e	            0x750a	                           jne 0x4000eba	       501	packed-backend.c	FUNCTION_15	IF_4
0xe70	      0xb800000000	                              mov eax, 0	       502	packed-backend.c	FUNCTION_15	IF_4
0xe75	      0xe93c010000	                           jmp 0x4000ff6	       502	packed-backend.c	FUNCTION_15	IF_4
0xe7a	    0x8b0500000000	            mov eax, dword [0x04000ec0] 	       503	packed-backend.c	FUNCTION_15	ELSE_2	IF_5
0xe80	            0x85c0	                           test eax, eax	       503	packed-backend.c	FUNCTION_15	ELSE_2	IF_5
0xe82	            0x7411	                            je 0x4000ed5	       503	packed-backend.c	FUNCTION_15	ELSE_2	IF_5
0xe84	    0x4881bd50ffff	         cmp qword [rbp - 0xb0], 0x8000 	       503	packed-backend.c	FUNCTION_15	ELSE_2	IF_5
0xe8f	     0xf8790000000	                            ja 0x4000f65	       503	packed-backend.c	FUNCTION_15	ELSE_2	IF_5
0xe95	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       504	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_7
0xe9c	          0x4889c7	                            mov rdi, rax	       504	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_7
0xe9f	      0xe800000000	                          call 0x4000ee4	       504	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_7
0xea4	          0x4889c2	                            mov rdx, rax	       504	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_7
0xea7	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       504	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_7
0xeae	        0x48895010	             mov qword [rax + 0x10], rdx	       504	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_7
0xeb2	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       505	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_8
0xeb9	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       505	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_8
0xebd	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	       505	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_8
0xec4	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	       505	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_8
0xeca	          0x4889ce	                            mov rsi, rcx	       505	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_8
0xecd	            0x89c7	                            mov edi, eax	       505	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_8
0xecf	      0xe800000000	                          call 0x4000f14	       505	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_8
0xed4	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       505	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_8
0xedb	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	       506	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	IF_6
0xee3	            0x7810	                            js 0x4000f35	       506	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	IF_6
0xee5	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       506	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	IF_6
0xeec	    0x483b8550ffff	             cmp rax, qword [rbp - 0xb0]	       506	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	IF_6
0xef3	            0x7420	                            je 0x4000f55	       506	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	IF_6
0xef5	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       507	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_9
0xefc	          0x488b00	                    mov rax, qword [rax]	       507	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_9
0xeff	        0x488b4010	            mov rax, qword [rax + 0x10] 	       507	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_9
0xf03	          0x4889c6	                            mov rsi, rax	       507	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_9
0xf06	      0xbf00000000	                              mov edi, 0	       507	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_9
0xf0b	      0xb800000000	                              mov eax, 0	       507	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_9
0xf10	      0xe800000000	                          call 0x4000f55	       507	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_9
0xf15	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       508	packed-backend.c	FUNCTION_15	ELSE_2	IF_5
0xf1c	    0xc74008000000	                  mov dword [rax + 8], 0	       508	packed-backend.c	FUNCTION_15	ELSE_2	IF_5
0xf23	            0xeb49	                           jmp 0x4000fae	       508	packed-backend.c	FUNCTION_15	ELSE_2	IF_5
0xf25	    0x8b954cffffff	             mov edx, dword [rbp - 0xb4]	       510	packed-backend.c	FUNCTION_15	ELSE_3	CALL_10
0xf2b	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       510	packed-backend.c	FUNCTION_15	ELSE_3	CALL_10
0xf32	    0x41b900000000	                              mov r9d, 0	       510	packed-backend.c	FUNCTION_15	ELSE_3	CALL_10
0xf38	          0x4189d0	                            mov r8d, edx	       510	packed-backend.c	FUNCTION_15	ELSE_3	CALL_10
0xf3b	      0xb902000000	                              mov ecx, 2	       510	packed-backend.c	FUNCTION_15	ELSE_3	CALL_10
0xf40	      0xba01000000	                              mov edx, 1	       510	packed-backend.c	FUNCTION_15	ELSE_3	CALL_10
0xf45	          0x4889c6	                            mov rsi, rax	       510	packed-backend.c	FUNCTION_15	ELSE_3	CALL_10
0xf48	      0xbf00000000	                              mov edi, 0	       510	packed-backend.c	FUNCTION_15	ELSE_3	CALL_10
0xf4d	      0xe800000000	                          call 0x4000f92	       510	packed-backend.c	FUNCTION_15	ELSE_3	CALL_10
0xf52	          0x4889c2	                            mov rdx, rax	       510	packed-backend.c	FUNCTION_15	ELSE_3	CALL_10
0xf55	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       510	packed-backend.c	FUNCTION_15	ELSE_3	CALL_10
0xf5c	        0x48895010	             mov qword [rax + 0x10], rdx	       510	packed-backend.c	FUNCTION_15	ELSE_3	CALL_10
0xf60	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       511	packed-backend.c	FUNCTION_15	ELSE_3
0xf67	    0xc74008010000	                  mov dword [rax + 8], 1	       511	packed-backend.c	FUNCTION_15	ELSE_3
0xf6e	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	       513	packed-backend.c	FUNCTION_15	CALL_11
0xf74	            0x89c7	                            mov edi, eax	       513	packed-backend.c	FUNCTION_15	CALL_11
0xf76	      0xe800000000	                          call 0x4000fbb	       513	packed-backend.c	FUNCTION_15	CALL_11
0xf7b	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       515	packed-backend.c	FUNCTION_15
0xf82	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       515	packed-backend.c	FUNCTION_15
0xf86	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       515	packed-backend.c	FUNCTION_15
0xf8d	        0x48895018	             mov qword [rax + 0x18], rdx	       515	packed-backend.c	FUNCTION_15
0xf91	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       516	packed-backend.c	FUNCTION_15
0xf98	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       516	packed-backend.c	FUNCTION_15
0xf9c	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       516	packed-backend.c	FUNCTION_15
0xfa3	          0x4801c2	                            add rdx, rax	       516	packed-backend.c	FUNCTION_15
0xfa6	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       516	packed-backend.c	FUNCTION_15
0xfad	        0x48895020	             mov qword [rax + 0x20], rdx	       516	packed-backend.c	FUNCTION_15
0xfb1	      0xb801000000	                              mov eax, 1	       518	packed-backend.c	FUNCTION_15
0xfb6	        0x488b4df8	                mov rcx, qword [rbp - 8]	       519	packed-backend.c	FUNCTION_15
0xfba	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       519	packed-backend.c	FUNCTION_15
0xfc3	            0x7405	                            je 0x400100a	       519	packed-backend.c	FUNCTION_15
0xfc5	      0xe800000000	                          call 0x400100a	       519	packed-backend.c	FUNCTION_15
0xfca	              0xc9	                                   leave	       519	packed-backend.c	FUNCTION_15
0xfcb	              0xc3	                                     ret	       519	packed-backend.c	FUNCTION_15
xsize_t	functions,0:IF,1:DO,0:FOR,0:WHILE,0:CALL,1:ELSE,0:SWITCH,0	15
0xb3	              0x55	                                push rbp	       928	git-compat-util.h	FUNCTION_69
0xb4	          0x4889e5	                            mov rbp, rsp	       928	git-compat-util.h	FUNCTION_69
0xb7	        0x4883ec20	                           sub rsp, 0x20	       928	git-compat-util.h	FUNCTION_69
0xbb	        0x48897de8	             mov qword [rbp - 0x18], rdi	       928	git-compat-util.h	FUNCTION_69
0xbf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       929	git-compat-util.h	FUNCTION_69
0xc3	        0x488945f8	                mov qword [rbp - 8], rax	       929	git-compat-util.h	FUNCTION_69
0xc7	        0x488b45f8	                mov rax, qword [rbp - 8]	       931	git-compat-util.h	FUNCTION_69	IF_1
0xcb	        0x483945e8	            cmp qword [rbp - 0x18], rax 	       931	git-compat-util.h	FUNCTION_69	IF_1
0xcf	            0x740f	                            je 0x4000120	       931	git-compat-util.h	FUNCTION_69	IF_1
0xd1	      0xbf00000000	                              mov edi, 0	       932	git-compat-util.h	FUNCTION_69	CALL_1
0xd6	      0xb800000000	                              mov eax, 0	       932	git-compat-util.h	FUNCTION_69	CALL_1
0xdb	      0xe800000000	                          call 0x4000120	       932	git-compat-util.h	FUNCTION_69	CALL_1
0xe0	        0x488b45f8	                mov rax, qword [rbp - 8]	       933	git-compat-util.h	FUNCTION_69
0xe4	              0xc9	                                   leave	       934	git-compat-util.h	FUNCTION_69
0xe5	              0xc3	                                     ret	       934	git-compat-util.h	FUNCTION_69
packed_reflog_expire	functions,0:IF,0:DO,0:FOR,0:WHILE,0:CALL,0:ELSE,0:SWITCH,0	11
0x2c9a	              0x55	                                push rbp	      1629	packed-backend.c	FUNCTION_49
0x2c9b	          0x4889e5	                            mov rbp, rsp	      1629	packed-backend.c	FUNCTION_49
0x2c9e	        0x48897df8	                mov qword [rbp - 8], rdi	      1629	packed-backend.c	FUNCTION_49
0x2ca2	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1629	packed-backend.c	FUNCTION_49
0x2ca6	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1629	packed-backend.c	FUNCTION_49
0x2caa	          0x894de4	             mov dword [rbp - 0x1c], ecx	      1629	packed-backend.c	FUNCTION_49
0x2cad	        0x4c8945d8	              mov qword [rbp - 0x28], r8	      1629	packed-backend.c	FUNCTION_49
0x2cb1	        0x4c894dd0	              mov qword [rbp - 0x30], r9	      1629	packed-backend.c	FUNCTION_49
0x2cb5	      0xb800000000	                              mov eax, 0	      1630	packed-backend.c	FUNCTION_49
0x2cba	              0x5d	                                 pop rbp	      1631	packed-backend.c	FUNCTION_49
0x2cbb	              0xc3	                                     ret	      1631	packed-backend.c	FUNCTION_49
packed_for_each_reflog_ent	functions,0:IF,0:DO,0:FOR,0:WHILE,0:CALL,0:ELSE,0:SWITCH,0	9
0x2c18	              0x55	                                push rbp	      1591	packed-backend.c	FUNCTION_44
0x2c19	          0x4889e5	                            mov rbp, rsp	      1591	packed-backend.c	FUNCTION_44
0x2c1c	        0x48897df8	                mov qword [rbp - 8], rdi	      1591	packed-backend.c	FUNCTION_44
0x2c20	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1591	packed-backend.c	FUNCTION_44
0x2c24	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1591	packed-backend.c	FUNCTION_44
0x2c28	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1591	packed-backend.c	FUNCTION_44
0x2c2c	      0xb800000000	                              mov eax, 0	      1592	packed-backend.c	FUNCTION_44
0x2c31	              0x5d	                                 pop rbp	      1593	packed-backend.c	FUNCTION_44
0x2c32	              0xc3	                                     ret	      1593	packed-backend.c	FUNCTION_44
verify_buffer_safe	functions,0:IF,2:DO,0:FOR,0:WHILE,0:CALL,2:ELSE,0:SWITCH,0	46
0xcdd	              0x55	                                push rbp	       450	packed-backend.c	FUNCTION_14
0xcde	          0x4889e5	                            mov rbp, rsp	       450	packed-backend.c	FUNCTION_14
0xce1	        0x4883ec30	                           sub rsp, 0x30	       450	packed-backend.c	FUNCTION_14
0xce5	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       450	packed-backend.c	FUNCTION_14
0xce9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       451	packed-backend.c	FUNCTION_14
0xced	        0x488b4018	            mov rax, qword [rax + 0x18] 	       451	packed-backend.c	FUNCTION_14
0xcf1	        0x488945e8	             mov qword [rbp - 0x18], rax	       451	packed-backend.c	FUNCTION_14
0xcf5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       452	packed-backend.c	FUNCTION_14
0xcf9	        0x488b4020	            mov rax, qword [rax + 0x20] 	       452	packed-backend.c	FUNCTION_14
0xcfd	        0x488945f0	             mov qword [rbp - 0x10], rax	       452	packed-backend.c	FUNCTION_14
0xd01	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       455	packed-backend.c	FUNCTION_14	IF_1
0xd05	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       455	packed-backend.c	FUNCTION_14	IF_1
0xd09	            0x7469	                            je 0x4000db4	       455	packed-backend.c	FUNCTION_14	IF_1
0xd0b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       458	packed-backend.c	FUNCTION_14	CALL_1
0xd0f	        0x488d50ff	                      lea rdx, [rax - 1]	       458	packed-backend.c	FUNCTION_14	CALL_1
0xd13	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       458	packed-backend.c	FUNCTION_14	CALL_1
0xd17	          0x4889d6	                            mov rsi, rdx	       458	packed-backend.c	FUNCTION_14	CALL_1
0xd1a	          0x4889c7	                            mov rdi, rax	       458	packed-backend.c	FUNCTION_14	CALL_1
0xd1d	      0xe843ffffff	           call sym.find_start_of_record	       458	packed-backend.c	FUNCTION_14	CALL_1
0xd22	        0x488945f8	                mov qword [rbp - 8], rax	       458	packed-backend.c	FUNCTION_14	CALL_1
0xd26	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       459	packed-backend.c	FUNCTION_14	IF_2
0xd2a	        0x4883e801	                              sub rax, 1	       459	packed-backend.c	FUNCTION_14	IF_2
0xd2e	           0xfb600	                   movzx eax, byte [rax]	       459	packed-backend.c	FUNCTION_14	IF_2
0xd31	            0x3c0a	                             cmp al, 0xa	       459	packed-backend.c	FUNCTION_14	IF_2
0xd33	            0x7514	                           jne 0x4000d89	       459	packed-backend.c	FUNCTION_14	IF_2
0xd35	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       459	packed-backend.c	FUNCTION_14	IF_2
0xd39	        0x488b45f8	                mov rax, qword [rbp - 8]	       459	packed-backend.c	FUNCTION_14	IF_2
0xd3d	          0x4829c2	                            sub rdx, rax	       459	packed-backend.c	FUNCTION_14	IF_2
0xd40	          0x4889d0	                            mov rax, rdx	       459	packed-backend.c	FUNCTION_14	IF_2
0xd43	        0x4883f829	                           cmp rax, 0x29	       459	packed-backend.c	FUNCTION_14	IF_2
0xd47	            0x7f2c	                            jg 0x4000db5	       459	packed-backend.c	FUNCTION_14	IF_2
0xd49	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       461	packed-backend.c	FUNCTION_14	IF_2
0xd4d	        0x488b45f8	                mov rax, qword [rbp - 8]	       461	packed-backend.c	FUNCTION_14	IF_2
0xd51	          0x4829c2	                            sub rdx, rax	       461	packed-backend.c	FUNCTION_14	IF_2
0xd54	          0x4889d0	                            mov rax, rdx	       461	packed-backend.c	FUNCTION_14	IF_2
0xd57	          0x4889c2	                            mov rdx, rax	       460	packed-backend.c	FUNCTION_14	IF_2	CALL_2
0xd5a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       460	packed-backend.c	FUNCTION_14	IF_2	CALL_2
0xd5e	          0x488b00	                    mov rax, qword [rax]	       460	packed-backend.c	FUNCTION_14	IF_2	CALL_2
0xd61	        0x488b4010	            mov rax, qword [rax + 0x10] 	       460	packed-backend.c	FUNCTION_14	IF_2	CALL_2
0xd65	        0x488b4df8	                mov rcx, qword [rbp - 8]	       460	packed-backend.c	FUNCTION_14	IF_2	CALL_2
0xd69	          0x4889ce	                            mov rsi, rcx	       460	packed-backend.c	FUNCTION_14	IF_2	CALL_2
0xd6c	          0x4889c7	                            mov rdi, rax	       460	packed-backend.c	FUNCTION_14	IF_2	CALL_2
0xd6f	      0xe8cef8ffff	               call sym.die_invalid_line	       460	packed-backend.c	FUNCTION_14	IF_2	CALL_2
0xd74	              0x90	                                     nop	       456	packed-backend.c	FUNCTION_14	IF_1
0xd75	              0xc9	                                   leave	       462	packed-backend.c	FUNCTION_14
0xd76	              0xc3	                                     ret	       462	packed-backend.c	FUNCTION_14
is_tempfile_active	functions,0:IF,0:DO,0:FOR,0:WHILE,0:CALL,0:ELSE,0:SWITCH,0	14
0x307	              0x55	                                push rbp	       201	tempfile.h	FUNCTION_109
0x308	          0x4889e5	                            mov rbp, rsp	       201	tempfile.h	FUNCTION_109
0x30b	        0x48897df8	                mov qword [rbp - 8], rdi	       201	tempfile.h	FUNCTION_109
0x30f	      0x48837df800	                  cmp qword [rbp - 8], 0	       202	tempfile.h	FUNCTION_109
0x314	            0x7412	                            je 0x4000368	       202	tempfile.h	FUNCTION_109
0x316	        0x488b45f8	                mov rax, qword [rbp - 8]	       202	tempfile.h	FUNCTION_109
0x31a	          0x8b4010	            mov eax, dword [rax + 0x10] 	       202	tempfile.h	FUNCTION_109
0x31d	            0x85c0	                           test eax, eax	       202	tempfile.h	FUNCTION_109
0x31f	            0x7407	                            je 0x4000368	       202	tempfile.h	FUNCTION_109
0x321	      0xb801000000	                              mov eax, 1	       202	tempfile.h	FUNCTION_109
0x326	            0xeb05	                           jmp 0x400036d	       202	tempfile.h	FUNCTION_109
0x328	      0xb800000000	                              mov eax, 0	       202	tempfile.h	FUNCTION_109
0x32d	              0x5d	                                 pop rbp	       203	tempfile.h	FUNCTION_109
0x32e	              0xc3	                                     ret	       203	tempfile.h	FUNCTION_109
packed_initial_transaction_commit	functions,0:IF,0:DO,0:FOR,0:WHILE,0:CALL,1:ELSE,0:SWITCH,0	13
0x2966	              0x55	                                push rbp	      1499	packed-backend.c	FUNCTION_37
0x2967	          0x4889e5	                            mov rbp, rsp	      1499	packed-backend.c	FUNCTION_37
0x296a	        0x4883ec20	                           sub rsp, 0x20	      1499	packed-backend.c	FUNCTION_37
0x296e	        0x48897df8	                mov qword [rbp - 8], rdi	      1499	packed-backend.c	FUNCTION_37
0x2972	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1499	packed-backend.c	FUNCTION_37
0x2976	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1499	packed-backend.c	FUNCTION_37
0x297a	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1500	packed-backend.c	FUNCTION_37	CALL_1
0x297e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1500	packed-backend.c	FUNCTION_37	CALL_1
0x2982	          0x4889d6	                            mov rsi, rdx	      1500	packed-backend.c	FUNCTION_37	CALL_1
0x2985	          0x4889c7	                            mov rdi, rax	      1500	packed-backend.c	FUNCTION_37	CALL_1
0x2988	      0xe800000000	                          call 0x40029cd	      1500	packed-backend.c	FUNCTION_37	CALL_1
0x298d	              0xc9	                                   leave	      1501	packed-backend.c	FUNCTION_37
0x298e	              0xc3	                                     ret	      1501	packed-backend.c	FUNCTION_37
next_record	functions,0:IF,9:DO,0:FOR,0:WHILE,0:CALL,16:ELSE,2:SWITCH,0	264
0x155e	              0x55	                                push rbp	       788	packed-backend.c	FUNCTION_21
0x155f	          0x4889e5	                            mov rbp, rsp	       788	packed-backend.c	FUNCTION_21
0x1562	        0x4883ec30	                           sub rsp, 0x30	       788	packed-backend.c	FUNCTION_21
0x1566	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       788	packed-backend.c	FUNCTION_21
0x156a	    0x64488b042528	                mov rax, qword fs:[0x28]	       788	packed-backend.c	FUNCTION_21
0x1573	        0x488945f8	                mov qword [rbp - 8], rax	       788	packed-backend.c	FUNCTION_21
0x1577	            0x31c0	                            xor eax, eax	       788	packed-backend.c	FUNCTION_21
0x1579	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       789	packed-backend.c	FUNCTION_21
0x157d	        0x488b4030	            mov rax, qword [rax + 0x30] 	       789	packed-backend.c	FUNCTION_21
0x1581	        0x488945e8	             mov qword [rbp - 0x18], rax	       789	packed-backend.c	FUNCTION_21
0x1585	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       791	packed-backend.c	FUNCTION_21	CALL_1
0x1589	        0x4883c068	                           add rax, 0x68	       791	packed-backend.c	FUNCTION_21	CALL_1
0x158d	      0xbe00000000	                              mov esi, 0	       791	packed-backend.c	FUNCTION_21	CALL_1
0x1592	          0x4889c7	                            mov rdi, rax	       791	packed-backend.c	FUNCTION_21	CALL_1
0x1595	      0xe886ebffff	                  call sym.strbuf_setlen	       791	packed-backend.c	FUNCTION_21	CALL_1
0x159a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       793	packed-backend.c	FUNCTION_21	IF_1
0x159e	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       793	packed-backend.c	FUNCTION_21	IF_1
0x15a2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       793	packed-backend.c	FUNCTION_21	IF_1
0x15a6	        0x488b4038	            mov rax, qword [rax + 0x38] 	       793	packed-backend.c	FUNCTION_21	IF_1
0x15aa	          0x4839c2	                            cmp rdx, rax	       793	packed-backend.c	FUNCTION_21	IF_1
0x15ad	            0x750a	                           jne 0x40015f9	       793	packed-backend.c	FUNCTION_21	IF_1
0x15af	      0xb8ffffffff	                     mov eax, 0xffffffff	       794	packed-backend.c	FUNCTION_21	IF_1
0x15b4	      0xe948030000	                           jmp 0x4001941	       794	packed-backend.c	FUNCTION_21	IF_1
0x15b9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       796	packed-backend.c	FUNCTION_21
0x15bd	    0xc74020020000	               mov dword [rax + 0x20], 2	       796	packed-backend.c	FUNCTION_21
0x15c4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       798	packed-backend.c	FUNCTION_21	IF_2
0x15c8	        0x488b4038	            mov rax, qword [rax + 0x38] 	       798	packed-backend.c	FUNCTION_21	IF_2
0x15cc	          0x4889c2	                            mov rdx, rax	       798	packed-backend.c	FUNCTION_21	IF_2
0x15cf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       798	packed-backend.c	FUNCTION_21	IF_2
0x15d3	          0x4829c2	                            sub rdx, rax	       798	packed-backend.c	FUNCTION_21	IF_2
0x15d6	          0x4889d0	                            mov rax, rdx	       798	packed-backend.c	FUNCTION_21	IF_2
0x15d9	        0x4883f829	                           cmp rax, 0x29	       798	packed-backend.c	FUNCTION_21	IF_2
0x15dd	            0x7e44	                           jle 0x4001663	       798	packed-backend.c	FUNCTION_21	IF_2
0x15df	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       799	packed-backend.c	FUNCTION_21	IF_2	CALL_2
0x15e3	        0x488d4840	                   lea rcx, [rax + 0x40]	       799	packed-backend.c	FUNCTION_21	IF_2	CALL_2
0x15e7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       799	packed-backend.c	FUNCTION_21	IF_2	CALL_2
0x15eb	        0x488d55e8	                   lea rdx, [rbp - 0x18]	       799	packed-backend.c	FUNCTION_21	IF_2	CALL_2
0x15ef	          0x4889ce	                            mov rsi, rcx	       799	packed-backend.c	FUNCTION_21	IF_2	CALL_2
0x15f2	          0x4889c7	                            mov rdi, rax	       799	packed-backend.c	FUNCTION_21	IF_2	CALL_2
0x15f5	      0xe800000000	                          call 0x400163a	       799	packed-backend.c	FUNCTION_21	IF_2	CALL_2
0x15fa	            0x85c0	                           test eax, eax	       798	packed-backend.c	FUNCTION_21	IF_2
0x15fc	            0x7525	                           jne 0x4001663	       798	packed-backend.c	FUNCTION_21	IF_2
0x15fe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       800	packed-backend.c	FUNCTION_21	IF_2	CALL_3
0x1602	        0x488d5001	                      lea rdx, [rax + 1]	       800	packed-backend.c	FUNCTION_21	IF_2	CALL_3
0x1606	        0x488955e8	             mov qword [rbp - 0x18], rdx	       800	packed-backend.c	FUNCTION_21	IF_2	CALL_3
0x160a	           0xfb600	                   movzx eax, byte [rax]	       800	packed-backend.c	FUNCTION_21	IF_2	CALL_3
0x160d	           0xfb6c0	                           movzx eax, al	       800	packed-backend.c	FUNCTION_21	IF_2	CALL_3
0x1610	            0x4898	                                    cdqe	       800	packed-backend.c	FUNCTION_21	IF_2	CALL_3
0x1612	     0xfb680000000	                   movzx eax, byte [rax]	       800	packed-backend.c	FUNCTION_21	IF_2	CALL_3
0x1619	           0xfb6c0	                           movzx eax, al	       800	packed-backend.c	FUNCTION_21	IF_2	CALL_3
0x161c	          0x83e001	                              and eax, 1	       800	packed-backend.c	FUNCTION_21	IF_2	CALL_3
0x161f	            0x85c0	                           test eax, eax	       799	packed-backend.c	FUNCTION_21	IF_2	CALL_2
0x1621	            0x753e	                           jne 0x40016a1	       799	packed-backend.c	FUNCTION_21	IF_2	CALL_2
0x1623	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       802	packed-backend.c	FUNCTION_21	IF_2
0x1627	        0x488b4038	            mov rax, qword [rax + 0x38] 	       802	packed-backend.c	FUNCTION_21	IF_2
0x162b	          0x4889c2	                            mov rdx, rax	       802	packed-backend.c	FUNCTION_21	IF_2
0x162e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       802	packed-backend.c	FUNCTION_21	IF_2
0x1632	        0x488b4030	            mov rax, qword [rax + 0x30] 	       802	packed-backend.c	FUNCTION_21	IF_2
0x1636	          0x4829c2	                            sub rdx, rax	       802	packed-backend.c	FUNCTION_21	IF_2
0x1639	          0x4889d0	                            mov rax, rdx	       802	packed-backend.c	FUNCTION_21	IF_2
0x163c	          0x4889c2	                            mov rdx, rax	       801	packed-backend.c	FUNCTION_21	IF_2	CALL_4
0x163f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       801	packed-backend.c	FUNCTION_21	IF_2	CALL_4
0x1643	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       801	packed-backend.c	FUNCTION_21	IF_2	CALL_4
0x1647	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       801	packed-backend.c	FUNCTION_21	IF_2	CALL_4
0x164b	        0x488b4028	            mov rax, qword [rax + 0x28] 	       801	packed-backend.c	FUNCTION_21	IF_2	CALL_4
0x164f	          0x488b00	                    mov rax, qword [rax]	       801	packed-backend.c	FUNCTION_21	IF_2	CALL_4
0x1652	        0x488b4010	            mov rax, qword [rax + 0x10] 	       801	packed-backend.c	FUNCTION_21	IF_2	CALL_4
0x1656	          0x4889ce	                            mov rsi, rcx	       801	packed-backend.c	FUNCTION_21	IF_2	CALL_4
0x1659	          0x4889c7	                            mov rdi, rax	       801	packed-backend.c	FUNCTION_21	IF_2	CALL_4
0x165c	      0xe8e1efffff	               call sym.die_invalid_line	       801	packed-backend.c	FUNCTION_21	IF_2	CALL_4
0x1661	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       804	packed-backend.c	FUNCTION_21	CALL_5
0x1665	        0x488b4038	            mov rax, qword [rax + 0x38] 	       804	packed-backend.c	FUNCTION_21	CALL_5
0x1669	          0x4889c2	                            mov rdx, rax	       804	packed-backend.c	FUNCTION_21	CALL_5
0x166c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       804	packed-backend.c	FUNCTION_21	CALL_5
0x1670	          0x4829c2	                            sub rdx, rax	       804	packed-backend.c	FUNCTION_21	CALL_5
0x1673	          0x4889d0	                            mov rax, rdx	       804	packed-backend.c	FUNCTION_21	CALL_5
0x1676	          0x4889c2	                            mov rdx, rax	       804	packed-backend.c	FUNCTION_21	CALL_5
0x1679	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       804	packed-backend.c	FUNCTION_21	CALL_5
0x167d	      0xbe0a000000	                            mov esi, 0xa	       804	packed-backend.c	FUNCTION_21	CALL_5
0x1682	          0x4889c7	                            mov rdi, rax	       804	packed-backend.c	FUNCTION_21	CALL_5
0x1685	      0xe800000000	                          call 0x40016ca	       804	packed-backend.c	FUNCTION_21	CALL_5
0x168a	        0x488945f0	             mov qword [rbp - 0x10], rax	       804	packed-backend.c	FUNCTION_21	CALL_5
0x168e	      0x48837df000	               cmp qword [rbp - 0x10], 0	       805	packed-backend.c	FUNCTION_21	IF_3
0x1693	            0x753e	                           jne 0x4001713	       805	packed-backend.c	FUNCTION_21	IF_3
0x1695	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       807	packed-backend.c	FUNCTION_21	IF_3
0x1699	        0x488b4038	            mov rax, qword [rax + 0x38] 	       807	packed-backend.c	FUNCTION_21	IF_3
0x169d	          0x4889c2	                            mov rdx, rax	       807	packed-backend.c	FUNCTION_21	IF_3
0x16a0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       807	packed-backend.c	FUNCTION_21	IF_3
0x16a4	        0x488b4030	            mov rax, qword [rax + 0x30] 	       807	packed-backend.c	FUNCTION_21	IF_3
0x16a8	          0x4829c2	                            sub rdx, rax	       807	packed-backend.c	FUNCTION_21	IF_3
0x16ab	          0x4889d0	                            mov rax, rdx	       807	packed-backend.c	FUNCTION_21	IF_3
0x16ae	          0x4889c2	                            mov rdx, rax	       806	packed-backend.c	FUNCTION_21	IF_3	CALL_6
0x16b1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       806	packed-backend.c	FUNCTION_21	IF_3	CALL_6
0x16b5	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       806	packed-backend.c	FUNCTION_21	IF_3	CALL_6
0x16b9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       806	packed-backend.c	FUNCTION_21	IF_3	CALL_6
0x16bd	        0x488b4028	            mov rax, qword [rax + 0x28] 	       806	packed-backend.c	FUNCTION_21	IF_3	CALL_6
0x16c1	          0x488b00	                    mov rax, qword [rax]	       806	packed-backend.c	FUNCTION_21	IF_3	CALL_6
0x16c4	        0x488b4010	            mov rax, qword [rax + 0x10] 	       806	packed-backend.c	FUNCTION_21	IF_3	CALL_6
0x16c8	          0x4889ce	                            mov rsi, rcx	       806	packed-backend.c	FUNCTION_21	IF_3	CALL_6
0x16cb	          0x4889c7	                            mov rdi, rax	       806	packed-backend.c	FUNCTION_21	IF_3	CALL_6
0x16ce	      0xe815efffff	          call sym.die_unterminated_line	       806	packed-backend.c	FUNCTION_21	IF_3	CALL_6
0x16d3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       809	packed-backend.c	FUNCTION_21	CALL_7
0x16d7	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       809	packed-backend.c	FUNCTION_21	CALL_7
0x16db	          0x4829d0	                            sub rax, rdx	       809	packed-backend.c	FUNCTION_21	CALL_7
0x16de	          0x4889c6	                            mov rsi, rax	       809	packed-backend.c	FUNCTION_21	CALL_7
0x16e1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       809	packed-backend.c	FUNCTION_21	CALL_7
0x16e5	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       809	packed-backend.c	FUNCTION_21	CALL_7
0x16e9	        0x488d4a68	                   lea rcx, [rdx + 0x68]	       809	packed-backend.c	FUNCTION_21	CALL_7
0x16ed	          0x4889f2	                            mov rdx, rsi	       809	packed-backend.c	FUNCTION_21	CALL_7
0x16f0	          0x4889c6	                            mov rsi, rax	       809	packed-backend.c	FUNCTION_21	CALL_7
0x16f3	          0x4889cf	                            mov rdi, rcx	       809	packed-backend.c	FUNCTION_21	CALL_7
0x16f6	      0xe800000000	                          call 0x400173b	       809	packed-backend.c	FUNCTION_21	CALL_7
0x16fb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       810	packed-backend.c	FUNCTION_21
0x16ff	        0x488b5078	            mov rdx, qword [rax + 0x78] 	       810	packed-backend.c	FUNCTION_21
0x1703	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       810	packed-backend.c	FUNCTION_21
0x1707	        0x48895010	             mov qword [rax + 0x10], rdx	       810	packed-backend.c	FUNCTION_21
0x170b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       812	packed-backend.c	FUNCTION_21	IF_4	CALL_8
0x170f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       812	packed-backend.c	FUNCTION_21	IF_4	CALL_8
0x1713	      0xbe01000000	                              mov esi, 1	       812	packed-backend.c	FUNCTION_21	IF_4	CALL_8
0x1718	          0x4889c7	                            mov rdi, rax	       812	packed-backend.c	FUNCTION_21	IF_4	CALL_8
0x171b	      0xe800000000	                          call 0x4001760	       812	packed-backend.c	FUNCTION_21	IF_4	CALL_8
0x1720	            0x85c0	                           test eax, eax	       812	packed-backend.c	FUNCTION_21	IF_4	CALL_8
0x1722	            0x7451	                            je 0x40017b5	       812	packed-backend.c	FUNCTION_21	IF_4	CALL_8
0x1724	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       813	packed-backend.c	FUNCTION_21	IF_4	IF_5	CALL_9
0x1728	        0x488b4010	            mov rax, qword [rax + 0x10] 	       813	packed-backend.c	FUNCTION_21	IF_4	IF_5	CALL_9
0x172c	          0x4889c7	                            mov rdi, rax	       813	packed-backend.c	FUNCTION_21	IF_4	IF_5	CALL_9
0x172f	      0xe800000000	                          call 0x4001774	       813	packed-backend.c	FUNCTION_21	IF_4	IF_5	CALL_9
0x1734	            0x85c0	                           test eax, eax	       813	packed-backend.c	FUNCTION_21	IF_4	IF_5	CALL_9
0x1736	            0x751a	                           jne 0x4001792	       813	packed-backend.c	FUNCTION_21	IF_4	IF_5	CALL_9
0x1738	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       814	packed-backend.c	FUNCTION_21	IF_4	IF_5	CALL_10
0x173c	        0x488b4010	            mov rax, qword [rax + 0x10] 	       814	packed-backend.c	FUNCTION_21	IF_4	IF_5	CALL_10
0x1740	          0x4889c6	                            mov rsi, rax	       814	packed-backend.c	FUNCTION_21	IF_4	IF_5	CALL_10
0x1743	      0xbf00000000	                              mov edi, 0	       814	packed-backend.c	FUNCTION_21	IF_4	IF_5	CALL_10
0x1748	      0xb800000000	                              mov eax, 0	       814	packed-backend.c	FUNCTION_21	IF_4	IF_5	CALL_10
0x174d	      0xe800000000	                          call 0x4001792	       814	packed-backend.c	FUNCTION_21	IF_4	IF_5	CALL_10
0x1752	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       816	packed-backend.c	FUNCTION_21	IF_4	CALL_11
0x1756	        0x4883c040	                           add rax, 0x40	       816	packed-backend.c	FUNCTION_21	IF_4	CALL_11
0x175a	          0x4889c7	                            mov rdi, rax	       816	packed-backend.c	FUNCTION_21	IF_4	CALL_11
0x175d	      0xe880ebffff	                         call sym.oidclr	       816	packed-backend.c	FUNCTION_21	IF_4	CALL_11
0x1762	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       817	packed-backend.c	FUNCTION_21	IF_4
0x1766	          0x8b4020	            mov eax, dword [rax + 0x20] 	       817	packed-backend.c	FUNCTION_21	IF_4
0x1769	          0x83c80c	                             or eax, 0xc	       817	packed-backend.c	FUNCTION_21	IF_4
0x176c	            0x89c2	                            mov edx, eax	       817	packed-backend.c	FUNCTION_21	IF_4
0x176e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       817	packed-backend.c	FUNCTION_21	IF_4
0x1772	          0x895020	             mov dword [rax + 0x20], edx	       817	packed-backend.c	FUNCTION_21	IF_4
0x1775	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       819	packed-backend.c	FUNCTION_21	IF_6
0x1779	        0x488b4028	            mov rax, qword [rax + 0x28] 	       819	packed-backend.c	FUNCTION_21	IF_6
0x177d	          0x8b4028	            mov eax, dword [rax + 0x28] 	       819	packed-backend.c	FUNCTION_21	IF_6
0x1780	          0x83f802	                              cmp eax, 2	       819	packed-backend.c	FUNCTION_21	IF_6
0x1783	            0x7429	                            je 0x40017ee	       819	packed-backend.c	FUNCTION_21	IF_6
0x1785	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       820	packed-backend.c	FUNCTION_21	IF_6
0x1789	        0x488b4028	            mov rax, qword [rax + 0x28] 	       820	packed-backend.c	FUNCTION_21	IF_6
0x178d	          0x8b4028	            mov eax, dword [rax + 0x28] 	       820	packed-backend.c	FUNCTION_21	IF_6
0x1790	          0x83f801	                              cmp eax, 1	       819	packed-backend.c	FUNCTION_21	IF_6
0x1793	            0x752c	                           jne 0x4001801	       819	packed-backend.c	FUNCTION_21	IF_6
0x1795	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       821	packed-backend.c	FUNCTION_21	IF_6	CALL_12
0x1799	        0x488b4010	            mov rax, qword [rax + 0x10] 	       821	packed-backend.c	FUNCTION_21	IF_6	CALL_12
0x179d	      0xbe00000000	                              mov esi, 0	       821	packed-backend.c	FUNCTION_21	IF_6	CALL_12
0x17a2	          0x4889c7	                            mov rdi, rax	       821	packed-backend.c	FUNCTION_21	IF_6	CALL_12
0x17a5	      0xe800000000	                          call 0x40017ea	       821	packed-backend.c	FUNCTION_21	IF_6	CALL_12
0x17aa	            0x85c0	                           test eax, eax	       820	packed-backend.c	FUNCTION_21	IF_6
0x17ac	            0x7413	                            je 0x4001801	       820	packed-backend.c	FUNCTION_21	IF_6
0x17ae	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       822	packed-backend.c	FUNCTION_21	IF_6
0x17b2	          0x8b4020	            mov eax, dword [rax + 0x20] 	       822	packed-backend.c	FUNCTION_21	IF_6
0x17b5	          0x83c840	                            or eax, 0x40	       822	packed-backend.c	FUNCTION_21	IF_6
0x17b8	            0x89c2	                            mov edx, eax	       822	packed-backend.c	FUNCTION_21	IF_6
0x17ba	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       822	packed-backend.c	FUNCTION_21	IF_6
0x17be	          0x895020	             mov dword [rax + 0x20], edx	       822	packed-backend.c	FUNCTION_21	IF_6
0x17c1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       824	packed-backend.c	FUNCTION_21
0x17c5	        0x488d5001	                      lea rdx, [rax + 1]	       824	packed-backend.c	FUNCTION_21
0x17c9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       824	packed-backend.c	FUNCTION_21
0x17cd	        0x48895030	             mov qword [rax + 0x30], rdx	       824	packed-backend.c	FUNCTION_21
0x17d1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       826	packed-backend.c	FUNCTION_21	IF_7
0x17d5	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       826	packed-backend.c	FUNCTION_21	IF_7
0x17d9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       826	packed-backend.c	FUNCTION_21	IF_7
0x17dd	        0x488b4038	            mov rax, qword [rax + 0x38] 	       826	packed-backend.c	FUNCTION_21	IF_7
0x17e1	          0x4839c2	                            cmp rdx, rax	       826	packed-backend.c	FUNCTION_21	IF_7
0x17e4	     0xf8302010000	                           jae 0x400192c	       826	packed-backend.c	FUNCTION_21	IF_7
0x17ea	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       826	packed-backend.c	FUNCTION_21	IF_7
0x17ee	        0x488b4030	            mov rax, qword [rax + 0x30] 	       826	packed-backend.c	FUNCTION_21	IF_7
0x17f2	           0xfb600	                   movzx eax, byte [rax]	       826	packed-backend.c	FUNCTION_21	IF_7
0x17f5	            0x3c5e	                            cmp al, 0x5e	       826	packed-backend.c	FUNCTION_21	IF_7
0x17f7	     0xf85ef000000	                           jne 0x400192c	       826	packed-backend.c	FUNCTION_21	IF_7
0x17fd	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       827	packed-backend.c	FUNCTION_21	IF_7
0x1801	        0x488b4030	            mov rax, qword [rax + 0x30] 	       827	packed-backend.c	FUNCTION_21	IF_7
0x1805	        0x4883c001	                              add rax, 1	       827	packed-backend.c	FUNCTION_21	IF_7
0x1809	        0x488945e8	             mov qword [rbp - 0x18], rax	       827	packed-backend.c	FUNCTION_21	IF_7
0x180d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       828	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x1811	        0x488b4038	            mov rax, qword [rax + 0x38] 	       828	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x1815	          0x4889c2	                            mov rdx, rax	       828	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x1818	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       828	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x181c	          0x4829c2	                            sub rdx, rax	       828	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x181f	          0x4889d0	                            mov rax, rdx	       828	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x1822	        0x4883f828	                           cmp rax, 0x28	       828	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x1826	            0x7e32	                           jle 0x400189a	       828	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x1828	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       829	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_13
0x182c	        0x488d4854	                   lea rcx, [rax + 0x54]	       829	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_13
0x1830	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       829	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_13
0x1834	        0x488d55e8	                   lea rdx, [rbp - 0x18]	       829	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_13
0x1838	          0x4889ce	                            mov rsi, rcx	       829	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_13
0x183b	          0x4889c7	                            mov rdi, rax	       829	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_13
0x183e	      0xe800000000	                          call 0x4001883	       829	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_13
0x1843	            0x85c0	                           test eax, eax	       828	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x1845	            0x7513	                           jne 0x400189a	       828	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x1847	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       830	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x184b	        0x488d5001	                      lea rdx, [rax + 1]	       830	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x184f	        0x488955e8	             mov qword [rbp - 0x18], rdx	       830	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x1853	           0xfb600	                   movzx eax, byte [rax]	       830	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x1856	            0x3c0a	                             cmp al, 0xa	       829	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_13
0x1858	            0x743e	                            je 0x40018d8	       829	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_13
0x185a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       832	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x185e	        0x488b4038	            mov rax, qword [rax + 0x38] 	       832	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x1862	          0x4889c2	                            mov rdx, rax	       832	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x1865	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       832	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x1869	        0x488b4030	            mov rax, qword [rax + 0x30] 	       832	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x186d	          0x4829c2	                            sub rdx, rax	       832	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x1870	          0x4889d0	                            mov rax, rdx	       832	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x1873	          0x4889c2	                            mov rdx, rax	       831	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_14
0x1876	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       831	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_14
0x187a	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       831	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_14
0x187e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       831	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_14
0x1882	        0x488b4028	            mov rax, qword [rax + 0x28] 	       831	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_14
0x1886	          0x488b00	                    mov rax, qword [rax]	       831	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_14
0x1889	        0x488b4010	            mov rax, qword [rax + 0x10] 	       831	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_14
0x188d	          0x4889ce	                            mov rsi, rcx	       831	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_14
0x1890	          0x4889c7	                            mov rdi, rax	       831	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_14
0x1893	      0xe8aaedffff	               call sym.die_invalid_line	       831	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_14
0x1898	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       833	packed-backend.c	FUNCTION_21	IF_7
0x189c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       833	packed-backend.c	FUNCTION_21	IF_7
0x18a0	        0x48895030	             mov qword [rax + 0x30], rdx	       833	packed-backend.c	FUNCTION_21	IF_7
0x18a4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       840	packed-backend.c	FUNCTION_21	IF_7	IF_9
0x18a8	          0x8b4020	            mov eax, dword [rax + 0x20] 	       840	packed-backend.c	FUNCTION_21	IF_7	IF_9
0x18ab	          0x83e004	                              and eax, 4	       840	packed-backend.c	FUNCTION_21	IF_7	IF_9
0x18ae	            0x85c0	                           test eax, eax	       840	packed-backend.c	FUNCTION_21	IF_7	IF_9
0x18b0	            0x7425	                            je 0x4001917	       840	packed-backend.c	FUNCTION_21	IF_7	IF_9
0x18b2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       841	packed-backend.c	FUNCTION_21	IF_7	IF_9	CALL_15
0x18b6	        0x4883c054	                           add rax, 0x54	       841	packed-backend.c	FUNCTION_21	IF_7	IF_9	CALL_15
0x18ba	          0x4889c7	                            mov rdi, rax	       841	packed-backend.c	FUNCTION_21	IF_7	IF_9	CALL_15
0x18bd	      0xe820eaffff	                         call sym.oidclr	       841	packed-backend.c	FUNCTION_21	IF_7	IF_9	CALL_15
0x18c2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       842	packed-backend.c	FUNCTION_21	IF_7	IF_9
0x18c6	          0x8b4020	            mov eax, dword [rax + 0x20] 	       842	packed-backend.c	FUNCTION_21	IF_7	IF_9
0x18c9	          0x83e0bf	                     and eax, 0xffffffbf	       842	packed-backend.c	FUNCTION_21	IF_7	IF_9
0x18cc	            0x89c2	                            mov edx, eax	       842	packed-backend.c	FUNCTION_21	IF_7	IF_9
0x18ce	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       842	packed-backend.c	FUNCTION_21	IF_7	IF_9
0x18d2	          0x895020	             mov dword [rax + 0x20], edx	       842	packed-backend.c	FUNCTION_21	IF_7	IF_9
0x18d5	            0xeb25	                           jmp 0x400193c	       840	packed-backend.c	FUNCTION_21	IF_7	IF_9
0x18d7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       844	packed-backend.c	FUNCTION_21	IF_7	ELSE_1
0x18db	          0x8b4020	            mov eax, dword [rax + 0x20] 	       844	packed-backend.c	FUNCTION_21	IF_7	ELSE_1
0x18de	          0x83c840	                            or eax, 0x40	       844	packed-backend.c	FUNCTION_21	IF_7	ELSE_1
0x18e1	            0x89c2	                            mov edx, eax	       844	packed-backend.c	FUNCTION_21	IF_7	ELSE_1
0x18e3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       844	packed-backend.c	FUNCTION_21	IF_7	ELSE_1
0x18e7	          0x895020	             mov dword [rax + 0x20], edx	       844	packed-backend.c	FUNCTION_21	IF_7	ELSE_1
0x18ea	            0xeb10	                           jmp 0x400193c	       840	packed-backend.c	FUNCTION_21	IF_7	IF_9
0x18ec	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       847	packed-backend.c	FUNCTION_21	ELSE_2	CALL_16
0x18f0	        0x4883c054	                           add rax, 0x54	       847	packed-backend.c	FUNCTION_21	ELSE_2	CALL_16
0x18f4	          0x4889c7	                            mov rdi, rax	       847	packed-backend.c	FUNCTION_21	ELSE_2	CALL_16
0x18f7	      0xe8e6e9ffff	                         call sym.oidclr	       847	packed-backend.c	FUNCTION_21	ELSE_2	CALL_16
0x18fc	      0xb800000000	                              mov eax, 0	       850	packed-backend.c	FUNCTION_21
0x1901	        0x488b4df8	                mov rcx, qword [rbp - 8]	       851	packed-backend.c	FUNCTION_21
0x1905	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       851	packed-backend.c	FUNCTION_21
0x190e	            0x7405	                            je 0x4001955	       851	packed-backend.c	FUNCTION_21
0x1910	      0xe800000000	                          call 0x4001955	       851	packed-backend.c	FUNCTION_21
0x1915	              0xc9	                                   leave	       851	packed-backend.c	FUNCTION_21
0x1916	              0xc3	                                     ret	       851	packed-backend.c	FUNCTION_21
write_with_updates	functions,0:IF,23:DO,0:FOR,0:WHILE,1:CALL,45:ELSE,7:SWITCH,0	370
0x1e60	              0x55	                                push rbp	      1083	packed-backend.c	FUNCTION_31
0x1e61	          0x4889e5	                            mov rbp, rsp	      1083	packed-backend.c	FUNCTION_31
0x1e64	              0x53	                                push rbx	      1083	packed-backend.c	FUNCTION_31
0x1e65	    0x4881eca80000	                           sub rsp, 0xa8	      1083	packed-backend.c	FUNCTION_31
0x1e6c	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      1083	packed-backend.c	FUNCTION_31
0x1e73	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	      1083	packed-backend.c	FUNCTION_31
0x1e7a	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	      1083	packed-backend.c	FUNCTION_31
0x1e81	    0x64488b042528	                mov rax, qword fs:[0x28]	      1083	packed-backend.c	FUNCTION_31
0x1e8a	        0x488945e8	             mov qword [rbp - 0x18], rax	      1083	packed-backend.c	FUNCTION_31
0x1e8e	            0x31c0	                            xor eax, eax	      1083	packed-backend.c	FUNCTION_31
0x1e90	    0x48c745880000	               mov qword [rbp - 0x78], 0	      1084	packed-backend.c	FUNCTION_31
0x1e98	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      1088	packed-backend.c	FUNCTION_31
0x1ea0	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      1088	packed-backend.c	FUNCTION_31
0x1ea8	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1088	packed-backend.c	FUNCTION_31
0x1eb0	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1091	packed-backend.c	FUNCTION_31	IF_1	CALL_1
0x1eb7	        0x4883c020	                           add rax, 0x20	      1091	packed-backend.c	FUNCTION_31	IF_1	CALL_1
0x1ebb	          0x4889c7	                            mov rdi, rax	      1091	packed-backend.c	FUNCTION_31	IF_1	CALL_1
0x1ebe	      0xe86ce4ffff	            call sym.is_lock_file_locked	      1091	packed-backend.c	FUNCTION_31	IF_1	CALL_1
0x1ec3	            0x85c0	                           test eax, eax	      1091	packed-backend.c	FUNCTION_31	IF_1	CALL_1
0x1ec5	            0x750f	                           jne 0x4001f16	      1091	packed-backend.c	FUNCTION_31	IF_1	CALL_1
0x1ec7	      0xbf00000000	                              mov edi, 0	      1092	packed-backend.c	FUNCTION_31	CALL_2
0x1ecc	      0xb800000000	                              mov eax, 0	      1092	packed-backend.c	FUNCTION_31	CALL_2
0x1ed1	      0xe800000000	                          call 0x4001f16	      1092	packed-backend.c	FUNCTION_31	CALL_2
0x1ed6	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1099	packed-backend.c	FUNCTION_31	CALL_3
0x1edd	        0x4883c020	                           add rax, 0x20	      1099	packed-backend.c	FUNCTION_31	CALL_3
0x1ee1	          0x4889c7	                            mov rdi, rax	      1099	packed-backend.c	FUNCTION_31	CALL_3
0x1ee4	      0xe800000000	                          call 0x4001f29	      1099	packed-backend.c	FUNCTION_31	CALL_3
0x1ee9	        0x488945a0	             mov qword [rbp - 0x60], rax	      1099	packed-backend.c	FUNCTION_31	CALL_3
0x1eed	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1100	packed-backend.c	FUNCTION_31	CALL_4
0x1ef1	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1100	packed-backend.c	FUNCTION_31	CALL_4
0x1ef5	      0xbe00000000	                              mov esi, 0	      1100	packed-backend.c	FUNCTION_31	CALL_4
0x1efa	          0x4889c7	                            mov rdi, rax	      1100	packed-backend.c	FUNCTION_31	CALL_4
0x1efd	      0xb800000000	                              mov eax, 0	      1100	packed-backend.c	FUNCTION_31	CALL_4
0x1f02	      0xe800000000	                          call 0x4001f47	      1100	packed-backend.c	FUNCTION_31	CALL_4
0x1f07	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1101	packed-backend.c	FUNCTION_31	CALL_5
0x1f0b	          0x4889c7	                            mov rdi, rax	      1101	packed-backend.c	FUNCTION_31	CALL_5
0x1f0e	      0xe800000000	                          call 0x4001f53	      1101	packed-backend.c	FUNCTION_31	CALL_5
0x1f13	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1102	packed-backend.c	FUNCTION_31	CALL_6
0x1f17	          0x4889c7	                            mov rdi, rax	      1102	packed-backend.c	FUNCTION_31	CALL_6
0x1f1a	      0xe800000000	                          call 0x4001f5f	      1102	packed-backend.c	FUNCTION_31	CALL_6
0x1f1f	          0x4889c2	                            mov rdx, rax	      1102	packed-backend.c	FUNCTION_31	CALL_6
0x1f22	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1102	packed-backend.c	FUNCTION_31	CALL_6
0x1f29	        0x48895028	             mov qword [rax + 0x28], rdx	      1102	packed-backend.c	FUNCTION_31	CALL_6
0x1f2d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1103	packed-backend.c	FUNCTION_31	IF_2
0x1f34	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1103	packed-backend.c	FUNCTION_31	IF_2
0x1f38	          0x4885c0	                           test rax, rax	      1103	packed-backend.c	FUNCTION_31	IF_2
0x1f3b	            0x7544	                           jne 0x4001fc1	      1103	packed-backend.c	FUNCTION_31	IF_2
0x1f3d	      0xe800000000	                          call 0x4001f82	      1105	packed-backend.c	FUNCTION_31	IF_2	CALL_8
0x1f42	            0x8b00	                    mov eax, dword [rax]	      1104	packed-backend.c	FUNCTION_31	IF_2	CALL_7
0x1f44	            0x89c7	                            mov edi, eax	      1104	packed-backend.c	FUNCTION_31	IF_2	CALL_7
0x1f46	      0xe800000000	                          call 0x4001f8b	      1104	packed-backend.c	FUNCTION_31	IF_2	CALL_7
0x1f4b	          0x4889c1	                            mov rcx, rax	      1104	packed-backend.c	FUNCTION_31	IF_2	CALL_7
0x1f4e	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1104	packed-backend.c	FUNCTION_31	IF_2	CALL_7
0x1f52	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1104	packed-backend.c	FUNCTION_31	IF_2	CALL_7
0x1f59	      0xbe00000000	                              mov esi, 0	      1104	packed-backend.c	FUNCTION_31	IF_2	CALL_7
0x1f5e	          0x4889c7	                            mov rdi, rax	      1104	packed-backend.c	FUNCTION_31	IF_2	CALL_7
0x1f61	      0xb800000000	                              mov eax, 0	      1104	packed-backend.c	FUNCTION_31	IF_2	CALL_7
0x1f66	      0xe800000000	                          call 0x4001fab	      1104	packed-backend.c	FUNCTION_31	IF_2	CALL_7
0x1f6b	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1106	packed-backend.c	FUNCTION_31	IF_2	CALL_9
0x1f6f	          0x4889c7	                            mov rdi, rax	      1106	packed-backend.c	FUNCTION_31	IF_2	CALL_9
0x1f72	      0xe800000000	                          call 0x4001fb7	      1106	packed-backend.c	FUNCTION_31	IF_2	CALL_9
0x1f77	      0xb8ffffffff	                     mov eax, 0xffffffff	      1107	packed-backend.c	FUNCTION_31	IF_2
0x1f7c	      0xe9d9040000	                           jmp 0x400249a	      1107	packed-backend.c	FUNCTION_31	IF_2
0x1f81	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1109	packed-backend.c	FUNCTION_31	CALL_10
0x1f85	          0x4889c7	                            mov rdi, rax	      1109	packed-backend.c	FUNCTION_31	CALL_10
0x1f88	      0xe800000000	                          call 0x4001fcd	      1109	packed-backend.c	FUNCTION_31	CALL_10
0x1f8d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1111	packed-backend.c	FUNCTION_31	CALL_11
0x1f94	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1111	packed-backend.c	FUNCTION_31	CALL_11
0x1f98	      0xbe00000000	                              mov esi, 0	      1111	packed-backend.c	FUNCTION_31	CALL_11
0x1f9d	          0x4889c7	                            mov rdi, rax	      1111	packed-backend.c	FUNCTION_31	CALL_11
0x1fa0	      0xe800000000	                          call 0x4001fe5	      1111	packed-backend.c	FUNCTION_31	CALL_11
0x1fa5	        0x488945a8	             mov qword [rbp - 0x58], rax	      1111	packed-backend.c	FUNCTION_31	CALL_11
0x1fa9	      0x48837da800	               cmp qword [rbp - 0x58], 0	      1112	packed-backend.c	FUNCTION_31	IF_3
0x1fae	            0x752f	                           jne 0x400201f	      1112	packed-backend.c	FUNCTION_31	IF_3
0x1fb0	      0xe800000000	                          call 0x4001ff5	      1114	packed-backend.c	FUNCTION_31	IF_3	CALL_13
0x1fb5	            0x8b00	                    mov eax, dword [rax]	      1113	packed-backend.c	FUNCTION_31	IF_3	CALL_12
0x1fb7	            0x89c7	                            mov edi, eax	      1113	packed-backend.c	FUNCTION_31	IF_3	CALL_12
0x1fb9	      0xe800000000	                          call 0x4001ffe	      1113	packed-backend.c	FUNCTION_31	IF_3	CALL_12
0x1fbe	          0x4889c2	                            mov rdx, rax	      1113	packed-backend.c	FUNCTION_31	IF_3	CALL_12
0x1fc1	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1113	packed-backend.c	FUNCTION_31	IF_3	CALL_12
0x1fc8	      0xbe00000000	                              mov esi, 0	      1113	packed-backend.c	FUNCTION_31	IF_3	CALL_12
0x1fcd	          0x4889c7	                            mov rdi, rax	      1113	packed-backend.c	FUNCTION_31	IF_3	CALL_12
0x1fd0	      0xb800000000	                              mov eax, 0	      1113	packed-backend.c	FUNCTION_31	IF_3	CALL_12
0x1fd5	      0xe800000000	                          call 0x400201a	      1113	packed-backend.c	FUNCTION_31	IF_3	CALL_12
0x1fda	      0xe950040000	                           jmp 0x400246f	      1115	packed-backend.c	FUNCTION_31	IF_3
0x1fdf	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1118	packed-backend.c	FUNCTION_31	IF_4	CALL_14
0x1fe3	      0xba00000000	                              mov edx, 0	      1118	packed-backend.c	FUNCTION_31	IF_4	CALL_14
0x1fe8	      0xbe00000000	                              mov esi, 0	      1118	packed-backend.c	FUNCTION_31	IF_4	CALL_14
0x1fed	          0x4889c7	                            mov rdi, rax	      1118	packed-backend.c	FUNCTION_31	IF_4	CALL_14
0x1ff0	      0xb800000000	                              mov eax, 0	      1118	packed-backend.c	FUNCTION_31	IF_4	CALL_14
0x1ff5	      0xe800000000	                          call 0x400203a	      1118	packed-backend.c	FUNCTION_31	IF_4	CALL_14
0x1ffa	            0x85c0	                           test eax, eax	      1118	packed-backend.c	FUNCTION_31	IF_4	CALL_14
0x1ffc	     0xf88e3030000	                            js 0x4002425	      1118	packed-backend.c	FUNCTION_31	IF_4	CALL_14
0x2002	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1128	packed-backend.c	FUNCTION_31	CALL_15
0x2009	      0xba01000000	                              mov edx, 1	      1128	packed-backend.c	FUNCTION_31	CALL_15
0x200e	      0xbe00000000	                              mov esi, 0	      1128	packed-backend.c	FUNCTION_31	CALL_15
0x2013	          0x4889c7	                            mov rdi, rax	      1128	packed-backend.c	FUNCTION_31	CALL_15
0x2016	      0xe88ffaffff	      call sym.packed_ref_iterator_begin	      1128	packed-backend.c	FUNCTION_31	CALL_15
0x201b	        0x48894588	             mov qword [rbp - 0x78], rax	      1128	packed-backend.c	FUNCTION_31	CALL_15
0x201f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1130	packed-backend.c	FUNCTION_31	IF_5	CALL_16
0x2023	          0x4889c7	                            mov rdi, rax	      1130	packed-backend.c	FUNCTION_31	IF_5	CALL_16
0x2026	      0xe800000000	                          call 0x400206b	      1130	packed-backend.c	FUNCTION_31	IF_5	CALL_16
0x202b	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      1130	packed-backend.c	FUNCTION_31	IF_5	CALL_16
0x2031	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 0	      1130	packed-backend.c	FUNCTION_31	IF_5	CALL_16
0x2038	            0x7408	                            je 0x4002082	      1130	packed-backend.c	FUNCTION_31	IF_5	CALL_16
0x203a	    0x48c745880000	               mov qword [rbp - 0x78], 0	      1131	packed-backend.c	FUNCTION_31	IF_5
0x2042	    0x48c745900000	               mov qword [rbp - 0x70], 0	      1133	packed-backend.c	FUNCTION_31
0x204a	      0xe9cc020000	                           jmp 0x400235b	      1135	packed-backend.c	FUNCTION_31	WHILE_1
0x204f	    0x48c745980000	               mov qword [rbp - 0x68], 0	      1136	packed-backend.c	FUNCTION_31	WHILE_1
0x2057	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1139	packed-backend.c	FUNCTION_31	WHILE_1	IF_6
0x205e	          0x8b4008	                mov eax, dword [rax + 8]	      1139	packed-backend.c	FUNCTION_31	WHILE_1	IF_6
0x2061	            0x89c0	                            mov eax, eax	      1139	packed-backend.c	FUNCTION_31	WHILE_1	IF_6
0x2063	        0x483b4590	             cmp rax, qword [rbp - 0x70]	      1139	packed-backend.c	FUNCTION_31	WHILE_1	IF_6
0x2067	            0x770c	                            ja 0x40020b5	      1139	packed-backend.c	FUNCTION_31	WHILE_1	IF_6
0x2069	    0xc7857cffffff	     mov dword [rbp - 0x84], 0xffffffff 	      1140	packed-backend.c	FUNCTION_31	WHILE_1	IF_6
0x2073	            0xeb51	                           jmp 0x4002106	      1140	packed-backend.c	FUNCTION_31	WHILE_1	IF_6
0x2075	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1142	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1
0x207c	          0x488b00	                    mov rax, qword [rax]	      1142	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1
0x207f	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1142	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1
0x2083	        0x48c1e204	                              shl rdx, 4	      1142	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1
0x2087	          0x4801d0	                            add rax, rdx	      1142	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1
0x208a	        0x488b4008	                mov rax, qword [rax + 8]	      1142	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1
0x208e	        0x48894598	             mov qword [rbp - 0x68], rax	      1142	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1
0x2092	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      1144	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1	IF_7
0x2097	            0x750c	                           jne 0x40020e5	      1144	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1	IF_7
0x2099	    0xc7857cffffff	               mov dword [rbp - 0x84], 1	      1145	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1	IF_7
0x20a3	            0xeb21	                           jmp 0x4002106	      1145	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1	IF_7
0x20a5	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1147	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1	CALL_17
0x20a9	        0x488d5050	                   lea rdx, [rax + 0x50]	      1147	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1	CALL_17
0x20ad	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1147	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1	CALL_17
0x20b1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1147	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1	CALL_17
0x20b5	          0x4889d6	                            mov rsi, rdx	      1147	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1	CALL_17
0x20b8	          0x4889c7	                            mov rdi, rax	      1147	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1	CALL_17
0x20bb	      0xe800000000	                          call 0x4002100	      1147	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1	CALL_17
0x20c0	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      1147	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1	CALL_17
0x20c6	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      1150	packed-backend.c	FUNCTION_31	WHILE_1	IF_8
0x20cd	     0xf8508010000	                           jne 0x400221b	      1150	packed-backend.c	FUNCTION_31	WHILE_1	IF_8
0x20d3	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1156	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9
0x20d7	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1156	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9
0x20da	          0x83e008	                              and eax, 8	      1156	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9
0x20dd	            0x85c0	                           test eax, eax	      1156	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9
0x20df	     0xf84a8000000	                            je 0x40021cd	      1156	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9
0x20e5	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1157	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	IF_10	CALL_18
0x20e9	        0x4883c014	                           add rax, 0x14	      1157	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	IF_10	CALL_18
0x20ed	          0x4889c7	                            mov rdi, rax	      1157	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	IF_10	CALL_18
0x20f0	      0xe875e1ffff	                    call sym.is_null_oid	      1157	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	IF_10	CALL_18
0x20f5	            0x85c0	                           test eax, eax	      1157	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	IF_10	CALL_18
0x20f7	            0x7426	                            je 0x400215f	      1157	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	IF_10	CALL_18
0x20f9	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1160	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	IF_10
0x20fd	        0x488d5050	                   lea rdx, [rax + 0x50]	      1160	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	IF_10
0x2101	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1158	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	IF_10	CALL_19
0x2108	      0xbe00000000	                              mov esi, 0	      1158	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	IF_10	CALL_19
0x210d	          0x4889c7	                            mov rdi, rax	      1158	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	IF_10	CALL_19
0x2110	      0xb800000000	                              mov eax, 0	      1158	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	IF_10	CALL_19
0x2115	      0xe800000000	                          call 0x400215a	      1158	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	IF_10	CALL_19
0x211a	      0xe910030000	                           jmp 0x400246f	      1161	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	IF_10
0x211f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1162	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_20
0x2123	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1162	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_20
0x2127	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      1162	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_20
0x212b	        0x4883c214	                           add rdx, 0x14	      1162	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_20
0x212f	          0x4889c6	                            mov rsi, rax	      1162	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_20
0x2132	          0x4889d7	                            mov rdi, rdx	      1162	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_20
0x2135	      0xe80be1ffff	                         call sym.oidcmp	      1162	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_20
0x213a	            0x85c0	                           test eax, eax	      1162	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_20
0x213c	            0x744f	                            je 0x40021cd	      1162	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_20
0x213e	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1167	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_23
0x2142	        0x4883c014	                           add rax, 0x14	      1167	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_23
0x2146	          0x4889c7	                            mov rdi, rax	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_21
0x2149	      0xe800000000	                          call 0x400218e	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_21
0x214e	          0x4889c3	                            mov rbx, rax	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_21
0x2151	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_21
0x2155	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_21
0x2159	          0x4889c7	                            mov rdi, rax	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_21
0x215c	      0xe800000000	                          call 0x40021a1	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_21
0x2161	          0x4889c1	                            mov rcx, rax	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_21
0x2164	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1165	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11
0x2168	        0x488d5050	                   lea rdx, [rax + 0x50]	      1165	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11
0x216c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_21
0x2173	          0x4989d8	                             mov r8, rbx	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_21
0x2176	      0xbe00000000	                              mov esi, 0	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_21
0x217b	          0x4889c7	                            mov rdi, rax	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_21
0x217e	      0xb800000000	                              mov eax, 0	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_21
0x2183	      0xe800000000	                          call 0x40021c8	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_21
0x2188	      0xe9a2020000	                           jmp 0x400246f	      1168	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11
0x218d	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1173	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12
0x2191	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1173	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12
0x2194	          0x83e004	                              and eax, 4	      1173	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12
0x2197	            0x85c0	                           test eax, eax	      1173	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12
0x2199	            0x742f	                            je 0x400220a	      1173	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12
0x219b	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1179	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12	IF_13	CALL_24
0x219f	          0x4889c7	                            mov rdi, rax	      1179	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12	IF_13	CALL_24
0x21a2	      0xe800000000	                          call 0x40021e7	      1179	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12	IF_13	CALL_24
0x21a7	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      1179	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12	IF_13	CALL_24
0x21ad	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 0	      1179	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12	IF_13	CALL_24
0x21b4	            0x7408	                            je 0x40021fe	      1179	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12	IF_13	CALL_24
0x21b6	    0x48c745880000	               mov qword [rbp - 0x78], 0	      1180	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12	IF_13
0x21be	    0xc7857cffffff	               mov dword [rbp - 0x84], 1	      1181	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12
0x21c8	            0xeb75	                           jmp 0x400227f	      1181	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12
0x21ca	      0x4883459001	               add qword [rbp - 0x70], 1	      1187	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	ELSE_4
0x21cf	    0xc7857cffffff	     mov dword [rbp - 0x84], 0xffffffff 	      1188	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	ELSE_4
0x21d9	            0xeb64	                           jmp 0x400227f	      1188	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	ELSE_4
0x21db	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      1190	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14
0x21e2	            0x7e5b	                           jle 0x400227f	      1190	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14
0x21e4	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1196	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15
0x21e8	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1196	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15
0x21eb	          0x83e008	                              and eax, 8	      1196	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15
0x21ee	            0x85c0	                           test eax, eax	      1196	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15
0x21f0	            0x744d	                            je 0x400227f	      1196	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15
0x21f2	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1197	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_25
0x21f6	        0x4883c014	                           add rax, 0x14	      1197	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_25
0x21fa	          0x4889c7	                            mov rdi, rax	      1197	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_25
0x21fd	      0xe868e0ffff	                    call sym.is_null_oid	      1197	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_25
0x2202	            0x85c0	                           test eax, eax	      1196	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15
0x2204	            0x7539	                           jne 0x400227f	      1196	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15
0x2206	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1201	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_27
0x220a	        0x4883c014	                           add rax, 0x14	      1201	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_27
0x220e	          0x4889c7	                            mov rdi, rax	      1198	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_26
0x2211	      0xe800000000	                          call 0x4002256	      1198	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_26
0x2216	          0x4889c1	                            mov rcx, rax	      1198	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_26
0x2219	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1200	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15
0x221d	        0x488d5050	                   lea rdx, [rax + 0x50]	      1200	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15
0x2221	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1198	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_26
0x2228	      0xbe00000000	                              mov esi, 0	      1198	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_26
0x222d	          0x4889c7	                            mov rdi, rax	      1198	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_26
0x2230	      0xb800000000	                              mov eax, 0	      1198	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_26
0x2235	      0xe800000000	                          call 0x400227a	      1198	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_26
0x223a	      0xe9f0010000	                           jmp 0x400246f	      1202	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15
0x223f	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      1206	packed-backend.c	FUNCTION_31	WHILE_1	IF_16
0x2246	            0x7970	                           jns 0x40022f8	      1206	packed-backend.c	FUNCTION_31	WHILE_1	IF_16
0x2248	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1210	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	CALL_28
0x224c	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1210	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	CALL_28
0x2250	          0x4889d6	                            mov rsi, rdx	      1210	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	CALL_28
0x2253	          0x4889c7	                            mov rdi, rax	      1210	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	CALL_28
0x2256	      0xe800000000	                          call 0x400229b	      1210	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	CALL_28
0x225b	          0x894580	             mov dword [rbp - 0x80], eax	      1210	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	CALL_28
0x225e	        0x837d8000	               cmp dword [rbp - 0x80], 0	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_29
0x2262	            0x7506	                           jne 0x40022aa	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_29
0x2264	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_29
0x2268	            0xeb05	                           jmp 0x40022af	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_29
0x226a	      0xb800000000	                              mov eax, 0	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_29
0x226f	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_29
0x2273	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_29
0x2277	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_29
0x227b	        0x488b7110	            mov rsi, qword [rcx + 0x10] 	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_29
0x227f	        0x488b7da8	             mov rdi, qword [rbp - 0x58]	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_29
0x2283	          0x4889c1	                            mov rcx, rax	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_29
0x2286	      0xe890f9ffff	             call sym.write_packed_entry	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_29
0x228b	            0x85c0	                           test eax, eax	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_29
0x228d	     0xf8555010000	                           jne 0x4002428	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_29
0x2293	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1217	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_18	CALL_30
0x2297	          0x4889c7	                            mov rdi, rax	      1217	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_18	CALL_30
0x229a	      0xe800000000	                          call 0x40022df	      1217	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_18	CALL_30
0x229f	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      1217	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_18	CALL_30
0x22a5	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 0	      1217	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_18	CALL_30
0x22ac	            0x746d	                            je 0x400235b	      1217	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_18	CALL_30
0x22ae	    0x48c745880000	               mov qword [rbp - 0x78], 0	      1218	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_18
0x22b6	            0xeb63	                           jmp 0x400235b	      1218	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_18
0x22b8	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1219	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_6	IF_19	CALL_31
0x22bc	          0x4889c7	                            mov rdi, rax	      1219	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_6	IF_19	CALL_31
0x22bf	      0xe8a6dfffff	                    call sym.is_null_oid	      1219	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_6	IF_19	CALL_31
0x22c4	            0x85c0	                           test eax, eax	      1219	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_6	IF_19	CALL_31
0x22c6	            0x7407	                            je 0x400230f	      1219	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_6	IF_19	CALL_31
0x22c8	      0x4883459001	               add qword [rbp - 0x70], 1	      1227	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_6	IF_19
0x22cd	            0xeb4c	                           jmp 0x400235b	      1227	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_6	IF_19
0x22cf	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1230	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	CALL_32
0x22d3	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1230	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	CALL_32
0x22d7	          0x4889d6	                            mov rsi, rdx	      1230	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	CALL_32
0x22da	          0x4889c7	                            mov rdi, rax	      1230	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	CALL_32
0x22dd	      0xe800000000	                          call 0x4002322	      1230	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	CALL_32
0x22e2	          0x894584	             mov dword [rbp - 0x7c], eax	      1230	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	CALL_32
0x22e5	        0x837d8400	               cmp dword [rbp - 0x7c], 0	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_33
0x22e9	            0x7506	                           jne 0x4002331	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_33
0x22eb	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_33
0x22ef	            0xeb05	                           jmp 0x4002336	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_33
0x22f1	      0xb800000000	                              mov eax, 0	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_33
0x22f6	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      1234	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20
0x22fa	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_33
0x22fe	        0x488d7150	                   lea rsi, [rcx + 0x50]	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_33
0x2302	        0x488b7da8	             mov rdi, qword [rbp - 0x58]	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_33
0x2306	          0x4889c1	                            mov rcx, rax	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_33
0x2309	      0xe80df9ffff	             call sym.write_packed_entry	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_33
0x230e	            0x85c0	                           test eax, eax	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_33
0x2310	     0xf85d5000000	                           jne 0x400242b	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_33
0x2316	      0x4883459001	               add qword [rbp - 0x70], 1	      1238	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7
0x231b	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      1135	packed-backend.c	FUNCTION_31	WHILE_1
0x2320	     0xf8529fdffff	                           jne 0x400208f	      1135	packed-backend.c	FUNCTION_31	WHILE_1
0x2326	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1135	packed-backend.c	FUNCTION_31	WHILE_1
0x232d	          0x8b4008	                mov eax, dword [rax + 8]	      1135	packed-backend.c	FUNCTION_31	WHILE_1
0x2330	            0x89c0	                            mov eax, eax	      1135	packed-backend.c	FUNCTION_31	WHILE_1
0x2332	        0x483b4590	             cmp rax, qword [rbp - 0x70]	      1135	packed-backend.c	FUNCTION_31	WHILE_1
0x2336	     0xf8713fdffff	                            ja 0x400208f	      1135	packed-backend.c	FUNCTION_31	WHILE_1
0x233c	    0x83bd78ffffff	cmp dword [rbp - 0x88], 0xffffffffffffffff	      1242	packed-backend.c	FUNCTION_31	IF_21
0x2343	            0x7419	                            je 0x400239e	      1242	packed-backend.c	FUNCTION_31	IF_21
0x2345	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1243	packed-backend.c	FUNCTION_31	IF_21	CALL_34
0x234c	      0xbe00000000	                              mov esi, 0	      1243	packed-backend.c	FUNCTION_31	IF_21	CALL_34
0x2351	          0x4889c7	                            mov rdi, rax	      1243	packed-backend.c	FUNCTION_31	IF_21	CALL_34
0x2354	      0xe861deffff	                  call sym.strbuf_addstr	      1243	packed-backend.c	FUNCTION_31	IF_21	CALL_34
0x2359	      0xe9d1000000	                           jmp 0x400246f	      1245	packed-backend.c	FUNCTION_31	IF_21
0x235e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1248	packed-backend.c	FUNCTION_31	IF_22	CALL_35
0x2365	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1248	packed-backend.c	FUNCTION_31	IF_22	CALL_35
0x2369	          0x4889c7	                            mov rdi, rax	      1248	packed-backend.c	FUNCTION_31	IF_22	CALL_35
0x236c	      0xe800000000	                          call 0x40023b1	      1248	packed-backend.c	FUNCTION_31	IF_22	CALL_35
0x2371	            0x85c0	                           test eax, eax	      1248	packed-backend.c	FUNCTION_31	IF_22	CALL_35
0x2373	            0x7469	                            je 0x400241e	      1248	packed-backend.c	FUNCTION_31	IF_22	CALL_35
0x2375	      0xe800000000	                          call 0x40023ba	      1251	packed-backend.c	FUNCTION_31	IF_22	CALL_38
0x237a	            0x8b00	                    mov eax, dword [rax]	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_36
0x237c	            0x89c7	                            mov edi, eax	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_36
0x237e	      0xe800000000	                          call 0x40023c3	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_36
0x2383	          0x4889c3	                            mov rbx, rax	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_36
0x2386	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_36
0x238d	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_36
0x2391	          0x4889c7	                            mov rdi, rax	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_36
0x2394	      0xe800000000	                          call 0x40023d9	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_36
0x2399	          0x4889c2	                            mov rdx, rax	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_36
0x239c	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_36
0x23a3	          0x4889d9	                            mov rcx, rbx	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_36
0x23a6	      0xbe00000000	                              mov esi, 0	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_36
0x23ab	          0x4889c7	                            mov rdi, rax	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_36
0x23ae	      0xb800000000	                              mov eax, 0	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_36
0x23b3	      0xe800000000	                          call 0x40023f8	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_36
0x23b8	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1252	packed-backend.c	FUNCTION_31	IF_22	CALL_39
0x23bc	          0x4889c7	                            mov rdi, rax	      1252	packed-backend.c	FUNCTION_31	IF_22	CALL_39
0x23bf	      0xe800000000	                          call 0x4002404	      1252	packed-backend.c	FUNCTION_31	IF_22	CALL_39
0x23c4	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1253	packed-backend.c	FUNCTION_31	IF_22	CALL_40
0x23cb	        0x4883c028	                           add rax, 0x28	      1253	packed-backend.c	FUNCTION_31	IF_22	CALL_40
0x23cf	          0x4889c7	                            mov rdi, rax	      1253	packed-backend.c	FUNCTION_31	IF_22	CALL_40
0x23d2	      0xe800000000	                          call 0x4002417	      1253	packed-backend.c	FUNCTION_31	IF_22	CALL_40
0x23d7	      0xb8ffffffff	                     mov eax, 0xffffffff	      1254	packed-backend.c	FUNCTION_31	IF_22
0x23dc	            0xeb7c	                           jmp 0x400249a	      1254	packed-backend.c	FUNCTION_31	IF_22
0x23de	      0xb800000000	                              mov eax, 0	      1257	packed-backend.c	FUNCTION_31
0x23e3	            0xeb75	                           jmp 0x400249a	      1257	packed-backend.c	FUNCTION_31
0x23e5	              0x90	                                     nop	      1119	packed-backend.c	FUNCTION_31	IF_4
0x23e6	            0xeb04	                           jmp 0x400242c	      1119	packed-backend.c	FUNCTION_31	IF_4
0x23e8	              0x90	                                     nop	      1215	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17
0x23e9	            0xeb01	                           jmp 0x400242c	      1215	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17
0x23eb	              0x90	                                     nop	      1236	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20
0x23ec	      0xe800000000	                          call 0x4002431	      1261	packed-backend.c	FUNCTION_31	CALL_43
0x23f1	            0x8b00	                    mov eax, dword [rax]	      1260	packed-backend.c	FUNCTION_31	CALL_41
0x23f3	            0x89c7	                            mov edi, eax	      1260	packed-backend.c	FUNCTION_31	CALL_41
0x23f5	      0xe800000000	                          call 0x400243a	      1260	packed-backend.c	FUNCTION_31	CALL_41
0x23fa	          0x4889c3	                            mov rbx, rax	      1260	packed-backend.c	FUNCTION_31	CALL_41
0x23fd	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1260	packed-backend.c	FUNCTION_31	CALL_41
0x2404	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1260	packed-backend.c	FUNCTION_31	CALL_41
0x2408	          0x4889c7	                            mov rdi, rax	      1260	packed-backend.c	FUNCTION_31	CALL_41
0x240b	      0xe800000000	                          call 0x4002450	      1260	packed-backend.c	FUNCTION_31	CALL_41
0x2410	          0x4889c2	                            mov rdx, rax	      1260	packed-backend.c	FUNCTION_31	CALL_41
0x2413	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1260	packed-backend.c	FUNCTION_31	CALL_41
0x241a	          0x4889d9	                            mov rcx, rbx	      1260	packed-backend.c	FUNCTION_31	CALL_41
0x241d	      0xbe00000000	                              mov esi, 0	      1260	packed-backend.c	FUNCTION_31	CALL_41
0x2422	          0x4889c7	                            mov rdi, rax	      1260	packed-backend.c	FUNCTION_31	CALL_41
0x2425	      0xb800000000	                              mov eax, 0	      1260	packed-backend.c	FUNCTION_31	CALL_41
0x242a	      0xe800000000	                          call 0x400246f	      1260	packed-backend.c	FUNCTION_31	CALL_41
0x242f	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      1264	packed-backend.c	FUNCTION_31	IF_23
0x2434	            0x740c	                            je 0x4002482	      1264	packed-backend.c	FUNCTION_31	IF_23
0x2436	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1265	packed-backend.c	FUNCTION_31	CALL_44
0x243a	          0x4889c7	                            mov rdi, rax	      1265	packed-backend.c	FUNCTION_31	CALL_44
0x243d	      0xe800000000	                          call 0x4002482	      1265	packed-backend.c	FUNCTION_31	CALL_44
0x2442	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1267	packed-backend.c	FUNCTION_31	CALL_45
0x2449	        0x4883c028	                           add rax, 0x28	      1267	packed-backend.c	FUNCTION_31	CALL_45
0x244d	          0x4889c7	                            mov rdi, rax	      1267	packed-backend.c	FUNCTION_31	CALL_45
0x2450	      0xe800000000	                          call 0x4002495	      1267	packed-backend.c	FUNCTION_31	CALL_45
0x2455	      0xb8ffffffff	                     mov eax, 0xffffffff	      1268	packed-backend.c	FUNCTION_31
0x245a	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      1269	packed-backend.c	FUNCTION_31
0x245e	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1269	packed-backend.c	FUNCTION_31
0x2467	            0x7405	                            je 0x40024ae	      1269	packed-backend.c	FUNCTION_31
0x2469	      0xe800000000	                          call 0x40024ae	      1269	packed-backend.c	FUNCTION_31
0x246e	    0x4881c4a80000	                           add rsp, 0xa8	      1269	packed-backend.c	FUNCTION_31
0x2475	              0x5b	                                 pop rbx	      1269	packed-backend.c	FUNCTION_31
0x2476	              0x5d	                                 pop rbp	      1269	packed-backend.c	FUNCTION_31
0x2477	              0xc3	                                     ret	      1269	packed-backend.c	FUNCTION_31
packed_ref_iterator_abort	functions,0:IF,0:DO,0:FOR,0:WHILE,0:CALL,3:ELSE,0:SWITCH,0	21
0x1a5e	              0x55	                                push rbp	       895	packed-backend.c	FUNCTION_24
0x1a5f	          0x4889e5	                            mov rbp, rsp	       895	packed-backend.c	FUNCTION_24
0x1a62	        0x4883ec20	                           sub rsp, 0x20	       895	packed-backend.c	FUNCTION_24
0x1a66	        0x48897de8	             mov qword [rbp - 0x18], rdi	       895	packed-backend.c	FUNCTION_24
0x1a6a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       896	packed-backend.c	FUNCTION_24
0x1a6e	        0x488945f8	                mov qword [rbp - 8], rax	       896	packed-backend.c	FUNCTION_24
0x1a72	    0xc745f4ffffff	      mov dword [rbp - 0xc], 0xffffffff 	       898	packed-backend.c	FUNCTION_24
0x1a79	        0x488b45f8	                mov rax, qword [rbp - 8]	       900	packed-backend.c	FUNCTION_24	CALL_1
0x1a7d	        0x4883c068	                           add rax, 0x68	       900	packed-backend.c	FUNCTION_24	CALL_1
0x1a81	          0x4889c7	                            mov rdi, rax	       900	packed-backend.c	FUNCTION_24	CALL_1
0x1a84	      0xe800000000	                          call 0x4001ac9	       900	packed-backend.c	FUNCTION_24	CALL_1
0x1a89	        0x488b45f8	                mov rax, qword [rbp - 8]	       901	packed-backend.c	FUNCTION_24	CALL_2
0x1a8d	        0x488b4028	            mov rax, qword [rax + 0x28] 	       901	packed-backend.c	FUNCTION_24	CALL_2
0x1a91	          0x4889c7	                            mov rdi, rax	       901	packed-backend.c	FUNCTION_24	CALL_2
0x1a94	      0xe8bae9ffff	               call sym.release_snapshot	       901	packed-backend.c	FUNCTION_24	CALL_2
0x1a99	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       902	packed-backend.c	FUNCTION_24	CALL_3
0x1a9d	          0x4889c7	                            mov rdi, rax	       902	packed-backend.c	FUNCTION_24	CALL_3
0x1aa0	      0xe800000000	                          call 0x4001ae5	       902	packed-backend.c	FUNCTION_24	CALL_3
0x1aa5	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       903	packed-backend.c	FUNCTION_24
0x1aa8	              0xc9	                                   leave	       904	packed-backend.c	FUNCTION_24
0x1aa9	              0xc3	                                     ret	       904	packed-backend.c	FUNCTION_24
