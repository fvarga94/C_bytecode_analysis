strbuf_addstr	DO,0:ELSE,0:FOR,0:functions,0:WHILE,0:IF,0:CALL,2:SWITCH,0	17
0x126	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_5
0x127	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_5
0x12a	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_5
0x12e	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_5
0x132	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_5
0x136	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_5	CALL_2
0x13a	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x13d	      0xe800000000	                          call 0x4000182	       279	strbuf.h	FUNCTION_5	CALL_2
0x142	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x145	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_5	CALL_2
0x149	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_5	CALL_2
0x14d	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_5	CALL_2
0x150	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x153	      0xe800000000	                          call 0x4000198	       279	strbuf.h	FUNCTION_5	CALL_2
0x158	              0x90	                                     nop	       280	strbuf.h	FUNCTION_5
0x159	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_5
0x15a	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_5
_	DO,0:ELSE,0:FOR,0:functions,0:WHILE,0:IF,1:CALL,2:SWITCH,0	15
0x15b	              0x55	                                push rbp	        51	gettext.h	FUNCTION_14
0x15c	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_14
0x15f	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_14
0x163	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_14
0x167	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_14	IF_1
0x16b	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_14	IF_1
0x16e	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_14	IF_1
0x170	            0x7507	                           jne 0x40001b9	        52	gettext.h	FUNCTION_14	IF_1
0x172	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_14	IF_1
0x177	            0xeb0c	                           jmp 0x40001c5	        53	gettext.h	FUNCTION_14	IF_1
0x179	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_14	CALL_2
0x17d	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_14	CALL_2
0x180	      0xe800000000	                          call 0x40001c5	        54	gettext.h	FUNCTION_14	CALL_2
0x185	              0xc9	                                   leave	        55	gettext.h	FUNCTION_14
0x186	              0xc3	                                     ret	        55	gettext.h	FUNCTION_14
sane_qsort	DO,0:ELSE,0:FOR,0:functions,0:WHILE,0:IF,1:CALL,1:SWITCH,0	18
0x52	              0x55	                                push rbp	      1047	git-compat-util.h	FUNCTION_40
0x53	          0x4889e5	                            mov rbp, rsp	      1047	git-compat-util.h	FUNCTION_40
0x56	        0x4883ec20	                           sub rsp, 0x20	      1047	git-compat-util.h	FUNCTION_40
0x5a	        0x48897df8	                mov qword [rbp - 8], rdi	      1047	git-compat-util.h	FUNCTION_40
0x5e	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1047	git-compat-util.h	FUNCTION_40
0x62	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1047	git-compat-util.h	FUNCTION_40
0x66	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1047	git-compat-util.h	FUNCTION_40
0x6a	      0x48837df001	               cmp qword [rbp - 0x10], 1	      1048	git-compat-util.h	FUNCTION_40	IF_1
0x6f	            0x7618	                           jbe 0x40000c9	      1048	git-compat-util.h	FUNCTION_40	IF_1
0x71	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1049	git-compat-util.h	FUNCTION_40	CALL_1
0x75	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1049	git-compat-util.h	FUNCTION_40	CALL_1
0x79	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1049	git-compat-util.h	FUNCTION_40	CALL_1
0x7d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1049	git-compat-util.h	FUNCTION_40	CALL_1
0x81	          0x4889c7	                            mov rdi, rax	      1049	git-compat-util.h	FUNCTION_40	CALL_1
0x84	      0xe800000000	                          call 0x40000c9	      1049	git-compat-util.h	FUNCTION_40	CALL_1
0x89	              0x90	                                     nop	      1050	git-compat-util.h	FUNCTION_40
0x8a	              0xc9	                                   leave	      1050	git-compat-util.h	FUNCTION_40
0x8b	              0xc3	                                     ret	      1050	git-compat-util.h	FUNCTION_40
st_mult	DO,0:ELSE,0:FOR,0:functions,0:WHILE,0:IF,1:CALL,2:SWITCH,0	22
0x0	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_30
0x1	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_30
0x4	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_30
0x8	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_30
0xc	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_30
0x10	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_30	IF_1	CALL_1
0x15	            0x7430	                            je 0x4000087	       795	git-compat-util.h	FUNCTION_30	IF_1	CALL_1
0x17	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_30	IF_1	CALL_1
0x1e	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_30	IF_1	CALL_1
0x23	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_30	IF_1	CALL_1
0x27	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_30	IF_1	CALL_1
0x2b	            0x731a	                           jae 0x4000087	       795	git-compat-util.h	FUNCTION_30	IF_1	CALL_1
0x2d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_30	IF_1	CALL_2
0x31	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_30	IF_1	CALL_2
0x35	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_30	IF_1	CALL_2
0x38	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_30	IF_1	CALL_2
0x3d	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_30	IF_1	CALL_2
0x42	      0xe800000000	                          call 0x4000087	       796	git-compat-util.h	FUNCTION_30	IF_1	CALL_2
0x47	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_30
0x4b	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_30
0x50	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_30
0x51	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_30
pair_pathtwo	DO,0:ELSE,0:FOR,0:functions,0:WHILE,0:IF,0:CALL,0:SWITCH,0	10
0x562	              0x55	                                push rbp	       108	diffcore-order.c	FUNCTION_47
0x563	          0x4889e5	                            mov rbp, rsp	       108	diffcore-order.c	FUNCTION_47
0x566	        0x48897de8	             mov qword [rbp - 0x18], rdi	       108	diffcore-order.c	FUNCTION_47
0x56a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       109	diffcore-order.c	FUNCTION_47
0x56e	        0x488945f8	                mov qword [rbp - 8], rax	       109	diffcore-order.c	FUNCTION_47
0x572	        0x488b45f8	                mov rax, qword [rbp - 8]	       111	diffcore-order.c	FUNCTION_47
0x576	        0x488b4008	                mov rax, qword [rax + 8]	       111	diffcore-order.c	FUNCTION_47
0x57a	        0x488b4018	            mov rax, qword [rax + 0x18] 	       111	diffcore-order.c	FUNCTION_47
0x57e	              0x5d	                                 pop rbp	       112	diffcore-order.c	FUNCTION_47
0x57f	              0xc3	                                     ret	       112	diffcore-order.c	FUNCTION_47
compare_objs_order	DO,0:ELSE,0:FOR,0:functions,0:WHILE,0:IF,1:CALL,0:SWITCH,0	29
0x44c	              0x55	                                push rbp	        82	diffcore-order.c	FUNCTION_45
0x44d	          0x4889e5	                            mov rbp, rsp	        82	diffcore-order.c	FUNCTION_45
0x450	        0x48897de8	             mov qword [rbp - 0x18], rdi	        82	diffcore-order.c	FUNCTION_45
0x454	        0x488975e0	             mov qword [rbp - 0x20], rsi	        82	diffcore-order.c	FUNCTION_45
0x458	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        84	diffcore-order.c	FUNCTION_45
0x45c	        0x488945f0	             mov qword [rbp - 0x10], rax	        84	diffcore-order.c	FUNCTION_45
0x460	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        85	diffcore-order.c	FUNCTION_45
0x464	        0x488945f8	                mov qword [rbp - 8], rax	        85	diffcore-order.c	FUNCTION_45
0x468	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        86	diffcore-order.c	FUNCTION_45	IF_1
0x46c	          0x8b500c	              mov edx, dword [rax + 0xc]	        86	diffcore-order.c	FUNCTION_45	IF_1
0x46f	        0x488b45f8	                mov rax, qword [rbp - 8]	        86	diffcore-order.c	FUNCTION_45	IF_1
0x473	          0x8b400c	              mov eax, dword [rax + 0xc]	        86	diffcore-order.c	FUNCTION_45	IF_1
0x476	            0x39c2	                            cmp edx, eax	        86	diffcore-order.c	FUNCTION_45	IF_1
0x478	            0x7414	                            je 0x40004ce	        86	diffcore-order.c	FUNCTION_45	IF_1
0x47a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        87	diffcore-order.c	FUNCTION_45	IF_1
0x47e	          0x8b500c	              mov edx, dword [rax + 0xc]	        87	diffcore-order.c	FUNCTION_45	IF_1
0x481	        0x488b45f8	                mov rax, qword [rbp - 8]	        87	diffcore-order.c	FUNCTION_45	IF_1
0x485	          0x8b400c	              mov eax, dword [rax + 0xc]	        87	diffcore-order.c	FUNCTION_45	IF_1
0x488	            0x29c2	                            sub edx, eax	        87	diffcore-order.c	FUNCTION_45	IF_1
0x48a	            0x89d0	                            mov eax, edx	        87	diffcore-order.c	FUNCTION_45	IF_1
0x48c	            0xeb12	                           jmp 0x40004e0	        87	diffcore-order.c	FUNCTION_45	IF_1
0x48e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        88	diffcore-order.c	FUNCTION_45
0x492	          0x8b5008	                mov edx, dword [rax + 8]	        88	diffcore-order.c	FUNCTION_45
0x495	        0x488b45f8	                mov rax, qword [rbp - 8]	        88	diffcore-order.c	FUNCTION_45
0x499	          0x8b4008	                mov eax, dword [rax + 8]	        88	diffcore-order.c	FUNCTION_45
0x49c	            0x29c2	                            sub edx, eax	        88	diffcore-order.c	FUNCTION_45
0x49e	            0x89d0	                            mov eax, edx	        88	diffcore-order.c	FUNCTION_45
0x4a0	              0x5d	                                 pop rbp	        89	diffcore-order.c	FUNCTION_45
0x4a1	              0xc3	                                     ret	        89	diffcore-order.c	FUNCTION_45
order_objects	DO,0:ELSE,0:FOR,1:functions,0:WHILE,0:IF,1:CALL,4:SWITCH,0	59
0x4a2	              0x55	                                push rbp	        93	diffcore-order.c	FUNCTION_46
0x4a3	          0x4889e5	                            mov rbp, rsp	        93	diffcore-order.c	FUNCTION_46
0x4a6	              0x53	                                push rbx	        93	diffcore-order.c	FUNCTION_46
0x4a7	        0x4883ec38	                           sub rsp, 0x38	        93	diffcore-order.c	FUNCTION_46
0x4ab	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        93	diffcore-order.c	FUNCTION_46
0x4af	        0x488975d0	             mov qword [rbp - 0x30], rsi	        93	diffcore-order.c	FUNCTION_46
0x4b3	        0x488955c8	             mov qword [rbp - 0x38], rdx	        93	diffcore-order.c	FUNCTION_46
0x4b7	          0x894dc4	             mov dword [rbp - 0x3c], ecx	        93	diffcore-order.c	FUNCTION_46
0x4ba	        0x837dc400	               cmp dword [rbp - 0x3c], 0	        96	diffcore-order.c	FUNCTION_46	IF_1
0x4be	     0xf8496000000	                            je 0x400059a	        96	diffcore-order.c	FUNCTION_46	IF_1
0x4c4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        99	diffcore-order.c	FUNCTION_46	CALL_1
0x4c8	          0x4889c7	                            mov rdi, rax	        99	diffcore-order.c	FUNCTION_46	CALL_1
0x4cb	      0xe8b7fcffff	                  call sym.prepare_order	        99	diffcore-order.c	FUNCTION_46	CALL_1
0x4d0	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       100	diffcore-order.c	FUNCTION_46	FOR_1
0x4d7	            0xeb5b	                           jmp 0x4000574	       100	diffcore-order.c	FUNCTION_46	FOR_1
0x4d9	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       101	diffcore-order.c	FUNCTION_46	FOR_1
0x4dc	            0x4898	                                    cdqe	       101	diffcore-order.c	FUNCTION_46	FOR_1
0x4de	        0x48c1e004	                              shl rax, 4	       101	diffcore-order.c	FUNCTION_46	FOR_1
0x4e2	          0x4889c2	                            mov rdx, rax	       101	diffcore-order.c	FUNCTION_46	FOR_1
0x4e5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       101	diffcore-order.c	FUNCTION_46	FOR_1
0x4e9	          0x4801c2	                            add rdx, rax	       101	diffcore-order.c	FUNCTION_46	FOR_1
0x4ec	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       101	diffcore-order.c	FUNCTION_46	FOR_1
0x4ef	          0x894208	                mov dword [rdx + 8], eax	       101	diffcore-order.c	FUNCTION_46	FOR_1
0x4f2	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       102	diffcore-order.c	FUNCTION_46	FOR_1	CALL_3
0x4f5	            0x4898	                                    cdqe	       102	diffcore-order.c	FUNCTION_46	FOR_1	CALL_3
0x4f7	        0x48c1e004	                              shl rax, 4	       102	diffcore-order.c	FUNCTION_46	FOR_1	CALL_3
0x4fb	          0x4889c2	                            mov rdx, rax	       102	diffcore-order.c	FUNCTION_46	FOR_1	CALL_3
0x4fe	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       102	diffcore-order.c	FUNCTION_46	FOR_1	CALL_3
0x502	        0x488d1c02	                    lea rbx, [rdx + rax]	       102	diffcore-order.c	FUNCTION_46	FOR_1	CALL_3
0x506	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       102	diffcore-order.c	FUNCTION_46	FOR_1	CALL_3
0x509	            0x4898	                                    cdqe	       102	diffcore-order.c	FUNCTION_46	FOR_1	CALL_3
0x50b	        0x48c1e004	                              shl rax, 4	       102	diffcore-order.c	FUNCTION_46	FOR_1	CALL_3
0x50f	          0x4889c2	                            mov rdx, rax	       102	diffcore-order.c	FUNCTION_46	FOR_1	CALL_3
0x512	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       102	diffcore-order.c	FUNCTION_46	FOR_1	CALL_3
0x516	          0x4801d0	                            add rax, rdx	       102	diffcore-order.c	FUNCTION_46	FOR_1	CALL_3
0x519	          0x488b10	                    mov rdx, qword [rax]	       102	diffcore-order.c	FUNCTION_46	FOR_1	CALL_3
0x51c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       102	diffcore-order.c	FUNCTION_46	FOR_1	CALL_3
0x520	          0x4889d7	                            mov rdi, rdx	       102	diffcore-order.c	FUNCTION_46	FOR_1	CALL_3
0x523	            0xffd0	                                call rax	       102	diffcore-order.c	FUNCTION_46	FOR_1	CALL_3
0x525	          0x4889c7	                            mov rdi, rax	       102	diffcore-order.c	FUNCTION_46	FOR_1	CALL_3
0x528	      0xe85cfeffff	                    call sym.match_order	       102	diffcore-order.c	FUNCTION_46	FOR_1	CALL_3
0x52d	          0x89430c	              mov dword [rbx + 0xc], eax	       102	diffcore-order.c	FUNCTION_46	FOR_1	CALL_3
0x530	        0x8345ec01	               add dword [rbp - 0x14], 1	       100	diffcore-order.c	FUNCTION_46	FOR_1
0x534	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       100	diffcore-order.c	FUNCTION_46	FOR_1
0x537	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	       100	diffcore-order.c	FUNCTION_46	FOR_1
0x53a	            0x7c9d	                            jl 0x4000519	       100	diffcore-order.c	FUNCTION_46	FOR_1
0x53c	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       104	diffcore-order.c	FUNCTION_46	CALL_4
0x53f	          0x4863f0	                         movsxd rsi, eax	       104	diffcore-order.c	FUNCTION_46	CALL_4
0x542	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       104	diffcore-order.c	FUNCTION_46	CALL_4
0x546	      0xb900000000	                              mov ecx, 0	       104	diffcore-order.c	FUNCTION_46	CALL_4
0x54b	      0xba10000000	                           mov edx, 0x10	       104	diffcore-order.c	FUNCTION_46	CALL_4
0x550	          0x4889c7	                            mov rdi, rax	       104	diffcore-order.c	FUNCTION_46	CALL_4
0x553	      0xe8fafaffff	                     call sym.sane_qsort	       104	diffcore-order.c	FUNCTION_46	CALL_4
0x558	            0xeb01	                           jmp 0x400059b	       104	diffcore-order.c	FUNCTION_46	CALL_4
0x55a	              0x90	                                     nop	        97	diffcore-order.c	FUNCTION_46	IF_1
0x55b	        0x4883c438	                           add rsp, 0x38	       105	diffcore-order.c	FUNCTION_46
0x55f	              0x5b	                                 pop rbx	       105	diffcore-order.c	FUNCTION_46
0x560	              0x5d	                                 pop rbp	       105	diffcore-order.c	FUNCTION_46
0x561	              0xc3	                                     ret	       105	diffcore-order.c	FUNCTION_46
prepare_order	DO,0:ELSE,3:FOR,2:functions,0:WHILE,1:IF,7:CALL,6:SWITCH,0	133
0x187	              0x55	                                push rbp	        12	diffcore-order.c	FUNCTION_43
0x188	          0x4889e5	                            mov rbp, rsp	        12	diffcore-order.c	FUNCTION_43
0x18b	              0x53	                                push rbx	        12	diffcore-order.c	FUNCTION_43
0x18c	        0x4883ec68	                           sub rsp, 0x68	        12	diffcore-order.c	FUNCTION_43
0x190	        0x48897d98	             mov qword [rbp - 0x68], rdi	        12	diffcore-order.c	FUNCTION_43
0x194	    0x64488b042528	                mov rax, qword fs:[0x28]	        12	diffcore-order.c	FUNCTION_43
0x19d	        0x488945e8	             mov qword [rbp - 0x18], rax	        12	diffcore-order.c	FUNCTION_43
0x1a1	            0x31c0	                            xor eax, eax	        12	diffcore-order.c	FUNCTION_43
0x1a3	    0x48c745d00000	               mov qword [rbp - 0x30], 0	        14	diffcore-order.c	FUNCTION_43
0x1ab	    0x48c745d80000	               mov qword [rbp - 0x28], 0	        14	diffcore-order.c	FUNCTION_43
0x1b3	    0x48c745e00000	               mov qword [rbp - 0x20], 0	        14	diffcore-order.c	FUNCTION_43
0x1bb	    0x488b05000000	            mov rax, qword [0x04000202] 	        19	diffcore-order.c	FUNCTION_43	IF_1
0x1c2	          0x4885c0	                           test rax, rax	        19	diffcore-order.c	FUNCTION_43	IF_1
0x1c5	     0xf85a2010000	                           jne 0x40003ad	        19	diffcore-order.c	FUNCTION_43	IF_1
0x1cb	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	        22	diffcore-order.c	FUNCTION_43	CALL_1
0x1cf	        0x488d45d0	                   lea rax, [rbp - 0x30]	        22	diffcore-order.c	FUNCTION_43	CALL_1
0x1d3	      0xba00000000	                              mov edx, 0	        22	diffcore-order.c	FUNCTION_43	CALL_1
0x1d8	          0x4889ce	                            mov rsi, rcx	        22	diffcore-order.c	FUNCTION_43	CALL_1
0x1db	          0x4889c7	                            mov rdi, rax	        22	diffcore-order.c	FUNCTION_43	CALL_1
0x1de	      0xe800000000	                          call 0x4000223	        22	diffcore-order.c	FUNCTION_43	CALL_1
0x1e3	        0x488945b8	             mov qword [rbp - 0x48], rax	        22	diffcore-order.c	FUNCTION_43	CALL_1
0x1e7	      0x48837db800	               cmp qword [rbp - 0x48], 0	        23	diffcore-order.c	FUNCTION_43	IF_2
0x1ec	            0x7921	                           jns 0x400024f	        23	diffcore-order.c	FUNCTION_43	IF_2
0x1ee	      0xbf00000000	                              mov edi, 0	        24	diffcore-order.c	FUNCTION_43	CALL_3
0x1f3	      0xe863ffffff	                               call sym.	        24	diffcore-order.c	FUNCTION_43	CALL_3
0x1f8	          0x4889c2	                            mov rdx, rax	        24	diffcore-order.c	FUNCTION_43	CALL_3
0x1fb	        0x488b4598	             mov rax, qword [rbp - 0x68]	        24	diffcore-order.c	FUNCTION_43	CALL_3
0x1ff	          0x4889c6	                            mov rsi, rax	        24	diffcore-order.c	FUNCTION_43	CALL_3
0x202	          0x4889d7	                            mov rdi, rdx	        24	diffcore-order.c	FUNCTION_43	CALL_3
0x205	      0xb800000000	                              mov eax, 0	        24	diffcore-order.c	FUNCTION_43	CALL_3
0x20a	      0xe800000000	                          call 0x400024f	        24	diffcore-order.c	FUNCTION_43	CALL_3
0x20f	        0x488d45d0	                   lea rax, [rbp - 0x30]	        25	diffcore-order.c	FUNCTION_43	CALL_4
0x213	      0xbe00000000	                              mov esi, 0	        25	diffcore-order.c	FUNCTION_43	CALL_4
0x218	          0x4889c7	                            mov rdi, rax	        25	diffcore-order.c	FUNCTION_43	CALL_4
0x21b	      0xe800000000	                          call 0x4000260	        25	diffcore-order.c	FUNCTION_43	CALL_4
0x220	        0x488945c0	             mov qword [rbp - 0x40], rax	        25	diffcore-order.c	FUNCTION_43	CALL_4
0x224	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	        26	diffcore-order.c	FUNCTION_43
0x228	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        26	diffcore-order.c	FUNCTION_43
0x22c	          0x4801d0	                            add rax, rdx	        26	diffcore-order.c	FUNCTION_43
0x22f	        0x488945c8	             mov qword [rbp - 0x38], rax	        26	diffcore-order.c	FUNCTION_43
0x233	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	        28	diffcore-order.c	FUNCTION_43	FOR_1
0x23a	      0xe922010000	                           jmp 0x40003a1	        28	diffcore-order.c	FUNCTION_43	FOR_1
0x23f	    0xc745a0000000	               mov dword [rbp - 0x60], 0	        29	diffcore-order.c	FUNCTION_43	FOR_1
0x246	        0x488b45c0	             mov rax, qword [rbp - 0x40]	        30	diffcore-order.c	FUNCTION_43	FOR_1
0x24a	        0x488945a8	             mov qword [rbp - 0x58], rax	        30	diffcore-order.c	FUNCTION_43	FOR_1
0x24e	      0xe9cc000000	                           jmp 0x400035f	        31	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1
0x253	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        33	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	FOR_2
0x257	        0x488945b0	             mov qword [rbp - 0x50], rax	        33	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	FOR_2
0x25b	            0xeb05	                           jmp 0x40002a2	        33	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	FOR_2
0x25d	      0x488345b001	               add qword [rbp - 0x50], 1	        33	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	FOR_2
0x262	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        33	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	FOR_2
0x266	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	        33	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	FOR_2
0x26a	            0x730b	                           jae 0x40002b7	        33	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	FOR_2
0x26c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        33	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	FOR_2
0x270	           0xfb600	                   movzx eax, byte [rax]	        33	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	FOR_2
0x273	            0x3c0a	                             cmp al, 0xa	        33	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	FOR_2
0x275	            0x75e6	                           jne 0x400029d	        33	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	FOR_2
0x277	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        36	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	IF_3
0x27b	           0xfb600	                   movzx eax, byte [rax]	        36	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	IF_3
0x27e	            0x3c0a	                             cmp al, 0xa	        36	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	IF_3
0x280	     0xf8482000000	                            je 0x4000348	        36	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	IF_3
0x286	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        36	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	IF_3
0x28a	           0xfb600	                   movzx eax, byte [rax]	        36	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	IF_3
0x28d	            0x3c23	                            cmp al, 0x23	        36	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	IF_3
0x28f	            0x7477	                            je 0x4000348	        36	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	IF_3
0x291	        0x837da400	               cmp dword [rbp - 0x5c], 0	        38	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	ELSE_1	IF_4
0x295	            0x7506	                           jne 0x40002dd	        38	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	ELSE_1	IF_4
0x297	        0x8345a001	               add dword [rbp - 0x60], 1	        39	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	ELSE_1	IF_4
0x29b	            0xeb6b	                           jmp 0x4000348	        39	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	ELSE_1	IF_4
0x29d	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        41	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	ELSE_2	IF_5
0x2a1	           0xfb600	                   movzx eax, byte [rax]	        41	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	ELSE_2	IF_5
0x2a4	            0x3c0a	                             cmp al, 0xa	        41	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	ELSE_2	IF_5
0x2a6	            0x7524	                           jne 0x400030c	        41	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	ELSE_2	IF_5
0x2a8	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        42	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	ELSE_2	IF_5
0x2ac	          0xc60000	                       mov byte [rax], 0	        42	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	ELSE_2	IF_5
0x2af	    0x488b05000000	            mov rax, qword [0x040002f6] 	        43	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	ELSE_2	IF_5
0x2b6	          0x8b55a0	             mov edx, dword [rbp - 0x60]	        43	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	ELSE_2	IF_5
0x2b9	          0x4863d2	                         movsxd rdx, edx	        43	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	ELSE_2	IF_5
0x2bc	        0x48c1e203	                              shl rdx, 3	        43	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	ELSE_2	IF_5
0x2c0	          0x4801c2	                            add rdx, rax	        43	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	ELSE_2	IF_5
0x2c3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        43	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	ELSE_2	IF_5
0x2c7	          0x488902	                    mov qword [rdx], rax	        43	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	ELSE_2	IF_5
0x2ca	            0xeb38	                           jmp 0x4000344	        43	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	ELSE_2	IF_5
0x2cc	    0x488b05000000	            mov rax, qword [0x04000313] 	        45	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x2d3	          0x8b55a0	             mov edx, dword [rbp - 0x60]	        45	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x2d6	          0x4863d2	                         movsxd rdx, edx	        45	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x2d9	        0x48c1e203	                              shl rdx, 3	        45	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x2dd	        0x488d1c10	                    lea rbx, [rax + rdx]	        45	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x2e1	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	        45	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x2e5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        45	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x2e9	          0x4829c2	                            sub rdx, rax	        45	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x2ec	          0x4889d0	                            mov rax, rdx	        45	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x2ef	          0x4889c2	                            mov rdx, rax	        45	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x2f2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        45	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x2f6	          0x4889d6	                            mov rsi, rdx	        45	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x2f9	          0x4889c7	                            mov rdi, rax	        45	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x2fc	      0xe800000000	                          call 0x4000341	        45	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x301	          0x488903	                    mov qword [rbx], rax	        45	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	ELSE_2	ELSE_3	CALL_5
0x304	        0x8345a001	               add dword [rbp - 0x60], 1	        47	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	ELSE_2
0x308	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        49	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	IF_6
0x30c	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	        49	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	IF_6
0x310	            0x7305	                           jae 0x4000357	        49	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	IF_6
0x312	      0x488345b001	               add qword [rbp - 0x50], 1	        50	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1	IF_6
0x317	        0x488b45b0	             mov rax, qword [rbp - 0x50]	        51	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1
0x31b	        0x488945a8	             mov qword [rbp - 0x58], rax	        51	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1
0x31f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        31	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1
0x323	        0x483b45c8	             cmp rax, qword [rbp - 0x38]	        31	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1
0x327	     0xf8226ffffff	                            jb 0x4000293	        31	diffcore-order.c	FUNCTION_43	FOR_1	WHILE_1
0x32d	        0x837da400	               cmp dword [rbp - 0x5c], 0	        53	diffcore-order.c	FUNCTION_43	FOR_1	IF_7
0x331	            0x752a	                           jne 0x400039d	        53	diffcore-order.c	FUNCTION_43	FOR_1	IF_7
0x333	          0x8b45a0	             mov eax, dword [rbp - 0x60]	        54	diffcore-order.c	FUNCTION_43	FOR_1	IF_7
0x336	    0x890500000000	            mov dword [0x0400037c], eax 	        54	diffcore-order.c	FUNCTION_43	FOR_1	IF_7
0x33c	          0x8b45a0	             mov eax, dword [rbp - 0x60]	        55	diffcore-order.c	FUNCTION_43	FOR_1	IF_7	CALL_6
0x33f	            0x4898	                                    cdqe	        55	diffcore-order.c	FUNCTION_43	FOR_1	IF_7	CALL_6
0x341	          0x4889c6	                            mov rsi, rax	        55	diffcore-order.c	FUNCTION_43	FOR_1	IF_7	CALL_6
0x344	      0xbf08000000	                              mov edi, 8	        55	diffcore-order.c	FUNCTION_43	FOR_1	IF_7	CALL_6
0x349	      0xe8b2fcffff	                        call sym.st_mult	        55	diffcore-order.c	FUNCTION_43	FOR_1	IF_7	CALL_6
0x34e	          0x4889c7	                            mov rdi, rax	        55	diffcore-order.c	FUNCTION_43	FOR_1	IF_7	CALL_6
0x351	      0xe800000000	                          call 0x4000396	        55	diffcore-order.c	FUNCTION_43	FOR_1	IF_7	CALL_6
0x356	    0x488905000000	            mov qword [0x0400039d], rax 	        55	diffcore-order.c	FUNCTION_43	FOR_1	IF_7	CALL_6
0x35d	        0x8345a401	               add dword [rbp - 0x5c], 1	        28	diffcore-order.c	FUNCTION_43	FOR_1
0x361	        0x837da401	               cmp dword [rbp - 0x5c], 1	        28	diffcore-order.c	FUNCTION_43	FOR_1
0x365	     0xf8ed4feffff	                           jle 0x400027f	        28	diffcore-order.c	FUNCTION_43	FOR_1
0x36b	            0xeb01	                           jmp 0x40003ae	        28	diffcore-order.c	FUNCTION_43	FOR_1
0x36d	              0x90	                                     nop	        20	diffcore-order.c	FUNCTION_43	IF_1
0x36e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        58	diffcore-order.c	FUNCTION_43
0x372	    0x644833042528	                xor rax, qword fs:[0x28]	        58	diffcore-order.c	FUNCTION_43
0x37b	            0x7405	                            je 0x40003c2	        58	diffcore-order.c	FUNCTION_43
0x37d	      0xe800000000	                          call 0x40003c2	        58	diffcore-order.c	FUNCTION_43
0x382	        0x4883c468	                           add rsp, 0x68	        58	diffcore-order.c	FUNCTION_43
0x386	              0x5b	                                 pop rbx	        58	diffcore-order.c	FUNCTION_43
0x387	              0x5d	                                 pop rbp	        58	diffcore-order.c	FUNCTION_43
0x388	              0xc3	                                     ret	        58	diffcore-order.c	FUNCTION_43
strbuf_setlen	DO,0:ELSE,1:FOR,0:functions,0:WHILE,0:IF,2:CALL,2:SWITCH,0	43
0x8c	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_3
0x8d	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_3
0x90	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_3
0x94	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_3
0x98	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_3
0x9c	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_3	IF_1
0xa0	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_3	IF_1
0xa3	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_3	IF_1
0xa6	            0x740d	                            je 0x40000f5	       162	strbuf.h	FUNCTION_3	IF_1
0xa8	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_3	IF_1
0xac	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_3	IF_1
0xaf	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_3	IF_1
0xb3	            0xeb05	                           jmp 0x40000fa	       162	strbuf.h	FUNCTION_3	IF_1
0xb5	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_3	IF_1
0xba	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_3	IF_1
0xbe	            0x730f	                           jae 0x400010f	       162	strbuf.h	FUNCTION_3	IF_1
0xc0	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_3	CALL_1
0xc5	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_3	CALL_1
0xca	      0xe800000000	                          call 0x400010f	       163	strbuf.h	FUNCTION_3	CALL_1
0xcf	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_3
0xd3	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_3
0xd7	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_3
0xdb	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_3	IF_2
0xdf	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_3	IF_2
0xe3	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_3	IF_2
0xe9	            0x7414	                            je 0x400013f	       165	strbuf.h	FUNCTION_3	IF_2
0xeb	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_3	IF_2
0xef	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_3	IF_2
0xf3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_3	IF_2
0xf7	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_3	IF_2
0xfa	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_3	IF_2
0xfd	            0xeb24	                           jmp 0x4000163	       169	strbuf.h	FUNCTION_3
0xff	     0xfb605000000	           movzx eax, byte [0x04000146] 	       168	strbuf.h	FUNCTION_3	CALL_2
0x106	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_3	CALL_2
0x108	            0x7419	                            je 0x4000163	       168	strbuf.h	FUNCTION_3	CALL_2
0x10a	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0x10f	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_3	CALL_2
0x114	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0x119	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0x11e	      0xe800000000	                          call 0x4000163	       168	strbuf.h	FUNCTION_3	CALL_2
0x123	              0x90	                                     nop	       169	strbuf.h	FUNCTION_3
0x124	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_3
0x125	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_3
diffcore_order	DO,0:ELSE,0:FOR,2:functions,0:WHILE,0:IF,1:CALL,3:SWITCH,0	75
0x580	              0x55	                                push rbp	       115	diffcore-order.c	FUNCTION_48
0x581	          0x4889e5	                            mov rbp, rsp	       115	diffcore-order.c	FUNCTION_48
0x584	        0x4883ec30	                           sub rsp, 0x30	       115	diffcore-order.c	FUNCTION_48
0x588	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       115	diffcore-order.c	FUNCTION_48
0x58c	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       116	diffcore-order.c	FUNCTION_48
0x594	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       120	diffcore-order.c	FUNCTION_48	IF_1
0x598	          0x8b400c	              mov eax, dword [rax + 0xc]	       120	diffcore-order.c	FUNCTION_48	IF_1
0x59b	            0x85c0	                           test eax, eax	       120	diffcore-order.c	FUNCTION_48	IF_1
0x59d	     0xf84d9000000	                            je 0x40006bc	       120	diffcore-order.c	FUNCTION_48	IF_1
0x5a3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       123	diffcore-order.c	FUNCTION_48	CALL_1
0x5a7	          0x8b400c	              mov eax, dword [rax + 0xc]	       123	diffcore-order.c	FUNCTION_48	CALL_1
0x5aa	            0x4898	                                    cdqe	       123	diffcore-order.c	FUNCTION_48	CALL_1
0x5ac	          0x4889c6	                            mov rsi, rax	       123	diffcore-order.c	FUNCTION_48	CALL_1
0x5af	      0xbf10000000	                           mov edi, 0x10	       123	diffcore-order.c	FUNCTION_48	CALL_1
0x5b4	      0xe847faffff	                        call sym.st_mult	       123	diffcore-order.c	FUNCTION_48	CALL_1
0x5b9	          0x4889c7	                            mov rdi, rax	       123	diffcore-order.c	FUNCTION_48	CALL_1
0x5bc	      0xe800000000	                          call 0x4000601	       123	diffcore-order.c	FUNCTION_48	CALL_1
0x5c1	        0x488945f8	                mov qword [rbp - 8], rax	       123	diffcore-order.c	FUNCTION_48	CALL_1
0x5c5	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       124	diffcore-order.c	FUNCTION_48	FOR_1
0x5cc	            0xeb31	                           jmp 0x400063f	       124	diffcore-order.c	FUNCTION_48	FOR_1
0x5ce	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       125	diffcore-order.c	FUNCTION_48	FOR_1
0x5d1	            0x4898	                                    cdqe	       125	diffcore-order.c	FUNCTION_48	FOR_1
0x5d3	        0x48c1e004	                              shl rax, 4	       125	diffcore-order.c	FUNCTION_48	FOR_1
0x5d7	          0x4889c2	                            mov rdx, rax	       125	diffcore-order.c	FUNCTION_48	FOR_1
0x5da	        0x488b45f8	                mov rax, qword [rbp - 8]	       125	diffcore-order.c	FUNCTION_48	FOR_1
0x5de	          0x4801c2	                            add rdx, rax	       125	diffcore-order.c	FUNCTION_48	FOR_1
0x5e1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       125	diffcore-order.c	FUNCTION_48	FOR_1
0x5e5	          0x488b00	                    mov rax, qword [rax]	       125	diffcore-order.c	FUNCTION_48	FOR_1
0x5e8	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	       125	diffcore-order.c	FUNCTION_48	FOR_1
0x5eb	          0x4863c9	                         movsxd rcx, ecx	       125	diffcore-order.c	FUNCTION_48	FOR_1
0x5ee	        0x48c1e103	                              shl rcx, 3	       125	diffcore-order.c	FUNCTION_48	FOR_1
0x5f2	          0x4801c8	                            add rax, rcx	       125	diffcore-order.c	FUNCTION_48	FOR_1
0x5f5	          0x488b00	                    mov rax, qword [rax]	       125	diffcore-order.c	FUNCTION_48	FOR_1
0x5f8	          0x488902	                    mov qword [rdx], rax	       125	diffcore-order.c	FUNCTION_48	FOR_1
0x5fb	        0x8345ec01	               add dword [rbp - 0x14], 1	       124	diffcore-order.c	FUNCTION_48	FOR_1
0x5ff	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       124	diffcore-order.c	FUNCTION_48	FOR_1
0x603	          0x8b400c	              mov eax, dword [rax + 0xc]	       124	diffcore-order.c	FUNCTION_48	FOR_1
0x606	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	       124	diffcore-order.c	FUNCTION_48	FOR_1
0x609	            0x7fc3	                            jg 0x400060e	       124	diffcore-order.c	FUNCTION_48	FOR_1
0x60b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       126	diffcore-order.c	FUNCTION_48	CALL_2
0x60f	          0x8b480c	              mov ecx, dword [rax + 0xc]	       126	diffcore-order.c	FUNCTION_48	CALL_2
0x612	        0x488b55f8	                mov rdx, qword [rbp - 8]	       126	diffcore-order.c	FUNCTION_48	CALL_2
0x616	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       126	diffcore-order.c	FUNCTION_48	CALL_2
0x61a	      0xbe00000000	                              mov esi, 0	       126	diffcore-order.c	FUNCTION_48	CALL_2
0x61f	          0x4889c7	                            mov rdi, rax	       126	diffcore-order.c	FUNCTION_48	CALL_2
0x622	      0xe800000000	                          call 0x4000667	       126	diffcore-order.c	FUNCTION_48	CALL_2
0x627	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       127	diffcore-order.c	FUNCTION_48	FOR_2
0x62e	            0xeb31	                           jmp 0x40006a1	       127	diffcore-order.c	FUNCTION_48	FOR_2
0x630	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       128	diffcore-order.c	FUNCTION_48	FOR_2
0x634	          0x488b00	                    mov rax, qword [rax]	       128	diffcore-order.c	FUNCTION_48	FOR_2
0x637	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       128	diffcore-order.c	FUNCTION_48	FOR_2
0x63a	          0x4863d2	                         movsxd rdx, edx	       128	diffcore-order.c	FUNCTION_48	FOR_2
0x63d	        0x48c1e203	                              shl rdx, 3	       128	diffcore-order.c	FUNCTION_48	FOR_2
0x641	          0x4801c2	                            add rdx, rax	       128	diffcore-order.c	FUNCTION_48	FOR_2
0x644	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       128	diffcore-order.c	FUNCTION_48	FOR_2
0x647	            0x4898	                                    cdqe	       128	diffcore-order.c	FUNCTION_48	FOR_2
0x649	        0x48c1e004	                              shl rax, 4	       128	diffcore-order.c	FUNCTION_48	FOR_2
0x64d	          0x4889c1	                            mov rcx, rax	       128	diffcore-order.c	FUNCTION_48	FOR_2
0x650	        0x488b45f8	                mov rax, qword [rbp - 8]	       128	diffcore-order.c	FUNCTION_48	FOR_2
0x654	          0x4801c8	                            add rax, rcx	       128	diffcore-order.c	FUNCTION_48	FOR_2
0x657	          0x488b00	                    mov rax, qword [rax]	       128	diffcore-order.c	FUNCTION_48	FOR_2
0x65a	          0x488902	                    mov qword [rdx], rax	       128	diffcore-order.c	FUNCTION_48	FOR_2
0x65d	        0x8345ec01	               add dword [rbp - 0x14], 1	       127	diffcore-order.c	FUNCTION_48	FOR_2
0x661	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       127	diffcore-order.c	FUNCTION_48	FOR_2
0x665	          0x8b400c	              mov eax, dword [rax + 0xc]	       127	diffcore-order.c	FUNCTION_48	FOR_2
0x668	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	       127	diffcore-order.c	FUNCTION_48	FOR_2
0x66b	            0x7fc3	                            jg 0x4000670	       127	diffcore-order.c	FUNCTION_48	FOR_2
0x66d	        0x488b45f8	                mov rax, qword [rbp - 8]	       129	diffcore-order.c	FUNCTION_48	CALL_3
0x671	          0x4889c7	                            mov rdi, rax	       129	diffcore-order.c	FUNCTION_48	CALL_3
0x674	      0xe800000000	                          call 0x40006b9	       129	diffcore-order.c	FUNCTION_48	CALL_3
0x679	              0x90	                                     nop	       130	diffcore-order.c	FUNCTION_48
0x67a	            0xeb01	                           jmp 0x40006bd	       130	diffcore-order.c	FUNCTION_48
0x67c	              0x90	                                     nop	       121	diffcore-order.c	FUNCTION_48	IF_1
0x67d	              0xc9	                                   leave	       131	diffcore-order.c	FUNCTION_48
0x67e	              0xc3	                                     ret	       131	diffcore-order.c	FUNCTION_48
match_order	DO,0:ELSE,0:FOR,1:functions,0:WHILE,1:IF,2:CALL,4:SWITCH,0	51
0x389	              0x55	                                push rbp	        61	diffcore-order.c	FUNCTION_44
0x38a	          0x4889e5	                            mov rbp, rsp	        61	diffcore-order.c	FUNCTION_44
0x38d	        0x4883ec20	                           sub rsp, 0x20	        61	diffcore-order.c	FUNCTION_44
0x391	        0x48897de8	             mov qword [rbp - 0x18], rdi	        61	diffcore-order.c	FUNCTION_44
0x395	    0xc745f4000000	                mov dword [rbp - 0xc], 0	        65	diffcore-order.c	FUNCTION_44	FOR_1
0x39c	      0xe994000000	                           jmp 0x4000475	        65	diffcore-order.c	FUNCTION_44	FOR_1
0x3a1	      0xbe00000000	                              mov esi, 0	        66	diffcore-order.c	FUNCTION_44	FOR_1	CALL_1
0x3a6	      0xbf00000000	                              mov edi, 0	        66	diffcore-order.c	FUNCTION_44	FOR_1	CALL_1
0x3ab	      0xe8dcfcffff	                  call sym.strbuf_setlen	        66	diffcore-order.c	FUNCTION_44	FOR_1	CALL_1
0x3b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        67	diffcore-order.c	FUNCTION_44	FOR_1	CALL_2
0x3b4	          0x4889c6	                            mov rsi, rax	        67	diffcore-order.c	FUNCTION_44	FOR_1	CALL_2
0x3b7	      0xbf00000000	                              mov edi, 0	        67	diffcore-order.c	FUNCTION_44	FOR_1	CALL_2
0x3bc	      0xe865fdffff	                  call sym.strbuf_addstr	        67	diffcore-order.c	FUNCTION_44	FOR_1	CALL_2
0x3c1	            0xeb5d	                           jmp 0x4000460	        68	diffcore-order.c	FUNCTION_44	FOR_1	WHILE_1
0x3c3	    0x488b0d000000	            mov rcx, qword [0x0400040a] 	        70	diffcore-order.c	FUNCTION_44	FOR_1	WHILE_1	IF_1	CALL_3
0x3ca	    0x488b05000000	            mov rax, qword [0x04000411] 	        70	diffcore-order.c	FUNCTION_44	FOR_1	WHILE_1	IF_1	CALL_3
0x3d1	          0x8b55f4	              mov edx, dword [rbp - 0xc]	        70	diffcore-order.c	FUNCTION_44	FOR_1	WHILE_1	IF_1	CALL_3
0x3d4	          0x4863d2	                         movsxd rdx, edx	        70	diffcore-order.c	FUNCTION_44	FOR_1	WHILE_1	IF_1	CALL_3
0x3d7	        0x48c1e203	                              shl rdx, 3	        70	diffcore-order.c	FUNCTION_44	FOR_1	WHILE_1	IF_1	CALL_3
0x3db	          0x4801d0	                            add rax, rdx	        70	diffcore-order.c	FUNCTION_44	FOR_1	WHILE_1	IF_1	CALL_3
0x3de	          0x488b00	                    mov rax, qword [rax]	        70	diffcore-order.c	FUNCTION_44	FOR_1	WHILE_1	IF_1	CALL_3
0x3e1	      0xba00000000	                              mov edx, 0	        70	diffcore-order.c	FUNCTION_44	FOR_1	WHILE_1	IF_1	CALL_3
0x3e6	          0x4889ce	                            mov rsi, rcx	        70	diffcore-order.c	FUNCTION_44	FOR_1	WHILE_1	IF_1	CALL_3
0x3e9	          0x4889c7	                            mov rdi, rax	        70	diffcore-order.c	FUNCTION_44	FOR_1	WHILE_1	IF_1	CALL_3
0x3ec	      0xe800000000	                          call 0x4000431	        70	diffcore-order.c	FUNCTION_44	FOR_1	WHILE_1	IF_1	CALL_3
0x3f1	            0x85c0	                           test eax, eax	        70	diffcore-order.c	FUNCTION_44	FOR_1	WHILE_1	IF_1	CALL_3
0x3f3	            0x7505	                           jne 0x400043a	        70	diffcore-order.c	FUNCTION_44	FOR_1	WHILE_1	IF_1	CALL_3
0x3f5	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        71	diffcore-order.c	FUNCTION_44	FOR_1	WHILE_1	IF_1
0x3f8	            0xeb50	                           jmp 0x400048a	        71	diffcore-order.c	FUNCTION_44	FOR_1	WHILE_1	IF_1
0x3fa	    0x488b05000000	            mov rax, qword [0x04000441] 	        72	diffcore-order.c	FUNCTION_44	FOR_1	WHILE_1	CALL_4
0x401	      0xbe2f000000	                           mov esi, 0x2f	        72	diffcore-order.c	FUNCTION_44	FOR_1	WHILE_1	CALL_4
0x406	          0x4889c7	                            mov rdi, rax	        72	diffcore-order.c	FUNCTION_44	FOR_1	WHILE_1	CALL_4
0x409	      0xe800000000	                          call 0x400044e	        72	diffcore-order.c	FUNCTION_44	FOR_1	WHILE_1	CALL_4
0x40e	        0x488945f8	                mov qword [rbp - 8], rax	        72	diffcore-order.c	FUNCTION_44	FOR_1	WHILE_1	CALL_4
0x412	      0x48837df800	                  cmp qword [rbp - 8], 0	        73	diffcore-order.c	FUNCTION_44	FOR_1	WHILE_1	IF_2
0x417	            0x7417	                            je 0x4000470	        73	diffcore-order.c	FUNCTION_44	FOR_1	WHILE_1	IF_2
0x419	        0x488b45f8	                mov rax, qword [rbp - 8]	        75	diffcore-order.c	FUNCTION_44	FOR_1	WHILE_1
0x41d	          0xc60000	                       mov byte [rax], 0	        75	diffcore-order.c	FUNCTION_44	FOR_1	WHILE_1
0x420	    0x488b05000000	            mov rax, qword [0x04000467] 	        68	diffcore-order.c	FUNCTION_44	FOR_1	WHILE_1
0x427	           0xfb600	                   movzx eax, byte [rax]	        68	diffcore-order.c	FUNCTION_44	FOR_1	WHILE_1
0x42a	            0x84c0	                             test al, al	        68	diffcore-order.c	FUNCTION_44	FOR_1	WHILE_1
0x42c	            0x7595	                           jne 0x4000403	        68	diffcore-order.c	FUNCTION_44	FOR_1	WHILE_1
0x42e	            0xeb01	                           jmp 0x4000471	        68	diffcore-order.c	FUNCTION_44	FOR_1	WHILE_1
0x430	              0x90	                                     nop	        74	diffcore-order.c	FUNCTION_44	FOR_1	WHILE_1	IF_2
0x431	        0x8345f401	                add dword [rbp - 0xc], 1	        65	diffcore-order.c	FUNCTION_44	FOR_1
0x435	    0x8b0500000000	            mov eax, dword [0x0400047b] 	        65	diffcore-order.c	FUNCTION_44	FOR_1
0x43b	          0x3945f4	              cmp dword [rbp - 0xc], eax	        65	diffcore-order.c	FUNCTION_44	FOR_1
0x43e	     0xf8c5dffffff	                            jl 0x40003e1	        65	diffcore-order.c	FUNCTION_44	FOR_1
0x444	    0x8b0500000000	            mov eax, dword [0x0400048a] 	        78	diffcore-order.c	FUNCTION_44
0x44a	              0xc9	                                   leave	        79	diffcore-order.c	FUNCTION_44
0x44b	              0xc3	                                     ret	        79	diffcore-order.c	FUNCTION_44
