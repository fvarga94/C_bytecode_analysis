bitmap_new	FOR,0:functions,0:CALL,2:ELSE,0:DO,0:IF,0:SWITCH,0:WHILE,0	17
0xf8	              0x55	                                push rbp	        26	bitmap.c	FUNCTION_1
0xf9	          0x4889e5	                            mov rbp, rsp	        26	bitmap.c	FUNCTION_1
0xfc	        0x4883ec10	                           sub rsp, 0x10	        26	bitmap.c	FUNCTION_1
0x100	      0xbf10000000	                           mov edi, 0x10	        27	bitmap.c	FUNCTION_1	CALL_1
0x105	      0xe800000000	                          call 0x400014a	        27	bitmap.c	FUNCTION_1	CALL_1
0x10a	        0x488945f8	                mov qword [rbp - 8], rax	        27	bitmap.c	FUNCTION_1	CALL_1
0x10e	      0xbe08000000	                              mov esi, 8	        28	bitmap.c	FUNCTION_1	CALL_2
0x113	      0xbf20000000	                           mov edi, 0x20	        28	bitmap.c	FUNCTION_1	CALL_2
0x118	      0xe800000000	                          call 0x400015d	        28	bitmap.c	FUNCTION_1	CALL_2
0x11d	          0x4889c2	                            mov rdx, rax	        28	bitmap.c	FUNCTION_1	CALL_2
0x120	        0x488b45f8	                mov rax, qword [rbp - 8]	        28	bitmap.c	FUNCTION_1	CALL_2
0x124	          0x488910	                    mov qword [rax], rdx	        28	bitmap.c	FUNCTION_1	CALL_2
0x127	        0x488b45f8	                mov rax, qword [rbp - 8]	        29	bitmap.c	FUNCTION_1
0x12b	    0x48c740082000	               mov qword [rax + 8], 0x20	        29	bitmap.c	FUNCTION_1
0x133	        0x488b45f8	                mov rax, qword [rbp - 8]	        30	bitmap.c	FUNCTION_1
0x137	              0xc9	                                   leave	        31	bitmap.c	FUNCTION_1
0x138	              0xc3	                                     ret	        31	bitmap.c	FUNCTION_1
bitmap_to_ewah	FOR,1:functions,0:CALL,4:ELSE,0:DO,0:IF,3:SWITCH,0:WHILE,0	55
0x2f7	              0x55	                                push rbp	        64	bitmap.c	FUNCTION_5
0x2f8	          0x4889e5	                            mov rbp, rsp	        64	bitmap.c	FUNCTION_5
0x2fb	        0x4883ec30	                           sub rsp, 0x30	        64	bitmap.c	FUNCTION_5
0x2ff	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        64	bitmap.c	FUNCTION_5
0x303	      0xe800000000	                          call 0x4000348	        65	bitmap.c	FUNCTION_5	CALL_1
0x308	        0x488945f8	                mov qword [rbp - 8], rax	        65	bitmap.c	FUNCTION_5	CALL_1
0x30c	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        66	bitmap.c	FUNCTION_5
0x314	    0x48c745f00000	               mov qword [rbp - 0x10], 0	        67	bitmap.c	FUNCTION_5
0x31c	    0x48c745e00000	               mov qword [rbp - 0x20], 0	        69	bitmap.c	FUNCTION_5	FOR_1
0x324	            0xeb7d	                           jmp 0x40003e3	        69	bitmap.c	FUNCTION_5	FOR_1
0x326	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        70	bitmap.c	FUNCTION_5	FOR_1	IF_1
0x32a	          0x488b00	                    mov rax, qword [rax]	        70	bitmap.c	FUNCTION_5	FOR_1	IF_1
0x32d	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        70	bitmap.c	FUNCTION_5	FOR_1	IF_1
0x331	        0x48c1e203	                              shl rdx, 3	        70	bitmap.c	FUNCTION_5	FOR_1	IF_1
0x335	          0x4801d0	                            add rax, rdx	        70	bitmap.c	FUNCTION_5	FOR_1	IF_1
0x338	          0x488b00	                    mov rax, qword [rax]	        70	bitmap.c	FUNCTION_5	FOR_1	IF_1
0x33b	          0x4885c0	                           test rax, rax	        70	bitmap.c	FUNCTION_5	FOR_1	IF_1
0x33e	            0x7507	                           jne 0x4000387	        70	bitmap.c	FUNCTION_5	FOR_1	IF_1
0x340	      0x488345e801	               add qword [rbp - 0x18], 1	        71	bitmap.c	FUNCTION_5	FOR_1	IF_1
0x345	            0xeb57	                           jmp 0x40003de	        72	bitmap.c	FUNCTION_5	FOR_1	IF_1
0x347	      0x48837df000	               cmp qword [rbp - 0x10], 0	        75	bitmap.c	FUNCTION_5	FOR_1	IF_2
0x34c	            0x7413	                            je 0x40003a1	        75	bitmap.c	FUNCTION_5	FOR_1	IF_2
0x34e	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        76	bitmap.c	FUNCTION_5	FOR_1	CALL_2
0x352	        0x488b45f8	                mov rax, qword [rbp - 8]	        76	bitmap.c	FUNCTION_5	FOR_1	CALL_2
0x356	          0x4889d6	                            mov rsi, rdx	        76	bitmap.c	FUNCTION_5	FOR_1	CALL_2
0x359	          0x4889c7	                            mov rdi, rax	        76	bitmap.c	FUNCTION_5	FOR_1	CALL_2
0x35c	      0xe800000000	                          call 0x40003a1	        76	bitmap.c	FUNCTION_5	FOR_1	CALL_2
0x361	      0x48837de800	               cmp qword [rbp - 0x18], 0	        78	bitmap.c	FUNCTION_5	FOR_1	IF_3
0x366	            0x741d	                            je 0x40003c5	        78	bitmap.c	FUNCTION_5	FOR_1	IF_3
0x368	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        79	bitmap.c	FUNCTION_5	FOR_1	IF_3	CALL_3
0x36c	        0x488b45f8	                mov rax, qword [rbp - 8]	        79	bitmap.c	FUNCTION_5	FOR_1	IF_3	CALL_3
0x370	      0xbe00000000	                              mov esi, 0	        79	bitmap.c	FUNCTION_5	FOR_1	IF_3	CALL_3
0x375	          0x4889c7	                            mov rdi, rax	        79	bitmap.c	FUNCTION_5	FOR_1	IF_3	CALL_3
0x378	      0xe800000000	                          call 0x40003bd	        79	bitmap.c	FUNCTION_5	FOR_1	IF_3	CALL_3
0x37d	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        80	bitmap.c	FUNCTION_5	FOR_1	IF_3
0x385	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        83	bitmap.c	FUNCTION_5	FOR_1
0x389	          0x488b00	                    mov rax, qword [rax]	        83	bitmap.c	FUNCTION_5	FOR_1
0x38c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        83	bitmap.c	FUNCTION_5	FOR_1
0x390	        0x48c1e203	                              shl rdx, 3	        83	bitmap.c	FUNCTION_5	FOR_1
0x394	          0x4801d0	                            add rax, rdx	        83	bitmap.c	FUNCTION_5	FOR_1
0x397	          0x488b00	                    mov rax, qword [rax]	        83	bitmap.c	FUNCTION_5	FOR_1
0x39a	        0x488945f0	             mov qword [rbp - 0x10], rax	        83	bitmap.c	FUNCTION_5	FOR_1
0x39e	      0x488345e001	               add qword [rbp - 0x20], 1	        69	bitmap.c	FUNCTION_5	FOR_1
0x3a3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        69	bitmap.c	FUNCTION_5	FOR_1
0x3a7	        0x488b4008	                mov rax, qword [rax + 8]	        69	bitmap.c	FUNCTION_5	FOR_1
0x3ab	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	        69	bitmap.c	FUNCTION_5	FOR_1
0x3af	     0xf8771ffffff	                            ja 0x4000366	        69	bitmap.c	FUNCTION_5	FOR_1
0x3b5	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        86	bitmap.c	FUNCTION_5	CALL_4
0x3b9	        0x488b45f8	                mov rax, qword [rbp - 8]	        86	bitmap.c	FUNCTION_5	CALL_4
0x3bd	          0x4889d6	                            mov rsi, rdx	        86	bitmap.c	FUNCTION_5	CALL_4
0x3c0	          0x4889c7	                            mov rdi, rax	        86	bitmap.c	FUNCTION_5	CALL_4
0x3c3	      0xe800000000	                          call 0x4000408	        86	bitmap.c	FUNCTION_5	CALL_4
0x3c8	        0x488b45f8	                mov rax, qword [rbp - 8]	        87	bitmap.c	FUNCTION_5
0x3cc	              0xc9	                                   leave	        88	bitmap.c	FUNCTION_5
0x3cd	              0xc3	                                     ret	        88	bitmap.c	FUNCTION_5
bitmap_get	FOR,0:functions,0:CALL,2:ELSE,0:DO,0:IF,0:SWITCH,0:WHILE,0	30
0x297	              0x55	                                push rbp	        57	bitmap.c	FUNCTION_4
0x298	          0x4889e5	                            mov rbp, rsp	        57	bitmap.c	FUNCTION_4
0x29b	        0x48897de8	             mov qword [rbp - 0x18], rdi	        57	bitmap.c	FUNCTION_4
0x29f	        0x488975e0	             mov qword [rbp - 0x20], rsi	        57	bitmap.c	FUNCTION_4
0x2a3	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        58	bitmap.c	FUNCTION_4	CALL_1
0x2a7	        0x48c1e806	                              shr rax, 6	        58	bitmap.c	FUNCTION_4	CALL_1
0x2ab	        0x488945f8	                mov qword [rbp - 8], rax	        58	bitmap.c	FUNCTION_4	CALL_1
0x2af	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        59	bitmap.c	FUNCTION_4
0x2b3	        0x488b4008	                mov rax, qword [rax + 8]	        59	bitmap.c	FUNCTION_4
0x2b7	        0x483b45f8	                cmp rax, qword [rbp - 8]	        59	bitmap.c	FUNCTION_4
0x2bb	            0x7633	                           jbe 0x4000330	        59	bitmap.c	FUNCTION_4
0x2bd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        60	bitmap.c	FUNCTION_4	CALL_2
0x2c1	          0x488b00	                    mov rax, qword [rax]	        60	bitmap.c	FUNCTION_4	CALL_2
0x2c4	        0x488b55f8	                mov rdx, qword [rbp - 8]	        60	bitmap.c	FUNCTION_4	CALL_2
0x2c8	        0x48c1e203	                              shl rdx, 3	        60	bitmap.c	FUNCTION_4	CALL_2
0x2cc	          0x4801d0	                            add rax, rdx	        60	bitmap.c	FUNCTION_4	CALL_2
0x2cf	          0x488b10	                    mov rdx, qword [rax]	        60	bitmap.c	FUNCTION_4	CALL_2
0x2d2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        60	bitmap.c	FUNCTION_4	CALL_2
0x2d6	          0x83e03f	                           and eax, 0x3f	        60	bitmap.c	FUNCTION_4	CALL_2
0x2d9	            0x89c1	                            mov ecx, eax	        60	bitmap.c	FUNCTION_4	CALL_2
0x2db	          0x48d3ea	                             shr rdx, cl	        60	bitmap.c	FUNCTION_4	CALL_2
0x2de	          0x4889d0	                            mov rax, rdx	        60	bitmap.c	FUNCTION_4	CALL_2
0x2e1	          0x83e001	                              and eax, 1	        60	bitmap.c	FUNCTION_4	CALL_2
0x2e4	          0x4885c0	                           test rax, rax	        59	bitmap.c	FUNCTION_4
0x2e7	            0x7407	                            je 0x4000330	        59	bitmap.c	FUNCTION_4
0x2e9	      0xb801000000	                              mov eax, 1	        59	bitmap.c	FUNCTION_4
0x2ee	            0xeb05	                           jmp 0x4000335	        59	bitmap.c	FUNCTION_4
0x2f0	      0xb800000000	                              mov eax, 0	        59	bitmap.c	FUNCTION_4
0x2f5	              0x5d	                                 pop rbp	        61	bitmap.c	FUNCTION_4
0x2f6	              0xc3	                                     ret	        61	bitmap.c	FUNCTION_4
bitmap_free	FOR,0:functions,0:CALL,2:ELSE,0:DO,0:IF,1:SWITCH,0:WHILE,0	17
0x940	              0x55	                                push rbp	       206	bitmap.c	FUNCTION_13
0x941	          0x4889e5	                            mov rbp, rsp	       206	bitmap.c	FUNCTION_13
0x944	        0x4883ec10	                           sub rsp, 0x10	       206	bitmap.c	FUNCTION_13
0x948	        0x48897df8	                mov qword [rbp - 8], rdi	       206	bitmap.c	FUNCTION_13
0x94c	      0x48837df800	                  cmp qword [rbp - 8], 0	       207	bitmap.c	FUNCTION_13	IF_1
0x951	            0x741d	                            je 0x40009b0	       207	bitmap.c	FUNCTION_13	IF_1
0x953	        0x488b45f8	                mov rax, qword [rbp - 8]	       210	bitmap.c	FUNCTION_13	CALL_1
0x957	          0x488b00	                    mov rax, qword [rax]	       210	bitmap.c	FUNCTION_13	CALL_1
0x95a	          0x4889c7	                            mov rdi, rax	       210	bitmap.c	FUNCTION_13	CALL_1
0x95d	      0xe800000000	                          call 0x40009a2	       210	bitmap.c	FUNCTION_13	CALL_1
0x962	        0x488b45f8	                mov rax, qword [rbp - 8]	       211	bitmap.c	FUNCTION_13	CALL_2
0x966	          0x4889c7	                            mov rdi, rax	       211	bitmap.c	FUNCTION_13	CALL_2
0x969	      0xe800000000	                          call 0x40009ae	       211	bitmap.c	FUNCTION_13	CALL_2
0x96e	            0xeb01	                           jmp 0x40009b1	       211	bitmap.c	FUNCTION_13	CALL_2
0x970	              0x90	                                     nop	       208	bitmap.c	FUNCTION_13	IF_1
0x971	              0xc9	                                   leave	       212	bitmap.c	FUNCTION_13
0x972	              0xc3	                                     ret	       212	bitmap.c	FUNCTION_13
bitmap_and_not	FOR,1:functions,0:CALL,0:ELSE,0:DO,0:IF,0:SWITCH,0:WHILE,0	40
0x51f	              0x55	                                push rbp	       109	bitmap.c	FUNCTION_7
0x520	          0x4889e5	                            mov rbp, rsp	       109	bitmap.c	FUNCTION_7
0x523	        0x48897de8	             mov qword [rbp - 0x18], rdi	       109	bitmap.c	FUNCTION_7
0x527	        0x488975e0	             mov qword [rbp - 0x20], rsi	       109	bitmap.c	FUNCTION_7
0x52b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       111	bitmap.c	FUNCTION_7
0x52f	        0x488b5008	                mov rdx, qword [rax + 8]	       111	bitmap.c	FUNCTION_7
0x533	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       111	bitmap.c	FUNCTION_7
0x537	        0x488b4008	                mov rax, qword [rax + 8]	       111	bitmap.c	FUNCTION_7
0x53b	          0x4839c2	                            cmp rdx, rax	       110	bitmap.c	FUNCTION_7
0x53e	        0x480f46c2	                         cmovbe rax, rdx	       110	bitmap.c	FUNCTION_7
0x542	        0x488945f8	                mov qword [rbp - 8], rax	       110	bitmap.c	FUNCTION_7
0x546	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       115	bitmap.c	FUNCTION_7	FOR_1
0x54e	            0xeb4a	                           jmp 0x40005da	       115	bitmap.c	FUNCTION_7	FOR_1
0x550	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       116	bitmap.c	FUNCTION_7	FOR_1
0x554	          0x488b00	                    mov rax, qword [rax]	       116	bitmap.c	FUNCTION_7	FOR_1
0x557	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       116	bitmap.c	FUNCTION_7	FOR_1
0x55b	        0x48c1e203	                              shl rdx, 3	       116	bitmap.c	FUNCTION_7	FOR_1
0x55f	          0x4801c2	                            add rdx, rax	       116	bitmap.c	FUNCTION_7	FOR_1
0x562	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       116	bitmap.c	FUNCTION_7	FOR_1
0x566	          0x488b00	                    mov rax, qword [rax]	       116	bitmap.c	FUNCTION_7	FOR_1
0x569	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       116	bitmap.c	FUNCTION_7	FOR_1
0x56d	        0x48c1e103	                              shl rcx, 3	       116	bitmap.c	FUNCTION_7	FOR_1
0x571	          0x4801c8	                            add rax, rcx	       116	bitmap.c	FUNCTION_7	FOR_1
0x574	          0x488b08	                    mov rcx, qword [rax]	       116	bitmap.c	FUNCTION_7	FOR_1
0x577	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       116	bitmap.c	FUNCTION_7	FOR_1
0x57b	          0x488b00	                    mov rax, qword [rax]	       116	bitmap.c	FUNCTION_7	FOR_1
0x57e	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       116	bitmap.c	FUNCTION_7	FOR_1
0x582	        0x48c1e603	                              shl rsi, 3	       116	bitmap.c	FUNCTION_7	FOR_1
0x586	          0x4801f0	                            add rax, rsi	       116	bitmap.c	FUNCTION_7	FOR_1
0x589	          0x488b00	                    mov rax, qword [rax]	       116	bitmap.c	FUNCTION_7	FOR_1
0x58c	          0x48f7d0	                                 not rax	       116	bitmap.c	FUNCTION_7	FOR_1
0x58f	          0x4821c8	                            and rax, rcx	       116	bitmap.c	FUNCTION_7	FOR_1
0x592	          0x488902	                    mov qword [rdx], rax	       116	bitmap.c	FUNCTION_7	FOR_1
0x595	      0x488345f001	               add qword [rbp - 0x10], 1	       115	bitmap.c	FUNCTION_7	FOR_1
0x59a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       115	bitmap.c	FUNCTION_7	FOR_1
0x59e	        0x483b45f8	                cmp rax, qword [rbp - 8]	       115	bitmap.c	FUNCTION_7	FOR_1
0x5a2	            0x72ac	                            jb 0x4000590	       115	bitmap.c	FUNCTION_7	FOR_1
0x5a4	              0x90	                                     nop	       117	bitmap.c	FUNCTION_7
0x5a5	              0x5d	                                 pop rbp	       117	bitmap.c	FUNCTION_7
0x5a6	              0xc3	                                     ret	       117	bitmap.c	FUNCTION_7
ewah_bit_popcount64	FOR,0:functions,0:CALL,0:ELSE,0:DO,0:IF,0:SWITCH,0:WHILE,0	36
0x52	              0x55	                                push rbp	        33	ewok.h	FUNCTION_14
0x53	          0x4889e5	                            mov rbp, rsp	        33	ewok.h	FUNCTION_14
0x56	        0x48897df8	                mov qword [rbp - 8], rdi	        33	ewok.h	FUNCTION_14
0x5a	    0x48b855555555	          movabs rax, 0x5555555555555555	        34	ewok.h	FUNCTION_14
0x64	        0x482345f8	                and rax, qword [rbp - 8]	        34	ewok.h	FUNCTION_14
0x68	        0x488b55f8	                mov rdx, qword [rbp - 8]	        34	ewok.h	FUNCTION_14
0x6c	          0x4889d1	                            mov rcx, rdx	        34	ewok.h	FUNCTION_14
0x6f	          0x48d1e9	                              shr rcx, 1	        34	ewok.h	FUNCTION_14
0x72	    0x48ba55555555	          movabs rdx, 0x5555555555555555	        34	ewok.h	FUNCTION_14
0x7c	          0x4821ca	                            and rdx, rcx	        34	ewok.h	FUNCTION_14
0x7f	          0x4801d0	                            add rax, rdx	        34	ewok.h	FUNCTION_14
0x82	        0x488945f8	                mov qword [rbp - 8], rax	        34	ewok.h	FUNCTION_14
0x86	    0x48b833333333	          movabs rax, 0x3333333333333333	        35	ewok.h	FUNCTION_14
0x90	        0x482345f8	                and rax, qword [rbp - 8]	        35	ewok.h	FUNCTION_14
0x94	        0x488b55f8	                mov rdx, qword [rbp - 8]	        35	ewok.h	FUNCTION_14
0x98	          0x4889d1	                            mov rcx, rdx	        35	ewok.h	FUNCTION_14
0x9b	        0x48c1e902	                              shr rcx, 2	        35	ewok.h	FUNCTION_14
0x9f	    0x48ba33333333	          movabs rdx, 0x3333333333333333	        35	ewok.h	FUNCTION_14
0xa9	          0x4821ca	                            and rdx, rcx	        35	ewok.h	FUNCTION_14
0xac	          0x4801d0	                            add rax, rdx	        35	ewok.h	FUNCTION_14
0xaf	        0x488945f8	                mov qword [rbp - 8], rax	        35	ewok.h	FUNCTION_14
0xb3	    0x48b80f0f0f0f	           movabs rax, 0xf0f0f0f0f0f0f0f	        36	ewok.h	FUNCTION_14
0xbd	        0x482345f8	                and rax, qword [rbp - 8]	        36	ewok.h	FUNCTION_14
0xc1	        0x488b55f8	                mov rdx, qword [rbp - 8]	        36	ewok.h	FUNCTION_14
0xc5	          0x4889d1	                            mov rcx, rdx	        36	ewok.h	FUNCTION_14
0xc8	        0x48c1e904	                              shr rcx, 4	        36	ewok.h	FUNCTION_14
0xcc	    0x48ba0f0f0f0f	           movabs rdx, 0xf0f0f0f0f0f0f0f	        36	ewok.h	FUNCTION_14
0xd6	          0x4821ca	                            and rdx, rcx	        36	ewok.h	FUNCTION_14
0xd9	          0x4801d0	                            add rax, rdx	        36	ewok.h	FUNCTION_14
0xdc	        0x488945f8	                mov qword [rbp - 8], rax	        36	ewok.h	FUNCTION_14
0xe0	        0x488b55f8	                mov rdx, qword [rbp - 8]	        37	ewok.h	FUNCTION_14
0xe4	    0x48b801010101	           movabs rax, 0x101010101010101	        37	ewok.h	FUNCTION_14
0xee	        0x480fafc2	                           imul rax, rdx	        37	ewok.h	FUNCTION_14
0xf2	        0x48c1e838	                           shr rax, 0x38	        37	ewok.h	FUNCTION_14
0xf6	              0x5d	                                 pop rbp	        38	ewok.h	FUNCTION_14
0xf7	              0xc3	                                     ret	        38	ewok.h	FUNCTION_14
bitmap_set	FOR,0:functions,0:CALL,4:ELSE,0:DO,0:IF,1:SWITCH,0:WHILE,0	66
0x139	              0x55	                                push rbp	        34	bitmap.c	FUNCTION_2
0x13a	          0x4889e5	                            mov rbp, rsp	        34	bitmap.c	FUNCTION_2
0x13d	        0x4883ec20	                           sub rsp, 0x20	        34	bitmap.c	FUNCTION_2
0x141	        0x48897de8	             mov qword [rbp - 0x18], rdi	        34	bitmap.c	FUNCTION_2
0x145	        0x488975e0	             mov qword [rbp - 0x20], rsi	        34	bitmap.c	FUNCTION_2
0x149	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        35	bitmap.c	FUNCTION_2	CALL_1
0x14d	        0x48c1e806	                              shr rax, 6	        35	bitmap.c	FUNCTION_2	CALL_1
0x151	        0x488945f0	             mov qword [rbp - 0x10], rax	        35	bitmap.c	FUNCTION_2	CALL_1
0x155	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        37	bitmap.c	FUNCTION_2	IF_1
0x159	        0x488b4008	                mov rax, qword [rax + 8]	        37	bitmap.c	FUNCTION_2	IF_1
0x15d	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	        37	bitmap.c	FUNCTION_2	IF_1
0x161	     0xf8783000000	                            ja 0x400022a	        37	bitmap.c	FUNCTION_2	IF_1
0x167	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        38	bitmap.c	FUNCTION_2	IF_1
0x16b	        0x488b4008	                mov rax, qword [rax + 8]	        38	bitmap.c	FUNCTION_2	IF_1
0x16f	        0x488945f8	                mov qword [rbp - 8], rax	        38	bitmap.c	FUNCTION_2	IF_1
0x173	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        39	bitmap.c	FUNCTION_2	IF_1
0x177	        0x488d1400	                    lea rdx, [rax + rax]	        39	bitmap.c	FUNCTION_2	IF_1
0x17b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        39	bitmap.c	FUNCTION_2	IF_1
0x17f	        0x48895008	                mov qword [rax + 8], rdx	        39	bitmap.c	FUNCTION_2	IF_1
0x183	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        40	bitmap.c	FUNCTION_2	IF_1	CALL_2
0x187	        0x488b4008	                mov rax, qword [rax + 8]	        40	bitmap.c	FUNCTION_2	IF_1	CALL_2
0x18b	          0x4889c6	                            mov rsi, rax	        40	bitmap.c	FUNCTION_2	IF_1	CALL_2
0x18e	      0xbf08000000	                              mov edi, 8	        40	bitmap.c	FUNCTION_2	IF_1	CALL_2
0x193	      0xe868feffff	                        call sym.st_mult	        40	bitmap.c	FUNCTION_2	IF_1	CALL_2
0x198	          0x4889c2	                            mov rdx, rax	        40	bitmap.c	FUNCTION_2	IF_1	CALL_2
0x19b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        40	bitmap.c	FUNCTION_2	IF_1	CALL_2
0x19f	          0x488b00	                    mov rax, qword [rax]	        40	bitmap.c	FUNCTION_2	IF_1	CALL_2
0x1a2	          0x4889d6	                            mov rsi, rdx	        40	bitmap.c	FUNCTION_2	IF_1	CALL_2
0x1a5	          0x4889c7	                            mov rdi, rax	        40	bitmap.c	FUNCTION_2	IF_1	CALL_2
0x1a8	      0xe800000000	                          call 0x40001ed	        40	bitmap.c	FUNCTION_2	IF_1	CALL_2
0x1ad	          0x4889c2	                            mov rdx, rax	        40	bitmap.c	FUNCTION_2	IF_1	CALL_2
0x1b0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        40	bitmap.c	FUNCTION_2	IF_1	CALL_2
0x1b4	          0x488910	                    mov qword [rax], rdx	        40	bitmap.c	FUNCTION_2	IF_1	CALL_2
0x1b7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        42	bitmap.c	FUNCTION_2	IF_1
0x1bb	        0x488b4008	                mov rax, qword [rax + 8]	        42	bitmap.c	FUNCTION_2	IF_1
0x1bf	        0x482b45f8	                sub rax, qword [rbp - 8]	        42	bitmap.c	FUNCTION_2	IF_1
0x1c3	    0x488d14c50000	                        lea rdx, [rax*8]	        41	bitmap.c	FUNCTION_2	IF_1	CALL_3
0x1cb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        41	bitmap.c	FUNCTION_2	IF_1	CALL_3
0x1cf	          0x488b00	                    mov rax, qword [rax]	        41	bitmap.c	FUNCTION_2	IF_1	CALL_3
0x1d2	        0x488b4df8	                mov rcx, qword [rbp - 8]	        41	bitmap.c	FUNCTION_2	IF_1	CALL_3
0x1d6	        0x48c1e103	                              shl rcx, 3	        41	bitmap.c	FUNCTION_2	IF_1	CALL_3
0x1da	          0x4801c8	                            add rax, rcx	        41	bitmap.c	FUNCTION_2	IF_1	CALL_3
0x1dd	      0xbe00000000	                              mov esi, 0	        41	bitmap.c	FUNCTION_2	IF_1	CALL_3
0x1e2	          0x4889c7	                            mov rdi, rax	        41	bitmap.c	FUNCTION_2	IF_1	CALL_3
0x1e5	      0xe800000000	                          call 0x400022a	        41	bitmap.c	FUNCTION_2	IF_1	CALL_3
0x1ea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        45	bitmap.c	FUNCTION_2	CALL_4
0x1ee	          0x488b00	                    mov rax, qword [rax]	        45	bitmap.c	FUNCTION_2	CALL_4
0x1f1	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        45	bitmap.c	FUNCTION_2	CALL_4
0x1f5	        0x48c1e203	                              shl rdx, 3	        45	bitmap.c	FUNCTION_2	CALL_4
0x1f9	          0x4801c2	                            add rdx, rax	        45	bitmap.c	FUNCTION_2	CALL_4
0x1fc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        45	bitmap.c	FUNCTION_2	CALL_4
0x200	          0x488b00	                    mov rax, qword [rax]	        45	bitmap.c	FUNCTION_2	CALL_4
0x203	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        45	bitmap.c	FUNCTION_2	CALL_4
0x207	        0x48c1e103	                              shl rcx, 3	        45	bitmap.c	FUNCTION_2	CALL_4
0x20b	          0x4801c8	                            add rax, rcx	        45	bitmap.c	FUNCTION_2	CALL_4
0x20e	          0x488b00	                    mov rax, qword [rax]	        45	bitmap.c	FUNCTION_2	CALL_4
0x211	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	        45	bitmap.c	FUNCTION_2	CALL_4
0x215	          0x83e13f	                           and ecx, 0x3f	        45	bitmap.c	FUNCTION_2	CALL_4
0x218	      0xbe01000000	                              mov esi, 1	        45	bitmap.c	FUNCTION_2	CALL_4
0x21d	          0x48d3e6	                             shl rsi, cl	        45	bitmap.c	FUNCTION_2	CALL_4
0x220	          0x4889f1	                            mov rcx, rsi	        45	bitmap.c	FUNCTION_2	CALL_4
0x223	          0x4809c8	                             or rax, rcx	        45	bitmap.c	FUNCTION_2	CALL_4
0x226	          0x488902	                    mov qword [rdx], rax	        45	bitmap.c	FUNCTION_2	CALL_4
0x229	              0x90	                                     nop	        46	bitmap.c	FUNCTION_2
0x22a	              0xc9	                                   leave	        46	bitmap.c	FUNCTION_2
0x22b	              0xc3	                                     ret	        46	bitmap.c	FUNCTION_2
bitmap_popcount	FOR,1:functions,0:CALL,1:ELSE,0:DO,0:IF,0:SWITCH,0:WHILE,0	25
0x7e0	              0x55	                                push rbp	       165	bitmap.c	FUNCTION_10
0x7e1	          0x4889e5	                            mov rbp, rsp	       165	bitmap.c	FUNCTION_10
0x7e4	        0x4883ec18	                           sub rsp, 0x18	       165	bitmap.c	FUNCTION_10
0x7e8	        0x48897de8	             mov qword [rbp - 0x18], rdi	       165	bitmap.c	FUNCTION_10
0x7ec	    0x48c745f80000	                  mov qword [rbp - 8], 0	       166	bitmap.c	FUNCTION_10
0x7f4	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       168	bitmap.c	FUNCTION_10	FOR_1
0x7fc	            0xeb28	                           jmp 0x4000866	       168	bitmap.c	FUNCTION_10	FOR_1
0x7fe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       169	bitmap.c	FUNCTION_10	CALL_1
0x802	          0x488b00	                    mov rax, qword [rax]	       169	bitmap.c	FUNCTION_10	CALL_1
0x805	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       169	bitmap.c	FUNCTION_10	CALL_1
0x809	        0x48c1e203	                              shl rdx, 3	       169	bitmap.c	FUNCTION_10	CALL_1
0x80d	          0x4801d0	                            add rax, rdx	       169	bitmap.c	FUNCTION_10	CALL_1
0x810	          0x488b00	                    mov rax, qword [rax]	       169	bitmap.c	FUNCTION_10	CALL_1
0x813	          0x4889c7	                            mov rdi, rax	       169	bitmap.c	FUNCTION_10	CALL_1
0x816	      0xe837f8ffff	            call sym.ewah_bit_popcount64	       169	bitmap.c	FUNCTION_10	CALL_1
0x81b	            0x89c0	                            mov eax, eax	       169	bitmap.c	FUNCTION_10	CALL_1
0x81d	        0x480145f8	                add qword [rbp - 8], rax	       169	bitmap.c	FUNCTION_10	CALL_1
0x821	      0x488345f001	               add qword [rbp - 0x10], 1	       168	bitmap.c	FUNCTION_10	FOR_1
0x826	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       168	bitmap.c	FUNCTION_10	FOR_1
0x82a	        0x488b4008	                mov rax, qword [rax + 8]	       168	bitmap.c	FUNCTION_10	FOR_1
0x82e	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       168	bitmap.c	FUNCTION_10	FOR_1
0x832	            0x77ca	                            ja 0x400083e	       168	bitmap.c	FUNCTION_10	FOR_1
0x834	        0x488b45f8	                mov rax, qword [rbp - 8]	       171	bitmap.c	FUNCTION_10
0x838	              0xc9	                                   leave	       172	bitmap.c	FUNCTION_10
0x839	              0xc3	                                     ret	       172	bitmap.c	FUNCTION_10
st_mult	FOR,0:functions,0:CALL,2:ELSE,0:DO,0:IF,1:SWITCH,0:WHILE,0	22
0x0	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_30
0x1	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_30
0x4	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_30
0x8	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_30
0xc	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_30
0x10	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_30	IF_1	CALL_1
0x15	            0x7430	                            je 0x4000087	       795	git-compat-util.h	FUNCTION_30	IF_1	CALL_1
0x17	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_30	IF_1	CALL_1
0x1e	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_30	IF_1	CALL_1
0x23	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_30	IF_1	CALL_1
0x27	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_30	IF_1	CALL_1
0x2b	            0x731a	                           jae 0x4000087	       795	git-compat-util.h	FUNCTION_30	IF_1	CALL_1
0x2d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_30	IF_1	CALL_2
0x31	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_30	IF_1	CALL_2
0x35	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_30	IF_1	CALL_2
0x38	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_30	IF_1	CALL_2
0x3d	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_30	IF_1	CALL_2
0x42	      0xe800000000	                          call 0x4000087	       796	git-compat-util.h	FUNCTION_30	IF_1	CALL_2
0x47	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_30
0x4b	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_30
0x50	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_30
0x51	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_30
bitmap_reset	FOR,0:functions,0:CALL,1:ELSE,0:DO,0:IF,0:SWITCH,0:WHILE,0	15
0x90d	              0x55	                                push rbp	       201	bitmap.c	FUNCTION_12
0x90e	          0x4889e5	                            mov rbp, rsp	       201	bitmap.c	FUNCTION_12
0x911	        0x4883ec10	                           sub rsp, 0x10	       201	bitmap.c	FUNCTION_12
0x915	        0x48897df8	                mov qword [rbp - 8], rdi	       201	bitmap.c	FUNCTION_12
0x919	        0x488b45f8	                mov rax, qword [rbp - 8]	       202	bitmap.c	FUNCTION_12	CALL_1
0x91d	        0x488b4008	                mov rax, qword [rax + 8]	       202	bitmap.c	FUNCTION_12	CALL_1
0x921	    0x488d14c50000	                        lea rdx, [rax*8]	       202	bitmap.c	FUNCTION_12	CALL_1
0x929	        0x488b45f8	                mov rax, qword [rbp - 8]	       202	bitmap.c	FUNCTION_12	CALL_1
0x92d	          0x488b00	                    mov rax, qword [rax]	       202	bitmap.c	FUNCTION_12	CALL_1
0x930	      0xbe00000000	                              mov esi, 0	       202	bitmap.c	FUNCTION_12	CALL_1
0x935	          0x4889c7	                            mov rdi, rax	       202	bitmap.c	FUNCTION_12	CALL_1
0x938	      0xe800000000	                          call 0x400097d	       202	bitmap.c	FUNCTION_12	CALL_1
0x93d	              0x90	                                     nop	       203	bitmap.c	FUNCTION_12
0x93e	              0xc9	                                   leave	       203	bitmap.c	FUNCTION_12
0x93f	              0xc3	                                     ret	       203	bitmap.c	FUNCTION_12
bitmap_or_ewah	FOR,0:functions,0:CALL,4:ELSE,0:DO,0:IF,1:SWITCH,0:WHILE,1	85
0x5a7	              0x55	                                push rbp	       120	bitmap.c	FUNCTION_8
0x5a8	          0x4889e5	                            mov rbp, rsp	       120	bitmap.c	FUNCTION_8
0x5ab	        0x4883c480	             add rsp, 0xffffffffffffff80	       120	bitmap.c	FUNCTION_8
0x5af	        0x48897d88	             mov qword [rbp - 0x78], rdi	       120	bitmap.c	FUNCTION_8
0x5b3	        0x48897580	             mov qword [rbp - 0x80], rsi	       120	bitmap.c	FUNCTION_8
0x5b7	    0x64488b042528	                mov rax, qword fs:[0x28]	       120	bitmap.c	FUNCTION_8
0x5c0	        0x488945f8	                mov qword [rbp - 8], rax	       120	bitmap.c	FUNCTION_8
0x5c4	            0x31c0	                            xor eax, eax	       120	bitmap.c	FUNCTION_8
0x5c6	        0x488b4588	             mov rax, qword [rbp - 0x78]	       121	bitmap.c	FUNCTION_8
0x5ca	        0x488b4008	                mov rax, qword [rax + 8]	       121	bitmap.c	FUNCTION_8
0x5ce	        0x488945a0	             mov qword [rbp - 0x60], rax	       121	bitmap.c	FUNCTION_8
0x5d2	        0x488b4580	             mov rax, qword [rbp - 0x80]	       122	bitmap.c	FUNCTION_8
0x5d6	        0x488b4018	            mov rax, qword [rax + 0x18] 	       122	bitmap.c	FUNCTION_8
0x5da	        0x48c1e806	                              shr rax, 6	       122	bitmap.c	FUNCTION_8
0x5de	        0x4883c001	                              add rax, 1	       122	bitmap.c	FUNCTION_8
0x5e2	        0x488945a8	             mov qword [rbp - 0x58], rax	       122	bitmap.c	FUNCTION_8
0x5e6	    0x48c745980000	               mov qword [rbp - 0x68], 0	       123	bitmap.c	FUNCTION_8
0x5ee	        0x488b4588	             mov rax, qword [rbp - 0x78]	       127	bitmap.c	FUNCTION_8	IF_1
0x5f2	        0x488b4008	                mov rax, qword [rax + 8]	       127	bitmap.c	FUNCTION_8	IF_1
0x5f6	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       127	bitmap.c	FUNCTION_8	IF_1
0x5fa	            0x7373	                           jae 0x40006af	       127	bitmap.c	FUNCTION_8	IF_1
0x5fc	        0x488b4588	             mov rax, qword [rbp - 0x78]	       128	bitmap.c	FUNCTION_8	IF_1
0x600	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       128	bitmap.c	FUNCTION_8	IF_1
0x604	        0x48895008	                mov qword [rax + 8], rdx	       128	bitmap.c	FUNCTION_8	IF_1
0x608	        0x488b4588	             mov rax, qword [rbp - 0x78]	       129	bitmap.c	FUNCTION_8	IF_1	CALL_1
0x60c	        0x488b4008	                mov rax, qword [rax + 8]	       129	bitmap.c	FUNCTION_8	IF_1	CALL_1
0x610	          0x4889c6	                            mov rsi, rax	       129	bitmap.c	FUNCTION_8	IF_1	CALL_1
0x613	      0xbf08000000	                              mov edi, 8	       129	bitmap.c	FUNCTION_8	IF_1	CALL_1
0x618	      0xe8e3f9ffff	                        call sym.st_mult	       129	bitmap.c	FUNCTION_8	IF_1	CALL_1
0x61d	          0x4889c2	                            mov rdx, rax	       129	bitmap.c	FUNCTION_8	IF_1	CALL_1
0x620	        0x488b4588	             mov rax, qword [rbp - 0x78]	       129	bitmap.c	FUNCTION_8	IF_1	CALL_1
0x624	          0x488b00	                    mov rax, qword [rax]	       129	bitmap.c	FUNCTION_8	IF_1	CALL_1
0x627	          0x4889d6	                            mov rsi, rdx	       129	bitmap.c	FUNCTION_8	IF_1	CALL_1
0x62a	          0x4889c7	                            mov rdi, rax	       129	bitmap.c	FUNCTION_8	IF_1	CALL_1
0x62d	      0xe800000000	                          call 0x4000672	       129	bitmap.c	FUNCTION_8	IF_1	CALL_1
0x632	          0x4889c2	                            mov rdx, rax	       129	bitmap.c	FUNCTION_8	IF_1	CALL_1
0x635	        0x488b4588	             mov rax, qword [rbp - 0x78]	       129	bitmap.c	FUNCTION_8	IF_1	CALL_1
0x639	          0x488910	                    mov qword [rax], rdx	       129	bitmap.c	FUNCTION_8	IF_1	CALL_1
0x63c	        0x488b4588	             mov rax, qword [rbp - 0x78]	       131	bitmap.c	FUNCTION_8	IF_1
0x640	        0x488b4008	                mov rax, qword [rax + 8]	       131	bitmap.c	FUNCTION_8	IF_1
0x644	        0x482b45a0	             sub rax, qword [rbp - 0x60]	       131	bitmap.c	FUNCTION_8	IF_1
0x648	    0x488d14c50000	                        lea rdx, [rax*8]	       130	bitmap.c	FUNCTION_8	IF_1	CALL_2
0x650	        0x488b4588	             mov rax, qword [rbp - 0x78]	       130	bitmap.c	FUNCTION_8	IF_1	CALL_2
0x654	          0x488b00	                    mov rax, qword [rax]	       130	bitmap.c	FUNCTION_8	IF_1	CALL_2
0x657	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	       130	bitmap.c	FUNCTION_8	IF_1	CALL_2
0x65b	        0x48c1e103	                              shl rcx, 3	       130	bitmap.c	FUNCTION_8	IF_1	CALL_2
0x65f	          0x4801c8	                            add rax, rcx	       130	bitmap.c	FUNCTION_8	IF_1	CALL_2
0x662	      0xbe00000000	                              mov esi, 0	       130	bitmap.c	FUNCTION_8	IF_1	CALL_2
0x667	          0x4889c7	                            mov rdi, rax	       130	bitmap.c	FUNCTION_8	IF_1	CALL_2
0x66a	      0xe800000000	                          call 0x40006af	       130	bitmap.c	FUNCTION_8	IF_1	CALL_2
0x66f	        0x488b5580	             mov rdx, qword [rbp - 0x80]	       134	bitmap.c	FUNCTION_8	CALL_3
0x673	        0x488d45b0	                   lea rax, [rbp - 0x50]	       134	bitmap.c	FUNCTION_8	CALL_3
0x677	          0x4889d6	                            mov rsi, rdx	       134	bitmap.c	FUNCTION_8	CALL_3
0x67a	          0x4889c7	                            mov rdi, rax	       134	bitmap.c	FUNCTION_8	CALL_3
0x67d	      0xe800000000	                          call 0x40006c2	       134	bitmap.c	FUNCTION_8	CALL_3
0x682	            0xeb39	                           jmp 0x40006fd	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_4
0x684	        0x488b4588	             mov rax, qword [rbp - 0x78]	       137	bitmap.c	FUNCTION_8	WHILE_1
0x688	          0x488b08	                    mov rcx, qword [rax]	       137	bitmap.c	FUNCTION_8	WHILE_1
0x68b	        0x488b4598	             mov rax, qword [rbp - 0x68]	       137	bitmap.c	FUNCTION_8	WHILE_1
0x68f	        0x488d5001	                      lea rdx, [rax + 1]	       137	bitmap.c	FUNCTION_8	WHILE_1
0x693	        0x48895598	             mov qword [rbp - 0x68], rdx	       137	bitmap.c	FUNCTION_8	WHILE_1
0x697	    0x488d14c50000	                        lea rdx, [rax*8]	       137	bitmap.c	FUNCTION_8	WHILE_1
0x69f	          0x4801d1	                            add rcx, rdx	       137	bitmap.c	FUNCTION_8	WHILE_1
0x6a2	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       137	bitmap.c	FUNCTION_8	WHILE_1
0x6a6	          0x488b12	                    mov rdx, qword [rdx]	       137	bitmap.c	FUNCTION_8	WHILE_1
0x6a9	        0x48c1e003	                              shl rax, 3	       137	bitmap.c	FUNCTION_8	WHILE_1
0x6ad	          0x4801d0	                            add rax, rdx	       137	bitmap.c	FUNCTION_8	WHILE_1
0x6b0	          0x488b10	                    mov rdx, qword [rax]	       137	bitmap.c	FUNCTION_8	WHILE_1
0x6b3	        0x488b4590	             mov rax, qword [rbp - 0x70]	       137	bitmap.c	FUNCTION_8	WHILE_1
0x6b7	          0x4809d0	                             or rax, rdx	       137	bitmap.c	FUNCTION_8	WHILE_1
0x6ba	          0x488901	                    mov qword [rcx], rax	       137	bitmap.c	FUNCTION_8	WHILE_1
0x6bd	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_4
0x6c1	        0x488d4590	                   lea rax, [rbp - 0x70]	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_4
0x6c5	          0x4889d6	                            mov rsi, rdx	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_4
0x6c8	          0x4889c7	                            mov rdi, rax	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_4
0x6cb	      0xe800000000	                          call 0x4000710	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_4
0x6d0	            0x85c0	                           test eax, eax	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_4
0x6d2	            0x75b0	                           jne 0x40006c4	       136	bitmap.c	FUNCTION_8	WHILE_1	CALL_4
0x6d4	              0x90	                                     nop	       138	bitmap.c	FUNCTION_8
0x6d5	        0x488b45f8	                mov rax, qword [rbp - 8]	       138	bitmap.c	FUNCTION_8
0x6d9	    0x644833042528	                xor rax, qword fs:[0x28]	       138	bitmap.c	FUNCTION_8
0x6e2	            0x7405	                            je 0x4000729	       138	bitmap.c	FUNCTION_8
0x6e4	      0xe800000000	                          call 0x4000729	       138	bitmap.c	FUNCTION_8
0x6e9	              0xc9	                                   leave	       138	bitmap.c	FUNCTION_8
0x6ea	              0xc3	                                     ret	       138	bitmap.c	FUNCTION_8
bitmap_each_bit	FOR,3:functions,0:CALL,3:ELSE,1:DO,0:IF,2:SWITCH,0:WHILE,0	70
0x6eb	              0x55	                                push rbp	       141	bitmap.c	FUNCTION_9
0x6ec	          0x4889e5	                            mov rbp, rsp	       141	bitmap.c	FUNCTION_9
0x6ef	        0x4883ec40	                           sub rsp, 0x40	       141	bitmap.c	FUNCTION_9
0x6f3	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       141	bitmap.c	FUNCTION_9
0x6f7	        0x488975d0	             mov qword [rbp - 0x30], rsi	       141	bitmap.c	FUNCTION_9
0x6fb	        0x488955c8	             mov qword [rbp - 0x38], rdx	       141	bitmap.c	FUNCTION_9
0x6ff	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       142	bitmap.c	FUNCTION_9
0x707	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       144	bitmap.c	FUNCTION_9	FOR_1
0x70f	      0xe9b7000000	                           jmp 0x400080b	       144	bitmap.c	FUNCTION_9	FOR_1
0x714	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       145	bitmap.c	FUNCTION_9	FOR_1
0x718	          0x488b00	                    mov rax, qword [rax]	       145	bitmap.c	FUNCTION_9	FOR_1
0x71b	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       145	bitmap.c	FUNCTION_9	FOR_1
0x71f	        0x48c1e203	                              shl rdx, 3	       145	bitmap.c	FUNCTION_9	FOR_1
0x723	          0x4801d0	                            add rax, rdx	       145	bitmap.c	FUNCTION_9	FOR_1
0x726	          0x488b00	                    mov rax, qword [rax]	       145	bitmap.c	FUNCTION_9	FOR_1
0x729	        0x488945f8	                mov qword [rbp - 8], rax	       145	bitmap.c	FUNCTION_9	FOR_1
0x72d	      0x48837df8ff	 cmp qword [rbp - 8], 0xffffffffffffffff	       148	bitmap.c	FUNCTION_9	FOR_1	IF_1
0x732	            0x7531	                           jne 0x40007a5	       148	bitmap.c	FUNCTION_9	FOR_1	IF_1
0x734	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       149	bitmap.c	FUNCTION_9	FOR_1	IF_1	FOR_2
0x73b	            0xeb20	                           jmp 0x400079d	       149	bitmap.c	FUNCTION_9	FOR_1	IF_1	FOR_2
0x73d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       150	bitmap.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x741	        0x488d5001	                      lea rdx, [rax + 1]	       150	bitmap.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x745	        0x488955e8	             mov qword [rbp - 0x18], rdx	       150	bitmap.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x749	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       150	bitmap.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x74d	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       150	bitmap.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x751	          0x4889ce	                            mov rsi, rcx	       150	bitmap.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x754	          0x4889c7	                            mov rdi, rax	       150	bitmap.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x757	            0xffd2	                                call rdx	       150	bitmap.c	FUNCTION_9	FOR_1	IF_1	CALL_1
0x759	        0x8345e401	               add dword [rbp - 0x1c], 1	       149	bitmap.c	FUNCTION_9	FOR_1	IF_1	FOR_2
0x75d	        0x837de43f	           cmp dword [rbp - 0x1c], 0x3f 	       149	bitmap.c	FUNCTION_9	FOR_1	IF_1	FOR_2
0x761	            0x76da	                           jbe 0x400077d	       149	bitmap.c	FUNCTION_9	FOR_1	IF_1	FOR_2
0x763	            0xeb61	                           jmp 0x4000806	       149	bitmap.c	FUNCTION_9	FOR_1	IF_1	FOR_2
0x765	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	       152	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3
0x76c	            0xeb4a	                           jmp 0x40007f8	       152	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3
0x76e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       153	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	IF_2
0x771	        0x488b55f8	                mov rdx, qword [rbp - 8]	       153	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	IF_2
0x775	            0x89c1	                            mov ecx, eax	       153	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	IF_2
0x777	          0x48d3ea	                             shr rdx, cl	       153	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	IF_2
0x77a	          0x4889d0	                            mov rax, rdx	       153	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	IF_2
0x77d	          0x4885c0	                           test rax, rax	       153	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	IF_2
0x780	            0x743e	                            je 0x4000800	       153	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	IF_2
0x782	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       156	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_2
0x785	        0x488b55f8	                mov rdx, qword [rbp - 8]	       156	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_2
0x789	            0x89c1	                            mov ecx, eax	       156	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_2
0x78b	          0x48d3ea	                             shr rdx, cl	       156	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_2
0x78e	          0x4889d0	                            mov rax, rdx	       156	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_2
0x791	      0xf3480fbcc0	                          tzcnt rax, rax	       156	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_2
0x796	           0x145e4	             add dword [rbp - 0x1c], eax	       156	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_2
0x799	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       157	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_3
0x79c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       157	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_3
0x7a0	        0x488d0c02	                    lea rcx, [rdx + rax]	       157	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_3
0x7a4	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       157	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_3
0x7a8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       157	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_3
0x7ac	          0x4889d6	                            mov rsi, rdx	       157	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_3
0x7af	          0x4889cf	                            mov rdi, rcx	       157	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_3
0x7b2	            0xffd0	                                call rax	       157	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	CALL_3
0x7b4	        0x8345e401	               add dword [rbp - 0x1c], 1	       152	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3
0x7b8	        0x837de43f	           cmp dword [rbp - 0x1c], 0x3f 	       152	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3
0x7bc	            0x76b0	                           jbe 0x40007ae	       152	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3
0x7be	            0xeb01	                           jmp 0x4000801	       152	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3
0x7c0	              0x90	                                     nop	       154	bitmap.c	FUNCTION_9	FOR_1	ELSE_1	FOR_3	IF_2
0x7c1	      0x488345e840	           add qword [rbp - 0x18], 0x40 	       159	bitmap.c	FUNCTION_9	FOR_1	ELSE_1
0x7c6	      0x488345f001	               add qword [rbp - 0x10], 1	       144	bitmap.c	FUNCTION_9	FOR_1
0x7cb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       144	bitmap.c	FUNCTION_9	FOR_1
0x7cf	        0x488b4008	                mov rax, qword [rax + 8]	       144	bitmap.c	FUNCTION_9	FOR_1
0x7d3	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       144	bitmap.c	FUNCTION_9	FOR_1
0x7d7	     0xf8737ffffff	                            ja 0x4000754	       144	bitmap.c	FUNCTION_9	FOR_1
0x7dd	              0x90	                                     nop	       162	bitmap.c	FUNCTION_9
0x7de	              0xc9	                                   leave	       162	bitmap.c	FUNCTION_9
0x7df	              0xc3	                                     ret	       162	bitmap.c	FUNCTION_9
bitmap_equals	FOR,2:functions,0:CALL,0:ELSE,1:DO,0:IF,3:SWITCH,0:WHILE,0	61
0x83a	              0x55	                                push rbp	       175	bitmap.c	FUNCTION_11
0x83b	          0x4889e5	                            mov rbp, rsp	       175	bitmap.c	FUNCTION_11
0x83e	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       175	bitmap.c	FUNCTION_11
0x842	        0x488975d0	             mov qword [rbp - 0x30], rsi	       175	bitmap.c	FUNCTION_11
0x846	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       179	bitmap.c	FUNCTION_11	IF_1
0x84a	        0x488b5008	                mov rdx, qword [rax + 8]	       179	bitmap.c	FUNCTION_11	IF_1
0x84e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       179	bitmap.c	FUNCTION_11	IF_1
0x852	        0x488b4008	                mov rax, qword [rax + 8]	       179	bitmap.c	FUNCTION_11	IF_1
0x856	          0x4839c2	                            cmp rdx, rax	       179	bitmap.c	FUNCTION_11	IF_1
0x859	            0x7312	                           jae 0x40008ad	       179	bitmap.c	FUNCTION_11	IF_1
0x85b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       180	bitmap.c	FUNCTION_11	IF_1
0x85f	        0x488945f0	             mov qword [rbp - 0x10], rax	       180	bitmap.c	FUNCTION_11	IF_1
0x863	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       181	bitmap.c	FUNCTION_11	IF_1
0x867	        0x488945e8	             mov qword [rbp - 0x18], rax	       181	bitmap.c	FUNCTION_11	IF_1
0x86b	            0xeb10	                           jmp 0x40008bd	       181	bitmap.c	FUNCTION_11	IF_1
0x86d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       183	bitmap.c	FUNCTION_11	ELSE_1
0x871	        0x488945f0	             mov qword [rbp - 0x10], rax	       183	bitmap.c	FUNCTION_11	ELSE_1
0x875	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       184	bitmap.c	FUNCTION_11	ELSE_1
0x879	        0x488945e8	             mov qword [rbp - 0x18], rax	       184	bitmap.c	FUNCTION_11	ELSE_1
0x87d	    0x48c745f80000	                  mov qword [rbp - 8], 0	       187	bitmap.c	FUNCTION_11	FOR_1
0x885	            0xeb3b	                           jmp 0x4000902	       187	bitmap.c	FUNCTION_11	FOR_1
0x887	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x88b	          0x488b00	                    mov rax, qword [rax]	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x88e	        0x488b55f8	                mov rdx, qword [rbp - 8]	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x892	        0x48c1e203	                              shl rdx, 3	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x896	          0x4801d0	                            add rax, rdx	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x899	          0x488b10	                    mov rdx, qword [rax]	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x89c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x8a0	          0x488b00	                    mov rax, qword [rax]	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x8a3	        0x488b4df8	                mov rcx, qword [rbp - 8]	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x8a7	        0x48c1e103	                              shl rcx, 3	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x8ab	          0x4801c8	                            add rax, rcx	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x8ae	          0x488b00	                    mov rax, qword [rax]	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x8b1	          0x4839c2	                            cmp rdx, rax	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x8b4	            0x7407	                            je 0x40008fd	       188	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x8b6	      0xb800000000	                              mov eax, 0	       189	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x8bb	            0xeb4e	                           jmp 0x400094b	       189	bitmap.c	FUNCTION_11	FOR_1	IF_2
0x8bd	      0x488345f801	                  add qword [rbp - 8], 1	       187	bitmap.c	FUNCTION_11	FOR_1
0x8c2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       187	bitmap.c	FUNCTION_11	FOR_1
0x8c6	        0x488b4008	                mov rax, qword [rax + 8]	       187	bitmap.c	FUNCTION_11	FOR_1
0x8ca	        0x483b45f8	                cmp rax, qword [rbp - 8]	       187	bitmap.c	FUNCTION_11	FOR_1
0x8ce	            0x77b7	                            ja 0x40008c7	       187	bitmap.c	FUNCTION_11	FOR_1
0x8d0	            0xeb26	                           jmp 0x4000938	       192	bitmap.c	FUNCTION_11	FOR_2
0x8d2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x8d6	          0x488b00	                    mov rax, qword [rax]	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x8d9	        0x488b55f8	                mov rdx, qword [rbp - 8]	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x8dd	        0x48c1e203	                              shl rdx, 3	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x8e1	          0x4801d0	                            add rax, rdx	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x8e4	          0x488b00	                    mov rax, qword [rax]	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x8e7	          0x4885c0	                           test rax, rax	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x8ea	            0x7407	                            je 0x4000933	       193	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x8ec	      0xb800000000	                              mov eax, 0	       194	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x8f1	            0xeb18	                           jmp 0x400094b	       194	bitmap.c	FUNCTION_11	FOR_2	IF_3
0x8f3	      0x488345f801	                  add qword [rbp - 8], 1	       192	bitmap.c	FUNCTION_11	FOR_2
0x8f8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       192	bitmap.c	FUNCTION_11	FOR_2
0x8fc	        0x488b4008	                mov rax, qword [rax + 8]	       192	bitmap.c	FUNCTION_11	FOR_2
0x900	        0x483b45f8	                cmp rax, qword [rbp - 8]	       192	bitmap.c	FUNCTION_11	FOR_2
0x904	            0x77cc	                            ja 0x4000912	       192	bitmap.c	FUNCTION_11	FOR_2
0x906	      0xb801000000	                              mov eax, 1	       197	bitmap.c	FUNCTION_11
0x90b	              0x5d	                                 pop rbp	       198	bitmap.c	FUNCTION_11
0x90c	              0xc3	                                     ret	       198	bitmap.c	FUNCTION_11
ewah_to_bitmap	FOR,0:functions,0:CALL,4:ELSE,0:DO,0:IF,0:SWITCH,0:WHILE,1	89
0x3ce	              0x55	                                push rbp	        91	bitmap.c	FUNCTION_6
0x3cf	          0x4889e5	                            mov rbp, rsp	        91	bitmap.c	FUNCTION_6
0x3d2	        0x4883c480	             add rsp, 0xffffffffffffff80	        91	bitmap.c	FUNCTION_6
0x3d6	        0x48897d88	             mov qword [rbp - 0x78], rdi	        91	bitmap.c	FUNCTION_6
0x3da	    0x64488b042528	                mov rax, qword fs:[0x28]	        91	bitmap.c	FUNCTION_6
0x3e3	        0x488945f8	                mov qword [rbp - 8], rax	        91	bitmap.c	FUNCTION_6
0x3e7	            0x31c0	                            xor eax, eax	        91	bitmap.c	FUNCTION_6
0x3e9	      0xe800000000	                          call 0x400042e	        92	bitmap.c	FUNCTION_6	CALL_1
0x3ee	        0x488945a8	             mov qword [rbp - 0x58], rax	        92	bitmap.c	FUNCTION_6	CALL_1
0x3f2	    0x48c745a00000	               mov qword [rbp - 0x60], 0	        95	bitmap.c	FUNCTION_6
0x3fa	        0x488b5588	             mov rdx, qword [rbp - 0x78]	        97	bitmap.c	FUNCTION_6	CALL_2
0x3fe	        0x488d45b0	                   lea rax, [rbp - 0x50]	        97	bitmap.c	FUNCTION_6	CALL_2
0x402	          0x4889d6	                            mov rsi, rdx	        97	bitmap.c	FUNCTION_6	CALL_2
0x405	          0x4889c7	                            mov rdi, rax	        97	bitmap.c	FUNCTION_6	CALL_2
0x408	      0xe800000000	                          call 0x400044d	        97	bitmap.c	FUNCTION_6	CALL_2
0x40d	      0xe9cc000000	                           jmp 0x400051e	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x412	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x416	        0x488d5001	                      lea rdx, [rax + 1]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x41a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x41e	        0x488b4008	                mov rax, qword [rax + 8]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x422	          0x4839c2	                            cmp rdx, rax	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x425	     0xf8691000000	                           jbe 0x40004fc	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x42b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x42f	        0x488b5008	                mov rdx, qword [rax + 8]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x433	          0x4889d0	                            mov rax, rdx	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x436	          0x4801c0	                            add rax, rax	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x439	          0x4801d0	                            add rax, rdx	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x43c	        0x4883c030	                           add rax, 0x30	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x440	          0x48d1e8	                              shr rax, 1	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x443	          0x4889c2	                            mov rdx, rax	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x446	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x44a	        0x4883c001	                              add rax, 1	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x44e	          0x4839c2	                            cmp rdx, rax	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x451	            0x7312	                           jae 0x40004a5	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x453	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x457	        0x488d5001	                      lea rdx, [rax + 1]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x45b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x45f	        0x48895008	                mov qword [rax + 8], rdx	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x463	            0xeb23	                           jmp 0x40004c8	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x465	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x469	        0x488b5008	                mov rdx, qword [rax + 8]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x46d	          0x4889d0	                            mov rax, rdx	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x470	          0x4801c0	                            add rax, rax	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x473	          0x4801d0	                            add rax, rdx	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x476	        0x4883c030	                           add rax, 0x30	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x47a	          0x48d1e8	                              shr rax, 1	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x47d	          0x4889c2	                            mov rdx, rax	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x480	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x484	        0x48895008	                mov qword [rax + 8], rdx	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x488	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x48c	        0x488b4008	                mov rax, qword [rax + 8]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x490	          0x4889c6	                            mov rsi, rax	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x493	      0xbf08000000	                              mov edi, 8	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x498	      0xe863fbffff	                        call sym.st_mult	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x49d	          0x4889c2	                            mov rdx, rax	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4a0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4a4	          0x488b00	                    mov rax, qword [rax]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4a7	          0x4889d6	                            mov rsi, rdx	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4aa	          0x4889c7	                            mov rdi, rax	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4ad	      0xe800000000	                          call 0x40004f2	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4b2	          0x4889c2	                            mov rdx, rax	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4b5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4b9	          0x488910	                    mov qword [rax], rdx	       100	bitmap.c	FUNCTION_6	WHILE_1	CALL_4
0x4bc	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       101	bitmap.c	FUNCTION_6	WHILE_1
0x4c0	          0x488b08	                    mov rcx, qword [rax]	       101	bitmap.c	FUNCTION_6	WHILE_1
0x4c3	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       101	bitmap.c	FUNCTION_6	WHILE_1
0x4c7	        0x488d5001	                      lea rdx, [rax + 1]	       101	bitmap.c	FUNCTION_6	WHILE_1
0x4cb	        0x488955a0	             mov qword [rbp - 0x60], rdx	       101	bitmap.c	FUNCTION_6	WHILE_1
0x4cf	        0x48c1e003	                              shl rax, 3	       101	bitmap.c	FUNCTION_6	WHILE_1
0x4d3	        0x488d1401	                    lea rdx, [rcx + rax]	       101	bitmap.c	FUNCTION_6	WHILE_1
0x4d7	        0x488b4598	             mov rax, qword [rbp - 0x68]	       101	bitmap.c	FUNCTION_6	WHILE_1
0x4db	          0x488902	                    mov qword [rdx], rax	       101	bitmap.c	FUNCTION_6	WHILE_1
0x4de	        0x488d55b0	                   lea rdx, [rbp - 0x50]	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x4e2	        0x488d4598	                   lea rax, [rbp - 0x68]	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x4e6	          0x4889d6	                            mov rsi, rdx	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x4e9	          0x4889c7	                            mov rdi, rax	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x4ec	      0xe800000000	                          call 0x4000531	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x4f1	            0x85c0	                           test eax, eax	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x4f3	     0xf8519ffffff	                           jne 0x4000452	        99	bitmap.c	FUNCTION_6	WHILE_1	CALL_3
0x4f9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       104	bitmap.c	FUNCTION_6
0x4fd	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	       104	bitmap.c	FUNCTION_6
0x501	        0x48895008	                mov qword [rax + 8], rdx	       104	bitmap.c	FUNCTION_6
0x505	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       105	bitmap.c	FUNCTION_6
0x509	        0x488b4df8	                mov rcx, qword [rbp - 8]	       106	bitmap.c	FUNCTION_6
0x50d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       106	bitmap.c	FUNCTION_6
0x516	            0x7405	                            je 0x400055d	       106	bitmap.c	FUNCTION_6
0x518	      0xe800000000	                          call 0x400055d	       106	bitmap.c	FUNCTION_6
0x51d	              0xc9	                                   leave	       106	bitmap.c	FUNCTION_6
0x51e	              0xc3	                                     ret	       106	bitmap.c	FUNCTION_6
bitmap_clear	FOR,0:functions,0:CALL,2:ELSE,0:DO,0:IF,1:SWITCH,0:WHILE,0	33
0x22c	              0x55	                                push rbp	        49	bitmap.c	FUNCTION_3
0x22d	          0x4889e5	                            mov rbp, rsp	        49	bitmap.c	FUNCTION_3
0x230	        0x48897de8	             mov qword [rbp - 0x18], rdi	        49	bitmap.c	FUNCTION_3
0x234	        0x488975e0	             mov qword [rbp - 0x20], rsi	        49	bitmap.c	FUNCTION_3
0x238	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        50	bitmap.c	FUNCTION_3	CALL_1
0x23c	        0x48c1e806	                              shr rax, 6	        50	bitmap.c	FUNCTION_3	CALL_1
0x240	        0x488945f8	                mov qword [rbp - 8], rax	        50	bitmap.c	FUNCTION_3	CALL_1
0x244	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        52	bitmap.c	FUNCTION_3	IF_1
0x248	        0x488b4008	                mov rax, qword [rax + 8]	        52	bitmap.c	FUNCTION_3	IF_1
0x24c	        0x483b45f8	                cmp rax, qword [rbp - 8]	        52	bitmap.c	FUNCTION_3	IF_1
0x250	            0x7642	                           jbe 0x40002d4	        52	bitmap.c	FUNCTION_3	IF_1
0x252	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        53	bitmap.c	FUNCTION_3	CALL_2
0x256	          0x488b00	                    mov rax, qword [rax]	        53	bitmap.c	FUNCTION_3	CALL_2
0x259	        0x488b55f8	                mov rdx, qword [rbp - 8]	        53	bitmap.c	FUNCTION_3	CALL_2
0x25d	        0x48c1e203	                              shl rdx, 3	        53	bitmap.c	FUNCTION_3	CALL_2
0x261	          0x4801c2	                            add rdx, rax	        53	bitmap.c	FUNCTION_3	CALL_2
0x264	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        53	bitmap.c	FUNCTION_3	CALL_2
0x268	          0x488b00	                    mov rax, qword [rax]	        53	bitmap.c	FUNCTION_3	CALL_2
0x26b	        0x488b4df8	                mov rcx, qword [rbp - 8]	        53	bitmap.c	FUNCTION_3	CALL_2
0x26f	        0x48c1e103	                              shl rcx, 3	        53	bitmap.c	FUNCTION_3	CALL_2
0x273	          0x4801c8	                            add rax, rcx	        53	bitmap.c	FUNCTION_3	CALL_2
0x276	          0x488b00	                    mov rax, qword [rax]	        53	bitmap.c	FUNCTION_3	CALL_2
0x279	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	        53	bitmap.c	FUNCTION_3	CALL_2
0x27d	          0x83e13f	                           and ecx, 0x3f	        53	bitmap.c	FUNCTION_3	CALL_2
0x280	      0xbe01000000	                              mov esi, 1	        53	bitmap.c	FUNCTION_3	CALL_2
0x285	          0x48d3e6	                             shl rsi, cl	        53	bitmap.c	FUNCTION_3	CALL_2
0x288	          0x4889f1	                            mov rcx, rsi	        53	bitmap.c	FUNCTION_3	CALL_2
0x28b	          0x48f7d1	                                 not rcx	        53	bitmap.c	FUNCTION_3	CALL_2
0x28e	          0x4821c8	                            and rax, rcx	        53	bitmap.c	FUNCTION_3	CALL_2
0x291	          0x488902	                    mov qword [rdx], rax	        53	bitmap.c	FUNCTION_3	CALL_2
0x294	              0x90	                                     nop	        54	bitmap.c	FUNCTION_3
0x295	              0x5d	                                 pop rbp	        54	bitmap.c	FUNCTION_3
0x296	              0xc3	                                     ret	        54	bitmap.c	FUNCTION_3
