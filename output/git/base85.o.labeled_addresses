encode_85	ELSE,0:CALL,3:WHILE,1:SWITCH,0:functions,0:IF,1:FOR,2:DO,0	66
0x1c3	              0x55	                                push rbp	        80	base85.c	FUNCTION_3
0x1c4	          0x4889e5	                            mov rbp, rsp	        80	base85.c	FUNCTION_3
0x1c7	        0x48897de8	             mov qword [rbp - 0x18], rdi	        80	base85.c	FUNCTION_3
0x1cb	        0x488975e0	             mov qword [rbp - 0x20], rsi	        80	base85.c	FUNCTION_3
0x1cf	          0x8955dc	             mov dword [rbp - 0x24], edx	        80	base85.c	FUNCTION_3
0x1d2	      0xe9ab000000	                           jmp 0x40002c2	        82	base85.c	FUNCTION_3	WHILE_1
0x1d7	    0xc745f0000000	               mov dword [rbp - 0x10], 0	        83	base85.c	FUNCTION_3	WHILE_1
0x1de	    0xc745f4180000	            mov dword [rbp - 0xc], 0x18 	        85	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x1e5	            0xeb32	                           jmp 0x4000259	        85	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x1e7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        86	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x1eb	        0x488d5001	                      lea rdx, [rax + 1]	        86	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x1ef	        0x488955e0	             mov qword [rbp - 0x20], rdx	        86	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x1f3	           0xfb600	                   movzx eax, byte [rax]	        86	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x1f6	           0xfb6c0	                           movzx eax, al	        86	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x1f9	          0x8945f8	                mov dword [rbp - 8], eax	        86	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x1fc	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        87	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x1ff	          0x8b55f8	                mov edx, dword [rbp - 8]	        87	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x202	            0x89c1	                            mov ecx, eax	        87	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x204	            0xd3e2	                             shl edx, cl	        87	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x206	            0x89d0	                            mov eax, edx	        87	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x208	           0x945f0	              or dword [rbp - 0x10], eax	        87	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x20b	        0x836ddc01	               sub dword [rbp - 0x24], 1	        88	base85.c	FUNCTION_3	WHILE_1	FOR_1	IF_1
0x20f	        0x837ddc00	               cmp dword [rbp - 0x24], 0	        88	base85.c	FUNCTION_3	WHILE_1	FOR_1	IF_1
0x213	            0x740c	                            je 0x4000261	        88	base85.c	FUNCTION_3	WHILE_1	FOR_1	IF_1
0x215	        0x836df408	                sub dword [rbp - 0xc], 8	        85	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x219	        0x837df400	                cmp dword [rbp - 0xc], 0	        85	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x21d	            0x79c8	                           jns 0x4000227	        85	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x21f	            0xeb01	                           jmp 0x4000262	        85	base85.c	FUNCTION_3	WHILE_1	FOR_1
0x221	              0x90	                                     nop	        89	base85.c	FUNCTION_3	WHILE_1	FOR_1	IF_1
0x222	    0xc745f4040000	                mov dword [rbp - 0xc], 4	        92	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x229	            0xeb4c	                           jmp 0x40002b7	        92	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x22b	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	        93	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x22e	      0xbac1c0c0c0	                     mov edx, 0xc0c0c0c1	        93	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x233	            0x89c8	                            mov eax, ecx	        93	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x235	            0xf7e2	                                 mul edx	        93	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x237	            0x89d0	                            mov eax, edx	        93	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x239	          0xc1e806	                              shr eax, 6	        93	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x23c	          0x6bc055	                     imul eax, eax, 0x55	        93	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x23f	            0x29c1	                            sub ecx, eax	        93	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x241	            0x89c8	                            mov eax, ecx	        93	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x243	          0x8945fc	                mov dword [rbp - 4], eax	        93	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x246	          0x8b45f0	             mov eax, dword [rbp - 0x10]	        94	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x249	      0xbac1c0c0c0	                     mov edx, 0xc0c0c0c1	        94	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x24e	            0xf7e2	                                 mul edx	        94	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x250	            0x89d0	                            mov eax, edx	        94	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x252	          0xc1e806	                              shr eax, 6	        94	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x255	          0x8945f0	             mov dword [rbp - 0x10], eax	        94	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x258	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x25b	          0x4863d0	                         movsxd rdx, eax	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x25e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x262	          0x4801c2	                            add rdx, rax	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x265	          0x8b45fc	                mov eax, dword [rbp - 4]	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x268	            0x4898	                                    cdqe	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x26a	     0xfb680000000	                   movzx eax, byte [rax]	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x271	            0x8802	                      mov byte [rdx], al	        95	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x273	        0x836df401	                sub dword [rbp - 0xc], 1	        92	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x277	        0x837df400	                cmp dword [rbp - 0xc], 0	        92	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x27b	            0x79ae	                           jns 0x400026b	        92	base85.c	FUNCTION_3	WHILE_1	FOR_2
0x27d	      0x488345e805	               add qword [rbp - 0x18], 5	        97	base85.c	FUNCTION_3	WHILE_1
0x282	        0x837ddc00	               cmp dword [rbp - 0x24], 0	        82	base85.c	FUNCTION_3	WHILE_1
0x286	     0xf854bffffff	                           jne 0x4000217	        82	base85.c	FUNCTION_3	WHILE_1
0x28c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       101	base85.c	FUNCTION_3
0x290	          0xc60000	                       mov byte [rax], 0	       101	base85.c	FUNCTION_3
0x293	              0x90	                                     nop	       102	base85.c	FUNCTION_3
0x294	              0x5d	                                 pop rbp	       102	base85.c	FUNCTION_3
0x295	              0xc3	                                     ret	       102	base85.c	FUNCTION_3
prep_base85	ELSE,0:CALL,1:WHILE,0:SWITCH,0:functions,0:IF,1:FOR,1:DO,0	26
0xb	              0x55	                                push rbp	        30	base85.c	FUNCTION_1
0xc	          0x4889e5	                            mov rbp, rsp	        30	base85.c	FUNCTION_1
0xf	     0xfb605000000	           movzx eax, byte [0x04000056] 	        32	base85.c	FUNCTION_1	IF_1
0x16	            0x84c0	                             test al, al	        32	base85.c	FUNCTION_1	IF_1
0x18	            0x753c	                           jne 0x4000096	        32	base85.c	FUNCTION_1	IF_1
0x1a	    0xc745f8000000	                  mov dword [rbp - 8], 0	        34	base85.c	FUNCTION_1	FOR_1	CALL_1
0x21	            0xeb29	                           jmp 0x400008c	        34	base85.c	FUNCTION_1	FOR_1	CALL_1
0x23	          0x8b45f8	                mov eax, dword [rbp - 8]	        35	base85.c	FUNCTION_1	FOR_1
0x26	            0x4898	                                    cdqe	        35	base85.c	FUNCTION_1	FOR_1
0x28	     0xfb680000000	                   movzx eax, byte [rax]	        35	base85.c	FUNCTION_1	FOR_1
0x2f	           0xfbec0	                           movsx eax, al	        35	base85.c	FUNCTION_1	FOR_1
0x32	          0x8945fc	                mov dword [rbp - 4], eax	        35	base85.c	FUNCTION_1	FOR_1
0x35	          0x8b45f8	                mov eax, dword [rbp - 8]	        36	base85.c	FUNCTION_1	FOR_1
0x38	          0x83c001	                              add eax, 1	        36	base85.c	FUNCTION_1	FOR_1
0x3b	            0x89c2	                            mov edx, eax	        36	base85.c	FUNCTION_1	FOR_1
0x3d	          0x8b45fc	                mov eax, dword [rbp - 4]	        36	base85.c	FUNCTION_1	FOR_1
0x40	            0x4898	                                    cdqe	        36	base85.c	FUNCTION_1	FOR_1
0x42	    0x889000000000	                      mov byte [rax], dl	        36	base85.c	FUNCTION_1	FOR_1
0x48	        0x8345f801	                  add dword [rbp - 8], 1	        34	base85.c	FUNCTION_1	FOR_1	CALL_1
0x4c	          0x8b45f8	                mov eax, dword [rbp - 8]	        34	base85.c	FUNCTION_1	FOR_1	CALL_1
0x4f	          0x83f854	                           cmp eax, 0x54	        34	base85.c	FUNCTION_1	FOR_1	CALL_1
0x52	            0x76cf	                           jbe 0x4000063	        34	base85.c	FUNCTION_1	FOR_1	CALL_1
0x54	            0xeb01	                           jmp 0x4000097	        34	base85.c	FUNCTION_1	FOR_1	CALL_1
0x56	              0x90	                                     nop	        33	base85.c	FUNCTION_1	IF_1
0x57	              0x5d	                                 pop rbp	        38	base85.c	FUNCTION_1
0x58	              0xc3	                                     ret	        38	base85.c	FUNCTION_1
decode_85	ELSE,0:CALL,7:WHILE,1:SWITCH,0:functions,0:IF,3:FOR,0:DO,2	98
0x59	              0x55	                                push rbp	        41	base85.c	FUNCTION_2
0x5a	          0x4889e5	                            mov rbp, rsp	        41	base85.c	FUNCTION_2
0x5d	        0x4883ec30	                           sub rsp, 0x30	        41	base85.c	FUNCTION_2
0x61	        0x48897de8	             mov qword [rbp - 0x18], rdi	        41	base85.c	FUNCTION_2
0x65	        0x488975e0	             mov qword [rbp - 0x20], rsi	        41	base85.c	FUNCTION_2
0x69	          0x8955dc	             mov dword [rbp - 0x24], edx	        41	base85.c	FUNCTION_2
0x6c	      0xe89affffff	                    call sym.prep_base85	        42	base85.c	FUNCTION_2	CALL_1
0x71	      0xe93c010000	                           jmp 0x40001f2	        45	base85.c	FUNCTION_2	WHILE_1
0x76	    0xc745f4000000	                mov dword [rbp - 0xc], 0	        46	base85.c	FUNCTION_2	WHILE_1
0x7d	    0xc745f8040000	                  mov dword [rbp - 8], 4	        47	base85.c	FUNCTION_2	WHILE_1
0x84	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        50	base85.c	FUNCTION_2	WHILE_1	DO_1
0x88	        0x488d5001	                      lea rdx, [rax + 1]	        50	base85.c	FUNCTION_2	WHILE_1	DO_1
0x8c	        0x488955e0	             mov qword [rbp - 0x20], rdx	        50	base85.c	FUNCTION_2	WHILE_1	DO_1
0x90	           0xfb600	                   movzx eax, byte [rax]	        50	base85.c	FUNCTION_2	WHILE_1	DO_1
0x93	          0x8845f3	                mov byte [rbp - 0xd], al	        50	base85.c	FUNCTION_2	WHILE_1	DO_1
0x96	         0xfb645f3	             movzx eax, byte [rbp - 0xd]	        51	base85.c	FUNCTION_2	WHILE_1	DO_1
0x9a	            0x4898	                                    cdqe	        51	base85.c	FUNCTION_2	WHILE_1	DO_1
0x9c	     0xfb680000000	                   movzx eax, byte [rax]	        51	base85.c	FUNCTION_2	WHILE_1	DO_1
0xa3	           0xfbec0	                           movsx eax, al	        51	base85.c	FUNCTION_2	WHILE_1	DO_1
0xa6	          0x8945fc	                mov dword [rbp - 4], eax	        51	base85.c	FUNCTION_2	WHILE_1	DO_1
0xa9	        0x836dfc01	                  sub dword [rbp - 4], 1	        52	base85.c	FUNCTION_2	WHILE_1	DO_1	IF_1
0xad	        0x837dfc00	                  cmp dword [rbp - 4], 0	        52	base85.c	FUNCTION_2	WHILE_1	DO_1	IF_1
0xb1	            0x791f	                           jns 0x4000112	        52	base85.c	FUNCTION_2	WHILE_1	DO_1	IF_1
0xb3	         0xfb645f3	             movzx eax, byte [rbp - 0xd]	        53	base85.c	FUNCTION_2	WHILE_1	DO_1	CALL_3
0xb7	            0x89c6	                            mov esi, eax	        53	base85.c	FUNCTION_2	WHILE_1	DO_1	CALL_3
0xb9	      0xbf00000000	                              mov edi, 0	        53	base85.c	FUNCTION_2	WHILE_1	DO_1	CALL_3
0xbe	      0xb800000000	                              mov eax, 0	        53	base85.c	FUNCTION_2	WHILE_1	DO_1	CALL_3
0xc3	      0xe800000000	                          call 0x4000108	        53	base85.c	FUNCTION_2	WHILE_1	DO_1	CALL_3
0xc8	      0xe833ffffff	                    call sym.const_error	        53	base85.c	FUNCTION_2	WHILE_1	DO_1	CALL_3
0xcd	      0xe9ef000000	                           jmp 0x4000201	        53	base85.c	FUNCTION_2	WHILE_1	DO_1	CALL_3
0xd2	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        54	base85.c	FUNCTION_2	WHILE_1	DO_1
0xd5	          0x6bd055	                     imul edx, eax, 0x55	        54	base85.c	FUNCTION_2	WHILE_1	DO_1
0xd8	          0x8b45fc	                mov eax, dword [rbp - 4]	        54	base85.c	FUNCTION_2	WHILE_1	DO_1
0xdb	             0x1d0	                            add eax, edx	        54	base85.c	FUNCTION_2	WHILE_1	DO_1
0xdd	          0x8945f4	              mov dword [rbp - 0xc], eax	        54	base85.c	FUNCTION_2	WHILE_1	DO_1
0xe0	        0x836df801	                  sub dword [rbp - 8], 1	        55	base85.c	FUNCTION_2	WHILE_1	DO_1
0xe4	        0x837df800	                  cmp dword [rbp - 8], 0	        55	base85.c	FUNCTION_2	WHILE_1	DO_1
0xe8	            0x759a	                           jne 0x40000c4	        55	base85.c	FUNCTION_2	WHILE_1	DO_1
0xea	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        56	base85.c	FUNCTION_2	WHILE_1
0xee	        0x488d5001	                      lea rdx, [rax + 1]	        56	base85.c	FUNCTION_2	WHILE_1
0xf2	        0x488955e0	             mov qword [rbp - 0x20], rdx	        56	base85.c	FUNCTION_2	WHILE_1
0xf6	           0xfb600	                   movzx eax, byte [rax]	        56	base85.c	FUNCTION_2	WHILE_1
0xf9	          0x8845f3	                mov byte [rbp - 0xd], al	        56	base85.c	FUNCTION_2	WHILE_1
0xfc	         0xfb645f3	             movzx eax, byte [rbp - 0xd]	        57	base85.c	FUNCTION_2	WHILE_1
0x100	            0x4898	                                    cdqe	        57	base85.c	FUNCTION_2	WHILE_1
0x102	     0xfb680000000	                   movzx eax, byte [rax]	        57	base85.c	FUNCTION_2	WHILE_1
0x109	           0xfbec0	                           movsx eax, al	        57	base85.c	FUNCTION_2	WHILE_1
0x10c	          0x8945fc	                mov dword [rbp - 4], eax	        57	base85.c	FUNCTION_2	WHILE_1
0x10f	        0x836dfc01	                  sub dword [rbp - 4], 1	        58	base85.c	FUNCTION_2	WHILE_1	IF_2
0x113	        0x837dfc00	                  cmp dword [rbp - 4], 0	        58	base85.c	FUNCTION_2	WHILE_1	IF_2
0x117	            0x791f	                           jns 0x4000178	        58	base85.c	FUNCTION_2	WHILE_1	IF_2
0x119	         0xfb645f3	             movzx eax, byte [rbp - 0xd]	        59	base85.c	FUNCTION_2	WHILE_1	CALL_4
0x11d	            0x89c6	                            mov esi, eax	        59	base85.c	FUNCTION_2	WHILE_1	CALL_4
0x11f	      0xbf00000000	                              mov edi, 0	        59	base85.c	FUNCTION_2	WHILE_1	CALL_4
0x124	      0xb800000000	                              mov eax, 0	        59	base85.c	FUNCTION_2	WHILE_1	CALL_4
0x129	      0xe800000000	                          call 0x400016e	        59	base85.c	FUNCTION_2	WHILE_1	CALL_4
0x12e	      0xe8cdfeffff	                    call sym.const_error	        59	base85.c	FUNCTION_2	WHILE_1	CALL_4
0x133	      0xe989000000	                           jmp 0x4000201	        59	base85.c	FUNCTION_2	WHILE_1	CALL_4
0x138	    0x817df4030303	       cmp dword [rbp - 0xc], 0x3030303 	        61	base85.c	FUNCTION_2	WHILE_1	IF_3
0x13f	            0x7715	                            ja 0x4000196	        61	base85.c	FUNCTION_2	WHILE_1	IF_3
0x141	          0x8b45fc	                mov eax, dword [rbp - 4]	        62	base85.c	FUNCTION_2	WHILE_1	IF_3
0x144	            0xf7d0	                                 not eax	        62	base85.c	FUNCTION_2	WHILE_1	IF_3
0x146	            0x89c2	                            mov edx, eax	        62	base85.c	FUNCTION_2	WHILE_1	IF_3
0x148	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        62	base85.c	FUNCTION_2	WHILE_1	IF_3
0x14b	          0x6bc055	                     imul eax, eax, 0x55	        62	base85.c	FUNCTION_2	WHILE_1	IF_3
0x14e	          0x8945f4	              mov dword [rbp - 0xc], eax	        62	base85.c	FUNCTION_2	WHILE_1	IF_3
0x151	          0x3b55f4	              cmp edx, dword [rbp - 0xc]	        61	base85.c	FUNCTION_2	WHILE_1	IF_3
0x154	            0x7321	                           jae 0x40001b7	        61	base85.c	FUNCTION_2	WHILE_1	IF_3
0x156	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        63	base85.c	FUNCTION_2	WHILE_1	CALL_5
0x15a	        0x4883e805	                              sub rax, 5	        63	base85.c	FUNCTION_2	WHILE_1	CALL_5
0x15e	          0x4889c6	                            mov rsi, rax	        63	base85.c	FUNCTION_2	WHILE_1	CALL_5
0x161	      0xbf00000000	                              mov edi, 0	        63	base85.c	FUNCTION_2	WHILE_1	CALL_5
0x166	      0xb800000000	                              mov eax, 0	        63	base85.c	FUNCTION_2	WHILE_1	CALL_5
0x16b	      0xe800000000	                          call 0x40001b0	        63	base85.c	FUNCTION_2	WHILE_1	CALL_5
0x170	      0xe88bfeffff	                    call sym.const_error	        63	base85.c	FUNCTION_2	WHILE_1	CALL_5
0x175	            0xeb4a	                           jmp 0x4000201	        63	base85.c	FUNCTION_2	WHILE_1	CALL_5
0x177	          0x8b45fc	                mov eax, dword [rbp - 4]	        64	base85.c	FUNCTION_2	WHILE_1
0x17a	           0x145f4	              add dword [rbp - 0xc], eax	        64	base85.c	FUNCTION_2	WHILE_1
0x17d	      0xb804000000	                              mov eax, 4	        67	base85.c	FUNCTION_2	WHILE_1
0x182	        0x837ddc04	               cmp dword [rbp - 0x24], 4	        67	base85.c	FUNCTION_2	WHILE_1
0x186	         0xf4e45dc	          cmovle eax, dword [rbp - 0x24]	        67	base85.c	FUNCTION_2	WHILE_1
0x18a	          0x8945f8	                mov dword [rbp - 8], eax	        67	base85.c	FUNCTION_2	WHILE_1
0x18d	          0x8b45f8	                mov eax, dword [rbp - 8]	        68	base85.c	FUNCTION_2	WHILE_1
0x190	          0x2945dc	             sub dword [rbp - 0x24], eax	        68	base85.c	FUNCTION_2	WHILE_1
0x193	        0xc145f408	                rol dword [rbp - 0xc], 8	        70	base85.c	FUNCTION_2	WHILE_1	DO_2
0x197	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        71	base85.c	FUNCTION_2	WHILE_1	DO_2
0x19b	        0x488d5001	                      lea rdx, [rax + 1]	        71	base85.c	FUNCTION_2	WHILE_1	DO_2
0x19f	        0x488955e8	             mov qword [rbp - 0x18], rdx	        71	base85.c	FUNCTION_2	WHILE_1	DO_2
0x1a3	          0x8b55f4	              mov edx, dword [rbp - 0xc]	        71	base85.c	FUNCTION_2	WHILE_1	DO_2
0x1a6	            0x8810	                      mov byte [rax], dl	        71	base85.c	FUNCTION_2	WHILE_1	DO_2
0x1a8	        0x836df801	                  sub dword [rbp - 8], 1	        72	base85.c	FUNCTION_2	WHILE_1	DO_2
0x1ac	        0x837df800	                  cmp dword [rbp - 8], 0	        72	base85.c	FUNCTION_2	WHILE_1	DO_2
0x1b0	            0x75e1	                           jne 0x40001d3	        72	base85.c	FUNCTION_2	WHILE_1	DO_2
0x1b2	        0x837ddc00	               cmp dword [rbp - 0x24], 0	        45	base85.c	FUNCTION_2	WHILE_1
0x1b6	     0xf85bafeffff	                           jne 0x40000b6	        45	base85.c	FUNCTION_2	WHILE_1
0x1bc	      0xb800000000	                              mov eax, 0	        76	base85.c	FUNCTION_2
0x1c1	              0xc9	                                   leave	        77	base85.c	FUNCTION_2
0x1c2	              0xc3	                                     ret	        77	base85.c	FUNCTION_2
const_error	ELSE,0:CALL,0:WHILE,0:SWITCH,0:functions,0:IF,0:FOR,0:DO,0	5
0x0	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_10
0x1	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_10
0x4	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_10
0x9	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_10
0xa	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_10
