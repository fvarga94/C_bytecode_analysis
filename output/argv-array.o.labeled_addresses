argv_array_pushv	SWITCH,0:CALL,1:IF,0:WHILE,0:functions,0:ELSE,0:DO,0:FOR,1	20
0x40c	              0x55	                                push rbp	        53	argv-array.c	FUNCTION_6
0x40d	          0x4889e5	                            mov rbp, rsp	        53	argv-array.c	FUNCTION_6
0x410	        0x4883ec10	                           sub rsp, 0x10	        53	argv-array.c	FUNCTION_6
0x414	        0x48897df8	                mov qword [rbp - 8], rdi	        53	argv-array.c	FUNCTION_6
0x418	        0x488975f0	             mov qword [rbp - 0x10], rsi	        53	argv-array.c	FUNCTION_6
0x41c	            0xeb1b	                           jmp 0x4000479	        54	argv-array.c	FUNCTION_6	FOR_1
0x41e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        55	argv-array.c	FUNCTION_6	CALL_1
0x422	          0x488b10	                    mov rdx, qword [rax]	        55	argv-array.c	FUNCTION_6	CALL_1
0x425	        0x488b45f8	                mov rax, qword [rbp - 8]	        55	argv-array.c	FUNCTION_6	CALL_1
0x429	          0x4889d6	                            mov rsi, rdx	        55	argv-array.c	FUNCTION_6	CALL_1
0x42c	          0x4889c7	                            mov rdi, rax	        55	argv-array.c	FUNCTION_6	CALL_1
0x42f	      0xe800000000	                          call 0x4000474	        55	argv-array.c	FUNCTION_6	CALL_1
0x434	      0x488345f008	               add qword [rbp - 0x10], 8	        54	argv-array.c	FUNCTION_6	FOR_1
0x439	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        54	argv-array.c	FUNCTION_6	FOR_1
0x43d	          0x488b00	                    mov rax, qword [rax]	        54	argv-array.c	FUNCTION_6	FOR_1
0x440	          0x4885c0	                           test rax, rax	        54	argv-array.c	FUNCTION_6	FOR_1
0x443	            0x75d9	                           jne 0x400045e	        54	argv-array.c	FUNCTION_6	FOR_1
0x445	              0x90	                                     nop	        56	argv-array.c	FUNCTION_6
0x446	              0xc9	                                   leave	        56	argv-array.c	FUNCTION_6
0x447	              0xc3	                                     ret	        56	argv-array.c	FUNCTION_6
argv_array_init	SWITCH,0:CALL,0:IF,0:WHILE,0:functions,0:ELSE,0:DO,0:FOR,0	12
0x52	              0x55	                                push rbp	         8	argv-array.c	FUNCTION_1
0x53	          0x4889e5	                            mov rbp, rsp	         8	argv-array.c	FUNCTION_1
0x56	        0x48897df8	                mov qword [rbp - 8], rdi	         8	argv-array.c	FUNCTION_1
0x5a	        0x488b45f8	                mov rax, qword [rbp - 8]	         9	argv-array.c	FUNCTION_1
0x5e	    0x48c700000000	                      mov qword [rax], 0	         9	argv-array.c	FUNCTION_1
0x65	        0x488b45f8	                mov rax, qword [rbp - 8]	        10	argv-array.c	FUNCTION_1
0x69	    0xc74008000000	                  mov dword [rax + 8], 0	        10	argv-array.c	FUNCTION_1
0x70	        0x488b45f8	                mov rax, qword [rbp - 8]	        11	argv-array.c	FUNCTION_1
0x74	    0xc7400c000000	                mov dword [rax + 0xc], 0	        11	argv-array.c	FUNCTION_1
0x7b	              0x90	                                     nop	        12	argv-array.c	FUNCTION_1
0x7c	              0x5d	                                 pop rbp	        12	argv-array.c	FUNCTION_1
0x7d	              0xc3	                                     ret	        12	argv-array.c	FUNCTION_1
argv_array_push	SWITCH,0:CALL,2:IF,0:WHILE,0:functions,0:ELSE,0:DO,0:FOR,0	16
0x19e	              0x55	                                push rbp	        25	argv-array.c	FUNCTION_3
0x19f	          0x4889e5	                            mov rbp, rsp	        25	argv-array.c	FUNCTION_3
0x1a2	        0x4883ec10	                           sub rsp, 0x10	        25	argv-array.c	FUNCTION_3
0x1a6	        0x48897df8	                mov qword [rbp - 8], rdi	        25	argv-array.c	FUNCTION_3
0x1aa	        0x488975f0	             mov qword [rbp - 0x10], rsi	        25	argv-array.c	FUNCTION_3
0x1ae	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        26	argv-array.c	FUNCTION_3	CALL_2
0x1b2	          0x4889c7	                            mov rdi, rax	        26	argv-array.c	FUNCTION_3	CALL_2
0x1b5	      0xe800000000	                          call 0x40001fa	        26	argv-array.c	FUNCTION_3	CALL_2
0x1ba	          0x4889c2	                            mov rdx, rax	        26	argv-array.c	FUNCTION_3	CALL_2
0x1bd	        0x488b45f8	                mov rax, qword [rbp - 8]	        26	argv-array.c	FUNCTION_3	CALL_2
0x1c1	          0x4889d6	                            mov rsi, rdx	        26	argv-array.c	FUNCTION_3	CALL_2
0x1c4	          0x4889c7	                            mov rdi, rax	        26	argv-array.c	FUNCTION_3	CALL_2
0x1c7	      0xe8b2feffff	          call sym.argv_array_push_nodup	        26	argv-array.c	FUNCTION_3	CALL_2
0x1cc	              0x90	                                     nop	        27	argv-array.c	FUNCTION_3
0x1cd	              0xc9	                                   leave	        27	argv-array.c	FUNCTION_3
0x1ce	              0xc3	                                     ret	        27	argv-array.c	FUNCTION_3
argv_array_clear	SWITCH,0:CALL,3:IF,1:WHILE,0:functions,0:ELSE,0:DO,0:FOR,1	34
0x59e	              0x55	                                push rbp	        88	argv-array.c	FUNCTION_9
0x59f	          0x4889e5	                            mov rbp, rsp	        88	argv-array.c	FUNCTION_9
0x5a2	        0x4883ec20	                           sub rsp, 0x20	        88	argv-array.c	FUNCTION_9
0x5a6	        0x48897de8	             mov qword [rbp - 0x18], rdi	        88	argv-array.c	FUNCTION_9
0x5aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        89	argv-array.c	FUNCTION_9	IF_1
0x5ae	          0x488b00	                    mov rax, qword [rax]	        89	argv-array.c	FUNCTION_9	IF_1
0x5b1	    0x483d00000000	                              cmp rax, 0	        89	argv-array.c	FUNCTION_9	IF_1
0x5b7	            0x7447	                            je 0x4000640	        89	argv-array.c	FUNCTION_9	IF_1
0x5b9	    0xc745fc000000	                  mov dword [rbp - 4], 0	        91	argv-array.c	FUNCTION_9	IF_1	FOR_1
0x5c0	            0xeb23	                           jmp 0x4000625	        91	argv-array.c	FUNCTION_9	IF_1	FOR_1
0x5c2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        92	argv-array.c	FUNCTION_9	IF_1	CALL_1
0x5c6	          0x488b00	                    mov rax, qword [rax]	        92	argv-array.c	FUNCTION_9	IF_1	CALL_1
0x5c9	          0x8b55fc	                mov edx, dword [rbp - 4]	        92	argv-array.c	FUNCTION_9	IF_1	CALL_1
0x5cc	          0x4863d2	                         movsxd rdx, edx	        92	argv-array.c	FUNCTION_9	IF_1	CALL_1
0x5cf	        0x48c1e203	                              shl rdx, 3	        92	argv-array.c	FUNCTION_9	IF_1	CALL_1
0x5d3	          0x4801d0	                            add rax, rdx	        92	argv-array.c	FUNCTION_9	IF_1	CALL_1
0x5d6	          0x488b00	                    mov rax, qword [rax]	        92	argv-array.c	FUNCTION_9	IF_1	CALL_1
0x5d9	          0x4889c7	                            mov rdi, rax	        92	argv-array.c	FUNCTION_9	IF_1	CALL_1
0x5dc	      0xe800000000	                          call 0x4000621	        92	argv-array.c	FUNCTION_9	IF_1	CALL_1
0x5e1	        0x8345fc01	                  add dword [rbp - 4], 1	        91	argv-array.c	FUNCTION_9	IF_1	FOR_1
0x5e5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        91	argv-array.c	FUNCTION_9	IF_1	FOR_1
0x5e9	          0x8b4008	                mov eax, dword [rax + 8]	        91	argv-array.c	FUNCTION_9	IF_1	FOR_1
0x5ec	          0x3b45fc	                cmp eax, dword [rbp - 4]	        91	argv-array.c	FUNCTION_9	IF_1	FOR_1
0x5ef	            0x7fd1	                            jg 0x4000602	        91	argv-array.c	FUNCTION_9	IF_1	FOR_1
0x5f1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        93	argv-array.c	FUNCTION_9	IF_1	CALL_2
0x5f5	          0x488b00	                    mov rax, qword [rax]	        93	argv-array.c	FUNCTION_9	IF_1	CALL_2
0x5f8	          0x4889c7	                            mov rdi, rax	        93	argv-array.c	FUNCTION_9	IF_1	CALL_2
0x5fb	      0xe800000000	                          call 0x4000640	        93	argv-array.c	FUNCTION_9	IF_1	CALL_2
0x600	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        95	argv-array.c	FUNCTION_9	CALL_3
0x604	          0x4889c7	                            mov rdi, rax	        95	argv-array.c	FUNCTION_9	CALL_3
0x607	      0xe800000000	                          call 0x400064c	        95	argv-array.c	FUNCTION_9	CALL_3
0x60c	              0x90	                                     nop	        96	argv-array.c	FUNCTION_9
0x60d	              0xc9	                                   leave	        96	argv-array.c	FUNCTION_9
0x60e	              0xc3	                                     ret	        96	argv-array.c	FUNCTION_9
argv_array_detach	SWITCH,0:CALL,2:IF,1:WHILE,0:functions,0:ELSE,1:DO,0:FOR,0	21
0x60f	              0x55	                                push rbp	        99	argv-array.c	FUNCTION_10
0x610	          0x4889e5	                            mov rbp, rsp	        99	argv-array.c	FUNCTION_10
0x613	        0x4883ec20	                           sub rsp, 0x20	        99	argv-array.c	FUNCTION_10
0x617	        0x48897de8	             mov qword [rbp - 0x18], rdi	        99	argv-array.c	FUNCTION_10
0x61b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       100	argv-array.c	FUNCTION_10	IF_1
0x61f	          0x488b00	                    mov rax, qword [rax]	       100	argv-array.c	FUNCTION_10	IF_1
0x622	    0x483d00000000	                              cmp rax, 0	       100	argv-array.c	FUNCTION_10	IF_1
0x628	            0x7511	                           jne 0x400067b	       100	argv-array.c	FUNCTION_10	IF_1
0x62a	      0xbe08000000	                              mov esi, 8	       101	argv-array.c	FUNCTION_10	CALL_1
0x62f	      0xbf01000000	                              mov edi, 1	       101	argv-array.c	FUNCTION_10	CALL_1
0x634	      0xe800000000	                          call 0x4000679	       101	argv-array.c	FUNCTION_10	CALL_1
0x639	            0xeb1b	                           jmp 0x4000696	       101	argv-array.c	FUNCTION_10	CALL_1
0x63b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       103	argv-array.c	FUNCTION_10	ELSE_1
0x63f	          0x488b00	                    mov rax, qword [rax]	       103	argv-array.c	FUNCTION_10	ELSE_1
0x642	        0x488945f8	                mov qword [rbp - 8], rax	       103	argv-array.c	FUNCTION_10	ELSE_1
0x646	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       104	argv-array.c	FUNCTION_10	ELSE_1	CALL_2
0x64a	          0x4889c7	                            mov rdi, rax	       104	argv-array.c	FUNCTION_10	ELSE_1	CALL_2
0x64d	      0xe800000000	                          call 0x4000692	       104	argv-array.c	FUNCTION_10	ELSE_1	CALL_2
0x652	        0x488b45f8	                mov rax, qword [rbp - 8]	       105	argv-array.c	FUNCTION_10	ELSE_1
0x656	              0xc9	                                   leave	       107	argv-array.c	FUNCTION_10
0x657	              0xc3	                                     ret	       107	argv-array.c	FUNCTION_10
argv_array_pushf	SWITCH,0:CALL,5:IF,0:WHILE,0:functions,0:ELSE,0:DO,0:FOR,0	53
0x1cf	              0x55	                                push rbp	        30	argv-array.c	FUNCTION_4
0x1d0	          0x4889e5	                            mov rbp, rsp	        30	argv-array.c	FUNCTION_4
0x1d3	    0x4881ec000100	                          sub rsp, 0x100	        30	argv-array.c	FUNCTION_4
0x1da	    0x4889bd08ffff	             mov qword [rbp - 0xf8], rdi	        30	argv-array.c	FUNCTION_4
0x1e1	    0x4889b500ffff	            mov qword [rbp - 0x100], rsi	        30	argv-array.c	FUNCTION_4
0x1e8	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	        30	argv-array.c	FUNCTION_4
0x1ef	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	        30	argv-array.c	FUNCTION_4
0x1f6	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	        30	argv-array.c	FUNCTION_4
0x1fd	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	        30	argv-array.c	FUNCTION_4
0x204	            0x84c0	                             test al, al	        30	argv-array.c	FUNCTION_4
0x206	            0x7420	                            je 0x4000268	        30	argv-array.c	FUNCTION_4
0x208	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	        30	argv-array.c	FUNCTION_4
0x20c	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	        30	argv-array.c	FUNCTION_4
0x210	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	        30	argv-array.c	FUNCTION_4
0x214	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	        30	argv-array.c	FUNCTION_4
0x218	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	        30	argv-array.c	FUNCTION_4
0x21c	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	        30	argv-array.c	FUNCTION_4
0x220	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	        30	argv-array.c	FUNCTION_4
0x224	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	        30	argv-array.c	FUNCTION_4
0x228	    0x64488b042528	                mov rax, qword fs:[0x28]	        30	argv-array.c	FUNCTION_4
0x231	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	        30	argv-array.c	FUNCTION_4
0x238	            0x31c0	                            xor eax, eax	        30	argv-array.c	FUNCTION_4
0x23a	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	        32	argv-array.c	FUNCTION_4
0x245	    0x48c78518ffff	               mov qword [rbp - 0xe8], 0	        32	argv-array.c	FUNCTION_4
0x250	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	        32	argv-array.c	FUNCTION_4
0x25b	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	        34	argv-array.c	FUNCTION_4	CALL_1
0x265	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	        34	argv-array.c	FUNCTION_4	CALL_1
0x26f	        0x488d4510	                   lea rax, [rbp + 0x10]	        34	argv-array.c	FUNCTION_4	CALL_1
0x273	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	        34	argv-array.c	FUNCTION_4	CALL_1
0x27a	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	        34	argv-array.c	FUNCTION_4	CALL_1
0x281	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	        34	argv-array.c	FUNCTION_4	CALL_1
0x288	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	        35	argv-array.c	FUNCTION_4	CALL_2
0x28f	    0x488b8d00ffff	            mov rcx, qword [rbp - 0x100]	        35	argv-array.c	FUNCTION_4	CALL_2
0x296	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	        35	argv-array.c	FUNCTION_4	CALL_2
0x29d	          0x4889ce	                            mov rsi, rcx	        35	argv-array.c	FUNCTION_4	CALL_2
0x2a0	          0x4889c7	                            mov rdi, rax	        35	argv-array.c	FUNCTION_4	CALL_2
0x2a3	      0xe800000000	                          call 0x40002e8	        35	argv-array.c	FUNCTION_4	CALL_2
0x2a8	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	        38	argv-array.c	FUNCTION_4	CALL_5
0x2af	      0xbe00000000	                              mov esi, 0	        38	argv-array.c	FUNCTION_4	CALL_5
0x2b4	          0x4889c7	                            mov rdi, rax	        38	argv-array.c	FUNCTION_4	CALL_5
0x2b7	      0xe800000000	                          call 0x40002fc	        38	argv-array.c	FUNCTION_4	CALL_5
0x2bc	          0x4889c2	                            mov rdx, rax	        38	argv-array.c	FUNCTION_4	CALL_5
0x2bf	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	        38	argv-array.c	FUNCTION_4	CALL_5
0x2c6	          0x4889d6	                            mov rsi, rdx	        38	argv-array.c	FUNCTION_4	CALL_5
0x2c9	          0x4889c7	                            mov rdi, rax	        38	argv-array.c	FUNCTION_4	CALL_5
0x2cc	      0xe8adfdffff	          call sym.argv_array_push_nodup	        38	argv-array.c	FUNCTION_4	CALL_5
0x2d1	              0x90	                                     nop	        39	argv-array.c	FUNCTION_4
0x2d2	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	        39	argv-array.c	FUNCTION_4
0x2d9	    0x644833042528	                xor rax, qword fs:[0x28]	        39	argv-array.c	FUNCTION_4
0x2e2	            0x7405	                            je 0x4000329	        39	argv-array.c	FUNCTION_4
0x2e4	      0xe800000000	                          call 0x4000329	        39	argv-array.c	FUNCTION_4
0x2e9	              0xc9	                                   leave	        39	argv-array.c	FUNCTION_4
0x2ea	              0xc3	                                     ret	        39	argv-array.c	FUNCTION_4
argv_array_push_nodup	SWITCH,0:CALL,1:IF,1:WHILE,0:functions,0:ELSE,0:DO,0:FOR,0	91
0x7e	              0x55	                                push rbp	        15	argv-array.c	FUNCTION_2
0x7f	          0x4889e5	                            mov rbp, rsp	        15	argv-array.c	FUNCTION_2
0x82	        0x4883ec10	                           sub rsp, 0x10	        15	argv-array.c	FUNCTION_2
0x86	        0x48897df8	                mov qword [rbp - 8], rdi	        15	argv-array.c	FUNCTION_2
0x8a	        0x488975f0	             mov qword [rbp - 0x10], rsi	        15	argv-array.c	FUNCTION_2
0x8e	        0x488b45f8	                mov rax, qword [rbp - 8]	        16	argv-array.c	FUNCTION_2	IF_1
0x92	          0x488b00	                    mov rax, qword [rax]	        16	argv-array.c	FUNCTION_2	IF_1
0x95	    0x483d00000000	                              cmp rax, 0	        16	argv-array.c	FUNCTION_2	IF_1
0x9b	            0x750b	                           jne 0x40000e8	        16	argv-array.c	FUNCTION_2	IF_1
0x9d	        0x488b45f8	                mov rax, qword [rbp - 8]	        17	argv-array.c	FUNCTION_2	IF_1
0xa1	    0x48c700000000	                      mov qword [rax], 0	        17	argv-array.c	FUNCTION_2	IF_1
0xa8	        0x488b45f8	                mov rax, qword [rbp - 8]	        19	argv-array.c	FUNCTION_2	CALL_1
0xac	          0x8b4008	                mov eax, dword [rax + 8]	        19	argv-array.c	FUNCTION_2	CALL_1
0xaf	          0x8d5002	                      lea edx, [rax + 2]	        19	argv-array.c	FUNCTION_2	CALL_1
0xb2	        0x488b45f8	                mov rax, qword [rbp - 8]	        19	argv-array.c	FUNCTION_2	CALL_1
0xb6	          0x8b400c	              mov eax, dword [rax + 0xc]	        19	argv-array.c	FUNCTION_2	CALL_1
0xb9	            0x39c2	                            cmp edx, eax	        19	argv-array.c	FUNCTION_2	CALL_1
0xbb	     0xf8e93000000	                           jle 0x4000194	        19	argv-array.c	FUNCTION_2	CALL_1
0xc1	        0x488b45f8	                mov rax, qword [rbp - 8]	        19	argv-array.c	FUNCTION_2	CALL_1
0xc5	          0x8b400c	              mov eax, dword [rax + 0xc]	        19	argv-array.c	FUNCTION_2	CALL_1
0xc8	          0x8d5010	                   lea edx, [rax + 0x10]	        19	argv-array.c	FUNCTION_2	CALL_1
0xcb	            0x89d0	                            mov eax, edx	        19	argv-array.c	FUNCTION_2	CALL_1
0xcd	             0x1c0	                            add eax, eax	        19	argv-array.c	FUNCTION_2	CALL_1
0xcf	             0x1d0	                            add eax, edx	        19	argv-array.c	FUNCTION_2	CALL_1
0xd1	            0x89c2	                            mov edx, eax	        19	argv-array.c	FUNCTION_2	CALL_1
0xd3	          0xc1ea1f	                           shr edx, 0x1f	        19	argv-array.c	FUNCTION_2	CALL_1
0xd6	             0x1d0	                            add eax, edx	        19	argv-array.c	FUNCTION_2	CALL_1
0xd8	            0xd1f8	                              sar eax, 1	        19	argv-array.c	FUNCTION_2	CALL_1
0xda	            0x89c2	                            mov edx, eax	        19	argv-array.c	FUNCTION_2	CALL_1
0xdc	        0x488b45f8	                mov rax, qword [rbp - 8]	        19	argv-array.c	FUNCTION_2	CALL_1
0xe0	          0x8b4008	                mov eax, dword [rax + 8]	        19	argv-array.c	FUNCTION_2	CALL_1
0xe3	          0x83c002	                              add eax, 2	        19	argv-array.c	FUNCTION_2	CALL_1
0xe6	            0x39c2	                            cmp edx, eax	        19	argv-array.c	FUNCTION_2	CALL_1
0xe8	            0x7d13	                           jge 0x400013d	        19	argv-array.c	FUNCTION_2	CALL_1
0xea	        0x488b45f8	                mov rax, qword [rbp - 8]	        19	argv-array.c	FUNCTION_2	CALL_1
0xee	          0x8b4008	                mov eax, dword [rax + 8]	        19	argv-array.c	FUNCTION_2	CALL_1
0xf1	          0x8d5002	                      lea edx, [rax + 2]	        19	argv-array.c	FUNCTION_2	CALL_1
0xf4	        0x488b45f8	                mov rax, qword [rbp - 8]	        19	argv-array.c	FUNCTION_2	CALL_1
0xf8	          0x89500c	              mov dword [rax + 0xc], edx	        19	argv-array.c	FUNCTION_2	CALL_1
0xfb	            0xeb22	                           jmp 0x400015f	        19	argv-array.c	FUNCTION_2	CALL_1
0xfd	        0x488b45f8	                mov rax, qword [rbp - 8]	        19	argv-array.c	FUNCTION_2	CALL_1
0x101	          0x8b400c	              mov eax, dword [rax + 0xc]	        19	argv-array.c	FUNCTION_2	CALL_1
0x104	          0x8d5010	                   lea edx, [rax + 0x10]	        19	argv-array.c	FUNCTION_2	CALL_1
0x107	            0x89d0	                            mov eax, edx	        19	argv-array.c	FUNCTION_2	CALL_1
0x109	             0x1c0	                            add eax, eax	        19	argv-array.c	FUNCTION_2	CALL_1
0x10b	             0x1d0	                            add eax, edx	        19	argv-array.c	FUNCTION_2	CALL_1
0x10d	            0x89c2	                            mov edx, eax	        19	argv-array.c	FUNCTION_2	CALL_1
0x10f	          0xc1ea1f	                           shr edx, 0x1f	        19	argv-array.c	FUNCTION_2	CALL_1
0x112	             0x1d0	                            add eax, edx	        19	argv-array.c	FUNCTION_2	CALL_1
0x114	            0xd1f8	                              sar eax, 1	        19	argv-array.c	FUNCTION_2	CALL_1
0x116	            0x89c2	                            mov edx, eax	        19	argv-array.c	FUNCTION_2	CALL_1
0x118	        0x488b45f8	                mov rax, qword [rbp - 8]	        19	argv-array.c	FUNCTION_2	CALL_1
0x11c	          0x89500c	              mov dword [rax + 0xc], edx	        19	argv-array.c	FUNCTION_2	CALL_1
0x11f	        0x488b45f8	                mov rax, qword [rbp - 8]	        19	argv-array.c	FUNCTION_2	CALL_1
0x123	          0x8b400c	              mov eax, dword [rax + 0xc]	        19	argv-array.c	FUNCTION_2	CALL_1
0x126	            0x4898	                                    cdqe	        19	argv-array.c	FUNCTION_2	CALL_1
0x128	          0x4889c6	                            mov rsi, rax	        19	argv-array.c	FUNCTION_2	CALL_1
0x12b	      0xbf08000000	                              mov edi, 8	        19	argv-array.c	FUNCTION_2	CALL_1
0x130	      0xe8cbfeffff	                        call sym.st_mult	        19	argv-array.c	FUNCTION_2	CALL_1
0x135	          0x4889c2	                            mov rdx, rax	        19	argv-array.c	FUNCTION_2	CALL_1
0x138	        0x488b45f8	                mov rax, qword [rbp - 8]	        19	argv-array.c	FUNCTION_2	CALL_1
0x13c	          0x488b00	                    mov rax, qword [rax]	        19	argv-array.c	FUNCTION_2	CALL_1
0x13f	          0x4889d6	                            mov rsi, rdx	        19	argv-array.c	FUNCTION_2	CALL_1
0x142	          0x4889c7	                            mov rdi, rax	        19	argv-array.c	FUNCTION_2	CALL_1
0x145	      0xe800000000	                          call 0x400018a	        19	argv-array.c	FUNCTION_2	CALL_1
0x14a	          0x4889c2	                            mov rdx, rax	        19	argv-array.c	FUNCTION_2	CALL_1
0x14d	        0x488b45f8	                mov rax, qword [rbp - 8]	        19	argv-array.c	FUNCTION_2	CALL_1
0x151	          0x488910	                    mov qword [rax], rdx	        19	argv-array.c	FUNCTION_2	CALL_1
0x154	        0x488b45f8	                mov rax, qword [rbp - 8]	        20	argv-array.c	FUNCTION_2
0x158	          0x488b30	                    mov rsi, qword [rax]	        20	argv-array.c	FUNCTION_2
0x15b	        0x488b45f8	                mov rax, qword [rbp - 8]	        20	argv-array.c	FUNCTION_2
0x15f	          0x8b4008	                mov eax, dword [rax + 8]	        20	argv-array.c	FUNCTION_2
0x162	          0x8d4801	                      lea ecx, [rax + 1]	        20	argv-array.c	FUNCTION_2
0x165	        0x488b55f8	                mov rdx, qword [rbp - 8]	        20	argv-array.c	FUNCTION_2
0x169	          0x894a08	                mov dword [rdx + 8], ecx	        20	argv-array.c	FUNCTION_2
0x16c	            0x4898	                                    cdqe	        20	argv-array.c	FUNCTION_2
0x16e	        0x48c1e003	                              shl rax, 3	        20	argv-array.c	FUNCTION_2
0x172	        0x488d1406	                    lea rdx, [rsi + rax]	        20	argv-array.c	FUNCTION_2
0x176	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        20	argv-array.c	FUNCTION_2
0x17a	          0x488902	                    mov qword [rdx], rax	        20	argv-array.c	FUNCTION_2
0x17d	        0x488b45f8	                mov rax, qword [rbp - 8]	        21	argv-array.c	FUNCTION_2
0x181	          0x488b10	                    mov rdx, qword [rax]	        21	argv-array.c	FUNCTION_2
0x184	        0x488b45f8	                mov rax, qword [rbp - 8]	        21	argv-array.c	FUNCTION_2
0x188	          0x8b4008	                mov eax, dword [rax + 8]	        21	argv-array.c	FUNCTION_2
0x18b	            0x4898	                                    cdqe	        21	argv-array.c	FUNCTION_2
0x18d	        0x48c1e003	                              shl rax, 3	        21	argv-array.c	FUNCTION_2
0x191	          0x4801d0	                            add rax, rdx	        21	argv-array.c	FUNCTION_2
0x194	    0x48c700000000	                      mov qword [rax], 0	        21	argv-array.c	FUNCTION_2
0x19b	              0x90	                                     nop	        22	argv-array.c	FUNCTION_2
0x19c	              0xc9	                                   leave	        22	argv-array.c	FUNCTION_2
0x19d	              0xc3	                                     ret	        22	argv-array.c	FUNCTION_2
argv_array_pop	SWITCH,0:CALL,1:IF,1:WHILE,0:functions,0:ELSE,0:DO,0:FOR,0	37
0x448	              0x55	                                push rbp	        59	argv-array.c	FUNCTION_7
0x449	          0x4889e5	                            mov rbp, rsp	        59	argv-array.c	FUNCTION_7
0x44c	        0x4883ec10	                           sub rsp, 0x10	        59	argv-array.c	FUNCTION_7
0x450	        0x48897df8	                mov qword [rbp - 8], rdi	        59	argv-array.c	FUNCTION_7
0x454	        0x488b45f8	                mov rax, qword [rbp - 8]	        60	argv-array.c	FUNCTION_7	IF_1
0x458	          0x8b4008	                mov eax, dword [rax + 8]	        60	argv-array.c	FUNCTION_7	IF_1
0x45b	            0x85c0	                           test eax, eax	        60	argv-array.c	FUNCTION_7	IF_1
0x45d	            0x745b	                            je 0x40004fa	        60	argv-array.c	FUNCTION_7	IF_1
0x45f	        0x488b45f8	                mov rax, qword [rbp - 8]	        62	argv-array.c	FUNCTION_7	CALL_1
0x463	          0x488b10	                    mov rdx, qword [rax]	        62	argv-array.c	FUNCTION_7	CALL_1
0x466	        0x488b45f8	                mov rax, qword [rbp - 8]	        62	argv-array.c	FUNCTION_7	CALL_1
0x46a	          0x8b4008	                mov eax, dword [rax + 8]	        62	argv-array.c	FUNCTION_7	CALL_1
0x46d	            0x4898	                                    cdqe	        62	argv-array.c	FUNCTION_7	CALL_1
0x46f	        0x48c1e003	                              shl rax, 3	        62	argv-array.c	FUNCTION_7	CALL_1
0x473	        0x4883e808	                              sub rax, 8	        62	argv-array.c	FUNCTION_7	CALL_1
0x477	          0x4801d0	                            add rax, rdx	        62	argv-array.c	FUNCTION_7	CALL_1
0x47a	          0x488b00	                    mov rax, qword [rax]	        62	argv-array.c	FUNCTION_7	CALL_1
0x47d	          0x4889c7	                            mov rdi, rax	        62	argv-array.c	FUNCTION_7	CALL_1
0x480	      0xe800000000	                          call 0x40004c5	        62	argv-array.c	FUNCTION_7	CALL_1
0x485	        0x488b45f8	                mov rax, qword [rbp - 8]	        63	argv-array.c	FUNCTION_7
0x489	          0x488b10	                    mov rdx, qword [rax]	        63	argv-array.c	FUNCTION_7
0x48c	        0x488b45f8	                mov rax, qword [rbp - 8]	        63	argv-array.c	FUNCTION_7
0x490	          0x8b4008	                mov eax, dword [rax + 8]	        63	argv-array.c	FUNCTION_7
0x493	            0x4898	                                    cdqe	        63	argv-array.c	FUNCTION_7
0x495	        0x48c1e003	                              shl rax, 3	        63	argv-array.c	FUNCTION_7
0x499	        0x4883e808	                              sub rax, 8	        63	argv-array.c	FUNCTION_7
0x49d	          0x4801d0	                            add rax, rdx	        63	argv-array.c	FUNCTION_7
0x4a0	    0x48c700000000	                      mov qword [rax], 0	        63	argv-array.c	FUNCTION_7
0x4a7	        0x488b45f8	                mov rax, qword [rbp - 8]	        64	argv-array.c	FUNCTION_7
0x4ab	          0x8b4008	                mov eax, dword [rax + 8]	        64	argv-array.c	FUNCTION_7
0x4ae	          0x8d50ff	                      lea edx, [rax - 1]	        64	argv-array.c	FUNCTION_7
0x4b1	        0x488b45f8	                mov rax, qword [rbp - 8]	        64	argv-array.c	FUNCTION_7
0x4b5	          0x895008	                mov dword [rax + 8], edx	        64	argv-array.c	FUNCTION_7
0x4b8	            0xeb01	                           jmp 0x40004fb	        64	argv-array.c	FUNCTION_7
0x4ba	              0x90	                                     nop	        61	argv-array.c	FUNCTION_7	IF_1
0x4bb	              0xc9	                                   leave	        65	argv-array.c	FUNCTION_7
0x4bc	              0xc3	                                     ret	        65	argv-array.c	FUNCTION_7
argv_array_split	SWITCH,0:CALL,5:IF,1:WHILE,3:functions,0:ELSE,0:DO,0:FOR,1	69
0x4bd	              0x55	                                push rbp	        68	argv-array.c	FUNCTION_8
0x4be	          0x4889e5	                            mov rbp, rsp	        68	argv-array.c	FUNCTION_8
0x4c1	        0x4883ec20	                           sub rsp, 0x20	        68	argv-array.c	FUNCTION_8
0x4c5	        0x48897de8	             mov qword [rbp - 0x18], rdi	        68	argv-array.c	FUNCTION_8
0x4c9	        0x488975e0	             mov qword [rbp - 0x20], rsi	        68	argv-array.c	FUNCTION_8
0x4cd	            0xeb05	                           jmp 0x4000514	        69	argv-array.c	FUNCTION_8	WHILE_1	CALL_1
0x4cf	      0x488345e001	               add qword [rbp - 0x20], 1	        70	argv-array.c	FUNCTION_8	WHILE_1
0x4d4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        69	argv-array.c	FUNCTION_8	WHILE_1	CALL_1
0x4d8	           0xfb600	                   movzx eax, byte [rax]	        69	argv-array.c	FUNCTION_8	WHILE_1	CALL_1
0x4db	           0xfb6c0	                           movzx eax, al	        69	argv-array.c	FUNCTION_8	WHILE_1	CALL_1
0x4de	            0x4898	                                    cdqe	        69	argv-array.c	FUNCTION_8	WHILE_1	CALL_1
0x4e0	     0xfb680000000	                   movzx eax, byte [rax]	        69	argv-array.c	FUNCTION_8	WHILE_1	CALL_1
0x4e7	           0xfb6c0	                           movzx eax, al	        69	argv-array.c	FUNCTION_8	WHILE_1	CALL_1
0x4ea	          0x83e001	                              and eax, 1	        69	argv-array.c	FUNCTION_8	WHILE_1	CALL_1
0x4ed	            0x85c0	                           test eax, eax	        69	argv-array.c	FUNCTION_8	WHILE_1	CALL_1
0x4ef	            0x75de	                           jne 0x400050f	        69	argv-array.c	FUNCTION_8	WHILE_1	CALL_1
0x4f1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        72	argv-array.c	FUNCTION_8	FOR_1
0x4f5	        0x488945f8	                mov qword [rbp - 8], rax	        72	argv-array.c	FUNCTION_8	FOR_1
0x4f9	        0x488b45f8	                mov rax, qword [rbp - 8]	        74	argv-array.c	FUNCTION_8	FOR_1	IF_1
0x4fd	           0xfb600	                   movzx eax, byte [rax]	        74	argv-array.c	FUNCTION_8	FOR_1	IF_1
0x500	            0x84c0	                             test al, al	        74	argv-array.c	FUNCTION_8	FOR_1	IF_1
0x502	     0xf8492000000	                            je 0x40005da	        74	argv-array.c	FUNCTION_8	FOR_1	IF_1
0x508	            0xeb05	                           jmp 0x400054f	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x50a	      0x488345f801	                  add qword [rbp - 8], 1	        78	argv-array.c	FUNCTION_8	FOR_1	WHILE_2
0x50f	        0x488b45f8	                mov rax, qword [rbp - 8]	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x513	           0xfb600	                   movzx eax, byte [rax]	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x516	            0x84c0	                             test al, al	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x518	            0x741d	                            je 0x4000577	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x51a	        0x488b45f8	                mov rax, qword [rbp - 8]	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x51e	           0xfb600	                   movzx eax, byte [rax]	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x521	           0xfb6c0	                           movzx eax, al	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x524	            0x4898	                                    cdqe	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x526	     0xfb680000000	                   movzx eax, byte [rax]	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x52d	           0xfb6c0	                           movzx eax, al	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x530	          0x83e001	                              and eax, 1	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x533	            0x85c0	                           test eax, eax	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x535	            0x74d3	                            je 0x400054a	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x537	        0x488b55f8	                mov rdx, qword [rbp - 8]	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_4
0x53b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_4
0x53f	          0x4829c2	                            sub rdx, rax	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_4
0x542	          0x4889d0	                            mov rax, rdx	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_4
0x545	          0x4889c2	                            mov rdx, rax	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_4
0x548	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_4
0x54c	          0x4889d6	                            mov rsi, rdx	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_4
0x54f	          0x4889c7	                            mov rdi, rax	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_4
0x552	      0xe800000000	                          call 0x4000597	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_4
0x557	          0x4889c2	                            mov rdx, rax	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_4
0x55a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_4
0x55e	          0x4889d6	                            mov rsi, rdx	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_4
0x561	          0x4889c7	                            mov rdi, rax	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_4
0x564	      0xe815fbffff	          call sym.argv_array_push_nodup	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_4
0x569	            0xeb05	                           jmp 0x40005b0	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3	CALL_5
0x56b	      0x488345f801	                  add qword [rbp - 8], 1	        82	argv-array.c	FUNCTION_8	FOR_1	WHILE_3
0x570	        0x488b45f8	                mov rax, qword [rbp - 8]	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3	CALL_5
0x574	           0xfb600	                   movzx eax, byte [rax]	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3	CALL_5
0x577	           0xfb6c0	                           movzx eax, al	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3	CALL_5
0x57a	            0x4898	                                    cdqe	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3	CALL_5
0x57c	     0xfb680000000	                   movzx eax, byte [rax]	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3	CALL_5
0x583	           0xfb6c0	                           movzx eax, al	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3	CALL_5
0x586	          0x83e001	                              and eax, 1	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3	CALL_5
0x589	            0x85c0	                           test eax, eax	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3	CALL_5
0x58b	            0x75de	                           jne 0x40005ab	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3	CALL_5
0x58d	        0x488b45f8	                mov rax, qword [rbp - 8]	        83	argv-array.c	FUNCTION_8	FOR_1
0x591	        0x488945e0	             mov qword [rbp - 0x20], rax	        83	argv-array.c	FUNCTION_8	FOR_1
0x595	      0xe957ffffff	                           jmp 0x4000531	        84	argv-array.c	FUNCTION_8	FOR_1
0x59a	              0x90	                                     nop	        75	argv-array.c	FUNCTION_8	FOR_1	IF_1
0x59b	              0x90	                                     nop	        85	argv-array.c	FUNCTION_8
0x59c	              0xc9	                                   leave	        85	argv-array.c	FUNCTION_8
0x59d	              0xc3	                                     ret	        85	argv-array.c	FUNCTION_8
argv_array_pushl	SWITCH,0:CALL,4:IF,0:WHILE,1:functions,0:ELSE,0:DO,0:FOR,0	59
0x2eb	              0x55	                                push rbp	        42	argv-array.c	FUNCTION_5
0x2ec	          0x4889e5	                            mov rbp, rsp	        42	argv-array.c	FUNCTION_5
0x2ef	    0x4881ecf00000	                           sub rsp, 0xf0	        42	argv-array.c	FUNCTION_5
0x2f6	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	        42	argv-array.c	FUNCTION_5
0x2fd	    0x4889b558ffff	             mov qword [rbp - 0xa8], rsi	        42	argv-array.c	FUNCTION_5
0x304	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	        42	argv-array.c	FUNCTION_5
0x30b	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	        42	argv-array.c	FUNCTION_5
0x312	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	        42	argv-array.c	FUNCTION_5
0x319	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	        42	argv-array.c	FUNCTION_5
0x320	            0x84c0	                             test al, al	        42	argv-array.c	FUNCTION_5
0x322	            0x7420	                            je 0x4000384	        42	argv-array.c	FUNCTION_5
0x324	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	        42	argv-array.c	FUNCTION_5
0x328	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	        42	argv-array.c	FUNCTION_5
0x32c	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	        42	argv-array.c	FUNCTION_5
0x330	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	        42	argv-array.c	FUNCTION_5
0x334	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	        42	argv-array.c	FUNCTION_5
0x338	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	        42	argv-array.c	FUNCTION_5
0x33c	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	        42	argv-array.c	FUNCTION_5
0x340	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	        42	argv-array.c	FUNCTION_5
0x344	    0x64488b042528	                mov rax, qword fs:[0x28]	        42	argv-array.c	FUNCTION_5
0x34d	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	        42	argv-array.c	FUNCTION_5
0x354	            0x31c0	                            xor eax, eax	        42	argv-array.c	FUNCTION_5
0x356	    0xc78530ffffff	               mov dword [rbp - 0xd0], 8	        46	argv-array.c	FUNCTION_5	CALL_1
0x360	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	        46	argv-array.c	FUNCTION_5	CALL_1
0x36a	        0x488d4510	                   lea rax, [rbp + 0x10]	        46	argv-array.c	FUNCTION_5	CALL_1
0x36e	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	        46	argv-array.c	FUNCTION_5	CALL_1
0x375	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	        46	argv-array.c	FUNCTION_5	CALL_1
0x37c	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	        46	argv-array.c	FUNCTION_5	CALL_1
0x383	            0xeb19	                           jmp 0x40003de	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x385	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	        48	argv-array.c	FUNCTION_5	CALL_3
0x38c	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	        48	argv-array.c	FUNCTION_5	CALL_3
0x393	          0x4889d6	                            mov rsi, rdx	        48	argv-array.c	FUNCTION_5	CALL_3
0x396	          0x4889c7	                            mov rdi, rax	        48	argv-array.c	FUNCTION_5	CALL_3
0x399	      0xe800000000	                          call 0x40003de	        48	argv-array.c	FUNCTION_5	CALL_3
0x39e	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x3a4	          0x83f830	                           cmp eax, 0x30	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x3a7	            0x7323	                           jae 0x400040c	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x3a9	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x3b0	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x3b6	            0x89d2	                            mov edx, edx	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x3b8	          0x4801d0	                            add rax, rdx	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x3bb	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x3c1	          0x83c208	                              add edx, 8	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x3c4	    0x899530ffffff	             mov dword [rbp - 0xd0], edx	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x3ca	            0xeb12	                           jmp 0x400041e	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x3cc	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x3d3	        0x488d5008	                      lea rdx, [rax + 8]	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x3d7	    0x48899538ffff	             mov qword [rbp - 0xc8], rdx	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x3de	          0x488b00	                    mov rax, qword [rax]	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x3e1	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x3e8	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x3f0	            0x7593	                           jne 0x40003c5	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x3f2	              0x90	                                     nop	        50	argv-array.c	FUNCTION_5
0x3f3	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	        50	argv-array.c	FUNCTION_5
0x3fa	    0x644833042528	                xor rax, qword fs:[0x28]	        50	argv-array.c	FUNCTION_5
0x403	            0x7405	                            je 0x400044a	        50	argv-array.c	FUNCTION_5
0x405	      0xe800000000	                          call 0x400044a	        50	argv-array.c	FUNCTION_5
0x40a	              0xc9	                                   leave	        50	argv-array.c	FUNCTION_5
0x40b	              0xc3	                                     ret	        50	argv-array.c	FUNCTION_5
st_mult	SWITCH,0:CALL,2:IF,1:WHILE,0:functions,0:ELSE,0:DO,0:FOR,0	22
0x0	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_25
0x1	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_25
0x4	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_25
0x8	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_25
0xc	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_25
0x10	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_25	IF_1	CALL_1
0x15	            0x7430	                            je 0x4000087	       795	git-compat-util.h	FUNCTION_25	IF_1	CALL_1
0x17	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_25	IF_1	CALL_1
0x1e	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_25	IF_1	CALL_1
0x23	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_25	IF_1	CALL_1
0x27	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_25	IF_1	CALL_1
0x2b	            0x731a	                           jae 0x4000087	       795	git-compat-util.h	FUNCTION_25	IF_1	CALL_1
0x2d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_25	IF_1	CALL_2
0x31	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_25	IF_1	CALL_2
0x35	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_25	IF_1	CALL_2
0x38	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_25	IF_1	CALL_2
0x3d	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_25	IF_1	CALL_2
0x42	      0xe800000000	                          call 0x4000087	       796	git-compat-util.h	FUNCTION_25	IF_1	CALL_2
0x47	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_25
0x4b	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_25
0x50	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_25
0x51	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_25
