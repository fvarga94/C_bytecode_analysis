cmd__strcmp_offset	SWITCH,0:CALL,3:functions,0:ELSE,0:FOR,0:WHILE,0:IF,1:DO,0	35
0x4000040	        0x4883ec18	                           sub rsp, 0x18	         5	test-strcmp-offset.c	FUNCTION_1
0x4000044	          0x4889f0	                            mov rax, rsi	         5	test-strcmp-offset.c	FUNCTION_1
0x4000047	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	         5	test-strcmp-offset.c	FUNCTION_1
0x4000050	      0x48894c2408	                mov qword [rsp + 8], rcx	         5	test-strcmp-offset.c	FUNCTION_1
0x4000055	            0x31c9	                            xor ecx, ecx	         5	test-strcmp-offset.c	FUNCTION_1
0x4000057	        0x488b7e08	                mov rdi, qword [rsi + 8]	         9	test-strcmp-offset.c	FUNCTION_1	IF_1
0x400005b	          0x4885ff	                           test rdi, rdi	         9	test-strcmp-offset.c	FUNCTION_1	IF_1
0x400005e	            0x7409	                            je 0x4000069	         9	test-strcmp-offset.c	FUNCTION_1	IF_1
0x4000060	        0x488b7610	            mov rsi, qword [rsi + 0x10] 	         9	test-strcmp-offset.c	FUNCTION_1	IF_1
0x4000064	          0x4885f6	                           test rsi, rsi	         9	test-strcmp-offset.c	FUNCTION_1	IF_1
0x4000067	            0x7512	                           jne 0x400007b	         9	test-strcmp-offset.c	FUNCTION_1	IF_1
0x4000069	          0x488b30	                    mov rsi, qword [rax]	        10	test-strcmp-offset.c	FUNCTION_1	CALL_1
0x400006c	      0xbf00000000	                              mov edi, 0	        10	test-strcmp-offset.c	FUNCTION_1	CALL_1
0x4000071	      0xb800000000	                              mov eax, 0	        10	test-strcmp-offset.c	FUNCTION_1	CALL_1
0x4000076	      0xe800000000	                          call 0x400007b	        10	test-strcmp-offset.c	FUNCTION_1	CALL_1
0x400007b	          0x4889e2	                            mov rdx, rsp	        12	test-strcmp-offset.c	FUNCTION_1	CALL_2
0x400007e	      0xe800000000	                          call 0x4000083	        12	test-strcmp-offset.c	FUNCTION_1	CALL_2
0x4000083	      0xbaffffffff	                     mov edx, 0xffffffff	        18	test-strcmp-offset.c	FUNCTION_1
0x4000088	            0x85c0	                           test eax, eax	        18	test-strcmp-offset.c	FUNCTION_1
0x400008a	            0x7808	                            js 0x4000094	        18	test-strcmp-offset.c	FUNCTION_1
0x400008c	            0x85c0	                           test eax, eax	        19	test-strcmp-offset.c	FUNCTION_1
0x400008e	           0xf9fc2	                                 setg dl	        18	test-strcmp-offset.c	FUNCTION_1
0x4000091	           0xfb6d2	                           movzx edx, dl	        18	test-strcmp-offset.c	FUNCTION_1
0x4000094	        0x488b0c24	                    mov rcx, qword [rsp]	       104	stdio2.h	FUNCTION_7	CALL_2
0x4000098	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	FUNCTION_7	CALL_2
0x400009d	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	FUNCTION_7	CALL_2
0x40000a2	      0xb800000000	                              mov eax, 0	       104	stdio2.h	FUNCTION_7	CALL_2
0x40000a7	      0xe800000000	                          call 0x40000ac	       104	stdio2.h	FUNCTION_7	CALL_2
0x40000ac	      0xb800000000	                              mov eax, 0	        23	test-strcmp-offset.c	FUNCTION_1
0x40000b1	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        23	test-strcmp-offset.c	FUNCTION_1
0x40000b6	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        23	test-strcmp-offset.c	FUNCTION_1
0x40000bf	            0x7405	                            je 0x40000c6	        23	test-strcmp-offset.c	FUNCTION_1
0x40000c1	      0xe800000000	                          call 0x40000c6	        23	test-strcmp-offset.c	FUNCTION_1
0x40000c6	        0x4883c418	                           add rsp, 0x18	        23	test-strcmp-offset.c	FUNCTION_1
0x40000ca	              0xc3	                                     ret	        23	test-strcmp-offset.c	FUNCTION_1
