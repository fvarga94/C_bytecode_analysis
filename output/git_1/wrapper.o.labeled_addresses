strbuf_complete	CALL,1:IF,1:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	27
0x4000110	              0x55	                                push rbp	       594	strbuf.h	FUNCTION_10
0x4000111	          0x4889e5	                            mov rbp, rsp	       594	strbuf.h	FUNCTION_10
0x4000114	        0x4883ec10	                           sub rsp, 0x10	       594	strbuf.h	FUNCTION_10
0x4000118	        0x48897df8	                mov qword [rbp - 8], rdi	       594	strbuf.h	FUNCTION_10
0x400011c	            0x89f0	                            mov eax, esi	       594	strbuf.h	FUNCTION_10
0x400011e	          0x8845f4	                mov byte [rbp - 0xc], al	       594	strbuf.h	FUNCTION_10
0x4000121	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_10	IF_1
0x4000125	        0x488b4008	                mov rax, qword [rax + 8]	       595	strbuf.h	FUNCTION_10	IF_1
0x4000129	          0x4885c0	                           test rax, rax	       595	strbuf.h	FUNCTION_10	IF_1
0x400012c	            0x7431	                            je 0x400015f	       595	strbuf.h	FUNCTION_10	IF_1
0x400012e	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_10	IF_1
0x4000132	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       595	strbuf.h	FUNCTION_10	IF_1
0x4000136	        0x488b45f8	                mov rax, qword [rbp - 8]	       595	strbuf.h	FUNCTION_10	IF_1
0x400013a	        0x488b4008	                mov rax, qword [rax + 8]	       595	strbuf.h	FUNCTION_10	IF_1
0x400013e	        0x4883e801	                              sub rax, 1	       595	strbuf.h	FUNCTION_10	IF_1
0x4000142	          0x4801d0	                            add rax, rdx	       595	strbuf.h	FUNCTION_10	IF_1
0x4000145	           0xfb600	                   movzx eax, byte [rax]	       595	strbuf.h	FUNCTION_10	IF_1
0x4000148	          0x3a45f4	                cmp al, byte [rbp - 0xc]	       595	strbuf.h	FUNCTION_10	IF_1
0x400014b	            0x7412	                            je 0x400015f	       595	strbuf.h	FUNCTION_10	IF_1
0x400014d	         0xfbe55f4	             movsx edx, byte [rbp - 0xc]	       596	strbuf.h	FUNCTION_10	CALL_1
0x4000151	        0x488b45f8	                mov rax, qword [rbp - 8]	       596	strbuf.h	FUNCTION_10	CALL_1
0x4000155	            0x89d6	                            mov esi, edx	       596	strbuf.h	FUNCTION_10	CALL_1
0x4000157	          0x4889c7	                            mov rdi, rax	       596	strbuf.h	FUNCTION_10	CALL_1
0x400015a	      0xe843ffffff	                   call sym.strbuf_addch	       596	strbuf.h	FUNCTION_10	CALL_1
0x400015f	              0x90	                                     nop	       597	strbuf.h	FUNCTION_10
0x4000160	              0xc9	                                   leave	       597	strbuf.h	FUNCTION_10
0x4000161	              0xc3	                                     ret	       597	strbuf.h	FUNCTION_10
xmemdupz	CALL,2:IF,0:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	16
0x40004c8	              0x55	                                push rbp	       123	wrapper.c	FUNCTION_21
0x40004c9	          0x4889e5	                            mov rbp, rsp	       123	wrapper.c	FUNCTION_21
0x40004cc	        0x4883ec10	                           sub rsp, 0x10	       123	wrapper.c	FUNCTION_21
0x40004d0	        0x48897df8	                mov qword [rbp - 8], rdi	       123	wrapper.c	FUNCTION_21
0x40004d4	        0x488975f0	             mov qword [rbp - 0x10], rsi	       123	wrapper.c	FUNCTION_21
0x40004d8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       124	wrapper.c	FUNCTION_21	CALL_2
0x40004dc	          0x4889c7	                            mov rdi, rax	       124	wrapper.c	FUNCTION_21	CALL_2
0x40004df	      0xe800000000	                          call 0x40004e4	       124	wrapper.c	FUNCTION_21	CALL_2
0x40004e4	          0x4889c1	                            mov rcx, rax	       124	wrapper.c	FUNCTION_21	CALL_2
0x40004e7	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       124	wrapper.c	FUNCTION_21	CALL_2
0x40004eb	        0x488b45f8	                mov rax, qword [rbp - 8]	       124	wrapper.c	FUNCTION_21	CALL_2
0x40004ef	          0x4889c6	                            mov rsi, rax	       124	wrapper.c	FUNCTION_21	CALL_2
0x40004f2	          0x4889cf	                            mov rdi, rcx	       124	wrapper.c	FUNCTION_21	CALL_2
0x40004f5	      0xe800000000	                          call 0x40004fa	       124	wrapper.c	FUNCTION_21	CALL_2
0x40004fa	              0xc9	                                   leave	       125	wrapper.c	FUNCTION_21
0x40004fb	              0xc3	                                     ret	       125	wrapper.c	FUNCTION_21
memory_limit_check	CALL,2:IF,4:SWITCH,0:ELSE,1:FOR,0:WHILE,0:functions,0:DO,0	39
0x40001b9	              0x55	                                push rbp	        14	wrapper.c	FUNCTION_13
0x40001ba	          0x4889e5	                            mov rbp, rsp	        14	wrapper.c	FUNCTION_13
0x40001bd	        0x4883ec10	                           sub rsp, 0x10	        14	wrapper.c	FUNCTION_13
0x40001c1	        0x48897df8	                mov qword [rbp - 8], rdi	        14	wrapper.c	FUNCTION_13
0x40001c5	          0x8975f4	              mov dword [rbp - 0xc], esi	        14	wrapper.c	FUNCTION_13
0x40001c8	    0x488b05000000	            mov rax, qword [0x040001cf] 	        16	wrapper.c	FUNCTION_13	IF_1
0x40001cf	          0x4885c0	                           test rax, rax	        16	wrapper.c	FUNCTION_13	IF_1
0x40001d2	            0x752d	                           jne 0x4000201	        16	wrapper.c	FUNCTION_13	IF_1
0x40001d4	      0xbe00000000	                              mov esi, 0	        17	wrapper.c	FUNCTION_13	IF_1	CALL_1
0x40001d9	      0xbf00000000	                              mov edi, 0	        17	wrapper.c	FUNCTION_13	IF_1	CALL_1
0x40001de	      0xe800000000	                          call 0x40001e3	        17	wrapper.c	FUNCTION_13	IF_1	CALL_1
0x40001e3	    0x488905000000	            mov qword [0x040001ea], rax 	        17	wrapper.c	FUNCTION_13	IF_1	CALL_1
0x40001ea	    0x488b05000000	            mov rax, qword [0x040001f1] 	        18	wrapper.c	FUNCTION_13	IF_1	IF_2
0x40001f1	          0x4885c0	                           test rax, rax	        18	wrapper.c	FUNCTION_13	IF_1	IF_2
0x40001f4	            0x750b	                           jne 0x4000201	        18	wrapper.c	FUNCTION_13	IF_1	IF_2
0x40001f6	    0x48c705000000	mov qword [0x04000201], 0xffffffffffffffff 	        19	wrapper.c	FUNCTION_13	IF_1	IF_2
0x4000201	    0x488b05000000	            mov rax, qword [0x04000208] 	        21	wrapper.c	FUNCTION_13	IF_3
0x4000208	        0x483945f8	                cmp qword [rbp - 8], rax	        21	wrapper.c	FUNCTION_13	IF_3
0x400020c	            0x764c	                           jbe 0x400025a	        21	wrapper.c	FUNCTION_13	IF_3
0x400020e	        0x837df400	                cmp dword [rbp - 0xc], 0	        22	wrapper.c	FUNCTION_13	IF_3	IF_4
0x4000212	            0x7429	                            je 0x400023d	        22	wrapper.c	FUNCTION_13	IF_3	IF_4
0x4000214	    0x488b15000000	            mov rdx, qword [0x0400021b] 	        23	wrapper.c	FUNCTION_13	IF_3	IF_4
0x400021b	        0x488b45f8	                mov rax, qword [rbp - 8]	        23	wrapper.c	FUNCTION_13	IF_3	IF_4
0x400021f	          0x4889c6	                            mov rsi, rax	        23	wrapper.c	FUNCTION_13	IF_3	IF_4
0x4000222	      0xbf00000000	                              mov edi, 0	        23	wrapper.c	FUNCTION_13	IF_3	IF_4
0x4000227	      0xb800000000	                              mov eax, 0	        23	wrapper.c	FUNCTION_13	IF_3	IF_4
0x400022c	      0xe800000000	                          call 0x4000231	        23	wrapper.c	FUNCTION_13	IF_3	IF_4
0x4000231	      0xe80afeffff	                    call sym.const_error	        23	wrapper.c	FUNCTION_13	IF_3	IF_4
0x4000236	      0xb8ffffffff	                     mov eax, 0xffffffff	        25	wrapper.c	FUNCTION_13	IF_3	IF_4
0x400023b	            0xeb22	                           jmp 0x400025f	        25	wrapper.c	FUNCTION_13	IF_3	IF_4
0x400023d	    0x488b15000000	            mov rdx, qword [0x04000244] 	        27	wrapper.c	FUNCTION_13	IF_3	ELSE_1	CALL_2
0x4000244	        0x488b45f8	                mov rax, qword [rbp - 8]	        27	wrapper.c	FUNCTION_13	IF_3	ELSE_1	CALL_2
0x4000248	          0x4889c6	                            mov rsi, rax	        27	wrapper.c	FUNCTION_13	IF_3	ELSE_1	CALL_2
0x400024b	      0xbf00000000	                              mov edi, 0	        27	wrapper.c	FUNCTION_13	IF_3	ELSE_1	CALL_2
0x4000250	      0xb800000000	                              mov eax, 0	        27	wrapper.c	FUNCTION_13	IF_3	ELSE_1	CALL_2
0x4000255	      0xe800000000	                          call 0x400025a	        27	wrapper.c	FUNCTION_13	IF_3	ELSE_1	CALL_2
0x400025a	      0xb800000000	                              mov eax, 0	        30	wrapper.c	FUNCTION_13
0x400025f	              0xc9	                                   leave	        31	wrapper.c	FUNCTION_13
0x4000260	              0xc3	                                     ret	        31	wrapper.c	FUNCTION_13
strbuf_addch	CALL,2:IF,1:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	33
0x40000a2	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_4
0x40000a3	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_4
0x40000a6	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_4
0x40000aa	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_4
0x40000ae	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_4
0x40000b1	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x40000b5	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x40000b8	      0xe8afffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x40000bd	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x40000c0	            0x7511	                           jne 0x40000d3	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x40000c2	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_4	CALL_2
0x40000c6	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_4	CALL_2
0x40000cb	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_4	CALL_2
0x40000ce	      0xe800000000	                          call 0x40000d3	       228	strbuf.h	FUNCTION_4	CALL_2
0x40000d3	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x40000d7	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_4
0x40000db	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x40000df	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_4
0x40000e3	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_4
0x40000e7	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x40000eb	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_4
0x40000ef	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_4
0x40000f2	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_4
0x40000f5	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_4
0x40000f7	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_4
0x40000fb	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_4
0x40000ff	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_4
0x4000103	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_4
0x4000107	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_4
0x400010a	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_4
0x400010d	              0x90	                                     nop	       231	strbuf.h	FUNCTION_4
0x400010e	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_4
0x400010f	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_4
is_missing_file_error	CALL,0:IF,0:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	12
0x400004b	              0x55	                                push rbp	      1196	git-compat-util.h	FUNCTION_84
0x400004c	          0x4889e5	                            mov rbp, rsp	      1196	git-compat-util.h	FUNCTION_84
0x400004f	          0x897dfc	                mov dword [rbp - 4], edi	      1196	git-compat-util.h	FUNCTION_84
0x4000052	        0x837dfc02	                  cmp dword [rbp - 4], 2	      1197	git-compat-util.h	FUNCTION_84
0x4000056	            0x7406	                            je 0x400005e	      1197	git-compat-util.h	FUNCTION_84
0x4000058	        0x837dfc14	               cmp dword [rbp - 4], 0x14	      1197	git-compat-util.h	FUNCTION_84
0x400005c	            0x7507	                           jne 0x4000065	      1197	git-compat-util.h	FUNCTION_84
0x400005e	      0xb801000000	                              mov eax, 1	      1197	git-compat-util.h	FUNCTION_84
0x4000063	            0xeb05	                           jmp 0x400006a	      1197	git-compat-util.h	FUNCTION_84
0x4000065	      0xb800000000	                              mov eax, 0	      1197	git-compat-util.h	FUNCTION_84
0x400006a	              0x5d	                                 pop rbp	      1198	git-compat-util.h	FUNCTION_84
0x400006b	              0xc3	                                     ret	      1198	git-compat-util.h	FUNCTION_84
xmalloc	CALL,1:IF,0:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	10
0x40003f1	              0x55	                                push rbp	        86	wrapper.c	FUNCTION_17
0x40003f2	          0x4889e5	                            mov rbp, rsp	        86	wrapper.c	FUNCTION_17
0x40003f5	        0x4883ec10	                           sub rsp, 0x10	        86	wrapper.c	FUNCTION_17
0x40003f9	        0x48897df8	                mov qword [rbp - 8], rdi	        86	wrapper.c	FUNCTION_17
0x40003fd	        0x488b45f8	                mov rax, qword [rbp - 8]	        87	wrapper.c	FUNCTION_17	CALL_1
0x4000401	      0xbe00000000	                              mov esi, 0	        87	wrapper.c	FUNCTION_17	CALL_1
0x4000406	          0x4889c7	                            mov rdi, rax	        87	wrapper.c	FUNCTION_17	CALL_1
0x4000409	      0xe8f7feffff	                     call sym.do_xmalloc	        87	wrapper.c	FUNCTION_17	CALL_1
0x400040e	              0xc9	                                   leave	        88	wrapper.c	FUNCTION_17
0x400040f	              0xc3	                                     ret	        88	wrapper.c	FUNCTION_17
write_file_buf	CALL,7:IF,2:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	45
0x4001802	              0x55	                                push rbp	       653	wrapper.c	FUNCTION_54
0x4001803	          0x4889e5	                            mov rbp, rsp	       653	wrapper.c	FUNCTION_54
0x4001806	        0x4883ec30	                           sub rsp, 0x30	       653	wrapper.c	FUNCTION_54
0x400180a	        0x48897de8	             mov qword [rbp - 0x18], rdi	       653	wrapper.c	FUNCTION_54
0x400180e	        0x488975e0	             mov qword [rbp - 0x20], rsi	       653	wrapper.c	FUNCTION_54
0x4001812	        0x488955d8	             mov qword [rbp - 0x28], rdx	       653	wrapper.c	FUNCTION_54
0x4001816	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       654	wrapper.c	FUNCTION_54	CALL_1
0x400181a	      0xbab6010000	                          mov edx, 0x1b6	       654	wrapper.c	FUNCTION_54	CALL_1
0x400181f	      0xbe41020000	                          mov esi, 0x241	       654	wrapper.c	FUNCTION_54	CALL_1
0x4001824	          0x4889c7	                            mov rdi, rax	       654	wrapper.c	FUNCTION_54	CALL_1
0x4001827	      0xb800000000	                              mov eax, 0	       654	wrapper.c	FUNCTION_54	CALL_1
0x400182c	      0xe800000000	                          call 0x4001831	       654	wrapper.c	FUNCTION_54	CALL_1
0x4001831	          0x8945fc	                mov dword [rbp - 4], eax	       654	wrapper.c	FUNCTION_54	CALL_1
0x4001834	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       655	wrapper.c	FUNCTION_54	IF_1	CALL_2
0x4001838	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       655	wrapper.c	FUNCTION_54	IF_1	CALL_2
0x400183c	          0x8b45fc	                mov eax, dword [rbp - 4]	       655	wrapper.c	FUNCTION_54	IF_1	CALL_2
0x400183f	          0x4889ce	                            mov rsi, rcx	       655	wrapper.c	FUNCTION_54	IF_1	CALL_2
0x4001842	            0x89c7	                            mov edi, eax	       655	wrapper.c	FUNCTION_54	IF_1	CALL_2
0x4001844	      0xe800000000	                          call 0x4001849	       655	wrapper.c	FUNCTION_54	IF_1	CALL_2
0x4001849	          0x4885c0	                           test rax, rax	       655	wrapper.c	FUNCTION_54	IF_1	CALL_2
0x400184c	            0x7921	                           jns 0x400186f	       655	wrapper.c	FUNCTION_54	IF_1	CALL_2
0x400184e	      0xbf00000000	                              mov edi, 0	       656	wrapper.c	FUNCTION_54	CALL_4
0x4001853	      0xe82ae9ffff	                               call sym.	       656	wrapper.c	FUNCTION_54	CALL_4
0x4001858	          0x4889c2	                            mov rdx, rax	       656	wrapper.c	FUNCTION_54	CALL_4
0x400185b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       656	wrapper.c	FUNCTION_54	CALL_4
0x400185f	          0x4889c6	                            mov rsi, rax	       656	wrapper.c	FUNCTION_54	CALL_4
0x4001862	          0x4889d7	                            mov rdi, rdx	       656	wrapper.c	FUNCTION_54	CALL_4
0x4001865	      0xb800000000	                              mov eax, 0	       656	wrapper.c	FUNCTION_54	CALL_4
0x400186a	      0xe800000000	                          call 0x400186f	       656	wrapper.c	FUNCTION_54	CALL_4
0x400186f	          0x8b45fc	                mov eax, dword [rbp - 4]	       657	wrapper.c	FUNCTION_54	IF_2	CALL_5
0x4001872	            0x89c7	                            mov edi, eax	       657	wrapper.c	FUNCTION_54	IF_2	CALL_5
0x4001874	      0xe800000000	                          call 0x4001879	       657	wrapper.c	FUNCTION_54	IF_2	CALL_5
0x4001879	            0x85c0	                           test eax, eax	       657	wrapper.c	FUNCTION_54	IF_2	CALL_5
0x400187b	            0x7421	                            je 0x400189e	       657	wrapper.c	FUNCTION_54	IF_2	CALL_5
0x400187d	      0xbf00000000	                              mov edi, 0	       658	wrapper.c	FUNCTION_54	CALL_7
0x4001882	      0xe8fbe8ffff	                               call sym.	       658	wrapper.c	FUNCTION_54	CALL_7
0x4001887	          0x4889c2	                            mov rdx, rax	       658	wrapper.c	FUNCTION_54	CALL_7
0x400188a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       658	wrapper.c	FUNCTION_54	CALL_7
0x400188e	          0x4889c6	                            mov rsi, rax	       658	wrapper.c	FUNCTION_54	CALL_7
0x4001891	          0x4889d7	                            mov rdi, rdx	       658	wrapper.c	FUNCTION_54	CALL_7
0x4001894	      0xb800000000	                              mov eax, 0	       658	wrapper.c	FUNCTION_54	CALL_7
0x4001899	      0xe800000000	                          call 0x400189e	       658	wrapper.c	FUNCTION_54	CALL_7
0x400189e	              0x90	                                     nop	       659	wrapper.c	FUNCTION_54
0x400189f	              0xc9	                                   leave	       659	wrapper.c	FUNCTION_54
0x40018a0	              0xc3	                                     ret	       659	wrapper.c	FUNCTION_54
xmallocz	CALL,1:IF,0:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	10
0x400048a	              0x55	                                push rbp	       107	wrapper.c	FUNCTION_19
0x400048b	          0x4889e5	                            mov rbp, rsp	       107	wrapper.c	FUNCTION_19
0x400048e	        0x4883ec10	                           sub rsp, 0x10	       107	wrapper.c	FUNCTION_19
0x4000492	        0x48897df8	                mov qword [rbp - 8], rdi	       107	wrapper.c	FUNCTION_19
0x4000496	        0x488b45f8	                mov rax, qword [rbp - 8]	       108	wrapper.c	FUNCTION_19	CALL_1
0x400049a	      0xbe00000000	                              mov esi, 0	       108	wrapper.c	FUNCTION_19	CALL_1
0x400049f	          0x4889c7	                            mov rdi, rax	       108	wrapper.c	FUNCTION_19	CALL_1
0x40004a2	      0xe869ffffff	                    call sym.do_xmallocz	       108	wrapper.c	FUNCTION_19	CALL_1
0x40004a7	              0xc9	                                   leave	       109	wrapper.c	FUNCTION_19
0x40004a8	              0xc3	                                     ret	       109	wrapper.c	FUNCTION_19
xdup	CALL,2:IF,1:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	16
0x4000c70	              0x55	                                push rbp	       373	wrapper.c	FUNCTION_33
0x4000c71	          0x4889e5	                            mov rbp, rsp	       373	wrapper.c	FUNCTION_33
0x4000c74	        0x4883ec20	                           sub rsp, 0x20	       373	wrapper.c	FUNCTION_33
0x4000c78	          0x897dec	             mov dword [rbp - 0x14], edi	       373	wrapper.c	FUNCTION_33
0x4000c7b	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       374	wrapper.c	FUNCTION_33	CALL_1
0x4000c7e	            0x89c7	                            mov edi, eax	       374	wrapper.c	FUNCTION_33	CALL_1
0x4000c80	      0xe800000000	                          call 0x4000c85	       374	wrapper.c	FUNCTION_33	CALL_1
0x4000c85	          0x8945fc	                mov dword [rbp - 4], eax	       374	wrapper.c	FUNCTION_33	CALL_1
0x4000c88	        0x837dfc00	                  cmp dword [rbp - 4], 0	       375	wrapper.c	FUNCTION_33	IF_1
0x4000c8c	            0x790f	                           jns 0x4000c9d	       375	wrapper.c	FUNCTION_33	IF_1
0x4000c8e	      0xbf00000000	                              mov edi, 0	       376	wrapper.c	FUNCTION_33	CALL_2
0x4000c93	      0xb800000000	                              mov eax, 0	       376	wrapper.c	FUNCTION_33	CALL_2
0x4000c98	      0xe800000000	                          call 0x4000c9d	       376	wrapper.c	FUNCTION_33	CALL_2
0x4000c9d	          0x8b45fc	                mov eax, dword [rbp - 4]	       377	wrapper.c	FUNCTION_33
0x4000ca0	              0xc9	                                   leave	       378	wrapper.c	FUNCTION_33
0x4000ca1	              0xc3	                                     ret	       378	wrapper.c	FUNCTION_33
set_try_to_free_routine	CALL,0:IF,1:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	13
0x4000261	              0x55	                                push rbp	        34	wrapper.c	FUNCTION_14
0x4000262	          0x4889e5	                            mov rbp, rsp	        34	wrapper.c	FUNCTION_14
0x4000265	        0x48897de8	             mov qword [rbp - 0x18], rdi	        34	wrapper.c	FUNCTION_14
0x4000269	    0x488b05000000	            mov rax, qword [0x04000270] 	        35	wrapper.c	FUNCTION_14
0x4000270	        0x488945f8	                mov qword [rbp - 8], rax	        35	wrapper.c	FUNCTION_14
0x4000274	      0x48837de800	               cmp qword [rbp - 0x18], 0	        36	wrapper.c	FUNCTION_14	IF_1
0x4000279	            0x7508	                           jne 0x4000283	        36	wrapper.c	FUNCTION_14	IF_1
0x400027b	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        37	wrapper.c	FUNCTION_14	IF_1
0x4000283	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        38	wrapper.c	FUNCTION_14
0x4000287	    0x488905000000	            mov qword [0x0400028e], rax 	        38	wrapper.c	FUNCTION_14
0x400028e	        0x488b45f8	                mov rax, qword [rbp - 8]	        39	wrapper.c	FUNCTION_14
0x4000292	              0x5d	                                 pop rbp	        40	wrapper.c	FUNCTION_14
0x4000293	              0xc3	                                     ret	        40	wrapper.c	FUNCTION_14
xmallocz_gently	CALL,1:IF,0:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	10
0x40004a9	              0x55	                                push rbp	       112	wrapper.c	FUNCTION_20
0x40004aa	          0x4889e5	                            mov rbp, rsp	       112	wrapper.c	FUNCTION_20
0x40004ad	        0x4883ec10	                           sub rsp, 0x10	       112	wrapper.c	FUNCTION_20
0x40004b1	        0x48897df8	                mov qword [rbp - 8], rdi	       112	wrapper.c	FUNCTION_20
0x40004b5	        0x488b45f8	                mov rax, qword [rbp - 8]	       113	wrapper.c	FUNCTION_20	CALL_1
0x40004b9	      0xbe01000000	                              mov esi, 1	       113	wrapper.c	FUNCTION_20	CALL_1
0x40004be	          0x4889c7	                            mov rdi, rax	       113	wrapper.c	FUNCTION_20	CALL_1
0x40004c1	      0xe84affffff	                    call sym.do_xmallocz	       113	wrapper.c	FUNCTION_20	CALL_1
0x40004c6	              0xc9	                                   leave	       114	wrapper.c	FUNCTION_20
0x40004c7	              0xc3	                                     ret	       114	wrapper.c	FUNCTION_20
xstrndup	CALL,2:IF,0:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	25
0x40004fc	              0x55	                                push rbp	       128	wrapper.c	FUNCTION_22
0x40004fd	          0x4889e5	                            mov rbp, rsp	       128	wrapper.c	FUNCTION_22
0x4000500	        0x4883ec20	                           sub rsp, 0x20	       128	wrapper.c	FUNCTION_22
0x4000504	        0x48897de8	             mov qword [rbp - 0x18], rdi	       128	wrapper.c	FUNCTION_22
0x4000508	        0x488975e0	             mov qword [rbp - 0x20], rsi	       128	wrapper.c	FUNCTION_22
0x400050c	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       129	wrapper.c	FUNCTION_22	CALL_1
0x4000510	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       129	wrapper.c	FUNCTION_22	CALL_1
0x4000514	      0xbe00000000	                              mov esi, 0	       129	wrapper.c	FUNCTION_22	CALL_1
0x4000519	          0x4889c7	                            mov rdi, rax	       129	wrapper.c	FUNCTION_22	CALL_1
0x400051c	      0xe800000000	                          call 0x4000521	       129	wrapper.c	FUNCTION_22	CALL_1
0x4000521	        0x488945f8	                mov qword [rbp - 8], rax	       129	wrapper.c	FUNCTION_22	CALL_1
0x4000525	      0x48837df800	                  cmp qword [rbp - 8], 0	       130	wrapper.c	FUNCTION_22	CALL_2
0x400052a	            0x7410	                            je 0x400053c	       130	wrapper.c	FUNCTION_22	CALL_2
0x400052c	        0x488b55f8	                mov rdx, qword [rbp - 8]	       130	wrapper.c	FUNCTION_22	CALL_2
0x4000530	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       130	wrapper.c	FUNCTION_22	CALL_2
0x4000534	          0x4829c2	                            sub rdx, rax	       130	wrapper.c	FUNCTION_22	CALL_2
0x4000537	          0x4889d0	                            mov rax, rdx	       130	wrapper.c	FUNCTION_22	CALL_2
0x400053a	            0xeb04	                           jmp 0x4000540	       130	wrapper.c	FUNCTION_22	CALL_2
0x400053c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       130	wrapper.c	FUNCTION_22	CALL_2
0x4000540	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       130	wrapper.c	FUNCTION_22	CALL_2
0x4000544	          0x4889c6	                            mov rsi, rax	       130	wrapper.c	FUNCTION_22	CALL_2
0x4000547	          0x4889d7	                            mov rdi, rdx	       130	wrapper.c	FUNCTION_22	CALL_2
0x400054a	      0xe800000000	                          call 0x400054f	       130	wrapper.c	FUNCTION_22	CALL_2
0x400054f	              0xc9	                                   leave	       131	wrapper.c	FUNCTION_22
0x4000550	              0xc3	                                     ret	       131	wrapper.c	FUNCTION_22
xpread	CALL,0:IF,2:SWITCH,0:ELSE,0:FOR,0:WHILE,1:functions,0:DO,0	31
0x4000a6b	              0x55	                                push rbp	       300	wrapper.c	FUNCTION_29
0x4000a6c	          0x4889e5	                            mov rbp, rsp	       300	wrapper.c	FUNCTION_29
0x4000a6f	        0x4883ec30	                           sub rsp, 0x30	       300	wrapper.c	FUNCTION_29
0x4000a73	          0x897dec	             mov dword [rbp - 0x14], edi	       300	wrapper.c	FUNCTION_29
0x4000a76	        0x488975e0	             mov qword [rbp - 0x20], rsi	       300	wrapper.c	FUNCTION_29
0x4000a7a	        0x488955d8	             mov qword [rbp - 0x28], rdx	       300	wrapper.c	FUNCTION_29
0x4000a7e	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       300	wrapper.c	FUNCTION_29
0x4000a82	    0x48817dd80000	       cmp qword [rbp - 0x28], 0x800000 	       302	wrapper.c	FUNCTION_29	IF_1
0x4000a8a	            0x7608	                           jbe 0x4000a94	       302	wrapper.c	FUNCTION_29	IF_1
0x4000a8c	    0x48c745d80000	        mov qword [rbp - 0x28], 0x800000	       303	wrapper.c	FUNCTION_29	IF_1
0x4000a94	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       305	wrapper.c	FUNCTION_29	WHILE_1
0x4000a98	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       305	wrapper.c	FUNCTION_29	WHILE_1
0x4000a9c	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       305	wrapper.c	FUNCTION_29	WHILE_1
0x4000aa0	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       305	wrapper.c	FUNCTION_29	WHILE_1
0x4000aa3	            0x89c7	                            mov edi, eax	       305	wrapper.c	FUNCTION_29	WHILE_1
0x4000aa5	      0xe800000000	                          call 0x4000aaa	       305	wrapper.c	FUNCTION_29	WHILE_1
0x4000aaa	        0x488945f8	                mov qword [rbp - 8], rax	       305	wrapper.c	FUNCTION_29	WHILE_1
0x4000aae	      0x48837df800	                  cmp qword [rbp - 8], 0	       306	wrapper.c	FUNCTION_29	WHILE_1	IF_2
0x4000ab3	            0x791a	                           jns 0x4000acf	       306	wrapper.c	FUNCTION_29	WHILE_1	IF_2
0x4000ab5	      0xe800000000	                          call 0x4000aba	       306	wrapper.c	FUNCTION_29	WHILE_1	IF_2
0x4000aba	            0x8b00	                    mov eax, dword [rax]	       306	wrapper.c	FUNCTION_29	WHILE_1	IF_2
0x4000abc	          0x83f80b	                            cmp eax, 0xb	       306	wrapper.c	FUNCTION_29	WHILE_1	IF_2
0x4000abf	            0x74d3	                            je 0x4000a94	       306	wrapper.c	FUNCTION_29	WHILE_1	IF_2
0x4000ac1	      0xe800000000	                          call 0x4000ac6	       306	wrapper.c	FUNCTION_29	WHILE_1	IF_2
0x4000ac6	            0x8b00	                    mov eax, dword [rax]	       306	wrapper.c	FUNCTION_29	WHILE_1	IF_2
0x4000ac8	          0x83f804	                              cmp eax, 4	       306	wrapper.c	FUNCTION_29	WHILE_1	IF_2
0x4000acb	            0x7502	                           jne 0x4000acf	       306	wrapper.c	FUNCTION_29	WHILE_1	IF_2
0x4000acd	            0xebc5	                           jmp 0x4000a94	       309	wrapper.c	FUNCTION_29	WHILE_1
0x4000acf	        0x488b45f8	                mov rax, qword [rbp - 8]	       308	wrapper.c	FUNCTION_29	WHILE_1
0x4000ad3	              0xc9	                                   leave	       310	wrapper.c	FUNCTION_29
0x4000ad4	              0xc3	                                     ret	       310	wrapper.c	FUNCTION_29
xfopen	CALL,6:IF,4:SWITCH,0:ELSE,2:FOR,1:WHILE,0:functions,0:DO,0	63
0x4000ca2	              0x55	                                push rbp	       384	wrapper.c	FUNCTION_34
0x4000ca3	          0x4889e5	                            mov rbp, rsp	       384	wrapper.c	FUNCTION_34
0x4000ca6	        0x4883ec20	                           sub rsp, 0x20	       384	wrapper.c	FUNCTION_34
0x4000caa	        0x48897de8	             mov qword [rbp - 0x18], rdi	       384	wrapper.c	FUNCTION_34
0x4000cae	        0x488975e0	             mov qword [rbp - 0x20], rsi	       384	wrapper.c	FUNCTION_34
0x4000cb2	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       386	wrapper.c	FUNCTION_34	FOR_1
0x4000cb6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       386	wrapper.c	FUNCTION_34	FOR_1
0x4000cba	          0x4889d6	                            mov rsi, rdx	       386	wrapper.c	FUNCTION_34	FOR_1
0x4000cbd	          0x4889c7	                            mov rdi, rax	       386	wrapper.c	FUNCTION_34	FOR_1
0x4000cc0	      0xe800000000	                          call 0x4000cc5	       386	wrapper.c	FUNCTION_34	FOR_1
0x4000cc5	        0x488945f8	                mov qword [rbp - 8], rax	       386	wrapper.c	FUNCTION_34	FOR_1
0x4000cc9	      0x48837df800	                  cmp qword [rbp - 8], 0	       387	wrapper.c	FUNCTION_34	FOR_1	IF_1
0x4000cce	            0x7409	                            je 0x4000cd9	       387	wrapper.c	FUNCTION_34	FOR_1	IF_1
0x4000cd0	        0x488b45f8	                mov rax, qword [rbp - 8]	       388	wrapper.c	FUNCTION_34	FOR_1	IF_1
0x4000cd4	      0xe9a1000000	                           jmp 0x4000d7a	       388	wrapper.c	FUNCTION_34	FOR_1	IF_1
0x4000cd9	      0xe800000000	                          call 0x4000cde	       389	wrapper.c	FUNCTION_34	FOR_1	IF_2
0x4000cde	            0x8b00	                    mov eax, dword [rax]	       389	wrapper.c	FUNCTION_34	FOR_1	IF_2
0x4000ce0	          0x83f804	                              cmp eax, 4	       389	wrapper.c	FUNCTION_34	FOR_1	IF_2
0x4000ce3	            0x7502	                           jne 0x4000ce7	       389	wrapper.c	FUNCTION_34	FOR_1	IF_2
0x4000ce5	            0xebcb	                           jmp 0x4000cb2	       398	wrapper.c	FUNCTION_34	FOR_1
0x4000ce7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       392	wrapper.c	FUNCTION_34	FOR_1	IF_3
0x4000ceb	           0xfb600	                   movzx eax, byte [rax]	       392	wrapper.c	FUNCTION_34	FOR_1	IF_3
0x4000cee	            0x84c0	                             test al, al	       392	wrapper.c	FUNCTION_34	FOR_1	IF_3
0x4000cf0	            0x7430	                            je 0x4000d22	       392	wrapper.c	FUNCTION_34	FOR_1	IF_3
0x4000cf2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       392	wrapper.c	FUNCTION_34	FOR_1	IF_3
0x4000cf6	        0x4883c001	                              add rax, 1	       392	wrapper.c	FUNCTION_34	FOR_1	IF_3
0x4000cfa	           0xfb600	                   movzx eax, byte [rax]	       392	wrapper.c	FUNCTION_34	FOR_1	IF_3
0x4000cfd	            0x3c2b	                            cmp al, 0x2b	       392	wrapper.c	FUNCTION_34	FOR_1	IF_3
0x4000cff	            0x7521	                           jne 0x4000d22	       392	wrapper.c	FUNCTION_34	FOR_1	IF_3
0x4000d01	      0xbf00000000	                              mov edi, 0	       393	wrapper.c	FUNCTION_34	FOR_1	CALL_2
0x4000d06	      0xe877f4ffff	                               call sym.	       393	wrapper.c	FUNCTION_34	FOR_1	CALL_2
0x4000d0b	          0x4889c2	                            mov rdx, rax	       393	wrapper.c	FUNCTION_34	FOR_1	CALL_2
0x4000d0e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       393	wrapper.c	FUNCTION_34	FOR_1	CALL_2
0x4000d12	          0x4889c6	                            mov rsi, rax	       393	wrapper.c	FUNCTION_34	FOR_1	CALL_2
0x4000d15	          0x4889d7	                            mov rdi, rdx	       393	wrapper.c	FUNCTION_34	FOR_1	CALL_2
0x4000d18	      0xb800000000	                              mov eax, 0	       393	wrapper.c	FUNCTION_34	FOR_1	CALL_2
0x4000d1d	      0xe800000000	                          call 0x4000d22	       393	wrapper.c	FUNCTION_34	FOR_1	CALL_2
0x4000d22	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       394	wrapper.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x4000d26	           0xfb600	                   movzx eax, byte [rax]	       394	wrapper.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x4000d29	            0x3c77	                            cmp al, 0x77	       394	wrapper.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x4000d2b	            0x740b	                            je 0x4000d38	       394	wrapper.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x4000d2d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       394	wrapper.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x4000d31	           0xfb600	                   movzx eax, byte [rax]	       394	wrapper.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x4000d34	            0x3c61	                            cmp al, 0x61	       394	wrapper.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x4000d36	            0x7521	                           jne 0x4000d59	       394	wrapper.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x4000d38	      0xbf00000000	                              mov edi, 0	       395	wrapper.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x4000d3d	      0xe840f4ffff	                               call sym.	       395	wrapper.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x4000d42	          0x4889c2	                            mov rdx, rax	       395	wrapper.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x4000d45	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       395	wrapper.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x4000d49	          0x4889c6	                            mov rsi, rax	       395	wrapper.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x4000d4c	          0x4889d7	                            mov rdi, rdx	       395	wrapper.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x4000d4f	      0xb800000000	                              mov eax, 0	       395	wrapper.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x4000d54	      0xe800000000	                          call 0x4000d59	       395	wrapper.c	FUNCTION_34	FOR_1	ELSE_1	IF_4
0x4000d59	      0xbf00000000	                              mov edi, 0	       397	wrapper.c	FUNCTION_34	FOR_1	CALL_6
0x4000d5e	      0xe81ff4ffff	                               call sym.	       397	wrapper.c	FUNCTION_34	FOR_1	CALL_6
0x4000d63	          0x4889c2	                            mov rdx, rax	       397	wrapper.c	FUNCTION_34	FOR_1	CALL_6
0x4000d66	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       397	wrapper.c	FUNCTION_34	FOR_1	CALL_6
0x4000d6a	          0x4889c6	                            mov rsi, rax	       397	wrapper.c	FUNCTION_34	FOR_1	CALL_6
0x4000d6d	          0x4889d7	                            mov rdi, rdx	       397	wrapper.c	FUNCTION_34	FOR_1	CALL_6
0x4000d70	      0xb800000000	                              mov eax, 0	       397	wrapper.c	FUNCTION_34	FOR_1	CALL_6
0x4000d75	      0xe800000000	                          call 0x4000d7a	       397	wrapper.c	FUNCTION_34	FOR_1	CALL_6
0x4000d7a	              0xc9	                                   leave	       399	wrapper.c	FUNCTION_34
0x4000d7b	              0xc3	                                     ret	       399	wrapper.c	FUNCTION_34
const_error	CALL,0:IF,0:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	5
0x4000040	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_63
0x4000041	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_63
0x4000044	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_63
0x4000049	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_63
0x400004a	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_63
unlink_or_warn	CALL,2:IF,0:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	14
0x40014e1	              0x55	                                push rbp	       592	wrapper.c	FUNCTION_46
0x40014e2	          0x4889e5	                            mov rbp, rsp	       592	wrapper.c	FUNCTION_46
0x40014e5	        0x4883ec10	                           sub rsp, 0x10	       592	wrapper.c	FUNCTION_46
0x40014e9	        0x48897df8	                mov qword [rbp - 8], rdi	       592	wrapper.c	FUNCTION_46
0x40014ed	        0x488b45f8	                mov rax, qword [rbp - 8]	       593	wrapper.c	FUNCTION_46	CALL_2
0x40014f1	          0x4889c7	                            mov rdi, rax	       593	wrapper.c	FUNCTION_46	CALL_2
0x40014f4	      0xe800000000	                          call 0x40014f9	       593	wrapper.c	FUNCTION_46	CALL_2
0x40014f9	            0x89c2	                            mov edx, eax	       593	wrapper.c	FUNCTION_46	CALL_2
0x40014fb	        0x488b45f8	                mov rax, qword [rbp - 8]	       593	wrapper.c	FUNCTION_46	CALL_2
0x40014ff	          0x4889c6	                            mov rsi, rax	       593	wrapper.c	FUNCTION_46	CALL_2
0x4001502	      0xbf00000000	                              mov edi, 0	       593	wrapper.c	FUNCTION_46	CALL_2
0x4001507	      0xe8e9feffff	            call sym.warn_if_unremovable	       593	wrapper.c	FUNCTION_46	CALL_2
0x400150c	              0xc9	                                   leave	       594	wrapper.c	FUNCTION_46
0x400150d	              0xc3	                                     ret	       594	wrapper.c	FUNCTION_46
unlink_or_msg	CALL,4:IF,1:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	38
0x4001457	              0x55	                                push rbp	       578	wrapper.c	FUNCTION_45
0x4001458	          0x4889e5	                            mov rbp, rsp	       578	wrapper.c	FUNCTION_45
0x400145b	        0x4883ec20	                           sub rsp, 0x20	       578	wrapper.c	FUNCTION_45
0x400145f	        0x48897de8	             mov qword [rbp - 0x18], rdi	       578	wrapper.c	FUNCTION_45
0x4001463	        0x488975e0	             mov qword [rbp - 0x20], rsi	       578	wrapper.c	FUNCTION_45
0x4001467	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       579	wrapper.c	FUNCTION_45	CALL_1
0x400146b	          0x4889c7	                            mov rdi, rax	       579	wrapper.c	FUNCTION_45	CALL_1
0x400146e	      0xe800000000	                          call 0x4001473	       579	wrapper.c	FUNCTION_45	CALL_1
0x4001473	          0x8945fc	                mov dword [rbp - 4], eax	       579	wrapper.c	FUNCTION_45	CALL_1
0x4001476	      0x48837de000	               cmp qword [rbp - 0x20], 0	       581	wrapper.c	FUNCTION_45	CALL_2
0x400147b	            0x7519	                           jne 0x4001496	       581	wrapper.c	FUNCTION_45	CALL_2
0x400147d	      0xb900000000	                              mov ecx, 0	       581	wrapper.c	FUNCTION_45	CALL_2
0x4001482	      0xba45020000	                          mov edx, 0x245	       581	wrapper.c	FUNCTION_45	CALL_2
0x4001487	      0xbe00000000	                              mov esi, 0	       581	wrapper.c	FUNCTION_45	CALL_2
0x400148c	      0xbf00000000	                              mov edi, 0	       581	wrapper.c	FUNCTION_45	CALL_2
0x4001491	      0xe800000000	                          call 0x4001496	       581	wrapper.c	FUNCTION_45	CALL_2
0x4001496	        0x837dfc00	                  cmp dword [rbp - 4], 0	       583	wrapper.c	FUNCTION_45	IF_1
0x400149a	            0x740c	                            je 0x40014a8	       583	wrapper.c	FUNCTION_45	IF_1
0x400149c	      0xe800000000	                          call 0x40014a1	       583	wrapper.c	FUNCTION_45	IF_1
0x40014a1	            0x8b00	                    mov eax, dword [rax]	       583	wrapper.c	FUNCTION_45	IF_1
0x40014a3	          0x83f802	                              cmp eax, 2	       583	wrapper.c	FUNCTION_45	IF_1
0x40014a6	            0x7507	                           jne 0x40014af	       583	wrapper.c	FUNCTION_45	IF_1
0x40014a8	      0xb800000000	                              mov eax, 0	       584	wrapper.c	FUNCTION_45	IF_1
0x40014ad	            0xeb30	                           jmp 0x40014df	       584	wrapper.c	FUNCTION_45	IF_1
0x40014af	      0xe800000000	                          call 0x40014b4	       587	wrapper.c	FUNCTION_45	CALL_4
0x40014b4	            0x8b00	                    mov eax, dword [rax]	       586	wrapper.c	FUNCTION_45	CALL_3
0x40014b6	            0x89c7	                            mov edi, eax	       586	wrapper.c	FUNCTION_45	CALL_3
0x40014b8	      0xe800000000	                          call 0x40014bd	       586	wrapper.c	FUNCTION_45	CALL_3
0x40014bd	          0x4889c1	                            mov rcx, rax	       586	wrapper.c	FUNCTION_45	CALL_3
0x40014c0	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       586	wrapper.c	FUNCTION_45	CALL_3
0x40014c4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       586	wrapper.c	FUNCTION_45	CALL_3
0x40014c8	      0xbe00000000	                              mov esi, 0	       586	wrapper.c	FUNCTION_45	CALL_3
0x40014cd	          0x4889c7	                            mov rdi, rax	       586	wrapper.c	FUNCTION_45	CALL_3
0x40014d0	      0xb800000000	                              mov eax, 0	       586	wrapper.c	FUNCTION_45	CALL_3
0x40014d5	      0xe800000000	                          call 0x40014da	       586	wrapper.c	FUNCTION_45	CALL_3
0x40014da	      0xb8ffffffff	                     mov eax, 0xffffffff	       588	wrapper.c	FUNCTION_45
0x40014df	              0xc9	                                   leave	       589	wrapper.c	FUNCTION_45
0x40014e0	              0xc3	                                     ret	       589	wrapper.c	FUNCTION_45
xstrdup	CALL,3:IF,2:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	32
0x4000294	              0x55	                                push rbp	        43	wrapper.c	FUNCTION_15
0x4000295	          0x4889e5	                            mov rbp, rsp	        43	wrapper.c	FUNCTION_15
0x4000298	              0x53	                                push rbx	        43	wrapper.c	FUNCTION_15
0x4000299	        0x4883ec28	                           sub rsp, 0x28	        43	wrapper.c	FUNCTION_15
0x400029d	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        43	wrapper.c	FUNCTION_15
0x40002a1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        44	wrapper.c	FUNCTION_15
0x40002a5	          0x4889c7	                            mov rdi, rax	        44	wrapper.c	FUNCTION_15
0x40002a8	      0xe800000000	                          call 0x40002ad	        44	wrapper.c	FUNCTION_15
0x40002ad	        0x488945e8	             mov qword [rbp - 0x18], rax	        44	wrapper.c	FUNCTION_15
0x40002b1	      0x48837de800	               cmp qword [rbp - 0x18], 0	        45	wrapper.c	FUNCTION_15	IF_1
0x40002b6	            0x7542	                           jne 0x40002fa	        45	wrapper.c	FUNCTION_15	IF_1
0x40002b8	    0x488b1d000000	            mov rbx, qword [0x040002bf] 	        46	wrapper.c	FUNCTION_15	IF_1	CALL_2
0x40002bf	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        46	wrapper.c	FUNCTION_15	IF_1	CALL_2
0x40002c3	          0x4889c7	                            mov rdi, rax	        46	wrapper.c	FUNCTION_15	IF_1	CALL_2
0x40002c6	      0xe800000000	                          call 0x40002cb	        46	wrapper.c	FUNCTION_15	IF_1	CALL_2
0x40002cb	        0x4883c001	                              add rax, 1	        46	wrapper.c	FUNCTION_15	IF_1	CALL_2
0x40002cf	          0x4889c7	                            mov rdi, rax	        46	wrapper.c	FUNCTION_15	IF_1	CALL_2
0x40002d2	            0xffd3	                                call rbx	        46	wrapper.c	FUNCTION_15	IF_1	CALL_2
0x40002d4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        47	wrapper.c	FUNCTION_15	IF_1
0x40002d8	          0x4889c7	                            mov rdi, rax	        47	wrapper.c	FUNCTION_15	IF_1
0x40002db	      0xe800000000	                          call 0x40002e0	        47	wrapper.c	FUNCTION_15	IF_1
0x40002e0	        0x488945e8	             mov qword [rbp - 0x18], rax	        47	wrapper.c	FUNCTION_15	IF_1
0x40002e4	      0x48837de800	               cmp qword [rbp - 0x18], 0	        48	wrapper.c	FUNCTION_15	IF_1	IF_2
0x40002e9	            0x750f	                           jne 0x40002fa	        48	wrapper.c	FUNCTION_15	IF_1	IF_2
0x40002eb	      0xbf00000000	                              mov edi, 0	        49	wrapper.c	FUNCTION_15	IF_1	CALL_3
0x40002f0	      0xb800000000	                              mov eax, 0	        49	wrapper.c	FUNCTION_15	IF_1	CALL_3
0x40002f5	      0xe800000000	                          call 0x40002fa	        49	wrapper.c	FUNCTION_15	IF_1	CALL_3
0x40002fa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        51	wrapper.c	FUNCTION_15
0x40002fe	        0x4883c428	                           add rsp, 0x28	        52	wrapper.c	FUNCTION_15
0x4000302	              0x5b	                                 pop rbx	        52	wrapper.c	FUNCTION_15
0x4000303	              0x5d	                                 pop rbp	        52	wrapper.c	FUNCTION_15
0x4000304	              0xc3	                                     ret	        52	wrapper.c	FUNCTION_15
warn_on_inaccessible	CALL,2:IF,0:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	15
0x4000e28	              0x55	                                push rbp	       423	wrapper.c	ELSE_1	FUNCTION_37
0x4000e29	          0x4889e5	                            mov rbp, rsp	       423	wrapper.c	ELSE_1	FUNCTION_37
0x4000e2c	        0x4883ec10	                           sub rsp, 0x10	       423	wrapper.c	ELSE_1	FUNCTION_37
0x4000e30	        0x48897df8	                mov qword [rbp - 8], rdi	       423	wrapper.c	ELSE_1	FUNCTION_37
0x4000e34	      0xbf00000000	                              mov edi, 0	       424	wrapper.c	ELSE_1	FUNCTION_37	CALL_2
0x4000e39	      0xe844f3ffff	                               call sym.	       424	wrapper.c	ELSE_1	FUNCTION_37	CALL_2
0x4000e3e	          0x4889c2	                            mov rdx, rax	       424	wrapper.c	ELSE_1	FUNCTION_37	CALL_2
0x4000e41	        0x488b45f8	                mov rax, qword [rbp - 8]	       424	wrapper.c	ELSE_1	FUNCTION_37	CALL_2
0x4000e45	          0x4889c6	                            mov rsi, rax	       424	wrapper.c	ELSE_1	FUNCTION_37	CALL_2
0x4000e48	          0x4889d7	                            mov rdi, rdx	       424	wrapper.c	ELSE_1	FUNCTION_37	CALL_2
0x4000e4b	      0xb800000000	                              mov eax, 0	       424	wrapper.c	ELSE_1	FUNCTION_37	CALL_2
0x4000e50	      0xe800000000	                          call 0x4000e55	       424	wrapper.c	ELSE_1	FUNCTION_37	CALL_2
0x4000e55	              0x90	                                     nop	       425	wrapper.c	ELSE_1	FUNCTION_37
0x4000e56	              0xc9	                                   leave	       425	wrapper.c	ELSE_1	FUNCTION_37
0x4000e57	              0xc3	                                     ret	       425	wrapper.c	ELSE_1	FUNCTION_37
xgetcwd	CALL,4:IF,1:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	29
0x400166c	              0x55	                                push rbp	       629	wrapper.c	FUNCTION_52
0x400166d	          0x4889e5	                            mov rbp, rsp	       629	wrapper.c	FUNCTION_52
0x4001670	        0x4883ec20	                           sub rsp, 0x20	       629	wrapper.c	FUNCTION_52
0x4001674	    0x64488b042528	                mov rax, qword fs:[0x28]	       629	wrapper.c	FUNCTION_52
0x400167d	        0x488945f8	                mov qword [rbp - 8], rax	       629	wrapper.c	FUNCTION_52
0x4001681	            0x31c0	                            xor eax, eax	       629	wrapper.c	FUNCTION_52
0x4001683	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       630	wrapper.c	FUNCTION_52
0x400168b	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       630	wrapper.c	FUNCTION_52
0x4001693	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       630	wrapper.c	FUNCTION_52
0x400169b	        0x488d45e0	                   lea rax, [rbp - 0x20]	       631	wrapper.c	FUNCTION_52	IF_1	CALL_1
0x400169f	          0x4889c7	                            mov rdi, rax	       631	wrapper.c	FUNCTION_52	IF_1	CALL_1
0x40016a2	      0xe800000000	                          call 0x40016a7	       631	wrapper.c	FUNCTION_52	IF_1	CALL_1
0x40016a7	            0x85c0	                           test eax, eax	       631	wrapper.c	FUNCTION_52	IF_1	CALL_1
0x40016a9	            0x7417	                            je 0x40016c2	       631	wrapper.c	FUNCTION_52	IF_1	CALL_1
0x40016ab	      0xbf00000000	                              mov edi, 0	       632	wrapper.c	FUNCTION_52	CALL_3
0x40016b0	      0xe8cdeaffff	                               call sym.	       632	wrapper.c	FUNCTION_52	CALL_3
0x40016b5	          0x4889c7	                            mov rdi, rax	       632	wrapper.c	FUNCTION_52	CALL_3
0x40016b8	      0xb800000000	                              mov eax, 0	       632	wrapper.c	FUNCTION_52	CALL_3
0x40016bd	      0xe800000000	                          call 0x40016c2	       632	wrapper.c	FUNCTION_52	CALL_3
0x40016c2	        0x488d45e0	                   lea rax, [rbp - 0x20]	       633	wrapper.c	FUNCTION_52	CALL_4
0x40016c6	      0xbe00000000	                              mov esi, 0	       633	wrapper.c	FUNCTION_52	CALL_4
0x40016cb	          0x4889c7	                            mov rdi, rax	       633	wrapper.c	FUNCTION_52	CALL_4
0x40016ce	      0xe800000000	                          call 0x40016d3	       633	wrapper.c	FUNCTION_52	CALL_4
0x40016d3	        0x488b55f8	                mov rdx, qword [rbp - 8]	       634	wrapper.c	FUNCTION_52
0x40016d7	    0x644833142528	                xor rdx, qword fs:[0x28]	       634	wrapper.c	FUNCTION_52
0x40016e0	            0x7405	                            je 0x40016e7	       634	wrapper.c	FUNCTION_52
0x40016e2	      0xe800000000	                          call 0x40016e7	       634	wrapper.c	FUNCTION_52
0x40016e7	              0xc9	                                   leave	       634	wrapper.c	FUNCTION_52
0x40016e8	              0xc3	                                     ret	       634	wrapper.c	FUNCTION_52
xsnprintf	CALL,4:IF,2:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	54
0x40016e9	              0x55	                                push rbp	       637	wrapper.c	FUNCTION_53
0x40016ea	          0x4889e5	                            mov rbp, rsp	       637	wrapper.c	FUNCTION_53
0x40016ed	    0x4881ec000100	                          sub rsp, 0x100	       637	wrapper.c	FUNCTION_53
0x40016f4	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	       637	wrapper.c	FUNCTION_53
0x40016fb	    0x4889b510ffff	             mov qword [rbp - 0xf0], rsi	       637	wrapper.c	FUNCTION_53
0x4001702	    0x48899508ffff	             mov qword [rbp - 0xf8], rdx	       637	wrapper.c	FUNCTION_53
0x4001709	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       637	wrapper.c	FUNCTION_53
0x4001710	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       637	wrapper.c	FUNCTION_53
0x4001717	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       637	wrapper.c	FUNCTION_53
0x400171e	            0x84c0	                             test al, al	       637	wrapper.c	FUNCTION_53
0x4001720	            0x7420	                            je 0x4001742	       637	wrapper.c	FUNCTION_53
0x4001722	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       637	wrapper.c	FUNCTION_53
0x4001726	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       637	wrapper.c	FUNCTION_53
0x400172a	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       637	wrapper.c	FUNCTION_53
0x400172e	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       637	wrapper.c	FUNCTION_53
0x4001732	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       637	wrapper.c	FUNCTION_53
0x4001736	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       637	wrapper.c	FUNCTION_53
0x400173a	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       637	wrapper.c	FUNCTION_53
0x400173e	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       637	wrapper.c	FUNCTION_53
0x4001742	    0x64488b042528	                mov rax, qword fs:[0x28]	       637	wrapper.c	FUNCTION_53
0x400174b	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       637	wrapper.c	FUNCTION_53
0x4001752	            0x31c0	                            xor eax, eax	       637	wrapper.c	FUNCTION_53
0x4001754	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x18 	       641	wrapper.c	FUNCTION_53	CALL_1
0x400175e	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       641	wrapper.c	FUNCTION_53	CALL_1
0x4001768	        0x488d4510	                   lea rax, [rbp + 0x10]	       641	wrapper.c	FUNCTION_53	CALL_1
0x400176c	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       641	wrapper.c	FUNCTION_53	CALL_1
0x4001773	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       641	wrapper.c	FUNCTION_53	CALL_1
0x400177a	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       641	wrapper.c	FUNCTION_53	CALL_1
0x4001781	    0x488d8d30ffff	                   lea rcx, [rbp - 0xd0]	       642	wrapper.c	FUNCTION_53
0x4001788	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	       642	wrapper.c	FUNCTION_53
0x400178f	    0x488bb510ffff	             mov rsi, qword [rbp - 0xf0]	       642	wrapper.c	FUNCTION_53
0x4001796	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       642	wrapper.c	FUNCTION_53
0x400179d	          0x4889c7	                            mov rdi, rax	       642	wrapper.c	FUNCTION_53
0x40017a0	      0xe800000000	                          call 0x40017a5	       642	wrapper.c	FUNCTION_53
0x40017a5	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	       642	wrapper.c	FUNCTION_53
0x40017ab	    0x83bd2cffffff	               cmp dword [rbp - 0xd4], 0	       645	wrapper.c	FUNCTION_53	IF_1
0x40017b2	            0x790f	                           jns 0x40017c3	       645	wrapper.c	FUNCTION_53	IF_1
0x40017b4	      0xbf00000000	                              mov edi, 0	       646	wrapper.c	FUNCTION_53	CALL_3
0x40017b9	      0xb800000000	                              mov eax, 0	       646	wrapper.c	FUNCTION_53	CALL_3
0x40017be	      0xe800000000	                          call 0x40017c3	       646	wrapper.c	FUNCTION_53	CALL_3
0x40017c3	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       647	wrapper.c	FUNCTION_53	IF_2
0x40017c9	            0x4898	                                    cdqe	       647	wrapper.c	FUNCTION_53	IF_2
0x40017cb	    0x483b8510ffff	             cmp rax, qword [rbp - 0xf0]	       647	wrapper.c	FUNCTION_53	IF_2
0x40017d2	            0x720f	                            jb 0x40017e3	       647	wrapper.c	FUNCTION_53	IF_2
0x40017d4	      0xbf00000000	                              mov edi, 0	       648	wrapper.c	FUNCTION_53	CALL_4
0x40017d9	      0xb800000000	                              mov eax, 0	       648	wrapper.c	FUNCTION_53	CALL_4
0x40017de	      0xe800000000	                          call 0x40017e3	       648	wrapper.c	FUNCTION_53	CALL_4
0x40017e3	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       649	wrapper.c	FUNCTION_53
0x40017e9	    0x488b9548ffff	             mov rdx, qword [rbp - 0xb8]	       650	wrapper.c	FUNCTION_53
0x40017f0	    0x644833142528	                xor rdx, qword fs:[0x28]	       650	wrapper.c	FUNCTION_53
0x40017f9	            0x7405	                            je 0x4001800	       650	wrapper.c	FUNCTION_53
0x40017fb	      0xe800000000	                          call 0x4001800	       650	wrapper.c	FUNCTION_53
0x4001800	              0xc9	                                   leave	       650	wrapper.c	FUNCTION_53
0x4001801	              0xc3	                                     ret	       650	wrapper.c	FUNCTION_53
_	CALL,0:IF,1:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	15
0x4000182	              0x55	                                push rbp	        51	gettext.h	FUNCTION_87
0x4000183	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_87
0x4000186	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_87
0x400018a	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_87
0x400018e	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_87	IF_1
0x4000192	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_87	IF_1
0x4000195	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_87	IF_1
0x4000197	            0x7507	                           jne 0x40001a0	        52	gettext.h	FUNCTION_87	IF_1
0x4000199	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_87	IF_1
0x400019e	            0xeb0c	                           jmp 0x40001ac	        53	gettext.h	FUNCTION_87	IF_1
0x40001a0	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_87
0x40001a4	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_87
0x40001a7	      0xe800000000	                          call 0x40001ac	        54	gettext.h	FUNCTION_87
0x40001ac	              0xc9	                                   leave	        55	gettext.h	FUNCTION_87
0x40001ad	              0xc3	                                     ret	        55	gettext.h	FUNCTION_87
access_or_die	CALL,4:IF,1:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	33
0x4001603	              0x55	                                push rbp	       621	wrapper.c	FUNCTION_51
0x4001604	          0x4889e5	                            mov rbp, rsp	       621	wrapper.c	FUNCTION_51
0x4001607	        0x4883ec20	                           sub rsp, 0x20	       621	wrapper.c	FUNCTION_51
0x400160b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       621	wrapper.c	FUNCTION_51
0x400160f	          0x8975e4	             mov dword [rbp - 0x1c], esi	       621	wrapper.c	FUNCTION_51
0x4001612	          0x8955e0	             mov dword [rbp - 0x20], edx	       621	wrapper.c	FUNCTION_51
0x4001615	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       622	wrapper.c	FUNCTION_51	CALL_1
0x4001618	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       622	wrapper.c	FUNCTION_51	CALL_1
0x400161c	            0x89d6	                            mov esi, edx	       622	wrapper.c	FUNCTION_51	CALL_1
0x400161e	          0x4889c7	                            mov rdi, rax	       622	wrapper.c	FUNCTION_51	CALL_1
0x4001621	      0xe800000000	                          call 0x4001626	       622	wrapper.c	FUNCTION_51	CALL_1
0x4001626	          0x8945fc	                mov dword [rbp - 4], eax	       622	wrapper.c	FUNCTION_51	CALL_1
0x4001629	        0x837dfc00	                  cmp dword [rbp - 4], 0	       623	wrapper.c	FUNCTION_51	IF_1	CALL_2
0x400162d	            0x7438	                            je 0x4001667	       623	wrapper.c	FUNCTION_51	IF_1	CALL_2
0x400162f	      0xe800000000	                          call 0x4001634	       623	wrapper.c	FUNCTION_51	IF_1	CALL_2
0x4001634	            0x8b00	                    mov eax, dword [rax]	       623	wrapper.c	FUNCTION_51	IF_1	CALL_2
0x4001636	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       623	wrapper.c	FUNCTION_51	IF_1	CALL_2
0x4001639	            0x89d6	                            mov esi, edx	       623	wrapper.c	FUNCTION_51	IF_1	CALL_2
0x400163b	            0x89c7	                            mov edi, eax	       623	wrapper.c	FUNCTION_51	IF_1	CALL_2
0x400163d	      0xe833ffffff	             call sym.access_error_is_ok	       623	wrapper.c	FUNCTION_51	IF_1	CALL_2
0x4001642	            0x85c0	                           test eax, eax	       623	wrapper.c	FUNCTION_51	IF_1	CALL_2
0x4001644	            0x7521	                           jne 0x4001667	       623	wrapper.c	FUNCTION_51	IF_1	CALL_2
0x4001646	      0xbf00000000	                              mov edi, 0	       624	wrapper.c	FUNCTION_51	CALL_4
0x400164b	      0xe832ebffff	                               call sym.	       624	wrapper.c	FUNCTION_51	CALL_4
0x4001650	          0x4889c2	                            mov rdx, rax	       624	wrapper.c	FUNCTION_51	CALL_4
0x4001653	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       624	wrapper.c	FUNCTION_51	CALL_4
0x4001657	          0x4889c6	                            mov rsi, rax	       624	wrapper.c	FUNCTION_51	CALL_4
0x400165a	          0x4889d7	                            mov rdi, rdx	       624	wrapper.c	FUNCTION_51	CALL_4
0x400165d	      0xb800000000	                              mov eax, 0	       624	wrapper.c	FUNCTION_51	CALL_4
0x4001662	      0xe800000000	                          call 0x4001667	       624	wrapper.c	FUNCTION_51	CALL_4
0x4001667	          0x8b45fc	                mov eax, dword [rbp - 4]	       625	wrapper.c	FUNCTION_51
0x400166a	              0xc9	                                   leave	       626	wrapper.c	FUNCTION_51
0x400166b	              0xc3	                                     ret	       626	wrapper.c	FUNCTION_51
write_file	CALL,6:IF,0:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	56
0x40018a1	              0x55	                                push rbp	       662	wrapper.c	FUNCTION_55
0x40018a2	          0x4889e5	                            mov rbp, rsp	       662	wrapper.c	FUNCTION_55
0x40018a5	    0x4881ec000100	                          sub rsp, 0x100	       662	wrapper.c	FUNCTION_55
0x40018ac	    0x4889bd08ffff	             mov qword [rbp - 0xf8], rdi	       662	wrapper.c	FUNCTION_55
0x40018b3	    0x4889b500ffff	            mov qword [rbp - 0x100], rsi	       662	wrapper.c	FUNCTION_55
0x40018ba	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       662	wrapper.c	FUNCTION_55
0x40018c1	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       662	wrapper.c	FUNCTION_55
0x40018c8	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       662	wrapper.c	FUNCTION_55
0x40018cf	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       662	wrapper.c	FUNCTION_55
0x40018d6	            0x84c0	                             test al, al	       662	wrapper.c	FUNCTION_55
0x40018d8	            0x7420	                            je 0x40018fa	       662	wrapper.c	FUNCTION_55
0x40018da	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       662	wrapper.c	FUNCTION_55
0x40018de	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       662	wrapper.c	FUNCTION_55
0x40018e2	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       662	wrapper.c	FUNCTION_55
0x40018e6	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       662	wrapper.c	FUNCTION_55
0x40018ea	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       662	wrapper.c	FUNCTION_55
0x40018ee	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       662	wrapper.c	FUNCTION_55
0x40018f2	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       662	wrapper.c	FUNCTION_55
0x40018f6	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       662	wrapper.c	FUNCTION_55
0x40018fa	    0x64488b042528	                mov rax, qword fs:[0x28]	       662	wrapper.c	FUNCTION_55
0x4001903	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       662	wrapper.c	FUNCTION_55
0x400190a	            0x31c0	                            xor eax, eax	       662	wrapper.c	FUNCTION_55
0x400190c	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	       664	wrapper.c	FUNCTION_55
0x4001917	    0x48c78518ffff	               mov qword [rbp - 0xe8], 0	       664	wrapper.c	FUNCTION_55
0x4001922	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	       664	wrapper.c	FUNCTION_55
0x400192d	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	       666	wrapper.c	FUNCTION_55	CALL_1
0x4001937	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       666	wrapper.c	FUNCTION_55	CALL_1
0x4001941	        0x488d4510	                   lea rax, [rbp + 0x10]	       666	wrapper.c	FUNCTION_55	CALL_1
0x4001945	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       666	wrapper.c	FUNCTION_55	CALL_1
0x400194c	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       666	wrapper.c	FUNCTION_55	CALL_1
0x4001953	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       666	wrapper.c	FUNCTION_55	CALL_1
0x400195a	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	       667	wrapper.c	FUNCTION_55	CALL_2
0x4001961	    0x488b8d00ffff	            mov rcx, qword [rbp - 0x100]	       667	wrapper.c	FUNCTION_55	CALL_2
0x4001968	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	       667	wrapper.c	FUNCTION_55	CALL_2
0x400196f	          0x4889ce	                            mov rsi, rcx	       667	wrapper.c	FUNCTION_55	CALL_2
0x4001972	          0x4889c7	                            mov rdi, rax	       667	wrapper.c	FUNCTION_55	CALL_2
0x4001975	      0xe800000000	                          call 0x400197a	       667	wrapper.c	FUNCTION_55	CALL_2
0x400197a	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	       670	wrapper.c	FUNCTION_55	CALL_4
0x4001981	          0x4889c7	                            mov rdi, rax	       670	wrapper.c	FUNCTION_55	CALL_4
0x4001984	      0xe8d9e7ffff	           call sym.strbuf_complete_line	       670	wrapper.c	FUNCTION_55	CALL_4
0x4001989	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       672	wrapper.c	FUNCTION_55	CALL_5
0x4001990	    0x488b8d20ffff	             mov rcx, qword [rbp - 0xe0]	       672	wrapper.c	FUNCTION_55	CALL_5
0x4001997	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       672	wrapper.c	FUNCTION_55	CALL_5
0x400199e	          0x4889ce	                            mov rsi, rcx	       672	wrapper.c	FUNCTION_55	CALL_5
0x40019a1	          0x4889c7	                            mov rdi, rax	       672	wrapper.c	FUNCTION_55	CALL_5
0x40019a4	      0xe800000000	                          call 0x40019a9	       672	wrapper.c	FUNCTION_55	CALL_5
0x40019a9	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	       673	wrapper.c	FUNCTION_55	CALL_6
0x40019b0	          0x4889c7	                            mov rdi, rax	       673	wrapper.c	FUNCTION_55	CALL_6
0x40019b3	      0xe800000000	                          call 0x40019b8	       673	wrapper.c	FUNCTION_55	CALL_6
0x40019b8	              0x90	                                     nop	       674	wrapper.c	FUNCTION_55
0x40019b9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       674	wrapper.c	FUNCTION_55
0x40019c0	    0x644833042528	                xor rax, qword fs:[0x28]	       674	wrapper.c	FUNCTION_55
0x40019c9	            0x7405	                            je 0x40019d0	       674	wrapper.c	FUNCTION_55
0x40019cb	      0xe800000000	                          call 0x40019d0	       674	wrapper.c	FUNCTION_55
0x40019d0	              0xc9	                                   leave	       674	wrapper.c	FUNCTION_55
0x40019d1	              0xc3	                                     ret	       674	wrapper.c	FUNCTION_55
xread	CALL,2:IF,4:SWITCH,0:ELSE,0:FOR,0:WHILE,1:functions,0:DO,0	38
0x4000979	              0x55	                                push rbp	       255	wrapper.c	FUNCTION_27
0x400097a	          0x4889e5	                            mov rbp, rsp	       255	wrapper.c	FUNCTION_27
0x400097d	        0x4883ec30	                           sub rsp, 0x30	       255	wrapper.c	FUNCTION_27
0x4000981	          0x897dec	             mov dword [rbp - 0x14], edi	       255	wrapper.c	FUNCTION_27
0x4000984	        0x488975e0	             mov qword [rbp - 0x20], rsi	       255	wrapper.c	FUNCTION_27
0x4000988	        0x488955d8	             mov qword [rbp - 0x28], rdx	       255	wrapper.c	FUNCTION_27
0x400098c	    0x48817dd80000	       cmp qword [rbp - 0x28], 0x800000 	       257	wrapper.c	FUNCTION_27	IF_1
0x4000994	            0x7608	                           jbe 0x400099e	       257	wrapper.c	FUNCTION_27	IF_1
0x4000996	    0x48c745d80000	        mov qword [rbp - 0x28], 0x800000	       258	wrapper.c	FUNCTION_27	IF_1
0x400099e	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       260	wrapper.c	FUNCTION_27	WHILE_1	CALL_1
0x40009a2	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       260	wrapper.c	FUNCTION_27	WHILE_1	CALL_1
0x40009a6	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       260	wrapper.c	FUNCTION_27	WHILE_1	CALL_1
0x40009a9	          0x4889ce	                            mov rsi, rcx	       260	wrapper.c	FUNCTION_27	WHILE_1	CALL_1
0x40009ac	            0x89c7	                            mov edi, eax	       260	wrapper.c	FUNCTION_27	WHILE_1	CALL_1
0x40009ae	      0xe800000000	                          call 0x40009b3	       260	wrapper.c	FUNCTION_27	WHILE_1	CALL_1
0x40009b3	        0x488945f8	                mov qword [rbp - 8], rax	       260	wrapper.c	FUNCTION_27	WHILE_1	CALL_1
0x40009b7	      0x48837df800	                  cmp qword [rbp - 8], 0	       261	wrapper.c	FUNCTION_27	WHILE_1	IF_2
0x40009bc	            0x7926	                           jns 0x40009e4	       261	wrapper.c	FUNCTION_27	WHILE_1	IF_2
0x40009be	      0xe800000000	                          call 0x40009c3	       262	wrapper.c	FUNCTION_27	WHILE_1	IF_2	IF_3
0x40009c3	            0x8b00	                    mov eax, dword [rax]	       262	wrapper.c	FUNCTION_27	WHILE_1	IF_2	IF_3
0x40009c5	          0x83f804	                              cmp eax, 4	       262	wrapper.c	FUNCTION_27	WHILE_1	IF_2	IF_3
0x40009c8	            0x7420	                            je 0x40009ea	       262	wrapper.c	FUNCTION_27	WHILE_1	IF_2	IF_3
0x40009ca	      0xe800000000	                          call 0x40009cf	       264	wrapper.c	FUNCTION_27	WHILE_1	IF_2	IF_4	CALL_2
0x40009cf	            0x8b10	                    mov edx, dword [rax]	       264	wrapper.c	FUNCTION_27	WHILE_1	IF_2	IF_4	CALL_2
0x40009d1	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       264	wrapper.c	FUNCTION_27	WHILE_1	IF_2	IF_4	CALL_2
0x40009d4	      0xbe01000000	                              mov esi, 1	       264	wrapper.c	FUNCTION_27	WHILE_1	IF_2	IF_4	CALL_2
0x40009d9	            0x89c7	                            mov edi, eax	       264	wrapper.c	FUNCTION_27	WHILE_1	IF_2	IF_4	CALL_2
0x40009db	      0xe824ffffff	                call sym.handle_nonblock	       264	wrapper.c	FUNCTION_27	WHILE_1	IF_2	IF_4	CALL_2
0x40009e0	            0x85c0	                           test eax, eax	       264	wrapper.c	FUNCTION_27	WHILE_1	IF_2	IF_4	CALL_2
0x40009e2	            0x7509	                           jne 0x40009ed	       264	wrapper.c	FUNCTION_27	WHILE_1	IF_2	IF_4	CALL_2
0x40009e4	        0x488b45f8	                mov rax, qword [rbp - 8]	       267	wrapper.c	FUNCTION_27	WHILE_1
0x40009e8	            0xeb06	                           jmp 0x40009f0	       267	wrapper.c	FUNCTION_27	WHILE_1
0x40009ea	              0x90	                                     nop	       263	wrapper.c	FUNCTION_27	WHILE_1	IF_2	IF_3
0x40009eb	            0xebb1	                           jmp 0x400099e	       263	wrapper.c	FUNCTION_27	WHILE_1	IF_2	IF_3
0x40009ed	              0x90	                                     nop	       265	wrapper.c	FUNCTION_27	WHILE_1	IF_2	IF_4
0x40009ee	            0xebae	                           jmp 0x400099e	       268	wrapper.c	FUNCTION_27	WHILE_1
0x40009f0	              0xc9	                                   leave	       269	wrapper.c	FUNCTION_27
0x40009f1	              0xc3	                                     ret	       269	wrapper.c	FUNCTION_27
read_in_full	CALL,1:IF,2:SWITCH,0:ELSE,0:FOR,0:WHILE,1:functions,0:DO,0	36
0x4000ad5	              0x55	                                push rbp	       313	wrapper.c	FUNCTION_30
0x4000ad6	          0x4889e5	                            mov rbp, rsp	       313	wrapper.c	FUNCTION_30
0x4000ad9	        0x4883ec40	                           sub rsp, 0x40	       313	wrapper.c	FUNCTION_30
0x4000add	          0x897ddc	             mov dword [rbp - 0x24], edi	       313	wrapper.c	FUNCTION_30
0x4000ae0	        0x488975d0	             mov qword [rbp - 0x30], rsi	       313	wrapper.c	FUNCTION_30
0x4000ae4	        0x488955c8	             mov qword [rbp - 0x38], rdx	       313	wrapper.c	FUNCTION_30
0x4000ae8	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       314	wrapper.c	FUNCTION_30
0x4000aec	        0x488945e8	             mov qword [rbp - 0x18], rax	       314	wrapper.c	FUNCTION_30
0x4000af0	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       315	wrapper.c	FUNCTION_30
0x4000af8	            0xeb4e	                           jmp 0x4000b48	       317	wrapper.c	FUNCTION_30	WHILE_1
0x4000afa	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       318	wrapper.c	FUNCTION_30	WHILE_1	CALL_1
0x4000afe	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       318	wrapper.c	FUNCTION_30	WHILE_1	CALL_1
0x4000b02	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       318	wrapper.c	FUNCTION_30	WHILE_1	CALL_1
0x4000b05	          0x4889ce	                            mov rsi, rcx	       318	wrapper.c	FUNCTION_30	WHILE_1	CALL_1
0x4000b08	            0x89c7	                            mov edi, eax	       318	wrapper.c	FUNCTION_30	WHILE_1	CALL_1
0x4000b0a	      0xe800000000	                          call 0x4000b0f	       318	wrapper.c	FUNCTION_30	WHILE_1	CALL_1
0x4000b0f	        0x488945f8	                mov qword [rbp - 8], rax	       318	wrapper.c	FUNCTION_30	WHILE_1	CALL_1
0x4000b13	      0x48837df800	                  cmp qword [rbp - 8], 0	       319	wrapper.c	FUNCTION_30	WHILE_1	IF_1
0x4000b18	            0x7909	                           jns 0x4000b23	       319	wrapper.c	FUNCTION_30	WHILE_1	IF_1
0x4000b1a	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       320	wrapper.c	FUNCTION_30	WHILE_1	IF_1
0x4000b21	            0xeb30	                           jmp 0x4000b53	       320	wrapper.c	FUNCTION_30	WHILE_1	IF_1
0x4000b23	      0x48837df800	                  cmp qword [rbp - 8], 0	       321	wrapper.c	FUNCTION_30	WHILE_1	IF_2
0x4000b28	            0x7506	                           jne 0x4000b30	       321	wrapper.c	FUNCTION_30	WHILE_1	IF_2
0x4000b2a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       322	wrapper.c	FUNCTION_30	WHILE_1	IF_2
0x4000b2e	            0xeb23	                           jmp 0x4000b53	       322	wrapper.c	FUNCTION_30	WHILE_1	IF_2
0x4000b30	        0x488b45f8	                mov rax, qword [rbp - 8]	       323	wrapper.c	FUNCTION_30	WHILE_1
0x4000b34	        0x482945c8	             sub qword [rbp - 0x38], rax	       323	wrapper.c	FUNCTION_30	WHILE_1
0x4000b38	        0x488b45f8	                mov rax, qword [rbp - 8]	       324	wrapper.c	FUNCTION_30	WHILE_1
0x4000b3c	        0x480145e8	            add qword [rbp - 0x18], rax 	       324	wrapper.c	FUNCTION_30	WHILE_1
0x4000b40	        0x488b45f8	                mov rax, qword [rbp - 8]	       325	wrapper.c	FUNCTION_30	WHILE_1
0x4000b44	        0x480145f0	            add qword [rbp - 0x10], rax 	       325	wrapper.c	FUNCTION_30	WHILE_1
0x4000b48	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       317	wrapper.c	FUNCTION_30	WHILE_1
0x4000b4d	            0x75ab	                           jne 0x4000afa	       317	wrapper.c	FUNCTION_30	WHILE_1
0x4000b4f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       328	wrapper.c	FUNCTION_30
0x4000b53	              0xc9	                                   leave	       329	wrapper.c	FUNCTION_30
0x4000b54	              0xc3	                                     ret	       329	wrapper.c	FUNCTION_30
remove_or_warn	CALL,3:IF,0:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	18
0x400153b	              0x55	                                push rbp	       602	wrapper.c	FUNCTION_48
0x400153c	          0x4889e5	                            mov rbp, rsp	       602	wrapper.c	FUNCTION_48
0x400153f	        0x4883ec10	                           sub rsp, 0x10	       602	wrapper.c	FUNCTION_48
0x4001543	          0x897dfc	                mov dword [rbp - 4], edi	       602	wrapper.c	FUNCTION_48
0x4001546	        0x488975f0	             mov qword [rbp - 0x10], rsi	       602	wrapper.c	FUNCTION_48
0x400154a	          0x8b45fc	                mov eax, dword [rbp - 4]	       603	wrapper.c	FUNCTION_48	CALL_3
0x400154d	      0x2500f00000	                         and eax, 0xf000	       603	wrapper.c	FUNCTION_48	CALL_3
0x4001552	      0x3d00e00000	                         cmp eax, 0xe000	       603	wrapper.c	FUNCTION_48	CALL_3
0x4001557	            0x750e	                           jne 0x4001567	       603	wrapper.c	FUNCTION_48	CALL_3
0x4001559	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       603	wrapper.c	FUNCTION_48	CALL_3
0x400155d	          0x4889c7	                            mov rdi, rax	       603	wrapper.c	FUNCTION_48	CALL_3
0x4001560	      0xe800000000	                          call 0x4001565	       603	wrapper.c	FUNCTION_48	CALL_3
0x4001565	            0xeb0c	                           jmp 0x4001573	       603	wrapper.c	FUNCTION_48	CALL_3
0x4001567	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       603	wrapper.c	FUNCTION_48	CALL_3
0x400156b	          0x4889c7	                            mov rdi, rax	       603	wrapper.c	FUNCTION_48	CALL_3
0x400156e	      0xe800000000	                          call 0x4001573	       603	wrapper.c	FUNCTION_48	CALL_3
0x4001573	              0xc9	                                   leave	       604	wrapper.c	FUNCTION_48
0x4001574	              0xc3	                                     ret	       604	wrapper.c	FUNCTION_48
xmkstemp	CALL,5:IF,2:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	56
0x4000edd	              0x55	                                push rbp	       449	wrapper.c	FUNCTION_40
0x4000ede	          0x4889e5	                            mov rbp, rsp	       449	wrapper.c	FUNCTION_40
0x4000ee1	              0x53	                                push rbx	       449	wrapper.c	FUNCTION_40
0x4000ee2	    0x4881ec381000	                         sub rsp, 0x1038	       449	wrapper.c	FUNCTION_40
0x4000ee9	    0x4889bdc8efff	           mov qword [rbp - 0x1038], rdi	       449	wrapper.c	FUNCTION_40
0x4000ef0	    0x64488b042528	                mov rax, qword fs:[0x28]	       449	wrapper.c	FUNCTION_40
0x4000ef9	        0x488945e8	             mov qword [rbp - 0x18], rax	       449	wrapper.c	FUNCTION_40
0x4000efd	            0x31c0	                            xor eax, eax	       449	wrapper.c	FUNCTION_40
0x4000eff	    0x488b8dc8efff	           mov rcx, qword [rbp - 0x1038]	       452	wrapper.c	FUNCTION_40
0x4000f06	    0x488d85e0efff	                 lea rax, [rbp - 0x1020]	       452	wrapper.c	FUNCTION_40
0x4000f0d	      0xba00100000	                         mov edx, 0x1000	       452	wrapper.c	FUNCTION_40
0x4000f12	          0x4889ce	                            mov rsi, rcx	       452	wrapper.c	FUNCTION_40
0x4000f15	          0x4889c7	                            mov rdi, rax	       452	wrapper.c	FUNCTION_40
0x4000f18	      0xe800000000	                          call 0x4000f1d	       452	wrapper.c	FUNCTION_40
0x4000f1d	    0x488b85c8efff	           mov rax, qword [rbp - 0x1038]	       454	wrapper.c	FUNCTION_40	CALL_1
0x4000f24	          0x4889c7	                            mov rdi, rax	       454	wrapper.c	FUNCTION_40	CALL_1
0x4000f27	      0xe800000000	                          call 0x4000f2c	       454	wrapper.c	FUNCTION_40	CALL_1
0x4000f2c	    0x8985d0efffff	           mov dword [rbp - 0x1030], eax	       454	wrapper.c	FUNCTION_40	CALL_1
0x4000f32	    0x83bdd0efffff	             cmp dword [rbp - 0x1030], 0	       455	wrapper.c	FUNCTION_40	IF_1
0x4000f39	     0xf8980000000	                           jns 0x4000fbf	       455	wrapper.c	FUNCTION_40	IF_1
0x4000f3f	      0xe800000000	                          call 0x4000f44	       456	wrapper.c	FUNCTION_40	IF_1
0x4000f44	            0x8b00	                    mov eax, dword [rax]	       456	wrapper.c	FUNCTION_40	IF_1
0x4000f46	    0x8985d4efffff	           mov dword [rbp - 0x102c], eax	       456	wrapper.c	FUNCTION_40	IF_1
0x4000f4c	    0x488b85c8efff	           mov rax, qword [rbp - 0x1038]	       459	wrapper.c	FUNCTION_40	IF_1	IF_2	CALL_3
0x4000f53	          0x4889c7	                            mov rdi, rax	       459	wrapper.c	FUNCTION_40	IF_1	IF_2	CALL_3
0x4000f56	      0xe800000000	                          call 0x4000f5b	       459	wrapper.c	FUNCTION_40	IF_1	IF_2	CALL_3
0x4000f5b	          0x4889c3	                            mov rbx, rax	       459	wrapper.c	FUNCTION_40	IF_1	IF_2	CALL_3
0x4000f5e	    0x488d85e0efff	                 lea rax, [rbp - 0x1020]	       459	wrapper.c	FUNCTION_40	IF_1	IF_2	CALL_3
0x4000f65	          0x4889c7	                            mov rdi, rax	       459	wrapper.c	FUNCTION_40	IF_1	IF_2	CALL_3
0x4000f68	      0xe800000000	                          call 0x4000f6d	       459	wrapper.c	FUNCTION_40	IF_1	IF_2	CALL_3
0x4000f6d	          0x4839c3	                            cmp rbx, rax	       459	wrapper.c	FUNCTION_40	IF_1	IF_2	CALL_3
0x4000f70	            0x740e	                            je 0x4000f80	       459	wrapper.c	FUNCTION_40	IF_1	IF_2	CALL_3
0x4000f72	    0x488d85e0efff	                 lea rax, [rbp - 0x1020]	       460	wrapper.c	FUNCTION_40	IF_1	IF_2
0x4000f79	    0x488985c8efff	           mov qword [rbp - 0x1038], rax	       460	wrapper.c	FUNCTION_40	IF_1	IF_2
0x4000f80	    0x488b85c8efff	           mov rax, qword [rbp - 0x1038]	       462	wrapper.c	FUNCTION_40	IF_1	CALL_4
0x4000f87	          0x4889c7	                            mov rdi, rax	       462	wrapper.c	FUNCTION_40	IF_1	CALL_4
0x4000f8a	      0xe800000000	                          call 0x4000f8f	       462	wrapper.c	FUNCTION_40	IF_1	CALL_4
0x4000f8f	    0x488985d8efff	           mov qword [rbp - 0x1028], rax	       462	wrapper.c	FUNCTION_40	IF_1	CALL_4
0x4000f96	      0xe800000000	                          call 0x4000f9b	       463	wrapper.c	FUNCTION_40	IF_1
0x4000f9b	          0x4889c2	                            mov rdx, rax	       463	wrapper.c	FUNCTION_40	IF_1
0x4000f9e	    0x8b85d4efffff	           mov eax, dword [rbp - 0x102c]	       463	wrapper.c	FUNCTION_40	IF_1
0x4000fa4	            0x8902	                    mov dword [rdx], eax	       463	wrapper.c	FUNCTION_40	IF_1
0x4000fa6	    0x488b85d8efff	           mov rax, qword [rbp - 0x1028]	       464	wrapper.c	FUNCTION_40	IF_1	CALL_5
0x4000fad	          0x4889c6	                            mov rsi, rax	       464	wrapper.c	FUNCTION_40	IF_1	CALL_5
0x4000fb0	      0xbf00000000	                              mov edi, 0	       464	wrapper.c	FUNCTION_40	IF_1	CALL_5
0x4000fb5	      0xb800000000	                              mov eax, 0	       464	wrapper.c	FUNCTION_40	IF_1	CALL_5
0x4000fba	      0xe800000000	                          call 0x4000fbf	       464	wrapper.c	FUNCTION_40	IF_1	CALL_5
0x4000fbf	    0x8b85d0efffff	           mov eax, dword [rbp - 0x1030]	       467	wrapper.c	FUNCTION_40
0x4000fc5	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       468	wrapper.c	FUNCTION_40
0x4000fc9	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       468	wrapper.c	FUNCTION_40
0x4000fd2	            0x7405	                            je 0x4000fd9	       468	wrapper.c	FUNCTION_40
0x4000fd4	      0xe800000000	                          call 0x4000fd9	       468	wrapper.c	FUNCTION_40
0x4000fd9	    0x4881c4381000	                         add rsp, 0x1038	       468	wrapper.c	FUNCTION_40
0x4000fe0	              0x5b	                                 pop rbx	       468	wrapper.c	FUNCTION_40
0x4000fe1	              0x5d	                                 pop rbp	       468	wrapper.c	FUNCTION_40
0x4000fe2	              0xc3	                                     ret	       468	wrapper.c	FUNCTION_40
warn_on_fopen_errors	CALL,1:IF,1:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	20
0x4000e58	              0x55	                                push rbp	       428	wrapper.c	FUNCTION_38
0x4000e59	          0x4889e5	                            mov rbp, rsp	       428	wrapper.c	FUNCTION_38
0x4000e5c	        0x4883ec10	                           sub rsp, 0x10	       428	wrapper.c	FUNCTION_38
0x4000e60	        0x48897df8	                mov qword [rbp - 8], rdi	       428	wrapper.c	FUNCTION_38
0x4000e64	      0xe800000000	                          call 0x4000e69	       429	wrapper.c	FUNCTION_38	IF_1
0x4000e69	            0x8b00	                    mov eax, dword [rax]	       429	wrapper.c	FUNCTION_38	IF_1
0x4000e6b	          0x83f802	                              cmp eax, 2	       429	wrapper.c	FUNCTION_38	IF_1
0x4000e6e	            0x741f	                            je 0x4000e8f	       429	wrapper.c	FUNCTION_38	IF_1
0x4000e70	      0xe800000000	                          call 0x4000e75	       429	wrapper.c	FUNCTION_38	IF_1
0x4000e75	            0x8b00	                    mov eax, dword [rax]	       429	wrapper.c	FUNCTION_38	IF_1
0x4000e77	          0x83f814	                           cmp eax, 0x14	       429	wrapper.c	FUNCTION_38	IF_1
0x4000e7a	            0x7413	                            je 0x4000e8f	       429	wrapper.c	FUNCTION_38	IF_1
0x4000e7c	        0x488b45f8	                mov rax, qword [rbp - 8]	       430	wrapper.c	FUNCTION_38	IF_1	CALL_1
0x4000e80	          0x4889c7	                            mov rdi, rax	       430	wrapper.c	FUNCTION_38	IF_1	CALL_1
0x4000e83	      0xe8a0ffffff	           call sym.warn_on_inaccessible	       430	wrapper.c	FUNCTION_38	IF_1	CALL_1
0x4000e88	      0xb8ffffffff	                     mov eax, 0xffffffff	       431	wrapper.c	FUNCTION_38	IF_1
0x4000e8d	            0xeb05	                           jmp 0x4000e94	       431	wrapper.c	FUNCTION_38	IF_1
0x4000e8f	      0xb800000000	                              mov eax, 0	       434	wrapper.c	FUNCTION_38
0x4000e94	              0xc9	                                   leave	       435	wrapper.c	FUNCTION_38
0x4000e95	              0xc3	                                     ret	       435	wrapper.c	FUNCTION_38
strbuf_complete_line	CALL,1:IF,0:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	11
0x4000162	              0x55	                                push rbp	       600	strbuf.h	FUNCTION_11
0x4000163	          0x4889e5	                            mov rbp, rsp	       600	strbuf.h	FUNCTION_11
0x4000166	        0x4883ec10	                           sub rsp, 0x10	       600	strbuf.h	FUNCTION_11
0x400016a	        0x48897df8	                mov qword [rbp - 8], rdi	       600	strbuf.h	FUNCTION_11
0x400016e	        0x488b45f8	                mov rax, qword [rbp - 8]	       601	strbuf.h	FUNCTION_11	CALL_1
0x4000172	      0xbe0a000000	                            mov esi, 0xa	       601	strbuf.h	FUNCTION_11	CALL_1
0x4000177	          0x4889c7	                            mov rdi, rax	       601	strbuf.h	FUNCTION_11	CALL_1
0x400017a	      0xe891ffffff	                call sym.strbuf_complete	       601	strbuf.h	FUNCTION_11	CALL_1
0x400017f	              0x90	                                     nop	       602	strbuf.h	FUNCTION_11
0x4000180	              0xc9	                                   leave	       602	strbuf.h	FUNCTION_11
0x4000181	              0xc3	                                     ret	       602	strbuf.h	FUNCTION_11
warn_if_unremovable	CALL,1:IF,1:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	30
0x40013f5	              0x55	                                push rbp	       567	wrapper.c	FUNCTION_44
0x40013f6	          0x4889e5	                            mov rbp, rsp	       567	wrapper.c	FUNCTION_44
0x40013f9	        0x4883ec30	                           sub rsp, 0x30	       567	wrapper.c	FUNCTION_44
0x40013fd	        0x48897de8	             mov qword [rbp - 0x18], rdi	       567	wrapper.c	FUNCTION_44
0x4001401	        0x488975e0	             mov qword [rbp - 0x20], rsi	       567	wrapper.c	FUNCTION_44
0x4001405	          0x8955dc	             mov dword [rbp - 0x24], edx	       567	wrapper.c	FUNCTION_44
0x4001408	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       569	wrapper.c	FUNCTION_44	IF_1
0x400140c	            0x740c	                            je 0x400141a	       569	wrapper.c	FUNCTION_44	IF_1
0x400140e	      0xe800000000	                          call 0x4001413	       569	wrapper.c	FUNCTION_44	IF_1
0x4001413	            0x8b00	                    mov eax, dword [rax]	       569	wrapper.c	FUNCTION_44	IF_1
0x4001415	          0x83f802	                              cmp eax, 2	       569	wrapper.c	FUNCTION_44	IF_1
0x4001418	            0x7507	                           jne 0x4001421	       569	wrapper.c	FUNCTION_44	IF_1
0x400141a	      0xb800000000	                              mov eax, 0	       570	wrapper.c	FUNCTION_44	IF_1
0x400141f	            0xeb34	                           jmp 0x4001455	       570	wrapper.c	FUNCTION_44	IF_1
0x4001421	      0xe800000000	                          call 0x4001426	       571	wrapper.c	FUNCTION_44
0x4001426	            0x8b00	                    mov eax, dword [rax]	       571	wrapper.c	FUNCTION_44
0x4001428	          0x8945fc	                mov dword [rbp - 4], eax	       571	wrapper.c	FUNCTION_44
0x400142b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       572	wrapper.c	FUNCTION_44	CALL_1
0x400142f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       572	wrapper.c	FUNCTION_44	CALL_1
0x4001433	          0x4889c6	                            mov rsi, rax	       572	wrapper.c	FUNCTION_44	CALL_1
0x4001436	      0xbf00000000	                              mov edi, 0	       572	wrapper.c	FUNCTION_44	CALL_1
0x400143b	      0xb800000000	                              mov eax, 0	       572	wrapper.c	FUNCTION_44	CALL_1
0x4001440	      0xe800000000	                          call 0x4001445	       572	wrapper.c	FUNCTION_44	CALL_1
0x4001445	      0xe800000000	                          call 0x400144a	       573	wrapper.c	FUNCTION_44
0x400144a	          0x4889c2	                            mov rdx, rax	       573	wrapper.c	FUNCTION_44
0x400144d	          0x8b45fc	                mov eax, dword [rbp - 4]	       573	wrapper.c	FUNCTION_44
0x4001450	            0x8902	                    mov dword [rdx], eax	       573	wrapper.c	FUNCTION_44
0x4001452	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       574	wrapper.c	FUNCTION_44
0x4001455	              0xc9	                                   leave	       575	wrapper.c	FUNCTION_44
0x4001456	              0xc3	                                     ret	       575	wrapper.c	FUNCTION_44
xrealloc	CALL,7:IF,4:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	53
0x4000551	              0x55	                                push rbp	       134	wrapper.c	FUNCTION_23
0x4000552	          0x4889e5	                            mov rbp, rsp	       134	wrapper.c	FUNCTION_23
0x4000555	        0x4883ec20	                           sub rsp, 0x20	       134	wrapper.c	FUNCTION_23
0x4000559	        0x48897de8	             mov qword [rbp - 0x18], rdi	       134	wrapper.c	FUNCTION_23
0x400055d	        0x488975e0	             mov qword [rbp - 0x20], rsi	       134	wrapper.c	FUNCTION_23
0x4000561	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       137	wrapper.c	FUNCTION_23	CALL_1
0x4000565	      0xbe00000000	                              mov esi, 0	       137	wrapper.c	FUNCTION_23	CALL_1
0x400056a	          0x4889c7	                            mov rdi, rax	       137	wrapper.c	FUNCTION_23	CALL_1
0x400056d	      0xe847fcffff	             call sym.memory_limit_check	       137	wrapper.c	FUNCTION_23	CALL_1
0x4000572	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       138	wrapper.c	FUNCTION_23	CALL_2
0x4000576	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       138	wrapper.c	FUNCTION_23	CALL_2
0x400057a	          0x4889d6	                            mov rsi, rdx	       138	wrapper.c	FUNCTION_23	CALL_2
0x400057d	          0x4889c7	                            mov rdi, rax	       138	wrapper.c	FUNCTION_23	CALL_2
0x4000580	      0xe800000000	                          call 0x4000585	       138	wrapper.c	FUNCTION_23	CALL_2
0x4000585	        0x488945f8	                mov qword [rbp - 8], rax	       138	wrapper.c	FUNCTION_23	CALL_2
0x4000589	      0x48837df800	                  cmp qword [rbp - 8], 0	       139	wrapper.c	FUNCTION_23	IF_1
0x400058e	            0x751c	                           jne 0x40005ac	       139	wrapper.c	FUNCTION_23	IF_1
0x4000590	      0x48837de000	               cmp qword [rbp - 0x20], 0	       139	wrapper.c	FUNCTION_23	IF_1
0x4000595	            0x7515	                           jne 0x40005ac	       139	wrapper.c	FUNCTION_23	IF_1
0x4000597	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       140	wrapper.c	FUNCTION_23	CALL_3
0x400059b	      0xbe01000000	                              mov esi, 1	       140	wrapper.c	FUNCTION_23	CALL_3
0x40005a0	          0x4889c7	                            mov rdi, rax	       140	wrapper.c	FUNCTION_23	CALL_3
0x40005a3	      0xe800000000	                          call 0x40005a8	       140	wrapper.c	FUNCTION_23	CALL_3
0x40005a8	        0x488945f8	                mov qword [rbp - 8], rax	       140	wrapper.c	FUNCTION_23	CALL_3
0x40005ac	      0x48837df800	                  cmp qword [rbp - 8], 0	       141	wrapper.c	FUNCTION_23	IF_2
0x40005b1	            0x7560	                           jne 0x4000613	       141	wrapper.c	FUNCTION_23	IF_2
0x40005b3	    0x488b05000000	            mov rax, qword [0x040005ba] 	       142	wrapper.c	FUNCTION_23	IF_2	CALL_4
0x40005ba	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       142	wrapper.c	FUNCTION_23	IF_2	CALL_4
0x40005be	          0x4889d7	                            mov rdi, rdx	       142	wrapper.c	FUNCTION_23	IF_2	CALL_4
0x40005c1	            0xffd0	                                call rax	       142	wrapper.c	FUNCTION_23	IF_2	CALL_4
0x40005c3	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       143	wrapper.c	FUNCTION_23	IF_2	CALL_5
0x40005c7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       143	wrapper.c	FUNCTION_23	IF_2	CALL_5
0x40005cb	          0x4889d6	                            mov rsi, rdx	       143	wrapper.c	FUNCTION_23	IF_2	CALL_5
0x40005ce	          0x4889c7	                            mov rdi, rax	       143	wrapper.c	FUNCTION_23	IF_2	CALL_5
0x40005d1	      0xe800000000	                          call 0x40005d6	       143	wrapper.c	FUNCTION_23	IF_2	CALL_5
0x40005d6	        0x488945f8	                mov qword [rbp - 8], rax	       143	wrapper.c	FUNCTION_23	IF_2	CALL_5
0x40005da	      0x48837df800	                  cmp qword [rbp - 8], 0	       144	wrapper.c	FUNCTION_23	IF_2	IF_3
0x40005df	            0x751c	                           jne 0x40005fd	       144	wrapper.c	FUNCTION_23	IF_2	IF_3
0x40005e1	      0x48837de000	               cmp qword [rbp - 0x20], 0	       144	wrapper.c	FUNCTION_23	IF_2	IF_3
0x40005e6	            0x7515	                           jne 0x40005fd	       144	wrapper.c	FUNCTION_23	IF_2	IF_3
0x40005e8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       145	wrapper.c	FUNCTION_23	IF_2	CALL_6
0x40005ec	      0xbe01000000	                              mov esi, 1	       145	wrapper.c	FUNCTION_23	IF_2	CALL_6
0x40005f1	          0x4889c7	                            mov rdi, rax	       145	wrapper.c	FUNCTION_23	IF_2	CALL_6
0x40005f4	      0xe800000000	                          call 0x40005f9	       145	wrapper.c	FUNCTION_23	IF_2	CALL_6
0x40005f9	        0x488945f8	                mov qword [rbp - 8], rax	       145	wrapper.c	FUNCTION_23	IF_2	CALL_6
0x40005fd	      0x48837df800	                  cmp qword [rbp - 8], 0	       146	wrapper.c	FUNCTION_23	IF_2	IF_4
0x4000602	            0x750f	                           jne 0x4000613	       146	wrapper.c	FUNCTION_23	IF_2	IF_4
0x4000604	      0xbf00000000	                              mov edi, 0	       147	wrapper.c	FUNCTION_23	IF_2	CALL_7
0x4000609	      0xb800000000	                              mov eax, 0	       147	wrapper.c	FUNCTION_23	IF_2	CALL_7
0x400060e	      0xe800000000	                          call 0x4000613	       147	wrapper.c	FUNCTION_23	IF_2	CALL_7
0x4000613	        0x488b45f8	                mov rax, qword [rbp - 8]	       149	wrapper.c	FUNCTION_23
0x4000617	              0xc9	                                   leave	       150	wrapper.c	FUNCTION_23
0x4000618	              0xc3	                                     ret	       150	wrapper.c	FUNCTION_23
fopen_for_writing	CALL,1:IF,2:SWITCH,0:ELSE,1:FOR,0:WHILE,0:functions,0:DO,0	31
0x4000dbc	              0x55	                                push rbp	       410	wrapper.c	FUNCTION_36
0x4000dbd	          0x4889e5	                            mov rbp, rsp	       410	wrapper.c	FUNCTION_36
0x4000dc0	        0x4883ec20	                           sub rsp, 0x20	       410	wrapper.c	FUNCTION_36
0x4000dc4	        0x48897de8	             mov qword [rbp - 0x18], rdi	       410	wrapper.c	FUNCTION_36
0x4000dc8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       411	wrapper.c	FUNCTION_36
0x4000dcc	      0xbe00000000	                              mov esi, 0	       411	wrapper.c	FUNCTION_36
0x4000dd1	          0x4889c7	                            mov rdi, rax	       411	wrapper.c	FUNCTION_36
0x4000dd4	      0xe800000000	                          call 0x4000dd9	       411	wrapper.c	FUNCTION_36
0x4000dd9	        0x488945f8	                mov qword [rbp - 8], rax	       411	wrapper.c	FUNCTION_36
0x4000ddd	      0x48837df800	                  cmp qword [rbp - 8], 0	       413	wrapper.c	FUNCTION_36	IF_1
0x4000de2	            0x753e	                           jne 0x4000e22	       413	wrapper.c	FUNCTION_36	IF_1
0x4000de4	      0xe800000000	                          call 0x4000de9	       413	wrapper.c	FUNCTION_36	IF_1
0x4000de9	            0x8b00	                    mov eax, dword [rax]	       413	wrapper.c	FUNCTION_36	IF_1
0x4000deb	          0x83f801	                              cmp eax, 1	       413	wrapper.c	FUNCTION_36	IF_1
0x4000dee	            0x7532	                           jne 0x4000e22	       413	wrapper.c	FUNCTION_36	IF_1
0x4000df0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       414	wrapper.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x4000df4	          0x4889c7	                            mov rdi, rax	       414	wrapper.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x4000df7	      0xe800000000	                          call 0x4000dfc	       414	wrapper.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x4000dfc	            0x85c0	                           test eax, eax	       414	wrapper.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x4000dfe	            0x7517	                           jne 0x4000e17	       414	wrapper.c	FUNCTION_36	IF_1	IF_2	CALL_1
0x4000e00	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       415	wrapper.c	FUNCTION_36	IF_1	IF_2
0x4000e04	      0xbe00000000	                              mov esi, 0	       415	wrapper.c	FUNCTION_36	IF_1	IF_2
0x4000e09	          0x4889c7	                            mov rdi, rax	       415	wrapper.c	FUNCTION_36	IF_1	IF_2
0x4000e0c	      0xe800000000	                          call 0x4000e11	       415	wrapper.c	FUNCTION_36	IF_1	IF_2
0x4000e11	        0x488945f8	                mov qword [rbp - 8], rax	       415	wrapper.c	FUNCTION_36	IF_1	IF_2
0x4000e15	            0xeb0b	                           jmp 0x4000e22	       415	wrapper.c	FUNCTION_36	IF_1	IF_2
0x4000e17	      0xe800000000	                          call 0x4000e1c	       417	wrapper.c	FUNCTION_36	IF_1	ELSE_1
0x4000e1c	    0xc70001000000	                      mov dword [rax], 1	       417	wrapper.c	FUNCTION_36	IF_1	ELSE_1
0x4000e22	        0x488b45f8	                mov rax, qword [rbp - 8]	       419	wrapper.c	FUNCTION_36	ELSE_1
0x4000e26	              0xc9	                                   leave	       420	wrapper.c	FUNCTION_36	ELSE_1
0x4000e27	              0xc3	                                     ret	       420	wrapper.c	FUNCTION_36	ELSE_1
sleep_millisec	CALL,1:IF,0:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	12
0x40019d2	              0x55	                                push rbp	       677	wrapper.c	FUNCTION_56
0x40019d3	          0x4889e5	                            mov rbp, rsp	       677	wrapper.c	FUNCTION_56
0x40019d6	        0x4883ec10	                           sub rsp, 0x10	       677	wrapper.c	FUNCTION_56
0x40019da	          0x897dfc	                mov dword [rbp - 4], edi	       677	wrapper.c	FUNCTION_56
0x40019dd	          0x8b45fc	                mov eax, dword [rbp - 4]	       678	wrapper.c	FUNCTION_56	CALL_1
0x40019e0	            0x89c2	                            mov edx, eax	       678	wrapper.c	FUNCTION_56	CALL_1
0x40019e2	      0xbe00000000	                              mov esi, 0	       678	wrapper.c	FUNCTION_56	CALL_1
0x40019e7	      0xbf00000000	                              mov edi, 0	       678	wrapper.c	FUNCTION_56	CALL_1
0x40019ec	      0xe800000000	                          call 0x40019f1	       678	wrapper.c	FUNCTION_56	CALL_1
0x40019f1	              0x90	                                     nop	       679	wrapper.c	FUNCTION_56
0x40019f2	              0xc9	                                   leave	       679	wrapper.c	FUNCTION_56
0x40019f3	              0xc3	                                     ret	       679	wrapper.c	FUNCTION_56
do_nothing	CALL,0:IF,0:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	6
0x40001ae	              0x55	                                push rbp	         8	wrapper.c	FUNCTION_12
0x40001af	          0x4889e5	                            mov rbp, rsp	         8	wrapper.c	FUNCTION_12
0x40001b2	        0x48897df8	                mov qword [rbp - 8], rdi	         8	wrapper.c	FUNCTION_12
0x40001b6	              0x90	                                     nop	         9	wrapper.c	FUNCTION_12
0x40001b7	              0x5d	                                 pop rbp	         9	wrapper.c	FUNCTION_12
0x40001b8	              0xc3	                                     ret	         9	wrapper.c	FUNCTION_12
handle_nonblock	CALL,1:IF,1:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	32
0x4000904	              0x55	                                push rbp	       232	wrapper.c	FUNCTION_26
0x4000905	          0x4889e5	                            mov rbp, rsp	       232	wrapper.c	FUNCTION_26
0x4000908	        0x4883ec20	                           sub rsp, 0x20	       232	wrapper.c	FUNCTION_26
0x400090c	          0x897dec	             mov dword [rbp - 0x14], edi	       232	wrapper.c	FUNCTION_26
0x400090f	            0x89f0	                            mov eax, esi	       232	wrapper.c	FUNCTION_26
0x4000911	          0x8955e4	             mov dword [rbp - 0x1c], edx	       232	wrapper.c	FUNCTION_26
0x4000914	        0x668945e8	               mov word [rbp - 0x18], ax	       232	wrapper.c	FUNCTION_26
0x4000918	    0x64488b042528	                mov rax, qword fs:[0x28]	       232	wrapper.c	FUNCTION_26
0x4000921	        0x488945f8	                mov qword [rbp - 8], rax	       232	wrapper.c	FUNCTION_26
0x4000925	            0x31c0	                            xor eax, eax	       232	wrapper.c	FUNCTION_26
0x4000927	        0x837de40b	            cmp dword [rbp - 0x1c], 0xb 	       235	wrapper.c	FUNCTION_26	IF_1
0x400092b	            0x740d	                            je 0x400093a	       235	wrapper.c	FUNCTION_26	IF_1
0x400092d	        0x837de40b	            cmp dword [rbp - 0x1c], 0xb 	       235	wrapper.c	FUNCTION_26	IF_1
0x4000931	            0x7407	                            je 0x400093a	       235	wrapper.c	FUNCTION_26	IF_1
0x4000933	      0xb800000000	                              mov eax, 0	       236	wrapper.c	FUNCTION_26	IF_1
0x4000938	            0xeb29	                           jmp 0x4000963	       236	wrapper.c	FUNCTION_26	IF_1
0x400093a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       238	wrapper.c	FUNCTION_26
0x400093d	          0x8945f0	             mov dword [rbp - 0x10], eax	       238	wrapper.c	FUNCTION_26
0x4000940	         0xfb745e8	            movzx eax, word [rbp - 0x18]	       239	wrapper.c	FUNCTION_26
0x4000944	        0x668945f4	                mov word [rbp - 0xc], ax	       239	wrapper.c	FUNCTION_26
0x4000948	        0x488d45f0	                   lea rax, [rbp - 0x10]	       245	wrapper.c	FUNCTION_26	CALL_1
0x400094c	      0xbaffffffff	                     mov edx, 0xffffffff	       245	wrapper.c	FUNCTION_26	CALL_1
0x4000951	      0xbe01000000	                              mov esi, 1	       245	wrapper.c	FUNCTION_26	CALL_1
0x4000956	          0x4889c7	                            mov rdi, rax	       245	wrapper.c	FUNCTION_26	CALL_1
0x4000959	      0xe800000000	                          call 0x400095e	       245	wrapper.c	FUNCTION_26	CALL_1
0x400095e	      0xb801000000	                              mov eax, 1	       246	wrapper.c	FUNCTION_26
0x4000963	        0x488b4df8	                mov rcx, qword [rbp - 8]	       247	wrapper.c	FUNCTION_26
0x4000967	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       247	wrapper.c	FUNCTION_26
0x4000970	            0x7405	                            je 0x4000977	       247	wrapper.c	FUNCTION_26
0x4000972	      0xe800000000	                          call 0x4000977	       247	wrapper.c	FUNCTION_26
0x4000977	              0xc9	                                   leave	       247	wrapper.c	FUNCTION_26
0x4000978	              0xc3	                                     ret	       247	wrapper.c	FUNCTION_26
do_xmalloc	CALL,8:IF,6:SWITCH,0:ELSE,1:FOR,0:WHILE,0:functions,0:DO,0	62
0x4000305	              0x55	                                push rbp	        55	wrapper.c	FUNCTION_16
0x4000306	          0x4889e5	                            mov rbp, rsp	        55	wrapper.c	FUNCTION_16
0x4000309	        0x4883ec20	                           sub rsp, 0x20	        55	wrapper.c	FUNCTION_16
0x400030d	        0x48897de8	             mov qword [rbp - 0x18], rdi	        55	wrapper.c	FUNCTION_16
0x4000311	          0x8975e4	             mov dword [rbp - 0x1c], esi	        55	wrapper.c	FUNCTION_16
0x4000314	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	        58	wrapper.c	FUNCTION_16	IF_1	CALL_1
0x4000317	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        58	wrapper.c	FUNCTION_16	IF_1	CALL_1
0x400031b	            0x89d6	                            mov esi, edx	        58	wrapper.c	FUNCTION_16	IF_1	CALL_1
0x400031d	          0x4889c7	                            mov rdi, rax	        58	wrapper.c	FUNCTION_16	IF_1	CALL_1
0x4000320	      0xe894feffff	             call sym.memory_limit_check	        58	wrapper.c	FUNCTION_16	IF_1	CALL_1
0x4000325	            0x85c0	                           test eax, eax	        58	wrapper.c	FUNCTION_16	IF_1	CALL_1
0x4000327	            0x740a	                            je 0x4000333	        58	wrapper.c	FUNCTION_16	IF_1	CALL_1
0x4000329	      0xb800000000	                              mov eax, 0	        59	wrapper.c	FUNCTION_16	IF_1
0x400032e	      0xe9bc000000	                           jmp 0x40003ef	        59	wrapper.c	FUNCTION_16	IF_1
0x4000333	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        60	wrapper.c	FUNCTION_16	CALL_2
0x4000337	          0x4889c7	                            mov rdi, rax	        60	wrapper.c	FUNCTION_16	CALL_2
0x400033a	      0xe800000000	                          call 0x400033f	        60	wrapper.c	FUNCTION_16	CALL_2
0x400033f	        0x488945f8	                mov qword [rbp - 8], rax	        60	wrapper.c	FUNCTION_16	CALL_2
0x4000343	      0x48837df800	                  cmp qword [rbp - 8], 0	        61	wrapper.c	FUNCTION_16	IF_2
0x4000348	            0x7515	                           jne 0x400035f	        61	wrapper.c	FUNCTION_16	IF_2
0x400034a	      0x48837de800	               cmp qword [rbp - 0x18], 0	        61	wrapper.c	FUNCTION_16	IF_2
0x400034f	            0x750e	                           jne 0x400035f	        61	wrapper.c	FUNCTION_16	IF_2
0x4000351	      0xbf01000000	                              mov edi, 1	        62	wrapper.c	FUNCTION_16	CALL_3
0x4000356	      0xe800000000	                          call 0x400035b	        62	wrapper.c	FUNCTION_16	CALL_3
0x400035b	        0x488945f8	                mov qword [rbp - 8], rax	        62	wrapper.c	FUNCTION_16	CALL_3
0x400035f	      0x48837df800	                  cmp qword [rbp - 8], 0	        63	wrapper.c	FUNCTION_16	IF_3
0x4000364	     0xf8581000000	                           jne 0x40003eb	        63	wrapper.c	FUNCTION_16	IF_3
0x400036a	    0x488b05000000	            mov rax, qword [0x04000371] 	        64	wrapper.c	FUNCTION_16	IF_3	CALL_4
0x4000371	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        64	wrapper.c	FUNCTION_16	IF_3	CALL_4
0x4000375	          0x4889d7	                            mov rdi, rdx	        64	wrapper.c	FUNCTION_16	IF_3	CALL_4
0x4000378	            0xffd0	                                call rax	        64	wrapper.c	FUNCTION_16	IF_3	CALL_4
0x400037a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        65	wrapper.c	FUNCTION_16	IF_3	CALL_5
0x400037e	          0x4889c7	                            mov rdi, rax	        65	wrapper.c	FUNCTION_16	IF_3	CALL_5
0x4000381	      0xe800000000	                          call 0x4000386	        65	wrapper.c	FUNCTION_16	IF_3	CALL_5
0x4000386	        0x488945f8	                mov qword [rbp - 8], rax	        65	wrapper.c	FUNCTION_16	IF_3	CALL_5
0x400038a	      0x48837df800	                  cmp qword [rbp - 8], 0	        66	wrapper.c	FUNCTION_16	IF_3	IF_4
0x400038f	            0x7515	                           jne 0x40003a6	        66	wrapper.c	FUNCTION_16	IF_3	IF_4
0x4000391	      0x48837de800	               cmp qword [rbp - 0x18], 0	        66	wrapper.c	FUNCTION_16	IF_3	IF_4
0x4000396	            0x750e	                           jne 0x40003a6	        66	wrapper.c	FUNCTION_16	IF_3	IF_4
0x4000398	      0xbf01000000	                              mov edi, 1	        67	wrapper.c	FUNCTION_16	IF_3	CALL_6
0x400039d	      0xe800000000	                          call 0x40003a2	        67	wrapper.c	FUNCTION_16	IF_3	CALL_6
0x40003a2	        0x488945f8	                mov qword [rbp - 8], rax	        67	wrapper.c	FUNCTION_16	IF_3	CALL_6
0x40003a6	      0x48837df800	                  cmp qword [rbp - 8], 0	        68	wrapper.c	FUNCTION_16	IF_3	IF_5
0x40003ab	            0x753e	                           jne 0x40003eb	        68	wrapper.c	FUNCTION_16	IF_3	IF_5
0x40003ad	        0x837de400	               cmp dword [rbp - 0x1c], 0	        69	wrapper.c	FUNCTION_16	IF_3	IF_5	IF_6
0x40003b1	            0x7516	                           jne 0x40003c9	        69	wrapper.c	FUNCTION_16	IF_3	IF_5	IF_6
0x40003b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        70	wrapper.c	FUNCTION_16	IF_3	IF_5	IF_6	CALL_7
0x40003b7	          0x4889c6	                            mov rsi, rax	        70	wrapper.c	FUNCTION_16	IF_3	IF_5	IF_6	CALL_7
0x40003ba	      0xbf00000000	                              mov edi, 0	        70	wrapper.c	FUNCTION_16	IF_3	IF_5	IF_6	CALL_7
0x40003bf	      0xb800000000	                              mov eax, 0	        70	wrapper.c	FUNCTION_16	IF_3	IF_5	IF_6	CALL_7
0x40003c4	      0xe800000000	                          call 0x40003c9	        70	wrapper.c	FUNCTION_16	IF_3	IF_5	IF_6	CALL_7
0x40003c9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        73	wrapper.c	FUNCTION_16	IF_3	IF_5	ELSE_1
0x40003cd	          0x4889c6	                            mov rsi, rax	        73	wrapper.c	FUNCTION_16	IF_3	IF_5	ELSE_1
0x40003d0	      0xbf00000000	                              mov edi, 0	        73	wrapper.c	FUNCTION_16	IF_3	IF_5	ELSE_1
0x40003d5	      0xb800000000	                              mov eax, 0	        73	wrapper.c	FUNCTION_16	IF_3	IF_5	ELSE_1
0x40003da	      0xe800000000	                          call 0x40003df	        73	wrapper.c	FUNCTION_16	IF_3	IF_5	ELSE_1
0x40003df	      0xe85cfcffff	                    call sym.const_error	        73	wrapper.c	FUNCTION_16	IF_3	IF_5	ELSE_1
0x40003e4	      0xb800000000	                              mov eax, 0	        75	wrapper.c	FUNCTION_16	IF_3	IF_5	ELSE_1
0x40003e9	            0xeb04	                           jmp 0x40003ef	        75	wrapper.c	FUNCTION_16	IF_3	IF_5	ELSE_1
0x40003eb	        0x488b45f8	                mov rax, qword [rbp - 8]	        82	wrapper.c	FUNCTION_16
0x40003ef	              0xc9	                                   leave	        83	wrapper.c	FUNCTION_16
0x40003f0	              0xc3	                                     ret	        83	wrapper.c	FUNCTION_16
rmdir_or_warn	CALL,2:IF,0:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	14
0x400150e	              0x55	                                push rbp	       597	wrapper.c	FUNCTION_47
0x400150f	          0x4889e5	                            mov rbp, rsp	       597	wrapper.c	FUNCTION_47
0x4001512	        0x4883ec10	                           sub rsp, 0x10	       597	wrapper.c	FUNCTION_47
0x4001516	        0x48897df8	                mov qword [rbp - 8], rdi	       597	wrapper.c	FUNCTION_47
0x400151a	        0x488b45f8	                mov rax, qword [rbp - 8]	       598	wrapper.c	FUNCTION_47	CALL_2
0x400151e	          0x4889c7	                            mov rdi, rax	       598	wrapper.c	FUNCTION_47	CALL_2
0x4001521	      0xe800000000	                          call 0x4001526	       598	wrapper.c	FUNCTION_47	CALL_2
0x4001526	            0x89c2	                            mov edx, eax	       598	wrapper.c	FUNCTION_47	CALL_2
0x4001528	        0x488b45f8	                mov rax, qword [rbp - 8]	       598	wrapper.c	FUNCTION_47	CALL_2
0x400152c	          0x4889c6	                            mov rsi, rax	       598	wrapper.c	FUNCTION_47	CALL_2
0x400152f	      0xbf00000000	                              mov edi, 0	       598	wrapper.c	FUNCTION_47	CALL_2
0x4001534	      0xe8bcfeffff	            call sym.warn_if_unremovable	       598	wrapper.c	FUNCTION_47	CALL_2
0x4001539	              0xc9	                                   leave	       599	wrapper.c	FUNCTION_47
0x400153a	              0xc3	                                     ret	       599	wrapper.c	FUNCTION_47
pread_in_full	CALL,1:IF,2:SWITCH,0:ELSE,0:FOR,0:WHILE,1:functions,0:DO,0	39
0x4000be3	              0x55	                                push rbp	       353	wrapper.c	FUNCTION_32
0x4000be4	          0x4889e5	                            mov rbp, rsp	       353	wrapper.c	FUNCTION_32
0x4000be7	        0x4883ec40	                           sub rsp, 0x40	       353	wrapper.c	FUNCTION_32
0x4000beb	          0x897ddc	             mov dword [rbp - 0x24], edi	       353	wrapper.c	FUNCTION_32
0x4000bee	        0x488975d0	             mov qword [rbp - 0x30], rsi	       353	wrapper.c	FUNCTION_32
0x4000bf2	        0x488955c8	             mov qword [rbp - 0x38], rdx	       353	wrapper.c	FUNCTION_32
0x4000bf6	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       353	wrapper.c	FUNCTION_32
0x4000bfa	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       354	wrapper.c	FUNCTION_32
0x4000bfe	        0x488945e8	             mov qword [rbp - 0x18], rax	       354	wrapper.c	FUNCTION_32
0x4000c02	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       355	wrapper.c	FUNCTION_32
0x4000c0a	            0xeb57	                           jmp 0x4000c63	       357	wrapper.c	FUNCTION_32	WHILE_1
0x4000c0c	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       358	wrapper.c	FUNCTION_32	WHILE_1	CALL_1
0x4000c10	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       358	wrapper.c	FUNCTION_32	WHILE_1	CALL_1
0x4000c14	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	       358	wrapper.c	FUNCTION_32	WHILE_1	CALL_1
0x4000c18	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       358	wrapper.c	FUNCTION_32	WHILE_1	CALL_1
0x4000c1b	            0x89c7	                            mov edi, eax	       358	wrapper.c	FUNCTION_32	WHILE_1	CALL_1
0x4000c1d	      0xe800000000	                          call 0x4000c22	       358	wrapper.c	FUNCTION_32	WHILE_1	CALL_1
0x4000c22	        0x488945f8	                mov qword [rbp - 8], rax	       358	wrapper.c	FUNCTION_32	WHILE_1	CALL_1
0x4000c26	      0x48837df800	                  cmp qword [rbp - 8], 0	       359	wrapper.c	FUNCTION_32	WHILE_1	IF_1
0x4000c2b	            0x7909	                           jns 0x4000c36	       359	wrapper.c	FUNCTION_32	WHILE_1	IF_1
0x4000c2d	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       360	wrapper.c	FUNCTION_32	WHILE_1	IF_1
0x4000c34	            0xeb38	                           jmp 0x4000c6e	       360	wrapper.c	FUNCTION_32	WHILE_1	IF_1
0x4000c36	      0x48837df800	                  cmp qword [rbp - 8], 0	       361	wrapper.c	FUNCTION_32	WHILE_1	IF_2
0x4000c3b	            0x7506	                           jne 0x4000c43	       361	wrapper.c	FUNCTION_32	WHILE_1	IF_2
0x4000c3d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       362	wrapper.c	FUNCTION_32	WHILE_1	IF_2
0x4000c41	            0xeb2b	                           jmp 0x4000c6e	       362	wrapper.c	FUNCTION_32	WHILE_1	IF_2
0x4000c43	        0x488b45f8	                mov rax, qword [rbp - 8]	       363	wrapper.c	FUNCTION_32	WHILE_1
0x4000c47	        0x482945c8	             sub qword [rbp - 0x38], rax	       363	wrapper.c	FUNCTION_32	WHILE_1
0x4000c4b	        0x488b45f8	                mov rax, qword [rbp - 8]	       364	wrapper.c	FUNCTION_32	WHILE_1
0x4000c4f	        0x480145e8	            add qword [rbp - 0x18], rax 	       364	wrapper.c	FUNCTION_32	WHILE_1
0x4000c53	        0x488b45f8	                mov rax, qword [rbp - 8]	       365	wrapper.c	FUNCTION_32	WHILE_1
0x4000c57	        0x480145f0	            add qword [rbp - 0x10], rax 	       365	wrapper.c	FUNCTION_32	WHILE_1
0x4000c5b	        0x488b45f8	                mov rax, qword [rbp - 8]	       366	wrapper.c	FUNCTION_32	WHILE_1
0x4000c5f	        0x480145c0	            add qword [rbp - 0x40], rax 	       366	wrapper.c	FUNCTION_32	WHILE_1
0x4000c63	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       357	wrapper.c	FUNCTION_32	WHILE_1
0x4000c68	            0x75a2	                           jne 0x4000c0c	       357	wrapper.c	FUNCTION_32	WHILE_1
0x4000c6a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       369	wrapper.c	FUNCTION_32
0x4000c6e	              0xc9	                                   leave	       370	wrapper.c	FUNCTION_32
0x4000c6f	              0xc3	                                     ret	       370	wrapper.c	FUNCTION_32
xgethostname	CALL,1:IF,1:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	21
0x40019f4	              0x55	                                push rbp	       682	wrapper.c	FUNCTION_57
0x40019f5	          0x4889e5	                            mov rbp, rsp	       682	wrapper.c	FUNCTION_57
0x40019f8	        0x4883ec20	                           sub rsp, 0x20	       682	wrapper.c	FUNCTION_57
0x40019fc	        0x48897de8	             mov qword [rbp - 0x18], rdi	       682	wrapper.c	FUNCTION_57
0x4001a00	        0x488975e0	             mov qword [rbp - 0x20], rsi	       682	wrapper.c	FUNCTION_57
0x4001a04	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       688	wrapper.c	FUNCTION_57	CALL_1
0x4001a08	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       688	wrapper.c	FUNCTION_57	CALL_1
0x4001a0c	          0x4889d6	                            mov rsi, rdx	       688	wrapper.c	FUNCTION_57	CALL_1
0x4001a0f	          0x4889c7	                            mov rdi, rax	       688	wrapper.c	FUNCTION_57	CALL_1
0x4001a12	      0xe800000000	                          call 0x4001a17	       688	wrapper.c	FUNCTION_57	CALL_1
0x4001a17	          0x8945fc	                mov dword [rbp - 4], eax	       688	wrapper.c	FUNCTION_57	CALL_1
0x4001a1a	        0x837dfc00	                  cmp dword [rbp - 4], 0	       689	wrapper.c	FUNCTION_57	IF_1
0x4001a1e	            0x7512	                           jne 0x4001a32	       689	wrapper.c	FUNCTION_57	IF_1
0x4001a20	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       690	wrapper.c	FUNCTION_57	IF_1
0x4001a24	        0x488d50ff	                      lea rdx, [rax - 1]	       690	wrapper.c	FUNCTION_57	IF_1
0x4001a28	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       690	wrapper.c	FUNCTION_57	IF_1
0x4001a2c	          0x4801d0	                            add rax, rdx	       690	wrapper.c	FUNCTION_57	IF_1
0x4001a2f	          0xc60000	                       mov byte [rax], 0	       690	wrapper.c	FUNCTION_57	IF_1
0x4001a32	          0x8b45fc	                mov eax, dword [rbp - 4]	       691	wrapper.c	FUNCTION_57
0x4001a35	              0xc9	                                   leave	       692	wrapper.c	FUNCTION_57
0x4001a36	              0xc3	                                     ret	       692	wrapper.c	FUNCTION_57
xfdopen	CALL,2:IF,1:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	19
0x4000d7c	              0x55	                                push rbp	       402	wrapper.c	FUNCTION_35
0x4000d7d	          0x4889e5	                            mov rbp, rsp	       402	wrapper.c	FUNCTION_35
0x4000d80	        0x4883ec20	                           sub rsp, 0x20	       402	wrapper.c	FUNCTION_35
0x4000d84	          0x897dec	             mov dword [rbp - 0x14], edi	       402	wrapper.c	FUNCTION_35
0x4000d87	        0x488975e0	             mov qword [rbp - 0x20], rsi	       402	wrapper.c	FUNCTION_35
0x4000d8b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       403	wrapper.c	FUNCTION_35	CALL_1
0x4000d8f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       403	wrapper.c	FUNCTION_35	CALL_1
0x4000d92	          0x4889d6	                            mov rsi, rdx	       403	wrapper.c	FUNCTION_35	CALL_1
0x4000d95	            0x89c7	                            mov edi, eax	       403	wrapper.c	FUNCTION_35	CALL_1
0x4000d97	      0xe800000000	                          call 0x4000d9c	       403	wrapper.c	FUNCTION_35	CALL_1
0x4000d9c	        0x488945f8	                mov qword [rbp - 8], rax	       403	wrapper.c	FUNCTION_35	CALL_1
0x4000da0	      0x48837df800	                  cmp qword [rbp - 8], 0	       404	wrapper.c	FUNCTION_35	IF_1
0x4000da5	            0x750f	                           jne 0x4000db6	       404	wrapper.c	FUNCTION_35	IF_1
0x4000da7	      0xbf00000000	                              mov edi, 0	       405	wrapper.c	FUNCTION_35	CALL_2
0x4000dac	      0xb800000000	                              mov eax, 0	       405	wrapper.c	FUNCTION_35	CALL_2
0x4000db1	      0xe800000000	                          call 0x4000db6	       405	wrapper.c	FUNCTION_35	CALL_2
0x4000db6	        0x488b45f8	                mov rax, qword [rbp - 8]	       406	wrapper.c	FUNCTION_35
0x4000dba	              0xc9	                                   leave	       407	wrapper.c	FUNCTION_35
0x4000dbb	              0xc3	                                     ret	       407	wrapper.c	FUNCTION_35
fopen_or_warn	CALL,1:IF,1:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	21
0x4000e96	              0x55	                                push rbp	       438	wrapper.c	FUNCTION_39
0x4000e97	          0x4889e5	                            mov rbp, rsp	       438	wrapper.c	FUNCTION_39
0x4000e9a	        0x4883ec20	                           sub rsp, 0x20	       438	wrapper.c	FUNCTION_39
0x4000e9e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       438	wrapper.c	FUNCTION_39
0x4000ea2	        0x488975e0	             mov qword [rbp - 0x20], rsi	       438	wrapper.c	FUNCTION_39
0x4000ea6	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       439	wrapper.c	FUNCTION_39
0x4000eaa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       439	wrapper.c	FUNCTION_39
0x4000eae	          0x4889d6	                            mov rsi, rdx	       439	wrapper.c	FUNCTION_39
0x4000eb1	          0x4889c7	                            mov rdi, rax	       439	wrapper.c	FUNCTION_39
0x4000eb4	      0xe800000000	                          call 0x4000eb9	       439	wrapper.c	FUNCTION_39
0x4000eb9	        0x488945f8	                mov qword [rbp - 8], rax	       439	wrapper.c	FUNCTION_39
0x4000ebd	      0x48837df800	                  cmp qword [rbp - 8], 0	       441	wrapper.c	FUNCTION_39	IF_1
0x4000ec2	            0x7406	                            je 0x4000eca	       441	wrapper.c	FUNCTION_39	IF_1
0x4000ec4	        0x488b45f8	                mov rax, qword [rbp - 8]	       442	wrapper.c	FUNCTION_39	IF_1
0x4000ec8	            0xeb11	                           jmp 0x4000edb	       442	wrapper.c	FUNCTION_39	IF_1
0x4000eca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       444	wrapper.c	FUNCTION_39	CALL_1
0x4000ece	          0x4889c7	                            mov rdi, rax	       444	wrapper.c	FUNCTION_39	CALL_1
0x4000ed1	      0xe800000000	                          call 0x4000ed6	       444	wrapper.c	FUNCTION_39	CALL_1
0x4000ed6	      0xb800000000	                              mov eax, 0	       445	wrapper.c	FUNCTION_39
0x4000edb	              0xc9	                                   leave	       446	wrapper.c	FUNCTION_39
0x4000edc	              0xc3	                                     ret	       446	wrapper.c	FUNCTION_39
git_mkstemps_mode	CALL,5:IF,4:SWITCH,0:ELSE,0:FOR,1:WHILE,0:functions,0:DO,0	195
0x4000fe3	              0x55	                                push rbp	       476	wrapper.c	FUNCTION_41
0x4000fe4	          0x4889e5	                            mov rbp, rsp	       476	wrapper.c	FUNCTION_41
0x4000fe7	              0x53	                                push rbx	       476	wrapper.c	FUNCTION_41
0x4000fe8	        0x4883ec68	                           sub rsp, 0x68	       476	wrapper.c	FUNCTION_41
0x4000fec	        0x48897d98	             mov qword [rbp - 0x68], rdi	       476	wrapper.c	FUNCTION_41
0x4000ff0	          0x897594	             mov dword [rbp - 0x6c], esi	       476	wrapper.c	FUNCTION_41
0x4000ff3	          0x895590	             mov dword [rbp - 0x70], edx	       476	wrapper.c	FUNCTION_41
0x4000ff6	    0x64488b042528	                mov rax, qword fs:[0x28]	       476	wrapper.c	FUNCTION_41
0x4000fff	        0x488945e8	             mov qword [rbp - 0x18], rax	       476	wrapper.c	FUNCTION_41
0x4001003	            0x31c0	                            xor eax, eax	       476	wrapper.c	FUNCTION_41
0x4001005	        0x488b4598	             mov rax, qword [rbp - 0x68]	       488	wrapper.c	FUNCTION_41	CALL_1
0x4001009	          0x4889c7	                            mov rdi, rax	       488	wrapper.c	FUNCTION_41	CALL_1
0x400100c	      0xe800000000	                          call 0x4001011	       488	wrapper.c	FUNCTION_41	CALL_1
0x4001011	        0x488945b8	             mov qword [rbp - 0x48], rax	       488	wrapper.c	FUNCTION_41	CALL_1
0x4001015	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       490	wrapper.c	FUNCTION_41	IF_1
0x4001018	          0x83c006	                              add eax, 6	       490	wrapper.c	FUNCTION_41	IF_1
0x400101b	            0x4898	                                    cdqe	       490	wrapper.c	FUNCTION_41	IF_1
0x400101d	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	       490	wrapper.c	FUNCTION_41	IF_1
0x4001021	            0x7615	                           jbe 0x4001038	       490	wrapper.c	FUNCTION_41	IF_1
0x4001023	      0xe800000000	                          call 0x4001028	       491	wrapper.c	FUNCTION_41	IF_1
0x4001028	    0xc70016000000	                   mov dword [rax], 0x16	       491	wrapper.c	FUNCTION_41	IF_1
0x400102e	      0xb8ffffffff	                     mov eax, 0xffffffff	       492	wrapper.c	FUNCTION_41	IF_1
0x4001033	      0xe98e020000	                           jmp 0x40012c6	       492	wrapper.c	FUNCTION_41	IF_1
0x4001038	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       495	wrapper.c	FUNCTION_41	IF_2	CALL_2
0x400103b	            0x4898	                                    cdqe	       495	wrapper.c	FUNCTION_41	IF_2	CALL_2
0x400103d	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       495	wrapper.c	FUNCTION_41	IF_2	CALL_2
0x4001041	          0x4829c2	                            sub rdx, rax	       495	wrapper.c	FUNCTION_41	IF_2	CALL_2
0x4001044	          0x4889d0	                            mov rax, rdx	       495	wrapper.c	FUNCTION_41	IF_2	CALL_2
0x4001047	        0x488d50fa	                      lea rdx, [rax - 6]	       495	wrapper.c	FUNCTION_41	IF_2	CALL_2
0x400104b	        0x488b4598	             mov rax, qword [rbp - 0x68]	       495	wrapper.c	FUNCTION_41	IF_2	CALL_2
0x400104f	          0x4801d0	                            add rax, rdx	       495	wrapper.c	FUNCTION_41	IF_2	CALL_2
0x4001052	      0xba06000000	                              mov edx, 6	       495	wrapper.c	FUNCTION_41	IF_2	CALL_2
0x4001057	      0xbe00000000	                              mov esi, 0	       495	wrapper.c	FUNCTION_41	IF_2	CALL_2
0x400105c	          0x4889c7	                            mov rdi, rax	       495	wrapper.c	FUNCTION_41	IF_2	CALL_2
0x400105f	      0xe800000000	                          call 0x4001064	       495	wrapper.c	FUNCTION_41	IF_2	CALL_2
0x4001064	            0x85c0	                           test eax, eax	       495	wrapper.c	FUNCTION_41	IF_2	CALL_2
0x4001066	            0x7415	                            je 0x400107d	       495	wrapper.c	FUNCTION_41	IF_2	CALL_2
0x4001068	      0xe800000000	                          call 0x400106d	       496	wrapper.c	FUNCTION_41	IF_2
0x400106d	    0xc70016000000	                   mov dword [rax], 0x16	       496	wrapper.c	FUNCTION_41	IF_2
0x4001073	      0xb8ffffffff	                     mov eax, 0xffffffff	       497	wrapper.c	FUNCTION_41	IF_2
0x4001078	      0xe949020000	                           jmp 0x40012c6	       497	wrapper.c	FUNCTION_41	IF_2
0x400107d	        0x488d45d0	                   lea rax, [rbp - 0x30]	       504	wrapper.c	FUNCTION_41	CALL_3
0x4001081	      0xbe00000000	                              mov esi, 0	       504	wrapper.c	FUNCTION_41	CALL_3
0x4001086	          0x4889c7	                            mov rdi, rax	       504	wrapper.c	FUNCTION_41	CALL_3
0x4001089	      0xe800000000	                          call 0x400108e	       504	wrapper.c	FUNCTION_41	CALL_3
0x400108e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       505	wrapper.c	FUNCTION_41	CALL_4
0x4001092	        0x48c1e010	                           shl rax, 0x10	       505	wrapper.c	FUNCTION_41	CALL_4
0x4001096	          0x4889c2	                            mov rdx, rax	       505	wrapper.c	FUNCTION_41	CALL_4
0x4001099	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       505	wrapper.c	FUNCTION_41	CALL_4
0x400109d	          0x4889d3	                            mov rbx, rdx	       505	wrapper.c	FUNCTION_41	CALL_4
0x40010a0	          0x4831c3	                            xor rbx, rax	       505	wrapper.c	FUNCTION_41	CALL_4
0x40010a3	      0xe800000000	                          call 0x40010a8	       505	wrapper.c	FUNCTION_41	CALL_4
0x40010a8	            0x4898	                                    cdqe	       505	wrapper.c	FUNCTION_41	CALL_4
0x40010aa	          0x4831d8	                            xor rax, rbx	       505	wrapper.c	FUNCTION_41	CALL_4
0x40010ad	        0x488945b0	             mov qword [rbp - 0x50], rax	       505	wrapper.c	FUNCTION_41	CALL_4
0x40010b1	          0x8b4594	             mov eax, dword [rbp - 0x6c]	       506	wrapper.c	FUNCTION_41
0x40010b4	            0x4898	                                    cdqe	       506	wrapper.c	FUNCTION_41
0x40010b6	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       506	wrapper.c	FUNCTION_41
0x40010ba	          0x4829c2	                            sub rdx, rax	       506	wrapper.c	FUNCTION_41
0x40010bd	          0x4889d0	                            mov rax, rdx	       506	wrapper.c	FUNCTION_41
0x40010c0	        0x488d50fa	                      lea rdx, [rax - 6]	       506	wrapper.c	FUNCTION_41
0x40010c4	        0x488b4598	             mov rax, qword [rbp - 0x68]	       506	wrapper.c	FUNCTION_41
0x40010c8	          0x4801d0	                            add rax, rdx	       506	wrapper.c	FUNCTION_41
0x40010cb	        0x488945c0	             mov qword [rbp - 0x40], rax	       506	wrapper.c	FUNCTION_41
0x40010cf	    0xc745a8000000	               mov dword [rbp - 0x58], 0	       507	wrapper.c	FUNCTION_41	FOR_1
0x40010d6	      0xe9cf010000	                           jmp 0x40012aa	       507	wrapper.c	FUNCTION_41	FOR_1
0x40010db	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       508	wrapper.c	FUNCTION_41	FOR_1
0x40010df	        0x488945c8	             mov qword [rbp - 0x38], rax	       508	wrapper.c	FUNCTION_41	FOR_1
0x40010e3	    0x8b0500000000	            mov eax, dword [0x040010e9] 	       510	wrapper.c	FUNCTION_41	FOR_1
0x40010e9	          0x4863c8	                         movsxd rcx, eax	       510	wrapper.c	FUNCTION_41	FOR_1
0x40010ec	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       510	wrapper.c	FUNCTION_41	FOR_1
0x40010f0	      0xba00000000	                              mov edx, 0	       510	wrapper.c	FUNCTION_41	FOR_1
0x40010f5	          0x48f7f1	                                 div rcx	       510	wrapper.c	FUNCTION_41	FOR_1
0x40010f8	          0x4889d0	                            mov rax, rdx	       510	wrapper.c	FUNCTION_41	FOR_1
0x40010fb	     0xfb690000000	                   movzx edx, byte [rax]	       510	wrapper.c	FUNCTION_41	FOR_1
0x4001102	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       510	wrapper.c	FUNCTION_41	FOR_1
0x4001106	            0x8810	                      mov byte [rax], dl	       510	wrapper.c	FUNCTION_41	FOR_1
0x4001108	    0x8b0500000000	            mov eax, dword [0x0400110e] 	       510	wrapper.c	FUNCTION_41	FOR_1
0x400110e	          0x4863d8	                         movsxd rbx, eax	       510	wrapper.c	FUNCTION_41	FOR_1
0x4001111	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       510	wrapper.c	FUNCTION_41	FOR_1
0x4001115	      0xba00000000	                              mov edx, 0	       510	wrapper.c	FUNCTION_41	FOR_1
0x400111a	          0x48f7f3	                                 div rbx	       510	wrapper.c	FUNCTION_41	FOR_1
0x400111d	        0x488945c8	             mov qword [rbp - 0x38], rax	       510	wrapper.c	FUNCTION_41	FOR_1
0x4001121	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       511	wrapper.c	FUNCTION_41	FOR_1
0x4001125	        0x488d4801	                      lea rcx, [rax + 1]	       511	wrapper.c	FUNCTION_41	FOR_1
0x4001129	    0x8b0500000000	            mov eax, dword [0x0400112f] 	       511	wrapper.c	FUNCTION_41	FOR_1
0x400112f	          0x4863f0	                         movsxd rsi, eax	       511	wrapper.c	FUNCTION_41	FOR_1
0x4001132	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       511	wrapper.c	FUNCTION_41	FOR_1
0x4001136	      0xba00000000	                              mov edx, 0	       511	wrapper.c	FUNCTION_41	FOR_1
0x400113b	          0x48f7f6	                                 div rsi	       511	wrapper.c	FUNCTION_41	FOR_1
0x400113e	          0x4889d0	                            mov rax, rdx	       511	wrapper.c	FUNCTION_41	FOR_1
0x4001141	     0xfb680000000	                   movzx eax, byte [rax]	       511	wrapper.c	FUNCTION_41	FOR_1
0x4001148	            0x8801	                      mov byte [rcx], al	       511	wrapper.c	FUNCTION_41	FOR_1
0x400114a	    0x8b0500000000	            mov eax, dword [0x04001150] 	       511	wrapper.c	FUNCTION_41	FOR_1
0x4001150	          0x4863f8	                         movsxd rdi, eax	       511	wrapper.c	FUNCTION_41	FOR_1
0x4001153	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       511	wrapper.c	FUNCTION_41	FOR_1
0x4001157	      0xba00000000	                              mov edx, 0	       511	wrapper.c	FUNCTION_41	FOR_1
0x400115c	          0x48f7f7	                                 div rdi	       511	wrapper.c	FUNCTION_41	FOR_1
0x400115f	        0x488945c8	             mov qword [rbp - 0x38], rax	       511	wrapper.c	FUNCTION_41	FOR_1
0x4001163	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       512	wrapper.c	FUNCTION_41	FOR_1
0x4001167	        0x488d4802	                      lea rcx, [rax + 2]	       512	wrapper.c	FUNCTION_41	FOR_1
0x400116b	    0x8b0500000000	            mov eax, dword [0x04001171] 	       512	wrapper.c	FUNCTION_41	FOR_1
0x4001171	          0x4863f0	                         movsxd rsi, eax	       512	wrapper.c	FUNCTION_41	FOR_1
0x4001174	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       512	wrapper.c	FUNCTION_41	FOR_1
0x4001178	      0xba00000000	                              mov edx, 0	       512	wrapper.c	FUNCTION_41	FOR_1
0x400117d	          0x48f7f6	                                 div rsi	       512	wrapper.c	FUNCTION_41	FOR_1
0x4001180	          0x4889d0	                            mov rax, rdx	       512	wrapper.c	FUNCTION_41	FOR_1
0x4001183	     0xfb680000000	                   movzx eax, byte [rax]	       512	wrapper.c	FUNCTION_41	FOR_1
0x400118a	            0x8801	                      mov byte [rcx], al	       512	wrapper.c	FUNCTION_41	FOR_1
0x400118c	    0x8b0500000000	            mov eax, dword [0x04001192] 	       512	wrapper.c	FUNCTION_41	FOR_1
0x4001192	          0x4863d8	                         movsxd rbx, eax	       512	wrapper.c	FUNCTION_41	FOR_1
0x4001195	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       512	wrapper.c	FUNCTION_41	FOR_1
0x4001199	      0xba00000000	                              mov edx, 0	       512	wrapper.c	FUNCTION_41	FOR_1
0x400119e	          0x48f7f3	                                 div rbx	       512	wrapper.c	FUNCTION_41	FOR_1
0x40011a1	        0x488945c8	             mov qword [rbp - 0x38], rax	       512	wrapper.c	FUNCTION_41	FOR_1
0x40011a5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       513	wrapper.c	FUNCTION_41	FOR_1
0x40011a9	        0x488d4803	                      lea rcx, [rax + 3]	       513	wrapper.c	FUNCTION_41	FOR_1
0x40011ad	    0x8b0500000000	            mov eax, dword [0x040011b3] 	       513	wrapper.c	FUNCTION_41	FOR_1
0x40011b3	          0x4863f0	                         movsxd rsi, eax	       513	wrapper.c	FUNCTION_41	FOR_1
0x40011b6	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       513	wrapper.c	FUNCTION_41	FOR_1
0x40011ba	      0xba00000000	                              mov edx, 0	       513	wrapper.c	FUNCTION_41	FOR_1
0x40011bf	          0x48f7f6	                                 div rsi	       513	wrapper.c	FUNCTION_41	FOR_1
0x40011c2	          0x4889d0	                            mov rax, rdx	       513	wrapper.c	FUNCTION_41	FOR_1
0x40011c5	     0xfb680000000	                   movzx eax, byte [rax]	       513	wrapper.c	FUNCTION_41	FOR_1
0x40011cc	            0x8801	                      mov byte [rcx], al	       513	wrapper.c	FUNCTION_41	FOR_1
0x40011ce	    0x8b0500000000	            mov eax, dword [0x040011d4] 	       513	wrapper.c	FUNCTION_41	FOR_1
0x40011d4	          0x4863f8	                         movsxd rdi, eax	       513	wrapper.c	FUNCTION_41	FOR_1
0x40011d7	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       513	wrapper.c	FUNCTION_41	FOR_1
0x40011db	      0xba00000000	                              mov edx, 0	       513	wrapper.c	FUNCTION_41	FOR_1
0x40011e0	          0x48f7f7	                                 div rdi	       513	wrapper.c	FUNCTION_41	FOR_1
0x40011e3	        0x488945c8	             mov qword [rbp - 0x38], rax	       513	wrapper.c	FUNCTION_41	FOR_1
0x40011e7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       514	wrapper.c	FUNCTION_41	FOR_1
0x40011eb	        0x488d4804	                      lea rcx, [rax + 4]	       514	wrapper.c	FUNCTION_41	FOR_1
0x40011ef	    0x8b0500000000	            mov eax, dword [0x040011f5] 	       514	wrapper.c	FUNCTION_41	FOR_1
0x40011f5	          0x4863f0	                         movsxd rsi, eax	       514	wrapper.c	FUNCTION_41	FOR_1
0x40011f8	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       514	wrapper.c	FUNCTION_41	FOR_1
0x40011fc	      0xba00000000	                              mov edx, 0	       514	wrapper.c	FUNCTION_41	FOR_1
0x4001201	          0x48f7f6	                                 div rsi	       514	wrapper.c	FUNCTION_41	FOR_1
0x4001204	          0x4889d0	                            mov rax, rdx	       514	wrapper.c	FUNCTION_41	FOR_1
0x4001207	     0xfb680000000	                   movzx eax, byte [rax]	       514	wrapper.c	FUNCTION_41	FOR_1
0x400120e	            0x8801	                      mov byte [rcx], al	       514	wrapper.c	FUNCTION_41	FOR_1
0x4001210	    0x8b0500000000	            mov eax, dword [0x04001216] 	       514	wrapper.c	FUNCTION_41	FOR_1
0x4001216	          0x4863d8	                         movsxd rbx, eax	       514	wrapper.c	FUNCTION_41	FOR_1
0x4001219	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       514	wrapper.c	FUNCTION_41	FOR_1
0x400121d	      0xba00000000	                              mov edx, 0	       514	wrapper.c	FUNCTION_41	FOR_1
0x4001222	          0x48f7f3	                                 div rbx	       514	wrapper.c	FUNCTION_41	FOR_1
0x4001225	        0x488945c8	             mov qword [rbp - 0x38], rax	       514	wrapper.c	FUNCTION_41	FOR_1
0x4001229	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       515	wrapper.c	FUNCTION_41	FOR_1
0x400122d	        0x488d4805	                      lea rcx, [rax + 5]	       515	wrapper.c	FUNCTION_41	FOR_1
0x4001231	    0x8b0500000000	            mov eax, dword [0x04001237] 	       515	wrapper.c	FUNCTION_41	FOR_1
0x4001237	          0x4863f0	                         movsxd rsi, eax	       515	wrapper.c	FUNCTION_41	FOR_1
0x400123a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       515	wrapper.c	FUNCTION_41	FOR_1
0x400123e	      0xba00000000	                              mov edx, 0	       515	wrapper.c	FUNCTION_41	FOR_1
0x4001243	          0x48f7f6	                                 div rsi	       515	wrapper.c	FUNCTION_41	FOR_1
0x4001246	          0x4889d0	                            mov rax, rdx	       515	wrapper.c	FUNCTION_41	FOR_1
0x4001249	     0xfb680000000	                   movzx eax, byte [rax]	       515	wrapper.c	FUNCTION_41	FOR_1
0x4001250	            0x8801	                      mov byte [rcx], al	       515	wrapper.c	FUNCTION_41	FOR_1
0x4001252	    0x8b0500000000	            mov eax, dword [0x04001258] 	       515	wrapper.c	FUNCTION_41	FOR_1
0x4001258	          0x4863f8	                         movsxd rdi, eax	       515	wrapper.c	FUNCTION_41	FOR_1
0x400125b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       515	wrapper.c	FUNCTION_41	FOR_1
0x400125f	      0xba00000000	                              mov edx, 0	       515	wrapper.c	FUNCTION_41	FOR_1
0x4001264	          0x48f7f7	                                 div rdi	       515	wrapper.c	FUNCTION_41	FOR_1
0x4001267	        0x488945c8	             mov qword [rbp - 0x38], rax	       515	wrapper.c	FUNCTION_41	FOR_1
0x400126b	          0x8b5590	             mov edx, dword [rbp - 0x70]	       517	wrapper.c	FUNCTION_41	FOR_1	CALL_5
0x400126e	        0x488b4598	             mov rax, qword [rbp - 0x68]	       517	wrapper.c	FUNCTION_41	FOR_1	CALL_5
0x4001272	      0xbec2000000	                           mov esi, 0xc2	       517	wrapper.c	FUNCTION_41	FOR_1	CALL_5
0x4001277	          0x4889c7	                            mov rdi, rax	       517	wrapper.c	FUNCTION_41	FOR_1	CALL_5
0x400127a	      0xb800000000	                              mov eax, 0	       517	wrapper.c	FUNCTION_41	FOR_1	CALL_5
0x400127f	      0xe800000000	                          call 0x4001284	       517	wrapper.c	FUNCTION_41	FOR_1	CALL_5
0x4001284	          0x8945ac	             mov dword [rbp - 0x54], eax	       517	wrapper.c	FUNCTION_41	FOR_1	CALL_5
0x4001287	        0x837dac00	               cmp dword [rbp - 0x54], 0	       518	wrapper.c	FUNCTION_41	FOR_1	IF_3
0x400128b	            0x7805	                            js 0x4001292	       518	wrapper.c	FUNCTION_41	FOR_1	IF_3
0x400128d	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       519	wrapper.c	FUNCTION_41	FOR_1	IF_3
0x4001290	            0xeb34	                           jmp 0x40012c6	       519	wrapper.c	FUNCTION_41	FOR_1	IF_3
0x4001292	      0xe800000000	                          call 0x4001297	       524	wrapper.c	FUNCTION_41	FOR_1	IF_4
0x4001297	            0x8b00	                    mov eax, dword [rax]	       524	wrapper.c	FUNCTION_41	FOR_1	IF_4
0x4001299	          0x83f811	                           cmp eax, 0x11	       524	wrapper.c	FUNCTION_41	FOR_1	IF_4
0x400129c	            0x751b	                           jne 0x40012b9	       524	wrapper.c	FUNCTION_41	FOR_1	IF_4
0x400129e	    0x488145b0611e	          add qword [rbp - 0x50], 0x1e61	       531	wrapper.c	FUNCTION_41	FOR_1
0x40012a6	        0x8345a801	               add dword [rbp - 0x58], 1	       507	wrapper.c	FUNCTION_41	FOR_1
0x40012aa	    0x817da8ff3f00	         cmp dword [rbp - 0x58], 0x3fff 	       507	wrapper.c	FUNCTION_41	FOR_1
0x40012b1	     0xf8e24feffff	                           jle 0x40010db	       507	wrapper.c	FUNCTION_41	FOR_1
0x40012b7	            0xeb01	                           jmp 0x40012ba	       507	wrapper.c	FUNCTION_41	FOR_1
0x40012b9	              0x90	                                     nop	       525	wrapper.c	FUNCTION_41	FOR_1	IF_4
0x40012ba	        0x488b4598	             mov rax, qword [rbp - 0x68]	       534	wrapper.c	FUNCTION_41
0x40012be	          0xc60000	                       mov byte [rax], 0	       534	wrapper.c	FUNCTION_41
0x40012c1	      0xb8ffffffff	                     mov eax, 0xffffffff	       535	wrapper.c	FUNCTION_41
0x40012c6	        0x488b7de8	             mov rdi, qword [rbp - 0x18]	       536	wrapper.c	FUNCTION_41
0x40012ca	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       536	wrapper.c	FUNCTION_41
0x40012d3	            0x7405	                            je 0x40012da	       536	wrapper.c	FUNCTION_41
0x40012d5	      0xe800000000	                          call 0x40012da	       536	wrapper.c	FUNCTION_41
0x40012da	        0x4883c468	                           add rsp, 0x68	       536	wrapper.c	FUNCTION_41
0x40012de	              0x5b	                                 pop rbx	       536	wrapper.c	FUNCTION_41
0x40012df	              0x5d	                                 pop rbp	       536	wrapper.c	FUNCTION_41
0x40012e0	              0xc3	                                     ret	       536	wrapper.c	FUNCTION_41
xwrite	CALL,2:IF,4:SWITCH,0:ELSE,0:FOR,0:WHILE,1:functions,0:DO,0	38
0x40009f2	              0x55	                                push rbp	       277	wrapper.c	FUNCTION_28
0x40009f3	          0x4889e5	                            mov rbp, rsp	       277	wrapper.c	FUNCTION_28
0x40009f6	        0x4883ec30	                           sub rsp, 0x30	       277	wrapper.c	FUNCTION_28
0x40009fa	          0x897dec	             mov dword [rbp - 0x14], edi	       277	wrapper.c	FUNCTION_28
0x40009fd	        0x488975e0	             mov qword [rbp - 0x20], rsi	       277	wrapper.c	FUNCTION_28
0x4000a01	        0x488955d8	             mov qword [rbp - 0x28], rdx	       277	wrapper.c	FUNCTION_28
0x4000a05	    0x48817dd80000	       cmp qword [rbp - 0x28], 0x800000 	       279	wrapper.c	FUNCTION_28	IF_1
0x4000a0d	            0x7608	                           jbe 0x4000a17	       279	wrapper.c	FUNCTION_28	IF_1
0x4000a0f	    0x48c745d80000	        mov qword [rbp - 0x28], 0x800000	       280	wrapper.c	FUNCTION_28	IF_1
0x4000a17	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       282	wrapper.c	FUNCTION_28	WHILE_1	CALL_1
0x4000a1b	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       282	wrapper.c	FUNCTION_28	WHILE_1	CALL_1
0x4000a1f	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       282	wrapper.c	FUNCTION_28	WHILE_1	CALL_1
0x4000a22	          0x4889ce	                            mov rsi, rcx	       282	wrapper.c	FUNCTION_28	WHILE_1	CALL_1
0x4000a25	            0x89c7	                            mov edi, eax	       282	wrapper.c	FUNCTION_28	WHILE_1	CALL_1
0x4000a27	      0xe800000000	                          call 0x4000a2c	       282	wrapper.c	FUNCTION_28	WHILE_1	CALL_1
0x4000a2c	        0x488945f8	                mov qword [rbp - 8], rax	       282	wrapper.c	FUNCTION_28	WHILE_1	CALL_1
0x4000a30	      0x48837df800	                  cmp qword [rbp - 8], 0	       283	wrapper.c	FUNCTION_28	WHILE_1	IF_2
0x4000a35	            0x7926	                           jns 0x4000a5d	       283	wrapper.c	FUNCTION_28	WHILE_1	IF_2
0x4000a37	      0xe800000000	                          call 0x4000a3c	       284	wrapper.c	FUNCTION_28	WHILE_1	IF_2	IF_3
0x4000a3c	            0x8b00	                    mov eax, dword [rax]	       284	wrapper.c	FUNCTION_28	WHILE_1	IF_2	IF_3
0x4000a3e	          0x83f804	                              cmp eax, 4	       284	wrapper.c	FUNCTION_28	WHILE_1	IF_2	IF_3
0x4000a41	            0x7420	                            je 0x4000a63	       284	wrapper.c	FUNCTION_28	WHILE_1	IF_2	IF_3
0x4000a43	      0xe800000000	                          call 0x4000a48	       286	wrapper.c	FUNCTION_28	WHILE_1	IF_2	IF_4	CALL_2
0x4000a48	            0x8b10	                    mov edx, dword [rax]	       286	wrapper.c	FUNCTION_28	WHILE_1	IF_2	IF_4	CALL_2
0x4000a4a	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       286	wrapper.c	FUNCTION_28	WHILE_1	IF_2	IF_4	CALL_2
0x4000a4d	      0xbe04000000	                              mov esi, 4	       286	wrapper.c	FUNCTION_28	WHILE_1	IF_2	IF_4	CALL_2
0x4000a52	            0x89c7	                            mov edi, eax	       286	wrapper.c	FUNCTION_28	WHILE_1	IF_2	IF_4	CALL_2
0x4000a54	      0xe8abfeffff	                call sym.handle_nonblock	       286	wrapper.c	FUNCTION_28	WHILE_1	IF_2	IF_4	CALL_2
0x4000a59	            0x85c0	                           test eax, eax	       286	wrapper.c	FUNCTION_28	WHILE_1	IF_2	IF_4	CALL_2
0x4000a5b	            0x7509	                           jne 0x4000a66	       286	wrapper.c	FUNCTION_28	WHILE_1	IF_2	IF_4	CALL_2
0x4000a5d	        0x488b45f8	                mov rax, qword [rbp - 8]	       290	wrapper.c	FUNCTION_28	WHILE_1
0x4000a61	            0xeb06	                           jmp 0x4000a69	       290	wrapper.c	FUNCTION_28	WHILE_1
0x4000a63	              0x90	                                     nop	       285	wrapper.c	FUNCTION_28	WHILE_1	IF_2	IF_3
0x4000a64	            0xebb1	                           jmp 0x4000a17	       285	wrapper.c	FUNCTION_28	WHILE_1	IF_2	IF_3
0x4000a66	              0x90	                                     nop	       287	wrapper.c	FUNCTION_28	WHILE_1	IF_2	IF_4
0x4000a67	            0xebae	                           jmp 0x4000a17	       291	wrapper.c	FUNCTION_28	WHILE_1
0x4000a69	              0xc9	                                   leave	       292	wrapper.c	FUNCTION_28
0x4000a6a	              0xc3	                                     ret	       292	wrapper.c	FUNCTION_28
strbuf_avail	CALL,0:IF,0:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	18
0x400006c	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_2
0x400006d	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_2
0x4000070	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_2
0x4000074	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x4000078	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_2
0x400007b	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_2
0x400007e	            0x741b	                            je 0x400009b	       141	strbuf.h	FUNCTION_2
0x4000080	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x4000084	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_2
0x4000087	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x400008b	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_2
0x400008f	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_2
0x4000092	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_2
0x4000095	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_2
0x4000099	            0xeb05	                           jmp 0x40000a0	       141	strbuf.h	FUNCTION_2
0x400009b	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_2
0x40000a0	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_2
0x40000a1	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_2
git_mkstemp_mode	CALL,1:IF,0:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	12
0x40012e1	              0x55	                                push rbp	       539	wrapper.c	FUNCTION_42
0x40012e2	          0x4889e5	                            mov rbp, rsp	       539	wrapper.c	FUNCTION_42
0x40012e5	        0x4883ec10	                           sub rsp, 0x10	       539	wrapper.c	FUNCTION_42
0x40012e9	        0x48897df8	                mov qword [rbp - 8], rdi	       539	wrapper.c	FUNCTION_42
0x40012ed	          0x8975f4	              mov dword [rbp - 0xc], esi	       539	wrapper.c	FUNCTION_42
0x40012f0	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       541	wrapper.c	FUNCTION_42	CALL_1
0x40012f3	        0x488b45f8	                mov rax, qword [rbp - 8]	       541	wrapper.c	FUNCTION_42	CALL_1
0x40012f7	      0xbe00000000	                              mov esi, 0	       541	wrapper.c	FUNCTION_42	CALL_1
0x40012fc	          0x4889c7	                            mov rdi, rax	       541	wrapper.c	FUNCTION_42	CALL_1
0x40012ff	      0xe800000000	                          call 0x4001304	       541	wrapper.c	FUNCTION_42	CALL_1
0x4001304	              0xc9	                                   leave	       542	wrapper.c	FUNCTION_42
0x4001305	              0xc3	                                     ret	       542	wrapper.c	FUNCTION_42
do_xmallocz	CALL,2:IF,3:SWITCH,0:ELSE,1:FOR,0:WHILE,0:functions,0:DO,0	34
0x4000410	              0x55	                                push rbp	        91	wrapper.c	FUNCTION_18
0x4000411	          0x4889e5	                            mov rbp, rsp	        91	wrapper.c	FUNCTION_18
0x4000414	        0x4883ec20	                           sub rsp, 0x20	        91	wrapper.c	FUNCTION_18
0x4000418	        0x48897de8	             mov qword [rbp - 0x18], rdi	        91	wrapper.c	FUNCTION_18
0x400041c	          0x8975e4	             mov dword [rbp - 0x1c], esi	        91	wrapper.c	FUNCTION_18
0x400041f	      0x48837de8ff	cmp qword [rbp - 0x18], 0xffffffffffffffff	        93	wrapper.c	FUNCTION_18	IF_1
0x4000424	            0x7530	                           jne 0x4000456	        93	wrapper.c	FUNCTION_18	IF_1
0x4000426	        0x837de400	               cmp dword [rbp - 0x1c], 0	        94	wrapper.c	FUNCTION_18	IF_1	IF_2
0x400042a	            0x741b	                            je 0x4000447	        94	wrapper.c	FUNCTION_18	IF_1	IF_2
0x400042c	      0xbf00000000	                              mov edi, 0	        95	wrapper.c	FUNCTION_18	IF_1	IF_2
0x4000431	      0xb800000000	                              mov eax, 0	        95	wrapper.c	FUNCTION_18	IF_1	IF_2
0x4000436	      0xe800000000	                          call 0x400043b	        95	wrapper.c	FUNCTION_18	IF_1	IF_2
0x400043b	      0xe800fcffff	                    call sym.const_error	        95	wrapper.c	FUNCTION_18	IF_1	IF_2
0x4000440	      0xb800000000	                              mov eax, 0	        96	wrapper.c	FUNCTION_18	IF_1	IF_2
0x4000445	            0xeb41	                           jmp 0x4000488	        96	wrapper.c	FUNCTION_18	IF_1	IF_2
0x4000447	      0xbf00000000	                              mov edi, 0	        98	wrapper.c	FUNCTION_18	IF_1	CALL_1
0x400044c	      0xb800000000	                              mov eax, 0	        98	wrapper.c	FUNCTION_18	IF_1	CALL_1
0x4000451	      0xe800000000	                          call 0x4000456	        98	wrapper.c	FUNCTION_18	IF_1	CALL_1
0x4000456	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       100	wrapper.c	FUNCTION_18	CALL_2
0x400045a	        0x488d5001	                      lea rdx, [rax + 1]	       100	wrapper.c	FUNCTION_18	CALL_2
0x400045e	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       100	wrapper.c	FUNCTION_18	CALL_2
0x4000461	            0x89c6	                            mov esi, eax	       100	wrapper.c	FUNCTION_18	CALL_2
0x4000463	          0x4889d7	                            mov rdi, rdx	       100	wrapper.c	FUNCTION_18	CALL_2
0x4000466	      0xe89afeffff	                     call sym.do_xmalloc	       100	wrapper.c	FUNCTION_18	CALL_2
0x400046b	        0x488945f8	                mov qword [rbp - 8], rax	       100	wrapper.c	FUNCTION_18	CALL_2
0x400046f	      0x48837df800	                  cmp qword [rbp - 8], 0	       101	wrapper.c	FUNCTION_18	IF_3
0x4000474	            0x740e	                            je 0x4000484	       101	wrapper.c	FUNCTION_18	IF_3
0x4000476	        0x488b55f8	                mov rdx, qword [rbp - 8]	       102	wrapper.c	FUNCTION_18	IF_3
0x400047a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       102	wrapper.c	FUNCTION_18	IF_3
0x400047e	          0x4801d0	                            add rax, rdx	       102	wrapper.c	FUNCTION_18	IF_3
0x4000481	          0xc60000	                       mov byte [rax], 0	       102	wrapper.c	FUNCTION_18	IF_3
0x4000484	        0x488b45f8	                mov rax, qword [rbp - 8]	       103	wrapper.c	FUNCTION_18
0x4000488	              0xc9	                                   leave	       104	wrapper.c	FUNCTION_18
0x4000489	              0xc3	                                     ret	       104	wrapper.c	FUNCTION_18
access_or_warn	CALL,3:IF,1:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	28
0x40015af	              0x55	                                push rbp	       613	wrapper.c	FUNCTION_50
0x40015b0	          0x4889e5	                            mov rbp, rsp	       613	wrapper.c	FUNCTION_50
0x40015b3	        0x4883ec20	                           sub rsp, 0x20	       613	wrapper.c	FUNCTION_50
0x40015b7	        0x48897de8	             mov qword [rbp - 0x18], rdi	       613	wrapper.c	FUNCTION_50
0x40015bb	          0x8975e4	             mov dword [rbp - 0x1c], esi	       613	wrapper.c	FUNCTION_50
0x40015be	          0x8955e0	             mov dword [rbp - 0x20], edx	       613	wrapper.c	FUNCTION_50
0x40015c1	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       614	wrapper.c	FUNCTION_50	CALL_1
0x40015c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       614	wrapper.c	FUNCTION_50	CALL_1
0x40015c8	            0x89d6	                            mov esi, edx	       614	wrapper.c	FUNCTION_50	CALL_1
0x40015ca	          0x4889c7	                            mov rdi, rax	       614	wrapper.c	FUNCTION_50	CALL_1
0x40015cd	      0xe800000000	                          call 0x40015d2	       614	wrapper.c	FUNCTION_50	CALL_1
0x40015d2	          0x8945fc	                mov dword [rbp - 4], eax	       614	wrapper.c	FUNCTION_50	CALL_1
0x40015d5	        0x837dfc00	                  cmp dword [rbp - 4], 0	       615	wrapper.c	FUNCTION_50	IF_1	CALL_2
0x40015d9	            0x7423	                            je 0x40015fe	       615	wrapper.c	FUNCTION_50	IF_1	CALL_2
0x40015db	      0xe800000000	                          call 0x40015e0	       615	wrapper.c	FUNCTION_50	IF_1	CALL_2
0x40015e0	            0x8b00	                    mov eax, dword [rax]	       615	wrapper.c	FUNCTION_50	IF_1	CALL_2
0x40015e2	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       615	wrapper.c	FUNCTION_50	IF_1	CALL_2
0x40015e5	            0x89d6	                            mov esi, edx	       615	wrapper.c	FUNCTION_50	IF_1	CALL_2
0x40015e7	            0x89c7	                            mov edi, eax	       615	wrapper.c	FUNCTION_50	IF_1	CALL_2
0x40015e9	      0xe887ffffff	             call sym.access_error_is_ok	       615	wrapper.c	FUNCTION_50	IF_1	CALL_2
0x40015ee	            0x85c0	                           test eax, eax	       615	wrapper.c	FUNCTION_50	IF_1	CALL_2
0x40015f0	            0x750c	                           jne 0x40015fe	       615	wrapper.c	FUNCTION_50	IF_1	CALL_2
0x40015f2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       616	wrapper.c	FUNCTION_50	CALL_3
0x40015f6	          0x4889c7	                            mov rdi, rax	       616	wrapper.c	FUNCTION_50	CALL_3
0x40015f9	      0xe82af8ffff	           call sym.warn_on_inaccessible	       616	wrapper.c	FUNCTION_50	CALL_3
0x40015fe	          0x8b45fc	                mov eax, dword [rbp - 4]	       617	wrapper.c	FUNCTION_50
0x4001601	              0xc9	                                   leave	       618	wrapper.c	FUNCTION_50
0x4001602	              0xc3	                                     ret	       618	wrapper.c	FUNCTION_50
xcalloc	CALL,8:IF,5:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	67
0x4000619	              0x55	                                push rbp	       153	wrapper.c	FUNCTION_24
0x400061a	          0x4889e5	                            mov rbp, rsp	       153	wrapper.c	FUNCTION_24
0x400061d	        0x4883ec20	                           sub rsp, 0x20	       153	wrapper.c	FUNCTION_24
0x4000621	        0x48897de8	             mov qword [rbp - 0x18], rdi	       153	wrapper.c	FUNCTION_24
0x4000625	        0x488975e0	             mov qword [rbp - 0x20], rsi	       153	wrapper.c	FUNCTION_24
0x4000629	      0x48837de800	               cmp qword [rbp - 0x18], 0	       156	wrapper.c	FUNCTION_24	IF_1
0x400062e	            0x7425	                            je 0x4000655	       156	wrapper.c	FUNCTION_24	IF_1
0x4000630	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       156	wrapper.c	FUNCTION_24	IF_1
0x4000637	      0xba00000000	                              mov edx, 0	       156	wrapper.c	FUNCTION_24	IF_1
0x400063c	        0x48f775e8	                  div qword [rbp - 0x18]	       156	wrapper.c	FUNCTION_24	IF_1
0x4000640	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       156	wrapper.c	FUNCTION_24	IF_1
0x4000644	            0x730f	                           jae 0x4000655	       156	wrapper.c	FUNCTION_24	IF_1
0x4000646	      0xbf00000000	                              mov edi, 0	       157	wrapper.c	FUNCTION_24	CALL_1
0x400064b	      0xb800000000	                              mov eax, 0	       157	wrapper.c	FUNCTION_24	CALL_1
0x4000650	      0xe800000000	                          call 0x4000655	       157	wrapper.c	FUNCTION_24	CALL_1
0x4000655	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       159	wrapper.c	FUNCTION_24	CALL_2
0x4000659	      0x480faf45e8	            imul rax, qword [rbp - 0x18]	       159	wrapper.c	FUNCTION_24	CALL_2
0x400065e	      0xbe00000000	                              mov esi, 0	       159	wrapper.c	FUNCTION_24	CALL_2
0x4000663	          0x4889c7	                            mov rdi, rax	       159	wrapper.c	FUNCTION_24	CALL_2
0x4000666	      0xe84efbffff	             call sym.memory_limit_check	       159	wrapper.c	FUNCTION_24	CALL_2
0x400066b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       160	wrapper.c	FUNCTION_24	CALL_3
0x400066f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       160	wrapper.c	FUNCTION_24	CALL_3
0x4000673	          0x4889d6	                            mov rsi, rdx	       160	wrapper.c	FUNCTION_24	CALL_3
0x4000676	          0x4889c7	                            mov rdi, rax	       160	wrapper.c	FUNCTION_24	CALL_3
0x4000679	      0xe800000000	                          call 0x400067e	       160	wrapper.c	FUNCTION_24	CALL_3
0x400067e	        0x488945f8	                mov qword [rbp - 8], rax	       160	wrapper.c	FUNCTION_24	CALL_3
0x4000682	      0x48837df800	                  cmp qword [rbp - 8], 0	       161	wrapper.c	FUNCTION_24	IF_2
0x4000687	            0x7521	                           jne 0x40006aa	       161	wrapper.c	FUNCTION_24	IF_2
0x4000689	      0x48837de800	               cmp qword [rbp - 0x18], 0	       161	wrapper.c	FUNCTION_24	IF_2
0x400068e	            0x7407	                            je 0x4000697	       161	wrapper.c	FUNCTION_24	IF_2
0x4000690	      0x48837de000	               cmp qword [rbp - 0x20], 0	       161	wrapper.c	FUNCTION_24	IF_2
0x4000695	            0x7513	                           jne 0x40006aa	       161	wrapper.c	FUNCTION_24	IF_2
0x4000697	      0xbe01000000	                              mov esi, 1	       162	wrapper.c	FUNCTION_24	CALL_4
0x400069c	      0xbf01000000	                              mov edi, 1	       162	wrapper.c	FUNCTION_24	CALL_4
0x40006a1	      0xe800000000	                          call 0x40006a6	       162	wrapper.c	FUNCTION_24	CALL_4
0x40006a6	        0x488945f8	                mov qword [rbp - 8], rax	       162	wrapper.c	FUNCTION_24	CALL_4
0x40006aa	      0x48837df800	                  cmp qword [rbp - 8], 0	       163	wrapper.c	FUNCTION_24	IF_3
0x40006af	            0x756a	                           jne 0x400071b	       163	wrapper.c	FUNCTION_24	IF_3
0x40006b1	    0x488b05000000	            mov rax, qword [0x040006b8] 	       164	wrapper.c	FUNCTION_24	IF_3	CALL_5
0x40006b8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       164	wrapper.c	FUNCTION_24	IF_3	CALL_5
0x40006bc	      0x480faf55e0	            imul rdx, qword [rbp - 0x20]	       164	wrapper.c	FUNCTION_24	IF_3	CALL_5
0x40006c1	          0x4889d7	                            mov rdi, rdx	       164	wrapper.c	FUNCTION_24	IF_3	CALL_5
0x40006c4	            0xffd0	                                call rax	       164	wrapper.c	FUNCTION_24	IF_3	CALL_5
0x40006c6	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       165	wrapper.c	FUNCTION_24	IF_3	CALL_6
0x40006ca	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       165	wrapper.c	FUNCTION_24	IF_3	CALL_6
0x40006ce	          0x4889d6	                            mov rsi, rdx	       165	wrapper.c	FUNCTION_24	IF_3	CALL_6
0x40006d1	          0x4889c7	                            mov rdi, rax	       165	wrapper.c	FUNCTION_24	IF_3	CALL_6
0x40006d4	      0xe800000000	                          call 0x40006d9	       165	wrapper.c	FUNCTION_24	IF_3	CALL_6
0x40006d9	        0x488945f8	                mov qword [rbp - 8], rax	       165	wrapper.c	FUNCTION_24	IF_3	CALL_6
0x40006dd	      0x48837df800	                  cmp qword [rbp - 8], 0	       166	wrapper.c	FUNCTION_24	IF_3	IF_4
0x40006e2	            0x7521	                           jne 0x4000705	       166	wrapper.c	FUNCTION_24	IF_3	IF_4
0x40006e4	      0x48837de800	               cmp qword [rbp - 0x18], 0	       166	wrapper.c	FUNCTION_24	IF_3	IF_4
0x40006e9	            0x7407	                            je 0x40006f2	       166	wrapper.c	FUNCTION_24	IF_3	IF_4
0x40006eb	      0x48837de000	               cmp qword [rbp - 0x20], 0	       166	wrapper.c	FUNCTION_24	IF_3	IF_4
0x40006f0	            0x7513	                           jne 0x4000705	       166	wrapper.c	FUNCTION_24	IF_3	IF_4
0x40006f2	      0xbe01000000	                              mov esi, 1	       167	wrapper.c	FUNCTION_24	IF_3	CALL_7
0x40006f7	      0xbf01000000	                              mov edi, 1	       167	wrapper.c	FUNCTION_24	IF_3	CALL_7
0x40006fc	      0xe800000000	                          call 0x4000701	       167	wrapper.c	FUNCTION_24	IF_3	CALL_7
0x4000701	        0x488945f8	                mov qword [rbp - 8], rax	       167	wrapper.c	FUNCTION_24	IF_3	CALL_7
0x4000705	      0x48837df800	                  cmp qword [rbp - 8], 0	       168	wrapper.c	FUNCTION_24	IF_3	IF_5
0x400070a	            0x750f	                           jne 0x400071b	       168	wrapper.c	FUNCTION_24	IF_3	IF_5
0x400070c	      0xbf00000000	                              mov edi, 0	       169	wrapper.c	FUNCTION_24	IF_3	CALL_8
0x4000711	      0xb800000000	                              mov eax, 0	       169	wrapper.c	FUNCTION_24	IF_3	CALL_8
0x4000716	      0xe800000000	                          call 0x400071b	       169	wrapper.c	FUNCTION_24	IF_3	CALL_8
0x400071b	        0x488b45f8	                mov rax, qword [rbp - 8]	       171	wrapper.c	FUNCTION_24
0x400071f	              0xc9	                                   leave	       172	wrapper.c	FUNCTION_24
0x4000720	              0xc3	                                     ret	       172	wrapper.c	FUNCTION_24
access_error_is_ok	CALL,1:IF,0:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	21
0x4001575	              0x55	                                push rbp	       607	wrapper.c	FUNCTION_49
0x4001576	          0x4889e5	                            mov rbp, rsp	       607	wrapper.c	FUNCTION_49
0x4001579	        0x4883ec08	                              sub rsp, 8	       607	wrapper.c	FUNCTION_49
0x400157d	          0x897dfc	                mov dword [rbp - 4], edi	       607	wrapper.c	FUNCTION_49
0x4001580	          0x8975f8	                mov dword [rbp - 8], esi	       607	wrapper.c	FUNCTION_49
0x4001583	          0x8b45fc	                mov eax, dword [rbp - 4]	       608	wrapper.c	FUNCTION_49	CALL_1
0x4001586	            0x89c7	                            mov edi, eax	       608	wrapper.c	FUNCTION_49	CALL_1
0x4001588	      0xe8beeaffff	          call sym.is_missing_file_error	       608	wrapper.c	FUNCTION_49	CALL_1
0x400158d	            0x85c0	                           test eax, eax	       608	wrapper.c	FUNCTION_49	CALL_1
0x400158f	            0x7510	                           jne 0x40015a1	       608	wrapper.c	FUNCTION_49	CALL_1
0x4001591	          0x8b45f8	                mov eax, dword [rbp - 8]	       609	wrapper.c	FUNCTION_49
0x4001594	          0x83e001	                              and eax, 1	       609	wrapper.c	FUNCTION_49
0x4001597	            0x85c0	                           test eax, eax	       608	wrapper.c	FUNCTION_49	CALL_1
0x4001599	            0x740d	                            je 0x40015a8	       608	wrapper.c	FUNCTION_49	CALL_1
0x400159b	        0x837dfc0d	                cmp dword [rbp - 4], 0xd	       609	wrapper.c	FUNCTION_49
0x400159f	            0x7507	                           jne 0x40015a8	       609	wrapper.c	FUNCTION_49
0x40015a1	      0xb801000000	                              mov eax, 1	       608	wrapper.c	FUNCTION_49	CALL_1
0x40015a6	            0xeb05	                           jmp 0x40015ad	       608	wrapper.c	FUNCTION_49	CALL_1
0x40015a8	      0xb800000000	                              mov eax, 0	       608	wrapper.c	FUNCTION_49	CALL_1
0x40015ad	              0xc9	                                   leave	       610	wrapper.c	FUNCTION_49
0x40015ae	              0xc3	                                     ret	       610	wrapper.c	FUNCTION_49
xopen	CALL,10:IF,5:SWITCH,0:ELSE,2:FOR,1:WHILE,0:functions,0:DO,0	104
0x4000721	              0x55	                                push rbp	       200	wrapper.c	FUNCTION_25
0x4000722	          0x4889e5	                            mov rbp, rsp	       200	wrapper.c	FUNCTION_25
0x4000725	    0x4881ecf00000	                           sub rsp, 0xf0	       200	wrapper.c	FUNCTION_25
0x400072c	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	       200	wrapper.c	FUNCTION_25
0x4000733	    0x89b514ffffff	             mov dword [rbp - 0xec], esi	       200	wrapper.c	FUNCTION_25
0x4000739	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	       200	wrapper.c	FUNCTION_25
0x4000740	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	       200	wrapper.c	FUNCTION_25
0x4000747	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	       200	wrapper.c	FUNCTION_25
0x400074e	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	       200	wrapper.c	FUNCTION_25
0x4000755	            0x84c0	                             test al, al	       200	wrapper.c	FUNCTION_25
0x4000757	            0x7420	                            je 0x4000779	       200	wrapper.c	FUNCTION_25
0x4000759	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	       200	wrapper.c	FUNCTION_25
0x400075d	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	       200	wrapper.c	FUNCTION_25
0x4000761	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	       200	wrapper.c	FUNCTION_25
0x4000765	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	       200	wrapper.c	FUNCTION_25
0x4000769	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	       200	wrapper.c	FUNCTION_25
0x400076d	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	       200	wrapper.c	FUNCTION_25
0x4000771	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	       200	wrapper.c	FUNCTION_25
0x4000775	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	       200	wrapper.c	FUNCTION_25
0x4000779	    0x64488b042528	                mov rax, qword fs:[0x28]	       200	wrapper.c	FUNCTION_25
0x4000782	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	       200	wrapper.c	FUNCTION_25
0x4000789	            0x31c0	                            xor eax, eax	       200	wrapper.c	FUNCTION_25
0x400078b	    0xc78528ffffff	               mov dword [rbp - 0xd8], 0	       201	wrapper.c	FUNCTION_25
0x4000795	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	       210	wrapper.c	FUNCTION_25	CALL_1
0x400079f	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	       210	wrapper.c	FUNCTION_25	CALL_1
0x40007a9	        0x488d4510	                   lea rax, [rbp + 0x10]	       210	wrapper.c	FUNCTION_25	CALL_1
0x40007ad	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	       210	wrapper.c	FUNCTION_25	CALL_1
0x40007b4	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       210	wrapper.c	FUNCTION_25	CALL_1
0x40007bb	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       210	wrapper.c	FUNCTION_25	CALL_1
0x40007c2	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	       211	wrapper.c	FUNCTION_25	IF_1
0x40007c8	          0x83e040	                           and eax, 0x40	       211	wrapper.c	FUNCTION_25	IF_1
0x40007cb	            0x85c0	                           test eax, eax	       211	wrapper.c	FUNCTION_25	IF_1
0x40007cd	            0x7448	                            je 0x4000817	       211	wrapper.c	FUNCTION_25	IF_1
0x40007cf	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	       212	wrapper.c	FUNCTION_25	CALL_2
0x40007d5	          0x83f830	                           cmp eax, 0x30	       212	wrapper.c	FUNCTION_25	CALL_2
0x40007d8	            0x7323	                           jae 0x40007fd	       212	wrapper.c	FUNCTION_25	CALL_2
0x40007da	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       212	wrapper.c	FUNCTION_25	CALL_2
0x40007e1	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	       212	wrapper.c	FUNCTION_25	CALL_2
0x40007e7	            0x89d2	                            mov edx, edx	       212	wrapper.c	FUNCTION_25	CALL_2
0x40007e9	          0x4801d0	                            add rax, rdx	       212	wrapper.c	FUNCTION_25	CALL_2
0x40007ec	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	       212	wrapper.c	FUNCTION_25	CALL_2
0x40007f2	          0x83c208	                              add edx, 8	       212	wrapper.c	FUNCTION_25	CALL_2
0x40007f5	    0x899530ffffff	             mov dword [rbp - 0xd0], edx	       212	wrapper.c	FUNCTION_25	CALL_2
0x40007fb	            0xeb12	                           jmp 0x400080f	       212	wrapper.c	FUNCTION_25	CALL_2
0x40007fd	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       212	wrapper.c	FUNCTION_25	CALL_2
0x4000804	        0x488d5008	                      lea rdx, [rax + 8]	       212	wrapper.c	FUNCTION_25	CALL_2
0x4000808	    0x48899538ffff	             mov qword [rbp - 0xc8], rdx	       212	wrapper.c	FUNCTION_25	CALL_2
0x400080f	            0x8b00	                    mov eax, dword [rax]	       212	wrapper.c	FUNCTION_25	CALL_2
0x4000811	    0x898528ffffff	             mov dword [rbp - 0xd8], eax	       212	wrapper.c	FUNCTION_25	CALL_2
0x4000817	    0x8b9528ffffff	             mov edx, dword [rbp - 0xd8]	       216	wrapper.c	FUNCTION_25	FOR_1	CALL_4
0x400081d	    0x8b8d14ffffff	             mov ecx, dword [rbp - 0xec]	       216	wrapper.c	FUNCTION_25	FOR_1	CALL_4
0x4000823	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       216	wrapper.c	FUNCTION_25	FOR_1	CALL_4
0x400082a	            0x89ce	                            mov esi, ecx	       216	wrapper.c	FUNCTION_25	FOR_1	CALL_4
0x400082c	          0x4889c7	                            mov rdi, rax	       216	wrapper.c	FUNCTION_25	FOR_1	CALL_4
0x400082f	      0xb800000000	                              mov eax, 0	       216	wrapper.c	FUNCTION_25	FOR_1	CALL_4
0x4000834	      0xe800000000	                          call 0x4000839	       216	wrapper.c	FUNCTION_25	FOR_1	CALL_4
0x4000839	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	       216	wrapper.c	FUNCTION_25	FOR_1	CALL_4
0x400083f	    0x83bd2cffffff	               cmp dword [rbp - 0xd4], 0	       217	wrapper.c	FUNCTION_25	FOR_1	IF_2
0x4000846	            0x7821	                            js 0x4000869	       217	wrapper.c	FUNCTION_25	FOR_1	IF_2
0x4000848	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	       218	wrapper.c	FUNCTION_25	FOR_1	IF_2
0x400084e	    0x488b8d48ffff	             mov rcx, qword [rbp - 0xb8]	       229	wrapper.c	FUNCTION_25
0x4000855	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       229	wrapper.c	FUNCTION_25
0x400085e	     0xf849e000000	                            je 0x4000902	       229	wrapper.c	FUNCTION_25
0x4000864	      0xe994000000	                           jmp 0x40008fd	       229	wrapper.c	FUNCTION_25
0x4000869	      0xe800000000	                          call 0x400086e	       219	wrapper.c	FUNCTION_25	FOR_1	IF_3
0x400086e	            0x8b00	                    mov eax, dword [rax]	       219	wrapper.c	FUNCTION_25	FOR_1	IF_3
0x4000870	          0x83f804	                              cmp eax, 4	       219	wrapper.c	FUNCTION_25	FOR_1	IF_3
0x4000873	            0x7502	                           jne 0x4000877	       219	wrapper.c	FUNCTION_25	FOR_1	IF_3
0x4000875	            0xeba0	                           jmp 0x4000817	       228	wrapper.c	FUNCTION_25	FOR_1
0x4000877	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	       222	wrapper.c	FUNCTION_25	FOR_1	IF_4
0x400087d	          0x83e002	                              and eax, 2	       222	wrapper.c	FUNCTION_25	FOR_1	IF_4
0x4000880	            0x85c0	                           test eax, eax	       222	wrapper.c	FUNCTION_25	FOR_1	IF_4
0x4000882	            0x7424	                            je 0x40008a8	       222	wrapper.c	FUNCTION_25	FOR_1	IF_4
0x4000884	      0xbf00000000	                              mov edi, 0	       223	wrapper.c	FUNCTION_25	FOR_1	CALL_6
0x4000889	      0xe8f4f8ffff	                               call sym.	       223	wrapper.c	FUNCTION_25	FOR_1	CALL_6
0x400088e	          0x4889c2	                            mov rdx, rax	       223	wrapper.c	FUNCTION_25	FOR_1	CALL_6
0x4000891	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       223	wrapper.c	FUNCTION_25	FOR_1	CALL_6
0x4000898	          0x4889c6	                            mov rsi, rax	       223	wrapper.c	FUNCTION_25	FOR_1	CALL_6
0x400089b	          0x4889d7	                            mov rdi, rdx	       223	wrapper.c	FUNCTION_25	FOR_1	CALL_6
0x400089e	      0xb800000000	                              mov eax, 0	       223	wrapper.c	FUNCTION_25	FOR_1	CALL_6
0x40008a3	      0xe800000000	                          call 0x40008a8	       223	wrapper.c	FUNCTION_25	FOR_1	CALL_6
0x40008a8	    0x8b8514ffffff	             mov eax, dword [rbp - 0xec]	       224	wrapper.c	FUNCTION_25	FOR_1	ELSE_1	IF_5
0x40008ae	          0x83e001	                              and eax, 1	       224	wrapper.c	FUNCTION_25	FOR_1	ELSE_1	IF_5
0x40008b1	            0x85c0	                           test eax, eax	       224	wrapper.c	FUNCTION_25	FOR_1	ELSE_1	IF_5
0x40008b3	            0x7424	                            je 0x40008d9	       224	wrapper.c	FUNCTION_25	FOR_1	ELSE_1	IF_5
0x40008b5	      0xbf00000000	                              mov edi, 0	       225	wrapper.c	FUNCTION_25	FOR_1	ELSE_1	IF_5
0x40008ba	      0xe8c3f8ffff	                               call sym.	       225	wrapper.c	FUNCTION_25	FOR_1	ELSE_1	IF_5
0x40008bf	          0x4889c2	                            mov rdx, rax	       225	wrapper.c	FUNCTION_25	FOR_1	ELSE_1	IF_5
0x40008c2	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       225	wrapper.c	FUNCTION_25	FOR_1	ELSE_1	IF_5
0x40008c9	          0x4889c6	                            mov rsi, rax	       225	wrapper.c	FUNCTION_25	FOR_1	ELSE_1	IF_5
0x40008cc	          0x4889d7	                            mov rdi, rdx	       225	wrapper.c	FUNCTION_25	FOR_1	ELSE_1	IF_5
0x40008cf	      0xb800000000	                              mov eax, 0	       225	wrapper.c	FUNCTION_25	FOR_1	ELSE_1	IF_5
0x40008d4	      0xe800000000	                          call 0x40008d9	       225	wrapper.c	FUNCTION_25	FOR_1	ELSE_1	IF_5
0x40008d9	      0xbf00000000	                              mov edi, 0	       227	wrapper.c	FUNCTION_25	FOR_1	CALL_10
0x40008de	      0xe89ff8ffff	                               call sym.	       227	wrapper.c	FUNCTION_25	FOR_1	CALL_10
0x40008e3	          0x4889c2	                            mov rdx, rax	       227	wrapper.c	FUNCTION_25	FOR_1	CALL_10
0x40008e6	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	       227	wrapper.c	FUNCTION_25	FOR_1	CALL_10
0x40008ed	          0x4889c6	                            mov rsi, rax	       227	wrapper.c	FUNCTION_25	FOR_1	CALL_10
0x40008f0	          0x4889d7	                            mov rdi, rdx	       227	wrapper.c	FUNCTION_25	FOR_1	CALL_10
0x40008f3	      0xb800000000	                              mov eax, 0	       227	wrapper.c	FUNCTION_25	FOR_1	CALL_10
0x40008f8	      0xe800000000	                          call 0x40008fd	       227	wrapper.c	FUNCTION_25	FOR_1	CALL_10
0x40008fd	      0xe800000000	                          call 0x4000902	       229	wrapper.c	FUNCTION_25
0x4000902	              0xc9	                                   leave	       229	wrapper.c	FUNCTION_25
0x4000903	              0xc3	                                     ret	       229	wrapper.c	FUNCTION_25
xmkstemp_mode	CALL,3:IF,2:SWITCH,0:ELSE,0:FOR,0:WHILE,0:functions,0:DO,0	51
0x4001306	              0x55	                                push rbp	       545	wrapper.c	FUNCTION_43
0x4001307	          0x4889e5	                            mov rbp, rsp	       545	wrapper.c	FUNCTION_43
0x400130a	    0x4881ec301000	                         sub rsp, 0x1030	       545	wrapper.c	FUNCTION_43
0x4001311	    0x4889bdd8efff	           mov qword [rbp - 0x1028], rdi	       545	wrapper.c	FUNCTION_43
0x4001318	    0x89b5d4efffff	           mov dword [rbp - 0x102c], esi	       545	wrapper.c	FUNCTION_43
0x400131e	    0x64488b042528	                mov rax, qword fs:[0x28]	       545	wrapper.c	FUNCTION_43
0x4001327	        0x488945f8	                mov qword [rbp - 8], rax	       545	wrapper.c	FUNCTION_43
0x400132b	            0x31c0	                            xor eax, eax	       545	wrapper.c	FUNCTION_43
0x400132d	    0x488b8dd8efff	           mov rcx, qword [rbp - 0x1028]	       548	wrapper.c	FUNCTION_43
0x4001334	    0x488d85f0efff	                 lea rax, [rbp - 0x1010]	       548	wrapper.c	FUNCTION_43
0x400133b	      0xba00100000	                         mov edx, 0x1000	       548	wrapper.c	FUNCTION_43
0x4001340	          0x4889ce	                            mov rsi, rcx	       548	wrapper.c	FUNCTION_43
0x4001343	          0x4889c7	                            mov rdi, rax	       548	wrapper.c	FUNCTION_43
0x4001346	      0xe800000000	                          call 0x400134b	       548	wrapper.c	FUNCTION_43
0x400134b	    0x8b95d4efffff	           mov edx, dword [rbp - 0x102c]	       550	wrapper.c	FUNCTION_43	CALL_1
0x4001351	    0x488b85d8efff	           mov rax, qword [rbp - 0x1028]	       550	wrapper.c	FUNCTION_43	CALL_1
0x4001358	            0x89d6	                            mov esi, edx	       550	wrapper.c	FUNCTION_43	CALL_1
0x400135a	          0x4889c7	                            mov rdi, rax	       550	wrapper.c	FUNCTION_43	CALL_1
0x400135d	      0xe800000000	                          call 0x4001362	       550	wrapper.c	FUNCTION_43	CALL_1
0x4001362	    0x8985e0efffff	           mov dword [rbp - 0x1020], eax	       550	wrapper.c	FUNCTION_43	CALL_1
0x4001368	    0x83bde0efffff	             cmp dword [rbp - 0x1020], 0	       551	wrapper.c	FUNCTION_43	IF_1
0x400136f	            0x7968	                           jns 0x40013d9	       551	wrapper.c	FUNCTION_43	IF_1
0x4001371	      0xe800000000	                          call 0x4001376	       552	wrapper.c	FUNCTION_43	IF_1
0x4001376	            0x8b00	                    mov eax, dword [rax]	       552	wrapper.c	FUNCTION_43	IF_1
0x4001378	    0x8985e4efffff	           mov dword [rbp - 0x101c], eax	       552	wrapper.c	FUNCTION_43	IF_1
0x400137e	    0x488b85d8efff	           mov rax, qword [rbp - 0x1028]	       555	wrapper.c	FUNCTION_43	IF_1	IF_2
0x4001385	           0xfb600	                   movzx eax, byte [rax]	       555	wrapper.c	FUNCTION_43	IF_1	IF_2
0x4001388	            0x84c0	                             test al, al	       555	wrapper.c	FUNCTION_43	IF_1	IF_2
0x400138a	            0x750e	                           jne 0x400139a	       555	wrapper.c	FUNCTION_43	IF_1	IF_2
0x400138c	    0x488d85f0efff	                 lea rax, [rbp - 0x1010]	       556	wrapper.c	FUNCTION_43	IF_1	IF_2
0x4001393	    0x488985d8efff	           mov qword [rbp - 0x1028], rax	       556	wrapper.c	FUNCTION_43	IF_1	IF_2
0x400139a	    0x488b85d8efff	           mov rax, qword [rbp - 0x1028]	       558	wrapper.c	FUNCTION_43	IF_1	CALL_2
0x40013a1	          0x4889c7	                            mov rdi, rax	       558	wrapper.c	FUNCTION_43	IF_1	CALL_2
0x40013a4	      0xe800000000	                          call 0x40013a9	       558	wrapper.c	FUNCTION_43	IF_1	CALL_2
0x40013a9	    0x488985e8efff	           mov qword [rbp - 0x1018], rax	       558	wrapper.c	FUNCTION_43	IF_1	CALL_2
0x40013b0	      0xe800000000	                          call 0x40013b5	       559	wrapper.c	FUNCTION_43	IF_1
0x40013b5	          0x4889c2	                            mov rdx, rax	       559	wrapper.c	FUNCTION_43	IF_1
0x40013b8	    0x8b85e4efffff	           mov eax, dword [rbp - 0x101c]	       559	wrapper.c	FUNCTION_43	IF_1
0x40013be	            0x8902	                    mov dword [rdx], eax	       559	wrapper.c	FUNCTION_43	IF_1
0x40013c0	    0x488b85e8efff	           mov rax, qword [rbp - 0x1018]	       560	wrapper.c	FUNCTION_43	IF_1	CALL_3
0x40013c7	          0x4889c6	                            mov rsi, rax	       560	wrapper.c	FUNCTION_43	IF_1	CALL_3
0x40013ca	      0xbf00000000	                              mov edi, 0	       560	wrapper.c	FUNCTION_43	IF_1	CALL_3
0x40013cf	      0xb800000000	                              mov eax, 0	       560	wrapper.c	FUNCTION_43	IF_1	CALL_3
0x40013d4	      0xe800000000	                          call 0x40013d9	       560	wrapper.c	FUNCTION_43	IF_1	CALL_3
0x40013d9	    0x8b85e0efffff	           mov eax, dword [rbp - 0x1020]	       563	wrapper.c	FUNCTION_43
0x40013df	        0x488b4df8	                mov rcx, qword [rbp - 8]	       564	wrapper.c	FUNCTION_43
0x40013e3	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       564	wrapper.c	FUNCTION_43
0x40013ec	            0x7405	                            je 0x40013f3	       564	wrapper.c	FUNCTION_43
0x40013ee	      0xe800000000	                          call 0x40013f3	       564	wrapper.c	FUNCTION_43
0x40013f3	              0xc9	                                   leave	       564	wrapper.c	FUNCTION_43
0x40013f4	              0xc3	                                     ret	       564	wrapper.c	FUNCTION_43
write_in_full	CALL,1:IF,2:SWITCH,0:ELSE,0:FOR,0:WHILE,1:functions,0:DO,0	38
0x4000b55	              0x55	                                push rbp	       332	wrapper.c	FUNCTION_31
0x4000b56	          0x4889e5	                            mov rbp, rsp	       332	wrapper.c	FUNCTION_31
0x4000b59	        0x4883ec40	                           sub rsp, 0x40	       332	wrapper.c	FUNCTION_31
0x4000b5d	          0x897ddc	             mov dword [rbp - 0x24], edi	       332	wrapper.c	FUNCTION_31
0x4000b60	        0x488975d0	             mov qword [rbp - 0x30], rsi	       332	wrapper.c	FUNCTION_31
0x4000b64	        0x488955c8	             mov qword [rbp - 0x38], rdx	       332	wrapper.c	FUNCTION_31
0x4000b68	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       333	wrapper.c	FUNCTION_31
0x4000b6c	        0x488945e8	             mov qword [rbp - 0x18], rax	       333	wrapper.c	FUNCTION_31
0x4000b70	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       334	wrapper.c	FUNCTION_31
0x4000b78	            0xeb5c	                           jmp 0x4000bd6	       336	wrapper.c	FUNCTION_31	WHILE_1
0x4000b7a	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       337	wrapper.c	FUNCTION_31	WHILE_1	CALL_1
0x4000b7e	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       337	wrapper.c	FUNCTION_31	WHILE_1	CALL_1
0x4000b82	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       337	wrapper.c	FUNCTION_31	WHILE_1	CALL_1
0x4000b85	          0x4889ce	                            mov rsi, rcx	       337	wrapper.c	FUNCTION_31	WHILE_1	CALL_1
0x4000b88	            0x89c7	                            mov edi, eax	       337	wrapper.c	FUNCTION_31	WHILE_1	CALL_1
0x4000b8a	      0xe800000000	                          call 0x4000b8f	       337	wrapper.c	FUNCTION_31	WHILE_1	CALL_1
0x4000b8f	        0x488945f8	                mov qword [rbp - 8], rax	       337	wrapper.c	FUNCTION_31	WHILE_1	CALL_1
0x4000b93	      0x48837df800	                  cmp qword [rbp - 8], 0	       338	wrapper.c	FUNCTION_31	WHILE_1	IF_1
0x4000b98	            0x7909	                           jns 0x4000ba3	       338	wrapper.c	FUNCTION_31	WHILE_1	IF_1
0x4000b9a	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       339	wrapper.c	FUNCTION_31	WHILE_1	IF_1
0x4000ba1	            0xeb3e	                           jmp 0x4000be1	       339	wrapper.c	FUNCTION_31	WHILE_1	IF_1
0x4000ba3	      0x48837df800	                  cmp qword [rbp - 8], 0	       340	wrapper.c	FUNCTION_31	WHILE_1	IF_2
0x4000ba8	            0x7514	                           jne 0x4000bbe	       340	wrapper.c	FUNCTION_31	WHILE_1	IF_2
0x4000baa	      0xe800000000	                          call 0x4000baf	       341	wrapper.c	FUNCTION_31	WHILE_1	IF_2
0x4000baf	    0xc7001c000000	                   mov dword [rax], 0x1c	       341	wrapper.c	FUNCTION_31	WHILE_1	IF_2
0x4000bb5	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       342	wrapper.c	FUNCTION_31	WHILE_1	IF_2
0x4000bbc	            0xeb23	                           jmp 0x4000be1	       342	wrapper.c	FUNCTION_31	WHILE_1	IF_2
0x4000bbe	        0x488b45f8	                mov rax, qword [rbp - 8]	       344	wrapper.c	FUNCTION_31	WHILE_1
0x4000bc2	        0x482945c8	             sub qword [rbp - 0x38], rax	       344	wrapper.c	FUNCTION_31	WHILE_1
0x4000bc6	        0x488b45f8	                mov rax, qword [rbp - 8]	       345	wrapper.c	FUNCTION_31	WHILE_1
0x4000bca	        0x480145e8	            add qword [rbp - 0x18], rax 	       345	wrapper.c	FUNCTION_31	WHILE_1
0x4000bce	        0x488b45f8	                mov rax, qword [rbp - 8]	       346	wrapper.c	FUNCTION_31	WHILE_1
0x4000bd2	        0x480145f0	            add qword [rbp - 0x10], rax 	       346	wrapper.c	FUNCTION_31	WHILE_1
0x4000bd6	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       336	wrapper.c	FUNCTION_31	WHILE_1
0x4000bdb	            0x759d	                           jne 0x4000b7a	       336	wrapper.c	FUNCTION_31	WHILE_1
0x4000bdd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       349	wrapper.c	FUNCTION_31
0x4000be1	              0xc9	                                   leave	       350	wrapper.c	FUNCTION_31
0x4000be2	              0xc3	                                     ret	       350	wrapper.c	FUNCTION_31
