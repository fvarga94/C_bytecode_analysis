maybe_flush_or_die	functions,0:WHILE,0:ELSE,2:DO,0:CALL,9:SWITCH,0:IF,6:FOR,0	73
0x4000040	              0x55	                                push rbp	        18	write-or-die.c	FUNCTION_1
0x4000041	          0x4889e5	                            mov rbp, rsp	        18	write-or-die.c	FUNCTION_1
0x4000044	    0x4881ecc00000	                           sub rsp, 0xc0	        18	write-or-die.c	FUNCTION_1
0x400004b	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	        18	write-or-die.c	FUNCTION_1
0x4000052	    0x4889b540ffff	             mov qword [rbp - 0xc0], rsi	        18	write-or-die.c	FUNCTION_1
0x4000059	    0x64488b042528	                mov rax, qword fs:[0x28]	        18	write-or-die.c	FUNCTION_1
0x4000062	        0x488945f8	                mov qword [rbp - 8], rax	        18	write-or-die.c	FUNCTION_1
0x4000066	            0x31c0	                            xor eax, eax	        18	write-or-die.c	FUNCTION_1
0x4000068	    0x488b05000000	            mov rax, qword [0x0400006f] 	        23	write-or-die.c	FUNCTION_1	IF_1
0x400006f	    0x48398548ffff	            cmp qword [rbp - 0xb8], rax 	        23	write-or-die.c	FUNCTION_1	IF_1
0x4000076	     0xf85b3000000	                           jne 0x400012f	        23	write-or-die.c	FUNCTION_1	IF_1
0x400007c	    0x8b0500000000	            mov eax, dword [0x04000082] 	        24	write-or-die.c	FUNCTION_1	IF_1	IF_2
0x4000082	            0x85c0	                           test eax, eax	        24	write-or-die.c	FUNCTION_1	IF_1	IF_2
0x4000084	     0xf8988000000	                           jns 0x4000112	        24	write-or-die.c	FUNCTION_1	IF_1	IF_2
0x400008a	      0xbf00000000	                              mov edi, 0	        25	write-or-die.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x400008f	      0xe800000000	                          call 0x4000094	        25	write-or-die.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x4000094	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	        25	write-or-die.c	FUNCTION_1	IF_1	IF_2	CALL_1
0x400009b	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	        26	write-or-die.c	FUNCTION_1	IF_1	IF_2	IF_3
0x40000a3	            0x741f	                            je 0x40000c4	        26	write-or-die.c	FUNCTION_1	IF_1	IF_2	IF_3
0x40000a5	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	        27	write-or-die.c	FUNCTION_1	IF_1	IF_2	CALL_2
0x40000ac	          0x4889c7	                            mov rdi, rax	        27	write-or-die.c	FUNCTION_1	IF_1	IF_2	CALL_2
0x40000af	      0xe800000000	                          call 0x40000b4	        27	write-or-die.c	FUNCTION_1	IF_1	IF_2	CALL_2
0x40000b4	            0x85c0	                           test eax, eax	        27	write-or-die.c	FUNCTION_1	IF_1	IF_2	CALL_2
0x40000b6	           0xf94c0	                                 sete al	        27	write-or-die.c	FUNCTION_1	IF_1	IF_2	CALL_2
0x40000b9	           0xfb6c0	                           movzx eax, al	        27	write-or-die.c	FUNCTION_1	IF_1	IF_2	CALL_2
0x40000bc	    0x890500000000	            mov dword [0x040000c2], eax 	        27	write-or-die.c	FUNCTION_1	IF_1	IF_2	CALL_2
0x40000c2	            0xeb4e	                           jmp 0x4000112	        27	write-or-die.c	FUNCTION_1	IF_1	IF_2	CALL_2
0x40000c4	    0x488b05000000	            mov rax, qword [0x040000cb] 	        28	write-or-die.c	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x40000cb	          0x4889c7	                            mov rdi, rax	        28	write-or-die.c	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x40000ce	      0xe800000000	                          call 0x40000d3	        28	write-or-die.c	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x40000d3	            0x89c2	                            mov edx, eax	        28	write-or-die.c	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x40000d5	    0x488d8560ffff	                   lea rax, [rbp - 0xa0]	        28	write-or-die.c	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x40000dc	          0x4889c6	                            mov rsi, rax	        28	write-or-die.c	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x40000df	            0x89d7	                            mov edi, edx	        28	write-or-die.c	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x40000e1	      0xe800000000	                          call 0x40000e6	        28	write-or-die.c	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x40000e6	            0x85c0	                           test eax, eax	        28	write-or-die.c	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x40000e8	            0x751e	                           jne 0x4000108	        28	write-or-die.c	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x40000ea	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	        29	write-or-die.c	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4	CALL_5
0x40000f0	      0x2500f00000	                         and eax, 0xf000	        29	write-or-die.c	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4	CALL_5
0x40000f5	      0x3d00800000	                         cmp eax, 0x8000	        28	write-or-die.c	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x40000fa	            0x750c	                           jne 0x4000108	        28	write-or-die.c	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4	CALL_4
0x40000fc	    0xc70500000000	               mov dword [0x04000106], 1	        30	write-or-die.c	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4
0x4000106	            0xeb0a	                           jmp 0x4000112	        30	write-or-die.c	FUNCTION_1	IF_1	IF_2	ELSE_1	IF_4
0x4000108	    0xc70500000000	               mov dword [0x04000112], 0	        32	write-or-die.c	FUNCTION_1	IF_1	IF_2	ELSE_2
0x4000112	    0x8b0500000000	            mov eax, dword [0x04000118] 	        34	write-or-die.c	FUNCTION_1	IF_1	IF_5	CALL_6
0x4000118	            0x85c0	                           test eax, eax	        34	write-or-die.c	FUNCTION_1	IF_1	IF_5	CALL_6
0x400011a	            0x7413	                            je 0x400012f	        34	write-or-die.c	FUNCTION_1	IF_1	IF_5	CALL_6
0x400011c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	        34	write-or-die.c	FUNCTION_1	IF_1	IF_5	CALL_6
0x4000123	          0x4889c7	                            mov rdi, rax	        34	write-or-die.c	FUNCTION_1	IF_1	IF_5	CALL_6
0x4000126	      0xe800000000	                          call 0x400012b	        34	write-or-die.c	FUNCTION_1	IF_1	IF_5	CALL_6
0x400012b	            0x85c0	                           test eax, eax	        34	write-or-die.c	FUNCTION_1	IF_1	IF_5	CALL_6
0x400012d	            0x743a	                            je 0x4000169	        34	write-or-die.c	FUNCTION_1	IF_1	IF_5	CALL_6
0x400012f	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	        37	write-or-die.c	FUNCTION_1	IF_6	CALL_7
0x4000136	          0x4889c7	                            mov rdi, rax	        37	write-or-die.c	FUNCTION_1	IF_6	CALL_7
0x4000139	      0xe800000000	                          call 0x400013e	        37	write-or-die.c	FUNCTION_1	IF_6	CALL_7
0x400013e	            0x85c0	                           test eax, eax	        37	write-or-die.c	FUNCTION_1	IF_6	CALL_7
0x4000140	            0x7428	                            je 0x400016a	        37	write-or-die.c	FUNCTION_1	IF_6	CALL_7
0x4000142	      0xe800000000	                          call 0x4000147	        38	write-or-die.c	FUNCTION_1	IF_6	CALL_8
0x4000147	            0x8b00	                    mov eax, dword [rax]	        38	write-or-die.c	FUNCTION_1	IF_6	CALL_8
0x4000149	            0x89c7	                            mov edi, eax	        38	write-or-die.c	FUNCTION_1	IF_6	CALL_8
0x400014b	      0xe800000000	                          call 0x4000150	        38	write-or-die.c	FUNCTION_1	IF_6	CALL_8
0x4000150	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	        39	write-or-die.c	FUNCTION_1	IF_6	CALL_9
0x4000157	          0x4889c6	                            mov rsi, rax	        39	write-or-die.c	FUNCTION_1	IF_6	CALL_9
0x400015a	      0xbf00000000	                              mov edi, 0	        39	write-or-die.c	FUNCTION_1	IF_6	CALL_9
0x400015f	      0xb800000000	                              mov eax, 0	        39	write-or-die.c	FUNCTION_1	IF_6	CALL_9
0x4000164	      0xe800000000	                          call 0x4000169	        39	write-or-die.c	FUNCTION_1	IF_6	CALL_9
0x4000169	              0x90	                                     nop	        35	write-or-die.c	FUNCTION_1	IF_1	IF_5
0x400016a	        0x488b45f8	                mov rax, qword [rbp - 8]	        41	write-or-die.c	FUNCTION_1
0x400016e	    0x644833042528	                xor rax, qword fs:[0x28]	        41	write-or-die.c	FUNCTION_1
0x4000177	            0x7405	                            je 0x400017e	        41	write-or-die.c	FUNCTION_1
0x4000179	      0xe800000000	                          call 0x400017e	        41	write-or-die.c	FUNCTION_1
0x400017e	              0xc9	                                   leave	        41	write-or-die.c	FUNCTION_1
0x400017f	              0xc3	                                     ret	        41	write-or-die.c	FUNCTION_1
write_or_die	functions,0:WHILE,0:ELSE,0:DO,0:CALL,3:SWITCH,0:IF,1:FOR,0	24
0x40002b4	              0x55	                                push rbp	        66	write-or-die.c	FUNCTION_4
0x40002b5	          0x4889e5	                            mov rbp, rsp	        66	write-or-die.c	FUNCTION_4
0x40002b8	        0x4883ec20	                           sub rsp, 0x20	        66	write-or-die.c	FUNCTION_4
0x40002bc	          0x897dfc	                mov dword [rbp - 4], edi	        66	write-or-die.c	FUNCTION_4
0x40002bf	        0x488975f0	             mov qword [rbp - 0x10], rsi	        66	write-or-die.c	FUNCTION_4
0x40002c3	        0x488955e8	             mov qword [rbp - 0x18], rdx	        66	write-or-die.c	FUNCTION_4
0x40002c7	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        67	write-or-die.c	FUNCTION_4	IF_1	CALL_1
0x40002cb	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	        67	write-or-die.c	FUNCTION_4	IF_1	CALL_1
0x40002cf	          0x8b45fc	                mov eax, dword [rbp - 4]	        67	write-or-die.c	FUNCTION_4	IF_1	CALL_1
0x40002d2	          0x4889ce	                            mov rsi, rcx	        67	write-or-die.c	FUNCTION_4	IF_1	CALL_1
0x40002d5	            0x89c7	                            mov edi, eax	        67	write-or-die.c	FUNCTION_4	IF_1	CALL_1
0x40002d7	      0xe800000000	                          call 0x40002dc	        67	write-or-die.c	FUNCTION_4	IF_1	CALL_1
0x40002dc	          0x4885c0	                           test rax, rax	        67	write-or-die.c	FUNCTION_4	IF_1	CALL_1
0x40002df	            0x791d	                           jns 0x40002fe	        67	write-or-die.c	FUNCTION_4	IF_1	CALL_1
0x40002e1	      0xe800000000	                          call 0x40002e6	        68	write-or-die.c	FUNCTION_4	IF_1	CALL_2
0x40002e6	            0x8b00	                    mov eax, dword [rax]	        68	write-or-die.c	FUNCTION_4	IF_1	CALL_2
0x40002e8	            0x89c7	                            mov edi, eax	        68	write-or-die.c	FUNCTION_4	IF_1	CALL_2
0x40002ea	      0xe800000000	                          call 0x40002ef	        68	write-or-die.c	FUNCTION_4	IF_1	CALL_2
0x40002ef	      0xbf00000000	                              mov edi, 0	        69	write-or-die.c	FUNCTION_4	IF_1	CALL_3
0x40002f4	      0xb800000000	                              mov eax, 0	        69	write-or-die.c	FUNCTION_4	IF_1	CALL_3
0x40002f9	      0xe800000000	                          call 0x40002fe	        69	write-or-die.c	FUNCTION_4	IF_1	CALL_3
0x40002fe	              0x90	                                     nop	        71	write-or-die.c	FUNCTION_4
0x40002ff	              0xc9	                                   leave	        71	write-or-die.c	FUNCTION_4
0x4000300	              0xc3	                                     ret	        71	write-or-die.c	FUNCTION_4
fsync_or_die	functions,0:WHILE,0:ELSE,0:DO,0:CALL,2:SWITCH,0:IF,1:FOR,0	18
0x400027e	              0x55	                                push rbp	        59	write-or-die.c	FUNCTION_3
0x400027f	          0x4889e5	                            mov rbp, rsp	        59	write-or-die.c	FUNCTION_3
0x4000282	        0x4883ec10	                           sub rsp, 0x10	        59	write-or-die.c	FUNCTION_3
0x4000286	          0x897dfc	                mov dword [rbp - 4], edi	        59	write-or-die.c	FUNCTION_3
0x4000289	        0x488975f0	             mov qword [rbp - 0x10], rsi	        59	write-or-die.c	FUNCTION_3
0x400028d	          0x8b45fc	                mov eax, dword [rbp - 4]	        60	write-or-die.c	FUNCTION_3	IF_1	CALL_1
0x4000290	            0x89c7	                            mov edi, eax	        60	write-or-die.c	FUNCTION_3	IF_1	CALL_1
0x4000292	      0xe800000000	                          call 0x4000297	        60	write-or-die.c	FUNCTION_3	IF_1	CALL_1
0x4000297	            0x85c0	                           test eax, eax	        60	write-or-die.c	FUNCTION_3	IF_1	CALL_1
0x4000299	            0x7916	                           jns 0x40002b1	        60	write-or-die.c	FUNCTION_3	IF_1	CALL_1
0x400029b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        61	write-or-die.c	FUNCTION_3	IF_1	CALL_2
0x400029f	          0x4889c6	                            mov rsi, rax	        61	write-or-die.c	FUNCTION_3	IF_1	CALL_2
0x40002a2	      0xbf00000000	                              mov edi, 0	        61	write-or-die.c	FUNCTION_3	IF_1	CALL_2
0x40002a7	      0xb800000000	                              mov eax, 0	        61	write-or-die.c	FUNCTION_3	IF_1	CALL_2
0x40002ac	      0xe800000000	                          call 0x40002b1	        61	write-or-die.c	FUNCTION_3	IF_1	CALL_2
0x40002b1	              0x90	                                     nop	        63	write-or-die.c	FUNCTION_3
0x40002b2	              0xc9	                                   leave	        63	write-or-die.c	FUNCTION_3
0x40002b3	              0xc3	                                     ret	        63	write-or-die.c	FUNCTION_3
fprintf_or_die	functions,0:WHILE,0:ELSE,0:DO,0:CALL,5:SWITCH,0:IF,1:FOR,0	51
0x4000180	              0x55	                                push rbp	        44	write-or-die.c	FUNCTION_2
0x4000181	          0x4889e5	                            mov rbp, rsp	        44	write-or-die.c	FUNCTION_2
0x4000184	    0x4881ecf00000	                           sub rsp, 0xf0	        44	write-or-die.c	FUNCTION_2
0x400018b	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	        44	write-or-die.c	FUNCTION_2
0x4000192	    0x4889b510ffff	             mov qword [rbp - 0xf0], rsi	        44	write-or-die.c	FUNCTION_2
0x4000199	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	        44	write-or-die.c	FUNCTION_2
0x40001a0	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	        44	write-or-die.c	FUNCTION_2
0x40001a7	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	        44	write-or-die.c	FUNCTION_2
0x40001ae	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	        44	write-or-die.c	FUNCTION_2
0x40001b5	            0x84c0	                             test al, al	        44	write-or-die.c	FUNCTION_2
0x40001b7	            0x7420	                            je 0x40001d9	        44	write-or-die.c	FUNCTION_2
0x40001b9	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	        44	write-or-die.c	FUNCTION_2
0x40001bd	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	        44	write-or-die.c	FUNCTION_2
0x40001c1	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	        44	write-or-die.c	FUNCTION_2
0x40001c5	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	        44	write-or-die.c	FUNCTION_2
0x40001c9	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	        44	write-or-die.c	FUNCTION_2
0x40001cd	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	        44	write-or-die.c	FUNCTION_2
0x40001d1	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	        44	write-or-die.c	FUNCTION_2
0x40001d5	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	        44	write-or-die.c	FUNCTION_2
0x40001d9	    0x64488b042528	                mov rax, qword fs:[0x28]	        44	write-or-die.c	FUNCTION_2
0x40001e2	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	        44	write-or-die.c	FUNCTION_2
0x40001e9	            0x31c0	                            xor eax, eax	        44	write-or-die.c	FUNCTION_2
0x40001eb	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	        48	write-or-die.c	FUNCTION_2	CALL_1
0x40001f5	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	        48	write-or-die.c	FUNCTION_2	CALL_1
0x40001ff	        0x488d4510	                   lea rax, [rbp + 0x10]	        48	write-or-die.c	FUNCTION_2	CALL_1
0x4000203	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	        48	write-or-die.c	FUNCTION_2	CALL_1
0x400020a	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	        48	write-or-die.c	FUNCTION_2	CALL_1
0x4000211	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	        48	write-or-die.c	FUNCTION_2	CALL_1
0x4000218	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	        49	write-or-die.c	FUNCTION_2	CALL_2
0x400021f	    0x488b8d10ffff	             mov rcx, qword [rbp - 0xf0]	        49	write-or-die.c	FUNCTION_2	CALL_2
0x4000226	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	        49	write-or-die.c	FUNCTION_2	CALL_2
0x400022d	          0x4889ce	                            mov rsi, rcx	        49	write-or-die.c	FUNCTION_2	CALL_2
0x4000230	          0x4889c7	                            mov rdi, rax	        49	write-or-die.c	FUNCTION_2	CALL_2
0x4000233	      0xe800000000	                          call 0x4000238	        49	write-or-die.c	FUNCTION_2	CALL_2
0x4000238	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	        49	write-or-die.c	FUNCTION_2	CALL_2
0x400023e	    0x83bd2cffffff	               cmp dword [rbp - 0xd4], 0	        52	write-or-die.c	FUNCTION_2	IF_1
0x4000245	            0x791d	                           jns 0x4000264	        52	write-or-die.c	FUNCTION_2	IF_1
0x4000247	      0xe800000000	                          call 0x400024c	        53	write-or-die.c	FUNCTION_2	IF_1	CALL_4
0x400024c	            0x8b00	                    mov eax, dword [rax]	        53	write-or-die.c	FUNCTION_2	IF_1	CALL_4
0x400024e	            0x89c7	                            mov edi, eax	        53	write-or-die.c	FUNCTION_2	IF_1	CALL_4
0x4000250	      0xe800000000	                          call 0x4000255	        53	write-or-die.c	FUNCTION_2	IF_1	CALL_4
0x4000255	      0xbf00000000	                              mov edi, 0	        54	write-or-die.c	FUNCTION_2	IF_1	CALL_5
0x400025a	      0xb800000000	                              mov eax, 0	        54	write-or-die.c	FUNCTION_2	IF_1	CALL_5
0x400025f	      0xe800000000	                          call 0x4000264	        54	write-or-die.c	FUNCTION_2	IF_1	CALL_5
0x4000264	              0x90	                                     nop	        56	write-or-die.c	FUNCTION_2
0x4000265	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	        56	write-or-die.c	FUNCTION_2
0x400026c	    0x644833042528	                xor rax, qword fs:[0x28]	        56	write-or-die.c	FUNCTION_2
0x4000275	            0x7405	                            je 0x400027c	        56	write-or-die.c	FUNCTION_2
0x4000277	      0xe800000000	                          call 0x400027c	        56	write-or-die.c	FUNCTION_2
0x400027c	              0xc9	                                   leave	        56	write-or-die.c	FUNCTION_2
0x400027d	              0xc3	                                     ret	        56	write-or-die.c	FUNCTION_2
