strbuf_avail	SWITCH,0:WHILE,0:ELSE,0:IF,0:DO,0:CALL,0:FOR,0:functions,0	18
0x400004b	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_2
0x400004c	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_2
0x400004f	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_2
0x4000053	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x4000057	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_2
0x400005a	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_2
0x400005d	            0x741b	                            je 0x400007a	       141	strbuf.h	FUNCTION_2
0x400005f	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x4000063	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_2
0x4000066	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x400006a	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_2
0x400006e	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_2
0x4000071	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_2
0x4000074	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_2
0x4000078	            0xeb05	                           jmp 0x400007f	       141	strbuf.h	FUNCTION_2
0x400007a	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_2
0x400007f	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_2
0x4000080	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_2
create_file	SWITCH,0:WHILE,0:ELSE,0:IF,0:DO,0:CALL,1:FOR,0:functions,0	21
0x4000644	              0x55	                                push rbp	        80	entry.c	FUNCTION_14
0x4000645	          0x4889e5	                            mov rbp, rsp	        80	entry.c	FUNCTION_14
0x4000648	        0x4883ec10	                           sub rsp, 0x10	        80	entry.c	FUNCTION_14
0x400064c	        0x48897df8	                mov qword [rbp - 8], rdi	        80	entry.c	FUNCTION_14
0x4000650	          0x8975f4	              mov dword [rbp - 0xc], esi	        80	entry.c	FUNCTION_14
0x4000653	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        81	entry.c	FUNCTION_14
0x4000656	          0x83e040	                           and eax, 0x40	        81	entry.c	FUNCTION_14
0x4000659	            0x85c0	                           test eax, eax	        81	entry.c	FUNCTION_14
0x400065b	            0x7407	                            je 0x4000664	        81	entry.c	FUNCTION_14
0x400065d	      0xb8ff010000	                          mov eax, 0x1ff	        81	entry.c	FUNCTION_14
0x4000662	            0xeb05	                           jmp 0x4000669	        81	entry.c	FUNCTION_14
0x4000664	      0xb8b6010000	                          mov eax, 0x1b6	        81	entry.c	FUNCTION_14
0x4000669	          0x8945f4	              mov dword [rbp - 0xc], eax	        81	entry.c	FUNCTION_14
0x400066c	          0x8b55f4	              mov edx, dword [rbp - 0xc]	        82	entry.c	FUNCTION_14	CALL_1
0x400066f	        0x488b45f8	                mov rax, qword [rbp - 8]	        82	entry.c	FUNCTION_14	CALL_1
0x4000673	      0xbec1000000	                           mov esi, 0xc1	        82	entry.c	FUNCTION_14	CALL_1
0x4000678	          0x4889c7	                            mov rdi, rax	        82	entry.c	FUNCTION_14	CALL_1
0x400067b	      0xb800000000	                              mov eax, 0	        82	entry.c	FUNCTION_14	CALL_1
0x4000680	      0xe800000000	                          call 0x4000685	        82	entry.c	FUNCTION_14	CALL_1
0x4000685	              0xc9	                                   leave	        83	entry.c	FUNCTION_14
0x4000686	              0xc3	                                     ret	        83	entry.c	FUNCTION_14
fstat_output	SWITCH,0:WHILE,0:ELSE,0:IF,1:DO,0:CALL,0:FOR,0:functions,0	25
0x4000796	              0x55	                                push rbp	       111	entry.c	FUNCTION_17
0x4000797	          0x4889e5	                            mov rbp, rsp	       111	entry.c	FUNCTION_17
0x400079a	        0x4883ec20	                           sub rsp, 0x20	       111	entry.c	FUNCTION_17
0x400079e	          0x897dfc	                mov dword [rbp - 4], edi	       111	entry.c	FUNCTION_17
0x40007a1	        0x488975f0	             mov qword [rbp - 0x10], rsi	       111	entry.c	FUNCTION_17
0x40007a5	        0x488955e8	             mov qword [rbp - 0x18], rdx	       111	entry.c	FUNCTION_17
0x40007a9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       113	entry.c	FUNCTION_17	IF_1
0x40007ad	         0xfb64020	           movzx eax, byte [rax + 0x20] 	       113	entry.c	FUNCTION_17	IF_1
0x40007b1	          0x83e008	                              and eax, 8	       113	entry.c	FUNCTION_17	IF_1
0x40007b4	            0x84c0	                             test al, al	       113	entry.c	FUNCTION_17	IF_1
0x40007b6	            0x7423	                            je 0x40007db	       113	entry.c	FUNCTION_17	IF_1
0x40007b8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       114	entry.c	FUNCTION_17	IF_1
0x40007bc	          0x8b4010	            mov eax, dword [rax + 0x10] 	       114	entry.c	FUNCTION_17	IF_1
0x40007bf	            0x85c0	                           test eax, eax	       114	entry.c	FUNCTION_17	IF_1
0x40007c1	            0x7518	                           jne 0x40007db	       114	entry.c	FUNCTION_17	IF_1
0x40007c3	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       115	entry.c	FUNCTION_17	IF_1
0x40007c7	          0x8b45fc	                mov eax, dword [rbp - 4]	       115	entry.c	FUNCTION_17	IF_1
0x40007ca	          0x4889d6	                            mov rsi, rdx	       115	entry.c	FUNCTION_17	IF_1
0x40007cd	            0x89c7	                            mov edi, eax	       115	entry.c	FUNCTION_17	IF_1
0x40007cf	      0xe800000000	                          call 0x40007d4	       115	entry.c	FUNCTION_17	IF_1
0x40007d4	      0xb801000000	                              mov eax, 1	       116	entry.c	FUNCTION_17	IF_1
0x40007d9	            0xeb05	                           jmp 0x40007e0	       116	entry.c	FUNCTION_17	IF_1
0x40007db	      0xb800000000	                              mov eax, 0	       118	entry.c	FUNCTION_17
0x40007e0	              0xc9	                                   leave	       119	entry.c	FUNCTION_17
0x40007e1	              0xc3	                                     ret	       119	entry.c	FUNCTION_17
_	SWITCH,0:WHILE,0:ELSE,0:IF,1:DO,0:CALL,0:FOR,0:functions,0	15
0x40001be	              0x55	                                push rbp	        51	gettext.h	FUNCTION_27
0x40001bf	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_27
0x40001c2	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_27
0x40001c6	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_27
0x40001ca	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_27	IF_1
0x40001ce	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_27	IF_1
0x40001d1	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_27	IF_1
0x40001d3	            0x7507	                           jne 0x40001dc	        52	gettext.h	FUNCTION_27	IF_1
0x40001d5	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_27	IF_1
0x40001da	            0xeb0c	                           jmp 0x40001e8	        53	gettext.h	FUNCTION_27	IF_1
0x40001dc	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_27
0x40001e0	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_27
0x40001e3	      0xe800000000	                          call 0x40001e8	        54	gettext.h	FUNCTION_27
0x40001e8	              0xc9	                                   leave	        55	gettext.h	FUNCTION_27
0x40001e9	              0xc3	                                     ret	        55	gettext.h	FUNCTION_27
open_output_fd	SWITCH,0:WHILE,0:ELSE,1:IF,1:DO,0:CALL,3:FOR,0:functions,0	43
0x4000701	              0x55	                                push rbp	        99	entry.c	FUNCTION_16
0x4000702	          0x4889e5	                            mov rbp, rsp	        99	entry.c	FUNCTION_16
0x4000705	        0x4883ec30	                           sub rsp, 0x30	        99	entry.c	FUNCTION_16
0x4000709	        0x48897de8	             mov qword [rbp - 0x18], rdi	        99	entry.c	FUNCTION_16
0x400070d	        0x488975e0	             mov qword [rbp - 0x20], rsi	        99	entry.c	FUNCTION_16
0x4000711	          0x8955dc	             mov dword [rbp - 0x24], edx	        99	entry.c	FUNCTION_16
0x4000714	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       100	entry.c	FUNCTION_16
0x4000718	          0x8b4034	            mov eax, dword [rax + 0x34] 	       100	entry.c	FUNCTION_16
0x400071b	      0x2500f00000	                         and eax, 0xf000	       100	entry.c	FUNCTION_16
0x4000720	      0x3d00800000	                         cmp eax, 0x8000	       100	entry.c	FUNCTION_16
0x4000725	           0xf95c0	                                setne al	       100	entry.c	FUNCTION_16
0x4000728	           0xfb6c0	                           movzx eax, al	       100	entry.c	FUNCTION_16
0x400072b	          0x8945fc	                mov dword [rbp - 4], eax	       100	entry.c	FUNCTION_16
0x400072e	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       101	entry.c	FUNCTION_16	IF_1
0x4000732	            0x743e	                            je 0x4000772	       101	entry.c	FUNCTION_16	IF_1
0x4000734	        0x837dfc00	                  cmp dword [rbp - 4], 0	       102	entry.c	FUNCTION_16	IF_1	CALL_1
0x4000738	            0x7407	                            je 0x4000741	       102	entry.c	FUNCTION_16	IF_1	CALL_1
0x400073a	      0xba00000000	                              mov edx, 0	       102	entry.c	FUNCTION_16	IF_1	CALL_1
0x400073f	            0xeb05	                           jmp 0x4000746	       102	entry.c	FUNCTION_16	IF_1	CALL_1
0x4000741	      0xba00000000	                              mov edx, 0	       102	entry.c	FUNCTION_16	IF_1	CALL_1
0x4000746	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       102	entry.c	FUNCTION_16	IF_1	CALL_1
0x400074a	          0x4889d1	                            mov rcx, rdx	       102	entry.c	FUNCTION_16	IF_1	CALL_1
0x400074d	      0xba00000000	                              mov edx, 0	       102	entry.c	FUNCTION_16	IF_1	CALL_1
0x4000752	      0xbe19000000	                           mov esi, 0x19	       102	entry.c	FUNCTION_16	IF_1	CALL_1
0x4000757	          0x4889c7	                            mov rdi, rax	       102	entry.c	FUNCTION_16	IF_1	CALL_1
0x400075a	      0xb800000000	                              mov eax, 0	       102	entry.c	FUNCTION_16	IF_1	CALL_1
0x400075f	      0xe800000000	                          call 0x4000764	       102	entry.c	FUNCTION_16	IF_1	CALL_1
0x4000764	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       104	entry.c	FUNCTION_16	IF_1	CALL_2
0x4000768	          0x4889c7	                            mov rdi, rax	       104	entry.c	FUNCTION_16	IF_1	CALL_2
0x400076b	      0xe800000000	                          call 0x4000770	       104	entry.c	FUNCTION_16	IF_1	CALL_2
0x4000770	            0xeb22	                           jmp 0x4000794	       104	entry.c	FUNCTION_16	IF_1	CALL_2
0x4000772	        0x837dfc00	                  cmp dword [rbp - 4], 0	       106	entry.c	FUNCTION_16	ELSE_1	CALL_3
0x4000776	            0x7509	                           jne 0x4000781	       106	entry.c	FUNCTION_16	ELSE_1	CALL_3
0x4000778	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       106	entry.c	FUNCTION_16	ELSE_1	CALL_3
0x400077c	          0x8b4034	            mov eax, dword [rax + 0x34] 	       106	entry.c	FUNCTION_16	ELSE_1	CALL_3
0x400077f	            0xeb05	                           jmp 0x4000786	       106	entry.c	FUNCTION_16	ELSE_1	CALL_3
0x4000781	      0xb8b6010000	                          mov eax, 0x1b6	       106	entry.c	FUNCTION_16	ELSE_1	CALL_3
0x4000786	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       106	entry.c	FUNCTION_16	ELSE_1	CALL_3
0x400078a	            0x89c6	                            mov esi, eax	       106	entry.c	FUNCTION_16	ELSE_1	CALL_3
0x400078c	          0x4889d7	                            mov rdi, rdx	       106	entry.c	FUNCTION_16	ELSE_1	CALL_3
0x400078f	      0xe8b0feffff	                    call sym.create_file	       106	entry.c	FUNCTION_16	ELSE_1	CALL_3
0x4000794	              0xc9	                                   leave	       108	entry.c	FUNCTION_16
0x4000795	              0xc3	                                     ret	       108	entry.c	FUNCTION_16
const_error	SWITCH,0:WHILE,0:ELSE,0:IF,0:DO,0:CALL,0:FOR,0:functions,0	5
0x4000040	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_34
0x4000041	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_34
0x4000044	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_34
0x4000049	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_34
0x400004a	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_34
mark_fsmonitor_invalid	SWITCH,0:WHILE,0:ELSE,0:IF,1:DO,0:CALL,1:FOR,0:functions,0	37
0x4000297	              0x55	                                push rbp	        65	fsmonitor.h	FUNCTION_57
0x4000298	          0x4889e5	                            mov rbp, rsp	        65	fsmonitor.h	FUNCTION_57
0x400029b	        0x4883ec10	                           sub rsp, 0x10	        65	fsmonitor.h	FUNCTION_57
0x400029f	        0x48897df8	                mov qword [rbp - 8], rdi	        65	fsmonitor.h	FUNCTION_57
0x40002a3	        0x488975f0	             mov qword [rbp - 0x10], rsi	        65	fsmonitor.h	FUNCTION_57
0x40002a7	    0x488b05000000	            mov rax, qword [0x040002ae] 	        66	fsmonitor.h	FUNCTION_57	IF_1
0x40002ae	          0x4885c0	                           test rax, rax	        66	fsmonitor.h	FUNCTION_57	IF_1
0x40002b1	            0x7468	                            je 0x400031b	        66	fsmonitor.h	FUNCTION_57	IF_1
0x40002b3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        67	fsmonitor.h	FUNCTION_57	IF_1
0x40002b7	          0x8b4038	            mov eax, dword [rax + 0x38] 	        67	fsmonitor.h	FUNCTION_57	IF_1
0x40002ba	      0x25ffffdfff	                     and eax, 0xffdfffff	        67	fsmonitor.h	FUNCTION_57	IF_1
0x40002bf	            0x89c2	                            mov edx, eax	        67	fsmonitor.h	FUNCTION_57	IF_1
0x40002c1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        67	fsmonitor.h	FUNCTION_57	IF_1
0x40002c5	          0x895038	             mov dword [rax + 0x38], edx	        67	fsmonitor.h	FUNCTION_57	IF_1
0x40002c8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        68	fsmonitor.h	FUNCTION_57	IF_1	CALL_1
0x40002cc	        0x488d4858	                   lea rcx, [rax + 0x58]	        68	fsmonitor.h	FUNCTION_57	IF_1	CALL_1
0x40002d0	        0x488b45f8	                mov rax, qword [rbp - 8]	        68	fsmonitor.h	FUNCTION_57	IF_1	CALL_1
0x40002d4	      0xba01000000	                              mov edx, 1	        68	fsmonitor.h	FUNCTION_57	IF_1	CALL_1
0x40002d9	          0x4889ce	                            mov rsi, rcx	        68	fsmonitor.h	FUNCTION_57	IF_1	CALL_1
0x40002dc	          0x4889c7	                            mov rdi, rax	        68	fsmonitor.h	FUNCTION_57	IF_1	CALL_1
0x40002df	      0xe800000000	                          call 0x40002e4	        68	fsmonitor.h	FUNCTION_57	IF_1	CALL_1
0x40002e4	      0xbf00000000	                              mov edi, 0	        69	fsmonitor.h	FUNCTION_57	IF_1
0x40002e9	      0xe8fcfeffff	                  call sym.trace_pass_fl	        69	fsmonitor.h	FUNCTION_57	IF_1
0x40002ee	            0x85c0	                           test eax, eax	        69	fsmonitor.h	FUNCTION_57	IF_1
0x40002f0	            0x7429	                            je 0x400031b	        69	fsmonitor.h	FUNCTION_57	IF_1
0x40002f2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        69	fsmonitor.h	FUNCTION_57	IF_1
0x40002f6	        0x4883c058	                           add rax, 0x58	        69	fsmonitor.h	FUNCTION_57	IF_1
0x40002fa	          0x4989c0	                             mov r8, rax	        69	fsmonitor.h	FUNCTION_57	IF_1
0x40002fd	      0xb900000000	                              mov ecx, 0	        69	fsmonitor.h	FUNCTION_57	IF_1
0x4000302	      0xba00000000	                              mov edx, 0	        69	fsmonitor.h	FUNCTION_57	IF_1
0x4000307	      0xbe45000000	                           mov esi, 0x45	        69	fsmonitor.h	FUNCTION_57	IF_1
0x400030c	      0xbf00000000	                              mov edi, 0	        69	fsmonitor.h	FUNCTION_57	IF_1
0x4000311	      0xb800000000	                              mov eax, 0	        69	fsmonitor.h	FUNCTION_57	IF_1
0x4000316	      0xe800000000	                          call 0x400031b	        69	fsmonitor.h	FUNCTION_57	IF_1
0x400031b	              0x90	                                     nop	        71	fsmonitor.h	FUNCTION_57
0x400031c	              0xc9	                                   leave	        71	fsmonitor.h	FUNCTION_57
0x400031d	              0xc3	                                     ret	        71	fsmonitor.h	FUNCTION_57
create_directories	SWITCH,0:WHILE,1:ELSE,0:IF,4:DO,1:CALL,5:FOR,0:functions,0	95
0x400031e	              0x55	                                push rbp	        11	entry.c	FUNCTION_12
0x400031f	          0x4889e5	                            mov rbp, rsp	        11	entry.c	FUNCTION_12
0x4000322	        0x4883ec30	                           sub rsp, 0x30	        11	entry.c	FUNCTION_12
0x4000326	        0x48897de8	             mov qword [rbp - 0x18], rdi	        11	entry.c	FUNCTION_12
0x400032a	          0x8975e4	             mov dword [rbp - 0x1c], esi	        11	entry.c	FUNCTION_12
0x400032d	        0x488955d8	             mov qword [rbp - 0x28], rdx	        11	entry.c	FUNCTION_12
0x4000331	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	        12	entry.c	FUNCTION_12	CALL_1
0x4000334	            0x4898	                                    cdqe	        12	entry.c	FUNCTION_12	CALL_1
0x4000336	          0x4889c7	                            mov rdi, rax	        12	entry.c	FUNCTION_12	CALL_1
0x4000339	      0xe800000000	                          call 0x400033e	        12	entry.c	FUNCTION_12	CALL_1
0x400033e	        0x488945f8	                mov qword [rbp - 8], rax	        12	entry.c	FUNCTION_12	CALL_1
0x4000342	    0xc745f4000000	                mov dword [rbp - 0xc], 0	        13	entry.c	FUNCTION_12
0x4000349	      0xe9e6000000	                           jmp 0x4000434	        15	entry.c	FUNCTION_12	WHILE_1
0x400034e	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        17	entry.c	FUNCTION_12	WHILE_1	DO_1
0x4000351	          0x4863d0	                         movsxd rdx, eax	        17	entry.c	FUNCTION_12	WHILE_1	DO_1
0x4000354	        0x488b45f8	                mov rax, qword [rbp - 8]	        17	entry.c	FUNCTION_12	WHILE_1	DO_1
0x4000358	          0x4801c2	                            add rdx, rax	        17	entry.c	FUNCTION_12	WHILE_1	DO_1
0x400035b	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        17	entry.c	FUNCTION_12	WHILE_1	DO_1
0x400035e	          0x4863c8	                         movsxd rcx, eax	        17	entry.c	FUNCTION_12	WHILE_1	DO_1
0x4000361	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        17	entry.c	FUNCTION_12	WHILE_1	DO_1
0x4000365	          0x4801c8	                            add rax, rcx	        17	entry.c	FUNCTION_12	WHILE_1	DO_1
0x4000368	           0xfb600	                   movzx eax, byte [rax]	        17	entry.c	FUNCTION_12	WHILE_1	DO_1
0x400036b	            0x8802	                      mov byte [rdx], al	        17	entry.c	FUNCTION_12	WHILE_1	DO_1
0x400036d	        0x8345f401	                add dword [rbp - 0xc], 1	        18	entry.c	FUNCTION_12	WHILE_1	DO_1
0x4000371	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        19	entry.c	FUNCTION_12	WHILE_1	DO_1
0x4000374	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	        19	entry.c	FUNCTION_12	WHILE_1	DO_1
0x4000377	            0x7d14	                           jge 0x400038d	        19	entry.c	FUNCTION_12	WHILE_1	DO_1
0x4000379	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        19	entry.c	FUNCTION_12	WHILE_1	DO_1
0x400037c	          0x4863d0	                         movsxd rdx, eax	        19	entry.c	FUNCTION_12	WHILE_1	DO_1
0x400037f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        19	entry.c	FUNCTION_12	WHILE_1	DO_1
0x4000383	          0x4801d0	                            add rax, rdx	        19	entry.c	FUNCTION_12	WHILE_1	DO_1
0x4000386	           0xfb600	                   movzx eax, byte [rax]	        19	entry.c	FUNCTION_12	WHILE_1	DO_1
0x4000389	            0x3c2f	                            cmp al, 0x2f	        19	entry.c	FUNCTION_12	WHILE_1	DO_1
0x400038b	            0x75c1	                           jne 0x400034e	        19	entry.c	FUNCTION_12	WHILE_1	DO_1
0x400038d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        20	entry.c	FUNCTION_12	WHILE_1	IF_1
0x4000390	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	        20	entry.c	FUNCTION_12	WHILE_1	IF_1
0x4000393	     0xf8da9000000	                           jge 0x4000442	        20	entry.c	FUNCTION_12	WHILE_1	IF_1
0x4000399	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        22	entry.c	FUNCTION_12	WHILE_1
0x400039c	          0x4863d0	                         movsxd rdx, eax	        22	entry.c	FUNCTION_12	WHILE_1
0x400039f	        0x488b45f8	                mov rax, qword [rbp - 8]	        22	entry.c	FUNCTION_12	WHILE_1
0x40003a3	          0x4801d0	                            add rax, rdx	        22	entry.c	FUNCTION_12	WHILE_1
0x40003a6	          0xc60000	                       mov byte [rax], 0	        22	entry.c	FUNCTION_12	WHILE_1
0x40003a9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        31	entry.c	FUNCTION_12	WHILE_1	IF_2	CALL_2
0x40003ad	          0x8b5010	            mov edx, dword [rax + 0x10] 	        31	entry.c	FUNCTION_12	WHILE_1	IF_2	CALL_2
0x40003b0	          0x8b4df4	              mov ecx, dword [rbp - 0xc]	        31	entry.c	FUNCTION_12	WHILE_1	IF_2	CALL_2
0x40003b3	        0x488b45f8	                mov rax, qword [rbp - 8]	        31	entry.c	FUNCTION_12	WHILE_1	IF_2	CALL_2
0x40003b7	            0x89ce	                            mov esi, ecx	        31	entry.c	FUNCTION_12	WHILE_1	IF_2	CALL_2
0x40003b9	          0x4889c7	                            mov rdi, rax	        31	entry.c	FUNCTION_12	WHILE_1	IF_2	CALL_2
0x40003bc	      0xe800000000	                          call 0x40003c1	        31	entry.c	FUNCTION_12	WHILE_1	IF_2	CALL_2
0x40003c1	            0x85c0	                           test eax, eax	        31	entry.c	FUNCTION_12	WHILE_1	IF_2	CALL_2
0x40003c3	            0x7402	                            je 0x40003c7	        31	entry.c	FUNCTION_12	WHILE_1	IF_2	CALL_2
0x40003c5	            0xeb6d	                           jmp 0x4000434	        32	entry.c	FUNCTION_12	WHILE_1	IF_2
0x40003c7	        0x488b45f8	                mov rax, qword [rbp - 8]	        40	entry.c	FUNCTION_12	WHILE_1	IF_3
0x40003cb	      0xbeff010000	                          mov esi, 0x1ff	        40	entry.c	FUNCTION_12	WHILE_1	IF_3
0x40003d0	          0x4889c7	                            mov rdi, rax	        40	entry.c	FUNCTION_12	WHILE_1	IF_3
0x40003d3	      0xe800000000	                          call 0x40003d8	        40	entry.c	FUNCTION_12	WHILE_1	IF_3
0x40003d8	            0x85c0	                           test eax, eax	        40	entry.c	FUNCTION_12	WHILE_1	IF_3
0x40003da	            0x7458	                            je 0x4000434	        40	entry.c	FUNCTION_12	WHILE_1	IF_3
0x40003dc	      0xe800000000	                          call 0x40003e1	        41	entry.c	FUNCTION_12	WHILE_1	IF_3	IF_4
0x40003e1	            0x8b00	                    mov eax, dword [rax]	        41	entry.c	FUNCTION_12	WHILE_1	IF_3	IF_4
0x40003e3	          0x83f811	                           cmp eax, 0x11	        41	entry.c	FUNCTION_12	WHILE_1	IF_3	IF_4
0x40003e6	            0x7536	                           jne 0x400041e	        41	entry.c	FUNCTION_12	WHILE_1	IF_3	IF_4
0x40003e8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        41	entry.c	FUNCTION_12	WHILE_1	IF_3	IF_4
0x40003ec	         0xfb64020	           movzx eax, byte [rax + 0x20] 	        41	entry.c	FUNCTION_12	WHILE_1	IF_3	IF_4
0x40003f0	          0x83e001	                              and eax, 1	        41	entry.c	FUNCTION_12	WHILE_1	IF_3	IF_4
0x40003f3	            0x84c0	                             test al, al	        41	entry.c	FUNCTION_12	WHILE_1	IF_3	IF_4
0x40003f5	            0x7427	                            je 0x400041e	        41	entry.c	FUNCTION_12	WHILE_1	IF_3	IF_4
0x40003f7	        0x488b45f8	                mov rax, qword [rbp - 8]	        42	entry.c	FUNCTION_12	WHILE_1	IF_3	IF_4	CALL_3
0x40003fb	          0x4889c7	                            mov rdi, rax	        42	entry.c	FUNCTION_12	WHILE_1	IF_3	IF_4	CALL_3
0x40003fe	      0xe800000000	                          call 0x4000403	        42	entry.c	FUNCTION_12	WHILE_1	IF_3	IF_4	CALL_3
0x4000403	            0x85c0	                           test eax, eax	        41	entry.c	FUNCTION_12	WHILE_1	IF_3	IF_4
0x4000405	            0x7517	                           jne 0x400041e	        41	entry.c	FUNCTION_12	WHILE_1	IF_3	IF_4
0x4000407	        0x488b45f8	                mov rax, qword [rbp - 8]	        42	entry.c	FUNCTION_12	WHILE_1	IF_3	IF_4	CALL_3
0x400040b	      0xbeff010000	                          mov esi, 0x1ff	        42	entry.c	FUNCTION_12	WHILE_1	IF_3	IF_4	CALL_3
0x4000410	          0x4889c7	                            mov rdi, rax	        42	entry.c	FUNCTION_12	WHILE_1	IF_3	IF_4	CALL_3
0x4000413	      0xe800000000	                          call 0x4000418	        42	entry.c	FUNCTION_12	WHILE_1	IF_3	IF_4	CALL_3
0x4000418	            0x85c0	                           test eax, eax	        42	entry.c	FUNCTION_12	WHILE_1	IF_3	IF_4	CALL_3
0x400041a	            0x7502	                           jne 0x400041e	        42	entry.c	FUNCTION_12	WHILE_1	IF_3	IF_4	CALL_3
0x400041c	            0xeb16	                           jmp 0x4000434	        43	entry.c	FUNCTION_12	WHILE_1	IF_3	IF_4
0x400041e	        0x488b45f8	                mov rax, qword [rbp - 8]	        44	entry.c	FUNCTION_12	WHILE_1	IF_3	CALL_4
0x4000422	          0x4889c6	                            mov rsi, rax	        44	entry.c	FUNCTION_12	WHILE_1	IF_3	CALL_4
0x4000425	      0xbf00000000	                              mov edi, 0	        44	entry.c	FUNCTION_12	WHILE_1	IF_3	CALL_4
0x400042a	      0xb800000000	                              mov eax, 0	        44	entry.c	FUNCTION_12	WHILE_1	IF_3	CALL_4
0x400042f	      0xe800000000	                          call 0x4000434	        44	entry.c	FUNCTION_12	WHILE_1	IF_3	CALL_4
0x4000434	          0x8b45f4	              mov eax, dword [rbp - 0xc]	        15	entry.c	FUNCTION_12	WHILE_1
0x4000437	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	        15	entry.c	FUNCTION_12	WHILE_1
0x400043a	     0xf8c0effffff	                            jl 0x400034e	        15	entry.c	FUNCTION_12	WHILE_1
0x4000440	            0xeb01	                           jmp 0x4000443	        15	entry.c	FUNCTION_12	WHILE_1
0x4000442	              0x90	                                     nop	        21	entry.c	FUNCTION_12	WHILE_1	IF_1
0x4000443	        0x488b45f8	                mov rax, qword [rbp - 8]	        47	entry.c	FUNCTION_12	CALL_5
0x4000447	          0x4889c7	                            mov rdi, rax	        47	entry.c	FUNCTION_12	CALL_5
0x400044a	      0xe800000000	                          call 0x400044f	        47	entry.c	FUNCTION_12	CALL_5
0x400044f	              0x90	                                     nop	        48	entry.c	FUNCTION_12
0x4000450	              0xc9	                                   leave	        48	entry.c	FUNCTION_12
0x4000451	              0xc3	                                     ret	        48	entry.c	FUNCTION_12
strbuf_addch	SWITCH,0:WHILE,0:ELSE,0:IF,1:DO,0:CALL,2:FOR,0:functions,0	33
0x400011b	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_4
0x400011c	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_4
0x400011f	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_4
0x4000123	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_4
0x4000127	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_4
0x400012a	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x400012e	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x4000131	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x4000136	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x4000139	            0x7511	                           jne 0x400014c	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x400013b	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_4	CALL_2
0x400013f	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_4	CALL_2
0x4000144	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_4	CALL_2
0x4000147	      0xe800000000	                          call 0x400014c	       228	strbuf.h	FUNCTION_4	CALL_2
0x400014c	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x4000150	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_4
0x4000154	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x4000158	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_4
0x400015c	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_4
0x4000160	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x4000164	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_4
0x4000168	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_4
0x400016b	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_4
0x400016e	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_4
0x4000170	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_4
0x4000174	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_4
0x4000178	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_4
0x400017c	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_4
0x4000180	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_4
0x4000183	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_4
0x4000186	              0x90	                                     nop	       231	strbuf.h	FUNCTION_4
0x4000187	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_4
0x4000188	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_4
read_object_file	SWITCH,0:WHILE,0:ELSE,0:IF,0:DO,0:CALL,1:FOR,0:functions,0	14
0x400021a	              0x55	                                push rbp	      1199	cache.h	FUNCTION_79
0x400021b	          0x4889e5	                            mov rbp, rsp	      1199	cache.h	FUNCTION_79
0x400021e	        0x4883ec20	                           sub rsp, 0x20	      1199	cache.h	FUNCTION_79
0x4000222	        0x48897df8	                mov qword [rbp - 8], rdi	      1199	cache.h	FUNCTION_79
0x4000226	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1199	cache.h	FUNCTION_79
0x400022a	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1199	cache.h	FUNCTION_79
0x400022e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1200	cache.h	FUNCTION_79	CALL_1
0x4000232	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1200	cache.h	FUNCTION_79	CALL_1
0x4000236	        0x488b45f8	                mov rax, qword [rbp - 8]	      1200	cache.h	FUNCTION_79	CALL_1
0x400023a	      0xb901000000	                              mov ecx, 1	      1200	cache.h	FUNCTION_79	CALL_1
0x400023f	          0x4889c7	                            mov rdi, rax	      1200	cache.h	FUNCTION_79	CALL_1
0x4000242	      0xe800000000	                          call 0x4000247	      1200	cache.h	FUNCTION_79	CALL_1
0x4000247	              0xc9	                                   leave	      1201	cache.h	FUNCTION_79
0x4000248	              0xc3	                                     ret	      1201	cache.h	FUNCTION_79
checkout_entry	SWITCH,0:WHILE,0:ELSE,3:IF,14:DO,0:CALL,19:FOR,0:functions,0	213
0x400142e	              0x55	                                push rbp	       411	entry.c	FUNCTION_24
0x400142f	          0x4889e5	                            mov rbp, rsp	       411	entry.c	FUNCTION_24
0x4001432	              0x53	                                push rbx	       411	entry.c	FUNCTION_24
0x4001433	    0x4881ec680100	                          sub rsp, 0x168	       411	entry.c	FUNCTION_24
0x400143a	    0x4889bda8feff	            mov qword [rbp - 0x158], rdi	       411	entry.c	FUNCTION_24
0x4001441	    0x4889b5a0feff	            mov qword [rbp - 0x160], rsi	       411	entry.c	FUNCTION_24
0x4001448	    0x48899598feff	            mov qword [rbp - 0x168], rdx	       411	entry.c	FUNCTION_24
0x400144f	    0x64488b042528	                mov rax, qword fs:[0x28]	       411	entry.c	FUNCTION_24
0x4001458	        0x488945e8	             mov qword [rbp - 0x18], rax	       411	entry.c	FUNCTION_24
0x400145c	            0x31c0	                            xor eax, eax	       411	entry.c	FUNCTION_24
0x400145e	    0x4883bd98feff	              cmp qword [rbp - 0x168], 0	       415	entry.c	FUNCTION_24	IF_1
0x4001466	            0x7427	                            je 0x400148f	       415	entry.c	FUNCTION_24	IF_1
0x4001468	    0x488b95a0feff	            mov rdx, qword [rbp - 0x160]	       416	entry.c	FUNCTION_24	CALL_1
0x400146f	    0x488bb598feff	            mov rsi, qword [rbp - 0x168]	       416	entry.c	FUNCTION_24	CALL_1
0x4001476	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       416	entry.c	FUNCTION_24	CALL_1
0x400147d	      0xb901000000	                              mov ecx, 1	       416	entry.c	FUNCTION_24	CALL_1
0x4001482	          0x4889c7	                            mov rdi, rax	       416	entry.c	FUNCTION_24	CALL_1
0x4001485	      0xe838f8ffff	                    call sym.write_entry	       416	entry.c	FUNCTION_24	CALL_1
0x400148a	      0xe94e030000	                           jmp 0x40017dd	       416	entry.c	FUNCTION_24	CALL_1
0x400148f	      0xbe00000000	                              mov esi, 0	       418	entry.c	FUNCTION_24
0x4001494	      0xbf00000000	                              mov edi, 0	       418	entry.c	FUNCTION_24
0x4001499	      0xe8e3ebffff	                  call sym.strbuf_setlen	       418	entry.c	FUNCTION_24
0x400149e	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       419	entry.c	FUNCTION_24	CALL_2
0x40014a5	          0x8b4010	            mov eax, dword [rax + 0x10] 	       419	entry.c	FUNCTION_24	CALL_2
0x40014a8	          0x4863d0	                         movsxd rdx, eax	       419	entry.c	FUNCTION_24	CALL_2
0x40014ab	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       419	entry.c	FUNCTION_24	CALL_2
0x40014b2	        0x488b4008	                mov rax, qword [rax + 8]	       419	entry.c	FUNCTION_24	CALL_2
0x40014b6	          0x4889c6	                            mov rsi, rax	       419	entry.c	FUNCTION_24	CALL_2
0x40014b9	      0xbf00000000	                              mov edi, 0	       419	entry.c	FUNCTION_24	CALL_2
0x40014be	      0xe800000000	                          call 0x40014c3	       419	entry.c	FUNCTION_24	CALL_2
0x40014c3	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       420	entry.c	FUNCTION_24	CALL_3
0x40014ca	          0x8b403c	            mov eax, dword [rax + 0x3c] 	       420	entry.c	FUNCTION_24	CALL_3
0x40014cd	            0x89c2	                            mov edx, eax	       420	entry.c	FUNCTION_24	CALL_3
0x40014cf	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       420	entry.c	FUNCTION_24	CALL_3
0x40014d6	        0x4883c058	                           add rax, 0x58	       420	entry.c	FUNCTION_24	CALL_3
0x40014da	          0x4889c6	                            mov rsi, rax	       420	entry.c	FUNCTION_24	CALL_3
0x40014dd	      0xbf00000000	                              mov edi, 0	       420	entry.c	FUNCTION_24	CALL_3
0x40014e2	      0xe800000000	                          call 0x40014e7	       420	entry.c	FUNCTION_24	CALL_3
0x40014e7	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       422	entry.c	FUNCTION_24	IF_2	CALL_4
0x40014ee	          0x8b4810	            mov ecx, dword [rax + 0x10] 	       422	entry.c	FUNCTION_24	IF_2	CALL_4
0x40014f1	    0x488b05000000	            mov rax, qword [0x040014f8] 	       422	entry.c	FUNCTION_24	IF_2	CALL_4
0x40014f8	            0x89c6	                            mov esi, eax	       422	entry.c	FUNCTION_24	IF_2	CALL_4
0x40014fa	    0x488b05000000	            mov rax, qword [0x04001501] 	       422	entry.c	FUNCTION_24	IF_2	CALL_4
0x4001501	    0x488d95c0feff	                  lea rdx, [rbp - 0x140]	       422	entry.c	FUNCTION_24	IF_2	CALL_4
0x4001508	          0x4889c7	                            mov rdi, rax	       422	entry.c	FUNCTION_24	IF_2	CALL_4
0x400150b	      0xe88ffeffff	                     call sym.check_path	       422	entry.c	FUNCTION_24	IF_2	CALL_4
0x4001510	            0x85c0	                           test eax, eax	       422	entry.c	FUNCTION_24	IF_2	CALL_4
0x4001512	     0xf8569020000	                           jne 0x4001781	       422	entry.c	FUNCTION_24	IF_2	CALL_4
0x4001518	    0x488d95c0feff	                  lea rdx, [rbp - 0x140]	       424	entry.c	FUNCTION_24	IF_2
0x400151f	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       424	entry.c	FUNCTION_24	IF_2
0x4001526	      0xb905000000	                              mov ecx, 5	       424	entry.c	FUNCTION_24	IF_2
0x400152b	          0x4889c6	                            mov rsi, rax	       424	entry.c	FUNCTION_24	IF_2
0x400152e	      0xbf00000000	                              mov edi, 0	       424	entry.c	FUNCTION_24	IF_2
0x4001533	      0xe800000000	                          call 0x4001538	       424	entry.c	FUNCTION_24	IF_2
0x4001538	    0x8985b4feffff	            mov dword [rbp - 0x14c], eax	       424	entry.c	FUNCTION_24	IF_2
0x400153e	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       429	entry.c	FUNCTION_24	IF_2	CALL_5
0x4001545	          0x4889c7	                            mov rdi, rax	       429	entry.c	FUNCTION_24	IF_2	CALL_5
0x4001548	      0xe800000000	                          call 0x400154d	       429	entry.c	FUNCTION_24	IF_2	CALL_5
0x400154d	    0x488985b8feff	            mov qword [rbp - 0x148], rax	       429	entry.c	FUNCTION_24	IF_2	CALL_5
0x4001554	    0x4883bdb8feff	              cmp qword [rbp - 0x148], 0	       430	entry.c	FUNCTION_24	IF_2	IF_3
0x400155c	     0xf8418010000	                            je 0x400167a	       430	entry.c	FUNCTION_24	IF_2	IF_3
0x4001562	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       432	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	CALL_6
0x4001569	        0x488d5058	                   lea rdx, [rax + 0x58]	       432	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	CALL_6
0x400156d	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	       432	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	CALL_6
0x4001574	          0x4889c6	                            mov rsi, rax	       432	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	CALL_6
0x4001577	          0x4889d7	                            mov rdi, rdx	       432	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	CALL_6
0x400157a	      0xe800000000	                          call 0x400157f	       432	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	CALL_6
0x400157f	            0x85c0	                           test eax, eax	       432	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	CALL_6
0x4001581	     0xf85a0000000	                           jne 0x4001627	       432	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	CALL_6
0x4001587	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       434	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	IF_5
0x400158e	        0x488d5058	                   lea rdx, [rax + 0x58]	       434	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	IF_5
0x4001592	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       434	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	IF_5
0x4001599	          0x4889c6	                            mov rsi, rax	       434	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	IF_5
0x400159c	          0x4889d7	                            mov rdi, rdx	       434	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	IF_5
0x400159f	      0xe800000000	                          call 0x40015a4	       434	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	IF_5
0x40015a4	            0x85c0	                           test eax, eax	       434	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	IF_5
0x40015a6	            0x7425	                            je 0x40015cd	       434	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	IF_5
0x40015a8	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       435	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	CALL_8
0x40015af	        0x488d5858	                   lea rbx, [rax + 0x58]	       435	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	CALL_8
0x40015b3	      0xbf00000000	                              mov edi, 0	       435	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	CALL_8
0x40015b8	      0xe801ecffff	                               call sym.	       435	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	CALL_8
0x40015bd	          0x4889de	                            mov rsi, rbx	       435	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	CALL_8
0x40015c0	          0x4889c7	                            mov rdi, rax	       435	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	CALL_8
0x40015c3	      0xb800000000	                              mov eax, 0	       435	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	CALL_8
0x40015c8	      0xe800000000	                          call 0x40015cd	       435	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	CALL_8
0x40015cd	    0x8b85d8feffff	            mov eax, dword [rbp - 0x128]	       436	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	IF_6
0x40015d3	      0x2500400000	                         and eax, 0x4000	       436	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	IF_6
0x40015d8	            0x85c0	                           test eax, eax	       436	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	IF_6
0x40015da	            0x7513	                           jne 0x40015ef	       436	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	IF_6
0x40015dc	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       437	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	CALL_9
0x40015e3	        0x4883c058	                           add rax, 0x58	       437	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	CALL_9
0x40015e7	          0x4889c7	                            mov rdi, rax	       437	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	CALL_9
0x40015ea	      0xe800000000	                          call 0x40015ef	       437	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	CALL_9
0x40015ef	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       440	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	CALL_11
0x40015f6	        0x4883c044	                           add rax, 0x44	       440	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	CALL_11
0x40015fa	          0x4889c7	                            mov rdi, rax	       440	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	CALL_11
0x40015fd	      0xe800000000	                          call 0x4001602	       440	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	CALL_11
0x4001602	          0x4889c2	                            mov rdx, rax	       440	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	CALL_11
0x4001605	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       439	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	CALL_10
0x400160c	        0x4883c058	                           add rax, 0x58	       439	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	CALL_10
0x4001610	      0xb900000000	                              mov ecx, 0	       439	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	CALL_10
0x4001615	      0xbe00000000	                              mov esi, 0	       439	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	CALL_10
0x400161a	          0x4889c7	                            mov rdi, rax	       439	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	CALL_10
0x400161d	      0xe800000000	                          call 0x4001622	       439	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	CALL_10
0x4001622	      0xe9b6010000	                           jmp 0x40017dd	       439	entry.c	FUNCTION_24	IF_2	IF_3	IF_4	CALL_10
0x4001627	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       444	entry.c	FUNCTION_24	IF_2	IF_3	ELSE_1
0x400162e	         0xfb64020	           movzx eax, byte [rax + 0x20] 	       444	entry.c	FUNCTION_24	IF_2	IF_3	ELSE_1
0x4001632	          0x83e001	                              and eax, 1	       444	entry.c	FUNCTION_24	IF_2	IF_3	ELSE_1
0x4001635	            0x84c0	                             test al, al	       442	entry.c	FUNCTION_24	IF_2	IF_3	ELSE_1	CALL_12
0x4001637	            0x7407	                            je 0x4001640	       442	entry.c	FUNCTION_24	IF_2	IF_3	ELSE_1	CALL_12
0x4001639	      0xbb02000000	                              mov ebx, 2	       442	entry.c	FUNCTION_24	IF_2	IF_3	ELSE_1	CALL_12
0x400163e	            0xeb05	                           jmp 0x4001645	       442	entry.c	FUNCTION_24	IF_2	IF_3	ELSE_1	CALL_12
0x4001640	      0xbb00000000	                              mov ebx, 0	       442	entry.c	FUNCTION_24	IF_2	IF_3	ELSE_1	CALL_12
0x4001645	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       443	entry.c	FUNCTION_24	IF_2	IF_3	ELSE_1	CALL_13
0x400164c	        0x4883c044	                           add rax, 0x44	       443	entry.c	FUNCTION_24	IF_2	IF_3	ELSE_1	CALL_13
0x4001650	          0x4889c7	                            mov rdi, rax	       443	entry.c	FUNCTION_24	IF_2	IF_3	ELSE_1	CALL_13
0x4001653	      0xe800000000	                          call 0x4001658	       443	entry.c	FUNCTION_24	IF_2	IF_3	ELSE_1	CALL_13
0x4001658	          0x4889c2	                            mov rdx, rax	       443	entry.c	FUNCTION_24	IF_2	IF_3	ELSE_1	CALL_13
0x400165b	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       442	entry.c	FUNCTION_24	IF_2	IF_3	ELSE_1	CALL_12
0x4001662	        0x4883c058	                           add rax, 0x58	       442	entry.c	FUNCTION_24	IF_2	IF_3	ELSE_1	CALL_12
0x4001666	            0x89d9	                            mov ecx, ebx	       442	entry.c	FUNCTION_24	IF_2	IF_3	ELSE_1	CALL_12
0x4001668	      0xbe00000000	                              mov esi, 0	       442	entry.c	FUNCTION_24	IF_2	IF_3	ELSE_1	CALL_12
0x400166d	          0x4889c7	                            mov rdi, rax	       442	entry.c	FUNCTION_24	IF_2	IF_3	ELSE_1	CALL_12
0x4001670	      0xe800000000	                          call 0x4001675	       442	entry.c	FUNCTION_24	IF_2	IF_3	ELSE_1	CALL_12
0x4001675	      0xe963010000	                           jmp 0x40017dd	       442	entry.c	FUNCTION_24	IF_2	IF_3	ELSE_1	CALL_12
0x400167a	    0x83bdb4feffff	              cmp dword [rbp - 0x14c], 0	       447	entry.c	FUNCTION_24	IF_2	IF_7
0x4001681	            0x750a	                           jne 0x400168d	       447	entry.c	FUNCTION_24	IF_2	IF_7
0x4001683	      0xb800000000	                              mov eax, 0	       448	entry.c	FUNCTION_24	IF_2	IF_7
0x4001688	      0xe950010000	                           jmp 0x40017dd	       448	entry.c	FUNCTION_24	IF_2	IF_7
0x400168d	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       449	entry.c	FUNCTION_24	IF_2	IF_8
0x4001694	         0xfb64020	           movzx eax, byte [rax + 0x20] 	       449	entry.c	FUNCTION_24	IF_2	IF_8
0x4001698	          0x83e001	                              and eax, 1	       449	entry.c	FUNCTION_24	IF_2	IF_8
0x400169b	            0x84c0	                             test al, al	       449	entry.c	FUNCTION_24	IF_2	IF_8
0x400169d	            0x753c	                           jne 0x40016db	       449	entry.c	FUNCTION_24	IF_2	IF_8
0x400169f	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       450	entry.c	FUNCTION_24	IF_2	IF_8	IF_9
0x40016a6	         0xfb64020	           movzx eax, byte [rax + 0x20] 	       450	entry.c	FUNCTION_24	IF_2	IF_8	IF_9
0x40016aa	          0x83e002	                              and eax, 2	       450	entry.c	FUNCTION_24	IF_2	IF_8	IF_9
0x40016ad	            0x84c0	                             test al, al	       450	entry.c	FUNCTION_24	IF_2	IF_8	IF_9
0x40016af	            0x7520	                           jne 0x40016d1	       450	entry.c	FUNCTION_24	IF_2	IF_8	IF_9
0x40016b1	    0x488b15000000	            mov rdx, qword [0x040016b8] 	       451	entry.c	FUNCTION_24	IF_2	IF_8	IF_9	CALL_14
0x40016b8	    0x488b05000000	            mov rax, qword [0x040016bf] 	       451	entry.c	FUNCTION_24	IF_2	IF_8	IF_9	CALL_14
0x40016bf	      0xbe00000000	                              mov esi, 0	       451	entry.c	FUNCTION_24	IF_2	IF_8	IF_9	CALL_14
0x40016c4	          0x4889c7	                            mov rdi, rax	       451	entry.c	FUNCTION_24	IF_2	IF_8	IF_9	CALL_14
0x40016c7	      0xb800000000	                              mov eax, 0	       451	entry.c	FUNCTION_24	IF_2	IF_8	IF_9	CALL_14
0x40016cc	      0xe800000000	                          call 0x40016d1	       451	entry.c	FUNCTION_24	IF_2	IF_8	IF_9	CALL_14
0x40016d1	      0xb8ffffffff	                     mov eax, 0xffffffff	       454	entry.c	FUNCTION_24	IF_2	IF_8
0x40016d6	      0xe902010000	                           jmp 0x40017dd	       454	entry.c	FUNCTION_24	IF_2	IF_8
0x40016db	    0x8b85d8feffff	            mov eax, dword [rbp - 0x128]	       463	entry.c	FUNCTION_24	IF_2	IF_10	CALL_15
0x40016e1	      0x2500f00000	                         and eax, 0xf000	       463	entry.c	FUNCTION_24	IF_2	IF_10	CALL_15
0x40016e6	      0x3d00400000	                         cmp eax, 0x4000	       463	entry.c	FUNCTION_24	IF_2	IF_10	CALL_15
0x40016eb	            0x7561	                           jne 0x400174e	       463	entry.c	FUNCTION_24	IF_2	IF_10	CALL_15
0x40016ed	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       465	entry.c	FUNCTION_24	IF_2	IF_10	IF_11
0x40016f4	          0x8b4034	            mov eax, dword [rax + 0x34] 	       465	entry.c	FUNCTION_24	IF_2	IF_10	IF_11
0x40016f7	      0x2500f00000	                         and eax, 0xf000	       465	entry.c	FUNCTION_24	IF_2	IF_10	IF_11
0x40016fc	      0x3d00e00000	                         cmp eax, 0xe000	       465	entry.c	FUNCTION_24	IF_2	IF_10	IF_11
0x4001701	            0x750a	                           jne 0x400170d	       465	entry.c	FUNCTION_24	IF_2	IF_10	IF_11
0x4001703	      0xb800000000	                              mov eax, 0	       466	entry.c	FUNCTION_24	IF_2	IF_10	IF_11
0x4001708	      0xe9d0000000	                           jmp 0x40017dd	       466	entry.c	FUNCTION_24	IF_2	IF_10	IF_11
0x400170d	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       467	entry.c	FUNCTION_24	IF_2	IF_10	IF_12
0x4001714	         0xfb64020	           movzx eax, byte [rax + 0x20] 	       467	entry.c	FUNCTION_24	IF_2	IF_10	IF_12
0x4001718	          0x83e001	                              and eax, 1	       467	entry.c	FUNCTION_24	IF_2	IF_10	IF_12
0x400171b	            0x84c0	                             test al, al	       467	entry.c	FUNCTION_24	IF_2	IF_10	IF_12
0x400171d	            0x7523	                           jne 0x4001742	       467	entry.c	FUNCTION_24	IF_2	IF_10	IF_12
0x400171f	    0x488b05000000	            mov rax, qword [0x04001726] 	       468	entry.c	FUNCTION_24	IF_2	IF_10	IF_12
0x4001726	          0x4889c6	                            mov rsi, rax	       468	entry.c	FUNCTION_24	IF_2	IF_10	IF_12
0x4001729	      0xbf00000000	                              mov edi, 0	       468	entry.c	FUNCTION_24	IF_2	IF_10	IF_12
0x400172e	      0xb800000000	                              mov eax, 0	       468	entry.c	FUNCTION_24	IF_2	IF_10	IF_12
0x4001733	      0xe800000000	                          call 0x4001738	       468	entry.c	FUNCTION_24	IF_2	IF_10	IF_12
0x4001738	      0xe803e9ffff	                    call sym.const_error	       468	entry.c	FUNCTION_24	IF_2	IF_10	IF_12
0x400173d	      0xe99b000000	                           jmp 0x40017dd	       468	entry.c	FUNCTION_24	IF_2	IF_10	IF_12
0x4001742	      0xbf00000000	                              mov edi, 0	       469	entry.c	FUNCTION_24	IF_2	IF_10	CALL_16
0x4001747	      0xe806edffff	                 call sym.remove_subtree	       469	entry.c	FUNCTION_24	IF_2	IF_10	CALL_16
0x400174c	            0xeb4c	                           jmp 0x400179a	       469	entry.c	FUNCTION_24	IF_2	IF_10	CALL_16
0x400174e	    0x488b05000000	            mov rax, qword [0x04001755] 	       470	entry.c	FUNCTION_24	IF_2	ELSE_2	IF_13	CALL_17
0x4001755	          0x4889c7	                            mov rdi, rax	       470	entry.c	FUNCTION_24	IF_2	ELSE_2	IF_13	CALL_17
0x4001758	      0xe800000000	                          call 0x400175d	       470	entry.c	FUNCTION_24	IF_2	ELSE_2	IF_13	CALL_17
0x400175d	            0x85c0	                           test eax, eax	       470	entry.c	FUNCTION_24	IF_2	ELSE_2	IF_13	CALL_17
0x400175f	            0x7439	                            je 0x400179a	       470	entry.c	FUNCTION_24	IF_2	ELSE_2	IF_13	CALL_17
0x4001761	    0x488b05000000	            mov rax, qword [0x04001768] 	       471	entry.c	FUNCTION_24	IF_2	ELSE_2	IF_13
0x4001768	          0x4889c6	                            mov rsi, rax	       471	entry.c	FUNCTION_24	IF_2	ELSE_2	IF_13
0x400176b	      0xbf00000000	                              mov edi, 0	       471	entry.c	FUNCTION_24	IF_2	ELSE_2	IF_13
0x4001770	      0xb800000000	                              mov eax, 0	       471	entry.c	FUNCTION_24	IF_2	ELSE_2	IF_13
0x4001775	      0xe800000000	                          call 0x400177a	       471	entry.c	FUNCTION_24	IF_2	ELSE_2	IF_13
0x400177a	      0xe8c1e8ffff	                    call sym.const_error	       471	entry.c	FUNCTION_24	IF_2	ELSE_2	IF_13
0x400177f	            0xeb5c	                           jmp 0x40017dd	       471	entry.c	FUNCTION_24	IF_2	ELSE_2	IF_13
0x4001781	    0x488b85a0feff	            mov rax, qword [rbp - 0x160]	       472	entry.c	FUNCTION_24	ELSE_3	IF_14
0x4001788	         0xfb64020	           movzx eax, byte [rax + 0x20] 	       472	entry.c	FUNCTION_24	ELSE_3	IF_14
0x400178c	          0x83e004	                              and eax, 4	       472	entry.c	FUNCTION_24	ELSE_3	IF_14
0x400178f	            0x84c0	                             test al, al	       472	entry.c	FUNCTION_24	ELSE_3	IF_14
0x4001791	            0x7407	                            je 0x400179a	       472	entry.c	FUNCTION_24	ELSE_3	IF_14
0x4001793	      0xb800000000	                              mov eax, 0	       473	entry.c	FUNCTION_24	ELSE_3	IF_14
0x4001798	            0xeb43	                           jmp 0x40017dd	       473	entry.c	FUNCTION_24	ELSE_3	IF_14
0x400179a	    0x488b05000000	            mov rax, qword [0x040017a1] 	       475	entry.c	FUNCTION_24	CALL_18
0x40017a1	            0x89c1	                            mov ecx, eax	       475	entry.c	FUNCTION_24	CALL_18
0x40017a3	    0x488b05000000	            mov rax, qword [0x040017aa] 	       475	entry.c	FUNCTION_24	CALL_18
0x40017aa	    0x488b95a0feff	            mov rdx, qword [rbp - 0x160]	       475	entry.c	FUNCTION_24	CALL_18
0x40017b1	            0x89ce	                            mov esi, ecx	       475	entry.c	FUNCTION_24	CALL_18
0x40017b3	          0x4889c7	                            mov rdi, rax	       475	entry.c	FUNCTION_24	CALL_18
0x40017b6	      0xe863ebffff	             call sym.create_directories	       475	entry.c	FUNCTION_24	CALL_18
0x40017bb	    0x488b35000000	            mov rsi, qword [0x040017c2] 	       476	entry.c	FUNCTION_24	CALL_19
0x40017c2	    0x488b95a0feff	            mov rdx, qword [rbp - 0x160]	       476	entry.c	FUNCTION_24	CALL_19
0x40017c9	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       476	entry.c	FUNCTION_24	CALL_19
0x40017d0	      0xb900000000	                              mov ecx, 0	       476	entry.c	FUNCTION_24	CALL_19
0x40017d5	          0x4889c7	                            mov rdi, rax	       476	entry.c	FUNCTION_24	CALL_19
0x40017d8	      0xe8e5f4ffff	                    call sym.write_entry	       476	entry.c	FUNCTION_24	CALL_19
0x40017dd	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       477	entry.c	FUNCTION_24
0x40017e1	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       477	entry.c	FUNCTION_24
0x40017ea	            0x7405	                            je 0x40017f1	       477	entry.c	FUNCTION_24
0x40017ec	      0xe800000000	                          call 0x40017f1	       477	entry.c	FUNCTION_24
0x40017f1	    0x4881c4680100	                          add rsp, 0x168	       477	entry.c	FUNCTION_24
0x40017f8	              0x5b	                                 pop rbx	       477	entry.c	FUNCTION_24
0x40017f9	              0x5d	                                 pop rbp	       477	entry.c	FUNCTION_24
0x40017fa	              0xc3	                                     ret	       477	entry.c	FUNCTION_24
remove_available_paths	SWITCH,0:WHILE,0:ELSE,0:IF,1:DO,0:CALL,1:FOR,0:functions,0	25
0x40008ff	              0x55	                                push rbp	       153	entry.c	FUNCTION_20
0x4000900	          0x4889e5	                            mov rbp, rsp	       153	entry.c	FUNCTION_20
0x4000903	        0x4883ec20	                           sub rsp, 0x20	       153	entry.c	FUNCTION_20
0x4000907	        0x48897de8	             mov qword [rbp - 0x18], rdi	       153	entry.c	FUNCTION_20
0x400090b	        0x488975e0	             mov qword [rbp - 0x20], rsi	       153	entry.c	FUNCTION_20
0x400090f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       154	entry.c	FUNCTION_20
0x4000913	        0x488945f0	             mov qword [rbp - 0x10], rax	       154	entry.c	FUNCTION_20
0x4000917	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       157	entry.c	FUNCTION_20	CALL_1
0x400091b	          0x488b10	                    mov rdx, qword [rax]	       157	entry.c	FUNCTION_20	CALL_1
0x400091e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       157	entry.c	FUNCTION_20	CALL_1
0x4000922	          0x4889d6	                            mov rsi, rdx	       157	entry.c	FUNCTION_20	CALL_1
0x4000925	          0x4889c7	                            mov rdi, rax	       157	entry.c	FUNCTION_20	CALL_1
0x4000928	      0xe800000000	                          call 0x400092d	       157	entry.c	FUNCTION_20	CALL_1
0x400092d	        0x488945f8	                mov qword [rbp - 8], rax	       157	entry.c	FUNCTION_20	CALL_1
0x4000931	      0x48837df800	                  cmp qword [rbp - 8], 0	       158	entry.c	FUNCTION_20	IF_1
0x4000936	            0x740f	                            je 0x4000947	       158	entry.c	FUNCTION_20	IF_1
0x4000938	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       159	entry.c	FUNCTION_20	IF_1
0x400093c	          0x488b10	                    mov rdx, qword [rax]	       159	entry.c	FUNCTION_20	IF_1
0x400093f	        0x488b45f8	                mov rax, qword [rbp - 8]	       159	entry.c	FUNCTION_20	IF_1
0x4000943	        0x48895008	                mov qword [rax + 8], rdx	       159	entry.c	FUNCTION_20	IF_1
0x4000947	      0x48837df800	                  cmp qword [rbp - 8], 0	       160	entry.c	FUNCTION_20
0x400094c	           0xf94c0	                                 sete al	       160	entry.c	FUNCTION_20
0x400094f	           0xfb6c0	                           movzx eax, al	       160	entry.c	FUNCTION_20
0x4000952	              0xc9	                                   leave	       161	entry.c	FUNCTION_20
0x4000953	              0xc3	                                     ret	       161	entry.c	FUNCTION_20
streaming_write_entry	SWITCH,0:WHILE,0:ELSE,0:IF,2:DO,0:CALL,5:FOR,0:functions,0	50
0x40007e2	              0x55	                                push rbp	       125	entry.c	FUNCTION_18
0x40007e3	          0x4889e5	                            mov rbp, rsp	       125	entry.c	FUNCTION_18
0x40007e6	        0x4883ec40	                           sub rsp, 0x40	       125	entry.c	FUNCTION_18
0x40007ea	        0x48897de8	             mov qword [rbp - 0x18], rdi	       125	entry.c	FUNCTION_18
0x40007ee	        0x488975e0	             mov qword [rbp - 0x20], rsi	       125	entry.c	FUNCTION_18
0x40007f2	        0x488955d8	             mov qword [rbp - 0x28], rdx	       125	entry.c	FUNCTION_18
0x40007f6	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       125	entry.c	FUNCTION_18
0x40007fa	        0x448945cc	             mov dword [rbp - 0x34], r8d	       125	entry.c	FUNCTION_18
0x40007fe	        0x4c894dc0	              mov qword [rbp - 0x40], r9	       125	entry.c	FUNCTION_18
0x4000802	    0xc745f8000000	                  mov dword [rbp - 8], 0	       126	entry.c	FUNCTION_18
0x4000809	          0x8b55cc	             mov edx, dword [rbp - 0x34]	       129	entry.c	FUNCTION_18	CALL_1
0x400080c	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	       129	entry.c	FUNCTION_18	CALL_1
0x4000810	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       129	entry.c	FUNCTION_18	CALL_1
0x4000814	          0x4889ce	                            mov rsi, rcx	       129	entry.c	FUNCTION_18	CALL_1
0x4000817	          0x4889c7	                            mov rdi, rax	       129	entry.c	FUNCTION_18	CALL_1
0x400081a	      0xe8e2feffff	                 call sym.open_output_fd	       129	entry.c	FUNCTION_18	CALL_1
0x400081f	          0x8945fc	                mov dword [rbp - 4], eax	       129	entry.c	FUNCTION_18	CALL_1
0x4000822	        0x837dfc00	                  cmp dword [rbp - 4], 0	       130	entry.c	FUNCTION_18	IF_1
0x4000826	            0x7907	                           jns 0x400082f	       130	entry.c	FUNCTION_18	IF_1
0x4000828	      0xb8ffffffff	                     mov eax, 0xffffffff	       131	entry.c	FUNCTION_18	IF_1
0x400082d	            0xeb5d	                           jmp 0x400088c	       131	entry.c	FUNCTION_18	IF_1
0x400082f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       133	entry.c	FUNCTION_18	CALL_2
0x4000833	        0x488d7044	                   lea rsi, [rax + 0x44]	       133	entry.c	FUNCTION_18	CALL_2
0x4000837	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       133	entry.c	FUNCTION_18	CALL_2
0x400083b	          0x8b45fc	                mov eax, dword [rbp - 4]	       133	entry.c	FUNCTION_18	CALL_2
0x400083e	      0xb901000000	                              mov ecx, 1	       133	entry.c	FUNCTION_18	CALL_2
0x4000843	            0x89c7	                            mov edi, eax	       133	entry.c	FUNCTION_18	CALL_2
0x4000845	      0xe800000000	                          call 0x400084a	       133	entry.c	FUNCTION_18	CALL_2
0x400084a	           0x945f8	                 or dword [rbp - 8], eax	       133	entry.c	FUNCTION_18	CALL_2
0x400084d	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       134	entry.c	FUNCTION_18	CALL_3
0x4000851	          0x8b45fc	                mov eax, dword [rbp - 4]	       134	entry.c	FUNCTION_18	CALL_3
0x4000854	        0x488b5510	            mov rdx, qword [rbp + 0x10] 	       134	entry.c	FUNCTION_18	CALL_3
0x4000858	          0x4889ce	                            mov rsi, rcx	       134	entry.c	FUNCTION_18	CALL_3
0x400085b	            0x89c7	                            mov edi, eax	       134	entry.c	FUNCTION_18	CALL_3
0x400085d	      0xe834ffffff	                   call sym.fstat_output	       134	entry.c	FUNCTION_18	CALL_3
0x4000862	            0x89c2	                            mov edx, eax	       134	entry.c	FUNCTION_18	CALL_3
0x4000864	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       134	entry.c	FUNCTION_18	CALL_3
0x4000868	            0x8910	                    mov dword [rax], edx	       134	entry.c	FUNCTION_18	CALL_3
0x400086a	          0x8b45fc	                mov eax, dword [rbp - 4]	       135	entry.c	FUNCTION_18	CALL_4
0x400086d	            0x89c7	                            mov edi, eax	       135	entry.c	FUNCTION_18	CALL_4
0x400086f	      0xe800000000	                          call 0x4000874	       135	entry.c	FUNCTION_18	CALL_4
0x4000874	           0x945f8	                 or dword [rbp - 8], eax	       135	entry.c	FUNCTION_18	CALL_4
0x4000877	        0x837df800	                  cmp dword [rbp - 8], 0	       137	entry.c	FUNCTION_18	IF_2
0x400087b	            0x740c	                            je 0x4000889	       137	entry.c	FUNCTION_18	IF_2
0x400087d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       138	entry.c	FUNCTION_18	CALL_5
0x4000881	          0x4889c7	                            mov rdi, rax	       138	entry.c	FUNCTION_18	CALL_5
0x4000884	      0xe800000000	                          call 0x4000889	       138	entry.c	FUNCTION_18	CALL_5
0x4000889	          0x8b45f8	                mov eax, dword [rbp - 8]	       139	entry.c	FUNCTION_18
0x400088c	              0xc9	                                   leave	       140	entry.c	FUNCTION_18
0x400088d	              0xc3	                                     ret	       140	entry.c	FUNCTION_18
strbuf_setlen	SWITCH,0:WHILE,0:ELSE,1:IF,2:DO,0:CALL,2:FOR,0:functions,0	43
0x4000081	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_3
0x4000082	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_3
0x4000085	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_3
0x4000089	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_3
0x400008d	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_3
0x4000091	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_3	IF_1
0x4000095	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_3	IF_1
0x4000098	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_3	IF_1
0x400009b	            0x740d	                            je 0x40000aa	       162	strbuf.h	FUNCTION_3	IF_1
0x400009d	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_3	IF_1
0x40000a1	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_3	IF_1
0x40000a4	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_3	IF_1
0x40000a8	            0xeb05	                           jmp 0x40000af	       162	strbuf.h	FUNCTION_3	IF_1
0x40000aa	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_3	IF_1
0x40000af	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_3	IF_1
0x40000b3	            0x730f	                           jae 0x40000c4	       162	strbuf.h	FUNCTION_3	IF_1
0x40000b5	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_3	CALL_1
0x40000ba	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_3	CALL_1
0x40000bf	      0xe800000000	                          call 0x40000c4	       163	strbuf.h	FUNCTION_3	CALL_1
0x40000c4	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_3
0x40000c8	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_3
0x40000cc	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_3
0x40000d0	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_3	IF_2
0x40000d4	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_3	IF_2
0x40000d8	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_3	IF_2
0x40000de	            0x7414	                            je 0x40000f4	       165	strbuf.h	FUNCTION_3	IF_2
0x40000e0	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_3	IF_2
0x40000e4	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_3	IF_2
0x40000e8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_3	IF_2
0x40000ec	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_3	IF_2
0x40000ef	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_3	IF_2
0x40000f2	            0xeb24	                           jmp 0x4000118	       169	strbuf.h	FUNCTION_3
0x40000f4	     0xfb605000000	           movzx eax, byte [0x040000fb] 	       168	strbuf.h	FUNCTION_3	CALL_2
0x40000fb	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_3	CALL_2
0x40000fd	            0x7419	                            je 0x4000118	       168	strbuf.h	FUNCTION_3	CALL_2
0x40000ff	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0x4000104	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_3	CALL_2
0x4000109	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0x400010e	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0x4000113	      0xe800000000	                          call 0x4000118	       168	strbuf.h	FUNCTION_3	CALL_2
0x4000118	              0x90	                                     nop	       169	strbuf.h	FUNCTION_3
0x4000119	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_3
0x400011a	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_3
is_dot_or_dotdot	SWITCH,0:WHILE,0:ELSE,0:IF,0:DO,0:CALL,0:FOR,0:functions,0	27
0x4000249	              0x55	                                push rbp	       276	dir.h	FUNCTION_86
0x400024a	          0x4889e5	                            mov rbp, rsp	       276	dir.h	FUNCTION_86
0x400024d	        0x48897df8	                mov qword [rbp - 8], rdi	       276	dir.h	FUNCTION_86
0x4000251	        0x488b45f8	                mov rax, qword [rbp - 8]	       277	dir.h	FUNCTION_86
0x4000255	           0xfb600	                   movzx eax, byte [rax]	       277	dir.h	FUNCTION_86
0x4000258	            0x3c2e	                            cmp al, 0x2e	       277	dir.h	FUNCTION_86
0x400025a	            0x7534	                           jne 0x4000290	       277	dir.h	FUNCTION_86
0x400025c	        0x488b45f8	                mov rax, qword [rbp - 8]	       278	dir.h	FUNCTION_86
0x4000260	        0x4883c001	                              add rax, 1	       278	dir.h	FUNCTION_86
0x4000264	           0xfb600	                   movzx eax, byte [rax]	       278	dir.h	FUNCTION_86
0x4000267	            0x84c0	                             test al, al	       277	dir.h	FUNCTION_86
0x4000269	            0x741e	                            je 0x4000289	       277	dir.h	FUNCTION_86
0x400026b	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	dir.h	FUNCTION_86
0x400026f	        0x4883c001	                              add rax, 1	       279	dir.h	FUNCTION_86
0x4000273	           0xfb600	                   movzx eax, byte [rax]	       279	dir.h	FUNCTION_86
0x4000276	            0x3c2e	                            cmp al, 0x2e	       278	dir.h	FUNCTION_86
0x4000278	            0x7516	                           jne 0x4000290	       278	dir.h	FUNCTION_86
0x400027a	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	dir.h	FUNCTION_86
0x400027e	        0x4883c002	                              add rax, 2	       279	dir.h	FUNCTION_86
0x4000282	           0xfb600	                   movzx eax, byte [rax]	       279	dir.h	FUNCTION_86
0x4000285	            0x84c0	                             test al, al	       279	dir.h	FUNCTION_86
0x4000287	            0x7507	                           jne 0x4000290	       279	dir.h	FUNCTION_86
0x4000289	      0xb801000000	                              mov eax, 1	       277	dir.h	FUNCTION_86
0x400028e	            0xeb05	                           jmp 0x4000295	       277	dir.h	FUNCTION_86
0x4000290	      0xb800000000	                              mov eax, 0	       277	dir.h	FUNCTION_86
0x4000295	              0x5d	                                 pop rbp	       280	dir.h	FUNCTION_86
0x4000296	              0xc3	                                     ret	       280	dir.h	FUNCTION_86
enable_delayed_checkout	SWITCH,0:WHILE,0:ELSE,0:IF,1:DO,0:CALL,3:FOR,0:functions,0	31
0x400088e	              0x55	                                push rbp	       143	entry.c	FUNCTION_19
0x400088f	          0x4889e5	                            mov rbp, rsp	       143	entry.c	FUNCTION_19
0x4000892	        0x4883ec10	                           sub rsp, 0x10	       143	entry.c	FUNCTION_19
0x4000896	        0x48897df8	                mov qword [rbp - 8], rdi	       143	entry.c	FUNCTION_19
0x400089a	        0x488b45f8	                mov rax, qword [rbp - 8]	       144	entry.c	FUNCTION_19	IF_1
0x400089e	        0x488b4018	            mov rax, qword [rax + 0x18] 	       144	entry.c	FUNCTION_19	IF_1
0x40008a2	          0x4885c0	                           test rax, rax	       144	entry.c	FUNCTION_19	IF_1
0x40008a5	            0x7555	                           jne 0x40008fc	       144	entry.c	FUNCTION_19	IF_1
0x40008a7	      0xbf48000000	                           mov edi, 0x48	       145	entry.c	FUNCTION_19	IF_1	CALL_1
0x40008ac	      0xe800000000	                          call 0x40008b1	       145	entry.c	FUNCTION_19	IF_1	CALL_1
0x40008b1	          0x4889c2	                            mov rdx, rax	       145	entry.c	FUNCTION_19	IF_1	CALL_1
0x40008b4	        0x488b45f8	                mov rax, qword [rbp - 8]	       145	entry.c	FUNCTION_19	IF_1	CALL_1
0x40008b8	        0x48895018	             mov qword [rax + 0x18], rdx	       145	entry.c	FUNCTION_19	IF_1	CALL_1
0x40008bc	        0x488b45f8	                mov rax, qword [rbp - 8]	       146	entry.c	FUNCTION_19	IF_1
0x40008c0	        0x488b4018	            mov rax, qword [rax + 0x18] 	       146	entry.c	FUNCTION_19	IF_1
0x40008c4	    0xc70001000000	                      mov dword [rax], 1	       146	entry.c	FUNCTION_19	IF_1
0x40008ca	        0x488b45f8	                mov rax, qword [rbp - 8]	       147	entry.c	FUNCTION_19	IF_1	CALL_2
0x40008ce	        0x488b4018	            mov rax, qword [rax + 0x18] 	       147	entry.c	FUNCTION_19	IF_1	CALL_2
0x40008d2	        0x4883c008	                              add rax, 8	       147	entry.c	FUNCTION_19	IF_1	CALL_2
0x40008d6	      0xbe00000000	                              mov esi, 0	       147	entry.c	FUNCTION_19	IF_1	CALL_2
0x40008db	          0x4889c7	                            mov rdi, rax	       147	entry.c	FUNCTION_19	IF_1	CALL_2
0x40008de	      0xe800000000	                          call 0x40008e3	       147	entry.c	FUNCTION_19	IF_1	CALL_2
0x40008e3	        0x488b45f8	                mov rax, qword [rbp - 8]	       148	entry.c	FUNCTION_19	IF_1	CALL_3
0x40008e7	        0x488b4018	            mov rax, qword [rax + 0x18] 	       148	entry.c	FUNCTION_19	IF_1	CALL_3
0x40008eb	        0x4883c028	                           add rax, 0x28	       148	entry.c	FUNCTION_19	IF_1	CALL_3
0x40008ef	      0xbe00000000	                              mov esi, 0	       148	entry.c	FUNCTION_19	IF_1	CALL_3
0x40008f4	          0x4889c7	                            mov rdi, rax	       148	entry.c	FUNCTION_19	IF_1	CALL_3
0x40008f7	      0xe800000000	                          call 0x40008fc	       148	entry.c	FUNCTION_19	IF_1	CALL_3
0x40008fc	              0x90	                                     nop	       150	entry.c	FUNCTION_19
0x40008fd	              0xc9	                                   leave	       150	entry.c	FUNCTION_19
0x40008fe	              0xc3	                                     ret	       150	entry.c	FUNCTION_19
write_entry	SWITCH,1:WHILE,0:ELSE,2:IF,19:DO,0:CALL,26:FOR,0:functions,0	360
0x4000cc2	              0x55	                                push rbp	       255	entry.c	FUNCTION_22
0x4000cc3	          0x4889e5	                            mov rbp, rsp	       255	entry.c	FUNCTION_22
0x4000cc6	              0x53	                                push rbx	       255	entry.c	FUNCTION_22
0x4000cc7	    0x4881ec380100	                          sub rsp, 0x138	       255	entry.c	FUNCTION_22
0x4000cce	    0x4889bdd8feff	            mov qword [rbp - 0x128], rdi	       255	entry.c	FUNCTION_22
0x4000cd5	    0x4889b5d0feff	            mov qword [rbp - 0x130], rsi	       255	entry.c	FUNCTION_22
0x4000cdc	    0x488995c8feff	            mov qword [rbp - 0x138], rdx	       255	entry.c	FUNCTION_22
0x4000ce3	    0x898dc4feffff	            mov dword [rbp - 0x13c], ecx	       255	entry.c	FUNCTION_22
0x4000ce9	    0x64488b042528	                mov rax, qword fs:[0x28]	       255	entry.c	FUNCTION_22
0x4000cf2	        0x488945e8	             mov qword [rbp - 0x18], rax	       255	entry.c	FUNCTION_22
0x4000cf6	            0x31c0	                            xor eax, eax	       255	entry.c	FUNCTION_22
0x4000cf8	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       256	entry.c	FUNCTION_22
0x4000cff	          0x8b4034	            mov eax, dword [rax + 0x34] 	       256	entry.c	FUNCTION_22
0x4000d02	      0x2500f00000	                         and eax, 0xf000	       256	entry.c	FUNCTION_22
0x4000d07	    0x8985f0feffff	            mov dword [rbp - 0x110], eax	       256	entry.c	FUNCTION_22
0x4000d0d	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       257	entry.c	FUNCTION_22
0x4000d14	        0x488b4018	            mov rax, qword [rax + 0x18] 	       257	entry.c	FUNCTION_22
0x4000d18	    0x48898510ffff	             mov qword [rbp - 0xf0], rax	       257	entry.c	FUNCTION_22
0x4000d1f	    0xc785e8feffff	              mov dword [rbp - 0x118], 0	       258	entry.c	FUNCTION_22
0x4000d29	    0x48c78530ffff	               mov qword [rbp - 0xd0], 0	       260	entry.c	FUNCTION_22
0x4000d34	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	       260	entry.c	FUNCTION_22
0x4000d3f	    0x48c78540ffff	               mov qword [rbp - 0xc0], 0	       260	entry.c	FUNCTION_22
0x4000d4a	    0x48c78500ffff	              mov qword [rbp - 0x100], 0	       263	entry.c	FUNCTION_22
0x4000d55	    0x81bdf0feffff	        cmp dword [rbp - 0x110], 0x8000 	       267	entry.c	FUNCTION_22	IF_1
0x4000d5f	            0x757c	                           jne 0x4000ddd	       267	entry.c	FUNCTION_22	IF_1
0x4000d61	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       269	entry.c	FUNCTION_22	IF_1
0x4000d68	        0x488d5044	                   lea rdx, [rax + 0x44]	       269	entry.c	FUNCTION_22	IF_1
0x4000d6c	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       268	entry.c	FUNCTION_22	IF_1	CALL_1
0x4000d73	        0x4883c058	                           add rax, 0x58	       268	entry.c	FUNCTION_22	IF_1	CALL_1
0x4000d77	          0x4889d6	                            mov rsi, rdx	       268	entry.c	FUNCTION_22	IF_1	CALL_1
0x4000d7a	          0x4889c7	                            mov rdi, rax	       268	entry.c	FUNCTION_22	IF_1	CALL_1
0x4000d7d	      0xe800000000	                          call 0x4000d82	       268	entry.c	FUNCTION_22	IF_1	CALL_1
0x4000d82	    0x48898518ffff	             mov qword [rbp - 0xe8], rax	       268	entry.c	FUNCTION_22	IF_1	CALL_1
0x4000d89	    0x4883bd18ffff	               cmp qword [rbp - 0xe8], 0	       270	entry.c	FUNCTION_22	IF_1	IF_2
0x4000d91	            0x744a	                            je 0x4000ddd	       270	entry.c	FUNCTION_22	IF_1	IF_2
0x4000d93	    0x4c8d8de8feff	                   lea r9, [rbp - 0x118]	       271	entry.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4000d9a	    0x448b85c4feff	            mov r8d, dword [rbp - 0x13c]	       271	entry.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4000da1	    0x488b8dc8feff	            mov rcx, qword [rbp - 0x138]	       271	entry.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4000da8	    0x488b9518ffff	             mov rdx, qword [rbp - 0xe8]	       271	entry.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4000daf	    0x488bb5d0feff	            mov rsi, qword [rbp - 0x130]	       271	entry.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4000db6	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       271	entry.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4000dbd	        0x4883ec08	                              sub rsp, 8	       271	entry.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4000dc1	    0x488dbd50ffff	                   lea rdi, [rbp - 0xb0]	       271	entry.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4000dc8	              0x57	                                push rdi	       271	entry.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4000dc9	          0x4889c7	                            mov rdi, rax	       271	entry.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4000dcc	      0xe811faffff	          call sym.streaming_write_entry	       271	entry.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4000dd1	        0x4883c410	                           add rsp, 0x10	       271	entry.c	FUNCTION_22	IF_1	IF_2	CALL_2
0x4000dd5	            0x85c0	                           test eax, eax	       270	entry.c	FUNCTION_22	IF_1	IF_2
0x4000dd7	     0xf849f040000	                            je 0x400127c	       270	entry.c	FUNCTION_22	IF_1	IF_2
0x4000ddd	    0x8b85f0feffff	            mov eax, dword [rbp - 0x110]	       277	entry.c	FUNCTION_22	SWITCH_1
0x4000de3	      0x3d00a00000	                         cmp eax, 0xa000	       277	entry.c	FUNCTION_22	SWITCH_1
0x4000de8	            0x741b	                            je 0x4000e05	       277	entry.c	FUNCTION_22	SWITCH_1
0x4000dea	      0x3d00e00000	                         cmp eax, 0xe000	       277	entry.c	FUNCTION_22	SWITCH_1
0x4000def	     0xf848a030000	                            je 0x400117f	       277	entry.c	FUNCTION_22	SWITCH_1
0x4000df5	      0x3d00800000	                         cmp eax, 0x8000	       277	entry.c	FUNCTION_22	SWITCH_1
0x4000dfa	     0xf84e1000000	                            je 0x4000ee1	       277	entry.c	FUNCTION_22	SWITCH_1
0x4000e00	      0xe954040000	                           jmp 0x4001259	       277	entry.c	FUNCTION_22	SWITCH_1
0x4000e05	    0x488d95f8feff	                  lea rdx, [rbp - 0x108]	       279	entry.c	FUNCTION_22	SWITCH_1	CALL_3
0x4000e0c	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       279	entry.c	FUNCTION_22	SWITCH_1	CALL_3
0x4000e13	          0x4889d6	                            mov rsi, rdx	       279	entry.c	FUNCTION_22	SWITCH_1	CALL_3
0x4000e16	          0x4889c7	                            mov rdi, rax	       279	entry.c	FUNCTION_22	SWITCH_1	CALL_3
0x4000e19	      0xe869f8ffff	                call sym.read_blob_entry	       279	entry.c	FUNCTION_22	SWITCH_1	CALL_3
0x4000e1e	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	       279	entry.c	FUNCTION_22	SWITCH_1	CALL_3
0x4000e25	    0x4883bd08ffff	               cmp qword [rbp - 0xf8], 0	       280	entry.c	FUNCTION_22	SWITCH_1	IF_3
0x4000e2d	            0x7539	                           jne 0x4000e68	       280	entry.c	FUNCTION_22	SWITCH_1	IF_3
0x4000e2f	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       281	entry.c	FUNCTION_22	SWITCH_1	IF_3
0x4000e36	        0x4883c044	                           add rax, 0x44	       281	entry.c	FUNCTION_22	SWITCH_1	IF_3
0x4000e3a	          0x4889c7	                            mov rdi, rax	       281	entry.c	FUNCTION_22	SWITCH_1	IF_3
0x4000e3d	      0xe800000000	                          call 0x4000e42	       281	entry.c	FUNCTION_22	SWITCH_1	IF_3
0x4000e42	          0x4889c2	                            mov rdx, rax	       281	entry.c	FUNCTION_22	SWITCH_1	IF_3
0x4000e45	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       281	entry.c	FUNCTION_22	SWITCH_1	IF_3
0x4000e4c	          0x4889c6	                            mov rsi, rax	       281	entry.c	FUNCTION_22	SWITCH_1	IF_3
0x4000e4f	      0xbf00000000	                              mov edi, 0	       281	entry.c	FUNCTION_22	SWITCH_1	IF_3
0x4000e54	      0xb800000000	                              mov eax, 0	       281	entry.c	FUNCTION_22	SWITCH_1	IF_3
0x4000e59	      0xe800000000	                          call 0x4000e5e	       281	entry.c	FUNCTION_22	SWITCH_1	IF_3
0x4000e5e	      0xe8ddf1ffff	                    call sym.const_error	       281	entry.c	FUNCTION_22	SWITCH_1	IF_3
0x4000e63	      0xe91d050000	                           jmp 0x4001385	       281	entry.c	FUNCTION_22	SWITCH_1	IF_3
0x4000e68	    0x8b0500000000	            mov eax, dword [0x04000e6e] 	       288	entry.c	FUNCTION_22	SWITCH_1	IF_4
0x4000e6e	            0x85c0	                           test eax, eax	       288	entry.c	FUNCTION_22	SWITCH_1	IF_4
0x4000e70	     0xf840a020000	                            je 0x4001080	       288	entry.c	FUNCTION_22	SWITCH_1	IF_4
0x4000e76	    0x83bdc4feffff	              cmp dword [rbp - 0x13c], 0	       288	entry.c	FUNCTION_22	SWITCH_1	IF_4
0x4000e7d	     0xf85fd010000	                           jne 0x4001080	       288	entry.c	FUNCTION_22	SWITCH_1	IF_4
0x4000e83	    0x488b95d0feff	            mov rdx, qword [rbp - 0x130]	       291	entry.c	FUNCTION_22	SWITCH_1	CALL_5
0x4000e8a	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       291	entry.c	FUNCTION_22	SWITCH_1	CALL_5
0x4000e91	          0x4889d6	                            mov rsi, rdx	       291	entry.c	FUNCTION_22	SWITCH_1	CALL_5
0x4000e94	          0x4889c7	                            mov rdi, rax	       291	entry.c	FUNCTION_22	SWITCH_1	CALL_5
0x4000e97	      0xe800000000	                          call 0x4000e9c	       291	entry.c	FUNCTION_22	SWITCH_1	CALL_5
0x4000e9c	    0x8985ecfeffff	            mov dword [rbp - 0x114], eax	       291	entry.c	FUNCTION_22	SWITCH_1	CALL_5
0x4000ea2	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       292	entry.c	FUNCTION_22	SWITCH_1	CALL_6
0x4000ea9	          0x4889c7	                            mov rdi, rax	       292	entry.c	FUNCTION_22	SWITCH_1	CALL_6
0x4000eac	      0xe800000000	                          call 0x4000eb1	       292	entry.c	FUNCTION_22	SWITCH_1	CALL_6
0x4000eb1	    0x83bdecfeffff	              cmp dword [rbp - 0x114], 0	       293	entry.c	FUNCTION_22	SWITCH_1	IF_5
0x4000eb8	     0xf84c1030000	                            je 0x400127f	       293	entry.c	FUNCTION_22	SWITCH_1	IF_5
0x4000ebe	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       294	entry.c	FUNCTION_22	SWITCH_1	IF_5
0x4000ec5	          0x4889c6	                            mov rsi, rax	       294	entry.c	FUNCTION_22	SWITCH_1	IF_5
0x4000ec8	      0xbf00000000	                              mov edi, 0	       294	entry.c	FUNCTION_22	SWITCH_1	IF_5
0x4000ecd	      0xb800000000	                              mov eax, 0	       294	entry.c	FUNCTION_22	SWITCH_1	IF_5
0x4000ed2	      0xe800000000	                          call 0x4000ed7	       294	entry.c	FUNCTION_22	SWITCH_1	IF_5
0x4000ed7	      0xe864f1ffff	                    call sym.const_error	       294	entry.c	FUNCTION_22	SWITCH_1	IF_5
0x4000edc	      0xe9a4040000	                           jmp 0x4001385	       294	entry.c	FUNCTION_22	SWITCH_1	IF_5
0x4000ee1	    0x4883bd10ffff	               cmp qword [rbp - 0xf0], 0	       302	entry.c	FUNCTION_22	SWITCH_1	IF_6
0x4000ee9	            0x7426	                            je 0x4000f11	       302	entry.c	FUNCTION_22	SWITCH_1	IF_6
0x4000eeb	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       302	entry.c	FUNCTION_22	SWITCH_1	IF_6
0x4000ef2	            0x8b00	                    mov eax, dword [rax]	       302	entry.c	FUNCTION_22	SWITCH_1	IF_6
0x4000ef4	          0x83f802	                              cmp eax, 2	       302	entry.c	FUNCTION_22	SWITCH_1	IF_6
0x4000ef7	            0x7518	                           jne 0x4000f11	       302	entry.c	FUNCTION_22	SWITCH_1	IF_6
0x4000ef9	    0x48c78508ffff	               mov qword [rbp - 0xf8], 0	       303	entry.c	FUNCTION_22	SWITCH_1	IF_6
0x4000f04	    0x48c785f8feff	              mov qword [rbp - 0x108], 0	       304	entry.c	FUNCTION_22	SWITCH_1	IF_6
0x4000f0f	            0xeb63	                           jmp 0x4000f74	       304	entry.c	FUNCTION_22	SWITCH_1	IF_6
0x4000f11	    0x488d95f8feff	                  lea rdx, [rbp - 0x108]	       306	entry.c	FUNCTION_22	SWITCH_1	ELSE_1	CALL_7
0x4000f18	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       306	entry.c	FUNCTION_22	SWITCH_1	ELSE_1	CALL_7
0x4000f1f	          0x4889d6	                            mov rsi, rdx	       306	entry.c	FUNCTION_22	SWITCH_1	ELSE_1	CALL_7
0x4000f22	          0x4889c7	                            mov rdi, rax	       306	entry.c	FUNCTION_22	SWITCH_1	ELSE_1	CALL_7
0x4000f25	      0xe85df7ffff	                call sym.read_blob_entry	       306	entry.c	FUNCTION_22	SWITCH_1	ELSE_1	CALL_7
0x4000f2a	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	       306	entry.c	FUNCTION_22	SWITCH_1	ELSE_1	CALL_7
0x4000f31	    0x4883bd08ffff	               cmp qword [rbp - 0xf8], 0	       307	entry.c	FUNCTION_22	SWITCH_1	ELSE_1	IF_7
0x4000f39	            0x7539	                           jne 0x4000f74	       307	entry.c	FUNCTION_22	SWITCH_1	ELSE_1	IF_7
0x4000f3b	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       308	entry.c	FUNCTION_22	SWITCH_1	ELSE_1	IF_7
0x4000f42	        0x4883c044	                           add rax, 0x44	       308	entry.c	FUNCTION_22	SWITCH_1	ELSE_1	IF_7
0x4000f46	          0x4889c7	                            mov rdi, rax	       308	entry.c	FUNCTION_22	SWITCH_1	ELSE_1	IF_7
0x4000f49	      0xe800000000	                          call 0x4000f4e	       308	entry.c	FUNCTION_22	SWITCH_1	ELSE_1	IF_7
0x4000f4e	          0x4889c2	                            mov rdx, rax	       308	entry.c	FUNCTION_22	SWITCH_1	ELSE_1	IF_7
0x4000f51	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       308	entry.c	FUNCTION_22	SWITCH_1	ELSE_1	IF_7
0x4000f58	          0x4889c6	                            mov rsi, rax	       308	entry.c	FUNCTION_22	SWITCH_1	ELSE_1	IF_7
0x4000f5b	      0xbf00000000	                              mov edi, 0	       308	entry.c	FUNCTION_22	SWITCH_1	ELSE_1	IF_7
0x4000f60	      0xb800000000	                              mov eax, 0	       308	entry.c	FUNCTION_22	SWITCH_1	ELSE_1	IF_7
0x4000f65	      0xe800000000	                          call 0x4000f6a	       308	entry.c	FUNCTION_22	SWITCH_1	ELSE_1	IF_7
0x4000f6a	      0xe8d1f0ffff	                    call sym.const_error	       308	entry.c	FUNCTION_22	SWITCH_1	ELSE_1	IF_7
0x4000f6f	      0xe911040000	                           jmp 0x4001385	       308	entry.c	FUNCTION_22	SWITCH_1	ELSE_1	IF_7
0x4000f74	    0x4883bd10ffff	               cmp qword [rbp - 0xf0], 0	       315	entry.c	FUNCTION_22	SWITCH_1	IF_8
0x4000f7c	     0xf8487000000	                            je 0x4001009	       315	entry.c	FUNCTION_22	SWITCH_1	IF_8
0x4000f82	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       315	entry.c	FUNCTION_22	SWITCH_1	IF_8
0x4000f89	            0x8b00	                    mov eax, dword [rax]	       315	entry.c	FUNCTION_22	SWITCH_1	IF_8
0x4000f8b	            0x85c0	                           test eax, eax	       315	entry.c	FUNCTION_22	SWITCH_1	IF_8
0x4000f8d	            0x747a	                            je 0x4001009	       315	entry.c	FUNCTION_22	SWITCH_1	IF_8
0x4000f8f	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	       316	entry.c	FUNCTION_22	SWITCH_1	IF_8	CALL_9
0x4000f96	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       316	entry.c	FUNCTION_22	SWITCH_1	IF_8	CALL_9
0x4000f9d	        0x488d7858	                   lea rdi, [rax + 0x58]	       316	entry.c	FUNCTION_22	SWITCH_1	IF_8	CALL_9
0x4000fa1	    0x488bb510ffff	             mov rsi, qword [rbp - 0xf0]	       316	entry.c	FUNCTION_22	SWITCH_1	IF_8	CALL_9
0x4000fa8	    0x488d8d30ffff	                   lea rcx, [rbp - 0xd0]	       316	entry.c	FUNCTION_22	SWITCH_1	IF_8	CALL_9
0x4000faf	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       316	entry.c	FUNCTION_22	SWITCH_1	IF_8	CALL_9
0x4000fb6	          0x4989f0	                             mov r8, rsi	       316	entry.c	FUNCTION_22	SWITCH_1	IF_8	CALL_9
0x4000fb9	          0x4889c6	                            mov rsi, rax	       316	entry.c	FUNCTION_22	SWITCH_1	IF_8	CALL_9
0x4000fbc	      0xe800000000	                          call 0x4000fc1	       316	entry.c	FUNCTION_22	SWITCH_1	IF_8	CALL_9
0x4000fc1	    0x8985ecfeffff	            mov dword [rbp - 0x114], eax	       316	entry.c	FUNCTION_22	SWITCH_1	IF_8	CALL_9
0x4000fc7	    0x83bdecfeffff	              cmp dword [rbp - 0x114], 0	       318	entry.c	FUNCTION_22	SWITCH_1	IF_8	IF_9	CALL_10
0x4000fce	            0x7469	                            je 0x4001039	       318	entry.c	FUNCTION_22	SWITCH_1	IF_8	IF_9	CALL_10
0x4000fd0	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       318	entry.c	FUNCTION_22	SWITCH_1	IF_8	IF_9	CALL_10
0x4000fd7	        0x488d5058	                   lea rdx, [rax + 0x58]	       318	entry.c	FUNCTION_22	SWITCH_1	IF_8	IF_9	CALL_10
0x4000fdb	    0x488b8510ffff	             mov rax, qword [rbp - 0xf0]	       318	entry.c	FUNCTION_22	SWITCH_1	IF_8	IF_9	CALL_10
0x4000fe2	        0x4883c028	                           add rax, 0x28	       318	entry.c	FUNCTION_22	SWITCH_1	IF_8	IF_9	CALL_10
0x4000fe6	          0x4889d6	                            mov rsi, rdx	       318	entry.c	FUNCTION_22	SWITCH_1	IF_8	IF_9	CALL_10
0x4000fe9	          0x4889c7	                            mov rdi, rax	       318	entry.c	FUNCTION_22	SWITCH_1	IF_8	IF_9	CALL_10
0x4000fec	      0xe800000000	                          call 0x4000ff1	       318	entry.c	FUNCTION_22	SWITCH_1	IF_8	IF_9	CALL_10
0x4000ff1	            0x85c0	                           test eax, eax	       318	entry.c	FUNCTION_22	SWITCH_1	IF_8	IF_9	CALL_10
0x4000ff3	            0x7444	                            je 0x4001039	       318	entry.c	FUNCTION_22	SWITCH_1	IF_8	IF_9	CALL_10
0x4000ff5	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       319	entry.c	FUNCTION_22	SWITCH_1	IF_8	IF_9	CALL_11
0x4000ffc	          0x4889c7	                            mov rdi, rax	       319	entry.c	FUNCTION_22	SWITCH_1	IF_8	IF_9	CALL_11
0x4000fff	      0xe800000000	                          call 0x4001004	       319	entry.c	FUNCTION_22	SWITCH_1	IF_8	IF_9	CALL_11
0x4001004	      0xe977030000	                           jmp 0x4001380	       320	entry.c	FUNCTION_22	SWITCH_1	IF_8	IF_9
0x4001009	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	       323	entry.c	FUNCTION_22	SWITCH_1	CALL_12
0x4001010	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       323	entry.c	FUNCTION_22	SWITCH_1	CALL_12
0x4001017	        0x488d7858	                   lea rdi, [rax + 0x58]	       323	entry.c	FUNCTION_22	SWITCH_1	CALL_12
0x400101b	    0x488d8d30ffff	                   lea rcx, [rbp - 0xd0]	       323	entry.c	FUNCTION_22	SWITCH_1	CALL_12
0x4001022	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       323	entry.c	FUNCTION_22	SWITCH_1	CALL_12
0x4001029	          0x4889c6	                            mov rsi, rax	       323	entry.c	FUNCTION_22	SWITCH_1	CALL_12
0x400102c	      0xe800000000	                          call 0x4001031	       323	entry.c	FUNCTION_22	SWITCH_1	CALL_12
0x4001031	    0x8985ecfeffff	            mov dword [rbp - 0x114], eax	       323	entry.c	FUNCTION_22	SWITCH_1	CALL_12
0x4001037	            0xeb01	                           jmp 0x400103a	       323	entry.c	FUNCTION_22	SWITCH_1	CALL_12
0x4001039	              0x90	                                     nop	       318	entry.c	FUNCTION_22	SWITCH_1	IF_8	IF_9	CALL_10
0x400103a	    0x83bdecfeffff	              cmp dword [rbp - 0x114], 0	       325	entry.c	FUNCTION_22	SWITCH_1	IF_10
0x4001041	            0x743d	                            je 0x4001080	       325	entry.c	FUNCTION_22	SWITCH_1	IF_10
0x4001043	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       326	entry.c	FUNCTION_22	SWITCH_1	IF_10	CALL_13
0x400104a	          0x4889c7	                            mov rdi, rax	       326	entry.c	FUNCTION_22	SWITCH_1	IF_10	CALL_13
0x400104d	      0xe800000000	                          call 0x4001052	       326	entry.c	FUNCTION_22	SWITCH_1	IF_10	CALL_13
0x4001052	    0x488d9500ffff	                  lea rdx, [rbp - 0x100]	       327	entry.c	FUNCTION_22	SWITCH_1	IF_10	CALL_14
0x4001059	    0x488d8530ffff	                   lea rax, [rbp - 0xd0]	       327	entry.c	FUNCTION_22	SWITCH_1	IF_10	CALL_14
0x4001060	          0x4889d6	                            mov rsi, rdx	       327	entry.c	FUNCTION_22	SWITCH_1	IF_10	CALL_14
0x4001063	          0x4889c7	                            mov rdi, rax	       327	entry.c	FUNCTION_22	SWITCH_1	IF_10	CALL_14
0x4001066	      0xe800000000	                          call 0x400106b	       327	entry.c	FUNCTION_22	SWITCH_1	IF_10	CALL_14
0x400106b	    0x48898508ffff	             mov qword [rbp - 0xf8], rax	       327	entry.c	FUNCTION_22	SWITCH_1	IF_10	CALL_14
0x4001072	    0x488b8500ffff	            mov rax, qword [rbp - 0x100]	       328	entry.c	FUNCTION_22	SWITCH_1	IF_10
0x4001079	    0x488985f8feff	            mov qword [rbp - 0x108], rax	       328	entry.c	FUNCTION_22	SWITCH_1	IF_10
0x4001080	    0x8b95c4feffff	            mov edx, dword [rbp - 0x13c]	       337	entry.c	FUNCTION_22	SWITCH_1	CALL_15
0x4001086	    0x488b8dd8feff	            mov rcx, qword [rbp - 0x128]	       337	entry.c	FUNCTION_22	SWITCH_1	CALL_15
0x400108d	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       337	entry.c	FUNCTION_22	SWITCH_1	CALL_15
0x4001094	          0x4889ce	                            mov rsi, rcx	       337	entry.c	FUNCTION_22	SWITCH_1	CALL_15
0x4001097	          0x4889c7	                            mov rdi, rax	       337	entry.c	FUNCTION_22	SWITCH_1	CALL_15
0x400109a	      0xe862f6ffff	                 call sym.open_output_fd	       337	entry.c	FUNCTION_22	SWITCH_1	CALL_15
0x400109f	    0x8985f4feffff	            mov dword [rbp - 0x10c], eax	       337	entry.c	FUNCTION_22	SWITCH_1	CALL_15
0x40010a5	    0x83bdf4feffff	              cmp dword [rbp - 0x10c], 0	       338	entry.c	FUNCTION_22	SWITCH_1	IF_11
0x40010ac	            0x7932	                           jns 0x40010e0	       338	entry.c	FUNCTION_22	SWITCH_1	IF_11
0x40010ae	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       339	entry.c	FUNCTION_22	SWITCH_1	IF_11	CALL_16
0x40010b5	          0x4889c7	                            mov rdi, rax	       339	entry.c	FUNCTION_22	SWITCH_1	IF_11	CALL_16
0x40010b8	      0xe800000000	                          call 0x40010bd	       339	entry.c	FUNCTION_22	SWITCH_1	IF_11	CALL_16
0x40010bd	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       340	entry.c	FUNCTION_22	SWITCH_1	IF_11
0x40010c4	          0x4889c6	                            mov rsi, rax	       340	entry.c	FUNCTION_22	SWITCH_1	IF_11
0x40010c7	      0xbf00000000	                              mov edi, 0	       340	entry.c	FUNCTION_22	SWITCH_1	IF_11
0x40010cc	      0xb800000000	                              mov eax, 0	       340	entry.c	FUNCTION_22	SWITCH_1	IF_11
0x40010d1	      0xe800000000	                          call 0x40010d6	       340	entry.c	FUNCTION_22	SWITCH_1	IF_11
0x40010d6	      0xe865efffff	                    call sym.const_error	       340	entry.c	FUNCTION_22	SWITCH_1	IF_11
0x40010db	      0xe9a5020000	                           jmp 0x4001385	       340	entry.c	FUNCTION_22	SWITCH_1	IF_11
0x40010e0	    0x488b95f8feff	            mov rdx, qword [rbp - 0x108]	       343	entry.c	FUNCTION_22	SWITCH_1	CALL_17
0x40010e7	    0x488b8d08ffff	             mov rcx, qword [rbp - 0xf8]	       343	entry.c	FUNCTION_22	SWITCH_1	CALL_17
0x40010ee	    0x8b85f4feffff	            mov eax, dword [rbp - 0x10c]	       343	entry.c	FUNCTION_22	SWITCH_1	CALL_17
0x40010f4	          0x4889ce	                            mov rsi, rcx	       343	entry.c	FUNCTION_22	SWITCH_1	CALL_17
0x40010f7	            0x89c7	                            mov edi, eax	       343	entry.c	FUNCTION_22	SWITCH_1	CALL_17
0x40010f9	      0xe800000000	                          call 0x40010fe	       343	entry.c	FUNCTION_22	SWITCH_1	CALL_17
0x40010fe	    0x48898520ffff	             mov qword [rbp - 0xe0], rax	       343	entry.c	FUNCTION_22	SWITCH_1	CALL_17
0x4001105	    0x83bdc4feffff	              cmp dword [rbp - 0x13c], 0	       344	entry.c	FUNCTION_22	SWITCH_1	IF_12
0x400110c	            0x7524	                           jne 0x4001132	       344	entry.c	FUNCTION_22	SWITCH_1	IF_12
0x400110e	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       345	entry.c	FUNCTION_22	SWITCH_1	CALL_18
0x4001115	    0x488b8dc8feff	            mov rcx, qword [rbp - 0x138]	       345	entry.c	FUNCTION_22	SWITCH_1	CALL_18
0x400111c	    0x8b85f4feffff	            mov eax, dword [rbp - 0x10c]	       345	entry.c	FUNCTION_22	SWITCH_1	CALL_18
0x4001122	          0x4889ce	                            mov rsi, rcx	       345	entry.c	FUNCTION_22	SWITCH_1	CALL_18
0x4001125	            0x89c7	                            mov edi, eax	       345	entry.c	FUNCTION_22	SWITCH_1	CALL_18
0x4001127	      0xe86af6ffff	                   call sym.fstat_output	       345	entry.c	FUNCTION_22	SWITCH_1	CALL_18
0x400112c	    0x8985e8feffff	            mov dword [rbp - 0x118], eax	       345	entry.c	FUNCTION_22	SWITCH_1	CALL_18
0x4001132	    0x8b85f4feffff	            mov eax, dword [rbp - 0x10c]	       346	entry.c	FUNCTION_22	SWITCH_1	CALL_19
0x4001138	            0x89c7	                            mov edi, eax	       346	entry.c	FUNCTION_22	SWITCH_1	CALL_19
0x400113a	      0xe800000000	                          call 0x400113f	       346	entry.c	FUNCTION_22	SWITCH_1	CALL_19
0x400113f	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	       347	entry.c	FUNCTION_22	SWITCH_1	CALL_20
0x4001146	          0x4889c7	                            mov rdi, rax	       347	entry.c	FUNCTION_22	SWITCH_1	CALL_20
0x4001149	      0xe800000000	                          call 0x400114e	       347	entry.c	FUNCTION_22	SWITCH_1	CALL_20
0x400114e	    0x4883bd20ffff	               cmp qword [rbp - 0xe0], 0	       348	entry.c	FUNCTION_22	SWITCH_1	IF_13
0x4001156	     0xf8926010000	                           jns 0x4001282	       348	entry.c	FUNCTION_22	SWITCH_1	IF_13
0x400115c	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       349	entry.c	FUNCTION_22	SWITCH_1	IF_13
0x4001163	          0x4889c6	                            mov rsi, rax	       349	entry.c	FUNCTION_22	SWITCH_1	IF_13
0x4001166	      0xbf00000000	                              mov edi, 0	       349	entry.c	FUNCTION_22	SWITCH_1	IF_13
0x400116b	      0xb800000000	                              mov eax, 0	       349	entry.c	FUNCTION_22	SWITCH_1	IF_13
0x4001170	      0xe800000000	                          call 0x4001175	       349	entry.c	FUNCTION_22	SWITCH_1	IF_13
0x4001175	      0xe8c6eeffff	                    call sym.const_error	       349	entry.c	FUNCTION_22	SWITCH_1	IF_13
0x400117a	      0xe906020000	                           jmp 0x4001385	       349	entry.c	FUNCTION_22	SWITCH_1	IF_13
0x400117f	    0x83bdc4feffff	              cmp dword [rbp - 0x13c], 0	       353	entry.c	FUNCTION_22	SWITCH_1	IF_14
0x4001186	            0x7423	                            je 0x40011ab	       353	entry.c	FUNCTION_22	SWITCH_1	IF_14
0x4001188	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       354	entry.c	FUNCTION_22	SWITCH_1	IF_14
0x400118f	          0x4889c6	                            mov rsi, rax	       354	entry.c	FUNCTION_22	SWITCH_1	IF_14
0x4001192	      0xbf00000000	                              mov edi, 0	       354	entry.c	FUNCTION_22	SWITCH_1	IF_14
0x4001197	      0xb800000000	                              mov eax, 0	       354	entry.c	FUNCTION_22	SWITCH_1	IF_14
0x400119c	      0xe800000000	                          call 0x40011a1	       354	entry.c	FUNCTION_22	SWITCH_1	IF_14
0x40011a1	      0xe89aeeffff	                    call sym.const_error	       354	entry.c	FUNCTION_22	SWITCH_1	IF_14
0x40011a6	      0xe9da010000	                           jmp 0x4001385	       354	entry.c	FUNCTION_22	SWITCH_1	IF_14
0x40011ab	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       355	entry.c	FUNCTION_22	SWITCH_1	IF_15
0x40011b2	      0xbeff010000	                          mov esi, 0x1ff	       355	entry.c	FUNCTION_22	SWITCH_1	IF_15
0x40011b7	          0x4889c7	                            mov rdi, rax	       355	entry.c	FUNCTION_22	SWITCH_1	IF_15
0x40011ba	      0xe800000000	                          call 0x40011bf	       355	entry.c	FUNCTION_22	SWITCH_1	IF_15
0x40011bf	            0x85c0	                           test eax, eax	       355	entry.c	FUNCTION_22	SWITCH_1	IF_15
0x40011c1	            0x7923	                           jns 0x40011e6	       355	entry.c	FUNCTION_22	SWITCH_1	IF_15
0x40011c3	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       356	entry.c	FUNCTION_22	SWITCH_1	IF_15
0x40011ca	          0x4889c6	                            mov rsi, rax	       356	entry.c	FUNCTION_22	SWITCH_1	IF_15
0x40011cd	      0xbf00000000	                              mov edi, 0	       356	entry.c	FUNCTION_22	SWITCH_1	IF_15
0x40011d2	      0xb800000000	                              mov eax, 0	       356	entry.c	FUNCTION_22	SWITCH_1	IF_15
0x40011d7	      0xe800000000	                          call 0x40011dc	       356	entry.c	FUNCTION_22	SWITCH_1	IF_15
0x40011dc	      0xe85feeffff	                    call sym.const_error	       356	entry.c	FUNCTION_22	SWITCH_1	IF_15
0x40011e1	      0xe99f010000	                           jmp 0x4001385	       356	entry.c	FUNCTION_22	SWITCH_1	IF_15
0x40011e6	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       357	entry.c	FUNCTION_22	SWITCH_1	CALL_21
0x40011ed	          0x4889c7	                            mov rdi, rax	       357	entry.c	FUNCTION_22	SWITCH_1	CALL_21
0x40011f0	      0xe800000000	                          call 0x40011f5	       357	entry.c	FUNCTION_22	SWITCH_1	CALL_21
0x40011f5	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	       357	entry.c	FUNCTION_22	SWITCH_1	CALL_21
0x40011fc	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	       358	entry.c	FUNCTION_22	SWITCH_1	IF_16
0x4001204	            0x747f	                            je 0x4001285	       358	entry.c	FUNCTION_22	SWITCH_1	IF_16
0x4001206	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       361	entry.c	FUNCTION_22	SWITCH_1	IF_16
0x400120d	         0xfb64020	           movzx eax, byte [rax + 0x20] 	       361	entry.c	FUNCTION_22	SWITCH_1	IF_16
0x4001211	          0x83e001	                              and eax, 1	       361	entry.c	FUNCTION_22	SWITCH_1	IF_16
0x4001214	            0x84c0	                             test al, al	       359	entry.c	FUNCTION_22	SWITCH_1	IF_16	CALL_22
0x4001216	            0x7407	                            je 0x400121f	       359	entry.c	FUNCTION_22	SWITCH_1	IF_16	CALL_22
0x4001218	      0xbb02000000	                              mov ebx, 2	       359	entry.c	FUNCTION_22	SWITCH_1	IF_16	CALL_22
0x400121d	            0xeb05	                           jmp 0x4001224	       359	entry.c	FUNCTION_22	SWITCH_1	IF_16	CALL_22
0x400121f	      0xbb00000000	                              mov ebx, 0	       359	entry.c	FUNCTION_22	SWITCH_1	IF_16	CALL_22
0x4001224	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       360	entry.c	FUNCTION_22	SWITCH_1	IF_16	CALL_23
0x400122b	        0x4883c044	                           add rax, 0x44	       360	entry.c	FUNCTION_22	SWITCH_1	IF_16	CALL_23
0x400122f	          0x4889c7	                            mov rdi, rax	       360	entry.c	FUNCTION_22	SWITCH_1	IF_16	CALL_23
0x4001232	      0xe800000000	                          call 0x4001237	       360	entry.c	FUNCTION_22	SWITCH_1	IF_16	CALL_23
0x4001237	          0x4889c2	                            mov rdx, rax	       360	entry.c	FUNCTION_22	SWITCH_1	IF_16	CALL_23
0x400123a	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       359	entry.c	FUNCTION_22	SWITCH_1	IF_16	CALL_22
0x4001241	        0x4883c058	                           add rax, 0x58	       359	entry.c	FUNCTION_22	SWITCH_1	IF_16	CALL_22
0x4001245	            0x89d9	                            mov ecx, ebx	       359	entry.c	FUNCTION_22	SWITCH_1	IF_16	CALL_22
0x4001247	      0xbe00000000	                              mov esi, 0	       359	entry.c	FUNCTION_22	SWITCH_1	IF_16	CALL_22
0x400124c	          0x4889c7	                            mov rdi, rax	       359	entry.c	FUNCTION_22	SWITCH_1	IF_16	CALL_22
0x400124f	      0xe800000000	                          call 0x4001254	       359	entry.c	FUNCTION_22	SWITCH_1	IF_16	CALL_22
0x4001254	      0xe92c010000	                           jmp 0x4001385	       359	entry.c	FUNCTION_22	SWITCH_1	IF_16	CALL_22
0x4001259	    0x488b85d0feff	            mov rax, qword [rbp - 0x130]	       365	entry.c	FUNCTION_22	SWITCH_1
0x4001260	          0x4889c6	                            mov rsi, rax	       365	entry.c	FUNCTION_22	SWITCH_1
0x4001263	      0xbf00000000	                              mov edi, 0	       365	entry.c	FUNCTION_22	SWITCH_1
0x4001268	      0xb800000000	                              mov eax, 0	       365	entry.c	FUNCTION_22	SWITCH_1
0x400126d	      0xe800000000	                          call 0x4001272	       365	entry.c	FUNCTION_22	SWITCH_1
0x4001272	      0xe8c9edffff	                    call sym.const_error	       365	entry.c	FUNCTION_22	SWITCH_1
0x4001277	      0xe909010000	                           jmp 0x4001385	       365	entry.c	FUNCTION_22	SWITCH_1
0x400127c	              0x90	                                     nop	       274	entry.c	FUNCTION_22	IF_1	IF_2
0x400127d	            0xeb07	                           jmp 0x4001286	       274	entry.c	FUNCTION_22	IF_1	IF_2
0x400127f	              0x90	                                     nop	       295	entry.c	FUNCTION_22	SWITCH_1
0x4001280	            0xeb04	                           jmp 0x4001286	       295	entry.c	FUNCTION_22	SWITCH_1
0x4001282	              0x90	                                     nop	       350	entry.c	FUNCTION_22	SWITCH_1
0x4001283	            0xeb01	                           jmp 0x4001286	       350	entry.c	FUNCTION_22	SWITCH_1
0x4001285	              0x90	                                     nop	       362	entry.c	FUNCTION_22	SWITCH_1
0x4001286	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       369	entry.c	FUNCTION_22	IF_17
0x400128d	         0xfb64020	           movzx eax, byte [rax + 0x20] 	       369	entry.c	FUNCTION_22	IF_17
0x4001291	          0x83e008	                              and eax, 8	       369	entry.c	FUNCTION_22	IF_17
0x4001294	            0x84c0	                             test al, al	       369	entry.c	FUNCTION_22	IF_17
0x4001296	     0xf84e4000000	                            je 0x4001380	       369	entry.c	FUNCTION_22	IF_17
0x400129c	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       370	entry.c	FUNCTION_22	IF_17	CALL_24
0x40012a3	          0x488b00	                    mov rax, qword [rax]	       370	entry.c	FUNCTION_22	IF_17	CALL_24
0x40012a6	          0x4885c0	                           test rax, rax	       370	entry.c	FUNCTION_22	IF_17	CALL_24
0x40012a9	            0x7519	                           jne 0x40012c4	       370	entry.c	FUNCTION_22	IF_17	CALL_24
0x40012ab	      0xb900000000	                              mov ecx, 0	       370	entry.c	FUNCTION_22	IF_17	CALL_24
0x40012b0	      0xba72010000	                          mov edx, 0x172	       370	entry.c	FUNCTION_22	IF_17	CALL_24
0x40012b5	      0xbe00000000	                              mov esi, 0	       370	entry.c	FUNCTION_22	IF_17	CALL_24
0x40012ba	      0xbf00000000	                              mov edi, 0	       370	entry.c	FUNCTION_22	IF_17	CALL_24
0x40012bf	      0xe800000000	                          call 0x40012c4	       370	entry.c	FUNCTION_22	IF_17	CALL_24
0x40012c4	    0x8b85e8feffff	            mov eax, dword [rbp - 0x118]	       371	entry.c	FUNCTION_22	IF_17	IF_18
0x40012ca	            0x85c0	                           test eax, eax	       371	entry.c	FUNCTION_22	IF_17	IF_18
0x40012cc	            0x7545	                           jne 0x4001313	       371	entry.c	FUNCTION_22	IF_17	IF_18
0x40012ce	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       372	entry.c	FUNCTION_22	IF_17	IF_18	IF_19
0x40012d5	        0x488d5058	                   lea rdx, [rax + 0x58]	       372	entry.c	FUNCTION_22	IF_17	IF_18	IF_19
0x40012d9	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	       372	entry.c	FUNCTION_22	IF_17	IF_18	IF_19
0x40012e0	          0x4889c6	                            mov rsi, rax	       372	entry.c	FUNCTION_22	IF_17	IF_18	IF_19
0x40012e3	          0x4889d7	                            mov rdi, rdx	       372	entry.c	FUNCTION_22	IF_17	IF_18	IF_19
0x40012e6	      0xe800000000	                          call 0x40012eb	       372	entry.c	FUNCTION_22	IF_17	IF_18	IF_19
0x40012eb	            0x85c0	                           test eax, eax	       372	entry.c	FUNCTION_22	IF_17	IF_18	IF_19
0x40012ed	            0x7924	                           jns 0x4001313	       372	entry.c	FUNCTION_22	IF_17	IF_18	IF_19
0x40012ef	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       373	entry.c	FUNCTION_22	IF_17	IF_18	IF_19
0x40012f6	        0x4883c058	                           add rax, 0x58	       373	entry.c	FUNCTION_22	IF_17	IF_18	IF_19
0x40012fa	          0x4889c6	                            mov rsi, rax	       373	entry.c	FUNCTION_22	IF_17	IF_18	IF_19
0x40012fd	      0xbf00000000	                              mov edi, 0	       373	entry.c	FUNCTION_22	IF_17	IF_18	IF_19
0x4001302	      0xb800000000	                              mov eax, 0	       373	entry.c	FUNCTION_22	IF_17	IF_18	IF_19
0x4001307	      0xe800000000	                          call 0x400130c	       373	entry.c	FUNCTION_22	IF_17	IF_18	IF_19
0x400130c	      0xe82fedffff	                    call sym.const_error	       373	entry.c	FUNCTION_22	IF_17	IF_18	IF_19
0x4001311	            0xeb72	                           jmp 0x4001385	       373	entry.c	FUNCTION_22	IF_17	IF_18	IF_19
0x4001313	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	       375	entry.c	FUNCTION_22	IF_17	CALL_25
0x400131a	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       375	entry.c	FUNCTION_22	IF_17	CALL_25
0x4001321	          0x4889d6	                            mov rsi, rdx	       375	entry.c	FUNCTION_22	IF_17	CALL_25
0x4001324	          0x4889c7	                            mov rdi, rax	       375	entry.c	FUNCTION_22	IF_17	CALL_25
0x4001327	      0xe800000000	                          call 0x400132c	       375	entry.c	FUNCTION_22	IF_17	CALL_25
0x400132c	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       376	entry.c	FUNCTION_22	IF_17
0x4001333	          0x8b4038	            mov eax, dword [rax + 0x38] 	       376	entry.c	FUNCTION_22	IF_17
0x4001336	       0xd00000008	                    or eax, section_end.	       376	entry.c	FUNCTION_22	IF_17
0x400133b	            0x89c2	                            mov edx, eax	       376	entry.c	FUNCTION_22	IF_17
0x400133d	    0x488b85d8feff	            mov rax, qword [rbp - 0x128]	       376	entry.c	FUNCTION_22	IF_17
0x4001344	          0x895038	             mov dword [rax + 0x38], edx	       376	entry.c	FUNCTION_22	IF_17
0x4001347	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       377	entry.c	FUNCTION_22	IF_17	CALL_26
0x400134e	          0x488b00	                    mov rax, qword [rax]	       377	entry.c	FUNCTION_22	IF_17	CALL_26
0x4001351	    0x488b95d8feff	            mov rdx, qword [rbp - 0x128]	       377	entry.c	FUNCTION_22	IF_17	CALL_26
0x4001358	          0x4889d6	                            mov rsi, rdx	       377	entry.c	FUNCTION_22	IF_17	CALL_26
0x400135b	          0x4889c7	                            mov rdi, rax	       377	entry.c	FUNCTION_22	IF_17	CALL_26
0x400135e	      0xe834efffff	         call sym.mark_fsmonitor_invalid	       377	entry.c	FUNCTION_22	IF_17	CALL_26
0x4001363	    0x488b85c8feff	            mov rax, qword [rbp - 0x138]	       378	entry.c	FUNCTION_22	IF_17
0x400136a	          0x488b00	                    mov rax, qword [rax]	       378	entry.c	FUNCTION_22	IF_17
0x400136d	    0x488b95c8feff	            mov rdx, qword [rbp - 0x138]	       378	entry.c	FUNCTION_22	IF_17
0x4001374	          0x488b12	                    mov rdx, qword [rdx]	       378	entry.c	FUNCTION_22	IF_17
0x4001377	          0x8b5214	            mov edx, dword [rdx + 0x14] 	       378	entry.c	FUNCTION_22	IF_17
0x400137a	          0x83ca02	                               or edx, 2	       378	entry.c	FUNCTION_22	IF_17
0x400137d	          0x895014	             mov dword [rax + 0x14], edx	       378	entry.c	FUNCTION_22	IF_17
0x4001380	      0xb800000000	                              mov eax, 0	       381	entry.c	FUNCTION_22
0x4001385	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       382	entry.c	FUNCTION_22
0x4001389	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       382	entry.c	FUNCTION_22
0x4001392	            0x7405	                            je 0x4001399	       382	entry.c	FUNCTION_22
0x4001394	      0xe800000000	                          call 0x4001399	       382	entry.c	FUNCTION_22
0x4001399	        0x488b5df8	                mov rbx, qword [rbp - 8]	       382	entry.c	FUNCTION_22
0x400139d	              0xc9	                                   leave	       382	entry.c	FUNCTION_22
0x400139e	              0xc3	                                     ret	       382	entry.c	FUNCTION_22
finish_delayed_checkout	SWITCH,0:WHILE,1:ELSE,0:IF,1:DO,0:CALL,7:FOR,0:functions,2	217
0x4000954	              0x55	                                push rbp	       164	entry.c	FUNCTION_21
0x4000955	          0x4889e5	                            mov rbp, rsp	       164	entry.c	FUNCTION_21
0x4000958	              0x53	                                push rbx	       164	entry.c	FUNCTION_21
0x4000959	    0x4881ec880000	                           sub rsp, 0x88	       164	entry.c	FUNCTION_21
0x4000960	    0x4889bd78ffff	             mov qword [rbp - 0x88], rdi	       164	entry.c	FUNCTION_21
0x4000967	    0x64488b042528	                mov rax, qword fs:[0x28]	       164	entry.c	FUNCTION_21
0x4000970	        0x488945e8	             mov qword [rbp - 0x18], rax	       164	entry.c	FUNCTION_21
0x4000974	            0x31c0	                            xor eax, eax	       164	entry.c	FUNCTION_21
0x4000976	    0xc74588000000	               mov dword [rbp - 0x78], 0	       165	entry.c	FUNCTION_21
0x400097d	    0x48c745980000	               mov qword [rbp - 0x68], 0	       167	entry.c	FUNCTION_21
0x4000985	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       170	entry.c	FUNCTION_21
0x400098c	        0x488b4018	            mov rax, qword [rax + 0x18] 	       170	entry.c	FUNCTION_21
0x4000990	        0x488945b0	             mov qword [rbp - 0x50], rax	       170	entry.c	FUNCTION_21
0x4000994	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       172	entry.c	FUNCTION_21	IF_1
0x400099b	        0x488b4018	            mov rax, qword [rax + 0x18] 	       172	entry.c	FUNCTION_21	IF_1
0x400099f	          0x4885c0	                           test rax, rax	       172	entry.c	FUNCTION_21	IF_1
0x40009a2	            0x7508	                           jne 0x40009ac	       172	entry.c	FUNCTION_21	IF_1
0x40009a4	          0x8b4588	             mov eax, dword [rbp - 0x78]	       173	entry.c	FUNCTION_21	IF_1
0x40009a7	      0xe9f8020000	                           jmp 0x4000ca4	       173	entry.c	FUNCTION_21	IF_1
0x40009ac	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       175	entry.c	FUNCTION_21
0x40009b0	    0xc70002000000	                      mov dword [rax], 2	       175	entry.c	FUNCTION_21
0x40009b6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       176	entry.c	FUNCTION_21
0x40009ba	          0x8b4030	            mov eax, dword [rax + 0x30] 	       176	entry.c	FUNCTION_21
0x40009bd	          0x89458c	             mov dword [rbp - 0x74], eax	       176	entry.c	FUNCTION_21
0x40009c0	          0x8b5d8c	             mov ebx, dword [rbp - 0x74]	       177	entry.c	FUNCTION_21	CALL_2
0x40009c3	      0xbf00000000	                              mov edi, 0	       177	entry.c	FUNCTION_21	CALL_2
0x40009c8	      0xe8f1f7ffff	                               call sym.	       177	entry.c	FUNCTION_21	CALL_2
0x40009cd	          0x4889de	                            mov rsi, rbx	       177	entry.c	FUNCTION_21	CALL_2
0x40009d0	          0x4889c7	                            mov rdi, rax	       177	entry.c	FUNCTION_21	CALL_2
0x40009d3	      0xe800000000	                          call 0x40009d8	       177	entry.c	FUNCTION_21	CALL_2
0x40009d8	        0x48894590	             mov qword [rbp - 0x70], rax	       177	entry.c	FUNCTION_21	CALL_2
0x40009dc	      0xe9fb010000	                           jmp 0x4000bdc	       178	entry.c	FUNCTION_21	WHILE_1
0x40009e1	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       179	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x40009e5	        0x488b4008	                mov rax, qword [rax + 8]	       179	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x40009e9	        0x488945a0	             mov qword [rbp - 0x60], rax	       179	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x40009ed	      0xe9ac010000	                           jmp 0x4000b9e	       179	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x40009f2	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       180	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x40009fa	    0xc745c8000000	               mov dword [rbp - 0x38], 0	       180	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x4000a01	    0xc745cc000000	               mov dword [rbp - 0x34], 0	       180	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x4000a08	         0xfb645d0	            movzx eax, byte [rbp - 0x30]	       180	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x4000a0c	          0x83e0fe	                     and eax, 0xfffffffe	       180	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x4000a0f	          0x8845d0	               mov byte [rbp - 0x30], al	       180	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x4000a12	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       180	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x4000a1a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       181	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1	CALL_1
0x4000a1e	          0x8b4030	            mov eax, dword [rax + 0x30] 	       181	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1	CALL_1
0x4000a21	          0x8b558c	             mov edx, dword [rbp - 0x74]	       181	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1	CALL_1
0x4000a24	            0x29c2	                            sub edx, eax	       181	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1	CALL_1
0x4000a26	            0x89d0	                            mov eax, edx	       181	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1	CALL_1
0x4000a28	            0x89c2	                            mov edx, eax	       181	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1	CALL_1
0x4000a2a	        0x488b4590	             mov rax, qword [rbp - 0x70]	       181	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1	CALL_1
0x4000a2e	          0x4889d6	                            mov rsi, rdx	       181	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1	CALL_1
0x4000a31	          0x4889c7	                            mov rdi, rax	       181	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1	CALL_1
0x4000a34	      0xe800000000	                          call 0x4000a39	       181	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1	CALL_1
0x4000a39	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       183	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1	IF_1	CALL_2
0x4000a3d	          0x488b00	                    mov rax, qword [rax]	       183	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1	IF_1	CALL_2
0x4000a40	        0x488d55c0	                   lea rdx, [rbp - 0x40]	       183	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1	IF_1	CALL_2
0x4000a44	          0x4889d6	                            mov rsi, rdx	       183	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1	IF_1	CALL_2
0x4000a47	          0x4889c7	                            mov rdi, rax	       183	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1	IF_1	CALL_2
0x4000a4a	      0xe800000000	                          call 0x4000a4f	       183	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1	IF_1	CALL_2
0x4000a4f	            0x85c0	                           test eax, eax	       183	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1	IF_1	CALL_2
0x4000a51	            0x7517	                           jne 0x4000a6a	       183	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1	IF_1	CALL_2
0x4000a53	    0xc74588010000	               mov dword [rbp - 0x78], 1	       185	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1	IF_1
0x4000a5a	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       186	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1	IF_1
0x4000a5e	    0x48c700000000	                      mov qword [rax], 0	       186	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1	IF_1
0x4000a65	      0xe92f010000	                           jmp 0x4000b99	       187	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1	IF_1
0x4000a6a	          0x8b45c8	             mov eax, dword [rbp - 0x38]	       189	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1	IF_2
0x4000a6d	            0x85c0	                           test eax, eax	       189	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1	IF_2
0x4000a6f	            0x7510	                           jne 0x4000a81	       189	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1	IF_2
0x4000a71	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       196	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1	IF_2
0x4000a75	    0x48c700000000	                      mov qword [rax], 0	       196	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1	IF_2
0x4000a7c	      0xe918010000	                           jmp 0x4000b99	       197	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1	IF_2
0x4000a81	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       205	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1	CALL_3
0x4000a85	        0x488d7828	                   lea rdi, [rax + 0x28]	       205	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1	CALL_3
0x4000a89	        0x488d45c0	                   lea rax, [rbp - 0x40]	       205	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1	CALL_3
0x4000a8d	          0x4889c1	                            mov rcx, rax	       205	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1	CALL_3
0x4000a90	      0xba00000000	                              mov edx, 0	       205	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1	CALL_3
0x4000a95	      0xbe00000000	                              mov esi, 0	       205	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1	CALL_3
0x4000a9a	      0xe800000000	                          call 0x4000a9f	       205	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1	CALL_3
0x4000a9f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       208	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x4000aa3	        0x488945a8	             mov qword [rbp - 0x58], rax	       208	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x4000aa7	      0xe9cc000000	                           jmp 0x4000b78	       208	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x4000aac	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       211	entry.c	FUNCTION_21	WHILE_1	IF_1
0x4000ab0	        0x488b4008	                mov rax, qword [rax + 8]	       211	entry.c	FUNCTION_21	WHILE_1	IF_1
0x4000ab4	          0x4885c0	                           test rax, rax	       211	entry.c	FUNCTION_21	WHILE_1	IF_1
0x4000ab7	            0x7539	                           jne 0x4000af2	       211	entry.c	FUNCTION_21	WHILE_1	IF_1
0x4000ab9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       212	entry.c	FUNCTION_21	WHILE_1	IF_1
0x4000abd	          0x488b10	                    mov rdx, qword [rax]	       212	entry.c	FUNCTION_21	WHILE_1	IF_1
0x4000ac0	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       212	entry.c	FUNCTION_21	WHILE_1	IF_1
0x4000ac4	          0x488b00	                    mov rax, qword [rax]	       212	entry.c	FUNCTION_21	WHILE_1	IF_1
0x4000ac7	          0x4889c6	                            mov rsi, rax	       212	entry.c	FUNCTION_21	WHILE_1	IF_1
0x4000aca	      0xbf00000000	                              mov edi, 0	       212	entry.c	FUNCTION_21	WHILE_1	IF_1
0x4000acf	      0xb800000000	                              mov eax, 0	       212	entry.c	FUNCTION_21	WHILE_1	IF_1
0x4000ad4	      0xe800000000	                          call 0x4000ad9	       212	entry.c	FUNCTION_21	WHILE_1	IF_1
0x4000ad9	      0xe862f5ffff	                    call sym.const_error	       212	entry.c	FUNCTION_21	WHILE_1	IF_1
0x4000ade	        0x834d8801	                or dword [rbp - 0x78], 1	       216	entry.c	FUNCTION_21	WHILE_1	IF_1
0x4000ae2	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       222	entry.c	FUNCTION_21	WHILE_1	IF_1
0x4000ae6	    0x48c700000000	                      mov qword [rax], 0	       222	entry.c	FUNCTION_21	WHILE_1	IF_1
0x4000aed	      0xe981000000	                           jmp 0x4000b73	       223	entry.c	FUNCTION_21	WHILE_1	IF_1
0x4000af2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       226	entry.c	FUNCTION_21	WHILE_1	CALL_2
0x4000af6	          0x488b00	                    mov rax, qword [rax]	       226	entry.c	FUNCTION_21	WHILE_1	CALL_2
0x4000af9	          0x4889c7	                            mov rdi, rax	       226	entry.c	FUNCTION_21	WHILE_1	CALL_2
0x4000afc	      0xe800000000	                          call 0x4000b01	       226	entry.c	FUNCTION_21	WHILE_1	CALL_2
0x4000b01	            0x89c2	                            mov edx, eax	       225	entry.c	FUNCTION_21	WHILE_1	CALL_1
0x4000b03	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       225	entry.c	FUNCTION_21	WHILE_1	CALL_1
0x4000b07	          0x488b30	                    mov rsi, qword [rax]	       225	entry.c	FUNCTION_21	WHILE_1	CALL_1
0x4000b0a	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       225	entry.c	FUNCTION_21	WHILE_1	CALL_1
0x4000b11	          0x488b00	                    mov rax, qword [rax]	       225	entry.c	FUNCTION_21	WHILE_1	CALL_1
0x4000b14	      0xb900000000	                              mov ecx, 0	       225	entry.c	FUNCTION_21	WHILE_1	CALL_1
0x4000b19	          0x4889c7	                            mov rdi, rax	       225	entry.c	FUNCTION_21	WHILE_1	CALL_1
0x4000b1c	      0xe800000000	                          call 0x4000b21	       225	entry.c	FUNCTION_21	WHILE_1	CALL_1
0x4000b21	        0x488945b8	             mov qword [rbp - 0x48], rax	       225	entry.c	FUNCTION_21	WHILE_1	CALL_1
0x4000b25	      0x48837db800	               cmp qword [rbp - 0x48], 0	       227	entry.c	FUNCTION_21	WHILE_1	IF_2
0x4000b2a	            0x7440	                            je 0x4000b6c	       227	entry.c	FUNCTION_21	WHILE_1	IF_2
0x4000b2c	    0x488b8d78ffff	             mov rcx, qword [rbp - 0x88]	       228	entry.c	FUNCTION_21	WHILE_1	IF_2	CALL_3
0x4000b33	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       228	entry.c	FUNCTION_21	WHILE_1	IF_2	CALL_3
0x4000b37	      0xba00000000	                              mov edx, 0	       228	entry.c	FUNCTION_21	WHILE_1	IF_2	CALL_3
0x4000b3c	          0x4889ce	                            mov rsi, rcx	       228	entry.c	FUNCTION_21	WHILE_1	IF_2	CALL_3
0x4000b3f	          0x4889c7	                            mov rdi, rax	       228	entry.c	FUNCTION_21	WHILE_1	IF_2	CALL_3
0x4000b42	      0xe800000000	                          call 0x4000b47	       228	entry.c	FUNCTION_21	WHILE_1	IF_2	CALL_3
0x4000b47	           0x94588	              or dword [rbp - 0x78], eax	       228	entry.c	FUNCTION_21	WHILE_1	IF_2	CALL_3
0x4000b4a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       229	entry.c	FUNCTION_21	WHILE_1	IF_2
0x4000b4e	          0x8b4030	            mov eax, dword [rax + 0x30] 	       229	entry.c	FUNCTION_21	WHILE_1	IF_2
0x4000b51	            0x89c0	                            mov eax, eax	       229	entry.c	FUNCTION_21	WHILE_1	IF_2
0x4000b53	        0x48014598	            add qword [rbp - 0x68], rax 	       229	entry.c	FUNCTION_21	WHILE_1	IF_2
0x4000b57	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       230	entry.c	FUNCTION_21	WHILE_1	IF_2	CALL_4
0x4000b5b	        0x488b4590	             mov rax, qword [rbp - 0x70]	       230	entry.c	FUNCTION_21	WHILE_1	IF_2	CALL_4
0x4000b5f	          0x4889d6	                            mov rsi, rdx	       230	entry.c	FUNCTION_21	WHILE_1	IF_2	CALL_4
0x4000b62	          0x4889c7	                            mov rdi, rax	       230	entry.c	FUNCTION_21	WHILE_1	IF_2	CALL_4
0x4000b65	      0xe800000000	                          call 0x4000b6a	       230	entry.c	FUNCTION_21	WHILE_1	IF_2	CALL_4
0x4000b6a	            0xeb07	                           jmp 0x4000b73	       230	entry.c	FUNCTION_21	WHILE_1	IF_2	CALL_4
0x4000b6c	    0xc74588010000	               mov dword [rbp - 0x78], 1	       232	entry.c	FUNCTION_21	WHILE_1	ELSE_1
0x4000b73	      0x488345a810	            add qword [rbp - 0x58], 0x10	       208	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x4000b78	      0x48837da800	               cmp qword [rbp - 0x58], 0	       208	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x4000b7d	            0x741a	                            je 0x4000b99	       208	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x4000b7f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       208	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x4000b83	          0x8b55c8	             mov edx, dword [rbp - 0x38]	       208	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x4000b86	            0x89d2	                            mov edx, edx	       208	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x4000b88	        0x48c1e204	                              shl rdx, 4	       208	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x4000b8c	          0x4801d0	                            add rax, rdx	       208	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x4000b8f	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       208	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x4000b93	     0xf8713ffffff	                            ja 0x4000aac	       208	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x4000b99	      0x488345a010	            add qword [rbp - 0x60], 0x10	       179	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x4000b9e	      0x48837da000	               cmp qword [rbp - 0x60], 0	       179	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x4000ba3	            0x7422	                            je 0x4000bc7	       179	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x4000ba5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       179	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x4000ba9	        0x488b5008	                mov rdx, qword [rax + 8]	       179	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x4000bad	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       179	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x4000bb1	          0x8b4010	            mov eax, dword [rax + 0x10] 	       179	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x4000bb4	            0x89c0	                            mov eax, eax	       179	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x4000bb6	        0x48c1e004	                              shl rax, 4	       179	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x4000bba	          0x4801d0	                            add rax, rdx	       179	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x4000bbd	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	       179	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x4000bc1	     0xf872bfeffff	                            ja 0x40009f2	       179	entry.c	FUNCTION_21	WHILE_1	FUNCTION_1
0x4000bc7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       235	entry.c	FUNCTION_21	WHILE_1	CALL_3
0x4000bcb	        0x4883c008	                              add rax, 8	       235	entry.c	FUNCTION_21	WHILE_1	CALL_3
0x4000bcf	      0xbe00000000	                              mov esi, 0	       235	entry.c	FUNCTION_21	WHILE_1	CALL_3
0x4000bd4	          0x4889c7	                            mov rdi, rax	       235	entry.c	FUNCTION_21	WHILE_1	CALL_3
0x4000bd7	      0xe800000000	                          call 0x4000bdc	       235	entry.c	FUNCTION_21	WHILE_1	CALL_3
0x4000bdc	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       178	entry.c	FUNCTION_21	WHILE_1
0x4000be0	          0x8b4010	            mov eax, dword [rax + 0x10] 	       178	entry.c	FUNCTION_21	WHILE_1
0x4000be3	            0x85c0	                           test eax, eax	       178	entry.c	FUNCTION_21	WHILE_1
0x4000be5	     0xf85f6fdffff	                           jne 0x40009e1	       178	entry.c	FUNCTION_21	WHILE_1
0x4000beb	        0x488d4590	                   lea rax, [rbp - 0x70]	       237	entry.c	FUNCTION_21	CALL_4
0x4000bef	          0x4889c7	                            mov rdi, rax	       237	entry.c	FUNCTION_21	CALL_4
0x4000bf2	      0xe800000000	                          call 0x4000bf7	       237	entry.c	FUNCTION_21	CALL_4
0x4000bf7	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       238	entry.c	FUNCTION_21	CALL_5
0x4000bfb	        0x4883c008	                              add rax, 8	       238	entry.c	FUNCTION_21	CALL_5
0x4000bff	      0xbe00000000	                              mov esi, 0	       238	entry.c	FUNCTION_21	CALL_5
0x4000c04	          0x4889c7	                            mov rdi, rax	       238	entry.c	FUNCTION_21	CALL_5
0x4000c07	      0xe800000000	                          call 0x4000c0c	       238	entry.c	FUNCTION_21	CALL_5
0x4000c0c	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       241	entry.c	FUNCTION_21
0x4000c10	          0x8b5030	            mov edx, dword [rax + 0x30] 	       241	entry.c	FUNCTION_21
0x4000c13	          0x8b4588	             mov eax, dword [rbp - 0x78]	       241	entry.c	FUNCTION_21
0x4000c16	             0x9d0	                             or eax, edx	       241	entry.c	FUNCTION_21
0x4000c18	          0x894588	             mov dword [rbp - 0x78], eax	       241	entry.c	FUNCTION_21
0x4000c1b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       242	entry.c	FUNCTION_21	FUNCTION_2
0x4000c1f	        0x488b4028	            mov rax, qword [rax + 0x28] 	       242	entry.c	FUNCTION_21	FUNCTION_2
0x4000c23	        0x488945a8	             mov qword [rbp - 0x58], rax	       242	entry.c	FUNCTION_21	FUNCTION_2
0x4000c27	            0xeb23	                           jmp 0x4000c4c	       242	entry.c	FUNCTION_21	FUNCTION_2
0x4000c29	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       243	entry.c	FUNCTION_21	FUNCTION_2
0x4000c2d	          0x488b00	                    mov rax, qword [rax]	       243	entry.c	FUNCTION_21	FUNCTION_2
0x4000c30	          0x4889c6	                            mov rsi, rax	       243	entry.c	FUNCTION_21	FUNCTION_2
0x4000c33	      0xbf00000000	                              mov edi, 0	       243	entry.c	FUNCTION_21	FUNCTION_2
0x4000c38	      0xb800000000	                              mov eax, 0	       243	entry.c	FUNCTION_21	FUNCTION_2
0x4000c3d	      0xe800000000	                          call 0x4000c42	       243	entry.c	FUNCTION_21	FUNCTION_2
0x4000c42	      0xe8f9f3ffff	                    call sym.const_error	       243	entry.c	FUNCTION_21	FUNCTION_2
0x4000c47	      0x488345a810	            add qword [rbp - 0x58], 0x10	       242	entry.c	FUNCTION_21	FUNCTION_2
0x4000c4c	      0x48837da800	               cmp qword [rbp - 0x58], 0	       242	entry.c	FUNCTION_21	FUNCTION_2
0x4000c51	            0x741e	                            je 0x4000c71	       242	entry.c	FUNCTION_21	FUNCTION_2
0x4000c53	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       242	entry.c	FUNCTION_21	FUNCTION_2
0x4000c57	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       242	entry.c	FUNCTION_21	FUNCTION_2
0x4000c5b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       242	entry.c	FUNCTION_21	FUNCTION_2
0x4000c5f	          0x8b4030	            mov eax, dword [rax + 0x30] 	       242	entry.c	FUNCTION_21	FUNCTION_2
0x4000c62	            0x89c0	                            mov eax, eax	       242	entry.c	FUNCTION_21	FUNCTION_2
0x4000c64	        0x48c1e004	                              shl rax, 4	       242	entry.c	FUNCTION_21	FUNCTION_2
0x4000c68	          0x4801d0	                            add rax, rdx	       242	entry.c	FUNCTION_21	FUNCTION_2
0x4000c6b	        0x483b45a8	             cmp rax, qword [rbp - 0x58]	       242	entry.c	FUNCTION_21	FUNCTION_2
0x4000c6f	            0x77b8	                            ja 0x4000c29	       242	entry.c	FUNCTION_21	FUNCTION_2
0x4000c71	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       245	entry.c	FUNCTION_21	CALL_6
0x4000c75	        0x4883c028	                           add rax, 0x28	       245	entry.c	FUNCTION_21	CALL_6
0x4000c79	      0xbe00000000	                              mov esi, 0	       245	entry.c	FUNCTION_21	CALL_6
0x4000c7e	          0x4889c7	                            mov rdi, rax	       245	entry.c	FUNCTION_21	CALL_6
0x4000c81	      0xe800000000	                          call 0x4000c86	       245	entry.c	FUNCTION_21	CALL_6
0x4000c86	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       247	entry.c	FUNCTION_21	CALL_7
0x4000c8a	          0x4889c7	                            mov rdi, rax	       247	entry.c	FUNCTION_21	CALL_7
0x4000c8d	      0xe800000000	                          call 0x4000c92	       247	entry.c	FUNCTION_21	CALL_7
0x4000c92	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       248	entry.c	FUNCTION_21
0x4000c99	    0x48c740180000	               mov qword [rax + 0x18], 0	       248	entry.c	FUNCTION_21
0x4000ca1	          0x8b4588	             mov eax, dword [rbp - 0x78]	       250	entry.c	FUNCTION_21
0x4000ca4	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       251	entry.c	FUNCTION_21
0x4000ca8	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       251	entry.c	FUNCTION_21
0x4000cb1	            0x7405	                            je 0x4000cb8	       251	entry.c	FUNCTION_21
0x4000cb3	      0xe800000000	                          call 0x4000cb8	       251	entry.c	FUNCTION_21
0x4000cb8	    0x4881c4880000	                           add rsp, 0x88	       251	entry.c	FUNCTION_21
0x4000cbf	              0x5b	                                 pop rbx	       251	entry.c	FUNCTION_21
0x4000cc0	              0x5d	                                 pop rbp	       251	entry.c	FUNCTION_21
0x4000cc1	              0xc3	                                     ret	       251	entry.c	FUNCTION_21
read_blob_entry	SWITCH,0:WHILE,0:ELSE,0:IF,2:DO,0:CALL,2:FOR,0:functions,0	33
0x4000687	              0x55	                                push rbp	        86	entry.c	FUNCTION_15
0x4000688	          0x4889e5	                            mov rbp, rsp	        86	entry.c	FUNCTION_15
0x400068b	        0x4883ec30	                           sub rsp, 0x30	        86	entry.c	FUNCTION_15
0x400068f	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        86	entry.c	FUNCTION_15
0x4000693	        0x488975d0	             mov qword [rbp - 0x30], rsi	        86	entry.c	FUNCTION_15
0x4000697	    0x64488b042528	                mov rax, qword fs:[0x28]	        86	entry.c	FUNCTION_15
0x40006a0	        0x488945f8	                mov qword [rbp - 8], rax	        86	entry.c	FUNCTION_15
0x40006a4	            0x31c0	                            xor eax, eax	        86	entry.c	FUNCTION_15
0x40006a6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        88	entry.c	FUNCTION_15	CALL_1
0x40006aa	        0x488d4844	                   lea rcx, [rax + 0x44]	        88	entry.c	FUNCTION_15	CALL_1
0x40006ae	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	        88	entry.c	FUNCTION_15	CALL_1
0x40006b2	        0x488d45ec	                   lea rax, [rbp - 0x14]	        88	entry.c	FUNCTION_15	CALL_1
0x40006b6	          0x4889c6	                            mov rsi, rax	        88	entry.c	FUNCTION_15	CALL_1
0x40006b9	          0x4889cf	                            mov rdi, rcx	        88	entry.c	FUNCTION_15	CALL_1
0x40006bc	      0xe859fbffff	               call sym.read_object_file	        88	entry.c	FUNCTION_15	CALL_1
0x40006c1	        0x488945f0	             mov qword [rbp - 0x10], rax	        88	entry.c	FUNCTION_15	CALL_1
0x40006c5	      0x48837df000	               cmp qword [rbp - 0x10], 0	        90	entry.c	FUNCTION_15	IF_1
0x40006ca	            0x741a	                            je 0x40006e6	        90	entry.c	FUNCTION_15	IF_1
0x40006cc	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        91	entry.c	FUNCTION_15	IF_1	IF_2
0x40006cf	          0x83f803	                              cmp eax, 3	        91	entry.c	FUNCTION_15	IF_1	IF_2
0x40006d2	            0x7506	                           jne 0x40006da	        91	entry.c	FUNCTION_15	IF_1	IF_2
0x40006d4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        92	entry.c	FUNCTION_15	IF_1	IF_2
0x40006d8	            0xeb11	                           jmp 0x40006eb	        92	entry.c	FUNCTION_15	IF_1	IF_2
0x40006da	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        93	entry.c	FUNCTION_15	IF_1	CALL_2
0x40006de	          0x4889c7	                            mov rdi, rax	        93	entry.c	FUNCTION_15	IF_1	CALL_2
0x40006e1	      0xe800000000	                          call 0x40006e6	        93	entry.c	FUNCTION_15	IF_1	CALL_2
0x40006e6	      0xb800000000	                              mov eax, 0	        95	entry.c	FUNCTION_15
0x40006eb	        0x488b4df8	                mov rcx, qword [rbp - 8]	        96	entry.c	FUNCTION_15
0x40006ef	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        96	entry.c	FUNCTION_15
0x40006f8	            0x7405	                            je 0x40006ff	        96	entry.c	FUNCTION_15
0x40006fa	      0xe800000000	                          call 0x40006ff	        96	entry.c	FUNCTION_15
0x40006ff	              0xc9	                                   leave	        96	entry.c	FUNCTION_15
0x4000700	              0xc3	                                     ret	        96	entry.c	FUNCTION_15
check_path	SWITCH,0:WHILE,1:ELSE,0:IF,1:DO,0:CALL,1:FOR,0:functions,0	44
0x400139f	              0x55	                                push rbp	       389	entry.c	FUNCTION_23
0x40013a0	          0x4889e5	                            mov rbp, rsp	       389	entry.c	FUNCTION_23
0x40013a3	        0x4883ec30	                           sub rsp, 0x30	       389	entry.c	FUNCTION_23
0x40013a7	        0x48897de8	             mov qword [rbp - 0x18], rdi	       389	entry.c	FUNCTION_23
0x40013ab	          0x8975e4	             mov dword [rbp - 0x1c], esi	       389	entry.c	FUNCTION_23
0x40013ae	        0x488955d8	             mov qword [rbp - 0x28], rdx	       389	entry.c	FUNCTION_23
0x40013b2	          0x894de0	             mov dword [rbp - 0x20], ecx	       389	entry.c	FUNCTION_23
0x40013b5	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       390	entry.c	FUNCTION_23
0x40013b8	          0x4863d0	                         movsxd rdx, eax	       390	entry.c	FUNCTION_23
0x40013bb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	entry.c	FUNCTION_23
0x40013bf	          0x4801d0	                            add rax, rdx	       390	entry.c	FUNCTION_23
0x40013c2	        0x488945f8	                mov qword [rbp - 8], rax	       390	entry.c	FUNCTION_23
0x40013c6	            0xeb05	                           jmp 0x40013cd	       392	entry.c	FUNCTION_23	WHILE_1
0x40013c8	      0x48836df801	                  sub qword [rbp - 8], 1	       393	entry.c	FUNCTION_23	WHILE_1
0x40013cd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       392	entry.c	FUNCTION_23	WHILE_1
0x40013d1	        0x483b45f8	                cmp rax, qword [rbp - 8]	       392	entry.c	FUNCTION_23	WHILE_1
0x40013d5	            0x730b	                           jae 0x40013e2	       392	entry.c	FUNCTION_23	WHILE_1
0x40013d7	        0x488b45f8	                mov rax, qword [rbp - 8]	       392	entry.c	FUNCTION_23	WHILE_1
0x40013db	           0xfb600	                   movzx eax, byte [rax]	       392	entry.c	FUNCTION_23	WHILE_1
0x40013de	            0x3c2f	                            cmp al, 0x2f	       392	entry.c	FUNCTION_23	WHILE_1
0x40013e0	            0x75e6	                           jne 0x40013c8	       392	entry.c	FUNCTION_23	WHILE_1
0x40013e2	        0x488b55f8	                mov rdx, qword [rbp - 8]	       394	entry.c	FUNCTION_23	IF_1	CALL_1
0x40013e6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       394	entry.c	FUNCTION_23	IF_1	CALL_1
0x40013ea	          0x4829c2	                            sub rdx, rax	       394	entry.c	FUNCTION_23	IF_1	CALL_1
0x40013ed	          0x4889d0	                            mov rax, rdx	       394	entry.c	FUNCTION_23	IF_1	CALL_1
0x40013f0	            0x89c1	                            mov ecx, eax	       394	entry.c	FUNCTION_23	IF_1	CALL_1
0x40013f2	          0x8b55e0	             mov edx, dword [rbp - 0x20]	       394	entry.c	FUNCTION_23	IF_1	CALL_1
0x40013f5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       394	entry.c	FUNCTION_23	IF_1	CALL_1
0x40013f9	            0x89ce	                            mov esi, ecx	       394	entry.c	FUNCTION_23	IF_1	CALL_1
0x40013fb	          0x4889c7	                            mov rdi, rax	       394	entry.c	FUNCTION_23	IF_1	CALL_1
0x40013fe	      0xe800000000	                          call 0x4001403	       394	entry.c	FUNCTION_23	IF_1	CALL_1
0x4001403	            0x85c0	                           test eax, eax	       394	entry.c	FUNCTION_23	IF_1	CALL_1
0x4001405	            0x7512	                           jne 0x4001419	       394	entry.c	FUNCTION_23	IF_1	CALL_1
0x4001407	      0xe800000000	                          call 0x400140c	       395	entry.c	FUNCTION_23	IF_1
0x400140c	    0xc70002000000	                      mov dword [rax], 2	       395	entry.c	FUNCTION_23	IF_1
0x4001412	      0xb8ffffffff	                     mov eax, 0xffffffff	       396	entry.c	FUNCTION_23	IF_1
0x4001417	            0xeb13	                           jmp 0x400142c	       396	entry.c	FUNCTION_23	IF_1
0x4001419	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       398	entry.c	FUNCTION_23
0x400141d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       398	entry.c	FUNCTION_23
0x4001421	          0x4889d6	                            mov rsi, rdx	       398	entry.c	FUNCTION_23
0x4001424	          0x4889c7	                            mov rdi, rax	       398	entry.c	FUNCTION_23
0x4001427	      0xe800000000	                          call 0x400142c	       398	entry.c	FUNCTION_23
0x400142c	              0xc9	                                   leave	       399	entry.c	FUNCTION_23
0x400142d	              0xc3	                                     ret	       399	entry.c	FUNCTION_23
remove_subtree	SWITCH,0:WHILE,1:ELSE,1:IF,6:DO,0:CALL,15:FOR,0:functions,0	108
0x4000452	              0x55	                                push rbp	        51	entry.c	FUNCTION_13
0x4000453	          0x4889e5	                            mov rbp, rsp	        51	entry.c	FUNCTION_13
0x4000456	    0x4881ecd00000	                           sub rsp, 0xd0	        51	entry.c	FUNCTION_13
0x400045d	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	        51	entry.c	FUNCTION_13
0x4000464	    0x64488b042528	                mov rax, qword fs:[0x28]	        51	entry.c	FUNCTION_13
0x400046d	        0x488945f8	                mov qword [rbp - 8], rax	        51	entry.c	FUNCTION_13
0x4000471	            0x31c0	                            xor eax, eax	        51	entry.c	FUNCTION_13
0x4000473	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        52	entry.c	FUNCTION_13	CALL_1
0x400047a	        0x488b4010	            mov rax, qword [rax + 0x10] 	        52	entry.c	FUNCTION_13	CALL_1
0x400047e	          0x4889c7	                            mov rdi, rax	        52	entry.c	FUNCTION_13	CALL_1
0x4000481	      0xe800000000	                          call 0x4000486	        52	entry.c	FUNCTION_13	CALL_1
0x4000486	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	        52	entry.c	FUNCTION_13	CALL_1
0x400048d	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        54	entry.c	FUNCTION_13
0x4000494	        0x488b4008	                mov rax, qword [rax + 8]	        54	entry.c	FUNCTION_13
0x4000498	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	        54	entry.c	FUNCTION_13
0x400049e	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	        56	entry.c	FUNCTION_13	IF_1
0x40004a6	     0xf851a010000	                           jne 0x40005c6	        56	entry.c	FUNCTION_13	IF_1
0x40004ac	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        57	entry.c	FUNCTION_13	CALL_2
0x40004b3	        0x488b4010	            mov rax, qword [rax + 0x10] 	        57	entry.c	FUNCTION_13	CALL_2
0x40004b7	          0x4889c6	                            mov rsi, rax	        57	entry.c	FUNCTION_13	CALL_2
0x40004ba	      0xbf00000000	                              mov edi, 0	        57	entry.c	FUNCTION_13	CALL_2
0x40004bf	      0xb800000000	                              mov eax, 0	        57	entry.c	FUNCTION_13	CALL_2
0x40004c4	      0xe800000000	                          call 0x40004c9	        57	entry.c	FUNCTION_13	CALL_2
0x40004c9	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	        61	entry.c	FUNCTION_13	WHILE_1	IF_2	CALL_4
0x40004d0	        0x4883c013	                           add rax, 0x13	        61	entry.c	FUNCTION_13	WHILE_1	IF_2	CALL_4
0x40004d4	          0x4889c7	                            mov rdi, rax	        61	entry.c	FUNCTION_13	WHILE_1	IF_2	CALL_4
0x40004d7	      0xe86dfdffff	               call sym.is_dot_or_dotdot	        61	entry.c	FUNCTION_13	WHILE_1	IF_2	CALL_4
0x40004dc	            0x85c0	                           test eax, eax	        61	entry.c	FUNCTION_13	WHILE_1	IF_2	CALL_4
0x40004de	            0x7405	                            je 0x40004e5	        61	entry.c	FUNCTION_13	WHILE_1	IF_2	CALL_4
0x40004e0	      0xe9e1000000	                           jmp 0x40005c6	        61	entry.c	FUNCTION_13	WHILE_1	IF_2	CALL_4
0x40004e5	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        64	entry.c	FUNCTION_13	WHILE_1	CALL_5
0x40004ec	      0xbe2f000000	                           mov esi, 0x2f	        64	entry.c	FUNCTION_13	WHILE_1	CALL_5
0x40004f1	          0x4889c7	                            mov rdi, rax	        64	entry.c	FUNCTION_13	WHILE_1	CALL_5
0x40004f4	      0xe822fcffff	                   call sym.strbuf_addch	        64	entry.c	FUNCTION_13	WHILE_1	CALL_5
0x40004f9	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	        65	entry.c	FUNCTION_13	WHILE_1	CALL_6
0x4000500	        0x488d5013	                   lea rdx, [rax + 0x13]	        65	entry.c	FUNCTION_13	WHILE_1	CALL_6
0x4000504	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        65	entry.c	FUNCTION_13	WHILE_1	CALL_6
0x400050b	          0x4889d6	                            mov rsi, rdx	        65	entry.c	FUNCTION_13	WHILE_1	CALL_6
0x400050e	          0x4889c7	                            mov rdi, rax	        65	entry.c	FUNCTION_13	WHILE_1	CALL_6
0x4000511	      0xe873fcffff	                  call sym.strbuf_addstr	        65	entry.c	FUNCTION_13	WHILE_1	CALL_6
0x4000516	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        66	entry.c	FUNCTION_13	WHILE_1	IF_3
0x400051d	        0x488b4010	            mov rax, qword [rax + 0x10] 	        66	entry.c	FUNCTION_13	WHILE_1	IF_3
0x4000521	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	        66	entry.c	FUNCTION_13	WHILE_1	IF_3
0x4000528	          0x4889d6	                            mov rsi, rdx	        66	entry.c	FUNCTION_13	WHILE_1	IF_3
0x400052b	          0x4889c7	                            mov rdi, rax	        66	entry.c	FUNCTION_13	WHILE_1	IF_3
0x400052e	      0xe800000000	                          call 0x4000533	        66	entry.c	FUNCTION_13	WHILE_1	IF_3
0x4000533	            0x85c0	                           test eax, eax	        66	entry.c	FUNCTION_13	WHILE_1	IF_3
0x4000535	            0x741d	                            je 0x4000554	        66	entry.c	FUNCTION_13	WHILE_1	IF_3
0x4000537	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        67	entry.c	FUNCTION_13	WHILE_1	CALL_7
0x400053e	        0x488b4010	            mov rax, qword [rax + 0x10] 	        67	entry.c	FUNCTION_13	WHILE_1	CALL_7
0x4000542	          0x4889c6	                            mov rsi, rax	        67	entry.c	FUNCTION_13	WHILE_1	CALL_7
0x4000545	      0xbf00000000	                              mov edi, 0	        67	entry.c	FUNCTION_13	WHILE_1	CALL_7
0x400054a	      0xb800000000	                              mov eax, 0	        67	entry.c	FUNCTION_13	WHILE_1	CALL_7
0x400054f	      0xe800000000	                          call 0x4000554	        67	entry.c	FUNCTION_13	WHILE_1	CALL_7
0x4000554	    0x8b8578ffffff	             mov eax, dword [rbp - 0x88]	        68	entry.c	FUNCTION_13	WHILE_1	IF_4	CALL_8
0x400055a	      0x2500f00000	                         and eax, 0xf000	        68	entry.c	FUNCTION_13	WHILE_1	IF_4	CALL_8
0x400055f	      0x3d00400000	                         cmp eax, 0x4000	        68	entry.c	FUNCTION_13	WHILE_1	IF_4	CALL_8
0x4000564	            0x7511	                           jne 0x4000577	        68	entry.c	FUNCTION_13	WHILE_1	IF_4	CALL_8
0x4000566	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        69	entry.c	FUNCTION_13	WHILE_1	CALL_9
0x400056d	          0x4889c7	                            mov rdi, rax	        69	entry.c	FUNCTION_13	WHILE_1	CALL_9
0x4000570	      0xe8ddfeffff	                 call sym.remove_subtree	        69	entry.c	FUNCTION_13	WHILE_1	CALL_9
0x4000575	            0xeb34	                           jmp 0x40005ab	        69	entry.c	FUNCTION_13	WHILE_1	CALL_9
0x4000577	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        70	entry.c	FUNCTION_13	WHILE_1	ELSE_1	IF_5	CALL_10
0x400057e	        0x488b4010	            mov rax, qword [rax + 0x10] 	        70	entry.c	FUNCTION_13	WHILE_1	ELSE_1	IF_5	CALL_10
0x4000582	          0x4889c7	                            mov rdi, rax	        70	entry.c	FUNCTION_13	WHILE_1	ELSE_1	IF_5	CALL_10
0x4000585	      0xe800000000	                          call 0x400058a	        70	entry.c	FUNCTION_13	WHILE_1	ELSE_1	IF_5	CALL_10
0x400058a	            0x85c0	                           test eax, eax	        70	entry.c	FUNCTION_13	WHILE_1	ELSE_1	IF_5	CALL_10
0x400058c	            0x741d	                            je 0x40005ab	        70	entry.c	FUNCTION_13	WHILE_1	ELSE_1	IF_5	CALL_10
0x400058e	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        71	entry.c	FUNCTION_13	WHILE_1	ELSE_1	IF_5
0x4000595	        0x488b4010	            mov rax, qword [rax + 0x10] 	        71	entry.c	FUNCTION_13	WHILE_1	ELSE_1	IF_5
0x4000599	          0x4889c6	                            mov rsi, rax	        71	entry.c	FUNCTION_13	WHILE_1	ELSE_1	IF_5
0x400059c	      0xbf00000000	                              mov edi, 0	        71	entry.c	FUNCTION_13	WHILE_1	ELSE_1	IF_5
0x40005a1	      0xb800000000	                              mov eax, 0	        71	entry.c	FUNCTION_13	WHILE_1	ELSE_1	IF_5
0x40005a6	      0xe800000000	                          call 0x40005ab	        71	entry.c	FUNCTION_13	WHILE_1	ELSE_1	IF_5
0x40005ab	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	        72	entry.c	FUNCTION_13	WHILE_1	CALL_12
0x40005b1	          0x4863d0	                         movsxd rdx, eax	        72	entry.c	FUNCTION_13	WHILE_1	CALL_12
0x40005b4	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        72	entry.c	FUNCTION_13	WHILE_1	CALL_12
0x40005bb	          0x4889d6	                            mov rsi, rdx	        72	entry.c	FUNCTION_13	WHILE_1	CALL_12
0x40005be	          0x4889c7	                            mov rdi, rax	        72	entry.c	FUNCTION_13	WHILE_1	CALL_12
0x40005c1	      0xe8bbfaffff	                  call sym.strbuf_setlen	        72	entry.c	FUNCTION_13	WHILE_1	CALL_12
0x40005c6	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	        58	entry.c	FUNCTION_13	WHILE_1	CALL_3
0x40005cd	          0x4889c7	                            mov rdi, rax	        58	entry.c	FUNCTION_13	WHILE_1	CALL_3
0x40005d0	      0xe800000000	                          call 0x40005d5	        58	entry.c	FUNCTION_13	WHILE_1	CALL_3
0x40005d5	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	        58	entry.c	FUNCTION_13	WHILE_1	CALL_3
0x40005dc	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	        58	entry.c	FUNCTION_13	WHILE_1	CALL_3
0x40005e4	     0xf85dffeffff	                           jne 0x40004c9	        58	entry.c	FUNCTION_13	WHILE_1	CALL_3
0x40005ea	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	        74	entry.c	FUNCTION_13	CALL_13
0x40005f1	          0x4889c7	                            mov rdi, rax	        74	entry.c	FUNCTION_13	CALL_13
0x40005f4	      0xe800000000	                          call 0x40005f9	        74	entry.c	FUNCTION_13	CALL_13
0x40005f9	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        75	entry.c	FUNCTION_13	IF_6	CALL_14
0x4000600	        0x488b4010	            mov rax, qword [rax + 0x10] 	        75	entry.c	FUNCTION_13	IF_6	CALL_14
0x4000604	          0x4889c7	                            mov rdi, rax	        75	entry.c	FUNCTION_13	IF_6	CALL_14
0x4000607	      0xe800000000	                          call 0x400060c	        75	entry.c	FUNCTION_13	IF_6	CALL_14
0x400060c	            0x85c0	                           test eax, eax	        75	entry.c	FUNCTION_13	IF_6	CALL_14
0x400060e	            0x741d	                            je 0x400062d	        75	entry.c	FUNCTION_13	IF_6	CALL_14
0x4000610	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        76	entry.c	FUNCTION_13	CALL_15
0x4000617	        0x488b4010	            mov rax, qword [rax + 0x10] 	        76	entry.c	FUNCTION_13	CALL_15
0x400061b	          0x4889c6	                            mov rsi, rax	        76	entry.c	FUNCTION_13	CALL_15
0x400061e	      0xbf00000000	                              mov edi, 0	        76	entry.c	FUNCTION_13	CALL_15
0x4000623	      0xb800000000	                              mov eax, 0	        76	entry.c	FUNCTION_13	CALL_15
0x4000628	      0xe800000000	                          call 0x400062d	        76	entry.c	FUNCTION_13	CALL_15
0x400062d	              0x90	                                     nop	        77	entry.c	FUNCTION_13
0x400062e	        0x488b45f8	                mov rax, qword [rbp - 8]	        77	entry.c	FUNCTION_13
0x4000632	    0x644833042528	                xor rax, qword fs:[0x28]	        77	entry.c	FUNCTION_13
0x400063b	            0x7405	                            je 0x4000642	        77	entry.c	FUNCTION_13
0x400063d	      0xe800000000	                          call 0x4000642	        77	entry.c	FUNCTION_13
0x4000642	              0xc9	                                   leave	        77	entry.c	FUNCTION_13
0x4000643	              0xc3	                                     ret	        77	entry.c	FUNCTION_13
strbuf_addstr	SWITCH,0:WHILE,0:ELSE,0:IF,0:DO,0:CALL,2:FOR,0:functions,0	17
0x4000189	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_5
0x400018a	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_5
0x400018d	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_5
0x4000191	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_5
0x4000195	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_5
0x4000199	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_5	CALL_2
0x400019d	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x40001a0	      0xe800000000	                          call 0x40001a5	       279	strbuf.h	FUNCTION_5	CALL_2
0x40001a5	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x40001a8	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_5	CALL_2
0x40001ac	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_5	CALL_2
0x40001b0	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_5	CALL_2
0x40001b3	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x40001b6	      0xe800000000	                          call 0x40001bb	       279	strbuf.h	FUNCTION_5	CALL_2
0x40001bb	              0x90	                                     nop	       280	strbuf.h	FUNCTION_5
0x40001bc	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_5
0x40001bd	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_5
trace_pass_fl	SWITCH,0:WHILE,0:ELSE,0:IF,0:DO,0:CALL,0:FOR,0:functions,0	17
0x40001ea	              0x55	                                push rbp	       134	trace.h	FUNCTION_85
0x40001eb	          0x4889e5	                            mov rbp, rsp	       134	trace.h	FUNCTION_85
0x40001ee	        0x48897df8	                mov qword [rbp - 8], rdi	       134	trace.h	FUNCTION_85
0x40001f2	        0x488b45f8	                mov rax, qword [rbp - 8]	       135	trace.h	FUNCTION_85
0x40001f6	          0x8b4008	                mov eax, dword [rax + 8]	       135	trace.h	FUNCTION_85
0x40001f9	            0x85c0	                           test eax, eax	       135	trace.h	FUNCTION_85
0x40001fb	            0x750f	                           jne 0x400020c	       135	trace.h	FUNCTION_85
0x40001fd	        0x488b45f8	                mov rax, qword [rbp - 8]	       135	trace.h	FUNCTION_85
0x4000201	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	       135	trace.h	FUNCTION_85
0x4000205	          0x83e001	                              and eax, 1	       135	trace.h	FUNCTION_85
0x4000208	            0x84c0	                             test al, al	       135	trace.h	FUNCTION_85
0x400020a	            0x7507	                           jne 0x4000213	       135	trace.h	FUNCTION_85
0x400020c	      0xb801000000	                              mov eax, 1	       135	trace.h	FUNCTION_85
0x4000211	            0xeb05	                           jmp 0x4000218	       135	trace.h	FUNCTION_85
0x4000213	      0xb800000000	                              mov eax, 0	       135	trace.h	FUNCTION_85
0x4000218	              0x5d	                                 pop rbp	       136	trace.h	FUNCTION_85
0x4000219	              0xc3	                                     ret	       136	trace.h	FUNCTION_85
