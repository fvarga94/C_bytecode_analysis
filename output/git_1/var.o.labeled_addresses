cmd_var	SWITCH,0:ELSE,0:DO,0:CALL,8:WHILE,0:functions,0:IF,3:FOR,0	68
0x40000c3	            0x4154	                                push r12	        76	var.c	FUNCTION_6
0x40000c5	              0x55	                                push rbp	        76	var.c	FUNCTION_6
0x40000c6	              0x53	                                push rbx	        76	var.c	FUNCTION_6
0x40000c7	          0x83ff02	                              cmp edi, 2	        78	var.c	FUNCTION_6	IF_1
0x40000ca	            0x740a	                            je 0x40000d6	        78	var.c	FUNCTION_6	IF_1
0x40000cc	      0xbf00000000	                              mov edi, 0	        79	var.c	FUNCTION_6	CALL_1
0x40000d1	      0xe800000000	                          call 0x40000d6	        79	var.c	FUNCTION_6	CALL_1
0x40000d6	          0x4889f3	                            mov rbx, rsi	        79	var.c	FUNCTION_6	CALL_1
0x40000d9	        0x488b4608	                mov rax, qword [rsi + 8]	        81	var.c	FUNCTION_6	IF_2	CALL_2
0x40000dd	          0x80382d	                    cmp byte [rax], 0x2d	        81	var.c	FUNCTION_6	IF_2	CALL_2
0x40000e0	            0x7565	                           jne 0x4000147	        81	var.c	FUNCTION_6	IF_2	CALL_2
0x40000e2	        0x8078016c	                cmp byte [rax + 1], 0x6c	        81	var.c	FUNCTION_6	IF_2	CALL_2
0x40000e6	            0x755f	                           jne 0x4000147	        81	var.c	FUNCTION_6	IF_2	CALL_2
0x40000e8	        0x80780200	                   cmp byte [rax + 2], 0	        81	var.c	FUNCTION_6	IF_2	CALL_2
0x40000ec	            0x7559	                           jne 0x4000147	        81	var.c	FUNCTION_6	IF_2	CALL_2
0x40000ee	      0xbe00000000	                              mov esi, 0	        82	var.c	FUNCTION_6	IF_2	CALL_3
0x40000f3	      0xbf00000000	                              mov edi, 0	        82	var.c	FUNCTION_6	IF_2	CALL_3
0x40000f8	      0xe800000000	                          call 0x40000fd	        82	var.c	FUNCTION_6	IF_2	CALL_3
0x40000fd	    0x488b05000000	            mov rax, qword [0x04000104] 	        47	var.c	FUNCTION_3	FOR_1
0x4000104	          0x4885c0	                           test rax, rax	        47	var.c	FUNCTION_3	FOR_1
0x4000107	     0xf849a000000	                            je 0x40001a7	        47	var.c	FUNCTION_3	FOR_1
0x400010d	      0xbb00000000	                              mov ebx, 0	        47	var.c	FUNCTION_3	FOR_1
0x4000112	      0xbf00000000	                              mov edi, 0	        48	var.c	FUNCTION_3	FOR_1	IF_1	CALL_1
0x4000117	            0xffd0	                                call rax	        48	var.c	FUNCTION_3	FOR_1	IF_1	CALL_1
0x4000119	          0x4885c0	                           test rax, rax	        48	var.c	FUNCTION_3	FOR_1	IF_1	CALL_1
0x400011c	            0x741a	                            je 0x4000138	        48	var.c	FUNCTION_3	FOR_1	IF_1	CALL_1
0x400011e	          0x4889c1	                            mov rcx, rax	       104	stdio2.h	FUNCTION_12	CALL_2
0x4000121	          0x488b13	                    mov rdx, qword [rbx]	       104	stdio2.h	FUNCTION_12	CALL_2
0x4000124	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	FUNCTION_12	CALL_2
0x4000129	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	FUNCTION_12	CALL_2
0x400012e	      0xb800000000	                              mov eax, 0	       104	stdio2.h	FUNCTION_12	CALL_2
0x4000133	      0xe800000000	                          call 0x4000138	       104	stdio2.h	FUNCTION_12	CALL_2
0x4000138	        0x4883c310	                           add rbx, 0x10	        47	var.c	FUNCTION_3	FOR_1
0x400013c	        0x488b4308	                mov rax, qword [rbx + 8]	        47	var.c	FUNCTION_3	FOR_1
0x4000140	          0x4885c0	                           test rax, rax	        47	var.c	FUNCTION_3	FOR_1
0x4000143	            0x75cd	                           jne 0x4000112	        47	var.c	FUNCTION_3	FOR_1
0x4000145	            0xeb60	                           jmp 0x40001a7	        47	var.c	FUNCTION_3	FOR_1
0x4000147	      0xbe00000000	                              mov esi, 0	        86	var.c	FUNCTION_6	CALL_5
0x400014c	      0xbf00000000	                              mov edi, 0	        86	var.c	FUNCTION_6	CALL_5
0x4000151	      0xe800000000	                          call 0x4000156	        86	var.c	FUNCTION_6	CALL_5
0x4000156	        0x4c8b6308	                mov r12, qword [rbx + 8]	        87	var.c	FUNCTION_6	CALL_6
0x400015a	    0x488b2d000000	            mov rbp, qword [0x04000161] 	        57	var.c	FUNCTION_4	FOR_1
0x4000161	          0x4885ed	                           test rbp, rbp	        57	var.c	FUNCTION_4	FOR_1
0x4000164	            0x7432	                            je 0x4000198	        57	var.c	FUNCTION_4	FOR_1
0x4000166	      0xbb00000000	                              mov ebx, 0	        57	var.c	FUNCTION_4	FOR_1
0x400016b	          0x488b33	                    mov rsi, qword [rbx]	        58	var.c	FUNCTION_4	FOR_1	IF_1	CALL_1
0x400016e	          0x4c89e7	                            mov rdi, r12	        58	var.c	FUNCTION_4	FOR_1	IF_1	CALL_1
0x4000171	      0xe800000000	                          call 0x4000176	        58	var.c	FUNCTION_4	FOR_1	IF_1	CALL_1
0x4000176	            0x85c0	                           test eax, eax	        58	var.c	FUNCTION_4	FOR_1	IF_1	CALL_1
0x4000178	            0x7511	                           jne 0x400018b	        58	var.c	FUNCTION_4	FOR_1	IF_1	CALL_1
0x400017a	      0xbf01000000	                              mov edi, 1	        59	var.c	FUNCTION_4	FOR_1	IF_1	CALL_2
0x400017f	            0xffd5	                                call rbp	        59	var.c	FUNCTION_4	FOR_1	IF_1	CALL_2
0x4000181	          0x4889c7	                            mov rdi, rax	        59	var.c	FUNCTION_4	FOR_1	IF_1	CALL_2
0x4000184	          0x4885c0	                           test rax, rax	        88	var.c	FUNCTION_6	IF_3
0x4000187	            0x7519	                           jne 0x40001a2	        88	var.c	FUNCTION_6	IF_3
0x4000189	            0xeb0d	                           jmp 0x4000198	        88	var.c	FUNCTION_6	IF_3
0x400018b	        0x4883c310	                           add rbx, 0x10	        57	var.c	FUNCTION_4	FOR_1
0x400018f	        0x488b6b08	                mov rbp, qword [rbx + 8]	        57	var.c	FUNCTION_4	FOR_1
0x4000193	          0x4885ed	                           test rbp, rbp	        57	var.c	FUNCTION_4	FOR_1
0x4000196	            0x75d3	                           jne 0x400016b	        57	var.c	FUNCTION_4	FOR_1
0x4000198	      0xbf00000000	                              mov edi, 0	        89	var.c	FUNCTION_6	CALL_7
0x400019d	      0xe800000000	                          call 0x40001a2	        89	var.c	FUNCTION_6	CALL_7
0x40001a2	      0xe800000000	                          call 0x40001a7	       104	stdio2.h	FUNCTION_12	CALL_2
0x40001a7	      0xb800000000	                              mov eax, 0	        94	var.c	FUNCTION_6
0x40001ac	              0x5b	                                 pop rbx	        94	var.c	FUNCTION_6
0x40001ad	              0x5d	                                 pop rbp	        94	var.c	FUNCTION_6
0x40001ae	            0x415c	                                 pop r12	        94	var.c	FUNCTION_6
0x40001b0	              0xc3	                                     ret	        94	var.c	FUNCTION_6
editor	SWITCH,0:ELSE,0:DO,0:CALL,2:WHILE,0:functions,0:IF,1:FOR,0	11
0x400005f	              0x53	                                push rbx	        12	var.c	FUNCTION_1
0x4000060	            0x89fb	                            mov ebx, edi	        12	var.c	FUNCTION_1
0x4000062	      0xe800000000	                          call 0x4000067	        13	var.c	FUNCTION_1	CALL_1
0x4000067	          0x4885c0	                           test rax, rax	        15	var.c	FUNCTION_1	IF_1
0x400006a	            0x750f	                           jne 0x400007b	        15	var.c	FUNCTION_1	IF_1
0x400006c	          0xf6c301	                              test bl, 1	        15	var.c	FUNCTION_1	IF_1
0x400006f	            0x740a	                            je 0x400007b	        15	var.c	FUNCTION_1	IF_1
0x4000071	      0xbf00000000	                              mov edi, 0	        16	var.c	FUNCTION_1	CALL_2
0x4000076	      0xe800000000	                          call 0x400007b	        16	var.c	FUNCTION_1	CALL_2
0x400007b	              0x5b	                                 pop rbx	        19	var.c	FUNCTION_1
0x400007c	              0xc3	                                     ret	        19	var.c	FUNCTION_1
show_config	SWITCH,0:ELSE,1:DO,0:CALL,3:WHILE,0:functions,0:IF,1:FOR,0	24
0x400007d	            0x4154	                                push r12	        67	var.c	FUNCTION_5
0x400007f	              0x55	                                push rbp	        67	var.c	FUNCTION_5
0x4000080	              0x53	                                push rbx	        67	var.c	FUNCTION_5
0x4000081	          0x4889fd	                            mov rbp, rdi	        67	var.c	FUNCTION_5
0x4000084	          0x4889f3	                            mov rbx, rsi	        67	var.c	FUNCTION_5
0x4000087	          0x4989d4	                            mov r12, rdx	        67	var.c	FUNCTION_5
0x400008a	          0x4885f6	                           test rsi, rsi	        68	var.c	FUNCTION_5	IF_1
0x400008d	            0x741c	                            je 0x40000ab	        68	var.c	FUNCTION_5	IF_1
0x400008f	          0x4889f1	                            mov rcx, rsi	       104	stdio2.h	FUNCTION_12	CALL_2
0x4000092	          0x4889fa	                            mov rdx, rdi	       104	stdio2.h	FUNCTION_12	CALL_2
0x4000095	      0xbe00000000	                              mov esi, 0	       104	stdio2.h	FUNCTION_12	CALL_2
0x400009a	      0xbf01000000	                              mov edi, 1	       104	stdio2.h	FUNCTION_12	CALL_2
0x400009f	      0xb800000000	                              mov eax, 0	       104	stdio2.h	FUNCTION_12	CALL_2
0x40000a4	      0xe800000000	                          call 0x40000a9	       104	stdio2.h	FUNCTION_12	CALL_2
0x40000a9	            0xeb05	                           jmp 0x40000b0	       104	stdio2.h	FUNCTION_12	CALL_2
0x40000ab	      0xe800000000	                          call 0x40000b0	       104	stdio2.h	FUNCTION_12	CALL_2
0x40000b0	          0x4c89e2	                            mov rdx, r12	        72	var.c	FUNCTION_5	CALL_3
0x40000b3	          0x4889de	                            mov rsi, rbx	        72	var.c	FUNCTION_5	CALL_3
0x40000b6	          0x4889ef	                            mov rdi, rbp	        72	var.c	FUNCTION_5	CALL_3
0x40000b9	      0xe800000000	                          call 0x40000be	        72	var.c	FUNCTION_5	CALL_3
0x40000be	              0x5b	                                 pop rbx	        73	var.c	FUNCTION_5
0x40000bf	              0x5d	                                 pop rbp	        73	var.c	FUNCTION_5
0x40000c0	            0x415c	                                 pop r12	        73	var.c	FUNCTION_5
0x40000c2	              0xc3	                                     ret	        73	var.c	FUNCTION_5
pager	SWITCH,0:ELSE,0:DO,0:CALL,1:WHILE,0:functions,0:IF,1:FOR,0	8
0x4000040	        0x4883ec08	                              sub rsp, 8	        22	var.c	FUNCTION_2
0x4000044	      0xbf01000000	                              mov edi, 1	        23	var.c	FUNCTION_2	CALL_1
0x4000049	      0xe800000000	                          call 0x400004e	        23	var.c	FUNCTION_2	CALL_1
0x400004e	          0x4885c0	                           test rax, rax	        25	var.c	FUNCTION_2	IF_1
0x4000051	      0xba00000000	                              mov edx, 0	        26	var.c	FUNCTION_2	IF_1
0x4000056	        0x480f44c2	                          cmove rax, rdx	        26	var.c	FUNCTION_2	IF_1
0x400005a	        0x4883c408	                              add rsp, 8	        28	var.c	FUNCTION_2
0x400005e	              0xc3	                                     ret	        28	var.c	FUNCTION_2
