is_absolute_path	IF,0:FOR,0:functions,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:CALL,0	21
0x4000168	              0x55	                                push rbp	      1153	cache.h	FUNCTION_82
0x4000169	          0x4889e5	                            mov rbp, rsp	      1153	cache.h	FUNCTION_82
0x400016c	        0x4883ec08	                              sub rsp, 8	      1153	cache.h	FUNCTION_82
0x4000170	        0x48897df8	                mov qword [rbp - 8], rdi	      1153	cache.h	FUNCTION_82
0x4000174	        0x488b45f8	                mov rax, qword [rbp - 8]	      1154	cache.h	FUNCTION_82
0x4000178	           0xfb600	                   movzx eax, byte [rax]	      1154	cache.h	FUNCTION_82
0x400017b	           0xfbec0	                           movsx eax, al	      1154	cache.h	FUNCTION_82
0x400017e	            0x89c7	                            mov edi, eax	      1154	cache.h	FUNCTION_82
0x4000180	      0xe8cafeffff	                 call sym.git_is_dir_sep	      1154	cache.h	FUNCTION_82
0x4000185	            0x85c0	                           test eax, eax	      1154	cache.h	FUNCTION_82
0x4000187	            0x7510	                           jne 0x4000199	      1154	cache.h	FUNCTION_82
0x4000189	        0x488b45f8	                mov rax, qword [rbp - 8]	      1154	cache.h	FUNCTION_82
0x400018d	          0x4889c7	                            mov rdi, rax	      1154	cache.h	FUNCTION_82
0x4000190	      0xe8abfeffff	       call sym.git_has_dos_drive_prefix	      1154	cache.h	FUNCTION_82
0x4000195	            0x85c0	                           test eax, eax	      1154	cache.h	FUNCTION_82
0x4000197	            0x7407	                            je 0x40001a0	      1154	cache.h	FUNCTION_82
0x4000199	      0xb801000000	                              mov eax, 1	      1154	cache.h	FUNCTION_82
0x400019e	            0xeb05	                           jmp 0x40001a5	      1154	cache.h	FUNCTION_82
0x40001a0	      0xb800000000	                              mov eax, 0	      1154	cache.h	FUNCTION_82
0x40001a5	              0xc9	                                   leave	      1155	cache.h	FUNCTION_82
0x40001a6	              0xc3	                                     ret	      1155	cache.h	FUNCTION_82
unable_to_lock_die	IF,0:FOR,0:functions,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:CALL,2	22
0x40005cb	              0x55	                                push rbp	       164	lockfile.c	FUNCTION_6
0x40005cc	          0x4889e5	                            mov rbp, rsp	       164	lockfile.c	FUNCTION_6
0x40005cf	        0x4883ec30	                           sub rsp, 0x30	       164	lockfile.c	FUNCTION_6
0x40005d3	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       164	lockfile.c	FUNCTION_6
0x40005d7	          0x8975d4	             mov dword [rbp - 0x2c], esi	       164	lockfile.c	FUNCTION_6
0x40005da	    0x64488b042528	                mov rax, qword fs:[0x28]	       164	lockfile.c	FUNCTION_6
0x40005e3	        0x488945f8	                mov qword [rbp - 8], rax	       164	lockfile.c	FUNCTION_6
0x40005e7	            0x31c0	                            xor eax, eax	       164	lockfile.c	FUNCTION_6
0x40005e9	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       165	lockfile.c	FUNCTION_6
0x40005f1	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       165	lockfile.c	FUNCTION_6
0x40005f9	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       165	lockfile.c	FUNCTION_6
0x4000601	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       167	lockfile.c	FUNCTION_6	CALL_1
0x4000605	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	       167	lockfile.c	FUNCTION_6	CALL_1
0x4000608	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       167	lockfile.c	FUNCTION_6	CALL_1
0x400060c	            0x89ce	                            mov esi, ecx	       167	lockfile.c	FUNCTION_6	CALL_1
0x400060e	          0x4889c7	                            mov rdi, rax	       167	lockfile.c	FUNCTION_6	CALL_1
0x4000611	      0xe800000000	                          call 0x4000616	       167	lockfile.c	FUNCTION_6	CALL_1
0x4000616	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       168	lockfile.c	FUNCTION_6	CALL_2
0x400061a	          0x4889c6	                            mov rsi, rax	       168	lockfile.c	FUNCTION_6	CALL_2
0x400061d	      0xbf00000000	                              mov edi, 0	       168	lockfile.c	FUNCTION_6	CALL_2
0x4000622	      0xb800000000	                              mov eax, 0	       168	lockfile.c	FUNCTION_6	CALL_2
0x4000627	      0xe800000000	call sym.hold_lock_file_for_update_timeout	       168	lockfile.c	FUNCTION_6	CALL_2
lock_file_timeout	IF,7:FOR,0:functions,0:ELSE,3:SWITCH,0:WHILE,1:DO,0:CALL,6	99
0x40003af	              0x55	                                push rbp	       103	lockfile.c	FUNCTION_4
0x40003b0	          0x4889e5	                            mov rbp, rsp	       103	lockfile.c	FUNCTION_4
0x40003b3	        0x4883ec50	                           sub rsp, 0x50	       103	lockfile.c	FUNCTION_4
0x40003b7	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       103	lockfile.c	FUNCTION_4
0x40003bb	        0x488975c0	             mov qword [rbp - 0x40], rsi	       103	lockfile.c	FUNCTION_4
0x40003bf	          0x8955bc	             mov dword [rbp - 0x44], edx	       103	lockfile.c	FUNCTION_4
0x40003c2	        0x48894db0	             mov qword [rbp - 0x50], rcx	       103	lockfile.c	FUNCTION_4
0x40003c6	    0xc745dc010000	               mov dword [rbp - 0x24], 1	       104	lockfile.c	FUNCTION_4
0x40003cd	    0xc745e0010000	               mov dword [rbp - 0x20], 1	       105	lockfile.c	FUNCTION_4
0x40003d4	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       106	lockfile.c	FUNCTION_4
0x40003dc	      0x48837db000	               cmp qword [rbp - 0x50], 0	       109	lockfile.c	FUNCTION_4	IF_1
0x40003e1	            0x751b	                           jne 0x40003fe	       109	lockfile.c	FUNCTION_4	IF_1
0x40003e3	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       110	lockfile.c	FUNCTION_4	CALL_1
0x40003e6	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       110	lockfile.c	FUNCTION_4	CALL_1
0x40003ea	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       110	lockfile.c	FUNCTION_4	CALL_1
0x40003ee	          0x4889ce	                            mov rsi, rcx	       110	lockfile.c	FUNCTION_4	CALL_1
0x40003f1	          0x4889c7	                            mov rdi, rax	       110	lockfile.c	FUNCTION_4	CALL_1
0x40003f4	      0xe8edfeffff	                      call sym.lock_file	       110	lockfile.c	FUNCTION_4	CALL_1
0x40003f9	      0xe923010000	                           jmp 0x4000521	       110	lockfile.c	FUNCTION_4	CALL_1
0x40003fe	    0x8b0500000000	            mov eax, dword [0x04000404] 	       112	lockfile.c	FUNCTION_4	IF_2
0x4000404	            0x85c0	                           test eax, eax	       112	lockfile.c	FUNCTION_4	IF_2
0x4000406	            0x7516	                           jne 0x400041e	       112	lockfile.c	FUNCTION_4	IF_2
0x4000408	      0xe800000000	                          call 0x400040d	       113	lockfile.c	FUNCTION_4	IF_2	CALL_3
0x400040d	            0x89c7	                            mov edi, eax	       113	lockfile.c	FUNCTION_4	IF_2	CALL_3
0x400040f	      0xe800000000	                          call 0x4000414	       113	lockfile.c	FUNCTION_4	IF_2	CALL_3
0x4000414	    0xc70500000000	               mov dword [0x0400041e], 1	       114	lockfile.c	FUNCTION_4	IF_2
0x400041e	      0x48837db000	               cmp qword [rbp - 0x50], 0	       117	lockfile.c	FUNCTION_4	IF_3
0x4000423	            0x7e08	                           jle 0x400042d	       117	lockfile.c	FUNCTION_4	IF_3
0x4000425	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       118	lockfile.c	FUNCTION_4	IF_3
0x4000429	        0x488945e8	             mov qword [rbp - 0x18], rax	       118	lockfile.c	FUNCTION_4	IF_3
0x400042d	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       124	lockfile.c	FUNCTION_4	WHILE_1	CALL_4
0x4000430	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       124	lockfile.c	FUNCTION_4	WHILE_1	CALL_4
0x4000434	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       124	lockfile.c	FUNCTION_4	WHILE_1	CALL_4
0x4000438	          0x4889ce	                            mov rsi, rcx	       124	lockfile.c	FUNCTION_4	WHILE_1	CALL_4
0x400043b	          0x4889c7	                            mov rdi, rax	       124	lockfile.c	FUNCTION_4	WHILE_1	CALL_4
0x400043e	      0xe8a3feffff	                      call sym.lock_file	       124	lockfile.c	FUNCTION_4	WHILE_1	CALL_4
0x4000443	          0x8945e4	             mov dword [rbp - 0x1c], eax	       124	lockfile.c	FUNCTION_4	WHILE_1	CALL_4
0x4000446	        0x837de400	               cmp dword [rbp - 0x1c], 0	       126	lockfile.c	FUNCTION_4	WHILE_1	IF_4
0x400044a	            0x7808	                            js 0x4000454	       126	lockfile.c	FUNCTION_4	WHILE_1	IF_4
0x400044c	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       127	lockfile.c	FUNCTION_4	WHILE_1	IF_4
0x400044f	      0xe9cd000000	                           jmp 0x4000521	       127	lockfile.c	FUNCTION_4	WHILE_1	IF_4
0x4000454	      0xe800000000	                          call 0x4000459	       128	lockfile.c	FUNCTION_4	WHILE_1	ELSE_1	IF_5
0x4000459	            0x8b00	                    mov eax, dword [rax]	       128	lockfile.c	FUNCTION_4	WHILE_1	ELSE_1	IF_5
0x400045b	          0x83f811	                           cmp eax, 0x11	       128	lockfile.c	FUNCTION_4	WHILE_1	ELSE_1	IF_5
0x400045e	            0x740a	                            je 0x400046a	       128	lockfile.c	FUNCTION_4	WHILE_1	ELSE_1	IF_5
0x4000460	      0xb8ffffffff	                     mov eax, 0xffffffff	       129	lockfile.c	FUNCTION_4	WHILE_1	ELSE_1	IF_5
0x4000465	      0xe9b7000000	                           jmp 0x4000521	       129	lockfile.c	FUNCTION_4	WHILE_1	ELSE_1	IF_5
0x400046a	      0x48837db000	               cmp qword [rbp - 0x50], 0	       130	lockfile.c	FUNCTION_4	WHILE_1	ELSE_2	IF_6
0x400046f	            0x7e11	                           jle 0x4000482	       130	lockfile.c	FUNCTION_4	WHILE_1	ELSE_2	IF_6
0x4000471	      0x48837de800	               cmp qword [rbp - 0x18], 0	       130	lockfile.c	FUNCTION_4	WHILE_1	ELSE_2	IF_6
0x4000476	            0x7f0a	                            jg 0x4000482	       130	lockfile.c	FUNCTION_4	WHILE_1	ELSE_2	IF_6
0x4000478	      0xb8ffffffff	                     mov eax, 0xffffffff	       131	lockfile.c	FUNCTION_4	WHILE_1	ELSE_2	IF_6
0x400047d	      0xe99f000000	                           jmp 0x4000521	       131	lockfile.c	FUNCTION_4	WHILE_1	ELSE_2	IF_6
0x4000482	          0x8b45e0	             mov eax, dword [rbp - 0x20]	       133	lockfile.c	FUNCTION_4	WHILE_1
0x4000485	            0x4898	                                    cdqe	       133	lockfile.c	FUNCTION_4	WHILE_1
0x4000487	        0x488945f0	             mov qword [rbp - 0x10], rax	       133	lockfile.c	FUNCTION_4	WHILE_1
0x400048b	      0xe800000000	                          call 0x4000490	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x4000490	            0x89c1	                            mov ecx, eax	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x4000492	      0xbad34d6210	                     mov edx, 0x10624dd3	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x4000497	            0x89c8	                            mov eax, ecx	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x4000499	            0xf7ea	                                imul edx	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x400049b	          0xc1fa05	                              sar edx, 5	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x400049e	            0x89c8	                            mov eax, ecx	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x40004a0	          0xc1f81f	                           sar eax, 0x1f	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x40004a3	            0x29c2	                            sub edx, eax	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x40004a5	            0x89d0	                            mov eax, edx	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x40004a7	    0x69c0f4010000	                    imul eax, eax, 0x1f4	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x40004ad	            0x29c1	                            sub ecx, eax	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x40004af	            0x89c8	                            mov eax, ecx	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x40004b1	       0x5ee020000	                          add eax, 0x2ee	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x40004b6	            0x4898	                                    cdqe	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x40004b8	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x40004bd	          0x4889c1	                            mov rcx, rax	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x40004c0	    0x48bacff753e3	          movabs rdx, 0x20c49ba5e353f7cf	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x40004ca	          0x4889c8	                            mov rax, rcx	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x40004cd	          0x48f7ea	                                imul rdx	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x40004d0	        0x48c1fa07	                              sar rdx, 7	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x40004d4	          0x4889c8	                            mov rax, rcx	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x40004d7	        0x48c1f83f	                           sar rax, 0x3f	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x40004db	          0x4829c2	                            sub rdx, rax	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x40004de	          0x4889d0	                            mov rax, rdx	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x40004e1	        0x488945f8	                mov qword [rbp - 8], rax	       135	lockfile.c	FUNCTION_4	WHILE_1	CALL_5
0x40004e5	        0x488b45f8	                mov rax, qword [rbp - 8]	       136	lockfile.c	FUNCTION_4	WHILE_1	CALL_6
0x40004e9	            0x89c7	                            mov edi, eax	       136	lockfile.c	FUNCTION_4	WHILE_1	CALL_6
0x40004eb	      0xe800000000	                          call 0x40004f0	       136	lockfile.c	FUNCTION_4	WHILE_1	CALL_6
0x40004f0	        0x488b45f8	                mov rax, qword [rbp - 8]	       137	lockfile.c	FUNCTION_4	WHILE_1
0x40004f4	        0x482945e8	             sub qword [rbp - 0x18], rax	       137	lockfile.c	FUNCTION_4	WHILE_1
0x40004f8	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       140	lockfile.c	FUNCTION_4	WHILE_1
0x40004fb	             0x1c0	                            add eax, eax	       140	lockfile.c	FUNCTION_4	WHILE_1
0x40004fd	          0x83c001	                              add eax, 1	       140	lockfile.c	FUNCTION_4	WHILE_1
0x4000500	           0x145e0	             add dword [rbp - 0x20], eax	       140	lockfile.c	FUNCTION_4	WHILE_1
0x4000503	    0x817de0e80300	          cmp dword [rbp - 0x20], 0x3e8 	       141	lockfile.c	FUNCTION_4	WHILE_1	IF_7
0x400050a	            0x7e0c	                           jle 0x4000518	       141	lockfile.c	FUNCTION_4	WHILE_1	IF_7
0x400050c	    0xc745e0e80300	          mov dword [rbp - 0x20], 0x3e8 	       142	lockfile.c	FUNCTION_4	WHILE_1	IF_7
0x4000513	      0xe915ffffff	                           jmp 0x400042d	       142	lockfile.c	FUNCTION_4	WHILE_1	IF_7
0x4000518	        0x8345dc01	               add dword [rbp - 0x24], 1	       144	lockfile.c	FUNCTION_4	WHILE_1	ELSE_3
0x400051c	      0xe90cffffff	                           jmp 0x400042d	       145	lockfile.c	FUNCTION_4	WHILE_1	ELSE_3
0x4000521	              0xc9	                                   leave	       146	lockfile.c	FUNCTION_4	ELSE_3
0x4000522	              0xc3	                                     ret	       146	lockfile.c	FUNCTION_4	ELSE_3
commit_lock_file_to	IF,0:FOR,0:functions,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:CALL,1	12
0x40001a7	              0x55	                                push rbp	       292	lockfile.h	FUNCTION_18
0x40001a8	          0x4889e5	                            mov rbp, rsp	       292	lockfile.h	FUNCTION_18
0x40001ab	        0x4883ec10	                           sub rsp, 0x10	       292	lockfile.h	FUNCTION_18
0x40001af	        0x48897df8	                mov qword [rbp - 8], rdi	       292	lockfile.h	FUNCTION_18
0x40001b3	        0x488975f0	             mov qword [rbp - 0x10], rsi	       292	lockfile.h	FUNCTION_18
0x40001b7	        0x488b45f8	                mov rax, qword [rbp - 8]	       293	lockfile.h	FUNCTION_18	CALL_1
0x40001bb	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       293	lockfile.h	FUNCTION_18	CALL_1
0x40001bf	          0x4889d6	                            mov rsi, rdx	       293	lockfile.h	FUNCTION_18	CALL_1
0x40001c2	          0x4889c7	                            mov rdi, rax	       293	lockfile.h	FUNCTION_18	CALL_1
0x40001c5	      0xe800000000	                          call 0x40001ca	       293	lockfile.h	FUNCTION_18	CALL_1
0x40001ca	              0xc9	                                   leave	       294	lockfile.h	FUNCTION_18
0x40001cb	              0xc3	                                     ret	       294	lockfile.h	FUNCTION_18
git_has_dos_drive_prefix	IF,0:FOR,0:functions,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:CALL,0	6
0x4000040	              0x55	                                push rbp	       347	git-compat-util.h	FUNCTION_20
0x4000041	          0x4889e5	                            mov rbp, rsp	       347	git-compat-util.h	FUNCTION_20
0x4000044	        0x48897df8	                mov qword [rbp - 8], rdi	       347	git-compat-util.h	FUNCTION_20
0x4000048	      0xb800000000	                              mov eax, 0	       348	git-compat-util.h	FUNCTION_20
0x400004d	              0x5d	                                 pop rbp	       349	git-compat-util.h	FUNCTION_20
0x400004e	              0xc3	                                     ret	       349	git-compat-util.h	FUNCTION_20
strbuf_addstr	IF,0:FOR,0:functions,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:CALL,2	17
0x4000107	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_51
0x4000108	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_51
0x400010b	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_51
0x400010f	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_51
0x4000113	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_51
0x4000117	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_51	CALL_2
0x400011b	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_51	CALL_2
0x400011e	      0xe800000000	                          call 0x4000123	       279	strbuf.h	FUNCTION_51	CALL_2
0x4000123	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_51	CALL_2
0x4000126	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_51	CALL_2
0x400012a	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_51	CALL_2
0x400012e	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_51	CALL_2
0x4000131	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_51	CALL_2
0x4000134	      0xe800000000	                          call 0x4000139	       279	strbuf.h	FUNCTION_51	CALL_2
0x4000139	              0x90	                                     nop	       280	strbuf.h	FUNCTION_51
0x400013a	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_51
0x400013b	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_51
git_is_dir_sep	IF,0:FOR,0:functions,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:CALL,0	8
0x400004f	              0x55	                                push rbp	       363	git-compat-util.h	FUNCTION_22
0x4000050	          0x4889e5	                            mov rbp, rsp	       363	git-compat-util.h	FUNCTION_22
0x4000053	          0x897dfc	                mov dword [rbp - 4], edi	       363	git-compat-util.h	FUNCTION_22
0x4000056	        0x837dfc2f	               cmp dword [rbp - 4], 0x2f	       364	git-compat-util.h	FUNCTION_22
0x400005a	           0xf94c0	                                 sete al	       364	git-compat-util.h	FUNCTION_22
0x400005d	           0xfb6c0	                           movzx eax, al	       364	git-compat-util.h	FUNCTION_22
0x4000060	              0x5d	                                 pop rbp	       365	git-compat-util.h	FUNCTION_22
0x4000061	              0xc3	                                     ret	       365	git-compat-util.h	FUNCTION_22
commit_lock_file	IF,1:FOR,0:functions,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:CALL,4	33
0x40007db	              0x55	                                push rbp	       203	lockfile.c	FUNCTION_9
0x40007dc	          0x4889e5	                            mov rbp, rsp	       203	lockfile.c	FUNCTION_9
0x40007df	        0x4883ec20	                           sub rsp, 0x20	       203	lockfile.c	FUNCTION_9
0x40007e3	        0x48897de8	             mov qword [rbp - 0x18], rdi	       203	lockfile.c	FUNCTION_9
0x40007e7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       204	lockfile.c	FUNCTION_9	CALL_1
0x40007eb	          0x4889c7	                            mov rdi, rax	       204	lockfile.c	FUNCTION_9	CALL_1
0x40007ee	      0xe800000000	                          call 0x40007f3	       204	lockfile.c	FUNCTION_9	CALL_1
0x40007f3	        0x488945f8	                mov qword [rbp - 8], rax	       204	lockfile.c	FUNCTION_9	CALL_1
0x40007f7	        0x488b55f8	                mov rdx, qword [rbp - 8]	       206	lockfile.c	FUNCTION_9	IF_1	CALL_2
0x40007fb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       206	lockfile.c	FUNCTION_9	IF_1	CALL_2
0x40007ff	          0x4889d6	                            mov rsi, rdx	       206	lockfile.c	FUNCTION_9	IF_1	CALL_2
0x4000802	          0x4889c7	                            mov rdi, rax	       206	lockfile.c	FUNCTION_9	IF_1	CALL_2
0x4000805	      0xe89df9ffff	            call sym.commit_lock_file_to	       206	lockfile.c	FUNCTION_9	IF_1	CALL_2
0x400080a	            0x85c0	                           test eax, eax	       206	lockfile.c	FUNCTION_9	IF_1	CALL_2
0x400080c	            0x742a	                            je 0x4000838	       206	lockfile.c	FUNCTION_9	IF_1	CALL_2
0x400080e	      0xe800000000	                          call 0x4000813	       207	lockfile.c	FUNCTION_9	IF_1
0x4000813	            0x8b00	                    mov eax, dword [rax]	       207	lockfile.c	FUNCTION_9	IF_1
0x4000815	          0x8945f4	              mov dword [rbp - 0xc], eax	       207	lockfile.c	FUNCTION_9	IF_1
0x4000818	        0x488b45f8	                mov rax, qword [rbp - 8]	       208	lockfile.c	FUNCTION_9	IF_1	CALL_3
0x400081c	          0x4889c7	                            mov rdi, rax	       208	lockfile.c	FUNCTION_9	IF_1	CALL_3
0x400081f	      0xe800000000	                          call 0x4000824	       208	lockfile.c	FUNCTION_9	IF_1	CALL_3
0x4000824	      0xe800000000	                          call 0x4000829	       209	lockfile.c	FUNCTION_9	IF_1
0x4000829	          0x4889c2	                            mov rdx, rax	       209	lockfile.c	FUNCTION_9	IF_1
0x400082c	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       209	lockfile.c	FUNCTION_9	IF_1
0x400082f	            0x8902	                    mov dword [rdx], eax	       209	lockfile.c	FUNCTION_9	IF_1
0x4000831	      0xb8ffffffff	                     mov eax, 0xffffffff	       210	lockfile.c	FUNCTION_9	IF_1
0x4000836	            0xeb11	                           jmp 0x4000849	       210	lockfile.c	FUNCTION_9	IF_1
0x4000838	        0x488b45f8	                mov rax, qword [rbp - 8]	       212	lockfile.c	FUNCTION_9	CALL_4
0x400083c	          0x4889c7	                            mov rdi, rax	       212	lockfile.c	FUNCTION_9	CALL_4
0x400083f	      0xe800000000	                          call 0x4000844	       212	lockfile.c	FUNCTION_9	CALL_4
0x4000844	      0xb800000000	                              mov eax, 0	       213	lockfile.c	FUNCTION_9
0x4000849	              0xc9	                                   leave	       214	lockfile.c	FUNCTION_9
0x400084a	              0xc3	                                     ret	       214	lockfile.c	FUNCTION_9
hold_lock_file_for_update_timeout	IF,3:FOR,0:functions,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:CALL,4	59
0x400062c	              0x55	                                push rbp	       174	lockfile.c	FUNCTION_7
0x400062d	          0x4889e5	                            mov rbp, rsp	       174	lockfile.c	FUNCTION_7
0x4000630	        0x4883ec50	                           sub rsp, 0x50	       174	lockfile.c	FUNCTION_7
0x4000634	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       174	lockfile.c	FUNCTION_7
0x4000638	        0x488975c0	             mov qword [rbp - 0x40], rsi	       174	lockfile.c	FUNCTION_7
0x400063c	          0x8955bc	             mov dword [rbp - 0x44], edx	       174	lockfile.c	FUNCTION_7
0x400063f	        0x48894db0	             mov qword [rbp - 0x50], rcx	       174	lockfile.c	FUNCTION_7
0x4000643	    0x64488b042528	                mov rax, qword fs:[0x28]	       174	lockfile.c	FUNCTION_7
0x400064c	        0x488945f8	                mov qword [rbp - 8], rax	       174	lockfile.c	FUNCTION_7
0x4000650	            0x31c0	                            xor eax, eax	       174	lockfile.c	FUNCTION_7
0x4000652	        0x488b4db0	             mov rcx, qword [rbp - 0x50]	       175	lockfile.c	FUNCTION_7	CALL_1
0x4000656	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       175	lockfile.c	FUNCTION_7	CALL_1
0x4000659	        0x488b75c0	             mov rsi, qword [rbp - 0x40]	       175	lockfile.c	FUNCTION_7	CALL_1
0x400065d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       175	lockfile.c	FUNCTION_7	CALL_1
0x4000661	          0x4889c7	                            mov rdi, rax	       175	lockfile.c	FUNCTION_7	CALL_1
0x4000664	      0xe846fdffff	              call sym.lock_file_timeout	       175	lockfile.c	FUNCTION_7	CALL_1
0x4000669	          0x8945dc	             mov dword [rbp - 0x24], eax	       175	lockfile.c	FUNCTION_7	CALL_1
0x400066c	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       176	lockfile.c	FUNCTION_7	IF_1
0x4000670	     0xf8981000000	                           jns 0x40006f7	       176	lockfile.c	FUNCTION_7	IF_1
0x4000676	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       177	lockfile.c	FUNCTION_7	IF_1	IF_2
0x4000679	          0x83e001	                              and eax, 1	       177	lockfile.c	FUNCTION_7	IF_1	IF_2
0x400067c	            0x85c0	                           test eax, eax	       177	lockfile.c	FUNCTION_7	IF_1	IF_2
0x400067e	            0x7415	                            je 0x4000695	       177	lockfile.c	FUNCTION_7	IF_1	IF_2
0x4000680	      0xe800000000	                          call 0x4000685	       178	lockfile.c	FUNCTION_7	IF_1	CALL_2
0x4000685	            0x8b10	                    mov edx, dword [rax]	       178	lockfile.c	FUNCTION_7	IF_1	CALL_2
0x4000687	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       178	lockfile.c	FUNCTION_7	IF_1	CALL_2
0x400068b	            0x89d6	                            mov esi, edx	       178	lockfile.c	FUNCTION_7	IF_1	CALL_2
0x400068d	          0x4889c7	                            mov rdi, rax	       178	lockfile.c	FUNCTION_7	IF_1	CALL_2
0x4000690	      0xe800000000	                          call 0x4000695	       178	lockfile.c	FUNCTION_7	IF_1	CALL_2
0x4000695	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       179	lockfile.c	FUNCTION_7	IF_1	IF_3
0x4000698	          0x83e004	                              and eax, 4	       179	lockfile.c	FUNCTION_7	IF_1	IF_3
0x400069b	            0x85c0	                           test eax, eax	       179	lockfile.c	FUNCTION_7	IF_1	IF_3
0x400069d	            0x7458	                            je 0x40006f7	       179	lockfile.c	FUNCTION_7	IF_1	IF_3
0x400069f	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       180	lockfile.c	FUNCTION_7	IF_1	IF_3
0x40006a7	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       180	lockfile.c	FUNCTION_7	IF_1	IF_3
0x40006af	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       180	lockfile.c	FUNCTION_7	IF_1	IF_3
0x40006b7	      0xe800000000	                          call 0x40006bc	       181	lockfile.c	FUNCTION_7	IF_1	IF_3	CALL_3
0x40006bc	            0x8b08	                    mov ecx, dword [rax]	       181	lockfile.c	FUNCTION_7	IF_1	IF_3	CALL_3
0x40006be	        0x488d55e0	                   lea rdx, [rbp - 0x20]	       181	lockfile.c	FUNCTION_7	IF_1	IF_3	CALL_3
0x40006c2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       181	lockfile.c	FUNCTION_7	IF_1	IF_3	CALL_3
0x40006c6	            0x89ce	                            mov esi, ecx	       181	lockfile.c	FUNCTION_7	IF_1	IF_3	CALL_3
0x40006c8	          0x4889c7	                            mov rdi, rax	       181	lockfile.c	FUNCTION_7	IF_1	IF_3	CALL_3
0x40006cb	      0xe800000000	                          call 0x40006d0	       181	lockfile.c	FUNCTION_7	IF_1	IF_3	CALL_3
0x40006d0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       182	lockfile.c	FUNCTION_7	IF_1	IF_3
0x40006d4	          0x4889c6	                            mov rsi, rax	       182	lockfile.c	FUNCTION_7	IF_1	IF_3
0x40006d7	      0xbf00000000	                              mov edi, 0	       182	lockfile.c	FUNCTION_7	IF_1	IF_3
0x40006dc	      0xb800000000	                              mov eax, 0	       182	lockfile.c	FUNCTION_7	IF_1	IF_3
0x40006e1	      0xe800000000	                          call 0x40006e6	       182	lockfile.c	FUNCTION_7	IF_1	IF_3
0x40006e6	      0xe877f9ffff	                    call sym.const_error	       182	lockfile.c	FUNCTION_7	IF_1	IF_3
0x40006eb	        0x488d45e0	                   lea rax, [rbp - 0x20]	       183	lockfile.c	FUNCTION_7	IF_1	IF_3	CALL_4
0x40006ef	          0x4889c7	                            mov rdi, rax	       183	lockfile.c	FUNCTION_7	IF_1	IF_3	CALL_4
0x40006f2	      0xe800000000	                          call 0x40006f7	       183	lockfile.c	FUNCTION_7	IF_1	IF_3	CALL_4
0x40006f7	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       186	lockfile.c	FUNCTION_7
0x40006fa	        0x488b4df8	                mov rcx, qword [rbp - 8]	       187	lockfile.c	FUNCTION_7
0x40006fe	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       187	lockfile.c	FUNCTION_7
0x4000707	            0x7405	                            je 0x400070e	       187	lockfile.c	FUNCTION_7
0x4000709	      0xe800000000	                          call 0x400070e	       187	lockfile.c	FUNCTION_7
0x400070e	              0xc9	                                   leave	       187	lockfile.c	FUNCTION_7
0x400070f	              0xc3	                                     ret	       187	lockfile.c	FUNCTION_7
strbuf_setlen	IF,2:FOR,0:functions,0:ELSE,1:SWITCH,0:WHILE,0:DO,0:CALL,2	43
0x400006d	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_49
0x400006e	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_49
0x4000071	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_49
0x4000075	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_49
0x4000079	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_49
0x400007d	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_49	IF_1
0x4000081	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_49	IF_1
0x4000084	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_49	IF_1
0x4000087	            0x740d	                            je 0x4000096	       162	strbuf.h	FUNCTION_49	IF_1
0x4000089	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_49	IF_1
0x400008d	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_49	IF_1
0x4000090	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_49	IF_1
0x4000094	            0xeb05	                           jmp 0x400009b	       162	strbuf.h	FUNCTION_49	IF_1
0x4000096	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_49	IF_1
0x400009b	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_49	IF_1
0x400009f	            0x730f	                           jae 0x40000b0	       162	strbuf.h	FUNCTION_49	IF_1
0x40000a1	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_49	CALL_1
0x40000a6	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_49	CALL_1
0x40000ab	      0xe800000000	                          call 0x40000b0	       163	strbuf.h	FUNCTION_49	CALL_1
0x40000b0	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_49
0x40000b4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_49
0x40000b8	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_49
0x40000bc	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_49	IF_2
0x40000c0	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_49	IF_2
0x40000c4	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_49	IF_2
0x40000ca	            0x7414	                            je 0x40000e0	       165	strbuf.h	FUNCTION_49	IF_2
0x40000cc	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_49	IF_2
0x40000d0	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_49	IF_2
0x40000d4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_49	IF_2
0x40000d8	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_49	IF_2
0x40000db	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_49	IF_2
0x40000de	            0xeb24	                           jmp 0x4000104	       169	strbuf.h	FUNCTION_49
0x40000e0	     0xfb605000000	           movzx eax, byte [0x040000e7] 	       168	strbuf.h	FUNCTION_49	CALL_2
0x40000e7	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_49	CALL_2
0x40000e9	            0x7419	                            je 0x4000104	       168	strbuf.h	FUNCTION_49	CALL_2
0x40000eb	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_49	CALL_2
0x40000f0	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_49	CALL_2
0x40000f5	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_49	CALL_2
0x40000fa	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_49	CALL_2
0x40000ff	      0xe800000000	                          call 0x4000104	       168	strbuf.h	FUNCTION_49	CALL_2
0x4000104	              0x90	                                     nop	       169	strbuf.h	FUNCTION_49
0x4000105	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_49
0x4000106	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_49
unable_to_lock_message	IF,1:FOR,0:functions,0:ELSE,1:SWITCH,0:WHILE,0:DO,0:CALL,8	51
0x4000523	              0x55	                                push rbp	       149	lockfile.c	ELSE_3	FUNCTION_5
0x4000524	          0x4889e5	                            mov rbp, rsp	       149	lockfile.c	ELSE_3	FUNCTION_5
0x4000527	            0x4154	                                push r12	       149	lockfile.c	ELSE_3	FUNCTION_5
0x4000529	              0x53	                                push rbx	       149	lockfile.c	ELSE_3	FUNCTION_5
0x400052a	        0x4883ec20	                           sub rsp, 0x20	       149	lockfile.c	ELSE_3	FUNCTION_5
0x400052e	        0x48897de8	             mov qword [rbp - 0x18], rdi	       149	lockfile.c	ELSE_3	FUNCTION_5
0x4000532	          0x8975e4	             mov dword [rbp - 0x1c], esi	       149	lockfile.c	ELSE_3	FUNCTION_5
0x4000535	        0x488955d8	             mov qword [rbp - 0x28], rdx	       149	lockfile.c	ELSE_3	FUNCTION_5
0x4000539	        0x837de411	           cmp dword [rbp - 0x1c], 0x11 	       150	lockfile.c	ELSE_3	FUNCTION_5	IF_1
0x400053d	            0x7542	                           jne 0x4000581	       150	lockfile.c	ELSE_3	FUNCTION_5	IF_1
0x400053f	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       151	lockfile.c	ELSE_3	FUNCTION_5	IF_1	CALL_2
0x4000542	            0x89c7	                            mov edi, eax	       151	lockfile.c	ELSE_3	FUNCTION_5	IF_1	CALL_2
0x4000544	      0xe800000000	                          call 0x4000549	       151	lockfile.c	ELSE_3	FUNCTION_5	IF_1	CALL_2
0x4000549	          0x4989c4	                            mov r12, rax	       151	lockfile.c	ELSE_3	FUNCTION_5	IF_1	CALL_2
0x400054c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       151	lockfile.c	ELSE_3	FUNCTION_5	IF_1	CALL_2
0x4000550	          0x4889c7	                            mov rdi, rax	       151	lockfile.c	ELSE_3	FUNCTION_5	IF_1	CALL_2
0x4000553	      0xe800000000	                          call 0x4000558	       151	lockfile.c	ELSE_3	FUNCTION_5	IF_1	CALL_2
0x4000558	          0x4889c3	                            mov rbx, rax	       151	lockfile.c	ELSE_3	FUNCTION_5	IF_1	CALL_2
0x400055b	      0xbf00000000	                              mov edi, 0	       151	lockfile.c	ELSE_3	FUNCTION_5	IF_1	CALL_2
0x4000560	      0xe8d7fbffff	                               call sym.	       151	lockfile.c	ELSE_3	FUNCTION_5	IF_1	CALL_2
0x4000565	          0x4889c6	                            mov rsi, rax	       151	lockfile.c	ELSE_3	FUNCTION_5	IF_1	CALL_2
0x4000568	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       151	lockfile.c	ELSE_3	FUNCTION_5	IF_1	CALL_2
0x400056c	          0x4c89e1	                            mov rcx, r12	       151	lockfile.c	ELSE_3	FUNCTION_5	IF_1	CALL_2
0x400056f	          0x4889da	                            mov rdx, rbx	       151	lockfile.c	ELSE_3	FUNCTION_5	IF_1	CALL_2
0x4000572	          0x4889c7	                            mov rdi, rax	       151	lockfile.c	ELSE_3	FUNCTION_5	IF_1	CALL_2
0x4000575	      0xb800000000	                              mov eax, 0	       151	lockfile.c	ELSE_3	FUNCTION_5	IF_1	CALL_2
0x400057a	      0xe800000000	                          call 0x400057f	       151	lockfile.c	ELSE_3	FUNCTION_5	IF_1	CALL_2
0x400057f	            0xeb40	                           jmp 0x40005c1	       161	lockfile.c	ELSE_3	FUNCTION_5
0x4000581	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       159	lockfile.c	ELSE_3	FUNCTION_5	ELSE_1	CALL_6
0x4000584	            0x89c7	                            mov edi, eax	       159	lockfile.c	ELSE_3	FUNCTION_5	ELSE_1	CALL_6
0x4000586	      0xe800000000	                          call 0x400058b	       159	lockfile.c	ELSE_3	FUNCTION_5	ELSE_1	CALL_6
0x400058b	          0x4989c4	                            mov r12, rax	       159	lockfile.c	ELSE_3	FUNCTION_5	ELSE_1	CALL_6
0x400058e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       159	lockfile.c	ELSE_3	FUNCTION_5	ELSE_1	CALL_6
0x4000592	          0x4889c7	                            mov rdi, rax	       159	lockfile.c	ELSE_3	FUNCTION_5	ELSE_1	CALL_6
0x4000595	      0xe800000000	                          call 0x400059a	       159	lockfile.c	ELSE_3	FUNCTION_5	ELSE_1	CALL_6
0x400059a	          0x4889c3	                            mov rbx, rax	       159	lockfile.c	ELSE_3	FUNCTION_5	ELSE_1	CALL_6
0x400059d	      0xbf00000000	                              mov edi, 0	       159	lockfile.c	ELSE_3	FUNCTION_5	ELSE_1	CALL_6
0x40005a2	      0xe895fbffff	                               call sym.	       159	lockfile.c	ELSE_3	FUNCTION_5	ELSE_1	CALL_6
0x40005a7	          0x4889c6	                            mov rsi, rax	       159	lockfile.c	ELSE_3	FUNCTION_5	ELSE_1	CALL_6
0x40005aa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       159	lockfile.c	ELSE_3	FUNCTION_5	ELSE_1	CALL_6
0x40005ae	          0x4c89e1	                            mov rcx, r12	       159	lockfile.c	ELSE_3	FUNCTION_5	ELSE_1	CALL_6
0x40005b1	          0x4889da	                            mov rdx, rbx	       159	lockfile.c	ELSE_3	FUNCTION_5	ELSE_1	CALL_6
0x40005b4	          0x4889c7	                            mov rdi, rax	       159	lockfile.c	ELSE_3	FUNCTION_5	ELSE_1	CALL_6
0x40005b7	      0xb800000000	                              mov eax, 0	       159	lockfile.c	ELSE_3	FUNCTION_5	ELSE_1	CALL_6
0x40005bc	      0xe800000000	                          call 0x40005c1	       159	lockfile.c	ELSE_3	FUNCTION_5	ELSE_1	CALL_6
0x40005c1	              0x90	                                     nop	       161	lockfile.c	ELSE_3	FUNCTION_5
0x40005c2	        0x4883c420	                           add rsp, 0x20	       161	lockfile.c	ELSE_3	FUNCTION_5
0x40005c6	              0x5b	                                 pop rbx	       161	lockfile.c	ELSE_3	FUNCTION_5
0x40005c7	            0x415c	                                 pop r12	       161	lockfile.c	ELSE_3	FUNCTION_5
0x40005c9	              0x5d	                                 pop rbp	       161	lockfile.c	ELSE_3	FUNCTION_5
0x40005ca	              0xc3	                                     ret	       161	lockfile.c	ELSE_3	FUNCTION_5
get_locked_file_path	IF,1:FOR,0:functions,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:CALL,6	50
0x4000710	              0x55	                                push rbp	       190	lockfile.c	FUNCTION_8
0x4000711	          0x4889e5	                            mov rbp, rsp	       190	lockfile.c	FUNCTION_8
0x4000714	        0x4883ec30	                           sub rsp, 0x30	       190	lockfile.c	FUNCTION_8
0x4000718	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       190	lockfile.c	FUNCTION_8
0x400071c	    0x64488b042528	                mov rax, qword fs:[0x28]	       190	lockfile.c	FUNCTION_8
0x4000725	        0x488945f8	                mov qword [rbp - 8], rax	       190	lockfile.c	FUNCTION_8
0x4000729	            0x31c0	                            xor eax, eax	       190	lockfile.c	FUNCTION_8
0x400072b	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       191	lockfile.c	FUNCTION_8
0x4000733	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       191	lockfile.c	FUNCTION_8
0x400073b	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       191	lockfile.c	FUNCTION_8
0x4000743	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       193	lockfile.c	FUNCTION_8	CALL_2
0x4000747	          0x488b00	                    mov rax, qword [rax]	       193	lockfile.c	FUNCTION_8	CALL_2
0x400074a	          0x4889c7	                            mov rdi, rax	       193	lockfile.c	FUNCTION_8	CALL_2
0x400074d	      0xe800000000	                          call 0x4000752	       193	lockfile.c	FUNCTION_8	CALL_2
0x4000752	          0x4889c2	                            mov rdx, rax	       193	lockfile.c	FUNCTION_8	CALL_2
0x4000755	        0x488d45e0	                   lea rax, [rbp - 0x20]	       193	lockfile.c	FUNCTION_8	CALL_2
0x4000759	          0x4889d6	                            mov rsi, rdx	       193	lockfile.c	FUNCTION_8	CALL_2
0x400075c	          0x4889c7	                            mov rdi, rax	       193	lockfile.c	FUNCTION_8	CALL_2
0x400075f	      0xe8a3f9ffff	                  call sym.strbuf_addstr	       193	lockfile.c	FUNCTION_8	CALL_2
0x4000764	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       194	lockfile.c	FUNCTION_8	IF_1
0x4000768	        0x4883f805	                              cmp rax, 5	       194	lockfile.c	FUNCTION_8	IF_1
0x400076c	            0x7620	                           jbe 0x400078e	       194	lockfile.c	FUNCTION_8	IF_1
0x400076e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       195	lockfile.c	FUNCTION_8	IF_1	CALL_3
0x4000772	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       195	lockfile.c	FUNCTION_8	IF_1	CALL_3
0x4000776	        0x4883ea05	                              sub rdx, 5	       195	lockfile.c	FUNCTION_8	IF_1	CALL_3
0x400077a	          0x4801d0	                            add rax, rdx	       195	lockfile.c	FUNCTION_8	IF_1	CALL_3
0x400077d	      0xbe00000000	                              mov esi, 0	       195	lockfile.c	FUNCTION_8	IF_1	CALL_3
0x4000782	          0x4889c7	                            mov rdi, rax	       195	lockfile.c	FUNCTION_8	IF_1	CALL_3
0x4000785	      0xe800000000	                          call 0x400078a	       195	lockfile.c	FUNCTION_8	IF_1	CALL_3
0x400078a	            0x85c0	                           test eax, eax	       194	lockfile.c	FUNCTION_8	IF_1
0x400078c	            0x740f	                            je 0x400079d	       194	lockfile.c	FUNCTION_8	IF_1
0x400078e	      0xbf00000000	                              mov edi, 0	       196	lockfile.c	FUNCTION_8	CALL_4
0x4000793	      0xb800000000	                              mov eax, 0	       196	lockfile.c	FUNCTION_8	CALL_4
0x4000798	      0xe800000000	                          call 0x400079d	       196	lockfile.c	FUNCTION_8	CALL_4
0x400079d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       198	lockfile.c	FUNCTION_8	CALL_5
0x40007a1	        0x488d50fb	                      lea rdx, [rax - 5]	       198	lockfile.c	FUNCTION_8	CALL_5
0x40007a5	        0x488d45e0	                   lea rax, [rbp - 0x20]	       198	lockfile.c	FUNCTION_8	CALL_5
0x40007a9	          0x4889d6	                            mov rsi, rdx	       198	lockfile.c	FUNCTION_8	CALL_5
0x40007ac	          0x4889c7	                            mov rdi, rax	       198	lockfile.c	FUNCTION_8	CALL_5
0x40007af	      0xe8b9f8ffff	                  call sym.strbuf_setlen	       198	lockfile.c	FUNCTION_8	CALL_5
0x40007b4	        0x488d45e0	                   lea rax, [rbp - 0x20]	       199	lockfile.c	FUNCTION_8	CALL_6
0x40007b8	      0xbe00000000	                              mov esi, 0	       199	lockfile.c	FUNCTION_8	CALL_6
0x40007bd	          0x4889c7	                            mov rdi, rax	       199	lockfile.c	FUNCTION_8	CALL_6
0x40007c0	      0xe800000000	                          call 0x40007c5	       199	lockfile.c	FUNCTION_8	CALL_6
0x40007c5	        0x488b4df8	                mov rcx, qword [rbp - 8]	       200	lockfile.c	FUNCTION_8
0x40007c9	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       200	lockfile.c	FUNCTION_8
0x40007d2	            0x7405	                            je 0x40007d9	       200	lockfile.c	FUNCTION_8
0x40007d4	      0xe800000000	                          call 0x40007d9	       200	lockfile.c	FUNCTION_8
0x40007d9	              0xc9	                                   leave	       200	lockfile.c	FUNCTION_8
0x40007da	              0xc3	                                     ret	       200	lockfile.c	FUNCTION_8
lock_file	IF,1:FOR,0:functions,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:CALL,5	52
0x40002e6	              0x55	                                push rbp	        74	lockfile.c	FUNCTION_3
0x40002e7	          0x4889e5	                            mov rbp, rsp	        74	lockfile.c	FUNCTION_3
0x40002ea	        0x4883ec40	                           sub rsp, 0x40	        74	lockfile.c	FUNCTION_3
0x40002ee	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        74	lockfile.c	FUNCTION_3
0x40002f2	        0x488975d0	             mov qword [rbp - 0x30], rsi	        74	lockfile.c	FUNCTION_3
0x40002f6	          0x8955cc	             mov dword [rbp - 0x34], edx	        74	lockfile.c	FUNCTION_3
0x40002f9	    0x64488b042528	                mov rax, qword fs:[0x28]	        74	lockfile.c	FUNCTION_3
0x4000302	        0x488945f8	                mov qword [rbp - 8], rax	        74	lockfile.c	FUNCTION_3
0x4000306	            0x31c0	                            xor eax, eax	        74	lockfile.c	FUNCTION_3
0x4000308	    0x48c745e00000	               mov qword [rbp - 0x20], 0	        75	lockfile.c	FUNCTION_3
0x4000310	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        75	lockfile.c	FUNCTION_3
0x4000318	    0x48c745f00000	               mov qword [rbp - 0x10], 0	        75	lockfile.c	FUNCTION_3
0x4000320	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	        77	lockfile.c	FUNCTION_3	CALL_1
0x4000324	        0x488d45e0	                   lea rax, [rbp - 0x20]	        77	lockfile.c	FUNCTION_3	CALL_1
0x4000328	          0x4889d6	                            mov rsi, rdx	        77	lockfile.c	FUNCTION_3	CALL_1
0x400032b	          0x4889c7	                            mov rdi, rax	        77	lockfile.c	FUNCTION_3	CALL_1
0x400032e	      0xe8d4fdffff	                  call sym.strbuf_addstr	        77	lockfile.c	FUNCTION_3	CALL_1
0x4000333	          0x8b45cc	             mov eax, dword [rbp - 0x34]	        78	lockfile.c	FUNCTION_3	IF_1
0x4000336	          0x83e002	                              and eax, 2	        78	lockfile.c	FUNCTION_3	IF_1
0x4000339	            0x85c0	                           test eax, eax	        78	lockfile.c	FUNCTION_3	IF_1
0x400033b	            0x750c	                           jne 0x4000349	        78	lockfile.c	FUNCTION_3	IF_1
0x400033d	        0x488d45e0	                   lea rax, [rbp - 0x20]	        79	lockfile.c	FUNCTION_3	CALL_2
0x4000341	          0x4889c7	                            mov rdi, rax	        79	lockfile.c	FUNCTION_3	CALL_2
0x4000344	      0xe802ffffff	                call sym.resolve_symlink	        79	lockfile.c	FUNCTION_3	CALL_2
0x4000349	        0x488d45e0	                   lea rax, [rbp - 0x20]	        81	lockfile.c	FUNCTION_3	CALL_3
0x400034d	      0xbe00000000	                              mov esi, 0	        81	lockfile.c	FUNCTION_3	CALL_3
0x4000352	          0x4889c7	                            mov rdi, rax	        81	lockfile.c	FUNCTION_3	CALL_3
0x4000355	      0xe8adfdffff	                  call sym.strbuf_addstr	        81	lockfile.c	FUNCTION_3	CALL_3
0x400035a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        82	lockfile.c	FUNCTION_3	CALL_4
0x400035e	          0x4889c7	                            mov rdi, rax	        82	lockfile.c	FUNCTION_3	CALL_4
0x4000361	      0xe800000000	                          call 0x4000366	        82	lockfile.c	FUNCTION_3	CALL_4
0x4000366	          0x4889c2	                            mov rdx, rax	        82	lockfile.c	FUNCTION_3	CALL_4
0x4000369	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        82	lockfile.c	FUNCTION_3	CALL_4
0x400036d	          0x488910	                    mov qword [rax], rdx	        82	lockfile.c	FUNCTION_3	CALL_4
0x4000370	        0x488d45e0	                   lea rax, [rbp - 0x20]	        83	lockfile.c	FUNCTION_3	CALL_5
0x4000374	          0x4889c7	                            mov rdi, rax	        83	lockfile.c	FUNCTION_3	CALL_5
0x4000377	      0xe800000000	                          call 0x400037c	        83	lockfile.c	FUNCTION_3	CALL_5
0x400037c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        84	lockfile.c	FUNCTION_3
0x4000380	          0x488b00	                    mov rax, qword [rax]	        84	lockfile.c	FUNCTION_3
0x4000383	          0x4885c0	                           test rax, rax	        84	lockfile.c	FUNCTION_3
0x4000386	            0x740c	                            je 0x4000394	        84	lockfile.c	FUNCTION_3
0x4000388	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        84	lockfile.c	FUNCTION_3
0x400038c	          0x488b00	                    mov rax, qword [rax]	        84	lockfile.c	FUNCTION_3
0x400038f	          0x8b4014	            mov eax, dword [rax + 0x14] 	        84	lockfile.c	FUNCTION_3
0x4000392	            0xeb05	                           jmp 0x4000399	        84	lockfile.c	FUNCTION_3
0x4000394	      0xb8ffffffff	                     mov eax, 0xffffffff	        84	lockfile.c	FUNCTION_3
0x4000399	        0x488b4df8	                mov rcx, qword [rbp - 8]	        85	lockfile.c	FUNCTION_3
0x400039d	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        85	lockfile.c	FUNCTION_3
0x40003a6	            0x7405	                            je 0x40003ad	        85	lockfile.c	FUNCTION_3
0x40003a8	      0xe800000000	                          call 0x40003ad	        85	lockfile.c	FUNCTION_3
0x40003ad	              0xc9	                                   leave	        85	lockfile.c	FUNCTION_3
0x40003ae	              0xc3	                                     ret	        85	lockfile.c	FUNCTION_3
_	IF,1:FOR,0:functions,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:CALL,0	15
0x400013c	              0x55	                                push rbp	        51	gettext.h	FUNCTION_60
0x400013d	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_60
0x4000140	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_60
0x4000144	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_60
0x4000148	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_60	IF_1
0x400014c	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_60	IF_1
0x400014f	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_60	IF_1
0x4000151	            0x7507	                           jne 0x400015a	        52	gettext.h	FUNCTION_60	IF_1
0x4000153	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_60	IF_1
0x4000158	            0xeb0c	                           jmp 0x4000166	        53	gettext.h	FUNCTION_60	IF_1
0x400015a	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_60
0x400015e	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_60
0x4000161	      0xe800000000	                          call 0x4000166	        54	gettext.h	FUNCTION_60
0x4000166	              0xc9	                                   leave	        55	gettext.h	FUNCTION_60
0x4000167	              0xc3	                                     ret	        55	gettext.h	FUNCTION_60
resolve_symlink	IF,2:FOR,0:functions,0:ELSE,1:SWITCH,0:WHILE,1:DO,0:CALL,4	45
0x400024b	              0x55	                                push rbp	        49	lockfile.c	FUNCTION_2
0x400024c	          0x4889e5	                            mov rbp, rsp	        49	lockfile.c	FUNCTION_2
0x400024f	        0x4883ec20	                           sub rsp, 0x20	        49	lockfile.c	FUNCTION_2
0x4000253	        0x48897de8	             mov qword [rbp - 0x18], rdi	        49	lockfile.c	FUNCTION_2
0x4000257	    0xc745fc050000	                  mov dword [rbp - 4], 5	        50	lockfile.c	FUNCTION_2
0x400025e	            0xeb64	                           jmp 0x40002c4	        53	lockfile.c	FUNCTION_2	WHILE_1
0x4000260	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        54	lockfile.c	FUNCTION_2	WHILE_1	IF_1	CALL_1
0x4000264	        0x488b5008	                mov rdx, qword [rax + 8]	        54	lockfile.c	FUNCTION_2	WHILE_1	IF_1	CALL_1
0x4000268	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        54	lockfile.c	FUNCTION_2	WHILE_1	IF_1	CALL_1
0x400026c	        0x488b4010	            mov rax, qword [rax + 0x10] 	        54	lockfile.c	FUNCTION_2	WHILE_1	IF_1	CALL_1
0x4000270	          0x4889c6	                            mov rsi, rax	        54	lockfile.c	FUNCTION_2	WHILE_1	IF_1	CALL_1
0x4000273	      0xbf00000000	                              mov edi, 0	        54	lockfile.c	FUNCTION_2	WHILE_1	IF_1	CALL_1
0x4000278	      0xe800000000	                          call 0x400027d	        54	lockfile.c	FUNCTION_2	WHILE_1	IF_1	CALL_1
0x400027d	            0x85c0	                           test eax, eax	        54	lockfile.c	FUNCTION_2	WHILE_1	IF_1	CALL_1
0x400027f	            0x7852	                            js 0x40002d3	        54	lockfile.c	FUNCTION_2	WHILE_1	IF_1	CALL_1
0x4000281	    0x488b05000000	            mov rax, qword [0x04000288] 	        57	lockfile.c	FUNCTION_2	WHILE_1	IF_2	CALL_2
0x4000288	          0x4889c7	                            mov rdi, rax	        57	lockfile.c	FUNCTION_2	WHILE_1	IF_2	CALL_2
0x400028b	      0xe8d8feffff	               call sym.is_absolute_path	        57	lockfile.c	FUNCTION_2	WHILE_1	IF_2	CALL_2
0x4000290	            0x85c0	                           test eax, eax	        57	lockfile.c	FUNCTION_2	WHILE_1	IF_2	CALL_2
0x4000292	            0x7413	                            je 0x40002a7	        57	lockfile.c	FUNCTION_2	WHILE_1	IF_2	CALL_2
0x4000294	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        59	lockfile.c	FUNCTION_2	WHILE_1	IF_2
0x4000298	      0xbe00000000	                              mov esi, 0	        59	lockfile.c	FUNCTION_2	WHILE_1	IF_2
0x400029d	          0x4889c7	                            mov rdi, rax	        59	lockfile.c	FUNCTION_2	WHILE_1	IF_2
0x40002a0	      0xe8c8fdffff	                  call sym.strbuf_setlen	        59	lockfile.c	FUNCTION_2	WHILE_1	IF_2
0x40002a5	            0xeb0c	                           jmp 0x40002b3	        59	lockfile.c	FUNCTION_2	WHILE_1	IF_2
0x40002a7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        65	lockfile.c	FUNCTION_2	WHILE_1	CALL_3
0x40002ab	          0x4889c7	                            mov rdi, rax	        65	lockfile.c	FUNCTION_2	WHILE_1	CALL_3
0x40002ae	      0xe819ffffff	       call sym.trim_last_path_component	        65	lockfile.c	FUNCTION_2	WHILE_1	CALL_3
0x40002b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        67	lockfile.c	FUNCTION_2	WHILE_1	CALL_4
0x40002b7	      0xbe00000000	                              mov esi, 0	        67	lockfile.c	FUNCTION_2	WHILE_1	CALL_4
0x40002bc	          0x4889c7	                            mov rdi, rax	        67	lockfile.c	FUNCTION_2	WHILE_1	CALL_4
0x40002bf	      0xe800000000	                          call 0x40002c4	        67	lockfile.c	FUNCTION_2	WHILE_1	CALL_4
0x40002c4	          0x8b45fc	                mov eax, dword [rbp - 4]	        53	lockfile.c	FUNCTION_2	WHILE_1
0x40002c7	          0x8d50ff	                      lea edx, [rax - 1]	        53	lockfile.c	FUNCTION_2	WHILE_1
0x40002ca	          0x8955fc	                mov dword [rbp - 4], edx	        53	lockfile.c	FUNCTION_2	WHILE_1
0x40002cd	            0x85c0	                           test eax, eax	        53	lockfile.c	FUNCTION_2	WHILE_1
0x40002cf	            0x758f	                           jne 0x4000260	        53	lockfile.c	FUNCTION_2	WHILE_1
0x40002d1	            0xeb01	                           jmp 0x40002d4	        53	lockfile.c	FUNCTION_2	WHILE_1
0x40002d3	              0x90	                                     nop	        55	lockfile.c	FUNCTION_2	WHILE_1	IF_1
0x40002d4	      0xbe00000000	                              mov esi, 0	        69	lockfile.c	FUNCTION_2
0x40002d9	      0xbf00000000	                              mov edi, 0	        69	lockfile.c	FUNCTION_2
0x40002de	      0xe88afdffff	                  call sym.strbuf_setlen	        69	lockfile.c	FUNCTION_2
0x40002e3	              0x90	                                     nop	        70	lockfile.c	FUNCTION_2
0x40002e4	              0xc9	                                   leave	        70	lockfile.c	FUNCTION_2
0x40002e5	              0xc3	                                     ret	        70	lockfile.c	FUNCTION_2
trim_last_path_component	IF,0:FOR,0:functions,0:ELSE,0:SWITCH,0:WHILE,2:DO,0:CALL,1	42
0x40001cc	              0x55	                                push rbp	        16	lockfile.c	FUNCTION_1
0x40001cd	          0x4889e5	                            mov rbp, rsp	        16	lockfile.c	FUNCTION_1
0x40001d0	        0x4883ec20	                           sub rsp, 0x20	        16	lockfile.c	FUNCTION_1
0x40001d4	        0x48897de8	             mov qword [rbp - 0x18], rdi	        16	lockfile.c	FUNCTION_1
0x40001d8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        17	lockfile.c	FUNCTION_1
0x40001dc	        0x488b4008	                mov rax, qword [rax + 8]	        17	lockfile.c	FUNCTION_1
0x40001e0	          0x8945fc	                mov dword [rbp - 4], eax	        17	lockfile.c	FUNCTION_1
0x40001e3	            0xeb04	                           jmp 0x40001e9	        20	lockfile.c	FUNCTION_1	WHILE_1
0x40001e5	        0x836dfc01	                  sub dword [rbp - 4], 1	        21	lockfile.c	FUNCTION_1	WHILE_1
0x40001e9	        0x837dfc00	                  cmp dword [rbp - 4], 0	        20	lockfile.c	FUNCTION_1	WHILE_1
0x40001ed	            0x7422	                            je 0x4000211	        20	lockfile.c	FUNCTION_1	WHILE_1
0x40001ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        20	lockfile.c	FUNCTION_1	WHILE_1
0x40001f3	        0x488b4010	            mov rax, qword [rax + 0x10] 	        20	lockfile.c	FUNCTION_1	WHILE_1
0x40001f7	          0x8b55fc	                mov edx, dword [rbp - 4]	        20	lockfile.c	FUNCTION_1	WHILE_1
0x40001fa	          0x4863d2	                         movsxd rdx, edx	        20	lockfile.c	FUNCTION_1	WHILE_1
0x40001fd	        0x4883ea01	                              sub rdx, 1	        20	lockfile.c	FUNCTION_1	WHILE_1
0x4000201	          0x4801d0	                            add rax, rdx	        20	lockfile.c	FUNCTION_1	WHILE_1
0x4000204	           0xfb600	                   movzx eax, byte [rax]	        20	lockfile.c	FUNCTION_1	WHILE_1
0x4000207	            0x3c2f	                            cmp al, 0x2f	        20	lockfile.c	FUNCTION_1	WHILE_1
0x4000209	            0x74da	                            je 0x40001e5	        20	lockfile.c	FUNCTION_1	WHILE_1
0x400020b	            0xeb04	                           jmp 0x4000211	        27	lockfile.c	FUNCTION_1	WHILE_2
0x400020d	        0x836dfc01	                  sub dword [rbp - 4], 1	        28	lockfile.c	FUNCTION_1	WHILE_2
0x4000211	        0x837dfc00	                  cmp dword [rbp - 4], 0	        27	lockfile.c	FUNCTION_1	WHILE_2
0x4000215	            0x741c	                            je 0x4000233	        27	lockfile.c	FUNCTION_1	WHILE_2
0x4000217	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        27	lockfile.c	FUNCTION_1	WHILE_2
0x400021b	        0x488b4010	            mov rax, qword [rax + 0x10] 	        27	lockfile.c	FUNCTION_1	WHILE_2
0x400021f	          0x8b55fc	                mov edx, dword [rbp - 4]	        27	lockfile.c	FUNCTION_1	WHILE_2
0x4000222	          0x4863d2	                         movsxd rdx, edx	        27	lockfile.c	FUNCTION_1	WHILE_2
0x4000225	        0x4883ea01	                              sub rdx, 1	        27	lockfile.c	FUNCTION_1	WHILE_2
0x4000229	          0x4801d0	                            add rax, rdx	        27	lockfile.c	FUNCTION_1	WHILE_2
0x400022c	           0xfb600	                   movzx eax, byte [rax]	        27	lockfile.c	FUNCTION_1	WHILE_2
0x400022f	            0x3c2f	                            cmp al, 0x2f	        27	lockfile.c	FUNCTION_1	WHILE_2
0x4000231	            0x75da	                           jne 0x400020d	        27	lockfile.c	FUNCTION_1	WHILE_2
0x4000233	          0x8b45fc	                mov eax, dword [rbp - 4]	        30	lockfile.c	FUNCTION_1	CALL_1
0x4000236	          0x4863d0	                         movsxd rdx, eax	        30	lockfile.c	FUNCTION_1	CALL_1
0x4000239	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        30	lockfile.c	FUNCTION_1	CALL_1
0x400023d	          0x4889d6	                            mov rsi, rdx	        30	lockfile.c	FUNCTION_1	CALL_1
0x4000240	          0x4889c7	                            mov rdi, rax	        30	lockfile.c	FUNCTION_1	CALL_1
0x4000243	      0xe825feffff	                  call sym.strbuf_setlen	        30	lockfile.c	FUNCTION_1	CALL_1
0x4000248	              0x90	                                     nop	        31	lockfile.c	FUNCTION_1
0x4000249	              0xc9	                                   leave	        31	lockfile.c	FUNCTION_1
0x400024a	              0xc3	                                     ret	        31	lockfile.c	FUNCTION_1
const_error	IF,0:FOR,0:functions,0:ELSE,0:SWITCH,0:WHILE,0:DO,0:CALL,0	5
0x4000062	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_25
0x4000063	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_25
0x4000066	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_25
0x400006b	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_25
0x400006c	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_25
