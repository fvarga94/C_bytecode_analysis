oidcpy	IF,0:ELSE,0:functions,0:FOR,0:WHILE,0:CALL,1:DO,0:SWITCH,0	13
0x400006b	              0x55	                                push rbp	       999	cache.h	FUNCTION_16
0x400006c	          0x4889e5	                            mov rbp, rsp	       999	cache.h	FUNCTION_16
0x400006f	        0x4883ec10	                           sub rsp, 0x10	       999	cache.h	FUNCTION_16
0x4000073	        0x48897df8	                mov qword [rbp - 8], rdi	       999	cache.h	FUNCTION_16
0x4000077	        0x488975f0	             mov qword [rbp - 0x10], rsi	       999	cache.h	FUNCTION_16
0x400007b	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1000	cache.h	FUNCTION_16	CALL_1
0x400007f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1000	cache.h	FUNCTION_16	CALL_1
0x4000083	          0x4889d6	                            mov rsi, rdx	      1000	cache.h	FUNCTION_16	CALL_1
0x4000086	          0x4889c7	                            mov rdi, rax	      1000	cache.h	FUNCTION_16	CALL_1
0x4000089	      0xe8b2ffffff	                        call sym.hashcpy	      1000	cache.h	FUNCTION_16	CALL_1
0x400008e	              0x90	                                     nop	      1001	cache.h	FUNCTION_16
0x400008f	              0xc9	                                   leave	      1001	cache.h	FUNCTION_16
0x4000090	              0xc3	                                     ret	      1001	cache.h	FUNCTION_16
hashcpy	IF,0:ELSE,0:functions,0:FOR,0:WHILE,0:CALL,1:DO,0:SWITCH,0	14
0x4000040	              0x55	                                push rbp	       994	cache.h	FUNCTION_15
0x4000041	          0x4889e5	                            mov rbp, rsp	       994	cache.h	FUNCTION_15
0x4000044	        0x4883ec10	                           sub rsp, 0x10	       994	cache.h	FUNCTION_15
0x4000048	        0x48897df8	                mov qword [rbp - 8], rdi	       994	cache.h	FUNCTION_15
0x400004c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       994	cache.h	FUNCTION_15
0x4000050	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       995	cache.h	FUNCTION_15	CALL_1
0x4000054	        0x488b45f8	                mov rax, qword [rbp - 8]	       995	cache.h	FUNCTION_15	CALL_1
0x4000058	      0xba14000000	                           mov edx, 0x14	       995	cache.h	FUNCTION_15	CALL_1
0x400005d	          0x4889ce	                            mov rsi, rcx	       995	cache.h	FUNCTION_15	CALL_1
0x4000060	          0x4889c7	                            mov rdi, rax	       995	cache.h	FUNCTION_15	CALL_1
0x4000063	      0xe800000000	                          call 0x4000068	       995	cache.h	FUNCTION_15	CALL_1
0x4000068	              0x90	                                     nop	       996	cache.h	FUNCTION_15
0x4000069	              0xc9	                                   leave	       996	cache.h	FUNCTION_15
0x400006a	              0xc3	                                     ret	       996	cache.h	FUNCTION_15
prepare_replace_object	IF,1:ELSE,0:functions,0:FOR,0:WHILE,0:CALL,3:DO,0:SWITCH,0	32
0x400017f	              0x55	                                push rbp	        35	replace-object.c	FUNCTION_2
0x4000180	          0x4889e5	                            mov rbp, rsp	        35	replace-object.c	FUNCTION_2
0x4000183	              0x53	                                push rbx	        35	replace-object.c	FUNCTION_2
0x4000184	        0x4883ec18	                           sub rsp, 0x18	        35	replace-object.c	FUNCTION_2
0x4000188	        0x48897de8	             mov qword [rbp - 0x18], rdi	        35	replace-object.c	FUNCTION_2
0x400018c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        36	replace-object.c	FUNCTION_2	IF_1
0x4000190	        0x488b4010	            mov rax, qword [rax + 0x10] 	        36	replace-object.c	FUNCTION_2	IF_1
0x4000194	        0x488b4020	            mov rax, qword [rax + 0x20] 	        36	replace-object.c	FUNCTION_2	IF_1
0x4000198	          0x4885c0	                           test rax, rax	        36	replace-object.c	FUNCTION_2	IF_1
0x400019b	            0x7547	                           jne 0x40001e4	        36	replace-object.c	FUNCTION_2	IF_1
0x400019d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        39	replace-object.c	FUNCTION_2
0x40001a1	        0x488b5810	            mov rbx, qword [rax + 0x10] 	        39	replace-object.c	FUNCTION_2
0x40001a5	      0xbf30000000	                           mov edi, 0x30	        40	replace-object.c	FUNCTION_2	CALL_1
0x40001aa	      0xe800000000	                          call 0x40001af	        40	replace-object.c	FUNCTION_2	CALL_1
0x40001af	        0x48894320	             mov qword [rbx + 0x20], rax	        39	replace-object.c	FUNCTION_2
0x40001b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        41	replace-object.c	FUNCTION_2	CALL_2
0x40001b7	        0x488b4010	            mov rax, qword [rax + 0x10] 	        41	replace-object.c	FUNCTION_2	CALL_2
0x40001bb	        0x488b4020	            mov rax, qword [rax + 0x20] 	        41	replace-object.c	FUNCTION_2	CALL_2
0x40001bf	      0xbe00000000	                              mov esi, 0	        41	replace-object.c	FUNCTION_2	CALL_2
0x40001c4	          0x4889c7	                            mov rdi, rax	        41	replace-object.c	FUNCTION_2	CALL_2
0x40001c7	      0xe800000000	                          call 0x40001cc	        41	replace-object.c	FUNCTION_2	CALL_2
0x40001cc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        43	replace-object.c	FUNCTION_2	CALL_3
0x40001d0	      0xba00000000	                              mov edx, 0	        43	replace-object.c	FUNCTION_2	CALL_3
0x40001d5	      0xbe00000000	                              mov esi, 0	        43	replace-object.c	FUNCTION_2	CALL_3
0x40001da	          0x4889c7	                            mov rdi, rax	        43	replace-object.c	FUNCTION_2	CALL_3
0x40001dd	      0xe800000000	                          call 0x40001e2	        43	replace-object.c	FUNCTION_2	CALL_3
0x40001e2	            0xeb01	                           jmp 0x40001e5	        43	replace-object.c	FUNCTION_2	CALL_3
0x40001e4	              0x90	                                     nop	        37	replace-object.c	FUNCTION_2	IF_1
0x40001e5	        0x4883c418	                           add rsp, 0x18	        44	replace-object.c	FUNCTION_2
0x40001e9	              0x5b	                                 pop rbx	        44	replace-object.c	FUNCTION_2
0x40001ea	              0x5d	                                 pop rbp	        44	replace-object.c	FUNCTION_2
0x40001eb	              0xc3	                                     ret	        44	replace-object.c	FUNCTION_2
register_replace_ref	IF,2:ELSE,0:functions,0:FOR,0:WHILE,0:CALL,8:DO,0:SWITCH,0	63
0x4000091	              0x55	                                push rbp	        12	replace-object.c	FUNCTION_1
0x4000092	          0x4889e5	                            mov rbp, rsp	        12	replace-object.c	FUNCTION_1
0x4000095	        0x4883ec40	                           sub rsp, 0x40	        12	replace-object.c	FUNCTION_1
0x4000099	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        12	replace-object.c	FUNCTION_1
0x400009d	        0x488975d0	             mov qword [rbp - 0x30], rsi	        12	replace-object.c	FUNCTION_1
0x40000a1	          0x8955cc	             mov dword [rbp - 0x34], edx	        12	replace-object.c	FUNCTION_1
0x40000a4	        0x48894dc0	             mov qword [rbp - 0x40], rcx	        12	replace-object.c	FUNCTION_1
0x40000a8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        14	replace-object.c	FUNCTION_1	CALL_1
0x40000ac	      0xbe2f000000	                           mov esi, 0x2f	        14	replace-object.c	FUNCTION_1	CALL_1
0x40000b1	          0x4889c7	                            mov rdi, rax	        14	replace-object.c	FUNCTION_1	CALL_1
0x40000b4	      0xe800000000	                          call 0x40000b9	        14	replace-object.c	FUNCTION_1	CALL_1
0x40000b9	        0x488945e8	             mov qword [rbp - 0x18], rax	        14	replace-object.c	FUNCTION_1	CALL_1
0x40000bd	      0x48837de800	               cmp qword [rbp - 0x18], 0	        15	replace-object.c	FUNCTION_1
0x40000c2	            0x740a	                            je 0x40000ce	        15	replace-object.c	FUNCTION_1
0x40000c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        15	replace-object.c	FUNCTION_1
0x40000c8	        0x4883c001	                              add rax, 1	        15	replace-object.c	FUNCTION_1
0x40000cc	            0xeb04	                           jmp 0x40000d2	        15	replace-object.c	FUNCTION_1
0x40000ce	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        15	replace-object.c	FUNCTION_1
0x40000d2	        0x488945f0	             mov qword [rbp - 0x10], rax	        15	replace-object.c	FUNCTION_1
0x40000d6	      0xbf40000000	                           mov edi, 0x40	        16	replace-object.c	FUNCTION_1	CALL_2
0x40000db	      0xe800000000	                          call 0x40000e0	        16	replace-object.c	FUNCTION_1	CALL_2
0x40000e0	        0x488945f8	                mov qword [rbp - 8], rax	        16	replace-object.c	FUNCTION_1	CALL_2
0x40000e4	        0x488b45f8	                mov rax, qword [rbp - 8]	        18	replace-object.c	FUNCTION_1	IF_1	CALL_3
0x40000e8	        0x488d5010	                   lea rdx, [rax + 0x10]	        18	replace-object.c	FUNCTION_1	IF_1	CALL_3
0x40000ec	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        18	replace-object.c	FUNCTION_1	IF_1	CALL_3
0x40000f0	          0x4889d6	                            mov rsi, rdx	        18	replace-object.c	FUNCTION_1	IF_1	CALL_3
0x40000f3	          0x4889c7	                            mov rdi, rax	        18	replace-object.c	FUNCTION_1	IF_1	CALL_3
0x40000f6	      0xe800000000	                          call 0x40000fb	        18	replace-object.c	FUNCTION_1	IF_1	CALL_3
0x40000fb	            0x85c0	                           test eax, eax	        18	replace-object.c	FUNCTION_1	IF_1	CALL_3
0x40000fd	            0x7429	                            je 0x4000128	        18	replace-object.c	FUNCTION_1	IF_1	CALL_3
0x40000ff	        0x488b45f8	                mov rax, qword [rbp - 8]	        19	replace-object.c	FUNCTION_1	IF_1	CALL_4
0x4000103	          0x4889c7	                            mov rdi, rax	        19	replace-object.c	FUNCTION_1	IF_1	CALL_4
0x4000106	      0xe800000000	                          call 0x400010b	        19	replace-object.c	FUNCTION_1	IF_1	CALL_4
0x400010b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        20	replace-object.c	FUNCTION_1	IF_1	CALL_5
0x400010f	          0x4889c6	                            mov rsi, rax	        20	replace-object.c	FUNCTION_1	IF_1	CALL_5
0x4000112	      0xbf00000000	                              mov edi, 0	        20	replace-object.c	FUNCTION_1	IF_1	CALL_5
0x4000117	      0xb800000000	                              mov eax, 0	        20	replace-object.c	FUNCTION_1	IF_1	CALL_5
0x400011c	      0xe800000000	                          call 0x4000121	        20	replace-object.c	FUNCTION_1	IF_1	CALL_5
0x4000121	      0xb800000000	                              mov eax, 0	        21	replace-object.c	FUNCTION_1	IF_1
0x4000126	            0xeb55	                           jmp 0x400017d	        21	replace-object.c	FUNCTION_1	IF_1
0x4000128	        0x488b45f8	                mov rax, qword [rbp - 8]	        25	replace-object.c	FUNCTION_1	CALL_6
0x400012c	        0x488d5028	                   lea rdx, [rax + 0x28]	        25	replace-object.c	FUNCTION_1	CALL_6
0x4000130	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        25	replace-object.c	FUNCTION_1	CALL_6
0x4000134	          0x4889c6	                            mov rsi, rax	        25	replace-object.c	FUNCTION_1	CALL_6
0x4000137	          0x4889d7	                            mov rdi, rdx	        25	replace-object.c	FUNCTION_1	CALL_6
0x400013a	      0xe82cffffff	                         call sym.oidcpy	        25	replace-object.c	FUNCTION_1	CALL_6
0x400013f	    0x488b05000000	            mov rax, qword [0x04000146] 	        28	replace-object.c	FUNCTION_1	IF_2	CALL_7
0x4000146	        0x488b4010	            mov rax, qword [rax + 0x10] 	        28	replace-object.c	FUNCTION_1	IF_2	CALL_7
0x400014a	        0x488b4020	            mov rax, qword [rax + 0x20] 	        28	replace-object.c	FUNCTION_1	IF_2	CALL_7
0x400014e	        0x488b55f8	                mov rdx, qword [rbp - 8]	        28	replace-object.c	FUNCTION_1	IF_2	CALL_7
0x4000152	          0x4889d6	                            mov rsi, rdx	        28	replace-object.c	FUNCTION_1	IF_2	CALL_7
0x4000155	          0x4889c7	                            mov rdi, rax	        28	replace-object.c	FUNCTION_1	IF_2	CALL_7
0x4000158	      0xe800000000	                          call 0x400015d	        28	replace-object.c	FUNCTION_1	IF_2	CALL_7
0x400015d	          0x4885c0	                           test rax, rax	        28	replace-object.c	FUNCTION_1	IF_2	CALL_7
0x4000160	            0x7416	                            je 0x4000178	        28	replace-object.c	FUNCTION_1	IF_2	CALL_7
0x4000162	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        29	replace-object.c	FUNCTION_1	CALL_8
0x4000166	          0x4889c6	                            mov rsi, rax	        29	replace-object.c	FUNCTION_1	CALL_8
0x4000169	      0xbf00000000	                              mov edi, 0	        29	replace-object.c	FUNCTION_1	CALL_8
0x400016e	      0xb800000000	                              mov eax, 0	        29	replace-object.c	FUNCTION_1	CALL_8
0x4000173	      0xe800000000	                          call 0x4000178	        29	replace-object.c	FUNCTION_1	CALL_8
0x4000178	      0xb800000000	                              mov eax, 0	        31	replace-object.c	FUNCTION_1
0x400017d	              0xc9	                                   leave	        32	replace-object.c	FUNCTION_1
0x400017e	              0xc3	                                     ret	        32	replace-object.c	FUNCTION_1
do_lookup_replace_object	IF,1:ELSE,0:functions,0:FOR,0:WHILE,1:CALL,4:DO,0:SWITCH,0	41
0x40001ec	              0x55	                                push rbp	        58	replace-object.c	FUNCTION_3
0x40001ed	          0x4889e5	                            mov rbp, rsp	        58	replace-object.c	FUNCTION_3
0x40001f0	        0x4883ec30	                           sub rsp, 0x30	        58	replace-object.c	FUNCTION_3
0x40001f4	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        58	replace-object.c	FUNCTION_3
0x40001f8	        0x488975d0	             mov qword [rbp - 0x30], rsi	        58	replace-object.c	FUNCTION_3
0x40001fc	    0xc745ec050000	               mov dword [rbp - 0x14], 5	        59	replace-object.c	FUNCTION_3
0x4000203	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        60	replace-object.c	FUNCTION_3
0x4000207	        0x488945f0	             mov qword [rbp - 0x10], rax	        60	replace-object.c	FUNCTION_3
0x400020b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        62	replace-object.c	FUNCTION_3	CALL_1
0x400020f	          0x4889c7	                            mov rdi, rax	        62	replace-object.c	FUNCTION_3	CALL_1
0x4000212	      0xe868ffffff	         call sym.prepare_replace_object	        62	replace-object.c	FUNCTION_3	CALL_1
0x4000217	            0xeb38	                           jmp 0x4000251	        65	replace-object.c	FUNCTION_3	WHILE_1
0x4000219	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        67	replace-object.c	FUNCTION_3	WHILE_1	CALL_2
0x400021d	        0x488b4010	            mov rax, qword [rax + 0x10] 	        67	replace-object.c	FUNCTION_3	WHILE_1	CALL_2
0x4000221	        0x488b4020	            mov rax, qword [rax + 0x20] 	        67	replace-object.c	FUNCTION_3	WHILE_1	CALL_2
0x4000225	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        66	replace-object.c	FUNCTION_3	WHILE_1
0x4000229	          0x4889d6	                            mov rsi, rdx	        66	replace-object.c	FUNCTION_3	WHILE_1
0x400022c	          0x4889c7	                            mov rdi, rax	        66	replace-object.c	FUNCTION_3	WHILE_1
0x400022f	      0xe800000000	                          call 0x4000234	        66	replace-object.c	FUNCTION_3	WHILE_1
0x4000234	        0x488945f8	                mov qword [rbp - 8], rax	        66	replace-object.c	FUNCTION_3	WHILE_1
0x4000238	      0x48837df800	                  cmp qword [rbp - 8], 0	        68	replace-object.c	FUNCTION_3	WHILE_1	IF_1
0x400023d	            0x7506	                           jne 0x4000245	        68	replace-object.c	FUNCTION_3	WHILE_1	IF_1
0x400023f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        69	replace-object.c	FUNCTION_3	WHILE_1	IF_1
0x4000243	            0xeb37	                           jmp 0x400027c	        69	replace-object.c	FUNCTION_3	WHILE_1	IF_1
0x4000245	        0x488b45f8	                mov rax, qword [rbp - 8]	        70	replace-object.c	FUNCTION_3	WHILE_1
0x4000249	        0x4883c028	                           add rax, 0x28	        70	replace-object.c	FUNCTION_3	WHILE_1
0x400024d	        0x488945f0	             mov qword [rbp - 0x10], rax	        70	replace-object.c	FUNCTION_3	WHILE_1
0x4000251	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        65	replace-object.c	FUNCTION_3	WHILE_1
0x4000254	          0x8d50ff	                      lea edx, [rax - 1]	        65	replace-object.c	FUNCTION_3	WHILE_1
0x4000257	          0x8955ec	             mov dword [rbp - 0x14], edx	        65	replace-object.c	FUNCTION_3	WHILE_1
0x400025a	            0x85c0	                           test eax, eax	        65	replace-object.c	FUNCTION_3	WHILE_1
0x400025c	            0x7fbb	                            jg 0x4000219	        65	replace-object.c	FUNCTION_3	WHILE_1
0x400025e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        72	replace-object.c	FUNCTION_3	CALL_4
0x4000262	          0x4889c7	                            mov rdi, rax	        72	replace-object.c	FUNCTION_3	CALL_4
0x4000265	      0xe800000000	                          call 0x400026a	        72	replace-object.c	FUNCTION_3	CALL_4
0x400026a	          0x4889c6	                            mov rsi, rax	        72	replace-object.c	FUNCTION_3	CALL_4
0x400026d	      0xbf00000000	                              mov edi, 0	        72	replace-object.c	FUNCTION_3	CALL_4
0x4000272	      0xb800000000	                              mov eax, 0	        72	replace-object.c	FUNCTION_3	CALL_4
0x4000277	      0xe800000000	                          call 0x400027c	        72	replace-object.c	FUNCTION_3	CALL_4
0x400027c	              0xc9	                                   leave	        73	replace-object.c	FUNCTION_3
0x400027d	              0xc3	                                     ret	        73	replace-object.c	FUNCTION_3
