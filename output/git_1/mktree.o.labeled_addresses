hashcpy	FOR,0:functions,0:IF,0:CALL,1:ELSE,0:WHILE,0:SWITCH,0:DO,0	14
0x400014a	              0x55	                                push rbp	       994	cache.h	FUNCTION_44
0x400014b	          0x4889e5	                            mov rbp, rsp	       994	cache.h	FUNCTION_44
0x400014e	        0x4883ec10	                           sub rsp, 0x10	       994	cache.h	FUNCTION_44
0x4000152	        0x48897df8	                mov qword [rbp - 8], rdi	       994	cache.h	FUNCTION_44
0x4000156	        0x488975f0	             mov qword [rbp - 0x10], rsi	       994	cache.h	FUNCTION_44
0x400015a	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       995	cache.h	FUNCTION_44	CALL_1
0x400015e	        0x488b45f8	                mov rax, qword [rbp - 8]	       995	cache.h	FUNCTION_44	CALL_1
0x4000162	      0xba14000000	                           mov edx, 0x14	       995	cache.h	FUNCTION_44	CALL_1
0x4000167	          0x4889ce	                            mov rsi, rcx	       995	cache.h	FUNCTION_44	CALL_1
0x400016a	          0x4889c7	                            mov rdi, rax	       995	cache.h	FUNCTION_44	CALL_1
0x400016d	      0xe800000000	                          call 0x4000172	       995	cache.h	FUNCTION_44	CALL_1
0x4000172	              0x90	                                     nop	       996	cache.h	FUNCTION_44
0x4000173	              0xc9	                                   leave	       996	cache.h	FUNCTION_44
0x4000174	              0xc3	                                     ret	       996	cache.h	FUNCTION_44
object_type	FOR,0:functions,0:IF,0:CALL,1:ELSE,0:WHILE,0:SWITCH,0:DO,0	18
0x4000110	              0x55	                                push rbp	       398	cache.h	FUNCTION_39
0x4000111	          0x4889e5	                            mov rbp, rsp	       398	cache.h	FUNCTION_39
0x4000114	          0x897dfc	                mov dword [rbp - 4], edi	       398	cache.h	FUNCTION_39
0x4000117	          0x8b45fc	                mov eax, dword [rbp - 4]	       399	cache.h	FUNCTION_39	CALL_1
0x400011a	      0x2500f00000	                         and eax, 0xf000	       399	cache.h	FUNCTION_39	CALL_1
0x400011f	      0x3d00400000	                         cmp eax, 0x4000	       399	cache.h	FUNCTION_39	CALL_1
0x4000124	            0x741d	                            je 0x4000143	       399	cache.h	FUNCTION_39	CALL_1
0x4000126	          0x8b45fc	                mov eax, dword [rbp - 4]	       400	cache.h	FUNCTION_39
0x4000129	      0x2500f00000	                         and eax, 0xf000	       400	cache.h	FUNCTION_39
0x400012e	      0x3d00e00000	                         cmp eax, 0xe000	       399	cache.h	FUNCTION_39	CALL_1
0x4000133	            0x7507	                           jne 0x400013c	       399	cache.h	FUNCTION_39	CALL_1
0x4000135	      0xb801000000	                              mov eax, 1	       399	cache.h	FUNCTION_39	CALL_1
0x400013a	            0xeb0c	                           jmp 0x4000148	       399	cache.h	FUNCTION_39	CALL_1
0x400013c	      0xb803000000	                              mov eax, 3	       399	cache.h	FUNCTION_39	CALL_1
0x4000141	            0xeb05	                           jmp 0x4000148	       399	cache.h	FUNCTION_39	CALL_1
0x4000143	      0xb802000000	                              mov eax, 2	       399	cache.h	FUNCTION_39	CALL_1
0x4000148	              0x5d	                                 pop rbp	       402	cache.h	FUNCTION_39
0x4000149	              0xc3	                                     ret	       402	cache.h	FUNCTION_39
st_add	FOR,0:functions,0:IF,1:CALL,1:ELSE,0:WHILE,0:SWITCH,0:DO,0	20
0x4000040	              0x55	                                push rbp	       784	git-compat-util.h	FUNCTION_19
0x4000041	          0x4889e5	                            mov rbp, rsp	       784	git-compat-util.h	FUNCTION_19
0x4000044	        0x4883ec10	                           sub rsp, 0x10	       784	git-compat-util.h	FUNCTION_19
0x4000048	        0x48897df8	                mov qword [rbp - 8], rdi	       784	git-compat-util.h	FUNCTION_19
0x400004c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       784	git-compat-util.h	FUNCTION_19
0x4000050	        0x488b45f8	                mov rax, qword [rbp - 8]	       785	git-compat-util.h	FUNCTION_19	IF_1
0x4000054	          0x48f7d0	                                 not rax	       785	git-compat-util.h	FUNCTION_19	IF_1
0x4000057	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       785	git-compat-util.h	FUNCTION_19	IF_1
0x400005b	            0x731a	                           jae 0x4000077	       785	git-compat-util.h	FUNCTION_19	IF_1
0x400005d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       786	git-compat-util.h	FUNCTION_19	IF_1	CALL_1
0x4000061	        0x488b45f8	                mov rax, qword [rbp - 8]	       786	git-compat-util.h	FUNCTION_19	IF_1	CALL_1
0x4000065	          0x4889c6	                            mov rsi, rax	       786	git-compat-util.h	FUNCTION_19	IF_1	CALL_1
0x4000068	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_19	IF_1	CALL_1
0x400006d	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_19	IF_1	CALL_1
0x4000072	      0xe800000000	                          call 0x4000077	       786	git-compat-util.h	FUNCTION_19	IF_1	CALL_1
0x4000077	        0x488b55f8	                mov rdx, qword [rbp - 8]	       788	git-compat-util.h	FUNCTION_19
0x400007b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       788	git-compat-util.h	FUNCTION_19
0x400007f	          0x4801d0	                            add rax, rdx	       788	git-compat-util.h	FUNCTION_19
0x4000082	              0xc9	                                   leave	       789	git-compat-util.h	FUNCTION_19
0x4000083	              0xc3	                                     ret	       789	git-compat-util.h	FUNCTION_19
ent_compare	FOR,0:functions,0:IF,0:CALL,1:ELSE,0:WHILE,0:SWITCH,0:DO,0	33
0x4000331	              0x55	                                push rbp	        36	mktree.c	FUNCTION_2
0x4000332	          0x4889e5	                            mov rbp, rsp	        36	mktree.c	FUNCTION_2
0x4000335	        0x4883ec20	                           sub rsp, 0x20	        36	mktree.c	FUNCTION_2
0x4000339	        0x48897de8	             mov qword [rbp - 0x18], rdi	        36	mktree.c	FUNCTION_2
0x400033d	        0x488975e0	             mov qword [rbp - 0x20], rsi	        36	mktree.c	FUNCTION_2
0x4000341	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        37	mktree.c	FUNCTION_2
0x4000345	          0x488b00	                    mov rax, qword [rax]	        37	mktree.c	FUNCTION_2
0x4000348	        0x488945f0	             mov qword [rbp - 0x10], rax	        37	mktree.c	FUNCTION_2
0x400034c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        38	mktree.c	FUNCTION_2
0x4000350	          0x488b00	                    mov rax, qword [rax]	        38	mktree.c	FUNCTION_2
0x4000353	        0x488945f8	                mov qword [rbp - 8], rax	        38	mktree.c	FUNCTION_2
0x4000357	        0x488b45f8	                mov rax, qword [rbp - 8]	        40	mktree.c	FUNCTION_2
0x400035b	            0x8b00	                    mov eax, dword [rax]	        40	mktree.c	FUNCTION_2
0x400035d	          0x4189c0	                            mov r8d, eax	        39	mktree.c	FUNCTION_2	CALL_1
0x4000360	        0x488b45f8	                mov rax, qword [rbp - 8]	        39	mktree.c	FUNCTION_2	CALL_1
0x4000364	          0x8b4818	            mov ecx, dword [rax + 0x18] 	        39	mktree.c	FUNCTION_2	CALL_1
0x4000367	        0x488b45f8	                mov rax, qword [rbp - 8]	        40	mktree.c	FUNCTION_2
0x400036b	        0x488d501c	                   lea rdx, [rax + 0x1c]	        40	mktree.c	FUNCTION_2
0x400036f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        39	mktree.c	FUNCTION_2	CALL_1
0x4000373	            0x8b00	                    mov eax, dword [rax]	        39	mktree.c	FUNCTION_2	CALL_1
0x4000375	          0x4189c2	                           mov r10d, eax	        39	mktree.c	FUNCTION_2	CALL_1
0x4000378	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        39	mktree.c	FUNCTION_2	CALL_1
0x400037c	          0x8b4018	            mov eax, dword [rax + 0x18] 	        39	mktree.c	FUNCTION_2	CALL_1
0x400037f	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	        39	mktree.c	FUNCTION_2	CALL_1
0x4000383	        0x488d7e1c	                   lea rdi, [rsi + 0x1c]	        39	mktree.c	FUNCTION_2	CALL_1
0x4000387	          0x4589c1	                            mov r9d, r8d	        39	mktree.c	FUNCTION_2	CALL_1
0x400038a	          0x4189c8	                            mov r8d, ecx	        39	mktree.c	FUNCTION_2	CALL_1
0x400038d	          0x4889d1	                            mov rcx, rdx	        39	mktree.c	FUNCTION_2	CALL_1
0x4000390	          0x4489d2	                           mov edx, r10d	        39	mktree.c	FUNCTION_2	CALL_1
0x4000393	            0x89c6	                            mov esi, eax	        39	mktree.c	FUNCTION_2	CALL_1
0x4000395	      0xe800000000	                          call 0x400039a	        39	mktree.c	FUNCTION_2	CALL_1
0x400039a	              0xc9	                                   leave	        41	mktree.c	FUNCTION_2
0x400039b	              0xc3	                                     ret	        41	mktree.c	FUNCTION_2
oidcpy	FOR,0:functions,0:IF,0:CALL,1:ELSE,0:WHILE,0:SWITCH,0:DO,0	13
0x4000175	              0x55	                                push rbp	       999	cache.h	FUNCTION_45
0x4000176	          0x4889e5	                            mov rbp, rsp	       999	cache.h	FUNCTION_45
0x4000179	        0x4883ec10	                           sub rsp, 0x10	       999	cache.h	FUNCTION_45
0x400017d	        0x48897df8	                mov qword [rbp - 8], rdi	       999	cache.h	FUNCTION_45
0x4000181	        0x488975f0	             mov qword [rbp - 0x10], rsi	       999	cache.h	FUNCTION_45
0x4000185	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1000	cache.h	FUNCTION_45	CALL_1
0x4000189	        0x488b45f8	                mov rax, qword [rbp - 8]	      1000	cache.h	FUNCTION_45	CALL_1
0x400018d	          0x4889d6	                            mov rsi, rdx	      1000	cache.h	FUNCTION_45	CALL_1
0x4000190	          0x4889c7	                            mov rdi, rax	      1000	cache.h	FUNCTION_45	CALL_1
0x4000193	      0xe8b2ffffff	                        call sym.hashcpy	      1000	cache.h	FUNCTION_45	CALL_1
0x4000198	              0x90	                                     nop	      1001	cache.h	FUNCTION_45
0x4000199	              0xc9	                                   leave	      1001	cache.h	FUNCTION_45
0x400019a	              0xc3	                                     ret	      1001	cache.h	FUNCTION_45
cmd_mktree	FOR,0:functions,0:IF,4:CALL,17:ELSE,1:WHILE,2:SWITCH,0:DO,0	114
0x40007df	              0x55	                                push rbp	       143	mktree.c	FUNCTION_5
0x40007e0	          0x4889e5	                            mov rbp, rsp	       143	mktree.c	FUNCTION_5
0x40007e3	    0x4881ec900100	                          sub rsp, 0x190	       143	mktree.c	FUNCTION_5
0x40007ea	    0x89bd8cfeffff	            mov dword [rbp - 0x174], edi	       143	mktree.c	FUNCTION_5
0x40007f0	    0x4889b580feff	            mov qword [rbp - 0x180], rsi	       143	mktree.c	FUNCTION_5
0x40007f7	    0x48899578feff	            mov qword [rbp - 0x188], rdx	       143	mktree.c	FUNCTION_5
0x40007fe	    0x64488b042528	                mov rax, qword fs:[0x28]	       143	mktree.c	FUNCTION_5
0x4000807	        0x488945f8	                mov qword [rbp - 8], rax	       143	mktree.c	FUNCTION_5
0x400080b	            0x31c0	                            xor eax, eax	       143	mktree.c	FUNCTION_5
0x400080d	    0x48c785b0feff	              mov qword [rbp - 0x150], 0	       144	mktree.c	FUNCTION_5
0x4000818	    0x48c785b8feff	              mov qword [rbp - 0x148], 0	       144	mktree.c	FUNCTION_5
0x4000823	    0x48c785c0feff	              mov qword [rbp - 0x140], 0	       144	mktree.c	FUNCTION_5
0x400082e	    0xc78598feffff	              mov dword [rbp - 0x168], 0	       146	mktree.c	FUNCTION_5
0x4000838	    0xc7859cfeffff	              mov dword [rbp - 0x164], 0	       147	mktree.c	FUNCTION_5
0x4000842	    0xc785a0feffff	              mov dword [rbp - 0x160], 0	       148	mktree.c	FUNCTION_5
0x400084c	    0xc785a4feffff	              mov dword [rbp - 0x15c], 0	       149	mktree.c	FUNCTION_5
0x4000856	    0x488d95f0feff	                  lea rdx, [rbp - 0x110]	       152	mktree.c	FUNCTION_5
0x400085d	      0xb800000000	                              mov eax, 0	       152	mktree.c	FUNCTION_5
0x4000862	      0xb920000000	                           mov ecx, 0x20	       152	mktree.c	FUNCTION_5
0x4000867	          0x4889d7	                            mov rdi, rdx	       152	mktree.c	FUNCTION_5
0x400086a	          0xf348ab	              rep stosq qword [rdi], rax	       152	mktree.c	FUNCTION_5
0x400086d	    0xc785f0feffff	              mov dword [rbp - 0x110], 7	       152	mktree.c	FUNCTION_5
0x4000877	    0xc785f4feffff	          mov dword [rbp - 0x10c], 0x7a 	       152	mktree.c	FUNCTION_5
0x4000881	    0x488d8598feff	                  lea rax, [rbp - 0x168]	       152	mktree.c	FUNCTION_5
0x4000888	    0x48898500ffff	            mov qword [rbp - 0x100], rax	       152	mktree.c	FUNCTION_5
0x400088f	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	       152	mktree.c	FUNCTION_5
0x400089a	    0xc78518ffffff	               mov dword [rbp - 0xe8], 2	       152	mktree.c	FUNCTION_5
0x40008a4	    0x48c78528ffff	               mov qword [rbp - 0xd8], 1	       152	mktree.c	FUNCTION_5
0x40008af	    0xc78530ffffff	               mov dword [rbp - 0xd0], 7	       152	mktree.c	FUNCTION_5
0x40008b9	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	       152	mktree.c	FUNCTION_5
0x40008c4	    0x488d859cfeff	                  lea rax, [rbp - 0x164]	       152	mktree.c	FUNCTION_5
0x40008cb	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	       152	mktree.c	FUNCTION_5
0x40008d2	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	       152	mktree.c	FUNCTION_5
0x40008dd	    0xc78558ffffff	               mov dword [rbp - 0xa8], 2	       152	mktree.c	FUNCTION_5
0x40008e7	    0x48c78568ffff	               mov qword [rbp - 0x98], 1	       152	mktree.c	FUNCTION_5
0x40008f2	    0xc78570ffffff	               mov dword [rbp - 0x90], 7	       152	mktree.c	FUNCTION_5
0x40008fc	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	       152	mktree.c	FUNCTION_5
0x4000907	    0x488d85a0feff	                  lea rax, [rbp - 0x160]	       152	mktree.c	FUNCTION_5
0x400090e	        0x48894580	             mov qword [rbp - 0x80], rax	       152	mktree.c	FUNCTION_5
0x4000912	    0x48c745900000	               mov qword [rbp - 0x70], 0	       152	mktree.c	FUNCTION_5
0x400091a	    0xc74598020000	               mov dword [rbp - 0x68], 2	       152	mktree.c	FUNCTION_5
0x4000921	    0x48c745a80100	               mov qword [rbp - 0x58], 1	       152	mktree.c	FUNCTION_5
0x4000929	    0x488d8df0feff	                  lea rcx, [rbp - 0x110]	       159	mktree.c	FUNCTION_5	CALL_8
0x4000930	    0x488b9578feff	            mov rdx, qword [rbp - 0x188]	       159	mktree.c	FUNCTION_5	CALL_8
0x4000937	    0x488bb580feff	            mov rsi, qword [rbp - 0x180]	       159	mktree.c	FUNCTION_5	CALL_8
0x400093e	    0x8b858cfeffff	            mov eax, dword [rbp - 0x174]	       159	mktree.c	FUNCTION_5	CALL_8
0x4000944	    0x41b900000000	                              mov r9d, 0	       159	mktree.c	FUNCTION_5	CALL_8
0x400094a	    0x41b800000000	                              mov r8d, 0	       159	mktree.c	FUNCTION_5	CALL_8
0x4000950	            0x89c7	                            mov edi, eax	       159	mktree.c	FUNCTION_5	CALL_8
0x4000952	      0xe800000000	                          call 0x4000957	       159	mktree.c	FUNCTION_5	CALL_8
0x4000957	    0x89858cfeffff	            mov dword [rbp - 0x174], eax	       159	mktree.c	FUNCTION_5	CALL_8
0x400095d	    0x8b8598feffff	            mov eax, dword [rbp - 0x168]	       160	mktree.c	FUNCTION_5
0x4000963	            0x85c0	                           test eax, eax	       160	mktree.c	FUNCTION_5
0x4000965	            0x7407	                            je 0x400096e	       160	mktree.c	FUNCTION_5
0x4000967	      0xb800000000	                              mov eax, 0	       160	mktree.c	FUNCTION_5
0x400096c	            0xeb05	                           jmp 0x4000973	       160	mktree.c	FUNCTION_5
0x400096e	      0xb800000000	                              mov eax, 0	       160	mktree.c	FUNCTION_5
0x4000973	    0x488985a8feff	            mov qword [rbp - 0x158], rax	       160	mktree.c	FUNCTION_5
0x400097a	      0xe9d6000000	                           jmp 0x4000a55	       162	mktree.c	FUNCTION_5	WHILE_1
0x400097f	    0x488b0d000000	            mov rcx, qword [0x04000986] 	       164	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1	CALL_9
0x4000986	    0x488d95b0feff	                  lea rdx, [rbp - 0x150]	       164	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1	CALL_9
0x400098d	    0x488b85a8feff	            mov rax, qword [rbp - 0x158]	       164	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1	CALL_9
0x4000994	          0x4889ce	                            mov rsi, rcx	       164	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1	CALL_9
0x4000997	          0x4889d7	                            mov rdi, rdx	       164	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1	CALL_9
0x400099a	            0xffd0	                                call rax	       164	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1	CALL_9
0x400099c	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       164	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1	CALL_9
0x400099f	            0x750c	                           jne 0x40009ad	       164	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1	CALL_9
0x40009a1	    0xc785a4feffff	              mov dword [rbp - 0x15c], 1	       165	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1
0x40009ab	            0xeb4c	                           jmp 0x40009f9	       166	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_1
0x40009ad	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	       168	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2
0x40009b4	           0xfb600	                   movzx eax, byte [rax]	       168	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2
0x40009b7	            0x84c0	                             test al, al	       168	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2
0x40009b9	            0x7519	                           jne 0x40009d4	       168	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2
0x40009bb	    0x8b85a0feffff	            mov eax, dword [rbp - 0x160]	       170	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2	IF_3
0x40009c1	            0x85c0	                           test eax, eax	       170	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2	IF_3
0x40009c3	            0x7533	                           jne 0x40009f8	       170	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2	IF_3
0x40009c5	      0xbf00000000	                              mov edi, 0	       172	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2	CALL_10
0x40009ca	      0xb800000000	                              mov eax, 0	       172	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2	CALL_10
0x40009cf	      0xe800000000	                          call 0x40009d4	       172	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2	CALL_10
0x40009d4	    0x8b8d9cfeffff	            mov ecx, dword [rbp - 0x164]	       174	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	CALL_11
0x40009da	    0x8b9598feffff	            mov edx, dword [rbp - 0x168]	       174	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	CALL_11
0x40009e0	    0x488bb5b8feff	            mov rsi, qword [rbp - 0x148]	       174	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	CALL_11
0x40009e7	    0x488b85c0feff	            mov rax, qword [rbp - 0x140]	       174	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	CALL_11
0x40009ee	          0x4889c7	                            mov rdi, rax	       174	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	CALL_11
0x40009f1	      0xe8fafaffff	                    call sym.mktree_line	       174	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	CALL_11
0x40009f6	            0xeb87	                           jmp 0x400097f	       175	mktree.c	FUNCTION_5	WHILE_1	WHILE_2
0x40009f8	              0x90	                                     nop	       171	mktree.c	FUNCTION_5	WHILE_1	WHILE_2	IF_2	IF_3
0x40009f9	    0x8b85a0feffff	            mov eax, dword [rbp - 0x160]	       176	mktree.c	FUNCTION_5	WHILE_1	IF_4
0x40009ff	            0x85c0	                           test eax, eax	       176	mktree.c	FUNCTION_5	WHILE_1	IF_4
0x4000a01	            0x7413	                            je 0x4000a16	       176	mktree.c	FUNCTION_5	WHILE_1	IF_4
0x4000a03	    0x83bda4feffff	              cmp dword [rbp - 0x15c], 0	       176	mktree.c	FUNCTION_5	WHILE_1	IF_4
0x4000a0a	            0x740a	                            je 0x4000a16	       176	mktree.c	FUNCTION_5	WHILE_1	IF_4
0x4000a0c	    0x8b0500000000	            mov eax, dword [0x04000a12] 	       176	mktree.c	FUNCTION_5	WHILE_1	IF_4
0x4000a12	            0x85c0	                           test eax, eax	       176	mktree.c	FUNCTION_5	WHILE_1	IF_4
0x4000a14	            0x7e35	                           jle 0x4000a4b	       176	mktree.c	FUNCTION_5	WHILE_1	IF_4
0x4000a16	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       184	mktree.c	FUNCTION_5	WHILE_1	ELSE_1	CALL_12
0x4000a1d	          0x4889c7	                            mov rdi, rax	       184	mktree.c	FUNCTION_5	WHILE_1	ELSE_1	CALL_12
0x4000a20	      0xe877f9ffff	                     call sym.write_tree	       184	mktree.c	FUNCTION_5	WHILE_1	ELSE_1	CALL_12
0x4000a25	    0x488d85d0feff	                  lea rax, [rbp - 0x130]	       185	mktree.c	FUNCTION_5	WHILE_1	ELSE_1	CALL_14
0x4000a2c	          0x4889c7	                            mov rdi, rax	       185	mktree.c	FUNCTION_5	WHILE_1	ELSE_1	CALL_14
0x4000a2f	      0xe800000000	                          call 0x4000a34	       185	mktree.c	FUNCTION_5	WHILE_1	ELSE_1	CALL_14
0x4000a34	          0x4889c7	                            mov rdi, rax	       185	mktree.c	FUNCTION_5	WHILE_1	ELSE_1	CALL_14
0x4000a37	      0xe800000000	                          call 0x4000a3c	       185	mktree.c	FUNCTION_5	WHILE_1	ELSE_1	CALL_14
0x4000a3c	    0x488b05000000	            mov rax, qword [0x04000a43] 	       186	mktree.c	FUNCTION_5	WHILE_1	ELSE_1	CALL_15
0x4000a43	          0x4889c7	                            mov rdi, rax	       186	mktree.c	FUNCTION_5	WHILE_1	ELSE_1	CALL_15
0x4000a46	      0xe800000000	                          call 0x4000a4b	       186	mktree.c	FUNCTION_5	WHILE_1	ELSE_1	CALL_15
0x4000a4b	    0xc70500000000	               mov dword [0x04000a55], 0	       188	mktree.c	FUNCTION_5	WHILE_1
0x4000a55	    0x83bda4feffff	              cmp dword [rbp - 0x15c], 0	       162	mktree.c	FUNCTION_5	WHILE_1
0x4000a5c	     0xf841dffffff	                            je 0x400097f	       162	mktree.c	FUNCTION_5	WHILE_1
0x4000a62	    0x488d85b0feff	                  lea rax, [rbp - 0x150]	       190	mktree.c	FUNCTION_5	CALL_16
0x4000a69	          0x4889c7	                            mov rdi, rax	       190	mktree.c	FUNCTION_5	CALL_16
0x4000a6c	      0xe800000000	                          call 0x4000a71	       190	mktree.c	FUNCTION_5	CALL_16
0x4000a71	      0xbf00000000	                              mov edi, 0	       191	mktree.c	FUNCTION_5	CALL_17
0x4000a76	      0xe800000000	                  call section_end..text	       191	mktree.c	FUNCTION_5	CALL_17
write_tree	FOR,2:functions,0:IF,0:CALL,5:ELSE,0:WHILE,0:SWITCH,0:DO,0	84
0x400039c	              0x55	                                push rbp	        44	mktree.c	FUNCTION_3
0x400039d	          0x4889e5	                            mov rbp, rsp	        44	mktree.c	FUNCTION_3
0x40003a0	        0x4883ec50	                           sub rsp, 0x50	        44	mktree.c	FUNCTION_3
0x40003a4	        0x48897db8	             mov qword [rbp - 0x48], rdi	        44	mktree.c	FUNCTION_3
0x40003a8	    0x64488b042528	                mov rax, qword fs:[0x28]	        44	mktree.c	FUNCTION_3
0x40003b1	        0x488945f8	                mov qword [rbp - 8], rax	        44	mktree.c	FUNCTION_3
0x40003b5	            0x31c0	                            xor eax, eax	        44	mktree.c	FUNCTION_3
0x40003b7	    0x8b0500000000	            mov eax, dword [0x040003bd] 	        49	mktree.c	FUNCTION_3
0x40003bd	          0x4863f0	                         movsxd rsi, eax	        49	mktree.c	FUNCTION_3
0x40003c0	    0x488b05000000	            mov rax, qword [0x040003c7] 	        49	mktree.c	FUNCTION_3
0x40003c7	      0xb900000000	                              mov ecx, 0	        49	mktree.c	FUNCTION_3
0x40003cc	      0xba08000000	                              mov edx, 8	        49	mktree.c	FUNCTION_3
0x40003d1	          0x4889c7	                            mov rdi, rax	        49	mktree.c	FUNCTION_3
0x40003d4	      0xe8fdfcffff	                     call sym.sane_qsort	        49	mktree.c	FUNCTION_3
0x40003d9	    0xc745cc000000	               mov dword [rbp - 0x34], 0	        50	mktree.c	FUNCTION_3	FOR_1
0x40003e0	    0x48c745d00000	               mov qword [rbp - 0x30], 0	        50	mktree.c	FUNCTION_3	FOR_1
0x40003e8	            0xeb27	                           jmp 0x4000411	        50	mktree.c	FUNCTION_3	FOR_1
0x40003ea	    0x488b05000000	            mov rax, qword [0x040003f1] 	        51	mktree.c	FUNCTION_3	FOR_1
0x40003f1	          0x8b55cc	             mov edx, dword [rbp - 0x34]	        51	mktree.c	FUNCTION_3	FOR_1
0x40003f4	          0x4863d2	                         movsxd rdx, edx	        51	mktree.c	FUNCTION_3	FOR_1
0x40003f7	        0x48c1e203	                              shl rdx, 3	        51	mktree.c	FUNCTION_3	FOR_1
0x40003fb	          0x4801d0	                            add rax, rdx	        51	mktree.c	FUNCTION_3	FOR_1
0x40003fe	          0x488b00	                    mov rax, qword [rax]	        51	mktree.c	FUNCTION_3	FOR_1
0x4000401	          0x8b4018	            mov eax, dword [rax + 0x18] 	        51	mktree.c	FUNCTION_3	FOR_1
0x4000404	          0x83c020	                           add eax, 0x20	        51	mktree.c	FUNCTION_3	FOR_1
0x4000407	            0x4898	                                    cdqe	        51	mktree.c	FUNCTION_3	FOR_1
0x4000409	        0x480145d0	            add qword [rbp - 0x30], rax 	        51	mktree.c	FUNCTION_3	FOR_1
0x400040d	        0x8345cc01	               add dword [rbp - 0x34], 1	        50	mktree.c	FUNCTION_3	FOR_1
0x4000411	    0x8b0500000000	            mov eax, dword [0x04000417] 	        50	mktree.c	FUNCTION_3	FOR_1
0x4000417	          0x3945cc	            cmp dword [rbp - 0x34], eax 	        50	mktree.c	FUNCTION_3	FOR_1
0x400041a	            0x7cce	                            jl 0x40003ea	        50	mktree.c	FUNCTION_3	FOR_1
0x400041c	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	        53	mktree.c	FUNCTION_3	CALL_1
0x4000420	        0x488d45e0	                   lea rax, [rbp - 0x20]	        53	mktree.c	FUNCTION_3	CALL_1
0x4000424	          0x4889d6	                            mov rsi, rdx	        53	mktree.c	FUNCTION_3	CALL_1
0x4000427	          0x4889c7	                            mov rdi, rax	        53	mktree.c	FUNCTION_3	CALL_1
0x400042a	      0xe800000000	                          call 0x400042f	        53	mktree.c	FUNCTION_3	CALL_1
0x400042f	    0xc745cc000000	               mov dword [rbp - 0x34], 0	        54	mktree.c	FUNCTION_3	FOR_2
0x4000436	            0xeb6f	                           jmp 0x40004a7	        54	mktree.c	FUNCTION_3	FOR_2
0x4000438	    0x488b05000000	            mov rax, qword [0x0400043f] 	        55	mktree.c	FUNCTION_3	FOR_2
0x400043f	          0x8b55cc	             mov edx, dword [rbp - 0x34]	        55	mktree.c	FUNCTION_3	FOR_2
0x4000442	          0x4863d2	                         movsxd rdx, edx	        55	mktree.c	FUNCTION_3	FOR_2
0x4000445	        0x48c1e203	                              shl rdx, 3	        55	mktree.c	FUNCTION_3	FOR_2
0x4000449	          0x4801d0	                            add rax, rdx	        55	mktree.c	FUNCTION_3	FOR_2
0x400044c	          0x488b00	                    mov rax, qword [rax]	        55	mktree.c	FUNCTION_3	FOR_2
0x400044f	        0x488945d8	             mov qword [rbp - 0x28], rax	        55	mktree.c	FUNCTION_3	FOR_2
0x4000453	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        56	mktree.c	FUNCTION_3	FOR_2	CALL_2
0x4000457	        0x488d481c	                   lea rcx, [rax + 0x1c]	        56	mktree.c	FUNCTION_3	FOR_2	CALL_2
0x400045b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        56	mktree.c	FUNCTION_3	FOR_2	CALL_2
0x400045f	            0x8b10	                    mov edx, dword [rax]	        56	mktree.c	FUNCTION_3	FOR_2	CALL_2
0x4000461	        0x488d45e0	                   lea rax, [rbp - 0x20]	        56	mktree.c	FUNCTION_3	FOR_2	CALL_2
0x4000465	    0x41b800000000	                              mov r8d, 0	        56	mktree.c	FUNCTION_3	FOR_2	CALL_2
0x400046b	      0xbe00000000	                              mov esi, 0	        56	mktree.c	FUNCTION_3	FOR_2	CALL_2
0x4000470	          0x4889c7	                            mov rdi, rax	        56	mktree.c	FUNCTION_3	FOR_2	CALL_2
0x4000473	      0xb800000000	                              mov eax, 0	        56	mktree.c	FUNCTION_3	FOR_2	CALL_2
0x4000478	      0xe800000000	                          call 0x400047d	        56	mktree.c	FUNCTION_3	FOR_2	CALL_2
0x400047d	    0x488b05000000	            mov rax, qword [0x04000484] 	        57	mktree.c	FUNCTION_3	FOR_2	CALL_3
0x4000484	        0x488b4058	            mov rax, qword [rax + 0x58] 	        57	mktree.c	FUNCTION_3	FOR_2	CALL_3
0x4000488	        0x488b5010	            mov rdx, qword [rax + 0x10] 	        57	mktree.c	FUNCTION_3	FOR_2	CALL_3
0x400048c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        57	mktree.c	FUNCTION_3	FOR_2	CALL_3
0x4000490	        0x488d4804	                      lea rcx, [rax + 4]	        57	mktree.c	FUNCTION_3	FOR_2	CALL_3
0x4000494	        0x488d45e0	                   lea rax, [rbp - 0x20]	        57	mktree.c	FUNCTION_3	FOR_2	CALL_3
0x4000498	          0x4889ce	                            mov rsi, rcx	        57	mktree.c	FUNCTION_3	FOR_2	CALL_3
0x400049b	          0x4889c7	                            mov rdi, rax	        57	mktree.c	FUNCTION_3	FOR_2	CALL_3
0x400049e	      0xe800000000	                          call 0x40004a3	        57	mktree.c	FUNCTION_3	FOR_2	CALL_3
0x40004a3	        0x8345cc01	               add dword [rbp - 0x34], 1	        54	mktree.c	FUNCTION_3	FOR_2
0x40004a7	    0x8b0500000000	            mov eax, dword [0x040004ad] 	        54	mktree.c	FUNCTION_3	FOR_2
0x40004ad	          0x3945cc	            cmp dword [rbp - 0x34], eax 	        54	mktree.c	FUNCTION_3	FOR_2
0x40004b0	            0x7c86	                            jl 0x4000438	        54	mktree.c	FUNCTION_3	FOR_2
0x40004b2	    0x488b15000000	            mov rdx, qword [0x040004b9] 	        60	mktree.c	FUNCTION_3	CALL_4
0x40004b9	        0x488b75e8	             mov rsi, qword [rbp - 0x18]	        60	mktree.c	FUNCTION_3	CALL_4
0x40004bd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        60	mktree.c	FUNCTION_3	CALL_4
0x40004c1	        0x488b4db8	             mov rcx, qword [rbp - 0x48]	        60	mktree.c	FUNCTION_3	CALL_4
0x40004c5	          0x4889c7	                            mov rdi, rax	        60	mktree.c	FUNCTION_3	CALL_4
0x40004c8	      0xe800000000	                          call 0x40004cd	        60	mktree.c	FUNCTION_3	CALL_4
0x40004cd	        0x488d45e0	                   lea rax, [rbp - 0x20]	        61	mktree.c	FUNCTION_3	CALL_5
0x40004d1	          0x4889c7	                            mov rdi, rax	        61	mktree.c	FUNCTION_3	CALL_5
0x40004d4	      0xe800000000	                          call 0x40004d9	        61	mktree.c	FUNCTION_3	CALL_5
0x40004d9	              0x90	                                     nop	        62	mktree.c	FUNCTION_3
0x40004da	        0x488b45f8	                mov rax, qword [rbp - 8]	        62	mktree.c	FUNCTION_3
0x40004de	    0x644833042528	                xor rax, qword fs:[0x28]	        62	mktree.c	FUNCTION_3
0x40004e7	            0x7405	                            je 0x40004ee	        62	mktree.c	FUNCTION_3
0x40004e9	      0xe800000000	                          call 0x40004ee	        62	mktree.c	FUNCTION_3
0x40004ee	              0xc9	                                   leave	        62	mktree.c	FUNCTION_3
0x40004ef	              0xc3	                                     ret	        62	mktree.c	FUNCTION_3
st_mult	FOR,0:functions,0:IF,1:CALL,1:ELSE,0:WHILE,0:SWITCH,0:DO,0	22
0x4000084	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_20
0x4000085	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_20
0x4000088	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_20
0x400008c	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_20
0x4000090	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_20
0x4000094	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_20	IF_1
0x4000099	            0x7430	                            je 0x40000cb	       795	git-compat-util.h	FUNCTION_20	IF_1
0x400009b	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_20	IF_1
0x40000a2	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_20	IF_1
0x40000a7	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_20	IF_1
0x40000ab	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_20	IF_1
0x40000af	            0x731a	                           jae 0x40000cb	       795	git-compat-util.h	FUNCTION_20	IF_1
0x40000b1	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_20	IF_1	CALL_1
0x40000b5	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_20	IF_1	CALL_1
0x40000b9	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_20	IF_1	CALL_1
0x40000bc	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_20	IF_1	CALL_1
0x40000c1	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_20	IF_1	CALL_1
0x40000c6	      0xe800000000	                          call 0x40000cb	       796	git-compat-util.h	FUNCTION_20	IF_1	CALL_1
0x40000cb	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_20
0x40000cf	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_20
0x40000d4	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_20
0x40000d5	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_20
mktree_line	FOR,0:functions,0:IF,9:CALL,21:ELSE,2:WHILE,0:SWITCH,0:DO,0	187
0x40004f0	              0x55	                                push rbp	        70	mktree.c	FUNCTION_4
0x40004f1	          0x4889e5	                            mov rbp, rsp	        70	mktree.c	FUNCTION_4
0x40004f4	            0x4154	                                push r12	        70	mktree.c	FUNCTION_4
0x40004f6	              0x53	                                push rbx	        70	mktree.c	FUNCTION_4
0x40004f7	    0x4881eca00000	                           sub rsp, 0xa0	        70	mktree.c	FUNCTION_4
0x40004fe	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	        70	mktree.c	FUNCTION_4
0x4000505	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	        70	mktree.c	FUNCTION_4
0x400050c	    0x89955cffffff	             mov dword [rbp - 0xa4], edx	        70	mktree.c	FUNCTION_4
0x4000512	    0x898d58ffffff	             mov dword [rbp - 0xa8], ecx	        70	mktree.c	FUNCTION_4
0x4000518	    0x64488b042528	                mov rax, qword fs:[0x28]	        70	mktree.c	FUNCTION_4
0x4000521	        0x488945e8	             mov qword [rbp - 0x18], rax	        70	mktree.c	FUNCTION_4
0x4000525	            0x31c0	                            xor eax, eax	        70	mktree.c	FUNCTION_4
0x4000527	    0x48c745a00000	               mov qword [rbp - 0x60], 0	        76	mktree.c	FUNCTION_4
0x400052f	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	        79	mktree.c	FUNCTION_4
0x4000536	        0x488945a8	             mov qword [rbp - 0x58], rax	        79	mktree.c	FUNCTION_4
0x400053a	        0x488d4d88	                   lea rcx, [rbp - 0x78]	        84	mktree.c	FUNCTION_4	CALL_1
0x400053e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        84	mktree.c	FUNCTION_4	CALL_1
0x4000542	      0xba08000000	                              mov edx, 8	        84	mktree.c	FUNCTION_4	CALL_1
0x4000547	          0x4889ce	                            mov rsi, rcx	        84	mktree.c	FUNCTION_4	CALL_1
0x400054a	          0x4889c7	                            mov rdi, rax	        84	mktree.c	FUNCTION_4	CALL_1
0x400054d	      0xe800000000	                          call 0x4000552	        84	mktree.c	FUNCTION_4	CALL_1
0x4000552	    0x89857cffffff	             mov dword [rbp - 0x84], eax	        84	mktree.c	FUNCTION_4	CALL_1
0x4000558	        0x488b4588	             mov rax, qword [rbp - 0x78]	        85	mktree.c	FUNCTION_4	IF_1
0x400055c	        0x483945a8	            cmp qword [rbp - 0x58], rax 	        85	mktree.c	FUNCTION_4	IF_1
0x4000560	            0x7414	                            je 0x4000576	        85	mktree.c	FUNCTION_4	IF_1
0x4000562	        0x488b4588	             mov rax, qword [rbp - 0x78]	        85	mktree.c	FUNCTION_4	IF_1
0x4000566	          0x4885c0	                           test rax, rax	        85	mktree.c	FUNCTION_4	IF_1
0x4000569	            0x740b	                            je 0x4000576	        85	mktree.c	FUNCTION_4	IF_1
0x400056b	        0x488b4588	             mov rax, qword [rbp - 0x78]	        85	mktree.c	FUNCTION_4	IF_1
0x400056f	           0xfb600	                   movzx eax, byte [rax]	        85	mktree.c	FUNCTION_4	IF_1
0x4000572	            0x3c20	                            cmp al, 0x20	        85	mktree.c	FUNCTION_4	IF_1
0x4000574	            0x7419	                            je 0x400058f	        85	mktree.c	FUNCTION_4	IF_1
0x4000576	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	        86	mktree.c	FUNCTION_4	CALL_2
0x400057d	          0x4889c6	                            mov rsi, rax	        86	mktree.c	FUNCTION_4	CALL_2
0x4000580	      0xbf00000000	                              mov edi, 0	        86	mktree.c	FUNCTION_4	CALL_2
0x4000585	      0xb800000000	                              mov eax, 0	        86	mktree.c	FUNCTION_4	CALL_2
0x400058a	      0xe800000000	                          call 0x400058f	        86	mktree.c	FUNCTION_4	CALL_2
0x400058f	        0x488b4588	             mov rax, qword [rbp - 0x78]	        87	mktree.c	FUNCTION_4
0x4000593	        0x4883c001	                              add rax, 1	        87	mktree.c	FUNCTION_4
0x4000597	        0x488945a8	             mov qword [rbp - 0x58], rax	        87	mktree.c	FUNCTION_4
0x400059b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        88	mktree.c	FUNCTION_4	CALL_3
0x400059f	      0xbe20000000	                           mov esi, 0x20	        88	mktree.c	FUNCTION_4	CALL_3
0x40005a4	          0x4889c7	                            mov rdi, rax	        88	mktree.c	FUNCTION_4	CALL_3
0x40005a7	      0xe800000000	                          call 0x40005ac	        88	mktree.c	FUNCTION_4	CALL_3
0x40005ac	        0x48894588	             mov qword [rbp - 0x78], rax	        88	mktree.c	FUNCTION_4	CALL_3
0x40005b0	        0x488b4588	             mov rax, qword [rbp - 0x78]	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x40005b4	          0x4885c0	                           test rax, rax	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x40005b7	            0x742a	                            je 0x40005e3	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x40005b9	        0x488b4588	             mov rax, qword [rbp - 0x78]	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x40005bd	        0x488d4801	                      lea rcx, [rax + 1]	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x40005c1	        0x488d5590	                   lea rdx, [rbp - 0x70]	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x40005c5	        0x488d45d0	                   lea rax, [rbp - 0x30]	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x40005c9	          0x4889c6	                            mov rsi, rax	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x40005cc	          0x4889cf	                            mov rdi, rcx	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x40005cf	      0xe800000000	                          call 0x40005d4	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x40005d4	            0x85c0	                           test eax, eax	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x40005d6	            0x750b	                           jne 0x40005e3	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x40005d8	        0x488b4590	             mov rax, qword [rbp - 0x70]	        90	mktree.c	FUNCTION_4	IF_2
0x40005dc	           0xfb600	                   movzx eax, byte [rax]	        90	mktree.c	FUNCTION_4	IF_2
0x40005df	            0x3c09	                               cmp al, 9	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x40005e1	            0x7419	                            je 0x40005fc	        89	mktree.c	FUNCTION_4	IF_2	CALL_4
0x40005e3	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	        91	mktree.c	FUNCTION_4	CALL_5
0x40005ea	          0x4889c6	                            mov rsi, rax	        91	mktree.c	FUNCTION_4	CALL_5
0x40005ed	      0xbf00000000	                              mov edi, 0	        91	mktree.c	FUNCTION_4	CALL_5
0x40005f2	      0xb800000000	                              mov eax, 0	        91	mktree.c	FUNCTION_4	CALL_5
0x40005f7	      0xe800000000	                          call 0x40005fc	        91	mktree.c	FUNCTION_4	CALL_5
0x40005fc	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	        94	mktree.c	FUNCTION_4	IF_3
0x4000602	      0x2500f00000	                         and eax, 0xf000	        94	mktree.c	FUNCTION_4	IF_3
0x4000607	      0x3d00e00000	                         cmp eax, 0xe000	        94	mktree.c	FUNCTION_4	IF_3
0x400060c	            0x750a	                           jne 0x4000618	        94	mktree.c	FUNCTION_4	IF_3
0x400060e	    0xc78558ffffff	               mov dword [rbp - 0xa8], 1	        95	mktree.c	FUNCTION_4	IF_3
0x4000618	        0x488b4588	             mov rax, qword [rbp - 0x78]	        98	mktree.c	FUNCTION_4
0x400061c	        0x488d5001	                      lea rdx, [rax + 1]	        98	mktree.c	FUNCTION_4
0x4000620	        0x48895588	             mov qword [rbp - 0x78], rdx	        98	mktree.c	FUNCTION_4
0x4000624	          0xc60000	                       mov byte [rax], 0	        98	mktree.c	FUNCTION_4
0x4000627	        0x488b4588	             mov rax, qword [rbp - 0x78]	       100	mktree.c	FUNCTION_4
0x400062b	        0x4883c029	                           add rax, 0x29	       100	mktree.c	FUNCTION_4
0x400062f	        0x48894598	             mov qword [rbp - 0x68], rax	       100	mktree.c	FUNCTION_4
0x4000633	    0x83bd5cffffff	               cmp dword [rbp - 0xa4], 0	       101	mktree.c	FUNCTION_4	IF_4
0x400063a	            0x756b	                           jne 0x40006a7	       101	mktree.c	FUNCTION_4	IF_4
0x400063c	        0x488b4598	             mov rax, qword [rbp - 0x68]	       101	mktree.c	FUNCTION_4	IF_4
0x4000640	           0xfb600	                   movzx eax, byte [rax]	       101	mktree.c	FUNCTION_4	IF_4
0x4000643	            0x3c22	                            cmp al, 0x22	       101	mktree.c	FUNCTION_4	IF_4
0x4000645	            0x7560	                           jne 0x40006a7	       101	mktree.c	FUNCTION_4	IF_4
0x4000647	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       102	mktree.c	FUNCTION_4	IF_4
0x400064f	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       102	mktree.c	FUNCTION_4	IF_4
0x4000657	    0x48c745c00000	               mov qword [rbp - 0x40], 0	       102	mktree.c	FUNCTION_4	IF_4
0x400065f	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	       103	mktree.c	FUNCTION_4	IF_4	IF_5	CALL_6
0x4000663	        0x488d45b0	                   lea rax, [rbp - 0x50]	       103	mktree.c	FUNCTION_4	IF_4	IF_5	CALL_6
0x4000667	      0xba00000000	                              mov edx, 0	       103	mktree.c	FUNCTION_4	IF_4	IF_5	CALL_6
0x400066c	          0x4889ce	                            mov rsi, rcx	       103	mktree.c	FUNCTION_4	IF_4	IF_5	CALL_6
0x400066f	          0x4889c7	                            mov rdi, rax	       103	mktree.c	FUNCTION_4	IF_4	IF_5	CALL_6
0x4000672	      0xe800000000	                          call 0x4000677	       103	mktree.c	FUNCTION_4	IF_4	IF_5	CALL_6
0x4000677	            0x85c0	                           test eax, eax	       103	mktree.c	FUNCTION_4	IF_4	IF_5	CALL_6
0x4000679	            0x740f	                            je 0x400068a	       103	mktree.c	FUNCTION_4	IF_4	IF_5	CALL_6
0x400067b	      0xbf00000000	                              mov edi, 0	       104	mktree.c	FUNCTION_4	IF_4	CALL_7
0x4000680	      0xb800000000	                              mov eax, 0	       104	mktree.c	FUNCTION_4	IF_4	CALL_7
0x4000685	      0xe800000000	                          call 0x400068a	       104	mktree.c	FUNCTION_4	IF_4	CALL_7
0x400068a	        0x488d45b0	                   lea rax, [rbp - 0x50]	       105	mktree.c	FUNCTION_4	IF_4	CALL_8
0x400068e	      0xbe00000000	                              mov esi, 0	       105	mktree.c	FUNCTION_4	IF_4	CALL_8
0x4000693	          0x4889c7	                            mov rdi, rax	       105	mktree.c	FUNCTION_4	IF_4	CALL_8
0x4000696	      0xe800000000	                          call 0x400069b	       105	mktree.c	FUNCTION_4	IF_4	CALL_8
0x400069b	        0x488945a0	             mov qword [rbp - 0x60], rax	       105	mktree.c	FUNCTION_4	IF_4	CALL_8
0x400069f	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       105	mktree.c	FUNCTION_4	IF_4	CALL_8
0x40006a3	        0x48894598	             mov qword [rbp - 0x68], rax	       105	mktree.c	FUNCTION_4	IF_4	CALL_8
0x40006a7	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	       112	mktree.c	FUNCTION_4	CALL_9
0x40006ad	            0x89c7	                            mov edi, eax	       112	mktree.c	FUNCTION_4	CALL_9
0x40006af	      0xe85cfaffff	                    call sym.object_type	       112	mktree.c	FUNCTION_4	CALL_9
0x40006b4	          0x894580	             mov dword [rbp - 0x80], eax	       112	mktree.c	FUNCTION_4	CALL_9
0x40006b7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       113	mktree.c	FUNCTION_4	IF_6	CALL_10
0x40006bb	      0xba00000000	                              mov edx, 0	       113	mktree.c	FUNCTION_4	IF_6	CALL_10
0x40006c0	    0x48c7c6ffffff	             mov rsi, 0xffffffffffffffff	       113	mktree.c	FUNCTION_4	IF_6	CALL_10
0x40006c7	          0x4889c7	                            mov rdi, rax	       113	mktree.c	FUNCTION_4	IF_6	CALL_10
0x40006ca	      0xe800000000	                          call 0x40006cf	       113	mktree.c	FUNCTION_4	IF_6	CALL_10
0x40006cf	          0x3b4580	             cmp eax, dword [rbp - 0x80]	       113	mktree.c	FUNCTION_4	IF_6	CALL_10
0x40006d2	            0x7427	                            je 0x40006fb	       113	mktree.c	FUNCTION_4	IF_6	CALL_10
0x40006d4	          0x8b4580	             mov eax, dword [rbp - 0x80]	       114	mktree.c	FUNCTION_4	IF_6	CALL_11
0x40006d7	            0x89c7	                            mov edi, eax	       114	mktree.c	FUNCTION_4	IF_6	CALL_11
0x40006d9	      0xe800000000	                          call 0x40006de	       114	mktree.c	FUNCTION_4	IF_6	CALL_11
0x40006de	          0x4889c1	                            mov rcx, rax	       114	mktree.c	FUNCTION_4	IF_6	CALL_11
0x40006e1	        0x488b55a8	             mov rdx, qword [rbp - 0x58]	       114	mktree.c	FUNCTION_4	IF_6	CALL_11
0x40006e5	        0x488b4598	             mov rax, qword [rbp - 0x68]	       114	mktree.c	FUNCTION_4	IF_6	CALL_11
0x40006e9	          0x4889c6	                            mov rsi, rax	       114	mktree.c	FUNCTION_4	IF_6	CALL_11
0x40006ec	      0xbf00000000	                              mov edi, 0	       114	mktree.c	FUNCTION_4	IF_6	CALL_11
0x40006f1	      0xb800000000	                              mov eax, 0	       114	mktree.c	FUNCTION_4	IF_6	CALL_11
0x40006f6	      0xe800000000	                          call 0x40006fb	       114	mktree.c	FUNCTION_4	IF_6	CALL_11
0x40006fb	    0x488b05000000	            mov rax, qword [0x04000702] 	       119	mktree.c	FUNCTION_4	CALL_13
0x4000702	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	       119	mktree.c	FUNCTION_4	CALL_13
0x4000706	      0xba00000000	                              mov edx, 0	       119	mktree.c	FUNCTION_4	CALL_13
0x400070b	          0x4889ce	                            mov rsi, rcx	       119	mktree.c	FUNCTION_4	CALL_13
0x400070e	          0x4889c7	                            mov rdi, rax	       119	mktree.c	FUNCTION_4	CALL_13
0x4000711	      0xe800000000	                          call 0x4000716	       119	mktree.c	FUNCTION_4	CALL_13
0x4000716	          0x894584	             mov dword [rbp - 0x7c], eax	       119	mktree.c	FUNCTION_4	CALL_13
0x4000719	        0x837d8400	               cmp dword [rbp - 0x7c], 0	       120	mktree.c	FUNCTION_4	IF_7
0x400071d	            0x792e	                           jns 0x400074d	       120	mktree.c	FUNCTION_4	IF_7
0x400071f	    0x83bd58ffffff	               cmp dword [rbp - 0xa8], 0	       121	mktree.c	FUNCTION_4	IF_7	IF_8
0x4000726	            0x7572	                           jne 0x400079a	       121	mktree.c	FUNCTION_4	IF_7	IF_8
0x4000728	        0x488d45d0	                   lea rax, [rbp - 0x30]	       124	mktree.c	FUNCTION_4	IF_7	ELSE_1	CALL_15
0x400072c	          0x4889c7	                            mov rdi, rax	       124	mktree.c	FUNCTION_4	IF_7	ELSE_1	CALL_15
0x400072f	      0xe800000000	                          call 0x4000734	       124	mktree.c	FUNCTION_4	IF_7	ELSE_1	CALL_15
0x4000734	          0x4889c2	                            mov rdx, rax	       124	mktree.c	FUNCTION_4	IF_7	ELSE_1	CALL_15
0x4000737	        0x488b4598	             mov rax, qword [rbp - 0x68]	       124	mktree.c	FUNCTION_4	IF_7	ELSE_1	CALL_15
0x400073b	          0x4889c6	                            mov rsi, rax	       124	mktree.c	FUNCTION_4	IF_7	ELSE_1	CALL_15
0x400073e	      0xbf00000000	                              mov edi, 0	       124	mktree.c	FUNCTION_4	IF_7	ELSE_1	CALL_15
0x4000743	      0xb800000000	                              mov eax, 0	       124	mktree.c	FUNCTION_4	IF_7	ELSE_1	CALL_15
0x4000748	      0xe800000000	                          call 0x400074d	       124	mktree.c	FUNCTION_4	IF_7	ELSE_1	CALL_15
0x400074d	          0x8b4584	             mov eax, dword [rbp - 0x7c]	       127	mktree.c	FUNCTION_4	ELSE_2	IF_9
0x4000750	          0x3b4580	             cmp eax, dword [rbp - 0x80]	       127	mktree.c	FUNCTION_4	ELSE_2	IF_9
0x4000753	            0x7445	                            je 0x400079a	       127	mktree.c	FUNCTION_4	ELSE_2	IF_9
0x4000755	          0x8b4580	             mov eax, dword [rbp - 0x80]	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_16
0x4000758	            0x89c7	                            mov edi, eax	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_16
0x400075a	      0xe800000000	                          call 0x400075f	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_16
0x400075f	          0x4989c4	                            mov r12, rax	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_16
0x4000762	          0x8b4584	             mov eax, dword [rbp - 0x7c]	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_16
0x4000765	            0x89c7	                            mov edi, eax	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_16
0x4000767	      0xe800000000	                          call 0x400076c	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_16
0x400076c	          0x4889c3	                            mov rbx, rax	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_16
0x400076f	        0x488d45d0	                   lea rax, [rbp - 0x30]	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_16
0x4000773	          0x4889c7	                            mov rdi, rax	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_16
0x4000776	      0xe800000000	                          call 0x400077b	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_16
0x400077b	          0x4889c2	                            mov rdx, rax	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_16
0x400077e	        0x488b4598	             mov rax, qword [rbp - 0x68]	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_16
0x4000782	          0x4d89e0	                             mov r8, r12	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_16
0x4000785	          0x4889d9	                            mov rcx, rbx	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_16
0x4000788	          0x4889c6	                            mov rsi, rax	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_16
0x400078b	      0xbf00000000	                              mov edi, 0	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_16
0x4000790	      0xb800000000	                              mov eax, 0	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_16
0x4000795	      0xe800000000	                          call 0x400079a	       133	mktree.c	FUNCTION_4	ELSE_2	IF_9	CALL_16
0x400079a	        0x488b5598	             mov rdx, qword [rbp - 0x68]	       138	mktree.c	FUNCTION_4	CALL_20
0x400079e	        0x488d4dd0	                   lea rcx, [rbp - 0x30]	       138	mktree.c	FUNCTION_4	CALL_20
0x40007a2	    0x8b857cffffff	             mov eax, dword [rbp - 0x84]	       138	mktree.c	FUNCTION_4	CALL_20
0x40007a8	          0x4889ce	                            mov rsi, rcx	       138	mktree.c	FUNCTION_4	CALL_20
0x40007ab	            0x89c7	                            mov edi, eax	       138	mktree.c	FUNCTION_4	CALL_20
0x40007ad	      0xe8e9f9ffff	                 call sym.append_to_tree	       138	mktree.c	FUNCTION_4	CALL_20
0x40007b2	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       139	mktree.c	FUNCTION_4	CALL_21
0x40007b6	          0x4889c7	                            mov rdi, rax	       139	mktree.c	FUNCTION_4	CALL_21
0x40007b9	      0xe800000000	                          call 0x40007be	       139	mktree.c	FUNCTION_4	CALL_21
0x40007be	              0x90	                                     nop	       140	mktree.c	FUNCTION_4
0x40007bf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       140	mktree.c	FUNCTION_4
0x40007c3	    0x644833042528	                xor rax, qword fs:[0x28]	       140	mktree.c	FUNCTION_4
0x40007cc	            0x7405	                            je 0x40007d3	       140	mktree.c	FUNCTION_4
0x40007ce	      0xe800000000	                          call 0x40007d3	       140	mktree.c	FUNCTION_4
0x40007d3	    0x4881c4a00000	                           add rsp, 0xa0	       140	mktree.c	FUNCTION_4
0x40007da	              0x5b	                                 pop rbx	       140	mktree.c	FUNCTION_4
0x40007db	            0x415c	                                 pop r12	       140	mktree.c	FUNCTION_4
0x40007dd	              0x5d	                                 pop rbp	       140	mktree.c	FUNCTION_4
0x40007de	              0xc3	                                     ret	       140	mktree.c	FUNCTION_4
sane_qsort	FOR,0:functions,0:IF,1:CALL,0:ELSE,0:WHILE,0:SWITCH,0:DO,0	18
0x40000d6	              0x55	                                push rbp	      1047	git-compat-util.h	FUNCTION_30
0x40000d7	          0x4889e5	                            mov rbp, rsp	      1047	git-compat-util.h	FUNCTION_30
0x40000da	        0x4883ec20	                           sub rsp, 0x20	      1047	git-compat-util.h	FUNCTION_30
0x40000de	        0x48897df8	                mov qword [rbp - 8], rdi	      1047	git-compat-util.h	FUNCTION_30
0x40000e2	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1047	git-compat-util.h	FUNCTION_30
0x40000e6	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1047	git-compat-util.h	FUNCTION_30
0x40000ea	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1047	git-compat-util.h	FUNCTION_30
0x40000ee	      0x48837df001	               cmp qword [rbp - 0x10], 1	      1048	git-compat-util.h	FUNCTION_30	IF_1
0x40000f3	            0x7618	                           jbe 0x400010d	      1048	git-compat-util.h	FUNCTION_30	IF_1
0x40000f5	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1049	git-compat-util.h	FUNCTION_30	IF_1
0x40000f9	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1049	git-compat-util.h	FUNCTION_30	IF_1
0x40000fd	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1049	git-compat-util.h	FUNCTION_30	IF_1
0x4000101	        0x488b45f8	                mov rax, qword [rbp - 8]	      1049	git-compat-util.h	FUNCTION_30	IF_1
0x4000105	          0x4889c7	                            mov rdi, rax	      1049	git-compat-util.h	FUNCTION_30	IF_1
0x4000108	      0xe800000000	                          call 0x400010d	      1049	git-compat-util.h	FUNCTION_30	IF_1
0x400010d	              0x90	                                     nop	      1050	git-compat-util.h	FUNCTION_30
0x400010e	              0xc9	                                   leave	      1050	git-compat-util.h	FUNCTION_30
0x400010f	              0xc3	                                     ret	      1050	git-compat-util.h	FUNCTION_30
append_to_tree	FOR,0:functions,0:IF,1:CALL,4:ELSE,0:WHILE,0:SWITCH,0:DO,0	110
0x400019b	              0x55	                                push rbp	        20	mktree.c	FUNCTION_1
0x400019c	          0x4889e5	                            mov rbp, rsp	        20	mktree.c	FUNCTION_1
0x400019f	        0x4883ec40	                           sub rsp, 0x40	        20	mktree.c	FUNCTION_1
0x40001a3	          0x897ddc	             mov dword [rbp - 0x24], edi	        20	mktree.c	FUNCTION_1
0x40001a6	        0x488975d0	             mov qword [rbp - 0x30], rsi	        20	mktree.c	FUNCTION_1
0x40001aa	        0x488955c8	             mov qword [rbp - 0x38], rdx	        20	mktree.c	FUNCTION_1
0x40001ae	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        22	mktree.c	FUNCTION_1	CALL_1
0x40001b2	          0x4889c7	                            mov rdi, rax	        22	mktree.c	FUNCTION_1	CALL_1
0x40001b5	      0xe800000000	                          call 0x40001ba	        22	mktree.c	FUNCTION_1	CALL_1
0x40001ba	        0x488945e8	             mov qword [rbp - 0x18], rax	        22	mktree.c	FUNCTION_1	CALL_1
0x40001be	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        23	mktree.c	FUNCTION_1	IF_1	CALL_2
0x40001c2	      0xbe2f000000	                           mov esi, 0x2f	        23	mktree.c	FUNCTION_1	IF_1	CALL_2
0x40001c7	          0x4889c7	                            mov rdi, rax	        23	mktree.c	FUNCTION_1	IF_1	CALL_2
0x40001ca	      0xe800000000	                          call 0x40001cf	        23	mktree.c	FUNCTION_1	IF_1	CALL_2
0x40001cf	          0x4885c0	                           test rax, rax	        23	mktree.c	FUNCTION_1	IF_1	CALL_2
0x40001d2	            0x7416	                            je 0x40001ea	        23	mktree.c	FUNCTION_1	IF_1	CALL_2
0x40001d4	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        24	mktree.c	FUNCTION_1	CALL_3
0x40001d8	          0x4889c6	                            mov rsi, rax	        24	mktree.c	FUNCTION_1	CALL_3
0x40001db	      0xbf00000000	                              mov edi, 0	        24	mktree.c	FUNCTION_1	CALL_3
0x40001e0	      0xb800000000	                              mov eax, 0	        24	mktree.c	FUNCTION_1	CALL_3
0x40001e5	      0xe800000000	                          call 0x40001ea	        24	mktree.c	FUNCTION_1	CALL_3
0x40001ea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        26	mktree.c	FUNCTION_1
0x40001ee	        0x488945f0	             mov qword [rbp - 0x10], rax	        26	mktree.c	FUNCTION_1
0x40001f2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        26	mktree.c	FUNCTION_1
0x40001f6	          0x4889c6	                            mov rsi, rax	        26	mktree.c	FUNCTION_1
0x40001f9	      0xbf1c000000	                           mov edi, 0x1c	        26	mktree.c	FUNCTION_1
0x40001fe	      0xe83dfeffff	                         call sym.st_add	        26	mktree.c	FUNCTION_1
0x4000203	      0xbe01000000	                              mov esi, 1	        26	mktree.c	FUNCTION_1
0x4000208	          0x4889c7	                            mov rdi, rax	        26	mktree.c	FUNCTION_1
0x400020b	      0xe830feffff	                         call sym.st_add	        26	mktree.c	FUNCTION_1
0x4000210	          0x4889c6	                            mov rsi, rax	        26	mktree.c	FUNCTION_1
0x4000213	      0xbf01000000	                              mov edi, 1	        26	mktree.c	FUNCTION_1
0x4000218	      0xe800000000	                          call 0x400021d	        26	mktree.c	FUNCTION_1
0x400021d	        0x488945f8	                mov qword [rbp - 8], rax	        26	mktree.c	FUNCTION_1
0x4000221	        0x488b45f8	                mov rax, qword [rbp - 8]	        26	mktree.c	FUNCTION_1
0x4000225	        0x488d481c	                   lea rcx, [rax + 0x1c]	        26	mktree.c	FUNCTION_1
0x4000229	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        26	mktree.c	FUNCTION_1
0x400022d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	        26	mktree.c	FUNCTION_1
0x4000231	          0x4889c6	                            mov rsi, rax	        26	mktree.c	FUNCTION_1
0x4000234	          0x4889cf	                            mov rdi, rcx	        26	mktree.c	FUNCTION_1
0x4000237	      0xe800000000	                          call 0x400023c	        26	mktree.c	FUNCTION_1
0x400023c	        0x488b45f8	                mov rax, qword [rbp - 8]	        27	mktree.c	FUNCTION_1
0x4000240	          0x8b55dc	             mov edx, dword [rbp - 0x24]	        27	mktree.c	FUNCTION_1
0x4000243	            0x8910	                    mov dword [rax], edx	        27	mktree.c	FUNCTION_1
0x4000245	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        28	mktree.c	FUNCTION_1
0x4000249	            0x89c2	                            mov edx, eax	        28	mktree.c	FUNCTION_1
0x400024b	        0x488b45f8	                mov rax, qword [rbp - 8]	        28	mktree.c	FUNCTION_1
0x400024f	          0x895018	             mov dword [rax + 0x18], edx	        28	mktree.c	FUNCTION_1
0x4000252	        0x488b45f8	                mov rax, qword [rbp - 8]	        29	mktree.c	FUNCTION_1	CALL_4
0x4000256	        0x488d5004	                      lea rdx, [rax + 4]	        29	mktree.c	FUNCTION_1	CALL_4
0x400025a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	        29	mktree.c	FUNCTION_1	CALL_4
0x400025e	          0x4889c6	                            mov rsi, rax	        29	mktree.c	FUNCTION_1	CALL_4
0x4000261	          0x4889d7	                            mov rdi, rdx	        29	mktree.c	FUNCTION_1	CALL_4
0x4000264	      0xe80cffffff	                         call sym.oidcpy	        29	mktree.c	FUNCTION_1	CALL_4
0x4000269	    0x8b0500000000	            mov eax, dword [0x0400026f] 	        31	mktree.c	FUNCTION_1
0x400026f	          0x8d5001	                      lea edx, [rax + 1]	        31	mktree.c	FUNCTION_1
0x4000272	    0x8b0500000000	            mov eax, dword [0x04000278] 	        31	mktree.c	FUNCTION_1
0x4000278	            0x39c2	                            cmp edx, eax	        31	mktree.c	FUNCTION_1
0x400027a	     0xf8e87000000	                           jle 0x4000307	        31	mktree.c	FUNCTION_1
0x4000280	    0x8b0500000000	            mov eax, dword [0x04000286] 	        31	mktree.c	FUNCTION_1
0x4000286	          0x8d5010	                   lea edx, [rax + 0x10]	        31	mktree.c	FUNCTION_1
0x4000289	            0x89d0	                            mov eax, edx	        31	mktree.c	FUNCTION_1
0x400028b	             0x1c0	                            add eax, eax	        31	mktree.c	FUNCTION_1
0x400028d	             0x1d0	                            add eax, edx	        31	mktree.c	FUNCTION_1
0x400028f	            0x89c2	                            mov edx, eax	        31	mktree.c	FUNCTION_1
0x4000291	          0xc1ea1f	                           shr edx, 0x1f	        31	mktree.c	FUNCTION_1
0x4000294	             0x1d0	                            add eax, edx	        31	mktree.c	FUNCTION_1
0x4000296	            0xd1f8	                              sar eax, 1	        31	mktree.c	FUNCTION_1
0x4000298	            0x89c2	                            mov edx, eax	        31	mktree.c	FUNCTION_1
0x400029a	    0x8b0500000000	            mov eax, dword [0x040002a0] 	        31	mktree.c	FUNCTION_1
0x40002a0	          0x83c001	                              add eax, 1	        31	mktree.c	FUNCTION_1
0x40002a3	            0x39c2	                            cmp edx, eax	        31	mktree.c	FUNCTION_1
0x40002a5	            0x7d11	                           jge 0x40002b8	        31	mktree.c	FUNCTION_1
0x40002a7	    0x8b0500000000	            mov eax, dword [0x040002ad] 	        31	mktree.c	FUNCTION_1
0x40002ad	          0x83c001	                              add eax, 1	        31	mktree.c	FUNCTION_1
0x40002b0	    0x890500000000	            mov dword [0x040002b6], eax 	        31	mktree.c	FUNCTION_1
0x40002b6	            0xeb1e	                           jmp 0x40002d6	        31	mktree.c	FUNCTION_1
0x40002b8	    0x8b0500000000	            mov eax, dword [0x040002be] 	        31	mktree.c	FUNCTION_1
0x40002be	          0x8d5010	                   lea edx, [rax + 0x10]	        31	mktree.c	FUNCTION_1
0x40002c1	            0x89d0	                            mov eax, edx	        31	mktree.c	FUNCTION_1
0x40002c3	             0x1c0	                            add eax, eax	        31	mktree.c	FUNCTION_1
0x40002c5	             0x1d0	                            add eax, edx	        31	mktree.c	FUNCTION_1
0x40002c7	            0x89c2	                            mov edx, eax	        31	mktree.c	FUNCTION_1
0x40002c9	          0xc1ea1f	                           shr edx, 0x1f	        31	mktree.c	FUNCTION_1
0x40002cc	             0x1d0	                            add eax, edx	        31	mktree.c	FUNCTION_1
0x40002ce	            0xd1f8	                              sar eax, 1	        31	mktree.c	FUNCTION_1
0x40002d0	    0x890500000000	            mov dword [0x040002d6], eax 	        31	mktree.c	FUNCTION_1
0x40002d6	    0x8b0500000000	            mov eax, dword [0x040002dc] 	        31	mktree.c	FUNCTION_1
0x40002dc	            0x4898	                                    cdqe	        31	mktree.c	FUNCTION_1
0x40002de	          0x4889c6	                            mov rsi, rax	        31	mktree.c	FUNCTION_1
0x40002e1	      0xbf08000000	                              mov edi, 8	        31	mktree.c	FUNCTION_1
0x40002e6	      0xe899fdffff	                        call sym.st_mult	        31	mktree.c	FUNCTION_1
0x40002eb	          0x4889c2	                            mov rdx, rax	        31	mktree.c	FUNCTION_1
0x40002ee	    0x488b05000000	            mov rax, qword [0x040002f5] 	        31	mktree.c	FUNCTION_1
0x40002f5	          0x4889d6	                            mov rsi, rdx	        31	mktree.c	FUNCTION_1
0x40002f8	          0x4889c7	                            mov rdi, rax	        31	mktree.c	FUNCTION_1
0x40002fb	      0xe800000000	                          call 0x4000300	        31	mktree.c	FUNCTION_1
0x4000300	    0x488905000000	            mov qword [0x04000307], rax 	        31	mktree.c	FUNCTION_1
0x4000307	    0x488b0d000000	            mov rcx, qword [0x0400030e] 	        32	mktree.c	FUNCTION_1
0x400030e	    0x8b0500000000	            mov eax, dword [0x04000314] 	        32	mktree.c	FUNCTION_1
0x4000314	          0x8d5001	                      lea edx, [rax + 1]	        32	mktree.c	FUNCTION_1
0x4000317	    0x891500000000	            mov dword [0x0400031d], edx 	        32	mktree.c	FUNCTION_1
0x400031d	            0x4898	                                    cdqe	        32	mktree.c	FUNCTION_1
0x400031f	        0x48c1e003	                              shl rax, 3	        32	mktree.c	FUNCTION_1
0x4000323	        0x488d1401	                    lea rdx, [rcx + rax]	        32	mktree.c	FUNCTION_1
0x4000327	        0x488b45f8	                mov rax, qword [rbp - 8]	        32	mktree.c	FUNCTION_1
0x400032b	          0x488902	                    mov qword [rdx], rax	        32	mktree.c	FUNCTION_1
0x400032e	              0x90	                                     nop	        33	mktree.c	FUNCTION_1
0x400032f	              0xc9	                                   leave	        33	mktree.c	FUNCTION_1
0x4000330	              0xc3	                                     ret	        33	mktree.c	FUNCTION_1
