prepare_to_write_split_index	functions,0:DO,0:IF,10:FOR,3:CALL,12:WHILE,0:ELSE,1:SWITCH,0	221
0x400055a	            0x4157	                                push r15	       177	split-index.c	FUNCTION_9
0x400055c	            0x4156	                                push r14	       177	split-index.c	FUNCTION_9
0x400055e	            0x4155	                                push r13	       177	split-index.c	FUNCTION_9
0x4000560	            0x4154	                                push r12	       177	split-index.c	FUNCTION_9
0x4000562	              0x55	                                push rbp	       177	split-index.c	FUNCTION_9
0x4000563	              0x53	                                push rbx	       177	split-index.c	FUNCTION_9
0x4000564	        0x4883ec18	                           sub rsp, 0x18	       177	split-index.c	FUNCTION_9
0x4000568	          0x4989fc	                            mov r12, rdi	       177	split-index.c	FUNCTION_9
0x400056b	      0xe800000000	                          call 0x4000570	       178	split-index.c	FUNCTION_9	CALL_1
0x4000570	          0x4989c6	                            mov r14, rax	       178	split-index.c	FUNCTION_9	CALL_1
0x4000573	      0xe800000000	                          call 0x4000578	       182	split-index.c	FUNCTION_9	CALL_2
0x4000578	        0x49894620	             mov qword [r14 + 0x20], rax	       182	split-index.c	FUNCTION_9	CALL_2
0x400057c	      0xe800000000	                          call 0x4000581	       183	split-index.c	FUNCTION_9	CALL_3
0x4000581	        0x49894628	             mov qword [r14 + 0x28], rax	       183	split-index.c	FUNCTION_9	CALL_3
0x4000585	        0x498b4618	            mov rax, qword [r14 + 0x18] 	       185	split-index.c	FUNCTION_9	IF_1
0x4000589	          0x4885c0	                           test rax, rax	       185	split-index.c	FUNCTION_9	IF_1
0x400058c	            0x7412	                            je 0x40005a0	       185	split-index.c	FUNCTION_9	IF_1
0x400058e	      0xbb00000000	                              mov ebx, 0	       193	split-index.c	FUNCTION_9	IF_1	FOR_1
0x4000593	    0x41837c240c00	                cmp dword [r12 + 0xc], 0	       193	split-index.c	FUNCTION_9	IF_1	FOR_1
0x4000599	            0x754b	                           jne 0x40005e6	       193	split-index.c	FUNCTION_9	IF_1	FOR_1
0x400059b	      0xe939030000	                           jmp 0x40008d9	       193	split-index.c	FUNCTION_9	IF_1	FOR_1
0x40005a0	    0x41bd00000000	                             mov r13d, 0	       180	split-index.c	FUNCTION_9
0x40005a6	    0xc74424040000	                  mov dword [rsp + 4], 0	       180	split-index.c	FUNCTION_9
0x40005ae	    0x48c744240800	                  mov qword [rsp + 8], 0	       179	split-index.c	FUNCTION_9
0x40005b7	            0xeb17	                           jmp 0x40005d0	       179	split-index.c	FUNCTION_9
0x40005b9	    0x41bd00000000	                             mov r13d, 0	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0x40005bf	    0xc74424040000	                  mov dword [rsp + 4], 0	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0x40005c7	    0x48c744240800	                  mov qword [rsp + 8], 0	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0x40005d0	      0xbd00000000	                              mov ebp, 0	       246	split-index.c	FUNCTION_9	FOR_3
0x40005d5	    0x41837c240c00	                cmp dword [r12 + 0xc], 0	       246	split-index.c	FUNCTION_9	FOR_3
0x40005db	     0xf85fe010000	                           jne 0x40007df	       246	split-index.c	FUNCTION_9	FOR_3
0x40005e1	      0xe9ce020000	                           jmp 0x40008b4	       246	split-index.c	FUNCTION_9	FOR_3
0x40005e6	          0x4863c3	                         movsxd rax, ebx	       199	split-index.c	FUNCTION_9	IF_1	FOR_1
0x40005e9	        0x498b1424	                    mov rdx, qword [r12]	       199	split-index.c	FUNCTION_9	IF_1	FOR_1
0x40005ed	        0x488b2cc2	            mov rbp, qword [rdx + rax*8]	       199	split-index.c	FUNCTION_9	IF_1	FOR_1
0x40005f1	          0x8b4540	            mov eax, dword [rbp + 0x40] 	       200	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_2
0x40005f4	            0x85c0	                           test eax, eax	       200	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_2
0x40005f6	     0xf84c2000000	                            je 0x40006be	       200	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_2
0x40005fc	        0x498b5618	            mov rdx, qword [r14 + 0x18] 	       202	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_3
0x4000600	          0x3b420c	              cmp eax, dword [rdx + 0xc]	       202	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_3
0x4000603	            0x760c	                           jbe 0x4000611	       202	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_3
0x4000605	    0xc74540000000	               mov dword [rbp + 0x40], 0	       203	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_3
0x400060c	      0xe9ad000000	                           jmp 0x40006be	       204	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_3
0x4000611	          0x8b4d38	            mov ecx, dword [rbp + 0x38] 	       206	split-index.c	FUNCTION_9	IF_1	FOR_1
0x4000614	        0x894c2404	                mov dword [rsp + 4], ecx	       206	split-index.c	FUNCTION_9	IF_1	FOR_1
0x4000618	          0x4189cf	                           mov r15d, ecx	       206	split-index.c	FUNCTION_9	IF_1	FOR_1
0x400061b	    0x4181cf000000	          or r15d, loc.imp.discard_index	       206	split-index.c	FUNCTION_9	IF_1	FOR_1
0x4000622	        0x44897d38	           mov dword [rbp + 0x38], r15d 	       206	split-index.c	FUNCTION_9	IF_1	FOR_1
0x4000626	        0x498b4e18	            mov rcx, qword [r14 + 0x18] 	       207	split-index.c	FUNCTION_9	IF_1	FOR_1
0x400062a	          0x8d50ff	                      lea edx, [rax - 1]	       207	split-index.c	FUNCTION_9	IF_1	FOR_1
0x400062d	          0x488b01	                    mov rax, qword [rcx]	       207	split-index.c	FUNCTION_9	IF_1	FOR_1
0x4000630	        0x4c8b2cd0	            mov r13, qword [rax + rdx*8]	       207	split-index.c	FUNCTION_9	IF_1	FOR_1
0x4000634	          0x4c39ed	                            cmp rbp, r13	       208	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_4
0x4000637	     0xf8481000000	                            je 0x40006be	       208	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_4
0x400063d	        0x418b453c	            mov eax, dword [r13 + 0x3c] 	       210	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5
0x4000641	          0x39453c	            cmp dword [rbp + 0x3c], eax 	       210	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5
0x4000644	            0x7511	                           jne 0x4000657	       210	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5
0x4000646	        0x488d7d58	                   lea rdi, [rbp + 0x58]	       211	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5	CALL_4
0x400064a	        0x498d7558	                   lea rsi, [r13 + 0x58]	       211	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5	CALL_4
0x400064e	      0xe800000000	                          call 0x4000653	       211	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5	CALL_4
0x4000653	            0x85c0	                           test eax, eax	       210	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5
0x4000655	            0x7409	                            je 0x4000660	       210	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5
0x4000657	    0xc74540000000	               mov dword [rbp + 0x40], 0	       212	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5
0x400065e	            0xeb5e	                           jmp 0x40006be	       213	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_5
0x4000660	        0x418b4538	            mov eax, dword [r13 + 0x38] 	       216	split-index.c	FUNCTION_9	IF_1	FOR_1
0x4000664	        0x89442408	                mov dword [rsp + 8], eax	       216	split-index.c	FUNCTION_9	IF_1	FOR_1
0x4000668	        0x8b442404	                mov eax, dword [rsp + 4]	       218	split-index.c	FUNCTION_9	IF_1	FOR_1
0x400066c	      0x2500b00060	                     and eax, 0x6000b000	       218	split-index.c	FUNCTION_9	IF_1	FOR_1
0x4000671	          0x894538	            mov dword [rbp + 0x38], eax 	       218	split-index.c	FUNCTION_9	IF_1	FOR_1
0x4000674	    0x4181653800b0	      and dword [r13 + 0x38], 0x6000b000	       219	split-index.c	FUNCTION_9	IF_1	FOR_1
0x400067c	        0x498d7510	                   lea rsi, [r13 + 0x10]	       220	split-index.c	FUNCTION_9	IF_1	FOR_1	CALL_5
0x4000680	        0x488d7d10	                   lea rdi, [rbp + 0x10]	       220	split-index.c	FUNCTION_9	IF_1	FOR_1	CALL_5
0x4000684	      0xba48000000	                           mov edx, 0x48	       220	split-index.c	FUNCTION_9	IF_1	FOR_1	CALL_5
0x4000689	      0xe800000000	                          call 0x400068e	       220	split-index.c	FUNCTION_9	IF_1	FOR_1	CALL_5
0x400068e	        0x44897d38	           mov dword [rbp + 0x38], r15d 	       223	split-index.c	FUNCTION_9	IF_1	FOR_1
0x4000692	        0x8b4c2408	                mov ecx, dword [rsp + 8]	       224	split-index.c	FUNCTION_9	IF_1	FOR_1
0x4000696	        0x41894d38	             mov dword [r13 + 0x38], ecx	       224	split-index.c	FUNCTION_9	IF_1	FOR_1
0x400069a	            0x85c0	                           test eax, eax	       225	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_6
0x400069c	            0x7407	                            je 0x40006a5	       225	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_6
0x400069e	    0x814d38000000	     or dword [rbp + 0x38], section_end.	       226	split-index.c	FUNCTION_9	IF_1	FOR_1	IF_6
0x40006a5	          0x4c89ef	                            mov rdi, r13	       227	split-index.c	FUNCTION_9	IF_1	FOR_1	CALL_6
0x40006a8	      0xe800000000	                          call 0x40006ad	       227	split-index.c	FUNCTION_9	IF_1	FOR_1	CALL_6
0x40006ad	        0x498b4618	            mov rax, qword [r14 + 0x18] 	       228	split-index.c	FUNCTION_9	IF_1	FOR_1
0x40006b1	          0x8b5540	            mov edx, dword [rbp + 0x40] 	       228	split-index.c	FUNCTION_9	IF_1	FOR_1
0x40006b4	          0x8d52ff	                      lea edx, [rdx - 1]	       228	split-index.c	FUNCTION_9	IF_1	FOR_1
0x40006b7	          0x488b00	                    mov rax, qword [rax]	       228	split-index.c	FUNCTION_9	IF_1	FOR_1
0x40006ba	        0x48892cd0	            mov qword [rax + rdx*8], rbp	       228	split-index.c	FUNCTION_9	IF_1	FOR_1
0x40006be	          0x83c301	                              add ebx, 1	       193	split-index.c	FUNCTION_9	IF_1	FOR_1
0x40006c1	      0x41395c240c	              cmp dword [r12 + 0xc], ebx	       193	split-index.c	FUNCTION_9	IF_1	FOR_1
0x40006c6	     0xf871affffff	                            ja 0x40005e6	       193	split-index.c	FUNCTION_9	IF_1	FOR_1
0x40006cc	        0x498b4618	            mov rax, qword [r14 + 0x18] 	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0x40006d0	        0x83780c00	                cmp dword [rax + 0xc], 0	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0x40006d4	     0xf84dffeffff	                            je 0x40005b9	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0x40006da	    0x41bd00000000	                             mov r13d, 0	       193	split-index.c	FUNCTION_9	IF_1	FOR_1
0x40006e0	    0xc74424040000	                  mov dword [rsp + 4], 0	       193	split-index.c	FUNCTION_9	IF_1	FOR_1
0x40006e8	      0xbd00000000	                              mov ebp, 0	       193	split-index.c	FUNCTION_9	IF_1	FOR_1
0x40006ed	    0x48c744240800	                  mov qword [rsp + 8], 0	       193	split-index.c	FUNCTION_9	IF_1	FOR_1
0x40006f6	          0x4863f5	                         movsxd rsi, ebp	       231	split-index.c	FUNCTION_9	IF_1	FOR_2
0x40006f9	          0x488b00	                    mov rax, qword [rax]	       231	split-index.c	FUNCTION_9	IF_1	FOR_2
0x40006fc	        0x488b1cf0	            mov rbx, qword [rax + rsi*8]	       231	split-index.c	FUNCTION_9	IF_1	FOR_2
0x4000700	          0x8b4338	            mov eax, dword [rbx + 0x38] 	       232	split-index.c	FUNCTION_9	IF_1	FOR_2	IF_7
0x4000703	      0x2500000204	                      and eax, 0x4020000	       232	split-index.c	FUNCTION_9	IF_1	FOR_2	IF_7
0x4000708	      0x3d00000004	         cmp eax, loc.imp.discard_index 	       232	split-index.c	FUNCTION_9	IF_1	FOR_2	IF_7
0x400070d	            0x740e	                            je 0x400071d	       232	split-index.c	FUNCTION_9	IF_1	FOR_2	IF_7
0x400070f	        0x498b7e20	            mov rdi, qword [r14 + 0x20] 	       234	split-index.c	FUNCTION_9	IF_1	FOR_2	CALL_7
0x4000713	      0xe800000000	                          call 0x4000718	       234	split-index.c	FUNCTION_9	IF_1	FOR_2	CALL_7
0x4000718	      0xe990000000	                           jmp 0x40007ad	       234	split-index.c	FUNCTION_9	IF_1	FOR_2	CALL_7
0x400071d	        0xf6433b08	               test byte [rbx + 0x3b], 8	       235	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0x4000721	     0xf8486000000	                            je 0x40007ad	       235	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0x4000727	        0x498b7e28	            mov rdi, qword [r14 + 0x28] 	       236	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_8
0x400072b	      0xe800000000	                          call 0x4000730	       236	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_8
0x4000730	    0x814b38000000	       or dword [rbx + 0x38], 0x10000000	       237	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0x4000737	        0x8b442404	                mov eax, dword [rsp + 4]	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0x400073b	        0x448d7801	                     lea r15d, [rax + 1]	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0x400073f	          0x4539ef	                          cmp r15d, r13d	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0x4000742	            0x7e56	                           jle 0x400079a	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0x4000744	      0x438d446d30	          lea eax, [r13 + r13*2 + 0x30] 	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0x4000749	          0x4189c5	                           mov r13d, eax	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0x400074c	        0x41c1ed1f	                          shr r13d, 0x1f	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0x4000750	          0x4101c5	                           add r13d, eax	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0x4000753	          0x41d1fd	                             sar r13d, 1	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0x4000756	          0x4539ef	                          cmp r15d, r13d	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0x4000759	        0x450f4def	                       cmovge r13d, r15d	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0x400075d	          0x4963d5	                        movsxd rdx, r13d	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0x4000760	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_30	IF_1	CALL_1
0x400076a	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_30	IF_1	CALL_1
0x400076d	            0x7614	                           jbe 0x4000783	       795	git-compat-util.h	FUNCTION_30	IF_1	CALL_1
0x400076f	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_30	IF_1	CALL_2
0x4000774	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_30	IF_1	CALL_2
0x4000779	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_30	IF_1	CALL_2
0x400077e	      0xe800000000	                          call 0x4000783	       796	git-compat-util.h	FUNCTION_30	IF_1	CALL_2
0x4000783	    0x488d34d50000	                        lea rsi, [rdx*8]	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0x400078b	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0x4000790	      0xe800000000	                          call 0x4000795	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0x4000795	      0x4889442408	                mov qword [rsp + 8], rax	       238	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8	CALL_9
0x400079a	      0x4863442404	            movsxd rax, dword [rsp + 4] 	       239	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0x400079f	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       239	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0x40007a4	        0x48891cc1	            mov qword [rcx + rax*8], rbx	       239	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0x40007a8	      0x44897c2404	               mov dword [rsp + 4], r15d	       239	split-index.c	FUNCTION_9	IF_1	FOR_2	ELSE_1	IF_8
0x40007ad	        0x488d7b44	                   lea rdi, [rbx + 0x44]	       975	cache.h	FUNCTION_62	CALL_1
0x40007b1	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_62	CALL_1
0x40007b6	      0xbe00000000	                              mov esi, 0	       975	cache.h	FUNCTION_62	CALL_1
0x40007bb	      0xe800000000	                          call 0x40007c0	       975	cache.h	FUNCTION_62	CALL_1
0x40007c0	            0x85c0	                           test eax, eax	       241	split-index.c	FUNCTION_9	IF_1	FOR_2	IF_9	CALL_10
0x40007c2	            0x7506	                           jne 0x40007ca	       241	split-index.c	FUNCTION_9	IF_1	FOR_2	IF_9	CALL_10
0x40007c4	    0x41804c243804	                 or byte [r12 + 0x38], 4	       242	split-index.c	FUNCTION_9	IF_1	FOR_2	IF_9
0x40007ca	          0x83c501	                              add ebp, 1	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0x40007cd	        0x498b4618	            mov rax, qword [r14 + 0x18] 	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0x40007d1	          0x39680c	              cmp dword [rax + 0xc], ebp	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0x40007d4	     0xf871cffffff	                            ja 0x40006f6	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0x40007da	      0xe9f1fdffff	                           jmp 0x40005d0	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0x40007df	          0x4863c5	                         movsxd rax, ebp	       247	split-index.c	FUNCTION_9	FOR_3
0x40007e2	        0x498b1424	                    mov rdx, qword [r12]	       247	split-index.c	FUNCTION_9	FOR_3
0x40007e6	        0x488b1cc2	            mov rbx, qword [rdx + rax*8]	       247	split-index.c	FUNCTION_9	FOR_3
0x40007ea	      0x49837e1800	               cmp qword [r14 + 0x18], 0	       248	split-index.c	FUNCTION_9	FOR_3	IF_10
0x40007ef	            0x740a	                            je 0x40007fb	       248	split-index.c	FUNCTION_9	FOR_3	IF_10
0x40007f1	        0x837b4000	               cmp dword [rbx + 0x40], 0	       248	split-index.c	FUNCTION_9	FOR_3	IF_10
0x40007f5	     0xf85a4000000	                           jne 0x400089f	       248	split-index.c	FUNCTION_9	FOR_3	IF_10
0x40007fb	          0x8b4338	            mov eax, dword [rbx + 0x38] 	       248	split-index.c	FUNCTION_9	FOR_3	IF_10
0x40007fe	      0xa900000200	                       test eax, 0x20000	       248	split-index.c	FUNCTION_9	FOR_3	IF_10
0x4000803	     0xf8596000000	                           jne 0x400089f	       248	split-index.c	FUNCTION_9	FOR_3	IF_10
0x4000809	      0xa900000010	                    test eax, 0x10000000	       249	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_11
0x400080e	            0x7419	                            je 0x4000829	       249	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_11
0x4000810	      0xb900000000	                              mov ecx, 0	       249	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_11
0x4000815	      0xbaf9000000	                           mov edx, 0xf9	       249	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_11
0x400081a	      0xbe00000000	                              mov esi, 0	       249	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_11
0x400081f	      0xbf00000000	                              mov edi, 0	       249	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_11
0x4000824	      0xe800000000	                          call 0x4000829	       249	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_11
0x4000829	        0x8b442404	                mov eax, dword [rsp + 4]	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0x400082d	        0x448d7801	                     lea r15d, [rax + 1]	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0x4000831	          0x4539ef	                          cmp r15d, r13d	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0x4000834	            0x7e56	                           jle 0x400088c	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0x4000836	      0x438d446d30	          lea eax, [r13 + r13*2 + 0x30] 	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0x400083b	          0x4189c5	                           mov r13d, eax	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0x400083e	        0x41c1ed1f	                          shr r13d, 0x1f	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0x4000842	          0x4101c5	                           add r13d, eax	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0x4000845	          0x41d1fd	                             sar r13d, 1	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0x4000848	          0x4539ef	                          cmp r15d, r13d	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0x400084b	        0x450f4def	                       cmovge r13d, r15d	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0x400084f	          0x4963d5	                        movsxd rdx, r13d	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0x4000852	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_30	IF_1	CALL_1
0x400085c	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_30	IF_1	CALL_1
0x400085f	            0x7614	                           jbe 0x4000875	       795	git-compat-util.h	FUNCTION_30	IF_1	CALL_1
0x4000861	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_30	IF_1	CALL_2
0x4000866	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_30	IF_1	CALL_2
0x400086b	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_30	IF_1	CALL_2
0x4000870	      0xe800000000	                          call 0x4000875	       796	git-compat-util.h	FUNCTION_30	IF_1	CALL_2
0x4000875	    0x488d34d50000	                        lea rsi, [rdx*8]	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0x400087d	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0x4000882	      0xe800000000	                          call 0x4000887	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0x4000887	      0x4889442408	                mov qword [rsp + 8], rax	       250	split-index.c	FUNCTION_9	FOR_3	IF_10	CALL_12
0x400088c	      0x4863442404	            movsxd rax, dword [rsp + 4] 	       251	split-index.c	FUNCTION_9	FOR_3	IF_10
0x4000891	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       251	split-index.c	FUNCTION_9	FOR_3	IF_10
0x4000896	        0x48891cc1	            mov qword [rcx + rax*8], rbx	       251	split-index.c	FUNCTION_9	FOR_3	IF_10
0x400089a	      0x44897c2404	               mov dword [rsp + 4], r15d	       251	split-index.c	FUNCTION_9	FOR_3	IF_10
0x400089f	    0x816338ffffff	      and dword [rbx + 0x38], 0xfbffffff	       253	split-index.c	FUNCTION_9	FOR_3
0x40008a6	          0x83c501	                              add ebp, 1	       246	split-index.c	FUNCTION_9	FOR_3
0x40008a9	      0x41396c240c	              cmp dword [r12 + 0xc], ebp	       246	split-index.c	FUNCTION_9	FOR_3
0x40008ae	     0xf872bffffff	                            ja 0x40007df	       246	split-index.c	FUNCTION_9	FOR_3
0x40008b4	        0x498b0424	                    mov rax, qword [r12]	       260	split-index.c	FUNCTION_9
0x40008b8	        0x49894630	             mov qword [r14 + 0x30], rax	       260	split-index.c	FUNCTION_9
0x40008bc	      0x418b44240c	              mov eax, dword [r12 + 0xc]	       261	split-index.c	FUNCTION_9
0x40008c1	        0x41894638	             mov dword [r14 + 0x38], eax	       261	split-index.c	FUNCTION_9
0x40008c5	      0x488b442408	                mov rax, qword [rsp + 8]	       262	split-index.c	FUNCTION_9
0x40008ca	        0x49890424	                    mov qword [r12], rax	       262	split-index.c	FUNCTION_9
0x40008ce	        0x8b442404	                mov eax, dword [rsp + 4]	       263	split-index.c	FUNCTION_9
0x40008d2	      0x418944240c	              mov dword [r12 + 0xc], eax	       263	split-index.c	FUNCTION_9
0x40008d7	            0xeb1d	                           jmp 0x40008f6	       264	split-index.c	FUNCTION_9
0x40008d9	        0x83780c00	                cmp dword [rax + 0xc], 0	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0x40008dd	     0xf85f7fdffff	                           jne 0x40006da	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0x40008e3	    0xc74424040000	                  mov dword [rsp + 4], 0	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0x40008eb	    0x48c744240800	                  mov qword [rsp + 8], 0	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0x40008f4	            0xebbe	                           jmp 0x40008b4	       230	split-index.c	FUNCTION_9	IF_1	FOR_2
0x40008f6	        0x4883c418	                           add rsp, 0x18	       264	split-index.c	FUNCTION_9
0x40008fa	              0x5b	                                 pop rbx	       264	split-index.c	FUNCTION_9
0x40008fb	              0x5d	                                 pop rbp	       264	split-index.c	FUNCTION_9
0x40008fc	            0x415c	                                 pop r12	       264	split-index.c	FUNCTION_9
0x40008fe	            0x415d	                                 pop r13	       264	split-index.c	FUNCTION_9
0x4000900	            0x415e	                                 pop r14	       264	split-index.c	FUNCTION_9
0x4000902	            0x415f	                                 pop r15	       264	split-index.c	FUNCTION_9
0x4000904	              0xc3	                                     ret	       264	split-index.c	FUNCTION_9
merge_base_index	functions,0:DO,0:IF,2:FOR,1:CALL,12:WHILE,0:ELSE,0:SWITCH,0	107
0x40003b8	            0x4155	                                push r13	       131	split-index.c	FUNCTION_8
0x40003ba	            0x4154	                                push r12	       131	split-index.c	FUNCTION_8
0x40003bc	              0x55	                                push rbp	       131	split-index.c	FUNCTION_8
0x40003bd	              0x53	                                push rbx	       131	split-index.c	FUNCTION_8
0x40003be	        0x4883ec08	                              sub rsp, 8	       131	split-index.c	FUNCTION_8
0x40003c2	          0x4989fc	                            mov r12, rdi	       131	split-index.c	FUNCTION_8
0x40003c5	        0x488b6f28	            mov rbp, qword [rdi + 0x28] 	       132	split-index.c	FUNCTION_8
0x40003c9	        0x488b5518	            mov rdx, qword [rbp + 0x18] 	       135	split-index.c	FUNCTION_8	CALL_1
0x40003cd	        0x837a0c00	                cmp dword [rdx + 0xc], 0	        66	split-index.c	FUNCTION_4	FOR_1
0x40003d1	            0x741a	                            je 0x40003ed	        66	split-index.c	FUNCTION_4	FOR_1
0x40003d3	      0xb800000000	                              mov eax, 0	        66	split-index.c	FUNCTION_4	FOR_1
0x40003d8	          0x4863f0	                         movsxd rsi, eax	        67	split-index.c	FUNCTION_4	FOR_1
0x40003db	          0x488b0a	                    mov rcx, qword [rdx]	        67	split-index.c	FUNCTION_4	FOR_1
0x40003de	        0x488b0cf1	            mov rcx, qword [rcx + rsi*8]	        67	split-index.c	FUNCTION_4	FOR_1
0x40003e2	          0x83c001	                              add eax, 1	        67	split-index.c	FUNCTION_4	FOR_1
0x40003e5	          0x894140	             mov dword [rcx + 0x40], eax	        67	split-index.c	FUNCTION_4	FOR_1
0x40003e8	          0x3b420c	              cmp eax, dword [rdx + 0xc]	        66	split-index.c	FUNCTION_4	FOR_1
0x40003eb	            0x72eb	                            jb 0x40003d8	        66	split-index.c	FUNCTION_4	FOR_1
0x40003ed	        0x498b0424	                    mov rax, qword [r12]	       137	split-index.c	FUNCTION_8
0x40003f1	        0x48894530	            mov qword [rbp + 0x30], rax 	       137	split-index.c	FUNCTION_8
0x40003f5	      0x418b44240c	              mov eax, dword [r12 + 0xc]	       138	split-index.c	FUNCTION_8
0x40003fa	          0x894538	            mov dword [rbp + 0x38], eax 	       138	split-index.c	FUNCTION_8
0x40003fd	        0x488b4518	            mov rax, qword [rbp + 0x18] 	       139	split-index.c	FUNCTION_8
0x4000401	          0x8b400c	              mov eax, dword [rax + 0xc]	       139	split-index.c	FUNCTION_8
0x4000404	      0x418944240c	              mov dword [r12 + 0xc], eax	       139	split-index.c	FUNCTION_8
0x4000409	    0x49c704240000	                      mov qword [r12], 0	       140	split-index.c	FUNCTION_8
0x4000411	            0x85c0	                           test eax, eax	       142	split-index.c	FUNCTION_8	CALL_2
0x4000413	            0x750b	                           jne 0x4000420	       142	split-index.c	FUNCTION_8	CALL_2
0x4000415	    0x41c744241000	               mov dword [r12 + 0x10], 0	       141	split-index.c	FUNCTION_8
0x400041e	            0xeb4b	                           jmp 0x400046b	       141	split-index.c	FUNCTION_8
0x4000420	          0x83f818	                           cmp eax, 0x18	       142	split-index.c	FUNCTION_8	CALL_2
0x4000423	            0x7609	                           jbe 0x400042e	       142	split-index.c	FUNCTION_8	CALL_2
0x4000425	      0x4189442410	             mov dword [r12 + 0x10], eax	       142	split-index.c	FUNCTION_8	CALL_2
0x400042a	            0x89c6	                            mov esi, eax	       142	split-index.c	FUNCTION_8	CALL_2
0x400042c	            0xeb0e	                           jmp 0x400043c	       142	split-index.c	FUNCTION_8	CALL_2
0x400042e	    0x41c744241018	           mov dword [r12 + 0x10], 0x18 	       142	split-index.c	FUNCTION_8	CALL_2
0x4000437	      0xbe18000000	                           mov esi, 0x18	       142	split-index.c	FUNCTION_8	CALL_2
0x400043c	        0x48c1e603	                              shl rsi, 3	       142	split-index.c	FUNCTION_8	CALL_2
0x4000440	      0xbf00000000	                              mov edi, 0	       142	split-index.c	FUNCTION_8	CALL_2
0x4000445	      0xe800000000	                          call 0x400044a	       142	split-index.c	FUNCTION_8	CALL_2
0x400044a	        0x49890424	                    mov qword [r12], rax	       142	split-index.c	FUNCTION_8	CALL_2
0x400044e	      0x418b54240c	              mov edx, dword [r12 + 0xc]	       143	split-index.c	FUNCTION_8	CALL_3
0x4000453	        0x488b4d18	            mov rcx, qword [rbp + 0x18] 	       143	split-index.c	FUNCTION_8	CALL_3
0x4000457	          0x488b31	                    mov rsi, qword [rcx]	       143	split-index.c	FUNCTION_8	CALL_3
0x400045a	          0x4885d2	                           test rdx, rdx	       853	git-compat-util.h	FUNCTION_32	IF_1
0x400045d	            0x740c	                            je 0x400046b	       853	git-compat-util.h	FUNCTION_32	IF_1
0x400045f	        0x48c1e203	                              shl rdx, 3	        53	string3.h	FUNCTION_43	CALL_3
0x4000463	          0x4889c7	                            mov rdi, rax	        53	string3.h	FUNCTION_43	CALL_3
0x4000466	      0xe800000000	                          call 0x400046b	        53	string3.h	FUNCTION_43	CALL_3
0x400046b	    0xc7453c000000	               mov dword [rbp + 0x3c], 0	       145	split-index.c	FUNCTION_8
0x4000472	    0xc74540000000	               mov dword [rbp + 0x40], 0	       146	split-index.c	FUNCTION_8
0x4000479	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	       147	split-index.c	FUNCTION_8	CALL_4
0x400047d	          0x4c89e2	                            mov rdx, r12	       147	split-index.c	FUNCTION_8	CALL_4
0x4000480	      0xbe00000000	                              mov esi, 0	       147	split-index.c	FUNCTION_8	CALL_4
0x4000485	      0xe800000000	                          call 0x400048a	       147	split-index.c	FUNCTION_8	CALL_4
0x400048a	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	       148	split-index.c	FUNCTION_8	CALL_5
0x400048e	          0x4c89e2	                            mov rdx, r12	       148	split-index.c	FUNCTION_8	CALL_5
0x4000491	      0xbe00000000	                              mov esi, 0	       148	split-index.c	FUNCTION_8	CALL_5
0x4000496	      0xe800000000	                          call 0x400049b	       148	split-index.c	FUNCTION_8	CALL_5
0x400049b	        0x837d3c00	               cmp dword [rbp + 0x3c], 0	       149	split-index.c	FUNCTION_8	IF_1
0x400049f	            0x7408	                            je 0x40004a9	       149	split-index.c	FUNCTION_8	IF_1
0x40004a1	          0x4c89e7	                            mov rdi, r12	       150	split-index.c	FUNCTION_8	CALL_6
0x40004a4	      0xe800000000	                          call 0x40004a9	       150	split-index.c	FUNCTION_8	CALL_6
0x40004a9	          0x8b5d40	            mov ebx, dword [rbp + 0x40] 	       152	split-index.c	FUNCTION_8	FOR_1
0x40004ac	          0x3b5d38	            cmp ebx, dword [rbp + 0x38] 	       152	split-index.c	FUNCTION_8	FOR_1
0x40004af	            0x7364	                           jae 0x4000515	       152	split-index.c	FUNCTION_8	FOR_1
0x40004b1	            0x89d8	                            mov eax, ebx	       153	split-index.c	FUNCTION_8	FOR_1	IF_2	CALL_7
0x40004b3	    0x4c8d2cc50000	                        lea r13, [rax*8]	       153	split-index.c	FUNCTION_8	FOR_1	IF_2	CALL_7
0x40004bb	        0x488b5530	            mov rdx, qword [rbp + 0x30] 	       153	split-index.c	FUNCTION_8	FOR_1	IF_2	CALL_7
0x40004bf	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       153	split-index.c	FUNCTION_8	FOR_1	IF_2	CALL_7
0x40004c3	        0x837e3c00	               cmp dword [rsi + 0x3c], 0	       153	split-index.c	FUNCTION_8	FOR_1	IF_2	CALL_7
0x40004c7	            0x752b	                           jne 0x40004f4	       153	split-index.c	FUNCTION_8	FOR_1	IF_2	CALL_7
0x40004c9	            0xeb18	                           jmp 0x40004e3	       153	split-index.c	FUNCTION_8	FOR_1	IF_2	CALL_7
0x40004cb	            0x89d8	                            mov eax, ebx	       153	split-index.c	FUNCTION_8	FOR_1	IF_2	CALL_7
0x40004cd	    0x4c8d2cc50000	                        lea r13, [rax*8]	       153	split-index.c	FUNCTION_8	FOR_1	IF_2	CALL_7
0x40004d5	        0x488b5530	            mov rdx, qword [rbp + 0x30] 	       153	split-index.c	FUNCTION_8	FOR_1	IF_2	CALL_7
0x40004d9	        0x488b34c2	            mov rsi, qword [rdx + rax*8]	       153	split-index.c	FUNCTION_8	FOR_1	IF_2	CALL_7
0x40004dd	        0x837e3c00	               cmp dword [rsi + 0x3c], 0	       153	split-index.c	FUNCTION_8	FOR_1	IF_2	CALL_7
0x40004e1	            0x7511	                           jne 0x40004f4	       153	split-index.c	FUNCTION_8	FOR_1	IF_2	CALL_7
0x40004e3	            0x89de	                            mov esi, ebx	       154	split-index.c	FUNCTION_8	FOR_1	IF_2	CALL_8
0x40004e5	      0xbf00000000	                              mov edi, 0	       154	split-index.c	FUNCTION_8	FOR_1	IF_2	CALL_8
0x40004ea	      0xb800000000	                              mov eax, 0	       154	split-index.c	FUNCTION_8	FOR_1	IF_2	CALL_8
0x40004ef	      0xe800000000	                          call 0x40004f4	       154	split-index.c	FUNCTION_8	FOR_1	IF_2	CALL_8
0x40004f4	      0xba25000000	                           mov edx, 0x25	       156	split-index.c	FUNCTION_8	FOR_1	CALL_9
0x40004f9	          0x4c89e7	                            mov rdi, r12	       156	split-index.c	FUNCTION_8	FOR_1	CALL_9
0x40004fc	      0xe800000000	                          call 0x4000501	       156	split-index.c	FUNCTION_8	FOR_1	CALL_9
0x4000501	        0x488b4530	            mov rax, qword [rbp + 0x30] 	       165	split-index.c	FUNCTION_8	FOR_1
0x4000505	    0x4ac704280000	                mov qword [rax + r13], 0	       165	split-index.c	FUNCTION_8	FOR_1
0x400050d	          0x83c301	                              add ebx, 1	       152	split-index.c	FUNCTION_8	FOR_1
0x4000510	          0x395d38	            cmp dword [rbp + 0x38], ebx 	       152	split-index.c	FUNCTION_8	FOR_1
0x4000513	            0x77b6	                            ja 0x40004cb	       152	split-index.c	FUNCTION_8	FOR_1
0x4000515	        0x488b7d20	            mov rdi, qword [rbp + 0x20] 	       168	split-index.c	FUNCTION_8	CALL_10
0x4000519	      0xe800000000	                          call 0x400051e	       168	split-index.c	FUNCTION_8	CALL_10
0x400051e	        0x488b7d28	            mov rdi, qword [rbp + 0x28] 	       169	split-index.c	FUNCTION_8	CALL_11
0x4000522	      0xe800000000	                          call 0x4000527	       169	split-index.c	FUNCTION_8	CALL_11
0x4000527	        0x488b7d30	            mov rdi, qword [rbp + 0x30] 	       170	split-index.c	FUNCTION_8	CALL_12
0x400052b	      0xe800000000	                          call 0x4000530	       170	split-index.c	FUNCTION_8	CALL_12
0x4000530	    0x48c745300000	               mov qword [rbp + 0x30], 0	       170	split-index.c	FUNCTION_8	CALL_12
0x4000538	    0x48c745200000	               mov qword [rbp + 0x20], 0	       171	split-index.c	FUNCTION_8
0x4000540	    0x48c745280000	               mov qword [rbp + 0x28], 0	       172	split-index.c	FUNCTION_8
0x4000548	    0xc74538000000	               mov dword [rbp + 0x38], 0	       173	split-index.c	FUNCTION_8
0x400054f	        0x4883c408	                              add rsp, 8	       174	split-index.c	FUNCTION_8
0x4000553	              0x5b	                                 pop rbx	       174	split-index.c	FUNCTION_8
0x4000554	              0x5d	                                 pop rbp	       174	split-index.c	FUNCTION_8
0x4000555	            0x415c	                                 pop r12	       174	split-index.c	FUNCTION_8
0x4000557	            0x415d	                                 pop r13	       174	split-index.c	FUNCTION_8
0x4000559	              0xc3	                                     ret	       174	split-index.c	FUNCTION_8
save_or_free_index_entry	functions,0:DO,0:IF,1:FOR,0:CALL,1:WHILE,0:ELSE,1:SWITCH,0	22
0x4000996	        0x4883ec08	                              sub rsp, 8	       296	split-index.c	FUNCTION_12
0x400099a	          0x8b4640	            mov eax, dword [rsi + 0x40] 	       297	split-index.c	FUNCTION_12	IF_1
0x400099d	            0x85c0	                           test eax, eax	       297	split-index.c	FUNCTION_12	IF_1
0x400099f	            0x742c	                            je 0x40009cd	       297	split-index.c	FUNCTION_12	IF_1
0x40009a1	        0x488b5728	            mov rdx, qword [rdi + 0x28] 	       298	split-index.c	FUNCTION_12	IF_1
0x40009a5	          0x4885d2	                           test rdx, rdx	       297	split-index.c	FUNCTION_12	IF_1
0x40009a8	            0x7423	                            je 0x40009cd	       297	split-index.c	FUNCTION_12	IF_1
0x40009aa	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	       299	split-index.c	FUNCTION_12	IF_1
0x40009ae	          0x4885d2	                           test rdx, rdx	       298	split-index.c	FUNCTION_12	IF_1
0x40009b1	            0x741a	                            je 0x40009cd	       298	split-index.c	FUNCTION_12	IF_1
0x40009b3	          0x3b420c	              cmp eax, dword [rdx + 0xc]	       299	split-index.c	FUNCTION_12	IF_1
0x40009b6	            0x7715	                            ja 0x40009cd	       299	split-index.c	FUNCTION_12	IF_1
0x40009b8	          0x8d48ff	                      lea ecx, [rax - 1]	       301	split-index.c	FUNCTION_12	IF_1
0x40009bb	          0x488b02	                    mov rax, qword [rdx]	       301	split-index.c	FUNCTION_12	IF_1
0x40009be	        0x483b34c8	            cmp rsi, qword [rax + rcx*8]	       300	split-index.c	FUNCTION_12	IF_1
0x40009c2	            0x7509	                           jne 0x40009cd	       300	split-index.c	FUNCTION_12	IF_1
0x40009c4	    0x814e38000002	          or dword [rsi + 0x38], 0x20000	       302	split-index.c	FUNCTION_12	IF_1
0x40009cb	            0xeb08	                           jmp 0x40009d5	       302	split-index.c	FUNCTION_12	IF_1
0x40009cd	          0x4889f7	                            mov rdi, rsi	       302	split-index.c	FUNCTION_12	IF_1
0x40009d0	      0xe800000000	                          call 0x40009d5	       304	split-index.c	FUNCTION_12	CALL_1
0x40009d5	        0x4883c408	                              add rsp, 8	       305	split-index.c	FUNCTION_12
0x40009d9	              0xc3	                                     ret	       305	split-index.c	FUNCTION_12
move_cache_to_base_index	functions,0:DO,0:IF,0:FOR,1:CALL,4:WHILE,0:ELSE,0:SWITCH,0	68
0x40002d7	            0x4154	                                push r12	        71	split-index.c	FUNCTION_5
0x40002d9	              0x55	                                push rbp	        71	split-index.c	FUNCTION_5
0x40002da	              0x53	                                push rbx	        71	split-index.c	FUNCTION_5
0x40002db	          0x4889fd	                            mov rbp, rdi	        71	split-index.c	FUNCTION_5
0x40002de	        0x488b5f28	            mov rbx, qword [rdi + 0x28] 	        72	split-index.c	FUNCTION_5
0x40002e2	      0xbed0000000	                           mov esi, 0xd0	        80	split-index.c	FUNCTION_5	CALL_1
0x40002e7	      0xbf01000000	                              mov edi, 1	        80	split-index.c	FUNCTION_5	CALL_1
0x40002ec	      0xe800000000	                          call 0x40002f1	        80	split-index.c	FUNCTION_5	CALL_1
0x40002f1	        0x48894318	             mov qword [rbx + 0x18], rax	        80	split-index.c	FUNCTION_5	CALL_1
0x40002f5	          0x8b5508	                mov edx, dword [rbp + 8]	        81	split-index.c	FUNCTION_5
0x40002f8	          0x895008	                mov dword [rax + 8], edx	        81	split-index.c	FUNCTION_5
0x40002fb	        0x488b4318	            mov rax, qword [rbx + 0x18] 	        83	split-index.c	FUNCTION_5
0x40002ff	        0x488b5530	            mov rdx, qword [rbp + 0x30] 	        83	split-index.c	FUNCTION_5
0x4000303	        0x48895030	             mov qword [rax + 0x30], rdx	        83	split-index.c	FUNCTION_5
0x4000307	          0x8b550c	              mov edx, dword [rbp + 0xc]	        84	split-index.c	FUNCTION_5	CALL_2
0x400030a	        0x488b4b18	            mov rcx, qword [rbx + 0x18] 	        84	split-index.c	FUNCTION_5	CALL_2
0x400030e	          0x8b4110	            mov eax, dword [rcx + 0x10] 	        84	split-index.c	FUNCTION_5	CALL_2
0x4000311	            0x39c2	                            cmp edx, eax	        84	split-index.c	FUNCTION_5	CALL_2
0x4000313	            0x7628	                           jbe 0x400033d	        84	split-index.c	FUNCTION_5	CALL_2
0x4000315	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	        84	split-index.c	FUNCTION_5	CALL_2
0x4000319	            0xd1e8	                              shr eax, 1	        84	split-index.c	FUNCTION_5	CALL_2
0x400031b	            0x39c2	                            cmp edx, eax	        84	split-index.c	FUNCTION_5	CALL_2
0x400031d	           0xf47c2	                          cmova eax, edx	        84	split-index.c	FUNCTION_5	CALL_2
0x4000320	          0x894110	             mov dword [rcx + 0x10], eax	        84	split-index.c	FUNCTION_5	CALL_2
0x4000323	        0x4c8b6318	            mov r12, qword [rbx + 0x18] 	        84	split-index.c	FUNCTION_5	CALL_2
0x4000327	      0x418b742410	            mov esi, dword [r12 + 0x10] 	        84	split-index.c	FUNCTION_5	CALL_2
0x400032c	        0x48c1e603	                              shl rsi, 3	        84	split-index.c	FUNCTION_5	CALL_2
0x4000330	        0x498b3c24	                    mov rdi, qword [r12]	        84	split-index.c	FUNCTION_5	CALL_2
0x4000334	      0xe800000000	                          call 0x4000339	        84	split-index.c	FUNCTION_5	CALL_2
0x4000339	        0x49890424	                    mov qword [r12], rax	        84	split-index.c	FUNCTION_5	CALL_2
0x400033d	        0x488b4318	            mov rax, qword [rbx + 0x18] 	        85	split-index.c	FUNCTION_5
0x4000341	          0x8b550c	              mov edx, dword [rbp + 0xc]	        85	split-index.c	FUNCTION_5
0x4000344	          0x89500c	              mov dword [rax + 0xc], edx	        85	split-index.c	FUNCTION_5
0x4000347	          0x8b550c	              mov edx, dword [rbp + 0xc]	        86	split-index.c	FUNCTION_5	CALL_3
0x400034a	          0x4885d2	                           test rdx, rdx	       853	git-compat-util.h	FUNCTION_32	IF_1
0x400034d	            0x7414	                            je 0x4000363	       853	git-compat-util.h	FUNCTION_32	IF_1
0x400034f	        0x488b4318	            mov rax, qword [rbx + 0x18] 	        86	split-index.c	FUNCTION_5	CALL_3
0x4000353	          0x488b38	                    mov rdi, qword [rax]	        53	string3.h	FUNCTION_43	CALL_3
0x4000356	        0x48c1e203	                              shl rdx, 3	        53	string3.h	FUNCTION_43	CALL_3
0x400035a	        0x488b7500	                    mov rsi, qword [rbp]	        53	string3.h	FUNCTION_43	CALL_3
0x400035e	      0xe800000000	                          call 0x4000363	        53	string3.h	FUNCTION_43	CALL_3
0x4000363	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	        87	split-index.c	FUNCTION_5	CALL_4
0x4000367	        0x837a0c00	                cmp dword [rdx + 0xc], 0	        66	split-index.c	FUNCTION_4	FOR_1
0x400036b	            0x7446	                            je 0x40003b3	        66	split-index.c	FUNCTION_4	FOR_1
0x400036d	      0xb800000000	                              mov eax, 0	        66	split-index.c	FUNCTION_4	FOR_1
0x4000372	          0x4863f0	                         movsxd rsi, eax	        67	split-index.c	FUNCTION_4	FOR_1
0x4000375	          0x488b0a	                    mov rcx, qword [rdx]	        67	split-index.c	FUNCTION_4	FOR_1
0x4000378	        0x488b0cf1	            mov rcx, qword [rcx + rsi*8]	        67	split-index.c	FUNCTION_4	FOR_1
0x400037c	          0x83c001	                              add eax, 1	        67	split-index.c	FUNCTION_4	FOR_1
0x400037f	          0x894140	             mov dword [rcx + 0x40], eax	        67	split-index.c	FUNCTION_4	FOR_1
0x4000382	          0x3b420c	              cmp eax, dword [rdx + 0xc]	        66	split-index.c	FUNCTION_4	FOR_1
0x4000385	            0x72eb	                            jb 0x4000372	        66	split-index.c	FUNCTION_4	FOR_1
0x4000387	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	        88	split-index.c	FUNCTION_5	FOR_1
0x400038b	        0x837a0c00	                cmp dword [rdx + 0xc], 0	        88	split-index.c	FUNCTION_5	FOR_1
0x400038f	            0x7422	                            je 0x40003b3	        88	split-index.c	FUNCTION_5	FOR_1
0x4000391	      0xb800000000	                              mov eax, 0	        88	split-index.c	FUNCTION_5	FOR_1
0x4000396	          0x4863c8	                         movsxd rcx, eax	        89	split-index.c	FUNCTION_5	FOR_1
0x4000399	          0x488b12	                    mov rdx, qword [rdx]	        89	split-index.c	FUNCTION_5	FOR_1
0x400039c	        0x488b14ca	            mov rdx, qword [rdx + rcx*8]	        89	split-index.c	FUNCTION_5	FOR_1
0x40003a0	    0x816238ffffff	      and dword [rdx + 0x38], 0xf7ffffff	        89	split-index.c	FUNCTION_5	FOR_1
0x40003a7	          0x83c001	                              add eax, 1	        88	split-index.c	FUNCTION_5	FOR_1
0x40003aa	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	        88	split-index.c	FUNCTION_5	FOR_1
0x40003ae	          0x39420c	              cmp dword [rdx + 0xc], eax	        88	split-index.c	FUNCTION_5	FOR_1
0x40003b1	            0x77e3	                            ja 0x4000396	        88	split-index.c	FUNCTION_5	FOR_1
0x40003b3	              0x5b	                                 pop rbx	        90	split-index.c	FUNCTION_5
0x40003b4	              0x5d	                                 pop rbp	        90	split-index.c	FUNCTION_5
0x40003b5	            0x415c	                                 pop r12	        90	split-index.c	FUNCTION_5
0x40003b7	              0xc3	                                     ret	        90	split-index.c	FUNCTION_5
remove_split_index	functions,0:DO,0:IF,1:FOR,0:CALL,0:WHILE,0:ELSE,0:SWITCH,0	5
0x4000a57	      0x48837f2800	               cmp qword [rdi + 0x28], 0	       332	split-index.c	FUNCTION_15	IF_1
0x4000a5c	            0x740c	                            je 0x4000a6a	       332	split-index.c	FUNCTION_15	IF_1
0x4000a5e	    0x48c747280000	               mov qword [rdi + 0x28], 0	       339	split-index.c	FUNCTION_15	IF_1
0x4000a66	        0x834f1401	                or dword [rdi + 0x14], 1	       340	split-index.c	FUNCTION_15	IF_1
0x4000a6a	            0xf3c3	                                     ret	       340	split-index.c	FUNCTION_15	IF_1
discard_split_index	functions,0:DO,0:IF,3:FOR,0:CALL,3:WHILE,0:ELSE,0:SWITCH,0	20
0x4000956	              0x53	                                push rbx	       280	split-index.c	FUNCTION_11
0x4000957	        0x488b5f28	            mov rbx, qword [rdi + 0x28] 	       281	split-index.c	FUNCTION_11
0x400095b	          0x4885db	                           test rbx, rbx	       282	split-index.c	FUNCTION_11	IF_1
0x400095e	            0x7434	                            je 0x4000994	       282	split-index.c	FUNCTION_11	IF_1
0x4000960	    0x48c747280000	               mov qword [rdi + 0x28], 0	       284	split-index.c	FUNCTION_11
0x4000968	          0x8b4344	            mov eax, dword [rbx + 0x44] 	       285	split-index.c	FUNCTION_11
0x400096b	          0x83e801	                              sub eax, 1	       285	split-index.c	FUNCTION_11
0x400096e	          0x894344	             mov dword [rbx + 0x44], eax	       285	split-index.c	FUNCTION_11
0x4000971	            0x85c0	                           test eax, eax	       286	split-index.c	FUNCTION_11	IF_2
0x4000973	            0x751f	                           jne 0x4000994	       286	split-index.c	FUNCTION_11	IF_2
0x4000975	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       288	split-index.c	FUNCTION_11	IF_3
0x4000979	          0x4885ff	                           test rdi, rdi	       288	split-index.c	FUNCTION_11	IF_3
0x400097c	            0x740e	                            je 0x400098c	       288	split-index.c	FUNCTION_11	IF_3
0x400097e	      0xe800000000	                          call 0x4000983	       289	split-index.c	FUNCTION_11	IF_3	CALL_1
0x4000983	        0x488b7b18	            mov rdi, qword [rbx + 0x18] 	       290	split-index.c	FUNCTION_11	IF_3	CALL_2
0x4000987	      0xe800000000	                          call 0x400098c	       290	split-index.c	FUNCTION_11	IF_3	CALL_2
0x400098c	          0x4889df	                            mov rdi, rbx	       292	split-index.c	FUNCTION_11	CALL_3
0x400098f	      0xe800000000	                          call 0x4000994	       292	split-index.c	FUNCTION_11	CALL_3
0x4000994	              0x5b	                                 pop rbx	       293	split-index.c	FUNCTION_11
0x4000995	              0xc3	                                     ret	       293	split-index.c	FUNCTION_11
add_split_index	functions,0:DO,0:IF,1:FOR,0:CALL,1:WHILE,0:ELSE,0:SWITCH,0	8
0x4000a40	      0x48837f2800	               cmp qword [rdi + 0x28], 0	       324	split-index.c	FUNCTION_14	IF_1
0x4000a45	            0x750e	                           jne 0x4000a55	       324	split-index.c	FUNCTION_14	IF_1
0x4000a47	              0x53	                                push rbx	       323	split-index.c	FUNCTION_14
0x4000a48	          0x4889fb	                            mov rbx, rdi	       323	split-index.c	FUNCTION_14
0x4000a4b	      0xe800000000	                          call 0x4000a50	       325	split-index.c	FUNCTION_14	IF_1	CALL_1
0x4000a50	        0x834b1440	            or dword [rbx + 0x14], 0x40 	       326	split-index.c	FUNCTION_14	IF_1
0x4000a54	              0x5b	                                 pop rbx	       328	split-index.c	FUNCTION_14
0x4000a55	            0xf3c3	                                     ret	       328	split-index.c	FUNCTION_14
init_split_index	functions,0:DO,0:IF,1:FOR,0:CALL,1:WHILE,0:ELSE,0:SWITCH,0	12
0x4000179	              0x53	                                push rbx	         6	split-index.c	FUNCTION_1
0x400017a	          0x4889fb	                            mov rbx, rdi	         6	split-index.c	FUNCTION_1
0x400017d	      0x48837f2800	               cmp qword [rdi + 0x28], 0	         7	split-index.c	FUNCTION_1	IF_1
0x4000182	            0x751a	                           jne 0x400019e	         7	split-index.c	FUNCTION_1	IF_1
0x4000184	      0xbe48000000	                           mov esi, 0x48	         8	split-index.c	FUNCTION_1	IF_1	CALL_1
0x4000189	      0xbf01000000	                              mov edi, 1	         8	split-index.c	FUNCTION_1	IF_1	CALL_1
0x400018e	      0xe800000000	                          call 0x4000193	         8	split-index.c	FUNCTION_1	IF_1	CALL_1
0x4000193	        0x48894328	             mov qword [rbx + 0x28], rax	         8	split-index.c	FUNCTION_1	IF_1	CALL_1
0x4000197	    0xc74044010000	               mov dword [rax + 0x44], 1	         9	split-index.c	FUNCTION_1	IF_1
0x400019e	        0x488b4328	            mov rax, qword [rbx + 0x28] 	        11	split-index.c	FUNCTION_1
0x40001a2	              0x5b	                                 pop rbx	        12	split-index.c	FUNCTION_1
0x40001a3	              0xc3	                                     ret	        12	split-index.c	FUNCTION_1
finish_writing_split_index	functions,0:DO,0:IF,0:FOR,0:CALL,4:WHILE,0:ELSE,0:SWITCH,0	22
0x4000905	              0x55	                                push rbp	       267	split-index.c	FUNCTION_10
0x4000906	              0x53	                                push rbx	       267	split-index.c	FUNCTION_10
0x4000907	        0x4883ec08	                              sub rsp, 8	       267	split-index.c	FUNCTION_10
0x400090b	          0x4889fd	                            mov rbp, rdi	       267	split-index.c	FUNCTION_10
0x400090e	      0xe800000000	                          call 0x4000913	       268	split-index.c	FUNCTION_10	CALL_1
0x4000913	          0x4889c3	                            mov rbx, rax	       268	split-index.c	FUNCTION_10	CALL_1
0x4000916	        0x488b7820	            mov rdi, qword [rax + 0x20] 	       270	split-index.c	FUNCTION_10	CALL_2
0x400091a	      0xe800000000	                          call 0x400091f	       270	split-index.c	FUNCTION_10	CALL_2
0x400091f	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	       271	split-index.c	FUNCTION_10	CALL_3
0x4000923	      0xe800000000	                          call 0x4000928	       271	split-index.c	FUNCTION_10	CALL_3
0x4000928	    0x48c743200000	               mov qword [rbx + 0x20], 0	       272	split-index.c	FUNCTION_10
0x4000930	    0x48c743280000	               mov qword [rbx + 0x28], 0	       273	split-index.c	FUNCTION_10
0x4000938	        0x488b7d00	                    mov rdi, qword [rbp]	       274	split-index.c	FUNCTION_10	CALL_4
0x400093c	      0xe800000000	                          call 0x4000941	       274	split-index.c	FUNCTION_10	CALL_4
0x4000941	        0x488b4330	            mov rax, qword [rbx + 0x30] 	       275	split-index.c	FUNCTION_10
0x4000945	        0x48894500	                    mov qword [rbp], rax	       275	split-index.c	FUNCTION_10
0x4000949	          0x8b4338	            mov eax, dword [rbx + 0x38] 	       276	split-index.c	FUNCTION_10
0x400094c	          0x89450c	              mov dword [rbp + 0xc], eax	       276	split-index.c	FUNCTION_10
0x400094f	        0x4883c408	                              add rsp, 8	       277	split-index.c	FUNCTION_10
0x4000953	              0x5b	                                 pop rbx	       277	split-index.c	FUNCTION_10
0x4000954	              0x5d	                                 pop rbp	       277	split-index.c	FUNCTION_10
0x4000955	              0xc3	                                     ret	       277	split-index.c	FUNCTION_10
read_link_extension	functions,0:DO,0:IF,5:FOR,0:CALL,10:WHILE,0:ELSE,0:SWITCH,0	64
0x40001a4	            0x4154	                                push r12	        16	split-index.c	FUNCTION_2
0x40001a6	              0x55	                                push rbp	        16	split-index.c	FUNCTION_2
0x40001a7	              0x53	                                push rbx	        16	split-index.c	FUNCTION_2
0x40001a8	        0x4883fa13	                           cmp rdx, 0x13	        21	split-index.c	FUNCTION_2	IF_1
0x40001ac	            0x7719	                            ja 0x40001c7	        21	split-index.c	FUNCTION_2	IF_1
0x40001ae	      0xbf00000000	                              mov edi, 0	        22	split-index.c	FUNCTION_2	CALL_1
0x40001b3	      0xb800000000	                              mov eax, 0	        22	split-index.c	FUNCTION_2	CALL_1
0x40001b8	      0xe800000000	                          call 0x40001bd	        22	split-index.c	FUNCTION_2	CALL_1
0x40001bd	      0xb8ffffffff	                     mov eax, 0xffffffff	        22	split-index.c	FUNCTION_2	CALL_1
0x40001c2	      0xe9c1000000	                           jmp 0x4000288	        22	split-index.c	FUNCTION_2	CALL_1
0x40001c7	          0x4889f3	                            mov rbx, rsi	        22	split-index.c	FUNCTION_2	CALL_1
0x40001ca	          0x4889d5	                            mov rbp, rdx	        22	split-index.c	FUNCTION_2	CALL_1
0x40001cd	      0xe800000000	                          call 0x40001d2	        23	split-index.c	FUNCTION_2	CALL_2
0x40001d2	          0x4989c4	                            mov r12, rax	        23	split-index.c	FUNCTION_2	CALL_2
0x40001d5	          0x488b03	                    mov rax, qword [rbx]	        53	string3.h	FUNCTION_43	CALL_3
0x40001d8	        0x49890424	                    mov qword [r12], rax	        53	string3.h	FUNCTION_43	CALL_3
0x40001dc	        0x488b4308	                mov rax, qword [rbx + 8]	        53	string3.h	FUNCTION_43	CALL_3
0x40001e0	      0x4989442408	                mov qword [r12 + 8], rax	        53	string3.h	FUNCTION_43	CALL_3
0x40001e5	          0x8b4310	            mov eax, dword [rbx + 0x10] 	        53	string3.h	FUNCTION_43	CALL_3
0x40001e8	      0x4189442410	             mov dword [r12 + 0x10], eax	        53	string3.h	FUNCTION_43	CALL_3
0x40001ed	      0xb800000000	                              mov eax, 0	        28	split-index.c	FUNCTION_2	IF_2
0x40001f2	        0x4883ed14	                           sub rbp, 0x14	        27	split-index.c	FUNCTION_2	IF_2
0x40001f6	     0xf848c000000	                            je 0x4000288	        27	split-index.c	FUNCTION_2	IF_2
0x40001fc	        0x4883c314	                           add rbx, 0x14	        25	split-index.c	FUNCTION_2
0x4000200	      0xe800000000	                          call 0x4000205	        29	split-index.c	FUNCTION_2	CALL_4
0x4000205	      0x4989442420	             mov qword [r12 + 0x20], rax	        29	split-index.c	FUNCTION_2	CALL_4
0x400020a	          0x4889ea	                            mov rdx, rbp	        30	split-index.c	FUNCTION_2	CALL_5
0x400020d	          0x4889de	                            mov rsi, rbx	        30	split-index.c	FUNCTION_2	CALL_5
0x4000210	          0x4889c7	                            mov rdi, rax	        30	split-index.c	FUNCTION_2	CALL_5
0x4000213	      0xe800000000	                          call 0x4000218	        30	split-index.c	FUNCTION_2	CALL_5
0x4000218	            0x85c0	                           test eax, eax	        31	split-index.c	FUNCTION_2	IF_3
0x400021a	            0x7916	                           jns 0x4000232	        31	split-index.c	FUNCTION_2	IF_3
0x400021c	      0xbf00000000	                              mov edi, 0	        32	split-index.c	FUNCTION_2	CALL_6
0x4000221	      0xb800000000	                              mov eax, 0	        32	split-index.c	FUNCTION_2	CALL_6
0x4000226	      0xe800000000	                          call 0x400022b	        32	split-index.c	FUNCTION_2	CALL_6
0x400022b	      0xb8ffffffff	                     mov eax, 0xffffffff	        32	split-index.c	FUNCTION_2	CALL_6
0x4000230	            0xeb56	                           jmp 0x4000288	        32	split-index.c	FUNCTION_2	CALL_6
0x4000232	            0x4898	                                    cdqe	        33	split-index.c	FUNCTION_2
0x4000234	          0x4801c3	                            add rbx, rax	        33	split-index.c	FUNCTION_2
0x4000237	          0x4829c5	                            sub rbp, rax	        34	split-index.c	FUNCTION_2
0x400023a	      0xe800000000	                          call 0x400023f	        35	split-index.c	FUNCTION_2	CALL_7
0x400023f	      0x4989442428	             mov qword [r12 + 0x28], rax	        35	split-index.c	FUNCTION_2	CALL_7
0x4000244	          0x4889ea	                            mov rdx, rbp	        36	split-index.c	FUNCTION_2	CALL_8
0x4000247	          0x4889de	                            mov rsi, rbx	        36	split-index.c	FUNCTION_2	CALL_8
0x400024a	          0x4889c7	                            mov rdi, rax	        36	split-index.c	FUNCTION_2	CALL_8
0x400024d	      0xe800000000	                          call 0x4000252	        36	split-index.c	FUNCTION_2	CALL_8
0x4000252	            0x85c0	                           test eax, eax	        37	split-index.c	FUNCTION_2	IF_4
0x4000254	            0x7916	                           jns 0x400026c	        37	split-index.c	FUNCTION_2	IF_4
0x4000256	      0xbf00000000	                              mov edi, 0	        38	split-index.c	FUNCTION_2	CALL_9
0x400025b	      0xb800000000	                              mov eax, 0	        38	split-index.c	FUNCTION_2	CALL_9
0x4000260	      0xe800000000	                          call 0x4000265	        38	split-index.c	FUNCTION_2	CALL_9
0x4000265	      0xb8ffffffff	                     mov eax, 0xffffffff	        38	split-index.c	FUNCTION_2	CALL_9
0x400026a	            0xeb1c	                           jmp 0x4000288	        38	split-index.c	FUNCTION_2	CALL_9
0x400026c	          0x4863d0	                         movsxd rdx, eax	        39	split-index.c	FUNCTION_2	IF_5
0x400026f	      0xb800000000	                              mov eax, 0	        41	split-index.c	FUNCTION_2
0x4000274	          0x4839d5	                            cmp rbp, rdx	        39	split-index.c	FUNCTION_2	IF_5
0x4000277	            0x740f	                            je 0x4000288	        39	split-index.c	FUNCTION_2	IF_5
0x4000279	      0xbf00000000	                              mov edi, 0	        40	split-index.c	FUNCTION_2	CALL_10
0x400027e	      0xe800000000	                          call 0x4000283	        40	split-index.c	FUNCTION_2	CALL_10
0x4000283	      0xb8ffffffff	                     mov eax, 0xffffffff	        40	split-index.c	FUNCTION_2	CALL_10
0x4000288	              0x5b	                                 pop rbx	        42	split-index.c	FUNCTION_2
0x4000289	              0x5d	                                 pop rbp	        42	split-index.c	FUNCTION_2
0x400028a	            0x415c	                                 pop r12	        42	split-index.c	FUNCTION_2
0x400028c	              0xc3	                                     ret	        42	split-index.c	FUNCTION_2
replace_entry	functions,0:DO,0:IF,4:FOR,0:CALL,7:WHILE,0:ELSE,0:SWITCH,0	69
0x400007a	              0x53	                                push rbx	       103	split-index.c	FUNCTION_7
0x400007b	        0x488b5e28	            mov rbx, qword [rsi + 0x28] 	       105	split-index.c	FUNCTION_7
0x400007f	          0x8b560c	              mov edx, dword [rsi + 0xc]	       108	split-index.c	FUNCTION_7	IF_1
0x4000082	            0x89d0	                            mov eax, edx	       108	split-index.c	FUNCTION_7	IF_1
0x4000084	          0x4839f8	                            cmp rax, rdi	       108	split-index.c	FUNCTION_7	IF_1
0x4000087	            0x7711	                            ja 0x400009a	       108	split-index.c	FUNCTION_7	IF_1
0x4000089	            0x89fe	                            mov esi, edi	       109	split-index.c	FUNCTION_7	IF_1	CALL_1
0x400008b	      0xbf00000000	                              mov edi, 0	       109	split-index.c	FUNCTION_7	IF_1	CALL_1
0x4000090	      0xb800000000	                              mov eax, 0	       109	split-index.c	FUNCTION_7	IF_1	CALL_1
0x4000095	      0xe800000000	                          call 0x400009a	       109	split-index.c	FUNCTION_7	IF_1	CALL_1
0x400009a	          0x8b4340	            mov eax, dword [rbx + 0x40] 	       111	split-index.c	FUNCTION_7	IF_2
0x400009d	          0x8b5338	            mov edx, dword [rbx + 0x38] 	       111	split-index.c	FUNCTION_7	IF_2
0x40000a0	            0x39d0	                            cmp eax, edx	       111	split-index.c	FUNCTION_7	IF_2
0x40000a2	            0x7211	                            jb 0x40000b5	       111	split-index.c	FUNCTION_7	IF_2
0x40000a4	            0x89c6	                            mov esi, eax	       112	split-index.c	FUNCTION_7	IF_2	CALL_2
0x40000a6	      0xbf00000000	                              mov edi, 0	       112	split-index.c	FUNCTION_7	IF_2	CALL_2
0x40000ab	      0xb800000000	                              mov eax, 0	       112	split-index.c	FUNCTION_7	IF_2	CALL_2
0x40000b0	      0xe800000000	                          call 0x40000b5	       112	split-index.c	FUNCTION_7	IF_2	CALL_2
0x40000b5	          0x488b16	                    mov rdx, qword [rsi]	       114	split-index.c	FUNCTION_7
0x40000b8	        0x4c8b04fa	             mov r8, qword [rdx + rdi*8]	       114	split-index.c	FUNCTION_7
0x40000bc	      0x41f6403a02	                test byte [r8 + 0x3a], 2	       115	split-index.c	FUNCTION_7	IF_3
0x40000c1	            0x7411	                            je 0x40000d4	       115	split-index.c	FUNCTION_7	IF_3
0x40000c3	            0x89fe	                            mov esi, edi	       116	split-index.c	FUNCTION_7	IF_3	CALL_3
0x40000c5	      0xbf00000000	                              mov edi, 0	       116	split-index.c	FUNCTION_7	IF_3	CALL_3
0x40000ca	      0xb800000000	                              mov eax, 0	       116	split-index.c	FUNCTION_7	IF_3	CALL_3
0x40000cf	      0xe800000000	                          call 0x40000d4	       116	split-index.c	FUNCTION_7	IF_3	CALL_3
0x40000d4	            0x89c0	                            mov eax, eax	       118	split-index.c	FUNCTION_7
0x40000d6	        0x488b5330	            mov rdx, qword [rbx + 0x30] 	       118	split-index.c	FUNCTION_7
0x40000da	        0x488b04c2	            mov rax, qword [rdx + rax*8]	       118	split-index.c	FUNCTION_7
0x40000de	        0x83783c00	               cmp dword [rax + 0x3c], 0	       119	split-index.c	FUNCTION_7	IF_4	CALL_4
0x40000e2	            0x7411	                            je 0x40000f5	       119	split-index.c	FUNCTION_7	IF_4	CALL_4
0x40000e4	            0x89fe	                            mov esi, edi	       120	split-index.c	FUNCTION_7	IF_4	CALL_5
0x40000e6	      0xbf00000000	                              mov edi, 0	       120	split-index.c	FUNCTION_7	IF_4	CALL_5
0x40000eb	      0xb800000000	                              mov eax, 0	       120	split-index.c	FUNCTION_7	IF_4	CALL_5
0x40000f0	      0xe800000000	                          call 0x40000f5	       120	split-index.c	FUNCTION_7	IF_4	CALL_5
0x40000f5	          0x83c701	                              add edi, 1	       122	split-index.c	FUNCTION_7
0x40000f8	          0x897840	             mov dword [rax + 0x40], edi	       122	split-index.c	FUNCTION_7
0x40000fb	    0x814838000000	     or dword [rax + 0x38], section_end.	       123	split-index.c	FUNCTION_7
0x4000102	        0x418b503c	              mov edx, dword [r8 + 0x3c]	       124	split-index.c	FUNCTION_7
0x4000106	          0x89503c	             mov dword [rax + 0x3c], edx	       124	split-index.c	FUNCTION_7
0x4000109	        0x418b7038	              mov esi, dword [r8 + 0x38]	       229	cache.h	FUNCTION_55
0x400010d	    0x81e600001000	                       and esi, 0x100000	       229	cache.h	FUNCTION_55
0x4000113	        0x488b7810	            mov rdi, qword [rax + 0x10] 	        53	string3.h	FUNCTION_43	CALL_3
0x4000117	        0x49897810	              mov qword [r8 + 0x10], rdi	        53	string3.h	FUNCTION_43	CALL_3
0x400011b	        0x488b7818	            mov rdi, qword [rax + 0x18] 	        53	string3.h	FUNCTION_43	CALL_3
0x400011f	        0x49897818	              mov qword [r8 + 0x18], rdi	        53	string3.h	FUNCTION_43	CALL_3
0x4000123	        0x488b7820	            mov rdi, qword [rax + 0x20] 	        53	string3.h	FUNCTION_43	CALL_3
0x4000127	        0x49897820	              mov qword [r8 + 0x20], rdi	        53	string3.h	FUNCTION_43	CALL_3
0x400012b	        0x488b7828	            mov rdi, qword [rax + 0x28] 	        53	string3.h	FUNCTION_43	CALL_3
0x400012f	        0x49897828	              mov qword [r8 + 0x28], rdi	        53	string3.h	FUNCTION_43	CALL_3
0x4000133	        0x488b7830	            mov rdi, qword [rax + 0x30] 	        53	string3.h	FUNCTION_43	CALL_3
0x4000137	        0x49897830	              mov qword [r8 + 0x30], rdi	        53	string3.h	FUNCTION_43	CALL_3
0x400013b	        0x488b7838	            mov rdi, qword [rax + 0x38] 	        53	string3.h	FUNCTION_43	CALL_3
0x400013f	        0x49897838	              mov qword [r8 + 0x38], rdi	        53	string3.h	FUNCTION_43	CALL_3
0x4000143	        0x488b7840	            mov rdi, qword [rax + 0x40] 	        53	string3.h	FUNCTION_43	CALL_3
0x4000147	        0x49897840	              mov qword [r8 + 0x40], rdi	        53	string3.h	FUNCTION_43	CALL_3
0x400014b	        0x488b7848	            mov rdi, qword [rax + 0x48] 	        53	string3.h	FUNCTION_43	CALL_3
0x400014f	        0x49897848	              mov qword [r8 + 0x48], rdi	        53	string3.h	FUNCTION_43	CALL_3
0x4000153	        0x488b4850	            mov rcx, qword [rax + 0x50] 	        53	string3.h	FUNCTION_43	CALL_3
0x4000157	        0x49894850	              mov qword [r8 + 0x50], rcx	        53	string3.h	FUNCTION_43	CALL_3
0x400015b	        0x418b5038	              mov edx, dword [r8 + 0x38]	       237	cache.h	FUNCTION_55
0x400015f	    0x81e2ffffefff	                     and edx, 0xffefffff	       237	cache.h	FUNCTION_55
0x4000165	             0x9f2	                             or edx, esi	       237	cache.h	FUNCTION_55
0x4000167	        0x41895038	              mov dword [r8 + 0x38], edx	       237	cache.h	FUNCTION_55
0x400016b	          0x4889c7	                            mov rdi, rax	       126	split-index.c	FUNCTION_7	CALL_7
0x400016e	      0xe800000000	                          call 0x4000173	       126	split-index.c	FUNCTION_7	CALL_7
0x4000173	        0x83434001	               add dword [rbx + 0x40], 1	       127	split-index.c	FUNCTION_7
0x4000177	              0x5b	                                 pop rbx	       128	split-index.c	FUNCTION_7
0x4000178	              0xc3	                                     ret	       128	split-index.c	FUNCTION_7
write_link_extension	functions,0:DO,0:IF,1:FOR,0:CALL,3:WHILE,0:ELSE,0:SWITCH,0	23
0x400028d	              0x55	                                push rbp	        46	split-index.c	FUNCTION_3
0x400028e	              0x53	                                push rbx	        46	split-index.c	FUNCTION_3
0x400028f	        0x4883ec08	                              sub rsp, 8	        46	split-index.c	FUNCTION_3
0x4000293	          0x4889fd	                            mov rbp, rdi	        46	split-index.c	FUNCTION_3
0x4000296	        0x488b5e28	            mov rbx, qword [rsi + 0x28] 	        47	split-index.c	FUNCTION_3
0x400029a	      0xba14000000	                           mov edx, 0x14	        48	split-index.c	FUNCTION_3	CALL_1
0x400029f	          0x4889de	                            mov rsi, rbx	        48	split-index.c	FUNCTION_3	CALL_1
0x40002a2	      0xe800000000	                          call 0x40002a7	        48	split-index.c	FUNCTION_3	CALL_1
0x40002a7	        0x488b7b20	            mov rdi, qword [rbx + 0x20] 	        49	split-index.c	FUNCTION_3	IF_1
0x40002ab	          0x4885ff	                           test rdi, rdi	        49	split-index.c	FUNCTION_3	IF_1
0x40002ae	            0x7507	                           jne 0x40002b7	        49	split-index.c	FUNCTION_3	IF_1
0x40002b0	      0x48837b2800	               cmp qword [rbx + 0x28], 0	        49	split-index.c	FUNCTION_3	IF_1
0x40002b5	            0x7414	                            je 0x40002cb	        49	split-index.c	FUNCTION_3	IF_1
0x40002b7	          0x4889ee	                            mov rsi, rbp	        51	split-index.c	FUNCTION_3	CALL_2
0x40002ba	      0xe800000000	                          call 0x40002bf	        51	split-index.c	FUNCTION_3	CALL_2
0x40002bf	        0x488b7b28	            mov rdi, qword [rbx + 0x28] 	        52	split-index.c	FUNCTION_3	CALL_3
0x40002c3	          0x4889ee	                            mov rsi, rbp	        52	split-index.c	FUNCTION_3	CALL_3
0x40002c6	      0xe800000000	                          call 0x40002cb	        52	split-index.c	FUNCTION_3	CALL_3
0x40002cb	      0xb800000000	                              mov eax, 0	        54	split-index.c	FUNCTION_3
0x40002d0	        0x4883c408	                              add rsp, 8	        54	split-index.c	FUNCTION_3
0x40002d4	              0x5b	                                 pop rbx	        54	split-index.c	FUNCTION_3
0x40002d5	              0x5d	                                 pop rbp	        54	split-index.c	FUNCTION_3
0x40002d6	              0xc3	                                     ret	        54	split-index.c	FUNCTION_3
mark_entry_for_delete	functions,0:DO,0:IF,1:FOR,0:CALL,1:WHILE,0:ELSE,0:SWITCH,0	15
0x4000040	          0x8b560c	              mov edx, dword [rsi + 0xc]	        95	split-index.c	FUNCTION_6	IF_1
0x4000043	            0x89d0	                            mov eax, edx	        95	split-index.c	FUNCTION_6	IF_1
0x4000045	          0x4839f8	                            cmp rax, rdi	        95	split-index.c	FUNCTION_6	IF_1
0x4000048	            0x7716	                            ja 0x4000060	        95	split-index.c	FUNCTION_6	IF_1
0x400004a	        0x4883ec08	                              sub rsp, 8	        93	split-index.c	FUNCTION_6
0x400004e	          0x4889fe	                            mov rsi, rdi	        93	split-index.c	FUNCTION_6
0x4000051	      0xbf00000000	                              mov edi, 0	        96	split-index.c	FUNCTION_6	IF_1	CALL_1
0x4000056	      0xb800000000	                              mov eax, 0	        96	split-index.c	FUNCTION_6	IF_1	CALL_1
0x400005b	      0xe800000000	                          call 0x4000060	        96	split-index.c	FUNCTION_6	IF_1	CALL_1
0x4000060	          0x488b06	                    mov rax, qword [rsi]	        98	split-index.c	FUNCTION_6
0x4000063	        0x488b04f8	            mov rax, qword [rax + rdi*8]	        98	split-index.c	FUNCTION_6
0x4000067	    0x814838000002	          or dword [rax + 0x38], 0x20000	        98	split-index.c	FUNCTION_6
0x400006e	        0x488b4628	            mov rax, qword [rsi + 0x28] 	        99	split-index.c	FUNCTION_6
0x4000072	    0xc7403c010000	               mov dword [rax + 0x3c], 1	        99	split-index.c	FUNCTION_6
0x4000079	              0xc3	                                     ret	        99	split-index.c	FUNCTION_6
replace_index_entry_in_base	functions,0:DO,0:IF,2:FOR,0:CALL,1:WHILE,0:ELSE,0:SWITCH,0	35
0x40009da	          0x8b4640	            mov eax, dword [rsi + 0x40] 	       311	split-index.c	FUNCTION_13	IF_1
0x40009dd	            0x85c0	                           test eax, eax	       311	split-index.c	FUNCTION_13	IF_1
0x40009df	            0x745d	                            je 0x4000a3e	       311	split-index.c	FUNCTION_13	IF_1
0x40009e1	        0x488b4f28	            mov rcx, qword [rdi + 0x28] 	       312	split-index.c	FUNCTION_13	IF_1
0x40009e5	          0x4885c9	                           test rcx, rcx	       311	split-index.c	FUNCTION_13	IF_1
0x40009e8	            0x7454	                            je 0x4000a3e	       311	split-index.c	FUNCTION_13	IF_1
0x40009ea	        0x488b4918	            mov rcx, qword [rcx + 0x18] 	       313	split-index.c	FUNCTION_13	IF_1
0x40009ee	          0x4885c9	                           test rcx, rcx	       312	split-index.c	FUNCTION_13	IF_1
0x40009f1	            0x744b	                            je 0x4000a3e	       312	split-index.c	FUNCTION_13	IF_1
0x40009f3	          0x3b410c	              cmp eax, dword [rcx + 0xc]	       313	split-index.c	FUNCTION_13	IF_1
0x40009f6	            0x7746	                            ja 0x4000a3e	       313	split-index.c	FUNCTION_13	IF_1
0x40009f8	              0x55	                                push rbp	       310	split-index.c	FUNCTION_13
0x40009f9	              0x53	                                push rbx	       310	split-index.c	FUNCTION_13
0x40009fa	        0x4883ec08	                              sub rsp, 8	       310	split-index.c	FUNCTION_13
0x40009fe	          0x4889d5	                            mov rbp, rdx	       310	split-index.c	FUNCTION_13
0x4000a01	          0x4889fb	                            mov rbx, rdi	       310	split-index.c	FUNCTION_13
0x4000a04	          0x894240	             mov dword [rdx + 0x40], eax	       315	split-index.c	FUNCTION_13	IF_1
0x4000a07	        0x488b5728	            mov rdx, qword [rdi + 0x28] 	       316	split-index.c	FUNCTION_13	IF_1	IF_2
0x4000a0b	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	       316	split-index.c	FUNCTION_13	IF_1	IF_2
0x4000a0f	          0x8d50ff	                      lea edx, [rax - 1]	       316	split-index.c	FUNCTION_13	IF_1	IF_2
0x4000a12	          0x488b01	                    mov rax, qword [rcx]	       316	split-index.c	FUNCTION_13	IF_1	IF_2
0x4000a15	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	       316	split-index.c	FUNCTION_13	IF_1	IF_2
0x4000a19	          0x4839fe	                            cmp rsi, rdi	       316	split-index.c	FUNCTION_13	IF_1	IF_2
0x4000a1c	            0x7405	                            je 0x4000a23	       316	split-index.c	FUNCTION_13	IF_1	IF_2
0x4000a1e	      0xe800000000	                          call 0x4000a23	       317	split-index.c	FUNCTION_13	IF_1	CALL_1
0x4000a23	        0x488b4328	            mov rax, qword [rbx + 0x28] 	       318	split-index.c	FUNCTION_13	IF_1
0x4000a27	        0x488b4018	            mov rax, qword [rax + 0x18] 	       318	split-index.c	FUNCTION_13	IF_1
0x4000a2b	          0x8b5540	            mov edx, dword [rbp + 0x40] 	       318	split-index.c	FUNCTION_13	IF_1
0x4000a2e	          0x8d52ff	                      lea edx, [rdx - 1]	       318	split-index.c	FUNCTION_13	IF_1
0x4000a31	          0x488b00	                    mov rax, qword [rax]	       318	split-index.c	FUNCTION_13	IF_1
0x4000a34	        0x48892cd0	            mov qword [rax + rdx*8], rbp	       318	split-index.c	FUNCTION_13	IF_1
0x4000a38	        0x4883c408	                              add rsp, 8	       320	split-index.c	FUNCTION_13
0x4000a3c	              0x5b	                                 pop rbx	       320	split-index.c	FUNCTION_13
0x4000a3d	              0x5d	                                 pop rbp	       320	split-index.c	FUNCTION_13
0x4000a3e	            0xf3c3	                                     ret	       320	split-index.c	FUNCTION_13
