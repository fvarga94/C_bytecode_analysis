ref_entry_cmp	FOR,0:SWITCH,0:functions,0:CALL,1:IF,0:ELSE,0:WHILE,0:DO,0	20
0x4000693	              0x55	                                push rbp	       101	ref-cache.c	FUNCTION_9
0x4000694	          0x4889e5	                            mov rbp, rsp	       101	ref-cache.c	FUNCTION_9
0x4000697	        0x4883ec20	                           sub rsp, 0x20	       101	ref-cache.c	FUNCTION_9
0x400069b	        0x48897de8	             mov qword [rbp - 0x18], rdi	       101	ref-cache.c	FUNCTION_9
0x400069f	        0x488975e0	             mov qword [rbp - 0x20], rsi	       101	ref-cache.c	FUNCTION_9
0x40006a3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       102	ref-cache.c	FUNCTION_9
0x40006a7	          0x488b00	                    mov rax, qword [rax]	       102	ref-cache.c	FUNCTION_9
0x40006aa	        0x488945f0	             mov qword [rbp - 0x10], rax	       102	ref-cache.c	FUNCTION_9
0x40006ae	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       103	ref-cache.c	FUNCTION_9
0x40006b2	          0x488b00	                    mov rax, qword [rax]	       103	ref-cache.c	FUNCTION_9
0x40006b5	        0x488945f8	                mov qword [rbp - 8], rax	       103	ref-cache.c	FUNCTION_9
0x40006b9	        0x488b45f8	                mov rax, qword [rbp - 8]	       104	ref-cache.c	FUNCTION_9	CALL_1
0x40006bd	        0x488d5028	                   lea rdx, [rax + 0x28]	       104	ref-cache.c	FUNCTION_9	CALL_1
0x40006c1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       104	ref-cache.c	FUNCTION_9	CALL_1
0x40006c5	        0x4883c028	                           add rax, 0x28	       104	ref-cache.c	FUNCTION_9	CALL_1
0x40006c9	          0x4889d6	                            mov rsi, rdx	       104	ref-cache.c	FUNCTION_9	CALL_1
0x40006cc	          0x4889c7	                            mov rdi, rax	       104	ref-cache.c	FUNCTION_9	CALL_1
0x40006cf	      0xe800000000	                          call 0x40006d4	       104	ref-cache.c	FUNCTION_9	CALL_1
0x40006d4	              0xc9	                                   leave	       105	ref-cache.c	FUNCTION_9
0x40006d5	              0xc3	                                     ret	       105	ref-cache.c	FUNCTION_9
free_ref_cache	FOR,0:SWITCH,0:functions,0:CALL,2:IF,0:ELSE,0:WHILE,0:DO,0	14
0x400054e	              0x55	                                push rbp	        71	ref-cache.c	FUNCTION_6
0x400054f	          0x4889e5	                            mov rbp, rsp	        71	ref-cache.c	FUNCTION_6
0x4000552	        0x4883ec10	                           sub rsp, 0x10	        71	ref-cache.c	FUNCTION_6
0x4000556	        0x48897df8	                mov qword [rbp - 8], rdi	        71	ref-cache.c	FUNCTION_6
0x400055a	        0x488b45f8	                mov rax, qword [rbp - 8]	        72	ref-cache.c	FUNCTION_6	CALL_1
0x400055e	          0x488b00	                    mov rax, qword [rax]	        72	ref-cache.c	FUNCTION_6	CALL_1
0x4000561	          0x4889c7	                            mov rdi, rax	        72	ref-cache.c	FUNCTION_6	CALL_1
0x4000564	      0xe8a9ffffff	                 call sym.free_ref_entry	        72	ref-cache.c	FUNCTION_6	CALL_1
0x4000569	        0x488b45f8	                mov rax, qword [rbp - 8]	        73	ref-cache.c	FUNCTION_6	CALL_2
0x400056d	          0x4889c7	                            mov rdi, rax	        73	ref-cache.c	FUNCTION_6	CALL_2
0x4000570	      0xe800000000	                          call 0x4000575	        73	ref-cache.c	FUNCTION_6	CALL_2
0x4000575	              0x90	                                     nop	        74	ref-cache.c	FUNCTION_6
0x4000576	              0xc9	                                   leave	        74	ref-cache.c	FUNCTION_6
0x4000577	              0xc3	                                     ret	        74	ref-cache.c	FUNCTION_6
ref_entry_cmp_sslice	FOR,0:SWITCH,0:functions,0:CALL,1:IF,1:ELSE,0:WHILE,0:DO,0	32
0x40006d6	              0x55	                                push rbp	       115	ref-cache.c	FUNCTION_10
0x40006d7	          0x4889e5	                            mov rbp, rsp	       115	ref-cache.c	FUNCTION_10
0x40006da	        0x4883ec30	                           sub rsp, 0x30	       115	ref-cache.c	FUNCTION_10
0x40006de	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       115	ref-cache.c	FUNCTION_10
0x40006e2	        0x488975d0	             mov qword [rbp - 0x30], rsi	       115	ref-cache.c	FUNCTION_10
0x40006e6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       116	ref-cache.c	FUNCTION_10
0x40006ea	        0x488945f0	             mov qword [rbp - 0x10], rax	       116	ref-cache.c	FUNCTION_10
0x40006ee	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       117	ref-cache.c	FUNCTION_10
0x40006f2	          0x488b00	                    mov rax, qword [rax]	       117	ref-cache.c	FUNCTION_10
0x40006f5	        0x488945f8	                mov qword [rbp - 8], rax	       117	ref-cache.c	FUNCTION_10
0x40006f9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       118	ref-cache.c	FUNCTION_10	CALL_1
0x40006fd	          0x488b10	                    mov rdx, qword [rax]	       118	ref-cache.c	FUNCTION_10	CALL_1
0x4000700	        0x488b45f8	                mov rax, qword [rbp - 8]	       118	ref-cache.c	FUNCTION_10	CALL_1
0x4000704	        0x488d4828	                   lea rcx, [rax + 0x28]	       118	ref-cache.c	FUNCTION_10	CALL_1
0x4000708	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       118	ref-cache.c	FUNCTION_10	CALL_1
0x400070c	        0x488b4008	                mov rax, qword [rax + 8]	       118	ref-cache.c	FUNCTION_10	CALL_1
0x4000710	          0x4889ce	                            mov rsi, rcx	       118	ref-cache.c	FUNCTION_10	CALL_1
0x4000713	          0x4889c7	                            mov rdi, rax	       118	ref-cache.c	FUNCTION_10	CALL_1
0x4000716	      0xe800000000	                          call 0x400071b	       118	ref-cache.c	FUNCTION_10	CALL_1
0x400071b	          0x8945ec	             mov dword [rbp - 0x14], eax	       118	ref-cache.c	FUNCTION_10	CALL_1
0x400071e	        0x837dec00	               cmp dword [rbp - 0x14], 0	       119	ref-cache.c	FUNCTION_10	IF_1
0x4000722	            0x7405	                            je 0x4000729	       119	ref-cache.c	FUNCTION_10	IF_1
0x4000724	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       120	ref-cache.c	FUNCTION_10	IF_1
0x4000727	            0xeb15	                           jmp 0x400073e	       120	ref-cache.c	FUNCTION_10	IF_1
0x4000729	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       121	ref-cache.c	FUNCTION_10
0x400072d	          0x488b00	                    mov rax, qword [rax]	       121	ref-cache.c	FUNCTION_10
0x4000730	        0x488b55f8	                mov rdx, qword [rbp - 8]	       121	ref-cache.c	FUNCTION_10
0x4000734	       0xfb6440228	     movzx eax, byte [rdx + rax + 0x28] 	       121	ref-cache.c	FUNCTION_10
0x4000739	           0xfb6c0	                           movzx eax, al	       121	ref-cache.c	FUNCTION_10
0x400073c	            0xf7d8	                                 neg eax	       121	ref-cache.c	FUNCTION_10
0x400073e	              0xc9	                                   leave	       122	ref-cache.c	FUNCTION_10
0x400073f	              0xc3	                                     ret	       122	ref-cache.c	FUNCTION_10
hashcmp	FOR,0:SWITCH,0:functions,0:CALL,1:IF,0:ELSE,0:WHILE,0:DO,0	13
0x400015b	              0x55	                                push rbp	       974	cache.h	FUNCTION_59
0x400015c	          0x4889e5	                            mov rbp, rsp	       974	cache.h	FUNCTION_59
0x400015f	        0x4883ec10	                           sub rsp, 0x10	       974	cache.h	FUNCTION_59
0x4000163	        0x48897df8	                mov qword [rbp - 8], rdi	       974	cache.h	FUNCTION_59
0x4000167	        0x488975f0	             mov qword [rbp - 0x10], rsi	       974	cache.h	FUNCTION_59
0x400016b	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       975	cache.h	FUNCTION_59	CALL_1
0x400016f	        0x488b45f8	                mov rax, qword [rbp - 8]	       975	cache.h	FUNCTION_59	CALL_1
0x4000173	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_59	CALL_1
0x4000178	          0x4889ce	                            mov rsi, rcx	       975	cache.h	FUNCTION_59	CALL_1
0x400017b	          0x4889c7	                            mov rdi, rax	       975	cache.h	FUNCTION_59	CALL_1
0x400017e	      0xe800000000	                          call 0x4000183	       975	cache.h	FUNCTION_59	CALL_1
0x4000183	              0xc9	                                   leave	       976	cache.h	FUNCTION_59
0x4000184	              0xc3	                                     ret	       976	cache.h	FUNCTION_59
find_ref_entry	FOR,0:SWITCH,0:functions,0:CALL,3:IF,2:ELSE,0:WHILE,0:DO,0	50
0x400093b	              0x55	                                push rbp	       202	ref-cache.c	FUNCTION_14
0x400093c	          0x4889e5	                            mov rbp, rsp	       202	ref-cache.c	FUNCTION_14
0x400093f	        0x4883ec20	                           sub rsp, 0x20	       202	ref-cache.c	FUNCTION_14
0x4000943	        0x48897de8	             mov qword [rbp - 0x18], rdi	       202	ref-cache.c	FUNCTION_14
0x4000947	        0x488975e0	             mov qword [rbp - 0x20], rsi	       202	ref-cache.c	FUNCTION_14
0x400094b	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       205	ref-cache.c	FUNCTION_14	CALL_1
0x400094f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       205	ref-cache.c	FUNCTION_14	CALL_1
0x4000953	      0xba00000000	                              mov edx, 0	       205	ref-cache.c	FUNCTION_14	CALL_1
0x4000958	          0x4889ce	                            mov rsi, rcx	       205	ref-cache.c	FUNCTION_14	CALL_1
0x400095b	          0x4889c7	                            mov rdi, rax	       205	ref-cache.c	FUNCTION_14	CALL_1
0x400095e	      0xe83effffff	            call sym.find_containing_dir	       205	ref-cache.c	FUNCTION_14	CALL_1
0x4000963	        0x488945e8	             mov qword [rbp - 0x18], rax	       205	ref-cache.c	FUNCTION_14	CALL_1
0x4000967	      0x48837de800	               cmp qword [rbp - 0x18], 0	       206	ref-cache.c	FUNCTION_14	IF_1
0x400096c	            0x7507	                           jne 0x4000975	       206	ref-cache.c	FUNCTION_14	IF_1
0x400096e	      0xb800000000	                              mov eax, 0	       207	ref-cache.c	FUNCTION_14	IF_1
0x4000973	            0xeb6b	                           jmp 0x40009e0	       207	ref-cache.c	FUNCTION_14	IF_1
0x4000975	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       208	ref-cache.c	FUNCTION_14	CALL_3
0x4000979	          0x4889c7	                            mov rdi, rax	       208	ref-cache.c	FUNCTION_14	CALL_3
0x400097c	      0xe800000000	                          call 0x4000981	       208	ref-cache.c	FUNCTION_14	CALL_3
0x4000981	          0x4889c2	                            mov rdx, rax	       208	ref-cache.c	FUNCTION_14	CALL_3
0x4000984	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       208	ref-cache.c	FUNCTION_14	CALL_3
0x4000988	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       208	ref-cache.c	FUNCTION_14	CALL_3
0x400098c	          0x4889ce	                            mov rsi, rcx	       208	ref-cache.c	FUNCTION_14	CALL_3
0x400098f	          0x4889c7	                            mov rdi, rax	       208	ref-cache.c	FUNCTION_14	CALL_3
0x4000992	      0xe800000000	                          call 0x4000997	       208	ref-cache.c	FUNCTION_14	CALL_3
0x4000997	          0x8945f4	              mov dword [rbp - 0xc], eax	       208	ref-cache.c	FUNCTION_14	CALL_3
0x400099a	        0x837df4ff	cmp dword [rbp - 0xc], 0xffffffffffffffff	       209	ref-cache.c	FUNCTION_14	IF_2
0x400099e	            0x7507	                           jne 0x40009a7	       209	ref-cache.c	FUNCTION_14	IF_2
0x40009a0	      0xb800000000	                              mov eax, 0	       210	ref-cache.c	FUNCTION_14	IF_2
0x40009a5	            0xeb39	                           jmp 0x40009e0	       210	ref-cache.c	FUNCTION_14	IF_2
0x40009a7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       211	ref-cache.c	FUNCTION_14
0x40009ab	        0x488b4018	            mov rax, qword [rax + 0x18] 	       211	ref-cache.c	FUNCTION_14
0x40009af	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       211	ref-cache.c	FUNCTION_14
0x40009b2	          0x4863d2	                         movsxd rdx, edx	       211	ref-cache.c	FUNCTION_14
0x40009b5	        0x48c1e203	                              shl rdx, 3	       211	ref-cache.c	FUNCTION_14
0x40009b9	          0x4801d0	                            add rax, rdx	       211	ref-cache.c	FUNCTION_14
0x40009bc	          0x488b00	                    mov rax, qword [rax]	       211	ref-cache.c	FUNCTION_14
0x40009bf	        0x488945f8	                mov qword [rbp - 8], rax	       211	ref-cache.c	FUNCTION_14
0x40009c3	        0x488b45f8	                mov rax, qword [rbp - 8]	       212	ref-cache.c	FUNCTION_14
0x40009c7	           0xfb600	                   movzx eax, byte [rax]	       212	ref-cache.c	FUNCTION_14
0x40009ca	           0xfb6c0	                           movzx eax, al	       212	ref-cache.c	FUNCTION_14
0x40009cd	          0x83e010	                           and eax, 0x10	       212	ref-cache.c	FUNCTION_14
0x40009d0	            0x85c0	                           test eax, eax	       212	ref-cache.c	FUNCTION_14
0x40009d2	            0x7506	                           jne 0x40009da	       212	ref-cache.c	FUNCTION_14
0x40009d4	        0x488b45f8	                mov rax, qword [rbp - 8]	       212	ref-cache.c	FUNCTION_14
0x40009d8	            0xeb05	                           jmp 0x40009df	       212	ref-cache.c	FUNCTION_14
0x40009da	      0xb800000000	                              mov eax, 0	       212	ref-cache.c	FUNCTION_14
0x40009df	              0x90	                                     nop	       212	ref-cache.c	FUNCTION_14
0x40009e0	              0xc9	                                   leave	       213	ref-cache.c	FUNCTION_14
0x40009e1	              0xc3	                                     ret	       213	ref-cache.c	FUNCTION_14
clear_ref_dir	FOR,1:SWITCH,0:functions,0:CALL,1:IF,0:ELSE,0:WHILE,0:DO,0	39
0x4000578	              0x55	                                push rbp	        80	ref-cache.c	FUNCTION_7
0x4000579	          0x4889e5	                            mov rbp, rsp	        80	ref-cache.c	FUNCTION_7
0x400057c	        0x4883ec20	                           sub rsp, 0x20	        80	ref-cache.c	FUNCTION_7
0x4000580	        0x48897de8	             mov qword [rbp - 0x18], rdi	        80	ref-cache.c	FUNCTION_7
0x4000584	    0xc745fc000000	                  mov dword [rbp - 4], 0	        82	ref-cache.c	FUNCTION_7	FOR_1
0x400058b	            0xeb24	                           jmp 0x40005b1	        82	ref-cache.c	FUNCTION_7	FOR_1
0x400058d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        83	ref-cache.c	FUNCTION_7	CALL_1
0x4000591	        0x488b4018	            mov rax, qword [rax + 0x18] 	        83	ref-cache.c	FUNCTION_7	CALL_1
0x4000595	          0x8b55fc	                mov edx, dword [rbp - 4]	        83	ref-cache.c	FUNCTION_7	CALL_1
0x4000598	          0x4863d2	                         movsxd rdx, edx	        83	ref-cache.c	FUNCTION_7	CALL_1
0x400059b	        0x48c1e203	                              shl rdx, 3	        83	ref-cache.c	FUNCTION_7	CALL_1
0x400059f	          0x4801d0	                            add rax, rdx	        83	ref-cache.c	FUNCTION_7	CALL_1
0x40005a2	          0x488b00	                    mov rax, qword [rax]	        83	ref-cache.c	FUNCTION_7	CALL_1
0x40005a5	          0x4889c7	                            mov rdi, rax	        83	ref-cache.c	FUNCTION_7	CALL_1
0x40005a8	      0xe865ffffff	                 call sym.free_ref_entry	        83	ref-cache.c	FUNCTION_7	CALL_1
0x40005ad	        0x8345fc01	                  add dword [rbp - 4], 1	        82	ref-cache.c	FUNCTION_7	FOR_1
0x40005b1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        82	ref-cache.c	FUNCTION_7	FOR_1
0x40005b5	            0x8b00	                    mov eax, dword [rax]	        82	ref-cache.c	FUNCTION_7	FOR_1
0x40005b7	          0x3b45fc	                cmp eax, dword [rbp - 4]	        82	ref-cache.c	FUNCTION_7	FOR_1
0x40005ba	            0x7fd1	                            jg 0x400058d	        82	ref-cache.c	FUNCTION_7	FOR_1
0x40005bc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        84	ref-cache.c	FUNCTION_7
0x40005c0	        0x488b4018	            mov rax, qword [rax + 0x18] 	        84	ref-cache.c	FUNCTION_7
0x40005c4	          0x4889c7	                            mov rdi, rax	        84	ref-cache.c	FUNCTION_7
0x40005c7	      0xe800000000	                          call 0x40005cc	        84	ref-cache.c	FUNCTION_7
0x40005cc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        84	ref-cache.c	FUNCTION_7
0x40005d0	    0x48c740180000	               mov qword [rax + 0x18], 0	        84	ref-cache.c	FUNCTION_7
0x40005d8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        85	ref-cache.c	FUNCTION_7
0x40005dc	    0xc74004000000	                  mov dword [rax + 4], 0	        85	ref-cache.c	FUNCTION_7
0x40005e3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        85	ref-cache.c	FUNCTION_7
0x40005e7	          0x8b5004	                mov edx, dword [rax + 4]	        85	ref-cache.c	FUNCTION_7
0x40005ea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        85	ref-cache.c	FUNCTION_7
0x40005ee	            0x8910	                    mov dword [rax], edx	        85	ref-cache.c	FUNCTION_7
0x40005f0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        85	ref-cache.c	FUNCTION_7
0x40005f4	            0x8b10	                    mov edx, dword [rax]	        85	ref-cache.c	FUNCTION_7
0x40005f6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        85	ref-cache.c	FUNCTION_7
0x40005fa	          0x895008	                mov dword [rax + 8], edx	        85	ref-cache.c	FUNCTION_7
0x40005fd	              0x90	                                     nop	        86	ref-cache.c	FUNCTION_7
0x40005fe	              0xc9	                                   leave	        86	ref-cache.c	FUNCTION_7
0x40005ff	              0xc3	                                     ret	        86	ref-cache.c	FUNCTION_7
create_ref_cache	FOR,0:SWITCH,0:functions,0:CALL,2:IF,0:ELSE,0:WHILE,0:DO,0	27
0x40004ac	              0x55	                                push rbp	        47	ref-cache.c	FUNCTION_4
0x40004ad	          0x4889e5	                            mov rbp, rsp	        47	ref-cache.c	FUNCTION_4
0x40004b0	        0x4883ec20	                           sub rsp, 0x20	        47	ref-cache.c	FUNCTION_4
0x40004b4	        0x48897de8	             mov qword [rbp - 0x18], rdi	        47	ref-cache.c	FUNCTION_4
0x40004b8	        0x488975e0	             mov qword [rbp - 0x20], rsi	        47	ref-cache.c	FUNCTION_4
0x40004bc	      0xbe18000000	                           mov esi, 0x18	        48	ref-cache.c	FUNCTION_4	CALL_1
0x40004c1	      0xbf01000000	                              mov edi, 1	        48	ref-cache.c	FUNCTION_4	CALL_1
0x40004c6	      0xe800000000	                          call 0x40004cb	        48	ref-cache.c	FUNCTION_4	CALL_1
0x40004cb	        0x488945f8	                mov qword [rbp - 8], rax	        48	ref-cache.c	FUNCTION_4	CALL_1
0x40004cf	        0x488b45f8	                mov rax, qword [rbp - 8]	        50	ref-cache.c	FUNCTION_4
0x40004d3	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        50	ref-cache.c	FUNCTION_4
0x40004d7	        0x48895008	                mov qword [rax + 8], rdx	        50	ref-cache.c	FUNCTION_4
0x40004db	        0x488b45f8	                mov rax, qword [rbp - 8]	        51	ref-cache.c	FUNCTION_4
0x40004df	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	        51	ref-cache.c	FUNCTION_4
0x40004e3	        0x48895010	             mov qword [rax + 0x10], rdx	        51	ref-cache.c	FUNCTION_4
0x40004e7	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	ref-cache.c	FUNCTION_4	CALL_2
0x40004eb	      0xb901000000	                              mov ecx, 1	        52	ref-cache.c	FUNCTION_4	CALL_2
0x40004f0	      0xba00000000	                              mov edx, 0	        52	ref-cache.c	FUNCTION_4	CALL_2
0x40004f5	      0xbe00000000	                              mov esi, 0	        52	ref-cache.c	FUNCTION_4	CALL_2
0x40004fa	          0x4889c7	                            mov rdi, rax	        52	ref-cache.c	FUNCTION_4	CALL_2
0x40004fd	      0xe800000000	                          call 0x4000502	        52	ref-cache.c	FUNCTION_4	CALL_2
0x4000502	          0x4889c2	                            mov rdx, rax	        52	ref-cache.c	FUNCTION_4	CALL_2
0x4000505	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	ref-cache.c	FUNCTION_4	CALL_2
0x4000509	          0x488910	                    mov qword [rax], rdx	        52	ref-cache.c	FUNCTION_4	CALL_2
0x400050c	        0x488b45f8	                mov rax, qword [rbp - 8]	        53	ref-cache.c	FUNCTION_4
0x4000510	              0xc9	                                   leave	        54	ref-cache.c	FUNCTION_4
0x4000511	              0xc3	                                     ret	        54	ref-cache.c	FUNCTION_4
st_mult	FOR,0:SWITCH,0:functions,0:CALL,1:IF,1:ELSE,0:WHILE,0:DO,0	22
0x4000084	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_39
0x4000085	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_39
0x4000088	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_39
0x400008c	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_39
0x4000090	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_39
0x4000094	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_39	IF_1
0x4000099	            0x7430	                            je 0x40000cb	       795	git-compat-util.h	FUNCTION_39	IF_1
0x400009b	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_39	IF_1
0x40000a2	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_39	IF_1
0x40000a7	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_39	IF_1
0x40000ab	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_39	IF_1
0x40000af	            0x731a	                           jae 0x40000cb	       795	git-compat-util.h	FUNCTION_39	IF_1
0x40000b1	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x40000b5	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x40000b9	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x40000bc	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x40000c1	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x40000c6	      0xe800000000	                          call 0x40000cb	       796	git-compat-util.h	FUNCTION_39	IF_1	CALL_1
0x40000cb	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_39
0x40000cf	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_39
0x40000d4	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_39
0x40000d5	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_39
oidcpy	FOR,0:SWITCH,0:functions,0:CALL,1:IF,0:ELSE,0:WHILE,0:DO,0	13
0x40001d5	              0x55	                                push rbp	       999	cache.h	FUNCTION_64
0x40001d6	          0x4889e5	                            mov rbp, rsp	       999	cache.h	FUNCTION_64
0x40001d9	        0x4883ec10	                           sub rsp, 0x10	       999	cache.h	FUNCTION_64
0x40001dd	        0x48897df8	                mov qword [rbp - 8], rdi	       999	cache.h	FUNCTION_64
0x40001e1	        0x488975f0	             mov qword [rbp - 0x10], rsi	       999	cache.h	FUNCTION_64
0x40001e5	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1000	cache.h	FUNCTION_64	CALL_1
0x40001e9	        0x488b45f8	                mov rax, qword [rbp - 8]	      1000	cache.h	FUNCTION_64	CALL_1
0x40001ed	          0x4889d6	                            mov rsi, rdx	      1000	cache.h	FUNCTION_64	CALL_1
0x40001f0	          0x4889c7	                            mov rdi, rax	      1000	cache.h	FUNCTION_64	CALL_1
0x40001f3	      0xe8b2ffffff	                        call sym.hashcpy	      1000	cache.h	FUNCTION_64	CALL_1
0x40001f8	              0x90	                                     nop	      1001	cache.h	FUNCTION_64
0x40001f9	              0xc9	                                   leave	      1001	cache.h	FUNCTION_64
0x40001fa	              0xc3	                                     ret	      1001	cache.h	FUNCTION_64
cache_ref_iterator_peel	FOR,0:SWITCH,0:functions,0:CALL,1:IF,0:ELSE,0:WHILE,0:DO,0	13
0x4001140	              0x55	                                push rbp	       493	ref-cache.c	FUNCTION_22
0x4001141	          0x4889e5	                            mov rbp, rsp	       493	ref-cache.c	FUNCTION_22
0x4001144	        0x4883ec10	                           sub rsp, 0x10	       493	ref-cache.c	FUNCTION_22
0x4001148	        0x48897df8	                mov qword [rbp - 8], rdi	       493	ref-cache.c	FUNCTION_22
0x400114c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       493	ref-cache.c	FUNCTION_22
0x4001150	        0x488b45f8	                mov rax, qword [rbp - 8]	       494	ref-cache.c	FUNCTION_22	CALL_1
0x4001154	        0x488b4018	            mov rax, qword [rax + 0x18] 	       494	ref-cache.c	FUNCTION_22	CALL_1
0x4001158	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       494	ref-cache.c	FUNCTION_22	CALL_1
0x400115c	          0x4889d6	                            mov rsi, rdx	       494	ref-cache.c	FUNCTION_22	CALL_1
0x400115f	          0x4889c7	                            mov rdi, rax	       494	ref-cache.c	FUNCTION_22	CALL_1
0x4001162	      0xe800000000	                          call 0x4001167	       494	ref-cache.c	FUNCTION_22	CALL_1
0x4001167	              0xc9	                                   leave	       495	ref-cache.c	FUNCTION_22
0x4001168	              0xc3	                                     ret	       495	ref-cache.c	FUNCTION_22
prime_ref_dir	FOR,1:SWITCH,1:functions,0:CALL,7:IF,2:ELSE,2:WHILE,0:DO,0	66
0x4000de8	              0x55	                                push rbp	       347	ref-cache.c	ELSE_2	FUNCTION_20
0x4000de9	          0x4889e5	                            mov rbp, rsp	       347	ref-cache.c	ELSE_2	FUNCTION_20
0x4000dec	        0x4883ec20	                           sub rsp, 0x20	       347	ref-cache.c	ELSE_2	FUNCTION_20
0x4000df0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       347	ref-cache.c	ELSE_2	FUNCTION_20
0x4000df4	        0x488975e0	             mov qword [rbp - 0x20], rsi	       347	ref-cache.c	ELSE_2	FUNCTION_20
0x4000df8	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       355	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0x4000dff	      0xe9b7000000	                           jmp 0x4000ebb	       355	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0x4000e04	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       356	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0x4000e08	        0x488b4018	            mov rax, qword [rax + 0x18] 	       356	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0x4000e0c	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       356	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0x4000e0f	          0x4863d2	                         movsxd rdx, edx	       356	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0x4000e12	        0x48c1e203	                              shl rdx, 3	       356	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0x4000e16	          0x4801d0	                            add rax, rdx	       356	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0x4000e19	          0x488b00	                    mov rax, qword [rax]	       356	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0x4000e1c	        0x488945f8	                mov qword [rbp - 8], rax	       356	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0x4000e20	        0x488b45f8	                mov rax, qword [rbp - 8]	       357	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	IF_1
0x4000e24	           0xfb600	                   movzx eax, byte [rax]	       357	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	IF_1
0x4000e27	           0xfb6c0	                           movzx eax, al	       357	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	IF_1
0x4000e2a	          0x83e010	                           and eax, 0x10	       357	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	IF_1
0x4000e2d	            0x85c0	                           test eax, eax	       357	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	IF_1
0x4000e2f	     0xf8482000000	                            je 0x4000eb7	       357	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	IF_1
0x4000e35	      0x48837de000	               cmp qword [rbp - 0x20], 0	       359	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	ELSE_1	IF_2
0x4000e3a	            0x751b	                           jne 0x4000e57	       359	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	ELSE_1	IF_2
0x4000e3c	        0x488b45f8	                mov rax, qword [rbp - 8]	       361	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	ELSE_1	IF_2	CALL_2
0x4000e40	          0x4889c7	                            mov rdi, rax	       361	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	ELSE_1	IF_2	CALL_2
0x4000e43	      0xe800000000	                          call 0x4000e48	       361	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	ELSE_1	IF_2	CALL_2
0x4000e48	      0xbe00000000	                              mov esi, 0	       361	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	ELSE_1	IF_2	CALL_2
0x4000e4d	          0x4889c7	                            mov rdi, rax	       361	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	ELSE_1	IF_2	CALL_2
0x4000e50	      0xe893ffffff	                  call sym.prime_ref_dir	       361	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	ELSE_1	IF_2	CALL_2
0x4000e55	            0xeb60	                           jmp 0x4000eb7	       361	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1	ELSE_1	IF_2	CALL_2
0x4000e57	        0x488b45f8	                mov rax, qword [rbp - 8]	       363	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_3
0x4000e5b	        0x488d5028	                   lea rdx, [rax + 0x28]	       363	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_3
0x4000e5f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       363	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_3
0x4000e63	          0x4889c6	                            mov rsi, rax	       363	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_3
0x4000e66	          0x4889d7	                            mov rdi, rdx	       363	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_3
0x4000e69	      0xe81affffff	                call sym.overlaps_prefix	       363	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_3
0x4000e6e	          0x83f801	                              cmp eax, 1	       363	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_3
0x4000e71	            0x7425	                            je 0x4000e98	       363	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_3
0x4000e73	          0x83f801	                              cmp eax, 1	       363	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_3
0x4000e76	            0x7205	                            jb 0x4000e7d	       363	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_3
0x4000e78	          0x83f802	                              cmp eax, 2	       363	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_3
0x4000e7b	            0xeb3a	                           jmp 0x4000eb7	       377	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1
0x4000e7d	        0x488b45f8	                mov rax, qword [rbp - 8]	       370	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_5
0x4000e81	          0x4889c7	                            mov rdi, rax	       370	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_5
0x4000e84	      0xe800000000	                          call 0x4000e89	       370	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_5
0x4000e89	      0xbe00000000	                              mov esi, 0	       370	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_5
0x4000e8e	          0x4889c7	                            mov rdi, rax	       370	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_5
0x4000e91	      0xe852ffffff	                  call sym.prime_ref_dir	       370	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_5
0x4000e96	            0xeb1f	                           jmp 0x4000eb7	       371	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1
0x4000e98	        0x488b45f8	                mov rax, qword [rbp - 8]	       373	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_7
0x4000e9c	          0x4889c7	                            mov rdi, rax	       373	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_7
0x4000e9f	      0xe800000000	                          call 0x4000ea4	       373	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_7
0x4000ea4	          0x4889c2	                            mov rdx, rax	       373	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_7
0x4000ea7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       373	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_7
0x4000eab	          0x4889c6	                            mov rsi, rax	       373	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_7
0x4000eae	          0x4889d7	                            mov rdi, rdx	       373	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_7
0x4000eb1	      0xe832ffffff	                  call sym.prime_ref_dir	       373	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1	CALL_7
0x4000eb6	              0x90	                                     nop	       374	ref-cache.c	FUNCTION_20	FOR_1	SWITCH_1
0x4000eb7	        0x8345f401	                add dword [rbp - 0xc], 1	       355	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0x4000ebb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       355	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0x4000ebf	            0x8b00	                    mov eax, dword [rax]	       355	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0x4000ec1	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       355	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0x4000ec4	     0xf8f3affffff	                            jg 0x4000e04	       355	ref-cache.c	ELSE_2	FUNCTION_20	FOR_1
0x4000eca	              0x90	                                     nop	       381	ref-cache.c	FUNCTION_20	ELSE_2
0x4000ecb	              0xc9	                                   leave	       381	ref-cache.c	FUNCTION_20	ELSE_2
0x4000ecc	              0xc3	                                     ret	       381	ref-cache.c	FUNCTION_20	ELSE_2
free_ref_entry	FOR,0:SWITCH,0:functions,0:CALL,2:IF,1:ELSE,0:WHILE,0:DO,0	20
0x4000512	              0x55	                                push rbp	        59	ref-cache.c	FUNCTION_5
0x4000513	          0x4889e5	                            mov rbp, rsp	        59	ref-cache.c	FUNCTION_5
0x4000516	        0x4883ec10	                           sub rsp, 0x10	        59	ref-cache.c	FUNCTION_5
0x400051a	        0x48897df8	                mov qword [rbp - 8], rdi	        59	ref-cache.c	FUNCTION_5
0x400051e	        0x488b45f8	                mov rax, qword [rbp - 8]	        60	ref-cache.c	FUNCTION_5	IF_1
0x4000522	           0xfb600	                   movzx eax, byte [rax]	        60	ref-cache.c	FUNCTION_5	IF_1
0x4000525	           0xfb6c0	                           movzx eax, al	        60	ref-cache.c	FUNCTION_5	IF_1
0x4000528	          0x83e010	                           and eax, 0x10	        60	ref-cache.c	FUNCTION_5	IF_1
0x400052b	            0x85c0	                           test eax, eax	        60	ref-cache.c	FUNCTION_5	IF_1
0x400052d	            0x7410	                            je 0x400053f	        60	ref-cache.c	FUNCTION_5	IF_1
0x400052f	        0x488b45f8	                mov rax, qword [rbp - 8]	        65	ref-cache.c	FUNCTION_5	IF_1	CALL_1
0x4000533	        0x4883c008	                              add rax, 8	        65	ref-cache.c	FUNCTION_5	IF_1	CALL_1
0x4000537	          0x4889c7	                            mov rdi, rax	        65	ref-cache.c	FUNCTION_5	IF_1	CALL_1
0x400053a	      0xe839000000	                  call sym.clear_ref_dir	        65	ref-cache.c	FUNCTION_5	IF_1	CALL_1
0x400053f	        0x488b45f8	                mov rax, qword [rbp - 8]	        67	ref-cache.c	FUNCTION_5	CALL_2
0x4000543	          0x4889c7	                            mov rdi, rax	        67	ref-cache.c	FUNCTION_5	CALL_2
0x4000546	      0xe800000000	                          call 0x400054b	        67	ref-cache.c	FUNCTION_5	CALL_2
0x400054b	              0x90	                                     nop	        68	ref-cache.c	FUNCTION_5
0x400054c	              0xc9	                                   leave	        68	ref-cache.c	FUNCTION_5
0x400054d	              0xc3	                                     ret	        68	ref-cache.c	FUNCTION_5
cache_ref_iterator_abort	FOR,0:SWITCH,0:functions,0:CALL,3:IF,0:ELSE,0:WHILE,0:DO,0	20
0x4001169	              0x55	                                push rbp	       498	ref-cache.c	FUNCTION_23
0x400116a	          0x4889e5	                            mov rbp, rsp	       498	ref-cache.c	FUNCTION_23
0x400116d	        0x4883ec20	                           sub rsp, 0x20	       498	ref-cache.c	FUNCTION_23
0x4001171	        0x48897de8	             mov qword [rbp - 0x18], rdi	       498	ref-cache.c	FUNCTION_23
0x4001175	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       499	ref-cache.c	FUNCTION_23
0x4001179	        0x488945f8	                mov qword [rbp - 8], rax	       499	ref-cache.c	FUNCTION_23
0x400117d	        0x488b45f8	                mov rax, qword [rbp - 8]	       502	ref-cache.c	FUNCTION_23	CALL_1
0x4001181	        0x488b4038	            mov rax, qword [rax + 0x38] 	       502	ref-cache.c	FUNCTION_23	CALL_1
0x4001185	          0x4889c7	                            mov rdi, rax	       502	ref-cache.c	FUNCTION_23	CALL_1
0x4001188	      0xe800000000	                          call 0x400118d	       502	ref-cache.c	FUNCTION_23	CALL_1
0x400118d	        0x488b45f8	                mov rax, qword [rbp - 8]	       503	ref-cache.c	FUNCTION_23	CALL_2
0x4001191	        0x488b4040	            mov rax, qword [rax + 0x40] 	       503	ref-cache.c	FUNCTION_23	CALL_2
0x4001195	          0x4889c7	                            mov rdi, rax	       503	ref-cache.c	FUNCTION_23	CALL_2
0x4001198	      0xe800000000	                          call 0x400119d	       503	ref-cache.c	FUNCTION_23	CALL_2
0x400119d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       504	ref-cache.c	FUNCTION_23	CALL_3
0x40011a1	          0x4889c7	                            mov rdi, rax	       504	ref-cache.c	FUNCTION_23	CALL_3
0x40011a4	      0xe800000000	                          call 0x40011a9	       504	ref-cache.c	FUNCTION_23	CALL_3
0x40011a9	      0xb8ffffffff	                     mov eax, 0xffffffff	       505	ref-cache.c	FUNCTION_23
0x40011ae	              0xc9	                                   leave	       506	ref-cache.c	FUNCTION_23
0x40011af	              0xc3	                                     ret	       506	ref-cache.c	FUNCTION_23
create_dir_entry	FOR,0:SWITCH,0:functions,0:CALL,0:IF,0:ELSE,0:WHILE,0:DO,0	40
0x4000600	              0x55	                                push rbp	        91	ref-cache.c	FUNCTION_8
0x4000601	          0x4889e5	                            mov rbp, rsp	        91	ref-cache.c	FUNCTION_8
0x4000604	        0x4883ec30	                           sub rsp, 0x30	        91	ref-cache.c	FUNCTION_8
0x4000608	        0x48897de8	             mov qword [rbp - 0x18], rdi	        91	ref-cache.c	FUNCTION_8
0x400060c	        0x488975e0	             mov qword [rbp - 0x20], rsi	        91	ref-cache.c	FUNCTION_8
0x4000610	        0x488955d8	             mov qword [rbp - 0x28], rdx	        91	ref-cache.c	FUNCTION_8
0x4000614	          0x894dd4	             mov dword [rbp - 0x2c], ecx	        91	ref-cache.c	FUNCTION_8
0x4000617	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        94	ref-cache.c	FUNCTION_8
0x400061b	        0x488945f0	             mov qword [rbp - 0x10], rax	        94	ref-cache.c	FUNCTION_8
0x400061f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        94	ref-cache.c	FUNCTION_8
0x4000623	          0x4889c6	                            mov rsi, rax	        94	ref-cache.c	FUNCTION_8
0x4000626	      0xbf28000000	                           mov edi, 0x28	        94	ref-cache.c	FUNCTION_8
0x400062b	      0xe810faffff	                         call sym.st_add	        94	ref-cache.c	FUNCTION_8
0x4000630	      0xbe01000000	                              mov esi, 1	        94	ref-cache.c	FUNCTION_8
0x4000635	          0x4889c7	                            mov rdi, rax	        94	ref-cache.c	FUNCTION_8
0x4000638	      0xe803faffff	                         call sym.st_add	        94	ref-cache.c	FUNCTION_8
0x400063d	          0x4889c6	                            mov rsi, rax	        94	ref-cache.c	FUNCTION_8
0x4000640	      0xbf01000000	                              mov edi, 1	        94	ref-cache.c	FUNCTION_8
0x4000645	      0xe800000000	                          call 0x400064a	        94	ref-cache.c	FUNCTION_8
0x400064a	        0x488945f8	                mov qword [rbp - 8], rax	        94	ref-cache.c	FUNCTION_8
0x400064e	        0x488b45f8	                mov rax, qword [rbp - 8]	        94	ref-cache.c	FUNCTION_8
0x4000652	        0x488d4828	                   lea rcx, [rax + 0x28]	        94	ref-cache.c	FUNCTION_8
0x4000656	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        94	ref-cache.c	FUNCTION_8
0x400065a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        94	ref-cache.c	FUNCTION_8
0x400065e	          0x4889c6	                            mov rsi, rax	        94	ref-cache.c	FUNCTION_8
0x4000661	          0x4889cf	                            mov rdi, rcx	        94	ref-cache.c	FUNCTION_8
0x4000664	      0xe800000000	                          call 0x4000669	        94	ref-cache.c	FUNCTION_8
0x4000669	        0x488b45f8	                mov rax, qword [rbp - 8]	        95	ref-cache.c	FUNCTION_8
0x400066d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        95	ref-cache.c	FUNCTION_8
0x4000671	        0x48895018	             mov qword [rax + 0x18], rdx	        95	ref-cache.c	FUNCTION_8
0x4000675	        0x837dd400	               cmp dword [rbp - 0x2c], 0	        96	ref-cache.c	FUNCTION_8
0x4000679	            0x7407	                            je 0x4000682	        96	ref-cache.c	FUNCTION_8
0x400067b	      0xba30000000	                           mov edx, 0x30	        96	ref-cache.c	FUNCTION_8
0x4000680	            0xeb05	                           jmp 0x4000687	        96	ref-cache.c	FUNCTION_8
0x4000682	      0xba10000000	                           mov edx, 0x10	        96	ref-cache.c	FUNCTION_8
0x4000687	        0x488b45f8	                mov rax, qword [rbp - 8]	        96	ref-cache.c	FUNCTION_8
0x400068b	            0x8810	                      mov byte [rax], dl	        96	ref-cache.c	FUNCTION_8
0x400068d	        0x488b45f8	                mov rax, qword [rbp - 8]	        97	ref-cache.c	FUNCTION_8
0x4000691	              0xc9	                                   leave	        98	ref-cache.c	FUNCTION_8
0x4000692	              0xc3	                                     ret	        98	ref-cache.c	FUNCTION_8
get_ref_dir	FOR,0:SWITCH,0:functions,0:CALL,3:IF,2:ELSE,0:WHILE,0:DO,0	53
0x4000360	              0x55	                                push rbp	        20	ref-cache.c	FUNCTION_2
0x4000361	          0x4889e5	                            mov rbp, rsp	        20	ref-cache.c	FUNCTION_2
0x4000364	        0x4883ec20	                           sub rsp, 0x20	        20	ref-cache.c	FUNCTION_2
0x4000368	        0x48897de8	             mov qword [rbp - 0x18], rdi	        20	ref-cache.c	FUNCTION_2
0x400036c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        22	ref-cache.c	FUNCTION_2	CALL_1
0x4000370	           0xfb600	                   movzx eax, byte [rax]	        22	ref-cache.c	FUNCTION_2	CALL_1
0x4000373	           0xfb6c0	                           movzx eax, al	        22	ref-cache.c	FUNCTION_2	CALL_1
0x4000376	          0x83e010	                           and eax, 0x10	        22	ref-cache.c	FUNCTION_2	CALL_1
0x4000379	            0x85c0	                           test eax, eax	        22	ref-cache.c	FUNCTION_2	CALL_1
0x400037b	            0x7519	                           jne 0x4000396	        22	ref-cache.c	FUNCTION_2	CALL_1
0x400037d	      0xb900000000	                              mov ecx, 0	        22	ref-cache.c	FUNCTION_2	CALL_1
0x4000382	      0xba16000000	                           mov edx, 0x16	        22	ref-cache.c	FUNCTION_2	CALL_1
0x4000387	      0xbe00000000	                              mov esi, 0	        22	ref-cache.c	FUNCTION_2	CALL_1
0x400038c	      0xbf00000000	                              mov edi, 0	        22	ref-cache.c	FUNCTION_2	CALL_1
0x4000391	      0xe800000000	                          call 0x4000396	        22	ref-cache.c	FUNCTION_2	CALL_1
0x4000396	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        23	ref-cache.c	FUNCTION_2
0x400039a	        0x4883c008	                              add rax, 8	        23	ref-cache.c	FUNCTION_2
0x400039e	        0x488945f8	                mov qword [rbp - 8], rax	        23	ref-cache.c	FUNCTION_2
0x40003a2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        24	ref-cache.c	FUNCTION_2	IF_1
0x40003a6	           0xfb600	                   movzx eax, byte [rax]	        24	ref-cache.c	FUNCTION_2	IF_1
0x40003a9	           0xfb6c0	                           movzx eax, al	        24	ref-cache.c	FUNCTION_2	IF_1
0x40003ac	          0x83e020	                           and eax, 0x20	        24	ref-cache.c	FUNCTION_2	IF_1
0x40003af	            0x85c0	                           test eax, eax	        24	ref-cache.c	FUNCTION_2	IF_1
0x40003b1	            0x745e	                            je 0x4000411	        24	ref-cache.c	FUNCTION_2	IF_1
0x40003b3	        0x488b45f8	                mov rax, qword [rbp - 8]	        25	ref-cache.c	FUNCTION_2	IF_1	IF_2
0x40003b7	        0x488b4010	            mov rax, qword [rax + 0x10] 	        25	ref-cache.c	FUNCTION_2	IF_1	IF_2
0x40003bb	        0x488b4010	            mov rax, qword [rax + 0x10] 	        25	ref-cache.c	FUNCTION_2	IF_1	IF_2
0x40003bf	          0x4885c0	                           test rax, rax	        25	ref-cache.c	FUNCTION_2	IF_1	IF_2
0x40003c2	            0x750f	                           jne 0x40003d3	        25	ref-cache.c	FUNCTION_2	IF_1	IF_2
0x40003c4	      0xbf00000000	                              mov edi, 0	        26	ref-cache.c	FUNCTION_2	IF_1	CALL_2
0x40003c9	      0xb800000000	                              mov eax, 0	        26	ref-cache.c	FUNCTION_2	IF_1	CALL_2
0x40003ce	      0xe800000000	                          call 0x40003d3	        26	ref-cache.c	FUNCTION_2	IF_1	CALL_2
0x40003d3	        0x488b45f8	                mov rax, qword [rbp - 8]	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x40003d7	        0x488b4010	            mov rax, qword [rax + 0x10] 	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x40003db	        0x488b4010	            mov rax, qword [rax + 0x10] 	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x40003df	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x40003e3	        0x488d7a28	                   lea rdi, [rdx + 0x28]	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x40003e7	        0x488b55f8	                mov rdx, qword [rbp - 8]	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x40003eb	        0x488b5210	            mov rdx, qword [rdx + 0x10] 	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x40003ef	        0x488b4a08	                mov rcx, qword [rdx + 8]	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x40003f3	        0x488b75f8	                mov rsi, qword [rbp - 8]	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x40003f7	          0x4889fa	                            mov rdx, rdi	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x40003fa	          0x4889cf	                            mov rdi, rcx	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x40003fd	            0xffd0	                                call rax	        28	ref-cache.c	FUNCTION_2	IF_1	CALL_3
0x40003ff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        29	ref-cache.c	FUNCTION_2	IF_1
0x4000403	           0xfb600	                   movzx eax, byte [rax]	        29	ref-cache.c	FUNCTION_2	IF_1
0x4000406	          0x83e0df	                     and eax, 0xffffffdf	        29	ref-cache.c	FUNCTION_2	IF_1
0x4000409	            0x89c2	                            mov edx, eax	        29	ref-cache.c	FUNCTION_2	IF_1
0x400040b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        29	ref-cache.c	FUNCTION_2	IF_1
0x400040f	            0x8810	                      mov byte [rax], dl	        29	ref-cache.c	FUNCTION_2	IF_1
0x4000411	        0x488b45f8	                mov rax, qword [rbp - 8]	        31	ref-cache.c	FUNCTION_2
0x4000415	              0xc9	                                   leave	        32	ref-cache.c	FUNCTION_2
0x4000416	              0xc3	                                     ret	        32	ref-cache.c	FUNCTION_2
remove_entry_from_dir	FOR,0:SWITCH,0:functions,0:CALL,7:IF,4:ELSE,1:WHILE,0:DO,0	113
0x40009e2	              0x55	                                push rbp	       216	ref-cache.c	FUNCTION_15
0x40009e3	          0x4889e5	                            mov rbp, rsp	       216	ref-cache.c	FUNCTION_15
0x40009e6	        0x4883ec30	                           sub rsp, 0x30	       216	ref-cache.c	FUNCTION_15
0x40009ea	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       216	ref-cache.c	FUNCTION_15
0x40009ee	        0x488975d0	             mov qword [rbp - 0x30], rsi	       216	ref-cache.c	FUNCTION_15
0x40009f2	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       217	ref-cache.c	FUNCTION_15	CALL_1
0x40009f6	          0x4889c7	                            mov rdi, rax	       217	ref-cache.c	FUNCTION_15	CALL_1
0x40009f9	      0xe800000000	                          call 0x40009fe	       217	ref-cache.c	FUNCTION_15	CALL_1
0x40009fe	          0x8945e4	             mov dword [rbp - 0x1c], eax	       217	ref-cache.c	FUNCTION_15	CALL_1
0x4000a01	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       220	ref-cache.c	FUNCTION_15
0x4000a04	            0x4898	                                    cdqe	       220	ref-cache.c	FUNCTION_15
0x4000a06	        0x488d50ff	                      lea rdx, [rax - 1]	       220	ref-cache.c	FUNCTION_15
0x4000a0a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       220	ref-cache.c	FUNCTION_15
0x4000a0e	          0x4801d0	                            add rax, rdx	       220	ref-cache.c	FUNCTION_15
0x4000a11	           0xfb600	                   movzx eax, byte [rax]	       220	ref-cache.c	FUNCTION_15
0x4000a14	            0x3c2f	                            cmp al, 0x2f	       220	ref-cache.c	FUNCTION_15
0x4000a16	           0xf94c0	                                 sete al	       220	ref-cache.c	FUNCTION_15
0x4000a19	           0xfb6c0	                           movzx eax, al	       220	ref-cache.c	FUNCTION_15
0x4000a1c	          0x8945e8	             mov dword [rbp - 0x18], eax	       220	ref-cache.c	FUNCTION_15
0x4000a1f	        0x837de800	               cmp dword [rbp - 0x18], 0	       221	ref-cache.c	FUNCTION_15	IF_1
0x4000a23	            0x7446	                            je 0x4000a6b	       221	ref-cache.c	FUNCTION_15	IF_1
0x4000a25	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       228	ref-cache.c	FUNCTION_15	IF_1	CALL_2
0x4000a28	          0x83e801	                              sub eax, 1	       228	ref-cache.c	FUNCTION_15	IF_1	CALL_2
0x4000a2b	          0x4863d0	                         movsxd rdx, eax	       228	ref-cache.c	FUNCTION_15	IF_1	CALL_2
0x4000a2e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       228	ref-cache.c	FUNCTION_15	IF_1	CALL_2
0x4000a32	          0x4889d6	                            mov rsi, rdx	       228	ref-cache.c	FUNCTION_15	IF_1	CALL_2
0x4000a35	          0x4889c7	                            mov rdi, rax	       228	ref-cache.c	FUNCTION_15	IF_1	CALL_2
0x4000a38	      0xe800000000	                          call 0x4000a3d	       228	ref-cache.c	FUNCTION_15	IF_1	CALL_2
0x4000a3d	        0x488945f0	             mov qword [rbp - 0x10], rax	       228	ref-cache.c	FUNCTION_15	IF_1	CALL_2
0x4000a41	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       229	ref-cache.c	FUNCTION_15	IF_1	CALL_3
0x4000a45	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       229	ref-cache.c	FUNCTION_15	IF_1	CALL_3
0x4000a49	      0xba00000000	                              mov edx, 0	       229	ref-cache.c	FUNCTION_15	IF_1	CALL_3
0x4000a4e	          0x4889ce	                            mov rsi, rcx	       229	ref-cache.c	FUNCTION_15	IF_1	CALL_3
0x4000a51	          0x4889c7	                            mov rdi, rax	       229	ref-cache.c	FUNCTION_15	IF_1	CALL_3
0x4000a54	      0xe848feffff	            call sym.find_containing_dir	       229	ref-cache.c	FUNCTION_15	IF_1	CALL_3
0x4000a59	        0x488945d8	             mov qword [rbp - 0x28], rax	       229	ref-cache.c	FUNCTION_15	IF_1	CALL_3
0x4000a5d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       230	ref-cache.c	FUNCTION_15	IF_1	CALL_4
0x4000a61	          0x4889c7	                            mov rdi, rax	       230	ref-cache.c	FUNCTION_15	IF_1	CALL_4
0x4000a64	      0xe800000000	                          call 0x4000a69	       230	ref-cache.c	FUNCTION_15	IF_1	CALL_4
0x4000a69	            0xeb1c	                           jmp 0x4000a87	       230	ref-cache.c	FUNCTION_15	IF_1	CALL_4
0x4000a6b	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       232	ref-cache.c	FUNCTION_15	ELSE_1	CALL_5
0x4000a6f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       232	ref-cache.c	FUNCTION_15	ELSE_1	CALL_5
0x4000a73	      0xba00000000	                              mov edx, 0	       232	ref-cache.c	FUNCTION_15	ELSE_1	CALL_5
0x4000a78	          0x4889ce	                            mov rsi, rcx	       232	ref-cache.c	FUNCTION_15	ELSE_1	CALL_5
0x4000a7b	          0x4889c7	                            mov rdi, rax	       232	ref-cache.c	FUNCTION_15	ELSE_1	CALL_5
0x4000a7e	      0xe81efeffff	            call sym.find_containing_dir	       232	ref-cache.c	FUNCTION_15	ELSE_1	CALL_5
0x4000a83	        0x488945d8	             mov qword [rbp - 0x28], rax	       232	ref-cache.c	FUNCTION_15	ELSE_1	CALL_5
0x4000a87	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       234	ref-cache.c	FUNCTION_15	IF_2
0x4000a8c	            0x750a	                           jne 0x4000a98	       234	ref-cache.c	FUNCTION_15	IF_2
0x4000a8e	      0xb8ffffffff	                     mov eax, 0xffffffff	       235	ref-cache.c	FUNCTION_15	IF_2
0x4000a93	      0xe9d1000000	                           jmp 0x4000b69	       235	ref-cache.c	FUNCTION_15	IF_2
0x4000a98	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       236	ref-cache.c	FUNCTION_15	CALL_6
0x4000a9b	          0x4863d0	                         movsxd rdx, eax	       236	ref-cache.c	FUNCTION_15	CALL_6
0x4000a9e	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       236	ref-cache.c	FUNCTION_15	CALL_6
0x4000aa2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       236	ref-cache.c	FUNCTION_15	CALL_6
0x4000aa6	          0x4889ce	                            mov rsi, rcx	       236	ref-cache.c	FUNCTION_15	CALL_6
0x4000aa9	          0x4889c7	                            mov rdi, rax	       236	ref-cache.c	FUNCTION_15	CALL_6
0x4000aac	      0xe800000000	                          call 0x4000ab1	       236	ref-cache.c	FUNCTION_15	CALL_6
0x4000ab1	          0x8945ec	             mov dword [rbp - 0x14], eax	       236	ref-cache.c	FUNCTION_15	CALL_6
0x4000ab4	        0x837decff	cmp dword [rbp - 0x14], 0xffffffffffffffff	       237	ref-cache.c	FUNCTION_15	IF_3
0x4000ab8	            0x750a	                           jne 0x4000ac4	       237	ref-cache.c	FUNCTION_15	IF_3
0x4000aba	      0xb8ffffffff	                     mov eax, 0xffffffff	       238	ref-cache.c	FUNCTION_15	IF_3
0x4000abf	      0xe9a5000000	                           jmp 0x4000b69	       238	ref-cache.c	FUNCTION_15	IF_3
0x4000ac4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       239	ref-cache.c	FUNCTION_15
0x4000ac8	        0x488b4018	            mov rax, qword [rax + 0x18] 	       239	ref-cache.c	FUNCTION_15
0x4000acc	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       239	ref-cache.c	FUNCTION_15
0x4000acf	          0x4863d2	                         movsxd rdx, edx	       239	ref-cache.c	FUNCTION_15
0x4000ad2	        0x48c1e203	                              shl rdx, 3	       239	ref-cache.c	FUNCTION_15
0x4000ad6	          0x4801d0	                            add rax, rdx	       239	ref-cache.c	FUNCTION_15
0x4000ad9	          0x488b00	                    mov rax, qword [rax]	       239	ref-cache.c	FUNCTION_15
0x4000adc	        0x488945f8	                mov qword [rbp - 8], rax	       239	ref-cache.c	FUNCTION_15
0x4000ae0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       241	ref-cache.c	FUNCTION_15
0x4000ae4	            0x8b00	                    mov eax, dword [rax]	       241	ref-cache.c	FUNCTION_15
0x4000ae6	          0x2b45ec	             sub eax, dword [rbp - 0x14]	       241	ref-cache.c	FUNCTION_15
0x4000ae9	          0x83e801	                              sub eax, 1	       241	ref-cache.c	FUNCTION_15
0x4000aec	            0x4898	                                    cdqe	       241	ref-cache.c	FUNCTION_15
0x4000aee	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       241	ref-cache.c	FUNCTION_15
0x4000af2	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	       241	ref-cache.c	FUNCTION_15
0x4000af6	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	       241	ref-cache.c	FUNCTION_15
0x4000af9	          0x4863c9	                         movsxd rcx, ecx	       241	ref-cache.c	FUNCTION_15
0x4000afc	        0x4883c101	                              add rcx, 1	       241	ref-cache.c	FUNCTION_15
0x4000b00	        0x48c1e103	                              shl rcx, 3	       241	ref-cache.c	FUNCTION_15
0x4000b04	        0x488d340a	                    lea rsi, [rdx + rcx]	       241	ref-cache.c	FUNCTION_15
0x4000b08	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       241	ref-cache.c	FUNCTION_15
0x4000b0c	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	       241	ref-cache.c	FUNCTION_15
0x4000b10	          0x8b4dec	             mov ecx, dword [rbp - 0x14]	       241	ref-cache.c	FUNCTION_15
0x4000b13	          0x4863c9	                         movsxd rcx, ecx	       241	ref-cache.c	FUNCTION_15
0x4000b16	        0x48c1e103	                              shl rcx, 3	       241	ref-cache.c	FUNCTION_15
0x4000b1a	        0x488d3c0a	                    lea rdi, [rdx + rcx]	       241	ref-cache.c	FUNCTION_15
0x4000b1e	      0xb908000000	                              mov ecx, 8	       241	ref-cache.c	FUNCTION_15
0x4000b23	          0x4889c2	                            mov rdx, rax	       241	ref-cache.c	FUNCTION_15
0x4000b26	      0xe8abf5ffff	                     call sym.move_array	       241	ref-cache.c	FUNCTION_15
0x4000b2b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       243	ref-cache.c	FUNCTION_15
0x4000b2f	            0x8b00	                    mov eax, dword [rax]	       243	ref-cache.c	FUNCTION_15
0x4000b31	          0x8d50ff	                      lea edx, [rax - 1]	       243	ref-cache.c	FUNCTION_15
0x4000b34	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       243	ref-cache.c	FUNCTION_15
0x4000b38	            0x8910	                    mov dword [rax], edx	       243	ref-cache.c	FUNCTION_15
0x4000b3a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       244	ref-cache.c	FUNCTION_15	IF_4
0x4000b3e	          0x8b4008	                mov eax, dword [rax + 8]	       244	ref-cache.c	FUNCTION_15	IF_4
0x4000b41	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	       244	ref-cache.c	FUNCTION_15	IF_4
0x4000b44	            0x7e11	                           jle 0x4000b57	       244	ref-cache.c	FUNCTION_15	IF_4
0x4000b46	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       245	ref-cache.c	FUNCTION_15	IF_4
0x4000b4a	          0x8b4008	                mov eax, dword [rax + 8]	       245	ref-cache.c	FUNCTION_15	IF_4
0x4000b4d	          0x8d50ff	                      lea edx, [rax - 1]	       245	ref-cache.c	FUNCTION_15	IF_4
0x4000b50	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       245	ref-cache.c	FUNCTION_15	IF_4
0x4000b54	          0x895008	                mov dword [rax + 8], edx	       245	ref-cache.c	FUNCTION_15	IF_4
0x4000b57	        0x488b45f8	                mov rax, qword [rbp - 8]	       246	ref-cache.c	FUNCTION_15	CALL_7
0x4000b5b	          0x4889c7	                            mov rdi, rax	       246	ref-cache.c	FUNCTION_15	CALL_7
0x4000b5e	      0xe8aff9ffff	                 call sym.free_ref_entry	       246	ref-cache.c	FUNCTION_15	CALL_7
0x4000b63	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       247	ref-cache.c	FUNCTION_15
0x4000b67	            0x8b00	                    mov eax, dword [rax]	       247	ref-cache.c	FUNCTION_15
0x4000b69	              0xc9	                                   leave	       248	ref-cache.c	FUNCTION_15
0x4000b6a	              0xc3	                                     ret	       248	ref-cache.c	FUNCTION_15
hashcpy	FOR,0:SWITCH,0:functions,0:CALL,1:IF,0:ELSE,0:WHILE,0:DO,0	14
0x40001aa	              0x55	                                push rbp	       994	cache.h	FUNCTION_63
0x40001ab	          0x4889e5	                            mov rbp, rsp	       994	cache.h	FUNCTION_63
0x40001ae	        0x4883ec10	                           sub rsp, 0x10	       994	cache.h	FUNCTION_63
0x40001b2	        0x48897df8	                mov qword [rbp - 8], rdi	       994	cache.h	FUNCTION_63
0x40001b6	        0x488975f0	             mov qword [rbp - 0x10], rsi	       994	cache.h	FUNCTION_63
0x40001ba	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       995	cache.h	FUNCTION_63	CALL_1
0x40001be	        0x488b45f8	                mov rax, qword [rbp - 8]	       995	cache.h	FUNCTION_63	CALL_1
0x40001c2	      0xba14000000	                           mov edx, 0x14	       995	cache.h	FUNCTION_63	CALL_1
0x40001c7	          0x4889ce	                            mov rsi, rcx	       995	cache.h	FUNCTION_63	CALL_1
0x40001ca	          0x4889c7	                            mov rdi, rax	       995	cache.h	FUNCTION_63	CALL_1
0x40001cd	      0xe800000000	                          call 0x40001d2	       995	cache.h	FUNCTION_63	CALL_1
0x40001d2	              0x90	                                     nop	       996	cache.h	FUNCTION_63
0x40001d3	              0xc9	                                   leave	       996	cache.h	FUNCTION_63
0x40001d4	              0xc3	                                     ret	       996	cache.h	FUNCTION_63
add_entry_to_dir	FOR,0:SWITCH,0:functions,0:CALL,1:IF,1:ELSE,0:WHILE,0:DO,0	117
0x40001fb	              0x55	                                push rbp	         8	ref-cache.c	FUNCTION_1
0x40001fc	          0x4889e5	                            mov rbp, rsp	         8	ref-cache.c	FUNCTION_1
0x40001ff	        0x4883ec10	                           sub rsp, 0x10	         8	ref-cache.c	FUNCTION_1
0x4000203	        0x48897df8	                mov qword [rbp - 8], rdi	         8	ref-cache.c	FUNCTION_1
0x4000207	        0x488975f0	             mov qword [rbp - 0x10], rsi	         8	ref-cache.c	FUNCTION_1
0x400020b	        0x488b45f8	                mov rax, qword [rbp - 8]	         9	ref-cache.c	FUNCTION_1
0x400020f	            0x8b00	                    mov eax, dword [rax]	         9	ref-cache.c	FUNCTION_1
0x4000211	          0x8d5001	                      lea edx, [rax + 1]	         9	ref-cache.c	FUNCTION_1
0x4000214	        0x488b45f8	                mov rax, qword [rbp - 8]	         9	ref-cache.c	FUNCTION_1
0x4000218	          0x8b4004	                mov eax, dword [rax + 4]	         9	ref-cache.c	FUNCTION_1
0x400021b	            0x39c2	                            cmp edx, eax	         9	ref-cache.c	FUNCTION_1
0x400021d	     0xf8e93000000	                           jle 0x40002b6	         9	ref-cache.c	FUNCTION_1
0x4000223	        0x488b45f8	                mov rax, qword [rbp - 8]	         9	ref-cache.c	FUNCTION_1
0x4000227	          0x8b4004	                mov eax, dword [rax + 4]	         9	ref-cache.c	FUNCTION_1
0x400022a	          0x8d5010	                   lea edx, [rax + 0x10]	         9	ref-cache.c	FUNCTION_1
0x400022d	            0x89d0	                            mov eax, edx	         9	ref-cache.c	FUNCTION_1
0x400022f	             0x1c0	                            add eax, eax	         9	ref-cache.c	FUNCTION_1
0x4000231	             0x1d0	                            add eax, edx	         9	ref-cache.c	FUNCTION_1
0x4000233	            0x89c2	                            mov edx, eax	         9	ref-cache.c	FUNCTION_1
0x4000235	          0xc1ea1f	                           shr edx, 0x1f	         9	ref-cache.c	FUNCTION_1
0x4000238	             0x1d0	                            add eax, edx	         9	ref-cache.c	FUNCTION_1
0x400023a	            0xd1f8	                              sar eax, 1	         9	ref-cache.c	FUNCTION_1
0x400023c	            0x89c2	                            mov edx, eax	         9	ref-cache.c	FUNCTION_1
0x400023e	        0x488b45f8	                mov rax, qword [rbp - 8]	         9	ref-cache.c	FUNCTION_1
0x4000242	            0x8b00	                    mov eax, dword [rax]	         9	ref-cache.c	FUNCTION_1
0x4000244	          0x83c001	                              add eax, 1	         9	ref-cache.c	FUNCTION_1
0x4000247	            0x39c2	                            cmp edx, eax	         9	ref-cache.c	FUNCTION_1
0x4000249	            0x7d12	                           jge 0x400025d	         9	ref-cache.c	FUNCTION_1
0x400024b	        0x488b45f8	                mov rax, qword [rbp - 8]	         9	ref-cache.c	FUNCTION_1
0x400024f	            0x8b00	                    mov eax, dword [rax]	         9	ref-cache.c	FUNCTION_1
0x4000251	          0x8d5001	                      lea edx, [rax + 1]	         9	ref-cache.c	FUNCTION_1
0x4000254	        0x488b45f8	                mov rax, qword [rbp - 8]	         9	ref-cache.c	FUNCTION_1
0x4000258	          0x895004	                mov dword [rax + 4], edx	         9	ref-cache.c	FUNCTION_1
0x400025b	            0xeb22	                           jmp 0x400027f	         9	ref-cache.c	FUNCTION_1
0x400025d	        0x488b45f8	                mov rax, qword [rbp - 8]	         9	ref-cache.c	FUNCTION_1
0x4000261	          0x8b4004	                mov eax, dword [rax + 4]	         9	ref-cache.c	FUNCTION_1
0x4000264	          0x8d5010	                   lea edx, [rax + 0x10]	         9	ref-cache.c	FUNCTION_1
0x4000267	            0x89d0	                            mov eax, edx	         9	ref-cache.c	FUNCTION_1
0x4000269	             0x1c0	                            add eax, eax	         9	ref-cache.c	FUNCTION_1
0x400026b	             0x1d0	                            add eax, edx	         9	ref-cache.c	FUNCTION_1
0x400026d	            0x89c2	                            mov edx, eax	         9	ref-cache.c	FUNCTION_1
0x400026f	          0xc1ea1f	                           shr edx, 0x1f	         9	ref-cache.c	FUNCTION_1
0x4000272	             0x1d0	                            add eax, edx	         9	ref-cache.c	FUNCTION_1
0x4000274	            0xd1f8	                              sar eax, 1	         9	ref-cache.c	FUNCTION_1
0x4000276	            0x89c2	                            mov edx, eax	         9	ref-cache.c	FUNCTION_1
0x4000278	        0x488b45f8	                mov rax, qword [rbp - 8]	         9	ref-cache.c	FUNCTION_1
0x400027c	          0x895004	                mov dword [rax + 4], edx	         9	ref-cache.c	FUNCTION_1
0x400027f	        0x488b45f8	                mov rax, qword [rbp - 8]	         9	ref-cache.c	FUNCTION_1
0x4000283	          0x8b4004	                mov eax, dword [rax + 4]	         9	ref-cache.c	FUNCTION_1
0x4000286	            0x4898	                                    cdqe	         9	ref-cache.c	FUNCTION_1
0x4000288	          0x4889c6	                            mov rsi, rax	         9	ref-cache.c	FUNCTION_1
0x400028b	      0xbf08000000	                              mov edi, 8	         9	ref-cache.c	FUNCTION_1
0x4000290	      0xe8effdffff	                        call sym.st_mult	         9	ref-cache.c	FUNCTION_1
0x4000295	          0x4889c2	                            mov rdx, rax	         9	ref-cache.c	FUNCTION_1
0x4000298	        0x488b45f8	                mov rax, qword [rbp - 8]	         9	ref-cache.c	FUNCTION_1
0x400029c	        0x488b4018	            mov rax, qword [rax + 0x18] 	         9	ref-cache.c	FUNCTION_1
0x40002a0	          0x4889d6	                            mov rsi, rdx	         9	ref-cache.c	FUNCTION_1
0x40002a3	          0x4889c7	                            mov rdi, rax	         9	ref-cache.c	FUNCTION_1
0x40002a6	      0xe800000000	                          call 0x40002ab	         9	ref-cache.c	FUNCTION_1
0x40002ab	          0x4889c2	                            mov rdx, rax	         9	ref-cache.c	FUNCTION_1
0x40002ae	        0x488b45f8	                mov rax, qword [rbp - 8]	         9	ref-cache.c	FUNCTION_1
0x40002b2	        0x48895018	             mov qword [rax + 0x18], rdx	         9	ref-cache.c	FUNCTION_1
0x40002b6	        0x488b45f8	                mov rax, qword [rbp - 8]	        10	ref-cache.c	FUNCTION_1
0x40002ba	        0x488b7018	            mov rsi, qword [rax + 0x18] 	        10	ref-cache.c	FUNCTION_1
0x40002be	        0x488b45f8	                mov rax, qword [rbp - 8]	        10	ref-cache.c	FUNCTION_1
0x40002c2	            0x8b00	                    mov eax, dword [rax]	        10	ref-cache.c	FUNCTION_1
0x40002c4	          0x8d4801	                      lea ecx, [rax + 1]	        10	ref-cache.c	FUNCTION_1
0x40002c7	        0x488b55f8	                mov rdx, qword [rbp - 8]	        10	ref-cache.c	FUNCTION_1
0x40002cb	            0x890a	                    mov dword [rdx], ecx	        10	ref-cache.c	FUNCTION_1
0x40002cd	            0x4898	                                    cdqe	        10	ref-cache.c	FUNCTION_1
0x40002cf	        0x48c1e003	                              shl rax, 3	        10	ref-cache.c	FUNCTION_1
0x40002d3	        0x488d1406	                    lea rdx, [rsi + rax]	        10	ref-cache.c	FUNCTION_1
0x40002d7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        10	ref-cache.c	FUNCTION_1
0x40002db	          0x488902	                    mov qword [rdx], rax	        10	ref-cache.c	FUNCTION_1
0x40002de	        0x488b45f8	                mov rax, qword [rbp - 8]	        12	ref-cache.c	FUNCTION_1	IF_1
0x40002e2	            0x8b00	                    mov eax, dword [rax]	        12	ref-cache.c	FUNCTION_1	IF_1
0x40002e4	          0x83f801	                              cmp eax, 1	        12	ref-cache.c	FUNCTION_1	IF_1
0x40002e7	            0x7467	                            je 0x4000350	        12	ref-cache.c	FUNCTION_1	IF_1
0x40002e9	        0x488b45f8	                mov rax, qword [rbp - 8]	        13	ref-cache.c	FUNCTION_1	IF_1
0x40002ed	            0x8b10	                    mov edx, dword [rax]	        13	ref-cache.c	FUNCTION_1	IF_1
0x40002ef	        0x488b45f8	                mov rax, qword [rbp - 8]	        13	ref-cache.c	FUNCTION_1	IF_1
0x40002f3	          0x8b4008	                mov eax, dword [rax + 8]	        13	ref-cache.c	FUNCTION_1	IF_1
0x40002f6	          0x83c001	                              add eax, 1	        13	ref-cache.c	FUNCTION_1	IF_1
0x40002f9	            0x39c2	                            cmp edx, eax	        12	ref-cache.c	FUNCTION_1	IF_1
0x40002fb	            0x7560	                           jne 0x400035d	        12	ref-cache.c	FUNCTION_1	IF_1
0x40002fd	        0x488b45f8	                mov rax, qword [rbp - 8]	        15	ref-cache.c	FUNCTION_1	IF_1
0x4000301	        0x488b5018	            mov rdx, qword [rax + 0x18] 	        15	ref-cache.c	FUNCTION_1	IF_1
0x4000305	        0x488b45f8	                mov rax, qword [rbp - 8]	        15	ref-cache.c	FUNCTION_1	IF_1
0x4000309	            0x8b00	                    mov eax, dword [rax]	        15	ref-cache.c	FUNCTION_1	IF_1
0x400030b	            0x4898	                                    cdqe	        15	ref-cache.c	FUNCTION_1	IF_1
0x400030d	        0x48c1e003	                              shl rax, 3	        15	ref-cache.c	FUNCTION_1	IF_1
0x4000311	        0x4883e808	                              sub rax, 8	        15	ref-cache.c	FUNCTION_1	IF_1
0x4000315	          0x4801d0	                            add rax, rdx	        15	ref-cache.c	FUNCTION_1	IF_1
0x4000318	          0x488b00	                    mov rax, qword [rax]	        15	ref-cache.c	FUNCTION_1	IF_1
0x400031b	        0x488d5028	                   lea rdx, [rax + 0x28]	        15	ref-cache.c	FUNCTION_1	IF_1
0x400031f	        0x488b45f8	                mov rax, qword [rbp - 8]	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_1
0x4000323	        0x488b4818	            mov rcx, qword [rax + 0x18] 	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_1
0x4000327	        0x488b45f8	                mov rax, qword [rbp - 8]	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_1
0x400032b	            0x8b00	                    mov eax, dword [rax]	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_1
0x400032d	            0x4898	                                    cdqe	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_1
0x400032f	        0x48c1e003	                              shl rax, 3	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_1
0x4000333	        0x4883e810	                           sub rax, 0x10	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_1
0x4000337	          0x4801c8	                            add rax, rcx	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_1
0x400033a	          0x488b00	                    mov rax, qword [rax]	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_1
0x400033d	        0x4883c028	                           add rax, 0x28	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_1
0x4000341	          0x4889d6	                            mov rsi, rdx	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_1
0x4000344	          0x4889c7	                            mov rdi, rax	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_1
0x4000347	      0xe800000000	                          call 0x400034c	        14	ref-cache.c	FUNCTION_1	IF_1	CALL_1
0x400034c	            0x85c0	                           test eax, eax	        13	ref-cache.c	FUNCTION_1	IF_1
0x400034e	            0x790d	                           jns 0x400035d	        13	ref-cache.c	FUNCTION_1	IF_1
0x4000350	        0x488b45f8	                mov rax, qword [rbp - 8]	        16	ref-cache.c	FUNCTION_1	IF_1
0x4000354	            0x8b10	                    mov edx, dword [rax]	        16	ref-cache.c	FUNCTION_1	IF_1
0x4000356	        0x488b45f8	                mov rax, qword [rbp - 8]	        16	ref-cache.c	FUNCTION_1	IF_1
0x400035a	          0x895008	                mov dword [rax + 8], edx	        16	ref-cache.c	FUNCTION_1	IF_1
0x400035d	              0x90	                                     nop	        17	ref-cache.c	FUNCTION_1
0x400035e	              0xc9	                                   leave	        17	ref-cache.c	FUNCTION_1
0x400035f	              0xc3	                                     ret	        17	ref-cache.c	FUNCTION_1
search_ref_dir	FOR,0:SWITCH,0:functions,0:CALL,2:IF,2:ELSE,0:WHILE,0:DO,0	51
0x4000740	              0x55	                                push rbp	       125	ref-cache.c	FUNCTION_11
0x4000741	          0x4889e5	                            mov rbp, rsp	       125	ref-cache.c	FUNCTION_11
0x4000744	        0x4883ec50	                           sub rsp, 0x50	       125	ref-cache.c	FUNCTION_11
0x4000748	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       125	ref-cache.c	FUNCTION_11
0x400074c	        0x488975c0	             mov qword [rbp - 0x40], rsi	       125	ref-cache.c	FUNCTION_11
0x4000750	        0x488955b8	             mov qword [rbp - 0x48], rdx	       125	ref-cache.c	FUNCTION_11
0x4000754	    0x64488b042528	                mov rax, qword fs:[0x28]	       125	ref-cache.c	FUNCTION_11
0x400075d	        0x488945f8	                mov qword [rbp - 8], rax	       125	ref-cache.c	FUNCTION_11
0x4000761	            0x31c0	                            xor eax, eax	       125	ref-cache.c	FUNCTION_11
0x4000763	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       129	ref-cache.c	FUNCTION_11	IF_1
0x4000768	            0x740a	                            je 0x4000774	       129	ref-cache.c	FUNCTION_11	IF_1
0x400076a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       129	ref-cache.c	FUNCTION_11	IF_1
0x400076e	            0x8b00	                    mov eax, dword [rax]	       129	ref-cache.c	FUNCTION_11	IF_1
0x4000770	            0x85c0	                           test eax, eax	       129	ref-cache.c	FUNCTION_11	IF_1
0x4000772	            0x7507	                           jne 0x400077b	       129	ref-cache.c	FUNCTION_11	IF_1
0x4000774	      0xb8ffffffff	                     mov eax, 0xffffffff	       130	ref-cache.c	FUNCTION_11	IF_1
0x4000779	            0xeb6c	                           jmp 0x40007e7	       130	ref-cache.c	FUNCTION_11	IF_1
0x400077b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       132	ref-cache.c	FUNCTION_11	CALL_1
0x400077f	          0x4889c7	                            mov rdi, rax	       132	ref-cache.c	FUNCTION_11	CALL_1
0x4000782	      0xe80b050000	                   call sym.sort_ref_dir	       132	ref-cache.c	FUNCTION_11	CALL_1
0x4000787	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       133	ref-cache.c	FUNCTION_11
0x400078b	        0x488945e0	             mov qword [rbp - 0x20], rax	       133	ref-cache.c	FUNCTION_11
0x400078f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       134	ref-cache.c	FUNCTION_11
0x4000793	        0x488945e8	             mov qword [rbp - 0x18], rax	       134	ref-cache.c	FUNCTION_11
0x4000797	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       135	ref-cache.c	FUNCTION_11	CALL_2
0x400079b	            0x8b00	                    mov eax, dword [rax]	       135	ref-cache.c	FUNCTION_11	CALL_2
0x400079d	          0x4863d0	                         movsxd rdx, eax	       135	ref-cache.c	FUNCTION_11	CALL_2
0x40007a0	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       135	ref-cache.c	FUNCTION_11	CALL_2
0x40007a4	        0x488b7018	            mov rsi, qword [rax + 0x18] 	       135	ref-cache.c	FUNCTION_11	CALL_2
0x40007a8	        0x488d45e0	                   lea rax, [rbp - 0x20]	       135	ref-cache.c	FUNCTION_11	CALL_2
0x40007ac	    0x41b800000000	                              mov r8d, 0	       135	ref-cache.c	FUNCTION_11	CALL_2
0x40007b2	      0xb908000000	                              mov ecx, 8	       135	ref-cache.c	FUNCTION_11	CALL_2
0x40007b7	          0x4889c7	                            mov rdi, rax	       135	ref-cache.c	FUNCTION_11	CALL_2
0x40007ba	      0xe800000000	                          call 0x40007bf	       135	ref-cache.c	FUNCTION_11	CALL_2
0x40007bf	        0x488945d8	             mov qword [rbp - 0x28], rax	       135	ref-cache.c	FUNCTION_11	CALL_2
0x40007c3	      0x48837dd800	               cmp qword [rbp - 0x28], 0	       138	ref-cache.c	FUNCTION_11	IF_2
0x40007c8	            0x7507	                           jne 0x40007d1	       138	ref-cache.c	FUNCTION_11	IF_2
0x40007ca	      0xb8ffffffff	                     mov eax, 0xffffffff	       139	ref-cache.c	FUNCTION_11	IF_2
0x40007cf	            0xeb16	                           jmp 0x40007e7	       139	ref-cache.c	FUNCTION_11	IF_2
0x40007d1	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       141	ref-cache.c	FUNCTION_11
0x40007d5	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       141	ref-cache.c	FUNCTION_11
0x40007d9	        0x488b4018	            mov rax, qword [rax + 0x18] 	       141	ref-cache.c	FUNCTION_11
0x40007dd	          0x4829c2	                            sub rdx, rax	       141	ref-cache.c	FUNCTION_11
0x40007e0	          0x4889d0	                            mov rax, rdx	       141	ref-cache.c	FUNCTION_11
0x40007e3	        0x48c1f803	                              sar rax, 3	       141	ref-cache.c	FUNCTION_11
0x40007e7	        0x488b4df8	                mov rcx, qword [rbp - 8]	       142	ref-cache.c	FUNCTION_11
0x40007eb	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       142	ref-cache.c	FUNCTION_11
0x40007f4	            0x7405	                            je 0x40007fb	       142	ref-cache.c	FUNCTION_11
0x40007f6	      0xe800000000	                          call 0x40007fb	       142	ref-cache.c	FUNCTION_11
0x40007fb	              0xc9	                                   leave	       142	ref-cache.c	FUNCTION_11
0x40007fc	              0xc3	                                     ret	       142	ref-cache.c	FUNCTION_11
cache_ref_iterator_begin	FOR,0:SWITCH,0:functions,0:CALL,7:IF,4:ELSE,1:WHILE,0:DO,0	115
0x40011b0	              0x55	                                push rbp	       517	ref-cache.c	FUNCTION_24
0x40011b1	          0x4889e5	                            mov rbp, rsp	       517	ref-cache.c	FUNCTION_24
0x40011b4	        0x4883ec40	                           sub rsp, 0x40	       517	ref-cache.c	FUNCTION_24
0x40011b8	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       517	ref-cache.c	FUNCTION_24
0x40011bc	        0x488975d0	             mov qword [rbp - 0x30], rsi	       517	ref-cache.c	FUNCTION_24
0x40011c0	          0x8955cc	             mov dword [rbp - 0x34], edx	       517	ref-cache.c	FUNCTION_24
0x40011c3	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       523	ref-cache.c	FUNCTION_24	CALL_1
0x40011c7	          0x488b00	                    mov rax, qword [rax]	       523	ref-cache.c	FUNCTION_24	CALL_1
0x40011ca	          0x4889c7	                            mov rdi, rax	       523	ref-cache.c	FUNCTION_24	CALL_1
0x40011cd	      0xe800000000	                          call 0x40011d2	       523	ref-cache.c	FUNCTION_24	CALL_1
0x40011d2	        0x488945e0	             mov qword [rbp - 0x20], rax	       523	ref-cache.c	FUNCTION_24	CALL_1
0x40011d6	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       524	ref-cache.c	FUNCTION_24	IF_1
0x40011db	            0x7427	                            je 0x4001204	       524	ref-cache.c	FUNCTION_24	IF_1
0x40011dd	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       524	ref-cache.c	FUNCTION_24	IF_1
0x40011e1	           0xfb600	                   movzx eax, byte [rax]	       524	ref-cache.c	FUNCTION_24	IF_1
0x40011e4	            0x84c0	                             test al, al	       524	ref-cache.c	FUNCTION_24	IF_1
0x40011e6	            0x741c	                            je 0x4001204	       524	ref-cache.c	FUNCTION_24	IF_1
0x40011e8	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       525	ref-cache.c	FUNCTION_24	CALL_2
0x40011ec	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       525	ref-cache.c	FUNCTION_24	CALL_2
0x40011f0	      0xba00000000	                              mov edx, 0	       525	ref-cache.c	FUNCTION_24	CALL_2
0x40011f5	          0x4889ce	                            mov rsi, rcx	       525	ref-cache.c	FUNCTION_24	CALL_2
0x40011f8	          0x4889c7	                            mov rdi, rax	       525	ref-cache.c	FUNCTION_24	CALL_2
0x40011fb	      0xe8a1f6ffff	            call sym.find_containing_dir	       525	ref-cache.c	FUNCTION_24	CALL_2
0x4001200	        0x488945e0	             mov qword [rbp - 0x20], rax	       525	ref-cache.c	FUNCTION_24	CALL_2
0x4001204	      0x48837de000	               cmp qword [rbp - 0x20], 0	       526	ref-cache.c	FUNCTION_24	IF_2
0x4001209	            0x750a	                           jne 0x4001215	       526	ref-cache.c	FUNCTION_24	IF_2
0x400120b	      0xe800000000	                          call 0x4001210	       528	ref-cache.c	FUNCTION_24	CALL_3
0x4001210	      0xe951010000	                           jmp 0x4001366	       528	ref-cache.c	FUNCTION_24	CALL_3
0x4001215	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       530	ref-cache.c	FUNCTION_24	IF_3
0x4001219	            0x7413	                            je 0x400122e	       530	ref-cache.c	FUNCTION_24	IF_3
0x400121b	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       531	ref-cache.c	FUNCTION_24	CALL_4
0x400121f	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       531	ref-cache.c	FUNCTION_24	CALL_4
0x4001223	          0x4889d6	                            mov rsi, rdx	       531	ref-cache.c	FUNCTION_24	CALL_4
0x4001226	          0x4889c7	                            mov rdi, rax	       531	ref-cache.c	FUNCTION_24	CALL_4
0x4001229	      0xe8bafbffff	                  call sym.prime_ref_dir	       531	ref-cache.c	FUNCTION_24	CALL_4
0x400122e	      0xbe48000000	                           mov esi, 0x48	       533	ref-cache.c	FUNCTION_24	CALL_5
0x4001233	      0xbf01000000	                              mov edi, 1	       533	ref-cache.c	FUNCTION_24	CALL_5
0x4001238	      0xe800000000	                          call 0x400123d	       533	ref-cache.c	FUNCTION_24	CALL_5
0x400123d	        0x488945e8	             mov qword [rbp - 0x18], rax	       533	ref-cache.c	FUNCTION_24	CALL_5
0x4001241	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       534	ref-cache.c	FUNCTION_24
0x4001245	        0x488945f0	             mov qword [rbp - 0x10], rax	       534	ref-cache.c	FUNCTION_24
0x4001249	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       535	ref-cache.c	FUNCTION_24	CALL_6
0x400124d	      0xba01000000	                              mov edx, 1	       535	ref-cache.c	FUNCTION_24	CALL_6
0x4001252	      0xbe00000000	                              mov esi, 0	       535	ref-cache.c	FUNCTION_24	CALL_6
0x4001257	          0x4889c7	                            mov rdi, rax	       535	ref-cache.c	FUNCTION_24	CALL_6
0x400125a	      0xe800000000	                          call 0x400125f	       535	ref-cache.c	FUNCTION_24	CALL_6
0x400125f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       536	ref-cache.c	FUNCTION_24
0x4001263	        0x488b4030	            mov rax, qword [rax + 0x30] 	       536	ref-cache.c	FUNCTION_24
0x4001267	        0x4883f809	                              cmp rax, 9	       536	ref-cache.c	FUNCTION_24
0x400126b	     0xf8782000000	                            ja 0x40012f3	       536	ref-cache.c	FUNCTION_24
0x4001271	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       536	ref-cache.c	FUNCTION_24
0x4001275	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       536	ref-cache.c	FUNCTION_24
0x4001279	          0x4889d0	                            mov rax, rdx	       536	ref-cache.c	FUNCTION_24
0x400127c	          0x4801c0	                            add rax, rax	       536	ref-cache.c	FUNCTION_24
0x400127f	          0x4801d0	                            add rax, rdx	       536	ref-cache.c	FUNCTION_24
0x4001282	        0x4883c030	                           add rax, 0x30	       536	ref-cache.c	FUNCTION_24
0x4001286	        0x4883f813	                           cmp rax, 0x13	       536	ref-cache.c	FUNCTION_24
0x400128a	            0x770e	                            ja 0x400129a	       536	ref-cache.c	FUNCTION_24
0x400128c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       536	ref-cache.c	FUNCTION_24
0x4001290	    0x48c740300a00	             mov qword [rax + 0x30], 0xa	       536	ref-cache.c	FUNCTION_24
0x4001298	            0xeb23	                           jmp 0x40012bd	       536	ref-cache.c	FUNCTION_24
0x400129a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       536	ref-cache.c	FUNCTION_24
0x400129e	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       536	ref-cache.c	FUNCTION_24
0x40012a2	          0x4889d0	                            mov rax, rdx	       536	ref-cache.c	FUNCTION_24
0x40012a5	          0x4801c0	                            add rax, rax	       536	ref-cache.c	FUNCTION_24
0x40012a8	          0x4801d0	                            add rax, rdx	       536	ref-cache.c	FUNCTION_24
0x40012ab	        0x4883c030	                           add rax, 0x30	       536	ref-cache.c	FUNCTION_24
0x40012af	          0x48d1e8	                              shr rax, 1	       536	ref-cache.c	FUNCTION_24
0x40012b2	          0x4889c2	                            mov rdx, rax	       536	ref-cache.c	FUNCTION_24
0x40012b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       536	ref-cache.c	FUNCTION_24
0x40012b9	        0x48895030	             mov qword [rax + 0x30], rdx	       536	ref-cache.c	FUNCTION_24
0x40012bd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       536	ref-cache.c	FUNCTION_24
0x40012c1	        0x488b4030	            mov rax, qword [rax + 0x30] 	       536	ref-cache.c	FUNCTION_24
0x40012c5	          0x4889c6	                            mov rsi, rax	       536	ref-cache.c	FUNCTION_24
0x40012c8	      0xbf10000000	                           mov edi, 0x10	       536	ref-cache.c	FUNCTION_24
0x40012cd	      0xe8b2edffff	                        call sym.st_mult	       536	ref-cache.c	FUNCTION_24
0x40012d2	          0x4889c2	                            mov rdx, rax	       536	ref-cache.c	FUNCTION_24
0x40012d5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       536	ref-cache.c	FUNCTION_24
0x40012d9	        0x488b4040	            mov rax, qword [rax + 0x40] 	       536	ref-cache.c	FUNCTION_24
0x40012dd	          0x4889d6	                            mov rsi, rdx	       536	ref-cache.c	FUNCTION_24
0x40012e0	          0x4889c7	                            mov rdi, rax	       536	ref-cache.c	FUNCTION_24
0x40012e3	      0xe800000000	                          call 0x40012e8	       536	ref-cache.c	FUNCTION_24
0x40012e8	          0x4889c2	                            mov rdx, rax	       536	ref-cache.c	FUNCTION_24
0x40012eb	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       536	ref-cache.c	FUNCTION_24
0x40012ef	        0x48895040	             mov qword [rax + 0x40], rdx	       536	ref-cache.c	FUNCTION_24
0x40012f3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       538	ref-cache.c	FUNCTION_24
0x40012f7	    0x48c740280100	               mov qword [rax + 0x28], 1	       538	ref-cache.c	FUNCTION_24
0x40012ff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       539	ref-cache.c	FUNCTION_24
0x4001303	        0x488b4040	            mov rax, qword [rax + 0x40] 	       539	ref-cache.c	FUNCTION_24
0x4001307	        0x488945f8	                mov qword [rbp - 8], rax	       539	ref-cache.c	FUNCTION_24
0x400130b	        0x488b45f8	                mov rax, qword [rbp - 8]	       540	ref-cache.c	FUNCTION_24
0x400130f	    0xc7400cffffff	      mov dword [rax + 0xc], 0xffffffff 	       540	ref-cache.c	FUNCTION_24
0x4001316	        0x488b45f8	                mov rax, qword [rbp - 8]	       541	ref-cache.c	FUNCTION_24
0x400131a	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       541	ref-cache.c	FUNCTION_24
0x400131e	          0x488910	                    mov qword [rax], rdx	       541	ref-cache.c	FUNCTION_24
0x4001321	      0x48837dd000	               cmp qword [rbp - 0x30], 0	       543	ref-cache.c	FUNCTION_24	IF_4
0x4001326	            0x742f	                            je 0x4001357	       543	ref-cache.c	FUNCTION_24	IF_4
0x4001328	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       543	ref-cache.c	FUNCTION_24	IF_4
0x400132c	           0xfb600	                   movzx eax, byte [rax]	       543	ref-cache.c	FUNCTION_24	IF_4
0x400132f	            0x84c0	                             test al, al	       543	ref-cache.c	FUNCTION_24	IF_4
0x4001331	            0x7424	                            je 0x4001357	       543	ref-cache.c	FUNCTION_24	IF_4
0x4001333	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       544	ref-cache.c	FUNCTION_24	IF_4	CALL_7
0x4001337	          0x4889c7	                            mov rdi, rax	       544	ref-cache.c	FUNCTION_24	IF_4	CALL_7
0x400133a	      0xe800000000	                          call 0x400133f	       544	ref-cache.c	FUNCTION_24	IF_4	CALL_7
0x400133f	          0x4889c2	                            mov rdx, rax	       544	ref-cache.c	FUNCTION_24	IF_4	CALL_7
0x4001342	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       544	ref-cache.c	FUNCTION_24	IF_4	CALL_7
0x4001346	        0x48895038	             mov qword [rax + 0x38], rdx	       544	ref-cache.c	FUNCTION_24	IF_4	CALL_7
0x400134a	        0x488b45f8	                mov rax, qword [rbp - 8]	       545	ref-cache.c	FUNCTION_24	IF_4
0x400134e	    0xc74008010000	                  mov dword [rax + 8], 1	       545	ref-cache.c	FUNCTION_24	IF_4
0x4001355	            0xeb0b	                           jmp 0x4001362	       545	ref-cache.c	FUNCTION_24	IF_4
0x4001357	        0x488b45f8	                mov rax, qword [rbp - 8]	       547	ref-cache.c	FUNCTION_24	ELSE_1
0x400135b	    0xc74008000000	                  mov dword [rax + 8], 0	       547	ref-cache.c	FUNCTION_24	ELSE_1
0x4001362	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       550	ref-cache.c	FUNCTION_24
0x4001366	              0xc9	                                   leave	       551	ref-cache.c	FUNCTION_24
0x4001367	              0xc3	                                     ret	       551	ref-cache.c	FUNCTION_24
cache_ref_iterator_advance	FOR,0:SWITCH,0:functions,0:CALL,4:IF,6:ELSE,2:WHILE,1:DO,0	173
0x4000ecd	              0x55	                                push rbp	       441	ref-cache.c	FUNCTION_21
0x4000ece	          0x4889e5	                            mov rbp, rsp	       441	ref-cache.c	FUNCTION_21
0x4000ed1	        0x4883ec40	                           sub rsp, 0x40	       441	ref-cache.c	FUNCTION_21
0x4000ed5	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       441	ref-cache.c	FUNCTION_21
0x4000ed9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       442	ref-cache.c	FUNCTION_21
0x4000edd	        0x488945e0	             mov qword [rbp - 0x20], rax	       442	ref-cache.c	FUNCTION_21
0x4000ee1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       447	ref-cache.c	FUNCTION_21	WHILE_1
0x4000ee5	        0x488b5040	            mov rdx, qword [rax + 0x40] 	       447	ref-cache.c	FUNCTION_21	WHILE_1
0x4000ee9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       447	ref-cache.c	FUNCTION_21	WHILE_1
0x4000eed	        0x488b4028	            mov rax, qword [rax + 0x28] 	       447	ref-cache.c	FUNCTION_21	WHILE_1
0x4000ef1	        0x48c1e004	                              shl rax, 4	       447	ref-cache.c	FUNCTION_21	WHILE_1
0x4000ef5	        0x4883e810	                           sub rax, 0x10	       447	ref-cache.c	FUNCTION_21	WHILE_1
0x4000ef9	          0x4801d0	                            add rax, rdx	       446	ref-cache.c	FUNCTION_21	WHILE_1
0x4000efc	        0x488945e8	             mov qword [rbp - 0x18], rax	       446	ref-cache.c	FUNCTION_21	WHILE_1
0x4000f00	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       448	ref-cache.c	FUNCTION_21	WHILE_1
0x4000f04	          0x488b00	                    mov rax, qword [rax]	       448	ref-cache.c	FUNCTION_21	WHILE_1
0x4000f07	        0x488945f0	             mov qword [rbp - 0x10], rax	       448	ref-cache.c	FUNCTION_21	WHILE_1
0x4000f0b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       452	ref-cache.c	FUNCTION_21	WHILE_1	IF_1
0x4000f0f	          0x8b400c	              mov eax, dword [rax + 0xc]	       452	ref-cache.c	FUNCTION_21	WHILE_1	IF_1
0x4000f12	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       452	ref-cache.c	FUNCTION_21	WHILE_1	IF_1
0x4000f15	            0x750c	                           jne 0x4000f23	       452	ref-cache.c	FUNCTION_21	WHILE_1	IF_1
0x4000f17	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       453	ref-cache.c	FUNCTION_21	WHILE_1	CALL_1
0x4000f1b	          0x4889c7	                            mov rdi, rax	       453	ref-cache.c	FUNCTION_21	WHILE_1	CALL_1
0x4000f1e	      0xe86ffdffff	                   call sym.sort_ref_dir	       453	ref-cache.c	FUNCTION_21	WHILE_1	CALL_1
0x4000f23	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0x4000f27	          0x8b400c	              mov eax, dword [rax + 0xc]	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0x4000f2a	          0x8d5001	                      lea edx, [rax + 1]	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0x4000f2d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0x4000f31	          0x89500c	              mov dword [rax + 0xc], edx	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0x4000f34	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0x4000f38	          0x8b500c	              mov edx, dword [rax + 0xc]	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0x4000f3b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0x4000f3f	          0x488b00	                    mov rax, qword [rax]	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0x4000f42	            0x8b00	                    mov eax, dword [rax]	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0x4000f44	            0x39c2	                            cmp edx, eax	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0x4000f46	            0x7536	                           jne 0x4000f7e	       455	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0x4000f48	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0x4000f4c	        0x488b4028	            mov rax, qword [rax + 0x28] 	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0x4000f50	        0x488d50ff	                      lea rdx, [rax - 1]	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0x4000f54	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0x4000f58	        0x48895028	             mov qword [rax + 0x28], rdx	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0x4000f5c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0x4000f60	        0x488b4028	            mov rax, qword [rax + 0x28] 	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0x4000f64	          0x4885c0	                           test rax, rax	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0x4000f67	     0xf85cb010000	                           jne 0x4001138	       457	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	IF_3
0x4000f6d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       458	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	CALL_2
0x4000f71	          0x4889c7	                            mov rdi, rax	       458	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	CALL_2
0x4000f74	      0xe800000000	                          call 0x4000f79	       458	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	CALL_2
0x4000f79	      0xe9c0010000	                           jmp 0x400113e	       458	ref-cache.c	FUNCTION_21	WHILE_1	IF_2	CALL_2
0x4000f7e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       463	ref-cache.c	FUNCTION_21	WHILE_1
0x4000f82	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       463	ref-cache.c	FUNCTION_21	WHILE_1
0x4000f86	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       463	ref-cache.c	FUNCTION_21	WHILE_1
0x4000f8a	          0x8b400c	              mov eax, dword [rax + 0xc]	       463	ref-cache.c	FUNCTION_21	WHILE_1
0x4000f8d	            0x4898	                                    cdqe	       463	ref-cache.c	FUNCTION_21	WHILE_1
0x4000f8f	        0x48c1e003	                              shl rax, 3	       463	ref-cache.c	FUNCTION_21	WHILE_1
0x4000f93	          0x4801d0	                            add rax, rdx	       463	ref-cache.c	FUNCTION_21	WHILE_1
0x4000f96	          0x488b00	                    mov rax, qword [rax]	       463	ref-cache.c	FUNCTION_21	WHILE_1
0x4000f99	        0x488945f8	                mov qword [rbp - 8], rax	       463	ref-cache.c	FUNCTION_21	WHILE_1
0x4000f9d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       465	ref-cache.c	FUNCTION_21	WHILE_1	IF_4
0x4000fa1	          0x8b4008	                mov eax, dword [rax + 8]	       465	ref-cache.c	FUNCTION_21	WHILE_1	IF_4
0x4000fa4	          0x83f801	                              cmp eax, 1	       465	ref-cache.c	FUNCTION_21	WHILE_1	IF_4
0x4000fa7	            0x7529	                           jne 0x4000fd2	       465	ref-cache.c	FUNCTION_21	WHILE_1	IF_4
0x4000fa9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       466	ref-cache.c	FUNCTION_21	WHILE_1	IF_4	CALL_3
0x4000fad	        0x488b4038	            mov rax, qword [rax + 0x38] 	       466	ref-cache.c	FUNCTION_21	WHILE_1	IF_4	CALL_3
0x4000fb1	        0x488b55f8	                mov rdx, qword [rbp - 8]	       466	ref-cache.c	FUNCTION_21	WHILE_1	IF_4	CALL_3
0x4000fb5	        0x4883c228	                           add rdx, 0x28	       466	ref-cache.c	FUNCTION_21	WHILE_1	IF_4	CALL_3
0x4000fb9	          0x4889c6	                            mov rsi, rax	       466	ref-cache.c	FUNCTION_21	WHILE_1	IF_4	CALL_3
0x4000fbc	          0x4889d7	                            mov rdi, rdx	       466	ref-cache.c	FUNCTION_21	WHILE_1	IF_4	CALL_3
0x4000fbf	      0xe8c4fdffff	                call sym.overlaps_prefix	       466	ref-cache.c	FUNCTION_21	WHILE_1	IF_4	CALL_3
0x4000fc4	          0x8945dc	             mov dword [rbp - 0x24], eax	       466	ref-cache.c	FUNCTION_21	WHILE_1	IF_4	CALL_3
0x4000fc7	        0x837ddc02	               cmp dword [rbp - 0x24], 2	       467	ref-cache.c	FUNCTION_21	WHILE_1	IF_4	IF_5
0x4000fcb	            0x750f	                           jne 0x4000fdc	       467	ref-cache.c	FUNCTION_21	WHILE_1	IF_4	IF_5
0x4000fcd	      0xe967010000	                           jmp 0x4001139	       468	ref-cache.c	FUNCTION_21	WHILE_1	IF_4	IF_5
0x4000fd2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       470	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_1
0x4000fd6	          0x8b4008	                mov eax, dword [rax + 8]	       470	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_1
0x4000fd9	          0x8945dc	             mov dword [rbp - 0x24], eax	       470	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_1
0x4000fdc	        0x488b45f8	                mov rax, qword [rbp - 8]	       473	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000fe0	           0xfb600	                   movzx eax, byte [rax]	       473	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000fe3	           0xfb6c0	                           movzx eax, al	       473	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000fe6	          0x83e010	                           and eax, 0x10	       473	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000fe9	            0x85c0	                           test eax, eax	       473	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000feb	     0xf840f010000	                            je 0x4001100	       473	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000ff1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000ff5	        0x488b4028	            mov rax, qword [rax + 0x28] 	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000ff9	        0x488d5001	                      lea rdx, [rax + 1]	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4000ffd	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4001001	        0x488b4030	            mov rax, qword [rax + 0x30] 	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4001005	          0x4839c2	                            cmp rdx, rax	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4001008	     0xf869b000000	                           jbe 0x40010a9	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400100e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4001012	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4001016	          0x4889d0	                            mov rax, rdx	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4001019	          0x4801c0	                            add rax, rax	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400101c	          0x4801d0	                            add rax, rdx	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400101f	        0x4883c030	                           add rax, 0x30	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4001023	          0x48d1e8	                              shr rax, 1	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4001026	          0x4889c2	                            mov rdx, rax	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4001029	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400102d	        0x488b4028	            mov rax, qword [rax + 0x28] 	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4001031	        0x4883c001	                              add rax, 1	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4001035	          0x4839c2	                            cmp rdx, rax	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4001038	            0x7316	                           jae 0x4001050	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400103a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400103e	        0x488b4028	            mov rax, qword [rax + 0x28] 	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4001042	        0x488d5001	                      lea rdx, [rax + 1]	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4001046	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400104a	        0x48895030	             mov qword [rax + 0x30], rdx	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400104e	            0xeb23	                           jmp 0x4001073	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4001050	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4001054	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4001058	          0x4889d0	                            mov rax, rdx	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400105b	          0x4801c0	                            add rax, rax	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400105e	          0x4801d0	                            add rax, rdx	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4001061	        0x4883c030	                           add rax, 0x30	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4001065	          0x48d1e8	                              shr rax, 1	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4001068	          0x4889c2	                            mov rdx, rax	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400106b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400106f	        0x48895030	             mov qword [rax + 0x30], rdx	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4001073	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4001077	        0x488b4030	            mov rax, qword [rax + 0x30] 	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400107b	          0x4889c6	                            mov rsi, rax	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400107e	      0xbf10000000	                           mov edi, 0x10	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4001083	      0xe8fcefffff	                        call sym.st_mult	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4001088	          0x4889c2	                            mov rdx, rax	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400108b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400108f	        0x488b4040	            mov rax, qword [rax + 0x40] 	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4001093	          0x4889d6	                            mov rsi, rdx	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4001096	          0x4889c7	                            mov rdi, rax	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4001099	      0xe800000000	                          call 0x400109e	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x400109e	          0x4889c2	                            mov rdx, rax	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40010a1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40010a5	        0x48895040	             mov qword [rax + 0x40], rdx	       475	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40010a9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       478	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40010ad	        0x488b7040	            mov rsi, qword [rax + 0x40] 	       478	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40010b1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       478	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40010b5	        0x488b4028	            mov rax, qword [rax + 0x28] 	       478	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40010b9	        0x488d4801	                      lea rcx, [rax + 1]	       478	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40010bd	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       478	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40010c1	        0x48894a28	             mov qword [rdx + 0x28], rcx	       478	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40010c5	        0x48c1e004	                              shl rax, 4	       478	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40010c9	          0x4801f0	                            add rax, rsi	       478	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40010cc	        0x488945e8	             mov qword [rbp - 0x18], rax	       478	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40010d0	        0x488b45f8	                mov rax, qword [rbp - 8]	       479	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x40010d4	          0x4889c7	                            mov rdi, rax	       479	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x40010d7	      0xe800000000	                          call 0x40010dc	       479	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x40010dc	          0x4889c2	                            mov rdx, rax	       479	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x40010df	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       479	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x40010e3	          0x488910	                    mov qword [rax], rdx	       479	ref-cache.c	FUNCTION_21	WHILE_1	IF_6	CALL_4
0x40010e6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       480	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40010ea	          0x8b55dc	             mov edx, dword [rbp - 0x24]	       480	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40010ed	          0x895008	                mov dword [rax + 8], edx	       480	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40010f0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       481	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40010f4	    0xc7400cffffff	      mov dword [rax + 0xc], 0xffffffff 	       481	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x40010fb	      0xe9e1fdffff	                           jmp 0x4000ee1	       481	ref-cache.c	FUNCTION_21	WHILE_1	IF_6
0x4001100	        0x488b45f8	                mov rax, qword [rbp - 8]	       483	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x4001104	        0x488d5028	                   lea rdx, [rax + 0x28]	       483	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x4001108	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       483	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x400110c	        0x48895010	             mov qword [rax + 0x10], rdx	       483	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x4001110	        0x488b45f8	                mov rax, qword [rbp - 8]	       484	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x4001114	        0x488d5008	                      lea rdx, [rax + 8]	       484	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x4001118	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       484	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x400111c	        0x48895018	             mov qword [rax + 0x18], rdx	       484	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x4001120	        0x488b45f8	                mov rax, qword [rbp - 8]	       485	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x4001124	           0xfb600	                   movzx eax, byte [rax]	       485	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x4001127	           0xfb6d0	                           movzx edx, al	       485	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x400112a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       485	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x400112e	          0x895020	             mov dword [rax + 0x20], edx	       485	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x4001131	      0xb800000000	                              mov eax, 0	       486	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x4001136	            0xeb06	                           jmp 0x400113e	       486	ref-cache.c	FUNCTION_21	WHILE_1	ELSE_2
0x4001138	              0x90	                                     nop	       460	ref-cache.c	FUNCTION_21	WHILE_1	IF_2
0x4001139	      0xe9a3fdffff	                           jmp 0x4000ee1	       488	ref-cache.c	FUNCTION_21	WHILE_1
0x400113e	              0xc9	                                   leave	       489	ref-cache.c	FUNCTION_21
0x400113f	              0xc3	                                     ret	       489	ref-cache.c	FUNCTION_21
is_dup_ref	FOR,0:SWITCH,0:functions,0:CALL,5:IF,3:ELSE,0:WHILE,0:DO,0	58
0x4000bc3	              0x55	                                push rbp	       265	ref-cache.c	FUNCTION_17
0x4000bc4	          0x4889e5	                            mov rbp, rsp	       265	ref-cache.c	FUNCTION_17
0x4000bc7	        0x4883ec10	                           sub rsp, 0x10	       265	ref-cache.c	FUNCTION_17
0x4000bcb	        0x48897df8	                mov qword [rbp - 8], rdi	       265	ref-cache.c	FUNCTION_17
0x4000bcf	        0x488975f0	             mov qword [rbp - 0x10], rsi	       265	ref-cache.c	FUNCTION_17
0x4000bd3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0x4000bd7	        0x488d5028	                   lea rdx, [rax + 0x28]	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0x4000bdb	        0x488b45f8	                mov rax, qword [rbp - 8]	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0x4000bdf	        0x4883c028	                           add rax, 0x28	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0x4000be3	          0x4889d6	                            mov rsi, rdx	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0x4000be6	          0x4889c7	                            mov rdi, rax	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0x4000be9	      0xe800000000	                          call 0x4000bee	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0x4000bee	            0x85c0	                           test eax, eax	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0x4000bf0	            0x740a	                            je 0x4000bfc	       266	ref-cache.c	FUNCTION_17	IF_1	CALL_1
0x4000bf2	      0xb800000000	                              mov eax, 0	       267	ref-cache.c	FUNCTION_17	IF_1
0x4000bf7	      0xe994000000	                           jmp 0x4000c90	       267	ref-cache.c	FUNCTION_17	IF_1
0x4000bfc	        0x488b45f8	                mov rax, qword [rbp - 8]	       271	ref-cache.c	FUNCTION_17	IF_2
0x4000c00	           0xfb600	                   movzx eax, byte [rax]	       271	ref-cache.c	FUNCTION_17	IF_2
0x4000c03	           0xfb6c0	                           movzx eax, al	       271	ref-cache.c	FUNCTION_17	IF_2
0x4000c06	          0x83e010	                           and eax, 0x10	       271	ref-cache.c	FUNCTION_17	IF_2
0x4000c09	            0x85c0	                           test eax, eax	       271	ref-cache.c	FUNCTION_17	IF_2
0x4000c0b	            0x7511	                           jne 0x4000c1e	       271	ref-cache.c	FUNCTION_17	IF_2
0x4000c0d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       271	ref-cache.c	FUNCTION_17	IF_2
0x4000c11	           0xfb600	                   movzx eax, byte [rax]	       271	ref-cache.c	FUNCTION_17	IF_2
0x4000c14	           0xfb6c0	                           movzx eax, al	       271	ref-cache.c	FUNCTION_17	IF_2
0x4000c17	          0x83e010	                           and eax, 0x10	       271	ref-cache.c	FUNCTION_17	IF_2
0x4000c1a	            0x85c0	                           test eax, eax	       271	ref-cache.c	FUNCTION_17	IF_2
0x4000c1c	            0x741a	                            je 0x4000c38	       271	ref-cache.c	FUNCTION_17	IF_2
0x4000c1e	        0x488b45f8	                mov rax, qword [rbp - 8]	       273	ref-cache.c	FUNCTION_17	CALL_2
0x4000c22	        0x4883c028	                           add rax, 0x28	       273	ref-cache.c	FUNCTION_17	CALL_2
0x4000c26	          0x4889c6	                            mov rsi, rax	       273	ref-cache.c	FUNCTION_17	CALL_2
0x4000c29	      0xbf00000000	                              mov edi, 0	       273	ref-cache.c	FUNCTION_17	CALL_2
0x4000c2e	      0xb800000000	                              mov eax, 0	       273	ref-cache.c	FUNCTION_17	CALL_2
0x4000c33	      0xe800000000	                          call 0x4000c38	       273	ref-cache.c	FUNCTION_17	CALL_2
0x4000c38	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       275	ref-cache.c	FUNCTION_17	IF_3	CALL_3
0x4000c3c	        0x488d5008	                      lea rdx, [rax + 8]	       275	ref-cache.c	FUNCTION_17	IF_3	CALL_3
0x4000c40	        0x488b45f8	                mov rax, qword [rbp - 8]	       275	ref-cache.c	FUNCTION_17	IF_3	CALL_3
0x4000c44	        0x4883c008	                              add rax, 8	       275	ref-cache.c	FUNCTION_17	IF_3	CALL_3
0x4000c48	          0x4889d6	                            mov rsi, rdx	       275	ref-cache.c	FUNCTION_17	IF_3	CALL_3
0x4000c4b	          0x4889c7	                            mov rdi, rax	       275	ref-cache.c	FUNCTION_17	IF_3	CALL_3
0x4000c4e	      0xe832f5ffff	                         call sym.oidcmp	       275	ref-cache.c	FUNCTION_17	IF_3	CALL_3
0x4000c53	            0x85c0	                           test eax, eax	       275	ref-cache.c	FUNCTION_17	IF_3	CALL_3
0x4000c55	            0x741a	                            je 0x4000c71	       275	ref-cache.c	FUNCTION_17	IF_3	CALL_3
0x4000c57	        0x488b45f8	                mov rax, qword [rbp - 8]	       276	ref-cache.c	FUNCTION_17	CALL_4
0x4000c5b	        0x4883c028	                           add rax, 0x28	       276	ref-cache.c	FUNCTION_17	CALL_4
0x4000c5f	          0x4889c6	                            mov rsi, rax	       276	ref-cache.c	FUNCTION_17	CALL_4
0x4000c62	      0xbf00000000	                              mov edi, 0	       276	ref-cache.c	FUNCTION_17	CALL_4
0x4000c67	      0xb800000000	                              mov eax, 0	       276	ref-cache.c	FUNCTION_17	CALL_4
0x4000c6c	      0xe800000000	                          call 0x4000c71	       276	ref-cache.c	FUNCTION_17	CALL_4
0x4000c71	        0x488b45f8	                mov rax, qword [rbp - 8]	       278	ref-cache.c	FUNCTION_17	CALL_5
0x4000c75	        0x4883c028	                           add rax, 0x28	       278	ref-cache.c	FUNCTION_17	CALL_5
0x4000c79	          0x4889c6	                            mov rsi, rax	       278	ref-cache.c	FUNCTION_17	CALL_5
0x4000c7c	      0xbf00000000	                              mov edi, 0	       278	ref-cache.c	FUNCTION_17	CALL_5
0x4000c81	      0xb800000000	                              mov eax, 0	       278	ref-cache.c	FUNCTION_17	CALL_5
0x4000c86	      0xe800000000	                          call 0x4000c8b	       278	ref-cache.c	FUNCTION_17	CALL_5
0x4000c8b	      0xb801000000	                              mov eax, 1	       279	ref-cache.c	FUNCTION_17
0x4000c90	              0xc9	                                   leave	       280	ref-cache.c	FUNCTION_17
0x4000c91	              0xc3	                                     ret	       280	ref-cache.c	FUNCTION_17
st_add	FOR,0:SWITCH,0:functions,0:CALL,1:IF,1:ELSE,0:WHILE,0:DO,0	20
0x4000040	              0x55	                                push rbp	       784	git-compat-util.h	FUNCTION_38
0x4000041	          0x4889e5	                            mov rbp, rsp	       784	git-compat-util.h	FUNCTION_38
0x4000044	        0x4883ec10	                           sub rsp, 0x10	       784	git-compat-util.h	FUNCTION_38
0x4000048	        0x48897df8	                mov qword [rbp - 8], rdi	       784	git-compat-util.h	FUNCTION_38
0x400004c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       784	git-compat-util.h	FUNCTION_38
0x4000050	        0x488b45f8	                mov rax, qword [rbp - 8]	       785	git-compat-util.h	FUNCTION_38	IF_1
0x4000054	          0x48f7d0	                                 not rax	       785	git-compat-util.h	FUNCTION_38	IF_1
0x4000057	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       785	git-compat-util.h	FUNCTION_38	IF_1
0x400005b	            0x731a	                           jae 0x4000077	       785	git-compat-util.h	FUNCTION_38	IF_1
0x400005d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x4000061	        0x488b45f8	                mov rax, qword [rbp - 8]	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x4000065	          0x4889c6	                            mov rsi, rax	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x4000068	      0xbf00000000	                              mov edi, 0	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x400006d	      0xb800000000	                              mov eax, 0	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x4000072	      0xe800000000	                          call 0x4000077	       786	git-compat-util.h	FUNCTION_38	IF_1	CALL_1
0x4000077	        0x488b55f8	                mov rdx, qword [rbp - 8]	       788	git-compat-util.h	FUNCTION_38
0x400007b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       788	git-compat-util.h	FUNCTION_38
0x400007f	          0x4801d0	                            add rax, rdx	       788	git-compat-util.h	FUNCTION_38
0x4000082	              0xc9	                                   leave	       789	git-compat-util.h	FUNCTION_38
0x4000083	              0xc3	                                     ret	       789	git-compat-util.h	FUNCTION_38
sane_qsort	FOR,0:SWITCH,0:functions,0:CALL,0:IF,1:ELSE,0:WHILE,0:DO,0	18
0x4000121	              0x55	                                push rbp	      1047	git-compat-util.h	FUNCTION_49
0x4000122	          0x4889e5	                            mov rbp, rsp	      1047	git-compat-util.h	FUNCTION_49
0x4000125	        0x4883ec20	                           sub rsp, 0x20	      1047	git-compat-util.h	FUNCTION_49
0x4000129	        0x48897df8	                mov qword [rbp - 8], rdi	      1047	git-compat-util.h	FUNCTION_49
0x400012d	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1047	git-compat-util.h	FUNCTION_49
0x4000131	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1047	git-compat-util.h	FUNCTION_49
0x4000135	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1047	git-compat-util.h	FUNCTION_49
0x4000139	      0x48837df001	               cmp qword [rbp - 0x10], 1	      1048	git-compat-util.h	FUNCTION_49	IF_1
0x400013e	            0x7618	                           jbe 0x4000158	      1048	git-compat-util.h	FUNCTION_49	IF_1
0x4000140	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1049	git-compat-util.h	FUNCTION_49	IF_1
0x4000144	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1049	git-compat-util.h	FUNCTION_49	IF_1
0x4000148	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1049	git-compat-util.h	FUNCTION_49	IF_1
0x400014c	        0x488b45f8	                mov rax, qword [rbp - 8]	      1049	git-compat-util.h	FUNCTION_49	IF_1
0x4000150	          0x4889c7	                            mov rdi, rax	      1049	git-compat-util.h	FUNCTION_49	IF_1
0x4000153	      0xe800000000	                          call 0x4000158	      1049	git-compat-util.h	FUNCTION_49	IF_1
0x4000158	              0x90	                                     nop	      1050	git-compat-util.h	FUNCTION_49
0x4000159	              0xc9	                                   leave	      1050	git-compat-util.h	FUNCTION_49
0x400015a	              0xc3	                                     ret	      1050	git-compat-util.h	FUNCTION_49
oidcmp	FOR,0:SWITCH,0:functions,0:CALL,1:IF,0:ELSE,0:WHILE,0:DO,0	12
0x4000185	              0x55	                                push rbp	       979	cache.h	FUNCTION_60
0x4000186	          0x4889e5	                            mov rbp, rsp	       979	cache.h	FUNCTION_60
0x4000189	        0x4883ec10	                           sub rsp, 0x10	       979	cache.h	FUNCTION_60
0x400018d	        0x48897df8	                mov qword [rbp - 8], rdi	       979	cache.h	FUNCTION_60
0x4000191	        0x488975f0	             mov qword [rbp - 0x10], rsi	       979	cache.h	FUNCTION_60
0x4000195	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       980	cache.h	FUNCTION_60	CALL_1
0x4000199	        0x488b45f8	                mov rax, qword [rbp - 8]	       980	cache.h	FUNCTION_60	CALL_1
0x400019d	          0x4889d6	                            mov rsi, rdx	       980	cache.h	FUNCTION_60	CALL_1
0x40001a0	          0x4889c7	                            mov rdi, rax	       980	cache.h	FUNCTION_60	CALL_1
0x40001a3	      0xe8b3ffffff	                        call sym.hashcmp	       980	cache.h	FUNCTION_60	CALL_1
0x40001a8	              0xc9	                                   leave	       981	cache.h	FUNCTION_60
0x40001a9	              0xc3	                                     ret	       981	cache.h	FUNCTION_60
add_ref_entry	FOR,0:SWITCH,0:functions,0:CALL,2:IF,1:ELSE,0:WHILE,0:DO,0	25
0x4000b6b	              0x55	                                push rbp	       251	ref-cache.c	FUNCTION_16
0x4000b6c	          0x4889e5	                            mov rbp, rsp	       251	ref-cache.c	FUNCTION_16
0x4000b6f	        0x4883ec10	                           sub rsp, 0x10	       251	ref-cache.c	FUNCTION_16
0x4000b73	        0x48897df8	                mov qword [rbp - 8], rdi	       251	ref-cache.c	FUNCTION_16
0x4000b77	        0x488975f0	             mov qword [rbp - 0x10], rsi	       251	ref-cache.c	FUNCTION_16
0x4000b7b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       252	ref-cache.c	FUNCTION_16	CALL_1
0x4000b7f	        0x488d4828	                   lea rcx, [rax + 0x28]	       252	ref-cache.c	FUNCTION_16	CALL_1
0x4000b83	        0x488b45f8	                mov rax, qword [rbp - 8]	       252	ref-cache.c	FUNCTION_16	CALL_1
0x4000b87	      0xba01000000	                              mov edx, 1	       252	ref-cache.c	FUNCTION_16	CALL_1
0x4000b8c	          0x4889ce	                            mov rsi, rcx	       252	ref-cache.c	FUNCTION_16	CALL_1
0x4000b8f	          0x4889c7	                            mov rdi, rax	       252	ref-cache.c	FUNCTION_16	CALL_1
0x4000b92	      0xe80afdffff	            call sym.find_containing_dir	       252	ref-cache.c	FUNCTION_16	CALL_1
0x4000b97	        0x488945f8	                mov qword [rbp - 8], rax	       252	ref-cache.c	FUNCTION_16	CALL_1
0x4000b9b	      0x48837df800	                  cmp qword [rbp - 8], 0	       253	ref-cache.c	FUNCTION_16	IF_1
0x4000ba0	            0x7507	                           jne 0x4000ba9	       253	ref-cache.c	FUNCTION_16	IF_1
0x4000ba2	      0xb8ffffffff	                     mov eax, 0xffffffff	       254	ref-cache.c	FUNCTION_16	IF_1
0x4000ba7	            0xeb18	                           jmp 0x4000bc1	       254	ref-cache.c	FUNCTION_16	IF_1
0x4000ba9	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       255	ref-cache.c	FUNCTION_16	CALL_2
0x4000bad	        0x488b45f8	                mov rax, qword [rbp - 8]	       255	ref-cache.c	FUNCTION_16	CALL_2
0x4000bb1	          0x4889d6	                            mov rsi, rdx	       255	ref-cache.c	FUNCTION_16	CALL_2
0x4000bb4	          0x4889c7	                            mov rdi, rax	       255	ref-cache.c	FUNCTION_16	CALL_2
0x4000bb7	      0xe800000000	                          call 0x4000bbc	       255	ref-cache.c	FUNCTION_16	CALL_2
0x4000bbc	      0xb800000000	                              mov eax, 0	       256	ref-cache.c	FUNCTION_16
0x4000bc1	              0xc9	                                   leave	       257	ref-cache.c	FUNCTION_16
0x4000bc2	              0xc3	                                     ret	       257	ref-cache.c	FUNCTION_16
find_containing_dir	FOR,1:SWITCH,0:functions,0:CALL,3:IF,1:ELSE,0:WHILE,0:DO,0	42
0x40008a1	              0x55	                                push rbp	       185	ref-cache.c	FUNCTION_13
0x40008a2	          0x4889e5	                            mov rbp, rsp	       185	ref-cache.c	FUNCTION_13
0x40008a5	        0x4883ec40	                           sub rsp, 0x40	       185	ref-cache.c	FUNCTION_13
0x40008a9	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       185	ref-cache.c	FUNCTION_13
0x40008ad	        0x488975d0	             mov qword [rbp - 0x30], rsi	       185	ref-cache.c	FUNCTION_13
0x40008b1	          0x8955cc	             mov dword [rbp - 0x34], edx	       185	ref-cache.c	FUNCTION_13
0x40008b4	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x40008b8	      0xbe2f000000	                           mov esi, 0x2f	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x40008bd	          0x4889c7	                            mov rdi, rax	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x40008c0	      0xe800000000	                          call 0x40008c5	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x40008c5	        0x488945e8	             mov qword [rbp - 0x18], rax	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x40008c9	            0xeb63	                           jmp 0x400092e	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x40008cb	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       188	ref-cache.c	FUNCTION_13	FOR_1
0x40008cf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       188	ref-cache.c	FUNCTION_13	FOR_1
0x40008d3	          0x4829c2	                            sub rdx, rax	       188	ref-cache.c	FUNCTION_13	FOR_1
0x40008d6	          0x4889d0	                            mov rax, rdx	       188	ref-cache.c	FUNCTION_13	FOR_1
0x40008d9	        0x4883c001	                              add rax, 1	       188	ref-cache.c	FUNCTION_13	FOR_1
0x40008dd	        0x488945f0	             mov qword [rbp - 0x10], rax	       188	ref-cache.c	FUNCTION_13	FOR_1
0x40008e1	          0x8b4dcc	             mov ecx, dword [rbp - 0x34]	       190	ref-cache.c	FUNCTION_13	FOR_1	CALL_3
0x40008e4	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       190	ref-cache.c	FUNCTION_13	FOR_1	CALL_3
0x40008e8	        0x488b75d0	             mov rsi, qword [rbp - 0x30]	       190	ref-cache.c	FUNCTION_13	FOR_1	CALL_3
0x40008ec	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       190	ref-cache.c	FUNCTION_13	FOR_1	CALL_3
0x40008f0	          0x4889c7	                            mov rdi, rax	       190	ref-cache.c	FUNCTION_13	FOR_1	CALL_3
0x40008f3	      0xe805ffffff	              call sym.search_for_subdir	       190	ref-cache.c	FUNCTION_13	FOR_1	CALL_3
0x40008f8	        0x488945f8	                mov qword [rbp - 8], rax	       190	ref-cache.c	FUNCTION_13	FOR_1	CALL_3
0x40008fc	      0x48837df800	                  cmp qword [rbp - 8], 0	       191	ref-cache.c	FUNCTION_13	FOR_1	IF_1
0x4000901	            0x750a	                           jne 0x400090d	       191	ref-cache.c	FUNCTION_13	FOR_1	IF_1
0x4000903	    0x48c745d80000	               mov qword [rbp - 0x28], 0	       192	ref-cache.c	FUNCTION_13	FOR_1	IF_1
0x400090b	            0xeb28	                           jmp 0x4000935	       193	ref-cache.c	FUNCTION_13	FOR_1	IF_1
0x400090d	        0x488b45f8	                mov rax, qword [rbp - 8]	       195	ref-cache.c	FUNCTION_13	FOR_1
0x4000911	        0x488945d8	             mov qword [rbp - 0x28], rax	       195	ref-cache.c	FUNCTION_13	FOR_1
0x4000915	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x4000919	        0x4883c001	                              add rax, 1	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x400091d	      0xbe2f000000	                           mov esi, 0x2f	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x4000922	          0x4889c7	                            mov rdi, rax	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x4000925	      0xe800000000	                          call 0x400092a	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x400092a	        0x488945e8	             mov qword [rbp - 0x18], rax	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x400092e	      0x48837de800	               cmp qword [rbp - 0x18], 0	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x4000933	            0x7596	                           jne 0x40008cb	       187	ref-cache.c	FUNCTION_13	FOR_1	CALL_2
0x4000935	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       198	ref-cache.c	FUNCTION_13
0x4000939	              0xc9	                                   leave	       199	ref-cache.c	FUNCTION_13
0x400093a	              0xc3	                                     ret	       199	ref-cache.c	FUNCTION_13
move_array	FOR,0:SWITCH,0:functions,0:CALL,2:IF,1:ELSE,0:WHILE,0:DO,0	23
0x40000d6	              0x55	                                push rbp	       860	git-compat-util.h	FUNCTION_42
0x40000d7	          0x4889e5	                            mov rbp, rsp	       860	git-compat-util.h	FUNCTION_42
0x40000da	        0x4883ec20	                           sub rsp, 0x20	       860	git-compat-util.h	FUNCTION_42
0x40000de	        0x48897df8	                mov qword [rbp - 8], rdi	       860	git-compat-util.h	FUNCTION_42
0x40000e2	        0x488975f0	             mov qword [rbp - 0x10], rsi	       860	git-compat-util.h	FUNCTION_42
0x40000e6	        0x488955e8	             mov qword [rbp - 0x18], rdx	       860	git-compat-util.h	FUNCTION_42
0x40000ea	        0x48894de0	             mov qword [rbp - 0x20], rcx	       860	git-compat-util.h	FUNCTION_42
0x40000ee	      0x48837de800	               cmp qword [rbp - 0x18], 0	       861	git-compat-util.h	FUNCTION_42	IF_1
0x40000f3	            0x7429	                            je 0x400011e	       861	git-compat-util.h	FUNCTION_42	IF_1
0x40000f5	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       862	git-compat-util.h	FUNCTION_42	CALL_2
0x40000f9	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       862	git-compat-util.h	FUNCTION_42	CALL_2
0x40000fd	          0x4889d6	                            mov rsi, rdx	       862	git-compat-util.h	FUNCTION_42	CALL_2
0x4000100	          0x4889c7	                            mov rdi, rax	       862	git-compat-util.h	FUNCTION_42	CALL_2
0x4000103	      0xe87cffffff	                        call sym.st_mult	       862	git-compat-util.h	FUNCTION_42	CALL_2
0x4000108	          0x4889c2	                            mov rdx, rax	       862	git-compat-util.h	FUNCTION_42	CALL_2
0x400010b	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       862	git-compat-util.h	FUNCTION_42	CALL_2
0x400010f	        0x488b45f8	                mov rax, qword [rbp - 8]	       862	git-compat-util.h	FUNCTION_42	CALL_2
0x4000113	          0x4889ce	                            mov rsi, rcx	       862	git-compat-util.h	FUNCTION_42	CALL_2
0x4000116	          0x4889c7	                            mov rdi, rax	       862	git-compat-util.h	FUNCTION_42	CALL_2
0x4000119	      0xe800000000	                          call 0x400011e	       862	git-compat-util.h	FUNCTION_42	CALL_2
0x400011e	              0x90	                                     nop	       863	git-compat-util.h	FUNCTION_42
0x400011f	              0xc9	                                   leave	       863	git-compat-util.h	FUNCTION_42
0x4000120	              0xc3	                                     ret	       863	git-compat-util.h	FUNCTION_42
sort_ref_dir	FOR,1:SWITCH,0:functions,0:CALL,2:IF,2:ELSE,1:WHILE,0:DO,0	72
0x4000c92	              0x55	                                push rbp	       287	ref-cache.c	FUNCTION_18
0x4000c93	          0x4889e5	                            mov rbp, rsp	       287	ref-cache.c	FUNCTION_18
0x4000c96	        0x4883ec30	                           sub rsp, 0x30	       287	ref-cache.c	FUNCTION_18
0x4000c9a	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       287	ref-cache.c	FUNCTION_18
0x4000c9e	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       289	ref-cache.c	FUNCTION_18
0x4000ca6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       295	ref-cache.c	FUNCTION_18	IF_1
0x4000caa	          0x8b5008	                mov edx, dword [rax + 8]	       295	ref-cache.c	FUNCTION_18	IF_1
0x4000cad	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       295	ref-cache.c	FUNCTION_18	IF_1
0x4000cb1	            0x8b00	                    mov eax, dword [rax]	       295	ref-cache.c	FUNCTION_18	IF_1
0x4000cb3	            0x39c2	                            cmp edx, eax	       295	ref-cache.c	FUNCTION_18	IF_1
0x4000cb5	     0xf84ca000000	                            je 0x4000d85	       295	ref-cache.c	FUNCTION_18	IF_1
0x4000cbb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       298	ref-cache.c	FUNCTION_18
0x4000cbf	            0x8b00	                    mov eax, dword [rax]	       298	ref-cache.c	FUNCTION_18
0x4000cc1	          0x4863f0	                         movsxd rsi, eax	       298	ref-cache.c	FUNCTION_18
0x4000cc4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       298	ref-cache.c	FUNCTION_18
0x4000cc8	        0x488b4018	            mov rax, qword [rax + 0x18] 	       298	ref-cache.c	FUNCTION_18
0x4000ccc	      0xb900000000	                              mov ecx, 0	       298	ref-cache.c	FUNCTION_18
0x4000cd1	      0xba08000000	                              mov edx, 8	       298	ref-cache.c	FUNCTION_18
0x4000cd6	          0x4889c7	                            mov rdi, rax	       298	ref-cache.c	FUNCTION_18
0x4000cd9	      0xe843f4ffff	                     call sym.sane_qsort	       298	ref-cache.c	FUNCTION_18
0x4000cde	    0xc745e8000000	               mov dword [rbp - 0x18], 0	       301	ref-cache.c	FUNCTION_18	FOR_1
0x4000ce5	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       301	ref-cache.c	FUNCTION_18	FOR_1
0x4000cec	            0xeb74	                           jmp 0x4000d62	       301	ref-cache.c	FUNCTION_18	FOR_1
0x4000cee	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       302	ref-cache.c	FUNCTION_18	FOR_1
0x4000cf2	        0x488b4018	            mov rax, qword [rax + 0x18] 	       302	ref-cache.c	FUNCTION_18	FOR_1
0x4000cf6	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       302	ref-cache.c	FUNCTION_18	FOR_1
0x4000cf9	          0x4863d2	                         movsxd rdx, edx	       302	ref-cache.c	FUNCTION_18	FOR_1
0x4000cfc	        0x48c1e203	                              shl rdx, 3	       302	ref-cache.c	FUNCTION_18	FOR_1
0x4000d00	          0x4801d0	                            add rax, rdx	       302	ref-cache.c	FUNCTION_18	FOR_1
0x4000d03	          0x488b00	                    mov rax, qword [rax]	       302	ref-cache.c	FUNCTION_18	FOR_1
0x4000d06	        0x488945f8	                mov qword [rbp - 8], rax	       302	ref-cache.c	FUNCTION_18	FOR_1
0x4000d0a	      0x48837df000	               cmp qword [rbp - 0x10], 0	       303	ref-cache.c	FUNCTION_18	FOR_1	IF_2	CALL_1
0x4000d0f	            0x7425	                            je 0x4000d36	       303	ref-cache.c	FUNCTION_18	FOR_1	IF_2	CALL_1
0x4000d11	        0x488b55f8	                mov rdx, qword [rbp - 8]	       303	ref-cache.c	FUNCTION_18	FOR_1	IF_2	CALL_1
0x4000d15	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       303	ref-cache.c	FUNCTION_18	FOR_1	IF_2	CALL_1
0x4000d19	          0x4889d6	                            mov rsi, rdx	       303	ref-cache.c	FUNCTION_18	FOR_1	IF_2	CALL_1
0x4000d1c	          0x4889c7	                            mov rdi, rax	       303	ref-cache.c	FUNCTION_18	FOR_1	IF_2	CALL_1
0x4000d1f	      0xe89ffeffff	                     call sym.is_dup_ref	       303	ref-cache.c	FUNCTION_18	FOR_1	IF_2	CALL_1
0x4000d24	            0x85c0	                           test eax, eax	       303	ref-cache.c	FUNCTION_18	FOR_1	IF_2	CALL_1
0x4000d26	            0x740e	                            je 0x4000d36	       303	ref-cache.c	FUNCTION_18	FOR_1	IF_2	CALL_1
0x4000d28	        0x488b45f8	                mov rax, qword [rbp - 8]	       304	ref-cache.c	FUNCTION_18	FOR_1	CALL_2
0x4000d2c	          0x4889c7	                            mov rdi, rax	       304	ref-cache.c	FUNCTION_18	FOR_1	CALL_2
0x4000d2f	      0xe8def7ffff	                 call sym.free_ref_entry	       304	ref-cache.c	FUNCTION_18	FOR_1	CALL_2
0x4000d34	            0xeb28	                           jmp 0x4000d5e	       304	ref-cache.c	FUNCTION_18	FOR_1	CALL_2
0x4000d36	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       306	ref-cache.c	FUNCTION_18	FOR_1	ELSE_1
0x4000d3a	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       306	ref-cache.c	FUNCTION_18	FOR_1	ELSE_1
0x4000d3e	          0x8b45e8	             mov eax, dword [rbp - 0x18]	       306	ref-cache.c	FUNCTION_18	FOR_1	ELSE_1
0x4000d41	          0x8d5001	                      lea edx, [rax + 1]	       306	ref-cache.c	FUNCTION_18	FOR_1	ELSE_1
0x4000d44	          0x8955e8	             mov dword [rbp - 0x18], edx	       306	ref-cache.c	FUNCTION_18	FOR_1	ELSE_1
0x4000d47	            0x4898	                                    cdqe	       306	ref-cache.c	FUNCTION_18	FOR_1	ELSE_1
0x4000d49	        0x48c1e003	                              shl rax, 3	       306	ref-cache.c	FUNCTION_18	FOR_1	ELSE_1
0x4000d4d	          0x4801c8	                            add rax, rcx	       306	ref-cache.c	FUNCTION_18	FOR_1	ELSE_1
0x4000d50	        0x488b55f8	                mov rdx, qword [rbp - 8]	       306	ref-cache.c	FUNCTION_18	FOR_1	ELSE_1
0x4000d54	          0x488910	                    mov qword [rax], rdx	       306	ref-cache.c	FUNCTION_18	FOR_1	ELSE_1
0x4000d57	          0x488b00	                    mov rax, qword [rax]	       306	ref-cache.c	FUNCTION_18	FOR_1	ELSE_1
0x4000d5a	        0x488945f0	             mov qword [rbp - 0x10], rax	       306	ref-cache.c	FUNCTION_18	FOR_1	ELSE_1
0x4000d5e	        0x8345ec01	               add dword [rbp - 0x14], 1	       301	ref-cache.c	FUNCTION_18	FOR_1
0x4000d62	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       301	ref-cache.c	FUNCTION_18	FOR_1
0x4000d66	            0x8b00	                    mov eax, dword [rax]	       301	ref-cache.c	FUNCTION_18	FOR_1
0x4000d68	          0x3b45ec	             cmp eax, dword [rbp - 0x14]	       301	ref-cache.c	FUNCTION_18	FOR_1
0x4000d6b	            0x7f81	                            jg 0x4000cee	       301	ref-cache.c	FUNCTION_18	FOR_1
0x4000d6d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       308	ref-cache.c	FUNCTION_18	ELSE_1
0x4000d71	          0x8b55e8	             mov edx, dword [rbp - 0x18]	       308	ref-cache.c	FUNCTION_18	ELSE_1
0x4000d74	            0x8910	                    mov dword [rax], edx	       308	ref-cache.c	FUNCTION_18	ELSE_1
0x4000d76	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       308	ref-cache.c	FUNCTION_18	ELSE_1
0x4000d7a	            0x8b10	                    mov edx, dword [rax]	       308	ref-cache.c	FUNCTION_18	ELSE_1
0x4000d7c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       308	ref-cache.c	FUNCTION_18	ELSE_1
0x4000d80	          0x895008	                mov dword [rax + 8], edx	       308	ref-cache.c	FUNCTION_18	ELSE_1
0x4000d83	            0xeb01	                           jmp 0x4000d86	       308	ref-cache.c	FUNCTION_18	ELSE_1
0x4000d85	              0x90	                                     nop	       296	ref-cache.c	FUNCTION_18	IF_1
0x4000d86	              0xc9	                                   leave	       309	ref-cache.c	FUNCTION_18	ELSE_1
0x4000d87	              0xc3	                                     ret	       309	ref-cache.c	FUNCTION_18	ELSE_1
search_for_subdir	FOR,0:SWITCH,0:functions,0:CALL,4:IF,2:ELSE,1:WHILE,0:DO,0	47
0x40007fd	              0x55	                                push rbp	       154	ref-cache.c	FUNCTION_12
0x40007fe	          0x4889e5	                            mov rbp, rsp	       154	ref-cache.c	FUNCTION_12
0x4000801	        0x4883ec30	                           sub rsp, 0x30	       154	ref-cache.c	FUNCTION_12
0x4000805	        0x48897de8	             mov qword [rbp - 0x18], rdi	       154	ref-cache.c	FUNCTION_12
0x4000809	        0x488975e0	             mov qword [rbp - 0x20], rsi	       154	ref-cache.c	FUNCTION_12
0x400080d	        0x488955d8	             mov qword [rbp - 0x28], rdx	       154	ref-cache.c	FUNCTION_12
0x4000811	          0x894dd4	             mov dword [rbp - 0x2c], ecx	       154	ref-cache.c	FUNCTION_12
0x4000814	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       155	ref-cache.c	FUNCTION_12	CALL_1
0x4000818	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       155	ref-cache.c	FUNCTION_12	CALL_1
0x400081c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       155	ref-cache.c	FUNCTION_12	CALL_1
0x4000820	          0x4889ce	                            mov rsi, rcx	       155	ref-cache.c	FUNCTION_12	CALL_1
0x4000823	          0x4889c7	                            mov rdi, rax	       155	ref-cache.c	FUNCTION_12	CALL_1
0x4000826	      0xe800000000	                          call 0x400082b	       155	ref-cache.c	FUNCTION_12	CALL_1
0x400082b	          0x8945f4	              mov dword [rbp - 0xc], eax	       155	ref-cache.c	FUNCTION_12	CALL_1
0x400082e	        0x837df4ff	cmp dword [rbp - 0xc], 0xffffffffffffffff	       157	ref-cache.c	FUNCTION_12	IF_1
0x4000832	            0x7543	                           jne 0x4000877	       157	ref-cache.c	FUNCTION_12	IF_1
0x4000834	        0x837dd400	               cmp dword [rbp - 0x2c], 0	       158	ref-cache.c	FUNCTION_12	IF_1	IF_2
0x4000838	            0x7507	                           jne 0x4000841	       158	ref-cache.c	FUNCTION_12	IF_1	IF_2
0x400083a	      0xb800000000	                              mov eax, 0	       159	ref-cache.c	FUNCTION_12	IF_1	IF_2
0x400083f	            0xeb5e	                           jmp 0x400089f	       159	ref-cache.c	FUNCTION_12	IF_1	IF_2
0x4000841	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       166	ref-cache.c	FUNCTION_12	IF_1	CALL_2
0x4000845	        0x488b4010	            mov rax, qword [rax + 0x10] 	       166	ref-cache.c	FUNCTION_12	IF_1	CALL_2
0x4000849	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       166	ref-cache.c	FUNCTION_12	IF_1	CALL_2
0x400084d	        0x488b75e0	             mov rsi, qword [rbp - 0x20]	       166	ref-cache.c	FUNCTION_12	IF_1	CALL_2
0x4000851	      0xb900000000	                              mov ecx, 0	       166	ref-cache.c	FUNCTION_12	IF_1	CALL_2
0x4000856	          0x4889c7	                            mov rdi, rax	       166	ref-cache.c	FUNCTION_12	IF_1	CALL_2
0x4000859	      0xe800000000	                          call 0x400085e	       166	ref-cache.c	FUNCTION_12	IF_1	CALL_2
0x400085e	        0x488945f8	                mov qword [rbp - 8], rax	       166	ref-cache.c	FUNCTION_12	IF_1	CALL_2
0x4000862	        0x488b55f8	                mov rdx, qword [rbp - 8]	       167	ref-cache.c	FUNCTION_12	IF_1	CALL_3
0x4000866	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       167	ref-cache.c	FUNCTION_12	IF_1	CALL_3
0x400086a	          0x4889d6	                            mov rsi, rdx	       167	ref-cache.c	FUNCTION_12	IF_1	CALL_3
0x400086d	          0x4889c7	                            mov rdi, rax	       167	ref-cache.c	FUNCTION_12	IF_1	CALL_3
0x4000870	      0xe800000000	                          call 0x4000875	       167	ref-cache.c	FUNCTION_12	IF_1	CALL_3
0x4000875	            0xeb1c	                           jmp 0x4000893	       167	ref-cache.c	FUNCTION_12	IF_1	CALL_3
0x4000877	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       169	ref-cache.c	FUNCTION_12	ELSE_1
0x400087b	        0x488b4018	            mov rax, qword [rax + 0x18] 	       169	ref-cache.c	FUNCTION_12	ELSE_1
0x400087f	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       169	ref-cache.c	FUNCTION_12	ELSE_1
0x4000882	          0x4863d2	                         movsxd rdx, edx	       169	ref-cache.c	FUNCTION_12	ELSE_1
0x4000885	        0x48c1e203	                              shl rdx, 3	       169	ref-cache.c	FUNCTION_12	ELSE_1
0x4000889	          0x4801d0	                            add rax, rdx	       169	ref-cache.c	FUNCTION_12	ELSE_1
0x400088c	          0x488b00	                    mov rax, qword [rax]	       169	ref-cache.c	FUNCTION_12	ELSE_1
0x400088f	        0x488945f8	                mov qword [rbp - 8], rax	       169	ref-cache.c	FUNCTION_12	ELSE_1
0x4000893	        0x488b45f8	                mov rax, qword [rbp - 8]	       171	ref-cache.c	FUNCTION_12	CALL_4
0x4000897	          0x4889c7	                            mov rdi, rax	       171	ref-cache.c	FUNCTION_12	CALL_4
0x400089a	      0xe800000000	                          call 0x400089f	       171	ref-cache.c	FUNCTION_12	CALL_4
0x400089f	              0xc9	                                   leave	       172	ref-cache.c	FUNCTION_12
0x40008a0	              0xc3	                                     ret	       172	ref-cache.c	FUNCTION_12
create_ref_entry	FOR,0:SWITCH,0:functions,0:CALL,1:IF,0:ELSE,0:WHILE,0:DO,0	41
0x4000417	              0x55	                                push rbp	        36	ref-cache.c	FUNCTION_3
0x4000418	          0x4889e5	                            mov rbp, rsp	        36	ref-cache.c	FUNCTION_3
0x400041b	        0x4883ec30	                           sub rsp, 0x30	        36	ref-cache.c	FUNCTION_3
0x400041f	        0x48897de8	             mov qword [rbp - 0x18], rdi	        36	ref-cache.c	FUNCTION_3
0x4000423	        0x488975e0	             mov qword [rbp - 0x20], rsi	        36	ref-cache.c	FUNCTION_3
0x4000427	          0x8955dc	             mov dword [rbp - 0x24], edx	        36	ref-cache.c	FUNCTION_3
0x400042a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        39	ref-cache.c	FUNCTION_3
0x400042e	          0x4889c7	                            mov rdi, rax	        39	ref-cache.c	FUNCTION_3
0x4000431	      0xe800000000	                          call 0x4000436	        39	ref-cache.c	FUNCTION_3
0x4000436	        0x488945f0	             mov qword [rbp - 0x10], rax	        39	ref-cache.c	FUNCTION_3
0x400043a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        39	ref-cache.c	FUNCTION_3
0x400043e	          0x4889c6	                            mov rsi, rax	        39	ref-cache.c	FUNCTION_3
0x4000441	      0xbf28000000	                           mov edi, 0x28	        39	ref-cache.c	FUNCTION_3
0x4000446	      0xe8f5fbffff	                         call sym.st_add	        39	ref-cache.c	FUNCTION_3
0x400044b	      0xbe01000000	                              mov esi, 1	        39	ref-cache.c	FUNCTION_3
0x4000450	          0x4889c7	                            mov rdi, rax	        39	ref-cache.c	FUNCTION_3
0x4000453	      0xe8e8fbffff	                         call sym.st_add	        39	ref-cache.c	FUNCTION_3
0x4000458	          0x4889c6	                            mov rsi, rax	        39	ref-cache.c	FUNCTION_3
0x400045b	      0xbf01000000	                              mov edi, 1	        39	ref-cache.c	FUNCTION_3
0x4000460	      0xe800000000	                          call 0x4000465	        39	ref-cache.c	FUNCTION_3
0x4000465	        0x488945f8	                mov qword [rbp - 8], rax	        39	ref-cache.c	FUNCTION_3
0x4000469	        0x488b45f8	                mov rax, qword [rbp - 8]	        39	ref-cache.c	FUNCTION_3
0x400046d	        0x488d4828	                   lea rcx, [rax + 0x28]	        39	ref-cache.c	FUNCTION_3
0x4000471	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        39	ref-cache.c	FUNCTION_3
0x4000475	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        39	ref-cache.c	FUNCTION_3
0x4000479	          0x4889c6	                            mov rsi, rax	        39	ref-cache.c	FUNCTION_3
0x400047c	          0x4889cf	                            mov rdi, rcx	        39	ref-cache.c	FUNCTION_3
0x400047f	      0xe800000000	                          call 0x4000484	        39	ref-cache.c	FUNCTION_3
0x4000484	        0x488b45f8	                mov rax, qword [rbp - 8]	        40	ref-cache.c	FUNCTION_3	CALL_1
0x4000488	        0x488d5008	                      lea rdx, [rax + 8]	        40	ref-cache.c	FUNCTION_3	CALL_1
0x400048c	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        40	ref-cache.c	FUNCTION_3	CALL_1
0x4000490	          0x4889c6	                            mov rsi, rax	        40	ref-cache.c	FUNCTION_3	CALL_1
0x4000493	          0x4889d7	                            mov rdi, rdx	        40	ref-cache.c	FUNCTION_3	CALL_1
0x4000496	      0xe83afdffff	                         call sym.oidcpy	        40	ref-cache.c	FUNCTION_3	CALL_1
0x400049b	          0x8b45dc	             mov eax, dword [rbp - 0x24]	        41	ref-cache.c	FUNCTION_3
0x400049e	            0x89c2	                            mov edx, eax	        41	ref-cache.c	FUNCTION_3
0x40004a0	        0x488b45f8	                mov rax, qword [rbp - 8]	        41	ref-cache.c	FUNCTION_3
0x40004a4	            0x8810	                      mov byte [rax], dl	        41	ref-cache.c	FUNCTION_3
0x40004a6	        0x488b45f8	                mov rax, qword [rbp - 8]	        42	ref-cache.c	FUNCTION_3
0x40004aa	              0xc9	                                   leave	        43	ref-cache.c	FUNCTION_3
0x40004ab	              0xc3	                                     ret	        43	ref-cache.c	FUNCTION_3
overlaps_prefix	FOR,0:SWITCH,0:functions,0:CALL,0:IF,2:ELSE,2:WHILE,1:DO,0	32
0x4000d88	              0x55	                                push rbp	       328	ref-cache.c	ELSE_1	FUNCTION_19
0x4000d89	          0x4889e5	                            mov rbp, rsp	       328	ref-cache.c	ELSE_1	FUNCTION_19
0x4000d8c	        0x48897df8	                mov qword [rbp - 8], rdi	       328	ref-cache.c	ELSE_1	FUNCTION_19
0x4000d90	        0x488975f0	             mov qword [rbp - 0x10], rsi	       328	ref-cache.c	ELSE_1	FUNCTION_19
0x4000d94	            0xeb0a	                           jmp 0x4000da0	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x4000d96	      0x488345f801	                  add qword [rbp - 8], 1	       330	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x4000d9b	      0x488345f001	               add qword [rbp - 0x10], 1	       331	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x4000da0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x4000da4	           0xfb600	                   movzx eax, byte [rax]	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x4000da7	            0x84c0	                             test al, al	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x4000da9	            0x7412	                            je 0x4000dbd	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x4000dab	        0x488b45f8	                mov rax, qword [rbp - 8]	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x4000daf	           0xfb610	                   movzx edx, byte [rax]	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x4000db2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x4000db6	           0xfb600	                   movzx eax, byte [rax]	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x4000db9	            0x38c2	                              cmp dl, al	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x4000dbb	            0x74d9	                            je 0x4000d96	       329	ref-cache.c	ELSE_1	FUNCTION_19	WHILE_1
0x4000dbd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       333	ref-cache.c	ELSE_1	FUNCTION_19	IF_1
0x4000dc1	           0xfb600	                   movzx eax, byte [rax]	       333	ref-cache.c	ELSE_1	FUNCTION_19	IF_1
0x4000dc4	            0x84c0	                             test al, al	       333	ref-cache.c	ELSE_1	FUNCTION_19	IF_1
0x4000dc6	            0x7507	                           jne 0x4000dcf	       333	ref-cache.c	ELSE_1	FUNCTION_19	IF_1
0x4000dc8	      0xb800000000	                              mov eax, 0	       334	ref-cache.c	ELSE_1	FUNCTION_19	IF_1
0x4000dcd	            0xeb17	                           jmp 0x4000de6	       334	ref-cache.c	ELSE_1	FUNCTION_19	IF_1
0x4000dcf	        0x488b45f8	                mov rax, qword [rbp - 8]	       335	ref-cache.c	FUNCTION_19	IF_2
0x4000dd3	           0xfb600	                   movzx eax, byte [rax]	       335	ref-cache.c	FUNCTION_19	IF_2
0x4000dd6	            0x84c0	                             test al, al	       335	ref-cache.c	FUNCTION_19	IF_2
0x4000dd8	            0x7507	                           jne 0x4000de1	       335	ref-cache.c	FUNCTION_19	IF_2
0x4000dda	      0xb801000000	                              mov eax, 1	       336	ref-cache.c	FUNCTION_19	IF_2	ELSE_1
0x4000ddf	            0xeb05	                           jmp 0x4000de6	       336	ref-cache.c	FUNCTION_19	IF_2	ELSE_1
0x4000de1	      0xb802000000	                              mov eax, 2	       338	ref-cache.c	FUNCTION_19	ELSE_1	ELSE_2
0x4000de6	              0x5d	                                 pop rbp	       339	ref-cache.c	FUNCTION_19	ELSE_1	ELSE_2
0x4000de7	              0xc3	                                     ret	       339	ref-cache.c	FUNCTION_19	ELSE_1	ELSE_2
