option_parse_m	WHILE,0:functions,0:FOR,0:SWITCH,0:CALL,2:ELSE,0:IF,2:DO,0	37
0x40000e5	              0x55	                                push rbp	        60	revert.c	FUNCTION_4
0x40000e6	              0x53	                                push rbx	        60	revert.c	FUNCTION_4
0x40000e7	        0x4883ec18	                           sub rsp, 0x18	        60	revert.c	FUNCTION_4
0x40000eb	          0x4889fb	                            mov rbx, rdi	        60	revert.c	FUNCTION_4
0x40000ee	    0x64488b042528	                mov rax, qword fs:[0x28]	        60	revert.c	FUNCTION_4
0x40000f7	      0x4889442408	                mov qword [rsp + 8], rax	        60	revert.c	FUNCTION_4
0x40000fc	            0x31c0	                            xor eax, eax	        60	revert.c	FUNCTION_4
0x40000fe	        0x488b6f10	            mov rbp, qword [rdi + 0x10] 	        61	revert.c	FUNCTION_4
0x4000102	            0x85d2	                           test edx, edx	        64	revert.c	FUNCTION_4	IF_1
0x4000104	            0x7409	                            je 0x400010f	        64	revert.c	FUNCTION_4	IF_1
0x4000106	    0xc7452c000000	               mov dword [rbp + 0x2c], 0	        65	revert.c	FUNCTION_4	IF_1
0x400010d	            0xeb3e	                           jmp 0x400014d	        66	revert.c	FUNCTION_4	IF_1
0x400010f	          0x4889f7	                            mov rdi, rsi	        66	revert.c	FUNCTION_4	IF_1
0x4000112	      0xba0a000000	                            mov edx, 0xa	        69	revert.c	FUNCTION_4	CALL_1
0x4000117	          0x4889e6	                            mov rsi, rsp	        69	revert.c	FUNCTION_4	CALL_1
0x400011a	      0xe800000000	                          call 0x400011f	        69	revert.c	FUNCTION_4	CALL_1
0x400011f	          0x89452c	            mov dword [rbp + 0x2c], eax 	        69	revert.c	FUNCTION_4	CALL_1
0x4000122	        0x488b1424	                    mov rdx, qword [rsp]	        70	revert.c	FUNCTION_4	IF_2
0x4000126	          0x803a00	                       cmp byte [rdx], 0	        70	revert.c	FUNCTION_4	IF_2
0x4000129	            0x7504	                           jne 0x400012f	        70	revert.c	FUNCTION_4	IF_2
0x400012b	            0x85c0	                           test eax, eax	        70	revert.c	FUNCTION_4	IF_2
0x400012d	            0x7f19	                            jg 0x4000148	        70	revert.c	FUNCTION_4	IF_2
0x400012f	      0xba00000000	                              mov edx, 0	        71	revert.c	FUNCTION_4	CALL_2
0x4000134	      0xbe00000000	                              mov esi, 0	        71	revert.c	FUNCTION_4	CALL_2
0x4000139	          0x4889df	                            mov rdi, rbx	        71	revert.c	FUNCTION_4	CALL_2
0x400013c	      0xe800000000	                          call 0x4000141	        71	revert.c	FUNCTION_4	CALL_2
0x4000141	      0xb8ffffffff	                     mov eax, 0xffffffff	        71	revert.c	FUNCTION_4	CALL_2
0x4000146	            0xeb05	                           jmp 0x400014d	        71	revert.c	FUNCTION_4	CALL_2
0x4000148	      0xb800000000	                              mov eax, 0	        73	revert.c	FUNCTION_4
0x400014d	      0x488b4c2408	                mov rcx, qword [rsp + 8]	        74	revert.c	FUNCTION_4
0x4000152	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        74	revert.c	FUNCTION_4
0x400015b	            0x7405	                            je 0x4000162	        74	revert.c	FUNCTION_4
0x400015d	      0xe800000000	                          call 0x4000162	        74	revert.c	FUNCTION_4
0x4000162	        0x4883c418	                           add rsp, 0x18	        74	revert.c	FUNCTION_4
0x4000166	              0x5b	                                 pop rbx	        74	revert.c	FUNCTION_4
0x4000167	              0x5d	                                 pop rbp	        74	revert.c	FUNCTION_4
0x4000168	              0xc3	                                     ret	        74	revert.c	FUNCTION_4
cmd_cherry_pick	WHILE,0:functions,0:FOR,0:SWITCH,0:CALL,4:ELSE,0:IF,1:DO,0	36
0x4000b57	              0x55	                                push rbp	       219	revert.c	FUNCTION_8
0x4000b58	              0x53	                                push rbx	       219	revert.c	FUNCTION_8
0x4000b59	    0x4881ec980000	                           sub rsp, 0x98	       219	revert.c	FUNCTION_8
0x4000b60	            0x89fb	                            mov ebx, edi	       219	revert.c	FUNCTION_8
0x4000b62	          0x4889f5	                            mov rbp, rsi	       219	revert.c	FUNCTION_8
0x4000b65	    0x64488b042528	                mov rax, qword fs:[0x28]	       219	revert.c	FUNCTION_8
0x4000b6e	    0x488984248800	             mov qword [rsp + 0x88], rax	       219	revert.c	FUNCTION_8
0x4000b76	            0x31c0	                            xor eax, eax	       219	revert.c	FUNCTION_8
0x4000b78	          0x4889e7	                            mov rdi, rsp	       220	revert.c	FUNCTION_8
0x4000b7b	      0xb911000000	                           mov ecx, 0x11	       220	revert.c	FUNCTION_8
0x4000b80	          0xf348ab	              rep stosq qword [rdi], rax	       220	revert.c	FUNCTION_8
0x4000b83	    0x48c744247000	               mov qword [rsp + 0x70], 0	       220	revert.c	FUNCTION_8
0x4000b8c	    0xc70424010000	                      mov dword [rsp], 1	       223	revert.c	FUNCTION_8
0x4000b93	          0x4889e7	                            mov rdi, rsp	       224	revert.c	FUNCTION_8	CALL_1
0x4000b96	      0xe800000000	                          call 0x4000b9b	       224	revert.c	FUNCTION_8	CALL_1
0x4000b9b	          0x4889e2	                            mov rdx, rsp	       225	revert.c	FUNCTION_8	CALL_2
0x4000b9e	          0x4889ee	                            mov rsi, rbp	       225	revert.c	FUNCTION_8	CALL_2
0x4000ba1	            0x89df	                            mov edi, ebx	       225	revert.c	FUNCTION_8	CALL_2
0x4000ba3	      0xe8bef6ffff	                  call sym.run_sequencer	       225	revert.c	FUNCTION_8	CALL_2
0x4000ba8	            0x85c0	                           test eax, eax	       226	revert.c	FUNCTION_8	IF_1
0x4000baa	            0x7921	                           jns 0x4000bcd	       226	revert.c	FUNCTION_8	IF_1
0x4000bac	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_11	CALL_2
0x4000bb1	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_11	CALL_2
0x4000bb6	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_11	CALL_2
0x4000bbb	      0xe800000000	                          call 0x4000bc0	        54	gettext.h	FUNCTION_11	CALL_2
0x4000bc0	          0x4889c7	                            mov rdi, rax	       227	revert.c	FUNCTION_8	CALL_4
0x4000bc3	      0xb800000000	                              mov eax, 0	       227	revert.c	FUNCTION_8	CALL_4
0x4000bc8	      0xe800000000	                          call 0x4000bcd	       227	revert.c	FUNCTION_8	CALL_4
0x4000bcd	    0x488b94248800	            mov rdx, qword [rsp + 0x88] 	       229	revert.c	FUNCTION_8
0x4000bd5	    0x644833142528	                xor rdx, qword fs:[0x28]	       229	revert.c	FUNCTION_8
0x4000bde	            0x7405	                            je 0x4000be5	       229	revert.c	FUNCTION_8
0x4000be0	      0xe800000000	                          call 0x4000be5	       229	revert.c	FUNCTION_8
0x4000be5	    0x4881c4980000	                           add rsp, 0x98	       229	revert.c	FUNCTION_8
0x4000bec	              0x5b	                                 pop rbx	       229	revert.c	FUNCTION_8
0x4000bed	              0x5d	                                 pop rbp	       229	revert.c	FUNCTION_8
0x4000bee	              0xc3	                                     ret	       229	revert.c	FUNCTION_8
option_parse_x	WHILE,0:functions,0:FOR,0:SWITCH,0:CALL,2:ELSE,0:IF,1:DO,0	44
0x4000040	            0x85d2	                           test edx, edx	        50	revert.c	FUNCTION_3	IF_1
0x4000042	     0xf8597000000	                           jne 0x40000df	        50	revert.c	FUNCTION_3	IF_1
0x4000048	              0x55	                                push rbp	        46	revert.c	FUNCTION_3
0x4000049	              0x53	                                push rbx	        46	revert.c	FUNCTION_3
0x400004a	        0x4883ec08	                              sub rsp, 8	        46	revert.c	FUNCTION_3
0x400004e	          0x4889f5	                            mov rbp, rsi	        46	revert.c	FUNCTION_3
0x4000051	        0x488b4710	            mov rax, qword [rdi + 0x10] 	        48	revert.c	FUNCTION_3
0x4000055	          0x488b18	                    mov rbx, qword [rax]	        48	revert.c	FUNCTION_3
0x4000058	        0x488b4350	            mov rax, qword [rbx + 0x50] 	        53	revert.c	FUNCTION_3	CALL_1
0x400005c	        0x488d7001	                      lea rsi, [rax + 1]	        53	revert.c	FUNCTION_3	CALL_1
0x4000060	        0x488b4358	            mov rax, qword [rbx + 0x58] 	        53	revert.c	FUNCTION_3	CALL_1
0x4000064	          0x4839c6	                            cmp rsi, rax	        53	revert.c	FUNCTION_3	CALL_1
0x4000067	            0x764b	                           jbe 0x40000b4	        53	revert.c	FUNCTION_3	CALL_1
0x4000069	      0x488d544030	          lea rdx, [rax + rax*2 + 0x30] 	        53	revert.c	FUNCTION_3	CALL_1
0x400006e	          0x48d1ea	                              shr rdx, 1	        53	revert.c	FUNCTION_3	CALL_1
0x4000071	          0x4839d6	                            cmp rsi, rdx	        53	revert.c	FUNCTION_3	CALL_1
0x4000074	        0x480f47d6	                          cmova rdx, rsi	        53	revert.c	FUNCTION_3	CALL_1
0x4000078	        0x48895358	             mov qword [rbx + 0x58], rdx	        53	revert.c	FUNCTION_3	CALL_1
0x400007c	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_27	IF_1	CALL_1
0x4000086	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_27	IF_1	CALL_1
0x4000089	            0x7614	                           jbe 0x400009f	       795	git-compat-util.h	FUNCTION_27	IF_1	CALL_1
0x400008b	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_27	IF_1	CALL_2
0x4000090	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_27	IF_1	CALL_2
0x4000095	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_27	IF_1	CALL_2
0x400009a	      0xe800000000	                          call 0x400009f	       796	git-compat-util.h	FUNCTION_27	IF_1	CALL_2
0x400009f	    0x488d34d50000	                        lea rsi, [rdx*8]	        53	revert.c	FUNCTION_3	CALL_1
0x40000a7	        0x488b7b48	            mov rdi, qword [rbx + 0x48] 	        53	revert.c	FUNCTION_3	CALL_1
0x40000ab	      0xe800000000	                          call 0x40000b0	        53	revert.c	FUNCTION_3	CALL_1
0x40000b0	        0x48894348	             mov qword [rbx + 0x48], rax	        53	revert.c	FUNCTION_3	CALL_1
0x40000b4	        0x488b5348	            mov rdx, qword [rbx + 0x48] 	        54	revert.c	FUNCTION_3	CALL_2
0x40000b8	        0x488b4350	            mov rax, qword [rbx + 0x50] 	        54	revert.c	FUNCTION_3	CALL_2
0x40000bc	        0x488d4801	                      lea rcx, [rax + 1]	        54	revert.c	FUNCTION_3	CALL_2
0x40000c0	        0x48894b50	             mov qword [rbx + 0x50], rcx	        54	revert.c	FUNCTION_3	CALL_2
0x40000c4	        0x488d1cc2	                  lea rbx, [rdx + rax*8]	        54	revert.c	FUNCTION_3	CALL_2
0x40000c8	          0x4889ef	                            mov rdi, rbp	        54	revert.c	FUNCTION_3	CALL_2
0x40000cb	      0xe800000000	                          call 0x40000d0	        54	revert.c	FUNCTION_3	CALL_2
0x40000d0	          0x488903	                    mov qword [rbx], rax	        54	revert.c	FUNCTION_3	CALL_2
0x40000d3	      0xb800000000	                              mov eax, 0	        56	revert.c	FUNCTION_3
0x40000d8	        0x4883c408	                              add rsp, 8	        56	revert.c	FUNCTION_3
0x40000dc	              0x5b	                                 pop rbx	        56	revert.c	FUNCTION_3
0x40000dd	              0x5d	                                 pop rbp	        56	revert.c	FUNCTION_3
0x40000de	              0xc3	                                     ret	        56	revert.c	FUNCTION_3
0x40000df	      0xb800000000	                              mov eax, 0	        56	revert.c	FUNCTION_3
0x40000e4	              0xc3	                                     ret	        56	revert.c	FUNCTION_3
cmd_revert	WHILE,0:functions,0:FOR,0:SWITCH,0:CALL,5:ELSE,0:IF,2:DO,0	42
0x4000aa2	              0x55	                                push rbp	       204	revert.c	FUNCTION_7
0x4000aa3	              0x53	                                push rbx	       204	revert.c	FUNCTION_7
0x4000aa4	    0x4881ec980000	                           sub rsp, 0x98	       204	revert.c	FUNCTION_7
0x4000aab	            0x89fb	                            mov ebx, edi	       204	revert.c	FUNCTION_7
0x4000aad	          0x4889f5	                            mov rbp, rsi	       204	revert.c	FUNCTION_7
0x4000ab0	    0x64488b042528	                mov rax, qword fs:[0x28]	       204	revert.c	FUNCTION_7
0x4000ab9	    0x488984248800	             mov qword [rsp + 0x88], rax	       204	revert.c	FUNCTION_7
0x4000ac1	            0x31c0	                            xor eax, eax	       204	revert.c	FUNCTION_7
0x4000ac3	          0x4889e7	                            mov rdi, rsp	       205	revert.c	FUNCTION_7
0x4000ac6	      0xb911000000	                           mov ecx, 0x11	       205	revert.c	FUNCTION_7
0x4000acb	          0xf348ab	              rep stosq qword [rdi], rax	       205	revert.c	FUNCTION_7
0x4000ace	    0xc70424ffffff	            mov dword [rsp], 0xffffffff 	       205	revert.c	FUNCTION_7
0x4000ad5	    0x48c744247000	               mov qword [rsp + 0x70], 0	       205	revert.c	FUNCTION_7
0x4000ade	      0xbf00000000	                              mov edi, 0	       208	revert.c	FUNCTION_7	IF_1	CALL_1
0x4000ae3	      0xe800000000	                          call 0x4000ae8	       208	revert.c	FUNCTION_7	IF_1	CALL_1
0x4000ae8	            0x85c0	                           test eax, eax	       208	revert.c	FUNCTION_7	IF_1	CALL_1
0x4000aea	            0x7408	                            je 0x4000af4	       208	revert.c	FUNCTION_7	IF_1	CALL_1
0x4000aec	    0xc74424040100	                  mov dword [rsp + 4], 1	       209	revert.c	FUNCTION_7	IF_1
0x4000af4	    0xc70424000000	                      mov dword [rsp], 0	       210	revert.c	FUNCTION_7
0x4000afb	          0x4889e7	                            mov rdi, rsp	       211	revert.c	FUNCTION_7	CALL_2
0x4000afe	      0xe800000000	                          call 0x4000b03	       211	revert.c	FUNCTION_7	CALL_2
0x4000b03	          0x4889e2	                            mov rdx, rsp	       212	revert.c	FUNCTION_7	CALL_3
0x4000b06	          0x4889ee	                            mov rsi, rbp	       212	revert.c	FUNCTION_7	CALL_3
0x4000b09	            0x89df	                            mov edi, ebx	       212	revert.c	FUNCTION_7	CALL_3
0x4000b0b	      0xe856f7ffff	                  call sym.run_sequencer	       212	revert.c	FUNCTION_7	CALL_3
0x4000b10	            0x85c0	                           test eax, eax	       213	revert.c	FUNCTION_7	IF_2
0x4000b12	            0x7921	                           jns 0x4000b35	       213	revert.c	FUNCTION_7	IF_2
0x4000b14	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_11	CALL_2
0x4000b19	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_11	CALL_2
0x4000b1e	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_11	CALL_2
0x4000b23	      0xe800000000	                          call 0x4000b28	        54	gettext.h	FUNCTION_11	CALL_2
0x4000b28	          0x4889c7	                            mov rdi, rax	       214	revert.c	FUNCTION_7	CALL_5
0x4000b2b	      0xb800000000	                              mov eax, 0	       214	revert.c	FUNCTION_7	CALL_5
0x4000b30	      0xe800000000	                          call 0x4000b35	       214	revert.c	FUNCTION_7	CALL_5
0x4000b35	    0x488b94248800	            mov rdx, qword [rsp + 0x88] 	       216	revert.c	FUNCTION_7
0x4000b3d	    0x644833142528	                xor rdx, qword fs:[0x28]	       216	revert.c	FUNCTION_7
0x4000b46	            0x7405	                            je 0x4000b4d	       216	revert.c	FUNCTION_7
0x4000b48	      0xe800000000	                          call 0x4000b4d	       216	revert.c	FUNCTION_7
0x4000b4d	    0x4881c4980000	                           add rsp, 0x98	       216	revert.c	FUNCTION_7
0x4000b54	              0x5b	                                 pop rbx	       216	revert.c	FUNCTION_7
0x4000b55	              0x5d	                                 pop rbp	       216	revert.c	FUNCTION_7
0x4000b56	              0xc3	                                     ret	       216	revert.c	FUNCTION_7
run_sequencer	WHILE,0:functions,0:FOR,0:SWITCH,0:CALL,57:ELSE,3:IF,13:DO,0	339
0x4000266	            0x4156	                                push r14	        94	revert.c	FUNCTION_6
0x4000268	            0x4155	                                push r13	        94	revert.c	FUNCTION_6
0x400026a	            0x4154	                                push r12	        94	revert.c	FUNCTION_6
0x400026c	              0x55	                                push rbp	        94	revert.c	FUNCTION_6
0x400026d	              0x53	                                push rbx	        94	revert.c	FUNCTION_6
0x400026e	    0x4881ec100500	                          sub rsp, 0x510	        94	revert.c	FUNCTION_6
0x4000275	          0x4189fd	                           mov r13d, edi	        94	revert.c	FUNCTION_6
0x4000278	          0x4989f4	                            mov r12, rsi	        94	revert.c	FUNCTION_6
0x400027b	      0x4889542408	                mov qword [rsp + 8], rdx	        94	revert.c	FUNCTION_6
0x4000280	    0x64488b342528	                mov rsi, qword fs:[0x28]	        94	revert.c	FUNCTION_6
0x4000289	    0x4889b4240805	            mov qword [rsp + 0x508], rsi	        94	revert.c	FUNCTION_6
0x4000291	            0x31f6	                            xor esi, esi	        94	revert.c	FUNCTION_6
0x4000293	          0x833a00	                      cmp dword [rdx], 0	        41	revert.c	FUNCTION_2
0x4000296	      0xb800000000	                              mov eax, 0	        41	revert.c	FUNCTION_2
0x400029b	      0xbb00000000	                              mov ebx, 0	        41	revert.c	FUNCTION_2
0x40002a0	        0x480f44d8	                          cmove rbx, rax	        41	revert.c	FUNCTION_2
0x40002a4	      0xb800000000	                              mov eax, 0	        41	revert.c	FUNCTION_2
0x40002a9	      0xbd00000000	                              mov ebp, 0	        41	revert.c	FUNCTION_2
0x40002ae	        0x480f44e8	                          cmove rbp, rax	        41	revert.c	FUNCTION_2
0x40002b2	    0xc744241c0000	               mov dword [rsp + 0x1c], 0	        97	revert.c	FUNCTION_6
0x40002ba	    0x488dbc24c001	                  lea rdi, [rsp + 0x1c0]	        98	revert.c	FUNCTION_6
0x40002c2	      0xb968000000	                           mov ecx, 0x68	        98	revert.c	FUNCTION_6
0x40002c7	      0xb800000000	                              mov eax, 0	        98	revert.c	FUNCTION_6
0x40002cc	          0xf348ab	              rep stosq qword [rdi], rax	        98	revert.c	FUNCTION_6
0x40002cf	    0xc78424c00100	              mov dword [rsp + 0x1c0], 8	        98	revert.c	FUNCTION_6
0x40002da	    0x48c78424c801	              mov qword [rsp + 0x1c8], 0	        98	revert.c	FUNCTION_6
0x40002e6	      0x488d44241c	                   lea rax, [rsp + 0x1c]	        98	revert.c	FUNCTION_6
0x40002eb	    0x48898424d001	            mov qword [rsp + 0x1d0], rax	        98	revert.c	FUNCTION_6
0x40002f3	    0x48c78424e001	              mov qword [rsp + 0x1e0], 0	        98	revert.c	FUNCTION_6
0x40002ff	    0xc78424e80100	              mov dword [rsp + 0x1e8], 6	        98	revert.c	FUNCTION_6
0x400030a	    0x48c78424f801	          mov qword [rsp + 0x1f8], 0x71 	        98	revert.c	FUNCTION_6
0x4000316	    0xc78424000200	              mov dword [rsp + 0x200], 8	        98	revert.c	FUNCTION_6
0x4000321	    0x48c784240802	              mov qword [rsp + 0x208], 0	        98	revert.c	FUNCTION_6
0x400032d	    0x488984241002	            mov qword [rsp + 0x210], rax	        98	revert.c	FUNCTION_6
0x4000335	    0x48c784242002	              mov qword [rsp + 0x220], 0	        98	revert.c	FUNCTION_6
0x4000341	    0xc78424280200	              mov dword [rsp + 0x228], 6	        98	revert.c	FUNCTION_6
0x400034c	    0x48c784243802	          mov qword [rsp + 0x238], 0x63 	        98	revert.c	FUNCTION_6
0x4000358	    0xc78424400200	              mov dword [rsp + 0x240], 8	        98	revert.c	FUNCTION_6
0x4000363	    0x48c784244802	              mov qword [rsp + 0x248], 0	        98	revert.c	FUNCTION_6
0x400036f	    0x488984245002	            mov qword [rsp + 0x250], rax	        98	revert.c	FUNCTION_6
0x4000377	    0x48c784246002	              mov qword [rsp + 0x260], 0	        98	revert.c	FUNCTION_6
0x4000383	    0xc78424680200	              mov dword [rsp + 0x268], 6	        98	revert.c	FUNCTION_6
0x400038e	    0x48c784247802	          mov qword [rsp + 0x278], 0x61 	        98	revert.c	FUNCTION_6
0x400039a	    0xc78424800200	              mov dword [rsp + 0x280], 7	        98	revert.c	FUNCTION_6
0x40003a5	    0xc78424840200	          mov dword [rsp + 0x284], 0x6e 	        98	revert.c	FUNCTION_6
0x40003b0	    0x48c784248802	              mov qword [rsp + 0x288], 0	        98	revert.c	FUNCTION_6
0x40003bc	        0x488d420c	                    lea rax, [rdx + 0xc]	       102	revert.c	FUNCTION_6	CALL_10
0x40003c0	    0x488984249002	            mov qword [rsp + 0x290], rax	       102	revert.c	FUNCTION_6	CALL_10
0x40003c8	    0x48c78424a002	              mov qword [rsp + 0x2a0], 0	        98	revert.c	FUNCTION_6
0x40003d4	    0xc78424a80200	              mov dword [rsp + 0x2a8], 2	        98	revert.c	FUNCTION_6
0x40003df	    0x48c78424b802	              mov qword [rsp + 0x2b8], 1	        98	revert.c	FUNCTION_6
0x40003eb	    0xc78424c00200	              mov dword [rsp + 0x2c0], 7	        98	revert.c	FUNCTION_6
0x40003f6	    0xc78424c40200	          mov dword [rsp + 0x2c4], 0x65 	        98	revert.c	FUNCTION_6
0x4000401	    0x48c78424c802	              mov qword [rsp + 0x2c8], 0	        98	revert.c	FUNCTION_6
0x400040d	        0x488d4204	                      lea rax, [rdx + 4]	       103	revert.c	FUNCTION_6	CALL_12
0x4000411	    0x48898424d002	            mov qword [rsp + 0x2d0], rax	       103	revert.c	FUNCTION_6	CALL_12
0x4000419	    0x48c78424e002	              mov qword [rsp + 0x2e0], 0	        98	revert.c	FUNCTION_6
0x4000425	    0xc78424e80200	              mov dword [rsp + 0x2e8], 2	        98	revert.c	FUNCTION_6
0x4000430	    0x48c78424f802	              mov qword [rsp + 0x2f8], 1	        98	revert.c	FUNCTION_6
0x400043c	    0xc78424000300	           mov dword [rsp + 0x300], 0xc 	        98	revert.c	FUNCTION_6
0x4000447	    0xc78424040300	          mov dword [rsp + 0x304], 0x72 	        98	revert.c	FUNCTION_6
0x4000452	    0x48c784242003	              mov qword [rsp + 0x320], 0	        98	revert.c	FUNCTION_6
0x400045e	    0xc78424280300	            mov dword [rsp + 0x328], 0xa	        98	revert.c	FUNCTION_6
0x4000469	    0x48c784243003	              mov qword [rsp + 0x330], 0	        98	revert.c	FUNCTION_6
0x4000475	    0xc78424400300	              mov dword [rsp + 0x340], 7	        98	revert.c	FUNCTION_6
0x4000480	    0xc78424440300	          mov dword [rsp + 0x344], 0x73 	        98	revert.c	FUNCTION_6
0x400048b	    0x48c784244803	              mov qword [rsp + 0x348], 0	        98	revert.c	FUNCTION_6
0x4000497	        0x488d4210	                   lea rax, [rdx + 0x10]	       105	revert.c	FUNCTION_6	CALL_15
0x400049b	    0x488984245003	            mov qword [rsp + 0x350], rax	       105	revert.c	FUNCTION_6	CALL_15
0x40004a3	    0x48c784246003	              mov qword [rsp + 0x360], 0	        98	revert.c	FUNCTION_6
0x40004af	    0xc78424680300	              mov dword [rsp + 0x368], 2	        98	revert.c	FUNCTION_6
0x40004ba	    0x48c784247803	              mov qword [rsp + 0x378], 1	        98	revert.c	FUNCTION_6
0x40004c6	    0xc78424800300	           mov dword [rsp + 0x380], 0xc 	        98	revert.c	FUNCTION_6
0x40004d1	    0xc78424840300	          mov dword [rsp + 0x384], 0x6d 	        98	revert.c	FUNCTION_6
0x40004dc	    0x48c784248803	              mov qword [rsp + 0x388], 0	        98	revert.c	FUNCTION_6
0x40004e8	    0x488994249003	            mov qword [rsp + 0x390], rdx	        98	revert.c	FUNCTION_6
0x40004f0	    0x48c784249803	              mov qword [rsp + 0x398], 0	        98	revert.c	FUNCTION_6
0x40004fc	    0x48c78424a003	              mov qword [rsp + 0x3a0], 0	        98	revert.c	FUNCTION_6
0x4000508	    0x48c78424b003	              mov qword [rsp + 0x3b0], 0	        98	revert.c	FUNCTION_6
0x4000514	    0xc78424c00300	           mov dword [rsp + 0x3c0], 0xc 	        98	revert.c	FUNCTION_6
0x400051f	    0x48c78424c803	              mov qword [rsp + 0x3c8], 0	        98	revert.c	FUNCTION_6
0x400052b	        0x488d4218	                   lea rax, [rdx + 0x18]	       108	revert.c	FUNCTION_6	CALL_19
0x400052f	    0x48898424d003	            mov qword [rsp + 0x3d0], rax	       108	revert.c	FUNCTION_6	CALL_19
0x4000537	    0x48c78424e003	              mov qword [rsp + 0x3e0], 0	        98	revert.c	FUNCTION_6
0x4000543	    0xc78424e80300	              mov dword [rsp + 0x3e8], 2	        98	revert.c	FUNCTION_6
0x400054e	    0x48c78424f003	              mov qword [rsp + 0x3f0], 0	        98	revert.c	FUNCTION_6
0x400055a	    0xc78424000400	              mov dword [rsp + 0x400], 9	        98	revert.c	FUNCTION_6
0x4000565	    0x48c784240804	              mov qword [rsp + 0x408], 0	        98	revert.c	FUNCTION_6
0x4000571	        0x488d4240	                   lea rax, [rdx + 0x40]	       109	revert.c	FUNCTION_6	CALL_22
0x4000575	    0x488984241004	            mov qword [rsp + 0x410], rax	       109	revert.c	FUNCTION_6	CALL_22
0x400057d	    0x48c784241804	              mov qword [rsp + 0x418], 0	        98	revert.c	FUNCTION_6
0x4000589	    0x48c784242004	              mov qword [rsp + 0x420], 0	        98	revert.c	FUNCTION_6
0x4000595	    0xc78424400400	           mov dword [rsp + 0x440], 0xc 	        98	revert.c	FUNCTION_6
0x40005a0	    0xc78424440400	          mov dword [rsp + 0x444], 0x58 	        98	revert.c	FUNCTION_6
0x40005ab	    0x48c784244804	              mov qword [rsp + 0x448], 0	        98	revert.c	FUNCTION_6
0x40005b7	      0x488d442408	                      lea rax, [rsp + 8]	        98	revert.c	FUNCTION_6
0x40005bc	    0x488984245004	            mov qword [rsp + 0x450], rax	        98	revert.c	FUNCTION_6
0x40005c4	    0x48c784245804	              mov qword [rsp + 0x458], 0	        98	revert.c	FUNCTION_6
0x40005d0	    0x48c784246004	              mov qword [rsp + 0x460], 0	        98	revert.c	FUNCTION_6
0x40005dc	    0x48c784247004	              mov qword [rsp + 0x470], 0	        98	revert.c	FUNCTION_6
0x40005e8	    0xc78424800400	              mov dword [rsp + 0x480], 9	        98	revert.c	FUNCTION_6
0x40005f3	    0xc78424840400	          mov dword [rsp + 0x484], 0x53 	        98	revert.c	FUNCTION_6
0x40005fe	    0x48c784248804	              mov qword [rsp + 0x488], 0	        98	revert.c	FUNCTION_6
0x400060a	        0x488d4230	                   lea rax, [rdx + 0x30]	       112	revert.c	FUNCTION_6	CALL_26
0x400060e	    0x488984249004	            mov qword [rsp + 0x490], rax	       112	revert.c	FUNCTION_6	CALL_26
0x4000616	    0x48c784249804	              mov qword [rsp + 0x498], 0	        98	revert.c	FUNCTION_6
0x4000622	    0x48c78424a004	              mov qword [rsp + 0x4a0], 0	        98	revert.c	FUNCTION_6
0x400062e	    0xc78424a80400	              mov dword [rsp + 0x4a8], 1	        98	revert.c	FUNCTION_6
0x4000639	    0x48c78424b804	              mov qword [rsp + 0x4b8], 0	        98	revert.c	FUNCTION_6
0x4000645	    0x4c8db424c001	                  lea r14, [rsp + 0x1c0]	       116	revert.c	FUNCTION_6
0x400064d	          0x833a01	                      cmp dword [rdx], 1	       118	revert.c	FUNCTION_6	IF_1
0x4000650	     0xf856d010000	                           jne 0x40007c3	       118	revert.c	FUNCTION_6	IF_1
0x4000656	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       119	revert.c	FUNCTION_6	IF_1
0x400065b	      0xb930000000	                           mov ecx, 0x30	       119	revert.c	FUNCTION_6	IF_1
0x4000660	      0xb800000000	                              mov eax, 0	       119	revert.c	FUNCTION_6	IF_1
0x4000665	          0xf348ab	              rep stosq qword [rdi], rax	       119	revert.c	FUNCTION_6	IF_1
0x4000668	    0xc74424400700	               mov dword [rsp + 0x40], 7	       119	revert.c	FUNCTION_6	IF_1
0x4000670	    0xc74424447800	           mov dword [rsp + 0x44], 0x78 	       119	revert.c	FUNCTION_6	IF_1
0x4000678	        0x488d4208	                      lea rax, [rdx + 8]	       120	revert.c	FUNCTION_6	IF_1	CALL_30
0x400067c	      0x4889442450	             mov qword [rsp + 0x50], rax	       120	revert.c	FUNCTION_6	IF_1	CALL_30
0x4000681	    0x48c744246000	               mov qword [rsp + 0x60], 0	       119	revert.c	FUNCTION_6	IF_1
0x400068a	    0xc74424680200	               mov dword [rsp + 0x68], 2	       119	revert.c	FUNCTION_6	IF_1
0x4000692	    0x48c744247801	               mov qword [rsp + 0x78], 1	       119	revert.c	FUNCTION_6	IF_1
0x400069b	    0xc78424800000	               mov dword [rsp + 0x80], 7	       119	revert.c	FUNCTION_6	IF_1
0x40006a6	    0x48c784248800	               mov qword [rsp + 0x88], 0	       119	revert.c	FUNCTION_6	IF_1
0x40006b2	        0x488d4214	                   lea rax, [rdx + 0x14]	       121	revert.c	FUNCTION_6	IF_1	CALL_32
0x40006b6	    0x488984249000	             mov qword [rsp + 0x90], rax	       121	revert.c	FUNCTION_6	IF_1	CALL_32
0x40006be	    0x48c78424a000	               mov qword [rsp + 0xa0], 0	       119	revert.c	FUNCTION_6	IF_1
0x40006ca	    0xc78424a80000	               mov dword [rsp + 0xa8], 2	       119	revert.c	FUNCTION_6	IF_1
0x40006d5	    0x48c78424b800	               mov qword [rsp + 0xb8], 1	       119	revert.c	FUNCTION_6	IF_1
0x40006e1	    0xc78424c00000	               mov dword [rsp + 0xc0], 7	       119	revert.c	FUNCTION_6	IF_1
0x40006ec	    0x48c78424c800	               mov qword [rsp + 0xc8], 0	       119	revert.c	FUNCTION_6	IF_1
0x40006f8	        0x488d421c	                   lea rax, [rdx + 0x1c]	       122	revert.c	FUNCTION_6	IF_1	CALL_34
0x40006fc	    0x48898424d000	             mov qword [rsp + 0xd0], rax	       122	revert.c	FUNCTION_6	IF_1	CALL_34
0x4000704	    0x48c78424e000	               mov qword [rsp + 0xe0], 0	       119	revert.c	FUNCTION_6	IF_1
0x4000710	    0xc78424e80000	               mov dword [rsp + 0xe8], 2	       119	revert.c	FUNCTION_6	IF_1
0x400071b	    0x48c78424f800	               mov qword [rsp + 0xf8], 1	       119	revert.c	FUNCTION_6	IF_1
0x4000727	    0xc78424000100	              mov dword [rsp + 0x100], 7	       119	revert.c	FUNCTION_6	IF_1
0x4000732	    0x48c784240801	              mov qword [rsp + 0x108], 0	       119	revert.c	FUNCTION_6	IF_1
0x400073e	        0x488d4220	                   lea rax, [rdx + 0x20]	       123	revert.c	FUNCTION_6	IF_1	CALL_36
0x4000742	    0x488984241001	            mov qword [rsp + 0x110], rax	       123	revert.c	FUNCTION_6	IF_1	CALL_36
0x400074a	    0x48c784242001	              mov qword [rsp + 0x120], 0	       119	revert.c	FUNCTION_6	IF_1
0x4000756	    0xc78424280100	              mov dword [rsp + 0x128], 2	       119	revert.c	FUNCTION_6	IF_1
0x4000761	    0x48c784243801	              mov qword [rsp + 0x138], 1	       119	revert.c	FUNCTION_6	IF_1
0x400076d	    0xc78424400100	              mov dword [rsp + 0x140], 7	       119	revert.c	FUNCTION_6	IF_1
0x4000778	    0x48c784244801	              mov qword [rsp + 0x148], 0	       119	revert.c	FUNCTION_6	IF_1
0x4000784	        0x4883c224	                           add rdx, 0x24	       124	revert.c	FUNCTION_6	IF_1	CALL_38
0x4000788	    0x488994245001	            mov qword [rsp + 0x150], rdx	       124	revert.c	FUNCTION_6	IF_1	CALL_38
0x4000790	    0x48c784246001	              mov qword [rsp + 0x160], 0	       119	revert.c	FUNCTION_6	IF_1
0x400079c	    0xc78424680100	              mov dword [rsp + 0x168], 2	       119	revert.c	FUNCTION_6	IF_1
0x40007a7	    0x48c784247801	              mov qword [rsp + 0x178], 1	       119	revert.c	FUNCTION_6	IF_1
0x40007b3	      0x488d742440	                   lea rsi, [rsp + 0x40]	       127	revert.c	FUNCTION_6	IF_1	CALL_40
0x40007b8	          0x4c89f7	                            mov rdi, r14	       127	revert.c	FUNCTION_6	IF_1	CALL_40
0x40007bb	      0xe800000000	                          call 0x40007c0	       127	revert.c	FUNCTION_6	IF_1	CALL_40
0x40007c0	          0x4989c6	                            mov r14, rax	       127	revert.c	FUNCTION_6	IF_1	CALL_40
0x40007c3	    0x41b90c000000	                            mov r9d, 0xc	       130	revert.c	FUNCTION_6	CALL_41
0x40007c9	          0x4989d8	                             mov r8, rbx	       130	revert.c	FUNCTION_6	CALL_41
0x40007cc	          0x4c89f1	                            mov rcx, r14	       130	revert.c	FUNCTION_6	CALL_41
0x40007cf	      0xba00000000	                              mov edx, 0	       130	revert.c	FUNCTION_6	CALL_41
0x40007d4	          0x4c89e6	                            mov rsi, r12	       130	revert.c	FUNCTION_6	CALL_41
0x40007d7	          0x4489ef	                           mov edi, r13d	       130	revert.c	FUNCTION_6	CALL_41
0x40007da	      0xe800000000	                          call 0x40007df	       130	revert.c	FUNCTION_6	CALL_41
0x40007df	          0x4189c5	                           mov r13d, eax	       130	revert.c	FUNCTION_6	CALL_41
0x40007e2	      0x488b442408	                mov rax, qword [rsp + 8]	       135	revert.c	FUNCTION_6	IF_2
0x40007e7	        0x83782400	               cmp dword [rax + 0x24], 0	       135	revert.c	FUNCTION_6	IF_2
0x40007eb	            0x7407	                            je 0x40007f4	       135	revert.c	FUNCTION_6	IF_2
0x40007ed	    0xc7401c010000	               mov dword [rax + 0x1c], 1	       136	revert.c	FUNCTION_6	IF_2
0x40007f4	        0x8b54241c	            mov edx, dword [rsp + 0x1c] 	       139	revert.c	FUNCTION_6	IF_3
0x40007f8	            0x85d2	                           test edx, edx	       139	revert.c	FUNCTION_6	IF_3
0x40007fa	     0xf847e020000	                            je 0x4000a7e	       139	revert.c	FUNCTION_6	IF_3
0x4000800	          0x83fa71	                           cmp edx, 0x71	       141	revert.c	FUNCTION_6	IF_3	IF_4
0x4000803	            0x7423	                            je 0x4000828	       141	revert.c	FUNCTION_6	IF_3	IF_4
0x4000805	          0x83fa63	                           cmp edx, 0x63	       143	revert.c	FUNCTION_6	IF_3	ELSE_1	IF_5
0x4000808	            0x7425	                            je 0x400082f	       143	revert.c	FUNCTION_6	IF_3	ELSE_1	IF_5
0x400080a	          0x83fa61	                           cmp edx, 0x61	       146	revert.c	FUNCTION_6	IF_3	ELSE_2	CALL_42
0x400080d	            0x7427	                            je 0x4000836	       146	revert.c	FUNCTION_6	IF_3	ELSE_2	CALL_42
0x400080f	      0xb900000000	                              mov ecx, 0	       146	revert.c	FUNCTION_6	IF_3	ELSE_2	CALL_42
0x4000814	      0xba92000000	                           mov edx, 0x92	       146	revert.c	FUNCTION_6	IF_3	ELSE_2	CALL_42
0x4000819	      0xbe00000000	                              mov esi, 0	       146	revert.c	FUNCTION_6	IF_3	ELSE_2	CALL_42
0x400081e	      0xbf00000000	                              mov edi, 0	       146	revert.c	FUNCTION_6	IF_3	ELSE_2	CALL_42
0x4000823	      0xe800000000	                          call 0x4000828	       146	revert.c	FUNCTION_6	IF_3	ELSE_2	CALL_42
0x4000828	      0xbe00000000	                              mov esi, 0	       142	revert.c	FUNCTION_6	IF_3	IF_4
0x400082d	            0xeb0c	                           jmp 0x400083b	       142	revert.c	FUNCTION_6	IF_3	IF_4
0x400082f	      0xbe00000000	                              mov esi, 0	       144	revert.c	FUNCTION_6	IF_3	ELSE_1	IF_5
0x4000834	            0xeb05	                           jmp 0x400083b	       144	revert.c	FUNCTION_6	IF_3	ELSE_1	IF_5
0x4000836	      0xbe00000000	                              mov esi, 0	       147	revert.c	FUNCTION_6	IF_3	ELSE_2
0x400083b	          0x8b5018	            mov edx, dword [rax + 0x18] 	       159	revert.c	FUNCTION_6	IF_3
0x400083e	          0x8b480c	              mov ecx, dword [rax + 0xc]	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x4000841	        0x4883ec08	                              sub rsp, 8	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x4000845	            0x6a00	                                  push 0	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x4000847	          0x83fa02	                              cmp edx, 2	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x400084a	        0x400f94c7	                                sete dil	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x400084e	        0x400fb6ff	                          movzx edi, dil	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x4000852	              0x57	                                push rdi	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x4000853	      0x6800000000	                                  push 0	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x4000858	          0x83fa01	                              cmp edx, 1	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x400085b	           0xf94c2	                                 sete dl	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x400085e	           0xfb6d2	                           movzx edx, dl	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x4000861	              0x52	                                push rdx	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x4000862	      0x6800000000	                                  push 0	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x4000867	          0x8b5014	            mov edx, dword [rax + 0x14] 	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x400086a	              0x52	                                push rdx	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x400086b	      0x6800000000	                                  push 0	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x4000870	          0x8b5008	                mov edx, dword [rax + 8]	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x4000873	              0x52	                                push rdx	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x4000874	      0x6800000000	                                  push 0	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x4000879	      0x4883784800	               cmp qword [rax + 0x48], 0	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x400087e	           0xf95c2	                                setne dl	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x4000881	           0xfb6d2	                           movzx edx, dl	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x4000884	              0x52	                                push rdx	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x4000885	      0x6800000000	                                  push 0	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x400088a	      0x4883784000	               cmp qword [rax + 0x40], 0	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x400088f	           0xf95c2	                                setne dl	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x4000892	           0xfb6d2	                           movzx edx, dl	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x4000895	              0x52	                                push rdx	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x4000896	      0x6800000000	                                  push 0	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x400089b	          0x8b502c	            mov edx, dword [rax + 0x2c] 	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x400089e	              0x52	                                push rdx	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x400089f	      0x6800000000	                                  push 0	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x40008a4	        0x448b4810	            mov r9d, dword [rax + 0x10] 	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x40008a8	    0x41b800000000	                              mov r8d, 0	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x40008ae	      0xba00000000	                              mov edx, 0	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x40008b3	          0x4889ef	                            mov rdi, rbp	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x40008b6	      0xb800000000	                              mov eax, 0	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x40008bb	      0xe8a9f8ffff	          call sym.verify_opt_compatible	       150	revert.c	FUNCTION_6	IF_3	CALL_43
0x40008c0	    0x488b84248800	            mov rax, qword [rsp + 0x88] 	       163	revert.c	FUNCTION_6	IF_6
0x40008c8	        0x4883ec80	             sub rsp, 0xffffffffffffff80	       163	revert.c	FUNCTION_6	IF_6
0x40008cc	        0x83781400	               cmp dword [rax + 0x14], 0	       163	revert.c	FUNCTION_6	IF_6
0x40008d0	            0x7440	                            je 0x4000912	       163	revert.c	FUNCTION_6	IF_6
0x40008d2	          0x8b4810	            mov ecx, dword [rax + 0x10] 	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0x40008d5	        0x4883ec08	                              sub rsp, 8	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0x40008d9	            0x6a00	                                  push 0	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0x40008db	          0x8b5004	                mov edx, dword [rax + 4]	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0x40008de	              0x52	                                push rdx	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0x40008df	      0x6800000000	                                  push 0	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0x40008e4	          0x8b5008	                mov edx, dword [rax + 8]	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0x40008e7	              0x52	                                push rdx	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0x40008e8	      0x6800000000	                                  push 0	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0x40008ed	        0x448b480c	              mov r9d, dword [rax + 0xc]	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0x40008f1	    0x41b800000000	                              mov r8d, 0	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0x40008f7	      0xba00000000	                              mov edx, 0	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0x40008fc	      0xbe00000000	                              mov esi, 0	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0x4000901	          0x4889ef	                            mov rdi, rbp	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0x4000904	      0xb800000000	                              mov eax, 0	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0x4000909	      0xe85bf8ffff	          call sym.verify_opt_compatible	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0x400090e	        0x4883c430	                           add rsp, 0x30	       164	revert.c	FUNCTION_6	IF_6	CALL_44
0x4000912	      0x837c241c00	               cmp dword [rsp + 0x1c], 0	       171	revert.c	FUNCTION_6	IF_7
0x4000917	            0x7415	                            je 0x400092e	       171	revert.c	FUNCTION_6	IF_7
0x4000919	      0x488b442408	                mov rax, qword [rsp + 8]	       172	revert.c	FUNCTION_6	IF_7
0x400091e	    0x48c780800000	               mov qword [rax + 0x80], 0	       172	revert.c	FUNCTION_6	IF_7
0x4000929	      0xe9b5000000	                           jmp 0x40009e3	       172	revert.c	FUNCTION_6	IF_7
0x400092e	      0x488b6c2408	                mov rbp, qword [rsp + 8]	       175	revert.c	FUNCTION_6	ELSE_3	CALL_45
0x4000933	      0xbfb0080000	                          mov edi, 0x8b0	       175	revert.c	FUNCTION_6	ELSE_3	CALL_45
0x4000938	      0xe800000000	                          call 0x400093d	       175	revert.c	FUNCTION_6	ELSE_3	CALL_45
0x400093d	    0x488985800000	            mov qword [rbp + 0x80], rax 	       175	revert.c	FUNCTION_6	ELSE_3	CALL_45
0x4000944	      0x488b442408	                mov rax, qword [rsp + 8]	       176	revert.c	FUNCTION_6	ELSE_3	CALL_46
0x4000949	    0x488bb8800000	            mov rdi, qword [rax + 0x80] 	       176	revert.c	FUNCTION_6	ELSE_3	CALL_46
0x4000950	      0xbe00000000	                              mov esi, 0	       176	revert.c	FUNCTION_6	ELSE_3	CALL_46
0x4000955	      0xe800000000	                          call 0x400095a	       176	revert.c	FUNCTION_6	ELSE_3	CALL_46
0x400095a	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       177	revert.c	FUNCTION_6	ELSE_3
0x400095f	    0x488b91800000	            mov rdx, qword [rcx + 0x80] 	       177	revert.c	FUNCTION_6	ELSE_3
0x4000966	         0xfb64274	           movzx eax, byte [rdx + 0x74] 	       177	revert.c	FUNCTION_6	ELSE_3
0x400096a	          0x83e0cf	                     and eax, 0xffffffcf	       177	revert.c	FUNCTION_6	ELSE_3
0x400096d	          0x83c820	                            or eax, 0x20	       177	revert.c	FUNCTION_6	ELSE_3
0x4000970	          0x884274	               mov byte [rdx + 0x74], al	       177	revert.c	FUNCTION_6	ELSE_3
0x4000973	        0x4183fd01	                             cmp r13d, 1	       178	revert.c	FUNCTION_6	ELSE_3	IF_8
0x4000977	            0x7f0b	                            jg 0x4000984	       178	revert.c	FUNCTION_6	ELSE_3	IF_8
0x4000979	          0x4c89f6	                            mov rsi, r14	       179	revert.c	FUNCTION_6	ELSE_3	CALL_47
0x400097c	          0x4889df	                            mov rdi, rbx	       179	revert.c	FUNCTION_6	ELSE_3	CALL_47
0x400097f	      0xe800000000	                          call 0x4000984	       179	revert.c	FUNCTION_6	ELSE_3	CALL_47
0x4000984	      0x498b442408	                mov rax, qword [r12 + 8]	       180	revert.c	FUNCTION_6	ELSE_3	IF_9	CALL_48
0x4000989	          0x80382d	                    cmp byte [rax], 0x2d	       180	revert.c	FUNCTION_6	ELSE_3	IF_9	CALL_48
0x400098c	            0x750f	                           jne 0x400099d	       180	revert.c	FUNCTION_6	ELSE_3	IF_9	CALL_48
0x400098e	        0x80780100	                   cmp byte [rax + 1], 0	       180	revert.c	FUNCTION_6	ELSE_3	IF_9	CALL_48
0x4000992	            0x7509	                           jne 0x400099d	       180	revert.c	FUNCTION_6	ELSE_3	IF_9	CALL_48
0x4000994	    0x49c744240800	                  mov qword [r12 + 8], 0	       181	revert.c	FUNCTION_6	ELSE_3	IF_9
0x400099d	    0x48c744242000	               mov qword [rsp + 0x20], 0	        90	string3.h	FUNCTION_43	CALL_6
0x40009a6	    0x48c744242800	               mov qword [rsp + 0x28], 0	        90	string3.h	FUNCTION_43	CALL_6
0x40009af	    0x48c744243000	               mov qword [rsp + 0x30], 0	        90	string3.h	FUNCTION_43	CALL_6
0x40009b8	    0x48c744243800	               mov qword [rsp + 0x38], 0	        90	string3.h	FUNCTION_43	CALL_6
0x40009c1	    0xc74424380100	               mov dword [rsp + 0x38], 1	       183	revert.c	FUNCTION_6	ELSE_3
0x40009c9	    0x488b91800000	            mov rdx, qword [rcx + 0x80] 	       184	revert.c	FUNCTION_6	ELSE_3	CALL_50
0x40009d0	      0x488d4c2420	                   lea rcx, [rsp + 0x20]	       184	revert.c	FUNCTION_6	ELSE_3	CALL_50
0x40009d5	          0x4c89e6	                            mov rsi, r12	       184	revert.c	FUNCTION_6	ELSE_3	CALL_50
0x40009d8	          0x4489ef	                           mov edi, r13d	       184	revert.c	FUNCTION_6	ELSE_3	CALL_50
0x40009db	      0xe800000000	                          call 0x40009e0	       184	revert.c	FUNCTION_6	ELSE_3	CALL_50
0x40009e0	          0x4189c5	                           mov r13d, eax	       184	revert.c	FUNCTION_6	ELSE_3	CALL_50
0x40009e3	        0x4183fd01	                             cmp r13d, 1	       187	revert.c	FUNCTION_6	IF_10
0x40009e7	            0x7e0b	                           jle 0x40009f4	       187	revert.c	FUNCTION_6	IF_10
0x40009e9	          0x4c89f6	                            mov rsi, r14	       188	revert.c	FUNCTION_6	CALL_51
0x40009ec	          0x4889df	                            mov rdi, rbx	       188	revert.c	FUNCTION_6	CALL_51
0x40009ef	      0xe800000000	                          call 0x40009f4	       188	revert.c	FUNCTION_6	CALL_51
0x40009f4	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       191	revert.c	FUNCTION_6	CALL_52
0x40009f9	        0x488b4330	            mov rax, qword [rbx + 0x30] 	       191	revert.c	FUNCTION_6	CALL_52
0x40009fd	          0x4885c0	                           test rax, rax	       924	git-compat-util.h	FUNCTION_31	CALL_1
0x4000a00	            0x7408	                            je 0x4000a0a	       924	git-compat-util.h	FUNCTION_31	CALL_1
0x4000a02	          0x4889c7	                            mov rdi, rax	       924	git-compat-util.h	FUNCTION_31	CALL_1
0x4000a05	      0xe800000000	                          call 0x4000a0a	       924	git-compat-util.h	FUNCTION_31	CALL_1
0x4000a0a	        0x48894330	             mov qword [rbx + 0x30], rax	       191	revert.c	FUNCTION_6	CALL_52
0x4000a0e	      0x488b5c2408	                mov rbx, qword [rsp + 8]	       192	revert.c	FUNCTION_6	CALL_53
0x4000a13	        0x488b4340	            mov rax, qword [rbx + 0x40] 	       192	revert.c	FUNCTION_6	CALL_53
0x4000a17	          0x4885c0	                           test rax, rax	       924	git-compat-util.h	FUNCTION_31	CALL_1
0x4000a1a	            0x7408	                            je 0x4000a24	       924	git-compat-util.h	FUNCTION_31	CALL_1
0x4000a1c	          0x4889c7	                            mov rdi, rax	       924	git-compat-util.h	FUNCTION_31	CALL_1
0x4000a1f	      0xe800000000	                          call 0x4000a24	       924	git-compat-util.h	FUNCTION_31	CALL_1
0x4000a24	        0x48894340	             mov qword [rbx + 0x40], rax	       192	revert.c	FUNCTION_6	CALL_53
0x4000a28	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	       194	revert.c	FUNCTION_6	IF_11
0x4000a2c	          0x83f871	                           cmp eax, 0x71	       194	revert.c	FUNCTION_6	IF_11
0x4000a2f	            0x750c	                           jne 0x4000a3d	       194	revert.c	FUNCTION_6	IF_11
0x4000a31	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       195	revert.c	FUNCTION_6	CALL_54
0x4000a36	      0xe800000000	                          call 0x4000a3b	       195	revert.c	FUNCTION_6	CALL_54
0x4000a3b	            0xeb2c	                           jmp 0x4000a69	       195	revert.c	FUNCTION_6	CALL_54
0x4000a3d	          0x83f863	                           cmp eax, 0x63	       196	revert.c	FUNCTION_6	IF_12
0x4000a40	            0x750c	                           jne 0x4000a4e	       196	revert.c	FUNCTION_6	IF_12
0x4000a42	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       197	revert.c	FUNCTION_6	CALL_55
0x4000a47	      0xe800000000	                          call 0x4000a4c	       197	revert.c	FUNCTION_6	CALL_55
0x4000a4c	            0xeb1b	                           jmp 0x4000a69	       197	revert.c	FUNCTION_6	CALL_55
0x4000a4e	          0x83f861	                           cmp eax, 0x61	       198	revert.c	FUNCTION_6	IF_13
0x4000a51	            0x750c	                           jne 0x4000a5f	       198	revert.c	FUNCTION_6	IF_13
0x4000a53	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       199	revert.c	FUNCTION_6	CALL_56
0x4000a58	      0xe800000000	                          call 0x4000a5d	       199	revert.c	FUNCTION_6	CALL_56
0x4000a5d	            0xeb0a	                           jmp 0x4000a69	       199	revert.c	FUNCTION_6	CALL_56
0x4000a5f	      0x488b7c2408	                mov rdi, qword [rsp + 8]	       200	revert.c	FUNCTION_6	CALL_57
0x4000a64	      0xe800000000	                          call 0x4000a69	       200	revert.c	FUNCTION_6	CALL_57
0x4000a69	    0x488bb4240805	           mov rsi, qword [rsp + 0x508] 	       201	revert.c	FUNCTION_6
0x4000a71	    0x644833342528	                xor rsi, qword fs:[0x28]	       201	revert.c	FUNCTION_6
0x4000a7a	            0x7416	                            je 0x4000a92	       201	revert.c	FUNCTION_6
0x4000a7c	            0xeb0f	                           jmp 0x4000a8d	       201	revert.c	FUNCTION_6
0x4000a7e	        0x83781400	               cmp dword [rax + 0x14], 0	       163	revert.c	FUNCTION_6	IF_6
0x4000a82	     0xf84a6feffff	                            je 0x400092e	       163	revert.c	FUNCTION_6	IF_6
0x4000a88	      0xe945feffff	                           jmp 0x40008d2	       163	revert.c	FUNCTION_6	IF_6
0x4000a8d	      0xe800000000	                          call 0x4000a92	       201	revert.c	FUNCTION_6
0x4000a92	    0x4881c4100500	                          add rsp, 0x510	       201	revert.c	FUNCTION_6
0x4000a99	              0x5b	                                 pop rbx	       201	revert.c	FUNCTION_6
0x4000a9a	              0x5d	                                 pop rbp	       201	revert.c	FUNCTION_6
0x4000a9b	            0x415c	                                 pop r12	       201	revert.c	FUNCTION_6
0x4000a9d	            0x415d	                                 pop r13	       201	revert.c	FUNCTION_6
0x4000a9f	            0x415e	                                 pop r14	       201	revert.c	FUNCTION_6
0x4000aa1	              0xc3	                                     ret	       201	revert.c	FUNCTION_6
verify_opt_compatible	WHILE,1:functions,0:FOR,0:SWITCH,0:CALL,6:ELSE,0:IF,2:DO,0	71
0x4000169	            0x4154	                                push r12	        78	revert.c	FUNCTION_5
0x400016b	              0x55	                                push rbp	        78	revert.c	FUNCTION_5
0x400016c	              0x53	                                push rbx	        78	revert.c	FUNCTION_5
0x400016d	        0x4883ec50	                           sub rsp, 0x50	        78	revert.c	FUNCTION_5
0x4000171	          0x4889fd	                            mov rbp, rdi	        78	revert.c	FUNCTION_5
0x4000174	          0x4989f4	                            mov r12, rsi	        78	revert.c	FUNCTION_5
0x4000177	      0x4889542430	             mov qword [rsp + 0x30], rdx	        78	revert.c	FUNCTION_5
0x400017c	      0x48894c2438	             mov qword [rsp + 0x38], rcx	        78	revert.c	FUNCTION_5
0x4000181	      0x4c89442440	              mov qword [rsp + 0x40], r8	        78	revert.c	FUNCTION_5
0x4000186	      0x4c894c2448	              mov qword [rsp + 0x48], r9	        78	revert.c	FUNCTION_5
0x400018b	    0x64488b042528	                mov rax, qword fs:[0x28]	        78	revert.c	FUNCTION_5
0x4000194	      0x4889442418	             mov qword [rsp + 0x18], rax	        78	revert.c	FUNCTION_5
0x4000199	            0x31c0	                            xor eax, eax	        78	revert.c	FUNCTION_5
0x400019b	    0xc70424100000	                   mov dword [rsp], 0x10	        82	revert.c	FUNCTION_5	CALL_1
0x40001a2	      0x488d442470	                   lea rax, [rsp + 0x70]	        82	revert.c	FUNCTION_5	CALL_1
0x40001a7	      0x4889442408	                mov qword [rsp + 8], rax	        82	revert.c	FUNCTION_5	CALL_1
0x40001ac	      0x488d442420	                   lea rax, [rsp + 0x20]	        82	revert.c	FUNCTION_5	CALL_1
0x40001b1	      0x4889442410	             mov qword [rsp + 0x10], rax	        82	revert.c	FUNCTION_5	CALL_1
0x40001b6	      0xb810000000	                           mov eax, 0x10	        82	revert.c	FUNCTION_5	CALL_1
0x40001bb	      0x488d742470	                   lea rsi, [rsp + 0x70]	        82	revert.c	FUNCTION_5	CALL_1
0x40001c0	      0xb900000000	                              mov ecx, 0	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x40001c5	            0xeb2c	                           jmp 0x40001f3	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x40001c7	          0x83f92f	                           cmp ecx, 0x2f	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x40001ca	            0x7714	                            ja 0x40001e0	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x40001cc	            0x89ca	                            mov edx, ecx	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x40001ce	      0x488d7c2420	                   lea rdi, [rsp + 0x20]	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x40001d3	          0x4801fa	                            add rdx, rdi	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x40001d6	          0x83c010	                           add eax, 0x10	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x40001d9	      0xb901000000	                              mov ecx, 1	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x40001de	            0xeb0e	                           jmp 0x40001ee	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x40001e0	          0x4889f2	                            mov rdx, rsi	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x40001e3	            0x89c8	                            mov eax, ecx	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x40001e5	      0xb901000000	                              mov ecx, 1	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x40001ea	        0x488d7208	                      lea rsi, [rdx + 8]	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x40001ee	          0x833a00	                      cmp dword [rdx], 0	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x40001f1	            0x7524	                           jne 0x4000217	        84	revert.c	FUNCTION_5	WHILE_1	IF_1	CALL_3
0x40001f3	          0x83f82f	                           cmp eax, 0x2f	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x40001f6	            0x7711	                            ja 0x4000209	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x40001f8	          0x8d4808	                      lea ecx, [rax + 8]	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x40001fb	            0x89c2	                            mov edx, eax	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x40001fd	      0x488b5c1420	      mov rbx, qword [rsp + rdx + 0x20] 	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x4000202	          0x4885db	                           test rbx, rbx	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x4000205	            0x75c0	                           jne 0x40001c7	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x4000207	            0xeb3f	                           jmp 0x4000248	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x4000209	        0x488d5608	                      lea rdx, [rsi + 8]	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x400020d	          0x488b1e	                    mov rbx, qword [rsi]	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x4000210	          0x4885db	                           test rbx, rbx	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x4000213	            0x75d5	                           jne 0x40001ea	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x4000215	            0xeb31	                           jmp 0x4000248	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x4000217	            0x84c9	                             test cl, cl	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x4000219	            0x7403	                            je 0x400021e	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x400021b	          0x890424	                    mov dword [rsp], eax	        83	revert.c	FUNCTION_5	WHILE_1	CALL_2
0x400021e	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_11	CALL_2
0x4000223	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_11	CALL_2
0x4000228	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_11	CALL_2
0x400022d	      0xe800000000	                          call 0x4000232	        54	gettext.h	FUNCTION_11	CALL_2
0x4000232	          0x4c89e1	                            mov rcx, r12	        90	revert.c	FUNCTION_5	CALL_6
0x4000235	          0x4889da	                            mov rdx, rbx	        90	revert.c	FUNCTION_5	CALL_6
0x4000238	          0x4889ee	                            mov rsi, rbp	        90	revert.c	FUNCTION_5	CALL_6
0x400023b	          0x4889c7	                            mov rdi, rax	        90	revert.c	FUNCTION_5	CALL_6
0x400023e	      0xb800000000	                              mov eax, 0	        90	revert.c	FUNCTION_5	CALL_6
0x4000243	      0xe800000000	                          call 0x4000248	        90	revert.c	FUNCTION_5	CALL_6
0x4000248	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        91	revert.c	FUNCTION_5
0x400024d	    0x644833042528	                xor rax, qword fs:[0x28]	        91	revert.c	FUNCTION_5
0x4000256	            0x7405	                            je 0x400025d	        91	revert.c	FUNCTION_5
0x4000258	      0xe800000000	                          call 0x400025d	        91	revert.c	FUNCTION_5
0x400025d	        0x4883c450	                           add rsp, 0x50	        91	revert.c	FUNCTION_5
0x4000261	              0x5b	                                 pop rbx	        91	revert.c	FUNCTION_5
0x4000262	              0x5d	                                 pop rbp	        91	revert.c	FUNCTION_5
0x4000263	            0x415c	                                 pop r12	        91	revert.c	FUNCTION_5
0x4000265	              0xc3	                                     ret	        91	revert.c	FUNCTION_5
