prune_object	functions,0:SWITCH,0:CALL,3:IF,2:FOR,0:WHILE,0:ELSE,1:DO,0	32
0x40000c1	              0x55	                                push rbp	        25	prune-packed.c	FUNCTION_2
0x40000c2	          0x4889e5	                            mov rbp, rsp	        25	prune-packed.c	FUNCTION_2
0x40000c5	        0x4883ec30	                           sub rsp, 0x30	        25	prune-packed.c	FUNCTION_2
0x40000c9	        0x48897de8	             mov qword [rbp - 0x18], rdi	        25	prune-packed.c	FUNCTION_2
0x40000cd	        0x488975e0	             mov qword [rbp - 0x20], rsi	        25	prune-packed.c	FUNCTION_2
0x40000d1	        0x488955d8	             mov qword [rbp - 0x28], rdx	        25	prune-packed.c	FUNCTION_2
0x40000d5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        26	prune-packed.c	FUNCTION_2
0x40000d9	        0x488945f8	                mov qword [rbp - 8], rax	        26	prune-packed.c	FUNCTION_2
0x40000dd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        28	prune-packed.c	FUNCTION_2	IF_1	CALL_1
0x40000e1	          0x4889c7	                            mov rdi, rax	        28	prune-packed.c	FUNCTION_2	IF_1	CALL_1
0x40000e4	      0xe800000000	                          call 0x40000e9	        28	prune-packed.c	FUNCTION_2	IF_1	CALL_1
0x40000e9	            0x85c0	                           test eax, eax	        28	prune-packed.c	FUNCTION_2	IF_1	CALL_1
0x40000eb	            0x7507	                           jne 0x40000f4	        28	prune-packed.c	FUNCTION_2	IF_1	CALL_1
0x40000ed	      0xb800000000	                              mov eax, 0	        29	prune-packed.c	FUNCTION_2	IF_1
0x40000f2	            0xeb36	                           jmp 0x400012a	        29	prune-packed.c	FUNCTION_2	IF_1
0x40000f4	        0x488b45f8	                mov rax, qword [rbp - 8]	        31	prune-packed.c	FUNCTION_2	IF_2
0x40000f8	            0x8b00	                    mov eax, dword [rax]	        31	prune-packed.c	FUNCTION_2	IF_2
0x40000fa	          0x83e001	                              and eax, 1	        31	prune-packed.c	FUNCTION_2	IF_2
0x40000fd	            0x85c0	                           test eax, eax	        31	prune-packed.c	FUNCTION_2	IF_2
0x40000ff	            0x7418	                            je 0x4000119	        31	prune-packed.c	FUNCTION_2	IF_2
0x4000101	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        32	prune-packed.c	FUNCTION_2	CALL_2
0x4000105	          0x4889c6	                            mov rsi, rax	        32	prune-packed.c	FUNCTION_2	CALL_2
0x4000108	      0xbf00000000	                              mov edi, 0	        32	prune-packed.c	FUNCTION_2	CALL_2
0x400010d	      0xb800000000	                              mov eax, 0	        32	prune-packed.c	FUNCTION_2	CALL_2
0x4000112	      0xe800000000	                          call 0x4000117	        32	prune-packed.c	FUNCTION_2	CALL_2
0x4000117	            0xeb0c	                           jmp 0x4000125	        32	prune-packed.c	FUNCTION_2	CALL_2
0x4000119	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        34	prune-packed.c	FUNCTION_2	CALL_3
0x400011d	          0x4889c7	                            mov rdi, rax	        34	prune-packed.c	FUNCTION_2	CALL_3
0x4000120	      0xe800000000	                          call 0x4000125	        34	prune-packed.c	FUNCTION_2	CALL_3
0x4000125	      0xb800000000	                              mov eax, 0	        35	prune-packed.c	FUNCTION_2
0x400012a	              0xc9	                                   leave	        36	prune-packed.c	FUNCTION_2
0x400012b	              0xc3	                                     ret	        36	prune-packed.c	FUNCTION_2
prune_packed_objects	functions,0:SWITCH,0:CALL,6:IF,1:FOR,0:WHILE,0:ELSE,0:DO,0	31
0x400012c	              0x55	                                push rbp	        39	prune-packed.c	FUNCTION_3
0x400012d	          0x4889e5	                            mov rbp, rsp	        39	prune-packed.c	FUNCTION_3
0x4000130	        0x4883ec10	                           sub rsp, 0x10	        39	prune-packed.c	FUNCTION_3
0x4000134	          0x897dfc	                mov dword [rbp - 4], edi	        39	prune-packed.c	FUNCTION_3
0x4000137	          0x8b45fc	                mov eax, dword [rbp - 4]	        40	prune-packed.c	FUNCTION_3	IF_1
0x400013a	          0x83e002	                              and eax, 2	        40	prune-packed.c	FUNCTION_3	IF_1
0x400013d	            0x85c0	                           test eax, eax	        40	prune-packed.c	FUNCTION_3	IF_1
0x400013f	            0x741e	                            je 0x400015f	        40	prune-packed.c	FUNCTION_3	IF_1
0x4000141	      0xbf00000000	                              mov edi, 0	        41	prune-packed.c	FUNCTION_3	CALL_2
0x4000146	      0xe8f5feffff	                          call 0x4000040	        41	prune-packed.c	FUNCTION_3	CALL_2
0x400014b	      0xbe00010000	                          mov esi, 0x100	        41	prune-packed.c	FUNCTION_3	CALL_2
0x4000150	          0x4889c7	                            mov rdi, rax	        41	prune-packed.c	FUNCTION_3	CALL_2
0x4000153	      0xe800000000	                          call 0x4000158	        41	prune-packed.c	FUNCTION_3	CALL_2
0x4000158	    0x488905000000	            mov qword [0x0400015f], rax 	        41	prune-packed.c	FUNCTION_3	CALL_2
0x400015f	      0xe800000000	                          call 0x4000164	        43	prune-packed.c	FUNCTION_3	CALL_4
0x4000164	          0x4889c7	                            mov rdi, rax	        43	prune-packed.c	FUNCTION_3	CALL_4
0x4000167	        0x488d45fc	                      lea rax, [rbp - 4]	        43	prune-packed.c	FUNCTION_3	CALL_4
0x400016b	          0x4989c0	                             mov r8, rax	        43	prune-packed.c	FUNCTION_3	CALL_4
0x400016e	      0xb900000000	                              mov ecx, 0	        43	prune-packed.c	FUNCTION_3	CALL_4
0x4000173	      0xba00000000	                              mov edx, 0	        43	prune-packed.c	FUNCTION_3	CALL_4
0x4000178	      0xbe00000000	                              mov esi, 0	        43	prune-packed.c	FUNCTION_3	CALL_4
0x400017d	      0xe800000000	                          call 0x4000182	        43	prune-packed.c	FUNCTION_3	CALL_4
0x4000182	    0x488b05000000	            mov rax, qword [0x04000189] 	        47	prune-packed.c	FUNCTION_3	CALL_5
0x4000189	      0xbe00010000	                          mov esi, 0x100	        47	prune-packed.c	FUNCTION_3	CALL_5
0x400018e	          0x4889c7	                            mov rdi, rax	        47	prune-packed.c	FUNCTION_3	CALL_5
0x4000191	      0xe800000000	                          call 0x4000196	        47	prune-packed.c	FUNCTION_3	CALL_5
0x4000196	      0xbf00000000	                              mov edi, 0	        48	prune-packed.c	FUNCTION_3	CALL_6
0x400019b	      0xe800000000	                          call 0x40001a0	        48	prune-packed.c	FUNCTION_3	CALL_6
0x40001a0	              0x90	                                     nop	        49	prune-packed.c	FUNCTION_3
0x40001a1	              0xc9	                                   leave	        49	prune-packed.c	FUNCTION_3
0x40001a2	              0xc3	                                     ret	        49	prune-packed.c	FUNCTION_3
cmd_prune_packed	functions,0:SWITCH,0:CALL,6:IF,0:FOR,0:WHILE,0:ELSE,0:DO,0	57
0x40001a3	              0x55	                                push rbp	        52	prune-packed.c	FUNCTION_4
0x40001a4	          0x4889e5	                            mov rbp, rsp	        52	prune-packed.c	FUNCTION_4
0x40001a7	    0x4881ec000100	                          sub rsp, 0x100	        52	prune-packed.c	FUNCTION_4
0x40001ae	    0x89bd1cffffff	             mov dword [rbp - 0xe4], edi	        52	prune-packed.c	FUNCTION_4
0x40001b4	    0x4889b510ffff	             mov qword [rbp - 0xf0], rsi	        52	prune-packed.c	FUNCTION_4
0x40001bb	    0x48899508ffff	             mov qword [rbp - 0xf8], rdx	        52	prune-packed.c	FUNCTION_4
0x40001c2	    0x64488b042528	                mov rax, qword fs:[0x28]	        52	prune-packed.c	FUNCTION_4
0x40001cb	        0x488945f8	                mov qword [rbp - 8], rax	        52	prune-packed.c	FUNCTION_4
0x40001cf	            0x31c0	                            xor eax, eax	        52	prune-packed.c	FUNCTION_4
0x40001d1	      0xbf02000000	                              mov edi, 2	        53	prune-packed.c	FUNCTION_4	CALL_1
0x40001d6	      0xe800000000	                          call 0x40001db	        53	prune-packed.c	FUNCTION_4	CALL_1
0x40001db	            0x85c0	                           test eax, eax	        53	prune-packed.c	FUNCTION_4	CALL_1
0x40001dd	            0x7407	                            je 0x40001e6	        53	prune-packed.c	FUNCTION_4	CALL_1
0x40001df	      0xb802000000	                              mov eax, 2	        53	prune-packed.c	FUNCTION_4	CALL_1
0x40001e4	            0xeb05	                           jmp 0x40001eb	        53	prune-packed.c	FUNCTION_4	CALL_1
0x40001e6	      0xb800000000	                              mov eax, 0	        53	prune-packed.c	FUNCTION_4	CALL_1
0x40001eb	    0x89852cffffff	             mov dword [rbp - 0xd4], eax	        53	prune-packed.c	FUNCTION_4	CALL_1
0x40001f1	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	        54	prune-packed.c	FUNCTION_4
0x40001f8	      0xb800000000	                              mov eax, 0	        54	prune-packed.c	FUNCTION_4
0x40001fd	      0xb918000000	                           mov ecx, 0x18	        54	prune-packed.c	FUNCTION_4
0x4000202	          0x4889d7	                            mov rdi, rdx	        54	prune-packed.c	FUNCTION_4
0x4000205	          0xf348ab	              rep stosq qword [rdi], rax	        54	prune-packed.c	FUNCTION_4
0x4000208	    0xc78530ffffff	               mov dword [rbp - 0xd0], 4	        54	prune-packed.c	FUNCTION_4
0x4000212	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x6e 	        54	prune-packed.c	FUNCTION_4
0x400021c	    0x48c78538ffff	               mov qword [rbp - 0xc8], 0	        54	prune-packed.c	FUNCTION_4
0x4000227	    0x488d852cffff	                   lea rax, [rbp - 0xd4]	        54	prune-packed.c	FUNCTION_4
0x400022e	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	        54	prune-packed.c	FUNCTION_4
0x4000235	    0x48c78550ffff	               mov qword [rbp - 0xb0], 0	        54	prune-packed.c	FUNCTION_4
0x4000240	    0xc78558ffffff	               mov dword [rbp - 0xa8], 2	        54	prune-packed.c	FUNCTION_4
0x400024a	    0x48c78568ffff	               mov qword [rbp - 0x98], 1	        54	prune-packed.c	FUNCTION_4
0x4000255	    0xc78570ffffff	               mov dword [rbp - 0x90], 5	        54	prune-packed.c	FUNCTION_4
0x400025f	    0xc78574ffffff	           mov dword [rbp - 0x8c], 0x71 	        54	prune-packed.c	FUNCTION_4
0x4000269	    0x48c78578ffff	               mov qword [rbp - 0x88], 0	        54	prune-packed.c	FUNCTION_4
0x4000274	    0x488d852cffff	                   lea rax, [rbp - 0xd4]	        54	prune-packed.c	FUNCTION_4
0x400027b	        0x48894580	             mov qword [rbp - 0x80], rax	        54	prune-packed.c	FUNCTION_4
0x400027f	    0x48c745900000	               mov qword [rbp - 0x70], 0	        54	prune-packed.c	FUNCTION_4
0x4000287	    0xc74598020000	               mov dword [rbp - 0x68], 2	        54	prune-packed.c	FUNCTION_4
0x400028e	    0x48c745a80200	               mov qword [rbp - 0x58], 2	        54	prune-packed.c	FUNCTION_4
0x4000296	    0x488d8d30ffff	                   lea rcx, [rbp - 0xd0]	        62	prune-packed.c	FUNCTION_4	CALL_5
0x400029d	    0x488b9508ffff	             mov rdx, qword [rbp - 0xf8]	        62	prune-packed.c	FUNCTION_4	CALL_5
0x40002a4	    0x488bb510ffff	             mov rsi, qword [rbp - 0xf0]	        62	prune-packed.c	FUNCTION_4	CALL_5
0x40002ab	    0x8b851cffffff	             mov eax, dword [rbp - 0xe4]	        62	prune-packed.c	FUNCTION_4	CALL_5
0x40002b1	    0x41b900000000	                              mov r9d, 0	        62	prune-packed.c	FUNCTION_4	CALL_5
0x40002b7	    0x41b800000000	                              mov r8d, 0	        62	prune-packed.c	FUNCTION_4	CALL_5
0x40002bd	            0x89c7	                            mov edi, eax	        62	prune-packed.c	FUNCTION_4	CALL_5
0x40002bf	      0xe800000000	                          call 0x40002c4	        62	prune-packed.c	FUNCTION_4	CALL_5
0x40002c4	    0x89851cffffff	             mov dword [rbp - 0xe4], eax	        62	prune-packed.c	FUNCTION_4	CALL_5
0x40002ca	    0x8b852cffffff	             mov eax, dword [rbp - 0xd4]	        65	prune-packed.c	FUNCTION_4	CALL_6
0x40002d0	            0x89c7	                            mov edi, eax	        65	prune-packed.c	FUNCTION_4	CALL_6
0x40002d2	      0xe800000000	                          call 0x40002d7	        65	prune-packed.c	FUNCTION_4	CALL_6
0x40002d7	      0xb800000000	                              mov eax, 0	        66	prune-packed.c	FUNCTION_4
0x40002dc	        0x488b75f8	                mov rsi, qword [rbp - 8]	        67	prune-packed.c	FUNCTION_4
0x40002e0	    0x644833342528	                xor rsi, qword fs:[0x28]	        67	prune-packed.c	FUNCTION_4
0x40002e9	            0x7405	                            je 0x40002f0	        67	prune-packed.c	FUNCTION_4
0x40002eb	      0xe800000000	                          call 0x40002f0	        67	prune-packed.c	FUNCTION_4
0x40002f0	              0xc9	                                   leave	        67	prune-packed.c	FUNCTION_4
0x40002f1	              0xc3	                                     ret	        67	prune-packed.c	FUNCTION_4
_	functions,0:SWITCH,0:CALL,0:IF,1:FOR,0:WHILE,0:ELSE,0:DO,0	15
0x4000040	              0x55	                                push rbp	        51	gettext.h	FUNCTION_7
0x4000041	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_7
0x4000044	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_7
0x4000048	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_7
0x400004c	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_7	IF_1
0x4000050	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_7	IF_1
0x4000053	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_7	IF_1
0x4000055	            0x7507	                           jne 0x400005e	        52	gettext.h	FUNCTION_7	IF_1
0x4000057	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_7	IF_1
0x400005c	            0xeb0c	                           jmp 0x400006a	        53	gettext.h	FUNCTION_7	IF_1
0x400005e	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_7
0x4000062	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_7
0x4000065	      0xe800000000	                          call 0x400006a	        54	gettext.h	FUNCTION_7
0x400006a	              0xc9	                                   leave	        55	gettext.h	FUNCTION_7
0x400006b	              0xc3	                                     ret	        55	gettext.h	FUNCTION_7
prune_subdir	functions,0:SWITCH,0:CALL,2:IF,1:FOR,0:WHILE,0:ELSE,0:DO,0	26
0x400006c	              0x55	                                push rbp	        15	prune-packed.c	FUNCTION_1
0x400006d	          0x4889e5	                            mov rbp, rsp	        15	prune-packed.c	FUNCTION_1
0x4000070	        0x4883ec30	                           sub rsp, 0x30	        15	prune-packed.c	FUNCTION_1
0x4000074	          0x897dec	             mov dword [rbp - 0x14], edi	        15	prune-packed.c	FUNCTION_1
0x4000077	        0x488975e0	             mov qword [rbp - 0x20], rsi	        15	prune-packed.c	FUNCTION_1
0x400007b	        0x488955d8	             mov qword [rbp - 0x28], rdx	        15	prune-packed.c	FUNCTION_1
0x400007f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        16	prune-packed.c	FUNCTION_1
0x4000083	        0x488945f8	                mov qword [rbp - 8], rax	        16	prune-packed.c	FUNCTION_1
0x4000087	          0x8b45ec	             mov eax, dword [rbp - 0x14]	        17	prune-packed.c	FUNCTION_1	CALL_1
0x400008a	          0x83c001	                              add eax, 1	        17	prune-packed.c	FUNCTION_1	CALL_1
0x400008d	            0x89c2	                            mov edx, eax	        17	prune-packed.c	FUNCTION_1	CALL_1
0x400008f	    0x488b05000000	            mov rax, qword [0x04000096] 	        17	prune-packed.c	FUNCTION_1	CALL_1
0x4000096	          0x4889d6	                            mov rsi, rdx	        17	prune-packed.c	FUNCTION_1	CALL_1
0x4000099	          0x4889c7	                            mov rdi, rax	        17	prune-packed.c	FUNCTION_1	CALL_1
0x400009c	      0xe800000000	                          call 0x40000a1	        17	prune-packed.c	FUNCTION_1	CALL_1
0x40000a1	        0x488b45f8	                mov rax, qword [rbp - 8]	        18	prune-packed.c	FUNCTION_1	IF_1
0x40000a5	            0x8b00	                    mov eax, dword [rax]	        18	prune-packed.c	FUNCTION_1	IF_1
0x40000a7	          0x83e001	                              and eax, 1	        18	prune-packed.c	FUNCTION_1	IF_1
0x40000aa	            0x85c0	                           test eax, eax	        18	prune-packed.c	FUNCTION_1	IF_1
0x40000ac	            0x750c	                           jne 0x40000ba	        18	prune-packed.c	FUNCTION_1	IF_1
0x40000ae	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        19	prune-packed.c	FUNCTION_1	CALL_2
0x40000b2	          0x4889c7	                            mov rdi, rax	        19	prune-packed.c	FUNCTION_1	CALL_2
0x40000b5	      0xe800000000	                          call 0x40000ba	        19	prune-packed.c	FUNCTION_1	CALL_2
0x40000ba	      0xb800000000	                              mov eax, 0	        20	prune-packed.c	FUNCTION_1
0x40000bf	              0xc9	                                   leave	        21	prune-packed.c	FUNCTION_1
0x40000c0	              0xc3	                                     ret	        21	prune-packed.c	FUNCTION_1
