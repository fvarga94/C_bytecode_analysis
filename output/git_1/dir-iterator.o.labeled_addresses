strbuf_avail	IF,0:ELSE,0:DO,0:CALL,0:FOR,0:WHILE,0:SWITCH,0:functions,0	18
0x40000a5	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_2
0x40000a6	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_2
0x40000a9	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_2
0x40000ad	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x40000b1	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_2
0x40000b4	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_2
0x40000b7	            0x741b	                            je 0x40000d4	       141	strbuf.h	FUNCTION_2
0x40000b9	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x40000bd	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_2
0x40000c0	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_2
0x40000c4	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_2
0x40000c8	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_2
0x40000cb	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_2
0x40000ce	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_2
0x40000d2	            0xeb05	                           jmp 0x40000d9	       141	strbuf.h	FUNCTION_2
0x40000d4	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_2
0x40000d9	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_2
0x40000da	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_2
dir_iterator_advance	IF,14:ELSE,3:DO,0:CALL,19:FOR,0:WHILE,2:SWITCH,0:functions,0	287
0x4000266	              0x55	                                push rbp	        54	dir-iterator.c	FUNCTION_12
0x4000267	          0x4889e5	                            mov rbp, rsp	        54	dir-iterator.c	FUNCTION_12
0x400026a	        0x4883ec30	                           sub rsp, 0x30	        54	dir-iterator.c	FUNCTION_12
0x400026e	        0x48897dd8	             mov qword [rbp - 0x28], rdi	        54	dir-iterator.c	FUNCTION_12
0x4000272	        0x488b45d8	             mov rax, qword [rbp - 0x28]	        55	dir-iterator.c	FUNCTION_12
0x4000276	        0x488945e8	             mov qword [rbp - 0x18], rax	        55	dir-iterator.c	FUNCTION_12
0x400027a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        60	dir-iterator.c	FUNCTION_12	WHILE_1
0x400027e	    0x488b90c80000	            mov rdx, qword [rax + 0xc8] 	        60	dir-iterator.c	FUNCTION_12	WHILE_1
0x4000285	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        60	dir-iterator.c	FUNCTION_12	WHILE_1
0x4000289	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	        60	dir-iterator.c	FUNCTION_12	WHILE_1
0x4000290	        0x48c1e005	                              shl rax, 5	        60	dir-iterator.c	FUNCTION_12	WHILE_1
0x4000294	        0x4883e820	                           sub rax, 0x20	        60	dir-iterator.c	FUNCTION_12	WHILE_1
0x4000298	          0x4801d0	                            add rax, rdx	        59	dir-iterator.c	FUNCTION_12	WHILE_1
0x400029b	        0x488945f0	             mov qword [rbp - 0x10], rax	        59	dir-iterator.c	FUNCTION_12	WHILE_1
0x400029f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        63	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1
0x40002a3	            0x8b00	                    mov eax, dword [rax]	        63	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1
0x40002a5	            0x85c0	                           test eax, eax	        63	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1
0x40002a7	     0xf85b7000000	                           jne 0x4000364	        63	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1
0x40002ad	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        68	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_2
0x40002b1	        0x488b5010	            mov rdx, qword [rax + 0x10] 	        68	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_2
0x40002b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        68	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_2
0x40002b9	        0x488b4008	                mov rax, qword [rax + 8]	        68	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_2
0x40002bd	        0x4883e801	                              sub rax, 1	        68	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_2
0x40002c1	          0x4801d0	                            add rax, rdx	        68	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_2
0x40002c4	           0xfb600	                   movzx eax, byte [rax]	        68	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_2
0x40002c7	           0xfbec0	                           movsx eax, al	        68	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_2
0x40002ca	            0x89c7	                            mov edi, eax	        68	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_2
0x40002cc	      0xe86ffdffff	                 call sym.git_is_dir_sep	        68	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_2
0x40002d1	            0x85c0	                           test eax, eax	        68	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_2
0x40002d3	            0x7511	                           jne 0x40002e6	        68	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_2
0x40002d5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        69	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	CALL_1
0x40002d9	      0xbe2f000000	                           mov esi, 0x2f	        69	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	CALL_1
0x40002de	          0x4889c7	                            mov rdi, rax	        69	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	CALL_1
0x40002e1	      0xe88ffeffff	                   call sym.strbuf_addch	        69	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	CALL_1
0x40002e6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        70	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1
0x40002ea	        0x488b5008	                mov rdx, qword [rax + 8]	        70	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1
0x40002ee	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        70	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1
0x40002f2	        0x48895010	             mov qword [rax + 0x10], rdx	        70	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1
0x40002f6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        72	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	CALL_2
0x40002fa	        0x488b4010	            mov rax, qword [rax + 0x10] 	        72	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	CALL_2
0x40002fe	          0x4889c7	                            mov rdi, rax	        72	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	CALL_2
0x4000301	      0xe800000000	                          call 0x4000306	        72	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	CALL_2
0x4000306	          0x4889c2	                            mov rdx, rax	        72	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	CALL_2
0x4000309	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        72	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	CALL_2
0x400030d	        0x48895008	                mov qword [rax + 8], rdx	        72	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	CALL_2
0x4000311	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        73	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3
0x4000315	        0x488b4008	                mov rax, qword [rax + 8]	        73	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3
0x4000319	          0x4885c0	                           test rax, rax	        73	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3
0x400031c	            0x7537	                           jne 0x4000355	        73	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3
0x400031e	      0xe800000000	                          call 0x4000323	        73	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3
0x4000323	            0x8b00	                    mov eax, dword [rax]	        73	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3
0x4000325	          0x83f802	                              cmp eax, 2	        73	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3
0x4000328	            0x742b	                            je 0x4000355	        73	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3
0x400032a	      0xe800000000	                          call 0x400032f	        75	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3	CALL_4
0x400032f	            0x8b00	                    mov eax, dword [rax]	        74	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3	CALL_3
0x4000331	            0x89c7	                            mov edi, eax	        74	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3	CALL_3
0x4000333	      0xe800000000	                          call 0x4000338	        74	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3	CALL_3
0x4000338	          0x4889c2	                            mov rdx, rax	        74	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3	CALL_3
0x400033b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        74	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3	CALL_3
0x400033f	        0x488b4010	            mov rax, qword [rax + 0x10] 	        74	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3	CALL_3
0x4000343	          0x4889c6	                            mov rsi, rax	        74	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3	CALL_3
0x4000346	      0xbf00000000	                              mov edi, 0	        74	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3	CALL_3
0x400034b	      0xb800000000	                              mov eax, 0	        74	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3	CALL_3
0x4000350	      0xe800000000	                          call 0x4000355	        74	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1	IF_3	CALL_3
0x4000355	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        79	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1
0x4000359	    0xc70001000000	                      mov dword [rax], 1	        79	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1
0x400035f	      0xe949010000	                           jmp 0x40004ad	        79	dir-iterator.c	FUNCTION_12	WHILE_1	IF_1
0x4000364	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        80	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	CALL_5
0x4000368	          0x8b4040	            mov eax, dword [rax + 0x40] 	        80	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	CALL_5
0x400036b	      0x2500f00000	                         and eax, 0xf000	        80	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	CALL_5
0x4000370	      0x3d00400000	                         cmp eax, 0x4000	        80	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	CALL_5
0x4000375	     0xf8532010000	                           jne 0x40004ad	        80	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	CALL_5
0x400037b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        81	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x400037f	          0x8b4018	            mov eax, dword [rax + 0x18] 	        81	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x4000382	            0x85c0	                           test eax, eax	        81	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x4000384	     0xf8523010000	                           jne 0x40004ad	        81	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x400038a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        87	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x400038e	    0xc74018010000	               mov dword [rax + 0x18], 1	        87	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x4000395	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x4000399	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x40003a0	        0x488d5001	                      lea rdx, [rax + 1]	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x40003a4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x40003a8	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x40003af	          0x4839c2	                            cmp rdx, rax	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x40003b2	     0xf86b6000000	                           jbe 0x400046e	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x40003b8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x40003bc	    0x488b90c00000	            mov rdx, qword [rax + 0xc0] 	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x40003c3	          0x4889d0	                            mov rax, rdx	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x40003c6	          0x4801c0	                            add rax, rax	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x40003c9	          0x4801d0	                            add rax, rdx	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x40003cc	        0x4883c030	                           add rax, 0x30	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x40003d0	          0x48d1e8	                              shr rax, 1	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x40003d3	          0x4889c2	                            mov rdx, rax	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x40003d6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x40003da	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x40003e1	        0x4883c001	                              add rax, 1	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x40003e5	          0x4839c2	                            cmp rdx, rax	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x40003e8	            0x731c	                           jae 0x4000406	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x40003ea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x40003ee	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x40003f5	        0x488d5001	                      lea rdx, [rax + 1]	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x40003f9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x40003fd	    0x488990c00000	             mov qword [rax + 0xc0], rdx	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x4000404	            0xeb29	                           jmp 0x400042f	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x4000406	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x400040a	    0x488b90c00000	            mov rdx, qword [rax + 0xc0] 	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x4000411	          0x4889d0	                            mov rax, rdx	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x4000414	          0x4801c0	                            add rax, rax	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x4000417	          0x4801d0	                            add rax, rdx	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x400041a	        0x4883c030	                           add rax, 0x30	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x400041e	          0x48d1e8	                              shr rax, 1	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x4000421	          0x4889c2	                            mov rdx, rax	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x4000424	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x4000428	    0x488990c00000	             mov qword [rax + 0xc0], rdx	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x400042f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x4000433	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x400043a	          0x4889c6	                            mov rsi, rax	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x400043d	      0xbf20000000	                           mov edi, 0x20	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x4000442	      0xe80cfcffff	                        call sym.st_mult	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x4000447	          0x4889c2	                            mov rdx, rax	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x400044a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x400044e	    0x488b80c80000	            mov rax, qword [rax + 0xc8] 	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x4000455	          0x4889d6	                            mov rsi, rdx	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x4000458	          0x4889c7	                            mov rdi, rax	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x400045b	      0xe800000000	                          call 0x4000460	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x4000460	          0x4889c2	                            mov rdx, rax	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x4000463	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x4000467	    0x488990c80000	             mov qword [rax + 0xc8], rdx	        88	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5	CALL_6
0x400046e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        90	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x4000472	    0x488bb0c80000	            mov rsi, qword [rax + 0xc8] 	        90	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x4000479	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        90	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x400047d	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	        90	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x4000484	        0x488d4801	                      lea rcx, [rax + 1]	        90	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x4000488	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        90	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x400048c	    0x48898ab80000	             mov qword [rdx + 0xb8], rcx	        90	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x4000493	        0x48c1e005	                              shl rax, 5	        90	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x4000497	          0x4801f0	                            add rax, rsi	        90	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x400049a	        0x488945f0	             mov qword [rbp - 0x10], rax	        90	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x400049e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        91	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x40004a2	    0xc70000000000	                      mov dword [rax], 0	        91	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x40004a8	      0xe93c020000	                           jmp 0x40006e9	        92	dir-iterator.c	FUNCTION_12	WHILE_1	ELSE_1	IF_4	IF_5
0x40004ad	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       102	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6
0x40004b1	        0x488b4008	                mov rax, qword [rax + 8]	       102	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6
0x40004b5	          0x4885c0	                           test rax, rax	       102	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6
0x40004b8	            0x753f	                           jne 0x40004f9	       102	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6
0x40004ba	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       107	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6	IF_7
0x40004be	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	       107	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6	IF_7
0x40004c5	        0x488d50ff	                      lea rdx, [rax - 1]	       107	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6	IF_7
0x40004c9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       107	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6	IF_7
0x40004cd	    0x488990b80000	             mov qword [rax + 0xb8], rdx	       107	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6	IF_7
0x40004d4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       107	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6	IF_7
0x40004d8	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	       107	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6	IF_7
0x40004df	          0x4885c0	                           test rax, rax	       107	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6	IF_7
0x40004e2	     0xf85fa010000	                           jne 0x40006e2	       107	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6	IF_7
0x40004e8	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       108	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6	CALL_7
0x40004ec	          0x4889c7	                            mov rdi, rax	       108	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6	CALL_7
0x40004ef	      0xe800000000	                          call 0x40004f4	       108	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6	CALL_7
0x40004f4	      0xe9f5010000	                           jmp 0x40006ee	       108	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6	CALL_7
0x40004f9	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       118	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_8
0x40004fd	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       118	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_8
0x4000501	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       118	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_8
0x4000505	          0x4889d6	                            mov rsi, rdx	       118	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_8
0x4000508	          0x4889c7	                            mov rdi, rax	       118	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_8
0x400050b	      0xe8cbfbffff	                  call sym.strbuf_setlen	       118	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_8
0x4000510	      0xe800000000	                          call 0x4000515	       119	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x4000515	    0xc70000000000	                      mov dword [rax], 0	       119	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x400051b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       120	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_9
0x400051f	        0x488b4008	                mov rax, qword [rax + 8]	       120	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_9
0x4000523	          0x4889c7	                            mov rdi, rax	       120	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_9
0x4000526	      0xe800000000	                          call 0x400052b	       120	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_9
0x400052b	        0x488945f8	                mov qword [rbp - 8], rax	       120	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_9
0x400052f	      0x48837df800	                  cmp qword [rbp - 8], 0	       122	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8
0x4000534	     0xf85c2000000	                           jne 0x40005fc	       122	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8
0x400053a	      0xe800000000	                          call 0x400053f	       124	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_9
0x400053f	            0x8b00	                    mov eax, dword [rax]	       124	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_9
0x4000541	            0x85c0	                           test eax, eax	       124	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_9
0x4000543	            0x742d	                            je 0x4000572	       124	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_9
0x4000545	      0xe800000000	                          call 0x400054a	       126	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_9	CALL_11
0x400054a	            0x8b00	                    mov eax, dword [rax]	       125	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_9	CALL_10
0x400054c	            0x89c7	                            mov edi, eax	       125	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_9	CALL_10
0x400054e	      0xe800000000	                          call 0x4000553	       125	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_9	CALL_10
0x4000553	          0x4889c2	                            mov rdx, rax	       125	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_9	CALL_10
0x4000556	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       125	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_9	CALL_10
0x400055a	        0x488b4010	            mov rax, qword [rax + 0x10] 	       125	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_9	CALL_10
0x400055e	          0x4889c6	                            mov rsi, rax	       125	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_9	CALL_10
0x4000561	      0xbf00000000	                              mov edi, 0	       125	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_9	CALL_10
0x4000566	      0xb800000000	                              mov eax, 0	       125	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_9	CALL_10
0x400056b	      0xe800000000	                          call 0x4000570	       125	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_9	CALL_10
0x4000570	            0xeb3f	                           jmp 0x40005b1	       125	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_9	CALL_10
0x4000572	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       127	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	ELSE_3	IF_10	CALL_12
0x4000576	        0x488b4008	                mov rax, qword [rax + 8]	       127	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	ELSE_3	IF_10	CALL_12
0x400057a	          0x4889c7	                            mov rdi, rax	       127	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	ELSE_3	IF_10	CALL_12
0x400057d	      0xe800000000	                          call 0x4000582	       127	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	ELSE_3	IF_10	CALL_12
0x4000582	            0x85c0	                           test eax, eax	       127	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	ELSE_3	IF_10	CALL_12
0x4000584	            0x742b	                            je 0x40005b1	       127	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	ELSE_3	IF_10	CALL_12
0x4000586	      0xe800000000	                          call 0x400058b	       129	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	ELSE_3	IF_10
0x400058b	            0x8b00	                    mov eax, dword [rax]	       128	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	ELSE_3	IF_10	CALL_13
0x400058d	            0x89c7	                            mov edi, eax	       128	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	ELSE_3	IF_10	CALL_13
0x400058f	      0xe800000000	                          call 0x4000594	       128	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	ELSE_3	IF_10	CALL_13
0x4000594	          0x4889c2	                            mov rdx, rax	       128	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	ELSE_3	IF_10	CALL_13
0x4000597	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       128	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	ELSE_3	IF_10	CALL_13
0x400059b	        0x488b4010	            mov rax, qword [rax + 0x10] 	       128	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	ELSE_3	IF_10	CALL_13
0x400059f	          0x4889c6	                            mov rsi, rax	       128	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	ELSE_3	IF_10	CALL_13
0x40005a2	      0xbf00000000	                              mov edi, 0	       128	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	ELSE_3	IF_10	CALL_13
0x40005a7	      0xb800000000	                              mov eax, 0	       128	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	ELSE_3	IF_10	CALL_13
0x40005ac	      0xe800000000	                          call 0x40005b1	       128	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	ELSE_3	IF_10	CALL_13
0x40005b1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       131	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8
0x40005b5	    0x48c740080000	                  mov qword [rax + 8], 0	       131	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8
0x40005bd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       132	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_11
0x40005c1	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	       132	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_11
0x40005c8	        0x488d50ff	                      lea rdx, [rax - 1]	       132	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_11
0x40005cc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       132	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_11
0x40005d0	    0x488990b80000	             mov qword [rax + 0xb8], rdx	       132	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_11
0x40005d7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       132	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_11
0x40005db	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	       132	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_11
0x40005e2	          0x4885c0	                           test rax, rax	       132	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_11
0x40005e5	     0xf85fd000000	                           jne 0x40006e8	       132	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	IF_11
0x40005eb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       133	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	CALL_15
0x40005ef	          0x4889c7	                            mov rdi, rax	       133	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	CALL_15
0x40005f2	      0xe800000000	                          call 0x40005f7	       133	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	CALL_15
0x40005f7	      0xe9f2000000	                           jmp 0x40006ee	       133	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8	CALL_15
0x40005fc	        0x488b45f8	                mov rax, qword [rbp - 8]	       137	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_12	CALL_16
0x4000600	        0x4883c013	                           add rax, 0x13	       137	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_12	CALL_16
0x4000604	          0x4889c7	                            mov rdi, rax	       137	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_12	CALL_16
0x4000607	      0xe80cfcffff	               call sym.is_dot_or_dotdot	       137	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_12	CALL_16
0x400060c	            0x85c0	                           test eax, eax	       137	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_12	CALL_16
0x400060e	     0xf85c2000000	                           jne 0x40006d6	       137	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_12	CALL_16
0x4000614	        0x488b45f8	                mov rax, qword [rbp - 8]	       140	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_17
0x4000618	        0x488d5013	                   lea rdx, [rax + 0x13]	       140	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_17
0x400061c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       140	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_17
0x4000620	          0x4889d6	                            mov rsi, rdx	       140	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_17
0x4000623	          0x4889c7	                            mov rdi, rax	       140	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_17
0x4000626	      0xe8b8fbffff	                  call sym.strbuf_addstr	       140	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_17
0x400062b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       141	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13
0x400062f	        0x488d5028	                   lea rdx, [rax + 0x28]	       141	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13
0x4000633	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       141	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13
0x4000637	        0x488b4010	            mov rax, qword [rax + 0x10] 	       141	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13
0x400063b	          0x4889d6	                            mov rsi, rdx	       141	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13
0x400063e	          0x4889c7	                            mov rdi, rax	       141	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13
0x4000641	      0xe800000000	                          call 0x4000646	       141	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13
0x4000646	            0x85c0	                           test eax, eax	       141	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13
0x4000648	            0x793d	                           jns 0x4000687	       141	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13
0x400064a	      0xe800000000	                          call 0x400064f	       142	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	IF_14
0x400064f	            0x8b00	                    mov eax, dword [rax]	       142	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	IF_14
0x4000651	          0x83f802	                              cmp eax, 2	       142	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	IF_14
0x4000654	     0xf8482000000	                            je 0x40006dc	       142	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	IF_14
0x400065a	      0xe800000000	                          call 0x400065f	       145	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	CALL_19
0x400065f	            0x8b00	                    mov eax, dword [rax]	       143	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	IF_14	CALL_18
0x4000661	            0x89c7	                            mov edi, eax	       143	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	IF_14	CALL_18
0x4000663	      0xe800000000	                          call 0x4000668	       143	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	IF_14	CALL_18
0x4000668	          0x4889c2	                            mov rdx, rax	       143	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	IF_14	CALL_18
0x400066b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       143	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	IF_14	CALL_18
0x400066f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       143	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	IF_14	CALL_18
0x4000673	          0x4889c6	                            mov rsi, rax	       143	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	IF_14	CALL_18
0x4000676	      0xbf00000000	                              mov edi, 0	       143	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	IF_14	CALL_18
0x400067b	      0xb800000000	                              mov eax, 0	       143	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	IF_14	CALL_18
0x4000680	      0xe800000000	                          call 0x4000685	       143	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13	IF_14	CALL_18
0x4000685	            0xeb55	                           jmp 0x40006dc	       146	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13
0x4000687	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       154	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x400068b	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       154	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x400068f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       154	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x4000693	    0x488b80c80000	            mov rax, qword [rax + 0xc8] 	       154	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x400069a	        0x488b4010	            mov rax, qword [rax + 0x10] 	       154	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x400069e	          0x4801c2	                            add rdx, rax	       154	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x40006a1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       153	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x40006a5	        0x48895018	             mov qword [rax + 0x18], rdx	       153	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x40006a9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       156	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x40006ad	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       156	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x40006b1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       156	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x40006b5	        0x488b4010	            mov rax, qword [rax + 0x10] 	       156	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x40006b9	          0x4801c2	                            add rdx, rax	       156	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x40006bc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       155	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x40006c0	        0x48895020	             mov qword [rax + 0x20], rdx	       155	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x40006c4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       157	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x40006c8	    0xc74018000000	               mov dword [rax + 0x18], 0	       157	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x40006cf	      0xb800000000	                              mov eax, 0	       159	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x40006d4	            0xeb18	                           jmp 0x40006ee	       159	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x40006d6	              0x90	                                     nop	       138	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_12
0x40006d7	      0xe91dfeffff	                           jmp 0x40004f9	       138	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_12
0x40006dc	              0x90	                                     nop	       146	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_13
0x40006dd	      0xe917feffff	                           jmp 0x40004f9	       160	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2
0x40006e2	              0x90	                                     nop	       110	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6
0x40006e3	      0xe992fbffff	                           jmp 0x400027a	       110	dir-iterator.c	FUNCTION_12	WHILE_1	IF_6
0x40006e8	              0x90	                                     nop	       134	dir-iterator.c	FUNCTION_12	WHILE_1	WHILE_2	IF_8
0x40006e9	      0xe98cfbffff	                           jmp 0x400027a	       161	dir-iterator.c	FUNCTION_12	WHILE_1
0x40006ee	              0xc9	                                   leave	       162	dir-iterator.c	FUNCTION_12
0x40006ef	              0xc3	                                     ret	       162	dir-iterator.c	FUNCTION_12
strbuf_addstr	IF,0:ELSE,0:DO,0:CALL,2:FOR,0:WHILE,0:SWITCH,0:functions,0	17
0x40001e3	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_5
0x40001e4	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_5
0x40001e7	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_5
0x40001eb	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_5
0x40001ef	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_5
0x40001f3	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_5	CALL_2
0x40001f7	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x40001fa	      0xe800000000	                          call 0x40001ff	       279	strbuf.h	FUNCTION_5	CALL_2
0x40001ff	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x4000202	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_5	CALL_2
0x4000206	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_5	CALL_2
0x400020a	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_5	CALL_2
0x400020d	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_5	CALL_2
0x4000210	      0xe800000000	                          call 0x4000215	       279	strbuf.h	FUNCTION_5	CALL_2
0x4000215	              0x90	                                     nop	       280	strbuf.h	FUNCTION_5
0x4000216	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_5
0x4000217	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_5
st_mult	IF,1:ELSE,0:DO,0:CALL,1:FOR,0:WHILE,0:SWITCH,0:functions,0	22
0x4000053	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_29
0x4000054	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_29
0x4000057	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_29
0x400005b	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_29
0x400005f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_29
0x4000063	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_29	IF_1
0x4000068	            0x7430	                            je 0x400009a	       795	git-compat-util.h	FUNCTION_29	IF_1
0x400006a	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_29	IF_1
0x4000071	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_29	IF_1
0x4000076	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_29	IF_1
0x400007a	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_29	IF_1
0x400007e	            0x731a	                           jae 0x400009a	       795	git-compat-util.h	FUNCTION_29	IF_1
0x4000080	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_29	IF_1	CALL_1
0x4000084	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_29	IF_1	CALL_1
0x4000088	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_29	IF_1	CALL_1
0x400008b	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_29	IF_1	CALL_1
0x4000090	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_29	IF_1	CALL_1
0x4000095	      0xe800000000	                          call 0x400009a	       796	git-compat-util.h	FUNCTION_29	IF_1	CALL_1
0x400009a	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_29
0x400009e	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_29
0x40000a3	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_29
0x40000a4	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_29
dir_iterator_abort	IF,1:ELSE,0:DO,0:CALL,7:FOR,1:WHILE,0:SWITCH,0:functions,0	64
0x40006f0	              0x55	                                push rbp	       165	dir-iterator.c	FUNCTION_13
0x40006f1	          0x4889e5	                            mov rbp, rsp	       165	dir-iterator.c	FUNCTION_13
0x40006f4	        0x4883ec20	                           sub rsp, 0x20	       165	dir-iterator.c	FUNCTION_13
0x40006f8	        0x48897de8	             mov qword [rbp - 0x18], rdi	       165	dir-iterator.c	FUNCTION_13
0x40006fc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       166	dir-iterator.c	FUNCTION_13
0x4000700	        0x488945f0	             mov qword [rbp - 0x10], rax	       166	dir-iterator.c	FUNCTION_13
0x4000704	      0xe9a2000000	                           jmp 0x40007ab	       168	dir-iterator.c	FUNCTION_13	FOR_1
0x4000709	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       170	dir-iterator.c	FUNCTION_13	FOR_1
0x400070d	    0x488b90c80000	            mov rdx, qword [rax + 0xc8] 	       170	dir-iterator.c	FUNCTION_13	FOR_1
0x4000714	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       170	dir-iterator.c	FUNCTION_13	FOR_1
0x4000718	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	       170	dir-iterator.c	FUNCTION_13	FOR_1
0x400071f	        0x48c1e005	                              shl rax, 5	       170	dir-iterator.c	FUNCTION_13	FOR_1
0x4000723	        0x4883e820	                           sub rax, 0x20	       170	dir-iterator.c	FUNCTION_13	FOR_1
0x4000727	          0x4801d0	                            add rax, rdx	       169	dir-iterator.c	FUNCTION_13	FOR_1
0x400072a	        0x488945f8	                mov qword [rbp - 8], rax	       169	dir-iterator.c	FUNCTION_13	FOR_1
0x400072e	        0x488b45f8	                mov rax, qword [rbp - 8]	       172	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_1
0x4000732	        0x488b4008	                mov rax, qword [rax + 8]	       172	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_1
0x4000736	          0x4885c0	                           test rax, rax	       172	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_1
0x4000739	            0x7456	                            je 0x4000791	       172	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_1
0x400073b	        0x488b45f8	                mov rax, qword [rbp - 8]	       172	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_1
0x400073f	        0x488b4008	                mov rax, qword [rax + 8]	       172	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_1
0x4000743	          0x4889c7	                            mov rdi, rax	       172	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_1
0x4000746	      0xe800000000	                          call 0x400074b	       172	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_1
0x400074b	            0x85c0	                           test eax, eax	       172	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_1
0x400074d	            0x7442	                            je 0x4000791	       172	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_1
0x400074f	        0x488b45f8	                mov rax, qword [rbp - 8]	       173	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_2
0x4000753	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       173	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_2
0x4000757	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       173	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_2
0x400075b	          0x4889d6	                            mov rsi, rdx	       173	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_2
0x400075e	          0x4889c7	                            mov rdi, rax	       173	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_2
0x4000761	      0xe875f9ffff	                  call sym.strbuf_setlen	       173	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_2
0x4000766	      0xe800000000	                          call 0x400076b	       175	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_4
0x400076b	            0x8b00	                    mov eax, dword [rax]	       174	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_3
0x400076d	            0x89c7	                            mov edi, eax	       174	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_3
0x400076f	      0xe800000000	                          call 0x4000774	       174	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_3
0x4000774	          0x4889c2	                            mov rdx, rax	       174	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_3
0x4000777	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       174	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_3
0x400077b	        0x488b4010	            mov rax, qword [rax + 0x10] 	       174	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_3
0x400077f	          0x4889c6	                            mov rsi, rax	       174	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_3
0x4000782	      0xbf00000000	                              mov edi, 0	       174	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_3
0x4000787	      0xb800000000	                              mov eax, 0	       174	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_3
0x400078c	      0xe800000000	                          call 0x4000791	       174	dir-iterator.c	FUNCTION_13	FOR_1	IF_1	CALL_3
0x4000791	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       168	dir-iterator.c	FUNCTION_13	FOR_1
0x4000795	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	       168	dir-iterator.c	FUNCTION_13	FOR_1
0x400079c	        0x488d50ff	                      lea rdx, [rax - 1]	       168	dir-iterator.c	FUNCTION_13	FOR_1
0x40007a0	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       168	dir-iterator.c	FUNCTION_13	FOR_1
0x40007a4	    0x488990b80000	             mov qword [rax + 0xb8], rdx	       168	dir-iterator.c	FUNCTION_13	FOR_1
0x40007ab	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       168	dir-iterator.c	FUNCTION_13	FOR_1
0x40007af	    0x488b80b80000	            mov rax, qword [rax + 0xb8] 	       168	dir-iterator.c	FUNCTION_13	FOR_1
0x40007b6	          0x4885c0	                           test rax, rax	       168	dir-iterator.c	FUNCTION_13	FOR_1
0x40007b9	     0xf854affffff	                           jne 0x4000709	       168	dir-iterator.c	FUNCTION_13	FOR_1
0x40007bf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       179	dir-iterator.c	FUNCTION_13	CALL_5
0x40007c3	    0x488b80c80000	            mov rax, qword [rax + 0xc8] 	       179	dir-iterator.c	FUNCTION_13	CALL_5
0x40007ca	          0x4889c7	                            mov rdi, rax	       179	dir-iterator.c	FUNCTION_13	CALL_5
0x40007cd	      0xe800000000	                          call 0x40007d2	       179	dir-iterator.c	FUNCTION_13	CALL_5
0x40007d2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       180	dir-iterator.c	FUNCTION_13	CALL_6
0x40007d6	          0x4889c7	                            mov rdi, rax	       180	dir-iterator.c	FUNCTION_13	CALL_6
0x40007d9	      0xe800000000	                          call 0x40007de	       180	dir-iterator.c	FUNCTION_13	CALL_6
0x40007de	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       181	dir-iterator.c	FUNCTION_13	CALL_7
0x40007e2	          0x4889c7	                            mov rdi, rax	       181	dir-iterator.c	FUNCTION_13	CALL_7
0x40007e5	      0xe800000000	                          call 0x40007ea	       181	dir-iterator.c	FUNCTION_13	CALL_7
0x40007ea	      0xb8ffffffff	                     mov eax, 0xffffffff	       182	dir-iterator.c	FUNCTION_13
0x40007ef	              0xc9	                                   leave	       183	dir-iterator.c	FUNCTION_13
0x40007f0	              0xc3	                                     ret	       183	dir-iterator.c	FUNCTION_13
strbuf_setlen	IF,2:ELSE,1:DO,0:CALL,2:FOR,0:WHILE,0:SWITCH,0:functions,0	43
0x40000db	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_3
0x40000dc	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_3
0x40000df	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_3
0x40000e3	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_3
0x40000e7	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_3
0x40000eb	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_3	IF_1
0x40000ef	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_3	IF_1
0x40000f2	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_3	IF_1
0x40000f5	            0x740d	                            je 0x4000104	       162	strbuf.h	FUNCTION_3	IF_1
0x40000f7	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_3	IF_1
0x40000fb	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_3	IF_1
0x40000fe	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_3	IF_1
0x4000102	            0xeb05	                           jmp 0x4000109	       162	strbuf.h	FUNCTION_3	IF_1
0x4000104	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_3	IF_1
0x4000109	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_3	IF_1
0x400010d	            0x730f	                           jae 0x400011e	       162	strbuf.h	FUNCTION_3	IF_1
0x400010f	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_3	CALL_1
0x4000114	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_3	CALL_1
0x4000119	      0xe800000000	                          call 0x400011e	       163	strbuf.h	FUNCTION_3	CALL_1
0x400011e	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_3
0x4000122	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_3
0x4000126	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_3
0x400012a	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_3	IF_2
0x400012e	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_3	IF_2
0x4000132	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_3	IF_2
0x4000138	            0x7414	                            je 0x400014e	       165	strbuf.h	FUNCTION_3	IF_2
0x400013a	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_3	IF_2
0x400013e	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_3	IF_2
0x4000142	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_3	IF_2
0x4000146	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_3	IF_2
0x4000149	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_3	IF_2
0x400014c	            0xeb24	                           jmp 0x4000172	       169	strbuf.h	FUNCTION_3
0x400014e	     0xfb605000000	           movzx eax, byte [0x04000155] 	       168	strbuf.h	FUNCTION_3	CALL_2
0x4000155	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_3	CALL_2
0x4000157	            0x7419	                            je 0x4000172	       168	strbuf.h	FUNCTION_3	CALL_2
0x4000159	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0x400015e	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_3	CALL_2
0x4000163	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0x4000168	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_3	CALL_2
0x400016d	      0xe800000000	                          call 0x4000172	       168	strbuf.h	FUNCTION_3	CALL_2
0x4000172	              0x90	                                     nop	       169	strbuf.h	FUNCTION_3
0x4000173	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_3
0x4000174	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_3
strbuf_addch	IF,1:ELSE,0:DO,0:CALL,2:FOR,0:WHILE,0:SWITCH,0:functions,0	33
0x4000175	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_4
0x4000176	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_4
0x4000179	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_4
0x400017d	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_4
0x4000181	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_4
0x4000184	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x4000188	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x400018b	      0xe815ffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x4000190	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x4000193	            0x7511	                           jne 0x40001a6	       227	strbuf.h	FUNCTION_4	IF_1	CALL_1
0x4000195	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_4	CALL_2
0x4000199	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_4	CALL_2
0x400019e	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_4	CALL_2
0x40001a1	      0xe800000000	                          call 0x40001a6	       228	strbuf.h	FUNCTION_4	CALL_2
0x40001a6	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x40001aa	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_4
0x40001ae	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x40001b2	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_4
0x40001b6	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_4
0x40001ba	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_4
0x40001be	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_4
0x40001c2	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_4
0x40001c5	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_4
0x40001c8	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_4
0x40001ca	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_4
0x40001ce	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_4
0x40001d2	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_4
0x40001d6	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_4
0x40001da	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_4
0x40001dd	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_4
0x40001e0	              0x90	                                     nop	       231	strbuf.h	FUNCTION_4
0x40001e1	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_4
0x40001e2	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_4
dir_iterator_begin	IF,1:ELSE,0:DO,0:CALL,5:FOR,0:WHILE,0:SWITCH,0:functions,0	75
0x40007f1	              0x55	                                push rbp	       186	dir-iterator.c	FUNCTION_14
0x40007f2	          0x4889e5	                            mov rbp, rsp	       186	dir-iterator.c	FUNCTION_14
0x40007f5	        0x4883ec20	                           sub rsp, 0x20	       186	dir-iterator.c	FUNCTION_14
0x40007f9	        0x48897de8	             mov qword [rbp - 0x18], rdi	       186	dir-iterator.c	FUNCTION_14
0x40007fd	      0xbed0000000	                           mov esi, 0xd0	       187	dir-iterator.c	FUNCTION_14	CALL_1
0x4000802	      0xbf01000000	                              mov edi, 1	       187	dir-iterator.c	FUNCTION_14	CALL_1
0x4000807	      0xe800000000	                          call 0x400080c	       187	dir-iterator.c	FUNCTION_14	CALL_1
0x400080c	        0x488945f0	             mov qword [rbp - 0x10], rax	       187	dir-iterator.c	FUNCTION_14	CALL_1
0x4000810	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       188	dir-iterator.c	FUNCTION_14
0x4000814	        0x488945f8	                mov qword [rbp - 8], rax	       188	dir-iterator.c	FUNCTION_14
0x4000818	      0x48837de800	               cmp qword [rbp - 0x18], 0	       190	dir-iterator.c	FUNCTION_14	IF_1
0x400081d	            0x740b	                            je 0x400082a	       190	dir-iterator.c	FUNCTION_14	IF_1
0x400081f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       190	dir-iterator.c	FUNCTION_14	IF_1
0x4000823	           0xfb600	                   movzx eax, byte [rax]	       190	dir-iterator.c	FUNCTION_14	IF_1
0x4000826	            0x84c0	                             test al, al	       190	dir-iterator.c	FUNCTION_14	IF_1
0x4000828	            0x750f	                           jne 0x4000839	       190	dir-iterator.c	FUNCTION_14	IF_1
0x400082a	      0xbf00000000	                              mov edi, 0	       191	dir-iterator.c	FUNCTION_14	CALL_2
0x400082f	      0xb800000000	                              mov eax, 0	       191	dir-iterator.c	FUNCTION_14	CALL_2
0x4000834	      0xe800000000	                          call 0x4000839	       191	dir-iterator.c	FUNCTION_14	CALL_2
0x4000839	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       193	dir-iterator.c	FUNCTION_14	CALL_3
0x400083d	      0xbe00100000	                         mov esi, 0x1000	       193	dir-iterator.c	FUNCTION_14	CALL_3
0x4000842	          0x4889c7	                            mov rdi, rax	       193	dir-iterator.c	FUNCTION_14	CALL_3
0x4000845	      0xe800000000	                          call 0x400084a	       193	dir-iterator.c	FUNCTION_14	CALL_3
0x400084a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       194	dir-iterator.c	FUNCTION_14	CALL_4
0x400084e	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       194	dir-iterator.c	FUNCTION_14	CALL_4
0x4000852	          0x4889d6	                            mov rsi, rdx	       194	dir-iterator.c	FUNCTION_14	CALL_4
0x4000855	          0x4889c7	                            mov rdi, rax	       194	dir-iterator.c	FUNCTION_14	CALL_4
0x4000858	      0xe886f9ffff	                  call sym.strbuf_addstr	       194	dir-iterator.c	FUNCTION_14	CALL_4
0x400085d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x4000861	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x4000868	        0x4883f809	                              cmp rax, 9	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x400086c	     0xf8797000000	                            ja 0x4000909	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x4000872	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x4000876	    0x488b90c00000	            mov rdx, qword [rax + 0xc0] 	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x400087d	          0x4889d0	                            mov rax, rdx	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x4000880	          0x4801c0	                            add rax, rax	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x4000883	          0x4801d0	                            add rax, rdx	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x4000886	        0x4883c030	                           add rax, 0x30	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x400088a	        0x4883f813	                           cmp rax, 0x13	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x400088e	            0x7711	                            ja 0x40008a1	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x4000890	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x4000894	    0x48c780c00000	             mov qword [rax + 0xc0], 0xa	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x400089f	            0xeb29	                           jmp 0x40008ca	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x40008a1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x40008a5	    0x488b90c00000	            mov rdx, qword [rax + 0xc0] 	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x40008ac	          0x4889d0	                            mov rax, rdx	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x40008af	          0x4801c0	                            add rax, rax	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x40008b2	          0x4801d0	                            add rax, rdx	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x40008b5	        0x4883c030	                           add rax, 0x30	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x40008b9	          0x48d1e8	                              shr rax, 1	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x40008bc	          0x4889c2	                            mov rdx, rax	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x40008bf	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x40008c3	    0x488990c00000	             mov qword [rax + 0xc0], rdx	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x40008ca	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x40008ce	    0x488b80c00000	            mov rax, qword [rax + 0xc0] 	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x40008d5	          0x4889c6	                            mov rsi, rax	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x40008d8	      0xbf20000000	                           mov edi, 0x20	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x40008dd	      0xe871f7ffff	                        call sym.st_mult	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x40008e2	          0x4889c2	                            mov rdx, rax	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x40008e5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x40008e9	    0x488b80c80000	            mov rax, qword [rax + 0xc8] 	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x40008f0	          0x4889d6	                            mov rsi, rdx	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x40008f3	          0x4889c7	                            mov rdi, rax	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x40008f6	      0xe800000000	                          call 0x40008fb	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x40008fb	          0x4889c2	                            mov rdx, rax	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x40008fe	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x4000902	    0x488990c80000	             mov qword [rax + 0xc8], rdx	       196	dir-iterator.c	FUNCTION_14	CALL_5
0x4000909	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       198	dir-iterator.c	FUNCTION_14
0x400090d	    0x48c780b80000	               mov qword [rax + 0xb8], 1	       198	dir-iterator.c	FUNCTION_14
0x4000918	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       199	dir-iterator.c	FUNCTION_14
0x400091c	    0x488b80c80000	            mov rax, qword [rax + 0xc8] 	       199	dir-iterator.c	FUNCTION_14
0x4000923	    0xc70000000000	                      mov dword [rax], 0	       199	dir-iterator.c	FUNCTION_14
0x4000929	        0x488b45f8	                mov rax, qword [rbp - 8]	       201	dir-iterator.c	FUNCTION_14
0x400092d	              0xc9	                                   leave	       202	dir-iterator.c	FUNCTION_14
0x400092e	              0xc3	                                     ret	       202	dir-iterator.c	FUNCTION_14
is_dot_or_dotdot	IF,0:ELSE,0:DO,0:CALL,0:FOR,0:WHILE,0:SWITCH,0:functions,0	27
0x4000218	              0x55	                                push rbp	       276	dir.h	FUNCTION_42
0x4000219	          0x4889e5	                            mov rbp, rsp	       276	dir.h	FUNCTION_42
0x400021c	        0x48897df8	                mov qword [rbp - 8], rdi	       276	dir.h	FUNCTION_42
0x4000220	        0x488b45f8	                mov rax, qword [rbp - 8]	       277	dir.h	FUNCTION_42
0x4000224	           0xfb600	                   movzx eax, byte [rax]	       277	dir.h	FUNCTION_42
0x4000227	            0x3c2e	                            cmp al, 0x2e	       277	dir.h	FUNCTION_42
0x4000229	            0x7534	                           jne 0x400025f	       277	dir.h	FUNCTION_42
0x400022b	        0x488b45f8	                mov rax, qword [rbp - 8]	       278	dir.h	FUNCTION_42
0x400022f	        0x4883c001	                              add rax, 1	       278	dir.h	FUNCTION_42
0x4000233	           0xfb600	                   movzx eax, byte [rax]	       278	dir.h	FUNCTION_42
0x4000236	            0x84c0	                             test al, al	       277	dir.h	FUNCTION_42
0x4000238	            0x741e	                            je 0x4000258	       277	dir.h	FUNCTION_42
0x400023a	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	dir.h	FUNCTION_42
0x400023e	        0x4883c001	                              add rax, 1	       279	dir.h	FUNCTION_42
0x4000242	           0xfb600	                   movzx eax, byte [rax]	       279	dir.h	FUNCTION_42
0x4000245	            0x3c2e	                            cmp al, 0x2e	       278	dir.h	FUNCTION_42
0x4000247	            0x7516	                           jne 0x400025f	       278	dir.h	FUNCTION_42
0x4000249	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	dir.h	FUNCTION_42
0x400024d	        0x4883c002	                              add rax, 2	       279	dir.h	FUNCTION_42
0x4000251	           0xfb600	                   movzx eax, byte [rax]	       279	dir.h	FUNCTION_42
0x4000254	            0x84c0	                             test al, al	       279	dir.h	FUNCTION_42
0x4000256	            0x7507	                           jne 0x400025f	       279	dir.h	FUNCTION_42
0x4000258	      0xb801000000	                              mov eax, 1	       277	dir.h	FUNCTION_42
0x400025d	            0xeb05	                           jmp 0x4000264	       277	dir.h	FUNCTION_42
0x400025f	      0xb800000000	                              mov eax, 0	       277	dir.h	FUNCTION_42
0x4000264	              0x5d	                                 pop rbp	       280	dir.h	FUNCTION_42
0x4000265	              0xc3	                                     ret	       280	dir.h	FUNCTION_42
git_is_dir_sep	IF,0:ELSE,0:DO,0:CALL,0:FOR,0:WHILE,0:SWITCH,0:functions,0	8
0x4000040	              0x55	                                push rbp	       363	git-compat-util.h	FUNCTION_17
0x4000041	          0x4889e5	                            mov rbp, rsp	       363	git-compat-util.h	FUNCTION_17
0x4000044	          0x897dfc	                mov dword [rbp - 4], edi	       363	git-compat-util.h	FUNCTION_17
0x4000047	        0x837dfc2f	               cmp dword [rbp - 4], 0x2f	       364	git-compat-util.h	FUNCTION_17
0x400004b	           0xf94c0	                                 sete al	       364	git-compat-util.h	FUNCTION_17
0x400004e	           0xfb6c0	                           movzx eax, al	       364	git-compat-util.h	FUNCTION_17
0x4000051	              0x5d	                                 pop rbp	       365	git-compat-util.h	FUNCTION_17
0x4000052	              0xc3	                                     ret	       365	git-compat-util.h	FUNCTION_17
