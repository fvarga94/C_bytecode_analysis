prepare_shallow_info	DO,0:ELSE,1:IF,3:CALL,3:SWITCH,0:functions,0:WHILE,0:FOR,1	116
0x4001170	              0x55	                                push rbp	       387	shallow.c	FUNCTION_16
0x4001171	          0x4889e5	                            mov rbp, rsp	       387	shallow.c	FUNCTION_16
0x4001174	        0x4883ec20	                           sub rsp, 0x20	       387	shallow.c	FUNCTION_16
0x4001178	        0x48897de8	             mov qword [rbp - 0x18], rdi	       387	shallow.c	FUNCTION_16
0x400117c	        0x488975e0	             mov qword [rbp - 0x20], rsi	       387	shallow.c	FUNCTION_16
0x4001180	      0xbf00000000	                              mov edi, 0	       389	shallow.c	FUNCTION_16
0x4001185	      0xe809f0ffff	                  call sym.trace_pass_fl	       389	shallow.c	FUNCTION_16
0x400118a	            0x85c0	                           test eax, eax	       389	shallow.c	FUNCTION_16
0x400118c	            0x741e	                            je 0x40011ac	       389	shallow.c	FUNCTION_16
0x400118e	      0xb900000000	                              mov ecx, 0	       389	shallow.c	FUNCTION_16
0x4001193	      0xba00000000	                              mov edx, 0	       389	shallow.c	FUNCTION_16
0x4001198	      0xbe85010000	                          mov esi, 0x185	       389	shallow.c	FUNCTION_16
0x400119d	      0xbf00000000	                              mov edi, 0	       389	shallow.c	FUNCTION_16
0x40011a2	      0xb800000000	                              mov eax, 0	       389	shallow.c	FUNCTION_16
0x40011a7	      0xe800000000	                          call 0x40011ac	       389	shallow.c	FUNCTION_16
0x40011ac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	shallow.c	FUNCTION_16	CALL_1
0x40011b0	      0xba60000000	                           mov edx, 0x60	       390	shallow.c	FUNCTION_16	CALL_1
0x40011b5	      0xbe00000000	                              mov esi, 0	       390	shallow.c	FUNCTION_16	CALL_1
0x40011ba	          0x4889c7	                            mov rdi, rax	       390	shallow.c	FUNCTION_16	CALL_1
0x40011bd	      0xe800000000	                          call 0x40011c2	       390	shallow.c	FUNCTION_16	CALL_1
0x40011c2	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       391	shallow.c	FUNCTION_16
0x40011c6	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       391	shallow.c	FUNCTION_16
0x40011ca	          0x488910	                    mov qword [rax], rdx	       391	shallow.c	FUNCTION_16
0x40011cd	      0x48837de000	               cmp qword [rbp - 0x20], 0	       392	shallow.c	FUNCTION_16	IF_1
0x40011d2	     0xf842f010000	                            je 0x4001307	       392	shallow.c	FUNCTION_16	IF_1
0x40011d8	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       394	shallow.c	FUNCTION_16
0x40011dc	          0x8b4008	                mov eax, dword [rax + 8]	       394	shallow.c	FUNCTION_16
0x40011df	            0x4898	                                    cdqe	       394	shallow.c	FUNCTION_16
0x40011e1	          0x4889c6	                            mov rsi, rax	       394	shallow.c	FUNCTION_16
0x40011e4	      0xbf04000000	                              mov edi, 4	       394	shallow.c	FUNCTION_16
0x40011e9	      0xe852eeffff	                        call sym.st_mult	       394	shallow.c	FUNCTION_16
0x40011ee	          0x4889c7	                            mov rdi, rax	       394	shallow.c	FUNCTION_16
0x40011f1	      0xe800000000	                          call 0x40011f6	       394	shallow.c	FUNCTION_16
0x40011f6	          0x4889c2	                            mov rdx, rax	       394	shallow.c	FUNCTION_16
0x40011f9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       394	shallow.c	FUNCTION_16
0x40011fd	        0x48895008	                mov qword [rax + 8], rdx	       394	shallow.c	FUNCTION_16
0x4001201	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       395	shallow.c	FUNCTION_16
0x4001205	          0x8b4008	                mov eax, dword [rax + 8]	       395	shallow.c	FUNCTION_16
0x4001208	            0x4898	                                    cdqe	       395	shallow.c	FUNCTION_16
0x400120a	          0x4889c6	                            mov rsi, rax	       395	shallow.c	FUNCTION_16
0x400120d	      0xbf04000000	                              mov edi, 4	       395	shallow.c	FUNCTION_16
0x4001212	      0xe829eeffff	                        call sym.st_mult	       395	shallow.c	FUNCTION_16
0x4001217	          0x4889c7	                            mov rdi, rax	       395	shallow.c	FUNCTION_16
0x400121a	      0xe800000000	                          call 0x400121f	       395	shallow.c	FUNCTION_16
0x400121f	          0x4889c2	                            mov rdx, rax	       395	shallow.c	FUNCTION_16
0x4001222	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       395	shallow.c	FUNCTION_16
0x4001226	        0x48895018	             mov qword [rax + 0x18], rdx	       395	shallow.c	FUNCTION_16
0x400122a	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       396	shallow.c	FUNCTION_16	FOR_1
0x4001231	      0xe9bf000000	                           jmp 0x40012f5	       396	shallow.c	FUNCTION_16	FOR_1
0x4001236	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_2
0x400123a	          0x488b08	                    mov rcx, qword [rax]	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_2
0x400123d	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_2
0x4001240	          0x4863d0	                         movsxd rdx, eax	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_2
0x4001243	          0x4889d0	                            mov rax, rdx	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_2
0x4001246	        0x48c1e002	                              shl rax, 2	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_2
0x400124a	          0x4801d0	                            add rax, rdx	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_2
0x400124d	        0x48c1e002	                              shl rax, 2	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_2
0x4001251	          0x4801c8	                            add rax, rcx	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_2
0x4001254	          0x4889c7	                            mov rdi, rax	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_2
0x4001257	      0xe800000000	                          call 0x400125c	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_2
0x400125c	            0x85c0	                           test eax, eax	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_2
0x400125e	            0x7466	                            je 0x40012c6	       397	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_2
0x4001260	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       399	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_3
0x4001264	          0x488b08	                    mov rcx, qword [rax]	       399	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_3
0x4001267	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       399	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_3
0x400126a	          0x4863d0	                         movsxd rdx, eax	       399	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_3
0x400126d	          0x4889d0	                            mov rax, rdx	       399	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_3
0x4001270	        0x48c1e002	                              shl rax, 2	       399	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_3
0x4001274	          0x4801d0	                            add rax, rdx	       399	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_3
0x4001277	        0x48c1e002	                              shl rax, 2	       399	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_3
0x400127b	          0x4801c8	                            add rax, rcx	       399	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_3
0x400127e	          0x4889c7	                            mov rdi, rax	       399	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_3
0x4001281	      0xe800000000	                          call 0x4001286	       399	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_3
0x4001286	        0x488945f8	                mov qword [rbp - 8], rax	       399	shallow.c	FUNCTION_16	FOR_1	IF_2	CALL_3
0x400128a	      0x48837df800	                  cmp qword [rbp - 8], 0	       400	shallow.c	FUNCTION_16	FOR_1	IF_2	IF_3
0x400128f	            0x740b	                            je 0x400129c	       400	shallow.c	FUNCTION_16	FOR_1	IF_2	IF_3
0x4001291	        0x488b45f8	                mov rax, qword [rbp - 8]	       400	shallow.c	FUNCTION_16	FOR_1	IF_2	IF_3
0x4001295	          0x8b4014	            mov eax, dword [rax + 0x14] 	       400	shallow.c	FUNCTION_16	FOR_1	IF_2	IF_3
0x4001298	            0x85c0	                           test eax, eax	       400	shallow.c	FUNCTION_16	FOR_1	IF_2	IF_3
0x400129a	            0x7854	                            js 0x40012f0	       400	shallow.c	FUNCTION_16	FOR_1	IF_2	IF_3
0x400129c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x40012a0	        0x488b7008	                mov rsi, qword [rax + 8]	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x40012a4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x40012a8	          0x8b4010	            mov eax, dword [rax + 0x10] 	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x40012ab	          0x8d4801	                      lea ecx, [rax + 1]	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x40012ae	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x40012b2	          0x894a10	             mov dword [rdx + 0x10], ecx	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x40012b5	            0x4898	                                    cdqe	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x40012b7	        0x48c1e002	                              shl rax, 2	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x40012bb	        0x488d1406	                    lea rdx, [rsi + rax]	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x40012bf	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x40012c2	            0x8902	                    mov dword [rdx], eax	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x40012c4	            0xeb2b	                           jmp 0x40012f1	       402	shallow.c	FUNCTION_16	FOR_1	IF_2
0x40012c6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x40012ca	        0x488b7018	            mov rsi, qword [rax + 0x18] 	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x40012ce	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x40012d2	          0x8b4020	            mov eax, dword [rax + 0x20] 	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x40012d5	          0x8d4801	                      lea ecx, [rax + 1]	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x40012d8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x40012dc	          0x894a20	             mov dword [rdx + 0x20], ecx	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x40012df	            0x4898	                                    cdqe	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x40012e1	        0x48c1e002	                              shl rax, 2	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x40012e5	        0x488d1406	                    lea rdx, [rsi + rax]	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x40012e9	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x40012ec	            0x8902	                    mov dword [rdx], eax	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x40012ee	            0xeb01	                           jmp 0x40012f1	       404	shallow.c	FUNCTION_16	FOR_1	ELSE_1
0x40012f0	              0x90	                                     nop	       401	shallow.c	FUNCTION_16	FOR_1	IF_2	IF_3
0x40012f1	        0x8345f401	                add dword [rbp - 0xc], 1	       396	shallow.c	FUNCTION_16	FOR_1
0x40012f5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       396	shallow.c	FUNCTION_16	FOR_1
0x40012f9	          0x8b4008	                mov eax, dword [rax + 8]	       396	shallow.c	FUNCTION_16	FOR_1
0x40012fc	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       396	shallow.c	FUNCTION_16	FOR_1
0x40012ff	     0xf8f31ffffff	                            jg 0x4001236	       396	shallow.c	FUNCTION_16	FOR_1
0x4001305	            0xeb01	                           jmp 0x4001308	       396	shallow.c	FUNCTION_16	FOR_1
0x4001307	              0x90	                                     nop	       393	shallow.c	FUNCTION_16	IF_1
0x4001308	              0xc9	                                   leave	       406	shallow.c	FUNCTION_16	ELSE_1
0x4001309	              0xc3	                                     ret	       406	shallow.c	FUNCTION_16	ELSE_1
hashcpy	DO,0:ELSE,0:IF,0:CALL,1:SWITCH,0:functions,0:WHILE,0:FOR,0	14
0x40001c3	              0x55	                                push rbp	       994	cache.h	FUNCTION_38
0x40001c4	          0x4889e5	                            mov rbp, rsp	       994	cache.h	FUNCTION_38
0x40001c7	        0x4883ec10	                           sub rsp, 0x10	       994	cache.h	FUNCTION_38
0x40001cb	        0x48897df8	                mov qword [rbp - 8], rdi	       994	cache.h	FUNCTION_38
0x40001cf	        0x488975f0	             mov qword [rbp - 0x10], rsi	       994	cache.h	FUNCTION_38
0x40001d3	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       995	cache.h	FUNCTION_38	CALL_1
0x40001d7	        0x488b45f8	                mov rax, qword [rbp - 8]	       995	cache.h	FUNCTION_38	CALL_1
0x40001db	      0xba14000000	                           mov edx, 0x14	       995	cache.h	FUNCTION_38	CALL_1
0x40001e0	          0x4889ce	                            mov rsi, rcx	       995	cache.h	FUNCTION_38	CALL_1
0x40001e3	          0x4889c7	                            mov rdi, rax	       995	cache.h	FUNCTION_38	CALL_1
0x40001e6	      0xe800000000	                          call 0x40001eb	       995	cache.h	FUNCTION_38	CALL_1
0x40001eb	              0x90	                                     nop	       996	cache.h	FUNCTION_38
0x40001ec	              0xc9	                                   leave	       996	cache.h	FUNCTION_38
0x40001ed	              0xc3	                                     ret	       996	cache.h	FUNCTION_38
delayed_reachability_test	DO,0:ELSE,0:IF,2:CALL,5:SWITCH,0:functions,0:WHILE,0:FOR,0	91
0x4002621	              0x55	                                push rbp	       725	shallow.c	FUNCTION_26
0x4002622	          0x4889e5	                            mov rbp, rsp	       725	shallow.c	FUNCTION_26
0x4002625	              0x53	                                push rbx	       725	shallow.c	FUNCTION_26
0x4002626	        0x4883ec48	                           sub rsp, 0x48	       725	shallow.c	FUNCTION_26
0x400262a	        0x48897db8	             mov qword [rbp - 0x48], rdi	       725	shallow.c	FUNCTION_26
0x400262e	          0x8975b4	             mov dword [rbp - 0x4c], esi	       725	shallow.c	FUNCTION_26
0x4002631	    0x64488b042528	                mov rax, qword fs:[0x28]	       725	shallow.c	FUNCTION_26
0x400263a	        0x488945e8	             mov qword [rbp - 0x18], rax	       725	shallow.c	FUNCTION_26
0x400263e	            0x31c0	                            xor eax, eax	       725	shallow.c	FUNCTION_26
0x4002640	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       726	shallow.c	FUNCTION_26	IF_1
0x4002644	        0x488b4038	            mov rax, qword [rax + 0x38] 	       726	shallow.c	FUNCTION_26	IF_1
0x4002648	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       726	shallow.c	FUNCTION_26	IF_1
0x400264b	          0x4863d2	                         movsxd rdx, edx	       726	shallow.c	FUNCTION_26	IF_1
0x400264e	        0x48c1e202	                              shl rdx, 2	       726	shallow.c	FUNCTION_26	IF_1
0x4002652	          0x4801d0	                            add rax, rdx	       726	shallow.c	FUNCTION_26	IF_1
0x4002655	            0x8b00	                    mov eax, dword [rax]	       726	shallow.c	FUNCTION_26	IF_1
0x4002657	            0x85c0	                           test eax, eax	       726	shallow.c	FUNCTION_26	IF_1
0x4002659	     0xf84d8000000	                            je 0x4002737	       726	shallow.c	FUNCTION_26	IF_1
0x400265f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x4002663	          0x488b00	                    mov rax, qword [rax]	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x4002666	          0x488b08	                    mov rcx, qword [rax]	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x4002669	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x400266c	          0x4863d0	                         movsxd rdx, eax	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x400266f	          0x4889d0	                            mov rax, rdx	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x4002672	        0x48c1e002	                              shl rax, 2	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x4002676	          0x4801d0	                            add rax, rdx	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x4002679	        0x48c1e002	                              shl rax, 2	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x400267d	          0x4801c8	                            add rax, rcx	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x4002680	          0x4889c7	                            mov rdi, rax	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x4002683	      0xe800000000	                          call 0x4002688	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x4002688	        0x488945c8	             mov qword [rbp - 0x38], rax	       727	shallow.c	FUNCTION_26	IF_1	CALL_1
0x400268c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       729	shallow.c	FUNCTION_26	IF_1	IF_2
0x4002690	        0x488b4050	            mov rax, qword [rax + 0x50] 	       729	shallow.c	FUNCTION_26	IF_1	IF_2
0x4002694	          0x4885c0	                           test rax, rax	       729	shallow.c	FUNCTION_26	IF_1	IF_2
0x4002697	            0x754e	                           jne 0x40026e7	       729	shallow.c	FUNCTION_26	IF_1	IF_2
0x4002699	        0x488d45d0	                   lea rax, [rbp - 0x30]	       732	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_2
0x400269d	      0xba10000000	                           mov edx, 0x10	       732	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_2
0x40026a2	      0xbe00000000	                              mov esi, 0	       732	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_2
0x40026a7	          0x4889c7	                            mov rdi, rax	       732	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_2
0x40026aa	      0xe800000000	                          call 0x40026af	       732	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_2
0x40026af	        0x488d45d0	                   lea rax, [rbp - 0x30]	       733	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_3
0x40026b3	          0x4889c6	                            mov rsi, rax	       733	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_3
0x40026b6	      0xbf00000000	                              mov edi, 0	       733	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_3
0x40026bb	      0xe800000000	                          call 0x40026c0	       733	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_3
0x40026c0	        0x488d45d0	                   lea rax, [rbp - 0x30]	       734	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_4
0x40026c4	          0x4889c6	                            mov rsi, rax	       734	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_4
0x40026c7	      0xbf00000000	                              mov edi, 0	       734	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_4
0x40026cc	      0xe800000000	                          call 0x40026d1	       734	shallow.c	FUNCTION_26	IF_1	IF_2	CALL_4
0x40026d1	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       735	shallow.c	FUNCTION_26	IF_1	IF_2
0x40026d5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       735	shallow.c	FUNCTION_26	IF_1	IF_2
0x40026d9	        0x48895050	             mov qword [rax + 0x50], rdx	       735	shallow.c	FUNCTION_26	IF_1	IF_2
0x40026dd	          0x8b55d8	             mov edx, dword [rbp - 0x28]	       736	shallow.c	FUNCTION_26	IF_1	IF_2
0x40026e0	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       736	shallow.c	FUNCTION_26	IF_1	IF_2
0x40026e4	          0x895058	             mov dword [rax + 0x58], edx	       736	shallow.c	FUNCTION_26	IF_1	IF_2
0x40026e7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x40026eb	        0x488b4040	            mov rax, qword [rax + 0x40] 	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x40026ef	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x40026f2	          0x4863d2	                         movsxd rdx, edx	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x40026f5	        0x48c1e202	                              shl rdx, 2	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x40026f9	        0x488d1c10	                    lea rbx, [rax + rdx]	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x40026fd	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x4002701	        0x488b5050	            mov rdx, qword [rax + 0x50] 	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x4002705	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x4002709	          0x8b4858	            mov ecx, dword [rax + 0x58] 	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x400270c	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x4002710	            0x89ce	                            mov esi, ecx	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x4002712	          0x4889c7	                            mov rdi, rax	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x4002715	      0xe800000000	                          call 0x400271a	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x400271a	            0x8903	                    mov dword [rbx], eax	       739	shallow.c	FUNCTION_26	IF_1	CALL_5
0x400271c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       742	shallow.c	FUNCTION_26	IF_1
0x4002720	        0x488b4038	            mov rax, qword [rax + 0x38] 	       742	shallow.c	FUNCTION_26	IF_1
0x4002724	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       742	shallow.c	FUNCTION_26	IF_1
0x4002727	          0x4863d2	                         movsxd rdx, edx	       742	shallow.c	FUNCTION_26	IF_1
0x400272a	        0x48c1e202	                              shl rdx, 2	       742	shallow.c	FUNCTION_26	IF_1
0x400272e	          0x4801d0	                            add rax, rdx	       742	shallow.c	FUNCTION_26	IF_1
0x4002731	    0xc70000000000	                      mov dword [rax], 0	       742	shallow.c	FUNCTION_26	IF_1
0x4002737	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       744	shallow.c	FUNCTION_26
0x400273b	        0x488b4040	            mov rax, qword [rax + 0x40] 	       744	shallow.c	FUNCTION_26
0x400273f	          0x8b55b4	             mov edx, dword [rbp - 0x4c]	       744	shallow.c	FUNCTION_26
0x4002742	          0x4863d2	                         movsxd rdx, edx	       744	shallow.c	FUNCTION_26
0x4002745	        0x48c1e202	                              shl rdx, 2	       744	shallow.c	FUNCTION_26
0x4002749	          0x4801d0	                            add rax, rdx	       744	shallow.c	FUNCTION_26
0x400274c	            0x8b00	                    mov eax, dword [rax]	       744	shallow.c	FUNCTION_26
0x400274e	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	       745	shallow.c	FUNCTION_26
0x4002752	    0x6448331c2528	                xor rbx, qword fs:[0x28]	       745	shallow.c	FUNCTION_26
0x400275b	            0x7405	                            je 0x4002762	       745	shallow.c	FUNCTION_26
0x400275d	      0xe800000000	                          call 0x4002762	       745	shallow.c	FUNCTION_26
0x4002762	        0x4883c448	                           add rsp, 0x48	       745	shallow.c	FUNCTION_26
0x4002766	              0x5b	                                 pop rbx	       745	shallow.c	FUNCTION_26
0x4002767	              0x5d	                                 pop rbp	       745	shallow.c	FUNCTION_26
0x4002768	              0xc3	                                     ret	       745	shallow.c	FUNCTION_26
mark_uninteresting	DO,0:ELSE,0:IF,1:CALL,2:SWITCH,0:functions,0:WHILE,0:FOR,0	36
0x4001b8f	              0x55	                                push rbp	       535	shallow.c	FUNCTION_21
0x4001b90	          0x4889e5	                            mov rbp, rsp	       535	shallow.c	FUNCTION_21
0x4001b93	        0x4883ec30	                           sub rsp, 0x30	       535	shallow.c	FUNCTION_21
0x4001b97	        0x48897de8	             mov qword [rbp - 0x18], rdi	       535	shallow.c	FUNCTION_21
0x4001b9b	        0x488975e0	             mov qword [rbp - 0x20], rsi	       535	shallow.c	FUNCTION_21
0x4001b9f	          0x8955dc	             mov dword [rbp - 0x24], edx	       535	shallow.c	FUNCTION_21
0x4001ba2	        0x48894dd0	             mov qword [rbp - 0x30], rcx	       535	shallow.c	FUNCTION_21
0x4001ba6	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       536	shallow.c	FUNCTION_21	CALL_1
0x4001baa	      0xbe01000000	                              mov esi, 1	       536	shallow.c	FUNCTION_21	CALL_1
0x4001baf	          0x4889c7	                            mov rdi, rax	       536	shallow.c	FUNCTION_21	CALL_1
0x4001bb2	      0xe800000000	                          call 0x4001bb7	       536	shallow.c	FUNCTION_21	CALL_1
0x4001bb7	        0x488945f8	                mov qword [rbp - 8], rax	       536	shallow.c	FUNCTION_21	CALL_1
0x4001bbb	      0x48837df800	                  cmp qword [rbp - 8], 0	       537	shallow.c	FUNCTION_21	IF_1
0x4001bc0	            0x7507	                           jne 0x4001bc9	       537	shallow.c	FUNCTION_21	IF_1
0x4001bc2	      0xb800000000	                              mov eax, 0	       538	shallow.c	FUNCTION_21	IF_1
0x4001bc7	            0xeb3f	                           jmp 0x4001c08	       538	shallow.c	FUNCTION_21	IF_1
0x4001bc9	        0x488b45f8	                mov rax, qword [rbp - 8]	       539	shallow.c	FUNCTION_21
0x4001bcd	            0x8b00	                    mov eax, dword [rax]	       539	shallow.c	FUNCTION_21
0x4001bcf	          0xc1e804	                              shr eax, 4	       539	shallow.c	FUNCTION_21
0x4001bd2	      0x25ffffff07	                      and eax, 0x7ffffff	       539	shallow.c	FUNCTION_21
0x4001bd7	          0x83c802	                               or eax, 2	       539	shallow.c	FUNCTION_21
0x4001bda	            0x89c2	                            mov edx, eax	       539	shallow.c	FUNCTION_21
0x4001bdc	        0x488b45f8	                mov rax, qword [rbp - 8]	       539	shallow.c	FUNCTION_21
0x4001be0	    0x81e2ffffff07	                      and edx, 0x7ffffff	       539	shallow.c	FUNCTION_21
0x4001be6	            0x89d1	                            mov ecx, edx	       539	shallow.c	FUNCTION_21
0x4001be8	          0xc1e104	                              shl ecx, 4	       539	shallow.c	FUNCTION_21
0x4001beb	            0x8b10	                    mov edx, dword [rax]	       539	shallow.c	FUNCTION_21
0x4001bed	    0x81e20f000080	                     and edx, 0x8000000f	       539	shallow.c	FUNCTION_21
0x4001bf3	             0x9ca	                             or edx, ecx	       539	shallow.c	FUNCTION_21
0x4001bf5	            0x8910	                    mov dword [rax], edx	       539	shallow.c	FUNCTION_21
0x4001bf7	        0x488b45f8	                mov rax, qword [rbp - 8]	       540	shallow.c	FUNCTION_21	CALL_2
0x4001bfb	          0x4889c7	                            mov rdi, rax	       540	shallow.c	FUNCTION_21	CALL_2
0x4001bfe	      0xe800000000	                          call 0x4001c03	       540	shallow.c	FUNCTION_21	CALL_2
0x4001c03	      0xb800000000	                              mov eax, 0	       541	shallow.c	FUNCTION_21
0x4001c08	              0xc9	                                   leave	       542	shallow.c	FUNCTION_21
0x4001c09	              0xc3	                                     ret	       542	shallow.c	FUNCTION_21
update_refstatus	DO,0:ELSE,0:IF,2:CALL,0:SWITCH,0:functions,0:WHILE,0:FOR,1	40
0x4002250	              0x55	                                push rbp	       653	shallow.c	FUNCTION_24
0x4002251	          0x4889e5	                            mov rbp, rsp	       653	shallow.c	FUNCTION_24
0x4002254	        0x48897de8	             mov qword [rbp - 0x18], rdi	       653	shallow.c	FUNCTION_24
0x4002258	          0x8975e4	             mov dword [rbp - 0x1c], esi	       653	shallow.c	FUNCTION_24
0x400225b	        0x488955d8	             mov qword [rbp - 0x28], rdx	       653	shallow.c	FUNCTION_24
0x400225f	      0x48837de800	               cmp qword [rbp - 0x18], 0	       655	shallow.c	FUNCTION_24	IF_1
0x4002264	            0x7460	                            je 0x40022c6	       655	shallow.c	FUNCTION_24	IF_1
0x4002266	    0xc745fc000000	                  mov dword [rbp - 4], 0	       657	shallow.c	FUNCTION_24	FOR_1
0x400226d	            0xeb4d	                           jmp 0x40022bc	       657	shallow.c	FUNCTION_24	FOR_1
0x400226f	          0x8b45fc	                mov eax, dword [rbp - 4]	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4002272	          0xc1e805	                              shr eax, 5	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4002275	            0x89c0	                            mov eax, eax	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4002277	    0x488d14850000	                        lea rdx, [rax*4]	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x400227f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4002283	          0x4801d0	                            add rax, rdx	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4002286	            0x8b00	                    mov eax, dword [rax]	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4002288	          0x8b55fc	                mov edx, dword [rbp - 4]	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x400228b	          0x83e21f	                           and edx, 0x1f	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x400228e	      0xbe01000000	                              mov esi, 1	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4002293	            0x89d1	                            mov ecx, edx	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4002295	            0xd3e6	                             shl esi, cl	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4002297	            0x89f2	                            mov edx, esi	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x4002299	            0x21d0	                            and eax, edx	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x400229b	            0x85c0	                           test eax, eax	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x400229d	            0x7419	                            je 0x40022b8	       658	shallow.c	FUNCTION_24	FOR_1	IF_2
0x400229f	          0x8b45fc	                mov eax, dword [rbp - 4]	       659	shallow.c	FUNCTION_24	FOR_1	IF_2
0x40022a2	    0x488d14850000	                        lea rdx, [rax*4]	       659	shallow.c	FUNCTION_24	FOR_1	IF_2
0x40022aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       659	shallow.c	FUNCTION_24	FOR_1	IF_2
0x40022ae	          0x4801d0	                            add rax, rdx	       659	shallow.c	FUNCTION_24	FOR_1	IF_2
0x40022b1	            0x8b10	                    mov edx, dword [rax]	       659	shallow.c	FUNCTION_24	FOR_1	IF_2
0x40022b3	          0x83c201	                              add edx, 1	       659	shallow.c	FUNCTION_24	FOR_1	IF_2
0x40022b6	            0x8910	                    mov dword [rax], edx	       659	shallow.c	FUNCTION_24	FOR_1	IF_2
0x40022b8	        0x8345fc01	                  add dword [rbp - 4], 1	       657	shallow.c	FUNCTION_24	FOR_1
0x40022bc	          0x8b45e4	             mov eax, dword [rbp - 0x1c]	       657	shallow.c	FUNCTION_24	FOR_1
0x40022bf	          0x3945fc	                cmp dword [rbp - 4], eax	       657	shallow.c	FUNCTION_24	FOR_1
0x40022c2	            0x72ab	                            jb 0x400226f	       657	shallow.c	FUNCTION_24	FOR_1
0x40022c4	            0xeb01	                           jmp 0x40022c7	       657	shallow.c	FUNCTION_24	FOR_1
0x40022c6	              0x90	                                     nop	       656	shallow.c	FUNCTION_24	IF_1
0x40022c7	              0x5d	                                 pop rbp	       660	shallow.c	FUNCTION_24
0x40022c8	              0xc3	                                     ret	       660	shallow.c	FUNCTION_24
show_commit	DO,0:ELSE,0:IF,0:CALL,1:SWITCH,0:functions,0:WHILE,0:FOR,0	13
0x4000810	              0x55	                                push rbp	       143	shallow.c	FUNCTION_5
0x4000811	          0x4889e5	                            mov rbp, rsp	       143	shallow.c	FUNCTION_5
0x4000814	        0x4883ec10	                           sub rsp, 0x10	       143	shallow.c	FUNCTION_5
0x4000818	        0x48897df8	                mov qword [rbp - 8], rdi	       143	shallow.c	FUNCTION_5
0x400081c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       143	shallow.c	FUNCTION_5
0x4000820	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       144	shallow.c	FUNCTION_5	CALL_1
0x4000824	        0x488b45f8	                mov rax, qword [rbp - 8]	       144	shallow.c	FUNCTION_5	CALL_1
0x4000828	          0x4889d6	                            mov rsi, rdx	       144	shallow.c	FUNCTION_5	CALL_1
0x400082b	          0x4889c7	                            mov rdi, rax	       144	shallow.c	FUNCTION_5	CALL_1
0x400082e	      0xe800000000	                          call 0x4000833	       144	shallow.c	FUNCTION_5	CALL_1
0x4000833	              0x90	                                     nop	       145	shallow.c	FUNCTION_5
0x4000834	              0xc9	                                   leave	       145	shallow.c	FUNCTION_5
0x4000835	              0xc3	                                     ret	       145	shallow.c	FUNCTION_5
write_one_shallow	DO,0:ELSE,1:IF,5:CALL,7:SWITCH,0:functions,0:WHILE,0:FOR,0	81
0x4000bcf	              0x55	                                push rbp	       238	shallow.c	FUNCTION_8
0x4000bd0	          0x4889e5	                            mov rbp, rsp	       238	shallow.c	FUNCTION_8
0x4000bd3	        0x4883ec30	                           sub rsp, 0x30	       238	shallow.c	FUNCTION_8
0x4000bd7	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       238	shallow.c	FUNCTION_8
0x4000bdb	        0x488975d0	             mov qword [rbp - 0x30], rsi	       238	shallow.c	FUNCTION_8
0x4000bdf	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       239	shallow.c	FUNCTION_8
0x4000be3	        0x488945e8	             mov qword [rbp - 0x18], rax	       239	shallow.c	FUNCTION_8
0x4000be7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       240	shallow.c	FUNCTION_8	CALL_1
0x4000beb	          0x4889c7	                            mov rdi, rax	       240	shallow.c	FUNCTION_8	CALL_1
0x4000bee	      0xe800000000	                          call 0x4000bf3	       240	shallow.c	FUNCTION_8	CALL_1
0x4000bf3	        0x488945f0	             mov qword [rbp - 0x10], rax	       240	shallow.c	FUNCTION_8	CALL_1
0x4000bf7	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       241	shallow.c	FUNCTION_8	IF_1
0x4000bfb	          0x8b4014	            mov eax, dword [rax + 0x14] 	       241	shallow.c	FUNCTION_8	IF_1
0x4000bfe	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       241	shallow.c	FUNCTION_8	IF_1
0x4000c01	            0x740a	                            je 0x4000c0d	       241	shallow.c	FUNCTION_8	IF_1
0x4000c03	      0xb800000000	                              mov eax, 0	       242	shallow.c	FUNCTION_8	IF_1
0x4000c08	      0xe9db000000	                           jmp 0x4000ce8	       242	shallow.c	FUNCTION_8	IF_1
0x4000c0d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       243	shallow.c	FUNCTION_8	IF_2
0x4000c11	          0x8b4010	            mov eax, dword [rax + 0x10] 	       243	shallow.c	FUNCTION_8	IF_2
0x4000c14	          0x83e001	                              and eax, 1	       243	shallow.c	FUNCTION_8	IF_2
0x4000c17	            0x85c0	                           test eax, eax	       243	shallow.c	FUNCTION_8	IF_2
0x4000c19	            0x7463	                            je 0x4000c7e	       243	shallow.c	FUNCTION_8	IF_2
0x4000c1b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       244	shallow.c	FUNCTION_8	IF_2	CALL_2
0x4000c1f	          0x4889c7	                            mov rdi, rax	       244	shallow.c	FUNCTION_8	IF_2	CALL_2
0x4000c22	      0xe800000000	                          call 0x4000c27	       244	shallow.c	FUNCTION_8	IF_2	CALL_2
0x4000c27	        0x488945f8	                mov qword [rbp - 8], rax	       244	shallow.c	FUNCTION_8	IF_2	CALL_2
0x4000c2b	      0x48837df800	                  cmp qword [rbp - 8], 0	       245	shallow.c	FUNCTION_8	IF_2	IF_3
0x4000c30	            0x7415	                            je 0x4000c47	       245	shallow.c	FUNCTION_8	IF_2	IF_3
0x4000c32	        0x488b45f8	                mov rax, qword [rbp - 8]	       245	shallow.c	FUNCTION_8	IF_2	IF_3
0x4000c36	            0x8b00	                    mov eax, dword [rax]	       245	shallow.c	FUNCTION_8	IF_2	IF_3
0x4000c38	          0xc1e804	                              shr eax, 4	       245	shallow.c	FUNCTION_8	IF_2	IF_3
0x4000c3b	      0x25ffffff07	                      and eax, 0x7ffffff	       245	shallow.c	FUNCTION_8	IF_2	IF_3
0x4000c40	          0x83e001	                              and eax, 1	       245	shallow.c	FUNCTION_8	IF_2	IF_3
0x4000c43	            0x85c0	                           test eax, eax	       245	shallow.c	FUNCTION_8	IF_2	IF_3
0x4000c45	            0x7537	                           jne 0x4000c7e	       245	shallow.c	FUNCTION_8	IF_2	IF_3
0x4000c47	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       246	shallow.c	FUNCTION_8	IF_2	IF_3	IF_4
0x4000c4b	          0x8b4010	            mov eax, dword [rax + 0x10] 	       246	shallow.c	FUNCTION_8	IF_2	IF_3	IF_4
0x4000c4e	          0x83e002	                              and eax, 2	       246	shallow.c	FUNCTION_8	IF_2	IF_3	IF_4
0x4000c51	            0x85c0	                           test eax, eax	       246	shallow.c	FUNCTION_8	IF_2	IF_3	IF_4
0x4000c53	            0x7422	                            je 0x4000c77	       246	shallow.c	FUNCTION_8	IF_2	IF_3	IF_4
0x4000c55	        0x488b45f8	                mov rax, qword [rbp - 8]	       248	shallow.c	FUNCTION_8	IF_2	IF_3	CALL_4
0x4000c59	        0x4883c004	                              add rax, 4	       248	shallow.c	FUNCTION_8	IF_2	IF_3	CALL_4
0x4000c5d	          0x4889c7	                            mov rdi, rax	       247	shallow.c	FUNCTION_8	IF_2	IF_3	IF_4	CALL_3
0x4000c60	      0xe800000000	                          call 0x4000c65	       247	shallow.c	FUNCTION_8	IF_2	IF_3	IF_4	CALL_3
0x4000c65	          0x4889c6	                            mov rsi, rax	       247	shallow.c	FUNCTION_8	IF_2	IF_3	IF_4	CALL_3
0x4000c68	      0xbf00000000	                              mov edi, 0	       247	shallow.c	FUNCTION_8	IF_2	IF_3	IF_4	CALL_3
0x4000c6d	      0xb800000000	                              mov eax, 0	       247	shallow.c	FUNCTION_8	IF_2	IF_3	IF_4	CALL_3
0x4000c72	      0xe800000000	                          call 0x4000c77	       247	shallow.c	FUNCTION_8	IF_2	IF_3	IF_4	CALL_3
0x4000c77	      0xb800000000	                              mov eax, 0	       249	shallow.c	FUNCTION_8	IF_2	IF_3
0x4000c7c	            0xeb6a	                           jmp 0x4000ce8	       249	shallow.c	FUNCTION_8	IF_2	IF_3
0x4000c7e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       252	shallow.c	FUNCTION_8
0x4000c82	          0x8b400c	              mov eax, dword [rax + 0xc]	       252	shallow.c	FUNCTION_8
0x4000c85	          0x8d5001	                      lea edx, [rax + 1]	       252	shallow.c	FUNCTION_8
0x4000c88	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       252	shallow.c	FUNCTION_8
0x4000c8c	          0x89500c	              mov dword [rax + 0xc], edx	       252	shallow.c	FUNCTION_8
0x4000c8f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       253	shallow.c	FUNCTION_8	IF_5
0x4000c93	          0x8b4008	                mov eax, dword [rax + 8]	       253	shallow.c	FUNCTION_8	IF_5
0x4000c96	            0x85c0	                           test eax, eax	       253	shallow.c	FUNCTION_8	IF_5
0x4000c98	            0x741f	                            je 0x4000cb9	       253	shallow.c	FUNCTION_8	IF_5
0x4000c9a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       254	shallow.c	FUNCTION_8	CALL_5
0x4000c9e	          0x488b00	                    mov rax, qword [rax]	       254	shallow.c	FUNCTION_8	CALL_5
0x4000ca1	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       254	shallow.c	FUNCTION_8	CALL_5
0x4000ca5	      0xbe00000000	                              mov esi, 0	       254	shallow.c	FUNCTION_8	CALL_5
0x4000caa	          0x4889c7	                            mov rdi, rax	       254	shallow.c	FUNCTION_8	CALL_5
0x4000cad	      0xb800000000	                              mov eax, 0	       254	shallow.c	FUNCTION_8	CALL_5
0x4000cb2	      0xe800000000	                          call 0x4000cb7	       254	shallow.c	FUNCTION_8	CALL_5
0x4000cb7	            0xeb2a	                           jmp 0x4000ce3	       254	shallow.c	FUNCTION_8	CALL_5
0x4000cb9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       256	shallow.c	FUNCTION_8	ELSE_1	CALL_6
0x4000cbd	          0x488b00	                    mov rax, qword [rax]	       256	shallow.c	FUNCTION_8	ELSE_1	CALL_6
0x4000cc0	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       256	shallow.c	FUNCTION_8	ELSE_1	CALL_6
0x4000cc4	          0x4889d6	                            mov rsi, rdx	       256	shallow.c	FUNCTION_8	ELSE_1	CALL_6
0x4000cc7	          0x4889c7	                            mov rdi, rax	       256	shallow.c	FUNCTION_8	ELSE_1	CALL_6
0x4000cca	      0xe88ff4ffff	                  call sym.strbuf_addstr	       256	shallow.c	FUNCTION_8	ELSE_1	CALL_6
0x4000ccf	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       257	shallow.c	FUNCTION_8	ELSE_1	CALL_7
0x4000cd3	          0x488b00	                    mov rax, qword [rax]	       257	shallow.c	FUNCTION_8	ELSE_1	CALL_7
0x4000cd6	      0xbe0a000000	                            mov esi, 0xa	       257	shallow.c	FUNCTION_8	ELSE_1	CALL_7
0x4000cdb	          0x4889c7	                            mov rdi, rax	       257	shallow.c	FUNCTION_8	ELSE_1	CALL_7
0x4000cde	      0xe80df4ffff	                   call sym.strbuf_addch	       257	shallow.c	FUNCTION_8	ELSE_1	CALL_7
0x4000ce3	      0xb800000000	                              mov eax, 0	       259	shallow.c	FUNCTION_8
0x4000ce8	              0xc9	                                   leave	       260	shallow.c	FUNCTION_8
0x4000ce9	              0xc3	                                     ret	       260	shallow.c	FUNCTION_8
assign_shallow_commits_to_refs	DO,0:ELSE,1:IF,3:CALL,17:SWITCH,0:functions,0:WHILE,0:FOR,7	293
0x4001c0a	              0x55	                                push rbp	       563	shallow.c	FUNCTION_22
0x4001c0b	          0x4889e5	                            mov rbp, rsp	       563	shallow.c	FUNCTION_22
0x4001c0e	              0x53	                                push rbx	       563	shallow.c	FUNCTION_22
0x4001c0f	    0x4881ecc80000	                           sub rsp, 0xc8	       563	shallow.c	FUNCTION_22
0x4001c16	    0x4889bd48ffff	             mov qword [rbp - 0xb8], rdi	       563	shallow.c	FUNCTION_22
0x4001c1d	    0x4889b540ffff	             mov qword [rbp - 0xc0], rsi	       563	shallow.c	FUNCTION_22
0x4001c24	    0x48899538ffff	             mov qword [rbp - 0xc8], rdx	       563	shallow.c	FUNCTION_22
0x4001c2b	    0x64488b042528	                mov rax, qword fs:[0x28]	       563	shallow.c	FUNCTION_22
0x4001c34	        0x488945e8	             mov qword [rbp - 0x18], rax	       563	shallow.c	FUNCTION_22
0x4001c38	            0x31c0	                            xor eax, eax	       563	shallow.c	FUNCTION_22
0x4001c3a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       564	shallow.c	FUNCTION_22
0x4001c41	          0x488b00	                    mov rax, qword [rax]	       564	shallow.c	FUNCTION_22
0x4001c44	          0x488b00	                    mov rax, qword [rax]	       564	shallow.c	FUNCTION_22
0x4001c47	    0x48898568ffff	             mov qword [rbp - 0x98], rax	       564	shallow.c	FUNCTION_22
0x4001c4e	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       565	shallow.c	FUNCTION_22
0x4001c55	        0x488b4028	            mov rax, qword [rax + 0x28] 	       565	shallow.c	FUNCTION_22
0x4001c59	    0x48898570ffff	             mov qword [rbp - 0x90], rax	       565	shallow.c	FUNCTION_22
0x4001c60	    0xc7855cffffff	               mov dword [rbp - 0xa4], 0	       567	shallow.c	FUNCTION_22
0x4001c6a	      0xbf00000000	                              mov edi, 0	       570	shallow.c	FUNCTION_22
0x4001c6f	      0xe81fe5ffff	                  call sym.trace_pass_fl	       570	shallow.c	FUNCTION_22
0x4001c74	            0x85c0	                           test eax, eax	       570	shallow.c	FUNCTION_22
0x4001c76	            0x741e	                            je 0x4001c96	       570	shallow.c	FUNCTION_22
0x4001c78	      0xb900000000	                              mov ecx, 0	       570	shallow.c	FUNCTION_22
0x4001c7d	      0xba00000000	                              mov edx, 0	       570	shallow.c	FUNCTION_22
0x4001c82	      0xbe3a020000	                          mov esi, 0x23a	       570	shallow.c	FUNCTION_22
0x4001c87	      0xbf00000000	                              mov edi, 0	       570	shallow.c	FUNCTION_22
0x4001c8c	      0xb800000000	                              mov eax, 0	       570	shallow.c	FUNCTION_22
0x4001c91	      0xe800000000	                          call 0x4001c96	       570	shallow.c	FUNCTION_22
0x4001c96	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       571	shallow.c	FUNCTION_22
0x4001c9d	          0x8b5010	            mov edx, dword [rax + 0x10] 	       571	shallow.c	FUNCTION_22
0x4001ca0	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       571	shallow.c	FUNCTION_22
0x4001ca7	          0x8b4020	            mov eax, dword [rax + 0x20] 	       571	shallow.c	FUNCTION_22
0x4001caa	             0x1d0	                            add eax, edx	       571	shallow.c	FUNCTION_22
0x4001cac	            0x4898	                                    cdqe	       571	shallow.c	FUNCTION_22
0x4001cae	          0x4889c6	                            mov rsi, rax	       571	shallow.c	FUNCTION_22
0x4001cb1	      0xbf04000000	                              mov edi, 4	       571	shallow.c	FUNCTION_22
0x4001cb6	      0xe885e3ffff	                        call sym.st_mult	       571	shallow.c	FUNCTION_22
0x4001cbb	          0x4889c7	                            mov rdi, rax	       571	shallow.c	FUNCTION_22
0x4001cbe	      0xe800000000	                          call 0x4001cc3	       571	shallow.c	FUNCTION_22
0x4001cc3	    0x48898578ffff	             mov qword [rbp - 0x88], rax	       571	shallow.c	FUNCTION_22
0x4001cca	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	       572	shallow.c	FUNCTION_22	FOR_1
0x4001cd4	            0xeb46	                           jmp 0x4001d1c	       572	shallow.c	FUNCTION_22	FOR_1
0x4001cd6	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	       573	shallow.c	FUNCTION_22	FOR_1
0x4001cdc	          0x8d5001	                      lea edx, [rax + 1]	       573	shallow.c	FUNCTION_22	FOR_1
0x4001cdf	    0x89955cffffff	             mov dword [rbp - 0xa4], edx	       573	shallow.c	FUNCTION_22	FOR_1
0x4001ce5	            0x4898	                                    cdqe	       573	shallow.c	FUNCTION_22	FOR_1
0x4001ce7	    0x488d14850000	                        lea rdx, [rax*4]	       573	shallow.c	FUNCTION_22	FOR_1
0x4001cef	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       573	shallow.c	FUNCTION_22	FOR_1
0x4001cf6	          0x4801c2	                            add rdx, rax	       573	shallow.c	FUNCTION_22	FOR_1
0x4001cf9	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       573	shallow.c	FUNCTION_22	FOR_1
0x4001d00	        0x488b4008	                mov rax, qword [rax + 8]	       573	shallow.c	FUNCTION_22	FOR_1
0x4001d04	    0x8b8d58ffffff	             mov ecx, dword [rbp - 0xa8]	       573	shallow.c	FUNCTION_22	FOR_1
0x4001d0a	        0x48c1e102	                              shl rcx, 2	       573	shallow.c	FUNCTION_22	FOR_1
0x4001d0e	          0x4801c8	                            add rax, rcx	       573	shallow.c	FUNCTION_22	FOR_1
0x4001d11	            0x8b00	                    mov eax, dword [rax]	       573	shallow.c	FUNCTION_22	FOR_1
0x4001d13	            0x8902	                    mov dword [rdx], eax	       573	shallow.c	FUNCTION_22	FOR_1
0x4001d15	    0x838558ffffff	               add dword [rbp - 0xa8], 1	       572	shallow.c	FUNCTION_22	FOR_1
0x4001d1c	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       572	shallow.c	FUNCTION_22	FOR_1
0x4001d23	          0x8b4010	            mov eax, dword [rax + 0x10] 	       572	shallow.c	FUNCTION_22	FOR_1
0x4001d26	    0x3b8558ffffff	             cmp eax, dword [rbp - 0xa8]	       572	shallow.c	FUNCTION_22	FOR_1
0x4001d2c	            0x77a8	                            ja 0x4001cd6	       572	shallow.c	FUNCTION_22	FOR_1
0x4001d2e	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	       574	shallow.c	FUNCTION_22	FOR_2
0x4001d38	            0xeb46	                           jmp 0x4001d80	       574	shallow.c	FUNCTION_22	FOR_2
0x4001d3a	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	       575	shallow.c	FUNCTION_22	FOR_2
0x4001d40	          0x8d5001	                      lea edx, [rax + 1]	       575	shallow.c	FUNCTION_22	FOR_2
0x4001d43	    0x89955cffffff	             mov dword [rbp - 0xa4], edx	       575	shallow.c	FUNCTION_22	FOR_2
0x4001d49	            0x4898	                                    cdqe	       575	shallow.c	FUNCTION_22	FOR_2
0x4001d4b	    0x488d14850000	                        lea rdx, [rax*4]	       575	shallow.c	FUNCTION_22	FOR_2
0x4001d53	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       575	shallow.c	FUNCTION_22	FOR_2
0x4001d5a	          0x4801c2	                            add rdx, rax	       575	shallow.c	FUNCTION_22	FOR_2
0x4001d5d	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       575	shallow.c	FUNCTION_22	FOR_2
0x4001d64	        0x488b4018	            mov rax, qword [rax + 0x18] 	       575	shallow.c	FUNCTION_22	FOR_2
0x4001d68	    0x8b8d58ffffff	             mov ecx, dword [rbp - 0xa8]	       575	shallow.c	FUNCTION_22	FOR_2
0x4001d6e	        0x48c1e102	                              shl rcx, 2	       575	shallow.c	FUNCTION_22	FOR_2
0x4001d72	          0x4801c8	                            add rax, rcx	       575	shallow.c	FUNCTION_22	FOR_2
0x4001d75	            0x8b00	                    mov eax, dword [rax]	       575	shallow.c	FUNCTION_22	FOR_2
0x4001d77	            0x8902	                    mov dword [rdx], eax	       575	shallow.c	FUNCTION_22	FOR_2
0x4001d79	    0x838558ffffff	               add dword [rbp - 0xa8], 1	       574	shallow.c	FUNCTION_22	FOR_2
0x4001d80	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       574	shallow.c	FUNCTION_22	FOR_2
0x4001d87	          0x8b4020	            mov eax, dword [rax + 0x20] 	       574	shallow.c	FUNCTION_22	FOR_2
0x4001d8a	    0x3b8558ffffff	             cmp eax, dword [rbp - 0xa8]	       574	shallow.c	FUNCTION_22	FOR_2
0x4001d90	            0x77a8	                            ja 0x4001d3a	       574	shallow.c	FUNCTION_22	FOR_2
0x4001d92	      0xe800000000	                          call 0x4001d97	       581	shallow.c	FUNCTION_22	CALL_1
0x4001d97	    0x898560ffffff	             mov dword [rbp - 0xa0], eax	       581	shallow.c	FUNCTION_22	CALL_1
0x4001d9d	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	       582	shallow.c	FUNCTION_22	FOR_3
0x4001da7	            0xeb60	                           jmp 0x4001e09	       582	shallow.c	FUNCTION_22	FOR_3
0x4001da9	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       583	shallow.c	FUNCTION_22	FOR_3	CALL_2
0x4001daf	            0x89c7	                            mov edi, eax	       583	shallow.c	FUNCTION_22	FOR_3	CALL_2
0x4001db1	      0xe800000000	                          call 0x4001db6	       583	shallow.c	FUNCTION_22	FOR_3	CALL_2
0x4001db6	        0x48894580	             mov qword [rbp - 0x80], rax	       583	shallow.c	FUNCTION_22	FOR_3	CALL_2
0x4001dba	      0x48837d8000	               cmp qword [rbp - 0x80], 0	       584	shallow.c	FUNCTION_22	FOR_3	IF_1
0x4001dbf	            0x7440	                            je 0x4001e01	       584	shallow.c	FUNCTION_22	FOR_3	IF_1
0x4001dc1	        0x488b4580	             mov rax, qword [rbp - 0x80]	       584	shallow.c	FUNCTION_22	FOR_3	IF_1
0x4001dc5	           0xfb600	                   movzx eax, byte [rax]	       584	shallow.c	FUNCTION_22	FOR_3	IF_1
0x4001dc8	          0x83e00e	                            and eax, 0xe	       584	shallow.c	FUNCTION_22	FOR_3	IF_1
0x4001dcb	            0x3c02	                               cmp al, 2	       584	shallow.c	FUNCTION_22	FOR_3	IF_1
0x4001dcd	            0x7532	                           jne 0x4001e01	       584	shallow.c	FUNCTION_22	FOR_3	IF_1
0x4001dcf	        0x488b4580	             mov rax, qword [rbp - 0x80]	       587	shallow.c	FUNCTION_22	FOR_3
0x4001dd3	            0x8b00	                    mov eax, dword [rax]	       587	shallow.c	FUNCTION_22	FOR_3
0x4001dd5	          0xc1e804	                              shr eax, 4	       587	shallow.c	FUNCTION_22	FOR_3
0x4001dd8	      0x25ffffff07	                      and eax, 0x7ffffff	       587	shallow.c	FUNCTION_22	FOR_3
0x4001ddd	      0x25fcfbff07	                      and eax, 0x7fffbfc	       587	shallow.c	FUNCTION_22	FOR_3
0x4001de2	            0x89c2	                            mov edx, eax	       587	shallow.c	FUNCTION_22	FOR_3
0x4001de4	        0x488b4580	             mov rax, qword [rbp - 0x80]	       587	shallow.c	FUNCTION_22	FOR_3
0x4001de8	    0x81e2ffffff07	                      and edx, 0x7ffffff	       587	shallow.c	FUNCTION_22	FOR_3
0x4001dee	            0x89d1	                            mov ecx, edx	       587	shallow.c	FUNCTION_22	FOR_3
0x4001df0	          0xc1e104	                              shl ecx, 4	       587	shallow.c	FUNCTION_22	FOR_3
0x4001df3	            0x8b10	                    mov edx, dword [rax]	       587	shallow.c	FUNCTION_22	FOR_3
0x4001df5	    0x81e20f000080	                     and edx, 0x8000000f	       587	shallow.c	FUNCTION_22	FOR_3
0x4001dfb	             0x9ca	                             or edx, ecx	       587	shallow.c	FUNCTION_22	FOR_3
0x4001dfd	            0x8910	                    mov dword [rax], edx	       587	shallow.c	FUNCTION_22	FOR_3
0x4001dff	            0xeb01	                           jmp 0x4001e02	       587	shallow.c	FUNCTION_22	FOR_3
0x4001e01	              0x90	                                     nop	       585	shallow.c	FUNCTION_22	FOR_3	IF_1
0x4001e02	    0x838558ffffff	               add dword [rbp - 0xa8], 1	       582	shallow.c	FUNCTION_22	FOR_3
0x4001e09	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       582	shallow.c	FUNCTION_22	FOR_3
0x4001e0f	    0x3b8560ffffff	             cmp eax, dword [rbp - 0xa0]	       582	shallow.c	FUNCTION_22	FOR_3
0x4001e15	            0x7292	                            jb 0x4001da9	       582	shallow.c	FUNCTION_22	FOR_3
0x4001e17	        0x488d45a0	                   lea rax, [rbp - 0x60]	       590	shallow.c	FUNCTION_22	CALL_3
0x4001e1b	      0xba40000000	                           mov edx, 0x40	       590	shallow.c	FUNCTION_22	CALL_3
0x4001e20	      0xbe00000000	                              mov esi, 0	       590	shallow.c	FUNCTION_22	CALL_3
0x4001e25	          0x4889c7	                            mov rdi, rax	       590	shallow.c	FUNCTION_22	CALL_3
0x4001e28	      0xe800000000	                          call 0x4001e2d	       590	shallow.c	FUNCTION_22	CALL_3
0x4001e2d	        0x488d45a0	                   lea rax, [rbp - 0x60]	       591	shallow.c	FUNCTION_22	CALL_4
0x4001e31	          0x4889c7	                            mov rdi, rax	       591	shallow.c	FUNCTION_22	CALL_4
0x4001e34	      0xe848f6ffff	                call sym.init_ref_bitmap	       591	shallow.c	FUNCTION_22	CALL_4
0x4001e39	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       592	shallow.c	FUNCTION_22
0x4001e40	          0x8b4008	                mov eax, dword [rax + 8]	       592	shallow.c	FUNCTION_22
0x4001e43	          0x8945b8	             mov dword [rbp - 0x48], eax	       592	shallow.c	FUNCTION_22
0x4001e46	      0xbe00000000	                              mov esi, 0	       599	shallow.c	FUNCTION_22	CALL_5
0x4001e4b	      0xbf00000000	                              mov edi, 0	       599	shallow.c	FUNCTION_22	CALL_5
0x4001e50	      0xe800000000	                          call 0x4001e55	       599	shallow.c	FUNCTION_22	CALL_5
0x4001e55	      0xbe00000000	                              mov esi, 0	       600	shallow.c	FUNCTION_22	CALL_6
0x4001e5a	      0xbf00000000	                              mov edi, 0	       600	shallow.c	FUNCTION_22	CALL_6
0x4001e5f	      0xe800000000	                          call 0x4001e64	       600	shallow.c	FUNCTION_22	CALL_6
0x4001e64	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	       603	shallow.c	FUNCTION_22	FOR_4
0x4001e6e	            0xeb79	                           jmp 0x4001ee9	       603	shallow.c	FUNCTION_22	FOR_4
0x4001e70	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       604	shallow.c	FUNCTION_22	FOR_4	CALL_7
0x4001e76	    0x488d14850000	                        lea rdx, [rax*4]	       604	shallow.c	FUNCTION_22	FOR_4	CALL_7
0x4001e7e	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       604	shallow.c	FUNCTION_22	FOR_4	CALL_7
0x4001e85	          0x4801d0	                            add rax, rdx	       604	shallow.c	FUNCTION_22	FOR_4	CALL_7
0x4001e88	            0x8b00	                    mov eax, dword [rax]	       604	shallow.c	FUNCTION_22	FOR_4	CALL_7
0x4001e8a	          0x4863d0	                         movsxd rdx, eax	       604	shallow.c	FUNCTION_22	FOR_4	CALL_7
0x4001e8d	          0x4889d0	                            mov rax, rdx	       604	shallow.c	FUNCTION_22	FOR_4	CALL_7
0x4001e90	        0x48c1e002	                              shl rax, 2	       604	shallow.c	FUNCTION_22	FOR_4	CALL_7
0x4001e94	          0x4801d0	                            add rax, rdx	       604	shallow.c	FUNCTION_22	FOR_4	CALL_7
0x4001e97	        0x48c1e002	                              shl rax, 2	       604	shallow.c	FUNCTION_22	FOR_4	CALL_7
0x4001e9b	          0x4889c2	                            mov rdx, rax	       604	shallow.c	FUNCTION_22	FOR_4	CALL_7
0x4001e9e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       604	shallow.c	FUNCTION_22	FOR_4	CALL_7
0x4001ea5	          0x4801d0	                            add rax, rdx	       604	shallow.c	FUNCTION_22	FOR_4	CALL_7
0x4001ea8	          0x4889c7	                            mov rdi, rax	       604	shallow.c	FUNCTION_22	FOR_4	CALL_7
0x4001eab	      0xe800000000	                          call 0x4001eb0	       604	shallow.c	FUNCTION_22	FOR_4	CALL_7
0x4001eb0	        0x48894588	             mov qword [rbp - 0x78], rax	       604	shallow.c	FUNCTION_22	FOR_4	CALL_7
0x4001eb4	        0x488b4588	             mov rax, qword [rbp - 0x78]	       605	shallow.c	FUNCTION_22	FOR_4
0x4001eb8	            0x8b00	                    mov eax, dword [rax]	       605	shallow.c	FUNCTION_22	FOR_4
0x4001eba	          0xc1e804	                              shr eax, 4	       605	shallow.c	FUNCTION_22	FOR_4
0x4001ebd	      0x25ffffff07	                      and eax, 0x7ffffff	       605	shallow.c	FUNCTION_22	FOR_4
0x4001ec2	          0x80cc04	                                or ah, 4	       605	shallow.c	FUNCTION_22	FOR_4
0x4001ec5	            0x89c2	                            mov edx, eax	       605	shallow.c	FUNCTION_22	FOR_4
0x4001ec7	        0x488b4588	             mov rax, qword [rbp - 0x78]	       605	shallow.c	FUNCTION_22	FOR_4
0x4001ecb	    0x81e2ffffff07	                      and edx, 0x7ffffff	       605	shallow.c	FUNCTION_22	FOR_4
0x4001ed1	            0x89d1	                            mov ecx, edx	       605	shallow.c	FUNCTION_22	FOR_4
0x4001ed3	          0xc1e104	                              shl ecx, 4	       605	shallow.c	FUNCTION_22	FOR_4
0x4001ed6	            0x8b10	                    mov edx, dword [rax]	       605	shallow.c	FUNCTION_22	FOR_4
0x4001ed8	    0x81e20f000080	                     and edx, 0x8000000f	       605	shallow.c	FUNCTION_22	FOR_4
0x4001ede	             0x9ca	                             or edx, ecx	       605	shallow.c	FUNCTION_22	FOR_4
0x4001ee0	            0x8910	                    mov dword [rax], edx	       605	shallow.c	FUNCTION_22	FOR_4
0x4001ee2	    0x838558ffffff	               add dword [rbp - 0xa8], 1	       603	shallow.c	FUNCTION_22	FOR_4
0x4001ee9	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	       603	shallow.c	FUNCTION_22	FOR_4
0x4001eef	    0x398558ffffff	            cmp dword [rbp - 0xa8], eax 	       603	shallow.c	FUNCTION_22	FOR_4
0x4001ef5	     0xf8275ffffff	                            jb 0x4001e70	       603	shallow.c	FUNCTION_22	FOR_4
0x4001efb	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	       608	shallow.c	FUNCTION_22	FOR_5
0x4001f05	            0xeb3d	                           jmp 0x4001f44	       608	shallow.c	FUNCTION_22	FOR_5
0x4001f07	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       609	shallow.c	FUNCTION_22	CALL_8
0x4001f0e	          0x488b08	                    mov rcx, qword [rax]	       609	shallow.c	FUNCTION_22	CALL_8
0x4001f11	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	       609	shallow.c	FUNCTION_22	CALL_8
0x4001f17	          0x4889d0	                            mov rax, rdx	       609	shallow.c	FUNCTION_22	CALL_8
0x4001f1a	        0x48c1e002	                              shl rax, 2	       609	shallow.c	FUNCTION_22	CALL_8
0x4001f1e	          0x4801d0	                            add rax, rdx	       609	shallow.c	FUNCTION_22	CALL_8
0x4001f21	        0x48c1e002	                              shl rax, 2	       609	shallow.c	FUNCTION_22	CALL_8
0x4001f25	          0x4801c1	                            add rcx, rax	       609	shallow.c	FUNCTION_22	CALL_8
0x4001f28	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	       609	shallow.c	FUNCTION_22	CALL_8
0x4001f2e	        0x488d45a0	                   lea rax, [rbp - 0x60]	       609	shallow.c	FUNCTION_22	CALL_8
0x4001f32	          0x4889ce	                            mov rsi, rcx	       609	shallow.c	FUNCTION_22	CALL_8
0x4001f35	          0x4889c7	                            mov rdi, rax	       609	shallow.c	FUNCTION_22	CALL_8
0x4001f38	      0xe8cef8ffff	                     call sym.paint_down	       609	shallow.c	FUNCTION_22	CALL_8
0x4001f3d	    0x838558ffffff	               add dword [rbp - 0xa8], 1	       608	shallow.c	FUNCTION_22	FOR_5
0x4001f44	    0x488b8570ffff	             mov rax, qword [rbp - 0x90]	       608	shallow.c	FUNCTION_22	FOR_5
0x4001f4b	          0x8b4008	                mov eax, dword [rax + 8]	       608	shallow.c	FUNCTION_22	FOR_5
0x4001f4e	    0x3b8558ffffff	             cmp eax, dword [rbp - 0xa8]	       608	shallow.c	FUNCTION_22	FOR_5
0x4001f54	            0x77b1	                            ja 0x4001f07	       608	shallow.c	FUNCTION_22	FOR_5
0x4001f56	    0x4883bd40ffff	               cmp qword [rbp - 0xc0], 0	       611	shallow.c	FUNCTION_22	IF_2
0x4001f5e	     0xf841b010000	                            je 0x400207f	       611	shallow.c	FUNCTION_22	IF_2
0x4001f64	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       612	shallow.c	FUNCTION_22	IF_2
0x4001f67	          0x83c01f	                           add eax, 0x1f	       612	shallow.c	FUNCTION_22	IF_2
0x4001f6a	          0xc1e805	                              shr eax, 5	       612	shallow.c	FUNCTION_22	IF_2
0x4001f6d	          0xc1e002	                              shl eax, 2	       612	shallow.c	FUNCTION_22	IF_2
0x4001f70	    0x898564ffffff	             mov dword [rbp - 0x9c], eax	       612	shallow.c	FUNCTION_22	IF_2
0x4001f76	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       613	shallow.c	FUNCTION_22	IF_2	CALL_9
0x4001f7d	          0x488b00	                    mov rax, qword [rax]	       613	shallow.c	FUNCTION_22	IF_2	CALL_9
0x4001f80	          0x8b4008	                mov eax, dword [rax + 8]	       613	shallow.c	FUNCTION_22	IF_2	CALL_9
0x4001f83	            0x4898	                                    cdqe	       613	shallow.c	FUNCTION_22	IF_2	CALL_9
0x4001f85	    0x488d14c50000	                        lea rdx, [rax*8]	       613	shallow.c	FUNCTION_22	IF_2	CALL_9
0x4001f8d	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       613	shallow.c	FUNCTION_22	IF_2	CALL_9
0x4001f94	      0xbe00000000	                              mov esi, 0	       613	shallow.c	FUNCTION_22	IF_2	CALL_9
0x4001f99	          0x4889c7	                            mov rdi, rax	       613	shallow.c	FUNCTION_22	IF_2	CALL_9
0x4001f9c	      0xe800000000	                          call 0x4001fa1	       613	shallow.c	FUNCTION_22	IF_2	CALL_9
0x4001fa1	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x4001fab	      0xe9bb000000	                           jmp 0x400206b	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x4001fb0	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_10
0x4001fb6	    0x488d14850000	                        lea rdx, [rax*4]	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_10
0x4001fbe	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_10
0x4001fc5	          0x4801d0	                            add rax, rdx	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_10
0x4001fc8	            0x8b00	                    mov eax, dword [rax]	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_10
0x4001fca	          0x4863d0	                         movsxd rdx, eax	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_10
0x4001fcd	          0x4889d0	                            mov rax, rdx	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_10
0x4001fd0	        0x48c1e002	                              shl rax, 2	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_10
0x4001fd4	          0x4801d0	                            add rax, rdx	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_10
0x4001fd7	        0x48c1e002	                              shl rax, 2	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_10
0x4001fdb	          0x4889c2	                            mov rdx, rax	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_10
0x4001fde	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_10
0x4001fe5	          0x4801d0	                            add rax, rdx	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_10
0x4001fe8	          0x4889c7	                            mov rdi, rax	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_10
0x4001feb	      0xe800000000	                          call 0x4001ff0	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_10
0x4001ff0	        0x48894590	             mov qword [rbp - 0x70], rax	       615	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_10
0x4001ff4	        0x488b5590	             mov rdx, qword [rbp - 0x70]	       616	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_11
0x4001ff8	        0x488d45a0	                   lea rax, [rbp - 0x60]	       616	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_11
0x4001ffc	          0x4889d6	                            mov rsi, rdx	       616	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_11
0x4001fff	          0x4889c7	                            mov rdi, rax	       616	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_11
0x4002002	      0xe87cf6ffff	                  call sym.ref_bitmap_at	       616	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_11
0x4002007	        0x48894598	             mov qword [rbp - 0x68], rax	       616	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_11
0x400200b	        0x488b4598	             mov rax, qword [rbp - 0x68]	       617	shallow.c	FUNCTION_22	IF_2	FOR_6	IF_3
0x400200f	          0x488b00	                    mov rax, qword [rax]	       617	shallow.c	FUNCTION_22	IF_2	FOR_6	IF_3
0x4002012	          0x4885c0	                           test rax, rax	       617	shallow.c	FUNCTION_22	IF_2	FOR_6	IF_3
0x4002015	            0x744d	                            je 0x4002064	       617	shallow.c	FUNCTION_22	IF_2	FOR_6	IF_3
0x4002017	    0x8b8558ffffff	             mov eax, dword [rbp - 0xa8]	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_12
0x400201d	    0x488d14850000	                        lea rdx, [rax*4]	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_12
0x4002025	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_12
0x400202c	          0x4801d0	                            add rax, rdx	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_12
0x400202f	            0x8b00	                    mov eax, dword [rax]	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_12
0x4002031	            0x4898	                                    cdqe	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_12
0x4002033	    0x488d14c50000	                        lea rdx, [rax*8]	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_12
0x400203b	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_12
0x4002042	        0x488d1c02	                    lea rbx, [rdx + rax]	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_12
0x4002046	    0x8b8564ffffff	             mov eax, dword [rbp - 0x9c]	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_12
0x400204c	          0x4863d0	                         movsxd rdx, eax	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_12
0x400204f	        0x488b4598	             mov rax, qword [rbp - 0x68]	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_12
0x4002053	          0x488b00	                    mov rax, qword [rax]	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_12
0x4002056	          0x4889d6	                            mov rsi, rdx	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_12
0x4002059	          0x4889c7	                            mov rdi, rax	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_12
0x400205c	      0xe800000000	                          call 0x4002061	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_12
0x4002061	          0x488903	                    mov qword [rbx], rax	       618	shallow.c	FUNCTION_22	IF_2	FOR_6	CALL_12
0x4002064	    0x838558ffffff	               add dword [rbp - 0xa8], 1	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x400206b	    0x8b855cffffff	             mov eax, dword [rbp - 0xa4]	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x4002071	    0x398558ffffff	            cmp dword [rbp - 0xa8], eax 	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x4002077	     0xf8233ffffff	                            jb 0x4001fb0	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x400207d	            0xeb1d	                           jmp 0x400209c	       614	shallow.c	FUNCTION_22	IF_2	FOR_6
0x400207f	    0x488b9538ffff	             mov rdx, qword [rbp - 0xc8]	       627	shallow.c	FUNCTION_22	CALL_13
0x4002086	        0x488d4da0	                   lea rcx, [rbp - 0x60]	       627	shallow.c	FUNCTION_22	CALL_13
0x400208a	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	       627	shallow.c	FUNCTION_22	CALL_13
0x4002091	          0x4889ce	                            mov rsi, rcx	       627	shallow.c	FUNCTION_22	CALL_13
0x4002094	          0x4889c7	                            mov rdi, rax	       627	shallow.c	FUNCTION_22	CALL_13
0x4002097	      0xe82d020000	            call sym.post_assign_shallow	       627	shallow.c	FUNCTION_22	CALL_13
0x400209c	        0x488d45a0	                   lea rax, [rbp - 0x60]	       629	shallow.c	FUNCTION_22	CALL_14
0x40020a0	          0x4889c7	                            mov rdi, rax	       629	shallow.c	FUNCTION_22	CALL_14
0x40020a3	      0xe8f9f3ffff	               call sym.clear_ref_bitmap	       629	shallow.c	FUNCTION_22	CALL_14
0x40020a8	    0xc78558ffffff	               mov dword [rbp - 0xa8], 0	       630	shallow.c	FUNCTION_22	FOR_7
0x40020b2	            0xeb23	                           jmp 0x40020d7	       630	shallow.c	FUNCTION_22	FOR_7
0x40020b4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       631	shallow.c	FUNCTION_22	CALL_15
0x40020b8	    0x8b9558ffffff	             mov edx, dword [rbp - 0xa8]	       631	shallow.c	FUNCTION_22	CALL_15
0x40020be	        0x48c1e203	                              shl rdx, 3	       631	shallow.c	FUNCTION_22	CALL_15
0x40020c2	          0x4801d0	                            add rax, rdx	       631	shallow.c	FUNCTION_22	CALL_15
0x40020c5	          0x488b00	                    mov rax, qword [rax]	       631	shallow.c	FUNCTION_22	CALL_15
0x40020c8	          0x4889c7	                            mov rdi, rax	       631	shallow.c	FUNCTION_22	CALL_15
0x40020cb	      0xe800000000	                          call 0x40020d0	       631	shallow.c	FUNCTION_22	CALL_15
0x40020d0	    0x838558ffffff	               add dword [rbp - 0xa8], 1	       630	shallow.c	FUNCTION_22	FOR_7
0x40020d7	          0x8b45d8	             mov eax, dword [rbp - 0x28]	       630	shallow.c	FUNCTION_22	FOR_7
0x40020da	    0x3b8558ffffff	             cmp eax, dword [rbp - 0xa8]	       630	shallow.c	FUNCTION_22	FOR_7
0x40020e0	            0x77d2	                            ja 0x40020b4	       630	shallow.c	FUNCTION_22	FOR_7
0x40020e2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       632	shallow.c	FUNCTION_22	CALL_16
0x40020e6	          0x4889c7	                            mov rdi, rax	       632	shallow.c	FUNCTION_22	CALL_16
0x40020e9	      0xe800000000	                          call 0x40020ee	       632	shallow.c	FUNCTION_22	CALL_16
0x40020ee	    0x488b8578ffff	             mov rax, qword [rbp - 0x88]	       633	shallow.c	FUNCTION_22	CALL_17
0x40020f5	          0x4889c7	                            mov rdi, rax	       633	shallow.c	FUNCTION_22	CALL_17
0x40020f8	      0xe800000000	                          call 0x40020fd	       633	shallow.c	FUNCTION_22	CALL_17
0x40020fd	              0x90	                                     nop	       634	shallow.c	FUNCTION_22
0x40020fe	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       634	shallow.c	FUNCTION_22
0x4002102	    0x644833042528	                xor rax, qword fs:[0x28]	       634	shallow.c	FUNCTION_22
0x400210b	            0x7405	                            je 0x4002112	       634	shallow.c	FUNCTION_22
0x400210d	      0xe800000000	                          call 0x4002112	       634	shallow.c	FUNCTION_22
0x4002112	    0x4881c4c80000	                           add rsp, 0xc8	       634	shallow.c	FUNCTION_22
0x4002119	              0x5b	                                 pop rbx	       634	shallow.c	FUNCTION_22
0x400211a	              0x5d	                                 pop rbp	       634	shallow.c	FUNCTION_22
0x400211b	              0xc3	                                     ret	       634	shallow.c	FUNCTION_22
strbuf_addch	DO,0:ELSE,0:IF,1:CALL,2:SWITCH,0:functions,0:WHILE,0:FOR,0	33
0x40000f0	              0x55	                                push rbp	       226	strbuf.h	FUNCTION_57
0x40000f1	          0x4889e5	                            mov rbp, rsp	       226	strbuf.h	FUNCTION_57
0x40000f4	        0x4883ec10	                           sub rsp, 0x10	       226	strbuf.h	FUNCTION_57
0x40000f8	        0x48897df8	                mov qword [rbp - 8], rdi	       226	strbuf.h	FUNCTION_57
0x40000fc	          0x8975f4	              mov dword [rbp - 0xc], esi	       226	strbuf.h	FUNCTION_57
0x40000ff	        0x488b45f8	                mov rax, qword [rbp - 8]	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4000103	          0x4889c7	                            mov rdi, rax	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4000106	      0xe8afffffff	                   call sym.strbuf_avail	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x400010b	          0x4885c0	                           test rax, rax	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x400010e	            0x7511	                           jne 0x4000121	       227	strbuf.h	FUNCTION_57	IF_1	CALL_1
0x4000110	        0x488b45f8	                mov rax, qword [rbp - 8]	       228	strbuf.h	FUNCTION_57	CALL_2
0x4000114	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_57	CALL_2
0x4000119	          0x4889c7	                            mov rdi, rax	       228	strbuf.h	FUNCTION_57	CALL_2
0x400011c	      0xe800000000	                          call 0x4000121	       228	strbuf.h	FUNCTION_57	CALL_2
0x4000121	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_57
0x4000125	        0x488b7010	            mov rsi, qword [rax + 0x10] 	       229	strbuf.h	FUNCTION_57
0x4000129	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	strbuf.h	FUNCTION_57
0x400012d	        0x488b4008	                mov rax, qword [rax + 8]	       229	strbuf.h	FUNCTION_57
0x4000131	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_57
0x4000135	        0x488b55f8	                mov rdx, qword [rbp - 8]	       229	strbuf.h	FUNCTION_57
0x4000139	        0x48894a08	                mov qword [rdx + 8], rcx	       229	strbuf.h	FUNCTION_57
0x400013d	          0x4801f0	                            add rax, rsi	       229	strbuf.h	FUNCTION_57
0x4000140	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       229	strbuf.h	FUNCTION_57
0x4000143	            0x8810	                      mov byte [rax], dl	       229	strbuf.h	FUNCTION_57
0x4000145	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_57
0x4000149	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       230	strbuf.h	FUNCTION_57
0x400014d	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	strbuf.h	FUNCTION_57
0x4000151	        0x488b4008	                mov rax, qword [rax + 8]	       230	strbuf.h	FUNCTION_57
0x4000155	          0x4801d0	                            add rax, rdx	       230	strbuf.h	FUNCTION_57
0x4000158	          0xc60000	                       mov byte [rax], 0	       230	strbuf.h	FUNCTION_57
0x400015b	              0x90	                                     nop	       231	strbuf.h	FUNCTION_57
0x400015c	              0xc9	                                   leave	       231	strbuf.h	FUNCTION_57
0x400015d	              0xc3	                                     ret	       231	strbuf.h	FUNCTION_57
setup_temporary_shallow	DO,0:ELSE,0:IF,2:CALL,9:SWITCH,0:functions,0:WHILE,0:FOR,0	58
0x4000df8	              0x55	                                push rbp	       290	shallow.c	FUNCTION_11
0x4000df9	          0x4889e5	                            mov rbp, rsp	       290	shallow.c	FUNCTION_11
0x4000dfc	        0x4883ec40	                           sub rsp, 0x40	       290	shallow.c	FUNCTION_11
0x4000e00	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       290	shallow.c	FUNCTION_11
0x4000e04	    0x64488b042528	                mov rax, qword fs:[0x28]	       290	shallow.c	FUNCTION_11
0x4000e0d	        0x488945f8	                mov qword [rbp - 8], rax	       290	shallow.c	FUNCTION_11
0x4000e11	            0x31c0	                            xor eax, eax	       290	shallow.c	FUNCTION_11
0x4000e13	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       292	shallow.c	FUNCTION_11
0x4000e1b	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       292	shallow.c	FUNCTION_11
0x4000e23	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       292	shallow.c	FUNCTION_11
0x4000e2b	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       294	shallow.c	FUNCTION_11	IF_1	CALL_1
0x4000e2f	        0x488d45e0	                   lea rax, [rbp - 0x20]	       294	shallow.c	FUNCTION_11	IF_1	CALL_1
0x4000e33	      0xbe00000000	                              mov esi, 0	       294	shallow.c	FUNCTION_11	IF_1	CALL_1
0x4000e38	          0x4889c7	                            mov rdi, rax	       294	shallow.c	FUNCTION_11	IF_1	CALL_1
0x4000e3b	      0xe800000000	                          call 0x4000e40	       294	shallow.c	FUNCTION_11	IF_1	CALL_1
0x4000e40	            0x85c0	                           test eax, eax	       294	shallow.c	FUNCTION_11	IF_1	CALL_1
0x4000e42	     0xf8481000000	                            je 0x4000ec9	       294	shallow.c	FUNCTION_11	IF_1	CALL_1
0x4000e48	      0xbf00000000	                              mov edi, 0	       295	shallow.c	FUNCTION_11	IF_1	CALL_3
0x4000e4d	      0xb800000000	                              mov eax, 0	       295	shallow.c	FUNCTION_11	IF_1	CALL_3
0x4000e52	      0xe800000000	                          call 0x4000e57	       295	shallow.c	FUNCTION_11	IF_1	CALL_3
0x4000e57	          0x4889c7	                            mov rdi, rax	       295	shallow.c	FUNCTION_11	IF_1	CALL_3
0x4000e5a	      0xe8b5f3ffff	                  call sym.xmks_tempfile	       295	shallow.c	FUNCTION_11	IF_1	CALL_3
0x4000e5f	        0x488945d8	             mov qword [rbp - 0x28], rax	       295	shallow.c	FUNCTION_11	IF_1	CALL_3
0x4000e63	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000e67	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000e6b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000e6f	          0x8b4014	            mov eax, dword [rax + 0x14] 	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000e72	          0x4889ce	                            mov rsi, rcx	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000e75	            0x89c7	                            mov edi, eax	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000e77	      0xe800000000	                          call 0x4000e7c	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000e7c	          0x4885c0	                           test rax, rax	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000e7f	            0x7810	                            js 0x4000e91	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000e81	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       298	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_5
0x4000e85	          0x4889c7	                            mov rdi, rax	       298	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_5
0x4000e88	      0xe800000000	                          call 0x4000e8d	       298	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_5
0x4000e8d	            0x85c0	                           test eax, eax	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000e8f	            0x791e	                           jns 0x4000eaf	       297	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_4
0x4000e91	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       299	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_6
0x4000e95	          0x4889c7	                            mov rdi, rax	       299	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_6
0x4000e98	      0xe800000000	                          call 0x4000e9d	       299	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_6
0x4000e9d	          0x4889c6	                            mov rsi, rax	       299	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_6
0x4000ea0	      0xbf00000000	                              mov edi, 0	       299	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_6
0x4000ea5	      0xb800000000	                              mov eax, 0	       299	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_6
0x4000eaa	      0xe800000000	                          call 0x4000eaf	       299	shallow.c	FUNCTION_11	IF_1	IF_2	CALL_6
0x4000eaf	        0x488d45e0	                   lea rax, [rbp - 0x20]	       301	shallow.c	FUNCTION_11	IF_1	CALL_8
0x4000eb3	          0x4889c7	                            mov rdi, rax	       301	shallow.c	FUNCTION_11	IF_1	CALL_8
0x4000eb6	      0xe800000000	                          call 0x4000ebb	       301	shallow.c	FUNCTION_11	IF_1	CALL_8
0x4000ebb	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       302	shallow.c	FUNCTION_11	IF_1	CALL_9
0x4000ebf	          0x4889c7	                            mov rdi, rax	       302	shallow.c	FUNCTION_11	IF_1	CALL_9
0x4000ec2	      0xe800000000	                          call 0x4000ec7	       302	shallow.c	FUNCTION_11	IF_1	CALL_9
0x4000ec7	            0xeb05	                           jmp 0x4000ece	       302	shallow.c	FUNCTION_11	IF_1	CALL_9
0x4000ec9	      0xb800000000	                              mov eax, 0	       308	shallow.c	FUNCTION_11
0x4000ece	        0x488b4df8	                mov rcx, qword [rbp - 8]	       309	shallow.c	FUNCTION_11
0x4000ed2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       309	shallow.c	FUNCTION_11
0x4000edb	            0x7405	                            je 0x4000ee2	       309	shallow.c	FUNCTION_11
0x4000edd	      0xe800000000	                          call 0x4000ee2	       309	shallow.c	FUNCTION_11
0x4000ee2	              0xc9	                                   leave	       309	shallow.c	FUNCTION_11
0x4000ee3	              0xc3	                                     ret	       309	shallow.c	FUNCTION_11
paint_alloc	DO,0:ELSE,0:IF,2:CALL,2:SWITCH,0:functions,0:WHILE,0:FOR,0	86
0x40016d7	              0x55	                                push rbp	       443	shallow.c	FUNCTION_19
0x40016d8	          0x4889e5	                            mov rbp, rsp	       443	shallow.c	FUNCTION_19
0x40016db	        0x4883ec20	                           sub rsp, 0x20	       443	shallow.c	FUNCTION_19
0x40016df	        0x48897de8	             mov qword [rbp - 0x18], rdi	       443	shallow.c	FUNCTION_19
0x40016e3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       444	shallow.c	FUNCTION_19
0x40016e7	          0x8b4018	            mov eax, dword [rax + 0x18] 	       444	shallow.c	FUNCTION_19
0x40016ea	          0x83c01f	                           add eax, 0x1f	       444	shallow.c	FUNCTION_19
0x40016ed	          0xc1e805	                              shr eax, 5	       444	shallow.c	FUNCTION_19
0x40016f0	          0x8945f0	             mov dword [rbp - 0x10], eax	       444	shallow.c	FUNCTION_19
0x40016f3	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       445	shallow.c	FUNCTION_19
0x40016f6	          0xc1e002	                              shl eax, 2	       445	shallow.c	FUNCTION_19
0x40016f9	          0x8945f4	              mov dword [rbp - 0xc], eax	       445	shallow.c	FUNCTION_19
0x40016fc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       447	shallow.c	FUNCTION_19	IF_1
0x4001700	          0x8b4038	            mov eax, dword [rax + 0x38] 	       447	shallow.c	FUNCTION_19	IF_1
0x4001703	            0x85c0	                           test eax, eax	       447	shallow.c	FUNCTION_19	IF_1
0x4001705	            0x7425	                            je 0x400172c	       447	shallow.c	FUNCTION_19	IF_1
0x4001707	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       447	shallow.c	FUNCTION_19	IF_1
0x400170a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       447	shallow.c	FUNCTION_19	IF_1
0x400170e	        0x488b4030	            mov rax, qword [rax + 0x30] 	       447	shallow.c	FUNCTION_19	IF_1
0x4001712	          0x4889c1	                            mov rcx, rax	       447	shallow.c	FUNCTION_19	IF_1
0x4001715	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       447	shallow.c	FUNCTION_19	IF_1
0x4001719	        0x488b4028	            mov rax, qword [rax + 0x28] 	       447	shallow.c	FUNCTION_19	IF_1
0x400171d	          0x4829c1	                            sub rcx, rax	       447	shallow.c	FUNCTION_19	IF_1
0x4001720	          0x4889c8	                            mov rax, rcx	       447	shallow.c	FUNCTION_19	IF_1
0x4001723	          0x4839c2	                            cmp rdx, rax	       447	shallow.c	FUNCTION_19	IF_1
0x4001726	     0xf8eb7000000	                           jle 0x40017e3	       447	shallow.c	FUNCTION_19	IF_1
0x400172c	    0x817df4000008	         cmp dword [rbp - 0xc], 0x80000 	       448	shallow.c	FUNCTION_19	IF_1	IF_2
0x4001733	            0x7614	                           jbe 0x4001749	       448	shallow.c	FUNCTION_19	IF_1	IF_2
0x4001735	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       449	shallow.c	FUNCTION_19	IF_1	IF_2	CALL_1
0x4001738	            0x89c6	                            mov esi, eax	       449	shallow.c	FUNCTION_19	IF_1	IF_2	CALL_1
0x400173a	      0xbf00000000	                              mov edi, 0	       449	shallow.c	FUNCTION_19	IF_1	IF_2	CALL_1
0x400173f	      0xb800000000	                              mov eax, 0	       449	shallow.c	FUNCTION_19	IF_1	IF_2	CALL_1
0x4001744	      0xe800000000	                          call 0x4001749	       449	shallow.c	FUNCTION_19	IF_1	IF_2	CALL_1
0x4001749	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       451	shallow.c	FUNCTION_19	IF_1
0x400174d	          0x8b4038	            mov eax, dword [rax + 0x38] 	       451	shallow.c	FUNCTION_19	IF_1
0x4001750	          0x8d5001	                      lea edx, [rax + 1]	       451	shallow.c	FUNCTION_19	IF_1
0x4001753	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       451	shallow.c	FUNCTION_19	IF_1
0x4001757	          0x895038	             mov dword [rax + 0x38], edx	       451	shallow.c	FUNCTION_19	IF_1
0x400175a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       452	shallow.c	FUNCTION_19	IF_1
0x400175e	          0x8b4038	            mov eax, dword [rax + 0x38] 	       452	shallow.c	FUNCTION_19	IF_1
0x4001761	            0x89c0	                            mov eax, eax	       452	shallow.c	FUNCTION_19	IF_1
0x4001763	          0x4889c6	                            mov rsi, rax	       452	shallow.c	FUNCTION_19	IF_1
0x4001766	      0xbf08000000	                              mov edi, 8	       452	shallow.c	FUNCTION_19	IF_1
0x400176b	      0xe8d0e8ffff	                        call sym.st_mult	       452	shallow.c	FUNCTION_19	IF_1
0x4001770	          0x4889c2	                            mov rdx, rax	       452	shallow.c	FUNCTION_19	IF_1
0x4001773	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       452	shallow.c	FUNCTION_19	IF_1
0x4001777	        0x488b4020	            mov rax, qword [rax + 0x20] 	       452	shallow.c	FUNCTION_19	IF_1
0x400177b	          0x4889d6	                            mov rsi, rdx	       452	shallow.c	FUNCTION_19	IF_1
0x400177e	          0x4889c7	                            mov rdi, rax	       452	shallow.c	FUNCTION_19	IF_1
0x4001781	      0xe800000000	                          call 0x4001786	       452	shallow.c	FUNCTION_19	IF_1
0x4001786	          0x4889c2	                            mov rdx, rax	       452	shallow.c	FUNCTION_19	IF_1
0x4001789	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       452	shallow.c	FUNCTION_19	IF_1
0x400178d	        0x48895020	             mov qword [rax + 0x20], rdx	       452	shallow.c	FUNCTION_19	IF_1
0x4001791	      0xbf00000800	                        mov edi, 0x80000	       453	shallow.c	FUNCTION_19	IF_1	CALL_2
0x4001796	      0xe800000000	                          call 0x400179b	       453	shallow.c	FUNCTION_19	IF_1	CALL_2
0x400179b	          0x4889c2	                            mov rdx, rax	       453	shallow.c	FUNCTION_19	IF_1	CALL_2
0x400179e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       453	shallow.c	FUNCTION_19	IF_1	CALL_2
0x40017a2	        0x48895028	             mov qword [rax + 0x28], rdx	       453	shallow.c	FUNCTION_19	IF_1	CALL_2
0x40017a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       454	shallow.c	FUNCTION_19	IF_1
0x40017aa	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       454	shallow.c	FUNCTION_19	IF_1
0x40017ae	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       454	shallow.c	FUNCTION_19	IF_1
0x40017b2	          0x8b4038	            mov eax, dword [rax + 0x38] 	       454	shallow.c	FUNCTION_19	IF_1
0x40017b5	          0x83e801	                              sub eax, 1	       454	shallow.c	FUNCTION_19	IF_1
0x40017b8	            0x89c0	                            mov eax, eax	       454	shallow.c	FUNCTION_19	IF_1
0x40017ba	        0x48c1e003	                              shl rax, 3	       454	shallow.c	FUNCTION_19	IF_1
0x40017be	          0x4801c2	                            add rdx, rax	       454	shallow.c	FUNCTION_19	IF_1
0x40017c1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       454	shallow.c	FUNCTION_19	IF_1
0x40017c5	        0x488b4028	            mov rax, qword [rax + 0x28] 	       454	shallow.c	FUNCTION_19	IF_1
0x40017c9	          0x488902	                    mov qword [rdx], rax	       454	shallow.c	FUNCTION_19	IF_1
0x40017cc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       455	shallow.c	FUNCTION_19	IF_1
0x40017d0	        0x488b4028	            mov rax, qword [rax + 0x28] 	       455	shallow.c	FUNCTION_19	IF_1
0x40017d4	    0x488d90000008	                lea rdx, [rax + 0x80000]	       455	shallow.c	FUNCTION_19	IF_1
0x40017db	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       455	shallow.c	FUNCTION_19	IF_1
0x40017df	        0x48895030	             mov qword [rax + 0x30], rdx	       455	shallow.c	FUNCTION_19	IF_1
0x40017e3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       457	shallow.c	FUNCTION_19
0x40017e7	        0x488b4028	            mov rax, qword [rax + 0x28] 	       457	shallow.c	FUNCTION_19
0x40017eb	        0x488945f8	                mov qword [rbp - 8], rax	       457	shallow.c	FUNCTION_19
0x40017ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       458	shallow.c	FUNCTION_19
0x40017f3	        0x488b5028	            mov rdx, qword [rax + 0x28] 	       458	shallow.c	FUNCTION_19
0x40017f7	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       458	shallow.c	FUNCTION_19
0x40017fa	          0x4801c2	                            add rdx, rax	       458	shallow.c	FUNCTION_19
0x40017fd	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       458	shallow.c	FUNCTION_19
0x4001801	        0x48895028	             mov qword [rax + 0x28], rdx	       458	shallow.c	FUNCTION_19
0x4001805	        0x488b45f8	                mov rax, qword [rbp - 8]	       459	shallow.c	FUNCTION_19
0x4001809	              0xc9	                                   leave	       460	shallow.c	FUNCTION_19
0x400180a	              0xc3	                                     ret	       460	shallow.c	FUNCTION_19
hold_lock_file_for_update	DO,0:ELSE,0:IF,0:CALL,1:SWITCH,0:functions,0:WHILE,0:FOR,0	14
0x4000233	              0x55	                                push rbp	       174	lockfile.h	FUNCTION_65
0x4000234	          0x4889e5	                            mov rbp, rsp	       174	lockfile.h	FUNCTION_65
0x4000237	        0x4883ec20	                           sub rsp, 0x20	       174	lockfile.h	FUNCTION_65
0x400023b	        0x48897df8	                mov qword [rbp - 8], rdi	       174	lockfile.h	FUNCTION_65
0x400023f	        0x488975f0	             mov qword [rbp - 0x10], rsi	       174	lockfile.h	FUNCTION_65
0x4000243	          0x8955ec	             mov dword [rbp - 0x14], edx	       174	lockfile.h	FUNCTION_65
0x4000246	          0x8b55ec	             mov edx, dword [rbp - 0x14]	       175	lockfile.h	FUNCTION_65	CALL_1
0x4000249	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	       175	lockfile.h	FUNCTION_65	CALL_1
0x400024d	        0x488b45f8	                mov rax, qword [rbp - 8]	       175	lockfile.h	FUNCTION_65	CALL_1
0x4000251	      0xb900000000	                              mov ecx, 0	       175	lockfile.h	FUNCTION_65	CALL_1
0x4000256	          0x4889c7	                            mov rdi, rax	       175	lockfile.h	FUNCTION_65	CALL_1
0x4000259	      0xe800000000	                          call 0x400025e	       175	lockfile.h	FUNCTION_65	CALL_1
0x400025e	              0xc9	                                   leave	       176	lockfile.h	FUNCTION_65
0x400025f	              0xc3	                                     ret	       176	lockfile.h	FUNCTION_65
register_shallow	DO,0:ELSE,0:IF,1:CALL,4:SWITCH,0:functions,0:WHILE,0:FOR,0	33
0x4000319	              0x55	                                push rbp	        31	shallow.c	FUNCTION_2
0x400031a	          0x4889e5	                            mov rbp, rsp	        31	shallow.c	FUNCTION_2
0x400031d	        0x4883ec20	                           sub rsp, 0x20	        31	shallow.c	FUNCTION_2
0x4000321	        0x48897de8	             mov qword [rbp - 0x18], rdi	        31	shallow.c	FUNCTION_2
0x4000325	      0xbf18000000	                           mov edi, 0x18	        32	shallow.c	FUNCTION_2
0x400032a	      0xe800000000	                          call 0x400032f	        32	shallow.c	FUNCTION_2
0x400032f	        0x488945f0	             mov qword [rbp - 0x10], rax	        32	shallow.c	FUNCTION_2
0x4000333	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        34	shallow.c	FUNCTION_2	CALL_2
0x4000337	          0x4889c7	                            mov rdi, rax	        34	shallow.c	FUNCTION_2	CALL_2
0x400033a	      0xe800000000	                          call 0x400033f	        34	shallow.c	FUNCTION_2	CALL_2
0x400033f	        0x488945f8	                mov qword [rbp - 8], rax	        34	shallow.c	FUNCTION_2	CALL_2
0x4000343	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        36	shallow.c	FUNCTION_2	CALL_3
0x4000347	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        36	shallow.c	FUNCTION_2	CALL_3
0x400034b	          0x4889d6	                            mov rsi, rdx	        36	shallow.c	FUNCTION_2	CALL_3
0x400034e	          0x4889c7	                            mov rdi, rax	        36	shallow.c	FUNCTION_2	CALL_3
0x4000351	      0xe898feffff	                         call sym.oidcpy	        36	shallow.c	FUNCTION_2	CALL_3
0x4000356	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        37	shallow.c	FUNCTION_2
0x400035a	    0xc74014ffffff	     mov dword [rax + 0x14], 0xffffffff 	        37	shallow.c	FUNCTION_2
0x4000361	      0x48837df800	                  cmp qword [rbp - 8], 0	        38	shallow.c	FUNCTION_2	IF_1
0x4000366	            0x741a	                            je 0x4000382	        38	shallow.c	FUNCTION_2	IF_1
0x4000368	        0x488b45f8	                mov rax, qword [rbp - 8]	        38	shallow.c	FUNCTION_2	IF_1
0x400036c	           0xfb600	                   movzx eax, byte [rax]	        38	shallow.c	FUNCTION_2	IF_1
0x400036f	          0x83e001	                              and eax, 1	        38	shallow.c	FUNCTION_2	IF_1
0x4000372	            0x84c0	                             test al, al	        38	shallow.c	FUNCTION_2	IF_1
0x4000374	            0x740c	                            je 0x4000382	        38	shallow.c	FUNCTION_2	IF_1
0x4000376	        0x488b45f8	                mov rax, qword [rbp - 8]	        39	shallow.c	FUNCTION_2	IF_1
0x400037a	    0x48c740300000	               mov qword [rax + 0x30], 0	        39	shallow.c	FUNCTION_2	IF_1
0x4000382	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        40	shallow.c	FUNCTION_2	CALL_4
0x4000386	      0xbe00000000	                              mov esi, 0	        40	shallow.c	FUNCTION_2	CALL_4
0x400038b	          0x4889c7	                            mov rdi, rax	        40	shallow.c	FUNCTION_2	CALL_4
0x400038e	      0xe800000000	                          call 0x4000393	        40	shallow.c	FUNCTION_2	CALL_4
0x4000393	              0xc9	                                   leave	        41	shallow.c	FUNCTION_2
0x4000394	              0xc3	                                     ret	        41	shallow.c	FUNCTION_2
clear_shallow_info	DO,0:ELSE,0:IF,0:CALL,2:SWITCH,0:functions,0:WHILE,0:FOR,0	15
0x400130a	              0x55	                                push rbp	       409	shallow.c	ELSE_1	FUNCTION_17
0x400130b	          0x4889e5	                            mov rbp, rsp	       409	shallow.c	ELSE_1	FUNCTION_17
0x400130e	        0x4883ec10	                           sub rsp, 0x10	       409	shallow.c	ELSE_1	FUNCTION_17
0x4001312	        0x48897df8	                mov qword [rbp - 8], rdi	       409	shallow.c	ELSE_1	FUNCTION_17
0x4001316	        0x488b45f8	                mov rax, qword [rbp - 8]	       410	shallow.c	ELSE_1	FUNCTION_17	CALL_1
0x400131a	        0x488b4008	                mov rax, qword [rax + 8]	       410	shallow.c	ELSE_1	FUNCTION_17	CALL_1
0x400131e	          0x4889c7	                            mov rdi, rax	       410	shallow.c	ELSE_1	FUNCTION_17	CALL_1
0x4001321	      0xe800000000	                          call 0x4001326	       410	shallow.c	ELSE_1	FUNCTION_17	CALL_1
0x4001326	        0x488b45f8	                mov rax, qword [rbp - 8]	       411	shallow.c	ELSE_1	FUNCTION_17	CALL_2
0x400132a	        0x488b4018	            mov rax, qword [rax + 0x18] 	       411	shallow.c	ELSE_1	FUNCTION_17	CALL_2
0x400132e	          0x4889c7	                            mov rdi, rax	       411	shallow.c	ELSE_1	FUNCTION_17	CALL_2
0x4001331	      0xe800000000	                          call 0x4001336	       411	shallow.c	ELSE_1	FUNCTION_17	CALL_2
0x4001336	              0x90	                                     nop	       412	shallow.c	ELSE_1	FUNCTION_17
0x4001337	              0xc9	                                   leave	       412	shallow.c	ELSE_1	FUNCTION_17
0x4001338	              0xc3	                                     ret	       412	shallow.c	ELSE_1	FUNCTION_17
prune_shallow	DO,0:ELSE,1:IF,3:CALL,14:SWITCH,0:functions,0:WHILE,0:FOR,0	68
0x4001053	              0x55	                                push rbp	       355	shallow.c	FUNCTION_15
0x4001054	          0x4889e5	                            mov rbp, rsp	       355	shallow.c	FUNCTION_15
0x4001057	        0x4883ec40	                           sub rsp, 0x40	       355	shallow.c	FUNCTION_15
0x400105b	          0x897dcc	             mov dword [rbp - 0x34], edi	       355	shallow.c	FUNCTION_15
0x400105e	    0x64488b042528	                mov rax, qword fs:[0x28]	       355	shallow.c	FUNCTION_15
0x4001067	        0x488945f8	                mov qword [rbp - 8], rax	       355	shallow.c	FUNCTION_15
0x400106b	            0x31c0	                            xor eax, eax	       355	shallow.c	FUNCTION_15
0x400106d	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       357	shallow.c	FUNCTION_15
0x4001075	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       357	shallow.c	FUNCTION_15
0x400107d	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       357	shallow.c	FUNCTION_15
0x4001085	        0x837dcc00	               cmp dword [rbp - 0x34], 0	       360	shallow.c	FUNCTION_15	IF_1
0x4001089	            0x742c	                            je 0x40010b7	       360	shallow.c	FUNCTION_15	IF_1
0x400108b	        0x488d45e0	                   lea rax, [rbp - 0x20]	       361	shallow.c	FUNCTION_15	IF_1	CALL_1
0x400108f	      0xb903000000	                              mov ecx, 3	       361	shallow.c	FUNCTION_15	IF_1	CALL_1
0x4001094	      0xba00000000	                              mov edx, 0	       361	shallow.c	FUNCTION_15	IF_1	CALL_1
0x4001099	      0xbe00000000	                              mov esi, 0	       361	shallow.c	FUNCTION_15	IF_1	CALL_1
0x400109e	          0x4889c7	                            mov rdi, rax	       361	shallow.c	FUNCTION_15	IF_1	CALL_1
0x40010a1	      0xe844fcffff	        call sym.write_shallow_commits_1	       361	shallow.c	FUNCTION_15	IF_1	CALL_1
0x40010a6	        0x488d45e0	                   lea rax, [rbp - 0x20]	       362	shallow.c	FUNCTION_15	IF_1	CALL_2
0x40010aa	          0x4889c7	                            mov rdi, rax	       362	shallow.c	FUNCTION_15	IF_1	CALL_2
0x40010ad	      0xe800000000	                          call 0x40010b2	       362	shallow.c	FUNCTION_15	IF_1	CALL_2
0x40010b2	      0xe9a3000000	                           jmp 0x400115a	       362	shallow.c	FUNCTION_15	IF_1	CALL_2
0x40010b7	      0xe800000000	                          call 0x40010bc	       365	shallow.c	FUNCTION_15	CALL_4
0x40010bc	      0xba01000000	                              mov edx, 1	       365	shallow.c	FUNCTION_15	CALL_4
0x40010c1	          0x4889c6	                            mov rsi, rax	       365	shallow.c	FUNCTION_15	CALL_4
0x40010c4	      0xbf00000000	                              mov edi, 0	       365	shallow.c	FUNCTION_15	CALL_4
0x40010c9	      0xe865f1ffff	      call sym.hold_lock_file_for_update	       365	shallow.c	FUNCTION_15	CALL_4
0x40010ce	          0x8945dc	             mov dword [rbp - 0x24], eax	       365	shallow.c	FUNCTION_15	CALL_4
0x40010d1	      0xe8b3faffff	  call sym.check_shallow_file_for_update	       367	shallow.c	FUNCTION_15	CALL_5
0x40010d6	        0x488d45e0	                   lea rax, [rbp - 0x20]	       368	shallow.c	FUNCTION_15	IF_2	CALL_6
0x40010da	      0xb901000000	                              mov ecx, 1	       368	shallow.c	FUNCTION_15	IF_2	CALL_6
0x40010df	      0xba00000000	                              mov edx, 0	       368	shallow.c	FUNCTION_15	IF_2	CALL_6
0x40010e4	      0xbe00000000	                              mov esi, 0	       368	shallow.c	FUNCTION_15	IF_2	CALL_6
0x40010e9	          0x4889c7	                            mov rdi, rax	       368	shallow.c	FUNCTION_15	IF_2	CALL_6
0x40010ec	      0xe8f9fbffff	        call sym.write_shallow_commits_1	       368	shallow.c	FUNCTION_15	IF_2	CALL_6
0x40010f1	            0x85c0	                           test eax, eax	       368	shallow.c	FUNCTION_15	IF_2	CALL_6
0x40010f3	            0x7442	                            je 0x4001137	       368	shallow.c	FUNCTION_15	IF_2	CALL_6
0x40010f5	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       369	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_7
0x40010f9	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       369	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_7
0x40010fd	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       369	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_7
0x4001100	          0x4889ce	                            mov rsi, rcx	       369	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_7
0x4001103	            0x89c7	                            mov edi, eax	       369	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_7
0x4001105	      0xe800000000	                          call 0x400110a	       369	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_7
0x400110a	          0x4885c0	                           test rax, rax	       369	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_7
0x400110d	            0x791c	                           jns 0x400112b	       369	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_7
0x400110f	      0xbf00000000	                              mov edi, 0	       370	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x4001114	      0xe847f1ffff	             call sym.get_lock_file_path	       370	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x4001119	          0x4889c6	                            mov rsi, rax	       370	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x400111c	      0xbf00000000	                              mov edi, 0	       370	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x4001121	      0xb800000000	                              mov eax, 0	       370	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x4001126	      0xe800000000	                          call 0x400112b	       370	shallow.c	FUNCTION_15	IF_2	IF_3	CALL_8
0x400112b	      0xbf00000000	                              mov edi, 0	       372	shallow.c	FUNCTION_15	IF_2	CALL_10
0x4001130	      0xe800000000	                          call 0x4001135	       372	shallow.c	FUNCTION_15	IF_2	CALL_10
0x4001135	            0xeb17	                           jmp 0x400114e	       372	shallow.c	FUNCTION_15	IF_2	CALL_10
0x4001137	      0xe800000000	                          call 0x400113c	       374	shallow.c	FUNCTION_15	ELSE_1	CALL_12
0x400113c	          0x4889c7	                            mov rdi, rax	       374	shallow.c	FUNCTION_15	ELSE_1	CALL_12
0x400113f	      0xe800000000	                          call 0x4001144	       374	shallow.c	FUNCTION_15	ELSE_1	CALL_12
0x4001144	      0xbf00000000	                              mov edi, 0	       375	shallow.c	FUNCTION_15	ELSE_1	CALL_13
0x4001149	      0xe82ff1ffff	             call sym.rollback_lock_file	       375	shallow.c	FUNCTION_15	ELSE_1	CALL_13
0x400114e	        0x488d45e0	                   lea rax, [rbp - 0x20]	       377	shallow.c	FUNCTION_15	CALL_14
0x4001152	          0x4889c7	                            mov rdi, rax	       377	shallow.c	FUNCTION_15	CALL_14
0x4001155	      0xe800000000	                          call 0x400115a	       377	shallow.c	FUNCTION_15	CALL_14
0x400115a	        0x488b45f8	                mov rax, qword [rbp - 8]	       378	shallow.c	FUNCTION_15
0x400115e	    0x644833042528	                xor rax, qword fs:[0x28]	       378	shallow.c	FUNCTION_15
0x4001167	            0x7405	                            je 0x400116e	       378	shallow.c	FUNCTION_15
0x4001169	      0xe800000000	                          call 0x400116e	       378	shallow.c	FUNCTION_15
0x400116e	              0xc9	                                   leave	       378	shallow.c	FUNCTION_15
0x400116f	              0xc3	                                     ret	       378	shallow.c	FUNCTION_15
advertise_shallow_grafts	DO,0:ELSE,0:IF,1:CALL,2:SWITCH,0:functions,0:WHILE,0:FOR,0	15
0x4001029	              0x55	                                push rbp	       344	shallow.c	FUNCTION_14
0x400102a	          0x4889e5	                            mov rbp, rsp	       344	shallow.c	FUNCTION_14
0x400102d	        0x4883ec10	                           sub rsp, 0x10	       344	shallow.c	FUNCTION_14
0x4001031	          0x897dfc	                mov dword [rbp - 4], edi	       344	shallow.c	FUNCTION_14
0x4001034	      0xe800000000	                          call 0x4001039	       345	shallow.c	FUNCTION_14	IF_1	CALL_1
0x4001039	            0x85c0	                           test eax, eax	       345	shallow.c	FUNCTION_14	IF_1	CALL_1
0x400103b	            0x7413	                            je 0x4001050	       345	shallow.c	FUNCTION_14	IF_1	CALL_1
0x400103d	        0x488d45fc	                      lea rax, [rbp - 4]	       347	shallow.c	FUNCTION_14	CALL_2
0x4001041	          0x4889c6	                            mov rsi, rax	       347	shallow.c	FUNCTION_14	CALL_2
0x4001044	      0xbf00000000	                              mov edi, 0	       347	shallow.c	FUNCTION_14	CALL_2
0x4001049	      0xe800000000	                          call 0x400104e	       347	shallow.c	FUNCTION_14	CALL_2
0x400104e	            0xeb01	                           jmp 0x4001051	       347	shallow.c	FUNCTION_14	CALL_2
0x4001050	              0x90	                                     nop	       346	shallow.c	FUNCTION_14	IF_1
0x4001051	              0xc9	                                   leave	       348	shallow.c	FUNCTION_14
0x4001052	              0xc3	                                     ret	       348	shallow.c	FUNCTION_14
is_repository_shallow	DO,0:ELSE,0:IF,4:CALL,9:SWITCH,0:functions,0:WHILE,1:FOR,0	73
0x4000395	              0x55	                                push rbp	        44	shallow.c	FUNCTION_3
0x4000396	          0x4889e5	                            mov rbp, rsp	        44	shallow.c	FUNCTION_3
0x4000399	    0x4881ec400400	                          sub rsp, 0x440	        44	shallow.c	FUNCTION_3
0x40003a0	    0x64488b042528	                mov rax, qword fs:[0x28]	        44	shallow.c	FUNCTION_3
0x40003a9	        0x488945f8	                mov qword [rbp - 8], rax	        44	shallow.c	FUNCTION_3
0x40003ad	            0x31c0	                            xor eax, eax	        44	shallow.c	FUNCTION_3
0x40003af	    0x488b05000000	            mov rax, qword [0x040003b6] 	        47	shallow.c	FUNCTION_3
0x40003b6	    0x488985c0fbff	            mov qword [rbp - 0x440], rax	        47	shallow.c	FUNCTION_3
0x40003bd	    0x8b0500000000	            mov eax, dword [0x040003c3] 	        49	shallow.c	FUNCTION_3	IF_1
0x40003c3	            0x85c0	                           test eax, eax	        49	shallow.c	FUNCTION_3	IF_1
0x40003c5	            0x780b	                            js 0x40003d2	        49	shallow.c	FUNCTION_3	IF_1
0x40003c7	    0x8b0500000000	            mov eax, dword [0x040003cd] 	        50	shallow.c	FUNCTION_3	IF_1
0x40003cd	      0xe909010000	                           jmp 0x40004db	        50	shallow.c	FUNCTION_3	IF_1
0x40003d2	    0x4883bdc0fbff	              cmp qword [rbp - 0x440], 0	        52	shallow.c	FUNCTION_3	IF_2
0x40003da	            0x750c	                           jne 0x40003e8	        52	shallow.c	FUNCTION_3	IF_2
0x40003dc	      0xe800000000	                          call 0x40003e1	        53	shallow.c	FUNCTION_3	CALL_1
0x40003e1	    0x488985c0fbff	            mov qword [rbp - 0x440], rax	        53	shallow.c	FUNCTION_3	CALL_1
0x40003e8	    0x488b85c0fbff	            mov rax, qword [rbp - 0x440]	        59	shallow.c	FUNCTION_3	IF_3
0x40003ef	           0xfb600	                   movzx eax, byte [rax]	        59	shallow.c	FUNCTION_3	IF_3
0x40003f2	            0x84c0	                             test al, al	        59	shallow.c	FUNCTION_3	IF_3
0x40003f4	            0x7425	                            je 0x400041b	        59	shallow.c	FUNCTION_3	IF_3
0x40003f6	    0x488b85c0fbff	            mov rax, qword [rbp - 0x440]	        59	shallow.c	FUNCTION_3	IF_3
0x40003fd	      0xbe00000000	                              mov esi, 0	        59	shallow.c	FUNCTION_3	IF_3
0x4000402	          0x4889c7	                            mov rdi, rax	        59	shallow.c	FUNCTION_3	IF_3
0x4000405	      0xe800000000	                          call 0x400040a	        59	shallow.c	FUNCTION_3	IF_3
0x400040a	    0x488985c8fbff	            mov qword [rbp - 0x438], rax	        59	shallow.c	FUNCTION_3	IF_3
0x4000411	    0x4883bdc8fbff	              cmp qword [rbp - 0x438], 0	        59	shallow.c	FUNCTION_3	IF_3
0x4000419	            0x751f	                           jne 0x400043a	        59	shallow.c	FUNCTION_3	IF_3
0x400041b	      0xbf00000000	                              mov edi, 0	        60	shallow.c	FUNCTION_3	IF_3	CALL_2
0x4000420	      0xe800000000	                          call 0x4000425	        60	shallow.c	FUNCTION_3	IF_3	CALL_2
0x4000425	    0xc70500000000	               mov dword [0x0400042f], 0	        61	shallow.c	FUNCTION_3	IF_3
0x400042f	    0x8b0500000000	            mov eax, dword [0x04000435] 	        62	shallow.c	FUNCTION_3	IF_3
0x4000435	      0xe9a1000000	                           jmp 0x40004db	        62	shallow.c	FUNCTION_3	IF_3
0x400043a	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	        64	shallow.c	FUNCTION_3	CALL_4
0x4000441	          0x4889c7	                            mov rdi, rax	        64	shallow.c	FUNCTION_3	CALL_4
0x4000444	      0xe800000000	                          call 0x4000449	        64	shallow.c	FUNCTION_3	CALL_4
0x4000449	            0x89c6	                            mov esi, eax	        64	shallow.c	FUNCTION_3	CALL_4
0x400044b	      0xbf00000000	                              mov edi, 0	        64	shallow.c	FUNCTION_3	CALL_4
0x4000450	      0xe800000000	                          call 0x4000455	        64	shallow.c	FUNCTION_3	CALL_4
0x4000455	    0xc70500000000	               mov dword [0x0400045f], 1	        65	shallow.c	FUNCTION_3
0x400045f	            0xeb45	                           jmp 0x40004a6	        67	shallow.c	FUNCTION_3	WHILE_1	CALL_5
0x4000461	    0x488d95d0fbff	                  lea rdx, [rbp - 0x430]	        69	shallow.c	FUNCTION_3	WHILE_1	IF_4	CALL_6
0x4000468	    0x488d85f0fbff	                  lea rax, [rbp - 0x410]	        69	shallow.c	FUNCTION_3	WHILE_1	IF_4	CALL_6
0x400046f	          0x4889d6	                            mov rsi, rdx	        69	shallow.c	FUNCTION_3	WHILE_1	IF_4	CALL_6
0x4000472	          0x4889c7	                            mov rdi, rax	        69	shallow.c	FUNCTION_3	WHILE_1	IF_4	CALL_6
0x4000475	      0xe800000000	                          call 0x400047a	        69	shallow.c	FUNCTION_3	WHILE_1	IF_4	CALL_6
0x400047a	            0x85c0	                           test eax, eax	        69	shallow.c	FUNCTION_3	WHILE_1	IF_4	CALL_6
0x400047c	            0x7419	                            je 0x4000497	        69	shallow.c	FUNCTION_3	WHILE_1	IF_4	CALL_6
0x400047e	    0x488d85f0fbff	                  lea rax, [rbp - 0x410]	        70	shallow.c	FUNCTION_3	WHILE_1	CALL_7
0x4000485	          0x4889c6	                            mov rsi, rax	        70	shallow.c	FUNCTION_3	WHILE_1	CALL_7
0x4000488	      0xbf00000000	                              mov edi, 0	        70	shallow.c	FUNCTION_3	WHILE_1	CALL_7
0x400048d	      0xb800000000	                              mov eax, 0	        70	shallow.c	FUNCTION_3	WHILE_1	CALL_7
0x4000492	      0xe800000000	                          call 0x4000497	        70	shallow.c	FUNCTION_3	WHILE_1	CALL_7
0x4000497	    0x488d85d0fbff	                  lea rax, [rbp - 0x430]	        71	shallow.c	FUNCTION_3	WHILE_1	CALL_8
0x400049e	          0x4889c7	                            mov rdi, rax	        71	shallow.c	FUNCTION_3	WHILE_1	CALL_8
0x40004a1	      0xe800000000	                          call 0x40004a6	        71	shallow.c	FUNCTION_3	WHILE_1	CALL_8
0x40004a6	    0x488b95c8fbff	            mov rdx, qword [rbp - 0x438]	        67	shallow.c	FUNCTION_3	WHILE_1	CALL_5
0x40004ad	    0x488d85f0fbff	                  lea rax, [rbp - 0x410]	        67	shallow.c	FUNCTION_3	WHILE_1	CALL_5
0x40004b4	      0xbe00040000	                          mov esi, 0x400	        67	shallow.c	FUNCTION_3	WHILE_1	CALL_5
0x40004b9	          0x4889c7	                            mov rdi, rax	        67	shallow.c	FUNCTION_3	WHILE_1	CALL_5
0x40004bc	      0xe800000000	                          call 0x40004c1	        67	shallow.c	FUNCTION_3	WHILE_1	CALL_5
0x40004c1	          0x4885c0	                           test rax, rax	        67	shallow.c	FUNCTION_3	WHILE_1	CALL_5
0x40004c4	            0x759b	                           jne 0x4000461	        67	shallow.c	FUNCTION_3	WHILE_1	CALL_5
0x40004c6	    0x488b85c8fbff	            mov rax, qword [rbp - 0x438]	        73	shallow.c	FUNCTION_3	CALL_9
0x40004cd	          0x4889c7	                            mov rdi, rax	        73	shallow.c	FUNCTION_3	CALL_9
0x40004d0	      0xe800000000	                          call 0x40004d5	        73	shallow.c	FUNCTION_3	CALL_9
0x40004d5	    0x8b0500000000	            mov eax, dword [0x040004db] 	        74	shallow.c	FUNCTION_3
0x40004db	        0x488b4df8	                mov rcx, qword [rbp - 8]	        75	shallow.c	FUNCTION_3
0x40004df	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        75	shallow.c	FUNCTION_3
0x40004e8	            0x7405	                            je 0x40004ef	        75	shallow.c	FUNCTION_3
0x40004ea	      0xe800000000	                          call 0x40004ef	        75	shallow.c	FUNCTION_3
0x40004ef	              0xc9	                                   leave	        75	shallow.c	FUNCTION_3
0x40004f0	              0xc3	                                     ret	        75	shallow.c	FUNCTION_3
rollback_lock_file	DO,0:ELSE,0:IF,0:CALL,1:SWITCH,0:functions,0:WHILE,0:FOR,0	10
0x400027d	              0x55	                                push rbp	       303	lockfile.h	FUNCTION_74
0x400027e	          0x4889e5	                            mov rbp, rsp	       303	lockfile.h	FUNCTION_74
0x4000281	        0x4883ec10	                           sub rsp, 0x10	       303	lockfile.h	FUNCTION_74
0x4000285	        0x48897df8	                mov qword [rbp - 8], rdi	       303	lockfile.h	FUNCTION_74
0x4000289	        0x488b45f8	                mov rax, qword [rbp - 8]	       304	lockfile.h	FUNCTION_74	CALL_1
0x400028d	          0x4889c7	                            mov rdi, rax	       304	lockfile.h	FUNCTION_74	CALL_1
0x4000290	      0xe800000000	                          call 0x4000295	       304	lockfile.h	FUNCTION_74	CALL_1
0x4000295	              0x90	                                     nop	       305	lockfile.h	FUNCTION_74
0x4000296	              0xc9	                                   leave	       305	lockfile.h	FUNCTION_74
0x4000297	              0xc3	                                     ret	       305	lockfile.h	FUNCTION_74
xmks_tempfile	DO,0:ELSE,0:IF,0:CALL,1:SWITCH,0:functions,0:WHILE,0:FOR,0	10
0x4000214	              0x55	                                push rbp	       188	tempfile.h	FUNCTION_81
0x4000215	          0x4889e5	                            mov rbp, rsp	       188	tempfile.h	FUNCTION_81
0x4000218	        0x4883ec10	                           sub rsp, 0x10	       188	tempfile.h	FUNCTION_81
0x400021c	        0x48897df8	                mov qword [rbp - 8], rdi	       188	tempfile.h	FUNCTION_81
0x4000220	        0x488b45f8	                mov rax, qword [rbp - 8]	       189	tempfile.h	FUNCTION_81	CALL_1
0x4000224	      0xbe80010000	                          mov esi, 0x180	       189	tempfile.h	FUNCTION_81	CALL_1
0x4000229	          0x4889c7	                            mov rdi, rax	       189	tempfile.h	FUNCTION_81	CALL_1
0x400022c	      0xe800000000	                          call 0x4000231	       189	tempfile.h	FUNCTION_81	CALL_1
0x4000231	              0xc9	                                   leave	       190	tempfile.h	FUNCTION_81
0x4000232	              0xc3	                                     ret	       190	tempfile.h	FUNCTION_81
add_ref	DO,0:ELSE,0:IF,1:CALL,1:SWITCH,0:functions,0:WHILE,0:FOR,0	99
0x400211c	              0x55	                                push rbp	       643	shallow.c	FUNCTION_23
0x400211d	          0x4889e5	                            mov rbp, rsp	       643	shallow.c	FUNCTION_23
0x4002120	              0x53	                                push rbx	       643	shallow.c	FUNCTION_23
0x4002121	        0x4883ec38	                           sub rsp, 0x38	       643	shallow.c	FUNCTION_23
0x4002125	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       643	shallow.c	FUNCTION_23
0x4002129	        0x488975d0	             mov qword [rbp - 0x30], rsi	       643	shallow.c	FUNCTION_23
0x400212d	          0x8955cc	             mov dword [rbp - 0x34], edx	       643	shallow.c	FUNCTION_23
0x4002130	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       643	shallow.c	FUNCTION_23
0x4002134	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       644	shallow.c	FUNCTION_23
0x4002138	        0x488945e8	             mov qword [rbp - 0x18], rax	       644	shallow.c	FUNCTION_23
0x400213c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       645	shallow.c	FUNCTION_23
0x4002140	          0x8b4008	                mov eax, dword [rax + 8]	       645	shallow.c	FUNCTION_23
0x4002143	          0x8d5001	                      lea edx, [rax + 1]	       645	shallow.c	FUNCTION_23
0x4002146	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       645	shallow.c	FUNCTION_23
0x400214a	          0x8b400c	              mov eax, dword [rax + 0xc]	       645	shallow.c	FUNCTION_23
0x400214d	            0x39c2	                            cmp edx, eax	       645	shallow.c	FUNCTION_23
0x400214f	     0xf8e93000000	                           jle 0x40021e8	       645	shallow.c	FUNCTION_23
0x4002155	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       645	shallow.c	FUNCTION_23
0x4002159	          0x8b400c	              mov eax, dword [rax + 0xc]	       645	shallow.c	FUNCTION_23
0x400215c	          0x8d5010	                   lea edx, [rax + 0x10]	       645	shallow.c	FUNCTION_23
0x400215f	            0x89d0	                            mov eax, edx	       645	shallow.c	FUNCTION_23
0x4002161	             0x1c0	                            add eax, eax	       645	shallow.c	FUNCTION_23
0x4002163	             0x1d0	                            add eax, edx	       645	shallow.c	FUNCTION_23
0x4002165	            0x89c2	                            mov edx, eax	       645	shallow.c	FUNCTION_23
0x4002167	          0xc1ea1f	                           shr edx, 0x1f	       645	shallow.c	FUNCTION_23
0x400216a	             0x1d0	                            add eax, edx	       645	shallow.c	FUNCTION_23
0x400216c	            0xd1f8	                              sar eax, 1	       645	shallow.c	FUNCTION_23
0x400216e	            0x89c2	                            mov edx, eax	       645	shallow.c	FUNCTION_23
0x4002170	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       645	shallow.c	FUNCTION_23
0x4002174	          0x8b4008	                mov eax, dword [rax + 8]	       645	shallow.c	FUNCTION_23
0x4002177	          0x83c001	                              add eax, 1	       645	shallow.c	FUNCTION_23
0x400217a	            0x39c2	                            cmp edx, eax	       645	shallow.c	FUNCTION_23
0x400217c	            0x7d13	                           jge 0x4002191	       645	shallow.c	FUNCTION_23
0x400217e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       645	shallow.c	FUNCTION_23
0x4002182	          0x8b4008	                mov eax, dword [rax + 8]	       645	shallow.c	FUNCTION_23
0x4002185	          0x8d5001	                      lea edx, [rax + 1]	       645	shallow.c	FUNCTION_23
0x4002188	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       645	shallow.c	FUNCTION_23
0x400218c	          0x89500c	              mov dword [rax + 0xc], edx	       645	shallow.c	FUNCTION_23
0x400218f	            0xeb22	                           jmp 0x40021b3	       645	shallow.c	FUNCTION_23
0x4002191	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       645	shallow.c	FUNCTION_23
0x4002195	          0x8b400c	              mov eax, dword [rax + 0xc]	       645	shallow.c	FUNCTION_23
0x4002198	          0x8d5010	                   lea edx, [rax + 0x10]	       645	shallow.c	FUNCTION_23
0x400219b	            0x89d0	                            mov eax, edx	       645	shallow.c	FUNCTION_23
0x400219d	             0x1c0	                            add eax, eax	       645	shallow.c	FUNCTION_23
0x400219f	             0x1d0	                            add eax, edx	       645	shallow.c	FUNCTION_23
0x40021a1	            0x89c2	                            mov edx, eax	       645	shallow.c	FUNCTION_23
0x40021a3	          0xc1ea1f	                           shr edx, 0x1f	       645	shallow.c	FUNCTION_23
0x40021a6	             0x1d0	                            add eax, edx	       645	shallow.c	FUNCTION_23
0x40021a8	            0xd1f8	                              sar eax, 1	       645	shallow.c	FUNCTION_23
0x40021aa	            0x89c2	                            mov edx, eax	       645	shallow.c	FUNCTION_23
0x40021ac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       645	shallow.c	FUNCTION_23
0x40021b0	          0x89500c	              mov dword [rax + 0xc], edx	       645	shallow.c	FUNCTION_23
0x40021b3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       645	shallow.c	FUNCTION_23
0x40021b7	          0x8b400c	              mov eax, dword [rax + 0xc]	       645	shallow.c	FUNCTION_23
0x40021ba	            0x4898	                                    cdqe	       645	shallow.c	FUNCTION_23
0x40021bc	          0x4889c6	                            mov rsi, rax	       645	shallow.c	FUNCTION_23
0x40021bf	      0xbf08000000	                              mov edi, 8	       645	shallow.c	FUNCTION_23
0x40021c4	      0xe877deffff	                        call sym.st_mult	       645	shallow.c	FUNCTION_23
0x40021c9	          0x4889c2	                            mov rdx, rax	       645	shallow.c	FUNCTION_23
0x40021cc	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       645	shallow.c	FUNCTION_23
0x40021d0	          0x488b00	                    mov rax, qword [rax]	       645	shallow.c	FUNCTION_23
0x40021d3	          0x4889d6	                            mov rsi, rdx	       645	shallow.c	FUNCTION_23
0x40021d6	          0x4889c7	                            mov rdi, rax	       645	shallow.c	FUNCTION_23
0x40021d9	      0xe800000000	                          call 0x40021de	       645	shallow.c	FUNCTION_23
0x40021de	          0x4889c2	                            mov rdx, rax	       645	shallow.c	FUNCTION_23
0x40021e1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       645	shallow.c	FUNCTION_23
0x40021e5	          0x488910	                    mov qword [rax], rdx	       645	shallow.c	FUNCTION_23
0x40021e8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       646	shallow.c	FUNCTION_23	CALL_1
0x40021ec	          0x488b10	                    mov rdx, qword [rax]	       646	shallow.c	FUNCTION_23	CALL_1
0x40021ef	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       646	shallow.c	FUNCTION_23	CALL_1
0x40021f3	          0x8b4008	                mov eax, dword [rax + 8]	       646	shallow.c	FUNCTION_23	CALL_1
0x40021f6	            0x4898	                                    cdqe	       646	shallow.c	FUNCTION_23	CALL_1
0x40021f8	        0x48c1e003	                              shl rax, 3	       646	shallow.c	FUNCTION_23	CALL_1
0x40021fc	        0x488d1c02	                    lea rbx, [rdx + rax]	       646	shallow.c	FUNCTION_23	CALL_1
0x4002200	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       646	shallow.c	FUNCTION_23	CALL_1
0x4002204	      0xbe01000000	                              mov esi, 1	       646	shallow.c	FUNCTION_23	CALL_1
0x4002209	          0x4889c7	                            mov rdi, rax	       646	shallow.c	FUNCTION_23	CALL_1
0x400220c	      0xe800000000	                          call 0x4002211	       646	shallow.c	FUNCTION_23	CALL_1
0x4002211	          0x488903	                    mov qword [rbx], rax	       646	shallow.c	FUNCTION_23	CALL_1
0x4002214	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       647	shallow.c	FUNCTION_23	IF_1
0x4002218	          0x488b10	                    mov rdx, qword [rax]	       647	shallow.c	FUNCTION_23	IF_1
0x400221b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       647	shallow.c	FUNCTION_23	IF_1
0x400221f	          0x8b4008	                mov eax, dword [rax + 8]	       647	shallow.c	FUNCTION_23	IF_1
0x4002222	            0x4898	                                    cdqe	       647	shallow.c	FUNCTION_23	IF_1
0x4002224	        0x48c1e003	                              shl rax, 3	       647	shallow.c	FUNCTION_23	IF_1
0x4002228	          0x4801d0	                            add rax, rdx	       647	shallow.c	FUNCTION_23	IF_1
0x400222b	          0x488b00	                    mov rax, qword [rax]	       647	shallow.c	FUNCTION_23	IF_1
0x400222e	          0x4885c0	                           test rax, rax	       647	shallow.c	FUNCTION_23	IF_1
0x4002231	            0x7411	                            je 0x4002244	       647	shallow.c	FUNCTION_23	IF_1
0x4002233	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       648	shallow.c	FUNCTION_23	IF_1
0x4002237	          0x8b4008	                mov eax, dword [rax + 8]	       648	shallow.c	FUNCTION_23	IF_1
0x400223a	          0x8d5001	                      lea edx, [rax + 1]	       648	shallow.c	FUNCTION_23	IF_1
0x400223d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       648	shallow.c	FUNCTION_23	IF_1
0x4002241	          0x895008	                mov dword [rax + 8], edx	       648	shallow.c	FUNCTION_23	IF_1
0x4002244	      0xb800000000	                              mov eax, 0	       649	shallow.c	FUNCTION_23
0x4002249	        0x4883c438	                           add rsp, 0x38	       650	shallow.c	FUNCTION_23
0x400224d	              0x5b	                                 pop rbx	       650	shallow.c	FUNCTION_23
0x400224e	              0x5d	                                 pop rbp	       650	shallow.c	FUNCTION_23
0x400224f	              0xc3	                                     ret	       650	shallow.c	FUNCTION_23
xstrdup_or_null	DO,0:ELSE,0:IF,0:CALL,1:SWITCH,0:functions,0:WHILE,0:FOR,0	13
0x4000092	              0x55	                                push rbp	       923	git-compat-util.h	FUNCTION_101
0x4000093	          0x4889e5	                            mov rbp, rsp	       923	git-compat-util.h	FUNCTION_101
0x4000096	        0x4883ec10	                           sub rsp, 0x10	       923	git-compat-util.h	FUNCTION_101
0x400009a	        0x48897df8	                mov qword [rbp - 8], rdi	       923	git-compat-util.h	FUNCTION_101
0x400009e	      0x48837df800	                  cmp qword [rbp - 8], 0	       924	git-compat-util.h	FUNCTION_101	CALL_1
0x40000a3	            0x740e	                            je 0x40000b3	       924	git-compat-util.h	FUNCTION_101	CALL_1
0x40000a5	        0x488b45f8	                mov rax, qword [rbp - 8]	       924	git-compat-util.h	FUNCTION_101	CALL_1
0x40000a9	          0x4889c7	                            mov rdi, rax	       924	git-compat-util.h	FUNCTION_101	CALL_1
0x40000ac	      0xe800000000	                          call 0x40000b1	       924	git-compat-util.h	FUNCTION_101	CALL_1
0x40000b1	            0xeb05	                           jmp 0x40000b8	       924	git-compat-util.h	FUNCTION_101	CALL_1
0x40000b3	      0xb800000000	                              mov eax, 0	       924	git-compat-util.h	FUNCTION_101	CALL_1
0x40000b8	              0xc9	                                   leave	       925	git-compat-util.h	FUNCTION_101
0x40000b9	              0xc3	                                     ret	       925	git-compat-util.h	FUNCTION_101
get_lock_file_path	DO,0:ELSE,0:IF,0:CALL,1:SWITCH,0:functions,0:WHILE,0:FOR,0	10
0x4000260	              0x55	                                push rbp	       219	lockfile.h	FUNCTION_68
0x4000261	          0x4889e5	                            mov rbp, rsp	       219	lockfile.h	FUNCTION_68
0x4000264	        0x4883ec10	                           sub rsp, 0x10	       219	lockfile.h	FUNCTION_68
0x4000268	        0x48897df8	                mov qword [rbp - 8], rdi	       219	lockfile.h	FUNCTION_68
0x400026c	        0x488b45f8	                mov rax, qword [rbp - 8]	       220	lockfile.h	FUNCTION_68	CALL_1
0x4000270	          0x488b00	                    mov rax, qword [rax]	       220	lockfile.h	FUNCTION_68	CALL_1
0x4000273	          0x4889c7	                            mov rdi, rax	       220	lockfile.h	FUNCTION_68	CALL_1
0x4000276	      0xe800000000	                          call 0x400027b	       220	lockfile.h	FUNCTION_68	CALL_1
0x400027b	              0xc9	                                   leave	       221	lockfile.h	FUNCTION_68
0x400027c	              0xc3	                                     ret	       221	lockfile.h	FUNCTION_68
advertise_shallow_grafts_cb	DO,0:ELSE,0:IF,1:CALL,2:SWITCH,0:functions,0:WHILE,0:FOR,0	24
0x4000fda	              0x55	                                push rbp	       336	shallow.c	FUNCTION_13
0x4000fdb	          0x4889e5	                            mov rbp, rsp	       336	shallow.c	FUNCTION_13
0x4000fde	        0x4883ec20	                           sub rsp, 0x20	       336	shallow.c	FUNCTION_13
0x4000fe2	        0x48897de8	             mov qword [rbp - 0x18], rdi	       336	shallow.c	FUNCTION_13
0x4000fe6	        0x488975e0	             mov qword [rbp - 0x20], rsi	       336	shallow.c	FUNCTION_13
0x4000fea	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       337	shallow.c	FUNCTION_13
0x4000fee	            0x8b00	                    mov eax, dword [rax]	       337	shallow.c	FUNCTION_13
0x4000ff0	          0x8945fc	                mov dword [rbp - 4], eax	       337	shallow.c	FUNCTION_13
0x4000ff3	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       338	shallow.c	FUNCTION_13	IF_1
0x4000ff7	          0x8b4014	            mov eax, dword [rax + 0x14] 	       338	shallow.c	FUNCTION_13	IF_1
0x4000ffa	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       338	shallow.c	FUNCTION_13	IF_1
0x4000ffd	            0x7523	                           jne 0x4001022	       338	shallow.c	FUNCTION_13	IF_1
0x4000fff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       339	shallow.c	FUNCTION_13	CALL_2
0x4001003	          0x4889c7	                            mov rdi, rax	       339	shallow.c	FUNCTION_13	CALL_2
0x4001006	      0xe800000000	                          call 0x400100b	       339	shallow.c	FUNCTION_13	CALL_2
0x400100b	          0x4889c2	                            mov rdx, rax	       339	shallow.c	FUNCTION_13	CALL_2
0x400100e	          0x8b45fc	                mov eax, dword [rbp - 4]	       339	shallow.c	FUNCTION_13	CALL_2
0x4001011	      0xbe00000000	                              mov esi, 0	       339	shallow.c	FUNCTION_13	CALL_2
0x4001016	            0x89c7	                            mov edi, eax	       339	shallow.c	FUNCTION_13	CALL_2
0x4001018	      0xb800000000	                              mov eax, 0	       339	shallow.c	FUNCTION_13	CALL_2
0x400101d	      0xe800000000	                          call 0x4001022	       339	shallow.c	FUNCTION_13	CALL_2
0x4001022	      0xb800000000	                              mov eax, 0	       340	shallow.c	FUNCTION_13
0x4001027	              0xc9	                                   leave	       341	shallow.c	FUNCTION_13
0x4001028	              0xc3	                                     ret	       341	shallow.c	FUNCTION_13
setup_alternate_shallow	DO,0:ELSE,1:IF,2:CALL,9:SWITCH,0:functions,0:WHILE,0:FOR,0	62
0x4000ee4	              0x55	                                push rbp	       314	shallow.c	FUNCTION_12
0x4000ee5	          0x4889e5	                            mov rbp, rsp	       314	shallow.c	FUNCTION_12
0x4000ee8	        0x4883ec50	                           sub rsp, 0x50	       314	shallow.c	FUNCTION_12
0x4000eec	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       314	shallow.c	FUNCTION_12
0x4000ef0	        0x488975c0	             mov qword [rbp - 0x40], rsi	       314	shallow.c	FUNCTION_12
0x4000ef4	        0x488955b8	             mov qword [rbp - 0x48], rdx	       314	shallow.c	FUNCTION_12
0x4000ef8	    0x64488b042528	                mov rax, qword fs:[0x28]	       314	shallow.c	FUNCTION_12
0x4000f01	        0x488945f8	                mov qword [rbp - 8], rax	       314	shallow.c	FUNCTION_12
0x4000f05	            0x31c0	                            xor eax, eax	       314	shallow.c	FUNCTION_12
0x4000f07	    0x48c745e00000	               mov qword [rbp - 0x20], 0	       315	shallow.c	FUNCTION_12
0x4000f0f	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       315	shallow.c	FUNCTION_12
0x4000f17	    0x48c745f00000	               mov qword [rbp - 0x10], 0	       315	shallow.c	FUNCTION_12
0x4000f1f	      0xe800000000	                          call 0x4000f24	       318	shallow.c	FUNCTION_12	CALL_2
0x4000f24	          0x4889c1	                            mov rcx, rax	       318	shallow.c	FUNCTION_12	CALL_2
0x4000f27	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       318	shallow.c	FUNCTION_12	CALL_2
0x4000f2b	      0xba01000000	                              mov edx, 1	       318	shallow.c	FUNCTION_12	CALL_2
0x4000f30	          0x4889ce	                            mov rsi, rcx	       318	shallow.c	FUNCTION_12	CALL_2
0x4000f33	          0x4889c7	                            mov rdi, rax	       318	shallow.c	FUNCTION_12	CALL_2
0x4000f36	      0xe8f8f2ffff	      call sym.hold_lock_file_for_update	       318	shallow.c	FUNCTION_12	CALL_2
0x4000f3b	          0x8945dc	             mov dword [rbp - 0x24], eax	       318	shallow.c	FUNCTION_12	CALL_2
0x4000f3e	      0xe846fcffff	  call sym.check_shallow_file_for_update	       320	shallow.c	FUNCTION_12	CALL_3
0x4000f43	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	       321	shallow.c	FUNCTION_12	IF_1	CALL_4
0x4000f47	        0x488d45e0	                   lea rax, [rbp - 0x20]	       321	shallow.c	FUNCTION_12	IF_1	CALL_4
0x4000f4b	      0xbe00000000	                              mov esi, 0	       321	shallow.c	FUNCTION_12	IF_1	CALL_4
0x4000f50	          0x4889c7	                            mov rdi, rax	       321	shallow.c	FUNCTION_12	IF_1	CALL_4
0x4000f53	      0xe800000000	                          call 0x4000f58	       321	shallow.c	FUNCTION_12	IF_1	CALL_4
0x4000f58	            0x85c0	                           test eax, eax	       321	shallow.c	FUNCTION_12	IF_1	CALL_4
0x4000f5a	            0x7450	                            je 0x4000fac	       321	shallow.c	FUNCTION_12	IF_1	CALL_4
0x4000f5c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       322	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_5
0x4000f60	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       322	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_5
0x4000f64	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       322	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_5
0x4000f67	          0x4889ce	                            mov rsi, rcx	       322	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_5
0x4000f6a	            0x89c7	                            mov edi, eax	       322	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_5
0x4000f6c	      0xe800000000	                          call 0x4000f71	       322	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_5
0x4000f71	          0x4885c0	                           test rax, rax	       322	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_5
0x4000f74	            0x791e	                           jns 0x4000f94	       322	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_5
0x4000f76	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       323	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_6
0x4000f7a	          0x4889c7	                            mov rdi, rax	       323	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_6
0x4000f7d	      0xe8def2ffff	             call sym.get_lock_file_path	       323	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_6
0x4000f82	          0x4889c6	                            mov rsi, rax	       323	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_6
0x4000f85	      0xbf00000000	                              mov edi, 0	       323	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_6
0x4000f8a	      0xb800000000	                              mov eax, 0	       323	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_6
0x4000f8f	      0xe800000000	                          call 0x4000f94	       323	shallow.c	FUNCTION_12	IF_1	IF_2	CALL_6
0x4000f94	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       325	shallow.c	FUNCTION_12	IF_1	CALL_8
0x4000f98	          0x4889c7	                            mov rdi, rax	       325	shallow.c	FUNCTION_12	IF_1	CALL_8
0x4000f9b	      0xe8c0f2ffff	             call sym.get_lock_file_path	       325	shallow.c	FUNCTION_12	IF_1	CALL_8
0x4000fa0	          0x4889c2	                            mov rdx, rax	       325	shallow.c	FUNCTION_12	IF_1	CALL_8
0x4000fa3	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       325	shallow.c	FUNCTION_12	IF_1	CALL_8
0x4000fa7	          0x488910	                    mov qword [rax], rdx	       325	shallow.c	FUNCTION_12	IF_1	CALL_8
0x4000faa	            0xeb0b	                           jmp 0x4000fb7	       325	shallow.c	FUNCTION_12	IF_1	CALL_8
0x4000fac	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       331	shallow.c	FUNCTION_12	ELSE_1
0x4000fb0	    0x48c700000000	                      mov qword [rax], 0	       331	shallow.c	FUNCTION_12	ELSE_1
0x4000fb7	        0x488d45e0	                   lea rax, [rbp - 0x20]	       332	shallow.c	FUNCTION_12	CALL_9
0x4000fbb	          0x4889c7	                            mov rdi, rax	       332	shallow.c	FUNCTION_12	CALL_9
0x4000fbe	      0xe800000000	                          call 0x4000fc3	       332	shallow.c	FUNCTION_12	CALL_9
0x4000fc3	              0x90	                                     nop	       333	shallow.c	FUNCTION_12
0x4000fc4	        0x488b45f8	                mov rax, qword [rbp - 8]	       333	shallow.c	FUNCTION_12
0x4000fc8	    0x644833042528	                xor rax, qword fs:[0x28]	       333	shallow.c	FUNCTION_12
0x4000fd1	            0x7405	                            je 0x4000fd8	       333	shallow.c	FUNCTION_12
0x4000fd3	      0xe800000000	                          call 0x4000fd8	       333	shallow.c	FUNCTION_12
0x4000fd8	              0xc9	                                   leave	       333	shallow.c	FUNCTION_12
0x4000fd9	              0xc3	                                     ret	       333	shallow.c	FUNCTION_12
parse_commit	DO,0:ELSE,0:IF,0:CALL,1:SWITCH,0:functions,0:WHILE,0:FOR,0	10
0x4000298	              0x55	                                push rbp	        74	commit.h	FUNCTION_110
0x4000299	          0x4889e5	                            mov rbp, rsp	        74	commit.h	FUNCTION_110
0x400029c	        0x4883ec10	                           sub rsp, 0x10	        74	commit.h	FUNCTION_110
0x40002a0	        0x48897df8	                mov qword [rbp - 8], rdi	        74	commit.h	FUNCTION_110
0x40002a4	        0x488b45f8	                mov rax, qword [rbp - 8]	        75	commit.h	FUNCTION_110	CALL_1
0x40002a8	      0xbe00000000	                              mov esi, 0	        75	commit.h	FUNCTION_110	CALL_1
0x40002ad	          0x4889c7	                            mov rdi, rax	        75	commit.h	FUNCTION_110	CALL_1
0x40002b0	      0xe800000000	                          call 0x40002b5	        75	commit.h	FUNCTION_110	CALL_1
0x40002b5	              0xc9	                                   leave	        76	commit.h	FUNCTION_110
0x40002b6	              0xc3	                                     ret	        76	commit.h	FUNCTION_110
write_shallow_commits_1	DO,0:ELSE,0:IF,1:CALL,4:SWITCH,0:functions,0:WHILE,0:FOR,1	62
0x4000cea	              0x55	                                push rbp	       265	shallow.c	FUNCTION_9
0x4000ceb	          0x4889e5	                            mov rbp, rsp	       265	shallow.c	FUNCTION_9
0x4000cee	        0x4883ec50	                           sub rsp, 0x50	       265	shallow.c	FUNCTION_9
0x4000cf2	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       265	shallow.c	FUNCTION_9
0x4000cf6	          0x8975c4	             mov dword [rbp - 0x3c], esi	       265	shallow.c	FUNCTION_9
0x4000cf9	        0x488955b8	             mov qword [rbp - 0x48], rdx	       265	shallow.c	FUNCTION_9
0x4000cfd	          0x894dc0	             mov dword [rbp - 0x40], ecx	       265	shallow.c	FUNCTION_9
0x4000d00	    0x64488b042528	                mov rax, qword fs:[0x28]	       265	shallow.c	FUNCTION_9
0x4000d09	        0x488945f8	                mov qword [rbp - 8], rax	       265	shallow.c	FUNCTION_9
0x4000d0d	            0x31c0	                            xor eax, eax	       265	shallow.c	FUNCTION_9
0x4000d0f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       268	shallow.c	FUNCTION_9
0x4000d13	        0x488945e0	             mov qword [rbp - 0x20], rax	       268	shallow.c	FUNCTION_9
0x4000d17	          0x8b45c4	             mov eax, dword [rbp - 0x3c]	       269	shallow.c	FUNCTION_9
0x4000d1a	          0x8945e8	             mov dword [rbp - 0x18], eax	       269	shallow.c	FUNCTION_9
0x4000d1d	    0xc745ec000000	               mov dword [rbp - 0x14], 0	       270	shallow.c	FUNCTION_9
0x4000d24	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       271	shallow.c	FUNCTION_9
0x4000d27	          0x8945f0	             mov dword [rbp - 0x10], eax	       271	shallow.c	FUNCTION_9
0x4000d2a	        0x488d45e0	                   lea rax, [rbp - 0x20]	       272	shallow.c	FUNCTION_9	CALL_1
0x4000d2e	          0x4889c6	                            mov rsi, rax	       272	shallow.c	FUNCTION_9	CALL_1
0x4000d31	      0xbf00000000	                              mov edi, 0	       272	shallow.c	FUNCTION_9	CALL_1
0x4000d36	      0xe800000000	                          call 0x4000d3b	       272	shallow.c	FUNCTION_9	CALL_1
0x4000d3b	      0x48837db800	               cmp qword [rbp - 0x48], 0	       273	shallow.c	FUNCTION_9	IF_1
0x4000d40	            0x7505	                           jne 0x4000d47	       273	shallow.c	FUNCTION_9	IF_1
0x4000d42	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       274	shallow.c	FUNCTION_9	IF_1
0x4000d45	            0xeb6e	                           jmp 0x4000db5	       274	shallow.c	FUNCTION_9	IF_1
0x4000d47	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       275	shallow.c	FUNCTION_9	FOR_1
0x4000d4e	            0xeb56	                           jmp 0x4000da6	       275	shallow.c	FUNCTION_9	FOR_1
0x4000d50	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0x4000d54	          0x488b08	                    mov rcx, qword [rax]	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0x4000d57	          0x8b45dc	             mov eax, dword [rbp - 0x24]	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0x4000d5a	          0x4863d0	                         movsxd rdx, eax	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0x4000d5d	          0x4889d0	                            mov rax, rdx	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0x4000d60	        0x48c1e002	                              shl rax, 2	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0x4000d64	          0x4801d0	                            add rax, rdx	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0x4000d67	        0x48c1e002	                              shl rax, 2	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0x4000d6b	          0x4801c8	                            add rax, rcx	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0x4000d6e	          0x4889c7	                            mov rdi, rax	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0x4000d71	      0xe800000000	                          call 0x4000d76	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0x4000d76	          0x4889c2	                            mov rdx, rax	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0x4000d79	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0x4000d7d	          0x4889d6	                            mov rsi, rdx	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0x4000d80	          0x4889c7	                            mov rdi, rax	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0x4000d83	      0xe8d6f3ffff	                  call sym.strbuf_addstr	       276	shallow.c	FUNCTION_9	FOR_1	CALL_3
0x4000d88	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       277	shallow.c	FUNCTION_9	FOR_1	CALL_4
0x4000d8c	      0xbe0a000000	                            mov esi, 0xa	       277	shallow.c	FUNCTION_9	FOR_1	CALL_4
0x4000d91	          0x4889c7	                            mov rdi, rax	       277	shallow.c	FUNCTION_9	FOR_1	CALL_4
0x4000d94	      0xe857f3ffff	                   call sym.strbuf_addch	       277	shallow.c	FUNCTION_9	FOR_1	CALL_4
0x4000d99	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       278	shallow.c	FUNCTION_9	FOR_1
0x4000d9c	          0x83c001	                              add eax, 1	       278	shallow.c	FUNCTION_9	FOR_1
0x4000d9f	          0x8945ec	             mov dword [rbp - 0x14], eax	       278	shallow.c	FUNCTION_9	FOR_1
0x4000da2	        0x8345dc01	               add dword [rbp - 0x24], 1	       275	shallow.c	FUNCTION_9	FOR_1
0x4000da6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       275	shallow.c	FUNCTION_9	FOR_1
0x4000daa	          0x8b4008	                mov eax, dword [rax + 8]	       275	shallow.c	FUNCTION_9	FOR_1
0x4000dad	          0x3b45dc	             cmp eax, dword [rbp - 0x24]	       275	shallow.c	FUNCTION_9	FOR_1
0x4000db0	            0x7f9e	                            jg 0x4000d50	       275	shallow.c	FUNCTION_9	FOR_1
0x4000db2	          0x8b45ec	             mov eax, dword [rbp - 0x14]	       280	shallow.c	FUNCTION_9
0x4000db5	        0x488b4df8	                mov rcx, qword [rbp - 8]	       281	shallow.c	FUNCTION_9
0x4000db9	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       281	shallow.c	FUNCTION_9
0x4000dc2	            0x7405	                            je 0x4000dc9	       281	shallow.c	FUNCTION_9
0x4000dc4	      0xe800000000	                          call 0x4000dc9	       281	shallow.c	FUNCTION_9
0x4000dc9	              0xc9	                                   leave	       281	shallow.c	FUNCTION_9
0x4000dca	              0xc3	                                     ret	       281	shallow.c	FUNCTION_9
oidcpy	DO,0:ELSE,0:IF,0:CALL,1:SWITCH,0:functions,0:WHILE,0:FOR,0	13
0x40001ee	              0x55	                                push rbp	       999	cache.h	FUNCTION_39
0x40001ef	          0x4889e5	                            mov rbp, rsp	       999	cache.h	FUNCTION_39
0x40001f2	        0x4883ec10	                           sub rsp, 0x10	       999	cache.h	FUNCTION_39
0x40001f6	        0x48897df8	                mov qword [rbp - 8], rdi	       999	cache.h	FUNCTION_39
0x40001fa	        0x488975f0	             mov qword [rbp - 0x10], rsi	       999	cache.h	FUNCTION_39
0x40001fe	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1000	cache.h	FUNCTION_39	CALL_1
0x4000202	        0x488b45f8	                mov rax, qword [rbp - 8]	      1000	cache.h	FUNCTION_39	CALL_1
0x4000206	          0x4889d6	                            mov rsi, rdx	      1000	cache.h	FUNCTION_39	CALL_1
0x4000209	          0x4889c7	                            mov rdi, rax	      1000	cache.h	FUNCTION_39	CALL_1
0x400020c	      0xe8b2ffffff	                        call sym.hashcpy	      1000	cache.h	FUNCTION_39	CALL_1
0x4000211	              0x90	                                     nop	      1001	cache.h	FUNCTION_39
0x4000212	              0xc9	                                   leave	      1001	cache.h	FUNCTION_39
0x4000213	              0xc3	                                     ret	      1001	cache.h	FUNCTION_39
get_shallow_commits_by_rev_list	DO,0:ELSE,0:IF,4:CALL,12:SWITCH,0:functions,0:WHILE,0:FOR,4	177
0x4000836	              0x55	                                push rbp	       156	shallow.c	FUNCTION_6
0x4000837	          0x4889e5	                            mov rbp, rsp	       156	shallow.c	FUNCTION_6
0x400083a	    0x4881ec200900	                          sub rsp, 0x920	       156	shallow.c	FUNCTION_6
0x4000841	    0x89bdfcf6ffff	            mov dword [rbp - 0x904], edi	       156	shallow.c	FUNCTION_6
0x4000847	    0x4889b5f0f6ff	            mov qword [rbp - 0x910], rsi	       156	shallow.c	FUNCTION_6
0x400084e	    0x8995f8f6ffff	            mov dword [rbp - 0x908], edx	       156	shallow.c	FUNCTION_6
0x4000854	    0x898decf6ffff	            mov dword [rbp - 0x914], ecx	       156	shallow.c	FUNCTION_6
0x400085a	    0x64488b042528	                mov rax, qword fs:[0x28]	       156	shallow.c	FUNCTION_6
0x4000863	        0x488945f8	                mov qword [rbp - 8], rax	       156	shallow.c	FUNCTION_6
0x4000867	            0x31c0	                            xor eax, eax	       156	shallow.c	FUNCTION_6
0x4000869	    0x48c78510f7ff	              mov qword [rbp - 0x8f0], 0	       157	shallow.c	FUNCTION_6
0x4000874	    0x48c78518f7ff	              mov qword [rbp - 0x8e8], 0	       158	shallow.c	FUNCTION_6
0x400087f	    0x8b85f8f6ffff	            mov eax, dword [rbp - 0x908]	       160	shallow.c	FUNCTION_6
0x4000885	     0xb85ecf6ffff	             or eax, dword [rbp - 0x914]	       160	shallow.c	FUNCTION_6
0x400088b	    0x89850cf7ffff	            mov dword [rbp - 0x8f4], eax	       160	shallow.c	FUNCTION_6
0x4000891	    0x8b850cf7ffff	            mov eax, dword [rbp - 0x8f4]	       166	shallow.c	FUNCTION_6	CALL_1
0x4000897	            0x89c7	                            mov edi, eax	       166	shallow.c	FUNCTION_6	CALL_1
0x4000899	      0xe800000000	                          call 0x400089e	       166	shallow.c	FUNCTION_6	CALL_1
0x400089e	      0xe800000000	                          call 0x40008a3	       168	shallow.c	FUNCTION_6	CALL_2
0x40008a3	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       170	shallow.c	FUNCTION_6	CALL_3
0x40008aa	      0xbe00000000	                              mov esi, 0	       170	shallow.c	FUNCTION_6	CALL_3
0x40008af	          0x4889c7	                            mov rdi, rax	       170	shallow.c	FUNCTION_6	CALL_3
0x40008b2	      0xe800000000	                          call 0x40008b7	       170	shallow.c	FUNCTION_6	CALL_3
0x40008b7	    0xc70500000000	               mov dword [0x040008c1], 0	       171	shallow.c	FUNCTION_6
0x40008c1	    0x488d9540f7ff	                  lea rdx, [rbp - 0x8c0]	       172	shallow.c	FUNCTION_6	CALL_4
0x40008c8	    0x488bb5f0f6ff	            mov rsi, qword [rbp - 0x910]	       172	shallow.c	FUNCTION_6	CALL_4
0x40008cf	    0x8b85fcf6ffff	            mov eax, dword [rbp - 0x904]	       172	shallow.c	FUNCTION_6	CALL_4
0x40008d5	      0xb900000000	                              mov ecx, 0	       172	shallow.c	FUNCTION_6	CALL_4
0x40008da	            0x89c7	                            mov edi, eax	       172	shallow.c	FUNCTION_6	CALL_4
0x40008dc	      0xe800000000	                          call 0x40008e1	       172	shallow.c	FUNCTION_6	CALL_4
0x40008e1	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       174	shallow.c	FUNCTION_6	IF_1	CALL_5
0x40008e8	          0x4889c7	                            mov rdi, rax	       174	shallow.c	FUNCTION_6	IF_1	CALL_5
0x40008eb	      0xe800000000	                          call 0x40008f0	       174	shallow.c	FUNCTION_6	IF_1	CALL_5
0x40008f0	            0x85c0	                           test eax, eax	       174	shallow.c	FUNCTION_6	IF_1	CALL_5
0x40008f2	            0x740f	                            je 0x4000903	       174	shallow.c	FUNCTION_6	IF_1	CALL_5
0x40008f4	      0xbf00000000	                              mov edi, 0	       175	shallow.c	FUNCTION_6	CALL_6
0x40008f9	      0xb800000000	                              mov eax, 0	       175	shallow.c	FUNCTION_6	CALL_6
0x40008fe	      0xe800000000	                          call 0x4000903	       175	shallow.c	FUNCTION_6	CALL_6
0x4000903	    0x488d9518f7ff	                  lea rdx, [rbp - 0x8e8]	       176	shallow.c	FUNCTION_6	CALL_7
0x400090a	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       176	shallow.c	FUNCTION_6	CALL_7
0x4000911	          0x4889d1	                            mov rcx, rdx	       176	shallow.c	FUNCTION_6	CALL_7
0x4000914	      0xba00000000	                              mov edx, 0	       176	shallow.c	FUNCTION_6	CALL_7
0x4000919	      0xbe00000000	                              mov esi, 0	       176	shallow.c	FUNCTION_6	CALL_7
0x400091e	          0x4889c7	                            mov rdi, rax	       176	shallow.c	FUNCTION_6	CALL_7
0x4000921	      0xe800000000	                          call 0x4000926	       176	shallow.c	FUNCTION_6	CALL_7
0x4000926	    0x488b8518f7ff	            mov rax, qword [rbp - 0x8e8]	       179	shallow.c	FUNCTION_6	FOR_1
0x400092d	    0x48898520f7ff	            mov qword [rbp - 0x8e0], rax	       179	shallow.c	FUNCTION_6	FOR_1
0x4000934	            0xeb50	                           jmp 0x4000986	       179	shallow.c	FUNCTION_6	FOR_1
0x4000936	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	       180	shallow.c	FUNCTION_6	FOR_1
0x400093d	          0x488b10	                    mov rdx, qword [rax]	       180	shallow.c	FUNCTION_6	FOR_1
0x4000940	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	       180	shallow.c	FUNCTION_6	FOR_1
0x4000947	          0x488b00	                    mov rax, qword [rax]	       180	shallow.c	FUNCTION_6	FOR_1
0x400094a	            0x8b00	                    mov eax, dword [rax]	       180	shallow.c	FUNCTION_6	FOR_1
0x400094c	          0xc1e804	                              shr eax, 4	       180	shallow.c	FUNCTION_6	FOR_1
0x400094f	      0x25ffffff07	                      and eax, 0x7ffffff	       180	shallow.c	FUNCTION_6	FOR_1
0x4000954	     0xb85ecf6ffff	             or eax, dword [rbp - 0x914]	       180	shallow.c	FUNCTION_6	FOR_1
0x400095a	      0x25ffffff07	                      and eax, 0x7ffffff	       180	shallow.c	FUNCTION_6	FOR_1
0x400095f	      0x25ffffff07	                      and eax, 0x7ffffff	       180	shallow.c	FUNCTION_6	FOR_1
0x4000964	          0xc1e004	                              shl eax, 4	       180	shallow.c	FUNCTION_6	FOR_1
0x4000967	            0x89c1	                            mov ecx, eax	       180	shallow.c	FUNCTION_6	FOR_1
0x4000969	            0x8b02	                    mov eax, dword [rdx]	       180	shallow.c	FUNCTION_6	FOR_1
0x400096b	      0x250f000080	                     and eax, 0x8000000f	       180	shallow.c	FUNCTION_6	FOR_1
0x4000970	             0x9c8	                             or eax, ecx	       180	shallow.c	FUNCTION_6	FOR_1
0x4000972	            0x8902	                    mov dword [rdx], eax	       180	shallow.c	FUNCTION_6	FOR_1
0x4000974	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	       179	shallow.c	FUNCTION_6	FOR_1
0x400097b	        0x488b4008	                mov rax, qword [rax + 8]	       179	shallow.c	FUNCTION_6	FOR_1
0x400097f	    0x48898520f7ff	            mov qword [rbp - 0x8e0], rax	       179	shallow.c	FUNCTION_6	FOR_1
0x4000986	    0x4883bd20f7ff	              cmp qword [rbp - 0x8e0], 0	       179	shallow.c	FUNCTION_6	FOR_1
0x400098e	            0x75a6	                           jne 0x4000936	       179	shallow.c	FUNCTION_6	FOR_1
0x4000990	    0x488b8518f7ff	            mov rax, qword [rbp - 0x8e8]	       189	shallow.c	FUNCTION_6	FOR_2
0x4000997	    0x48898520f7ff	            mov qword [rbp - 0x8e0], rax	       189	shallow.c	FUNCTION_6	FOR_2
0x400099e	      0xe907010000	                           jmp 0x4000aaa	       189	shallow.c	FUNCTION_6	FOR_2
0x40009a3	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	       190	shallow.c	FUNCTION_6	FOR_2
0x40009aa	          0x488b00	                    mov rax, qword [rax]	       190	shallow.c	FUNCTION_6	FOR_2
0x40009ad	    0x48898530f7ff	            mov qword [rbp - 0x8d0], rax	       190	shallow.c	FUNCTION_6	FOR_2
0x40009b4	    0x488b8530f7ff	            mov rax, qword [rbp - 0x8d0]	       193	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_8
0x40009bb	          0x4889c7	                            mov rdi, rax	       193	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_8
0x40009be	      0xe8d5f8ffff	                   call sym.parse_commit	       193	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_8
0x40009c3	            0x85c0	                           test eax, eax	       193	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_8
0x40009c5	            0x7425	                            je 0x40009ec	       193	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_8
0x40009c7	    0x488b8530f7ff	            mov rax, qword [rbp - 0x8d0]	       195	shallow.c	FUNCTION_6	FOR_2	CALL_10
0x40009ce	        0x4883c004	                              add rax, 4	       195	shallow.c	FUNCTION_6	FOR_2	CALL_10
0x40009d2	          0x4889c7	                            mov rdi, rax	       194	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_9
0x40009d5	      0xe800000000	                          call 0x40009da	       194	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_9
0x40009da	          0x4889c6	                            mov rsi, rax	       194	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_9
0x40009dd	      0xbf00000000	                              mov edi, 0	       194	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_9
0x40009e2	      0xb800000000	                              mov eax, 0	       194	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_9
0x40009e7	      0xe800000000	                          call 0x40009ec	       194	shallow.c	FUNCTION_6	FOR_2	IF_2	CALL_9
0x40009ec	    0x488b8530f7ff	            mov rax, qword [rbp - 0x8d0]	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0x40009f3	        0x488b4030	            mov rax, qword [rax + 0x30] 	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0x40009f7	    0x48898528f7ff	            mov qword [rbp - 0x8d8], rax	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0x40009fe	      0xe987000000	                           jmp 0x4000a8a	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0x4000a03	    0x488b8528f7ff	            mov rax, qword [rbp - 0x8d8]	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000a0a	          0x488b00	                    mov rax, qword [rax]	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000a0d	            0x8b00	                    mov eax, dword [rax]	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000a0f	          0xc1e804	                              shr eax, 4	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000a12	      0x25ffffff07	                      and eax, 0x7ffffff	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000a17	    0x2385ecf6ffff	            and eax, dword [rbp - 0x914]	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000a1d	            0x85c0	                           test eax, eax	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000a1f	            0x7557	                           jne 0x4000a78	       198	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000a21	    0x488b8530f7ff	            mov rax, qword [rbp - 0x8d0]	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000a28	            0x8b00	                    mov eax, dword [rax]	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000a2a	          0xc1e804	                              shr eax, 4	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000a2d	      0x25ffffff07	                      and eax, 0x7ffffff	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000a32	     0xb85f8f6ffff	             or eax, dword [rbp - 0x908]	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000a38	      0x25ffffff07	                      and eax, 0x7ffffff	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000a3d	            0x89c2	                            mov edx, eax	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000a3f	    0x488b8530f7ff	            mov rax, qword [rbp - 0x8d0]	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000a46	    0x81e2ffffff07	                      and edx, 0x7ffffff	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000a4c	            0x89d1	                            mov ecx, edx	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000a4e	          0xc1e104	                              shl ecx, 4	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000a51	            0x8b10	                    mov edx, dword [rax]	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000a53	    0x81e20f000080	                     and edx, 0x8000000f	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000a59	             0x9ca	                             or edx, ecx	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000a5b	            0x8910	                    mov dword [rax], edx	       199	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000a5d	    0x488d9510f7ff	                  lea rdx, [rbp - 0x8f0]	       200	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3	CALL_11
0x4000a64	    0x488b8530f7ff	            mov rax, qword [rbp - 0x8d0]	       200	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3	CALL_11
0x4000a6b	          0x4889d6	                            mov rsi, rdx	       200	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3	CALL_11
0x4000a6e	          0x4889c7	                            mov rdi, rax	       200	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3	CALL_11
0x4000a71	      0xe800000000	                          call 0x4000a76	       200	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3	CALL_11
0x4000a76	            0xeb20	                           jmp 0x4000a98	       201	shallow.c	FUNCTION_6	FOR_2	FOR_3	IF_3
0x4000a78	    0x488b8528f7ff	            mov rax, qword [rbp - 0x8d8]	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0x4000a7f	        0x488b4008	                mov rax, qword [rax + 8]	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0x4000a83	    0x48898528f7ff	            mov qword [rbp - 0x8d8], rax	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0x4000a8a	    0x4883bd28f7ff	              cmp qword [rbp - 0x8d8], 0	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0x4000a92	     0xf856bffffff	                           jne 0x4000a03	       197	shallow.c	FUNCTION_6	FOR_2	FOR_3
0x4000a98	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	       189	shallow.c	FUNCTION_6	FOR_2
0x4000a9f	        0x488b4008	                mov rax, qword [rax + 8]	       189	shallow.c	FUNCTION_6	FOR_2
0x4000aa3	    0x48898520f7ff	            mov qword [rbp - 0x8e0], rax	       189	shallow.c	FUNCTION_6	FOR_2
0x4000aaa	    0x4883bd20f7ff	              cmp qword [rbp - 0x8e0], 0	       189	shallow.c	FUNCTION_6	FOR_2
0x4000ab2	     0xf85ebfeffff	                           jne 0x40009a3	       189	shallow.c	FUNCTION_6	FOR_2
0x4000ab8	    0x488b8518f7ff	            mov rax, qword [rbp - 0x8e8]	       204	shallow.c	FUNCTION_6	CALL_12
0x4000abf	          0x4889c7	                            mov rdi, rax	       204	shallow.c	FUNCTION_6	CALL_12
0x4000ac2	      0xe800000000	                          call 0x4000ac7	       204	shallow.c	FUNCTION_6	CALL_12
0x4000ac7	    0x488b8510f7ff	            mov rax, qword [rbp - 0x8f0]	       210	shallow.c	FUNCTION_6	FOR_4
0x4000ace	    0x48898520f7ff	            mov qword [rbp - 0x8e0], rax	       210	shallow.c	FUNCTION_6	FOR_4
0x4000ad5	      0xe984000000	                           jmp 0x4000b5e	       210	shallow.c	FUNCTION_6	FOR_4
0x4000ada	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	       211	shallow.c	FUNCTION_6	FOR_4
0x4000ae1	          0x488b00	                    mov rax, qword [rax]	       211	shallow.c	FUNCTION_6	FOR_4
0x4000ae4	    0x48898538f7ff	            mov qword [rbp - 0x8c8], rax	       211	shallow.c	FUNCTION_6	FOR_4
0x4000aeb	    0x488b8538f7ff	            mov rax, qword [rbp - 0x8c8]	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000af2	            0x8b00	                    mov eax, dword [rax]	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000af4	          0xc1e804	                              shr eax, 4	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000af7	      0x25ffffff07	                      and eax, 0x7ffffff	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000afc	    0x23850cf7ffff	            and eax, dword [rbp - 0x8f4]	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000b02	    0x3b850cf7ffff	            cmp eax, dword [rbp - 0x8f4]	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000b08	            0x7542	                           jne 0x4000b4c	       212	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000b0a	    0x488b8538f7ff	            mov rax, qword [rbp - 0x8c8]	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000b11	            0x8b00	                    mov eax, dword [rax]	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000b13	          0xc1e804	                              shr eax, 4	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000b16	      0x25ffffff07	                      and eax, 0x7ffffff	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000b1b	            0x89c2	                            mov edx, eax	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000b1d	    0x8b85ecf6ffff	            mov eax, dword [rbp - 0x914]	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000b23	            0xf7d0	                                 not eax	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000b25	            0x21d0	                            and eax, edx	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000b27	      0x25ffffff07	                      and eax, 0x7ffffff	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000b2c	            0x89c2	                            mov edx, eax	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000b2e	    0x488b8538f7ff	            mov rax, qword [rbp - 0x8c8]	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000b35	    0x81e2ffffff07	                      and edx, 0x7ffffff	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000b3b	            0x89d1	                            mov ecx, edx	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000b3d	          0xc1e104	                              shl ecx, 4	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000b40	            0x8b10	                    mov edx, dword [rax]	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000b42	    0x81e20f000080	                     and edx, 0x8000000f	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000b48	             0x9ca	                             or edx, ecx	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000b4a	            0x8910	                    mov dword [rax], edx	       213	shallow.c	FUNCTION_6	FOR_4	IF_4
0x4000b4c	    0x488b8520f7ff	            mov rax, qword [rbp - 0x8e0]	       210	shallow.c	FUNCTION_6	FOR_4
0x4000b53	        0x488b4008	                mov rax, qword [rax + 8]	       210	shallow.c	FUNCTION_6	FOR_4
0x4000b57	    0x48898520f7ff	            mov qword [rbp - 0x8e0], rax	       210	shallow.c	FUNCTION_6	FOR_4
0x4000b5e	    0x4883bd20f7ff	              cmp qword [rbp - 0x8e0], 0	       210	shallow.c	FUNCTION_6	FOR_4
0x4000b66	     0xf856effffff	                           jne 0x4000ada	       210	shallow.c	FUNCTION_6	FOR_4
0x4000b6c	    0x488b8510f7ff	            mov rax, qword [rbp - 0x8f0]	       215	shallow.c	FUNCTION_6
0x4000b73	        0x488b75f8	                mov rsi, qword [rbp - 8]	       216	shallow.c	FUNCTION_6
0x4000b77	    0x644833342528	                xor rsi, qword fs:[0x28]	       216	shallow.c	FUNCTION_6
0x4000b80	            0x7405	                            je 0x4000b87	       216	shallow.c	FUNCTION_6
0x4000b82	      0xe800000000	                          call 0x4000b87	       216	shallow.c	FUNCTION_6
0x4000b87	              0xc9	                                   leave	       216	shallow.c	FUNCTION_6
0x4000b88	              0xc3	                                     ret	       216	shallow.c	FUNCTION_6
set_alternate_shallow_file	DO,0:ELSE,0:IF,2:CALL,3:SWITCH,0:functions,0:WHILE,0:FOR,0	27
0x40002b7	              0x55	                                push rbp	        21	shallow.c	FUNCTION_1
0x40002b8	          0x4889e5	                            mov rbp, rsp	        21	shallow.c	FUNCTION_1
0x40002bb	        0x4883ec10	                           sub rsp, 0x10	        21	shallow.c	FUNCTION_1
0x40002bf	        0x48897df8	                mov qword [rbp - 8], rdi	        21	shallow.c	FUNCTION_1
0x40002c3	          0x8975f4	              mov dword [rbp - 0xc], esi	        21	shallow.c	FUNCTION_1
0x40002c6	    0x8b0500000000	            mov eax, dword [0x040002cc] 	        22	shallow.c	FUNCTION_1	IF_1
0x40002cc	          0x83f8ff	             cmp eax, 0xffffffffffffffff	        22	shallow.c	FUNCTION_1	IF_1
0x40002cf	            0x740f	                            je 0x40002e0	        22	shallow.c	FUNCTION_1	IF_1
0x40002d1	      0xbf00000000	                              mov edi, 0	        23	shallow.c	FUNCTION_1	CALL_1
0x40002d6	      0xb800000000	                              mov eax, 0	        23	shallow.c	FUNCTION_1	CALL_1
0x40002db	      0xe800000000	                          call 0x40002e0	        23	shallow.c	FUNCTION_1	CALL_1
0x40002e0	    0x488b05000000	            mov rax, qword [0x040002e7] 	        24	shallow.c	FUNCTION_1	IF_2
0x40002e7	          0x4885c0	                           test rax, rax	        24	shallow.c	FUNCTION_1	IF_2
0x40002ea	            0x7406	                            je 0x40002f2	        24	shallow.c	FUNCTION_1	IF_2
0x40002ec	        0x837df400	                cmp dword [rbp - 0xc], 0	        24	shallow.c	FUNCTION_1	IF_2
0x40002f0	            0x7424	                            je 0x4000316	        24	shallow.c	FUNCTION_1	IF_2
0x40002f2	    0x488b05000000	            mov rax, qword [0x040002f9] 	        26	shallow.c	FUNCTION_1	CALL_2
0x40002f9	          0x4889c7	                            mov rdi, rax	        26	shallow.c	FUNCTION_1	CALL_2
0x40002fc	      0xe800000000	                          call 0x4000301	        26	shallow.c	FUNCTION_1	CALL_2
0x4000301	        0x488b45f8	                mov rax, qword [rbp - 8]	        27	shallow.c	FUNCTION_1	CALL_3
0x4000305	          0x4889c7	                            mov rdi, rax	        27	shallow.c	FUNCTION_1	CALL_3
0x4000308	      0xe885fdffff	                call sym.xstrdup_or_null	        27	shallow.c	FUNCTION_1	CALL_3
0x400030d	    0x488905000000	            mov qword [0x04000314], rax 	        27	shallow.c	FUNCTION_1	CALL_3
0x4000314	            0xeb01	                           jmp 0x4000317	        27	shallow.c	FUNCTION_1	CALL_3
0x4000316	              0x90	                                     nop	        25	shallow.c	FUNCTION_1	IF_2
0x4000317	              0xc9	                                   leave	        28	shallow.c	FUNCTION_1
0x4000318	              0xc3	                                     ret	        28	shallow.c	FUNCTION_1
strbuf_avail	DO,0:ELSE,0:IF,0:CALL,0:SWITCH,0:functions,0:WHILE,0:FOR,0	18
0x40000ba	              0x55	                                push rbp	       140	strbuf.h	FUNCTION_55
0x40000bb	          0x4889e5	                            mov rbp, rsp	       140	strbuf.h	FUNCTION_55
0x40000be	        0x48897df8	                mov qword [rbp - 8], rdi	       140	strbuf.h	FUNCTION_55
0x40000c2	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_55
0x40000c6	          0x488b00	                    mov rax, qword [rax]	       141	strbuf.h	FUNCTION_55
0x40000c9	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_55
0x40000cc	            0x741b	                            je 0x40000e9	       141	strbuf.h	FUNCTION_55
0x40000ce	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_55
0x40000d2	          0x488b10	                    mov rdx, qword [rax]	       141	strbuf.h	FUNCTION_55
0x40000d5	        0x488b45f8	                mov rax, qword [rbp - 8]	       141	strbuf.h	FUNCTION_55
0x40000d9	        0x488b4008	                mov rax, qword [rax + 8]	       141	strbuf.h	FUNCTION_55
0x40000dd	          0x4829c2	                            sub rdx, rax	       141	strbuf.h	FUNCTION_55
0x40000e0	          0x4889d0	                            mov rax, rdx	       141	strbuf.h	FUNCTION_55
0x40000e3	        0x4883e801	                              sub rax, 1	       141	strbuf.h	FUNCTION_55
0x40000e7	            0xeb05	                           jmp 0x40000ee	       141	strbuf.h	FUNCTION_55
0x40000e9	      0xb800000000	                              mov eax, 0	       141	strbuf.h	FUNCTION_55
0x40000ee	              0x5d	                                 pop rbp	       142	strbuf.h	FUNCTION_55
0x40000ef	              0xc3	                                     ret	       142	strbuf.h	FUNCTION_55
strbuf_addstr	DO,0:ELSE,0:IF,0:CALL,2:SWITCH,0:functions,0:WHILE,0:FOR,0	17
0x400015e	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_58
0x400015f	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_58
0x4000162	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_58
0x4000166	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_58
0x400016a	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_58
0x400016e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_58	CALL_2
0x4000172	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_58	CALL_2
0x4000175	      0xe800000000	                          call 0x400017a	       279	strbuf.h	FUNCTION_58	CALL_2
0x400017a	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_58	CALL_2
0x400017d	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_58	CALL_2
0x4000181	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_58	CALL_2
0x4000185	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_58	CALL_2
0x4000188	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_58	CALL_2
0x400018b	      0xe800000000	                          call 0x4000190	       279	strbuf.h	FUNCTION_58	CALL_2
0x4000190	              0x90	                                     nop	       280	strbuf.h	FUNCTION_58
0x4000191	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_58
0x4000192	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_58
write_shallow_commits	DO,0:ELSE,0:IF,0:CALL,1:SWITCH,0:functions,0:WHILE,0:FOR,0	14
0x4000dcb	              0x55	                                push rbp	       285	shallow.c	FUNCTION_10
0x4000dcc	          0x4889e5	                            mov rbp, rsp	       285	shallow.c	FUNCTION_10
0x4000dcf	        0x4883ec20	                           sub rsp, 0x20	       285	shallow.c	FUNCTION_10
0x4000dd3	        0x48897df8	                mov qword [rbp - 8], rdi	       285	shallow.c	FUNCTION_10
0x4000dd7	          0x8975f4	              mov dword [rbp - 0xc], esi	       285	shallow.c	FUNCTION_10
0x4000dda	        0x488955e8	             mov qword [rbp - 0x18], rdx	       285	shallow.c	FUNCTION_10
0x4000dde	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       286	shallow.c	FUNCTION_10	CALL_1
0x4000de2	          0x8b75f4	              mov esi, dword [rbp - 0xc]	       286	shallow.c	FUNCTION_10	CALL_1
0x4000de5	        0x488b45f8	                mov rax, qword [rbp - 8]	       286	shallow.c	FUNCTION_10	CALL_1
0x4000de9	      0xb900000000	                              mov ecx, 0	       286	shallow.c	FUNCTION_10	CALL_1
0x4000dee	          0x4889c7	                            mov rdi, rax	       286	shallow.c	FUNCTION_10	CALL_1
0x4000df1	      0xe8f4feffff	        call sym.write_shallow_commits_1	       286	shallow.c	FUNCTION_10	CALL_1
0x4000df6	              0xc9	                                   leave	       287	shallow.c	FUNCTION_10
0x4000df7	              0xc3	                                     ret	       287	shallow.c	FUNCTION_10
paint_down	DO,0:ELSE,2:IF,8:CALL,19:SWITCH,0:functions,0:WHILE,1:FOR,3	250
0x400180b	              0x55	                                push rbp	       469	shallow.c	FUNCTION_20
0x400180c	          0x4889e5	                            mov rbp, rsp	       469	shallow.c	FUNCTION_20
0x400180f	        0x4883c480	             add rsp, 0xffffffffffffff80	       469	shallow.c	FUNCTION_20
0x4001813	        0x48897d98	             mov qword [rbp - 0x68], rdi	       469	shallow.c	FUNCTION_20
0x4001817	        0x48897590	             mov qword [rbp - 0x70], rsi	       469	shallow.c	FUNCTION_20
0x400181b	          0x89558c	             mov dword [rbp - 0x74], edx	       469	shallow.c	FUNCTION_20
0x400181e	    0x64488b042528	                mov rax, qword fs:[0x28]	       469	shallow.c	FUNCTION_20
0x4001827	        0x488945f8	                mov qword [rbp - 8], rax	       469	shallow.c	FUNCTION_20
0x400182b	            0x31c0	                            xor eax, eax	       469	shallow.c	FUNCTION_20
0x400182d	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       471	shallow.c	FUNCTION_20
0x4001835	        0x488b4598	             mov rax, qword [rbp - 0x68]	       472	shallow.c	FUNCTION_20
0x4001839	          0x8b4018	            mov eax, dword [rax + 0x18] 	       472	shallow.c	FUNCTION_20
0x400183c	          0x83c01f	                           add eax, 0x1f	       472	shallow.c	FUNCTION_20
0x400183f	          0xc1e805	                              shr eax, 5	       472	shallow.c	FUNCTION_20
0x4001842	          0x8945a8	             mov dword [rbp - 0x58], eax	       472	shallow.c	FUNCTION_20
0x4001845	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       473	shallow.c	FUNCTION_20	CALL_1
0x4001848	            0x4898	                                    cdqe	       473	shallow.c	FUNCTION_20	CALL_1
0x400184a	          0x4889c6	                            mov rsi, rax	       473	shallow.c	FUNCTION_20	CALL_1
0x400184d	      0xbf04000000	                              mov edi, 4	       473	shallow.c	FUNCTION_20	CALL_1
0x4001852	      0xe8e9e7ffff	                        call sym.st_mult	       473	shallow.c	FUNCTION_20	CALL_1
0x4001857	        0x488945c0	             mov qword [rbp - 0x40], rax	       473	shallow.c	FUNCTION_20	CALL_1
0x400185b	        0x488b4590	             mov rax, qword [rbp - 0x70]	       474	shallow.c	FUNCTION_20	CALL_2
0x400185f	      0xbe01000000	                              mov esi, 1	       474	shallow.c	FUNCTION_20	CALL_2
0x4001864	          0x4889c7	                            mov rdi, rax	       474	shallow.c	FUNCTION_20	CALL_2
0x4001867	      0xe800000000	                          call 0x400186c	       474	shallow.c	FUNCTION_20	CALL_2
0x400186c	        0x488945c8	             mov qword [rbp - 0x38], rax	       474	shallow.c	FUNCTION_20	CALL_2
0x4001870	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       478	shallow.c	FUNCTION_20	IF_1
0x4001875	     0xf84fd020000	                            je 0x4001b78	       478	shallow.c	FUNCTION_20	IF_1
0x400187b	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       481	shallow.c	FUNCTION_20	CALL_3
0x400187f	          0x4889c7	                            mov rdi, rax	       481	shallow.c	FUNCTION_20	CALL_3
0x4001882	      0xe800000000	                          call 0x4001887	       481	shallow.c	FUNCTION_20	CALL_3
0x4001887	        0x488945d0	             mov qword [rbp - 0x30], rax	       481	shallow.c	FUNCTION_20	CALL_3
0x400188b	        0x488b4598	             mov rax, qword [rbp - 0x68]	       482	shallow.c	FUNCTION_20	CALL_4
0x400188f	          0x4889c7	                            mov rdi, rax	       482	shallow.c	FUNCTION_20	CALL_4
0x4001892	      0xe840feffff	                    call sym.paint_alloc	       482	shallow.c	FUNCTION_20	CALL_4
0x4001897	        0x488945d8	             mov qword [rbp - 0x28], rax	       482	shallow.c	FUNCTION_20	CALL_4
0x400189b	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       483	shallow.c	FUNCTION_20	CALL_5
0x400189f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       483	shallow.c	FUNCTION_20	CALL_5
0x40018a3	      0xbe00000000	                              mov esi, 0	       483	shallow.c	FUNCTION_20	CALL_5
0x40018a8	          0x4889c7	                            mov rdi, rax	       483	shallow.c	FUNCTION_20	CALL_5
0x40018ab	      0xe800000000	                          call 0x40018b0	       483	shallow.c	FUNCTION_20	CALL_5
0x40018b0	          0x8b458c	             mov eax, dword [rbp - 0x74]	       484	shallow.c	FUNCTION_20
0x40018b3	          0xc1e805	                              shr eax, 5	       484	shallow.c	FUNCTION_20
0x40018b6	            0x89c2	                            mov edx, eax	       484	shallow.c	FUNCTION_20
0x40018b8	            0x89d0	                            mov eax, edx	       484	shallow.c	FUNCTION_20
0x40018ba	    0x488d0c850000	                        lea rcx, [rax*4]	       484	shallow.c	FUNCTION_20
0x40018c2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       484	shallow.c	FUNCTION_20
0x40018c6	          0x4801c8	                            add rax, rcx	       484	shallow.c	FUNCTION_20
0x40018c9	            0x89d2	                            mov edx, edx	       484	shallow.c	FUNCTION_20
0x40018cb	    0x488d0c950000	                        lea rcx, [rdx*4]	       484	shallow.c	FUNCTION_20
0x40018d3	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       484	shallow.c	FUNCTION_20
0x40018d7	          0x4801ca	                            add rdx, rcx	       484	shallow.c	FUNCTION_20
0x40018da	            0x8b12	                    mov edx, dword [rdx]	       484	shallow.c	FUNCTION_20
0x40018dc	          0x8b4d8c	             mov ecx, dword [rbp - 0x74]	       484	shallow.c	FUNCTION_20
0x40018df	          0x83e11f	                           and ecx, 0x1f	       484	shallow.c	FUNCTION_20
0x40018e2	      0xbe01000000	                              mov esi, 1	       484	shallow.c	FUNCTION_20
0x40018e7	            0xd3e6	                             shl esi, cl	       484	shallow.c	FUNCTION_20
0x40018e9	            0x89f1	                            mov ecx, esi	       484	shallow.c	FUNCTION_20
0x40018eb	             0x9ca	                             or edx, ecx	       484	shallow.c	FUNCTION_20
0x40018ed	            0x8910	                    mov dword [rax], edx	       484	shallow.c	FUNCTION_20
0x40018ef	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       485	shallow.c	FUNCTION_20	CALL_6
0x40018f3	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       485	shallow.c	FUNCTION_20	CALL_6
0x40018f7	          0x4889d6	                            mov rsi, rdx	       485	shallow.c	FUNCTION_20	CALL_6
0x40018fa	          0x4889c7	                            mov rdi, rax	       485	shallow.c	FUNCTION_20	CALL_6
0x40018fd	      0xe800000000	                          call 0x4001902	       485	shallow.c	FUNCTION_20	CALL_6
0x4001902	      0xe9e6010000	                           jmp 0x4001aed	       486	shallow.c	FUNCTION_20	WHILE_1
0x4001907	        0x488d45b0	                   lea rax, [rbp - 0x50]	       488	shallow.c	FUNCTION_20	WHILE_1	CALL_7
0x400190b	          0x4889c7	                            mov rdi, rax	       488	shallow.c	FUNCTION_20	WHILE_1	CALL_7
0x400190e	      0xe800000000	                          call 0x4001913	       488	shallow.c	FUNCTION_20	WHILE_1	CALL_7
0x4001913	        0x488945e0	             mov qword [rbp - 0x20], rax	       488	shallow.c	FUNCTION_20	WHILE_1	CALL_7
0x4001917	        0x488b4598	             mov rax, qword [rbp - 0x68]	       489	shallow.c	FUNCTION_20	WHILE_1	CALL_8
0x400191b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       489	shallow.c	FUNCTION_20	WHILE_1	CALL_8
0x400191f	          0x4889d6	                            mov rsi, rdx	       489	shallow.c	FUNCTION_20	WHILE_1	CALL_8
0x4001922	          0x4889c7	                            mov rdi, rax	       489	shallow.c	FUNCTION_20	WHILE_1	CALL_8
0x4001925	      0xe859fdffff	                  call sym.ref_bitmap_at	       489	shallow.c	FUNCTION_20	WHILE_1	CALL_8
0x400192a	        0x488945e8	             mov qword [rbp - 0x18], rax	       489	shallow.c	FUNCTION_20	WHILE_1	CALL_8
0x400192e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       492	shallow.c	FUNCTION_20	WHILE_1	IF_2
0x4001932	            0x8b00	                    mov eax, dword [rax]	       492	shallow.c	FUNCTION_20	WHILE_1	IF_2
0x4001934	          0xc1e804	                              shr eax, 4	       492	shallow.c	FUNCTION_20	WHILE_1	IF_2
0x4001937	      0x25ffffff07	                      and eax, 0x7ffffff	       492	shallow.c	FUNCTION_20	WHILE_1	IF_2
0x400193c	          0x83e003	                              and eax, 3	       492	shallow.c	FUNCTION_20	WHILE_1	IF_2
0x400193f	            0x85c0	                           test eax, eax	       492	shallow.c	FUNCTION_20	WHILE_1	IF_2
0x4001941	            0x7405	                            je 0x4001948	       492	shallow.c	FUNCTION_20	WHILE_1	IF_2
0x4001943	      0xe9a5010000	                           jmp 0x4001aed	       493	shallow.c	FUNCTION_20	WHILE_1	IF_2
0x4001948	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x400194c	            0x8b00	                    mov eax, dword [rax]	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x400194e	          0xc1e804	                              shr eax, 4	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x4001951	      0x25ffffff07	                      and eax, 0x7ffffff	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x4001956	          0x83c801	                               or eax, 1	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x4001959	            0x89c2	                            mov edx, eax	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x400195b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x400195f	    0x81e2ffffff07	                      and edx, 0x7ffffff	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x4001965	            0x89d1	                            mov ecx, edx	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x4001967	          0xc1e104	                              shl ecx, 4	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x400196a	            0x8b10	                    mov edx, dword [rax]	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x400196c	    0x81e20f000080	                     and edx, 0x8000000f	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x4001972	             0x9ca	                             or edx, ecx	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x4001974	            0x8910	                    mov dword [rax], edx	       495	shallow.c	FUNCTION_20	WHILE_1	ELSE_1
0x4001976	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       497	shallow.c	FUNCTION_20	WHILE_1	IF_3
0x400197a	          0x488b00	                    mov rax, qword [rax]	       497	shallow.c	FUNCTION_20	WHILE_1	IF_3
0x400197d	          0x4885c0	                           test rax, rax	       497	shallow.c	FUNCTION_20	WHILE_1	IF_3
0x4001980	            0x7510	                           jne 0x4001992	       497	shallow.c	FUNCTION_20	WHILE_1	IF_3
0x4001982	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       498	shallow.c	FUNCTION_20	WHILE_1	IF_3
0x4001986	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       498	shallow.c	FUNCTION_20	WHILE_1	IF_3
0x400198a	          0x488910	                    mov qword [rax], rdx	       498	shallow.c	FUNCTION_20	WHILE_1	IF_3
0x400198d	      0xe9bb000000	                           jmp 0x4001a4d	       498	shallow.c	FUNCTION_20	WHILE_1	IF_3
0x4001992	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       500	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	CALL_9
0x4001996	          0x488b08	                    mov rcx, qword [rax]	       500	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	CALL_9
0x4001999	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       500	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	CALL_9
0x400199d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       500	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	CALL_9
0x40019a1	          0x4889ce	                            mov rsi, rcx	       500	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	CALL_9
0x40019a4	          0x4889c7	                            mov rdi, rax	       500	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	CALL_9
0x40019a7	      0xe800000000	                          call 0x40019ac	       500	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	CALL_9
0x40019ac	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40019b3	            0xeb42	                           jmp 0x40019f7	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40019b5	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40019b8	    0x488d14850000	                        lea rdx, [rax*4]	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40019c0	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40019c4	          0x4801d0	                            add rax, rdx	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40019c7	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40019ca	    0x488d0c950000	                        lea rcx, [rdx*4]	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40019d2	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40019d6	          0x4801ca	                            add rdx, rcx	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40019d9	            0x8b0a	                    mov ecx, dword [rdx]	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40019db	          0x8b55a4	             mov edx, dword [rbp - 0x5c]	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40019de	    0x488d34950000	                        lea rsi, [rdx*4]	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40019e6	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40019ea	          0x4801f2	                            add rdx, rsi	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40019ed	            0x8b12	                    mov edx, dword [rdx]	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40019ef	             0x9ca	                             or edx, ecx	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40019f1	            0x8910	                    mov dword [rax], edx	       502	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40019f3	        0x8345a401	               add dword [rbp - 0x5c], 1	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40019f7	          0x8b45a8	             mov eax, dword [rbp - 0x58]	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40019fa	          0x3945a4	            cmp dword [rbp - 0x5c], eax 	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40019fd	            0x72b6	                            jb 0x40019b5	       501	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	FOR_1
0x40019ff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_10
0x4001a03	          0x488b08	                    mov rcx, qword [rax]	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_10
0x4001a06	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_10
0x4001a0a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_10
0x4001a0e	          0x4889ce	                            mov rsi, rcx	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_10
0x4001a11	          0x4889c7	                            mov rdi, rax	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_10
0x4001a14	      0xe800000000	                          call 0x4001a19	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_10
0x4001a19	            0x85c0	                           test eax, eax	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_10
0x4001a1b	            0x7430	                            je 0x4001a4d	       503	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_10
0x4001a1d	        0x488b4598	             mov rax, qword [rbp - 0x68]	       504	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_11
0x4001a21	          0x4889c7	                            mov rdi, rax	       504	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_11
0x4001a24	      0xe8aefcffff	                    call sym.paint_alloc	       504	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_11
0x4001a29	          0x4889c2	                            mov rdx, rax	       504	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_11
0x4001a2c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       504	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_11
0x4001a30	          0x488910	                    mov qword [rax], rdx	       504	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_11
0x4001a33	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       505	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_12
0x4001a37	          0x488b00	                    mov rax, qword [rax]	       505	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_12
0x4001a3a	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       505	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_12
0x4001a3e	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       505	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_12
0x4001a42	          0x4889ce	                            mov rsi, rcx	       505	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_12
0x4001a45	          0x4889c7	                            mov rdi, rax	       505	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_12
0x4001a48	      0xe800000000	                          call 0x4001a4d	       505	shallow.c	FUNCTION_20	WHILE_1	ELSE_2	IF_4	CALL_12
0x4001a4d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       509	shallow.c	FUNCTION_20	WHILE_1	IF_5
0x4001a51	            0x8b00	                    mov eax, dword [rax]	       509	shallow.c	FUNCTION_20	WHILE_1	IF_5
0x4001a53	          0xc1e804	                              shr eax, 4	       509	shallow.c	FUNCTION_20	WHILE_1	IF_5
0x4001a56	      0x25ffffff07	                      and eax, 0x7ffffff	       509	shallow.c	FUNCTION_20	WHILE_1	IF_5
0x4001a5b	      0x2500040000	                          and eax, 0x400	       509	shallow.c	FUNCTION_20	WHILE_1	IF_5
0x4001a60	            0x85c0	                           test eax, eax	       509	shallow.c	FUNCTION_20	WHILE_1	IF_5
0x4001a62	            0x7405	                            je 0x4001a69	       509	shallow.c	FUNCTION_20	WHILE_1	IF_5
0x4001a64	      0xe984000000	                           jmp 0x4001aed	       510	shallow.c	FUNCTION_20	WHILE_1	IF_5
0x4001a69	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       512	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_13
0x4001a6d	          0x4889c7	                            mov rdi, rax	       512	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_13
0x4001a70	      0xe823e8ffff	                   call sym.parse_commit	       512	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_13
0x4001a75	            0x85c0	                           test eax, eax	       512	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_13
0x4001a77	            0x7422	                            je 0x4001a9b	       512	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_13
0x4001a79	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       514	shallow.c	FUNCTION_20	WHILE_1	CALL_15
0x4001a7d	        0x4883c004	                              add rax, 4	       514	shallow.c	FUNCTION_20	WHILE_1	CALL_15
0x4001a81	          0x4889c7	                            mov rdi, rax	       513	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_14
0x4001a84	      0xe800000000	                          call 0x4001a89	       513	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_14
0x4001a89	          0x4889c6	                            mov rsi, rax	       513	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_14
0x4001a8c	      0xbf00000000	                              mov edi, 0	       513	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_14
0x4001a91	      0xb800000000	                              mov eax, 0	       513	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_14
0x4001a96	      0xe800000000	                          call 0x4001a9b	       513	shallow.c	FUNCTION_20	WHILE_1	IF_6	CALL_14
0x4001a9b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x4001a9f	        0x488b4030	            mov rax, qword [rax + 0x30] 	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x4001aa3	        0x488945b8	             mov qword [rbp - 0x48], rax	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x4001aa7	            0xeb3d	                           jmp 0x4001ae6	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x4001aa9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       517	shallow.c	FUNCTION_20	WHILE_1	FOR_2	IF_7
0x4001aad	          0x488b00	                    mov rax, qword [rax]	       517	shallow.c	FUNCTION_20	WHILE_1	FOR_2	IF_7
0x4001ab0	            0x8b00	                    mov eax, dword [rax]	       517	shallow.c	FUNCTION_20	WHILE_1	FOR_2	IF_7
0x4001ab2	          0xc1e804	                              shr eax, 4	       517	shallow.c	FUNCTION_20	WHILE_1	FOR_2	IF_7
0x4001ab5	      0x25ffffff07	                      and eax, 0x7ffffff	       517	shallow.c	FUNCTION_20	WHILE_1	FOR_2	IF_7
0x4001aba	          0x83e001	                              and eax, 1	       517	shallow.c	FUNCTION_20	WHILE_1	FOR_2	IF_7
0x4001abd	            0x85c0	                           test eax, eax	       517	shallow.c	FUNCTION_20	WHILE_1	FOR_2	IF_7
0x4001abf	            0x7518	                           jne 0x4001ad9	       517	shallow.c	FUNCTION_20	WHILE_1	FOR_2	IF_7
0x4001ac1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       519	shallow.c	FUNCTION_20	WHILE_1	FOR_2	CALL_16
0x4001ac5	          0x488b00	                    mov rax, qword [rax]	       519	shallow.c	FUNCTION_20	WHILE_1	FOR_2	CALL_16
0x4001ac8	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       519	shallow.c	FUNCTION_20	WHILE_1	FOR_2	CALL_16
0x4001acc	          0x4889d6	                            mov rsi, rdx	       519	shallow.c	FUNCTION_20	WHILE_1	FOR_2	CALL_16
0x4001acf	          0x4889c7	                            mov rdi, rax	       519	shallow.c	FUNCTION_20	WHILE_1	FOR_2	CALL_16
0x4001ad2	      0xe800000000	                          call 0x4001ad7	       519	shallow.c	FUNCTION_20	WHILE_1	FOR_2	CALL_16
0x4001ad7	            0xeb01	                           jmp 0x4001ada	       519	shallow.c	FUNCTION_20	WHILE_1	FOR_2	CALL_16
0x4001ad9	              0x90	                                     nop	       518	shallow.c	FUNCTION_20	WHILE_1	FOR_2	IF_7
0x4001ada	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x4001ade	        0x488b4008	                mov rax, qword [rax + 8]	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x4001ae2	        0x488945b8	             mov qword [rbp - 0x48], rax	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x4001ae6	      0x48837db800	               cmp qword [rbp - 0x48], 0	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x4001aeb	            0x75bc	                           jne 0x4001aa9	       516	shallow.c	FUNCTION_20	WHILE_1	FOR_2
0x4001aed	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       486	shallow.c	FUNCTION_20	WHILE_1
0x4001af1	          0x4885c0	                           test rax, rax	       486	shallow.c	FUNCTION_20	WHILE_1
0x4001af4	     0xf850dfeffff	                           jne 0x4001907	       486	shallow.c	FUNCTION_20	WHILE_1
0x4001afa	      0xe800000000	                          call 0x4001aff	       523	shallow.c	FUNCTION_20	CALL_17
0x4001aff	          0x8945ac	             mov dword [rbp - 0x54], eax	       523	shallow.c	FUNCTION_20	CALL_17
0x4001b02	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	       524	shallow.c	FUNCTION_20	FOR_3
0x4001b09	            0xeb57	                           jmp 0x4001b62	       524	shallow.c	FUNCTION_20	FOR_3
0x4001b0b	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       525	shallow.c	FUNCTION_20	FOR_3	CALL_18
0x4001b0e	            0x89c7	                            mov edi, eax	       525	shallow.c	FUNCTION_20	FOR_3	CALL_18
0x4001b10	      0xe800000000	                          call 0x4001b15	       525	shallow.c	FUNCTION_20	FOR_3	CALL_18
0x4001b15	        0x488945f0	             mov qword [rbp - 0x10], rax	       525	shallow.c	FUNCTION_20	FOR_3	CALL_18
0x4001b19	      0x48837df000	               cmp qword [rbp - 0x10], 0	       526	shallow.c	FUNCTION_20	FOR_3	IF_8
0x4001b1e	            0x743e	                            je 0x4001b5e	       526	shallow.c	FUNCTION_20	FOR_3	IF_8
0x4001b20	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       526	shallow.c	FUNCTION_20	FOR_3	IF_8
0x4001b24	           0xfb600	                   movzx eax, byte [rax]	       526	shallow.c	FUNCTION_20	FOR_3	IF_8
0x4001b27	          0x83e00e	                            and eax, 0xe	       526	shallow.c	FUNCTION_20	FOR_3	IF_8
0x4001b2a	            0x3c02	                               cmp al, 2	       526	shallow.c	FUNCTION_20	FOR_3	IF_8
0x4001b2c	            0x7530	                           jne 0x4001b5e	       526	shallow.c	FUNCTION_20	FOR_3	IF_8
0x4001b2e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       527	shallow.c	FUNCTION_20	FOR_3	IF_8
0x4001b32	            0x8b00	                    mov eax, dword [rax]	       527	shallow.c	FUNCTION_20	FOR_3	IF_8
0x4001b34	          0xc1e804	                              shr eax, 4	       527	shallow.c	FUNCTION_20	FOR_3	IF_8
0x4001b37	      0x25ffffff07	                      and eax, 0x7ffffff	       527	shallow.c	FUNCTION_20	FOR_3	IF_8
0x4001b3c	      0x25feffff07	                      and eax, 0x7fffffe	       527	shallow.c	FUNCTION_20	FOR_3	IF_8
0x4001b41	            0x89c2	                            mov edx, eax	       527	shallow.c	FUNCTION_20	FOR_3	IF_8
0x4001b43	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       527	shallow.c	FUNCTION_20	FOR_3	IF_8
0x4001b47	    0x81e2ffffff07	                      and edx, 0x7ffffff	       527	shallow.c	FUNCTION_20	FOR_3	IF_8
0x4001b4d	            0x89d1	                            mov ecx, edx	       527	shallow.c	FUNCTION_20	FOR_3	IF_8
0x4001b4f	          0xc1e104	                              shl ecx, 4	       527	shallow.c	FUNCTION_20	FOR_3	IF_8
0x4001b52	            0x8b10	                    mov edx, dword [rax]	       527	shallow.c	FUNCTION_20	FOR_3	IF_8
0x4001b54	    0x81e20f000080	                     and edx, 0x8000000f	       527	shallow.c	FUNCTION_20	FOR_3	IF_8
0x4001b5a	             0x9ca	                             or edx, ecx	       527	shallow.c	FUNCTION_20	FOR_3	IF_8
0x4001b5c	            0x8910	                    mov dword [rax], edx	       527	shallow.c	FUNCTION_20	FOR_3	IF_8
0x4001b5e	        0x8345a401	               add dword [rbp - 0x5c], 1	       524	shallow.c	FUNCTION_20	FOR_3
0x4001b62	          0x8b45a4	             mov eax, dword [rbp - 0x5c]	       524	shallow.c	FUNCTION_20	FOR_3
0x4001b65	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	       524	shallow.c	FUNCTION_20	FOR_3
0x4001b68	            0x72a1	                            jb 0x4001b0b	       524	shallow.c	FUNCTION_20	FOR_3
0x4001b6a	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       530	shallow.c	FUNCTION_20	CALL_19
0x4001b6e	          0x4889c7	                            mov rdi, rax	       530	shallow.c	FUNCTION_20	CALL_19
0x4001b71	      0xe800000000	                          call 0x4001b76	       530	shallow.c	FUNCTION_20	CALL_19
0x4001b76	            0xeb01	                           jmp 0x4001b79	       530	shallow.c	FUNCTION_20	CALL_19
0x4001b78	              0x90	                                     nop	       479	shallow.c	FUNCTION_20	IF_1
0x4001b79	        0x488b45f8	                mov rax, qword [rbp - 8]	       531	shallow.c	FUNCTION_20
0x4001b7d	    0x644833042528	                xor rax, qword fs:[0x28]	       531	shallow.c	FUNCTION_20
0x4001b86	            0x7405	                            je 0x4001b8d	       531	shallow.c	FUNCTION_20
0x4001b88	      0xe800000000	                          call 0x4001b8d	       531	shallow.c	FUNCTION_20
0x4001b8d	              0xc9	                                   leave	       531	shallow.c	FUNCTION_20
0x4001b8e	              0xc3	                                     ret	       531	shallow.c	FUNCTION_20
check_shallow_file_for_update	DO,0:ELSE,0:IF,2:CALL,4:SWITCH,0:functions,0:WHILE,0:FOR,0	20
0x4000b89	              0x55	                                push rbp	       219	shallow.c	FUNCTION_7
0x4000b8a	          0x4889e5	                            mov rbp, rsp	       219	shallow.c	FUNCTION_7
0x4000b8d	    0x8b0500000000	            mov eax, dword [0x04000b93] 	       220	shallow.c	FUNCTION_7	IF_1
0x4000b93	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       220	shallow.c	FUNCTION_7	IF_1
0x4000b96	            0x750f	                           jne 0x4000ba7	       220	shallow.c	FUNCTION_7	IF_1
0x4000b98	      0xbf00000000	                              mov edi, 0	       221	shallow.c	FUNCTION_7	CALL_1
0x4000b9d	      0xb800000000	                              mov eax, 0	       221	shallow.c	FUNCTION_7	CALL_1
0x4000ba2	      0xe800000000	                          call 0x4000ba7	       221	shallow.c	FUNCTION_7	CALL_1
0x4000ba7	      0xe800000000	                          call 0x4000bac	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0x4000bac	          0x4889c6	                            mov rsi, rax	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0x4000baf	      0xbf00000000	                              mov edi, 0	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0x4000bb4	      0xe800000000	                          call 0x4000bb9	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0x4000bb9	            0x85c0	                           test eax, eax	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0x4000bbb	            0x750f	                           jne 0x4000bcc	       223	shallow.c	FUNCTION_7	IF_2	CALL_3
0x4000bbd	      0xbf00000000	                              mov edi, 0	       224	shallow.c	FUNCTION_7	CALL_4
0x4000bc2	      0xb800000000	                              mov eax, 0	       224	shallow.c	FUNCTION_7	CALL_4
0x4000bc7	      0xe800000000	                          call 0x4000bcc	       224	shallow.c	FUNCTION_7	CALL_4
0x4000bcc	              0x90	                                     nop	       225	shallow.c	FUNCTION_7
0x4000bcd	              0x5d	                                 pop rbp	       225	shallow.c	FUNCTION_7
0x4000bce	              0xc3	                                     ret	       225	shallow.c	FUNCTION_7
trace_pass_fl	DO,0:ELSE,0:IF,0:CALL,0:SWITCH,0:functions,0:WHILE,0:FOR,0	17
0x4000193	              0x55	                                push rbp	       134	trace.h	FUNCTION_111
0x4000194	          0x4889e5	                            mov rbp, rsp	       134	trace.h	FUNCTION_111
0x4000197	        0x48897df8	                mov qword [rbp - 8], rdi	       134	trace.h	FUNCTION_111
0x400019b	        0x488b45f8	                mov rax, qword [rbp - 8]	       135	trace.h	FUNCTION_111
0x400019f	          0x8b4008	                mov eax, dword [rax + 8]	       135	trace.h	FUNCTION_111
0x40001a2	            0x85c0	                           test eax, eax	       135	trace.h	FUNCTION_111
0x40001a4	            0x750f	                           jne 0x40001b5	       135	trace.h	FUNCTION_111
0x40001a6	        0x488b45f8	                mov rax, qword [rbp - 8]	       135	trace.h	FUNCTION_111
0x40001aa	         0xfb6400c	            movzx eax, byte [rax + 0xc] 	       135	trace.h	FUNCTION_111
0x40001ae	          0x83e001	                              and eax, 1	       135	trace.h	FUNCTION_111
0x40001b1	            0x84c0	                             test al, al	       135	trace.h	FUNCTION_111
0x40001b3	            0x7507	                           jne 0x40001bc	       135	trace.h	FUNCTION_111
0x40001b5	      0xb801000000	                              mov eax, 1	       135	trace.h	FUNCTION_111
0x40001ba	            0xeb05	                           jmp 0x40001c1	       135	trace.h	FUNCTION_111
0x40001bc	      0xb800000000	                              mov eax, 0	       135	trace.h	FUNCTION_111
0x40001c1	              0x5d	                                 pop rbp	       136	trace.h	FUNCTION_111
0x40001c2	              0xc3	                                     ret	       136	trace.h	FUNCTION_111
remove_nonexistent_theirs_shallow	DO,0:ELSE,0:IF,2:CALL,1:SWITCH,0:functions,0:WHILE,0:FOR,1	70
0x4001339	              0x55	                                push rbp	       417	shallow.c	FUNCTION_18
0x400133a	          0x4889e5	                            mov rbp, rsp	       417	shallow.c	FUNCTION_18
0x400133d	        0x4883ec20	                           sub rsp, 0x20	       417	shallow.c	FUNCTION_18
0x4001341	        0x48897de8	             mov qword [rbp - 0x18], rdi	       417	shallow.c	FUNCTION_18
0x4001345	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       418	shallow.c	FUNCTION_18
0x4001349	          0x488b00	                    mov rax, qword [rax]	       418	shallow.c	FUNCTION_18
0x400134c	          0x488b00	                    mov rax, qword [rax]	       418	shallow.c	FUNCTION_18
0x400134f	        0x488945f8	                mov qword [rbp - 8], rax	       418	shallow.c	FUNCTION_18
0x4001353	      0xbf00000000	                              mov edi, 0	       420	shallow.c	FUNCTION_18
0x4001358	      0xe836eeffff	                  call sym.trace_pass_fl	       420	shallow.c	FUNCTION_18
0x400135d	            0x85c0	                           test eax, eax	       420	shallow.c	FUNCTION_18
0x400135f	            0x741e	                            je 0x400137f	       420	shallow.c	FUNCTION_18
0x4001361	      0xb900000000	                              mov ecx, 0	       420	shallow.c	FUNCTION_18
0x4001366	      0xba00000000	                              mov edx, 0	       420	shallow.c	FUNCTION_18
0x400136b	      0xbea4010000	                          mov esi, 0x1a4	       420	shallow.c	FUNCTION_18
0x4001370	      0xbf00000000	                              mov edi, 0	       420	shallow.c	FUNCTION_18
0x4001375	      0xb800000000	                              mov eax, 0	       420	shallow.c	FUNCTION_18
0x400137a	      0xe800000000	                          call 0x400137f	       420	shallow.c	FUNCTION_18
0x400137f	    0xc745f4000000	                mov dword [rbp - 0xc], 0	       421	shallow.c	FUNCTION_18	FOR_1
0x4001386	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       421	shallow.c	FUNCTION_18	FOR_1
0x4001389	          0x8945f0	             mov dword [rbp - 0x10], eax	       421	shallow.c	FUNCTION_18	FOR_1
0x400138c	            0xeb7c	                           jmp 0x400140a	       421	shallow.c	FUNCTION_18	FOR_1
0x400138e	          0x8b45f0	             mov eax, dword [rbp - 0x10]	       422	shallow.c	FUNCTION_18	FOR_1	IF_1
0x4001391	          0x3b45f4	              cmp eax, dword [rbp - 0xc]	       422	shallow.c	FUNCTION_18	FOR_1	IF_1
0x4001394	            0x742e	                            je 0x40013c4	       422	shallow.c	FUNCTION_18	FOR_1	IF_1
0x4001396	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x400139a	        0x488b4018	            mov rax, qword [rax + 0x18] 	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x400139e	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x40013a1	          0x4863d2	                         movsxd rdx, edx	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x40013a4	        0x48c1e202	                              shl rdx, 2	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x40013a8	          0x4801c2	                            add rdx, rax	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x40013ab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x40013af	        0x488b4018	            mov rax, qword [rax + 0x18] 	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x40013b3	          0x8b4df0	             mov ecx, dword [rbp - 0x10]	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x40013b6	          0x4863c9	                         movsxd rcx, ecx	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x40013b9	        0x48c1e102	                              shl rcx, 2	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x40013bd	          0x4801c8	                            add rax, rcx	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x40013c0	            0x8b00	                    mov eax, dword [rax]	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x40013c2	            0x8902	                    mov dword [rdx], eax	       423	shallow.c	FUNCTION_18	FOR_1	IF_1
0x40013c4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_1
0x40013c8	        0x488b4018	            mov rax, qword [rax + 0x18] 	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_1
0x40013cc	          0x8b55f0	             mov edx, dword [rbp - 0x10]	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_1
0x40013cf	          0x4863d2	                         movsxd rdx, edx	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_1
0x40013d2	        0x48c1e202	                              shl rdx, 2	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_1
0x40013d6	          0x4801d0	                            add rax, rdx	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_1
0x40013d9	            0x8b00	                    mov eax, dword [rax]	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_1
0x40013db	          0x4863d0	                         movsxd rdx, eax	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_1
0x40013de	          0x4889d0	                            mov rax, rdx	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_1
0x40013e1	        0x48c1e002	                              shl rax, 2	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_1
0x40013e5	          0x4801d0	                            add rax, rdx	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_1
0x40013e8	        0x48c1e002	                              shl rax, 2	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_1
0x40013ec	          0x4889c2	                            mov rdx, rax	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_1
0x40013ef	        0x488b45f8	                mov rax, qword [rbp - 8]	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_1
0x40013f3	          0x4801d0	                            add rax, rdx	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_1
0x40013f6	          0x4889c7	                            mov rdi, rax	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_1
0x40013f9	      0xe800000000	                          call 0x40013fe	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_1
0x40013fe	            0x85c0	                           test eax, eax	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_1
0x4001400	            0x7404	                            je 0x4001406	       424	shallow.c	FUNCTION_18	FOR_1	IF_2	CALL_1
0x4001402	        0x8345f401	                add dword [rbp - 0xc], 1	       425	shallow.c	FUNCTION_18	FOR_1	IF_2
0x4001406	        0x8345f001	               add dword [rbp - 0x10], 1	       421	shallow.c	FUNCTION_18	FOR_1
0x400140a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       421	shallow.c	FUNCTION_18	FOR_1
0x400140e	          0x8b4020	            mov eax, dword [rax + 0x20] 	       421	shallow.c	FUNCTION_18	FOR_1
0x4001411	          0x3b45f0	             cmp eax, dword [rbp - 0x10]	       421	shallow.c	FUNCTION_18	FOR_1
0x4001414	     0xf8f74ffffff	                            jg 0x400138e	       421	shallow.c	FUNCTION_18	FOR_1
0x400141a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       427	shallow.c	FUNCTION_18
0x400141e	          0x8b55f4	              mov edx, dword [rbp - 0xc]	       427	shallow.c	FUNCTION_18
0x4001421	          0x895020	             mov dword [rax + 0x20], edx	       427	shallow.c	FUNCTION_18
0x4001424	              0x90	                                     nop	       428	shallow.c	FUNCTION_18
0x4001425	              0xc9	                                   leave	       428	shallow.c	FUNCTION_18
0x4001426	              0xc3	                                     ret	       428	shallow.c	FUNCTION_18
post_assign_shallow	DO,0:ELSE,0:IF,7:CALL,12:SWITCH,0:functions,0:WHILE,0:FOR,4	244
0x40022c9	              0x55	                                push rbp	       668	shallow.c	FUNCTION_25
0x40022ca	          0x4889e5	                            mov rbp, rsp	       668	shallow.c	FUNCTION_25
0x40022cd	        0x4883ec70	                           sub rsp, 0x70	       668	shallow.c	FUNCTION_25
0x40022d1	        0x48897da8	             mov qword [rbp - 0x58], rdi	       668	shallow.c	FUNCTION_25
0x40022d5	        0x488975a0	             mov qword [rbp - 0x60], rsi	       668	shallow.c	FUNCTION_25
0x40022d9	        0x48895598	             mov qword [rbp - 0x68], rdx	       668	shallow.c	FUNCTION_25
0x40022dd	    0x64488b042528	                mov rax, qword fs:[0x28]	       668	shallow.c	FUNCTION_25
0x40022e6	        0x488945f8	                mov qword [rbp - 8], rax	       668	shallow.c	FUNCTION_25
0x40022ea	            0x31c0	                            xor eax, eax	       668	shallow.c	FUNCTION_25
0x40022ec	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       669	shallow.c	FUNCTION_25
0x40022f0	          0x488b00	                    mov rax, qword [rax]	       669	shallow.c	FUNCTION_25
0x40022f3	          0x488b00	                    mov rax, qword [rax]	       669	shallow.c	FUNCTION_25
0x40022f6	        0x488945c8	             mov qword [rbp - 0x38], rax	       669	shallow.c	FUNCTION_25
0x40022fa	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       673	shallow.c	FUNCTION_25
0x40022fe	        0x488b4028	            mov rax, qword [rax + 0x28] 	       673	shallow.c	FUNCTION_25
0x4002302	          0x8b4008	                mov eax, dword [rax + 8]	       673	shallow.c	FUNCTION_25
0x4002305	          0x83c01f	                           add eax, 0x1f	       673	shallow.c	FUNCTION_25
0x4002308	          0x8d501f	                   lea edx, [rax + 0x1f]	       673	shallow.c	FUNCTION_25
0x400230b	            0x85c0	                           test eax, eax	       673	shallow.c	FUNCTION_25
0x400230d	           0xf48c2	                          cmovs eax, edx	       673	shallow.c	FUNCTION_25
0x4002310	          0xc1f805	                              sar eax, 5	       673	shallow.c	FUNCTION_25
0x4002313	          0x8945c4	             mov dword [rbp - 0x3c], eax	       673	shallow.c	FUNCTION_25
0x4002316	      0xbf00000000	                              mov edi, 0	       676	shallow.c	FUNCTION_25
0x400231b	      0xe873deffff	                  call sym.trace_pass_fl	       676	shallow.c	FUNCTION_25
0x4002320	            0x85c0	                           test eax, eax	       676	shallow.c	FUNCTION_25
0x4002322	            0x741e	                            je 0x4002342	       676	shallow.c	FUNCTION_25
0x4002324	      0xb900000000	                              mov ecx, 0	       676	shallow.c	FUNCTION_25
0x4002329	      0xba00000000	                              mov edx, 0	       676	shallow.c	FUNCTION_25
0x400232e	      0xbea4020000	                          mov esi, 0x2a4	       676	shallow.c	FUNCTION_25
0x4002333	      0xbf00000000	                              mov edi, 0	       676	shallow.c	FUNCTION_25
0x4002338	      0xb800000000	                              mov eax, 0	       676	shallow.c	FUNCTION_25
0x400233d	      0xe800000000	                          call 0x4002342	       676	shallow.c	FUNCTION_25
0x4002342	      0x48837d9800	               cmp qword [rbp - 0x68], 0	       677	shallow.c	FUNCTION_25	IF_1
0x4002347	            0x7426	                            je 0x400236f	       677	shallow.c	FUNCTION_25	IF_1
0x4002349	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       678	shallow.c	FUNCTION_25	CALL_1
0x400234d	        0x488b4028	            mov rax, qword [rax + 0x28] 	       678	shallow.c	FUNCTION_25	CALL_1
0x4002351	          0x8b4008	                mov eax, dword [rax + 8]	       678	shallow.c	FUNCTION_25	CALL_1
0x4002354	            0x4898	                                    cdqe	       678	shallow.c	FUNCTION_25	CALL_1
0x4002356	    0x488d14850000	                        lea rdx, [rax*4]	       678	shallow.c	FUNCTION_25	CALL_1
0x400235e	        0x488b4598	             mov rax, qword [rbp - 0x68]	       678	shallow.c	FUNCTION_25	CALL_1
0x4002362	      0xbe00000000	                              mov esi, 0	       678	shallow.c	FUNCTION_25	CALL_1
0x4002367	          0x4889c7	                            mov rdi, rax	       678	shallow.c	FUNCTION_25	CALL_1
0x400236a	      0xe800000000	                          call 0x400236f	       678	shallow.c	FUNCTION_25	CALL_1
0x400236f	    0xc745b8000000	               mov dword [rbp - 0x48], 0	       681	shallow.c	FUNCTION_25	FOR_1
0x4002376	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       681	shallow.c	FUNCTION_25	FOR_1
0x4002379	          0x8945bc	             mov dword [rbp - 0x44], eax	       681	shallow.c	FUNCTION_25	FOR_1
0x400237c	      0xe9f3000000	                           jmp 0x4002474	       681	shallow.c	FUNCTION_25	FOR_1
0x4002381	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       682	shallow.c	FUNCTION_25	FOR_1	IF_2
0x4002384	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	       682	shallow.c	FUNCTION_25	FOR_1	IF_2
0x4002387	            0x742e	                            je 0x40023b7	       682	shallow.c	FUNCTION_25	FOR_1	IF_2
0x4002389	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x400238d	        0x488b4018	            mov rax, qword [rax + 0x18] 	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x4002391	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x4002394	          0x4863d2	                         movsxd rdx, edx	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x4002397	        0x48c1e202	                              shl rdx, 2	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x400239b	          0x4801c2	                            add rdx, rax	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x400239e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x40023a2	        0x488b4018	            mov rax, qword [rax + 0x18] 	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x40023a6	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x40023a9	          0x4863c9	                         movsxd rcx, ecx	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x40023ac	        0x48c1e102	                              shl rcx, 2	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x40023b0	          0x4801c8	                            add rax, rcx	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x40023b3	            0x8b00	                    mov eax, dword [rax]	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x40023b5	            0x8902	                    mov dword [rdx], eax	       683	shallow.c	FUNCTION_25	FOR_1	IF_2
0x40023b7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       684	shallow.c	FUNCTION_25	FOR_1	CALL_2
0x40023bb	        0x488b4018	            mov rax, qword [rax + 0x18] 	       684	shallow.c	FUNCTION_25	FOR_1	CALL_2
0x40023bf	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       684	shallow.c	FUNCTION_25	FOR_1	CALL_2
0x40023c2	          0x4863d2	                         movsxd rdx, edx	       684	shallow.c	FUNCTION_25	FOR_1	CALL_2
0x40023c5	        0x48c1e202	                              shl rdx, 2	       684	shallow.c	FUNCTION_25	FOR_1	CALL_2
0x40023c9	          0x4801d0	                            add rax, rdx	       684	shallow.c	FUNCTION_25	FOR_1	CALL_2
0x40023cc	            0x8b00	                    mov eax, dword [rax]	       684	shallow.c	FUNCTION_25	FOR_1	CALL_2
0x40023ce	          0x4863d0	                         movsxd rdx, eax	       684	shallow.c	FUNCTION_25	FOR_1	CALL_2
0x40023d1	          0x4889d0	                            mov rax, rdx	       684	shallow.c	FUNCTION_25	FOR_1	CALL_2
0x40023d4	        0x48c1e002	                              shl rax, 2	       684	shallow.c	FUNCTION_25	FOR_1	CALL_2
0x40023d8	          0x4801d0	                            add rax, rdx	       684	shallow.c	FUNCTION_25	FOR_1	CALL_2
0x40023db	        0x48c1e002	                              shl rax, 2	       684	shallow.c	FUNCTION_25	FOR_1	CALL_2
0x40023df	          0x4889c2	                            mov rdx, rax	       684	shallow.c	FUNCTION_25	FOR_1	CALL_2
0x40023e2	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       684	shallow.c	FUNCTION_25	FOR_1	CALL_2
0x40023e6	          0x4801d0	                            add rax, rdx	       684	shallow.c	FUNCTION_25	FOR_1	CALL_2
0x40023e9	          0x4889c7	                            mov rdi, rax	       684	shallow.c	FUNCTION_25	FOR_1	CALL_2
0x40023ec	      0xe800000000	                          call 0x40023f1	       684	shallow.c	FUNCTION_25	FOR_1	CALL_2
0x40023f1	        0x488945d0	             mov qword [rbp - 0x30], rax	       684	shallow.c	FUNCTION_25	FOR_1	CALL_2
0x40023f5	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       685	shallow.c	FUNCTION_25	FOR_1	CALL_3
0x40023f9	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       685	shallow.c	FUNCTION_25	FOR_1	CALL_3
0x40023fd	          0x4889d6	                            mov rsi, rdx	       685	shallow.c	FUNCTION_25	FOR_1	CALL_3
0x4002400	          0x4889c7	                            mov rdi, rax	       685	shallow.c	FUNCTION_25	FOR_1	CALL_3
0x4002403	      0xe87bf2ffff	                  call sym.ref_bitmap_at	       685	shallow.c	FUNCTION_25	FOR_1	CALL_3
0x4002408	        0x488945d8	             mov qword [rbp - 0x28], rax	       685	shallow.c	FUNCTION_25	FOR_1	CALL_3
0x400240c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       686	shallow.c	FUNCTION_25	FOR_1	IF_3
0x4002410	          0x488b00	                    mov rax, qword [rax]	       686	shallow.c	FUNCTION_25	FOR_1	IF_3
0x4002413	          0x4885c0	                           test rax, rax	       686	shallow.c	FUNCTION_25	FOR_1	IF_3
0x4002416	            0x7457	                            je 0x400246f	       686	shallow.c	FUNCTION_25	FOR_1	IF_3
0x4002418	    0xc745c0000000	               mov dword [rbp - 0x40], 0	       688	shallow.c	FUNCTION_25	FOR_1	FOR_2
0x400241f	            0xeb44	                           jmp 0x4002465	       688	shallow.c	FUNCTION_25	FOR_1	FOR_2
0x4002421	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x4002425	          0x488b00	                    mov rax, qword [rax]	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x4002428	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x400242b	          0x4863d2	                         movsxd rdx, edx	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x400242e	        0x48c1e202	                              shl rdx, 2	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x4002432	          0x4801d0	                            add rax, rdx	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x4002435	            0x8b00	                    mov eax, dword [rax]	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x4002437	            0x85c0	                           test eax, eax	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x4002439	            0x7426	                            je 0x4002461	       689	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x400243b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       690	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4	CALL_4
0x400243f	          0x488b10	                    mov rdx, qword [rax]	       690	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4	CALL_4
0x4002442	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       690	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4	CALL_4
0x4002446	        0x488b4028	            mov rax, qword [rax + 0x28] 	       690	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4	CALL_4
0x400244a	          0x8b4808	                mov ecx, dword [rax + 8]	       690	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4	CALL_4
0x400244d	        0x488b4598	             mov rax, qword [rbp - 0x68]	       690	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4	CALL_4
0x4002451	            0x89ce	                            mov esi, ecx	       690	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4	CALL_4
0x4002453	          0x4889c7	                            mov rdi, rax	       690	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4	CALL_4
0x4002456	      0xe8f5fdffff	               call sym.update_refstatus	       690	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4	CALL_4
0x400245b	        0x8345b801	               add dword [rbp - 0x48], 1	       691	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x400245f	            0xeb0f	                           jmp 0x4002470	       692	shallow.c	FUNCTION_25	FOR_1	FOR_2	IF_4
0x4002461	        0x8345c001	               add dword [rbp - 0x40], 1	       688	shallow.c	FUNCTION_25	FOR_1	FOR_2
0x4002465	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       688	shallow.c	FUNCTION_25	FOR_1	FOR_2
0x4002468	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	       688	shallow.c	FUNCTION_25	FOR_1	FOR_2
0x400246b	            0x7cb4	                            jl 0x4002421	       688	shallow.c	FUNCTION_25	FOR_1	FOR_2
0x400246d	            0xeb01	                           jmp 0x4002470	       688	shallow.c	FUNCTION_25	FOR_1	FOR_2
0x400246f	              0x90	                                     nop	       687	shallow.c	FUNCTION_25	FOR_1	IF_3
0x4002470	        0x8345bc01	               add dword [rbp - 0x44], 1	       681	shallow.c	FUNCTION_25	FOR_1
0x4002474	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       681	shallow.c	FUNCTION_25	FOR_1
0x4002478	          0x8b4020	            mov eax, dword [rax + 0x20] 	       681	shallow.c	FUNCTION_25	FOR_1
0x400247b	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	       681	shallow.c	FUNCTION_25	FOR_1
0x400247e	     0xf8ffdfeffff	                            jg 0x4002381	       681	shallow.c	FUNCTION_25	FOR_1
0x4002484	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       695	shallow.c	FUNCTION_25
0x4002488	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       695	shallow.c	FUNCTION_25
0x400248b	          0x895020	             mov dword [rax + 0x20], edx	       695	shallow.c	FUNCTION_25
0x400248e	        0x488d45e0	                   lea rax, [rbp - 0x20]	       697	shallow.c	FUNCTION_25	CALL_5
0x4002492	      0xba10000000	                           mov edx, 0x10	       697	shallow.c	FUNCTION_25	CALL_5
0x4002497	      0xbe00000000	                              mov esi, 0	       697	shallow.c	FUNCTION_25	CALL_5
0x400249c	          0x4889c7	                            mov rdi, rax	       697	shallow.c	FUNCTION_25	CALL_5
0x400249f	      0xe800000000	                          call 0x40024a4	       697	shallow.c	FUNCTION_25	CALL_5
0x40024a4	        0x488d45e0	                   lea rax, [rbp - 0x20]	       698	shallow.c	FUNCTION_25	CALL_6
0x40024a8	          0x4889c6	                            mov rsi, rax	       698	shallow.c	FUNCTION_25	CALL_6
0x40024ab	      0xbf00000000	                              mov edi, 0	       698	shallow.c	FUNCTION_25	CALL_6
0x40024b0	      0xe800000000	                          call 0x40024b5	       698	shallow.c	FUNCTION_25	CALL_6
0x40024b5	        0x488d45e0	                   lea rax, [rbp - 0x20]	       699	shallow.c	FUNCTION_25	CALL_7
0x40024b9	          0x4889c6	                            mov rsi, rax	       699	shallow.c	FUNCTION_25	CALL_7
0x40024bc	      0xbf00000000	                              mov edi, 0	       699	shallow.c	FUNCTION_25	CALL_7
0x40024c1	      0xe800000000	                          call 0x40024c6	       699	shallow.c	FUNCTION_25	CALL_7
0x40024c6	    0xc745b8000000	               mov dword [rbp - 0x48], 0	       702	shallow.c	FUNCTION_25	FOR_3
0x40024cd	          0x8b45b8	             mov eax, dword [rbp - 0x48]	       702	shallow.c	FUNCTION_25	FOR_3
0x40024d0	          0x8945bc	             mov dword [rbp - 0x44], eax	       702	shallow.c	FUNCTION_25	FOR_3
0x40024d3	      0xe90c010000	                           jmp 0x40025e4	       702	shallow.c	FUNCTION_25	FOR_3
0x40024d8	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       703	shallow.c	FUNCTION_25	FOR_3	IF_5
0x40024db	          0x3b45b8	             cmp eax, dword [rbp - 0x48]	       703	shallow.c	FUNCTION_25	FOR_3	IF_5
0x40024de	            0x742e	                            je 0x400250e	       703	shallow.c	FUNCTION_25	FOR_3	IF_5
0x40024e0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x40024e4	        0x488b4008	                mov rax, qword [rax + 8]	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x40024e8	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x40024eb	          0x4863d2	                         movsxd rdx, edx	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x40024ee	        0x48c1e202	                              shl rdx, 2	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x40024f2	          0x4801c2	                            add rdx, rax	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x40024f5	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x40024f9	        0x488b4008	                mov rax, qword [rax + 8]	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x40024fd	          0x8b4dbc	             mov ecx, dword [rbp - 0x44]	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x4002500	          0x4863c9	                         movsxd rcx, ecx	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x4002503	        0x48c1e102	                              shl rcx, 2	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x4002507	          0x4801c8	                            add rax, rcx	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x400250a	            0x8b00	                    mov eax, dword [rax]	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x400250c	            0x8902	                    mov dword [rdx], eax	       704	shallow.c	FUNCTION_25	FOR_3	IF_5
0x400250e	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       705	shallow.c	FUNCTION_25	FOR_3	CALL_8
0x4002512	        0x488b4008	                mov rax, qword [rax + 8]	       705	shallow.c	FUNCTION_25	FOR_3	CALL_8
0x4002516	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       705	shallow.c	FUNCTION_25	FOR_3	CALL_8
0x4002519	          0x4863d2	                         movsxd rdx, edx	       705	shallow.c	FUNCTION_25	FOR_3	CALL_8
0x400251c	        0x48c1e202	                              shl rdx, 2	       705	shallow.c	FUNCTION_25	FOR_3	CALL_8
0x4002520	          0x4801d0	                            add rax, rdx	       705	shallow.c	FUNCTION_25	FOR_3	CALL_8
0x4002523	            0x8b00	                    mov eax, dword [rax]	       705	shallow.c	FUNCTION_25	FOR_3	CALL_8
0x4002525	          0x4863d0	                         movsxd rdx, eax	       705	shallow.c	FUNCTION_25	FOR_3	CALL_8
0x4002528	          0x4889d0	                            mov rax, rdx	       705	shallow.c	FUNCTION_25	FOR_3	CALL_8
0x400252b	        0x48c1e002	                              shl rax, 2	       705	shallow.c	FUNCTION_25	FOR_3	CALL_8
0x400252f	          0x4801d0	                            add rax, rdx	       705	shallow.c	FUNCTION_25	FOR_3	CALL_8
0x4002532	        0x48c1e002	                              shl rax, 2	       705	shallow.c	FUNCTION_25	FOR_3	CALL_8
0x4002536	          0x4889c2	                            mov rdx, rax	       705	shallow.c	FUNCTION_25	FOR_3	CALL_8
0x4002539	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       705	shallow.c	FUNCTION_25	FOR_3	CALL_8
0x400253d	          0x4801d0	                            add rax, rdx	       705	shallow.c	FUNCTION_25	FOR_3	CALL_8
0x4002540	          0x4889c7	                            mov rdi, rax	       705	shallow.c	FUNCTION_25	FOR_3	CALL_8
0x4002543	      0xe800000000	                          call 0x4002548	       705	shallow.c	FUNCTION_25	FOR_3	CALL_8
0x4002548	        0x488945d0	             mov qword [rbp - 0x30], rax	       705	shallow.c	FUNCTION_25	FOR_3	CALL_8
0x400254c	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	       706	shallow.c	FUNCTION_25	FOR_3	CALL_9
0x4002550	        0x488b45a0	             mov rax, qword [rbp - 0x60]	       706	shallow.c	FUNCTION_25	FOR_3	CALL_9
0x4002554	          0x4889d6	                            mov rsi, rdx	       706	shallow.c	FUNCTION_25	FOR_3	CALL_9
0x4002557	          0x4889c7	                            mov rdi, rax	       706	shallow.c	FUNCTION_25	FOR_3	CALL_9
0x400255a	      0xe824f1ffff	                  call sym.ref_bitmap_at	       706	shallow.c	FUNCTION_25	FOR_3	CALL_9
0x400255f	        0x488945d8	             mov qword [rbp - 0x28], rax	       706	shallow.c	FUNCTION_25	FOR_3	CALL_9
0x4002563	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       707	shallow.c	FUNCTION_25	FOR_3	IF_6
0x4002567	          0x488b00	                    mov rax, qword [rax]	       707	shallow.c	FUNCTION_25	FOR_3	IF_6
0x400256a	          0x4885c0	                           test rax, rax	       707	shallow.c	FUNCTION_25	FOR_3	IF_6
0x400256d	            0x7470	                            je 0x40025df	       707	shallow.c	FUNCTION_25	FOR_3	IF_6
0x400256f	    0xc745c0000000	               mov dword [rbp - 0x40], 0	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x4002576	            0xeb5d	                           jmp 0x40025d5	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x4002578	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x400257c	          0x488b00	                    mov rax, qword [rax]	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x400257f	          0x8b55c0	             mov edx, dword [rbp - 0x40]	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x4002582	          0x4863d2	                         movsxd rdx, edx	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x4002585	        0x48c1e202	                              shl rdx, 2	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x4002589	          0x4801d0	                            add rax, rdx	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x400258c	            0x8b00	                    mov eax, dword [rax]	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x400258e	            0x85c0	                           test eax, eax	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x4002590	            0x743f	                            je 0x40025d1	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x4002592	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       712	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_10
0x4002596	          0x8b4de8	             mov ecx, dword [rbp - 0x18]	       712	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_10
0x4002599	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       712	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_10
0x400259d	            0x89ce	                            mov esi, ecx	       712	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_10
0x400259f	          0x4889c7	                            mov rdi, rax	       712	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_10
0x40025a2	      0xe800000000	                          call 0x40025a7	       712	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_10
0x40025a7	            0x85c0	                           test eax, eax	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x40025a9	            0x7526	                           jne 0x40025d1	       710	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x40025ab	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       713	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_11
0x40025af	          0x488b10	                    mov rdx, qword [rax]	       713	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_11
0x40025b2	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       713	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_11
0x40025b6	        0x488b4028	            mov rax, qword [rax + 0x28] 	       713	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_11
0x40025ba	          0x8b4808	                mov ecx, dword [rax + 8]	       713	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_11
0x40025bd	        0x488b4598	             mov rax, qword [rbp - 0x68]	       713	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_11
0x40025c1	            0x89ce	                            mov esi, ecx	       713	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_11
0x40025c3	          0x4889c7	                            mov rdi, rax	       713	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_11
0x40025c6	      0xe885fcffff	               call sym.update_refstatus	       713	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7	CALL_11
0x40025cb	        0x8345b801	               add dword [rbp - 0x48], 1	       714	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x40025cf	            0xeb0f	                           jmp 0x40025e0	       715	shallow.c	FUNCTION_25	FOR_3	FOR_4	IF_7
0x40025d1	        0x8345c001	               add dword [rbp - 0x40], 1	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x40025d5	          0x8b45c0	             mov eax, dword [rbp - 0x40]	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x40025d8	          0x3b45c4	             cmp eax, dword [rbp - 0x3c]	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x40025db	            0x7c9b	                            jl 0x4002578	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x40025dd	            0xeb01	                           jmp 0x40025e0	       709	shallow.c	FUNCTION_25	FOR_3	FOR_4
0x40025df	              0x90	                                     nop	       708	shallow.c	FUNCTION_25	FOR_3	IF_6
0x40025e0	        0x8345bc01	               add dword [rbp - 0x44], 1	       702	shallow.c	FUNCTION_25	FOR_3
0x40025e4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       702	shallow.c	FUNCTION_25	FOR_3
0x40025e8	          0x8b4010	            mov eax, dword [rax + 0x10] 	       702	shallow.c	FUNCTION_25	FOR_3
0x40025eb	          0x3b45bc	             cmp eax, dword [rbp - 0x44]	       702	shallow.c	FUNCTION_25	FOR_3
0x40025ee	     0xf8fe4feffff	                            jg 0x40024d8	       702	shallow.c	FUNCTION_25	FOR_3
0x40025f4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       718	shallow.c	FUNCTION_25
0x40025f8	          0x8b55b8	             mov edx, dword [rbp - 0x48]	       718	shallow.c	FUNCTION_25
0x40025fb	          0x895010	             mov dword [rax + 0x10], edx	       718	shallow.c	FUNCTION_25
0x40025fe	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       720	shallow.c	FUNCTION_25	CALL_12
0x4002602	          0x4889c7	                            mov rdi, rax	       720	shallow.c	FUNCTION_25	CALL_12
0x4002605	      0xe800000000	                          call 0x400260a	       720	shallow.c	FUNCTION_25	CALL_12
0x400260a	              0x90	                                     nop	       721	shallow.c	FUNCTION_25
0x400260b	        0x488b45f8	                mov rax, qword [rbp - 8]	       721	shallow.c	FUNCTION_25
0x400260f	    0x644833042528	                xor rax, qword fs:[0x28]	       721	shallow.c	FUNCTION_25
0x4002618	            0x7405	                            je 0x400261f	       721	shallow.c	FUNCTION_25
0x400261a	      0xe800000000	                          call 0x400261f	       721	shallow.c	FUNCTION_25
0x400261f	              0xc9	                                   leave	       721	shallow.c	FUNCTION_25
0x4002620	              0xc3	                                     ret	       721	shallow.c	FUNCTION_25
get_shallow_commits	DO,0:ELSE,3:IF,8:CALL,9:SWITCH,0:functions,0:WHILE,1:FOR,1	210
0x40004f1	              0x55	                                push rbp	        79	shallow.c	FUNCTION_4
0x40004f2	          0x4889e5	                            mov rbp, rsp	        79	shallow.c	FUNCTION_4
0x40004f5	        0x4883c480	             add rsp, 0xffffffffffffff80	        79	shallow.c	FUNCTION_4
0x40004f9	        0x48897d98	             mov qword [rbp - 0x68], rdi	        79	shallow.c	FUNCTION_4
0x40004fd	          0x897594	             mov dword [rbp - 0x6c], esi	        79	shallow.c	FUNCTION_4
0x4000500	          0x895590	             mov dword [rbp - 0x70], edx	        79	shallow.c	FUNCTION_4
0x4000503	          0x894d8c	             mov dword [rbp - 0x74], ecx	        79	shallow.c	FUNCTION_4
0x4000506	    0x64488b042528	                mov rax, qword fs:[0x28]	        79	shallow.c	FUNCTION_4
0x400050f	        0x488945f8	                mov qword [rbp - 8], rax	        79	shallow.c	FUNCTION_4
0x4000513	            0x31c0	                            xor eax, eax	        79	shallow.c	FUNCTION_4
0x4000515	    0xc745a8000000	               mov dword [rbp - 0x58], 0	        80	shallow.c	FUNCTION_4
0x400051c	    0xc745ac000000	               mov dword [rbp - 0x54], 0	        80	shallow.c	FUNCTION_4
0x4000523	    0x48c745b00000	               mov qword [rbp - 0x50], 0	        81	shallow.c	FUNCTION_4
0x400052b	    0xc745e0000000	               mov dword [rbp - 0x20], 0	        82	shallow.c	FUNCTION_4
0x4000532	    0xc745e4000000	               mov dword [rbp - 0x1c], 0	        82	shallow.c	FUNCTION_4
0x4000539	    0x48c745e80000	               mov qword [rbp - 0x18], 0	        82	shallow.c	FUNCTION_4
0x4000541	    0x48c745b80000	               mov qword [rbp - 0x48], 0	        83	shallow.c	FUNCTION_4
0x4000549	      0xe981020000	                           jmp 0x40007cf	        86	shallow.c	FUNCTION_4	WHILE_1
0x400054e	      0x48837db800	               cmp qword [rbp - 0x48], 0	        88	shallow.c	FUNCTION_4	WHILE_1	IF_1
0x4000553	     0xf85bc000000	                           jne 0x4000615	        88	shallow.c	FUNCTION_4	WHILE_1	IF_1
0x4000559	        0x488b4598	             mov rax, qword [rbp - 0x68]	        89	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x400055d	            0x8b10	                    mov edx, dword [rax]	        89	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x400055f	          0x8b45a8	             mov eax, dword [rbp - 0x58]	        89	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x4000562	            0x39c2	                            cmp edx, eax	        89	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x4000564	     0xf868e000000	                           jbe 0x40005f8	        89	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x400056a	        0x488b4598	             mov rax, qword [rbp - 0x68]	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x400056e	        0x488b4808	                mov rcx, qword [rax + 8]	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x4000572	          0x8b45a8	             mov eax, dword [rbp - 0x58]	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x4000575	          0x8d5001	                      lea edx, [rax + 1]	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x4000578	          0x8955a8	             mov dword [rbp - 0x58], edx	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x400057b	            0x4898	                                    cdqe	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x400057d	        0x48c1e005	                              shl rax, 5	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x4000581	          0x4801c8	                            add rax, rcx	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x4000584	          0x488b00	                    mov rax, qword [rax]	        91	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_1
0x4000587	      0xba00000000	                              mov edx, 0	        90	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x400058c	      0xbe00000000	                              mov esi, 0	        90	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x4000591	          0x4889c7	                            mov rdi, rax	        90	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x4000594	      0xe800000000	                          call 0x4000599	        90	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x4000599	        0x488945b8	             mov qword [rbp - 0x48], rax	        90	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x400059d	      0x48837db800	               cmp qword [rbp - 0x48], 0	        92	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x40005a2	            0x740e	                            je 0x40005b2	        92	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x40005a4	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        92	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x40005a8	           0xfb600	                   movzx eax, byte [rax]	        92	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x40005ab	          0x83e00e	                            and eax, 0xe	        92	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x40005ae	            0x3c02	                               cmp al, 2	        92	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x40005b0	            0x740d	                            je 0x40005bf	        92	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x40005b2	    0x48c745b80000	               mov qword [rbp - 0x48], 0	        93	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x40005ba	      0xe910020000	                           jmp 0x40007cf	        94	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_3
0x40005bf	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        96	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_4
0x40005c3	        0x488b4018	            mov rax, qword [rax + 0x18] 	        96	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_4
0x40005c7	          0x4885c0	                           test rax, rax	        96	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_4
0x40005ca	            0x7515	                           jne 0x40005e1	        96	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	IF_4
0x40005cc	      0xbf04000000	                              mov edi, 4	        97	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_2
0x40005d1	      0xe800000000	                          call 0x40005d6	        97	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_2
0x40005d6	          0x4889c2	                            mov rdx, rax	        97	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_2
0x40005d9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        97	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_2
0x40005dd	        0x48895018	             mov qword [rax + 0x18], rdx	        97	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2	CALL_2
0x40005e1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        98	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x40005e5	        0x488b4018	            mov rax, qword [rax + 0x18] 	        98	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x40005e9	    0xc70000000000	                      mov dword [rax], 0	        98	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x40005ef	    0xc745ac000000	               mov dword [rbp - 0x54], 0	        99	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x40005f6	            0xeb1d	                           jmp 0x4000615	        99	shallow.c	FUNCTION_4	WHILE_1	IF_1	IF_2
0x40005f8	        0x488d45e0	                   lea rax, [rbp - 0x20]	       101	shallow.c	FUNCTION_4	WHILE_1	IF_1	ELSE_1
0x40005fc	          0x4889c7	                            mov rdi, rax	       101	shallow.c	FUNCTION_4	WHILE_1	IF_1	ELSE_1
0x40005ff	      0xe800000000	                          call 0x4000604	       101	shallow.c	FUNCTION_4	WHILE_1	IF_1	ELSE_1
0x4000604	        0x488945b8	             mov qword [rbp - 0x48], rax	       101	shallow.c	FUNCTION_4	WHILE_1	IF_1	ELSE_1
0x4000608	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       103	shallow.c	FUNCTION_4	WHILE_1	IF_1	ELSE_1
0x400060c	        0x488b4018	            mov rax, qword [rax + 0x18] 	       103	shallow.c	FUNCTION_4	WHILE_1	IF_1	ELSE_1
0x4000610	            0x8b00	                    mov eax, dword [rax]	       103	shallow.c	FUNCTION_4	WHILE_1	IF_1	ELSE_1
0x4000612	          0x8945ac	             mov dword [rbp - 0x54], eax	       103	shallow.c	FUNCTION_4	WHILE_1	IF_1	ELSE_1
0x4000615	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       106	shallow.c	FUNCTION_4	WHILE_1	CALL_4
0x4000619	          0x4889c7	                            mov rdi, rax	       106	shallow.c	FUNCTION_4	WHILE_1	CALL_4
0x400061c	      0xe800000000	                          call 0x4000621	       106	shallow.c	FUNCTION_4	WHILE_1	CALL_4
0x4000621	        0x8345ac01	               add dword [rbp - 0x54], 1	       107	shallow.c	FUNCTION_4	WHILE_1
0x4000625	    0x817d94ffffff	     cmp dword [rbp - 0x6c], 0x7fffffff 	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x400062c	            0x7408	                            je 0x4000636	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x400062e	          0x8b45ac	             mov eax, dword [rbp - 0x54]	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x4000631	          0x3b4594	             cmp eax, dword [rbp - 0x6c]	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x4000634	            0x7d40	                           jge 0x4000676	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x4000636	      0xe800000000	                          call 0x400063b	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x400063b	            0x85c0	                           test eax, eax	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x400063d	     0xf8486000000	                            je 0x40006c9	       108	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x4000643	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x4000647	        0x488b4030	            mov rax, qword [rax + 0x30] 	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x400064b	          0x4885c0	                           test rax, rax	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x400064e	            0x7579	                           jne 0x40006c9	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x4000650	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       110	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_6
0x4000654	        0x4883c004	                              add rax, 4	       110	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_6
0x4000658	          0x4889c7	                            mov rdi, rax	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x400065b	      0xe800000000	                          call 0x4000660	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x4000660	        0x488945c8	             mov qword [rbp - 0x38], rax	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x4000664	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x4000669	            0x745e	                            je 0x40006c9	       109	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_5
0x400066b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       111	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x400066f	          0x8b4014	            mov eax, dword [rax + 0x14] 	       111	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x4000672	            0x85c0	                           test eax, eax	       110	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_6
0x4000674	            0x7953	                           jns 0x40006c9	       110	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_6
0x4000676	        0x488d55b0	                   lea rdx, [rbp - 0x50]	       112	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_7
0x400067a	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       112	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_7
0x400067e	          0x4889d6	                            mov rsi, rdx	       112	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_7
0x4000681	          0x4889c7	                            mov rdi, rax	       112	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_7
0x4000684	      0xe800000000	                          call 0x4000689	       112	shallow.c	FUNCTION_4	WHILE_1	IF_5	CALL_7
0x4000689	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x400068d	            0x8b00	                    mov eax, dword [rax]	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x400068f	          0xc1e804	                              shr eax, 4	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x4000692	      0x25ffffff07	                      and eax, 0x7ffffff	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x4000697	           0xb4590	              or eax, dword [rbp - 0x70]	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x400069a	      0x25ffffff07	                      and eax, 0x7ffffff	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x400069f	            0x89c2	                            mov edx, eax	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40006a1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40006a5	    0x81e2ffffff07	                      and edx, 0x7ffffff	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40006ab	            0x89d1	                            mov ecx, edx	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40006ad	          0xc1e104	                              shl ecx, 4	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40006b0	            0x8b10	                    mov edx, dword [rax]	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40006b2	    0x81e20f000080	                     and edx, 0x8000000f	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40006b8	             0x9ca	                             or edx, ecx	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40006ba	            0x8910	                    mov dword [rax], edx	       113	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40006bc	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       114	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40006c4	      0xe906010000	                           jmp 0x40007cf	       115	shallow.c	FUNCTION_4	WHILE_1	IF_5
0x40006c9	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       117	shallow.c	FUNCTION_4	WHILE_1
0x40006cd	            0x8b00	                    mov eax, dword [rax]	       117	shallow.c	FUNCTION_4	WHILE_1
0x40006cf	          0xc1e804	                              shr eax, 4	       117	shallow.c	FUNCTION_4	WHILE_1
0x40006d2	      0x25ffffff07	                      and eax, 0x7ffffff	       117	shallow.c	FUNCTION_4	WHILE_1
0x40006d7	           0xb458c	              or eax, dword [rbp - 0x74]	       117	shallow.c	FUNCTION_4	WHILE_1
0x40006da	      0x25ffffff07	                      and eax, 0x7ffffff	       117	shallow.c	FUNCTION_4	WHILE_1
0x40006df	            0x89c2	                            mov edx, eax	       117	shallow.c	FUNCTION_4	WHILE_1
0x40006e1	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       117	shallow.c	FUNCTION_4	WHILE_1
0x40006e5	    0x81e2ffffff07	                      and edx, 0x7ffffff	       117	shallow.c	FUNCTION_4	WHILE_1
0x40006eb	            0x89d1	                            mov ecx, edx	       117	shallow.c	FUNCTION_4	WHILE_1
0x40006ed	          0xc1e104	                              shl ecx, 4	       117	shallow.c	FUNCTION_4	WHILE_1
0x40006f0	            0x8b10	                    mov edx, dword [rax]	       117	shallow.c	FUNCTION_4	WHILE_1
0x40006f2	    0x81e20f000080	                     and edx, 0x8000000f	       117	shallow.c	FUNCTION_4	WHILE_1
0x40006f8	             0x9ca	                             or edx, ecx	       117	shallow.c	FUNCTION_4	WHILE_1
0x40006fa	            0x8910	                    mov dword [rax], edx	       117	shallow.c	FUNCTION_4	WHILE_1
0x40006fc	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x4000700	        0x488b4030	            mov rax, qword [rax + 0x30] 	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x4000704	        0x488945c0	             mov qword [rbp - 0x40], rax	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x4000708	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x4000710	      0xe9af000000	                           jmp 0x40007c4	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x4000715	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       119	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x4000719	          0x488b00	                    mov rax, qword [rax]	       119	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x400071c	        0x488b4018	            mov rax, qword [rax + 0x18] 	       119	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x4000720	          0x4885c0	                           test rax, rax	       119	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x4000723	            0x7528	                           jne 0x400074d	       119	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x4000725	      0xbf04000000	                              mov edi, 4	       120	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6	CALL_8
0x400072a	      0xe800000000	                          call 0x400072f	       120	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6	CALL_8
0x400072f	        0x488945d8	             mov qword [rbp - 0x28], rax	       120	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6	CALL_8
0x4000733	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       121	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x4000737	          0x488b00	                    mov rax, qword [rax]	       121	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x400073a	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       121	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x400073e	        0x48895018	             mov qword [rax + 0x18], rdx	       121	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x4000742	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       122	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x4000746	          0x8b55ac	             mov edx, dword [rbp - 0x54]	       122	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x4000749	            0x8910	                    mov dword [rax], edx	       122	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x400074b	            0xeb23	                           jmp 0x4000770	       122	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_6
0x400074d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       124	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_2
0x4000751	          0x488b00	                    mov rax, qword [rax]	       124	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_2
0x4000754	        0x488b4018	            mov rax, qword [rax + 0x18] 	       124	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_2
0x4000758	        0x488945d0	             mov qword [rbp - 0x30], rax	       124	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_2
0x400075c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       125	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_2	IF_7
0x4000760	            0x8b00	                    mov eax, dword [rax]	       125	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_2	IF_7
0x4000762	          0x3b45ac	             cmp eax, dword [rbp - 0x54]	       125	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_2	IF_7
0x4000765	            0x7e50	                           jle 0x40007b7	       125	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_2	IF_7
0x4000767	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       127	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_2
0x400076b	          0x8b55ac	             mov edx, dword [rbp - 0x54]	       127	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_2
0x400076e	            0x8910	                    mov dword [rax], edx	       127	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_2
0x4000770	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       129	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8
0x4000774	        0x488b4008	                mov rax, qword [rax + 8]	       129	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8
0x4000778	          0x4885c0	                           test rax, rax	       129	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8
0x400077b	            0x7420	                            je 0x400079d	       129	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8
0x400077d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       130	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8	CALL_9
0x4000781	          0x488b00	                    mov rax, qword [rax]	       130	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8	CALL_9
0x4000784	          0x4889c1	                            mov rcx, rax	       130	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8	CALL_9
0x4000787	        0x488d45e0	                   lea rax, [rbp - 0x20]	       130	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8	CALL_9
0x400078b	          0x4889c2	                            mov rdx, rax	       130	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8	CALL_9
0x400078e	      0xbe00000000	                              mov esi, 0	       130	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8	CALL_9
0x4000793	          0x4889cf	                            mov rdi, rcx	       130	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8	CALL_9
0x4000796	      0xe800000000	                          call 0x400079b	       130	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8	CALL_9
0x400079b	            0xeb1b	                           jmp 0x40007b8	       130	shallow.c	FUNCTION_4	WHILE_1	FOR_1	IF_8	CALL_9
0x400079d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       133	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_3
0x40007a1	          0x488b00	                    mov rax, qword [rax]	       133	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_3
0x40007a4	        0x488945b8	             mov qword [rbp - 0x48], rax	       133	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_3
0x40007a8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       134	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_3
0x40007ac	        0x488b4018	            mov rax, qword [rax + 0x18] 	       134	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_3
0x40007b0	            0x8b00	                    mov eax, dword [rax]	       134	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_3
0x40007b2	          0x8945ac	             mov dword [rbp - 0x54], eax	       134	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_3
0x40007b5	            0xeb01	                           jmp 0x40007b8	       134	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_3
0x40007b7	              0x90	                                     nop	       126	shallow.c	FUNCTION_4	WHILE_1	FOR_1	ELSE_2	IF_7
0x40007b8	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x40007bc	        0x488b4008	                mov rax, qword [rax + 8]	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x40007c0	        0x488945c0	             mov qword [rbp - 0x40], rax	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x40007c4	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x40007c9	     0xf8546ffffff	                           jne 0x4000715	       118	shallow.c	FUNCTION_4	WHILE_1	FOR_1
0x40007cf	      0x48837db800	               cmp qword [rbp - 0x48], 0	        86	shallow.c	FUNCTION_4	WHILE_1
0x40007d4	     0xf8574fdffff	                           jne 0x400054e	        86	shallow.c	FUNCTION_4	WHILE_1
0x40007da	        0x488b4598	             mov rax, qword [rbp - 0x68]	        86	shallow.c	FUNCTION_4	WHILE_1
0x40007de	            0x8b10	                    mov edx, dword [rax]	        86	shallow.c	FUNCTION_4	WHILE_1
0x40007e0	          0x8b45a8	             mov eax, dword [rbp - 0x58]	        86	shallow.c	FUNCTION_4	WHILE_1
0x40007e3	            0x39c2	                            cmp edx, eax	        86	shallow.c	FUNCTION_4	WHILE_1
0x40007e5	     0xf8763fdffff	                            ja 0x400054e	        86	shallow.c	FUNCTION_4	WHILE_1
0x40007eb	          0x8b45e0	             mov eax, dword [rbp - 0x20]	        86	shallow.c	FUNCTION_4	WHILE_1
0x40007ee	            0x85c0	                           test eax, eax	        86	shallow.c	FUNCTION_4	WHILE_1
0x40007f0	     0xf8558fdffff	                           jne 0x400054e	        86	shallow.c	FUNCTION_4	WHILE_1
0x40007f6	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       139	shallow.c	FUNCTION_4
0x40007fa	        0x488b75f8	                mov rsi, qword [rbp - 8]	       140	shallow.c	FUNCTION_4
0x40007fe	    0x644833342528	                xor rsi, qword fs:[0x28]	       140	shallow.c	FUNCTION_4
0x4000807	            0x7405	                            je 0x400080e	       140	shallow.c	FUNCTION_4
0x4000809	      0xe800000000	                          call 0x400080e	       140	shallow.c	FUNCTION_4
0x400080e	              0xc9	                                   leave	       140	shallow.c	FUNCTION_4
0x400080f	              0xc3	                                     ret	       140	shallow.c	FUNCTION_4
st_mult	DO,0:ELSE,0:IF,1:CALL,1:SWITCH,0:functions,0:WHILE,0:FOR,0	22
0x4000040	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_97
0x4000041	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_97
0x4000044	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_97
0x4000048	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_97
0x400004c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_97
0x4000050	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_97	IF_1
0x4000055	            0x7430	                            je 0x4000087	       795	git-compat-util.h	FUNCTION_97	IF_1
0x4000057	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_97	IF_1
0x400005e	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_97	IF_1
0x4000063	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_97	IF_1
0x4000067	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_97	IF_1
0x400006b	            0x731a	                           jae 0x4000087	       795	git-compat-util.h	FUNCTION_97	IF_1
0x400006d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_97	IF_1	CALL_1
0x4000071	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_97	IF_1	CALL_1
0x4000075	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_97	IF_1	CALL_1
0x4000078	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_97	IF_1	CALL_1
0x400007d	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_97	IF_1	CALL_1
0x4000082	      0xe800000000	                          call 0x4000087	       796	git-compat-util.h	FUNCTION_97	IF_1	CALL_1
0x4000087	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_97
0x400008b	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_97
0x4000090	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_97
0x4000091	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_97
