check_offset_overflow	FOR,0:SWITCH,0:DO,0:WHILE,0:functions,0:CALL,4:ELSE,0:IF,2	22
0x4000040	        0x4883ec08	                              sub rsp, 8	        35	sliding_window.c	FUNCTION_4
0x4000044	          0x4885f6	                           test rsi, rsi	        36	sliding_window.c	FUNCTION_4	IF_1	CALL_1
0x4000047	            0x7916	                           jns 0x400005f	        36	sliding_window.c	FUNCTION_4	IF_1	CALL_1
0x4000049	      0xbf00000000	                              mov edi, 0	        37	sliding_window.c	FUNCTION_4	IF_1	CALL_2
0x400004e	      0xb800000000	                              mov eax, 0	        37	sliding_window.c	FUNCTION_4	IF_1	CALL_2
0x4000053	      0xe800000000	                          call 0x4000058	        37	sliding_window.c	FUNCTION_4	IF_1	CALL_2
0x4000058	      0xb8ffffffff	                     mov eax, 0xffffffff	        37	sliding_window.c	FUNCTION_4	IF_1	CALL_2
0x400005d	            0xeb33	                           jmp 0x4000092	        37	sliding_window.c	FUNCTION_4	IF_1	CALL_2
0x400005f	    0x48b8ffffffff	         movabs rax, 0x7fffffffffffffff 	        39	sliding_window.c	FUNCTION_4	IF_2	CALL_3
0x4000069	          0x4829f8	                            sub rax, rdi	        39	sliding_window.c	FUNCTION_4	IF_2	CALL_3
0x400006c	          0x4839c6	                            cmp rsi, rax	        39	sliding_window.c	FUNCTION_4	IF_2	CALL_3
0x400006f	            0x7e1c	                           jle 0x400008d	        39	sliding_window.c	FUNCTION_4	IF_2	CALL_3
0x4000071	          0x4889f2	                            mov rdx, rsi	        40	sliding_window.c	FUNCTION_4	IF_2	CALL_4
0x4000074	          0x4889fe	                            mov rsi, rdi	        40	sliding_window.c	FUNCTION_4	IF_2	CALL_4
0x4000077	      0xbf00000000	                              mov edi, 0	        40	sliding_window.c	FUNCTION_4	IF_2	CALL_4
0x400007c	      0xb800000000	                              mov eax, 0	        40	sliding_window.c	FUNCTION_4	IF_2	CALL_4
0x4000081	      0xe800000000	                          call 0x4000086	        40	sliding_window.c	FUNCTION_4	IF_2	CALL_4
0x4000086	      0xb8ffffffff	                     mov eax, 0xffffffff	        40	sliding_window.c	FUNCTION_4	IF_2	CALL_4
0x400008b	            0xeb05	                           jmp 0x4000092	        40	sliding_window.c	FUNCTION_4	IF_2	CALL_4
0x400008d	      0xb800000000	                              mov eax, 0	        43	sliding_window.c	FUNCTION_4
0x4000092	        0x4883c408	                              add rsp, 8	        44	sliding_window.c	FUNCTION_4
0x4000096	              0xc3	                                     ret	        44	sliding_window.c	FUNCTION_4
move_window	FOR,0:SWITCH,0:DO,0:WHILE,0:functions,0:CALL,11:ELSE,2:IF,7	146
0x4000097	            0x4157	                                push r15	        47	sliding_window.c	FUNCTION_5
0x4000099	            0x4156	                                push r14	        47	sliding_window.c	FUNCTION_5
0x400009b	            0x4155	                                push r13	        47	sliding_window.c	FUNCTION_5
0x400009d	            0x4154	                                push r12	        47	sliding_window.c	FUNCTION_5
0x400009f	              0x55	                                push rbp	        47	sliding_window.c	FUNCTION_5
0x40000a0	              0x53	                                push rbx	        47	sliding_window.c	FUNCTION_5
0x40000a1	        0x4883ec08	                              sub rsp, 8	        47	sliding_window.c	FUNCTION_5
0x40000a5	          0x4885ff	                           test rdi, rdi	        49	sliding_window.c	FUNCTION_5	CALL_1
0x40000a8	            0x7519	                           jne 0x40000c3	        49	sliding_window.c	FUNCTION_5	CALL_1
0x40000aa	      0xb900000000	                              mov ecx, 0	        49	sliding_window.c	FUNCTION_5	CALL_1
0x40000af	      0xba31000000	                           mov edx, 0x31	        49	sliding_window.c	FUNCTION_5	CALL_1
0x40000b4	      0xbe00000000	                              mov esi, 0	        49	sliding_window.c	FUNCTION_5	CALL_1
0x40000b9	      0xbf00000000	                              mov edi, 0	        49	sliding_window.c	FUNCTION_5	CALL_1
0x40000be	      0xe800000000	                          call 0x40000c3	        49	sliding_window.c	FUNCTION_5	CALL_1
0x40000c3	          0x4889fb	                            mov rbx, rdi	        49	sliding_window.c	FUNCTION_5	CALL_1
0x40000c6	          0x4889f5	                            mov rbp, rsi	        49	sliding_window.c	FUNCTION_5	CALL_1
0x40000c9	          0x4989d4	                            mov r12, rdx	        49	sliding_window.c	FUNCTION_5	CALL_1
0x40000cc	        0x488b7728	            mov rsi, qword [rdi + 0x28] 	        50	sliding_window.c	FUNCTION_5	CALL_2
0x40000d0	        0x48397710	            cmp qword [rdi + 0x10], rsi 	        50	sliding_window.c	FUNCTION_5	CALL_2
0x40000d4	            0x7619	                           jbe 0x40000ef	        50	sliding_window.c	FUNCTION_5	CALL_2
0x40000d6	      0xb900000000	                              mov ecx, 0	        50	sliding_window.c	FUNCTION_5	CALL_2
0x40000db	      0xba32000000	                           mov edx, 0x32	        50	sliding_window.c	FUNCTION_5	CALL_2
0x40000e0	      0xbe00000000	                              mov esi, 0	        50	sliding_window.c	FUNCTION_5	CALL_2
0x40000e5	      0xbf00000000	                              mov edi, 0	        50	sliding_window.c	FUNCTION_5	CALL_2
0x40000ea	      0xe800000000	                          call 0x40000ef	        50	sliding_window.c	FUNCTION_5	CALL_2
0x40000ef	        0x488b7f08	                mov rdi, qword [rdi + 8]	        51	sliding_window.c	FUNCTION_5	CALL_4
0x40000f3	      0xe848ffffff	          call sym.check_offset_overflow	        51	sliding_window.c	FUNCTION_5	CALL_4
0x40000f8	            0x85c0	                           test eax, eax	        51	sliding_window.c	FUNCTION_5	CALL_4
0x40000fa	            0x7419	                            je 0x4000115	        51	sliding_window.c	FUNCTION_5	CALL_4
0x40000fc	      0xb900000000	                              mov ecx, 0	        51	sliding_window.c	FUNCTION_5	CALL_4
0x4000101	      0xba33000000	                           mov edx, 0x33	        51	sliding_window.c	FUNCTION_5	CALL_4
0x4000106	      0xbe00000000	                              mov esi, 0	        51	sliding_window.c	FUNCTION_5	CALL_4
0x400010b	      0xbf00000000	                              mov edi, 0	        51	sliding_window.c	FUNCTION_5	CALL_4
0x4000110	      0xe800000000	                          call 0x4000115	        51	sliding_window.c	FUNCTION_5	CALL_4
0x4000115	          0x4c89e6	                            mov rsi, r12	        53	sliding_window.c	FUNCTION_5	IF_1	CALL_5
0x4000118	          0x4889ef	                            mov rdi, rbp	        53	sliding_window.c	FUNCTION_5	IF_1	CALL_5
0x400011b	      0xe820ffffff	          call sym.check_offset_overflow	        53	sliding_window.c	FUNCTION_5	IF_1	CALL_5
0x4000120	          0x4189c5	                           mov r13d, eax	        53	sliding_window.c	FUNCTION_5	IF_1	CALL_5
0x4000123	            0x85c0	                           test eax, eax	        53	sliding_window.c	FUNCTION_5	IF_1	CALL_5
0x4000125	     0xf854c010000	                           jne 0x4000277	        53	sliding_window.c	FUNCTION_5	IF_1	CALL_5
0x400012b	        0x488b4308	                mov rax, qword [rbx + 8]	        55	sliding_window.c	FUNCTION_5	IF_2
0x400012f	          0x4839c5	                            cmp rbp, rax	        55	sliding_window.c	FUNCTION_5	IF_2
0x4000132	            0x7c11	                            jl 0x4000145	        55	sliding_window.c	FUNCTION_5	IF_2
0x4000134	      0x4a8d4c2500	                    lea rcx, [rbp + r12]	        55	sliding_window.c	FUNCTION_5	IF_2
0x4000139	          0x4889c2	                            mov rdx, rax	        55	sliding_window.c	FUNCTION_5	IF_2
0x400013c	        0x48035310	             add rdx, qword [rbx + 0x10]	        55	sliding_window.c	FUNCTION_5	IF_2
0x4000140	          0x4839d1	                            cmp rcx, rdx	        55	sliding_window.c	FUNCTION_5	IF_2
0x4000143	            0x731a	                           jae 0x400015f	        55	sliding_window.c	FUNCTION_5	IF_2
0x4000145	      0xbf00000000	                              mov edi, 0	        56	sliding_window.c	FUNCTION_5	CALL_6
0x400014a	      0xb800000000	                              mov eax, 0	        56	sliding_window.c	FUNCTION_5	CALL_6
0x400014f	      0xe800000000	                          call 0x4000154	        56	sliding_window.c	FUNCTION_5	CALL_6
0x4000154	    0x41bdffffffff	                    mov r13d, 0xffffffff	        56	sliding_window.c	FUNCTION_5	CALL_6
0x400015a	      0xe94b010000	                           jmp 0x40002aa	        56	sliding_window.c	FUNCTION_5	CALL_6
0x400015f	        0x488b5318	            mov rdx, qword [rbx + 0x18] 	        57	sliding_window.c	FUNCTION_5	IF_3
0x4000163	          0x4885d2	                           test rdx, rdx	        57	sliding_window.c	FUNCTION_5	IF_3
0x4000166	            0x7823	                            js 0x400018b	        57	sliding_window.c	FUNCTION_5	IF_3
0x4000168	        0x498d0c2c	                    lea rcx, [r12 + rbp]	        57	sliding_window.c	FUNCTION_5	IF_3
0x400016c	          0x4839ca	                            cmp rdx, rcx	        57	sliding_window.c	FUNCTION_5	IF_3
0x400016f	            0x7d1a	                           jge 0x400018b	        57	sliding_window.c	FUNCTION_5	IF_3
0x4000171	      0xbf00000000	                              mov edi, 0	        58	sliding_window.c	FUNCTION_5	CALL_7
0x4000176	      0xb800000000	                              mov eax, 0	        58	sliding_window.c	FUNCTION_5	CALL_7
0x400017b	      0xe800000000	                          call 0x4000180	        58	sliding_window.c	FUNCTION_5	CALL_7
0x4000180	    0x41bdffffffff	                    mov r13d, 0xffffffff	        58	sliding_window.c	FUNCTION_5	CALL_7
0x4000186	      0xe91f010000	                           jmp 0x40002aa	        58	sliding_window.c	FUNCTION_5	CALL_7
0x400018b	          0x4889c2	                            mov rdx, rax	        60	sliding_window.c	FUNCTION_5
0x400018e	        0x48035328	             add rdx, qword [rbx + 0x28]	        60	sliding_window.c	FUNCTION_5
0x4000192	          0x4839d5	                            cmp rbp, rdx	        61	sliding_window.c	FUNCTION_5	IF_4
0x4000195	            0x7d16	                           jge 0x40001ad	        61	sliding_window.c	FUNCTION_5	IF_4
0x4000197	          0x4889ea	                            mov rdx, rbp	        63	sliding_window.c	FUNCTION_5	IF_4	CALL_8
0x400019a	          0x4829c2	                            sub rdx, rax	        63	sliding_window.c	FUNCTION_5	IF_4	CALL_8
0x400019d	        0x488d7b20	                   lea rdi, [rbx + 0x20]	        63	sliding_window.c	FUNCTION_5	IF_4	CALL_8
0x40001a1	      0xbe00000000	                              mov esi, 0	        63	sliding_window.c	FUNCTION_5	IF_4	CALL_8
0x40001a6	      0xe800000000	                          call 0x40001ab	        63	sliding_window.c	FUNCTION_5	IF_4	CALL_8
0x40001ab	            0xeb73	                           jmp 0x4000220	        63	sliding_window.c	FUNCTION_5	IF_4	CALL_8
0x40001ad	          0x4989ee	                            mov r14, rbp	        66	sliding_window.c	FUNCTION_5	ELSE_1	IF_5	CALL_9
0x40001b0	          0x4929d6	                            sub r14, rdx	        66	sliding_window.c	FUNCTION_5	ELSE_1	IF_5	CALL_9
0x40001b3	          0x4c8b3b	                    mov r15, qword [rbx]	        66	sliding_window.c	FUNCTION_5	ELSE_1	IF_5	CALL_9
0x40001b6	          0x4c89f6	                            mov rsi, r14	        20	sliding_window.c	FUNCTION_2	IF_1	CALL_1
0x40001b9	          0x4c89ff	                            mov rdi, r15	        20	sliding_window.c	FUNCTION_2	IF_1	CALL_1
0x40001bc	      0xe800000000	                          call 0x40001c1	        20	sliding_window.c	FUNCTION_2	IF_1	CALL_1
0x40001c1	          0x4939c6	                            cmp r14, rax	        20	sliding_window.c	FUNCTION_2	IF_1	CALL_1
0x40001c4	     0xf84b5000000	                            je 0x400027f	        20	sliding_window.c	FUNCTION_2	IF_1	CALL_1
0x40001ca	          0x4c89ff	                            mov rdi, r15	        13	sliding_window.c	FUNCTION_1	IF_1	CALL_1
0x40001cd	      0xe800000000	                          call 0x40001d2	        13	sliding_window.c	FUNCTION_1	IF_1	CALL_1
0x40001d2	            0x85c0	                           test eax, eax	        13	sliding_window.c	FUNCTION_1	IF_1	CALL_1
0x40001d4	            0x750f	                           jne 0x40001e5	        13	sliding_window.c	FUNCTION_1	IF_1	CALL_1
0x40001d6	      0xbf00000000	                              mov edi, 0	        14	sliding_window.c	FUNCTION_1	CALL_2
0x40001db	      0xe800000000	                          call 0x40001e0	        14	sliding_window.c	FUNCTION_1	CALL_2
0x40001e0	      0xe9b7000000	                           jmp 0x400029c	        14	sliding_window.c	FUNCTION_1	CALL_2
0x40001e5	      0xbf00000000	                              mov edi, 0	        15	sliding_window.c	FUNCTION_1	CALL_3
0x40001ea	      0xb800000000	                              mov eax, 0	        15	sliding_window.c	FUNCTION_1	CALL_3
0x40001ef	      0xe800000000	                          call 0x40001f4	        15	sliding_window.c	FUNCTION_1	CALL_3
0x40001f4	      0xe9a3000000	                           jmp 0x400029c	        15	sliding_window.c	FUNCTION_1	CALL_3
0x40001f9	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_8	IF_2
0x40001fc	            0xeb22	                           jmp 0x4000220	       166	strbuf.h	FUNCTION_8	IF_2
0x40001fe	    0x803d00000000	                cmp byte [0x04000205], 0	       168	strbuf.h	FUNCTION_8	CALL_2
0x4000205	            0x7419	                            je 0x4000220	       168	strbuf.h	FUNCTION_8	CALL_2
0x4000207	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_8	CALL_2
0x400020c	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_8	CALL_2
0x4000211	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_8	CALL_2
0x4000216	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_8	CALL_2
0x400021b	      0xe800000000	                          call 0x4000220	       168	strbuf.h	FUNCTION_8	CALL_2
0x4000220	        0x488b4328	            mov rax, qword [rbx + 0x28] 	        71	sliding_window.c	FUNCTION_5	IF_6
0x4000224	          0x4939c4	                            cmp r12, rax	        71	sliding_window.c	FUNCTION_5	IF_6
0x4000227	            0x7244	                            jb 0x400026d	        71	sliding_window.c	FUNCTION_5	IF_6
0x4000229	          0x4c8b33	                    mov r14, qword [rbx]	        73	sliding_window.c	FUNCTION_5	ELSE_2	IF_7	CALL_11
0x400022c	          0x4c89e2	                            mov rdx, r12	        28	sliding_window.c	FUNCTION_3	CALL_1
0x400022f	          0x4829c2	                            sub rdx, rax	        28	sliding_window.c	FUNCTION_3	CALL_1
0x4000232	        0x488d7320	                   lea rsi, [rbx + 0x20]	        73	sliding_window.c	FUNCTION_5	ELSE_2	IF_7	CALL_11
0x4000236	          0x4c89f7	                            mov rdi, r14	        28	sliding_window.c	FUNCTION_3	CALL_1
0x4000239	      0xe800000000	                          call 0x400023e	        28	sliding_window.c	FUNCTION_3	CALL_1
0x400023e	        0x4c3b6328	            cmp r12, qword [rbx + 0x28] 	        29	sliding_window.c	FUNCTION_3	IF_1
0x4000242	            0x7429	                            je 0x400026d	        29	sliding_window.c	FUNCTION_3	IF_1
0x4000244	          0x4c89f7	                            mov rdi, r14	        13	sliding_window.c	FUNCTION_1	IF_1	CALL_1
0x4000247	      0xe800000000	                          call 0x400024c	        13	sliding_window.c	FUNCTION_1	IF_1	CALL_1
0x400024c	            0x85c0	                           test eax, eax	        13	sliding_window.c	FUNCTION_1	IF_1	CALL_1
0x400024e	            0x750c	                           jne 0x400025c	        13	sliding_window.c	FUNCTION_1	IF_1	CALL_1
0x4000250	      0xbf00000000	                              mov edi, 0	        14	sliding_window.c	FUNCTION_1	CALL_2
0x4000255	      0xe800000000	                          call 0x400025a	        14	sliding_window.c	FUNCTION_1	CALL_2
0x400025a	            0xeb48	                           jmp 0x40002a4	        14	sliding_window.c	FUNCTION_1	CALL_2
0x400025c	      0xbf00000000	                              mov edi, 0	        15	sliding_window.c	FUNCTION_1	CALL_3
0x4000261	      0xb800000000	                              mov eax, 0	        15	sliding_window.c	FUNCTION_1	CALL_3
0x4000266	      0xe800000000	                          call 0x400026b	        15	sliding_window.c	FUNCTION_1	CALL_3
0x400026b	            0xeb37	                           jmp 0x40002a4	        15	sliding_window.c	FUNCTION_1	CALL_3
0x400026d	        0x48896b08	                mov qword [rbx + 8], rbp	        76	sliding_window.c	FUNCTION_5
0x4000271	        0x4c896310	             mov qword [rbx + 0x10], r12	        77	sliding_window.c	FUNCTION_5
0x4000275	            0xeb33	                           jmp 0x40002aa	        78	sliding_window.c	FUNCTION_5
0x4000277	    0x41bdffffffff	                    mov r13d, 0xffffffff	        54	sliding_window.c	FUNCTION_5	IF_1
0x400027d	            0xeb2b	                           jmp 0x40002aa	        54	sliding_window.c	FUNCTION_5	IF_1
0x400027f	    0x48c743280000	               mov qword [rbx + 0x28], 0	       164	strbuf.h	FUNCTION_8
0x4000287	        0x488b4330	            mov rax, qword [rbx + 0x30] 	       165	strbuf.h	FUNCTION_8	IF_2
0x400028b	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_8	IF_2
0x4000291	     0xf8562ffffff	                           jne 0x40001f9	       165	strbuf.h	FUNCTION_8	IF_2
0x4000297	      0xe962ffffff	                           jmp 0x40001fe	       165	strbuf.h	FUNCTION_8	IF_2
0x400029c	    0x41bdffffffff	                    mov r13d, 0xffffffff	        67	sliding_window.c	FUNCTION_5	ELSE_1	IF_5
0x40002a2	            0xeb06	                           jmp 0x40002aa	        67	sliding_window.c	FUNCTION_5	ELSE_1	IF_5
0x40002a4	    0x41bdffffffff	                    mov r13d, 0xffffffff	        74	sliding_window.c	FUNCTION_5	ELSE_2	IF_7
0x40002aa	          0x4489e8	                           mov eax, r13d	        79	sliding_window.c	FUNCTION_5
0x40002ad	        0x4883c408	                              add rsp, 8	        79	sliding_window.c	FUNCTION_5
0x40002b1	              0x5b	                                 pop rbx	        79	sliding_window.c	FUNCTION_5
0x40002b2	              0x5d	                                 pop rbp	        79	sliding_window.c	FUNCTION_5
0x40002b3	            0x415c	                                 pop r12	        79	sliding_window.c	FUNCTION_5
0x40002b5	            0x415d	                                 pop r13	        79	sliding_window.c	FUNCTION_5
0x40002b7	            0x415e	                                 pop r14	        79	sliding_window.c	FUNCTION_5
0x40002b9	            0x415f	                                 pop r15	        79	sliding_window.c	FUNCTION_5
0x40002bb	              0xc3	                                     ret	        79	sliding_window.c	FUNCTION_5
