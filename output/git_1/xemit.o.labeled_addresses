xdl_emit_record	functions,0:FOR,0:IF,1:WHILE,0:DO,0:SWITCH,0:CALL,3:ELSE,0	17
0x40001fa	        0x4883ec08	                              sub rsp, 8	        33	xemit.c	FUNCTION_2
0x40001fe	          0x4989f9	                             mov r9, rdi	        33	xemit.c	FUNCTION_2
0x4000201	          0x4989c8	                             mov r8, rcx	        33	xemit.c	FUNCTION_2
0x4000204	      0xb800000000	                              mov eax, 0	        34	xemit.c	FUNCTION_2	CALL_1
0x4000209	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	        34	xemit.c	FUNCTION_2	CALL_1
0x4000210	          0x4889d7	                            mov rdi, rdx	        34	xemit.c	FUNCTION_2	CALL_1
0x4000213	            0xf2ae	              repne scasb al, byte [rdi]	        34	xemit.c	FUNCTION_2	CALL_1
0x4000215	          0x48f7d1	                                 not rcx	        34	xemit.c	FUNCTION_2	CALL_1
0x4000218	        0x4883e901	                              sub rcx, 1	        34	xemit.c	FUNCTION_2	CALL_1
0x400021c	        0x498b4160	              mov rax, qword [r9 + 0x60]	        27	xemit.c	FUNCTION_1
0x4000220	        0x488b04f0	            mov rax, qword [rax + rsi*8]	        27	xemit.c	FUNCTION_1
0x4000224	        0x488b7010	            mov rsi, qword [rax + 0x10] 	        38	xemit.c	FUNCTION_2	IF_1	CALL_3
0x4000228	        0x488b7808	                mov rdi, qword [rax + 8]	        38	xemit.c	FUNCTION_2	IF_1	CALL_3
0x400022c	      0xe800000000	                          call 0x4000231	        38	xemit.c	FUNCTION_2	IF_1	CALL_3
0x4000231	          0xc1f81f	                           sar eax, 0x1f	        38	xemit.c	FUNCTION_2	IF_1	CALL_3
0x4000234	        0x4883c408	                              add rsp, 8	        44	xemit.c	FUNCTION_2
0x4000238	              0xc3	                                     ret	        44	xemit.c	FUNCTION_2
is_empty_rec	functions,0:FOR,0:IF,0:WHILE,1:DO,0:SWITCH,0:CALL,2:ELSE,0	25
0x4000239	              0x55	                                push rbp	       156	xemit.c	FUNCTION_8
0x400023a	              0x53	                                push rbx	       156	xemit.c	FUNCTION_8
0x400023b	        0x4883ec08	                              sub rsp, 8	       156	xemit.c	FUNCTION_8
0x400023f	        0x488b4760	            mov rax, qword [rdi + 0x60] 	        27	xemit.c	FUNCTION_1
0x4000243	        0x488b04f0	            mov rax, qword [rax + rsi*8]	        27	xemit.c	FUNCTION_1
0x4000247	        0x488b6808	                mov rbp, qword [rax + 8]	        27	xemit.c	FUNCTION_1
0x400024b	        0x488b5810	            mov rbx, qword [rax + 0x10] 	        29	xemit.c	FUNCTION_1
0x400024f	          0x4885db	                           test rbx, rbx	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x4000252	            0x7e1f	                           jle 0x4000273	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x4000254	      0xe800000000	                          call 0x4000259	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x4000259	          0x488b10	                    mov rdx, qword [rax]	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x400025c	            0xeb0a	                           jmp 0x4000268	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x400025e	        0x4883c501	                              add rbp, 1	       161	xemit.c	FUNCTION_8	WHILE_1
0x4000262	        0x4883eb01	                              sub rbx, 1	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x4000266	            0x740b	                            je 0x4000273	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x4000268	         0xfb64500	                   movzx eax, byte [rbp]	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x400026c	      0xf644420120	      test byte [rdx + rax*2 + 1], 0x20 	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x4000271	            0x75eb	                           jne 0x400025e	       160	xemit.c	FUNCTION_8	WHILE_1	CALL_2
0x4000273	          0x4885db	                           test rbx, rbx	       164	xemit.c	FUNCTION_8
0x4000276	           0xf94c0	                                 sete al	       164	xemit.c	FUNCTION_8
0x4000279	           0xfb6c0	                           movzx eax, al	       164	xemit.c	FUNCTION_8
0x400027c	        0x4883c408	                              add rsp, 8	       165	xemit.c	FUNCTION_8
0x4000280	              0x5b	                                 pop rbx	       165	xemit.c	FUNCTION_8
0x4000281	              0x5d	                                 pop rbp	       165	xemit.c	FUNCTION_8
0x4000282	              0xc3	                                     ret	       165	xemit.c	FUNCTION_8
get_func_line	functions,0:FOR,1:IF,2:WHILE,0:DO,0:SWITCH,0:CALL,1:ELSE,0	75
0x40000fe	            0x4157	                                push r15	       137	xemit.c	FUNCTION_7
0x4000100	            0x4156	                                push r14	       137	xemit.c	FUNCTION_7
0x4000102	            0x4155	                                push r13	       137	xemit.c	FUNCTION_7
0x4000104	            0x4154	                                push r12	       137	xemit.c	FUNCTION_7
0x4000106	              0x55	                                push rbp	       137	xemit.c	FUNCTION_7
0x4000107	              0x53	                                push rbx	       137	xemit.c	FUNCTION_7
0x4000108	        0x4883ec28	                           sub rsp, 0x28	       137	xemit.c	FUNCTION_7
0x400010c	          0x4889fd	                            mov rbp, rdi	       137	xemit.c	FUNCTION_7
0x400010f	          0x4989f7	                            mov r15, rsi	       137	xemit.c	FUNCTION_7
0x4000112	          0x4889d0	                            mov rax, rdx	       137	xemit.c	FUNCTION_7
0x4000115	      0x4889542408	                mov qword [rsp + 8], rdx	       137	xemit.c	FUNCTION_7
0x400011a	          0x4889cb	                            mov rbx, rcx	       137	xemit.c	FUNCTION_7
0x400011d	          0x4d89c5	                             mov r13, r8	       137	xemit.c	FUNCTION_7
0x4000120	    0x64488b142528	                mov rdx, qword fs:[0x28]	       137	xemit.c	FUNCTION_7
0x4000129	      0x4889542418	             mov qword [rsp + 0x18], rdx	       137	xemit.c	FUNCTION_7
0x400012e	            0x31d2	                            xor edx, edx	       137	xemit.c	FUNCTION_7
0x4000130	          0x4c39c1	                             cmp rcx, r8	       138	xemit.c	FUNCTION_7
0x4000133	        0x410f9ec4	                              setle r12b	       138	xemit.c	FUNCTION_7
0x4000137	        0x450fb6e4	                        movzx r12d, r12b	       138	xemit.c	FUNCTION_7
0x400013b	      0x4f8d6424ff	                lea r12, [r12 + r12 - 1]	       138	xemit.c	FUNCTION_7
0x4000140	          0x4885c0	                           test rax, rax	       141	xemit.c	FUNCTION_7
0x4000143	            0x740e	                            je 0x4000153	       141	xemit.c	FUNCTION_7
0x4000145	        0x4c8d7008	                      lea r14, [rax + 8]	       141	xemit.c	FUNCTION_7
0x4000149	    0x48c704245000	                   mov qword [rsp], 0x50	       142	xemit.c	FUNCTION_7
0x4000151	            0xeb0d	                           jmp 0x4000160	       142	xemit.c	FUNCTION_7
0x4000153	      0x4c8d742417	                   lea r14, [rsp + 0x17]	       141	xemit.c	FUNCTION_7
0x4000158	    0x48c704240100	                      mov qword [rsp], 1	       142	xemit.c	FUNCTION_7
0x4000160	          0x4c39eb	                            cmp rbx, r13	       144	xemit.c	FUNCTION_7	FOR_1
0x4000163	            0x7453	                            je 0x40001b8	       144	xemit.c	FUNCTION_7	FOR_1
0x4000165	          0x4885db	                           test rbx, rbx	       144	xemit.c	FUNCTION_7	FOR_1
0x4000168	            0x784e	                            js 0x40001b8	       144	xemit.c	FUNCTION_7	FOR_1
0x400016a	        0x483b5d38	            cmp rbx, qword [rbp + 0x38] 	       144	xemit.c	FUNCTION_7	FOR_1
0x400016e	            0x7d51	                           jge 0x40001c1	       144	xemit.c	FUNCTION_7	FOR_1
0x4000170	        0x4c8b0424	                     mov r8, qword [rsp]	       145	xemit.c	FUNCTION_7	FOR_1	CALL_1
0x4000174	          0x4c89f1	                            mov rcx, r14	       145	xemit.c	FUNCTION_7	FOR_1	CALL_1
0x4000177	          0x4889da	                            mov rdx, rbx	       145	xemit.c	FUNCTION_7	FOR_1	CALL_1
0x400017a	          0x4c89fe	                            mov rsi, r15	       145	xemit.c	FUNCTION_7	FOR_1	CALL_1
0x400017d	          0x4889ef	                            mov rdi, rbp	       145	xemit.c	FUNCTION_7	FOR_1	CALL_1
0x4000180	      0xe8bbfeffff	                 call sym.match_func_rec	       145	xemit.c	FUNCTION_7	FOR_1	CALL_1
0x4000185	          0x4885c0	                           test rax, rax	       146	xemit.c	FUNCTION_7	FOR_1	IF_1
0x4000188	            0x7812	                            js 0x400019c	       146	xemit.c	FUNCTION_7	FOR_1	IF_1
0x400018a	      0x488b742408	                mov rsi, qword [rsp + 8]	       147	xemit.c	FUNCTION_7	FOR_1	IF_1	IF_2
0x400018f	          0x4885f6	                           test rsi, rsi	       147	xemit.c	FUNCTION_7	FOR_1	IF_1	IF_2
0x4000192	            0x7436	                            je 0x40001ca	       147	xemit.c	FUNCTION_7	FOR_1	IF_1	IF_2
0x4000194	          0x488906	                    mov qword [rsi], rax	       148	xemit.c	FUNCTION_7	FOR_1	IF_1	IF_2
0x4000197	          0x4889d8	                            mov rax, rbx	       148	xemit.c	FUNCTION_7	FOR_1	IF_1	IF_2
0x400019a	            0xeb3a	                           jmp 0x40001d6	       148	xemit.c	FUNCTION_7	FOR_1	IF_1	IF_2
0x400019c	          0x4c01e3	                            add rbx, r12	       144	xemit.c	FUNCTION_7	FOR_1
0x400019f	          0x4939dd	                            cmp r13, rbx	       144	xemit.c	FUNCTION_7	FOR_1
0x40001a2	            0x742b	                            je 0x40001cf	       144	xemit.c	FUNCTION_7	FOR_1
0x40001a4	          0x4885db	                           test rbx, rbx	       144	xemit.c	FUNCTION_7	FOR_1
0x40001a7	            0x7826	                            js 0x40001cf	       144	xemit.c	FUNCTION_7	FOR_1
0x40001a9	        0x48395d38	            cmp qword [rbp + 0x38], rbx 	       144	xemit.c	FUNCTION_7	FOR_1
0x40001ad	            0x7fc1	                            jg 0x4000170	       144	xemit.c	FUNCTION_7	FOR_1
0x40001af	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       152	xemit.c	FUNCTION_7
0x40001b6	            0xeb1e	                           jmp 0x40001d6	       152	xemit.c	FUNCTION_7
0x40001b8	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       152	xemit.c	FUNCTION_7
0x40001bf	            0xeb15	                           jmp 0x40001d6	       152	xemit.c	FUNCTION_7
0x40001c1	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       152	xemit.c	FUNCTION_7
0x40001c8	            0xeb0c	                           jmp 0x40001d6	       152	xemit.c	FUNCTION_7
0x40001ca	          0x4889d8	                            mov rax, rbx	       152	xemit.c	FUNCTION_7
0x40001cd	            0xeb07	                           jmp 0x40001d6	       152	xemit.c	FUNCTION_7
0x40001cf	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       152	xemit.c	FUNCTION_7
0x40001d6	      0x488b4c2418	            mov rcx, qword [rsp + 0x18] 	       153	xemit.c	FUNCTION_7
0x40001db	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       153	xemit.c	FUNCTION_7
0x40001e4	            0x7405	                            je 0x40001eb	       153	xemit.c	FUNCTION_7
0x40001e6	      0xe800000000	                          call 0x40001eb	       153	xemit.c	FUNCTION_7
0x40001eb	        0x4883c428	                           add rsp, 0x28	       153	xemit.c	FUNCTION_7
0x40001ef	              0x5b	                                 pop rbx	       153	xemit.c	FUNCTION_7
0x40001f0	              0x5d	                                 pop rbp	       153	xemit.c	FUNCTION_7
0x40001f1	            0x415c	                                 pop r12	       153	xemit.c	FUNCTION_7
0x40001f3	            0x415d	                                 pop r13	       153	xemit.c	FUNCTION_7
0x40001f5	            0x415e	                                 pop r14	       153	xemit.c	FUNCTION_7
0x40001f7	            0x415f	                                 pop r15	       153	xemit.c	FUNCTION_7
0x40001f9	              0xc3	                                     ret	       153	xemit.c	FUNCTION_7
xdl_get_hunk	functions,0:FOR,2:IF,7:WHILE,0:DO,0:SWITCH,0:CALL,0:ELSE,4	100
0x4000283	          0x4c8b0e	                     mov r9, qword [rsi]	        55	xemit.c	FUNCTION_3
0x4000286	        0x488b4608	                mov rax, qword [rsi + 8]	        55	xemit.c	FUNCTION_3
0x400028a	        0x4e8d1448	                   lea r10, [rax + r9*2]	        55	xemit.c	FUNCTION_3
0x400028e	          0x488b17	                    mov rdx, qword [rdi]	        60	xemit.c	FUNCTION_3	FOR_1
0x4000291	          0x4885d2	                           test rdx, rdx	        60	xemit.c	FUNCTION_3	FOR_1
0x4000294	     0xf84f4000000	                            je 0x400038e	        60	xemit.c	FUNCTION_3	FOR_1
0x400029a	        0x837a2800	               cmp dword [rdx + 0x28], 0	        60	xemit.c	FUNCTION_3	FOR_1
0x400029e	            0x743e	                            je 0x40002de	        60	xemit.c	FUNCTION_3	FOR_1
0x40002a0	          0x488b02	                    mov rax, qword [rdx]	        61	xemit.c	FUNCTION_3	FOR_1
0x40002a3	          0x4885c0	                           test rax, rax	        63	xemit.c	FUNCTION_3	FOR_1	IF_1
0x40002a6	            0x7414	                            je 0x40002bc	        63	xemit.c	FUNCTION_3	FOR_1	IF_1
0x40002a8	        0x488b4a18	            mov rcx, qword [rdx + 0x18] 	        63	xemit.c	FUNCTION_3	FOR_1	IF_1
0x40002ac	        0x48034a08	                add rcx, qword [rdx + 8]	        63	xemit.c	FUNCTION_3	FOR_1	IF_1
0x40002b0	        0x488b7008	                mov rsi, qword [rax + 8]	        63	xemit.c	FUNCTION_3	FOR_1	IF_1
0x40002b4	          0x4829ce	                            sub rsi, rcx	        63	xemit.c	FUNCTION_3	FOR_1	IF_1
0x40002b7	          0x4939f1	                             cmp r9, rsi	        63	xemit.c	FUNCTION_3	FOR_1	IF_1
0x40002ba	            0x7f0d	                            jg 0x40002c9	        63	xemit.c	FUNCTION_3	FOR_1	IF_1
0x40002bc	          0x488907	                    mov qword [rdi], rax	        65	xemit.c	FUNCTION_3	FOR_1	IF_1
0x40002bf	          0x488b12	                    mov rdx, qword [rdx]	        60	xemit.c	FUNCTION_3	FOR_1
0x40002c2	          0x4885d2	                           test rdx, rdx	        60	xemit.c	FUNCTION_3	FOR_1
0x40002c5	            0x7505	                           jne 0x40002cc	        60	xemit.c	FUNCTION_3	FOR_1
0x40002c7	            0xeb09	                           jmp 0x40002d2	        60	xemit.c	FUNCTION_3	FOR_1
0x40002c9	          0x4889c2	                            mov rdx, rax	        60	xemit.c	FUNCTION_3	FOR_1
0x40002cc	        0x837a2800	               cmp dword [rdx + 0x28], 0	        60	xemit.c	FUNCTION_3	FOR_1
0x40002d0	            0x75ce	                           jne 0x40002a0	        60	xemit.c	FUNCTION_3	FOR_1
0x40002d2	          0x488b17	                    mov rdx, qword [rdi]	        68	xemit.c	FUNCTION_3	IF_2
0x40002d5	          0x4885d2	                           test rdx, rdx	        68	xemit.c	FUNCTION_3	IF_2
0x40002d8	     0xf84b6000000	                            je 0x4000394	        68	xemit.c	FUNCTION_3	IF_2
0x40002de	          0x488b0a	                    mov rcx, qword [rdx]	        73	xemit.c	FUNCTION_3	FOR_2
0x40002e1	          0x4885c9	                           test rcx, rcx	        73	xemit.c	FUNCTION_3	FOR_2
0x40002e4	     0xf84b0000000	                            je 0x400039a	        73	xemit.c	FUNCTION_3	FOR_2
0x40002ea	        0x488b7108	                mov rsi, qword [rcx + 8]	        74	xemit.c	FUNCTION_3	FOR_2
0x40002ee	          0x4889f7	                            mov rdi, rsi	        74	xemit.c	FUNCTION_3	FOR_2
0x40002f1	        0x482b7a18	             sub rdi, qword [rdx + 0x18]	        74	xemit.c	FUNCTION_3	FOR_2
0x40002f5	        0x482b7a08	                sub rdi, qword [rdx + 8]	        74	xemit.c	FUNCTION_3	FOR_2
0x40002f9	          0x4939fa	                            cmp r10, rdi	        75	xemit.c	FUNCTION_3	FOR_2	IF_3
0x40002fc	     0xf8c9c000000	                            jl 0x400039e	        75	xemit.c	FUNCTION_3	FOR_2	IF_3
0x4000302	          0x4889d0	                            mov rax, rdx	        75	xemit.c	FUNCTION_3	FOR_2	IF_3
0x4000305	    0x41bb00000000	                             mov r11d, 0	        75	xemit.c	FUNCTION_3	FOR_2	IF_3
0x400030b	            0xeb1e	                           jmp 0x400032b	        75	xemit.c	FUNCTION_3	FOR_2	IF_3
0x400030d	        0x498b7008	                 mov rsi, qword [r8 + 8]	        74	xemit.c	FUNCTION_3	FOR_2
0x4000311	          0x4889f7	                            mov rdi, rsi	        74	xemit.c	FUNCTION_3	FOR_2
0x4000314	        0x482b7918	             sub rdi, qword [rcx + 0x18]	        74	xemit.c	FUNCTION_3	FOR_2
0x4000318	        0x482b7908	                sub rdi, qword [rcx + 8]	        74	xemit.c	FUNCTION_3	FOR_2
0x400031c	          0x4889ca	                            mov rdx, rcx	        74	xemit.c	FUNCTION_3	FOR_2
0x400031f	          0x4939fa	                            cmp r10, rdi	        75	xemit.c	FUNCTION_3	FOR_2	IF_3
0x4000322	     0xf8c9a000000	                            jl 0x40003c2	        75	xemit.c	FUNCTION_3	FOR_2	IF_3
0x4000328	          0x4c89c1	                             mov rcx, r8	        73	xemit.c	FUNCTION_3	FOR_2
0x400032b	          0x4939f9	                             cmp r9, rdi	        78	xemit.c	FUNCTION_3	FOR_2	IF_4
0x400032e	            0x7e14	                           jle 0x4000344	        78	xemit.c	FUNCTION_3	FOR_2	IF_4
0x4000330	          0x8b7928	            mov edi, dword [rcx + 0x28] 	        78	xemit.c	FUNCTION_3	FOR_2	IF_4
0x4000333	          0x4839c2	                            cmp rdx, rax	        78	xemit.c	FUNCTION_3	FOR_2	IF_4
0x4000336	            0x742d	                            je 0x4000365	        78	xemit.c	FUNCTION_3	FOR_2	IF_4
0x4000338	            0x85ff	                           test edi, edi	        78	xemit.c	FUNCTION_3	FOR_2	IF_4
0x400033a	            0x7429	                            je 0x4000365	        78	xemit.c	FUNCTION_3	FOR_2	IF_4
0x400033c	            0x7464	                            je 0x40003a2	        81	xemit.c	FUNCTION_3	FOR_2	ELSE_1	IF_5
0x400033e	        0x4c035920	             add r11, qword [rcx + 0x20]	        82	xemit.c	FUNCTION_3	FOR_2	ELSE_1	IF_5
0x4000342	            0xeb40	                           jmp 0x4000384	        82	xemit.c	FUNCTION_3	FOR_2	ELSE_1	IF_5
0x4000344	          0x4839c2	                            cmp rdx, rax	        83	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x4000347	            0x7410	                            je 0x4000359	        83	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x4000349	        0x482b7018	             sub rsi, qword [rax + 0x18]	        83	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x400034d	        0x482b7008	                sub rsi, qword [rax + 8]	        83	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x4000351	          0x4c01de	                            add rsi, r11	        83	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x4000354	          0x4c39d6	                            cmp rsi, r10	        83	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x4000357	            0x7769	                            ja 0x40003c2	        83	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x4000359	        0x83792800	               cmp dword [rcx + 0x28], 0	        86	xemit.c	FUNCTION_3	FOR_2	ELSE_3	IF_7
0x400035d	            0x7411	                            je 0x4000370	        86	xemit.c	FUNCTION_3	FOR_2	ELSE_3	IF_7
0x400035f	        0x4c035920	             add r11, qword [rcx + 0x20]	        90	xemit.c	FUNCTION_3	FOR_2	ELSE_4
0x4000363	            0xeb1f	                           jmp 0x4000384	        90	xemit.c	FUNCTION_3	FOR_2	ELSE_4
0x4000365	          0x4889c8	                            mov rax, rcx	        90	xemit.c	FUNCTION_3	FOR_2	ELSE_4
0x4000368	    0x41bb00000000	                             mov r11d, 0	        80	xemit.c	FUNCTION_3	FOR_2	IF_4
0x400036e	            0xeb14	                           jmp 0x4000384	        80	xemit.c	FUNCTION_3	FOR_2	IF_4
0x4000370	          0x4889c8	                            mov rax, rcx	        80	xemit.c	FUNCTION_3	FOR_2	IF_4
0x4000373	    0x41bb00000000	                             mov r11d, 0	        88	xemit.c	FUNCTION_3	FOR_2	ELSE_3	IF_7
0x4000379	            0xeb09	                           jmp 0x4000384	        88	xemit.c	FUNCTION_3	FOR_2	ELSE_3	IF_7
0x400037b	          0x4889c8	                            mov rax, rcx	        83	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x400037e	    0x41bb00000000	                             mov r11d, 0	        88	xemit.c	FUNCTION_3	FOR_2	ELSE_3	IF_7
0x4000384	          0x4c8b01	                     mov r8, qword [rcx]	        73	xemit.c	FUNCTION_3	FOR_2
0x4000387	          0x4d85c0	                             test r8, r8	        73	xemit.c	FUNCTION_3	FOR_2
0x400038a	            0x7581	                           jne 0x400030d	        73	xemit.c	FUNCTION_3	FOR_2
0x400038c	            0xf3c3	                                     ret	        73	xemit.c	FUNCTION_3	FOR_2
0x400038e	      0xb800000000	                              mov eax, 0	        69	xemit.c	FUNCTION_3	IF_2
0x4000393	              0xc3	                                     ret	        69	xemit.c	FUNCTION_3	IF_2
0x4000394	      0xb800000000	                              mov eax, 0	        69	xemit.c	FUNCTION_3	IF_2
0x4000399	              0xc3	                                     ret	        69	xemit.c	FUNCTION_3	IF_2
0x400039a	          0x4889d0	                            mov rax, rdx	        73	xemit.c	FUNCTION_3	FOR_2
0x400039d	              0xc3	                                     ret	        73	xemit.c	FUNCTION_3	FOR_2
0x400039e	          0x4889d0	                            mov rax, rdx	        75	xemit.c	FUNCTION_3	FOR_2	IF_3
0x40003a1	              0xc3	                                     ret	        75	xemit.c	FUNCTION_3	FOR_2	IF_3
0x40003a2	          0x4839c2	                            cmp rdx, rax	        83	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x40003a5	            0x74d4	                            je 0x400037b	        83	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x40003a7	        0x482b7018	             sub rsi, qword [rax + 0x18]	        83	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x40003ab	        0x482b7008	                sub rsi, qword [rax + 8]	        83	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x40003af	          0x4c01de	                            add rsi, r11	        83	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x40003b2	          0x4c39d6	                            cmp rsi, r10	        83	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x40003b5	            0x770b	                            ja 0x40003c2	        83	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x40003b7	          0x4889c8	                            mov rax, rcx	        83	xemit.c	FUNCTION_3	FOR_2	ELSE_2	IF_6
0x40003ba	    0x41bb00000000	                             mov r11d, 0	        88	xemit.c	FUNCTION_3	FOR_2	ELSE_3	IF_7
0x40003c0	            0xebc2	                           jmp 0x4000384	        88	xemit.c	FUNCTION_3	FOR_2	ELSE_3	IF_7
0x40003c2	            0xf3c3	                                     ret	        95	xemit.c	FUNCTION_3
xdl_emit_diff	functions,0:FOR,7:IF,19:WHILE,3:DO,0:SWITCH,0:CALL,20:ELSE,0	343
0x40003c4	            0x4157	                                push r15	       168	xemit.c	FUNCTION_9
0x40003c6	            0x4156	                                push r14	       168	xemit.c	FUNCTION_9
0x40003c8	            0x4155	                                push r13	       168	xemit.c	FUNCTION_9
0x40003ca	            0x4154	                                push r12	       168	xemit.c	FUNCTION_9
0x40003cc	              0x55	                                push rbp	       168	xemit.c	FUNCTION_9
0x40003cd	              0x53	                                push rbx	       168	xemit.c	FUNCTION_9
0x40003ce	    0x4881ecb80000	                           sub rsp, 0xb8	       168	xemit.c	FUNCTION_9
0x40003d5	          0x4989fc	                            mov r12, rdi	       168	xemit.c	FUNCTION_9
0x40003d8	        0x48891424	                    mov qword [rsp], rdx	       168	xemit.c	FUNCTION_9
0x40003dc	          0x4989ce	                            mov r14, rcx	       168	xemit.c	FUNCTION_9
0x40003df	    0x64488b042528	                mov rax, qword fs:[0x28]	       168	xemit.c	FUNCTION_9
0x40003e8	    0x48898424a800	             mov qword [rsp + 0xa8], rax	       168	xemit.c	FUNCTION_9
0x40003f0	            0x31c0	                            xor eax, eax	       168	xemit.c	FUNCTION_9
0x40003f2	      0x488d7c2440	                   lea rdi, [rsp + 0x40]	       172	xemit.c	FUNCTION_9
0x40003f7	      0xb90b000000	                            mov ecx, 0xb	       172	xemit.c	FUNCTION_9
0x40003fc	          0xf348ab	              rep stosq qword [rdi], rax	       172	xemit.c	FUNCTION_9
0x40003ff	      0x4889742438	             mov qword [rsp + 0x38], rsi	       174	xemit.c	FUNCTION_9	FOR_1
0x4000404	          0x4885f6	                           test rsi, rsi	       174	xemit.c	FUNCTION_9	FOR_1
0x4000407	     0xf8487040000	                            je 0x4000894	       174	xemit.c	FUNCTION_9	FOR_1
0x400040d	    0x48c7442428ff	mov qword [rsp + 0x28], 0xffffffffffffffff	       174	xemit.c	FUNCTION_9	FOR_1
0x4000416	      0x488d442448	                   lea rax, [rsp + 0x48]	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x400041b	      0x4889442420	             mov qword [rsp + 0x20], rax	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x4000420	          0x4c89f6	                            mov rsi, r14	       175	xemit.c	FUNCTION_9	FOR_1	CALL_1
0x4000423	      0x488d7c2438	                   lea rdi, [rsp + 0x38]	       175	xemit.c	FUNCTION_9	FOR_1	CALL_1
0x4000428	      0xe800000000	                          call 0x400042d	       175	xemit.c	FUNCTION_9	FOR_1	CALL_1
0x400042d	          0x4989c5	                            mov r13, rax	       175	xemit.c	FUNCTION_9	FOR_1	CALL_1
0x4000430	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       176	xemit.c	FUNCTION_9	FOR_1	IF_1
0x4000435	          0x4885d2	                           test rdx, rdx	       176	xemit.c	FUNCTION_9	FOR_1	IF_1
0x4000438	     0xf845d040000	                            je 0x400089b	       176	xemit.c	FUNCTION_9	FOR_1	IF_1
0x400043e	        0x488b4a08	                mov rcx, qword [rdx + 8]	       179	xemit.c	FUNCTION_9	FOR_1	CALL_2
0x4000442	          0x498b06	                    mov rax, qword [r14]	       179	xemit.c	FUNCTION_9	FOR_1	CALL_2
0x4000445	      0xbe00000000	                              mov esi, 0	       179	xemit.c	FUNCTION_9	FOR_1	CALL_2
0x400044a	          0x4889cf	                            mov rdi, rcx	       179	xemit.c	FUNCTION_9	FOR_1	CALL_2
0x400044d	          0x4829c7	                            sub rdi, rax	       179	xemit.c	FUNCTION_9	FOR_1	CALL_2
0x4000450	        0x480f48fe	                          cmovs rdi, rsi	       179	xemit.c	FUNCTION_9	FOR_1	CALL_2
0x4000454	      0x48897c2418	             mov qword [rsp + 0x18], rdi	       179	xemit.c	FUNCTION_9	FOR_1	CALL_2
0x4000459	        0x488b5a10	            mov rbx, qword [rdx + 0x10] 	       180	xemit.c	FUNCTION_9	FOR_1	CALL_3
0x400045d	          0x4889da	                            mov rdx, rbx	       180	xemit.c	FUNCTION_9	FOR_1	CALL_3
0x4000460	          0x4829c2	                            sub rdx, rax	       180	xemit.c	FUNCTION_9	FOR_1	CALL_3
0x4000463	        0x480f49f2	                         cmovns rsi, rdx	       180	xemit.c	FUNCTION_9	FOR_1	CALL_3
0x4000467	      0x4889742410	             mov qword [rsp + 0x10], rsi	       180	xemit.c	FUNCTION_9	FOR_1	CALL_3
0x400046c	      0x41f6461004	               test byte [r14 + 0x10], 4	       182	xemit.c	FUNCTION_9	FOR_1	IF_2
0x4000471	     0xf84da000000	                            je 0x4000551	       182	xemit.c	FUNCTION_9	FOR_1	IF_2
0x4000477	      0x493b4c2438	            cmp rcx, qword [r12 + 0x38] 	       186	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3
0x400047c	            0x7c4e	                            jl 0x40004cc	       186	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3
0x400047e	    0x493b9c24c000	            cmp rbx, qword [r12 + 0xc0] 	       193	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1
0x4000486	            0x7d3b	                           jge 0x40004c3	       193	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1
0x4000488	    0x498dac248800	                   lea rbp, [r12 + 0x88]	       194	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1	IF_4	CALL_4
0x4000490	    0x41b801000000	                              mov r8d, 1	       127	xemit.c	FUNCTION_6	CALL_1
0x4000496	    0x488d8c24a700	                   lea rcx, [rsp + 0xa7]	       127	xemit.c	FUNCTION_6	CALL_1
0x400049e	          0x4889da	                            mov rdx, rbx	       127	xemit.c	FUNCTION_6	CALL_1
0x40004a1	          0x4c89f6	                            mov rsi, r14	       127	xemit.c	FUNCTION_6	CALL_1
0x40004a4	          0x4889ef	                            mov rdi, rbp	       127	xemit.c	FUNCTION_6	CALL_1
0x40004a7	      0xe894fbffff	                 call sym.match_func_rec	       127	xemit.c	FUNCTION_6	CALL_1
0x40004ac	          0x4885c0	                           test rax, rax	       194	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1	IF_4	CALL_4
0x40004af	     0xf899c000000	                           jns 0x4000551	       194	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1	IF_4	CALL_4
0x40004b5	        0x4883c301	                              add rbx, 1	       196	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1
0x40004b9	    0x49399c24c000	            cmp qword [r12 + 0xc0], rbx 	       193	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1
0x40004c1	            0x7fcd	                            jg 0x4000490	       193	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3	WHILE_1
0x40004c3	      0x498b442438	            mov rax, qword [r12 + 0x38] 	       203	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3
0x40004c8	        0x488d48ff	                      lea rcx, [rax - 1]	       203	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_3
0x40004cc	    0x49c7c0ffffff	              mov r8, 0xffffffffffffffff	       206	xemit.c	FUNCTION_9	FOR_1	IF_2	CALL_5
0x40004d3	      0xba00000000	                              mov edx, 0	       206	xemit.c	FUNCTION_9	FOR_1	IF_2	CALL_5
0x40004d8	          0x4c89f6	                            mov rsi, r14	       206	xemit.c	FUNCTION_9	FOR_1	IF_2	CALL_5
0x40004db	          0x4c89e7	                            mov rdi, r12	       206	xemit.c	FUNCTION_9	FOR_1	IF_2	CALL_5
0x40004de	      0xe81bfcffff	                  call sym.get_func_line	       206	xemit.c	FUNCTION_9	FOR_1	IF_2	CALL_5
0x40004e3	          0x4889c5	                            mov rbp, rax	       206	xemit.c	FUNCTION_9	FOR_1	IF_2	CALL_5
0x40004e6	          0x4885c0	                           test rax, rax	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x40004e9	            0x7f0a	                            jg 0x40004f5	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x40004eb	            0xeb41	                           jmp 0x400052e	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x40004ed	          0x4889dd	                            mov rbp, rbx	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x40004f0	          0x4885db	                           test rbx, rbx	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x40004f3	            0x7436	                            je 0x400052b	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x40004f5	        0x488d5dff	                      lea rbx, [rbp - 1]	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x40004f9	          0x4889de	                            mov rsi, rbx	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x40004fc	          0x4c89e7	                            mov rdi, r12	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x40004ff	      0xe835fdffff	                   call sym.is_empty_rec	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x4000504	            0x85c0	                           test eax, eax	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x4000506	            0x7526	                           jne 0x400052e	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x4000508	    0x41b801000000	                              mov r8d, 1	       127	xemit.c	FUNCTION_6	CALL_1
0x400050e	    0x488d8c24a700	                   lea rcx, [rsp + 0xa7]	       127	xemit.c	FUNCTION_6	CALL_1
0x4000516	          0x4889da	                            mov rdx, rbx	       127	xemit.c	FUNCTION_6	CALL_1
0x4000519	          0x4c89f6	                            mov rsi, r14	       127	xemit.c	FUNCTION_6	CALL_1
0x400051c	          0x4c89e7	                            mov rdi, r12	       127	xemit.c	FUNCTION_6	CALL_1
0x400051f	      0xe81cfbffff	                 call sym.match_func_rec	       127	xemit.c	FUNCTION_6	CALL_1
0x4000524	          0x4885c0	                           test rax, rax	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x4000527	            0x78c4	                            js 0x40004ed	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x4000529	            0xeb03	                           jmp 0x400052e	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x400052b	          0x4889dd	                            mov rbp, rbx	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x400052e	          0x4885ed	                           test rbp, rbp	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x4000531	      0xb800000000	                              mov eax, 0	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x4000536	        0x480f48e8	                          cmovs rbp, rax	       207	xemit.c	FUNCTION_9	FOR_1	IF_2	WHILE_2	CALL_6
0x400053a	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       212	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_6
0x400053f	          0x4839e8	                            cmp rax, rbp	       212	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_6
0x4000542	            0x7e0d	                           jle 0x4000551	       212	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_6
0x4000544	          0x4829e8	                            sub rax, rbp	       213	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_6
0x4000547	      0x4829442410	             sub qword [rsp + 0x10], rax	       213	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_6
0x400054c	      0x48896c2418	             mov qword [rsp + 0x18], rbp	       214	xemit.c	FUNCTION_9	FOR_1	IF_2	IF_6
0x4000551	          0x498b3e	                    mov rdi, qword [r14]	       219	xemit.c	FUNCTION_9	FOR_1
0x4000554	      0x4d8b442438	              mov r8, qword [r12 + 0x38]	       220	xemit.c	FUNCTION_9	FOR_1	CALL_8
0x4000559	        0x498b4d18	            mov rcx, qword [r13 + 0x18] 	       220	xemit.c	FUNCTION_9	FOR_1	CALL_8
0x400055d	        0x49034d08	                add rcx, qword [r13 + 8]	       220	xemit.c	FUNCTION_9	FOR_1	CALL_8
0x4000561	        0x498b7520	            mov rsi, qword [r13 + 0x20] 	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x4000565	        0x49037510	             add rsi, qword [r13 + 0x10]	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x4000569	    0x498b9424c000	            mov rdx, qword [r12 + 0xc0] 	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x4000571	          0x4829f2	                            sub rdx, rsi	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x4000574	          0x4c89c0	                             mov rax, r8	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x4000577	          0x4829c8	                            sub rax, rcx	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x400057a	          0x4839c2	                            cmp rdx, rax	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x400057d	        0x480f4ec2	                         cmovle rax, rdx	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x4000581	          0x4839f8	                            cmp rax, rdi	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x4000584	        0x480f4fc7	                          cmovg rax, rdi	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x4000588	        0x4c8d3c01	                    lea r15, [rcx + rax]	       223	xemit.c	FUNCTION_9	FOR_1
0x400058c	          0x4801f0	                            add rax, rsi	       224	xemit.c	FUNCTION_9	FOR_1
0x400058f	      0x4889442408	                mov qword [rsp + 8], rax	       224	xemit.c	FUNCTION_9	FOR_1
0x4000594	      0x41f6461004	               test byte [r14 + 0x10], 4	       226	xemit.c	FUNCTION_9	FOR_1	IF_7
0x4000599	     0xf84eb000000	                            je 0x400068a	       226	xemit.c	FUNCTION_9	FOR_1	IF_7
0x400059f	      0xba00000000	                              mov edx, 0	       227	xemit.c	FUNCTION_9	FOR_1	IF_7	CALL_10
0x40005a4	          0x4c89f6	                            mov rsi, r14	       227	xemit.c	FUNCTION_9	FOR_1	IF_7	CALL_10
0x40005a7	          0x4c89e7	                            mov rdi, r12	       227	xemit.c	FUNCTION_9	FOR_1	IF_7	CALL_10
0x40005aa	      0xe84ffbffff	                  call sym.get_func_line	       227	xemit.c	FUNCTION_9	FOR_1	IF_7	CALL_10
0x40005af	          0x4889c5	                            mov rbp, rax	       227	xemit.c	FUNCTION_9	FOR_1	IF_7	CALL_10
0x40005b2	          0x4885c0	                           test rax, rax	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x40005b5	            0x7f0a	                            jg 0x40005c1	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x40005b7	            0xeb1b	                           jmp 0x40005d4	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x40005b9	          0x4889dd	                            mov rbp, rbx	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x40005bc	          0x4885db	                           test rbx, rbx	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x40005bf	            0x7420	                            je 0x40005e1	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x40005c1	        0x488d5dff	                      lea rbx, [rbp - 1]	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x40005c5	          0x4889de	                            mov rsi, rbx	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x40005c8	          0x4c89e7	                            mov rdi, r12	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x40005cb	      0xe869fcffff	                   call sym.is_empty_rec	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x40005d0	            0x85c0	                           test eax, eax	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x40005d2	            0x75e5	                           jne 0x40005b9	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x40005d4	          0x4889eb	                            mov rbx, rbp	       230	xemit.c	FUNCTION_9	FOR_1	IF_7	WHILE_3	CALL_11
0x40005d7	          0x4885ed	                           test rbp, rbp	       232	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_8
0x40005da	            0x7905	                           jns 0x40005e1	       232	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_8
0x40005dc	      0x498b5c2438	            mov rbx, qword [r12 + 0x38] 	       233	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_8
0x40005e1	          0x4c39fb	                            cmp rbx, r15	       234	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_9
0x40005e4	            0x7e0e	                           jle 0x40005f4	       234	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_9
0x40005e6	          0x4889d8	                            mov rax, rbx	       235	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_9
0x40005e9	          0x4c29f8	                            sub rax, r15	       235	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_9
0x40005ec	      0x4801442408	                add qword [rsp + 8], rax	       235	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_9
0x40005f1	          0x4989df	                            mov r15, rbx	       236	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_9
0x40005f4	        0x498b5500	                    mov rdx, qword [r13]	       244	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10
0x40005f8	          0x4885d2	                           test rdx, rdx	       244	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10
0x40005fb	     0xf8489000000	                            je 0x400068a	       244	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10
0x4000601	      0x498b442438	            mov rax, qword [r12 + 0x38] 	       245	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	CALL_12
0x4000606	        0x4883e801	                              sub rax, 1	       245	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	CALL_12
0x400060a	        0x488b4a08	                mov rcx, qword [rdx + 8]	       245	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	CALL_12
0x400060e	          0x4839c8	                            cmp rax, rcx	       245	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	CALL_12
0x4000611	        0x480f4ec8	                         cmovle rcx, rax	       245	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	CALL_12
0x4000615	          0x4889c8	                            mov rax, rcx	       247	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11
0x4000618	          0x492b06	                    sub rax, qword [r14]	       247	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11
0x400061b	          0x4939c7	                            cmp r15, rax	       247	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11
0x400061e	            0x7d18	                           jge 0x4000638	       247	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11
0x4000620	          0x4d89f8	                             mov r8, r15	       248	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11	CALL_13
0x4000623	      0xba00000000	                              mov edx, 0	       248	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11	CALL_13
0x4000628	          0x4c89f6	                            mov rsi, r14	       248	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11	CALL_13
0x400062b	          0x4c89e7	                            mov rdi, r12	       248	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11	CALL_13
0x400062e	      0xe8cbfaffff	                  call sym.get_func_line	       248	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11	CALL_13
0x4000633	          0x4885c0	                           test rax, rax	       247	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11
0x4000636	            0x7952	                           jns 0x400068a	       247	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11
0x4000638	        0x4d8b6d00	                    mov r13, qword [r13]	       249	xemit.c	FUNCTION_9	FOR_1	IF_7	IF_10	IF_11
0x400063c	          0x498b3e	                    mov rdi, qword [r14]	       219	xemit.c	FUNCTION_9	FOR_1
0x400063f	      0x4d8b442438	              mov r8, qword [r12 + 0x38]	       220	xemit.c	FUNCTION_9	FOR_1	CALL_8
0x4000644	        0x498b4d18	            mov rcx, qword [r13 + 0x18] 	       220	xemit.c	FUNCTION_9	FOR_1	CALL_8
0x4000648	        0x49034d08	                add rcx, qword [r13 + 8]	       220	xemit.c	FUNCTION_9	FOR_1	CALL_8
0x400064c	        0x498b7520	            mov rsi, qword [r13 + 0x20] 	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x4000650	        0x49037510	             add rsi, qword [r13 + 0x10]	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x4000654	    0x498b9424c000	            mov rdx, qword [r12 + 0xc0] 	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x400065c	          0x4829f2	                            sub rdx, rsi	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x400065f	          0x4c89c0	                             mov rax, r8	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x4000662	          0x4829c8	                            sub rax, rcx	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x4000665	          0x4839c2	                            cmp rdx, rax	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x4000668	        0x480f4ec2	                         cmovle rax, rdx	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x400066c	          0x4839f8	                            cmp rax, rdi	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x400066f	        0x480f4fc7	                          cmovg rax, rdi	       221	xemit.c	FUNCTION_9	FOR_1	CALL_9
0x4000673	        0x4c8d3c01	                    lea r15, [rcx + rax]	       223	xemit.c	FUNCTION_9	FOR_1
0x4000677	          0x4801f0	                            add rax, rsi	       224	xemit.c	FUNCTION_9	FOR_1
0x400067a	      0x4889442408	                mov qword [rsp + 8], rax	       224	xemit.c	FUNCTION_9	FOR_1
0x400067f	      0x41f6461004	               test byte [r14 + 0x10], 4	       226	xemit.c	FUNCTION_9	FOR_1	IF_7
0x4000684	     0xf8515ffffff	                           jne 0x400059f	       226	xemit.c	FUNCTION_9	FOR_1	IF_7
0x400068a	      0x41f6461001	               test byte [r14 + 0x10], 1	       259	xemit.c	FUNCTION_9	FOR_1	IF_12
0x400068f	            0x7426	                            je 0x40006b7	       259	xemit.c	FUNCTION_9	FOR_1	IF_12
0x4000691	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       260	xemit.c	FUNCTION_9	FOR_1	IF_12	CALL_14
0x4000696	        0x488d58ff	                      lea rbx, [rax - 1]	       260	xemit.c	FUNCTION_9	FOR_1	IF_12	CALL_14
0x400069a	      0x4c8b442428	              mov r8, qword [rsp + 0x28]	       260	xemit.c	FUNCTION_9	FOR_1	IF_12	CALL_14
0x400069f	          0x4889d9	                            mov rcx, rbx	       260	xemit.c	FUNCTION_9	FOR_1	IF_12	CALL_14
0x40006a2	      0x488d542440	                   lea rdx, [rsp + 0x40]	       260	xemit.c	FUNCTION_9	FOR_1	IF_12	CALL_14
0x40006a7	          0x4c89f6	                            mov rsi, r14	       260	xemit.c	FUNCTION_9	FOR_1	IF_12	CALL_14
0x40006aa	          0x4c89e7	                            mov rdi, r12	       260	xemit.c	FUNCTION_9	FOR_1	IF_12	CALL_14
0x40006ad	      0xe84cfaffff	                  call sym.get_func_line	       260	xemit.c	FUNCTION_9	FOR_1	IF_12	CALL_14
0x40006b2	      0x48895c2428	             mov qword [rsp + 0x28], rbx	       262	xemit.c	FUNCTION_9	FOR_1	IF_12
0x40006b7	      0x488b4c2408	                mov rcx, qword [rsp + 8]	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x40006bc	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x40006c1	          0x4829e9	                            sub rcx, rbp	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x40006c4	        0x488d5501	                      lea rdx, [rbp + 1]	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x40006c8	          0x4c89fe	                            mov rsi, r15	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x40006cb	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x40006d0	          0x4829c6	                            sub rsi, rax	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x40006d3	        0x488d7801	                      lea rdi, [rax + 1]	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x40006d7	        0x4883ec08	                              sub rsp, 8	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x40006db	        0xff742408	                    push qword [rsp + 8]	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x40006df	      0x4c8b4c2450	              mov r9, qword [rsp + 0x50]	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x40006e4	      0x4c8b442430	              mov r8, qword [rsp + 0x30]	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x40006e9	      0xe800000000	                          call 0x40006ee	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x40006ee	        0x4883c410	                           add rsp, 0x10	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x40006f2	            0x85c0	                           test eax, eax	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x40006f4	     0xf88a8010000	                            js 0x40008a2	       264	xemit.c	FUNCTION_9	FOR_1	IF_13	CALL_15
0x40006fa	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       271	xemit.c	FUNCTION_9	FOR_1	FOR_2
0x40006ff	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       271	xemit.c	FUNCTION_9	FOR_1	FOR_2
0x4000703	          0x4839dd	                            cmp rbp, rbx	       271	xemit.c	FUNCTION_9	FOR_1	FOR_2
0x4000706	            0x7d46	                           jge 0x400074e	       271	xemit.c	FUNCTION_9	FOR_1	FOR_2
0x4000708	    0x498dac248800	                   lea rbp, [r12 + 0x88]	       272	xemit.c	FUNCTION_9	FOR_1	FOR_2	IF_14	CALL_16
0x4000710	        0x488b0c24	                    mov rcx, qword [rsp]	       272	xemit.c	FUNCTION_9	FOR_1	FOR_2	IF_14	CALL_16
0x4000714	      0xba00000000	                              mov edx, 0	       272	xemit.c	FUNCTION_9	FOR_1	FOR_2	IF_14	CALL_16
0x4000719	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	       272	xemit.c	FUNCTION_9	FOR_1	FOR_2	IF_14	CALL_16
0x400071e	          0x4889de	                            mov rsi, rbx	       272	xemit.c	FUNCTION_9	FOR_1	FOR_2	IF_14	CALL_16
0x4000721	          0x4889ef	                            mov rdi, rbp	       272	xemit.c	FUNCTION_9	FOR_1	FOR_2	IF_14	CALL_16
0x4000724	      0xe8d1faffff	                call sym.xdl_emit_record	       272	xemit.c	FUNCTION_9	FOR_1	FOR_2	IF_14	CALL_16
0x4000729	            0x85c0	                           test eax, eax	       272	xemit.c	FUNCTION_9	FOR_1	FOR_2	IF_14	CALL_16
0x400072b	     0xf8878010000	                            js 0x40008a9	       272	xemit.c	FUNCTION_9	FOR_1	FOR_2	IF_14	CALL_16
0x4000731	          0x4889d8	                            mov rax, rbx	       271	xemit.c	FUNCTION_9	FOR_1	FOR_2
0x4000734	        0x4883c001	                              add rax, 1	       271	xemit.c	FUNCTION_9	FOR_1	FOR_2
0x4000738	          0x4889c2	                            mov rdx, rax	       271	xemit.c	FUNCTION_9	FOR_1	FOR_2
0x400073b	      0x4889442410	             mov qword [rsp + 0x10], rax	       271	xemit.c	FUNCTION_9	FOR_1	FOR_2
0x4000740	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       271	xemit.c	FUNCTION_9	FOR_1	FOR_2
0x4000745	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       271	xemit.c	FUNCTION_9	FOR_1	FOR_2
0x4000749	          0x4839d3	                            cmp rbx, rdx	       271	xemit.c	FUNCTION_9	FOR_1	FOR_2
0x400074c	            0x7fc2	                            jg 0x4000710	       271	xemit.c	FUNCTION_9	FOR_1	FOR_2
0x400074e	        0x488b4008	                mov rax, qword [rax + 8]	       275	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x4000752	      0x4889442410	             mov qword [rsp + 0x10], rax	       275	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x4000757	    0x4d8dbc248800	                   lea r15, [r12 + 0x88]	       280	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4	IF_15	CALL_17
0x400075f	            0xeb26	                           jmp 0x4000787	       280	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4	IF_15	CALL_17
0x4000761	        0x488b0c24	                    mov rcx, qword [rsp]	       280	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4	IF_15	CALL_17
0x4000765	      0xba00000000	                              mov edx, 0	       280	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4	IF_15	CALL_17
0x400076a	          0x4889de	                            mov rsi, rbx	       280	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4	IF_15	CALL_17
0x400076d	          0x4c89ff	                            mov rdi, r15	       280	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4	IF_15	CALL_17
0x4000770	      0xe885faffff	                call sym.xdl_emit_record	       280	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4	IF_15	CALL_17
0x4000775	            0x85c0	                           test eax, eax	       280	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4	IF_15	CALL_17
0x4000777	     0xf8833010000	                            js 0x40008b0	       280	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4	IF_15	CALL_17
0x400077d	    0x488344241001	               add qword [rsp + 0x10], 1	       279	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4
0x4000783	        0x4883c301	                              add rbx, 1	       279	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4
0x4000787	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       279	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4
0x400078c	        0x488b6a08	                mov rbp, qword [rdx + 8]	       279	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4
0x4000790	      0x48396c2410	            cmp qword [rsp + 0x10], rbp 	       279	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4
0x4000795	            0x7c0e	                            jl 0x40007a5	       279	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4
0x4000797	          0x4889e8	                            mov rax, rbp	       286	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5
0x400079a	        0x48034218	             add rax, qword [rdx + 0x18]	       286	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5
0x400079e	          0x4839c5	                            cmp rbp, rax	       286	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5
0x40007a1	            0x7c0a	                            jl 0x40007ad	       286	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5
0x40007a3	            0xeb3a	                           jmp 0x40007df	       286	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5
0x40007a5	        0x483b5a10	            cmp rbx, qword [rdx + 0x10] 	       279	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4
0x40007a9	            0x7dec	                           jge 0x4000797	       279	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4
0x40007ab	            0xebb4	                           jmp 0x4000761	       279	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4
0x40007ad	        0x488b0c24	                    mov rcx, qword [rsp]	       287	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5	IF_16	CALL_18
0x40007b1	      0xba00000000	                              mov edx, 0	       287	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5	IF_16	CALL_18
0x40007b6	          0x4889ee	                            mov rsi, rbp	       287	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5	IF_16	CALL_18
0x40007b9	          0x4c89e7	                            mov rdi, r12	       287	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5	IF_16	CALL_18
0x40007bc	      0xe839faffff	                call sym.xdl_emit_record	       287	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5	IF_16	CALL_18
0x40007c1	            0x85c0	                           test eax, eax	       287	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5	IF_16	CALL_18
0x40007c3	     0xf88ee000000	                            js 0x40008b7	       287	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5	IF_16	CALL_18
0x40007c9	        0x4883c501	                              add rbp, 1	       286	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5
0x40007cd	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       286	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5
0x40007d2	        0x488b4218	            mov rax, qword [rdx + 0x18] 	       286	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5
0x40007d6	        0x48034208	                add rax, qword [rdx + 8]	       286	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5
0x40007da	          0x4839e8	                            cmp rax, rbp	       286	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5
0x40007dd	            0x7fce	                            jg 0x40007ad	       286	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5
0x40007df	        0x488b6a10	            mov rbp, qword [rdx + 0x10] 	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x40007e3	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x40007e8	        0x488b5810	            mov rbx, qword [rax + 0x10] 	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x40007ec	        0x48035820	             add rbx, qword [rax + 0x20]	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x40007f0	          0x4839eb	                            cmp rbx, rbp	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x40007f3	            0x7e32	                           jle 0x4000827	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x40007f5	        0x488b0c24	                    mov rcx, qword [rsp]	       294	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6	IF_17	CALL_19
0x40007f9	      0xba00000000	                              mov edx, 0	       294	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6	IF_17	CALL_19
0x40007fe	          0x4889ee	                            mov rsi, rbp	       294	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6	IF_17	CALL_19
0x4000801	          0x4c89ff	                            mov rdi, r15	       294	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6	IF_17	CALL_19
0x4000804	      0xe8f1f9ffff	                call sym.xdl_emit_record	       294	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6	IF_17	CALL_19
0x4000809	            0x85c0	                           test eax, eax	       294	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6	IF_17	CALL_19
0x400080b	     0xf88ad000000	                            js 0x40008be	       294	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6	IF_17	CALL_19
0x4000811	        0x4883c501	                              add rbp, 1	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x4000815	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x400081a	        0x488b5820	            mov rbx, qword [rax + 0x20] 	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x400081e	        0x48035810	             add rbx, qword [rax + 0x10]	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x4000822	          0x4839eb	                            cmp rbx, rbp	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x4000825	            0x7fce	                            jg 0x40007f5	       293	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6
0x4000827	          0x4939c5	                            cmp r13, rax	       297	xemit.c	FUNCTION_9	FOR_1	FOR_3	IF_18
0x400082a	            0x741a	                            je 0x4000846	       297	xemit.c	FUNCTION_9	FOR_1	FOR_3	IF_18
0x400082c	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       299	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x4000830	        0x48035008	                add rdx, qword [rax + 8]	       299	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x4000834	      0x4889542410	             mov qword [rsp + 0x10], rdx	       299	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x4000839	          0x488b00	                    mov rax, qword [rax]	       275	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x400083c	      0x4889442438	             mov qword [rsp + 0x38], rax	       275	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x4000841	      0xe941ffffff	                           jmp 0x4000787	       301	xemit.c	FUNCTION_9	FOR_1	FOR_3
0x4000846	        0x498b5d20	            mov rbx, qword [r13 + 0x20] 	       306	xemit.c	FUNCTION_9	FOR_1	FOR_7
0x400084a	        0x49035d10	             add rbx, qword [r13 + 0x10]	       306	xemit.c	FUNCTION_9	FOR_1	FOR_7
0x400084e	      0x48395c2408	                cmp qword [rsp + 8], rbx	       306	xemit.c	FUNCTION_9	FOR_1	FOR_7
0x4000853	            0x7e2b	                           jle 0x4000880	       306	xemit.c	FUNCTION_9	FOR_1	FOR_7
0x4000855	    0x498dac248800	                   lea rbp, [r12 + 0x88]	       307	xemit.c	FUNCTION_9	FOR_1	FOR_7	IF_19	CALL_20
0x400085d	        0x488b0c24	                    mov rcx, qword [rsp]	       307	xemit.c	FUNCTION_9	FOR_1	FOR_7	IF_19	CALL_20
0x4000861	      0xba00000000	                              mov edx, 0	       307	xemit.c	FUNCTION_9	FOR_1	FOR_7	IF_19	CALL_20
0x4000866	          0x4889de	                            mov rsi, rbx	       307	xemit.c	FUNCTION_9	FOR_1	FOR_7	IF_19	CALL_20
0x4000869	          0x4889ef	                            mov rdi, rbp	       307	xemit.c	FUNCTION_9	FOR_1	FOR_7	IF_19	CALL_20
0x400086c	      0xe889f9ffff	                call sym.xdl_emit_record	       307	xemit.c	FUNCTION_9	FOR_1	FOR_7	IF_19	CALL_20
0x4000871	            0x85c0	                           test eax, eax	       307	xemit.c	FUNCTION_9	FOR_1	FOR_7	IF_19	CALL_20
0x4000873	            0x7850	                            js 0x40008c5	       307	xemit.c	FUNCTION_9	FOR_1	FOR_7	IF_19	CALL_20
0x4000875	        0x4883c301	                              add rbx, 1	       306	xemit.c	FUNCTION_9	FOR_1	FOR_7
0x4000879	      0x48395c2408	                cmp qword [rsp + 8], rbx	       306	xemit.c	FUNCTION_9	FOR_1	FOR_7
0x400087e	            0x7fdd	                            jg 0x400085d	       306	xemit.c	FUNCTION_9	FOR_1	FOR_7
0x4000880	        0x498b4500	                    mov rax, qword [r13]	       174	xemit.c	FUNCTION_9	FOR_1
0x4000884	      0x4889442438	             mov qword [rsp + 0x38], rax	       174	xemit.c	FUNCTION_9	FOR_1
0x4000889	          0x4885c0	                           test rax, rax	       174	xemit.c	FUNCTION_9	FOR_1
0x400088c	     0xf858efbffff	                           jne 0x4000420	       174	xemit.c	FUNCTION_9	FOR_1
0x4000892	            0xeb36	                           jmp 0x40008ca	       174	xemit.c	FUNCTION_9	FOR_1
0x4000894	      0xb800000000	                              mov eax, 0	       311	xemit.c	FUNCTION_9
0x4000899	            0xeb2f	                           jmp 0x40008ca	       311	xemit.c	FUNCTION_9
0x400089b	      0xb800000000	                              mov eax, 0	       311	xemit.c	FUNCTION_9
0x40008a0	            0xeb28	                           jmp 0x40008ca	       311	xemit.c	FUNCTION_9
0x40008a2	      0xb8ffffffff	                     mov eax, 0xffffffff	       266	xemit.c	FUNCTION_9	FOR_1	IF_13
0x40008a7	            0xeb21	                           jmp 0x40008ca	       266	xemit.c	FUNCTION_9	FOR_1	IF_13
0x40008a9	      0xb8ffffffff	                     mov eax, 0xffffffff	       273	xemit.c	FUNCTION_9	FOR_1	FOR_2	IF_14
0x40008ae	            0xeb1a	                           jmp 0x40008ca	       273	xemit.c	FUNCTION_9	FOR_1	FOR_2	IF_14
0x40008b0	      0xb8ffffffff	                     mov eax, 0xffffffff	       281	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4	IF_15
0x40008b5	            0xeb13	                           jmp 0x40008ca	       281	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_4	IF_15
0x40008b7	      0xb8ffffffff	                     mov eax, 0xffffffff	       288	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5	IF_16
0x40008bc	            0xeb0c	                           jmp 0x40008ca	       288	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_5	IF_16
0x40008be	      0xb8ffffffff	                     mov eax, 0xffffffff	       295	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6	IF_17
0x40008c3	            0xeb05	                           jmp 0x40008ca	       295	xemit.c	FUNCTION_9	FOR_1	FOR_3	FOR_6	IF_17
0x40008c5	      0xb8ffffffff	                     mov eax, 0xffffffff	       308	xemit.c	FUNCTION_9	FOR_1	FOR_7	IF_19
0x40008ca	    0x488b8c24a800	            mov rcx, qword [rsp + 0xa8] 	       312	xemit.c	FUNCTION_9
0x40008d2	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       312	xemit.c	FUNCTION_9
0x40008db	            0x7405	                            je 0x40008e2	       312	xemit.c	FUNCTION_9
0x40008dd	      0xe800000000	                          call 0x40008e2	       312	xemit.c	FUNCTION_9
0x40008e2	    0x4881c4b80000	                           add rsp, 0xb8	       312	xemit.c	FUNCTION_9
0x40008e9	              0x5b	                                 pop rbx	       312	xemit.c	FUNCTION_9
0x40008ea	              0x5d	                                 pop rbp	       312	xemit.c	FUNCTION_9
0x40008eb	            0x415c	                                 pop r12	       312	xemit.c	FUNCTION_9
0x40008ed	            0x415d	                                 pop r13	       312	xemit.c	FUNCTION_9
0x40008ef	            0x415e	                                 pop r14	       312	xemit.c	FUNCTION_9
0x40008f1	            0x415f	                                 pop r15	       312	xemit.c	FUNCTION_9
0x40008f3	              0xc3	                                     ret	       312	xemit.c	FUNCTION_9
match_func_rec	functions,0:FOR,0:IF,1:WHILE,0:DO,0:SWITCH,0:CALL,3:ELSE,0	61
0x4000040	            0x4155	                                push r13	       116	xemit.c	FUNCTION_5
0x4000042	            0x4154	                                push r12	       116	xemit.c	FUNCTION_5
0x4000044	              0x55	                                push rbp	       116	xemit.c	FUNCTION_5
0x4000045	              0x53	                                push rbx	       116	xemit.c	FUNCTION_5
0x4000046	        0x4883ec08	                              sub rsp, 8	       116	xemit.c	FUNCTION_5
0x400004a	          0x4989cc	                            mov r12, rcx	       116	xemit.c	FUNCTION_5
0x400004d	          0x4c89c3	                             mov rbx, r8	       116	xemit.c	FUNCTION_5
0x4000050	        0x488b4760	            mov rax, qword [rdi + 0x60] 	        27	xemit.c	FUNCTION_1
0x4000054	        0x488b04d0	            mov rax, qword [rax + rdx*8]	        27	xemit.c	FUNCTION_1
0x4000058	        0x488b6808	                mov rbp, qword [rax + 8]	        27	xemit.c	FUNCTION_1
0x400005c	        0x4c8b6810	            mov r13, qword [rax + 0x10] 	        29	xemit.c	FUNCTION_1
0x4000060	        0x488b4618	            mov rax, qword [rsi + 0x18] 	       119	xemit.c	FUNCTION_5	IF_1
0x4000064	          0x4885c0	                           test rax, rax	       119	xemit.c	FUNCTION_5	IF_1
0x4000067	            0x756f	                           jne 0x40000d8	       119	xemit.c	FUNCTION_5	IF_1
0x4000069	          0x4d85ed	                           test r13, r13	       100	xemit.c	FUNCTION_4	IF_1
0x400006c	            0x7e7e	                           jle 0x40000ec	       100	xemit.c	FUNCTION_4	IF_1
0x400006e	      0xe800000000	                          call 0x4000073	       101	xemit.c	FUNCTION_4	IF_1	CALL_1
0x4000073	          0x488b10	                    mov rdx, qword [rax]	       101	xemit.c	FUNCTION_4	IF_1	CALL_1
0x4000076	         0xfb64500	                   movzx eax, byte [rbp]	       101	xemit.c	FUNCTION_4	IF_1	CALL_1
0x400007a	           0xfb6c8	                           movzx ecx, al	       101	xemit.c	FUNCTION_4	IF_1	CALL_1
0x400007d	      0xf6444a0104	         test byte [rdx + rcx*2 + 1], 4 	       102	xemit.c	FUNCTION_4	IF_1
0x4000082	            0x7517	                           jne 0x400009b	       102	xemit.c	FUNCTION_4	IF_1
0x4000084	            0x3c5f	                            cmp al, 0x5f	       102	xemit.c	FUNCTION_4	IF_1
0x4000086	        0x400f94c6	                                sete sil	       102	xemit.c	FUNCTION_4	IF_1
0x400008a	            0x3c24	                            cmp al, 0x24	       102	xemit.c	FUNCTION_4	IF_1
0x400008c	           0xf94c1	                                 sete cl	       102	xemit.c	FUNCTION_4	IF_1
0x400008f	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       111	xemit.c	FUNCTION_4
0x4000096	          0x4008ce	                              or sil, cl	       102	xemit.c	FUNCTION_4	IF_1
0x4000099	            0x7458	                            je 0x40000f3	       102	xemit.c	FUNCTION_4	IF_1
0x400009b	          0x4c39eb	                            cmp rbx, r13	       102	xemit.c	FUNCTION_4	IF_1
0x400009e	        0x490f4fdd	                          cmovg rbx, r13	       102	xemit.c	FUNCTION_4	IF_1
0x40000a2	          0x4885db	                           test rbx, rbx	       106	xemit.c	FUNCTION_4	IF_1	WHILE_1	CALL_2
0x40000a5	            0x7e1e	                           jle 0x40000c5	       106	xemit.c	FUNCTION_4	IF_1	WHILE_1	CALL_2
0x40000a7	       0xfb6441dff	         movzx eax, byte [rbp + rbx - 1]	       106	xemit.c	FUNCTION_4	IF_1	WHILE_1	CALL_2
0x40000ac	      0xf644420120	      test byte [rdx + rax*2 + 1], 0x20 	       106	xemit.c	FUNCTION_4	IF_1	WHILE_1	CALL_2
0x40000b1	            0x7412	                            je 0x40000c5	       106	xemit.c	FUNCTION_4	IF_1	WHILE_1	CALL_2
0x40000b3	        0x4883eb01	                              sub rbx, 1	       106	xemit.c	FUNCTION_4	IF_1	WHILE_1	CALL_2
0x40000b7	            0x740c	                            je 0x40000c5	       106	xemit.c	FUNCTION_4	IF_1	WHILE_1	CALL_2
0x40000b9	       0xfb6441dff	         movzx eax, byte [rbp + rbx - 1]	       106	xemit.c	FUNCTION_4	IF_1	WHILE_1	CALL_2
0x40000be	      0xf644420120	      test byte [rdx + rax*2 + 1], 0x20 	       106	xemit.c	FUNCTION_4	IF_1	WHILE_1	CALL_2
0x40000c3	            0x75ee	                           jne 0x40000b3	       106	xemit.c	FUNCTION_4	IF_1	WHILE_1	CALL_2
0x40000c5	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_10	CALL_3
0x40000c8	          0x4889ee	                            mov rsi, rbp	        53	string3.h	FUNCTION_10	CALL_3
0x40000cb	          0x4c89e7	                            mov rdi, r12	        53	string3.h	FUNCTION_10	CALL_3
0x40000ce	      0xe800000000	                          call 0x40000d3	        53	string3.h	FUNCTION_10	CALL_3
0x40000d3	          0x4889d8	                            mov rax, rbx	        53	string3.h	FUNCTION_10	CALL_3
0x40000d6	            0xeb1b	                           jmp 0x40000f3	        53	string3.h	FUNCTION_10	CALL_3
0x40000d8	        0x4c8b4620	              mov r8, qword [rsi + 0x20]	       121	xemit.c	FUNCTION_5	CALL_3
0x40000dc	          0x4889d9	                            mov rcx, rbx	       121	xemit.c	FUNCTION_5	CALL_3
0x40000df	          0x4c89e2	                            mov rdx, r12	       121	xemit.c	FUNCTION_5	CALL_3
0x40000e2	          0x4c89ee	                            mov rsi, r13	       121	xemit.c	FUNCTION_5	CALL_3
0x40000e5	          0x4889ef	                            mov rdi, rbp	       121	xemit.c	FUNCTION_5	CALL_3
0x40000e8	            0xffd0	                                call rax	       121	xemit.c	FUNCTION_5	CALL_3
0x40000ea	            0xeb07	                           jmp 0x40000f3	       121	xemit.c	FUNCTION_5	CALL_3
0x40000ec	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       111	xemit.c	FUNCTION_4
0x40000f3	        0x4883c408	                              add rsp, 8	       122	xemit.c	FUNCTION_5
0x40000f7	              0x5b	                                 pop rbx	       122	xemit.c	FUNCTION_5
0x40000f8	              0x5d	                                 pop rbp	       122	xemit.c	FUNCTION_5
0x40000f9	            0x415c	                                 pop r12	       122	xemit.c	FUNCTION_5
0x40000fb	            0x415d	                                 pop r13	       122	xemit.c	FUNCTION_5
0x40000fd	              0xc3	                                     ret	       122	xemit.c	FUNCTION_5
