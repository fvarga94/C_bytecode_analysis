next_hfs_char	DO,0:FOR,0:ELSE,0:functions,0:WHILE,1:CALL,1:SWITCH,1:IF,1	25
0x400027a	              0x53	                                push rbx	       647	utf8.c	FUNCTION_24
0x400027b	          0x4889fb	                            mov rbx, rdi	       647	utf8.c	FUNCTION_24
0x400027e	      0xbe00000000	                              mov esi, 0	       649	utf8.c	FUNCTION_24	WHILE_1	CALL_1
0x4000283	          0x4889df	                            mov rdi, rbx	       649	utf8.c	FUNCTION_24	WHILE_1	CALL_1
0x4000286	      0xe813feffff	             call sym.pick_one_utf8_char	       649	utf8.c	FUNCTION_24	WHILE_1	CALL_1
0x400028b	        0x48833b00	                      cmp qword [rbx], 0	       656	utf8.c	FUNCTION_24	WHILE_1	IF_1
0x400028f	            0x7432	                            je 0x40002c3	       656	utf8.c	FUNCTION_24	WHILE_1	IF_1
0x4000291	      0x3d2e200000	                         cmp eax, 0x202e	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x4000296	            0x7714	                            ja 0x40002ac	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x4000298	      0x3d2a200000	                         cmp eax, 0x202a	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x400029d	            0x73df	                           jae 0x400027e	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x400029f	    0x8d90f4dfffff	                 lea edx, [rax - 0x200c]	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x40002a5	          0x83fa03	                              cmp edx, 3	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x40002a8	            0x771e	                            ja 0x40002c8	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x40002aa	            0xebd2	                           jmp 0x400027e	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x40002ac	      0x3d6a200000	                         cmp eax, 0x206a	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x40002b1	            0x7215	                            jb 0x40002c8	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x40002b3	      0x3d6f200000	                         cmp eax, 0x206f	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x40002b8	            0x76c4	                           jbe 0x400027e	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x40002ba	      0x3dfffe0000	                         cmp eax, 0xfeff	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x40002bf	            0x74bd	                            je 0x400027e	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x40002c1	            0xeb05	                           jmp 0x40002c8	       660	utf8.c	FUNCTION_24	WHILE_1	SWITCH_1
0x40002c3	      0xb800000000	                              mov eax, 0	       657	utf8.c	FUNCTION_24	WHILE_1	IF_1
0x40002c8	              0x5b	                                 pop rbx	       682	utf8.c	FUNCTION_24
0x40002c9	              0xc3	                                     ret	       682	utf8.c	FUNCTION_24
has_prohibited_utf_bom	DO,0:FOR,0:ELSE,0:functions,0:WHILE,0:CALL,8:SWITCH,0:IF,0	64
0x4000eb7	            0x4154	                                push r12	       575	utf8.c	FUNCTION_21
0x4000eb9	              0x55	                                push rbp	       575	utf8.c	FUNCTION_21
0x4000eba	              0x53	                                push rbx	       575	utf8.c	FUNCTION_21
0x4000ebb	          0x4989fc	                            mov r12, rdi	       575	utf8.c	FUNCTION_21
0x4000ebe	          0x4889f3	                            mov rbx, rsi	       575	utf8.c	FUNCTION_21
0x4000ec1	          0x4889d5	                            mov rbp, rdx	       575	utf8.c	FUNCTION_21
0x4000ec4	          0x4889fe	                            mov rsi, rdi	       577	utf8.c	FUNCTION_21	CALL_1
0x4000ec7	      0xbf00000000	                              mov edi, 0	       577	utf8.c	FUNCTION_21	CALL_1
0x4000ecc	      0xe8f9f3ffff	              call sym.same_utf_encoding	       577	utf8.c	FUNCTION_21	CALL_1
0x4000ed1	            0x85c0	                           test eax, eax	       581	utf8.c	FUNCTION_21
0x4000ed3	            0x7511	                           jne 0x4000ee6	       581	utf8.c	FUNCTION_21
0x4000ed5	          0x4c89e6	                            mov rsi, r12	       578	utf8.c	FUNCTION_21	CALL_2
0x4000ed8	      0xbf00000000	                              mov edi, 0	       578	utf8.c	FUNCTION_21	CALL_2
0x4000edd	      0xe8e8f3ffff	              call sym.same_utf_encoding	       578	utf8.c	FUNCTION_21	CALL_2
0x4000ee2	            0x85c0	                           test eax, eax	       577	utf8.c	FUNCTION_21	CALL_1
0x4000ee4	            0x743c	                            je 0x4000f22	       577	utf8.c	FUNCTION_21	CALL_1
0x4000ee6	      0xb902000000	                              mov ecx, 2	       579	utf8.c	FUNCTION_21	CALL_3
0x4000eeb	      0xba00000000	                              mov edx, 0	       579	utf8.c	FUNCTION_21	CALL_3
0x4000ef0	          0x4889ee	                            mov rsi, rbp	       579	utf8.c	FUNCTION_21	CALL_3
0x4000ef3	          0x4889df	                            mov rdi, rbx	       579	utf8.c	FUNCTION_21	CALL_3
0x4000ef6	      0xe834f4ffff	                 call sym.has_bom_prefix	       579	utf8.c	FUNCTION_21	CALL_3
0x4000efb	      0xba01000000	                              mov edx, 1	       581	utf8.c	FUNCTION_21
0x4000f00	            0x85c0	                           test eax, eax	       578	utf8.c	FUNCTION_21	CALL_2
0x4000f02	            0x757d	                           jne 0x4000f81	       578	utf8.c	FUNCTION_21	CALL_2
0x4000f04	      0xb902000000	                              mov ecx, 2	       580	utf8.c	FUNCTION_21	CALL_4
0x4000f09	      0xba00000000	                              mov edx, 0	       580	utf8.c	FUNCTION_21	CALL_4
0x4000f0e	          0x4889ee	                            mov rsi, rbp	       580	utf8.c	FUNCTION_21	CALL_4
0x4000f11	          0x4889df	                            mov rdi, rbx	       580	utf8.c	FUNCTION_21	CALL_4
0x4000f14	      0xe816f4ffff	                 call sym.has_bom_prefix	       580	utf8.c	FUNCTION_21	CALL_4
0x4000f19	      0xba01000000	                              mov edx, 1	       581	utf8.c	FUNCTION_21
0x4000f1e	            0x85c0	                           test eax, eax	       579	utf8.c	FUNCTION_21	CALL_3
0x4000f20	            0x755f	                           jne 0x4000f81	       579	utf8.c	FUNCTION_21	CALL_3
0x4000f22	          0x4c89e6	                            mov rsi, r12	       582	utf8.c	FUNCTION_21	CALL_5
0x4000f25	      0xbf00000000	                              mov edi, 0	       582	utf8.c	FUNCTION_21	CALL_5
0x4000f2a	      0xe89bf3ffff	              call sym.same_utf_encoding	       582	utf8.c	FUNCTION_21	CALL_5
0x4000f2f	            0x85c0	                           test eax, eax	       581	utf8.c	FUNCTION_21
0x4000f31	            0x7513	                           jne 0x4000f46	       581	utf8.c	FUNCTION_21
0x4000f33	          0x4c89e6	                            mov rsi, r12	       583	utf8.c	FUNCTION_21	CALL_6
0x4000f36	      0xbf00000000	                              mov edi, 0	       583	utf8.c	FUNCTION_21	CALL_6
0x4000f3b	      0xe88af3ffff	              call sym.same_utf_encoding	       583	utf8.c	FUNCTION_21	CALL_6
0x4000f40	            0x89c2	                            mov edx, eax	       583	utf8.c	FUNCTION_21	CALL_6
0x4000f42	            0x85c0	                           test eax, eax	       582	utf8.c	FUNCTION_21	CALL_5
0x4000f44	            0x743b	                            je 0x4000f81	       582	utf8.c	FUNCTION_21	CALL_5
0x4000f46	      0xb904000000	                              mov ecx, 4	       584	utf8.c	FUNCTION_21	CALL_7
0x4000f4b	      0xba00000000	                              mov edx, 0	       584	utf8.c	FUNCTION_21	CALL_7
0x4000f50	          0x4889ee	                            mov rsi, rbp	       584	utf8.c	FUNCTION_21	CALL_7
0x4000f53	          0x4889df	                            mov rdi, rbx	       584	utf8.c	FUNCTION_21	CALL_7
0x4000f56	      0xe8d4f3ffff	                 call sym.has_bom_prefix	       584	utf8.c	FUNCTION_21	CALL_7
0x4000f5b	      0xba01000000	                              mov edx, 1	       581	utf8.c	FUNCTION_21
0x4000f60	            0x85c0	                           test eax, eax	       583	utf8.c	FUNCTION_21	CALL_6
0x4000f62	            0x751d	                           jne 0x4000f81	       583	utf8.c	FUNCTION_21	CALL_6
0x4000f64	      0xb904000000	                              mov ecx, 4	       585	utf8.c	FUNCTION_21	CALL_8
0x4000f69	      0xba00000000	                              mov edx, 0	       585	utf8.c	FUNCTION_21	CALL_8
0x4000f6e	          0x4889ee	                            mov rsi, rbp	       585	utf8.c	FUNCTION_21	CALL_8
0x4000f71	          0x4889df	                            mov rdi, rbx	       585	utf8.c	FUNCTION_21	CALL_8
0x4000f74	      0xe8b6f3ffff	                 call sym.has_bom_prefix	       585	utf8.c	FUNCTION_21	CALL_8
0x4000f79	            0x85c0	                           test eax, eax	       581	utf8.c	FUNCTION_21
0x4000f7b	           0xf95c2	                                setne dl	       581	utf8.c	FUNCTION_21
0x4000f7e	           0xfb6d2	                           movzx edx, dl	       581	utf8.c	FUNCTION_21
0x4000f81	            0x89d0	                            mov eax, edx	       587	utf8.c	FUNCTION_21
0x4000f83	              0x5b	                                 pop rbx	       587	utf8.c	FUNCTION_21
0x4000f84	              0x5d	                                 pop rbp	       587	utf8.c	FUNCTION_21
0x4000f85	            0x415c	                                 pop r12	       587	utf8.c	FUNCTION_21
0x4000f87	              0xc3	                                     ret	       587	utf8.c	FUNCTION_21
same_utf_encoding	DO,0:FOR,0:ELSE,0:functions,0:WHILE,0:CALL,3:SWITCH,0:IF,1	34
0x40002ca	              0x55	                                push rbp	       410	utf8.c	FUNCTION_13
0x40002cb	              0x53	                                push rbx	       410	utf8.c	FUNCTION_13
0x40002cc	        0x4883ec08	                              sub rsp, 8	       410	utf8.c	FUNCTION_13
0x40002d0	          0x4889fb	                            mov rbx, rdi	       410	utf8.c	FUNCTION_13
0x40002d3	          0x4889f5	                            mov rbp, rsi	       410	utf8.c	FUNCTION_13
0x40002d6	      0xbe00000000	                              mov esi, 0	       411	utf8.c	FUNCTION_13	IF_1	CALL_2
0x40002db	      0xe800000000	                          call 0x40002e0	       411	utf8.c	FUNCTION_13	IF_1	CALL_2
0x40002e0	            0x85c0	                           test eax, eax	       411	utf8.c	FUNCTION_13	IF_1	CALL_2
0x40002e2	            0x7444	                            je 0x4000328	       411	utf8.c	FUNCTION_13	IF_1	CALL_2
0x40002e4	      0xbe00000000	                              mov esi, 0	       411	utf8.c	FUNCTION_13	IF_1	CALL_2
0x40002e9	          0x4889ef	                            mov rdi, rbp	       411	utf8.c	FUNCTION_13	IF_1	CALL_2
0x40002ec	      0xe800000000	                          call 0x40002f1	       411	utf8.c	FUNCTION_13	IF_1	CALL_2
0x40002f1	            0x85c0	                           test eax, eax	       411	utf8.c	FUNCTION_13	IF_1	CALL_2
0x40002f3	            0x7433	                            je 0x4000328	       411	utf8.c	FUNCTION_13	IF_1	CALL_2
0x40002f5	        0x807b032d	                cmp byte [rbx + 3], 0x2d	       413	utf8.c	FUNCTION_13	IF_1
0x40002f9	           0xf94c0	                                 sete al	       413	utf8.c	FUNCTION_13	IF_1
0x40002fc	           0xfb6c0	                           movzx eax, al	       413	utf8.c	FUNCTION_13	IF_1
0x40002ff	          0x83c003	                              add eax, 3	       413	utf8.c	FUNCTION_13	IF_1
0x4000302	        0x807d032d	                cmp byte [rbp + 3], 0x2d	       414	utf8.c	FUNCTION_13	IF_1
0x4000306	           0xf94c2	                                 sete dl	       414	utf8.c	FUNCTION_13	IF_1
0x4000309	           0xfb6d2	                           movzx edx, dl	       414	utf8.c	FUNCTION_13	IF_1
0x400030c	          0x83c203	                              add edx, 3	       414	utf8.c	FUNCTION_13	IF_1
0x400030f	          0x4863f2	                         movsxd rsi, edx	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0x4000312	          0x4801ee	                            add rsi, rbp	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0x4000315	          0x4863f8	                         movsxd rdi, eax	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0x4000318	          0x4801df	                            add rdi, rbx	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0x400031b	      0xe800000000	                          call 0x4000320	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0x4000320	            0x85c0	                           test eax, eax	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0x4000322	           0xf94c0	                                 sete al	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0x4000325	           0xfb6c0	                           movzx eax, al	       415	utf8.c	FUNCTION_13	IF_1	CALL_3
0x4000328	        0x4883c408	                              add rsp, 8	       418	utf8.c	FUNCTION_13
0x400032c	              0x5b	                                 pop rbx	       418	utf8.c	FUNCTION_13
0x400032d	              0x5d	                                 pop rbp	       418	utf8.c	FUNCTION_13
0x400032e	              0xc3	                                     ret	       418	utf8.c	FUNCTION_13
is_utf8	DO,0:FOR,0:ELSE,0:functions,0:WHILE,1:CALL,1:SWITCH,0:IF,2	25
0x40004d7	        0x4883ec08	                              sub rsp, 8	       229	utf8.c	FUNCTION_8
0x40004db	        0x48893c24	                    mov qword [rsp], rdi	       229	utf8.c	FUNCTION_8
0x40004df	            0xeb2b	                           jmp 0x400050c	       230	utf8.c	FUNCTION_8	WHILE_1
0x40004e1	          0x8d4af7	                      lea ecx, [rdx - 9]	       231	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x40004e4	          0x80f901	                               cmp cl, 1	       231	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x40004e7	            0x7605	                           jbe 0x40004ee	       231	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x40004e9	          0x80fa0d	                             cmp dl, 0xd	       231	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x40004ec	            0x750a	                           jne 0x40004f8	       231	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x40004ee	        0x4883c001	                              add rax, 1	       232	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x40004f2	        0x48890424	                    mov qword [rsp], rax	       232	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x40004f6	            0xeb14	                           jmp 0x400050c	       233	utf8.c	FUNCTION_8	WHILE_1	IF_1
0x40004f8	      0xbe00000000	                              mov esi, 0	       235	utf8.c	FUNCTION_8	WHILE_1	CALL_1
0x40004fd	          0x4889e7	                            mov rdi, rsp	       235	utf8.c	FUNCTION_8	WHILE_1	CALL_1
0x4000500	      0xe800000000	                          call 0x4000505	       235	utf8.c	FUNCTION_8	WHILE_1	CALL_1
0x4000505	      0x48833c2400	                      cmp qword [rsp], 0	       236	utf8.c	FUNCTION_8	WHILE_1	IF_2
0x400050a	            0x7412	                            je 0x400051e	       236	utf8.c	FUNCTION_8	WHILE_1	IF_2
0x400050c	        0x488b0424	                    mov rax, qword [rsp]	       230	utf8.c	FUNCTION_8	WHILE_1
0x4000510	           0xfb610	                   movzx edx, byte [rax]	       230	utf8.c	FUNCTION_8	WHILE_1
0x4000513	            0x84d2	                             test dl, dl	       230	utf8.c	FUNCTION_8	WHILE_1
0x4000515	            0x75ca	                           jne 0x40004e1	       230	utf8.c	FUNCTION_8	WHILE_1
0x4000517	      0xb801000000	                              mov eax, 1	       239	utf8.c	FUNCTION_8
0x400051c	            0xeb05	                           jmp 0x4000523	       239	utf8.c	FUNCTION_8
0x400051e	      0xb800000000	                              mov eax, 0	       237	utf8.c	FUNCTION_8	WHILE_1	IF_2
0x4000523	        0x4883c408	                              add rsp, 8	       240	utf8.c	FUNCTION_8
0x4000527	              0xc3	                                     ret	       240	utf8.c	FUNCTION_8
display_mode_esc_sequence_len	DO,0:FOR,0:ELSE,0:functions,0:WHILE,1:CALL,1:SWITCH,0:IF,3	25
0x400036a	      0xb800000000	                              mov eax, 0	        16	utf8.c	FUNCTION_1
0x400036f	          0x803f1b	                    cmp byte [rdi], 0x1b	        15	utf8.c	IF_1	FUNCTION_1
0x4000372	            0x7548	                           jne 0x40003bc	        15	utf8.c	IF_1	FUNCTION_1
0x4000374	        0x807f015b	                cmp byte [rdi + 1], 0x5b	        17	utf8.c	FUNCTION_1	IF_2
0x4000378	            0x7542	                           jne 0x40003bc	        17	utf8.c	FUNCTION_1	IF_2
0x400037a	        0x488d5702	                      lea rdx, [rdi + 2]	        17	utf8.c	FUNCTION_1	IF_2
0x400037e	         0xfb64f02	               movzx ecx, byte [rdi + 2]	        19	utf8.c	FUNCTION_1	WHILE_1	CALL_1
0x4000382	           0xfb6c1	                           movzx eax, cl	        19	utf8.c	FUNCTION_1	WHILE_1	CALL_1
0x4000385	    0xf68000000000	                      test byte [rax], 2	        19	utf8.c	FUNCTION_1	WHILE_1	CALL_1
0x400038c	            0x7505	                           jne 0x4000393	        19	utf8.c	FUNCTION_1	WHILE_1	CALL_1
0x400038e	          0x80f93b	                            cmp cl, 0x3b	        19	utf8.c	FUNCTION_1	WHILE_1	CALL_1
0x4000391	            0x7518	                           jne 0x40003ab	        19	utf8.c	FUNCTION_1	WHILE_1	CALL_1
0x4000393	        0x4883c201	                              add rdx, 1	        20	utf8.c	FUNCTION_1	WHILE_1
0x4000397	           0xfb60a	                   movzx ecx, byte [rdx]	        19	utf8.c	FUNCTION_1	WHILE_1	CALL_1
0x400039a	           0xfb6c1	                           movzx eax, cl	        19	utf8.c	FUNCTION_1	WHILE_1	CALL_1
0x400039d	    0xf68000000000	                      test byte [rax], 2	        19	utf8.c	FUNCTION_1	WHILE_1	CALL_1
0x40003a4	            0x75ed	                           jne 0x4000393	        19	utf8.c	FUNCTION_1	WHILE_1	CALL_1
0x40003a6	          0x80f93b	                            cmp cl, 0x3b	        19	utf8.c	FUNCTION_1	WHILE_1	CALL_1
0x40003a9	            0x74e8	                            je 0x4000393	        19	utf8.c	FUNCTION_1	WHILE_1	CALL_1
0x40003ab	      0xb800000000	                              mov eax, 0	        22	utf8.c	FUNCTION_1	IF_3
0x40003b0	          0x80f96d	                            cmp cl, 0x6d	        21	utf8.c	FUNCTION_1	IF_3
0x40003b3	            0x7507	                           jne 0x40003bc	        21	utf8.c	FUNCTION_1	IF_3
0x40003b5	        0x488d4201	                      lea rax, [rdx + 1]	        23	utf8.c	FUNCTION_1
0x40003b9	          0x4829f8	                            sub rax, rdi	        23	utf8.c	FUNCTION_1
0x40003bc	            0xf3c3	                                     ret	        24	utf8.c	FUNCTION_1
strbuf_add_wrapped_text	DO,0:FOR,1:ELSE,6:functions,0:WHILE,1:CALL,12:SWITCH,0:IF,13	251
0x4000528	            0x4157	                                push r15	       266	utf8.c	FUNCTION_10
0x400052a	            0x4156	                                push r14	       266	utf8.c	FUNCTION_10
0x400052c	            0x4155	                                push r13	       266	utf8.c	FUNCTION_10
0x400052e	            0x4154	                                push r12	       266	utf8.c	FUNCTION_10
0x4000530	              0x55	                                push rbp	       266	utf8.c	FUNCTION_10
0x4000531	              0x53	                                push rbx	       266	utf8.c	FUNCTION_10
0x4000532	        0x4883ec48	                           sub rsp, 0x48	       266	utf8.c	FUNCTION_10
0x4000536	          0x4989fc	                            mov r12, rdi	       266	utf8.c	FUNCTION_10
0x4000539	      0x4889742438	             mov qword [rsp + 0x38], rsi	       266	utf8.c	FUNCTION_10
0x400053e	        0x8954241c	             mov dword [rsp + 0x1c], edx	       266	utf8.c	FUNCTION_10
0x4000542	        0x894c2418	             mov dword [rsp + 0x18], ecx	       266	utf8.c	FUNCTION_10
0x4000546	      0x448944240c	              mov dword [rsp + 0xc], r8d	       266	utf8.c	FUNCTION_10
0x400054b	      0x4889742428	             mov qword [rsp + 0x28], rsi	       268	utf8.c	FUNCTION_10
0x4000550	        0x488b4708	                mov rax, qword [rdi + 8]	       269	utf8.c	FUNCTION_10
0x4000554	      0x4889442430	             mov qword [rsp + 0x30], rax	       269	utf8.c	FUNCTION_10
0x4000559	          0x4585c0	                           test r8d, r8d	       271	utf8.c	FUNCTION_10	IF_1
0x400055c	            0x7e17	                           jle 0x4000575	       271	utf8.c	FUNCTION_10	IF_1
0x400055e	            0x89d0	                            mov eax, edx	       281	utf8.c	FUNCTION_10	IF_2
0x4000560	            0xf7d8	                                 neg eax	       281	utf8.c	FUNCTION_10	IF_2
0x4000562	            0x85d2	                           test edx, edx	       281	utf8.c	FUNCTION_10	IF_2
0x4000564	           0xf49c2	                         cmovns eax, edx	       281	utf8.c	FUNCTION_10	IF_2
0x4000567	        0x89442424	             mov dword [rsp + 0x24], eax	       281	utf8.c	FUNCTION_10	IF_2
0x400056b	    0xc74424200100	               mov dword [rsp + 0x20], 1	       281	utf8.c	FUNCTION_10	IF_2
0x4000573	            0xeb7f	                           jmp 0x40005f4	       281	utf8.c	FUNCTION_10	IF_2
0x4000575	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	       281	utf8.c	FUNCTION_10	IF_2
0x4000579	            0x85c0	                           test eax, eax	       281	utf8.c	FUNCTION_10	IF_2
0x400057b	      0xbb00000000	                              mov ebx, 0	       281	utf8.c	FUNCTION_10	IF_2
0x4000580	           0xf49d8	                         cmovns ebx, eax	       281	utf8.c	FUNCTION_10	IF_2
0x4000583	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       247	utf8.c	FUNCTION_9	WHILE_1
0x4000588	          0x803800	                       cmp byte [rax], 0	       247	utf8.c	FUNCTION_9	WHILE_1
0x400058b	            0x750a	                           jne 0x4000597	       247	utf8.c	FUNCTION_9	WHILE_1
0x400058d	      0xe965030000	                           jmp 0x40008f7	       247	utf8.c	FUNCTION_9	WHILE_1
0x4000592	          0x4989ed	                            mov r13, rbp	       253	utf8.c	FUNCTION_9	WHILE_1
0x4000595	            0xeb0a	                           jmp 0x40005a1	       253	utf8.c	FUNCTION_9	WHILE_1
0x4000597	      0x4c8b6c2428	            mov r13, qword [rsp + 0x28] 	       253	utf8.c	FUNCTION_9	WHILE_1
0x400059c	      0x448b742418	           mov r14d, dword [rsp + 0x18] 	       253	utf8.c	FUNCTION_9	WHILE_1
0x40005a1	      0xbe0a000000	                            mov esi, 0xa	       248	utf8.c	FUNCTION_9	WHILE_1	CALL_1
0x40005a6	          0x4c89ef	                            mov rdi, r13	       248	utf8.c	FUNCTION_9	WHILE_1	CALL_1
0x40005a9	      0xe800000000	                          call 0x40005ae	       248	utf8.c	FUNCTION_9	WHILE_1	CALL_1
0x40005ae	          0x4889c5	                            mov rbp, rax	       248	utf8.c	FUNCTION_9	WHILE_1	CALL_1
0x40005b1	          0x80380a	                     cmp byte [rax], 0xa	       250	utf8.c	FUNCTION_9	WHILE_1	IF_2
0x40005b4	           0xf94c0	                                 sete al	       250	utf8.c	FUNCTION_9	WHILE_1	IF_2
0x40005b7	           0xfb6c0	                           movzx eax, al	       250	utf8.c	FUNCTION_9	WHILE_1	IF_2
0x40005ba	          0x4801c5	                            add rbp, rax	       250	utf8.c	FUNCTION_9	WHILE_1	IF_2
0x40005bd	          0x4863d3	                         movsxd rdx, ebx	       251	utf8.c	FUNCTION_9	WHILE_1	CALL_2
0x40005c0	      0xbe20000000	                           mov esi, 0x20	       251	utf8.c	FUNCTION_9	WHILE_1	CALL_2
0x40005c5	          0x4c89e7	                            mov rdi, r12	       251	utf8.c	FUNCTION_9	WHILE_1	CALL_2
0x40005c8	      0xe800000000	                          call 0x40005cd	       251	utf8.c	FUNCTION_9	WHILE_1	CALL_2
0x40005cd	          0x4889ea	                            mov rdx, rbp	       252	utf8.c	FUNCTION_9	WHILE_1	CALL_3
0x40005d0	          0x4c29ea	                            sub rdx, r13	       252	utf8.c	FUNCTION_9	WHILE_1	CALL_3
0x40005d3	          0x4c89ee	                            mov rsi, r13	       252	utf8.c	FUNCTION_9	WHILE_1	CALL_3
0x40005d6	          0x4c89e7	                            mov rdi, r12	       252	utf8.c	FUNCTION_9	WHILE_1	CALL_3
0x40005d9	      0xe800000000	                          call 0x40005de	       252	utf8.c	FUNCTION_9	WHILE_1	CALL_3
0x40005de	          0x4489f3	                           mov ebx, r14d	       254	utf8.c	FUNCTION_9	WHILE_1
0x40005e1	        0x807d0000	                       cmp byte [rbp], 0	       247	utf8.c	FUNCTION_9	WHILE_1
0x40005e5	            0x75ab	                           jne 0x4000592	       247	utf8.c	FUNCTION_9	WHILE_1
0x40005e7	      0xe90b030000	                           jmp 0x40008f7	       247	utf8.c	FUNCTION_9	WHILE_1
0x40005ec	    0xc74424200000	               mov dword [rsp + 0x20], 0	       247	utf8.c	FUNCTION_9	WHILE_1
0x40005f4	      0x4c8b6c2438	            mov r13, qword [rsp + 0x38] 	       277	utf8.c	FUNCTION_10
0x40005f9	        0x8b44241c	            mov eax, dword [rsp + 0x1c] 	       282	utf8.c	FUNCTION_10	IF_2
0x40005fd	            0x85c0	                           test eax, eax	       282	utf8.c	FUNCTION_10	IF_2
0x40005ff	      0xbd00000000	                              mov ebp, 0	       282	utf8.c	FUNCTION_10	IF_2
0x4000604	        0x490f48ed	                          cmovs rbp, r13	       282	utf8.c	FUNCTION_10	IF_2
0x4000608	      0x448b7c2424	           mov r15d, dword [rsp + 0x24] 	       326	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0x400060d	        0x89442414	             mov dword [rsp + 0x14], eax	       326	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0x4000611	            0xeb08	                           jmp 0x400061b	       326	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0x4000613	          0x4801d8	                            add rax, rbx	       290	utf8.c	FUNCTION_10	FOR_1	WHILE_1
0x4000616	      0x4889442438	             mov qword [rsp + 0x38], rax	       290	utf8.c	FUNCTION_10	FOR_1	WHILE_1
0x400061b	      0x488b5c2438	            mov rbx, qword [rsp + 0x38] 	       289	utf8.c	FUNCTION_10	FOR_1	WHILE_1	CALL_2
0x4000620	          0x4889df	                            mov rdi, rbx	       289	utf8.c	FUNCTION_10	FOR_1	WHILE_1	CALL_2
0x4000623	      0xe800000000	                          call 0x4000628	       289	utf8.c	FUNCTION_10	FOR_1	WHILE_1	CALL_2
0x4000628	          0x4885c0	                           test rax, rax	       289	utf8.c	FUNCTION_10	FOR_1	WHILE_1	CALL_2
0x400062b	            0x75e6	                           jne 0x4000613	       289	utf8.c	FUNCTION_10	FOR_1	WHILE_1	CALL_2
0x400062d	        0x440fb633	                  movzx r14d, byte [rbx]	       292	utf8.c	FUNCTION_10	FOR_1
0x4000631	          0x4584f6	                         test r14b, r14b	       293	utf8.c	FUNCTION_10	FOR_1	IF_3	CALL_3
0x4000634	            0x7416	                            je 0x400064c	       293	utf8.c	FUNCTION_10	FOR_1	IF_3	CALL_3
0x4000636	        0x410fb6c6	                         movzx eax, r14b	       293	utf8.c	FUNCTION_10	FOR_1	IF_3	CALL_3
0x400063a	    0xf68000000000	                      test byte [rax], 1	       293	utf8.c	FUNCTION_10	FOR_1	IF_3	CALL_3
0x4000641	     0xf8568020000	                           jne 0x40008af	       293	utf8.c	FUNCTION_10	FOR_1	IF_3	CALL_3
0x4000647	      0xe9a7010000	                           jmp 0x40007f3	       293	utf8.c	FUNCTION_10	FOR_1	IF_3	CALL_3
0x400064c	      0x443b7c240c	            cmp r15d, dword [rsp + 0xc] 	       294	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x4000651	           0xf9ec2	                                setle dl	       294	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x4000654	          0x4885ed	                           test rbp, rbp	       294	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x4000657	           0xf94c0	                                 sete al	       294	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x400065a	             0x8c2	                               or dl, al	       294	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x400065c	        0x88542413	               mov byte [rsp + 0x13], dl	       294	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x4000660	     0xf841a010000	                            je 0x4000780	       294	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x4000666	          0x4939dd	                            cmp r13, rbx	       296	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5
0x4000669	     0xf857e020000	                           jne 0x40008ed	       296	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5
0x400066f	      0xe983020000	                           jmp 0x40008f7	       296	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5
0x4000674	      0x4863542414	         movsxd rdx, dword [rsp + 0x14] 	       301	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_4
0x4000679	      0xbe20000000	                           mov esi, 0x20	       301	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_4
0x400067e	          0x4c89e7	                            mov rdi, r12	       301	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_4
0x4000681	      0xe800000000	                          call 0x4000686	       301	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_4
0x4000686	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0x400068b	          0x4c29ea	                            sub rdx, r13	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0x400068e	          0x4c89ee	                            mov rsi, r13	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0x4000691	          0x4c89e7	                            mov rdi, r12	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0x4000694	      0xe800000000	                          call 0x4000699	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0x4000699	      0x807c241300	                cmp byte [rsp + 0x13], 0	       303	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_7
0x400069e	     0xf8553020000	                           jne 0x40008f7	       303	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_7
0x40006a4	      0x488b6c2438	            mov rbp, qword [rsp + 0x38] 	       305	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x40006a9	        0x4180fe09	                             cmp r14b, 9	       306	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_8
0x40006ad	            0x7509	                           jne 0x40006b8	       306	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_8
0x40006af	        0x4183cf07	                              or r15d, 7	       307	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_8
0x40006b3	      0xe9b9000000	                           jmp 0x4000771	       307	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_8
0x40006b8	        0x4180fe0a	                           cmp r14b, 0xa	       308	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9
0x40006bc	     0xf85af000000	                           jne 0x4000771	       308	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9
0x40006c2	        0x488d5d01	                      lea rbx, [rbp + 1]	       309	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9
0x40006c6	         0xfb64501	               movzx eax, byte [rbp + 1]	       310	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	IF_10
0x40006ca	            0x3c0a	                             cmp al, 0xa	       310	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	IF_10
0x40006cc	            0x754b	                           jne 0x4000719	       310	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	IF_10
0x40006ce	        0x498b0424	                    mov rax, qword [r12]	       141	strbuf.h	FUNCTION_29
0x40006d2	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_29
0x40006d5	            0x740b	                            je 0x40006e2	       141	strbuf.h	FUNCTION_29
0x40006d7	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_31	IF_1	CALL_1
0x40006db	      0x4939442408	                cmp qword [r12 + 8], rax	       227	strbuf.h	FUNCTION_31	IF_1	CALL_1
0x40006e0	            0x750d	                           jne 0x40006ef	       227	strbuf.h	FUNCTION_31	IF_1	CALL_1
0x40006e2	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_31	CALL_2
0x40006e7	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_31	CALL_2
0x40006ea	      0xe800000000	                          call 0x40006ef	       228	strbuf.h	FUNCTION_31	CALL_2
0x40006ef	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       229	strbuf.h	FUNCTION_31
0x40006f4	      0x498b442408	                mov rax, qword [r12 + 8]	       229	strbuf.h	FUNCTION_31
0x40006f9	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_31
0x40006fd	      0x49894c2408	                mov qword [r12 + 8], rcx	       229	strbuf.h	FUNCTION_31
0x4000702	        0xc604020a	               mov byte [rdx + rax], 0xa	       229	strbuf.h	FUNCTION_31
0x4000706	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       230	strbuf.h	FUNCTION_31
0x400070b	      0x498b442408	                mov rax, qword [r12 + 8]	       230	strbuf.h	FUNCTION_31
0x4000710	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_31
0x4000714	          0x4889dd	                            mov rbp, rbx	       309	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9
0x4000717	            0xeb67	                           jmp 0x4000780	       309	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9
0x4000719	           0xfb6c0	                           movzx eax, al	       314	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	ELSE_3	IF_11	CALL_7
0x400071c	          0x4889dd	                            mov rbp, rbx	       309	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9
0x400071f	    0xf68000000000	                      test byte [rax], 6	       314	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	ELSE_3	IF_11	CALL_7
0x4000726	            0x7458	                            je 0x4000780	       314	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9	ELSE_3	IF_11	CALL_7
0x4000728	        0x498b0424	                    mov rax, qword [r12]	       141	strbuf.h	FUNCTION_29
0x400072c	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_29
0x400072f	            0x740b	                            je 0x400073c	       141	strbuf.h	FUNCTION_29
0x4000731	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_31	IF_1	CALL_1
0x4000735	      0x493b442408	                cmp rax, qword [r12 + 8]	       227	strbuf.h	FUNCTION_31	IF_1	CALL_1
0x400073a	            0x750d	                           jne 0x4000749	       227	strbuf.h	FUNCTION_31	IF_1	CALL_1
0x400073c	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_31	CALL_2
0x4000741	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_31	CALL_2
0x4000744	      0xe800000000	                          call 0x4000749	       228	strbuf.h	FUNCTION_31	CALL_2
0x4000749	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       229	strbuf.h	FUNCTION_31
0x400074e	      0x498b442408	                mov rax, qword [r12 + 8]	       229	strbuf.h	FUNCTION_31
0x4000753	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_31
0x4000757	      0x49894c2408	                mov qword [r12 + 8], rcx	       229	strbuf.h	FUNCTION_31
0x400075c	        0xc6040220	              mov byte [rdx + rax], 0x20	       229	strbuf.h	FUNCTION_31
0x4000760	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       230	strbuf.h	FUNCTION_31
0x4000765	      0x498b442408	                mov rax, qword [r12 + 8]	       230	strbuf.h	FUNCTION_31
0x400076a	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_31
0x400076e	          0x4889dd	                            mov rbp, rbx	       309	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	ELSE_2	IF_9
0x4000771	        0x4183c701	                             add r15d, 1	       319	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x4000775	    0x488344243801	               add qword [rsp + 0x38], 1	       320	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x400077b	      0xe99bfeffff	                           jmp 0x400061b	       320	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x4000780	        0x498b0424	                    mov rax, qword [r12]	       141	strbuf.h	FUNCTION_29
0x4000784	          0x4885c0	                           test rax, rax	       141	strbuf.h	FUNCTION_29
0x4000787	            0x740b	                            je 0x4000794	       141	strbuf.h	FUNCTION_29
0x4000789	        0x4883e801	                              sub rax, 1	       227	strbuf.h	FUNCTION_31	IF_1	CALL_1
0x400078d	      0x493b442408	                cmp rax, qword [r12 + 8]	       227	strbuf.h	FUNCTION_31	IF_1	CALL_1
0x4000792	            0x750d	                           jne 0x40007a1	       227	strbuf.h	FUNCTION_31	IF_1	CALL_1
0x4000794	      0xbe01000000	                              mov esi, 1	       228	strbuf.h	FUNCTION_31	CALL_2
0x4000799	          0x4c89e7	                            mov rdi, r12	       228	strbuf.h	FUNCTION_31	CALL_2
0x400079c	      0xe800000000	                          call 0x40007a1	       228	strbuf.h	FUNCTION_31	CALL_2
0x40007a1	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       229	strbuf.h	FUNCTION_31
0x40007a6	      0x498b442408	                mov rax, qword [r12 + 8]	       229	strbuf.h	FUNCTION_31
0x40007ab	        0x488d4801	                      lea rcx, [rax + 1]	       229	strbuf.h	FUNCTION_31
0x40007af	      0x49894c2408	                mov qword [r12 + 8], rcx	       229	strbuf.h	FUNCTION_31
0x40007b4	        0xc604020a	               mov byte [rdx + rax], 0xa	       229	strbuf.h	FUNCTION_31
0x40007b8	      0x498b542410	            mov rdx, qword [r12 + 0x10] 	       230	strbuf.h	FUNCTION_31
0x40007bd	      0x498b442408	                mov rax, qword [r12 + 8]	       230	strbuf.h	FUNCTION_31
0x40007c2	        0xc6040200	                 mov byte [rdx + rax], 0	       230	strbuf.h	FUNCTION_31
0x40007c6	         0xfb64500	                   movzx eax, byte [rbp]	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_10
0x40007ca	    0x440fb6a80000	                  movzx r13d, byte [rax]	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_10
0x40007d2	        0x4183e501	                             and r13d, 1	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_10
0x40007d6	          0x4901ed	                            add r13, rbp	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_10
0x40007d9	      0x4c896c2438	             mov qword [rsp + 0x38], r13	       325	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5	CALL_10
0x40007de	        0x8b442418	            mov eax, dword [rsp + 0x18] 	       327	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0x40007e2	          0x4189c7	                           mov r15d, eax	       327	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0x40007e5	        0x89442414	             mov dword [rsp + 0x14], eax	       327	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0x40007e9	      0xbd00000000	                              mov ebp, 0	       326	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0x40007ee	      0xe928feffff	                           jmp 0x400061b	       326	utf8.c	FUNCTION_10	FOR_1	IF_3	ELSE_5
0x40007f3	      0x837c242000	               cmp dword [rsp + 0x20], 0	       331	utf8.c	FUNCTION_10	FOR_1	IF_12
0x40007f8	     0xf8490000000	                            je 0x400088e	       331	utf8.c	FUNCTION_10	FOR_1	IF_12
0x40007fe	      0xbe00000000	                              mov esi, 0	       332	utf8.c	FUNCTION_10	FOR_1	IF_12	CALL_11
0x4000803	      0x488d7c2438	                   lea rdi, [rsp + 0x38]	       332	utf8.c	FUNCTION_10	FOR_1	IF_12	CALL_11
0x4000808	      0xe800000000	                          call 0x400080d	       332	utf8.c	FUNCTION_10	FOR_1	IF_12	CALL_11
0x400080d	          0x4101c7	                           add r15d, eax	       332	utf8.c	FUNCTION_10	FOR_1	IF_12	CALL_11
0x4000810	    0x48837c243800	               cmp qword [rsp + 0x38], 0	       333	utf8.c	FUNCTION_10	FOR_1	IF_12	IF_13
0x4000816	     0xf85fffdffff	                           jne 0x400061b	       333	utf8.c	FUNCTION_10	FOR_1	IF_12	IF_13
0x400081c	      0x488b442428	            mov rax, qword [rsp + 0x28] 	       335	utf8.c	FUNCTION_10	FOR_1	IF_12	IF_13
0x4000821	      0x4889442438	             mov qword [rsp + 0x38], rax	       335	utf8.c	FUNCTION_10	FOR_1	IF_12	IF_13
0x4000826	        0x498b0424	                    mov rax, qword [r12]	       162	strbuf.h	FUNCTION_30	IF_1
0x400082a	        0x4883f801	                              cmp rax, 1	       162	strbuf.h	FUNCTION_30	IF_1
0x400082e	        0x4883d0ff	             adc rax, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_30	IF_1
0x4000832	      0x4839442430	            cmp qword [rsp + 0x30], rax 	       162	strbuf.h	FUNCTION_30	IF_1
0x4000837	            0x760f	                           jbe 0x4000848	       162	strbuf.h	FUNCTION_30	IF_1
0x4000839	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_30	CALL_1
0x400083e	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_30	CALL_1
0x4000843	      0xe800000000	                          call 0x4000848	       163	strbuf.h	FUNCTION_30	CALL_1
0x4000848	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	       164	strbuf.h	FUNCTION_30
0x400084d	      0x4989742408	                mov qword [r12 + 8], rsi	       164	strbuf.h	FUNCTION_30
0x4000852	      0x498b442410	            mov rax, qword [r12 + 0x10] 	       165	strbuf.h	FUNCTION_30	IF_2
0x4000857	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_30	IF_2
0x400085d	            0x7409	                            je 0x4000868	       165	strbuf.h	FUNCTION_30	IF_2
0x400085f	        0xc6043000	                 mov byte [rax + rsi], 0	       166	strbuf.h	FUNCTION_30	IF_2
0x4000863	      0xe984fdffff	                           jmp 0x40005ec	       166	strbuf.h	FUNCTION_30	IF_2
0x4000868	    0x803d00000000	                cmp byte [0x0400086f], 0	       168	strbuf.h	FUNCTION_30	CALL_2
0x400086f	     0xf8477fdffff	                            je 0x40005ec	       168	strbuf.h	FUNCTION_30	CALL_2
0x4000875	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_30	CALL_2
0x400087a	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_30	CALL_2
0x400087f	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_30	CALL_2
0x4000884	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_30	CALL_2
0x4000889	      0xe800000000	                          call 0x400088e	       168	strbuf.h	FUNCTION_30	CALL_2
0x400088e	        0x4183c701	                             add r15d, 1	       340	utf8.c	FUNCTION_10	FOR_1	ELSE_6
0x4000892	        0x4883c301	                              add rbx, 1	       341	utf8.c	FUNCTION_10	FOR_1	ELSE_6
0x4000896	      0x48895c2438	             mov qword [rsp + 0x38], rbx	       341	utf8.c	FUNCTION_10	FOR_1	ELSE_6
0x400089b	      0xe97bfdffff	                           jmp 0x400061b	       341	utf8.c	FUNCTION_10	FOR_1	ELSE_6
0x40008a0	          0x4885ed	                           test rbp, rbp	       298	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_6
0x40008a3	            0x751b	                           jne 0x40008c0	       298	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_6
0x40008a5	      0xc644241300	                mov byte [rsp + 0x13], 0	       296	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5
0x40008aa	      0xe9c5fdffff	                           jmp 0x4000674	       296	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_5
0x40008af	          0x4885ed	                           test rbp, rbp	       294	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x40008b2	            0x74ec	                            je 0x40008a0	       294	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x40008b4	      0x443b7c240c	            cmp r15d, dword [rsp + 0xc] 	       294	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x40008b9	            0x7ee5	                           jle 0x40008a0	       294	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x40008bb	      0xe9c0feffff	                           jmp 0x4000780	       294	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4
0x40008c0	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0x40008c5	          0x4829ea	                            sub rdx, rbp	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0x40008c8	          0x4889ee	                            mov rsi, rbp	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0x40008cb	          0x4c89e7	                            mov rdi, r12	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0x40008ce	      0xe800000000	                          call 0x40008d3	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0x40008d3	      0xe9ccfdffff	                           jmp 0x40006a4	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0x40008d8	      0x488b542438	            mov rdx, qword [rsp + 0x38] 	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0x40008dd	          0x4829ea	                            sub rdx, rbp	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0x40008e0	          0x4889ee	                            mov rsi, rbp	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0x40008e3	          0x4c89e7	                            mov rdi, r12	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0x40008e6	      0xe800000000	                          call 0x40008eb	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0x40008eb	            0xeb0a	                           jmp 0x40008f7	       302	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	CALL_5
0x40008ed	          0x4885ed	                           test rbp, rbp	       298	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_6
0x40008f0	            0x75e6	                           jne 0x40008d8	       298	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_6
0x40008f2	      0xe97dfdffff	                           jmp 0x4000674	       298	utf8.c	FUNCTION_10	FOR_1	IF_3	IF_4	IF_6
0x40008f7	        0x4883c448	                           add rsp, 0x48	       344	utf8.c	FUNCTION_10
0x40008fb	              0x5b	                                 pop rbx	       344	utf8.c	FUNCTION_10
0x40008fc	              0x5d	                                 pop rbp	       344	utf8.c	FUNCTION_10
0x40008fd	            0x415c	                                 pop r12	       344	utf8.c	FUNCTION_10
0x40008ff	            0x415d	                                 pop r13	       344	utf8.c	FUNCTION_10
0x4000901	            0x415e	                                 pop r14	       344	utf8.c	FUNCTION_10
0x4000903	            0x415f	                                 pop r15	       344	utf8.c	FUNCTION_10
0x4000905	              0xc3	                                     ret	       344	utf8.c	FUNCTION_10
strbuf_utf8_align	DO,0:FOR,0:ELSE,2:functions,0:WHILE,0:CALL,6:SWITCH,0:IF,4	69
0x40011c3	            0x4156	                                push r14	       726	utf8.c	FUNCTION_27
0x40011c5	            0x4155	                                push r13	       726	utf8.c	FUNCTION_27
0x40011c7	            0x4154	                                push r12	       726	utf8.c	FUNCTION_27
0x40011c9	              0x55	                                push rbp	       726	utf8.c	FUNCTION_27
0x40011ca	              0x53	                                push rbx	       726	utf8.c	FUNCTION_27
0x40011cb	          0x4989fe	                            mov r14, rdi	       726	utf8.c	FUNCTION_27
0x40011ce	          0x4189f4	                           mov r12d, esi	       726	utf8.c	FUNCTION_27
0x40011d1	          0x4189d5	                           mov r13d, edx	       726	utf8.c	FUNCTION_27
0x40011d4	          0x4889cd	                            mov rbp, rcx	       726	utf8.c	FUNCTION_27
0x40011d7	      0xb800000000	                              mov eax, 0	       727	utf8.c	FUNCTION_27	CALL_1
0x40011dc	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       727	utf8.c	FUNCTION_27	CALL_1
0x40011e3	          0x4889ef	                            mov rdi, rbp	       727	utf8.c	FUNCTION_27	CALL_1
0x40011e6	            0xf2ae	              repne scasb al, byte [rdi]	       727	utf8.c	FUNCTION_27	CALL_1
0x40011e8	          0x48f7d1	                                 not rcx	       727	utf8.c	FUNCTION_27	CALL_1
0x40011eb	        0x488d59ff	                      lea rbx, [rcx - 1]	       727	utf8.c	FUNCTION_27	CALL_1
0x40011ef	      0xba00000000	                              mov edx, 0	       728	utf8.c	FUNCTION_27	CALL_2
0x40011f4	            0x89de	                            mov esi, ebx	       728	utf8.c	FUNCTION_27	CALL_2
0x40011f6	          0x4889ef	                            mov rdi, rbp	       728	utf8.c	FUNCTION_27	CALL_2
0x40011f9	      0xe800000000	                          call 0x40011fe	       728	utf8.c	FUNCTION_27	CALL_2
0x40011fe	            0x29c3	                            sub ebx, eax	       729	utf8.c	FUNCTION_27
0x4001200	          0x4439e8	                           cmp eax, r13d	       731	utf8.c	FUNCTION_27	IF_1
0x4001203	            0x7225	                            jb 0x400122a	       731	utf8.c	FUNCTION_27	IF_1
0x4001205	      0xb800000000	                              mov eax, 0	       279	strbuf.h	FUNCTION_32	CALL_2
0x400120a	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       279	strbuf.h	FUNCTION_32	CALL_2
0x4001211	          0x4889ef	                            mov rdi, rbp	       279	strbuf.h	FUNCTION_32	CALL_2
0x4001214	            0xf2ae	              repne scasb al, byte [rdi]	       279	strbuf.h	FUNCTION_32	CALL_2
0x4001216	          0x48f7d1	                                 not rcx	       279	strbuf.h	FUNCTION_32	CALL_2
0x4001219	        0x488d51ff	                      lea rdx, [rcx - 1]	       279	strbuf.h	FUNCTION_32	CALL_2
0x400121d	          0x4889ee	                            mov rsi, rbp	       279	strbuf.h	FUNCTION_32	CALL_2
0x4001220	          0x4c89f7	                            mov rdi, r14	       279	strbuf.h	FUNCTION_32	CALL_2
0x4001223	      0xe800000000	                          call 0x4001228	       279	strbuf.h	FUNCTION_32	CALL_2
0x4001228	            0xeb6f	                           jmp 0x4001299	       279	strbuf.h	FUNCTION_32	CALL_2
0x400122a	          0x4585e4	                         test r12d, r12d	       736	utf8.c	FUNCTION_27	IF_2
0x400122d	            0x751b	                           jne 0x400124a	       736	utf8.c	FUNCTION_27	IF_2
0x400122f	        0x428d142b	                    lea edx, [rbx + r13]	       737	utf8.c	FUNCTION_27	CALL_4
0x4001233	          0x4889e9	                            mov rcx, rbp	       737	utf8.c	FUNCTION_27	CALL_4
0x4001236	      0xbe00000000	                              mov esi, 0	       737	utf8.c	FUNCTION_27	CALL_4
0x400123b	          0x4c89f7	                            mov rdi, r14	       737	utf8.c	FUNCTION_27	CALL_4
0x400123e	      0xb800000000	                              mov eax, 0	       737	utf8.c	FUNCTION_27	CALL_4
0x4001243	      0xe800000000	                          call 0x4001248	       737	utf8.c	FUNCTION_27	CALL_4
0x4001248	            0xeb4f	                           jmp 0x4001299	       737	utf8.c	FUNCTION_27	CALL_4
0x400124a	        0x4183fc01	                             cmp r12d, 1	       738	utf8.c	FUNCTION_27	ELSE_1	IF_3
0x400124e	            0x752a	                           jne 0x400127a	       738	utf8.c	FUNCTION_27	ELSE_1	IF_3
0x4001250	          0x4489ea	                           mov edx, r13d	       739	utf8.c	FUNCTION_27	ELSE_1	IF_3
0x4001253	            0x29c2	                            sub edx, eax	       739	utf8.c	FUNCTION_27	ELSE_1	IF_3
0x4001255	            0xd1ea	                              shr edx, 1	       739	utf8.c	FUNCTION_27	ELSE_1	IF_3
0x4001257	        0x468d042b	                    lea r8d, [rbx + r13]	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x400125b	          0x4989e9	                             mov r9, rbp	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x400125e	          0x4129d0	                            sub r8d, edx	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x4001261	      0xb900000000	                              mov ecx, 0	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x4001266	      0xbe00000000	                              mov esi, 0	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x400126b	          0x4c89f7	                            mov rdi, r14	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x400126e	      0xb800000000	                              mov eax, 0	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x4001273	      0xe800000000	                          call 0x4001278	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x4001278	            0xeb1f	                           jmp 0x4001299	       740	utf8.c	FUNCTION_27	ELSE_1	IF_3	CALL_5
0x400127a	        0x4183fc02	                             cmp r12d, 2	       741	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x400127e	            0x7519	                           jne 0x4001299	       741	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x4001280	        0x428d142b	                    lea edx, [rbx + r13]	       742	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x4001284	          0x4889e9	                            mov rcx, rbp	       742	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x4001287	      0xbe00000000	                              mov esi, 0	       742	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x400128c	          0x4c89f7	                            mov rdi, r14	       742	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x400128f	      0xb800000000	                              mov eax, 0	       742	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x4001294	      0xe800000000	                          call 0x4001299	       742	utf8.c	FUNCTION_27	ELSE_2	IF_4
0x4001299	              0x5b	                                 pop rbx	       743	utf8.c	FUNCTION_27
0x400129a	              0x5d	                                 pop rbp	       743	utf8.c	FUNCTION_27
0x400129b	            0x415c	                                 pop r12	       743	utf8.c	FUNCTION_27
0x400129d	            0x415d	                                 pop r13	       743	utf8.c	FUNCTION_27
0x400129f	            0x415e	                                 pop r14	       743	utf8.c	FUNCTION_27
0x40012a1	              0xc3	                                     ret	       743	utf8.c	FUNCTION_27
is_hfs_dotgit	DO,0:FOR,0:ELSE,0:functions,0:WHILE,0:CALL,6:SWITCH,0:IF,5	37
0x40010fe	        0x4883ec08	                              sub rsp, 8	       685	utf8.c	FUNCTION_25
0x4001102	        0x48893c24	                    mov qword [rsp], rdi	       685	utf8.c	FUNCTION_25
0x4001106	          0x4889e7	                            mov rdi, rsp	       688	utf8.c	FUNCTION_25	CALL_1
0x4001109	      0xe86cf1ffff	                  call sym.next_hfs_char	       688	utf8.c	FUNCTION_25	CALL_1
0x400110e	      0xba00000000	                              mov edx, 0	       690	utf8.c	FUNCTION_25	IF_1
0x4001113	          0x83f82e	                           cmp eax, 0x2e	       689	utf8.c	FUNCTION_25	IF_1
0x4001116	            0x755a	                           jne 0x4001172	       689	utf8.c	FUNCTION_25	IF_1
0x4001118	          0x4889e7	                            mov rdi, rsp	       691	utf8.c	FUNCTION_25	CALL_2
0x400111b	      0xe85af1ffff	                  call sym.next_hfs_char	       691	utf8.c	FUNCTION_25	CALL_2
0x4001120	          0x83e0df	                     and eax, 0xffffffdf	       698	utf8.c	FUNCTION_25	IF_2
0x4001123	      0xba00000000	                              mov edx, 0	       699	utf8.c	FUNCTION_25	IF_2
0x4001128	          0x83f847	                           cmp eax, 0x47	       698	utf8.c	FUNCTION_25	IF_2
0x400112b	            0x7545	                           jne 0x4001172	       698	utf8.c	FUNCTION_25	IF_2
0x400112d	          0x4889e7	                            mov rdi, rsp	       700	utf8.c	FUNCTION_25	CALL_3
0x4001130	      0xe845f1ffff	                  call sym.next_hfs_char	       700	utf8.c	FUNCTION_25	CALL_3
0x4001135	          0x83e0df	                     and eax, 0xffffffdf	       701	utf8.c	FUNCTION_25	IF_3
0x4001138	      0xba00000000	                              mov edx, 0	       702	utf8.c	FUNCTION_25	IF_3
0x400113d	          0x83f849	                           cmp eax, 0x49	       701	utf8.c	FUNCTION_25	IF_3
0x4001140	            0x7530	                           jne 0x4001172	       701	utf8.c	FUNCTION_25	IF_3
0x4001142	          0x4889e7	                            mov rdi, rsp	       703	utf8.c	FUNCTION_25	CALL_4
0x4001145	      0xe830f1ffff	                  call sym.next_hfs_char	       703	utf8.c	FUNCTION_25	CALL_4
0x400114a	          0x83e0df	                     and eax, 0xffffffdf	       704	utf8.c	FUNCTION_25	IF_4
0x400114d	      0xba00000000	                              mov edx, 0	       705	utf8.c	FUNCTION_25	IF_4
0x4001152	          0x83f854	                           cmp eax, 0x54	       704	utf8.c	FUNCTION_25	IF_4
0x4001155	            0x751b	                           jne 0x4001172	       704	utf8.c	FUNCTION_25	IF_4
0x4001157	          0x4889e7	                            mov rdi, rsp	       706	utf8.c	FUNCTION_25	CALL_5
0x400115a	      0xe81bf1ffff	                  call sym.next_hfs_char	       706	utf8.c	FUNCTION_25	CALL_5
0x400115f	          0x83f82f	                           cmp eax, 0x2f	       690	utf8.c	FUNCTION_25	IF_1
0x4001162	           0xf95c2	                                setne dl	       690	utf8.c	FUNCTION_25	IF_1
0x4001165	            0x85c0	                           test eax, eax	       690	utf8.c	FUNCTION_25	IF_1
0x4001167	           0xf95c0	                                setne al	       690	utf8.c	FUNCTION_25	IF_1
0x400116a	            0x21c2	                            and edx, eax	       690	utf8.c	FUNCTION_25	IF_1
0x400116c	          0x83f201	                              xor edx, 1	       690	utf8.c	FUNCTION_25	IF_1
0x400116f	           0xfb6d2	                           movzx edx, dl	       690	utf8.c	FUNCTION_25	IF_1
0x4001172	            0x89d0	                            mov eax, edx	       711	utf8.c	FUNCTION_25
0x4001174	        0x4883c408	                              add rsp, 8	       711	utf8.c	FUNCTION_25
0x4001178	              0xc3	                                     ret	       711	utf8.c	FUNCTION_25
utf8_width	DO,0:FOR,0:ELSE,0:functions,0:WHILE,0:CALL,2:SWITCH,0:IF,1	36
0x40003be	              0x55	                                push rbp	       194	utf8.c	FUNCTION_5
0x40003bf	              0x53	                                push rbx	       194	utf8.c	FUNCTION_5
0x40003c0	          0x4889fd	                            mov rbp, rdi	       194	utf8.c	FUNCTION_5
0x40003c3	      0xe8d6fcffff	             call sym.pick_one_utf8_char	       195	utf8.c	FUNCTION_5	CALL_1
0x40003c8	      0x48837d0000	                      cmp qword [rbp], 0	        87	utf8.c	ELSE_2	FUNCTION_3	IF_1
0x40003cd	            0x744a	                            je 0x4000419	        87	utf8.c	ELSE_2	FUNCTION_3	IF_1
0x40003cf	            0x89c3	                            mov ebx, eax	        87	utf8.c	ELSE_2	FUNCTION_3	IF_1
0x40003d1	            0x85c0	                           test eax, eax	        87	utf8.c	ELSE_2	FUNCTION_3	IF_1
0x40003d3	            0x7444	                            je 0x4000419	        87	utf8.c	ELSE_2	FUNCTION_3	IF_1
0x40003d5	          0x8d4081	                   lea eax, [rax - 0x7f]	        89	utf8.c	ELSE_2	FUNCTION_3	IF_2
0x40003d8	          0x83f820	                           cmp eax, 0x20	        89	utf8.c	ELSE_2	FUNCTION_3	IF_2
0x40003db	            0x7643	                           jbe 0x4000420	        89	utf8.c	ELSE_2	FUNCTION_3	IF_2
0x40003dd	          0x83fb1f	                           cmp ebx, 0x1f	        89	utf8.c	ELSE_2	FUNCTION_3	IF_2
0x40003e0	            0x763e	                           jbe 0x4000420	        89	utf8.c	ELSE_2	FUNCTION_3	IF_2
0x40003e2	      0xba37010000	                          mov edx, 0x137	        93	utf8.c	ELSE_2	FUNCTION_3	IF_3	CALL_1
0x40003e7	      0xbe00000000	                              mov esi, 0	        93	utf8.c	ELSE_2	FUNCTION_3	IF_3	CALL_1
0x40003ec	            0x89df	                            mov edi, ebx	        93	utf8.c	ELSE_2	FUNCTION_3	IF_3	CALL_1
0x40003ee	      0xe84dfcffff	                       call sym.bisearch	        93	utf8.c	ELSE_2	FUNCTION_3	IF_3	CALL_1
0x40003f3	            0x89c2	                            mov edx, eax	        93	utf8.c	ELSE_2	FUNCTION_3	IF_3	CALL_1
0x40003f5	      0xb800000000	                              mov eax, 0	        95	utf8.c	ELSE_2	FUNCTION_3	IF_3
0x40003fa	            0x85d2	                           test edx, edx	        93	utf8.c	ELSE_2	FUNCTION_3	IF_3	CALL_1
0x40003fc	            0x7527	                           jne 0x4000425	        93	utf8.c	ELSE_2	FUNCTION_3	IF_3	CALL_1
0x40003fe	      0xba69000000	                           mov edx, 0x69	        98	utf8.c	ELSE_2	FUNCTION_3	IF_4	CALL_2
0x4000403	      0xbe00000000	                              mov esi, 0	        98	utf8.c	ELSE_2	FUNCTION_3	IF_4	CALL_2
0x4000408	            0x89df	                            mov edi, ebx	        98	utf8.c	ELSE_2	FUNCTION_3	IF_4	CALL_2
0x400040a	      0xe831fcffff	                       call sym.bisearch	        98	utf8.c	ELSE_2	FUNCTION_3	IF_4	CALL_2
0x400040f	          0x83f801	                              cmp eax, 1	       102	utf8.c	ELSE_2	FUNCTION_3
0x4000412	            0x19c0	                            sbb eax, eax	       102	utf8.c	ELSE_2	FUNCTION_3
0x4000414	          0x83c002	                              add eax, 2	       102	utf8.c	ELSE_2	FUNCTION_3
0x4000417	            0xeb0c	                           jmp 0x4000425	       102	utf8.c	ELSE_2	FUNCTION_3
0x4000419	      0xb800000000	                              mov eax, 0	        88	utf8.c	ELSE_2	FUNCTION_3	IF_1
0x400041e	            0xeb05	                           jmp 0x4000425	        88	utf8.c	ELSE_2	FUNCTION_3	IF_1
0x4000420	      0xb8ffffffff	                     mov eax, 0xffffffff	        90	utf8.c	ELSE_2	FUNCTION_3	IF_2
0x4000425	              0x5b	                                 pop rbx	       199	utf8.c	FUNCTION_5
0x4000426	              0x5d	                                 pop rbp	       199	utf8.c	FUNCTION_5
0x4000427	              0xc3	                                     ret	       199	utf8.c	FUNCTION_5
utf8_fprintf	DO,0:FOR,0:ELSE,0:functions,0:WHILE,0:CALL,6:SWITCH,0:IF,1	51
0x4000c23	              0x53	                                push rbx	       447	utf8.c	FUNCTION_16
0x4000c24	    0x4881ecf00000	                           sub rsp, 0xf0	       447	utf8.c	FUNCTION_16
0x4000c2b	          0x4889fb	                            mov rbx, rdi	       447	utf8.c	FUNCTION_16
0x4000c2e	      0x4889542450	             mov qword [rsp + 0x50], rdx	       447	utf8.c	FUNCTION_16
0x4000c33	      0x48894c2458	             mov qword [rsp + 0x58], rcx	       447	utf8.c	FUNCTION_16
0x4000c38	      0x4c89442460	              mov qword [rsp + 0x60], r8	       447	utf8.c	FUNCTION_16
0x4000c3d	      0x4c894c2468	              mov qword [rsp + 0x68], r9	       447	utf8.c	FUNCTION_16
0x4000c42	            0x84c0	                             test al, al	       447	utf8.c	FUNCTION_16
0x4000c44	            0x743d	                            je 0x4000c83	       447	utf8.c	FUNCTION_16
0x4000c46	       0xf29442470	       movaps xmmword [rsp + 0x70], xmm0	       447	utf8.c	FUNCTION_16
0x4000c4b	     0xf298c248000	       movaps xmmword [rsp + 0x80], xmm1	       447	utf8.c	FUNCTION_16
0x4000c53	     0xf2994249000	       movaps xmmword [rsp + 0x90], xmm2	       447	utf8.c	FUNCTION_16
0x4000c5b	     0xf299c24a000	       movaps xmmword [rsp + 0xa0], xmm3	       447	utf8.c	FUNCTION_16
0x4000c63	     0xf29a424b000	       movaps xmmword [rsp + 0xb0], xmm4	       447	utf8.c	FUNCTION_16
0x4000c6b	     0xf29ac24c000	       movaps xmmword [rsp + 0xc0], xmm5	       447	utf8.c	FUNCTION_16
0x4000c73	     0xf29b424d000	       movaps xmmword [rsp + 0xd0], xmm6	       447	utf8.c	FUNCTION_16
0x4000c7b	     0xf29bc24e000	       movaps xmmword [rsp + 0xe0], xmm7	       447	utf8.c	FUNCTION_16
0x4000c83	    0x64488b042528	                mov rax, qword fs:[0x28]	       447	utf8.c	FUNCTION_16
0x4000c8c	      0x4889442438	             mov qword [rsp + 0x38], rax	       447	utf8.c	FUNCTION_16
0x4000c91	            0x31c0	                            xor eax, eax	       447	utf8.c	FUNCTION_16
0x4000c93	    0x48c704240000	                      mov qword [rsp], 0	       448	utf8.c	FUNCTION_16
0x4000c9b	    0x48c744240800	                  mov qword [rsp + 8], 0	       448	utf8.c	FUNCTION_16
0x4000ca4	    0x48c744241000	               mov qword [rsp + 0x10], 0	       448	utf8.c	FUNCTION_16
0x4000cad	    0xc74424201000	           mov dword [rsp + 0x20], 0x10 	       452	utf8.c	FUNCTION_16	CALL_1
0x4000cb5	    0xc74424243000	           mov dword [rsp + 0x24], 0x30 	       452	utf8.c	FUNCTION_16	CALL_1
0x4000cbd	    0x488d84240001	                  lea rax, [rsp + 0x100]	       452	utf8.c	FUNCTION_16	CALL_1
0x4000cc5	      0x4889442428	             mov qword [rsp + 0x28], rax	       452	utf8.c	FUNCTION_16	CALL_1
0x4000cca	      0x488d442440	                   lea rax, [rsp + 0x40]	       452	utf8.c	FUNCTION_16	CALL_1
0x4000ccf	      0x4889442430	             mov qword [rsp + 0x30], rax	       452	utf8.c	FUNCTION_16	CALL_1
0x4000cd4	      0x488d542420	                   lea rdx, [rsp + 0x20]	       453	utf8.c	FUNCTION_16	CALL_2
0x4000cd9	          0x4889e7	                            mov rdi, rsp	       453	utf8.c	FUNCTION_16	CALL_2
0x4000cdc	      0xe800000000	                          call 0x4000ce1	       453	utf8.c	FUNCTION_16	CALL_2
0x4000ce1	          0x4889de	                            mov rsi, rbx	       456	utf8.c	FUNCTION_16	CALL_4
0x4000ce4	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       456	utf8.c	FUNCTION_16	CALL_4
0x4000ce9	      0xe800000000	                          call 0x4000cee	       456	utf8.c	FUNCTION_16	CALL_4
0x4000cee	            0x89c3	                            mov ebx, eax	       456	utf8.c	FUNCTION_16	CALL_4
0x4000cf0	            0x85c0	                           test eax, eax	       457	utf8.c	FUNCTION_16	IF_1
0x4000cf2	            0x780c	                            js 0x4000d00	       457	utf8.c	FUNCTION_16	IF_1
0x4000cf4	      0x488b7c2410	            mov rdi, qword [rsp + 0x10] 	       458	utf8.c	FUNCTION_16	CALL_5
0x4000cf9	      0xe800000000	                          call 0x4000cfe	       458	utf8.c	FUNCTION_16	CALL_5
0x4000cfe	            0x89c3	                            mov ebx, eax	       458	utf8.c	FUNCTION_16	CALL_5
0x4000d00	          0x4889e7	                            mov rdi, rsp	       459	utf8.c	FUNCTION_16	CALL_6
0x4000d03	      0xe800000000	                          call 0x4000d08	       459	utf8.c	FUNCTION_16	CALL_6
0x4000d08	            0x89d8	                            mov eax, ebx	       461	utf8.c	FUNCTION_16
0x4000d0a	      0x488b4c2438	            mov rcx, qword [rsp + 0x38] 	       461	utf8.c	FUNCTION_16
0x4000d0f	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       461	utf8.c	FUNCTION_16
0x4000d18	            0x7405	                            je 0x4000d1f	       461	utf8.c	FUNCTION_16
0x4000d1a	      0xe800000000	                          call 0x4000d1f	       461	utf8.c	FUNCTION_16
0x4000d1f	    0x4881c4f00000	                           add rsp, 0xf0	       461	utf8.c	FUNCTION_16
0x4000d26	              0x5b	                                 pop rbx	       461	utf8.c	FUNCTION_16
0x4000d27	              0xc3	                                     ret	       461	utf8.c	FUNCTION_16
utf8_strwidth	DO,0:FOR,0:ELSE,0:functions,0:WHILE,0:CALL,1:SWITCH,0:IF,0	4
0x40004c6	      0xba00000000	                              mov edx, 0	       225	utf8.c	FUNCTION_7	CALL_1
0x40004cb	      0xbeffffffff	                     mov esi, 0xffffffff	       225	utf8.c	FUNCTION_7	CALL_1
0x40004d0	      0xe800000000	                          call 0x40004d5	       225	utf8.c	FUNCTION_7	CALL_1
0x40004d5	            0xf3c3	                                     ret	       226	utf8.c	FUNCTION_7
pick_one_utf8_char	DO,0:FOR,0:ELSE,5:functions,0:WHILE,0:CALL,0:SWITCH,0:IF,9	142
0x400009e	          0x4885f6	                           test rsi, rsi	       128	utf8.c	FUNCTION_4
0x40000a1	            0x740d	                            je 0x40000b0	       128	utf8.c	FUNCTION_4
0x40000a3	          0x488b0e	                    mov rcx, qword [rsi]	       128	utf8.c	FUNCTION_4
0x40000a6	          0x4885c9	                           test rcx, rcx	       130	utf8.c	FUNCTION_4	IF_1
0x40000a9	            0x750a	                           jne 0x40000b5	       130	utf8.c	FUNCTION_4	IF_1
0x40000ab	      0xe9aa010000	                           jmp 0x400025a	       130	utf8.c	FUNCTION_4	IF_1
0x40000b0	      0xb9e7030000	                          mov ecx, 0x3e7	       128	utf8.c	FUNCTION_4
0x40000b5	          0x4c8b07	                     mov r8, qword [rdi]	       119	utf8.c	FUNCTION_4
0x40000b8	        0x410fb600	                    movzx eax, byte [r8]	       132	utf8.c	FUNCTION_4	ELSE_1	IF_2
0x40000bc	            0x84c0	                             test al, al	       132	utf8.c	FUNCTION_4	ELSE_1	IF_2
0x40000be	            0x780d	                            js 0x40000cd	       132	utf8.c	FUNCTION_4	ELSE_1	IF_2
0x40000c0	           0xfb6c0	                           movzx eax, al	       134	utf8.c	FUNCTION_4	ELSE_1	IF_2
0x40000c3	      0xba01000000	                              mov edx, 1	       135	utf8.c	FUNCTION_4	ELSE_1	IF_2
0x40000c8	      0xe99a010000	                           jmp 0x4000267	       135	utf8.c	FUNCTION_4	ELSE_1	IF_2
0x40000cd	            0x89c2	                            mov edx, eax	       136	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x40000cf	          0x83e2e0	                     and edx, 0xffffffe0	       136	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x40000d2	          0x80fac0	                            cmp dl, 0xc0	       136	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x40000d5	            0x7546	                           jne 0x400011d	       136	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x40000d7	        0x4883f901	                              cmp rcx, 1	       138	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x40000db	     0xf8679010000	                           jbe 0x400025a	       138	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x40000e1	      0x450fb64801	                movzx r9d, byte [r8 + 1]	       139	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x40000e6	          0x4489ca	                            mov edx, r9d	       138	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x40000e9	          0x83e2c0	                     and edx, 0xffffffc0	       138	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x40000ec	          0x80fa80	                            cmp dl, 0x80	       138	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x40000ef	     0xf8565010000	                           jne 0x400025a	       138	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x40000f5	            0x89c2	                            mov edx, eax	       139	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x40000f7	          0x83e2fe	                     and edx, 0xfffffffe	       139	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x40000fa	          0x80fac0	                            cmp dl, 0xc0	       139	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x40000fd	     0xf8457010000	                            je 0x400025a	       139	utf8.c	FUNCTION_4	ELSE_2	IF_3	IF_4
0x4000103	          0x83e01f	                           and eax, 0x1f	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4000106	          0xc1e006	                              shl eax, 6	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4000109	            0x89c2	                            mov edx, eax	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x400010b	          0x4489c8	                            mov eax, r9d	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x400010e	          0x83e03f	                           and eax, 0x3f	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4000111	             0x9d0	                             or eax, edx	       142	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4000113	      0xba02000000	                              mov edx, 2	       143	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x4000118	      0xe94a010000	                           jmp 0x4000267	       143	utf8.c	FUNCTION_4	ELSE_2	IF_3
0x400011d	            0x89c2	                            mov edx, eax	       144	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x400011f	          0x83e2f0	                     and edx, 0xfffffff0	       144	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x4000122	          0x80fae0	                            cmp dl, 0xe0	       144	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x4000125	     0xf859e000000	                           jne 0x40001c9	       144	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x400012b	        0x4883f902	                              cmp rcx, 2	       146	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x400012f	     0xf8625010000	                           jbe 0x400025a	       146	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000135	      0x410fb65001	                movzx edx, byte [r8 + 1]	       147	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x400013a	          0x4189d1	                            mov r9d, edx	       146	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x400013d	        0x4183e1c0	                     and r9d, 0xffffffc0	       146	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000141	        0x4180f980	                           cmp r9b, 0x80	       146	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000145	     0xf850f010000	                           jne 0x400025a	       146	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x400014b	      0x450fb64802	                movzx r9d, byte [r8 + 2]	       148	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000150	          0x4589ca	                           mov r10d, r9d	       147	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000153	        0x4183e2c0	                    and r10d, 0xffffffc0	       147	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000157	        0x4180fa80	                          cmp r10b, 0x80	       147	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x400015b	     0xf85f9000000	                           jne 0x400025a	       147	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000161	            0x3ce0	                            cmp al, 0xe0	       148	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000163	            0x7512	                           jne 0x4000177	       148	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000165	          0x4189d2	                           mov r10d, edx	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000168	        0x4183e2e0	                    and r10d, 0xffffffe0	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x400016c	        0x4180fa80	                          cmp r10b, 0x80	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000170	            0x7535	                           jne 0x40001a7	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000172	      0xe9e3000000	                           jmp 0x400025a	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000177	            0x3ced	                            cmp al, 0xed	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000179	            0x7512	                           jne 0x400018d	       150	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x400017b	          0x4189d2	                           mov r10d, edx	       152	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x400017e	        0x4183e2e0	                    and r10d, 0xffffffe0	       152	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000182	        0x4180faa0	                          cmp r10b, 0xa0	       152	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000186	            0x751f	                           jne 0x40001a7	       152	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000188	      0xe9cd000000	                           jmp 0x400025a	       152	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x400018d	          0x80fabf	                            cmp dl, 0xbf	       154	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000190	            0x7515	                           jne 0x40001a7	       154	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000192	            0x3cef	                            cmp al, 0xef	       154	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000194	            0x7511	                           jne 0x40001a7	       154	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000196	          0x4589ca	                           mov r10d, r9d	       154	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x4000199	        0x4183e2fe	                    and r10d, 0xfffffffe	       154	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x400019d	        0x4180fabe	                          cmp r10b, 0xbe	       154	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40001a1	     0xf84b3000000	                            je 0x400025a	       154	utf8.c	FUNCTION_4	ELSE_3	IF_5	IF_6
0x40001a7	          0xc1e00c	                            shl eax, 0xc	       157	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x40001aa	      0x2500f00000	                         and eax, 0xf000	       157	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x40001af	          0x83e23f	                           and edx, 0x3f	       157	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x40001b2	          0xc1e206	                              shl edx, 6	       157	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x40001b5	             0x9c2	                             or edx, eax	       157	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x40001b7	          0x4489c8	                            mov eax, r9d	       157	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x40001ba	          0x83e03f	                           and eax, 0x3f	       157	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x40001bd	             0x9d0	                             or eax, edx	       157	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x40001bf	      0xba03000000	                              mov edx, 3	       159	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x40001c4	      0xe99e000000	                           jmp 0x4000267	       159	utf8.c	FUNCTION_4	ELSE_3	IF_5
0x40001c9	            0x89c2	                            mov edx, eax	       162	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40001cb	          0x83e2f8	                     and edx, 0xfffffff8	       162	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40001ce	          0x80faf0	                            cmp dl, 0xf0	       162	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40001d1	     0xf8583000000	                           jne 0x400025a	       162	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40001d7	        0x4883f903	                              cmp rcx, 3	       162	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40001db	            0x767d	                           jbe 0x400025a	       162	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40001dd	      0x410fb65001	                movzx edx, byte [r8 + 1]	       163	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40001e2	          0x4189d1	                            mov r9d, edx	       162	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40001e5	        0x4183e1c0	                     and r9d, 0xffffffc0	       162	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40001e9	        0x4180f980	                           cmp r9b, 0x80	       162	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40001ed	            0x756b	                           jne 0x400025a	       162	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40001ef	      0x450fb64802	                movzx r9d, byte [r8 + 2]	       164	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40001f4	          0x4589ca	                           mov r10d, r9d	       163	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40001f7	        0x4183e2c0	                    and r10d, 0xffffffc0	       163	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40001fb	        0x4180fa80	                          cmp r10b, 0x80	       163	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x40001ff	            0x7559	                           jne 0x400025a	       163	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x4000201	      0x450fb65003	               movzx r10d, byte [r8 + 3]	       165	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x4000206	          0x4589d3	                          mov r11d, r10d	       164	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x4000209	        0x4183e3c0	                    and r11d, 0xffffffc0	       164	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x400020d	        0x4180fb80	                          cmp r11b, 0x80	       164	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x4000211	            0x7547	                           jne 0x400025a	       164	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x4000213	            0x3cf0	                            cmp al, 0xf0	       165	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x4000215	            0x750f	                           jne 0x4000226	       165	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x4000217	          0x4189d3	                           mov r11d, edx	       167	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x400021a	        0x4183e3f0	                    and r11d, 0xfffffff0	       167	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x400021e	        0x4180fb80	                          cmp r11b, 0x80	       167	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x4000222	            0x750f	                           jne 0x4000233	       167	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x4000224	            0xeb34	                           jmp 0x400025a	       167	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x4000226	          0x80fa8f	                            cmp dl, 0x8f	       169	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x4000229	            0x7604	                           jbe 0x400022f	       169	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x400022b	            0x3cf4	                            cmp al, 0xf4	       169	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x400022d	            0x742b	                            je 0x400025a	       169	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x400022f	            0x3cf4	                            cmp al, 0xf4	       169	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x4000231	            0x7727	                            ja 0x400025a	       169	utf8.c	FUNCTION_4	ELSE_4	IF_7	IF_8
0x4000233	          0x83e007	                              and eax, 7	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000236	          0xc1e012	                           shl eax, 0x12	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000239	          0x83e23f	                           and edx, 0x3f	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x400023c	          0xc1e20c	                            shl edx, 0xc	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x400023f	             0x9d0	                             or eax, edx	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000241	        0x4183e23f	                          and r10d, 0x3f	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000245	          0x4409d0	                            or eax, r10d	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000248	          0x4489ca	                            mov edx, r9d	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x400024b	          0x83e23f	                           and edx, 0x3f	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x400024e	          0xc1e206	                              shl edx, 6	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000251	             0x9d0	                             or eax, edx	       171	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000253	      0xba04000000	                              mov edx, 4	       173	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x4000258	            0xeb0d	                           jmp 0x4000267	       173	utf8.c	FUNCTION_4	ELSE_4	IF_7
0x400025a	    0x48c707000000	                      mov qword [rdi], 0	       176	utf8.c	FUNCTION_4	ELSE_5
0x4000261	      0xb800000000	                              mov eax, 0	       177	utf8.c	FUNCTION_4	ELSE_5
0x4000266	              0xc3	                                     ret	       177	utf8.c	FUNCTION_4	ELSE_5
0x4000267	          0x4901d0	                             add r8, rdx	       180	utf8.c	FUNCTION_4
0x400026a	          0x4c8907	                     mov qword [rdi], r8	       180	utf8.c	FUNCTION_4
0x400026d	          0x4885f6	                           test rsi, rsi	       181	utf8.c	FUNCTION_4	IF_9
0x4000270	            0x7406	                            je 0x4000278	       181	utf8.c	FUNCTION_4	IF_9
0x4000272	          0x4829d1	                            sub rcx, rdx	       182	utf8.c	FUNCTION_4	IF_9
0x4000275	          0x48890e	                    mov qword [rsi], rcx	       182	utf8.c	FUNCTION_4	IF_9
0x4000278	            0xf3c3	                                     ret	       184	utf8.c	FUNCTION_4
strbuf_utf8_replace	DO,0:FOR,0:ELSE,0:functions,0:WHILE,2:CALL,10:SWITCH,0:IF,5	143
0x400094b	            0x4157	                                push r15	       356	utf8.c	FUNCTION_12
0x400094d	            0x4156	                                push r14	       356	utf8.c	FUNCTION_12
0x400094f	            0x4155	                                push r13	       356	utf8.c	FUNCTION_12
0x4000951	            0x4154	                                push r12	       356	utf8.c	FUNCTION_12
0x4000953	              0x55	                                push rbp	       356	utf8.c	FUNCTION_12
0x4000954	              0x53	                                push rbx	       356	utf8.c	FUNCTION_12
0x4000955	        0x4883ec78	                           sub rsp, 0x78	       356	utf8.c	FUNCTION_12
0x4000959	      0x48897c2418	             mov qword [rsp + 0x18], rdi	       356	utf8.c	FUNCTION_12
0x400095e	        0x89742408	                mov dword [rsp + 8], esi	       356	utf8.c	FUNCTION_12
0x4000962	            0x89d3	                            mov ebx, edx	       356	utf8.c	FUNCTION_12
0x4000964	          0x4989cf	                            mov r15, rcx	       356	utf8.c	FUNCTION_12
0x4000967	    0x64488b0c2528	                mov rcx, qword fs:[0x28]	       356	utf8.c	FUNCTION_12
0x4000970	      0x48894c2468	             mov qword [rsp + 0x68], rcx	       356	utf8.c	FUNCTION_12
0x4000975	            0x31c9	                            xor ecx, ecx	       356	utf8.c	FUNCTION_12
0x4000977	    0x48c744243000	               mov qword [rsp + 0x30], 0	       357	utf8.c	FUNCTION_12
0x4000980	    0x48c744243800	               mov qword [rsp + 0x38], 0	       357	utf8.c	FUNCTION_12
0x4000989	    0x48c744244000	               mov qword [rsp + 0x40], 0	       357	utf8.c	FUNCTION_12
0x4000992	        0x4c8b7710	            mov r14, qword [rdi + 0x10] 	       358	utf8.c	FUNCTION_12
0x4000996	      0x4c89742428	             mov qword [rsp + 0x28], r14	       358	utf8.c	FUNCTION_12
0x400099b	        0x488b5708	                mov rdx, qword [rdi + 8]	       359	utf8.c	FUNCTION_12
0x400099f	          0x4901d6	                            add r14, rdx	       359	utf8.c	FUNCTION_12
0x40009a2	          0x4d85ff	                           test r15, r15	       363	utf8.c	FUNCTION_12	IF_1
0x40009a5	            0x741c	                            je 0x40009c3	       363	utf8.c	FUNCTION_12	IF_1
0x40009a7	      0xb800000000	                              mov eax, 0	       364	utf8.c	FUNCTION_12	CALL_1
0x40009ac	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       364	utf8.c	FUNCTION_12	CALL_1
0x40009b3	          0x4c89ff	                            mov rdi, r15	       364	utf8.c	FUNCTION_12	CALL_1
0x40009b6	            0xf2ae	              repne scasb al, byte [rdi]	       364	utf8.c	FUNCTION_12	CALL_1
0x40009b8	          0x4889c8	                            mov rax, rcx	       364	utf8.c	FUNCTION_12	CALL_1
0x40009bb	          0x48f7d0	                                 not rax	       364	utf8.c	FUNCTION_12	CALL_1
0x40009be	          0x8d40ff	                      lea eax, [rax - 1]	       364	utf8.c	FUNCTION_12	CALL_1
0x40009c1	            0xeb05	                           jmp 0x40009c8	       364	utf8.c	FUNCTION_12	CALL_1
0x40009c3	      0xb800000000	                              mov eax, 0	       361	utf8.c	FUNCTION_12
0x40009c8	            0x4898	                                    cdqe	       365	utf8.c	FUNCTION_12	CALL_2
0x40009ca	      0x4889442410	             mov qword [rsp + 0x10], rax	       365	utf8.c	FUNCTION_12	CALL_2
0x40009cf	        0x488d3402	                    lea rsi, [rdx + rax]	       365	utf8.c	FUNCTION_12	CALL_2
0x40009d3	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       365	utf8.c	FUNCTION_12	CALL_2
0x40009d8	      0xe800000000	                          call 0x40009dd	       365	utf8.c	FUNCTION_12	CALL_2
0x40009dd	      0x4c8b642440	            mov r12, qword [rsp + 0x40] 	       366	utf8.c	FUNCTION_12
0x40009e2	    0x41bd00000000	                             mov r13d, 0	       361	utf8.c	FUNCTION_12
0x40009e8	         0x35c2408	                add ebx, dword [rsp + 8]	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x40009ec	        0x895c240c	              mov dword [rsp + 0xc], ebx	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x40009f0	      0xe9a3000000	                           jmp 0x4000a98	       368	utf8.c	FUNCTION_12	WHILE_1
0x40009f5	          0x4889da	                            mov rdx, rbx	        53	string3.h	FUNCTION_39	CALL_3
0x40009f8	          0x4889ee	                            mov rsi, rbp	        53	string3.h	FUNCTION_39	CALL_3
0x40009fb	          0x4c89e7	                            mov rdi, r12	        53	string3.h	FUNCTION_39	CALL_3
0x40009fe	      0xe800000000	                          call 0x4000a03	        53	string3.h	FUNCTION_39	CALL_3
0x4000a03	      0x48015c2428	            add qword [rsp + 0x28], rbx 	       374	utf8.c	FUNCTION_12	WHILE_1	WHILE_2
0x4000a08	          0x4901dc	                            add r12, rbx	       375	utf8.c	FUNCTION_12	WHILE_1	WHILE_2
0x4000a0b	      0x488b6c2428	            mov rbp, qword [rsp + 0x28] 	       372	utf8.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_3
0x4000a10	          0x4889ef	                            mov rdi, rbp	       372	utf8.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_3
0x4000a13	      0xe800000000	                          call 0x4000a18	       372	utf8.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_3
0x4000a18	          0x4889c3	                            mov rbx, rax	       372	utf8.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_3
0x4000a1b	          0x4885c0	                           test rax, rax	       372	utf8.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_3
0x4000a1e	            0x75d5	                           jne 0x40009f5	       372	utf8.c	FUNCTION_12	WHILE_1	WHILE_2	CALL_3
0x4000a20	          0x4939ee	                            cmp r14, rbp	       378	utf8.c	FUNCTION_12	WHILE_1	IF_2
0x4000a23	            0x767e	                           jbe 0x4000aa3	       378	utf8.c	FUNCTION_12	WHILE_1	IF_2
0x4000a25	      0xbe00000000	                              mov esi, 0	       382	utf8.c	FUNCTION_12	WHILE_1	CALL_5
0x4000a2a	      0x488d7c2428	                   lea rdi, [rsp + 0x28]	       382	utf8.c	FUNCTION_12	WHILE_1	CALL_5
0x4000a2f	      0xe800000000	                          call 0x4000a34	       382	utf8.c	FUNCTION_12	WHILE_1	CALL_5
0x4000a34	            0x89c3	                            mov ebx, eax	       382	utf8.c	FUNCTION_12	WHILE_1	CALL_5
0x4000a36	            0x4898	                                    cdqe	       382	utf8.c	FUNCTION_12	WHILE_1	CALL_5
0x4000a38	      0x488b542428	            mov rdx, qword [rsp + 0x28] 	       383	utf8.c	FUNCTION_12	WHILE_1	IF_3
0x4000a3d	          0x4885d2	                           test rdx, rdx	       383	utf8.c	FUNCTION_12	WHILE_1	IF_3
0x4000a40	     0xf8408010000	                            je 0x4000b4e	       383	utf8.c	FUNCTION_12	WHILE_1	IF_3
0x4000a46	          0x4885c0	                           test rax, rax	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000a49	            0x7434	                            je 0x4000a7f	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000a4b	      0x443b6c2408	               cmp r13d, dword [rsp + 8]	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000a50	            0x7c2d	                            jl 0x4000a7f	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000a52	      0x443b6c240c	            cmp r13d, dword [rsp + 0xc] 	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000a57	            0x7d26	                           jge 0x4000a7f	       385	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000a59	          0x4d85ff	                           test r15, r15	       386	utf8.c	FUNCTION_12	WHILE_1	IF_4	IF_5
0x4000a5c	            0x7416	                            je 0x4000a74	       386	utf8.c	FUNCTION_12	WHILE_1	IF_4	IF_5
0x4000a5e	      0x488b6c2410	            mov rbp, qword [rsp + 0x10] 	        53	string3.h	FUNCTION_39	CALL_3
0x4000a63	          0x4889ea	                            mov rdx, rbp	        53	string3.h	FUNCTION_39	CALL_3
0x4000a66	          0x4c89fe	                            mov rsi, r15	        53	string3.h	FUNCTION_39	CALL_3
0x4000a69	          0x4c89e7	                            mov rdi, r12	        53	string3.h	FUNCTION_39	CALL_3
0x4000a6c	      0xe800000000	                          call 0x4000a71	        53	string3.h	FUNCTION_39	CALL_3
0x4000a71	          0x4901ec	                            add r12, rbp	       388	utf8.c	FUNCTION_12	WHILE_1	IF_4	IF_5
0x4000a74	          0x4101dd	                           add r13d, ebx	       391	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000a77	    0x41bf00000000	                             mov r15d, 0	       392	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000a7d	            0xeb19	                           jmp 0x4000a98	       392	utf8.c	FUNCTION_12	WHILE_1	IF_4
0x4000a7f	          0x4829ea	                            sub rdx, rbp	        53	string3.h	FUNCTION_39	CALL_3
0x4000a82	          0x4889ee	                            mov rsi, rbp	        53	string3.h	FUNCTION_39	CALL_3
0x4000a85	          0x4c89e7	                            mov rdi, r12	        53	string3.h	FUNCTION_39	CALL_3
0x4000a88	      0xe800000000	                          call 0x4000a8d	        53	string3.h	FUNCTION_39	CALL_3
0x4000a8d	          0x4929ec	                            sub r12, rbp	       395	utf8.c	FUNCTION_12	WHILE_1
0x4000a90	      0x4c03642428	             add r12, qword [rsp + 0x28]	       395	utf8.c	FUNCTION_12	WHILE_1
0x4000a95	          0x4101dd	                           add r13d, ebx	       396	utf8.c	FUNCTION_12	WHILE_1
0x4000a98	      0x4c3b742428	            cmp r14, qword [rsp + 0x28] 	       368	utf8.c	FUNCTION_12	WHILE_1
0x4000a9d	     0xf8768ffffff	                            ja 0x4000a0b	       368	utf8.c	FUNCTION_12	WHILE_1
0x4000aa3	      0x488b542440	            mov rdx, qword [rsp + 0x40] 	       398	utf8.c	FUNCTION_12	CALL_8
0x4000aa8	          0x4c89e1	                            mov rcx, r12	       398	utf8.c	FUNCTION_12	CALL_8
0x4000aab	          0x4829d1	                            sub rcx, rdx	       398	utf8.c	FUNCTION_12	CALL_8
0x4000aae	      0x488b442430	            mov rax, qword [rsp + 0x30] 	       162	strbuf.h	FUNCTION_30	IF_1
0x4000ab3	        0x4883f801	                              cmp rax, 1	       162	strbuf.h	FUNCTION_30	IF_1
0x4000ab7	        0x4883d0ff	             adc rax, 0xffffffffffffffff	       162	strbuf.h	FUNCTION_30	IF_1
0x4000abb	          0x4839c1	                            cmp rcx, rax	       162	strbuf.h	FUNCTION_30	IF_1
0x4000abe	            0x760f	                           jbe 0x4000acf	       162	strbuf.h	FUNCTION_30	IF_1
0x4000ac0	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_30	CALL_1
0x4000ac5	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_30	CALL_1
0x4000aca	      0xe800000000	                          call 0x4000acf	       163	strbuf.h	FUNCTION_30	CALL_1
0x4000acf	      0x48894c2438	             mov qword [rsp + 0x38], rcx	       164	strbuf.h	FUNCTION_30
0x4000ad4	    0x4881fa000000	                              cmp rdx, 0	       165	strbuf.h	FUNCTION_30	IF_2
0x4000adb	            0x7407	                            je 0x4000ae4	       165	strbuf.h	FUNCTION_30	IF_2
0x4000add	      0x41c6042400	                       mov byte [r12], 0	       166	strbuf.h	FUNCTION_30	IF_2
0x4000ae2	            0xeb22	                           jmp 0x4000b06	       166	strbuf.h	FUNCTION_30	IF_2
0x4000ae4	    0x803d00000000	                cmp byte [0x04000aeb], 0	       168	strbuf.h	FUNCTION_30	CALL_2
0x4000aeb	            0x7419	                            je 0x4000b06	       168	strbuf.h	FUNCTION_30	CALL_2
0x4000aed	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_30	CALL_2
0x4000af2	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_30	CALL_2
0x4000af7	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_30	CALL_2
0x4000afc	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_30	CALL_2
0x4000b01	      0xe800000000	                          call 0x4000b06	       168	strbuf.h	FUNCTION_30	CALL_2
0x4000b06	      0x488b7c2418	            mov rdi, qword [rsp + 0x18] 	        53	string3.h	FUNCTION_39	CALL_3
0x4000b0b	          0x488b0f	                    mov rcx, qword [rdi]	        53	string3.h	FUNCTION_39	CALL_3
0x4000b0e	      0x48894c2450	             mov qword [rsp + 0x50], rcx	        53	string3.h	FUNCTION_39	CALL_3
0x4000b13	        0x488b5708	                mov rdx, qword [rdi + 8]	        53	string3.h	FUNCTION_39	CALL_3
0x4000b17	      0x4889542458	             mov qword [rsp + 0x58], rdx	        53	string3.h	FUNCTION_39	CALL_3
0x4000b1c	        0x488b4710	            mov rax, qword [rdi + 0x10] 	        53	string3.h	FUNCTION_39	CALL_3
0x4000b20	      0x4889442460	             mov qword [rsp + 0x60], rax	        53	string3.h	FUNCTION_39	CALL_3
0x4000b25	      0x488b742430	            mov rsi, qword [rsp + 0x30] 	        53	string3.h	FUNCTION_39	CALL_3
0x4000b2a	          0x488937	                    mov qword [rdi], rsi	        53	string3.h	FUNCTION_39	CALL_3
0x4000b2d	      0x488b742438	            mov rsi, qword [rsp + 0x38] 	        53	string3.h	FUNCTION_39	CALL_3
0x4000b32	        0x48897708	                mov qword [rdi + 8], rsi	        53	string3.h	FUNCTION_39	CALL_3
0x4000b36	      0x488b742440	            mov rsi, qword [rsp + 0x40] 	        53	string3.h	FUNCTION_39	CALL_3
0x4000b3b	        0x48897710	             mov qword [rdi + 0x10], rsi	        53	string3.h	FUNCTION_39	CALL_3
0x4000b3f	      0x48894c2430	             mov qword [rsp + 0x30], rcx	        53	string3.h	FUNCTION_39	CALL_3
0x4000b44	      0x4889542438	             mov qword [rsp + 0x38], rdx	        53	string3.h	FUNCTION_39	CALL_3
0x4000b49	      0x4889442440	             mov qword [rsp + 0x40], rax	        53	string3.h	FUNCTION_39	CALL_3
0x4000b4e	      0x488d7c2430	                   lea rdi, [rsp + 0x30]	       401	utf8.c	FUNCTION_12	CALL_10
0x4000b53	      0xe800000000	                          call 0x4000b58	       401	utf8.c	FUNCTION_12	CALL_10
0x4000b58	      0x488b442468	            mov rax, qword [rsp + 0x68] 	       402	utf8.c	FUNCTION_12
0x4000b5d	    0x644833042528	                xor rax, qword fs:[0x28]	       402	utf8.c	FUNCTION_12
0x4000b66	            0x7405	                            je 0x4000b6d	       402	utf8.c	FUNCTION_12
0x4000b68	      0xe800000000	                          call 0x4000b6d	       402	utf8.c	FUNCTION_12
0x4000b6d	        0x4883c478	                           add rsp, 0x78	       402	utf8.c	FUNCTION_12
0x4000b71	              0x5b	                                 pop rbx	       402	utf8.c	FUNCTION_12
0x4000b72	              0x5d	                                 pop rbp	       402	utf8.c	FUNCTION_12
0x4000b73	            0x415c	                                 pop r12	       402	utf8.c	FUNCTION_12
0x4000b75	            0x415d	                                 pop r13	       402	utf8.c	FUNCTION_12
0x4000b77	            0x415e	                                 pop r14	       402	utf8.c	FUNCTION_12
0x4000b79	            0x415f	                                 pop r15	       402	utf8.c	FUNCTION_12
0x4000b7b	              0xc3	                                     ret	       402	utf8.c	FUNCTION_12
reencode_string_iconv	DO,0:FOR,0:ELSE,1:functions,0:WHILE,1:CALL,4:SWITCH,0:IF,3	69
0x4000d28	            0x4156	                                push r14	       474	utf8.c	FUNCTION_17
0x4000d2a	            0x4155	                                push r13	       474	utf8.c	FUNCTION_17
0x4000d2c	            0x4154	                                push r12	       474	utf8.c	FUNCTION_17
0x4000d2e	              0x55	                                push rbp	       474	utf8.c	FUNCTION_17
0x4000d2f	              0x53	                                push rbx	       474	utf8.c	FUNCTION_17
0x4000d30	        0x4883ec30	                           sub rsp, 0x30	       474	utf8.c	FUNCTION_17
0x4000d34	          0x4889fb	                            mov rbx, rdi	       474	utf8.c	FUNCTION_17
0x4000d37	      0x4889742408	                mov qword [rsp + 8], rsi	       474	utf8.c	FUNCTION_17
0x4000d3c	          0x4989d5	                            mov r13, rdx	       474	utf8.c	FUNCTION_17
0x4000d3f	          0x4989ce	                            mov r14, rcx	       474	utf8.c	FUNCTION_17
0x4000d42	    0x64488b042528	                mov rax, qword fs:[0x28]	       474	utf8.c	FUNCTION_17
0x4000d4b	      0x4889442428	             mov qword [rsp + 0x28], rax	       474	utf8.c	FUNCTION_17
0x4000d50	            0x31c0	                            xor eax, eax	       474	utf8.c	FUNCTION_17
0x4000d52	      0x4889742410	             mov qword [rsp + 0x10], rsi	       479	utf8.c	FUNCTION_17
0x4000d57	        0x488d7e01	                      lea rdi, [rsi + 1]	       481	utf8.c	FUNCTION_17	CALL_1
0x4000d5b	      0xe800000000	                          call 0x4000d60	       481	utf8.c	FUNCTION_17	CALL_1
0x4000d60	          0x4989c4	                            mov r12, rax	       481	utf8.c	FUNCTION_17	CALL_1
0x4000d63	      0x4889442418	             mov qword [rsp + 0x18], rax	       482	utf8.c	FUNCTION_17
0x4000d68	      0x48895c2420	             mov qword [rsp + 0x20], rbx	       483	utf8.c	FUNCTION_17
0x4000d6d	      0x4c8d442410	                    lea r8, [rsp + 0x10]	       486	utf8.c	FUNCTION_17	WHILE_1	CALL_2
0x4000d72	      0x488d4c2418	                   lea rcx, [rsp + 0x18]	       486	utf8.c	FUNCTION_17	WHILE_1	CALL_2
0x4000d77	      0x488d542408	                      lea rdx, [rsp + 8]	       486	utf8.c	FUNCTION_17	WHILE_1	CALL_2
0x4000d7c	      0x488d742420	                   lea rsi, [rsp + 0x20]	       486	utf8.c	FUNCTION_17	WHILE_1	CALL_2
0x4000d81	          0x4c89ef	                            mov rdi, r13	       486	utf8.c	FUNCTION_17	WHILE_1	CALL_2
0x4000d84	      0xe800000000	                          call 0x4000d89	       486	utf8.c	FUNCTION_17	WHILE_1	CALL_2
0x4000d89	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       488	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x4000d8d	            0x754f	                           jne 0x4000dde	       488	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x4000d8f	      0xe800000000	                          call 0x4000d94	       490	utf8.c	FUNCTION_17	WHILE_1	IF_1	IF_2
0x4000d94	          0x833807	                      cmp dword [rax], 7	       490	utf8.c	FUNCTION_17	WHILE_1	IF_1	IF_2
0x4000d97	            0x740f	                            je 0x4000da8	       490	utf8.c	FUNCTION_17	WHILE_1	IF_1	IF_2
0x4000d99	          0x4c89e7	                            mov rdi, r12	       491	utf8.c	FUNCTION_17	WHILE_1	IF_1	IF_2	CALL_3
0x4000d9c	      0xe800000000	                          call 0x4000da1	       491	utf8.c	FUNCTION_17	WHILE_1	IF_1	IF_2	CALL_3
0x4000da1	      0xb800000000	                              mov eax, 0	       492	utf8.c	FUNCTION_17	WHILE_1	IF_1	IF_2
0x4000da6	            0xeb56	                           jmp 0x4000dfe	       492	utf8.c	FUNCTION_17	WHILE_1	IF_1	IF_2
0x4000da8	      0x488b5c2418	            mov rbx, qword [rsp + 0x18] 	       499	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x4000dad	          0x4c29e3	                            sub rbx, r12	       499	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x4000db0	      0x488b442408	                mov rax, qword [rsp + 8]	       500	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x4000db5	      0x488d6c4320	          lea rbp, [rbx + rax*2 + 0x20] 	       500	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x4000dba	          0x4889ee	                            mov rsi, rbp	       501	utf8.c	FUNCTION_17	WHILE_1	IF_1	CALL_4
0x4000dbd	          0x4c89e7	                            mov rdi, r12	       501	utf8.c	FUNCTION_17	WHILE_1	IF_1	CALL_4
0x4000dc0	      0xe800000000	                          call 0x4000dc5	       501	utf8.c	FUNCTION_17	WHILE_1	IF_1	CALL_4
0x4000dc5	          0x4989c4	                            mov r12, rax	       501	utf8.c	FUNCTION_17	WHILE_1	IF_1	CALL_4
0x4000dc8	        0x488d0418	                    lea rax, [rax + rbx]	       502	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x4000dcc	      0x4889442418	             mov qword [rsp + 0x18], rax	       502	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x4000dd1	          0x48f7d3	                                 not rbx	       503	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x4000dd4	          0x4801eb	                            add rbx, rbp	       503	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x4000dd7	      0x48895c2410	             mov qword [rsp + 0x10], rbx	       503	utf8.c	FUNCTION_17	WHILE_1	IF_1
0x4000ddc	            0xeb8f	                           jmp 0x4000d6d	       511	utf8.c	FUNCTION_17	WHILE_1
0x4000dde	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       506	utf8.c	FUNCTION_17	WHILE_1	ELSE_1
0x4000de3	          0xc60000	                       mov byte [rax], 0	       506	utf8.c	FUNCTION_17	WHILE_1	ELSE_1
0x4000de6	          0x4d85f6	                           test r14, r14	       507	utf8.c	FUNCTION_17	WHILE_1	ELSE_1	IF_3
0x4000de9	            0x7410	                            je 0x4000dfb	       507	utf8.c	FUNCTION_17	WHILE_1	ELSE_1	IF_3
0x4000deb	      0x488b442418	            mov rax, qword [rsp + 0x18] 	       508	utf8.c	FUNCTION_17	WHILE_1	ELSE_1	IF_3
0x4000df0	          0x4c29e0	                            sub rax, r12	       508	utf8.c	FUNCTION_17	WHILE_1	ELSE_1	IF_3
0x4000df3	          0x418906	                    mov dword [r14], eax	       508	utf8.c	FUNCTION_17	WHILE_1	ELSE_1	IF_3
0x4000df6	          0x4c89e0	                            mov rax, r12	       508	utf8.c	FUNCTION_17	WHILE_1	ELSE_1	IF_3
0x4000df9	            0xeb03	                           jmp 0x4000dfe	       508	utf8.c	FUNCTION_17	WHILE_1	ELSE_1	IF_3
0x4000dfb	          0x4c89e0	                            mov rax, r12	       508	utf8.c	FUNCTION_17	WHILE_1	ELSE_1	IF_3
0x4000dfe	      0x488b7c2428	            mov rdi, qword [rsp + 0x28] 	       513	utf8.c	FUNCTION_17
0x4000e03	    0x6448333c2528	                xor rdi, qword fs:[0x28]	       513	utf8.c	FUNCTION_17
0x4000e0c	            0x7405	                            je 0x4000e13	       513	utf8.c	FUNCTION_17
0x4000e0e	      0xe800000000	                          call 0x4000e13	       513	utf8.c	FUNCTION_17
0x4000e13	        0x4883c430	                           add rsp, 0x30	       513	utf8.c	FUNCTION_17
0x4000e17	              0x5b	                                 pop rbx	       513	utf8.c	FUNCTION_17
0x4000e18	              0x5d	                                 pop rbp	       513	utf8.c	FUNCTION_17
0x4000e19	            0x415c	                                 pop r12	       513	utf8.c	FUNCTION_17
0x4000e1b	            0x415d	                                 pop r13	       513	utf8.c	FUNCTION_17
0x4000e1d	            0x415e	                                 pop r14	       513	utf8.c	FUNCTION_17
0x4000e1f	              0xc3	                                     ret	       513	utf8.c	FUNCTION_17
mbs_chrlen	DO,0:FOR,0:ELSE,1:functions,0:WHILE,0:CALL,2:SWITCH,0:IF,3	59
0x400102f	              0x55	                                push rbp	       612	utf8.c	FUNCTION_23
0x4001030	              0x53	                                push rbx	       612	utf8.c	FUNCTION_23
0x4001031	        0x4883ec28	                           sub rsp, 0x28	       612	utf8.c	FUNCTION_23
0x4001035	          0x4889fd	                            mov rbp, rdi	       612	utf8.c	FUNCTION_23
0x4001038	          0x4889f3	                            mov rbx, rsi	       612	utf8.c	FUNCTION_23
0x400103b	    0x64488b042528	                mov rax, qword fs:[0x28]	       612	utf8.c	FUNCTION_23
0x4001044	      0x4889442418	             mov qword [rsp + 0x18], rax	       612	utf8.c	FUNCTION_23
0x4001049	            0x31c0	                            xor eax, eax	       612	utf8.c	FUNCTION_23
0x400104b	          0x488b07	                    mov rax, qword [rdi]	       614	utf8.c	FUNCTION_23
0x400104e	      0x4889442408	                mov qword [rsp + 8], rax	       614	utf8.c	FUNCTION_23
0x4001053	          0x4885f6	                           test rsi, rsi	       615	utf8.c	FUNCTION_23
0x4001056	            0x7458	                            je 0x40010b0	       615	utf8.c	FUNCTION_23
0x4001058	          0x488b0e	                    mov rcx, qword [rsi]	       615	utf8.c	FUNCTION_23
0x400105b	      0x48894c2410	             mov qword [rsp + 0x10], rcx	       615	utf8.c	FUNCTION_23
0x4001060	      0xb800000000	                              mov eax, 0	       618	utf8.c	FUNCTION_23	IF_1
0x4001065	          0x4885c9	                           test rcx, rcx	       617	utf8.c	FUNCTION_23	IF_1
0x4001068	            0x7434	                            je 0x400109e	       617	utf8.c	FUNCTION_23	IF_1
0x400106a	            0xeb6c	                           jmp 0x40010d8	       617	utf8.c	FUNCTION_23	IF_1
0x400106c	      0x488d742410	                   lea rsi, [rsp + 0x10]	       621	utf8.c	FUNCTION_23	IF_2	CALL_2
0x4001071	      0x488d7c2408	                      lea rdi, [rsp + 8]	       621	utf8.c	FUNCTION_23	IF_2	CALL_2
0x4001076	      0xe823f0ffff	             call sym.pick_one_utf8_char	       621	utf8.c	FUNCTION_23	IF_2	CALL_2
0x400107b	      0x488b442408	                mov rax, qword [rsp + 8]	       623	utf8.c	FUNCTION_23	IF_2
0x4001080	          0x4885c0	                           test rax, rax	       623	utf8.c	FUNCTION_23	IF_2
0x4001083	            0x7405	                            je 0x400108a	       623	utf8.c	FUNCTION_23	IF_2
0x4001085	          0x2b4500	                    sub eax, dword [rbp]	       623	utf8.c	FUNCTION_23	IF_2
0x4001088	            0xeb05	                           jmp 0x400108f	       623	utf8.c	FUNCTION_23	IF_2
0x400108a	      0xb801000000	                              mov eax, 1	       623	utf8.c	FUNCTION_23	IF_2
0x400108f	          0x4863d0	                         movsxd rdx, eax	       634	utf8.c	FUNCTION_23
0x4001092	        0x48015500	                    add qword [rbp], rdx	       634	utf8.c	FUNCTION_23
0x4001096	          0x4885db	                           test rbx, rbx	       635	utf8.c	FUNCTION_23	IF_3
0x4001099	            0x7403	                            je 0x400109e	       635	utf8.c	FUNCTION_23	IF_3
0x400109b	          0x482913	                    sub qword [rbx], rdx	       636	utf8.c	FUNCTION_23	IF_3
0x400109e	      0x488b742418	            mov rsi, qword [rsp + 0x18] 	       639	utf8.c	FUNCTION_23
0x40010a3	    0x644833342528	                xor rsi, qword fs:[0x28]	       639	utf8.c	FUNCTION_23
0x40010ac	            0x7449	                            je 0x40010f7	       639	utf8.c	FUNCTION_23
0x40010ae	            0xeb42	                           jmp 0x40010f2	       639	utf8.c	FUNCTION_23
0x40010b0	    0x48c7442410ff	mov qword [rsp + 0x10], 0xffffffffffffffff	       615	utf8.c	FUNCTION_23
0x40010b9	          0x4889d7	                            mov rdi, rdx	       620	utf8.c	FUNCTION_23	IF_2	CALL_1
0x40010bc	      0xe800000000	                          call 0x40010c1	       620	utf8.c	FUNCTION_23	IF_2	CALL_1
0x40010c1	            0x85c0	                           test eax, eax	       620	utf8.c	FUNCTION_23	IF_2	CALL_1
0x40010c3	            0x75a7	                           jne 0x400106c	       620	utf8.c	FUNCTION_23	IF_2	CALL_1
0x40010c5	            0xeb1f	                           jmp 0x40010e6	       620	utf8.c	FUNCTION_23	IF_2	CALL_1
0x40010c7	      0x4883450001	                      add qword [rbp], 1	       634	utf8.c	FUNCTION_23
0x40010cc	      0xba01000000	                              mov edx, 1	       634	utf8.c	FUNCTION_23
0x40010d1	      0xb801000000	                              mov eax, 1	       631	utf8.c	FUNCTION_23	ELSE_1
0x40010d6	            0xebc3	                           jmp 0x400109b	       631	utf8.c	FUNCTION_23	ELSE_1
0x40010d8	          0x4889d7	                            mov rdi, rdx	       620	utf8.c	FUNCTION_23	IF_2	CALL_1
0x40010db	      0xe800000000	                          call 0x40010e0	       620	utf8.c	FUNCTION_23	IF_2	CALL_1
0x40010e0	            0x85c0	                           test eax, eax	       620	utf8.c	FUNCTION_23	IF_2	CALL_1
0x40010e2	            0x74e3	                            je 0x40010c7	       620	utf8.c	FUNCTION_23	IF_2	CALL_1
0x40010e4	            0xeb86	                           jmp 0x400106c	       620	utf8.c	FUNCTION_23	IF_2	CALL_1
0x40010e6	      0x4883450001	                      add qword [rbp], 1	       634	utf8.c	FUNCTION_23
0x40010eb	      0xb801000000	                              mov eax, 1	       631	utf8.c	FUNCTION_23	ELSE_1
0x40010f0	            0xebac	                           jmp 0x400109e	       631	utf8.c	FUNCTION_23	ELSE_1
0x40010f2	      0xe800000000	                          call 0x40010f7	       639	utf8.c	FUNCTION_23
0x40010f7	        0x4883c428	                           add rsp, 0x28	       639	utf8.c	FUNCTION_23
0x40010fb	              0x5b	                                 pop rbx	       639	utf8.c	FUNCTION_23
0x40010fc	              0x5d	                                 pop rbp	       639	utf8.c	FUNCTION_23
0x40010fd	              0xc3	                                     ret	       639	utf8.c	FUNCTION_23
bisearch	DO,0:FOR,0:ELSE,2:functions,0:WHILE,1:CALL,0:SWITCH,0:IF,3	33
0x4000040	      0xb800000000	                              mov eax, 0	        33	utf8.c	FUNCTION_2	IF_1
0x4000045	            0x393e	                    cmp dword [rsi], edi	        32	utf8.c	FUNCTION_2	IF_1
0x4000047	            0x7753	                            ja 0x400009c	        32	utf8.c	FUNCTION_2	IF_1
0x4000049	          0x4863ca	                         movsxd rcx, edx	        32	utf8.c	FUNCTION_2	IF_1
0x400004c	        0x3b7cce04	       cmp edi, dword [rsi + rcx*8 + 4] 	        32	utf8.c	FUNCTION_2	IF_1
0x4000050	            0x774a	                            ja 0x400009c	        32	utf8.c	FUNCTION_2	IF_1
0x4000052	            0x85d2	                           test edx, edx	        34	utf8.c	FUNCTION_2	WHILE_1
0x4000054	            0x783b	                            js 0x4000091	        34	utf8.c	FUNCTION_2	WHILE_1
0x4000056	      0xb900000000	                              mov ecx, 0	        34	utf8.c	FUNCTION_2	WHILE_1
0x400005b	            0x89d0	                            mov eax, edx	        35	utf8.c	FUNCTION_2	WHILE_1
0x400005d	            0x29c8	                            sub eax, ecx	        35	utf8.c	FUNCTION_2	WHILE_1
0x400005f	          0x4189c0	                            mov r8d, eax	        35	utf8.c	FUNCTION_2	WHILE_1
0x4000062	        0x41c1e81f	                           shr r8d, 0x1f	        35	utf8.c	FUNCTION_2	WHILE_1
0x4000066	          0x4401c0	                            add eax, r8d	        35	utf8.c	FUNCTION_2	WHILE_1
0x4000069	            0xd1f8	                              sar eax, 1	        35	utf8.c	FUNCTION_2	WHILE_1
0x400006b	             0x1c8	                            add eax, ecx	        35	utf8.c	FUNCTION_2	WHILE_1
0x400006d	          0x4c63c0	                          movsxd r8, eax	        36	utf8.c	FUNCTION_2	WHILE_1	IF_2
0x4000070	        0x4e8d04c6	                    lea r8, [rsi + r8*8]	        36	utf8.c	FUNCTION_2	WHILE_1	IF_2
0x4000074	        0x413b7804	                 cmp edi, dword [r8 + 4]	        36	utf8.c	FUNCTION_2	WHILE_1	IF_2
0x4000078	            0x7605	                           jbe 0x400007f	        36	utf8.c	FUNCTION_2	WHILE_1	IF_2
0x400007a	          0x8d4801	                      lea ecx, [rax + 1]	        37	utf8.c	FUNCTION_2	WHILE_1	IF_2
0x400007d	            0xeb08	                           jmp 0x4000087	        37	utf8.c	FUNCTION_2	WHILE_1	IF_2
0x400007f	          0x413b38	                     cmp edi, dword [r8]	        38	utf8.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3
0x4000082	            0x7313	                           jae 0x4000097	        38	utf8.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3
0x4000084	          0x8d50ff	                      lea edx, [rax - 1]	        39	utf8.c	FUNCTION_2	WHILE_1	ELSE_1	IF_3
0x4000087	            0x39d1	                            cmp ecx, edx	        34	utf8.c	FUNCTION_2	WHILE_1
0x4000089	            0x7ed0	                           jle 0x400005b	        34	utf8.c	FUNCTION_2	WHILE_1
0x400008b	      0xb800000000	                              mov eax, 0	        44	utf8.c	FUNCTION_2	ELSE_2
0x4000090	              0xc3	                                     ret	        44	utf8.c	FUNCTION_2	ELSE_2
0x4000091	      0xb800000000	                              mov eax, 0	        44	utf8.c	FUNCTION_2	ELSE_2
0x4000096	              0xc3	                                     ret	        44	utf8.c	FUNCTION_2	ELSE_2
0x4000097	      0xb801000000	                              mov eax, 1	        41	utf8.c	FUNCTION_2	WHILE_1	ELSE_2
0x400009c	            0xf3c3	                                     ret	        45	utf8.c	FUNCTION_2	ELSE_2
has_bom_prefix	DO,0:FOR,0:ELSE,0:functions,0:WHILE,0:CALL,1:SWITCH,0:IF,0	20
0x400032f	          0x4885d2	                           test rdx, rdx	       566	utf8.c	FUNCTION_20	CALL_1
0x4000332	        0x410f95c0	                               setne r8b	       566	utf8.c	FUNCTION_20	CALL_1
0x4000336	          0x4839ce	                            cmp rsi, rcx	       566	utf8.c	FUNCTION_20	CALL_1
0x4000339	           0xf93c0	                                setae al	       566	utf8.c	FUNCTION_20	CALL_1
0x400033c	          0x4184c0	                            test r8b, al	       566	utf8.c	FUNCTION_20	CALL_1
0x400033f	            0x741e	                            je 0x400035f	       566	utf8.c	FUNCTION_20	CALL_1
0x4000341	          0x4885ff	                           test rdi, rdi	       566	utf8.c	FUNCTION_20	CALL_1
0x4000344	            0x7419	                            je 0x400035f	       566	utf8.c	FUNCTION_20	CALL_1
0x4000346	        0x4883ec08	                              sub rsp, 8	       565	utf8.c	FUNCTION_20
0x400034a	          0x4889d6	                            mov rsi, rdx	       565	utf8.c	FUNCTION_20
0x400034d	          0x4889ca	                            mov rdx, rcx	       566	utf8.c	FUNCTION_20	CALL_1
0x4000350	      0xe800000000	                          call 0x4000355	       566	utf8.c	FUNCTION_20	CALL_1
0x4000355	            0x85c0	                           test eax, eax	       566	utf8.c	FUNCTION_20	CALL_1
0x4000357	           0xf94c0	                                 sete al	       566	utf8.c	FUNCTION_20	CALL_1
0x400035a	           0xfb6c0	                           movzx eax, al	       566	utf8.c	FUNCTION_20	CALL_1
0x400035d	            0xeb06	                           jmp 0x4000365	       566	utf8.c	FUNCTION_20	CALL_1
0x400035f	      0xb800000000	                              mov eax, 0	       566	utf8.c	FUNCTION_20	CALL_1
0x4000364	              0xc3	                                     ret	       566	utf8.c	FUNCTION_20	CALL_1
0x4000365	        0x4883c408	                              add rsp, 8	       567	utf8.c	FUNCTION_20
0x4000369	              0xc3	                                     ret	       567	utf8.c	FUNCTION_20
is_encoding_utf8	DO,0:FOR,0:ELSE,0:functions,0:WHILE,0:CALL,1:SWITCH,0:IF,2	12
0x4000b7c	      0xb801000000	                              mov eax, 1	       423	utf8.c	FUNCTION_14	IF_1
0x4000b81	          0x4885ff	                           test rdi, rdi	       422	utf8.c	FUNCTION_14	IF_1
0x4000b84	            0x741d	                            je 0x4000ba3	       422	utf8.c	FUNCTION_14	IF_1
0x4000b86	        0x4883ec08	                              sub rsp, 8	       421	utf8.c	FUNCTION_14
0x4000b8a	          0x4889fe	                            mov rsi, rdi	       421	utf8.c	FUNCTION_14
0x4000b8d	      0xbf00000000	                              mov edi, 0	       424	utf8.c	FUNCTION_14	IF_2	CALL_1
0x4000b92	      0xe833f7ffff	              call sym.same_utf_encoding	       424	utf8.c	FUNCTION_14	IF_2	CALL_1
0x4000b97	            0x85c0	                           test eax, eax	       423	utf8.c	FUNCTION_14	IF_1
0x4000b99	           0xf95c0	                                setne al	       423	utf8.c	FUNCTION_14	IF_1
0x4000b9c	           0xfb6c0	                           movzx eax, al	       423	utf8.c	FUNCTION_14	IF_1
0x4000b9f	        0x4883c408	                              add rsp, 8	       427	utf8.c	FUNCTION_14
0x4000ba3	            0xf3c3	                                     ret	       427	utf8.c	FUNCTION_14
fallback_encoding	DO,0:FOR,0:ELSE,0:functions,0:WHILE,0:CALL,2:SWITCH,0:IF,2	15
0x4000ba5	              0x53	                                push rbx	       516	utf8.c	FUNCTION_18
0x4000ba6	          0x4889fb	                            mov rbx, rdi	       516	utf8.c	FUNCTION_18
0x4000ba9	      0xe800000000	                          call 0x4000bae	       524	utf8.c	FUNCTION_18	IF_1	CALL_1
0x4000bae	      0xba00000000	                              mov edx, 0	       525	utf8.c	FUNCTION_18	IF_1
0x4000bb3	            0x85c0	                           test eax, eax	       524	utf8.c	FUNCTION_18	IF_1	CALL_1
0x4000bb5	            0x7518	                           jne 0x4000bcf	       524	utf8.c	FUNCTION_18	IF_1	CALL_1
0x4000bb7	      0xbe00000000	                              mov esi, 0	       531	utf8.c	FUNCTION_18	IF_2	CALL_2
0x4000bbc	          0x4889df	                            mov rdi, rbx	       531	utf8.c	FUNCTION_18	IF_2	CALL_2
0x4000bbf	      0xe800000000	                          call 0x4000bc4	       531	utf8.c	FUNCTION_18	IF_2	CALL_2
0x4000bc4	            0x85c0	                           test eax, eax	       531	utf8.c	FUNCTION_18	IF_2	CALL_2
0x4000bc6	      0xba00000000	                              mov edx, 0	       534	utf8.c	FUNCTION_18
0x4000bcb	        0x480f45d3	                         cmovne rdx, rbx	       534	utf8.c	FUNCTION_18
0x4000bcf	          0x4889d0	                            mov rax, rdx	       535	utf8.c	FUNCTION_18
0x4000bd2	              0x5b	                                 pop rbx	       535	utf8.c	FUNCTION_18
0x4000bd3	              0xc3	                                     ret	       535	utf8.c	FUNCTION_18
strbuf_add_wrapped_bytes	DO,0:FOR,0:ELSE,0:functions,0:WHILE,0:CALL,3:SWITCH,0:IF,0	27
0x4000906	            0x4156	                                push r14	       348	utf8.c	FUNCTION_11
0x4000908	            0x4155	                                push r13	       348	utf8.c	FUNCTION_11
0x400090a	            0x4154	                                push r12	       348	utf8.c	FUNCTION_11
0x400090c	              0x55	                                push rbp	       348	utf8.c	FUNCTION_11
0x400090d	              0x53	                                push rbx	       348	utf8.c	FUNCTION_11
0x400090e	          0x4889fb	                            mov rbx, rdi	       348	utf8.c	FUNCTION_11
0x4000911	          0x4889f7	                            mov rdi, rsi	       348	utf8.c	FUNCTION_11
0x4000914	            0x89cd	                            mov ebp, ecx	       348	utf8.c	FUNCTION_11
0x4000916	          0x4589c4	                           mov r12d, r8d	       348	utf8.c	FUNCTION_11
0x4000919	          0x4589cd	                           mov r13d, r9d	       348	utf8.c	FUNCTION_11
0x400091c	          0x4863f2	                         movsxd rsi, edx	       349	utf8.c	FUNCTION_11	CALL_1
0x400091f	      0xe800000000	                          call 0x4000924	       349	utf8.c	FUNCTION_11	CALL_1
0x4000924	          0x4989c6	                            mov r14, rax	       349	utf8.c	FUNCTION_11	CALL_1
0x4000927	          0x4589e8	                           mov r8d, r13d	       350	utf8.c	FUNCTION_11	CALL_2
0x400092a	          0x4489e1	                           mov ecx, r12d	       350	utf8.c	FUNCTION_11	CALL_2
0x400092d	            0x89ea	                            mov edx, ebp	       350	utf8.c	FUNCTION_11	CALL_2
0x400092f	          0x4889c6	                            mov rsi, rax	       350	utf8.c	FUNCTION_11	CALL_2
0x4000932	          0x4889df	                            mov rdi, rbx	       350	utf8.c	FUNCTION_11	CALL_2
0x4000935	      0xe800000000	                          call 0x400093a	       350	utf8.c	FUNCTION_11	CALL_2
0x400093a	          0x4c89f7	                            mov rdi, r14	       351	utf8.c	FUNCTION_11	CALL_3
0x400093d	      0xe800000000	                          call 0x4000942	       351	utf8.c	FUNCTION_11	CALL_3
0x4000942	              0x5b	                                 pop rbx	       352	utf8.c	FUNCTION_11
0x4000943	              0x5d	                                 pop rbp	       352	utf8.c	FUNCTION_11
0x4000944	            0x415c	                                 pop r12	       352	utf8.c	FUNCTION_11
0x4000946	            0x415d	                                 pop r13	       352	utf8.c	FUNCTION_11
0x4000948	            0x415e	                                 pop r14	       352	utf8.c	FUNCTION_11
0x400094a	              0xc3	                                     ret	       352	utf8.c	FUNCTION_11
utf8_strnwidth	DO,0:FOR,0:ELSE,0:functions,0:WHILE,2:CALL,3:SWITCH,0:IF,1	56
0x4000428	            0x4156	                                push r14	       207	utf8.c	FUNCTION_6
0x400042a	            0x4155	                                push r13	       207	utf8.c	FUNCTION_6
0x400042c	            0x4154	                                push r12	       207	utf8.c	FUNCTION_6
0x400042e	              0x55	                                push rbp	       207	utf8.c	FUNCTION_6
0x400042f	              0x53	                                push rbx	       207	utf8.c	FUNCTION_6
0x4000430	        0x4883ec08	                              sub rsp, 8	       207	utf8.c	FUNCTION_6
0x4000434	        0x48893c24	                    mov qword [rsp], rdi	       207	utf8.c	FUNCTION_6
0x4000438	          0x4189f5	                           mov r13d, esi	       207	utf8.c	FUNCTION_6
0x400043b	          0x4189d4	                           mov r12d, edx	       207	utf8.c	FUNCTION_6
0x400043e	          0x4889fa	                            mov rdx, rdi	       209	utf8.c	FUNCTION_6
0x4000441	          0x83feff	             cmp esi, 0xffffffffffffffff	       211	utf8.c	FUNCTION_6	IF_1
0x4000444	            0x7518	                           jne 0x400045e	       211	utf8.c	FUNCTION_6	IF_1
0x4000446	      0xb800000000	                              mov eax, 0	       212	utf8.c	FUNCTION_6	CALL_1
0x400044b	    0x48c7c1ffffff	             mov rcx, 0xffffffffffffffff	       212	utf8.c	FUNCTION_6	CALL_1
0x4000452	            0xf2ae	              repne scasb al, byte [rdi]	       212	utf8.c	FUNCTION_6	CALL_1
0x4000454	          0x4889c8	                            mov rax, rcx	       212	utf8.c	FUNCTION_6	CALL_1
0x4000457	          0x48f7d0	                                 not rax	       212	utf8.c	FUNCTION_6	CALL_1
0x400045a	        0x448d68ff	                     lea r13d, [rax - 1]	       212	utf8.c	FUNCTION_6	CALL_1
0x400045e	          0x4885d2	                           test rdx, rdx	       213	utf8.c	FUNCTION_6	WHILE_1
0x4000461	            0x7453	                            je 0x40004b6	       213	utf8.c	FUNCTION_6	WHILE_1
0x4000463	          0x4963ed	                        movsxd rbp, r13d	       213	utf8.c	FUNCTION_6	WHILE_1
0x4000466	          0x4801d5	                            add rbp, rdx	       213	utf8.c	FUNCTION_6	WHILE_1
0x4000469	      0xbb00000000	                              mov ebx, 0	       213	utf8.c	FUNCTION_6	WHILE_1
0x400046e	          0x4839ea	                            cmp rdx, rbp	       213	utf8.c	FUNCTION_6	WHILE_1
0x4000471	            0x7238	                            jb 0x40004ab	       213	utf8.c	FUNCTION_6	WHILE_1
0x4000473	            0xeb3d	                           jmp 0x40004b2	       213	utf8.c	FUNCTION_6	WHILE_1
0x4000475	            0x4898	                                    cdqe	       217	utf8.c	FUNCTION_6	WHILE_1	WHILE_2
0x4000477	          0x4c01f0	                            add rax, r14	       217	utf8.c	FUNCTION_6	WHILE_1	WHILE_2
0x400047a	        0x48890424	                    mov qword [rsp], rax	       217	utf8.c	FUNCTION_6	WHILE_1	WHILE_2
0x400047e	        0x4c8b3424	                    mov r14, qword [rsp]	       216	utf8.c	FUNCTION_6	WHILE_1	WHILE_2	CALL_2
0x4000482	          0x4c89f7	                            mov rdi, r14	       216	utf8.c	FUNCTION_6	WHILE_1	WHILE_2	CALL_2
0x4000485	      0xe800000000	                          call 0x400048a	       216	utf8.c	FUNCTION_6	WHILE_1	WHILE_2	CALL_2
0x400048a	            0x85c0	                           test eax, eax	       215	utf8.c	FUNCTION_6	WHILE_1	WHILE_2
0x400048c	            0x75e7	                           jne 0x4000475	       215	utf8.c	FUNCTION_6	WHILE_1	WHILE_2
0x400048e	      0xbe00000000	                              mov esi, 0	       218	utf8.c	FUNCTION_6	WHILE_1	CALL_3
0x4000493	          0x4889e7	                            mov rdi, rsp	       218	utf8.c	FUNCTION_6	WHILE_1	CALL_3
0x4000496	      0xe800000000	                          call 0x400049b	       218	utf8.c	FUNCTION_6	WHILE_1	CALL_3
0x400049b	             0x1c3	                            add ebx, eax	       218	utf8.c	FUNCTION_6	WHILE_1	CALL_3
0x400049d	        0x488b0424	                    mov rax, qword [rsp]	       213	utf8.c	FUNCTION_6	WHILE_1
0x40004a1	          0x4885c0	                           test rax, rax	       213	utf8.c	FUNCTION_6	WHILE_1
0x40004a4	            0x7410	                            je 0x40004b6	       213	utf8.c	FUNCTION_6	WHILE_1
0x40004a6	          0x4839e8	                            cmp rax, rbp	       213	utf8.c	FUNCTION_6	WHILE_1
0x40004a9	            0x7307	                           jae 0x40004b2	       213	utf8.c	FUNCTION_6	WHILE_1
0x40004ab	          0x4585e4	                         test r12d, r12d	       215	utf8.c	FUNCTION_6	WHILE_1	WHILE_2
0x40004ae	            0x75ce	                           jne 0x400047e	       215	utf8.c	FUNCTION_6	WHILE_1	WHILE_2
0x40004b0	            0xebdc	                           jmp 0x400048e	       215	utf8.c	FUNCTION_6	WHILE_1	WHILE_2
0x40004b2	            0x89d8	                            mov eax, ebx	       220	utf8.c	FUNCTION_6
0x40004b4	            0xeb03	                           jmp 0x40004b9	       220	utf8.c	FUNCTION_6
0x40004b6	          0x4489e8	                           mov eax, r13d	       220	utf8.c	FUNCTION_6
0x40004b9	        0x4883c408	                              add rsp, 8	       221	utf8.c	FUNCTION_6
0x40004bd	              0x5b	                                 pop rbx	       221	utf8.c	FUNCTION_6
0x40004be	              0x5d	                                 pop rbp	       221	utf8.c	FUNCTION_6
0x40004bf	            0x415c	                                 pop r12	       221	utf8.c	FUNCTION_6
0x40004c1	            0x415d	                                 pop r13	       221	utf8.c	FUNCTION_6
0x40004c3	            0x415e	                                 pop r14	       221	utf8.c	FUNCTION_6
0x40004c5	              0xc3	                                     ret	       221	utf8.c	FUNCTION_6
is_missing_required_utf_bom	DO,0:FOR,0:ELSE,0:functions,0:WHILE,0:CALL,6:SWITCH,0:IF,0	52
0x4000f88	            0x4154	                                push r12	       590	utf8.c	FUNCTION_22
0x4000f8a	              0x55	                                push rbp	       590	utf8.c	FUNCTION_22
0x4000f8b	              0x53	                                push rbx	       590	utf8.c	FUNCTION_22
0x4000f8c	          0x4989fc	                            mov r12, rdi	       590	utf8.c	FUNCTION_22
0x4000f8f	          0x4889f3	                            mov rbx, rsi	       590	utf8.c	FUNCTION_22
0x4000f92	          0x4889d5	                            mov rbp, rdx	       590	utf8.c	FUNCTION_22
0x4000f95	      0xbe00000000	                              mov esi, 0	       592	utf8.c	FUNCTION_22	CALL_1
0x4000f9a	      0xe82bf3ffff	              call sym.same_utf_encoding	       592	utf8.c	FUNCTION_22	CALL_1
0x4000f9f	            0x85c0	                           test eax, eax	       595	utf8.c	FUNCTION_22
0x4000fa1	            0x7439	                            je 0x4000fdc	       595	utf8.c	FUNCTION_22
0x4000fa3	      0xb902000000	                              mov ecx, 2	       593	utf8.c	FUNCTION_22	CALL_2
0x4000fa8	      0xba00000000	                              mov edx, 0	       593	utf8.c	FUNCTION_22	CALL_2
0x4000fad	          0x4889ee	                            mov rsi, rbp	       593	utf8.c	FUNCTION_22	CALL_2
0x4000fb0	          0x4889df	                            mov rdi, rbx	       593	utf8.c	FUNCTION_22	CALL_2
0x4000fb3	      0xe877f3ffff	                 call sym.has_bom_prefix	       593	utf8.c	FUNCTION_22	CALL_2
0x4000fb8	            0x85c0	                           test eax, eax	       592	utf8.c	FUNCTION_22	CALL_1
0x4000fba	            0x7520	                           jne 0x4000fdc	       592	utf8.c	FUNCTION_22	CALL_1
0x4000fbc	      0xb902000000	                              mov ecx, 2	       594	utf8.c	FUNCTION_22	CALL_3
0x4000fc1	      0xba00000000	                              mov edx, 0	       594	utf8.c	FUNCTION_22	CALL_3
0x4000fc6	          0x4889ee	                            mov rsi, rbp	       594	utf8.c	FUNCTION_22	CALL_3
0x4000fc9	          0x4889df	                            mov rdi, rbx	       594	utf8.c	FUNCTION_22	CALL_3
0x4000fcc	      0xe85ef3ffff	                 call sym.has_bom_prefix	       594	utf8.c	FUNCTION_22	CALL_3
0x4000fd1	            0x89c2	                            mov edx, eax	       594	utf8.c	FUNCTION_22	CALL_3
0x4000fd3	      0xb801000000	                              mov eax, 1	       595	utf8.c	FUNCTION_22
0x4000fd8	            0x85d2	                           test edx, edx	       593	utf8.c	FUNCTION_22	CALL_2
0x4000fda	            0x744e	                            je 0x400102a	       593	utf8.c	FUNCTION_22	CALL_2
0x4000fdc	      0xbe00000000	                              mov esi, 0	       596	utf8.c	FUNCTION_22	CALL_4
0x4000fe1	          0x4c89e7	                            mov rdi, r12	       596	utf8.c	FUNCTION_22	CALL_4
0x4000fe4	      0xe8e1f2ffff	              call sym.same_utf_encoding	       596	utf8.c	FUNCTION_22	CALL_4
0x4000fe9	            0x85c0	                           test eax, eax	       595	utf8.c	FUNCTION_22
0x4000feb	            0x743d	                            je 0x400102a	       595	utf8.c	FUNCTION_22
0x4000fed	      0xb904000000	                              mov ecx, 4	       597	utf8.c	FUNCTION_22	CALL_5
0x4000ff2	      0xba00000000	                              mov edx, 0	       597	utf8.c	FUNCTION_22	CALL_5
0x4000ff7	          0x4889ee	                            mov rsi, rbp	       597	utf8.c	FUNCTION_22	CALL_5
0x4000ffa	          0x4889df	                            mov rdi, rbx	       597	utf8.c	FUNCTION_22	CALL_5
0x4000ffd	      0xe82df3ffff	                 call sym.has_bom_prefix	       597	utf8.c	FUNCTION_22	CALL_5
0x4001002	            0x89c2	                            mov edx, eax	       597	utf8.c	FUNCTION_22	CALL_5
0x4001004	      0xb800000000	                              mov eax, 0	       595	utf8.c	FUNCTION_22
0x4001009	            0x85d2	                           test edx, edx	       596	utf8.c	FUNCTION_22	CALL_4
0x400100b	            0x751d	                           jne 0x400102a	       596	utf8.c	FUNCTION_22	CALL_4
0x400100d	      0xb904000000	                              mov ecx, 4	       598	utf8.c	FUNCTION_22	CALL_6
0x4001012	      0xba00000000	                              mov edx, 0	       598	utf8.c	FUNCTION_22	CALL_6
0x4001017	          0x4889ee	                            mov rsi, rbp	       598	utf8.c	FUNCTION_22	CALL_6
0x400101a	          0x4889df	                            mov rdi, rbx	       598	utf8.c	FUNCTION_22	CALL_6
0x400101d	      0xe80df3ffff	                 call sym.has_bom_prefix	       598	utf8.c	FUNCTION_22	CALL_6
0x4001022	            0x85c0	                           test eax, eax	       595	utf8.c	FUNCTION_22
0x4001024	           0xf94c0	                                 sete al	       595	utf8.c	FUNCTION_22
0x4001027	           0xfb6c0	                           movzx eax, al	       595	utf8.c	FUNCTION_22
0x400102a	              0x5b	                                 pop rbx	       600	utf8.c	FUNCTION_22
0x400102b	              0x5d	                                 pop rbp	       600	utf8.c	FUNCTION_22
0x400102c	            0x415c	                                 pop r12	       600	utf8.c	FUNCTION_22
0x400102e	              0xc3	                                     ret	       600	utf8.c	FUNCTION_22
skip_utf8_bom	DO,0:FOR,0:ELSE,0:functions,0:WHILE,0:CALL,4:SWITCH,0:IF,1	25
0x4001179	      0xba00000000	                              mov edx, 0	       719	utf8.c	FUNCTION_26	IF_1
0x400117e	        0x4883fe02	                              cmp rsi, 2	       717	utf8.c	FUNCTION_26	IF_1	CALL_1
0x4001182	            0x763c	                           jbe 0x40011c0	       717	utf8.c	FUNCTION_26	IF_1	CALL_1
0x4001184	              0x55	                                push rbp	       716	utf8.c	FUNCTION_26
0x4001185	              0x53	                                push rbx	       716	utf8.c	FUNCTION_26
0x4001186	        0x4883ec08	                              sub rsp, 8	       716	utf8.c	FUNCTION_26
0x400118a	          0x4889fb	                            mov rbx, rdi	       716	utf8.c	FUNCTION_26
0x400118d	          0x488b2f	                    mov rbp, qword [rdi]	       718	utf8.c	FUNCTION_26	IF_1	CALL_3
0x4001190	      0xba03000000	                              mov edx, 3	       718	utf8.c	FUNCTION_26	IF_1	CALL_3
0x4001195	      0xbe00000000	                              mov esi, 0	       718	utf8.c	FUNCTION_26	IF_1	CALL_3
0x400119a	          0x4889ef	                            mov rdi, rbp	       718	utf8.c	FUNCTION_26	IF_1	CALL_3
0x400119d	      0xe800000000	                          call 0x40011a2	       718	utf8.c	FUNCTION_26	IF_1	CALL_3
0x40011a2	      0xba00000000	                              mov edx, 0	       719	utf8.c	FUNCTION_26	IF_1
0x40011a7	            0x85c0	                           test eax, eax	       717	utf8.c	FUNCTION_26	IF_1	CALL_1
0x40011a9	            0x750c	                           jne 0x40011b7	       717	utf8.c	FUNCTION_26	IF_1	CALL_1
0x40011ab	        0x4883c503	                              add rbp, 3	       720	utf8.c	FUNCTION_26	CALL_4
0x40011af	          0x48892b	                    mov qword [rbx], rbp	       720	utf8.c	FUNCTION_26	CALL_4
0x40011b2	      0xba01000000	                              mov edx, 1	       721	utf8.c	FUNCTION_26
0x40011b7	            0x89d0	                            mov eax, edx	       722	utf8.c	FUNCTION_26
0x40011b9	        0x4883c408	                              add rsp, 8	       722	utf8.c	FUNCTION_26
0x40011bd	              0x5b	                                 pop rbx	       722	utf8.c	FUNCTION_26
0x40011be	              0x5d	                                 pop rbp	       722	utf8.c	FUNCTION_26
0x40011bf	              0xc3	                                     ret	       722	utf8.c	FUNCTION_26
0x40011c0	            0x89d0	                            mov eax, edx	       722	utf8.c	FUNCTION_26
0x40011c2	              0xc3	                                     ret	       722	utf8.c	FUNCTION_26
reencode_string_len	DO,0:FOR,0:ELSE,0:functions,0:WHILE,0:CALL,6:SWITCH,0:IF,3	52
0x4000e20	          0x4885c9	                           test rcx, rcx	       544	utf8.c	FUNCTION_19	IF_1
0x4000e23	            0x7478	                            je 0x4000e9d	       544	utf8.c	FUNCTION_19	IF_1
0x4000e25	            0x4157	                                push r15	       540	utf8.c	FUNCTION_19
0x4000e27	            0x4156	                                push r14	       540	utf8.c	FUNCTION_19
0x4000e29	            0x4155	                                push r13	       540	utf8.c	FUNCTION_19
0x4000e2b	            0x4154	                                push r12	       540	utf8.c	FUNCTION_19
0x4000e2d	              0x55	                                push rbp	       540	utf8.c	FUNCTION_19
0x4000e2e	              0x53	                                push rbx	       540	utf8.c	FUNCTION_19
0x4000e2f	        0x4883ec08	                              sub rsp, 8	       540	utf8.c	FUNCTION_19
0x4000e33	          0x4d89c5	                             mov r13, r8	       540	utf8.c	FUNCTION_19
0x4000e36	          0x4989cf	                            mov r15, rcx	       540	utf8.c	FUNCTION_19
0x4000e39	          0x4889d5	                            mov rbp, rdx	       540	utf8.c	FUNCTION_19
0x4000e3c	            0x89f3	                            mov ebx, esi	       540	utf8.c	FUNCTION_19
0x4000e3e	          0x4989fe	                            mov r14, rdi	       540	utf8.c	FUNCTION_19
0x4000e41	          0x4889ce	                            mov rsi, rcx	       547	utf8.c	FUNCTION_19	CALL_1
0x4000e44	          0x4889d7	                            mov rdi, rdx	       547	utf8.c	FUNCTION_19	CALL_1
0x4000e47	      0xe800000000	                          call 0x4000e4c	       547	utf8.c	FUNCTION_19	CALL_1
0x4000e4c	          0x4989c4	                            mov r12, rax	       547	utf8.c	FUNCTION_19	CALL_1
0x4000e4f	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       548	utf8.c	FUNCTION_19	IF_2
0x4000e53	            0x7527	                           jne 0x4000e7c	       548	utf8.c	FUNCTION_19	IF_2
0x4000e55	          0x4c89ff	                            mov rdi, r15	       549	utf8.c	FUNCTION_19	IF_2	CALL_2
0x4000e58	      0xe848fdffff	              call sym.fallback_encoding	       549	utf8.c	FUNCTION_19	IF_2	CALL_2
0x4000e5d	          0x4989c4	                            mov r12, rax	       549	utf8.c	FUNCTION_19	IF_2	CALL_2
0x4000e60	          0x4889ef	                            mov rdi, rbp	       550	utf8.c	FUNCTION_19	IF_2	CALL_3
0x4000e63	      0xe83dfdffff	              call sym.fallback_encoding	       550	utf8.c	FUNCTION_19	IF_2	CALL_3
0x4000e68	          0x4c89e6	                            mov rsi, r12	       552	utf8.c	FUNCTION_19	IF_2	CALL_4
0x4000e6b	          0x4889c7	                            mov rdi, rax	       552	utf8.c	FUNCTION_19	IF_2	CALL_4
0x4000e6e	      0xe800000000	                          call 0x4000e73	       552	utf8.c	FUNCTION_19	IF_2	CALL_4
0x4000e73	          0x4989c4	                            mov r12, rax	       552	utf8.c	FUNCTION_19	IF_2	CALL_4
0x4000e76	        0x4883f8ff	             cmp rax, 0xffffffffffffffff	       553	utf8.c	FUNCTION_19	IF_2	IF_3
0x4000e7a	            0x7427	                            je 0x4000ea3	       553	utf8.c	FUNCTION_19	IF_2	IF_3
0x4000e7c	          0x4863f3	                         movsxd rsi, ebx	       557	utf8.c	FUNCTION_19	CALL_5
0x4000e7f	          0x4c89e9	                            mov rcx, r13	       557	utf8.c	FUNCTION_19	CALL_5
0x4000e82	          0x4c89e2	                            mov rdx, r12	       557	utf8.c	FUNCTION_19	CALL_5
0x4000e85	          0x4c89f7	                            mov rdi, r14	       557	utf8.c	FUNCTION_19	CALL_5
0x4000e88	      0xe800000000	                          call 0x4000e8d	       557	utf8.c	FUNCTION_19	CALL_5
0x4000e8d	          0x4889c3	                            mov rbx, rax	       557	utf8.c	FUNCTION_19	CALL_5
0x4000e90	          0x4c89e7	                            mov rdi, r12	       558	utf8.c	FUNCTION_19	CALL_6
0x4000e93	      0xe800000000	                          call 0x4000e98	       558	utf8.c	FUNCTION_19	CALL_6
0x4000e98	          0x4889d8	                            mov rax, rbx	       559	utf8.c	FUNCTION_19
0x4000e9b	            0xeb0b	                           jmp 0x4000ea8	       559	utf8.c	FUNCTION_19
0x4000e9d	      0xb800000000	                              mov eax, 0	       545	utf8.c	FUNCTION_19	IF_1
0x4000ea2	              0xc3	                                     ret	       560	utf8.c	FUNCTION_19
0x4000ea3	      0xb800000000	                              mov eax, 0	       554	utf8.c	FUNCTION_19	IF_2	IF_3
0x4000ea8	        0x4883c408	                              add rsp, 8	       560	utf8.c	FUNCTION_19
0x4000eac	              0x5b	                                 pop rbx	       560	utf8.c	FUNCTION_19
0x4000ead	              0x5d	                                 pop rbp	       560	utf8.c	FUNCTION_19
0x4000eae	            0x415c	                                 pop r12	       560	utf8.c	FUNCTION_19
0x4000eb0	            0x415d	                                 pop r13	       560	utf8.c	FUNCTION_19
0x4000eb2	            0x415e	                                 pop r14	       560	utf8.c	FUNCTION_19
0x4000eb4	            0x415f	                                 pop r15	       560	utf8.c	FUNCTION_19
0x4000eb6	              0xc3	                                     ret	       560	utf8.c	FUNCTION_19
same_encoding	DO,0:FOR,0:ELSE,0:functions,0:WHILE,0:CALL,2:SWITCH,0:IF,3	27
0x4000bd4	              0x55	                                push rbp	       430	utf8.c	FUNCTION_15
0x4000bd5	              0x53	                                push rbx	       430	utf8.c	FUNCTION_15
0x4000bd6	        0x4883ec08	                              sub rsp, 8	       430	utf8.c	FUNCTION_15
0x4000bda	          0x4889fb	                            mov rbx, rdi	       430	utf8.c	FUNCTION_15
0x4000bdd	          0x4889f5	                            mov rbp, rsi	       430	utf8.c	FUNCTION_15
0x4000be0	          0x4885ff	                           test rdi, rdi	       434	utf8.c	FUNCTION_15	IF_1
0x4000be3	      0xb800000000	                              mov eax, 0	       434	utf8.c	FUNCTION_15	IF_1
0x4000be8	        0x480f44d8	                          cmove rbx, rax	       434	utf8.c	FUNCTION_15	IF_1
0x4000bec	          0x4885f6	                           test rsi, rsi	       436	utf8.c	FUNCTION_15	IF_2
0x4000bef	        0x480f44e8	                          cmove rbp, rax	       436	utf8.c	FUNCTION_15	IF_2
0x4000bf3	          0x4889ee	                            mov rsi, rbp	       437	utf8.c	FUNCTION_15	IF_3	CALL_1
0x4000bf6	          0x4889df	                            mov rdi, rbx	       437	utf8.c	FUNCTION_15	IF_3	CALL_1
0x4000bf9	      0xe8ccf6ffff	              call sym.same_utf_encoding	       437	utf8.c	FUNCTION_15	IF_3	CALL_1
0x4000bfe	      0xba01000000	                              mov edx, 1	       438	utf8.c	FUNCTION_15	IF_3
0x4000c03	            0x85c0	                           test eax, eax	       437	utf8.c	FUNCTION_15	IF_3	CALL_1
0x4000c05	            0x7513	                           jne 0x4000c1a	       437	utf8.c	FUNCTION_15	IF_3	CALL_1
0x4000c07	          0x4889ee	                            mov rsi, rbp	       439	utf8.c	FUNCTION_15	CALL_2
0x4000c0a	          0x4889df	                            mov rdi, rbx	       439	utf8.c	FUNCTION_15	CALL_2
0x4000c0d	      0xe800000000	                          call 0x4000c12	       439	utf8.c	FUNCTION_15	CALL_2
0x4000c12	            0x85c0	                           test eax, eax	       439	utf8.c	FUNCTION_15	CALL_2
0x4000c14	           0xf94c2	                                 sete dl	       439	utf8.c	FUNCTION_15	CALL_2
0x4000c17	           0xfb6d2	                           movzx edx, dl	       439	utf8.c	FUNCTION_15	CALL_2
0x4000c1a	            0x89d0	                            mov eax, edx	       440	utf8.c	FUNCTION_15
0x4000c1c	        0x4883c408	                              add rsp, 8	       440	utf8.c	FUNCTION_15
0x4000c20	              0x5b	                                 pop rbx	       440	utf8.c	FUNCTION_15
0x4000c21	              0x5d	                                 pop rbp	       440	utf8.c	FUNCTION_15
0x4000c22	              0xc3	                                     ret	       440	utf8.c	FUNCTION_15
