prune_object	DO,0:functions,0:FOR,0:IF,5:ELSE,0:CALL,6:SWITCH,0:WHILE,0	83
0x4000150	              0x55	                                push rbp	        35	prune.c	FUNCTION_2
0x4000151	          0x4889e5	                            mov rbp, rsp	        35	prune.c	FUNCTION_2
0x4000154	              0x53	                                push rbx	        35	prune.c	FUNCTION_2
0x4000155	    0x4881ecd80000	                           sub rsp, 0xd8	        35	prune.c	FUNCTION_2
0x400015c	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	        35	prune.c	FUNCTION_2
0x4000163	    0x4889b530ffff	             mov qword [rbp - 0xd0], rsi	        35	prune.c	FUNCTION_2
0x400016a	    0x48899528ffff	             mov qword [rbp - 0xd8], rdx	        35	prune.c	FUNCTION_2
0x4000171	    0x64488b042528	                mov rax, qword fs:[0x28]	        35	prune.c	FUNCTION_2
0x400017a	        0x488945e8	             mov qword [rbp - 0x18], rax	        35	prune.c	FUNCTION_2
0x400017e	            0x31c0	                            xor eax, eax	        35	prune.c	FUNCTION_2
0x4000180	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        42	prune.c	FUNCTION_2	IF_1	CALL_1
0x4000187	          0x4889c7	                            mov rdi, rax	        42	prune.c	FUNCTION_2	IF_1	CALL_1
0x400018a	      0xe800000000	                          call 0x400018f	        42	prune.c	FUNCTION_2	IF_1	CALL_1
0x400018f	          0x4885c0	                           test rax, rax	        42	prune.c	FUNCTION_2	IF_1	CALL_1
0x4000192	            0x740a	                            je 0x400019e	        42	prune.c	FUNCTION_2	IF_1	CALL_1
0x4000194	      0xb800000000	                              mov eax, 0	        43	prune.c	FUNCTION_2	IF_1
0x4000199	      0xe9fc000000	                           jmp 0x400029a	        43	prune.c	FUNCTION_2	IF_1
0x400019e	    0x488d9550ffff	                   lea rdx, [rbp - 0xb0]	        45	prune.c	FUNCTION_2	IF_2
0x40001a5	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	        45	prune.c	FUNCTION_2	IF_2
0x40001ac	          0x4889d6	                            mov rsi, rdx	        45	prune.c	FUNCTION_2	IF_2
0x40001af	          0x4889c7	                            mov rdi, rax	        45	prune.c	FUNCTION_2	IF_2
0x40001b2	      0xe800000000	                          call 0x40001b7	        45	prune.c	FUNCTION_2	IF_2
0x40001b7	            0x85c0	                           test eax, eax	        45	prune.c	FUNCTION_2	IF_2
0x40001b9	            0x7428	                            je 0x40001e3	        45	prune.c	FUNCTION_2	IF_2
0x40001bb	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	        47	prune.c	FUNCTION_2	IF_2
0x40001c2	          0x4889c6	                            mov rsi, rax	        47	prune.c	FUNCTION_2	IF_2
0x40001c5	      0xbf00000000	                              mov edi, 0	        47	prune.c	FUNCTION_2	IF_2
0x40001ca	      0xb800000000	                              mov eax, 0	        47	prune.c	FUNCTION_2	IF_2
0x40001cf	      0xe800000000	                          call 0x40001d4	        47	prune.c	FUNCTION_2	IF_2
0x40001d4	      0xe867feffff	                    call sym.const_error	        47	prune.c	FUNCTION_2	IF_2
0x40001d9	      0xb800000000	                              mov eax, 0	        48	prune.c	FUNCTION_2	IF_2
0x40001de	      0xe9b7000000	                           jmp 0x400029a	        48	prune.c	FUNCTION_2	IF_2
0x40001e3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	        50	prune.c	FUNCTION_2	IF_3
0x40001e7	          0x4889c2	                            mov rdx, rax	        50	prune.c	FUNCTION_2	IF_3
0x40001ea	    0x488b05000000	            mov rax, qword [0x040001f1] 	        50	prune.c	FUNCTION_2	IF_3
0x40001f1	          0x4839c2	                            cmp rdx, rax	        50	prune.c	FUNCTION_2	IF_3
0x40001f4	            0x760a	                           jbe 0x4000200	        50	prune.c	FUNCTION_2	IF_3
0x40001f6	      0xb800000000	                              mov eax, 0	        51	prune.c	FUNCTION_2	IF_3
0x40001fb	      0xe99a000000	                           jmp 0x400029a	        51	prune.c	FUNCTION_2	IF_3
0x4000200	    0x8b0500000000	            mov eax, dword [0x04000206] 	        52	prune.c	FUNCTION_2	IF_4
0x4000206	            0x85c0	                           test eax, eax	        52	prune.c	FUNCTION_2	IF_4
0x4000208	            0x750a	                           jne 0x4000214	        52	prune.c	FUNCTION_2	IF_4
0x400020a	    0x8b0500000000	            mov eax, dword [0x04000210] 	        52	prune.c	FUNCTION_2	IF_4
0x4000210	            0x85c0	                           test eax, eax	        52	prune.c	FUNCTION_2	IF_4
0x4000212	            0x7468	                            je 0x400027c	        52	prune.c	FUNCTION_2	IF_4
0x4000214	    0x488b05000000	            mov rax, qword [0x0400021b] 	        53	prune.c	FUNCTION_2	IF_4	CALL_2
0x400021b	    0x488b8d38ffff	             mov rcx, qword [rbp - 0xc8]	        53	prune.c	FUNCTION_2	IF_4	CALL_2
0x4000222	      0xba00000000	                              mov edx, 0	        53	prune.c	FUNCTION_2	IF_4	CALL_2
0x4000227	          0x4889ce	                            mov rsi, rcx	        53	prune.c	FUNCTION_2	IF_4	CALL_2
0x400022a	          0x4889c7	                            mov rdi, rax	        53	prune.c	FUNCTION_2	IF_4	CALL_2
0x400022d	      0xe800000000	                          call 0x4000232	        53	prune.c	FUNCTION_2	IF_4	CALL_2
0x4000232	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	        53	prune.c	FUNCTION_2	IF_4	CALL_2
0x4000238	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 0	        55	prune.c	FUNCTION_2	IF_4	CALL_4
0x400023f	            0x7e12	                           jle 0x4000253	        55	prune.c	FUNCTION_2	IF_4	CALL_4
0x4000241	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	        56	prune.c	FUNCTION_2	IF_4	CALL_5
0x4000247	            0x89c7	                            mov edi, eax	        55	prune.c	FUNCTION_2	IF_4	CALL_4
0x4000249	      0xe800000000	                          call 0x400024e	        55	prune.c	FUNCTION_2	IF_4	CALL_4
0x400024e	          0x4889c3	                            mov rbx, rax	        55	prune.c	FUNCTION_2	IF_4	CALL_4
0x4000251	            0xeb05	                           jmp 0x4000258	        55	prune.c	FUNCTION_2	IF_4	CALL_4
0x4000253	      0xbb00000000	                              mov ebx, 0	        55	prune.c	FUNCTION_2	IF_4	CALL_4
0x4000258	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        55	prune.c	FUNCTION_2	IF_4	CALL_4
0x400025f	          0x4889c7	                            mov rdi, rax	        55	prune.c	FUNCTION_2	IF_4	CALL_4
0x4000262	      0xe800000000	                          call 0x4000267	        55	prune.c	FUNCTION_2	IF_4	CALL_4
0x4000267	          0x4889da	                            mov rdx, rbx	        55	prune.c	FUNCTION_2	IF_4	CALL_4
0x400026a	          0x4889c6	                            mov rsi, rax	        55	prune.c	FUNCTION_2	IF_4	CALL_4
0x400026d	      0xbf00000000	                              mov edi, 0	        55	prune.c	FUNCTION_2	IF_4	CALL_4
0x4000272	      0xb800000000	                              mov eax, 0	        55	prune.c	FUNCTION_2	IF_4	CALL_4
0x4000277	      0xe800000000	                          call 0x400027c	        55	prune.c	FUNCTION_2	IF_4	CALL_4
0x400027c	    0x8b0500000000	            mov eax, dword [0x04000282] 	        58	prune.c	FUNCTION_2	IF_5
0x4000282	            0x85c0	                           test eax, eax	        58	prune.c	FUNCTION_2	IF_5
0x4000284	            0x750f	                           jne 0x4000295	        58	prune.c	FUNCTION_2	IF_5
0x4000286	    0x488b8530ffff	             mov rax, qword [rbp - 0xd0]	        59	prune.c	FUNCTION_2	CALL_6
0x400028d	          0x4889c7	                            mov rdi, rax	        59	prune.c	FUNCTION_2	CALL_6
0x4000290	      0xe800000000	                          call 0x4000295	        59	prune.c	FUNCTION_2	CALL_6
0x4000295	      0xb800000000	                              mov eax, 0	        60	prune.c	FUNCTION_2
0x400029a	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	        61	prune.c	FUNCTION_2
0x400029e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        61	prune.c	FUNCTION_2
0x40002a7	            0x7405	                            je 0x40002ae	        61	prune.c	FUNCTION_2
0x40002a9	      0xe800000000	                          call 0x40002ae	        61	prune.c	FUNCTION_2
0x40002ae	    0x4881c4d80000	                           add rsp, 0xd8	        61	prune.c	FUNCTION_2
0x40002b5	              0x5b	                                 pop rbx	        61	prune.c	FUNCTION_2
0x40002b6	              0x5d	                                 pop rbp	        61	prune.c	FUNCTION_2
0x40002b7	              0xc3	                                     ret	        61	prune.c	FUNCTION_2
const_error	DO,0:functions,0:FOR,0:IF,0:ELSE,0:CALL,0:SWITCH,0:WHILE,0	5
0x4000040	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_12
0x4000041	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_12
0x4000044	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_12
0x4000049	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_12
0x400004a	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_12
_	DO,0:functions,0:FOR,0:IF,1:ELSE,0:CALL,0:SWITCH,0:WHILE,0	15
0x400004b	              0x55	                                push rbp	        51	gettext.h	FUNCTION_36
0x400004c	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_36
0x400004f	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_36
0x4000053	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_36
0x4000057	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_36	IF_1
0x400005b	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_36	IF_1
0x400005e	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_36	IF_1
0x4000060	            0x7507	                           jne 0x4000069	        52	gettext.h	FUNCTION_36	IF_1
0x4000062	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_36	IF_1
0x4000067	            0xeb0c	                           jmp 0x4000075	        53	gettext.h	FUNCTION_36	IF_1
0x4000069	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_36
0x400006d	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_36
0x4000070	      0xe800000000	                          call 0x4000075	        54	gettext.h	FUNCTION_36
0x4000075	              0xc9	                                   leave	        55	gettext.h	FUNCTION_36
0x4000076	              0xc3	                                     ret	        55	gettext.h	FUNCTION_36
cmd_prune	DO,0:functions,0:FOR,0:IF,6:ELSE,1:CALL,30:SWITCH,0:WHILE,1	181
0x40003e9	              0x55	                                push rbp	       102	prune.c	FUNCTION_6
0x40003ea	          0x4889e5	                            mov rbp, rsp	       102	prune.c	FUNCTION_6
0x40003ed	    0x4881ecb00a00	                          sub rsp, 0xab0	       102	prune.c	FUNCTION_6
0x40003f4	    0x89bd6cf5ffff	            mov dword [rbp - 0xa94], edi	       102	prune.c	FUNCTION_6
0x40003fa	    0x4889b560f5ff	            mov qword [rbp - 0xaa0], rsi	       102	prune.c	FUNCTION_6
0x4000401	    0x48899558f5ff	            mov qword [rbp - 0xaa8], rdx	       102	prune.c	FUNCTION_6
0x4000408	    0x64488b042528	                mov rax, qword fs:[0x28]	       102	prune.c	FUNCTION_6
0x4000411	        0x488945f8	                mov qword [rbp - 8], rax	       102	prune.c	FUNCTION_6
0x4000415	            0x31c0	                            xor eax, eax	       102	prune.c	FUNCTION_6
0x4000417	    0x48c78580f5ff	              mov qword [rbp - 0xa80], 0	       104	prune.c	FUNCTION_6
0x4000422	    0xc7857cf5ffff	              mov dword [rbp - 0xa84], 0	       105	prune.c	FUNCTION_6
0x400042c	    0x488d95c0f5ff	                  lea rdx, [rbp - 0xa40]	       106	prune.c	FUNCTION_6
0x4000433	      0xb800000000	                              mov eax, 0	       106	prune.c	FUNCTION_6
0x4000438	      0xb930000000	                           mov ecx, 0x30	       106	prune.c	FUNCTION_6
0x400043d	          0x4889d7	                            mov rdi, rdx	       106	prune.c	FUNCTION_6
0x4000440	          0xf348ab	              rep stosq qword [rdi], rax	       106	prune.c	FUNCTION_6
0x4000443	    0xc785c0f5ffff	              mov dword [rbp - 0xa40], 7	       106	prune.c	FUNCTION_6
0x400044d	    0xc785c4f5ffff	          mov dword [rbp - 0xa3c], 0x6e 	       106	prune.c	FUNCTION_6
0x4000457	    0x48c785c8f5ff	              mov qword [rbp - 0xa38], 0	       106	prune.c	FUNCTION_6
0x4000462	    0x48c785d0f5ff	              mov qword [rbp - 0xa30], 0	       106	prune.c	FUNCTION_6
0x400046d	    0x48c785e0f5ff	              mov qword [rbp - 0xa20], 0	       106	prune.c	FUNCTION_6
0x4000478	    0xc785e8f5ffff	              mov dword [rbp - 0xa18], 2	       106	prune.c	FUNCTION_6
0x4000482	    0x48c785f8f5ff	              mov qword [rbp - 0xa08], 1	       106	prune.c	FUNCTION_6
0x400048d	    0xc78500f6ffff	              mov dword [rbp - 0xa00], 6	       106	prune.c	FUNCTION_6
0x4000497	    0xc78504f6ffff	          mov dword [rbp - 0x9fc], 0x76 	       106	prune.c	FUNCTION_6
0x40004a1	    0x48c78508f6ff	              mov qword [rbp - 0x9f8], 0	       106	prune.c	FUNCTION_6
0x40004ac	    0x48c78510f6ff	              mov qword [rbp - 0x9f0], 0	       106	prune.c	FUNCTION_6
0x40004b7	    0x48c78520f6ff	              mov qword [rbp - 0x9e0], 0	       106	prune.c	FUNCTION_6
0x40004c2	    0xc78528f6ffff	              mov dword [rbp - 0x9d8], 2	       106	prune.c	FUNCTION_6
0x40004cc	    0xc78540f6ffff	              mov dword [rbp - 0x9c0], 7	       106	prune.c	FUNCTION_6
0x40004d6	    0x48c78548f6ff	              mov qword [rbp - 0x9b8], 0	       106	prune.c	FUNCTION_6
0x40004e1	    0x48c78550f6ff	              mov qword [rbp - 0x9b0], 0	       106	prune.c	FUNCTION_6
0x40004ec	    0x48c78560f6ff	              mov qword [rbp - 0x9a0], 0	       106	prune.c	FUNCTION_6
0x40004f7	    0xc78568f6ffff	              mov dword [rbp - 0x998], 2	       106	prune.c	FUNCTION_6
0x4000501	    0x48c78578f6ff	              mov qword [rbp - 0x988], 1	       106	prune.c	FUNCTION_6
0x400050c	    0xc78580f6ffff	           mov dword [rbp - 0x980], 0xc 	       106	prune.c	FUNCTION_6
0x4000516	    0x48c78588f6ff	              mov qword [rbp - 0x978], 0	       106	prune.c	FUNCTION_6
0x4000521	    0x48c78590f6ff	              mov qword [rbp - 0x970], 0	       106	prune.c	FUNCTION_6
0x400052c	    0x48c78598f6ff	              mov qword [rbp - 0x968], 0	       106	prune.c	FUNCTION_6
0x4000537	    0x48c785a0f6ff	              mov qword [rbp - 0x960], 0	       106	prune.c	FUNCTION_6
0x4000542	    0x48c785b0f6ff	              mov qword [rbp - 0x950], 0	       106	prune.c	FUNCTION_6
0x400054d	    0xc785c0f6ffff	              mov dword [rbp - 0x940], 7	       106	prune.c	FUNCTION_6
0x4000557	    0x48c785c8f6ff	              mov qword [rbp - 0x938], 0	       106	prune.c	FUNCTION_6
0x4000562	    0x488d857cf5ff	                  lea rax, [rbp - 0xa84]	       106	prune.c	FUNCTION_6
0x4000569	    0x488985d0f6ff	            mov qword [rbp - 0x930], rax	       106	prune.c	FUNCTION_6
0x4000570	    0x48c785e0f6ff	              mov qword [rbp - 0x920], 0	       106	prune.c	FUNCTION_6
0x400057b	    0xc785e8f6ffff	              mov dword [rbp - 0x918], 2	       106	prune.c	FUNCTION_6
0x4000585	    0x48c785f8f6ff	              mov qword [rbp - 0x908], 1	       106	prune.c	FUNCTION_6
0x4000590	    0x48c705000000	mov qword [0x0400059b], 0xffffffffffffffff 	       118	prune.c	FUNCTION_6
0x400059b	    0xc70500000000	               mov dword [0x040005a5], 0	       119	prune.c	FUNCTION_6
0x40005a5	    0xc70500000000	               mov dword [0x040005af], 0	       120	prune.c	FUNCTION_6
0x40005af	    0xc70500000000	               mov dword [0x040005b9], 1	       121	prune.c	FUNCTION_6
0x40005b9	    0x488b9558f5ff	            mov rdx, qword [rbp - 0xaa8]	       122	prune.c	FUNCTION_6	CALL_7
0x40005c0	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       122	prune.c	FUNCTION_6	CALL_7
0x40005c7	          0x4889d6	                            mov rsi, rdx	       122	prune.c	FUNCTION_6	CALL_7
0x40005ca	          0x4889c7	                            mov rdi, rax	       122	prune.c	FUNCTION_6	CALL_7
0x40005cd	      0xe800000000	                          call 0x40005d2	       122	prune.c	FUNCTION_6	CALL_7
0x40005d2	    0x488d8dc0f5ff	                  lea rcx, [rbp - 0xa40]	       124	prune.c	FUNCTION_6	CALL_8
0x40005d9	    0x488b9558f5ff	            mov rdx, qword [rbp - 0xaa8]	       124	prune.c	FUNCTION_6	CALL_8
0x40005e0	    0x488bb560f5ff	            mov rsi, qword [rbp - 0xaa0]	       124	prune.c	FUNCTION_6	CALL_8
0x40005e7	    0x8b856cf5ffff	            mov eax, dword [rbp - 0xa94]	       124	prune.c	FUNCTION_6	CALL_8
0x40005ed	    0x41b900000000	                              mov r9d, 0	       124	prune.c	FUNCTION_6	CALL_8
0x40005f3	    0x41b800000000	                              mov r8d, 0	       124	prune.c	FUNCTION_6	CALL_8
0x40005f9	            0x89c7	                            mov edi, eax	       124	prune.c	FUNCTION_6	CALL_8
0x40005fb	      0xe800000000	                          call 0x4000600	       124	prune.c	FUNCTION_6	CALL_8
0x4000600	    0x89856cf5ffff	            mov dword [rbp - 0xa94], eax	       124	prune.c	FUNCTION_6	CALL_8
0x4000606	    0x8b0500000000	            mov eax, dword [0x0400060c] 	       126	prune.c	FUNCTION_6	IF_1
0x400060c	            0x85c0	                           test eax, eax	       126	prune.c	FUNCTION_6	IF_1
0x400060e	     0xf84a9000000	                            je 0x40006bd	       126	prune.c	FUNCTION_6	IF_1
0x4000614	      0xbf00000000	                              mov edi, 0	       127	prune.c	FUNCTION_6	CALL_10
0x4000619	      0xe82dfaffff	                               call sym.	       127	prune.c	FUNCTION_6	CALL_10
0x400061e	          0x4889c7	                            mov rdi, rax	       127	prune.c	FUNCTION_6	CALL_10
0x4000621	      0xb800000000	                              mov eax, 0	       127	prune.c	FUNCTION_6	CALL_10
0x4000626	      0xe800000000	                          call 0x400062b	       127	prune.c	FUNCTION_6	CALL_10
0x400062b	    0x488b8560f5ff	            mov rax, qword [rbp - 0xaa0]	       131	prune.c	FUNCTION_6	WHILE_1
0x4000632	        0x488d5008	                      lea rdx, [rax + 8]	       131	prune.c	FUNCTION_6	WHILE_1
0x4000636	    0x48899560f5ff	            mov qword [rbp - 0xaa0], rdx	       131	prune.c	FUNCTION_6	WHILE_1
0x400063d	          0x488b00	                    mov rax, qword [rax]	       131	prune.c	FUNCTION_6	WHILE_1
0x4000640	    0x48898588f5ff	            mov qword [rbp - 0xa78], rax	       131	prune.c	FUNCTION_6	WHILE_1
0x4000647	    0x488d95a0f5ff	                  lea rdx, [rbp - 0xa60]	       133	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_11
0x400064e	    0x488b8588f5ff	            mov rax, qword [rbp - 0xa78]	       133	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_11
0x4000655	          0x4889d6	                            mov rsi, rdx	       133	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_11
0x4000658	          0x4889c7	                            mov rdi, rax	       133	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_11
0x400065b	      0xe800000000	                          call 0x4000660	       133	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_11
0x4000660	            0x85c0	                           test eax, eax	       133	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_11
0x4000662	            0x7540	                           jne 0x40006a4	       133	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_11
0x4000664	    0x488b9588f5ff	            mov rdx, qword [rbp - 0xa78]	       134	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_12
0x400066b	    0x488d85a0f5ff	                  lea rax, [rbp - 0xa60]	       134	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_12
0x4000672	          0x4889d6	                            mov rsi, rdx	       134	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_12
0x4000675	          0x4889c7	                            mov rdi, rax	       134	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_12
0x4000678	      0xe800000000	                          call 0x400067d	       134	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_12
0x400067d	    0x48898590f5ff	            mov qword [rbp - 0xa70], rax	       134	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_12
0x4000684	    0x488b8d90f5ff	            mov rcx, qword [rbp - 0xa70]	       136	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_13
0x400068b	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       136	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_13
0x4000692	      0xba00000000	                              mov edx, 0	       136	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_13
0x4000697	          0x4889ce	                            mov rsi, rcx	       136	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_13
0x400069a	          0x4889c7	                            mov rdi, rax	       136	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_13
0x400069d	      0xe800000000	                          call 0x40006a2	       136	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_13
0x40006a2	            0xeb19	                           jmp 0x40006bd	       136	prune.c	FUNCTION_6	WHILE_1	IF_2	CALL_13
0x40006a4	    0x488b8588f5ff	            mov rax, qword [rbp - 0xa78]	       139	prune.c	FUNCTION_6	WHILE_1	CALL_14
0x40006ab	          0x4889c6	                            mov rsi, rax	       139	prune.c	FUNCTION_6	WHILE_1	CALL_14
0x40006ae	      0xbf00000000	                              mov edi, 0	       139	prune.c	FUNCTION_6	WHILE_1	CALL_14
0x40006b3	      0xb800000000	                              mov eax, 0	       139	prune.c	FUNCTION_6	WHILE_1	CALL_14
0x40006b8	      0xe800000000	                          call 0x40006bd	       139	prune.c	FUNCTION_6	WHILE_1	CALL_14
0x40006bd	    0x8b856cf5ffff	            mov eax, dword [rbp - 0xa94]	       129	prune.c	FUNCTION_6	WHILE_1
0x40006c3	          0x8d50ff	                      lea edx, [rax - 1]	       129	prune.c	FUNCTION_6	WHILE_1
0x40006c6	    0x89956cf5ffff	            mov dword [rbp - 0xa94], edx	       129	prune.c	FUNCTION_6	WHILE_1
0x40006cc	            0x85c0	                           test eax, eax	       129	prune.c	FUNCTION_6	WHILE_1
0x40006ce	     0xf8557ffffff	                           jne 0x400062b	       129	prune.c	FUNCTION_6	WHILE_1
0x40006d4	    0x8b0500000000	            mov eax, dword [0x040006da] 	       142	prune.c	FUNCTION_6	IF_3
0x40006da	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       142	prune.c	FUNCTION_6	IF_3
0x40006dd	            0x7510	                           jne 0x40006ef	       142	prune.c	FUNCTION_6	IF_3
0x40006df	      0xbf02000000	                              mov edi, 2	       143	prune.c	FUNCTION_6	CALL_15
0x40006e4	      0xe800000000	                          call 0x40006e9	       143	prune.c	FUNCTION_6	CALL_15
0x40006e9	    0x890500000000	            mov dword [0x040006ef], eax 	       143	prune.c	FUNCTION_6	CALL_15
0x40006ef	    0x8b0500000000	            mov eax, dword [0x040006f5] 	       144	prune.c	FUNCTION_6	IF_4
0x40006f5	            0x85c0	                           test eax, eax	       144	prune.c	FUNCTION_6	IF_4
0x40006f7	            0x741e	                            je 0x4000717	       144	prune.c	FUNCTION_6	IF_4
0x40006f9	      0xbf00000000	                              mov edi, 0	       145	prune.c	FUNCTION_6	CALL_17
0x40006fe	      0xe848f9ffff	                               call sym.	       145	prune.c	FUNCTION_6	CALL_17
0x4000703	      0xbe00000000	                              mov esi, 0	       145	prune.c	FUNCTION_6	CALL_17
0x4000708	          0x4889c7	                            mov rdi, rax	       145	prune.c	FUNCTION_6	CALL_17
0x400070b	      0xe800000000	                          call 0x4000710	       145	prune.c	FUNCTION_6	CALL_17
0x4000710	    0x48898580f5ff	            mov qword [rbp - 0xa80], rax	       145	prune.c	FUNCTION_6	CALL_17
0x4000717	    0x8b857cf5ffff	            mov eax, dword [rbp - 0xa84]	       146	prune.c	FUNCTION_6	IF_5
0x400071d	            0x85c0	                           test eax, eax	       146	prune.c	FUNCTION_6	IF_5
0x400071f	            0x741a	                            je 0x400073b	       146	prune.c	FUNCTION_6	IF_5
0x4000721	    0xc70500000000	               mov dword [0x0400072b], 0	       147	prune.c	FUNCTION_6	IF_5
0x400072b	     0xfb685b8f7ff	           movzx eax, byte [rbp - 0x848]	       148	prune.c	FUNCTION_6	IF_5
0x4000732	          0x83c880	                      or eax, 0xffffff80	       148	prune.c	FUNCTION_6	IF_5
0x4000735	    0x8885b8f7ffff	              mov byte [rbp - 0x848], al	       148	prune.c	FUNCTION_6	IF_5
0x400073b	    0x488b8d80f5ff	            mov rcx, qword [rbp - 0xa80]	       151	prune.c	FUNCTION_6	CALL_18
0x4000742	    0x488b15000000	            mov rdx, qword [0x04000749] 	       151	prune.c	FUNCTION_6	CALL_18
0x4000749	    0x488d8540f7ff	                  lea rax, [rbp - 0x8c0]	       151	prune.c	FUNCTION_6	CALL_18
0x4000750	      0xbe01000000	                              mov esi, 1	       151	prune.c	FUNCTION_6	CALL_18
0x4000755	          0x4889c7	                            mov rdi, rax	       151	prune.c	FUNCTION_6	CALL_18
0x4000758	      0xe800000000	                          call 0x400075d	       151	prune.c	FUNCTION_6	CALL_18
0x400075d	    0x488d8580f5ff	                  lea rax, [rbp - 0xa80]	       152	prune.c	FUNCTION_6	CALL_19
0x4000764	          0x4889c7	                            mov rdi, rax	       152	prune.c	FUNCTION_6	CALL_19
0x4000767	      0xe800000000	                          call 0x400076c	       152	prune.c	FUNCTION_6	CALL_19
0x400076c	      0xe800000000	                          call 0x4000771	       153	prune.c	FUNCTION_6	CALL_21
0x4000771	    0x41b800000000	                              mov r8d, 0	       153	prune.c	FUNCTION_6	CALL_21
0x4000777	      0xb900000000	                              mov ecx, 0	       153	prune.c	FUNCTION_6	CALL_21
0x400077c	      0xba00000000	                              mov edx, 0	       153	prune.c	FUNCTION_6	CALL_21
0x4000781	      0xbe00000000	                              mov esi, 0	       153	prune.c	FUNCTION_6	CALL_21
0x4000786	          0x4889c7	                            mov rdi, rax	       153	prune.c	FUNCTION_6	CALL_21
0x4000789	      0xe800000000	                          call 0x400078e	       153	prune.c	FUNCTION_6	CALL_21
0x400078e	    0x8b0500000000	            mov eax, dword [0x04000794] 	       156	prune.c	FUNCTION_6	CALL_22
0x4000794	            0x85c0	                           test eax, eax	       156	prune.c	FUNCTION_6	CALL_22
0x4000796	           0xf95c0	                                setne al	       156	prune.c	FUNCTION_6	CALL_22
0x4000799	           0xfb6c0	                           movzx eax, al	       156	prune.c	FUNCTION_6	CALL_22
0x400079c	            0x89c7	                            mov edi, eax	       156	prune.c	FUNCTION_6	CALL_22
0x400079e	      0xe800000000	                          call 0x40007a3	       156	prune.c	FUNCTION_6	CALL_22
0x40007a3	      0xe800000000	                          call 0x40007a8	       157	prune.c	FUNCTION_6	CALL_24
0x40007a8	          0x4889c7	                            mov rdi, rax	       157	prune.c	FUNCTION_6	CALL_24
0x40007ab	      0xe893fbffff	         call sym.remove_temporary_files	       157	prune.c	FUNCTION_6	CALL_24
0x40007b0	      0xe800000000	                          call 0x40007b5	       158	prune.c	FUNCTION_6	CALL_26
0x40007b5	          0x4889c6	                            mov rsi, rax	       158	prune.c	FUNCTION_6	CALL_26
0x40007b8	      0xbf00000000	                              mov edi, 0	       158	prune.c	FUNCTION_6	CALL_26
0x40007bd	      0xb800000000	                              mov eax, 0	       158	prune.c	FUNCTION_6	CALL_26
0x40007c2	      0xe800000000	                          call 0x40007c7	       158	prune.c	FUNCTION_6	CALL_26
0x40007c7	    0x48898598f5ff	            mov qword [rbp - 0xa68], rax	       158	prune.c	FUNCTION_6	CALL_26
0x40007ce	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	       159	prune.c	FUNCTION_6	CALL_27
0x40007d5	          0x4889c7	                            mov rdi, rax	       159	prune.c	FUNCTION_6	CALL_27
0x40007d8	      0xe866fbffff	         call sym.remove_temporary_files	       159	prune.c	FUNCTION_6	CALL_27
0x40007dd	    0x488b8598f5ff	            mov rax, qword [rbp - 0xa68]	       160	prune.c	FUNCTION_6	CALL_28
0x40007e4	          0x4889c7	                            mov rdi, rax	       160	prune.c	FUNCTION_6	CALL_28
0x40007e7	      0xe800000000	                          call 0x40007ec	       160	prune.c	FUNCTION_6	CALL_28
0x40007ec	      0xe800000000	                          call 0x40007f1	       162	prune.c	FUNCTION_6	IF_6	CALL_29
0x40007f1	            0x85c0	                           test eax, eax	       162	prune.c	FUNCTION_6	IF_6	CALL_29
0x40007f3	            0x740d	                            je 0x4000802	       162	prune.c	FUNCTION_6	IF_6	CALL_29
0x40007f5	    0x8b0500000000	            mov eax, dword [0x040007fb] 	       163	prune.c	FUNCTION_6	CALL_30
0x40007fb	            0x89c7	                            mov edi, eax	       163	prune.c	FUNCTION_6	CALL_30
0x40007fd	      0xe800000000	                          call 0x4000802	       163	prune.c	FUNCTION_6	CALL_30
0x4000802	      0xb800000000	                              mov eax, 0	       165	prune.c	FUNCTION_6
0x4000807	        0x488b4df8	                mov rcx, qword [rbp - 8]	       166	prune.c	FUNCTION_6
0x400080b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       166	prune.c	FUNCTION_6
0x4000814	            0x7405	                            je 0x400081b	       166	prune.c	FUNCTION_6
0x4000816	      0xe800000000	                          call 0x400081b	       166	prune.c	FUNCTION_6
0x400081b	              0xc9	                                   leave	       166	prune.c	FUNCTION_6
0x400081c	              0xc3	                                     ret	       166	prune.c	FUNCTION_6
prune_tmp_file	DO,0:functions,0:FOR,0:IF,4:ELSE,0:CALL,2:SWITCH,0:WHILE,0	52
0x4000077	              0x55	                                push rbp	        20	prune.c	FUNCTION_1
0x4000078	          0x4889e5	                            mov rbp, rsp	        20	prune.c	FUNCTION_1
0x400007b	    0x4881ecb00000	                           sub rsp, 0xb0	        20	prune.c	FUNCTION_1
0x4000082	    0x4889bd58ffff	             mov qword [rbp - 0xa8], rdi	        20	prune.c	FUNCTION_1
0x4000089	    0x64488b042528	                mov rax, qword fs:[0x28]	        20	prune.c	FUNCTION_1
0x4000092	        0x488945f8	                mov qword [rbp - 8], rax	        20	prune.c	FUNCTION_1
0x4000096	            0x31c0	                            xor eax, eax	        20	prune.c	FUNCTION_1
0x4000098	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	        22	prune.c	FUNCTION_1	IF_1
0x400009f	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	        22	prune.c	FUNCTION_1	IF_1
0x40000a6	          0x4889d6	                            mov rsi, rdx	        22	prune.c	FUNCTION_1	IF_1
0x40000a9	          0x4889c7	                            mov rdi, rax	        22	prune.c	FUNCTION_1	IF_1
0x40000ac	      0xe800000000	                          call 0x40000b1	        22	prune.c	FUNCTION_1	IF_1
0x40000b1	            0x85c0	                           test eax, eax	        22	prune.c	FUNCTION_1	IF_1
0x40000b3	            0x7420	                            je 0x40000d5	        22	prune.c	FUNCTION_1	IF_1
0x40000b5	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	        23	prune.c	FUNCTION_1	IF_1
0x40000bc	          0x4889c6	                            mov rsi, rax	        23	prune.c	FUNCTION_1	IF_1
0x40000bf	      0xbf00000000	                              mov edi, 0	        23	prune.c	FUNCTION_1	IF_1
0x40000c4	      0xb800000000	                              mov eax, 0	        23	prune.c	FUNCTION_1	IF_1
0x40000c9	      0xe800000000	                          call 0x40000ce	        23	prune.c	FUNCTION_1	IF_1
0x40000ce	      0xe86dffffff	                    call sym.const_error	        23	prune.c	FUNCTION_1	IF_1
0x40000d3	            0xeb65	                           jmp 0x400013a	        23	prune.c	FUNCTION_1	IF_1
0x40000d5	        0x488b45b8	             mov rax, qword [rbp - 0x48]	        24	prune.c	FUNCTION_1	IF_2
0x40000d9	          0x4889c2	                            mov rdx, rax	        24	prune.c	FUNCTION_1	IF_2
0x40000dc	    0x488b05000000	            mov rax, qword [0x040000e3] 	        24	prune.c	FUNCTION_1	IF_2
0x40000e3	          0x4839c2	                            cmp rdx, rax	        24	prune.c	FUNCTION_1	IF_2
0x40000e6	            0x7607	                           jbe 0x40000ef	        24	prune.c	FUNCTION_1	IF_2
0x40000e8	      0xb800000000	                              mov eax, 0	        25	prune.c	FUNCTION_1	IF_2
0x40000ed	            0xeb4b	                           jmp 0x400013a	        25	prune.c	FUNCTION_1	IF_2
0x40000ef	    0x8b0500000000	            mov eax, dword [0x040000f5] 	        26	prune.c	FUNCTION_1	IF_3
0x40000f5	            0x85c0	                           test eax, eax	        26	prune.c	FUNCTION_1	IF_3
0x40000f7	            0x750a	                           jne 0x4000103	        26	prune.c	FUNCTION_1	IF_3
0x40000f9	    0x8b0500000000	            mov eax, dword [0x040000ff] 	        26	prune.c	FUNCTION_1	IF_3
0x40000ff	            0x85c0	                           test eax, eax	        26	prune.c	FUNCTION_1	IF_3
0x4000101	            0x7419	                            je 0x400011c	        26	prune.c	FUNCTION_1	IF_3
0x4000103	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	        27	prune.c	FUNCTION_1	CALL_1
0x400010a	          0x4889c6	                            mov rsi, rax	        27	prune.c	FUNCTION_1	CALL_1
0x400010d	      0xbf00000000	                              mov edi, 0	        27	prune.c	FUNCTION_1	CALL_1
0x4000112	      0xb800000000	                              mov eax, 0	        27	prune.c	FUNCTION_1	CALL_1
0x4000117	      0xe800000000	                          call 0x400011c	        27	prune.c	FUNCTION_1	CALL_1
0x400011c	    0x8b0500000000	            mov eax, dword [0x04000122] 	        28	prune.c	FUNCTION_1	IF_4
0x4000122	            0x85c0	                           test eax, eax	        28	prune.c	FUNCTION_1	IF_4
0x4000124	            0x750f	                           jne 0x4000135	        28	prune.c	FUNCTION_1	IF_4
0x4000126	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	        29	prune.c	FUNCTION_1	CALL_2
0x400012d	          0x4889c7	                            mov rdi, rax	        29	prune.c	FUNCTION_1	CALL_2
0x4000130	      0xe800000000	                          call 0x4000135	        29	prune.c	FUNCTION_1	CALL_2
0x4000135	      0xb800000000	                              mov eax, 0	        30	prune.c	FUNCTION_1
0x400013a	        0x488b4df8	                mov rcx, qword [rbp - 8]	        31	prune.c	FUNCTION_1
0x400013e	    0x6448330c2528	                xor rcx, qword fs:[0x28]	        31	prune.c	FUNCTION_1
0x4000147	            0x7405	                            je 0x400014e	        31	prune.c	FUNCTION_1
0x4000149	      0xe800000000	                          call 0x400014e	        31	prune.c	FUNCTION_1
0x400014e	              0xc9	                                   leave	        31	prune.c	FUNCTION_1
0x400014f	              0xc3	                                     ret	        31	prune.c	FUNCTION_1
remove_temporary_files	DO,0:functions,0:FOR,0:IF,2:ELSE,0:CALL,7:SWITCH,0:WHILE,1	44
0x4000343	              0x55	                                push rbp	        86	prune.c	FUNCTION_5
0x4000344	          0x4889e5	                            mov rbp, rsp	        86	prune.c	FUNCTION_5
0x4000347	        0x4883ec20	                           sub rsp, 0x20	        86	prune.c	FUNCTION_5
0x400034b	        0x48897de8	             mov qword [rbp - 0x18], rdi	        86	prune.c	FUNCTION_5
0x400034f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        90	prune.c	FUNCTION_5	CALL_1
0x4000353	          0x4889c7	                            mov rdi, rax	        90	prune.c	FUNCTION_5	CALL_1
0x4000356	      0xe800000000	                          call 0x400035b	        90	prune.c	FUNCTION_5	CALL_1
0x400035b	        0x488945f0	             mov qword [rbp - 0x10], rax	        90	prune.c	FUNCTION_5	CALL_1
0x400035f	      0x48837df000	               cmp qword [rbp - 0x10], 0	        91	prune.c	FUNCTION_5	IF_1
0x4000364	            0x755e	                           jne 0x40003c4	        91	prune.c	FUNCTION_5	IF_1
0x4000366	    0x488b05000000	            mov rax, qword [0x0400036d] 	        92	prune.c	FUNCTION_5	IF_1	CALL_2
0x400036d	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	        92	prune.c	FUNCTION_5	IF_1	CALL_2
0x4000371	      0xbe00000000	                              mov esi, 0	        92	prune.c	FUNCTION_5	IF_1	CALL_2
0x4000376	          0x4889c7	                            mov rdi, rax	        92	prune.c	FUNCTION_5	IF_1	CALL_2
0x4000379	      0xb800000000	                              mov eax, 0	        92	prune.c	FUNCTION_5	IF_1	CALL_2
0x400037e	      0xe800000000	                          call 0x4000383	        92	prune.c	FUNCTION_5	IF_1	CALL_2
0x4000383	            0xeb62	                           jmp 0x40003e7	        93	prune.c	FUNCTION_5	IF_1
0x4000385	        0x488b45f8	                mov rax, qword [rbp - 8]	        96	prune.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x4000389	        0x4883c013	                           add rax, 0x13	        96	prune.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x400038d	      0xbe00000000	                              mov esi, 0	        96	prune.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x4000392	          0x4889c7	                            mov rdi, rax	        96	prune.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x4000395	      0xe800000000	                          call 0x400039a	        96	prune.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x400039a	            0x85c0	                           test eax, eax	        96	prune.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x400039c	            0x7426	                            je 0x40003c4	        96	prune.c	FUNCTION_5	WHILE_1	IF_2	CALL_4
0x400039e	        0x488b45f8	                mov rax, qword [rbp - 8]	        97	prune.c	FUNCTION_5	WHILE_1	IF_2
0x40003a2	        0x488d5013	                   lea rdx, [rax + 0x13]	        97	prune.c	FUNCTION_5	WHILE_1	IF_2
0x40003a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        97	prune.c	FUNCTION_5	WHILE_1	IF_2
0x40003aa	          0x4889c6	                            mov rsi, rax	        97	prune.c	FUNCTION_5	WHILE_1	IF_2
0x40003ad	      0xbf00000000	                              mov edi, 0	        97	prune.c	FUNCTION_5	WHILE_1	IF_2
0x40003b2	      0xb800000000	                              mov eax, 0	        97	prune.c	FUNCTION_5	WHILE_1	IF_2
0x40003b7	      0xe800000000	                          call 0x40003bc	        97	prune.c	FUNCTION_5	WHILE_1	IF_2
0x40003bc	          0x4889c7	                            mov rdi, rax	        97	prune.c	FUNCTION_5	WHILE_1	IF_2
0x40003bf	      0xe8b3fcffff	                 call sym.prune_tmp_file	        97	prune.c	FUNCTION_5	WHILE_1	IF_2
0x40003c4	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        95	prune.c	FUNCTION_5	WHILE_1	CALL_3
0x40003c8	          0x4889c7	                            mov rdi, rax	        95	prune.c	FUNCTION_5	WHILE_1	CALL_3
0x40003cb	      0xe800000000	                          call 0x40003d0	        95	prune.c	FUNCTION_5	WHILE_1	CALL_3
0x40003d0	        0x488945f8	                mov qword [rbp - 8], rax	        95	prune.c	FUNCTION_5	WHILE_1	CALL_3
0x40003d4	      0x48837df800	                  cmp qword [rbp - 8], 0	        95	prune.c	FUNCTION_5	WHILE_1	CALL_3
0x40003d9	            0x75aa	                           jne 0x4000385	        95	prune.c	FUNCTION_5	WHILE_1	CALL_3
0x40003db	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        98	prune.c	FUNCTION_5	CALL_7
0x40003df	          0x4889c7	                            mov rdi, rax	        98	prune.c	FUNCTION_5	CALL_7
0x40003e2	      0xe800000000	                          call 0x40003e7	        98	prune.c	FUNCTION_5	CALL_7
0x40003e7	              0xc9	                                   leave	        99	prune.c	FUNCTION_5
0x40003e8	              0xc3	                                     ret	        99	prune.c	FUNCTION_5
prune_subdir	DO,0:functions,0:FOR,0:IF,1:ELSE,0:CALL,1:SWITCH,0:WHILE,0	15
0x4000313	              0x55	                                push rbp	        73	prune.c	FUNCTION_4
0x4000314	          0x4889e5	                            mov rbp, rsp	        73	prune.c	FUNCTION_4
0x4000317	        0x4883ec20	                           sub rsp, 0x20	        73	prune.c	FUNCTION_4
0x400031b	          0x897dfc	                mov dword [rbp - 4], edi	        73	prune.c	FUNCTION_4
0x400031e	        0x488975f0	             mov qword [rbp - 0x10], rsi	        73	prune.c	FUNCTION_4
0x4000322	        0x488955e8	             mov qword [rbp - 0x18], rdx	        73	prune.c	FUNCTION_4
0x4000326	    0x8b0500000000	            mov eax, dword [0x0400032c] 	        74	prune.c	FUNCTION_4	IF_1
0x400032c	            0x85c0	                           test eax, eax	        74	prune.c	FUNCTION_4	IF_1
0x400032e	            0x750c	                           jne 0x400033c	        74	prune.c	FUNCTION_4	IF_1
0x4000330	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        75	prune.c	FUNCTION_4	CALL_1
0x4000334	          0x4889c7	                            mov rdi, rax	        75	prune.c	FUNCTION_4	CALL_1
0x4000337	      0xe800000000	                          call 0x400033c	        75	prune.c	FUNCTION_4	CALL_1
0x400033c	      0xb800000000	                              mov eax, 0	        76	prune.c	FUNCTION_4
0x4000341	              0xc9	                                   leave	        77	prune.c	FUNCTION_4
0x4000342	              0xc3	                                     ret	        77	prune.c	FUNCTION_4
prune_cruft	DO,0:functions,0:FOR,0:IF,1:ELSE,1:CALL,3:SWITCH,0:WHILE,0	25
0x40002b8	              0x55	                                push rbp	        64	prune.c	FUNCTION_3
0x40002b9	          0x4889e5	                            mov rbp, rsp	        64	prune.c	FUNCTION_3
0x40002bc	        0x4883ec20	                           sub rsp, 0x20	        64	prune.c	FUNCTION_3
0x40002c0	        0x48897df8	                mov qword [rbp - 8], rdi	        64	prune.c	FUNCTION_3
0x40002c4	        0x488975f0	             mov qword [rbp - 0x10], rsi	        64	prune.c	FUNCTION_3
0x40002c8	        0x488955e8	             mov qword [rbp - 0x18], rdx	        64	prune.c	FUNCTION_3
0x40002cc	        0x488b45f8	                mov rax, qword [rbp - 8]	        65	prune.c	FUNCTION_3	IF_1	CALL_1
0x40002d0	      0xbe00000000	                              mov esi, 0	        65	prune.c	FUNCTION_3	IF_1	CALL_1
0x40002d5	          0x4889c7	                            mov rdi, rax	        65	prune.c	FUNCTION_3	IF_1	CALL_1
0x40002d8	      0xe800000000	                          call 0x40002dd	        65	prune.c	FUNCTION_3	IF_1	CALL_1
0x40002dd	            0x85c0	                           test eax, eax	        65	prune.c	FUNCTION_3	IF_1	CALL_1
0x40002df	            0x740e	                            je 0x40002ef	        65	prune.c	FUNCTION_3	IF_1	CALL_1
0x40002e1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        66	prune.c	FUNCTION_3	CALL_2
0x40002e5	          0x4889c7	                            mov rdi, rax	        66	prune.c	FUNCTION_3	CALL_2
0x40002e8	      0xe88afdffff	                 call sym.prune_tmp_file	        66	prune.c	FUNCTION_3	CALL_2
0x40002ed	            0xeb1d	                           jmp 0x400030c	        66	prune.c	FUNCTION_3	CALL_2
0x40002ef	    0x488b05000000	            mov rax, qword [0x040002f6] 	        68	prune.c	FUNCTION_3	CALL_3
0x40002f6	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	        68	prune.c	FUNCTION_3	CALL_3
0x40002fa	      0xbe00000000	                              mov esi, 0	        68	prune.c	FUNCTION_3	CALL_3
0x40002ff	          0x4889c7	                            mov rdi, rax	        68	prune.c	FUNCTION_3	CALL_3
0x4000302	      0xb800000000	                              mov eax, 0	        68	prune.c	FUNCTION_3	CALL_3
0x4000307	      0xe800000000	                          call 0x400030c	        68	prune.c	FUNCTION_3	CALL_3
0x400030c	      0xb800000000	                              mov eax, 0	        69	prune.c	FUNCTION_3
0x4000311	              0xc9	                                   leave	        70	prune.c	FUNCTION_3
0x4000312	              0xc3	                                     ret	        70	prune.c	FUNCTION_3
