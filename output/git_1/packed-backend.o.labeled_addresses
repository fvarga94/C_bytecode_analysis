_	SWITCH,0:FOR,0:CALL,0:ELSE,0:WHILE,0:DO,0:functions,0:IF,1	15
0x400022f	              0x55	                                push rbp	        51	gettext.h	FUNCTION_52
0x4000230	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_52
0x4000233	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_52
0x4000237	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_52
0x400023b	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_52	IF_1
0x400023f	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_52	IF_1
0x4000242	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_52	IF_1
0x4000244	            0x7507	                           jne 0x400024d	        52	gettext.h	FUNCTION_52	IF_1
0x4000246	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_52	IF_1
0x400024b	            0xeb0c	                           jmp 0x4000259	        53	gettext.h	FUNCTION_52	IF_1
0x400024d	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_52
0x4000251	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_52
0x4000254	      0xe800000000	                          call 0x4000259	        54	gettext.h	FUNCTION_52
0x4000259	              0xc9	                                   leave	        55	gettext.h	FUNCTION_52
0x400025a	              0xc3	                                     ret	        55	gettext.h	FUNCTION_52
clear_snapshot	SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0:functions,0:IF,1	19
0x40005e8	              0x55	                                push rbp	       237	packed-backend.c	FUNCTION_6
0x40005e9	          0x4889e5	                            mov rbp, rsp	       237	packed-backend.c	FUNCTION_6
0x40005ec	        0x4883ec20	                           sub rsp, 0x20	       237	packed-backend.c	FUNCTION_6
0x40005f0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       237	packed-backend.c	FUNCTION_6
0x40005f4	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       238	packed-backend.c	FUNCTION_6	IF_1
0x40005f8	        0x488b4018	            mov rax, qword [rax + 0x18] 	       238	packed-backend.c	FUNCTION_6	IF_1
0x40005fc	          0x4885c0	                           test rax, rax	       238	packed-backend.c	FUNCTION_6	IF_1
0x40005ff	            0x7424	                            je 0x4000625	       238	packed-backend.c	FUNCTION_6	IF_1
0x4000601	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       239	packed-backend.c	FUNCTION_6	IF_1
0x4000605	        0x488b4018	            mov rax, qword [rax + 0x18] 	       239	packed-backend.c	FUNCTION_6	IF_1
0x4000609	        0x488945f8	                mov qword [rbp - 8], rax	       239	packed-backend.c	FUNCTION_6	IF_1
0x400060d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       241	packed-backend.c	FUNCTION_6	IF_1
0x4000611	    0x48c740180000	               mov qword [rax + 0x18], 0	       241	packed-backend.c	FUNCTION_6	IF_1
0x4000619	        0x488b45f8	                mov rax, qword [rbp - 8]	       242	packed-backend.c	FUNCTION_6	IF_1	CALL_1
0x400061d	          0x4889c7	                            mov rdi, rax	       242	packed-backend.c	FUNCTION_6	IF_1	CALL_1
0x4000620	      0xe86efeffff	               call sym.release_snapshot	       242	packed-backend.c	FUNCTION_6	IF_1	CALL_1
0x4000625	              0x90	                                     nop	       244	packed-backend.c	FUNCTION_6
0x4000626	              0xc9	                                   leave	       244	packed-backend.c	FUNCTION_6
0x4000627	              0xc3	                                     ret	       244	packed-backend.c	FUNCTION_6
packed_ref_store_create	SWITCH,0:FOR,0:CALL,4:ELSE,0:WHILE,0:DO,0:functions,0:IF,0	32
0x40004f1	              0x55	                                push rbp	       198	packed-backend.c	FUNCTION_4
0x40004f2	          0x4889e5	                            mov rbp, rsp	       198	packed-backend.c	FUNCTION_4
0x40004f5	        0x4883ec20	                           sub rsp, 0x20	       198	packed-backend.c	FUNCTION_4
0x40004f9	        0x48897de8	             mov qword [rbp - 0x18], rdi	       198	packed-backend.c	FUNCTION_4
0x40004fd	          0x8975e4	             mov dword [rbp - 0x1c], esi	       198	packed-backend.c	FUNCTION_4
0x4000500	      0xbe30000000	                           mov esi, 0x30	       199	packed-backend.c	FUNCTION_4	CALL_1
0x4000505	      0xbf01000000	                              mov edi, 1	       199	packed-backend.c	FUNCTION_4	CALL_1
0x400050a	      0xe800000000	                          call 0x400050f	       199	packed-backend.c	FUNCTION_4	CALL_1
0x400050f	        0x488945f0	             mov qword [rbp - 0x10], rax	       199	packed-backend.c	FUNCTION_4	CALL_1
0x4000513	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       200	packed-backend.c	FUNCTION_4
0x4000517	        0x488945f8	                mov qword [rbp - 8], rax	       200	packed-backend.c	FUNCTION_4
0x400051b	        0x488b45f8	                mov rax, qword [rbp - 8]	       202	packed-backend.c	FUNCTION_4	CALL_2
0x400051f	      0xbe00000000	                              mov esi, 0	       202	packed-backend.c	FUNCTION_4	CALL_2
0x4000524	          0x4889c7	                            mov rdi, rax	       202	packed-backend.c	FUNCTION_4	CALL_2
0x4000527	      0xe800000000	                          call 0x400052c	       202	packed-backend.c	FUNCTION_4	CALL_2
0x400052c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       203	packed-backend.c	FUNCTION_4
0x4000530	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       203	packed-backend.c	FUNCTION_4
0x4000533	          0x895008	                mov dword [rax + 8], edx	       203	packed-backend.c	FUNCTION_4
0x4000536	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       205	packed-backend.c	FUNCTION_4	CALL_3
0x400053a	          0x4889c7	                            mov rdi, rax	       205	packed-backend.c	FUNCTION_4	CALL_3
0x400053d	      0xe800000000	                          call 0x4000542	       205	packed-backend.c	FUNCTION_4	CALL_3
0x4000542	          0x4889c2	                            mov rdx, rax	       205	packed-backend.c	FUNCTION_4	CALL_3
0x4000545	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       205	packed-backend.c	FUNCTION_4	CALL_3
0x4000549	        0x48895010	             mov qword [rax + 0x10], rdx	       205	packed-backend.c	FUNCTION_4	CALL_3
0x400054d	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       206	packed-backend.c	FUNCTION_4	CALL_4
0x4000551	        0x4883c010	                           add rax, 0x10	       206	packed-backend.c	FUNCTION_4	CALL_4
0x4000555	          0x4889c6	                            mov rsi, rax	       206	packed-backend.c	FUNCTION_4	CALL_4
0x4000558	      0xbf00000000	                              mov edi, 0	       206	packed-backend.c	FUNCTION_4	CALL_4
0x400055d	      0xe800000000	                          call 0x4000562	       206	packed-backend.c	FUNCTION_4	CALL_4
0x4000562	        0x488b45f8	                mov rax, qword [rbp - 8]	       208	packed-backend.c	FUNCTION_4
0x4000566	              0xc9	                                   leave	       209	packed-backend.c	FUNCTION_4
0x4000567	              0xc3	                                     ret	       209	packed-backend.c	FUNCTION_4
packed_init_db	SWITCH,0:FOR,0:CALL,0:ELSE,0:WHILE,0:DO,0:functions,0:IF,0	7
0x4001e8d	              0x55	                                push rbp	      1065	packed-backend.c	FUNCTION_30
0x4001e8e	          0x4889e5	                            mov rbp, rsp	      1065	packed-backend.c	FUNCTION_30
0x4001e91	        0x48897df8	                mov qword [rbp - 8], rdi	      1065	packed-backend.c	FUNCTION_30
0x4001e95	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1065	packed-backend.c	FUNCTION_30
0x4001e99	      0xb800000000	                              mov eax, 0	      1067	packed-backend.c	FUNCTION_30
0x4001e9e	              0x5d	                                 pop rbp	      1068	packed-backend.c	FUNCTION_30
0x4001e9f	              0xc3	                                     ret	      1068	packed-backend.c	FUNCTION_30
packed_refs_lock	SWITCH,0:FOR,0:CALL,10:ELSE,0:WHILE,0:DO,0:functions,0:IF,3	73
0x4001ce4	              0x55	                                push rbp	       982	packed-backend.c	FUNCTION_27
0x4001ce5	          0x4889e5	                            mov rbp, rsp	       982	packed-backend.c	FUNCTION_27
0x4001ce8	        0x4883ec30	                           sub rsp, 0x30	       982	packed-backend.c	FUNCTION_27
0x4001cec	        0x48897de8	             mov qword [rbp - 0x18], rdi	       982	packed-backend.c	FUNCTION_27
0x4001cf0	          0x8975e4	             mov dword [rbp - 0x1c], esi	       982	packed-backend.c	FUNCTION_27
0x4001cf3	        0x488955d8	             mov qword [rbp - 0x28], rdx	       982	packed-backend.c	FUNCTION_27
0x4001cf7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       983	packed-backend.c	FUNCTION_27
0x4001cfb	      0xba00000000	                              mov edx, 0	       983	packed-backend.c	FUNCTION_27
0x4001d00	      0xbe0a000000	                            mov esi, 0xa	       983	packed-backend.c	FUNCTION_27
0x4001d05	          0x4889c7	                            mov rdi, rax	       983	packed-backend.c	FUNCTION_27
0x4001d08	      0xe85be8ffff	                call sym.packed_downcast	       983	packed-backend.c	FUNCTION_27
0x4001d0d	        0x488945f8	                mov qword [rbp - 8], rax	       983	packed-backend.c	FUNCTION_27
0x4001d11	    0x8b0500000000	            mov eax, dword [0x04001d17] 	       989	packed-backend.c	FUNCTION_27	IF_1
0x4001d17	            0x85c0	                           test eax, eax	       989	packed-backend.c	FUNCTION_27	IF_1
0x4001d19	            0x7519	                           jne 0x4001d34	       989	packed-backend.c	FUNCTION_27	IF_1
0x4001d1b	      0xbe00000000	                              mov esi, 0	       990	packed-backend.c	FUNCTION_27	IF_1	CALL_2
0x4001d20	      0xbf00000000	                              mov edi, 0	       990	packed-backend.c	FUNCTION_27	IF_1	CALL_2
0x4001d25	      0xe800000000	                          call 0x4001d2a	       990	packed-backend.c	FUNCTION_27	IF_1	CALL_2
0x4001d2a	    0xc70500000000	               mov dword [0x04001d34], 1	       991	packed-backend.c	FUNCTION_27	IF_1
0x4001d34	    0x8b0500000000	            mov eax, dword [0x04001d3a] 	       999	packed-backend.c	FUNCTION_27	IF_2	CALL_3
0x4001d3a	          0x4863c8	                         movsxd rcx, eax	       999	packed-backend.c	FUNCTION_27	IF_2	CALL_3
0x4001d3d	        0x488b45f8	                mov rax, qword [rbp - 8]	      1001	packed-backend.c	FUNCTION_27	IF_2
0x4001d41	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1001	packed-backend.c	FUNCTION_27	IF_2
0x4001d45	        0x488b55f8	                mov rdx, qword [rbp - 8]	       999	packed-backend.c	FUNCTION_27	IF_2	CALL_3
0x4001d49	        0x488d7a20	                   lea rdi, [rdx + 0x20]	       999	packed-backend.c	FUNCTION_27	IF_2	CALL_3
0x4001d4d	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       999	packed-backend.c	FUNCTION_27	IF_2	CALL_3
0x4001d50	          0x4889c6	                            mov rsi, rax	       999	packed-backend.c	FUNCTION_27	IF_2	CALL_3
0x4001d53	      0xe800000000	                          call 0x4001d58	       999	packed-backend.c	FUNCTION_27	IF_2	CALL_3
0x4001d58	            0x85c0	                           test eax, eax	       999	packed-backend.c	FUNCTION_27	IF_2	CALL_3
0x4001d5a	            0x7924	                           jns 0x4001d80	       999	packed-backend.c	FUNCTION_27	IF_2	CALL_3
0x4001d5c	      0xe800000000	                          call 0x4001d61	      1003	packed-backend.c	FUNCTION_27	IF_2	CALL_4
0x4001d61	            0x8b08	                    mov ecx, dword [rax]	      1003	packed-backend.c	FUNCTION_27	IF_2	CALL_4
0x4001d63	        0x488b45f8	                mov rax, qword [rbp - 8]	      1003	packed-backend.c	FUNCTION_27	IF_2	CALL_4
0x4001d67	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1003	packed-backend.c	FUNCTION_27	IF_2	CALL_4
0x4001d6b	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1003	packed-backend.c	FUNCTION_27	IF_2	CALL_4
0x4001d6f	            0x89ce	                            mov esi, ecx	      1003	packed-backend.c	FUNCTION_27	IF_2	CALL_4
0x4001d71	          0x4889c7	                            mov rdi, rax	      1003	packed-backend.c	FUNCTION_27	IF_2	CALL_4
0x4001d74	      0xe800000000	                          call 0x4001d79	      1003	packed-backend.c	FUNCTION_27	IF_2	CALL_4
0x4001d79	      0xb8ffffffff	                     mov eax, 0xffffffff	      1004	packed-backend.c	FUNCTION_27	IF_2
0x4001d7e	            0xeb77	                           jmp 0x4001df7	      1004	packed-backend.c	FUNCTION_27	IF_2
0x4001d80	        0x488b45f8	                mov rax, qword [rbp - 8]	      1007	packed-backend.c	FUNCTION_27	IF_3	CALL_5
0x4001d84	        0x4883c020	                           add rax, 0x20	      1007	packed-backend.c	FUNCTION_27	IF_3	CALL_5
0x4001d88	          0x4889c7	                            mov rdi, rax	      1007	packed-backend.c	FUNCTION_27	IF_3	CALL_5
0x4001d8b	      0xe8fce5ffff	         call sym.close_lock_file_gently	      1007	packed-backend.c	FUNCTION_27	IF_3	CALL_5
0x4001d90	            0x85c0	                           test eax, eax	      1007	packed-backend.c	FUNCTION_27	IF_3	CALL_5
0x4001d92	            0x7446	                            je 0x4001dda	      1007	packed-backend.c	FUNCTION_27	IF_3	CALL_5
0x4001d94	      0xe800000000	                          call 0x4001d99	      1008	packed-backend.c	FUNCTION_27	IF_3	CALL_7
0x4001d99	            0x8b00	                    mov eax, dword [rax]	      1008	packed-backend.c	FUNCTION_27	IF_3	CALL_7
0x4001d9b	            0x89c7	                            mov edi, eax	      1008	packed-backend.c	FUNCTION_27	IF_3	CALL_7
0x4001d9d	      0xe800000000	                          call 0x4001da2	      1008	packed-backend.c	FUNCTION_27	IF_3	CALL_7
0x4001da2	          0x4889c1	                            mov rcx, rax	      1008	packed-backend.c	FUNCTION_27	IF_3	CALL_7
0x4001da5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1008	packed-backend.c	FUNCTION_27	IF_3	CALL_7
0x4001da9	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1008	packed-backend.c	FUNCTION_27	IF_3	CALL_7
0x4001dad	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1008	packed-backend.c	FUNCTION_27	IF_3	CALL_7
0x4001db1	      0xbe00000000	                              mov esi, 0	      1008	packed-backend.c	FUNCTION_27	IF_3	CALL_7
0x4001db6	          0x4889c7	                            mov rdi, rax	      1008	packed-backend.c	FUNCTION_27	IF_3	CALL_7
0x4001db9	      0xb800000000	                              mov eax, 0	      1008	packed-backend.c	FUNCTION_27	IF_3	CALL_7
0x4001dbe	      0xe800000000	                          call 0x4001dc3	      1008	packed-backend.c	FUNCTION_27	IF_3	CALL_7
0x4001dc3	        0x488b45f8	                mov rax, qword [rbp - 8]	      1009	packed-backend.c	FUNCTION_27	IF_3	CALL_8
0x4001dc7	        0x4883c020	                           add rax, 0x20	      1009	packed-backend.c	FUNCTION_27	IF_3	CALL_8
0x4001dcb	          0x4889c7	                            mov rdi, rax	      1009	packed-backend.c	FUNCTION_27	IF_3	CALL_8
0x4001dce	      0xe8d6e5ffff	             call sym.rollback_lock_file	      1009	packed-backend.c	FUNCTION_27	IF_3	CALL_8
0x4001dd3	      0xb8ffffffff	                     mov eax, 0xffffffff	      1010	packed-backend.c	FUNCTION_27	IF_3
0x4001dd8	            0xeb1d	                           jmp 0x4001df7	      1010	packed-backend.c	FUNCTION_27	IF_3
0x4001dda	        0x488b45f8	                mov rax, qword [rbp - 8]	      1021	packed-backend.c	FUNCTION_27	CALL_9
0x4001dde	          0x4889c7	                            mov rdi, rax	      1021	packed-backend.c	FUNCTION_27	CALL_9
0x4001de1	      0xe837f6ffff	              call sym.validate_snapshot	      1021	packed-backend.c	FUNCTION_27	CALL_9
0x4001de6	        0x488b45f8	                mov rax, qword [rbp - 8]	      1027	packed-backend.c	FUNCTION_27	CALL_10
0x4001dea	          0x4889c7	                            mov rdi, rax	      1027	packed-backend.c	FUNCTION_27	CALL_10
0x4001ded	      0xe876f6ffff	                   call sym.get_snapshot	      1027	packed-backend.c	FUNCTION_27	CALL_10
0x4001df2	      0xb800000000	                              mov eax, 0	      1028	packed-backend.c	FUNCTION_27
0x4001df7	              0xc9	                                   leave	      1029	packed-backend.c	FUNCTION_27
0x4001df8	              0xc3	                                     ret	      1029	packed-backend.c	FUNCTION_27
is_lock_file_locked	SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0:functions,0:IF,0	10
0x400036f	              0x55	                                push rbp	       182	lockfile.h	FUNCTION_55
0x4000370	          0x4889e5	                            mov rbp, rsp	       182	lockfile.h	FUNCTION_55
0x4000373	        0x4883ec08	                              sub rsp, 8	       182	lockfile.h	FUNCTION_55
0x4000377	        0x48897df8	                mov qword [rbp - 8], rdi	       182	lockfile.h	FUNCTION_55
0x400037b	        0x488b45f8	                mov rax, qword [rbp - 8]	       183	lockfile.h	FUNCTION_55	CALL_1
0x400037f	          0x488b00	                    mov rax, qword [rax]	       183	lockfile.h	FUNCTION_55	CALL_1
0x4000382	          0x4889c7	                            mov rdi, rax	       183	lockfile.h	FUNCTION_55	CALL_1
0x4000385	      0xe8bdffffff	             call sym.is_tempfile_active	       183	lockfile.h	FUNCTION_55	CALL_1
0x400038a	              0xc9	                                   leave	       184	lockfile.h	FUNCTION_55
0x400038b	              0xc3	                                     ret	       184	lockfile.h	FUNCTION_55
packed_reflog_iterator_begin	SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0:functions,0:IF,0	7
0x4002c45	              0x55	                                push rbp	      1584	packed-backend.c	FUNCTION_43
0x4002c46	          0x4889e5	                            mov rbp, rsp	      1584	packed-backend.c	FUNCTION_43
0x4002c49	        0x4883ec10	                           sub rsp, 0x10	      1584	packed-backend.c	FUNCTION_43
0x4002c4d	        0x48897df8	                mov qword [rbp - 8], rdi	      1584	packed-backend.c	FUNCTION_43
0x4002c51	      0xe800000000	                          call 0x4002c56	      1585	packed-backend.c	FUNCTION_43	CALL_1
0x4002c56	              0xc9	                                   leave	      1586	packed-backend.c	FUNCTION_43
0x4002c57	              0xc3	                                     ret	      1586	packed-backend.c	FUNCTION_43
oidclr	SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0:functions,0:IF,0	12
0x4000322	              0x55	                                push rbp	      1016	cache.h	FUNCTION_79
0x4000323	          0x4889e5	                            mov rbp, rsp	      1016	cache.h	FUNCTION_79
0x4000326	        0x4883ec10	                           sub rsp, 0x10	      1016	cache.h	FUNCTION_79
0x400032a	        0x48897df8	                mov qword [rbp - 8], rdi	      1016	cache.h	FUNCTION_79
0x400032e	        0x488b45f8	                mov rax, qword [rbp - 8]	      1017	cache.h	FUNCTION_79	CALL_1
0x4000332	      0xba14000000	                           mov edx, 0x14	      1017	cache.h	FUNCTION_79	CALL_1
0x4000337	      0xbe00000000	                              mov esi, 0	      1017	cache.h	FUNCTION_79	CALL_1
0x400033c	          0x4889c7	                            mov rdi, rax	      1017	cache.h	FUNCTION_79	CALL_1
0x400033f	      0xe800000000	                          call 0x4000344	      1017	cache.h	FUNCTION_79	CALL_1
0x4000344	              0x90	                                     nop	      1018	cache.h	FUNCTION_79
0x4000345	              0xc9	                                   leave	      1018	cache.h	FUNCTION_79
0x4000346	              0xc3	                                     ret	      1018	cache.h	FUNCTION_79
packed_reflog_exists	SWITCH,0:FOR,0:CALL,0:ELSE,0:WHILE,0:DO,0:functions,0:IF,0	7
0x4002c8e	              0x55	                                push rbp	      1605	packed-backend.c	FUNCTION_46
0x4002c8f	          0x4889e5	                            mov rbp, rsp	      1605	packed-backend.c	FUNCTION_46
0x4002c92	        0x48897df8	                mov qword [rbp - 8], rdi	      1605	packed-backend.c	FUNCTION_46
0x4002c96	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1605	packed-backend.c	FUNCTION_46
0x4002c9a	      0xb800000000	                              mov eax, 0	      1606	packed-backend.c	FUNCTION_46
0x4002c9f	              0x5d	                                 pop rbp	      1607	packed-backend.c	FUNCTION_46
0x4002ca0	              0xc3	                                     ret	      1607	packed-backend.c	FUNCTION_46
get_snapshot	SWITCH,0:FOR,0:CALL,3:ELSE,0:WHILE,0:DO,0:functions,0:IF,2	27
0x4001468	              0x55	                                push rbp	       715	packed-backend.c	FUNCTION_19
0x4001469	          0x4889e5	                            mov rbp, rsp	       715	packed-backend.c	FUNCTION_19
0x400146c	        0x4883ec10	                           sub rsp, 0x10	       715	packed-backend.c	FUNCTION_19
0x4001470	        0x48897df8	                mov qword [rbp - 8], rdi	       715	packed-backend.c	FUNCTION_19
0x4001474	        0x488b45f8	                mov rax, qword [rbp - 8]	       716	packed-backend.c	FUNCTION_19	IF_1	CALL_1
0x4001478	        0x4883c020	                           add rax, 0x20	       716	packed-backend.c	FUNCTION_19	IF_1	CALL_1
0x400147c	          0x4889c7	                            mov rdi, rax	       716	packed-backend.c	FUNCTION_19	IF_1	CALL_1
0x400147f	      0xe8ebeeffff	            call sym.is_lock_file_locked	       716	packed-backend.c	FUNCTION_19	IF_1	CALL_1
0x4001484	            0x85c0	                           test eax, eax	       716	packed-backend.c	FUNCTION_19	IF_1	CALL_1
0x4001486	            0x750c	                           jne 0x4001494	       716	packed-backend.c	FUNCTION_19	IF_1	CALL_1
0x4001488	        0x488b45f8	                mov rax, qword [rbp - 8]	       717	packed-backend.c	FUNCTION_19	CALL_2
0x400148c	          0x4889c7	                            mov rdi, rax	       717	packed-backend.c	FUNCTION_19	CALL_2
0x400148f	      0xe889ffffff	              call sym.validate_snapshot	       717	packed-backend.c	FUNCTION_19	CALL_2
0x4001494	        0x488b45f8	                mov rax, qword [rbp - 8]	       719	packed-backend.c	FUNCTION_19	IF_2
0x4001498	        0x488b4018	            mov rax, qword [rax + 0x18] 	       719	packed-backend.c	FUNCTION_19	IF_2
0x400149c	          0x4885c0	                           test rax, rax	       719	packed-backend.c	FUNCTION_19	IF_2
0x400149f	            0x7517	                           jne 0x40014b8	       719	packed-backend.c	FUNCTION_19	IF_2
0x40014a1	        0x488b45f8	                mov rax, qword [rbp - 8]	       720	packed-backend.c	FUNCTION_19	CALL_3
0x40014a5	          0x4889c7	                            mov rdi, rax	       720	packed-backend.c	FUNCTION_19	CALL_3
0x40014a8	      0xe83bfcffff	                call sym.create_snapshot	       720	packed-backend.c	FUNCTION_19	CALL_3
0x40014ad	          0x4889c2	                            mov rdx, rax	       720	packed-backend.c	FUNCTION_19	CALL_3
0x40014b0	        0x488b45f8	                mov rax, qword [rbp - 8]	       720	packed-backend.c	FUNCTION_19	CALL_3
0x40014b4	        0x48895018	             mov qword [rax + 0x18], rdx	       720	packed-backend.c	FUNCTION_19	CALL_3
0x40014b8	        0x488b45f8	                mov rax, qword [rbp - 8]	       722	packed-backend.c	FUNCTION_19
0x40014bc	        0x488b4018	            mov rax, qword [rax + 0x18] 	       722	packed-backend.c	FUNCTION_19
0x40014c0	              0xc9	                                   leave	       723	packed-backend.c	FUNCTION_19
0x40014c1	              0xc3	                                     ret	       723	packed-backend.c	FUNCTION_19
die_unterminated_line	SWITCH,0:FOR,0:CALL,2:ELSE,1:WHILE,0:DO,0:functions,0:IF,1	24
0x4000628	              0x55	                                push rbp	       248	packed-backend.c	FUNCTION_7
0x4000629	          0x4889e5	                            mov rbp, rsp	       248	packed-backend.c	FUNCTION_7
0x400062c	        0x4883ec20	                           sub rsp, 0x20	       248	packed-backend.c	FUNCTION_7
0x4000630	        0x48897df8	                mov qword [rbp - 8], rdi	       248	packed-backend.c	FUNCTION_7
0x4000634	        0x488975f0	             mov qword [rbp - 0x10], rsi	       248	packed-backend.c	FUNCTION_7
0x4000638	        0x488955e8	             mov qword [rbp - 0x18], rdx	       248	packed-backend.c	FUNCTION_7
0x400063c	      0x48837de84f	           cmp qword [rbp - 0x18], 0x4f 	       249	packed-backend.c	FUNCTION_7	IF_1
0x4000641	            0x7725	                            ja 0x4000668	       249	packed-backend.c	FUNCTION_7	IF_1
0x4000643	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       250	packed-backend.c	FUNCTION_7	CALL_1
0x4000647	            0x89c6	                            mov esi, eax	       250	packed-backend.c	FUNCTION_7	CALL_1
0x4000649	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       250	packed-backend.c	FUNCTION_7	CALL_1
0x400064d	        0x488b45f8	                mov rax, qword [rbp - 8]	       250	packed-backend.c	FUNCTION_7	CALL_1
0x4000651	          0x4889d1	                            mov rcx, rdx	       250	packed-backend.c	FUNCTION_7	CALL_1
0x4000654	            0x89f2	                            mov edx, esi	       250	packed-backend.c	FUNCTION_7	CALL_1
0x4000656	          0x4889c6	                            mov rsi, rax	       250	packed-backend.c	FUNCTION_7	CALL_1
0x4000659	      0xbf00000000	                              mov edi, 0	       250	packed-backend.c	FUNCTION_7	CALL_1
0x400065e	      0xb800000000	                              mov eax, 0	       250	packed-backend.c	FUNCTION_7	CALL_1
0x4000663	      0xe800000000	                          call 0x4000668	       250	packed-backend.c	FUNCTION_7	CALL_1
0x4000668	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       252	packed-backend.c	FUNCTION_7	CALL_2
0x400066c	        0x488b45f8	                mov rax, qword [rbp - 8]	       252	packed-backend.c	FUNCTION_7	CALL_2
0x4000670	          0x4889c6	                            mov rsi, rax	       252	packed-backend.c	FUNCTION_7	CALL_2
0x4000673	      0xbf00000000	                              mov edi, 0	       252	packed-backend.c	FUNCTION_7	CALL_2
0x4000678	      0xb800000000	                              mov eax, 0	       252	packed-backend.c	FUNCTION_7	CALL_2
0x400067d	      0xe800000000	               call sym.die_invalid_line	       252	packed-backend.c	FUNCTION_7	CALL_2
load_contents	SWITCH,0:FOR,0:CALL,10:ELSE,3:WHILE,0:DO,0:functions,0:IF,6	126
0x4000db7	              0x55	                                push rbp	       473	packed-backend.c	FUNCTION_15
0x4000db8	          0x4889e5	                            mov rbp, rsp	       473	packed-backend.c	FUNCTION_15
0x4000dbb	    0x4881ecd00000	                           sub rsp, 0xd0	       473	packed-backend.c	FUNCTION_15
0x4000dc2	    0x4889bd38ffff	             mov qword [rbp - 0xc8], rdi	       473	packed-backend.c	FUNCTION_15
0x4000dc9	    0x64488b042528	                mov rax, qword fs:[0x28]	       473	packed-backend.c	FUNCTION_15
0x4000dd2	        0x488945f8	                mov qword [rbp - 8], rax	       473	packed-backend.c	FUNCTION_15
0x4000dd6	            0x31c0	                            xor eax, eax	       473	packed-backend.c	FUNCTION_15
0x4000dd8	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       479	packed-backend.c	FUNCTION_15	CALL_1
0x4000ddf	          0x488b00	                    mov rax, qword [rax]	       479	packed-backend.c	FUNCTION_15	CALL_1
0x4000de2	        0x488b4010	            mov rax, qword [rax + 0x10] 	       479	packed-backend.c	FUNCTION_15	CALL_1
0x4000de6	      0xbe00000000	                              mov esi, 0	       479	packed-backend.c	FUNCTION_15	CALL_1
0x4000deb	          0x4889c7	                            mov rdi, rax	       479	packed-backend.c	FUNCTION_15	CALL_1
0x4000dee	      0xb800000000	                              mov eax, 0	       479	packed-backend.c	FUNCTION_15	CALL_1
0x4000df3	      0xe800000000	                          call 0x4000df8	       479	packed-backend.c	FUNCTION_15	CALL_1
0x4000df8	    0x89854cffffff	             mov dword [rbp - 0xb4], eax	       479	packed-backend.c	FUNCTION_15	CALL_1
0x4000dfe	    0x83bd4cffffff	               cmp dword [rbp - 0xb4], 0	       480	packed-backend.c	FUNCTION_15	IF_1
0x4000e05	            0x7936	                           jns 0x4000e3d	       480	packed-backend.c	FUNCTION_15	IF_1
0x4000e07	      0xe800000000	                          call 0x4000e0c	       481	packed-backend.c	FUNCTION_15	IF_1	IF_2
0x4000e0c	            0x8b00	                    mov eax, dword [rax]	       481	packed-backend.c	FUNCTION_15	IF_1	IF_2
0x4000e0e	          0x83f802	                              cmp eax, 2	       481	packed-backend.c	FUNCTION_15	IF_1	IF_2
0x4000e11	            0x750a	                           jne 0x4000e1d	       481	packed-backend.c	FUNCTION_15	IF_1	IF_2
0x4000e13	      0xb800000000	                              mov eax, 0	       489	packed-backend.c	FUNCTION_15	IF_1	IF_2
0x4000e18	      0xe9d9010000	                           jmp 0x4000ff6	       489	packed-backend.c	FUNCTION_15	IF_1	IF_2
0x4000e1d	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       491	packed-backend.c	FUNCTION_15	IF_1	ELSE_1	CALL_2
0x4000e24	          0x488b00	                    mov rax, qword [rax]	       491	packed-backend.c	FUNCTION_15	IF_1	ELSE_1	CALL_2
0x4000e27	        0x488b4010	            mov rax, qword [rax + 0x10] 	       491	packed-backend.c	FUNCTION_15	IF_1	ELSE_1	CALL_2
0x4000e2b	          0x4889c6	                            mov rsi, rax	       491	packed-backend.c	FUNCTION_15	IF_1	ELSE_1	CALL_2
0x4000e2e	      0xbf00000000	                              mov edi, 0	       491	packed-backend.c	FUNCTION_15	IF_1	ELSE_1	CALL_2
0x4000e33	      0xb800000000	                              mov eax, 0	       491	packed-backend.c	FUNCTION_15	IF_1	ELSE_1	CALL_2
0x4000e38	      0xe800000000	                          call 0x4000e3d	       491	packed-backend.c	FUNCTION_15	IF_1	ELSE_1	CALL_2
0x4000e3d	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       495	packed-backend.c	FUNCTION_15	CALL_3
0x4000e44	        0x488d5030	                   lea rdx, [rax + 0x30]	       495	packed-backend.c	FUNCTION_15	CALL_3
0x4000e48	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	       495	packed-backend.c	FUNCTION_15	CALL_3
0x4000e4e	            0x89c6	                            mov esi, eax	       495	packed-backend.c	FUNCTION_15	CALL_3
0x4000e50	          0x4889d7	                            mov rdi, rdx	       495	packed-backend.c	FUNCTION_15	CALL_3
0x4000e53	      0xe800000000	                          call 0x4000e58	       495	packed-backend.c	FUNCTION_15	CALL_3
0x4000e58	    0x488d9560ffff	                   lea rdx, [rbp - 0xa0]	       497	packed-backend.c	FUNCTION_15	IF_3
0x4000e5f	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	       497	packed-backend.c	FUNCTION_15	IF_3
0x4000e65	          0x4889d6	                            mov rsi, rdx	       497	packed-backend.c	FUNCTION_15	IF_3
0x4000e68	            0x89c7	                            mov edi, eax	       497	packed-backend.c	FUNCTION_15	IF_3
0x4000e6a	      0xe800000000	                          call 0x4000e6f	       497	packed-backend.c	FUNCTION_15	IF_3
0x4000e6f	            0x85c0	                           test eax, eax	       497	packed-backend.c	FUNCTION_15	IF_3
0x4000e71	            0x7920	                           jns 0x4000e93	       497	packed-backend.c	FUNCTION_15	IF_3
0x4000e73	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       498	packed-backend.c	FUNCTION_15	CALL_4
0x4000e7a	          0x488b00	                    mov rax, qword [rax]	       498	packed-backend.c	FUNCTION_15	CALL_4
0x4000e7d	        0x488b4010	            mov rax, qword [rax + 0x10] 	       498	packed-backend.c	FUNCTION_15	CALL_4
0x4000e81	          0x4889c6	                            mov rsi, rax	       498	packed-backend.c	FUNCTION_15	CALL_4
0x4000e84	      0xbf00000000	                              mov edi, 0	       498	packed-backend.c	FUNCTION_15	CALL_4
0x4000e89	      0xb800000000	                              mov eax, 0	       498	packed-backend.c	FUNCTION_15	CALL_4
0x4000e8e	      0xe800000000	                          call 0x4000e93	       498	packed-backend.c	FUNCTION_15	CALL_4
0x4000e93	        0x488b4590	             mov rax, qword [rbp - 0x70]	       499	packed-backend.c	FUNCTION_15	CALL_5
0x4000e97	          0x4889c7	                            mov rdi, rax	       499	packed-backend.c	FUNCTION_15	CALL_5
0x4000e9a	      0xe854f2ffff	                        call sym.xsize_t	       499	packed-backend.c	FUNCTION_15	CALL_5
0x4000e9f	    0x48898550ffff	             mov qword [rbp - 0xb0], rax	       499	packed-backend.c	FUNCTION_15	CALL_5
0x4000ea6	    0x4883bd50ffff	               cmp qword [rbp - 0xb0], 0	       501	packed-backend.c	FUNCTION_15	IF_4
0x4000eae	            0x750a	                           jne 0x4000eba	       501	packed-backend.c	FUNCTION_15	IF_4
0x4000eb0	      0xb800000000	                              mov eax, 0	       502	packed-backend.c	FUNCTION_15	IF_4
0x4000eb5	      0xe93c010000	                           jmp 0x4000ff6	       502	packed-backend.c	FUNCTION_15	IF_4
0x4000eba	    0x8b0500000000	            mov eax, dword [0x04000ec0] 	       503	packed-backend.c	FUNCTION_15	ELSE_2	IF_5
0x4000ec0	            0x85c0	                           test eax, eax	       503	packed-backend.c	FUNCTION_15	ELSE_2	IF_5
0x4000ec2	            0x7411	                            je 0x4000ed5	       503	packed-backend.c	FUNCTION_15	ELSE_2	IF_5
0x4000ec4	    0x4881bd50ffff	         cmp qword [rbp - 0xb0], 0x8000 	       503	packed-backend.c	FUNCTION_15	ELSE_2	IF_5
0x4000ecf	     0xf8790000000	                            ja 0x4000f65	       503	packed-backend.c	FUNCTION_15	ELSE_2	IF_5
0x4000ed5	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       504	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_6
0x4000edc	          0x4889c7	                            mov rdi, rax	       504	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_6
0x4000edf	      0xe800000000	                          call 0x4000ee4	       504	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_6
0x4000ee4	          0x4889c2	                            mov rdx, rax	       504	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_6
0x4000ee7	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       504	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_6
0x4000eee	        0x48895010	             mov qword [rax + 0x10], rdx	       504	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_6
0x4000ef2	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       505	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_7
0x4000ef9	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       505	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_7
0x4000efd	    0x488b9550ffff	             mov rdx, qword [rbp - 0xb0]	       505	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_7
0x4000f04	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	       505	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_7
0x4000f0a	          0x4889ce	                            mov rsi, rcx	       505	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_7
0x4000f0d	            0x89c7	                            mov edi, eax	       505	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_7
0x4000f0f	      0xe800000000	                          call 0x4000f14	       505	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_7
0x4000f14	    0x48898558ffff	             mov qword [rbp - 0xa8], rax	       505	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_7
0x4000f1b	    0x4883bd58ffff	               cmp qword [rbp - 0xa8], 0	       506	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	IF_6
0x4000f23	            0x7810	                            js 0x4000f35	       506	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	IF_6
0x4000f25	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	       506	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	IF_6
0x4000f2c	    0x483b8550ffff	             cmp rax, qword [rbp - 0xb0]	       506	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	IF_6
0x4000f33	            0x7420	                            je 0x4000f55	       506	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	IF_6
0x4000f35	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       507	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_8
0x4000f3c	          0x488b00	                    mov rax, qword [rax]	       507	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_8
0x4000f3f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       507	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_8
0x4000f43	          0x4889c6	                            mov rsi, rax	       507	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_8
0x4000f46	      0xbf00000000	                              mov edi, 0	       507	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_8
0x4000f4b	      0xb800000000	                              mov eax, 0	       507	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_8
0x4000f50	      0xe800000000	                          call 0x4000f55	       507	packed-backend.c	FUNCTION_15	ELSE_2	IF_5	CALL_8
0x4000f55	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       508	packed-backend.c	FUNCTION_15	ELSE_2	IF_5
0x4000f5c	    0xc74008000000	                  mov dword [rax + 8], 0	       508	packed-backend.c	FUNCTION_15	ELSE_2	IF_5
0x4000f63	            0xeb49	                           jmp 0x4000fae	       508	packed-backend.c	FUNCTION_15	ELSE_2	IF_5
0x4000f65	    0x8b954cffffff	             mov edx, dword [rbp - 0xb4]	       510	packed-backend.c	FUNCTION_15	ELSE_3	CALL_9
0x4000f6b	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       510	packed-backend.c	FUNCTION_15	ELSE_3	CALL_9
0x4000f72	    0x41b900000000	                              mov r9d, 0	       510	packed-backend.c	FUNCTION_15	ELSE_3	CALL_9
0x4000f78	          0x4189d0	                            mov r8d, edx	       510	packed-backend.c	FUNCTION_15	ELSE_3	CALL_9
0x4000f7b	      0xb902000000	                              mov ecx, 2	       510	packed-backend.c	FUNCTION_15	ELSE_3	CALL_9
0x4000f80	      0xba01000000	                              mov edx, 1	       510	packed-backend.c	FUNCTION_15	ELSE_3	CALL_9
0x4000f85	          0x4889c6	                            mov rsi, rax	       510	packed-backend.c	FUNCTION_15	ELSE_3	CALL_9
0x4000f88	      0xbf00000000	                              mov edi, 0	       510	packed-backend.c	FUNCTION_15	ELSE_3	CALL_9
0x4000f8d	      0xe800000000	                          call 0x4000f92	       510	packed-backend.c	FUNCTION_15	ELSE_3	CALL_9
0x4000f92	          0x4889c2	                            mov rdx, rax	       510	packed-backend.c	FUNCTION_15	ELSE_3	CALL_9
0x4000f95	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       510	packed-backend.c	FUNCTION_15	ELSE_3	CALL_9
0x4000f9c	        0x48895010	             mov qword [rax + 0x10], rdx	       510	packed-backend.c	FUNCTION_15	ELSE_3	CALL_9
0x4000fa0	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       511	packed-backend.c	FUNCTION_15	ELSE_3
0x4000fa7	    0xc74008010000	                  mov dword [rax + 8], 1	       511	packed-backend.c	FUNCTION_15	ELSE_3
0x4000fae	    0x8b854cffffff	             mov eax, dword [rbp - 0xb4]	       513	packed-backend.c	FUNCTION_15	CALL_10
0x4000fb4	            0x89c7	                            mov edi, eax	       513	packed-backend.c	FUNCTION_15	CALL_10
0x4000fb6	      0xe800000000	                          call 0x4000fbb	       513	packed-backend.c	FUNCTION_15	CALL_10
0x4000fbb	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       515	packed-backend.c	FUNCTION_15
0x4000fc2	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       515	packed-backend.c	FUNCTION_15
0x4000fc6	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       515	packed-backend.c	FUNCTION_15
0x4000fcd	        0x48895018	             mov qword [rax + 0x18], rdx	       515	packed-backend.c	FUNCTION_15
0x4000fd1	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       516	packed-backend.c	FUNCTION_15
0x4000fd8	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       516	packed-backend.c	FUNCTION_15
0x4000fdc	    0x488b8550ffff	             mov rax, qword [rbp - 0xb0]	       516	packed-backend.c	FUNCTION_15
0x4000fe3	          0x4801c2	                            add rdx, rax	       516	packed-backend.c	FUNCTION_15
0x4000fe6	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	       516	packed-backend.c	FUNCTION_15
0x4000fed	        0x48895020	             mov qword [rax + 0x20], rdx	       516	packed-backend.c	FUNCTION_15
0x4000ff1	      0xb801000000	                              mov eax, 1	       518	packed-backend.c	FUNCTION_15
0x4000ff6	        0x488b4df8	                mov rcx, qword [rbp - 8]	       519	packed-backend.c	FUNCTION_15
0x4000ffa	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       519	packed-backend.c	FUNCTION_15
0x4001003	            0x7405	                            je 0x400100a	       519	packed-backend.c	FUNCTION_15
0x4001005	      0xe800000000	                          call 0x400100a	       519	packed-backend.c	FUNCTION_15
0x400100a	              0xc9	                                   leave	       519	packed-backend.c	FUNCTION_15
0x400100b	              0xc3	                                     ret	       519	packed-backend.c	FUNCTION_15
packed_ref_iterator_abort	SWITCH,0:FOR,0:CALL,3:ELSE,0:WHILE,0:DO,0:functions,0:IF,0	21
0x4001a9e	              0x55	                                push rbp	       895	packed-backend.c	FUNCTION_24
0x4001a9f	          0x4889e5	                            mov rbp, rsp	       895	packed-backend.c	FUNCTION_24
0x4001aa2	        0x4883ec20	                           sub rsp, 0x20	       895	packed-backend.c	FUNCTION_24
0x4001aa6	        0x48897de8	             mov qword [rbp - 0x18], rdi	       895	packed-backend.c	FUNCTION_24
0x4001aaa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       896	packed-backend.c	FUNCTION_24
0x4001aae	        0x488945f8	                mov qword [rbp - 8], rax	       896	packed-backend.c	FUNCTION_24
0x4001ab2	    0xc745f4ffffff	      mov dword [rbp - 0xc], 0xffffffff 	       898	packed-backend.c	FUNCTION_24
0x4001ab9	        0x488b45f8	                mov rax, qword [rbp - 8]	       900	packed-backend.c	FUNCTION_24	CALL_1
0x4001abd	        0x4883c068	                           add rax, 0x68	       900	packed-backend.c	FUNCTION_24	CALL_1
0x4001ac1	          0x4889c7	                            mov rdi, rax	       900	packed-backend.c	FUNCTION_24	CALL_1
0x4001ac4	      0xe800000000	                          call 0x4001ac9	       900	packed-backend.c	FUNCTION_24	CALL_1
0x4001ac9	        0x488b45f8	                mov rax, qword [rbp - 8]	       901	packed-backend.c	FUNCTION_24	CALL_2
0x4001acd	        0x488b4028	            mov rax, qword [rax + 0x28] 	       901	packed-backend.c	FUNCTION_24	CALL_2
0x4001ad1	          0x4889c7	                            mov rdi, rax	       901	packed-backend.c	FUNCTION_24	CALL_2
0x4001ad4	      0xe8bae9ffff	               call sym.release_snapshot	       901	packed-backend.c	FUNCTION_24	CALL_2
0x4001ad9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       902	packed-backend.c	FUNCTION_24	CALL_3
0x4001add	          0x4889c7	                            mov rdi, rax	       902	packed-backend.c	FUNCTION_24	CALL_3
0x4001ae0	      0xe800000000	                          call 0x4001ae5	       902	packed-backend.c	FUNCTION_24	CALL_3
0x4001ae5	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       903	packed-backend.c	FUNCTION_24
0x4001ae8	              0xc9	                                   leave	       904	packed-backend.c	FUNCTION_24
0x4001ae9	              0xc3	                                     ret	       904	packed-backend.c	FUNCTION_24
hashcmp	SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0:functions,0:IF,0	13
0x400025b	              0x55	                                push rbp	       974	cache.h	FUNCTION_71
0x400025c	          0x4889e5	                            mov rbp, rsp	       974	cache.h	FUNCTION_71
0x400025f	        0x4883ec10	                           sub rsp, 0x10	       974	cache.h	FUNCTION_71
0x4000263	        0x48897df8	                mov qword [rbp - 8], rdi	       974	cache.h	FUNCTION_71
0x4000267	        0x488975f0	             mov qword [rbp - 0x10], rsi	       974	cache.h	FUNCTION_71
0x400026b	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       975	cache.h	FUNCTION_71	CALL_1
0x400026f	        0x488b45f8	                mov rax, qword [rbp - 8]	       975	cache.h	FUNCTION_71	CALL_1
0x4000273	      0xba14000000	                           mov edx, 0x14	       975	cache.h	FUNCTION_71	CALL_1
0x4000278	          0x4889ce	                            mov rsi, rcx	       975	cache.h	FUNCTION_71	CALL_1
0x400027b	          0x4889c7	                            mov rdi, rax	       975	cache.h	FUNCTION_71	CALL_1
0x400027e	      0xe800000000	                          call 0x4000283	       975	cache.h	FUNCTION_71	CALL_1
0x4000283	              0xc9	                                   leave	       976	cache.h	FUNCTION_71
0x4000284	              0xc3	                                     ret	       976	cache.h	FUNCTION_71
packed_ref_iterator_peel	SWITCH,0:FOR,0:CALL,3:ELSE,2:WHILE,0:DO,0:functions,0:IF,2	46
0x4001a09	              0x55	                                push rbp	       880	packed-backend.c	FUNCTION_23
0x4001a0a	          0x4889e5	                            mov rbp, rsp	       880	packed-backend.c	FUNCTION_23
0x4001a0d	        0x4883ec20	                           sub rsp, 0x20	       880	packed-backend.c	FUNCTION_23
0x4001a11	        0x48897de8	             mov qword [rbp - 0x18], rdi	       880	packed-backend.c	FUNCTION_23
0x4001a15	        0x488975e0	             mov qword [rbp - 0x20], rsi	       880	packed-backend.c	FUNCTION_23
0x4001a19	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       881	packed-backend.c	FUNCTION_23
0x4001a1d	        0x488945f8	                mov qword [rbp - 8], rax	       881	packed-backend.c	FUNCTION_23
0x4001a21	        0x488b45f8	                mov rax, qword [rbp - 8]	       884	packed-backend.c	FUNCTION_23	IF_1
0x4001a25	          0x8b4020	            mov eax, dword [rax + 0x20] 	       884	packed-backend.c	FUNCTION_23	IF_1
0x4001a28	          0x83e040	                           and eax, 0x40	       884	packed-backend.c	FUNCTION_23	IF_1
0x4001a2b	            0x85c0	                           test eax, eax	       884	packed-backend.c	FUNCTION_23	IF_1
0x4001a2d	            0x7439	                            je 0x4001a68	       884	packed-backend.c	FUNCTION_23	IF_1
0x4001a2f	        0x488b45f8	                mov rax, qword [rbp - 8]	       885	packed-backend.c	FUNCTION_23	IF_1	CALL_1
0x4001a33	        0x488d5054	                   lea rdx, [rax + 0x54]	       885	packed-backend.c	FUNCTION_23	IF_1	CALL_1
0x4001a37	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       885	packed-backend.c	FUNCTION_23	IF_1	CALL_1
0x4001a3b	          0x4889d6	                            mov rsi, rdx	       885	packed-backend.c	FUNCTION_23	IF_1	CALL_1
0x4001a3e	          0x4889c7	                            mov rdi, rax	       885	packed-backend.c	FUNCTION_23	IF_1	CALL_1
0x4001a41	      0xe8b6e8ffff	                         call sym.oidcpy	       885	packed-backend.c	FUNCTION_23	IF_1	CALL_1
0x4001a46	        0x488b45f8	                mov rax, qword [rbp - 8]	       886	packed-backend.c	FUNCTION_23	IF_1	CALL_2
0x4001a4a	        0x4883c054	                           add rax, 0x54	       886	packed-backend.c	FUNCTION_23	IF_1	CALL_2
0x4001a4e	          0x4889c7	                            mov rdi, rax	       886	packed-backend.c	FUNCTION_23	IF_1	CALL_2
0x4001a51	      0xe854e8ffff	                    call sym.is_null_oid	       886	packed-backend.c	FUNCTION_23	IF_1	CALL_2
0x4001a56	            0x85c0	                           test eax, eax	       886	packed-backend.c	FUNCTION_23	IF_1	CALL_2
0x4001a58	            0x7407	                            je 0x4001a61	       886	packed-backend.c	FUNCTION_23	IF_1	CALL_2
0x4001a5a	      0xb8ffffffff	                     mov eax, 0xffffffff	       886	packed-backend.c	FUNCTION_23	IF_1	CALL_2
0x4001a5f	            0xeb3b	                           jmp 0x4001a9c	       886	packed-backend.c	FUNCTION_23	IF_1	CALL_2
0x4001a61	      0xb800000000	                              mov eax, 0	       886	packed-backend.c	FUNCTION_23	IF_1	CALL_2
0x4001a66	            0xeb34	                           jmp 0x4001a9c	       886	packed-backend.c	FUNCTION_23	IF_1	CALL_2
0x4001a68	        0x488b45f8	                mov rax, qword [rbp - 8]	       887	packed-backend.c	FUNCTION_23	ELSE_1	IF_2
0x4001a6c	          0x8b4020	            mov eax, dword [rax + 0x20] 	       887	packed-backend.c	FUNCTION_23	ELSE_1	IF_2
0x4001a6f	          0x83e005	                              and eax, 5	       887	packed-backend.c	FUNCTION_23	ELSE_1	IF_2
0x4001a72	            0x85c0	                           test eax, eax	       887	packed-backend.c	FUNCTION_23	ELSE_1	IF_2
0x4001a74	            0x7407	                            je 0x4001a7d	       887	packed-backend.c	FUNCTION_23	ELSE_1	IF_2
0x4001a76	      0xb8ffffffff	                     mov eax, 0xffffffff	       888	packed-backend.c	FUNCTION_23	ELSE_1	IF_2
0x4001a7b	            0xeb1f	                           jmp 0x4001a9c	       888	packed-backend.c	FUNCTION_23	ELSE_1	IF_2
0x4001a7d	        0x488b45f8	                mov rax, qword [rbp - 8]	       890	packed-backend.c	FUNCTION_23	ELSE_2	CALL_3
0x4001a81	        0x488d5040	                   lea rdx, [rax + 0x40]	       890	packed-backend.c	FUNCTION_23	ELSE_2	CALL_3
0x4001a85	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       890	packed-backend.c	FUNCTION_23	ELSE_2	CALL_3
0x4001a89	          0x4889c6	                            mov rsi, rax	       890	packed-backend.c	FUNCTION_23	ELSE_2	CALL_3
0x4001a8c	          0x4889d7	                            mov rdi, rdx	       890	packed-backend.c	FUNCTION_23	ELSE_2	CALL_3
0x4001a8f	      0xe800000000	                          call 0x4001a94	       890	packed-backend.c	FUNCTION_23	ELSE_2	CALL_3
0x4001a94	            0x85c0	                           test eax, eax	       890	packed-backend.c	FUNCTION_23	ELSE_2	CALL_3
0x4001a96	           0xf95c0	                                setne al	       890	packed-backend.c	FUNCTION_23	ELSE_2	CALL_3
0x4001a99	           0xfb6c0	                           movzx eax, al	       890	packed-backend.c	FUNCTION_23	ELSE_2	CALL_3
0x4001a9c	              0xc9	                                   leave	       892	packed-backend.c	FUNCTION_23
0x4001a9d	              0xc3	                                     ret	       892	packed-backend.c	FUNCTION_23
packed_transaction_cleanup	SWITCH,0:FOR,0:CALL,6:ELSE,0:WHILE,0:DO,0:functions,0:IF,3	50
0x400265b	              0x55	                                push rbp	      1374	packed-backend.c	FUNCTION_33
0x400265c	          0x4889e5	                            mov rbp, rsp	      1374	packed-backend.c	FUNCTION_33
0x400265f	        0x4883ec20	                           sub rsp, 0x20	      1374	packed-backend.c	FUNCTION_33
0x4002663	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1374	packed-backend.c	FUNCTION_33
0x4002667	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1374	packed-backend.c	FUNCTION_33
0x400266b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1375	packed-backend.c	FUNCTION_33
0x400266f	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1375	packed-backend.c	FUNCTION_33
0x4002673	        0x488945f8	                mov qword [rbp - 8], rax	      1375	packed-backend.c	FUNCTION_33
0x4002677	      0x48837df800	                  cmp qword [rbp - 8], 0	      1377	packed-backend.c	FUNCTION_33	IF_1
0x400267c	     0xf8485000000	                            je 0x4002707	      1377	packed-backend.c	FUNCTION_33	IF_1
0x4002682	        0x488b45f8	                mov rax, qword [rbp - 8]	      1378	packed-backend.c	FUNCTION_33	IF_1	CALL_1
0x4002686	        0x4883c008	                              add rax, 8	      1378	packed-backend.c	FUNCTION_33	IF_1	CALL_1
0x400268a	      0xbe00000000	                              mov esi, 0	      1378	packed-backend.c	FUNCTION_33	IF_1	CALL_1
0x400268f	          0x4889c7	                            mov rdi, rax	      1378	packed-backend.c	FUNCTION_33	IF_1	CALL_1
0x4002692	      0xe800000000	                          call 0x4002697	      1378	packed-backend.c	FUNCTION_33	IF_1	CALL_1
0x4002697	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1380	packed-backend.c	FUNCTION_33	IF_1	IF_2	CALL_2
0x400269b	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1380	packed-backend.c	FUNCTION_33	IF_1	IF_2	CALL_2
0x400269f	          0x4889c7	                            mov rdi, rax	      1380	packed-backend.c	FUNCTION_33	IF_1	IF_2	CALL_2
0x40026a2	      0xe8a0dcffff	             call sym.is_tempfile_active	      1380	packed-backend.c	FUNCTION_33	IF_1	IF_2	CALL_2
0x40026a7	            0x85c0	                           test eax, eax	      1380	packed-backend.c	FUNCTION_33	IF_1	IF_2	CALL_2
0x40026a9	            0x7410	                            je 0x40026bb	      1380	packed-backend.c	FUNCTION_33	IF_1	IF_2	CALL_2
0x40026ab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1381	packed-backend.c	FUNCTION_33	IF_1	CALL_3
0x40026af	        0x4883c028	                           add rax, 0x28	      1381	packed-backend.c	FUNCTION_33	IF_1	CALL_3
0x40026b3	          0x4889c7	                            mov rdi, rax	      1381	packed-backend.c	FUNCTION_33	IF_1	CALL_3
0x40026b6	      0xe800000000	                          call 0x40026bb	      1381	packed-backend.c	FUNCTION_33	IF_1	CALL_3
0x40026bb	        0x488b45f8	                mov rax, qword [rbp - 8]	      1383	packed-backend.c	FUNCTION_33	IF_1	IF_3	CALL_4
0x40026bf	            0x8b00	                    mov eax, dword [rax]	      1383	packed-backend.c	FUNCTION_33	IF_1	IF_3	CALL_4
0x40026c1	            0x85c0	                           test eax, eax	      1383	packed-backend.c	FUNCTION_33	IF_1	IF_3	CALL_4
0x40026c3	            0x742a	                            je 0x40026ef	      1383	packed-backend.c	FUNCTION_33	IF_1	IF_3	CALL_4
0x40026c5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1383	packed-backend.c	FUNCTION_33	IF_1	IF_3	CALL_4
0x40026c9	        0x4883c020	                           add rax, 0x20	      1383	packed-backend.c	FUNCTION_33	IF_1	IF_3	CALL_4
0x40026cd	          0x4889c7	                            mov rdi, rax	      1383	packed-backend.c	FUNCTION_33	IF_1	IF_3	CALL_4
0x40026d0	      0xe89adcffff	            call sym.is_lock_file_locked	      1383	packed-backend.c	FUNCTION_33	IF_1	IF_3	CALL_4
0x40026d5	            0x85c0	                           test eax, eax	      1383	packed-backend.c	FUNCTION_33	IF_1	IF_3	CALL_4
0x40026d7	            0x7416	                            je 0x40026ef	      1383	packed-backend.c	FUNCTION_33	IF_1	IF_3	CALL_4
0x40026d9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1384	packed-backend.c	FUNCTION_33	IF_1	IF_3	CALL_5
0x40026dd	          0x4889c7	                            mov rdi, rax	      1384	packed-backend.c	FUNCTION_33	IF_1	IF_3	CALL_5
0x40026e0	      0xe800000000	                          call 0x40026e5	      1384	packed-backend.c	FUNCTION_33	IF_1	IF_3	CALL_5
0x40026e5	        0x488b45f8	                mov rax, qword [rbp - 8]	      1385	packed-backend.c	FUNCTION_33	IF_1	IF_3
0x40026e9	    0xc70000000000	                      mov dword [rax], 0	      1385	packed-backend.c	FUNCTION_33	IF_1	IF_3
0x40026ef	        0x488b45f8	                mov rax, qword [rbp - 8]	      1388	packed-backend.c	FUNCTION_33	IF_1	CALL_6
0x40026f3	          0x4889c7	                            mov rdi, rax	      1388	packed-backend.c	FUNCTION_33	IF_1	CALL_6
0x40026f6	      0xe800000000	                          call 0x40026fb	      1388	packed-backend.c	FUNCTION_33	IF_1	CALL_6
0x40026fb	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1389	packed-backend.c	FUNCTION_33	IF_1
0x40026ff	    0x48c740280000	               mov qword [rax + 0x28], 0	      1389	packed-backend.c	FUNCTION_33	IF_1
0x4002707	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1392	packed-backend.c	FUNCTION_33
0x400270b	    0xc74020020000	               mov dword [rax + 0x20], 2	      1392	packed-backend.c	FUNCTION_33
0x4002712	              0x90	                                     nop	      1393	packed-backend.c	FUNCTION_33
0x4002713	              0xc9	                                   leave	      1393	packed-backend.c	FUNCTION_33
0x4002714	              0xc3	                                     ret	      1393	packed-backend.c	FUNCTION_33
rollback_lock_file	SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0:functions,0:IF,0	10
0x40003a9	              0x55	                                push rbp	       303	lockfile.h	FUNCTION_63
0x40003aa	          0x4889e5	                            mov rbp, rsp	       303	lockfile.h	FUNCTION_63
0x40003ad	        0x4883ec10	                           sub rsp, 0x10	       303	lockfile.h	FUNCTION_63
0x40003b1	        0x48897df8	                mov qword [rbp - 8], rdi	       303	lockfile.h	FUNCTION_63
0x40003b5	        0x488b45f8	                mov rax, qword [rbp - 8]	       304	lockfile.h	FUNCTION_63	CALL_1
0x40003b9	          0x4889c7	                            mov rdi, rax	       304	lockfile.h	FUNCTION_63	CALL_1
0x40003bc	      0xe800000000	                          call 0x40003c1	       304	lockfile.h	FUNCTION_63	CALL_1
0x40003c1	              0x90	                                     nop	       305	lockfile.h	FUNCTION_63
0x40003c2	              0xc9	                                   leave	       305	lockfile.h	FUNCTION_63
0x40003c3	              0xc3	                                     ret	       305	lockfile.h	FUNCTION_63
write_packed_entry	SWITCH,0:FOR,0:CALL,4:ELSE,0:WHILE,0:DO,0:functions,0:IF,1	39
0x4001c5b	              0x55	                                push rbp	       973	packed-backend.c	FUNCTION_26
0x4001c5c	          0x4889e5	                            mov rbp, rsp	       973	packed-backend.c	FUNCTION_26
0x4001c5f	        0x4883ec20	                           sub rsp, 0x20	       973	packed-backend.c	FUNCTION_26
0x4001c63	        0x48897df8	                mov qword [rbp - 8], rdi	       973	packed-backend.c	FUNCTION_26
0x4001c67	        0x488975f0	             mov qword [rbp - 0x10], rsi	       973	packed-backend.c	FUNCTION_26
0x4001c6b	        0x488955e8	             mov qword [rbp - 0x18], rdx	       973	packed-backend.c	FUNCTION_26
0x4001c6f	        0x48894de0	             mov qword [rbp - 0x20], rcx	       973	packed-backend.c	FUNCTION_26
0x4001c73	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x4001c77	          0x4889c7	                            mov rdi, rax	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x4001c7a	      0xe800000000	                          call 0x4001c7f	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x4001c7f	          0x4889c6	                            mov rsi, rax	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x4001c82	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x4001c86	        0x488b45f8	                mov rax, qword [rbp - 8]	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x4001c8a	          0x4889d1	                            mov rcx, rdx	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x4001c8d	          0x4889f2	                            mov rdx, rsi	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x4001c90	      0xbe00000000	                              mov esi, 0	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x4001c95	          0x4889c7	                            mov rdi, rax	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x4001c98	      0xb800000000	                              mov eax, 0	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x4001c9d	      0xe800000000	                          call 0x4001ca2	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x4001ca2	            0x85c0	                           test eax, eax	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x4001ca4	            0x7830	                            js 0x4001cd6	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x4001ca6	      0x48837de000	               cmp qword [rbp - 0x20], 0	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x4001cab	            0x7430	                            je 0x4001cdd	       974	packed-backend.c	FUNCTION_26	IF_1	CALL_2
0x4001cad	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       975	packed-backend.c	FUNCTION_26	IF_1	CALL_4
0x4001cb1	          0x4889c7	                            mov rdi, rax	       975	packed-backend.c	FUNCTION_26	IF_1	CALL_4
0x4001cb4	      0xe800000000	                          call 0x4001cb9	       975	packed-backend.c	FUNCTION_26	IF_1	CALL_4
0x4001cb9	          0x4889c2	                            mov rdx, rax	       975	packed-backend.c	FUNCTION_26	IF_1	CALL_4
0x4001cbc	        0x488b45f8	                mov rax, qword [rbp - 8]	       975	packed-backend.c	FUNCTION_26	IF_1	CALL_4
0x4001cc0	      0xbe00000000	                              mov esi, 0	       975	packed-backend.c	FUNCTION_26	IF_1	CALL_4
0x4001cc5	          0x4889c7	                            mov rdi, rax	       975	packed-backend.c	FUNCTION_26	IF_1	CALL_4
0x4001cc8	      0xb800000000	                              mov eax, 0	       975	packed-backend.c	FUNCTION_26	IF_1	CALL_4
0x4001ccd	      0xe800000000	                          call 0x4001cd2	       975	packed-backend.c	FUNCTION_26	IF_1	CALL_4
0x4001cd2	            0x85c0	                           test eax, eax	       975	packed-backend.c	FUNCTION_26	IF_1	CALL_4
0x4001cd4	            0x7907	                           jns 0x4001cdd	       975	packed-backend.c	FUNCTION_26	IF_1	CALL_4
0x4001cd6	      0xb8ffffffff	                     mov eax, 0xffffffff	       976	packed-backend.c	FUNCTION_26	IF_1
0x4001cdb	            0xeb05	                           jmp 0x4001ce2	       976	packed-backend.c	FUNCTION_26	IF_1
0x4001cdd	      0xb800000000	                              mov eax, 0	       978	packed-backend.c	FUNCTION_26
0x4001ce2	              0xc9	                                   leave	       979	packed-backend.c	FUNCTION_26
0x4001ce3	              0xc3	                                     ret	       979	packed-backend.c	FUNCTION_26
create_snapshot	SWITCH,0:FOR,0:CALL,20:ELSE,1:WHILE,0:DO,0:functions,0:IF,8	208
0x40010e8	              0x55	                                push rbp	       616	packed-backend.c	ELSE_3	FUNCTION_17
0x40010e9	          0x4889e5	                            mov rbp, rsp	       616	packed-backend.c	ELSE_3	FUNCTION_17
0x40010ec	        0x4883c480	             add rsp, 0xffffffffffffff80	       616	packed-backend.c	ELSE_3	FUNCTION_17
0x40010f0	        0x48897d88	             mov qword [rbp - 0x78], rdi	       616	packed-backend.c	ELSE_3	FUNCTION_17
0x40010f4	    0x64488b042528	                mov rax, qword fs:[0x28]	       616	packed-backend.c	ELSE_3	FUNCTION_17
0x40010fd	        0x488945f8	                mov qword [rbp - 8], rax	       616	packed-backend.c	ELSE_3	FUNCTION_17
0x4001101	            0x31c0	                            xor eax, eax	       616	packed-backend.c	ELSE_3	FUNCTION_17
0x4001103	      0xbe38000000	                           mov esi, 0x38	       617	packed-backend.c	ELSE_3	FUNCTION_17	CALL_1
0x4001108	      0xbf01000000	                              mov edi, 1	       617	packed-backend.c	ELSE_3	FUNCTION_17	CALL_1
0x400110d	      0xe800000000	                          call 0x4001112	       617	packed-backend.c	ELSE_3	FUNCTION_17	CALL_1
0x4001112	        0x488945a8	             mov qword [rbp - 0x58], rax	       617	packed-backend.c	ELSE_3	FUNCTION_17	CALL_1
0x4001116	    0xc7459c000000	               mov dword [rbp - 0x64], 0	       618	packed-backend.c	ELSE_3	FUNCTION_17
0x400111d	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       620	packed-backend.c	ELSE_3	FUNCTION_17
0x4001121	        0x488b5588	             mov rdx, qword [rbp - 0x78]	       620	packed-backend.c	ELSE_3	FUNCTION_17
0x4001125	          0x488910	                    mov qword [rax], rdx	       620	packed-backend.c	ELSE_3	FUNCTION_17
0x4001128	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       621	packed-backend.c	ELSE_3	FUNCTION_17	CALL_2
0x400112c	          0x4889c7	                            mov rdi, rax	       621	packed-backend.c	ELSE_3	FUNCTION_17	CALL_2
0x400112f	      0xe890f2ffff	               call sym.acquire_snapshot	       621	packed-backend.c	ELSE_3	FUNCTION_17	CALL_2
0x4001134	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       622	packed-backend.c	ELSE_3	FUNCTION_17
0x4001138	    0xc74028000000	               mov dword [rax + 0x28], 0	       622	packed-backend.c	ELSE_3	FUNCTION_17
0x400113f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       624	packed-backend.c	ELSE_3	FUNCTION_17	IF_1	CALL_3
0x4001143	          0x4889c7	                            mov rdi, rax	       624	packed-backend.c	ELSE_3	FUNCTION_17	IF_1	CALL_3
0x4001146	      0xe86cfcffff	                  call sym.load_contents	       624	packed-backend.c	ELSE_3	FUNCTION_17	IF_1	CALL_3
0x400114b	            0x85c0	                           test eax, eax	       624	packed-backend.c	ELSE_3	FUNCTION_17	IF_1	CALL_3
0x400114d	            0x7509	                           jne 0x4001158	       624	packed-backend.c	ELSE_3	FUNCTION_17	IF_1	CALL_3
0x400114f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       625	packed-backend.c	ELSE_3	FUNCTION_17	IF_1
0x4001153	      0xe9af020000	                           jmp 0x4001407	       625	packed-backend.c	ELSE_3	FUNCTION_17	IF_1
0x4001158	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       628	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x400115c	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       628	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x4001160	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       628	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x4001164	        0x488b4020	            mov rax, qword [rax + 0x20] 	       628	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x4001168	          0x4839c2	                            cmp rdx, rax	       628	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x400116b	     0xf83c7010000	                           jae 0x4001338	       628	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x4001171	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       628	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x4001175	        0x488b4010	            mov rax, qword [rax + 0x10] 	       628	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x4001179	           0xfb600	                   movzx eax, byte [rax]	       628	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x400117c	            0x3c23	                            cmp al, 0x23	       628	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x400117e	     0xf85b4010000	                           jne 0x4001338	       628	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x4001184	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       630	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x400118c	    0xc745d8000000	               mov dword [rbp - 0x28], 0	       630	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x4001193	    0xc745dc000000	               mov dword [rbp - 0x24], 0	       630	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x400119a	         0xfb645e0	            movzx eax, byte [rbp - 0x20]	       630	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x400119e	          0x83e0fe	                     and eax, 0xfffffffe	       630	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x40011a1	          0x8845e0	               mov byte [rbp - 0x20], al	       630	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x40011a4	    0x48c745e80000	               mov qword [rbp - 0x18], 0	       630	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x40011ac	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       633	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x40011b0	        0x488b4020	            mov rax, qword [rax + 0x20] 	       633	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x40011b4	          0x4889c2	                            mov rdx, rax	       633	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x40011b7	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       633	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x40011bb	        0x488b4010	            mov rax, qword [rax + 0x10] 	       633	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x40011bf	          0x4829c2	                            sub rdx, rax	       633	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x40011c2	          0x4889d0	                            mov rax, rdx	       633	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x40011c5	          0x4889c2	                            mov rdx, rax	       632	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_4
0x40011c8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       632	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_4
0x40011cc	        0x488b4010	            mov rax, qword [rax + 0x10] 	       632	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_4
0x40011d0	      0xbe0a000000	                            mov esi, 0xa	       632	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_4
0x40011d5	          0x4889c7	                            mov rdi, rax	       632	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_4
0x40011d8	      0xe800000000	                          call 0x40011dd	       632	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_4
0x40011dd	        0x488945b0	             mov qword [rbp - 0x50], rax	       632	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_4
0x40011e1	      0x48837db000	               cmp qword [rbp - 0x50], 0	       634	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_3
0x40011e6	            0x7537	                           jne 0x400121f	       634	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_3
0x40011e8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       637	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_3
0x40011ec	        0x488b4020	            mov rax, qword [rax + 0x20] 	       637	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_3
0x40011f0	          0x4889c2	                            mov rdx, rax	       637	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_3
0x40011f3	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       637	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_3
0x40011f7	        0x488b4010	            mov rax, qword [rax + 0x10] 	       637	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_3
0x40011fb	          0x4829c2	                            sub rdx, rax	       637	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_3
0x40011fe	          0x4889d0	                            mov rax, rdx	       637	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_3
0x4001201	          0x4889c2	                            mov rdx, rax	       635	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_3	CALL_5
0x4001204	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       636	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_3
0x4001208	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       636	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_3
0x400120c	        0x488b4588	             mov rax, qword [rbp - 0x78]	       635	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_3	CALL_5
0x4001210	        0x488b4010	            mov rax, qword [rax + 0x10] 	       635	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_3	CALL_5
0x4001214	          0x4889ce	                            mov rsi, rcx	       635	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_3	CALL_5
0x4001217	          0x4889c7	                            mov rdi, rax	       635	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_3	CALL_5
0x400121a	      0xe809f4ffff	          call sym.die_unterminated_line	       635	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_3	CALL_5
0x400121f	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       639	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_6
0x4001223	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       639	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_6
0x4001227	        0x488b4010	            mov rax, qword [rax + 0x10] 	       639	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_6
0x400122b	          0x4829c2	                            sub rdx, rax	       639	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_6
0x400122e	          0x4889d0	                            mov rax, rdx	       639	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_6
0x4001231	          0x4889c2	                            mov rdx, rax	       639	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_6
0x4001234	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       639	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_6
0x4001238	        0x488b4010	            mov rax, qword [rax + 0x10] 	       639	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_6
0x400123c	          0x4889d6	                            mov rsi, rdx	       639	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_6
0x400123f	          0x4889c7	                            mov rdi, rax	       639	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_6
0x4001242	      0xe800000000	                          call 0x4001247	       639	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_6
0x4001247	        0x488945b8	             mov qword [rbp - 0x48], rax	       639	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_6
0x400124b	        0x488d55a0	                   lea rdx, [rbp - 0x60]	       641	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4	CALL_7
0x400124f	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       641	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4	CALL_7
0x4001253	      0xbe00000000	                              mov esi, 0	       641	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4	CALL_7
0x4001258	          0x4889c7	                            mov rdi, rax	       641	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4	CALL_7
0x400125b	      0xe8ebedffff	                    call sym.skip_prefix	       641	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4	CALL_7
0x4001260	            0x85c0	                           test eax, eax	       641	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4	CALL_7
0x4001262	            0x7537	                           jne 0x400129b	       641	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4	CALL_7
0x4001264	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       644	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4
0x4001268	        0x488b4020	            mov rax, qword [rax + 0x20] 	       644	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4
0x400126c	          0x4889c2	                            mov rdx, rax	       644	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4
0x400126f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       644	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4
0x4001273	        0x488b4010	            mov rax, qword [rax + 0x10] 	       644	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4
0x4001277	          0x4829c2	                            sub rdx, rax	       644	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4
0x400127a	          0x4889d0	                            mov rax, rdx	       644	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4
0x400127d	          0x4889c2	                            mov rdx, rax	       642	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4	CALL_8
0x4001280	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       643	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4
0x4001284	        0x488b4810	            mov rcx, qword [rax + 0x10] 	       643	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4
0x4001288	        0x488b4588	             mov rax, qword [rbp - 0x78]	       642	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4	CALL_8
0x400128c	        0x488b4010	            mov rax, qword [rax + 0x10] 	       642	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4	CALL_8
0x4001290	          0x4889ce	                            mov rsi, rcx	       642	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4	CALL_8
0x4001293	          0x4889c7	                            mov rdi, rax	       642	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4	CALL_8
0x4001296	      0xe8e7f3ffff	               call sym.die_invalid_line	       642	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_4	CALL_8
0x400129b	        0x488b75a0	             mov rsi, qword [rbp - 0x60]	       646	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_9
0x400129f	        0x488d45d0	                   lea rax, [rbp - 0x30]	       646	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_9
0x40012a3	      0xb9ffffffff	                     mov ecx, 0xffffffff	       646	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_9
0x40012a8	      0xba20000000	                           mov edx, 0x20	       646	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_9
0x40012ad	          0x4889c7	                            mov rdi, rax	       646	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_9
0x40012b0	      0xe800000000	                          call 0x40012b5	       646	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_9
0x40012b5	        0x488d45d0	                   lea rax, [rbp - 0x30]	       648	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_5	CALL_10
0x40012b9	      0xbe00000000	                              mov esi, 0	       648	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_5	CALL_10
0x40012be	          0x4889c7	                            mov rdi, rax	       648	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_5	CALL_10
0x40012c1	      0xe800000000	                          call 0x40012c6	       648	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_5	CALL_10
0x40012c6	            0x85c0	                           test eax, eax	       648	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_5	CALL_10
0x40012c8	            0x740d	                            je 0x40012d7	       648	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_5	CALL_10
0x40012ca	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       649	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_5
0x40012ce	    0xc74028020000	               mov dword [rax + 0x28], 2	       649	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_5
0x40012d5	            0xeb20	                           jmp 0x40012f7	       649	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	IF_5
0x40012d7	        0x488d45d0	                   lea rax, [rbp - 0x30]	       650	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	ELSE_1	IF_6	CALL_11
0x40012db	      0xbe00000000	                              mov esi, 0	       650	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	ELSE_1	IF_6	CALL_11
0x40012e0	          0x4889c7	                            mov rdi, rax	       650	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	ELSE_1	IF_6	CALL_11
0x40012e3	      0xe800000000	                          call 0x40012e8	       650	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	ELSE_1	IF_6	CALL_11
0x40012e8	            0x85c0	                           test eax, eax	       650	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	ELSE_1	IF_6	CALL_11
0x40012ea	            0x740b	                            je 0x40012f7	       650	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	ELSE_1	IF_6	CALL_11
0x40012ec	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       651	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	ELSE_1	IF_6
0x40012f0	    0xc74028010000	               mov dword [rax + 0x28], 1	       651	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	ELSE_1	IF_6
0x40012f7	        0x488d45d0	                   lea rax, [rbp - 0x30]	       653	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_12
0x40012fb	      0xbe00000000	                              mov esi, 0	       653	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_12
0x4001300	          0x4889c7	                            mov rdi, rax	       653	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_12
0x4001303	      0xe800000000	                          call 0x4001308	       653	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_12
0x4001308	          0x89459c	             mov dword [rbp - 0x64], eax	       653	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_12
0x400130b	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       658	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x400130f	        0x488d5001	                      lea rdx, [rax + 1]	       658	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x4001313	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       658	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x4001317	        0x48895018	             mov qword [rax + 0x18], rdx	       658	packed-backend.c	ELSE_3	FUNCTION_17	IF_2
0x400131b	        0x488d45d0	                   lea rax, [rbp - 0x30]	       660	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_13
0x400131f	      0xbe00000000	                              mov esi, 0	       660	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_13
0x4001324	          0x4889c7	                            mov rdi, rax	       660	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_13
0x4001327	      0xe800000000	                          call 0x400132c	       660	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_13
0x400132c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       661	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_14
0x4001330	          0x4889c7	                            mov rdi, rax	       661	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_14
0x4001333	      0xe800000000	                          call 0x4001338	       661	packed-backend.c	ELSE_3	FUNCTION_17	IF_2	CALL_14
0x4001338	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       664	packed-backend.c	ELSE_3	FUNCTION_17	CALL_15
0x400133c	          0x4889c7	                            mov rdi, rax	       664	packed-backend.c	ELSE_3	FUNCTION_17	CALL_15
0x400133f	      0xe8d9f9ffff	             call sym.verify_buffer_safe	       664	packed-backend.c	ELSE_3	FUNCTION_17	CALL_15
0x4001344	        0x837d9c00	               cmp dword [rbp - 0x64], 0	       666	packed-backend.c	ELSE_3	FUNCTION_17	IF_7
0x4001348	            0x7518	                           jne 0x4001362	       666	packed-backend.c	ELSE_3	FUNCTION_17	IF_7
0x400134a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       667	packed-backend.c	ELSE_3	FUNCTION_17	IF_7	CALL_16
0x400134e	          0x4889c7	                            mov rdi, rax	       667	packed-backend.c	ELSE_3	FUNCTION_17	IF_7	CALL_16
0x4001351	      0xe81ef5ffff	                  call sym.sort_snapshot	       667	packed-backend.c	ELSE_3	FUNCTION_17	IF_7	CALL_16
0x4001356	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       674	packed-backend.c	ELSE_3	FUNCTION_17	IF_7	CALL_17
0x400135a	          0x4889c7	                            mov rdi, rax	       674	packed-backend.c	ELSE_3	FUNCTION_17	IF_7	CALL_17
0x400135d	      0xe8bbf9ffff	             call sym.verify_buffer_safe	       674	packed-backend.c	ELSE_3	FUNCTION_17	IF_7	CALL_17
0x4001362	    0x8b0500000000	            mov eax, dword [0x04001368] 	       677	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x4001368	          0x83f802	                              cmp eax, 2	       677	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x400136b	     0xf8492000000	                            je 0x4001403	       677	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x4001371	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       677	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x4001375	          0x8b4008	                mov eax, dword [rax + 8]	       677	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x4001378	            0x85c0	                           test eax, eax	       677	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x400137a	     0xf8483000000	                            je 0x4001403	       677	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x4001380	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       682	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x4001384	        0x488b4020	            mov rax, qword [rax + 0x20] 	       682	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x4001388	          0x4889c2	                            mov rdx, rax	       682	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x400138b	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       682	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x400138f	        0x488b4018	            mov rax, qword [rax + 0x18] 	       682	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x4001393	          0x4829c2	                            sub rdx, rax	       682	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x4001396	          0x4889d0	                            mov rax, rdx	       682	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x4001399	        0x488945c0	             mov qword [rbp - 0x40], rax	       682	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x400139d	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       683	packed-backend.c	ELSE_3	FUNCTION_17	IF_8	CALL_18
0x40013a1	          0x4889c7	                            mov rdi, rax	       683	packed-backend.c	ELSE_3	FUNCTION_17	IF_8	CALL_18
0x40013a4	      0xe800000000	                          call 0x40013a9	       683	packed-backend.c	ELSE_3	FUNCTION_17	IF_8	CALL_18
0x40013a9	        0x488945c8	             mov qword [rbp - 0x38], rax	       683	packed-backend.c	ELSE_3	FUNCTION_17	IF_8	CALL_18
0x40013ad	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       685	packed-backend.c	ELSE_3	FUNCTION_17	IF_8	CALL_19
0x40013b1	        0x488b4818	            mov rcx, qword [rax + 0x18] 	       685	packed-backend.c	ELSE_3	FUNCTION_17	IF_8	CALL_19
0x40013b5	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       685	packed-backend.c	ELSE_3	FUNCTION_17	IF_8	CALL_19
0x40013b9	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       685	packed-backend.c	ELSE_3	FUNCTION_17	IF_8	CALL_19
0x40013bd	          0x4889ce	                            mov rsi, rcx	       685	packed-backend.c	ELSE_3	FUNCTION_17	IF_8	CALL_19
0x40013c0	          0x4889c7	                            mov rdi, rax	       685	packed-backend.c	ELSE_3	FUNCTION_17	IF_8	CALL_19
0x40013c3	      0xe800000000	                          call 0x40013c8	       685	packed-backend.c	ELSE_3	FUNCTION_17	IF_8	CALL_19
0x40013c8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       686	packed-backend.c	ELSE_3	FUNCTION_17	IF_8	CALL_20
0x40013cc	          0x4889c7	                            mov rdi, rax	       686	packed-backend.c	ELSE_3	FUNCTION_17	IF_8	CALL_20
0x40013cf	      0xe80cf0ffff	          call sym.clear_snapshot_buffer	       686	packed-backend.c	ELSE_3	FUNCTION_17	IF_8	CALL_20
0x40013d4	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       687	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x40013d8	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       687	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x40013dc	        0x48895018	             mov qword [rax + 0x18], rdx	       687	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x40013e0	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       687	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x40013e4	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       687	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x40013e8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       687	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x40013ec	        0x48895010	             mov qword [rax + 0x10], rdx	       687	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x40013f0	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       688	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x40013f4	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       688	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x40013f8	          0x4801c2	                            add rdx, rax	       688	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x40013fb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       688	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x40013ff	        0x48895020	             mov qword [rax + 0x20], rdx	       688	packed-backend.c	ELSE_3	FUNCTION_17	IF_8
0x4001403	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       691	packed-backend.c	ELSE_3	FUNCTION_17
0x4001407	        0x488b4df8	                mov rcx, qword [rbp - 8]	       692	packed-backend.c	ELSE_3	FUNCTION_17
0x400140b	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       692	packed-backend.c	ELSE_3	FUNCTION_17
0x4001414	            0x7405	                            je 0x400141b	       692	packed-backend.c	ELSE_3	FUNCTION_17
0x4001416	      0xe800000000	                          call 0x400141b	       692	packed-backend.c	ELSE_3	FUNCTION_17
0x400141b	              0xc9	                                   leave	       692	packed-backend.c	ELSE_3	FUNCTION_17
0x400141c	              0xc3	                                     ret	       692	packed-backend.c	ELSE_3	FUNCTION_17
cmp_packed_ref_records	SWITCH,0:FOR,0:CALL,0:ELSE,1:WHILE,1:DO,0:functions,0:IF,3	56
0x400072a	              0x55	                                push rbp	       275	packed-backend.c	FUNCTION_9
0x400072b	          0x4889e5	                            mov rbp, rsp	       275	packed-backend.c	FUNCTION_9
0x400072e	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       275	packed-backend.c	FUNCTION_9
0x4000732	        0x488975d0	             mov qword [rbp - 0x30], rsi	       275	packed-backend.c	FUNCTION_9
0x4000736	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       276	packed-backend.c	FUNCTION_9
0x400073a	        0x488945f0	             mov qword [rbp - 0x10], rax	       276	packed-backend.c	FUNCTION_9
0x400073e	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       276	packed-backend.c	FUNCTION_9
0x4000742	        0x488945f8	                mov qword [rbp - 8], rax	       276	packed-backend.c	FUNCTION_9
0x4000746	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       277	packed-backend.c	FUNCTION_9
0x400074a	          0x488b00	                    mov rax, qword [rax]	       277	packed-backend.c	FUNCTION_9
0x400074d	        0x4883c029	                           add rax, 0x29	       277	packed-backend.c	FUNCTION_9
0x4000751	        0x488945e0	             mov qword [rbp - 0x20], rax	       277	packed-backend.c	FUNCTION_9
0x4000755	        0x488b45f8	                mov rax, qword [rbp - 8]	       278	packed-backend.c	FUNCTION_9
0x4000759	          0x488b00	                    mov rax, qword [rax]	       278	packed-backend.c	FUNCTION_9
0x400075c	        0x4883c029	                           add rax, 0x29	       278	packed-backend.c	FUNCTION_9
0x4000760	        0x488945e8	             mov qword [rbp - 0x18], rax	       278	packed-backend.c	FUNCTION_9
0x4000764	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       281	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x4000768	           0xfb600	                   movzx eax, byte [rax]	       281	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x400076b	            0x3c0a	                             cmp al, 0xa	       281	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x400076d	            0x7519	                           jne 0x4000788	       281	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x400076f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       282	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x4000773	           0xfb600	                   movzx eax, byte [rax]	       282	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x4000776	            0x3c0a	                             cmp al, 0xa	       282	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x4000778	            0x7507	                           jne 0x4000781	       282	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x400077a	      0xb800000000	                              mov eax, 0	       282	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x400077f	            0xeb59	                           jmp 0x40007da	       282	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x4000781	      0xb8ffffffff	                     mov eax, 0xffffffff	       282	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x4000786	            0xeb52	                           jmp 0x40007da	       282	packed-backend.c	FUNCTION_9	WHILE_1	IF_1
0x4000788	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       283	packed-backend.c	FUNCTION_9	WHILE_1	IF_2
0x400078c	           0xfb610	                   movzx edx, byte [rax]	       283	packed-backend.c	FUNCTION_9	WHILE_1	IF_2
0x400078f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       283	packed-backend.c	FUNCTION_9	WHILE_1	IF_2
0x4000793	           0xfb600	                   movzx eax, byte [rax]	       283	packed-backend.c	FUNCTION_9	WHILE_1	IF_2
0x4000796	            0x38c2	                              cmp dl, al	       283	packed-backend.c	FUNCTION_9	WHILE_1	IF_2
0x4000798	            0x7434	                            je 0x40007ce	       283	packed-backend.c	FUNCTION_9	WHILE_1	IF_2
0x400079a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       284	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	IF_3
0x400079e	           0xfb600	                   movzx eax, byte [rax]	       284	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	IF_3
0x40007a1	            0x3c0a	                             cmp al, 0xa	       284	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	IF_3
0x40007a3	            0x7507	                           jne 0x40007ac	       284	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	IF_3
0x40007a5	      0xb801000000	                              mov eax, 1	       285	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	IF_3
0x40007aa	            0xeb2e	                           jmp 0x40007da	       285	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	IF_3
0x40007ac	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       287	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	ELSE_1
0x40007b0	           0xfb600	                   movzx eax, byte [rax]	       287	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	ELSE_1
0x40007b3	            0x89c2	                            mov edx, eax	       287	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	ELSE_1
0x40007b5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       287	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	ELSE_1
0x40007b9	           0xfb600	                   movzx eax, byte [rax]	       287	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	ELSE_1
0x40007bc	            0x38c2	                              cmp dl, al	       287	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	ELSE_1
0x40007be	            0x7307	                           jae 0x40007c7	       287	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	ELSE_1
0x40007c0	      0xb8ffffffff	                     mov eax, 0xffffffff	       287	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	ELSE_1
0x40007c5	            0xeb13	                           jmp 0x40007da	       287	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	ELSE_1
0x40007c7	      0xb801000000	                              mov eax, 1	       287	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	ELSE_1
0x40007cc	            0xeb0c	                           jmp 0x40007da	       287	packed-backend.c	FUNCTION_9	WHILE_1	IF_2	ELSE_1
0x40007ce	      0x488345e001	               add qword [rbp - 0x20], 1	       289	packed-backend.c	FUNCTION_9	WHILE_1
0x40007d3	      0x488345e801	               add qword [rbp - 0x18], 1	       290	packed-backend.c	FUNCTION_9	WHILE_1
0x40007d8	            0xeb8a	                           jmp 0x4000764	       291	packed-backend.c	FUNCTION_9	WHILE_1
0x40007da	              0x5d	                                 pop rbp	       292	packed-backend.c	FUNCTION_9
0x40007db	              0xc3	                                     ret	       292	packed-backend.c	FUNCTION_9
packed_pack_refs	SWITCH,0:FOR,0:CALL,0:ELSE,0:WHILE,0:DO,0:functions,0:IF,0	7
0x4002bbe	              0x55	                                push rbp	      1553	packed-backend.c	FUNCTION_39
0x4002bbf	          0x4889e5	                            mov rbp, rsp	      1553	packed-backend.c	FUNCTION_39
0x4002bc2	        0x48897df8	                mov qword [rbp - 8], rdi	      1553	packed-backend.c	FUNCTION_39
0x4002bc6	          0x8975f4	              mov dword [rbp - 0xc], esi	      1553	packed-backend.c	FUNCTION_39
0x4002bc9	      0xb800000000	                              mov eax, 0	      1559	packed-backend.c	FUNCTION_39
0x4002bce	              0x5d	                                 pop rbp	      1560	packed-backend.c	FUNCTION_39
0x4002bcf	              0xc3	                                     ret	      1560	packed-backend.c	FUNCTION_39
packed_reflog_expire	SWITCH,0:FOR,0:CALL,0:ELSE,0:WHILE,0:DO,0:functions,0:IF,0	11
0x4002cda	              0x55	                                push rbp	      1629	packed-backend.c	FUNCTION_49
0x4002cdb	          0x4889e5	                            mov rbp, rsp	      1629	packed-backend.c	FUNCTION_49
0x4002cde	        0x48897df8	                mov qword [rbp - 8], rdi	      1629	packed-backend.c	FUNCTION_49
0x4002ce2	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1629	packed-backend.c	FUNCTION_49
0x4002ce6	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1629	packed-backend.c	FUNCTION_49
0x4002cea	          0x894de4	             mov dword [rbp - 0x1c], ecx	      1629	packed-backend.c	FUNCTION_49
0x4002ced	        0x4c8945d8	              mov qword [rbp - 0x28], r8	      1629	packed-backend.c	FUNCTION_49
0x4002cf1	        0x4c894dd0	              mov qword [rbp - 0x30], r9	      1629	packed-backend.c	FUNCTION_49
0x4002cf5	      0xb800000000	                              mov eax, 0	      1630	packed-backend.c	FUNCTION_49
0x4002cfa	              0x5d	                                 pop rbp	      1631	packed-backend.c	FUNCTION_49
0x4002cfb	              0xc3	                                     ret	      1631	packed-backend.c	FUNCTION_49
oidcmp	SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0:functions,0:IF,0	12
0x4000285	              0x55	                                push rbp	       979	cache.h	FUNCTION_72
0x4000286	          0x4889e5	                            mov rbp, rsp	       979	cache.h	FUNCTION_72
0x4000289	        0x4883ec10	                           sub rsp, 0x10	       979	cache.h	FUNCTION_72
0x400028d	        0x48897df8	                mov qword [rbp - 8], rdi	       979	cache.h	FUNCTION_72
0x4000291	        0x488975f0	             mov qword [rbp - 0x10], rsi	       979	cache.h	FUNCTION_72
0x4000295	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       980	cache.h	FUNCTION_72	CALL_1
0x4000299	        0x488b45f8	                mov rax, qword [rbp - 8]	       980	cache.h	FUNCTION_72	CALL_1
0x400029d	          0x4889d6	                            mov rsi, rdx	       980	cache.h	FUNCTION_72	CALL_1
0x40002a0	          0x4889c7	                            mov rdi, rax	       980	cache.h	FUNCTION_72	CALL_1
0x40002a3	      0xe8b3ffffff	                        call sym.hashcmp	       980	cache.h	FUNCTION_72	CALL_1
0x40002a8	              0xc9	                                   leave	       981	cache.h	FUNCTION_72
0x40002a9	              0xc3	                                     ret	       981	cache.h	FUNCTION_72
release_snapshot	SWITCH,0:FOR,0:CALL,3:ELSE,1:WHILE,0:DO,0:functions,0:IF,1	28
0x4000493	              0x55	                                push rbp	       185	packed-backend.c	FUNCTION_3
0x4000494	          0x4889e5	                            mov rbp, rsp	       185	packed-backend.c	FUNCTION_3
0x4000497	        0x4883ec10	                           sub rsp, 0x10	       185	packed-backend.c	FUNCTION_3
0x400049b	        0x48897df8	                mov qword [rbp - 8], rdi	       185	packed-backend.c	FUNCTION_3
0x400049f	        0x488b45f8	                mov rax, qword [rbp - 8]	       186	packed-backend.c	FUNCTION_3	IF_1
0x40004a3	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       186	packed-backend.c	FUNCTION_3	IF_1
0x40004a6	          0x8d50ff	                      lea edx, [rax - 1]	       186	packed-backend.c	FUNCTION_3	IF_1
0x40004a9	        0x488b45f8	                mov rax, qword [rbp - 8]	       186	packed-backend.c	FUNCTION_3	IF_1
0x40004ad	          0x89502c	             mov dword [rax + 0x2c], edx	       186	packed-backend.c	FUNCTION_3	IF_1
0x40004b0	        0x488b45f8	                mov rax, qword [rbp - 8]	       186	packed-backend.c	FUNCTION_3	IF_1
0x40004b4	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       186	packed-backend.c	FUNCTION_3	IF_1
0x40004b7	            0x85c0	                           test eax, eax	       186	packed-backend.c	FUNCTION_3	IF_1
0x40004b9	            0x752f	                           jne 0x40004ea	       186	packed-backend.c	FUNCTION_3	IF_1
0x40004bb	        0x488b45f8	                mov rax, qword [rbp - 8]	       187	packed-backend.c	FUNCTION_3	IF_1	CALL_1
0x40004bf	        0x4883c030	                           add rax, 0x30	       187	packed-backend.c	FUNCTION_3	IF_1	CALL_1
0x40004c3	          0x4889c7	                            mov rdi, rax	       187	packed-backend.c	FUNCTION_3	IF_1	CALL_1
0x40004c6	      0xe800000000	                          call 0x40004cb	       187	packed-backend.c	FUNCTION_3	IF_1	CALL_1
0x40004cb	        0x488b45f8	                mov rax, qword [rbp - 8]	       188	packed-backend.c	FUNCTION_3	IF_1	CALL_2
0x40004cf	          0x4889c7	                            mov rdi, rax	       188	packed-backend.c	FUNCTION_3	IF_1	CALL_2
0x40004d2	      0xe809ffffff	          call sym.clear_snapshot_buffer	       188	packed-backend.c	FUNCTION_3	IF_1	CALL_2
0x40004d7	        0x488b45f8	                mov rax, qword [rbp - 8]	       189	packed-backend.c	FUNCTION_3	IF_1	CALL_3
0x40004db	          0x4889c7	                            mov rdi, rax	       189	packed-backend.c	FUNCTION_3	IF_1	CALL_3
0x40004de	      0xe800000000	                          call 0x40004e3	       189	packed-backend.c	FUNCTION_3	IF_1	CALL_3
0x40004e3	      0xb801000000	                              mov eax, 1	       190	packed-backend.c	FUNCTION_3	IF_1
0x40004e8	            0xeb05	                           jmp 0x40004ef	       190	packed-backend.c	FUNCTION_3	IF_1
0x40004ea	      0xb800000000	                              mov eax, 0	       192	packed-backend.c	FUNCTION_3	ELSE_1
0x40004ef	              0xc9	                                   leave	       194	packed-backend.c	FUNCTION_3
0x40004f0	              0xc3	                                     ret	       194	packed-backend.c	FUNCTION_3
sort_snapshot	SWITCH,0:FOR,1:CALL,8:ELSE,0:WHILE,1:DO,0:functions,0:IF,7	280
0x4000874	              0x55	                                push rbp	       320	packed-backend.c	FUNCTION_11
0x4000875	          0x4889e5	                            mov rbp, rsp	       320	packed-backend.c	FUNCTION_11
0x4000878	        0x4883ec70	                           sub rsp, 0x70	       320	packed-backend.c	FUNCTION_11
0x400087c	        0x48897d98	             mov qword [rbp - 0x68], rdi	       320	packed-backend.c	FUNCTION_11
0x4000880	    0x48c745a80000	               mov qword [rbp - 0x58], 0	       321	packed-backend.c	FUNCTION_11
0x4000888	    0x48c745b00000	               mov qword [rbp - 0x50], 0	       322	packed-backend.c	FUNCTION_11
0x4000890	    0x48c745b80000	               mov qword [rbp - 0x48], 0	       322	packed-backend.c	FUNCTION_11
0x4000898	    0xc745a4010000	               mov dword [rbp - 0x5c], 1	       323	packed-backend.c	FUNCTION_11
0x400089f	        0x488b4598	             mov rax, qword [rbp - 0x68]	       328	packed-backend.c	FUNCTION_11
0x40008a3	        0x488b4018	            mov rax, qword [rax + 0x18] 	       328	packed-backend.c	FUNCTION_11
0x40008a7	        0x488945c0	             mov qword [rbp - 0x40], rax	       328	packed-backend.c	FUNCTION_11
0x40008ab	        0x488b4598	             mov rax, qword [rbp - 0x68]	       329	packed-backend.c	FUNCTION_11
0x40008af	        0x488b4020	            mov rax, qword [rax + 0x20] 	       329	packed-backend.c	FUNCTION_11
0x40008b3	        0x488945e0	             mov qword [rbp - 0x20], rax	       329	packed-backend.c	FUNCTION_11
0x40008b7	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       331	packed-backend.c	FUNCTION_11	IF_1
0x40008bb	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       331	packed-backend.c	FUNCTION_11	IF_1
0x40008bf	     0xf84dd030000	                            je 0x4000ca2	       331	packed-backend.c	FUNCTION_11	IF_1
0x40008c5	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       334	packed-backend.c	FUNCTION_11
0x40008c9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       334	packed-backend.c	FUNCTION_11
0x40008cd	          0x4829c2	                            sub rdx, rax	       334	packed-backend.c	FUNCTION_11
0x40008d0	          0x4889d0	                            mov rax, rdx	       334	packed-backend.c	FUNCTION_11
0x40008d3	        0x488945e8	             mov qword [rbp - 0x18], rax	       334	packed-backend.c	FUNCTION_11
0x40008d7	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       340	packed-backend.c	FUNCTION_11
0x40008db	    0x48bacdcccccc	          movabs rdx, 0xcccccccccccccccd	       340	packed-backend.c	FUNCTION_11
0x40008e5	          0x48f7e2	                                 mul rdx	       340	packed-backend.c	FUNCTION_11
0x40008e8	          0x4889d0	                            mov rax, rdx	       340	packed-backend.c	FUNCTION_11
0x40008eb	        0x48c1e806	                              shr rax, 6	       340	packed-backend.c	FUNCTION_11
0x40008ef	        0x4883c014	                           add rax, 0x14	       340	packed-backend.c	FUNCTION_11
0x40008f3	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	       340	packed-backend.c	FUNCTION_11
0x40008f7	     0xf86a2020000	                           jbe 0x4000b9f	       340	packed-backend.c	FUNCTION_11
0x40008fd	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       340	packed-backend.c	FUNCTION_11
0x4000901	          0x4889d0	                            mov rax, rdx	       340	packed-backend.c	FUNCTION_11
0x4000904	          0x4801c0	                            add rax, rax	       340	packed-backend.c	FUNCTION_11
0x4000907	          0x4801d0	                            add rax, rdx	       340	packed-backend.c	FUNCTION_11
0x400090a	        0x4883c030	                           add rax, 0x30	       340	packed-backend.c	FUNCTION_11
0x400090e	          0x48d1e8	                              shr rax, 1	       340	packed-backend.c	FUNCTION_11
0x4000911	          0x4889c1	                            mov rcx, rax	       340	packed-backend.c	FUNCTION_11
0x4000914	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       340	packed-backend.c	FUNCTION_11
0x4000918	    0x48bacdcccccc	          movabs rdx, 0xcccccccccccccccd	       340	packed-backend.c	FUNCTION_11
0x4000922	          0x48f7e2	                                 mul rdx	       340	packed-backend.c	FUNCTION_11
0x4000925	          0x4889d0	                            mov rax, rdx	       340	packed-backend.c	FUNCTION_11
0x4000928	        0x48c1e806	                              shr rax, 6	       340	packed-backend.c	FUNCTION_11
0x400092c	        0x4883c014	                           add rax, 0x14	       340	packed-backend.c	FUNCTION_11
0x4000930	          0x4839c1	                            cmp rcx, rax	       340	packed-backend.c	FUNCTION_11
0x4000933	            0x7322	                           jae 0x4000957	       340	packed-backend.c	FUNCTION_11
0x4000935	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       340	packed-backend.c	FUNCTION_11
0x4000939	    0x48bacdcccccc	          movabs rdx, 0xcccccccccccccccd	       340	packed-backend.c	FUNCTION_11
0x4000943	          0x48f7e2	                                 mul rdx	       340	packed-backend.c	FUNCTION_11
0x4000946	          0x4889d0	                            mov rax, rdx	       340	packed-backend.c	FUNCTION_11
0x4000949	        0x48c1e806	                              shr rax, 6	       340	packed-backend.c	FUNCTION_11
0x400094d	        0x4883c014	                           add rax, 0x14	       340	packed-backend.c	FUNCTION_11
0x4000951	        0x488945b0	             mov qword [rbp - 0x50], rax	       340	packed-backend.c	FUNCTION_11
0x4000955	            0xeb18	                           jmp 0x400096f	       340	packed-backend.c	FUNCTION_11
0x4000957	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       340	packed-backend.c	FUNCTION_11
0x400095b	          0x4889d0	                            mov rax, rdx	       340	packed-backend.c	FUNCTION_11
0x400095e	          0x4801c0	                            add rax, rax	       340	packed-backend.c	FUNCTION_11
0x4000961	          0x4801d0	                            add rax, rdx	       340	packed-backend.c	FUNCTION_11
0x4000964	        0x4883c030	                           add rax, 0x30	       340	packed-backend.c	FUNCTION_11
0x4000968	          0x48d1e8	                              shr rax, 1	       340	packed-backend.c	FUNCTION_11
0x400096b	        0x488945b0	             mov qword [rbp - 0x50], rax	       340	packed-backend.c	FUNCTION_11
0x400096f	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       340	packed-backend.c	FUNCTION_11
0x4000973	          0x4889c6	                            mov rsi, rax	       340	packed-backend.c	FUNCTION_11
0x4000976	      0xbf10000000	                           mov edi, 0x10	       340	packed-backend.c	FUNCTION_11
0x400097b	      0xe821f7ffff	                        call sym.st_mult	       340	packed-backend.c	FUNCTION_11
0x4000980	          0x4889c2	                            mov rdx, rax	       340	packed-backend.c	FUNCTION_11
0x4000983	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       340	packed-backend.c	FUNCTION_11
0x4000987	          0x4889d6	                            mov rsi, rdx	       340	packed-backend.c	FUNCTION_11
0x400098a	          0x4889c7	                            mov rdi, rax	       340	packed-backend.c	FUNCTION_11
0x400098d	      0xe800000000	                          call 0x4000992	       340	packed-backend.c	FUNCTION_11
0x4000992	        0x488945a8	             mov qword [rbp - 0x58], rax	       340	packed-backend.c	FUNCTION_11
0x4000996	      0xe904020000	                           jmp 0x4000b9f	       342	packed-backend.c	FUNCTION_11	WHILE_1
0x400099b	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       343	packed-backend.c	FUNCTION_11	WHILE_1	CALL_1
0x400099f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       343	packed-backend.c	FUNCTION_11	WHILE_1	CALL_1
0x40009a3	          0x4829c2	                            sub rdx, rax	       343	packed-backend.c	FUNCTION_11	WHILE_1	CALL_1
0x40009a6	          0x4889d0	                            mov rax, rdx	       343	packed-backend.c	FUNCTION_11	WHILE_1	CALL_1
0x40009a9	          0x4889c2	                            mov rdx, rax	       343	packed-backend.c	FUNCTION_11	WHILE_1	CALL_1
0x40009ac	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       343	packed-backend.c	FUNCTION_11	WHILE_1	CALL_1
0x40009b0	      0xbe0a000000	                            mov esi, 0xa	       343	packed-backend.c	FUNCTION_11	WHILE_1	CALL_1
0x40009b5	          0x4889c7	                            mov rdi, rax	       343	packed-backend.c	FUNCTION_11	WHILE_1	CALL_1
0x40009b8	      0xe800000000	                          call 0x40009bd	       343	packed-backend.c	FUNCTION_11	WHILE_1	CALL_1
0x40009bd	        0x488945c8	             mov qword [rbp - 0x38], rax	       343	packed-backend.c	FUNCTION_11	WHILE_1	CALL_1
0x40009c1	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       344	packed-backend.c	FUNCTION_11	WHILE_1	IF_2
0x40009c6	            0x7519	                           jne 0x40009e1	       344	packed-backend.c	FUNCTION_11	WHILE_1	IF_2
0x40009c8	      0xba00000000	                              mov edx, 0	       346	packed-backend.c	FUNCTION_11	WHILE_1	IF_2
0x40009cd	      0xbe5a010000	                          mov esi, 0x15a	       346	packed-backend.c	FUNCTION_11	WHILE_1	IF_2
0x40009d2	      0xbf00000000	                              mov edi, 0	       346	packed-backend.c	FUNCTION_11	WHILE_1	IF_2
0x40009d7	      0xb800000000	                              mov eax, 0	       346	packed-backend.c	FUNCTION_11	WHILE_1	IF_2
0x40009dc	      0xe800000000	                          call 0x40009e1	       346	packed-backend.c	FUNCTION_11	WHILE_1	IF_2
0x40009e1	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       347	packed-backend.c	FUNCTION_11	WHILE_1	IF_3
0x40009e5	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       347	packed-backend.c	FUNCTION_11	WHILE_1	IF_3
0x40009e9	          0x4829c2	                            sub rdx, rax	       347	packed-backend.c	FUNCTION_11	WHILE_1	IF_3
0x40009ec	          0x4889d0	                            mov rax, rdx	       347	packed-backend.c	FUNCTION_11	WHILE_1	IF_3
0x40009ef	        0x4883f829	                           cmp rax, 0x29	       347	packed-backend.c	FUNCTION_11	WHILE_1	IF_3
0x40009f3	            0x7f2b	                            jg 0x4000a20	       347	packed-backend.c	FUNCTION_11	WHILE_1	IF_3
0x40009f5	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       349	packed-backend.c	FUNCTION_11	WHILE_1	IF_3
0x40009f9	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       349	packed-backend.c	FUNCTION_11	WHILE_1	IF_3
0x40009fd	          0x4829c2	                            sub rdx, rax	       349	packed-backend.c	FUNCTION_11	WHILE_1	IF_3
0x4000a00	          0x4889d0	                            mov rax, rdx	       349	packed-backend.c	FUNCTION_11	WHILE_1	IF_3
0x4000a03	          0x4889c2	                            mov rdx, rax	       348	packed-backend.c	FUNCTION_11	WHILE_1	IF_3	CALL_2
0x4000a06	        0x488b4598	             mov rax, qword [rbp - 0x68]	       348	packed-backend.c	FUNCTION_11	WHILE_1	IF_3	CALL_2
0x4000a0a	          0x488b00	                    mov rax, qword [rax]	       348	packed-backend.c	FUNCTION_11	WHILE_1	IF_3	CALL_2
0x4000a0d	        0x488b4010	            mov rax, qword [rax + 0x10] 	       348	packed-backend.c	FUNCTION_11	WHILE_1	IF_3	CALL_2
0x4000a11	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       348	packed-backend.c	FUNCTION_11	WHILE_1	IF_3	CALL_2
0x4000a15	          0x4889ce	                            mov rsi, rcx	       348	packed-backend.c	FUNCTION_11	WHILE_1	IF_3	CALL_2
0x4000a18	          0x4889c7	                            mov rdi, rax	       348	packed-backend.c	FUNCTION_11	WHILE_1	IF_3	CALL_2
0x4000a1b	      0xe862fcffff	               call sym.die_invalid_line	       348	packed-backend.c	FUNCTION_11	WHILE_1	IF_3	CALL_2
0x4000a20	      0x488345c801	               add qword [rbp - 0x38], 1	       350	packed-backend.c	FUNCTION_11	WHILE_1
0x4000a25	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       351	packed-backend.c	FUNCTION_11	WHILE_1	IF_4
0x4000a29	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       351	packed-backend.c	FUNCTION_11	WHILE_1	IF_4
0x4000a2d	            0x735e	                           jae 0x4000a8d	       351	packed-backend.c	FUNCTION_11	WHILE_1	IF_4
0x4000a2f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       351	packed-backend.c	FUNCTION_11	WHILE_1	IF_4
0x4000a33	           0xfb600	                   movzx eax, byte [rax]	       351	packed-backend.c	FUNCTION_11	WHILE_1	IF_4
0x4000a36	            0x3c5e	                            cmp al, 0x5e	       351	packed-backend.c	FUNCTION_11	WHILE_1	IF_4
0x4000a38	            0x7553	                           jne 0x4000a8d	       351	packed-backend.c	FUNCTION_11	WHILE_1	IF_4
0x4000a3a	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       356	packed-backend.c	FUNCTION_11	WHILE_1	IF_4
0x4000a3e	        0x488945f0	             mov qword [rbp - 0x10], rax	       356	packed-backend.c	FUNCTION_11	WHILE_1	IF_4
0x4000a42	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       358	packed-backend.c	FUNCTION_11	WHILE_1	IF_4	CALL_3
0x4000a46	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       358	packed-backend.c	FUNCTION_11	WHILE_1	IF_4	CALL_3
0x4000a4a	          0x4829c2	                            sub rdx, rax	       358	packed-backend.c	FUNCTION_11	WHILE_1	IF_4	CALL_3
0x4000a4d	          0x4889d0	                            mov rax, rdx	       358	packed-backend.c	FUNCTION_11	WHILE_1	IF_4	CALL_3
0x4000a50	          0x4889c2	                            mov rdx, rax	       358	packed-backend.c	FUNCTION_11	WHILE_1	IF_4	CALL_3
0x4000a53	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       358	packed-backend.c	FUNCTION_11	WHILE_1	IF_4	CALL_3
0x4000a57	      0xbe0a000000	                            mov esi, 0xa	       358	packed-backend.c	FUNCTION_11	WHILE_1	IF_4	CALL_3
0x4000a5c	          0x4889c7	                            mov rdi, rax	       358	packed-backend.c	FUNCTION_11	WHILE_1	IF_4	CALL_3
0x4000a5f	      0xe800000000	                          call 0x4000a64	       358	packed-backend.c	FUNCTION_11	WHILE_1	IF_4	CALL_3
0x4000a64	        0x488945c8	             mov qword [rbp - 0x38], rax	       358	packed-backend.c	FUNCTION_11	WHILE_1	IF_4	CALL_3
0x4000a68	      0x48837dc800	               cmp qword [rbp - 0x38], 0	       359	packed-backend.c	FUNCTION_11	WHILE_1	IF_4	IF_5
0x4000a6d	            0x7519	                           jne 0x4000a88	       359	packed-backend.c	FUNCTION_11	WHILE_1	IF_4	IF_5
0x4000a6f	      0xba00000000	                              mov edx, 0	       361	packed-backend.c	FUNCTION_11	WHILE_1	IF_4	IF_5
0x4000a74	      0xbe69010000	                          mov esi, 0x169	       361	packed-backend.c	FUNCTION_11	WHILE_1	IF_4	IF_5
0x4000a79	      0xbf00000000	                              mov edi, 0	       361	packed-backend.c	FUNCTION_11	WHILE_1	IF_4	IF_5
0x4000a7e	      0xb800000000	                              mov eax, 0	       361	packed-backend.c	FUNCTION_11	WHILE_1	IF_4	IF_5
0x4000a83	      0xe800000000	                          call 0x4000a88	       361	packed-backend.c	FUNCTION_11	WHILE_1	IF_4	IF_5
0x4000a88	      0x488345c801	               add qword [rbp - 0x38], 1	       362	packed-backend.c	FUNCTION_11	WHILE_1	IF_4
0x4000a8d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000a91	        0x4883c001	                              add rax, 1	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000a95	        0x483b45b0	             cmp rax, qword [rbp - 0x50]	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000a99	            0x7671	                           jbe 0x4000b0c	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000a9b	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000a9f	          0x4889d0	                            mov rax, rdx	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000aa2	          0x4801c0	                            add rax, rax	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000aa5	          0x4801d0	                            add rax, rdx	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000aa8	        0x4883c030	                           add rax, 0x30	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000aac	          0x48d1e8	                              shr rax, 1	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000aaf	          0x4889c2	                            mov rdx, rax	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000ab2	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000ab6	        0x4883c001	                              add rax, 1	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000aba	          0x4839c2	                            cmp rdx, rax	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000abd	            0x730e	                           jae 0x4000acd	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000abf	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000ac3	        0x4883c001	                              add rax, 1	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000ac7	        0x488945b0	             mov qword [rbp - 0x50], rax	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000acb	            0xeb18	                           jmp 0x4000ae5	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000acd	        0x488b55b0	             mov rdx, qword [rbp - 0x50]	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000ad1	          0x4889d0	                            mov rax, rdx	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000ad4	          0x4801c0	                            add rax, rax	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000ad7	          0x4801d0	                            add rax, rdx	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000ada	        0x4883c030	                           add rax, 0x30	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000ade	          0x48d1e8	                              shr rax, 1	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000ae1	        0x488945b0	             mov qword [rbp - 0x50], rax	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000ae5	        0x488b45b0	             mov rax, qword [rbp - 0x50]	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000ae9	          0x4889c6	                            mov rsi, rax	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000aec	      0xbf10000000	                           mov edi, 0x10	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000af1	      0xe8abf5ffff	                        call sym.st_mult	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000af6	          0x4889c2	                            mov rdx, rax	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000af9	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000afd	          0x4889d6	                            mov rsi, rdx	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000b00	          0x4889c7	                            mov rdi, rax	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000b03	      0xe800000000	                          call 0x4000b08	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000b08	        0x488945a8	             mov qword [rbp - 0x58], rax	       365	packed-backend.c	FUNCTION_11	WHILE_1
0x4000b0c	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       366	packed-backend.c	FUNCTION_11	WHILE_1
0x4000b10	        0x48c1e004	                              shl rax, 4	       366	packed-backend.c	FUNCTION_11	WHILE_1
0x4000b14	          0x4889c2	                            mov rdx, rax	       366	packed-backend.c	FUNCTION_11	WHILE_1
0x4000b17	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       366	packed-backend.c	FUNCTION_11	WHILE_1
0x4000b1b	          0x4801c2	                            add rdx, rax	       366	packed-backend.c	FUNCTION_11	WHILE_1
0x4000b1e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       366	packed-backend.c	FUNCTION_11	WHILE_1
0x4000b22	          0x488902	                    mov qword [rdx], rax	       366	packed-backend.c	FUNCTION_11	WHILE_1
0x4000b25	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       367	packed-backend.c	FUNCTION_11	WHILE_1
0x4000b29	        0x48c1e004	                              shl rax, 4	       367	packed-backend.c	FUNCTION_11	WHILE_1
0x4000b2d	          0x4889c2	                            mov rdx, rax	       367	packed-backend.c	FUNCTION_11	WHILE_1
0x4000b30	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       367	packed-backend.c	FUNCTION_11	WHILE_1
0x4000b34	          0x4801d0	                            add rax, rdx	       367	packed-backend.c	FUNCTION_11	WHILE_1
0x4000b37	        0x488b4dc8	             mov rcx, qword [rbp - 0x38]	       367	packed-backend.c	FUNCTION_11	WHILE_1
0x4000b3b	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       367	packed-backend.c	FUNCTION_11	WHILE_1
0x4000b3f	          0x4829d1	                            sub rcx, rdx	       367	packed-backend.c	FUNCTION_11	WHILE_1
0x4000b42	          0x4889ca	                            mov rdx, rcx	       367	packed-backend.c	FUNCTION_11	WHILE_1
0x4000b45	        0x48895008	                mov qword [rax + 8], rdx	       367	packed-backend.c	FUNCTION_11	WHILE_1
0x4000b49	      0x488345b801	               add qword [rbp - 0x48], 1	       368	packed-backend.c	FUNCTION_11	WHILE_1
0x4000b4e	        0x837da400	               cmp dword [rbp - 0x5c], 0	       370	packed-backend.c	FUNCTION_11	WHILE_1	IF_6
0x4000b52	            0x7443	                            je 0x4000b97	       370	packed-backend.c	FUNCTION_11	WHILE_1	IF_6
0x4000b54	      0x48837db801	               cmp qword [rbp - 0x48], 1	       370	packed-backend.c	FUNCTION_11	WHILE_1	IF_6
0x4000b59	            0x763c	                           jbe 0x4000b97	       370	packed-backend.c	FUNCTION_11	WHILE_1	IF_6
0x4000b5b	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       373	packed-backend.c	FUNCTION_11	WHILE_1	IF_6
0x4000b5f	        0x48c1e004	                              shl rax, 4	       373	packed-backend.c	FUNCTION_11	WHILE_1	IF_6
0x4000b63	        0x488d50f0	                   lea rdx, [rax - 0x10]	       373	packed-backend.c	FUNCTION_11	WHILE_1	IF_6
0x4000b67	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       373	packed-backend.c	FUNCTION_11	WHILE_1	IF_6
0x4000b6b	          0x4801c2	                            add rdx, rax	       373	packed-backend.c	FUNCTION_11	WHILE_1	IF_6
0x4000b6e	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       372	packed-backend.c	FUNCTION_11	WHILE_1	IF_6	CALL_4
0x4000b72	        0x48c1e004	                              shl rax, 4	       372	packed-backend.c	FUNCTION_11	WHILE_1	IF_6	CALL_4
0x4000b76	        0x488d48e0	                   lea rcx, [rax - 0x20]	       372	packed-backend.c	FUNCTION_11	WHILE_1	IF_6	CALL_4
0x4000b7a	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       372	packed-backend.c	FUNCTION_11	WHILE_1	IF_6	CALL_4
0x4000b7e	          0x4801c8	                            add rax, rcx	       372	packed-backend.c	FUNCTION_11	WHILE_1	IF_6	CALL_4
0x4000b81	          0x4889d6	                            mov rsi, rdx	       372	packed-backend.c	FUNCTION_11	WHILE_1	IF_6	CALL_4
0x4000b84	          0x4889c7	                            mov rdi, rax	       372	packed-backend.c	FUNCTION_11	WHILE_1	IF_6	CALL_4
0x4000b87	      0xe89efbffff	         call sym.cmp_packed_ref_records	       372	packed-backend.c	FUNCTION_11	WHILE_1	IF_6	CALL_4
0x4000b8c	            0x85c0	                           test eax, eax	       371	packed-backend.c	FUNCTION_11	WHILE_1	IF_6
0x4000b8e	            0x7807	                            js 0x4000b97	       371	packed-backend.c	FUNCTION_11	WHILE_1	IF_6
0x4000b90	    0xc745a4000000	               mov dword [rbp - 0x5c], 0	       374	packed-backend.c	FUNCTION_11	WHILE_1	IF_6
0x4000b97	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       376	packed-backend.c	FUNCTION_11	WHILE_1
0x4000b9b	        0x488945c0	             mov qword [rbp - 0x40], rax	       376	packed-backend.c	FUNCTION_11	WHILE_1
0x4000b9f	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       342	packed-backend.c	FUNCTION_11	WHILE_1
0x4000ba3	        0x483b45e0	             cmp rax, qword [rbp - 0x20]	       342	packed-backend.c	FUNCTION_11	WHILE_1
0x4000ba7	     0xf82eefdffff	                            jb 0x400099b	       342	packed-backend.c	FUNCTION_11	WHILE_1
0x4000bad	        0x837da400	               cmp dword [rbp - 0x5c], 0	       379	packed-backend.c	FUNCTION_11	IF_7
0x4000bb1	     0xf85dc000000	                           jne 0x4000c93	       379	packed-backend.c	FUNCTION_11	IF_7
0x4000bb7	        0x488b75b8	             mov rsi, qword [rbp - 0x48]	       383	packed-backend.c	FUNCTION_11
0x4000bbb	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       383	packed-backend.c	FUNCTION_11
0x4000bbf	      0xb900000000	                              mov ecx, 0	       383	packed-backend.c	FUNCTION_11
0x4000bc4	      0xba10000000	                           mov edx, 0x10	       383	packed-backend.c	FUNCTION_11
0x4000bc9	          0x4889c7	                            mov rdi, rax	       383	packed-backend.c	FUNCTION_11
0x4000bcc	      0xe855f5ffff	                     call sym.sane_qsort	       383	packed-backend.c	FUNCTION_11
0x4000bd1	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       390	packed-backend.c	FUNCTION_11	CALL_5
0x4000bd5	          0x4889c7	                            mov rdi, rax	       390	packed-backend.c	FUNCTION_11	CALL_5
0x4000bd8	      0xe800000000	                          call 0x4000bdd	       390	packed-backend.c	FUNCTION_11	CALL_5
0x4000bdd	        0x488945f8	                mov qword [rbp - 8], rax	       390	packed-backend.c	FUNCTION_11	CALL_5
0x4000be1	        0x488b45f8	                mov rax, qword [rbp - 8]	       391	packed-backend.c	FUNCTION_11	FOR_1
0x4000be5	        0x488945d8	             mov qword [rbp - 0x28], rax	       391	packed-backend.c	FUNCTION_11	FOR_1
0x4000be9	    0x48c745d00000	               mov qword [rbp - 0x30], 0	       391	packed-backend.c	FUNCTION_11	FOR_1
0x4000bf1	            0xeb59	                           jmp 0x4000c4c	       391	packed-backend.c	FUNCTION_11	FOR_1
0x4000bf3	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       392	packed-backend.c	FUNCTION_11	FOR_1	CALL_6
0x4000bf7	        0x48c1e004	                              shl rax, 4	       392	packed-backend.c	FUNCTION_11	FOR_1	CALL_6
0x4000bfb	          0x4889c2	                            mov rdx, rax	       392	packed-backend.c	FUNCTION_11	FOR_1	CALL_6
0x4000bfe	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       392	packed-backend.c	FUNCTION_11	FOR_1	CALL_6
0x4000c02	          0x4801d0	                            add rax, rdx	       392	packed-backend.c	FUNCTION_11	FOR_1	CALL_6
0x4000c05	        0x488b5008	                mov rdx, qword [rax + 8]	       392	packed-backend.c	FUNCTION_11	FOR_1	CALL_6
0x4000c09	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       392	packed-backend.c	FUNCTION_11	FOR_1	CALL_6
0x4000c0d	        0x48c1e004	                              shl rax, 4	       392	packed-backend.c	FUNCTION_11	FOR_1	CALL_6
0x4000c11	          0x4889c1	                            mov rcx, rax	       392	packed-backend.c	FUNCTION_11	FOR_1	CALL_6
0x4000c14	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       392	packed-backend.c	FUNCTION_11	FOR_1	CALL_6
0x4000c18	          0x4801c8	                            add rax, rcx	       392	packed-backend.c	FUNCTION_11	FOR_1	CALL_6
0x4000c1b	          0x488b08	                    mov rcx, qword [rax]	       392	packed-backend.c	FUNCTION_11	FOR_1	CALL_6
0x4000c1e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       392	packed-backend.c	FUNCTION_11	FOR_1	CALL_6
0x4000c22	          0x4889ce	                            mov rsi, rcx	       392	packed-backend.c	FUNCTION_11	FOR_1	CALL_6
0x4000c25	          0x4889c7	                            mov rdi, rax	       392	packed-backend.c	FUNCTION_11	FOR_1	CALL_6
0x4000c28	      0xe800000000	                          call 0x4000c2d	       392	packed-backend.c	FUNCTION_11	FOR_1	CALL_6
0x4000c2d	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       393	packed-backend.c	FUNCTION_11	FOR_1
0x4000c31	        0x48c1e004	                              shl rax, 4	       393	packed-backend.c	FUNCTION_11	FOR_1
0x4000c35	          0x4889c2	                            mov rdx, rax	       393	packed-backend.c	FUNCTION_11	FOR_1
0x4000c38	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       393	packed-backend.c	FUNCTION_11	FOR_1
0x4000c3c	          0x4801d0	                            add rax, rdx	       393	packed-backend.c	FUNCTION_11	FOR_1
0x4000c3f	        0x488b4008	                mov rax, qword [rax + 8]	       393	packed-backend.c	FUNCTION_11	FOR_1
0x4000c43	        0x480145d8	            add qword [rbp - 0x28], rax 	       393	packed-backend.c	FUNCTION_11	FOR_1
0x4000c47	      0x488345d001	               add qword [rbp - 0x30], 1	       391	packed-backend.c	FUNCTION_11	FOR_1
0x4000c4c	        0x488b45d0	             mov rax, qword [rbp - 0x30]	       391	packed-backend.c	FUNCTION_11	FOR_1
0x4000c50	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	       391	packed-backend.c	FUNCTION_11	FOR_1
0x4000c54	            0x729d	                            jb 0x4000bf3	       391	packed-backend.c	FUNCTION_11	FOR_1
0x4000c56	        0x488b4598	             mov rax, qword [rbp - 0x68]	       400	packed-backend.c	FUNCTION_11	CALL_7
0x4000c5a	          0x4889c7	                            mov rdi, rax	       400	packed-backend.c	FUNCTION_11	CALL_7
0x4000c5d	      0xe87ef7ffff	          call sym.clear_snapshot_buffer	       400	packed-backend.c	FUNCTION_11	CALL_7
0x4000c62	        0x488b4598	             mov rax, qword [rbp - 0x68]	       401	packed-backend.c	FUNCTION_11
0x4000c66	        0x488b55f8	                mov rdx, qword [rbp - 8]	       401	packed-backend.c	FUNCTION_11
0x4000c6a	        0x48895018	             mov qword [rax + 0x18], rdx	       401	packed-backend.c	FUNCTION_11
0x4000c6e	        0x488b4598	             mov rax, qword [rbp - 0x68]	       401	packed-backend.c	FUNCTION_11
0x4000c72	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       401	packed-backend.c	FUNCTION_11
0x4000c76	        0x488b4598	             mov rax, qword [rbp - 0x68]	       401	packed-backend.c	FUNCTION_11
0x4000c7a	        0x48895010	             mov qword [rax + 0x10], rdx	       401	packed-backend.c	FUNCTION_11
0x4000c7e	        0x488b55f8	                mov rdx, qword [rbp - 8]	       402	packed-backend.c	FUNCTION_11
0x4000c82	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       402	packed-backend.c	FUNCTION_11
0x4000c86	          0x4801c2	                            add rdx, rax	       402	packed-backend.c	FUNCTION_11
0x4000c89	        0x488b4598	             mov rax, qword [rbp - 0x68]	       402	packed-backend.c	FUNCTION_11
0x4000c8d	        0x48895020	             mov qword [rax + 0x20], rdx	       402	packed-backend.c	FUNCTION_11
0x4000c91	            0xeb01	                           jmp 0x4000c94	       402	packed-backend.c	FUNCTION_11
0x4000c93	              0x90	                                     nop	       380	packed-backend.c	FUNCTION_11	IF_7
0x4000c94	        0x488b45a8	             mov rax, qword [rbp - 0x58]	       405	packed-backend.c	FUNCTION_11	CALL_8
0x4000c98	          0x4889c7	                            mov rdi, rax	       405	packed-backend.c	FUNCTION_11	CALL_8
0x4000c9b	      0xe800000000	                          call 0x4000ca0	       405	packed-backend.c	FUNCTION_11	CALL_8
0x4000ca0	            0xeb01	                           jmp 0x4000ca3	       405	packed-backend.c	FUNCTION_11	CALL_8
0x4000ca2	              0x90	                                     nop	       332	packed-backend.c	FUNCTION_11	IF_1
0x4000ca3	              0xc9	                                   leave	       406	packed-backend.c	FUNCTION_11
0x4000ca4	              0xc3	                                     ret	       406	packed-backend.c	FUNCTION_11
verify_buffer_safe	SWITCH,0:FOR,0:CALL,2:ELSE,0:WHILE,0:DO,0:functions,0:IF,2	46
0x4000d1d	              0x55	                                push rbp	       450	packed-backend.c	FUNCTION_14
0x4000d1e	          0x4889e5	                            mov rbp, rsp	       450	packed-backend.c	FUNCTION_14
0x4000d21	        0x4883ec30	                           sub rsp, 0x30	       450	packed-backend.c	FUNCTION_14
0x4000d25	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       450	packed-backend.c	FUNCTION_14
0x4000d29	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       451	packed-backend.c	FUNCTION_14
0x4000d2d	        0x488b4018	            mov rax, qword [rax + 0x18] 	       451	packed-backend.c	FUNCTION_14
0x4000d31	        0x488945e8	             mov qword [rbp - 0x18], rax	       451	packed-backend.c	FUNCTION_14
0x4000d35	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       452	packed-backend.c	FUNCTION_14
0x4000d39	        0x488b4020	            mov rax, qword [rax + 0x20] 	       452	packed-backend.c	FUNCTION_14
0x4000d3d	        0x488945f0	             mov qword [rbp - 0x10], rax	       452	packed-backend.c	FUNCTION_14
0x4000d41	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       455	packed-backend.c	FUNCTION_14	IF_1
0x4000d45	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       455	packed-backend.c	FUNCTION_14	IF_1
0x4000d49	            0x7469	                            je 0x4000db4	       455	packed-backend.c	FUNCTION_14	IF_1
0x4000d4b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       458	packed-backend.c	FUNCTION_14	CALL_1
0x4000d4f	        0x488d50ff	                      lea rdx, [rax - 1]	       458	packed-backend.c	FUNCTION_14	CALL_1
0x4000d53	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       458	packed-backend.c	FUNCTION_14	CALL_1
0x4000d57	          0x4889d6	                            mov rsi, rdx	       458	packed-backend.c	FUNCTION_14	CALL_1
0x4000d5a	          0x4889c7	                            mov rdi, rax	       458	packed-backend.c	FUNCTION_14	CALL_1
0x4000d5d	      0xe843ffffff	           call sym.find_start_of_record	       458	packed-backend.c	FUNCTION_14	CALL_1
0x4000d62	        0x488945f8	                mov qword [rbp - 8], rax	       458	packed-backend.c	FUNCTION_14	CALL_1
0x4000d66	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       459	packed-backend.c	FUNCTION_14	IF_2
0x4000d6a	        0x4883e801	                              sub rax, 1	       459	packed-backend.c	FUNCTION_14	IF_2
0x4000d6e	           0xfb600	                   movzx eax, byte [rax]	       459	packed-backend.c	FUNCTION_14	IF_2
0x4000d71	            0x3c0a	                             cmp al, 0xa	       459	packed-backend.c	FUNCTION_14	IF_2
0x4000d73	            0x7514	                           jne 0x4000d89	       459	packed-backend.c	FUNCTION_14	IF_2
0x4000d75	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       459	packed-backend.c	FUNCTION_14	IF_2
0x4000d79	        0x488b45f8	                mov rax, qword [rbp - 8]	       459	packed-backend.c	FUNCTION_14	IF_2
0x4000d7d	          0x4829c2	                            sub rdx, rax	       459	packed-backend.c	FUNCTION_14	IF_2
0x4000d80	          0x4889d0	                            mov rax, rdx	       459	packed-backend.c	FUNCTION_14	IF_2
0x4000d83	        0x4883f829	                           cmp rax, 0x29	       459	packed-backend.c	FUNCTION_14	IF_2
0x4000d87	            0x7f2c	                            jg 0x4000db5	       459	packed-backend.c	FUNCTION_14	IF_2
0x4000d89	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       461	packed-backend.c	FUNCTION_14	IF_2
0x4000d8d	        0x488b45f8	                mov rax, qword [rbp - 8]	       461	packed-backend.c	FUNCTION_14	IF_2
0x4000d91	          0x4829c2	                            sub rdx, rax	       461	packed-backend.c	FUNCTION_14	IF_2
0x4000d94	          0x4889d0	                            mov rax, rdx	       461	packed-backend.c	FUNCTION_14	IF_2
0x4000d97	          0x4889c2	                            mov rdx, rax	       460	packed-backend.c	FUNCTION_14	IF_2	CALL_2
0x4000d9a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       460	packed-backend.c	FUNCTION_14	IF_2	CALL_2
0x4000d9e	          0x488b00	                    mov rax, qword [rax]	       460	packed-backend.c	FUNCTION_14	IF_2	CALL_2
0x4000da1	        0x488b4010	            mov rax, qword [rax + 0x10] 	       460	packed-backend.c	FUNCTION_14	IF_2	CALL_2
0x4000da5	        0x488b4df8	                mov rcx, qword [rbp - 8]	       460	packed-backend.c	FUNCTION_14	IF_2	CALL_2
0x4000da9	          0x4889ce	                            mov rsi, rcx	       460	packed-backend.c	FUNCTION_14	IF_2	CALL_2
0x4000dac	          0x4889c7	                            mov rdi, rax	       460	packed-backend.c	FUNCTION_14	IF_2	CALL_2
0x4000daf	      0xe8cef8ffff	               call sym.die_invalid_line	       460	packed-backend.c	FUNCTION_14	IF_2	CALL_2
0x4000db4	              0x90	                                     nop	       456	packed-backend.c	FUNCTION_14	IF_1
0x4000db5	              0xc9	                                   leave	       462	packed-backend.c	FUNCTION_14
0x4000db6	              0xc3	                                     ret	       462	packed-backend.c	FUNCTION_14
oidcpy	SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0:functions,0:IF,0	13
0x40002fc	              0x55	                                push rbp	       999	cache.h	FUNCTION_76
0x40002fd	          0x4889e5	                            mov rbp, rsp	       999	cache.h	FUNCTION_76
0x4000300	        0x4883ec10	                           sub rsp, 0x10	       999	cache.h	FUNCTION_76
0x4000304	        0x48897df8	                mov qword [rbp - 8], rdi	       999	cache.h	FUNCTION_76
0x4000308	        0x488975f0	             mov qword [rbp - 0x10], rsi	       999	cache.h	FUNCTION_76
0x400030c	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1000	cache.h	FUNCTION_76	CALL_1
0x4000310	        0x488b45f8	                mov rax, qword [rbp - 8]	      1000	cache.h	FUNCTION_76	CALL_1
0x4000314	          0x4889d6	                            mov rsi, rdx	      1000	cache.h	FUNCTION_76	CALL_1
0x4000317	          0x4889c7	                            mov rdi, rax	      1000	cache.h	FUNCTION_76	CALL_1
0x400031a	      0xe8b2ffffff	                        call sym.hashcpy	      1000	cache.h	FUNCTION_76	CALL_1
0x400031f	              0x90	                                     nop	      1001	cache.h	FUNCTION_76
0x4000320	              0xc9	                                   leave	      1001	cache.h	FUNCTION_76
0x4000321	              0xc3	                                     ret	      1001	cache.h	FUNCTION_76
hashcpy	SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0:functions,0:IF,0	14
0x40002d1	              0x55	                                push rbp	       994	cache.h	FUNCTION_75
0x40002d2	          0x4889e5	                            mov rbp, rsp	       994	cache.h	FUNCTION_75
0x40002d5	        0x4883ec10	                           sub rsp, 0x10	       994	cache.h	FUNCTION_75
0x40002d9	        0x48897df8	                mov qword [rbp - 8], rdi	       994	cache.h	FUNCTION_75
0x40002dd	        0x488975f0	             mov qword [rbp - 0x10], rsi	       994	cache.h	FUNCTION_75
0x40002e1	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       995	cache.h	FUNCTION_75	CALL_1
0x40002e5	        0x488b45f8	                mov rax, qword [rbp - 8]	       995	cache.h	FUNCTION_75	CALL_1
0x40002e9	      0xba14000000	                           mov edx, 0x14	       995	cache.h	FUNCTION_75	CALL_1
0x40002ee	          0x4889ce	                            mov rsi, rcx	       995	cache.h	FUNCTION_75	CALL_1
0x40002f1	          0x4889c7	                            mov rdi, rax	       995	cache.h	FUNCTION_75	CALL_1
0x40002f4	      0xe800000000	                          call 0x40002f9	       995	cache.h	FUNCTION_75	CALL_1
0x40002f9	              0x90	                                     nop	       996	cache.h	FUNCTION_75
0x40002fa	              0xc9	                                   leave	       996	cache.h	FUNCTION_75
0x40002fb	              0xc3	                                     ret	       996	cache.h	FUNCTION_75
packed_refs_is_locked	SWITCH,0:FOR,0:CALL,2:ELSE,0:WHILE,0:DO,0:functions,0:IF,0	16
0x4001e55	              0x55	                                push rbp	      1044	packed-backend.c	FUNCTION_29
0x4001e56	          0x4889e5	                            mov rbp, rsp	      1044	packed-backend.c	FUNCTION_29
0x4001e59	        0x4883ec20	                           sub rsp, 0x20	      1044	packed-backend.c	FUNCTION_29
0x4001e5d	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1044	packed-backend.c	FUNCTION_29
0x4001e61	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1045	packed-backend.c	FUNCTION_29	CALL_1
0x4001e65	      0xba00000000	                              mov edx, 0	      1045	packed-backend.c	FUNCTION_29	CALL_1
0x4001e6a	      0xbe03000000	                              mov esi, 3	      1045	packed-backend.c	FUNCTION_29	CALL_1
0x4001e6f	          0x4889c7	                            mov rdi, rax	      1045	packed-backend.c	FUNCTION_29	CALL_1
0x4001e72	      0xe8f1e6ffff	                call sym.packed_downcast	      1045	packed-backend.c	FUNCTION_29	CALL_1
0x4001e77	        0x488945f8	                mov qword [rbp - 8], rax	      1045	packed-backend.c	FUNCTION_29	CALL_1
0x4001e7b	        0x488b45f8	                mov rax, qword [rbp - 8]	      1050	packed-backend.c	FUNCTION_29	CALL_2
0x4001e7f	        0x4883c020	                           add rax, 0x20	      1050	packed-backend.c	FUNCTION_29	CALL_2
0x4001e83	          0x4889c7	                            mov rdi, rax	      1050	packed-backend.c	FUNCTION_29	CALL_2
0x4001e86	      0xe8e4e4ffff	            call sym.is_lock_file_locked	      1050	packed-backend.c	FUNCTION_29	CALL_2
0x4001e8b	              0xc9	                                   leave	      1051	packed-backend.c	FUNCTION_29
0x4001e8c	              0xc3	                                     ret	      1051	packed-backend.c	FUNCTION_29
sane_qsort	SWITCH,0:FOR,0:CALL,0:ELSE,0:WHILE,0:DO,0:functions,0:IF,1	18
0x4000126	              0x55	                                push rbp	      1047	git-compat-util.h	FUNCTION_115
0x4000127	          0x4889e5	                            mov rbp, rsp	      1047	git-compat-util.h	FUNCTION_115
0x400012a	        0x4883ec20	                           sub rsp, 0x20	      1047	git-compat-util.h	FUNCTION_115
0x400012e	        0x48897df8	                mov qword [rbp - 8], rdi	      1047	git-compat-util.h	FUNCTION_115
0x4000132	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1047	git-compat-util.h	FUNCTION_115
0x4000136	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1047	git-compat-util.h	FUNCTION_115
0x400013a	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1047	git-compat-util.h	FUNCTION_115
0x400013e	      0x48837df001	               cmp qword [rbp - 0x10], 1	      1048	git-compat-util.h	FUNCTION_115	IF_1
0x4000143	            0x7618	                           jbe 0x400015d	      1048	git-compat-util.h	FUNCTION_115	IF_1
0x4000145	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	      1049	git-compat-util.h	FUNCTION_115	IF_1
0x4000149	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1049	git-compat-util.h	FUNCTION_115	IF_1
0x400014d	        0x488b75f0	             mov rsi, qword [rbp - 0x10]	      1049	git-compat-util.h	FUNCTION_115	IF_1
0x4000151	        0x488b45f8	                mov rax, qword [rbp - 8]	      1049	git-compat-util.h	FUNCTION_115	IF_1
0x4000155	          0x4889c7	                            mov rdi, rax	      1049	git-compat-util.h	FUNCTION_115	IF_1
0x4000158	      0xe800000000	                          call 0x400015d	      1049	git-compat-util.h	FUNCTION_115	IF_1
0x400015d	              0x90	                                     nop	      1050	git-compat-util.h	FUNCTION_115
0x400015e	              0xc9	                                   leave	      1050	git-compat-util.h	FUNCTION_115
0x400015f	              0xc3	                                     ret	      1050	git-compat-util.h	FUNCTION_115
packed_delete_refs	SWITCH,0:FOR,0:CALL,7:ELSE,1:WHILE,0:DO,0:functions,1:IF,4	130
0x40029cf	              0x55	                                push rbp	      1505	packed-backend.c	FUNCTION_38
0x40029d0	          0x4889e5	                            mov rbp, rsp	      1505	packed-backend.c	FUNCTION_38
0x40029d3	            0x4154	                                push r12	      1505	packed-backend.c	FUNCTION_38
0x40029d5	              0x53	                                push rbx	      1505	packed-backend.c	FUNCTION_38
0x40029d6	        0x4883ec60	                           sub rsp, 0x60	      1505	packed-backend.c	FUNCTION_38
0x40029da	        0x48897da8	             mov qword [rbp - 0x58], rdi	      1505	packed-backend.c	FUNCTION_38
0x40029de	        0x488975a0	             mov qword [rbp - 0x60], rsi	      1505	packed-backend.c	FUNCTION_38
0x40029e2	        0x48895598	             mov qword [rbp - 0x68], rdx	      1505	packed-backend.c	FUNCTION_38
0x40029e6	          0x894d94	             mov dword [rbp - 0x6c], ecx	      1505	packed-backend.c	FUNCTION_38
0x40029e9	    0x64488b042528	                mov rax, qword fs:[0x28]	      1505	packed-backend.c	FUNCTION_38
0x40029f2	        0x488945e8	             mov qword [rbp - 0x18], rax	      1505	packed-backend.c	FUNCTION_38
0x40029f6	            0x31c0	                            xor eax, eax	      1505	packed-backend.c	FUNCTION_38
0x40029f8	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1506	packed-backend.c	FUNCTION_38
0x40029fc	      0xba00000000	                              mov edx, 0	      1506	packed-backend.c	FUNCTION_38
0x4002a01	      0xbe02000000	                              mov esi, 2	      1506	packed-backend.c	FUNCTION_38
0x4002a06	          0x4889c7	                            mov rdi, rax	      1506	packed-backend.c	FUNCTION_38
0x4002a09	      0xe85adbffff	                call sym.packed_downcast	      1506	packed-backend.c	FUNCTION_38
0x4002a0e	        0x488945c0	             mov qword [rbp - 0x40], rax	      1506	packed-backend.c	FUNCTION_38
0x4002a12	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1508	packed-backend.c	FUNCTION_38
0x4002a1a	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      1508	packed-backend.c	FUNCTION_38
0x4002a22	    0x48c745e00000	               mov qword [rbp - 0x20], 0	      1508	packed-backend.c	FUNCTION_38
0x4002a2a	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1515	packed-backend.c	FUNCTION_38	IF_1
0x4002a2e	          0x8b4008	                mov eax, dword [rax + 8]	      1515	packed-backend.c	FUNCTION_38	IF_1
0x4002a31	            0x85c0	                           test eax, eax	      1515	packed-backend.c	FUNCTION_38	IF_1
0x4002a33	            0x750a	                           jne 0x4002a3f	      1515	packed-backend.c	FUNCTION_38	IF_1
0x4002a35	      0xb800000000	                              mov eax, 0	      1516	packed-backend.c	FUNCTION_38	IF_1
0x4002a3a	      0xe962010000	                           jmp 0x4002ba1	      1516	packed-backend.c	FUNCTION_38	IF_1
0x4002a3f	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1524	packed-backend.c	FUNCTION_38	CALL_2
0x4002a43	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1524	packed-backend.c	FUNCTION_38	CALL_2
0x4002a47	          0x4889d6	                            mov rsi, rdx	      1524	packed-backend.c	FUNCTION_38	CALL_2
0x4002a4a	          0x4889c7	                            mov rdi, rax	      1524	packed-backend.c	FUNCTION_38	CALL_2
0x4002a4d	      0xe800000000	                          call 0x4002a52	      1524	packed-backend.c	FUNCTION_38	CALL_2
0x4002a52	        0x488945c8	             mov qword [rbp - 0x38], rax	      1524	packed-backend.c	FUNCTION_38	CALL_2
0x4002a56	      0x48837dc800	               cmp qword [rbp - 0x38], 0	      1525	packed-backend.c	FUNCTION_38	IF_2
0x4002a5b	            0x750a	                           jne 0x4002a67	      1525	packed-backend.c	FUNCTION_38	IF_2
0x4002a5d	      0xb8ffffffff	                     mov eax, 0xffffffff	      1526	packed-backend.c	FUNCTION_38	IF_2
0x4002a62	      0xe93a010000	                           jmp 0x4002ba1	      1526	packed-backend.c	FUNCTION_38	IF_2
0x4002a67	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x4002a6b	          0x488b00	                    mov rax, qword [rax]	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x4002a6e	        0x488945b8	             mov qword [rbp - 0x48], rax	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x4002a72	            0xeb6d	                           jmp 0x4002ae1	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x4002a74	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x4002a78	          0x488b30	                    mov rsi, qword [rax]	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x4002a7b	        0x488d7dd0	                   lea rdi, [rbp - 0x30]	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x4002a7f	        0x488b4da0	             mov rcx, qword [rbp - 0x60]	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x4002a83	          0x8b5594	             mov edx, dword [rbp - 0x6c]	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x4002a86	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x4002a8a	          0x4989f9	                             mov r9, rdi	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x4002a8d	          0x4989c8	                             mov r8, rcx	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x4002a90	            0x89d1	                            mov ecx, edx	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x4002a92	      0xba00000000	                              mov edx, 0	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x4002a97	          0x4889c7	                            mov rdi, rax	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x4002a9a	      0xe800000000	                          call 0x4002a9f	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x4002a9f	            0x85c0	                           test eax, eax	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x4002aa1	            0x7439	                            je 0x4002adc	      1529	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_1
0x4002aa3	        0x4c8b65e0	             mov r12, qword [rbp - 0x20]	      1531	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_3
0x4002aa7	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1531	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_3
0x4002aab	          0x488b18	                    mov rbx, qword [rax]	      1531	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_3
0x4002aae	      0xbf00000000	                              mov edi, 0	      1531	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_3
0x4002ab3	      0xe877d7ffff	                               call sym.	      1531	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_3
0x4002ab8	          0x4c89e2	                            mov rdx, r12	      1531	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_3
0x4002abb	          0x4889de	                            mov rsi, rbx	      1531	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_3
0x4002abe	          0x4889c7	                            mov rdi, rax	      1531	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_3
0x4002ac1	      0xb800000000	                              mov eax, 0	      1531	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_3
0x4002ac6	      0xe800000000	                          call 0x4002acb	      1531	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1	CALL_3
0x4002acb	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1533	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1
0x4002acf	      0xbe00000000	                              mov esi, 0	      1533	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1
0x4002ad4	          0x4889c7	                            mov rdi, rax	      1533	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1
0x4002ad7	      0xe884d6ffff	                  call sym.strbuf_setlen	      1533	packed-backend.c	FUNCTION_38	FUNCTION_1	IF_1
0x4002adc	      0x488345b810	            add qword [rbp - 0x48], 0x10	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x4002ae1	      0x48837db800	               cmp qword [rbp - 0x48], 0	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x4002ae6	            0x7421	                            je 0x4002b09	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x4002ae8	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x4002aec	          0x488b10	                    mov rdx, qword [rax]	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x4002aef	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x4002af3	          0x8b4008	                mov eax, dword [rax + 8]	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x4002af6	            0x89c0	                            mov eax, eax	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x4002af8	        0x48c1e004	                              shl rax, 4	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x4002afc	          0x4801d0	                            add rax, rdx	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x4002aff	        0x483b45b8	             cmp rax, qword [rbp - 0x48]	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x4002b03	     0xf876bffffff	                            ja 0x4002a74	      1528	packed-backend.c	FUNCTION_38	FUNCTION_1
0x4002b09	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1537	packed-backend.c	FUNCTION_38	CALL_3
0x4002b0d	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1537	packed-backend.c	FUNCTION_38	CALL_3
0x4002b11	          0x4889d6	                            mov rsi, rdx	      1537	packed-backend.c	FUNCTION_38	CALL_3
0x4002b14	          0x4889c7	                            mov rdi, rax	      1537	packed-backend.c	FUNCTION_38	CALL_3
0x4002b17	      0xe800000000	                          call 0x4002b1c	      1537	packed-backend.c	FUNCTION_38	CALL_3
0x4002b1c	          0x8945b4	             mov dword [rbp - 0x4c], eax	      1537	packed-backend.c	FUNCTION_38	CALL_3
0x4002b1f	        0x837db400	               cmp dword [rbp - 0x4c], 0	      1539	packed-backend.c	FUNCTION_38	IF_3
0x4002b23	            0x7461	                            je 0x4002b86	      1539	packed-backend.c	FUNCTION_38	IF_3
0x4002b25	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1540	packed-backend.c	FUNCTION_38	IF_3	IF_4
0x4002b29	          0x8b4008	                mov eax, dword [rax + 8]	      1540	packed-backend.c	FUNCTION_38	IF_3	IF_4
0x4002b2c	          0x83f801	                              cmp eax, 1	      1540	packed-backend.c	FUNCTION_38	IF_3	IF_4
0x4002b2f	            0x7532	                           jne 0x4002b63	      1540	packed-backend.c	FUNCTION_38	IF_3	IF_4
0x4002b31	        0x4c8b65e0	             mov r12, qword [rbp - 0x20]	      1541	packed-backend.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x4002b35	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1541	packed-backend.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x4002b39	          0x488b00	                    mov rax, qword [rax]	      1541	packed-backend.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x4002b3c	          0x488b18	                    mov rbx, qword [rax]	      1541	packed-backend.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x4002b3f	      0xbf00000000	                              mov edi, 0	      1541	packed-backend.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x4002b44	      0xe8e6d6ffff	                               call sym.	      1541	packed-backend.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x4002b49	          0x4c89e2	                            mov rdx, r12	      1541	packed-backend.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x4002b4c	          0x4889de	                            mov rsi, rbx	      1541	packed-backend.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x4002b4f	          0x4889c7	                            mov rdi, rax	      1541	packed-backend.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x4002b52	      0xb800000000	                              mov eax, 0	      1541	packed-backend.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x4002b57	      0xe800000000	                          call 0x4002b5c	      1541	packed-backend.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x4002b5c	      0xe8dfd4ffff	                    call sym.const_error	      1541	packed-backend.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x4002b61	            0xeb23	                           jmp 0x4002b86	      1541	packed-backend.c	FUNCTION_38	IF_3	IF_4	CALL_4
0x4002b63	        0x488b5de0	             mov rbx, qword [rbp - 0x20]	      1544	packed-backend.c	FUNCTION_38	IF_3	CALL_5
0x4002b67	      0xbf00000000	                              mov edi, 0	      1544	packed-backend.c	FUNCTION_38	IF_3	CALL_5
0x4002b6c	      0xe8bed6ffff	                               call sym.	      1544	packed-backend.c	FUNCTION_38	IF_3	CALL_5
0x4002b71	          0x4889de	                            mov rsi, rbx	      1544	packed-backend.c	FUNCTION_38	IF_3	CALL_5
0x4002b74	          0x4889c7	                            mov rdi, rax	      1544	packed-backend.c	FUNCTION_38	IF_3	CALL_5
0x4002b77	      0xb800000000	                              mov eax, 0	      1544	packed-backend.c	FUNCTION_38	IF_3	CALL_5
0x4002b7c	      0xe800000000	                          call 0x4002b81	      1544	packed-backend.c	FUNCTION_38	IF_3	CALL_5
0x4002b81	      0xe8bad4ffff	                    call sym.const_error	      1544	packed-backend.c	FUNCTION_38	IF_3	CALL_5
0x4002b86	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1547	packed-backend.c	FUNCTION_38	CALL_6
0x4002b8a	          0x4889c7	                            mov rdi, rax	      1547	packed-backend.c	FUNCTION_38	CALL_6
0x4002b8d	      0xe800000000	                          call 0x4002b92	      1547	packed-backend.c	FUNCTION_38	CALL_6
0x4002b92	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1548	packed-backend.c	FUNCTION_38	CALL_7
0x4002b96	          0x4889c7	                            mov rdi, rax	      1548	packed-backend.c	FUNCTION_38	CALL_7
0x4002b99	      0xe800000000	                          call 0x4002b9e	      1548	packed-backend.c	FUNCTION_38	CALL_7
0x4002b9e	          0x8b45b4	             mov eax, dword [rbp - 0x4c]	      1549	packed-backend.c	FUNCTION_38
0x4002ba1	        0x488b4de8	             mov rcx, qword [rbp - 0x18]	      1550	packed-backend.c	FUNCTION_38
0x4002ba5	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1550	packed-backend.c	FUNCTION_38
0x4002bae	            0x7405	                            je 0x4002bb5	      1550	packed-backend.c	FUNCTION_38
0x4002bb0	      0xe800000000	                          call 0x4002bb5	      1550	packed-backend.c	FUNCTION_38
0x4002bb5	        0x4883c460	                           add rsp, 0x60	      1550	packed-backend.c	FUNCTION_38
0x4002bb9	              0x5b	                                 pop rbx	      1550	packed-backend.c	FUNCTION_38
0x4002bba	            0x415c	                                 pop r12	      1550	packed-backend.c	FUNCTION_38
0x4002bbc	              0x5d	                                 pop rbp	      1550	packed-backend.c	FUNCTION_38
0x4002bbd	              0xc3	                                     ret	      1550	packed-backend.c	FUNCTION_38
packed_create_symref	SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0:functions,0:IF,0	10
0x4002bd0	              0x55	                                push rbp	      1565	packed-backend.c	FUNCTION_40
0x4002bd1	          0x4889e5	                            mov rbp, rsp	      1565	packed-backend.c	FUNCTION_40
0x4002bd4	        0x4883ec20	                           sub rsp, 0x20	      1565	packed-backend.c	FUNCTION_40
0x4002bd8	        0x48897df8	                mov qword [rbp - 8], rdi	      1565	packed-backend.c	FUNCTION_40
0x4002bdc	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1565	packed-backend.c	FUNCTION_40
0x4002be0	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1565	packed-backend.c	FUNCTION_40
0x4002be4	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1565	packed-backend.c	FUNCTION_40
0x4002be8	      0xbf00000000	                              mov edi, 0	      1566	packed-backend.c	FUNCTION_40	CALL_1
0x4002bed	      0xb800000000	                              mov eax, 0	      1566	packed-backend.c	FUNCTION_40	CALL_1
0x4002bf2	      0xe800000000	              call sym.packed_rename_ref	      1566	packed-backend.c	FUNCTION_40	CALL_1
next_record	SWITCH,0:FOR,0:CALL,14:ELSE,2:WHILE,0:DO,0:functions,0:IF,9	264
0x400159e	              0x55	                                push rbp	       788	packed-backend.c	FUNCTION_21
0x400159f	          0x4889e5	                            mov rbp, rsp	       788	packed-backend.c	FUNCTION_21
0x40015a2	        0x4883ec30	                           sub rsp, 0x30	       788	packed-backend.c	FUNCTION_21
0x40015a6	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       788	packed-backend.c	FUNCTION_21
0x40015aa	    0x64488b042528	                mov rax, qword fs:[0x28]	       788	packed-backend.c	FUNCTION_21
0x40015b3	        0x488945f8	                mov qword [rbp - 8], rax	       788	packed-backend.c	FUNCTION_21
0x40015b7	            0x31c0	                            xor eax, eax	       788	packed-backend.c	FUNCTION_21
0x40015b9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       789	packed-backend.c	FUNCTION_21
0x40015bd	        0x488b4030	            mov rax, qword [rax + 0x30] 	       789	packed-backend.c	FUNCTION_21
0x40015c1	        0x488945e8	             mov qword [rbp - 0x18], rax	       789	packed-backend.c	FUNCTION_21
0x40015c5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       791	packed-backend.c	FUNCTION_21
0x40015c9	        0x4883c068	                           add rax, 0x68	       791	packed-backend.c	FUNCTION_21
0x40015cd	      0xbe00000000	                              mov esi, 0	       791	packed-backend.c	FUNCTION_21
0x40015d2	          0x4889c7	                            mov rdi, rax	       791	packed-backend.c	FUNCTION_21
0x40015d5	      0xe886ebffff	                  call sym.strbuf_setlen	       791	packed-backend.c	FUNCTION_21
0x40015da	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       793	packed-backend.c	FUNCTION_21	IF_1
0x40015de	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       793	packed-backend.c	FUNCTION_21	IF_1
0x40015e2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       793	packed-backend.c	FUNCTION_21	IF_1
0x40015e6	        0x488b4038	            mov rax, qword [rax + 0x38] 	       793	packed-backend.c	FUNCTION_21	IF_1
0x40015ea	          0x4839c2	                            cmp rdx, rax	       793	packed-backend.c	FUNCTION_21	IF_1
0x40015ed	            0x750a	                           jne 0x40015f9	       793	packed-backend.c	FUNCTION_21	IF_1
0x40015ef	      0xb8ffffffff	                     mov eax, 0xffffffff	       794	packed-backend.c	FUNCTION_21	IF_1
0x40015f4	      0xe948030000	                           jmp 0x4001941	       794	packed-backend.c	FUNCTION_21	IF_1
0x40015f9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       796	packed-backend.c	FUNCTION_21
0x40015fd	    0xc74020020000	               mov dword [rax + 0x20], 2	       796	packed-backend.c	FUNCTION_21
0x4001604	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       798	packed-backend.c	FUNCTION_21	IF_2
0x4001608	        0x488b4038	            mov rax, qword [rax + 0x38] 	       798	packed-backend.c	FUNCTION_21	IF_2
0x400160c	          0x4889c2	                            mov rdx, rax	       798	packed-backend.c	FUNCTION_21	IF_2
0x400160f	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       798	packed-backend.c	FUNCTION_21	IF_2
0x4001613	          0x4829c2	                            sub rdx, rax	       798	packed-backend.c	FUNCTION_21	IF_2
0x4001616	          0x4889d0	                            mov rax, rdx	       798	packed-backend.c	FUNCTION_21	IF_2
0x4001619	        0x4883f829	                           cmp rax, 0x29	       798	packed-backend.c	FUNCTION_21	IF_2
0x400161d	            0x7e44	                           jle 0x4001663	       798	packed-backend.c	FUNCTION_21	IF_2
0x400161f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       799	packed-backend.c	FUNCTION_21	IF_2	CALL_1
0x4001623	        0x488d4840	                   lea rcx, [rax + 0x40]	       799	packed-backend.c	FUNCTION_21	IF_2	CALL_1
0x4001627	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       799	packed-backend.c	FUNCTION_21	IF_2	CALL_1
0x400162b	        0x488d55e8	                   lea rdx, [rbp - 0x18]	       799	packed-backend.c	FUNCTION_21	IF_2	CALL_1
0x400162f	          0x4889ce	                            mov rsi, rcx	       799	packed-backend.c	FUNCTION_21	IF_2	CALL_1
0x4001632	          0x4889c7	                            mov rdi, rax	       799	packed-backend.c	FUNCTION_21	IF_2	CALL_1
0x4001635	      0xe800000000	                          call 0x400163a	       799	packed-backend.c	FUNCTION_21	IF_2	CALL_1
0x400163a	            0x85c0	                           test eax, eax	       798	packed-backend.c	FUNCTION_21	IF_2
0x400163c	            0x7525	                           jne 0x4001663	       798	packed-backend.c	FUNCTION_21	IF_2
0x400163e	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       800	packed-backend.c	FUNCTION_21	IF_2
0x4001642	        0x488d5001	                      lea rdx, [rax + 1]	       800	packed-backend.c	FUNCTION_21	IF_2
0x4001646	        0x488955e8	             mov qword [rbp - 0x18], rdx	       800	packed-backend.c	FUNCTION_21	IF_2
0x400164a	           0xfb600	                   movzx eax, byte [rax]	       800	packed-backend.c	FUNCTION_21	IF_2
0x400164d	           0xfb6c0	                           movzx eax, al	       800	packed-backend.c	FUNCTION_21	IF_2
0x4001650	            0x4898	                                    cdqe	       800	packed-backend.c	FUNCTION_21	IF_2
0x4001652	     0xfb680000000	                   movzx eax, byte [rax]	       800	packed-backend.c	FUNCTION_21	IF_2
0x4001659	           0xfb6c0	                           movzx eax, al	       800	packed-backend.c	FUNCTION_21	IF_2
0x400165c	          0x83e001	                              and eax, 1	       800	packed-backend.c	FUNCTION_21	IF_2
0x400165f	            0x85c0	                           test eax, eax	       799	packed-backend.c	FUNCTION_21	IF_2	CALL_1
0x4001661	            0x753e	                           jne 0x40016a1	       799	packed-backend.c	FUNCTION_21	IF_2	CALL_1
0x4001663	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       802	packed-backend.c	FUNCTION_21	IF_2
0x4001667	        0x488b4038	            mov rax, qword [rax + 0x38] 	       802	packed-backend.c	FUNCTION_21	IF_2
0x400166b	          0x4889c2	                            mov rdx, rax	       802	packed-backend.c	FUNCTION_21	IF_2
0x400166e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       802	packed-backend.c	FUNCTION_21	IF_2
0x4001672	        0x488b4030	            mov rax, qword [rax + 0x30] 	       802	packed-backend.c	FUNCTION_21	IF_2
0x4001676	          0x4829c2	                            sub rdx, rax	       802	packed-backend.c	FUNCTION_21	IF_2
0x4001679	          0x4889d0	                            mov rax, rdx	       802	packed-backend.c	FUNCTION_21	IF_2
0x400167c	          0x4889c2	                            mov rdx, rax	       801	packed-backend.c	FUNCTION_21	IF_2	CALL_2
0x400167f	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       801	packed-backend.c	FUNCTION_21	IF_2	CALL_2
0x4001683	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       801	packed-backend.c	FUNCTION_21	IF_2	CALL_2
0x4001687	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       801	packed-backend.c	FUNCTION_21	IF_2	CALL_2
0x400168b	        0x488b4028	            mov rax, qword [rax + 0x28] 	       801	packed-backend.c	FUNCTION_21	IF_2	CALL_2
0x400168f	          0x488b00	                    mov rax, qword [rax]	       801	packed-backend.c	FUNCTION_21	IF_2	CALL_2
0x4001692	        0x488b4010	            mov rax, qword [rax + 0x10] 	       801	packed-backend.c	FUNCTION_21	IF_2	CALL_2
0x4001696	          0x4889ce	                            mov rsi, rcx	       801	packed-backend.c	FUNCTION_21	IF_2	CALL_2
0x4001699	          0x4889c7	                            mov rdi, rax	       801	packed-backend.c	FUNCTION_21	IF_2	CALL_2
0x400169c	      0xe8e1efffff	               call sym.die_invalid_line	       801	packed-backend.c	FUNCTION_21	IF_2	CALL_2
0x40016a1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       804	packed-backend.c	FUNCTION_21	CALL_3
0x40016a5	        0x488b4038	            mov rax, qword [rax + 0x38] 	       804	packed-backend.c	FUNCTION_21	CALL_3
0x40016a9	          0x4889c2	                            mov rdx, rax	       804	packed-backend.c	FUNCTION_21	CALL_3
0x40016ac	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       804	packed-backend.c	FUNCTION_21	CALL_3
0x40016b0	          0x4829c2	                            sub rdx, rax	       804	packed-backend.c	FUNCTION_21	CALL_3
0x40016b3	          0x4889d0	                            mov rax, rdx	       804	packed-backend.c	FUNCTION_21	CALL_3
0x40016b6	          0x4889c2	                            mov rdx, rax	       804	packed-backend.c	FUNCTION_21	CALL_3
0x40016b9	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       804	packed-backend.c	FUNCTION_21	CALL_3
0x40016bd	      0xbe0a000000	                            mov esi, 0xa	       804	packed-backend.c	FUNCTION_21	CALL_3
0x40016c2	          0x4889c7	                            mov rdi, rax	       804	packed-backend.c	FUNCTION_21	CALL_3
0x40016c5	      0xe800000000	                          call 0x40016ca	       804	packed-backend.c	FUNCTION_21	CALL_3
0x40016ca	        0x488945f0	             mov qword [rbp - 0x10], rax	       804	packed-backend.c	FUNCTION_21	CALL_3
0x40016ce	      0x48837df000	               cmp qword [rbp - 0x10], 0	       805	packed-backend.c	FUNCTION_21	IF_3
0x40016d3	            0x753e	                           jne 0x4001713	       805	packed-backend.c	FUNCTION_21	IF_3
0x40016d5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       807	packed-backend.c	FUNCTION_21	IF_3
0x40016d9	        0x488b4038	            mov rax, qword [rax + 0x38] 	       807	packed-backend.c	FUNCTION_21	IF_3
0x40016dd	          0x4889c2	                            mov rdx, rax	       807	packed-backend.c	FUNCTION_21	IF_3
0x40016e0	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       807	packed-backend.c	FUNCTION_21	IF_3
0x40016e4	        0x488b4030	            mov rax, qword [rax + 0x30] 	       807	packed-backend.c	FUNCTION_21	IF_3
0x40016e8	          0x4829c2	                            sub rdx, rax	       807	packed-backend.c	FUNCTION_21	IF_3
0x40016eb	          0x4889d0	                            mov rax, rdx	       807	packed-backend.c	FUNCTION_21	IF_3
0x40016ee	          0x4889c2	                            mov rdx, rax	       806	packed-backend.c	FUNCTION_21	IF_3	CALL_4
0x40016f1	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       806	packed-backend.c	FUNCTION_21	IF_3	CALL_4
0x40016f5	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       806	packed-backend.c	FUNCTION_21	IF_3	CALL_4
0x40016f9	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       806	packed-backend.c	FUNCTION_21	IF_3	CALL_4
0x40016fd	        0x488b4028	            mov rax, qword [rax + 0x28] 	       806	packed-backend.c	FUNCTION_21	IF_3	CALL_4
0x4001701	          0x488b00	                    mov rax, qword [rax]	       806	packed-backend.c	FUNCTION_21	IF_3	CALL_4
0x4001704	        0x488b4010	            mov rax, qword [rax + 0x10] 	       806	packed-backend.c	FUNCTION_21	IF_3	CALL_4
0x4001708	          0x4889ce	                            mov rsi, rcx	       806	packed-backend.c	FUNCTION_21	IF_3	CALL_4
0x400170b	          0x4889c7	                            mov rdi, rax	       806	packed-backend.c	FUNCTION_21	IF_3	CALL_4
0x400170e	      0xe815efffff	          call sym.die_unterminated_line	       806	packed-backend.c	FUNCTION_21	IF_3	CALL_4
0x4001713	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       809	packed-backend.c	FUNCTION_21	CALL_5
0x4001717	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       809	packed-backend.c	FUNCTION_21	CALL_5
0x400171b	          0x4829d0	                            sub rax, rdx	       809	packed-backend.c	FUNCTION_21	CALL_5
0x400171e	          0x4889c6	                            mov rsi, rax	       809	packed-backend.c	FUNCTION_21	CALL_5
0x4001721	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       809	packed-backend.c	FUNCTION_21	CALL_5
0x4001725	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       809	packed-backend.c	FUNCTION_21	CALL_5
0x4001729	        0x488d4a68	                   lea rcx, [rdx + 0x68]	       809	packed-backend.c	FUNCTION_21	CALL_5
0x400172d	          0x4889f2	                            mov rdx, rsi	       809	packed-backend.c	FUNCTION_21	CALL_5
0x4001730	          0x4889c6	                            mov rsi, rax	       809	packed-backend.c	FUNCTION_21	CALL_5
0x4001733	          0x4889cf	                            mov rdi, rcx	       809	packed-backend.c	FUNCTION_21	CALL_5
0x4001736	      0xe800000000	                          call 0x400173b	       809	packed-backend.c	FUNCTION_21	CALL_5
0x400173b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       810	packed-backend.c	FUNCTION_21
0x400173f	        0x488b5078	            mov rdx, qword [rax + 0x78] 	       810	packed-backend.c	FUNCTION_21
0x4001743	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       810	packed-backend.c	FUNCTION_21
0x4001747	        0x48895010	             mov qword [rax + 0x10], rdx	       810	packed-backend.c	FUNCTION_21
0x400174b	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       812	packed-backend.c	FUNCTION_21	IF_4	CALL_6
0x400174f	        0x488b4010	            mov rax, qword [rax + 0x10] 	       812	packed-backend.c	FUNCTION_21	IF_4	CALL_6
0x4001753	      0xbe01000000	                              mov esi, 1	       812	packed-backend.c	FUNCTION_21	IF_4	CALL_6
0x4001758	          0x4889c7	                            mov rdi, rax	       812	packed-backend.c	FUNCTION_21	IF_4	CALL_6
0x400175b	      0xe800000000	                          call 0x4001760	       812	packed-backend.c	FUNCTION_21	IF_4	CALL_6
0x4001760	            0x85c0	                           test eax, eax	       812	packed-backend.c	FUNCTION_21	IF_4	CALL_6
0x4001762	            0x7451	                            je 0x40017b5	       812	packed-backend.c	FUNCTION_21	IF_4	CALL_6
0x4001764	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       813	packed-backend.c	FUNCTION_21	IF_4	IF_5	CALL_7
0x4001768	        0x488b4010	            mov rax, qword [rax + 0x10] 	       813	packed-backend.c	FUNCTION_21	IF_4	IF_5	CALL_7
0x400176c	          0x4889c7	                            mov rdi, rax	       813	packed-backend.c	FUNCTION_21	IF_4	IF_5	CALL_7
0x400176f	      0xe800000000	                          call 0x4001774	       813	packed-backend.c	FUNCTION_21	IF_4	IF_5	CALL_7
0x4001774	            0x85c0	                           test eax, eax	       813	packed-backend.c	FUNCTION_21	IF_4	IF_5	CALL_7
0x4001776	            0x751a	                           jne 0x4001792	       813	packed-backend.c	FUNCTION_21	IF_4	IF_5	CALL_7
0x4001778	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       814	packed-backend.c	FUNCTION_21	IF_4	IF_5	CALL_8
0x400177c	        0x488b4010	            mov rax, qword [rax + 0x10] 	       814	packed-backend.c	FUNCTION_21	IF_4	IF_5	CALL_8
0x4001780	          0x4889c6	                            mov rsi, rax	       814	packed-backend.c	FUNCTION_21	IF_4	IF_5	CALL_8
0x4001783	      0xbf00000000	                              mov edi, 0	       814	packed-backend.c	FUNCTION_21	IF_4	IF_5	CALL_8
0x4001788	      0xb800000000	                              mov eax, 0	       814	packed-backend.c	FUNCTION_21	IF_4	IF_5	CALL_8
0x400178d	      0xe800000000	                          call 0x4001792	       814	packed-backend.c	FUNCTION_21	IF_4	IF_5	CALL_8
0x4001792	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       816	packed-backend.c	FUNCTION_21	IF_4	CALL_9
0x4001796	        0x4883c040	                           add rax, 0x40	       816	packed-backend.c	FUNCTION_21	IF_4	CALL_9
0x400179a	          0x4889c7	                            mov rdi, rax	       816	packed-backend.c	FUNCTION_21	IF_4	CALL_9
0x400179d	      0xe880ebffff	                         call sym.oidclr	       816	packed-backend.c	FUNCTION_21	IF_4	CALL_9
0x40017a2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       817	packed-backend.c	FUNCTION_21	IF_4
0x40017a6	          0x8b4020	            mov eax, dword [rax + 0x20] 	       817	packed-backend.c	FUNCTION_21	IF_4
0x40017a9	          0x83c80c	                             or eax, 0xc	       817	packed-backend.c	FUNCTION_21	IF_4
0x40017ac	            0x89c2	                            mov edx, eax	       817	packed-backend.c	FUNCTION_21	IF_4
0x40017ae	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       817	packed-backend.c	FUNCTION_21	IF_4
0x40017b2	          0x895020	             mov dword [rax + 0x20], edx	       817	packed-backend.c	FUNCTION_21	IF_4
0x40017b5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       819	packed-backend.c	FUNCTION_21	IF_6
0x40017b9	        0x488b4028	            mov rax, qword [rax + 0x28] 	       819	packed-backend.c	FUNCTION_21	IF_6
0x40017bd	          0x8b4028	            mov eax, dword [rax + 0x28] 	       819	packed-backend.c	FUNCTION_21	IF_6
0x40017c0	          0x83f802	                              cmp eax, 2	       819	packed-backend.c	FUNCTION_21	IF_6
0x40017c3	            0x7429	                            je 0x40017ee	       819	packed-backend.c	FUNCTION_21	IF_6
0x40017c5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       820	packed-backend.c	FUNCTION_21	IF_6
0x40017c9	        0x488b4028	            mov rax, qword [rax + 0x28] 	       820	packed-backend.c	FUNCTION_21	IF_6
0x40017cd	          0x8b4028	            mov eax, dword [rax + 0x28] 	       820	packed-backend.c	FUNCTION_21	IF_6
0x40017d0	          0x83f801	                              cmp eax, 1	       819	packed-backend.c	FUNCTION_21	IF_6
0x40017d3	            0x752c	                           jne 0x4001801	       819	packed-backend.c	FUNCTION_21	IF_6
0x40017d5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       821	packed-backend.c	FUNCTION_21	IF_6	CALL_10
0x40017d9	        0x488b4010	            mov rax, qword [rax + 0x10] 	       821	packed-backend.c	FUNCTION_21	IF_6	CALL_10
0x40017dd	      0xbe00000000	                              mov esi, 0	       821	packed-backend.c	FUNCTION_21	IF_6	CALL_10
0x40017e2	          0x4889c7	                            mov rdi, rax	       821	packed-backend.c	FUNCTION_21	IF_6	CALL_10
0x40017e5	      0xe800000000	                          call 0x40017ea	       821	packed-backend.c	FUNCTION_21	IF_6	CALL_10
0x40017ea	            0x85c0	                           test eax, eax	       820	packed-backend.c	FUNCTION_21	IF_6
0x40017ec	            0x7413	                            je 0x4001801	       820	packed-backend.c	FUNCTION_21	IF_6
0x40017ee	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       822	packed-backend.c	FUNCTION_21	IF_6
0x40017f2	          0x8b4020	            mov eax, dword [rax + 0x20] 	       822	packed-backend.c	FUNCTION_21	IF_6
0x40017f5	          0x83c840	                            or eax, 0x40	       822	packed-backend.c	FUNCTION_21	IF_6
0x40017f8	            0x89c2	                            mov edx, eax	       822	packed-backend.c	FUNCTION_21	IF_6
0x40017fa	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       822	packed-backend.c	FUNCTION_21	IF_6
0x40017fe	          0x895020	             mov dword [rax + 0x20], edx	       822	packed-backend.c	FUNCTION_21	IF_6
0x4001801	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       824	packed-backend.c	FUNCTION_21
0x4001805	        0x488d5001	                      lea rdx, [rax + 1]	       824	packed-backend.c	FUNCTION_21
0x4001809	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       824	packed-backend.c	FUNCTION_21
0x400180d	        0x48895030	             mov qword [rax + 0x30], rdx	       824	packed-backend.c	FUNCTION_21
0x4001811	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       826	packed-backend.c	FUNCTION_21	IF_7
0x4001815	        0x488b5030	            mov rdx, qword [rax + 0x30] 	       826	packed-backend.c	FUNCTION_21	IF_7
0x4001819	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       826	packed-backend.c	FUNCTION_21	IF_7
0x400181d	        0x488b4038	            mov rax, qword [rax + 0x38] 	       826	packed-backend.c	FUNCTION_21	IF_7
0x4001821	          0x4839c2	                            cmp rdx, rax	       826	packed-backend.c	FUNCTION_21	IF_7
0x4001824	     0xf8302010000	                           jae 0x400192c	       826	packed-backend.c	FUNCTION_21	IF_7
0x400182a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       826	packed-backend.c	FUNCTION_21	IF_7
0x400182e	        0x488b4030	            mov rax, qword [rax + 0x30] 	       826	packed-backend.c	FUNCTION_21	IF_7
0x4001832	           0xfb600	                   movzx eax, byte [rax]	       826	packed-backend.c	FUNCTION_21	IF_7
0x4001835	            0x3c5e	                            cmp al, 0x5e	       826	packed-backend.c	FUNCTION_21	IF_7
0x4001837	     0xf85ef000000	                           jne 0x400192c	       826	packed-backend.c	FUNCTION_21	IF_7
0x400183d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       827	packed-backend.c	FUNCTION_21	IF_7
0x4001841	        0x488b4030	            mov rax, qword [rax + 0x30] 	       827	packed-backend.c	FUNCTION_21	IF_7
0x4001845	        0x4883c001	                              add rax, 1	       827	packed-backend.c	FUNCTION_21	IF_7
0x4001849	        0x488945e8	             mov qword [rbp - 0x18], rax	       827	packed-backend.c	FUNCTION_21	IF_7
0x400184d	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       828	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x4001851	        0x488b4038	            mov rax, qword [rax + 0x38] 	       828	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x4001855	          0x4889c2	                            mov rdx, rax	       828	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x4001858	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       828	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x400185c	          0x4829c2	                            sub rdx, rax	       828	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x400185f	          0x4889d0	                            mov rax, rdx	       828	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x4001862	        0x4883f828	                           cmp rax, 0x28	       828	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x4001866	            0x7e32	                           jle 0x400189a	       828	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x4001868	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       829	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_11
0x400186c	        0x488d4854	                   lea rcx, [rax + 0x54]	       829	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_11
0x4001870	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       829	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_11
0x4001874	        0x488d55e8	                   lea rdx, [rbp - 0x18]	       829	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_11
0x4001878	          0x4889ce	                            mov rsi, rcx	       829	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_11
0x400187b	          0x4889c7	                            mov rdi, rax	       829	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_11
0x400187e	      0xe800000000	                          call 0x4001883	       829	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_11
0x4001883	            0x85c0	                           test eax, eax	       828	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x4001885	            0x7513	                           jne 0x400189a	       828	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x4001887	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       830	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x400188b	        0x488d5001	                      lea rdx, [rax + 1]	       830	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x400188f	        0x488955e8	             mov qword [rbp - 0x18], rdx	       830	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x4001893	           0xfb600	                   movzx eax, byte [rax]	       830	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x4001896	            0x3c0a	                             cmp al, 0xa	       829	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_11
0x4001898	            0x743e	                            je 0x40018d8	       829	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_11
0x400189a	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       832	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x400189e	        0x488b4038	            mov rax, qword [rax + 0x38] 	       832	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x40018a2	          0x4889c2	                            mov rdx, rax	       832	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x40018a5	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       832	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x40018a9	        0x488b4030	            mov rax, qword [rax + 0x30] 	       832	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x40018ad	          0x4829c2	                            sub rdx, rax	       832	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x40018b0	          0x4889d0	                            mov rax, rdx	       832	packed-backend.c	FUNCTION_21	IF_7	IF_8
0x40018b3	          0x4889c2	                            mov rdx, rax	       831	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_12
0x40018b6	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       831	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_12
0x40018ba	        0x488b4830	            mov rcx, qword [rax + 0x30] 	       831	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_12
0x40018be	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       831	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_12
0x40018c2	        0x488b4028	            mov rax, qword [rax + 0x28] 	       831	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_12
0x40018c6	          0x488b00	                    mov rax, qword [rax]	       831	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_12
0x40018c9	        0x488b4010	            mov rax, qword [rax + 0x10] 	       831	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_12
0x40018cd	          0x4889ce	                            mov rsi, rcx	       831	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_12
0x40018d0	          0x4889c7	                            mov rdi, rax	       831	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_12
0x40018d3	      0xe8aaedffff	               call sym.die_invalid_line	       831	packed-backend.c	FUNCTION_21	IF_7	IF_8	CALL_12
0x40018d8	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       833	packed-backend.c	FUNCTION_21	IF_7
0x40018dc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       833	packed-backend.c	FUNCTION_21	IF_7
0x40018e0	        0x48895030	             mov qword [rax + 0x30], rdx	       833	packed-backend.c	FUNCTION_21	IF_7
0x40018e4	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       840	packed-backend.c	FUNCTION_21	IF_7	IF_9
0x40018e8	          0x8b4020	            mov eax, dword [rax + 0x20] 	       840	packed-backend.c	FUNCTION_21	IF_7	IF_9
0x40018eb	          0x83e004	                              and eax, 4	       840	packed-backend.c	FUNCTION_21	IF_7	IF_9
0x40018ee	            0x85c0	                           test eax, eax	       840	packed-backend.c	FUNCTION_21	IF_7	IF_9
0x40018f0	            0x7425	                            je 0x4001917	       840	packed-backend.c	FUNCTION_21	IF_7	IF_9
0x40018f2	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       841	packed-backend.c	FUNCTION_21	IF_7	IF_9	CALL_13
0x40018f6	        0x4883c054	                           add rax, 0x54	       841	packed-backend.c	FUNCTION_21	IF_7	IF_9	CALL_13
0x40018fa	          0x4889c7	                            mov rdi, rax	       841	packed-backend.c	FUNCTION_21	IF_7	IF_9	CALL_13
0x40018fd	      0xe820eaffff	                         call sym.oidclr	       841	packed-backend.c	FUNCTION_21	IF_7	IF_9	CALL_13
0x4001902	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       842	packed-backend.c	FUNCTION_21	IF_7	IF_9
0x4001906	          0x8b4020	            mov eax, dword [rax + 0x20] 	       842	packed-backend.c	FUNCTION_21	IF_7	IF_9
0x4001909	          0x83e0bf	                     and eax, 0xffffffbf	       842	packed-backend.c	FUNCTION_21	IF_7	IF_9
0x400190c	            0x89c2	                            mov edx, eax	       842	packed-backend.c	FUNCTION_21	IF_7	IF_9
0x400190e	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       842	packed-backend.c	FUNCTION_21	IF_7	IF_9
0x4001912	          0x895020	             mov dword [rax + 0x20], edx	       842	packed-backend.c	FUNCTION_21	IF_7	IF_9
0x4001915	            0xeb25	                           jmp 0x400193c	       840	packed-backend.c	FUNCTION_21	IF_7	IF_9
0x4001917	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       844	packed-backend.c	FUNCTION_21	IF_7	ELSE_1
0x400191b	          0x8b4020	            mov eax, dword [rax + 0x20] 	       844	packed-backend.c	FUNCTION_21	IF_7	ELSE_1
0x400191e	          0x83c840	                            or eax, 0x40	       844	packed-backend.c	FUNCTION_21	IF_7	ELSE_1
0x4001921	            0x89c2	                            mov edx, eax	       844	packed-backend.c	FUNCTION_21	IF_7	ELSE_1
0x4001923	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       844	packed-backend.c	FUNCTION_21	IF_7	ELSE_1
0x4001927	          0x895020	             mov dword [rax + 0x20], edx	       844	packed-backend.c	FUNCTION_21	IF_7	ELSE_1
0x400192a	            0xeb10	                           jmp 0x400193c	       840	packed-backend.c	FUNCTION_21	IF_7	IF_9
0x400192c	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       847	packed-backend.c	FUNCTION_21	ELSE_2	CALL_14
0x4001930	        0x4883c054	                           add rax, 0x54	       847	packed-backend.c	FUNCTION_21	ELSE_2	CALL_14
0x4001934	          0x4889c7	                            mov rdi, rax	       847	packed-backend.c	FUNCTION_21	ELSE_2	CALL_14
0x4001937	      0xe8e6e9ffff	                         call sym.oidclr	       847	packed-backend.c	FUNCTION_21	ELSE_2	CALL_14
0x400193c	      0xb800000000	                              mov eax, 0	       850	packed-backend.c	FUNCTION_21
0x4001941	        0x488b4df8	                mov rcx, qword [rbp - 8]	       851	packed-backend.c	FUNCTION_21
0x4001945	    0x6448330c2528	                xor rcx, qword fs:[0x28]	       851	packed-backend.c	FUNCTION_21
0x400194e	            0x7405	                            je 0x4001955	       851	packed-backend.c	FUNCTION_21
0x4001950	      0xe800000000	                          call 0x4001955	       851	packed-backend.c	FUNCTION_21
0x4001955	              0xc9	                                   leave	       851	packed-backend.c	FUNCTION_21
0x4001956	              0xc3	                                     ret	       851	packed-backend.c	FUNCTION_21
packed_copy_ref	SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0:functions,0:IF,0	10
0x4002c1e	              0x55	                                push rbp	      1579	packed-backend.c	FUNCTION_42
0x4002c1f	          0x4889e5	                            mov rbp, rsp	      1579	packed-backend.c	FUNCTION_42
0x4002c22	        0x4883ec20	                           sub rsp, 0x20	      1579	packed-backend.c	FUNCTION_42
0x4002c26	        0x48897df8	                mov qword [rbp - 8], rdi	      1579	packed-backend.c	FUNCTION_42
0x4002c2a	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1579	packed-backend.c	FUNCTION_42
0x4002c2e	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1579	packed-backend.c	FUNCTION_42
0x4002c32	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1579	packed-backend.c	FUNCTION_42
0x4002c36	      0xbf00000000	                              mov edi, 0	      1580	packed-backend.c	FUNCTION_42	CALL_1
0x4002c3b	      0xb800000000	                              mov eax, 0	      1580	packed-backend.c	FUNCTION_42	CALL_1
0x4002c40	      0xe800000000	   call sym.packed_reflog_iterator_begin	      1580	packed-backend.c	FUNCTION_42	CALL_1
packed_transaction_finish	SWITCH,0:FOR,0:CALL,8:ELSE,0:WHILE,0:DO,0:functions,0:IF,1	54
0x40028da	              0x55	                                push rbp	      1471	packed-backend.c	FUNCTION_36
0x40028db	          0x4889e5	                            mov rbp, rsp	      1471	packed-backend.c	FUNCTION_36
0x40028de	        0x4883ec40	                           sub rsp, 0x40	      1471	packed-backend.c	FUNCTION_36
0x40028e2	        0x48897dd8	             mov qword [rbp - 0x28], rdi	      1471	packed-backend.c	FUNCTION_36
0x40028e6	        0x488975d0	             mov qword [rbp - 0x30], rsi	      1471	packed-backend.c	FUNCTION_36
0x40028ea	        0x488955c8	             mov qword [rbp - 0x38], rdx	      1471	packed-backend.c	FUNCTION_36
0x40028ee	        0x488b45d8	             mov rax, qword [rbp - 0x28]	      1472	packed-backend.c	FUNCTION_36	CALL_1
0x40028f2	      0xba00000000	                              mov edx, 0	      1472	packed-backend.c	FUNCTION_36	CALL_1
0x40028f7	      0xbe07000000	                              mov esi, 7	      1472	packed-backend.c	FUNCTION_36	CALL_1
0x40028fc	          0x4889c7	                            mov rdi, rax	      1472	packed-backend.c	FUNCTION_36	CALL_1
0x40028ff	      0xe864dcffff	                call sym.packed_downcast	      1472	packed-backend.c	FUNCTION_36	CALL_1
0x4002904	        0x488945f0	             mov qword [rbp - 0x10], rax	      1472	packed-backend.c	FUNCTION_36	CALL_1
0x4002908	    0xc745ecfeffff	     mov dword [rbp - 0x14], 0xfffffffe 	      1476	packed-backend.c	FUNCTION_36
0x400290f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1479	packed-backend.c	FUNCTION_36	CALL_2
0x4002913	          0x4889c7	                            mov rdi, rax	      1479	packed-backend.c	FUNCTION_36	CALL_2
0x4002916	      0xe8cddcffff	                 call sym.clear_snapshot	      1479	packed-backend.c	FUNCTION_36	CALL_2
0x400291b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1481	packed-backend.c	FUNCTION_36	CALL_3
0x400291f	        0x4883c020	                           add rax, 0x20	      1481	packed-backend.c	FUNCTION_36	CALL_3
0x4002923	          0x4889c7	                            mov rdi, rax	      1481	packed-backend.c	FUNCTION_36	CALL_3
0x4002926	      0xe800000000	                          call 0x400292b	      1481	packed-backend.c	FUNCTION_36	CALL_3
0x400292b	        0x488945f8	                mov qword [rbp - 8], rax	      1481	packed-backend.c	FUNCTION_36	CALL_3
0x400292f	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1482	packed-backend.c	FUNCTION_36	IF_1	CALL_4
0x4002933	        0x488d5028	                   lea rdx, [rax + 0x28]	      1482	packed-backend.c	FUNCTION_36	IF_1	CALL_4
0x4002937	        0x488b45f8	                mov rax, qword [rbp - 8]	      1482	packed-backend.c	FUNCTION_36	IF_1	CALL_4
0x400293b	          0x4889c6	                            mov rsi, rax	      1482	packed-backend.c	FUNCTION_36	IF_1	CALL_4
0x400293e	          0x4889d7	                            mov rdi, rdx	      1482	packed-backend.c	FUNCTION_36	IF_1	CALL_4
0x4002941	      0xe800000000	                          call 0x4002946	      1482	packed-backend.c	FUNCTION_36	IF_1	CALL_4
0x4002946	            0x85c0	                           test eax, eax	      1482	packed-backend.c	FUNCTION_36	IF_1	CALL_4
0x4002948	            0x7431	                            je 0x400297b	      1482	packed-backend.c	FUNCTION_36	IF_1	CALL_4
0x400294a	      0xe800000000	                          call 0x400294f	      1484	packed-backend.c	FUNCTION_36	IF_1	CALL_6
0x400294f	            0x8b00	                    mov eax, dword [rax]	      1483	packed-backend.c	FUNCTION_36	IF_1	CALL_5
0x4002951	            0x89c7	                            mov edi, eax	      1483	packed-backend.c	FUNCTION_36	IF_1	CALL_5
0x4002953	      0xe800000000	                          call 0x4002958	      1483	packed-backend.c	FUNCTION_36	IF_1	CALL_5
0x4002958	          0x4889c1	                            mov rcx, rax	      1483	packed-backend.c	FUNCTION_36	IF_1	CALL_5
0x400295b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1483	packed-backend.c	FUNCTION_36	IF_1	CALL_5
0x400295f	        0x488b5010	            mov rdx, qword [rax + 0x10] 	      1483	packed-backend.c	FUNCTION_36	IF_1	CALL_5
0x4002963	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1483	packed-backend.c	FUNCTION_36	IF_1	CALL_5
0x4002967	      0xbe00000000	                              mov esi, 0	      1483	packed-backend.c	FUNCTION_36	IF_1	CALL_5
0x400296c	          0x4889c7	                            mov rdi, rax	      1483	packed-backend.c	FUNCTION_36	IF_1	CALL_5
0x400296f	      0xb800000000	                              mov eax, 0	      1483	packed-backend.c	FUNCTION_36	IF_1	CALL_5
0x4002974	      0xe800000000	                          call 0x4002979	      1483	packed-backend.c	FUNCTION_36	IF_1	CALL_5
0x4002979	            0xeb07	                           jmp 0x4002982	      1485	packed-backend.c	FUNCTION_36	IF_1
0x400297b	    0xc745ec000000	               mov dword [rbp - 0x14], 0	      1488	packed-backend.c	FUNCTION_36
0x4002982	        0x488b45f8	                mov rax, qword [rbp - 8]	      1491	packed-backend.c	FUNCTION_36	CALL_7
0x4002986	          0x4889c7	                            mov rdi, rax	      1491	packed-backend.c	FUNCTION_36	CALL_7
0x4002989	      0xe800000000	                          call 0x400298e	      1491	packed-backend.c	FUNCTION_36	CALL_7
0x400298e	        0x488b55d0	             mov rdx, qword [rbp - 0x30]	      1492	packed-backend.c	FUNCTION_36	CALL_8
0x4002992	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1492	packed-backend.c	FUNCTION_36	CALL_8
0x4002996	          0x4889d6	                            mov rsi, rdx	      1492	packed-backend.c	FUNCTION_36	CALL_8
0x4002999	          0x4889c7	                            mov rdi, rax	      1492	packed-backend.c	FUNCTION_36	CALL_8
0x400299c	      0xe8bafcffff	     call sym.packed_transaction_cleanup	      1492	packed-backend.c	FUNCTION_36	CALL_8
0x40029a1	          0x8b45ec	             mov eax, dword [rbp - 0x14]	      1493	packed-backend.c	FUNCTION_36
0x40029a4	              0xc9	                                   leave	      1494	packed-backend.c	FUNCTION_36
0x40029a5	              0xc3	                                     ret	      1494	packed-backend.c	FUNCTION_36
is_null_oid	SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0:functions,0:IF,0	13
0x40002aa	              0x55	                                push rbp	       989	cache.h	FUNCTION_74
0x40002ab	          0x4889e5	                            mov rbp, rsp	       989	cache.h	FUNCTION_74
0x40002ae	        0x4883ec10	                           sub rsp, 0x10	       989	cache.h	FUNCTION_74
0x40002b2	        0x48897df8	                mov qword [rbp - 8], rdi	       989	cache.h	FUNCTION_74
0x40002b6	        0x488b45f8	                mov rax, qword [rbp - 8]	       990	cache.h	FUNCTION_74	CALL_1
0x40002ba	      0xbe00000000	                              mov esi, 0	       990	cache.h	FUNCTION_74	CALL_1
0x40002bf	          0x4889c7	                            mov rdi, rax	       990	cache.h	FUNCTION_74	CALL_1
0x40002c2	      0xe894ffffff	                        call sym.hashcmp	       990	cache.h	FUNCTION_74	CALL_1
0x40002c7	            0x85c0	                           test eax, eax	       990	cache.h	FUNCTION_74	CALL_1
0x40002c9	           0xf94c0	                                 sete al	       990	cache.h	FUNCTION_74	CALL_1
0x40002cc	           0xfb6c0	                           movzx eax, al	       990	cache.h	FUNCTION_74	CALL_1
0x40002cf	              0xc9	                                   leave	       991	cache.h	FUNCTION_74
0x40002d0	              0xc3	                                     ret	       991	cache.h	FUNCTION_74
close_lock_file_gently	SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0:functions,0:IF,0	10
0x400038c	              0x55	                                push rbp	       248	lockfile.h	FUNCTION_60
0x400038d	          0x4889e5	                            mov rbp, rsp	       248	lockfile.h	FUNCTION_60
0x4000390	        0x4883ec10	                           sub rsp, 0x10	       248	lockfile.h	FUNCTION_60
0x4000394	        0x48897df8	                mov qword [rbp - 8], rdi	       248	lockfile.h	FUNCTION_60
0x4000398	        0x488b45f8	                mov rax, qword [rbp - 8]	       249	lockfile.h	FUNCTION_60	CALL_1
0x400039c	          0x488b00	                    mov rax, qword [rax]	       249	lockfile.h	FUNCTION_60	CALL_1
0x400039f	          0x4889c7	                            mov rdi, rax	       249	lockfile.h	FUNCTION_60	CALL_1
0x40003a2	      0xe800000000	                          call 0x40003a7	       249	lockfile.h	FUNCTION_60	CALL_1
0x40003a7	              0xc9	                                   leave	       250	lockfile.h	FUNCTION_60
0x40003a8	              0xc3	                                     ret	       250	lockfile.h	FUNCTION_60
packed_delete_reflog	SWITCH,0:FOR,0:CALL,0:ELSE,0:WHILE,0:DO,0:functions,0:IF,0	7
0x4002cc7	              0x55	                                push rbp	      1618	packed-backend.c	FUNCTION_48
0x4002cc8	          0x4889e5	                            mov rbp, rsp	      1618	packed-backend.c	FUNCTION_48
0x4002ccb	        0x48897df8	                mov qword [rbp - 8], rdi	      1618	packed-backend.c	FUNCTION_48
0x4002ccf	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1618	packed-backend.c	FUNCTION_48
0x4002cd3	      0xb800000000	                              mov eax, 0	      1619	packed-backend.c	FUNCTION_48
0x4002cd8	              0x5d	                                 pop rbp	      1620	packed-backend.c	FUNCTION_48
0x4002cd9	              0xc3	                                     ret	      1620	packed-backend.c	FUNCTION_48
find_reference_location	SWITCH,0:FOR,0:CALL,3:ELSE,3:WHILE,1:DO,0:functions,0:IF,3	63
0x400100c	              0x55	                                push rbp	       537	packed-backend.c	FUNCTION_16
0x400100d	          0x4889e5	                            mov rbp, rsp	       537	packed-backend.c	FUNCTION_16
0x4001010	        0x4883ec48	                           sub rsp, 0x48	       537	packed-backend.c	FUNCTION_16
0x4001014	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       537	packed-backend.c	FUNCTION_16
0x4001018	        0x488975c0	             mov qword [rbp - 0x40], rsi	       537	packed-backend.c	FUNCTION_16
0x400101c	          0x8955bc	             mov dword [rbp - 0x44], edx	       537	packed-backend.c	FUNCTION_16
0x400101f	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       552	packed-backend.c	FUNCTION_16
0x4001023	        0x488b4018	            mov rax, qword [rax + 0x18] 	       552	packed-backend.c	FUNCTION_16
0x4001027	        0x488945e0	             mov qword [rbp - 0x20], rax	       552	packed-backend.c	FUNCTION_16
0x400102b	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       558	packed-backend.c	FUNCTION_16
0x400102f	        0x488b4020	            mov rax, qword [rax + 0x20] 	       558	packed-backend.c	FUNCTION_16
0x4001033	        0x488945e8	             mov qword [rbp - 0x18], rax	       558	packed-backend.c	FUNCTION_16
0x4001037	      0xe98b000000	                           jmp 0x40010c7	       560	packed-backend.c	FUNCTION_16	WHILE_1
0x400103c	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       564	packed-backend.c	FUNCTION_16	WHILE_1
0x4001040	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       564	packed-backend.c	FUNCTION_16	WHILE_1
0x4001044	          0x4829c2	                            sub rdx, rax	       564	packed-backend.c	FUNCTION_16	WHILE_1
0x4001047	          0x4889d0	                            mov rax, rdx	       564	packed-backend.c	FUNCTION_16	WHILE_1
0x400104a	          0x4889c2	                            mov rdx, rax	       564	packed-backend.c	FUNCTION_16	WHILE_1
0x400104d	        0x48c1ea3f	                           shr rdx, 0x3f	       564	packed-backend.c	FUNCTION_16	WHILE_1
0x4001051	          0x4801d0	                            add rax, rdx	       564	packed-backend.c	FUNCTION_16	WHILE_1
0x4001054	          0x48d1f8	                              sar rax, 1	       564	packed-backend.c	FUNCTION_16	WHILE_1
0x4001057	          0x4889c2	                            mov rdx, rax	       564	packed-backend.c	FUNCTION_16	WHILE_1
0x400105a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       564	packed-backend.c	FUNCTION_16	WHILE_1
0x400105e	          0x4801d0	                            add rax, rdx	       564	packed-backend.c	FUNCTION_16	WHILE_1
0x4001061	        0x488945f0	             mov qword [rbp - 0x10], rax	       564	packed-backend.c	FUNCTION_16	WHILE_1
0x4001065	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       565	packed-backend.c	FUNCTION_16	WHILE_1	CALL_1
0x4001069	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       565	packed-backend.c	FUNCTION_16	WHILE_1	CALL_1
0x400106d	          0x4889d6	                            mov rsi, rdx	       565	packed-backend.c	FUNCTION_16	WHILE_1	CALL_1
0x4001070	          0x4889c7	                            mov rdi, rax	       565	packed-backend.c	FUNCTION_16	WHILE_1	CALL_1
0x4001073	      0xe82dfcffff	           call sym.find_start_of_record	       565	packed-backend.c	FUNCTION_16	WHILE_1	CALL_1
0x4001078	        0x488945f8	                mov qword [rbp - 8], rax	       565	packed-backend.c	FUNCTION_16	WHILE_1	CALL_1
0x400107c	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	       566	packed-backend.c	FUNCTION_16	WHILE_1	CALL_2
0x4001080	        0x488b45f8	                mov rax, qword [rbp - 8]	       566	packed-backend.c	FUNCTION_16	WHILE_1	CALL_2
0x4001084	          0x4889d6	                            mov rsi, rdx	       566	packed-backend.c	FUNCTION_16	WHILE_1	CALL_2
0x4001087	          0x4889c7	                            mov rdi, rax	       566	packed-backend.c	FUNCTION_16	WHILE_1	CALL_2
0x400108a	      0xe84df7ffff	          call sym.cmp_record_to_refname	       566	packed-backend.c	FUNCTION_16	WHILE_1	CALL_2
0x400108f	          0x8945dc	             mov dword [rbp - 0x24], eax	       566	packed-backend.c	FUNCTION_16	WHILE_1	CALL_2
0x4001092	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       567	packed-backend.c	FUNCTION_16	WHILE_1	IF_1
0x4001096	            0x7919	                           jns 0x40010b1	       567	packed-backend.c	FUNCTION_16	WHILE_1	IF_1
0x4001098	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	       568	packed-backend.c	FUNCTION_16	WHILE_1	IF_1	CALL_3
0x400109c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       568	packed-backend.c	FUNCTION_16	WHILE_1	IF_1	CALL_3
0x40010a0	          0x4889d6	                            mov rsi, rdx	       568	packed-backend.c	FUNCTION_16	WHILE_1	IF_1	CALL_3
0x40010a3	          0x4889c7	                            mov rdi, rax	       568	packed-backend.c	FUNCTION_16	WHILE_1	IF_1	CALL_3
0x40010a6	      0xe837fcffff	             call sym.find_end_of_record	       568	packed-backend.c	FUNCTION_16	WHILE_1	IF_1	CALL_3
0x40010ab	        0x488945e0	             mov qword [rbp - 0x20], rax	       568	packed-backend.c	FUNCTION_16	WHILE_1	IF_1	CALL_3
0x40010af	            0xeb16	                           jmp 0x40010c7	       568	packed-backend.c	FUNCTION_16	WHILE_1	IF_1	CALL_3
0x40010b1	        0x837ddc00	               cmp dword [rbp - 0x24], 0	       569	packed-backend.c	FUNCTION_16	WHILE_1	ELSE_1	IF_2
0x40010b5	            0x7e0a	                           jle 0x40010c1	       569	packed-backend.c	FUNCTION_16	WHILE_1	ELSE_1	IF_2
0x40010b7	        0x488b45f8	                mov rax, qword [rbp - 8]	       570	packed-backend.c	FUNCTION_16	WHILE_1	ELSE_1	IF_2
0x40010bb	        0x488945e8	             mov qword [rbp - 0x18], rax	       570	packed-backend.c	FUNCTION_16	WHILE_1	ELSE_1	IF_2
0x40010bf	            0xeb06	                           jmp 0x40010c7	       570	packed-backend.c	FUNCTION_16	WHILE_1	ELSE_1	IF_2
0x40010c1	        0x488b45f8	                mov rax, qword [rbp - 8]	       572	packed-backend.c	FUNCTION_16	WHILE_1	ELSE_2
0x40010c5	            0xeb1f	                           jmp 0x40010e6	       572	packed-backend.c	FUNCTION_16	WHILE_1	ELSE_2
0x40010c7	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       560	packed-backend.c	FUNCTION_16	WHILE_1
0x40010cb	        0x483b45e8	             cmp rax, qword [rbp - 0x18]	       560	packed-backend.c	FUNCTION_16	WHILE_1
0x40010cf	     0xf8567ffffff	                           jne 0x400103c	       560	packed-backend.c	FUNCTION_16	WHILE_1
0x40010d5	        0x837dbc00	               cmp dword [rbp - 0x44], 0	       576	packed-backend.c	FUNCTION_16	IF_3
0x40010d9	            0x7407	                            je 0x40010e2	       576	packed-backend.c	FUNCTION_16	IF_3
0x40010db	      0xb800000000	                              mov eax, 0	       577	packed-backend.c	FUNCTION_16	IF_3
0x40010e0	            0xeb04	                           jmp 0x40010e6	       577	packed-backend.c	FUNCTION_16	IF_3
0x40010e2	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       579	packed-backend.c	FUNCTION_16	ELSE_3
0x40010e6	              0xc9	                                   leave	       580	packed-backend.c	FUNCTION_16	ELSE_3
0x40010e7	              0xc3	                                     ret	       580	packed-backend.c	FUNCTION_16	ELSE_3
packed_create_reflog	SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0:functions,0:IF,0	10
0x4002ca1	              0x55	                                push rbp	      1612	packed-backend.c	FUNCTION_47
0x4002ca2	          0x4889e5	                            mov rbp, rsp	      1612	packed-backend.c	FUNCTION_47
0x4002ca5	        0x4883ec20	                           sub rsp, 0x20	      1612	packed-backend.c	FUNCTION_47
0x4002ca9	        0x48897df8	                mov qword [rbp - 8], rdi	      1612	packed-backend.c	FUNCTION_47
0x4002cad	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1612	packed-backend.c	FUNCTION_47
0x4002cb1	          0x8955ec	             mov dword [rbp - 0x14], edx	      1612	packed-backend.c	FUNCTION_47
0x4002cb4	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1612	packed-backend.c	FUNCTION_47
0x4002cb8	      0xbf00000000	                              mov edi, 0	      1613	packed-backend.c	FUNCTION_47	CALL_1
0x4002cbd	      0xb800000000	                              mov eax, 0	      1613	packed-backend.c	FUNCTION_47	CALL_1
0x4002cc2	      0xe800000000	           call sym.packed_delete_reflog	      1613	packed-backend.c	FUNCTION_47	CALL_1
cmp_record_to_refname	SWITCH,0:FOR,0:CALL,0:ELSE,0:WHILE,1:DO,0:functions,0:IF,3	49
0x40007dc	              0x55	                                push rbp	       299	packed-backend.c	FUNCTION_10
0x40007dd	          0x4889e5	                            mov rbp, rsp	       299	packed-backend.c	FUNCTION_10
0x40007e0	        0x48897de8	             mov qword [rbp - 0x18], rdi	       299	packed-backend.c	FUNCTION_10
0x40007e4	        0x488975e0	             mov qword [rbp - 0x20], rsi	       299	packed-backend.c	FUNCTION_10
0x40007e8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       300	packed-backend.c	FUNCTION_10
0x40007ec	        0x4883c029	                           add rax, 0x29	       300	packed-backend.c	FUNCTION_10
0x40007f0	        0x488945f0	             mov qword [rbp - 0x10], rax	       300	packed-backend.c	FUNCTION_10
0x40007f4	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       301	packed-backend.c	FUNCTION_10
0x40007f8	        0x488945f8	                mov qword [rbp - 8], rax	       301	packed-backend.c	FUNCTION_10
0x40007fc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       304	packed-backend.c	FUNCTION_10	WHILE_1	IF_1
0x4000800	           0xfb600	                   movzx eax, byte [rax]	       304	packed-backend.c	FUNCTION_10	WHILE_1	IF_1
0x4000803	            0x3c0a	                             cmp al, 0xa	       304	packed-backend.c	FUNCTION_10	WHILE_1	IF_1
0x4000805	            0x7519	                           jne 0x4000820	       304	packed-backend.c	FUNCTION_10	WHILE_1	IF_1
0x4000807	        0x488b45f8	                mov rax, qword [rbp - 8]	       305	packed-backend.c	FUNCTION_10	WHILE_1	IF_1
0x400080b	           0xfb600	                   movzx eax, byte [rax]	       305	packed-backend.c	FUNCTION_10	WHILE_1	IF_1
0x400080e	            0x84c0	                             test al, al	       305	packed-backend.c	FUNCTION_10	WHILE_1	IF_1
0x4000810	            0x7407	                            je 0x4000819	       305	packed-backend.c	FUNCTION_10	WHILE_1	IF_1
0x4000812	      0xb8ffffffff	                     mov eax, 0xffffffff	       305	packed-backend.c	FUNCTION_10	WHILE_1	IF_1
0x4000817	            0xeb59	                           jmp 0x4000872	       305	packed-backend.c	FUNCTION_10	WHILE_1	IF_1
0x4000819	      0xb800000000	                              mov eax, 0	       305	packed-backend.c	FUNCTION_10	WHILE_1	IF_1
0x400081e	            0xeb52	                           jmp 0x4000872	       305	packed-backend.c	FUNCTION_10	WHILE_1	IF_1
0x4000820	        0x488b45f8	                mov rax, qword [rbp - 8]	       306	packed-backend.c	FUNCTION_10	WHILE_1	IF_2
0x4000824	           0xfb600	                   movzx eax, byte [rax]	       306	packed-backend.c	FUNCTION_10	WHILE_1	IF_2
0x4000827	            0x84c0	                             test al, al	       306	packed-backend.c	FUNCTION_10	WHILE_1	IF_2
0x4000829	            0x7507	                           jne 0x4000832	       306	packed-backend.c	FUNCTION_10	WHILE_1	IF_2
0x400082b	      0xb801000000	                              mov eax, 1	       307	packed-backend.c	FUNCTION_10	WHILE_1	IF_2
0x4000830	            0xeb40	                           jmp 0x4000872	       307	packed-backend.c	FUNCTION_10	WHILE_1	IF_2
0x4000832	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       308	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x4000836	           0xfb610	                   movzx edx, byte [rax]	       308	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x4000839	        0x488b45f8	                mov rax, qword [rbp - 8]	       308	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x400083d	           0xfb600	                   movzx eax, byte [rax]	       308	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x4000840	            0x38c2	                              cmp dl, al	       308	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x4000842	            0x7422	                            je 0x4000866	       308	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x4000844	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       309	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x4000848	           0xfb600	                   movzx eax, byte [rax]	       309	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x400084b	            0x89c2	                            mov edx, eax	       309	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x400084d	        0x488b45f8	                mov rax, qword [rbp - 8]	       309	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x4000851	           0xfb600	                   movzx eax, byte [rax]	       309	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x4000854	            0x38c2	                              cmp dl, al	       309	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x4000856	            0x7307	                           jae 0x400085f	       309	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x4000858	      0xb8ffffffff	                     mov eax, 0xffffffff	       309	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x400085d	            0xeb13	                           jmp 0x4000872	       309	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x400085f	      0xb801000000	                              mov eax, 1	       309	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x4000864	            0xeb0c	                           jmp 0x4000872	       309	packed-backend.c	FUNCTION_10	WHILE_1	IF_3
0x4000866	      0x488345f001	               add qword [rbp - 0x10], 1	       310	packed-backend.c	FUNCTION_10	WHILE_1
0x400086b	      0x488345f801	                  add qword [rbp - 8], 1	       311	packed-backend.c	FUNCTION_10	WHILE_1
0x4000870	            0xeb8a	                           jmp 0x40007fc	       312	packed-backend.c	FUNCTION_10	WHILE_1
0x4000872	              0x5d	                                 pop rbp	       313	packed-backend.c	FUNCTION_10
0x4000873	              0xc3	                                     ret	       313	packed-backend.c	FUNCTION_10
packed_downcast	SWITCH,0:FOR,0:CALL,2:ELSE,0:WHILE,0:DO,0:functions,0:IF,2	36
0x4000568	              0x55	                                push rbp	       220	packed-backend.c	FUNCTION_5
0x4000569	          0x4889e5	                            mov rbp, rsp	       220	packed-backend.c	FUNCTION_5
0x400056c	        0x4883ec30	                           sub rsp, 0x30	       220	packed-backend.c	FUNCTION_5
0x4000570	        0x48897de8	             mov qword [rbp - 0x18], rdi	       220	packed-backend.c	FUNCTION_5
0x4000574	          0x8975e4	             mov dword [rbp - 0x1c], esi	       220	packed-backend.c	FUNCTION_5
0x4000577	        0x488955d8	             mov qword [rbp - 0x28], rdx	       220	packed-backend.c	FUNCTION_5
0x400057b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       223	packed-backend.c	FUNCTION_5	IF_1
0x400057f	          0x488b00	                    mov rax, qword [rax]	       223	packed-backend.c	FUNCTION_5	IF_1
0x4000582	    0x483d00000000	                              cmp rax, 0	       223	packed-backend.c	FUNCTION_5	IF_1
0x4000588	            0x7421	                            je 0x40005ab	       223	packed-backend.c	FUNCTION_5	IF_1
0x400058a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       225	packed-backend.c	FUNCTION_5	IF_1
0x400058e	          0x488b00	                    mov rax, qword [rax]	       225	packed-backend.c	FUNCTION_5	IF_1
0x4000591	        0x488b4008	                mov rax, qword [rax + 8]	       224	packed-backend.c	FUNCTION_5	IF_1	CALL_1
0x4000595	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       224	packed-backend.c	FUNCTION_5	IF_1	CALL_1
0x4000599	          0x4889c6	                            mov rsi, rax	       224	packed-backend.c	FUNCTION_5	IF_1	CALL_1
0x400059c	      0xbf00000000	                              mov edi, 0	       224	packed-backend.c	FUNCTION_5	IF_1	CALL_1
0x40005a1	      0xb800000000	                              mov eax, 0	       224	packed-backend.c	FUNCTION_5	IF_1	CALL_1
0x40005a6	      0xe800000000	                          call 0x40005ab	       224	packed-backend.c	FUNCTION_5	IF_1	CALL_1
0x40005ab	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       227	packed-backend.c	FUNCTION_5
0x40005af	        0x488945f8	                mov qword [rbp - 8], rax	       227	packed-backend.c	FUNCTION_5
0x40005b3	        0x488b45f8	                mov rax, qword [rbp - 8]	       229	packed-backend.c	FUNCTION_5	IF_2
0x40005b7	          0x8b4008	                mov eax, dword [rax + 8]	       229	packed-backend.c	FUNCTION_5	IF_2
0x40005ba	          0x2345e4	             and eax, dword [rbp - 0x1c]	       229	packed-backend.c	FUNCTION_5	IF_2
0x40005bd	          0x3b45e4	             cmp eax, dword [rbp - 0x1c]	       229	packed-backend.c	FUNCTION_5	IF_2
0x40005c0	            0x7420	                            je 0x40005e2	       229	packed-backend.c	FUNCTION_5	IF_2
0x40005c2	        0x488b45f8	                mov rax, qword [rbp - 8]	       230	packed-backend.c	FUNCTION_5	IF_2	CALL_2
0x40005c6	          0x8b4808	                mov ecx, dword [rax + 8]	       230	packed-backend.c	FUNCTION_5	IF_2	CALL_2
0x40005c9	          0x8b55e4	             mov edx, dword [rbp - 0x1c]	       230	packed-backend.c	FUNCTION_5	IF_2	CALL_2
0x40005cc	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       230	packed-backend.c	FUNCTION_5	IF_2	CALL_2
0x40005d0	          0x4889c6	                            mov rsi, rax	       230	packed-backend.c	FUNCTION_5	IF_2	CALL_2
0x40005d3	      0xbf00000000	                              mov edi, 0	       230	packed-backend.c	FUNCTION_5	IF_2	CALL_2
0x40005d8	      0xb800000000	                              mov eax, 0	       230	packed-backend.c	FUNCTION_5	IF_2	CALL_2
0x40005dd	      0xe800000000	                          call 0x40005e2	       230	packed-backend.c	FUNCTION_5	IF_2	CALL_2
0x40005e2	        0x488b45f8	                mov rax, qword [rbp - 8]	       233	packed-backend.c	FUNCTION_5
0x40005e6	              0xc9	                                   leave	       234	packed-backend.c	FUNCTION_5
0x40005e7	              0xc3	                                     ret	       234	packed-backend.c	FUNCTION_5
packed_transaction_prepare	SWITCH,0:FOR,1:CALL,10:ELSE,0:WHILE,0:DO,0:functions,0:IF,4	103
0x4002715	              0x55	                                push rbp	      1398	packed-backend.c	FUNCTION_34
0x4002716	          0x4889e5	                            mov rbp, rsp	      1398	packed-backend.c	FUNCTION_34
0x4002719	        0x4883ec50	                           sub rsp, 0x50	      1398	packed-backend.c	FUNCTION_34
0x400271d	        0x48897dc8	             mov qword [rbp - 0x38], rdi	      1398	packed-backend.c	FUNCTION_34
0x4002721	        0x488975c0	             mov qword [rbp - 0x40], rsi	      1398	packed-backend.c	FUNCTION_34
0x4002725	        0x488955b8	             mov qword [rbp - 0x48], rdx	      1398	packed-backend.c	FUNCTION_34
0x4002729	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1399	packed-backend.c	FUNCTION_34	CALL_1
0x400272d	      0xba00000000	                              mov edx, 0	      1399	packed-backend.c	FUNCTION_34	CALL_1
0x4002732	      0xbe07000000	                              mov esi, 7	      1399	packed-backend.c	FUNCTION_34	CALL_1
0x4002737	          0x4889c7	                            mov rdi, rax	      1399	packed-backend.c	FUNCTION_34	CALL_1
0x400273a	      0xe829deffff	                call sym.packed_downcast	      1399	packed-backend.c	FUNCTION_34	CALL_1
0x400273f	        0x488945e0	             mov qword [rbp - 0x20], rax	      1399	packed-backend.c	FUNCTION_34	CALL_1
0x4002743	    0xc745d4feffff	     mov dword [rbp - 0x2c], 0xfffffffe 	      1405	packed-backend.c	FUNCTION_34
0x400274a	      0xbe28000000	                           mov esi, 0x28	      1416	packed-backend.c	FUNCTION_34	CALL_2
0x400274f	      0xbf01000000	                              mov edi, 1	      1416	packed-backend.c	FUNCTION_34	CALL_2
0x4002754	      0xe800000000	                          call 0x4002759	      1416	packed-backend.c	FUNCTION_34	CALL_2
0x4002759	        0x488945e8	             mov qword [rbp - 0x18], rax	      1416	packed-backend.c	FUNCTION_34	CALL_2
0x400275d	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1417	packed-backend.c	FUNCTION_34	CALL_3
0x4002761	        0x4883c008	                              add rax, 8	      1417	packed-backend.c	FUNCTION_34	CALL_3
0x4002765	      0xbe00000000	                              mov esi, 0	      1417	packed-backend.c	FUNCTION_34	CALL_3
0x400276a	          0x4889c7	                            mov rdi, rax	      1417	packed-backend.c	FUNCTION_34	CALL_3
0x400276d	      0xe800000000	                          call 0x4002772	      1417	packed-backend.c	FUNCTION_34	CALL_3
0x4002772	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1419	packed-backend.c	FUNCTION_34
0x4002776	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1419	packed-backend.c	FUNCTION_34
0x400277a	        0x48895028	             mov qword [rax + 0x28], rdx	      1419	packed-backend.c	FUNCTION_34
0x400277e	    0x48c745d80000	               mov qword [rbp - 0x28], 0	      1425	packed-backend.c	FUNCTION_34	FOR_1
0x4002786	            0xeb4a	                           jmp 0x40027d2	      1425	packed-backend.c	FUNCTION_34	FOR_1
0x4002788	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1426	packed-backend.c	FUNCTION_34	FOR_1
0x400278c	        0x488b4008	                mov rax, qword [rax + 8]	      1426	packed-backend.c	FUNCTION_34	FOR_1
0x4002790	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	      1426	packed-backend.c	FUNCTION_34	FOR_1
0x4002794	        0x48c1e203	                              shl rdx, 3	      1426	packed-backend.c	FUNCTION_34	FOR_1
0x4002798	          0x4801d0	                            add rax, rdx	      1426	packed-backend.c	FUNCTION_34	FOR_1
0x400279b	          0x488b00	                    mov rax, qword [rax]	      1426	packed-backend.c	FUNCTION_34	FOR_1
0x400279e	        0x488945f0	             mov qword [rbp - 0x10], rax	      1426	packed-backend.c	FUNCTION_34	FOR_1
0x40027a2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1428	packed-backend.c	FUNCTION_34	FOR_1	CALL_4
0x40027a6	        0x488d5050	                   lea rdx, [rax + 0x50]	      1428	packed-backend.c	FUNCTION_34	FOR_1	CALL_4
0x40027aa	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1428	packed-backend.c	FUNCTION_34	FOR_1	CALL_4
0x40027ae	        0x4883c008	                              add rax, 8	      1428	packed-backend.c	FUNCTION_34	FOR_1	CALL_4
0x40027b2	          0x4889d6	                            mov rsi, rdx	      1427	packed-backend.c	FUNCTION_34	FOR_1
0x40027b5	          0x4889c7	                            mov rdi, rax	      1427	packed-backend.c	FUNCTION_34	FOR_1
0x40027b8	      0xe800000000	                          call 0x40027bd	      1427	packed-backend.c	FUNCTION_34	FOR_1
0x40027bd	        0x488945f8	                mov qword [rbp - 8], rax	      1427	packed-backend.c	FUNCTION_34	FOR_1
0x40027c1	        0x488b45f8	                mov rax, qword [rbp - 8]	      1431	packed-backend.c	FUNCTION_34	FOR_1
0x40027c5	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1431	packed-backend.c	FUNCTION_34	FOR_1
0x40027c9	        0x48895008	                mov qword [rax + 8], rdx	      1431	packed-backend.c	FUNCTION_34	FOR_1
0x40027cd	      0x488345d801	               add qword [rbp - 0x28], 1	      1425	packed-backend.c	FUNCTION_34	FOR_1
0x40027d2	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1425	packed-backend.c	FUNCTION_34	FOR_1
0x40027d6	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1425	packed-backend.c	FUNCTION_34	FOR_1
0x40027da	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	      1425	packed-backend.c	FUNCTION_34	FOR_1
0x40027de	            0x77a8	                            ja 0x4002788	      1425	packed-backend.c	FUNCTION_34	FOR_1
0x40027e0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1433	packed-backend.c	FUNCTION_34	CALL_5
0x40027e4	        0x4883c008	                              add rax, 8	      1433	packed-backend.c	FUNCTION_34	CALL_5
0x40027e8	          0x4889c7	                            mov rdi, rax	      1433	packed-backend.c	FUNCTION_34	CALL_5
0x40027eb	      0xe800000000	                          call 0x40027f0	      1433	packed-backend.c	FUNCTION_34	CALL_5
0x40027f0	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1435	packed-backend.c	FUNCTION_34	IF_1	CALL_6
0x40027f4	        0x488d5008	                      lea rdx, [rax + 8]	      1435	packed-backend.c	FUNCTION_34	IF_1	CALL_6
0x40027f8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1435	packed-backend.c	FUNCTION_34	IF_1	CALL_6
0x40027fc	          0x4889c6	                            mov rsi, rax	      1435	packed-backend.c	FUNCTION_34	IF_1	CALL_6
0x40027ff	          0x4889d7	                            mov rdi, rdx	      1435	packed-backend.c	FUNCTION_34	IF_1	CALL_6
0x4002802	      0xe800000000	                          call 0x4002807	      1435	packed-backend.c	FUNCTION_34	IF_1	CALL_6
0x4002807	            0x85c0	                           test eax, eax	      1435	packed-backend.c	FUNCTION_34	IF_1	CALL_6
0x4002809	            0x7568	                           jne 0x4002873	      1435	packed-backend.c	FUNCTION_34	IF_1	CALL_6
0x400280b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1438	packed-backend.c	FUNCTION_34	IF_2	CALL_7
0x400280f	        0x4883c020	                           add rax, 0x20	      1438	packed-backend.c	FUNCTION_34	IF_2	CALL_7
0x4002813	          0x4889c7	                            mov rdi, rax	      1438	packed-backend.c	FUNCTION_34	IF_2	CALL_7
0x4002816	      0xe854dbffff	            call sym.is_lock_file_locked	      1438	packed-backend.c	FUNCTION_34	IF_2	CALL_7
0x400281b	            0x85c0	                           test eax, eax	      1438	packed-backend.c	FUNCTION_34	IF_2	CALL_7
0x400281d	            0x7523	                           jne 0x4002842	      1438	packed-backend.c	FUNCTION_34	IF_2	CALL_7
0x400281f	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1439	packed-backend.c	FUNCTION_34	IF_2	IF_3	CALL_8
0x4002823	        0x488b45c8	             mov rax, qword [rbp - 0x38]	      1439	packed-backend.c	FUNCTION_34	IF_2	IF_3	CALL_8
0x4002827	      0xbe00000000	                              mov esi, 0	      1439	packed-backend.c	FUNCTION_34	IF_2	IF_3	CALL_8
0x400282c	          0x4889c7	                            mov rdi, rax	      1439	packed-backend.c	FUNCTION_34	IF_2	IF_3	CALL_8
0x400282f	      0xe800000000	                          call 0x4002834	      1439	packed-backend.c	FUNCTION_34	IF_2	IF_3	CALL_8
0x4002834	            0x85c0	                           test eax, eax	      1439	packed-backend.c	FUNCTION_34	IF_2	IF_3	CALL_8
0x4002836	            0x753e	                           jne 0x4002876	      1439	packed-backend.c	FUNCTION_34	IF_2	IF_3	CALL_8
0x4002838	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1441	packed-backend.c	FUNCTION_34	IF_2
0x400283c	    0xc70001000000	                      mov dword [rax], 1	      1441	packed-backend.c	FUNCTION_34	IF_2
0x4002842	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1444	packed-backend.c	FUNCTION_34	IF_4	CALL_9
0x4002846	        0x488d4808	                      lea rcx, [rax + 8]	      1444	packed-backend.c	FUNCTION_34	IF_4	CALL_9
0x400284a	        0x488b55b8	             mov rdx, qword [rbp - 0x48]	      1444	packed-backend.c	FUNCTION_34	IF_4	CALL_9
0x400284e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1444	packed-backend.c	FUNCTION_34	IF_4	CALL_9
0x4002852	          0x4889ce	                            mov rsi, rcx	      1444	packed-backend.c	FUNCTION_34	IF_4	CALL_9
0x4002855	          0x4889c7	                            mov rdi, rax	      1444	packed-backend.c	FUNCTION_34	IF_4	CALL_9
0x4002858	      0xe843f6ffff	             call sym.write_with_updates	      1444	packed-backend.c	FUNCTION_34	IF_4	CALL_9
0x400285d	            0x85c0	                           test eax, eax	      1444	packed-backend.c	FUNCTION_34	IF_4	CALL_9
0x400285f	            0x7518	                           jne 0x4002879	      1444	packed-backend.c	FUNCTION_34	IF_4	CALL_9
0x4002861	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1447	packed-backend.c	FUNCTION_34
0x4002865	    0xc74020010000	               mov dword [rax + 0x20], 1	      1447	packed-backend.c	FUNCTION_34
0x400286c	      0xb800000000	                              mov eax, 0	      1448	packed-backend.c	FUNCTION_34
0x4002871	            0xeb1d	                           jmp 0x4002890	      1448	packed-backend.c	FUNCTION_34
0x4002873	              0x90	                                     nop	      1436	packed-backend.c	FUNCTION_34	IF_1
0x4002874	            0xeb04	                           jmp 0x400287a	      1436	packed-backend.c	FUNCTION_34	IF_1
0x4002876	              0x90	                                     nop	      1440	packed-backend.c	FUNCTION_34	IF_2	IF_3
0x4002877	            0xeb01	                           jmp 0x400287a	      1440	packed-backend.c	FUNCTION_34	IF_2	IF_3
0x4002879	              0x90	                                     nop	      1445	packed-backend.c	FUNCTION_34	IF_4
0x400287a	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1451	packed-backend.c	FUNCTION_34	CALL_10
0x400287e	        0x488b45e0	             mov rax, qword [rbp - 0x20]	      1451	packed-backend.c	FUNCTION_34	CALL_10
0x4002882	          0x4889d6	                            mov rsi, rdx	      1451	packed-backend.c	FUNCTION_34	CALL_10
0x4002885	          0x4889c7	                            mov rdi, rax	      1451	packed-backend.c	FUNCTION_34	CALL_10
0x4002888	      0xe8cefdffff	     call sym.packed_transaction_cleanup	      1451	packed-backend.c	FUNCTION_34	CALL_10
0x400288d	          0x8b45d4	             mov eax, dword [rbp - 0x2c]	      1452	packed-backend.c	FUNCTION_34
0x4002890	              0xc9	                                   leave	      1453	packed-backend.c	FUNCTION_34
0x4002891	              0xc3	                                     ret	      1453	packed-backend.c	FUNCTION_34
die_invalid_line	SWITCH,0:FOR,0:CALL,4:ELSE,2:WHILE,0:DO,0:functions,0:IF,2	45
0x4000682	              0x55	                                push rbp	       257	packed-backend.c	FUNCTION_8
0x4000683	          0x4889e5	                            mov rbp, rsp	       257	packed-backend.c	FUNCTION_8
0x4000686	        0x4883ec30	                           sub rsp, 0x30	       257	packed-backend.c	FUNCTION_8
0x400068a	        0x48897de8	             mov qword [rbp - 0x18], rdi	       257	packed-backend.c	FUNCTION_8
0x400068e	        0x488975e0	             mov qword [rbp - 0x20], rsi	       257	packed-backend.c	FUNCTION_8
0x4000692	        0x488955d8	             mov qword [rbp - 0x28], rdx	       257	packed-backend.c	FUNCTION_8
0x4000696	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       258	packed-backend.c	FUNCTION_8	CALL_1
0x400069a	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       258	packed-backend.c	FUNCTION_8	CALL_1
0x400069e	      0xbe0a000000	                            mov esi, 0xa	       258	packed-backend.c	FUNCTION_8	CALL_1
0x40006a3	          0x4889c7	                            mov rdi, rax	       258	packed-backend.c	FUNCTION_8	CALL_1
0x40006a6	      0xe800000000	                          call 0x40006ab	       258	packed-backend.c	FUNCTION_8	CALL_1
0x40006ab	        0x488945f8	                mov qword [rbp - 8], rax	       258	packed-backend.c	FUNCTION_8	CALL_1
0x40006af	      0x48837df800	                  cmp qword [rbp - 8], 0	       260	packed-backend.c	FUNCTION_8	IF_1
0x40006b4	            0x7517	                           jne 0x40006cd	       260	packed-backend.c	FUNCTION_8	IF_1
0x40006b6	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       261	packed-backend.c	FUNCTION_8	CALL_2
0x40006ba	        0x488b4de0	             mov rcx, qword [rbp - 0x20]	       261	packed-backend.c	FUNCTION_8	CALL_2
0x40006be	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       261	packed-backend.c	FUNCTION_8	CALL_2
0x40006c2	          0x4889ce	                            mov rsi, rcx	       261	packed-backend.c	FUNCTION_8	CALL_2
0x40006c5	          0x4889c7	                            mov rdi, rax	       261	packed-backend.c	FUNCTION_8	CALL_2
0x40006c8	      0xe85bffffff	          call sym.die_unterminated_line	       261	packed-backend.c	FUNCTION_8	CALL_2
0x40006cd	        0x488b55f8	                mov rdx, qword [rbp - 8]	       262	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x40006d1	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       262	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x40006d5	          0x4829c2	                            sub rdx, rax	       262	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x40006d8	          0x4889d0	                            mov rax, rdx	       262	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x40006db	        0x4883f84f	                           cmp rax, 0x4f	       262	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x40006df	            0x7f2f	                            jg 0x4000710	       262	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x40006e1	        0x488b55f8	                mov rdx, qword [rbp - 8]	       263	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x40006e5	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       263	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x40006e9	          0x4829c2	                            sub rdx, rax	       263	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x40006ec	          0x4889d0	                            mov rax, rdx	       263	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x40006ef	            0x89c6	                            mov esi, eax	       263	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x40006f1	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       263	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x40006f5	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       263	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x40006f9	          0x4889d1	                            mov rcx, rdx	       263	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x40006fc	            0x89f2	                            mov edx, esi	       263	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x40006fe	          0x4889c6	                            mov rsi, rax	       263	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x4000701	      0xbf00000000	                              mov edi, 0	       263	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x4000706	      0xb800000000	                              mov eax, 0	       263	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x400070b	      0xe800000000	                          call 0x4000710	       263	packed-backend.c	FUNCTION_8	ELSE_1	IF_2
0x4000710	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	       265	packed-backend.c	FUNCTION_8	CALL_4
0x4000714	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       265	packed-backend.c	FUNCTION_8	CALL_4
0x4000718	          0x4889c6	                            mov rsi, rax	       265	packed-backend.c	FUNCTION_8	CALL_4
0x400071b	      0xbf00000000	                              mov edi, 0	       265	packed-backend.c	FUNCTION_8	CALL_4
0x4000720	      0xb800000000	                              mov eax, 0	       265	packed-backend.c	FUNCTION_8	CALL_4
0x4000725	      0xe800000000	         call sym.cmp_packed_ref_records	       265	packed-backend.c	FUNCTION_8	CALL_4
write_with_updates	SWITCH,0:FOR,0:CALL,45:ELSE,7:WHILE,1:DO,0:functions,0:IF,23	370
0x4001ea0	              0x55	                                push rbp	      1083	packed-backend.c	FUNCTION_31
0x4001ea1	          0x4889e5	                            mov rbp, rsp	      1083	packed-backend.c	FUNCTION_31
0x4001ea4	              0x53	                                push rbx	      1083	packed-backend.c	FUNCTION_31
0x4001ea5	    0x4881eca80000	                           sub rsp, 0xa8	      1083	packed-backend.c	FUNCTION_31
0x4001eac	    0x4889bd68ffff	             mov qword [rbp - 0x98], rdi	      1083	packed-backend.c	FUNCTION_31
0x4001eb3	    0x4889b560ffff	             mov qword [rbp - 0xa0], rsi	      1083	packed-backend.c	FUNCTION_31
0x4001eba	    0x48899558ffff	             mov qword [rbp - 0xa8], rdx	      1083	packed-backend.c	FUNCTION_31
0x4001ec1	    0x64488b042528	                mov rax, qword fs:[0x28]	      1083	packed-backend.c	FUNCTION_31
0x4001eca	        0x488945e8	             mov qword [rbp - 0x18], rax	      1083	packed-backend.c	FUNCTION_31
0x4001ece	            0x31c0	                            xor eax, eax	      1083	packed-backend.c	FUNCTION_31
0x4001ed0	    0x48c745880000	               mov qword [rbp - 0x78], 0	      1084	packed-backend.c	FUNCTION_31
0x4001ed8	    0x48c745b00000	               mov qword [rbp - 0x50], 0	      1088	packed-backend.c	FUNCTION_31
0x4001ee0	    0x48c745b80000	               mov qword [rbp - 0x48], 0	      1088	packed-backend.c	FUNCTION_31
0x4001ee8	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1088	packed-backend.c	FUNCTION_31
0x4001ef0	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1091	packed-backend.c	FUNCTION_31	IF_1	CALL_1
0x4001ef7	        0x4883c020	                           add rax, 0x20	      1091	packed-backend.c	FUNCTION_31	IF_1	CALL_1
0x4001efb	          0x4889c7	                            mov rdi, rax	      1091	packed-backend.c	FUNCTION_31	IF_1	CALL_1
0x4001efe	      0xe86ce4ffff	            call sym.is_lock_file_locked	      1091	packed-backend.c	FUNCTION_31	IF_1	CALL_1
0x4001f03	            0x85c0	                           test eax, eax	      1091	packed-backend.c	FUNCTION_31	IF_1	CALL_1
0x4001f05	            0x750f	                           jne 0x4001f16	      1091	packed-backend.c	FUNCTION_31	IF_1	CALL_1
0x4001f07	      0xbf00000000	                              mov edi, 0	      1092	packed-backend.c	FUNCTION_31	CALL_2
0x4001f0c	      0xb800000000	                              mov eax, 0	      1092	packed-backend.c	FUNCTION_31	CALL_2
0x4001f11	      0xe800000000	                          call 0x4001f16	      1092	packed-backend.c	FUNCTION_31	CALL_2
0x4001f16	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1099	packed-backend.c	FUNCTION_31	CALL_3
0x4001f1d	        0x4883c020	                           add rax, 0x20	      1099	packed-backend.c	FUNCTION_31	CALL_3
0x4001f21	          0x4889c7	                            mov rdi, rax	      1099	packed-backend.c	FUNCTION_31	CALL_3
0x4001f24	      0xe800000000	                          call 0x4001f29	      1099	packed-backend.c	FUNCTION_31	CALL_3
0x4001f29	        0x488945a0	             mov qword [rbp - 0x60], rax	      1099	packed-backend.c	FUNCTION_31	CALL_3
0x4001f2d	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1100	packed-backend.c	FUNCTION_31	CALL_4
0x4001f31	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1100	packed-backend.c	FUNCTION_31	CALL_4
0x4001f35	      0xbe00000000	                              mov esi, 0	      1100	packed-backend.c	FUNCTION_31	CALL_4
0x4001f3a	          0x4889c7	                            mov rdi, rax	      1100	packed-backend.c	FUNCTION_31	CALL_4
0x4001f3d	      0xb800000000	                              mov eax, 0	      1100	packed-backend.c	FUNCTION_31	CALL_4
0x4001f42	      0xe800000000	                          call 0x4001f47	      1100	packed-backend.c	FUNCTION_31	CALL_4
0x4001f47	        0x488b45a0	             mov rax, qword [rbp - 0x60]	      1101	packed-backend.c	FUNCTION_31	CALL_5
0x4001f4b	          0x4889c7	                            mov rdi, rax	      1101	packed-backend.c	FUNCTION_31	CALL_5
0x4001f4e	      0xe800000000	                          call 0x4001f53	      1101	packed-backend.c	FUNCTION_31	CALL_5
0x4001f53	        0x488b45c0	             mov rax, qword [rbp - 0x40]	      1102	packed-backend.c	FUNCTION_31	CALL_6
0x4001f57	          0x4889c7	                            mov rdi, rax	      1102	packed-backend.c	FUNCTION_31	CALL_6
0x4001f5a	      0xe800000000	                          call 0x4001f5f	      1102	packed-backend.c	FUNCTION_31	CALL_6
0x4001f5f	          0x4889c2	                            mov rdx, rax	      1102	packed-backend.c	FUNCTION_31	CALL_6
0x4001f62	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1102	packed-backend.c	FUNCTION_31	CALL_6
0x4001f69	        0x48895028	             mov qword [rax + 0x28], rdx	      1102	packed-backend.c	FUNCTION_31	CALL_6
0x4001f6d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1103	packed-backend.c	FUNCTION_31	IF_2
0x4001f74	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1103	packed-backend.c	FUNCTION_31	IF_2
0x4001f78	          0x4885c0	                           test rax, rax	      1103	packed-backend.c	FUNCTION_31	IF_2
0x4001f7b	            0x7544	                           jne 0x4001fc1	      1103	packed-backend.c	FUNCTION_31	IF_2
0x4001f7d	      0xe800000000	                          call 0x4001f82	      1105	packed-backend.c	FUNCTION_31	IF_2	CALL_8
0x4001f82	            0x8b00	                    mov eax, dword [rax]	      1104	packed-backend.c	FUNCTION_31	IF_2	CALL_7
0x4001f84	            0x89c7	                            mov edi, eax	      1104	packed-backend.c	FUNCTION_31	IF_2	CALL_7
0x4001f86	      0xe800000000	                          call 0x4001f8b	      1104	packed-backend.c	FUNCTION_31	IF_2	CALL_7
0x4001f8b	          0x4889c1	                            mov rcx, rax	      1104	packed-backend.c	FUNCTION_31	IF_2	CALL_7
0x4001f8e	        0x488b55c0	             mov rdx, qword [rbp - 0x40]	      1104	packed-backend.c	FUNCTION_31	IF_2	CALL_7
0x4001f92	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1104	packed-backend.c	FUNCTION_31	IF_2	CALL_7
0x4001f99	      0xbe00000000	                              mov esi, 0	      1104	packed-backend.c	FUNCTION_31	IF_2	CALL_7
0x4001f9e	          0x4889c7	                            mov rdi, rax	      1104	packed-backend.c	FUNCTION_31	IF_2	CALL_7
0x4001fa1	      0xb800000000	                              mov eax, 0	      1104	packed-backend.c	FUNCTION_31	IF_2	CALL_7
0x4001fa6	      0xe800000000	                          call 0x4001fab	      1104	packed-backend.c	FUNCTION_31	IF_2	CALL_7
0x4001fab	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1106	packed-backend.c	FUNCTION_31	IF_2	CALL_9
0x4001faf	          0x4889c7	                            mov rdi, rax	      1106	packed-backend.c	FUNCTION_31	IF_2	CALL_9
0x4001fb2	      0xe800000000	                          call 0x4001fb7	      1106	packed-backend.c	FUNCTION_31	IF_2	CALL_9
0x4001fb7	      0xb8ffffffff	                     mov eax, 0xffffffff	      1107	packed-backend.c	FUNCTION_31	IF_2
0x4001fbc	      0xe9d9040000	                           jmp 0x400249a	      1107	packed-backend.c	FUNCTION_31	IF_2
0x4001fc1	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1109	packed-backend.c	FUNCTION_31	CALL_10
0x4001fc5	          0x4889c7	                            mov rdi, rax	      1109	packed-backend.c	FUNCTION_31	CALL_10
0x4001fc8	      0xe800000000	                          call 0x4001fcd	      1109	packed-backend.c	FUNCTION_31	CALL_10
0x4001fcd	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1111	packed-backend.c	FUNCTION_31	CALL_11
0x4001fd4	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1111	packed-backend.c	FUNCTION_31	CALL_11
0x4001fd8	      0xbe00000000	                              mov esi, 0	      1111	packed-backend.c	FUNCTION_31	CALL_11
0x4001fdd	          0x4889c7	                            mov rdi, rax	      1111	packed-backend.c	FUNCTION_31	CALL_11
0x4001fe0	      0xe800000000	                          call 0x4001fe5	      1111	packed-backend.c	FUNCTION_31	CALL_11
0x4001fe5	        0x488945a8	             mov qword [rbp - 0x58], rax	      1111	packed-backend.c	FUNCTION_31	CALL_11
0x4001fe9	      0x48837da800	               cmp qword [rbp - 0x58], 0	      1112	packed-backend.c	FUNCTION_31	IF_3
0x4001fee	            0x752f	                           jne 0x400201f	      1112	packed-backend.c	FUNCTION_31	IF_3
0x4001ff0	      0xe800000000	                          call 0x4001ff5	      1114	packed-backend.c	FUNCTION_31	IF_3	CALL_13
0x4001ff5	            0x8b00	                    mov eax, dword [rax]	      1113	packed-backend.c	FUNCTION_31	IF_3	CALL_12
0x4001ff7	            0x89c7	                            mov edi, eax	      1113	packed-backend.c	FUNCTION_31	IF_3	CALL_12
0x4001ff9	      0xe800000000	                          call 0x4001ffe	      1113	packed-backend.c	FUNCTION_31	IF_3	CALL_12
0x4001ffe	          0x4889c2	                            mov rdx, rax	      1113	packed-backend.c	FUNCTION_31	IF_3	CALL_12
0x4002001	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1113	packed-backend.c	FUNCTION_31	IF_3	CALL_12
0x4002008	      0xbe00000000	                              mov esi, 0	      1113	packed-backend.c	FUNCTION_31	IF_3	CALL_12
0x400200d	          0x4889c7	                            mov rdi, rax	      1113	packed-backend.c	FUNCTION_31	IF_3	CALL_12
0x4002010	      0xb800000000	                              mov eax, 0	      1113	packed-backend.c	FUNCTION_31	IF_3	CALL_12
0x4002015	      0xe800000000	                          call 0x400201a	      1113	packed-backend.c	FUNCTION_31	IF_3	CALL_12
0x400201a	      0xe950040000	                           jmp 0x400246f	      1115	packed-backend.c	FUNCTION_31	IF_3
0x400201f	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1118	packed-backend.c	FUNCTION_31	IF_4	CALL_14
0x4002023	      0xba00000000	                              mov edx, 0	      1118	packed-backend.c	FUNCTION_31	IF_4	CALL_14
0x4002028	      0xbe00000000	                              mov esi, 0	      1118	packed-backend.c	FUNCTION_31	IF_4	CALL_14
0x400202d	          0x4889c7	                            mov rdi, rax	      1118	packed-backend.c	FUNCTION_31	IF_4	CALL_14
0x4002030	      0xb800000000	                              mov eax, 0	      1118	packed-backend.c	FUNCTION_31	IF_4	CALL_14
0x4002035	      0xe800000000	                          call 0x400203a	      1118	packed-backend.c	FUNCTION_31	IF_4	CALL_14
0x400203a	            0x85c0	                           test eax, eax	      1118	packed-backend.c	FUNCTION_31	IF_4	CALL_14
0x400203c	     0xf88e3030000	                            js 0x4002425	      1118	packed-backend.c	FUNCTION_31	IF_4	CALL_14
0x4002042	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1128	packed-backend.c	FUNCTION_31	CALL_15
0x4002049	      0xba01000000	                              mov edx, 1	      1128	packed-backend.c	FUNCTION_31	CALL_15
0x400204e	      0xbe00000000	                              mov esi, 0	      1128	packed-backend.c	FUNCTION_31	CALL_15
0x4002053	          0x4889c7	                            mov rdi, rax	      1128	packed-backend.c	FUNCTION_31	CALL_15
0x4002056	      0xe88ffaffff	      call sym.packed_ref_iterator_begin	      1128	packed-backend.c	FUNCTION_31	CALL_15
0x400205b	        0x48894588	             mov qword [rbp - 0x78], rax	      1128	packed-backend.c	FUNCTION_31	CALL_15
0x400205f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1130	packed-backend.c	FUNCTION_31	IF_5	CALL_16
0x4002063	          0x4889c7	                            mov rdi, rax	      1130	packed-backend.c	FUNCTION_31	IF_5	CALL_16
0x4002066	      0xe800000000	                          call 0x400206b	      1130	packed-backend.c	FUNCTION_31	IF_5	CALL_16
0x400206b	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      1130	packed-backend.c	FUNCTION_31	IF_5	CALL_16
0x4002071	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 0	      1130	packed-backend.c	FUNCTION_31	IF_5	CALL_16
0x4002078	            0x7408	                            je 0x4002082	      1130	packed-backend.c	FUNCTION_31	IF_5	CALL_16
0x400207a	    0x48c745880000	               mov qword [rbp - 0x78], 0	      1131	packed-backend.c	FUNCTION_31	IF_5
0x4002082	    0x48c745900000	               mov qword [rbp - 0x70], 0	      1133	packed-backend.c	FUNCTION_31
0x400208a	      0xe9cc020000	                           jmp 0x400235b	      1135	packed-backend.c	FUNCTION_31	WHILE_1
0x400208f	    0x48c745980000	               mov qword [rbp - 0x68], 0	      1136	packed-backend.c	FUNCTION_31	WHILE_1
0x4002097	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1139	packed-backend.c	FUNCTION_31	WHILE_1	IF_6
0x400209e	          0x8b4008	                mov eax, dword [rax + 8]	      1139	packed-backend.c	FUNCTION_31	WHILE_1	IF_6
0x40020a1	            0x89c0	                            mov eax, eax	      1139	packed-backend.c	FUNCTION_31	WHILE_1	IF_6
0x40020a3	        0x483b4590	             cmp rax, qword [rbp - 0x70]	      1139	packed-backend.c	FUNCTION_31	WHILE_1	IF_6
0x40020a7	            0x770c	                            ja 0x40020b5	      1139	packed-backend.c	FUNCTION_31	WHILE_1	IF_6
0x40020a9	    0xc7857cffffff	     mov dword [rbp - 0x84], 0xffffffff 	      1140	packed-backend.c	FUNCTION_31	WHILE_1	IF_6
0x40020b3	            0xeb51	                           jmp 0x4002106	      1140	packed-backend.c	FUNCTION_31	WHILE_1	IF_6
0x40020b5	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1142	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1
0x40020bc	          0x488b00	                    mov rax, qword [rax]	      1142	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1
0x40020bf	        0x488b5590	             mov rdx, qword [rbp - 0x70]	      1142	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1
0x40020c3	        0x48c1e204	                              shl rdx, 4	      1142	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1
0x40020c7	          0x4801d0	                            add rax, rdx	      1142	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1
0x40020ca	        0x488b4008	                mov rax, qword [rax + 8]	      1142	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1
0x40020ce	        0x48894598	             mov qword [rbp - 0x68], rax	      1142	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1
0x40020d2	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      1144	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1	IF_7
0x40020d7	            0x750c	                           jne 0x40020e5	      1144	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1	IF_7
0x40020d9	    0xc7857cffffff	               mov dword [rbp - 0x84], 1	      1145	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1	IF_7
0x40020e3	            0xeb21	                           jmp 0x4002106	      1145	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1	IF_7
0x40020e5	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1147	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1	CALL_17
0x40020e9	        0x488d5050	                   lea rdx, [rax + 0x50]	      1147	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1	CALL_17
0x40020ed	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1147	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1	CALL_17
0x40020f1	        0x488b4010	            mov rax, qword [rax + 0x10] 	      1147	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1	CALL_17
0x40020f5	          0x4889d6	                            mov rsi, rdx	      1147	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1	CALL_17
0x40020f8	          0x4889c7	                            mov rdi, rax	      1147	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1	CALL_17
0x40020fb	      0xe800000000	                          call 0x4002100	      1147	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1	CALL_17
0x4002100	    0x89857cffffff	             mov dword [rbp - 0x84], eax	      1147	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_1	CALL_17
0x4002106	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      1150	packed-backend.c	FUNCTION_31	WHILE_1	IF_8
0x400210d	     0xf8508010000	                           jne 0x400221b	      1150	packed-backend.c	FUNCTION_31	WHILE_1	IF_8
0x4002113	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1156	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9
0x4002117	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1156	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9
0x400211a	          0x83e008	                              and eax, 8	      1156	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9
0x400211d	            0x85c0	                           test eax, eax	      1156	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9
0x400211f	     0xf84a8000000	                            je 0x40021cd	      1156	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9
0x4002125	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1157	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	IF_10	CALL_18
0x4002129	        0x4883c014	                           add rax, 0x14	      1157	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	IF_10	CALL_18
0x400212d	          0x4889c7	                            mov rdi, rax	      1157	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	IF_10	CALL_18
0x4002130	      0xe875e1ffff	                    call sym.is_null_oid	      1157	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	IF_10	CALL_18
0x4002135	            0x85c0	                           test eax, eax	      1157	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	IF_10	CALL_18
0x4002137	            0x7426	                            je 0x400215f	      1157	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	IF_10	CALL_18
0x4002139	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1160	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	IF_10
0x400213d	        0x488d5050	                   lea rdx, [rax + 0x50]	      1160	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	IF_10
0x4002141	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1158	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	IF_10	CALL_19
0x4002148	      0xbe00000000	                              mov esi, 0	      1158	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	IF_10	CALL_19
0x400214d	          0x4889c7	                            mov rdi, rax	      1158	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	IF_10	CALL_19
0x4002150	      0xb800000000	                              mov eax, 0	      1158	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	IF_10	CALL_19
0x4002155	      0xe800000000	                          call 0x400215a	      1158	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	IF_10	CALL_19
0x400215a	      0xe910030000	                           jmp 0x400246f	      1161	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	IF_10
0x400215f	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1162	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_20
0x4002163	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1162	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_20
0x4002167	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      1162	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_20
0x400216b	        0x4883c214	                           add rdx, 0x14	      1162	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_20
0x400216f	          0x4889c6	                            mov rsi, rax	      1162	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_20
0x4002172	          0x4889d7	                            mov rdi, rdx	      1162	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_20
0x4002175	      0xe80be1ffff	                         call sym.oidcmp	      1162	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_20
0x400217a	            0x85c0	                           test eax, eax	      1162	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_20
0x400217c	            0x744f	                            je 0x40021cd	      1162	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_20
0x400217e	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1167	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_23
0x4002182	        0x4883c014	                           add rax, 0x14	      1167	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_23
0x4002186	          0x4889c7	                            mov rdi, rax	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_21
0x4002189	      0xe800000000	                          call 0x400218e	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_21
0x400218e	          0x4889c3	                            mov rbx, rax	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_21
0x4002191	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_21
0x4002195	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_21
0x4002199	          0x4889c7	                            mov rdi, rax	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_21
0x400219c	      0xe800000000	                          call 0x40021a1	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_21
0x40021a1	          0x4889c1	                            mov rcx, rax	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_21
0x40021a4	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1165	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11
0x40021a8	        0x488d5050	                   lea rdx, [rax + 0x50]	      1165	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11
0x40021ac	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_21
0x40021b3	          0x4989d8	                             mov r8, rbx	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_21
0x40021b6	      0xbe00000000	                              mov esi, 0	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_21
0x40021bb	          0x4889c7	                            mov rdi, rax	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_21
0x40021be	      0xb800000000	                              mov eax, 0	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_21
0x40021c3	      0xe800000000	                          call 0x40021c8	      1163	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11	CALL_21
0x40021c8	      0xe9a2020000	                           jmp 0x400246f	      1168	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_9	ELSE_3	IF_11
0x40021cd	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1173	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12
0x40021d1	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1173	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12
0x40021d4	          0x83e004	                              and eax, 4	      1173	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12
0x40021d7	            0x85c0	                           test eax, eax	      1173	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12
0x40021d9	            0x742f	                            je 0x400220a	      1173	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12
0x40021db	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1179	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12	IF_13	CALL_24
0x40021df	          0x4889c7	                            mov rdi, rax	      1179	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12	IF_13	CALL_24
0x40021e2	      0xe800000000	                          call 0x40021e7	      1179	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12	IF_13	CALL_24
0x40021e7	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      1179	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12	IF_13	CALL_24
0x40021ed	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 0	      1179	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12	IF_13	CALL_24
0x40021f4	            0x7408	                            je 0x40021fe	      1179	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12	IF_13	CALL_24
0x40021f6	    0x48c745880000	               mov qword [rbp - 0x78], 0	      1180	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12	IF_13
0x40021fe	    0xc7857cffffff	               mov dword [rbp - 0x84], 1	      1181	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12
0x4002208	            0xeb75	                           jmp 0x400227f	      1181	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	IF_12
0x400220a	      0x4883459001	               add qword [rbp - 0x70], 1	      1187	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	ELSE_4
0x400220f	    0xc7857cffffff	     mov dword [rbp - 0x84], 0xffffffff 	      1188	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	ELSE_4
0x4002219	            0xeb64	                           jmp 0x400227f	      1188	packed-backend.c	FUNCTION_31	WHILE_1	IF_8	ELSE_4
0x400221b	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      1190	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14
0x4002222	            0x7e5b	                           jle 0x400227f	      1190	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14
0x4002224	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1196	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15
0x4002228	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1196	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15
0x400222b	          0x83e008	                              and eax, 8	      1196	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15
0x400222e	            0x85c0	                           test eax, eax	      1196	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15
0x4002230	            0x744d	                            je 0x400227f	      1196	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15
0x4002232	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1197	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_25
0x4002236	        0x4883c014	                           add rax, 0x14	      1197	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_25
0x400223a	          0x4889c7	                            mov rdi, rax	      1197	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_25
0x400223d	      0xe868e0ffff	                    call sym.is_null_oid	      1197	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_25
0x4002242	            0x85c0	                           test eax, eax	      1196	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15
0x4002244	            0x7539	                           jne 0x400227f	      1196	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15
0x4002246	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1201	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_27
0x400224a	        0x4883c014	                           add rax, 0x14	      1201	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_27
0x400224e	          0x4889c7	                            mov rdi, rax	      1198	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_26
0x4002251	      0xe800000000	                          call 0x4002256	      1198	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_26
0x4002256	          0x4889c1	                            mov rcx, rax	      1198	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_26
0x4002259	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1200	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15
0x400225d	        0x488d5050	                   lea rdx, [rax + 0x50]	      1200	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15
0x4002261	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1198	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_26
0x4002268	      0xbe00000000	                              mov esi, 0	      1198	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_26
0x400226d	          0x4889c7	                            mov rdi, rax	      1198	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_26
0x4002270	      0xb800000000	                              mov eax, 0	      1198	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_26
0x4002275	      0xe800000000	                          call 0x400227a	      1198	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15	CALL_26
0x400227a	      0xe9f0010000	                           jmp 0x400246f	      1202	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_5	IF_14	IF_15
0x400227f	    0x83bd7cffffff	               cmp dword [rbp - 0x84], 0	      1206	packed-backend.c	FUNCTION_31	WHILE_1	IF_16
0x4002286	            0x7970	                           jns 0x40022f8	      1206	packed-backend.c	FUNCTION_31	WHILE_1	IF_16
0x4002288	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1210	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	CALL_28
0x400228c	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1210	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	CALL_28
0x4002290	          0x4889d6	                            mov rsi, rdx	      1210	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	CALL_28
0x4002293	          0x4889c7	                            mov rdi, rax	      1210	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	CALL_28
0x4002296	      0xe800000000	                          call 0x400229b	      1210	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	CALL_28
0x400229b	          0x894580	             mov dword [rbp - 0x80], eax	      1210	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	CALL_28
0x400229e	        0x837d8000	               cmp dword [rbp - 0x80], 0	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_29
0x40022a2	            0x7506	                           jne 0x40022aa	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_29
0x40022a4	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_29
0x40022a8	            0xeb05	                           jmp 0x40022af	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_29
0x40022aa	      0xb800000000	                              mov eax, 0	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_29
0x40022af	        0x488b5588	             mov rdx, qword [rbp - 0x78]	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_29
0x40022b3	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_29
0x40022b7	        0x488b4d88	             mov rcx, qword [rbp - 0x78]	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_29
0x40022bb	        0x488b7110	            mov rsi, qword [rcx + 0x10] 	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_29
0x40022bf	        0x488b7da8	             mov rdi, qword [rbp - 0x58]	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_29
0x40022c3	          0x4889c1	                            mov rcx, rax	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_29
0x40022c6	      0xe890f9ffff	             call sym.write_packed_entry	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_29
0x40022cb	            0x85c0	                           test eax, eax	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_29
0x40022cd	     0xf8555010000	                           jne 0x4002428	      1212	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17	CALL_29
0x40022d3	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1217	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_18	CALL_30
0x40022d7	          0x4889c7	                            mov rdi, rax	      1217	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_18	CALL_30
0x40022da	      0xe800000000	                          call 0x40022df	      1217	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_18	CALL_30
0x40022df	    0x898578ffffff	             mov dword [rbp - 0x88], eax	      1217	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_18	CALL_30
0x40022e5	    0x83bd78ffffff	               cmp dword [rbp - 0x88], 0	      1217	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_18	CALL_30
0x40022ec	            0x746d	                            je 0x400235b	      1217	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_18	CALL_30
0x40022ee	    0x48c745880000	               mov qword [rbp - 0x78], 0	      1218	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_18
0x40022f6	            0xeb63	                           jmp 0x400235b	      1218	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_18
0x40022f8	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1219	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_6	IF_19	CALL_31
0x40022fc	          0x4889c7	                            mov rdi, rax	      1219	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_6	IF_19	CALL_31
0x40022ff	      0xe8a6dfffff	                    call sym.is_null_oid	      1219	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_6	IF_19	CALL_31
0x4002304	            0x85c0	                           test eax, eax	      1219	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_6	IF_19	CALL_31
0x4002306	            0x7407	                            je 0x400230f	      1219	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_6	IF_19	CALL_31
0x4002308	      0x4883459001	               add qword [rbp - 0x70], 1	      1227	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_6	IF_19
0x400230d	            0xeb4c	                           jmp 0x400235b	      1227	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_6	IF_19
0x400230f	        0x488b4598	             mov rax, qword [rbp - 0x68]	      1230	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	CALL_32
0x4002313	        0x488d55d0	                   lea rdx, [rbp - 0x30]	      1230	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	CALL_32
0x4002317	          0x4889d6	                            mov rsi, rdx	      1230	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	CALL_32
0x400231a	          0x4889c7	                            mov rdi, rax	      1230	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	CALL_32
0x400231d	      0xe800000000	                          call 0x4002322	      1230	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	CALL_32
0x4002322	          0x894584	             mov dword [rbp - 0x7c], eax	      1230	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	CALL_32
0x4002325	        0x837d8400	               cmp dword [rbp - 0x7c], 0	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_33
0x4002329	            0x7506	                           jne 0x4002331	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_33
0x400232b	        0x488d45d0	                   lea rax, [rbp - 0x30]	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_33
0x400232f	            0xeb05	                           jmp 0x4002336	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_33
0x4002331	      0xb800000000	                              mov eax, 0	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_33
0x4002336	        0x488b5598	             mov rdx, qword [rbp - 0x68]	      1234	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20
0x400233a	        0x488b4d98	             mov rcx, qword [rbp - 0x68]	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_33
0x400233e	        0x488d7150	                   lea rsi, [rcx + 0x50]	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_33
0x4002342	        0x488b7da8	             mov rdi, qword [rbp - 0x58]	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_33
0x4002346	          0x4889c1	                            mov rcx, rax	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_33
0x4002349	      0xe80df9ffff	             call sym.write_packed_entry	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_33
0x400234e	            0x85c0	                           test eax, eax	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_33
0x4002350	     0xf85d5000000	                           jne 0x400242b	      1233	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20	CALL_33
0x4002356	      0x4883459001	               add qword [rbp - 0x70], 1	      1238	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7
0x400235b	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      1135	packed-backend.c	FUNCTION_31	WHILE_1
0x4002360	     0xf8529fdffff	                           jne 0x400208f	      1135	packed-backend.c	FUNCTION_31	WHILE_1
0x4002366	    0x488b8560ffff	             mov rax, qword [rbp - 0xa0]	      1135	packed-backend.c	FUNCTION_31	WHILE_1
0x400236d	          0x8b4008	                mov eax, dword [rax + 8]	      1135	packed-backend.c	FUNCTION_31	WHILE_1
0x4002370	            0x89c0	                            mov eax, eax	      1135	packed-backend.c	FUNCTION_31	WHILE_1
0x4002372	        0x483b4590	             cmp rax, qword [rbp - 0x70]	      1135	packed-backend.c	FUNCTION_31	WHILE_1
0x4002376	     0xf8713fdffff	                            ja 0x400208f	      1135	packed-backend.c	FUNCTION_31	WHILE_1
0x400237c	    0x83bd78ffffff	cmp dword [rbp - 0x88], 0xffffffffffffffff	      1242	packed-backend.c	FUNCTION_31	IF_21
0x4002383	            0x7419	                            je 0x400239e	      1242	packed-backend.c	FUNCTION_31	IF_21
0x4002385	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1243	packed-backend.c	FUNCTION_31	IF_21	CALL_34
0x400238c	      0xbe00000000	                              mov esi, 0	      1243	packed-backend.c	FUNCTION_31	IF_21	CALL_34
0x4002391	          0x4889c7	                            mov rdi, rax	      1243	packed-backend.c	FUNCTION_31	IF_21	CALL_34
0x4002394	      0xe861deffff	                  call sym.strbuf_addstr	      1243	packed-backend.c	FUNCTION_31	IF_21	CALL_34
0x4002399	      0xe9d1000000	                           jmp 0x400246f	      1245	packed-backend.c	FUNCTION_31	IF_21
0x400239e	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1248	packed-backend.c	FUNCTION_31	IF_22	CALL_35
0x40023a5	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1248	packed-backend.c	FUNCTION_31	IF_22	CALL_35
0x40023a9	          0x4889c7	                            mov rdi, rax	      1248	packed-backend.c	FUNCTION_31	IF_22	CALL_35
0x40023ac	      0xe800000000	                          call 0x40023b1	      1248	packed-backend.c	FUNCTION_31	IF_22	CALL_35
0x40023b1	            0x85c0	                           test eax, eax	      1248	packed-backend.c	FUNCTION_31	IF_22	CALL_35
0x40023b3	            0x7469	                            je 0x400241e	      1248	packed-backend.c	FUNCTION_31	IF_22	CALL_35
0x40023b5	      0xe800000000	                          call 0x40023ba	      1251	packed-backend.c	FUNCTION_31	IF_22	CALL_38
0x40023ba	            0x8b00	                    mov eax, dword [rax]	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_36
0x40023bc	            0x89c7	                            mov edi, eax	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_36
0x40023be	      0xe800000000	                          call 0x40023c3	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_36
0x40023c3	          0x4889c3	                            mov rbx, rax	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_36
0x40023c6	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_36
0x40023cd	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_36
0x40023d1	          0x4889c7	                            mov rdi, rax	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_36
0x40023d4	      0xe800000000	                          call 0x40023d9	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_36
0x40023d9	          0x4889c2	                            mov rdx, rax	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_36
0x40023dc	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_36
0x40023e3	          0x4889d9	                            mov rcx, rbx	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_36
0x40023e6	      0xbe00000000	                              mov esi, 0	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_36
0x40023eb	          0x4889c7	                            mov rdi, rax	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_36
0x40023ee	      0xb800000000	                              mov eax, 0	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_36
0x40023f3	      0xe800000000	                          call 0x40023f8	      1249	packed-backend.c	FUNCTION_31	IF_22	CALL_36
0x40023f8	        0x488d45b0	                   lea rax, [rbp - 0x50]	      1252	packed-backend.c	FUNCTION_31	IF_22	CALL_39
0x40023fc	          0x4889c7	                            mov rdi, rax	      1252	packed-backend.c	FUNCTION_31	IF_22	CALL_39
0x40023ff	      0xe800000000	                          call 0x4002404	      1252	packed-backend.c	FUNCTION_31	IF_22	CALL_39
0x4002404	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1253	packed-backend.c	FUNCTION_31	IF_22	CALL_40
0x400240b	        0x4883c028	                           add rax, 0x28	      1253	packed-backend.c	FUNCTION_31	IF_22	CALL_40
0x400240f	          0x4889c7	                            mov rdi, rax	      1253	packed-backend.c	FUNCTION_31	IF_22	CALL_40
0x4002412	      0xe800000000	                          call 0x4002417	      1253	packed-backend.c	FUNCTION_31	IF_22	CALL_40
0x4002417	      0xb8ffffffff	                     mov eax, 0xffffffff	      1254	packed-backend.c	FUNCTION_31	IF_22
0x400241c	            0xeb7c	                           jmp 0x400249a	      1254	packed-backend.c	FUNCTION_31	IF_22
0x400241e	      0xb800000000	                              mov eax, 0	      1257	packed-backend.c	FUNCTION_31
0x4002423	            0xeb75	                           jmp 0x400249a	      1257	packed-backend.c	FUNCTION_31
0x4002425	              0x90	                                     nop	      1119	packed-backend.c	FUNCTION_31	IF_4
0x4002426	            0xeb04	                           jmp 0x400242c	      1119	packed-backend.c	FUNCTION_31	IF_4
0x4002428	              0x90	                                     nop	      1215	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17
0x4002429	            0xeb01	                           jmp 0x400242c	      1215	packed-backend.c	FUNCTION_31	WHILE_1	IF_16	IF_17
0x400242b	              0x90	                                     nop	      1236	packed-backend.c	FUNCTION_31	WHILE_1	ELSE_7	IF_20
0x400242c	      0xe800000000	                          call 0x4002431	      1261	packed-backend.c	FUNCTION_31	CALL_43
0x4002431	            0x8b00	                    mov eax, dword [rax]	      1260	packed-backend.c	FUNCTION_31	CALL_41
0x4002433	            0x89c7	                            mov edi, eax	      1260	packed-backend.c	FUNCTION_31	CALL_41
0x4002435	      0xe800000000	                          call 0x400243a	      1260	packed-backend.c	FUNCTION_31	CALL_41
0x400243a	          0x4889c3	                            mov rbx, rax	      1260	packed-backend.c	FUNCTION_31	CALL_41
0x400243d	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1260	packed-backend.c	FUNCTION_31	CALL_41
0x4002444	        0x488b4028	            mov rax, qword [rax + 0x28] 	      1260	packed-backend.c	FUNCTION_31	CALL_41
0x4002448	          0x4889c7	                            mov rdi, rax	      1260	packed-backend.c	FUNCTION_31	CALL_41
0x400244b	      0xe800000000	                          call 0x4002450	      1260	packed-backend.c	FUNCTION_31	CALL_41
0x4002450	          0x4889c2	                            mov rdx, rax	      1260	packed-backend.c	FUNCTION_31	CALL_41
0x4002453	    0x488b8558ffff	             mov rax, qword [rbp - 0xa8]	      1260	packed-backend.c	FUNCTION_31	CALL_41
0x400245a	          0x4889d9	                            mov rcx, rbx	      1260	packed-backend.c	FUNCTION_31	CALL_41
0x400245d	      0xbe00000000	                              mov esi, 0	      1260	packed-backend.c	FUNCTION_31	CALL_41
0x4002462	          0x4889c7	                            mov rdi, rax	      1260	packed-backend.c	FUNCTION_31	CALL_41
0x4002465	      0xb800000000	                              mov eax, 0	      1260	packed-backend.c	FUNCTION_31	CALL_41
0x400246a	      0xe800000000	                          call 0x400246f	      1260	packed-backend.c	FUNCTION_31	CALL_41
0x400246f	      0x48837d8800	               cmp qword [rbp - 0x78], 0	      1264	packed-backend.c	FUNCTION_31	IF_23
0x4002474	            0x740c	                            je 0x4002482	      1264	packed-backend.c	FUNCTION_31	IF_23
0x4002476	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1265	packed-backend.c	FUNCTION_31	CALL_44
0x400247a	          0x4889c7	                            mov rdi, rax	      1265	packed-backend.c	FUNCTION_31	CALL_44
0x400247d	      0xe800000000	                          call 0x4002482	      1265	packed-backend.c	FUNCTION_31	CALL_44
0x4002482	    0x488b8568ffff	             mov rax, qword [rbp - 0x98]	      1267	packed-backend.c	FUNCTION_31	CALL_45
0x4002489	        0x4883c028	                           add rax, 0x28	      1267	packed-backend.c	FUNCTION_31	CALL_45
0x400248d	          0x4889c7	                            mov rdi, rax	      1267	packed-backend.c	FUNCTION_31	CALL_45
0x4002490	      0xe800000000	                          call 0x4002495	      1267	packed-backend.c	FUNCTION_31	CALL_45
0x4002495	      0xb8ffffffff	                     mov eax, 0xffffffff	      1268	packed-backend.c	FUNCTION_31
0x400249a	        0x488b5de8	             mov rbx, qword [rbp - 0x18]	      1269	packed-backend.c	FUNCTION_31
0x400249e	    0x6448331c2528	                xor rbx, qword fs:[0x28]	      1269	packed-backend.c	FUNCTION_31
0x40024a7	            0x7405	                            je 0x40024ae	      1269	packed-backend.c	FUNCTION_31
0x40024a9	      0xe800000000	                          call 0x40024ae	      1269	packed-backend.c	FUNCTION_31
0x40024ae	    0x4881c4a80000	                           add rsp, 0xa8	      1269	packed-backend.c	FUNCTION_31
0x40024b5	              0x5b	                                 pop rbx	      1269	packed-backend.c	FUNCTION_31
0x40024b6	              0x5d	                                 pop rbp	      1269	packed-backend.c	FUNCTION_31
0x40024b7	              0xc3	                                     ret	      1269	packed-backend.c	FUNCTION_31
packed_read_raw_ref	SWITCH,0:FOR,0:CALL,5:ELSE,0:WHILE,0:DO,0:functions,0:IF,2	58
0x40014c2	              0x55	                                push rbp	       728	packed-backend.c	FUNCTION_20
0x40014c3	          0x4889e5	                            mov rbp, rsp	       728	packed-backend.c	FUNCTION_20
0x40014c6	        0x4883ec50	                           sub rsp, 0x50	       728	packed-backend.c	FUNCTION_20
0x40014ca	        0x48897dd8	             mov qword [rbp - 0x28], rdi	       728	packed-backend.c	FUNCTION_20
0x40014ce	        0x488975d0	             mov qword [rbp - 0x30], rsi	       728	packed-backend.c	FUNCTION_20
0x40014d2	        0x488955c8	             mov qword [rbp - 0x38], rdx	       728	packed-backend.c	FUNCTION_20
0x40014d6	        0x48894dc0	             mov qword [rbp - 0x40], rcx	       728	packed-backend.c	FUNCTION_20
0x40014da	        0x4c8945b8	              mov qword [rbp - 0x48], r8	       728	packed-backend.c	FUNCTION_20
0x40014de	        0x488b45d8	             mov rax, qword [rbp - 0x28]	       729	packed-backend.c	FUNCTION_20
0x40014e2	      0xba00000000	                              mov edx, 0	       729	packed-backend.c	FUNCTION_20
0x40014e7	      0xbe01000000	                              mov esi, 1	       729	packed-backend.c	FUNCTION_20
0x40014ec	          0x4889c7	                            mov rdi, rax	       729	packed-backend.c	FUNCTION_20
0x40014ef	      0xe874f0ffff	                call sym.packed_downcast	       729	packed-backend.c	FUNCTION_20
0x40014f4	        0x488945e8	             mov qword [rbp - 0x18], rax	       729	packed-backend.c	FUNCTION_20
0x40014f8	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       731	packed-backend.c	FUNCTION_20	CALL_2
0x40014fc	          0x4889c7	                            mov rdi, rax	       731	packed-backend.c	FUNCTION_20	CALL_2
0x40014ff	      0xe864ffffff	                   call sym.get_snapshot	       731	packed-backend.c	FUNCTION_20	CALL_2
0x4001504	        0x488945f0	             mov qword [rbp - 0x10], rax	       731	packed-backend.c	FUNCTION_20	CALL_2
0x4001508	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       734	packed-backend.c	FUNCTION_20
0x400150c	    0xc70000000000	                      mov dword [rax], 0	       734	packed-backend.c	FUNCTION_20
0x4001512	        0x488b4dd0	             mov rcx, qword [rbp - 0x30]	       736	packed-backend.c	FUNCTION_20	CALL_3
0x4001516	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       736	packed-backend.c	FUNCTION_20	CALL_3
0x400151a	      0xba01000000	                              mov edx, 1	       736	packed-backend.c	FUNCTION_20	CALL_3
0x400151f	          0x4889ce	                            mov rsi, rcx	       736	packed-backend.c	FUNCTION_20	CALL_3
0x4001522	          0x4889c7	                            mov rdi, rax	       736	packed-backend.c	FUNCTION_20	CALL_3
0x4001525	      0xe8e2faffff	        call sym.find_reference_location	       736	packed-backend.c	FUNCTION_20	CALL_3
0x400152a	        0x488945f8	                mov qword [rbp - 8], rax	       736	packed-backend.c	FUNCTION_20	CALL_3
0x400152e	      0x48837df800	                  cmp qword [rbp - 8], 0	       738	packed-backend.c	FUNCTION_20	IF_1
0x4001533	            0x7512	                           jne 0x4001547	       738	packed-backend.c	FUNCTION_20	IF_1
0x4001535	      0xe800000000	                          call 0x400153a	       740	packed-backend.c	FUNCTION_20	IF_1
0x400153a	    0xc70002000000	                      mov dword [rax], 2	       740	packed-backend.c	FUNCTION_20	IF_1
0x4001540	      0xb8ffffffff	                     mov eax, 0xffffffff	       741	packed-backend.c	FUNCTION_20	IF_1
0x4001545	            0xeb55	                           jmp 0x400159c	       741	packed-backend.c	FUNCTION_20	IF_1
0x4001547	        0x488b55c8	             mov rdx, qword [rbp - 0x38]	       744	packed-backend.c	FUNCTION_20	IF_2	CALL_4
0x400154b	        0x488b45f8	                mov rax, qword [rbp - 8]	       744	packed-backend.c	FUNCTION_20	IF_2	CALL_4
0x400154f	          0x4889d6	                            mov rsi, rdx	       744	packed-backend.c	FUNCTION_20	IF_2	CALL_4
0x4001552	          0x4889c7	                            mov rdi, rax	       744	packed-backend.c	FUNCTION_20	IF_2	CALL_4
0x4001555	      0xe800000000	                          call 0x400155a	       744	packed-backend.c	FUNCTION_20	IF_2	CALL_4
0x400155a	            0x85c0	                           test eax, eax	       744	packed-backend.c	FUNCTION_20	IF_2	CALL_4
0x400155c	            0x742f	                            je 0x400158d	       744	packed-backend.c	FUNCTION_20	IF_2	CALL_4
0x400155e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       745	packed-backend.c	FUNCTION_20	CALL_5
0x4001562	        0x488b4020	            mov rax, qword [rax + 0x20] 	       745	packed-backend.c	FUNCTION_20	CALL_5
0x4001566	          0x4889c2	                            mov rdx, rax	       745	packed-backend.c	FUNCTION_20	CALL_5
0x4001569	        0x488b45f8	                mov rax, qword [rbp - 8]	       745	packed-backend.c	FUNCTION_20	CALL_5
0x400156d	          0x4829c2	                            sub rdx, rax	       745	packed-backend.c	FUNCTION_20	CALL_5
0x4001570	          0x4889d0	                            mov rax, rdx	       745	packed-backend.c	FUNCTION_20	CALL_5
0x4001573	          0x4889c2	                            mov rdx, rax	       745	packed-backend.c	FUNCTION_20	CALL_5
0x4001576	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       745	packed-backend.c	FUNCTION_20	CALL_5
0x400157a	        0x488b4010	            mov rax, qword [rax + 0x10] 	       745	packed-backend.c	FUNCTION_20	CALL_5
0x400157e	        0x488b4df8	                mov rcx, qword [rbp - 8]	       745	packed-backend.c	FUNCTION_20	CALL_5
0x4001582	          0x4889ce	                            mov rsi, rcx	       745	packed-backend.c	FUNCTION_20	CALL_5
0x4001585	          0x4889c7	                            mov rdi, rax	       745	packed-backend.c	FUNCTION_20	CALL_5
0x4001588	      0xe8f5f0ffff	               call sym.die_invalid_line	       745	packed-backend.c	FUNCTION_20	CALL_5
0x400158d	        0x488b45b8	             mov rax, qword [rbp - 0x48]	       747	packed-backend.c	FUNCTION_20
0x4001591	    0xc70002000000	                      mov dword [rax], 2	       747	packed-backend.c	FUNCTION_20
0x4001597	      0xb800000000	                              mov eax, 0	       748	packed-backend.c	FUNCTION_20
0x400159c	              0xc9	                                   leave	       749	packed-backend.c	FUNCTION_20
0x400159d	              0xc3	                                     ret	       749	packed-backend.c	FUNCTION_20
packed_for_each_reflog_ent_reverse	SWITCH,0:FOR,0:CALL,0:ELSE,0:WHILE,0:DO,0:functions,0:IF,0	9
0x4002c73	              0x55	                                push rbp	      1599	packed-backend.c	FUNCTION_45
0x4002c74	          0x4889e5	                            mov rbp, rsp	      1599	packed-backend.c	FUNCTION_45
0x4002c77	        0x48897df8	                mov qword [rbp - 8], rdi	      1599	packed-backend.c	FUNCTION_45
0x4002c7b	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1599	packed-backend.c	FUNCTION_45
0x4002c7f	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1599	packed-backend.c	FUNCTION_45
0x4002c83	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1599	packed-backend.c	FUNCTION_45
0x4002c87	      0xb800000000	                              mov eax, 0	      1600	packed-backend.c	FUNCTION_45
0x4002c8c	              0x5d	                                 pop rbp	      1601	packed-backend.c	FUNCTION_45
0x4002c8d	              0xc3	                                     ret	      1601	packed-backend.c	FUNCTION_45
xsize_t	SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0:functions,0:IF,1	15
0x40000f3	              0x55	                                push rbp	       928	git-compat-util.h	FUNCTION_110
0x40000f4	          0x4889e5	                            mov rbp, rsp	       928	git-compat-util.h	FUNCTION_110
0x40000f7	        0x4883ec20	                           sub rsp, 0x20	       928	git-compat-util.h	FUNCTION_110
0x40000fb	        0x48897de8	             mov qword [rbp - 0x18], rdi	       928	git-compat-util.h	FUNCTION_110
0x40000ff	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       929	git-compat-util.h	FUNCTION_110
0x4000103	        0x488945f8	                mov qword [rbp - 8], rax	       929	git-compat-util.h	FUNCTION_110
0x4000107	        0x488b45f8	                mov rax, qword [rbp - 8]	       931	git-compat-util.h	FUNCTION_110	IF_1
0x400010b	        0x483945e8	            cmp qword [rbp - 0x18], rax 	       931	git-compat-util.h	FUNCTION_110	IF_1
0x400010f	            0x740f	                            je 0x4000120	       931	git-compat-util.h	FUNCTION_110	IF_1
0x4000111	      0xbf00000000	                              mov edi, 0	       932	git-compat-util.h	FUNCTION_110	CALL_1
0x4000116	      0xb800000000	                              mov eax, 0	       932	git-compat-util.h	FUNCTION_110	CALL_1
0x400011b	      0xe800000000	                          call 0x4000120	       932	git-compat-util.h	FUNCTION_110	CALL_1
0x4000120	        0x488b45f8	                mov rax, qword [rbp - 8]	       933	git-compat-util.h	FUNCTION_110
0x4000124	              0xc9	                                   leave	       934	git-compat-util.h	FUNCTION_110
0x4000125	              0xc3	                                     ret	       934	git-compat-util.h	FUNCTION_110
find_start_of_record	SWITCH,0:FOR,0:CALL,0:ELSE,0:WHILE,1:DO,0:functions,0:IF,0	21
0x4000ca5	              0x55	                                push rbp	       414	packed-backend.c	FUNCTION_12
0x4000ca6	          0x4889e5	                            mov rbp, rsp	       414	packed-backend.c	FUNCTION_12
0x4000ca9	        0x48897df8	                mov qword [rbp - 8], rdi	       414	packed-backend.c	FUNCTION_12
0x4000cad	        0x488975f0	             mov qword [rbp - 0x10], rsi	       414	packed-backend.c	FUNCTION_12
0x4000cb1	            0xeb05	                           jmp 0x4000cb8	       415	packed-backend.c	FUNCTION_12	WHILE_1
0x4000cb3	      0x48836df001	               sub qword [rbp - 0x10], 1	       416	packed-backend.c	FUNCTION_12	WHILE_1
0x4000cb8	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       415	packed-backend.c	FUNCTION_12	WHILE_1
0x4000cbc	        0x483b45f8	                cmp rax, qword [rbp - 8]	       415	packed-backend.c	FUNCTION_12	WHILE_1
0x4000cc0	            0x761a	                           jbe 0x4000cdc	       415	packed-backend.c	FUNCTION_12	WHILE_1
0x4000cc2	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       415	packed-backend.c	FUNCTION_12	WHILE_1
0x4000cc6	        0x4883e801	                              sub rax, 1	       415	packed-backend.c	FUNCTION_12	WHILE_1
0x4000cca	           0xfb600	                   movzx eax, byte [rax]	       415	packed-backend.c	FUNCTION_12	WHILE_1
0x4000ccd	            0x3c0a	                             cmp al, 0xa	       415	packed-backend.c	FUNCTION_12	WHILE_1
0x4000ccf	            0x75e2	                           jne 0x4000cb3	       415	packed-backend.c	FUNCTION_12	WHILE_1
0x4000cd1	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       415	packed-backend.c	FUNCTION_12	WHILE_1
0x4000cd5	           0xfb600	                   movzx eax, byte [rax]	       415	packed-backend.c	FUNCTION_12	WHILE_1
0x4000cd8	            0x3c5e	                            cmp al, 0x5e	       415	packed-backend.c	FUNCTION_12	WHILE_1
0x4000cda	            0x74d7	                            je 0x4000cb3	       415	packed-backend.c	FUNCTION_12	WHILE_1
0x4000cdc	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       417	packed-backend.c	FUNCTION_12
0x4000ce0	              0x5d	                                 pop rbp	       418	packed-backend.c	FUNCTION_12
0x4000ce1	              0xc3	                                     ret	       418	packed-backend.c	FUNCTION_12
strbuf_setlen	SWITCH,0:FOR,0:CALL,2:ELSE,1:WHILE,0:DO,0:functions,0:IF,2	43
0x4000160	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_120
0x4000161	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_120
0x4000164	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_120
0x4000168	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_120
0x400016c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_120
0x4000170	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_120	IF_1
0x4000174	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_120	IF_1
0x4000177	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_120	IF_1
0x400017a	            0x740d	                            je 0x4000189	       162	strbuf.h	FUNCTION_120	IF_1
0x400017c	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_120	IF_1
0x4000180	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_120	IF_1
0x4000183	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_120	IF_1
0x4000187	            0xeb05	                           jmp 0x400018e	       162	strbuf.h	FUNCTION_120	IF_1
0x4000189	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_120	IF_1
0x400018e	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_120	IF_1
0x4000192	            0x730f	                           jae 0x40001a3	       162	strbuf.h	FUNCTION_120	IF_1
0x4000194	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_120	CALL_1
0x4000199	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_120	CALL_1
0x400019e	      0xe800000000	                          call 0x40001a3	       163	strbuf.h	FUNCTION_120	CALL_1
0x40001a3	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_120
0x40001a7	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_120
0x40001ab	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_120
0x40001af	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_120	IF_2
0x40001b3	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_120	IF_2
0x40001b7	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_120	IF_2
0x40001bd	            0x7414	                            je 0x40001d3	       165	strbuf.h	FUNCTION_120	IF_2
0x40001bf	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_120	IF_2
0x40001c3	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_120	IF_2
0x40001c7	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_120	IF_2
0x40001cb	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_120	IF_2
0x40001ce	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_120	IF_2
0x40001d1	            0xeb24	                           jmp 0x40001f7	       169	strbuf.h	FUNCTION_120
0x40001d3	     0xfb605000000	           movzx eax, byte [0x040001da] 	       168	strbuf.h	FUNCTION_120	CALL_2
0x40001da	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_120	CALL_2
0x40001dc	            0x7419	                            je 0x40001f7	       168	strbuf.h	FUNCTION_120	CALL_2
0x40001de	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_120	CALL_2
0x40001e3	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_120	CALL_2
0x40001e8	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_120	CALL_2
0x40001ed	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_120	CALL_2
0x40001f2	      0xe800000000	                          call 0x40001f7	       168	strbuf.h	FUNCTION_120	CALL_2
0x40001f7	              0x90	                                     nop	       169	strbuf.h	FUNCTION_120
0x40001f8	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_120
0x40001f9	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_120
packed_initial_transaction_commit	SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0:functions,0:IF,0	13
0x40029a6	              0x55	                                push rbp	      1499	packed-backend.c	FUNCTION_37
0x40029a7	          0x4889e5	                            mov rbp, rsp	      1499	packed-backend.c	FUNCTION_37
0x40029aa	        0x4883ec20	                           sub rsp, 0x20	      1499	packed-backend.c	FUNCTION_37
0x40029ae	        0x48897df8	                mov qword [rbp - 8], rdi	      1499	packed-backend.c	FUNCTION_37
0x40029b2	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1499	packed-backend.c	FUNCTION_37
0x40029b6	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1499	packed-backend.c	FUNCTION_37
0x40029ba	        0x488b55e8	             mov rdx, qword [rbp - 0x18]	      1500	packed-backend.c	FUNCTION_37	CALL_1
0x40029be	        0x488b45f0	             mov rax, qword [rbp - 0x10]	      1500	packed-backend.c	FUNCTION_37	CALL_1
0x40029c2	          0x4889d6	                            mov rsi, rdx	      1500	packed-backend.c	FUNCTION_37	CALL_1
0x40029c5	          0x4889c7	                            mov rdi, rax	      1500	packed-backend.c	FUNCTION_37	CALL_1
0x40029c8	      0xe800000000	                          call 0x40029cd	      1500	packed-backend.c	FUNCTION_37	CALL_1
0x40029cd	              0xc9	                                   leave	      1501	packed-backend.c	FUNCTION_37
0x40029ce	              0xc3	                                     ret	      1501	packed-backend.c	FUNCTION_37
find_end_of_record	SWITCH,0:FOR,0:CALL,0:ELSE,0:WHILE,1:DO,0:functions,0:IF,0	20
0x4000ce2	              0x55	                                push rbp	       425	packed-backend.c	FUNCTION_13
0x4000ce3	          0x4889e5	                            mov rbp, rsp	       425	packed-backend.c	FUNCTION_13
0x4000ce6	        0x48897df8	                mov qword [rbp - 8], rdi	       425	packed-backend.c	FUNCTION_13
0x4000cea	        0x488975f0	             mov qword [rbp - 0x10], rsi	       425	packed-backend.c	FUNCTION_13
0x4000cee	      0x488345f801	                  add qword [rbp - 8], 1	       426	packed-backend.c	FUNCTION_13	WHILE_1
0x4000cf3	        0x488b45f8	                mov rax, qword [rbp - 8]	       426	packed-backend.c	FUNCTION_13	WHILE_1
0x4000cf7	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       426	packed-backend.c	FUNCTION_13	WHILE_1
0x4000cfb	            0x731a	                           jae 0x4000d17	       426	packed-backend.c	FUNCTION_13	WHILE_1
0x4000cfd	        0x488b45f8	                mov rax, qword [rbp - 8]	       426	packed-backend.c	FUNCTION_13	WHILE_1
0x4000d01	        0x4883e801	                              sub rax, 1	       426	packed-backend.c	FUNCTION_13	WHILE_1
0x4000d05	           0xfb600	                   movzx eax, byte [rax]	       426	packed-backend.c	FUNCTION_13	WHILE_1
0x4000d08	            0x3c0a	                             cmp al, 0xa	       426	packed-backend.c	FUNCTION_13	WHILE_1
0x4000d0a	            0x75e2	                           jne 0x4000cee	       426	packed-backend.c	FUNCTION_13	WHILE_1
0x4000d0c	        0x488b45f8	                mov rax, qword [rbp - 8]	       426	packed-backend.c	FUNCTION_13	WHILE_1
0x4000d10	           0xfb600	                   movzx eax, byte [rax]	       426	packed-backend.c	FUNCTION_13	WHILE_1
0x4000d13	            0x3c5e	                            cmp al, 0x5e	       426	packed-backend.c	FUNCTION_13	WHILE_1
0x4000d15	            0x74d7	                            je 0x4000cee	       426	packed-backend.c	FUNCTION_13	WHILE_1
0x4000d17	        0x488b45f8	                mov rax, qword [rbp - 8]	       428	packed-backend.c	FUNCTION_13
0x4000d1b	              0x5d	                                 pop rbp	       429	packed-backend.c	FUNCTION_13
0x4000d1c	              0xc3	                                     ret	       429	packed-backend.c	FUNCTION_13
const_error	SWITCH,0:FOR,0:CALL,0:ELSE,0:WHILE,0:DO,0:functions,0:IF,0	5
0x4000040	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_96
0x4000041	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_96
0x4000044	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_96
0x4000049	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_96
0x400004a	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_96
packed_ref_iterator_advance	SWITCH,0:FOR,0:CALL,4:ELSE,0:WHILE,1:DO,0:functions,0:IF,3	53
0x4001957	              0x55	                                push rbp	       854	packed-backend.c	FUNCTION_22
0x4001958	          0x4889e5	                            mov rbp, rsp	       854	packed-backend.c	FUNCTION_22
0x400195b	        0x4883ec20	                           sub rsp, 0x20	       854	packed-backend.c	FUNCTION_22
0x400195f	        0x48897de8	             mov qword [rbp - 0x18], rdi	       854	packed-backend.c	FUNCTION_22
0x4001963	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       855	packed-backend.c	FUNCTION_22
0x4001967	        0x488945f8	                mov qword [rbp - 8], rax	       855	packed-backend.c	FUNCTION_22
0x400196b	            0xeb6a	                           jmp 0x40019d7	       859	packed-backend.c	FUNCTION_22	WHILE_1	CALL_1
0x400196d	        0x488b45f8	                mov rax, qword [rbp - 8]	       860	packed-backend.c	FUNCTION_22	WHILE_1	IF_1
0x4001971	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	       860	packed-backend.c	FUNCTION_22	WHILE_1	IF_1
0x4001977	          0x83e002	                              and eax, 2	       860	packed-backend.c	FUNCTION_22	WHILE_1	IF_1
0x400197a	            0x85c0	                           test eax, eax	       860	packed-backend.c	FUNCTION_22	WHILE_1	IF_1
0x400197c	            0x7416	                            je 0x4001994	       860	packed-backend.c	FUNCTION_22	WHILE_1	IF_1
0x400197e	        0x488b45f8	                mov rax, qword [rbp - 8]	       861	packed-backend.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4001982	        0x488b4010	            mov rax, qword [rax + 0x10] 	       861	packed-backend.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4001986	          0x4889c7	                            mov rdi, rax	       861	packed-backend.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x4001989	      0xe800000000	                          call 0x400198e	       861	packed-backend.c	FUNCTION_22	WHILE_1	IF_1	CALL_2
0x400198e	            0x85c0	                           test eax, eax	       860	packed-backend.c	FUNCTION_22	WHILE_1	IF_1
0x4001990	            0x7402	                            je 0x4001994	       860	packed-backend.c	FUNCTION_22	WHILE_1	IF_1
0x4001992	            0xeb43	                           jmp 0x40019d7	       862	packed-backend.c	FUNCTION_22	WHILE_1	IF_1
0x4001994	        0x488b45f8	                mov rax, qword [rbp - 8]	       864	packed-backend.c	FUNCTION_22	WHILE_1	IF_2
0x4001998	    0x8b8080000000	            mov eax, dword [rax + 0x80] 	       864	packed-backend.c	FUNCTION_22	WHILE_1	IF_2
0x400199e	          0x83e001	                              and eax, 1	       864	packed-backend.c	FUNCTION_22	WHILE_1	IF_2
0x40019a1	            0x85c0	                           test eax, eax	       864	packed-backend.c	FUNCTION_22	WHILE_1	IF_2
0x40019a3	            0x752b	                           jne 0x40019d0	       864	packed-backend.c	FUNCTION_22	WHILE_1	IF_2
0x40019a5	        0x488b45f8	                mov rax, qword [rbp - 8]	       865	packed-backend.c	FUNCTION_22	WHILE_1	IF_2	CALL_3
0x40019a9	    0x8b9080000000	            mov edx, dword [rax + 0x80] 	       865	packed-backend.c	FUNCTION_22	WHILE_1	IF_2	CALL_3
0x40019af	        0x488b45f8	                mov rax, qword [rbp - 8]	       865	packed-backend.c	FUNCTION_22	WHILE_1	IF_2	CALL_3
0x40019b3	        0x488d4840	                   lea rcx, [rax + 0x40]	       865	packed-backend.c	FUNCTION_22	WHILE_1	IF_2	CALL_3
0x40019b7	        0x488b45f8	                mov rax, qword [rbp - 8]	       865	packed-backend.c	FUNCTION_22	WHILE_1	IF_2	CALL_3
0x40019bb	        0x488b4010	            mov rax, qword [rax + 0x10] 	       865	packed-backend.c	FUNCTION_22	WHILE_1	IF_2	CALL_3
0x40019bf	          0x4889ce	                            mov rsi, rcx	       865	packed-backend.c	FUNCTION_22	WHILE_1	IF_2	CALL_3
0x40019c2	          0x4889c7	                            mov rdi, rax	       865	packed-backend.c	FUNCTION_22	WHILE_1	IF_2	CALL_3
0x40019c5	      0xe800000000	                          call 0x40019ca	       865	packed-backend.c	FUNCTION_22	WHILE_1	IF_2	CALL_3
0x40019ca	            0x85c0	                           test eax, eax	       864	packed-backend.c	FUNCTION_22	WHILE_1	IF_2
0x40019cc	            0x7502	                           jne 0x40019d0	       864	packed-backend.c	FUNCTION_22	WHILE_1	IF_2
0x40019ce	            0xeb07	                           jmp 0x40019d7	       867	packed-backend.c	FUNCTION_22	WHILE_1	IF_2
0x40019d0	      0xb800000000	                              mov eax, 0	       869	packed-backend.c	FUNCTION_22	WHILE_1
0x40019d5	            0xeb30	                           jmp 0x4001a07	       869	packed-backend.c	FUNCTION_22	WHILE_1
0x40019d7	        0x488b45f8	                mov rax, qword [rbp - 8]	       859	packed-backend.c	FUNCTION_22	WHILE_1	CALL_1
0x40019db	          0x4889c7	                            mov rdi, rax	       859	packed-backend.c	FUNCTION_22	WHILE_1	CALL_1
0x40019de	      0xe8bbfbffff	                    call sym.next_record	       859	packed-backend.c	FUNCTION_22	WHILE_1	CALL_1
0x40019e3	          0x8945f4	              mov dword [rbp - 0xc], eax	       859	packed-backend.c	FUNCTION_22	WHILE_1	CALL_1
0x40019e6	        0x837df400	                cmp dword [rbp - 0xc], 0	       859	packed-backend.c	FUNCTION_22	WHILE_1	CALL_1
0x40019ea	            0x7481	                            je 0x400196d	       859	packed-backend.c	FUNCTION_22	WHILE_1	CALL_1
0x40019ec	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       872	packed-backend.c	FUNCTION_22	IF_3	CALL_4
0x40019f0	          0x4889c7	                            mov rdi, rax	       872	packed-backend.c	FUNCTION_22	IF_3	CALL_4
0x40019f3	      0xe800000000	                          call 0x40019f8	       872	packed-backend.c	FUNCTION_22	IF_3	CALL_4
0x40019f8	          0x83f8ff	             cmp eax, 0xffffffffffffffff	       872	packed-backend.c	FUNCTION_22	IF_3	CALL_4
0x40019fb	            0x7407	                            je 0x4001a04	       872	packed-backend.c	FUNCTION_22	IF_3	CALL_4
0x40019fd	    0xc745f4feffff	      mov dword [rbp - 0xc], 0xfffffffe 	       873	packed-backend.c	FUNCTION_22	IF_3
0x4001a04	          0x8b45f4	              mov eax, dword [rbp - 0xc]	       875	packed-backend.c	FUNCTION_22
0x4001a07	              0xc9	                                   leave	       876	packed-backend.c	FUNCTION_22
0x4001a08	              0xc3	                                     ret	       876	packed-backend.c	FUNCTION_22
packed_for_each_reflog_ent	SWITCH,0:FOR,0:CALL,0:ELSE,0:WHILE,0:DO,0:functions,0:IF,0	9
0x4002c58	              0x55	                                push rbp	      1591	packed-backend.c	FUNCTION_44
0x4002c59	          0x4889e5	                            mov rbp, rsp	      1591	packed-backend.c	FUNCTION_44
0x4002c5c	        0x48897df8	                mov qword [rbp - 8], rdi	      1591	packed-backend.c	FUNCTION_44
0x4002c60	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1591	packed-backend.c	FUNCTION_44
0x4002c64	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1591	packed-backend.c	FUNCTION_44
0x4002c68	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1591	packed-backend.c	FUNCTION_44
0x4002c6c	      0xb800000000	                              mov eax, 0	      1592	packed-backend.c	FUNCTION_44
0x4002c71	              0x5d	                                 pop rbp	      1593	packed-backend.c	FUNCTION_44
0x4002c72	              0xc3	                                     ret	      1593	packed-backend.c	FUNCTION_44
packed_refs_unlock	SWITCH,0:FOR,0:CALL,4:ELSE,0:WHILE,0:DO,0:functions,0:IF,1	26
0x4001df9	              0x55	                                push rbp	      1032	packed-backend.c	FUNCTION_28
0x4001dfa	          0x4889e5	                            mov rbp, rsp	      1032	packed-backend.c	FUNCTION_28
0x4001dfd	        0x4883ec20	                           sub rsp, 0x20	      1032	packed-backend.c	FUNCTION_28
0x4001e01	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1032	packed-backend.c	FUNCTION_28
0x4001e05	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1033	packed-backend.c	FUNCTION_28	CALL_1
0x4001e09	      0xba00000000	                              mov edx, 0	      1033	packed-backend.c	FUNCTION_28	CALL_1
0x4001e0e	      0xbe03000000	                              mov esi, 3	      1033	packed-backend.c	FUNCTION_28	CALL_1
0x4001e13	          0x4889c7	                            mov rdi, rax	      1033	packed-backend.c	FUNCTION_28	CALL_1
0x4001e16	      0xe84de7ffff	                call sym.packed_downcast	      1033	packed-backend.c	FUNCTION_28	CALL_1
0x4001e1b	        0x488945f8	                mov qword [rbp - 8], rax	      1033	packed-backend.c	FUNCTION_28	CALL_1
0x4001e1f	        0x488b45f8	                mov rax, qword [rbp - 8]	      1038	packed-backend.c	FUNCTION_28	IF_1	CALL_2
0x4001e23	        0x4883c020	                           add rax, 0x20	      1038	packed-backend.c	FUNCTION_28	IF_1	CALL_2
0x4001e27	          0x4889c7	                            mov rdi, rax	      1038	packed-backend.c	FUNCTION_28	IF_1	CALL_2
0x4001e2a	      0xe840e5ffff	            call sym.is_lock_file_locked	      1038	packed-backend.c	FUNCTION_28	IF_1	CALL_2
0x4001e2f	            0x85c0	                           test eax, eax	      1038	packed-backend.c	FUNCTION_28	IF_1	CALL_2
0x4001e31	            0x750f	                           jne 0x4001e42	      1038	packed-backend.c	FUNCTION_28	IF_1	CALL_2
0x4001e33	      0xbf00000000	                              mov edi, 0	      1039	packed-backend.c	FUNCTION_28	CALL_3
0x4001e38	      0xb800000000	                              mov eax, 0	      1039	packed-backend.c	FUNCTION_28	CALL_3
0x4001e3d	      0xe800000000	                          call 0x4001e42	      1039	packed-backend.c	FUNCTION_28	CALL_3
0x4001e42	        0x488b45f8	                mov rax, qword [rbp - 8]	      1040	packed-backend.c	FUNCTION_28	CALL_4
0x4001e46	        0x4883c020	                           add rax, 0x20	      1040	packed-backend.c	FUNCTION_28	CALL_4
0x4001e4a	          0x4889c7	                            mov rdi, rax	      1040	packed-backend.c	FUNCTION_28	CALL_4
0x4001e4d	      0xe857e5ffff	             call sym.rollback_lock_file	      1040	packed-backend.c	FUNCTION_28	CALL_4
0x4001e52	              0x90	                                     nop	      1041	packed-backend.c	FUNCTION_28
0x4001e53	              0xc9	                                   leave	      1041	packed-backend.c	FUNCTION_28
0x4001e54	              0xc3	                                     ret	      1041	packed-backend.c	FUNCTION_28
clear_snapshot_buffer	SWITCH,0:FOR,0:CALL,2:ELSE,1:WHILE,0:DO,0:functions,0:IF,2	50
0x40003e0	              0x55	                                push rbp	       168	packed-backend.c	FUNCTION_2
0x40003e1	          0x4889e5	                            mov rbp, rsp	       168	packed-backend.c	FUNCTION_2
0x40003e4	        0x4883ec10	                           sub rsp, 0x10	       168	packed-backend.c	FUNCTION_2
0x40003e8	        0x48897df8	                mov qword [rbp - 8], rdi	       168	packed-backend.c	FUNCTION_2
0x40003ec	        0x488b45f8	                mov rax, qword [rbp - 8]	       169	packed-backend.c	FUNCTION_2	IF_1
0x40003f0	          0x8b4008	                mov eax, dword [rax + 8]	       169	packed-backend.c	FUNCTION_2	IF_1
0x40003f3	            0x85c0	                           test eax, eax	       169	packed-backend.c	FUNCTION_2	IF_1
0x40003f5	            0x745d	                            je 0x4000454	       169	packed-backend.c	FUNCTION_2	IF_1
0x40003f7	        0x488b45f8	                mov rax, qword [rbp - 8]	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2
0x40003fb	        0x488b4020	            mov rax, qword [rax + 0x20] 	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2
0x40003ff	          0x4889c2	                            mov rdx, rax	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2
0x4000402	        0x488b45f8	                mov rax, qword [rbp - 8]	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2
0x4000406	        0x488b4010	            mov rax, qword [rax + 0x10] 	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2
0x400040a	          0x4829c2	                            sub rdx, rax	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2
0x400040d	          0x4889d0	                            mov rax, rdx	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2
0x4000410	          0x4889c2	                            mov rdx, rax	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2
0x4000413	        0x488b45f8	                mov rax, qword [rbp - 8]	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2
0x4000417	        0x488b4010	            mov rax, qword [rax + 0x10] 	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2
0x400041b	          0x4889d6	                            mov rsi, rdx	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2
0x400041e	          0x4889c7	                            mov rdi, rax	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2
0x4000421	      0xe800000000	                          call 0x4000426	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2
0x4000426	            0x85c0	                           test eax, eax	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2
0x4000428	            0x741d	                            je 0x4000447	       170	packed-backend.c	FUNCTION_2	IF_1	IF_2
0x400042a	        0x488b45f8	                mov rax, qword [rbp - 8]	       172	packed-backend.c	FUNCTION_2	IF_1	IF_2
0x400042e	          0x488b00	                    mov rax, qword [rax]	       172	packed-backend.c	FUNCTION_2	IF_1	IF_2
0x4000431	        0x488b4010	            mov rax, qword [rax + 0x10] 	       171	packed-backend.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x4000435	          0x4889c6	                            mov rsi, rax	       171	packed-backend.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x4000438	      0xbf00000000	                              mov edi, 0	       171	packed-backend.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x400043d	      0xb800000000	                              mov eax, 0	       171	packed-backend.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x4000442	      0xe800000000	                          call 0x4000447	       171	packed-backend.c	FUNCTION_2	IF_1	IF_2	CALL_1
0x4000447	        0x488b45f8	                mov rax, qword [rbp - 8]	       173	packed-backend.c	FUNCTION_2	IF_1
0x400044b	    0xc74008000000	                  mov dword [rax + 8], 0	       173	packed-backend.c	FUNCTION_2	IF_1
0x4000452	            0xeb10	                           jmp 0x4000464	       173	packed-backend.c	FUNCTION_2	IF_1
0x4000454	        0x488b45f8	                mov rax, qword [rbp - 8]	       175	packed-backend.c	FUNCTION_2	ELSE_1	CALL_2
0x4000458	        0x488b4010	            mov rax, qword [rax + 0x10] 	       175	packed-backend.c	FUNCTION_2	ELSE_1	CALL_2
0x400045c	          0x4889c7	                            mov rdi, rax	       175	packed-backend.c	FUNCTION_2	ELSE_1	CALL_2
0x400045f	      0xe800000000	                          call 0x4000464	       175	packed-backend.c	FUNCTION_2	ELSE_1	CALL_2
0x4000464	        0x488b45f8	                mov rax, qword [rbp - 8]	       177	packed-backend.c	FUNCTION_2
0x4000468	    0x48c740200000	               mov qword [rax + 0x20], 0	       177	packed-backend.c	FUNCTION_2
0x4000470	        0x488b45f8	                mov rax, qword [rbp - 8]	       177	packed-backend.c	FUNCTION_2
0x4000474	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       177	packed-backend.c	FUNCTION_2
0x4000478	        0x488b45f8	                mov rax, qword [rbp - 8]	       177	packed-backend.c	FUNCTION_2
0x400047c	        0x48895018	             mov qword [rax + 0x18], rdx	       177	packed-backend.c	FUNCTION_2
0x4000480	        0x488b45f8	                mov rax, qword [rbp - 8]	       177	packed-backend.c	FUNCTION_2
0x4000484	        0x488b5018	            mov rdx, qword [rax + 0x18] 	       177	packed-backend.c	FUNCTION_2
0x4000488	        0x488b45f8	                mov rax, qword [rbp - 8]	       177	packed-backend.c	FUNCTION_2
0x400048c	        0x48895010	             mov qword [rax + 0x10], rdx	       177	packed-backend.c	FUNCTION_2
0x4000490	              0x90	                                     nop	       178	packed-backend.c	FUNCTION_2
0x4000491	              0xc9	                                   leave	       178	packed-backend.c	FUNCTION_2
0x4000492	              0xc3	                                     ret	       178	packed-backend.c	FUNCTION_2
is_packed_transaction_needed	SWITCH,0:FOR,2:CALL,5:ELSE,0:WHILE,0:DO,0:functions,0:IF,5	109
0x40024b8	              0x55	                                push rbp	      1273	packed-backend.c	FUNCTION_32
0x40024b9	          0x4889e5	                            mov rbp, rsp	      1273	packed-backend.c	FUNCTION_32
0x40024bc	        0x4883c480	             add rsp, 0xffffffffffffff80	      1273	packed-backend.c	FUNCTION_32
0x40024c0	        0x48897d88	             mov qword [rbp - 0x78], rdi	      1273	packed-backend.c	FUNCTION_32
0x40024c4	        0x48897580	             mov qword [rbp - 0x80], rsi	      1273	packed-backend.c	FUNCTION_32
0x40024c8	    0x64488b042528	                mov rax, qword fs:[0x28]	      1273	packed-backend.c	FUNCTION_32
0x40024d1	        0x488945f8	                mov qword [rbp - 8], rax	      1273	packed-backend.c	FUNCTION_32
0x40024d5	            0x31c0	                            xor eax, eax	      1273	packed-backend.c	FUNCTION_32
0x40024d7	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1274	packed-backend.c	FUNCTION_32	CALL_1
0x40024db	      0xba00000000	                              mov edx, 0	      1274	packed-backend.c	FUNCTION_32	CALL_1
0x40024e0	      0xbe01000000	                              mov esi, 1	      1274	packed-backend.c	FUNCTION_32	CALL_1
0x40024e5	          0x4889c7	                            mov rdi, rax	      1274	packed-backend.c	FUNCTION_32	CALL_1
0x40024e8	      0xe87be0ffff	                call sym.packed_downcast	      1274	packed-backend.c	FUNCTION_32	CALL_1
0x40024ed	        0x488945a8	             mov qword [rbp - 0x58], rax	      1274	packed-backend.c	FUNCTION_32	CALL_1
0x40024f1	    0x48c745c00000	               mov qword [rbp - 0x40], 0	      1278	packed-backend.c	FUNCTION_32
0x40024f9	    0x48c745c80000	               mov qword [rbp - 0x38], 0	      1278	packed-backend.c	FUNCTION_32
0x4002501	    0x48c745d00000	               mov qword [rbp - 0x30], 0	      1278	packed-backend.c	FUNCTION_32
0x4002509	        0x488b45a8	             mov rax, qword [rbp - 0x58]	      1282	packed-backend.c	FUNCTION_32	IF_1	CALL_2
0x400250d	        0x4883c020	                           add rax, 0x20	      1282	packed-backend.c	FUNCTION_32	IF_1	CALL_2
0x4002511	          0x4889c7	                            mov rdi, rax	      1282	packed-backend.c	FUNCTION_32	IF_1	CALL_2
0x4002514	      0xe856deffff	            call sym.is_lock_file_locked	      1282	packed-backend.c	FUNCTION_32	IF_1	CALL_2
0x4002519	            0x85c0	                           test eax, eax	      1282	packed-backend.c	FUNCTION_32	IF_1	CALL_2
0x400251b	            0x7519	                           jne 0x4002536	      1282	packed-backend.c	FUNCTION_32	IF_1	CALL_2
0x400251d	      0xba00000000	                              mov edx, 0	      1283	packed-backend.c	FUNCTION_32	IF_1
0x4002522	      0xbe03050000	                          mov esi, 0x503	      1283	packed-backend.c	FUNCTION_32	IF_1
0x4002527	      0xbf00000000	                              mov edi, 0	      1283	packed-backend.c	FUNCTION_32	IF_1
0x400252c	      0xb800000000	                              mov eax, 0	      1283	packed-backend.c	FUNCTION_32	IF_1
0x4002531	      0xe800000000	                          call 0x4002536	      1283	packed-backend.c	FUNCTION_32	IF_1
0x4002536	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      1317	packed-backend.c	FUNCTION_32	FOR_1
0x400253e	            0xeb5f	                           jmp 0x400259f	      1317	packed-backend.c	FUNCTION_32	FOR_1
0x4002540	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1318	packed-backend.c	FUNCTION_32	FOR_1
0x4002544	        0x488b4008	                mov rax, qword [rax + 8]	      1318	packed-backend.c	FUNCTION_32	FOR_1
0x4002548	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1318	packed-backend.c	FUNCTION_32	FOR_1
0x400254c	        0x48c1e203	                              shl rdx, 3	      1318	packed-backend.c	FUNCTION_32	FOR_1
0x4002550	          0x4801d0	                            add rax, rdx	      1318	packed-backend.c	FUNCTION_32	FOR_1
0x4002553	          0x488b00	                    mov rax, qword [rax]	      1318	packed-backend.c	FUNCTION_32	FOR_1
0x4002556	        0x488945b0	             mov qword [rbp - 0x50], rax	      1318	packed-backend.c	FUNCTION_32	FOR_1
0x400255a	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1320	packed-backend.c	FUNCTION_32	FOR_1	IF_2
0x400255e	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1320	packed-backend.c	FUNCTION_32	FOR_1	IF_2
0x4002561	          0x83e008	                              and eax, 8	      1320	packed-backend.c	FUNCTION_32	FOR_1	IF_2
0x4002564	            0x85c0	                           test eax, eax	      1320	packed-backend.c	FUNCTION_32	FOR_1	IF_2
0x4002566	            0x740a	                            je 0x4002572	      1320	packed-backend.c	FUNCTION_32	FOR_1	IF_2
0x4002568	      0xb801000000	                              mov eax, 1	      1322	packed-backend.c	FUNCTION_32	FOR_1	IF_2
0x400256d	      0xe9d3000000	                           jmp 0x4002645	      1322	packed-backend.c	FUNCTION_32	FOR_1	IF_2
0x4002572	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1324	packed-backend.c	FUNCTION_32	FOR_1	IF_3	CALL_3
0x4002576	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1324	packed-backend.c	FUNCTION_32	FOR_1	IF_3	CALL_3
0x4002579	          0x83e004	                              and eax, 4	      1324	packed-backend.c	FUNCTION_32	FOR_1	IF_3	CALL_3
0x400257c	            0x85c0	                           test eax, eax	      1324	packed-backend.c	FUNCTION_32	FOR_1	IF_3	CALL_3
0x400257e	            0x741a	                            je 0x400259a	      1324	packed-backend.c	FUNCTION_32	FOR_1	IF_3	CALL_3
0x4002580	        0x488b45b0	             mov rax, qword [rbp - 0x50]	      1324	packed-backend.c	FUNCTION_32	FOR_1	IF_3	CALL_3
0x4002584	          0x4889c7	                            mov rdi, rax	      1324	packed-backend.c	FUNCTION_32	FOR_1	IF_3	CALL_3
0x4002587	      0xe81eddffff	                    call sym.is_null_oid	      1324	packed-backend.c	FUNCTION_32	FOR_1	IF_3	CALL_3
0x400258c	            0x85c0	                           test eax, eax	      1324	packed-backend.c	FUNCTION_32	FOR_1	IF_3	CALL_3
0x400258e	            0x750a	                           jne 0x400259a	      1324	packed-backend.c	FUNCTION_32	FOR_1	IF_3	CALL_3
0x4002590	      0xb801000000	                              mov eax, 1	      1326	packed-backend.c	FUNCTION_32	FOR_1	IF_3
0x4002595	      0xe9ab000000	                           jmp 0x4002645	      1326	packed-backend.c	FUNCTION_32	FOR_1	IF_3
0x400259a	      0x488345a001	               add qword [rbp - 0x60], 1	      1317	packed-backend.c	FUNCTION_32	FOR_1
0x400259f	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1317	packed-backend.c	FUNCTION_32	FOR_1
0x40025a3	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1317	packed-backend.c	FUNCTION_32	FOR_1
0x40025a7	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	      1317	packed-backend.c	FUNCTION_32	FOR_1
0x40025ab	            0x7793	                            ja 0x4002540	      1317	packed-backend.c	FUNCTION_32	FOR_1
0x40025ad	    0xc7459c000000	               mov dword [rbp - 0x64], 0	      1336	packed-backend.c	FUNCTION_32
0x40025b4	    0x48c745a00000	               mov qword [rbp - 0x60], 0	      1337	packed-backend.c	FUNCTION_32	FOR_2
0x40025bc	            0xeb6a	                           jmp 0x4002628	      1337	packed-backend.c	FUNCTION_32	FOR_2
0x40025be	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1338	packed-backend.c	FUNCTION_32	FOR_2
0x40025c2	        0x488b4008	                mov rax, qword [rax + 8]	      1338	packed-backend.c	FUNCTION_32	FOR_2
0x40025c6	        0x488b55a0	             mov rdx, qword [rbp - 0x60]	      1338	packed-backend.c	FUNCTION_32	FOR_2
0x40025ca	        0x48c1e203	                              shl rdx, 3	      1338	packed-backend.c	FUNCTION_32	FOR_2
0x40025ce	          0x4801d0	                            add rax, rdx	      1338	packed-backend.c	FUNCTION_32	FOR_2
0x40025d1	          0x488b00	                    mov rax, qword [rax]	      1338	packed-backend.c	FUNCTION_32	FOR_2
0x40025d4	        0x488945b8	             mov qword [rbp - 0x48], rax	      1338	packed-backend.c	FUNCTION_32	FOR_2
0x40025d8	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1342	packed-backend.c	FUNCTION_32	FOR_2	IF_4
0x40025dc	          0x8b4028	            mov eax, dword [rax + 0x28] 	      1342	packed-backend.c	FUNCTION_32	FOR_2	IF_4
0x40025df	          0x83e004	                              and eax, 4	      1342	packed-backend.c	FUNCTION_32	FOR_2	IF_4
0x40025e2	            0x85c0	                           test eax, eax	      1342	packed-backend.c	FUNCTION_32	FOR_2	IF_4
0x40025e4	            0x743c	                            je 0x4002622	      1342	packed-backend.c	FUNCTION_32	FOR_2	IF_4
0x40025e6	        0x488b45b8	             mov rax, qword [rbp - 0x48]	      1349	packed-backend.c	FUNCTION_32	FOR_2	IF_5	CALL_4
0x40025ea	        0x488d7050	                   lea rsi, [rax + 0x50]	      1349	packed-backend.c	FUNCTION_32	FOR_2	IF_5	CALL_4
0x40025ee	        0x488d7d98	                   lea rdi, [rbp - 0x68]	      1349	packed-backend.c	FUNCTION_32	FOR_2	IF_5	CALL_4
0x40025f2	        0x488d4dc0	                   lea rcx, [rbp - 0x40]	      1349	packed-backend.c	FUNCTION_32	FOR_2	IF_5	CALL_4
0x40025f6	        0x488d55e0	                   lea rdx, [rbp - 0x20]	      1349	packed-backend.c	FUNCTION_32	FOR_2	IF_5	CALL_4
0x40025fa	        0x488b4588	             mov rax, qword [rbp - 0x78]	      1349	packed-backend.c	FUNCTION_32	FOR_2	IF_5	CALL_4
0x40025fe	          0x4989f8	                             mov r8, rdi	      1349	packed-backend.c	FUNCTION_32	FOR_2	IF_5	CALL_4
0x4002601	          0x4889c7	                            mov rdi, rax	      1349	packed-backend.c	FUNCTION_32	FOR_2	IF_5	CALL_4
0x4002604	      0xe800000000	                          call 0x4002609	      1349	packed-backend.c	FUNCTION_32	FOR_2	IF_5	CALL_4
0x4002609	            0x85c0	                           test eax, eax	      1349	packed-backend.c	FUNCTION_32	FOR_2	IF_5	CALL_4
0x400260b	            0x740c	                            je 0x4002619	      1349	packed-backend.c	FUNCTION_32	FOR_2	IF_5	CALL_4
0x400260d	      0xe800000000	                          call 0x4002612	      1351	packed-backend.c	FUNCTION_32	FOR_2	IF_5
0x4002612	            0x8b00	                    mov eax, dword [rax]	      1351	packed-backend.c	FUNCTION_32	FOR_2	IF_5
0x4002614	          0x83f802	                              cmp eax, 2	      1350	packed-backend.c	FUNCTION_32	FOR_2	IF_5
0x4002617	            0x740a	                            je 0x4002623	      1350	packed-backend.c	FUNCTION_32	FOR_2	IF_5
0x4002619	    0xc7459c010000	               mov dword [rbp - 0x64], 1	      1356	packed-backend.c	FUNCTION_32	FOR_2	IF_5
0x4002620	            0xeb14	                           jmp 0x4002636	      1356	packed-backend.c	FUNCTION_32	FOR_2	IF_5
0x4002622	              0x90	                                     nop	      1347	packed-backend.c	FUNCTION_32	FOR_2	IF_4
0x4002623	      0x488345a001	               add qword [rbp - 0x60], 1	      1337	packed-backend.c	FUNCTION_32	FOR_2
0x4002628	        0x488b4580	             mov rax, qword [rbp - 0x80]	      1337	packed-backend.c	FUNCTION_32	FOR_2
0x400262c	        0x488b4018	            mov rax, qword [rax + 0x18] 	      1337	packed-backend.c	FUNCTION_32	FOR_2
0x4002630	        0x483b45a0	             cmp rax, qword [rbp - 0x60]	      1337	packed-backend.c	FUNCTION_32	FOR_2
0x4002634	            0x7788	                            ja 0x40025be	      1337	packed-backend.c	FUNCTION_32	FOR_2
0x4002636	        0x488d45c0	                   lea rax, [rbp - 0x40]	      1361	packed-backend.c	FUNCTION_32	CALL_5
0x400263a	          0x4889c7	                            mov rdi, rax	      1361	packed-backend.c	FUNCTION_32	CALL_5
0x400263d	      0xe800000000	                          call 0x4002642	      1361	packed-backend.c	FUNCTION_32	CALL_5
0x4002642	          0x8b459c	             mov eax, dword [rbp - 0x64]	      1362	packed-backend.c	FUNCTION_32
0x4002645	        0x488b4df8	                mov rcx, qword [rbp - 8]	      1363	packed-backend.c	FUNCTION_32
0x4002649	    0x6448330c2528	                xor rcx, qword fs:[0x28]	      1363	packed-backend.c	FUNCTION_32
0x4002652	            0x7405	                            je 0x4002659	      1363	packed-backend.c	FUNCTION_32
0x4002654	      0xe800000000	                          call 0x4002659	      1363	packed-backend.c	FUNCTION_32
0x4002659	              0xc9	                                   leave	      1363	packed-backend.c	FUNCTION_32
0x400265a	              0xc3	                                     ret	      1363	packed-backend.c	FUNCTION_32
validate_snapshot	SWITCH,0:FOR,0:CALL,2:ELSE,0:WHILE,0:DO,0:functions,0:IF,1	24
0x400141d	              0x55	                                push rbp	       699	packed-backend.c	FUNCTION_18
0x400141e	          0x4889e5	                            mov rbp, rsp	       699	packed-backend.c	FUNCTION_18
0x4001421	        0x4883ec10	                           sub rsp, 0x10	       699	packed-backend.c	FUNCTION_18
0x4001425	        0x48897df8	                mov qword [rbp - 8], rdi	       699	packed-backend.c	FUNCTION_18
0x4001429	        0x488b45f8	                mov rax, qword [rbp - 8]	       700	packed-backend.c	FUNCTION_18	IF_1
0x400142d	        0x488b4018	            mov rax, qword [rax + 0x18] 	       700	packed-backend.c	FUNCTION_18	IF_1
0x4001431	          0x4885c0	                           test rax, rax	       700	packed-backend.c	FUNCTION_18	IF_1
0x4001434	            0x742f	                            je 0x4001465	       700	packed-backend.c	FUNCTION_18	IF_1
0x4001436	        0x488b45f8	                mov rax, qword [rbp - 8]	       701	packed-backend.c	FUNCTION_18	IF_1	CALL_1
0x400143a	        0x488b4010	            mov rax, qword [rax + 0x10] 	       701	packed-backend.c	FUNCTION_18	IF_1	CALL_1
0x400143e	        0x488b55f8	                mov rdx, qword [rbp - 8]	       701	packed-backend.c	FUNCTION_18	IF_1	CALL_1
0x4001442	        0x488b5218	            mov rdx, qword [rdx + 0x18] 	       701	packed-backend.c	FUNCTION_18	IF_1	CALL_1
0x4001446	        0x4883c230	                           add rdx, 0x30	       701	packed-backend.c	FUNCTION_18	IF_1	CALL_1
0x400144a	          0x4889c6	                            mov rsi, rax	       701	packed-backend.c	FUNCTION_18	IF_1	CALL_1
0x400144d	          0x4889d7	                            mov rdi, rdx	       701	packed-backend.c	FUNCTION_18	IF_1	CALL_1
0x4001450	      0xe800000000	                          call 0x4001455	       701	packed-backend.c	FUNCTION_18	IF_1	CALL_1
0x4001455	            0x85c0	                           test eax, eax	       700	packed-backend.c	FUNCTION_18	IF_1
0x4001457	            0x750c	                           jne 0x4001465	       700	packed-backend.c	FUNCTION_18	IF_1
0x4001459	        0x488b45f8	                mov rax, qword [rbp - 8]	       702	packed-backend.c	FUNCTION_18	CALL_2
0x400145d	          0x4889c7	                            mov rdi, rax	       702	packed-backend.c	FUNCTION_18	CALL_2
0x4001460	      0xe883f1ffff	                 call sym.clear_snapshot	       702	packed-backend.c	FUNCTION_18	CALL_2
0x4001465	              0x90	                                     nop	       703	packed-backend.c	FUNCTION_18
0x4001466	              0xc9	                                   leave	       703	packed-backend.c	FUNCTION_18
0x4001467	              0xc3	                                     ret	       703	packed-backend.c	FUNCTION_18
st_mult	SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0:functions,0:IF,1	22
0x40000a1	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_105
0x40000a2	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_105
0x40000a5	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_105
0x40000a9	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_105
0x40000ad	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_105
0x40000b1	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_105	IF_1
0x40000b6	            0x7430	                            je 0x40000e8	       795	git-compat-util.h	FUNCTION_105	IF_1
0x40000b8	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_105	IF_1
0x40000bf	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_105	IF_1
0x40000c4	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_105	IF_1
0x40000c8	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_105	IF_1
0x40000cc	            0x731a	                           jae 0x40000e8	       795	git-compat-util.h	FUNCTION_105	IF_1
0x40000ce	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_105	IF_1	CALL_1
0x40000d2	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_105	IF_1	CALL_1
0x40000d6	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_105	IF_1	CALL_1
0x40000d9	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_105	IF_1	CALL_1
0x40000de	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_105	IF_1	CALL_1
0x40000e3	      0xe800000000	                          call 0x40000e8	       796	git-compat-util.h	FUNCTION_105	IF_1	CALL_1
0x40000e8	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_105
0x40000ec	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_105
0x40000f1	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_105
0x40000f2	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_105
packed_transaction_abort	SWITCH,0:FOR,0:CALL,2:ELSE,0:WHILE,0:DO,0:functions,0:IF,0	20
0x4002892	              0x55	                                push rbp	      1458	packed-backend.c	FUNCTION_35
0x4002893	          0x4889e5	                            mov rbp, rsp	      1458	packed-backend.c	FUNCTION_35
0x4002896	        0x4883ec30	                           sub rsp, 0x30	      1458	packed-backend.c	FUNCTION_35
0x400289a	        0x48897de8	             mov qword [rbp - 0x18], rdi	      1458	packed-backend.c	FUNCTION_35
0x400289e	        0x488975e0	             mov qword [rbp - 0x20], rsi	      1458	packed-backend.c	FUNCTION_35
0x40028a2	        0x488955d8	             mov qword [rbp - 0x28], rdx	      1458	packed-backend.c	FUNCTION_35
0x40028a6	        0x488b45e8	             mov rax, qword [rbp - 0x18]	      1459	packed-backend.c	FUNCTION_35	CALL_1
0x40028aa	      0xba00000000	                              mov edx, 0	      1459	packed-backend.c	FUNCTION_35	CALL_1
0x40028af	      0xbe07000000	                              mov esi, 7	      1459	packed-backend.c	FUNCTION_35	CALL_1
0x40028b4	          0x4889c7	                            mov rdi, rax	      1459	packed-backend.c	FUNCTION_35	CALL_1
0x40028b7	      0xe8acdcffff	                call sym.packed_downcast	      1459	packed-backend.c	FUNCTION_35	CALL_1
0x40028bc	        0x488945f8	                mov qword [rbp - 8], rax	      1459	packed-backend.c	FUNCTION_35	CALL_1
0x40028c0	        0x488b55e0	             mov rdx, qword [rbp - 0x20]	      1464	packed-backend.c	FUNCTION_35	CALL_2
0x40028c4	        0x488b45f8	                mov rax, qword [rbp - 8]	      1464	packed-backend.c	FUNCTION_35	CALL_2
0x40028c8	          0x4889d6	                            mov rsi, rdx	      1464	packed-backend.c	FUNCTION_35	CALL_2
0x40028cb	          0x4889c7	                            mov rdi, rax	      1464	packed-backend.c	FUNCTION_35	CALL_2
0x40028ce	      0xe888fdffff	     call sym.packed_transaction_cleanup	      1464	packed-backend.c	FUNCTION_35	CALL_2
0x40028d3	      0xb800000000	                              mov eax, 0	      1465	packed-backend.c	FUNCTION_35
0x40028d8	              0xc9	                                   leave	      1466	packed-backend.c	FUNCTION_35
0x40028d9	              0xc3	                                     ret	      1466	packed-backend.c	FUNCTION_35
skip_prefix	SWITCH,0:FOR,0:CALL,0:ELSE,0:WHILE,0:DO,1:functions,0:IF,1	27
0x400004b	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_97
0x400004c	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_97
0x400004f	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_97
0x4000053	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_97
0x4000057	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_97
0x400005b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x400005f	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x4000062	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x4000064	            0x7512	                           jne 0x4000078	       484	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x4000066	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x400006a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x400006e	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x4000071	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x4000076	            0xeb27	                           jmp 0x400009f	       486	git-compat-util.h	FUNCTION_97	DO_1	IF_1
0x4000078	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_97	DO_1
0x400007c	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4000080	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4000084	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4000087	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_97	DO_1
0x400008b	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_97	DO_1
0x400008f	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4000093	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4000096	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_97	DO_1
0x4000098	            0x74c1	                            je 0x400005b	       488	git-compat-util.h	FUNCTION_97	DO_1
0x400009a	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_97
0x400009f	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_97
0x40000a0	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_97
acquire_snapshot	SWITCH,0:FOR,0:CALL,0:ELSE,0:WHILE,0:DO,0:functions,0:IF,0	11
0x40003c4	              0x55	                                push rbp	       158	packed-backend.c	FUNCTION_1
0x40003c5	          0x4889e5	                            mov rbp, rsp	       158	packed-backend.c	FUNCTION_1
0x40003c8	        0x48897df8	                mov qword [rbp - 8], rdi	       158	packed-backend.c	FUNCTION_1
0x40003cc	        0x488b45f8	                mov rax, qword [rbp - 8]	       159	packed-backend.c	FUNCTION_1
0x40003d0	          0x8b402c	            mov eax, dword [rax + 0x2c] 	       159	packed-backend.c	FUNCTION_1
0x40003d3	          0x8d5001	                      lea edx, [rax + 1]	       159	packed-backend.c	FUNCTION_1
0x40003d6	        0x488b45f8	                mov rax, qword [rbp - 8]	       159	packed-backend.c	FUNCTION_1
0x40003da	          0x89502c	             mov dword [rax + 0x2c], edx	       159	packed-backend.c	FUNCTION_1
0x40003dd	              0x90	                                     nop	       160	packed-backend.c	FUNCTION_1
0x40003de	              0x5d	                                 pop rbp	       160	packed-backend.c	FUNCTION_1
0x40003df	              0xc3	                                     ret	       160	packed-backend.c	FUNCTION_1
strbuf_addstr	SWITCH,0:FOR,0:CALL,2:ELSE,0:WHILE,0:DO,0:functions,0:IF,0	17
0x40001fa	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_122
0x40001fb	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_122
0x40001fe	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_122
0x4000202	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_122
0x4000206	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_122
0x400020a	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_122	CALL_2
0x400020e	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_122	CALL_2
0x4000211	      0xe800000000	                          call 0x4000216	       279	strbuf.h	FUNCTION_122	CALL_2
0x4000216	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_122	CALL_2
0x4000219	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_122	CALL_2
0x400021d	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_122	CALL_2
0x4000221	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_122	CALL_2
0x4000224	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_122	CALL_2
0x4000227	      0xe800000000	                          call 0x400022c	       279	strbuf.h	FUNCTION_122	CALL_2
0x400022c	              0x90	                                     nop	       280	strbuf.h	FUNCTION_122
0x400022d	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_122
0x400022e	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_122
packed_rename_ref	SWITCH,0:FOR,0:CALL,1:ELSE,0:WHILE,0:DO,0:functions,0:IF,0	10
0x4002bf7	              0x55	                                push rbp	      1572	packed-backend.c	FUNCTION_41
0x4002bf8	          0x4889e5	                            mov rbp, rsp	      1572	packed-backend.c	FUNCTION_41
0x4002bfb	        0x4883ec20	                           sub rsp, 0x20	      1572	packed-backend.c	FUNCTION_41
0x4002bff	        0x48897df8	                mov qword [rbp - 8], rdi	      1572	packed-backend.c	FUNCTION_41
0x4002c03	        0x488975f0	             mov qword [rbp - 0x10], rsi	      1572	packed-backend.c	FUNCTION_41
0x4002c07	        0x488955e8	             mov qword [rbp - 0x18], rdx	      1572	packed-backend.c	FUNCTION_41
0x4002c0b	        0x48894de0	             mov qword [rbp - 0x20], rcx	      1572	packed-backend.c	FUNCTION_41
0x4002c0f	      0xbf00000000	                              mov edi, 0	      1573	packed-backend.c	FUNCTION_41	CALL_1
0x4002c14	      0xb800000000	                              mov eax, 0	      1573	packed-backend.c	FUNCTION_41	CALL_1
0x4002c19	      0xe800000000	                call sym.packed_copy_ref	      1573	packed-backend.c	FUNCTION_41	CALL_1
is_tempfile_active	SWITCH,0:FOR,0:CALL,0:ELSE,0:WHILE,0:DO,0:functions,0:IF,0	14
0x4000347	              0x55	                                push rbp	       201	tempfile.h	FUNCTION_136
0x4000348	          0x4889e5	                            mov rbp, rsp	       201	tempfile.h	FUNCTION_136
0x400034b	        0x48897df8	                mov qword [rbp - 8], rdi	       201	tempfile.h	FUNCTION_136
0x400034f	      0x48837df800	                  cmp qword [rbp - 8], 0	       202	tempfile.h	FUNCTION_136
0x4000354	            0x7412	                            je 0x4000368	       202	tempfile.h	FUNCTION_136
0x4000356	        0x488b45f8	                mov rax, qword [rbp - 8]	       202	tempfile.h	FUNCTION_136
0x400035a	          0x8b4010	            mov eax, dword [rax + 0x10] 	       202	tempfile.h	FUNCTION_136
0x400035d	            0x85c0	                           test eax, eax	       202	tempfile.h	FUNCTION_136
0x400035f	            0x7407	                            je 0x4000368	       202	tempfile.h	FUNCTION_136
0x4000361	      0xb801000000	                              mov eax, 1	       202	tempfile.h	FUNCTION_136
0x4000366	            0xeb05	                           jmp 0x400036d	       202	tempfile.h	FUNCTION_136
0x4000368	      0xb800000000	                              mov eax, 0	       202	tempfile.h	FUNCTION_136
0x400036d	              0x5d	                                 pop rbp	       203	tempfile.h	FUNCTION_136
0x400036e	              0xc3	                                     ret	       203	tempfile.h	FUNCTION_136
packed_ref_iterator_begin	SWITCH,0:FOR,0:CALL,9:ELSE,1:WHILE,0:DO,0:functions,0:IF,4	98
0x4001aea	              0x55	                                push rbp	       915	packed-backend.c	FUNCTION_25
0x4001aeb	          0x4889e5	                            mov rbp, rsp	       915	packed-backend.c	FUNCTION_25
0x4001aee	        0x4883ec50	                           sub rsp, 0x50	       915	packed-backend.c	FUNCTION_25
0x4001af2	        0x48897dc8	             mov qword [rbp - 0x38], rdi	       915	packed-backend.c	FUNCTION_25
0x4001af6	        0x488975c0	             mov qword [rbp - 0x40], rsi	       915	packed-backend.c	FUNCTION_25
0x4001afa	          0x8955bc	             mov dword [rbp - 0x44], edx	       915	packed-backend.c	FUNCTION_25
0x4001afd	    0xc745d4010000	               mov dword [rbp - 0x2c], 1	       921	packed-backend.c	FUNCTION_25
0x4001b04	          0x8b45bc	             mov eax, dword [rbp - 0x44]	       923	packed-backend.c	FUNCTION_25	IF_1
0x4001b07	          0x83e001	                              and eax, 1	       923	packed-backend.c	FUNCTION_25	IF_1
0x4001b0a	            0x85c0	                           test eax, eax	       923	packed-backend.c	FUNCTION_25	IF_1
0x4001b0c	            0x7504	                           jne 0x4001b12	       923	packed-backend.c	FUNCTION_25	IF_1
0x4001b0e	        0x834dd404	                or dword [rbp - 0x2c], 4	       924	packed-backend.c	FUNCTION_25	IF_1
0x4001b12	          0x8b4dd4	             mov ecx, dword [rbp - 0x2c]	       925	packed-backend.c	FUNCTION_25	CALL_1
0x4001b15	        0x488b45c8	             mov rax, qword [rbp - 0x38]	       925	packed-backend.c	FUNCTION_25	CALL_1
0x4001b19	      0xba00000000	                              mov edx, 0	       925	packed-backend.c	FUNCTION_25	CALL_1
0x4001b1e	            0x89ce	                            mov esi, ecx	       925	packed-backend.c	FUNCTION_25	CALL_1
0x4001b20	          0x4889c7	                            mov rdi, rax	       925	packed-backend.c	FUNCTION_25	CALL_1
0x4001b23	      0xe840eaffff	                call sym.packed_downcast	       925	packed-backend.c	FUNCTION_25	CALL_1
0x4001b28	        0x488945e8	             mov qword [rbp - 0x18], rax	       925	packed-backend.c	FUNCTION_25	CALL_1
0x4001b2c	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       932	packed-backend.c	FUNCTION_25	CALL_2
0x4001b30	          0x4889c7	                            mov rdi, rax	       932	packed-backend.c	FUNCTION_25	CALL_2
0x4001b33	      0xe830f9ffff	                   call sym.get_snapshot	       932	packed-backend.c	FUNCTION_25	CALL_2
0x4001b38	        0x488945f0	             mov qword [rbp - 0x10], rax	       932	packed-backend.c	FUNCTION_25	CALL_2
0x4001b3c	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       934	packed-backend.c	FUNCTION_25	IF_2
0x4001b41	            0x7429	                            je 0x4001b6c	       934	packed-backend.c	FUNCTION_25	IF_2
0x4001b43	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       934	packed-backend.c	FUNCTION_25	IF_2
0x4001b47	           0xfb600	                   movzx eax, byte [rax]	       934	packed-backend.c	FUNCTION_25	IF_2
0x4001b4a	            0x84c0	                             test al, al	       934	packed-backend.c	FUNCTION_25	IF_2
0x4001b4c	            0x741e	                            je 0x4001b6c	       934	packed-backend.c	FUNCTION_25	IF_2
0x4001b4e	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       935	packed-backend.c	FUNCTION_25	CALL_3
0x4001b52	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       935	packed-backend.c	FUNCTION_25	CALL_3
0x4001b56	      0xba00000000	                              mov edx, 0	       935	packed-backend.c	FUNCTION_25	CALL_3
0x4001b5b	          0x4889ce	                            mov rsi, rcx	       935	packed-backend.c	FUNCTION_25	CALL_3
0x4001b5e	          0x4889c7	                            mov rdi, rax	       935	packed-backend.c	FUNCTION_25	CALL_3
0x4001b61	      0xe8a6f4ffff	        call sym.find_reference_location	       935	packed-backend.c	FUNCTION_25	CALL_3
0x4001b66	        0x488945d8	             mov qword [rbp - 0x28], rax	       935	packed-backend.c	FUNCTION_25	CALL_3
0x4001b6a	            0xeb0c	                           jmp 0x4001b78	       935	packed-backend.c	FUNCTION_25	CALL_3
0x4001b6c	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       937	packed-backend.c	FUNCTION_25	ELSE_1
0x4001b70	        0x488b4018	            mov rax, qword [rax + 0x18] 	       937	packed-backend.c	FUNCTION_25	ELSE_1
0x4001b74	        0x488945d8	             mov qword [rbp - 0x28], rax	       937	packed-backend.c	FUNCTION_25	ELSE_1
0x4001b78	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       939	packed-backend.c	FUNCTION_25	IF_3
0x4001b7c	        0x488b4020	            mov rax, qword [rax + 0x20] 	       939	packed-backend.c	FUNCTION_25	IF_3
0x4001b80	        0x483b45d8	             cmp rax, qword [rbp - 0x28]	       939	packed-backend.c	FUNCTION_25	IF_3
0x4001b84	            0x750a	                           jne 0x4001b90	       939	packed-backend.c	FUNCTION_25	IF_3
0x4001b86	      0xe800000000	                          call 0x4001b8b	       940	packed-backend.c	FUNCTION_25	CALL_4
0x4001b8b	      0xe9c9000000	                           jmp 0x4001c59	       940	packed-backend.c	FUNCTION_25	CALL_4
0x4001b90	      0xbe88000000	                           mov esi, 0x88	       942	packed-backend.c	FUNCTION_25	CALL_5
0x4001b95	      0xbf01000000	                              mov edi, 1	       942	packed-backend.c	FUNCTION_25	CALL_5
0x4001b9a	      0xe800000000	                          call 0x4001b9f	       942	packed-backend.c	FUNCTION_25	CALL_5
0x4001b9f	        0x488945f8	                mov qword [rbp - 8], rax	       942	packed-backend.c	FUNCTION_25	CALL_5
0x4001ba3	        0x488b45f8	                mov rax, qword [rbp - 8]	       943	packed-backend.c	FUNCTION_25
0x4001ba7	        0x488945e0	             mov qword [rbp - 0x20], rax	       943	packed-backend.c	FUNCTION_25
0x4001bab	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       944	packed-backend.c	FUNCTION_25	CALL_6
0x4001baf	      0xba01000000	                              mov edx, 1	       944	packed-backend.c	FUNCTION_25	CALL_6
0x4001bb4	      0xbe00000000	                              mov esi, 0	       944	packed-backend.c	FUNCTION_25	CALL_6
0x4001bb9	          0x4889c7	                            mov rdi, rax	       944	packed-backend.c	FUNCTION_25	CALL_6
0x4001bbc	      0xe800000000	                          call 0x4001bc1	       944	packed-backend.c	FUNCTION_25	CALL_6
0x4001bc1	        0x488b45f8	                mov rax, qword [rbp - 8]	       946	packed-backend.c	FUNCTION_25
0x4001bc5	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       946	packed-backend.c	FUNCTION_25
0x4001bc9	        0x48895028	             mov qword [rax + 0x28], rdx	       946	packed-backend.c	FUNCTION_25
0x4001bcd	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       947	packed-backend.c	FUNCTION_25	CALL_7
0x4001bd1	          0x4889c7	                            mov rdi, rax	       947	packed-backend.c	FUNCTION_25	CALL_7
0x4001bd4	      0xe8ebe7ffff	               call sym.acquire_snapshot	       947	packed-backend.c	FUNCTION_25	CALL_7
0x4001bd9	        0x488b45f8	                mov rax, qword [rbp - 8]	       949	packed-backend.c	FUNCTION_25
0x4001bdd	        0x488b55d8	             mov rdx, qword [rbp - 0x28]	       949	packed-backend.c	FUNCTION_25
0x4001be1	        0x48895030	             mov qword [rax + 0x30], rdx	       949	packed-backend.c	FUNCTION_25
0x4001be5	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       950	packed-backend.c	FUNCTION_25
0x4001be9	        0x488b5020	            mov rdx, qword [rax + 0x20] 	       950	packed-backend.c	FUNCTION_25
0x4001bed	        0x488b45f8	                mov rax, qword [rbp - 8]	       950	packed-backend.c	FUNCTION_25
0x4001bf1	        0x48895038	             mov qword [rax + 0x38], rdx	       950	packed-backend.c	FUNCTION_25
0x4001bf5	        0x488b45f8	                mov rax, qword [rbp - 8]	       951	packed-backend.c	FUNCTION_25	CALL_8
0x4001bf9	        0x4883c068	                           add rax, 0x68	       951	packed-backend.c	FUNCTION_25	CALL_8
0x4001bfd	      0xbe00000000	                              mov esi, 0	       951	packed-backend.c	FUNCTION_25	CALL_8
0x4001c02	          0x4889c7	                            mov rdi, rax	       951	packed-backend.c	FUNCTION_25	CALL_8
0x4001c05	      0xe800000000	                          call 0x4001c0a	       951	packed-backend.c	FUNCTION_25	CALL_8
0x4001c0a	        0x488b45f8	                mov rax, qword [rbp - 8]	       953	packed-backend.c	FUNCTION_25
0x4001c0e	        0x488d5040	                   lea rdx, [rax + 0x40]	       953	packed-backend.c	FUNCTION_25
0x4001c12	        0x488b45f8	                mov rax, qword [rbp - 8]	       953	packed-backend.c	FUNCTION_25
0x4001c16	        0x48895018	             mov qword [rax + 0x18], rdx	       953	packed-backend.c	FUNCTION_25
0x4001c1a	        0x488b45f8	                mov rax, qword [rbp - 8]	       955	packed-backend.c	FUNCTION_25
0x4001c1e	          0x8b55bc	             mov edx, dword [rbp - 0x44]	       955	packed-backend.c	FUNCTION_25
0x4001c21	    0x899080000000	             mov dword [rax + 0x80], edx	       955	packed-backend.c	FUNCTION_25
0x4001c27	      0x48837dc000	               cmp qword [rbp - 0x40], 0	       957	packed-backend.c	FUNCTION_25	IF_4
0x4001c2c	            0x7427	                            je 0x4001c55	       957	packed-backend.c	FUNCTION_25	IF_4
0x4001c2e	        0x488b45c0	             mov rax, qword [rbp - 0x40]	       957	packed-backend.c	FUNCTION_25	IF_4
0x4001c32	           0xfb600	                   movzx eax, byte [rax]	       957	packed-backend.c	FUNCTION_25	IF_4
0x4001c35	            0x84c0	                             test al, al	       957	packed-backend.c	FUNCTION_25	IF_4
0x4001c37	            0x741c	                            je 0x4001c55	       957	packed-backend.c	FUNCTION_25	IF_4
0x4001c39	        0x488b4dc0	             mov rcx, qword [rbp - 0x40]	       959	packed-backend.c	FUNCTION_25	CALL_9
0x4001c3d	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       959	packed-backend.c	FUNCTION_25	CALL_9
0x4001c41	      0xba00000000	                              mov edx, 0	       959	packed-backend.c	FUNCTION_25	CALL_9
0x4001c46	          0x4889ce	                            mov rsi, rcx	       959	packed-backend.c	FUNCTION_25	CALL_9
0x4001c49	          0x4889c7	                            mov rdi, rax	       959	packed-backend.c	FUNCTION_25	CALL_9
0x4001c4c	      0xe800000000	                          call 0x4001c51	       959	packed-backend.c	FUNCTION_25	CALL_9
0x4001c51	        0x488945e0	             mov qword [rbp - 0x20], rax	       959	packed-backend.c	FUNCTION_25	CALL_9
0x4001c55	        0x488b45e0	             mov rax, qword [rbp - 0x20]	       961	packed-backend.c	FUNCTION_25
0x4001c59	              0xc9	                                   leave	       962	packed-backend.c	FUNCTION_25
0x4001c5a	              0xc3	                                     ret	       962	packed-backend.c	FUNCTION_25
