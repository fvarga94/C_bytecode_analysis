skip_prefix	WHILE,0:SWITCH,0:DO,1:ELSE,0:functions,0:CALL,0:IF,1:FOR,0	27
0x400004b	              0x55	                                push rbp	       482	git-compat-util.h	FUNCTION_7
0x400004c	          0x4889e5	                            mov rbp, rsp	       482	git-compat-util.h	FUNCTION_7
0x400004f	        0x48897df8	                mov qword [rbp - 8], rdi	       482	git-compat-util.h	FUNCTION_7
0x4000053	        0x488975f0	             mov qword [rbp - 0x10], rsi	       482	git-compat-util.h	FUNCTION_7
0x4000057	        0x488955e8	             mov qword [rbp - 0x18], rdx	       482	git-compat-util.h	FUNCTION_7
0x400005b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       484	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x400005f	           0xfb600	                   movzx eax, byte [rax]	       484	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x4000062	            0x84c0	                             test al, al	       484	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x4000064	            0x7512	                           jne 0x4000078	       484	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x4000066	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       485	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x400006a	        0x488b55f8	                mov rdx, qword [rbp - 8]	       485	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x400006e	          0x488910	                    mov qword [rax], rdx	       485	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x4000071	      0xb801000000	                              mov eax, 1	       486	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x4000076	            0xeb27	                           jmp 0x400009f	       486	git-compat-util.h	FUNCTION_7	DO_1	IF_1
0x4000078	        0x488b45f8	                mov rax, qword [rbp - 8]	       488	git-compat-util.h	FUNCTION_7	DO_1
0x400007c	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_7	DO_1
0x4000080	        0x488955f8	                mov qword [rbp - 8], rdx	       488	git-compat-util.h	FUNCTION_7	DO_1
0x4000084	           0xfb608	                   movzx ecx, byte [rax]	       488	git-compat-util.h	FUNCTION_7	DO_1
0x4000087	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       488	git-compat-util.h	FUNCTION_7	DO_1
0x400008b	        0x488d5001	                      lea rdx, [rax + 1]	       488	git-compat-util.h	FUNCTION_7	DO_1
0x400008f	        0x488955f0	             mov qword [rbp - 0x10], rdx	       488	git-compat-util.h	FUNCTION_7	DO_1
0x4000093	           0xfb600	                   movzx eax, byte [rax]	       488	git-compat-util.h	FUNCTION_7	DO_1
0x4000096	            0x38c1	                              cmp cl, al	       488	git-compat-util.h	FUNCTION_7	DO_1
0x4000098	            0x74c1	                            je 0x400005b	       488	git-compat-util.h	FUNCTION_7	DO_1
0x400009a	      0xb800000000	                              mov eax, 0	       489	git-compat-util.h	FUNCTION_7
0x400009f	              0x5d	                                 pop rbp	       490	git-compat-util.h	FUNCTION_7
0x40000a0	              0xc3	                                     ret	       490	git-compat-util.h	FUNCTION_7
hashcpy	WHILE,0:SWITCH,0:DO,0:ELSE,0:functions,0:CALL,1:IF,0:FOR,0	14
0x400019c	              0x55	                                push rbp	       994	cache.h	FUNCTION_43
0x400019d	          0x4889e5	                            mov rbp, rsp	       994	cache.h	FUNCTION_43
0x40001a0	        0x4883ec10	                           sub rsp, 0x10	       994	cache.h	FUNCTION_43
0x40001a4	        0x48897df8	                mov qword [rbp - 8], rdi	       994	cache.h	FUNCTION_43
0x40001a8	        0x488975f0	             mov qword [rbp - 0x10], rsi	       994	cache.h	FUNCTION_43
0x40001ac	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       995	cache.h	FUNCTION_43	CALL_1
0x40001b0	        0x488b45f8	                mov rax, qword [rbp - 8]	       995	cache.h	FUNCTION_43	CALL_1
0x40001b4	      0xba14000000	                           mov edx, 0x14	       995	cache.h	FUNCTION_43	CALL_1
0x40001b9	          0x4889ce	                            mov rsi, rcx	       995	cache.h	FUNCTION_43	CALL_1
0x40001bc	          0x4889c7	                            mov rdi, rax	       995	cache.h	FUNCTION_43	CALL_1
0x40001bf	      0xe800000000	                          call 0x40001c4	       995	cache.h	FUNCTION_43	CALL_1
0x40001c4	              0x90	                                     nop	       996	cache.h	FUNCTION_43
0x40001c5	              0xc9	                                   leave	       996	cache.h	FUNCTION_43
0x40001c6	              0xc3	                                     ret	       996	cache.h	FUNCTION_43
strbuf_addstr	WHILE,0:SWITCH,0:DO,0:ELSE,0:functions,0:CALL,2:IF,0:FOR,0	17
0x400013b	              0x55	                                push rbp	       278	strbuf.h	FUNCTION_63
0x400013c	          0x4889e5	                            mov rbp, rsp	       278	strbuf.h	FUNCTION_63
0x400013f	        0x4883ec10	                           sub rsp, 0x10	       278	strbuf.h	FUNCTION_63
0x4000143	        0x48897df8	                mov qword [rbp - 8], rdi	       278	strbuf.h	FUNCTION_63
0x4000147	        0x488975f0	             mov qword [rbp - 0x10], rsi	       278	strbuf.h	FUNCTION_63
0x400014b	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_63	CALL_2
0x400014f	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_63	CALL_2
0x4000152	      0xe800000000	                          call 0x4000157	       279	strbuf.h	FUNCTION_63	CALL_2
0x4000157	          0x4889c2	                            mov rdx, rax	       279	strbuf.h	FUNCTION_63	CALL_2
0x400015a	        0x488b4df0	             mov rcx, qword [rbp - 0x10]	       279	strbuf.h	FUNCTION_63	CALL_2
0x400015e	        0x488b45f8	                mov rax, qword [rbp - 8]	       279	strbuf.h	FUNCTION_63	CALL_2
0x4000162	          0x4889ce	                            mov rsi, rcx	       279	strbuf.h	FUNCTION_63	CALL_2
0x4000165	          0x4889c7	                            mov rdi, rax	       279	strbuf.h	FUNCTION_63	CALL_2
0x4000168	      0xe800000000	                          call 0x400016d	       279	strbuf.h	FUNCTION_63	CALL_2
0x400016d	              0x90	                                     nop	       280	strbuf.h	FUNCTION_63
0x400016e	              0xc9	                                   leave	       280	strbuf.h	FUNCTION_63
0x400016f	              0xc3	                                     ret	       280	strbuf.h	FUNCTION_63
oidcpy	WHILE,0:SWITCH,0:DO,0:ELSE,0:functions,0:CALL,1:IF,0:FOR,0	13
0x40001c7	              0x55	                                push rbp	       999	cache.h	FUNCTION_44
0x40001c8	          0x4889e5	                            mov rbp, rsp	       999	cache.h	FUNCTION_44
0x40001cb	        0x4883ec10	                           sub rsp, 0x10	       999	cache.h	FUNCTION_44
0x40001cf	        0x48897df8	                mov qword [rbp - 8], rdi	       999	cache.h	FUNCTION_44
0x40001d3	        0x488975f0	             mov qword [rbp - 0x10], rsi	       999	cache.h	FUNCTION_44
0x40001d7	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	      1000	cache.h	FUNCTION_44	CALL_1
0x40001db	        0x488b45f8	                mov rax, qword [rbp - 8]	      1000	cache.h	FUNCTION_44	CALL_1
0x40001df	          0x4889d6	                            mov rsi, rdx	      1000	cache.h	FUNCTION_44	CALL_1
0x40001e2	          0x4889c7	                            mov rdi, rax	      1000	cache.h	FUNCTION_44	CALL_1
0x40001e5	      0xe8b2ffffff	                        call sym.hashcpy	      1000	cache.h	FUNCTION_44	CALL_1
0x40001ea	              0x90	                                     nop	      1001	cache.h	FUNCTION_44
0x40001eb	              0xc9	                                   leave	      1001	cache.h	FUNCTION_44
0x40001ec	              0xc3	                                     ret	      1001	cache.h	FUNCTION_44
_	WHILE,0:SWITCH,0:DO,0:ELSE,0:functions,0:CALL,0:IF,1:FOR,0	15
0x4000170	              0x55	                                push rbp	        51	gettext.h	FUNCTION_30
0x4000171	          0x4889e5	                            mov rbp, rsp	        51	gettext.h	FUNCTION_30
0x4000174	        0x4883ec10	                           sub rsp, 0x10	        51	gettext.h	FUNCTION_30
0x4000178	        0x48897df8	                mov qword [rbp - 8], rdi	        51	gettext.h	FUNCTION_30
0x400017c	        0x488b45f8	                mov rax, qword [rbp - 8]	        52	gettext.h	FUNCTION_30	IF_1
0x4000180	           0xfb600	                   movzx eax, byte [rax]	        52	gettext.h	FUNCTION_30	IF_1
0x4000183	            0x84c0	                             test al, al	        52	gettext.h	FUNCTION_30	IF_1
0x4000185	            0x7507	                           jne 0x400018e	        52	gettext.h	FUNCTION_30	IF_1
0x4000187	      0xb800000000	                              mov eax, 0	        53	gettext.h	FUNCTION_30	IF_1
0x400018c	            0xeb0c	                           jmp 0x400019a	        53	gettext.h	FUNCTION_30	IF_1
0x400018e	        0x488b45f8	                mov rax, qword [rbp - 8]	        54	gettext.h	FUNCTION_30
0x4000192	          0x4889c7	                            mov rdi, rax	        54	gettext.h	FUNCTION_30
0x4000195	      0xe800000000	                          call 0x400019a	        54	gettext.h	FUNCTION_30
0x400019a	              0xc9	                                   leave	        55	gettext.h	FUNCTION_30
0x400019b	              0xc3	                                     ret	        55	gettext.h	FUNCTION_30
strbuf_setlen	WHILE,0:SWITCH,0:DO,0:ELSE,1:functions,0:CALL,2:IF,2:FOR,0	43
0x40000a1	              0x55	                                push rbp	       161	strbuf.h	FUNCTION_61
0x40000a2	          0x4889e5	                            mov rbp, rsp	       161	strbuf.h	FUNCTION_61
0x40000a5	        0x4883ec10	                           sub rsp, 0x10	       161	strbuf.h	FUNCTION_61
0x40000a9	        0x48897df8	                mov qword [rbp - 8], rdi	       161	strbuf.h	FUNCTION_61
0x40000ad	        0x488975f0	             mov qword [rbp - 0x10], rsi	       161	strbuf.h	FUNCTION_61
0x40000b1	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_61	IF_1
0x40000b5	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_61	IF_1
0x40000b8	          0x4885c0	                           test rax, rax	       162	strbuf.h	FUNCTION_61	IF_1
0x40000bb	            0x740d	                            je 0x40000ca	       162	strbuf.h	FUNCTION_61	IF_1
0x40000bd	        0x488b45f8	                mov rax, qword [rbp - 8]	       162	strbuf.h	FUNCTION_61	IF_1
0x40000c1	          0x488b00	                    mov rax, qword [rax]	       162	strbuf.h	FUNCTION_61	IF_1
0x40000c4	        0x4883e801	                              sub rax, 1	       162	strbuf.h	FUNCTION_61	IF_1
0x40000c8	            0xeb05	                           jmp 0x40000cf	       162	strbuf.h	FUNCTION_61	IF_1
0x40000ca	      0xb800000000	                              mov eax, 0	       162	strbuf.h	FUNCTION_61	IF_1
0x40000cf	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       162	strbuf.h	FUNCTION_61	IF_1
0x40000d3	            0x730f	                           jae 0x40000e4	       162	strbuf.h	FUNCTION_61	IF_1
0x40000d5	      0xbf00000000	                              mov edi, 0	       163	strbuf.h	FUNCTION_61	CALL_1
0x40000da	      0xb800000000	                              mov eax, 0	       163	strbuf.h	FUNCTION_61	CALL_1
0x40000df	      0xe800000000	                          call 0x40000e4	       163	strbuf.h	FUNCTION_61	CALL_1
0x40000e4	        0x488b45f8	                mov rax, qword [rbp - 8]	       164	strbuf.h	FUNCTION_61
0x40000e8	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       164	strbuf.h	FUNCTION_61
0x40000ec	        0x48895008	                mov qword [rax + 8], rdx	       164	strbuf.h	FUNCTION_61
0x40000f0	        0x488b45f8	                mov rax, qword [rbp - 8]	       165	strbuf.h	FUNCTION_61	IF_2
0x40000f4	        0x488b4010	            mov rax, qword [rax + 0x10] 	       165	strbuf.h	FUNCTION_61	IF_2
0x40000f8	    0x483d00000000	                              cmp rax, 0	       165	strbuf.h	FUNCTION_61	IF_2
0x40000fe	            0x7414	                            je 0x4000114	       165	strbuf.h	FUNCTION_61	IF_2
0x4000100	        0x488b45f8	                mov rax, qword [rbp - 8]	       166	strbuf.h	FUNCTION_61	IF_2
0x4000104	        0x488b5010	            mov rdx, qword [rax + 0x10] 	       166	strbuf.h	FUNCTION_61	IF_2
0x4000108	        0x488b45f0	             mov rax, qword [rbp - 0x10]	       166	strbuf.h	FUNCTION_61	IF_2
0x400010c	          0x4801d0	                            add rax, rdx	       166	strbuf.h	FUNCTION_61	IF_2
0x400010f	          0xc60000	                       mov byte [rax], 0	       166	strbuf.h	FUNCTION_61	IF_2
0x4000112	            0xeb24	                           jmp 0x4000138	       169	strbuf.h	FUNCTION_61
0x4000114	     0xfb605000000	           movzx eax, byte [0x0400011b] 	       168	strbuf.h	FUNCTION_61	CALL_2
0x400011b	            0x84c0	                             test al, al	       168	strbuf.h	FUNCTION_61	CALL_2
0x400011d	            0x7419	                            je 0x4000138	       168	strbuf.h	FUNCTION_61	CALL_2
0x400011f	      0xb900000000	                              mov ecx, 0	       168	strbuf.h	FUNCTION_61	CALL_2
0x4000124	      0xbaa8000000	                           mov edx, 0xa8	       168	strbuf.h	FUNCTION_61	CALL_2
0x4000129	      0xbe00000000	                              mov esi, 0	       168	strbuf.h	FUNCTION_61	CALL_2
0x400012e	      0xbf00000000	                              mov edi, 0	       168	strbuf.h	FUNCTION_61	CALL_2
0x4000133	      0xe800000000	                          call 0x4000138	       168	strbuf.h	FUNCTION_61	CALL_2
0x4000138	              0x90	                                     nop	       169	strbuf.h	FUNCTION_61
0x4000139	              0xc9	                                   leave	       169	strbuf.h	FUNCTION_61
0x400013a	              0xc3	                                     ret	       169	strbuf.h	FUNCTION_61
const_error	WHILE,0:SWITCH,0:DO,0:ELSE,0:functions,0:CALL,0:IF,0:FOR,0	5
0x4000040	              0x55	                                push rbp	       447	git-compat-util.h	FUNCTION_6
0x4000041	          0x4889e5	                            mov rbp, rsp	       447	git-compat-util.h	FUNCTION_6
0x4000044	      0xb8ffffffff	                     mov eax, 0xffffffff	       448	git-compat-util.h	FUNCTION_6
0x4000049	              0x5d	                                 pop rbp	       449	git-compat-util.h	FUNCTION_6
0x400004a	              0xc3	                                     ret	       449	git-compat-util.h	FUNCTION_6
