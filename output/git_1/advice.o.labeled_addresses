die_resolve_conflict	CALL,3:ELSE,0:IF,0:DO,0:functions,0:WHILE,0:FOR,0:SWITCH,0	9
0x40004f5	        0x4883ec08	                              sub rsp, 8	       161	advice.c	FUNCTION_6
0x40004f9	      0xe800000000	                          call 0x40004fe	       162	advice.c	FUNCTION_6	CALL_1
0x40004fe	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_11	CALL_2
0x4000503	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_11	CALL_2
0x4000508	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_11	CALL_2
0x400050d	      0xe800000000	                          call 0x4000512	        54	gettext.h	FUNCTION_11	CALL_2
0x4000512	          0x4889c7	                            mov rdi, rax	       163	advice.c	FUNCTION_6	CALL_3
0x4000515	      0xb800000000	                              mov eax, 0	       163	advice.c	FUNCTION_6	CALL_3
0x400051a	      0xe800000000	             call sym.die_conclude_merge	       163	advice.c	FUNCTION_6	CALL_3
die_conclude_merge	CALL,6:ELSE,0:IF,1:DO,0:functions,0:WHILE,0:FOR,0:SWITCH,0	24
0x400051f	        0x4883ec08	                              sub rsp, 8	       167	advice.c	FUNCTION_7
0x4000523	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_11	CALL_2
0x4000528	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_11	CALL_2
0x400052d	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_11	CALL_2
0x4000532	      0xe800000000	                          call 0x4000537	        54	gettext.h	FUNCTION_11	CALL_2
0x4000537	          0x4889c7	                            mov rdi, rax	       168	advice.c	FUNCTION_7	CALL_2
0x400053a	      0xb800000000	                              mov eax, 0	       168	advice.c	FUNCTION_7	CALL_2
0x400053f	      0xe800000000	                          call 0x4000544	       168	advice.c	FUNCTION_7	CALL_2
0x4000544	    0x833d00000000	               cmp dword [0x0400054b], 0	       169	advice.c	FUNCTION_7	IF_1
0x400054b	            0x7421	                            je 0x400056e	       169	advice.c	FUNCTION_7	IF_1
0x400054d	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_11	CALL_2
0x4000552	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_11	CALL_2
0x4000557	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_11	CALL_2
0x400055c	      0xe800000000	                          call 0x4000561	        54	gettext.h	FUNCTION_11	CALL_2
0x4000561	          0x4889c7	                            mov rdi, rax	       170	advice.c	FUNCTION_7	CALL_4
0x4000564	      0xb800000000	                              mov eax, 0	       170	advice.c	FUNCTION_7	CALL_4
0x4000569	      0xe800000000	                          call 0x400056e	       170	advice.c	FUNCTION_7	CALL_4
0x400056e	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_11	CALL_2
0x4000573	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_11	CALL_2
0x4000578	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_11	CALL_2
0x400057d	      0xe800000000	                          call 0x4000582	        54	gettext.h	FUNCTION_11	CALL_2
0x4000582	          0x4889c7	                            mov rdi, rax	       171	advice.c	FUNCTION_7	CALL_6
0x4000585	      0xb800000000	                              mov eax, 0	       171	advice.c	FUNCTION_7	CALL_6
0x400058a	      0xe800000000	                  call sym.detach_advice	       171	advice.c	FUNCTION_7	CALL_6
error_resolve_conflict	CALL,19:ELSE,5:IF,6:DO,0:functions,0:WHILE,0:FOR,0:SWITCH,0	102
0x4000367	              0x53	                                push rbx	       135	advice.c	FUNCTION_5
0x4000368	          0x4889fb	                            mov rbx, rdi	       135	advice.c	FUNCTION_5
0x400036b	      0xbf00000000	                              mov edi, 0	       136	advice.c	FUNCTION_5	IF_1	CALL_1
0x4000370	      0xb90c000000	                            mov ecx, 0xc	       136	advice.c	FUNCTION_5	IF_1	CALL_1
0x4000375	          0x4889de	                            mov rsi, rbx	       136	advice.c	FUNCTION_5	IF_1	CALL_1
0x4000378	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       136	advice.c	FUNCTION_5	IF_1	CALL_1
0x400037a	           0xf97c2	                                 seta dl	       136	advice.c	FUNCTION_5	IF_1	CALL_1
0x400037d	           0xf92c0	                                 setb al	       136	advice.c	FUNCTION_5	IF_1	CALL_1
0x4000380	            0x38c2	                              cmp dl, al	       136	advice.c	FUNCTION_5	IF_1	CALL_1
0x4000382	            0x7526	                           jne 0x40003aa	       136	advice.c	FUNCTION_5	IF_1	CALL_1
0x4000384	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_11	CALL_2
0x4000389	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_11	CALL_2
0x400038e	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_11	CALL_2
0x4000393	      0xe800000000	                          call 0x4000398	        54	gettext.h	FUNCTION_11	CALL_2
0x4000398	          0x4889c7	                            mov rdi, rax	       137	advice.c	FUNCTION_5	CALL_3
0x400039b	      0xb800000000	                              mov eax, 0	       137	advice.c	FUNCTION_5	CALL_3
0x40003a0	      0xe800000000	                          call 0x40003a5	       137	advice.c	FUNCTION_5	CALL_3
0x40003a5	      0xe91a010000	                           jmp 0x40004c4	       137	advice.c	FUNCTION_5	CALL_3
0x40003aa	      0xbf00000000	                              mov edi, 0	       138	advice.c	FUNCTION_5	ELSE_1	IF_2	CALL_4
0x40003af	      0xb907000000	                              mov ecx, 7	       138	advice.c	FUNCTION_5	ELSE_1	IF_2	CALL_4
0x40003b4	          0x4889de	                            mov rsi, rbx	       138	advice.c	FUNCTION_5	ELSE_1	IF_2	CALL_4
0x40003b7	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       138	advice.c	FUNCTION_5	ELSE_1	IF_2	CALL_4
0x40003b9	           0xf97c2	                                 seta dl	       138	advice.c	FUNCTION_5	ELSE_1	IF_2	CALL_4
0x40003bc	           0xf92c0	                                 setb al	       138	advice.c	FUNCTION_5	ELSE_1	IF_2	CALL_4
0x40003bf	            0x38c2	                              cmp dl, al	       138	advice.c	FUNCTION_5	ELSE_1	IF_2	CALL_4
0x40003c1	            0x7526	                           jne 0x40003e9	       138	advice.c	FUNCTION_5	ELSE_1	IF_2	CALL_4
0x40003c3	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_11	CALL_2
0x40003c8	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_11	CALL_2
0x40003cd	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_11	CALL_2
0x40003d2	      0xe800000000	                          call 0x40003d7	        54	gettext.h	FUNCTION_11	CALL_2
0x40003d7	          0x4889c7	                            mov rdi, rax	       139	advice.c	FUNCTION_5	ELSE_1	IF_2
0x40003da	      0xb800000000	                              mov eax, 0	       139	advice.c	FUNCTION_5	ELSE_1	IF_2
0x40003df	      0xe800000000	                          call 0x40003e4	       139	advice.c	FUNCTION_5	ELSE_1	IF_2
0x40003e4	      0xe9db000000	                           jmp 0x40004c4	       139	advice.c	FUNCTION_5	ELSE_1	IF_2
0x40003e9	      0xbf00000000	                              mov edi, 0	       140	advice.c	FUNCTION_5	ELSE_2	IF_3	CALL_7
0x40003ee	      0xb906000000	                              mov ecx, 6	       140	advice.c	FUNCTION_5	ELSE_2	IF_3	CALL_7
0x40003f3	          0x4889de	                            mov rsi, rbx	       140	advice.c	FUNCTION_5	ELSE_2	IF_3	CALL_7
0x40003f6	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       140	advice.c	FUNCTION_5	ELSE_2	IF_3	CALL_7
0x40003f8	           0xf97c2	                                 seta dl	       140	advice.c	FUNCTION_5	ELSE_2	IF_3	CALL_7
0x40003fb	           0xf92c0	                                 setb al	       140	advice.c	FUNCTION_5	ELSE_2	IF_3	CALL_7
0x40003fe	            0x38c2	                              cmp dl, al	       140	advice.c	FUNCTION_5	ELSE_2	IF_3	CALL_7
0x4000400	            0x7526	                           jne 0x4000428	       140	advice.c	FUNCTION_5	ELSE_2	IF_3	CALL_7
0x4000402	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_11	CALL_2
0x4000407	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_11	CALL_2
0x400040c	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_11	CALL_2
0x4000411	      0xe800000000	                          call 0x4000416	        54	gettext.h	FUNCTION_11	CALL_2
0x4000416	          0x4889c7	                            mov rdi, rax	       141	advice.c	FUNCTION_5	ELSE_2	IF_3
0x4000419	      0xb800000000	                              mov eax, 0	       141	advice.c	FUNCTION_5	ELSE_2	IF_3
0x400041e	      0xe800000000	                          call 0x4000423	       141	advice.c	FUNCTION_5	ELSE_2	IF_3
0x4000423	      0xe99c000000	                           jmp 0x40004c4	       141	advice.c	FUNCTION_5	ELSE_2	IF_3
0x4000428	      0xbf00000000	                              mov edi, 0	       142	advice.c	FUNCTION_5	ELSE_3	IF_4	CALL_10
0x400042d	      0xb905000000	                              mov ecx, 5	       142	advice.c	FUNCTION_5	ELSE_3	IF_4	CALL_10
0x4000432	          0x4889de	                            mov rsi, rbx	       142	advice.c	FUNCTION_5	ELSE_3	IF_4	CALL_10
0x4000435	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       142	advice.c	FUNCTION_5	ELSE_3	IF_4	CALL_10
0x4000437	           0xf97c2	                                 seta dl	       142	advice.c	FUNCTION_5	ELSE_3	IF_4	CALL_10
0x400043a	           0xf92c0	                                 setb al	       142	advice.c	FUNCTION_5	ELSE_3	IF_4	CALL_10
0x400043d	            0x38c2	                              cmp dl, al	       142	advice.c	FUNCTION_5	ELSE_3	IF_4	CALL_10
0x400043f	            0x7523	                           jne 0x4000464	       142	advice.c	FUNCTION_5	ELSE_3	IF_4	CALL_10
0x4000441	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_11	CALL_2
0x4000446	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_11	CALL_2
0x400044b	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_11	CALL_2
0x4000450	      0xe800000000	                          call 0x4000455	        54	gettext.h	FUNCTION_11	CALL_2
0x4000455	          0x4889c7	                            mov rdi, rax	       143	advice.c	FUNCTION_5	ELSE_3	IF_4
0x4000458	      0xb800000000	                              mov eax, 0	       143	advice.c	FUNCTION_5	ELSE_3	IF_4
0x400045d	      0xe800000000	                          call 0x4000462	       143	advice.c	FUNCTION_5	ELSE_3	IF_4
0x4000462	            0xeb60	                           jmp 0x40004c4	       143	advice.c	FUNCTION_5	ELSE_3	IF_4
0x4000464	      0xbf00000000	                              mov edi, 0	       144	advice.c	FUNCTION_5	ELSE_4	IF_5	CALL_13
0x4000469	      0xb907000000	                              mov ecx, 7	       144	advice.c	FUNCTION_5	ELSE_4	IF_5	CALL_13
0x400046e	          0x4889de	                            mov rsi, rbx	       144	advice.c	FUNCTION_5	ELSE_4	IF_5	CALL_13
0x4000471	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       144	advice.c	FUNCTION_5	ELSE_4	IF_5	CALL_13
0x4000473	           0xf97c2	                                 seta dl	       144	advice.c	FUNCTION_5	ELSE_4	IF_5	CALL_13
0x4000476	           0xf92c0	                                 setb al	       144	advice.c	FUNCTION_5	ELSE_4	IF_5	CALL_13
0x4000479	            0x38c2	                              cmp dl, al	       144	advice.c	FUNCTION_5	ELSE_4	IF_5	CALL_13
0x400047b	            0x7523	                           jne 0x40004a0	       144	advice.c	FUNCTION_5	ELSE_4	IF_5	CALL_13
0x400047d	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_11	CALL_2
0x4000482	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_11	CALL_2
0x4000487	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_11	CALL_2
0x400048c	      0xe800000000	                          call 0x4000491	        54	gettext.h	FUNCTION_11	CALL_2
0x4000491	          0x4889c7	                            mov rdi, rax	       145	advice.c	FUNCTION_5	ELSE_4	IF_5
0x4000494	      0xb800000000	                              mov eax, 0	       145	advice.c	FUNCTION_5	ELSE_4	IF_5
0x4000499	      0xe800000000	                          call 0x400049e	       145	advice.c	FUNCTION_5	ELSE_4	IF_5
0x400049e	            0xeb24	                           jmp 0x40004c4	       145	advice.c	FUNCTION_5	ELSE_4	IF_5
0x40004a0	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_11	CALL_2
0x40004a5	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_11	CALL_2
0x40004aa	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_11	CALL_2
0x40004af	      0xe800000000	                          call 0x40004b4	        54	gettext.h	FUNCTION_11	CALL_2
0x40004b4	          0x4889de	                            mov rsi, rbx	       147	advice.c	FUNCTION_5	ELSE_5	CALL_17
0x40004b7	          0x4889c7	                            mov rdi, rax	       147	advice.c	FUNCTION_5	ELSE_5	CALL_17
0x40004ba	      0xb800000000	                              mov eax, 0	       147	advice.c	FUNCTION_5	ELSE_5	CALL_17
0x40004bf	      0xe800000000	                          call 0x40004c4	       147	advice.c	FUNCTION_5	ELSE_5	CALL_17
0x40004c4	    0x833d00000000	               cmp dword [0x040004cb], 0	       150	advice.c	FUNCTION_5	IF_6
0x40004cb	            0x7421	                            je 0x40004ee	       150	advice.c	FUNCTION_5	IF_6
0x40004cd	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_11	CALL_2
0x40004d2	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_11	CALL_2
0x40004d7	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_11	CALL_2
0x40004dc	      0xe800000000	                          call 0x40004e1	        54	gettext.h	FUNCTION_11	CALL_2
0x40004e1	          0x4889c7	                            mov rdi, rax	       155	advice.c	FUNCTION_5	IF_6	CALL_19
0x40004e4	      0xb800000000	                              mov eax, 0	       155	advice.c	FUNCTION_5	IF_6	CALL_19
0x40004e9	      0xe800000000	                          call 0x40004ee	       155	advice.c	FUNCTION_5	IF_6	CALL_19
0x40004ee	      0xb8ffffffff	                     mov eax, 0xffffffff	       158	advice.c	FUNCTION_5
0x40004f3	              0x5b	                                 pop rbx	       158	advice.c	FUNCTION_5
0x40004f4	              0xc3	                                     ret	       158	advice.c	FUNCTION_5
detach_advice	CALL,2:ELSE,0:IF,0:DO,0:functions,0:WHILE,0:FOR,0:SWITCH,0	14
0x400058f	              0x53	                                push rbx	       175	advice.c	FUNCTION_8
0x4000590	          0x4889fb	                            mov rbx, rdi	       175	advice.c	FUNCTION_8
0x4000593	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_11	CALL_2
0x4000598	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_11	CALL_2
0x400059d	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_11	CALL_2
0x40005a2	      0xe800000000	                          call 0x40005a7	        54	gettext.h	FUNCTION_11	CALL_2
0x40005a7	          0x4889d9	                            mov rcx, rbx	        97	stdio2.h	FUNCTION_17	CALL_1
0x40005aa	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	FUNCTION_17	CALL_1
0x40005ad	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_17	CALL_1
0x40005b2	    0x488b3d000000	            mov rdi, qword [0x040005b9] 	        97	stdio2.h	FUNCTION_17	CALL_1
0x40005b9	      0xb800000000	                              mov eax, 0	        97	stdio2.h	FUNCTION_17	CALL_1
0x40005be	      0xe800000000	                          call 0x40005c3	        97	stdio2.h	FUNCTION_17	CALL_1
0x40005c3	              0x5b	                                 pop rbx	       186	advice.c	FUNCTION_8
0x40005c4	              0xc3	                                     ret	       186	advice.c	FUNCTION_8
advise	CALL,9:ELSE,0:IF,1:DO,0:functions,0:WHILE,0:FOR,1:SWITCH,0	93
0x4000040	            0x4157	                                push r15	        81	advice.c	FUNCTION_3
0x4000042	            0x4156	                                push r14	        81	advice.c	FUNCTION_3
0x4000044	            0x4155	                                push r13	        81	advice.c	FUNCTION_3
0x4000046	            0x4154	                                push r12	        81	advice.c	FUNCTION_3
0x4000048	              0x55	                                push rbp	        81	advice.c	FUNCTION_3
0x4000049	              0x53	                                push rbx	        81	advice.c	FUNCTION_3
0x400004a	    0x4881ecf80000	                           sub rsp, 0xf8	        81	advice.c	FUNCTION_3
0x4000051	      0x4889742448	             mov qword [rsp + 0x48], rsi	        81	advice.c	FUNCTION_3
0x4000056	      0x4889542450	             mov qword [rsp + 0x50], rdx	        81	advice.c	FUNCTION_3
0x400005b	      0x48894c2458	             mov qword [rsp + 0x58], rcx	        81	advice.c	FUNCTION_3
0x4000060	      0x4c89442460	              mov qword [rsp + 0x60], r8	        81	advice.c	FUNCTION_3
0x4000065	      0x4c894c2468	              mov qword [rsp + 0x68], r9	        81	advice.c	FUNCTION_3
0x400006a	            0x84c0	                             test al, al	        81	advice.c	FUNCTION_3
0x400006c	            0x743d	                            je 0x40000ab	        81	advice.c	FUNCTION_3
0x400006e	       0xf29442470	       movaps xmmword [rsp + 0x70], xmm0	        81	advice.c	FUNCTION_3
0x4000073	     0xf298c248000	       movaps xmmword [rsp + 0x80], xmm1	        81	advice.c	FUNCTION_3
0x400007b	     0xf2994249000	       movaps xmmword [rsp + 0x90], xmm2	        81	advice.c	FUNCTION_3
0x4000083	     0xf299c24a000	       movaps xmmword [rsp + 0xa0], xmm3	        81	advice.c	FUNCTION_3
0x400008b	     0xf29a424b000	       movaps xmmword [rsp + 0xb0], xmm4	        81	advice.c	FUNCTION_3
0x4000093	     0xf29ac24c000	       movaps xmmword [rsp + 0xc0], xmm5	        81	advice.c	FUNCTION_3
0x400009b	     0xf29b424d000	       movaps xmmword [rsp + 0xd0], xmm6	        81	advice.c	FUNCTION_3
0x40000a3	     0xf29bc24e000	       movaps xmmword [rsp + 0xe0], xmm7	        81	advice.c	FUNCTION_3
0x40000ab	    0x64488b042528	                mov rax, qword fs:[0x28]	        81	advice.c	FUNCTION_3
0x40000b4	      0x4889442438	             mov qword [rsp + 0x38], rax	        81	advice.c	FUNCTION_3
0x40000b9	            0x31c0	                            xor eax, eax	        81	advice.c	FUNCTION_3
0x40000bb	    0x48c704240000	                      mov qword [rsp], 0	        82	advice.c	FUNCTION_3
0x40000c3	    0x48c744240800	                  mov qword [rsp + 8], 0	        82	advice.c	FUNCTION_3
0x40000cc	    0x48c744241000	               mov qword [rsp + 0x10], 0	        82	advice.c	FUNCTION_3
0x40000d5	    0xc74424200800	               mov dword [rsp + 0x20], 8	        86	advice.c	FUNCTION_3	CALL_1
0x40000dd	    0xc74424243000	           mov dword [rsp + 0x24], 0x30 	        86	advice.c	FUNCTION_3	CALL_1
0x40000e5	    0x488d84243001	                  lea rax, [rsp + 0x130]	        86	advice.c	FUNCTION_3	CALL_1
0x40000ed	      0x4889442428	             mov qword [rsp + 0x28], rax	        86	advice.c	FUNCTION_3	CALL_1
0x40000f2	      0x488d442440	                   lea rax, [rsp + 0x40]	        86	advice.c	FUNCTION_3	CALL_1
0x40000f7	      0x4889442430	             mov qword [rsp + 0x30], rax	        86	advice.c	FUNCTION_3	CALL_1
0x40000fc	      0x488d542420	                   lea rdx, [rsp + 0x20]	        87	advice.c	FUNCTION_3	CALL_2
0x4000101	          0x4889fe	                            mov rsi, rdi	        87	advice.c	FUNCTION_3	CALL_2
0x4000104	          0x4889e7	                            mov rdi, rsp	        87	advice.c	FUNCTION_3	CALL_2
0x4000107	      0xe800000000	                          call 0x400010c	        87	advice.c	FUNCTION_3	CALL_2
0x400010c	      0x488b5c2410	            mov rbx, qword [rsp + 0x10] 	        90	advice.c	FUNCTION_3	FOR_1
0x4000111	    0x41be00000000	                             mov r14d, 0	        48	advice.c	FUNCTION_2	IF_1
0x4000117	      0xe999000000	                           jmp 0x40001b5	        90	advice.c	FUNCTION_3	FOR_1
0x400011c	      0xbe0a000000	                            mov esi, 0xa	        91	advice.c	FUNCTION_3	FOR_1	CALL_4
0x4000121	          0x4889df	                            mov rdi, rbx	        91	advice.c	FUNCTION_3	FOR_1	CALL_4
0x4000124	      0xe800000000	                          call 0x4000129	        91	advice.c	FUNCTION_3	FOR_1	CALL_4
0x4000129	          0x4889c5	                            mov rbp, rax	        91	advice.c	FUNCTION_3	FOR_1	CALL_4
0x400012c	    0x8b3500000000	            mov esi, dword [0x04000132] 	        47	advice.c	FUNCTION_2	IF_1	CALL_1
0x4000132	      0xbf02000000	                              mov edi, 2	        47	advice.c	FUNCTION_2	IF_1	CALL_1
0x4000137	      0xe800000000	                          call 0x400013c	        47	advice.c	FUNCTION_2	IF_1	CALL_1
0x400013c	            0x85c0	                           test eax, eax	        47	advice.c	FUNCTION_2	IF_1	CALL_1
0x400013e	    0x41bd00000000	                             mov r13d, 0	        48	advice.c	FUNCTION_2	IF_1
0x4000144	        0x4d0f44ee	                          cmove r13, r14	        48	advice.c	FUNCTION_2	IF_1
0x4000148	          0x4989ef	                            mov r15, rbp	        92	advice.c	FUNCTION_3	FOR_1	CALL_6
0x400014b	          0x4929df	                            sub r15, rbx	        92	advice.c	FUNCTION_3	FOR_1	CALL_6
0x400014e	    0x8b3500000000	            mov esi, dword [0x04000154] 	        47	advice.c	FUNCTION_2	IF_1	CALL_1
0x4000154	      0xbf02000000	                              mov edi, 2	        47	advice.c	FUNCTION_2	IF_1	CALL_1
0x4000159	      0xe800000000	                          call 0x400015e	        47	advice.c	FUNCTION_2	IF_1	CALL_1
0x400015e	            0x85c0	                           test eax, eax	        47	advice.c	FUNCTION_2	IF_1	CALL_1
0x4000160	    0x41bc00000000	                             mov r12d, 0	        48	advice.c	FUNCTION_2	IF_1
0x4000166	        0x4d0f44e6	                          cmove r12, r14	        48	advice.c	FUNCTION_2	IF_1
0x400016a	      0xba05000000	                              mov edx, 5	        54	gettext.h	FUNCTION_11	CALL_2
0x400016f	      0xbe00000000	                              mov esi, 0	        54	gettext.h	FUNCTION_11	CALL_2
0x4000174	      0xbf00000000	                              mov edi, 0	        54	gettext.h	FUNCTION_11	CALL_2
0x4000179	      0xe800000000	                          call 0x400017e	        54	gettext.h	FUNCTION_11	CALL_2
0x400017e	        0x4883ec08	                              sub rsp, 8	        97	stdio2.h	FUNCTION_17	CALL_1
0x4000182	            0x4155	                                push r13	        97	stdio2.h	FUNCTION_17	CALL_1
0x4000184	          0x4989d9	                             mov r9, rbx	        97	stdio2.h	FUNCTION_17	CALL_1
0x4000187	          0x4589f8	                           mov r8d, r15d	        97	stdio2.h	FUNCTION_17	CALL_1
0x400018a	          0x4c89e1	                            mov rcx, r12	        97	stdio2.h	FUNCTION_17	CALL_1
0x400018d	          0x4889c2	                            mov rdx, rax	        97	stdio2.h	FUNCTION_17	CALL_1
0x4000190	      0xbe01000000	                              mov esi, 1	        97	stdio2.h	FUNCTION_17	CALL_1
0x4000195	    0x488b3d000000	            mov rdi, qword [0x0400019c] 	        97	stdio2.h	FUNCTION_17	CALL_1
0x400019c	      0xb800000000	                              mov eax, 0	        97	stdio2.h	FUNCTION_17	CALL_1
0x40001a1	      0xe800000000	                          call 0x40001a6	        97	stdio2.h	FUNCTION_17	CALL_1
0x40001a6	        0x4883c410	                           add rsp, 0x10	        96	advice.c	FUNCTION_3	FOR_1	IF_1
0x40001aa	        0x807d0001	                       cmp byte [rbp], 1	        97	advice.c	FUNCTION_3	FOR_1	IF_1
0x40001ae	          0x4889eb	                            mov rbx, rbp	        97	advice.c	FUNCTION_3	FOR_1	IF_1
0x40001b1	        0x4883dbff	             sbb rbx, 0xffffffffffffffff	        97	advice.c	FUNCTION_3	FOR_1	IF_1
0x40001b5	          0x803b00	                       cmp byte [rbx], 0	        90	advice.c	FUNCTION_3	FOR_1
0x40001b8	     0xf855effffff	                           jne 0x400011c	        90	advice.c	FUNCTION_3	FOR_1
0x40001be	          0x4889e7	                            mov rdi, rsp	        99	advice.c	FUNCTION_3	CALL_9
0x40001c1	      0xe800000000	                          call 0x40001c6	        99	advice.c	FUNCTION_3	CALL_9
0x40001c6	      0x488b442438	            mov rax, qword [rsp + 0x38] 	       100	advice.c	FUNCTION_3
0x40001cb	    0x644833042528	                xor rax, qword fs:[0x28]	       100	advice.c	FUNCTION_3
0x40001d4	            0x7405	                            je 0x40001db	       100	advice.c	FUNCTION_3
0x40001d6	      0xe800000000	                          call 0x40001db	       100	advice.c	FUNCTION_3
0x40001db	    0x4881c4f80000	                           add rsp, 0xf8	       100	advice.c	FUNCTION_3
0x40001e2	              0x5b	                                 pop rbx	       100	advice.c	FUNCTION_3
0x40001e3	              0x5d	                                 pop rbp	       100	advice.c	FUNCTION_3
0x40001e4	            0x415c	                                 pop r12	       100	advice.c	FUNCTION_3
0x40001e6	            0x415d	                                 pop r13	       100	advice.c	FUNCTION_3
0x40001e8	            0x415e	                                 pop r14	       100	advice.c	FUNCTION_3
0x40001ea	            0x415f	                                 pop r15	       100	advice.c	FUNCTION_3
0x40001ec	              0xc3	                                     ret	       100	advice.c	FUNCTION_3
git_default_advice_config	CALL,10:ELSE,0:IF,6:DO,0:functions,0:WHILE,0:FOR,1:SWITCH,0	107
0x40001ed	            0x4157	                                push r15	       103	advice.c	FUNCTION_4
0x40001ef	            0x4156	                                push r14	       103	advice.c	FUNCTION_4
0x40001f1	            0x4155	                                push r13	       103	advice.c	FUNCTION_4
0x40001f3	            0x4154	                                push r12	       103	advice.c	FUNCTION_4
0x40001f5	              0x55	                                push rbp	       103	advice.c	FUNCTION_4
0x40001f6	              0x53	                                push rbx	       103	advice.c	FUNCTION_4
0x40001f7	        0x4883ec08	                              sub rsp, 8	       103	advice.c	FUNCTION_4
0x40001fb	          0x4889fd	                            mov rbp, rdi	       103	advice.c	FUNCTION_4
0x40001fe	          0x4989f4	                            mov r12, rsi	       103	advice.c	FUNCTION_4
0x4000201	      0xbf00000000	                              mov edi, 0	       107	advice.c	FUNCTION_4	IF_1	CALL_1
0x4000206	      0xb90d000000	                            mov ecx, 0xd	       107	advice.c	FUNCTION_4	IF_1	CALL_1
0x400020b	          0x4889ee	                            mov rsi, rbp	       107	advice.c	FUNCTION_4	IF_1	CALL_1
0x400020e	            0xf3a6	  repe cmpsb byte [rsi], byte ptr [rdi] 	       107	advice.c	FUNCTION_4	IF_1	CALL_1
0x4000210	        0x410f97c5	                               seta r13b	       107	advice.c	FUNCTION_4	IF_1	CALL_1
0x4000214	           0xf92c0	                                 setb al	       107	advice.c	FUNCTION_4	IF_1	CALL_1
0x4000217	          0x4129c5	                           sub r13d, eax	       107	advice.c	FUNCTION_4	IF_1	CALL_1
0x400021a	        0x450fbeed	                        movsx r13d, r13b	       107	advice.c	FUNCTION_4	IF_1	CALL_1
0x400021e	          0x4889eb	                            mov rbx, rbp	       107	advice.c	FUNCTION_4	IF_1	CALL_1
0x4000221	      0xb800000000	                              mov eax, 0	       107	advice.c	FUNCTION_4	IF_1	CALL_1
0x4000226	          0x4585ed	                         test r13d, r13d	       107	advice.c	FUNCTION_4	IF_1	CALL_1
0x4000229	            0x7516	                           jne 0x4000241	       107	advice.c	FUNCTION_4	IF_1	CALL_1
0x400022b	          0x4c89e6	                            mov rsi, r12	       108	advice.c	FUNCTION_4	IF_1	CALL_2
0x400022e	          0x4889ef	                            mov rdi, rbp	       108	advice.c	FUNCTION_4	IF_1	CALL_2
0x4000231	      0xe800000000	                          call 0x4000236	       108	advice.c	FUNCTION_4	IF_1	CALL_2
0x4000236	    0x890500000000	            mov dword [0x0400023c], eax 	       108	advice.c	FUNCTION_4	IF_1	CALL_2
0x400023c	      0xe914010000	                           jmp 0x4000355	       109	advice.c	FUNCTION_4	IF_1
0x4000241	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_39	DO_1	IF_1
0x4000244	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_39	DO_1	IF_1
0x4000246	     0xf84e6000000	                            je 0x4000332	       484	git-compat-util.h	FUNCTION_39	DO_1	IF_1
0x400024c	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_39	DO_1
0x4000250	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_39	DO_1
0x4000254	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_39	DO_1
0x4000257	            0x74e8	                            je 0x4000241	       488	git-compat-util.h	FUNCTION_39	DO_1
0x4000259	          0x4889eb	                            mov rbx, rbp	       488	git-compat-util.h	FUNCTION_39	DO_1
0x400025c	      0xb800000000	                              mov eax, 0	       488	git-compat-util.h	FUNCTION_39	DO_1
0x4000261	            0xeb61	                           jmp 0x40002c4	       488	git-compat-util.h	FUNCTION_39	DO_1
0x4000263	      0xbe00000000	                              mov esi, 0	        40	advice.c	FUNCTION_1	IF_2	CALL_2
0x4000268	          0x4889df	                            mov rdi, rbx	        40	advice.c	FUNCTION_1	IF_2	CALL_2
0x400026b	      0xe800000000	                          call 0x4000270	        40	advice.c	FUNCTION_1	IF_2	CALL_2
0x4000270	            0x89c2	                            mov edx, eax	        40	advice.c	FUNCTION_1	IF_2	CALL_2
0x4000272	      0xb801000000	                              mov eax, 1	        41	advice.c	FUNCTION_1	IF_2
0x4000277	    0x41bd00000000	                             mov r13d, 0	       115	advice.c	FUNCTION_4	IF_2	IF_3
0x400027d	            0x85d2	                           test edx, edx	        40	advice.c	FUNCTION_1	IF_2	CALL_2
0x400027f	     0xf85d0000000	                           jne 0x4000355	        40	advice.c	FUNCTION_1	IF_2	CALL_2
0x4000285	      0xe9bd000000	                           jmp 0x4000347	        40	advice.c	FUNCTION_1	IF_2	CALL_2
0x400028a	          0x4889ef	                            mov rdi, rbp	       117	advice.c	FUNCTION_4	IF_2	CALL_5
0x400028d	      0xe800000000	                          call 0x4000292	       117	advice.c	FUNCTION_4	IF_2	CALL_5
0x4000292	    0x41bdffffffff	                    mov r13d, 0xffffffff	       117	advice.c	FUNCTION_4	IF_2	CALL_5
0x4000298	      0xe9b8000000	                           jmp 0x4000355	       117	advice.c	FUNCTION_4	IF_2	CALL_5
0x400029d	            0x4898	                                    cdqe	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x400029f	        0x488d0480	                  lea rax, [rax + rax*4]	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x40002a3	          0x4889c6	                            mov rsi, rax	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x40002a6	        0x48c1e604	                              shl rsi, 4	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x40002aa	          0x4829c6	                            sub rsi, rax	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x40002ad	    0x4881c6000000	                              add rsi, 0	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x40002b4	          0x4c89e7	                            mov rdi, r12	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x40002b7	      0xe800000000	                          call 0x40002bc	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x40002bc	          0x4189c5	                           mov r13d, eax	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x40002bf	      0xe991000000	                           jmp 0x4000355	       118	advice.c	FUNCTION_4	IF_2	CALL_6
0x40002c4	           0xfb610	                   movzx edx, byte [rax]	       484	git-compat-util.h	FUNCTION_39	DO_1	IF_1
0x40002c7	            0x84d2	                             test dl, dl	       484	git-compat-util.h	FUNCTION_39	DO_1	IF_1
0x40002c9	            0x7415	                            je 0x40002e0	       484	git-compat-util.h	FUNCTION_39	DO_1	IF_1
0x40002cb	        0x4883c301	                              add rbx, 1	       488	git-compat-util.h	FUNCTION_39	DO_1
0x40002cf	        0x4883c001	                              add rax, 1	       488	git-compat-util.h	FUNCTION_39	DO_1
0x40002d3	          0x3a53ff	                  cmp dl, byte [rbx - 1]	       488	git-compat-util.h	FUNCTION_39	DO_1
0x40002d6	            0x74ec	                            je 0x40002c4	       488	git-compat-util.h	FUNCTION_39	DO_1
0x40002d8	    0x41bd00000000	                             mov r13d, 0	       122	advice.c	FUNCTION_4	IF_5
0x40002de	            0xeb75	                           jmp 0x4000355	       122	advice.c	FUNCTION_4	IF_5
0x40002e0	    0x41be00000000	                             mov r14d, 0	       484	git-compat-util.h	FUNCTION_39	DO_1	IF_1
0x40002e6	          0x4c89f0	                            mov rax, r14	       125	advice.c	FUNCTION_4	FOR_1	IF_6	CALL_9
0x40002e9	        0x48c1e004	                              shl rax, 4	       125	advice.c	FUNCTION_4	FOR_1	IF_6	CALL_9
0x40002ed	    0x488bb0000000	                    mov rsi, qword [rax]	       125	advice.c	FUNCTION_4	FOR_1	IF_6	CALL_9
0x40002f4	          0x4889df	                            mov rdi, rbx	       125	advice.c	FUNCTION_4	FOR_1	IF_6	CALL_9
0x40002f7	      0xe800000000	                          call 0x40002fc	       125	advice.c	FUNCTION_4	FOR_1	IF_6	CALL_9
0x40002fc	          0x4189c5	                           mov r13d, eax	       125	advice.c	FUNCTION_4	FOR_1	IF_6	CALL_9
0x40002ff	            0x85c0	                           test eax, eax	       125	advice.c	FUNCTION_4	FOR_1	IF_6	CALL_9
0x4000301	            0x7412	                            je 0x4000315	       125	advice.c	FUNCTION_4	FOR_1	IF_6	CALL_9
0x4000303	        0x4983c601	                              add r14, 1	       125	advice.c	FUNCTION_4	FOR_1	IF_6	CALL_9
0x4000307	        0x4983fe14	                           cmp r14, 0x14	       124	advice.c	FUNCTION_4	FOR_1	CALL_8
0x400030b	            0x75d9	                           jne 0x40002e6	       124	advice.c	FUNCTION_4	FOR_1	CALL_8
0x400030d	    0x41bd00000000	                             mov r13d, 0	       131	advice.c	FUNCTION_4
0x4000313	            0xeb40	                           jmp 0x4000355	       131	advice.c	FUNCTION_4
0x4000315	          0x4d63fe	                        movsxd r15, r14d	       127	advice.c	FUNCTION_4	FOR_1	CALL_10
0x4000318	        0x49c1e704	                              shl r15, 4	       127	advice.c	FUNCTION_4	FOR_1	CALL_10
0x400031c	    0x498b9f000000	                    mov rbx, qword [r15]	       127	advice.c	FUNCTION_4	FOR_1	CALL_10
0x4000323	          0x4c89e6	                            mov rsi, r12	       127	advice.c	FUNCTION_4	FOR_1	CALL_10
0x4000326	          0x4889ef	                            mov rdi, rbp	       127	advice.c	FUNCTION_4	FOR_1	CALL_10
0x4000329	      0xe800000000	                          call 0x400032e	       127	advice.c	FUNCTION_4	FOR_1	CALL_10
0x400032e	            0x8903	                    mov dword [rbx], eax	       127	advice.c	FUNCTION_4	FOR_1	CALL_10
0x4000330	            0xeb23	                           jmp 0x4000355	       128	advice.c	FUNCTION_4	FOR_1
0x4000332	      0xbe00000000	                              mov esi, 0	        38	advice.c	FUNCTION_1	IF_1	CALL_1
0x4000337	          0x4889df	                            mov rdi, rbx	        38	advice.c	FUNCTION_1	IF_1	CALL_1
0x400033a	      0xe800000000	                          call 0x400033f	        38	advice.c	FUNCTION_1	IF_1	CALL_1
0x400033f	            0x85c0	                           test eax, eax	        38	advice.c	FUNCTION_1	IF_1	CALL_1
0x4000341	     0xf851cffffff	                           jne 0x4000263	        38	advice.c	FUNCTION_1	IF_1	CALL_1
0x4000347	          0x4d85e4	                           test r12, r12	       116	advice.c	FUNCTION_4	IF_2	IF_4
0x400034a	     0xf854dffffff	                           jne 0x400029d	       116	advice.c	FUNCTION_4	IF_2	IF_4
0x4000350	      0xe935ffffff	                           jmp 0x400028a	       116	advice.c	FUNCTION_4	IF_2	IF_4
0x4000355	          0x4489e8	                           mov eax, r13d	       132	advice.c	FUNCTION_4
0x4000358	        0x4883c408	                              add rsp, 8	       132	advice.c	FUNCTION_4
0x400035c	              0x5b	                                 pop rbx	       132	advice.c	FUNCTION_4
0x400035d	              0x5d	                                 pop rbp	       132	advice.c	FUNCTION_4
0x400035e	            0x415c	                                 pop r12	       132	advice.c	FUNCTION_4
0x4000360	            0x415d	                                 pop r13	       132	advice.c	FUNCTION_4
0x4000362	            0x415e	                                 pop r14	       132	advice.c	FUNCTION_4
0x4000364	            0x415f	                                 pop r15	       132	advice.c	FUNCTION_4
0x4000366	              0xc3	                                     ret	       132	advice.c	FUNCTION_4
