argv_array_init	FOR,0:SWITCH,0:IF,0:DO,0:ELSE,0:CALL,0:WHILE,0:functions,0	12
0x4000092	              0x55	                                push rbp	         8	argv-array.c	FUNCTION_1
0x4000093	          0x4889e5	                            mov rbp, rsp	         8	argv-array.c	FUNCTION_1
0x4000096	        0x48897df8	                mov qword [rbp - 8], rdi	         8	argv-array.c	FUNCTION_1
0x400009a	        0x488b45f8	                mov rax, qword [rbp - 8]	         9	argv-array.c	FUNCTION_1
0x400009e	    0x48c700000000	                      mov qword [rax], 0	         9	argv-array.c	FUNCTION_1
0x40000a5	        0x488b45f8	                mov rax, qword [rbp - 8]	        10	argv-array.c	FUNCTION_1
0x40000a9	    0xc74008000000	                  mov dword [rax + 8], 0	        10	argv-array.c	FUNCTION_1
0x40000b0	        0x488b45f8	                mov rax, qword [rbp - 8]	        11	argv-array.c	FUNCTION_1
0x40000b4	    0xc7400c000000	                mov dword [rax + 0xc], 0	        11	argv-array.c	FUNCTION_1
0x40000bb	              0x90	                                     nop	        12	argv-array.c	FUNCTION_1
0x40000bc	              0x5d	                                 pop rbp	        12	argv-array.c	FUNCTION_1
0x40000bd	              0xc3	                                     ret	        12	argv-array.c	FUNCTION_1
argv_array_pushl	FOR,0:SWITCH,0:IF,0:DO,0:ELSE,0:CALL,4:WHILE,1:functions,0	59
0x400032b	              0x55	                                push rbp	        42	argv-array.c	FUNCTION_5
0x400032c	          0x4889e5	                            mov rbp, rsp	        42	argv-array.c	FUNCTION_5
0x400032f	    0x4881ecf00000	                           sub rsp, 0xf0	        42	argv-array.c	FUNCTION_5
0x4000336	    0x4889bd18ffff	             mov qword [rbp - 0xe8], rdi	        42	argv-array.c	FUNCTION_5
0x400033d	    0x4889b558ffff	             mov qword [rbp - 0xa8], rsi	        42	argv-array.c	FUNCTION_5
0x4000344	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	        42	argv-array.c	FUNCTION_5
0x400034b	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	        42	argv-array.c	FUNCTION_5
0x4000352	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	        42	argv-array.c	FUNCTION_5
0x4000359	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	        42	argv-array.c	FUNCTION_5
0x4000360	            0x84c0	                             test al, al	        42	argv-array.c	FUNCTION_5
0x4000362	            0x7420	                            je 0x4000384	        42	argv-array.c	FUNCTION_5
0x4000364	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	        42	argv-array.c	FUNCTION_5
0x4000368	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	        42	argv-array.c	FUNCTION_5
0x400036c	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	        42	argv-array.c	FUNCTION_5
0x4000370	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	        42	argv-array.c	FUNCTION_5
0x4000374	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	        42	argv-array.c	FUNCTION_5
0x4000378	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	        42	argv-array.c	FUNCTION_5
0x400037c	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	        42	argv-array.c	FUNCTION_5
0x4000380	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	        42	argv-array.c	FUNCTION_5
0x4000384	    0x64488b042528	                mov rax, qword fs:[0x28]	        42	argv-array.c	FUNCTION_5
0x400038d	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	        42	argv-array.c	FUNCTION_5
0x4000394	            0x31c0	                            xor eax, eax	        42	argv-array.c	FUNCTION_5
0x4000396	    0xc78530ffffff	               mov dword [rbp - 0xd0], 8	        46	argv-array.c	FUNCTION_5	CALL_1
0x40003a0	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	        46	argv-array.c	FUNCTION_5	CALL_1
0x40003aa	        0x488d4510	                   lea rax, [rbp + 0x10]	        46	argv-array.c	FUNCTION_5	CALL_1
0x40003ae	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	        46	argv-array.c	FUNCTION_5	CALL_1
0x40003b5	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	        46	argv-array.c	FUNCTION_5	CALL_1
0x40003bc	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	        46	argv-array.c	FUNCTION_5	CALL_1
0x40003c3	            0xeb19	                           jmp 0x40003de	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x40003c5	    0x488b9528ffff	             mov rdx, qword [rbp - 0xd8]	        48	argv-array.c	FUNCTION_5	CALL_3
0x40003cc	    0x488b8518ffff	             mov rax, qword [rbp - 0xe8]	        48	argv-array.c	FUNCTION_5	CALL_3
0x40003d3	          0x4889d6	                            mov rsi, rdx	        48	argv-array.c	FUNCTION_5	CALL_3
0x40003d6	          0x4889c7	                            mov rdi, rax	        48	argv-array.c	FUNCTION_5	CALL_3
0x40003d9	      0xe800000000	                          call 0x40003de	        48	argv-array.c	FUNCTION_5	CALL_3
0x40003de	    0x8b8530ffffff	             mov eax, dword [rbp - 0xd0]	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x40003e4	          0x83f830	                           cmp eax, 0x30	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x40003e7	            0x7323	                           jae 0x400040c	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x40003e9	    0x488b8540ffff	             mov rax, qword [rbp - 0xc0]	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x40003f0	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x40003f6	            0x89d2	                            mov edx, edx	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x40003f8	          0x4801d0	                            add rax, rdx	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x40003fb	    0x8b9530ffffff	             mov edx, dword [rbp - 0xd0]	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x4000401	          0x83c208	                              add edx, 8	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x4000404	    0x899530ffffff	             mov dword [rbp - 0xd0], edx	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x400040a	            0xeb12	                           jmp 0x400041e	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x400040c	    0x488b8538ffff	             mov rax, qword [rbp - 0xc8]	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x4000413	        0x488d5008	                      lea rdx, [rax + 8]	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x4000417	    0x48899538ffff	             mov qword [rbp - 0xc8], rdx	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x400041e	          0x488b00	                    mov rax, qword [rax]	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x4000421	    0x48898528ffff	             mov qword [rbp - 0xd8], rax	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x4000428	    0x4883bd28ffff	               cmp qword [rbp - 0xd8], 0	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x4000430	            0x7593	                           jne 0x40003c5	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x4000432	              0x90	                                     nop	        50	argv-array.c	FUNCTION_5
0x4000433	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	        50	argv-array.c	FUNCTION_5
0x400043a	    0x644833042528	                xor rax, qword fs:[0x28]	        50	argv-array.c	FUNCTION_5
0x4000443	            0x7405	                            je 0x400044a	        50	argv-array.c	FUNCTION_5
0x4000445	      0xe800000000	                          call 0x400044a	        50	argv-array.c	FUNCTION_5
0x400044a	              0xc9	                                   leave	        50	argv-array.c	FUNCTION_5
0x400044b	              0xc3	                                     ret	        50	argv-array.c	FUNCTION_5
argv_array_clear	FOR,1:SWITCH,0:IF,1:DO,0:ELSE,0:CALL,3:WHILE,0:functions,0	34
0x40005de	              0x55	                                push rbp	        88	argv-array.c	FUNCTION_9
0x40005df	          0x4889e5	                            mov rbp, rsp	        88	argv-array.c	FUNCTION_9
0x40005e2	        0x4883ec20	                           sub rsp, 0x20	        88	argv-array.c	FUNCTION_9
0x40005e6	        0x48897de8	             mov qword [rbp - 0x18], rdi	        88	argv-array.c	FUNCTION_9
0x40005ea	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        89	argv-array.c	FUNCTION_9	IF_1
0x40005ee	          0x488b00	                    mov rax, qword [rax]	        89	argv-array.c	FUNCTION_9	IF_1
0x40005f1	    0x483d00000000	                              cmp rax, 0	        89	argv-array.c	FUNCTION_9	IF_1
0x40005f7	            0x7447	                            je 0x4000640	        89	argv-array.c	FUNCTION_9	IF_1
0x40005f9	    0xc745fc000000	                  mov dword [rbp - 4], 0	        91	argv-array.c	FUNCTION_9	IF_1	FOR_1
0x4000600	            0xeb23	                           jmp 0x4000625	        91	argv-array.c	FUNCTION_9	IF_1	FOR_1
0x4000602	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        92	argv-array.c	FUNCTION_9	IF_1	CALL_1
0x4000606	          0x488b00	                    mov rax, qword [rax]	        92	argv-array.c	FUNCTION_9	IF_1	CALL_1
0x4000609	          0x8b55fc	                mov edx, dword [rbp - 4]	        92	argv-array.c	FUNCTION_9	IF_1	CALL_1
0x400060c	          0x4863d2	                         movsxd rdx, edx	        92	argv-array.c	FUNCTION_9	IF_1	CALL_1
0x400060f	        0x48c1e203	                              shl rdx, 3	        92	argv-array.c	FUNCTION_9	IF_1	CALL_1
0x4000613	          0x4801d0	                            add rax, rdx	        92	argv-array.c	FUNCTION_9	IF_1	CALL_1
0x4000616	          0x488b00	                    mov rax, qword [rax]	        92	argv-array.c	FUNCTION_9	IF_1	CALL_1
0x4000619	          0x4889c7	                            mov rdi, rax	        92	argv-array.c	FUNCTION_9	IF_1	CALL_1
0x400061c	      0xe800000000	                          call 0x4000621	        92	argv-array.c	FUNCTION_9	IF_1	CALL_1
0x4000621	        0x8345fc01	                  add dword [rbp - 4], 1	        91	argv-array.c	FUNCTION_9	IF_1	FOR_1
0x4000625	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        91	argv-array.c	FUNCTION_9	IF_1	FOR_1
0x4000629	          0x8b4008	                mov eax, dword [rax + 8]	        91	argv-array.c	FUNCTION_9	IF_1	FOR_1
0x400062c	          0x3b45fc	                cmp eax, dword [rbp - 4]	        91	argv-array.c	FUNCTION_9	IF_1	FOR_1
0x400062f	            0x7fd1	                            jg 0x4000602	        91	argv-array.c	FUNCTION_9	IF_1	FOR_1
0x4000631	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        93	argv-array.c	FUNCTION_9	IF_1	CALL_2
0x4000635	          0x488b00	                    mov rax, qword [rax]	        93	argv-array.c	FUNCTION_9	IF_1	CALL_2
0x4000638	          0x4889c7	                            mov rdi, rax	        93	argv-array.c	FUNCTION_9	IF_1	CALL_2
0x400063b	      0xe800000000	                          call 0x4000640	        93	argv-array.c	FUNCTION_9	IF_1	CALL_2
0x4000640	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        95	argv-array.c	FUNCTION_9	CALL_3
0x4000644	          0x4889c7	                            mov rdi, rax	        95	argv-array.c	FUNCTION_9	CALL_3
0x4000647	      0xe800000000	                          call 0x400064c	        95	argv-array.c	FUNCTION_9	CALL_3
0x400064c	              0x90	                                     nop	        96	argv-array.c	FUNCTION_9
0x400064d	              0xc9	                                   leave	        96	argv-array.c	FUNCTION_9
0x400064e	              0xc3	                                     ret	        96	argv-array.c	FUNCTION_9
argv_array_detach	FOR,0:SWITCH,0:IF,1:DO,0:ELSE,1:CALL,2:WHILE,0:functions,0	21
0x400064f	              0x55	                                push rbp	        99	argv-array.c	FUNCTION_10
0x4000650	          0x4889e5	                            mov rbp, rsp	        99	argv-array.c	FUNCTION_10
0x4000653	        0x4883ec20	                           sub rsp, 0x20	        99	argv-array.c	FUNCTION_10
0x4000657	        0x48897de8	             mov qword [rbp - 0x18], rdi	        99	argv-array.c	FUNCTION_10
0x400065b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       100	argv-array.c	FUNCTION_10	IF_1
0x400065f	          0x488b00	                    mov rax, qword [rax]	       100	argv-array.c	FUNCTION_10	IF_1
0x4000662	    0x483d00000000	                              cmp rax, 0	       100	argv-array.c	FUNCTION_10	IF_1
0x4000668	            0x7511	                           jne 0x400067b	       100	argv-array.c	FUNCTION_10	IF_1
0x400066a	      0xbe08000000	                              mov esi, 8	       101	argv-array.c	FUNCTION_10	CALL_1
0x400066f	      0xbf01000000	                              mov edi, 1	       101	argv-array.c	FUNCTION_10	CALL_1
0x4000674	      0xe800000000	                          call 0x4000679	       101	argv-array.c	FUNCTION_10	CALL_1
0x4000679	            0xeb1b	                           jmp 0x4000696	       101	argv-array.c	FUNCTION_10	CALL_1
0x400067b	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       103	argv-array.c	FUNCTION_10	ELSE_1
0x400067f	          0x488b00	                    mov rax, qword [rax]	       103	argv-array.c	FUNCTION_10	ELSE_1
0x4000682	        0x488945f8	                mov qword [rbp - 8], rax	       103	argv-array.c	FUNCTION_10	ELSE_1
0x4000686	        0x488b45e8	             mov rax, qword [rbp - 0x18]	       104	argv-array.c	FUNCTION_10	ELSE_1	CALL_2
0x400068a	          0x4889c7	                            mov rdi, rax	       104	argv-array.c	FUNCTION_10	ELSE_1	CALL_2
0x400068d	      0xe800000000	                          call 0x4000692	       104	argv-array.c	FUNCTION_10	ELSE_1	CALL_2
0x4000692	        0x488b45f8	                mov rax, qword [rbp - 8]	       105	argv-array.c	FUNCTION_10	ELSE_1
0x4000696	              0xc9	                                   leave	       107	argv-array.c	FUNCTION_10
0x4000697	              0xc3	                                     ret	       107	argv-array.c	FUNCTION_10
st_mult	FOR,0:SWITCH,0:IF,1:DO,0:ELSE,0:CALL,1:WHILE,0:functions,0	22
0x4000040	              0x55	                                push rbp	       794	git-compat-util.h	FUNCTION_25
0x4000041	          0x4889e5	                            mov rbp, rsp	       794	git-compat-util.h	FUNCTION_25
0x4000044	        0x4883ec10	                           sub rsp, 0x10	       794	git-compat-util.h	FUNCTION_25
0x4000048	        0x48897df8	                mov qword [rbp - 8], rdi	       794	git-compat-util.h	FUNCTION_25
0x400004c	        0x488975f0	             mov qword [rbp - 0x10], rsi	       794	git-compat-util.h	FUNCTION_25
0x4000050	      0x48837df800	                  cmp qword [rbp - 8], 0	       795	git-compat-util.h	FUNCTION_25	IF_1
0x4000055	            0x7430	                            je 0x4000087	       795	git-compat-util.h	FUNCTION_25	IF_1
0x4000057	    0x48c7c0ffffff	             mov rax, 0xffffffffffffffff	       795	git-compat-util.h	FUNCTION_25	IF_1
0x400005e	      0xba00000000	                              mov edx, 0	       795	git-compat-util.h	FUNCTION_25	IF_1
0x4000063	        0x48f775f8	                     div qword [rbp - 8]	       795	git-compat-util.h	FUNCTION_25	IF_1
0x4000067	        0x483b45f0	             cmp rax, qword [rbp - 0x10]	       795	git-compat-util.h	FUNCTION_25	IF_1
0x400006b	            0x731a	                           jae 0x4000087	       795	git-compat-util.h	FUNCTION_25	IF_1
0x400006d	        0x488b55f0	             mov rdx, qword [rbp - 0x10]	       796	git-compat-util.h	FUNCTION_25	IF_1	CALL_1
0x4000071	        0x488b45f8	                mov rax, qword [rbp - 8]	       796	git-compat-util.h	FUNCTION_25	IF_1	CALL_1
0x4000075	          0x4889c6	                            mov rsi, rax	       796	git-compat-util.h	FUNCTION_25	IF_1	CALL_1
0x4000078	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_25	IF_1	CALL_1
0x400007d	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_25	IF_1	CALL_1
0x4000082	      0xe800000000	                          call 0x4000087	       796	git-compat-util.h	FUNCTION_25	IF_1	CALL_1
0x4000087	        0x488b45f8	                mov rax, qword [rbp - 8]	       798	git-compat-util.h	FUNCTION_25
0x400008b	      0x480faf45f0	            imul rax, qword [rbp - 0x10]	       798	git-compat-util.h	FUNCTION_25
0x4000090	              0xc9	                                   leave	       799	git-compat-util.h	FUNCTION_25
0x4000091	              0xc3	                                     ret	       799	git-compat-util.h	FUNCTION_25
argv_array_pop	FOR,0:SWITCH,0:IF,1:DO,0:ELSE,0:CALL,1:WHILE,0:functions,0	37
0x4000488	              0x55	                                push rbp	        59	argv-array.c	FUNCTION_7
0x4000489	          0x4889e5	                            mov rbp, rsp	        59	argv-array.c	FUNCTION_7
0x400048c	        0x4883ec10	                           sub rsp, 0x10	        59	argv-array.c	FUNCTION_7
0x4000490	        0x48897df8	                mov qword [rbp - 8], rdi	        59	argv-array.c	FUNCTION_7
0x4000494	        0x488b45f8	                mov rax, qword [rbp - 8]	        60	argv-array.c	FUNCTION_7	IF_1
0x4000498	          0x8b4008	                mov eax, dword [rax + 8]	        60	argv-array.c	FUNCTION_7	IF_1
0x400049b	            0x85c0	                           test eax, eax	        60	argv-array.c	FUNCTION_7	IF_1
0x400049d	            0x745b	                            je 0x40004fa	        60	argv-array.c	FUNCTION_7	IF_1
0x400049f	        0x488b45f8	                mov rax, qword [rbp - 8]	        62	argv-array.c	FUNCTION_7	CALL_1
0x40004a3	          0x488b10	                    mov rdx, qword [rax]	        62	argv-array.c	FUNCTION_7	CALL_1
0x40004a6	        0x488b45f8	                mov rax, qword [rbp - 8]	        62	argv-array.c	FUNCTION_7	CALL_1
0x40004aa	          0x8b4008	                mov eax, dword [rax + 8]	        62	argv-array.c	FUNCTION_7	CALL_1
0x40004ad	            0x4898	                                    cdqe	        62	argv-array.c	FUNCTION_7	CALL_1
0x40004af	        0x48c1e003	                              shl rax, 3	        62	argv-array.c	FUNCTION_7	CALL_1
0x40004b3	        0x4883e808	                              sub rax, 8	        62	argv-array.c	FUNCTION_7	CALL_1
0x40004b7	          0x4801d0	                            add rax, rdx	        62	argv-array.c	FUNCTION_7	CALL_1
0x40004ba	          0x488b00	                    mov rax, qword [rax]	        62	argv-array.c	FUNCTION_7	CALL_1
0x40004bd	          0x4889c7	                            mov rdi, rax	        62	argv-array.c	FUNCTION_7	CALL_1
0x40004c0	      0xe800000000	                          call 0x40004c5	        62	argv-array.c	FUNCTION_7	CALL_1
0x40004c5	        0x488b45f8	                mov rax, qword [rbp - 8]	        63	argv-array.c	FUNCTION_7
0x40004c9	          0x488b10	                    mov rdx, qword [rax]	        63	argv-array.c	FUNCTION_7
0x40004cc	        0x488b45f8	                mov rax, qword [rbp - 8]	        63	argv-array.c	FUNCTION_7
0x40004d0	          0x8b4008	                mov eax, dword [rax + 8]	        63	argv-array.c	FUNCTION_7
0x40004d3	            0x4898	                                    cdqe	        63	argv-array.c	FUNCTION_7
0x40004d5	        0x48c1e003	                              shl rax, 3	        63	argv-array.c	FUNCTION_7
0x40004d9	        0x4883e808	                              sub rax, 8	        63	argv-array.c	FUNCTION_7
0x40004dd	          0x4801d0	                            add rax, rdx	        63	argv-array.c	FUNCTION_7
0x40004e0	    0x48c700000000	                      mov qword [rax], 0	        63	argv-array.c	FUNCTION_7
0x40004e7	        0x488b45f8	                mov rax, qword [rbp - 8]	        64	argv-array.c	FUNCTION_7
0x40004eb	          0x8b4008	                mov eax, dword [rax + 8]	        64	argv-array.c	FUNCTION_7
0x40004ee	          0x8d50ff	                      lea edx, [rax - 1]	        64	argv-array.c	FUNCTION_7
0x40004f1	        0x488b45f8	                mov rax, qword [rbp - 8]	        64	argv-array.c	FUNCTION_7
0x40004f5	          0x895008	                mov dword [rax + 8], edx	        64	argv-array.c	FUNCTION_7
0x40004f8	            0xeb01	                           jmp 0x40004fb	        64	argv-array.c	FUNCTION_7
0x40004fa	              0x90	                                     nop	        61	argv-array.c	FUNCTION_7	IF_1
0x40004fb	              0xc9	                                   leave	        65	argv-array.c	FUNCTION_7
0x40004fc	              0xc3	                                     ret	        65	argv-array.c	FUNCTION_7
argv_array_push	FOR,0:SWITCH,0:IF,0:DO,0:ELSE,0:CALL,2:WHILE,0:functions,0	16
0x40001de	              0x55	                                push rbp	        25	argv-array.c	FUNCTION_3
0x40001df	          0x4889e5	                            mov rbp, rsp	        25	argv-array.c	FUNCTION_3
0x40001e2	        0x4883ec10	                           sub rsp, 0x10	        25	argv-array.c	FUNCTION_3
0x40001e6	        0x48897df8	                mov qword [rbp - 8], rdi	        25	argv-array.c	FUNCTION_3
0x40001ea	        0x488975f0	             mov qword [rbp - 0x10], rsi	        25	argv-array.c	FUNCTION_3
0x40001ee	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        26	argv-array.c	FUNCTION_3	CALL_2
0x40001f2	          0x4889c7	                            mov rdi, rax	        26	argv-array.c	FUNCTION_3	CALL_2
0x40001f5	      0xe800000000	                          call 0x40001fa	        26	argv-array.c	FUNCTION_3	CALL_2
0x40001fa	          0x4889c2	                            mov rdx, rax	        26	argv-array.c	FUNCTION_3	CALL_2
0x40001fd	        0x488b45f8	                mov rax, qword [rbp - 8]	        26	argv-array.c	FUNCTION_3	CALL_2
0x4000201	          0x4889d6	                            mov rsi, rdx	        26	argv-array.c	FUNCTION_3	CALL_2
0x4000204	          0x4889c7	                            mov rdi, rax	        26	argv-array.c	FUNCTION_3	CALL_2
0x4000207	      0xe8b2feffff	          call sym.argv_array_push_nodup	        26	argv-array.c	FUNCTION_3	CALL_2
0x400020c	              0x90	                                     nop	        27	argv-array.c	FUNCTION_3
0x400020d	              0xc9	                                   leave	        27	argv-array.c	FUNCTION_3
0x400020e	              0xc3	                                     ret	        27	argv-array.c	FUNCTION_3
argv_array_split	FOR,1:SWITCH,0:IF,1:DO,0:ELSE,0:CALL,2:WHILE,3:functions,0	69
0x40004fd	              0x55	                                push rbp	        68	argv-array.c	FUNCTION_8
0x40004fe	          0x4889e5	                            mov rbp, rsp	        68	argv-array.c	FUNCTION_8
0x4000501	        0x4883ec20	                           sub rsp, 0x20	        68	argv-array.c	FUNCTION_8
0x4000505	        0x48897de8	             mov qword [rbp - 0x18], rdi	        68	argv-array.c	FUNCTION_8
0x4000509	        0x488975e0	             mov qword [rbp - 0x20], rsi	        68	argv-array.c	FUNCTION_8
0x400050d	            0xeb05	                           jmp 0x4000514	        69	argv-array.c	FUNCTION_8	WHILE_1
0x400050f	      0x488345e001	               add qword [rbp - 0x20], 1	        70	argv-array.c	FUNCTION_8	WHILE_1
0x4000514	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        69	argv-array.c	FUNCTION_8	WHILE_1
0x4000518	           0xfb600	                   movzx eax, byte [rax]	        69	argv-array.c	FUNCTION_8	WHILE_1
0x400051b	           0xfb6c0	                           movzx eax, al	        69	argv-array.c	FUNCTION_8	WHILE_1
0x400051e	            0x4898	                                    cdqe	        69	argv-array.c	FUNCTION_8	WHILE_1
0x4000520	     0xfb680000000	                   movzx eax, byte [rax]	        69	argv-array.c	FUNCTION_8	WHILE_1
0x4000527	           0xfb6c0	                           movzx eax, al	        69	argv-array.c	FUNCTION_8	WHILE_1
0x400052a	          0x83e001	                              and eax, 1	        69	argv-array.c	FUNCTION_8	WHILE_1
0x400052d	            0x85c0	                           test eax, eax	        69	argv-array.c	FUNCTION_8	WHILE_1
0x400052f	            0x75de	                           jne 0x400050f	        69	argv-array.c	FUNCTION_8	WHILE_1
0x4000531	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        72	argv-array.c	FUNCTION_8	FOR_1
0x4000535	        0x488945f8	                mov qword [rbp - 8], rax	        72	argv-array.c	FUNCTION_8	FOR_1
0x4000539	        0x488b45f8	                mov rax, qword [rbp - 8]	        74	argv-array.c	FUNCTION_8	FOR_1	IF_1
0x400053d	           0xfb600	                   movzx eax, byte [rax]	        74	argv-array.c	FUNCTION_8	FOR_1	IF_1
0x4000540	            0x84c0	                             test al, al	        74	argv-array.c	FUNCTION_8	FOR_1	IF_1
0x4000542	     0xf8492000000	                            je 0x40005da	        74	argv-array.c	FUNCTION_8	FOR_1	IF_1
0x4000548	            0xeb05	                           jmp 0x400054f	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2
0x400054a	      0x488345f801	                  add qword [rbp - 8], 1	        78	argv-array.c	FUNCTION_8	FOR_1	WHILE_2
0x400054f	        0x488b45f8	                mov rax, qword [rbp - 8]	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2
0x4000553	           0xfb600	                   movzx eax, byte [rax]	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2
0x4000556	            0x84c0	                             test al, al	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2
0x4000558	            0x741d	                            je 0x4000577	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2
0x400055a	        0x488b45f8	                mov rax, qword [rbp - 8]	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2
0x400055e	           0xfb600	                   movzx eax, byte [rax]	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2
0x4000561	           0xfb6c0	                           movzx eax, al	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2
0x4000564	            0x4898	                                    cdqe	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2
0x4000566	     0xfb680000000	                   movzx eax, byte [rax]	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2
0x400056d	           0xfb6c0	                           movzx eax, al	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2
0x4000570	          0x83e001	                              and eax, 1	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2
0x4000573	            0x85c0	                           test eax, eax	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2
0x4000575	            0x74d3	                            je 0x400054a	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2
0x4000577	        0x488b55f8	                mov rdx, qword [rbp - 8]	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_2
0x400057b	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_2
0x400057f	          0x4829c2	                            sub rdx, rax	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_2
0x4000582	          0x4889d0	                            mov rax, rdx	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_2
0x4000585	          0x4889c2	                            mov rdx, rax	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_2
0x4000588	        0x488b45e0	             mov rax, qword [rbp - 0x20]	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_2
0x400058c	          0x4889d6	                            mov rsi, rdx	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_2
0x400058f	          0x4889c7	                            mov rdi, rax	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_2
0x4000592	      0xe800000000	                          call 0x4000597	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_2
0x4000597	          0x4889c2	                            mov rdx, rax	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_2
0x400059a	        0x488b45e8	             mov rax, qword [rbp - 0x18]	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_2
0x400059e	          0x4889d6	                            mov rsi, rdx	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_2
0x40005a1	          0x4889c7	                            mov rdi, rax	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_2
0x40005a4	      0xe815fbffff	          call sym.argv_array_push_nodup	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_2
0x40005a9	            0xeb05	                           jmp 0x40005b0	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3
0x40005ab	      0x488345f801	                  add qword [rbp - 8], 1	        82	argv-array.c	FUNCTION_8	FOR_1	WHILE_3
0x40005b0	        0x488b45f8	                mov rax, qword [rbp - 8]	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3
0x40005b4	           0xfb600	                   movzx eax, byte [rax]	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3
0x40005b7	           0xfb6c0	                           movzx eax, al	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3
0x40005ba	            0x4898	                                    cdqe	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3
0x40005bc	     0xfb680000000	                   movzx eax, byte [rax]	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3
0x40005c3	           0xfb6c0	                           movzx eax, al	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3
0x40005c6	          0x83e001	                              and eax, 1	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3
0x40005c9	            0x85c0	                           test eax, eax	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3
0x40005cb	            0x75de	                           jne 0x40005ab	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3
0x40005cd	        0x488b45f8	                mov rax, qword [rbp - 8]	        83	argv-array.c	FUNCTION_8	FOR_1
0x40005d1	        0x488945e0	             mov qword [rbp - 0x20], rax	        83	argv-array.c	FUNCTION_8	FOR_1
0x40005d5	      0xe957ffffff	                           jmp 0x4000531	        84	argv-array.c	FUNCTION_8	FOR_1
0x40005da	              0x90	                                     nop	        75	argv-array.c	FUNCTION_8	FOR_1	IF_1
0x40005db	              0x90	                                     nop	        85	argv-array.c	FUNCTION_8
0x40005dc	              0xc9	                                   leave	        85	argv-array.c	FUNCTION_8
0x40005dd	              0xc3	                                     ret	        85	argv-array.c	FUNCTION_8
argv_array_push_nodup	FOR,0:SWITCH,0:IF,1:DO,0:ELSE,0:CALL,1:WHILE,0:functions,0	91
0x40000be	              0x55	                                push rbp	        15	argv-array.c	FUNCTION_2
0x40000bf	          0x4889e5	                            mov rbp, rsp	        15	argv-array.c	FUNCTION_2
0x40000c2	        0x4883ec10	                           sub rsp, 0x10	        15	argv-array.c	FUNCTION_2
0x40000c6	        0x48897df8	                mov qword [rbp - 8], rdi	        15	argv-array.c	FUNCTION_2
0x40000ca	        0x488975f0	             mov qword [rbp - 0x10], rsi	        15	argv-array.c	FUNCTION_2
0x40000ce	        0x488b45f8	                mov rax, qword [rbp - 8]	        16	argv-array.c	FUNCTION_2	IF_1
0x40000d2	          0x488b00	                    mov rax, qword [rax]	        16	argv-array.c	FUNCTION_2	IF_1
0x40000d5	    0x483d00000000	                              cmp rax, 0	        16	argv-array.c	FUNCTION_2	IF_1
0x40000db	            0x750b	                           jne 0x40000e8	        16	argv-array.c	FUNCTION_2	IF_1
0x40000dd	        0x488b45f8	                mov rax, qword [rbp - 8]	        17	argv-array.c	FUNCTION_2	IF_1
0x40000e1	    0x48c700000000	                      mov qword [rax], 0	        17	argv-array.c	FUNCTION_2	IF_1
0x40000e8	        0x488b45f8	                mov rax, qword [rbp - 8]	        19	argv-array.c	FUNCTION_2	CALL_1
0x40000ec	          0x8b4008	                mov eax, dword [rax + 8]	        19	argv-array.c	FUNCTION_2	CALL_1
0x40000ef	          0x8d5002	                      lea edx, [rax + 2]	        19	argv-array.c	FUNCTION_2	CALL_1
0x40000f2	        0x488b45f8	                mov rax, qword [rbp - 8]	        19	argv-array.c	FUNCTION_2	CALL_1
0x40000f6	          0x8b400c	              mov eax, dword [rax + 0xc]	        19	argv-array.c	FUNCTION_2	CALL_1
0x40000f9	            0x39c2	                            cmp edx, eax	        19	argv-array.c	FUNCTION_2	CALL_1
0x40000fb	     0xf8e93000000	                           jle 0x4000194	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000101	        0x488b45f8	                mov rax, qword [rbp - 8]	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000105	          0x8b400c	              mov eax, dword [rax + 0xc]	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000108	          0x8d5010	                   lea edx, [rax + 0x10]	        19	argv-array.c	FUNCTION_2	CALL_1
0x400010b	            0x89d0	                            mov eax, edx	        19	argv-array.c	FUNCTION_2	CALL_1
0x400010d	             0x1c0	                            add eax, eax	        19	argv-array.c	FUNCTION_2	CALL_1
0x400010f	             0x1d0	                            add eax, edx	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000111	            0x89c2	                            mov edx, eax	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000113	          0xc1ea1f	                           shr edx, 0x1f	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000116	             0x1d0	                            add eax, edx	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000118	            0xd1f8	                              sar eax, 1	        19	argv-array.c	FUNCTION_2	CALL_1
0x400011a	            0x89c2	                            mov edx, eax	        19	argv-array.c	FUNCTION_2	CALL_1
0x400011c	        0x488b45f8	                mov rax, qword [rbp - 8]	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000120	          0x8b4008	                mov eax, dword [rax + 8]	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000123	          0x83c002	                              add eax, 2	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000126	            0x39c2	                            cmp edx, eax	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000128	            0x7d13	                           jge 0x400013d	        19	argv-array.c	FUNCTION_2	CALL_1
0x400012a	        0x488b45f8	                mov rax, qword [rbp - 8]	        19	argv-array.c	FUNCTION_2	CALL_1
0x400012e	          0x8b4008	                mov eax, dword [rax + 8]	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000131	          0x8d5002	                      lea edx, [rax + 2]	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000134	        0x488b45f8	                mov rax, qword [rbp - 8]	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000138	          0x89500c	              mov dword [rax + 0xc], edx	        19	argv-array.c	FUNCTION_2	CALL_1
0x400013b	            0xeb22	                           jmp 0x400015f	        19	argv-array.c	FUNCTION_2	CALL_1
0x400013d	        0x488b45f8	                mov rax, qword [rbp - 8]	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000141	          0x8b400c	              mov eax, dword [rax + 0xc]	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000144	          0x8d5010	                   lea edx, [rax + 0x10]	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000147	            0x89d0	                            mov eax, edx	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000149	             0x1c0	                            add eax, eax	        19	argv-array.c	FUNCTION_2	CALL_1
0x400014b	             0x1d0	                            add eax, edx	        19	argv-array.c	FUNCTION_2	CALL_1
0x400014d	            0x89c2	                            mov edx, eax	        19	argv-array.c	FUNCTION_2	CALL_1
0x400014f	          0xc1ea1f	                           shr edx, 0x1f	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000152	             0x1d0	                            add eax, edx	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000154	            0xd1f8	                              sar eax, 1	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000156	            0x89c2	                            mov edx, eax	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000158	        0x488b45f8	                mov rax, qword [rbp - 8]	        19	argv-array.c	FUNCTION_2	CALL_1
0x400015c	          0x89500c	              mov dword [rax + 0xc], edx	        19	argv-array.c	FUNCTION_2	CALL_1
0x400015f	        0x488b45f8	                mov rax, qword [rbp - 8]	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000163	          0x8b400c	              mov eax, dword [rax + 0xc]	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000166	            0x4898	                                    cdqe	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000168	          0x4889c6	                            mov rsi, rax	        19	argv-array.c	FUNCTION_2	CALL_1
0x400016b	      0xbf08000000	                              mov edi, 8	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000170	      0xe8cbfeffff	                        call sym.st_mult	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000175	          0x4889c2	                            mov rdx, rax	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000178	        0x488b45f8	                mov rax, qword [rbp - 8]	        19	argv-array.c	FUNCTION_2	CALL_1
0x400017c	          0x488b00	                    mov rax, qword [rax]	        19	argv-array.c	FUNCTION_2	CALL_1
0x400017f	          0x4889d6	                            mov rsi, rdx	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000182	          0x4889c7	                            mov rdi, rax	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000185	      0xe800000000	                          call 0x400018a	        19	argv-array.c	FUNCTION_2	CALL_1
0x400018a	          0x4889c2	                            mov rdx, rax	        19	argv-array.c	FUNCTION_2	CALL_1
0x400018d	        0x488b45f8	                mov rax, qword [rbp - 8]	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000191	          0x488910	                    mov qword [rax], rdx	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000194	        0x488b45f8	                mov rax, qword [rbp - 8]	        20	argv-array.c	FUNCTION_2
0x4000198	          0x488b30	                    mov rsi, qword [rax]	        20	argv-array.c	FUNCTION_2
0x400019b	        0x488b45f8	                mov rax, qword [rbp - 8]	        20	argv-array.c	FUNCTION_2
0x400019f	          0x8b4008	                mov eax, dword [rax + 8]	        20	argv-array.c	FUNCTION_2
0x40001a2	          0x8d4801	                      lea ecx, [rax + 1]	        20	argv-array.c	FUNCTION_2
0x40001a5	        0x488b55f8	                mov rdx, qword [rbp - 8]	        20	argv-array.c	FUNCTION_2
0x40001a9	          0x894a08	                mov dword [rdx + 8], ecx	        20	argv-array.c	FUNCTION_2
0x40001ac	            0x4898	                                    cdqe	        20	argv-array.c	FUNCTION_2
0x40001ae	        0x48c1e003	                              shl rax, 3	        20	argv-array.c	FUNCTION_2
0x40001b2	        0x488d1406	                    lea rdx, [rsi + rax]	        20	argv-array.c	FUNCTION_2
0x40001b6	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        20	argv-array.c	FUNCTION_2
0x40001ba	          0x488902	                    mov qword [rdx], rax	        20	argv-array.c	FUNCTION_2
0x40001bd	        0x488b45f8	                mov rax, qword [rbp - 8]	        21	argv-array.c	FUNCTION_2
0x40001c1	          0x488b10	                    mov rdx, qword [rax]	        21	argv-array.c	FUNCTION_2
0x40001c4	        0x488b45f8	                mov rax, qword [rbp - 8]	        21	argv-array.c	FUNCTION_2
0x40001c8	          0x8b4008	                mov eax, dword [rax + 8]	        21	argv-array.c	FUNCTION_2
0x40001cb	            0x4898	                                    cdqe	        21	argv-array.c	FUNCTION_2
0x40001cd	        0x48c1e003	                              shl rax, 3	        21	argv-array.c	FUNCTION_2
0x40001d1	          0x4801d0	                            add rax, rdx	        21	argv-array.c	FUNCTION_2
0x40001d4	    0x48c700000000	                      mov qword [rax], 0	        21	argv-array.c	FUNCTION_2
0x40001db	              0x90	                                     nop	        22	argv-array.c	FUNCTION_2
0x40001dc	              0xc9	                                   leave	        22	argv-array.c	FUNCTION_2
0x40001dd	              0xc3	                                     ret	        22	argv-array.c	FUNCTION_2
argv_array_pushf	FOR,0:SWITCH,0:IF,0:DO,0:ELSE,0:CALL,5:WHILE,0:functions,0	53
0x400020f	              0x55	                                push rbp	        30	argv-array.c	FUNCTION_4
0x4000210	          0x4889e5	                            mov rbp, rsp	        30	argv-array.c	FUNCTION_4
0x4000213	    0x4881ec000100	                          sub rsp, 0x100	        30	argv-array.c	FUNCTION_4
0x400021a	    0x4889bd08ffff	             mov qword [rbp - 0xf8], rdi	        30	argv-array.c	FUNCTION_4
0x4000221	    0x4889b500ffff	            mov qword [rbp - 0x100], rsi	        30	argv-array.c	FUNCTION_4
0x4000228	    0x48899560ffff	             mov qword [rbp - 0xa0], rdx	        30	argv-array.c	FUNCTION_4
0x400022f	    0x48898d68ffff	             mov qword [rbp - 0x98], rcx	        30	argv-array.c	FUNCTION_4
0x4000236	    0x4c898570ffff	              mov qword [rbp - 0x90], r8	        30	argv-array.c	FUNCTION_4
0x400023d	    0x4c898d78ffff	              mov qword [rbp - 0x88], r9	        30	argv-array.c	FUNCTION_4
0x4000244	            0x84c0	                             test al, al	        30	argv-array.c	FUNCTION_4
0x4000246	            0x7420	                            je 0x4000268	        30	argv-array.c	FUNCTION_4
0x4000248	         0xf294580	       movaps xmmword [rbp - 0x80], xmm0	        30	argv-array.c	FUNCTION_4
0x400024c	         0xf294d90	       movaps xmmword [rbp - 0x70], xmm1	        30	argv-array.c	FUNCTION_4
0x4000250	         0xf2955a0	       movaps xmmword [rbp - 0x60], xmm2	        30	argv-array.c	FUNCTION_4
0x4000254	         0xf295db0	       movaps xmmword [rbp - 0x50], xmm3	        30	argv-array.c	FUNCTION_4
0x4000258	         0xf2965c0	       movaps xmmword [rbp - 0x40], xmm4	        30	argv-array.c	FUNCTION_4
0x400025c	         0xf296dd0	       movaps xmmword [rbp - 0x30], xmm5	        30	argv-array.c	FUNCTION_4
0x4000260	         0xf2975e0	       movaps xmmword [rbp - 0x20], xmm6	        30	argv-array.c	FUNCTION_4
0x4000264	         0xf297df0	       movaps xmmword [rbp - 0x10], xmm7	        30	argv-array.c	FUNCTION_4
0x4000268	    0x64488b042528	                mov rax, qword fs:[0x28]	        30	argv-array.c	FUNCTION_4
0x4000271	    0x48898548ffff	             mov qword [rbp - 0xb8], rax	        30	argv-array.c	FUNCTION_4
0x4000278	            0x31c0	                            xor eax, eax	        30	argv-array.c	FUNCTION_4
0x400027a	    0x48c78510ffff	               mov qword [rbp - 0xf0], 0	        32	argv-array.c	FUNCTION_4
0x4000285	    0x48c78518ffff	               mov qword [rbp - 0xe8], 0	        32	argv-array.c	FUNCTION_4
0x4000290	    0x48c78520ffff	               mov qword [rbp - 0xe0], 0	        32	argv-array.c	FUNCTION_4
0x400029b	    0xc78530ffffff	           mov dword [rbp - 0xd0], 0x10 	        34	argv-array.c	FUNCTION_4	CALL_1
0x40002a5	    0xc78534ffffff	           mov dword [rbp - 0xcc], 0x30 	        34	argv-array.c	FUNCTION_4	CALL_1
0x40002af	        0x488d4510	                   lea rax, [rbp + 0x10]	        34	argv-array.c	FUNCTION_4	CALL_1
0x40002b3	    0x48898538ffff	             mov qword [rbp - 0xc8], rax	        34	argv-array.c	FUNCTION_4	CALL_1
0x40002ba	    0x488d8550ffff	                   lea rax, [rbp - 0xb0]	        34	argv-array.c	FUNCTION_4	CALL_1
0x40002c1	    0x48898540ffff	             mov qword [rbp - 0xc0], rax	        34	argv-array.c	FUNCTION_4	CALL_1
0x40002c8	    0x488d9530ffff	                   lea rdx, [rbp - 0xd0]	        35	argv-array.c	FUNCTION_4	CALL_2
0x40002cf	    0x488b8d00ffff	            mov rcx, qword [rbp - 0x100]	        35	argv-array.c	FUNCTION_4	CALL_2
0x40002d6	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	        35	argv-array.c	FUNCTION_4	CALL_2
0x40002dd	          0x4889ce	                            mov rsi, rcx	        35	argv-array.c	FUNCTION_4	CALL_2
0x40002e0	          0x4889c7	                            mov rdi, rax	        35	argv-array.c	FUNCTION_4	CALL_2
0x40002e3	      0xe800000000	                          call 0x40002e8	        35	argv-array.c	FUNCTION_4	CALL_2
0x40002e8	    0x488d8510ffff	                   lea rax, [rbp - 0xf0]	        38	argv-array.c	FUNCTION_4	CALL_5
0x40002ef	      0xbe00000000	                              mov esi, 0	        38	argv-array.c	FUNCTION_4	CALL_5
0x40002f4	          0x4889c7	                            mov rdi, rax	        38	argv-array.c	FUNCTION_4	CALL_5
0x40002f7	      0xe800000000	                          call 0x40002fc	        38	argv-array.c	FUNCTION_4	CALL_5
0x40002fc	          0x4889c2	                            mov rdx, rax	        38	argv-array.c	FUNCTION_4	CALL_5
0x40002ff	    0x488b8508ffff	             mov rax, qword [rbp - 0xf8]	        38	argv-array.c	FUNCTION_4	CALL_5
0x4000306	          0x4889d6	                            mov rsi, rdx	        38	argv-array.c	FUNCTION_4	CALL_5
0x4000309	          0x4889c7	                            mov rdi, rax	        38	argv-array.c	FUNCTION_4	CALL_5
0x400030c	      0xe8adfdffff	          call sym.argv_array_push_nodup	        38	argv-array.c	FUNCTION_4	CALL_5
0x4000311	              0x90	                                     nop	        39	argv-array.c	FUNCTION_4
0x4000312	    0x488b8548ffff	             mov rax, qword [rbp - 0xb8]	        39	argv-array.c	FUNCTION_4
0x4000319	    0x644833042528	                xor rax, qword fs:[0x28]	        39	argv-array.c	FUNCTION_4
0x4000322	            0x7405	                            je 0x4000329	        39	argv-array.c	FUNCTION_4
0x4000324	      0xe800000000	                          call 0x4000329	        39	argv-array.c	FUNCTION_4
0x4000329	              0xc9	                                   leave	        39	argv-array.c	FUNCTION_4
0x400032a	              0xc3	                                     ret	        39	argv-array.c	FUNCTION_4
argv_array_pushv	FOR,1:SWITCH,0:IF,0:DO,0:ELSE,0:CALL,1:WHILE,0:functions,0	20
0x400044c	              0x55	                                push rbp	        53	argv-array.c	FUNCTION_6
0x400044d	          0x4889e5	                            mov rbp, rsp	        53	argv-array.c	FUNCTION_6
0x4000450	        0x4883ec10	                           sub rsp, 0x10	        53	argv-array.c	FUNCTION_6
0x4000454	        0x48897df8	                mov qword [rbp - 8], rdi	        53	argv-array.c	FUNCTION_6
0x4000458	        0x488975f0	             mov qword [rbp - 0x10], rsi	        53	argv-array.c	FUNCTION_6
0x400045c	            0xeb1b	                           jmp 0x4000479	        54	argv-array.c	FUNCTION_6	FOR_1
0x400045e	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        55	argv-array.c	FUNCTION_6	CALL_1
0x4000462	          0x488b10	                    mov rdx, qword [rax]	        55	argv-array.c	FUNCTION_6	CALL_1
0x4000465	        0x488b45f8	                mov rax, qword [rbp - 8]	        55	argv-array.c	FUNCTION_6	CALL_1
0x4000469	          0x4889d6	                            mov rsi, rdx	        55	argv-array.c	FUNCTION_6	CALL_1
0x400046c	          0x4889c7	                            mov rdi, rax	        55	argv-array.c	FUNCTION_6	CALL_1
0x400046f	      0xe800000000	                          call 0x4000474	        55	argv-array.c	FUNCTION_6	CALL_1
0x4000474	      0x488345f008	               add qword [rbp - 0x10], 8	        54	argv-array.c	FUNCTION_6	FOR_1
0x4000479	        0x488b45f0	             mov rax, qword [rbp - 0x10]	        54	argv-array.c	FUNCTION_6	FOR_1
0x400047d	          0x488b00	                    mov rax, qword [rax]	        54	argv-array.c	FUNCTION_6	FOR_1
0x4000480	          0x4885c0	                           test rax, rax	        54	argv-array.c	FUNCTION_6	FOR_1
0x4000483	            0x75d9	                           jne 0x400045e	        54	argv-array.c	FUNCTION_6	FOR_1
0x4000485	              0x90	                                     nop	        56	argv-array.c	FUNCTION_6
0x4000486	              0xc9	                                   leave	        56	argv-array.c	FUNCTION_6
0x4000487	              0xc3	                                     ret	        56	argv-array.c	FUNCTION_6
