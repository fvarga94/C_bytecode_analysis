argv_array_push	IF,0:CALL,2:functions,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0	9
0x40000f5	              0x53	                                push rbx	        25	argv-array.c	FUNCTION_3
0x40000f6	          0x4889fb	                            mov rbx, rdi	        25	argv-array.c	FUNCTION_3
0x40000f9	          0x4889f7	                            mov rdi, rsi	        26	argv-array.c	FUNCTION_3	CALL_2
0x40000fc	      0xe800000000	                          call 0x4000101	        26	argv-array.c	FUNCTION_3	CALL_2
0x4000101	          0x4889c6	                            mov rsi, rax	        26	argv-array.c	FUNCTION_3	CALL_2
0x4000104	          0x4889df	                            mov rdi, rbx	        26	argv-array.c	FUNCTION_3	CALL_2
0x4000107	      0xe834ffffff	          call sym.argv_array_push_nodup	        26	argv-array.c	FUNCTION_3	CALL_2
0x400010c	              0x5b	                                 pop rbx	        27	argv-array.c	FUNCTION_3
0x400010d	              0xc3	                                     ret	        27	argv-array.c	FUNCTION_3
argv_array_pushf	IF,0:CALL,5:functions,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0	45
0x400010e	              0x53	                                push rbx	        30	argv-array.c	FUNCTION_4
0x400010f	    0x4881ecf00000	                           sub rsp, 0xf0	        30	argv-array.c	FUNCTION_4
0x4000116	          0x4889fb	                            mov rbx, rdi	        30	argv-array.c	FUNCTION_4
0x4000119	      0x4889542450	             mov qword [rsp + 0x50], rdx	        30	argv-array.c	FUNCTION_4
0x400011e	      0x48894c2458	             mov qword [rsp + 0x58], rcx	        30	argv-array.c	FUNCTION_4
0x4000123	      0x4c89442460	              mov qword [rsp + 0x60], r8	        30	argv-array.c	FUNCTION_4
0x4000128	      0x4c894c2468	              mov qword [rsp + 0x68], r9	        30	argv-array.c	FUNCTION_4
0x400012d	            0x84c0	                             test al, al	        30	argv-array.c	FUNCTION_4
0x400012f	            0x743d	                            je 0x400016e	        30	argv-array.c	FUNCTION_4
0x4000131	       0xf29442470	       movaps xmmword [rsp + 0x70], xmm0	        30	argv-array.c	FUNCTION_4
0x4000136	     0xf298c248000	       movaps xmmword [rsp + 0x80], xmm1	        30	argv-array.c	FUNCTION_4
0x400013e	     0xf2994249000	       movaps xmmword [rsp + 0x90], xmm2	        30	argv-array.c	FUNCTION_4
0x4000146	     0xf299c24a000	       movaps xmmword [rsp + 0xa0], xmm3	        30	argv-array.c	FUNCTION_4
0x400014e	     0xf29a424b000	       movaps xmmword [rsp + 0xb0], xmm4	        30	argv-array.c	FUNCTION_4
0x4000156	     0xf29ac24c000	       movaps xmmword [rsp + 0xc0], xmm5	        30	argv-array.c	FUNCTION_4
0x400015e	     0xf29b424d000	       movaps xmmword [rsp + 0xd0], xmm6	        30	argv-array.c	FUNCTION_4
0x4000166	     0xf29bc24e000	       movaps xmmword [rsp + 0xe0], xmm7	        30	argv-array.c	FUNCTION_4
0x400016e	    0x64488b042528	                mov rax, qword fs:[0x28]	        30	argv-array.c	FUNCTION_4
0x4000177	      0x4889442438	             mov qword [rsp + 0x38], rax	        30	argv-array.c	FUNCTION_4
0x400017c	            0x31c0	                            xor eax, eax	        30	argv-array.c	FUNCTION_4
0x400017e	    0x48c704240000	                      mov qword [rsp], 0	        32	argv-array.c	FUNCTION_4
0x4000186	    0x48c744240800	                  mov qword [rsp + 8], 0	        32	argv-array.c	FUNCTION_4
0x400018f	    0x48c744241000	               mov qword [rsp + 0x10], 0	        32	argv-array.c	FUNCTION_4
0x4000198	    0xc74424201000	           mov dword [rsp + 0x20], 0x10 	        34	argv-array.c	FUNCTION_4	CALL_1
0x40001a0	    0xc74424243000	           mov dword [rsp + 0x24], 0x30 	        34	argv-array.c	FUNCTION_4	CALL_1
0x40001a8	    0x488d84240001	                  lea rax, [rsp + 0x100]	        34	argv-array.c	FUNCTION_4	CALL_1
0x40001b0	      0x4889442428	             mov qword [rsp + 0x28], rax	        34	argv-array.c	FUNCTION_4	CALL_1
0x40001b5	      0x488d442440	                   lea rax, [rsp + 0x40]	        34	argv-array.c	FUNCTION_4	CALL_1
0x40001ba	      0x4889442430	             mov qword [rsp + 0x30], rax	        34	argv-array.c	FUNCTION_4	CALL_1
0x40001bf	      0x488d542420	                   lea rdx, [rsp + 0x20]	        35	argv-array.c	FUNCTION_4	CALL_2
0x40001c4	          0x4889e7	                            mov rdi, rsp	        35	argv-array.c	FUNCTION_4	CALL_2
0x40001c7	      0xe800000000	                          call 0x40001cc	        35	argv-array.c	FUNCTION_4	CALL_2
0x40001cc	      0xbe00000000	                              mov esi, 0	        38	argv-array.c	FUNCTION_4	CALL_5
0x40001d1	          0x4889e7	                            mov rdi, rsp	        38	argv-array.c	FUNCTION_4	CALL_5
0x40001d4	      0xe800000000	                          call 0x40001d9	        38	argv-array.c	FUNCTION_4	CALL_5
0x40001d9	          0x4889c6	                            mov rsi, rax	        38	argv-array.c	FUNCTION_4	CALL_5
0x40001dc	          0x4889df	                            mov rdi, rbx	        38	argv-array.c	FUNCTION_4	CALL_5
0x40001df	      0xe85cfeffff	          call sym.argv_array_push_nodup	        38	argv-array.c	FUNCTION_4	CALL_5
0x40001e4	      0x488b442438	            mov rax, qword [rsp + 0x38] 	        39	argv-array.c	FUNCTION_4
0x40001e9	    0x644833042528	                xor rax, qword fs:[0x28]	        39	argv-array.c	FUNCTION_4
0x40001f2	            0x7405	                            je 0x40001f9	        39	argv-array.c	FUNCTION_4
0x40001f4	      0xe800000000	                          call 0x40001f9	        39	argv-array.c	FUNCTION_4
0x40001f9	    0x4881c4f00000	                           add rsp, 0xf0	        39	argv-array.c	FUNCTION_4
0x4000200	              0x5b	                                 pop rbx	        39	argv-array.c	FUNCTION_4
0x4000201	              0xc3	                                     ret	        39	argv-array.c	FUNCTION_4
argv_array_push_nodup	IF,1:CALL,1:functions,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0	46
0x4000040	              0x55	                                push rbp	        15	argv-array.c	FUNCTION_2
0x4000041	              0x53	                                push rbx	        15	argv-array.c	FUNCTION_2
0x4000042	        0x4883ec08	                              sub rsp, 8	        15	argv-array.c	FUNCTION_2
0x4000046	          0x4889fb	                            mov rbx, rdi	        15	argv-array.c	FUNCTION_2
0x4000049	          0x4889f5	                            mov rbp, rsi	        15	argv-array.c	FUNCTION_2
0x400004c	    0x48813f000000	                      cmp qword [rdi], 0	        16	argv-array.c	FUNCTION_2	IF_1
0x4000053	            0x7507	                           jne 0x400005c	        16	argv-array.c	FUNCTION_2	IF_1
0x4000055	    0x48c707000000	                      mov qword [rdi], 0	        17	argv-array.c	FUNCTION_2	IF_1
0x400005c	          0x8b4308	                mov eax, dword [rbx + 8]	        19	argv-array.c	FUNCTION_2	CALL_1
0x400005f	          0x8d5002	                      lea edx, [rax + 2]	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000062	          0x8b430c	              mov eax, dword [rbx + 0xc]	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000065	            0x39c2	                            cmp edx, eax	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000067	            0x7e4e	                           jle 0x40000b7	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000069	        0x8d444030	          lea eax, [rax + rax*2 + 0x30] 	        19	argv-array.c	FUNCTION_2	CALL_1
0x400006d	            0x89c6	                            mov esi, eax	        19	argv-array.c	FUNCTION_2	CALL_1
0x400006f	          0xc1ee1f	                           shr esi, 0x1f	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000072	             0x1c6	                            add esi, eax	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000074	            0xd1fe	                              sar esi, 1	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000076	            0x39f2	                            cmp edx, esi	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000078	           0xf4ff2	                          cmovg esi, edx	        19	argv-array.c	FUNCTION_2	CALL_1
0x400007b	          0x89730c	              mov dword [rbx + 0xc], esi	        19	argv-array.c	FUNCTION_2	CALL_1
0x400007e	          0x4863d6	                         movsxd rdx, esi	        19	argv-array.c	FUNCTION_2	CALL_1
0x4000081	    0x48b8ffffffff	         movabs rax, 0x1fffffffffffffff 	       795	git-compat-util.h	FUNCTION_25	IF_1	CALL_1
0x400008b	          0x4839c2	                            cmp rdx, rax	       795	git-compat-util.h	FUNCTION_25	IF_1	CALL_1
0x400008e	            0x7614	                           jbe 0x40000a4	       795	git-compat-util.h	FUNCTION_25	IF_1	CALL_1
0x4000090	      0xbe08000000	                              mov esi, 8	       796	git-compat-util.h	FUNCTION_25	IF_1	CALL_2
0x4000095	      0xbf00000000	                              mov edi, 0	       796	git-compat-util.h	FUNCTION_25	IF_1	CALL_2
0x400009a	      0xb800000000	                              mov eax, 0	       796	git-compat-util.h	FUNCTION_25	IF_1	CALL_2
0x400009f	      0xe800000000	                          call 0x40000a4	       796	git-compat-util.h	FUNCTION_25	IF_1	CALL_2
0x40000a4	    0x488d34d50000	                        lea rsi, [rdx*8]	        19	argv-array.c	FUNCTION_2	CALL_1
0x40000ac	          0x488b3b	                    mov rdi, qword [rbx]	        19	argv-array.c	FUNCTION_2	CALL_1
0x40000af	      0xe800000000	                          call 0x40000b4	        19	argv-array.c	FUNCTION_2	CALL_1
0x40000b4	          0x488903	                    mov qword [rbx], rax	        19	argv-array.c	FUNCTION_2	CALL_1
0x40000b7	          0x488b13	                    mov rdx, qword [rbx]	        20	argv-array.c	FUNCTION_2
0x40000ba	          0x8b4308	                mov eax, dword [rbx + 8]	        20	argv-array.c	FUNCTION_2
0x40000bd	          0x8d4801	                      lea ecx, [rax + 1]	        20	argv-array.c	FUNCTION_2
0x40000c0	          0x894b08	                mov dword [rbx + 8], ecx	        20	argv-array.c	FUNCTION_2
0x40000c3	            0x4898	                                    cdqe	        20	argv-array.c	FUNCTION_2
0x40000c5	        0x48892cc2	            mov qword [rdx + rax*8], rbp	        20	argv-array.c	FUNCTION_2
0x40000c9	        0x48635308	            movsxd rdx, dword [rbx + 8] 	        21	argv-array.c	FUNCTION_2
0x40000cd	          0x488b03	                    mov rax, qword [rbx]	        21	argv-array.c	FUNCTION_2
0x40000d0	    0x48c704d00000	              mov qword [rax + rdx*8], 0	        21	argv-array.c	FUNCTION_2
0x40000d8	        0x4883c408	                              add rsp, 8	        22	argv-array.c	FUNCTION_2
0x40000dc	              0x5b	                                 pop rbx	        22	argv-array.c	FUNCTION_2
0x40000dd	              0x5d	                                 pop rbp	        22	argv-array.c	FUNCTION_2
0x40000de	              0xc3	                                     ret	        22	argv-array.c	FUNCTION_2
argv_array_pop	IF,1:CALL,1:functions,0:SWITCH,0:ELSE,0:WHILE,0:FOR,0:DO,0	15
0x40002cf	          0x8b4708	                mov eax, dword [rdi + 8]	        60	argv-array.c	FUNCTION_7	IF_1
0x40002d2	            0x85c0	                           test eax, eax	        60	argv-array.c	FUNCTION_7	IF_1
0x40002d4	            0x7428	                            je 0x40002fe	        60	argv-array.c	FUNCTION_7	IF_1
0x40002d6	              0x53	                                push rbx	        59	argv-array.c	FUNCTION_7
0x40002d7	          0x4889fb	                            mov rbx, rdi	        59	argv-array.c	FUNCTION_7
0x40002da	            0x4898	                                    cdqe	        62	argv-array.c	FUNCTION_7	CALL_1
0x40002dc	          0x488b17	                    mov rdx, qword [rdi]	        62	argv-array.c	FUNCTION_7	CALL_1
0x40002df	      0x488b7cc2f8	        mov rdi, qword [rdx + rax*8 - 8]	        62	argv-array.c	FUNCTION_7	CALL_1
0x40002e4	      0xe800000000	                          call 0x40002e9	        62	argv-array.c	FUNCTION_7	CALL_1
0x40002e9	        0x48635308	            movsxd rdx, dword [rbx + 8] 	        63	argv-array.c	FUNCTION_7
0x40002ed	          0x488b03	                    mov rax, qword [rbx]	        63	argv-array.c	FUNCTION_7
0x40002f0	    0x48c744d0f800	          mov qword [rax + rdx*8 - 8], 0	        63	argv-array.c	FUNCTION_7
0x40002f9	        0x836b0801	                  sub dword [rbx + 8], 1	        64	argv-array.c	FUNCTION_7
0x40002fd	              0x5b	                                 pop rbx	        65	argv-array.c	FUNCTION_7
0x40002fe	            0xf3c3	                                     ret	        65	argv-array.c	FUNCTION_7
argv_array_pushl	IF,0:CALL,4:functions,0:SWITCH,0:ELSE,0:WHILE,1:FOR,0:DO,0	40
0x4000202	              0x53	                                push rbx	        42	argv-array.c	FUNCTION_5
0x4000203	        0x4883ec50	                           sub rsp, 0x50	        42	argv-array.c	FUNCTION_5
0x4000207	          0x4889fb	                            mov rbx, rdi	        42	argv-array.c	FUNCTION_5
0x400020a	      0x4889742428	             mov qword [rsp + 0x28], rsi	        42	argv-array.c	FUNCTION_5
0x400020f	      0x4889542430	             mov qword [rsp + 0x30], rdx	        42	argv-array.c	FUNCTION_5
0x4000214	      0x48894c2438	             mov qword [rsp + 0x38], rcx	        42	argv-array.c	FUNCTION_5
0x4000219	      0x4c89442440	              mov qword [rsp + 0x40], r8	        42	argv-array.c	FUNCTION_5
0x400021e	      0x4c894c2448	              mov qword [rsp + 0x48], r9	        42	argv-array.c	FUNCTION_5
0x4000223	    0x64488b042528	                mov rax, qword fs:[0x28]	        42	argv-array.c	FUNCTION_5
0x400022c	      0x4889442418	             mov qword [rsp + 0x18], rax	        42	argv-array.c	FUNCTION_5
0x4000231	            0x31c0	                            xor eax, eax	        42	argv-array.c	FUNCTION_5
0x4000233	    0xc70424080000	                      mov dword [rsp], 8	        46	argv-array.c	FUNCTION_5	CALL_1
0x400023a	      0x488d442460	                   lea rax, [rsp + 0x60]	        46	argv-array.c	FUNCTION_5	CALL_1
0x400023f	      0x4889442408	                mov qword [rsp + 8], rax	        46	argv-array.c	FUNCTION_5	CALL_1
0x4000244	      0x488d442420	                   lea rax, [rsp + 0x20]	        46	argv-array.c	FUNCTION_5	CALL_1
0x4000249	      0x4889442410	             mov qword [rsp + 0x10], rax	        46	argv-array.c	FUNCTION_5	CALL_1
0x400024e	            0xeb08	                           jmp 0x4000258	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x4000250	          0x4889df	                            mov rdi, rbx	        48	argv-array.c	FUNCTION_5	CALL_3
0x4000253	      0xe800000000	                          call 0x4000258	        48	argv-array.c	FUNCTION_5	CALL_3
0x4000258	          0x8b0424	                    mov eax, dword [rsp]	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x400025b	          0x83f82f	                           cmp eax, 0x2f	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x400025e	            0x770f	                            ja 0x400026f	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x4000260	            0x89c2	                            mov edx, eax	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x4000262	      0x4803542410	             add rdx, qword [rsp + 0x10]	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x4000267	          0x83c008	                              add eax, 8	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x400026a	          0x890424	                    mov dword [rsp], eax	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x400026d	            0xeb0e	                           jmp 0x400027d	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x400026f	      0x488b542408	                mov rdx, qword [rsp + 8]	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x4000274	        0x488d4208	                      lea rax, [rdx + 8]	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x4000278	      0x4889442408	                mov qword [rsp + 8], rax	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x400027d	          0x488b32	                    mov rsi, qword [rdx]	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x4000280	          0x4885f6	                           test rsi, rsi	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x4000283	            0x75cb	                           jne 0x4000250	        47	argv-array.c	FUNCTION_5	WHILE_1	CALL_2
0x4000285	      0x488b442418	            mov rax, qword [rsp + 0x18] 	        50	argv-array.c	FUNCTION_5
0x400028a	    0x644833042528	                xor rax, qword fs:[0x28]	        50	argv-array.c	FUNCTION_5
0x4000293	            0x7405	                            je 0x400029a	        50	argv-array.c	FUNCTION_5
0x4000295	      0xe800000000	                          call 0x400029a	        50	argv-array.c	FUNCTION_5
0x400029a	        0x4883c450	                           add rsp, 0x50	        50	argv-array.c	FUNCTION_5
0x400029e	              0x5b	                                 pop rbx	        50	argv-array.c	FUNCTION_5
0x400029f	              0xc3	                                     ret	        50	argv-array.c	FUNCTION_5
argv_array_clear	IF,1:CALL,3:functions,0:SWITCH,0:ELSE,0:WHILE,0:FOR,1:DO,0	25
0x4000398	              0x55	                                push rbp	        88	argv-array.c	FUNCTION_9
0x4000399	              0x53	                                push rbx	        88	argv-array.c	FUNCTION_9
0x400039a	        0x4883ec08	                              sub rsp, 8	        88	argv-array.c	FUNCTION_9
0x400039e	          0x4889fd	                            mov rbp, rdi	        88	argv-array.c	FUNCTION_9
0x40003a1	    0x48813f000000	                      cmp qword [rdi], 0	        89	argv-array.c	FUNCTION_9	IF_1
0x40003a8	            0x742c	                            je 0x40003d6	        89	argv-array.c	FUNCTION_9	IF_1
0x40003aa	        0x837f0800	                  cmp dword [rdi + 8], 0	        91	argv-array.c	FUNCTION_9	IF_1	FOR_1
0x40003ae	            0x7e1d	                           jle 0x40003cd	        91	argv-array.c	FUNCTION_9	IF_1	FOR_1
0x40003b0	      0xbb00000000	                              mov ebx, 0	        91	argv-array.c	FUNCTION_9	IF_1	FOR_1
0x40003b5	          0x4863d3	                         movsxd rdx, ebx	        92	argv-array.c	FUNCTION_9	IF_1	CALL_1
0x40003b8	        0x488b4500	                    mov rax, qword [rbp]	        92	argv-array.c	FUNCTION_9	IF_1	CALL_1
0x40003bc	        0x488b3cd0	            mov rdi, qword [rax + rdx*8]	        92	argv-array.c	FUNCTION_9	IF_1	CALL_1
0x40003c0	      0xe800000000	                          call 0x40003c5	        92	argv-array.c	FUNCTION_9	IF_1	CALL_1
0x40003c5	          0x83c301	                              add ebx, 1	        91	argv-array.c	FUNCTION_9	IF_1	FOR_1
0x40003c8	          0x395d08	                cmp dword [rbp + 8], ebx	        91	argv-array.c	FUNCTION_9	IF_1	FOR_1
0x40003cb	            0x7fe8	                            jg 0x40003b5	        91	argv-array.c	FUNCTION_9	IF_1	FOR_1
0x40003cd	        0x488b7d00	                    mov rdi, qword [rbp]	        93	argv-array.c	FUNCTION_9	IF_1	CALL_2
0x40003d1	      0xe800000000	                          call 0x40003d6	        93	argv-array.c	FUNCTION_9	IF_1	CALL_2
0x40003d6	    0x48c745000000	                      mov qword [rbp], 0	         9	argv-array.c	FUNCTION_1
0x40003de	    0xc74508000000	                  mov dword [rbp + 8], 0	        10	argv-array.c	FUNCTION_1
0x40003e5	    0xc7450c000000	                mov dword [rbp + 0xc], 0	        11	argv-array.c	FUNCTION_1
0x40003ec	        0x4883c408	                              add rsp, 8	        96	argv-array.c	FUNCTION_9
0x40003f0	              0x5b	                                 pop rbx	        96	argv-array.c	FUNCTION_9
0x40003f1	              0x5d	                                 pop rbp	        96	argv-array.c	FUNCTION_9
0x40003f2	              0xc3	                                     ret	        96	argv-array.c	FUNCTION_9
argv_array_split	IF,1:CALL,5:functions,0:SWITCH,0:ELSE,0:WHILE,3:FOR,1:DO,0	47
0x4000300	              0x55	                                push rbp	        68	argv-array.c	FUNCTION_8
0x4000301	              0x53	                                push rbx	        68	argv-array.c	FUNCTION_8
0x4000302	        0x4883ec08	                              sub rsp, 8	        68	argv-array.c	FUNCTION_8
0x4000306	          0x4889fd	                            mov rbp, rdi	        68	argv-array.c	FUNCTION_8
0x4000309	          0x4889f7	                            mov rdi, rsi	        68	argv-array.c	FUNCTION_8
0x400030c	           0xfb606	                   movzx eax, byte [rsi]	        69	argv-array.c	FUNCTION_8	WHILE_1	CALL_1
0x400030f	    0xf68000000000	                      test byte [rax], 1	        69	argv-array.c	FUNCTION_8	WHILE_1	CALL_1
0x4000316	            0x7410	                            je 0x4000328	        69	argv-array.c	FUNCTION_8	WHILE_1	CALL_1
0x4000318	        0x4883c701	                              add rdi, 1	        70	argv-array.c	FUNCTION_8	WHILE_1
0x400031c	           0xfb607	                   movzx eax, byte [rdi]	        69	argv-array.c	FUNCTION_8	WHILE_1	CALL_1
0x400031f	    0xf68000000000	                      test byte [rax], 1	        69	argv-array.c	FUNCTION_8	WHILE_1	CALL_1
0x4000326	            0x75f0	                           jne 0x4000318	        69	argv-array.c	FUNCTION_8	WHILE_1	CALL_1
0x4000328	           0xfb607	                   movzx eax, byte [rdi]	        74	argv-array.c	FUNCTION_8	FOR_1	IF_1
0x400032b	            0x84c0	                             test al, al	        74	argv-array.c	FUNCTION_8	FOR_1	IF_1
0x400032d	            0x7462	                            je 0x4000391	        74	argv-array.c	FUNCTION_8	FOR_1	IF_1
0x400032f	           0xfb6c0	                           movzx eax, al	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x4000332	    0xf68000000000	                      test byte [rax], 1	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x4000339	            0x751c	                           jne 0x4000357	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x400033b	          0x4889fb	                            mov rbx, rdi	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x400033e	        0x4883c301	                              add rbx, 1	        78	argv-array.c	FUNCTION_8	FOR_1	WHILE_2
0x4000342	           0xfb603	                   movzx eax, byte [rbx]	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x4000345	            0x84c0	                             test al, al	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x4000347	            0x7411	                            je 0x400035a	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x4000349	           0xfb6c0	                           movzx eax, al	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x400034c	    0xf68000000000	                      test byte [rax], 1	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x4000353	            0x74e9	                            je 0x400033e	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x4000355	            0xeb03	                           jmp 0x400035a	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x4000357	          0x4889fb	                            mov rbx, rdi	        77	argv-array.c	FUNCTION_8	FOR_1	WHILE_2	CALL_2
0x400035a	          0x4889de	                            mov rsi, rbx	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_4
0x400035d	          0x4829fe	                            sub rsi, rdi	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_4
0x4000360	      0xe800000000	                          call 0x4000365	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_4
0x4000365	          0x4889c6	                            mov rsi, rax	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_4
0x4000368	          0x4889ef	                            mov rdi, rbp	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_4
0x400036b	      0xe8d0fcffff	          call sym.argv_array_push_nodup	        79	argv-array.c	FUNCTION_8	FOR_1	CALL_4
0x4000370	           0xfb603	                   movzx eax, byte [rbx]	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3	CALL_5
0x4000373	    0xf68000000000	                      test byte [rax], 1	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3	CALL_5
0x400037a	            0x7410	                            je 0x400038c	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3	CALL_5
0x400037c	        0x4883c301	                              add rbx, 1	        82	argv-array.c	FUNCTION_8	FOR_1	WHILE_3
0x4000380	           0xfb603	                   movzx eax, byte [rbx]	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3	CALL_5
0x4000383	    0xf68000000000	                      test byte [rax], 1	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3	CALL_5
0x400038a	            0x75f0	                           jne 0x400037c	        81	argv-array.c	FUNCTION_8	FOR_1	WHILE_3	CALL_5
0x400038c	          0x4889df	                            mov rdi, rbx	        68	argv-array.c	FUNCTION_8
0x400038f	            0xeb97	                           jmp 0x4000328	        68	argv-array.c	FUNCTION_8
0x4000391	        0x4883c408	                              add rsp, 8	        85	argv-array.c	FUNCTION_8
0x4000395	              0x5b	                                 pop rbx	        85	argv-array.c	FUNCTION_8
0x4000396	              0x5d	                                 pop rbp	        85	argv-array.c	FUNCTION_8
0x4000397	              0xc3	                                     ret	        85	argv-array.c	FUNCTION_8
argv_array_pushv	IF,0:CALL,1:functions,0:SWITCH,0:ELSE,0:WHILE,0:FOR,1:DO,0	18
0x40002a0	              0x55	                                push rbp	        53	argv-array.c	FUNCTION_6
0x40002a1	              0x53	                                push rbx	        53	argv-array.c	FUNCTION_6
0x40002a2	        0x4883ec08	                              sub rsp, 8	        53	argv-array.c	FUNCTION_6
0x40002a6	          0x4889fd	                            mov rbp, rdi	        53	argv-array.c	FUNCTION_6
0x40002a9	          0x4889f3	                            mov rbx, rsi	        53	argv-array.c	FUNCTION_6
0x40002ac	          0x488b36	                    mov rsi, qword [rsi]	        54	argv-array.c	FUNCTION_6	FOR_1
0x40002af	          0x4885f6	                           test rsi, rsi	        54	argv-array.c	FUNCTION_6	FOR_1
0x40002b2	            0x7414	                            je 0x40002c8	        54	argv-array.c	FUNCTION_6	FOR_1
0x40002b4	          0x4889ef	                            mov rdi, rbp	        55	argv-array.c	FUNCTION_6	CALL_1
0x40002b7	      0xe800000000	                          call 0x40002bc	        55	argv-array.c	FUNCTION_6	CALL_1
0x40002bc	        0x4883c308	                              add rbx, 8	        54	argv-array.c	FUNCTION_6	FOR_1
0x40002c0	          0x488b33	                    mov rsi, qword [rbx]	        54	argv-array.c	FUNCTION_6	FOR_1
0x40002c3	          0x4885f6	                           test rsi, rsi	        54	argv-array.c	FUNCTION_6	FOR_1
0x40002c6	            0x75ec	                           jne 0x40002b4	        54	argv-array.c	FUNCTION_6	FOR_1
0x40002c8	        0x4883c408	                              add rsp, 8	        56	argv-array.c	FUNCTION_6
0x40002cc	              0x5b	                                 pop rbx	        56	argv-array.c	FUNCTION_6
0x40002cd	              0x5d	                                 pop rbp	        56	argv-array.c	FUNCTION_6
0x40002ce	              0xc3	                                     ret	        56	argv-array.c	FUNCTION_6
argv_array_detach	IF,1:CALL,2:functions,0:SWITCH,0:ELSE,1:WHILE,0:FOR,0:DO,0	14
0x40003f3	          0x488b07	                    mov rax, qword [rdi]	       100	argv-array.c	FUNCTION_10	IF_1
0x40003f6	    0x483d00000000	                              cmp rax, 0	       100	argv-array.c	FUNCTION_10	IF_1
0x40003fc	            0x7515	                           jne 0x4000413	       100	argv-array.c	FUNCTION_10	IF_1
0x40003fe	        0x4883ec08	                              sub rsp, 8	        99	argv-array.c	FUNCTION_10
0x4000402	      0xbe08000000	                              mov esi, 8	       101	argv-array.c	FUNCTION_10	CALL_1
0x4000407	      0xbf01000000	                              mov edi, 1	       101	argv-array.c	FUNCTION_10	CALL_1
0x400040c	      0xe800000000	                          call 0x4000411	       101	argv-array.c	FUNCTION_10	CALL_1
0x4000411	            0xeb16	                           jmp 0x4000429	       101	argv-array.c	FUNCTION_10	CALL_1
0x4000413	    0x48c707000000	                      mov qword [rdi], 0	         9	argv-array.c	FUNCTION_1
0x400041a	    0xc74708000000	                  mov dword [rdi + 8], 0	        10	argv-array.c	FUNCTION_1
0x4000421	    0xc7470c000000	                mov dword [rdi + 0xc], 0	        11	argv-array.c	FUNCTION_1
0x4000428	              0xc3	                                     ret	        11	argv-array.c	FUNCTION_1
0x4000429	        0x4883c408	                              add rsp, 8	       107	argv-array.c	FUNCTION_10
0x400042d	              0xc3	                                     ret	       107	argv-array.c	FUNCTION_10
